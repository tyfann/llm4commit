[
    {
        "msg": "build: remove d3 from devDependencies\nd3 is already in dependencies, which is sufficient",
        "diff": "diff --git a/package.json b/package.json \"conventional-commit-types\": \"^2.1.0\",\n\"copy-webpack-plugin\": \"^1.1.1\",\n\"cz-conventional-changelog\": \"^1.2.0\",\n- \"d3\": \"^3.5.17\",\n\"eslint\": \"^1.10.3\",\n\"eslint-config-standard\": \"^4.4.0\",\n\"eslint-plugin-promise\": \"^1.0.8\",\n",
        "date": "26.04.2017 09:28:55",
        "repo": "kitware/candela",
        "type": "build",
        "sim_msg": "chore(babel): remove babel-preset-gatsby",
        "sim_diff": "diff --git a/package.json b/package.json \"babel-eslint\": \"10.0.3\",\n\"babel-jest\": \"^24.9.0\",\n\"babel-plugin-module-resolver\": \"^3.2.0\",\n- \"babel-preset-gatsby\": \"^0.2.23\",\n\"commitizen\": \"^4.0.3\",\n\"cz-conventional-changelog\": \"^3.0.2\",\n\"eslint\": \"^6.6.0\",\n",
        "chatgpt_rag": "chore(package): remove d3 dependency"
    },
    {
        "msg": "build(TrackerDash): revert to d3v3",
        "diff": "diff --git a/package.json b/package.json \"UpSet\": \"git+https://github.com/jeffbaumes/upset#no-global-vars\",\n\"brace\": \"^0.7.0\",\n\"css-loader\": \"^0.23.1\",\n- \"d3\": \"^4.8.0\",\n+ \"d3\": \"^3.5.17\",\n\"datalib\": \"^1.7.3\",\n\"geojs\": \"^0.9.1\",\n\"glo\": \"github:ronichoudhury-work/glo#dist\",\n",
        "date": "31.05.2017 11:42:33",
        "repo": "kitware/candela",
        "type": "build",
        "sim_msg": "chore: upgrade `got-scraping`",
        "sim_diff": "diff --git a/package.json b/package.json \"content-type\": \"^1.0.4\",\n\"express\": \"^4.17.1\",\n\"fs-extra\": \"^10.0.0\",\n- \"got-scraping\": \"^3.1.0\",\n+ \"got-scraping\": \"^3.2.0\",\n\"htmlparser2\": \"^6.1.0\",\n\"iconv-lite\": \"^0.6.3\",\n\"jquery\": \"^3.6.0\",\n",
        "chatgpt_rag": "chore: downgrade `d3` version to 3.5.17"
    },
    {
        "msg": "build: updated lockfile",
        "diff": "diff --git a/yarn.lock b/yarn.lock resolved \"https://registry.yarnpkg.com/@bcoe/v8-coverage/-/v8-coverage-0.2.3.tgz#75a2e8b51cb758a7553d6804a5932d7aace75c39\"\nintegrity sha512-0hYQ8SB4Db5zvZB4axdMHGwEaQjkZzFjQiN9LVYvIFB2nSUHW9tYpxWriPrWDASIxiaXax83REcLxuSdnGPZtw==\n+\"@chakra-ui/vue@^0.4.1\":\n+ version \"0.4.2\"\n+ resolved \"https://registry.yarnpkg.com/@chakra-ui/vue/-/vue-0.4.2.tgz#5a6dc8ab19cad1b59039632037e6a32360378a71\"\n+ integrity sha512-wQ53rlbrG4+AsyAUFuaboF2R3kHfwHFD9jUqL51UsVkc5cUecweyXvavNF/YRMBkAI1ni6BzPM/3q/9LqqHE7w==\n+ dependencies:\n+ \"@popperjs/core\" \"^2.4.0\"\n+ \"@styled-system/css\" \"^5.0.23\"\n+ animejs \"^3.1.0\"\n+ aria-hidden \"^1.1.1\"\n+ breadstick \"^0.2.14\"\n+ color \"^3.1.2\"\n+ focus-trap \"^5.1.0\"\n+ focus-trap-vue \"^0.0.4\"\n+ lodash-es \"^4.17.15\"\n+ portal-vue \"^2.1.6\"\n+ styled-system \"^5.1.2\"\n+ v-scroll-lock \"^1.1.0\"\n+\n\"@cnakazawa/watch@^1.0.3\":\nversion \"1.0.4\"\nresolved \"https://registry.yarnpkg.com/@cnakazawa/watch/-/watch-1.0.4.tgz#f864ae85004d0fcab6f50be9141c4da368d1656a\"\n",
        "date": "09.05.2020 18:24:45",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "build",
        "sim_msg": "build(deps): bump prismjs from 1.17.1 to 1.25.0\nBumps [prismjs](https://github.com/PrismJS/prism) from 1.17.1 to 1.25.0.\n[Release notes](https://github.com/PrismJS/prism/releases)\n[Changelog](https://github.com/PrismJS/prism/blob/master/CHANGELOG.md)\n[Commits](PrismJS/prism@v1.17.1...v1.25.0)\nupdated-dependencies:\ndependency-name: prismjs\ndependency-type: indirect\n...",
        "sim_diff": "diff --git a/yarn.lock b/yarn.lock @@ -6710,15 +6710,6 @@ cli-width@^2.0.0:\nresolved \"https://registry.yarnpkg.com/cli-width/-/cli-width-2.2.0.tgz#ff19ede8a9a5e579324147b0c11f0fbcbabed639\"\nintegrity sha1-/xnt6Kml5XkyQUewwR8PvLq+1jk=\n-clipboard@^2.0.0:\n- version \"2.0.4\"\n- resolved \"https://registry.yarnpkg.com/clipboard/-/clipboard-2.0.4.tgz#836dafd66cf0fea5d71ce5d5b0bf6e958009112d\"\n- integrity sha512-Vw26VSLRpJfBofiVaFb/I8PVfdI1OxKcYShe6fm0sP/DtmiWQNCjhM/okTvdCo0G+lMMm1rMYbk4IK4x1X+kgQ==\n- dependencies:\n- good-listener \"^1.2.2\"\n- select \"^1.1.2\"\n- tiny-emitter \"^2.0.0\"\n-\nclipboard@^2.0.4:\nversion \"2.0.6\"\nresolved \"https://registry.yarnpkg.com/clipboard/-/clipboard-2.0.6.tgz#52921296eec0fdf77ead1749421b21c968647376\"\n@@ -16012,11 +16003,9 @@ pretty-time@^1.1.0:\nintegrity sha512-28iF6xPQrP8Oa6uxE6a1biz+lWeTOAPKggvjB8HAs6nVMKZwf5bG++632Dx614hIWgUPkgivRfG+a8uAXGTIbA==\nprismjs@^1.13.0:\n- version \"1.17.1\"\n- resolved \"https://registry.yarnpkg.com/prismjs/-/prismjs-1.17.1.tgz#e669fcbd4cdd873c35102881c33b14d0d68519be\"\n- integrity sha512-PrEDJAFdUGbOP6xK/UsfkC5ghJsPJviKgnQOoxaDbBjwc8op68Quupwt1DeAFoG8GImPhiKXAvvsH7wDSLsu1Q==\n- optionalDependencies:\n- clipboard \"^2.0.0\"\n+ version \"1.25.0\"\n+ resolved \"https://registry.yarnpkg.com/prismjs/-/prismjs-1.25.0.tgz#6f822df1bdad965734b310b315a23315cf999756\"\n+ integrity sha512-WCjJHl1KEWbnkQom1+SzftbtXMKQoezOCYs5rECqMN+jP+apI7ftoflyqigqzopSO3hMhTEb0mFClA8lkolgEg==\nprivate@^0.1.6, private@^0.1.8:\nversion \"0.1.8\"\n",
        "chatgpt_rag": "build(deps): bump @chakra-ui/vue from 0.4.1 to 0.4.2\nBumps [@chakra-ui/vue](https://github.com/chakra-ui/chakra-ui-vue) from 0.4.1 to 0.4.2.\n[Release notes](https://github.com/chakra-ui/chakra-ui-vue/releases/tag/v0.4.2)\n[Changelog](https://github.com/chakra-ui/chakra-ui-vue/blob/master/CHANGELOG.md)\n[Commits](chakra-ui/chakra-ui-vue@v0.4.1...v0.4.2)\nupdated-dependencies:\ndependency-name: @chakra-ui/vue\ndependency-type: direct"
    },
    {
        "msg": "build(npm): updated version to 5.1.0",
        "diff": "diff --git a/package.json b/package.json {\n\"name\": \"@nuxtjs/firebase\",\n- \"version\": \"5.0.7\",\n+ \"version\": \"5.1.0\",\n\"description\": \"Intergrate Firebase into your Nuxt project.\",\n\"keywords\": [\n\"firebase\",\n\"cz-conventional-changelog\": \"latest\",\n\"eslint\": \"latest\",\n\"firebase\": \"^7.14.2\",\n- \"husky\": \"latest\",\n+ \"husky\": \"^4.2.5\",\n\"jest\": \"^25.5.3\",\n\"standard-version\": \"latest\",\n\"vuepress\": \"^1.4.1\",\n",
        "date": "01.05.2020 21:11:47",
        "repo": "nuxt-community/firebase-module",
        "type": "build",
        "sim_msg": "chore(deps): remove jest-cli",
        "sim_diff": "diff --git a/package.json b/package.json \"flow-runtime\": \"^0.16.0\",\n\"husky\": \"^1.3.1\",\n\"jest\": \"^23.4.2\",\n- \"jest-cli\": \"^23.4.2\",\n\"jest-styled-components\": \"^5.0.1\",\n\"jest-yaml-flat-transfrom\": \"^0.1.0\",\n\"json-loader\": \"^0.5.4\",\n",
        "chatgpt_rag": "chore(deps): update husky version to ^4.2.5"
    },
    {
        "msg": "build(webpack): wrap existing loaders' `exclude` property in list if not already",
        "diff": "diff --git a/webpack.js b/webpack.js @@ -39,15 +39,24 @@ module.exports = function (config, basePath, options) {\n// directives.\nvar exclude = options.excludeCandelaNM === undefined || options.excludeCandelaNM;\n+ // Exclude the base paths from having existing loaders applied to them.\n+ if (exclude) {\n// Install empty module and module.loaders entries if missing.\nconfig.module = config.module || {};\nconfig.module.loaders = config.module.loaders || [];\n- // Exclude the base paths from having existing loaders applied to them.\n- if (exclude) {\n- config.modules.loaders = config.modules.loaders || [];\n- config.modules.loaders.forEach(function (loader) {\n- loader.exclude = (loader.exclude || []).concat(includePaths);\n+ // For each loader, append the Candela include paths to its `exclude`\n+ // property.\n+ config.module.loaders.forEach(function (loader) {\n+ // Install an empty list if there is no `exclude` property.\n+ loader.exclude = loader.exclude || [];\n+\n+ // If the `exclude` propertry is a non-list singleton, wrap it in a list.\n+ if (!Array.isArray(loader.exclude)) {\n+ loader.exclude = [loader.exclude];\n+ }\n+\n+ loader.exclude = loader.exclude.concat(includePaths);\n});\n}\n",
        "date": "05.01.2017 13:28:30",
        "repo": "kitware/candela",
        "type": "build",
        "sim_msg": "chore(webpack): add resolve alias for jquery",
        "sim_diff": "diff --git a/webpack.config.js b/webpack.config.js @@ -61,5 +61,10 @@ module.exports = (env = {}) => {\npath: path.resolve(__dirname, 'dist'),\nfilename: '[name].bundle.js',\n},\n+ resolve: {\n+ alias: {\n+ jquery: path.resolve(__dirname, \"node_modules/jquery\")\n+ }\n+ }\n});\n};\n",
        "chatgpt_rag": "chore(webpack): exclude base paths from existing loaders and append Candela include paths to exclude property"
    },
    {
        "msg": "build: provide custom Dockerfile location",
        "diff": "diff --git a/.circleci/config.yml b/.circleci/config.yml @@ -201,7 +201,7 @@ jobs:\ndocker buildx create docker-offen --name docker-offen --use\ndocker buildx inspect --bootstrap\nfor tag in \"${DOCKER_IMAGE_TAGS[@]}\"; do\n- docker buildx build --platform linux/amd64,linux/arm64,linux/arm/v7 -t offen/offen:$tag . --push\n+ docker buildx build --platform linux/amd64,linux/arm64,linux/arm/v7 -f ./build/Dockerfile -t offen/offen:$tag . --push\ndone\n- store_artifacts:\npath: /tmp/artifacts\n",
        "date": "15.02.2022 20:51:36",
        "repo": "offen/offen",
        "type": "build",
        "sim_msg": "feat: added latest tag to docker images",
        "sim_diff": "diff --git a/.circleci/config.yml b/.circleci/config.yml @@ -100,9 +100,10 @@ jobs:\nname: Build and push production Docker image\ncommand: |\nVERSION=$(git describe --tags `git rev-list --tags --max-count=1` | cut -c2-100)\n- docker build -t ${DOCKER_REPOSITORY}:${VERSION} .\n+ docker build -t ${DOCKER_REPOSITORY}:${VERSION} -t ${DOCKER_REPOSITORY}:latest .\ndocker login -u ${DOCKER_USER} -p ${DOCKER_PASS}\ndocker push ${DOCKER_REPOSITORY}:${VERSION}\n+ docker push ${DOCKER_REPOSITORY}:latest\n- webhook/notify:\nendpoint: \"${GITOPS_PR_WEBHOOK}\"\n",
        "chatgpt_rag": "refactor: updated Dockerfile path in build command"
    },
    {
        "msg": "build: resolve chakra ui dep version",
        "diff": "diff --git a/package.json b/package.json \"@babel/plugin-transform-modules-commonjs\": \"^7.7.4\",\n\"@babel/plugin-transform-parameters\": \"^7.7.4\",\n\"@babel/preset-env\": \"^7.9.5\",\n- \"@chakra-ui/vue\": \"^0.5.2\",\n+ \"@chakra-ui/vue\": \"^0.5.3\",\n\"@commitlint/cli\": \"^8.2.0\",\n\"@commitlint/config-conventional\": \"^8.2.0\",\n\"@fortawesome/free-brands-svg-icons\": \"^5.12.0\",\n",
        "date": "16.05.2020 20:36:35",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "build",
        "sim_msg": "chore: remove the unused dependencies babel-template and babel-types",
        "sim_diff": "diff --git a/package.json b/package.json \"babel-plugin-transform-object-rest-spread\": \"^6.23.0\",\n\"babel-preset-env\": \"^1.4.0\",\n\"babel-register\": \"^6.24.1\",\n- \"babel-template\": \"^6.24.1\",\n- \"babel-types\": \"^6.24.1\",\n\"cz-conventional-changelog\": \"^2.0.0\",\n\"eslint\": \"^4.5.0\",\n\"eslint-config-standard\": \"^10.2.1\",\n",
        "chatgpt_rag": "chore: update version of @chakra-ui/vue to 0.5.3"
    },
    {
        "msg": "build: xgo does not need to be locked anymore",
        "diff": "diff --git a/build/Dockerfile.build b/build/Dockerfile.build @@ -98,7 +98,7 @@ RUN python ./create_notice.py \\\n--client auditorium.csv \\\n--server server.csv >> NOTICE\n-FROM techknowlogick/xgo:go-1.19.2 as compiler\n+FROM techknowlogick/xgo:go-1.19.5 as compiler\nARG rev\nENV GIT_REVISION=$rev\n",
        "date": "10.01.2023 21:34:46",
        "repo": "offen/offen",
        "type": "build",
        "sim_msg": "feat: add console mode",
        "sim_diff": "diff --git a/Dockerfile b/Dockerfile @@ -19,7 +19,10 @@ COPY app/console /usr/local/src/console\nWORKDIR /usr/local/src/console\nARG VITE_GA_PROJECT\n+ARG VITE_CONSOLE_MODE\n+\nENV VITE_GA_PROJECT=$VITE_GA_PROJECT\n+ENV VITE_CONSOLE_MODE=$VITE_CONSOLE_MODE\nRUN npm ci\nRUN npm run build\n",
        "chatgpt_rag": "chore: update go compiler version to go-1.19.5"
    },
    {
        "msg": "build: install correct freefont package",
        "diff": "diff --git a/Dockerfile.node b/Dockerfile.node @@ -57,6 +57,7 @@ RUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key\nfonts-kacst \\\nfonts-thai-tlwg \\\nfonts-wqy-zenhei \\\n+ fonts-freefont-ttf \\\ngoogle-chrome-unstable \\\n--no-install-recommends \\\n&& rm -rf /var/lib/apt/lists/*\n",
        "date": "03.02.2022 16:07:09",
        "repo": "offen/offen",
        "type": "build",
        "sim_msg": "build: update dockerfile [skip ci]",
        "sim_diff": "diff --git a/Dockerfile b/Dockerfile # Base image\n-FROM node:16.8-buster-slim\n+FROM node:17.3-bullseye-slim\n# Copy repository\nCOPY . /metrics\n+WORKDIR /metrics\n# Setup\nRUN chmod +x /metrics/source/app/action/index.mjs \\\n@@ -13,19 +14,17 @@ RUN chmod +x /metrics/source/app/action/index.mjs \\\n&& wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \\\n&& sh -c 'echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google.list' \\\n&& apt-get update \\\n- && apt-get install -y google-chrome-stable fonts-ipafont-gothic fonts-wqy-zenhei fonts-thai-tlwg fonts-kacst fonts-freefont-ttf libxss1 --no-install-recommends \\\n- && apt-get install -y ca-certificates fonts-liberation libappindicator3-1 libasound2 libatk-bridge2.0-0 libatk1.0-0 libc6 libcairo2 libcups2 libdbus-1-3 libexpat1 libfontconfig1 libgbm1 libgcc1 libglib2.0-0 libgtk-3-0 libnspr4 libnss3 libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 lsb-release wget xdg-utils \\\n+ && apt-get install -y google-chrome-stable fonts-ipafont-gothic fonts-wqy-zenhei fonts-thai-tlwg fonts-kacst fonts-freefont-ttf libxss1 libx11-xcb1 libxtst6 lsb-release --no-install-recommends \\\n# Install ruby to support github licensed gem\n&& apt-get install -y ruby-full git g++ cmake pkg-config libssl-dev \\\n&& gem install licensed \\\n# Install python for node-gyp\n&& apt-get install -y python3 \\\n- # Install node modules\n- && cd /metrics \\\n+ # Clean apt/lists\n+ && rm -rf /var/lib/apt/lists/* \\\n+ # Install node modules and rebuild indexes\n&& npm ci \\\n- # Rebuild indexes\n- && npm run index \\\n- && rm -rf /var/lib/apt/lists/*\n+ && npm run index\n# Environment variables\nENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD true\n",
        "chatgpt_rag": "build: update Dockerfile.node to include fonts-freefont-ttf [skip ci]"
    },
    {
        "msg": "build: remove duplicate copy step",
        "diff": "diff --git a/build/Dockerfile.messages b/build/Dockerfile.messages @@ -58,7 +58,6 @@ RUN apk add git\nRUN apk add --no-cache --virtual .gyp python make g++\nCOPY ./packages/package.json ./packages/package-lock.json /code/deps/\n-COPY ./packages /code/packages\nWORKDIR /code/deps\nENV ADBLOCK true\nENV DISABLE_OPENCOLLECTIVE true\n",
        "date": "28.04.2021 13:19:55",
        "repo": "offen/offen",
        "type": "build",
        "sim_msg": "feat: bump Dockerfile to node v16",
        "sim_diff": "diff --git a/Dockerfile b/Dockerfile # ---- Base Node ----\n-FROM node:14-alpine AS base\n+FROM node:16-alpine AS base\n# set working directory\nWORKDIR /usr/src/app\n@@ -10,7 +10,7 @@ COPY package*.json ./\n# ---- Dependencies ----\nFROM base AS basedependencies\n## Install build toolchain, install node deps and compile native add-ons\n-RUN apk add --no-cache python make g++ git\n+RUN apk add --no-cache python3 make g++ git\nFROM basedependencies as dependencies\n# install node packages\n",
        "chatgpt_rag": "refactor: update Dockerfile messages to improve readability"
    },
    {
        "msg": "ci: remove extra build step",
        "diff": "diff --git a/circle.yml b/circle.yml @@ -19,12 +19,9 @@ dependencies:\ncompile:\noverride:\n- # Build Candela.\n+ # Build Candela and the examples.\n- npm run build\n- # Build the examples.\n- - npm run build:examples\n-\n# Build the unit test and coverage test bundles.\n- npm run build:test\n- npm run build:coverage\n",
        "date": "11.05.2018 13:26:55",
        "repo": "kitware/candela",
        "type": "ci",
        "sim_msg": "test: circle ci",
        "sim_diff": "diff --git a/.circleci/config.yml b/.circleci/config.yml @@ -35,5 +35,5 @@ jobs:\n- node_modules\nkey: v1-dependencies-{{ checksum \"package.json\" }}\n- # run compile\n- - run: npm run build\n+ # run compile & test\n+ - run: npm run build & npm run test\n",
        "chatgpt_rag": "build: update build process to include examples and run tests"
    },
    {
        "msg": "ci: verify log",
        "diff": "diff --git a/scripts/verifyCommit.js b/scripts/verifyCommit.js @@ -5,9 +5,10 @@ const msgPath = process.env.GIT_PARAMS\nconst msg = require('fs').readFileSync(msgPath, 'utf-8').trim()\nconst commitRE = /^(revert: )?(feat|fix|docs|dx|style|refactor|perf|test|workflow|build|ci|chore|types|wip|release)(\\(.+\\))?(.{1,10})?: .{1,50}/\n-const mergeRE = /^Merge pull request/\n+const mergeRe = /^(Merge pull request|Merge branch)/\n+\nif (!commitRE.test(msg)) {\n- if (!mergeRE.test(msg)) {\n+ if (!mergeRe.test(msg)) {\nconsole.log(msg)\nconsole.error(\n` ${chalk.bgRed.white(' ERROR ')} ${chalk.red(\n",
        "date": "15.10.2020 14:35:55",
        "repo": "hug-sun/element3",
        "type": "ci",
        "sim_msg": "build: add types as allowed commit type",
        "sim_diff": "diff --git a/build/git-hooks/commit-msg b/build/git-hooks/commit-msg #!/usr/bin/env bash\n# Validate commit log\n-commit_regex='^Merge.+|(feat|fix|docs|style|refactor|perf|test|build|ci|chore|revert)(\\(.+\\))?: .{1,50}'\n+commit_regex='^Merge.+|(feat|fix|docs|style|refactor|perf|test|build|ci|chore|revert|types)(\\(.+\\))?: .{1,50}'\nif ! grep -iqE \"$commit_regex\" \"$1\"; then\necho\n",
        "chatgpt_rag": "scripts: update merge regex in verifyCommit script"
    },
    {
        "msg": "ci: use bash instead of sh",
        "diff": "diff --git a/package.json b/package.json \"scripts\": {\n\"install\": \"lerna bootstrap --hoist\",\n\"clean:lerna\": \"lerna clean\",\n- \"clean:dist\": \"sh scripts/clean-all\",\n- \"build\": \"sh scripts/build-all\",\n+ \"clean:dist\": \"bash scripts/clean-all\",\n+ \"build\": \"bash scripts/build-all\",\n\"build:examples\": \"cd packages/examples && npm run build\",\n\"examples\": \"cd packages/examples && npm run serve\",\n- \"build:test\": \"sh scripts/build-test\",\n- \"build:coverage\": \"COVERAGE=1 sh scripts/build-test\",\n- \"test:unit\": \"sh scripts/run-test\",\n+ \"build:test\": \"bash scripts/build-test\",\n+ \"build:coverage\": \"COVERAGE=1 bash scripts/build-test\",\n+ \"test:unit\": \"bash scripts/run-test\",\n\"test:image\": \"cd packages/examples && npm test\",\n- \"test:coverage\": \"COVERAGE=1 sh scripts/run-test\",\n+ \"test:coverage\": \"COVERAGE=1 bash scripts/run-test\",\n\"coverage:report\": \"http-server build/coverage/html -p ${PORT-3000}\",\n\"build:docs\": \"sphinx-build -a -b html docs/ build/docs/\",\n- \"lint\": \"sh scripts/run-lint\",\n+ \"lint\": \"bash scripts/run-lint\",\n\"lint:pycandela\": \"flake8 --config python/pycandela/flake8.cfg python/pycandela\",\n\"docs\": \"http-server build/docs -p ${PORT-3000}\",\n\"commit\": \"git-cz\",\n",
        "date": "03.05.2018 17:42:59",
        "repo": "kitware/candela",
        "type": "ci",
        "sim_msg": "chore: add beta publishing tasks",
        "sim_diff": "diff --git a/package.json b/package.json {\n\"scripts\": {\n- \"bootstrap\": \"yarn && lerna bootstrap\",\n+ \"bootstrap\": \"run-s bootstrap:install bootstrap:lerna\",\n+ \"bootstrap:install\": \"yarn\",\n+ \"bootstrap:lerna\": \"lerna bootstrap\",\n\"start\": \"run-s bootstrap develop\",\n\"watch\": \"lerna run watch --parallel\",\n\"develop\": \"lerna run develop --parallel\",\n- \"build\": \"npm run clean && lerna run build\",\n- \"build-preview\": \"npm run build && lerna run build-preview\",\n+ \"build\": \"run-s clean build:lerna\",\n+ \"build:lerna\": \"lerna run build\",\n+ \"build-preview\": \"run-s build build-preview:lerna\",\n+ \"build-preview:lerna\": \"lerna run build-preview\",\n\"clean\": \"rimraf packages/*/dist dev-test/*.js\",\n- \"reset\": \"npm run clean && lerna clean --yes\",\n+ \"clean:lerna\": \"lerna clean --yes\",\n+ \"reset\": \"run-s clean clean:lerna\",\n\"cache-ci\": \"node scripts/cache.js\",\n\"test\": \"run-s lint jest e2e\",\n\"test-ci\": \"run-s lint-quiet cache-ci jest e2e-ci\",\n\"jest\": \"cross-env NODE_ENV=test jest --no-cache\",\n- \"e2e-prep\": \"npm run build && cp -r packages/netlify-cms/dist dev-test/\",\n+ \"e2e-prep\": \"run-s build e2e-move-build\",\n+ \"e2e-move-build\": \"cp -r packages/netlify-cms/dist dev-test/\",\n\"e2e-serve\": \"http-server dev-test\",\n\"e2e-exec\": \"cypress run\",\n\"e2e-exec-ci\": \"cypress run --record\",\n\"e2e-ci\": \"run-s e2e-prep e2e-run-ci\",\n\"e2e-dev\": \"start-test develop 8080 e2e-exec-dev\",\n\"publish\": \"run-s publish:before-manual-version publish:after-manual-version\",\n- \"publish:before-manual-version\": \"run-s test publish:version\",\n+ \"publish:before-manual-version\": \"run-s bootstrap test publish:version\",\n\"publish:after-manual-version\": \"run-s publish:prepare publish:push\",\n\"publish:prepare\": \"run-s bootstrap build\",\n\"publish:version\": \"lerna version --no-push\",\n- \"publish:push\": \"git push --follow-tags && lerna publish from-git\",\n- \"publish:dry-run\": \"lerna version --no-git-tag-version --no-push\",\n+ \"publish:push\": \"run-s publish:push-git publish:from-git\",\n+ \"publish:push-git\": \"git push --follow-tags\",\n+ \"publish:from-git\": \"lerna publish from-git\",\n+ \"publish:dry-run\": \"run-s \\\"publish:version --no-git-tag-version\\\"\",\n+ \"publish:beta\": \"run-s publish:beta:before-manual-version publish:after-manual-version\",\n+ \"publish:beta:before-manual-version\": \"run-s bootstrap test publish:beta:version\",\n+ \"publish:beta:version\": \"lerna version prepatch --preid alpha --no-push\",\n+ \"publish:beta:dry-run\": \"run-s \\\"publish:beta:version --no-git-tag-version\\\"\",\n\"format\": \"run-s \\\"lint:css -- --fix --quiet\\\" \\\"lint:js -- --fix --quiet\\\" \\\"format:prettier -- --write\\\"\",\n\"format:prettier\": \"prettier \\\"{{packages,scripts,website}/**/,}*.{js,css}\\\"\",\n\"lint\": \"run-p -c --aggregate-output lint:*\",\n\"lint-quiet\": \"run-p -c --aggregate-output \\\"lint:* -- --quiet\\\"\",\n\"lint:css\": \"stylelint --ignore-path .gitignore \\\"{packages/**/*.{css,js},website/**/*.css}\\\"\",\n- \"lint:js\": \"eslint --ignore-path .gitignore \\\"{{packages,scripts,website}/**/,}*.js\\\"\",\n- \"lint:format\": \"npm run format:prettier -- --list-different\",\n+ \"lint:js\": \"eslint --color --ignore-path .gitignore \\\"{{packages,scripts,website}/**/,}*.js\\\"\",\n+ \"lint:format\": \"prettier \\\"{{packages,scripts,website}/**/,}*.{js,css}\\\" --list-different\",\n\"add-contributor\": \"all-contributors add\"\n},\n\"browserslist\": [\n",
        "chatgpt_rag": "chore: update build and test scripts to use bash instead of sh for cross-platform compatibility"
    },
    {
        "msg": "ci: try to fix azure pipline",
        "diff": "diff --git a/azure-pipelines.yml b/azure-pipelines.yml @@ -16,10 +16,10 @@ strategy:\nsteps:\n- task: NodeTool@0\ninputs:\n- version: $(node_version)\n+ versionSpec: $(node_version)\ndisplayName: 'Install Node.js'\n- script: |\nnpm install\n- npm run test\n+ npm test\ndisplayName: 'npm install and test'\n",
        "date": "01.10.2018 19:03:48",
        "repo": "namics/generator-nitro",
        "type": "ci",
        "sim_msg": "refactor(azurepipeline): added test to azure pipeline",
        "sim_diff": "diff --git a/azure-pipelines.yml b/azure-pipelines.yml @@ -35,6 +35,10 @@ jobs:\nnpm install\ndisplayName: 'npm install'\n+ - script: |\n+ npm run test\n+ displayName: 'npm run test'\n+\n- script: |\nnpm run build\ndisplayName: 'npm run build'\n",
        "chatgpt_rag": "refactor(azurepipeline): updated Node.js installation and test script in azure pipeline"
    },
    {
        "msg": "ci: update circle.yml to build properly",
        "diff": "diff --git a/circle.yml b/circle.yml @@ -11,12 +11,12 @@ dependencies:\n# Install flake8 for Python linting.\n- sudo pip install flake8\n+ # Install Lerna globally.\n+ - sudo npm install -g lerna@2.10.2\n+\n# Inject npm token into environment.\n- echo \"//registry.npmjs.org/:_authToken=$NPM_TOKEN\" >>~/.npmrc\n- cache_directories:\n- - node_modules\n-\ncompile:\noverride:\n# Build Candela.\n@@ -26,8 +26,8 @@ compile:\n- npm run build:examples\n# Build the unit test and coverage test bundles.\n- - npm run build:test:unit\n- - npm run build:test:coverage\n+ - npm run build:test\n+ - npm run build:coverage\ntest:\noverride:\n@@ -45,19 +45,18 @@ test:\n# Coverage tests.\n- npm run test:coverage\n- - npm run test:coverage:codecov\npost:\n# Gather up the testing images as build artifacts.\n- mkdir $CIRCLE_ARTIFACTS/test_images\n- - find plugins -name '*.png' | xargs -I xxx cp xxx $CIRCLE_ARTIFACTS/test_images\n+ - find packages/examples/test -name '*.png' | xargs -I xxx cp xxx $CIRCLE_ARTIFACTS/test_images\n# Copy the html coverage report to the artifacts directory as well.\n- mkdir $CIRCLE_ARTIFACTS/coverage\n- cp -r build/coverage/html $CIRCLE_ARTIFACTS/coverage\ndeployment:\n- semantic-release:\n+ lerna-publish:\nbranch: master\ncommands:\n- - DEBUG=condition npm run semantic-release\n+ - lerna publish --conventional-commits --yes\n",
        "date": "03.05.2018 16:52:30",
        "repo": "kitware/candela",
        "type": "ci",
        "sim_msg": "build: report coverage to codacy only at master branch.",
        "sim_diff": "diff --git a/.circleci/config.yml b/.circleci/config.yml @@ -36,7 +36,11 @@ jobs:\ncommand: sudo npm i -g codecov && codecov\n- run:\nname: Report the coverage\n- command: npm i codacy-coverage && cat \"coverage/$(ls -rt coverage | tail -n 1)/lcov.info\" | ./node_modules/.bin/codacy-coverage\n+ command: |\n+ if [ $CIRCLE_BRANCH = master ] ; then\n+ npm i codacy-coverage\n+ cat \"coverage/$(ls -rt coverage | tail -n 1)/lcov.info\" | ./node_modules/.bin/codacy-coverage\n+ fi\n- store_test_results:\npath: junit\n- store_artifacts:\n",
        "chatgpt_rag": "build: update lerna installation to version 2.10.2, adjust test scripts for unit and coverage tests, and modify artifact gathering process. Add lerna-publish deployment for master branch."
    },
    {
        "msg": "ci: fix ci bug",
        "diff": "diff --git a/package.json b/package.json \"build:theme\": \"node build/bin/gen-cssfile && gulp build --gulpfile packages/theme-chalk/gulpfile.js && cp-cli packages/theme-chalk/lib lib/theme-chalk\",\n\"build:utils\": \"cross-env BABEL_ENV=utils babel src --out-dir lib --ignore src/index.js\",\n\"build:umd\": \"node build/bin/build-locale.js\",\n- \"build:ci\":\"npm run build:file && cross-env NODE_ENV=development webpack-dev-server --config build/webpack.demo.js\",\n+ \"build:ci\":\"npm run build:file && cross-env NODE_ENV=development webpack --config build/webpack.demo.js\",\n\"clean\": \"rimraf lib && rimraf packages/*/lib && rimraf test/**/coverage\",\n\"deploy:build\": \"npm run build:file && cross-env NODE_ENV=production webpack --config build/webpack.demo.js && echo element.eleme.io>>examples/element-ui/CNAME\",\n\"deploy:extension\": \"cross-env NODE_ENV=production webpack --config build/webpack.extension.js\",\n",
        "date": "25.08.2020 10:48:15",
        "repo": "hug-sun/element3",
        "type": "ci",
        "sim_msg": "chore(deps): pin root dependencies for serve",
        "sim_diff": "diff --git a/packages/serve/package.json b/packages/serve/package.json \"author\": \"\",\n\"license\": \"MIT\",\n\"dependencies\": {\n- \"@webpack-cli/utils\": \"^0.1.2\",\n- \"@webpack-cli/webpack-scaffold\": \"^0.1.2\",\n- \"chalk\": \"^2.4.1\",\n- \"cross-spawn\": \"^6.0.5\",\n- \"inquirer\": \"^6.2.0\"\n+ \"@webpack-cli/utils\": \"0.1.2\",\n+ \"@webpack-cli/webpack-scaffold\": \"0.1.2\",\n+ \"chalk\": \"2.4.1\",\n+ \"cross-spawn\": \"6.0.5\",\n+ \"inquirer\": \"6.2.0\"\n},\n\"devDependencies\": {\n- \"@types/cross-spawn\": \"^6.0.0\",\n+ \"@types/cross-spawn\": \"6.0.0\",\n\"@types/inquirer\": \"0.0.43\",\n- \"@types/node\": \"^10.12.9\",\n- \"typescript\": \"^3.1.6\"\n+ \"@types/node\": \"10.12.9\",\n+ \"typescript\": \"3.1.6\"\n},\n\"scripts\": {\n\"build\": \"tsc\",\n",
        "chatgpt_rag": "chore(build): update build:ci script to use webpack instead of webpack-dev-server"
    },
    {
        "msg": "ci: remove caching",
        "diff": "diff --git a/.github/workflows/test.yml b/.github/workflows/test.yml @@ -22,18 +22,6 @@ jobs:\n- name: Install Canvas and XML dependencies\nrun: sudo apt-get install -y libcairo2-dev libpango1.0-dev libxml2-utils\n- - name: Get Yarn cache directory path\n- id: yarn-cache-dir-path\n- run: echo \"::set-output name=dir::$(yarn cache dir)\"\n-\n- - uses: actions/cache@v1\n- id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)\n- with:\n- path: ${{ steps.yarn-cache-dir-path.outputs.dir }}\n- key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}\n- restore-keys: |\n- ${{ runner.os }}-yarn-\n-\n- name: Setup Node ${{ matrix.node }}\nuses: actions/setup-node@v1\nwith:\n",
        "date": "09.10.2020 17:10:28",
        "repo": "vega/vega",
        "type": "ci",
        "sim_msg": "ci(gh-actions): bump node from 12 to 14",
        "sim_diff": "diff --git a/.github/workflows/release.yml b/.github/workflows/release.yml @@ -8,21 +8,10 @@ jobs:\nruns-on: ubuntu-18.04\nsteps:\n- uses: actions/checkout@v2\n- - uses: actions/setup-node@v1\n+ - uses: actions/setup-node@v2\nwith:\n- node-version: '12'\n-\n- - name: Get yarn cache\n- id: yarn-cache\n- run: echo \"::set-output name=dir::$(yarn cache dir)\"\n-\n- - name: Cache dependencies\n- uses: actions/cache@v2\n- with:\n- path: ${{ steps.yarn-cache.outputs.dir }}\n- key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}\n- restore-keys: |\n- ${{ runner.os }}-yarn-\n+ node-version: '14'\n+ cache: 'yarn'\n- name: Install dependencies\nrun: yarn install\n",
        "chatgpt_rag": "ci(gh-actions): update yarn cache handling and node setup in test workflow"
    },
    {
        "msg": "ci: storage endpoint in env is never used",
        "diff": "diff --git a/.circleci/config.yml b/.circleci/config.yml @@ -147,7 +147,6 @@ jobs:\nDOCKER_LOGIN: offen\nDOCKER_BUILDKIT: '1'\nDOCKER_CLI_EXPERIMENTAL: enabled\n- MINIO_STORAGE: https://storage.offen.dev\nworking_directory: ~/offen\nsteps:\n- checkout\n",
        "date": "06.01.2023 08:42:17",
        "repo": "offen/offen",
        "type": "ci",
        "sim_msg": "fix: linux docker image version",
        "sim_diff": "diff --git a/.circleci/config.yml b/.circleci/config.yml @@ -3,7 +3,7 @@ version: 2\njobs:\n'unit-test':\ndocker: &DOCKERIMAGE\n- - image: circleci/node:10.7.0-browsers\n+ - image: circleci/node:10.7.0-stretch-browsers\nsteps:\n- checkout\n- attach_workspace:\n",
        "chatgpt_rag": "chore: update docker configuration in CircleCI config file"
    },
    {
        "msg": "ci: more work on github actions",
        "diff": "diff --git a/.github/workflows/release.yml b/.github/workflows/release.yml # This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node\n# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions\n-name: Build & Test Components\n+name: Release\non:\npush:\n",
        "date": "24.12.2020 20:01:05",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "ci",
        "sim_msg": "chore: fix release job",
        "sim_diff": "diff --git a/.github/workflows/release.yml b/.github/workflows/release.yml @@ -15,7 +15,7 @@ jobs:\n- uses: actions/checkout@v2\n- uses: actions/setup-node@v2\nwith:\n- node-version: 14\n+ node-version: 16\n- name: install\nrun: yarn\n- name: test\n",
        "chatgpt_rag": "chore: update workflow name to Release and trigger on push event"
    },
    {
        "msg": "ci: don't use sudo to install global npm package",
        "diff": "diff --git a/circle.yml b/circle.yml @@ -12,7 +12,7 @@ dependencies:\n- sudo pip install flake8\n# Install Lerna globally.\n- - sudo npm install -g lerna@2.10.2\n+ - npm install -g lerna@2.10.2\n# Inject npm token into environment.\n- echo \"//registry.npmjs.org/:_authToken=$NPM_TOKEN\" >>~/.npmrc\n",
        "date": "03.05.2018 17:10:18",
        "repo": "kitware/candela",
        "type": "ci",
        "sim_msg": "chore: set email, user for git; auth for npm",
        "sim_diff": "diff --git a/.circleci/config.yml b/.circleci/config.yml @@ -48,7 +48,9 @@ jobs:\n- \"3f:ea:54:b7:77:13:b6:cf:29:90:2b:19:bb:eb:b5:f1\"\n- run:\nname: Authenticate with registry\n- command: echo \"//registry.npmjs.org/:_authToken=$NPM_TOKEN\" > ~/repo/.npmrc\n+ command: echo \"//registry.npmjs.org/:_authToken=$NPM_TOKEN\" >> ~/.npmrc\n+ - run: git config --global user.email circleci@circleci\n+ - run: git config --global user.name CircleCI\n- run:\nname: Publish package\ncommand: \"./node_modules/.bin/lerna publish --message 'chore: release new versions' --yes\"\n",
        "chatgpt_rag": "chore: update lerna installation method; inject npm token into environment"
    },
    {
        "msg": "ci(release): bootstrap packages",
        "diff": "diff --git a/.github/workflows/release.yml b/.github/workflows/release.yml @@ -28,8 +28,10 @@ jobs:\nnode-version: 12.x\n- name: Install dependencies\n- run: yarn install --frozen-lockfile && yarn bootstrap\n+ run: yarn install\n+ - name: Bootstrap\n+ run: yarn bootstrap\n- name: Linting\nrun: yarn lint\n",
        "date": "31.12.2020 15:59:41",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "ci",
        "sim_msg": "chore: add format GitHub action",
        "sim_diff": "diff --git a/.github/workflows/test.yml b/.github/workflows/test.yml @@ -22,12 +22,6 @@ jobs:\n- name: Install dependencies\nrun: yarn install --frozen-lockfile\n- - name: Check formatting\n- run: yarn format:check\n-\n- - name: Lint\n- run: yarn lint\n-\n- name: Build\nrun: yarn build\n",
        "chatgpt_rag": "chore: update release workflow with bootstrap step and remove redundant linting step"
    },
    {
        "msg": "ci: use airtap credentials",
        "diff": "diff --git a/.github/workflows/ci.yml b/.github/workflows/ci.yml @@ -6,6 +6,7 @@ jobs:\ntest:\nname: Node ${{ matrix.node }} / ${{ matrix.os }}\nruns-on: ${{ matrix.os }}\n+ environment: ci\nstrategy:\nfail-fast: false\nmatrix:\n@@ -20,4 +21,8 @@ jobs:\nnode-version: ${{ matrix.node }}\n- run: npm install\n- run: npm run build --if-present\n+ - run: echo \"127.0.0.1 airtap.local\" | sudo tee -a /etc/hosts\n- run: npm test\n+ env:\n+ SAUCE_USERNAME: ${{ secrets.SAUCE_USERNAME }}\n+ SAUCE_ACCESS_KEY: ${{ secrets.SAUCE_ACCESS_KEY }}\n",
        "date": "21.04.2021 17:19:35",
        "repo": "feross/simple-peer",
        "type": "ci",
        "sim_msg": "ci: add node 14 to workflow",
        "sim_diff": "diff --git a/.github/workflows/ci.yml b/.github/workflows/ci.yml @@ -25,7 +25,7 @@ jobs:\nruns-on: ${{ matrix.os }}\nstrategy:\nmatrix:\n- node-version: [10.x, 12.x]\n+ node-version: [10.x, 12.x, 14.x]\nos: [macos-latest]\nsteps:\n@@ -57,7 +57,7 @@ jobs:\nruns-on: ${{ matrix.os }}\nstrategy:\nmatrix:\n- node-version: [10.x, 12.x]\n+ node-version: [10.x, 12.x, 14.x]\nos: [ubuntu-latest, windows-latest]\nsteps:\n",
        "chatgpt_rag": "ci: add environment variables for Sauce Labs testing"
    },
    {
        "msg": "docs(Dropdown): remove deprecated lifecycle method from DropdownExampleRemote\n* docs(Dropdown): Remove deprecated lifecycle method.\nCommit includes automatic formatting changes by lint.\n* Update DropdownExampleRemote.js\n* Update DropdownExampleRemote.js",
        "diff": "diff --git a/docs/src/examples/modules/Dropdown/Usage/DropdownExampleRemote.js b/docs/src/examples/modules/Dropdown/Usage/DropdownExampleRemote.js @@ -10,15 +10,13 @@ const getOptions = () =>\n})\nclass DropdownExampleRemote extends Component {\n- componentWillMount() {\n- this.setState({\n+ state = {\nisFetching: false,\nmultiple: true,\nsearch: true,\nsearchQuery: null,\nvalue: [],\noptions: getOptions(),\n- })\n}\nhandleChange = (e, { value }) => this.setState({ value })\n@@ -39,7 +37,7 @@ class DropdownExampleRemote extends Component {\nthis.setState({ value: multiple ? [value] : value })\n}\n- toggleSearch = e => this.setState({ search: e.target.checked })\n+ toggleSearch = (e) => this.setState({ search: e.target.checked })\ntoggleMultiple = (e) => {\nconst { value } = this.state\n@@ -61,10 +59,20 @@ class DropdownExampleRemote extends Component {\nRandom\n</Button>\n<label>\n- <input type='checkbox' checked={search} onChange={this.toggleSearch} /> Search\n+ <input\n+ type='checkbox'\n+ checked={search}\n+ onChange={this.toggleSearch}\n+ />{' '}\n+ Search\n</label>{' '}\n<label>\n- <input type='checkbox' checked={multiple} onChange={this.toggleMultiple} /> Multiple\n+ <input\n+ type='checkbox'\n+ checked={multiple}\n+ onChange={this.toggleMultiple}\n+ />{' '}\n+ Multiple\n</label>\n</p>\n<Dropdown\n",
        "date": "21.03.2019 08:23:44",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "fix(web): controlled behavior with selectAllLabel",
        "sim_diff": "diff --git a/packages/web/src/components/list/MultiList.js b/packages/web/src/components/list/MultiList.js @@ -116,7 +116,9 @@ class MultiList extends Component {\n// value gets handled on the initial load and\n// consecutive loads\nconst { currentValue } = this.state;\n- const value = Object.keys(currentValue).filter(item => currentValue[item]);\n+ const value = Object.keys(currentValue).filter(\n+ item => currentValue[item],\n+ );\nif (value.length) this.setValue(value, true);\n},\n);\n@@ -133,7 +135,9 @@ class MultiList extends Component {\n// value gets handled on the initial load and\n// consecutive loads\nconst { currentValue } = this.state;\n- const value = Object.keys(currentValue).filter(item => currentValue[item]);\n+ const value = Object.keys(currentValue).filter(\n+ item => currentValue[item],\n+ );\nif (value.length) this.setValue(value, true);\n},\n);\n@@ -169,7 +173,6 @@ class MultiList extends Component {\nselectedValue = [selectAllLabel];\n}\n}\n-\nif (this.props.value !== prevProps.value) {\nthis.setValue(this.props.value, true);\n} else if (\n@@ -277,7 +280,6 @@ class MultiList extends Component {\nconst { selectAllLabel } = props;\nlet { currentValue } = this.state;\nlet finalValues = null;\n-\nif (\nselectAllLabel\n&& ((Array.isArray(value) && value.includes(selectAllLabel))\n@@ -407,7 +409,7 @@ class MultiList extends Component {\n});\n} else {\nthis.state = {\n- ...this.state || {},\n+ ...(this.state || {}),\noptions: [],\n};\n}\n@@ -465,11 +467,36 @@ class MultiList extends Component {\nif (isEvent(e)) {\ncurrentValue = e.target.value;\n}\n- const { value, onChange } = this.props;\n+ const { value, onChange, selectAllLabel } = this.props;\nif (value === undefined) {\nthis.setValue(currentValue);\n} else if (onChange) {\n- onChange(parseValueArray(this.props.value, currentValue));\n+ let valueToSet = parseValueArray(value, currentValue);\n+ if (selectAllLabel) {\n+ // Remove selectAllLabel if any other option is selected\n+ if (currentValue === selectAllLabel) {\n+ if (\n+ value === selectAllLabel\n+ || (Array.isArray(value) && value.includes(selectAllLabel))\n+ ) {\n+ valueToSet = [];\n+ } else {\n+ const options = [];\n+ this.state.options.forEach((item) => {\n+ options.unshift(item.key);\n+ });\n+ options.unshift(selectAllLabel);\n+ valueToSet = options;\n+ }\n+ } else if (\n+ Array.isArray(valueToSet)\n+ && valueToSet.length > 1\n+ && valueToSet.includes(selectAllLabel)\n+ ) {\n+ valueToSet = valueToSet.filter(val => val !== selectAllLabel);\n+ }\n+ }\n+ onChange(valueToSet);\n}\n};\n",
        "chatgpt_rag": "refactor(docs): refactor DropdownExampleRemote component to use class properties instead of componentWillMount for state initialization"
    },
    {
        "msg": "docs: Adding preact/compat note to the README",
        "diff": "diff --git a/README.md b/README.md @@ -95,6 +95,17 @@ render(<App />, document.body);\n}\n```\n+`preact/compat` is our compatibility layer that allows you to leverage the many libraries of the React ecosystem and use them with Preact. If this is something you'd like to use with WMR you can add an `alias` section as well to your `package.json`:\n+\n+```json\n+{\n+ \"alias\": {\n+ \"react\": \"preact/compat\",\n+ \"react-dom\": \"preact/compat\"\n+ }\n+}\n+```\n+\n**5.** You're all set! As an extra step, if you'd like WMR to prerender your application to static HTML during production builds, replace `render()` with [preact-iso](https://www.npmjs.com/package/preact-iso):\n```diff\n",
        "date": "22.12.2020 02:21:18",
        "repo": "preactjs/wmr",
        "type": "docs",
        "sim_msg": "docs: Update optional steps quotes, use `\"`",
        "sim_diff": "diff --git a/docs/02-quickstart.md b/docs/02-quickstart.md @@ -100,7 +100,7 @@ Open up your browser's Dev Tools and debug your application directly in the brow\n- Replace Preact with React (see our [React](#react) guide below).\n- Replace HTM with JSX (see our [Babel](#babel) guide below).\n- Add TypeScript support (see our [TypeScript](#typescript) guide below).\n-- Add 'package name\" import support (see our [Importing Packages by Name](#importing-packages-by-name)) guide below).\n+- Add \"package name\" import support (see our [Importing Packages by Name](#importing-packages-by-name)) guide below).\n- See all of our guides below!\n",
        "chatgpt_rag": "docs: Add instructions for using preact/compat with WMR"
    },
    {
        "msg": "docs(ButtonsPage): add missing semicolon",
        "diff": "diff --git a/docs/lib/Components/ButtonsPage.js b/docs/lib/Components/ButtonsPage.js @@ -7,7 +7,7 @@ import ButtonExample from '../examples/Button';\nconst ButtonExampleSource = require('!!raw!../examples/Button');\nimport ButtonOutline from '../examples/ButtonOutline';\n-const ButtonOutlineSource = require('!!raw!../examples/ButtonOutline')\n+const ButtonOutlineSource = require('!!raw!../examples/ButtonOutline');\nimport ButtonStateful from '../examples/ButtonStateful';\nconst ButtonStatefulSource = require('!!raw!../examples/ButtonStateful');\n",
        "date": "14.03.2017 16:39:03",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "sim_msg": "fix: Independent buttonList by instance",
        "sim_diff": "diff --git a/src/lib/constructor.js b/src/lib/constructor.js @@ -494,7 +494,7 @@ export default {\noptions.placeholder = typeof options.placeholder === 'string' ? options.placeholder : null;\noptions.linkProtocol = typeof options.linkProtocol === 'string' ? options.linkProtocol : null;\n/** Buttons */\n- options.buttonList = options.buttonList || [\n+ options.buttonList = JSON.parse(JSON.stringify(options.buttonList)) || [\n['undo', 'redo'],\n['bold', 'underline', 'italic', 'strike', 'subscript', 'superscript'],\n['removeFormat'],\n",
        "chatgpt_rag": "fix: Add missing semicolon in ButtonOutlineSource import"
    },
    {
        "msg": "docs(Modal): added verbiage on size prop",
        "diff": "diff --git a/docs/lib/Components/ModalsPage.js b/docs/lib/Components/ModalsPage.js @@ -54,6 +54,7 @@ export default class ModalsPage extends React.Component {\nautoFocus: PropTypes.bool,\n// if modal should be centered vertically in viewport\ncentered: PropTypes.bool,\n+ // corresponds to bootstrap's modal sizes, ie. 'lg' or 'sm'\nsize: PropTypes.string,\n// callback for toggling isOpen in the controlling component\ntoggle: PropTypes.func,\n",
        "date": "13.04.2018 10:37:03",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "sim_msg": "feat(cmp/modal): use new CmpWaitForLibrary component",
        "sim_diff": "diff --git a/components/cmp/modal/src/index.js b/components/cmp/modal/src/index.js @@ -2,19 +2,14 @@ import React, {Component} from 'react'\nimport PropTypes from 'prop-types'\nimport {CmpModalContainer} from './CmpModal'\n-import CmpServices from '../../services/src/index'\n+import CmpServices, {CmpWaitForLibrary} from '../../services/src/index'\nclass CmpModal extends Component {\n- state = {cmpReady: this.props.cmpReady}\n-\n- componentDidMount() {\n- document.addEventListener('cmpReady', function() {\n- this.setState({cmpReady: true})\n- })\n- }\n-\nrender() {\n+ const {checkCmpLibraryIsLoaded} = this.props\n+\nreturn (\n+ <CmpWaitForLibrary cmpReady={!checkCmpLibraryIsLoaded}>\n<CmpServices>\n{({getPurposesAndVendors, sendConsents}) => (\n<CmpModalContainer\n@@ -24,11 +19,13 @@ class CmpModal extends Component {\n/>\n)}\n</CmpServices>\n+ </CmpWaitForLibrary>\n)\n}\n}\nCmpModal.defaultProps = {\n+ checkCmpLibraryIsLoaded: true,\ncmpReady: false,\nlang: 'es',\nonExit: () => {},\n@@ -36,6 +33,7 @@ CmpModal.defaultProps = {\n}\nCmpModal.propTypes = {\n+ checkCmpLibraryIsLoaded: PropTypes.bool,\ncmpReady: PropTypes.bool,\nlang: PropTypes.string,\nlogo: PropTypes.string.isRequired,\n",
        "chatgpt_rag": "feat(docs): add size prop to ModalsPage componentPropTypes"
    },
    {
        "msg": "docs: add gridsome example",
        "diff": "diff --git a/README.md b/README.md @@ -150,6 +150,7 @@ If you'd like to toggle your app between dark and light mode, you can also wrap\n- [Vue Starter](https://codesandbox.io/s/chakra-ui-vue-starter-2sy0g)\n- [Nuxt Starter](https://codesandbox.io/s/chakra-ui-nuxt-demo-f8tq4)\n+- [Gridsome Starter](https://codesandbox.io/s/chakra-ui-gridsome-demo-038c9)\n### Storybook Components\n",
        "date": "02.04.2020 21:15:41",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "sim_msg": "chore: update `vue/en/simple-component.md`",
        "sim_diff": "diff --git a/content/intro-to-storybook/vue/en/simple-component.md b/content/intro-to-storybook/vue/en/simple-component.md @@ -145,7 +145,7 @@ Another nice thing about bundling the `actionsData` that a component needs is th\n## Config\n-We'll need to make a couple of changes to Storybook's configuration files, so it notices not only our recently created stories and allow us to use the application's CSS file (located in `src/index.css`).\n+We'll need to make a couple of changes to Storybook's configuration files, so it notices our recently created stories and allows us to use the application's CSS file (located in `src/index.css`).\nStart by changing your Storybook configuration file (`.storybook/main.js`) to the following:\n",
        "chatgpt_rag": "chore: add Gridsome Starter link to README.md"
    },
    {
        "msg": "docs: readme: update",
        "diff": "diff --git a/docs/putout-script.md b/docs/putout-script.md @@ -28,17 +28,17 @@ const when = () => {\n};\n```\n-## `__` template value\n+## `__`\nThe double low dush template value (`__`) abstracts away `Identifiers`, `Expressions` and `Literals`.\n## `__a`\n-**Linked template value** (`__a`) abstracts away `Identifiers`, `Expressions` and `Literals`.\n+**Linked Value** (`__a`) abstracts away `Identifiers`, `Expressions` and `Literals`.\n-## `__args` template value\n+## `__args`\n-The `__args` template value abstracts away a sequence of zero or more arguments, for `(__args) => __a`:\n+The `__args` value abstracts away a sequence of zero or more arguments, for `(__args) => __a`:\n```js\n(a, b, c) => a + b + c;\n",
        "date": "14.09.2022 17:26:29",
        "repo": "coderaiser/putout",
        "type": "docs",
        "sim_msg": "docs(price-exporter): add docs on csv headers format",
        "sim_diff": "diff --git a/docs/cli/price-exporter.md b/docs/cli/price-exporter.md @@ -47,7 +47,7 @@ Options:\n```\n#### Info on flags\n-- The `--input` flag specifies the path to the CSV template file.\n+- The `--input` flag specifies the path to the [CSV template file](#csv-headers).\n- Only the first line is read and subsequent lines (if present) will be ignored\n- The delimiter must match the delimiter passed in by `--delimiter` (or the default delimiter)\n- The `--output` flag specifies where to output/save the exported prices.\n@@ -60,6 +60,44 @@ Options:\n- If passed `true`, prices from published and unpublished products are retrieved\n- If passed `false` (or omitted), only prices from published products are retrieved\n+#### CSV headers\n+To export price in CSV format, the header file is required. This file should contain the desired headers that will be exported. The [price-exporter](https://commercetools.github.io/nodejs/cli/price-exporter.html) writes data to the CSV file base on the header. This can also be used as a means to filter out undesired data in the CSV file.\n+\n+Example of the content of a header file\n+```\n+variant-sku,value.currencyCode,value.centAmount,country,customerGroup.groupName,channel.key,validFrom,validUntil,customType,customField.foo,customField.bar,customField.current,customField.name.nl,customField.name.de,customField.status,customField.price,customField.priceset\n+```\n+\n+The `variant-sku` header is required. It contains the `sku` of the variant where the price belongs to.\n+\n+For custom fields, the `customType` header is required, it contains the key of the custom type. It is important if you want to parse the csv file via the [csv-parser-price](https://commercetools.github.io/nodejs/cli/csv-parser-price.html) module. Also to export any field in the custom object, the format is like this => `customField.[key of field]`\n+\n+So if you have a price object like below\n+```js\n+{\n+ ...\n+ custom: {\n+ type: {\n+ key: \"my-type\"\n+ }\n+ fields: {\n+ foo: \"bar\",\n+ localized: {\n+ de: \"Hundefutter\",\n+ en: \"dog food\"\n+ }\n+ }\n+ }\n+}\n+```\n+\n+You can export the custom field by passing in a header file like below\n+```\n+customType,customField.foo,customField.localized.de,customField.localized.en\n+```\n+\n+The CSV exported is compatible with the [csv-parser-price](https://commercetools.github.io/nodejs/cli/csv-parser-price.html) module, and can be used to import exported prices to the CTP platform.\n+\n### JS\nFor more direct usage, it is possible to use this module directly:\n```js\n",
        "chatgpt_rag": "docs(putout-script): update template values documentation"
    },
    {
        "msg": "docs: typo\n[skip ci]",
        "diff": "diff --git a/README.md b/README.md @@ -336,7 +336,7 @@ Support this project by becoming a sponsor. Your logo will show up here with a l\n[<img src=\"https://nodemon.io/sparkpost.svg\" width=\"200\">](https://sparkpo.st/nodemon)\n-[<img src=\"https://nodemon.io/minmax.png\" width=\"200\">](https://https://mixmax.com)\n+[<img src=\"https://nodemon.io/mixmax.png\" width=\"200\">](https://https://mixmax.com)\n# License\n",
        "date": "02.02.2018 11:36:39",
        "repo": "remy/nodemon",
        "type": "docs",
        "sim_msg": "docs: fix contributors link, fixed",
        "sim_diff": "diff --git a/README.md b/README.md @@ -97,7 +97,7 @@ Support this project by becoming a sponsor. Your logo will show up here with a l\n## Contributors\nThis project exists thanks to all the people who contribute. [[Contribute](CONTRIBUTING.md)].\n-<a href=\"graphs/contributors\"><img src=\"https://opencollective.com/docsify/contributors.svg?width=890\" /></a>\n+<a href=\"https://github.com/QingWei-Li/docsify/graphs/contributors\"><img src=\"https://opencollective.com/docsify/contributors.svg?width=890\" /></a>\n## License\n",
        "chatgpt_rag": "docs: fix link to mixmax in README.md"
    },
    {
        "msg": "docs(aspectratiobox): added docs",
        "diff": "diff --git a/packages/chakra-ui-docs/docs/alertdialog.mdx b/packages/chakra-ui-docs/docs/alertdialog.mdx @@ -120,9 +120,9 @@ export default {\n## Props\n-AlertDialog and it's components composes the `Modal` component, the only\n+AlertDialog and it's components composes the `CModal` component, the only\nexception is that it requires a `leastDestructiveRef` which is similar to the\n-`initialFocusRef` in `Modal`\n+`initialFocusRef` in `CModal`\n| Name | Type | Default | Description |\n| ------------------------------ | --------------------------------- | ------- | ------------------------------------------------------------- |\n",
        "date": "05.04.2020 10:30:11",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "sim_msg": "feat(cmp/modal): use new CmpWaitForLibrary component",
        "sim_diff": "diff --git a/components/cmp/modal/src/index.js b/components/cmp/modal/src/index.js @@ -2,19 +2,14 @@ import React, {Component} from 'react'\nimport PropTypes from 'prop-types'\nimport {CmpModalContainer} from './CmpModal'\n-import CmpServices from '../../services/src/index'\n+import CmpServices, {CmpWaitForLibrary} from '../../services/src/index'\nclass CmpModal extends Component {\n- state = {cmpReady: this.props.cmpReady}\n-\n- componentDidMount() {\n- document.addEventListener('cmpReady', function() {\n- this.setState({cmpReady: true})\n- })\n- }\n-\nrender() {\n+ const {checkCmpLibraryIsLoaded} = this.props\n+\nreturn (\n+ <CmpWaitForLibrary cmpReady={!checkCmpLibraryIsLoaded}>\n<CmpServices>\n{({getPurposesAndVendors, sendConsents}) => (\n<CmpModalContainer\n@@ -24,11 +19,13 @@ class CmpModal extends Component {\n/>\n)}\n</CmpServices>\n+ </CmpWaitForLibrary>\n)\n}\n}\nCmpModal.defaultProps = {\n+ checkCmpLibraryIsLoaded: true,\ncmpReady: false,\nlang: 'es',\nonExit: () => {},\n@@ -36,6 +33,7 @@ CmpModal.defaultProps = {\n}\nCmpModal.propTypes = {\n+ checkCmpLibraryIsLoaded: PropTypes.bool,\ncmpReady: PropTypes.bool,\nlang: PropTypes.string,\nlogo: PropTypes.string.isRequired,\n",
        "chatgpt_rag": "fix(docs): update component name in AlertDialog documentation"
    },
    {
        "msg": "docs(TextArea): fix verbiage in TextArea docs\nChange the phrase  \"don't support more\" to \"don't support anymore\" in the TextArea docs source, for proper English grammar",
        "diff": "diff --git a/docs/src/examples/addons/TextArea/Usage/index.js b/docs/src/examples/addons/TextArea/Usage/index.js @@ -9,7 +9,7 @@ const TextAreaUsageExamples = () => (\n<Segment>\n<Message warning>\n<Message.Header>Auto height</Message.Header>\n- We don't support `autoHeight` more. If you need this feature you can use{' '}\n+ We don't support `autoHeight` anymore. If you need this feature you can use{' '}\n<a\nhref='https://www.npmjs.com/package/react-textarea-autosize'\nrel='noopener noreferrer'\n",
        "date": "16.01.2022 04:24:59",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "feat(Dialog): change spacing between title and description",
        "sim_diff": "diff --git a/src/Dialog/index.js b/src/Dialog/index.js @@ -165,7 +165,7 @@ const Dialog = ({\n<StyledDialogCenterWrapper>\n<StyledDialogContent shown={shown} ref={ref} id={dialogID}>\n{illustration && <IllustrationContainer>{illustration}</IllustrationContainer>}\n- <Stack spacing=\"tight\" spaceAfter=\"medium\">\n+ <Stack spacing=\"condensed\" spaceAfter=\"medium\">\n{title && <Heading type=\"title3\">{title}</Heading>}\n{description && <Text type=\"secondary\">{description}</Text>}\n</Stack>\n",
        "chatgpt_rag": "fix(TextArea): correct spelling mistake in warning message"
    },
    {
        "msg": "docs: fix url in with-typescript-plugin readme",
        "diff": "diff --git a/packages/razzle-plugin-typescript/README.md b/packages/razzle-plugin-typescript/README.md @@ -4,7 +4,7 @@ This package contains a plugin for using TypeScript with Razzle\nRazzle now has support for typescript using babel. Unless you specifically need this plugin we recommend using the builtin support\n-Use [with-typescript example](https://github.com/jaredpalmer/razzle/tree/next/examples/with-typescript) instead.\n+Use [with-typescript example](https://github.com/jaredpalmer/razzle/tree/master/examples/with-typescript) instead.\n## Usage in Razzle Projects\n@@ -22,7 +22,7 @@ module.exports = {\n};\n```\n-See full configuration in the [typescript example project](https://github.com/jaredpalmer/razzle/tree/master/examples/with-typescript).\n+See full configuration in the [typescript example project](https://github.com/jaredpalmer/razzle/tree/master/examples/with-typescript-plugin).\n### With custom options:\n",
        "date": "18.03.2021 22:01:38",
        "repo": "jaredpalmer/razzle",
        "type": "docs",
        "sim_msg": "docs(typescript): make internal links relative",
        "sim_diff": "diff --git a/packages/typescript/README.md b/packages/typescript/README.md **Please see the [main Hops Readme](../../DOCUMENTATION.md) for general information and a Getting Started Guide.**\n-This is a [preset for Hops](https://github.com/xing/hops/tree/master#presets) that can be used to enable [TypeScript](https://www.typescriptlang.org/) support for Hops projects.\n+This is a [preset for Hops](../../DOCUMENTATION.md#presets) that can be used to enable [TypeScript](https://www.typescriptlang.org/) support for Hops projects.\n## Installation\n@@ -14,19 +14,19 @@ Add this preset to your existing Hops React project:\nnpm install --save hops-typescript typescript\n```\n-If you don't already have an existing Hops project read this section [on how to set up your first Hops project.](https://github.com/xing/hops/tree/master#quick-start)\n+If you don't already have an existing Hops project read this section [on how to set up your first Hops project.](../../DOCUMENTATION.md#quick-start)\n## Usage\nOnce this preset is installed and you have a [`tsconfig.json`](https://www.typescriptlang.org/docs/handbook/tsconfig-json.html) in your application root you can start writing your app using TypeScript.\n-Check out this [integration test](https://github.com/xing/hops/tree/master/packages/spec/integration/typescript) as an example for how to use this preset.\n+Check out this [integration test](../spec/integration/typescript) as an example for how to use this preset.\n## Configuration\nThe only required configuration is a `tsconfig.json` in your project root.\n-This preset contains a [minimal `tsconfig.json`](https://github.com/xing/hops/blob/master/packages/typescript/tsconfig.json) file which we recommend you extend in your `tsconfig.json`:\n+This preset contains a [minimal `tsconfig.json`](../typescript/tsconfig.json) file which we recommend you extend in your `tsconfig.json`:\nExample:\n",
        "chatgpt_rag": "docs(typescript): update link to typescript example project in README\n"
    },
    {
        "msg": "docs: update vuepress docs with codesandbox starter",
        "diff": "diff --git a/website/pages/with-vuepress.mdx b/website/pages/with-vuepress.mdx @@ -74,7 +74,7 @@ export default ({\n}\n}\n})\n-})\n+}\n```\nNow you can wrap your main application inside the Chakra `CThemeProvider` component by creating a layout wrapper in `theme/layouts/Layout.vue`.\n@@ -105,7 +105,11 @@ export default {\n## Using Chakra components\n-_In your `App.vue` file._\n+You can now use Chakra in your custom components for your theme in either your `theme/components` folder (available to other theme components),\n+or your `theme/global-components` folder (available to your markdown pages as well as other components).\n+Learn more about theme inheritance in the [Vuepress documentation](https://vuepress.vuejs.org/theme/inheritance.html#inheritance-strategy)\n+\n+_In your `my-component.vue` file._\n```vue\n<template>\n@@ -120,7 +124,7 @@ _In your `App.vue` file._\nimport { CBox, CButton } from '@chakra-ui/vue'\nexport default {\n- name: 'App',\n+ name: 'MyComponent',\ncomponents: {\nCBox,\nCButton\n@@ -128,3 +132,13 @@ export default {\n}\n</script>\n```\n+\n+### Vuepress Codesandbox Starters\n+\n+Here's a link to sample component starter with Nuxt.js\n+\n+- [Vuepress Starter](https://codesandbox.io/s/chakra-ui-vuepress-starter-qx4up)\n+\n+### Storybook Components\n+\n+You can also view all developed components in [Storybook](https://chakra-ui-vue.netlify.com)!\n",
        "date": "16.03.2021 11:45:13",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "sim_msg": "docs: add showcase to README",
        "sim_diff": "diff --git a/README.md b/README.md @@ -33,6 +33,26 @@ https://vuepress.vuejs.org/\n- Customizable navbar and sidebar\n- [Auto-generated GitHub link and page edit links](https://vuepress.vuejs.org/default-theme-config/#git-repo-and-edit-links)\n+## Showcase\n+\n+Websites built with VuePress:\n+\n+### Vue Ecosystem\n+\n+- [vue-cli](https://cli.vuejs.org/)\n+- [vuex](https://vuex.vuejs.org/)\n+- [vue-server-renderer](https://ssr.vuejs.org/)\n+- [vue-router](https://github.com/vuejs/vue-router)\n+- [vue-test-utils](https://vue-test-utils.vuejs.org/)\n+- [vue-loader](https://vue-loader.vuejs.org/)\n+- [vetur](https://vuejs.github.io/vetur/)\n+- [rollup-plugin-vue](https://rollup-plugin-vue.vuejs.org/)\n+\n+### Community\n+\n+- [cr-vue](https://cr-vue.mio3io.com/)\n+- [vuesax](https://lusaxweb.github.io/vuesax/)\n+\n## Todo Features\nVuePress is still a work in progress. There are a few things that it currently does not support but are planned:\n",
        "chatgpt_rag": "docs: add Chakra components usage guide to README"
    },
    {
        "msg": "docs(docsearch): added docsearch to docs",
        "diff": "diff --git a/docs/content/settings.json b/docs/content/settings.json \"dark\": \"/logo-dark.svg\"\n},\n\"github\": \"nuxt-community/firebase-module\",\n- \"twitter\": \"nuxt_js\"\n+ \"twitter\": \"nuxt_js\",\n+ \"algolia\": {\n+ \"apiKey\": \"26073a7590724b3efc377b3b7608f3e0\",\n+ \"indexName\": \"nuxtjs_firebase\",\n+ \"langAttribute\": \"lang\"\n+}\n}\n",
        "date": "15.10.2020 22:00:37",
        "repo": "nuxt-community/firebase-module",
        "type": "docs",
        "sim_msg": "build: :hammer: change target to es2020 because it's basically suported in all browsers",
        "sim_diff": "diff --git a/public/resources/ts/tsconfig.json b/public/resources/ts/tsconfig.json \"compilerOptions\": {\n\"module\": \"es2015\",\n\"moduleResolution\": \"node\",\n- \"target\": \"es2017\",\n- \"lib\": [\"dom\", \"dom.iterable\", \"ESNext.String\"],\n+ \"target\": \"es2020\",\n+ \"lib\": [\"ES2020\", \"dom\", \"dom.iterable\", \"ESNext.String\"],\n\"outDir\": \"../js\"\n},\n\"include\": [\".\", \"common-defer.js\"]\n",
        "chatgpt_rag": "feat: :sparkles: add algolia settings for search functionality in the app"
    },
    {
        "msg": "docs(Document): use only https sources",
        "diff": "diff --git a/docs/src/components/Document.js b/docs/src/components/Document.js @@ -13,42 +13,49 @@ const Document = ({ Body, children, Head, Html, siteData: { dev, versions } }) =\n<link rel='stylesheet' href='/style.css' />\n<link\nrel='stylesheet'\n- href={`//cdnjs.cloudflare.com/ajax/libs/semantic-ui/${versions.sui}/semantic.min.css`}\n+ href={`https://cdnjs.cloudflare.com/ajax/libs/semantic-ui/${versions.sui}/semantic.min.css`}\n/>\n- <script src={`//cdnjs.cloudflare.com/ajax/libs/anchor-js/${versions.anchor}/anchor.min.js`} />\n<script\n- src={`//cdn.jsdelivr.net/npm/@babel/standalone@${versions.babel.standalone}/babel.min.js`}\n+ src={`https://cdnjs.cloudflare.com/ajax/libs/anchor-js/${versions.anchor}/anchor.min.js`}\n/>\n<script\n- src={`//cdn.jsdelivr.net/npm/@babel/preset-env-standalone@${\n+ src={`https://cdn.jsdelivr.net/npm/@babel/standalone@${\n+ versions.babel.standalone\n+ }/babel.min.js`}\n+ />\n+ <script\n+ src={`https://cdn.jsdelivr.net/npm/@babel/preset-env-standalone@${\nversions.babel.standalone\n}/babel-preset-env.min.js`}\n/>\n- <script src={`//cdn.jsdelivr.net/faker.js/${versions.faker}/faker.min.js`} />\n+ <script src={`https://cdn.jsdelivr.net/faker.js/${versions.faker}/faker.min.js`} />\n- <script crossOrigin='true' src={`//unpkg.com/prettier@${versions.prettier}/standalone.js`} />\n<script\ncrossOrigin='true'\n- src={`//unpkg.com/prettier@${versions.prettier}/parser-babylon.js`}\n+ src={`https://unpkg.com/prettier@${versions.prettier}/standalone.js`}\n+ />\n+ <script\n+ crossOrigin='true'\n+ src={`https://unpkg.com/prettier@${versions.prettier}/parser-babylon.js`}\n/>\n<script\n- src={`//cdnjs.cloudflare.com/ajax/libs/prop-types/${versions.propTypes}/prop-types${\n+ src={`https://cdnjs.cloudflare.com/ajax/libs/prop-types/${versions.propTypes}/prop-types${\nsiteData.dev ? '' : '.min'\n}.js`}\n/>\n<script\n- src={`//cdnjs.cloudflare.com/ajax/libs/react/${versions.react}/umd/react${\n+ src={`https://cdnjs.cloudflare.com/ajax/libs/react/${versions.react}/umd/react${\ndev ? '.development' : '.production.min'\n}.js`}\n/>\n<script\n- src={`//cdnjs.cloudflare.com/ajax/libs/react-dom/${versions.react}/umd/react-dom${\n+ src={`https://cdnjs.cloudflare.com/ajax/libs/react-dom/${versions.react}/umd/react-dom${\ndev ? '.development' : '.production.min'\n}.js`}\n/>\n<script\n- src={`//cdnjs.cloudflare.com/ajax/libs/react-dom/${\n+ src={`https://cdnjs.cloudflare.com/ajax/libs/react-dom/${\nversions.react\n}/umd/react-dom-server.browser${dev ? '.development' : '.production.min'}.js`}\n/>\n",
        "date": "29.09.2018 13:13:49",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "feat: upgrate dev libs",
        "sim_diff": "diff --git a/package.json b/package.json \"@babel/preset-react\": \"~7.9.1\",\n\"babel-loader\": \"8.1.0\",\n\"babel-plugin-transform-es2015-modules-commonjs\": \"~6.26.2\",\n- \"css-loader\": \"~3.4.2\",\n+ \"css-loader\": \"~3.5.3\",\n\"jquery\": \"^3.4.1\",\n\"less\": \"~3.11.1\",\n\"less-loader\": \"~5.0.0\",\n\"lodash\": \"^4.17.15\",\n- \"rollup\": \"~2.1.0\",\n+ \"rollup\": \"~2.7.3\",\n\"rollup-plugin-babel\": \"~4.4.0\",\n\"rollup-plugin-commonjs\": \"~10.1.0\",\n\"rollup-plugin-extensions\": \"~0.1.0\",\n\"rollup-plugin-json\": \"~4.0.0\",\n\"rollup-plugin-peer-deps-external\": \"~2.2.0\",\n- \"rollup-plugin-postcss\": \"~2.5.0\",\n+ \"rollup-plugin-postcss\": \"~3.1.1\",\n\"rollup-plugin-url\": \"~3.0.1\",\n- \"style-loader\": \"~1.1.3\",\n- \"url-loader\": \"~4.0.0\",\n- \"webpack\": \"~4.42.0\",\n+ \"style-loader\": \"~1.2.0\",\n+ \"url-loader\": \"~4.1.0\",\n+ \"webpack\": \"~4.43.0\",\n\"webpack-cli\": \"~3.3.11\"\n},\n\"peerDependencies\": {\n",
        "chatgpt_rag": "feat: update external script and stylesheet URLs to use HTTPS protocol"
    },
    {
        "msg": "docs: added requirements to README",
        "diff": "diff --git a/README.md b/README.md ## Quick Setup\n+Make sure you have the newest versions of Nuxt and Firebase installed and setup in your project.\n+\n+```bash\n+yarn add nuxt # OR npm i nuxt\n+yarn add firebase # OR npm i firebase\n+```\n+\nInstall the module via NPM or Yarn:\n```bash\n",
        "date": "07.03.2020 18:22:08",
        "repo": "nuxt-community/firebase-module",
        "type": "docs",
        "sim_msg": "docs: add instructions for npm install",
        "sim_diff": "diff --git a/README.md b/README.md @@ -33,6 +33,10 @@ https://vuepress.vuejs.org/\n```bash\nyarn add vuepress -D # Install 0.x.x.\nyarn add vuepress@next -D # Install next.\n+\n+or\n+npm install -D vuepress # Install 0.x.x.\n+npm install -D vuepress@next # Install next.\n```\n## Features\n",
        "chatgpt_rag": "docs: add instructions for Nuxt and Firebase installation"
    },
    {
        "msg": "docs: document externals and css imports",
        "diff": "diff --git a/website/pages/getting-started.mdx b/website/pages/getting-started.mdx @@ -103,7 +103,7 @@ yarn add --dev webpack@4.46.0 html-webpack-plugin@4.5.2\nAlso if there are issues, try adding specific package versions to resolutions in `package.json`.\n-## Common problems\n+## Common issues\nIf you have issues with css this might be related to postcss being resolved wrong.\n@@ -115,6 +115,42 @@ To fix this add:\n}\n```\n+If you get a error like this:\n+\n+```\n+node_modules/react-images-upload/index.css:1\n+.fileUploader {\n+^\n+\n+SyntaxError: Unexpected token '.'\n+ at wrapSafe (internal/modules/cjs/loader.js:1072:16)\n+```\n+\n+It means node tries to use `index.css` as a node module.\n+\n+To fix this make sure the module with the css is not externalized.\n+\n+```js\n+// razzle.config.js\n+'use strict';\n+\n+module.exports = {\n+ modifyWebpackOptions({\n+ options: {\n+ webpackOptions, // the modified options that was used to configure webpack/ webpack loaders and plugins\n+ }\n+ }) {\n+\n+ // If you use experimental.newExternals\n+ webpackOptions.notNodeExternalResMatch = (request, context) => {\n+ return /react-images-upload/.test(request)\n+ };\n+\n+ return webpackOptions;\n+ },\n+};\n+```\n+\nTo resolutions in your package.json. For npm see [here](https://stackoverflow.com/questions/52416312/npm-equivalent-of-yarn-resolutions).\n## Debugging with Inspector\n",
        "date": "13.03.2021 15:17:49",
        "repo": "jaredpalmer/razzle",
        "type": "docs",
        "sim_msg": "docs: add links to source code\nand link to navigate in repository",
        "sim_diff": "diff --git a/packages/generators/README.md b/packages/generators/README.md @@ -24,10 +24,12 @@ const { addGenerator, addonGenerator, initGenerator, loaderGenerator,\n```\n## Generators\n-- **Plugin Generator** : Creates a webpack plugin project, add starter plugin code and runs `webpack-defaults`\n-- **Remove Generator** : Removes properties from webpack configurations\n-- **Update Generator** : [WIP] Updates properties of webpack configurations\n-- **Loader Generator** : Creates a webpack loader project, add starter loader code and runs `webpack-defaults`\n-- **Init Generator** : Generates new webapck configuration as per user requirements\n-- **Add Generator** : Add properties to webpack configurations\n-- **Addon Generator** : Generates a webpack project conforming to `webpack-defaults`\n+- [**Plugin Generator**](https://github.com/webpack/webpack-cli/blob/master/packages/generators/plugin-generator.ts) : Creates a webpack plugin project, add starter plugin code and runs `webpack-defaults`\n+- [**Remove Generator**](https://github.com/webpack/webpack-cli/blob/master/packages/generators/remove-generator.ts) : Removes properties from webpack configurations\n+- [**Update Generator**](https://github.com/webpack/webpack-cli/blob/master/packages/generators/update-generator.ts) : [WIP] Updates properties of webpack configurations\n+- [**Loader Generator**](https://github.com/webpack/webpack-cli/blob/master/packages/generators/loader-generator.ts) : Creates a webpack loader project, add starter loader code and runs `webpack-defaults`\n+- [**Init Generator**](https://github.com/webpack/webpack-cli/blob/master/packages/generators/init-generator.ts) : Generates new webapck configuration as per user requirements\n+- [**Add Generator**](https://github.com/webpack/webpack-cli/blob/master/packages/generators/add-generator.ts) : Add properties to webpack configurations\n+- [**Addon Generator**](https://github.com/webpack/webpack-cli/blob/master/packages/generators/addon-generator.ts) : Generates a webpack project conforming to `webpack-defaults`\n+---\n+[Back to Packages](https://github.com/webpack/webpack-cli/tree/master/packages)\n",
        "chatgpt_rag": "docs: update common problems to common issues, add solution for node module css error"
    },
    {
        "msg": "docs: link to razzle 3 docs",
        "diff": "diff --git a/website/pages/index.mdx b/website/pages/index.mdx @@ -16,6 +16,10 @@ JavaScript applications are tough to setup. Either you buy into a framework, for\n- [Jest](https://github.com/facebook/jest) test runner setup with sensible defaults via `razzle test`\n- SPA mode, build client side apps with razzle\n+## Not ready for Razzle 4.0?\n+\n+[Razzle 3 docs](https://razzle-git-three-jared.vercel.app/)\n+\n## Getting help\nIf you get stuck, check out Razzle's [GitHub Discussions](https://github.com/jaredpalmer/razzle/discussions). In addition, #razzle-afterjs on [Formium Community Discord Server](https://discord.gg/pJSg287) is a great way to get help quickly too.\n",
        "date": "24.03.2021 23:46:50",
        "repo": "jaredpalmer/razzle",
        "type": "docs",
        "sim_msg": "docs: Add discouraging notes about Mocha [ci skip]",
        "sim_diff": "diff --git a/docs/Guide.Mocha.md b/docs/Guide.Mocha.md This guide describes how to install [Mocha](mochajs.org) as a test runner to be used by Detox for running the E2E tests.\n-**Disclaimer:**\n-\n-* Here we focus on installing Detox on _new projects_. If you're migrating a project with an existing Detox installation, please apply some common sense while using this guide.\n-\n+Note that while Mocha is lightweight and easy to set up, we nevertheless encourage usage of [Jest](Guide.Jest.md]) instead, for 2 main reasons:\n+1. Mocha does not support parallel-test execution (i.e. splitting the test suites between concurrently running test devices/emulators).\n+2. Advanced integration features such as taking device screenshots on failures will not be as timely accurate as with working with Jest.\n## Installation\n+**Disclaimer: **Here we focus on installing Detox on _new projects_. If you're migrating a project with an existing Detox installation, please apply some common sense while using this guide.\n+\n### 1. Install Mocha :coffee:\nBefore starting with Mocha setup, be sure to complete the preliminary sections of the [Getting Started](Introduction.GettingStarted.md) guide.\n",
        "chatgpt_rag": "docs: Add link to Razzle 3 docs for users not ready for Razzle 4.0 [ci skip]"
    },
    {
        "msg": "docs(IconExampleIconGroup): fix circle outline",
        "diff": "diff --git a/docs/src/examples/elements/Icon/Groups/IconExampleIconGroup.js b/docs/src/examples/elements/Icon/Groups/IconExampleIconGroup.js @@ -3,7 +3,7 @@ import { Icon } from 'semantic-ui-react'\nconst IconExampleIconGroup = () => (\n<Icon.Group size='huge'>\n- <Icon size='big' name='thin circle' />\n+ <Icon size='big' name='circle outline' />\n<Icon name='user' />\n</Icon.Group>\n)\n",
        "date": "20.07.2018 07:22:30",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "docs(icons): update icons web documentation with new features",
        "sim_diff": "diff --git a/packages/doc/content/components/icons/icons-web.mdx b/packages/doc/content/components/icons/icons-web.mdx ## Usage\n+### Individual\n+\nIcon components receive all the available svg tag attributes.\n```javascript\n<Star stroke=\"#ffc24c\" width={26} height={26} />\n```\n+\n+### Group\n+\n+You can use the icon group of `FlagsIcons` or `UIIcons`.\n+\n+Remembering that icon groups are `objects` you can work with.\n+\n+```javascript\n+<Box d=\"flex\" gap=\"small\">\n+ {Object.entries(FlagsIcons).map(([_, Component]) => (\n+ <Component width={26} height={26} />\n+ ))}\n+</Box>\n+```\n+\n+You also can use a specific icon from a group.\n+\n+\n+```javascript\n+<UIIcons.Favorite fill=\"#d8385e\" width={26} height={26} />\n+```\n",
        "chatgpt_rag": "docs(icons): update IconExampleIconGroup with new features"
    },
    {
        "msg": "docs(install): Use the minified version of Bootstrap CSS",
        "diff": "diff --git a/docs/lib/Home/index.js b/docs/lib/Home/index.js @@ -72,7 +72,7 @@ npm install --save reactstrap@next react react-dom`}\n</pre>\n<p>Import Bootstrap CSS in the <code>src/index.js</code> file:</p>\n<pre>\n- <PrismCode className=\"language-bash\">import 'bootstrap/dist/css/bootstrap.css';</PrismCode>\n+ <PrismCode className=\"language-bash\">import 'bootstrap/dist/css/bootstrap.min.css';</PrismCode>\n</pre>\n<p>Import required reactstrap components within <code>src/App.js</code> file or your custom component files:</p>\n<pre>\n",
        "date": "12.03.2018 01:36:35",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "sim_msg": "refactor(theme): replace values on primary to secondary",
        "sim_diff": "diff --git a/packages/doc/src/components/Theme/Colors.jsx b/packages/doc/src/components/Theme/Colors.jsx @@ -113,11 +113,11 @@ const Colors = ({ theme }) => {\n<Wrapper>\n<BackgroundColor theme={theme} color=\"primary\">\n<span>primary</span>\n- <span>#231B22</span>\n+ <span>#D8385E</span>\n</BackgroundColor>\n<BackgroundColor theme={theme} color=\"secondary\">\n<span>secondary</span>\n- <span>#D8385E </span>\n+ <span>#231B22</span>\n</BackgroundColor>\n<FeedbackColors theme={theme} color=\"success\" token={0}>\n<span> feedback.success.light </span>\n",
        "chatgpt_rag": "fix(docs): update bootstrap import to use minified version"
    },
    {
        "msg": "docs(changelog): manually correct unreleased",
        "diff": "diff --git a/CHANGELOG.md b/CHANGELOG.md # Change Log\n-## [Unreleased](https://github.com/Semantic-Org/Semantic-UI-React/tree/HEAD)\n-\n-[Full Changelog](https://github.com/Semantic-Org/Semantic-UI-React/compare/v0.66.0...HEAD)\n-\n-**Implemented enhancements:**\n-\n-- Accordion.Title - 'as' prop in dynamic accordion titles [\\#1144](https://github.com/Semantic-Org/Semantic-UI-React/issues/1144)\n-\n## [v0.66.0](https://github.com/Semantic-Org/Semantic-UI-React/tree/v0.66.0) (2017-02-22)\n[Full Changelog](https://github.com/Semantic-Org/Semantic-UI-React/compare/v0.65.0...v0.66.0)\n- Add missing MenuItem `disabled` prop [\\#1363](https://github.com/Semantic-Org/Semantic-UI-React/issues/1363)\n- Remove Form `onSubmit` prop and serializer [\\#1362](https://github.com/Semantic-Org/Semantic-UI-React/issues/1362)\n- Add `link` prop to Card [\\#1350](https://github.com/Semantic-Org/Semantic-UI-React/issues/1350)\n+- Accordion.Title - 'as' prop in dynamic accordion titles [\\#1144](https://github.com/Semantic-Org/Semantic-UI-React/issues/1144)\n- Typings: unable to set many typical html element props [\\#1072](https://github.com/Semantic-Org/Semantic-UI-React/issues/1072)\n**Fixed bugs:**\n",
        "date": "21.02.2017 20:45:10",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "feat: connect required data to incoming tab",
        "sim_diff": "diff --git a/botfront/imports/ui/components/incoming/Incoming.jsx b/botfront/imports/ui/components/incoming/Incoming.jsx @@ -6,15 +6,19 @@ import PropTypes from 'prop-types';\nimport { Menu, Container, Tab } from 'semantic-ui-react';\nimport { Projects } from '../../../api/project/project.collection';\n-import { getNluModelLanguages } from '../../../api/nlu_model/nlu_model.utils';\n+import { NLUModels } from '../../../api/nlu_model/nlu_model.collection';\n+import { getPublishedNluModelLanguages, getNluModelLanguages } from '../../../api/nlu_model/nlu_model.utils';\n+import { Instances } from '../../../api/instances/instances.collection';\n+\nimport ConversationsBrowser from '../conversations/ConversationsBrowser.jsx';\n+import Activity from '../nlu/activity/Activity';\nimport LanguageDropdown from '../common/LanguageDropdown';\nclass Incoming extends React.Component {\nconstructor (props) {\nsuper(props);\n- this.state = { selectedLanguage: 'en', activeMenuItem: 'Incoming' };\n+ this.state = { selectedLanguage: 'en' };\n}\nhandleLanguageChange = (value) => {\n@@ -26,7 +30,7 @@ class Incoming extends React.Component {\nrenderPanes = () => {\nconst panes = [\n{ menuItem: 'Incoming', render: () => <Tab.Pane>Incoming data</Tab.Pane> },\n- { menuItem: 'Conversations', render: () => <Tab.Pane as={() => <ConversationsBrowser />} /> },\n+ { menuItem: 'Conversations', render: () => <Tab.Pane>Conversations</Tab.Pane> },\n{ menuItem: 'Out of Scope', render: () => <Tab.Pane>Out of Scope data</Tab.Pane> },\n{ menuItem: 'Populate', render: () => <Tab.Pane>Populate data</Tab.Pane> },\n];\n@@ -34,8 +38,10 @@ class Incoming extends React.Component {\n}\nrender () {\n- const { projectLanguages, ready } = this.props;\n+ const { projectLanguages, ready, instances } = this.props;\nconst { selectedLanguage } = this.state;\n+ console.log(instances);\n+\nif (!ready) {\nreturn <div>loading</div>;\n}\n@@ -50,6 +56,7 @@ class Incoming extends React.Component {\n/>\n</Menu.Item>\n</Menu>\n+ <>\n<Container>\n<Tab\npanes={this.renderPanes()}\n@@ -57,6 +64,7 @@ class Incoming extends React.Component {\n/>\n</Container>\n</>\n+ </>\n);\n}\n}\n@@ -65,6 +73,13 @@ Incoming.propTypes = {\nprojectLanguages: PropTypes.array,\n// projectId: PropTypes.string,\nready: PropTypes.bool,\n+ model: PropTypes.object.isRequired,\n+ utterances: PropTypes.array.isRequired,\n+ entities: PropTypes.array.isRequired,\n+ intents: PropTypes.array.isRequired,\n+ instances: PropTypes.object.isRequired,\n+ linkRender: PropTypes.func.isRequired,\n+ outDatedUtteranceIds: PropTypes.array.isRequired,\n};\nIncoming.defaultProps = {\n@@ -76,9 +91,16 @@ Incoming.defaultProps = {\nconst IncomingContainer = withTracker(({ projectId }) => {\nconst project = Projects.findOne({ _id: projectId });\nconst projectLanguages = getNluModelLanguages(project.nlu_models, true);\n+ const instances = Instances.find({ projectId }).fetch();\n+ const instance = instances ? instances.find(({ _id }) => _id === project.instance) : {};\n+\n+ console.log(instance);\nreturn {\nprojectLanguages,\n- ready: !!projectLanguages,\n+ ready: !!projectLanguages && !!instances,\n+ project,\n+ instances,\n+ instance,\n};\n})(Incoming);\n",
        "chatgpt_rag": "fix: remove unnecessary content from CHANGELOG.md"
    },
    {
        "msg": "docs(auth-init): added namespace info to vuex actions/mutations",
        "diff": "diff --git a/docs/content/en/service-options/auth.md b/docs/content/en/service-options/auth.md @@ -31,6 +31,8 @@ This sets up an `onAuthStateChanged()` listener and hooks it up to the vuex stor\nJust add a mutation/action to your vuex store ([as seen below](#onauthstatechangedmutation)) that handles what to do with the authUser object (e.g. save it to the state or get user data from FireStore) and then define the name of the action/mutation in the `firebase.services.auth.initialize` configuration as above.\n+<alert type=\"info\">You can also use namespaces for your store actions/mutations like so: `onAuthStateChangedAction: 'namespaceName/actionName'`.</alert>\n+\nWhen onAuthStateChanged() gets triggered by Firebase, the defined mutation/action will be called with the `authUser` and `claims` attributes as [as seen below](#onauthstatechangedmutation)\nTo unsubscribe from the listener simply call the `$fireAuthUnsubscribe()` function which is provided as a [combined inject](https://nuxtjs.org/guide/plugins#combined-inject).\n",
        "date": "16.10.2020 00:00:22",
        "repo": "nuxt-community/firebase-module",
        "type": "docs",
        "sim_msg": "docs: add more example on unsubscribe method\nfix",
        "sim_diff": "diff --git a/docs/api/README.md b/docs/api/README.md @@ -176,13 +176,16 @@ const store = new Vuex.Store({ ...options })\n- `subscribe(handler: Function, options?: Object): Function`\n- Subscribe to store mutations. The `handler` is called after every mutation and receives the mutation descriptor and post-mutation state as arguments:\n+ Subscribe to store mutations. The `handler` is called after every mutation and receives the mutation descriptor and post-mutation state as arguments.\n``` js\n- store.subscribe((mutation, state) => {\n+ const unsubscribe = store.subscribe((mutation, state) => {\nconsole.log(mutation.type)\nconsole.log(mutation.payload)\n})\n+\n+ // You may call unsubscribe to stop the subscription\n+ unsubscribe()\n```\nBy default, new handler is added to the end of the chain, so it will be executed after other handlers that were added before. This can be overridden by adding `prepend: true` to `options`, which will add the handler to the beginning of the chain.\n@@ -191,7 +194,7 @@ const store = new Vuex.Store({ ...options })\nstore.subscribe(handler, { prepend: true })\n```\n- To stop subscribing, call the returned unsubscribe function.\n+ The `subscribe` method will return an `unsubscribe` function, which should be called when the subscription is no longer needed. For example, you might subscribe to a Vuex Module and unsubscribe when you unregister the module. Or you might call `subscribe` from inside a Vue Component and then destroy the component later. In these cases, you should remember to unsubscribe the subscription manually.\nMost commonly used in plugins. [Details](../guide/plugins.md)\n@@ -201,13 +204,17 @@ const store = new Vuex.Store({ ...options })\n> New in 2.5.0\n- Subscribe to store actions. The `handler` is called for every dispatched action and receives the action descriptor and current store state as arguments:\n+ Subscribe to store actions. The `handler` is called for every dispatched action and receives the action descriptor and current store state as arguments.\n+ The `subscribe` method will return an `unsubscribe` function, which should be called when the subscription is no longer needed. For example, when unregistering a Vuex module or before destroying a Vue component.\n``` js\n- store.subscribeAction((action, state) => {\n+ const unsubscribe = store.subscribeAction((action, state) => {\nconsole.log(action.type)\nconsole.log(action.payload)\n})\n+\n+ // You may call unsubscribe to stop the subscription\n+ unsubscribe()\n```\nBy default, new handler is added to the end of the chain, so it will be executed after other handlers that were added before. This can be overridden by adding `prepend: true` to `options`, which will add the handler to the beginning of the chain.\n@@ -216,7 +223,7 @@ const store = new Vuex.Store({ ...options })\nstore.subscribeAction(handler, { prepend: true })\n```\n- To stop subscribing, call the returned unsubscribe function.\n+ The `subscribeAction` method will return an `unsubscribe` function, which should be called when the subscription is no longer needed. For example, you might subscribe to a Vuex Module and unsubscribe when you unregister the module. Or you might call `subscribeAction` from inside a Vue Component and then destroy the component later. In these cases, you should remember to unsubscribe the subscription manually.\n> New in 3.1.0\n",
        "chatgpt_rag": "docs: add example of using namespaces for store actions/mutations\nfix"
    },
    {
        "msg": "docs(README): fix release instructions'",
        "diff": "diff --git a/README.md b/README.md @@ -135,7 +135,6 @@ npm run deploy:docs\nUpdate the changelog (requires [github_changelog_generator][15]):\n```sh\n-npm run deploy:docs\ngithub_changelog_generator\ngit add CHANGELOG.md\ngit commit -m 'docs(changelog): update changelog [ci skip]'\n",
        "date": "28.02.2017 03:25:03",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "chore: improve release process docs",
        "sim_diff": "diff --git a/README.md b/README.md @@ -122,3 +122,9 @@ Options:\n3. Switch to `master` branch and pull latest changes\n4. Run `npm run release:patch/minor/major` command\n5. Keep `dev` branch up to date with `master`\n+\n+Above actions will lead to:\n+\n+- New npm node module release\n+- New GitHub packages node module release\n+- New GitHub release (tagged) created with changelog from commit messages\n",
        "chatgpt_rag": "docs: update release process documentation in README"
    },
    {
        "msg": "docs(Modal): fix Modal.Description description",
        "diff": "diff --git a/src/modules/Modal/ModalDescription.js b/src/modules/Modal/ModalDescription.js @@ -5,7 +5,7 @@ import React from 'react'\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps } from '../../lib'\n/**\n- * A modal can have a header.\n+ * A modal can contain a description with one or more paragraphs.\n*/\nfunction ModalDescription(props) {\nconst { children, className, content } = props\n",
        "date": "22.02.2019 11:33:11",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "feat(cmp/modal): use new CmpWaitForLibrary component",
        "sim_diff": "diff --git a/components/cmp/modal/src/index.js b/components/cmp/modal/src/index.js @@ -2,19 +2,14 @@ import React, {Component} from 'react'\nimport PropTypes from 'prop-types'\nimport {CmpModalContainer} from './CmpModal'\n-import CmpServices from '../../services/src/index'\n+import CmpServices, {CmpWaitForLibrary} from '../../services/src/index'\nclass CmpModal extends Component {\n- state = {cmpReady: this.props.cmpReady}\n-\n- componentDidMount() {\n- document.addEventListener('cmpReady', function() {\n- this.setState({cmpReady: true})\n- })\n- }\n-\nrender() {\n+ const {checkCmpLibraryIsLoaded} = this.props\n+\nreturn (\n+ <CmpWaitForLibrary cmpReady={!checkCmpLibraryIsLoaded}>\n<CmpServices>\n{({getPurposesAndVendors, sendConsents}) => (\n<CmpModalContainer\n@@ -24,11 +19,13 @@ class CmpModal extends Component {\n/>\n)}\n</CmpServices>\n+ </CmpWaitForLibrary>\n)\n}\n}\nCmpModal.defaultProps = {\n+ checkCmpLibraryIsLoaded: true,\ncmpReady: false,\nlang: 'es',\nonExit: () => {},\n@@ -36,6 +33,7 @@ CmpModal.defaultProps = {\n}\nCmpModal.propTypes = {\n+ checkCmpLibraryIsLoaded: PropTypes.bool,\ncmpReady: PropTypes.bool,\nlang: PropTypes.string,\nlogo: PropTypes.string.isRequired,\n",
        "chatgpt_rag": "refactor(modal): update ModalDescription component to contain description with paragraphs"
    },
    {
        "msg": "docs(Cards): fix broken link",
        "diff": "diff --git a/docs/lib/examples/CardGroups.js b/docs/lib/examples/CardGroups.js @@ -25,7 +25,7 @@ const Example = (props) => {\n</CardBody>\n</Card>\n<Card>\n- <CardImg top width=\"100%\" src=\"/assets/static318x180.svg\" alt=\"Card image cap\" />\n+ <CardImg top width=\"100%\" src=\"/assets/318x180.svg\" alt=\"Card image cap\" />\n<CardBody>\n<CardTitle>Card title</CardTitle>\n<CardSubtitle>Card subtitle</CardSubtitle>\n",
        "date": "03.10.2019 18:02:21",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "sim_msg": "feat(card/article): adapat default linkfactory to receive more params",
        "sim_diff": "diff --git a/components/card/article/src/index.js b/components/card/article/src/index.js @@ -180,8 +180,8 @@ CardArticle.propTypes = {\nCardArticle.defaultProps = {\ntagChip: SuiTagChip,\nfeatured: false,\n- linkFactory: ({ href, className, children, title }) =>\n- <a href={href} className={className} title={title}>{children}</a>\n+ linkFactory: ({ children, ...rest }) =>\n+ <a {...rest}>{children}</a>\n}\nCardArticle.displayName = 'CardArticle'\n",
        "chatgpt_rag": "fix(docs): update image path in CardGroups example"
    },
    {
        "msg": "docs: Fix typo in faq.md\n[skip ci]",
        "diff": "diff --git a/faq.md b/faq.md @@ -96,7 +96,7 @@ nodemon (from 1.4.2 onwards) uses [Chokidar](https://www.npmjs.com/package/choki\nIf you find your files aren't being monitored, either nodemon isn't restarting, or it reports that zero files are being watched, then you may need the polling mode.\n-To enable polling use the the legacy flag either via the terminal:\n+To enable polling use the legacy flag either via the terminal:\n```shell\n$ nodemon --legacy-watch\n",
        "date": "18.11.2021 13:49:45",
        "repo": "remy/nodemon",
        "type": "docs",
        "sim_msg": "docs: add watchmen docs",
        "sim_diff": "diff --git a/CONTRIBUTING.md b/CONTRIBUTING.md @@ -18,6 +18,13 @@ $ cd analytics\n$ npm run bootstrap\n```\n+Because analytics has a large number of packages, we need to also [install watchmen](https://facebook.github.io/watchman/docs/install.html) for better watching.\n+\n+```sh\n+brew update\n+brew install watchman\n+```\n+\n### Run locally\n```sh\n@@ -38,7 +45,7 @@ $ npm run bootstrap\n### `watch`\n-Watches all `analytics` packages and transpiles them on change.\n+Watches all `analytics` packages and builds them on change.\n#### Usage\n",
        "chatgpt_rag": "docs: fix typo in faq.md file"
    },
    {
        "msg": "docs(Progress): typo stripped -> striped",
        "diff": "diff --git a/docs/lib/Components/ProgressPage.js b/docs/lib/Components/ProgressPage.js @@ -48,7 +48,7 @@ export default class ProgressPage extends React.Component {\nPropTypes.number,\n]),\nanimated: PropTypes.bool,\n- stripped: PropTypes.bool,\n+ striped: PropTypes.bool,\ncolor: PropTypes.string,\nclassName: PropTypes.string,\nbarClassName: PropTypes.string // used to add class to the inner progress-bar element\n",
        "date": "14.12.2017 23:50:44",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "sim_msg": "refactor: add Countdown onExpire event",
        "sim_diff": "diff --git a/renderer/components/UI/Countdown.js b/renderer/components/UI/Countdown.js @@ -16,19 +16,20 @@ class Countdown extends React.Component {\ncountdownStyle: PropTypes.string,\nisContinual: PropTypes.bool,\noffset: PropTypes.oneOfType([PropTypes.number, PropTypes.instanceOf(Date)]).isRequired,\n+ onExpire: PropTypes.func,\nupdateInterval: PropTypes.number,\n}\nstatic defaultProps = {\ncolorActive: 'superGreen',\ncolorExpired: 'superRed',\n- countdownStyle: 'short',\n+ countdownStyle: 'long',\nisContinual: true,\nupdateInterval: 1,\n}\ncomponentDidMount() {\n- let { offset } = this.props\n+ let { offset, onExpire } = this.props\nlet expiresIn = offset\nif (offset instanceof Date) {\n@@ -40,10 +41,14 @@ class Countdown extends React.Component {\nif (expiresIn >= 0) {\nthis.setState({ isExpired: false })\n- const timer = setInterval(() => this.setState({ isExpired: true }), this.expiresIn * 1000)\n+ const timer = setInterval(() => {\n+ this.setState({ isExpired: true })\n+ onExpire && onExpire()\n+ }, this.expiresIn * 1000)\nthis.setState({ timer })\n} else {\nthis.setState({ isExpired: true })\n+ onExpire && onExpire()\n}\n}\n@@ -59,6 +64,7 @@ class Countdown extends React.Component {\ncountdownStyle,\nisContinual,\noffset,\n+ onExpire,\nupdateInterval,\n...rest\n} = this.props\n",
        "chatgpt_rag": "fix: corrected PropTypes typo for striped in ProgressPage component"
    },
    {
        "msg": "docs(Responsive): update ResponsiveExampleMaxWidth.js (added two words to clarify)\nAdded \"and lower\" to the 2569px width example, because that's what it does and the wording was confusing on first sight.",
        "diff": "diff --git a/docs/src/examples/addons/Responsive/Types/ResponsiveExampleMaxWidth.js b/docs/src/examples/addons/Responsive/Types/ResponsiveExampleMaxWidth.js @@ -7,7 +7,7 @@ const ResponsiveExampleMaxWidth = () => (\nVisible only if display has <code>767px</code> width and lower\n</Responsive>\n<Responsive as={Segment} maxWidth={2569}>\n- Visible only if display has <code>2569px</code> width\n+ Visible only if display has <code>2569px</code> width and lower\n</Responsive>\n</Segment.Group>\n)\n",
        "date": "02.01.2019 12:34:44",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "refactor(helpers): replace reduce with forEach",
        "sim_diff": "diff --git a/packages/helpers/src/media.js b/packages/helpers/src/media.js @@ -43,12 +43,10 @@ export const matcher = (width, isNot = false, range = 'min') => (\n}\n`;\n-availableBreakpoints.reduce((acc, label) => {\n- acc[label] = matcher(label);\n- acc.not[label] = matcher(label, true);\n-\n- return acc;\n-}, media);\n+availableBreakpoints.forEach(breakpoint => {\n+ media[breakpoint] = matcher(breakpoint);\n+ media.not[breakpoint] = matcher(breakpoint, true);\n+});\nmedia.max = width => matcher(width, false, 'max');\nmedia.not.max = width => matcher(width, true, 'max');\n",
        "chatgpt_rag": "fix(docs): update ResponsiveExampleMaxWidth component to display content for lower widths"
    },
    {
        "msg": "docs(readme): Add Netflix EDX as a user",
        "diff": "diff --git a/README.md b/README.md @@ -68,6 +68,7 @@ Here are some helpful links:\nThese great products are built on Semantic UI React. Add yours [here][22].\n+- Netflix's Edge Developer Experience team's numerous [internal apps](https://github.com/Semantic-Org/Semantic-UI-React/issues/1604)\n- http://stoplight.io\n- https://roadmap.space\n- https://edabit.com\n",
        "date": "21.04.2017 13:39:08",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "docs: Fix contributing guidelines link",
        "sim_diff": "diff --git a/packages/react/README.md b/packages/react/README.md @@ -49,7 +49,7 @@ For full documentation, visit [stitches.dev](https://stitches.dev).\n## Contributing\n-Please follow our [contributing guidelines](./CONTRIBUTING.md).\n+Please follow our [contributing guidelines](https://github.com/modulz/stitches/blob/canary/CONTRIBUTING.md).\n## Authors\n",
        "chatgpt_rag": "docs: Add Netflix's Edge Developer Experience team's internal apps link"
    },
    {
        "msg": "docs(Collapse): make example more clear\n`isOpen={collapse}` is a contradiction, because if `collapse` is `true` then it's not collapsed and if it's `false` it is collapsed.",
        "diff": "diff --git a/docs/lib/examples/Collapse.js b/docs/lib/examples/Collapse.js @@ -2,14 +2,14 @@ import React, { useState } from 'react';\nimport { Collapse, Button, CardBody, Card } from 'reactstrap';\nconst Example = (props) => {\n- const [collapse, setCollapse] = useState(false);\n+ const [isOpen, setIsOpen] = useState(false);\n- const toggle = () => setCollapse(!collapse);\n+ const toggle = () => setIsOpen(!isOpen);\nreturn (\n<div>\n<Button color=\"primary\" onClick={toggle} style={{ marginBottom: '1rem' }}>Toggle</Button>\n- <Collapse isOpen={collapse}>\n+ <Collapse isOpen={isOpen}>\n<Card>\n<CardBody>\nAnim pariatur cliche reprehenderit,\n",
        "date": "01.11.2019 17:02:09",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "sim_msg": "feat(cards): add card definitions panel",
        "sim_diff": "diff --git a/src/components/common/card.js b/src/components/common/card.js @@ -4,6 +4,8 @@ import {\nDisclosureButton,\nDisclosurePanel,\n} from '@reach/disclosure'\n+import DefinitionsPanel from '~components/common/state/definitions-panel'\n+\nimport cardStyles from './card.module.scss'\nconst CardDisclosure = ({ children }) => (\n@@ -18,10 +20,15 @@ const CardDisclsoureButton = ({ closed, expanded }) => (\n<span className={cardStyles.expanded}>{expanded}</span>\n</DisclosureButton>\n)\n+\nconst CardDisclosurePanel = ({ children }) => (\n<DisclosurePanel>{children}</DisclosurePanel>\n)\n+const CardDefinitionsPanel = ({ children }) => (\n+ <DefinitionsPanel>{children}</DefinitionsPanel>\n+)\n+\nconst CardBody = ({ children }) => (\n<div className={cardStyles.body}>{children}</div>\n)\n@@ -44,4 +51,5 @@ export {\nCardDisclosure,\nCardDisclsoureButton,\nCardDisclosurePanel,\n+ CardDefinitionsPanel,\n}\n",
        "chatgpt_rag": "refactor(collapse): update collapse functionality to use isOpen instead of collapse variable"
    },
    {
        "msg": "docs: README Grammar\n`less` is used for singular mass nouns\n`fewer` when discussing countable things",
        "diff": "diff --git a/README.md b/README.md @@ -347,9 +347,9 @@ The answer is simple, but possibly frustrating. I'm not saying (how I pronounce\n## Design principles\n-- Less flags is better\n+- Fewer flags is better\n- Works across all platforms\n-- Less features\n+- Fewer features\n- Let individuals build on top of nodemon\n- Offer all CLI functionality as an API\n- Contributions must have and pass tests\n",
        "date": "03.09.2019 11:53:51",
        "repo": "remy/nodemon",
        "type": "docs",
        "sim_msg": "docs(FLAGS): simplify document\nStructure:\n* configuring\n* available\n* examples",
        "sim_diff": "diff --git a/docs/flags/README.md b/docs/flags/README.md -# Flags :flags:\n+# Flags\n-Flags allow to disable several features inside the application.\n+Flags allow you to control the availability certain features within the application.\n-## Available flags\n-Following flags are available:\n+## Configuring Flags\n-- `disable-plugins`: Disabling use of plugins\n-- `disable-adjust-origin`: Disabling automatic adjustments to origin coordinates\n-- `disable-cmmn`: Disabling `CMMN-Editor`\n-- `disable-dmn`: Disabling `DMN-Editor`\n+You may configure flags in a `flags.json` file or pass them via CLI.\n-All flags are _not_ set per default.\n+### Configure in `flags.json`\n-## Use a configuration file\n+Place a `flags.json` file inside the `{APP_HOME}/resources` or `{USER_DATA}/resources` directory to persist them.\n-One way to use flags persistently is to create a `flags.json` configuration file inside your user directory. Just modify the configuration file inside your local `{APP_DIRECTORY}/resources` or `{USER_DATA_DIRECTORY}/resources` location.\n+### Configure via CLI\n-### BPMN-only mode example\n+Pass flags via the command line when starting the application.\n-One example of using the flags is the BPMN-only mode. To disable the `CMMN-` and `DMN-Editor`, simply modify the `flags.json` configuration file with\n+```\n+camunda-modeler --disable-plugins\n+```\n-```js\n+Flags passed as command line arguments take precedence over those configured via configuration file.\n+\n+\n+## Available Flags\n+\n+```json\n{\n- \"disable-cmmn\": true,\n- \"disable-dmn\": true\n+ \"disable-plugins\": false,\n+ \"disable-adjust-origin\": false,\n+ \"disable-cmmn\": false,\n+ \"disable-dmn\": false\n}\n```\n-![BPMN only mode](./bpmn-only.png)\n-## Use the CLI\n+## Examples\n-Another way to enable feature toggles is simply using them while starting the application via command line on Windows and Linux. E.g. in the case of disabling the `DMN-Editor`, add the following argument to the start command:\n+### BPMN-only Mode\n-```sh\n-$ camunda-modeler --disable-dmn\n+To disable the CMMN and DMN editing capabilities of the App, configure your `flags.json` like this:\n+\n+```js\n+{\n+ \"disable-cmmn\": true,\n+ \"disable-dmn\": true\n+}\n```\n+\n+As a result the app will only allow users to model BPMN diagrams.\n+\n+![BPMN only mode](./bpmn-only.png)\n",
        "chatgpt_rag": "docs(README): update design principles for clarity and consistency"
    },
    {
        "msg": "docs: fixed typo in accessibility.mdx",
        "diff": "diff --git a/packages/chakra-ui-docs/docs/accessibility.mdx b/packages/chakra-ui-docs/docs/accessibility.mdx @@ -5,7 +5,7 @@ heavy-lifting for you in order to allow you to focus on building your applicati\nAll authored components are compliant with the WAI-ARIA standards for authored components.\n-We've written the time to write summarized description of the accessibility support for\n+We've taken the time to write summarized description of the accessibility support for\nall authored components in @chakra-ui/vue. We called this document an accessibility report\nand can be found in the `accessibility.md` file in the respective component's source directory.\n",
        "date": "08.05.2020 22:36:52",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "sim_msg": "docs(typo): fix typo",
        "sim_diff": "diff --git a/src/pages/components/content-switcher/accessibility.mdx b/src/pages/components/content-switcher/accessibility.mdx @@ -49,7 +49,7 @@ be updated when these accessibility issues are resolved.\n- [W3C WAI-ARIA Tab Design Pattern](https://www.w3.org/TR/wai-aria-practices-1.1/#tabpanel)\ncovers the usage of ARIA names, state and roles, as well as the expected\n- keyboard intractions.\n+ keyboard interactions.\n- [IBM Accessibility Checklist Checkpoint](https://www.ibm.com/able/guidelines/ci162/accessibility_checklist.html):\n- [1.3.1 Info and Relationships](https://www.ibm.com/able/guidelines/ci162/info_and_relationships.html)\n",
        "chatgpt_rag": "docs(typo): fix typo in accessibility.mdx file"
    },
    {
        "msg": "docs: lint: add description",
        "diff": "diff --git a/packages/eslint/README.md b/packages/eslint/README.md @@ -145,7 +145,9 @@ module.exports.rules = {\n};\n```\n-### `lint(code, {fix, plugins})`\n+### `lint(source, {fix, plugins})`\n+\n+When you need to run **ESLint** with one plugin (*rule*), just use `lint` it will do the thing.\n```js\nconst lint = require('@putout/eslint/lint');\n",
        "date": "29.08.2022 20:49:33",
        "repo": "coderaiser/putout",
        "type": "docs",
        "sim_msg": "docs: fix eslint webpack-chain documentation",
        "sim_diff": "diff --git a/packages/@vue/cli-plugin-eslint/README.md b/packages/@vue/cli-plugin-eslint/README.md @@ -39,5 +39,5 @@ vue add @vue/eslint\n## Injected webpack-chain Rules\n-- `config.rule('eslint')`\n-- `config.rule('eslint').use('eslint-loader')`\n+- `config.module.rule('eslint')`\n+- `config.module.rule('eslint').use('eslint-loader')`\n",
        "chatgpt_rag": "docs: update lint function parameter name in README"
    },
    {
        "msg": "docs: trying a new position\nWill track over the next 30-60 days.",
        "diff": "diff --git a/README.md b/README.md @@ -11,6 +11,8 @@ nodemon does **not** require *any* changes to your code or method of development\n[![NPM version](https://badge.fury.io/js/nodemon.svg)](https://npmjs.org/package/nodemon)\n[![Travis Status](https://travis-ci.org/remy/nodemon.svg?branch=master)](https://travis-ci.org/remy/nodemon)\n+<a href=\"https://app.codesponsor.io/link/wnz2te8CdfKZ8wMjGUpi8EZG/remy/nodemon\" rel=\"nofollow\" target=\"_blank\"><img src=\"https://app.codesponsor.io/embed/wnz2te8CdfKZ8wMjGUpi8EZG/remy/nodemon.svg\" style=\"width: 888px; height: 68px;\" alt=\"Sponsor\" /></a>\n+\n# Installation\nEither through cloning with git or by using [npm](http://npmjs.org) (the recommended way):\n@@ -289,5 +291,3 @@ See the [FAQ](https://github.com/remy/nodemon/blob/master/faq.md) and please add\n# License\nMIT [http://rem.mit-license.org](http://rem.mit-license.org)\n-\n-<a href=\"https://app.codesponsor.io/link/wnz2te8CdfKZ8wMjGUpi8EZG/remy/nodemon\" rel=\"nofollow\" target=\"_blank\"><img src=\"https://app.codesponsor.io/embed/wnz2te8CdfKZ8wMjGUpi8EZG/remy/nodemon.svg\" style=\"width: 888px; height: 68px;\" alt=\"Sponsor\" /></a>\n",
        "date": "03.11.2017 16:35:53",
        "repo": "remy/nodemon",
        "type": "docs",
        "sim_msg": "docs: Tidy up README a bit",
        "sim_diff": "diff --git a/README.md b/README.md # localForage\n-[![Build Status](https://travis-ci.org/localForage/localForage.svg?branch=master&timestamp=1)](http://travis-ci.org/localForage/localForage)\n+[![Build Status](https://travis-ci.org/localForage/localForage.svg?branch=master)](http://travis-ci.org/localForage/localForage)\n[![NPM version](https://badge.fury.io/js/localforage.svg)](http://badge.fury.io/js/localforage)\n[![Dependency Status](https://img.shields.io/david/localForage/localForage.svg)](https://david-dm.org/localForage/localForage)\n[![npm](https://img.shields.io/npm/dm/localforage.svg?maxAge=2592000)](https://npmcharts.com/compare/localforage?minimal=true)\n@@ -28,8 +28,6 @@ Download the [latest localForage from GitHub](https://github.com/localForage/loc\nnpm install localforage\n```\n-localForage is compatible with [browserify](http://browserify.org/).\n-\n[supported browsers]: https://github.com/localForage/localForage/wiki/Supported-Browsers-Platforms\n## Support\n@@ -39,10 +37,6 @@ Lost? Need help? Try the\nIf you're having trouble using the library, running the tests, or want to contribute to localForage, please look through the [existing issues](https://github.com/localForage/localForage/issues) for your problem first before creating a new one. If you still need help, [feel free to file an issue](https://github.com/localForage/localForage/issues/new).\n-## Safari 10.1+\n-\n-Since Safari 10.1 we default to IndexedDB; see the [CHANGELOG](https://github.com/localForage/localForage/blob/master/CHANGELOG.md) for more info.\n-\n# How to use localForage\n## Callbacks vs Promises\n@@ -165,20 +159,6 @@ define(['localforage'], function(localforage) {\n});\n```\n-## Browserify and Webpack\n-\n-localForage 1.3+ works with both Browserify and Webpack. If you're using an\n-earlier version of localForage and are having issues with Browserify or\n-Webpack, please upgrade to 1.3.0 or above.\n-\n-Webpack will emit a warning about using a prebuilt javascript file which is fine. If you want to remove the warning you should exclude `localforage` from being parsed by webpack using the following conf :\n-\n-```javascript\n-module: {\n- noParse: /node_modules\\/localforage\\/dist\\/localforage.js/,\n- loaders: [...],\n-```\n-\n## TypeScript\nIf you have the [`allowSyntheticDefaultImports` compiler option](https://www.typescriptlang.org/docs/handbook/compiler-options.html) set to `true` in your [tsconfig.json](https://www.typescriptlang.org/docs/handbook/tsconfig-json.html) (supported in TypeScript v1.8+), you should use:\n",
        "chatgpt_rag": "docs: Tidy up README a bit, removed unnecessary sponsor link and redundant content"
    },
    {
        "msg": "docs(guide/introduction): fix typo",
        "diff": "diff --git a/docs/guide/introduction/README.md b/docs/guide/introduction/README.md @@ -23,4 +23,4 @@ The module adds a plugin to your Nuxt.js application that handles the initializa\n## Disclaimer\n-This module is meant for easy and quick set-up of Firebase in a Nuxt project. Due to the nature of this module, it is possibly not optimal for websites that need to be super performant and/or SEO friendly, since the module adds the Firebase services to the global scope. If you wan't your website to be more performant, you'd probably be better off by importing the services only in the files where you need them (i.e. by NOT using this module). That being said, the difference might be marginal depending on your project.\n+This module is meant for easy and quick set-up of Firebase in a Nuxt project. Due to the nature of this module, it is possibly not optimal for websites that need to be super performant and/or SEO friendly, since the module adds the Firebase services to the global scope. If you want your website to be more performant, you'd probably be better off by importing the services only in the files where you need them (i.e. by NOT using this module). That being said, the difference might be marginal depending on your project.\n",
        "date": "03.05.2020 23:52:37",
        "repo": "nuxt-community/firebase-module",
        "type": "docs",
        "sim_msg": "docs: Add Firebase deployment guide",
        "sim_diff": "diff --git a/docs/guide/deployment.md b/docs/guide/deployment.md @@ -92,7 +92,66 @@ See [vue-cli-plugin-s3-deploy](https://github.com/multiplegeorges/vue-cli-plugin\n### Firebase\n-> TODO | Open to contribution.\n+Create a new Firebase project on your [Firebase console](https://console.firebase.google.com). Please refer to this [documentation](https://firebase.google.com/docs/web/setup) on how to setup your project.\n+\n+Make sure you have installed [firebase-tools](https://github.com/firebase/firebase-tools) globally:\n+\n+```\n+npm install -g firebase-tools\n+```\n+\n+From the root of your project, initialize `firebase` using the command:\n+\n+```\n+firebase init\n+```\n+\n+Firebase will ask some questions on how to setup your project.\n+\n+- Choose which Firebase CLI features you want to setup your project. Make sure to select `hosting`.\n+- Select the default Firebase project for your project.\n+- Set your `public` directory to `dist` (or where your build's output is) which will be uploaded to Firebase Hosting.\n+\n+```javascript\n+// firebase.json\n+\n+{\n+ \"hosting\": {\n+ \"public\": \"app\"\n+ }\n+}\n+```\n+\n+- Select `yes` to configure your project as a single-page app. This will create an `index.html` and on your `dist` folder and configure your `hosting` information.\n+\n+```javascript\n+// firebase.json\n+\n+{\n+ \"hosting\": {\n+ \"rewrites\": [\n+ {\n+ \"source\": \"**\",\n+ \"destination\": \"/index.html\"\n+ }\n+ ]\n+ }\n+}\n+```\n+\n+Run `npm run build` to build your project.\n+\n+To deploy your project on Firebase Hosting, run the command:\n+\n+```\n+firebase deploy --only hosting\n+```\n+\n+If you want other Firebase CLI features you use on your project to be deployed, run `firebase deploy` without the `--only` option.\n+\n+You can now access your project on `https://<YOUR-PROJECT-ID>.firebaseapp.com`.\n+\n+Please refer on the [Firebase Documentation](https://firebase.google.com/docs/hosting/deploying) for more details.\n### Now\n",
        "chatgpt_rag": "docs: Update disclaimer in Firebase module introduction"
    },
    {
        "msg": "docs(README): add React-Semantic.UI-Starter",
        "diff": "diff --git a/README.md b/README.md @@ -44,6 +44,9 @@ See the [Documentation][2] for an introduction, usage information, and extensive\nThis is a listing of example projects and guides that will help you integrate Semantic UI React into your new or existing projects.\n+### [react-semantic.ui-starter][102]\n+Production-ready, performance-first, optimized, robust, fully-featured boilerplate/example for your new Progressive Web App.\n+\n### [semantic-ui-react-todos][100]\nThis example modifies the well-known [react-redux Todo List][101] to use Semantic UI components. There is also a write-up on the process in the project README.\n@@ -206,3 +209,4 @@ Big thanks to our [contributors][20], especially:\n<!-- Examples -->\n[100]: https://github.com/wyc/semantic-ui-react-todos\n[101]: https://github.com/reactjs/redux/tree/master/examples/todos\n+[102]: https://github.com/Metnew/react-semantic.ui-starter\n",
        "date": "28.04.2017 08:06:26",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "docs(readme): add deprecation notice\n<3 </3",
        "sim_diff": "diff --git a/README.md b/README.md +# Deprecation Warning\n+\n+This project was started at the advent of the Redux ecosystem, and was intended to help users get up and running quickly. Since then, tooling and best practices have evolved tremendously. In order to get the most modern experience possible, I recommend checking out something like [create-react-app](https://github.com/facebookincubator/create-react-app) which is supported by many core React and Redux developers.\n+\n+You are welcome to use this project if it is a better fit for your needs, but if you are brand new to the ecosystem I highly recommend checking out something that has received more recent updates.\n+\n+Thank you to everyone who made this project possible over the past year(s).\n+\n# React Redux Starter Kit\n[![Build Status](https://travis-ci.org/davezuko/react-redux-starter-kit.svg?branch=master)](https://travis-ci.org/davezuko/react-redux-starter-kit?branch=master)\n",
        "chatgpt_rag": "docs(readme): add link to react-semantic.ui-starter project in example projects section"
    },
    {
        "msg": "docs: update contributing with workflow",
        "diff": "diff --git a/.github/CONTRIBUTING.md b/.github/CONTRIBUTING.md @@ -56,10 +56,62 @@ immediately in all the examples. `add-dependencies` can be used to just add pack\n- `yarn test:packages`: Runs tests for packages\n- `yarn test:e2e`: Runs end-to-end tests\n- `yarn build-docs`: Builds docs/ updates doc TOC\n-- `yarn bootstrap-examples`: Run `yarn` with specific examples as workspaces. Automatically symlinks inter-dependent modules. Run `yarn restrap` in the example to reinstall.\n-- `yarn new-example`: Creates a new example from another example. `yarn new-example basic new-example`.\n-- `yarn publish-all-stable`: Does a a stable release\n- `yarn publish-all-canary`: Does a `razzle@canary` release.\n+- `yarn publish-all-stable`: Does a a stable release(uses the npm version released of the packages)\n+- `yarn new-example`: Creates a new example from another example. `yarn new-example basic new-example`.\n+- `yarn bootstrap-examples`: Run `yarn` with specific examples as workspaces. Automatically symlinks inter-dependent modules. Run `yarn restrap` in the example to reinstall.\n+- `yarn test:examples:simple`: Runs tests for all simple examples (uses the npm version released of the packages)\n+- `yarn test:examples:complex`: Runs tests for all complex examples (uses the npm version released of the packages)\n+- `yarn test:examples`: Runs tests for all examples (uses the npm version released of the packages)\n+\n+### Workflow for working on razzle core with examples\n+\n+```bash\n+\n+git clone https://github.com/<YOUR_GITHUB_USERNAME>/razzle.git\n+cd razzle\n+git checkout <my-branch>\n+NODE_ENV=development yarn install ---ignore-engines\n+\n+sudo npm install add-dependencies -g\n+\n+pwd\n+# /home/oyvind/Documents/GitHub/razzle/\n+\n+yarn install\n+\n+# to make sure tests pass\n+yarn test --runInBand\n+\n+# to add a new example\n+yarn new-example existingexample with-somefeature\n+\n+# to work on a example\n+cd examples/basic\n+example=\"$(basename $PWD)\"\n+pushd ../..\n+\n+# if it is a example with webpack5 you need to do\n+yarn add -W webpack@5.16.0\n+\n+# switch back to webpack4 later to work with webpack4\n+yarn add -W webpack@4.46.0\n+\n+# then\n+yarn bootstrap-examples $example\n+popd\n+yarn build\n+\n+# if you want to add dependencies to the example\n+add-dependencies somedependency\n+yarn restrap\n+\n+# if you make changes to startserver plugin\n+pushd ../..\n+cd packages/razzle-start-server-webpack-plugin\n+yarn build\n+popd\n+```\n### Updating your fork\n",
        "date": "13.02.2021 19:27:59",
        "repo": "jaredpalmer/razzle",
        "type": "docs",
        "sim_msg": "feat(docs): add a Debugging section to CONTRIBUTING.md",
        "sim_diff": "diff --git a/CONTRIBUTING.md b/CONTRIBUTING.md @@ -7,20 +7,17 @@ For details on contributing to documentation, see [Website Directory Readme](htt\n## Setup\n-> Install Node.js (LTS) on your system: [https://nodejs.org/](https://nodejs.org/)\n-\n-> Install yarn on your system: [https://yarnpkg.com/en/docs/install](https://yarnpkg.com/en/docs/install)\n+> Install [Node.js (LTS)](https://nodejs.org/) and [yarn](https://yarnpkg.com/en/docs/install) on your system.\n### Install dependencies\n-> Only required on the first run, subsequent runs can use `yarn start` to both\n-> bootstrap and run the development server.\n+> Only required on the first run, subsequent runs can use `yarn start` to both bootstrap and run the development server.\n```sh\n-$ git clone https://github.com/netlify/netlify-cms\n-$ cd netlify-cms\n-$ yarn\n-$ yarn bootstrap\n+git clone https://github.com/netlify/netlify-cms\n+cd netlify-cms\n+yarn\n+yarn bootstrap\n```\n### Run locally\n@@ -144,6 +141,48 @@ Netlify CMS uses the [Forking Workflow](https://www.atlassian.com/git/tutorials/\n7. PR's must be rebased before merge (feel free to ask for help).\n8. PR should be reviewed by two maintainers prior to merging.\n+## Debugging\n+\n+`yarn start` spawns a development server and uses `dev-test/config.yml` and `dev-test/index.html` to serve the CMS.\n+In order to debug a specific issue follow the next steps:\n+\n+1. Replace `dev-test/config.yml` with the relevant `config.yml`\n+\n+2. Change the content of `dev-test/index.html` to:\n+\n+```html\n+<!DOCTYPE html>\n+<html>\n+ <head>\n+ <meta charset=\"utf-8\" />\n+ <title>Netlify CMS</title>\n+ </head>\n+ <body>\n+ <script src=\"dist/netlify-cms.js\"></script>\n+ <!-- <script>\n+ // this is the place to add CMS customizations if you need to, e.g.\n+ CMS.registerPreviewTemplate('posts', PostPreview);\n+ </script> -->\n+ </body>\n+</html>\n+```\n+\n+3. Run `yarn start`\n+4. Open `http://localhost:8080/` in the browser and you should have access to the CMS\n+\n+### Debugging Git Gateway\n+\n+When debugging the CMS with Git Gateway you must:\n+\n+1. Have a Netlify site with [Git Gateway](https://docs.netlify.com/visitor-access/git-gateway/) and [Netlify Identity](https://docs.netlify.com/visitor-access/identity/) enabled. An easy way to create such a site is to use a [template](https://www.netlifycms.org/docs/start-with-a-template/), for example the [Gatsby template](https://app.netlify.com/start/deploy?repository=https://github.com/AustinGreen/gatsby-starter-netlify-cms&stack=cms)\n+2. Tell the CMS the URL of your Netlify site using a local storage item. To do so:\n+\n+ 1. Open `http://localhost:8080/` in the browser\n+ 2. Write the below command and press enter: `localStorage.setItem('netlifySiteURL', 'https://yourwebsiteurl.netlify.app/')`\n+ 3. To be sure, you can run this command as well: `localStorage.getItem('netlifySiteURL')`\n+ 4. Refresh the page\n+ 5. You should be able to log in via your Netlify Identity email/password\n+\n## License\nBy contributing to Netlify CMS, you agree that your contributions will be licensed\n",
        "chatgpt_rag": "chore(docs): update Workflow for working on razzle core with examples in CONTRIBUTING.md"
    },
    {
        "msg": "docs: add important note about ignore rules\nFixes",
        "diff": "diff --git a/README.md b/README.md @@ -86,7 +86,7 @@ A config file can take any of the command line arguments as JSON key values, for\n```json\n{\n\"verbose\": true,\n- \"ignore\": [\"*.test.js\", \"fixtures/*\"],\n+ \"ignore\": [\"*.test.js\", \"**/fixtures/**\"],\n\"execMap\": {\n\"rb\": \"ruby\",\n\"pde\": \"processing --sketch={{pwd}} --run\"\n@@ -109,7 +109,7 @@ Specify the config in the same format as you would for a config file but under `\n\"homepage\": \"http://nodemon.io\",\n\"...\": \"... other standard package.json values\",\n\"nodemonConfig\": {\n- \"ignore\": [\"test/*\", \"docs/*\"],\n+ \"ignore\": [\"**/test/**\", \"**/docs/**\"],\n\"delay\": 2500\n}\n}\n@@ -203,6 +203,8 @@ Patterns can also be ignored (but be sure to quote the arguments):\nnodemon --ignore 'lib/*.js'\n```\n+**Important** the ignore rules are patterns matched to the full absolute path, and this determines how many files are monitored. If using a wild card glob pattern, it needs to be used as `**` or omitted entirely. For example, `nodemon --ignore '**/test/**'` will work, whereas `--ignore '*/test/*'` will not.\n+\nNote that by default, nodemon will ignore the `.git`, `node_modules`, `bower_components`, `.nyc_output`, `coverage` and `.sass-cache` directories and *add* your ignored patterns to the list. If you want to indeed watch a directory like `node_modules`, you need to [override the underlying default ignore rules](https://github.com/remy/nodemon/blob/master/faq.md#overriding-the-underlying-default-ignore-rules).\n## Application isn't restarting\n",
        "date": "16.08.2022 09:20:43",
        "repo": "remy/nodemon",
        "type": "docs",
        "sim_msg": "feat(README): clarify purpose of development edition",
        "sim_diff": "diff --git a/packages/development-edition-engine-react/README.md b/packages/development-edition-engine-react/README.md ![Pattern Lab Logo](/patternlab.png \"Pattern Lab Logo\")\n-![current release](https://img.shields.io/github/release/pattern-lab/edition-node-gulp.svg) ![license](https://img.shields.io/github/license/pattern-lab/edition-node-gulp.svg) [![Join the chat at Gitter](https://badges.gitter.im/pattern-lab/node.svg)](https://gitter.im/pattern-lab/node)\n+# Pattern Lab Node - Development Edition Engine React\n-# Pattern Lab Node - Gulp Edition\n+_here be dragons_\n-The Gulp wrapper around [Pattern Lab Node Core](https://github.com/pattern-lab/patternlab-node), the default PatternEngine, and supporting frontend assets.\n+This Development Edition is a variant of [Edition Node Gulp](https://github.com/pattern-lab/patternlab-node/tree/master/packages/edition-node-gulp) for convience purposes only, loaded with the React Engine. The goals of this Development Edition are two-fold:\n-## Packaged Components\n+* Develop the [React Engine](https://github.com/pattern-lab/patternlab-node/tree/master/packages/engine-react)\n+* Build and test against React pattern tree\n-This Edition comes with the following components:\n+If you'd like to help with the React Engine, please reference the [contribution guidelines](https://github.com/pattern-lab/patternlab-node/blob/master/.github/CONTRIBUTING.md).\n-* `pattern-lab/patternlab-node`: [GitHub](https://github.com/pattern-lab/patternlab-node) | [npm](https://www.npmjs.com/package/@pattern-lab/patternlab-node)\n-* `pattern-lab/patternengine-node-mustache`: [GitHub](https://github.com/pattern-lab/patternengine-node-mustache) | [npm](https://www.npmjs.com/package/@pattern-lab/patternengine-node-mustache)\n-* `pattern-lab/styleguidekit-assets-default`: [GitHub](https://github.com/pattern-lab/styleguidekit-assets-default) | [npm](https://www.npmjs.com/package/@pattern-lab/styleguidekit-assets-default)\n-* `pattern-lab/styleguidekit-mustache-default`: [GitHub](https://github.com/pattern-lab/styleguidekit-mustache-default) | [npm](https://www.npmjs.com/package/@pattern-lab/styleguidekit-mustache-default)\n-\n-## Prerequisites\n-\n-This Edition uses [Node](https://nodejs.org) for core processing, [npm](https://www.npmjs.com/) to manage project dependencies, and [gulp.js](http://gulpjs.com/) to run tasks and interface with the core library. You can follow the directions for [installing Node](https://nodejs.org/en/download/) on the Node website if you haven't done so already. Installation of Node will include npm.\n-\n-## Installing\n-\n-Pattern Lab Node can be used different ways. Editions like this one are **example** pairings of Pattern Lab code and do not always have an upgrade path or simple means to run as a dependency within a larger project. Users wishing to be most current and have the greatest flexibility are encouraged to consume `patternlab-node` directly. Users wanting to learn more about Pattern Lab and have a tailored default experience are encouraged to start with an Edition. Both methods still expect to interact with other elements of the [Pattern Lab Ecosystem](https://github.com/pattern-lab/patternlab-node#ecosystem).\n-\n-As an Edition, the simplist installation sequence is to clone this repository.\n-\n-``` bash\n-mkdir newApp && cd newApp\n-git clone https://github.com/pattern-lab/edition-node-gulp.git\n-npm install\n-```\n-\n-## Getting Started\n-\n-This edition comes pre-packaged with a couple simple gulp tasks. Extend them as needed.\n-\n-**build** patterns, copy assets, and construct ui\n-\n-``` bash\n-gulp patternlab:build\n-```\n-\n-build patterns, copy assets, and construct ui, watch source files, and **serve** locally\n-\n-``` bash\n-gulp patternlab:serve\n-```\n-\n-logs Pattern Lab Node usage and **help** content\n-\n-``` bash\n-gulp patternlab:help\n-```\n-\n-To interact further with Pattern Lab Node, such as to install plugins or starterkits, check out the rest of the `gulpfile.js`. You could also install the [Pattern Lab Node Command Line Interface](https://github.com/pattern-lab/patternlab-node-cli) or learn more about the [core API](https://github.com/pattern-lab/patternlab-node#usage).\n-\n-## Updating Pattern Lab\n-\n-To update Pattern Lab please refer to each component's GitHub repository, and the [master instructions for core](https://github.com/pattern-lab/patternlab-node/wiki/Upgrading). The components are listed at the top of the README.\n+> Development Editions of Pattern Lab provide the ability to work on and commit changes to select packages within the overall Pattern Lab [ecosystem](http://patternlab.io/docs/advanced-ecosystem-overview.html). This Edition is NOT stable.\n",
        "chatgpt_rag": "chore(README): update nodemon ignore rules to use full absolute path patterns"
    },
    {
        "msg": "docs: how to watch .env files\n[skip ci]",
        "diff": "diff --git a/faq.md b/faq.md @@ -18,6 +18,18 @@ In your `nodemon.json` (or in your `package.json`) you can include the follow ev\n}\n```\n+# nodemon doesn't restart on .env change\n+\n+This is an edge case with how nodemon watches files. This is because nodemon doesn't know if `.env` is a hidden file with no extension or a `*.env` without a filename.\n+\n+Nonetheless, to trigger a change on `.env` (or similar files like `.bash_profile`), you need to explicitly tell nodemon to watch the file.\n+\n+However, now nodemon will *only* watch the `.env` file, so you need to add to what nodemon is watching, i.e. tell nodemon to _also_ watch the current working directory:\n+\n+```bash\n+$ nodemon --watch .env --watch app app/index.js\n+```\n+\n# nodemon doesn't work with my REPL\nCreate an nodemon.json file with the setting:\n",
        "date": "28.11.2018 09:31:44",
        "repo": "remy/nodemon",
        "type": "docs",
        "sim_msg": "docs(contributing): explain special commit messages",
        "sim_diff": "diff --git a/CONTRIBUTING.md b/CONTRIBUTING.md @@ -23,6 +23,7 @@ broken or desired.\nWhile quibbling about grammar in issue titles may seem a bit pedantic, adhering to some simple rules can make it much\neasier to understand a Bug or an Enhancement from the title alone. For example, is the title **\"Browsers should support\nblinking text\"** a bug or a feature request?\n+\n- Enhancements: The title should be an imperative statement of how things should be. **\"Add support for blinking text\"**\n- Bugs: The title should be a declarative statement of how things are. **\"Text does not blink\"**\n@@ -31,6 +32,7 @@ blinking text\"** a bug or a feature request?\n### Build Dependencies\nBefore you can build the Cisco Spark JS SDK, you will need the following dependencies:\n+\n- [Node.js](https://nodejs.org/) 6.x (LTS)\n- We recommend using [nvm](https://github.com/creationix/nvm) (or [nvm-windows](https://github.com/coreybutler/nvm-windows))\nto easily switch between Node.js versions\n@@ -76,6 +78,7 @@ npm test\n```\n#### Run Unit Tests\n+\nHandy during early plugin development when you can write a bunch of unit tests.\n```bash\n@@ -83,6 +86,7 @@ npm test -- --package PACKAGENAME --unit\n```\n### Run unit tests in watch mode\n+\nOK, this one's a handful and requires a global package, but there were too many possible variants to\nhardcode it any where.\n@@ -92,6 +96,7 @@ nodemon -w packages/PACKAGENAME/src -w packages/PACKAGENAME/test -x \"npm test --\n```\n#### Run Node.js Tests\n+\nUsually faster, and can build on the fly, thus no need to rebuild everything between test runs\n```bash\n@@ -99,6 +104,7 @@ npm test -- --package PACKAGENAME --node\n```\n#### Run Browser Tests\n+\nKeeps the browser open so that you can reload set break points and reload the page\n```bash\n@@ -165,6 +171,28 @@ The footer should contain any information about **Breaking changes** and is also\n**Breaking Changes** should start with the word `BREAKING CHANGE:` with a space or two newlines. The rest of the commit message is then used for this.\n+#### Special Commit Messages\n+\n+These are commit messages that will have an impact on how the build pipeline behaves. With the exception of `#no-push`, they are not to be used without prior approval.\n+\n+All of these commit messages should include an explanation for why you're using them. You'll need to commit with `-n` or `--no-verify` to bypass the commit message linter.\n+\n+##### `#force-publish`\n+\n+Force all packages to be published under the new version, not just the changed packages.\n+\n+##### `#ignore-tooling`\n+\n+Normally, we run all test suites when tooling changes, however, not all categories of tooling changes need to be tested quite so strictly. This message will omit the `tooling` meta package when determining what packages to test.\n+\n+##### `#no-push`\n+\n+Have Jenkins run all the tests, but abort the build before merging into master.\n+\n+##### `[ci skip]`\n+\n+Do not run tests for this build.\n+\n### Submitting a Pull Request\nPrior to developing a new feature, be sure to search the [Pull Requests](https://github.com/ciscospark/spark-js-sdk/pulls) for your idea to ensure you're not creating a duplicate change. Then, create a development branch in your forked repository for your idea and start coding!\n",
        "chatgpt_rag": "docs(faq): explain how to make nodemon watch .env file changes"
    },
    {
        "msg": "docs(messaging): added messaing object example for collectionEnabled",
        "diff": "diff --git a/docs/guide/options/README.md b/docs/guide/options/README.md @@ -608,6 +608,12 @@ Initializes Firebase Analytics and makes it available via `$fireAnalytics` and `\n```js\nanalytics: true\n+\n+// or\n+\n+messaging: {\n+ collectionEnabled: true, // default\n+}\n```\n#### collectionEnabled\n",
        "date": "29.06.2020 23:49:57",
        "repo": "nuxt-community/firebase-module",
        "type": "docs",
        "sim_msg": "docs(segment): update docs and add API params",
        "sim_diff": "diff --git a/packages/analytics-plugin-segment/README.md b/packages/analytics-plugin-segment/README.md Integration with [segment](https://segment.com/) for [analytics](https://www.npmjs.com/package/analytics)\n-## Install\n+<!-- ANALYTICS_DOCS:START (TOC) -->\n+- [Usage](#usage)\n+- [Plugin Options](#plugin-options)\n+<!-- ANALYTICS_DOCS:END (TOC) -->\n-```\n-npm install analytics\n-npm install analytics-plugin-segment\n+<!-- ANALYTICS_DOCS:START (USAGE) -->\n+## Usage\n+\n+Install `analytics` and `analytics-plugin-segment` packages\n+\n+```bash\n+npm install analytics analytics-plugin-segment\n```\n-## Usage\n+Import and initialize in project\n```js\nimport Analytics from 'analytics'\nimport segmentPlugin from 'analytics-plugin-segment'\nconst analytics = Analytics({\n- app: 'my-app',\n- version: 100,\n+ app: 'awesome-app',\nplugins: [\n- /* segment integration */\nsegmentPlugin({\n- writeKey: 'abc12345xyz'\n- }),\n- // ...other plugins\n+ writeKey: '123-xyz'\n+ })\n]\n})\n-// Send tracking event\n-analytics.track('buttonPressed', {\n- label: 'buy now'\n+/* Track page views */\n+analytics.page()\n+\n+/* Track custom events */\n+analytics.track('buttonClicked')\n+\n+/* Identify visitors */\n+analytics.identify('user-xzy-123', {\n+ name: 'Bill Murray',\n+ cool: true\n+})\n+\n+```\n+<!-- ANALYTICS_DOCS:END -->\n+\n+<!-- ANALYTICS_DOCS:START (API) -->\n+## Plugin Options\n+\n+**Arguments**\n+\n+- **pluginConfig** <code>object</code> - Plugin settings\n+- **pluginConfig.writeKey** <code>string</code> - Your segment writeKey\n+- **pluginConfig.disableAnonymousTraffic** <code>boolean</code> - Disable loading segment for anonymous visitors\n+\n+**Example**\n+\n+```js\n+segmentPlugin({\n+ writeKey: '123-xyz'\n})\n```\n+<!-- ANALYTICS_DOCS:END -->\nSee the [full list of analytics provider plugins](https://github.com/DavidWells/analytics#current-plugins) in the main repo.\n",
        "chatgpt_rag": "docs(firebase): update Firebase Analytics initialization options with messaging collectionEnabled parameter"
    },
    {
        "msg": "docs: no -- needed here",
        "diff": "diff --git a/website/pages/getting-started.mdx b/website/pages/getting-started.mdx @@ -65,6 +65,6 @@ If your application is running, and you need to manually restart your server, yo\n## Debugging with Inspector\n-- `npm start -- --inspect=[host:port]` This will start the node server and enable the inspector agent. The `=[host:port]` is optional and defaults to `=127.0.0.1:9229`. For more information, see [this](https://nodejs.org/en/docs/guides/debugging-getting-started/).\n+- `npm start --inspect=[host:port]` This will start the node server and enable the inspector agent. The `=[host:port]` is optional and defaults to `=127.0.0.1:9229`. For more information, see [this](https://nodejs.org/en/docs/guides/debugging-getting-started/).\n-- `npm start -- --inspect-brk=[host:port]` This is the same as `--inspect`, but will also break before user code starts. (to give a debugger time to attach before early code runs) For more information, see [this](https://nodejs.org/en/docs/guides/debugging-getting-started/).\n+- `npm start --inspect-brk=[host:port]` This is the same as `--inspect`, but will also break before user code starts. (to give a debugger time to attach before early code runs) For more information, see [this](https://nodejs.org/en/docs/guides/debugging-getting-started/).\n",
        "date": "22.09.2020 22:05:44",
        "repo": "jaredpalmer/razzle",
        "type": "docs",
        "sim_msg": "chore: update readme (how to debug tests)",
        "sim_diff": "diff --git a/README.md b/README.md @@ -111,6 +111,48 @@ Follow these steps [here](https://github.com/newsuk/cps-content-render#locally-m\n| Visual Regression tool (Dextrose) | :white_check_mark: | Not automated |\n| Functional Regression tool (Fructose) | :white_check_mark: | Not automated |\n+## Debugging the tests\n+\n+Tests are currently using [jest](https://jestjs.io/) to run so if you want to debug any test follow these steps:\n+\n+1. (FIND YOUR TEST COMMAND) `jest --config=\"./packages/provider/__tests__/jest.config.js\"`. Depending on what directory we start the tests from, the `--config` directory may differ. My currenct directory is at the repo root: `times-components`.\n+\n+2. See your test command from the `package.json` for the speciffic package you want to check out.\n+\n+>NOTE: If you don't have jest installed globally, you can use it locally from the `node_modules/.bin/jest`\n+\n+3. (START TESTS IN DEBUG MODE) We need to start the same command but through node while in debug mode like so:\n+`node --inspect-brk ./node_modules/.bin/jest --config=\"./packages/provider/__tests__/jest.config.js\" --runInBand`\n+\n+>NOTE: `--runInBand` is a `jest` flag that runs all tests serially in the current process. If we don't add this flag, only the node process that started `jest` will be debuggable.\n+\n+4. (ADD DEBUG STATEMENTS) Normaly we would add breakpoints, but when remote debugging that's not always possible, because the files we need to put the breakpoints on aren't loaded yet by `jest`. So in order to make the debugger stop where we want it to, we need to add [`debugger;`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/debugger) statements instead of breakpoints in the code and re-transpile if necessary.\n+\n+5. (ATTACH TO WEB SOCKET) Once we've started the tests in debug mode, we need to attach to it:\n+ * (RECOMMENDED) use chrome remote debug for node:\n+ 1. open `chrome://inspect` in chrome address bar\n+ 2. `Open dedicated DevTools for Node` button\n+ 3. If you've started the tests with the aforementioned command it should automatically connect, but if it doesn't go to the `Connection` tab of the pop-up window and add connection `localhost:9229` or whatever your port is\n+ 4. The debugger should stop on the first line because of the `--inspect-brk` flag and once you press the play button (resume execution) it should stop on your `debugger;` statement\n+\n+ >NOTE: once it stops you may see all of your code is bundled up in one line. There's an easy fix for that: at the bottom of the debug window near the `Line: 1 Column: 1` labels you should see a `{}` button that will prettify your code and you will still be able to debug properly.\n+\n+ * (Use VSCode) Config should look close to this:\n+ ```json\n+ ...\n+ \"configurations\": [\n+ {\n+ \"localRoot\": \"${workspaceFolder}/packages/provider\", //change this depending on what test you're debugging\n+ \"remoteRoot\": \"${workspaceFolder}/packages/provider\", //change this depending on what test you're debugging\n+ \"type\": \"node\",\n+ \"request\": \"attach\",\n+ \"name\": \"Attach to Server on 9229\",\n+ \"address\": \"127.0.0.1\",\n+ \"port\": 9229\n+ }\n+ ]\n+ ```\n+\n## Contributing\nSee the [CONTRIBUTING.md](.github/CONTRIBUTING.md) for an extensive breakdown of\n",
        "chatgpt_rag": "chore: update debugging instructions in getting-started page"
    },
    {
        "msg": "docs(plugin-typescript): add link to example",
        "diff": "diff --git a/packages/razzle-plugin-typescript/README.md b/packages/razzle-plugin-typescript/README.md @@ -22,6 +22,8 @@ module.exports = {\n};\n```\n+See full configuration in the [typescript example project](https://github.com/jaredpalmer/razzle/tree/master/examples/with-typescript).\n+\n### With custom options:\n```js\n",
        "date": "24.08.2020 11:54:53",
        "repo": "jaredpalmer/razzle",
        "type": "docs",
        "sim_msg": "docs: simplify language",
        "sim_diff": "diff --git a/README.md b/README.md @@ -25,7 +25,7 @@ yarn add vuepress -D\n## Documentation\n-Docs are available at https://vuepress.vuejs.org/ - we are still working on refining it and contributions are welcome!\n+Check out our docs at https://vuepress.vuejs.org/.\n## Contribution\n",
        "chatgpt_rag": "docs: add link to typescript example project in README"
    },
    {
        "msg": "docs(readme): add Bandwidth Hero to built with",
        "diff": "diff --git a/README.md b/README.md @@ -69,6 +69,7 @@ These great products are built on Semantic UI React. Add yours [here][22].\n- https://build.games\n- https://platform.forecastcycles.com\n- https://www.findlectures.com\n+- https://github.com/ayastreb/bandwidth-hero\n## Example Projects\n",
        "date": "05.11.2017 08:37:58",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "docs: Fix contributing guidelines link",
        "sim_diff": "diff --git a/packages/react/README.md b/packages/react/README.md @@ -49,7 +49,7 @@ For full documentation, visit [stitches.dev](https://stitches.dev).\n## Contributing\n-Please follow our [contributing guidelines](./CONTRIBUTING.md).\n+Please follow our [contributing guidelines](https://github.com/modulz/stitches/blob/canary/CONTRIBUTING.md).\n## Authors\n",
        "chatgpt_rag": "docs: Add new example project link to README.md"
    },
    {
        "msg": "docs: delay option as number instead of string, in readme\n[skip ci]",
        "diff": "diff --git a/README.md b/README.md @@ -110,7 +110,7 @@ Specify the config in the same format as you would for a config file but under `\n\"...\": \"... other standard package.json values\",\n\"nodemonConfig\": {\n\"ignore\": [\"test/*\", \"docs/*\"],\n- \"delay\": \"2500\"\n+ \"delay\": 2500\n}\n}\n```\n@@ -247,7 +247,7 @@ If you are setting this value in `nodemon.json`, the value will always be interp\nnodemon --delay 2.5\n{\n- \"delay\": \"2500\"\n+ \"delay\": 2500\n}\n```\n",
        "date": "31.03.2021 11:39:58",
        "repo": "remy/nodemon",
        "type": "docs",
        "sim_msg": "chore: updated tsconfig.json",
        "sim_diff": "diff --git a/tsconfig.json b/tsconfig.json \"allowSyntheticDefaultImports\": true,\n\"forceConsistentCasingInFileNames\": true,\n\"resolveJsonModule\": true,\n- \"skipLibCheck\": true\n+ \"skipLibCheck\": true,\n+ \"strictNullChecks\": false\n},\n\"include\": [\"packages\", \"typings\"],\n\"exclude\": [\"node_modules\", \"**/__test?__\", \"**/dist\"]\n",
        "chatgpt_rag": "chore: updated nodemonConfig in README.md"
    },
    {
        "msg": "docs(UncontrolledCollapse): include example",
        "diff": "diff --git a/docs/lib/Components/CollapsePage.js b/docs/lib/Components/CollapsePage.js @@ -5,12 +5,15 @@ import PageTitle from '../UI/PageTitle';\nimport SectionTitle from '../UI/SectionTitle';\nimport CollapseExample from '../examples/Collapse';\n+import UncontrolledCollapseExample from '../examples/CollapseUncontrolled';\nimport CollapseEventsExample from '../examples/CollapseEvents';\nconst CollapseExampleSource = require('!!raw!../examples/Collapse');\nconst CollapseEventsExampleSource = require('!!raw!../examples/CollapseEvents');\n+const UncontrolledCollapseExampleSource = require('!!raw!../examples/CollapseUncontrolled');\n+\nexport default class CollapsePage extends React.Component {\nrender() {\nreturn (\n@@ -60,6 +63,12 @@ export default class CollapsePage extends React.Component {\npass a <code>toggler</code> prop. The <code>toggler</code> prop is a string which will run\nquerySelectorAll to find dom elements which will trigger toggle.\n</p>\n+ <div className=\"docs-example\">\n+ <UncontrolledCollapseExample />\n+ </div>\n+ <pre>\n+ <PrismCode className=\"language-jsx\">{UncontrolledCollapseExampleSource}</PrismCode>\n+ </pre>\n</div>\n);\n}\n",
        "date": "14.05.2018 10:40:21",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "sim_msg": "feat: started Accordion styles / props",
        "sim_diff": "diff --git a/package/src/components/Accordion/v1/Accordion.js b/package/src/components/Accordion/v1/Accordion.js import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n-// import { applyTheme } from \"../../../utils\";\n+import { withComponents } from \"@reactioncommerce/components-context\";\n+import { applyTheme, CustomPropTypes } from \"../../../utils\";\n-const StyledDiv = styled.div`\n+const duration = \"250ms\";\n+const ease = \"ease-in-out\";\n+const openTransition = `max-height ${duration} ${ease}, padding 0ms ${ease}`;\n+const closeTransition = `max-height ${duration} ${ease}, padding 0ms ${ease} ${duration}`;\n+\n+const AccordionWrapper = styled.div`\n+ box-sizing: border-box;\n+ color: inherit;\n+ &:first-of-type {\n+ & > div {\n+ background-color: red;\n+ }\n+ }\n+`;\n+\n+const AccordionHeader = styled.div`\n+ border-color: ${applyTheme(\"accordionBorderColor\")};\n+ border-style: ${applyTheme(\"accordionBorderStyle\")};\n+ border-width: ${applyTheme(\"accordionBorderWidth\")};\n+ cursor: pointer;\n+ display: flex;\n+ justify-content: space-between;\n+ padding: ${applyTheme(\"accordionPadding\")};\n+`;\n+\n+const AccordionHeaderIcon = styled.span`\n+ height: ${applyTheme(\"selectableListIconHeight\")};\n+ margin-bottom: 0;\n+ margin-left: 0;\n+ margin-right: ${applyTheme(\"selectableListIconSpacingToLabel\")};\n+ margin-top: 0;\n+ width: ${applyTheme(\"selectableListIconWidth\")};\n+ svg {\n+ height: ${applyTheme(\"selectableListIconHeight\")};\n+ transform: ${({ expanded }) => (expanded ? \"rotateZ(180deg)\" : \"rotateZ(0)\")};\n+ transition: transform ${duration} ${ease};\n+ width: ${applyTheme(\"selectableListIconWidth\")};\n+ }\n+`;\n+\n+const AccordionContent = styled.div`\n+ background-color: ${applyTheme(\"accordionContentBackgroundColor\")};\ncolor: inherit;\n+ height: auto;\n+ max-height: ${({ expanded }) => (expanded ? \"200rem\" : \"0\")};\n+ overflow: hidden;\n+ padding: ${({ expanded }) => (expanded ? applyTheme(\"accordionPadding\") : \"0\")};\n+ transition: ${({ expanded }) => (expanded ? openTransition : closeTransition)};\n`;\nclass Accordion extends Component {\nstatic propTypes = {\n+ children: PropTypes.any,\n/**\n* You can provide a `className` prop that will be applied to the outermost DOM element\n* rendered by this component. We do not recommend using this for styling purposes, but\n@@ -22,16 +70,47 @@ class Accordion extends Component {\n* set up a components context or you want to override one of the components in a\n* single spot, you can pass in the components prop directly.\n*/\n- components: PropTypes.shape({}).isRequired\n+ components: PropTypes.shape({\n+ iconExpand: CustomPropTypes.component.isRequired\n+ }).isRequired,\n+ detail: PropTypes.string,\n+ expanded: PropTypes.bool,\n+ icon: PropTypes.node,\n+ label: PropTypes.string.isRequired\n+ };\n+\n+ static defaultProps = {\n+ expanded: false\n+ };\n+\n+ state = {\n+ expanded: this.props.expanded\n};\n- static defaultProps = {};\n+ // handle accordion toggle\n+ handleToggle = () => {\n+ const { expanded } = this.state;\n+ this.setState({ expanded: !expanded });\n+ };\nrender() {\n- const { className } = this.props;\n+ const { children, className, components: { iconExpand }, detail, icon, label } = this.props;\n+ const { expanded } = this.state;\n- return <StyledDiv className={className}>TEST</StyledDiv>;\n+ return (\n+ <AccordionWrapper className={className}>\n+ <AccordionHeader onClick={this.handleToggle}>\n+ <span>\n+ {icon ? <AccordionHeaderIcon>{icon}</AccordionHeaderIcon> : null}\n+ <b>{label}</b>\n+ {detail ? `, ${detail}` : \"\"}\n+ </span>\n+ <AccordionHeaderIcon expanded={expanded}>{iconExpand}</AccordionHeaderIcon>\n+ </AccordionHeader>\n+ <AccordionContent expanded={expanded}>{children}</AccordionContent>\n+ </AccordionWrapper>\n+ );\n}\n}\n-export default Accordion;\n+export default withComponents(Accordion);\n",
        "chatgpt_rag": "feat: added UncontrolledCollapseExample component to CollapsePage and updated documentation"
    },
    {
        "msg": "docs: better config modification",
        "diff": "diff --git a/website/pages/deployment-options/aws.md b/website/pages/deployment-options/aws.md @@ -12,17 +12,26 @@ module.exports = {\nbuildType: 'serverless'\n},\nmodifyPaths({\n- webpackObject,\n- options: {\n- razzleOptions,\n+ paths,\n+ }) {\n+ paths.prodAppServerIndexJs = path.join(paths.appSrc, 'index.prod');\n+ return paths;\n},\n+ modifyWebpackConfig({\n+ env: {\n+ target,\n+ dev,\n+ },\n+ webpackConfig,\npaths,\n}) {\n- if (process.env.NODE_ENV === 'production') {\n- paths.appServerIndexJs = path.join(paths.appSrc, 'index.prod');\n+ if (target === 'node') {\n+ if (!dev) {\n+ webpackConfig.entry.server = [paths.prodAppServerIndexJs];\n}\n- return paths;\n}\n+ return webpackConfig;\n+ },\n};\n```\n",
        "date": "25.01.2021 23:47:07",
        "repo": "jaredpalmer/razzle",
        "type": "docs",
        "sim_msg": "build: fix mistake in build config",
        "sim_diff": "diff --git a/packages/manager/apps/public-cloud/webpack.config.js b/packages/manager/apps/public-cloud/webpack.config.js @@ -32,7 +32,7 @@ module.exports = (env = {}) => {\n__FEEDBACK_URL__: process.env.FEEDBACK_URL ? `'${process.env.FEEDBACK_URL}'` : 'null',\n__WEBPACK_REGION__: process.env.REGION ? `'${process.env.REGION.toUpperCase()}'` : '\"EU\"',\n__NODE_ENV__: process.env.NODE_ENV ? `'${process.env.NODE_ENV}'` : '\"development\"',\n- __NG_APP_INJECTIONS__: process.env.NODE_ENV ? `'${process.env.NG_APP_INJECTIONS}'` : 'null',\n+ __NG_APP_INJECTIONS__: process.env.NG_APP_INJECTIONS ? `'${process.env.NG_APP_INJECTIONS}'` : 'null',\n}),\n],\nresolve: {\n",
        "chatgpt_rag": "feat: update webpack config for server-side rendering"
    },
    {
        "msg": "docs(readme): add Sublime Fund to the built with list",
        "diff": "diff --git a/README.md b/README.md @@ -79,6 +79,7 @@ These great products are built on Semantic UI React. Add yours [here][22].\n- http://www.brewhousesolutions.com\n- https://www.lifebot.fr\n- https://www.stackforge.co\n+- https://sublimefund.org\n## Voice Your Opinion\n",
        "date": "06.07.2017 11:35:05",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "docs: Fix contributing guidelines link",
        "sim_diff": "diff --git a/packages/react/README.md b/packages/react/README.md @@ -49,7 +49,7 @@ For full documentation, visit [stitches.dev](https://stitches.dev).\n## Contributing\n-Please follow our [contributing guidelines](./CONTRIBUTING.md).\n+Please follow our [contributing guidelines](https://github.com/modulz/stitches/blob/canary/CONTRIBUTING.md).\n## Authors\n",
        "chatgpt_rag": "docs: Add new product link to README.md"
    },
    {
        "msg": "docs(MenuExampleHeaderVertical): fix onClick handler\nhandleItemClick = (e, { name }) => this.setState({ activeItem: name });",
        "diff": "diff --git a/docs/src/examples/collections/Menu/Content/MenuExampleHeaderVertical.js b/docs/src/examples/collections/Menu/Content/MenuExampleHeaderVertical.js @@ -3,7 +3,7 @@ import { Menu } from 'semantic-ui-react'\nexport default class MenuExampleHeaderVertical extends Component {\nstate = {}\n- handleItemClick = (name) => this.setState({ activeItem: name })\n+ handleItemClick = (e, { name }) => this.setState({ activeItem: name });\nrender() {\nconst { activeItem } = this.state\n",
        "date": "08.12.2019 23:22:16",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "chore: remove use of index as key",
        "sim_diff": "diff --git a/docs-site/src/components/Examples/index.js b/docs-site/src/components/Examples/index.js @@ -406,11 +406,10 @@ export default class exampleComponents extends React.Component {\n<>\n<h1>Examples</h1>\n<ul className=\"examples__navigation\">\n- {this.examples.map((example, index) => (\n- <li className=\"examples__navigation-item\" key={`link-${index}`}>\n+ {this.examples.map(example => (\n+ <li className=\"examples__navigation-item\" key={`link-${example.title}`}>\n<a\nhref={`#example-${slugify(example.title, { lower: true })}`}\n- title=\"something\"\nonClick={e =>\nthis.handleAnchorClick(\ne,\n@@ -424,8 +423,8 @@ export default class exampleComponents extends React.Component {\n))}\n</ul>\n<div className=\"examples\">\n- {this.examples.map((example, index) => (\n- <CodeExampleComponent key={index} example={example} />\n+ {this.examples.map((example) => (\n+ <CodeExampleComponent key={example.title} example={example} />\n))}\n</div>\n</>\n",
        "chatgpt_rag": "chore: update handleItemClick function to destructure event and name parameters"
    },
    {
        "msg": "docs(accordion): add jsdocs to component",
        "diff": "diff --git a/packages/chakra-ui-core/src/CAccordion/CAccordion.js b/packages/chakra-ui-core/src/CAccordion/CAccordion.js +/**\n+ * Hey! Welcome to @chakra-ui/vue Accordion\n+ *\n+ * Accordions display a list of high-level\n+ * options that can expand/collapse to reveal\n+ * more information.\n+ *\n+ * An accordion is a vertically stacked set\n+ * of interactive headings that each contain\n+ * a title, content snippet, or thumbnail\n+ * representing a section of content.\n+ * The headings function as controls that enable\n+ * users to reveal or hide their associated sections\n+ * of content. Accordions are commonly used to\n+ * reduce the need to scroll when presenting\n+ * multiple sections of content on a single page.\n+ *\n+ * @see Docs https://vue.chakra-ui.com/accordion\n+ * @see Source link to source\n+ * @see WAI-ARIA https://www.w3.org/TR/wai-aria-practices-1.2/#accordion\n+ */\n+\nimport { baseProps } from '../config'\nimport { forwardProps, cloneVNodes, useId, isDef } from '../utils'\nimport styleProps from '../config/props'\n@@ -8,6 +30,16 @@ import CPseudoBox from '../CPseudoBox'\nimport CCollapse from '../CCollapse'\nimport CIcon from '../CIcon'\n+/**\n+ * CAccordion component\n+ *\n+ * The wrapper that clones it's children\n+ * to pass it's prop to the `CAccordionItem`.\n+ *\n+ * @extends CBox\n+ * @see Docs https://vue.chakra-ui.com/accordion\n+ */\n+\nconst CAccordion = {\nname: 'CAccordion',\nprops: {\n@@ -116,6 +148,15 @@ const CAccordion = {\n}\n}\n+/**\n+ * CAccordionItem component\n+ *\n+ * A single accordion item\n+ *\n+ * @extends CPseudoBox\n+ * @see Docs https://vue.chakra-ui.com/accordion\n+ */\n+\nconst CAccordionItem = {\nname: 'CAccordionItem',\nprops: {\n@@ -202,6 +243,15 @@ const CAccordionItem = {\n}\n}\n+/**\n+ * CAccordionHeader component\n+ *\n+ * The button that toggles the expand/collapse\n+ * state of the accordion item.\n+ *\n+ * @extends CPseudoBox\n+ * @see Docs https://vue.chakra-ui.com/accordion\n+ */\nconst CAccordionHeader = {\nname: 'CAccordionHeader',\ninject: ['$AccordionContext'],\n@@ -246,6 +296,15 @@ const CAccordionHeader = {\n}\n}\n+/**\n+ * CAccordionPanel component\n+ *\n+ * The container for the accordion item\n+ * details to be revealed.\n+ *\n+ * @extends CPseudoBox\n+ * @see Docs https://vue.chakra-ui.com/accordion\n+ */\nconst CAccordionPanel = {\nname: 'CAccordionPanel',\ninject: ['$AccordionContext'],\n@@ -277,6 +336,15 @@ const CAccordionPanel = {\n}\n}\n+/**\n+ * CAccordionIcon component\n+ *\n+ * A chevron-down icon that rotates based on the\n+ * expanded/collapsed state.\n+ *\n+ * @extends CPseudoBox\n+ * @see Docs https://vue.chakra-ui.com/accordion\n+ */\nconst CAccordionIcon = {\nname: 'CAccordionIcon',\ninject: ['$AccordionContext'],\n",
        "date": "01.04.2020 01:57:00",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "sim_msg": "feat(collapsible/accordion): remove conditional and add default prop to onItemChange",
        "sim_diff": "diff --git a/components/collapsible/accordion/src/index.js b/components/collapsible/accordion/src/index.js @@ -16,10 +16,8 @@ class CollapsibleAccordion extends Component {\n_collapseItems (collapsed, id) {\nthis.setState({ openIndex: id === this.state.openIndex ? null : id })\n- if (this.props.onItemChange) {\nthis.props.onItemChange(collapsed, id)\n}\n- }\nrender () {\nconst { items } = this.props\n@@ -64,4 +62,8 @@ CollapsibleAccordion.propTypes = {\n})).isRequired\n}\n+CollapsibleAccordion.defaultProps = {\n+ onItemChange: () => {}\n+}\n+\nexport default CollapsibleAccordion\n",
        "chatgpt_rag": "chore(chakra-ui-core): add documentation comments for CAccordion components"
    },
    {
        "msg": "docs: npx to run dev dependencies",
        "diff": "diff --git a/README.md b/README.md @@ -25,7 +25,7 @@ It is also possible to install locally:\nnpm install --save-dev nodemon\n-With a local installation, nodemon will not be available in your system path. Instead, the local installation of nodemon can be run by calling it from within an npm script (such as `npm start`). Additionally, the `npm bin` command can be used to obtain the path to the project's local `.bin` directory.\n+With a local installation, nodemon will not be available in your system path. Instead, the local installation of nodemon can be run by calling it from within an npm script (such as `npm start`) or using `npx nodemon`.\n# Usage\n",
        "date": "04.09.2017 11:33:28",
        "repo": "remy/nodemon",
        "type": "docs",
        "sim_msg": "docs: add new dev script to the README",
        "sim_diff": "diff --git a/README.md b/README.md @@ -119,7 +119,7 @@ The following need to be installed.\n- This is optional, as `npm` provides easy access to the local copies of these that are installed by `npm install`\n1. (optional) Run `npm install -g migrate`.\n- This installs node-migrate globally.\n-1. To start server, run `npm start`.\n+1. To start server in production, run `npm start`. Use `npm run dev` for development.\n- In your terminal, a user and password were generated. You will use these credentials to log into the application. Example: `\"admin\" user created with password \"password\"`.\n1. Navigate to `https://localhost:3000` in your browser.\n- This will show you the running site. Login with the user name and password from your terminal mentioned above.\n",
        "chatgpt_rag": "docs: update README with information on using npx nodemon for local installation"
    },
    {
        "msg": "docs: how to provide theme with ThemePRovider",
        "diff": "diff --git a/src/main.js b/src/main.js import Vue from 'vue'\nimport App from './App.vue'\nimport './registerServiceWorker'\n-// import { provideTheme } from '@/lib/utils'\nimport Kiwi from './lib/plugin'\nVue.config.productionTip = false\n+// Install Kiwi plugin\nVue.use(Kiwi)\nnew Vue({\n+ // Alternative way to provide theme would be to import { provideTheme } from utils and provide it with render function\n// Provide theme to the root of the application\n// render: h => provideTheme(h, App)\nrender: h => h(App)\n",
        "date": "12.10.2019 18:43:12",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "sim_msg": "perf(global): exposing only router afterEach and currentRoute",
        "sim_diff": "diff --git a/src/main.js b/src/main.js @@ -45,7 +45,14 @@ router.afterEach(to => {\n}\n})\n-window.storefrontApp = { router }\n+window.storefrontApp = {\n+ router: {\n+ afterEach: cb => router.afterEach(cb),\n+ get currentRoute () {\n+ return router.currentRoute\n+ }\n+ }\n+}\nnew Vue({\nrouter,\n",
        "chatgpt_rag": "feat: install Kiwi plugin and provide theme in an alternative way"
    },
    {
        "msg": "docs: added persistence to auth in \"Full Configuration\"",
        "diff": "diff --git a/docs/guide/getting-started/README.md b/docs/guide/getting-started/README.md @@ -85,6 +85,7 @@ modules: [\nonFirebaseHosting: false,\nservices: {\nauth: {\n+ persistence: 'local',\ninitialize: {\nonAuthStateChangedMutation: \"SET_AUTH_USER\",\nonAuthStateChangedAction: null,\n",
        "date": "15.03.2020 22:45:10",
        "repo": "nuxt-community/firebase-module",
        "type": "docs",
        "sim_msg": "fix(landing): opening auth link in a new tab",
        "sim_diff": "diff --git a/pages/index.js b/pages/index.js @@ -896,7 +896,7 @@ export default function IndexPage() {\nreturn errors;\n},\nonSubmit: async ({ email }) => {\n- window.open(`/_/auth?tab=signup&email=${email}`);\n+ window.open(`/_/auth?tab=signup&email=${email}`, \"_self\");\n},\n});\n",
        "chatgpt_rag": "feat(docs): added local persistence to auth service configuration"
    },
    {
        "msg": "docs(TablesPage): Fix typo in docs",
        "diff": "diff --git a/docs/lib/Components/TablesPage.js b/docs/lib/Components/TablesPage.js @@ -39,7 +39,7 @@ export default class TablesPage extends React.Component {\n<h4>Properties</h4>\n<pre>\n<PrismCode className=\"language-jsx\">\n-{`Card.propTypes = {\n+{`Table.propTypes = {\n// Pass in a Component to override default element\ntag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\nsize: PropTypes.string,\n",
        "date": "30.03.2017 23:52:25",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "sim_msg": "chore(tablecard): remove unnecessary sizes from proptypes",
        "sim_diff": "diff --git a/packages/react/src/constants/CardPropTypes.js b/packages/react/src/constants/CardPropTypes.js @@ -130,12 +130,7 @@ export const ValueContentPropTypes = {\nexport const TableCardPropTypes = {\ntooltip: PropTypes.node,\ntitle: PropTypes.string,\n- size: PropTypes.oneOf([\n- CARD_SIZES.MEDIUM,\n- CARD_SIZES.MEDIUMWIDE,\n- CARD_SIZES.LARGE,\n- CARD_SIZES.LARGEWIDE,\n- ]),\n+ size: PropTypes.oneOf([CARD_SIZES.LARGE, CARD_SIZES.LARGEWIDE]),\ncontent: PropTypes.shape({\ncolumns: PropTypes.arrayOf(\nPropTypes.shape({\n",
        "chatgpt_rag": "chore(table): update proptypes for Table component"
    },
    {
        "msg": "docs(LabelExampleImageColored): Update example\nReplace Veronika with jenny due to image name",
        "diff": "diff --git a/docs/src/examples/elements/Label/Types/LabelExampleImageColored.js b/docs/src/examples/elements/Label/Types/LabelExampleImageColored.js @@ -10,12 +10,12 @@ const LabelExampleImage = () => (\n</Label>\n<Label as='a' color='teal' image>\n<img src='/images/avatar/small/jenny.jpg' />\n- Veronika\n+ Jenny\n<Label.Detail>Friend</Label.Detail>\n</Label>\n<Label as='a' color='yellow' image>\n<img src='/images/avatar/small/christian.jpg' />\n- Helen\n+ Christian\n<Label.Detail>Co-worker</Label.Detail>\n</Label>\n</div>\n",
        "date": "24.07.2020 14:13:02",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "feat(pixels): add my new pixel (1, 30)",
        "sim_diff": "diff --git a/_data/pixels.json b/_data/pixels.json {\"y\": 29, \"x\": 36, \"color\": \"#000000\", \"username\": \"definitelyDaphne\"},\n{\"y\": 29, \"x\": 39, \"color\": \"#40a346\", \"username\": \"viktor-wolf\"},\n{\"y\": 30, \"x\": 0, \"color\": \"#00FF00\", \"username\": \"mccarthydanielle\"},\n+ {\"y\": 30, \"x\": 1, \"color\": \"#00FF00\", \"username\": \"CedArctic\"},\n{\"y\": 30, \"x\": 2, \"color\": \"#00FF00\", \"username\": \"dubeyanurag\"},\n{\"y\": 30, \"x\": 3, \"color\": \"#00FF00\", \"username\": \"ICTman1076\"},\n{\"y\": 30, \"x\": 4, \"color\": \"#00FF00\", \"username\": \"ericjiang97\"},\n",
        "chatgpt_rag": "chore(LabelExampleImageColored): update names in LabelExampleImageColored file"
    },
    {
        "msg": "docs(Grid): fix typo in GridExampleStretched example description\nThe description of the `stretched` property of a grid row mentioned 'width', but should have mentioned 'height'.",
        "diff": "diff --git a/docs/src/examples/collections/Grid/Variations/index.js b/docs/src/examples/collections/Grid/Variations/index.js @@ -32,7 +32,7 @@ const GridVariationsExamples = () => (\n<ComponentExample\ntitle='Stretched'\n- description='A row can automatically resize all elements to split the available width evenly.'\n+ description='A row can automatically resize all elements to split the available height evenly.'\nexamplePath='collections/Grid/Variations/GridExampleStretched'\n/>\n<ComponentExample examplePath='collections/Grid/Variations/GridExampleStretchedEqual' />\n",
        "date": "24.09.2018 11:42:20",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "feat(components/layout/grid): add props spreading",
        "sim_diff": "diff --git a/components/layout/grid/src/index.js b/components/layout/grid/src/index.js @@ -38,7 +38,8 @@ const LayoutGrid = ({\nxxl,\nxxlOffset,\nxxs,\n- xxsOffset\n+ xxsOffset,\n+ ...props\n}) => {\nconst classNames = cx(\n`${BASE_CLASS}`,\n@@ -53,7 +54,7 @@ const LayoutGrid = ({\n)\nreturn (\n- <PolymorphicElement as={as} className={classNames}>\n+ <PolymorphicElement as={as} className={classNames} {...props}>\n<Injector\ncolSpan={colSpan}\nl={l}\n",
        "chatgpt_rag": "fix(docs/collections/grid): update description for Stretched variation to mention height instead of width"
    },
    {
        "msg": "docs(stack): add stacking of html elements",
        "diff": "diff --git a/website/pages/stack.mdx b/website/pages/stack.mdx @@ -68,6 +68,19 @@ Pass the `isReversed` prop or set `direction` to `row-reverse` or `column-revers\n</c-stack>\n```\n+## Stacking HTML elements\n+The `CStack` element is able also to stack HTML elements. Internally it wraps HTML elements inside a `CBox` primitive\n+component and spaces it like it would any other Chakra component.\n+\n+```vue live=true\n+<c-stack :spacing=\"4\">\n+ <c-text>Chakra component 1</c-text>\n+ <p>HTML paragraph element</p>\n+ <h3>HTML heading element</h3>\n+ <c-text>Chakra component 2</c-text>\n+</c-stack>\n+```\n+\n## Props\n| Name | Type | Default | Description |\n",
        "date": "26.09.2020 22:28:20",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "sim_msg": "feat: add Vitamin",
        "sim_diff": "diff --git a/README.md b/README.md @@ -113,6 +113,7 @@ A curated list of awesome things related to <a href='https://github.com/vitejs/v\n- [vite-reactts-chakra-starter](https://github.com/Dieman89/vite-reactts-chakra-starter) - React, Typescript, Chakra, Cypress.\n- [electron-vite-react](https://github.com/twstyled/electron-vite-react) - Electron, TypeScript and Tailwind CSS with [twstyled](https://github.com/twstyled/twstyled).\n- [vite-electron-esbuild-stater](https://github.com/jctaoo/vite-electron-esbuild-starter) - Starter template with React, Typescript, Electron and esbuild.\n+- [Vitamin](https://github.com/wtchnm/Vitamin) - React Typescript, TailwindCSS, SPA + PWA, Cypress and CI.\n## Plugins\n",
        "chatgpt_rag": "feat: add stacking HTML elements feature in CStack component"
    },
    {
        "msg": "docs: Fix code example for split button dropdowns",
        "diff": "diff --git a/docs/lib/Components/ButtonDropdownPage.js b/docs/lib/Components/ButtonDropdownPage.js @@ -107,7 +107,7 @@ DropdownToggle.propTypes = {\n<PrismCode className=\"language-jsx\">\n{`<ButtonDropdown isOpen={isOpen} toggle={toggle}>\n<Button id=\"caret\" color=\"primary\">{this.props.text}</Button>\n- <DropdownToggle caret color=\"primary\" />\n+ <DropdownToggle split color=\"primary\" />\n<DropdownMenu>\n<DropdownItem header>Header</DropdownItem>\n<DropdownItem disabled>Action</DropdownItem>\n",
        "date": "07.10.2020 21:56:10",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "sim_msg": "refactor: add ability to customize dropdown button",
        "sim_diff": "diff --git a/renderer/components/UI/Dropdown.js b/renderer/components/UI/Dropdown.js @@ -137,6 +137,35 @@ MenuItem.propTypes = {\nvalueField: PropTypes.string,\n}\n+const DefaultDropdownButton = ({\n+ onToggle,\n+ selectedItem,\n+ valueField,\n+ activeKey,\n+ isOpen,\n+ opacity: buttonOpacity,\n+}) => {\n+ return (\n+ <DropdownButton fontWeight=\"normal\" onClick={onToggle} opacity={buttonOpacity} type=\"button\">\n+ <Flex alignItems=\"center\">\n+ <Text css=\"white-space: nowrap;\" mr={1} textAlign=\"left\">\n+ {selectedItem ? selectedItem[valueField] : activeKey}{' '}\n+ </Text>\n+ <Flex color=\"gray\">{isOpen ? <AngleUp width=\"0.6em\" /> : <AngleDown width=\"0.6em\" />}</Flex>\n+ </Flex>\n+ </DropdownButton>\n+ )\n+}\n+\n+DefaultDropdownButton.propTypes = {\n+ activeKey: PropTypes.string,\n+ isOpen: PropTypes.bool,\n+ onToggle: PropTypes.func.isRequired,\n+ opacity: PropTypes.number,\n+ selectedItem: PropTypes.object,\n+ valueField: PropTypes.string,\n+}\n+\nconst Dropdown = ({\nactiveKey,\nitems,\n@@ -145,6 +174,7 @@ const Dropdown = ({\nonChange,\nmessageMapper,\nvalueField,\n+ buttonComponent: ButtonComponent,\n...rest\n}) => {\nconst intl = useIntl()\n@@ -185,21 +215,16 @@ const Dropdown = ({\nreturn (\n<div style={{ display: 'inline-block' }}>\n<DropdownContainer {...rest} ref={wrapperRef}>\n- <DropdownButton\n- fontWeight=\"normal\"\n- onClick={toggleMenu}\n- opacity={buttonOpacity}\n- type=\"button\"\n- >\n- <Flex alignItems=\"center\">\n- <Text css=\"white-space: nowrap;\" mr={1} textAlign=\"left\">\n- {selectedItem ? selectedItem[valueField] : activeKey}{' '}\n- </Text>\n- <Flex color=\"gray\">\n- {isOpen ? <AngleUp width=\"0.6em\" /> : <AngleDown width=\"0.6em\" />}\n- </Flex>\n- </Flex>\n- </DropdownButton>\n+ <ButtonComponent\n+ {...{\n+ onToggle: toggleMenu,\n+ selectedItem,\n+ valueField,\n+ activeKey,\n+ isOpen,\n+ opacity: buttonOpacity,\n+ }}\n+ />\n{isOpen && (\n<MenuContainer>\n<Menu ref={measuredRef} justify={justify} maxHeight={height}>\n@@ -224,10 +249,12 @@ const Dropdown = ({\nDropdown.defaultProps = {\nvalueField: 'value',\n+ buttonComponent: DefaultDropdownButton,\n}\nDropdown.propTypes = {\nactiveKey: PropTypes.string.isRequired,\n+ buttonComponent: PropTypes.elementType,\nbuttonOpacity: PropTypes.number,\nitems: PropTypes.array.isRequired,\njustify: PropTypes.string,\n",
        "chatgpt_rag": "style: update DropdownToggle component to use split style instead of caret"
    },
    {
        "msg": "docs(readme): add coreui project",
        "diff": "diff --git a/README.md b/README.md @@ -125,6 +125,7 @@ Organizations and projects using `reactstrap`\n- [availity-reactstrap-validation](https://availity.github.io/availity-reactstrap-validation/)\n- [component-template](https://reactstrap.github.io/component-template/)\n- [video-react](https://video-react.github.io/)\n+- [CoreUI-Free-Bootstrap-Admin-Template](https://github.com/mrholek/CoreUI-Free-Bootstrap-Admin-Template) - [demo](http://coreui.io/demo/React_Demo/#/)\nSubmit a PR to add to this list!\n",
        "date": "29.01.2017 15:42:23",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "sim_msg": "docs(readme): fix table of contents",
        "sim_diff": "diff --git a/README.md b/README.md @@ -17,12 +17,11 @@ Finally, This project wouldn't be possible without the help of our many contribu\n1. [Running the Project](#running-the-project)\n1. [Project Structure](#project-structure)\n1. [Live Development](#local-development)\n- 1. [Hot Reloading](#hot-reloading)\n- 1. [Redux DevTools](#redux-devtools)\n+ * [Hot Reloading](#hot-reloading)\n+ * [Redux DevTools](#redux-devtools)\n1. [Routing](#routing)\n1. [Testing](#testing)\n- 1. [dirty-chai](#dirty-chai)\n- 1. [enzyme](#enzyme)\n+ * [dirty-chai](#dirty-chai)\n1. [Building for Production](#building-for-production)\n1. [Deployment](#deployment)\n1. [Thank You](#thank-you)\n",
        "chatgpt_rag": "docs(readme): add CoreUI-Free-Bootstrap-Admin-Template to organizations and projects list"
    },
    {
        "msg": "docs: typo\ntypo",
        "diff": "diff --git a/README.md b/README.md @@ -162,7 +162,7 @@ Note that by default, nodemon will ignore the `.git`, `node_modules`, `bower_com\n## Application isn't restarting\n-In some networked environments (such as a container running nodemon reading across a mounted drive), you will need to use the `legacyWatch: true` which enabled Chokidar's polling.\n+In some networked environments (such as a container running nodemon reading across a mounted drive), you will need to use the `legacyWatch: true` which enables Chokidar's polling.\nVia the CLI, use either `--legacy-watch` or `-L` for short:\n",
        "date": "05.09.2017 04:20:59",
        "repo": "remy/nodemon",
        "type": "docs",
        "sim_msg": "docs: remove pre-commit docs",
        "sim_diff": "diff --git a/README.md b/README.md @@ -65,10 +65,6 @@ Run `npm test` command to run all tests in watch mode. This command runs only th\nIn a CI container, `npm test` will not run in watch mode. This is because the `CI` environment variable is set in CI containers. If you need to run tests in non-watch mode locally, you can do the same: `CI=true npm test`\n-### Pre-commit Checks\n-\n-When you `git commit` from this repo, it automatically runs eslint and all tests. It will not push if anything fails. This runs through the `pre-commit` package. If you really need to skip this hook for a commit, see [the docs](https://www.npmjs.com/package/pre-commit).\n-\n## Full Documentation\nSee [the docs](./docs/README.md)\n",
        "chatgpt_rag": "docs: fix typo in README.md regarding legacyWatch option"
    },
    {
        "msg": "docs: add link to common problems",
        "diff": "diff --git a/packages/razzle/config/loadRazzleConfig.js b/packages/razzle/config/loadRazzleConfig.js @@ -11,7 +11,7 @@ const loadPlugins = require('./loadPlugins');\nmodule.exports = (webpackObject, razzleConfig, packageJsonIn) => {\nreturn new Promise(async resolve => {\nconsole.info(\"If you have issues with css make sure postcss resolves to v8.2.4.\");\n- console.info(\"See: \\n\");\n+ console.info(\"See: https://razzlejs.org/getting-started#common-problems\\n\");\nconsole.warn(\"CssMinimizerPlugin currently uses clean-css,\\nwe will switch to cssnano once it supports postcss v8.2.4.\\n\");\nlet razzle = razzleConfig || {};\n",
        "date": "22.02.2021 00:48:01",
        "repo": "jaredpalmer/razzle",
        "type": "docs",
        "sim_msg": "fix: support imports in style tags compiled with tailwindcss",
        "sim_diff": "diff --git a/src/generators/tailwindcss.js b/src/generators/tailwindcss.js @@ -90,9 +90,9 @@ module.exports = {\nconst userFileExists = await fs.pathExists(userFilePath)\nif (userFileExists) {\n- css += await fs.readFile(path.resolve(userFilePath), 'utf8')\n+ css = await fs.readFile(path.resolve(userFilePath), 'utf8') + css\n} else {\n- css = '@tailwind components; @tailwind utilities;' + css\n+ css = '@import \"tailwindcss/components\"; @import \"tailwindcss/utilities\";' + css\n}\nreturn postcss([\n",
        "chatgpt_rag": "chore: update console.info message with link to common problems in razzlejs.org"
    },
    {
        "msg": "docs: add link to react website",
        "diff": "diff --git a/packages/chakra-ui-docs/components/Navbar.vue b/packages/chakra-ui-docs/components/Navbar.vue list-style-type=\"none\"\nml=\"auto\"\n>\n+ <CBox as=\"li\" mr=\"4\">\n+ <CLink color=\"gray.600\" :_hover=\"{ color : 'vue.400' }\" is-external href=\"https://chakra-ui.com/\">\n+ Chakra UI React\n+ </CLink>\n+ </CBox>\n<CBox as=\"li\" mr=\"4\">\n<CLink color=\"gray.500\" :_hover=\"{ color : 'vue.400' }\" is-external href=\"https://github.com/chakra-ui/chakra-ui-vue\">\n<CIcon name=\"github\" size=\"20px\" />\n",
        "date": "04.06.2020 18:15:00",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "sim_msg": "style(@chakra-ui): remove iframe global styles",
        "sim_diff": "diff --git a/src/@chakra-ui/gatsby-plugin/styles.ts b/src/@chakra-ui/gatsby-plugin/styles.ts @@ -58,12 +58,6 @@ const styles = {\n\"li > p\": {\n\"margin-bottom\": \"calc(1.45rem / 2)\",\n},\n- // YouTube embeds\n- iframe: {\n- display: \"block\",\n- maxWidth: \"560px\",\n- margin: \"32px 0\",\n- },\n// should be replace by the usage of https://chakra-ui.com/docs/components/heading\n// also, the media queries defined on each of these heading tags are bearly used\n\"h1,h2,h3,h4,h5,h6\": {\n",
        "chatgpt_rag": "style(@chakra-ui-docs): update Navbar component to use Chakra UI React link styling"
    },
    {
        "msg": "docs(layout): Fix typo in layout example",
        "diff": "diff --git a/docs/lib/examples/Layout.js b/docs/lib/examples/Layout.js @@ -16,7 +16,7 @@ export default class Example extends React.Component {\n</Row>\n<Row>\n<Col xs=\"3\">.col-3</Col>\n- <Col xs=\"auto\">.col-auto - variabe width content</Col>\n+ <Col xs=\"auto\">.col-auto - variable width content</Col>\n<Col xs=\"3\">.col-3</Col>\n</Row>\n<Row>\n",
        "date": "14.02.2017 10:46:47",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "sim_msg": "feat(www): add docsearch:version meta tag\nadd meta tag so docsearch can index both v1 and v2 websites\nsee",
        "sim_diff": "diff --git a/www/src/components/layout.js b/www/src/components/layout.js @@ -151,6 +151,7 @@ class DefaultLayout extends React.Component {\n<meta name=\"twitter:site\" content=\"@gatsbyjs\" />\n<meta name=\"og:type\" content=\"website\" />\n<meta name=\"og:site_name\" content=\"GatsbyJS\" />\n+ <meta name=\"docsearch:version\" content=\"2.0\" />\n<link\nrel=\"canonical\"\nhref={`https://gatsbyjs.org${this.props.location.pathname}`}\n",
        "chatgpt_rag": "style(docs): fix typo in Layout.js\nFixed a typo in the comment for the .col-auto class in the Layout.js file. Changed \"variabe\" to \"variable\" for clarity and consistency."
    },
    {
        "msg": "docs: documentation for spinner component",
        "diff": "diff --git a/packages/chakra-ui-docs/docs/spinner.mdx b/packages/chakra-ui-docs/docs/spinner.mdx +import SEO from '../components/SEO'\n+\n+<SEO\n+ title=\"Spinner\"\n+ description=\"Spinners provide a visual cue that an action is processing awaiting a course of change or a result.\"\n+/>\n+\n# Spinner\n+\n+Spinners provide a visual cue that an action is processing awaiting a course of change or a result.\n+\n+## Import\n+\n+```js\n+import { CSpinner } from '@chakra-ui/vue'\n+```\n+\n+## Usage\n+\n+```vue live=true\n+<c-spinner />\n+```\n+\n+### Spinner with Color\n+\n+```vue live=true\n+<c-spinner color=\"blue.500\" />\n+```\n+\n+### Spinner with different size\n+\n+```vue live=true\n+<c-stack is-inline :spacing=\"4\">\n+ <c-spinner size=\"xs\" />\n+ <c-spinner size=\"sm\" />\n+ <c-spinner size=\"md\" />\n+ <c-spinner size=\"lg\" />\n+ <c-spinner size=\"xl\" />\n+</c-stack>\n+```\n+\n+### Spinner with empty area color\n+\n+```vue live=true\n+<c-spinner\n+ thickness=\"4px\"\n+ speed=\"0.65s\"\n+ empty-color=\"green.200\"\n+ color=\"vue.500\"\n+ size=\"xl\"\n+/>\n+```\n+\n+## Props\n+\n+| Name | Type | Default | Description |\n+| ---------- | ------------------------ | ------------- | --------------------------------------------------------------- |\n+| size | `xl`,`lg`,`md`,`sm`,`xs` | `md` | The size of the spinner. |\n+| thickness | `string` | `2px` | The thickness of the spinner. |\n+| speed | `string` | `0.45s` | The speed of the spinner. |\n+| label | `string` | `Loading...` | An accessible label for the spinner (Useful for screen readers) |\n+| color | `string` | | The color of the spinner. |\n+| emptyColor | `string` | `transparent` | The color of the empty areas in the spinner. |\n",
        "date": "26.04.2020 21:06:57",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "sim_msg": "refactor(core-spinner): change to pure component\nFunctional components cause issues with serverside rendering when calling the global document object. Pure components can move that into a lifecycle method.",
        "sim_diff": "diff --git a/packages/Spinner/Spinner.jsx b/packages/Spinner/Spinner.jsx @@ -15,7 +15,33 @@ import styles from './Spinner.modules.scss'\n* @version ./package.json\n*/\n-const Spinner = ({\n+class Spinner extends React.PureComponent {\n+ constructor() {\n+ super()\n+ this.spinnerOverlayRef = null\n+ }\n+\n+ componentDidUpdate() {\n+ if (this.props.fullScreen && this.props.spinning) {\n+ document.body.addEventListener('touchmove', this.preventScroll, { passive: false })\n+ document.body.addEventListener('touchstart', this.preventScroll, { passive: false })\n+\n+ document.body.style.overflow = 'hidden'\n+ } else {\n+ document.body.removeEventListener('touchmove', this.preventScroll)\n+ document.body.removeEventListener('touchstart', this.preventScroll)\n+ document.body.style.overflow = 'auto'\n+ }\n+ }\n+\n+ preventScroll = e => {\n+ if (this.spinnerOverlayRef.current.contains(e.targetTouches[0].target)) {\n+ e.preventDefault()\n+ }\n+ }\n+\n+ render() {\n+ const {\nspinning,\nlabel,\ndangerouslyHideVisibleLabel,\n@@ -27,14 +53,7 @@ const Spinner = ({\nfullScreen,\nchildren,\n...rest\n-}) => {\n- let spinnerOverlayRef = null\n-\n- const preventScroll = e => {\n- if (spinnerOverlayRef.current.contains(e.targetTouches[0].target)) {\n- e.preventDefault()\n- }\n- }\n+ } = this.props\nif (tip) {\ndeprecate('core-spinner', 'The `tip` prop is deprecated. Please use the `label` prop.')\n@@ -49,16 +68,7 @@ const Spinner = ({\n'The Spinner should not use the `secondary` variant while `size` is set to `large`.'\n)\n}\n- if (fullScreen && spinning) {\n- document.body.addEventListener('touchmove', preventScroll, { passive: false })\n- document.body.addEventListener('touchstart', preventScroll, { passive: false })\n- document.body.style.overflow = 'hidden'\n- } else {\n- document.body.removeEventListener('touchmove', preventScroll)\n- document.body.removeEventListener('touchstart', preventScroll)\n- document.body.style.overflow = 'auto'\n- }\nif (!spinning) {\nreturn children || null\n}\n@@ -79,7 +89,7 @@ const Spinner = ({\n<div\nclassName={styles.fullscreenOverlay}\nref={el => {\n- spinnerOverlayRef = el\n+ this.spinnerOverlayRef = el\n}}\ndata-testid=\"overlay\"\n>\n@@ -123,6 +133,7 @@ const Spinner = ({\nreturn spinnerSvg()\n}\n+}\nSpinner.propTypes = {\n/**\n",
        "chatgpt_rag": "feat(core-spinner): add SEO component to spinner documentation\n\nThis commit adds the SEO component to the spinner documentation page in order to improve search engine optimization and provide a better description for the spinner component. The SEO component includes a title and description for the spinner page to enhance its visibility and relevance."
    },
    {
        "msg": "docs(icon): documented parseFAIcons utils",
        "diff": "diff --git a/src/lib/utils/icons.js b/src/lib/utils/icons.js import merge from 'lodash-es/merge'\n+/**\n+ * @description Parse all Font Awesome Icons\n+ * @param {Object} iconSet - Registered Icons object\n+ * @returns {Object} - All Font awesome icons parsed.\n+ */\nconst parseFAIcons = (iconSet) => {\nconst parseFAIcon = (iconObject) => {\nconst { icon } = iconObject\n@@ -15,7 +20,6 @@ const parseFAIcons = (iconSet) => {\n.map(value => parseFAIcon(value))\n.reduce((target, source) => merge(target, source), {})\n- console.log({ result })\nreturn result\n}\n",
        "date": "28.10.2019 03:28:59",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "sim_msg": "build: update bundle configuration",
        "sim_diff": "diff --git a/bundle.config.js b/bundle.config.js @@ -6,7 +6,7 @@ const icons = require(\"./config/icons.json\");\nconst generateColorsVirtualFile = () => {\nconst content = [];\nconst colorsList = []; //Colors list\n- Object.keys(colors).forEach((colorName) => {\n+ Object.keys(colors).forEach(colorName => {\nreturn Object.keys(colors[colorName]).forEach((colorIndex) => {\nreturn colorsList.push({\n\"index\": `${colorName}-${colorIndex}`,\n@@ -15,7 +15,7 @@ const generateColorsVirtualFile = () => {\n});\n});\ncontent.push(\"$colors: (\");\n- colorsList.forEach((color) => {\n+ colorsList.forEach(color => {\n//const sep = (index === colorsList.length - 1) ? \"\" : \",\"; //Separator\nreturn content.push(` \"${color.index}\": ${color.value},`);\n});\n@@ -25,13 +25,13 @@ const generateColorsVirtualFile = () => {\n};\n//Unicode parser\n-const parseUnicode = (value) => value.toString(16).toLowerCase();\n+const parseUnicode = value => value.toString(16).toLowerCase();\n//Generate icons file\nconst generateIconsVirtualFile = () => {\nconst content = [];\ncontent.push(\"$icons: (\");\n- icons.forEach((item) => {\n+ icons.forEach(item => {\nreturn content.push(` \"${item.id}\": \"${parseUnicode(item.unicode)}\",`);\n});\n//content.push(\") !default;\");\n@@ -40,34 +40,68 @@ const generateIconsVirtualFile = () => {\nreturn content.join(\"\\n\");\n};\n-module.exports = {\n- \"name\": \"siimple\",\n- \"cwd\": __dirname,\n+module.exports = Object.values({\n+ \"index\": {\n\"output\": \"index.scss\",\n\"entry\": [\n- // Auto generated modules\n- \"./sass/colors.scss\",\n- \"./sass/icons.scss\",\n- // Core modules\n+ \"./sass/index.scss\",\n+ ],\n+ \"resolve\": {\n+ \"siimple:lib\": \"./lib.scss\",\n+ \"siimple:plugins\": \"./plugins.scss\",\n+ },\n+ },\n+ \"colors\": {\n+ \"output\": \"colors.scss\",\n+ \"entry\": [\n+ \"./colors.scss\",\n+ \"./sass/addons/colors.scss\",\n+ ],\n+ \"resolve\": {\n+ \"siimple:lib\": \"./lib.scss\",\n+ },\n+ \"virtualFiles\": {\n+ \"./colors.scss\": generateColorsVirtualFile(),\n+ },\n+ },\n+ \"icons\": {\n+ \"output\": \"icons.scss\",\n+ \"entry\": [\n+ \"./icons.scss\",\n+ \"./sass/addons/icons.scss\",\n+ ],\n+ \"virtualFiles\": {\n+ \"./icons.scss\": generateIconsVirtualFile(),\n+ },\n+ },\n+ \"plugins\": {\n+ \"output\": \"plugins.scss\",\n+ \"entry\": [\n+ \"./sass/components/*.scss\",\n+ \"./sass/experiments/*.scss\",\n+ \"./sass/helpers/*.scss\",\n+ \"./sass/plugins/*.scss\",\n+ ],\n+ \"resolve\": {\n+ \"siimple:icons\": \"./icons.scss\",\n+ \"siimple:colors\": \"./colors.scss\",\n+ \"siimple:lib\": \"./lib.scss\",\n+ },\n+ },\n+ \"lib\": {\n+ \"output\": \"lib.scss\",\n+ \"entry\": [\n\"./sass/utils.scss\",\n\"./sass/constants.scss\",\n- \"./sass/sheet.scss\",\n\"./sass/naming.scss\",\n\"./sass/scales.scss\",\n\"./sass/breakpoints.scss\",\n\"./sass/variants.scss\",\n- \"./sass/selectors.scss\",\n- \"./sass/api.scss\",\n+ // \"./sass/selectors.scss\",\n+ \"./sass/plugins.scss\",\n\"./sass/theme.scss\",\n- // Components\n- \"./sass/components/*.scss\",\n- \"./sass/experiments/*.scss\",\n- // Plugins\n- \"./sass/plugins/*.scss\",\n+ \"./sass/sheet.scss\",\n],\n\"resolve\": {},\n- \"virtualFiles\": {\n- \"./sass/colors.scss\": generateColorsVirtualFile(),\n- \"./sass/icons.scss\": generateIconsVirtualFile(),\n},\n-};\n+});\n",
        "chatgpt_rag": "feat: add function to parse Font Awesome icons"
    },
    {
        "msg": "docs(README): fix link to CSS Usage page",
        "diff": "diff --git a/README.md b/README.md @@ -112,6 +112,7 @@ This is a listing of example projects and guides that will help you integrate Se\n<details>\n<summary><b>How do I setup CSS?</b></summary>\n+\nThere are several options. Refer to our doc on [CSS Usage][23].\n</details>\n",
        "date": "12.10.2018 11:08:46",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "docs(readme): minor text improve on development section\n[skip ci]",
        "sim_diff": "diff --git a/README.md b/README.md @@ -48,7 +48,7 @@ Please read the [contribution guidelines](CONTRIBUTING.md).\n<details>\n<summary>\n- Check some example commands for development\n+ Check some example useful commands\n</summary>\n#### Compile template for production\n",
        "chatgpt_rag": "docs(readme): add information on setting up CSS\n[skip ci]"
    },
    {
        "msg": "docs: fix typo on the front page",
        "diff": "diff --git a/packages/chakra-ui-docs/components/Hero.vue b/packages/chakra-ui-docs/components/Hero.vue is-external\nhref=\"https://chakra-ui.com/\"\n>\n- Looking for React.js verison?\n+ Looking for React.js version?\n</CLink>\n</CFlex>\n</CFlex>\n",
        "date": "09.06.2020 08:22:25",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "sim_msg": "docs: simplify language",
        "sim_diff": "diff --git a/README.md b/README.md @@ -25,7 +25,7 @@ yarn add vuepress -D\n## Documentation\n-Docs are available at https://vuepress.vuejs.org/ - we are still working on refining it and contributions are welcome!\n+Check out our docs at https://vuepress.vuejs.org/.\n## Contribution\n",
        "chatgpt_rag": "docs: fix typo in link text"
    },
    {
        "msg": "docs: added docs for using Chakra UI Vue CLI plugin",
        "diff": "diff --git a/packages/chakra-ui-docs/docs/getting-started.mdx b/packages/chakra-ui-docs/docs/getting-started.mdx # Getting Started\nInstall Chakra UI and it's peer dependency, `emotion`\n+\n<br />\n```bash\nyarn add @chakra-ui/vue emotion\n```\n+\nor (with npm)\n```bash\nnpm install @chakra-ui/vue emotion --save\n```\n+### With Vue CLI plugin\n+\n+If you are using Vue CLI 3, then you can install Chakra UI and get a base setup using the Chakra UI [plugin](https://www.npmjs.com/package/vue-cli-plugin-chakra-ui).\n+\n+```bash\n+vue add chakra-ui\n+```\n+\n### With Nuxt.js\n-If you're using Nuxt, you need to install `@nuxtjs/emotion` package as well to server-side render your styles.\n+If you're using Nuxt, you need to install `@nuxtjs/emotion` package as well to server-side render your styles.\n```bash\nyarn add @chakra-ui/vue emotion @nuxtjs/emotion\n@@ -22,39 +32,37 @@ yarn add @chakra-ui/vue emotion @nuxtjs/emotion\nCreate a theme object to include custom color, typography, and layout values. Chakra UI comes with a default theme, so this step is optional.\n-\n-\n```js\n// example theme.js\nexport default {\n- breakpoints: [\"30em\", \"48em\", \"62em\", \"80em\"],\n+ breakpoints: ['30em', '48em', '62em', '80em'],\nfonts: {\nheading: '\"Avenir Next\", sans-serif',\n- body: \"system-ui, sans-serif\",\n- mono: \"Menlo, monospace\",\n+ body: 'system-ui, sans-serif',\n+ mono: 'Menlo, monospace'\n},\nfontSizes: {\n- xs: \"0.75rem\",\n- sm: \"0.875rem\",\n- md: \"1rem\",\n- lg: \"1.125rem\",\n- xl: \"1.25rem\",\n- \"2xl\": \"1.5rem\",\n- \"3xl\": \"1.875rem\",\n- \"4xl\": \"2.25rem\",\n- \"5xl\": \"3rem\",\n- \"6xl\": \"4rem\",\n- },\n-};\n+ xs: '0.75rem',\n+ sm: '0.875rem',\n+ md: '1rem',\n+ lg: '1.125rem',\n+ xl: '1.25rem',\n+ '2xl': '1.5rem',\n+ '3xl': '1.875rem',\n+ '4xl': '2.25rem',\n+ '5xl': '3rem',\n+ '6xl': '4rem'\n+ }\n+}\n```\n## Usage\n+\n**1. Import the Chakra UI plugin in your `main.js` file.**\nIn order to use Chakra, you need to wrap your main application inside the Chakra `CThemeProvider` component.\nYou can do so as shown below.\n-\n```js\nimport Vue from 'vue'\nimport Chakra, { CThemeProvider } from '@chakra-ui/vue'\n@@ -64,14 +72,12 @@ Vue.use(Chakra)\nnew Vue({\nel: '#app',\n- render: (h) => h(CThemeProvider, [\n- h(App)\n- ])\n+ render: (h) => h(CThemeProvider, [h(App)])\n}).$mount()\n```\n-\nIf you'd like to add extend the Chakra theme with custom brand colors you can do so as shown below. This is also optional.\n+\n<br />\n```js\n@@ -84,24 +90,22 @@ Vue.use(Chakra, {\ncolors: {\n...defaultTheme.colors,\nbrand: {\n- 900: \"#1a365d\",\n- 800: \"#153e75\",\n- 700: \"#2a69ac\",\n- },\n+ 900: '#1a365d',\n+ 800: '#153e75',\n+ 700: '#2a69ac'\n+ }\n}\n}\n})\nnew Vue({\nel: '#app',\n- render: (h) => h(CThemeProvider, [\n- h(App)\n- ])\n+ render: (h) => h(CThemeProvider, [h(App)])\n}).$mount()\n```\n-\n## Injecting Global Styles.\n+\nSometimes you may need to apply css reset styles to your application.\nChakra UI exports a `CReset` that'll remove browser default styles. It's heavily inspired by [Tailwind's preflight](https://unpkg.com/tailwindcss@1.1.2/dist/base.css)\n@@ -116,10 +120,7 @@ Vue.use(Chakra)\nnew Vue({\nel: '#app',\n- render: (h) => h(CThemeProvider, [\n- h(CReset),\n- h(App)\n- ])\n+ render: (h) => h(CThemeProvider, [h(CReset), h(App)])\n}).$mount()\n```\n@@ -150,10 +151,11 @@ export default {\n```\n### Codesandbox starters\n+\n- [Vue Starter](https://codesandbox.io/s/chakra-ui-vue-starter-2sy0g)\n- [Nuxt Starter](https://codesandbox.io/s/chakra-ui-nuxt-demo-f8tq4)\n- [Gridsome Starter](https://codesandbox.io/s/chakra-ui-gridsome-demo-038c9)\n-\n### Storybook Components\n+\nYou can also view all developed components in [Storybook](https://chakra-ui-vue.netlify.com)!\n",
        "date": "08.05.2020 22:25:19",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "sim_msg": "refactor: remove unnecessary template literals",
        "sim_diff": "diff --git a/packages/checkbox/src/presenters/stylesheet.js b/packages/checkbox/src/presenters/stylesheet.js @@ -35,14 +35,14 @@ function getCheckboxRulesByDisabled(themeData) {\nfunction getCheckboxRulesByChecked(themeData) {\nreturn {\nborder: `none`,\n- backgroundColor: `${themeData[\"checkbox.checked.backgroundColor\"]}`\n+ backgroundColor: themeData[\"checkbox.checked.backgroundColor\"]\n};\n}\nfunction getCheckboxRulesByIndeterminate(themeData) {\nreturn {\nborder: `none`,\n- backgroundColor: `${themeData[\"checkbox.indeterminate.backgroundColor\"]}`\n+ backgroundColor: themeData[\"checkbox.indeterminate.backgroundColor\"]\n};\n}\n@@ -52,41 +52,35 @@ function getCheckboxRulesByLegacyTheme(themeData, props) {\nreturn {\n...(!checked && !hasFocus && !indeterminate\n? {\n- backgroundColor: `${themeData[\"checkbox.backgroundColor\"]}`\n+ backgroundColor: themeData[\"checkbox.backgroundColor\"]\n}\n: {}),\n...(hasFocus\n? {\n- backgroundColor: `${themeData[\"checkbox.backgroundColor\"]}`\n+ backgroundColor: themeData[\"checkbox.backgroundColor\"]\n}\n: {}),\n...(checked\n? {\n- backgroundColor: `${themeData[\"checkbox.checked.backgroundColor\"]}`,\n- borderColor: `${themeData[\"checkbox.checked.borderColor\"]}`\n+ backgroundColor: themeData[\"checkbox.checked.backgroundColor\"],\n+ borderColor: themeData[\"checkbox.checked.borderColor\"]\n}\n: {}),\n...(checked && hasFocus\n? {\n- backgroundColor: `${\n- themeData[\"checkbox.focus.checked.backgroundColor\"]\n- }`,\n- borderColor: `${themeData[\"checkbox.focus.checked.borderColor\"]}`\n+ backgroundColor: themeData[\"checkbox.focus.checked.backgroundColor\"],\n+ borderColor: themeData[\"checkbox.focus.checked.borderColor\"]\n}\n: {}),\n...(indeterminate\n? {\n- backgroundColor: `${\n- themeData[\"checkbox.indeterminate.backgroundColor\"]\n- }`,\n- borderColor: `${themeData[\"checkbox.indeterminate.borderColor\"]}`\n+ backgroundColor: themeData[\"checkbox.indeterminate.backgroundColor\"],\n+ borderColor: themeData[\"checkbox.indeterminate.borderColor\"]\n}\n: {}),\n...(indeterminate && hasFocus\n? {\n- borderColor: `${\n- themeData[\"checkbox.focus.indeterminate.borderColor\"]\n- }`\n+ borderColor: themeData[\"checkbox.focus.indeterminate.borderColor\"]\n}\n: {}),\n...(disabled\n@@ -102,7 +96,7 @@ function getCheckboxRulesByLegacyTheme(themeData, props) {\n: {}),\n...(disabled && checked && !indeterminate\n? {\n- backgroundColor: `${themeData[\"checkbox.backgroundColor\"]}`,\n+ backgroundColor: themeData[\"checkbox.backgroundColor\"],\nopacity: themeData[\"component.disabled.opacity\"]\n}\n: {})\n@@ -124,8 +118,8 @@ export default function stylesheet(props, themeData, theme) {\nboxSizing: `border-box`,\ndisplay: `inline-block`,\nposition: `relative`,\n- height: `${themeData[\"checkbox.height\"]}`,\n- width: `${themeData[\"checkbox.width\"]}`\n+ height: themeData[\"checkbox.height\"],\n+ width: themeData[\"checkbox.width\"]\n},\ncheckboxCheckWrapper: {\nposition: `relative`,\n@@ -138,9 +132,9 @@ export default function stylesheet(props, themeData, theme) {\ntextAlign: `center`,\nfontSize: `25px`,\nlineHeight: `14px`,\n- height: `${themeData[\"checkbox.height\"]}`,\n- width: `${themeData[\"checkbox.width\"]}`,\n- borderRadius: `${themeData[\"checkbox.borderRadius\"]}`,\n+ height: themeData[\"checkbox.height\"],\n+ width: themeData[\"checkbox.width\"],\n+ borderRadius: themeData[\"checkbox.borderRadius\"],\ncursor: hasHover ? `pointer` : `default`,\n// eslint-disable-next-line prettier/prettier\n\"svg\": {\n@@ -150,7 +144,7 @@ export default function stylesheet(props, themeData, theme) {\ntransform: `translateX(-50%) translateY(-50%)`,\npointerEvents: `none`,\n\"*\": {\n- fill: `${themeData[\"checkbox.iconColor\"]}`\n+ fill: themeData[\"checkbox.iconColor\"]\n}\n},\n...(hasFocus ? getCheckboxRulesByFocus(themeData) : {}),\n",
        "chatgpt_rag": "style: refactor template literals to use object properties in themeData"
    },
    {
        "msg": "docs: add margin to docs pages",
        "diff": "diff --git a/website/layouts/default.vue b/website/layouts/default.vue >\n<CReset />\n<Navbar />\n- <CFlex max-h=\"calc(100vh - 60px)\">\n+ <CFlex\n+ max-h=\"calc(100vh - 60px)\"\n+ max-w=\"1440px\"\n+ mx=\"auto\"\n+ >\n<Sidebar />\n<CBox\nid=\"main-content\"\n",
        "date": "17.08.2021 16:07:41",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "sim_msg": "feat(docs): small tweaks to search results design",
        "sim_diff": "diff --git a/docs/src/components/AppSearchResults.vue b/docs/src/components/AppSearchResults.vue @@ -98,10 +98,10 @@ export default {\nopacity: 0\n&__section\n- margin: 16px 0\n+ margin: 4px 0\n&__section-title\n- padding: 4px 0 8px 16px\n+ padding: 4px 0 4px 16px\nfont-weight: 500\ncolor: $primary\n",
        "chatgpt_rag": "feat(website): update layout design with max width and center alignment"
    },
    {
        "msg": "docs(options): analytics and remote config description\nAnalytics and Remote Config options descriptions were referencing Storage.",
        "diff": "diff --git a/docs/guide/options/README.md b/docs/guide/options/README.md @@ -556,7 +556,7 @@ performance: true\n### analytics\n-Initializes Firebase Storage and makes it available via `$fireAnalytics` and `$fireAnalyticsObj`.\n+Initializes Firebase Analytics and makes it available via `$fireAnalytics` and `$fireAnalyticsObj`.\n- Type: `Boolean` or `Object`\n- Default: `false`\n@@ -567,7 +567,7 @@ analytics: true\n### remoteConfig\n-Initializes Firebase Storage and makes it available via `$fireConfig` and `$fireConfigObj`.\n+Initializes Firebase Remote Config and makes it available via `$fireConfig` and `$fireConfigObj`.\n- Type: `Boolean` or `Object`\n- Default: `false`\n",
        "date": "10.05.2020 22:07:50",
        "repo": "nuxt-community/firebase-module",
        "type": "docs",
        "sim_msg": "docs: update original source docs",
        "sim_diff": "diff --git a/packages/analytics-plugin-original-source/README.md b/packages/analytics-plugin-original-source/README.md ## Usage\n```bash\n-npm i analytics\n-npm i analytics-plugin-original-source\n+npm install analytics\n+npm install analytics-plugin-original-source\n```\n```js\n-import analyticsLib from 'analytics'\n+import Analytics from 'analytics'\nimport originalSrc from 'analytics-plugin-original-source'\n-const analytics = analyticsLib({\n- app: 'doggieDating',\n+const analytics = Analytics({\n+ app: 'my-app',\nversion: 100,\ndebug: true,\nplugins: [\n",
        "chatgpt_rag": "docs: update analytics and remoteConfig initialization in README.md"
    },
    {
        "msg": "docs(routes): fix layout component imports",
        "diff": "diff --git a/docs/src/routes.js b/docs/src/routes.js @@ -4,8 +4,8 @@ import { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom'\nimport ExternalExampleLayout from './components/ExternalExampleLayout'\nimport DocsLayout from './components/DocsLayout'\nimport DocsRoot from './components/DocsRoot'\n-import LayoutsLayout from './components/layoutsLayout'\n-import LayoutsRoot from './components/layoutsRoot'\n+import LayoutsLayout from './components/LayoutsLayout'\n+import LayoutsRoot from './components/LayoutsRoot'\nimport Introduction from './views/Introduction'\nimport Layouts from './views/layouts'\n",
        "date": "02.06.2018 20:02:08",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "docs: fix csr heading dupes",
        "sim_diff": "diff --git a/website/lib/components/Layout.js b/website/lib/components/Layout.js @@ -4,7 +4,7 @@ import cn from 'classnames';\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport {useRouter} from 'next/router';\n-import {useMemo, useRef, useState} from 'react';\n+import {useRef, useState} from 'react';\nimport {ExternalLink, Menu} from 'react-feather';\nimport useIsomorphicLayoutEffect from 'use-isomorphic-layout-effect';\n@@ -296,7 +296,7 @@ const slugify = (str) =>\n.replace(/[.:'\"<>!@#$%^&*()[\\]]/g, '');\nconst linkify =\n- (Tag, headings) =>\n+ (Tag, headings, pathname) =>\n({children, ...props}) => {\nconst url = slugify(\ntypeof children !== 'string'\n@@ -304,12 +304,17 @@ const linkify =\n: children\n);\n- const count = headings.filter(\n- (value) => value === url\n- ).length;\n- const id = count === 0 ? url : `${url}-${count}`;\n+ if (\n+ headings.some((heading) => heading.pathname !== pathname)\n+ ) {\n+ // Reset the headings store.\n+ headings.length = 0;\n+ }\n- headings.push(url);\n+ const dupeCount = headings.filter(\n+ ({url: u}) => u === url\n+ ).length;\n+ const id = dupeCount === 0 ? url : `${url}-${dupeCount}`;\nreturn (\n<Tag {...props} id={id}>\n@@ -355,6 +360,8 @@ const components = {\n},\n};\n+const initialHeadings = [];\n+\nexport default function Layout({children}) {\nconst {pathname, events} = useRouter();\nconst index = nav.findIndex(({url}) => url === pathname) ?? 0;\n@@ -362,7 +369,14 @@ export default function Layout({children}) {\nconst navRef = useRef();\nconst activeLinkRef = useRef();\nconst [hash, setHash] = useState(null);\n- const [headings, setHeadings] = useState([]);\n+ const [computedComponents, setComputedComponents] = useState({\n+ ...components,\n+ h2: linkify('h2', initialHeadings, pathname),\n+ h3: linkify('h3', initialHeadings, pathname),\n+ h4: linkify('h4', initialHeadings, pathname),\n+ h5: linkify('h5', initialHeadings, pathname),\n+ h6: linkify('h6', initialHeadings, pathname),\n+ });\nconst displayNavigation = nav[index] != null;\n@@ -374,6 +388,15 @@ export default function Layout({children}) {\nsetHash(location.hash);\nfunction onRouteChangeComplete() {\n+ const headings = [];\n+ setComputedComponents({\n+ ...components,\n+ h2: linkify('h2', headings, pathname),\n+ h3: linkify('h3', headings, pathname),\n+ h4: linkify('h4', headings, pathname),\n+ h5: linkify('h5', headings, pathname),\n+ h6: linkify('h6', headings, pathname),\n+ });\nsetHash(null);\ndocument.querySelector('#focus-root').focus();\n}\n@@ -383,7 +406,7 @@ export default function Layout({children}) {\nreturn () => {\nevents.off('routeChangeComplete', onRouteChangeComplete);\n};\n- }, [events]);\n+ }, [events, pathname]);\nconst articleRef = useRef();\nconst [anchors, setAnchors] = useState([]);\n@@ -402,10 +425,6 @@ export default function Layout({children}) {\nsetAnchors(localAnchors);\nsetNavOpen(false);\n-\n- return () => {\n- setHeadings([]);\n- };\n}, [pathname]);\nlet currentParentIndex = null;\n@@ -429,18 +448,6 @@ export default function Layout({children}) {\nnav.find(({url}) => url === pathname)?.title ?? 'Docs'\n} | Floating UI`;\n- const computedComponents = useMemo(\n- () => ({\n- ...components,\n- h2: linkify('h2', headings),\n- h3: linkify('h3', headings),\n- h4: linkify('h4', headings),\n- h5: linkify('h5', headings),\n- h6: linkify('h6', headings),\n- }),\n- [headings]\n- );\n-\nreturn (\n<MDXProvider components={computedComponents}>\n<Head>\n",
        "chatgpt_rag": "docs: fix component import casing in routes file"
    },
    {
        "msg": "docs(Collapse): Document the defaultOpen prop\nAdds a sentence to describe the defaultOpen prop.",
        "diff": "diff --git a/docs/lib/Components/CollapsePage.js b/docs/lib/Components/CollapsePage.js @@ -68,7 +68,8 @@ export default class CollapsePage extends React.Component {\nwanted without the need to manage/control the state of the component.{' '}\n<code>UncontrolledCollapse</code> does not require an <code>isOpen</code> prop. Instead\npass a <code>toggler</code> prop. The <code>toggler</code> prop is a string which will run\n- querySelectorAll to find dom elements which will trigger toggle.\n+ querySelectorAll to find dom elements which will trigger toggle. The <code>defaultOpen</code>\n+ prop controls the initial state.\n</p>\n<div className=\"docs-example\">\n<UncontrolledCollapseExample />\n",
        "date": "07.10.2020 22:06:43",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "sim_msg": "feat(models): collapsed schema content should be clickable",
        "sim_diff": "diff --git a/src/core/components/model-collapse.jsx b/src/core/components/model-collapse.jsx @@ -90,7 +90,11 @@ export default class ModelCollapse extends Component {\n<span onClick={ this.toggleCollapsed } className=\"pointer\">\n<span className={ \"model-toggle\" + ( this.state.expanded ? \"\" : \" collapsed\" ) }></span>\n</span>\n- { this.state.expanded ? this.props.children :this.state.collapsedContent }\n+ {\n+ this.state.expanded\n+ ? this.props.children\n+ : <span onClick={this.toggleCollapsed} className=\"pointer\">{this.state.collapsedContent}</span>\n+ }\n</span>\n)\n}\n",
        "chatgpt_rag": "docs(collapse): added defaultOpen prop to UncontrolledCollapse component"
    },
    {
        "msg": "docs: was used",
        "diff": "diff --git a/website/pages/docs/customization.md b/website/pages/docs/customization.md @@ -129,7 +129,7 @@ module.exports = {\noptions: {\npluginOptions, // the options passed to the plugin ({ name:'pluginname', options: { key: 'value'}})\nrazzleOptions, // the modified options passed to Razzle in the `options` key in `razzle.config.js` (options: { key: 'value'})\n- webpackOptions // the modified options that will be used to configure webpack/ webpack loaders and plugins\n+ webpackOptions // the modified options that was used to configure webpack/ webpack loaders and plugins\n},\npaths // the modified paths that will be used by Razzle.\n}) {\n",
        "date": "28.08.2020 17:41:20",
        "repo": "jaredpalmer/razzle",
        "type": "docs",
        "sim_msg": "docs: sunset pluginAPI.enabled",
        "sim_diff": "diff --git a/packages/docs/docs/plugin/option-api.md b/packages/docs/docs/plugin/option-api.md @@ -40,21 +40,6 @@ module.exports = {\n}\n```\n-## enabled\n-\n-- Type: `boolean`\n-- Default: true\n-\n-Configure whether to enable this plugin. e.g. if you want to enable a plugin only in development mode:\n-\n-```js\n-module.exports = (options, ctx) => {\n- return {\n- enabled: !ctx.isProd\n- }\n-}\n-```\n-\n## chainWebpack\n- Type: `Function`\n",
        "chatgpt_rag": "docs: update webpackOptions comment in customization.md"
    },
    {
        "msg": "docs(Form): fix group variations typo",
        "diff": "diff --git a/docs/app/Examples/collections/Form/GroupVariations/index.js b/docs/app/Examples/collections/Form/GroupVariations/index.js @@ -12,7 +12,7 @@ const FormGroupVariationsExamples = () => (\nexamplePath='collections/Form/GroupVariations/FormExampleEvenlyDividedGroup'\n>\n<Message info>\n- When using the <code>widths='even'</code> prop declaration on a <code>Form.Group</code>,\n+ When using the <code>widths='equal'</code> prop declaration on a <code>Form.Group</code>,\nall child <code>Form.Dropdown</code>, <code>Form.Input</code>, <code>Form.Select</code>\ncomponents must be rendered with a <code>fluid</code> prop to work correctly.\n</Message>\n",
        "date": "24.05.2018 15:35:27",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "chore: use first-of-type instead of first-child",
        "sim_diff": "diff --git a/src/components/internals/create-select-styles.js b/src/components/internals/create-select-styles.js @@ -228,7 +228,7 @@ const groupStyles = (props, theme) => base => {\nreturn {\n...base,\npadding: 0,\n- '&:not(:first-child)': {\n+ '&:not(:first-of-type)': {\nborderTop: props.showOptionGroupDivider\n? `1px solid ${overwrittenVars.colorNeutral}`\n: base.borderTop,\n",
        "chatgpt_rag": "chore: use equal instead of even for widths prop in Form.Group component"
    },
    {
        "msg": "docs(ModalExampleScrollingContent): your description\nTo conform with typescript definition files",
        "diff": "diff --git a/docs/app/Examples/modules/Modal/Variations/ModalExampleScrollingContent.js b/docs/app/Examples/modules/Modal/Variations/ModalExampleScrollingContent.js @@ -27,7 +27,7 @@ const ModalExampleScrollingContent = () => (\n</Modal.Content>\n<Modal.Actions>\n<Button primary>\n- Proceed <Icon name='right chevron' />\n+ Proceed <Icon name='chevron right' />\n</Button>\n</Modal.Actions>\n</Modal>\n",
        "date": "22.05.2018 00:40:06",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "feat: added extra class opportunity to popup",
        "sim_diff": "diff --git a/src/renderer/common/popup.jsx b/src/renderer/common/popup.jsx @@ -15,8 +15,9 @@ const styles = theme => ({\n}\n});\n-export const Popup = withStyles(styles)(({ classes, children, closeAction, text, open = true }) => (\n- <Modal open={open} className={classes.modal}>\n+export const Popup = withStyles(styles)(\n+ ({ classes, xtraClass, children, closeAction, text, open = true }) => (\n+ <Modal open={open} className={`${classes.modal} ${xtraClass}`}>\n<ModalWrap>\n<ModalCloseButton onClick={closeAction} className={classes.closeButton}>\n<ModalCloseIcon />\n@@ -33,6 +34,7 @@ export const Popup = withStyles(styles)(({ classes, children, closeAction, text,\n<ModalBody>{children}</ModalBody>\n</ModalWrap>\n</Modal>\n-));\n+ )\n+);\nexport default Popup;\n",
        "chatgpt_rag": "fix: corrected icon name in ModalExampleScrollingContent"
    },
    {
        "msg": "docs(readme): add badges for CDN, NPM, and license + CDN info.",
        "diff": "diff --git a/README.md b/README.md [![reactstrap](https://cloud.githubusercontent.com/assets/399776/13906899/1de62f0c-ee9f-11e5-95c0-c515fee8e918.png)](https://reactstrap.github.io)\n-[![Build Status](https://travis-ci.org/reactstrap/reactstrap.svg?branch=master)](https://travis-ci.org/reactstrap/reactstrap) [![Coverage Status](https://coveralls.io/repos/github/reactstrap/reactstrap/badge.svg?branch=master)](https://coveralls.io/github/reactstrap/reactstrap?branch=master)\n+[![CDNJS](https://img.shields.io/cdnjs/v/reactstrap.svg)](https://cdnjs.com/libraries/reactstrap) [![NPM Version](https://img.shields.io/npm/v/reactstrap.svg?branch=master)](https://www.npmjs.com/package/reactstrap) [![Build Status](https://travis-ci.org/reactstrap/reactstrap.svg?branch=master)](https://travis-ci.org/reactstrap/reactstrap) [![Coverage Status](https://coveralls.io/repos/github/reactstrap/reactstrap/badge.svg?branch=master)](https://coveralls.io/github/reactstrap/reactstrap?branch=master) [![License](https://img.shields.io/npm/l/reactstrap.svg)](https://github.com/reactstrap/reactstrap/blob/master/LICENSE)\n# reactstrap\n@@ -45,6 +45,19 @@ import { Button } from 'reactstrap';\nNow you are ready to use the imported reactstrap components within your component hierarchy defined in the render method. Here is an example [`App.js`](https://gist.github.com/eddywashere/e13033c0e655ab7cda995f8bc77ce40d) redone using reactstrap.\n+### CDN\n+\n+Reactstrap can be included directly in your application's bundle or excluded during compilation and linked directly to a CDN.\n+\n+```html\n+https://cdnjs.cloudflare.com/ajax/libs/reactstrap/4.8.0/reactstrap.min.js\n+```\n+\n+> Note: When using the external CDN library, be sure to include the required dependencies as necessary **prior** to the Reactstrap library:\n+> * [React](https://cdnjs.com/libraries/react)\n+> * [ReactTransitionGroup](https://unpkg.com/react-transition-group/dist/react-transition-group.min.js)\n+\n+\n## About the Project\nThis library contains React Bootstrap 4 components that favor composition and control. The library does not depend on jQuery or Bootstrap javascript. However, [Tether](http://tether.io/) is relied upon for advanced positioning of content like Tooltips, Popovers, and auto-flipping Dropdowns.\n",
        "date": "01.07.2017 11:06:55",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "sim_msg": "chore(README): Change to shield.io badges",
        "sim_diff": "diff --git a/README.md b/README.md [![npm](https://img.shields.io/npm/v/contentful.svg)](https://www.npmjs.com/package/contentful)\n[![Build Status](https://travis-ci.org/contentful/contentful.js.svg?branch=master)](https://travis-ci.org/contentful/contentful.js)\n[![Coverage Status](https://coveralls.io/repos/github/contentful/contentful.js/badge.svg?branch=master)](https://coveralls.io/github/contentful/contentful.js?branch=master)\n-[![Dependency Status](https://david-dm.org/contentful/contentful.js.svg)](https://david-dm.org/contentful/contentful.js)\n-[![devDependency Status](https://david-dm.org/contentful/contentful.js/dev-status.svg)](https://david-dm.org/contentful/contentful.js#info=devDependencies)\n+[![Dependency Status](https://img.shields.io/david/contentful/contentful.js.svg)](https://david-dm.org/contentful/contentful.js)\n+[![devDependency Status](https://img.shields.io/david/dev/contentful/contentful.js.svg)](https://david-dm.org/contentful/contentful.js#info=devDependencies)\n[![semantic-release](https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg)](https://github.com/semantic-release/semantic-release)\n[![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg)](http://standardjs.com/)\n",
        "chatgpt_rag": "chore(README): Update badges to shield.io format and add CDN information"
    },
    {
        "msg": "docs: update radio/checkbox examples to follow docs\n<input> and <label> should be siblings\n<input> should before after <label>",
        "diff": "diff --git a/docs/lib/examples/InlineCheckboxes.js b/docs/lib/examples/InlineCheckboxes.js @@ -5,13 +5,15 @@ const Example = (props) => {\nreturn (\n<Form>\n<FormGroup check inline>\n- <Label check>\n- <Input type=\"checkbox\" /> Some input\n+ <Input id=\"InlineCheckboxes-checkbox-1\" type=\"checkbox\" />\n+ <Label for=\"InlineCheckboxes-checkbox-1\" check>\n+ Some input\n</Label>\n</FormGroup>\n<FormGroup check inline>\n- <Label check>\n- <Input type=\"checkbox\" /> Some other input\n+ <Input id=\"InlineCheckboxes-checkbox-2\" type=\"checkbox\" />\n+ <Label for=\"InlineCheckboxes-checkbox-2\" check>\n+ Some other input\n</Label>\n</FormGroup>\n</Form>\n@@ -19,4 +21,3 @@ const Example = (props) => {\n}\nexport default Example;\n-\n\\ No newline at end of file\n",
        "date": "11.12.2020 15:41:19",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "sim_msg": "docs(core-checkbox): add description for checked vs defaultChecked props",
        "sim_diff": "diff --git a/packages/Checkbox/Checkbox.jsx b/packages/Checkbox/Checkbox.jsx @@ -145,6 +145,11 @@ Checkbox.propTypes = {\n* The value. Must be unique within the group.\n*/\nvalue: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool]).isRequired,\n+ /**\n+ * Use `checked` for controlled checkbox. For uncontrolled checkbox, use React's built-in `defaultChecked` prop.\n+ * See examples below for more details.\n+ */\n+ checked: PropTypes.bool,\n/**\n* The id. Must be unique within the group. If no id is provided, one will be generated in the following format: `name_value`\n*/\n@@ -163,6 +168,7 @@ Checkbox.defaultProps = {\nid: undefined,\nfeedback: undefined,\nerror: undefined,\n+ checked: undefined,\n}\nCheckbox.displayName = 'Checkbox'\n",
        "chatgpt_rag": "docs(inline-checkboxes): update inline checkboxes example with unique ids and labels for accessibility"
    },
    {
        "msg": "docs(Theming): use plugin",
        "diff": "diff --git a/docs/src/pages/Theming.mdx b/docs/src/pages/Theming.mdx @@ -80,14 +80,14 @@ yarn remove semantic-ui semantic-ui-css\n### Install required dependencies\n-Create React App does not support LESS out of the box, we and propose to use [`@craco/craco`](https://www.npmjs.com/package/@craco/craco) to add it and avoid `eject`. You have to install required packages:\n+Create React App does not support LESS out of the box, we and propose to use [`@craco/craco`](https://www.npmjs.com/package/@craco/craco) to add its support and avoid `eject`. You have to install required packages:\n```bash\n-npm install @craco/craco craco-less semantic-ui-less --save-dev\n+npm install @craco/craco @semantic-ui-react/craco-less semantic-ui-less --save-dev\n```\n```bash\n-yarn add @craco/craco craco-less semantic-ui-less --dev\n+yarn add @craco/craco @semantic-ui-react/craco-less semantic-ui-less --dev\n```\nAnd then update your `package.json` and create `craco.config.js`:\n@@ -104,39 +104,8 @@ And then update your `package.json` and create `craco.config.js`:\n```\n```jsx label=craco.config.js\n-const { getLoader, loaderByName, throwUnexpectedConfigError } = require('@craco/craco')\n-\nmodule.exports = {\n- webpack: {\n- alias: {\n- '../../theme.config$': require('path').join(__dirname, '/src/semantic-ui/theme.config'),\n- },\n- },\n- plugins: [\n- { plugin: require('craco-less') },\n- {\n- plugin: {\n- overrideWebpackConfig: ({ context, webpackConfig }) => {\n- const { isFound, match: fileLoaderMatch } = getLoader(\n- webpackConfig,\n- loaderByName('file-loader'),\n- )\n-\n- if (!isFound) {\n- throwUnexpectedConfigError({\n- message: `Can't find file-loader in the ${context.env} webpack config!`,\n- })\n- }\n-\n- fileLoaderMatch.loader.exclude.push(/theme.config$/)\n- fileLoaderMatch.loader.exclude.push(/\\.variables$/)\n- fileLoaderMatch.loader.exclude.push(/\\.overrides$/)\n-\n- return webpackConfig\n- },\n- },\n- },\n- ],\n+ plugins: [{ plugin: require('@semantic-ui-react/craco-less') }],\n}\n```\n",
        "date": "29.08.2019 15:47:10",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "refactor(craco.config): only conditionally load hot-loader",
        "sim_diff": "diff --git a/craco.config.js b/craco.config.js @@ -26,7 +26,7 @@ module.exports = {\n* yarn start --env.YAML_CONFIG=/absolute/path/to/config.yml\n*/\nwebpack: {\n- configure: function (webpackConfig, { paths }) {\n+ configure: function (webpackConfig, { env, paths }) {\n// Config items to adjust behavior to match mastarm behavior\npaths.appBuild = webpackConfig.output.path = path.join(__dirname, 'dist')\npaths.appSrc = path.resolve(__dirname, 'lib')\n@@ -72,10 +72,13 @@ module.exports = {\n}\n// Support React hot-reloading\n- webpackConfig.entry = [\n- require.resolve('react-dev-utils/webpackHotDevClient'),\n- paths.appIndexJs\n- ]\n+ const hotLoaderEntries = []\n+ if (env === 'development') {\n+ hotLoaderEntries.push(\n+ require.resolve('react-dev-utils/webpackHotDevClient')\n+ )\n+ }\n+ webpackConfig.entry = [...hotLoaderEntries, paths.appIndexJs]\n// Allow for manual configuration of optimization plugins\nwebpackConfig.optimization = {\n@@ -83,8 +86,12 @@ module.exports = {\n}\n// Custom plugins to allow trimet-mod-otp integration\n+ const hotLoaderPlugins = []\n+ if (env === 'development') {\n+ hotLoaderPlugins.push(new ReactRefreshWebpackPlugin())\n+ }\nwebpackConfig.plugins = [\n- new ReactRefreshWebpackPlugin(),\n+ ...hotLoaderPlugins,\nnew HtmlWebpackPlugin({\nfilename: 'index.html',\ninject: 'body',\n",
        "chatgpt_rag": "refactor(docs): update craco config to use @semantic-ui-react/craco-less plugin"
    },
    {
        "msg": "docs: updated installed version",
        "diff": "diff --git a/package.json b/package.json \"@babel/plugin-transform-modules-commonjs\": \"^7.7.4\",\n\"@babel/plugin-transform-parameters\": \"^7.7.4\",\n\"@babel/preset-env\": \"^7.9.5\",\n- \"@chakra-ui/vue\": \"^0.5.3\",\n+ \"@chakra-ui/vue\": \"^0.5.4\",\n\"@commitlint/cli\": \"^8.2.0\",\n\"@commitlint/config-conventional\": \"^8.2.0\",\n\"@fortawesome/free-brands-svg-icons\": \"^5.12.0\",\n",
        "date": "16.05.2020 21:05:46",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "sim_msg": "chore: remove the unused dependencies babel-template and babel-types",
        "sim_diff": "diff --git a/package.json b/package.json \"babel-plugin-transform-object-rest-spread\": \"^6.23.0\",\n\"babel-preset-env\": \"^1.4.0\",\n\"babel-register\": \"^6.24.1\",\n- \"babel-template\": \"^6.24.1\",\n- \"babel-types\": \"^6.24.1\",\n\"cz-conventional-changelog\": \"^2.0.0\",\n\"eslint\": \"^4.5.0\",\n\"eslint-config-standard\": \"^10.2.1\",\n",
        "chatgpt_rag": "chore: update version of @chakra-ui/vue to 0.5.4"
    },
    {
        "msg": "docs(List): fix duplicate Types sections",
        "diff": "diff --git a/docs/app/Examples/elements/List/Variations/index.js b/docs/app/Examples/elements/List/Variations/index.js @@ -5,7 +5,7 @@ import ComponentExample from 'docs/app/Components/ComponentDoc/ComponentExample'\nimport ExampleSection from 'docs/app/Components/ComponentDoc/ExampleSection'\nconst ListVariations = () => (\n- <ExampleSection title='Types'>\n+ <ExampleSection title='Variations'>\n<ComponentExample\ntitle='Horizontal'\ndescription='A list can be formatted to have items appear horizontally'\n",
        "date": "17.04.2018 10:25:55",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "refactor: move price below vendor",
        "sim_diff": "diff --git a/src/components/ProductDetail/ProductDetail.js b/src/components/ProductDetail/ProductDetail.js @@ -300,8 +300,8 @@ class ProductDetail extends Component {\n<Grid item xs={12} sm={6}>\n<ProductDetailTitle pageTitle={product.pageTitle} title={product.title} />\n- <ProductDetailPrice compareAtPrice={productPrice.compareAtPrice} price={productPrice.displayPrice} />\n<ProductDetailVendor>{product.vendor}</ProductDetailVendor>\n+ <ProductDetailPrice compareAtPrice={productPrice.compareAtPrice} price={productPrice.displayPrice} />\n<ProductDetailDescription>{product.description}</ProductDetailDescription>\n<VariantList\nonSelectOption={this.handleSelectOption}\n",
        "chatgpt_rag": "style: change section title from 'Types' to 'Variations' in ListVariations component"
    },
    {
        "msg": "docs(Input): add min and max to number input",
        "diff": "diff --git a/docs/lib/examples/InputGroupOverview.js b/docs/lib/examples/InputGroupOverview.js @@ -37,7 +37,7 @@ const Example = (props) => {\n<br />\n<InputGroup>\n<InputGroupAddon addonType=\"prepend\">$</InputGroupAddon>\n- <Input placeholder=\"Amount\" type=\"number\" step=\"1\" />\n+ <Input placeholder=\"Amount\" min={0} max={100} type=\"number\" step=\"1\" />\n<InputGroupAddon addonType=\"append\">.00</InputGroupAddon>\n</InputGroup>\n</div>\n",
        "date": "03.04.2019 20:54:50",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "sim_msg": "refactor: TextInputWithCurrencySymbol",
        "sim_diff": "diff --git a/src/components/TextInputWithCurrencySymbol.js b/src/components/TextInputWithCurrencySymbol.js @@ -40,9 +40,21 @@ function TextInputWithCurrencySymbol(props) {\n/>\n);\n- return props.isCurrencySymbolLTR\n- ? [currencySymbolButton, amountTextInput]\n- : [amountTextInput, currencySymbolButton];\n+ if (props.isCurrencySymbolLTR) {\n+ return (\n+ <>\n+ {currencySymbolButton}\n+ {amountTextInput}\n+ </>\n+ );\n+ }\n+\n+ return (\n+ <>\n+ {amountTextInput}\n+ {currencySymbolButton}\n+ </>\n+ );\n}\nTextInputWithCurrencySymbol.propTypes = propTypes;\n",
        "chatgpt_rag": "feat: Added min and max attributes to Input component in InputGroupOverview"
    },
    {
        "msg": "docs: use consistent ext example\n[skip ci]\nRef",
        "diff": "diff --git a/doc/sample-nodemon.md b/doc/sample-nodemon.md @@ -22,7 +22,7 @@ Here is an example (of a contrived) `nodemon.json` file:\n\"env\": {\n\"NODE_ENV\": \"development\"\n},\n- \"ext\": \"js json\"\n+ \"ext\": \"js,json\"\n}\nNote that the `ignore` used is nodemon's default ignore rule. The complete defaults can be seen here: [defaults.js](https://github.com/remy/nodemon/blob/master/lib/config/defaults.js).\n",
        "date": "04.04.2018 09:15:08",
        "repo": "remy/nodemon",
        "type": "docs",
        "sim_msg": "refactor(safe-json.test): remove stringify tests",
        "sim_diff": "diff --git a/test/unit/util/safe-json.test.js b/test/unit/util/safe-json.test.js 'use strict'\nvar safeJSON = require('../../../lib/util/safe-json')\n-var stringify = safeJSON.stringify\n-var stringifySync = safeJSON.stringifySync\nvar parse = safeJSON.parse\nvar chai = require('chai')\nvar expect = chai.expect\n-describe('stringifier', function stringifierTest() {\n- it('should stringify objects', function(done) {\n- var obj = {a: 1, b: 2}\n- stringify(obj, function cb_stringify(err, stringified) {\n- expect(err).equal(null)\n- expect(stringified).equal('{\"a\":1,\"b\":2}')\n- done()\n- })\n- })\n-\n- it('should fail gracefully on unstringifiable objects', function(done) {\n- var badObj = {\n- get testData () {\n- throw new Error()\n- }\n- }\n- stringify(badObj, function cb_stringify(err, stringified){\n- expect(err).not.equal(null)\n- expect(stringified).equal('[UNPARSABLE OBJECT]')\n- done()\n- })\n- })\n-\n- it('should invoke the callback synchronously', function() {\n- var obj = {a: 1, b: 2}\n- var shouldBeChanged = false\n-\n- stringify(obj, function cb_stringify(err, stringified) {\n- expect(err).equal(null)\n- expect(stringified).equal('{\"a\":1,\"b\":2}')\n- shouldBeChanged = true\n- })\n-\n- expect(shouldBeChanged).equal(true)\n- })\n-})\n-\ndescribe('parser', function() {\nit('should parse json', function(done) {\nvar json = '{\"a\":1,\"b\":2}'\n@@ -66,42 +27,4 @@ describe('parser', function() {\ndone()\n})\n})\n-\n- it('should invoke the callback synchronously', function() {\n- var obj = {a: 1, b: 2}\n- var shouldBeChanged = false\n-\n- stringify(obj, function cb_stringify(err, stringified) {\n- expect(err).equal(null)\n- expect(stringified).equal('{\"a\":1,\"b\":2}')\n- shouldBeChanged = true\n- })\n-\n- expect(shouldBeChanged).equal(true)\n- })\n-})\n-\n-describe('sync stringifier', function() {\n- it('should stringify objects', function() {\n- var obj = {a: 1, b: 2}\n- expect(stringifySync(obj)).equal('{\"a\":1,\"b\":2}')\n- })\n-\n- it('should fail disgracefully on unstringifiable objects', function(){\n- var badObj = {\n- get testData () {\n- throw new Error()\n- }\n- }\n- expect(function () { stringifySync(badObj) }).to.throw()\n- })\n-\n- it('should fail disgracefully on unstringifiable objects', function(){\n- var badObj = {\n- get testData () {\n- throw new Error()\n- }\n- }\n- expect(function () { stringifySync(badObj, 'On fail') }).to.throw()\n- })\n})\n",
        "chatgpt_rag": "style(nodemon): update ext property in sample-nodemon.md file"
    },
    {
        "msg": "docs(stack.mdx): documentation for the Stack component",
        "diff": "diff --git a/packages/chakra-ui-docs/docs/stack.mdx b/packages/chakra-ui-docs/docs/stack.mdx +import SEO from '../components/SEO'\n+\n+<SEO\n+ title=\"Stack\"\n+ description=\"Stack is a layout utility component that makes it easy to stack elements together and apply a space between them.\"\n+/>\n+\n# Stack\n+\n+Stack is a layout utility component that makes it easy to stack elements together and apply a space between them. It composes the [Flex](/flex) component.\n+\n+## Import\n+\n+```js\n+import { CStack } from '@chakra-ui/vue'\n+```\n+\n+By default, each item is stacked vertically. Stack clones it's children and passes the spacing to them using `margin-bottom` or `margin-right`.\n+\n+## Usage\n+\n+```vue live=true\n+<c-stack :spacing=\"5\">\n+ <c-box :p=\"5\" shadow=\"md\" border-width=\"1px\">\n+ <c-heading>See the Vue</c-heading>\n+ <c-text :mt=\"4\">Vue makes front-end development a breeze.</c-text>\n+ </c-box>\n+ <c-box :p=\"5\" shadow=\"md\" border-width=\"1px\">\n+ <c-heading>Go Nuxt!</c-heading>\n+ <c-text :mt=\"4\">Nuxt makes writing Vue even easier.</c-text>\n+ </c-box>\n+</c-stack>\n+```\n+\n+## Stack items horizontally\n+\n+To stack `CStack` children horizontally, pass the `isInline` prop or `direction` and set it to row.\n+\n+Optionally, you can use align and justify to adjust the alignment and distribution of the items.\n+\n+```vue live=true\n+<c-stack :spacing=\"5\" is-inline>\n+ <c-box :p=\"5\" shadow=\"md\" border-width=\"1px\">\n+ <c-heading>See the Vue</c-heading>\n+ <c-text :mt=\"4\">Vue makes front-end development a breeze.</c-text>\n+ </c-box>\n+ <c-box :p=\"5\" shadow=\"md\" border-width=\"1px\">\n+ <c-heading>Go Nuxt!</c-heading>\n+ <c-text :mt=\"4\">Nuxt makes writing Vue even easier.</c-text>\n+ </c-box>\n+</c-stack>\n+```\n+\n+## Reverse display order of items\n+\n+Pass the `isReversed` prop or set `direction` to `row-reverse` or `column-reverse`.\n+\n+```vue live=true\n+<c-stack :spacing=\"5\" is-reversed>\n+ <c-box :p=\"5\" shadow=\"md\" border-width=\"1px\">\n+ <c-heading>See the Vue</c-heading>\n+ <c-text :mt=\"4\">Vue makes front-end development a breeze.</c-text>\n+ </c-box>\n+ <c-box :p=\"5\" shadow=\"md\" border-width=\"1px\">\n+ <c-heading>Go Nuxt!</c-heading>\n+ <c-text :mt=\"4\">Nuxt makes writing Vue even easier.</c-text>\n+ </c-box>\n+</c-stack>\n+```\n+\n+## Props\n+\n+| Name | Type | Default | Description |\n+| -------------------- | ----------------------------- | ------- | ------------------------------------------------------------------------------------------------------------------------ |\n+| `isInline` | `boolean` | false | If `true` the items will be stacked horizontally. |\n+| `isReversed` | `boolean` | false | If `true` the items will be displayed in reverse order. |\n+| `direction` | `FlexProps[\"flexDirection\"]` | | The direction to stack the items. |\n+| `spacing` | `StyledSystem.MarginProps` | | The space between each stack item |\n+| `align` | `FlexProps[\"alignItems\"]` | | The alignment of the stack item. Similar to `align-items` |\n+| `justify` | `FlexProps[\"justifyContent\"]` | | The distribution of the stack item. Similar to `justify-content` |\n+| `shouldWrapChildren` | `boolean` | | If `true`, the children will be wrapped in a `Box` with `display: inline-block`, and the Box will take the spacing props |\n+\n+## Slots\n+\n+| Name | Description |\n+| ------- | ------------------------ |\n+| default | The content of the stack |\n",
        "date": "02.05.2020 22:27:16",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "sim_msg": "feat: update package name",
        "sim_diff": "diff --git a/packages/nuxt-module/README.md b/packages/nuxt-module/README.md @@ -45,11 +45,11 @@ yarn add @storefront-ui/nuxt # or npm install @storefront-ui/nuxt\nCopyright (c) Vue Storefront\n<!-- Badges -->\n-[npm-version-src]: https://img.shields.io/npm/v/storefront-ui-nuxt/latest.svg\n-[npm-version-href]: https://npmjs.com/package/storefront-ui-nuxt\n+[npm-version-src]: https://img.shields.io/npm/v/@storefront-ui/nuxt/latest.svg\n+[npm-version-href]: https://npmjs.com/package/@storefront-ui/nuxt\n-[npm-downloads-src]: https://img.shields.io/npm/dt/storefront-ui-nuxt.svg\n-[npm-downloads-href]: https://npmjs.com/package/storefront-ui-nuxt\n+[npm-downloads-src]: https://img.shields.io/npm/dt/@storefront-ui/nuxt.svg\n+[npm-downloads-href]: https://npmjs.com/package/@storefront-ui/nuxt\n[github-actions-ci-src]: https://github.com//workflows/ci/badge.svg\n[github-actions-ci-href]: https://github.com//actions?query=workflow%3Aci\n@@ -57,5 +57,5 @@ Copyright (c) Vue Storefront\n[codecov-src]: https://img.shields.io/codecov/c/github/.svg\n[codecov-href]: https://codecov.io/gh/\n-[license-src]: https://img.shields.io/npm/l/storefront-ui-nuxt.svg\n-[license-href]: https://npmjs.com/package/storefront-ui-nuxt\n+[license-src]: https://img.shields.io/npm/l/@storefront-ui/nuxt.svg\n+[license-href]: https://npmjs.com/package/@storefront-ui/nuxt\n",
        "chatgpt_rag": "docs(chakra-ui): update Stack component documentation with additional information and examples for stacking items horizontally, reversing display order, and available props and slots."
    },
    {
        "msg": "docs: :memo: more winget stuff",
        "diff": "diff --git a/sheets/winget.md b/sheets/winget.md @@ -6,10 +6,26 @@ published: true\nslug: winget\n---\n-## Upgrade All Apps\n+## Upgrade all packages\n-The `--all` option allows you to upgrade all apps:\n+The `--all` option allows you to upgrade all packages:\n```bash\nwinget upgrade --all\n```\n+\n+## List installed packages\n+\n+Listing installed packages will also detail which ones can be updated.\n+\n+```bash\n+winget list\n+```\n+\n+## Update specific package\n+\n+To update a specific package add the package `--id`\n+\n+```bash\n+winget upgrade --id VideoLAN.VLC\n+```\n",
        "date": "26.10.2021 07:19:29",
        "repo": "spences10/cheat-sheets",
        "type": "docs",
        "sim_msg": "docs: Added a blog post to the \"Awesome Gatsby\" list\nI added a blog post about deploying a static Gatsby app to Heroku to the list of Gatsby tutorials.",
        "sim_diff": "diff --git a/docs/docs/awesome-gatsby.md b/docs/docs/awesome-gatsby.md @@ -62,6 +62,7 @@ See the [list of official and community plugins](/docs/plugins/)\n- [Upgrade-Guide: Gatsby v2 (German)](https://www.lekoarts.de/blog/upgrade-guide-gatsby-v-2/)\n- [How I made my portfolio website blazing fast with Gatsby](https://medium.freecodecamp.org/how-i-made-my-portfolio-website-blazing-fast-with-gatsby-82ccddc2f671)\n- [JAMstack Basics: How to Create a Gatsby Starter with Contentful and Deploy to Netlify](https://itnext.io/jamstack-basics-how-to-create-a-gatsby-starter-with-contentful-and-deploy-to-netlify-846354cc74bc)\n+- [How to deploy a static Gatsby app to Heroku](https://medium.freecodecamp.org/how-to-deploy-a-static-gatsby-app-to-heroku-3362e3ecda0f)\n## Other resources\n",
        "chatgpt_rag": "sheets: Updated commands and descriptions in the \"Winget\" cheat sheet\nUpdated the commands and descriptions in the \"Winget\" cheat sheet to provide more accurate information on upgrading all packages, listing installed packages, and updating specific packages."
    },
    {
        "msg": "docs: Reposition Code Sponsor\nBy having the sponsor embed code at the bottom, it ends up being more effective to help fund the project.",
        "diff": "diff --git a/README.md b/README.md # nodemon\n-<a href=\"https://app.codesponsor.io/link/wnz2te8CdfKZ8wMjGUpi8EZG/remy/nodemon\" rel=\"nofollow\"><img src=\"https://app.codesponsor.io/embed/wnz2te8CdfKZ8wMjGUpi8EZG/remy/nodemon.svg\" style=\"width: 888px; height: 68px;\" alt=\"Sponsor\" /></a>\n-\nFor use during development of a node.js based application.\nnodemon will watch the files in the directory in which nodemon was started, and if any files change, nodemon will automatically restart your node application.\n@@ -291,3 +289,5 @@ See the [FAQ](https://github.com/remy/nodemon/blob/master/faq.md) and please add\n# License\nMIT [http://rem.mit-license.org](http://rem.mit-license.org)\n+\n+<a href=\"https://app.codesponsor.io/link/wnz2te8CdfKZ8wMjGUpi8EZG/remy/nodemon\" rel=\"nofollow\" target=\"_blank\"><img src=\"https://app.codesponsor.io/embed/wnz2te8CdfKZ8wMjGUpi8EZG/remy/nodemon.svg\" style=\"width: 888px; height: 68px;\" alt=\"Sponsor\" /></a>\n",
        "date": "15.09.2017 05:28:19",
        "repo": "remy/nodemon",
        "type": "docs",
        "sim_msg": "docs: add discord link",
        "sim_diff": "diff --git a/README.md b/README.md <p align=\"center\">\n<a href=\"https://travis-ci.org/QingWei-Li/docsify\"><img alt=\"Travis Status\" src=\"https://img.shields.io/travis/QingWei-Li/docsify/master.svg?style=flat-square\"></a>\n<a href=\"https://www.npmjs.com/package/docsify\"><img alt=\"npm\" src=\"https://img.shields.io/npm/v/docsify.svg?style=flat-square\"></a>\n+ <a href=\"https://discord.gg/Yu2vxQ5\"><img alt=\"Discord\" src=\"https://img.shields.io/discord/405225830701334550.svg?style=flat-square\"></a>\n<a href=\"https://github.com/QingWei-Li/donate\"><img alt=\"donate\" src=\"https://img.shields.io/badge/%24-donate-ff69b4.svg?style=flat-square\"></a>\n</p>\n",
        "chatgpt_rag": "docs: remove codesponsor link from README.md"
    },
    {
        "msg": "docs(layouts): fix typo in GridLayout",
        "diff": "diff --git a/docs/app/Layouts/GridLayout.js b/docs/app/Layouts/GridLayout.js @@ -82,7 +82,7 @@ const GridLayout = () => (\n<Header as='h3'>Text Container</Header>\n<p>\nSometimes you just need to put a single column of centered text on a page. A <code>text container</code> is\n- a special type of container optimized for a single flowing column of text, like this instructions on this page.\n+ a special type of container optimized for a single flowing column of text, like these instructions on this page.\n</p>\n<p>Text containers <b>do not need to use grids</b> and help simplify basic page layouts.</p>\n",
        "date": "01.04.2018 19:39:50",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "docs: Update Text tag docs page",
        "sim_diff": "diff --git a/src/tags/object/Text.js b/src/tags/object/Text.js // stub file to keep docs for Text object tag\n/**\n- * The Text tag shows text that can be labeled. Use to display any type of text on the labeling interface.\n+ * The `Text` tag shows text that can be labeled. Use to display any type of text on the labeling interface.\n* You can use `<Style>.htx-text{ white-space: pre-wrap; }</Style>` to preserve all spaces in the text, otherwise spaces are trimmed when displayed.\n* Every space in the text sample is counted when calculating result offsets, for example for NER labeling tasks.\n*\n- * Use with the following data types: text\n+ * Use with the following data types: text.\n* @example\n* <!--Labeling configuration to label text for NER tasks with a word-level granularity -->\n* <View>\n",
        "chatgpt_rag": "docs: Update GridLayout.js to clarify the purpose of text containers"
    },
    {
        "msg": "docs(Icon): fix selector for input",
        "diff": "diff --git a/docs/app/Components/IconSearch/IconSearch.js b/docs/app/Components/IconSearch/IconSearch.js @@ -57,7 +57,7 @@ export default class IconSearch extends Component {\nstate = { search: '', includeSimilar: true }\ncomponentDidMount() {\n- const input = document.querySelector('#docs-icon-set-input input')\n+ const input = document.querySelector('#docs-icon-set-input')\ninput.focus()\n}\n",
        "date": "01.06.2017 08:34:03",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "fix(Search): reset filters on search/reset (otherwise old buckets are preserved)",
        "sim_diff": "diff --git a/components/Search/index.js b/components/Search/index.js @@ -36,7 +36,8 @@ class Search extends Component {\nthis.props.onSearch(true)\nthis.setState({\ndirty: false,\n- submittedQuery: this.state.searchQuery\n+ submittedQuery: this.state.searchQuery,\n+ filters: []\n})\n}\n@@ -45,7 +46,8 @@ class Search extends Component {\nthis.setState({\ndirty: false,\nsearchQuery: '',\n- submittedQuery: ''\n+ submittedQuery: '',\n+ filters: []\n})\n}\n",
        "chatgpt_rag": "feat(IconSearch): focus on whole input container instead of just input element"
    },
    {
        "msg": "docs: sort components alphabetically",
        "diff": "diff --git a/docs/lib/UI/Content.js b/docs/lib/UI/Content.js @@ -17,7 +17,7 @@ function Content({ items, children, title }) {\n<div className=\"docs-sidebar mb-3\">\n<h1 className=\"h5\">{title}</h1>\n<Nav className=\"flex-column\">\n- {items.map(item => (\n+ {items.sort((a, b) => a.name.localeCompare(b.name)).map(item => (\n<NavItem key={item.to}>\n<NavLink tag={Link} to={item.to} activeClassName=\"active\">\n{item.name}\n",
        "date": "23.04.2019 15:30:40",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "sim_msg": "refactor(navigation): check if anchorLink has child to render the proper element",
        "sim_diff": "diff --git a/packages/doc/src/components/Navigation/Navigation.jsx b/packages/doc/src/components/Navigation/Navigation.jsx @@ -48,14 +48,9 @@ const getHtml = (tree, level = 0) =>\nreturn (\n<ListItem key={url} active={window.location.pathname === url}>\n- {hasChild ? (\n- title\n- ) : (\n- <AnchorLink to={url} level={level}>\n+ <AnchorLink to={url} level={level} as={hasChild && 'span'}>\n{title}\n</AnchorLink>\n- )}\n-\n{hasChild && <List level={level}>{getHtml(childs, level + 1)}</List>}\n</ListItem>\n);\n",
        "chatgpt_rag": "refactor(content): sort items by name before mapping to improve navigation clarity"
    },
    {
        "msg": "docs(typo): Fix misspelling in documentation (Alerts)",
        "diff": "diff --git a/docs/lib/Components/AlertsPage.js b/docs/lib/Components/AlertsPage.js @@ -99,7 +99,7 @@ export default class AlertsPage extends React.Component {\n<SectionTitle>Alerts without fade</SectionTitle>\n<p>\n- Fade can be disbaled using <code>fade=false</code>.\n+ Fade can be disabled using <code>fade=false</code>.\n</p>\n<div className=\"docs-example\">\n<AlertFadelessExample />\n",
        "date": "29.12.2018 13:35:15",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "sim_msg": "fix(alerts): check for undefined alert description on save",
        "sim_diff": "diff --git a/lib/alerts/components/AlertEditor.js b/lib/alerts/components/AlertEditor.js @@ -56,7 +56,7 @@ export default class AlertEditor extends Component {\nif (title.length > ALERT_TITLE_CHAR_LIMIT) {\nreturn window.alert(`Alert title must be ${ALERT_TITLE_CHAR_LIMIT} characters or less`)\n}\n- if (description.length > ALERT_DESCRIPTION_CHAR_LIMIT) {\n+ if (description && description.length > ALERT_DESCRIPTION_CHAR_LIMIT) {\nreturn window.alert(`Alert description must be ${ALERT_DESCRIPTION_CHAR_LIMIT} characters or less`)\n}\nif (!end || !start) {\n",
        "chatgpt_rag": "fix(docs): correct spelling mistake in fade disable message"
    },
    {
        "msg": "docs(index): don't use prod libs in dev",
        "diff": "diff --git a/docs/app/index.ejs b/docs/app/index.ejs <script src=\"//cdn.jsdelivr.net/faker.js/<%= htmlWebpackPlugin.options.versions.faker %>/faker.min.js\"></script>\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/js-beautify/<%= htmlWebpackPlugin.options.versions.jsBeautify %>/beautify-html.min.js\"></script>\n<!-- Use unminified React when not in production so we get errors and warnings -->\n- <script src=\"//cdnjs.cloudflare.com/ajax/libs/prop-types/<%= htmlWebpackPlugin.options.versions.propTypes %>/prop-types.min.js\"></script>\n+ <script src=\"//cdnjs.cloudflare.com/ajax/libs/prop-types/<%= htmlWebpackPlugin.options.versions.propTypes %>/prop-types<%= __PROD__ ? 'min' : '' %>.js\"></script>\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/react/<%= htmlWebpackPlugin.options.versions.react %>/umd/react<%= __PROD__ ? '.production.min' : '.development' %>.js\"></script>\n- <script src=\"https://cdnjs.cloudflare.com/ajax/libs/react-dom/<%= htmlWebpackPlugin.options.versions.reactDOM %>/umd/react-dom.production.min.js\"></script>\n- <script src=\"//cdnjs.cloudflare.com/ajax/libs/react-dom/<%= htmlWebpackPlugin.options.versions.reactDOM %>/umd/react-dom-server.browser.production.min.js\"></script>\n+ <script src=\"https://cdnjs.cloudflare.com/ajax/libs/react-dom/<%= htmlWebpackPlugin.options.versions.reactDOM %>/umd/react-dom<%= __PROD__ ? '.production.min' : '.development' %>.js\"></script>\n+ <script src=\"//cdnjs.cloudflare.com/ajax/libs/react-dom/<%= htmlWebpackPlugin.options.versions.reactDOM %>/umd/react-dom-server.browser<%= __PROD__ ? '.production.min' : '.development' %>.js\"></script>\n<script src=\"//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js\"></script>\n<style>\nhtml, body {\n",
        "date": "18.10.2017 23:01:07",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "fix(servers): use actual buttons to fix FA icon display issue",
        "sim_diff": "diff --git a/views/config/servers.html b/views/config/servers.html <i ng-if=\"item.loading\" class=\"fa fa-fw fa-spin fa-spinner\" title=\"Loading...\"></i>\n</span>\n<span>\n- <i class=\"fa btn btn-secondary btn-sm\" ng-class=\"item.edit ? 'fa-pencil' : 'fa-eye'\" ng-if=\"item.hasView\"\n- ng-click=\"servers.edit(item.item)\" title=\"{{item.edit ? 'Edit' : 'View'}} server\"></i>\n- <i class=\"fa fa-close text-danger btn btn-secondary btn-sm\" ng-if=\"item.edit\" ng-click=\"servers.remove(item.item)\"\n- title=\"Delete server\"></i>\n- <i class=\"fa fa-refresh btn btn-secondary btn-sm\" ng-click=\"servers.refresh(item.item)\"\n- title=\"Refresh server\"></i>\n+ <button type=\"button\" class=\"btn btn-secondary btn-sm\" ng-if=\"item.hasView\"\n+ ng-click=\"servers.edit(item.item)\" title=\"{{item.edit ? 'Edit' : 'View'}} server\">\n+ <i class=\"fa fa-fw\" ng-class=\"item.edit ? 'fa-pencil' : 'fa-eye'\"></i>\n+ </button>\n+ <button type=\"button\" class=\"btn btn-secondary btn-sm\" title=\"Delete server\" ng-if=\"item.edit\"\n+ ng-click=\"servers.remove(item.item)\" >\n+ <i class=\"fa fa-fw fa-close text-danger\"></i>\n+ </button>\n+ <button type=\"button\" class=\"btn btn-secondary btn-sm\" title=\"Refresh server\"\n+ ng-click=\"servers.refresh(item.item)\">\n+ <i class=\"fa fa-fw fa-refresh\"></i>\n+ </button>\n</span>\n</td>\n</tr>\n",
        "chatgpt_rag": "refactor(app): update prop-types and react-dom script sources to use minified versions based on production status"
    },
    {
        "msg": "docs(Icon): add FontAwesome attribution",
        "diff": "diff --git a/docs/app/Components/IconSearch/IconSearch.js b/docs/app/Components/IconSearch/IconSearch.js @@ -144,8 +144,19 @@ export default class IconSearch extends Component {\nrender() {\nconst { includeSimilar } = this.state\nreturn (\n- <Grid columns={1} padded textAlign='center' style={gridStyle}>\n+ <Grid columns={1} padded style={gridStyle}>\n<Grid.Column>\n+ <Header as='h2'>Icon Set</Header>\n+ <p>An icon set contains an arbitrary number of glyphs.</p>\n+\n+ <Message>\n+ Semantic includes a complete port of{' '}\n+ <a href='http://fontawesome.io/whats-new/' rel='noopener noreferrer' target='_blank'>Font Awesome 4.7.0</a>\n+ {' '}designed by{' '}\n+ <a href='http://www.twitter.com/davegandy' rel='noopener noreferrer'>Dave Gandy</a> for its standard icon\n+ set.\n+ </Message>\n+\n<Form>\n<Form.Group inline>\n<Form.Input\n@@ -163,7 +174,7 @@ export default class IconSearch extends Component {\n</Form.Group>\n</Form>\n</Grid.Column>\n- <Grid.Column>\n+ <Grid.Column textAlign='center'>\n{this.renderIcons()}\n</Grid.Column>\n</Grid>\n",
        "date": "10.08.2017 23:28:13",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "refactor(rating/icons): format js with new rules",
        "sim_diff": "diff --git a/components/rating/icons/src/index.js b/components/rating/icons/src/index.js @@ -9,13 +9,22 @@ class RatingIcons extends Component {\ncalculateWidthByRating() {\nconst {maxValue, iconSize, rating, spacingBetween} = this.props\n- return (maxValue * (iconSize + spacingBetween) / maxValue) * rating\n+ return ((maxValue * (iconSize + spacingBetween)) / maxValue) * rating\n}\ngetIcon(Icon, index) {\n- return <div key={index} className='sui-RatingIcons-iconContainer' style={{ minWidth: this.props.iconSize, marginLeft: this.props.spacingBetween }}>\n+ return (\n+ <div\n+ key={index}\n+ className=\"sui-RatingIcons-iconContainer\"\n+ style={{\n+ minWidth: this.props.iconSize,\n+ marginLeft: this.props.spacingBetween\n+ }}\n+ >\n<Icon />\n</div>\n+ )\n}\nbuildRating(maxValue, icon) {\n@@ -28,7 +37,11 @@ class RatingIcons extends Component {\n}\ncomponentDidMount() {\n- const currentRatingFilledWidth = this.calculateWidthByRating(this.props.rating, this.props.maxValue, this.ratingEle)\n+ const currentRatingFilledWidth = this.calculateWidthByRating(\n+ this.props.rating,\n+ this.props.maxValue,\n+ this.ratingEle\n+ )\nif (currentRatingFilledWidth !== this.state.ratingFilledWidth) {\nthis.setState({\nratingFilledWidth: currentRatingFilledWidth\n@@ -40,14 +53,19 @@ class RatingIcons extends Component {\nconst {maxValue, icon, fillColor, emptyColor} = this.props\nconst ratingIcons = this.buildRating(maxValue, icon)\n- return <div className='sui-RatingIcons'>\n- <div className='sui-RatingIcons-empty' style={{ fill: emptyColor }}>\n+ return (\n+ <div className=\"sui-RatingIcons\">\n+ <div className=\"sui-RatingIcons-empty\" style={{fill: emptyColor}}>\n{ratingIcons}\n</div>\n- <div className='sui-RatingIcons-filled' style={{ width: this.state.ratingFilledWidth, fill: fillColor }} >\n+ <div\n+ className=\"sui-RatingIcons-filled\"\n+ style={{width: this.state.ratingFilledWidth, fill: fillColor}}\n+ >\n{ratingIcons}\n</div>\n</div>\n+ )\n}\n}\n",
        "chatgpt_rag": "style(IconSearch): update grid alignment and add header and message for icon set"
    },
    {
        "msg": "docs: update contributing",
        "diff": "diff --git a/.github/CONTRIBUTING.md b/.github/CONTRIBUTING.md @@ -41,20 +41,26 @@ git clone https://github.com/<YOUR_GITHUB_USERNAME>/razzle.git\ncd razzle\ngit checkout -B <my-branch>\nNODE_ENV=development yarn install ---ignore-engines\n+# optionally install add-dependencies\n+sudo npm install add-dependencies -g\n```\nThis will install all `node_modules` in all the packages and all the examples and symlink\ninter-dependencies. Thus when you make local changes in any of the packages you can try them\n-immediately in all the examples.\n+immediately in all the examples. `add-dependencies` can be used to just add packages to `package.json`.\n### Commands\n-- `yarn run clean`: Clean up all `node_modules` and remove all symlinks from packages and examples.\n-- `yarn run bootstrap`: Run `yarn` on all examples and packages. Automatically symlinks inter-dependent modules.\n-- `yarn run test`: Runs all tests\n-- `yarn run test:packages`: Runs tests for packages\n-- `yarn run test:e2e`: Runs end-to-end tests\n-- `yarn run build-docs`: Builds docs/ updates doc TOC\n+- `yarn clean`: Clean up all `node_modules` and remove all symlinks from packages and examples.\n+- `yarn bootstrap`: Run `yarn` on all packages. Automatically symlinks inter-dependent modules.\n+- `yarn test`: Runs all tests\n+- `yarn test:packages`: Runs tests for packages\n+- `yarn test:e2e`: Runs end-to-end tests\n+- `yarn build-docs`: Builds docs/ updates doc TOC\n+- `yarn bootstrap-examples`: Run `yarn` with specific examples as workspaces. Automatically symlinks inter-dependent modules. Run `yarn restrap` in the example to reinstall.\n+- `yarn new-example`: Creates a new example from another example. `yarn new-example basic new-example`.\n+- `yarn publish-all-stable`: Does a a stable release\n+- `yarn publish-all-canary`: Does a `razzle@canary` release.\n### Updating your fork\n@@ -68,7 +74,7 @@ git pull origin master\n## Adding examples\n### Use `examples/basic` as template\n-If you'd like to add an example, I suggest you duplicate the `examples/basic` folder and use that as kind of base template. Before you start adding stuff, go ahead and change the name of the package in the your new example's `package.json`. Then go back to the project root and run `yarn bootstrap`. This will make sure that your new example is using your local version of all the `packages`.\n+If you'd like to add an example, I suggest you duplicate the `examples/basic` folder `yarn new-example basic your-example`and use that as kind of base template. Before you start adding stuff, go ahead and change the name of the package in the your new example's `package.json`. Then go back to the project root and run `yarn bootstrap-examples your-example`. This will make sure that your new example is using your local version of all the `packages`.\n### Naming examples\n",
        "date": "28.01.2021 00:15:38",
        "repo": "jaredpalmer/razzle",
        "type": "docs",
        "sim_msg": "docs: remove redundant word to make a statement clearer",
        "sim_diff": "diff --git a/docs/contributing/setting-up-your-local-dev-environment.md b/docs/contributing/setting-up-your-local-dev-environment.md @@ -27,7 +27,7 @@ Yarn is a package manager for your code, similar to [NPM](https://www.npmjs.com/\n- Set up repo and install dependencies: `yarn run bootstrap`\n- Make sure tests are passing for you: `yarn test`\n- Create a topic branch: `git checkout -b topics/new-feature-name`\n-- See [docs setup instructions](/contributing/docs-contributions#docs-site-setup-instructions) below for docs-only changes.\n+- See [docs setup instructions](/contributing/docs-contributions#docs-site-setup-instructions) for docs-only changes.\n- Run `yarn run watch` from the root of the repo to watch for changes to packages' source code and compile these changes on-the-fly as you work.\n- Note that the watch command can be resource intensive. To limit it to the packages you're working on, add a scope flag, like `yarn run watch --scope={gatsby,gatsby-cli}`.\n- To watch just one package, run `yarn run watch --scope=gatsby`.\n",
        "chatgpt_rag": "docs: update contributing guidelines with new yarn commands and instructions for adding examples"
    },
    {
        "msg": "docs(Modal): fix nested modal closing\nCloses",
        "diff": "diff --git a/docs/lib/examples/ModalNested.js b/docs/lib/examples/ModalNested.js @@ -9,10 +9,12 @@ class ModalExample extends React.Component {\nthis.state = {\nmodal: false,\nnestedModal: false,\n+ closeAll: false\n};\nthis.toggle = this.toggle.bind(this);\nthis.toggleNested = this.toggleNested.bind(this);\n+ this.toggleAll = this.toggleAll.bind(this);\n}\ntoggle() {\n@@ -23,7 +25,15 @@ class ModalExample extends React.Component {\ntoggleNested() {\nthis.setState({\n- nestedModal: !this.state.nestedModal\n+ nestedModal: !this.state.nestedModal,\n+ closeAll: false\n+ });\n+ }\n+\n+ toggleAll() {\n+ this.setState({\n+ nestedModal: !this.state.nestedModal,\n+ closeAll: true\n});\n}\n@@ -37,12 +47,12 @@ class ModalExample extends React.Component {\nLorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n<br />\n<Button color=\"success\" onClick={this.toggleNested}>Show Nested Model</Button>\n- <Modal isOpen={this.state.nestedModal} toggle={this.toggleNested}>\n+ <Modal isOpen={this.state.nestedModal} toggle={this.toggleNested} onClosed={this.state.closeAll && this.toggle}>\n<ModalHeader>Nested Modal title</ModalHeader>\n<ModalBody>Stuff and things</ModalBody>\n<ModalFooter>\n<Button color=\"primary\" onClick={this.toggleNested}>Done</Button>{' '}\n- <Button color=\"secondary\" onClick={this.toggle}>All Done</Button>\n+ <Button color=\"secondary\" onClick={this.toggleAll}>All Done</Button>\n</ModalFooter>\n</Modal>\n</ModalBody>\n",
        "date": "15.11.2017 05:59:56",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "sim_msg": "feat: change modal close icon from font awesome to paragon close icon",
        "sim_diff": "diff --git a/src/Modal/index.jsx b/src/Modal/index.jsx @@ -10,6 +10,7 @@ import { Button } from '..';\nimport Icon from '../Icon';\nimport newId from '../utils/newId';\nimport Variant from '../utils/constants';\n+import { Close } from '../../icons';\nclass Modal extends React.Component {\nconstructor(props) {\n@@ -220,7 +221,7 @@ class Modal extends React.Component {\nclassName=\"p-1\"\nonClick={this.close}\n>\n- <Icon className=\"fa fa-times\" screenReaderText={closeText} />\n+ <Icon src={Close} screenReaderText={closeText} />\n</Button.Deprecated>\n)}\n</div>\n",
        "chatgpt_rag": "feat: add functionality to close all modals when \"All Done\" button is clicked in nested modal"
    },
    {
        "msg": "feat(404-page): update NotFound container",
        "diff": "diff --git a/src/common/containers/NotFound/index.jsx b/src/common/containers/NotFound/index.jsx @@ -8,10 +8,10 @@ const NotFound = () => {\nreturn (\n<NotFoundLayout>\n<Header as=\"h2\" icon textAlign=\"center\">\n- <Icon name=\"users\" circular />\n- <Header.Content>404</Header.Content>\n+ <Icon name=\"warning sign\" circular />\n+ <Header.Content>Thank you Mario!</Header.Content>\n<Header.Subheader>\n- <Link to=\"/\">Dashboard lives here</Link>\n+ <Link to=\"/\">But our princess is in another castle.</Link>\n</Header.Subheader>\n</Header>\n</NotFoundLayout>\n",
        "date": "19.02.2018 18:50:28",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "fix(auth): put auth settings to the end",
        "sim_diff": "diff --git a/components/Account/index.js b/components/Account/index.js @@ -73,14 +73,14 @@ const Account = ({ loading, error, me, t, query, hasMemberships, acceptedStatue,\n{t('account/newsletterSubscriptions/title')}\n</H2>\n<NewsletterSubscriptions />\n- <H2 style={{marginTop: 80}} id='anmeldung'>\n- {t('account/authSettings/title')}\n- </H2>\n- <AuthSettings />\n<H2 style={{marginTop: 80}} id='benachrichtigungen'>\n{t('account/notificationOptions/title')}\n</H2>\n<NotificationOptions />\n+ <H2 style={{marginTop: 80}} id='anmeldung'>\n+ {t('account/authSettings/title')}\n+ </H2>\n+ <AuthSettings />\n</Content>\n</MainContainer>\n</Fragment>\n",
        "chatgpt_rag": "style(ui): update NotFound page content and styling"
    },
    {
        "msg": "feat(editbale): add editable props",
        "diff": "diff --git a/packages/chakra-ui-core/src/CEditable/CEditable.js b/packages/chakra-ui-core/src/CEditable/CEditable.js +/**\n+ * Hey! Welcome to @chakra-ui/vue Editable\n+ *\n+ * EditableText is used for inline renaming of some text.\n+ *\n+ * It appears as normal UI text but transforms into a text\n+ * input field when the user clicks or focuses on it.\n+ *\n+ * The text input inherits all font styling from its parent,\n+ * to make the edit and read view transition seamless.\n+ *\n+ * @see Docs https://vue.chakra-ui.com/editable\n+ * @see Source https://github.com/chakra-ui/chakra-ui-vue/blob/master/packages/chakra-ui-core/src/CEditable/CEditable.js\n+ */\n+\nimport styleProps, { baseProps } from '../config/props'\nimport { isDef, getElement, useId, forwardProps } from '../utils'\n@@ -15,6 +30,14 @@ const sharedEditableProps = {\nmx: '-3px'\n}\n+/**\n+ * CEditable component\n+ *\n+ * The wrapper for `CEditable` components. It provides context and state for the Editable components.\n+ *\n+ * @extends CBox\n+ * @see Docs https://vue.chakra-ui.com/editable\n+ */\nconst CEditable = {\nname: 'CEditable',\nprops: {\n@@ -165,7 +188,10 @@ const CEditable = {\n},\nrender (h) {\nreturn h(CBox, {\n- props: forwardProps(this.$props)\n+ props: forwardProps(this.$props),\n+ attrs: {\n+ 'data-chakra-component': 'CEditable'\n+ }\n}, [\nthis.$scopedSlots.default({\nisEditing: this.isEditing,\n@@ -177,6 +203,14 @@ const CEditable = {\n}\n}\n+/**\n+ * CEditablePreview component\n+ *\n+ * The read-only view of the component.\n+ *\n+ * @extends CPseudoBox\n+ * @see Docs https://vue.chakra-ui.com/editable\n+ */\nconst CEditablePreview = {\nname: 'CEditablePreview',\ninject: ['$EditableContext'],\n@@ -218,7 +252,8 @@ const CEditablePreview = {\n},\nattrs: {\n'aria-disabled': isDisabled,\n- tabIndex: this.tabIndex\n+ tabIndex: this.tabIndex,\n+ 'data-chakra-component': 'CEditablePreview'\n},\nnativeOn: {\nfocus: onRequestEdit\n@@ -227,6 +262,14 @@ const CEditablePreview = {\n}\n}\n+/**\n+ * CEditableInput component\n+ *\n+ * The edit view of the component. It shows when you click or focus on the text.\n+ *\n+ * @extends CPseudoBox\n+ * @see Docs https://vue.chakra-ui.com/editable\n+ */\nconst CEditableInput = {\nname: 'CEditableInput',\ninject: ['$EditableContext'],\n@@ -285,7 +328,8 @@ const CEditableInput = {\ndisabled: isDisabled,\n'aria-disabled': isDisabled,\nvalue,\n- placeholder\n+ placeholder,\n+ 'data-chakra-component': 'CEditableInput'\n}\n}, this.$slots.default)\n}\n",
        "date": "17.04.2020 01:58:50",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "feat",
        "sim_msg": "refactor(viewer): class name in kebab-case",
        "sim_diff": "diff --git a/packages/viewer/src/index.ts b/packages/viewer/src/index.ts -import { defineComponent, provide, getCurrentInstance, h, createCommentVNode } from 'vue'\n+import { defineComponent, provide, getCurrentInstance, h, createCommentVNode, ExtractPropTypes } from 'vue'\nimport useViewer from './useViewer'\nimport defaultProps from './defaultProps'\nimport { VcComponentInternalInstance } from '@vue-cesium/utils/types'\n@@ -7,12 +7,13 @@ import { vcKey } from '@vue-cesium/utils/config'\nimport { viewerEvents, emits } from './events'\nimport { VcSkeleton } from '@vue-cesium/ui'\nimport { hSlot } from '@vue-cesium/utils/private/render'\n+import { kebabCase } from '@vue-cesium/utils/util'\nexport default defineComponent({\nname: 'VcViewer',\nprops: defaultProps,\nemits: emits,\n- setup(props, ctx) {\n+ setup(props: ExtractPropTypes<typeof defaultProps>, ctx) {\nconst instance = getCurrentInstance() as VcComponentInternalInstance\ninstance.cesiumEvents = ['selectedEntityChanged', 'trackedEntityChanged']\ninstance.cesiumMembersEvents = viewerEvents\n@@ -46,7 +47,7 @@ export default defineComponent({\ncreateCommentVNode('vc-viewer'),\nh('div', {\nref: viewerStates.viewerRef,\n- class: 'VcViewer',\n+ class: kebabCase(instance.proxy.$options.name),\nid: 'cesiumContainer',\nstyle: { width: '100%', height: '100%' }\n}, hSlot(ctx.slots.default))\n",
        "chatgpt_rag": "style(CEditable): add data-chakra-component attribute to CEditable and its components"
    },
    {
        "msg": "feat(menu): option event handling",
        "diff": "diff --git a/packages/kiwi-core/src/Menu/MenuOption.js b/packages/kiwi-core/src/Menu/MenuOption.js @@ -62,7 +62,7 @@ const MenuItemOption = {\nif (this.isDisabled) return\nif (['Enter', ' '].includes(event.key)) {\nevent.preventDefault()\n- this.handleSelect()\n+ this.handleSelect(event)\n}\nthis.$emit('keydown', event)\n@@ -239,6 +239,12 @@ const MenuOptionGroup = {\nnativeOn: {\nclick: (event) => {\nthis.handleChange(cloned.componentOptions.propsData['value'])\n+ },\n+ keydown: (event) => {\n+ if (['Enter', ' '].includes(event.key)) {\n+ event.preventDefault()\n+ this.handleChange(cloned.componentOptions.propsData['value'])\n+ }\n}\n}\n}, cloned.componentOptions.children)\n@@ -257,6 +263,12 @@ const MenuOptionGroup = {\nnativeOn: {\nclick: (event) => {\nthis.handleChange(cloned.componentOptions.propsData['value'])\n+ },\n+ keydown: (event) => {\n+ if (['Enter', ' '].includes(event.key)) {\n+ event.preventDefault()\n+ this.handleChange(cloned.componentOptions.propsData['value'])\n+ }\n}\n}\n}, cloned.componentOptions.children)\n",
        "date": "30.01.2020 20:14:04",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "feat",
        "sim_msg": "refactor: add Dropdown multiselect mode",
        "sim_diff": "diff --git a/renderer/components/UI/Dropdown.js b/renderer/components/UI/Dropdown.js @@ -103,6 +103,7 @@ export const MenuItem = ({\nhasParent,\nhasChildren,\nvalueField,\n+ isMultiselect,\n...rest\n}) => {\nreturn (\n@@ -114,7 +115,11 @@ export const MenuItem = ({\n</Flex>\n)}\n{!hasParent && (\n- <Text color=\"superGreen\" textAlign=\"center\" width=\"20px\">\n+ <Text\n+ color={isMultiselect ? 'primaryAccent' : 'superGreen'}\n+ textAlign=\"center\"\n+ width=\"20px\"\n+ >\n{isActive && <Check height=\"0.95em\" />}\n</Text>\n)}\n@@ -132,6 +137,7 @@ MenuItem.propTypes = {\nhasChildren: PropTypes.bool,\nhasParent: PropTypes.bool,\nisActive: PropTypes.bool,\n+ isMultiselect: PropTypes.bool,\nitem: PropTypes.object.isRequired,\nonClick: PropTypes.func.isRequired,\nvalueField: PropTypes.string,\n@@ -174,6 +180,7 @@ const Dropdown = ({\nonChange,\nmessageMapper,\nvalueField,\n+ isMultiselect,\nbuttonComponent: ButtonComponent,\n...rest\n}) => {\n@@ -204,12 +211,16 @@ const Dropdown = ({\nconst selectedItem = itemsArray.find(c => c.key === activeKey)\nconst handleClick = key => {\n- if (key !== activeKey) {\n+ if (key !== activeKey || isMultiselect) {\nif (onChange) {\nonChange(key)\n}\n}\n- setIsOpen(false)\n+ !isMultiselect && setIsOpen(false)\n+ }\n+\n+ const isActiveItem = key => {\n+ return activeKey === key || (isMultiselect && activeKey.has(key))\n}\nreturn (\n@@ -232,7 +243,8 @@ const Dropdown = ({\nreturn (\n<MenuItem\nkey={item.key}\n- isActive={activeKey === item.key}\n+ isActive={isActiveItem(item.key)}\n+ isMultiselect={isMultiselect}\nitem={item}\nonClick={() => handleClick(item.key)}\nvalueField={valueField}\n@@ -253,9 +265,10 @@ Dropdown.defaultProps = {\n}\nDropdown.propTypes = {\n- activeKey: PropTypes.string.isRequired,\n+ activeKey: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\nbuttonComponent: PropTypes.elementType,\nbuttonOpacity: PropTypes.number,\n+ isMultiselect: PropTypes.bool,\nitems: PropTypes.array.isRequired,\njustify: PropTypes.string,\nmessageMapper: PropTypes.func,\n",
        "chatgpt_rag": "refactor: add keydown event handling for MenuOptionGroup items"
    },
    {
        "msg": "feat(containers): add data fetching in Links",
        "diff": "diff --git a/src/common/containers/Links/index.jsx b/src/common/containers/Links/index.jsx @@ -20,15 +20,19 @@ type Props = {\nclass Links extends Component {\nprops: Props\n- componentDidMount () {\n- const {isLinksLoaded} = this.props\n+ async asyncBootstrap () {\n+ const {isLinksLoaded, getLinks} = this.props\nif (!isLinksLoaded) {\n- this.getLinks()\n+ await getLinks()\n}\n+ return true\n}\n- getLinks () {\n- this.props.getLinks()\n+ componentDidMount () {\n+ const {isLinksLoaded, getLinks} = this.props\n+ if (!isLinksLoaded) {\n+ getLinks()\n+ }\n}\nrender () {\n@@ -57,8 +61,8 @@ function mapStateToProps (state: GlobalState) {\n}\nconst mapDispatchToProps = dispatch => ({\n- getLinks () {\n- dispatch(GET_LINKS())\n+ async getLinks () {\n+ return dispatch(GET_LINKS())\n}\n})\n",
        "date": "03.12.2017 07:11:52",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "feat(Link): forwardRef",
        "sim_diff": "diff --git a/components/core/Link.js b/components/core/Link.js @@ -2,7 +2,7 @@ import * as React from \"react\";\nimport * as Strings from \"~/common/strings\";\nimport * as Logging from \"~/common/logging\";\n-export class Link extends React.Component {\n+class LinkPrimitive extends React.Component {\nstate = {\nhref: this.props.href\n? this.props.href\n@@ -63,6 +63,7 @@ export class Link extends React.Component {\n};\nrender() {\n+ const { style, innerRef, css, target, href, title, children, ...props } = this.props;\nreturn (\n<span onClick={this._handleClick}>\n<a\n@@ -70,17 +71,20 @@ export class Link extends React.Component {\ntextDecoration: \"none\",\ncolor: \"inherit\",\ncursor: \"pointer\",\n- ...this.props.style,\n+ ...style,\n}}\n- css={this.props.css}\n- target={this.props.target}\n- href={this.state.href}\n- aria-label={this.props[\"aria-label\"]}\n- title={this.props.title}\n+ ref={innerRef}\n+ css={css}\n+ target={target}\n+ href={href}\n+ title={title}\n+ {...props}\n>\n- {this.props.children}\n+ {children}\n</a>\n</span>\n);\n}\n}\n+\n+export const Link = React.forwardRef((props, ref) => <LinkPrimitive {...props} innerRef={ref} />);\n",
        "chatgpt_rag": "refactor(Links): convert getLinks to async function and update lifecycle methods"
    },
    {
        "msg": "feat(razzle): allow toggling usage of null loader for node target",
        "diff": "diff --git a/packages/razzle/config/createConfigAsync.js b/packages/razzle/config/createConfigAsync.js @@ -322,6 +322,8 @@ module.exports = (\n],\n};\n+ webpackOptions.nullNodeCss = false;\n+\nfor (const [plugin, pluginOptions] of plugins) {\n// Check if .modifyWebpackConfig is a function.\n// If it is, call it on the configs we created.\n@@ -532,7 +534,9 @@ module.exports = (\n? // Style-loader does not work in Node.js without some crazy\n// magic. Luckily we just need css-loader.\n[\n- {\n+ webpackOptions.nullNodeCss ? {\n+ loader: require.resolve('null-loader')\n+ } : {\nloader: require.resolve('css-loader'),\noptions: {\nimportLoaders: 1,\n",
        "date": "13.02.2021 00:22:55",
        "repo": "jaredpalmer/razzle",
        "type": "feat",
        "sim_msg": "docs: chainWebpack & merge example of modifying loader options",
        "sim_diff": "diff --git a/docs/webpack.md b/docs/webpack.md @@ -59,6 +59,25 @@ module.exports = {\n}\n```\n+#### Modifying Loader Options\n+\n+``` js\n+// vue.config.js\n+module.exports = {\n+ chainWebpack: config => {\n+ config.module\n+ .rule('scss')\n+ .use('sass-loader')\n+ .tap(options =>\n+ merge(options, {\n+ includePaths: [path.resolve(__dirname, 'node_modules')],\n+ })\n+ )\n+ }\n+}\n+```\n+\n+\n#### Modifying Plugin Options\n``` js\n",
        "chatgpt_rag": "packages: set nullNodeCss option in webpack config to false and use css-loader instead of null-loader"
    },
    {
        "msg": "feat(Sidebar): use SidebarLogo based on Logo component",
        "diff": "diff --git a/src/common/components/parts/Sidebar/index.jsx b/src/common/components/parts/Sidebar/index.jsx import React, {Component} from 'react'\nimport {Menu, Icon} from 'semantic-ui-react'\nimport {NavLink} from 'react-router-dom'\n+import Logo from 'components/elements/Logo'\nimport {\nStyledSidebar,\nSidebarLogo,\n@@ -10,9 +11,7 @@ import {\nSidebarLogoutItem\n} from './style'\nimport {Spacer} from 'styles/base'\n-\nimport type {RouteItem} from 'types'\n-// require('./index.scss')\ntype Props = {\nopen: boolean,\n@@ -71,12 +70,11 @@ export default class SidebarComponent extends Component {\n// ? require('images/logo.png')\n// : require('images/logo.png').preSrc\n//\n- const logoImg = require('images/logo.png')\nreturn (\n<StyledSidebar {...sidebarProps}>\n<SidebarLogoContainer href=\"https://github.com/Metnew/react-semantic.ui-starter\">\n- <SidebarLogo src={logoImg} alt=\"logo\" shape=\"circular\" centered />\n+ <SidebarLogo alt=\"logo\" shape=\"circular\" centered />\n</SidebarLogoContainer>\n{routes}\n<Spacer />\n",
        "date": "10.09.2017 18:49:29",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "refactor(sidebar): surround version info table in tbody to silence warning",
        "sim_diff": "diff --git a/lib/common/components/Sidebar.js b/lib/common/components/Sidebar.js @@ -5,13 +5,8 @@ import React, {Component, type Node} from 'react'\nimport {Navbar, Checkbox} from 'react-bootstrap'\nimport {Link} from 'react-router'\n-import {\n- fetchAppInfo,\n- removeRetiredJob,\n- startJobMonitor,\n- setJobMonitorVisible\n-} from '../../manager/actions/status'\n-import {setSidebarExpanded, setTutorialHidden} from '../../manager/actions/ui'\n+import * as statusActions from '../../manager/actions/status'\n+import * as uiActions from '../../manager/actions/ui'\nimport {logout, revokeToken} from '../../manager/actions/user'\nimport JobMonitor from './JobMonitor'\nimport SidebarNavItem from './SidebarNavItem'\n@@ -36,16 +31,16 @@ type Props = {\nappInfo: AppInfo,\nchildren: Node,\nexpanded: boolean,\n- fetchAppInfo: typeof fetchAppInfo,\n+ fetchAppInfo: typeof statusActions.fetchAppInfo,\nhideTutorial: boolean,\njobMonitor: JobStatusState,\nlogout: typeof logout,\n- removeRetiredJob: typeof removeRetiredJob,\n+ removeRetiredJob: typeof statusActions.removeRetiredJob,\nrevokeToken: typeof revokeToken,\n- setJobMonitorVisible: typeof setJobMonitorVisible,\n- setSidebarExpanded: typeof setSidebarExpanded,\n- setTutorialHidden: typeof setTutorialHidden,\n- startJobMonitor: typeof startJobMonitor,\n+ setJobMonitorVisible: typeof statusActions.setJobMonitorVisible,\n+ setSidebarExpanded: typeof uiActions.setSidebarExpanded,\n+ setTutorialHidden: typeof uiActions.setTutorialHidden,\n+ startJobMonitor: typeof statusActions.startJobMonitor,\nuser: ManagerUserState\n}\n@@ -101,6 +96,7 @@ export default class Sidebar extends Component<Props, State> {\nhideTutorial,\njobMonitor,\nappInfo,\n+ removeRetiredJob,\nuser\n} = this.props\nconst {visiblePopover} = this.state\n@@ -190,6 +186,7 @@ export default class Sidebar extends Component<Props, State> {\n<div className='app-info'>\n<h5>About this app</h5>\n<table>\n+ <tbody>\n<tr>\n<td>UI Version:</td>\n<td>\n@@ -221,6 +218,7 @@ export default class Sidebar extends Component<Props, State> {\n}\n</td>\n</tr>\n+ </tbody>\n</table>\n</div>\n</div>\n",
        "chatgpt_rag": "style(sidebar): remove unnecessary import and update logo rendering logic in Sidebar component"
    },
    {
        "msg": "feat: query blocks with a height greater than 335",
        "diff": "diff --git a/frontend/leaderboard/src/Postgres.re b/frontend/leaderboard/src/Postgres.re @@ -15,7 +15,9 @@ LEFT JOIN user_commands AS uc ON uc.id = buc.user_command_id\nLEFT JOIN public_keys AS pk2 ON ic.receiver_id = pk2.id\nLEFT JOIN public_keys AS pk3 ON uc.fee_payer_id = pk3.id\nLEFT JOIN public_keys AS pk4 ON uc.source_id = pk4.id\n-LEFT JOIN public_keys AS pk5 ON uc.receiver_id = pk5.id\";\n+LEFT JOIN public_keys AS pk5 ON uc.receiver_id = pk5.id\n+\n+WHERE height >= 335\";\nlet createPool = pgConn => {\nmakePool({connectionString: pgConn, connectionTimeoutMillis: 5000});\n",
        "date": "18.11.2020 14:35:41",
        "repo": "minaprotocol/mina",
        "type": "feat",
        "sim_msg": "fix(graphql): Add request deserialize tests for entire inputs.",
        "sim_diff": "diff --git a/packages/graphql/src/controllers/requestController.test.js b/packages/graphql/src/controllers/requestController.test.js @@ -253,11 +253,16 @@ test('deserialize inputs', async () => {\nrequestId: 'requestId',\nconnectionId: 'testConnection',\nproperties: {\n- args: { _args: 'date' },\n- input: { _input: 'date' },\n- global: { _global: 'date' },\n- state: { _state: 'date' },\n- urlQuery: { _url_query: 'date' },\n+ args: { _args: true },\n+ input: { _input: true },\n+ global: { _global: true },\n+ state: { _state: true },\n+ urlQuery: { _url_query: true },\n+ argsDate: { _args: 'date' },\n+ inputDate: { _input: 'date' },\n+ globalDate: { _global: 'date' },\n+ stateDate: { _state: 'date' },\n+ urlQueryDate: { _url_query: 'date' },\n},\n};\n}\n@@ -293,11 +298,16 @@ test('deserialize inputs', async () => {\nconnectionProperty: 'connectionProperty',\n},\nrequest: {\n- args: new Date(0),\n- global: new Date(0),\n- input: new Date(0),\n- state: new Date(0),\n- urlQuery: new Date(0),\n+ args: { date: new Date(0) },\n+ input: { date: new Date(0) },\n+ global: { date: new Date(0) },\n+ state: { date: new Date(0) },\n+ urlQuery: { date: new Date(0) },\n+ argsDate: new Date(0),\n+ inputDate: new Date(0),\n+ globalDate: new Date(0),\n+ stateDate: new Date(0),\n+ urlQueryDate: new Date(0),\n},\n},\n],\n",
        "chatgpt_rag": "feat(frontend): Update Postgres query to filter results by height >= 335."
    },
    {
        "msg": "feat(Form): add submit to component\nThis makes it easier to use submit as if the component was a raw form (via 'standard' )",
        "diff": "diff --git a/src/Form.js b/src/Form.js -import React from 'react';\n+import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules } from './utils';\n@@ -15,8 +15,27 @@ const propTypes = {\nconst defaultProps = {\ntag: 'form',\n};\n+class Form extends Component {\n+ constructor(props) {\n+ super(props);\n+ this.getRef = this.getRef.bind(this);\n+ this.submit = this.submit.bind(this);\n+ }\n-const Form = (props) => {\n+ getRef(ref) {\n+ if (this.props.innerRef) {\n+ this.props.innerRef(ref);\n+ }\n+ this.ref = ref;\n+ }\n+\n+ submit() {\n+ if (this.ref) {\n+ this.ref.submit();\n+ }\n+ }\n+\n+ render() {\nconst {\nclassName,\ncssModule,\n@@ -24,7 +43,7 @@ const Form = (props) => {\ntag: Tag,\ninnerRef,\n...attributes\n- } = props;\n+ } = this.props;\nconst classes = mapToCssModules(classNames(\nclassName,\n@@ -34,7 +53,8 @@ const Form = (props) => {\nreturn (\n<Tag {...attributes} ref={innerRef} className={classes} />\n);\n-};\n+ }\n+}\nForm.propTypes = propTypes;\nForm.defaultProps = defaultProps;\n",
        "date": "07.05.2018 16:25:02",
        "repo": "reactstrap/reactstrap",
        "type": "feat",
        "sim_msg": "refactor: removes uneeded async await from submitControlledForm fn",
        "sim_diff": "diff --git a/src/__experimental__/components/form/form.component.js b/src/__experimental__/components/form/form.component.js @@ -239,11 +239,11 @@ class FormWithoutValidations extends React.Component {\nthis.submitControlledForm();\n}\n- async submitControlledForm() {\n+ submitControlledForm() {\nconst { csrFValue } = this.csrfValues;\nService.configure({ csrfToken: csrFValue });\nthis._service.setURL(this.props.formAction);\n- await this._service.post(\n+ this._service.post(\nJSON.stringify(this.state.formInputs),\n{ onSuccess: this.clearFormData }\n);\n",
        "chatgpt_rag": "refactor: convert functional Form component to class component with constructor and methods for getRef and submit"
    },
    {
        "msg": "feat(reducers/links): add count property",
        "diff": "diff --git a/src/common/reducers/links/index.js b/src/common/reducers/links/index.js @@ -23,7 +23,8 @@ export const initialState: State = {\nentities: [],\nerrors: {},\nisLoading: false,\n- isLoaded: false\n+ isLoaded: false,\n+ count: 0\n}\nexport function links (state: State = initialState, action: Action): State {\n@@ -38,11 +39,13 @@ export function links (state: State = initialState, action: Action): State {\n}\ncase GET_LINKS_SUCCESS: {\nconst entities = action.payload\n+ const count = entities.length\nreturn {\n...state,\nisLoaded: true,\nisLoading: false,\n- entities\n+ entities,\n+ count\n}\n}\ncase GET_LINKS_FAIL: {\n@@ -51,7 +54,9 @@ export function links (state: State = initialState, action: Action): State {\n...state,\nerrors,\nisLoaded: true,\n- isLoading: false\n+ isLoading: false,\n+ entities: [],\n+ count: 0\n}\n}\ndefault:\n",
        "date": "03.11.2017 16:32:11",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "fix: ignore reblogged props from GET_CONTENT",
        "sim_diff": "diff --git a/src/client/post/postsReducer.js b/src/client/post/postsReducer.js @@ -82,13 +82,19 @@ const posts = (state = initialState, action) => {\n},\n};\ncase postsActions.GET_CONTENT.SUCCESS: {\n+ const {\n+ reblogged_by: rebloggedBy,\n+ first_reblogged_on: firstRebloggedOn,\n+ ...newPost\n+ } = action.payload;\n+\nconst baseState = {\n...state,\nlist: {\n...state.list,\n[action.payload.id]: {\n- ...state[action.payload.id],\n- ...action.payload,\n+ ...state.list[action.payload.id],\n+ ...newPost,\n},\n},\npostsStates: {\n",
        "chatgpt_rag": "feat: add count property to links reducer state\n\nExplanation: In this code diff, a new property \"count\" is added to the links reducer state to keep track of the number of entities in the state. This change enhances the functionality of the reducer by providing additional information about the state."
    },
    {
        "msg": "feat(auth): add idToken to user's payload\nfeat",
        "diff": "diff --git a/lib/plugins/ssrAuth.js b/lib/plugins/ssrAuth.js @@ -55,7 +55,8 @@ export default async ({ req, res }) => {\n...res.locals,\nuser: {\n...authUser,\n- allClaims: decodedToken\n+ allClaims: decodedToken,\n+ idToken,\n}\n}\n}\n",
        "date": "11.05.2020 20:52:09",
        "repo": "nuxt-community/firebase-module",
        "type": "feat",
        "sim_msg": "fix(app): SSR mode with publicPath not working correctly",
        "sim_diff": "diff --git a/app/templates/entry/server-entry.js b/app/templates/entry/server-entry.js @@ -116,7 +116,7 @@ export default ssrContext => {\napp.use(router)\n<% if (store) { %>app.use(store, storeKey)<% } %>\n- const url = ssrContext.req.url<% if (build.publicPath !== '/') { %>.replace(publicPath, '')<% } %>\n+ const url = ssrContext.req.url<% if (build.publicPath !== '/') { %>.replace(publicPath, '/')<% } %>\nconst { fullPath } = router.resolve(url)\nif (fullPath !== url) {\n",
        "chatgpt_rag": "feat(lib): Add idToken to user object in SSR authentication"
    },
    {
        "msg": "feat(routing): make all containers lazy, simplify code",
        "diff": "diff --git a/src/common/routing/index.jsx b/src/common/routing/index.jsx */\nimport React from 'react'\nimport {Route} from 'react-router-dom'\n-import Dashboard from 'containers/Dashboard'\n-import Login from 'containers/Login'\n-import Users from 'containers/Users'\n-\nimport RouteAuth from 'components/addons/RouteAuth'\nimport {createBrowserHistory, createMemoryHistory} from 'history'\nimport type {RouteItem} from 'types'\n+const getHistory = () => {\n+ if (process.env.BROWSER) {\n+ return createMemoryHistory()\n+ }\n+ return createBrowserHistory()\n+}\n+\nexport const history = getHistory()\n-const loadLazyComponent = (url: string) => {\n- return async (cb: Function) => {\n+const loadLazyComponent = (url: string) => async () => {\n// NOTE: there isn't any duplication here\n// Read Webpack docs about code-splitting for more info.\nif (process.env.BROWSER) {\n@@ -24,26 +26,27 @@ const loadLazyComponent = (url: string) => {\nconst loadComponent = await import(/* webpackMode: \"eager\", webpackChunkName: \"lazy-containers\" */ `containers/${url}/index.jsx`)\nreturn loadComponent\n}\n-}\nexport const routes: Array<RouteItem> = [\n{\npath: '/',\nexact: true,\n+ lazy: true,\nicon: 'newspaper',\nname: 'Dashboard',\nsidebarVisible: true,\ntag: RouteAuth,\n- component: Dashboard\n+ component: loadLazyComponent('Dashboard')\n},\n{\npath: '/users',\nname: 'Users',\nexact: true,\n+ lazy: true,\nicon: 'users',\nsidebarVisible: true,\ntag: RouteAuth,\n- component: Users\n+ component: loadLazyComponent('Users')\n},\n{\nexternal: true,\n@@ -55,8 +58,9 @@ export const routes: Array<RouteItem> = [\n{\npath: '/auth',\nname: 'Auth',\n+ lazy: true,\ntag: Route,\n- component: Login\n+ component: loadLazyComponent('Login')\n},\n{\npath: '/users/:id',\n@@ -67,11 +71,3 @@ export const routes: Array<RouteItem> = [\ncomponent: loadLazyComponent('UserItem')\n}\n]\n-\n-function getHistory () {\n- const basename = ''\n- if (process.env.BROWSER !== true) {\n- return createMemoryHistory()\n- }\n- return createBrowserHistory({basename})\n-}\n",
        "date": "10.09.2017 14:34:54",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "refactor(flow): add flow type to wrapComponentInAuthStrategy",
        "sim_diff": "diff --git a/lib/common/containers/App.js b/lib/common/containers/App.js import bugsnag from 'bugsnag-js/dist/bugsnag.min'\nimport createPlugin from 'bugsnag-react'\nimport omit from 'lodash/omit'\n-import React, { Component } from 'react'\n+import * as React from 'react'\nimport {connect} from 'react-redux'\nimport { Router, Route, browserHistory } from 'react-router'\nimport { toast } from 'react-toastify'\n@@ -36,11 +36,11 @@ type AuthWrapperProps = {\n}\nfunction wrapComponentInAuthStrategy (\n- ComponentToWrap,\n- requireAuth,\n- requireAdmin\n-) {\n- class AuthStrategyWrapper extends Component<AuthWrapperProps> {\n+ ComponentToWrap: React.Component<*>,\n+ requireAuth?: boolean,\n+ requireAdmin?: boolean\n+): React.Component<AuthWrapperProps> {\n+ class AuthStrategyWrapper extends React.Component<AuthWrapperProps> {\ncomponentWillMount () {\nconst {checkLogin, fetchAppInfo, user} = this.props\nconst userIsLoggedIn: boolean = !!user.token\n@@ -108,6 +108,7 @@ function wrapComponentInAuthStrategy (\n} else {\n// User is authenticated to view page or it is a public route.\nreturn (\n+ // $FlowFixMe\n<ComponentToWrap\n// Pass props to wrapped component except for auth-specific props\n{...omit(this.props, ['checkLogin', 'children', 'user'])} />\n@@ -146,7 +147,7 @@ type AppProps = {\n}\n}\n-export default class App extends Component<AppProps> {\n+export default class App extends React.Component<AppProps> {\nrender () {\nconst {history} = this.props\nconst routes = [\n",
        "chatgpt_rag": "refactor(routing): add lazy loading to route components and update loadLazyComponent function"
    },
    {
        "msg": "feat(types): add type exports for color mode & theme providers",
        "diff": "diff --git a/packages/chakra-ui-core/types/index.d.ts b/packages/chakra-ui-core/types/index.d.ts @@ -3,18 +3,36 @@ import { Theme } from \"../../chakra-ui-theme/types\"\nimport useToast from \"../src/CToast\"\nimport { ToastFactory } from '../src/CToast/CToast'\n+type ChakraIcons = { [name: string]: Icon };\n+\ndeclare module 'vue/types/vue' {\nexport interface Vue {\n$toast: ToastFactory\n$chakra: {\ntheme: Theme\n- icons: { [name: string]: Icon }\n+ icons: ChakraIcons\n+ }\n+ }\n+}\n+\n+declare module '../src/CColorModeProvider' {\n+ export interface Provides {\n+ $chakraColorMode: () => 'light' | 'dark'\n+ $toggleColorMode: () => void\n+ }\n}\n- chakraColorMode: string\n- chakraToggleColorMode: string\n+\n+declare module '../src/CThemeProvider' {\n+ export interface Provides {\n+ $chakraTheme: Theme\n+ $chakraIcons: ChakraIcons\n+ $chakraColorMode: () => 'light'\n}\n}\n+export { Provides as CColorModeProvides } from '../src/CColorModeProvider'\n+export { Provides as CThemeProvides } from '../src/CThemeProvider'\n+\nexport const useToast: typeof useToast\nexport const defaultTheme: Theme\nexport * from './component'\n",
        "date": "04.10.2021 00:12:00",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "feat",
        "sim_msg": "refactor(cdr-toast): remove useSlots() and add component name",
        "sim_diff": "diff --git a/src/components/toast/CdrToast.vue b/src/components/toast/CdrToast.vue <script>\nimport {\n- useCssModule, defineComponent, computed, useSlots, ref, watch, onUpdated,\n+ useCssModule, defineComponent, computed, ref, watch, onUpdated,\n} from 'vue';\nimport propValidator from '../../utils/propValidator.js';\nimport IconXSm from '../icon/comps/x-sm.vue';\nimport CdrButton from '../button/CdrButton.vue';\nexport default defineComponent({\n+ name: 'CdrToast',\ncomponents: {\nIconXSm,\nCdrButton\n@@ -34,10 +35,9 @@ export default defineComponent({\n},\n},\nsetup(props, ctx) {\n- const slots = useSlots();\nconst baseClass = 'cdr-toast';\nconst style = useCssModule();\n- const hasIconLeft = slots['icon-left'];\n+ const hasIconLeft = ctx.slots['icon-left'];\nconst opened = ref(null);\nconst toastEl = ref(null);\nlet timeout;\n@@ -95,7 +95,6 @@ export default defineComponent({\n});\nreturn {\n- slots,\nbaseClass,\nstyle,\nhasIconLeft,\n",
        "chatgpt_rag": "refactor(chakra-ui-core): update typescript definitions for ChakraIcons and add color mode provider interfaces"
    },
    {
        "msg": "feat: alias compat for preact X",
        "diff": "diff --git a/packages/cli/lib/lib/webpack/webpack-base-config.js b/packages/cli/lib/lib/webpack/webpack-base-config.js @@ -122,7 +122,8 @@ module.exports = function(env) {\n'.css',\n'.wasm',\n],\n- alias: {\n+ alias: Object.assign(\n+ {\nstyle: source('style'),\n'preact-cli-entrypoint': source('index'),\n// preact-compat aliases for supporting React dependencies:\n@@ -133,6 +134,8 @@ module.exports = function(env) {\n'@preact/async-loader/async'\n),\n},\n+ compat !== 'preact-compat' ? { 'preact-compat': compat } : {}\n+ ),\n},\nresolveLoader: {\n",
        "date": "29.09.2019 15:06:27",
        "repo": "preactjs/preact-cli",
        "type": "feat",
        "sim_msg": "feat(webpack): add source map to transpile",
        "sim_diff": "diff --git a/scripts/webpack/webpack.transpile.babel.js b/scripts/webpack/webpack.transpile.babel.js @@ -10,6 +10,7 @@ const libraryName = pkg.name;\nmodule.exports = (env) => {\nconsole.info('webpacking for transpile');\nreturn {\n+ devtool: 'source-map',\nentry: './src/index.js',\noutput: {\npath: path.resolve(process.cwd(), 'es'),\n@@ -155,8 +156,6 @@ module.exports = (env) => {\n},\nresolve: {\nalias: {\n- react: path.resolve(__dirname, './node_modules/react'),\n- 'react-dom': path.resolve(__dirname, './node_modules/react-dom'),\nassets: path.resolve(__dirname, 'assets'),\nnode_modules: path.resolve(__dirname, '..', '..', 'node_modules')\n},\n",
        "chatgpt_rag": "refactor(webpack): update alias configuration in webpack base config"
    },
    {
        "msg": "feat(razzle): add config debug flags",
        "diff": "diff --git a/packages/razzle/config/createConfigAsync.js b/packages/razzle/config/createConfigAsync.js @@ -4,6 +4,7 @@ const fs = require('fs-extra');\nconst path = require('path');\nconst webpack = require('webpack');\nconst crypto = require('crypto');\n+const util = require('util');\nconst TerserPlugin = require('terser-webpack-plugin');\nconst HtmlWebpackPlugin = require('html-webpack-plugin');\nconst StartServerPlugin = require('razzle-start-server-webpack-plugin');\n@@ -337,6 +338,11 @@ module.exports = (\n});\n}\n+ if (razzleOptions.debug.options) {\n+ console.log(`Printing webpack options for ${target} target`);\n+ console.log(util.inspect(webpackOptions, {depth: null}));\n+ }\n+\nconst debugNodeExternals = razzleOptions.debug.nodeExternals;\nconst nodeExternalsFunc = (context, request, callback) => {\n@@ -950,7 +956,10 @@ module.exports = (\npaths,\n});\n}\n-\n+ if (razzleOptions.debug.config) {\n+ console.log(`Printing webpack config for ${target} target`);\n+ console.log(util.inspect(webpackConfig, {depth: null}));\n+ }\nresolve(config);\n});\n};\n",
        "date": "01.02.2021 16:41:49",
        "repo": "jaredpalmer/razzle",
        "type": "feat",
        "sim_msg": "fix: check for http in baseUrl\n* fix: check for http in baseUrl\n`path.posix.join` can't be used with URLs.\n* Update plugin.js",
        "sim_diff": "diff --git a/plugins/plugin-webpack/plugin.js b/plugins/plugin-webpack/plugin.js @@ -2,6 +2,7 @@ const crypto = require(\"crypto\");\nconst fs = require(\"fs\");\nconst glob = require(\"glob\");\nconst path = require(\"path\");\n+const url = require(\"url\");\nconst webpack = require(\"webpack\");\nconst MiniCssExtractPlugin = require(\"mini-css-extract-plugin\");\nconst TerserJSPlugin = require(\"terser-webpack-plugin\");\n@@ -67,7 +68,9 @@ function emitHTMLFiles({ doms, jsEntries, stats, baseUrl, buildDirectory }) {\nfor (const jsFile of jsFiles) {\nconst scriptEl = dom.window.document.createElement(\"script\");\n- scriptEl.src = path.posix.join(baseUrl, jsFile);\n+ scriptEl.src = url.parse(baseUrl).protocol\n+ ? url.resolve(baseUrl, jsFile)\n+ : path.posix.join(baseUrl, jsFile);\n// insert _before_ so the relative order of these scripts is maintained\ninsertBefore(scriptEl, originalScriptEl);\n}\n",
        "chatgpt_rag": "feat: add debug logging for webpack options and config\n* Add debug logging for webpack options and config in createConfigAsync.js\n* Utilize util.inspect to print webpack options and config for better debugging experience."
    },
    {
        "msg": "feat(isJWT): signature is not required",
        "diff": "diff --git a/src/lib/isJWT.js b/src/lib/isJWT.js import assertString from './util/assertString';\n-const jwt = /^[a-zA-Z0-9\\-_]+\\.[a-zA-Z0-9\\-_]+\\.[a-zA-Z0-9\\-_]+$/;\n+const jwt = /^([A-Za-z0-9\\-_~+\\/]+[=]{0,2})\\.([A-Za-z0-9\\-_~+\\/]+[=]{0,2})(?:\\.([A-Za-z0-9\\-_~+\\/]+[=]{0,2}))?$/;\nexport default function isJWT(str) {\nassertString(str);\n",
        "date": "10.10.2018 22:04:39",
        "repo": "validatorjs/validator.js",
        "type": "feat",
        "sim_msg": "fix: remove whitespace",
        "sim_diff": "diff --git a/src/lib/util.js b/src/lib/util.js @@ -1594,7 +1594,7 @@ const util = {\n*/\nhtmlRemoveWhiteSpace: function (html) {\nif (!html) return '';\n- return html.trim().replace(/<\\/?(?!strong|span|font|b|var|i|em|u|ins|s|strike|del|sub|sup|mark|a|label|code|summary)[^>^<]+>\\s+(?=<)/ig, function (m) { return m.trim(); });\n+ return html.trim().replace(/<\\/?(?!strong|span|font|b|var|i|em|u|ins|s|strike|del|sub|sup|mark|a|label|code|summary)[^>^<]+>\\s+(?=<)/ig, function (m) { return m.replace(/\\n/g, '').replace(/\\s+/, ' '); });\n},\n/**\n",
        "chatgpt_rag": "refactor: update JWT regex pattern"
    },
    {
        "msg": "feat(server/ssr): move to react 16",
        "diff": "diff --git a/src/server/ssr/index.js b/src/server/ssr/index.js */\nimport React from 'react'\nimport chalk from 'chalk'\n-// import _ from 'lodash'\n-import {renderToNodeStream, renderToStaticNodeStream} from 'react-dom/server'\n+import {renderToNodeStream} from 'react-dom/server'\nimport {ServerStyleSheet, StyleSheetManager} from 'styled-components'\nimport {configureRootComponent, configureApp} from 'common/app'\n-// import {addLocaleData} from 'react-intl'\nimport HtmlComponent from './HtmlComponent'\n// $FlowFixMe\nimport assets from 'webpack-assets'\n@@ -58,9 +56,11 @@ export default async (req: express$Request, res: express$Response) => {\n'Content-Type': 'text/html'\n})\nres.write(beforeAppTag)\n+ res.write(`<div id=\"app\">`)\nstream.pipe(res, {end: false})\nstream.on('end', () => {\n+ res.write('</div>')\nres.write(afterAppTag)\nres.end()\n})\n",
        "date": "30.09.2017 14:22:54",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "fix(@quasar/app): SSR bundle -> do not externalize anything from within build > transpileDependencies",
        "sim_diff": "diff --git a/app/lib/webpack/ssr/server.js b/app/lib/webpack/ssr/server.js @@ -32,7 +32,9 @@ module.exports = function (chain, cfg) {\nchain.externals(nodeExternals({\n// do not externalize CSS files in case we need to import it from a dep\n- whitelist: /(\\.css$|\\.vue$|\\?vue&type=style|^quasar[\\\\/]lang[\\\\/]|^quasar[\\\\/]icon-set[\\\\/]|^quasar[\\\\/]src[\\\\/])/\n+ whitelist: [\n+ /(\\.css$|\\.vue$|\\?vue&type=style|^quasar[\\\\/]lang[\\\\/]|^quasar[\\\\/]icon-set[\\\\/]|^quasar[\\\\/]src[\\\\/])/\n+ ].concat(cfg.build.transpileDependencies)\n}))\nchain.plugin('vue-ssr-client')\n",
        "chatgpt_rag": "refactor(server/ssr): Remove unnecessary imports and add div container for the app content"
    },
    {
        "msg": "feat: more comprehensive gitignore",
        "diff": "diff --git a/.gitignore b/.gitignore *.swp\n*.swo\n-node_modules/\n-build/\n-.DS_Store/\n-/coverage\n-coverage.json\n+\n+# Logs\n+logs\n+*.log\n+\n+# Runtime data\n+pids\n+*.pid\n+*.seed\nallFiredEvents\nscTopics\n+\n+# Coverage directory used by tools like istanbul\n+coverage\n+coverage.json\n+\n+# node-waf configuration\n+.lock-wscript\n+\n+# Dependency directory\n+node_modules\n+\n+# Debug log from npm\n+npm-debug.log\n+\n+# local env variables\n+.env\n+\n+# truffle build directory\n+build/\n+\n+# lol macs\n+.DS_Store/\n",
        "date": "24.11.2017 13:03:52",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "feat",
        "sim_msg": "chore(git): update `.gitignore` and ignore `.nyc_output` directory",
        "sim_diff": "diff --git a/.gitignore b/.gitignore -node_modules\n+# Logs\n+logs\n+*.log\n+npm-debug.log*\n+\n+# Runtime data\n+pids\n+*.pid\n+*.seed\n+*.pid.lock\n+\n+# Directory for instrumented libs generated by jscoverage/JSCover\n+lib-cov\n+\n+# Coverage directory used by tools like istanbul\ncoverage\n+\n+# nyc test coverage\n+.nyc_output\n+\n+# Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)\n+.grunt\n+\n+# node-waf configuration\n+.lock-wscript\n+\n+# Compiled binary addons (http://nodejs.org/api/addons.html)\n+build/Release\n+\n+# Dependency directories\n+node_modules\n+jspm_packages\n+\n+# Optional npm cache directory\n+.npm\n+\n+# Optional eslint cache\n+.eslintcache\n+\n+# Optional REPL history\n+.node_repl_history\n+\n+# Build files\n+build\ndist\n+\n+# Vim swap files\n*.swp\n-*.log\n+\n+# Mac OS\n.DS_Store\n",
        "chatgpt_rag": "chore(git): update `.gitignore` and ignore `coverage.json`, `npm-debug.log`, `.env`, and `build/` directory"
    },
    {
        "msg": "feat(Footer): add basic test",
        "diff": "diff --git a/src/common/components/parts/Footer/index.test.jsx b/src/common/components/parts/Footer/index.test.jsx +import React from 'react'\n+import Footer from 'components/parts/Footer'\n+import {shallow} from 'enzyme'\n+import toJson from 'enzyme-to-json'\n+\n+describe('Footer component', () => {\n+ it('same snapshot', () => {\n+ const component = shallow(<Footer />)\n+ expect(toJson(component)).toMatchSnapshot()\n+ })\n+})\n",
        "date": "10.09.2017 13:55:08",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "test: update header test",
        "sim_diff": "diff --git a/src/components/Header/Header.test.js b/src/components/Header/Header.test.js import React from \"react\";\nimport renderer from \"react-test-renderer\";\n+import { shallow } from \"enzyme\";\nimport Header from \"./Header\";\ntest(\"basic snapshot\", () => {\n- const component = renderer.create(<Header />);\n+ const component = renderer.create(shallow(<Header />).get(3));\nconst tree = component.toJSON();\nexpect(tree).toMatchSnapshot();\n",
        "chatgpt_rag": "test: update footer test snapshot"
    },
    {
        "msg": "feat: use jest fake timer",
        "diff": "diff --git a/packages/dropdown/src/__tests__/Dropdown.spec.js b/packages/dropdown/src/__tests__/Dropdown.spec.js -import Dropdown from '../dropdown.vue'\n-import DropdownMenu from '../dropdown-menu.vue'\n-import DropdownItem from '../dropdown-item.vue'\n-\n+import '@testing-library/jest-dom'\nimport { mount } from '@vue/test-utils'\nimport { nextTick, ref } from 'vue'\nimport sinon from 'sinon'\n+import Dropdown from '../dropdown.vue'\n+import DropdownMenu from '../dropdown-menu.vue'\n+import DropdownItem from '../dropdown-item.vue'\n+\nconst components = {\nElDropdown: Dropdown,\nElDropdownMenu: DropdownMenu,\nElDropdownItem: DropdownItem\n}\n+jest.useFakeTimers()\n+\nconst wait = (time = 300) => {\n- return new Promise((resolve) => {\n- setTimeout(resolve, time)\n- })\n+ jest.runAllTimers()\n}\ndescribe('Dropdown', () => {\n",
        "date": "12.09.2020 16:32:29",
        "repo": "hug-sun/element3",
        "type": "feat",
        "sim_msg": "test(dropdown): testing native bootstrap 4 dropdown",
        "sim_diff": "diff --git a/test/index.html b/test/index.html <a href=\"https://bootstrap-vue.js.org/docs/\" target=\"_blank\">BootstrapVue</a>\n</b-alert>\n</div>\n+\n+ <div class=\"dropdown\">\n+ <button\n+ class=\"btn btn-secondary dropdown-toggle\"\n+ type=\"button\"\n+ id=\"dropdownMenuButton\"\n+ data-toggle=\"dropdown\"\n+ aria-haspopup=\"true\"\n+ aria-expanded=\"false\"\n+ >\n+ Dropdown button\n+ </button>\n+ <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n+ <a class=\"dropdown-item\" href=\"#\">Action</a>\n+ <a class=\"dropdown-item\" href=\"#\">Another action</a>\n+ <a class=\"dropdown-item\" href=\"#\">Something else here</a>\n+ </div>\n+ </div>\n</div>\n<script src=\"storefront-twbs.min.js\"></script>\n",
        "chatgpt_rag": "packages(dropdown): added jest-dom library and updated test setup for Dropdown component"
    },
    {
        "msg": "feat: Add optional argument to cxxr",
        "diff": "diff --git a/src/system/pair.js b/src/system/pair.js @@ -14,10 +14,23 @@ class Pair {\nthis.cdr = cdr;\n}\n- caar(){ return this.car.car; }\n- cadr(){ return this.cdr.car; }\n- cdar(){ return this.cdr.car; }\n- cddr(){ return this.cdr.cdr; }\n+ // Returns `this.car.car`. If `err` is given and `this.car` is not a pair,\n+ // throws `err`.\n+ caar(err){ return this._get([\"car\", \"car\"], err) }\n+ cadr(err){ return this._get([\"cdr\", \"car\"], err) }\n+ cdar(err){ return this._get([\"cdr\", \"car\"], err) }\n+ cddr(err){ return this._get([\"cdr\", \"cdr\"], err) }\n+ _get(props, err) {\n+ let x = this;\n+ props.forEach(p => {\n+ if (x.hasOwnProperty(p)) {\n+ return x[p];\n+ } else if (err) {\n+ throw err;\n+ }\n+ });\n+ return x;\n+ }\nfirst(){ return this.car; }\nsecond(){ return this.cdr.car; }\n",
        "date": "16.01.2022 13:06:19",
        "repo": "biwascheme/biwascheme",
        "type": "feat",
        "sim_msg": "refactor(document): support arrays and space-delimited for `$isDefault()`, `isInit()`, `isDirectModified()` with one fewer `if`\nRe:",
        "sim_diff": "diff --git a/lib/document.js b/lib/document.js @@ -1937,18 +1937,15 @@ Document.prototype.$isDefault = function(path) {\nreturn this.$__.activePaths.some('default');\n}\n+ if (typeof path === 'string' && path.indexOf(' ') === -1) {\n+ return this.$__.activePaths.states.default.hasOwnProperty(path);\n+ }\n+\nlet paths = path;\nif (!Array.isArray(paths)) {\npaths = paths.split(' ');\n}\n- if (paths.length === 0) {\n- return this.$__.activePaths.some('default');\n- }\n- if (paths.length === 1) {\n- return this.$__.activePaths.states.default.hasOwnProperty(paths[0]);\n- }\n-\nreturn paths.some(path => this.$__.activePaths.states.default.hasOwnProperty(path));\n};\n@@ -2001,18 +1998,15 @@ Document.prototype.isDirectModified = function(path) {\nreturn this.$__.activePaths.some('modify');\n}\n+ if (typeof path === 'string' && path.indexOf(' ') === -1) {\n+ return this.$__.activePaths.states.modify.hasOwnProperty(path);\n+ }\n+\nlet paths = path;\nif (!Array.isArray(paths)) {\npaths = paths.split(' ');\n}\n- if (paths.length === 0) {\n- return this.$__.activePaths.some('modify');\n- }\n- if (paths.length === 1) {\n- return this.$__.activePaths.states.modify.hasOwnProperty(paths[0]);\n- }\n-\nreturn paths.some(path => this.$__.activePaths.states.modify.hasOwnProperty(path));\n};\n@@ -2029,18 +2023,15 @@ Document.prototype.isInit = function(path) {\nreturn this.$__.activePaths.some('init');\n}\n+ if (typeof path === 'string' && path.indexOf(' ') === -1) {\n+ return this.$__.activePaths.states.init.hasOwnProperty(path);\n+ }\n+\nlet paths = path;\nif (!Array.isArray(paths)) {\npaths = paths.split(' ');\n}\n- if (paths.length === 0) {\n- return this.$__.activePaths.some('init');\n- }\n- if (paths.length === 1) {\n- return this.$__.activePaths.states.init.hasOwnProperty(paths[0]);\n- }\n-\nreturn paths.some(path => this.$__.activePaths.states.init.hasOwnProperty(path));\n};\n",
        "chatgpt_rag": "refactor(pair): refactor `caar()`, `cadr()`, `cdar()`, `cddr()` methods to use `_get()` method for property access with error handling"
    },
    {
        "msg": "feat: add `process.browser` for compatibility",
        "diff": "diff --git a/src/plugins/process-global-plugin.js b/src/plugins/process-global-plugin.js * @returns {import('rollup').Plugin}\n*/\nexport default function processGlobalPlugin({ NODE_ENV = 'development', env = {} } = {}) {\n- const processObj = `{env:${JSON.stringify({ ...env, NODE_ENV })}}`;\n+ const processObj = JSON.stringify({ browser: true, env: { ...env, NODE_ENV } });\nreturn {\nname: 'process-global',\n",
        "date": "15.01.2021 20:26:37",
        "repo": "preactjs/wmr",
        "type": "feat",
        "sim_msg": "chore: fix rollup to new API",
        "sim_diff": "diff --git a/rollup.config.js b/rollup.config.js @@ -12,15 +12,18 @@ const env = process.env.NODE_ENV;\nconst name = process.env.npm_package_name;\nconst config = {\n+ name,\n+ ouput: {\nname,\nsourcemap: true,\n- external: ['react', 'prop-types', 'redux', 'react-redux'],\nglobals: {\nreact: 'React',\n'prop-types': 'PropTypes',\nredux: 'redux',\n'react-redux': 'react-redux',\n},\n+ },\n+ external: ['react', 'prop-types', 'redux', 'react-redux'],\nplugins: [\nreplace({\n'process.env.NODE_ENV': JSON.stringify(env),\n",
        "chatgpt_rag": "chore: update processGlobalPlugin to include browser flag and stringify env object"
    },
    {
        "msg": "feat(webpac_config/client/prod): remove comments from css files",
        "diff": "diff --git a/webpack_config/client/webpack.prod.babel.js b/webpack_config/client/webpack.prod.babel.js @@ -76,7 +76,14 @@ base.plugins.push(\nfilename: '[name].[chunkhash:8].css',\nallChunks: true\n}),\n- new OptimizeCssAssetsPlugin(),\n+ new OptimizeCssAssetsPlugin({\n+ cssProcessorOptions: {\n+ safe: true,\n+ discardComments: {\n+ removeAll: true\n+ }\n+ }\n+ }),\n// NOTE: ModuleConcatenationPlugin doesn't work on linux alpine,\n// I got an error trying to deploy this app to zeit's `now` when i use this plugin\n// new webpack.optimize.ModuleConcatenationPlugin(),\n@@ -114,17 +121,15 @@ base.plugins.push(\nname: 'manifest'\n}),\nnew webpack.BannerPlugin({\n- banner:\n- 'React-Semantic.UI-Starter. MIT License. Copyright (c) 2017 Copyright Vladimir Metnew. All Rights Reserved. https://github.com/Metnew/react-semantic.ui-starter'\n+ banner: config.banner\n}),\n- // XXX: this plugin seems cool, but there are few big issues:\n+ // XXX: this plugin looks cool, but there are few big issues:\n// 1. It sets invalid url to browserconfig.xml and manifest.json in index.html.\n// E.g: in generated index.html you can see:\n// <meta name=\"msapplication-config\" content=\"browserconfig.xml\">\n// 2. It looks like generated images aren't minified.(not sure)\n+ // 3. plugin is deprecated (at least look like it's deprecated)!\n// NOTE: It would be better to generate favicons without this plugin.\n- //\n- //\nnew FaviconsWebpackPlugin({\n// add theme-color property\nbackground: config.manifest.theme,\n",
        "date": "05.08.2017 12:11:04",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "feat(Scripts): add build timestamp",
        "sim_diff": "diff --git a/packages/scripts/webapp/preset/config/webpack.config.js b/packages/scripts/webapp/preset/config/webpack.config.js @@ -122,6 +122,7 @@ module.exports = ({ getUserConfig, mode }) => {\n],\n},\nplugins: [\n+ new webpack.DefinePlugin({ BUILD_TIMESTAMP: Date.now() }),\nnew MiniCssExtractPlugin({\nfilename: '[name]-[hash].css',\n}),\n@@ -135,9 +136,7 @@ module.exports = ({ getUserConfig, mode }) => {\nloadCSSAsync: true,\nappLoaderIcon: getUserConfig(['html', 'appLoaderIcon'], DEFAULT_APP_LOADER_ICON),\n}),\n- new CopyWebpackPlugin([\n- { from: 'src/assets' },\n- ]),\n+ new CopyWebpackPlugin([{ from: 'src/assets' }]),\nnew webpack.BannerPlugin({\nbanner: LICENSE_BANNER,\n}),\n",
        "chatgpt_rag": "fix(Webpack): update OptimizeCssAssetsPlugin options and remove deprecated plugin usage"
    },
    {
        "msg": "feat(cli): Added CLI support for the --global-var option :tada:",
        "diff": "diff --git a/lib/cli/index.js b/lib/cli/index.js @@ -314,7 +314,24 @@ var _ = require('lodash'),\nvar runParser = new argparse.ArgumentParser({\ndebug: true,\naddHelp: false\n- });\n+ }),\n+\n+ /**\n+ * Parses `=` separated key-value pairs into Postman variable list like arrays. `=` characters in values are\n+ * also supported.\n+ *\n+ * @param {String} arg - The argument provided to `--global-var`.\n+ * @returns {{key, value}} - The object representation of the current CLI variable.\n+ * @throws {Error} - An error is thrown for arguments that are not in the form foo=bar.\n+ */\n+ cliVar = function (arg) {\n+ var eqIndex = arg.indexOf('=');\n+\n+ if (eqIndex === -1) { throw new Error('CLI global vars must be specified in a `key=value` format'); }\n+\n+ // This is done instead of splitting by `=` to avoid chopping off `=` that could be present in the value\n+ return { key: arg.slice(0, eqIndex), value: arg.slice(eqIndex + 1) };\n+ };\nrunParser.addArgument('collection', {\nhelp: 'URL or path to a Postman Collection'\n@@ -398,6 +415,12 @@ var _ = require('lodash'),\ndefaultValue: false\n});\n+ runParser.addArgument(['--global-var'], {\n+ help: 'Allows the specification of global variables via the command line, in a key=value format',\n+ type: cliVar,\n+ action: 'append'\n+ });\n+\nreturn runParser;\n},\n",
        "date": "24.07.2017 14:33:45",
        "repo": "postmanlabs/newman",
        "type": "feat",
        "sim_msg": "chore: add RPC methods",
        "sim_diff": "diff --git a/build/avalanchego-apis/admin-api-c-chain.md b/build/avalanchego-apis/admin-api-c-chain.md @@ -52,3 +52,135 @@ curl -X POST --data '{\n}\n}\n```\n+\n+### admin.startCPUProfiler\n+\n+Starts a CPU profile writing to the specified file\n+\n+#### **Signature**\n+\n+```text\n+admin.startCPUProfiler() -> {success:bool}\n+```\n+\n+#### **Example Call**\n+\n+```bash\n+curl -X POST --data '{\n+ \"jsonrpc\":\"2.0\",\n+ \"id\" :1,\n+ \"method\" :\"admin.startCPUProfiler\",\n+ \"params\": {}\n+}' -H 'content-type:application/json;' 127.0.0.1:9650/ext/bc/C/admin\n+```\n+\n+#### **Example Response**\n+\n+```javascript\n+{\n+ \"jsonrpc\":\"2.0\",\n+ \"id\" :1,\n+ \"result\" :{\n+ \"success\":true\n+ }\n+}\n+```\n+\n+### admin.stopCPUProfiler\n+\n+Stops the CPU profile\n+\n+#### **Signature**\n+\n+```text\n+admin.stopCPUProfiler() -> {success:bool}\n+```\n+\n+#### **Example Call**\n+\n+```bash\n+curl -X POST --data '{\n+ \"jsonrpc\":\"2.0\",\n+ \"id\" :1,\n+ \"method\" :\"admin.stopCPUProfiler\",\n+ \"params\": {}\n+}' -H 'content-type:application/json;' 127.0.0.1:9650/ext/bc/C/admin\n+```\n+\n+#### **Example Response**\n+\n+```javascript\n+{\n+ \"jsonrpc\":\"2.0\",\n+ \"id\" :1,\n+ \"result\" :{\n+ \"success\":true\n+ }\n+}\n+```\n+\n+### admin.memoryProfile\n+\n+Runs a memory profile writing to the specified file.\n+\n+#### **Signature**\n+\n+```text\n+admin.memoryProfile() -> {success:bool}\n+```\n+\n+#### **Example Call**\n+\n+```bash\n+curl -X POST --data '{\n+ \"jsonrpc\":\"2.0\",\n+ \"id\" :1,\n+ \"method\" :\"admin.setLogLevel\",\n+ \"params\": {}\n+}' -H 'content-type:application/json;' 127.0.0.1:9650/ext/bc/C/admin\n+```\n+\n+#### **Example Response**\n+\n+```javascript\n+{\n+ \"jsonrpc\":\"2.0\",\n+ \"id\" :1,\n+ \"result\" :{\n+ \"success\":true\n+ }\n+}\n+```\n+\n+### admin.lockProfile\n+\n+Runs a mutex profile writing to the specified file.\n+\n+#### **Signature**\n+\n+```text\n+admin.lockProfile() -> {success:bool}\n+```\n+\n+#### **Example Call**\n+\n+```bash\n+curl -X POST --data '{\n+ \"jsonrpc\":\"2.0\",\n+ \"id\" :1,\n+ \"method\" :\"admin.lockProfile\",\n+ \"params\": {}\n+}' -H 'content-type:application/json;' 127.0.0.1:9650/ext/bc/C/admin\n+```\n+\n+#### **Example Response**\n+\n+```javascript\n+{\n+ \"jsonrpc\":\"2.0\",\n+ \"id\" :1,\n+ \"result\" :{\n+ \"success\":true\n+ }\n+}\n+```\n\\ No newline at end of file\n",
        "chatgpt_rag": "feat: add functionality to parse `=` separated key-value pairs into Postman variable list arrays via CLI argument"
    },
    {
        "msg": "feat(server/middlewares/auth): add default language\nfeat(server/middlewares/auth): add default language for req.user",
        "diff": "diff --git a/src/server/middlewares/auth.js b/src/server/middlewares/auth.js @@ -14,6 +14,7 @@ import {JWT_TOKEN} from 'common/api/LocalStorageCookiesSvc'\nexport default (req: Object, res: Object, next: () => void) => {\nreq.user = {\ntoken: null,\n+ lang: 'en',\nisLoggedIn: false\n}\n",
        "date": "10.09.2017 17:33:32",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "fix: add Utilities import to get-serialized",
        "sim_diff": "diff --git a/pages/api/users/get-serialized.js b/pages/api/users/get-serialized.js import * as Data from \"~/node_common/data\";\nimport * as Serializers from \"~/node_common/serializers\";\nimport * as Strings from \"~/common/strings\";\n+import * as Utilities from \"~/node_common/utilities\";\nexport default async (req, res) => {\nconst id = Utilities.getIdFromCookie(req);\n",
        "chatgpt_rag": "feat: add lang property to req.user in auth middleware"
    },
    {
        "msg": "feat(reducers/auth): remove jwt token from state.me.auth",
        "diff": "diff --git a/src/common/reducers/auth/index.js b/src/common/reducers/auth/index.js // @flow\n-import {\n- isLoggedIn as hasLocalToken,\n- getLocalToken\n-} from 'api/LocalStorageCookiesSvc'\n+import {isLoggedIn as hasLocalToken} from 'api/LocalStorageCookiesSvc'\nimport {\nLOGIN_AUTH_FAIL,\nLOGIN_AUTH_PENDING,\n@@ -23,7 +20,6 @@ export type State = {\nisLoading: boolean,\nisLoaded: boolean,\nisLoggedIn: boolean,\n- token: string | null,\nerrors: Object\n}\n@@ -38,7 +34,6 @@ export const initialState: State = {\nisLoading: false,\nisLoaded: false,\nisLoggedIn: hasLocalToken(),\n- token: getLocalToken(),\nerrors: {}\n}\n@@ -52,7 +47,6 @@ export function auth (state: State = initialState, action: Action): State {\nisLoading: false,\nisLoaded: true,\nisLoggedIn: false,\n- token: null,\nerrors: {}\n}\n}\n@@ -63,18 +57,15 @@ export function auth (state: State = initialState, action: Action): State {\nisLoading: false,\nisLoaded: true,\nisLoggedIn: false,\n- token: null,\nerrors\n}\n}\ncase LOGIN_AUTH_SUCCESS: {\n- const {token} = action.payload\nreturn {\n...state,\nisLoading: false,\nisLoaded: true,\n- isLoggedIn: true,\n- token\n+ isLoggedIn: true\n}\n}\ncase LOGIN_AUTH_PENDING: {\n",
        "date": "17.09.2017 14:55:40",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "docs(jsdoc): adding param descriptions for account reducer",
        "sim_diff": "diff --git a/renderer/reducers/account/reducer.js b/renderer/reducers/account/reducer.js @@ -28,12 +28,12 @@ const {\n/**\n* @typedef State\n- * @property {boolean} isAccountLoading\n- * @property {boolean} isAccountLoaded\n- * @property {boolean} isLoggingIn\n- * @property {boolean} isLoggedIn\n- * @property {boolean|null} isPasswordEnabled\n- * @property {string|null} loginError\n+ * @property {boolean} isAccountLoading Boolean indicating if account is loading.\n+ * @property {boolean} isAccountLoaded Boolean indicating if account is loaded.\n+ * @property {boolean} isLoggingIn Boolean indicating if login is in process.\n+ * @property {boolean} isLoggedIn Boolean indicating if user is logged in.\n+ * @property {boolean|null} isPasswordEnabled Boolean indicating if user password is enabled.\n+ * @property {string|null} loginError Login error message.\n*/\n/** @type {State} */\n",
        "chatgpt_rag": "refactor(auth): remove token handling from auth reducer and update initial state properties"
    },
    {
        "msg": "feat(CarPlay): Add CarPlay plugin to the list of possible plugins",
        "diff": "diff --git a/packages/rnv/pluginTemplates/renative.plugins.json b/packages/rnv/pluginTemplates/renative.plugins.json },\n\"@lightningjs/sdk\": {\n\"version\": \"3.0.0\"\n+ },\n+ \"react-native-carplay\": {\n+ \"version\": \"2.0.0\",\n+ \"ios\": {\n+ \"path\": \"node_modules/react-native-carplay\",\n+ \"podName\": \"react-native-carplay\",\n+ \"appDelegateImports\": [\"CarPlay\", \"react_native_carplay\"],\n+ \"appDelegateExtensions\": [\"CPApplicationDelegate\"],\n+ \"appDelegateMethods\": {\n+ \"application\": {\n+ \"didConnectCarInterfaceController\": [\n+ \"RNCarPlay.connect(with: interfaceController, window: window)\"\n+ ],\n+ \"didDisconnectCarInterfaceController\": [\"RNCarPlay.disconnect()\"]\n+ }\n+ }\n+ }\n}\n}\n}\n",
        "date": "15.06.2021 14:00:16",
        "repo": "pavjacko/renative",
        "type": "feat",
        "sim_msg": "feat(conference/native): adjusted carmode ui",
        "sim_diff": "diff --git a/react/features/conference/components/native/carmode/styles.js b/react/features/conference/components/native/carmode/styles.js @@ -24,10 +24,7 @@ export default {\ndisplay: 'flex',\nflexDirection: 'column',\nalignItems: 'center',\n- bottom: BaseTheme.spacing[8],\n- left: 0,\n- right: 0,\n- position: 'absolute'\n+ bottom: BaseTheme.spacing[8]\n},\n/**\n@@ -79,7 +76,7 @@ export default {\nflexShrink: 1,\npaddingHorizontal: 2,\njustifyContent: 'center',\n- marginTop: 8\n+ marginTop: BaseTheme.spacing[2]\n},\nroomTimer: {\n@@ -99,8 +96,8 @@ export default {\ntitle: {\nmargin: 'auto',\ntextAlign: 'center',\n- paddingVertical: 4,\n- paddingHorizontal: 16,\n+ paddingVertical: BaseTheme.spacing[1],\n+ paddingHorizontal: BaseTheme.spacing[3],\ncolor: BaseTheme.palette.text02\n},\n@@ -141,7 +138,7 @@ export default {\nroomNameWrapper: {\nflexDirection: 'row',\n- marginRight: 10,\n+ marginRight: BaseTheme.spacing[2],\nflexShrink: 1,\nflexGrow: 1\n},\n@@ -150,7 +147,7 @@ export default {\nbackgroundColor: 'rgba(0,0,0,0.6)',\nflexShrink: 1,\njustifyContent: 'center',\n- paddingHorizontal: 5\n+ paddingHorizontal: BaseTheme.spacing[2]\n},\nroomName: {\n@@ -166,7 +163,9 @@ export default {\nvideoStoppedLabel: {\n...BaseTheme.typography.bodyShortRegularLarge,\ncolor: BaseTheme.palette.text01,\n- marginBottom: BaseTheme.spacing[3]\n+ marginBottom: BaseTheme.spacing[3],\n+ textAlign: 'center',\n+ width: '100%'\n},\nconnectionIndicatorIcon: {\n",
        "chatgpt_rag": "feat(plugins): added react-native-carplay plugin to renative.plugins.json"
    },
    {
        "msg": "feat(Header): add FormattedMessage",
        "diff": "diff --git a/src/common/components/parts/Header/index.jsx b/src/common/components/parts/Header/index.jsx import React from 'react'\nimport PropTypes from 'prop-types'\nimport {Icon, Popup} from 'semantic-ui-react'\n+import {FormattedMessage, FormattedDate} from 'react-intl'\n+\nimport {isEqual} from 'lodash'\nimport {\nStyledHeader,\n@@ -56,7 +58,16 @@ class Header extends React.Component {\n<Icon name=\"github\" size=\"large\" link fitted />\n</HeaderButton>\n}\n- content={`RSUIS on @Github`}\n+ content={\n+ <FormattedMessage\n+ id=\"Header.Popup.HeaderButton\"\n+ defaultMessage={`Hello {name}, today is {today, date}`}\n+ values={{\n+ name: <b>user</b>,\n+ today: Date.now()\n+ }}\n+ />\n+ }\ninverted\n/>\n</HeaderInner>\n",
        "date": "09.09.2017 18:02:34",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "feat(core-heading): add forwardRefs",
        "sim_diff": "diff --git a/packages/Heading/Heading.jsx b/packages/Heading/Heading.jsx -import React from 'react'\n+import React, { forwardRef } from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n@@ -89,13 +89,22 @@ export const StyledHeading = styled.h1(wordBreak, ({ level, invert }) => {\n*\n* @version ./package.json\n*/\n-const Heading = ({ level, tag = level, invert, children, ...rest }) => {\n+const Heading = forwardRef(({ level, tag = level, invert, children, ...rest }, ref) => {\nreturn (\n- <StyledHeading {...safeRest(rest)} as={tag} level={level} invert={invert} data-testid=\"heading\">\n+ <StyledHeading\n+ {...safeRest(rest)}\n+ ref={ref}\n+ as={tag}\n+ level={level}\n+ invert={invert}\n+ data-testid=\"heading\"\n+ >\n{children}\n</StyledHeading>\n)\n-}\n+})\n+\n+Heading.displayName = 'Heading'\nHeading.propTypes = {\n/**\n",
        "chatgpt_rag": "feat(core-header): integrate react-intl for internationalization in Header component"
    },
    {
        "msg": "feat(.babelrc): add babel-plugin-webpack-alias in test and development\nadd babel-plugin-webpack-alias in test and development",
        "diff": "diff --git a/.babelrc b/.babelrc },\n\"development\": {\n\"plugins\": [\n- \"react-hot-loader/babel\"\n+ \"react-hot-loader/babel\",\n+ [\n+ \"babel-plugin-webpack-alias\",\n+ {\n+ \"config\": \"./webpack_config/client/webpack.base.js\",\n+ \"findConfig\": true\n+ }\n+ ]\n+ ]\n+ },\n+ \"test\": {\n+ \"plugins\": [\n+ [\n+ \"babel-plugin-webpack-alias\",\n+ {\n+ \"config\": \"./webpack_config/webpack.isomorphic.js\",\n+ \"findConfig\": true\n+ }\n+ ]\n]\n}\n}\n",
        "date": "14.08.2017 16:59:06",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "build: Manually resolve Babel env plugins",
        "sim_diff": "diff --git a/.babelrc.js b/.babelrc.js -module.exports = {\n+const env = process.env.BABEL_ENV || process.env.NODE_ENV || 'development';\n+\n+const preset = {\npresets: [\n['env', {\nmodules: false\n@@ -10,19 +12,19 @@ module.exports = {\n'transform-decorators-legacy',\n'transform-export-extensions',\n['transform-runtime', { polyfill: false }]\n- ],\n- env: {\n- development: {\n- plugins: [\n- 'react-hot-loader/babel'\n]\n- },\n- production: {\n- plugins: [\n+};\n+\n+if (env === 'development') {\n+ preset.plugins.push('react-hot-loader/babel');\n+}\n+\n+if (env === 'production') {\n+ preset.plugins.push(\n'transform-react-constant-elements',\n'transform-react-inline-elements',\n['transform-react-remove-prop-types', { mode: 'wrap' }]\n- ]\n+ );\n}\n- }\n-};\n+\n+module.exports = preset;\n",
        "chatgpt_rag": "build: Manually resolve Babel env plugins for development and test environments"
    },
    {
        "msg": "feat(src/common/routing/index.jsx): use  /* webpackMode: \"eager\" for server-side code",
        "diff": "diff --git a/src/common/routing/index.jsx b/src/common/routing/index.jsx @@ -7,7 +7,12 @@ export const history = getHistory()\nconst loadLazyComponent = url => {\nreturn async cb => {\n- const loadComponent = await import(/* webpackMode: \"lazy-once\", webpackChunkName: \"lazy-containers\" */ `containers/${url}/index.jsx`)\n+ const str = `containers/${url}/index.jsx`\n+ if (process.env.BROWSER) {\n+ const loadComponent = await import(/* webpackMode: \"lazy-once\", webpackChunkName: \"lazy-containers\" */ str)\n+ return loadComponent\n+ }\n+ const loadComponent = await import(/* webpackMode: \"eager\", webpackChunkName: \"lazy-containers\" */ str)\nreturn loadComponent\n}\n}\n",
        "date": "10.08.2017 06:18:33",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "feat(Scripts): add build timestamp",
        "sim_diff": "diff --git a/packages/scripts/webapp/preset/config/webpack.config.js b/packages/scripts/webapp/preset/config/webpack.config.js @@ -122,6 +122,7 @@ module.exports = ({ getUserConfig, mode }) => {\n],\n},\nplugins: [\n+ new webpack.DefinePlugin({ BUILD_TIMESTAMP: Date.now() }),\nnew MiniCssExtractPlugin({\nfilename: '[name]-[hash].css',\n}),\n@@ -135,9 +136,7 @@ module.exports = ({ getUserConfig, mode }) => {\nloadCSSAsync: true,\nappLoaderIcon: getUserConfig(['html', 'appLoaderIcon'], DEFAULT_APP_LOADER_ICON),\n}),\n- new CopyWebpackPlugin([\n- { from: 'src/assets' },\n- ]),\n+ new CopyWebpackPlugin([{ from: 'src/assets' }]),\nnew webpack.BannerPlugin({\nbanner: LICENSE_BANNER,\n}),\n",
        "chatgpt_rag": "refactor(Routing): improve lazy loading logic in history module"
    },
    {
        "msg": "feat: add keyboard navigation for Schedule",
        "diff": "diff --git a/packages/veui/src/components/Schedule.vue b/packages/veui/src/components/Schedule.vue <td v-for=\"(hour, j) in day\" :key=\"j\" :class=\"{ 'veui-schedule-selected': hour.isSelected }\">\n<button type=\"button\" :disabled=\"realDisabled || hour.isDisabled\"\n:class=\"mergeClass({ 'veui-schedule-selected': hour.isSelected }, week[i], j)\"\n- :ref=\"`${week[i]}-${j}`\"\n+ :ref=\"`hour-${week[i]}-${j}`\"\n@mousedown=\"handleMousedown(i, j)\"\n@mouseenter=\"handleHover(i, j)\"\n- @mouseup=\"pick()\"><slot name=\"hour\" :day=\"week[i]\" :hour=\"j\"/></button>\n+ @mouseup=\"pick\"\n+ @keydown.space.enter=\"handleMousedown(i, j)\"\n+ @keyup.space.enter=\"pick\"\n+ @keydown.up.prevent=\"moveFocus((i + 6) % 7, j)\"\n+ @keydown.right.prevent=\"moveFocus(i, (j + 25) % 24)\"\n+ @keydown.down.prevent=\"moveFocus((i + 1) % 7, j)\"\n+ @keydown.left.prevent=\"moveFocus(i, (j + 23) % 24)\"><slot name=\"hour\" :day=\"week[i]\" :hour=\"j\"/></button>\n</td>\n</tr>\n</table>\n@@ -239,7 +245,7 @@ export default {\nif (!current) {\nreturn null\n}\n- return `${current.day}-${current.hour}`\n+ return `hour-${current.day}-${current.hour}`\n},\ncurrentLabel () {\nlet current = this.current\n@@ -366,6 +372,15 @@ export default {\nthis.$delete(this.localSelected, day)\n}\nthis.$emit('select', this.localSelected)\n+ },\n+ moveFocus (dayIndex, hour) {\n+ let day = this.week[dayIndex]\n+ this.handleHover(dayIndex, hour)\n+\n+ let el = (this.$refs[`hour-${day}-${hour}`] || [])[0]\n+ if (el && typeof el.focus === 'function') {\n+ el.focus()\n+ }\n}\n}\n}\n",
        "date": "11.06.2018 15:35:37",
        "repo": "ecomfe/veui",
        "type": "feat",
        "sim_msg": "fix: QTab events",
        "sim_diff": "diff --git a/src/components/tab/QTabs.vue b/src/components/tab/QTabs.vue @@ -120,15 +120,17 @@ export default {\n},\nmethods: {\nselectTab (name) {\n- if (this.value === name && this.data.tabName === name) {\n+ let emitInput = this.value !== name\n+ if (!emitInput && this.data.tabName === name) {\nreturn\n}\nclearTimeout(this.timer)\n+ this.__beforePositionContract = () => {}\nconst el = this.__getTabElByName(name)\nif (this.$q.theme === 'ios') {\n- this.__setTab({name, el})\n+ this.__setTab({name, el}, emitInput)\nreturn\n}\n@@ -137,7 +139,7 @@ export default {\nif (!el) {\nposbarClass.add('invisible')\n- this.__setTab({name})\n+ this.__setTab({name}, emitInput)\nreturn\n}\n@@ -150,7 +152,7 @@ export default {\nthis.timer = setTimeout(() => {\nif (!this.tab.el) {\nposbarClass.add('invisible')\n- this.__setTab({name, el, width, offsetLeft, index})\n+ this.__setTab({name, el, width, offsetLeft, index}, emitInput)\nreturn\n}\n@@ -166,7 +168,7 @@ export default {\nif (this.tab.index < index) {\nif (offsetLeft + width - this.tab.offsetLeft === this.tab.offsetLeft) {\n- return this.__setTab({name, el, width, offsetLeft, index})\n+ return this.__setTab({name, el, width, offsetLeft, index}, emitInput)\n}\nthis.__setPositionBar(\noffsetLeft + width - this.tab.offsetLeft,\n@@ -184,16 +186,14 @@ export default {\n}\nthis.__beforePositionContract = () => {\n- if (this.timer) {\n- this.__setTab({name, el, width, offsetLeft, index})\n- }\n+ this.__setTab({name, el, width, offsetLeft, index}, emitInput)\n}\n}, 30)\n}, 30)\n},\n- __setTab (data) {\n+ __setTab (data, emitInput) {\nthis.data.tabName = data.name\n- if (this.value !== data.name) {\n+ if (emitInput) {\nthis.$emit('input', data.name)\n}\nthis.$emit('select', data.name)\n",
        "chatgpt_rag": "feat: Add keyboard navigation functionality to Schedule component"
    },
    {
        "msg": "feat(avatar): docs",
        "diff": "diff --git a/packages/chakra-ui-core/src/CAvatar/CAvatar.js b/packages/chakra-ui-core/src/CAvatar/CAvatar.js @@ -54,9 +54,6 @@ export const CAvatarBadge = {\nborderColor: borderColorStyle[this.colorMode],\nrounded: 'full',\n...forwardProps(this.$props)\n- },\n- attrs: {\n- 'data-chakra-component': 'CAvatarBadge'\n}\n})\n}\n@@ -83,8 +80,7 @@ const CAvatarName = {\n...forwardProps(this.$props)\n},\nattrs: {\n- 'aria-label': this.name,\n- 'data-chakra-component': 'CAvatarName'\n+ 'aria-label': this.name\n}\n}, [this.name && getInitials(this.name)])\n}\n@@ -107,9 +103,6 @@ const CDefaultAvatar = {\nlineHeight: '1rem',\n...forwardProps(this.$props)\n},\n- attrs: {\n- 'data-chakra-component': 'CDefaultAvatar'\n- },\ndomProps: {\ninnerHTML: `\n<svg fill=\"#fff\" viewBox=\"0 0 128 128\" role=\"img\">\n@@ -211,10 +204,10 @@ export const CAvatar = {\nw: '100%',\nh: '100%',\nrounded: 'full',\n- objectFit: 'cover'\n+ objectFit: 'cover',\n+ alt: this.name\n},\nattrs: {\n- alt: this.name,\nsrc: this.src\n}\n})\n@@ -225,16 +218,11 @@ export const CAvatar = {\nreturn h(CAvatarName, {\nprops: {\nname: this.name,\n- w: _size,\n- h: _size\n+ size: _size\n}\n})\n} else {\nreturn h(CDefaultAvatar, {\n- props: {\n- w: '100%',\n- h: '100%'\n- },\nattrs: {\n'aria-label': this.name\n}\n@@ -243,20 +231,12 @@ export const CAvatar = {\n}\n}\n- const { size, ...avatarStyles } = avatarStyleProps\n-\nreturn h(CBox, {\nprops: {\nfontSize: fontSize,\nlineHeight: _size,\n- verticalAlign: 'top',\n- w: size,\n- h: size,\n- ...avatarStyles,\n+ ...avatarStyleProps,\n...forwardProps(this.$props)\n- },\n- attrs: {\n- 'data-chakra-component': 'CAvatar'\n}\n}, [\nrenderChildren(),\n",
        "date": "05.04.2020 17:41:01",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "feat",
        "sim_msg": "refactor(app): better PWA manifest icons URL management",
        "sim_diff": "diff --git a/app/lib/quasar-config.js b/app/lib/quasar-config.js @@ -15,6 +15,7 @@ const cssVariables = require('./helpers/css-variables')\nconst getDevlandFile = require('./helpers/get-devland-file')\nconst transformAssetUrls = getDevlandFile('quasar/dist/transform-asset-urls.json')\n+const urlRegex = /^http(s)?:\\/\\//\nfunction encode (obj) {\nreturn JSON.stringify(obj, (_, value) => {\n@@ -33,7 +34,7 @@ function formatPublicPath (path) {\npath = `${path}/`\n}\n- if (path.startsWith('http://') || path.startsWith('https://')) {\n+ if (urlRegex.test(path) === true) {\nreturn path\n}\n@@ -740,7 +741,7 @@ class QuasarConfig {\n}\ncfg.pwa.manifest.icons = cfg.pwa.manifest.icons.map(icon => {\n- if (icon.src.startsWith('http') !== true) {\n+ if (urlRegex.test(icon.src) === false) {\nicon.src = `${cfg.build.publicPath}${icon.src}`\n}\nreturn icon\n",
        "chatgpt_rag": "refactor(chakra-ui-core): improve CAvatar component structure and attributes"
    },
    {
        "msg": "feat: added css for github button",
        "diff": "diff --git a/components/SocialLoginGroup/SocialLoginGroup.css b/components/SocialLoginGroup/SocialLoginGroup.css }\n/* Github */\n-.githubButton {\n+\n+/* WHITE */\n+\n+/* .githubButton {\ncolor: #24292e;\nbackground: #eff3f6;\ntransition: opacity 0.15s linear;\n.githubButton::before {\nborder-right: #1b1f23 1px solid;\n- background: url(\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/14082/icon_github.png\") 6px 6px\n+ background-color: #eff3f6;\n+ background-image: url(\"http://localhost:3000/static/images/icons/github_logo_black.svg\");\n+ background-repeat: no-repeat;\n+}\n+\n+.githubButton:active,\n+.githubButton:hover,\n+.githubButton:focus {\n+ opacity: 0.8;\n+ cursor: pointer;\n+} */\n+\n+/* .githubButton {\n+ color: #24292e;\n+ background: #eff3f6;\n+ transition: opacity 0.15s linear;\n+ border: 1px solid #1b1f23;\n+}\n+\n+.githubButton::before {\n+ content: url(\"http://localhost:3000/static/images/icons/github_logo_black.svg\");\n+ border-right: #1b1f23 1px solid;\n+ /* background-color: #eff3f6;\n+ background-image: url(\"http://localhost:3000/static/images/icons/github_logo.svg\");\n+ background-repeat: no-repeat;\n+}\n+\n+.githubButton:active,\n+.githubButton:hover,\n+.githubButton:focus {\n+ opacity: 0.8;\n+ cursor: pointer;\n+} */\n+\n+/* BLACK */\n+.githubButton {\n+ color: #eff3f6;\n+ background: #24292e;\n+ transition: opacity 0.15s linear;\n+ border: 1px solid #1b1f23;\n+}\n+\n+.githubButton::before {\n+ border-right: #b0b0b0 1px solid;\n+ background: url(\"http://localhost:3000/static/images/icons/github_octocat_logo.svg\") 4px 4px\nno-repeat;\n}\n",
        "date": "16.10.2019 12:32:51",
        "repo": "operationcode/front-end",
        "type": "feat",
        "sim_msg": "feat(components): eye candy buttons",
        "sim_diff": "diff --git a/src/components/ui/button.js b/src/components/ui/button.js @@ -26,6 +26,8 @@ const Button = ({\ncursor: pointer;\nfont-size: 18px;\nfont-weight: 500;\n+ transition-property: transform, box-shadow;\n+ transition-duration: .25s;\n}\n.Button:hover {\n@@ -44,13 +46,23 @@ const Button = ({\nbackground-color: #e51148;\nbox-shadow:\n0 5px 25px 0 rgba(229, 16, 71, 0.33),\n+ inset 0 0 100px 0 rgba(255, 255, 255, 0),\ninset 0 0 3px 0 rgba(255, 255, 255, 0.5);\n}\n.Button--primary:hover,\n.Button--primary:focus {\n+ transform: scale(1.1);\nbox-shadow:\n- 0 5px 25px 0 rgba(229, 16, 71, 0.33),\n+ 0 10px 35px 0 rgba(229, 16, 71, .33),\n+ inset 0 0 100px 0 rgba(255, 255, 255, 0.2),\n+ inset 0 0 3px 0 rgba(255, 255, 255, 0.5);\n+ }\n+\n+ .Button--primary:active {\n+ transform: scale(.99);\n+ box-shadow:\n+ 0 0px 25px 0 rgba(229, 16, 71, .33),\ninset 0 0 100px 0 rgba(255, 255, 255, 0.2),\ninset 0 0 3px 0 rgba(255, 255, 255, 0.5);\n}\n@@ -59,6 +71,7 @@ const Button = ({\nbackground-color: #3871d0;\nbox-shadow:\n0 5px 25px 0 rgba(56, 113, 208, 0.33),\n+ inset 0 0 100px 0 rgba(255, 255, 255, 0),\ninset 0 0 3px 0 rgba(255, 255, 255, 0.5);\n}\n@@ -70,15 +83,18 @@ const Button = ({\ninset 0 0 3px 0 rgba(255, 255, 255, 0.5);\n}\n+ .Button--secondary:active {\n+ box-shadow:\n+ 0 5px 25px 0 rgba(56, 113, 208, 0.33),\n+ inset 0 0 100px 0 rgba(0, 0, 0, 0.07),\n+ inset 0 0 3px 0 rgba(255, 255, 255, 0.5);\n+ }\n+\n.Button--github {\nbackground-color: rgba(64, 120, 192, 0.15);\ncolor: #4078c0;\n}\n- .Button--github:hover {\n- box-shadow: inset 0 0 100px 0 rgba(255, 255, 255, 0.5);\n- }\n-\n.Button--google {\nbackground-color: rgba(221, 75, 56, 0.15);\ncolor: #dd4b39;\n@@ -89,6 +105,22 @@ const Button = ({\ncolor: #3b5998;\n}\n+ .Button--github:hover,\n+ .Button--github:focus,\n+ .Button--google:hover,\n+ .Button--google:focus,\n+ .Button--facebook:hover,\n+ .Button--facebook:focus {\n+ box-shadow: inset 0 0 100px 0 rgba(255, 255, 255, 0.5);\n+ }\n+\n+ .Button--github:active,\n+ .Button--google:active,\n+ .Button--facebook:active {\n+ transform: scale(.99);\n+ box-shadow: inset 0 0 100px 0 rgba(0, 0, 0, 0.07);\n+ }\n+\n.Button--outline {\nbackground: none;\nborder-radius: 8px;\n",
        "chatgpt_rag": "style(components): update Github button styles"
    },
    {
        "msg": "feat: use contenthash instead of chunkhash and hash",
        "diff": "diff --git a/packages/razzle/config/createConfigAsync.js b/packages/razzle/config/createConfigAsync.js @@ -532,7 +532,7 @@ module.exports = (\nexclude: webpackOptions.fileLoaderExlude,\nloader: require.resolve('file-loader'),\noptions: {\n- name: `${razzleOptions.mediaPrefix}/[name].[hash:8].[ext]`,\n+ name: `${razzleOptions.mediaPrefix}/[name].[contenthash:8].[ext]`,\nemitFile: IS_WEB,\n},\n},\n@@ -544,7 +544,7 @@ module.exports = (\nloader: require.resolve('url-loader'),\noptions: {\nlimit: 10000,\n- name: `${razzleOptions.mediaPrefix}/[name].[hash:8].[ext]`,\n+ name: `${razzleOptions.mediaPrefix}/[name].[contenthash:8].[ext]`,\nemitFile: IS_WEB,\n},\n},\n@@ -844,8 +844,8 @@ module.exports = (\nconfig.output = {\npath: paths.appBuildPublic,\npublicPath: dotenv.raw.PUBLIC_PATH || '/',\n- filename: `${razzleOptions.jsPrefix}/bundle.[chunkhash:8].js`,\n- chunkFilename: `${razzleOptions.jsPrefix}/[name].[chunkhash:8].chunk.js`,\n+ filename: `${razzleOptions.jsPrefix}/bundle.[contenthash:8].js`,\n+ chunkFilename: `${razzleOptions.jsPrefix}/[name].[contenthash:8].chunk.js`,\nlibraryTarget: 'var',\n};\n",
        "date": "23.08.2020 17:44:58",
        "repo": "jaredpalmer/razzle",
        "type": "feat",
        "sim_msg": "perf(ui): BundleModules - memo params",
        "sim_diff": "diff --git a/packages/ui/src/components/bundle-modules/bundle-modules.jsx b/packages/ui/src/components/bundle-modules/bundle-modules.jsx @@ -29,6 +29,61 @@ import { MetricsTableTitle } from '../metrics-table-title';\nimport { ModuleInfo } from '../module-info';\nimport css from './bundle-modules.module.css';\n+const getFilters = ({ filters, compareMode, chunks }) => ({\n+ [MODULE_FILTERS.CHANGED]: {\n+ label: 'Changed',\n+ defaultValue: filters.changed,\n+ disabled: !compareMode,\n+ },\n+ [MODULE_FILTERS.DUPLICATED]: {\n+ label: 'Duplicate',\n+ defaultValue: filters[MODULE_FILTERS.DUPLICATED],\n+ },\n+ [MODULE_SOURCE_TYPE]: {\n+ label: 'Source',\n+ [MODULE_FILTERS.FIRST_PARTY]: {\n+ label: 'First party',\n+ defaultValue: get(filters, `${MODULE_SOURCE_TYPE}.${MODULE_FILTERS.FIRST_PARTY}`, true),\n+ },\n+ [MODULE_FILTERS.THIRD_PARTY]: {\n+ label: 'Third party',\n+ defaultValue: get(filters, `${MODULE_SOURCE_TYPE}.${MODULE_FILTERS.THIRD_PARTY}`, true),\n+ },\n+ },\n+\n+ // When chunks data available, list available chunks as filters\n+ ...(!isEmpty(chunks) && {\n+ [MODULE_CHUNK]: {\n+ label: 'Chunk',\n+ ...chunks.reduce(\n+ (chunkFilters, { id, name }) => ({\n+ ...chunkFilters,\n+ [id]: {\n+ label: name,\n+ defaultValue: get(filters, `${MODULE_CHUNK}.${id}`, true),\n+ },\n+ }),\n+ {},\n+ ),\n+ },\n+ }),\n+\n+ // Module source types\n+ [MODULE_FILE_TYPE]: {\n+ label: 'File type',\n+ ...MODULE_SOURCE_FILE_TYPES.reduce(\n+ (agg, fileType) => ({\n+ ...agg,\n+ [fileType]: {\n+ label: FILE_TYPE_LABELS[fileType],\n+ defaultValue: get(filters, `${MODULE_FILE_TYPE}.${fileType}`, true),\n+ },\n+ }),\n+ {},\n+ ),\n+ },\n+})\n+\nconst RowHeader = ({ row, chunks, labels, CustomComponentLink }) => {\nconst chunkIds = map(chunks, 'id');\n@@ -103,6 +158,20 @@ export const BundleModules = ({\n}) => {\nconst rootClassName = cx(css.root, className);\n+ const dropdownFilters = useMemo(\n+ () => getFilters({ filters, chunks, compareMode: jobs.length > 1 }),\n+ [jobs, filters, chunks]\n+ );\n+\n+ const metricsTableTitle = useMemo(() => (\n+ <MetricsTableTitle\n+ title={I18N.MODULES}\n+ info={`(${items.length}/${totalRowCount})`}\n+ popoverInfo={I18N.MODULES_INFO}\n+ popoverHref={config.documentation.modules}\n+ />\n+ ), [items, totalRowCount]);\n+\nconst renderRowHeader = useCallback(\n(row) => (\n<RowHeader\n@@ -115,69 +184,14 @@ export const BundleModules = ({\n[jobs, chunks, CustomComponentLink],\n);\n- const emptyMessage = (\n+ const emptyMessage = useMemo(() => (\n<EmptySet\nresources=\"modules\"\nfiltered={totalRowCount !== 0}\nhandleResetFilters={resetFilters}\nhandleViewAll={resetAllFilters}\n/>\n- );\n-\n- const dropdownFilters = {\n- [MODULE_FILTERS.CHANGED]: {\n- label: 'Changed',\n- defaultValue: filters.changed,\n- disabled: jobs.length <= 1,\n- },\n- [MODULE_FILTERS.DUPLICATED]: {\n- label: 'Duplicate',\n- defaultValue: filters[MODULE_FILTERS.DUPLICATED],\n- },\n- [MODULE_SOURCE_TYPE]: {\n- label: 'Source',\n- [MODULE_FILTERS.FIRST_PARTY]: {\n- label: 'First party',\n- defaultValue: get(filters, `${MODULE_SOURCE_TYPE}.${MODULE_FILTERS.FIRST_PARTY}`, true),\n- },\n- [MODULE_FILTERS.THIRD_PARTY]: {\n- label: 'Third party',\n- defaultValue: get(filters, `${MODULE_SOURCE_TYPE}.${MODULE_FILTERS.THIRD_PARTY}`, true),\n- },\n- },\n-\n- // When chunks data available, list available chunks as filters\n- ...(!isEmpty(chunks) && {\n- [MODULE_CHUNK]: {\n- label: 'Chunk',\n- ...chunks.reduce(\n- (chunkFilters, { id, name }) => ({\n- ...chunkFilters,\n- [id]: {\n- label: name,\n- defaultValue: get(filters, `${MODULE_CHUNK}.${id}`, true),\n- },\n- }),\n- {},\n- ),\n- },\n- }),\n-\n- // Module source types\n- [MODULE_FILE_TYPE]: {\n- label: 'File type',\n- ...MODULE_SOURCE_FILE_TYPES.reduce(\n- (agg, fileType) => ({\n- ...agg,\n- [fileType]: {\n- label: FILE_TYPE_LABELS[fileType],\n- defaultValue: get(filters, `${MODULE_FILE_TYPE}.${fileType}`, true),\n- },\n- }),\n- {},\n- ),\n- },\n- };\n+ ), [totalRowCount, resetFilters, resetAllFilters]);\nreturn (\n<div className={rootClassName}>\n@@ -221,14 +235,7 @@ export const BundleModules = ({\nrenderRowHeader={renderRowHeader}\nemptyMessage={emptyMessage}\nshowHeaderSum\n- title={\n- <MetricsTableTitle\n- title={I18N.MODULES}\n- info={`(${items.length}/${totalRowCount})`}\n- popoverInfo={I18N.MODULES_INFO}\n- popoverHref={config.documentation.modules}\n- />\n- }\n+ title={metricsTableTitle}\n/>\n</div>\n);\n",
        "chatgpt_rag": "fix(razzle): Update file and chunk name hashing logic in createConfigAsync\n\nUpdated the hashing logic for file and chunk names in the createConfigAsync file to use contenthash instead of hash for better caching and versioning. This change ensures that the file and chunk names are unique and consistent across builds, improving performance and cache invalidation strategies."
    },
    {
        "msg": "feat: CSS Variables support",
        "diff": "diff --git a/scss/mixins/_utilities.scss b/scss/mixins/_utilities.scss // Don't prefix if value key is null (eg. with shadow class)\n$property-class-modifier: if($key, if($property-class == \"\" and $infix == \"\", \"\", \"-\") + $key, \"\");\n+ // Generate also CSS Variable\n+ $generate-vars: if(map-has-key($utility, vars), map-get($utility, vars), \"false\");\n+\n@if map-get($utility, rfs) {\n// Inside the media query\n@if $is-rfs-media-query {\n}\n.#{$property-class + $infix + $property-class-modifier} {\n@each $property in $properties {\n+ @if $generate-vars == true {\n#{$property}: var(--#{$variable-prefix}#{$property-class + $infix + $property-class-modifier}, $value) if($enable-important-utilities, !important, null);\n}\n+ @else {\n+ #{$property}: $value if($enable-important-utilities, !important, null);\n+ }\n+ }\n}\n@each $pseudo in $state {\n",
        "date": "04.01.2021 15:06:26",
        "repo": "coreui/coreui",
        "type": "feat",
        "sim_msg": "perf: additional utils for brand colors only (use light for gray)",
        "sim_diff": "diff --git a/scss/_utilities.scss b/scss/_utilities.scss /**\n*\n* Provide additional utility classes for theming\n- * Extra utilities with brand and gray colors\n+ * Extra utilities with brand colors\n*\n*/\n-@mixin utils-variant($color, $value) {\n- // Text colors\n- .text_#{$color} {\n- color: $value;\n- }\n- .hover\\:text_#{$color}:hover {\n- color: $value;\n- }\n-\n- // Standalone background colors\n- .bg_#{$color} {\n- background-color: $value;\n- }\n- .hover\\:bg_#{$color}:hover {\n- background-color: $value;\n- }\n-\n- // Border colors\n- .border_#{$color} {\n- border-color: $value;\n- }\n- .hover\\:border_#{$color}:hover {\n- border-color: $value;\n- }\n-}\n-\n// Map brand colors pallete\n$brand-colors: (\n\"primary-lightest\": lighten($primary, 33%),\n@@ -51,7 +25,6 @@ $brand-colors: (\n@each $color, $value in $brand-colors {\n// Block utilities with background color and YIQ (white or black) text color\n- // For brand colors only\n.block_#{$color} {\nbackground-color: $value;\ncolor: color-yiq($value);\n@@ -60,10 +33,28 @@ $brand-colors: (\nbackground-color: $value;\ncolor: color-yiq($value);\n}\n- @include utils-variant($color, $value);\n+\n+ // Text colors\n+ .text_#{$color} {\n+ color: $value;\n+ }\n+ .hover\\:text_#{$color}:hover {\n+ color: $value;\n}\n-@each $color, $value in $grays {\n- // utilities for grayscale\n- @include utils-variant(\"gray-#{$color}\", $value);\n+ // Standalone background colors\n+ .bg_#{$color} {\n+ background-color: $value;\n+ }\n+ .hover\\:bg_#{$color}:hover {\n+ background-color: $value;\n+ }\n+\n+ // Border colors\n+ .border_#{$color} {\n+ border-color: $value;\n+ }\n+ .hover\\:border_#{$color}:hover {\n+ border-color: $value;\n+ }\n}\n",
        "chatgpt_rag": "feat: generate CSS variables for utilities with specified vars map, add option to enable/disable vars generation"
    },
    {
        "msg": "feat(api/links.json): fix links desc",
        "diff": "diff --git a/src/server/api/links.json b/src/server/api/links.json \"icon\": \"github\",\n\"header\": \"SSR + Webpack (in development)\",\n\"desc\":\n- \"Step by step guide with working example of hot-reloaded server and client with SSR with Webpack in development.\"\n+ \"Step by step guide with working example of server and client with hot-reloading and SSR with Webpack (in development).\"\n},\n{\n- \"link\": \"https://github.com/Metnew/tiny-universal-example\",\n+ \"link\": \"https://github.com/Metnew/noir\",\n\"icon\": \"bug\",\n- \"header\": \"How to test actions and reducers?\",\n- \"desc\": \"How to test actions and reducers?\"\n+ \"header\": \"Testing\",\n+ \"desc\": \"How to test actions, reducers, components?\"\n},\n{\n\"link\": \"https://github.com/Metnew/noir\",\n\"icon\": \"paint brush\",\n- \"header\": \"Why semantic-ui-react?\"\n+ \"header\": \"Why semantic-ui-react?\",\n+ \"desc\": \"Notes about SUI. Why SUIR is a good (or bad) choise.\"\n},\n{\n\"link\": \"\",\n\"icon\": \"globe\",\n\"header\": \"How i18n works?\",\n- \"desc\": \"i18n configuration and how to customize it in own project\"\n+ \"desc\": \"How i18n is implemented and how to customize it.\"\n},\n{\n\"header\": \"How Webpack is configured?\",\n\"icon\": \"code\",\n\"link\": \"\",\n\"desc\":\n- \"Webpack configuration for server/client in production and development\"\n+ \"Webpack configuration for server/client in production and development.\"\n},\n{\n\"link\": \"\",\n\"icon\": \"terminal\",\n- \"header\": \"npm scripts\",\n- \"desc\": \"npm scripts under the hood and ENV vars\"\n+ \"header\": \"npm scripts and ENV vars\",\n+ \"desc\": \"Docs about every npm script and ENV variable.\"\n},\n{\n\"link\": \"\",\n\"icon\": \"folder\",\n\"header\": \"Folder structure\",\n- \"desc\": \"Why this folder structure and how to adapt it for own project\"\n+ \"desc\": \"Why this folder structure and how to adapt it in own project.\"\n}\n]\n",
        "date": "13.10.2017 16:51:17",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "test(publicapi): update for new wrapCellText option",
        "sim_diff": "diff --git a/packages/react/src/utils/__tests__/__snapshots__/publicAPI.test.js.snap b/packages/react/src/utils/__tests__/__snapshots__/publicAPI.test.js.snap @@ -1604,6 +1604,7 @@ Map {\n\"never\",\n\"auto\",\n\"alwaysTruncate\",\n+ \"expand\",\n],\n],\n\"type\": \"oneOf\",\n@@ -2856,6 +2857,7 @@ Map {\n\"never\",\n\"auto\",\n\"alwaysTruncate\",\n+ \"expand\",\n],\n],\n\"isRequired\": true,\n@@ -3610,6 +3612,7 @@ Map {\n\"never\",\n\"auto\",\n\"alwaysTruncate\",\n+ \"expand\",\n],\n],\n\"isRequired\": true,\n",
        "chatgpt_rag": "api(links): update links.json with new descriptions and links"
    },
    {
        "msg": "feat(Modal): Make toggle prop optional\n* Make toggle prop optional on Modal\nre\n* Check toggle prop for null",
        "diff": "diff --git a/src/Modal.js b/src/Modal.js @@ -14,7 +14,7 @@ import {\nconst propTypes = {\nisOpen: PropTypes.bool,\nsize: PropTypes.string,\n- toggle: PropTypes.func.isRequired,\n+ toggle: PropTypes.func,\nkeyboard: PropTypes.bool,\nbackdrop: PropTypes.oneOfType([\nPropTypes.bool,\n@@ -90,7 +90,7 @@ class Modal extends React.Component {\n}\nhandleEscape(e) {\n- if (this.props.keyboard && e.keyCode === 27) {\n+ if (this.props.keyboard && e.keyCode === 27 && this.props.toggle) {\nthis.props.toggle();\n}\n}\n@@ -100,7 +100,7 @@ class Modal extends React.Component {\nconst container = this._dialog;\n- if (e.target && !container.contains(e.target)) {\n+ if (e.target && !container.contains(e.target) && this.props.toggle) {\nthis.props.toggle();\n}\n}\n",
        "date": "14.02.2017 08:55:27",
        "repo": "reactstrap/reactstrap",
        "type": "feat",
        "sim_msg": "feat: handle modal esc key",
        "sim_diff": "diff --git a/src/components/ui/modal.js b/src/components/ui/modal.js +import {Component} from 'react'\nimport {connect} from 'zefir/utils'\n-const Modal = ({\n+class Modal extends Component {\n+ componentWillMount (props) {\n+ window.addEventListener('keydown', this.props.handleEscKey)\n+ }\n+\n+ componentWillUnmount (props) {\n+ window.removeEventListener('keydown', this.props.handleEscKey)\n+ }\n+\n+ render () {\n+ const {\ntitle, subtitle, children, name, ui, toggle, full, size, noPadding, visible\n-}) => (\n+ } = this.props\n+\n+ return ui.modal === name || visible ? (\n<div className={`\nModal ${ui.modal === name || visible ? 'is-visible' : ''}\n${full ? 'Modal--full' : ''}\n@@ -143,11 +156,14 @@ const Modal = ({\npadding-bottom: 90px;\n}\n+ .Modal--full .Modal__inner {\n+ height: 100%;\n+ }\n+\n.Modal__inner {\nborder-radius: 8px;\noverflow: hidden;\nflex: 1;\n- height: 100%;\nmax-width: 770px;\nmargin-left: 30px;\nmargin-right: 30px;\n@@ -183,10 +199,13 @@ const Modal = ({\n}\n`}</style>\n</div>\n-)\n+ ) : null\n+ }\n+}\nModal.init = ({\nname,\n+ router: {history: {push}},\nstores: {ui},\nservices: {ui: {toggleModal}},\ntoggle,\n@@ -196,6 +215,11 @@ Modal.init = ({\nname,\nui,\ntoggle: toggle || (() => toggleModal(name)),\n+ handleEscKey: (e) => {\n+ if (e.keyCode === 27 && name === 'socket-details') {\n+ push('/sockets')\n+ }\n+ },\n...rest\n}\n}\n",
        "chatgpt_rag": "fix: handle modal escape key and toggle prop validation"
    },
    {
        "msg": "feat: :sparkles: add Fathom tracking",
        "diff": "diff --git a/src/app.html b/src/app.html name=\"viewport\"\ncontent=\"width=device-width, initial-scale=1\"\n/>\n+ <script\n+ src=\"https://4pvafmq.cheatsheets.xyz/script.js\"\n+ data-site=\"WERPEKMT\"\n+ defer\n+ ></script>\n%svelte.head%\n</head>\n<body>\n",
        "date": "12.07.2021 08:42:23",
        "repo": "spences10/cheat-sheets",
        "type": "feat",
        "sim_msg": "feat: Fast Chinese website",
        "sim_diff": "diff --git a/site/index.html b/site/index.html <script src=\"bundle.js\" type=\"text/javascript\" defer></script>\n</head>\n<body>\n- <div id=\"app\" />\n+ <div id=\"app\"></div>\n</body>\n</html>\n",
        "chatgpt_rag": "feat: Added external script for site optimization"
    },
    {
        "msg": "feat(drawer): add stories for Drawer component",
        "diff": "diff --git a/packages/chakra-ui-core/src/Drawer/Drawer.stories.js b/packages/chakra-ui-core/src/Drawer/Drawer.stories.js +import { storiesOf } from '@storybook/vue'\n+import { Fragment, Input, Button, Drawer, DrawerBody, DrawerFooter, DrawerHeader, DrawerOverlay, DrawerContent, DrawerCloseButton } from '..'\n+\n+storiesOf('UI | Drawer', module)\n+ .add('Drawer', () => ({\n+ components: { Fragment, Input, Button, Drawer, DrawerBody, DrawerFooter, DrawerHeader, DrawerOverlay, DrawerContent, DrawerCloseButton },\n+ data: () => ({ isOpen: false }),\n+ methods: {\n+ close () {\n+ this.isOpen = false\n+ }\n+ },\n+ template: `\n+ <Fragment>\n+ <Button ref=\"btnRef\" @click=\"isOpen =true\">Open Drawer</Button>\n+\n+ <Drawer :isOpen=\"isOpen\" placement=\"right\" :on-close=\"close\" :initialFocusRef=\"()=>$refs.inputInsideModal\">\n+ <DrawerOverlay />\n+ <DrawerContent>\n+ <DrawerCloseButton />\n+ <DrawerHeader>Create your account</DrawerHeader>\n+\n+ <DrawerBody>\n+ <Input ref=\"inputInsideModal\" placeholder=\"Type here...\" />\n+ </DrawerBody>\n+\n+ <DrawerFooter>\n+ <Button variant=\"outline\" mr=\"3\" @click=\"isOpen = false\">Cancel</Button>\n+ <Button color=\"blue\">Save</Button>\n+ </DrawerFooter>\n+ </DrawerContent>\n+ </Drawer>\n+ </Fragment>\n+ `\n+ }))\n",
        "date": "17.03.2020 22:34:36",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "feat",
        "sim_msg": "docs: add object knob",
        "sim_diff": "diff --git a/stories/Autocomplete.stories.js b/stories/Autocomplete.stories.js @@ -2,7 +2,7 @@ import React from 'react';\nimport { storiesOf } from '@storybook/react';\nimport Autocomplete from '../src/Autocomplete';\nimport Icon from '../src/Icon';\n-import { text, withKnobs } from '@storybook/addon-knobs';\n+import { text, withKnobs, object } from '@storybook/addon-knobs';\nconst stories = storiesOf('Javascript|Autocomplete', module);\nstories.addDecorator(withKnobs);\n@@ -16,11 +16,11 @@ stories.add(\n() => (\n<Autocomplete\noptions={{\n- data: {\n+ data: object('Data', {\n['Gus Fring']: null,\n['Saul Goodman']: null,\n['Tuco Salamanca']: 'https://placehold.it/250x250'\n- }\n+ })\n}}\nplaceholder=\"Insert here\"\n/>\n@@ -33,11 +33,11 @@ stories.add(\n() => (\n<Autocomplete\noptions={{\n- data: {\n+ data: object('Data', {\n['Gus Fring']: null,\n['Saul Goodman']: null,\n['Tuco Salamanca']: 'https://placehold.it/250x250'\n- }\n+ })\n}}\nplaceholder=\"Insert here\"\nicon={<Icon>{text('icon', 'textsms')}</Icon>}\n",
        "chatgpt_rag": "feat: add Drawer component to UI stories with open and close functionality"
    },
    {
        "msg": "feat(build, watch): Less verbose error output",
        "diff": "diff --git a/src/lib/webpack/run-webpack.js b/src/lib/webpack/run-webpack.js @@ -38,7 +38,12 @@ const devBuild = async (env, onprogress) => {\nlet serverAddr = `${protocol}://${host}:${chalk.bold(port)}`;\nlet localIpAddr = `${protocol}://${ip.address()}:${chalk.bold(port)}`;\n- process.stdout.write(chalk.green('\\nCompiled successfully!!\\n\\n'));\n+ if (stats.hasErrors()) {\n+ process.stdout.write(chalk.red('\\Build failed!\\n\\n'));\n+ } else {\n+ process.stdout.write(chalk.green('\\nCompiled successfully!\\n\\n'));\n+ }\n+\nif (userPort !== port) {\nprocess.stdout.write(`Port ${chalk.bold(userPort)} is in use, using ${chalk.bold(port)} instead\\n\\n`);\n}\n@@ -71,7 +76,8 @@ const prodBuild = async (env) => {\nreturn await new Promise((resolve, reject) => {\ncompiler.run((err, stats) => {\nif (err || stats.hasErrors()) {\n- reject(err || stats.toJson().errors.join('\\n'));\n+ showStats(stats);\n+ reject(chalk.red('Build failed!'));\n}\nelse {\n// Timeout for plugins that work on `after-emit` event of webpack\n@@ -82,16 +88,16 @@ const prodBuild = async (env) => {\n};\nexport function showStats(stats) {\n- let info = stats.toJson();\n+ let info = stats.toJson(\"errors-only\");\nif (stats.hasErrors()) {\n- info.errors.forEach( message => {\n- process.stderr.write(message+'\\n');\n+ info.errors.map(stripBabelLoaderPrefix).forEach( message => {\n+ process.stderr.write(chalk.red(message)+'\\n');\n});\n}\nif (stats.hasWarnings()) {\n- info.warnings.forEach( message => {\n+ info.warnings.map(stripBabelLoaderPrefix).forEach( message => {\nprocess.stderr.write(chalk.yellow(message)+'\\n');\n});\n}\n@@ -109,8 +115,8 @@ export function writeJsonStats(stats) {\njsonStats = (jsonStats.children && jsonStats.children[0]) || jsonStats;\n- jsonStats.modules.forEach(normalizeModule);\n- jsonStats.chunks.forEach(c => c.modules.forEach(normalizeModule));\n+ jsonStats.modules.forEach(stripBabelLoaderFromModuleNames);\n+ jsonStats.chunks.forEach(c => c.modules.forEach(stripBabelLoaderFromModuleNames));\nreturn fs.writeFile(outputPath, JSON.stringify(jsonStats))\n.then(() => {\n@@ -121,20 +127,20 @@ export function writeJsonStats(stats) {\n});\n}\n-const normalizeModule = m => {\n+const stripBabelLoaderFromModuleNames = m => {\nconst keysToNormalize = ['identifier', 'name', 'module', 'moduleName', 'moduleIdentifier'];\nkeysToNormalize.forEach(key => {\nif (key in m) {\n- m[key] = normalizeName(m[key]);\n+ m[key] = stripBabelLoaderPrefix(m[key]);\n}\n});\nif (m.reasons) {\n- m.reasons.forEach(normalizeModule);\n+ m.reasons.forEach(stripBabelLoaderFromModuleNames);\n}\nreturn m;\n};\n-const normalizeName = p => p.substr(p.lastIndexOf('!') + 1);\n+const stripBabelLoaderPrefix = log => log.replace(/@?\\s*(\\.\\/~\\/babel-loader\\/lib\\?{[\\s\\S]*?}!)/g, '');\n",
        "date": "08.07.2017 11:27:49",
        "repo": "preactjs/preact-cli",
        "type": "feat",
        "sim_msg": "refactor(cleanup): Remove unused path from the build",
        "sim_diff": "diff --git a/scripts/build.js b/scripts/build.js @@ -11,7 +11,6 @@ require('dotenv').config({ silent: true });\nconst chalk = require('chalk');\nconst webpack = require('webpack');\nconst config = require('../config/webpack.config.prod');\n-const paths = require('../config/paths');\n// Create the production build and print the deployment instructions.\nfunction build() {\n@@ -24,58 +23,8 @@ function build() {\n}\nconsole.log(chalk.green('Compiled successfully.'));\n- console.log();\n-\n- const openCommand = process.platform === 'win32' ? 'start' : 'open';\n- const homepagePath = require(paths.appPackageJson).homepage;\n- const publicPath = config.output.publicPath;\n-\n- if (homepagePath && homepagePath.indexOf('.github.io/') !== -1) {\n- // \"homepage\": \"http://user.github.io/project\"\n- console.log(`The project was built assuming it is hosted at ${chalk.green(publicPath)}.`);\n- console.log(`You can control this with the ${chalk.green('homepage')} field in your ${chalk.cyan('package.json')}.`);\n- console.log();\n- console.log(`The ${chalk.cyan('dist')} folder is ready to be deployed.`);\n- console.log(`To publish it at ${chalk.green(homepagePath)}, run:`);\n- console.log();\n- console.log(` ${chalk.cyan('git')} commit -am ${chalk.yellow('\"Save local changes\"')}`);\n- console.log(` ${chalk.cyan('git')} checkout -B gh-pages`);\n- console.log(` ${chalk.cyan('git')} add -f dist`);\n- console.log(` ${chalk.cyan('git')} commit -am ${chalk.yellow('\"Rebuild website\"')}`);\n- console.log(` ${chalk.cyan('git')} filter-branch -f --prune-empty --subdirectory-filter dist`);\n- console.log(` ${chalk.cyan('git')} push -f origin gh-pages`);\n- console.log(` ${chalk.cyan('git')} checkout -`);\n- console.log();\n- } else if (publicPath !== '/') {\n- // \"homepage\": \"http://mywebsite.com/project\"\n- console.log(`The project was built assuming it is hosted at ${chalk.green(publicPath)}.`);\n- console.log(`You can control this with the ${chalk.green('homepage')} field in your ${chalk.cyan('package.json')}.`);\n- console.log();\nconsole.log(`The ${chalk.cyan('dist')} folder is ready to be deployed.`);\nconsole.log();\n- } else {\n- // no homepage or \"homepage\": \"http://mywebsite.com\"\n- console.log('The project was built assuming it is hosted at the server root.');\n- if (homepagePath) {\n- // \"homepage\": \"http://mywebsite.com\"\n- console.log(`You can control this with the ${chalk.green('homepage')} field in your ${chalk.cyan('package.json')}.`);\n- console.log();\n- } else {\n- // no homepage\n- console.log(`To override this, specify the ${chalk.green('homepage')} in your ${chalk.cyan('package.json')}.`);\n- console.log('For example, add this to build it for GitHub Pages:');\n- console.log();\n- console.log(` ${chalk.green('\"homepage\"')}${chalk.cyan(': ')}${chalk.green('\"http://myname.github.io/myapp\"')}${chalk.cyan(',')}`);\n- console.log();\n- }\n- console.log(`The ${chalk.cyan('dist')} folder is ready to be deployed.`);\n- console.log('You may also serve it locally with a static server:');\n- console.log();\n- console.log(` ${chalk.cyan('npm')} install -g pushstate-server`);\n- console.log(` ${chalk.cyan('pushstate-server')} dist`);\n- console.log(` ${chalk.cyan(openCommand)} http://localhost:9000`);\n- console.log();\n- }\n});\n}\n",
        "chatgpt_rag": "fix(build): Update build script to display appropriate messages based on build status"
    },
    {
        "msg": "feat(src/server/api/auth): add auth route for server",
        "diff": "diff --git a/src/server/api/auth/index.js b/src/server/api/auth/index.js import {Router} from 'express'\n+import jwt from 'jsonwebtoken'\n+import chalk from 'chalk'\n+// import validator from 'validator'\n+// {isLength, trim, isAlphanumeric, escape}\nconst router = Router()\n// define the home page route\nrouter.post('/', (req, res) => {\n- res.json({token: 'nothing'})\n+ // const {username, password} = req.body\n+ // const usernameValidated = validator.isLength(0, 36).is\n+ // const passwordValidated =\n+ const data = {username: 'cool_username_for_testing'}\n+ jwt.sign(data, process.env.JWT_SECRET, (err, token) => {\n+ if (err) {\n+ throw new Error(\n+ `Cant create JWT token based on input data: ${JSON.stringify(data)}`,\n+ err\n+ )\n+ }\n+ console.log(chalk.yellow(`Generated token for user: ${data.username}`))\n+ res.json({token})\n+ })\n})\nexport default router\n",
        "date": "04.08.2017 13:55:47",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "fix(init): fixes a wrong import inside the github authentication",
        "sim_diff": "diff --git a/src/utils/init/config-github.js b/src/utils/init/config-github.js @@ -2,7 +2,7 @@ const { Octokit } = require('@octokit/rest')\nconst chalk = require('chalk')\nconst { error: failAndExit, log } = require('../command-helpers')\n-const ghauth = require('../gh-auth')\n+const { getGitHubToken: ghauth } = require('../gh-auth')\nconst { createDeployKey, formatErrorMessage, getBuildSettings, saveNetlifyToml, setupSite } = require('./utils')\n",
        "chatgpt_rag": "feat(auth): implement JWT token generation in the authentication endpoint"
    },
    {
        "msg": "feat(server/ssr): move i18n stuff to i18n, fix state creation\nfeat(server/ssr): construct state using req.useragent, remove\nlocaleData requiring, remove translations creation",
        "diff": "diff --git a/src/server/ssr/index.js b/src/server/ssr/index.js * @desc\n*/\nimport React from 'react'\n-import {readFileSync} from 'fs' // readFile\n-import path from 'path'\n+import chalk from 'chalk'\n// import _ from 'lodash'\n-import {sync as globSync} from 'glob'\nimport {renderToString} from 'react-dom/server'\nimport {ServerStyleSheet, StyleSheetManager} from 'styled-components'\nimport {configureRootComponent, configureApp} from 'common/app'\n// import {addLocaleData} from 'react-intl'\nimport HtmlComponent from './HtmlComponent'\n+// $FlowFixMe\nimport assets from 'webpack-assets'\n+// $FlowFixMe\nimport faviconsAssets from 'favicons-assets'\n-import type {Node} from 'react'\n-\n-const translations = globSync('locals/*.json')\n- .map(filename => [\n- path.basename(filename, '.json'),\n- readFileSync(filename, 'utf8')\n- ])\n- .map(([locale, file]) => [locale, JSON.parse(file)])\n- .reduce((collection, [locale, messages]) => {\n- collection[locale] = messages\n- return collection\n- }, {})\n+import getI18nData from 'server/i18n'\nexport default (req: express$Request, res: express$Response) => {\n- const {isLoggedIn, token, lang} = req.user\n+ const {isLoggedIn, lang} = req.user\n+ const {isMobile} = req.useragent\n+ console.log(chalk.cyan(`MOBILE DEVICE: ${isMobile}`, JSON.stringify(req.useragent), lang))\n+ const meState = {auth: {isLoggedIn}}\n+ const layoutState = {isMobile}\nconst initialState: Object = isLoggedIn\n- ? {me: {auth: {isLoggedIn, token}}}\n- : {}\n- const localeData = require('react-intl/locale-data/' + (lang || 'en'))\n- const i18n = {\n- lang,\n- localeData,\n- locale: lang,\n- messages: translations[lang]\n- }\n- //\n+ ? {me: meState, layout: layoutState}\n+ : {layout: layoutState}\n+ const i18n = getI18nData(lang)\nconst sheet = new ServerStyleSheet()\nconst location: string = req.url\nconst context = {}\nconst {store, history, routes} = configureApp(initialState)\n- const RootComponent: Node = configureRootComponent({\n+ const RootComponent: React$Node = configureRootComponent({\nstore,\nhistory,\nroutes,\n",
        "date": "17.09.2017 14:25:22",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "docs: try sidebar",
        "sim_diff": "diff --git a/pages/docs/[[...slug]].js b/pages/docs/[[...slug]].js import Head from \"next/head\";\nimport Link from \"next/link\";\nimport { useRouter } from \"next/router\";\n-import { useState } from \"react\";\n+import { useState, useEffect, useRef } from \"react\";\nimport classnames from \"classnames\";\nimport { join } from \"path\";\nimport {\n@@ -17,6 +17,116 @@ import Sidebar from \"../../components/Sidebar\";\nimport markdownStyles from \"../../styles/markdown.module.css\";\nimport { decode } from \"html-entities\";\n+const TableOfContents = () => {\n+ const { nestedHeadings } = useHeadingsData();\n+ const [activeId, setActiveId] = useState();\n+ useIntersectionObserver(setActiveId);\n+ return (\n+ <nav\n+ className=\"sticky min-h-0 overflow-y-scroll w-52 flex-shrink-0 pb-24 hidden lg:block\"\n+ style={{ top: \"8rem\", height: \"calc(100vh - 16rem)\" }}\n+ >\n+ <Headings headings={nestedHeadings} activeId={activeId} />\n+ </nav>\n+ );\n+};\n+\n+const getNestedHeadings = (headingElements) => {\n+ const nestedHeadings = [];\n+\n+ headingElements.forEach((heading, index) => {\n+ const { innerText: title, id } = heading;\n+\n+ if (heading.nodeName === \"H2\") {\n+ nestedHeadings.push({ id, title, items: [] });\n+ } else if (heading.nodeName === \"H3\" && nestedHeadings.length > 0) {\n+ nestedHeadings[nestedHeadings.length - 1].items.push({\n+ id,\n+ title,\n+ });\n+ }\n+ });\n+\n+ return nestedHeadings;\n+};\n+\n+const useHeadingsData = () => {\n+ const [nestedHeadings, setNestedHeadings] = useState([]);\n+\n+ useEffect(() => {\n+ const headingElements = Array.from(document.querySelectorAll(\"h2, h3\"));\n+\n+ const newNestedHeadings = getNestedHeadings(headingElements);\n+ setNestedHeadings(newNestedHeadings);\n+ }, []);\n+\n+ return { nestedHeadings };\n+};\n+\n+const Headings = ({ headings, activeId }) => (\n+ <ul>\n+ {headings.map((heading) => (\n+ <li key={heading.id}>\n+ <a className=\"font-semibold\" href={`#${heading.id}`}>\n+ {heading.title}\n+ </a>\n+ {heading.items.length > 0 && (\n+ <ul className=\"pl-2\">\n+ {heading.items.map((child) => (\n+ <li\n+ key={child.id}\n+ className={child.id === activeId ? \"text-green\" : \"text-gray\"}\n+ >\n+ <a href={`#${child.id}`}>{child.title}</a>\n+ </li>\n+ ))}\n+ </ul>\n+ )}\n+ </li>\n+ ))}\n+ </ul>\n+);\n+\n+const useIntersectionObserver = (setActiveId) => {\n+ const headingElementsRef = useRef({});\n+ useEffect(() => {\n+ const callback = (headings) => {\n+ headingElementsRef.current = headings.reduce((map, headingElement) => {\n+ map[headingElement.target.id] = headingElement;\n+ return map;\n+ }, headingElementsRef.current);\n+\n+ const visibleHeadings = [];\n+ Object.keys(headingElementsRef.current).forEach((key) => {\n+ const headingElement = headingElementsRef.current[key];\n+ if (headingElement.isIntersecting) visibleHeadings.push(headingElement);\n+ });\n+\n+ const getIndexFromId = (id) =>\n+ headingElements.findIndex((heading) => heading.id === id);\n+\n+ if (visibleHeadings.length === 1) {\n+ setActiveId(visibleHeadings[0].target.id);\n+ } else if (visibleHeadings.length > 1) {\n+ const sortedVisibleHeadings = visibleHeadings.sort(\n+ (a, b) => getIndexFromId(a.target.id) > getIndexFromId(b.target.id)\n+ );\n+ setActiveId(sortedVisibleHeadings[0].target.id);\n+ }\n+ };\n+\n+ const observer = new IntersectionObserver(callback, {\n+ rootMargin: \"0px 0px -50% 0px\",\n+ });\n+\n+ const headingElements = Array.from(document.querySelectorAll(\"h2, h3\"));\n+\n+ headingElements.forEach((element) => observer.observe(element));\n+\n+ return () => observer.disconnect();\n+ }, [setActiveId]);\n+};\n+\nconst breadcrumbs = (posts, paths) => {\nconst results = [\n<Link href=\"/\">Urbit</Link>,\n@@ -172,6 +282,7 @@ export default function DocsLayout({\n)}\n</div>\n</ContentArea>\n+ <TableOfContents />\n</div>\n</>\n);\n",
        "chatgpt_rag": "server: update i18n data retrieval and add mobile device logging"
    },
    {
        "msg": "feat(server/ssr): add Lazy loading with SSR\nfeat(server/ssr): add lazy loading with SSR",
        "diff": "diff --git a/src/server/ssr/index.js b/src/server/ssr/index.js @@ -13,6 +13,7 @@ import assets from 'webpack-assets'\n// $FlowFixMe\nimport faviconsAssets from 'favicons-assets'\nimport getI18nData from 'server/i18n'\n+import {matchPath} from 'react-router'\nexport default async (req: express$Request, res: express$Response) => {\nconst {isLoggedIn, language} = req.user\n@@ -50,6 +51,18 @@ export default async (req: express$Request, res: express$Response) => {\ninitialState: preloadedState,\ni18n\n}\n+\n+ // FIXME: how to replace `let` and `for`?\n+ let lazyRoutes = routes.filter(a => a.lazy)\n+ for (var i = 0; i < lazyRoutes.length; i++) {\n+ let route = routes[i]\n+ if (matchPath(req.url, route)) {\n+ route.component = await routes[i].component().default\n+ route.lazy = false\n+ break\n+ }\n+ }\n+\nconst {beforeAppTag, afterAppTag} = HtmlComponent(props)\nres.writeHead(200, {\n",
        "date": "30.10.2017 00:37:17",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "fix(app-vite): fix various SSR TS types",
        "sim_diff": "diff --git a/app-vite/types/ssrmiddleware.d.ts b/app-vite/types/ssrmiddleware.d.ts -import { Express, Request, RequestHandler, Response, NextFunction, Server } from \"express\";\n+import { Express, Request, RequestHandler, Response, NextFunction } from \"express\";\n+import { Server } from \"http\";\nimport { ServeStaticOptions } from \"serve-static\";\ninterface RenderParams {\n@@ -59,29 +60,6 @@ interface SsrMiddlewareResolve {\npublic(...paths: string[]): string;\n}\n-interface SsrMiddlewareParams {\n- app: Express;\n- resolve: SsrMiddlewareResolve;\n- publicPath: string;\n- folders: SsrMiddlewareFolders;\n- /**\n- * Uses Vue and Vue Router to render the requested URL path.\n- * @returns the rendered HTML string to return to the client\n- */\n- render: SsrMiddlewareRender;\n- serve: SsrMiddlewareServe;\n-}\n-\n-export type SsrMiddlewareCallback = (\n- params: SsrMiddlewareParams\n-) => void | Promise<void>;\n-\n-interface SsrHandlerParams {\n- req: Request;\n- res: Response;\n- next: NextFunction;\n-}\n-\ninterface SsrCreateParams {\n/**\n* Terminal PORT env var or the default configured port\n@@ -103,7 +81,21 @@ export type SsrCreateCallback = (\nparams: SsrCreateParams\n) => Express | any;\n-interface SsrListenParams extends SsrCreateParams {\n+interface SsrMiddlewareParams extends SsrCreateParams {\n+ app: Express;\n+}\n+\n+export type SsrMiddlewareCallback = (\n+ params: SsrMiddlewareParams\n+) => void | Promise<void>;\n+\n+interface SsrHandlerParams {\n+ req: Request;\n+ res: Response;\n+ next: NextFunction;\n+}\n+\n+interface SsrListenParams extends SsrMiddlewareParams {\n/**\n* Wait for app to be initialized (run all SSR middlewares)\n* before starting to listen for clients\n@@ -115,7 +107,7 @@ interface SsrListenParams extends SsrCreateParams {\n}\nexport type SsrListenCallback = (\n- params: SsrCreateParams\n+ params: SsrListenParams\n) => Promise<Server>;\ninterface SsrCloseParams extends SsrListenParams {\n@@ -126,13 +118,9 @@ export type SsrCloseCallback = (\nparams: SsrCloseParams\n) => void;\n-interface SsrServeStaticContent {\n- path: string;\n- opts?: ServeStaticOptions<Response>;\n-}\n-\nexport type SsrServeStaticContentCallback = (\n- params: SsrServeStaticContent\n+ path: string,\n+ opts?: ServeStaticOptions<Response>\n) => RequestHandler<Response>;\nexport type SsrRenderPreloadTagCallback = (\n",
        "chatgpt_rag": "feat(server): implement lazy loading of routes in SSR index file"
    },
    {
        "msg": "feat(creset): reset styles on server using created hook",
        "diff": "diff --git a/packages/chakra-ui-core/src/CReset/CReset.js b/packages/chakra-ui-core/src/CReset/CReset.js @@ -36,7 +36,7 @@ const CReset = {\nprops: {\nconfig: Object\n},\n- mounted () {\n+ created () {\nconst { color, bg, borderColor, placeholderColor } = this.styleConfig[this.colorMode]\nuseTailwindPreflight(this.theme)\ninjectGlobal({\n",
        "date": "11.04.2020 22:27:05",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "feat",
        "sim_msg": "feat(vue): rename components `themeDark` prop to `dark`",
        "sim_diff": "diff --git a/src/vue/shared/mixins.js b/src/vue/shared/mixins.js import { isStringProp } from './utils';\nexport function colorClasses(props) {\n- const { color, colorTheme, textColor, bgColor, borderColor, rippleColor, themeDark } = props;\n+ const { color, colorTheme, textColor, bgColor, borderColor, rippleColor, dark } = props;\nreturn {\n- 'theme-dark': themeDark,\n+ dark,\n[`color-${color}`]: color,\n[`color-theme-${colorTheme}`]: colorTheme,\n[`text-color-${textColor}`]: textColor,\n@@ -21,7 +21,7 @@ export const colorProps = {\nbgColor: String,\nborderColor: String,\nrippleColor: String,\n- themeDark: Boolean,\n+ dark: Boolean,\n};\nexport const iconProps = {\n",
        "chatgpt_rag": "fix(chakra-ui-core): change lifecycle hook from mounted to created in CReset component"
    },
    {
        "msg": "feat(server/webpack.base): add 'webpack-assets' and 'favicons-assets' to aliases\nfeat(server/webpack.base): add 'webpack-assets' and 'favicons-assets'\nto aliases",
        "diff": "diff --git a/webpack_config/server/webpack.base.js b/webpack_config/server/webpack.base.js @@ -65,7 +65,9 @@ const baseWebpackConfig = {\nextensions: isomorphicWebpackConfig.resolve.extensions,\nmodules: isomorphicWebpackConfig.resolve.modules,\nalias: {\n- ...isomorphicWebpackConfig.resolve.alias\n+ ...isomorphicWebpackConfig.resolve.alias,\n+ 'webpack-assets': `${CLIENT_DIST_PATH}/webpack-assets.json`,\n+ 'favicons-assets': `${CLIENT_DIST_PATH}/favicons-stats.json`\n// create_server: createServerAliasPath\n}\n},\n",
        "date": "06.09.2017 12:14:52",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "chore: CopyWebpackPlugin error on windows due to path separators",
        "sim_diff": "diff --git a/webpack.config.js b/webpack.config.js @@ -116,7 +116,7 @@ module.exports = function (env) {\nglobOptions: { ignore: '**/*.js' },\n},\n{\n- from: path.join(__dirname, `${CODE_SOURCE_DIR}/extension/legacy/**/*.css`),\n+ from: path.join(__dirname, `${CODE_SOURCE_DIR}/extension/legacy/**/*.css`).replace(/\\\\/g, '/'),\nto: path.join(__dirname, `${BUILD_PATH}/web-accessibles`),\ncontext: 'src/extension',\n},\n@@ -124,7 +124,7 @@ module.exports = function (env) {\nfrom: path.join(\n__dirname,\n`${CODE_SOURCE_DIR}/extension/legacy/features/l10n/locales/*.js`\n- ),\n+ ).replace(/\\\\/g, '/'),\nto: path.join(__dirname, `${BUILD_PATH}/web-accessibles`),\ncontext: 'src/extension',\n},\n",
        "chatgpt_rag": "feat: Add webpack-assets and favicons-assets aliases to resolve in webpack base config"
    },
    {
        "msg": "feat: adding partner type to the list of partners",
        "diff": "diff --git a/common/constants/partners.js b/common/constants/partners.js import { s3 } from 'common/constants/urls';\n+export const PARTNER_TYPES = {\n+ PAID: 'PAID',\n+ KIND: 'IN-KIND',\n+};\n+\nconst partners = [\n{\nname: 'APEX Systems',\nlogoSource: `${s3}partnerLogos/apex_systems.png`,\nurl: 'https://apexsystems.com',\n+ type: PARTNER_TYPES.KIND,\n},\n{\nname: 'GitHub',\nlogoSource: `${s3}partnerLogos/github.png`,\nurl: 'https://github.com',\n+ type: PARTNER_TYPES.KIND,\n},\n{\nname: 'Slack',\nlogoSource: `${s3}partnerLogos/slack.png`,\nurl: 'https://slack.com/',\n+ type: PARTNER_TYPES.PAID,\n},\n{\nname: 'Heroku',\nlogoSource: `${s3}partnerLogos/heroku.png`,\nurl: 'https://heroku.com/',\n+ type: PARTNER_TYPES.KIND,\n},\n{\nname: '1Password',\nlogoSource: `${s3}partnerLogos/1password.png`,\nurl: 'https://1password.com/',\n+ type: PARTNER_TYPES.KIND,\n},\n{\nname: 'US Bank',\nlogoSource: `${s3}partnerLogos/usbank.png`,\nurl: 'https://usbank.com/index.html',\n+ type: PARTNER_TYPES.PAID,\n},\n{\nname: 'Threat Stack',\nlogoSource: `${s3}partnerLogos/threat_stack.png`,\nurl: 'https://threatstack.com',\n+ type: PARTNER_TYPES.PAID,\n},\n{\nname: \"O'Reilly Media\",\nlogoSource: `${s3}partnerLogos/oreilly.png`,\nurl: 'https://oreilly.com',\n+ type: PARTNER_TYPES.KIND,\n},\n{\nname: 'HackerRank',\nlogoSource: `${s3}partnerLogos/hackerrank.png`,\nurl: 'https://hackerrank.com',\n+ type: PARTNER_TYPES.KIND,\n},\n{\nname: 'Zapier',\nlogoSource: `${s3}partnerLogos/zapier.png`,\nurl: 'https://zapier.com',\n+ type: PARTNER_TYPES.KIND,\n},\n{\nname: 'LogRocket',\nlogoSource: `${s3}partnerLogos/logrocket.png`,\nurl: 'https://logrocket.com/',\n+ type: PARTNER_TYPES.KIND,\n},\n];\n",
        "date": "16.10.2019 13:22:30",
        "repo": "operationcode/front-end",
        "type": "feat",
        "sim_msg": "feat: add support for env variables to toggle feature flags",
        "sim_diff": "diff --git a/src/common/feature-flags.js b/src/common/feature-flags.js import config from './config';\n-const featureIsEnabled = featureName => !!config.features[featureName];\n+const featureIsEnabled = featureName => {\n+ if (process.env.hasOwnProperty('FEATURE_PAYMENT_CONTRACT')) {\n+ return !!process.env.FEATURE_PAYMENT_CONTRACT;\n+ }\n+ return !!config.features[featureName];\n+};\nexport { featureIsEnabled };\n",
        "chatgpt_rag": "feat: add support for partner types in partner constants"
    },
    {
        "msg": "feat(PopoverContent): add x-out-of-boundaries attribute\nCloses",
        "diff": "diff --git a/src/PopperContent.js b/src/PopperContent.js @@ -151,8 +151,8 @@ class PopperContent extends React.Component {\nmodifiers={extendedModifiers}\nplacement={placement}\n>\n- {({ ref, style, placement, arrowProps }) => (\n- <div ref={ref} style={style} className={popperClassName} x-placement={placement}>\n+ {({ ref, style, placement, outOfBoundaries, arrowProps }) => (\n+ <div ref={ref} style={style} className={popperClassName} x-placement={placement} x-out-of-boundaries={outOfBoundaries ? 'true' : undefined}>\n{children}\n{!hideArrow && <span ref={arrowProps.ref} className={arrowClassName} style={arrowProps.style} />}\n</div>\n",
        "date": "12.05.2020 20:14:43",
        "repo": "reactstrap/reactstrap",
        "type": "feat",
        "sim_msg": "fix: replace post link from modal",
        "sim_diff": "diff --git a/src/client/post/PostModal.js b/src/client/post/PostModal.js @@ -120,7 +120,7 @@ class PostModal extends React.Component {\n<a role=\"presentation\" onClick={this.handleHidePostModal} className=\"PostModal__action\">\n<i className=\"iconfont icon-close PostModal__icon\" />\n</a>\n- <Link to={`/@${author}/${permlink}`} className=\"PostModal__action\">\n+ <Link replace to={`/@${author}/${permlink}`} className=\"PostModal__action\">\n<i className=\"iconfont icon-send PostModal__icon\" />\n</Link>\n<a href={twitterShareURL} target=\"_blank\" className=\"PostModal__action\">\n",
        "chatgpt_rag": "refactor: update PopperContent component to handle out of boundaries placement"
    },
    {
        "msg": "feat(dumper): More robust",
        "diff": "diff --git a/src/platforms/browser/dumper.js b/src/platforms/browser/dumper.js @@ -115,6 +115,7 @@ BiwaScheme.Dumper = BiwaScheme.Class.create({\n},\ndump_closure: function(cls){\n+ if(!cls) return \"**BROKEN**\";\nif(cls.length == 0) return \"[]\";\nvar cls_num = null;\n@@ -127,7 +128,7 @@ BiwaScheme.Dumper = BiwaScheme.Class.create({\n}\nvar c = _.clone(cls);\n- var body = c.shift();\n+ var body = c.shift && c.shift();\nreturn [\n\"c\", cls_num, \" <span class='dump_closure'>free vars :</span> \",\nthis.dump_obj(c), \" <span class='dump_closure'>body :</span> \",\n",
        "date": "03.01.2020 19:27:33",
        "repo": "biwascheme/biwascheme",
        "type": "feat",
        "sim_msg": "fix: remove whitespace",
        "sim_diff": "diff --git a/src/lib/util.js b/src/lib/util.js @@ -1594,7 +1594,7 @@ const util = {\n*/\nhtmlRemoveWhiteSpace: function (html) {\nif (!html) return '';\n- return html.trim().replace(/<\\/?(?!strong|span|font|b|var|i|em|u|ins|s|strike|del|sub|sup|mark|a|label|code|summary)[^>^<]+>\\s+(?=<)/ig, function (m) { return m.trim(); });\n+ return html.trim().replace(/<\\/?(?!strong|span|font|b|var|i|em|u|ins|s|strike|del|sub|sup|mark|a|label|code|summary)[^>^<]+>\\s+(?=<)/ig, function (m) { return m.replace(/\\n/g, '').replace(/\\s+/, ' '); });\n},\n/**\n",
        "chatgpt_rag": "fix: handle edge case in dump_closure function"
    },
    {
        "msg": "feat(babel-loader): add supportsStaticESM option",
        "diff": "diff --git a/packages/razzle/config/babel-loader/razzle-babel-loader.js b/packages/razzle/config/babel-loader/razzle-babel-loader.js @@ -64,6 +64,7 @@ module.exports = babelLoader.custom(function(babel) {\nisServer: opts.isServer,\nisModern: opts.isModern,\nhasModern: opts.hasModern,\n+ supportsStaticESM: opts.supportsStaticESM,\ndevelopment: opts.development,\nshouldUseReactRefresh: opts.shouldUseReactRefresh,\n};\n@@ -101,6 +102,7 @@ module.exports = babelLoader.custom(function(babel) {\ndelete loader.distDir;\ndelete loader.isModern;\ndelete loader.hasModern;\n+ delete loader.supportsStaticESM;\ndelete loader.development;\ndelete loader.shouldUseReactRefresh;\nreturn { loader, custom };\n@@ -112,6 +114,7 @@ module.exports = babelLoader.custom(function(babel) {\nconst isServer = customOptions.isServer;\nconst isModern = customOptions.isModern;\nconst hasModern = customOptions.hasModern;\n+ const supportsStaticESM = customOptions.supportsStaticESM;\nconst development = customOptions.development;\nconst shouldUseReactRefresh = customOptions.shouldUseReactRefresh;\n@@ -134,6 +137,7 @@ module.exports = babelLoader.custom(function(babel) {\npresetOptions.caller.isServer = isServer;\npresetOptions.caller.isModern = isModern;\npresetOptions.caller.isDev = development;\n+ presetOptions.caller.supportsStaticESM = supportsStaticESM;\nconst emitWarning = this.emitWarning.bind(this);\nObject.defineProperty(presetOptions.caller, 'onWarning', {\n",
        "date": "01.02.2021 18:29:11",
        "repo": "jaredpalmer/razzle",
        "type": "feat",
        "sim_msg": "refactor(jest-preset): update for new babel config structure",
        "sim_diff": "diff --git a/packages/jest-preset/transforms/babel.js b/packages/jest-preset/transforms/babel.js @@ -2,7 +2,7 @@ var babelJest = require('babel-jest');\nvar loaderConfig = require('hops-build-config/sections/module-rules/babel');\n-var babelConfig = loaderConfig.node.use.options;\n+var babelConfig = loaderConfig.node.options;\nvar presetEnvConfig = babelConfig.presets[0][1];\n",
        "chatgpt_rag": "refactor(razzle): update babel loader for new custom options handling"
    },
    {
        "msg": "feat: support ctrl+l to clear\nAnd refactor the stdin handling",
        "diff": "diff --git a/lib/nodemon.js b/lib/nodemon.js @@ -96,45 +96,54 @@ function nodemon(settings) {\n});\n// echo out notices about running state\n- if (config.options.stdin && config.options.restartable) {\n- // allow nodemon to restart when the use types 'rs\\n'\n- process.stdin.resume();\n- process.stdin.setEncoding('utf8');\n- process.stdin.on('data', function (data) {\n- data = (data + '').trim().toLowerCase();\n-\n- // if the keys entered match the restartable value, then restart!\n- if (data === config.options.restartable) {\n- bus.emit('restart');\n- }\n- });\n- } else if (config.options.stdin) {\n- // if 'restartable' is disabled (via a nodemon.json)\n- // then it's possible we're being used with a REPL\n+ if (config.options.stdin) {\n// so let's make sure we don't eat the key presses\n// but also, since we're wrapping, watch out for\n- // special keys, like ctrl+c x 2 or '.exit' or ctrl+d\n+ // special keys, like ctrl+c x 2 or '.exit' or ctrl+d or ctrl+l\nvar ctrlC = false;\nvar buffer = '';\n+ const rs = config.options.restartable;\n+ process.stdin.setEncoding('utf8');\nprocess.stdin.on('data', function (data) {\n- buffer += data;\ndata = data.toString();\n- var chr = data.charCodeAt(0);\n+ buffer += data;\n+ const chr = data.charCodeAt(0);\n+\n+ // if restartable, echo back\n+ if (rs) {\n+ if (chr === 13) {\n+ process.stdout.write('\\n');\n+ }\n+ // this prevents cursor keys from working.\n+ process.stdout.write(String.fromCharCode(chr));\n+ }\n+\nif (chr === 3) {\n- if (ctrlC) {\n- process.exit();\n+ // if restartable, assume ctrl+c will break immediately\n+ if (ctrlC || rs) {\n+ process.exit(rs ? 1 : 0);\n}\nctrlC = true;\n- } else if (buffer === '.exit' || chr === 4) {\n+ return;\n+ } else if (buffer === '.exit' || chr === 4) { // ctrl+d\nprocess.exit();\n- } else if (ctrlC || chr === 10) {\n- ctrlC = false;\n+ } else if (chr === 13 || chr === 10) { // enter / carriage return\n+ const input = buffer.toString().trim().toLowerCase();\n+ if (input === rs) {\n+ bus.emit('restart');\n+ }\n+ buffer = '';\n+ } else if (chr === 12) { // ctrl+l\n+ console.clear();\nbuffer = '';\n}\n+ ctrlC = false;\n});\n+ if (process.stdin.setRawMode) {\nprocess.stdin.setRawMode(true);\n}\n+ }\nif (config.options.restartable) {\nutils.log.info('to restart at any time, enter `' +\n",
        "date": "10.07.2018 18:41:45",
        "repo": "remy/nodemon",
        "type": "feat",
        "sim_msg": "feat: add decoder&encoder to plugin",
        "sim_diff": "diff --git a/lib/plugins/index.js b/lib/plugins/index.js @@ -31,6 +31,7 @@ var MAX_AGE_HEADER = 'x-whistle-max-age';\nvar FULL_URL_HEADER = 'x-whistle-full-url';\nvar REAL_URL_HEADER = 'x-whistle-real-url';\nvar REQ_ID_HEADER = 'x-whistle-req-id';\n+var CODEC_VALUE_HEADER = 'x-whistle-codec-value';\nvar CUSTOM_PARSER_HEADER = 'x-whistle-frame-parser';\nvar STATUS_CODE_HEADER = 'x-whistle-status-code';\nvar LOCAL_HOST_HEADER = 'x-whistle-local-host';\n@@ -318,7 +319,9 @@ function addRuleHeaders(req, rules, headers) {\nif (req.reqId) {\nheaders[REQ_ID_HEADER] = req.reqId;\n}\n-\n+ if (req._codecValue) {\n+ headers[CODEC_VALUE_HEADER] = encodeURIComponent(req._codecValue);\n+ }\nif (req.customParser) {\nheaders[CUSTOM_PARSER_HEADER] = req.customParser;\n}\n@@ -356,6 +359,7 @@ function loadPlugin(plugin, callback) {\nFULL_URL_HEADER: FULL_URL_HEADER,\nREAL_URL_HEADER: REAL_URL_HEADER,\nREQ_ID_HEADER: REQ_ID_HEADER,\n+ CODEC_VALUE_HEADER: CODEC_VALUE_HEADER,\nCUSTOM_PARSER_HEADER: CUSTOM_PARSER_HEADER,\nSTATUS_CODE_HEADER: STATUS_CODE_HEADER,\nLOCAL_HOST_HEADER: LOCAL_HOST_HEADER,\n@@ -700,39 +704,68 @@ function getPluginRulesCallback(req, callback) {\n};\n}\n-function getCodec(type) {\n+function getCodec(type, hookName) {\nvar isRes = type[2] === 's';\n+ hookName = PLUGIN_HOOKS[hookName];\nreturn function(req, res, callback) {\nif (!isRes) {\ncallback = res;\nres = null;\n}\n- if (!req || (type !== 'reqDecoder' && req._codecPlugin)) {\n+ var plugin = req._codecPlugin;\n+ if (!req || plugin != null) {\nreturn callback();\n}\n+ if (!req._codecRule) {\nvar codec = rulesMgr.resolveCodec(req);\nreq._codecRule = codec;\n+ req._codecPlugin = '';\nif (!codec || !CODEC_PLUGIN_RE.test(codec.matcher)) {\nreturn callback();\n}\nvar name = RegExp.$1;\n- // var value = RegExp.$2 || '';\n- var plugin = _getPlugin(name + ':');\n+ var value = RegExp.$2;\n+ plugin = _getPlugin(name + ':');\n+ if (!plugin) {\n+ return callback();\n+ }\n+ req._codecValue = value;\nreq._codecPlugin = plugin;\n+ }\nloadPlugin(plugin, function(err, ports) {\nvar port = !err && ports && ports[type + 'Port'];\nif (!port) {\nreturn callback();\n}\n- callback();\n+ var headers = extend({}, isRes ? res.headers : req.headers);\n+ addRuleHeaders(req, req.rules || '', headers);\n+ headers[PLUGIN_HOOK_NAME_HEADER] = hookName;\n+ var done;\n+ var options = {\n+ proxyHost: LOCALHOST,\n+ proxyPort: port,\n+ headers: headers\n+ };\n+ var handleConnect = function(socket, _res) {\n+ !done && callback(socket);\n+ done = true;\n+ };\n+ var client = config.connect(options, handleConnect);\n+ client.on('error', function() {\n+ client = !done && config.connect(options, handleConnect);\n+ client && client.on('error', function() {\n+ !done && callback();\n+ done = true;\n+ });\n+ });\n});\n};\n}\n-pluginMgr.getReqEncoder = getCodec('reqEncoder');\n-pluginMgr.getReqDecoder = getCodec('reqDecoder');\n-pluginMgr.getResEncoder = getCodec('resEncoder');\n-pluginMgr.getResDecoder = getCodec('resDecoder');\n+pluginMgr.getReqEncoder = getCodec('reqEncoder', 'REQ_ENCODER');\n+pluginMgr.getReqDecoder = getCodec('reqDecoder', 'REQ_DECODER');\n+pluginMgr.getResEncoder = getCodec('resEncoder', 'RES_ENCODER');\n+pluginMgr.getResDecoder = getCodec('resDecoder', 'RES_DECODER');\npluginMgr.getRules = function(req, callback) {\ngetRulesMgr('rules', req, null, getPluginRulesCallback(req, callback));\n",
        "chatgpt_rag": "fix: handle special keys and restart functionality in nodemon"
    },
    {
        "msg": "feat: update Single Page Applications section",
        "diff": "diff --git a/website/pages/docs/single-page-applications.md b/website/pages/docs/single-page-applications.md -# [Single Page Applications](https://github.com/jaredpalmer/razzle/blob/master/examples/basic-spa/)\n+# Single Page Applications\nIn addition to universal/isomorphic applications, Razzle can build single page (or client-only) applications. To do this, remove `index.js` and `server.js` from the src folder, and create an `index.html` file inside the public folder with the following template:\n-```\n+```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n",
        "date": "06.10.2020 01:58:08",
        "repo": "jaredpalmer/razzle",
        "type": "feat",
        "sim_msg": "docs: update wildcard recipe md\n[skip ci]",
        "sim_diff": "diff --git a/recipes/redirect_uri_wildcards.md b/recipes/redirect_uri_wildcards.md ## `redirect_uri`\n-Install the `wildcards` package.\n+Install the `wildcard` package.\n```console\n-npm i wildcard\n+npm i wildcard@^1.1.2\n```\nUpdate whatever file holds your provider, e.g. `index.js` where the provider instance Client\n",
        "chatgpt_rag": "docs: update single page applications md\n[skip ci]"
    },
    {
        "msg": "feat(Switch): test",
        "diff": "diff --git a/packages/element3/packages/switch/__tests__/Switch.spec.js b/packages/element3/packages/switch/__tests__/Switch.spec.js @@ -162,4 +162,17 @@ describe('Switch', () => {\nexpect(wrapper.emitted('update:modelValue')).toEqual([['3']])\n})\n+ it('handleClick', async () => {\n+ const wrapper = mount(Switch, {\n+ props: {\n+ isChecked: true,\n+ disabled: false,\n+ activeValue: '2',\n+ inactiveValue: '3'\n+ }\n+ })\n+ await wrapper.find('.el-switch').trigger('click')\n+ expect(wrapper.emitted('update:modelValue')).toEqual([['3'], ['2']])\n+ expect(wrapper.emitted('update:change')).toEqual([['2']])\n+ })\n})\n",
        "date": "15.12.2020 12:10:38",
        "repo": "hug-sun/element3",
        "type": "feat",
        "sim_msg": "test(switch): add onchange callback to tests using checked prop",
        "sim_diff": "diff --git a/src/__experimental__/components/switch/switch.spec.js b/src/__experimental__/components/switch/switch.spec.js @@ -61,12 +61,12 @@ describe(\"Switch\", () => {\ndescribe(\"controlled behaviour\", () => {\nit(\"passes checked value to the CheckableInput\", () => {\n- const wrapper = render({ checked: true }, mount);\n+ const wrapper = render({ checked: true, onChange: jest.fn() }, mount);\nexpect(wrapper.find(CheckableInput).prop(\"checked\")).toBe(true);\n});\nit(\"reacts properly to checked prop change\", () => {\n- const wrapper = render({ checked: true }, mount);\n+ const wrapper = render({ checked: true, onChange: jest.fn() }, mount);\nexpect(wrapper.find(CheckableInput).prop(\"checked\")).toBe(true);\nact(() => {\nwrapper.setProps({ checked: false });\n@@ -75,7 +75,7 @@ describe(\"Switch\", () => {\nexpect(wrapper.find(CheckableInput).prop(\"checked\")).toBe(false);\n});\n- it(\"passess event to the provided onChange prop when change is triggered\", () => {\n+ it(\"passes event to the provided onChange prop when change is triggered\", () => {\nconst onChangeMock = jest.fn();\nconst event = {\ntarget: {\n@@ -115,12 +115,12 @@ describe(\"Switch\", () => {\ndescribe(\"default translation\", () => {\nit(\"has default translation for on\", () => {\n- const wrapper = render({ checked: true }, mount);\n+ const wrapper = render({ checked: true, onChange: jest.fn() }, mount);\nexpect(getLabel(wrapper)).toBe(\"ON\");\n});\nit(\"has default translation for off\", () => {\n- const wrapper = render({ checked: false }, mount);\n+ const wrapper = render({ checked: false, onChange: jest.fn() }, mount);\nexpect(getLabel(wrapper)).toBe(\"OFF\");\n});\n});\n@@ -131,12 +131,12 @@ describe(\"Switch\", () => {\n});\nit(\"can use i18n for on\", () => {\n- const wrapper = render({ checked: true }, mount);\n+ const wrapper = render({ checked: true, onChange: jest.fn() }, mount);\nexpect(getLabel(wrapper)).toBe(\"SUR\");\n});\nit(\"can use i18n for off\", () => {\n- const wrapper = render({ checked: false }, mount);\n+ const wrapper = render({ checked: false, onChange: jest.fn() }, mount);\nexpect(getLabel(wrapper)).toBe(\"DE\");\n});\n});\n",
        "chatgpt_rag": "feat(switch): add handleClick test case to test switch component functionality"
    },
    {
        "msg": "feat(Glo): add Glo component",
        "diff": "diff --git a/components/Glo/index.js b/components/Glo/index.js -import 'glo/js/namespace';\n-import 'glo/js/coordinates.js';\n-import 'glo/js/node_group.js';\n-import 'glo/js/canvas.js';\n-import 'glo/js/node_generation.js';\n-import 'glo/js/edge_generation.js';\n-import 'glo/js/helpers.js';\n-import 'glo/js/glo.js';\n-import 'glo/js/api.js';\n-import 'glo/js/techniques.js';\n-import 'glo/js/figures.js';\n-\n-import * as d3 from 'd3';\n+import d3 from 'glo/node_modules/d3';\n+import GLO from 'glo';\nimport VisComponent from '../../VisComponent';\n+const colorNodes = (glo, field, type) => {\n+ glo.glo.node_attr({\n+ [field]: type\n+ });\n+\n+ glo.glo.color_nodes_by(field);\n+};\n+\nexport default class Glo extends VisComponent {\n- constructor (el, {nodes, edges, width = 960, height = 540}) {\n+ constructor (el, {nodes, edges, nodeAttr, edgeAttr, width = 960, height = 540}) {\nsuper(el);\n// Empty the top-level div.\n@@ -32,15 +29,85 @@ export default class Glo extends VisComponent {\n// Construct a GLO object.\nthis.glo = new GLO.GLO(d3.select(this.svg))\n.nodes(nodes)\n- .edges(edges)\n- .draw();\n-\n- console.log('Glo.constructor()');\n- console.log('this.glo', this.glo);\n+ .edges(edges);\n}\nrender () {\n- console.log('Glo.render()');\n- console.log('GLO object', GLO);\n+ this.glo.draw();\n+ }\n+\n+ colorNodesDiscrete (field) {\n+ colorNodes(this, field, 'discrete');\n+ }\n+\n+ colorNodesContinuous(field) {\n+ colorNodes(this, field, 'continuous');\n+ }\n+\n+ colorNodesDefault () {\n+ this.glo.color_nodes_by_constant();\n+ }\n+\n+ sizeNodes (field) {\n+ this.glo.node_attr({\n+ [field]: 'continuous'\n+ });\n+\n+ this.glo.size_nodes_by(field);\n+ }\n+\n+ sizeNodesDefault () {\n+ this.glo.size_nodes_by_constant();\n+ }\n+\n+ distributeNodes(axis, attr = null) {\n+ if (attr === null) {\n+ this.glo.evenly_distribute_nodes_on(axis);\n+ } else {\n+ this.glo.evenly_distribute_nodes_on(axis, {\n+ by: attr\n+ });\n+ }\n+ }\n+\n+ positionNodes(axis, value) {\n+ this.glo.node_attr({\n+ [value]: 'continuous'\n+ });\n+\n+ this.glo.position_nodes_on(axis, value);\n+ }\n+\n+ forceDirected () {\n+ this.glo.apply_force_directed_algorithm_to_nodes();\n+ }\n+\n+ showEdges () {\n+ this.glo.show_all_edges();\n+ }\n+\n+ hideEdges () {\n+ this.glo.hide_edges();\n+ }\n+\n+ fadeEdges () {\n+ this.glo.show_edges_as_faded();\n+ }\n+\n+ solidEdges () {\n+ this.hideEdges();\n+ this.showEdges();\n+ }\n+\n+ incidentEdges () {\n+ this.glo.show_incident_edges();\n+ }\n+\n+ curvedEdges () {\n+ this.glo.display_edges_as_curved_lines();\n+ }\n+\n+ straightEdges () {\n+ this.glo.display_edges_as_straight_lines();\n}\n}\n",
        "date": "04.05.2017 16:30:57",
        "repo": "kitware/candela",
        "type": "feat",
        "sim_msg": "feat(tile): adds support for passing a node UI through layer config",
        "sim_diff": "diff --git a/src/os/layer/config/abstracttilelayerconfig.js b/src/os/layer/config/abstracttilelayerconfig.js @@ -60,6 +60,13 @@ os.layer.config.AbstractTileLayerConfig = function() {\n* @protected\n*/\nthis.urls = [];\n+\n+ /**\n+ * Node UI string for the layer being created.\n+ * @type {?string}\n+ * @protected\n+ */\n+ this.layerNodeUi = null;\n};\ngoog.inherits(os.layer.config.AbstractTileLayerConfig, os.layer.config.AbstractLayerConfig);\n@@ -146,6 +153,13 @@ os.layer.config.AbstractTileLayerConfig.prototype.initializeConfig = function(op\nthis.crossOrigin = null;\noptions['crossOrigin'] = null;\n}\n+\n+ if (options['layerNodeUi']) {\n+ // pull the nodeUi off the options object to prevent it from being persisted by the layer\n+ this.layerNodeUi = options['layerNodeUi'];\n+ delete options['layerNodeUi'];\n+ }\n+\n// tile class\nthis.layerClass = /** @type {Function} */ (options['layerClass']) || this.layerClass;\nthis.tileClass = /** @type {os.TileClass} */ (options['tileClass']) || this.tileClass;\n@@ -215,6 +229,10 @@ os.layer.config.AbstractTileLayerConfig.prototype.configureLayer = function(laye\nif (options['explicitType'] != null) {\nlayer.setExplicitType(/** @type {string} */ (options['explicitType']));\n}\n+\n+ if (this.layerNodeUi) {\n+ layer.setNodeUI(this.layerNodeUi);\n+ }\n};\n",
        "chatgpt_rag": "feat(glo): adds methods for coloring, sizing, distributing, positioning, and styling edges in Glo component"
    },
    {
        "msg": "feat(Dashboard): remove old redux stuff from Dashboard container",
        "diff": "diff --git a/src/common/containers/Dashboard/index.jsx b/src/common/containers/Dashboard/index.jsx // @flow\nimport React, {Component} from 'react'\nimport {connect} from 'react-redux'\n-import {Loader} from 'semantic-ui-react'\nimport {Helmet} from 'react-helmet'\n-//\nimport DashboardComponent from './components'\n-import {GET_POSTS} from 'actions/posts'\n-import {getEntitiesPostsState} from 'selectors'\n+\nimport type {GlobalState} from 'reducers'\n-type Props = {\n- posts: Object,\n- postsLoaded: boolean,\n- postsLoading: boolean,\n- count: number,\n- getPosts: () => void\n-}\n+type Props = any\nclass Dashboard extends Component {\nprops: Props\n- componentDidMount () {\n- this.props.getPosts()\n- }\n-\nrender () {\n- const {posts, postsLoaded, postsLoading, count} = this.props\nreturn (\n<div>\n<Helmet>\n<title>Noir:Dashboard</title>\n</Helmet>\n- {postsLoaded\n- ? <DashboardComponent\n- {...{posts, postsLoaded, postsLoading, count}}\n- />\n- : <Loader active>Loading...</Loader>}\n+ <DashboardComponent />\n</div>\n)\n}\n}\nfunction mapStateToProps (state: GlobalState) {\n- const postsState = getEntitiesPostsState(state)\n- const postsLoaded = postsState.isLoaded\n- const postsLoading = postsState.isLoading\n- const posts = postsState.entities\n- const {count} = postsState\n- return {\n- posts,\n- postsLoading,\n- postsLoaded,\n- count\n- }\n+ return {}\n}\nfunction mapDispatchToProps (dispatch) {\n- return {\n- getPosts () {\n- dispatch(GET_POSTS())\n- }\n- }\n+ return {}\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard)\n",
        "date": "30.09.2017 14:35:18",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "chore: clean unnecessary code out of checkoutComplete",
        "sim_diff": "diff --git a/src/pages/checkoutComplete.js b/src/pages/checkoutComplete.js import React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\n-import { Router } from \"routes\";\n-import { observer } from \"mobx-react\";\nimport Helmet from \"react-helmet\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport OrderFulfillmentGroup from \"components/OrderFulfillmentGroup\";\nimport PageLoading from \"components/PageLoading\";\n-import withCart from \"containers/cart/withCart\";\nimport withOrder from \"containers/order/withOrder\";\nconst styles = (theme) => ({\n@@ -30,61 +27,18 @@ const styles = (theme) => ({\ndisplay: \"flex\",\njustifyContent: \"center\"\n},\n- checkoutTitleContainer: {\n- alignSelf: \"flex-end\",\n- width: \"8rem\",\n- [theme.breakpoints.up(\"md\")]: {\n- width: \"10rem\"\n- }\n- },\n- checkoutTitle: {\n- fontSize: \"1.125rem\",\n- color: theme.palette.reaction.black35,\n- display: \"inline\",\n- marginLeft: \"0.3rem\"\n- },\nflexContainer: {\ndisplay: \"flex\",\nflexDirection: \"column\"\n- },\n- headerContainer: {\n- display: \"flex\",\n- justifyContent: \"space-between\",\n- marginBottom: \"2rem\"\n- },\n- emptyCartContainer: {\n- display: \"flex\",\n- justifyContent: \"center\",\n- alignItems: \"center\"\n- },\n- emptyCart: {\n- display: \"flex\",\n- justifyContent: \"center\",\n- alignItems: \"center\",\n- width: 320,\n- height: 320\n- },\n- logo: {\n- color: theme.palette.reaction.reactionBlue,\n- marginRight: theme.spacing.unit,\n- borderBottom: `solid 5px ${theme.palette.reaction.reactionBlue200}`\n}\n});\n-@withCart\n@withOrder\n-@observer\n@withStyles(styles, { withTheme: true })\nclass CheckoutComplete extends Component {\nstatic propTypes = {\nclasses: PropTypes.object,\n- clearAuthenticatedUsersCart: PropTypes.func.isRequired,\n- client: PropTypes.object.isRequired,\n- hasMoreCartItems: PropTypes.bool,\nisLoadingOrder: PropTypes.bool,\n- loadMoreCartItems: PropTypes.func,\n- onChangeCartItemsQuantity: PropTypes.func,\n- onRemoveCartItems: PropTypes.func,\norder: PropTypes.shape({\nemail: PropTypes.string.isRequired,\nfulfillmentGroups: PropTypes.arrayOf(PropTypes.object).isRequired,\n@@ -98,18 +52,6 @@ class CheckoutComplete extends Component {\ntheme: PropTypes.object.isRequired\n};\n- state = {};\n-\n- componentDidMount() {\n- const { clearAuthenticatedUsersCart } = this.props;\n-\n- clearAuthenticatedUsersCart();\n- }\n-\n- handleCartEmptyClick = () => {\n- Router.pushRoute(\"/\");\n- }\n-\nrenderFulfillmentGroups() {\nconst { classes, order } = this.props;\n",
        "chatgpt_rag": "chore: clean unnecessary code out of Dashboard component"
    },
    {
        "msg": "feat(webpack.isomorphic): add i18n folder to aliases",
        "diff": "diff --git a/webpack_config/webpack.isomorphic.js b/webpack_config/webpack.isomorphic.js @@ -25,6 +25,7 @@ export default {\n// Aliases that both server and client use\n// Probably, it's a bad example, because here we defined only client's aliases.\nalias: {\n+ i18n: `${srcCommonPath}/i18n/`,\nactions: `${srcCommonPath}/actions/`,\napi: `${srcCommonPath}/api/`,\ncomponents: `${srcCommonPath}/components/`,\n",
        "date": "06.09.2017 12:14:23",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "build(webpack): production outputs with and without polyfill",
        "sim_diff": "diff --git a/webpack.config.js b/webpack.config.js @@ -68,4 +68,18 @@ if (devMode) {\n}))\n}\n-module.exports = config\n+module.exports = devMode\n+ // single config object for dev server\n+ ? config\n+ // production outputs with and without polyfill\n+ : [\n+ config,\n+ {\n+ ...config,\n+ output: {\n+ ...output,\n+ path: path.join(output.path, 'root')\n+ },\n+ externals\n+ }\n+ ]\n",
        "chatgpt_rag": "feat(webpack): added alias for i18n in webpack config for isomorphic setup"
    },
    {
        "msg": "feat(server): add useragent middleware",
        "diff": "diff --git a/src/server/middlewares/index.js b/src/server/middlewares/index.js @@ -8,6 +8,7 @@ import compression from 'compression'\nimport cookieParser from 'cookie-parser'\nimport bodyParser from 'body-parser'\nimport morgan from 'morgan'\n+import useragent from 'express-useragent'\nimport authMiddleware from './auth'\nexport default (app: express$Application): express$Application => {\n@@ -22,6 +23,7 @@ export default (app: express$Application): express$Application => {\n})\n)\napp.use(bodyParser.json())\n+ app.use(useragent.express())\napp.use(authMiddleware)\nreturn app\n",
        "date": "17.09.2017 14:26:26",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "feat: add route for tags",
        "sim_diff": "diff --git a/src/server.js b/src/server.js @@ -21,6 +21,12 @@ app.prepare()\n// app.render(req, res, actualPage, queryParams);\n// });\n+ server.get(\"/tag/:slug\", (req, res) => {\n+ const actualPage = \"/\";\n+ const queryParams = { slug: req.params.slug };\n+ app.render(req, res, actualPage, queryParams);\n+ });\n+\nserver.get(\"*\", (req, res) => handle(req, res));\n/* END EXPRESS ROUTES */\n",
        "chatgpt_rag": "feat: add useragent middleware for detecting user agent information"
    },
    {
        "msg": "feat: checks for `$grid-row-columns`",
        "diff": "diff --git a/scss/mixins/_grid.scss b/scss/mixins/_grid.scss @include make-col-auto();\n}\n+ @if $grid-row-columns > 0 {\n@for $i from 1 through $grid-row-columns {\n.row-cols#{$infix}-#{$i} {\n@include row-cols($i);\n}\n}\n+ }\n.col#{$infix}-auto {\n@include make-col-auto();\n",
        "date": "16.04.2020 20:15:51",
        "repo": "coreui/coreui",
        "type": "feat",
        "sim_msg": "feat(layout/grid): move to with property for grid items",
        "sim_diff": "diff --git a/components/layout/grid/src/index.scss b/components/layout/grid/src/index.scss @include grid-align-items($ai-layout-grid);\n@include grid-justify-content($jc-layout-grid);\n+ @include media-breakpoint-up(s) {\n+ flex-wrap: nowrap;\n+ }\n+\n&-item {\nbox-sizing: border-box;\nflex-grow: 0;\nmargin: 0;\n+ min-width: 100%;\npadding: 0 $layout-grid-gap;\n@include grid-item-sizes($breakpoints, $grid-columns);\n}\n",
        "chatgpt_rag": "feat(grid): add conditional loop for generating row columns"
    },
    {
        "msg": "feat: Add banner",
        "diff": "diff --git a/rollup.config.js b/rollup.config.js import { terser } from \"rollup-plugin-terser\"\n+import { VERSION } from \"./src/version.js\";\n+\n+const banner = `/*\n+ * BiwaScheme ${VERSION} - R6RS/R7RS Scheme in JavaScript\n+ *\n+ * Copyright (c) 2007-${(new Date).getFullYear()} Yutaka HARA (http://www.biwascheme.org/)\n+ * Licensed under the MIT license.\n+ */`\nexport default {\n- plugins: [\n- terser({ output: { comments: /@license/i } }),\n- ],\ninput: \"src/main-browser.js\",\noutput: [\n{\n@@ -11,13 +16,15 @@ export default {\nformat: \"iife\",\nname: \"BiwaScheme\",\nstrict: false,\n+ banner: banner,\n},\n{\nfile: \"release/biwascheme-min.js\",\nformat: \"iife\",\nname: \"BiwaScheme\",\nstrict: false,\n- plugins: [terser()],\n+ banner: banner,\n+ plugins: [terser({output: {comments: /Copyright/}})],\n},\n]\n}\n",
        "date": "26.06.2020 00:15:43",
        "repo": "biwascheme/biwascheme",
        "type": "feat",
        "sim_msg": "build(rollup): remove legacy plugins",
        "sim_diff": "diff --git a/rollup.config.js b/rollup.config.js -import flow from 'rollup-plugin-flow';\nimport commonjs from 'rollup-plugin-commonjs';\nimport resolve from 'rollup-plugin-node-resolve';\nimport { uglify } from 'rollup-plugin-uglify';\nimport babel from 'rollup-plugin-babel';\nimport { terser } from 'rollup-plugin-terser';\n-import flowEntry from 'rollup-plugin-flow-entry';\nimport { main, module, dependencies, peerDependencies } from './package.json';\n-const configuredFlow = flow({ all: true, pretty: true });\n-\nexport default [\n{\ninput: './src/index.js',\n@@ -16,20 +12,12 @@ export default [\nfile: main,\nformat: 'cjs',\nindent: false,\n- sourcemap: true,\n},\nexternal: [\n...Object.keys(dependencies || {}),\n...Object.keys(peerDependencies || {}),\n],\n- plugins: [\n- configuredFlow,\n- babel(),\n- uglify(),\n- resolve(),\n- commonjs(),\n- flowEntry(),\n- ],\n+ plugins: [babel(), uglify(), resolve(), commonjs()],\n},\n{\ninput: './src/index.js',\n@@ -37,19 +25,11 @@ export default [\nfile: module,\nformat: 'es',\nindent: false,\n- sourcemap: true,\n},\nexternal: [\n...Object.keys(dependencies || {}),\n...Object.keys(peerDependencies || {}),\n],\n- plugins: [\n- configuredFlow,\n- resolve(),\n- babel(),\n- terser(),\n- commonjs(),\n- flowEntry(),\n- ],\n+ plugins: [resolve(), babel(), terser(), commonjs()],\n},\n];\n",
        "chatgpt_rag": "build(rollup): update banner and terser plugin configuration"
    },
    {
        "msg": "feat(config): Change to temporary credentials",
        "diff": "diff --git a/config/environment.js b/config/environment.js /* eslint-env node */\nmodule.exports = function(environment) {\n- let ALGOLIA_APP_ID = process.env.ALGOLIA_APP_ID || 'BH4D9OD16A';\n- let ALGOLIA_API_KEY = process.env.ALGOLIA_API_KEY || '92d3556bc9a494d48e7054fbb4c4ce6f';\n+ let ALGOLIA_APP_ID = process.env.ALGOLIA_APP_ID || 'N4SO04CV0R';\n+ let ALGOLIA_API_KEY = process.env.ALGOLIA_API_KEY || '0b28a7a3adf986fa5d402567d9d8b850';\nlet ENV = {\nmodulePrefix: 'ember-api-docs',\n",
        "date": "16.08.2017 22:17:51",
        "repo": "ember-learn/ember-api-docs",
        "type": "feat",
        "sim_msg": "build(eslint): set to 2017 use spread",
        "sim_diff": "diff --git a/.eslintrc.js b/.eslintrc.js @@ -2,8 +2,11 @@ module.exports = {\nplugins: ['node'],\nextends: ['eslint:recommended', 'plugin:node/recommended'],\nparserOptions: {\n- ecmaVersion: 6,\n- sourceType: 'script'\n+ ecmaVersion: 2017,\n+ sourceType: 'script',\n+ ecmaFeatures: {\n+ experimentalObjectRestSpread: true\n+ }\n},\nenv: {\nes6: true,\n",
        "chatgpt_rag": "build(environment): update ALGOLIA credentials"
    },
    {
        "msg": "feat: keep contrast on `.table-dark`\nIn case we set `$body-bg` to a dark color, we have to keep table contrast relevant.",
        "diff": "diff --git a/scss/_variables.scss b/scss/_variables.scss @@ -343,7 +343,7 @@ $table-dark-bg: $gray-900 !default;\n$table-dark-accent-bg: rgba($white, .05) !default;\n$table-dark-hover-bg: rgba($white, .075) !default;\n$table-dark-border-color: lighten($gray-900, 7.5%) !default;\n-$table-dark-color: $body-bg !default;\n+$table-dark-color: $white !default;\n$table-striped-order: odd !default;\n",
        "date": "16.09.2018 11:06:53",
        "repo": "coreui/coreui",
        "type": "feat",
        "sim_msg": "feat(pixels): add my new pixel (6, 24)",
        "sim_diff": "diff --git a/_data/pixels.json b/_data/pixels.json {\"y\": 24, \"x\": 0, \"color\": \"#00661b\", \"username\": \"lgm527\"},\n{\"y\": 24, \"x\": 2, \"color\": \"#e91e63\", \"username\": \"chinaglia-rafa\"},\n{\"y\": 24, \"x\": 4, \"color\": \"#ff7700\", \"username\": \"schillingjerrid\"},\n+ {\"y\": 24, \"x\": 6, \"color\": \"#aa2211\", \"username\": \"mssreerag\"},\n{\"y\": 24, \"x\": 7, \"color\": \"#B6084F\", \"username\": \"didacta\"},\n{\"y\": 24, \"x\": 12, \"color\": \"#D6FF79\", \"username\": \"Bravolly\"},\n{\"y\": 24, \"x\": 13, \"color\": \"#0f4512\", \"username\": \"fluctix\"},\n",
        "chatgpt_rag": "fix(variables): update $table-dark-color to $white in _variables.scss"
    },
    {
        "msg": "feat: Can filter based on public key",
        "diff": "diff --git a/frontend/leaderboard/src/Metrics.re b/frontend/leaderboard/src/Metrics.re @@ -238,6 +238,9 @@ let calculateAllUsers = metrics => {\nlet echoBotPublicKeys = [\n\"B62qndJi5mnRoBZ8SAYDM1oR2SgAk5WpZC8hGpJUZ4e64kDHGbFMeLJ\",\n];\n+\n+let excludePublicKeys = [];\n+\nlet calculateMetrics = blocks => {\nlet blocksCreated = getBlocksCreatedByUser(blocks);\nlet transactionSent = getTransactionSentByUser(blocks);\n@@ -257,6 +260,7 @@ let calculateMetrics = blocks => {\nthrowAwayValues(coinbaseReceiverChallenge),\nthrowAwayValues(createAndSendToken),\n])\n+ |> StringMap.filter((key, _) => {!List.mem(key, excludePublicKeys)})\n|> StringMap.mapi((key, _) =>\n{\nTypes.Metrics.blocksCreated: StringMap.find_opt(key, blocksCreated),\n",
        "date": "29.12.2020 17:15:41",
        "repo": "minaprotocol/mina",
        "type": "feat",
        "sim_msg": "fix(tx-history): update text and value for failed tx",
        "sim_diff": "diff --git a/src/renderer/transaction/transactions-history/index.jsx b/src/renderer/transaction/transactions-history/index.jsx @@ -111,11 +111,25 @@ const getCryptoType = transaction => {\nconst getCustomStatusText = (transaction, sent) => {\nlet cryptoType = getCryptoType(transaction);\n+ if (transaction.isError === 1) {\n+ if (sent) {\n+ return `Failed to send ${cryptoType}`;\n+ } else {\n+ return `Failed to receive ${cryptoType}`;\n+ }\n+ } else {\nif (sent) {\nreturn `Sent ${cryptoType}`;\n} else {\nreturn `Received ${cryptoType}`;\n}\n+ }\n+};\n+\n+const getCustomValue = (transaction, sent) => {\n+ if (transaction.isError !== 1) {\n+ return `${sent ? '-' : '+'}${convertExponentialToDecimal(transaction.value)}`;\n+ }\n};\nconst getAbrDateFromTimestamp = timestamp => {\n@@ -266,8 +280,10 @@ class TransactionsHistory extends Component {\n</TableCell>\n<TableCell align=\"right\">\n<Typography component=\"span\" variant=\"body2\">\n- {this.hasSent(transaction) ? '- ' : '+ '}\n- {convertExponentialToDecimal(transaction.value)}\n+ {getCustomValue(\n+ transaction,\n+ this.hasSent(transaction)\n+ )}\n</Typography>\n</TableCell>\n<TableCell\n",
        "chatgpt_rag": "feat(metrics): add filter for excluding specific public keys"
    },
    {
        "msg": "feat: declare ViewOptions in vega-typings",
        "diff": "diff --git a/packages/vega-typings/types/runtime/index.d.ts b/packages/vega-typings/types/runtime/index.d.ts @@ -55,10 +55,7 @@ export interface ToCanvasOptions {\nexternalContext?: any;\n}\n-export class View {\n- constructor(\n- runtime: Runtime,\n- opt?: {\n+export interface ViewOptions {\nbackground?: Color;\nbind?: Element | string;\ncontainer?: Element | string;\n@@ -70,8 +67,10 @@ export class View {\ntooltip?: TooltipHandler;\nlocale?: LocaleFormatters;\nexpr?: any;\n- },\n- );\n+}\n+\n+export class View {\n+ constructor(runtime: Runtime, opt?: ViewOptions);\n// View Configuration\n",
        "date": "11.11.2020 20:37:04",
        "repo": "vega/vega",
        "type": "feat",
        "sim_msg": "refactor(cdr-tooltip): remove unused variable",
        "sim_diff": "diff --git a/src/components/tooltip/CdrTooltip.vue b/src/components/tooltip/CdrTooltip.vue <script>\n-import { useCssModule, defineComponent, defineEmits, useSlots, ref, onMounted, watch } from 'vue';\n+import { useCssModule, defineComponent, useSlots, ref, onMounted, watch } from 'vue';\nimport mapClasses from '../../utils/mapClasses.js';\nimport CdrPopup from '../popup/CdrPopup.vue';\nimport propValidator from '../../utils/propValidator.js';\n",
        "chatgpt_rag": "refactor(vega-typings): simplify View constructor and remove unnecessary options"
    },
    {
        "msg": "feat(styles): duplicate some styles to make SSR result nicer",
        "diff": "diff --git a/src/common/styles/global.jsx b/src/common/styles/global.jsx @@ -5,6 +5,26 @@ injectGlobal`\nbox-sizing: border-box;\n}\n+ body {\n+ margin: 0;\n+ padding: 0;\n+ overflow-x: hidden;\n+ min-width: 320px;\n+ background: white;\n+ font-family: 'Lato', 'Helvetica Neue', Arial, Helvetica, sans-serif;\n+ font-size: 14px;\n+ line-height: 1.4285em;\n+ color: rgba(0, 0, 0, 0.87);\n+ }\n+\n+ .pushable {\n+ height: 100%;\n+ overflow-x: hidden;\n+ padding: 0em !important;\n+ -webkit-transform: translate3d(0, 0, 0);\n+ transform: translate3d(0, 0, 0);\n+ }\n+\n${''/* body ::-webkit-scrollbar {\nwidth: 0;\n}\n",
        "date": "03.11.2017 16:38:10",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "chore: updating defaultTheme with a few font styles",
        "sim_diff": "diff --git a/package/src/defaultComponentTheme.js b/package/src/defaultComponentTheme.js @@ -92,6 +92,9 @@ const teal600 = \"#34584f\";\n* Default Theme Typography\n*/\n+// font family\n+const fontFamily = \"'Source Sans Pro', 'Helvetica Neue', Helvetica, sans-serif\";\n+\n// font scale\nconst baseFontSize = 16; // pixels\nconst fontSize12 = `${baseFontSize * 0.75}px`;\n@@ -154,6 +157,7 @@ const defaultStyles = {\nrui_color_default: black55,\nrui_color_disabled: black25,\nrui_color_black02: black02,\n+ rui_color_black05: black05,\nrui_color_black30: black30,\nrui_color_error: red,\nrui_color_stockWarning: red,\n@@ -167,6 +171,8 @@ const defaultStyles = {\nrui_color_coolGrey600: coolGrey600,\nrui_color_forestGreen300: forestGreen300,\nrui_color_white: white,\n+ rui_font_family: fontFamily,\n+ rui_font_size_small: fontSize14,\nrui_font_weight_light: fontWeightLight,\nrui_font_weight_normal: fontWeightRegular,\nrui_font_weight_bold: fontWeightBold,\n",
        "chatgpt_rag": "style: updating global styles for body and .pushable class"
    },
    {
        "msg": "feat: Added ties to top N points",
        "diff": "diff --git a/frontend/leaderboard/src/Points.re b/frontend/leaderboard/src/Points.re @@ -40,19 +40,32 @@ let applyTopNPoints =\nArray.sort(f, metricsArray);\nBelt.Array.reverseInPlace(metricsArray);\n- metricsArray |> Array.iter(Js.log);\n+ metricsArray\n+ |> Array.iteri((index, metric) => {\n+ Js.log(\"index: \" ++ string_of_int(index));\n+ Js.log(\"metric: \");\n+ Js.log(metric);\n+ Js.log(\"\\n\");\n+ });\nlet counter = ref(0);\nlet topNArrayWithPoints =\nmetricsArray\n- |> Array.mapi((i, (username, _)) =>\n+ |> Array.mapi((i, (username, metric)) =>\nif (counter^ >= Array.length(threshholdPointsList)) {\n(username, 0);\n} else {\nlet (place, points) = threshholdPointsList[counter^];\n- if (place == i) {\n+ if (i < Array.length(metricsArray) - 1) {\n+ let challengeMetric = getMetricValue(metric);\n+ let (_, nextMetric) = metricsArray[i + 1];\n+ let nextChallengeMetric = getMetricValue(nextMetric);\n+\n+ // handle ties by comparing to the next metric\n+ if (challengeMetric !== nextChallengeMetric && i >= place) {\ncounter := counter^ + 1;\n};\n+ };\n(username, points);\n}\n);\n",
        "date": "30.01.2021 12:50:55",
        "repo": "minaprotocol/mina",
        "type": "feat",
        "sim_msg": "fix(pattern-editor): clear out duplicate shape points",
        "sim_diff": "diff --git a/lib/editor/util/map.js b/lib/editor/util/map.js @@ -595,9 +595,10 @@ export function constructShapePoints (\nfor (var i = 0; i < controlPoints.length; i++) {\nconst controlPoint = controlPoints[i]\nconst {point, pointType} = controlPoint\n- const lastDistance = shapePoints.length\n+ const lastDistance = shapePoints.length > 0\n? shapePoints[shapePoints.length - 1].shapeDistTraveled\n: 0\n+ // Add control point to shape points.\nshapePoints.push({\n// NOTE: The shape ID and shape point ID values are missing, but will be\n// assigned by the back end. Also, complete resequencing is handled below.\n@@ -611,15 +612,32 @@ export function constructShapePoints (\nif (segment) {\n// Add segment to list of shape points (last iteration should have no segment\n// because the geometry should be capped with an extra control point).\n-\n- // FIXME: this may not work for large arrays (100,000 or more)\n- shapePoints.push(\n- ...coordinatesToShapePoints(segment, lastDistance, shapePoints.length)\n+ const shapePointsFromSegment = coordinatesToShapePoints(\n+ segment,\n+ lastDistance,\n+ shapePoints.length\n)\n- }\n- }\n- const resquencedShapePoints = shapePoints.map(resequenceShapePoints)\n- return resquencedShapePoints\n+ // FIXME: this may not work for large arrays (100,000 or more)\n+ shapePoints.push(...shapePointsFromSegment)\n+ }\n+ }\n+ // Clean up shape points (duplicate removal and resequencing).\n+ const cleanShapePoints = shapePoints\n+ // Filter out any duplicate shape points (as a result of merging control\n+ // points with pattern segments).\n+ .filter((p, index) => {\n+ // Keep any shape point that is a control points (stop or simple handle).\n+ if (p.pointType > 0) return true\n+ const prev = shapePoints[index - 1]\n+ const next = shapePoints[index + 1]\n+ // Trash any standard shape points that are duplicates.\n+ if (prev && p.shapeDistTraveled === prev.shapeDistTraveled) return false\n+ if (next && p.shapeDistTraveled === next.shapeDistTraveled) return false\n+ // Keep the rest of the non-control point shape points.\n+ return true\n+ })\n+ .map(resequenceShapePoints)\n+ return cleanShapePoints\n}\n/**\n@@ -628,10 +646,6 @@ export function constructShapePoints (\nexport function resequenceShapePoints (shapePoint: ShapePoint, index: number): ShapePoint {\nshapePoint.shapePtSequence = index\nreturn shapePoint\n- // return {\n- // ...shapePoint,\n- // shapePtSequence: index\n- // }\n}\n/**\n",
        "chatgpt_rag": "feat(leaderboard): implement tie-breaking logic in applyTopNPoints function"
    },
    {
        "msg": "feat: add examples to static export",
        "diff": "diff --git a/website/pages/static-export.mdx b/website/pages/static-export.mdx @@ -48,18 +48,58 @@ Razzle not only works with React, but also Reason, Elm, Vue, Angular, Svelte, an\n#### render()\nbehind the scenes razzle calls `render` function that exposed from `static_export` module and saves `html` string that you pass to `res.json()` into a html file. for `req` object there is only one property that is `url` which contains the url that we are going to render and save it's result to the html file.\n+html file destination is relative to the `req.url`, for example if the url is `/product/A` html is going to get saved at `/build/product/A/index.html`.\n+\n+you should call `renderToString()` (or what ever your framework gives you to do SSR) in this function send resonse to `res.json()`\n+\n+```js\n+export const render = (req, res) => {\n+ const html = ReactDOMServer.renderToString(\n+ <StaticRouter location={req.url}>\n+ <App />\n+ </StaticRouter>\n+ );\n+\n+ res.json({ html });\n+};\n+```\n+\n+(you can re-export your ssr logic from server.js file and use it `static_export`)\n#### routes()\nyou should also export a function called `routes` that returns an array of strings or a promise that will resolve array of strings. razzle will take the urls one by one and pass them one by one to `render`.\n+you should get all paths that your app has from your CMS in this method and return it at the end:\n-html file destination is relative to the `req.url`, for example if the url is `/product/A` html is going to get saved at `/build/product/A/index.html`.\n+```js\n+export const routes = async () => {\n+ // data should be an array of strings [\"/\", \"/product/A\", \"/blog/1\", \"/blog/2\"]\n+ const { data } = await getAppPaths();\n+ return data;\n+};\n+```\n#### page data\nyou may also need to save the data that your page uses to rehydrate the app on the client side.\nyou can also pass the `data` along the `html` to `res.json({ html, data })` and contents of data object will go inside the `page-data.json` file next to the html file.\n+```js\n+export const render = async (req, res) => {\n+ const data = await getDataForRoute(req.url);\n+\n+ const html = ReactDOMServer.renderToString(\n+ <StaticRouter location={req.url}>\n+ <App />\n+ </StaticRouter>\n+ );\n+\n+ res.json({ html, data });\n+};\n+```\n+\n+(you should also change how your app fetches data on client-side, so it reads data from `page-data.json`)\n+\n## TypeScript Support\nStatic export comes with typescript support out of the box, in order to use typescript rename `static_export.js` to `static_export.ts` and you are good to go!\n",
        "date": "06.10.2020 02:46:12",
        "repo": "jaredpalmer/razzle",
        "type": "feat",
        "sim_msg": "chore(docs): Update \"Debugging HTML builds\" to include `getServerData`",
        "sim_diff": "diff --git a/docs/docs/debugging-html-builds.md b/docs/docs/debugging-html-builds.md title: Debugging HTML Builds\n---\n-Errors while building static HTML files (the build-time React SSR process) generally happen for one of the following reasons:\n+Errors while building static HTML files (the build-time React SSR process) or while using `getServerData` (the [runtime SSR](/docs/reference/rendering-options/server-side-rendering/) process) generally happen for one of the following reasons:\n1. Some of your code references \"browser globals\" like `window` or `document`\nthat aren't available in Node.js. If this is your problem you should see an\n",
        "chatgpt_rag": "chore(docs): Update \"Static Export\" documentation to include information on rendering, routes, and page data"
    },
    {
        "msg": "feat(server/ssr): rewrite ssr, add HTML component, use stats instead of hadrcoded html\nfeat(server/ssr): rewrite ssr, add HTML component, use stats instead of\nhadrcoded html",
        "diff": "diff --git a/src/server/ssr/index.js b/src/server/ssr/index.js * @flow\n* @desc\n*/\n-import * as React from 'react'\n+import React, {type Node} from 'react'\nimport fs from 'fs'\nimport {renderToString} from 'react-dom/server'\nimport Helmet from 'react-helmet'\nimport createHistory from 'history/createMemoryHistory'\nimport {ServerStyleSheet, StyleSheetManager} from 'styled-components'\nimport {configureApp, configureRootComponent} from 'common/app'\n-\n-const DLLScripts =\n- process.env.NODE_ENV === 'production'\n- ? ''\n- : `\n- <script src=\"/polyfills.js\"></script>\n- <script src=\"/vendor.js\"></script>\n-`\n-// This function makes server rendering of asset references consistent with different webpack chunk/entry confiugrations\n-function normalizeAssets (assets) {\n- return Array.isArray(assets) ? assets : [assets]\n-}\n+import IndexHTMLComponent from './IndexHTMLComponent'\n+import assets from 'webpack-assets'\n+import faviconsAssets from 'favicons-assets'\nexport default (req: Object, res: Object, next: () => void) => {\n- const stats = fs.readFileSync(\n- `${process.env.CLIENT_DIST_PATH}/stats.json`,\n- 'utf8'\n- )\nconst {isLoggedIn, token} = req.user\nconst initialState: Object = isLoggedIn\n? {me: {auth: {isLoggedIn, token}}}\n@@ -34,74 +21,27 @@ export default (req: Object, res: Object, next: () => void) => {\nconst sheet = new ServerStyleSheet()\nconst location: string = req.url\nconst context = {}\n- const {store, history, routes} = configureApp({initialState})\n- const RootComponent: React.Node = configureRootComponent({\n+ const {store, history, routes} = configureApp(initialState)\n+ const RootComponent: Node = configureRootComponent({\nstore,\nhistory,\nroutes,\nSSR: {location, context}\n})\n- const App: React.Node = (\n+ const App: Node = (\n<StyleSheetManager sheet={sheet.instance}>\n{RootComponent}\n</StyleSheetManager>\n)\nconst css = sheet.getStyleTags()\nconst preloadedState: Object = store.getState()\n- console.log(preloadedState)\n- const app: string = renderToString(App)\n- const {assetsByChunkName}: Object = JSON.parse(stats)\n- const html = getHtml({\n- app,\n+ const props = {\ncss,\n+ assets,\n+ faviconsAssets,\ninitialState: preloadedState,\n- assetsByChunkName\n- })\n- res.send(html)\n+ App\n}\n-\n-/**\n- * Get html\n- * @param {[type]} app [description]\n- * @param {[type]} css [description]\n- * @param {[type]} initialState [description]\n- * @param {[type]} assetsByChunkName [description]\n- * @return {String} [description]\n- */\n-const getHtml = ({app, css, initialState, assetsByChunkName}) => {\n- const stringifiedState: string = JSON.stringify(initialState)\n- const safeStringifiedState: string = stringifiedState.replace(/</g, '\\\\u003c')\n- return `\n- <!doctype html>\n- <html>\n- <head>\n- <meta charset=\"utf-8\">\n- <title>Noir</title>\n- <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n- <meta name=\"description\" content=\"Production-ready, performance-first, template built with React/Redux/React-Semantic-UI\">\n- <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n- <base href=\"/\" />\n- <meta name=\"theme-color\" content=\"<%=htmlWebpackPlugin.options.theme_color%>\"/>\n- <meta name=\"msapplication-tap-highlight\" content=\"no\">\n- <link rel=\"manifest\" href=\"manifest.json\">\n- ${css}\n- ${normalizeAssets(assetsByChunkName.client)\n- .filter(path => path.endsWith('.css'))\n- .map(path => `<link rel=\"stylesheet\" href=\"${path}\" />`)\n- .join('\\n')}\n- </head>\n- <body>\n- <div id=\"app\">${app}</div>\n- <script>window.__INITIAL_STATE__ = ${safeStringifiedState}</script>\n- ${DLLScripts}\n- ${normalizeAssets(assetsByChunkName.client)\n- .filter(path => path.endsWith('.js'))\n- .map(path => `<script src=\"${path}\"></script>`)\n- .join('\\n')}\n- <noscript>\n- You are using outdated browser. You can install modern browser here: <a href=\"http://outdatedbrowser.com/\" >http://outdatedbrowser.com</a>.\n- </noscript>\n- </body>\n- </html>\n- `\n+ const html: string = renderToString(<IndexHTMLComponent {...props} />)\n+ res.send(html)\n}\n",
        "date": "06.09.2017 12:16:46",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "fix(app): SSR index file management",
        "sim_diff": "diff --git a/app/lib/ssr/html-template.js b/app/lib/ssr/html-template.js @@ -53,14 +53,15 @@ module.exports.getIndexHtml = function (template, cfg) {\n)\nlet html = compiled(cfg.htmlVariables)\n- const data = { body: [], head: [] }\n+ const data = { bodyTags: [], headTags: [] }\nif (cfg.ctx.mode.pwa) {\nfillPwaTags(data, cfg)\n}\n- if (data.body.length > 0 || data.head.length > 0) {\n- html = HtmlWebpackPlugin.prototype.injectAssetsIntoHtml(html, {}, data)\n+ if (data.bodyTags.length > 0 || data.headTags.length > 0) {\n+ const htmlCtx = { options: { xhtml: false } }\n+ html = HtmlWebpackPlugin.prototype.injectAssetsIntoHtml.call(htmlCtx, html, {}, data)\n}\nhtml = injectSsrInterpolation(html)\n",
        "chatgpt_rag": "refactor(server): update SSR index file structure and rendering logic"
    },
    {
        "msg": "feat: logo and header link to home page",
        "diff": "diff --git a/src/App.vue b/src/App.vue <div class=\"container mb-4 mt-4\">\n<div class=\"mb-4\">\n<h1 class=\"logo\">\n- <img alt=\"Logo\" src=\"./assets/logo.png\" width=\"50\">\n+ <router-link to=\"/\">\n+ <img alt=\"Logo\" src=\"./assets/logo.png\" width=\"50\" />\nOpen Drinks\n+ </router-link>\n</h1>\n</div>\n<footer class=\"container mt-4 text-center\">\n<hr />\n- <div>View the source or contribute a drink recipe on <a href=\"https://github.com/alfg/opendrinks\">GitHub</a>!</div>\n+ <div>\n+ View the source or contribute a drink recipe on\n+ <a\n+ href=\"https://github.com/alfg/opendrinks\"\n+ >GitHub</a>!\n+ </div>\n<a href=\"https://www.netlify.com\">\n<img src=\"https://www.netlify.com/img/global/badges/netlify-light.svg\" alt=\"Netlify\" />\n</a>\n<style>\n#app {\n- font-family: 'Avenir', Helvetica, Arial, sans-serif;\n+ font-family: \"Avenir\", Helvetica, Arial, sans-serif;\n-webkit-font-smoothing: antialiased;\n-moz-osx-font-smoothing: grayscale;\ncolor: #2c3e50;\n}\n.logo {\n- font-family: 'Pacifico', 'cursive';\n+ font-family: \"Pacifico\", \"cursive\";\n+}\n+.logo a {\n+ text-decoration: none;\n+ color: inherit;\n}\n</style>\n",
        "date": "01.10.2019 10:15:23",
        "repo": "alfg/opendrinks",
        "type": "feat",
        "sim_msg": "docs(header): order version dropdown based on hostname / dev mode",
        "sim_diff": "diff --git a/docs/components/header.vue b/docs/components/header.vue </div>\n<b-navbar-nav class=\"flex-row ml-md-auto d-none d-md-flex\">\n- <b-nav-item-dropdown :text=\"`v${version}`\" toggle-class=\"mr-md-2\" right>\n+ <b-nav-item-dropdown\n+ :text=\"isDev ? (isLocal ? 'Local Copy' : 'Development') : `v${version}`\"\n+ toggle-class=\"mr-md-2\"\n+ right\n+ >\n+ <template v-if=\"isDev || isLocal\">\n+ <b-dropdown-item v-if=\"isLocal\" active href=\"/\">\n+ Local copy\n+ </b-dropdown-item>\n+ <b-dropdown-item :active=\"!isLocal\" href=\"https://bootstrap-vue.netlify.com\" rel=\"nofollow\">\n+ Development\n+ </b-dropdown-item>\n<b-dropdown-item href=\"https://bootstrap-vue.js.org\">\nLatest (v{{ version }})\n</b-dropdown-item>\n- <b-dropdown-item href=\"https://bootstrap-vue.netlify.com\">\n+ </template>\n+ <template v-else>\n+ <b-dropdown-item active href=\"https://bootstrap-vue.js.org\">\n+ Latest (v{{ version }})\n+ </b-dropdown-item>\n+ <b-dropdown-item href=\"https://bootstrap-vue.netlify.com\" rel=\"nofollow\">\nDevelopment\n</b-dropdown-item>\n+ </template>\n</b-nav-item-dropdown>\n<b-nav-item\n@@ -133,7 +150,16 @@ import { version } from '~/content'\nexport default {\nname: 'BVDHeader',\ndata() {\n- return { version }\n+ return {\n+ version,\n+ isDev: false,\n+ isLocal: false\n+ }\n+ },\n+ mounted() {\n+ const host = window.location.host || ''\n+ this.isLocal = host === 'localhost' || host === '127.0.0.1'\n+ this.isDev = host !== 'bootstrap-vue.js.org'\n}\n}\n</script>\n",
        "chatgpt_rag": "src(App): update logo link to home page and style logo link"
    },
    {
        "msg": "feat(jest_config): add mocks and disable coverage of styles",
        "diff": "diff --git a/jest_config/jest.config.json b/jest_config/jest.config.json \"rootDir\": \"../\",\n\"setupFiles\": [\"<rootDir>/jest_config/setupJest.js\"],\n\"automock\": false,\n- \"moduleNameMapper\": {}\n+ \"moduleNameMapper\": {\n+ \"\\\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$\": \"<rootDir>/jest_config/__mocks__/fileMock.js\",\n+ \"\\\\.(css|less)$\": \"<rootDir>/jest_config/__mocks__/styleMock.js\"\n+ },\n+ \"coveragePathIgnorePatterns\": [\"style.jsx\", \"/styles\"]\n}\n",
        "date": "10.09.2017 00:12:29",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "chore(package): remove unused jest config",
        "sim_diff": "diff --git a/package.json b/package.json \"**/*.spec.js\",\n\"node_modules\"\n]\n- },\n- \"jest\": {\n- \"verbose\": true,\n- \"resolver\": \"jest-directory-named-resolver\",\n- \"transform\": {\n- \"^.+\\\\.js$\": \"babel-jest\",\n- \"^.+\\\\.html$\": \"<rootDir>/src/__mocks__/htmlMock.js\"\n- },\n- \"moduleNameMapper\": {\n- \"^@/(.*)$\": \"<rootDir>/src/$1\",\n- \"^clappr-zepto$\": \"clappr-zepto/zepto.js\",\n- \"\\\\.(scss)$\": \"<rootDir>/src/__mocks__/styleMock.js\"\n- },\n- \"collectCoverageFrom\": [\n- \"src/*.js\",\n- \"src/**/*.js\",\n- \"src/**/**/*.js\"\n- ]\n}\n}\n",
        "chatgpt_rag": "chore(jest): update moduleNameMapper in jest config"
    },
    {
        "msg": "feat(ssr): render Helmet on server",
        "diff": "diff --git a/src/server/ssr/index.js b/src/server/ssr/index.js * @desc\n*/\nimport React from 'react'\n+import Helmet from 'react-helmet'\nimport {renderToString} from 'react-dom/server'\nimport {ServerStyleSheet, StyleSheetManager} from 'styled-components'\nimport {configureRootComponent, configureApp} from 'common/app'\n@@ -33,9 +34,7 @@ export default async (req: express$Request, res: express$Response) => {\nconst app = (\n<AsyncComponentProvider asyncContext={asyncContext}>\n- <StyleSheetManager sheet={sheet.instance}>\n- {RootComponent}\n- </StyleSheetManager>\n+ <StyleSheetManager sheet={sheet.instance}>{RootComponent}</StyleSheetManager>\n</AsyncComponentProvider>\n)\n@@ -45,6 +44,7 @@ export default async (req: express$Request, res: express$Response) => {\nasyncBootstrapper(app).then(() => {\nconst renderedApp = renderToString(app)\n+ const helmet = Helmet.renderStatic()\nconst css: string = sheet.getStyleTags()\nconst preloadedState: Object = store.getState()\nconst responseStatusCode = noRequestURLMatch ? 404 : 200\n@@ -55,7 +55,8 @@ export default async (req: express$Request, res: express$Response) => {\nasyncState,\ninitialState: preloadedState,\napp: renderedApp,\n- i18n\n+ i18n,\n+ helmet\n}\nres.status(responseStatusCode).send(HTMLComponent(props))\n",
        "date": "19.02.2018 18:18:55",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "docs(api-ssr-docs): Improve onRenderBody example",
        "sim_diff": "diff --git a/packages/gatsby/cache-dir/api-ssr-docs.js b/packages/gatsby/cache-dir/api-ssr-docs.js @@ -79,23 +79,29 @@ exports.replaceRenderer = true\n* is merged with other body props and passed to `html.js` as `bodyProps`.\n* @param {pluginOptions} pluginOptions\n* @example\n- * const { Helmet } = require(\"react-helmet\")\n- *\n- * exports.onRenderBody = (\n- * { setHeadComponents, setHtmlAttributes, setBodyAttributes },\n- * pluginOptions\n- * ) => {\n- * const helmet = Helmet.renderStatic()\n- * setHtmlAttributes(helmet.htmlAttributes.toComponent())\n- * setBodyAttributes(helmet.bodyAttributes.toComponent())\n- * setHeadComponents([\n- * helmet.title.toComponent(),\n- * helmet.link.toComponent(),\n- * helmet.meta.toComponent(),\n- * helmet.noscript.toComponent(),\n- * helmet.script.toComponent(),\n- * helmet.style.toComponent(),\n- * ])\n+ * // Import React so that you can use JSX in HeadComponents\n+ * const React = require(\"react\")\n+ *\n+ * const HtmlAttributes = {\n+ * lang: \"en\"\n+ * }\n+ *\n+ * const HeadComponents = [\n+ * <script key=\"my-script\" src=\"https://gatsby.dev/my-script\" />\n+ * ]\n+ *\n+ * const BodyAttributes = {\n+ * \"data-theme\": \"dark\"\n+ * }\n+ *\n+ * exports.onRenderBody = ({\n+ * setHeadComponents,\n+ * setHtmlAttributes,\n+ * setBodyAttributes\n+ * }, pluginOptions) => {\n+ * setHtmlAttributes(HtmlAttributes)\n+ * setHeadComponents(HeadComponents)\n+ * setBodyAttributes(BodyAttributes)\n* }\n*/\nexports.onRenderBody = true\n",
        "chatgpt_rag": "feat(ssr): Add Helmet to server-side rendering for SEO optimization"
    },
    {
        "msg": "feat(src/client): add react-a11y, fix export of main configuration scripts(configureRoot, configureA\nadd react-a11y, fix export of main configuration scripts(configureRoot, configureApp)",
        "diff": "diff --git a/src/client/index.jsx b/src/client/index.jsx // Styles\nimport 'semantic-ui-css/semantic.css'\n-import 'styles/global'\n// Fetch and promise polyfill\nimport 'promise-polyfill'\n-import 'whatwg-fetch'\n+import 'isomorphic-fetch'\n// Application\n-import {render} from 'react-dom'\n-import {configureStore, configureRootComponent} from 'common/index.jsx'\n+import React from 'react'\n+import ReactDOM, {render} from 'react-dom'\n+import {configureApp, configureRootComponent} from 'common/app'\nif (process.env.NODE_ENV === 'production') {\nrequire('common/pwa')\n@@ -29,13 +29,21 @@ if (process.env.NODE_ENV === 'production') {\n*/\n/*eslint-enable */\nwindow.Perf = require('react-addons-perf')\n-}\n-const preloadedState = window.__PRELOADED_STATE__ || {}\n-delete window.__PRELOADED_STATE__\n+ // NOTE: a11y doesnt work with SSR and React throws warnings like:\n+ // \"React attempted to reuse markup in a container but the checksum was invalid\"\n+ // a11y adds \"id\" attribute to the root container (#app) of your app and triggers re-rendering\n+ //\n+ /** {@link https://github.com/reactjs/react-a11y } */\n+ // const a11y = require('react-a11y')\n+ // a11y(React, {ReactDOM})\n+}\n-const store = configureStore(preloadedState)\n-const RootComponent = configureRootComponent({store})\n+const initialState = window.__INITIAL_STATE__ || {}\n+// NOTE: V8 doesn't optimize `delete`\n+// delete window.__INITIAL_STATE__\n+const propsForRoot = configureApp({initialState})\n+const RootComponent = configureRootComponent(propsForRoot)\nrender(RootComponent, document.getElementById('app'))\nif (module.hot) {\n",
        "date": "23.08.2017 18:42:17",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "refactor: update entrypoint to async load new web components; update load order to account for the styleguide.js logic being sensitive to the order that things load in",
        "sim_diff": "diff --git a/packages/uikit-workshop/src/scripts/patternlab-viewer.js b/packages/uikit-workshop/src/scripts/patternlab-viewer.js +import { loadPolyfills } from './utils/polyfills';\n+\n+loadPolyfills.then(res => {\n+ import(/* webpackMode: 'eager', webpackChunkName: 'pl-layout' */ './components/pl-layout/pl-layout').then(\n+ () => {\n+ // this ensures that the old-school way the styleguide JS binds to the page isn't thrown off by the <pl-layout> component rendering -- temp workaround till the logic in styleguide.js gets broken down and refactored.\n+ import(/* webpackMode: 'eager', webpackChunkName: 'pl-styleguide' */ './components/styleguide');\n+ }\n+ );\n+ import(/* webpackMode: 'eager', webpackChunkName: 'pl-toggle-theme' */ './components/pl-toggle-theme/pl-toggle-theme');\n+ import(/* webpackMode: 'eager', webpackChunkName: 'pl-toggle-layout' */ './components/pl-toggle-layout/pl-toggle-layout');\n+});\n+\nimport './components/typeahead';\n-import './components/layout';\nimport './components/modal-viewer';\nimport './components/panels';\nimport './components/panels-viewer';\nimport './components/pattern-finder';\nimport './components/plugin-loader';\n-import './components/styleguide';\n//// Add hook to auto re-render the root component.\nif (typeof module.hot === 'object') {\n",
        "chatgpt_rag": "refactor: update entrypoint to async load new web components; update load order to optimize performance and account for a11y compatibility with SSR"
    },
    {
        "msg": "feat: add nullish coalescing for validUntil and simplify function objects",
        "diff": "diff --git a/frontend/mina-signer/src/MinaSDK.ts b/frontend/mina-signer/src/MinaSDK.ts \"use strict\";\n-\nconst JSOfOCaml_SDK = require(\"./client_sdk.bc.js\");\nconst minaSDK = JSOfOCaml_SDK.minaSDK;\n@@ -108,32 +107,30 @@ class Client {\nconst fee = String(payment.fee);\nconst nonce = String(payment.nonce);\nconst amount = String(payment.amount);\n- const validUntil = String(\n- payment.validUntil ? payment.validUntil : defaultValidUntil\n- );\n+ const validUntil = String(payment.validUntil ?? defaultValidUntil);\nreturn {\nsignature: minaSDK.signPayment(this.network, privateKey, {\ncommon: {\n- fee: fee,\n+ fee,\nfeePayer: payment.from,\n- nonce: nonce,\n- validUntil: validUntil,\n- memo: memo,\n+ nonce,\n+ validUntil,\n+ memo,\n},\npaymentPayload: {\nsource: payment.from,\nreceiver: payment.to,\n- amount: amount,\n+ amount,\n},\n}).signature,\ndata: {\nto: payment.to,\nfrom: payment.from,\n- fee: fee,\n- amount: amount,\n- nonce: nonce,\n- memo: memo,\n- validUntil: validUntil,\n+ fee,\n+ amount,\n+ nonce,\n+ memo,\n+ validUntil,\n},\n};\n}\n@@ -150,24 +147,22 @@ class Client {\nconst fee = String(payload.fee);\nconst amount = String(payload.amount);\nconst nonce = String(payload.nonce);\n- const validUntil = String(\n- payload.validUntil ? payload.validUntil : defaultValidUntil\n- );\n+ const validUntil = String(payload.validUntil ?? defaultValidUntil);\nreturn minaSDK.verifyPaymentSignature(this.network, {\nsender: signedPayment.data.from,\nsignature: signedPayment.signature,\npayment: {\ncommon: {\n- fee: fee,\n+ fee,\nfeePayer: payload.from,\n- nonce: nonce,\n- validUntil: validUntil,\n- memo: memo,\n+ nonce,\n+ validUntil,\n+ memo,\n},\npaymentPayload: {\nsource: payload.from,\nreceiver: payload.to,\n- amount: amount,\n+ amount,\n},\n},\n});\n@@ -192,19 +187,15 @@ class Client {\nconst memo = stakeDelegation.memo ?? \"\";\nconst fee = String(stakeDelegation.fee);\nconst nonce = String(stakeDelegation.nonce);\n- const validUntil = String(\n- stakeDelegation.validUntil\n- ? stakeDelegation.validUntil\n- : defaultValidUntil\n- );\n+ const validUntil = String(stakeDelegation.validUntil ?? defaultValidUntil);\nreturn {\nsignature: minaSDK.signStakeDelegation(this.network, privateKey, {\ncommon: {\n- fee: fee,\n+ fee,\nfeePayer: stakeDelegation.from,\n- nonce: nonce,\n- validUntil: validUntil,\n- memo: memo,\n+ nonce,\n+ validUntil,\n+ memo,\n},\ndelegationPayload: {\nnewDelegate: stakeDelegation.to,\n@@ -214,10 +205,10 @@ class Client {\ndata: {\nto: stakeDelegation.to,\nfrom: stakeDelegation.from,\n- fee: fee,\n- nonce: nonce,\n- memo: memo,\n- validUntil: validUntil,\n+ fee,\n+ nonce,\n+ memo,\n+ validUntil,\n},\n};\n}\n@@ -235,19 +226,17 @@ class Client {\nconst memo = payload.memo ?? \"\";\nconst fee = String(payload.fee);\nconst nonce = String(payload.nonce);\n- const validUntil = String(\n- payload.validUntil ? payload.validUntil : defaultValidUntil\n- );\n+ const validUntil = String(payload.validUntil ?? defaultValidUntil);\nreturn minaSDK.verifyStakeDelegationSignature(this.network, {\nsender: signedStakeDelegation.data.from,\nsignature: signedStakeDelegation.signature,\nstakeDelegation: {\ncommon: {\n- fee: fee,\n+ fee,\nfeePayer: payload.from,\n- nonce: nonce,\n- validUntil: validUntil,\n- memo: memo,\n+ nonce,\n+ validUntil,\n+ memo,\n},\ndelegationPayload: {\nnewDelegate: payload.to,\n@@ -269,9 +258,7 @@ class Client {\nconst fee = String(payload.fee);\nconst amount = String(payload.amount);\nconst nonce = String(payload.nonce);\n- const validUntil = String(\n- payload.validUntil ? payload.validUntil : defaultValidUntil\n- );\n+ const validUntil = String(payload.validUntil ?? defaultValidUntil);\nreturn minaSDK.hashPayment({\nsender: signedPayment.data.from,\nsignature: signedPayment.signature,\n@@ -279,14 +266,14 @@ class Client {\ncommon: {\nfee: fee,\nfeePayer: payload.from,\n- nonce: nonce,\n- validUntil: validUntil,\n- memo: memo,\n+ nonce,\n+ validUntil,\n+ memo,\n},\npaymentPayload: {\nsource: payload.from,\nreceiver: payload.to,\n- amount: amount,\n+ amount,\n},\n},\n});\n@@ -305,19 +292,17 @@ class Client {\nconst memo = payload.memo ?? \"\";\nconst fee = String(payload.fee);\nconst nonce = String(payload.nonce);\n- const validUntil = String(\n- payload.validUntil ? payload.validUntil : defaultValidUntil\n- );\n+ const validUntil = String(payload.validUntil ?? defaultValidUntil);\nreturn minaSDK.hashStakeDelegation({\nsender: signedStakeDelegation.data.from,\nsignature: signedStakeDelegation.signature,\nstakeDelegation: {\ncommon: {\n- fee: fee,\n+ fee,\nfeePayer: payload.from,\n- nonce: nonce,\n- validUntil: validUntil,\n- memo: memo,\n+ nonce,\n+ validUntil,\n+ memo,\n},\ndelegationPayload: {\nnewDelegate: payload.to,\n",
        "date": "24.11.2021 11:59:43",
        "repo": "minaprotocol/mina",
        "type": "feat",
        "sim_msg": "test(lws): add tests to auth req",
        "sim_diff": "diff --git a/src/main/lws/lws-service.spec.js b/src/main/lws/lws-service.spec.js @@ -2,9 +2,11 @@ import { LWSService, WSConnection } from './lws-service';\nimport { Wallet } from '../wallet/wallet';\nimport { IdAttribute } from '../identity/id-attribute';\nimport sinon from 'sinon';\n+// import fetch from 'node-fetch';\nimport { checkPassword } from '../keystorage';\njest.mock('../keystorage');\n+jest.mock('node-fetch');\ndescribe('lws-service', () => {\nconst connMock = wallet => ({\n@@ -229,8 +231,8 @@ describe('lws-service', () => {\n});\ndescribe('genSignature', () => {\n- it('returns null if wallet is locked', () => {\n- let sig = service.genSignature('test', 'test', 'asdas');\n+ it('returns null on create error', () => {\n+ let sig = service.genSignature('test', 'test', 'invalidPrivateKey');\nexpect(sig).toBeNull();\n});\nit('signs nonce with privateKey', async () => {\n@@ -258,9 +260,132 @@ describe('lws-service', () => {\n});\n});\n- xdescribe('reqAuth', () => {});\n+ describe('reqAuth', () => {\n+ it('send auth error if wallet is locked', async () => {\n+ const conn = { send: sinon.fake() };\n+ const msg = { payload: { publicKey: 'test' } };\n+ sinon.stub(service, 'checkWallet').returns({\n+ unlocked: false\n+ });\n+ await service.reqAuth(msg, conn);\n+ expect(\n+ conn.send.calledWithMatch(\n+ {\n+ error: true,\n+ payload: {\n+ code: 'auth_error',\n+ message: 'Cannot auth with locked wallet'\n+ }\n+ },\n+ msg\n+ )\n+ ).toBeTruthy();\n+ });\n+ it('send nonce fetch error if got error from endpoint', async () => {\n+ const conn = { send: sinon.fake() };\n+ const msg = { payload: { publicKey: 'test', website: {} } };\n+ const error = 'could note generate nonce';\n+ sinon.stub(service, 'fetchNonce').resolves({ error });\n+ sinon.stub(service, 'checkWallet').returns({\n+ unlocked: true\n+ });\n+ await service.reqAuth(msg, conn);\n+ expect(\n+ conn.send.calledWithMatch(\n+ {\n+ error: true,\n+ payload: {\n+ code: 'nonce_fetch_error',\n+ message: error\n+ }\n+ },\n+ msg\n+ )\n+ ).toBeTruthy();\n+ });\n+ it('send nonce fetch error if did not get nonce in responce json', async () => {\n+ const conn = { send: sinon.fake() };\n+ const msg = { payload: { publicKey: 'test', website: {} } };\n+ sinon.stub(service, 'fetchNonce').resolves({});\n+ sinon.stub(service, 'checkWallet').returns({\n+ unlocked: true\n+ });\n+ await service.reqAuth(msg, conn);\n+ expect(\n+ conn.send.calledWithMatch(\n+ {\n+ error: true,\n+ payload: {\n+ code: 'nonce_fetch_error',\n+ message: 'No nonce in responce'\n+ }\n+ },\n+ msg\n+ )\n+ ).toBeTruthy();\n+ });\n+ it('send sign error if could not generate signature', async () => {\n+ const conn = { send: sinon.fake() };\n+ const msg = { payload: { publicKey: 'test', website: {} } };\n+ sinon.stub(service, 'fetchNonce').resolves({ nonce: 'test' });\n+ sinon.stub(service, 'checkWallet').returns({\n+ unlocked: true\n+ });\n+ sinon.stub(service, 'genSignature').returns(null);\n+ await service.reqAuth(msg, conn);\n+ expect(service.genSignature.calledOnce).toBeTruthy();\n+ expect(\n+ conn.send.calledWithMatch(\n+ {\n+ error: true,\n+ payload: {\n+ code: 'sign_error',\n+ message: 'Cannot could not generate signature'\n+ }\n+ },\n+ msg\n+ )\n+ ).toBeTruthy();\n+ });\n+ it('send conn_error on connection error', async () => {\n+ const conn = { send: sinon.fake() };\n+ const msg = { payload: { publicKey: 'test', website: {} } };\n+ sinon.stub(service, 'fetchNonce').throws(new Error('connection error'));\n+ sinon.stub(service, 'checkWallet').returns({\n+ unlocked: true\n+ });\n+ await service.reqAuth(msg, conn);\n+ expect(\n+ conn.send.calledWithMatch(\n+ {\n+ payload: {\n+ code: 'conn_error',\n+ message: 'connection error'\n+ },\n+ error: true\n+ },\n+ msg\n+ )\n+ ).toBeTruthy();\n+ });\n+ xit('fetches nonce and sends signed attributes to endpoint', async () => {});\n+ });\n- xdescribe('reqUnknown', () => {});\n+ describe('reqUnknown', () => {\n+ it('sends unknown request error', () => {\n+ const conn = { send: sinon.fake() };\n+ const msg = { test1: 'test1' };\n+ service.reqUnknown(msg, conn);\n+ expect(\n+ conn.send.calledWithMatch(\n+ {\n+ error: 'unknown request'\n+ },\n+ msg\n+ )\n+ ).toBeTruthy();\n+ });\n+ });\nxdescribe('handleRequest', () => {});\n",
        "chatgpt_rag": "refactor(mina-signer): optimize code for signing payments, verifying signatures, and hashing stake delegations"
    },
    {
        "msg": "feat: Esmfy repl.html",
        "diff": "diff --git a/demo/repl.html b/demo/repl.html </td></tr></table>\n</div>\n-<script type=\"text/javascript\" src=\"../src/development_initializer.js\"></script>\n-<script type=\"text/javascript\">\n+<script type=\"module\" src=\"../src/main-browser.js\"></script>\n+<script type=\"module\">\nvar on_error = function(e){\nBiwaScheme.Port.current_error.put_string(e.message);\nthrow(e);\n};\nvar biwascheme = new BiwaScheme.Interpreter(on_error);\n-function bs_eval(){\n+window.bs_eval = function(){\n$(\"#bs-console\").empty();\nvar str = $(\"#bs-input\").val();\n",
        "date": "25.07.2020 15:08:07",
        "repo": "biwascheme/biwascheme",
        "type": "feat",
        "sim_msg": "refactor: add default storage",
        "sim_diff": "diff --git a/index.js b/index.js @@ -149,7 +149,9 @@ module.exports = function (options, callback) {\nvar startWhistle = function () {\nvar server = options.server;\nassert(!server || options.port > 0, 'options.port of the custom server is required');\n- options.storage = options.storage || '.custom_server_' + options.port;\n+ if (server && !options.storage && options.storage !== false) {\n+ options.storage = '.custom_server_' + options.port;\n+ }\nvar workerIndex = env.workerIndex;\nif (options && options.cluster && workerIndex >= 0) {\noptions.storage =\n",
        "chatgpt_rag": "refactor: update script source to main-browser.js and define bs_eval as a global function"
    },
    {
        "msg": "feat(.eslintrc): add react-a11y plugin for eslint\nadd react-a11y plugin for eslint",
        "diff": "diff --git a/.eslintrc.json b/.eslintrc.json {\n- \"extends\": [\"plugin:react/recommended\", \"standard\"],\n+ \"extends\": [\n+ \"plugin:react/recommended\",\n+ \"plugin:jsx-a11y/recommended\",\n+ \"standard\"\n+ ],\n\"parser\": \"babel-eslint\",\n- \"plugins\": [\"react\", \"babel\"],\n+ \"plugins\": [\"react\", \"babel\", \"jsx-a11y\"],\n\"parserOptions\": {\n\"ecmaFeatures\": {\n\"jsx\": true,\n\"node\": true\n},\n\"rules\": {\n- \"no-unused-vars\": 1,\n+ \"no-unused-vars\": 0,\n\"no-tabs\": 0,\n\"indent\": [2, \"tab\"]\n},\n",
        "date": "14.08.2017 16:59:55",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "chore: fix eslint config error",
        "sim_diff": "diff --git a/.eslintrc.json b/.eslintrc.json \"node\": true,\n\"es6\": true\n},\n- \"extends\": [\n- \"eslint:recommended\",\n- \"plugin:react/recommended\"\n- ],\n+ \"extends\": [\"eslint:recommended\", \"plugin:react/recommended\"],\n\"parserOptions\": {\n\"sourceType\": \"module\",\n\"ecmaVersion\": 2018\n},\n\"overrides\": [\n{\n- \"files\": [\n- \"**/*.test?(.*).js\"\n- ],\n+ \"files\": [\"**/*.test?(.*).js\"],\n\"env\": {\n- \"jest\": true,\n- \"jest/globals\": true\n+ \"jest\": true\n},\n\"globals\": {\n\"page\": true,\n\"context\": true,\n\"jestPuppeteer\": true\n},\n- \"plugins\": [\n- \"jest\"\n- ]\n+ \"plugins\": [\"jest\"]\n}\n]\n}\n",
        "chatgpt_rag": "chore: update eslint config with additional plugins and rules"
    },
    {
        "msg": "feat(server/ssr): add async-component, async-bootstrapper",
        "diff": "diff --git a/src/server/ssr/index.js b/src/server/ssr/index.js */\nimport React from 'react'\nimport chalk from 'chalk'\n+import _ from 'lodash'\nimport {renderToNodeStream} from 'react-dom/server'\nimport {ServerStyleSheet, StyleSheetManager} from 'styled-components'\nimport {configureRootComponent, configureApp} from 'common/app'\n+import asyncBootstrapper from 'react-async-bootstrapper'\n+import {AsyncComponentProvider, createAsyncContext} from 'react-async-component'\nimport HtmlComponent from './HtmlComponent'\n// $FlowFixMe\nimport assets from 'webpack-assets'\n@@ -36,45 +39,48 @@ export default async (req: express$Request, res: express$Response) => {\ni18n,\nSSR: {location, context}\n})\n- const stream = renderToNodeStream(\n+ const asyncContext = createAsyncContext()\n+\n+ const app = (\n+ <AsyncComponentProvider asyncContext={asyncContext}>\n<StyleSheetManager sheet={sheet.instance}>\n{RootComponent}\n</StyleSheetManager>\n+ </AsyncComponentProvider>\n)\n+ // console.log(_.find(routes, a => matchPath(req.url, a)))\n+ const noRequestURLMatch = !!_.find(routes, a => matchPath(req.url, a))\n+\n+ asyncBootstrapper(app).then(() => {\n+ const appStream = renderToNodeStream(app)\nconst css: string = sheet.getStyleTags()\nconst preloadedState: Object = store.getState()\n+\n+ const asyncState = asyncContext.getState()\nconst props = {\ncss,\nassets,\nfaviconsAssets,\n+ asyncState,\ninitialState: preloadedState,\ni18n\n}\n- // FIXME: how to replace `let` and `for`?\n- let lazyRoutes = routes.filter(a => a.lazy)\n- for (var i = 0; i < lazyRoutes.length; i++) {\n- let route = routes[i]\n- if (matchPath(req.url, route)) {\n- route.component = await routes[i].component().default\n- route.lazy = false\n- break\n- }\n- }\n-\nconst {beforeAppTag, afterAppTag} = HtmlComponent(props)\n+ const responseStatusCode = noRequestURLMatch ? 404 : 200\n- res.writeHead(200, {\n+ res.writeHead(responseStatusCode, {\n'Content-Type': 'text/html'\n})\nres.write(beforeAppTag)\nres.write(`<div id=\"app\">`)\n- stream.pipe(res, {end: false})\n+ appStream.pipe(res, {end: false})\n- stream.on('end', () => {\n+ appStream.on('end', () => {\nres.write('</div>')\nres.write(afterAppTag)\nres.end()\n})\n+ })\n}\n",
        "date": "03.11.2017 16:50:33",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "test: tests for ssr template function",
        "sim_diff": "diff --git a/test/ssr/ssr-template.spec.js b/test/ssr/ssr-template.spec.js @@ -134,6 +134,68 @@ describe('SSR: template option', () => {\n})\n})\n+ it('renderToString w/ template function', done => {\n+ const renderer = createRenderer({\n+ template: (content, context) => `<html><head>${context.head}</head>${content}</html>`\n+ })\n+\n+ const context = {\n+ head: '<meta name=\"viewport\" content=\"width=device-width\">'\n+ }\n+\n+ renderer.renderToString(new Vue({\n+ template: '<div>hi</div>'\n+ }), context, (err, res) => {\n+ expect(err).toBeNull()\n+ expect(res).toContain(`<html><head>${context.head}</head><div data-server-rendered=\"true\">hi</div></html>`)\n+ done()\n+ })\n+ })\n+\n+ it('renderToString w/ template function returning Promise', done => {\n+ const renderer = createRenderer({\n+ template: (content, context) => new Promise((resolve) => {\n+ setTimeout(() => {\n+ resolve(`<html><head>${context.head}</head>${content}</html>`)\n+ }, 0)\n+ })\n+ })\n+\n+ const context = {\n+ head: '<meta name=\"viewport\" content=\"width=device-width\">'\n+ }\n+\n+ renderer.renderToString(new Vue({\n+ template: '<div>hi</div>'\n+ }), context, (err, res) => {\n+ expect(err).toBeNull()\n+ expect(res).toContain(`<html><head>${context.head}</head><div data-server-rendered=\"true\">hi</div></html>`)\n+ done()\n+ })\n+ })\n+\n+ it('renderToString w/ template function returning Promise w/ rejection', done => {\n+ const renderer = createRenderer({\n+ template: () => new Promise((resolve, reject) => {\n+ setTimeout(() => {\n+ reject(new Error(`foo`))\n+ }, 0)\n+ })\n+ })\n+\n+ const context = {\n+ head: '<meta name=\"viewport\" content=\"width=device-width\">'\n+ }\n+\n+ renderer.renderToString(new Vue({\n+ template: '<div>hi</div>'\n+ }), context, (err, res) => {\n+ expect(err.message).toBe(`foo`)\n+ expect(res).toBeUndefined()\n+ done()\n+ })\n+ })\n+\nit('renderToStream', done => {\nconst renderer = createRenderer({\ntemplate: defaultTemplate\n",
        "chatgpt_rag": "feat: implement async rendering and bootstrapping in SSR\n\n- Added asyncBootstrapper for async rendering of components\n- Implemented renderToNodeStream for streaming server-side rendering\n- Utilized AsyncComponentProvider and createAsyncContext for async component loading\n- Updated response status code based on URL matching\n- Refactored code for better performance and readability"
    },
    {
        "msg": "feat(api/LocalStorateCookiesSvc): remove store2, add comments\nfeat(api/LocalStorateCookiesSvc): remove store2 from core functions and\ncomment import of store2, add comments",
        "diff": "diff --git a/src/common/api/LocalStorageCookiesSvc/index.js b/src/common/api/LocalStorageCookiesSvc/index.js // @flow\n-import * as store from 'store2'\nimport Cookies from 'js-cookie'\n+// By default, we don't use localStorage, but store2 is already installed\n+// But we use redux-persist (syncs localStorage with redux state)\n+// import store from 'store2'\nimport decodeJWT from 'jwt-decode'\nexport const JWT_TOKEN = 'JWT_TOKEN'\nexport function getLocalToken (): string | null {\n- return store.get(JWT_TOKEN) || Cookies.get(JWT_TOKEN)\n+ return Cookies.get(JWT_TOKEN)\n}\nexport function resetLocalToken () {\n- store.remove(JWT_TOKEN)\nCookies.remove(JWT_TOKEN)\n}\nexport function setLocalToken (token: string) {\n- store.set(JWT_TOKEN, token)\nCookies.set(JWT_TOKEN, token, {expires: 365})\n}\n",
        "date": "18.10.2017 23:48:25",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "fix: include WALLET_BATCH_IMPORT_URL in",
        "sim_diff": "diff --git a/packages/frontend/src/redux/actions/account.js b/packages/frontend/src/redux/actions/account.js @@ -122,7 +122,7 @@ export const handleRefreshUrl = (prevRouter) => (dispatch, getState) => {\nconst { pathname, search } = prevRouter?.location || getLocation(getState());\nconst currentPage = pathname.split('/')[pathname[1] === '/' ? 2 : 1];\n- if ([...WALLET_CREATE_NEW_ACCOUNT_FLOW_URLS, WALLET_LOGIN_URL, WALLET_SIGN_URL, WALLET_LINKDROP_URL].includes(currentPage)) {\n+ if ([...WALLET_CREATE_NEW_ACCOUNT_FLOW_URLS, WALLET_LOGIN_URL, WALLET_SIGN_URL, WALLET_LINKDROP_URL, WALLET_BATCH_IMPORT_URL].includes(currentPage)) {\nconst parsedUrl = {\n...parse(search),\nreferrer: document.referrer ? new URL(document.referrer).hostname : undefined,\n",
        "chatgpt_rag": "refactor: remove store2 usage and update comments in LocalStorageCookiesSvc"
    },
    {
        "msg": "feat: support link component set href attribute",
        "diff": "diff --git a/src/components/link/Link.vue b/src/components/link/Link.vue @@ -6,6 +6,7 @@ interface LinkProps {\ntype?: LinkType\nunderline?: boolean\ndisabled?: boolean\n+ href?: string\n}\nconst props = withDefaults(defineProps<LinkProps>(), {\n@@ -27,7 +28,11 @@ const classes = useClasses(props)\n</script>\n<template>\n- <a class=\"el-link\" :class=\"classes\">\n+ <a\n+ class=\"el-link\"\n+ :class=\"classes\"\n+ :href=\"disabled ? null : href\"\n+ >\n<span v-if=\"$slots.default\" class=\"el-link--inner\">\n<slot />\n</span>\n",
        "date": "19.06.2022 22:37:17",
        "repo": "hug-sun/element3",
        "type": "feat",
        "sim_msg": "refactor(cdr-toast): remove script setup",
        "sim_diff": "diff --git a/src/components/toast/CdrToast.vue b/src/components/toast/CdrToast.vue -<script setup>\n+<script>\nimport {\n- useCssModule, computed, useSlots, ref, watch, onUpdated,\n+ useCssModule, defineComponent, computed, useSlots, ref, watch, onUpdated,\n} from 'vue';\nimport propValidator from '../../utils/propValidator.js';\nimport IconXSm from '../icon/comps/x-sm.vue';\nimport CdrButton from '../button/CdrButton.vue';\n-const slots = useSlots();\n-const props = defineProps({\n+export default defineComponent({\n+ components: {\n+ IconXSm,\n+ CdrButton\n+ },\n+ props: {\ntype: {\ntype: String,\nvalidator: (value) => propValidator(\n@@ -28,9 +32,9 @@ const props = defineProps({\ntype: Number,\ndefault: 5000,\n},\n-});\n-const emit = defineEmits(['open', 'closed']);\n-\n+ },\n+ setup(props, ctx) {\n+ const slots = useSlots();\nconst baseClass = 'cdr-toast';\nconst style = useCssModule();\nconst hasIconLeft = slots['icon-left'];\n@@ -45,7 +49,7 @@ const openToast = (e) => {\nif (timeout) {\nclearTimeout(timeout);\n} else {\n- emit('open', e);\n+ ctx.emit('open', e);\n}\nopened.value = true;\nif (props.autoDismiss && !e) {\n@@ -56,14 +60,14 @@ const openToast = (e) => {\nconst closeToast = (e) => {\nremoveHandlers();\nopened.value = false;\n- emit('closed', e);\n+ ctx.emit('closed', e);\n};\nconst closeToastWithDelay = (e) => {\ntimeout = setTimeout(() => {\nremoveHandlers();\nopened.value = false;\n- emit('closed', e);\n+ ctx.emit('closed', e);\n}, props.dismissDelay);\n};\n@@ -89,42 +93,43 @@ watch(() => props.open, () => {\nonUpdated(() => {\nif (props.autoDismiss) addHandlers();\n});\n+\n+ return {\n+ slots,\n+ baseClass,\n+ style,\n+ hasIconLeft,\n+ opened,\n+ toastEl,\n+ timeout,\n+ toastElement,\n+ typeClass,\n+ openToast,\n+ closeToast,\n+ closeToastWithDelay,\n+ addHandlers,\n+ removeHandlers,\n+ }\n+ }\n+})\n</script>\n<template>\n- <transition\n- :enter-from-class=\"style['cdr-toast__transition--toast-enter-from']\"\n+ <transition :enter-from-class=\"style['cdr-toast__transition--toast-enter-from']\"\n:enter-active-class=\"style['cdr-toast__transition--toast-enter-active']\"\n:leave-to-class=\"style['cdr-toast__transition--toast-leave-to']\"\n- :leave-active-class=\"style['cdr-toast__transition--toast-leave-active']\"\n- >\n- <div\n- v-if=\"opened\"\n- :class=\"[style[baseClass], style[typeClass]]\"\n- role=\"status\"\n- ref=\"toastEl\"\n- >\n+ :leave-active-class=\"style['cdr-toast__transition--toast-leave-active']\">\n+ <div v-if=\"opened\" :class=\"[style[baseClass], style[typeClass]]\" role=\"status\" ref=\"toastEl\">\n<div :class=\"[style['cdr-toast__main']]\">\n- <div\n- v-if=\"hasIconLeft\"\n- :class=\"[style['cdr-toast__icon-left']]\"\n- >\n+ <div v-if=\"hasIconLeft\" :class=\"[style['cdr-toast__icon-left']]\">\n<slot name=\"icon-left\" />\n</div>\n<span :class=\"[style['cdr-toast__message']]\">\n<slot name=\"default\" />\n</span>\n- <cdr-button\n- :class=\"[style['cdr-toast__close-button']]\"\n- icon-only\n- @click=\"closeToast\"\n- aria-label=\"Close\"\n- size=\"small\"\n- >\n- <icon-x-sm\n- slot=\"icon\"\n- inherit-color\n- />\n+ <cdr-button :class=\"[style['cdr-toast__close-button']]\" icon-only @click=\"closeToast\" aria-label=\"Close\"\n+ size=\"small\">\n+ <icon-x-sm slot=\"icon\" inherit-color />\n</cdr-button>\n</div>\n</div>\n",
        "chatgpt_rag": "feat(link): add href prop to Link component"
    },
    {
        "msg": "feat(webpack_config/client/webpack.base.js): add more style extension to resolve",
        "diff": "diff --git a/webpack_config/client/webpack.base.js b/webpack_config/client/webpack.base.js @@ -37,7 +37,7 @@ const baseBuild = {\nresolve: {\nalias: isomorphicWebpackConfig.resolve.alias,\nmodules: isomorphicWebpackConfig.resolve.modules,\n- extensions: isomorphicWebpackConfig.resolve.extensions.concat(['.css', '.scss'])\n+ extensions: isomorphicWebpackConfig.resolve.extensions.concat(['.css', '.scss', '.sass'])\n},\nmodule: {\nrules: isomorphicWebpackConfig.module.rules.concat([\n",
        "date": "10.08.2017 06:17:36",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "build: do not add image-webpack-loader at all in development",
        "sim_diff": "diff --git a/webpack.config.js b/webpack.config.js @@ -136,8 +136,8 @@ const base = {\ntest: /\\.(gif|jpe?g|png|svg)$/,\nuse: [\n{ loader: 'file-loader', query: { name: 'static/[name]_[hash:7].[ext]' } },\n- { loader: 'image-webpack-loader', query: { bypassOnDebug: true } },\n- ],\n+ nodeEnv !== 'development' && { loader: 'image-webpack-loader' },\n+ ].filter(Boolean),\n},\n{\n",
        "chatgpt_rag": "build: add .sass extension to resolve in webpack config"
    },
    {
        "msg": "feat: added new empty favorites test",
        "diff": "diff --git a/tests/unit/views/Favorites.spec.js b/tests/unit/views/Favorites.spec.js @@ -7,7 +7,7 @@ import Favorites from '@/views/Favorites.vue';\nconst localVue = createLocalVue();\nlocalVue.use(BootstrapVue);\n-describe('Favorites', () => {\n+describe('Favorites (Populated)', () => {\nlet wrapper;\nbeforeEach(() => {\n@@ -34,3 +34,23 @@ describe('Favorites', () => {\nexpect(favs.length === 1).toBe(true);\n});\n});\n+\n+describe('Favorites (Empty)', () => {\n+ let wrapper;\n+\n+ beforeEach(() => {\n+ wrapper = mount(Favorites, {\n+ localVue,\n+ router,\n+ });\n+ });\n+\n+ test('show correct empty state', () => {\n+ localStorage.setItem('favorites', JSON.stringify([]));\n+ wrapper = mount(Favorites, {\n+ localVue,\n+ router,\n+ });\n+ expect(wrapper.find('.alert-info').html()).toContain(\"You don't have any favorite drinks\");\n+ });\n+});\n",
        "date": "29.10.2019 20:35:06",
        "repo": "alfg/opendrinks",
        "type": "feat",
        "sim_msg": "refactor(script setup): refactor caption, moving script block to top",
        "sim_diff": "diff --git a/src/components/caption/CdrCaption.vue b/src/components/caption/CdrCaption.vue +<script setup>\n+\n+import {\n+ defineComponent,\n+ useCssModule\n+} from 'vue';\n+import { buildClass } from '../../utils/buildClass';\n+\n+const props = defineProps({\n+ summary: {\n+ type: String,\n+ },\n+ credit: {\n+ type: String,\n+ },\n+});\n+\n+const baseClass = 'cdr-caption';\n+const style = useCssModule();\n+const summaryClass = 'cdr-caption__summary';\n+const citeClass = 'cdr-caption__cite';\n+\n+</script>\n+\n<template>\n<div :class=\"style[baseClass]\">\n<p\n</div>\n</template>\n-<script>\n-\n-import { defineComponent, useCssModule } from 'vue';\n-\n-export default defineComponent({\n- name: 'CdrCaption',\n- props: {\n- summary: String,\n- credit: String,\n- },\n- setup() {\n- return {\n- style: useCssModule(),\n- baseClass: 'cdr-caption',\n- summaryClass: 'cdr-caption__summary',\n- citeClass: 'cdr-caption__cite',\n- };\n- },\n-});\n-</script>\n-\n<style lang=\"scss\" module src=\"./styles/CdrCaption.module.scss\">\n</style>\n",
        "chatgpt_rag": "test(unit): update Favorites component tests to include empty state scenario"
    },
    {
        "msg": "feat: normalize network input to allow mixed-case input",
        "diff": "diff --git a/frontend/mina-signer/src/MinaSigner.ts b/frontend/mina-signer/src/MinaSigner.ts @@ -19,10 +19,11 @@ class Client {\nprivate network: network;\nconstructor(options: { network: network }) {\n- if (options.network !== \"mainnet\" && options.network !== \"testnet\") {\n+ const specifiedNetwork = options.network.toLowerCase();\n+ if (specifiedNetwork !== \"mainnet\" && specifiedNetwork !== \"testnet\") {\nthrow \"Invalid Specified Network\";\n}\n- this.network = options.network;\n+ this.network = specifiedNetwork;\n}\n/**\n",
        "date": "24.11.2021 12:29:17",
        "repo": "minaprotocol/mina",
        "type": "feat",
        "sim_msg": "refactor: explicit if",
        "sim_diff": "diff --git a/lib/client-base.js b/lib/client-base.js @@ -865,7 +865,9 @@ function write (client, request) {\n}\nfinished = true\n- err = err || socket[kError]\n+ if (!err) {\n+ err = socket[kError]\n+ }\nif (!err && contentLength !== undefined && bytesWritten !== contentLength) {\nerr = new ContentLengthMismatch()\n",
        "chatgpt_rag": "refactor: use specifiedNetwork variable for network assignment"
    },
    {
        "msg": "feat: add font weight medium and semibold;\nrefactor: update colors;\nfix: change null to unset to properly generate CSS Variables;",
        "diff": "diff --git a/scss/_variables.scss b/scss/_variables.scss @@ -67,7 +67,7 @@ $primary-50: #988fed !default;\n$primary-25: #ccc7f6 !default;\n$secondary-dark: #212233 !default;\n-$secondary: #3c4b64 !default;\n+$secondary: #9da5b1 !default;\n$secondary-50: #9da5b1 !default;\n$secondary-25: #ced2d8 !default;\n@@ -115,9 +115,9 @@ $theme-colors: (\n// scss-docs-end theme-colors-map\n// Text colors\n-$high-emphasis-dark: rgba($black, .87) !default;\n-$medium-emphasis-dark: rgba($black, .6) !default;\n-$disabled-dark: rgba($black, .38) !default;\n+$high-emphasis-dark: rgba(shift-color($gray-base, +26), .87) !default;\n+$medium-emphasis-dark: rgba(shift-color($gray-base, +26), .6) !default;\n+$disabled-dark: rgba(shift-color($gray-base, +26), .38) !default;\n$high-emphasis-light: rgba($white, .87) !default;\n$medium-emphasis-light: rgba($white, .6) !default;\n@@ -399,7 +399,7 @@ $border-widths: (\n5: 5px\n) !default;\n-$border-color: $gray-300 !default;\n+$border-color: $gray-200 !default;\n$border-radius: .25rem !default;\n$border-radius-sm: .2rem !default;\n@@ -454,6 +454,8 @@ $font-size-lg: $font-size-base * 1.25 !default;\n$font-weight-lighter: lighter !default;\n$font-weight-light: 300 !default;\n$font-weight-normal: 400 !default;\n+$font-weight-medium: 500 !default;\n+$font-weight-semibold: 600 !default;\n$font-weight-bold: 700 !default;\n$font-weight-bolder: bolder !default;\n@@ -486,7 +488,7 @@ $headings-font-family: null !default;\n$headings-font-style: null !default;\n$headings-font-weight: 500 !default;\n$headings-line-height: 1.2 !default;\n-$headings-color: null !default;\n+$headings-color: unset !default;\n// scss-docs-start display-headings\n$display-font-sizes: (\n@@ -750,7 +752,7 @@ $form-check-input-width: 1em !default;\n$form-check-min-height: $font-size-base * $line-height-base !default;\n$form-check-padding-start: $form-check-input-width + .5em !default;\n$form-check-margin-bottom: .125rem !default;\n-$form-check-label-color: null !default;\n+$form-check-label-color: unset !default;\n$form-check-label-cursor: null !default;\n$form-check-transition: background-color .15s ease-in-out, background-position .15s ease-in-out, border-color .15s ease-in-out, box-shadow .15s ease-in-out !default;\n@@ -1074,9 +1076,9 @@ $card-inner-border-radius: subtract($card-border-radius, $card-border-w\n$card-cap-padding-y: $card-spacer-y / 2 !default;\n$card-cap-padding-x: $card-spacer-x !default;\n$card-cap-bg: rgba($black, .03) !default;\n-$card-cap-color: null !default;\n+$card-cap-color: unset !default;\n$card-height: null !default;\n-$card-color: null !default;\n+$card-color: unset !default;\n$card-bg: $white !default;\n$card-img-overlay-padding: $spacer !default;\n@@ -1179,7 +1181,7 @@ $toast-max-width: 350px !default;\n$toast-padding-x: .75rem !default;\n$toast-padding-y: .5rem !default;\n$toast-font-size: .875rem !default;\n-$toast-color: null !default;\n+$toast-color: unset !default;\n$toast-background-color: rgba($white, .85) !default;\n$toast-border-width: 1px !default;\n$toast-border-color: rgba(0, 0, 0, .1) !default;\n@@ -1217,7 +1219,7 @@ $modal-dialog-margin-y-sm-up: 1.75rem !default;\n$modal-title-line-height: $line-height-base !default;\n-$modal-content-color: null !default;\n+$modal-content-color: unset !default;\n$modal-content-bg: $white !default;\n$modal-content-border-color: rgba($black, .2) !default;\n$modal-content-border-width: $border-width !default;\n@@ -1308,7 +1310,7 @@ $progress-bar-transition: width .6s ease !default;\n// List group\n// scss-docs-start list-group-variables\n-$list-group-color: null !default;\n+$list-group-color: unset !default;\n$list-group-bg: $white !default;\n$list-group-border-color: rgba($black, .125) !default;\n$list-group-border-width: $border-width !default;\n@@ -1430,7 +1432,7 @@ $breadcrumb-padding-y: 0 !default;\n$breadcrumb-padding-x: 0 !default;\n$breadcrumb-item-padding-x: .5rem !default;\n$breadcrumb-margin-bottom: 1rem !default;\n-$breadcrumb-bg: null !default;\n+$breadcrumb-bg: unset !default;\n$breadcrumb-divider-color: $gray-600 !default;\n$breadcrumb-active-color: $gray-600 !default;\n$breadcrumb-divider: quote(\"/\") !default;\n@@ -1605,4 +1607,4 @@ $kbd-font-size: $code-font-size !default;\n$kbd-color: $high-emphasis-light !default;\n$kbd-bg: $gray-900 !default;\n-$pre-color: null !default;\n+$pre-color: unset !default;\n",
        "date": "04.01.2021 15:10:43",
        "repo": "coreui/coreui",
        "type": "feat",
        "sim_msg": "chore: use font mixin for global styles",
        "sim_diff": "diff --git a/src/scss/global.scss b/src/scss/global.scss @import '~scss/colors.module.scss';\n@import '~scss/breakpoints.module.scss';\n@import '~scss/helpers.module.scss';\n+@import '~scss/type.module.scss';\nhtml {\nbox-sizing: border-box;\n@@ -14,7 +15,7 @@ html {\n}\nbody {\n- font-size: 16px;\n+ @include type-size(200);\ncolor: $text;\nfont: normal 100%/1.5 'system-ui', '-apple-system', 'BlinkMacSystemFont',\n'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans',\n@@ -178,7 +179,7 @@ Headline treatments\n*/\n.hed-primary,\n.module-content h2 {\n- font-size: 1.375rem;\n+ @include type-size(400);\nline-height: 1.25;\n@include margin(16, bottom);\n}\n@@ -186,23 +187,23 @@ Headline treatments\n@media (min-width: $viewport-md) {\n.hed-primary,\n.module-content h2 {\n- font-size: 1.875rem;\n+ @include type-size(500);\n}\n}\n.hed-secondary {\n- font-size: 1.125rem;\n+ @include type-size(300);\n@include margin(8, bottom);\n}\n@media (min-width: $viewport-md) {\n.hed-secondary {\n- font-size: 1.4375rem;\n+ @include type-size(400);\n}\n}\n.hed-featured {\n- font-size: 1.4rem;\n+ @include type-size(400);\nfont-weight: 300;\nline-height: 1.25;\n@include margin(16, bottom);\n@@ -210,13 +211,13 @@ Headline treatments\n@media (min-width: $viewport-md) {\n.hed-featured {\n- font-size: 1.75rem;\n+ @include type-size(500);\n}\n}\n.hed-landscape {\ncolor: $color-slate-700;\n- font-size: 1.125rem;\n+ @include type-size(300);\ntext-align: center;\nfont-variant: all-small-caps;\n// margin: 0 0 0.2rem;\n@@ -231,10 +232,9 @@ Typography\n.layout--content-and-rail {\n.layout--content-primary {\nfont-size: 18px;\n- font-size: 1.125rem;\n+ @include type-size(300);\n@media (min-width: $viewport-lg) {\n- font-size: 22px;\n- font-size: 1.375rem;\n+ @include type-size(400);\n}\nh2:first-child {\nmargin-top: 0;\n@@ -244,8 +244,7 @@ Typography\n.layout--content-primary {\n@media (min-width: $viewport-lg) {\n- font-size: 18px;\n- font-size: 1.125rem;\n+ @include type-size(300);\n}\n}\n@@ -270,13 +269,11 @@ Typography\n.module-content {\nh2 {\n- font-size: 24px;\n- font-size: 1.5rem;\n+ @include type-size(400);\nline-height: 1.25;\nmargin: spacer(32) 0 spacer(4);\n@media (min-width: $viewport-lg) {\n- font-size: 30px;\n- font-size: 1.875rem;\n+ @include type-size(500);\n}\n}\n@@ -285,7 +282,7 @@ Typography\n}\nh3 {\n- font-size: 1.35rem;\n+ @include type-size(400);\nmargin: spacer(32) 0 spacer(4);\n}\n@@ -302,7 +299,7 @@ Typography\n@media (min-width: $viewport-md) {\n.layout--content-secondary {\n- font-size: 1.125rem;\n+ @include type-size(300);\nline-height: 1.3;\n}\n}\n",
        "chatgpt_rag": "style: update secondary color in variables.scss file"
    },
    {
        "msg": "feat(popover): events emission on  by Popover component",
        "diff": "diff --git a/packages/kiwi-core/src/Popover/index.js b/packages/kiwi-core/src/Popover/index.js @@ -52,12 +52,15 @@ const Popover = {\nmethods: {\nclosePopover () {\nthis._isOpen = false\n+ this.$emit('close')\n},\nopenPopover () {\nthis._isOpen = true\n+ this.$emit('open')\n},\ntoggleOpen () {\nthis._isOpen = !this._isOpen\n+ this.$emit('toggle', this._isOpen)\n},\n/**\n* Sets the trigger node value to reactive context\n",
        "date": "09.02.2020 16:11:49",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "feat",
        "sim_msg": "fix(popover): fixes close emit argument\nemit `bv::hide::popover` instead of `bv::hide::popover` to close a specific popover",
        "sim_diff": "diff --git a/src/directives/popover/README.md b/src/directives/popover/README.md @@ -388,7 +388,7 @@ this.$root.$emit('bv::hide::popover');\nTo close a **specific popover**, pass the trigger element's `id` as the first argument:\n```js\n-this.$root.$emit('bv::show::popover', 'my-trigger-button-id');\n+this.$root.$emit('bv::hide::popover', 'my-trigger-button-id');\n```\nTo open (show) a **specific popover**, pass the trigger element's `id` as the first argument when\n",
        "chatgpt_rag": "feat(Popover): add event emitters for close, open, and toggle\nAdded event emitters for close, open, and toggle functions in the Popover component to emit 'close', 'open', and 'toggle' events respectively."
    },
    {
        "msg": "feat(Input): add `autoCapitalize` to html input props",
        "diff": "diff --git a/src/elements/Input/Input.js b/src/elements/Input/Input.js @@ -22,7 +22,7 @@ export const htmlInputPropNames = [\n'selected', 'defaultValue', 'defaultChecked',\n// LIMITED HTML PROPS\n- 'autoComplete', 'autoFocus', 'checked', 'form', 'max', 'maxLength', 'min',\n+ 'autoCapitalize', 'autoComplete', 'autoFocus', 'checked', 'form', 'max', 'maxLength', 'min',\n'name', 'pattern', 'placeholder', 'readOnly', 'required', 'step', 'type', 'value',\n// Heads Up!\n",
        "date": "13.02.2017 19:27:33",
        "repo": "semantic-org/semantic-ui-react",
        "type": "feat",
        "sim_msg": "feat(Input): add forwardRef",
        "sim_diff": "diff --git a/components/system/components/Input.js b/components/system/components/Input.js @@ -12,11 +12,10 @@ const INPUT_STYLES = (theme) => css`\nfont-family: ${Constants.font.text};\n-webkit-appearance: none;\nwidth: 100%;\n- height: 40px;\n+ height: 100%;\nbackground: transparent;\nfont-size: ${theme.typescale.lvl1};\nborder-radius: 12px;\n- padding: 10px 12px;\noutline: 0;\nborder: none;\nbox-sizing: border-box;\n@@ -50,7 +49,6 @@ const STYLES_UNIT = css`\n`;\nconst STYLES_INPUT_CONTAINER = css`\n- width: 100%;\nbox-sizing: border-box;\nposition: relative;\nmax-width: 480px;\n@@ -72,6 +70,7 @@ const STYLES_INPUT = css`\njustify-content: flex-start;\nheight: 40px;\nborder-radius: 12px;\n+ padding: 10px 12px;\nbackground: ${Constants.system.white};\ntext-overflow: ellipsis;\nwhite-space: nowrap;\n@@ -129,7 +128,7 @@ const INPUT_COLOR_MAP = {\nWARNING: Constants.system.yellow,\n};\n-export class Input extends React.Component {\n+class InputPrimitive extends React.Component {\n_unit;\n_input;\n_isPin = this.props.type === \"pin\";\n@@ -228,7 +227,6 @@ export class Input extends React.Component {\nstyle={this.props.descriptionStyle}\ndescription={this.props.description}\n/>\n- <FocusRing within>\n<div\ncss={[STYLES_INPUT, this.props.inputCss]}\nstyle={{\n@@ -244,6 +242,9 @@ export class Input extends React.Component {\n<input\nref={(c) => {\nthis._input = c;\n+ if (this.props.innerRef) {\n+ this.props.innerRef?.(c);\n+ }\n}}\ncss={[INPUT_STYLES, this._isPin && STYLES_PIN_INPUT]}\nautoFocus={this.props.autoFocus}\n@@ -266,6 +267,8 @@ export class Input extends React.Component {\nreadOnly={this.props.readOnly}\nrequired={this.props.required}\nmaxLength={this.props.maxLength}\n+ onKeyDown={this.props.onKeyDown}\n+ tabIndex={this.props.tabIndex}\nstyle={{\nwidth: this.props.copyable || this.props.icon ? \"calc(100% - 32px)\" : \"100%\",\n...this.props.textStyle,\n@@ -295,9 +298,10 @@ export class Input extends React.Component {\n/>\n) : null}\n</div>\n- </FocusRing>\n</div>\n</>\n);\n}\n}\n+\n+export const Input = React.forwardRef((props, ref) => <InputPrimitive innerRef={ref} {...props} />);\n",
        "chatgpt_rag": "fix(Input): update htmlInputPropNames with autoCapitalize"
    },
    {
        "msg": "feat(styles): add more comments in /utils.jsx",
        "diff": "diff --git a/src/common/styles/utils.jsx b/src/common/styles/utils.jsx @@ -6,6 +6,9 @@ const pxToEm = px => {\n}\nconst iWantToUseEm = true\n+// NOTE: This grid don't match SUI's grid.\n+// NOTE: RSUI has <Responsive> element!\n+// You might don't need media template function for styled-components\nconst sizes = _.mapValues(\n{\nxs: 0, // Extra small screen / phone\n@@ -15,13 +18,13 @@ const sizes = _.mapValues(\nxl: 1200 // Extra large screen / wide desktop\n},\n(value, key) => {\n- // NOTE: Please, read more about `em`, before switching to it\n+ // NOTE: Please, read more about `em` before switching\n// https://stackoverflow.com/questions/22228568/switching-to-em-based-media-queries\nreturn iWantToUseEm ? pxToEm(value) : value + 'px'\n}\n)\n-// FIXME: @Metnew: dirty-hardcode version of media template!\n+// FIXME: @Metnew: this block may be rewritten more elegant (like the code below, from off docs)\nexport const media = {\nxs: (...args) => css`\n@media only screen and (max-width: ${sizes.sm}) {\n@@ -66,6 +69,7 @@ export const media = {\n}\n// NOTE: from official docs, but it looks like a black-voodoo-magic\n+// ####\n// // iterate through the sizes and create a media template\n// export const media = Object.keys(sizes).reduce((accumulator, label, i) => {\n// console.log(accumulator, label)\n",
        "date": "30.09.2017 14:25:05",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "docs(Pagination): modify text",
        "sim_diff": "diff --git a/docs/pagination/theme/index.jsx b/docs/pagination/theme/index.jsx @@ -43,31 +43,31 @@ class NormalFunctionDemo extends React.Component {\ntrigger: 'onFunctionChange'\n})}>\n<Demo title=\"Basic\">\n- <DemoGroup label=\"normal(L)\">\n+ <DemoGroup label=\"Normal(L)\">\n<Pagination locale={locale} defaultCurrent={2} size=\"large\" shape={shape} />\n</DemoGroup>\n- <DemoGroup label=\"normal(M)\">\n+ <DemoGroup label=\"Normal(M)\">\n<Pagination locale={locale} defaultCurrent={2} size=\"medium\" shape={shape} />\n</DemoGroup>\n- <DemoGroup label=\"normal(S)\">\n+ <DemoGroup label=\"Normal(S)\">\n<Pagination locale={locale} defaultCurrent={2} size=\"small\" shape={shape} />\n</DemoGroup>\n- <DemoGroup label=\"with-filter(L)\">\n+ <DemoGroup label=\"With Filter(L)\">\n<Pagination locale={locale} defaultCurrent={2} size=\"large\" pageSizeSelector=\"filter\" shape={shape} />\n</DemoGroup>\n- <DemoGroup label=\"with-filter(M)\">\n+ <DemoGroup label=\"With Filter(M)\">\n<Pagination locale={locale} defaultCurrent={2} size=\"medium\" pageSizeSelector=\"filter\" shape={shape} />\n</DemoGroup>\n- <DemoGroup label=\"with-filter(S)\">\n+ <DemoGroup label=\"With Filter(S)\">\n<Pagination locale={locale} defaultCurrent={2} size=\"small\" pageSizeSelector=\"filter\" shape={shape} />\n</DemoGroup>\n- <DemoGroup label=\"with-dropdown(L)\">\n+ <DemoGroup label=\"With Dropdown(L)\">\n<Pagination locale={locale} defaultCurrent={2} size=\"large\" pageSizeSelector=\"dropdown\" pageSizePosition=\"end\" shape={shape} />\n</DemoGroup>\n- <DemoGroup label=\"with-dropdown(M)\">\n+ <DemoGroup label=\"With Dropdown(M)\">\n<Pagination locale={locale} defaultCurrent={2} size=\"medium\" pageSizeSelector=\"dropdown\" pageSizePosition=\"end\" shape={shape} />\n</DemoGroup>\n- <DemoGroup label=\"with-dropdown(S)\">\n+ <DemoGroup label=\"With Dropdown(S)\">\n<Pagination locale={locale} defaultCurrent={2} size=\"small\" pageSizeSelector=\"dropdown\" pageSizePosition=\"end\" shape={shape} />\n</DemoGroup>\n</Demo>\n@@ -98,13 +98,13 @@ class SimpleFunctionDemo extends React.Component {\ntrigger: 'onFunctionChange'\n})}>\n<Demo title=\"Basic\">\n- <DemoGroup label=\"normal(L)\">\n+ <DemoGroup label=\"Normal(L)\">\n<Pagination locale={locale} defaultCurrent={2} size=\"large\" type=\"simple\" shape={shape} />\n</DemoGroup>\n- <DemoGroup label=\"normal(M)\">\n+ <DemoGroup label=\"Normal(M)\">\n<Pagination locale={locale} defaultCurrent={2} size=\"medium\" type=\"simple\" shape={shape} />\n</DemoGroup>\n- <DemoGroup label=\"normal(S)\">\n+ <DemoGroup label=\"Normal(S)\">\n<Pagination locale={locale} defaultCurrent={2} size=\"small\" type=\"simple\" shape={shape} />\n</DemoGroup>\n</Demo>\n@@ -135,13 +135,13 @@ class MiniFunctionDemo extends React.Component {\ntrigger: 'onFunctionChange'\n})}>\n<Demo title=\"Basic\">\n- <DemoGroup label=\"normal(L)\">\n+ <DemoGroup label=\"Normal(L)\">\n<Pagination locale={locale} defaultCurrent={2} size=\"large\" type=\"mini\" shape={shape} />\n</DemoGroup>\n- <DemoGroup label=\"normal(M)\">\n+ <DemoGroup label=\"Normal(M)\">\n<Pagination locale={locale} defaultCurrent={2} size=\"medium\" type=\"mini\" shape={shape} />\n</DemoGroup>\n- <DemoGroup label=\"normal(S)\">\n+ <DemoGroup label=\"Normal(S)\">\n<Pagination locale={locale} defaultCurrent={2} size=\"small\" type=\"mini\" shape={shape} />\n</DemoGroup>\n</Demo>\n",
        "chatgpt_rag": "src(common/styles): update grid comments and media template function"
    },
    {
        "msg": "feat: Clean output prior to production build",
        "diff": "diff --git a/src/build.js b/src/build.js +import { promises as fs } from 'fs';\nimport * as kl from 'kolorist';\nimport { bundleProd } from './bundler.js';\nimport { bundleStats } from './lib/output-utils.js';\n@@ -11,6 +12,8 @@ import { setCwd } from './plugins/npm-plugin/registry.js';\nexport default async function build(options = {}) {\noptions.out = options.out || 'dist';\n+ await fs.rmdir(options.out, { recursive: true });\n+\n// @todo remove this hack once registry.js is instantiable\nsetCwd(options.cwd);\n",
        "date": "03.12.2020 19:06:51",
        "repo": "preactjs/wmr",
        "type": "feat",
        "sim_msg": "chore: re-enable full js build",
        "sim_diff": "diff --git a/build/script.build.javascript.js b/build/script.build.javascript.js @@ -69,13 +69,13 @@ const builds = [\n}\n]\n-// addAssets(builds, 'i18n')\n-// addAssets(builds, 'icons')\n+addAssets(builds, 'i18n')\n+addAssets(builds, 'icons')\n-// require('./build.transforms').generate()\n-// build(builds).then(() => {\n+require('./build.transforms').generate()\n+build(builds).then(() => {\nrequire('./build.helpers').generate()\n-// })\n+})\n/**\n* Helpers\n",
        "chatgpt_rag": "chore: update build process to remove output directory before building"
    },
    {
        "msg": "feat: expose $el while evaluating data expression",
        "diff": "diff --git a/src/component.js b/src/component.js @@ -17,7 +17,7 @@ export default class Component {\nconst dataExpression = dataAttr === '' ? '{}' : dataAttr\nconst initExpression = this.$el.getAttribute('x-init')\n- this.unobservedData = seedDataForCloning ? seedDataForCloning : saferEval(dataExpression, {})\n+ this.unobservedData = seedDataForCloning ? seedDataForCloning : saferEval(dataExpression, { $el: this.$el })\n/* IE11-ONLY:START */\n// For IE11, add our magic properties to the original data for access.\n",
        "date": "12.05.2020 09:11:16",
        "repo": "alpinejs/alpine",
        "type": "feat",
        "sim_msg": "docs: fix Link warning/error",
        "sim_diff": "diff --git a/docs/components/Link/index.web.js b/docs/components/Link/index.web.js @@ -14,7 +14,7 @@ const Link = (props: Object) => {\n\" \" + StyleSheet.resolve(injectedProps.style).className;\ninjectedProps.style = undefined;\n}\n- if (typeof activeStyle === \"number\") {\n+ if (typeof injectedProps.activeStyle === \"number\") {\ninjectedProps.activeClassName +=\n\" \" + StyleSheet.resolve(injectedProps.activeStyle).className;\ninjectedProps.activeStyle = undefined;\n",
        "chatgpt_rag": "src: add $el to saferEval dataExpression for component"
    },
    {
        "msg": "feat(Modal): pass event object to toggle prop",
        "diff": "diff --git a/src/Modal.js b/src/Modal.js @@ -163,13 +163,13 @@ class Modal extends React.Component {\nconst container = this._dialog;\nif (e.target && !container.contains(e.target) && this.props.toggle) {\n- this.props.toggle();\n+ this.props.toggle(e);\n}\n}\nhandleEscape(e) {\nif (this.props.isOpen && this.props.keyboard && e.keyCode === 27 && this.props.toggle) {\n- this.props.toggle();\n+ this.props.toggle(e);\n}\n}\n",
        "date": "16.03.2018 15:03:47",
        "repo": "reactstrap/reactstrap",
        "type": "feat",
        "sim_msg": "feat: adding className pass-through to .modal-dialog element",
        "sim_diff": "diff --git a/src/Modal/index.jsx b/src/Modal/index.jsx @@ -174,7 +174,7 @@ class Modal extends React.Component {\nrenderModal() {\nconst { open } = this.state;\n- const { renderHeaderCloseButton } = this.props;\n+ const { renderHeaderCloseButton, dialogClassName } = this.props;\nreturn (\n<div>\n@@ -201,9 +201,12 @@ class Modal extends React.Component {\nonMouseDown={this.close}\n>\n<div\n- className={classNames({\n+ className={classNames(\n+ {\n'modal-dialog': open,\n- })}\n+ },\n+ dialogClassName,\n+ )}\nrole=\"dialog\"\naria-modal\naria-labelledby={this.headerId}\n@@ -280,6 +283,10 @@ Modal.propTypes = {\n}),\n/** specifies whether a close button is rendered in the modal header. It defaults to true. */\nrenderHeaderCloseButton: PropTypes.bool,\n+ /**\n+ * Specifies optional classes to add to the element with the '.modal-dialog' class. See Bootstrap documentation for possible classes. Some options: modal-lg, modal-sm, modal-dialog-centered\n+ */\n+ dialogClassName: PropTypes.string,\n};\nModal.defaultProps = {\n@@ -289,6 +296,7 @@ Modal.defaultProps = {\ncloseText: 'Close',\nvariant: {},\nrenderHeaderCloseButton: true,\n+ dialogClassName: undefined,\n};\n",
        "chatgpt_rag": "fix: update toggle function to pass event parameter"
    },
    {
        "msg": "feat: keep focusing inside the popup by `tab` key",
        "diff": "diff --git a/src/utils/popup/popup-manager.js b/src/utils/popup/popup-manager.js @@ -149,19 +149,41 @@ const PopupManager = {\n}\n}\n};\n-!Vue.prototype.$isServer && window.addEventListener('keydown', function(event) {\n- if (event.keyCode === 27) { // ESC\n+\n+const getTopPopup = function() {\n+ if (Vue.prototype.$isServer) return;\nif (PopupManager.modalStack.length > 0) {\n- const topItem = PopupManager.modalStack[PopupManager.modalStack.length - 1];\n- if (!topItem) return;\n- const instance = PopupManager.getInstance(topItem.id);\n- if (instance.closeOnPressEscape) {\n- instance.handleClose\n- ? instance.handleClose()\n- : (instance.handleAction ? instance.handleAction('cancel') : instance.close());\n+ const topPopup = PopupManager.modalStack[PopupManager.modalStack.length - 1];\n+ if (!topPopup) return;\n+ const instance = PopupManager.getInstance(topPopup.id);\n+\n+ return instance;\n}\n+};\n+\n+if (!Vue.prototype.$isServer) {\n+ // handle `esc` key when the popup is shown\n+ window.addEventListener('keydown', function(event) {\n+ if (event.keyCode === 27) {\n+ const topPopup = getTopPopup();\n+\n+ if (topPopup && topPopup.closeOnPressEscape) {\n+ topPopup.handleClose\n+ ? topPopup.handleClose()\n+ : (topPopup.handleAction ? topPopup.handleAction('cancel') : topPopup.close());\n}\n}\n});\n+ // keep focusing inside the popup by `tab` key\n+ document.addEventListener('focusin', function(event) {\n+ const topPopup = getTopPopup();\n+\n+ if (topPopup && !topPopup.$el.contains(event.target)) {\n+ event.stopPropagation();\n+ topPopup.$el.focus();\n+ }\n+ });\n+}\n+\nexport default PopupManager;\n",
        "date": "10.05.2017 17:04:41",
        "repo": "hug-sun/element3",
        "type": "feat",
        "sim_msg": "fix(Dialog plugin): Avoid submitting dialog if using a textarea prompt",
        "sim_diff": "diff --git a/ui/src/components/dialog-plugin/DialogPlugin.js b/ui/src/components/dialog-plugin/DialogPlugin.js @@ -118,7 +118,7 @@ export default Vue.extend({\ninput: v => { this.prompt.model = v },\nkeyup: evt => {\n// if ENTER key\n- if (evt.keyCode === 13) {\n+ if (this.prompt.type !== 'textarea' && evt.keyCode === 13) {\nthis.onOk()\n}\n}\n",
        "chatgpt_rag": "feat(Popup manager): Handle ESC key and focus inside popup\n- Added a function to get the top popup instance\n- Added event listener for `keydown` to handle `esc` key when popup is shown\n- Added event listener for `focusin` to keep focusing inside the popup by `tab` key"
    },
    {
        "msg": "feat(api-utils): make xhr wrapper less complex",
        "diff": "diff --git a/src/common/api/utils/index.js b/src/common/api/utils/index.js -// @flow\n-export {get, post} from './xhr_wrapper'\n+/**\n+ * @flow\n+ * @file Simple fetch wrapper\n+ */\n+import fetch from 'isomorphic-fetch'\n+\n+// USAGE:\n+export const get = requestWrapper('GET')\n+// get('https://www.google.com', options)\n+export const post = requestWrapper('POST')\n+// post('https://www.google.com', data)\n+\n+// Create request wrapper for certain method\n+function requestWrapper (method: 'GET' | 'POST' | 'DELETE' | 'PUT' | 'PATCH') {\n+ // Creates request to `url` with `data`\n+ return async (url: string, data: any = null) => {\n+ const body = data ? {body: JSON.stringify(data)} : {}\n+\n+ const request = {\n+ method,\n+ headers: {},\n+ mode: process.env.NODE_ENV === 'development' ? 'cors' : 'same-origin',\n+ ...body\n+ }\n+\n+ return fetch(url, request)\n+ .then(checkStatus)\n+ .then(parseJSON)\n+ .catch((err: any) => err)\n+ }\n+}\n+\n+async function parseJSON (res: Response): Object {\n+ let json: Object\n+ const {status} = res\n+ // status response field in return object\n+ try {\n+ json = await res.json()\n+ } catch (e) {\n+ if (res.status === 204) {\n+ return {ok: true, data: {}, status}\n+ }\n+ return {ok: false, status}\n+ }\n+ if (!res.ok) {\n+ return {data: json, ok: false, status}\n+ }\n+ return {data: json, ok: true, status}\n+}\n+\n+function checkStatus (response: Response): Response {\n+ const {status} = response\n+ if (status >= 200 && status < 300) {\n+ // Everything is ok\n+ } else if (status >= 300 && status < 400) {\n+ // 300 - Multiple Choices\n+ // 301 - Moved Permanently,\n+ // 302 - Found, Moved Temporarily\n+ // 304 - not modified\n+ // 307 - Temporary Redirect\n+ } else if (status === 400) {\n+ // Probably is a validation error\n+ } else if (status === 403 || status === 401) {\n+ // 401 - Forbidden\n+ // 403 - Unauthorized\n+ } else if (status === 404) {\n+ // Not Found\n+ } else if (status >= 500) {\n+ // Server error\n+ }\n+ return response\n+}\n",
        "date": "18.02.2018 15:58:11",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "refactor: move error handling into new methods",
        "sim_diff": "diff --git a/lib/common/actions/index.js b/lib/common/actions/index.js @@ -7,16 +7,24 @@ import { setErrorMessage } from '../../manager/actions/status'\nimport type {dispatchFn, getStateFn} from '../../types/reducers'\n+type ErrorResponse = {\n+ detail: string,\n+ message?: string\n+}\n+\nexport function createVoidPayloadAction (type: string) {\nreturn () => ({ type })\n}\n-export function secureFetch (url: string, method: string = 'get', payload?: any, raw: boolean = false, isJSON: boolean = true, actionOnFail?: string): any {\n+export function secureFetch (\n+ url: string,\n+ method: string = 'get',\n+ payload?: any,\n+ raw: boolean = false,\n+ isJSON: boolean = true,\n+ actionOnFail?: string\n+): any {\nreturn function (dispatch: dispatchFn, getState: getStateFn) {\n- function consoleError (message) {\n- console.error(`Error making ${method} request to ${url}: `, message)\n- }\n-\n// if running in a test environment, fetch will complain when using relative\n// urls, so prefix all urls with http://localhost:4000.\nif (process.env.NODE_ENV === 'test') {\n@@ -42,50 +50,57 @@ export function secureFetch (url: string, method: string = 'get', payload?: any,\nreturn fetch(url, {method, headers, body})\n// Catch basic error during fetch\n.catch(err => {\n- const message = `Error making request: (${err})`\n- consoleError(message)\n+ const message = `Error making ${method} request to ${url}`\n+ console.error(message, err)\nreturn dispatch(setErrorMessage({message}))\n})\n- .then(res => {\n+ .then(res => dispatch(handleResponse(method, url, res, raw)))\n+ }\n+}\n+\n+function handleResponse (method, url, res, raw, actionOnFail) {\n+ return async function (dispatch: dispatchFn, getState: getStateFn) {\n// if raw response is requested\nif (raw) return res\n- let action\n- // check for errors\nconst {status} = res\n- if (status >= 500) {\n- action = 'RELOAD'\n- res.json().then(json => {\n- const {detail, message} = json\n- const unknown = `Network error!\\n\\n(${method} request on ${url})`\n- consoleError(message || JSON.stringify(json) || unknown)\n- dispatch(setErrorMessage({\n- message: message || JSON.stringify(json) || unknown,\n- action,\n- detail\n- }))\n- })\n+ // Return response with no further action if there are no errors.\n+ if (status < 400) return res\n+ // check for errors\n+ let json\n+ try {\n+ json = await res.json()\n+ } catch (e) {\n+ console.warn('Could not parse JSON from error response')\n+ }\n+ const errorMessage = getErrorMessageFromJson(json, status, method, url, actionOnFail)\n+ dispatch(setErrorMessage(errorMessage))\nreturn null\n- } else if (status >= 400) {\n+ }\n+}\n+\n+function getErrorMessageFromJson (\n+ json: ?ErrorResponse,\n+ status,\n+ method,\n+ url,\n+ actionOnFail\n+) {\n+ let action = 'RELOAD'\n+ let detail\n+ // let detail, message\n+ let errorMessage = `Network error!\\n\\n(${method} request on ${url})`\n+ if (status < 500) {\naction = status === 401\n? 'LOG_IN'\n: actionOnFail\n- res.json()\n- .then(json => {\n- const {detail, message} = json\n- const unknown = `Unknown (${status}) error occurred while making request`\n- consoleError(message || JSON.stringify(json) || unknown)\n- dispatch(setErrorMessage({\n- message: message || JSON.stringify(json) || unknown,\n- action,\n- detail\n- }))\n- })\n- return null\n- } else {\n- return res\n+ errorMessage = `Unknown (${status}) error occurred while making request`\n}\n- })\n+ if (json) {\n+ detail = json.detail\n+ errorMessage = json.message || JSON.stringify(json)\n}\n+ console.error(`Error making ${method} request to ${url}: `, errorMessage)\n+ return { action, detail, message: errorMessage }\n}\nfunction graphQLErrorsToString (errors: Array<{locations: any, message: string}>): Array<string> {\n",
        "chatgpt_rag": "refactor: move error handling into new methods in API utils file"
    },
    {
        "msg": "feat(locals): add basic text for dashboard",
        "diff": "diff --git a/locals/en.json b/locals/en.json {\n- \"Header.Popup.HeaderButton\": \"Hello {name}\"\n+ \"Dashboard.Text\": \"Hello HELLOOOO\"\n}\n",
        "date": "29.09.2017 20:51:38",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "fix: updated position of close icon in Popup modal",
        "sim_diff": "diff --git a/src/renderer/common/popup.jsx b/src/renderer/common/popup.jsx @@ -17,9 +17,6 @@ const styles = theme => ({\nbackground: `linear-gradient(135deg, rgba(43, 53, 64, 0.9) 0%, rgba(30, 38, 46, 0.9) 100%)`\n}\n},\n- closeButton: {\n- top: '20px'\n- },\nheader: {\nalignItems: 'center',\ndisplay: 'flex',\n",
        "chatgpt_rag": "feat: added new text for Dashboard in English locale"
    },
    {
        "msg": "feat: if RollbarProxy is defined, use the proxy to send all Rollbar events",
        "diff": "diff --git a/src/browser/transport.js b/src/browser/transport.js @@ -71,7 +71,23 @@ function _makeZoneRequest(accessToken, url, method, data, callback, requestFacto\n}\n}\n+/* global RollbarProxy */\n+function _proxyRequest(json, callback) {\n+ var rollbarProxy = new RollbarProxy();\n+ rollbarProxy.sendJsonPayload(\n+ json,\n+ function(_msg) { /* do nothing */ }, // eslint-disable-line no-unused-vars\n+ function(err) {\n+ callback(new Error(err));\n+ }\n+ );\n+}\n+\nfunction _makeRequest(accessToken, url, method, data, callback, requestFactory) {\n+ if (typeof RollbarProxy !== 'undefined') {\n+ return _proxyRequest(data, callback);\n+ }\n+\nvar request;\nif (requestFactory) {\nrequest = requestFactory();\n",
        "date": "11.04.2019 15:14:42",
        "repo": "rollbar/rollbar.js",
        "type": "feat",
        "sim_msg": "refactor: Add rules headers to tunnel proxy headers",
        "sim_diff": "diff --git a/lib/index.js b/lib/index.js @@ -119,6 +119,16 @@ function tunnelProxy(server, proxy) {\nreturn emitError(new Error('No plugin.tunnelServer'));\n}\nproxyUrl = 'proxy://127.0.0.1:' + tunnelPort;\n+ headers[pluginMgr.FULL_URL_HEADER] = encodeURIComponent(tunnelUrl);\n+ if (req.reqId) {\n+ headers[pluginMgr.REQ_ID_HEADER] = req.reqId;\n+ }\n+ var localHost = _rules.host;\n+ if (localHost) {\n+ headers[pluginMgr.LOCAL_HOST_HEADER] = headers[pluginMgr.CUR_HOST_HEADER]\n+ = encodeURIComponent(util.removeProtocol(localHost.matcher, true)\n+ + (localHost.port ? ':' + localHost.port : ''));\n+ }\n}\nvar realUrl = _rules.rule && _rules.rule.url.replace('https:', 'tunnel:');\n",
        "chatgpt_rag": "feat: Add RollbarProxy integration for sending JSON payload in _makeRequest function"
    },
    {
        "msg": "feat: finally updating sponsor section to separate sponsors",
        "diff": "diff --git a/components/ReusableSections/SponsorsSection/SponsorsSection.js b/components/ReusableSections/SponsorsSection/SponsorsSection.js import React from 'react';\n-import Content from 'components/Content/Content';\n+import Container from 'components/Container/Container';\n+import Heading from 'components/Heading/Heading';\nimport PartnerLogoLink from 'components/PartnerLogoLink/PartnerLogoLink';\n-import partners from 'common/constants/partners';\n+import partners, { PARTNER_TYPES } from 'common/constants/partners';\n+import styles from './SponsorsSection.css';\n+\n+const isPaidSponsor = partner => partner.type === PARTNER_TYPES.PAID;\nconst SponsorsSection = () => (\n- <Content\n- title=\"Sponsors\"\n- theme=\"gray\"\n- hasTitleUnderline\n- columns={partners.map(partner => (\n+ <Container theme=\"gray\">\n+ <Heading text=\"Sponsors\" hasTitleUnderline headingLevel={3} />\n+\n+ <Heading text=\"Paid Sponsors\" headingLevel={4} />\n+ <p>\n+ These sponsors have donated cash to help keep the mission going here at Operation Code. They\n+ may or may not have also donated to our cause via others means.\n+ </p>\n+ <div className={styles.columnsContainer}>\n+ {partners\n+ .filter(x => isPaidSponsor(x))\n+ .map(partner => (\n+ <PartnerLogoLink key={partner.name} {...partner} size=\"large\" />\n+ ))}\n+ </div>\n+\n+ <Heading text=\"In-Kind Sponsors\" headingLevel={4} />\n+ <p>\n+ The following organizations have helped Operation Code through services, products,\n+ advertisements, scholarships, or sponsorships. We thank them for their contributions.\n+ </p>\n+ <div className={styles.columnsContainer}>\n+ {partners\n+ .filter(x => !isPaidSponsor(x))\n+ .map(partner => (\n<PartnerLogoLink key={partner.name} {...partner} />\n))}\n- />\n+ </div>\n+ </Container>\n);\nexport default SponsorsSection;\n",
        "date": "16.10.2019 13:23:14",
        "repo": "operationcode/front-end",
        "type": "feat",
        "sim_msg": "fix: alignment and style of UI elements",
        "sim_diff": "diff --git a/src/renderer/marketplace/incorporation/pay/payment-confirmation-content.jsx b/src/renderer/marketplace/incorporation/pay/payment-confirmation-content.jsx import React, { Component } from 'react';\n-import { Grid, FormHelperText, withStyles } from '@material-ui/core';\n+import { Grid, withStyles, Typography, Button } from '@material-ui/core';\n-import { StyledButton, ExchangeLargeIcon, P } from 'selfkey-ui';\n+import { ExchangeLargeIcon } from 'selfkey-ui';\nconst styles = theme => ({\n- text: {\n- fontSize: '18px',\n- lineHeight: '30px'\n- },\nfooter: {\nmarginTop: '30px',\npaddingTop: '30px',\nborderTop: '1px solid #475768'\n},\n- contentSection: {\n- marginBottom: '20px',\n- marginTop: '20px'\n- },\n- understandLabel: {\n- fontFamily: theme.typography.fontFamily,\n- fontSize: '14px',\n- lineHeight: '21px',\n- color: '#93B0C1'\n- },\n- understandCheckbox: {\n- color: '#00C0D9',\n- '&$primary$checked': {\n- color: '#00C0D9'\n- }\n- },\nactions: {\n'&>button': {\nmarginRight: '20px',\nmarginTop: '30px'\n}\n},\n- primary: {},\n- checked: {}\n+ bold: {\n+ fontWeight: 600\n+ },\n+ textRight: {\n+ textAlign: 'right'\n+ },\n+ bottomSpace: {\n+ marginBottom: '30px'\n+ }\n});\nclass PaymentConfirmationContentComponent extends Component {\n@@ -61,42 +48,72 @@ class PaymentConfirmationContentComponent extends Component {\n</Grid>\n<Grid item xs={10}>\n<Grid container direction=\"column\" justify=\"flex-start\" alignItems=\"stretch\">\n- <Grid item classes={{ item: classes.contentSection }}>\n- <P className={classes.text}>Payment Confirmation</P>\n+ <Grid item>\n+ <Typography variant=\"h1\" gutterBottom>\n+ Payment Confirmation\n+ </Typography>\n</Grid>\n- <Grid item classes={{ item: classes.contentSection }}>\n- <P className={classes.text}>Transaction ID: {txId}</P>\n+ <Grid item className={classes.bottomSpace}>\n+ <Typography variant=\"subtitle2\" color=\"secondary\" gutterBottom>\n+ Transaction ID: {txId}\n+ </Typography>\n</Grid>\n- <Grid item classes={{ item: classes.contentSection }}>\n- <P className={classes.text}>\n+ <Grid item>\n+ <Typography variant=\"body1\" gutterBottom>\nYou are about to pay the following amount to {name}.<br />\nThe payment will be done with {crypoCurrency} tokens, at the\nprovided exchange rate.\n- </P>\n+ </Typography>\n</Grid>\n- <Grid item classes={{ item: classes.contentSection }}>\n- <P className={classes.text}>\n+ <Grid item>\n+ <Typography variant=\"subtitle2\" color=\"secondary\" gutterBottom>\nDo not have {crypoCurrency} Tokens yet? Learn how you can get them.\n- </P>\n+ </Typography>\n</Grid>\n<Grid item classes={{ item: classes.footer }}>\n- <FormHelperText>Cost</FormHelperText>\n- <FormHelperText>Total: ${usdFee.toLocaleString()}</FormHelperText>\n- <FormHelperText>\n+ <Grid container justify=\"space-between\" className={classes.bottomSpace}>\n+ <Grid item>\n+ <Typography variant=\"h2\">Cost</Typography>\n+ </Grid>\n+ <Grid item className={classes.textRight}>\n+ <Typography\n+ variant=\"body2\"\n+ color=\"primary\"\n+ className={classes.bold}\n+ >\n+ Total: ${usdFee.toLocaleString()}\n+ </Typography>\n+ <Typography variant=\"subtitle2\" color=\"secondary\" gutterBottom>\n{ethFee.toLocaleString()} {crypoCurrency} {'(icon)'}\n- </FormHelperText>\n- <FormHelperText>Network Transaction Fee</FormHelperText>\n- <FormHelperText>${usdNetworkFee.toLocaleString()}</FormHelperText>\n- <FormHelperText>\n+ </Typography>\n+ </Grid>\n+ </Grid>\n+ <Grid container justify=\"space-between\">\n+ <Grid item>\n+ <Typography variant=\"h3\" color=\"secondary\">\n+ Network Transaction Fee\n+ </Typography>\n+ </Grid>\n+ <Grid item className={classes.textRight}>\n+ <Typography\n+ variant=\"body2\"\n+ color=\"primary\"\n+ className={classes.bold}\n+ >\n+ ${usdNetworkFee.toLocaleString()}\n+ </Typography>\n+ <Typography variant=\"subtitle2\" color=\"secondary\" gutterBottom>\n{ethNetworkFee.toLocaleString()} {crypoCurrency} {'(icon)'}\n- </FormHelperText>\n+ </Typography>\n+ </Grid>\n+ </Grid>\n<div className={classes.actions}>\n- <StyledButton variant=\"contained\" size=\"medium\" onClick={onConfirm}>\n+ <Button variant=\"contained\" size=\"large\" onClick={onConfirm}>\nConfirm\n- </StyledButton>\n- <StyledButton variant=\"outlined\" size=\"medium\" onClick={onCancel}>\n+ </Button>\n+ <Button variant=\"outlined\" size=\"large\" onClick={onCancel}>\nCancel\n- </StyledButton>\n+ </Button>\n</div>\n</Grid>\n</Grid>\n",
        "chatgpt_rag": "refactor: update SponsorsSection component structure and styles"
    },
    {
        "msg": "feat(button): import components path modify",
        "diff": "diff --git a/src/index.ts b/src/index.ts @@ -4,7 +4,7 @@ import { ElAvatar } from './components/avatar'\nimport { ElLink } from './components/link/'\nimport { ElIcon } from './components/icon/'\nimport { ElBadge } from './components/badge/'\n-import { ElButton } from './components/Button/'\n+import { ElButton } from './components/button/'\nimport '/theme/src/icon.scss'\nconst components = [\n",
        "date": "20.06.2022 18:20:24",
        "repo": "hug-sun/element3",
        "type": "feat",
        "sim_msg": "feat: add application to the index file",
        "sim_diff": "diff --git a/index.js b/index.js import Accordion from './Accordion';\nimport AccordionSection from './AccordionSection';\n+import Application from './Application';\nimport Avatar from './Avatar';\nimport AvatarMenu from './AvatarMenu';\nimport Badge from './Badge';\n@@ -49,6 +50,7 @@ import VerticalSectionOverflow from './VerticalSectionOverflow';\nexport {\nAccordion,\nAccordionSection,\n+ Application,\nAvatar,\nAvatarMenu,\nBadge,\n",
        "chatgpt_rag": "fix: correct import path for Button component in index file"
    },
    {
        "msg": "feat(create-razzle-app): make verbose show install",
        "diff": "diff --git a/packages/create-razzle-app/lib/utils/install.js b/packages/create-razzle-app/lib/utils/install.js @@ -22,7 +22,7 @@ module.exports = function install(opts) {\nconsole.log(messages.installing(packages));\nprocess.chdir(projectPath);\n- const stdio = 'pipe';\n+ const stdio = opts.verbose ? 'inherit' : 'pipe';\nreturn new Promise(function(resolve, reject) {\nconst stopInstallSpinner = output.wait('Installing modules');\n",
        "date": "06.03.2021 20:10:59",
        "repo": "jaredpalmer/razzle",
        "type": "feat",
        "sim_msg": "feat(cli): add \"hops-version\" argument to specify local-cli version",
        "sim_diff": "diff --git a/packages/cli/hops.js b/packages/cli/hops.js @@ -33,6 +33,11 @@ function globalCLI (argv) {\n'initialize with a different template',\ndefault: 'hops-template-default'\n})\n+ .option('hops-version', {\n+ type: 'string',\n+ describe: 'Which version (or npm dist-tag) of hops-local-cli to use',\n+ default: 'latest'\n+ })\n.option('verbose', {\ntype: 'boolean',\ndescribe: 'Increase verbosity of command',\n@@ -179,11 +184,14 @@ if (isInsideHopsProject) {\nvar options = globalCLI(argv);\nvar name = options.projectName;\nvar root = process.cwd();\n+ var versionedPackages = PACKAGES_TO_INSTALL.map(function (name) {\n+ return name + '@' + options.hopsVersion;\n+ });\nvalidateName(name);\ncreateDirectory(path.resolve(root, name));\nwritePackageManifest(path.resolve(root, name));\nprocess.chdir(path.resolve(root, name));\n- installPackages(PACKAGES_TO_INSTALL, options);\n+ installPackages(versionedPackages, options);\nrequire(getLocalCliPath()).init(root, name, options);\n}\n",
        "chatgpt_rag": "refactor(create-razzle-app): improve logging verbosity during module installation"
    },
    {
        "msg": "feat: add hebrew support to isAlpha and isAlphanumeric",
        "diff": "diff --git a/README.md b/README.md @@ -77,8 +77,8 @@ Validator | Description\n***contains(str, seed)*** | check if the string contains the seed.\n**equals(str, comparison)** | check if the string matches the comparison.\n**isAfter(str [, date])** | check if the string is a date that's after the specified date (defaults to now).\n-**isAlpha(str [, locale])** | check if the string contains only letters (a-zA-Z).<br/><br/>Locale is one of `['ar', 'ar-AE', 'ar-BH', 'ar-DZ', 'ar-EG', 'ar-IQ', 'ar-JO', 'ar-KW', 'ar-LB', 'ar-LY', 'ar-MA', 'ar-QA', 'ar-QM', 'ar-SA', 'ar-SD', 'ar-SY', 'ar-TN', 'ar-YE', 'bg-BG', 'cs-CZ', 'da-DK', 'de-DE', 'el-GR', 'en-AU', 'en-GB', 'en-HK', 'en-IN', 'en-NZ', 'en-US', 'en-ZA', 'en-ZM', 'es-ES', 'fr-FR', 'hu-HU', 'it-IT', 'ku-IQ', 'nb-NO', 'nl-NL', 'nn-NO', 'pl-PL', 'pt-BR', 'pt-PT', 'ru-RU', 'sl-SI', 'sk-SK', 'sr-RS', 'sr-RS@latin', 'sv-SE', 'tr-TR', 'uk-UA']`) and defaults to `en-US`. Locale list is `validator.isAlphaLocales`.\n-**isAlphanumeric(str [, locale])** | check if the string contains only letters and numbers.<br/><br/>Locale is one of `['ar', 'ar-AE', 'ar-BH', 'ar-DZ', 'ar-EG', 'ar-IQ', 'ar-JO', 'ar-KW', 'ar-LB', 'ar-LY', 'ar-MA', 'ar-QA', 'ar-QM', 'ar-SA', 'ar-SD', 'ar-SY', 'ar-TN', 'ar-YE', 'bg-BG', 'cs-CZ', 'da-DK', 'de-DE', 'el-GR', 'en-AU', 'en-GB', 'en-HK', 'en-IN', 'en-NZ', 'en-US', 'en-ZA', 'en-ZM', 'es-ES', 'fr-FR', 'hu-HU', 'it-IT', 'ku-IQ', 'nb-NO', 'nl-NL', 'nn-NO', 'pl-PL', 'pt-BR', 'pt-PT', 'ru-RU', 'sl-SI', 'sk-SK', 'sr-RS', 'sr-RS@latin', 'sv-SE', 'tr-TR', 'uk-UA']`) and defaults to `en-US`. Locale list is `validator.isAlphanumericLocales`.\n+**isAlpha(str [, locale])** | check if the string contains only letters (a-zA-Z).<br/><br/>Locale is one of `['ar', 'ar-AE', 'ar-BH', 'ar-DZ', 'ar-EG', 'ar-IQ', 'ar-JO', 'ar-KW', 'ar-LB', 'ar-LY', 'ar-MA', 'ar-QA', 'ar-QM', 'ar-SA', 'ar-SD', 'ar-SY', 'ar-TN', 'ar-YE', 'bg-BG', 'cs-CZ', 'da-DK', 'de-DE', 'el-GR', 'en-AU', 'en-GB', 'en-HK', 'en-IN', 'en-NZ', 'en-US', 'en-ZA', 'en-ZM', 'es-ES', 'fr-FR', 'he', 'hu-HU', 'it-IT', 'ku-IQ', 'nb-NO', 'nl-NL', 'nn-NO', 'pl-PL', 'pt-BR', 'pt-PT', 'ru-RU', 'sl-SI', 'sk-SK', 'sr-RS', 'sr-RS@latin', 'sv-SE', 'tr-TR', 'uk-UA']`) and defaults to `en-US`. Locale list is `validator.isAlphaLocales`.\n+**isAlphanumeric(str [, locale])** | check if the string contains only letters and numbers.<br/><br/>Locale is one of `['ar', 'ar-AE', 'ar-BH', 'ar-DZ', 'ar-EG', 'ar-IQ', 'ar-JO', 'ar-KW', 'ar-LB', 'ar-LY', 'ar-MA', 'ar-QA', 'ar-QM', 'ar-SA', 'ar-SD', 'ar-SY', 'ar-TN', 'ar-YE', 'bg-BG', 'cs-CZ', 'da-DK', 'de-DE', 'el-GR', 'en-AU', 'en-GB', 'en-HK', 'en-IN', 'en-NZ', 'en-US', 'en-ZA', 'en-ZM', 'es-ES', 'fr-FR', 'he', 'hu-HU', 'it-IT', 'ku-IQ', 'nb-NO', 'nl-NL', 'nn-NO', 'pl-PL', 'pt-BR', 'pt-PT', 'ru-RU', 'sl-SI', 'sk-SK', 'sr-RS', 'sr-RS@latin', 'sv-SE', 'tr-TR', 'uk-UA']`) and defaults to `en-US`. Locale list is `validator.isAlphanumericLocales`.\n**isAscii(str)** | check if the string contains ASCII chars only.\n**isBase32(str)** | check if a string is base32 encoded.\n**isBase64(str)** | check if a string is base64 encoded.\n",
        "date": "05.10.2019 16:18:57",
        "repo": "validatorjs/validator.js",
        "type": "feat",
        "sim_msg": "test(dashboardgrid): add e2e image snapshots",
        "sim_diff": "diff --git a/packages/react/src/components/Dashboard/DashboardGrid.test.e2e.jsx b/packages/react/src/components/Dashboard/DashboardGrid.test.e2e.jsx @@ -1158,6 +1158,93 @@ DashboardAllCardsAsResizable.propTypes = {\ntype: PropTypes.oneOf(CARD_TYPES).isRequired,\n};\n+describe('DashboardGrid-lg-Card', () => {\n+ beforeEach(() => {\n+ MockDate.set(1537538254000);\n+ cy.viewport(1024, 900);\n+ });\n+ afterEach(() => {\n+ MockDate.reset();\n+ });\n+\n+ it('Card with range picker', () => {\n+ const size = CARD_SIZES.SMALLFULL;\n+\n+ mount(\n+ <div data-testid=\"visual-regression-test\" style={{ padding: '3rem' }}>\n+ <Card\n+ title={`Card - ${size}`}\n+ id={`card-${size}`}\n+ isResizable\n+ key={`card-${size}`}\n+ size={size}\n+ isEditable={false}\n+ availableActions={{\n+ range: true,\n+ }}\n+ timeRange=\"last24Hours\"\n+ breakpoint=\"lg\"\n+ timeRangeOptions={undefined}\n+ footerContent={undefined}\n+ >\n+ <p>This is a basic card with CardRangePicker</p>\n+ </Card>\n+ </div>\n+ );\n+\n+ cy.findByTestId('visual-regression-test').should('be.visible');\n+ cy.findByTestId('Card-toolbar-range-picker').click();\n+\n+ onlyOn('headless', () => {\n+ cy.findByTestId('visual-regression-test').compareSnapshot(\n+ `DashboardGrid-lg-Card--with-range-picker`\n+ );\n+ });\n+ });\n+\n+ it('Card with date time range picker', () => {\n+ const size = CARD_SIZES.MEDIUMTHIN;\n+\n+ mount(\n+ <div data-testid=\"visual-regression-test\" style={{ padding: '3rem' }}>\n+ <Card\n+ title={`Card - ${size}`}\n+ id={`card-${size}`}\n+ isResizable\n+ key={`card-${size}`}\n+ size={size}\n+ isEditable={false}\n+ availableActions={{\n+ range: 'iconOnly',\n+ }}\n+ timeRange={undefined}\n+ breakpoint=\"lg\"\n+ timeRangeOptions={{\n+ last48Hours: { label: 'Last 48 Hours', offset: 48 * 60 },\n+ last24Hours: { label: 'Last 24 Hours', offset: 24 * 60 },\n+ last8Hours: { label: 'Last 8 Hours', offset: 8 * 60 },\n+ last4Hours: { label: 'Last 4 Hours', offset: 4 * 60 },\n+ last2Hours: { label: 'Last 2 Hours', offset: 2 * 60 },\n+ lastHour: { label: 'Last Hour', offset: 60 * 60 },\n+ }}\n+ footerContent={undefined}\n+ tooltip={undefined}\n+ >\n+ <p>This is a basic card with DateTimeRange picker</p>\n+ </Card>\n+ </div>\n+ );\n+\n+ cy.findByTestId('visual-regression-test').should('be.visible');\n+ cy.findByTestId('date-time-picker-datepicker-flyout-button').click();\n+ onlyOn('headless', () => {\n+ cy.findByTestId('visual-regression-test').compareSnapshot(\n+ `DashboardGrid-lg-Card--with-datetimerange-picker`\n+ );\n+ });\n+ });\n+});\n+\ndescribe('DashboardGrid', () => {\nbeforeEach(() => {\nMockDate.set(1537538254000);\n",
        "chatgpt_rag": "docs(README): update isAlpha and isAlphanumeric locale list in Validator section"
    },
    {
        "msg": "fix(typings): Make optional props of Search, optional in the typing definition.",
        "diff": "diff --git a/src/modules/Search/Search.d.ts b/src/modules/Search/Search.d.ts @@ -80,7 +80,7 @@ interface SearchProps {\n* @param {SyntheticEvent} event - React's original SyntheticEvent.\n* @param {object} data - All props.\n*/\n- onBlur: (event: React.MouseEvent<HTMLElement>, data: SearchProps) => void;\n+ onBlur?: (event: React.MouseEvent<HTMLElement>, data: SearchProps) => void;\n/**\n* Called on focus.\n@@ -88,7 +88,7 @@ interface SearchProps {\n* @param {SyntheticEvent} event - React's original SyntheticEvent.\n* @param {object} data - All props.\n*/\n- onFocus: (event: React.MouseEvent<HTMLElement>, data: SearchProps) => void;\n+ onFocus?: (event: React.MouseEvent<HTMLElement>, data: SearchProps) => void;\n/**\n* Called on mousedown.\n@@ -96,7 +96,7 @@ interface SearchProps {\n* @param {SyntheticEvent} event - React's original SyntheticEvent.\n* @param {object} data - All props.\n*/\n- onMouseDown: (event: React.MouseEvent<HTMLElement>, data: SearchProps) => void;\n+ onMouseDown?: (event: React.MouseEvent<HTMLElement>, data: SearchProps) => void;\n/**\n* Called when a result is selected.\n@@ -104,7 +104,7 @@ interface SearchProps {\n* @param {SyntheticEvent} event - React's original SyntheticEvent.\n* @param {object} data - All props.\n*/\n- onResultSelect: (event: React.MouseEvent<HTMLDivElement>, data: SearchResultProps) => void;\n+ onResultSelect?: (event: React.MouseEvent<HTMLDivElement>, data: SearchResultProps) => void;\n/**\n* Called on search input change.\n@@ -112,7 +112,7 @@ interface SearchProps {\n* @param {SyntheticEvent} event - React's original SyntheticEvent.\n* @param {string} value - Current value of search input.\n*/\n- onSearchChange: (event: React.MouseEvent<HTMLElement>, value: string) => void;\n+ onSearchChange?: (event: React.MouseEvent<HTMLElement>, value: string) => void;\n// ------------------------------------\n// Style\n@@ -131,7 +131,7 @@ interface SearchProps {\nfluid?: boolean;\n/** A search input can take up the width of its container. */\n- input: any;\n+ input?: any;\n/** A search can show a loading indicator. */\nloading?: boolean;\n",
        "date": "07.03.2017 17:29:51",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "sim_msg": "fix(searchfield): show clear btn after submit when input has no value",
        "sim_diff": "diff --git a/src/SearchField/index.jsx b/src/SearchField/index.jsx @@ -10,41 +10,13 @@ import Button from '../Button';\nimport styles from './SearchField.scss';\n-const defaultProps = {\n- inputLabel: 'Search:',\n- onBlur: () => {},\n- onChange: () => {},\n- onClear: () => {},\n- onFocus: () => {},\n- placeholder: '',\n- screenReaderText: {\n- clearButton: 'Clear search',\n- searchButton: 'Submit search',\n- },\n- value: '',\n-};\n-\n-const propTypes = {\n- onSubmit: PropTypes.func.isRequired,\n- inputLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n- onBlur: PropTypes.func,\n- onChange: PropTypes.func,\n- onClear: PropTypes.func,\n- onFocus: PropTypes.func,\n- placeholder: PropTypes.string,\n- screenReaderText: PropTypes.shape({\n- clearButton: PropTypes.oneOfType([PropTypes.string, PropTypes.element]).isRequired,\n- searchButton: PropTypes.oneOfType([PropTypes.string, PropTypes.element]).isRequired,\n- }),\n- value: PropTypes.string,\n-};\n-\nclass SearchField extends React.Component {\nconstructor(props) {\nsuper(props);\nthis.state = {\nisFocused: false,\n+ hasSubmitted: false,\nvalue: this.props.value,\n};\n@@ -59,9 +31,11 @@ class SearchField extends React.Component {\nthis.handleKeyPress = this.handleKeyPress.bind(this);\n}\n- componentWillReceiveProps(nextProps) {\n- if (nextProps.value !== this.props.value) {\n- this.setState({ value: nextProps.value });\n+ componentDidUpdate(prevProps) {\n+ const { value } = this.props;\n+\n+ if (value !== prevProps.value) {\n+ this.setState({ value }); // eslint-disable-line react/no-did-update-set-state\n}\n}\n@@ -74,8 +48,8 @@ class SearchField extends React.Component {\nclassName={[classNames(\nstyles['search-btn'],\n{\n- [styles['border-left']]: !isFocused && inputTextHasValue,\n- [styles['btn-outline-primary']]: isFocused && inputTextHasValue,\n+ [styles['border-left']]: !isFocused && this.shouldRenderClearButton(),\n+ [styles['btn-outline-primary']]: isFocused && this.shouldRenderClearButton(),\n},\n)]}\nlabel={\n@@ -87,7 +61,7 @@ class SearchField extends React.Component {\n/>,\n];\n- if (inputTextHasValue) {\n+ if (this.shouldRenderClearButton()) {\nbuttons.unshift((\n<Button\nclassName={[classNames(\n@@ -119,6 +93,11 @@ class SearchField extends React.Component {\nreturn value && value.length > 0;\n}\n+ shouldRenderClearButton() {\n+ const { hasSubmitted } = this.state;\n+ return hasSubmitted || this.inputTextHasValue();\n+ }\n+\nhandleFocus(event) {\nthis.setState({ isFocused: true });\nthis.props.onFocus(event);\n@@ -138,6 +117,7 @@ class SearchField extends React.Component {\nthis.handleChange('');\nthis.props.onClear();\nthis.textInput.focus();\n+ this.setState({ hasSubmitted: false });\n}\nhandleKeyPress(event) {\n@@ -150,6 +130,7 @@ class SearchField extends React.Component {\nconst { value } = this.state;\nthis.searchButton.focus();\nthis.props.onSubmit(value);\n+ this.setState({ hasSubmitted: true });\n}\nrender() {\n@@ -171,7 +152,7 @@ class SearchField extends React.Component {\nclassName={[classNames(\nstyles.input,\n{\n- [styles['no-clear-btn']]: !this.inputTextHasValue(),\n+ [styles['no-clear-btn']]: !this.shouldRenderClearButton(),\n},\n)]}\nname=\"search\"\n@@ -192,7 +173,33 @@ class SearchField extends React.Component {\n}\n}\n-SearchField.propTypes = propTypes;\n-SearchField.defaultProps = defaultProps;\n+SearchField.defaultProps = {\n+ inputLabel: 'Search:',\n+ onBlur: () => {},\n+ onChange: () => {},\n+ onClear: () => {},\n+ onFocus: () => {},\n+ placeholder: '',\n+ screenReaderText: {\n+ clearButton: 'Clear search',\n+ searchButton: 'Submit search',\n+ },\n+ value: '',\n+};\n+\n+SearchField.propTypes = {\n+ onSubmit: PropTypes.func.isRequired,\n+ inputLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n+ onBlur: PropTypes.func,\n+ onChange: PropTypes.func,\n+ onClear: PropTypes.func,\n+ onFocus: PropTypes.func,\n+ placeholder: PropTypes.string,\n+ screenReaderText: PropTypes.shape({\n+ clearButton: PropTypes.oneOfType([PropTypes.string, PropTypes.element]).isRequired,\n+ searchButton: PropTypes.oneOfType([PropTypes.string, PropTypes.element]).isRequired,\n+ }),\n+ value: PropTypes.string,\n+};\nexport default SearchField;\n",
        "chatgpt_rag": "refactor(search): make onBlur, onFocus, onMouseDown, onResultSelect, onSearchChange optional in SearchProps"
    },
    {
        "msg": "fix: stop saying there's another update required!",
        "diff": "diff --git a/bin/nodemon.js b/bin/nodemon.js @@ -11,6 +11,6 @@ var fs = require('fs');\n// checks for available update and returns an instance\nvar pkg = JSON.parse(fs.readFileSync(__dirname + '/../package.json'));\n-require('update-notifier')({\n- pkg: Object.assign(pkg, { version: '0.0.0' }),\n-}).notify();\n+if (pkg.version.indexOf('0.0.0') !== 0) {\n+ require('update-notifier')({ pkg }).notify();\n+}\n",
        "date": "22.12.2017 15:36:36",
        "repo": "remy/nodemon",
        "type": "fix",
        "sim_msg": "refactor(test/update_package): destructure",
        "sim_diff": "diff --git a/test/scripts/hexo/update_package.js b/test/scripts/hexo/update_package.js 'use strict';\n-const pathFn = require('path');\n-const fs = require('hexo-fs');\n+const { join } = require('path');\n+const { readFile, unlink, writeFile } = require('hexo-fs');\ndescribe('Update package.json', () => {\nconst Hexo = require('../../../lib/hexo');\nconst hexo = new Hexo(__dirname, {silent: true});\nconst updatePkg = require('../../../lib/hexo/update_package');\n- const packagePath = pathFn.join(hexo.base_dir, 'package.json');\n+ const packagePath = join(hexo.base_dir, 'package.json');\nbeforeEach(() => {\nhexo.env.init = false;\n@@ -25,13 +25,13 @@ describe('Update package.json', () => {\n}\n};\n- await fs.writeFile(packagePath, JSON.stringify(pkg));\n+ await writeFile(packagePath, JSON.stringify(pkg));\nawait updatePkg(hexo);\n- const content = await fs.readFile(packagePath);\n+ const content = await readFile(packagePath);\nJSON.parse(content).hexo.version.should.eql(hexo.version);\nhexo.env.init.should.be.true;\n- await fs.unlink(packagePath);\n+ await unlink(packagePath);\n});\nit('package.json exists, but don\\'t have hexo data', async () => {\n@@ -40,14 +40,14 @@ describe('Update package.json', () => {\nversion: '0.0.1'\n};\n- await fs.writeFile(packagePath, JSON.stringify(pkg));\n+ await writeFile(packagePath, JSON.stringify(pkg));\nawait updatePkg(hexo);\n- const content = await fs.readFile(packagePath);\n+ const content = await readFile(packagePath);\n// Don't change the original package.json\nJSON.parse(content).should.eql(pkg);\nhexo.env.init.should.be.false;\n- await fs.unlink(packagePath);\n+ await unlink(packagePath);\n});\nit('package.json exists and everything is ok', async () => {\n@@ -57,12 +57,12 @@ describe('Update package.json', () => {\n}\n};\n- await fs.writeFile(packagePath, JSON.stringify(pkg));\n+ await writeFile(packagePath, JSON.stringify(pkg));\nawait updatePkg(hexo);\n- const content = await fs.readFile(packagePath);\n+ const content = await readFile(packagePath);\nJSON.parse(content).should.eql(pkg);\nhexo.env.init.should.be.true;\n- await fs.unlink(packagePath);\n+ await unlink(packagePath);\n});\n});\n",
        "chatgpt_rag": "refactor(bin/nodemon): update update-notifier usage"
    },
    {
        "msg": "fix: remove tls secret env var",
        "diff": "diff --git a/.github/workflows/ci.yml b/.github/workflows/ci.yml @@ -111,7 +111,6 @@ jobs:\n${repo_owner}/${repo_name}\nenv:\nAWF_AUTH_TOKEN: ${{ secrets.AWF_AUTH_TOKEN }}\n- TLS_SECRET: ${{ secrets.TLS_SECRET }}\nshell: bash\n- name: Dump GitHub context\n",
        "date": "19.08.2022 01:18:38",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "sim_msg": "ci: print git status",
        "sim_diff": "diff --git a/.github/workflows/release.yml b/.github/workflows/release.yml @@ -52,7 +52,9 @@ jobs:\nNPM_TOKEN: ${{ secrets.NPM_TOKEN }}\n- name: Release ${{ github.event.inputs.version }}\n- run: npm run release:${{ github.event.inputs.version }} --ci\n+ run: |\n+ git status\n+ npm run release:${{ github.event.inputs.version }} --ci\nenv:\nGITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\nNPM_TOKEN: ${{ secrets.NPM_TOKEN }}\n",
        "chatgpt_rag": "ci: remove TLS_SECRET from environment variables"
    },
    {
        "msg": "fix(typings): fix Modal mountnode -> mountNode",
        "diff": "diff --git a/src/modules/Modal/index.d.ts b/src/modules/Modal/index.d.ts @@ -59,7 +59,7 @@ interface ModalProps {\nopen?: boolean;\n/** The node where the modal should mount.. */\n- mountnode?: any;\n+ mountNode?: any;\n/** A modal can vary in size */\nsize?: SemanticSIZES;\n",
        "date": "12.01.2017 21:10:27",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "sim_msg": "chore: fix typo in type BvMsgBoxOptions definition",
        "sim_diff": "diff --git a/types/components/modal/index.d.ts b/types/components/modal/index.d.ts @@ -39,7 +39,7 @@ export interface BvMsgBoxOptions {\ntitleTag?: string\nsize?: string\ncentered?: boolean\n- scrolable?: boolean\n+ scrollable?: boolean\nnoFade?: boolean\nnoCloseOnBackdrop?: boolean\nnoCloseOnEsc?: boolean\n",
        "chatgpt_rag": "chore: fix typo in type ModalProps definition"
    },
    {
        "msg": "fix: ensure numerical OS version check",
        "diff": "diff --git a/lib/monitor/run.js b/lib/monitor/run.js @@ -16,7 +16,7 @@ var restart = null;\nvar psTree = require('pstree.remy');\nvar path = require('path');\nvar signals = require('./signals');\n-const osRelease = require('os').release();\n+const osRelease = parseInt(require('os').release().split(\".\")[0], 10);\nfunction run(options) {\nvar cmd = config.command.raw;\n",
        "date": "09.07.2021 17:19:02",
        "repo": "remy/nodemon",
        "type": "fix",
        "sim_msg": "feat(sdk-config): add controller to display logs and export zip",
        "sim_diff": "diff --git a/runner/src/main/resources/view/app.js b/runner/src/main/resources/view/app.js @@ -2,6 +2,7 @@ import * as config from '../config.js';\nimport {Drawer} from '../core/Drawer.js';\nimport {ErrorLog} from '../core/ErrorLog.js';\nimport {demo} from '../demo.js';\n+import Parser from './lib/Parser.js';\nfunction PlayerCtrl($scope, $timeout, $interval, $translate, drawerFactory, gameManagerFactory, $localStorage) {\n'ngInject';\n@@ -22,6 +23,9 @@ function PlayerCtrl($scope, $timeout, $interval, $translate, drawerFactory, game\n}).gameParams;\n$scope.loadGame = loadGame;\n$scope.selectReplay = selectReplay;\n+ $scope.exportZip = exportZip;\n+ $scope.reportItems = {};\n+ $scope.closeReportPopup = closeReportPopup;\n$interval(checkSize, 1000);\n@@ -162,6 +166,57 @@ function PlayerCtrl($scope, $timeout, $interval, $translate, drawerFactory, game\nconst response = await fetch('/services/save-replay');\n$scope.selectProgress = 'complete';\n}\n+\n+ function closeReportPopup() {\n+ $scope.showExport = false;\n+ }\n+\n+ $scope.showExport = false;\n+ async function exportZip() {\n+ const data = await fetch('/services/export');\n+ if (data.status >= 400 && data.status < 500) {\n+ const text = await data.text();\n+ $scope.formStatement = text;\n+ $scope.showConfigForm = true;\n+ } else {\n+ const jsonStr = await data.text();\n+ var jsonObj = JSON.parse(jsonStr);\n+\n+ var parser = new Parser();\n+ for (var stub in jsonObj.stubs) {\n+ try {\n+ parser.parse(jsonObj.stubs[stub], 0);\n+ } catch (e) {\n+ jsonObj.reportItems.push({ \"type\": \"WARNING\", \"message\": stub, \"details\": { \"name\": e.name, \"params\": e.params } });\n+ }\n+ }\n+\n+ if (jsonObj.exportStatus === \"SUCCESS\") {\n+ jsonObj.reportItems.push({ \"type\": \"SUCCESS\", \"message\": \"Export success.\" });\n+ var url = window.URL.createObjectURL(new Blob(\n+ _base64ToArrayBuffer(jsonObj.data)));\n+ var a = document.createElement('a');\n+ a.href = url;\n+ a.download = \"export.zip\";\n+ a.click();\n+ } else {\n+ jsonObj.reportItems.push({ \"type\": \"FAIL\", \"message\": \"Export fail.\" });\n+ }\n+ $scope.reportItems = jsonObj.reportItems;\n+ $scope.showExport = true;\n+ }\n+ }\n+\n+ function _base64ToArrayBuffer(base64) {\n+ var binary_string = window.atob(base64);\n+ var len = binary_string.length;\n+ var bytes = new Uint8Array(len);\n+ for (var i = 0; i < len; i++) {\n+ bytes[i] = binary_string.charCodeAt(i);\n+ }\n+ return [bytes];\n+ }\n+\n}\nangular.module('player').controller('PlayerCtrl', PlayerCtrl);\n",
        "chatgpt_rag": "fix(monitor): parse os release version as integer for compatibility"
    },
    {
        "msg": "fix(examples): fix with-typescript example",
        "diff": "diff --git a/examples/with-typescript/src/index.ts b/examples/with-typescript/src/index.ts @@ -18,10 +18,6 @@ const port = process.env.PORT ? parseInt(process.env.PORT, 10) : 3000;\nexport default express()\n.use((req, res) => app.handle(req, res))\n- .listen(port, (err: Error) => {\n- if (err) {\n- console.error(err);\n- return;\n- }\n+ .listen(port, () => {\nconsole.log(`> App started http://localhost:${port}`)\n});\n",
        "date": "16.12.2020 18:53:32",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "fix(server): Catch OPTIONS * requests",
        "sim_diff": "diff --git a/server/index.js b/server/index.js @@ -164,6 +164,14 @@ app.prepare().then(() => {\n)\n})\n+ server.options('*', (req, res, next) => {\n+ if (req.url === '*') {\n+ return res.sendStatus(400)\n+ }\n+\n+ next()\n+ })\n+\nserver.use(express.static('public'))\nserver.all('*', (req, res) => {\nreturn handler(req, res)\n",
        "chatgpt_rag": "refactor(server): Remove error handling from server listen method"
    },
    {
        "msg": "fix: Uncaught fs.stat() throw",
        "diff": "diff --git a/packages/create-wmr/src/index.js b/packages/create-wmr/src/index.js @@ -18,12 +18,17 @@ sade('create-wmr [dir]', true)\nconst origCwd = process.cwd();\nlet cwd = process.cwd();\nif (dir) {\n- if ((await fs.stat(dir)).isDirectory() && !opts.force) {\n+ try {\n+ (await fs.stat(dir)).isDirectory();\n+ if (!opts.force) {\nprocess.stderr.write(\n- `${red(`Refusing to overwrite directory! Please specify a different directory or use the '--force' flag`)}\\n`\n+ `${red(\n+ `Refusing to overwrite directory! Please specify a different directory or use the '--force' flag`\n+ )}\\n`\n);\nprocess.exit(1);\n}\n+ } catch {}\ncwd = resolve(cwd, dir || '.');\nawait fs.mkdir(cwd, { recursive: true });\nprocess.chdir(cwd);\n",
        "date": "25.02.2021 17:56:18",
        "repo": "preactjs/wmr",
        "type": "fix",
        "sim_msg": "feat: allow disabling console clearing",
        "sim_diff": "diff --git a/src/index.js b/src/index.js @@ -31,7 +31,10 @@ const self = module.exports = { // eslint-disable-line\nconst elapsedSeconds = (Date.now() - start) / 1000\nif (get(config, 'build.command') === 'serve') {\n+ if (get(config, 'build.console.clear')) {\nclearConsole()\n+ }\n+\nspinner.succeed(`Re-built ${parsed.length} templates in ${elapsedSeconds}s`)\n} else {\nspinner.succeed(`Built ${parsed.length} templates in ${elapsedSeconds}s`)\n@@ -76,7 +79,9 @@ const self = module.exports = { // eslint-disable-line\n// Watch for Template file changes\ngetBrowserSync().watch(templatePaths)\n.on('change', async file => {\n+ if (get(config, 'build.console.clear')) {\nclearConsole()\n+ }\nconst start = new Date()\n@@ -169,4 +174,3 @@ const self = module.exports = { // eslint-disable-line\n})\n}\n}\n-\n",
        "chatgpt_rag": "fix: handle error when checking if directory exists in create-wmr script"
    },
    {
        "msg": "fix: dev rollup config",
        "diff": "diff --git a/packages/kiwi-core/rollup.dev.config.js b/packages/kiwi-core/rollup.dev.config.js @@ -66,15 +66,8 @@ const commons = {\n]\n}\n-// const bannerTxt = `/*! Chakra-Vui v${pkg.version} | MIT License | github.com/codebender828/kiwi-ui */`\n-\nconst baseFolder = './src/'\n-// const capitalize = (s) => {\n-// if (typeof s !== 'string') return ''\n-// return s.charAt(0).toUpperCase() + s.slice(1)\n-// }\n-\nconst components = fs.readdirSync(baseFolder)\n.filter((f) => fs.statSync(path.join(baseFolder, f)).isDirectory())\n@@ -86,30 +79,10 @@ const entries = {\n}, {})\n}\n-console.log('entries', entries)\n-\n/**\n* Configurations\n*/\nexport default () => {\n- // const mapComponent = (name) => {\n- // return [{\n- // input: baseFolder + `${name}/index.js`,\n- // external: externals,\n- // output: {\n- // format: 'umd',\n- // name: capitalize(name),\n- // file: `dist/components/${name}/index.js`,\n- // banner: bannerTxt,\n- // exports: 'named',\n- // globals: {\n- // vue: 'Vue'\n- // }\n- // },\n- // ...commons\n- // }]\n- // }\n-\nlet config = [{\ninput: entries,\noutput: {\n@@ -118,61 +91,6 @@ export default () => {\n},\n...commons\n}\n- // {\n- // input: entries,\n- // output: {\n- // dir: `dist/es/`,\n- // format: 'es'\n- // },\n- // ...commons\n- // },\n- // {\n- // input: entries,\n- // output: {\n- // dir: `dist/cjs/`,\n- // format: 'cjs',\n- // exports: 'named'\n- // },\n- // ...commons\n- // },\n- // {\n- // input: './src/index.js',\n- // output: {\n- // file: `dist/umd/index.js/`,\n- // name: capitalize('chakra'),\n- // format: 'umd',\n- // exports: 'named',\n- // banner: bannerTxt,\n- // globals: {\n- // vue: 'Vue'\n- // }\n- // },\n- // ...commons\n- // }\n- // {\n- // input: './src/index.js',\n- // output: {\n- // file: 'dist/chakra-vui.esm.js',\n- // name: capitalize('chakra'),\n- // format: 'esm',\n- // exports: 'named',\n- // banner: bannerTxt\n- // },\n- // ...commons\n- // }\n- // Individual components\n- // ...components.map((f) => mapComponent(f)).reduce((r, a) => r.concat(a), [])\n]\n- if (process.env.MINIFY === 'true') {\n- config = config.filter((c) => !!c.output.file)\n- config.forEach((c) => {\n- c.output.file = c.output.file.replace(/\\.js/g, '.min.js')\n- c.plugins.push(terser({\n- output: {\n- comments: '/^!/'\n- }\n- }))\n- })\n- }\nreturn config\n}\n",
        "date": "20.02.2020 03:22:31",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "sim_msg": "build(webpack): use externals from ecomplus/storefront-template",
        "sim_diff": "diff --git a/webpack.config.js b/webpack.config.js @@ -6,6 +6,7 @@ const VueLoaderPlugin = require('vue-loader/lib/plugin')\nconst HtmlWebpackPlugin = require('html-webpack-plugin')\nconst templatePath = path.join(process.cwd(), 'node_modules/@ecomplus/storefront-template/dist')\nconst { dependencies } = require('./package.json')\n+const externals = require('@ecomplus/storefront-template/webpack.externals')\n// preset default output object\nconst output = {\n@@ -91,7 +92,13 @@ const config = {\n}\n}\n// exclude all imported libs on production by default\n- : new RegExp('^(' + Object.entries(dependencies).map(([pkg]) => pkg).join('|') + ')(/|$)', 'i')\n+ : [\n+ externals,\n+ new RegExp('^(' +\n+ Object.entries(dependencies)\n+ .map(([pkg]) => pkg).filter(pkg => !externals[pkg]).join('|') +\n+ ')(/|$)', 'i')\n+ ]\n}\nif (devMode) {\n@@ -113,6 +120,6 @@ module.exports = devMode\n...output,\nfilename: output.filename.replace('.min.js', '.root.min.js')\n},\n- externals: require('@ecomplus/storefront-template/webpack.externals')\n+ externals\n}\n]\n",
        "chatgpt_rag": "build(rollup): refactor configurations and remove unnecessary code"
    },
    {
        "msg": "fix: fix default route in default template",
        "diff": "diff --git a/packages/create-razzle-app/templates/default/src/App.js b/packages/create-razzle-app/templates/default/src/App.js @@ -5,7 +5,7 @@ import './App.css';\nconst App = () => (\n<Switch>\n- <Route path=\"/\" element={<Home/>} />\n+ <Route exact={true} path=\"/\" component={Home} />\n</Switch>\n);\n",
        "date": "20.12.2021 17:47:08",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "docs: remove exact prop in v6 Route example",
        "sim_diff": "diff --git a/docs/example-react-router.mdx b/docs/example-react-router.mdx @@ -27,7 +27,7 @@ export const App = () => (\n<Link to=\"/about\">About</Link>\n<Routes>\n- <Route exact path=\"/\" element={<Home />} />\n+ <Route path=\"/\" element={<Home />} />\n<Route path=\"/about\" element={<About />} />\n",
        "chatgpt_rag": "feat: add exact prop to Route component in App.js file"
    },
    {
        "msg": "fix(avatargroup): filter empty slots",
        "diff": "diff --git a/packages/kiwi-core/src/AvatarGroup/index.js b/packages/kiwi-core/src/AvatarGroup/index.js @@ -58,7 +58,7 @@ const AvatarGroup = {\n},\nrender (h) {\n// Get the number of slot nodes inside AvatarGroup\n- const children = this.$slots.default\n+ const children = this.$slots.default.filter(e => e.tag)\nconst count = children.length\nconst max = parseInt(this.max, 10)\n",
        "date": "19.02.2020 22:52:20",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "sim_msg": "fix(input-group): correct input-group right addon via prop",
        "sim_diff": "diff --git a/src/components/input-group/input-group.js b/src/components/input-group/input-group.js @@ -43,7 +43,7 @@ export default {\n// Right slot / prop\nif (slots().right) {\nchildNodes.push(slots().right);\n- } else if (props.left) {\n+ } else if (props.right) {\nchildNodes.push(h(InputGroupAddon, { domProps: { innerHTML: props.right } }))\n}\n",
        "chatgpt_rag": "refactor(avatar-group): filter slot nodes in AvatarGroup render function to only include elements with a tag"
    },
    {
        "msg": "fix(example): use new assets manifest",
        "diff": "diff --git a/examples/basic/src/server.js b/examples/basic/src/server.js @@ -5,6 +5,20 @@ import { renderToString } from 'react-dom/server';\nconst assets = require(process.env.RAZZLE_ASSETS_MANIFEST);\n+const cssLinksFromAssets = (assets, entrypoint) => {\n+ return assets.entrypoints[entrypoint] ? assets.entrypoints[entrypoint].css ?\n+ assets.entrypoints[entrypoint].css.map(asset=>\n+ `<link rel=\"stylesheet\" href=\"${asset}\">`\n+ ).join('') : '' : '';\n+};\n+};\n+const jsScriptTagsFromAssets = (assets, entrypoint, extra = '') => {\n+ return assets.entrypoints[entrypoint] ? assets.entrypoints[entrypoint].js ?\n+ assets.entrypoints[entrypoint].js.map(asset=>\n+ `<script src=\"${asset}\"${extra}></script>`\n+ ).join('') : '' : '';\n+};\n+\nexport const renderApp = (req, res) => {\nconst markup = renderToString(<App />);\n@@ -17,15 +31,11 @@ export const renderApp = (req, res) => {\n<meta charSet='utf-8' />\n<title>Welcome to Razzle</title>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n- ${\n- assets.client.css\n- ? `<link rel=\"stylesheet\" href=\"${assets.client.css}\">`\n- : ''\n- }\n+ ${cssLinksFromAssets(assets, 'client')}\n</head>\n<body>\n<div id=\"root\">${markup}</div>\n- <script src=\"${assets.client.js}\" defer crossorigin></script>\n+ ${jsScriptTagsFromAssets(assets, 'client', ' defer crossorigin')}\n</body>\n</html>`;\n",
        "date": "12.10.2020 18:57:39",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "perf(ui): BundleAssets - memo params",
        "sim_diff": "diff --git a/packages/ui/src/components/bundle-assets/bundle-assets.jsx b/packages/ui/src/components/bundle-assets/bundle-assets.jsx @@ -49,6 +49,37 @@ const getFileTypeFilters = (filters) =>\n{},\n);\n+const getFilters = ({ comareMode, filters }) => ({\n+ [ASSET_FILTERS.CHANGED]: {\n+ label: 'Changed',\n+ defaultValue: filters[ASSET_FILTERS.CHANGED],\n+ disabled: !compareMode,\n+ },\n+ [ASSET_ENTRY_TYPE]: {\n+ label: 'Entry type',\n+ [ASSET_FILTERS.ENTRY]: {\n+ label: 'Entry',\n+ defaultValue: get(filters, `${ASSET_ENTRY_TYPE}.${ASSET_FILTERS.ENTRY}`, true),\n+ },\n+ [ASSET_FILTERS.INITIAL]: {\n+ label: 'Initial',\n+ defaultValue: get(filters, `${ASSET_ENTRY_TYPE}.${ASSET_FILTERS.INITIAL}`, true),\n+ },\n+ [ASSET_FILTERS.CHUNK]: {\n+ label: 'Chunk',\n+ defaultValue: get(filters, `${ASSET_ENTRY_TYPE}.${ASSET_FILTERS.CHUNK}`, true),\n+ },\n+ [ASSET_FILTERS.ASSET]: {\n+ label: 'Asset',\n+ defaultValue: get(filters, `${ASSET_ENTRY_TYPE}.${ASSET_FILTERS.ASSET}`, true),\n+ },\n+ },\n+ [ASSET_FILE_TYPE]: {\n+ label: 'File type',\n+ ...getFileTypeFilters(filters),\n+ },\n+});\n+\nconst TooltipNotPredictive = ({ runs }) => (\n<div className={css.tooltipNotPredictive}>\n<p className={css.tooltipNotPredictiveText}>File name is the same, but the size has changed:</p>\n@@ -181,15 +212,20 @@ export const BundleAssets = (props) => {\ncustomComponentLink: CustomComponentLink,\n} = props;\n- const emptyMessage = (\n- <EmptySet\n- resources=\"assets\"\n- filtered={totalRowCount !== 0}\n- handleResetFilters={resetFilters}\n- handleViewAll={resetAllFilters}\n- />\n+ const dropdownFilters = useMemo(\n+ () => getFilters({ compareMode: jobs?.length > 1, filters }),\n+ [jobs, filters],\n);\n+ const metricsTableTitle = useMemo(() => (\n+ <MetricsTableTitle\n+ title={I18N.ASSETS}\n+ info={`(${items.length}/${totalRowCount})`}\n+ popoverInfo={I18N.ASSETS_INFO}\n+ popoverHref={config.documentation.assets}\n+ />\n+ ), [items, totalRowCount]);\n+\nconst renderRowHeader = useCallback(\n(row) => (\n<RowHeader\n@@ -202,6 +238,15 @@ export const BundleAssets = (props) => {\n[jobs, CustomComponentLink],\n);\n+ const emptyMessage = useMemo(() => (\n+ <EmptySet\n+ resources=\"assets\"\n+ filtered={totalRowCount !== 0}\n+ handleResetFilters={resetFilters}\n+ handleViewAll={resetAllFilters}\n+ />\n+ ), [totalRowCount, resetFilters, resetAllFilters]);\n+\nreturn (\n<section className={cx(css.root, className)}>\n<Toolbar\n@@ -225,36 +270,7 @@ export const BundleAssets = (props) => {\n/>\n<Filters\nclassName={css.toolbarFilters}\n- filters={{\n- [ASSET_FILTERS.CHANGED]: {\n- label: 'Changed',\n- defaultValue: filters[ASSET_FILTERS.CHANGED],\n- disabled: jobs.length <= 1,\n- },\n- [ASSET_ENTRY_TYPE]: {\n- label: 'Entry type',\n- [ASSET_FILTERS.ENTRY]: {\n- label: 'Entry',\n- defaultValue: get(filters, `${ASSET_ENTRY_TYPE}.${ASSET_FILTERS.ENTRY}`, true),\n- },\n- [ASSET_FILTERS.INITIAL]: {\n- label: 'Initial',\n- defaultValue: get(filters, `${ASSET_ENTRY_TYPE}.${ASSET_FILTERS.INITIAL}`, true),\n- },\n- [ASSET_FILTERS.CHUNK]: {\n- label: 'Chunk',\n- defaultValue: get(filters, `${ASSET_ENTRY_TYPE}.${ASSET_FILTERS.CHUNK}`, true),\n- },\n- [ASSET_FILTERS.ASSET]: {\n- label: 'Asset',\n- defaultValue: get(filters, `${ASSET_ENTRY_TYPE}.${ASSET_FILTERS.ASSET}`, true),\n- },\n- },\n- [ASSET_FILE_TYPE]: {\n- label: 'File type',\n- ...getFileTypeFilters(filters),\n- },\n- }}\n+ filters={dropdownFilters}\nhasActiveFilters={hasActiveFilters}\nonChange={updateFilters}\n/>\n@@ -267,14 +283,7 @@ export const BundleAssets = (props) => {\nrenderRowHeader={renderRowHeader}\nemptyMessage={emptyMessage}\nshowHeaderSum\n- title={\n- <MetricsTableTitle\n- title={I18N.ASSETS}\n- info={`(${items.length}/${totalRowCount})`}\n- popoverInfo={I18N.ASSETS_INFO}\n- popoverHref={config.documentation.assets}\n- />\n- }\n+ title={metricsTableTitle}\n/>\n</main>\n</section>\n",
        "chatgpt_rag": "refactor(server): Extract cssLinksFromAssets and jsScriptTagsFromAssets functions"
    },
    {
        "msg": "fix: sniff for child.stdout before using it\nThis fixes but it's a hack, so I'm going to emit a message\nsaying that non-LTS is not supported.",
        "diff": "diff --git a/lib/monitor/run.js b/lib/monitor/run.js @@ -260,7 +260,12 @@ function run(options) {\nchild.stdin.on('error', () => { });\nprocess.stdin.pipe(child.stdin);\n} else {\n+ if (child.stdout) {\nchild.stdout.pipe(process.stdout);\n+ } else {\n+ utils.log.error(`running an unsupported version of node ${process.version}`);\n+ utils.log.error('nodemon may not work as expected - please consider upgrading to LTS');\n+ }\n}\nbus.once('exit', function () {\n",
        "date": "01.02.2018 18:19:56",
        "repo": "remy/nodemon",
        "type": "fix",
        "sim_msg": "refactor: extract method for cmd interpreter",
        "sim_diff": "diff --git a/lib/dashboard/console.js b/lib/dashboard/console.js @@ -10,15 +10,7 @@ Console.prototype.runCode = function(code) {\nRunCode.doEval(code); // jshint ignore:line\n};\n-Console.prototype.executeCmd = function(cmd, callback) {\n- var plugin, pluginOutput;\n- var plugins = this.plugins.getPluginsFor('console');\n- for (var i = 0; i < plugins.length; i++) {\n- plugin = plugins[i];\n- pluginOutput = plugin.runCommands(cmd, {});\n- if (pluginOutput !== false && pluginOutput !== 'false') return callback(pluginOutput);\n- }\n-\n+Console.prototype.processEmbarkCmd = function(cmd) {\nif (cmd === 'help') {\nvar helpText = [\n'Welcome to Embark ' + this.version,\n@@ -31,10 +23,26 @@ Console.prototype.executeCmd = function(cmd, callback) {\n'',\n'The web3 object and the interfaces for the deployed contracts and their methods are also available'\n];\n- return callback(helpText.join('\\n'));\n+ return helpText.join('\\n');\n} else if (cmd === 'quit') {\nutils.exit();\n}\n+ return false;\n+};\n+\n+Console.prototype.executeCmd = function(cmd, callback) {\n+ var plugin, pluginOutput;\n+ var plugins = this.plugins.getPluginsFor('console');\n+ for (var i = 0; i < plugins.length; i++) {\n+ plugin = plugins[i];\n+ pluginOutput = plugin.runCommands(cmd, {});\n+ if (pluginOutput !== false && pluginOutput !== 'false') return callback(pluginOutput);\n+ }\n+\n+ var output = this.processEmbarkCmd(cmd);\n+ if (output) {\n+ return callback(output);\n+ }\ntry {\nvar result = RunCode.doEval(cmd);\n",
        "chatgpt_rag": "fix: handle unsupported node version in monitor run script"
    },
    {
        "msg": "fix(text.mdx): removed duplicate titles",
        "diff": "diff --git a/packages/chakra-ui-docs/docs/text.mdx b/packages/chakra-ui-docs/docs/text.mdx @@ -96,8 +96,6 @@ You can change the entire style of the text via props. For example, to change th\nText composes the [CBox](/box) component, so you can pass all Box style props.\n-## Slot\n-\n## Slots\n| Name | Description |\n",
        "date": "03.05.2020 18:36:20",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "sim_msg": "chore(Style): update style.md",
        "sim_diff": "diff --git a/docs/style.md b/docs/style.md @@ -43,6 +43,6 @@ export default LotsOfStyles;\nOne common pattern is to make your component accept a `style` prop which in turn is used to style subcomponents. You can use this to make styles \"cascade\" the way they do in CSS.\n-There are a lot more ways to customize text style. Check out the [Text component reference](text.md) for a complete list.\n+There are a lot more ways to customize the text style. Check out the [Text component reference](text.md) for a complete list.\nNow you can make your text beautiful. The next step in becoming a style master is to [learn how to control component size](height-and-width.md).\n",
        "chatgpt_rag": "chore(Text): update text.mdx with slot information"
    },
    {
        "msg": "fix: allow windows users to install globally again\nFixes:",
        "diff": "diff --git a/lib/monitor/run.js b/lib/monitor/run.js @@ -347,7 +347,7 @@ function kill(child, signal, callback) {\n// We are using the standalone 'windows-kill' executable to send the\n// standard POSIX signal 'SIGINT' to the node process. This fixes #1720.\nconst windowsKill = path.normalize(\n- `${process.cwd()}/node_modules/nodemon/bin/windows-kill.exe`\n+ `${__dirname}/../../bin/windows-kill.exe`\n);\n// We have to detach the 'windows-kill' execution completely from this\n",
        "date": "30.06.2021 13:57:24",
        "repo": "remy/nodemon",
        "type": "fix",
        "sim_msg": "refactor(e2e): fix security issue when killing processes",
        "sim_diff": "diff --git a/__tests__/test-utils/utils.js b/__tests__/test-utils/utils.js -const {exec, spawn} = require('child_process')\n+const {execFile, spawn} = require('child_process')\nconst fs = require('fs')\nconst {safeDump, safeLoad} = require('js-yaml')\n@@ -40,18 +40,26 @@ function killDetachedProcess (processName, callback) {\nconst pidFilename = `${processName}.pid`\n// open pid file to get pid\n- fs.readFile(pidFilename, (err, data) => {\n+ fs.readFile(pidFilename, (err, pid) => {\nif (err) {\nconsole.error(`pid file ${pidFilename} could not be read!`)\nreturn callback(err)\n}\n+ // make absolutely sure that the pid file contains a numeric string. This\n+ // is to make sure that the file we're reading didn't somehow change and now\n+ // includes a harmful command that could be executed\n+ if (!pid.match(/^\\d*$/)) {\n+ console.error(`pid file ${pidFilename} has unexpected data!`)\n+ return callback(new Error(`pid file ${pidFilename} has unexpected data!`))\n+ }\n+\n// attempt to kill process running with pid\n- const cmd = `kill ${data}`\n+ const cmd = `kill ${pid}`\nconsole.log(cmd)\n- exec(cmd, err => {\n+ execFile('kill', [pid], err => {\nif (err) {\n- console.error(`pid ${data} (${processName}) could not be killed!`)\n+ console.error(`pid ${pid} (${processName}) could not be killed!`)\nreturn callback(err)\n}\n",
        "chatgpt_rag": "refactor(monitor): update path for windows-kill executable in kill function"
    },
    {
        "msg": "fix: added a better description for the event table",
        "diff": "diff --git a/packages/chakra-ui-docs/docs/tabs.mdx b/packages/chakra-ui-docs/docs/tabs.mdx @@ -323,8 +323,8 @@ Tabs composes `Box` so you call pass all `Box` related props.\n### Tabs Events\n| Name | Description |\n-| ---------- | ------------------------ |\n-| `onChange` | Emits the @change event. |\n+| --------- | ------------------------------------------ |\n+| `@change` | Event emitted when the active tab changes. |\n### Tabs Slot\n",
        "date": "06.05.2020 16:37:00",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "sim_msg": "docs: fix newline placement",
        "sim_diff": "diff --git a/packages/tabs/src/Tabs.js b/packages/tabs/src/Tabs.js @@ -97,13 +97,13 @@ class Tabs extends Component {\n*/\nchildren: PropTypes.node,\n/**\n- * Sets the initial active tab. Overrides the deprecated active property on\n- * the Tab component.\n+ * Sets the initial active tab.\n+ * Overrides the deprecated active property on the Tab component.\n*/\ndefaultActiveTabIndex: PropTypes.number,\n/**\n- * Control the active tab. Overrides the deprecated active property on\n- * the Tab component.\n+ * Control the active tab.\n+ * Overrides the deprecated active property on the Tab component.\n*/\nactiveTabIndex: PropTypes.number,\n/**\n",
        "chatgpt_rag": "docs: update Tabs Events table with correct event name and description"
    },
    {
        "msg": "fix(razzle): add back css minimizer",
        "diff": "diff --git a/packages/razzle/config/createConfigAsync.js b/packages/razzle/config/createConfigAsync.js @@ -877,7 +877,27 @@ module.exports = (\nminimize: true,\nminimizer: [\nnew TerserPlugin(webpackOptions.terserPluginOptions),\n+ new CssMinimizerPlugin({\n+ sourceMap: true,\n+ minify: async (data, inputMap) => {\n+ // eslint-disable-next-line global-require\n+ const CleanCSS = require('clean-css');\n+\n+ const [[filename, input]] = Object.entries(data);\n+ const minifiedCss = await new CleanCSS({ sourceMap: true }).minify({\n+ [filename]: {\n+ styles: input,\n+ sourceMap: inputMap,\n+ },\n+ });\n+ return {\n+ css: minifiedCss.styles,\n+ map: minifiedCss.sourceMap.toJSON(),\n+ warnings: minifiedCss.warnings,\n+ };\n+ },\n+ })\n],\n}\n}\n",
        "date": "07.02.2021 22:01:38",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "build(webpack): using TerserPlugin 2 for js minimizer",
        "sim_diff": "diff --git a/webpack.config.js b/webpack.config.js @@ -5,6 +5,7 @@ const path = require('path')\nconst { CleanWebpackPlugin } = require('clean-webpack-plugin')\nconst MiniCssExtractPlugin = require('mini-css-extract-plugin')\n+const TerserPlugin = require('terser-webpack-plugin')\nmodule.exports = {\nmode: devMode ? 'development' : 'production',\n@@ -35,6 +36,9 @@ module.exports = {\nmaxAssetSize: 500000\n},\n+ optimization: {\n+ minimizer: [new TerserPlugin()]\n+ },\nplugins: [\nnew CleanWebpackPlugin(),\nnew MiniCssExtractPlugin({\n",
        "chatgpt_rag": "build(razzle): using TerserPlugin and CssMinimizerPlugin for js and css minimizer respectively"
    },
    {
        "msg": "fix(token): typo in documentation\nImplemantation -> Implementation",
        "diff": "diff --git a/contracts/token/StandardToken.sol b/contracts/token/StandardToken.sol @@ -8,7 +8,7 @@ import './ERC20.sol';\n/**\n* @title Standard ERC20 token\n*\n- * @dev Implemantation of the basic standard token.\n+ * @dev Implementation of the basic standard token.\n* @dev https://github.com/ethereum/EIPs/issues/20\n* @dev Based on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\n*/\n",
        "date": "30.06.2017 14:40:15",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "fix",
        "sim_msg": "fix: ERC20BaseProperties are back to inherit from AnyObject (restricting protocol to classes)",
        "sim_diff": "diff --git a/Sources/web3swift/Tokens/ERC20/ERC20BaseProperties.swift b/Sources/web3swift/Tokens/ERC20/ERC20BaseProperties.swift @@ -9,7 +9,7 @@ import Foundation\n/// Declares common properties of an [ERC-20](https://eips.ethereum.org/EIPS/eip-20) complient smart contract.\n/// Default implementation of access to these properties is declared in the extension of this protocol.\n-public protocol ERC20BaseProperties: Any {\n+public protocol ERC20BaseProperties: AnyObject {\nvar basePropertiesProvider: ERC20BasePropertiesProvider { get }\nvar contract: Web3.Contract { get }\nvar name: String? { get }\n",
        "chatgpt_rag": "style: fix typo in comment for Standard ERC20 token implementation"
    },
    {
        "msg": "fix: grammar issues",
        "diff": "diff --git a/website/pages/static-export.mdx b/website/pages/static-export.mdx @@ -50,7 +50,7 @@ Razzle not only works with React, but also Reason, Elm, Vue, Angular, Svelte, an\nbehind the scenes razzle calls `render` function that exposed from `static_export` module and saves `html` string that you pass to `res.json()` into a html file. for `req` object there is only one property that is `url` which contains the url that we are going to render and save it's result to the html file.\nhtml file destination is relative to the `req.url`, for example if the url is `/product/A` html is going to get saved at `/build/product/A/index.html`.\n-you should call `renderToString()` (or what ever your framework gives you to do SSR) in this function send resonse to `res.json()`\n+you should call `renderToString()` (or what ever your framework gives you to do SSR) in this function and then send result to `res.json()`\n```js\nexport const render = (req, res) => {\n@@ -64,12 +64,12 @@ export const render = (req, res) => {\n};\n```\n-(you can re-export your ssr logic from server.js file and use it `static_export`)\n+(you can re-export your SRR logic from server.js file and use it `static_export`)\n#### routes()\n-you should also export a function called `routes` that returns an array of strings or a promise that will resolve array of strings. razzle will take the urls one by one and pass them one by one to `render`.\n-you should get all paths that your app has from your CMS in this method and return it at the end:\n+you should also export a function called `routes` that returns an array of strings or a promise that will resolve array of strings. razzle will take the urls and will pass them one by one to `render`.\n+you should get all paths that your app has from your CMS in this method and then return it:\n```js\nexport const routes = async () => {\n@@ -81,8 +81,8 @@ export const routes = async () => {\n#### page data\n-you may also need to save the data that your page uses to rehydrate the app on the client side.\n-you can also pass the `data` along the `html` to `res.json({ html, data })` and contents of data object will go inside the `page-data.json` file next to the html file.\n+you may also need to save the data that your page uses to re-hydrate the app on the client side.\n+you can pass the `data` along the `html` to `res.json({ html, data })` and contents of `data` object will get saved in the `page-data.json` next to the related `index.html` file.\n```js\nexport const render = async (req, res) => {\n@@ -98,7 +98,7 @@ export const render = async (req, res) => {\n};\n```\n-(you should also change how your app fetches data on client-side, so it reads data from `page-data.json`)\n+(NOTE: you should change how your app fetches data on client-side, to read data from `page-data.json`)\n## TypeScript Support\n",
        "date": "06.10.2020 03:05:47",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "chore(docs): Wrap proxy redirect with createPages",
        "sim_diff": "diff --git a/docs/docs/how-to/cloud/working-with-redirects-and-rewrites.md b/docs/docs/how-to/cloud/working-with-redirects-and-rewrites.md @@ -11,7 +11,7 @@ For instance, while rebuilding your cooking blog, you might want to move all of\n## Prerequisites\n-- If your Gatsby project doesn't already have a `gatsby-node.js` file, add one at that top level of your project (alongside your `gatsby-config.js`).\n+- If your Gatsby project doesn't already have a `gatsby-node` file, add one at that top level of your project (alongside your `gatsby-config`).\n## Directions\n@@ -30,6 +30,8 @@ exports.createPages = async ({ graphql, actions }) => {\n2. Once you've made these changes and deployed the changes through Gatsby Cloud, you should be able to test your changes once the CDN cache has been purged.\n+**Please note:** Most of the examples below will omit the `createPages` wrapper for the sake of brevity. However, the `createRedirect` examples will still always need to be wrapped with it like shown above.\n+\n## Advanced use cases\n### Wildcard Path Redirects\n@@ -37,9 +39,6 @@ exports.createPages = async ({ graphql, actions }) => {\nIn the example above, you've explicitly redirected one of your recipe urls, and after adding a few others, you realize that you won't have time to get all the old urls. So you decide that any other url that uses your old path `blog/recipes/*` should just be redirected to the new `/recipes` path. Here's how you'd handle that:\n```js:title=gatsby-node.js\n-exports.createPages = async ({ graphql, actions }) => {\n- const { createRedirect } = actions\n-\ncreateRedirect({\nfromPath: `/blog/recipes/mouthwatering-lasagna`,\ntoPath: `/recipes/mouthwatering-lasagna`,\n@@ -51,7 +50,6 @@ exports.createPages = async ({ graphql, actions }) => {\nfromPath: `/blog/recipes/*`,\ntoPath: `/recipes`,\n})\n-}\n```\n### Splat redirects\n@@ -59,14 +57,10 @@ exports.createPages = async ({ graphql, actions }) => {\nExtending the wildcard example above, you may have a high degree confidence that all of your old recipes that lived at `/blog/recipes` have been migrated to `/recipe`. In that case, you can use a `*` marker in the toPath to indicate that you want the redirect to include everything after the base url. In that case `/blog/recipes/any-awesome-url-path` would become `/recipes/any-awesome-url-path`. Here's how you'd handle that:\n```js:title=gatsby-node.js\n-exports.createPages = async ({ graphql, actions }) => {\n- const { createRedirect } = actions\n-\ncreateRedirect({\nfromPath: `/blog/recipes/*`,\ntoPath: `/recipes/*`,\n})\n-}\n```\n### Country based redirects\n@@ -185,6 +179,7 @@ Here's how you could do it for our recipes site using a JSON file:\n```js:title=gatsby-node.js\nconst redirects = require(\"./redirects.json\")\n+\nexports.createPages = async ({ graphql, actions }) => {\nconst { createRedirect } = actions\n@@ -202,11 +197,15 @@ exports.createPages = async ({ graphql, actions }) => {\nWhenever you set a statusCode of 200 on createRedirect you create a rewrite or a reverse proxy. If your toPath is a page that already exists as part of your Gatsby site it will render that page. If the toPath is an external URL, then we will proxy that request. Maybe you have one site sitting in front of multiple other domains and you want to use rewrites to proxy the traffic. Imagine awesomesite.com was actually several different sites. Docs, dashboard, and marketing, for example. You could have all traffic start out routed to awesomesite.com and then rewrite to the other sites as needed. Such as:\n```js:title=gatsby-node.js\n+exports.createPages = async ({ actions }) => {\n+ const { createRedirect } = actions\n+\ncreateRedirect({\nfromPath: `/docs/*`,\ntoPath: `https://www.awesomesite.com/docs/*`,\nstatusCode: 200,\n})\n+}\n```\nThe important part here is that you have an external toPath with a complete URL and a statusCode of 200 to indicate the rewrite.\n",
        "chatgpt_rag": "chore(website): Update comments and fix typos in static-export.mdx file"
    },
    {
        "msg": "fix(docs): fix compatibility with IE",
        "diff": "diff --git a/docs/app/utils.js b/docs/app/utils.js @@ -15,6 +15,14 @@ export const parentComponents = _.flow(\n_.sortBy('_meta.name')\n)(semanticUIReact)\n+const mathSign = Math.sign || function (x) {\n+ x = +x\n+ if (x === 0 || isNaN(x)) {\n+ return x\n+ }\n+ return x > 0 ? 1 : -1\n+}\n+\n/**\n* Get the Webpack Context for all doc site examples.\n*/\n@@ -27,6 +35,7 @@ export const semanticUICSSRepoURL = 'https://github.com/Semantic-Org/Semantic-UI\nexport const scrollToAnchor = () => {\nconst anchor = location.hash && document.querySelector(location.hash)\n+ const offsetY = window.scrollY || window.pageYOffset\n// no scroll to target, stop\nif (!anchor) return\n@@ -37,9 +46,9 @@ export const scrollToAnchor = () => {\nif (elementTop === 0) return\n// hit max scroll boundaries, stop\n- const isScrolledToTop = scrollY === 0\n- const isScrolledToBottom = scrollY + document.body.clientHeight === document.body.scrollHeight\n- const scrollStep = Math.ceil((Math.abs(elementTop / 8))) * Math.sign(elementTop)\n+ const isScrolledToTop = offsetY === 0\n+ const isScrolledToBottom = offsetY + document.body.clientHeight === document.body.scrollHeight\n+ const scrollStep = Math.ceil((Math.abs(elementTop / 8))) * mathSign(elementTop)\nif (isScrolledToBottom && scrollStep > 0 || isScrolledToTop && scrollStep < 0) return\n",
        "date": "09.05.2017 02:18:16",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "sim_msg": "refactor: :recycle: refine scrolling and tabing",
        "sim_diff": "diff --git a/public/resources/js/stats.js b/public/resources/js/stats.js @@ -1003,6 +1003,10 @@ document.addEventListener('DOMContentLoaded', function(){\nwindow.addEventListener(\"hashchange\", () => {\nthis.isSmoothScrolling = true;\n});\n+\n+ document.addEventListener('focusin', () => {\n+ this.isSmoothScrolling = true;\n+ });\n}\n/** wether the document currently has a smooth scroll taking place */\n@@ -1018,6 +1022,7 @@ document.addEventListener('DOMContentLoaded', function(){\nthis._onScroll();\n} else {\nwindow.removeEventListener('scroll', this._onScroll);\n+ scrollToTab();\n}\n}\n}\n@@ -1052,8 +1057,7 @@ document.addEventListener('DOMContentLoaded', function(){\nlink.setAttribute('aria-current', true);\nif (!scrollMemory.isSmoothScrolling) {\n- const left = link.offsetLeft + (link.getBoundingClientRect().width / 2) - (link.parentElement.getBoundingClientRect().width / 2);\n- link.parentElement.scrollTo({left, behavior: 'smooth'});\n+ scrollToTab(true, link);\n}\n} else {\nlink.removeAttribute('aria-current');\n@@ -1064,12 +1068,15 @@ document.addEventListener('DOMContentLoaded', function(){\n}\n}, {rootMargin: \"-100px 0px -25% 0px\"});\n- {\n- const link = document.querySelector(`[href=\"${location.hash}\"]`);\n+ function scrollToTab(smooth = true, element) {\n+ const link = element ?? document.querySelector(`[href=\"${location.hash}\"]`);\n+ const behavior = smooth ? 'smooth' : 'auto';\nconst left = link.offsetLeft + (link.getBoundingClientRect().width / 2) - (link.parentElement.getBoundingClientRect().width / 2);\n- link.parentElement.scrollTo({ left });\n+ link.parentElement.scrollTo({ left, behavior });\n}\n+ scrollToTab(false);\n+\nconst playerProfileElement = document.querySelector('#player_profile');\nsectionObserver.observe(playerProfileElement);\n",
        "chatgpt_rag": "refactor: :recycle: improve scroll behavior and add mathSign utility function"
    },
    {
        "msg": "fix: Disable file import OK button until a file is selected\nfixes",
        "diff": "diff --git a/src/App.js b/src/App.js @@ -417,7 +417,9 @@ class App extends Component {\n<div>\n<span className={ style.centerSpan }>\n{options.action === IMPORT &&\n- <div className=\"button circular\" title=\"Ok\" onClick={this.processOptions}>\n+ <div className=\"button circular\" title=\"Ok\"\n+ disabled={options.action === IMPORT && !this.state.selectedFile}\n+ onClick={this.processOptions}>\n<FontAwesomeIcon icon={faCheck} />\n</div>\n}\n",
        "date": "01.04.2019 18:07:44",
        "repo": "iqtlabs/crviz",
        "type": "fix",
        "sim_msg": "feat(form): Change color of mode button checkboxes to green",
        "sim_diff": "diff --git a/lib/components/form/mode-button.js b/lib/components/form/mode-button.js @@ -31,7 +31,7 @@ export default class ModeButton extends Component {\n<div className='mode-label' style={{ color: buttonColor }}>{label}</div>\n{active && <div>\n<div className='mode-check' style={{ color: 'white' }}><i className='fa fa-circle' /></div>\n- <div className='mode-check' style={{ color: 'red' }}><i className='fa fa-check-circle' /></div>\n+ <div className='mode-check' style={{ color: 'green' }}><i className='fa fa-check-circle' /></div>\n</div>}\n</div>\n)\n",
        "chatgpt_rag": "fix(app): Disable 'Ok' button when no file is selected for import"
    },
    {
        "msg": "fix(search-input): Fix empty search input",
        "diff": "diff --git a/app/components/search-input.js b/app/components/search-input.js @@ -37,9 +37,9 @@ export default Component.extend({\nconst projectVersion = get(this, '_projectVersion');\n// Hide and don't run query if there's no search query\n- // if (!query) {\n- // return set(this, '_focused', false);\n- // }\n+ if (!query) {\n+ return set(this, '_focused', false);\n+ }\nconst params = {\nhitsPerPage: 15,\n",
        "date": "16.08.2017 22:34:58",
        "repo": "ember-learn/ember-api-docs",
        "type": "fix",
        "sim_msg": "fix: url-encode search query in URL",
        "sim_diff": "diff --git a/components/Search/index.js b/components/Search/index.js @@ -208,7 +208,7 @@ class Search extends Component {\n}\nthis.updateUrl = (filters, sort) => {\n- const searchQuery = this.state.searchQuery\n+ const searchQuery = encodeURIComponent(this.state.searchQuery)\nthis.pushUrl({q: searchQuery, filters, sort})\n}\n@@ -222,13 +222,14 @@ class Search extends Component {\nlet filters = DEFAULT_FILTERS\nlet newState = {}\n+ const decodedQuery = decodeURIComponent(query.q)\n- if (query.q && query.q !== this.state.searchQuery) {\n+ if (decodedQuery && decodedQuery !== this.state.searchQuery) {\nnewState = {\n...newState,\n- searchQuery: query.q,\n- submittedQuery: query.q,\n- filterQuery: query.q\n+ searchQuery: decodedQuery,\n+ submittedQuery: decodedQuery,\n+ filterQuery: decodedQuery\n}\n}\n",
        "chatgpt_rag": "fix: hide and don't run query if there's no search query in search input component"
    },
    {
        "msg": "fix: don't use `options.iconPack`, yet",
        "diff": "diff --git a/packages/chakra-ui-core/src/utils/icons.js b/packages/chakra-ui-core/src/utils/icons.js import { merge } from 'lodash-es'\n/**\n- * @param {String} pack\n- * @param {Array} icon\n+ * @param {String} prefix - prefix for the icon pack\n+ * @param {Array} icon - icon definition\n* @returns {{path: string, viewBox: string, attrs: *}}\n*/\n-const createIcon = (pack, icon) => {\n+const createIcon = (prefix, icon) => {\nconst [w, h, content, svg, data, , attrs] = icon\nlet path\n@@ -21,12 +21,12 @@ const createIcon = (pack, icon) => {\nreturn `<g fill=\"currentColor\" class=\"${prefix}-group\">${paths.join('')}</g>`\n}\n- if (pack === 'fa') {\n+ if (prefix.startsWith('fa')) {\npath = Array.isArray(data)\n- ? createGroupedPath(data, pack)\n+ ? createGroupedPath(data, prefix.substr(0, 2))\n: createPath(data)\n} else {\n- path = pack.startsWith('fe') ? content : svg\n+ path = prefix.startsWith('fe') ? content : svg\n}\nreturn {\n@@ -38,17 +38,16 @@ const createIcon = (pack, icon) => {\n/**\n* @description Custom parse all Icons provided by user\n- * @param {String} pack - the name of the icon pack being used (fe, fa, mdi, etc)\n* @param {Object} iconSet - Registered Icons object\n* @returns {Object}\n*/\n-const parseIcons = (pack, iconSet = {}) => {\n+const parseIcons = (iconSet = {}) => {\nconst parseIcon = (iconObject) => {\n- const { icon, iconName } = iconObject\n+ const { icon, prefix, iconName } = iconObject\n// Is library icon\nif (icon) {\nreturn {\n- [`${iconName}`]: createIcon(pack, icon)\n+ [`${iconName}`]: createIcon(prefix, icon)\n}\n} else {\nreturn {}\n@@ -62,13 +61,12 @@ const parseIcons = (pack, iconSet = {}) => {\n/**\n* @description Parse Icon packs\n- * @param {String} pack - the name of the icon pack being used (fe, fa, mdi, etc)\n* @param {Object} iconSet Registered Icon set\n* @returns {Object} Parsed pack icons object\n*/\n-export const parsePackIcons = (pack, iconSet) => {\n+export const parsePackIcons = (iconSet) => {\n// TODO: Add support for other icon libraries\n// - Material Icons: these are string constants, and need lots of work\n// - Tailwind Icons (Hero icons)\n- return parseIcons(pack, iconSet)\n+ return parseIcons(iconSet)\n}\n",
        "date": "25.10.2021 14:39:05",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "sim_msg": "feat(icons): add icon assets as .svg files",
        "sim_diff": "diff --git a/packages/tools/lib/create-icons/index.js b/packages/tools/lib/create-icons/index.js @@ -33,6 +33,9 @@ registerIcon(name, { pathData, ltr, accData, collection });\nexport default { pathData, accData };`;\n+const svgTemplate = (pathData) => `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n+ <path d=\"${pathData}\"/>\n+</svg>`;\nconst createIcons = (file) => {\nconst json = JSON.parse(fs.readFileSync(file));\n@@ -46,6 +49,7 @@ const createIcons = (file) => {\nconst content = acc ? accTemplate(name, pathData, ltr, acc, json.collection) : template(name, pathData, ltr, json.collection);\nfs.writeFileSync(path.join(destDir, `${name}.js`), content);\n+ fs.writeFileSync(path.join(destDir, `${name}.svg`), svgTemplate(pathData));\n}\n};\n",
        "chatgpt_rag": "refactor(icons): update icon creation logic to use prefix instead of pack\n- Updated the `createIcon` function to use the `prefix` parameter instead of `pack` for better clarity and consistency\n- Updated the `parseIcons` function to pass the `prefix` parameter to the `createIcon` function for each icon object\n- Removed the `pack` parameter from the `parseIcons` and `parsePackIcons` functions as it is no longer needed"
    },
    {
        "msg": "fix(optimize): avoid `relative` preloader if external publicPath",
        "diff": "diff --git a/src/plugins/optimize-graph-plugin.js b/src/plugins/optimize-graph-plugin.js @@ -398,7 +398,9 @@ function hoistTransitiveImports(graph) {\nif (DEBUG) console.log(`Preloading JS for import(${spec}): ${js}`);\npreloads.push(\n...js.map(f => {\n- // TODO: should have `toImport(...)` somewhere here\n+ if (/^(https?:)?\\/\\//.test(graph.publicPath)) {\n+ return `import(${toImport(graph.publicPath, f)})`;\n+ }\nlet rel = posix.relative(posix.dirname('/' + fileName), posix.join(graph.publicPath, f));\nif (!rel.startsWith('.')) rel = './' + rel;\nreturn `import(${JSON.stringify(rel)})`;\n",
        "date": "07.12.2020 10:42:46",
        "repo": "preactjs/wmr",
        "type": "fix",
        "sim_msg": "fix(CollectionSharingModal): remove recipient email",
        "sim_diff": "diff --git a/components/core/ShareModals/CollectionSharingModal.js b/components/core/ShareModals/CollectionSharingModal.js @@ -50,14 +50,8 @@ export const CollectionSharingModal = () => {\nwindow.open(`https://twitter.com/intent/tweet?text=${title}:%0D&url=${link}`, \"_blank\");\nconst handleEmailSharing = () => {\n- let { email } = user;\n- if (!email) {\n- email = prompt(\"Please enter your email\");\n- }\n- if (!email) return;\n-\n//TODO(amine): change email copy\n- window.open(`mailfrom: ?subject=Check out this collection&body=${link}`, \"_b\");\n+ window.open(`mailto: ?subject=Check out this collection&body=${link}`, \"_b\");\n};\nconst handleLinkCopy = () => (Utilities.copyToClipboard(link), changeView(\"LINK_COPIED\"));\n",
        "chatgpt_rag": "refactor(optimize-graph-plugin): add conditional import logic"
    },
    {
        "msg": "fix(razzle): fix for unreleased plugins",
        "diff": "diff --git a/packages/razzle/config/loadPlugins.js b/packages/razzle/config/loadPlugins.js @@ -12,8 +12,9 @@ function loadPlugin(plugin, paths) {\nreturn [plugin, {}];\n}\n- // Support for not released plugins\n- if (typeof plugin === 'object') {\n+ // Support for not released plugins without options\n+ // Use plugin.object if you need options\n+ if (typeof plugin === 'object' && !plugin.name && !plugin.object) {\nreturn [plugin, {}];\n}\n",
        "date": "11.11.2020 19:31:56",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "feat: add initial hook for plugin",
        "sim_diff": "diff --git a/lib/plugins/load-plugin.js b/lib/plugins/load-plugin.js @@ -60,6 +60,9 @@ module.exports = function(options, callback) {\nreturn callbackHandler();\n}\nvar execPlugin = require(options.value);\n+ if (typeof execPlugin.initial === 'function') {\n+ execPlugin.initial(options);\n+ }\nvar startServer = execPlugin.pluginServer || execPlugin.server || execPlugin;\nif (typeof startServer == 'function') {\n++count;\n",
        "chatgpt_rag": "refactor: improve support for not released plugins without options"
    },
    {
        "msg": "fix(razzle): disable pnp plugin with webpack 5",
        "diff": "diff --git a/packages/razzle/config/createConfigAsync.js b/packages/razzle/config/createConfigAsync.js @@ -475,16 +475,14 @@ module.exports = (\nadditionalAliases\n),\nplugins: [\n- // TODO: Remove when using webpack 5\n- PnpWebpackPlugin,\n- ],\n+ webpackMajor !== 5 && PnpWebpackPlugin,\n+ ].filter(x => x),\n},\nresolveLoader: {\nmodules: [paths.appNodeModules, paths.ownNodeModules],\nplugins: [\n- // TODO: Remove when using webpack 5\n- PnpWebpackPlugin.moduleLoader(module),\n- ],\n+ webpackMajor !== 5 && PnpWebpackPlugin.moduleLoader(module),\n+ ].filter(x => x),\n},\nmodule: {\nstrictExportPresence: true,\n@@ -587,7 +585,7 @@ module.exports = (\n? webpackOptions.nodeExternals : [webpackOptions.nodeExternals];\n// We need to tell webpack what to bundle into our Node bundle.\n- config.externals = (!IS_SERVERLESS ? [nodeExternalsFunc] : []).concat(webpackOptions.nodeExternals);\n+ config.externals = (!IS_SERVERLESS ? [nodeExternalsFunc] : []).concat(nodeExternals);\n// Specify webpack Node.js output path and filename\nconfig.output = {\n@@ -832,7 +830,7 @@ module.exports = (\n? webpackOptions.clientExternals : [webpackOptions.clientExternals];\n// We need to tell webpack what to bundle into our client bundle.\n- config.externals = webpackOptions.clientExternals;\n+ config.externals = clientExternals;\n// Specify the client output directory and paths. Notice that we have\n// changed the publiPath to just '/' from http://localhost:3001. This is because\n",
        "date": "15.01.2021 19:52:11",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "build(webpack): set the parameter region",
        "sim_diff": "diff --git a/packages/manager/apps/dedicated/webpack.config.js b/packages/manager/apps/dedicated/webpack.config.js @@ -34,6 +34,8 @@ fs.readdirSync(folder).forEach((file) => {\n});\nmodule.exports = (env = {}) => {\n+ const REGION = _.upperCase(env.region || process.env.REGION || 'EU');\n+\nconst { config } = webpackConfig(\n{\ntemplate: './client/app/index.html',\n@@ -64,13 +66,9 @@ module.exports = (env = {}) => {\n],\n},\n},\n- env,\n+ REGION ? Object.assign(env, { region: REGION }) : env,\n);\n- const WEBPACK_REGION = `${_.upperCase(\n- env.region || process.env.REGION || 'EU',\n- )}`;\n-\nconfig.plugins.push(\nnew webpack.DefinePlugin({\nWEBPACK_ENV: {\n@@ -81,7 +79,7 @@ module.exports = (env = {}) => {\n);\n// Extra config files\n- const extrasRegion = glob.sync(`./.extras-${WEBPACK_REGION}/**/*.js`);\n+ const extrasRegion = glob.sync(`./.extras-${REGION}/**/*.js`);\nconst extras = glob.sync('./.extras/**/*.js');\nreturn merge(config, {\n@@ -116,7 +114,7 @@ module.exports = (env = {}) => {\n__NG_APP_INJECTIONS__: process.env.NG_APP_INJECTIONS\n? `'${process.env.NG_APP_INJECTIONS}'`\n: 'null',\n- __WEBPACK_REGION__: `'${WEBPACK_REGION}'`,\n+ __WEBPACK_REGION__: `'${REGION}'`,\n}),\n],\noptimization: {\n",
        "chatgpt_rag": "build(webpack): update PnpWebpackPlugin usage based on webpack version"
    },
    {
        "msg": "fix(editable): fix blur event only call onSubmit",
        "diff": "diff --git a/packages/chakra-ui-core/src/Editable/index.js b/packages/chakra-ui-core/src/Editable/index.js @@ -252,7 +252,6 @@ const EditableInput = {\nonKeyDown,\nvalue,\nonSubmit,\n- onCancel,\nsubmitOnBlur,\nplaceholder,\nisDisabled\n@@ -274,7 +273,7 @@ const EditableInput = {\n},\nnativeOn: {\nblur: event => {\n- submitOnBlur ? onSubmit() : onCancel()\n+ submitOnBlur && onSubmit()\nthis.$emit('blur', event)\n},\nchange: onChange,\n",
        "date": "19.03.2020 22:03:28",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "sim_msg": "fix(EditableCell): Change behavior to save cell contents when losing focus, clicking away etc.\nfix",
        "sim_diff": "diff --git a/lib/editor/components/timetable/EditableCell.js b/lib/editor/components/timetable/EditableCell.js @@ -259,6 +259,10 @@ export default class EditableCell extends Component<Props, State> {\n}\n}\n+ handleBlur = () => {\n+ this.save()\n+ }\n+\nhandleChange = (evt: SyntheticInputEvent<HTMLInputElement>) => {\nthis.setState({data: evt.target.value})\n}\n@@ -335,7 +339,7 @@ export default class EditableCell extends Component<Props, State> {\nautoFocus\ndefaultValue={renderCell(column, data)}\nclassName='cell-input'\n- onBlur={this.cancel}\n+ onBlur={this.handleBlur}\nonChange={this.handleChange}\nonFocus={this._onInputFocus}\nonKeyDown={this.handleKeyDown}\n",
        "chatgpt_rag": "refactor(EditableInput): Update blur event logic to only submit on blur if submitOnBlur is true."
    },
    {
        "msg": "fix: test more extensions in static_export",
        "diff": "diff --git a/packages/razzle/config/createConfigAsync.js b/packages/razzle/config/createConfigAsync.js @@ -170,7 +170,10 @@ module.exports = (\nlet webpackOptions = {};\n- const hasStaticExportJs = fs.existsSync(paths.appStaticExportJs + '.js');\n+ const hasStaticExportJs = fs.existsSync(paths.appStaticExportJs + '.js') ||\n+ fs.existsSync(paths.appStaticExportJs + '.jsx') ||\n+ fs.existsSync(paths.appStaticExportJs + '.ts') ||\n+ fs.existsSync(paths.appStaticExportJs + '.tsx');\nconst dotenv = getClientEnv(\ntarget,\n",
        "date": "23.09.2020 19:13:42",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "chore(refactor): store config file names in `defaultConfigFiles`",
        "sim_diff": "diff --git a/bin/convert-argv.js b/bin/convert-argv.js @@ -69,7 +69,8 @@ module.exports = function(...args) {\nconst configArgList = Array.isArray(argv.config) ? argv.config : [argv.config];\nconfigFiles = configArgList.map(mapConfigArg);\n} else {\n- const webpackConfigFileRegExp = `(webpack.config|webpackfile)(${extensions.join(\"|\")})`;\n+ const defaultConfigFiles = [\"webpack.config\", \"webpackfile\"];\n+ const webpackConfigFileRegExp = `(${defaultConfigFiles.join(\"|\")})(${extensions.join(\"|\")})`;\nconst pathToWebpackConfig = findup(webpackConfigFileRegExp);\nif (pathToWebpackConfig) {\n",
        "chatgpt_rag": "feat(config): check for multiple file extensions in `hasStaticExportJs` condition"
    },
    {
        "msg": "fix(scss): fix tests",
        "diff": "diff --git a/packages/razzle-plugin-scss/tests/index.test.js b/packages/razzle-plugin-scss/tests/index.test.js @@ -69,19 +69,16 @@ const nodeLoaderTests = [\nloaderFinder: cssLoaderFinder,\n},\n{\n- name: 'should not add postcss-loader',\n+ name: 'should add postcss-loader',\nloaderFinder: postCssLoaderFinder,\n- status: 'falsy',\n},\n{\n- name: 'should not add resolve-url-loader',\n+ name: 'should add resolve-url-loader',\nloaderFinder: resolveUrlLoaderFinder,\n- status: 'falsy',\n},\n{\n- name: 'should not add sass-loader',\n+ name: 'should add sass-loader',\nloaderFinder: sassLoaderFinder,\n- status: 'falsy',\n},\n];\n",
        "date": "16.04.2020 00:40:07",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "docs: fix sass-loader link",
        "sim_diff": "diff --git a/docs/config/README.md b/docs/config/README.md @@ -216,7 +216,7 @@ Options for [stylus-loader](https://github.com/shama/stylus-loader).\n- Type: `Object`\n- Default: `{}`\n-Options for [sass-loader](https://github.com/postcss/postcss-loader) to load `*.scss` files.\n+Options for [sass-loader](https://github.com/webpack-contrib/sass-loader) to load `*.scss` files.\n### sass\n",
        "chatgpt_rag": "tests: update loader tests to add postcss-loader and resolve-url-loader"
    },
    {
        "msg": "fix(sass-plugin): bumpup mini-css-extract-plugin version",
        "diff": "diff --git a/packages/razzle-plugin-scss/package.json b/packages/razzle-plugin-scss/package.json },\n\"dependencies\": {\n\"autoprefixer\": \"^8.6.2\",\n- \"mini-css-extract-plugin\": \"^0.4.0\",\n+ \"mini-css-extract-plugin\": \"^0.9.0\",\n\"node-sass-chokidar\": \"^1.3.0\",\n\"postcss-flexbugs-fixes\": \"^3.3.1\",\n\"postcss-scss\": \"^1.0.5\",\n",
        "date": "10.04.2020 18:15:14",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "fix(app): Revert back to an old version of \"open\" package",
        "sim_diff": "diff --git a/app/package.json b/app/package.json \"minimist\": \"1.2.5\",\n\"node-loader\": \"1.0.1\",\n\"node-sass\": \"4.14.1\",\n- \"open\": \"7.2.0\",\n+ \"open\": \"7.1.0\",\n\"optimize-css-assets-webpack-plugin\": \"5.0.3\",\n\"ouch\": \"2.0.0\",\n\"postcss-loader\": \"3.0.0\",\n",
        "chatgpt_rag": "fix(razzle-plugin-scss): Update \"mini-css-extract-plugin\" to version 0.9.0"
    },
    {
        "msg": "fix(Responsive): fix types in typings",
        "diff": "diff --git a/src/addons/Responsive/Responsive.d.ts b/src/addons/Responsive/Responsive.d.ts @@ -28,12 +28,12 @@ export interface ResponsiveProps {\n}\nexport interface ResponsiveOnUpdateData extends ResponsiveProps {\n- width: string;\n+ width: number;\n}\nexport interface ResponsiveWidthShorthand {\n- minWidth: number;\n- maxWidth?: number;\n+ minWidth?: number | string;\n+ maxWidth?: number | string;\n}\ndeclare class Responsive extends React.Component<ResponsiveProps, {}> {\n",
        "date": "11.03.2018 14:10:49",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "sim_msg": "refactor(rating/icons): format js with new rules",
        "sim_diff": "diff --git a/components/rating/icons/src/index.js b/components/rating/icons/src/index.js @@ -9,13 +9,22 @@ class RatingIcons extends Component {\ncalculateWidthByRating() {\nconst {maxValue, iconSize, rating, spacingBetween} = this.props\n- return (maxValue * (iconSize + spacingBetween) / maxValue) * rating\n+ return ((maxValue * (iconSize + spacingBetween)) / maxValue) * rating\n}\ngetIcon(Icon, index) {\n- return <div key={index} className='sui-RatingIcons-iconContainer' style={{ minWidth: this.props.iconSize, marginLeft: this.props.spacingBetween }}>\n+ return (\n+ <div\n+ key={index}\n+ className=\"sui-RatingIcons-iconContainer\"\n+ style={{\n+ minWidth: this.props.iconSize,\n+ marginLeft: this.props.spacingBetween\n+ }}\n+ >\n<Icon />\n</div>\n+ )\n}\nbuildRating(maxValue, icon) {\n@@ -28,7 +37,11 @@ class RatingIcons extends Component {\n}\ncomponentDidMount() {\n- const currentRatingFilledWidth = this.calculateWidthByRating(this.props.rating, this.props.maxValue, this.ratingEle)\n+ const currentRatingFilledWidth = this.calculateWidthByRating(\n+ this.props.rating,\n+ this.props.maxValue,\n+ this.ratingEle\n+ )\nif (currentRatingFilledWidth !== this.state.ratingFilledWidth) {\nthis.setState({\nratingFilledWidth: currentRatingFilledWidth\n@@ -40,14 +53,19 @@ class RatingIcons extends Component {\nconst {maxValue, icon, fillColor, emptyColor} = this.props\nconst ratingIcons = this.buildRating(maxValue, icon)\n- return <div className='sui-RatingIcons'>\n- <div className='sui-RatingIcons-empty' style={{ fill: emptyColor }}>\n+ return (\n+ <div className=\"sui-RatingIcons\">\n+ <div className=\"sui-RatingIcons-empty\" style={{fill: emptyColor}}>\n{ratingIcons}\n</div>\n- <div className='sui-RatingIcons-filled' style={{ width: this.state.ratingFilledWidth, fill: fillColor }} >\n+ <div\n+ className=\"sui-RatingIcons-filled\"\n+ style={{width: this.state.ratingFilledWidth, fill: fillColor}}\n+ >\n{ratingIcons}\n</div>\n</div>\n+ )\n}\n}\n",
        "chatgpt_rag": "refactor(Responsive): update ResponsiveWidthShorthand types to allow for number or string values"
    },
    {
        "msg": "fix: reduce help output (a teeny bit)",
        "diff": "diff --git a/doc/cli/help.txt b/doc/cli/help.txt -I, --no-stdin ........... don't try to read from stdin.\n-C, --on-change-only ..... execute script on change only, not startup\n--no-colors .............. disable color output\n+ --signal <signal> ........ use specified kill signal instead of default (ex. SIGTERM)\n-d, --delay n ............ debounce restart for \"n\" seconds.\n--exitcrash .............. exit on crash, allows use of nodemon with daemon\ntools like forever.js.\n-v, --version ............ current nodemon version.\n-h, --help ............... you're looking at it.\n--help <topic> ........... help on a specific feature. Try \"--help topics\".\n- --signal <signal> ........ use specified kill signal instead of default (ex. SIGTERM)\n-- <your args> ........... to tell nodemon stop slurping arguments.\nNote: if the script is omitted, nodemon will try to read \"main\" from\nExamples:\n$ nodemon server.js\n- $ nodemon --config my/custom/nodemon.json server.js\n$ nodemon -w ../foo server.js apparg1 apparg2\n- $ PORT=8000 nodemon --debug-brk server.js\n$ nodemon --exec python app.py\n$ nodemon --exec \"make build\" -e \"styl hbs\"\n- $ nodemon app.js -- -v\n+ $ nodemon app.js -- --inspect\nFor more details see http://github.com/remy/nodemon/\n",
        "date": "04.12.2017 22:27:16",
        "repo": "remy/nodemon",
        "type": "fix",
        "sim_msg": "chore(release): remove reverted fix note",
        "sim_diff": "diff --git a/CHANGELOG.md b/CHANGELOG.md * breakpoints ignoring next breakpoint in some cases ([7ff01e3](https://github.com/fomantic/Fomantic-UI/commit/7ff01e3)), closes [#567](https://github.com/fomantic/Fomantic-UI/issues/567) [#567](https://github.com/fomantic/Fomantic-UI/issues/567) [#681](https://github.com/fomantic/Fomantic-UI/issues/681) [#681](https://github.com/fomantic/Fomantic-UI/issues/681)\n* **api:** module callback function typo ([43c2c8b](https://github.com/fomantic/Fomantic-UI/commit/43c2c8b))\n-* **api:** set context in beforesend to $module instead of possible stateContext to match docs ([004616f](https://github.com/fomantic/Fomantic-UI/commit/004616f))\n* **breadcrumb:** increase line height for readability on wrapped content ([c7ca707](https://github.com/fomantic/Fomantic-UI/commit/c7ca707))\n* **button:** fix padding for compact labeled icon button ([488a4dc](https://github.com/fomantic/Fomantic-UI/commit/488a4dc)), closes [#361](https://github.com/fomantic/Fomantic-UI/issues/361) [#598](https://github.com/fomantic/Fomantic-UI/issues/598)\n* **button:** group of basic disabled buttons had incorrect styles ([7f63e50](https://github.com/fomantic/Fomantic-UI/commit/7f63e50)), closes [#643](https://github.com/fomantic/Fomantic-UI/issues/643)\n",
        "chatgpt_rag": "chore(cli): add option to specify kill signal in nodemon command"
    },
    {
        "msg": "fix(Time Series): let start and end datasets be the same. Fixes",
        "diff": "diff --git a/src/features/dataset-controls/DatasetSlider.js b/src/features/dataset-controls/DatasetSlider.js @@ -68,12 +68,9 @@ class DatasetSlider extends React.Component {\nif(start){\nthis.props.setStartUuid(start.owner);\n}\n- if(end && end !== start){\n+ if(end){\nthis.props.setEndUuid(end.owner);\n}\n- if(end && end === start){\n- this.props.setEndUuid('UNSET');\n- }\n}\nformatTicks = (t) => {\n",
        "date": "06.05.2019 15:37:15",
        "repo": "iqtlabs/crviz",
        "type": "fix",
        "sim_msg": "refactor: group role routing",
        "sim_diff": "diff --git a/botfront/imports/ui/components/index.jsx b/botfront/imports/ui/components/index.jsx @@ -18,6 +18,9 @@ class Index extends React.Component {\n}\nroleRouting = (pId) => {\n+ if (can('projects:r')) {\n+ return '/admin/users';\n+ }\nif (can('users:r', { anyScope: true })) {\nreturn '/admin/users';\n}\n@@ -50,17 +53,13 @@ class Index extends React.Component {\nif (Meteor.userId()) {\nTracker.autorun(() => {\nif (Meteor.user() && areScopeReady() && projectsReady) {\n- if (can('global-admin', undefined, Meteor.userId())\n- || can('projects:r', undefined, Meteor.userId())\n- ) router.push('/admin/projects');\n- else {\n+ // if (can('global-admin', undefined, Meteor.userId())\n+ // || can('projects:r', undefined, Meteor.userId())\n+ // ) router.push('/admin/projects');\n+ // else {\nconst projects = getScopesForUser(Meteor.userId(), '');\n- if (projects.length === 0) {\n- router.push('/404');\n- } else {\nrouter.push(this.roleRouting(projects[0]));\n- }\n- }\n+ // }\n}\n});\n} else {\n",
        "chatgpt_rag": "refactor: improve logic for setting endUuid in DatasetSlider"
    },
    {
        "msg": "fix: watch count regression\n* chore: revert package\n* fix: move to array of watched dirs\nInstead of individually listing them.\nFixes",
        "diff": "diff --git a/lib/monitor/watch.js b/lib/monitor/watch.js @@ -39,25 +39,29 @@ function watch() {\nvar promises = [];\nvar watchedFiles = [];\n- dirs.forEach(function (dir) {\n- var promise = new Promise(function (resolve) {\n- var dotFilePattern = /[/\\\\]\\./;\n+ const promise = new Promise(function (resolve) {\n+ const dotFilePattern = /[/\\\\]\\./;\nvar ignored = Array.from(rootIgnored);\n+ const addDotFile = dirs.filter(dir => dir.match(dotFilePattern));\n// don't ignore dotfiles if explicitly watched.\n- if (!dir.match(dotFilePattern)) {\n+ if (addDotFile.length === 0) {\nignored.push(dotFilePattern);\n}\n+ dirs = dirs.map(dir => {\n// if the directory is a file, it somehow causes\n// windows to lose the filename upon change\nif (fs.statSync(dir).isFile()) {\ndir = path.dirname(dir);\n}\n+ return dir;\n+ });\n+\nvar watchOptions = {\nignorePermissionErrors: true,\n- cwd: dir,\n+ cwd: process.cwd(), // dir,\nignored: ignored,\npersistent: true,\nusePolling: config.options.legacyWatch || false,\n@@ -73,7 +77,7 @@ function watch() {\n}\nvar watcher = chokidar.watch(\n- dir,\n+ dirs,\nObject.assign({}, watchOptions, config.watchOptions || {})\n);\n@@ -114,10 +118,12 @@ function watch() {\nwatchers.push(watcher);\n});\n- promises.push(promise);\n- });\n- return Promise.all(promises).then(function (res) {\n+ return promise.catch(e => {\n+ setTimeout(() => {\n+ throw e;\n+ });\n+ }).then(function (res) {\nutils.log.detail(`watching ${watchedFiles.length} file${\nwatchedFiles.length === 1 ? '' : 's'}`);\nreturn watchedFiles;\n",
        "date": "13.03.2018 21:45:50",
        "repo": "remy/nodemon",
        "type": "fix",
        "sim_msg": "refactor(filesystem): pathPrefix fix",
        "sim_diff": "diff --git a/packages/source-filesystem/index.js b/packages/source-filesystem/index.js const path = require('path')\nconst fs = require('fs-extra')\n+const slash = require('slash')\nconst { mapValues } = require('lodash')\nconst isDev = process.env.NODE_ENV === 'development'\n@@ -86,7 +87,6 @@ class FilesystemSource {\n}\nwatchFiles () {\n- const slash = require('slash')\nconst chokidar = require('chokidar')\nconst watcher = chokidar.watch(this.options.path, {\n@@ -158,11 +158,12 @@ class FilesystemSource {\n}\ncreatePath ({ dir, name }) {\n- const { route, pathPrefix = '' } = this.options\n+ const { route, pathPrefix = '/' } = this.options\nif (route) return\n- const segments = (pathPrefix + dir)\n+ const joinedPath = path.join(pathPrefix, dir)\n+ const segments = slash(joinedPath)\n.split('/')\n.filter(v => v)\n.map(s => this.store.slugify(s))\n",
        "chatgpt_rag": "refactor(monitor): improve directory handling in watch function"
    },
    {
        "msg": "fix(Responsive): fix usage of `window` for SSR",
        "diff": "diff --git a/src/addons/Responsive/Responsive.js b/src/addons/Responsive/Responsive.js @@ -7,6 +7,7 @@ import {\neventStack,\ngetElementType,\ngetUnhandledProps,\n+ isBrowser,\nMETA,\n} from '../../lib'\n@@ -55,7 +56,8 @@ export default class Responsive extends Component {\nconstructor(...args) {\nsuper(...args)\n- this.state = { width: window.innerWidth }\n+\n+ this.state = { width: isBrowser ? window.innerWidth : 0 }\n}\ncomponentDidMount() {\n",
        "date": "17.10.2017 20:43:07",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "sim_msg": "refactor: reveal resolution error earlier",
        "sim_diff": "diff --git a/views/plugin-window-wrapper.es b/views/plugin-window-wrapper.es @@ -36,6 +36,23 @@ const getPluginWindowRect = plugin => {\nreturn { x, y, width, height }\n}\n+const stylesheetTagsWithID = [\n+ 'bootstrap',\n+ 'normalize',\n+ 'blueprint',\n+ 'blueprint-icon',\n+ 'fontawesome',\n+].map(id => `<link rel=\"stylesheet\" type=\"text/css\" id=\"${id}-css\">`).join('')\n+\n+const stylesheetTagsWithHref = [\n+ 'assets/css/app.css',\n+ 'assets/css/global.css',\n+ 'electron-react-titlebar/assets/style.css',\n+ 'react-resizable/css/styles.css',\n+ 'react-grid-layout/css/styles.css',\n+ 'views/components/etc/assets/scroll-shadow.css',\n+].map(href => `<link rel=\"stylesheet\" type=\"text/css\" href=\"${fileUrl(require.resolve(href))}\">`).join('')\n+\nexport class PluginWindowWrap extends PureComponent {\nconstructor(props) {\n@@ -98,17 +115,7 @@ export class PluginWindowWrap extends PureComponent {\nthis.externalWindow.document.head.innerHTML =\n`<meta charset=\"utf-8\">\n<meta http-equiv=\"Content-Security-Policy\" content=\"script-src https://www.google-analytics.com 'self' file://* 'unsafe-inline'\">\n-<link rel=\"stylesheet\" type=\"text/css\" id=\"bootstrap-css\">\n-<link rel=\"stylesheet\" type=\"text/css\" id=\"normalize-css\">\n-<link rel=\"stylesheet\" type=\"text/css\" id=\"blueprint-css\">\n-<link rel=\"stylesheet\" type=\"text/css\" id=\"blueprint-icon-css\">\n-<link rel=\"stylesheet\" type=\"text/css\" id=\"fontawesome-css\">\n-<link rel=\"stylesheet\" type=\"text/css\" href=\"${fileUrl(require.resolve('assets/css/app.css'))}\">\n-<link rel=\"stylesheet\" type=\"text/css\" href=\"${fileUrl(require.resolve('assets/css/global.css'))}\">\n-<link rel=\"stylesheet\" type=\"text/css\" href=\"${fileUrl(require.resolve('electron-react-titlebar/assets/style.css'))}\">\n-<link rel=\"stylesheet\" type=\"text/css\" href=\"${fileUrl(require.resolve('react-resizable/css/styles.css'))}\">\n-<link rel=\"stylesheet\" type=\"text/css\" href=\"${fileUrl(require.resolve('react-grid-layout/css/styles.css'))}\">\n-<link rel=\"stylesheet\" type=\"text/css\" href=\"${fileUrl(require.resolve('views/components/etc/assets/scroll-shadow.css'))}\">`\n+${stylesheetTagsWithID}${stylesheetTagsWithHref}`\nif (process.platform === 'darwin') {\nconst div = document.createElement('div')\ndiv.style.position = 'absolute'\n",
        "chatgpt_rag": "feat: add conditional initialization for width state in Responsive component"
    },
    {
        "msg": "fix: fix release workflow",
        "diff": "diff --git a/.github/workflows/release.yml b/.github/workflows/release.yml @@ -30,7 +30,7 @@ jobs:\nls ~/.npmrc >/dev/null 2>&1 && \\\n[[ $(git describe --exact-match 2> /dev/null || :) =~ -canary ]]; \\\nthen\n- yarn run lerna publish from-git --npm-tag canary --yes\n+ yarn run lerna publish from-git --no-verify-access --npm-tag canary --yes\nelse\necho \"Did not publish canary\"\nfi\n@@ -42,7 +42,7 @@ jobs:\nls ~/.npmrc >/dev/null 2>&1 && \\\n[[ ! $(git describe --exact-match 2> /dev/null || :) =~ -canary ]]; \\\nthen\n- yarn run lerna publish from-git --yes\n+ yarn run lerna publish from-git --no-verify-access --yes\nelse\necho \"Did not publish\"\nfi\n",
        "date": "13.03.2021 15:25:03",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "chore: missing lerna ci comand",
        "sim_diff": "diff --git a/scripts/release_npm.sh b/scripts/release_npm.sh @@ -20,7 +20,7 @@ fi\n# Command to push the packages\nCMD_PREPARE=\"yarn prepare\"\n-CMD_PUBLISH_PACKAGES=\"lerna publish --exact --force-publish=* --registry='https://npm.lwcjs.org' --skip-git --yes ${CANARY} --repo-version ${PACKAGE_VERSION} --new-version ${PACKAGE_VERSION} --non-interactive\"\n+CMD_PUBLISH_PACKAGES=\"lerna publish --ci --exact --force-publish=* --registry='https://npm.lwcjs.org' --skip-git --yes ${CANARY} --repo-version ${PACKAGE_VERSION} --new-version ${PACKAGE_VERSION} --non-interactive\"\n# Run\n$CMD_PREPARE && $CMD_PUBLISH_PACKAGES;\n",
        "chatgpt_rag": "chore: add --no-verify-access flag to lerna publish command"
    },
    {
        "msg": "fix(persistence of notes): user doesn't have to click away to get note to work",
        "diff": "diff --git a/src/features/tooltip/Tooltip.js b/src/features/tooltip/Tooltip.js @@ -14,6 +14,10 @@ class TooltipControls extends React.Component {\nconstructor(props){\nsuper(props)\nthis.state = this.initialState;\n+ /*this.state = {\n+ ...this.state,\n+ showNote:false\n+ }*/\n}\nget initialState(){\n@@ -23,7 +27,6 @@ class TooltipControls extends React.Component {\nwidth:\"300px\",\nposition: [200,200],\ncurrentLabel:\"\",\n- showNote: false,\nnote: {\nid:'',\nnote:{\n@@ -68,7 +71,7 @@ class TooltipControls extends React.Component {\nawait this.setState({note});\nawait this.props.addNote(this.state.note);\n- this.resetBuilder()\n+ //this.resetBuilder()\n} catch(error){\nalert('No search key')\n}\n@@ -96,9 +99,6 @@ class TooltipControls extends React.Component {\ncomponentDidUpdate = (prevProps) => {\nif (prevProps.data !== this.props.data) {\n- if(this.props.data.fieldValue){\n- }\n- else{\nvar note = {...this.state.note}\nnote.id = this.props.data.CRVIZ._SEARCH_KEY\nif (note.id in this.props.notes){\n@@ -111,7 +111,6 @@ class TooltipControls extends React.Component {\n}\n}\n}\n- }\nrender() {\nconst style = {\n",
        "date": "17.07.2019 11:34:54",
        "repo": "iqtlabs/crviz",
        "type": "fix",
        "sim_msg": "refactor(ui): add abilitity to set input initial value",
        "sim_diff": "diff --git a/renderer/components/UI/Input.js b/renderer/components/UI/Input.js @@ -127,6 +127,7 @@ class Input extends React.Component {\nhasMessage: PropTypes.bool,\nhighlightOnValid: PropTypes.bool,\niconSize: PropTypes.number,\n+ initialValue: PropTypes.string,\nisDisabled: PropTypes.bool,\nisReadOnly: PropTypes.bool,\nisRequired: PropTypes.bool,\n@@ -151,6 +152,7 @@ class Input extends React.Component {\nhighlightOnValid: true,\niconSize: 46,\ntooltip: null,\n+ initialValue: '',\n}\nstate = {\n@@ -193,6 +195,7 @@ class Input extends React.Component {\nclassName,\ntooltip,\nchildren,\n+ initialValue,\n...rest\n} = this.props\nconst { hasFocus } = this.state\n@@ -209,6 +212,13 @@ class Input extends React.Component {\n}\n})\n+ const getValue = () => {\n+ if (typeof value === 'undefined') {\n+ return initialValue\n+ }\n+ return !value && value !== 0 ? '' : value\n+ }\n+\nreturn (\n<Flex\nflexDirection=\"column\"\n@@ -273,7 +283,7 @@ class Input extends React.Component {\nrequired={isRequired}\ntheme={theme}\ntype={type}\n- value={!value && value !== 0 ? '' : value}\n+ value={getValue()}\n/>\n{children}\n</Flex>\n",
        "chatgpt_rag": "refactor(tooltip): add ability to show/hide note in TooltipControls"
    },
    {
        "msg": "fix(types): swap `declare` order for `*.module.css` files",
        "diff": "diff --git a/types.d.ts b/types.d.ts @@ -41,18 +41,18 @@ declare interface NodeModule {\n}\ndeclare var module: NodeModule;\n-declare module '*.css' { const url: string; export default url; }\n-declare module '*.scss' { const url: string; export default url; }\n-declare module '*.sass' { const url: string; export default url; }\n-declare module '*.styl' { const url: string; export default url; }\n-\n/** Maps authored classNames to their CSS Modules -suffixed generated classNames. */\n-interface Mapping { [key: string]: string; }\n+type Mapping = Record<string, string>;\ndeclare module '*.module.css' { const mapping: Mapping; export default mapping; }\ndeclare module '*.module.scss' { const mapping: Mapping; export default mapping; }\ndeclare module '*.module.sass' { const mapping: Mapping; export default mapping; }\ndeclare module '*.module.styl' { const mapping: Mapping; export default mapping; }\n+declare module '*.css' { const url: string; export default url; }\n+declare module '*.scss' { const url: string; export default url; }\n+declare module '*.sass' { const url: string; export default url; }\n+declare module '*.styl' { const url: string; export default url; }\n+\n// Import Prefixes\ndeclare module 'json:';\ndeclare module 'css:';\n",
        "date": "02.12.2020 14:18:39",
        "repo": "preactjs/wmr",
        "type": "fix",
        "sim_msg": "test(webpack): custom css loader options",
        "sim_diff": "diff --git a/gridsome/__tests__/app.spec.js b/gridsome/__tests__/app.spec.js @@ -71,44 +71,44 @@ test('setup webpack server config', async () => {\nexpect(config.resolve.alias['gridsome$']).toEqual(path.resolve(__dirname, '../app/index.js'))\n})\n-// test('setup style loader options', async () => {\n-// const app = await createApp(context, {\n-// localConfig: {\n-// css: {\n-// loaderOptions: {\n-// css: { url: false },\n-// sass: { data: '@import \"variables.sass\";' },\n-// scss: { data: '@import \"variables.scss\";' },\n-// less: { strictMath: true },\n-// stylus: { use: ['plugin'] },\n-// postcss: {\n-// ident: 'postcss',\n-// plugins: ['plugin']\n-// }\n-// }\n-// }\n-// }\n-// }, BOOTSTRAP_CONFIG)\n+test('setup style loader options', async () => {\n+ const app = await createApp(context, {\n+ localConfig: {\n+ css: {\n+ loaderOptions: {\n+ css: { url: false },\n+ sass: { data: '@import \"variables.sass\";' },\n+ scss: { data: '@import \"variables.scss\";' },\n+ less: { strictMath: true },\n+ stylus: { use: ['plugin'] },\n+ postcss: {\n+ ident: 'postcss',\n+ plugins: ['plugin']\n+ }\n+ }\n+ }\n+ }\n+ }, BOOTSTRAP_CONFIG)\n-// const chain = await createClientConfig(app)\n-// const oneOf = ['normal', 'modules']\n+ const chain = await createClientConfig(app)\n+ const oneOf = ['normal', 'modules']\n-// oneOf.forEach(oneOf => {\n-// const css = chain.module.rule('css').oneOf(oneOf).use('css-loader').toConfig()\n-// const postcss = chain.module.rule('postcss').oneOf(oneOf).use('postcss-loader').toConfig()\n-// const sass = chain.module.rule('sass').oneOf(oneOf).use('sass-loader').toConfig()\n-// const scss = chain.module.rule('scss').oneOf(oneOf).use('sass-loader').toConfig()\n-// const less = chain.module.rule('less').oneOf(oneOf).use('less-loader').toConfig()\n-// const stylus = chain.module.rule('stylus').oneOf(oneOf).use('stylus-loader').toConfig()\n+ oneOf.forEach(oneOf => {\n+ const css = chain.module.rule('css').oneOf(oneOf).use('css-loader').toConfig()\n+ const postcss = chain.module.rule('postcss').oneOf(oneOf).use('postcss-loader').toConfig()\n+ const sass = chain.module.rule('sass').oneOf(oneOf).use('sass-loader').toConfig()\n+ const scss = chain.module.rule('scss').oneOf(oneOf).use('sass-loader').toConfig()\n+ const less = chain.module.rule('less').oneOf(oneOf).use('less-loader').toConfig()\n+ const stylus = chain.module.rule('stylus').oneOf(oneOf).use('stylus-loader').toConfig()\n-// expect(css.options.url).toEqual(false)\n-// expect(postcss.options.ident).toEqual('postcss')\n-// expect(postcss.options.plugins).toHaveLength(2)\n-// expect(postcss.options.plugins[0]).toEqual('plugin')\n-// expect(postcss.options.plugins[1]).toBeInstanceOf(Function)\n-// expect(sass.options.data).toEqual('@import \"variables.sass\";')\n-// expect(scss.options.data).toEqual('@import \"variables.scss\";')\n-// expect(less.options.strictMath).toEqual(true)\n-// expect(stylus.options.use[0]).toEqual('plugin')\n-// })\n-// })\n+ expect(css.options.url).toEqual(false)\n+ expect(postcss.options.ident).toEqual('postcss')\n+ expect(postcss.options.plugins).toHaveLength(2)\n+ expect(postcss.options.plugins[0]).toEqual('plugin')\n+ expect(postcss.options.plugins[1]).toBeInstanceOf(Function)\n+ expect(sass.options.data).toEqual('@import \"variables.sass\";')\n+ expect(scss.options.data).toEqual('@import \"variables.scss\";')\n+ expect(less.options.strictMath).toEqual(true)\n+ expect(stylus.options.use[0]).toEqual('plugin')\n+ })\n+})\n",
        "chatgpt_rag": "refactor(types): update module declarations for css, scss, sass, and styl files"
    },
    {
        "msg": "fix: Add support for multi-level filenames",
        "diff": "diff --git a/lib/config/exec.js b/lib/config/exec.js @@ -155,7 +155,9 @@ function exec(nodemonOptions, execMap) {\n// BIG NOTE: user can't do this: nodemon -e *.js\n// because the terminal will automatically expand the glob against\n// the file system :(\n- extension = (extension.match(/[^,.\\s]+/g) || []).join(',');\n+ extension = (extension.match(/[^,*\\s]+/g) || [])\n+ .map(ext => ext.replace(/^\\./, ''))\n+ .join(',');\noptions.ext = extension;\n",
        "date": "08.10.2017 16:03:07",
        "repo": "remy/nodemon",
        "type": "fix",
        "sim_msg": "feat: read pluginsDataMap by cli option `-e jsonString`",
        "sim_diff": "diff --git a/lib/config.js b/lib/config.js @@ -514,7 +514,7 @@ exports.extend = function(newConf) {\n}\nvar extra = newConf.extra;\nif (extra && typeof extra === 'string') {\n- extra = readFileText(extra);\n+ extra = /^\\s*\\{[\\w\\W]*\\}\\s*$/.test(extra) ? extra : readFileText(extra);\ntry {\nextra = extra && JSON.parse(extra);\nif (extra && typeof extra === 'object') {\n",
        "chatgpt_rag": "refactor: improve extension handling logic in exec function"
    },
    {
        "msg": "fix(switch.mdx): added a slots table",
        "diff": "diff --git a/packages/chakra-ui-docs/docs/switch.mdx b/packages/chakra-ui-docs/docs/switch.mdx @@ -57,10 +57,15 @@ You can change the checked background color of the switch by passing the `color`\n| `color` | `string` | | The background color of the switch when checked. |\n| `name` | `string` | | The input name of the switch when used in a form. |\n| `value` | `string`, `boolean` | | The value of the switch. |\n-| `children` | `Vue.VNode` | | The children of the switch. |\n| `aria-label` | `string` | | The aria-label of the switch for accessibility. |\n| `aria-labelledby` | `string` | | The aria-labelledby of the switch for accessibility. |\n| `isChecked` | `boolean` | | If `true`, set the switch to the checked state. |\n| `defaultIsChecked` | `boolean` | | If `true`, the checkbox will be initially checked. |\n| `isDisabled` | `boolean` | | If `true`, set the disabled to the invalid state. |\n| `isInvalid` | `boolean` | | If `true`, set the switch to the invalid state. |\n+\n+## Slots\n+\n+| Name | Description |\n+| ------- | ---------------------------------------- |\n+| default | The children of the `CSwitch` component. |\n",
        "date": "02.05.2020 21:52:30",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "sim_msg": "feat(yoga): update switch shadow colors",
        "sim_diff": "diff --git a/packages/yoga/src/Checkbox/CheckboxSwitch.theme.js b/packages/yoga/src/Checkbox/CheckboxSwitch.theme.js @@ -42,7 +42,7 @@ const CheckboxSwitch = ({\n},\nfocus: {\nchecked: {\n- backgroundColor: hexToRgb(colors.text.secondary, 0.5),\n+ backgroundColor: hexToRgb(colors.primary, 0.5),\n},\ndisabled: {\nbackgroundColor: hexToRgb(colors.elements.backgroundAndDisabled, 0.5),\n@@ -50,7 +50,7 @@ const CheckboxSwitch = ({\n},\nhover: {\nchecked: {\n- backgroundColor: hexToRgb(colors.text.secondary, 0.25),\n+ backgroundColor: hexToRgb(colors.primary, 0.25),\n},\ndisabled: {\nbackgroundColor: hexToRgb(colors.elements.backgroundAndDisabled, 0.25),\n@@ -58,7 +58,7 @@ const CheckboxSwitch = ({\n},\npressed: {\nchecked: {\n- backgroundColor: hexToRgb(colors.text.secondary, 0.75),\n+ backgroundColor: hexToRgb(colors.primary, 0.75),\n},\ndisabled: {\nbackgroundColor: hexToRgb(colors.elements.lineAndBorders, 0.75),\n",
        "chatgpt_rag": "docs(switch): add documentation for slots in CSwitch component"
    },
    {
        "msg": "fix(menu): update MenuOption defaultValue prop to inner value",
        "diff": "diff --git a/packages/chakra-ui-core/src/CMenu/CMenuOption.js b/packages/chakra-ui-core/src/CMenu/CMenuOption.js @@ -176,11 +176,11 @@ const CMenuOptionGroup = {\ntype: [String, Number],\ndefault: null\n},\n- defaultValue: [String, Number]\n+ defaultValue: [String, Number, Array]\n},\ndata () {\nreturn {\n- innerValue: []\n+ innerValue: this.defaultValue || []\n}\n},\ncomputed: {\n",
        "date": "20.07.2021 01:44:19",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "sim_msg": "fix(QSelect): throws error when using a function for option-value and initial model is null",
        "sim_diff": "diff --git a/ui/src/components/select/QSelect.js b/ui/src/components/select/QSelect.js @@ -511,7 +511,10 @@ export default createComponent({\ntargetRef.value !== null && targetRef.value.focus()\n- if (isDeepEqual(getOptionValue.value(innerValue.value[ 0 ]), optValue) !== true) {\n+ if (\n+ innerValue.value.length === 0\n+ || isDeepEqual(getOptionValue.value(innerValue.value[ 0 ]), optValue) !== true\n+ ) {\nemit('update:modelValue', props.emitValue === true ? optValue : opt)\n}\nreturn\n",
        "chatgpt_rag": "feat(CMenu): update CMenuOption to support defaultValue as an array for innerValue initialization"
    },
    {
        "msg": "fix(razzle): fix wds served from message",
        "diff": "diff --git a/packages/razzle/config/createConfigAsync.js b/packages/razzle/config/createConfigAsync.js @@ -776,6 +776,7 @@ module.exports = (\ndisableDotRule: true,\n},\nhost: dotenv.raw.HOST,\n+ publicPath: clientPublicPath,\nhot: true,\nnoInfo: true,\noverlay: false,\n@@ -890,7 +891,6 @@ module.exports = (\nif (IS_DEV) {\nconfig.devServer.contentBase = paths.appPublic;\nconfig.devServer.watchContentBase = true;\n- config.devServer.publicPath = '/';\n}\nconfig.plugins = [\n",
        "date": "08.01.2021 16:05:12",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "refactor(build): change order of applied config objects",
        "sim_diff": "diff --git a/packages/build/server.js b/packages/build/server.js @@ -19,7 +19,7 @@ function runDevelop (options, callback) {\nvar watchOptions = config.devServer.watchOptions || config.watchOptions;\nvar app = new WebpackServer(\nwebpack(config),\n- Object.assign({}, config.devServer, {\n+ Object.assign({}, {\nafter: function (app) {\napp.use(server.rewritePath);\nserver.bootstrap(app, hopsConfig);\n@@ -30,7 +30,7 @@ function runDevelop (options, callback) {\nserver.teardown(app, hopsConfig);\n},\nwatchOptions: watchOptions\n- })\n+ }, config.devServer)\n);\nserver.run(app, callback);\n}\n",
        "chatgpt_rag": "feat(razzle): add publicPath configuration option for client assets"
    },
    {
        "msg": "fix(razzle): fix optimizaton cofig in dev buil",
        "diff": "diff --git a/packages/razzle/config/createConfigAsync.js b/packages/razzle/config/createConfigAsync.js @@ -931,6 +931,9 @@ module.exports = (\n}),\n].filter(x => x);\n+ // make sure the key exists\n+ config.optimization = {};\n+\nif (!IS_DEV_ENV) {\nconfig.optimization = {\nsplitChunks: webpackOptions.splitChunksConfig,\n",
        "date": "21.08.2021 20:03:15",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "build(apps.public-cloud): remove resolve.symlinks from webpack config",
        "sim_diff": "diff --git a/packages/manager/apps/public-cloud/webpack.config.js b/packages/manager/apps/public-cloud/webpack.config.js @@ -22,7 +22,6 @@ module.exports = (env = {}) => {\npath.resolve(__dirname, '../../../node_modules'),\n],\nmainFields: ['module', 'browser', 'main'],\n- symlinks: false,\n},\noptimization: {\nsplitChunks: {\n",
        "chatgpt_rag": "build(razzle): add optimization key to webpack config"
    },
    {
        "msg": "fix: fixed an issue where we tried to resolve null as path",
        "diff": "diff --git a/lib/monitor/watch.js b/lib/monitor/watch.js @@ -142,6 +142,7 @@ function filterAndRestart(files) {\n// if there's no matches, then test to see if the changed file is the\n// running script, if so, let's allow a restart\n+ if (config.options.execOptions.script) {\nconst script = path.resolve(config.options.execOptions.script);\nif (matched.result.length === 0 && script) {\nconst length = script.length;\n@@ -155,6 +156,7 @@ function filterAndRestart(files) {\n}\n})\n}\n+ }\nutils.log.detail('changes after filters (before/after): ' +\n[files.length, matched.result.length].join('/'));\n",
        "date": "15.12.2017 14:31:17",
        "repo": "remy/nodemon",
        "type": "fix",
        "sim_msg": "refactor: use setTimeout instead of socket.setTimeout",
        "sim_diff": "diff --git a/lib/inspectors/res.js b/lib/inspectors/res.js @@ -283,6 +283,7 @@ module.exports = function(req, res, next) {\nvar retryXHost = 0;\nvar resetCount = 0;\nvar retry = function(err) {\n+ clearTimeout(timer);\nif (retryCount >= maxRetryCount) {\nvar code = err && err.code;\nif (resetCount > 1 || code !== 'ECONNRESET' || req.method !== 'GET') {\n@@ -341,7 +342,6 @@ module.exports = function(req, res, next) {\n};\nvar send = function() {\ntry {\n- clearTimeout(timer);\nif (req.setServerPort) {\nreq.setServerPort(options.port || (isHttps ? 443 : 80));\n}\n@@ -349,9 +349,9 @@ module.exports = function(req, res, next) {\nclient.on('error', retry);\nclient.once('socket', function(socket) {\nif (socket.connecting || socket._connecting) {\n- socket.setTimeout(12000, retry);\n+ timer = setTimeout(retry, 12000);\nsocket.once((proxyUrl || !isHttps) ? 'connect' : 'secureConnect', function() {\n- socket.setTimeout(0);\n+ clearTimeout(timer);\nretryCount = maxRetryCount;\nreq.pipe(client);\n});\n@@ -399,7 +399,6 @@ module.exports = function(req, res, next) {\nif (responsed) {\nreturn;\n}\n- clearTimeout(timer);\nresponsed = true;\nif (_res.realUrl) {\nreq.realUrl = res.realUrl = _res.realUrl;\n",
        "chatgpt_rag": "refactor: add conditional check for config options in filterAndRestart function"
    },
    {
        "msg": "fix(razzle-dev-utils): add missing dep",
        "diff": "diff --git a/packages/razzle-dev-utils/package.json b/packages/razzle-dev-utils/package.json \"dependencies\": {\n\"@babel/code-frame\": \"^7.8.3\",\n\"chalk\": \"3.0.0\",\n+ \"jest-message-util\": \"26.3.0\",\n\"react-dev-utils\": \"10.2.0\",\n\"react-error-overlay\": \"^6.0.7\",\n\"resolve\": \"1.17.0\",\n",
        "date": "19.09.2020 15:23:09",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "chore(deps): update chalk to v4.17.10\nUpdate Chalk to incorporate numerous upstream improvements.\nSee",
        "sim_diff": "diff --git a/package.json b/package.json \"babel-preset-stage-0\": \"^6.24.1\",\n\"babel-register\": \"^6.26.0\",\n\"browserslist\": \"^2.11.0\",\n- \"chalk\": \"^2.0.1\",\n+ \"chalk\": \"^2.4.1\",\n\"concurrently\": \"^3.5.1\",\n\"cross-env\": \"^5.2.0\",\n\"cross-spawn\": \"^6.0.5\",\n",
        "chatgpt_rag": "chore(deps): update jest-message-util to v26.3.0\nUpdate Jest Message Util to the latest version for improved functionality.\nSee"
    },
    {
        "msg": "fix: get rid of viewbox warning",
        "diff": "diff --git a/src/features/visualization/d3-viz.js b/src/features/visualization/d3-viz.js @@ -74,7 +74,6 @@ function d3Viz(rootNode) {\nconst svg = transformRoot.append(\"svg\")\n.style(\"overflow\", \"visible\")\n.attr(\"class\", \"nodeRoot\")\n- .attr('viewBox', \"0 0 100% 100%\");\nconst tooltip = root.append(\"div\").classed(\"viz-tooltip\", true);\nconst legend = root.append(\"div\").classed(\"viz-legend\", true);\n",
        "date": "09.05.2019 13:28:52",
        "repo": "iqtlabs/crviz",
        "type": "fix",
        "sim_msg": "feat(plugin-grainline): Added support for custom text",
        "sim_diff": "diff --git a/packages/plugin-grainline/src/index.js b/packages/plugin-grainline/src/index.js import markers from './markers'\nimport { version, name } from '../package.json'\n+const dflts = {\n+ text: 'grainline'\n+}\n+\nexport default {\nname: name,\nversion: version,\n@@ -13,13 +17,17 @@ export default {\n},\n},\nmacros: {\n- grainline: function (so) {\n+ grainline: function (so={}) {\nif (so === false) {\ndelete this.points.grainlineFrom\ndelete this.points.grainlineTo\ndelete this.paths.grainline\nreturn true\n}\n+ so = {\n+ ...dflts,\n+ ...so\n+ }\nlet points = this.points\npoints.grainlineFrom = so.from.shiftFractionTowards(so.to, 0.05)\npoints.grainlineTo = so.to.shiftFractionTowards(so.from, 0.05)\n@@ -29,7 +37,7 @@ export default {\n.attr('class', 'note')\n.attr('marker-start', 'url(#grainlineFrom)')\n.attr('marker-end', 'url(#grainlineTo)')\n- .attr('data-text', 'grainline')\n+ .attr('data-text', so.text)\n.attr('data-text-class', 'center fill-note')\n},\n},\n",
        "chatgpt_rag": "style(visualization): Removed unnecessary viewBox attribute"
    },
    {
        "msg": "fix(stack): filter empty slots",
        "diff": "diff --git a/packages/kiwi-core/src/Stack/index.js b/packages/kiwi-core/src/Stack/index.js @@ -53,7 +53,7 @@ const Stack = {\n_direction = 'column'\n}\n- const children = this.$slots.default\n+ const children = this.$slots.default.filter(e => e.tag)\nconst stackables = children.map((node, index) => {\nlet isLastChild = children.length === index + 1\nlet spacingProps = _isInline\n",
        "date": "19.02.2020 22:50:31",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "sim_msg": "chore: spacings inline to render span instead of div",
        "sim_diff": "diff --git a/src/components/spacings/inline/inline.js b/src/components/spacings/inline/inline.js @@ -4,9 +4,9 @@ import filterDataAttributes from '../../../utils/filter-data-attributes';\nimport getStyles from './inline.styles';\nconst Inline = props => (\n- <div css={getStyles(props)} {...filterDataAttributes(props)}>\n+ <span css={getStyles(props)} {...filterDataAttributes(props)}>\n{props.children}\n- </div>\n+ </span>\n);\nInline.displayName = 'Inline';\n",
        "chatgpt_rag": "refactor: filter out non-element nodes in Stack component children"
    },
    {
        "msg": "fix: Ensures config file has been merged before deciding output directory",
        "diff": "diff --git a/packages/wmr/src/lib/normalize-options.js b/packages/wmr/src/lib/normalize-options.js @@ -49,12 +49,6 @@ export async function normalizeOptions(options, mode, configWatchFiles = []) {\n// Files in the output directory are served if no middleware overrides them:\noptions.overlayDir = options.out;\n- // Ensure the output directory exists so that writeFile() doesn't have to create it:\n- // Note: awaiting the promise later lets it run in parallel with the CWD check below.\n- const ensureOutDirPromise = fs.mkdir(options.out, { recursive: true }).catch(err => {\n- console.warn(`Warning: Failed to create output directory: ${err.message}`);\n- });\n-\noptions.public = options.public || 'public';\noptions.publicPath = options.publicPath || '/';\n@@ -81,7 +75,6 @@ export async function normalizeOptions(options, mode, configWatchFiles = []) {\n}\nlet prevPublicFolder = options.public;\n- await ensureOutDirPromise;\nconst pkgFile = resolve(options.cwd, 'package.json');\nlet pkg;\n@@ -192,6 +185,11 @@ export async function normalizeOptions(options, mode, configWatchFiles = []) {\n}\n}\n+ // Ensure the output directory exists so that writeFile() doesn't have to create it\n+ await fs.mkdir(options.out, { recursive: true }).catch(err => {\n+ console.warn(`Warning: Failed to create output directory: ${err.message}`);\n+ });\n+\nif (options.aliases && Object.keys(options.aliases).length > 0) {\ndeprecated(\n'Found \"aliases\" property in WMR\\'s configuration. It will be removed in a future version of WMR. Please switch to \"alias\" instead.'\n",
        "date": "23.01.2022 21:34:12",
        "repo": "preactjs/wmr",
        "type": "fix",
        "sim_msg": "feat: avoid unnecessary routes generation",
        "sim_diff": "diff --git a/scripts/generate-pkgs-endpoints.js b/scripts/generate-pkgs-endpoints.js @@ -17,19 +17,39 @@ export default () => new Promise(async (resolve, reject) => {\nconst supportedMethods = ['DELETE', 'GET', 'HEAD', 'PATCH', 'POST', 'PUT', 'OPTIONS']\nconst packagesDir = 'packages'\nconst outputFile = '/core/pkgs-endpoints.json'\n+ const outputFilePath = path.join(__dirname, `..${outputFile}`)\nconst lang = langs[process.env.LEON_LANG].short.toLowerCase().substr(0, 2)\ntry {\n- // TODO: check packages folder mtime first\n- log.info('Parsing packages configuration...')\n-\nconst packages = fs.readdirSync(packagesDir)\n.filter((entity) => fs.statSync(path.join(packagesDir, entity)).isDirectory())\nconst finalObj = {\nendpoints: []\n}\n+ let isFileNeedToBeGenerated = true\nlet pkgObj = { }\n+ if (fs.existsSync(outputFilePath)) {\n+ const mtimeEndpoints = fs.statSync(outputFilePath).mtime.getTime()\n+ for (let i = 0; i < packages.length; i += 1) {\n+ const pkg = packages[i]\n+\n+ const fileInfo = fs.statSync(`${packagesDir}/${pkg}/data/expressions/${lang}.json`)\n+ const mtime = fileInfo.mtime.getTime()\n+\n+ if (mtime > mtimeEndpoints) {\n+ break\n+ }\n+\n+ if ((i + 1) === packages.length) {\n+ isFileNeedToBeGenerated = false\n+ }\n+ }\n+ }\n+\n+ if (isFileNeedToBeGenerated) {\n+ log.info('Parsing packages configuration...')\n+\nfor (let i = 0; i < packages.length; i += 1) {\nconst pkg = packages[i]\n@@ -74,12 +94,13 @@ export default () => new Promise(async (resolve, reject) => {\nlog.info(`Writing ${outputFile} file...`)\ntry {\n- fs.writeFileSync(path.join(__dirname, `..${outputFile}`), JSON.stringify(finalObj, null, 2))\n+ fs.writeFileSync(outputFilePath, JSON.stringify(finalObj, null, 2))\nlog.success(`${outputFile} file generated`)\nresolve()\n} catch (e) {\nreject(`Failed to generate ${outputFile} file: ${e.message}`)\n}\n+ }\n} catch (e) {\nlog.error(e.message)\nreject(e)\n",
        "chatgpt_rag": "fix: ensure output directory exists before writing files"
    },
    {
        "msg": "fix: windows 8 doesn't support windows-kill\nFixes",
        "diff": "diff --git a/lib/monitor/run.js b/lib/monitor/run.js @@ -16,6 +16,7 @@ var restart = null;\nvar psTree = require('pstree.remy');\nvar path = require('path');\nvar signals = require('./signals');\n+const osRelease = require('os').release();\nfunction run(options) {\nvar cmd = config.command.raw;\n@@ -312,11 +313,18 @@ function kill(child, signal, callback) {\n}\nif (utils.isWindows) {\n+ const taskKill = () => {\n+ try {\n+ exec('taskkill /pid ' + child.pid + ' /T /F');\n+ } catch (e) {\n+ utils.log.error(\"Could not shutdown sub process cleanly\");\n+ }\n+ }\n// We are handling a 'SIGKILL' POSIX signal under Windows the\n// same way it is handled on a UNIX system: We are performing\n// a hard shutdown without waiting for the process to clean-up.\n- if (signal === 'SIGKILL') {\n+ if (signal === 'SIGKILL' || osRelease < 10) {\ndebug('terminating process group by force: %s', child.pid);\n@@ -324,7 +332,7 @@ function kill(child, signal, callback) {\n// process group ('/t') of the child ('/pid') by force ('/f').\n// We need to end all sub processes, because the 'child'\n// process in this context is actually a cmd.exe wrapper.\n- exec(`taskkill /f /t /pid ${child.pid}`);\n+ taskKill();\ncallback();\nreturn;\n}\n@@ -357,9 +365,13 @@ function kill(child, signal, callback) {\n// Therefore we are using 'start' to create a new cmd.exe context.\n// The '/min' option hides the new terminal window and the '/wait'\n// option lets the process wait for the command to finish.\n+ try {\nexecSync(\n`start \"windows-kill\" /min /wait \"${windowsKill}\" -SIGINT ${processId}`\n);\n+ } catch (e) {\n+ taskKill();\n+ }\ncallback();\n} else {\n",
        "date": "08.07.2021 08:42:39",
        "repo": "remy/nodemon",
        "type": "fix",
        "sim_msg": "test(agoric-cli): don't attach stdout (prevents exiting on timeout)",
        "sim_diff": "diff --git a/packages/agoric-cli/integration-tests/test-workflow.js b/packages/agoric-cli/integration-tests/test-workflow.js @@ -34,28 +34,14 @@ test('workflow', async t => {\n// Kill an entire process group.\nconst pkill = (cp, signal = 'SIGINT') => process.kill(-cp.pid, signal);\n- function pspawnStdout(...args) {\n- let output = '';\n- const ps = pspawn(...args);\n- ps.childProcess.stdout.on('data', chunk => {\n- output += chunk.toString('utf-8');\n- });\n- ps.then(ret => {\n- if (ret !== 0) {\n- process.stdout.write(output);\n- }\n- });\n- return ps;\n- }\n-\n// Run all main programs with the '--sdk' flag if we are in agoric-sdk.\nconst extraArgs = fs.existsSync(`${__dirname}/../../cosmic-swingset`)\n? ['--sdk']\n: [];\nfunction myMain(args) {\n// console.error('running agoric-cli', ...extraArgs, ...args);\n- return pspawnStdout(`agoric`, [...extraArgs, ...args], {\n- stdio: ['ignore', 'pipe', 'inherit'],\n+ return pspawn(`agoric`, [...extraArgs, ...args], {\n+ stdio: ['ignore', 'inherit', 'inherit'],\nenv: { ...process.env, DEBUG: 'agoric' },\ndetached: true,\n});\n@@ -85,6 +71,7 @@ test('workflow', async t => {\ntry {\nprocess.on('SIGINT', runFinalizers);\n+ process.on('exit', runFinalizers);\nprocess.chdir(name);\n// ==============\n",
        "chatgpt_rag": "fix(monitor): handle taskkill on older Windows versions"
    },
    {
        "msg": "fix(environment): Fix content security policy",
        "diff": "diff --git a/config/environment.js b/config/environment.js @@ -59,7 +59,7 @@ module.exports = function(environment) {\nENV.contentSecurityPolicy = {\n\"default-src\": \"'self' *.fastly.net\",\n- \"connect-src\": \"'self' https://s3.amazonaws.com *.algolia.net *.fastly.net\",\n+ \"connect-src\": \"'self' https://s3.amazonaws.com *.algolia.net *.algolianet.com *.fastly.net\",\n\"script-src\": \"'self' unsafe-inline use.typekit.net 'sha256-36n/xkZHEzq3lo4O+0jXMYbl+dWu3C8orOFHtcAH6HU=' *.fastly.net https://www.google-analytics.com\",\n\"font-src\": \"'self' data://* https://fonts.gstatic.com *.fastly.net\",\n\"img-src\": \"'self' data://* *.fastly.net https://www.google-analytics.com\",\n",
        "date": "05.04.2017 21:11:06",
        "repo": "ember-learn/ember-api-docs",
        "type": "fix",
        "sim_msg": "style(sidebar): update sidebar link style",
        "sim_diff": "diff --git a/styleguide.config.js b/styleguide.config.js @@ -128,6 +128,7 @@ module.exports = {\nbackgroundRepeat: \"no-repeat\",\nheight: 110,\nbackgroundPosition: \"25% 50%\",\n+ backgroundSize: 235,\n}\n},\nEditorLoader: {\n@@ -142,13 +143,21 @@ module.exports = {\nitem: {\ncolor: \"#062a4e\",\n\"& > a\": {\n+ display: \"inline\",\nfontWeight: \"bold !important\",\n- textDecoration: \"none !important\"\n+ textDecoration: \"none !important\",\n}\n},\nisChild: {\n\"& > a\": {\nfontWeight: \"normal !important\",\n+ },\n+ \"& > a:hover\": {\n+ cursor: \"pointer\",\n+ backgroundImage: \"linear-gradient(#f7fdff 50%, #a7edff 50%) !important\",\n+ backgroundRepeat: \"repeat-x !important\",\n+ backgroundSize: \"8px 2px !important\",\n+ backgroundPositionY: \"1em !important\"\n}\n}\n},\n",
        "chatgpt_rag": "style(security): update content security policy for connect sources in environment config"
    },
    {
        "msg": "fix: revert stdin handling\nFixes\nFixes\nRef\nMeans that ctrl^l does not instantly clear the terminal. It requires a\nnew line directly after.",
        "diff": "diff --git a/lib/nodemon.js b/lib/nodemon.js @@ -95,48 +95,43 @@ function nodemon(settings) {\nutils.log.detail('reading config ' + file);\n});\n- // echo out notices about running state\n- if (config.options.stdin) {\n+ if (config.options.stdin && config.options.restartable) {\n+ // allow nodemon to restart when the use types 'rs\\n'\n+ process.stdin.resume();\n+ process.stdin.setEncoding('utf8');\n+ process.stdin.on('data', data => {\n+ const str = data.toString().trim().toLowerCase();\n+\n+ // if the keys entered match the restartable value, then restart!\n+ if (str === config.options.restartable) {\n+ bus.emit('restart');\n+ } else if (data.charCodeAt(0) === 12) { // ctrl+l\n+ console.clear();\n+ }\n+ });\n+ } else if (config.options.stdin) {\n// so let's make sure we don't eat the key presses\n// but also, since we're wrapping, watch out for\n// special keys, like ctrl+c x 2 or '.exit' or ctrl+d or ctrl+l\nvar ctrlC = false;\nvar buffer = '';\n- const rs = config.options.restartable;\n- process.stdin.setEncoding('utf8');\nprocess.stdin.on('data', function (data) {\ndata = data.toString();\nbuffer += data;\nconst chr = data.charCodeAt(0);\n// if restartable, echo back\n- if (rs) {\n- if (chr === 13) {\n- process.stdout.write('\\n');\n- }\n- // this intentionally prevents cursor keys from working.\n- process.stdout.write(String.fromCharCode(chr));\n- }\n-\nif (chr === 3) {\nif (ctrlC) {\nprocess.exit(0);\n}\n- // if restartable, assume ctrl+c will break immediately\n- if (rs) {\n- bus.emit('quit', 130);\n- }\nctrlC = true;\nreturn;\n- } else if (!rs && (buffer === '.exit' || chr === 4)) { // ctrl+d\n+ } else if (buffer === '.exit' || chr === 4) { // ctrl+d\nprocess.exit();\n} else if (chr === 13 || chr === 10) { // enter / carriage return\n- const input = buffer.toString().trim().toLowerCase();\n- if (input === rs) {\n- bus.emit('restart');\n- }\nbuffer = '';\n} else if (chr === 12) { // ctrl+l\nconsole.clear();\n@@ -144,7 +139,6 @@ function nodemon(settings) {\n}\nctrlC = false;\n});\n- process.stdin.resume();\nif (process.stdin.setRawMode) {\nprocess.stdin.setRawMode(true);\n}\n",
        "date": "13.07.2018 12:36:29",
        "repo": "remy/nodemon",
        "type": "fix",
        "sim_msg": "perf: detail error message",
        "sim_diff": "diff --git a/packages/experiment/src/index.ts b/packages/experiment/src/index.ts @@ -22,7 +22,8 @@ export function createScriptRegistry<T extends ScriptConfigs>(\nconst newScript = (key: keyof T, args: string | Reader) => {\nconst config = map.get(key);\n- if (config === undefined) throw new Error(\"config doesn't exist\");\n+ if (config === undefined)\n+ throw new Error(`${key} doesn't exist in ScriptRegistry`);\nif (typeof args === \"string\") {\nreturn {\ncode_hash: config.CODE_HASH,\n@@ -40,7 +41,8 @@ export function createScriptRegistry<T extends ScriptConfigs>(\nconst isScriptOf = (key: keyof T, script: Script) => {\nconst config = map.get(key);\n- if (config === undefined) throw new Error(\"config doesn't exist\");\n+ if (config === undefined)\n+ throw new Error(`${key} doesn't exist in ScriptRegistry`);\nreturn (\nscript.code_hash === config.CODE_HASH &&\nscript.hash_type === config.HASH_TYPE\n@@ -49,7 +51,8 @@ export function createScriptRegistry<T extends ScriptConfigs>(\nconst newCellDep = (key: keyof T) => {\nconst config = map.get(key);\n- if (config === undefined) throw new Error(\"config doesn't exist\");\n+ if (config === undefined)\n+ throw new Error(`${key} doesn't exist in ScriptRegistry`);\nreturn {\nout_point: {\ntx_hash: config.TX_HASH,\n",
        "chatgpt_rag": "refactor: improve handling of stdin and restartable options in nodemon configuration"
    },
    {
        "msg": "fix(Button): fix animated prop type definition",
        "diff": "diff --git a/src/elements/Button/Button.d.ts b/src/elements/Button/Button.d.ts @@ -22,7 +22,7 @@ export interface ButtonProps {\nactive?: boolean;\n/** A button can animate to show hidden content. */\n- animated?: 'fade' | 'vertical';\n+ animated?: boolean | 'fade' | 'vertical';\n/** A button can be attached to the top or bottom of other content. */\nattached?: 'left' | 'right' | 'top' | 'bottom';\n",
        "date": "21.07.2017 21:41:00",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "sim_msg": "docs: increase button padding",
        "sim_diff": "diff --git a/website/src/components/Framework.js b/website/src/components/Framework.js @@ -122,7 +122,7 @@ export const Button = styled.button`\nwill-change: opacity;\nfont-size: 16px;\nfont-weight: 600;\n- padding: 8px 16px;\n+ padding: 10px 16px;\nborder-radius: 4px;\ntransition: background 0.2s, color 0.1s;\n",
        "chatgpt_rag": "docs: update ButtonProps interface to allow boolean value for animated prop"
    },
    {
        "msg": "fix: docs deps",
        "diff": "diff --git a/packages/chakra-ui-docs/package.json b/packages/chakra-ui-docs/package.json \"dev\": \"nuxt\",\n\"build\": \"nuxt generate\",\n\"start\": \"nuxt start\",\n- \"docs:build\": \"nuxt build\",\n+ \"docs:build\": \"nuxt \",\n\"lint\": \"eslint --ext .js,.vue --ignore-path .gitignore .\"\n},\n\"lint-staged\": {\n\"@chakra-ui/vue\": \"^0.3.10\",\n\"@chakra-ui/theme-vue\": \"^0.2.3\",\n\"@fortawesome/free-brands-svg-icons\": \"^5.12.0\",\n- \"@fortawesome/free-solid-svg-icons\": \"^5.11.gi2\",\n+ \"@fortawesome/free-solid-svg-icons\": \"^5.11.2\",\n\"@mdx-js/vue-loader\": \"^1.5.7\",\n\"@nuxtjs/dotenv\": \"^1.4.0\",\n\"@nuxtjs/emotion\": \"^0.0.1\",\n",
        "date": "12.04.2020 19:09:37",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "sim_msg": "feat(nuxt): add bvCSS option. resolves",
        "sim_diff": "diff --git a/nuxt/index.js b/nuxt/index.js @@ -19,15 +19,17 @@ module.exports = function nuxtBootstrapVue (moduleOptions) {\nthis.options.css.unshift('bootstrap/dist/css/bootstrap.css')\n}\n+ // Add library styles\n+ if (moduleOptions.bvCSS !== false) {\n+ this.options.css.push('bootstrap-vue/dist/bootstrap-vue.css')\n+ }\n+\n// Register plugin\nthis.addPlugin({\nsrc: resolve(__dirname, 'plugin.js'),\nfileName: 'bootstrap-vue.js',\nmoduleOptions\n})\n-\n- // Add library styles\n- this.options.css.push('bootstrap-vue/dist/bootstrap-vue.css')\n}\nmodule.exports.meta = require('../package.json')\n",
        "chatgpt_rag": "fix(docs): update docs:build script in package.json to correct command. Fix typo in dependency version."
    },
    {
        "msg": "fix(create-razzle-app): allow examples with workspaces",
        "diff": "diff --git a/packages/create-razzle-app/lib/utils/install.js b/packages/create-razzle-app/lib/utils/install.js @@ -56,7 +56,7 @@ function getInstallArgs(cmd, packages, opts) {\nconst args = ['install', '--save', '--save-exact'];\nreturn args.concat(packages, ['--verbose']);\n} else if (cmd.cmd === 'yarn') {\n- const args = ['add'];\n+ const args = ['add', '-W'];\nreturn args.concat(packages,\nparseInt(cmd.version[0]) !== 2 ? ['--ignore-engines'] : []);\n}\n",
        "date": "11.03.2021 23:47:40",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "feat(url): build url based on location when possible",
        "sim_diff": "diff --git a/packages/manager/modules/ufrontend/url-builder.js b/packages/manager/modules/ufrontend/url-builder.js @@ -6,13 +6,22 @@ const buildQueryString = (data) =>\n.join('&');\nexport const buildURL = (application, url, query) => {\n+ let applicationURL = Environment.getApplicationURL(application);\n+ const currentApplicationURL = Environment.getApplicationURL(\n+ Environment.getApplicationName(),\n+ );\n+\n+ if (applicationURL === currentApplicationURL) {\n+ applicationURL = `${window.location.origin}${window.location.pathname}`;\n+ }\n+\nlet queryString = query ? buildQueryString(query) : '';\nif (queryString) {\nqueryString = url.includes('?') ? `&${queryString}` : `?${queryString}`;\n}\n- return `${Environment.getApplicationURL(application)}${url}${queryString}`;\n+ return `${applicationURL}${url}${queryString}`;\n};\nexport const buildURLs = (routes) => {\n",
        "chatgpt_rag": "fix(install): add -W flag for yarn command in getInstallArgs function"
    },
    {
        "msg": "fix: allow getting string only loaders",
        "diff": "diff --git a/packages/razzle-dev-utils/makeLoaderFinder.js b/packages/razzle-dev-utils/makeLoaderFinder.js @@ -6,7 +6,7 @@ const makeLoaderFinder = loaderName => rule => {\n// Checks if there's a loader string in rule.loader matching loaderRegex.\nconst inLoaderString =\n- typeof rule.loader === 'string' && rule.loader.match(loaderRegex);\n+ typeof rule.loader === 'string' && (rule.loader.match(loaderRegex) || rule.loader === loaderName);\n// Checks if there is an object inside rule.use with loader matching loaderRegex, OR\n// Checks another condition, if rule is not an object, but pure string (ex: \"style-loader\", etc)\n@@ -15,8 +15,8 @@ const makeLoaderFinder = loaderName => rule => {\nrule.use.find(\nloader =>\n(typeof loader.loader === 'string' &&\n- loader.loader.match(loaderRegex)) ||\n- (typeof loader === 'string' && loader.match(loaderRegex))\n+ (loader.loader.match(loaderRegex)) || rule.loader === loaderName) ||\n+ (typeof loader === 'string' && (loader.match(loaderRegex) || loader === loaderName))\n);\nreturn inUseArray || inLoaderString;\n",
        "date": "17.09.2020 21:03:36",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "chore(readonlyvalue): update storybook knobs",
        "sim_diff": "diff --git a/packages/react/src/components/ReadOnlyValue/ReadOnlyValue.story.jsx b/packages/react/src/components/ReadOnlyValue/ReadOnlyValue.story.jsx @@ -16,9 +16,29 @@ export default {\n},\n};\n+const loadingKnobsLabel = () => ({\n+ heading: boolean('If content is heading', false, 'Loading (label)'),\n+ paragraph: boolean('If content is paragraph', true, 'Loading (label)'),\n+ lineCount: text('Line count', 1, 'Loading (label)'),\n+ width: text('Width of the loader', '100%', 'Loading (label)'),\n+});\n+\n+const loadingKnobsValue = () => ({\n+ heading: boolean('If content is heading', false, 'Loading (value)'),\n+ paragraph: boolean('If content is paragraph', true, 'Loading (value)'),\n+ lineCount: text('Line count', 1, 'Loading (value)'),\n+ width: text('Width of the loader', '100%', 'Loading (value)'),\n+});\n+\nexport const Basic = () => (\n<div style={{ width: '100%', heigh: 'calc(100vh - 100px)' }}>\n- <ReadOnlyValue label=\"Label\" value=\"input value\" />\n+ <ReadOnlyValue\n+ label=\"Label\"\n+ value=\"input value\"\n+ isLoading={boolean('Loading state (isLoading)', false)}\n+ skeletonLoadingLabel={loadingKnobsLabel()}\n+ skeletonLoadingValue={loadingKnobsValue()}\n+ />\n</div>\n);\n@@ -33,24 +53,32 @@ export const MultipleValuesStacked = () => {\nvalue={text('label text', 'input value 01')}\nisLoading={isLoading}\ntype=\"stacked\"\n+ skeletonLoadingLabel={loadingKnobsLabel()}\n+ skeletonLoadingValue={loadingKnobsValue()}\n/>\n<ReadOnlyValue\nlabel={text('label text', 'Label 02')}\nvalue={text('label text', 'input value 02')}\nisLoading={isLoading}\ntype=\"stacked\"\n+ skeletonLoadingLabel={loadingKnobsLabel()}\n+ skeletonLoadingValue={loadingKnobsValue()}\n/>\n<ReadOnlyValue\nlabel={text('label text', 'Label 03')}\nvalue={text('label text', 'input value 03')}\nisLoading={isLoading}\ntype=\"stacked\"\n+ skeletonLoadingLabel={loadingKnobsLabel()}\n+ skeletonLoadingValue={loadingKnobsValue()}\n/>\n<ReadOnlyValue\nlabel={text('label text', 'Label 04')}\nvalue={text('label text', 'input value 04')}\nisLoading={isLoading}\ntype=\"stacked\"\n+ skeletonLoadingLabel={loadingKnobsLabel()}\n+ skeletonLoadingValue={loadingKnobsValue()}\n/>\n</div>\n);\n@@ -90,7 +118,14 @@ export const BasicStackedWithCustomValue = () => (\nBasicStackedWithCustomValue.storyName = 'basic stacked with custom value';\nexport const BasicInline = () => (\n<div style={{ width: '100%', height: 'calc(100vh - 100px)' }}>\n- <ReadOnlyValue label=\"Label\" value=\"input value\" type=\"inline\" />\n+ <ReadOnlyValue\n+ label=\"Label\"\n+ value=\"input value\"\n+ type=\"inline\"\n+ isLoading={boolean('Loading state (isLoading)', false)}\n+ skeletonLoadingLabel={loadingKnobsLabel()}\n+ skeletonLoadingValue={loadingKnobsValue()}\n+ />\n</div>\n);\n@@ -100,10 +135,38 @@ export const MultipleValuesInline = () => {\nconst isLoading = boolean('Loading state (isLoading)', false);\nreturn (\n<div style={{ width: '100%', height: 'calc(100vh - 100px)' }}>\n- <ReadOnlyValue label=\"Label 01\" value=\"input value 01\" type=\"inline\" isLoading={isLoading} />\n- <ReadOnlyValue label=\"Label 02\" value=\"input value 02\" type=\"inline\" isLoading={isLoading} />\n- <ReadOnlyValue label=\"Label 03\" value=\"input value 03\" type=\"inline\" isLoading={isLoading} />\n- <ReadOnlyValue label=\"Label 04\" value=\"input value 04\" type=\"inline\" isLoading={isLoading} />\n+ <ReadOnlyValue\n+ label=\"Label 01\"\n+ value=\"input value 01\"\n+ type=\"inline\"\n+ isLoading={isLoading}\n+ skeletonLoadingLabel={loadingKnobsLabel()}\n+ skeletonLoadingValue={loadingKnobsValue()}\n+ />\n+ <ReadOnlyValue\n+ label=\"Label 02\"\n+ value=\"input value 02\"\n+ type=\"inline\"\n+ isLoading={isLoading}\n+ skeletonLoadingLabel={loadingKnobsLabel()}\n+ skeletonLoadingValue={loadingKnobsValue()}\n+ />\n+ <ReadOnlyValue\n+ label=\"Label 03\"\n+ value=\"input value 03\"\n+ type=\"inline\"\n+ isLoading={isLoading}\n+ skeletonLoadingLabel={loadingKnobsLabel()}\n+ skeletonLoadingValue={loadingKnobsValue()}\n+ />\n+ <ReadOnlyValue\n+ label=\"Label 04\"\n+ value=\"input value 04\"\n+ type=\"inline\"\n+ isLoading={isLoading}\n+ skeletonLoadingLabel={loadingKnobsLabel()}\n+ skeletonLoadingValue={loadingKnobsValue()}\n+ />\n</div>\n);\n};\n",
        "chatgpt_rag": "fix(razzle-dev-utils): update makeLoaderFinder to include loaderName in rule loader and use array"
    },
    {
        "msg": "fix(examples): monorepo example running as expected",
        "diff": "diff --git a/examples/with-monorepo/package.json b/examples/with-monorepo/package.json \"version\": \"4.0.0-canary.16\",\n\"license\": \"MIT\",\n\"scripts\": {\n- \"start-1\": \"RAZZLE_APP_PATH=basic-1 razzle start\",\n- \"build-1\": \"RAZZLE_APP_PATH=basic-1 razzle build\",\n- \"test-1\": \"RAZZLE_APP_PATH=basic-1 razzle test --env=jsdom\",\n- \"start:prod-1\": \"RAZZLE_APP_PATH=basic-1 NODE_ENV=production node basic-1/build/server.js\",\n- \"start-2\": \"RAZZLE_APP_PATH=basic-2 razzle start\",\n- \"build-2\": \"RAZZLE_APP_PATH=basic-2 razzle build\",\n- \"test-2\": \"RAZZLE_APP_PATH=basic-2 razzle test --env=jsdom\",\n- \"start:prod-2\": \"RAZZLE_APP_PATH=basic-2 NODE_ENV=production node basic-2/build/server.js\"\n+ \"start-1\": \"cross-env RAZZLE_APP_PATH=basic-1 razzle start\",\n+ \"build-1\": \"cross-env RAZZLE_APP_PATH=basic-1 razzle build\",\n+ \"test-1\": \"cross-env RAZZLE_APP_PATH=basic-1 razzle test --env=jsdom\",\n+ \"start:prod-1\": \"cross-env RAZZLE_APP_PATH=basic-1 NODE_ENV=production node basic-1/build/server.js\",\n+ \"start-2\": \"cross-env RAZZLE_APP_PATH=basic-2 PORT=3002 razzle start\",\n+ \"build-2\": \"cross-env RAZZLE_APP_PATH=basic-2 PORT=3002 razzle build\",\n+ \"test-2\": \"cross-env RAZZLE_APP_PATH=basic-2 PORT=3002 razzle test --env=jsdom\",\n+ \"start:prod-2\": \"cross-env RAZZLE_APP_PATH=basic-2 PORT=3002 NODE_ENV=production node basic-2/build/server.js\",\n+ \"start\": \"concurrently \\\"yarn start-1\\\" \\\"yarn start-2\\\"\",\n+ \"start:prod\": \"concurrently \\\"yarn start:prod-1\\\" \\\"yarn start:prod-2\\\"\",\n+ \"build\": \"concurrently \\\"yarn build-1\\\" \\\"yarn build-2\\\"\"\n},\n\"workspaces\": [\n\"basic-1\",\n\"basic-2\"\n],\n\"devDependencies\": {\n+ \"concurrently\": \"^5.3.0\",\n+ \"cross-env\": \"^7.0.3\",\n\"razzle\": \"4.0.0-canary.8\",\n\"razzle-dev-utils\": \"4.0.0-canary.8\",\n\"mini-css-extract-plugin\": \"^0.9.0\",\n",
        "date": "11.01.2021 18:04:14",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "test(build-starter): run cd with both absolute and relative paths",
        "sim_diff": "diff --git a/__tests__/build-starter.sh b/__tests__/build-starter.sh @@ -4,20 +4,30 @@ ROOT=${MONOREPO_DIR:-\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" >/dev/null 2>&1 &\nERROR=1\nls \"$ROOT/__tests__\"\n+\nmkdir -p $ROOT/__tests__/packages/ && cp -r $ROOT/@ecomplus $ROOT/__tests__/packages/\necho \"1. Packages copied\"\n-cd $ROOT/__tests__/storefront-starter && \\\n- npm link $ROOT/__tests__/packages/@ecomplus/storefront-template && \\\n+cd $ROOT/__tests__/packages/@ecomplus/storefront-template && \\\n+ npm link && \\\n+ echo \"1.1 Global npm link created\" && \\\n+ cd ../../../storefront-starter && \\\n+ npm link @ecomplus/storefront-template && \\\n+ echo \"1.2 Link installed\" && \\\nnpm run build && \\\nERROR=0\n+cd ../../\n+ls\n+\ncd $ROOT/__tests__/storefront-starter && npm unlink --no-save @ecomplus/storefront-template\n+cd ../..\ncd $ROOT/__tests__/packages/@ecomplus/storefront-template && npm unlink\n+cd ../../../..\ncd $ROOT\nrm -rf $ROOT/__tests__/packages/@ecomplus\n-echo \"2. Clear\"\n+echo \"3. Clear\"\nif [ $ERROR -eq 0 ]\nthen\n",
        "chatgpt_rag": "chore(package.json): update scripts to use cross-env for environment variables"
    },
    {
        "msg": "fix(Popup): Remove hideOnScroll from window scroll",
        "diff": "diff --git a/src/modules/Popup/Popup.js b/src/modules/Popup/Popup.js @@ -306,6 +306,7 @@ export default class Popup extends Component {\nhandlePortalUnmount = (e) => {\ndebug('handlePortalUnmount()')\n+ window.removeEventListener('scroll', this.hideOnScroll)\nconst { onUnmount } = this.props\nif (onUnmount) onUnmount(e, this.props)\n}\n",
        "date": "18.09.2017 03:00:47",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "sim_msg": "fix(popup): fix close button position",
        "sim_diff": "diff --git a/src/renderer/common/popup.jsx b/src/renderer/common/popup.jsx @@ -6,6 +6,9 @@ const styles = theme => ({\nmodal: {\noverflow: 'auto'\n},\n+ closeButton: {\n+ top: '20px'\n+ },\ntitle: {\n// verticalAlign: 'middle',\n// lineHeight: '30px'\n@@ -15,7 +18,7 @@ const styles = theme => ({\nexport const Popup = withStyles(styles)(({ classes, children, closeAction, text, open = true }) => (\n<Modal open={open} className={classes.modal}>\n<ModalWrap>\n- <ModalCloseButton onClick={closeAction}>\n+ <ModalCloseButton onClick={closeAction} className={classes.closeButton}>\n<ModalCloseIcon />\n</ModalCloseButton>\n<ModalHeader>\n",
        "chatgpt_rag": "feat(Popup): add event listener for hiding popup on scroll"
    },
    {
        "msg": "fix: git not found error\nFixes by adding git seperately",
        "diff": "diff --git a/Dockerfile.gh b/Dockerfile.gh FROM node:alpine\nLABEL maintainer=\"rashley-iqt <rashley@iqt.org>\"\n-RUN apk update\n-RUN git config --global user.email \"clewis@iqt.org\"\n-RUN git config --global user.name \"Charlie Lewis\"\n+RUN apk update && apk add git\n+RUN git config --global user.email \"rashley@iqt.org\"\n+RUN git config --global user.name \"rashley-iqt\"\nCOPY . /app\nWORKDIR /app\n",
        "date": "25.06.2018 12:07:35",
        "repo": "iqtlabs/crviz",
        "type": "fix",
        "sim_msg": "feat: bump Dockerfile to node v16",
        "sim_diff": "diff --git a/Dockerfile b/Dockerfile # ---- Base Node ----\n-FROM node:14-alpine AS base\n+FROM node:16-alpine AS base\n# set working directory\nWORKDIR /usr/src/app\n@@ -10,7 +10,7 @@ COPY package*.json ./\n# ---- Dependencies ----\nFROM base AS basedependencies\n## Install build toolchain, install node deps and compile native add-ons\n-RUN apk add --no-cache python make g++ git\n+RUN apk add --no-cache python3 make g++ git\nFROM basedependencies as dependencies\n# install node packages\n",
        "chatgpt_rag": "refactor: update Dockerfile with improved git configuration and package installation"
    },
    {
        "msg": "fix: TokenDestructible typo fron->from",
        "diff": "diff --git a/test/TokenDestructible.test.js b/test/TokenDestructible.test.js @@ -7,7 +7,10 @@ contract('TokenDestructible', function (accounts) {\nlet destructible;\nbeforeEach(async function () {\n- destructible = await TokenDestructible.new({ fron: accounts[0], value: web3.toWei('10', 'ether') });\n+ destructible = await TokenDestructible.new({\n+ from: accounts[0],\n+ value: web3.toWei('10', 'ether'),\n+ });\n});\nit('should send balance to owner after destruction', async function () {\n",
        "date": "31.12.2017 19:06:38",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "fix",
        "sim_msg": "test: convert b58 to hex",
        "sim_diff": "diff --git a/test/lib/transactionBuilder.test.js b/test/lib/transactionBuilder.test.js @@ -1259,7 +1259,7 @@ describe('TronWeb.transactionBuilder', function () {\nconst parameter = txPars(transaction);\n// jlog(parameter)\n- assert.equal(parameter.value.owner_address, accounts.b58[1]);\n+ assert.equal(parameter.value.owner_address, accounts.hex[1]);\nassert.equal(parameter.value.frozen_balance, 500e6);\nassert.equal(parameter.type_url, 'type.googleapis.com/protocol.FreezeBalanceV2Contract');\nassert.equal(transaction.raw_data.contract[0].Permission_id || 0, param[3] ? param[3]['permissionId'] : 0);\n@@ -1313,7 +1313,7 @@ describe('TronWeb.transactionBuilder', function () {\nconst parameter = txPars(transaction);\n// jlog(parameter)\n- assert.equal(parameter.value.owner_address, accounts.b58[1]);\n+ assert.equal(parameter.value.owner_address, accounts.hex[1]);\nassert.equal(parameter.value.unfreeze_balance, 100e6);\nassert.equal(parameter.type_url, 'type.googleapis.com/protocol.UnfreezeBalanceV2Contract');\nassert.equal(transaction.raw_data.contract[0].Permission_id || 0, param[3] ? param[3]['permissionId'] : 0);\n@@ -1367,8 +1367,8 @@ describe('TronWeb.transactionBuilder', function () {\nconst parameter = txPars(transaction);\n// jlog(parameter)\n- assert.equal(parameter.value.owner_address, accounts.b58[1]);\n- assert.equal(parameter.value.receiver_address, accounts.b58[7]);\n+ assert.equal(parameter.value.owner_address, accounts.hex[1]);\n+ assert.equal(parameter.value.receiver_address, accounts.hex[7]);\nassert.equal(parameter.value.balance, 100e6);\nassert.equal(parameter.type_url, 'type.googleapis.com/protocol.DelegateResourceContract');\nassert.equal(transaction.raw_data.contract[0].Permission_id || 0, param[4] ? param[4]['permissionId'] : 0);\n@@ -1433,8 +1433,8 @@ describe('TronWeb.transactionBuilder', function () {\nconst parameter = txPars(transaction);\n// jlog(parameter)\n- assert.equal(parameter.value.owner_address, accounts.b58[1]);\n- assert.equal(parameter.value.receiver_address, accounts.b58[7]);\n+ assert.equal(parameter.value.owner_address, accounts.hex[1]);\n+ assert.equal(parameter.value.receiver_address, accounts.hex[7]);\nassert.equal(parameter.value.balance, 100e6);\nassert.equal(parameter.type_url, 'type.googleapis.com/protocol.UnDelegateResourceContract');\nassert.equal(transaction.raw_data.contract[0].Permission_id || 0, param[4] ? param[4]['permissionId'] : 0);\n@@ -1487,24 +1487,30 @@ describe('TronWeb.transactionBuilder', function () {\n});\ndescribe(\"#withdrawExpireUnfreeze\", async function () {\n- it('should allows accounts[1] to undelegate its resource', async function () {\n+ const idx = 1;\n+\n+ before(async () => {\n+ const transaction2 = await tronWeb.transactionBuilder.freezeBalanceV2(100e6, 'BANDWIDTH', accounts.hex[idx]);\n+ await broadcaster(null, accounts.pks[idx], transaction2);\n+ const transaction = await tronWeb.transactionBuilder.unfreezeBalanceV2(10e6, 'BANDWIDTH', accounts.hex[idx], accounts.hex[idx + 1]);\n+ await broadcaster(null, accounts.pks[idx], transaction);\n+ await wait(65);\n+ })\n+ it('should allows accounts[1] to withdraw its undelegated resource', async function () {\nconst params = [\n[accounts.b58[1], {permissionId: 2}],\n[accounts.b58[1]]\n];\n-\n- setTimeout(async () => {\nfor (let param of params) {\nconst transaction = await tronWeb.transactionBuilder.withdrawExpireUnfreeze(...param)\nawait broadcaster(null, accounts.pks[1], transaction);\nconst parameter = txPars(transaction);\n// jlog(parameter)\n- assert.equal(parameter.value.owner_address, accounts.b58[1]);\n- assert.equal(parameter.type_url, 'type.googleapis.com/protocol.WithdrawExpireUnfreeze');\n+ assert.equal(parameter.value.owner_address, accounts.hex[1]);\n+ assert.equal(parameter.type_url, 'type.googleapis.com/protocol.WithdrawExpireUnfreezeContract');\nassert.equal(transaction.raw_data.contract[0].Permission_id || 0, param[1] ? param[1]['permissionId'] : 0);\n}\n- }, 300000);\n})\nit('should throw if owner address is invalid', async function () {\n",
        "chatgpt_rag": "test: fix typo in TokenDestructible contract creation parameters"
    },
    {
        "msg": "fix(TextArea): fix typings definition",
        "diff": "diff --git a/src/addons/TextArea/TextArea.d.ts b/src/addons/TextArea/TextArea.d.ts @@ -31,7 +31,7 @@ export interface TextAreaOnChangeData extends TextAreaProps {\nvalue?: string;\n}\n-declare class TextArea extends React.Component<TextArea, {}> {\n+declare class TextArea extends React.Component<TextAreaProps, {}> {\nfocus: () => void;\n}\n",
        "date": "28.08.2017 00:54:59",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "sim_msg": "feat(Textarea): add css prop",
        "sim_diff": "diff --git a/components/system/components/Textarea.js b/components/system/components/Textarea.js @@ -45,17 +45,7 @@ const STYLES_TEXTAREA = css`\nexport class Textarea extends React.Component {\nrender() {\n- return (\n- <TextareaAutoSize\n- css={STYLES_TEXTAREA}\n- style={this.props.style}\n- onChange={this.props.onChange}\n- placeholder={this.props.placeholder}\n- name={this.props.name}\n- value={this.props.value}\n- readOnly={this.props.readOnly}\n- maxLength={this.props.maxLength}\n- />\n- );\n+ const { css, ...props } = this.props;\n+ return <TextareaAutoSize css={[STYLES_TEXTAREA, css]} {...props} />;\n}\n}\n",
        "chatgpt_rag": "fix(TextArea): fix type declaration for TextArea component"
    },
    {
        "msg": "fix: Catch for when mkdir errors due to existing file",
        "diff": "diff --git a/packages/create-wmr/src/index.js b/packages/create-wmr/src/index.js @@ -25,7 +25,16 @@ sade('create-wmr [dir]', true)\nprocess.exit(1);\n}\ncwd = resolve(cwd, dir || '.');\n+ try {\nawait fs.mkdir(cwd, { recursive: true });\n+ } catch {\n+ process.stderr.write(\n+ `${red(\n+ `There is already a file with the same name as the directory you specified. Please provide a different directory name`\n+ )}\\n`\n+ );\n+ process.exit(1);\n+ }\nprocess.chdir(cwd);\n}\nconst ctx = {\n",
        "date": "25.02.2021 18:19:03",
        "repo": "preactjs/wmr",
        "type": "fix",
        "sim_msg": "refactor: :recycle: move X-Cluster-ID header to top",
        "sim_diff": "diff --git a/src/app.js b/src/app.js @@ -320,6 +320,8 @@ async function main() {\n});\napp.all(\"/cape/:username\", cors(), async (req, res) => {\n+ res.set(\"X-Cluster-ID\", `${helper.getClusterId()}`);\n+\nconst { username } = req.params;\nif (!/^[0-9a-zA-Z_]{1,16}$/.test(username)) {\n@@ -329,7 +331,6 @@ async function main() {\n}\nconst filename = path.resolve(cachePath, `cape_${username}.png`);\n- res.set(\"X-Cluster-ID\", `${helper.getClusterId()}`);\nlet file;\n",
        "chatgpt_rag": "fix: :bug: handle error when directory already exists"
    },
    {
        "msg": "fix(storybook): refactor progress story",
        "diff": "diff --git a/packages/chakra-ui-core/src/Progress/Progress.stories.js b/packages/chakra-ui-core/src/Progress/Progress.stories.js import { storiesOf } from '@storybook/vue'\n-import { CSSReset, Progress as KProgress, Stack } from '..'\n+import { CSSReset, Progress as KProgress, Stack, Box } from '..'\nstoriesOf('UI | Progress', module)\n- .add('Default Progress', () => ({\n- components: { CSSReset, KProgress },\n+ .addDecorator(story => ({\n+ components: { CSSReset, Box, story: story() },\ntemplate: `\n- <div>\n- <CSSReset />\n- <KProgress :value=\"80\" />\n- </div>\n- `\n+ <Box w=\"full\" maxWidth=\"400px\" mx=\"auto\" mt=\"8\" p=\"3\">\n+ <CSSReset></CSSReset>\n+ <story></story>\n+ </Box>`\n+ }))\n+\n+ .add('Default Progress', () => ({\n+ components: { KProgress },\n+ template: `<KProgress :value=\"80\" />`\n}))\n.add('With stripe', () => ({\n- components: { CSSReset, KProgress },\n- template: `\n- <div>\n- <CSSReset />\n- <KProgress hasStripe :value=\"64\" />\n- </div>\n- `\n+ components: { KProgress },\n+ template: `<KProgress hasStripe :value=\"64\" />`\n}))\n.add('With sizes', () => ({\n- components: { CSSReset, KProgress, Stack },\n+ components: { KProgress, Stack },\ntemplate: `\n- <div>\n- <CSSReset />\n<Stack :spacing=\"5\">\n<KProgress rounded=\"sm\" color=\"green\" size=\"sm\" />\n<KProgress color=\"green\" size=\"md\" />\n<KProgress color=\"green\" size=\"lg\" />\n<KProgress color=\"green\" height=\"32px\" />\n- </Stack>\n- </div>\n- `\n+ </Stack>`\n}))\n.add('With color', () => ({\n- components: { CSSReset, KProgress },\n- template: `\n- <div>\n- <CSSReset />\n- <KProgress color=\"pink\" hasStripe />\n- </div>\n- `\n+ components: { KProgress },\n+ template: `<KProgress color=\"pink\" hasStripe />`\n}))\n",
        "date": "15.03.2020 15:57:01",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "sim_msg": "feat(QBtn): relax \"percentage\" prop handling",
        "sim_diff": "diff --git a/ui/src/components/btn/QBtn.js b/ui/src/components/btn/QBtn.js @@ -21,10 +21,7 @@ export default Vue.extend({\nmixins: [ BtnMixin ],\nprops: {\n- percentage: {\n- type: Number,\n- validator: v => v >= 0 && v <= 100\n- },\n+ percentage: Number,\ndarkPercentage: Boolean\n},\n@@ -40,6 +37,10 @@ export default Vue.extend({\n{ keyCodes: [] },\nthis.ripple === true ? {} : this.ripple\n)\n+ },\n+\n+ computedPercentage () {\n+ return Math.max(0, Math.min(100, this.percentage))\n}\n},\n@@ -263,8 +264,8 @@ export default Vue.extend({\nchild.push(\nh('div', {\nstaticClass: 'q-btn__progress absolute-full',\n- class: this.darkPercentage ? 'q-btn__progress--dark' : null,\n- style: { transform: `scale3d(${this.percentage / 100},1,1)` }\n+ class: this.darkPercentage === true ? 'q-btn__progress--dark' : '',\n+ style: { transform: `scale3d(${this.computedPercentage / 100},1,1)` }\n})\n)\n}\n",
        "chatgpt_rag": "refactor(Progress): add Box component and update story decorator in Progress stories"
    },
    {
        "msg": "fix: :bug: no amp",
        "diff": "diff --git a/src/lib/og-image-url-build.js b/src/lib/og-image-url-build.js @@ -2,7 +2,7 @@ const objectToQueryParams = obj => {\nconst params = Object.entries(obj).map(\n([key, value]) => `${key}=${value}`\n)\n- return '?' + params.join('&amp;')\n+ return '?' + params.join('&')\n}\nexport const ogImageUrl = (author, website, title) => {\n",
        "date": "12.07.2021 06:18:01",
        "repo": "spences10/cheat-sheets",
        "type": "fix",
        "sim_msg": "fix: don't use proxy for gateway.ipfs.io URLs",
        "sim_diff": "diff --git a/src/client/helpers/image.js b/src/client/helpers/image.js @@ -8,7 +8,7 @@ export const MAXIMUM_UPLOAD_SIZE = 15728640;\nexport const MAXIMUM_UPLOAD_SIZE_HUMAN = filesize(MAXIMUM_UPLOAD_SIZE);\nexport const getProxyImageURL = (url, type) => {\n- if (url.indexOf('https://ipfs.busy.org') === 0) {\n+ if (url.indexOf('https://ipfs.busy.org') === 0 || url.indexOf('https://gateway.ipfs.io') === 0) {\nreturn url;\n} else if (type === 'preview') {\nreturn `${IMG_PROXY_PREVIEW}${url}`;\n",
        "chatgpt_rag": "fix: remove unnecessary escape character in query parameter separator in og-image-url-build"
    },
    {
        "msg": "fix: Correcting tsconfig `files` for `include` in template",
        "diff": "diff --git a/packages/create-wmr/tpl/tsconfig.json b/packages/create-wmr/tpl/tsconfig.json \"allowSyntheticDefaultImports\": true,\n\"downlevelIteration\": true\n},\n- \"files\": [\"./node_modules/wmr/index.d.ts\"],\n+ \"include\": [\"node_modules/wmr/index.d.ts\"],\n\"typeAcquisition\": {\n\"enable\": true\n}\n",
        "date": "27.03.2021 11:54:42",
        "repo": "preactjs/wmr",
        "type": "fix",
        "sim_msg": "chore: updated tsconfig.json",
        "sim_diff": "diff --git a/tsconfig.json b/tsconfig.json \"allowSyntheticDefaultImports\": true,\n\"forceConsistentCasingInFileNames\": true,\n\"resolveJsonModule\": true,\n- \"skipLibCheck\": true\n+ \"skipLibCheck\": true,\n+ \"strictNullChecks\": false\n},\n\"include\": [\"packages\", \"typings\"],\n\"exclude\": [\"node_modules\", \"**/__test?__\", \"**/dist\"]\n",
        "chatgpt_rag": "chore: updated tsconfig.json for create-wmr template"
    },
    {
        "msg": "fix: Quote zero-length strings in arguments\nIf a zero-length string is passed, it does not get properly quoted, and then it is not properly passed to the child process",
        "diff": "diff --git a/lib/utils/index.js b/lib/utils/index.js @@ -69,7 +69,7 @@ var utils = (module.exports = {\nargs.map(function (arg) {\n// if an argument contains a space, we want to show it with quotes\n// around it to indicate that it is a single argument\n- if (arg.indexOf(' ') === -1) {\n+ if (arg.length > 0 && arg.indexOf(' ') === -1) {\nreturn arg;\n}\n// this should correctly escape nested quotes\n",
        "date": "01.05.2019 00:04:25",
        "repo": "remy/nodemon",
        "type": "fix",
        "sim_msg": "chore: update lockfile & pass nil",
        "sim_diff": "diff --git a/bin/utils/convert-argv.js b/bin/utils/convert-argv.js @@ -128,7 +128,7 @@ module.exports = function(...args) {\n}\nif (!configFileLoaded) {\n- return processConfiguredOptions(null);\n+ return processConfiguredOptions();\n} else if (options.length === 1) {\nreturn processConfiguredOptions(options[0]);\n} else {\n",
        "chatgpt_rag": "chore: update argument handling logic in utils index file"
    },
    {
        "msg": "fix: don't test for jest version",
        "diff": "diff --git a/packages/razzle/config/createJestConfig.js b/packages/razzle/config/createJestConfig.js @@ -4,7 +4,6 @@ const fs = require('fs');\nconst chalk = require('chalk');\nconst jest = require('jest');\n-const jestMajorVersion = parseInt(jest.default.getVersion().split('.')[0]);\n// first search for setupTests.ts file\n// if .ts file not exists then looks for setupTests.js\nfunction getSetupTestsFilePath(paths) {\n@@ -33,7 +32,7 @@ module.exports = (\n// TODO: I don't know if it's safe or not to just use / as path separator\n// in Jest configs. We need help from somebody with Windows to determine this.\n- const config = Object.assign(\n+ const config =\n{\ncollectCoverageFrom: ['src/**/*.{js,jsx,ts,tsx}', '!src/**/*.d.ts'],\n@@ -61,15 +60,9 @@ module.exports = (\n'^react-native$': 'react-native-web',\n},\nmoduleFileExtensions: ['js', 'jsx', 'json', 'ts', 'tsx'],\n- },\n- jestMajorVersion >= 24\n- ? {\n- setupFilesAfterEnv: setupTestsFile ? [setupTestsFile] : [],\n- }\n- : {\n- setupTestFrameworkScriptFile: setupTestsFile,\n+ setupFilesAfterEnv: setupTestsFile ? [setupTestsFile] : []\n}\n- );\n+\nif (rootDir) {\nconfig.rootDir = rootDir;\n}\n@@ -95,11 +88,8 @@ module.exports = (\n'transformIgnorePatterns',\n'reporters',\n'watchPlugins',\n- ].concat(\n- jestMajorVersion >= 24\n- ? ['setupFilesAfterEnv']\n- : ['setupTestFrameworkScriptFile']\n- );\n+ 'setupFilesAfterEnv'\n+ ];\nif (overrides) {\nsupportedKeys.forEach(key => {\nif (overrides.hasOwnProperty(key)) {\n",
        "date": "21.09.2020 15:49:30",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "chore: switch out deprecated jest-preset property",
        "sim_diff": "diff --git a/packages/jest-preset/jest-preset.json b/packages/jest-preset/jest-preset.json \"modulePaths\": [\"node_modules\"],\n\"moduleFileExtensions\": [\"js\", \"jsx\", \"json\"],\n\"setupFiles\": [\"raf/polyfill\"],\n- \"setupTestFrameworkScriptFile\": \"@hig/jest-preset/setupTests.js\",\n+ \"setupFilesAfterEnv\": [\"@hig/jest-preset/setupTests.js\"],\n\"testPathIgnorePatterns\": [\n\"docs\",\n\"packages/babel-preset\",\n",
        "chatgpt_rag": "chore: update Jest configuration to use setupFilesAfterEnv instead of setupTestFrameworkScriptFile"
    },
    {
        "msg": "fix: Correcting route types",
        "diff": "diff --git a/packages/preact-iso/router.d.ts b/packages/preact-iso/router.d.ts @@ -12,5 +12,7 @@ interface RoutableProps {\n}\ndeclare module 'preact' {\n- export interface Attributes extends RoutableProps {}\n+ namespace JSX {\n+ interface IntrinsicAttributes extends RoutableProps {}\n+ }\n}\n",
        "date": "11.12.2020 19:27:24",
        "repo": "preactjs/wmr",
        "type": "fix",
        "sim_msg": "feat(jest-preset): enable ESM support for Typescript",
        "sim_diff": "diff --git a/packages/jest-preset/jest-preset.js b/packages/jest-preset/jest-preset.js @@ -31,6 +31,7 @@ module.exports = {\n: {\n'ts-jest': {\nbabelConfig: require('./transforms/babel.js').babelConfig,\n+ useESM: true,\n},\n},\nmoduleNameMapper: {\n",
        "chatgpt_rag": "feat(preact-iso): update router.d.ts to use JSX namespace for IntrinsicAttributes"
    },
    {
        "msg": "fix(razzle): update copy plugin options to patterns",
        "diff": "diff --git a/packages/razzle/config/createConfigAsync.js b/packages/razzle/config/createConfigAsync.js @@ -896,13 +896,15 @@ module.exports = (\n}),\nwebpackMajor === 5 ? null : new webpack.HashedModuleIdsPlugin(),\nnew webpack.optimize.AggressiveMergingPlugin(),\n- new CopyPlugin([\n+ new CopyPlugin({\n+ patterns: [\n{\nfrom: paths.appPublic + '/**/*',\nto: paths.appBuild,\ncontext: paths.appPath,\n},\n- ]),\n+ ]\n+ }),\n].filter(x => x);\nconfig.optimization = {\n",
        "date": "02.10.2020 18:35:33",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "feat(Scripts): add build timestamp",
        "sim_diff": "diff --git a/packages/scripts/webapp/preset/config/webpack.config.js b/packages/scripts/webapp/preset/config/webpack.config.js @@ -122,6 +122,7 @@ module.exports = ({ getUserConfig, mode }) => {\n],\n},\nplugins: [\n+ new webpack.DefinePlugin({ BUILD_TIMESTAMP: Date.now() }),\nnew MiniCssExtractPlugin({\nfilename: '[name]-[hash].css',\n}),\n@@ -135,9 +136,7 @@ module.exports = ({ getUserConfig, mode }) => {\nloadCSSAsync: true,\nappLoaderIcon: getUserConfig(['html', 'appLoaderIcon'], DEFAULT_APP_LOADER_ICON),\n}),\n- new CopyWebpackPlugin([\n- { from: 'src/assets' },\n- ]),\n+ new CopyWebpackPlugin([{ from: 'src/assets' }]),\nnew webpack.BannerPlugin({\nbanner: LICENSE_BANNER,\n}),\n",
        "chatgpt_rag": "refactor(Razzle): update CopyPlugin configuration in createConfigAsync"
    },
    {
        "msg": "fix(Input): add multiple to propNames",
        "diff": "diff --git a/src/elements/Input/Input.js b/src/elements/Input/Input.js @@ -22,7 +22,7 @@ export const htmlInputPropNames = [\n'selected', 'defaultValue', 'defaultChecked',\n// LIMITED HTML PROPS\n- 'autoCapitalize', 'autoComplete', 'autoFocus', 'checked', 'form', 'max', 'maxLength', 'min',\n+ 'autoCapitalize', 'autoComplete', 'autoFocus', 'checked', 'form', 'max', 'maxLength', 'min', 'multiple',\n'name', 'pattern', 'placeholder', 'readOnly', 'required', 'step', 'type', 'value',\n// Heads Up!\n",
        "date": "07.03.2017 18:28:13",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "sim_msg": "feat(Input): add forwardRef",
        "sim_diff": "diff --git a/components/system/components/Input.js b/components/system/components/Input.js @@ -12,11 +12,10 @@ const INPUT_STYLES = (theme) => css`\nfont-family: ${Constants.font.text};\n-webkit-appearance: none;\nwidth: 100%;\n- height: 40px;\n+ height: 100%;\nbackground: transparent;\nfont-size: ${theme.typescale.lvl1};\nborder-radius: 12px;\n- padding: 10px 12px;\noutline: 0;\nborder: none;\nbox-sizing: border-box;\n@@ -50,7 +49,6 @@ const STYLES_UNIT = css`\n`;\nconst STYLES_INPUT_CONTAINER = css`\n- width: 100%;\nbox-sizing: border-box;\nposition: relative;\nmax-width: 480px;\n@@ -72,6 +70,7 @@ const STYLES_INPUT = css`\njustify-content: flex-start;\nheight: 40px;\nborder-radius: 12px;\n+ padding: 10px 12px;\nbackground: ${Constants.system.white};\ntext-overflow: ellipsis;\nwhite-space: nowrap;\n@@ -129,7 +128,7 @@ const INPUT_COLOR_MAP = {\nWARNING: Constants.system.yellow,\n};\n-export class Input extends React.Component {\n+class InputPrimitive extends React.Component {\n_unit;\n_input;\n_isPin = this.props.type === \"pin\";\n@@ -228,7 +227,6 @@ export class Input extends React.Component {\nstyle={this.props.descriptionStyle}\ndescription={this.props.description}\n/>\n- <FocusRing within>\n<div\ncss={[STYLES_INPUT, this.props.inputCss]}\nstyle={{\n@@ -244,6 +242,9 @@ export class Input extends React.Component {\n<input\nref={(c) => {\nthis._input = c;\n+ if (this.props.innerRef) {\n+ this.props.innerRef?.(c);\n+ }\n}}\ncss={[INPUT_STYLES, this._isPin && STYLES_PIN_INPUT]}\nautoFocus={this.props.autoFocus}\n@@ -266,6 +267,8 @@ export class Input extends React.Component {\nreadOnly={this.props.readOnly}\nrequired={this.props.required}\nmaxLength={this.props.maxLength}\n+ onKeyDown={this.props.onKeyDown}\n+ tabIndex={this.props.tabIndex}\nstyle={{\nwidth: this.props.copyable || this.props.icon ? \"calc(100% - 32px)\" : \"100%\",\n...this.props.textStyle,\n@@ -295,9 +298,10 @@ export class Input extends React.Component {\n/>\n) : null}\n</div>\n- </FocusRing>\n</div>\n</>\n);\n}\n}\n+\n+export const Input = React.forwardRef((props, ref) => <InputPrimitive innerRef={ref} {...props} />);\n",
        "chatgpt_rag": "feat(Input): add support for multiple attribute in htmlInputPropNames"
    },
    {
        "msg": "fix(example): load all client assets",
        "diff": "diff --git a/examples/with-vendor-bundle/src/server.js b/examples/with-vendor-bundle/src/server.js @@ -5,13 +5,26 @@ import { renderToString } from \"react-dom/server\";\nconst assets = require(process.env.RAZZLE_ASSETS_MANIFEST);\n-const scripts = Object.keys(assets).reduce((scripts, key) => {\n- return (\n- scripts + `<script src=\"${assets[key].js}\" defer crossorigin></script>`\n- );\n-}, \"\");\n+const scripts = Object.keys(assets)\n+ .map((key) => {\n+ const script = assets[key].js;\n+\n+ if (typeof script === 'undefined' || script === null) {\n+ return null;\n+ }\n+\n+ if (Array.isArray(script)) {\n+ return script\n+ .map((item) => {\n+ return `<script src=\"${item}\"></script>`;\n+ })\n+ .join('');\n+ }\n+\n+ return `<script src=\"${script}\"></script>`;\n+ })\n+ .filter((a) => typeof a !== 'undefined' || a !== null);\n-console.log(scripts);\nconst server = express();\n@@ -28,7 +41,7 @@ server\n<meta charSet='utf-8' />\n<title>Welcome to Razzle</title>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n- ${scripts}\n+ ${scripts.join('\\n')}\n</head>\n<body>\n<div id=\"root\">${markup}</div>\n",
        "date": "28.08.2020 20:01:52",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "fix(login): Prevent duplicate alerts on login failure",
        "sim_diff": "diff --git a/packages/frontend/src/components/login/v2/ConfirmLoginWrapper.js b/packages/frontend/src/components/login/v2/ConfirmLoginWrapper.js @@ -3,7 +3,6 @@ import { useSelector, useDispatch } from 'react-redux';\nimport { Mixpanel } from '../../../mixpanel/index';\nimport { allowLogin } from '../../../redux/actions/account';\n-import { showCustomAlert } from '../../../redux/actions/status';\nimport {\nselectAccountLocalStorageAccountId,\nselectAccountUrlReferrer\n@@ -33,20 +32,7 @@ export default ({\npublicKey={publicKey}\ncontractId={contractId}\nonClickCancel={onClickCancel}\n- onClickConnect={async () => {\n- await Mixpanel.withTracking('LOGIN',\n- async () => {\n- await dispatch(allowLogin());\n- },\n- (e) => {\n- dispatch(showCustomAlert({\n- success: false,\n- messageCodeHeader: 'error',\n- errorMessage: e.message\n- }));\n- }\n- );\n- }}\n+ onClickConnect={() => Mixpanel.withTracking('LOGIN', () => dispatch(allowLogin()))}\ncontractIdUrl={contractIdUrl}\nsuccessUrlIsValid={successUrlIsValid}\n/>\n",
        "chatgpt_rag": "refactor(server): Improve script loading logic in server.js"
    },
    {
        "msg": "fix: WMR CLI commands",
        "diff": "diff --git a/packages/wmr/src/cli.js b/packages/wmr/src/cli.js @@ -15,8 +15,6 @@ function bool(v) {\n// global options\nprog\n- .option('--public', 'Your web app root directory (default: ./public)')\n- .option('--out', 'Where to store generated files (default: ./dist)')\n.option('--cwd', 'The working directory - equivalent to \"(cd FOO && wmr)\"')\n// Setting env variables isn't common knowledege for many windows users. Much\n// easier to pass a flag to our binary instead.\n@@ -24,6 +22,8 @@ prog\nprog\n.command('build', 'make a production build')\n+ .option('--public', 'Your web app root directory (default: ./public)')\n+ .option('--out', 'Where to store generated files (default: ./dist)')\n.option('--prerender', 'Pre-render the application to HTML')\n.option('--sourcemap', 'Enable Source Maps')\n.option('--visualize', 'Launch interactive bundle visualizer')\n@@ -46,6 +46,7 @@ prog\nprog\n.command('start', 'Start a development server', { default: true })\n+ .option('--public', 'Your web app root directory (default: ./public)')\n.option('--port, -p', 'HTTP port to listen on (default: $PORT or 8080)')\n.option('--host', 'HTTP host to listen on (default: localhost)')\n.option('--http2', 'Use HTTP/2 (default: false)')\n",
        "date": "09.05.2021 16:08:33",
        "repo": "preactjs/wmr",
        "type": "fix",
        "sim_msg": "refactor: handle uncauth exception",
        "sim_diff": "diff --git a/lib/index.js b/lib/index.js @@ -233,8 +233,14 @@ function handleGlobalException(err){\nfs.writeFileSync(path.join(process.cwd(), config.name + '.log'), '\\r\\n' + stack + '\\r\\n', {flag: 'a'});\n/*eslint no-console: \"off\"*/\nconsole.error(stack);\n+ if (typeof process.handleUncauthtErrorMessage === 'function' &&\n+ process.handleUncauthtErrorMessage(stack, err) === false) {\n+ return;\n+ }\n}\n+ setTimeout(function() {\nprocess.exit(1);\n+ }, 360);\n}\nprocess.on('unhandledRejection', handleGlobalException);\n",
        "chatgpt_rag": "feat: add public and out options to build and start commands in CLI"
    },
    {
        "msg": "fix(search): Fixes - linting issue",
        "diff": "diff --git a/src/epics/epic.test.js b/src/epics/epic.test.js @@ -4,8 +4,6 @@ import configureStore from \"../configure-store\";\nimport { createEpicMiddleware } from 'redux-observable';\nimport { of} from 'rxjs';\n-import { QueryParseError } from 'lunr';\n-\nimport rootEpic from './root-epic'\nimport { setDataset } from '../domain/dataset'\nimport { loadDataset } from \"./load-dataset-epic\"\n",
        "date": "09.07.2018 12:30:57",
        "repo": "iqtlabs/crviz",
        "type": "fix",
        "sim_msg": "fix: dashboard unit test",
        "sim_diff": "diff --git a/src/components/dashboard/__tests__/Dashboard.js b/src/components/dashboard/__tests__/Dashboard.js @@ -6,7 +6,7 @@ import renderer from 'react-test-renderer'\nimport GDStore from '../../../lib/undux/GDStore'\nimport { getComponentWithMocks } from './__util__'\n-\n+import userStorage from '../../../lib/gundb/UserStorage'\nconst { Container } = GDStore\nconst routes = {\n@@ -27,14 +27,16 @@ class AppNavigation extends React.Component<AppNavigationProps, AppNavigationSta\n}\ndescribe('Dashboard', () => {\n- it('renders without errors', () => {\n+ it('renders without errors', async () => {\n+ await userStorage.ready\nconst WebRouter = createBrowserApp(createSwitchNavigator({ AppNavigation }))\nconst tree = renderer.create(<WebRouter />)\nexpect(tree.toJSON()).toBeTruthy()\n})\n- it('matches snapshot', () => {\n+ it('matches snapshot', async () => {\n+ await userStorage.ready\nconst WebRouter = createBrowserApp(createSwitchNavigator({ AppNavigation }))\nconst component = renderer.create(<WebRouter />)\n",
        "chatgpt_rag": "refactor: remove unnecessary imports and clean up epic test file"
    },
    {
        "msg": "fix(scss-plugin): use onlyLocals option",
        "diff": "diff --git a/packages/razzle-plugin-scss/index.js b/packages/razzle-plugin-scss/index.js @@ -126,8 +126,9 @@ module.exports = (\nuse: isServer\n? [\n{\n- loader: require.resolve('css-loader/locals'),\n+ loader: require.resolve('css-loader'),\noptions: Object.assign({}, options.css[constantEnv], {\n+ onlyLocals: true,\nmodules: true,\nlocalIdentName: '[name]__[local]___[hash:base64:5]',\n}),\n",
        "date": "23.04.2020 19:53:34",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "chore: Add scss data loader",
        "sim_diff": "diff --git a/.storybook/webpack.config.js b/.storybook/webpack.config.js @@ -33,7 +33,17 @@ module.exports = ({ config }) => {\nlocalIdentName: '[name]__[local]___[hash:base64:5]',\n},\n},\n- require.resolve('sass-loader'),\n+ {\n+ loader: require.resolve('sass-loader'),\n+\n+ options: {\n+ data: `@import '~scss/type.module.scss';\n+ @import '~scss/helpers.module.scss';\n+ @import '~scss/colors.module.scss';\n+ @import '~scss/links.module.scss';\n+ @import '~scss/breakpoints.module.scss';`,\n+ },\n+ },\n],\n})\n",
        "chatgpt_rag": "chore: Update css-loader configuration for server-side rendering"
    },
    {
        "msg": "fix: heading level",
        "diff": "diff --git a/sheets/javascript.md b/sheets/javascript.md @@ -465,7 +465,7 @@ document, but could change `html` with `p`, `span` whatever.\ndocument.getElementsByTagName('html')[0].style['font-size'] = '10px'\n```\n-### Checking for `window`\n+## Checking for `window`\n[Optional chaining](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Optional_chaining) can not be used on `window`.\nIt will throw an error when used on any undeclared root object, so no escaping the `typeof window == 'undefined'` check with a clever `?.`.\n",
        "date": "23.08.2021 23:58:37",
        "repo": "spences10/cheat-sheets",
        "type": "fix",
        "sim_msg": "docs(readme): add section on release, acknowledge `style-to-object`",
        "sim_diff": "diff --git a/README.md b/README.md @@ -196,11 +196,20 @@ $ npm test\n$ npm run lint\n```\n+## Release\n+\n+```sh\n+$ npm run release\n+$ npm publish\n+$ git push --follow-tags\n+```\n+\n## Special Thanks\n- [Contributors](https://github.com/remarkablemark/html-react-parser/graphs/contributors)\n- [html-dom-parser](https://github.com/remarkablemark/html-dom-parser)\n- [react-dom-core](https://github.com/remarkablemark/react-dom-core)\n+- [style-to-object](https://github.com/remarkablemark/style-to-object)\n## License\n",
        "chatgpt_rag": "docs(sheets): update javascript.md with section on checking for `window`"
    },
    {
        "msg": "fix(razzle): use paths.appAssetsManifest in ManifestPlugin",
        "diff": "diff --git a/packages/razzle/config/createConfigAsync.js b/packages/razzle/config/createConfigAsync.js @@ -166,6 +166,8 @@ module.exports = (\nwebpackOptions.definePluginOptions = dotenv.stringified;\n+ webpackOptions.appAssetsManifestPath = paths.appAssetsManifest;\n+\nif (IS_NODE) {\nwebpackOptions.jsOutputFilename = `[name].js`;\n@@ -735,7 +737,7 @@ module.exports = (\n// Output all files in a manifest file called assets-manifest.json\n// in the build directory.\nnew ManifestPlugin({\n- fileName: path.join(paths.appBuild, 'assets.json'),\n+ fileName: webpackOptions.appAssetsManifestPath,\nwriteToFileEmit: true,\ngenerate: (seed, files) => {\nconst entrypoints = new Set();\n",
        "date": "30.03.2021 20:02:14",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "chore: update copy-webpack-plugin config",
        "sim_diff": "diff --git a/webpack.config.js b/webpack.config.js @@ -160,13 +160,14 @@ module.exports = {\nnew MiniCssExtractPlugin({\nfilename: '[name].css'\n}),\n- new CopyPlugin([\n+ new CopyPlugin({\n+ patterns: [\n{\nfrom: 'src/assets',\nto: '',\n- copyUnmodified: true,\n},\n- ]),\n+ ],\n+ }),\nnew VueLoaderPlugin(),\nnew webpack.DefinePlugin({\nVERSION: JSON.stringify(require('./src/assets/manifest.json').version)\n",
        "chatgpt_rag": "feat: add appAssetsManifestPath to webpack options in createConfigAsync module"
    },
    {
        "msg": "fix(Statistic): fix wrong inverted type",
        "diff": "diff --git a/src/views/Statistic/Statistic.d.ts b/src/views/Statistic/Statistic.d.ts @@ -33,7 +33,7 @@ export interface StatisticProps {\nhorizontal?: boolean;\n/** A statistic can be formatted to fit on a dark background. */\n- inverted?: string;\n+ inverted?: boolean;\n/** Label content of the Statistic. */\nlabel?: SemanticShorthandContent;\n",
        "date": "31.07.2017 23:40:58",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "sim_msg": "chore: Make calculated font size 100",
        "sim_diff": "diff --git a/src/components/common/statistic.module.scss b/src/components/common/statistic.module.scss color: $color-slate-600;\n@include margin(8, bottom);\n.label {\n- font-size: 12px; // ignore-style-rule\n+ @include type-size(100);\n}\n.calculated {\n@include padding(4, top);\n",
        "chatgpt_rag": "chore: Change inverted prop type to boolean in StatisticProps"
    },
    {
        "msg": "fix(typo): update README file",
        "diff": "diff --git a/packages/razzle/README.md b/packages/razzle/README.md @@ -275,7 +275,7 @@ import 'react-app-polyfill/ie11'; // For IE 11 support\n* `process.env.NODE_ENV`: `'development'` or `'production'`\n* `process.env.BUILD_TYPE`: `'iso'` for isomorphic/universal applications or `'spa'` for single page applications. The default is `'iso'`. This is set by CLI arguments.\n* `process.env.BUILD_TARGET`: either `'client'` or `'server'`\n-* `process.env.PUBLIC_PATH`: Only in used in `razzle build`. You can alter the `webpack.config.output.publicPath` of the client assets (bundle, css, and images). This is useful if you plan to serve your assets from a CDN. Make sure to _include_ a trailing slash (e.g. `PUBLIC_PATH=https://cdn.example.com/`). If you are using React and altering the public path, make sure to also [include the `crossorigin` attribute](https://reactjs.org/docs/cdn-links.html#why-the-crossorigin-attribute) on your `<script>` tag in `src/server.js`.\n+* `process.env.PUBLIC_PATH`: Only used in `razzle build`. You can alter the `webpack.config.output.publicPath` of the client assets (bundle, css, and images). This is useful if you plan to serve your assets from a CDN. Make sure to _include_ a trailing slash (e.g. `PUBLIC_PATH=https://cdn.example.com/`). If you are using React and altering the public path, make sure to also [include the `crossorigin` attribute](https://reactjs.org/docs/cdn-links.html#why-the-crossorigin-attribute) on your `<script>` tag in `src/server.js`.\n* `process.env.CLIENT_PUBLIC_PATH`: The `NODE_ENV=development` build's `BUILD_TARGET=client` has a different `PUBLIC_PATH` than `BUILD_TARGET=server`. Default is `http://${process.env.HOST}:${process.env.PORT + 1}/`\nYou can create your own custom environment variables that will be inlined during the build. They must start\n",
        "date": "08.04.2020 06:32:29",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "docs: deployment to github pages",
        "sim_diff": "diff --git a/docs/deploying/README.md b/docs/deploying/README.md @@ -56,3 +56,35 @@ If you're using our [build configuration](http://open-wc.org/building), the `dis\n- Open the page in your browser using the URL `http://mypwa.localhost/`\nIf the app was built to support [legacy browsers](https://open-wc.org/building/building-rollup.html#supporting-older-browsers), the `dist` directory will include the subdirectories `legacy` and `polyfills`, and legacy browsers such as Internet Explorer 11 will be served suitable content.\n+\n+## Deployment to Github Pages\n+\n+If you want to deploy your SPA to [github-pages](https://pages.github.com/), do the following\n+\n+1. Install gh-pages: `yarn add gh-pages`\n+2. Add a \"deploy\" script to `package.json`\n+\n+If you are deploying to a **project site** e.g `https://myusername.github.io/my-app`\n+\n+```\n+\"scripts\": {\n+ \"deploy\": \"npm run build && gh-pages -d dist\"\n+}\n+```\n+\n+The script will build your application and deploy it github pages and put the\n+bundle code into a branch named \"gh-pages\" of the repository `https://github.com/myusername/my-app`\n+\n+![alt text](https://i.imgur.com/HUjEr9l.png 'Branch gh-pages')\n+\n+If you are deploying to a **user or organization site** e.g `https://myusername.github.io`\n+\n+```\n+\"scripts\": {\n+ \"deploy\": \"npm run build && gh-pages -d dist -r https://github.com/myusername/myusername.github.io.git -b master\"\n+}\n+```\n+\n+The script will build your application deploy it github pages and put the bundle code into the \"master\" branch of the repository `https://github.com/myusername.github.io`\n+\n+3. Deploy the site by running `npm run deploy`\n",
        "chatgpt_rag": "docs: update PUBLIC_PATH description in razzle README"
    },
    {
        "msg": "fix: Adding missing types",
        "diff": "diff --git a/packages/preact-iso/index.d.ts b/packages/preact-iso/index.d.ts import { VNode } from 'preact';\nimport { PrerenderOptions } from './prerender';\n+export { Router, LocationProvider, useLoc, useLocation } from './router';\n+export { default as lazy, ErrorBoundary } from './lazy';\n+export { default as hydrate } from './hydrate';\n+\nexport default function prerender(vnode: VNode, options?: PrerenderOptions): Promise<{ html: string, links: Set<string>}>;\n",
        "date": "16.02.2021 10:26:39",
        "repo": "preactjs/wmr",
        "type": "fix",
        "sim_msg": "feat: add `netlify` preset\n+ Via",
        "sim_diff": "diff --git a/packages/app/src/components/presets/index.js b/packages/app/src/components/presets/index.js @@ -18,6 +18,7 @@ export { m1guelpf } from './m1guelpf'\nexport { meta } from './meta'\nexport { microlink } from './microlink'\nexport { midudev } from './midudev'\n+export { netlify } from './netlify'\nexport { nextjsconf } from './nextjsconf'\nexport { paco } from './paco'\nexport { pedro } from './pedro'\n",
        "chatgpt_rag": "feat: export additional router utilities and lazy loading components"
    },
    {
        "msg": "fix: Ensures TS config files are handled first",
        "diff": "diff --git a/packages/wmr/src/lib/normalize-options.js b/packages/wmr/src/lib/normalize-options.js @@ -78,7 +78,7 @@ export async function normalizeOptions(options, mode, configWatchFiles = []) {\n// ignore error, reading aliases from package.json is an optional feature\n}\n- const EXTENSIONS = ['.js', '.ts', '.mjs'];\n+ const EXTENSIONS = ['.ts', '.js', '.mjs'];\nlet custom;\nlet initialError;\n",
        "date": "14.05.2021 01:41:50",
        "repo": "preactjs/wmr",
        "type": "fix",
        "sim_msg": "refactor: return is better when inject has no value",
        "sim_diff": "diff --git a/src/core/util/options.js b/src/core/util/options.js @@ -334,6 +334,7 @@ function validatePropObject (\n*/\nfunction normalizeInject (options: Object, vm: ?Component) {\nconst inject = options.inject\n+ if (!inject) return\nconst normalized = options.inject = {}\nif (Array.isArray(inject)) {\nfor (let i = 0; i < inject.length; i++) {\n@@ -346,7 +347,7 @@ function normalizeInject (options: Object, vm: ?Component) {\n? extend({ from: key }, val)\n: { from: val }\n}\n- } else if (process.env.NODE_ENV !== 'production' && inject) {\n+ } else if (process.env.NODE_ENV !== 'production') {\nwarn(\n`Invalid value for option \"inject\": expected an Array or an Object, ` +\n`but got ${toRawType(inject)}.`,\n",
        "chatgpt_rag": "style: reorder file extensions in EXTENSIONS array to prioritize TypeScript files"
    },
    {
        "msg": "fix(TextArea): fix autoHeight calculate wrong value on long text\nCalculate content height without taking a vertical scroll bar into\naccount.",
        "diff": "diff --git a/src/addons/TextArea/TextArea.js b/src/addons/TextArea/TextArea.js @@ -115,7 +115,9 @@ class TextArea extends Component {\n// Measure the scrollHeight and update the height to match.\nthis.ref.style.height = 'auto'\n+ this.ref.style.overflowY = 'hidden'\nthis.ref.style.height = `${Math.max(parseFloat(minHeight), Math.ceil(this.ref.scrollHeight + borderHeight))}px`\n+ this.ref.style.overflowY = ''\n}\nrender() {\n",
        "date": "18.10.2017 11:24:49",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "sim_msg": "refactor: add grow prop in textarea and resizer",
        "sim_diff": "diff --git a/src/components/Textarea/index.js b/src/components/Textarea/index.js @@ -20,7 +20,11 @@ export default class Textarea extends Component {\n}\ncomponentDidMount() {\n- autosize(this.textareaRef.current);\n+ const { grow } = this.props;\n+ if (grow) {\n+ return autosize(this.textareaRef.current);\n+ }\n+ return null;\n}\ngetContainerClassNames() {\n@@ -150,6 +154,8 @@ Textarea.propTypes = {\ncols: PropTypes.number,\n/** The number of visible text lines for the control. The value by default is 3. */\nrows: PropTypes.number,\n+ /** This make to textarea grow. This value defaults to false. */\n+ grow: PropTypes.bool,\n};\nTextarea.defaultProps = {\n@@ -167,6 +173,7 @@ Textarea.defaultProps = {\nreadOnly: false,\ncols: undefined,\nrows: 3,\n+ grow: false,\nonChange: () => {},\nonFocus: () => {},\nonBlur: () => {},\n",
        "chatgpt_rag": "style: update textarea height calculation logic"
    },
    {
        "msg": "fix: html-legend: use legend keydown logic",
        "diff": "diff --git a/src/charts/html-legend.js b/src/charts/html-legend.js import {select} from 'd3-selection';\n-//import {event} from 'd3-selection';\nimport {pluck, utils} from '../core/utils';\nimport {config} from '../core/config';\n@@ -209,7 +208,7 @@ export class HtmlLegend {\n.attr('tabindex', 0);\ntabElements\n- .on('keydown', d => {\n+ .on('keydown', config._d3compat.eventHandler((d, event) => {\n// trigger only if d is an object\nif (event.keyCode === 13 && typeof d === 'object') {\nd.chart.legendToggle(d)\n@@ -219,7 +218,7 @@ export class HtmlLegend {\nd.chart.legendToggle(d)\nevent.preventDefault();\n}\n- })\n+ }))\n.on('focus', d => {\nthis._parent.legendHighlight(d);\n})\n",
        "date": "06.04.2021 17:27:49",
        "repo": "dc-js/dc.js",
        "type": "fix",
        "sim_msg": "chore: Add fathom goal for disclosure",
        "sim_diff": "diff --git a/src/components/pages/race/charts/index.js b/src/components/pages/race/charts/index.js @@ -109,7 +109,13 @@ export default () => {\n<LandingPageContainer>\n<Disclosure\nopen={isCasesOpen}\n- onChange={() => setIsCasesOpen(!isCasesOpen)}\n+ onChange={() => {\n+ setIsCasesOpen(!isCasesOpen)\n+ if (typeof window.fathom === 'undefined') {\n+ return\n+ }\n+ window.fathom.trackGoal('O8WBUGRP', 0)\n+ }}\n>\n<Feature\nelement={\n@@ -159,7 +165,13 @@ export default () => {\n</Disclosure>\n<Disclosure\nopen={isDeathsOpen}\n- onChange={() => setIsDeathsOpen(!isDeathsOpen)}\n+ onChange={() => {\n+ setIsDeathsOpen(!isDeathsOpen)\n+ if (typeof window.fathom === 'undefined') {\n+ return\n+ }\n+ window.fathom.trackGoal('O8WBUGRP', 0)\n+ }}\n>\n<Feature\nelement={\n",
        "chatgpt_rag": "fix: Update event handler in html-legend.js to use config._d3compat.eventHandler for compatibility with d3 versions"
    },
    {
        "msg": "fix(prerender): drop `publicPath` prefix during prerender",
        "diff": "diff --git a/src/lib/prerender.js b/src/lib/prerender.js @@ -4,15 +4,16 @@ import { Worker } from 'worker_threads';\n* @param {object} options\n* @property {string} [cwd = '.']\n* @property {string} [out = '.cache']\n+ * @property {string} publicPath\n*/\n-export function prerender({ cwd = '.', out = '.cache' }) {\n+export function prerender({ cwd = '.', out = '.cache', publicPath }) {\nconst w = new Worker(\n`(${workerCode})(require('worker_threads').workerData)\n.then(r => require('worker_threads').parentPort.postMessage([1,r]))\n.catch(err => require('worker_threads').parentPort.postMessage([0,err && err.stack || err+'']))`,\n{\neval: true,\n- workerData: { cwd, out },\n+ workerData: { cwd, out, publicPath },\n// execArgv: ['--experimental-modules'],\nstderr: true\n}\n@@ -28,7 +29,7 @@ export function prerender({ cwd = '.', out = '.cache' }) {\n});\n}\n-async function workerCode({ cwd, out }) {\n+async function workerCode({ cwd, out, publicPath }) {\n/*global globalThis*/\nconst path = require('path');\n@@ -67,6 +68,7 @@ async function workerCode({ cwd, out }) {\nthrow Error(`Unable to detect <script src=\"entry.js\"> in your index.html.`);\n}\n// script = new URL(`../dist/${script.replace(/^(\\.?\\/)?/g, '')}`, selfUrl).href;\n+ script = script.replace(publicPath, '');\nscript = path.resolve(cwd, out, script.replace(/^(\\.?\\/)?/g, ''));\n// Prevent Rollup from transforming `import()` here.\n",
        "date": "03.12.2020 07:28:55",
        "repo": "preactjs/wmr",
        "type": "fix",
        "sim_msg": "perf(build): limit up to 20 simultaneos prerendering views\n[skip ci]",
        "sim_diff": "diff --git a/@ecomplus/storefront-framework/src/bin/scripts/build.js b/@ecomplus/storefront-framework/src/bin/scripts/build.js @@ -79,6 +79,16 @@ bundler.then(async ({ assetsByChunkName }) => {\n}\n)\n+ // debug prerender config\n+ let maximumViews = prerenderLimit\n+ if (prerenderUrls) {\n+ console.log(`--> Prerender URLs \"${prerenderUrls.join(', ')}\"\\n \\n`)\n+ maximumViews += prerenderUrls.length\n+ }\n+ if (maximumViews > 0) {\n+ console.log(`--> Prerendering up to ${maximumViews} views\\n \\n`)\n+ }\n+\nconst prerender = (url, route) => new Promise(resolve => {\nif (prerenderUrls) {\nif (\n@@ -119,7 +129,8 @@ bundler.then(async ({ assetsByChunkName }) => {\nif (html) {\nhtml = minifyHtml(html, entryAssetsReference)\n// save HTML file on output folder\n- const filename = /\\.x?(ht)?ml$/.test(paths.output) ? url\n+ const filename = /\\.x?(ht)?ml$/.test(paths.output)\n+ ? url\n: url.endsWith('/') ? `${url}index.html` : `${url}.html`\nconst filepath = path.join(paths.output, filename)\n// create directories for if needed\n@@ -153,7 +164,12 @@ bundler.then(async ({ assetsByChunkName }) => {\n// list and prerender all storefront routes\nconst router = new StorefrontRouter(storeId)\nconst routes = await router.list()\n- await routes.forEach(route => prerender(route.path, route))\n+ const simultaneous = 20\n+ for (let i = 0; i < Math.ceil(routes.length / simultaneous); i++) {\n+ const start = i * simultaneous\n+ await Promise.all(routes.slice(start, start + simultaneous)\n+ .map(route => prerender(route.path, route)))\n+ }\n// build all CMS folder collection slugs\nfor (let i = 0; i < cmsCollections.length; i++) {\n",
        "chatgpt_rag": "feat(prerender): add publicPath option to prerender function\n[skip ci]"
    },
    {
        "msg": "fix(babel-preset-razzle): remove unused deps",
        "diff": "diff --git a/packages/babel-preset-razzle/package.json b/packages/babel-preset-razzle/package.json \"@babel/plugin-syntax-bigint\": \"7.8.3\",\n\"@babel/plugin-syntax-dynamic-import\": \"^7.8.3\",\n\"@babel/plugin-transform-modules-commonjs\": \"7.10.4\",\n- \"@babel/plugin-transform-react-jsx-source\": \"^7.9.0\",\n\"@babel/plugin-transform-runtime\": \"^7.9.0\",\n\"@babel/preset-env\": \"^7.9.5\",\n\"@babel/preset-react\": \"^7.9.4\",\n\"@babel/preset-typescript\": \"^7.9.0\",\n\"@babel/runtime\": \"^7.9.2\",\n- \"babel-plugin-dynamic-import-node\": \"2.3.3\",\n\"babel-plugin-syntax-jsx\": \"^6.18.0\",\n\"babel-plugin-transform-react-remove-prop-types\": \"0.4.24\",\n\"chalk\": \"^4.1.0\"\n",
        "date": "28.02.2021 15:19:12",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "feat(babel-preset-app): pin new deps",
        "sim_diff": "diff --git a/babel-preset-app/package.json b/babel-preset-app/package.json \"@babel/plugin-transform-runtime\": \"7.4.4\",\n\"@babel/preset-env\": \"7.4.5\",\n\"@babel/runtime\": \"7.4.5\",\n- \"@babel/runtime-corejs3\": \"^7.4.5\",\n- \"babel-loader\": \"^8.0.6\",\n+ \"@babel/runtime-corejs3\": \"7.4.5\",\n+ \"babel-loader\": \"8.0.6\",\n\"babel-plugin-dynamic-import-node\": \"2.2.0\",\n\"babel-plugin-module-resolver\": \"3.2.0\",\n- \"babel-plugin-transform-imports\": \"^1.5.1\",\n+ \"babel-plugin-transform-imports\": \"1.5.1\",\n\"core-js\": \"3.1.2\"\n},\n\"keywords\": [\n",
        "chatgpt_rag": "chore(babel-preset-razzle): update dependencies and remove unused plugin"
    },
    {
        "msg": "fix(project-version): Fixes version change, keeping the correct class on the URL",
        "diff": "diff --git a/app/routes/project-version.js b/app/routes/project-version.js @@ -45,17 +45,17 @@ export default Ember.Route.extend({\nendingRoute = `classes/${className}`;\nbreak;\n}\n- case 'project-version.classes.index': {\n+ case 'project-version.classes.class.index': {\nconst className = this.modelFor('project-version.classes.class').get('name');\nendingRoute = `classes/${className}`;\nbreak;\n}\n- case 'project-version.modules.index': {\n- const moduleName = this.pasramsFor('project-version.modules.module').module;\n+ case 'project-version.modules.module.index': {\n+ const moduleName = this.paramsFor('project-version.modules.module').module;\nendingRoute = `modules/${moduleName}`;\nbreak;\n}\n- case 'project-version.namespaces.index': {\n+ case 'project-version.namespaces.namespace.index': {\nconst namespaceName = this.paramsFor('project-version.namespaces.namespace').namespace;\nendingRoute = `namespaces/${namespaceName}`;\nbreak;\n",
        "date": "18.06.2017 22:07:45",
        "repo": "ember-learn/ember-api-docs",
        "type": "fix",
        "sim_msg": "feat(server): add field \"identifier\"\nI'm going to replace the function of \"main.js\".",
        "sim_diff": "diff --git a/server.js b/server.js @@ -22,6 +22,7 @@ const VERSION_CHECK_RESULT = {\n/**\n* @typedef {{\n+ * identifier?: string,\n* route: string,\n* module: any\n* }} ModuleDefinition\n@@ -70,10 +71,11 @@ async function getModulesDefinitions(modulePath, specificRoute) {\n.reverse()\n.filter((file) => file.endsWith('.js'))\n.map((file) => {\n+ const identifier = file.split('.').shift()\nconst route = parseRoute(file)\nconst module = require(path.join(modulePath, file))\n- return { route, module }\n+ return { identifier, route, module }\n})\nreturn modules\n",
        "chatgpt_rag": "fix(app): fix typo in route names and update paramsFor to paramsFor in project-version.js"
    },
    {
        "msg": "fix(tooltip): overlap between d3 sliding dataset and notetip",
        "diff": "diff --git a/src/features/tooltip/Tooltip.js b/src/features/tooltip/Tooltip.js @@ -146,18 +146,18 @@ class TooltipControls extends React.Component {\n<div style={style}>\n{this.props.data && !this.props.data.fieldValue &&\n<div>\n- <h4><b>UID: </b>{this.props.data.uid} </h4>\n- <h4><b>MAC: </b>{this.props.data.mac} </h4>\n- <h4><b>rDNS_host: </b>{this.props.data.rDNS_host} </h4>\n- <h4><b>Subnet: </b>{this.props.data.subnet} </h4>\n- <h4><b>IP: </b>{this.props.data.IP} </h4>\n- <h4><b>Record Source: </b>{this.props.data.record.source} </h4>\n- <h4><b>Record Timestamp: </b>{this.props.data.record.timestamp} </h4>\n- <h4><b>Role: </b>{this.props.data.role.role} </h4>\n- <h4><b>rDNS_domain: </b>{this.props.data.rDNS_domain} </h4>\n- <h4><b>OS: </b>{this.props.data.os.os} </h4>\n- <h4><b>OS Confidence: </b>{this.props.data.os.confidence} </h4>\n- <h4><b>Vendor: </b>{this.props.data.vendor} </h4>\n+ <p><b>UID: </b>{this.props.data.uid} </p>\n+ <p><b>MAC: </b>{this.props.data.mac} </p>\n+ <p><b>rDNS_host: </b>{this.props.data.rDNS_host} </p>\n+ <p><b>Subnet: </b>{this.props.data.subnet} </p>\n+ <p><b>IP: </b>{this.props.data.IP} </p>\n+ <p><b>Record Source: </b>{this.props.data.record.source} </p>\n+ <p><b>Record Timestamp: </b>{this.props.data.record.timestamp} </p>\n+ <p><b>Role: </b>{this.props.data.role.role} </p>\n+ <p><b>rDNS_domain: </b>{this.props.data.rDNS_domain} </p>\n+ <p><b>OS: </b>{this.props.data.os.os} </p>\n+ <p><b>OS Confidence: </b>{this.props.data.os.confidence} </p>\n+ <p><b>Vendor: </b>{this.props.data.vendor} </p>\n</div>\n}\n{this.props.data && this.props.data.fieldValue &&\n",
        "date": "16.07.2019 13:08:25",
        "repo": "iqtlabs/crviz",
        "type": "fix",
        "sim_msg": "fix: application status table",
        "sim_diff": "diff --git a/src/renderer/corporate/common/corporate-applications.jsx b/src/renderer/corporate/common/corporate-applications.jsx import React from 'react';\nimport {\n- Grid,\nCardHeader,\nCard,\nCardContent,\n@@ -8,11 +7,16 @@ import {\nTable,\nTableHead,\nTableBody,\n- TableRow,\n- TableCell,\nwithStyles\n} from '@material-ui/core';\n-import { HourGlassSmallIcon, CheckMaIcon, DeniedIcon, SmallTableHeadRow } from 'selfkey-ui';\n+import {\n+ HourGlassSmallIcon,\n+ CheckMaIcon,\n+ DeniedIcon,\n+ SmallTableRow,\n+ SmallTableCell,\n+ SmallTableHeadRow\n+} from 'selfkey-ui';\nconst styles = theme => ({\ncontainer: {\n@@ -25,11 +29,17 @@ const styles = theme => ({\nheight: '1px',\nmargin: '5px 16px'\n},\n- card: {},\ncardHeader: {\nwhiteSpace: 'normal',\nwordBreak: 'break-all'\n},\n+ cardContent: {\n+ alignItems: 'flex-start',\n+ display: 'flex',\n+ flexDirection: 'column',\n+ maxHeight: '180px',\n+ overflow: 'scroll'\n+ },\nregularText: {\n'& span': {\nfontWeight: 400\n@@ -64,46 +74,44 @@ const CorporateApplicationsSummary = withStyles(styles)(props => {\nconst { classes, applications = [] } = props;\nreturn (\n<Card className={classes.container}>\n- <CardHeader title={'Application Status'} className={classes.regularText} />\n+ <CardHeader title={'Applications Status'} className={classes.regularText} />\n<hr className={classes.hr} />\n- <CardContent>\n- <Grid\n- container\n- direction=\"column\"\n- justify=\"center\"\n- alignItems=\"flex-start\"\n- spacing={24}\n- >\n+ <CardContent style={{ height: 'initial' }}>\n+ <div className={classes.cardContent}>\n<Table>\n<TableHead>\n<SmallTableHeadRow>\n- <TableCell>\n+ <SmallTableCell>\n<Typography variant=\"overline\">Service</Typography>\n- </TableCell>\n- <TableCell>\n+ </SmallTableCell>\n+ <SmallTableCell>\n<Typography variant=\"overline\">Provider</Typography>\n- </TableCell>\n- <TableCell>\n+ </SmallTableCell>\n+ <SmallTableCell>\n<Typography variant=\"overline\">Status</Typography>\n- </TableCell>\n+ </SmallTableCell>\n</SmallTableHeadRow>\n</TableHead>\n<TableBody>\n{applications &&\napplications.map(a => (\n- <TableRow id={a.id} key={a.id}>\n- <TableCell>\n- <Typography variant=\"h6\">{a.title}</Typography>\n- </TableCell>\n- <TableCell>\n- <Typography variant=\"h6\">{a.rpName}</Typography>\n- </TableCell>\n- <TableCell>{renderStatus(a.currentStatusName)}</TableCell>\n- </TableRow>\n+ <SmallTableRow id={a.id} key={a.id}>\n+ <SmallTableCell>\n+ <Typography variant=\"subtitle1\">{a.title}</Typography>\n+ </SmallTableCell>\n+ <SmallTableCell>\n+ <Typography variant=\"subtitle1\">{a.rpName}</Typography>\n+ </SmallTableCell>\n+ <SmallTableCell>\n+ <Typography variant=\"subtitle1\">\n+ {renderStatus(a.currentStatusName)}\n+ </Typography>\n+ </SmallTableCell>\n+ </SmallTableRow>\n))}\n</TableBody>\n</Table>\n- </Grid>\n+ </div>\n</CardContent>\n</Card>\n);\n",
        "chatgpt_rag": "refactor: update tooltip content to use <p> tags instead of <h4> tags"
    },
    {
        "msg": "fix: clickable area for saving/deleting icon",
        "diff": "diff --git a/src/features/tooltip/Tooltip.js b/src/features/tooltip/Tooltip.js @@ -164,11 +164,11 @@ class TooltipControls extends React.Component {\n<b><h1><input className={tooltipStyle.inputStyle} type=\"text\" value={this.state.note.note.title} onChange={this.handleChangeTitle} placeholder=\"Title\"/></h1></b>\n<p><textarea className={tooltipStyle.inputStyle} type=\"text\" value={this.state.note.note.content} onChange={this.handleChangeContent} placeholder=\"Take a note...\"/></p>\n<div style={{textAlign:\"center\"}}>\n- <label className=\"button circular\">\n- <FontAwesomeIcon style={{margin:\"2.5px\"}} icon={faSave} onClick={this.saveNote}/>\n+ <label className=\"button circular\" onClick={this.saveNote}>\n+ <FontAwesomeIcon style={{margin:\"2.5px\"}} icon={faSave} />\n</label>\n- <label className=\"button circular\">\n- <FontAwesomeIcon style={{margin:\"2.5px\"}} icon={faTrashAlt} onClick={this.removeNote} />\n+ <label className=\"button circular\" onClick={this.removeNote}>\n+ <FontAwesomeIcon style={{margin:\"2.5px\"}} icon={faTrashAlt} />\n</label>\n</div>\n</div>\n",
        "date": "16.08.2019 09:19:34",
        "repo": "iqtlabs/crviz",
        "type": "fix",
        "sim_msg": "feat(contentformitemtitle): new tab for tooltip link",
        "sim_diff": "diff --git a/packages/react/src/components/CardEditor/CardEditForm/CardEditFormItems/ContentFormItemTitle.jsx b/packages/react/src/components/CardEditor/CardEditForm/CardEditFormItems/ContentFormItemTitle.jsx @@ -33,7 +33,12 @@ const ContentFormItemTitle = ({ title, tooltip }) => {\ntooltipId={`card-edit-form-${title}`}\n>\n<p>\n- {tooltipText} {href && linkText ? <Link href={href}>{linkText}</Link> : null}\n+ {tooltipText}{' '}\n+ {href && linkText ? (\n+ <Link href={href} target=\"_blank\" rel=\"noopener noreferrer\">\n+ {linkText}\n+ </Link>\n+ ) : null}\n</p>\n</Tooltip>\n) : null}\n",
        "chatgpt_rag": "style(tooltipcontrols): refactor save and remove note buttons"
    },
    {
        "msg": "fix(formfield): relax label propType validator\nFixes",
        "diff": "diff --git a/src/collections/Form/FormField.js b/src/collections/Form/FormField.js @@ -143,11 +143,8 @@ FormField.propTypes = {\nPropTypes.object,\n]),\n- /** A field can show that input is mandatory. Requires a label. */\n- required: customPropTypes.every([\n- customPropTypes.demand(['label']),\n- PropTypes.bool,\n- ]),\n+ /** A field can show that input is mandatory. */\n+ required: PropTypes.bool,\n/** Passed to the control component (i.e. <input type='password' />) */\ntype: customPropTypes.every([\n",
        "date": "24.03.2017 08:23:28",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "sim_msg": "docs(form/input): update errorState docs",
        "sim_diff": "diff --git a/components/form/input/src/index.js b/components/form/input/src/index.js @@ -50,7 +50,7 @@ FormInput.propTypes = {\ndisabled: PropTypes.bool,\n/* 's' or 'm', default: 'm' */\nsize: PropTypes.oneOf(Object.values(inputSizes)),\n- /* optional: 'success' or 'error' */\n+ /* true = error, false = success, null = neutral */\nerrorState: PropTypes.bool,\n/* value of the control */\nvalue: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n",
        "chatgpt_rag": "docs(form/FormField): update required prop docs"
    },
    {
        "msg": "fix(typings): inherit Radio props from Checkbox",
        "diff": "diff --git a/src/addons/Radio/index.d.ts b/src/addons/Radio/index.d.ts import * as React from 'react';\n+import { CheckboxProps } from '../../modules/Checkbox';\n-interface RadioProps {\n+interface RadioProps extends CheckboxProps {\n[key: string]: any;\n/** Format to emphasize the current selection state. */\n",
        "date": "31.01.2017 11:35:54",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "sim_msg": "feat(core-radio): allow boolean proptype for value",
        "sim_diff": "diff --git a/packages/Radio/Radio.jsx b/packages/Radio/Radio.jsx @@ -35,7 +35,7 @@ Radio.propTypes = {\n/**\n* The value. Must be unique within the group.\n*/\n- value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n+ value: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool]).isRequired,\n/**\n* The checked state\n*/\n",
        "chatgpt_rag": "feat(addons-radio): extend RadioProps interface to include CheckboxProps"
    },
    {
        "msg": "fix(babel-preset-razzle): remove experimental babel features",
        "diff": "diff --git a/packages/babel-preset-razzle/package.json b/packages/babel-preset-razzle/package.json \"dependencies\": {\n\"@babel/core\": \"7.11.1\",\n\"@babel/plugin-proposal-class-properties\": \"^7.8.3\",\n- \"@babel/plugin-proposal-decorators\": \"^7.12.12\",\n\"@babel/plugin-proposal-nullish-coalescing-operator\": \"7.10.4\",\n\"@babel/plugin-proposal-numeric-separator\": \"7.10.4\",\n\"@babel/plugin-proposal-object-rest-spread\": \"^7.9.5\",\n\"@babel/preset-typescript\": \"^7.9.0\",\n\"@babel/runtime\": \"^7.9.2\",\n\"babel-plugin-dynamic-import-node\": \"2.3.3\",\n- \"babel-plugin-parameter-decorator\": \"^1.0.16\",\n\"babel-plugin-syntax-jsx\": \"^6.18.0\",\n\"babel-plugin-transform-react-remove-prop-types\": \"0.4.24\",\n\"chalk\": \"^4.1.0\"\n",
        "date": "04.02.2021 00:30:08",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "chore(babel-jest): Upgrading to babel-jest 24.0.0",
        "sim_diff": "diff --git a/package.json b/package.json \"@babel/cli\": \"^7.2.3\",\n\"@babel/core\": \"^7.2.2\",\n\"@babel/plugin-external-helpers\": \"^7.2.0\",\n- \"@babel/plugin-proposal-class-properties\": \"^7.2.3\",\n- \"@babel/plugin-proposal-decorators\": \"^7.2.3\",\n+ \"@babel/plugin-proposal-class-properties\": \"^7.3.0\",\n+ \"@babel/plugin-proposal-decorators\": \"^7.3.0\",\n\"@babel/plugin-proposal-json-strings\": \"^7.2.0\",\n- \"@babel/plugin-proposal-object-rest-spread\": \"^7.2.0\",\n+ \"@babel/plugin-proposal-object-rest-spread\": \"^7.3.1\",\n\"@babel/plugin-syntax-dynamic-import\": \"^7.2.0\",\n\"@babel/plugin-syntax-import-meta\": \"^7.2.0\",\n\"@babel/plugin-transform-modules-commonjs\": \"^7.2.0\",\n\"@babel/plugin-transform-react-constant-elements\": \"^7.2.0\",\n\"@babel/plugin-transform-react-inline-elements\": \"^7.2.0\",\n- \"@babel/preset-env\": \"^7.2.3\",\n+ \"@babel/preset-env\": \"^7.3.1\",\n\"@babel/preset-react\": \"^7.0.0\",\n\"@bootstrap-styled/documentation\": \"^1.2.1\",\n- \"@bootstrap-styled/provider\": \"^1.4.1\",\n+ \"@bootstrap-styled/provider\": \"^1.4.2\",\n\"@rollup-umd/documentation\": \"^1.3.5\",\n\"@semantic-release/changelog\": \"^3.0.2\",\n- \"@semantic-release/git\": \"^7.0.7\",\n- \"@semantic-release/github\": \"^5.2.8\",\n- \"@semantic-release/npm\": \"^5.1.3\",\n- \"babel-core\": \"^7.0.0-bridge.0\",\n+ \"@semantic-release/git\": \"^7.0.8\",\n+ \"@semantic-release/github\": \"^5.2.10\",\n+ \"@semantic-release/npm\": \"^5.1.4\",\n\"babel-eslint\": \"^10.0.1\",\n- \"babel-jest\": \"^23.6.0\",\n- \"babel-loader\": \"^8.0.4\",\n+ \"babel-jest\": \"^24.0.0\",\n+ \"babel-loader\": \"^8.0.5\",\n\"babel-plugin-add-module-exports\": \"^1.0.0\",\n\"babel-plugin-array-includes\": \"^2.0.3\",\n\"babel-plugin-dynamic-import-node\": \"^2.2.0\",\n\"babel-plugin-react-intl\": \"^3.0.1\",\n\"babel-plugin-react-transform\": \"^3.0.0\",\n\"babel-plugin-styled-components\": \"^1.10.0\",\n- \"babel-plugin-transform-react-remove-prop-types\": \"^0.4.21\",\n+ \"babel-plugin-transform-react-remove-prop-types\": \"^0.4.23\",\n\"babel-preset-react-hmre\": \"^1.1.1\",\n\"cz-conventional-changelog\": \"^2.1.0\",\n\"enzyme\": \"^3.8.0\",\n- \"enzyme-adapter-react-16\": \"^1.7.1\",\n- \"eslint\": \"^5.11.1\",\n+ \"enzyme-adapter-react-16\": \"^1.8.0\",\n+ \"eslint\": \"^5.12.1\",\n\"eslint-config-airbnb\": \"^17.1.0\",\n- \"eslint-plugin-import\": \"^2.14.0\",\n- \"eslint-plugin-jsx-a11y\": \"^6.1.2\",\n- \"eslint-plugin-react\": \"^7.12.2\",\n+ \"eslint-plugin-import\": \"^2.16.0\",\n+ \"eslint-plugin-jsx-a11y\": \"^6.2.0\",\n+ \"eslint-plugin-react\": \"^7.12.4\",\n\"immutable\": \"^4.0.0-rc.12\",\n- \"jest-cli\": \"^23.6.0\",\n+ \"jest-cli\": \"^24.0.0\",\n\"jest-sonar-reporter\": \"^2.0.0\",\n- \"lint-staged\": \"^8.1.0\",\n+ \"lint-staged\": \"^8.1.1\",\n\"mini-html-webpack-plugin\": \"^0.2.3\",\n\"pre-commit\": \"^1.2.2\",\n\"raf\": \"^3.4.1\",\n\"react-styleguidist\": \"^8.0.6\",\n\"react-test-renderer\": \"^16.7.0\",\n\"rimraf\": \"^2.6.3\",\n- \"rollup\": \"^1.0.1\",\n- \"rollup-plugin-babel\": \"^4.2.0\",\n- \"rollup-plugin-cleanup\": \"^3.1.0\",\n+ \"rollup\": \"^1.1.2\",\n+ \"rollup-plugin-babel\": \"^4.3.2\",\n+ \"rollup-plugin-cleanup\": \"^3.1.1\",\n\"rollup-plugin-commonjs\": \"^9.2.0\",\n\"rollup-plugin-inject\": \"^2.2.0\",\n\"rollup-plugin-json\": \"^3.1.0\",\n\"rollup-plugin-node-builtins\": \"^2.1.2\",\n\"rollup-plugin-node-resolve\": \"^4.0.0\",\n\"rollup-plugin-replace\": \"^2.1.0\",\n- \"rollup-plugin-terser\": \"^4.0.1\",\n+ \"rollup-plugin-terser\": \"^4.0.3\",\n\"rollup-plugin-visualizer\": \"^0.9.2\",\n\"rollup-watch\": \"^4.3.1\",\n- \"semantic-release\": \"^15.13.2\",\n- \"sinon\": \"^7.2.2\",\n+ \"semantic-release\": \"^15.13.3\",\n+ \"sinon\": \"^7.2.3\",\n\"styled-components\": \"^4.1.3\",\n- \"stylelint\": \"^9.9.0\",\n+ \"stylelint\": \"^9.10.1\",\n\"stylelint-config-recommended\": \"^2.1.0\",\n\"stylelint-config-styled-components\": \"^0.1.1\",\n- \"stylelint-processor-styled-components\": \"^1.5.1\",\n+ \"stylelint-processor-styled-components\": \"^1.5.2\",\n\"toctoc\": \"^0.3.2\",\n- \"webpack\": \"^4.28.3\"\n+ \"webpack\": \"^4.29.0\"\n},\n\"jest\": {\n\"roots\": [\n\"raf/polyfill\"\n],\n\"testURL\": \"http://localhost/\",\n- \"setupTestFrameworkScriptFile\": \"<rootDir>/internals/testing/test-bundler.js\",\n+ \"setupFilesAfterEnv\": [\n+ \"<rootDir>/internals/testing/test-bundler.js\"\n+ ],\n\"testPathIgnorePatterns\": [\n\"<rootDir>/dist/\",\n\"<rootDir>/lib/\"\n\"map-to-css-modules\": \"^1.0.6\",\n\"prop-types\": \"^15.6.2\",\n\"react-portal\": \"^4.2.0\",\n- \"react-transition-group\": \"^2.5.2\",\n+ \"react-transition-group\": \"^2.5.3\",\n\"tether-fix\": \"^1.4.0-fix-es\"\n},\n\"peerDependencies\": {\n",
        "chatgpt_rag": "chore(babel-plugin-proposal-decorators): Remove version 7.12.12 and update to the latest version"
    },
    {
        "msg": "fix(cnumberinput): fix number-input ids created at build time",
        "diff": "diff --git a/packages/chakra-ui-core/src/CNumberInput/CNumberInput.js b/packages/chakra-ui-core/src/CNumberInput/CNumberInput.js @@ -58,8 +58,7 @@ const CNumberInput = {\ndefault: 'md'\n},\ninputId: {\n- type: String,\n- default: `number-input-${useId()}`\n+ type: String\n}\n},\nprovide () {\n",
        "date": "12.05.2020 20:40:13",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "sim_msg": "fix: QInput float label with value 0",
        "sim_diff": "diff --git a/src/components/input/QInput.vue b/src/components/input/QInput.vue @@ -203,7 +203,7 @@ export default {\n: this.type\n},\nlength () {\n- return this.value\n+ return this.value || (this.isNumber && this.value !== null)\n? ('' + this.value).length\n: 0\n}\n",
        "chatgpt_rag": "refactor: Remove default value for inputId in CNumberInput"
    },
    {
        "msg": "fix(Time series): only show comparison when there are 2 or more datasets",
        "diff": "diff --git a/src/App.js b/src/App.js @@ -328,14 +328,14 @@ class App extends Component {\n<div className={style.accordionHeader} onClick={this.toggleShowComparison}>\nComparison {!showComparison && <FontAwesomeIcon icon={faAngleDoubleDown} />}{showComparison && <FontAwesomeIcon onClick={this.toggleShowComparison} icon={faAngleDoubleUp} />}\n</div>\n- { hasDataset &&\n+ { datasetCount >= 2 &&\n<div className={ classNames({ [style.section]: true, [style.hierarchySection]: true, [style.hidden]: !showComparison }) }>\n<ComparisonSelector startUid={startUuid} endUid={endUuid} />\n</div>\n}\n- { !hasDataset &&\n+ { datasetCount < 2 &&\n<div className={ classNames({ [style.section]: true, [style.dimSection]:true, [style.hierarchySection]: true, [style.hidden]: !showComparison }) }>\n- Please select datasets to continue\n+ Please select at least 2 datasets to continue\n</div>\n}\n",
        "date": "09.05.2019 14:57:59",
        "repo": "iqtlabs/crviz",
        "type": "fix",
        "sim_msg": "feat(search-page): implement filtering support",
        "sim_diff": "diff --git a/src/components/pages/search/index.js b/src/components/pages/search/index.js @@ -82,11 +82,22 @@ const Search = withSearch(({ mobile, popoverRef, search }) => {\nreturn id === currentFilterOptionID\n}\n- // todo filter by the currentFilterOption\n+ const isDisplaySection = sectionTypeID => {\n+ if (currentFilterOptionID === sectionTypeID) {\n+ return true\n+ }\n+ if (currentFilterOptionID === 'all') {\n+ return true\n+ }\n+ return false\n+ }\nreturn (\n+ <>\n<div className={searchStyle.wrapper}>\n- <div className={classnames(headerSearchStyle.search, searchStyle.search)}>\n+ <div\n+ className={classnames(headerSearchStyle.search, searchStyle.search)}\n+ >\n<SearchAutocomplete\nref={popoverRef}\nmobile={mobile}\n@@ -101,7 +112,9 @@ const Search = withSearch(({ mobile, popoverRef, search }) => {\n}}\n/>\n- <SearchButton onClick={() => query && navigate(`/search?q=${query}`)} />\n+ <SearchButton\n+ onClick={() => query && navigate(`/search?q=${query}`)}\n+ />\n</div>\n{totalHits > 0 ? (\n<>\n@@ -139,6 +152,7 @@ const Search = withSearch(({ mobile, popoverRef, search }) => {\n</div>\n<div className={searchStyle.searchResults}>\n{/* State results */}\n+ {isDisplaySection('states') && (\n<SearchResultSection\nquery={query}\nresults={results[types.STATE]}\n@@ -155,8 +169,10 @@ const Search = withSearch(({ mobile, popoverRef, search }) => {\n/>\n)}\n/>\n+ )}\n{/* Blog post results */}\n+ {isDisplaySection('blog-posts') && (\n<SearchResultSection\nquery={query}\nresults={results[types.BLOG_POST]}\n@@ -172,8 +188,10 @@ const Search = withSearch(({ mobile, popoverRef, search }) => {\n</>\n)}\n/>\n+ )}\n{/* Pages results */}\n+ {isDisplaySection('pages') && (\n<SearchResultSection\nquery={query}\nresults={results[types.PAGE]}\n@@ -190,12 +208,14 @@ const Search = withSearch(({ mobile, popoverRef, search }) => {\n/>\n)}\n/>\n+ )}\n</div>\n</>\n) : (\n<SearchNoResults query={query} />\n)}\n</div>\n+ </>\n)\n})\n",
        "chatgpt_rag": "fix(app): update dataset selection message to require at least 2 datasets"
    },
    {
        "msg": "fix(docs): fix public path",
        "diff": "diff --git a/config.js b/config.js @@ -66,7 +66,7 @@ const config = {\ncompiler_hash_type: __PROD__ ? 'chunkhash' : 'hash',\ncompiler_fail_on_warning: __TEST__ || __PROD__,\ncompiler_output_path: paths.base(envConfig.dir_docs_dist),\n- compiler_public_path: __PROD__ ? '//raw.github.com/Semantic-Org/Semantic-UI-React/gh-pages/' : '/',\n+ compiler_public_path: '/',\ncompiler_stats: {\nhash: false, // the hash of the compilation\nversion: false, // webpack version info\n",
        "date": "20.08.2017 14:14:52",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "sim_msg": "build(webpack): add hash to output.filename",
        "sim_diff": "diff --git a/webpack.config.js b/webpack.config.js @@ -54,17 +54,17 @@ module.exports = (env = {}) => {\ncomponents: glob.sync('./client/components/**/!(*.spec|*.mock).js'),\nconfig: [\n`./client/app/config/all.${env.region}.js`,\n- `./client/app/config/${env.production ? 'prod' : 'dev'}.${env.region}.js`\n+ `./client/app/config/${env.production ? 'prod' : 'dev'}.${env.region}.js`,\n],\n}, bundles),\noutput: {\npath: path.resolve(__dirname, 'dist'),\n- filename: '[name].bundle.js',\n+ filename: '[name].[hash].bundle.js',\n},\nresolve: {\nalias: {\n- jquery: path.resolve(__dirname, \"node_modules/jquery\")\n- }\n- }\n+ jquery: path.resolve(__dirname, 'node_modules/jquery'),\n+ },\n+ },\n});\n};\n",
        "chatgpt_rag": "build(config): update compiler_public_path to use root path"
    },
    {
        "msg": "fix: support windows by using path.delimiter",
        "diff": "diff --git a/lib/monitor/run.js b/lib/monitor/run.js @@ -64,7 +64,7 @@ function run(options) {\nconst spawnOptions = {\nenv: Object.assign({}, process.env, options.execOptions.env, {\n- PATH: binPath + ':' + process.env.PATH,\n+ PATH: binPath + path.delimiter + process.env.PATH,\n}),\nstdio: stdio,\n};\n",
        "date": "23.02.2022 17:36:11",
        "repo": "remy/nodemon",
        "type": "fix",
        "sim_msg": "chore(example): accept arguments via run-script",
        "sim_diff": "diff --git a/examples/run-example.js b/examples/run-example.js const { spawn } = require('child_process');\n+const [, , ...args] = process.argv;\nconst cwd = process.env.INIT_CWD;\n-spawn('node', ['../../../bin/webpack-dev-server.js'], {\n+spawn('node', ['../../../bin/webpack-dev-server.js', ...args], {\ncwd,\nstdio: 'inherit',\n});\n",
        "chatgpt_rag": "fix(monitor): use path.delimiter instead of hardcoding ':' in PATH variable"
    },
    {
        "msg": "fix: storybook build",
        "diff": "diff --git a/.storybook/components/Canvas.vue b/.storybook/components/Canvas.vue @@ -47,7 +47,7 @@ import {\nCButton,\nCBox,\nCIconButton,\n- CColorModeProvider } from '../../packages/chakra-ui-core/dist/esm'\n+ CColorModeProvider } from '../../packages/chakra-ui-core/src'\nexport default {\nname: 'Canvas',\ncomponents: {\n",
        "date": "08.05.2020 18:06:19",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "sim_msg": "chore: fix logo storybook build",
        "sim_diff": "diff --git a/packages/vue/.storybook/theme.js b/packages/vue/.storybook/theme.js import { create } from \"@storybook/theming/create\";\n+import logo from \"../public/assets/storybook/logo.png\";\nexport default create({\nbase: \"light\",\n@@ -28,5 +29,6 @@ export default create({\nbrandTitle: \"StorefrontUI\",\nbrandUrl: \"https://github.com/Divanteltd/storefront-ui\",\n- brandImage: \"/assets/storybook/logo.png\",\n+ brandImage:\n+ process.env.NODE_ENV === \"production\" ? logo : \"/assets/storybook/logo.png\",\n});\n",
        "chatgpt_rag": "chore: update Chakra UI import path in Canvas.vue file"
    },
    {
        "msg": "perf(Modal): reduce unnecessary layout invalidations\nImprove performance especially in IE11 when a modal is used",
        "diff": "diff --git a/src/modules/Modal/Modal.js b/src/modules/Modal/Modal.js @@ -250,9 +250,10 @@ class Modal extends Component {\nsetDimmerNodeStyle = () => {\ndebug('setDimmerNodeStyle()')\n+ const { current } = this.dimmerRef\n- if (this.dimmerRef.current && this.dimmerRef.current.style) {\n- this.dimmerRef.current.style.setProperty('display', 'flex', 'important')\n+ if (current && current.style && current.style.display !== 'flex') {\n+ current.style.setProperty('display', 'flex', 'important')\n}\n}\n",
        "date": "26.05.2019 18:09:33",
        "repo": "semantic-org/semantic-ui-react",
        "type": "perf",
        "sim_msg": "refactor(modal/basic): format js with new rules",
        "sim_diff": "diff --git a/components/modal/basic/src/index.js b/components/modal/basic/src/index.js @@ -14,12 +14,17 @@ class ModalBasic extends Component {\n}\n}\n- _preventScrollIfNeeded = (e) => {\n+ _preventScrollIfNeeded = e => {\nif (this.noScroll) e.preventDefault()\n}\n_avoidOverscroll = () => {\n- const {clientHeight, offsetHeight, scrollTop, scrollHeight} = this.contentDOMEl\n+ const {\n+ clientHeight,\n+ offsetHeight,\n+ scrollTop,\n+ scrollHeight\n+ } = this.contentDOMEl\nconst currentScroll = scrollTop + offsetHeight\n// check if the content has to scroll in order to prevent the default\n// behaviour of the touchmove in case we don't need the scroll\n@@ -47,29 +52,36 @@ class ModalBasic extends Component {\nthis._closeModal()\n}\n- _handleOutsideClick = (event) => {\n+ _handleOutsideClick = event => {\nif (this.props.closeOnOutsideClick && event.target === this.wrapperDOMEl) {\nthis._closeModal()\n}\n}\n_renderHeader = () => {\n- const { header, iconClose: IconClose, textClose, textCloseHidden } = this.props\n+ const {\n+ header,\n+ iconClose: IconClose,\n+ textClose,\n+ textCloseHidden\n+ } = this.props\nreturn (\n<div\n- className='sui-ModalBasic-header'\n- onTouchMove={(e) => e.preventDefault()}>\n+ className=\"sui-ModalBasic-header\"\n+ onTouchMove={e => e.preventDefault()}\n+ >\n{header}\n<button\n- type='button'\n- className='sui-ModalBasic-close'\n+ type=\"button\"\n+ className=\"sui-ModalBasic-close\"\nonClick={this._handleCloseClick}\n>\n- <IconClose svgClass='sui-ModalBasic-closeIcon' />\n- {textCloseHidden\n- ? <span className='sui-ModalBasic-closeTextHidden'>{textClose}</span>\n- : textClose\n- }\n+ <IconClose svgClass=\"sui-ModalBasic-closeIcon\" />\n+ {textCloseHidden ? (\n+ <span className=\"sui-ModalBasic-closeTextHidden\">{textClose}</span>\n+ ) : (\n+ textClose\n+ )}\n</button>\n</div>\n)\n@@ -100,23 +112,24 @@ class ModalBasic extends Component {\nreturn (\n<div\nclassName={wrapperClassName}\n- ref={node => { this.wrapperDOMEl = node }}\n+ ref={node => {\n+ this.wrapperDOMEl = node\n+ }}\nonClick={this._handleOutsideClick}\n>\n<div className={dialogClassName}>\n{header && this._renderHeader()}\n<div\n- className='sui-ModalBasic-content'\n+ className=\"sui-ModalBasic-content\"\nonTouchStart={this._avoidOverscroll}\nonTouchMove={this._preventScrollIfNeeded}\n- ref={node => { this.contentDOMEl = node }}>\n+ ref={node => {\n+ this.contentDOMEl = node\n+ }}\n+ >\n{content}\n</div>\n- {footer &&\n- <div className='sui-ModalBasic-footer'>\n- {footer}\n- </div>\n- }\n+ {footer && <div className=\"sui-ModalBasic-footer\">{footer}</div>}\n</div>\n</div>\n)\n",
        "chatgpt_rag": "style(modal): update setDimmerNodeStyle method in Modal component"
    },
    {
        "msg": "perf(isISO31661Alpha3): use a Set along with .has instead of includes",
        "diff": "diff --git a/src/lib/isISO31661Alpha3.js b/src/lib/isISO31661Alpha3.js import assertString from './util/assertString';\n-import includes from './util/includes';\n// from https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3\n-const validISO31661Alpha3CountriesCodes = [\n+const validISO31661Alpha3CountriesCodes = new Set([\n'AFG', 'ALA', 'ALB', 'DZA', 'ASM', 'AND', 'AGO', 'AIA', 'ATA', 'ATG', 'ARG', 'ARM', 'ABW', 'AUS', 'AUT', 'AZE',\n'BHS', 'BHR', 'BGD', 'BRB', 'BLR', 'BEL', 'BLZ', 'BEN', 'BMU', 'BTN', 'BOL', 'BES', 'BIH', 'BWA', 'BVT', 'BRA',\n'IOT', 'BRN', 'BGR', 'BFA', 'BDI', 'KHM', 'CMR', 'CAN', 'CPV', 'CYM', 'CAF', 'TCD', 'CHL', 'CHN', 'CXR', 'CCK',\n@@ -19,9 +18,9 @@ const validISO31661Alpha3CountriesCodes = [\n'ESP', 'LKA', 'SDN', 'SUR', 'SJM', 'SWZ', 'SWE', 'CHE', 'SYR', 'TWN', 'TJK', 'TZA', 'THA', 'TLS', 'TGO', 'TKL',\n'TON', 'TTO', 'TUN', 'TUR', 'TKM', 'TCA', 'TUV', 'UGA', 'UKR', 'ARE', 'GBR', 'USA', 'UMI', 'URY', 'UZB', 'VUT',\n'VEN', 'VNM', 'VGB', 'VIR', 'WLF', 'ESH', 'YEM', 'ZMB', 'ZWE',\n-];\n+]);\nexport default function isISO31661Alpha3(str) {\nassertString(str);\n- return includes(validISO31661Alpha3CountriesCodes, str.toUpperCase());\n+ return validISO31661Alpha3CountriesCodes.has(str.toUpperCase());\n}\n",
        "date": "26.09.2021 17:56:30",
        "repo": "validatorjs/validator.js",
        "type": "perf",
        "sim_msg": "test(core-unordered-list): update to use",
        "sim_diff": "diff --git a/packages/UnorderedList/__tests__/__snapshots__/UnorderedList.spec.jsx.snap b/packages/UnorderedList/__tests__/__snapshots__/UnorderedList.spec.jsx.snap @@ -8,7 +8,7 @@ exports[`<UnorderedList /> renders 1`] = `\nclass=\"circle medium item\"\n>\n<span\n- class=\"TDS_Typography-modules__medium___1DC1g TDS_Typography-modules__wordBreak___3dmWU TDS_Typography-modules__mediumFont___2ULml TDS_Typography-modules__color___1Jt_W\"\n+ class=\"TDS_Typography-modules__medium___1rxfE TDS_Typography-modules__wordBreak___3OZx_ TDS_Typography-modules__mediumFont___XMrRj TDS_Typography-modules__color___2CNH8\"\n>\nLorem ipsum\n</span>\n@@ -17,7 +17,7 @@ exports[`<UnorderedList /> renders 1`] = `\nclass=\"circle medium item\"\n>\n<span\n- class=\"TDS_Typography-modules__medium___1DC1g TDS_Typography-modules__wordBreak___3dmWU TDS_Typography-modules__mediumFont___2ULml TDS_Typography-modules__color___1Jt_W\"\n+ class=\"TDS_Typography-modules__medium___1rxfE TDS_Typography-modules__wordBreak___3OZx_ TDS_Typography-modules__mediumFont___XMrRj TDS_Typography-modules__color___2CNH8\"\n>\nDolor sit amet\n</span>\n",
        "chatgpt_rag": "refactor(lib-isISO31661Alpha3): update validISO31661Alpha3CountriesCodes to use Set instead of array"
    },
    {
        "msg": "perf(regl-renderer): use webgl2 as default context or enable OES_element_index_uint extension\nupdated viewer to use either webgl2 or OES_element_index_uint extension",
        "diff": "diff --git a/packages/web/src/ui/views/viewer.js b/packages/web/src/ui/views/viewer.js @@ -53,6 +53,7 @@ const viewer = (state, i18n) => {\nif (!render) {\nconst options = setup(el)\n+ if (options.error) return html`<b style=\"color:red; background:white; position:fixed; z-index:10; top:50%\">${options.error}</b>`\nviewerOptions = options.viewerOptions\ncamera = options.camera\nrender = prepareRender(viewerOptions)\n@@ -191,13 +192,32 @@ const viewer = (state, i18n) => {\nreturn el\n}\n+const createContext = (canvas, contextAttributes) => {\n+ const get = (type) => {\n+ try {\n+ return { gl: canvas.getContext(type, contextAttributes), type }\n+ } catch (e) {\n+ return null\n+ }\n+ }\n+ return (\n+ get('webgl2') ||\n+ get('webgl') ||\n+ get('experimental-webgl') ||\n+ get('webgl-experimental')\n+ )\n+}\n+\nconst setup = (element) => {\n// prepare the camera\n+ let error\nconst camera = Object.assign({}, perspectiveCamera.defaults)\ncamera.position = [150, -180, 233]\n+ const { gl, type } = createContext(element)\n+\nconst viewerOptions = {\n- glOptions: { canvas: element },\n+ glOptions: { gl },\ncamera,\ndrawCommands: {\n// draw commands bootstrap themselves the first time they are run\n@@ -209,7 +229,14 @@ const setup = (element) => {\n// data\nentities: []\n}\n- return { viewerOptions, camera }\n+ if (type === 'webgl') {\n+ if (!gl.getExtension('OES_element_index_uint')) {\n+ error = 'Your browser uses an old version of WebGL without OES_element_index_uint. Please upgrade your browser to use this application'\n+ }\n+\n+ viewerOptions.glOptions.optionalExtensions = ['oes_element_index_uint']\n+ }\n+ return { viewerOptions, camera, error }\n}\nconst resize = (viewerElement) => {\n",
        "date": "12.08.2021 18:56:19",
        "repo": "jscad/openjscad.org",
        "type": "perf",
        "sim_msg": "feat(Context Menu): Add \"Go Back\" and \"Go Forward\"",
        "sim_diff": "diff --git a/src/webview/contextMenu.js b/src/webview/contextMenu.js @@ -27,6 +27,9 @@ const buildMenuTpl = (props, suggestions) => {\nconst hasText = textSelection.length > 0;\nconst can = type => editFlags[`can${type}`] && hasText;\n+ const canGoBack = webContents.canGoBack();\n+ const canGoForward = webContents.canGoForward();\n+\nlet menuTpl = [\n{\ntype: 'separator',\n@@ -165,6 +168,28 @@ const buildMenuTpl = (props, suggestions) => {\n}));\n}\n+ if (canGoBack || canGoForward) {\n+ menuTpl.push({\n+ type: 'separator',\n+ }, {\n+ id: 'goBack',\n+ label: 'Go Back',\n+ enabled: canGoBack,\n+ click() {\n+ webContents.goBack();\n+ },\n+ }, {\n+ id: 'goForward',\n+ label: 'Go Forward',\n+ enabled: canGoForward,\n+ click() {\n+ webContents.goForward();\n+ },\n+ }, {\n+ type: 'separator',\n+ });\n+ }\n+\nif (isDevMode) {\nmenuTpl.push({\ntype: 'separator',\n@@ -174,8 +199,6 @@ const buildMenuTpl = (props, suggestions) => {\nclick() {\nwebContents.inspectElement(props.x, props.y);\n},\n- }, {\n- type: 'separator',\n});\n}\n",
        "chatgpt_rag": "feat(Viewer): Add error handling for WebGL context creation"
    },
    {
        "msg": "perf(swipe-cell): avoid useless animate\nfix",
        "diff": "diff --git a/packages/swipe-cell/index.ts b/packages/swipe-cell/index.ts @@ -120,7 +120,11 @@ VantComponent({\n}\nthis.dragging = true;\n- ARRAY.filter((item) => item !== this).forEach((item) => item.close());\n+\n+ ARRAY.filter(\n+ (item) => item !== this && item.offset !== 0\n+ ).forEach((item) => item.close());\n+\nthis.setData({ catchMove: true });\nthis.swipeMove(this.startOffset + this.deltaX);\n},\n",
        "date": "31.12.2020 17:05:49",
        "repo": "youzan/vant-weapp",
        "type": "perf",
        "sim_msg": "chore(h5): swiper navigation click event stopPropagation",
        "sim_diff": "diff --git a/src/core/view/components/swiper/index.vue b/src/core/view/components/swiper/index.vue @@ -635,7 +635,9 @@ export default {\nthis.circularEnabled ? 1 : 0\n)\n},\n- _navigationClick (type) {\n+ _navigationClick ($event, type) {\n+ $event.stopPropagation()\n+\nconst swiperItemLength = this.items.length\nlet _current = this.currentSync\n@@ -783,7 +785,7 @@ export default {\n'div',\n{\non: {\n- click: () => this._navigationClick('prev'),\n+ click: (e) => this._navigationClick(e, 'prev'),\n...navigationEvent\n},\nclass: [\n@@ -801,7 +803,7 @@ export default {\n'div',\n{\non: {\n- click: () => this._navigationClick('next'),\n+ click: (e) => this._navigationClick(e, 'next'),\n...navigationEvent\n},\nclass: [\n",
        "chatgpt_rag": "fix: improve swipe cell behavior when closing other items with offset not equal to 0"
    },
    {
        "msg": "perf: instantiate errors lazily",
        "diff": "diff --git a/addon/model.js b/addon/model.js @@ -78,7 +78,7 @@ export default class MegamorphicModel extends EmberObject {\nthis._topModel = this._topModel || this;\nthis._parentModel = this._parentModel || null;\n- this._errors = DS.Errors.create();\n+ this._errors = null;\nthis._init = true;\nif (!CUSTOM_MODEL_CLASS) {\nthis._internalModel = properties._internalModel;\n@@ -487,16 +487,16 @@ export default class MegamorphicModel extends EmberObject {\n_removeError(key) {\n// Remove errors for the property\n- this._errors.remove(key);\n+ this.errors.remove(key);\nif (CUSTOM_MODEL_CLASS) {\n- if (get(this._errors, 'length') === 0) {\n+ if (get(this.errors, 'length') === 0) {\nthis._clearInvalidRequestErrors();\n}\n} else {\nif (\nthis._internalModel.currentState &&\n!this._internalModel.currentState.isValid &&\n- get(this._errors, 'length') === 0\n+ get(this.errors, 'length') === 0\n) {\nthis._updateCurrentState(updatedUncommitted);\n}\n@@ -514,6 +514,9 @@ export default class MegamorphicModel extends EmberObject {\n// Errors hash that will get update,\n// upon validation errors\nget errors() {\n+ if (this._errors === null) {\n+ this._errors = DS.Errors.create();\n+ }\nreturn this._errors;\n}\n}\n",
        "date": "11.12.2019 13:28:52",
        "repo": "hjdivad/ember-m3",
        "type": "perf",
        "sim_msg": "fix(modal): remove resize handler when modal destroyed",
        "sim_diff": "diff --git a/src/components/modal/CdrModal.jsx b/src/components/modal/CdrModal.jsx @@ -59,6 +59,7 @@ export default {\nkeyHandler: null,\nlastActive: null,\nfocusHandler: null,\n+ resizeHandler: null,\nisOpening: false,\noffset: null,\nheaderHeight: 0,\n@@ -116,15 +117,18 @@ export default {\nthis.handleOpened();\n}\n- window.addEventListener('resize', debounce(() => {\n+ this.resizeHandler = debounce(() => {\nthis.measureContent();\n- }, 300));\n+ }, 300);\n+\n+ window.addEventListener('resize', this.resizeHandler);\n},\nbeforeDestroy() {\nif (this.unsubscribe) this.unsubscribe();\nif (this.opened) this.removeNoScroll();\ndocument.removeEventListener('focusin', this.focusHandler, true);\ndocument.removeEventListener('keydown', this.keyHandler);\n+ window.removeEventListener('resize', this.resizeHandler);\n},\nmethods: {\nmeasureContent() {\n",
        "chatgpt_rag": "refactor(model): refactor errors handling logic in MegamorphicModel class"
    },
    {
        "msg": "refactor(package): update deploy scripts [ci skip]",
        "diff": "diff --git a/package.json b/package.json \"build:docs-cname\": \"echo react.semantic-ui.com > docs/build/CNAME\",\n\"predeploy:docs\": \"cross-env NODE_ENV=production yarn build:docs && yarn build:docs-cname\",\n\"deploy:docs\": \"gh-pages -d docs/build -m 'deploy docs [ci skip]'\",\n+ \"postdeploy:docs\": \"github_changelog_generator && gach 'docs(changelog): update changelog [ci skip]\",\n\"lint\": \"cross-env NODE_ENV=production eslint .\",\n\"lint:fix\": \"yarn lint -- --fix\",\n\"prerelease\": \"yarn lint && yarn tsd:lint && npm test && cross-env NODE_ENV=production yarn build\",\n- \"postrelease\": \"NODE_ENV=production yarn deploy:docs\",\n- \"prerelease:major\": \"yarn prerelease\",\n- \"prerelease:minor\": \"yarn prerelease\",\n- \"prerelease:patch\": \"yarn prerelease\",\n- \"release:major\": \"ta-script npm/release major\",\n- \"release:minor\": \"ta-script npm/release minor\",\n- \"release:patch\": \"ta-script npm/release patch\",\n+ \"postrelease\": \"yarn deploy:docs\",\n+ \"release:major\": \"yarn prerelease && ta-script npm/release major && yarn postrelease\",\n+ \"release:minor\": \"yarn prerelease && ta-script npm/release minor && yarn postrelease\",\n+ \"release:patch\": \"yarn prerelease && ta-script npm/release patch && yarn postrelease\",\n\"prestart\": \"yarn satisfied -- --fix yarn\",\n\"start\": \"yarn docs\",\n\"satisfied\": \"satisfied --skip-invalid\",\n",
        "date": "24.09.2017 12:56:58",
        "repo": "semantic-org/semantic-ui-react",
        "type": "refactor",
        "sim_msg": "chore: Ensure alphabetical order of scripts",
        "sim_diff": "diff --git a/package.json b/package.json \"scripts\": {\n\"commitlint\": \"commitlint -f HEAD@{15}\",\n\"commitlint:pull-request\": \"commitlint -f HEAD~1\",\n- \"prepare-release\": \"standard-version && prettier --write CHANGELOG.md\",\n- \"test\": \"mocha \\\"!(node_modules)/**/*.test.js\\\"\",\n- \"test:ci\": \"npm run prettier-check:updated && npm run lint:updated && npm run test:isolated\",\n- \"test:isolated\": \"mocha-isolated\",\n\"coverage\": \"nyc npm test\",\n+ \"integration-test-cleanup\": \"node tests/utils/aws-cleanup.js\",\n+ \"integration-test-run-all\": \"mocha-isolated --pass-through-aws-creds --skip-fs-cleanup-check --max-workers=20 tests/integration-all/**/tests.js\",\n+ \"integration-test-run-basic\": \"mocha tests/integration-basic/tests.js\",\n+ \"integration-test-run-package\": \"mocha-isolated --skip-fs-cleanup-check tests/integration-package/**/*.tests.js\",\n\"lint\": \"eslint . --cache\",\n\"lint:fix\": \"npm run lint -- --fix\",\n\"lint:updated\": \"pipe-git-updated --ext=js -- eslint --cache\",\n- \"integration-test-run-package\": \"mocha-isolated --skip-fs-cleanup-check tests/integration-package/**/*.tests.js\",\n- \"integration-test-run-basic\": \"mocha tests/integration-basic/tests.js\",\n- \"integration-test-run-all\": \"mocha-isolated --pass-through-aws-creds --skip-fs-cleanup-check --max-workers=20 tests/integration-all/**/tests.js\",\n- \"integration-test-cleanup\": \"node tests/utils/aws-cleanup.js\",\n\"postinstall\": \"node ./scripts/postinstall.js\",\n+ \"prepare-release\": \"standard-version && prettier --write CHANGELOG.md\",\n\"prettier-check\": \"prettier -c --ignore-path .gitignore \\\"**/*.{css,html,js,json,md,yaml,yml}\\\"\",\n\"prettier-check:updated\": \"pipe-git-updated --ext=css --ext=html --ext=js --ext=json --ext=md --ext=yaml --ext=yml -- prettier -c\",\n\"prettify\": \"prettier --write --ignore-path .gitignore \\\"**/*.{css,html,js,json,md,yaml,yml}\\\"\",\n- \"prettify:updated\": \"pipe-git-updated --ext=css --ext=html --ext=js --ext=json --ext=md --ext=yaml --ext=yml -- prettier --write\"\n+ \"prettify:updated\": \"pipe-git-updated --ext=css --ext=html --ext=js --ext=json --ext=md --ext=yaml --ext=yml -- prettier --write\",\n+ \"test\": \"mocha \\\"!(node_modules)/**/*.test.js\\\"\",\n+ \"test:ci\": \"npm run prettier-check:updated && npm run lint:updated && npm run test:isolated\",\n+ \"test:isolated\": \"mocha-isolated\"\n},\n\"eslintConfig\": {\n\"extends\": \"@serverless/eslint-config/node\",\n",
        "chatgpt_rag": "chore: Update release scripts and add postdeploy script for docs deployment"
    },
    {
        "msg": "refactor: Flipping prerender() detection to last script in HTML",
        "diff": "diff --git a/packages/wmr/src/lib/prerender.js b/packages/wmr/src/lib/prerender.js @@ -70,13 +70,13 @@ async function workerCode({ cwd, out, publicPath, customRoutes }) {\n// Grab the generated HTML file, which we'll use as a template:\nconst tpl = await fs.readFile(path.resolve(cwd, out, 'index.html'), 'utf-8');\n- // The first script in the file that is not external is assumed to have a\n+ // The last script in the file that is not external is assumed to have a\n// `prerender` export\nlet script;\nconst SCRIPT_TAG = /<script(?:\\s[^>]*?)?\\s+src=(['\"]?)([^>]*?)\\1(?:\\s[^>]*?)?>/g;\nlet match;\n- while ((match = SCRIPT_TAG.exec(tpl)) && !script) {\n+ while ((match = SCRIPT_TAG.exec(tpl))) {\n// Ignore external urls\nif (!match || /^(?:https?|file|data)/.test(match[2])) continue;\n@@ -103,7 +103,7 @@ async function workerCode({ cwd, out, publicPath, customRoutes }) {\n// const App = m.default || m[Object.keys(m)[0]];\nif (typeof doPrerender !== 'function') {\n- throw Error(`No prerender() function was exported by the first <script src=\"...\"> in your index.html.`);\n+ throw Error(`No prerender() function was exported by the last non-external <script src=\"...\"> in your index.html.`);\n}\n/**\n",
        "date": "23.01.2022 22:20:07",
        "repo": "preactjs/wmr",
        "type": "refactor",
        "sim_msg": "docs: redirect error to the correct url",
        "sim_diff": "diff --git a/packages/next/export/worker.js b/packages/next/export/worker.js @@ -276,7 +276,7 @@ export default async function({\nreturn results\n} catch (error) {\nconsole.error(\n- `\\nError occurred prerendering page \"${path}\". Read more: https://err.sh/next.js/prerender-error:\\n` +\n+ `\\nError occurred prerendering page \"${path}\". Read more: https://err.sh/next.js/prerender-error\\n` +\nerror\n)\nreturn { ...results, error: true }\n",
        "chatgpt_rag": "docs: update error message to specify the last non-external script with prerender function"
    },
    {
        "msg": "refactor: deprecated `.avatar-rounded` and `.avatar-square`",
        "diff": "diff --git a/scss/_avatar.scss b/scss/_avatar.scss display: inline-flex;\nalign-items: center;\njustify-content: center;\n- border-radius: 50em;\n+ vertical-align: middle;\n+ @include border-radius(50em);\n@include avatar($avatar-width,$avatar-status-width);\n}\n.avatar-img {\nwidth: 100%;\nheight: auto;\n- border-radius: 50em;\n+ @include border-radius(50em);\n}\n.avatar-status {\nbottom: 0;\ndisplay: block;\nborder: 1px solid $white;\n- border-radius: 50em;\n+ @include border-radius(50em);\n// @include ltr {\n// right: 0;\nmargin-right: - ($avatar-xl-width / 2);\n}\n}\n-\n-.avatar-rounded {\n- border-radius: $border-radius;\n-}\n-\n-.avatar-square {\n- border-radius: 0;\n-}\n",
        "date": "03.01.2021 12:03:24",
        "repo": "coreui/coreui",
        "type": "refactor",
        "sim_msg": "feat: added ability to hide scroll and padding from Avatar Group overflow body(#2406)",
        "sim_diff": "diff --git a/src/avatar-group.scss b/src/avatar-group.scss @@ -93,6 +93,18 @@ $block: #{$fd-namespace}-avatar-group;\npadding: 1rem;\nwhite-space: initial;\n+ &--no-padding {\n+ padding: 0;\n+ }\n+\n+ &--no-horizontal-scroll {\n+ overflow-x: hidden;\n+ }\n+\n+ &--no-vertical-scroll {\n+ overflow-y: hidden;\n+ }\n+\n.#{$block}__item {\nmargin: 0.25rem;\n}\n",
        "chatgpt_rag": "style: updated border-radius styling in Avatar component (#2407)"
    },
    {
        "msg": "refactor: use new handle feature for dialog",
        "diff": "diff --git a/packages/veui/src/components/Dialog.vue b/packages/veui/src/components/Dialog.vue @afterclose=\"handleAfterClose\"\n>\n<div\n- ref=\"content\"\n+ v-drag.translate=\"{\n+ disabled: !draggable,\n+ containment: '@window',\n+ handle: 'head',\n+ ready: dragReady\n+ }\"\nv-outside=\"outside\"\n:class=\"$c('dialog-content')\"\ntabindex=\"-1\"\n@keydown.esc=\"handleEscape\"\n>\n<div\n- v-drag:content.translate=\"{\n- draggable,\n- containment: '@window',\n- ready: dragReady\n- }\"\n+ ref=\"head\"\n:class=\"{\n[$c('dialog-content-head')]: true,\n[$c('dialog-draggable')]: draggable\n",
        "date": "28.06.2021 21:38:15",
        "repo": "ecomfe/veui",
        "type": "refactor",
        "sim_msg": "feat(plugin-typescript): add all recommended tsconfig",
        "sim_diff": "diff --git a/packages/@vue/cli-plugin-typescript/generator/template/tsconfig.json b/packages/@vue/cli-plugin-typescript/generator/template/tsconfig.json \"module\": \"esnext\",\n\"strict\": true,\n\"jsx\": \"preserve\",\n+ <%_ if (!options.useTsWithBabel) { _%>\n\"importHelpers\": true,\n+ <%_ } _%>\n\"moduleResolution\": \"node\",\n<%_ if (options.classComponent) { _%>\n\"experimentalDecorators\": true,\n<%_ } _%>\n\"esModuleInterop\": true,\n\"allowSyntheticDefaultImports\": true,\n+ \"forceConsistentCasingInFileNames\": true,\n\"useDefineForClassFields\": true,\n\"sourceMap\": true,\n\"baseUrl\": \".\",\n",
        "chatgpt_rag": "feat(components): add drag and drop functionality to Dialog component"
    },
    {
        "msg": "refactor: minor tweak to part fn exp",
        "diff": "diff --git a/packages/veui-theme-dls/components/NumberInput.js b/packages/veui-theme-dls/components/NumberInput.js @@ -32,12 +32,8 @@ config.defaults(\nspinner: ''\n},\nicons: {\n- increase ({ style }) {\n- return ICON_MAP[style].increase\n- },\n- decrease ({ style }) {\n- return ICON_MAP[style].decrease\n- }\n+ increase: ({ style }) => ICON_MAP[style].increase,\n+ decrease: ({ style }) => ICON_MAP[style].decrease\n}\n},\n'numberinput'\n",
        "date": "09.12.2019 17:28:33",
        "repo": "ecomfe/veui",
        "type": "refactor",
        "sim_msg": "fix: [firefox] Numeric component needs \"step\" set to \"any\" to avoid validation error",
        "sim_diff": "diff --git a/src/vue-components/numeric/Numeric.vue b/src/vue-components/numeric/Numeric.vue :readonly=\"readonly\"\n:style=\"{width: (''+model).length * .7 + 'em'}\"\ntabindex=\"0\"\n+ step=\"any\"\n>\n<i v-show=\"value !== model && model !== ''\">check</i>\n<i @click=\"__setByOffset(1)\">add</i>\n",
        "chatgpt_rag": "refactor: Simplify the icons object in NumberInput component by using arrow functions for increase and decrease properties"
    },
    {
        "msg": "refactor: update scrollbars styles for Windows browsers",
        "diff": "diff --git a/scss/sidebar/_sidebar-nav.scss b/scss/sidebar/_sidebar-nav.scss overflow-y: auto;\nlist-style: none;\n+ // Firefox scrollbars\n+ @-moz-document url-prefix() {\n+ scrollbar-width: thin;\n+ }\n+\n+ // Chrome, Edge scrollbars\n+\n+ /* total width */\n+ &::-webkit-scrollbar {\n+ width: 8px;\n+ background-color: transparent;\n+ }\n+\n+ /* background of the scrollbar except button or resizer */\n+ &::-webkit-scrollbar-track {\n+ background-color: transparent;\n+ }\n+\n+ /* scrollbar itself */\n+ &::-webkit-scrollbar-thumb {\n+ background-color: rgba(0, 0, 0, .375);\n+ @include border-radius(8px);\n+ }\n+\n+ /* set button(top and bottom of the scrollbar) */\n+ &::-webkit-scrollbar-button {\n+ display: none;\n+ }\n+\n.nav-title {\npadding: $sidebar-nav-title-padding-y $sidebar-nav-title-padding-x;\nmargin-top: $sidebar-nav-title-margin-top;\n",
        "date": "26.05.2021 00:27:26",
        "repo": "coreui/coreui",
        "type": "refactor",
        "sim_msg": "chore(list-module): snapshot update",
        "sim_diff": "diff --git a/src/__tests__/scss/__snapshots__/SCSS.spec.js.snap b/src/__tests__/scss/__snapshots__/SCSS.spec.js.snap @@ -27229,6 +27229,12 @@ a.bx--navigation-link:focus {\nmargin-top: 0;\n}\n+.security--unstable--layout__module--list-item__profile-image {\n+ margin-right: 0.75rem;\n+ height: 24px;\n+ width: 24px;\n+}\n+\n.security--unstable--layout__module--list-item__title {\nfont-size: 0.875rem;\nfont-weight: 400;\n@@ -27243,7 +27249,7 @@ a.bx--navigation-link:focus {\n.security--unstable--layout__module--list-item__description {\nfont-size: 0.875rem;\nfont-weight: 400;\n- line-height: 1.43;\n+ line-height: 1.29;\nletter-spacing: 0.16px;\n}\n@@ -27253,7 +27259,7 @@ a.bx--navigation-link:focus {\nline-height: 1.34;\nletter-spacing: 0.32px;\ndisplay: block;\n- margin-top: 0.25rem;\n+ padding-top: 0.25rem;\n}\n.security--unstable--layout__module--list-item__title, .security--unstable--layout__module--list-item__description, .security--unstable--layout__module--list-item__label {\n@@ -27270,7 +27276,7 @@ a.bx--navigation-link:focus {\n}\n.security--unstable--layout__module--list-item__component {\n- margin-top: 1rem;\n+ padding-top: 1rem;\nmargin-bottom: 0;\n}\n",
        "chatgpt_rag": "style(sidebar): update scrollbar styles for Firefox and Chrome/Edge"
    },
    {
        "msg": "refactor: use more semantic variable names, update changelog",
        "diff": "diff --git a/packages/veui/src/managers/rule.js b/packages/veui/src/managers/rule.js @@ -5,6 +5,7 @@ import max from './rules/max'\nimport min from './rules/min'\nimport numeric from './rules/numeric'\nimport pattern from './rules/pattern'\n+import type from './type'\nimport { isObject, isFunction } from 'lodash'\n/**\n@@ -31,15 +32,16 @@ export class Rule {\n}\n}\n- validate (val, rules, formData) {\n+ validate (val, rules, context) {\nif (!rules || !rules.length) {\nreturn true\n}\nrules = Array.isArray(rules) ? rules : [rules]\n+ let contextData = type.clone(context)\nlet results = rules.map(rule => {\nlet validator = this.ruleValidators[rule.name]\n- if (!validator.validate(val, rule.value, formData)) {\n+ if (!validator.validate(val, rule.value, contextData)) {\nlet realMessage = rule.message || validator.message\nreturn {\nname: rule.name,\n",
        "date": "14.10.2018 13:06:15",
        "repo": "ecomfe/veui",
        "type": "refactor",
        "sim_msg": "refactor: host://",
        "sim_diff": "diff --git a/lib/rules/rules.js b/lib/rules/rules.js @@ -750,10 +750,15 @@ proto.getHost = function(url, pluginRulesMgr, rulesFileMgr, headerRulesMgr) {\nif (filterHost) {\nreturn;\n}\n- return (pluginRulesMgr && getRule(url, pluginRulesMgr._rules.host, pluginRulesMgr._values))\n+ var host = (pluginRulesMgr && getRule(url, pluginRulesMgr._rules.host, pluginRulesMgr._values))\n|| getRule(url, this._rules.host, vals)\n|| (rulesFileMgr && getRule(url, rulesFileMgr._rules.host, vals))\n|| (headerRulesMgr && getRule(url, headerRulesMgr._rules.host, vals));\n+ if (host && PORT_RE.test(host.matcher)) {\n+ host.matcher = RegExp.$1;\n+ host.port = RegExp.$2;\n+ }\n+ return host;\n};\nproto.resolveFilter = function(url) {\n",
        "chatgpt_rag": "feat: add type import and context data handling in validate function"
    },
    {
        "msg": "refactor: use const replace string",
        "diff": "diff --git a/src/use/emitter.js b/src/use/emitter.js import { getCurrentInstance } from 'vue'\nimport mitt from 'mitt'\n+const DISPATCH = 'dispatch'\n+const BROADCAST = 'broadcast'\n+\n+const wrapper = Symbol('wrapper')\n+\nconst emitter = mitt()\nexport function useEmitter() {\n@@ -9,11 +14,11 @@ export function useEmitter() {\nfunction on(type, handler) {\nconst handleWrapper = (e) => {\nconst { value, type, emitComponentInstance } = e\n- if (type === 'broadcast') {\n+ if (type === BROADCAST) {\nif (isChildComponent(currentComponentInstance, emitComponentInstance)) {\nhandler && handler(value)\n}\n- } else if (type === 'dispatch') {\n+ } else if (type === DISPATCH) {\nif (isChildComponent(emitComponentInstance, currentComponentInstance)) {\nhandler && handler(value)\n}\n@@ -23,13 +28,13 @@ export function useEmitter() {\n}\n// Save the real handler because the need to call off\n- handler.wrapper = handleWrapper\n+ handler[wrapper] = handleWrapper\nemitter.on(type, handleWrapper)\n}\nfunction broadcast(type, evt) {\nemitter.emit(type, {\n- type: 'broadcast',\n+ type: BROADCAST,\nemitComponentInstance: currentComponentInstance,\nvalue: evt\n})\n@@ -37,14 +42,14 @@ export function useEmitter() {\nfunction dispatch(type, evt) {\nemitter.emit(type, {\n- type: 'dispatch',\n+ type: DISPATCH,\nemitComponentInstance: currentComponentInstance,\nvalue: evt\n})\n}\nfunction off(type, handler) {\n- emitter.off(type, handler.wrapper)\n+ emitter.off(type, handler[wrapper])\n}\nfunction emit(type, evt) {\n",
        "date": "11.09.2020 20:19:55",
        "repo": "hug-sun/element3",
        "type": "refactor",
        "sim_msg": "feat(redux-module-media): update to group supported call events",
        "sim_diff": "diff --git a/packages/node_modules/@ciscospark/redux-module-media/src/actions.js b/packages/node_modules/@ciscospark/redux-module-media/src/actions.js @@ -156,9 +156,9 @@ export function listenForIncomingCalls(sparkInstance, locusUrl) {\nconst removeIncoming = () => dispatch(removeCall(incomingCall));\n// Disconnects will happen if the remote party hangs up before we accept/decline\n- incomingCall.once(`disconnected`, removeIncoming);\n+ incomingCall.once(`inactive`, removeIncoming);\n// Once we are connected, our connected call state will handle disconnects\n- incomingCall.once(`connected`, () => incomingCall.off(`disconnected`, removeIncoming));\n+ incomingCall.once(`active`, () => incomingCall.off(`inactive`, removeIncoming));\nreturn bindEvents(dispatch, incomingCall);\n});\n});\n@@ -219,8 +219,8 @@ function constructCallState(call) {\n// Do nothing\n}\nreturn {\n+ state: call.state,\ndirection: call.direction,\n- joined: call.joined,\njoinedOnThisDevice: call.joinedOnThisDevice,\nconnected: call.status === `connected`,\nringing: call.status === `ringing`,\n@@ -239,9 +239,10 @@ function constructCallState(call) {\n}\nfunction bindEvents(dispatch, call, locusUrl) {\n- call.once(`connected`, () => dispatch(connectCall(call)));\n- call.once(`disconnected`, () => dispatch(hangupCall(call)));\n+ call.once(`active`, () => dispatch(connectCall(call)));\n+ call.once(`inactive`, () => dispatch(hangupCall(call)));\ncall.on(`change:status`, () => dispatch(updateCallState(call, locusUrl)));\n+ call.on(`change:state`, () => dispatch(updateCallState(call, locusUrl)));\ncall.on(`change:sendingAudio`, () => dispatch(updateCallState(call, locusUrl)));\ncall.on(`change:receivingAudio`, () => dispatch(updateCallState(call, locusUrl)));\ncall.on(`change:sendingVideo`, () => dispatch(updateCallState(call, locusUrl)));\n@@ -250,7 +251,6 @@ function bindEvents(dispatch, call, locusUrl) {\ncall.on(`remoteVideoMuted:change`, () => dispatch(updateCallState(call, locusUrl)));\ncall.on(`remoteMediaStream:change`, () => dispatch(updateCallState(call, locusUrl)));\ncall.on(`localMediaStream:change`, () => dispatch(updateCallState(call, locusUrl)));\n- call.on(`change:joined`, () => dispatch(updateCallState(call, locusUrl)));\ncall.on(`change:joinedOnThisDevice`, () => dispatch(updateCallState(call, locusUrl)));\n}\n",
        "chatgpt_rag": "refactor(emitter): update event handling logic to use constants and symbols"
    },
    {
        "msg": "refactor(readability): remove multline and add comma",
        "diff": "diff --git a/src/features/visualization/d3-viz.js b/src/features/visualization/d3-viz.js @@ -219,7 +219,10 @@ function d3Viz(rootNode) {\nnodeRoot.on(\"click.select\", () => {\nconst datum = select(d3Event.target).datum();\n- if(datum.data !== undefined) {props.sendData(datum.data)} //Used to send data back to parent component Visualizations.js\n+ if(datum.data !== undefined) {\n+ //Used to send data back to parent component Visualizations.js\n+ props.sendData(datum.data);\n+ };\nlet zoomToNode = datum;\nif(datum.height === 0 && datum.parent){\nzoomToNode = datum.parent;\n@@ -290,4 +293,4 @@ const findAncestor = (node, hierarchy) => {\nreturn res;\n};\n-export default d3Viz\n+export default d3Viz;\n",
        "date": "16.07.2019 10:59:19",
        "repo": "iqtlabs/crviz",
        "type": "refactor",
        "sim_msg": "feat(Dialog): handle custom Dialog components written in \"script setup\" format",
        "sim_diff": "diff --git a/ui/src/utils/private/global-dialog.js b/ui/src/utils/private/global-dialog.js @@ -130,16 +130,29 @@ export default function (DefaultComponent, supportsCustomComponent, parentApp) {\nlet vm = app.mount(el)\n- if (dialogRef.value !== null) {\n+ function show () {\n+ if (dialogRef.value.show !== void 0) {\ndialogRef.value.show()\n}\n- else if (typeof DialogComponent.__asyncLoader === 'function') {\n- DialogComponent.__asyncLoader().then(() => {\n- nextTick(() => {\n+ else if ( // account for \"script setup\" way of declaring component\n+ vm.$.subTree\n+ && vm.$.subTree.component\n+ && vm.$.subTree.component.proxy\n+ && vm.$.subTree.component.proxy.show\n+ ) {\n+ vm.$.subTree.component.proxy.show()\n+ }\n+ else {\n+ console.error('[Quasar] Incorrectly defined Dialog component')\n+ }\n+ }\n+\nif (dialogRef.value !== null) {\n- dialogRef.value.show()\n+ show()\n}\n- })\n+ else if (typeof DialogComponent.__asyncLoader === 'function') {\n+ DialogComponent.__asyncLoader().then(() => {\n+ nextTick(show)\n})\n}\n",
        "chatgpt_rag": "refactor(D3Viz): improve code readability and add semicolons for consistency"
    },
    {
        "msg": "refactor(xhr_wrapper): use Object.assign instead of {...Object} syntax\nrefactor(xhr_wrapper): use Object.assign instead of {...Object} syntax,\nreturn catched error from fetch()",
        "diff": "diff --git a/src/common/api/utils/xhr_wrapper.js b/src/common/api/utils/xhr_wrapper.js @@ -43,12 +43,13 @@ export default function requestWrapper (method) {\ndefaults.body = data\n}\n- const paramsObj = {...defaults, headers: {...params, ...defaults.headers}}\n+ const paramsObj = Object.assign({}, defaults, {headers: params})\nreturn fetch(url, paramsObj)\n.then(checkStatus)\n.then(parseJSON)\n.catch(err => {\nconsole.error(err)\n+ return err\n})\n}\n}\n",
        "date": "14.08.2017 23:53:10",
        "repo": "metnew/suicrux",
        "type": "refactor",
        "sim_msg": "feat: auto add headers.host",
        "sim_diff": "diff --git a/lib/utils/request-wrapper.js b/lib/utils/request-wrapper.js @@ -100,11 +100,15 @@ const requestWrapper = (url, options) => {\noptions.headers.server = 'RSSHub';\ntry {\n+ const urlHandler = new URL(url);\n// referer\nif (!options.headers.referer && !options.headers.Referer) {\n- const urlHandler = new URL(url);\noptions.headers.referer = urlHandler.origin;\n}\n+ // host\n+ if (!options.headers.host && !options.headers.Host) {\n+ options.headers.host = urlHandler.host;\n+ }\n} catch (e) {\n// do nothing\n}\n",
        "chatgpt_rag": "fix: update requestWrapper function to handle error response in xhr_wrapper"
    },
    {
        "msg": "refactor: inline `lineHeight`",
        "diff": "diff --git a/packages/vega-scenegraph/src/util/text.js b/packages/vega-scenegraph/src/util/text.js @@ -138,14 +138,13 @@ export function offset(item) {\n// perform our own font baseline calculation\n// why? not all browsers support SVG 1.1 'alignment-baseline' :(\nvar baseline = item.baseline,\n- h = fontSize(item),\n- lh = lineHeight(item);\n+ h = fontSize(item);\nreturn Math.round(\n- baseline === 'line-top' ? 0.79.h + (lh-h) / 2.0 :\n+ baseline === 'line-top' ? 0.79.h + (lineHeight(item)-h) / 2.0 :\nbaseline === 'top' ? 0.79*h :\nbaseline === 'middle' ? 0.30*h :\nbaseline === 'bottom' ? -0.21*h :\n- baseline === 'line-bottom' ? -0.21*h - (lh-h) / 2.0 : 0\n+ baseline === 'line-bottom' ? -0.21*h - (lineHeight(item)-h) / 2.0 : 0\n);\n}\n",
        "date": "01.03.2020 15:04:19",
        "repo": "vega/vega",
        "type": "refactor",
        "sim_msg": "fix: Fixed an error that occurs by accessing scrollTop when the 'wysiwyg' instance is null.(util.js)",
        "sim_diff": "diff --git a/src/lib/util.js b/src/lib/util.js @@ -1018,7 +1018,7 @@ const util = {\nreturn {\nleft: offsetLeft + (iframe ? wysiwygFrame.parentElement.offsetLeft : 0),\n- top: (offsetTop - wysiwyg.scrollTop) + (iframe ? wysiwygFrame.parentElement.offsetTop : 0)\n+ top: (offsetTop - wysiwyg ? wysiwyg.scrollTop : 0) + (iframe ? wysiwygFrame.parentElement.offsetTop : 0)\n};\n},\n",
        "chatgpt_rag": "refactor: Refactored the font baseline calculation logic in the offset function to improve readability and maintainability (text.js)"
    },
    {
        "msg": "refactor(replaceIncludes): streamlined code",
        "diff": "diff --git a/src/jscad/replaceIncludes.js b/src/jscad/replaceIncludes.js @@ -21,10 +21,10 @@ export function replaceIncludes (text, relpath, memFs) {\nconst withoutIncludes = replaceIncludesInAst(moduleAst)\nconst modulePromises = foundIncludes.map(function (uri, index) {\n- const promise = includeJscadSync(relpath, uri, memFs)\n- return promise.then(function (includedScript) {\n- return replaceIncludes(includedScript, relpath, memFs)\n- })\n+ return includeJscadSync(relpath, uri, memFs)\n+ .then(\n+ includedScript => replaceIncludes(includedScript, relpath, memFs),\n+ err => console.error('fail', err))\n})\nPromise.all(modulePromises).then(function (resolvedModules) {\nconst resolvedScript = resolvedModules.concat(withoutIncludes).join('\\n')\n",
        "date": "19.04.2017 00:21:41",
        "repo": "jscad/openjscad.org",
        "type": "refactor",
        "sim_msg": "refactor(resolve): make the resolveModule code a little easier to read",
        "sim_diff": "diff --git a/src/extract/resolve/index.js b/src/extract/resolve/index.js const fs = require('fs');\nconst path = require('path');\nconst pathToPosix = require('../../utl/pathToPosix');\n-const resolveAMDModule = require('./resolve-AMD');\n-const resolveCJSModule = require('./resolve-commonJS');\n+const resolveAMD = require('./resolve-AMD');\n+const resolveCommonJS = require('./resolve-commonJS');\nconst isRelativeModuleName = pString => pString.startsWith(\".\");\nfunction resolveModule(pDependency, pBaseDir, pFileDir) {\nlet lRetval = null;\n- if (isRelativeModuleName(pDependency.moduleName)) {\n- lRetval = resolveCJSModule(pDependency.moduleName, pBaseDir, pFileDir);\n- } else if ([\"cjs\", \"es6\"].indexOf(pDependency.moduleSystem) > -1) {\n- lRetval = resolveCJSModule(pDependency.moduleName, pBaseDir, pFileDir);\n+ if (\n+ isRelativeModuleName(pDependency.moduleName) ||\n+ [\"cjs\", \"es6\"].indexOf(pDependency.moduleSystem) > -1\n+ ) {\n+ lRetval = resolveCommonJS(pDependency.moduleName, pBaseDir, pFileDir);\n} else {\n- lRetval = resolveAMDModule(pDependency.moduleName, pBaseDir, pFileDir);\n+ lRetval = resolveAMD(pDependency.moduleName, pBaseDir, pFileDir);\n}\nreturn lRetval;\n}\n",
        "chatgpt_rag": "refactor(jscad): improve the readability of the replaceIncludes function and error handling in promises"
    },
    {
        "msg": "refactor: support off method",
        "diff": "diff --git a/src/use/emitter.js b/src/use/emitter.js import { getCurrentInstance } from 'vue'\n+import { capitalize } from 'element-ui/src/utils/util'\n+const EVENT_NAME_KEY = Symbol('ELEMENT_EVENTS')\nexport function useEmitter() {\nreturn {\ndispatch: dispatch(),\nbroadcast: broadcast(),\n- on: on()\n+ on: on(),\n+ off: off()\n}\n}\n@@ -12,12 +15,17 @@ function on() {\nconst instance = getCurrentInstance()\nreturn (originalEventName, callback) => {\n- const eventName = 'on' + originalEventName.charAt(0).toUpperCase() + originalEventName.slice(1)\n+ const eventName = 'on' + capitalize(originalEventName)\nif (!instance.vnode.props) {\ninstance.vnode.props = {}\n}\n+ if (!instance.vnode.props[EVENT_NAME_KEY]) {\n+ instance.vnode.props[EVENT_NAME_KEY] = new Set()\n+ }\n+ instance.vnode.props[EVENT_NAME_KEY].add(eventName)\n+\nif (!instance.vnode.props[eventName]) {\ninstance.vnode.props[eventName] = (...params) => {\nconst callbacks = instance.vnode.props[eventName]['__events']\n@@ -33,6 +41,41 @@ function on() {\n}\n}\n+function off() {\n+ const instance = getCurrentInstance()\n+\n+ return (originalEventName, callback) => {\n+ const eventNameList = instance.vnode.props && instance.vnode.props[EVENT_NAME_KEY]\n+ if (!eventNameList || !eventNameList.size) {\n+ return\n+ }\n+\n+ if (!originalEventName) {\n+ eventNameList.forEach(eventName => {\n+ delete instance.vnode.props[eventName]\n+ })\n+ eventNameList.clear()\n+ return\n+ }\n+\n+ const eventName = 'on' + capitalize(originalEventName)\n+\n+ if (!callback) {\n+ delete instance.vnode.props[eventName]\n+ eventNameList.delete(eventName)\n+ return\n+ }\n+\n+ const handlers = instance.vnode.props[eventName] && instance.vnode.props[eventName]['__events']\n+ if (handlers && handlers.length) {\n+ const index = handlers.indexOf(callback)\n+ if (index > -1) {\n+ handlers.splice(index, 1)\n+ }\n+ }\n+ }\n+}\n+\nfunction dispatch() {\nconst instance = getCurrentInstance()\n",
        "date": "18.08.2020 15:58:46",
        "repo": "hug-sun/element3",
        "type": "refactor",
        "sim_msg": "chore(ui): small tweak to QParallax",
        "sim_diff": "diff --git a/ui/src/components/parallax/QParallax.js b/ui/src/components/parallax/QParallax.js -import { h, defineComponent, ref, watch, onMounted, onBeforeUnmount, getCurrentInstance } from 'vue'\n+import { h, defineComponent, ref, watch, onMounted, onBeforeUnmount } from 'vue'\nimport useEmitListeners from '../../composables/use-emit-listeners.js'\n@@ -38,8 +38,7 @@ export default defineComponent({\nconst mediaParentRef = ref(null)\nconst mediaRef = ref(null)\n- const vm = getCurrentInstance()\n- const { emitListeners } = useEmitListeners(vm)\n+ const { emitListeners } = useEmitListeners()\nlet isWorking, mediaEl, mediaHeight, resizeHandler, observer, localScrollTarget\n",
        "chatgpt_rag": "feat(use): added off method to useEmitter for event unsubscription"
    },
    {
        "msg": "refactor: add RTL styling for inputs",
        "diff": "diff --git a/scss/_reboot.scss b/scss/_reboot.scss @@ -554,17 +554,16 @@ legend {\n// 1. A few input types should stay LTR\n// See https://rtlstyling.com/posts/rtl-styling#form-inputs\n-// 2. RTL only output\n-// See https://rtlcss.com/learn/usage-guide/control-directives/#raw\n-/* rtl:raw:\n+*[dir=\"rtl\"] {\n[type=\"tel\"],\n[type=\"url\"],\n[type=\"email\"],\n[type=\"number\"] {\ndirection: ltr;\n}\n-*/\n+}\n+\n// Remove the inner padding in Chrome and Safari on macOS.\n",
        "date": "23.06.2021 17:06:24",
        "repo": "coreui/coreui",
        "type": "refactor",
        "sim_msg": "perf: :fire: remove unused styles\n#top_navigation doesn't exist",
        "sim_diff": "diff --git a/public/resources/scss/index.scss b/public/resources/scss/index.scss @@ -522,11 +522,6 @@ input[type=\"search\"]::-webkit-search-cancel-button {\nvertical-align: top;\n}\n-#top_navigation .tab.active {\n- background-color: rgba(0, 0, 0, 0.1);\n- cursor: default;\n-}\n-\n#packs-button,\n#themes-button {\n-webkit-appearance: none;\n",
        "chatgpt_rag": "style: update input types to stay LTR for RTL styling"
    },
    {
        "msg": "refactor(webpack_config/config): read index.html file for SSR using DIST_PATH env variable, some style fixes, fix SSR of Root component",
        "diff": "diff --git a/src/server/ssr/index.js b/src/server/ssr/index.js import path from 'path'\nimport fs from 'fs'\n+import chalk from 'chalk'\n// React-related stuff\nimport React from 'react'\nimport {render} from 'rapscallion'\n-import Helmet from 'react-helmet'\n-import {StaticRouter} from 'react-router'\n+// import Helmet from 'react-helmet'\nimport {ServerStyleSheet, StyleSheetManager} from 'styled-components'\n// Application\n-// Do you remember that we use webpack aliases provided by cool babel plugin?\n-// (take a look at .babelrc)\nimport {configureStore, configureRootComponent} from 'common/index'\n-//\n-const language = process.env.APP_LANGUAGE || 'en'\n-const distPath = `../../../dist/${language}`\n-// read index.html and assign a variable\n-const indexPath = path.join(__dirname, `${distPath}/index.html`)\n-const indexHTMLFileContent = (function () {\n+// read index.html and assign to a variable\n+const indexPath = path.join(`${process.env.DIST_PATH}/index.html`)\n+const htmlFile = (function () {\ntry {\nreturn fs.readFileSync(indexPath, 'utf8')\n} catch (e) {\n- throw new Error(`Are you sure you have already built app? ${e}`)\n+ console.error(chalk.bgRed(`Are you sure you have already built app? ${e}`))\n+ console.log(chalk.bgCyan('Application is working without SSR'))\n+ return false\n}\n})()\n-\nexport default function (req, res) {\n+ if (!htmlFile) {\n+ // NOTE: @Metnew (29.07.2017): Here must be a requirement of ejs/jade template\n+ // app probably needs in template engine!\n+ const warning = `\n+ <h1>Do you remember that you don't have SSR?</h1>\n+ <h2>Why it happens?</h2>\n+ <h3>Probably, because of:</h3>\n+ <h4>\n+ <ul>\n+ <li>No \"index.html\" in the dist folder. e.g.: You don't have already built app.</li>\n+ <li>Path to dist folder with client app is invalid, check process.env.DIST_PATH in \"webpack_config/server/webpack.base.\"</li>\n+ <pre>process.env.path === ${process.env.DIST_PATH}</pre>\n+ <pre>URL: ${req.url}</pre>\n+ </ul>\n+ </h4>\n+ `\n+ return res.send(warning)\n+ }\n// Auth-related stuff\n// NOTE: check `server/express/index.js` for more info\nconst {user} = req\nconst {isLoggedIn, token} = user\n- const initialState = isLoggedIn\n- ? {me: {auth: {isLoggedIn, token}}}\n- : {}\n+ const initialState = isLoggedIn ? {me: {auth: {isLoggedIn, token}}} : {}\n//\nconst sheet = new ServerStyleSheet()\n+ const location = req.url\nconst context = {}\nconst store = configureStore(initialState)\n- const RootComponent = configureRootComponent(store)\n+ const RootComponent = configureRootComponent({\n+ store,\n+ SSR: {location, context}\n+ })\nconst App = (\n<StyleSheetManager sheet={sheet.instance}>\n- <StaticRouter url={req.url} context={context}>\n{RootComponent}\n- </StaticRouter>\n</StyleSheetManager>\n)\n//\n@@ -54,7 +68,7 @@ export default function(req, res) {\nfunction renderFullPage ({html, css, preloadedState}) {\n// console.log(indexHTMLFileContent)\n- const indexHTMLFileContentWithRedux = indexHTMLFileContent.replace(\n+ const htmlWithRedux = htmlFile.replace(\n'<div id=\"app\"></div>',\n`<div id=\"app\">${html}</div><script>\nwindow.__PRELOADED_STATE__ = ${JSON.stringify(preloadedState).replace(\n@@ -63,9 +77,9 @@ function renderFullPage ({html, css, preloadedState}) {\n)}\n</script><span style=\"display:none;\">Server-side rendering!</span>`\n)\n- const indexHTMLFileContentWithStylesAndRedux = indexHTMLFileContentWithRedux.replace(\n+ const styledHtmlWithRedux = htmlWithRedux.replace(\n'<meta name=\"ssr-styles\"/>',\ncss\n)\n- return indexHTMLFileContentWithStylesAndRedux\n+ return styledHtmlWithRedux\n}\n",
        "date": "04.08.2017 14:02:33",
        "repo": "metnew/suicrux",
        "type": "refactor",
        "sim_msg": "refactor(UserLoaderScreen): Swap class order.",
        "sim_diff": "diff --git a/lib/components/user/with-logged-in-user-support.js b/lib/components/user/with-logged-in-user-support.js @@ -7,6 +7,31 @@ import { AUTH0_AUDIENCE, AUTH0_SCOPE } from '../../util/constants'\nimport { renderChildrenWithProps } from '../../util/ui'\nimport AwaitingScreen from './awaiting-screen'\n+/**\n+ * This higher-order component ensures that state.user is loaded\n+ * in the redux store for any wrapped component that may need it.\n+ * The requireLoggedInUser argument handles the two use cases for this component:\n+ * - Some components (e.g. those processing a user account) require a logged in user to be available,\n+ * and without it they cannot function.\n+ For such components, set requireLoggedInUser to true.\n+ * An awaiting screen will be displayed while state.user data are being fetched,\n+ * and the wrapped component will be shown upon availability of state.user.\n+ * - Other components (e.g. landing pages) don't require a logged in user to be available to function\n+ * but will display extra functionality if so.\n+ * For such components, omit requireLoggedInUser parameter (or set to false).\n+ * The wrapped component is shown immediately, and no awaiting screen is displayed while state.user is being retrieved.\n+ * @param {React.Component} WrappedComponent The component to be wrapped to that uses state.user from the redux store.\n+ * @param {boolean} requireLoggedInUser Whether the wrapped component requires state.user to properly function.\n+ */\n+const withLoggedInUserSupport = (WrappedComponent, requireLoggedInUser) =>\n+ props => (\n+ <UserLoaderScreenWithAuth requireLoggedInUser={requireLoggedInUser}>\n+ <WrappedComponent {...props} />\n+ </UserLoaderScreenWithAuth>\n+ )\n+\n+export default withLoggedInUserSupport\n+\n/**\n* This component ensures that values under state.user are set when a user is logged in.\n* If needed by the children, this component displays a wait screen while state.user values are being fetched.\n@@ -59,28 +84,3 @@ const UserLoaderScreenWithAuth = withAuth(\nscope: AUTH0_SCOPE\n}\n)\n-\n-/**\n- * This higher-order component ensures that state.user is loaded\n- * in the redux store for any wrapped component that may need it.\n- * The requireLoggedInUser argument handles the two use cases for this component:\n- * - Some components (e.g. those processing a user account) require a logged in user to be available,\n- * and without it they cannot function.\n- For such components, set requireLoggedInUser to true.\n- * An awaiting screen will be displayed while state.user data are being fetched,\n- * and the wrapped component will be shown upon availability of state.user.\n- * - Other components (e.g. landing pages) don't require a logged in user to be available to function\n- * but will display extra functionality if so.\n- * For such components, omit requireLoggedInUser parameter (or set to false).\n- * The wrapped component is shown immediately, and no awaiting screen is displayed while state.user is being retrieved.\n- * @param {React.Component} WrappedComponent The component to be wrapped to that uses state.user from the redux store.\n- * @param {boolean} requireLoggedInUser Whether the wrapped component requires state.user to properly function.\n- */\n-const withLoggedInUserSupport = (WrappedComponent, requireLoggedInUser) =>\n- props => (\n- <UserLoaderScreenWithAuth requireLoggedInUser={requireLoggedInUser}>\n- <WrappedComponent {...props} />\n- </UserLoaderScreenWithAuth>\n- )\n-\n-export default withLoggedInUserSupport\n",
        "chatgpt_rag": "refactor(SSR): Update file path handling and error logging in SSR index file."
    },
    {
        "msg": "refactor: refactor radio-button component",
        "diff": "diff --git a/packages/element3/packages/radio-button/RadioButton.vue b/packages/element3/packages/radio-button/RadioButton.vue />\n<span\nclass=\"el-radio-button__inner\"\n- :style=\"style\"\n+ :style=\"isChecked ? style : null\"\n@keydown.stop\n>\n<slot>{{ label }}</slot>\n@@ -75,7 +75,7 @@ export default {\ntabIndex,\nclasses,\nisChecked,\n- style: isChecked ? style : null\n+ style\n}\n}\n}\n",
        "date": "18.12.2020 14:41:33",
        "repo": "hug-sun/element3",
        "type": "refactor",
        "sim_msg": "style: center setting-check vertically",
        "sim_diff": "diff --git a/src/common/ui/setting-check.vue b/src/common/ui/setting-check.vue <template>\n- <label>\n+ <label class=\"setting-check\">\n<input type=\"checkbox\" v-model=\"value\" :disabled=\"disabled\">\n<slot>\n<span v-text=\"label\" />\n@@ -49,3 +49,9 @@ export default {\n},\n};\n</script>\n+\n+<style>\n+.setting-check {\n+ display: inline-flex;\n+}\n+</style>\n",
        "chatgpt_rag": "style: update radio-button style logic to only apply when isChecked is true"
    },
    {
        "msg": "refactor: refactor invalid message slot",
        "diff": "diff --git a/packages/veui/src/components/Uploader.vue b/packages/veui/src/components/Uploader.vue <slot name=\"desc\"/>\n</span>\n<span :class=\"$c('uploader-error')\">\n- <template v-if=\"error.typeInvalid\">\n- <slot name=\"type-invalid\">\n- <veui-icon :name=\"icons.alert\"/>{{ t('fileTypeInvalid') }}\n- </slot>\n- </template>\n- <template v-if=\"error.sizeInvalid\">\n- <slot name=\"size-invalid\">\n- <veui-icon :name=\"icons.alert\"/>{{ t('fileSizeInvalid') }}\n- </slot>\n- </template>\n- <template v-if=\"error.countOverflow\">\n- <slot name=\"count-overflow\">\n- <veui-icon :name=\"icons.alert\"/>{{ t('tooManyFiles') }}\n- </slot>\n- </template>\n- <template v-if=\"error.customValidationInvalid\">\n- <slot name=\"custom-validation-invalid\">\n- <veui-icon :name=\"icons.alert\"/>{{ customValidationMessage }}\n+ <slot\n+ name=\"invalid\"\n+ :error=\"error\"\n+ >\n+ <veui-icon\n+ v-if=\"validationMessage\"\n+ :name=\"icons.alert\"\n+ />{{\n+ validationMessage\n+ }}\n</slot>\n- </template>\n</span>\n</div>\n<transition-group\nv-if=\"type === 'image'\"\n:class=\"$c('uploader-error')\"\n>\n- <template v-if=\"error.typeInvalid\">\n- <slot name=\"type-invalid\">\n- <veui-icon :name=\"icons.alert\"/>{{ t('fileTypeInvalid') }}\n- </slot>\n- </template>\n- <template v-if=\"error.sizeInvalid\">\n- <slot name=\"size-invalid\">\n- <veui-icon :name=\"icons.alert\"/>{{ t('fileSizeInvalid') }}\n- </slot>\n- </template>\n- <template v-if=\"error.countOverflow\">\n- <slot name=\"count-overflow\">\n- <veui-icon :name=\"icons.alert\"/>{{ t('tooManyFiles') }}\n- </slot>\n- </template>\n- <template v-if=\"error.customValidationInvalid\">\n- <slot name=\"custom-validation-invalid\">\n- <veui-icon :name=\"icons.alert\"/>{{ customValidationMessage }}\n+ <slot\n+ name=\"invalid\"\n+ :error=\"error\"\n+ >\n+ <veui-icon\n+ v-if=\"validationMessage\"\n+ :name=\"icons.alert\"\n+ />{{\n+ validationMessage\n+ }}\n</slot>\n- </template>\n</span>\n<iframe\nv-if=\"requestMode === 'iframe' && submitting\"\n@@ -642,6 +624,18 @@ export default {\n(file.status === 'success' || !file.status) && !file.toBeUploaded\n)\n.map(file => omit(file, ['status', 'toBeUploaded']))\n+ },\n+ validationMessage () {\n+ let messageMap = {\n+ typeInvalid: this.t('fileTypeInvalid'),\n+ sizeInvalid: this.t('fileSizeInvalid'),\n+ countOverflow: this.t('tooManyFiles'),\n+ customValidationInvalid: this.customValidationMessage\n+ }\n+ return Object.keys(this.error)\n+ .map(key => (this.error[key] ? messageMap[key] : ''))\n+ .filter(i => !!i)\n+ .join(', ')\n}\n},\nwatch: {\n",
        "date": "14.11.2019 21:22:54",
        "repo": "ecomfe/veui",
        "type": "refactor",
        "sim_msg": "refactor(popover): remove script setup",
        "sim_diff": "diff --git a/src/components/popover/CdrPopover.vue b/src/components/popover/CdrPopover.vue -<template>\n- <div :class=\"mapClasses(\n- style,\n- 'cdr-popover--wrapper',\n- hasTrigger && 'cdr-popover--position',\n- )\">\n- <div ref=\"triggerEl\">\n- <slot name=\"trigger\"/>\n- </div>\n- <cdr-popup\n- role=\"dialog\"\n- ref=\"popupEl\"\n- @closed=\"closePopover\"\n- :position=\"position\"\n- :auto-position=\"autoPosition\"\n- :opened=\"isOpen\"\n- :aria-expanded=\"`${isOpen}`\"\n- :id=\"id\"\n- :content-class=\"contentClass\"\n- >\n- <div :class=\"style['cdr-popover__container']\">\n- <div :class=\"style['cdr-popover__content']\">\n- <div v-if=\"hasTitle\" :class=\"style['cdr-popover__title']\">\n- <slot name=\"title\">\n- {{ label }}\n- </slot>\n- </div>\n- <slot />\n- </div>\n- <cdr-button\n- :class=\"style['cdr-popover__close-button']\"\n- icon-only\n- @click=\"closePopover\"\n- aria-label=\"Close\"\n- size=\"small\"\n- >\n- <icon-x-sm\n- slot=\"icon\"\n- inherit-color\n- />\n- </cdr-button>\n- </div>\n- </cdr-popup>\n- </div>\n-</template>\n-\n-<script setup>\n- import { useCssModule, useSlots, ref, watch, onMounted, nextTick } from 'vue';\n+<script>\n+import {\n+ defineComponent, useCssModule, ref, watch, onMounted,\n+} from 'vue';\nimport tabbable from 'tabbable';\nimport IconXSm from '../icon/comps/x-sm.vue';\nimport CdrButton from '../button/CdrButton.vue';\nimport CdrPopup from '../popup/CdrPopup.vue';\n- import propValidator from '../../utils/propValidator.js';\n- import mapClasses from '../../utils/mapClasses.js';\n+import propValidator from '../../utils/propValidator';\n+import mapClasses from '../../utils/mapClasses';\n- const props = defineProps({\n+export default defineComponent({\n+ name: 'CdrPopover',\n+ components: { IconXSm, CdrButton, CdrPopup },\n+ props: {\nposition: {\ntype: String,\nrequired: false,\ndefault: false,\nrequired: false,\n},\n- })\n-\n- const slots = useSlots();\n- const emit = defineEmits(['opened', 'closed'])\n+ },\n+ setup(props, ctx) {\nconst isOpen = ref(false);\n- let lastActive\n+ let lastActive;\nconst triggerEl = ref(null);\nconst popupEl = ref(null);\n- const hasTrigger = slots.trigger;\n- const hasTitle = slots.title || props.label;\n+ const hasTrigger = ctx.slots.trigger;\n+ const hasTitle = ctx.slots.title || props.label;\nconst openPopover = (e) => {\nif (isOpen.value === true) {\nlastActive = activeElement;\nisOpen.value = true;\n- emit('opened', e);\n+ ctx.emit('opened', e);\nsetTimeout(() => {\nconst tabbables = tabbable(popupEl.value.$el);\nif (tabbables[0]) tabbables[0].focus();\n- }, 50)\n- }\n+ }, 50);\n+ };\nconst closePopover = (e) => {\nisOpen.value = false;\n- emit('closed', e);\n+ ctx.emit('closed', e);\nif (lastActive) lastActive.focus();\n- }\n+ };\nconst addHandlers = () => {\nconst triggerElement = triggerEl.value.children[0];\nif (triggerElement) {\ntriggerElement.addEventListener('click', openPopover);\n}\n- }\n+ };\nwatch(() => props.open, () => {\n- // TODO: if eslint yells about this then eslint must go :)\n+ // eslint-disable-next-line no-unused-expressions\nprops.open ? openPopover() : closePopover();\n});\ntrigger.setAttribute('aria-haspopup', 'dialog');\n}\n});\n- const style = useCssModule();\n+ return {\n+ style: useCssModule(),\n+ mapClasses,\n+ hasTrigger,\n+ triggerEl,\n+ popupEl,\n+ closePopover,\n+ openPopover,\n+ isOpen,\n+ hasTitle,\n+ };\n+ },\n+});\n</script>\n+<template>\n+ <div\n+ :class=\"mapClasses(\n+ style,\n+ 'cdr-popover--wrapper',\n+ hasTrigger && 'cdr-popover--position',\n+ )\"\n+ >\n+ <div ref=\"triggerEl\">\n+ <slot name=\"trigger\" />\n+ </div>\n+ <cdr-popup\n+ role=\"dialog\"\n+ ref=\"popupEl\"\n+ @closed=\"closePopover\"\n+ :position=\"position\"\n+ :auto-position=\"autoPosition\"\n+ :opened=\"isOpen\"\n+ :aria-expanded=\"`${isOpen}`\"\n+ :id=\"id\"\n+ :content-class=\"contentClass\"\n+ >\n+ <div :class=\"style['cdr-popover__container']\">\n+ <div :class=\"style['cdr-popover__content']\">\n+ <div\n+ v-if=\"hasTitle\"\n+ :class=\"style['cdr-popover__title']\"\n+ >\n+ <slot name=\"title\">\n+ {{ label }}\n+ </slot>\n+ </div>\n+ <slot />\n+ </div>\n+ <cdr-button\n+ :class=\"style['cdr-popover__close-button']\"\n+ icon-only\n+ @click=\"closePopover\"\n+ aria-label=\"Close\"\n+ size=\"small\"\n+ >\n+ <icon-x-sm\n+ slot=\"icon\"\n+ inherit-color\n+ />\n+ </cdr-button>\n+ </div>\n+ </cdr-popup>\n+ </div>\n+</template>\n+\n<style lang=\"scss\" module src=\"./styles/CdrPopover.module.scss\">\n</style>\n",
        "chatgpt_rag": "refactor(uploader): update error message handling in Uploader component"
    },
    {
        "msg": "refactor(progress): use  api",
        "diff": "diff --git a/packages/chakra-ui-core/src/CProgress/CProgress.js b/packages/chakra-ui-core/src/CProgress/CProgress.js import { css, keyframes } from 'emotion'\nimport CBox from '../CBox'\n-import { generateStripe, valueToPercent, forwardProps } from '../utils'\n-import { baseProps } from '../config/props'\n+import { generateStripe, valueToPercent, createStyledAttrsMixin } from '../utils'\nconst stripe = keyframes({\nfrom: { backgroundPosition: '1rem 0' },\n@@ -39,18 +38,20 @@ const progressbarSizes = {\n*/\nconst CProgressLabel = {\nname: 'CProgressLabel',\n- props: baseProps,\n- render (h) {\n+ functional: true,\n+ render (h, { data, slots, ...rest }) {\nreturn h(CBox, {\n+ ...rest,\nprops: {\n- textAlign: 'center',\n- width: '100%',\n- ...forwardProps(this.$props)\n+ as: data.attrs.as\n},\nattrs: {\n+ textAlign: 'center',\n+ width: '100%',\n+ ...data.attrs,\n'data-chakra-component': 'CProgressLabel'\n}\n- }, this.$slots.default)\n+ }, slots().default)\n}\n}\n@@ -64,23 +65,22 @@ const CProgressLabel = {\n*/\nconst CProgressTrack = {\nname: 'CProgressTrack',\n+ functional: true,\nprops: {\n- ...baseProps,\nsize: [String, Number, Array]\n},\n- render (h) {\n+ render (h, { props, slots, data, ...rest }) {\nreturn h(CBox, {\n- props: {\n+ ...rest,\n+ attrs: {\npos: 'relative',\n- height: progressbarSizes[this.size || 'md'],\n+ height: progressbarSizes[props.size || 'md'],\noverflow: 'hidden',\nw: '100%',\n- ...forwardProps(this.$props)\n- },\n- attrs: {\n+ ...data.attrs,\n'data-chakra-component': 'CProgressTrack'\n}\n- }, this.$slots.default)\n+ }, slots().default)\n}\n}\n@@ -93,9 +93,8 @@ const CProgressTrack = {\n* @see Docs https://vue.chakra-ui.com/progress\n*/\nconst CProgressIndicator = {\n- name: 'CProgressIndicator',\n+ mixins: [createStyledAttrsMixin('CProgressIndicator')],\nprops: {\n- ...baseProps,\nisIndeterminate: Boolean,\nmin: Number,\nmax: Number,\n@@ -104,23 +103,27 @@ const CProgressIndicator = {\ncomputed: {\npercent () {\nreturn valueToPercent(this.value, this.min, this.max)\n- }\n},\n- render (h) {\n- return h(CBox, {\n- props: {\n+ componentStyles () {\n+ return {\nheight: '100%',\ntransition: 'all 0.3s',\n- width: `${this.percent}%`,\n- ...forwardProps(this.$props)\n+ width: `${this.percent}%`\n+ }\n+ }\n},\n+ render (h) {\n+ return h(this.as || 'div', {\n+ class: [this.className],\nattrs: {\n+ ...this.computedAttrs,\n'aria-valuemax': this.max,\n'aria-valuemin': this.min,\n'aria-valuenow': this.isIndeterminate ? null : this.value,\nrole: 'progressbar',\n'data-chakra-component': 'CProgressIndicator'\n- }\n+ },\n+ on: this.computedListeners\n}, this.$slots.default)\n}\n}\n@@ -135,9 +138,9 @@ const CProgressIndicator = {\n*/\nconst CProgress = {\nname: 'CProgress',\n+ inheritAttrs: false,\ninject: ['$chakraColorMode'],\nprops: {\n- ...baseProps,\ncolor: {\ntype: String,\ndefault: 'blue'\n@@ -201,13 +204,13 @@ const CProgress = {\nreturn h(CProgressTrack, {\nprops: {\n- size: this.size,\n- bg: trackColor[this.colorMode],\n- borderRadius: _borderRadius,\n- ...forwardProps(this.$props)\n+ size: this.size\n},\nattrs: {\n- 'data-chakra-component': 'CProgress'\n+ bg: trackColor[this.colorMode],\n+ borderRadius: _borderRadius,\n+ 'data-chakra-component': 'CProgress',\n+ ...this.$attrs\n}\n}, [\nh(CProgressIndicator, {\n@@ -218,7 +221,9 @@ const CProgress = {\nprops: {\nmin: this.min,\nmax: this.max,\n- value: this.value,\n+ value: this.value\n+ },\n+ attrs: {\nbg: indicatorColor[this.colorMode],\nborderRadius: this.__borderRadius,\n...this.isIndeterminate && {\n",
        "date": "11.07.2020 18:26:59",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "refactor",
        "sim_msg": "feat: allow className to be passed down to ProgressBar",
        "sim_diff": "diff --git a/packages/progress-bar/src/ProgressBar.js b/packages/progress-bar/src/ProgressBar.js import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n-import { css } from \"emotion\";\n+import { cx, css } from \"emotion\";\nimport { ThemeContext } from \"@hig/theme-context\";\n+import { createCustomClassNames } from \"@hig/utils\";\nimport stylesheet from \"./stylesheet\";\nexport default class ProgressBar extends Component {\n@@ -17,7 +18,19 @@ export default class ProgressBar extends Component {\n};\nrender() {\n- const { percentComplete, stylesheet: customStylesheet } = this.props;\n+ const {\n+ percentComplete,\n+ stylesheet: customStylesheet,\n+ ...otherProps\n+ } = this.props;\n+\n+ const { className } = otherProps;\n+ const innerWrapperClassNames = createCustomClassNames(\n+ className,\n+ \"progress-bar\"\n+ );\n+ const fillClassNames = createCustomClassNames(className, \"fill\");\n+ const polygonClassNames = createCustomClassNames(className, \"polygon\");\nreturn (\n<ThemeContext.Consumer>\n@@ -28,14 +41,18 @@ export default class ProgressBar extends Component {\n);\nreturn (\n<div\n- className={css(styles.wrapper)}\n+ className={cx(css(styles.wrapper), className)}\nrole=\"progressbar\"\naria-valuemin=\"0\"\naria-valuemax=\"100\"\naria-valuenow={percentComplete}\n>\n- <div className={css(styles.progressBar)}>\n- <div className={css(styles.progressBarFill)} />\n+ <div\n+ className={cx(css(styles.progressBar), innerWrapperClassNames)}\n+ >\n+ <div\n+ className={cx(css(styles.progressBarFill), fillClassNames)}\n+ />\n<svg\nwidth=\"3px\"\nheight=\"4px\"\n@@ -45,7 +62,7 @@ export default class ProgressBar extends Component {\nxmlnsXlink=\"http://www.w3.org/1999/xlink\"\n>\n<polygon\n- className={css(styles.polygon)}\n+ className={cx(css(styles.polygon), polygonClassNames)}\nid=\"end-right\"\npoints=\"0 0 2.68 0 1 4 0 4\"\n/>\n",
        "chatgpt_rag": "refactor: update CProgress component to use createStyledAttrsMixin for CProgressIndicator"
    },
    {
        "msg": "refactor(SentenTree): add options spec",
        "diff": "diff --git a/components/SentenTree/index.js b/components/SentenTree/index.js @@ -3,6 +3,46 @@ import { SentenTreeBuilder,\nSentenTreeVis } from 'sententree/dist/SentenTree';\nexport default class SentenTree extends VisComponent {\n+ static get options () {\n+ return [\n+ {\n+ name: 'data',\n+ description: 'The data table.',\n+ type: 'table',\n+ format: 'objectlist'\n+ },\n+ {\n+ name: 'id',\n+ description: 'The field containing the identifier of each row.',\n+ type: 'string',\n+ domain: {\n+ mode: 'field',\n+ from: 'data',\n+ fieldTypes: ['string', 'integer', 'number']\n+ }\n+ },\n+ {\n+ name: 'text',\n+ description: 'The field containing the text sample.',\n+ domain: {\n+ mode: 'field',\n+ from: 'data',\n+ fieldTypes: ['string']\n+ }\n+ },\n+ {\n+ name: 'count',\n+ description: 'The field containing the count for each text sample.',\n+ type: 'string',\n+ domain: {\n+ mode: 'field',\n+ from: 'data',\n+ fieldTypes: ['integer']\n+ }\n+ }\n+ ];\n+ }\n+\nconstructor (el, {data, graphs = 3}) {\nsuper(el);\n",
        "date": "28.04.2017 18:21:50",
        "repo": "kitware/candela",
        "type": "refactor",
        "sim_msg": "fix(editor-reducer): sort trip patterns on receive",
        "sim_diff": "diff --git a/lib/editor/reducers/data.js b/lib/editor/reducers/data.js @@ -2,6 +2,7 @@ import update from 'react-addons-update'\nimport clone from 'lodash.clonedeep'\nimport ll from '@conveyal/lonlat'\n+import {defaultSorter} from '../../common/util/util'\nimport { stopToGtfs, routeToGtfs, agencyToGtfs, calendarToGtfs, fareToGtfs, gtfsSort } from '../util/gtfs'\nimport { getStopsForPattern } from '../util'\n@@ -317,8 +318,9 @@ const data = (state = defaultState, action) => {\n}\n})\ncase 'RECEIVE_TRIP_PATTERNS_FOR_ROUTE':\n+ const tripPatterns = action.tripPatterns.sort(defaultSorter)\nrouteIndex = state.tables.route.findIndex(r => r.id === action.routeId)\n- activePattern = state.active.subEntityId && action.tripPatterns.find(p => p.id === state.active.subEntityId)\n+ activePattern = state.active.subEntityId && tripPatterns.find(p => p.id === state.active.subEntityId)\nif (activePattern) {\nactivePattern.stops = getStopsForPattern(activePattern, state.tables.stop)\n}\n@@ -327,15 +329,15 @@ const data = (state = defaultState, action) => {\n}\nif (state.active.entity.id === action.routeId) {\nreturn update(state, {\n- tables: {route: {[routeIndex]: {$merge: {tripPatterns: action.tripPatterns}}}},\n+ tables: {route: {[routeIndex]: {$merge: {tripPatterns}}}},\nactive: {\n- entity: {$merge: {tripPatterns: action.tripPatterns}},\n+ entity: {$merge: {tripPatterns}},\nsubEntity: {$set: Object.assign({}, activePattern)}\n}\n})\n} else {\nreturn update(state, {\n- tables: {route: {[routeIndex]: {$merge: {tripPatterns: action.tripPatterns}}}}\n+ tables: {route: {[routeIndex]: {$merge: {tripPatterns: tripPatterns}}}}\n})\n}\n// case 'RECEIVE_TRIPS_FOR_CALENDAR':\n",
        "chatgpt_rag": "feat(SentenTree): add options for data table, id, text, and count fields"
    },
    {
        "msg": "refactor(Button): use includes replace indexOf",
        "diff": "diff --git a/packages/button/Button.vue b/packages/button/Button.vue @@ -22,18 +22,20 @@ export default {\nsize: {\ntype: String,\nvalidator(val) {\n- if (val === '') return true\n- return ['medium', 'small', 'mini'].indexOf(val) !== -1\n+ return ['medium', 'small', 'mini', ''].includes(val)\n}\n},\ntype: {\ntype: String,\nvalidator(val) {\n- return (\n- ['primary', 'success', 'warning', 'danger', 'info', 'text'].indexOf(\n- val\n- ) !== -1\n- )\n+ return [\n+ 'primary',\n+ 'success',\n+ 'warning',\n+ 'danger',\n+ 'info',\n+ 'text'\n+ ].includes(val)\n}\n},\nnativeType: {\n",
        "date": "10.12.2020 11:05:04",
        "repo": "hug-sun/element3",
        "type": "refactor",
        "sim_msg": "feat(button): set light as default variant\nb4.beta secondary is now \"grey\" this reduces breaking changes",
        "sim_diff": "diff --git a/lib/components/button.vue b/lib/components/button.vue @@ -49,7 +49,7 @@ export default {\nreturn this.block ? 'btn-block' : '';\n},\nbtnVariant() {\n- return this.variant ? `btn-${this.variant}` : `btn-secondary`;\n+ return this.variant ? `btn-${this.variant}` : `btn-light`;\n},\nbtnSize() {\nreturn this.size ? `btn-${this.size}` : '';\n",
        "chatgpt_rag": "refactor(button): simplify size and type validators\n- Refactored the size validator to use the includes method for cleaner code\n- Updated the type validator to use an array for better readability and maintainability"
    },
    {
        "msg": "refactor: Rewrite release_initializer with vanilla js",
        "diff": "diff --git a/src/platforms/browser/release_initializer.js b/src/platforms/browser/release_initializer.js +import Dumper from \"./dumper.js\"\n+\n//\n// release_initializer.js - read user's program and eval it (if it exists)\n//\n+\nconst execute_user_program = function() {\n- var dumper = null;\n- if ($(\"#biwascheme-debugger\")[0]) {\n- dumper = new BiwaScheme.Dumper($(\"#biwascheme-debugger\")[0]);\n+ const dumper = null;\n+ const debug_area = document.querySelector(\"#biwascheme-debugger\");\n+ if (debug_area) {\n+ dumper = new Dumper(debug_area);\n}\n// Error handler (show message to console div)\n- var onError = function(e, state){\n+ const onError = function(e, state){\nBiwaScheme.Port.current_error.put_string(e.message + \"\\n\");\nif (dumper) {\ndumper.dump(state);\n@@ -20,8 +24,8 @@ const execute_user_program = function() {\n}\n};\n- var run = function(script) {\n- var intp = new BiwaScheme.Interpreter(onError);\n+ const run = function(script) {\n+ const intp = new BiwaScheme.Interpreter(onError);\ntry{\nintp.evaluate(script, function(){});\n}\n@@ -31,15 +35,21 @@ const execute_user_program = function() {\n};\n// Start user's program (old style)\n- var script = $(\"script[src$='biwascheme.js']\").html() ||\n- $(\"script[src$='biwascheme-min.js']\").html();\n- if (script) run(script);\n+ let script = \"\";\n+ for (const s of document.querySelectorAll(\"script[src$='biwascheme.js']\")) {\n+ script += s.innerHTML;\n+ }\n+ for (const s of document.querySelectorAll(\"script[src$='biwascheme-min.js']\")) {\n+ script += s.innerHTML;\n+ }\n+\n+ if (script.length > 0) run(script);\n// Start user's program (new style)\n- $(function(){\n- $(\"script[type='text/biwascheme']\").each(function(){\n- run($(this).html());\n- });\n+ window.addEventListener('DOMContentLoaded', function(){\n+ for (const s of document.querySelectorAll(\"script[type='text/biwascheme']\")) {\n+ run(s.innerHTML);\n+ }\n});\n};\n",
        "date": "14.03.2021 10:45:15",
        "repo": "biwascheme/biwascheme",
        "type": "refactor",
        "sim_msg": "ci: safe npm release tag",
        "sim_diff": "diff --git a/scripts/release.js b/scripts/release.js @@ -45,7 +45,23 @@ const release = async () => {\n})\nconst bumpChoices = bumps.map(b => ({ name: `${b} (${versions[b]})`, value: b }))\n- const { bump, customVersion } = await inquirer.prompt([\n+ function getVersion (answers) {\n+ return answers.customVersion || versions[answers.bump]\n+ }\n+\n+ function getNpmTags (version) {\n+ console.log(version)\n+ if (isPreRelease(version)) {\n+ return ['next', 'latest']\n+ }\n+ return ['latest', 'next']\n+ }\n+\n+ function isPreRelease (version) {\n+ return !!semver.prerelease(version)\n+ }\n+\n+ const { bump, customVersion, npmTag } = await inquirer.prompt([\n{\nname: 'bump',\nmessage: 'Select release type:',\n@@ -60,6 +76,13 @@ const release = async () => {\nmessage: 'Input version:',\ntype: 'input',\nwhen: answers => answers.bump === 'custom'\n+ },\n+ {\n+ name: 'npmTag',\n+ message: 'Input npm tag:',\n+ type: 'list',\n+ default: answers => getNpmTags(getVersion(answers))[0],\n+ choices: answers => getNpmTags(getVersion(answers))\n}\n])\n@@ -67,7 +90,7 @@ const release = async () => {\nconst { yes } = await inquirer.prompt([{\nname: 'yes',\n- message: `Confirm releasing ${version}?`,\n+ message: `Confirm releasing ${version} (${npmTag})?`,\ntype: 'list',\nchoices: ['N', 'Y']\n}])\n@@ -82,18 +105,14 @@ const release = async () => {\n'--repo-version',\nversion,\n'--force-publish',\n+ '--npm-tag',\n+ npmTag,\n'*'\n]\nconsole.log(`lerna ${releaseArguments.join(' ')}`)\n- await execa(require.resolve('lerna/bin/lerna'), [\n- 'publish',\n- '--repo-version',\n- version,\n- '--force-publish',\n- '*'\n- ], { stdio: 'inherit' })\n+ await execa(require.resolve('lerna/bin/lerna'), releaseArguments, { stdio: 'inherit' })\nrequire('./genChangelog')(version)\n}\n",
        "chatgpt_rag": "feat: refactor release_initializer.js for better readability and performance"
    },
    {
        "msg": "refactor: :recycle: update author component",
        "diff": "diff --git a/src/lib/author.svelte b/src/lib/author.svelte <script>\n+ import { onMount } from 'svelte'\n+\nexport let author\n+ const getUserDetails = async () => {\n+ const res = await fetch(`/${author}.json`)\n+ return await res.json()\n+ }\n+ let data = {}\n+ onMount(async () => {\n+ data = await getUserDetails()\n+ })\n</script>\n-<small>{author}</small>\n+<p class=\"text-sm\">Contribution by:</p>\n+<article\n+ class=\"not-prose border border-primary shadow-lg p-4 rounded-2xl\"\n+>\n+ <div class=\"flex space-x-5 justify-evenly\">\n+ <a href={data.html_url} target=\"_blank\" rel=\"noopener\">\n+ <img\n+ class=\"w-20 h-20 p-0 m-0 rounded-full\"\n+ src={data.avatar_url}\n+ alt={data.name}\n+ />\n+ </a>\n+ <a href={data.html_url} target=\"_blank\" rel=\"noopener\">\n+ <div class=\"text-sm\">\n+ <p class=\"text-lg font-bold tracking-widest\">{data.name}</p>\n+ <p>{data.bio}</p>\n+ </div>\n+ </a>\n+ </div>\n+</article>\n",
        "date": "08.04.2022 18:46:58",
        "repo": "spences10/cheat-sheets",
        "type": "refactor",
        "sim_msg": "docs: update bootcdn",
        "sim_diff": "diff --git a/docs/index.html b/docs/index.html <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n<meta name=\"description\" content=\"Description\">\n<meta name=\"viewport\" content=\"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0\">\n- <link rel=\"stylesheet\" href=\"//unpkg.com/docsify/lib/themes/vue.css\">\n+ <link href=\"https://cdn.bootcss.com/docsify/4.5.5/themes/vue.css\" rel=\"stylesheet\">\n</head>\n<body>\n<div id=\"app\"></div>\nnavigator.serviceWorker.register('serviceWorker.js')\n}\n</script>\n- <script src=\"//unpkg.com/docsify/lib/docsify.min.js\"></script>\n+ <script src=\"https://cdn.bootcss.com/docsify/4.5.5/docsify.min.js\"></script>\n</body>\n</html>\n",
        "chatgpt_rag": "feat: add author details to contribution section\n\n- Added functionality to fetch author details from API\n- Updated author display to include avatar, name, and bio\n- Improved styling for author contribution section"
    },
    {
        "msg": "refactor(index): headless cms -> api-first cms",
        "diff": "diff --git a/examples/pages/template/index.tpl b/examples/pages/template/index.tpl <img width=\"35px\" src=\"~examples/assets/images/tipe.svg\" alt=\"tipe.io\">\n<div>\n<p>Sponsored by Tipe.io</p>\n- <p>Next Generation Headless CMS</p>\n+ <p>Next Generation API-first CMS</p>\n</div>\n</a>\n<div class=\"cards\">\n",
        "date": "18.12.2017 11:52:44",
        "repo": "hug-sun/element3",
        "type": "refactor",
        "sim_msg": "feat(browsercheck): remove obe styles",
        "sim_diff": "diff --git a/old-template.html b/old-template.html margin-bottom: 10px;\n}\n- p a {\n- text-decoration: underline;\n- }\n-\n- .btn {\n- text-decoration: none;\n- }\n-\nul {\npadding-left: 20px;\nlist-style: none\ncontent: '\\f00d';\ncolor: #d00;\n}\n-\n- .container {\n- margin-bottom: 16px;\n- }\n</style>\n</head>\n",
        "chatgpt_rag": "style(template): update sponsored message in index page"
    },
    {
        "msg": "refactor(compiler): Avoid magic number",
        "diff": "diff --git a/src/system/compiler.js b/src/system/compiler.js @@ -347,15 +347,15 @@ BiwaScheme.Compiler = BiwaScheme.Class.create({\ncase BiwaScheme.Sym(\"call/cc\"):\nvar x=x.second();\n+ var arity_of_arg = 1; // Always 1. (lambda (cc) ...)\nvar c = [\"conti\",\n(this.is_tail(next) ? (e[0].size() + 1) : 0), //number of args for outer lambda\n[\"argument\",\n- [\"constant\", 1,\n+ [\"constant\", arity_of_arg,\n[\"argument\",\nthis.compile(x, e, s,f,\n- (this.is_tail(next) ? [\"shift\", 1, [\"tco_hinted_apply\"]]\n+ (this.is_tail(next) ? [\"shift\", arity_of_arg, [\"tco_hinted_apply\"]]\n: [\"apply\"]))]]]];\n- //note: proc for call/cc takes 1 argument (= [\"apply\", 1])\n// Do not push stack frame when call/cc is in a tail context\nreturn this.is_tail(next) ? c : [\"frame\", c, next];\n",
        "date": "03.01.2020 19:29:53",
        "repo": "biwascheme/biwascheme",
        "type": "refactor",
        "sim_msg": "refactor: fix typo in private test method",
        "sim_diff": "diff --git a/spec/env/common.js b/spec/env/common.js @@ -167,7 +167,7 @@ HandlebarsTestBench.prototype.withMessage = function(message) {\n};\nHandlebarsTestBench.prototype.toCompileTo = function(expectedOutputAsString) {\n- expect(this._compileAndExeute()).to.equal(expectedOutputAsString);\n+ expect(this._compileAndExecute()).to.equal(expectedOutputAsString);\n};\n// see chai \"to.throw\" (https://www.chaijs.com/api/bdd/#method_throw)\n@@ -178,11 +178,11 @@ HandlebarsTestBench.prototype.toThrow = function(\n) {\nvar self = this;\nexpect(function() {\n- self._compileAndExeute();\n+ self._compileAndExecute();\n}).to.throw(errorLike, errMsgMatcher, msg);\n};\n-HandlebarsTestBench.prototype._compileAndExeute = function() {\n+HandlebarsTestBench.prototype._compileAndExecute = function() {\nvar compile =\nObject.keys(this.partials).length > 0\n? CompilerContext.compileWithPartial\n",
        "chatgpt_rag": "refactor: update arity_of_arg variable assignment in BiwaScheme.Compiler"
    },
    {
        "msg": "refactor: remove unnecessary ui prop def",
        "diff": "diff --git a/packages/veui-theme-one/components/AlertBox.js b/packages/veui-theme-one/components/AlertBox.js @@ -8,10 +8,5 @@ config.defaults({\nsuccess: 'check-circle-o-large',\ninfo: 'info-circle-o-large',\nerror: 'cross-circle-o-large'\n- },\n- ui: {\n- type: {\n- values: ['success', 'error', 'info']\n- }\n}\n}, 'alertbox')\n",
        "date": "28.05.2018 11:59:29",
        "repo": "ecomfe/veui",
        "type": "refactor",
        "sim_msg": "fix: bug Alerts title color is inconsistent",
        "sim_diff": "diff --git a/frontend/src/app/components/admin/alerts-pane/alerts-pane.less b/frontend/src/app/components/admin/alerts-pane/alerts-pane.less border-bottom: 1px solid @color15;\nborder-left: 4px solid transparent;\n+ &.info {\n+ color: @color7;\n+ }\n+\n&.crit > svg-icon {\nfill: @color10;\n}\n",
        "chatgpt_rag": "refactor: remove redundant UI type values in AlertBox configuration"
    },
    {
        "msg": "refactor: to optimize the createComponent method logic",
        "diff": "diff --git a/test/unit/tests/use/component.test.js b/test/unit/tests/use/component.test.js @@ -5,6 +5,7 @@ describe('component', () => {\nit('should get component instance', () => {\nconst $cf = jest.fn()\nconst Comp = {\n+ template: '<div>foo</div>',\nsetup() {\nreturn {\n$cf\n@@ -13,9 +14,10 @@ describe('component', () => {\n}\nconst instance = createComponent(Comp)\n- instance.$cf()\n+ instance.ctx.$cf()\nexpect($cf).toBeCalled()\n+ expect(instance.ctx.$el.innerHTML).toBe('foo')\n})\n})\n})\n",
        "date": "01.09.2020 14:44:29",
        "repo": "hug-sun/element3",
        "type": "refactor",
        "sim_msg": "test(components/molecule/field): fix tests",
        "sim_diff": "diff --git a/components/molecule/field/test/index.test.js b/components/molecule/field/test/index.test.js @@ -154,7 +154,7 @@ describe(json.name, () => {\n}\n// When\n- const {container} = setup(props)\n+ const {container, findByText} = setup(props)\n// Then\nexpect(container.innerHTML).to.be.a('string')\n@@ -176,7 +176,7 @@ describe(json.name, () => {\n}\n// When\n- const {container} = setup(props)\n+ const {container, findByText} = setup(props)\n// Then\nexpect(container.innerHTML).to.be.a('string')\n@@ -198,7 +198,7 @@ describe(json.name, () => {\n}\n// When\n- const {container} = setup(props)\n+ const {container, findByText} = setup(props)\n// Then\nexpect(container.innerHTML).to.be.a('string')\n@@ -220,7 +220,7 @@ describe(json.name, () => {\n}\n// When\n- const {container} = setup(props)\n+ const {container, findByText} = setup(props)\n// Then\nexpect(container.innerHTML).to.be.a('string')\n@@ -242,7 +242,7 @@ describe(json.name, () => {\n}\n// When\n- const {container} = setup(props)\n+ const {container, findByText} = setup(props)\n// Then\nexpect(container.innerHTML).to.be.a('string')\n@@ -264,7 +264,7 @@ describe(json.name, () => {\n}\n// When\n- const {container} = setup(props)\n+ const {container, findByText} = setup(props)\n// Then\nexpect(container.innerHTML).to.be.a('string')\n",
        "chatgpt_rag": "test(tests/use): update component test with template and innerHTML check"
    },
    {
        "msg": "refactor: change notes to note",
        "diff": "diff --git a/src/features/tooltip/Tooltip.js b/src/features/tooltip/Tooltip.js import React from \"react\";\n-import { addNote, removeNote, getNotesIndexedByHash } from 'domain/notes';\n+\n//Styling\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n@@ -10,6 +10,7 @@ import tooltipStyle from './Tooltip.module.css';\n///Redux\nimport { connect } from \"react-redux\";\nimport { getPosition, getSelectedDatum } from 'domain/controls';\n+import { addNote, removeNote, getNotesIndexedByHash } from 'domain/notes';\nclass TooltipControls extends React.Component {\nconstructor(props){\n@@ -191,7 +192,7 @@ class TooltipControls extends React.Component {\n}\n{!this.props.data.fieldValue &&\n<p className={appStyle.accordionHeader} onClick={this.toggleShowNote}>\n- Notes {!showNote && <FontAwesomeIcon icon={faAngleDoubleDown} />}{showNote && <FontAwesomeIcon onClick={this.toggleShowNote} icon={faAngleDoubleUp} />}\n+ Note {!showNote && <FontAwesomeIcon icon={faAngleDoubleDown} />}{showNote && <FontAwesomeIcon onClick={this.toggleShowNote} icon={faAngleDoubleUp} />}\n</p>\n}\n",
        "date": "02.08.2019 15:38:42",
        "repo": "iqtlabs/crviz",
        "type": "refactor",
        "sim_msg": "refactor(ffe-form-react): rewrite tooltip to functional component",
        "sim_diff": "diff --git a/packages/ffe-form-react/src/Tooltip.js b/packages/ffe-form-react/src/Tooltip.js -import React from 'react';\n+import React, { useState, useRef } from 'react';\nimport { bool, func, node, string, number } from 'prop-types';\nimport classNames from 'classnames';\nimport Collapse from '@sb1/ffe-collapse-react';\nimport { v4 as uuid } from 'uuid';\n-class Tooltip extends React.Component {\n- constructor({ isOpen }) {\n- super();\n- this.state = {\n- isOpen: !!isOpen,\n- };\n- this.onToggle = this.onToggle.bind(this);\n- this.tooltipId = uuid();\n- this.tooltipButtonId = uuid();\n- }\n-\n- onToggle(evt) {\n- this.setState(prevState => ({ isOpen: !prevState.isOpen }));\n- if (this.props.onClick) {\n- this.props.onClick(evt);\n- }\n- }\n-\n- render() {\n- const {\n+const Tooltip = ({\n+ isOpen,\n'aria-controls': ariaControls,\n'aria-label': ariaLabel,\nchildren,\n@@ -32,38 +14,47 @@ class Tooltip extends React.Component {\nonClick,\ntabIndex,\n...rest\n- } = this.props;\n+}) => {\n+ const tooltipButtonId = useRef(uuid).current;\n+ const tooltipId = useRef(uuid).current;\n- const { isOpen } = this.state;\n+ const [_isOpen, setIsOpen] = useState(!!isOpen);\n+\n+ const handleToogle = evt => {\n+ setIsOpen(prev => !prev);\n+ if (onClick) {\n+ onClick(evt);\n+ }\n+ };\nreturn (\n<span\n{...rest}\nclassName={classNames('ffe-tooltip', {\n- 'ffe-tooltip--open': isOpen,\n+ 'ffe-tooltip--open': _isOpen,\n})}\n>\n<button\n- aria-expanded={isOpen}\n- aria-controls={children ? this.tooltipId : ariaControls}\n+ aria-expanded={_isOpen}\n+ aria-controls={children ? tooltipId : ariaControls}\naria-label={ariaLabel}\nclassName=\"ffe-tooltip__icon\"\n- onClick={this.onToggle}\n+ onClick={handleToogle}\ntype=\"button\"\ntabIndex={tabIndex}\n- id={this.tooltipButtonId}\n+ id={tooltipButtonId}\n>\n<span aria-hidden={true}>?</span>\n</button>\n{children && (\n<Collapse\nclassName=\"ffe-tooltip__text\"\n- id={this.tooltipId}\n- isOpen={isOpen}\n+ id={tooltipId}\n+ isOpen={_isOpen}\n>\n<div\nclassName={classNames('ffe-small-text', className)}\n- role={isOpen ? 'status' : 'none'}\n+ role={_isOpen ? 'status' : 'none'}\n>\n{children}\n</div>\n@@ -71,8 +62,7 @@ class Tooltip extends React.Component {\n)}\n</span>\n);\n- }\n-}\n+};\nTooltip.propTypes = {\n/** Provide the id of the controlled element *unless* you're sending in children */\n",
        "chatgpt_rag": "style(tooltip): update tooltip component styling\n"
    },
    {
        "msg": "refactor(PreactConfig): Keep ESLint happy",
        "diff": "diff --git a/src/lib/webpack-config.js b/src/lib/webpack-config.js @@ -24,7 +24,6 @@ import ProgressBarPlugin from 'progress-bar-webpack-plugin';\nimport CopyWebpackPlugin from 'copy-webpack-plugin';\nimport ReplacePlugin from 'replace-bundle-webpack-plugin';\nimport SWPrecacheWebpackPlugin from 'sw-precache-webpack-plugin';\n-import createBabelConfig from './babel-config';\nimport prerender from './prerender';\nimport PushManifestPlugin from './push-manifest';\n",
        "date": "29.05.2017 15:45:31",
        "repo": "preactjs/preact-cli",
        "type": "refactor",
        "sim_msg": "chore: update copy-webpack-plugin config",
        "sim_diff": "diff --git a/webpack.config.js b/webpack.config.js @@ -160,13 +160,14 @@ module.exports = {\nnew MiniCssExtractPlugin({\nfilename: '[name].css'\n}),\n- new CopyPlugin([\n+ new CopyPlugin({\n+ patterns: [\n{\nfrom: 'src/assets',\nto: '',\n- copyUnmodified: true,\n},\n- ]),\n+ ],\n+ }),\nnew VueLoaderPlugin(),\nnew webpack.DefinePlugin({\nVERSION: JSON.stringify(require('./src/assets/manifest.json').version)\n",
        "chatgpt_rag": "refactor: remove unused import createBabelConfig from webpack config file"
    },
    {
        "msg": "refactor: change px to rem in footer, header, and sidebar; reorder transition values in sidebar",
        "diff": "diff --git a/scss/_variables.scss b/scss/_variables.scss @@ -1365,7 +1365,7 @@ $list-group-variants: (\n// Header\n// scss-docs-start header-variables\n-$header-min-height: 56px !default;\n+$header-min-height: 4rem !default;\n$header-padding-y: $spacer / 2 !default;\n$header-padding-x: $spacer / 2 !default;\n$header-brand-font-size: $font-size-lg !default;\n@@ -1405,7 +1405,7 @@ $header-divider-border-color: $header-border-color !default;\n// Subheader\n// scss-docs-start subheader-variables\n-$subheader-min-height: 48px !default;\n+$subheader-min-height: 3rem !default;\n$subheader-padding-y: $spacer / 2 !default;\n$subheader-padding-x: $spacer !default;\n$subheader-border-color: $border-color !default;\n@@ -1491,11 +1491,11 @@ $carousel-dark-control-icon-filter: invert(1) grayscale(100) !default;\n// scss-docs-end carousel-variables\n// scss-docs-start sidebar-variables\n-$sidebar-width: 256px !default;\n+$sidebar-width: 16rem !default;\n$sidebar-widths: (\n- sm: 192px,\n- lg: 320px,\n- xl: 384px\n+ sm: 12rem,\n+ lg: 20rem,\n+ xl: 24rem\n) !default;\n$sidebar-padding-y: 0 !default;\n$sidebar-padding-x: 0 !default;\n@@ -1503,7 +1503,7 @@ $sidebar-color: $high-emphasis-light !default;\n$sidebar-bg: $gray-base !default;\n$sidebar-border-width: 0 !default;\n$sidebar-border-color: transparent !default;\n-$sidebar-transition: box-shadow .075s, transform .15s, margin-left .15s, margin-right .15s, width .15s, z-index 0s ease .15s !default;\n+$sidebar-transition: margin-left .15s, margin-right .15s, box-shadow .075s, transform .15s, width .15s, z-index 0s ease .15s !default;\n$sidebar-reliant-transition: margin .15s !default;\n$sidebar-brand-height: 56px !default;\n@@ -1550,6 +1550,7 @@ $sidebar-nav-icon-font-size: $sidebar-nav-icon-height !default;\n$sidebar-nav-group-bg: rgba(0, 0, 0, .2) !default;\n$sidebar-nav-group-transition: background .15s ease-in-out !default;\n$sidebar-nav-group-items-transition: height .15s ease !default;\n+$sidebar-nav-group-toggle-show-color: $sidebar-nav-link-color !default;\n$sidebar-nav-group-indicator-color: $medium-emphasis-light !default;\n$sidebar-nav-group-indicator: str-replace(url(\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 11 14'%3E%3Cpath fill='#{$sidebar-nav-group-indicator-color}' d='M9.148 2.352l-4.148 4.148 4.148 4.148q0.148 0.148 0.148 0.352t-0.148 0.352l-1.297 1.297q-0.148 0.148-0.352 0.148t-0.352-0.148l-5.797-5.797q-0.148-0.148-0.148-0.352t0.148-0.352l5.797-5.797q0.148-0.148 0.352-0.148t0.352 0.148l1.297 1.297q0.148 0.148 0.148 0.352t-0.148 0.352z'/%3E%3C/svg%3E\"), \"#\", \"%23\") !default;\n@@ -1575,7 +1576,7 @@ $sidebar-toggler-hover-indicator: str-replace(url(\"data:image/svg+xml;c\n// Footer\n// scss-docs-start footer-variables\n-$footer-min-height: 50px !default;\n+$footer-min-height: 3rem !default;\n$footer-padding-y: $spacer / 2 !default;\n$footer-padding-x: $spacer !default;\n$footer-bg: $gray-100 !default;\n",
        "date": "12.01.2021 17:36:27",
        "repo": "coreui/coreui",
        "type": "refactor",
        "sim_msg": "chore(blocksAntd): Update PageSiderMenu tests.",
        "sim_diff": "diff --git a/packages/blocks/blocksAntd/tests/__snapshots__/PageSiderMenu.test.js.snap b/packages/blocks/blocksAntd/tests/__snapshots__/PageSiderMenu.test.js.snap @@ -104,7 +104,7 @@ exports[`Render default - value[0] 1`] = `\n}\n/>\n<div\n- className=\"{\\\\\"style\\\\\":{\\\\\"background\\\\\":\\\\\"#900\\\\\"}}\"\n+ className=\"{}\"\nid=\"default_toggle_sider_affix\"\n>\n<div\n@@ -277,7 +277,7 @@ exports[`Render properties.breadcrumb.list - value[0] 1`] = `\n}\n/>\n<div\n- className=\"{\\\\\"style\\\\\":{\\\\\"background\\\\\":\\\\\"#900\\\\\"}}\"\n+ className=\"{}\"\nid=\"properties.breadcrumb.list_toggle_sider_affix\"\n>\n<div\n@@ -484,7 +484,7 @@ exports[`Render properties.content.style - value[0] 1`] = `\n}\n/>\n<div\n- className=\"{\\\\\"style\\\\\":{\\\\\"background\\\\\":\\\\\"#900\\\\\"}}\"\n+ className=\"{}\"\nid=\"properties.content.style_toggle_sider_affix\"\n>\n<div\n@@ -657,7 +657,7 @@ exports[`Render properties.footer.style - value[0] 1`] = `\n}\n/>\n<div\n- className=\"{\\\\\"style\\\\\":{\\\\\"background\\\\\":\\\\\"#900\\\\\"}}\"\n+ className=\"{}\"\nid=\"properties.footer.style_toggle_sider_affix\"\n>\n<div\n@@ -932,7 +932,7 @@ exports[`Render properties.header.color - value[0] 1`] = `\n}\n/>\n<div\n- className=\"{\\\\\"style\\\\\":{\\\\\"background\\\\\":\\\\\"#900\\\\\"}}\"\n+ className=\"{}\"\nid=\"properties.header.color_toggle_sider_affix\"\n>\n<div\n@@ -1115,7 +1115,7 @@ exports[`Render properties.header.style - value[0] 1`] = `\n}\n/>\n<div\n- className=\"{\\\\\"style\\\\\":{\\\\\"background\\\\\":\\\\\"#900\\\\\"}}\"\n+ className=\"{}\"\nid=\"properties.header.style_toggle_sider_affix\"\n>\n<div\n@@ -1375,7 +1375,7 @@ exports[`Render properties.header.theme: light - value[0] 1`] = `\n}\n/>\n<div\n- className=\"{\\\\\"style\\\\\":{\\\\\"background\\\\\":\\\\\"#900\\\\\"}}\"\n+ className=\"{}\"\nid=\"properties.header.theme: light_toggle_sider_affix\"\n>\n<div\n@@ -1635,7 +1635,7 @@ exports[`Render properties.logo.alt - value[0] 1`] = `\n}\n/>\n<div\n- className=\"{\\\\\"style\\\\\":{\\\\\"background\\\\\":\\\\\"#900\\\\\"}}\"\n+ className=\"{}\"\nid=\"properties.logo.alt_toggle_sider_affix\"\n>\n<div\n@@ -1895,7 +1895,7 @@ exports[`Render properties.logo.src - value[0] 1`] = `\n}\n/>\n<div\n- className=\"{\\\\\"style\\\\\":{\\\\\"background\\\\\":\\\\\"#900\\\\\"}}\"\n+ className=\"{}\"\nid=\"properties.logo.src_toggle_sider_affix\"\n>\n<div\n@@ -2068,7 +2068,7 @@ exports[`Render properties.logo.style - value[0] 1`] = `\n}\n/>\n<div\n- className=\"{\\\\\"style\\\\\":{\\\\\"background\\\\\":\\\\\"#900\\\\\"}}\"\n+ className=\"{}\"\nid=\"properties.logo.style_toggle_sider_affix\"\n>\n<div\n@@ -2328,7 +2328,7 @@ exports[`Render properties.menu - value[0] 1`] = `\n}\n/>\n<div\n- className=\"{\\\\\"style\\\\\":{\\\\\"background\\\\\":\\\\\"#900\\\\\"}}\"\n+ className=\"{}\"\nid=\"properties.menu_toggle_sider_affix\"\n>\n<div\n@@ -2588,7 +2588,7 @@ exports[`Render properties.menu.selectedColor - value[0] 1`] = `\n}\n/>\n<div\n- className=\"{\\\\\"style\\\\\":{\\\\\"background\\\\\":\\\\\"#900\\\\\"}}\"\n+ className=\"{}\"\nid=\"properties.menu.selectedColor_toggle_sider_affix\"\n>\n<div\n@@ -2848,7 +2848,7 @@ exports[`Render properties.sider.color - value[0] 1`] = `\n}\n/>\n<div\n- className=\"{\\\\\"style\\\\\":{\\\\\"background\\\\\":\\\\\"#900\\\\\"}}\"\n+ className=\"{}\"\nid=\"properties.sider.color_toggle_sider_affix\"\n>\n<div\n@@ -3032,7 +3032,7 @@ exports[`Render properties.sider.initialCollapsed - value[0] 1`] = `\n</div>\n</div>\n<div\n- className=\"{\\\\\"style\\\\\":{\\\\\"background\\\\\":\\\\\"#900\\\\\"}}\"\n+ className=\"{}\"\nid=\"properties.sider.initialCollapsed_toggle_sider_affix\"\n>\n<div\n@@ -3216,7 +3216,7 @@ exports[`Render properties.sider.style - value[0] 1`] = `\n</div>\n</div>\n<div\n- className=\"{\\\\\"style\\\\\":{\\\\\"background\\\\\":\\\\\"#900\\\\\"}}\"\n+ className=\"{}\"\nid=\"properties.sider.style_toggle_sider_affix\"\n>\n<div\n@@ -3389,7 +3389,7 @@ exports[`Render properties.sider.theme: dark - value[0] 1`] = `\n}\n/>\n<div\n- className=\"{\\\\\"style\\\\\":{\\\\\"background\\\\\":\\\\\"#900\\\\\"}}\"\n+ className=\"{}\"\nid=\"properties.sider.theme: dark_toggle_sider_affix\"\n>\n<div\n@@ -3562,7 +3562,7 @@ exports[`Render properties.style - value[0] 1`] = `\n}\n/>\n<div\n- className=\"{\\\\\"style\\\\\":{\\\\\"background\\\\\":\\\\\"#900\\\\\"}}\"\n+ className=\"{}\"\nid=\"properties.style_toggle_sider_affix\"\n>\n<div\n@@ -3746,7 +3746,7 @@ exports[`Render properties.toggleSiderButton.hide - value[0] 1`] = `\n</div>\n</div>\n<div\n- className=\"{\\\\\"style\\\\\":{\\\\\"background\\\\\":\\\\\"#900\\\\\"}}\"\n+ className=\"{}\"\nid=\"properties.toggleSiderButton.hide_toggle_sider_affix\"\n>\n<div\n@@ -3930,7 +3930,7 @@ exports[`Render properties.toggleSiderButton.type - value[0] 1`] = `\n</div>\n</div>\n<div\n- className=\"{\\\\\"style\\\\\":{\\\\\"background\\\\\":\\\\\"#900\\\\\"}}\"\n+ className=\"{}\"\nid=\"properties.toggleSiderButton.type_toggle_sider_affix\"\n>\n<div\n",
        "chatgpt_rag": "chore: Update header, subheader, sidebar, and footer variables in _variables.scss."
    },
    {
        "msg": "refactor: remove `thead` `border-bottom-color`",
        "diff": "diff --git a/scss/_tables.scss b/scss/_tables.scss // Highlight border color between thead, tbody and tfoot.\n> :not(:last-child) > :last-child > * {\n- border-bottom-color: $table-group-separator-color;\n+ // border-bottom-color: $table-group-separator-color;\n}\n}\n",
        "date": "04.01.2021 23:29:05",
        "repo": "coreui/coreui",
        "type": "refactor",
        "sim_msg": "fix(table): added selectedable table option",
        "sim_diff": "diff --git a/scss/os/_utils.scss b/scss/os/_utils.scss }\n}\n- &.u-table-striped {\n+ .u-table__selectable {\ncursor: pointer;\n+ }\n+ &.u-table-striped {\n.u-table__row:nth-child(odd) {\nbackground-color: $table-accent-bg;\n}\n",
        "chatgpt_rag": "style(table): commented out border-bottom-color for better readability"
    },
    {
        "msg": "refactor: use vue3 to refactor tag component",
        "diff": "diff --git a/packages/tag/src/tag.vue b/packages/tag/src/tag.vue +\n<script>\n+import { h, computed, getCurrentInstance, Transition } from \"vue\";\nexport default {\n- name: 'ElTag',\n+ name: \"ElTag\",\nprops: {\ntext: String,\nclosable: Boolean,\nsize: String,\neffect: {\ntype: String,\n- default: 'light',\n+ default: \"light\",\nvalidator(val) {\n- return ['dark', 'light', 'plain'].indexOf(val) !== -1;\n- }\n- }\n- },\n- methods: {\n- handleClose(event) {\n- event.stopPropagation();\n- this.$emit('close', event);\n+ return [\"dark\", \"light\", \"plain\"].indexOf(val) !== -1;\n},\n- handleClick(event) {\n- this.$emit('click', event);\n- }\n},\n- computed: {\n- tagSize() {\n- return this.size || (this.$ELEMENT || {}).size;\n- }\n},\n- render(h) {\n- const { type, tagSize, hit, effect } = this;\n+ setup(props, { emit, slots }) {\n+ const {\n+ type,\n+ hit,\n+ effect,\n+ color,\n+ closable,\n+ disableTransitions,\n+ size,\n+ } = props;\n+\n+ const tagSize = computed(() => {\n+ return size || (getCurrentInstance().proxy.$ELEMENT || {}).size;\n+ });\n+ const handleClose = (event) => {\n+ event.stopPropagation();\n+ emit(\"close\", event);\n+ };\n+ const handleClick = (event) => {\n+ emit(\"click\", event);\n+ };\n+\nconst classes = [\n- 'el-tag',\n- type ? `el-tag--${type}` : '',\n- tagSize ? `el-tag--${tagSize}` : '',\n- effect ? `el-tag--${effect}` : '',\n- hit && 'is-hit'\n+ \"el-tag\",\n+ type ? `el-tag--${type}` : \"\",\n+ tagSize.value ? `el-tag--${tagSize.value}` : \"\",\n+ effect ? `el-tag--${effect}` : \"\",\n+ hit && \"is-hit\",\n];\nconst tagEl = (\n<span\nclass={classes}\n- style={{ backgroundColor: this.color }}\n- on-click={ this.handleClick }>\n- { this.$slots.default }\n- {\n- this.closable && <i class=\"el-tag__close el-icon-close\" on-click={ this.handleClose }></i>\n- }\n+ style={{ backgroundColor: color }}\n+ on-click={handleClick}\n+ >\n+ {slots.default && slots.default()}\n+ {closable && (\n+ <i class=\"el-tag__close el-icon-close\" on-click={handleClose}></i>\n+ )}\n</span>\n);\n-\n- return this.disableTransitions ? tagEl : <transition name=\"el-zoom-in-center\">{ tagEl }</transition>;\n- }\n+ return () =>\n+ disableTransitions ? (\n+ tagEl\n+ ) : (\n+ <Transition name=\"el-zoom-in-center\">{tagEl}</Transition>\n+ );\n+ },\n};\n</script>\n",
        "date": "05.08.2020 22:03:32",
        "repo": "hug-sun/element3",
        "type": "refactor",
        "sim_msg": "refactor(list): fixes modifier class logic, removes buildClass, srcipt setup syntax",
        "sim_diff": "diff --git a/src/components/list/CdrList.vue b/src/components/list/CdrList.vue -<template>\n- <component\n- :is=\"tag\"\n- :class=\"[style[baseClass], style[modifierClass]]\"\n- >\n- <slot />\n- </component>\n-</template>\n-\n-<script>\n-import { defineComponent, useCssModule, computed } from 'vue';\n+<script setup>\n+import { useCssModule, computed } from 'vue';\n-import { buildClass } from '../../utils/buildClass';\nimport propValidator from '../../utils/propValidator';\n-export default defineComponent({\n- name: 'CdrList',\n- props: {\n+const props = defineProps({\n/**\n* Tag accepts a user defined element and expects either: 'ul' = Unordered List or 'ol' = Ordered List.\n*/\n@@ -29,18 +17,23 @@ export default defineComponent({\ndefault: '',\nvalidator: (value) => propValidator(value, ['', 'ordered', 'unordered', 'compact', 'inline']),\n},\n- },\n- setup(props) {\n+});\nconst baseClass = 'cdr-list';\n- const modifierClass = computed(() => props.modifier && buildClass(baseClass, props.modifier));\n- return {\n- style: useCssModule(),\n- baseClass,\n- modifierClass,\n- };\n- },\n+const style = useCssModule();\n+const modifierClasses = computed(() => {\n+ const modifiers = props.modifier.split(' ');\n+ return modifiers.map((mod) => style[`${baseClass}--${mod}`]);\n});\n</script>\n+<template>\n+ <component\n+ :is=\"props.tag\"\n+ :class=\"[style[baseClass], modifierClasses]\"\n+ >\n+ <slot />\n+ </component>\n+</template>\n+\n<style lang=\"scss\" module src=\"./styles/CdrList.module.scss\">\n</style>\n",
        "chatgpt_rag": "refactor(tag): updates tag component logic, improves setup syntax, and removes render method"
    },
    {
        "msg": "refactor: rename loadData to load for cascader",
        "diff": "diff --git a/packages/veui/src/components/Cascader/Cascader.vue b/packages/veui/src/components/Cascader/Cascader.vue :select-mode=\"selectMode\"\n:column-width=\"keyword ? null : columnWidth\"\n:expanded=\"realExpanded\"\n- :load-data=\"loadData && !keyword ? loadAndSaveData : null\"\n+ :load=\"load && !keyword ? loadAndSaveData : null\"\n@update:expanded=\"handlePaneUpdateExpanded\"\n@select=\"handlePaneSelect\"\n@keydown.native=\"!searchable && handleCascaderKeydown($event)\"\n@@ -240,7 +240,7 @@ export default {\nreturn ['complete', 'simple'].indexOf(val) >= 0\n}\n},\n- loadData: Function,\n+ load: Function,\ninline: Boolean,\nmax: Number\n},\n@@ -405,9 +405,12 @@ export default {\n}\n},\nmethods: {\n- loadAndSaveData (option, trigger) {\n- return Promise.resolve(this.loadData(option, trigger)).then((loaded) => {\n- this.$set(this.loadedData, getKey(option), loaded)\n+ loadAndSaveData (context) {\n+ return Promise.resolve(this.load(context)).then((loaded) => {\n+ if (loaded) {\n+ this.$set(this.loadedData, getKey(context.parent), loaded)\n+ }\n+ return loaded\n})\n},\nhandleCascaderKeydown (e) {\n",
        "date": "14.06.2022 19:48:36",
        "repo": "ecomfe/veui",
        "type": "refactor",
        "sim_msg": "feat(docs): Update Discover page",
        "sim_diff": "diff --git a/docs/src/components/AppExtensionDiscover.vue b/docs/src/components/AppExtensionDiscover.vue style=\"max-width: 300px\"\n@input=\"query\"\n:loading=\"loading\"\n+ :error=\"errorMessage !== null\"\n+ :error-message=\"errorMessage\"\n+ bottom-slots\nref=\"searchInput\"\n>\n<template v-slot:append>\n@@ -54,6 +57,7 @@ export default {\ndata () {\nreturn {\nfilter: '',\n+ errorMessage: null,\nresults: [],\nloading: false\n}\n@@ -64,6 +68,7 @@ export default {\nif (val === '') {\nthis.loading = false\nthis.results = []\n+ this.errorMessage = null\n}\n}\n},\n@@ -81,7 +86,10 @@ export default {\n},\nquery (filter) {\n- this.xhr !== void 0 && this.xhr.abort()\n+ if (this.xhr !== void 0) {\n+ this.xhr.abort()\n+ this.xhr = void 0\n+ }\nif (filter === '') {\nreturn\n@@ -97,7 +105,7 @@ export default {\nconst json = JSON.parse(this.responseText)\nif (json.code !== void 0 || json.results === void 0) {\n- self.$q.notify('Error looking for packages')\n+ self.errorMessage = 'NPM API service is currently unavailable. Please try again later.'\nreturn\n}\n@@ -108,6 +116,10 @@ export default {\nreturn item\n})\n})\n+ xhr.addEventListener('error', () => {\n+ this.loading = false\n+ this.errorMessage = 'Cannot connect to NPM. Please try again later.'\n+ })\nconst q = encodeURI('quasar-app-extension ' + filter)\nxhr.open('GET', `https://api.npms.io/v2/search?q=${q}&size=30`)\n",
        "chatgpt_rag": "refactor(veui): Update Cascader component API\n- Changed `loadData` prop to `load` for consistency\n- Refactored `loadAndSaveData` method to accept a context parameter\n- Updated `loadAndSaveData` method to set loaded data based on context parent\n- Improved error handling in `loadAndSaveData` method"
    },
    {
        "msg": "refactor: parseBlocks",
        "diff": "diff --git a/frontend/leaderboard/src/Types.re b/frontend/leaderboard/src/Types.re @@ -184,7 +184,6 @@ module Block = {\neach UserCommand and InternalCommand to it's associated block.\n*/\nlet parseBlocks = blocks => {\n- let blocks =\nBelt.Map.Int.(\nblocks\n|> Array.fold_left(\n@@ -234,8 +233,6 @@ module Block = {\n)\n|> valuesToArray\n);\n-\n- blocks;\n};\n};\n",
        "date": "21.12.2020 20:01:34",
        "repo": "minaprotocol/mina",
        "type": "refactor",
        "sim_msg": "fix(render): remove Defaults component import",
        "sim_diff": "diff --git a/packages/renderer/src/page/block/Block.js b/packages/renderer/src/page/block/Block.js @@ -20,7 +20,6 @@ import { ErrorBoundary, Loading } from '@lowdefy/block-tools';\nimport { get } from '@lowdefy/helpers';\nimport LoadBlock from './LoadBlock';\n-import Defaults from './Defaults';\nimport CategorySwitch from './CategorySwitch';\nimport WatchCache from './WatchCache';\n",
        "chatgpt_rag": "refactor(leaderboard): remove redundant variable assignment in parseBlocks function"
    },
    {
        "msg": "refactor(SimilarityGraph): empty top-level div before placing SVG",
        "diff": "diff --git a/components/SimilarityGraph/index.js b/components/SimilarityGraph/index.js @@ -8,6 +8,10 @@ export default class SimilarityGraph extends VisComponent {\nsuper(el);\nthis.data = data;\n+ // Empty the top-level div.\n+ d3.select(this.el)\n+ .selectAll('*').remove();\n+\n// Construct an SVG element inside the top-level div.\nthis.svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\nthis.svg.setAttribute('width', width);\n",
        "date": "25.04.2017 16:29:06",
        "repo": "kitware/candela",
        "type": "refactor",
        "sim_msg": "fix: Change the truthy tests of width and height in WorkspaceSvg.setCachedParentSvgSize to actual comparisons with null so that zero value can be saved into the cache\nfixes and possibly",
        "sim_diff": "diff --git a/core/workspace_svg.js b/core/workspace_svg.js @@ -1244,13 +1244,13 @@ class WorkspaceSvg extends Workspace {\n*/\nsetCachedParentSvgSize(width, height) {\nconst svg = this.getParentSvg();\n- if (width) {\n+ if (width != null) {\nthis.cachedParentSvgSize_.width = width;\n// This is set to support the public (but deprecated) Blockly.svgSize\n// method.\nsvg.cachedWidth_ = width;\n}\n- if (height) {\n+ if (height != null) {\nthis.cachedParentSvgSize_.height = height;\n// This is set to support the public (but deprecated) Blockly.svgSize\n// method.\n",
        "chatgpt_rag": "feat: Add functionality to empty the top-level div before constructing the SVG element in SimilarityGraph component"
    },
    {
        "msg": "refactor: remove unnecessary spread.",
        "diff": "diff --git a/packages/chakra-ui-core/src/CInputGroup/CInputGroup.js b/packages/chakra-ui-core/src/CInputGroup/CInputGroup.js @@ -53,9 +53,7 @@ const CInputGroup = {\nconst clone = cloneVNode(vnode, h)\nreturn h(clone.componentOptions.Ctor, {\n...clone.data,\n- on: {\n- ...(clone.componentOptions.listeners || {})\n- },\n+ on: (clone.componentOptions.listeners || {}),\nprops: {\n...(clone.data.props || {}),\n...clone.componentOptions.propsData,\n",
        "date": "23.12.2021 00:35:33",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "refactor",
        "sim_msg": "test(components/molecule/radioButtonGroup): refactor",
        "sim_diff": "diff --git a/components/molecule/radioButtonGroup/test/index.test.js b/components/molecule/radioButtonGroup/test/index.test.js @@ -10,12 +10,31 @@ import ReactDOM from 'react-dom'\nimport chai, {expect} from 'chai'\nimport chaiDOM from 'chai-dom'\n+import * as pkg from '../src/index.js'\n+\n+import json from '../package.json'\n+\nchai.use(chaiDOM)\n-describe('molecule/radioButtonGroup', () => {\n- const Component = MoleculeRadioButtonGroup\n+describe(json.name, () => {\n+ const {default: Component} = pkg\nconst setup = setupEnvironment(Component)\n+ it('library should include defined exported elements', () => {\n+ // Given\n+ const library = pkg\n+ const libraryExportedMembers = ['default']\n+\n+ // When\n+ const {default: MoleculeRadioButtonGroup, ...others} = library\n+\n+ // Then\n+ expect(Object.keys(library).length).to.equal(libraryExportedMembers.length)\n+ expect(Object.keys(library)).to.have.members(libraryExportedMembers)\n+ expect(Object.keys(others).length).to.equal(0)\n+ })\n+\n+ describe(Component.displayName, () => {\nit('should render without crashing', () => {\n// Given\nconst props = {}\n@@ -46,7 +65,8 @@ describe('molecule/radioButtonGroup', () => {\nconst props = {\nclassName: 'extended-classNames'\n}\n- const findSentence = str => string => string.match(new RegExp(`S*${str}S*`))\n+ const findSentence = str => string =>\n+ string.match(new RegExp(`S*${str}S*`))\n// When\nconst {container} = setup(props)\n@@ -56,3 +76,4 @@ describe('molecule/radioButtonGroup', () => {\nexpect(findClassName(container.innerHTML)).to.be.null\n})\n})\n+})\n",
        "chatgpt_rag": "refactor CInputGroup component event handling in Chakra UI Core package"
    },
    {
        "msg": "refactor: use optional chain",
        "diff": "diff --git a/src/use/emitter.js b/src/use/emitter.js @@ -103,7 +103,7 @@ function broadcast() {\nchildren.forEach((vnode) => {\nconst childComponent = vnode.component\n- if (childComponent && childComponent.type && childComponent.type.name === componentName) {\n+ if (childComponent?.type?.name === componentName) {\nchildComponent.emit(eventName, ...params)\n} else {\n_broadcast(childComponent)\n",
        "date": "21.08.2020 14:48:44",
        "repo": "hug-sun/element3",
        "type": "refactor",
        "sim_msg": "refactor(lib): small update in lib/emitter_wrapper",
        "sim_diff": "diff --git a/lib/emitter_wrapper.js b/lib/emitter_wrapper.js @@ -8,13 +8,8 @@ class EmitterWrapper {\naddListener (event, listener) {\nthis.emitter.addListener(event, listener)\n-\n- if (!this.listeners.hasOwnProperty(event)) {\n- this.listeners[event] = []\n- }\n-\n+ this.listeners[event] = this.listeners[event] || []\nthis.listeners[event].push(listener)\n-\nreturn this\n}\n",
        "chatgpt_rag": "refactor(src): update conditional check in src/use/emitter"
    },
    {
        "msg": "refactor(src/common/api/utils/xhr_wrapper.js): some comments, fix export of localStorage stuff",
        "diff": "diff --git a/src/common/api/utils/xhr_wrapper.js b/src/common/api/utils/xhr_wrapper.js // Request utils,\n-// feel free to replace with your code\n+// Feel free to replace with your code\n// (get, post are used in ApiServices)\n-import {getLocalToken, resetLocalToken} from 'api'\n+import {getLocalToken, resetLocalToken} from 'api/LocalStorageCookiesSvc'\n-export default function requestWrapper (method) {\n+function requestWrapper (method) {\nreturn async function (url, data = null, params = {}) {\nif (method === 'GET') {\n- // Is it a GET?\n+ // It's a GET response\n// GET doesn't have data\nparams = data\ndata = null\n@@ -27,12 +27,16 @@ export default function requestWrapper (method) {\n}\n// Check that req url is relative and request was sent to our domain\n- if (url.match(/^https?:\\/\\//gi) > -1) {\n+ if (!/(http|https):\\/\\//.test(url)) {\n+ console.log(`Request ${url} was sent to our domain`)\nconst token = getLocalToken()\nif (token) {\ndefaults.headers.Authorization = `JWT ${token}`\n}\nurl = process.env.BASE_API + url\n+ } else {\n+ console.log(`Request ${url} was sent to external domain`)\n+ // Request was set to an external domain\n}\nif (data) {\n",
        "date": "10.08.2017 04:55:13",
        "repo": "metnew/suicrux",
        "type": "refactor",
        "sim_msg": "test: fix undefined url",
        "sim_diff": "diff --git a/lib/utils/request-wrapper.js b/lib/utils/request-wrapper.js @@ -84,15 +84,20 @@ const requestWrapper = (url, options) => {\n// server\noptions.headers.server = 'RSSHub';\n+ try {\n// referer\nif (!options.headers.referer && !options.headers.Referer) {\nconst urlHandler = new URL(url);\noptions.headers.referer = urlHandler.origin;\n}\n+ // host\nif (!options.headers.host && !options.headers.Host) {\nconst urlHandler = new URL(url);\noptions.headers.host = urlHandler.host;\n}\n+ } catch (e) {\n+ // do nothing\n+ }\n};\nconst httpWrap = (func) => {\n",
        "chatgpt_rag": "refactor: improve requestWrapper logic and add console logs"
    },
    {
        "msg": "refactor: remove useless prop `focusClass`",
        "diff": "diff --git a/packages/veui/src/components/Autocomplete/Autocomplete.vue b/packages/veui/src/components/Autocomplete/Autocomplete.vue @@ -106,10 +106,6 @@ export default {\nmixins: [ui, input, overlay],\nprops: {\n...AutocompleteBase.props,\n- focusClass: {\n- type: String,\n- default: 'veui-autocomplete-focus'\n- },\nsuggestTrigger: {\ntype: [String, Array],\ndefault: 'input'\n",
        "date": "28.05.2019 19:33:04",
        "repo": "ecomfe/veui",
        "type": "refactor",
        "sim_msg": "fix: QAutocomplete staticData reference",
        "sim_diff": "diff --git a/src/components/autocomplete/QAutocomplete.vue b/src/components/autocomplete/QAutocomplete.vue @@ -157,7 +157,7 @@ export default {\n},\nsetValue (result) {\nconst suffix = this.__inputParent ? 'Parent' : ''\n- this[`__input${suffix}`].set(this.staticData ? result[staticData.field] : result.value)\n+ this[`__input${suffix}`].set(this.staticData ? result[this.staticData.field] : result.value)\nthis.$emit('selected', result)\nthis.__clearSearch()\n",
        "chatgpt_rag": "refactor: Remove focusClass prop from Autocomplete component"
    },
    {
        "msg": "refactor: use useGlobalOptions get  in Button",
        "diff": "diff --git a/packages/button/Button.vue b/packages/button/Button.vue </template>\n<script>\n-import { toRefs, inject, computed, getCurrentInstance } from 'vue'\n+import { useGlobalOptions } from '../../src/use/globalConfig'\n+import { toRefs, inject, computed } from 'vue'\nexport default {\nname: 'ElButton',\nprops: {\n@@ -89,13 +90,10 @@ const useButtonDisabled = (disabled) => {\n}\nconst useButtonSize = (size) => {\n+ const globalConfig = useGlobalOptions()\nreturn computed(() => {\nconst elFormItem = inject('elFormItem', {})\n- return (\n- size?.value ||\n- elFormItem.elFormItemSize ||\n- getCurrentInstance().ctx.$ELEMENT?.size\n- )\n+ return size?.value || elFormItem.elFormItemSize || globalConfig.size\n})\n}\n</script>\n",
        "date": "28.11.2020 16:50:26",
        "repo": "hug-sun/element3",
        "type": "refactor",
        "sim_msg": "feat(button): set light as default variant\nb4.beta secondary is now \"grey\" this reduces breaking changes",
        "sim_diff": "diff --git a/lib/components/button.vue b/lib/components/button.vue @@ -49,7 +49,7 @@ export default {\nreturn this.block ? 'btn-block' : '';\n},\nbtnVariant() {\n- return this.variant ? `btn-${this.variant}` : `btn-secondary`;\n+ return this.variant ? `btn-${this.variant}` : `btn-light`;\n},\nbtnSize() {\nreturn this.size ? `btn-${this.size}` : '';\n",
        "chatgpt_rag": "refactor(button): use globalConfig for button size calculation"
    },
    {
        "msg": "refactor(fab): remove variable references",
        "diff": "diff --git a/consumables/scss/components/fab/fab.scss b/consumables/scss/components/fab/fab.scss @import '../../global/colors/colors';\n@import '../../global/helpers';\n@import '../../global/layout/grid';\n-@import 'vars';\n@import '../../import-once';\n@include exports('fab') {\n.bx--fab__hexagon {\ntransition: fill $transition--base;\n- fill: $color__fab-hexagon;\n+ fill: $color__blue-40;\n}\n.bx--fab__plus-icon {\n@include rotate(0, $transition--base);\n- fill: $color__fab-plus-icon;\n+ fill: $color__white;\n}\n}\n.bx--fab__hexagon {\ntransition: fill $transition--base;\n- fill: $color__fab-hexagon--is-closed;\n+ fill: $color__navy-gray-5;\n}\n.bx--fab__plus-icon {\n",
        "date": "04.01.2017 16:27:07",
        "repo": "carbon-design-system/carbon",
        "type": "refactor",
        "sim_msg": "chore: use font mixin for global styles",
        "sim_diff": "diff --git a/src/scss/global.scss b/src/scss/global.scss @import '~scss/colors.module.scss';\n@import '~scss/breakpoints.module.scss';\n@import '~scss/helpers.module.scss';\n+@import '~scss/type.module.scss';\nhtml {\nbox-sizing: border-box;\n@@ -14,7 +15,7 @@ html {\n}\nbody {\n- font-size: 16px;\n+ @include type-size(200);\ncolor: $text;\nfont: normal 100%/1.5 'system-ui', '-apple-system', 'BlinkMacSystemFont',\n'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans',\n@@ -178,7 +179,7 @@ Headline treatments\n*/\n.hed-primary,\n.module-content h2 {\n- font-size: 1.375rem;\n+ @include type-size(400);\nline-height: 1.25;\n@include margin(16, bottom);\n}\n@@ -186,23 +187,23 @@ Headline treatments\n@media (min-width: $viewport-md) {\n.hed-primary,\n.module-content h2 {\n- font-size: 1.875rem;\n+ @include type-size(500);\n}\n}\n.hed-secondary {\n- font-size: 1.125rem;\n+ @include type-size(300);\n@include margin(8, bottom);\n}\n@media (min-width: $viewport-md) {\n.hed-secondary {\n- font-size: 1.4375rem;\n+ @include type-size(400);\n}\n}\n.hed-featured {\n- font-size: 1.4rem;\n+ @include type-size(400);\nfont-weight: 300;\nline-height: 1.25;\n@include margin(16, bottom);\n@@ -210,13 +211,13 @@ Headline treatments\n@media (min-width: $viewport-md) {\n.hed-featured {\n- font-size: 1.75rem;\n+ @include type-size(500);\n}\n}\n.hed-landscape {\ncolor: $color-slate-700;\n- font-size: 1.125rem;\n+ @include type-size(300);\ntext-align: center;\nfont-variant: all-small-caps;\n// margin: 0 0 0.2rem;\n@@ -231,10 +232,9 @@ Typography\n.layout--content-and-rail {\n.layout--content-primary {\nfont-size: 18px;\n- font-size: 1.125rem;\n+ @include type-size(300);\n@media (min-width: $viewport-lg) {\n- font-size: 22px;\n- font-size: 1.375rem;\n+ @include type-size(400);\n}\nh2:first-child {\nmargin-top: 0;\n@@ -244,8 +244,7 @@ Typography\n.layout--content-primary {\n@media (min-width: $viewport-lg) {\n- font-size: 18px;\n- font-size: 1.125rem;\n+ @include type-size(300);\n}\n}\n@@ -270,13 +269,11 @@ Typography\n.module-content {\nh2 {\n- font-size: 24px;\n- font-size: 1.5rem;\n+ @include type-size(400);\nline-height: 1.25;\nmargin: spacer(32) 0 spacer(4);\n@media (min-width: $viewport-lg) {\n- font-size: 30px;\n- font-size: 1.875rem;\n+ @include type-size(500);\n}\n}\n@@ -285,7 +282,7 @@ Typography\n}\nh3 {\n- font-size: 1.35rem;\n+ @include type-size(400);\nmargin: spacer(32) 0 spacer(4);\n}\n@@ -302,7 +299,7 @@ Typography\n@media (min-width: $viewport-md) {\n.layout--content-secondary {\n- font-size: 1.125rem;\n+ @include type-size(300);\nline-height: 1.3;\n}\n}\n",
        "chatgpt_rag": "style: update colors in fab component styling"
    },
    {
        "msg": "refactor: Preact CLI tests",
        "diff": "diff --git a/src/commands/create.js b/src/commands/create.js @@ -115,9 +115,9 @@ export default asyncCommand({\nawait fs.writeFile(path.resolve(target, 'package.json'), JSON.stringify(pkg, null, 2));\n+ if (argv.install) {\nspinner.text = 'Installing dev dependencies';\n- if (argv.install) {\nawait npm(target, [\n'install', '--save-dev',\n'preact-cli',\n@@ -146,9 +146,9 @@ export default asyncCommand({\n'preact-compat',\n'preact-router'\n]);\n- }\nspinner.succeed('Done!\\n');\n+ }\nreturn `\nTo get started, cd into the new directory:\n",
        "date": "12.06.2017 17:23:18",
        "repo": "preactjs/preact-cli",
        "type": "refactor",
        "sim_msg": "chore: correct release package",
        "sim_diff": "diff --git a/scripts/release.js b/scripts/release.js @@ -4,7 +4,7 @@ const inquirer = require('inquirer');\nconst fs = require('fs');\nconst path = require('path');\nconst pkg = require('../package.json');\n-const childPkg = require('../dist/package.json');\n+const childPkg = require('../src/copy/package.json');\nasync function release() {\nconst options = await inquirer.prompt([\n@@ -72,7 +72,7 @@ async function release() {\nfs.writeFileSync(path.resolve(__dirname, '../package.json'), `${JSON.stringify(pkg, null, 2)}\\n`);\nfs.writeFileSync(\n- path.resolve(__dirname, '../dist/package.json'),\n+ path.resolve(__dirname, '../src/copy/package.json'),\n`${JSON.stringify(childPkg, null, 2)}\\n`,\n);\n",
        "chatgpt_rag": "fix: correct conditional check for installing dev dependencies in create command"
    },
    {
        "msg": "refactor: rename to ElPagination",
        "diff": "diff --git a/packages/pagination/index.js b/packages/pagination/index.js -import Pagination from './Pagination'\n+import ElPagination from './Pagination'\n/* istanbul ignore next */\n-Pagination.install = function (app) {\n- app.component(Pagination.name, Pagination)\n+ElPagination.install = function (app) {\n+ app.component(ElPagination.name, ElPagination)\n}\n-export default Pagination\n+export default ElPagination\n",
        "date": "23.10.2020 16:26:56",
        "repo": "hug-sun/element3",
        "type": "refactor",
        "sim_msg": "refactor(client): use existing Cirrus centering classes\nUse Cirrus's `u-center` to center instead of making a new style.",
        "sim_diff": "diff --git a/client/src/components/pagination.jsx b/client/src/components/pagination.jsx @@ -36,7 +36,7 @@ const PaginationEllipses = withStyles({\n)\n})\n-function Pagination ({ classes, totalItems, pageSize, page, setPage, numVisiblePages }) {\n+function Pagination ({ totalItems, pageSize, page, setPage, numVisiblePages }) {\nnumVisiblePages = numVisiblePages || 9\nconst totalPages = Math.ceil(totalItems / pageSize)\nconst { pages, startPage, endPage } = useMemo(() => {\n@@ -81,7 +81,7 @@ function Pagination ({ classes, totalItems, pageSize, page, setPage, numVisibleP\n}, [setPage, totalPages])\nreturn (\n- <div class={`pagination ${classes.paginationCentered}`}>\n+ <div class='pagination u-center'>\n<PaginationItem disabled={page === 1} key='<' onClick={boundSetPages[page - 1 - 1]}>&lt;</PaginationItem>\n{ startPage > 1 &&\n<Fragment>\n@@ -101,8 +101,4 @@ function Pagination ({ classes, totalItems, pageSize, page, setPage, numVisibleP\n)\n}\n-export default withStyles({\n- paginationCentered: {\n- justifyContent: 'center'\n- }\n-}, Pagination)\n+export default Pagination\n",
        "chatgpt_rag": "refactor(pagination): rename Pagination component to ElPagination\nRenamed Pagination component to ElPagination for better clarity and consistency. Updated the installation method accordingly."
    },
    {
        "msg": "refactor: composition-api refactor ok",
        "diff": "diff --git a/packages/input/src/use.js b/packages/input/src/use.js -import { computed, getCurrentInstance, inject, ref, unref, nextTick } from 'vue'\n+import { computed, getCurrentInstance, inject, ref, unref, nextTick, watch } from 'vue'\nimport merge from 'element-ui/src/utils/merge'\nimport { isKorean } from 'element-ui/src/utils/shared'\n@@ -21,7 +21,7 @@ export const useValidate = () => {\nreturn { validateState, validateIcon }\n}\n-export const useTextarea = (autosize, type, resize, textareaCalcStyle) => {\n+export const useTextarea = ({ autosize, type, resize, modelValue, validateEvent }, textareaCalcStyle, instance) => {\nconst textarea = ref(null)\nconst textareaStyle = computed(() => {\n@@ -46,10 +46,21 @@ export const useTextarea = (autosize, type, resize, textareaCalcStyle) => {\nmaxRows\n)\n}\n+\n+ watch(\n+ () => modelValue,\n+ (val) => {\n+ nextTick(resizeTextarea)\n+ if (unref(validateEvent)) {\n+ instance.proxy.dispatch('ElFormItem', 'el.form.change', [val])\n+ }\n+ }\n+ )\n+\nreturn { textarea, textareaStyle, resizeTextarea }\n}\n-export const useInput = (size, type, disabled, modelValue, readonly, clearable, showPassword, showWordLimit, { hovering, focused }, textarea, attrs) => {\n+export const useInput = ({ size, type, disabled, modelValue, suffixIcon, readonly, clearable, showPassword, showWordLimit }, { hovering, focused }, textarea, attrs, validateState, needStatusIcon, slots) => {\nconst input = ref(null)\nconst elFormItem = inject('elFormItem', {})\n@@ -108,7 +119,6 @@ export const useInput = (size, type, disabled, modelValue, readonly, clearable,\nunref(nativeInputValue) &&\n(unref(focused) || unref(hovering))\n)\n-\n})\nconst showPwdVisible = computed(() => {\nreturn (\n@@ -118,6 +128,16 @@ export const useInput = (size, type, disabled, modelValue, readonly, clearable,\n(!!unref(nativeInputValue) || unref(focused))\n)\n})\n+ const getSuffixVisible = () => {\n+ return (\n+ slots.suffix ||\n+ unref(suffixIcon) ||\n+ unref(showClear) ||\n+ unref(showPassword) ||\n+ unref(isWordLimitVisible) ||\n+ (unref(validateState) && unref(needStatusIcon))\n+ )\n+ }\nreturn {\ninput: input || textarea,\n@@ -129,11 +149,12 @@ export const useInput = (size, type, disabled, modelValue, readonly, clearable,\nupperLimit,\ntextLength,\nshowClear,\n- showPwdVisible\n+ showPwdVisible,\n+ getSuffixVisible\n}\n}\n-export const useInteractive = (instance, input, nativeInputValue, modelValue, { focused, isComposing, passwordVisible }, validateEvent, emit, slots) => {\n+export const useInteractive = (instance, input, { type, modelValue, validateEvent }, { focused, isComposing, passwordVisible }, nativeInputValue, emit, slots) => {\nconst focus = () => {\nunref(input).focus()\n@@ -250,6 +271,13 @@ export const useInteractive = (instance, input, nativeInputValue, modelValue, {\ncalcIconOffset('suffix')\n}\n+ watch(\n+ () => nativeInputValue,\n+ () => {\n+ setNativeInputValue()\n+ }\n+ )\n+\nreturn {\nfocus,\nblur,\n",
        "date": "07.08.2020 15:54:42",
        "repo": "hug-sun/element3",
        "type": "refactor",
        "sim_msg": "refactor: TextInputFocusable add isDisabled prop to the native component too",
        "sim_diff": "diff --git a/src/components/TextInputFocusable/index.native.js b/src/components/TextInputFocusable/index.native.js @@ -21,12 +21,16 @@ const propTypes = {\n/* Set focus to this component the first time it renders. Override this in case you need to set focus on one\n* field out of many, or when you want to disable autoFocus */\nautoFocus: PropTypes.bool,\n+\n+ /* Prevent edits and interactions like focus for this input. */\n+ isDisabled: PropTypes.bool,\n};\nconst defaultProps = {\nshouldClear: false,\nonClear: () => {},\nautoFocus: false,\n+ isDisabled: false,\n};\nclass TextInputFocusable extends React.Component {\n@@ -53,6 +57,7 @@ class TextInputFocusable extends React.Component {\nref={el => this.textInput = el}\nmaxHeight={116}\nrejectResponderTermination={false}\n+ editable={!this.props.isDisabled}\n/* eslint-disable-next-line react/jsx-props-no-spreading */\n{...this.props}\n/>\n",
        "chatgpt_rag": "feat: Add watch for nativeInputValue in useInteractive function"
    },
    {
        "msg": "refactor(stat): use functional api",
        "diff": "diff --git a/packages/chakra-ui-core/src/CStat/CStat.js b/packages/chakra-ui-core/src/CStat/CStat.js @@ -38,17 +38,17 @@ const arrowOptions = {\n*/\nconst CStat = {\nname: 'CStat',\n- extends: CBox,\n- render (h) {\n- const children = cleanChildren(this.$slots.default)\n+ functional: true,\n+ render (h, { props, slots, data, ...rest }) {\n+ const children = cleanChildren(slots().default)\nreturn h(CBox, {\n- props: {\n+ ...rest,\n+ props: { as: props.as },\n+ attrs: {\nflex: 1,\npr: 4,\nposition: 'relative',\n- ...forwardProps(this.$props)\n- },\n- attrs: {\n+ ...(data.attrs || {}),\n'data-chakra-component': 'CStat'\n}\n}, children)\n@@ -65,17 +65,20 @@ const CStat = {\n*/\nconst CStatGroup = {\nname: 'CStatGroup',\n- extends: CFlex,\n- render (h) {\n- const children = cleanChildren(this.$slots.default)\n+ functional: true,\n+ props: CFlex.props,\n+ render (h, { props, slots, data, ...rest }) {\n+ const children = cleanChildren(slots().default)\nreturn h(CFlex, {\n+ ...rest,\nprops: {\nflexWrap: 'wrap',\njustifyContent: 'space-around',\nalignItems: 'flex-start',\n- ...forwardProps(this.$props)\n+ ...forwardProps(props)\n},\nattrs: {\n+ ...(data.attrs || {}),\n'data-chakra-component': 'CStatGroup'\n}\n}, children)\n@@ -92,23 +95,27 @@ const CStatGroup = {\n*/\nconst CStatArrow = {\nname: 'CStatArrow',\n- extends: CIcon,\n+ functional: true,\nprops: {\n+ ...CIcon.props,\ntype: {\ntype: String,\ndefault: 'increase'\n}\n},\n- render (h) {\n+ render (h, { props, slots, data, ...rest }) {\nreturn h(CIcon, {\n+ ...rest,\nprops: {\n- mr: 1,\nsize: '14px',\n- verticalAlign: 'middle',\n- ...arrowOptions[this.type],\n- ...forwardProps(this.$props)\n+ ...arrowOptions[props.type],\n+ ...forwardProps(props)\n},\nattrs: {\n+ mr: 1,\n+ verticalAlign: 'middle',\n+ ...(data.attrs || {}),\n+ color: arrowOptions[props.type].color,\n'data-chakra-component': 'CStatArrow'\n}\n})\n@@ -125,19 +132,20 @@ const CStatArrow = {\n*/\nconst CStatNumber = {\nname: 'CStatNumber',\n- extends: CText,\n- render (h) {\n+ functional: true,\n+ props: CText.props,\n+ render (h, { props, slots, data, ...rest }) {\nreturn h(CText, {\n- props: {\n+ ...rest,\n+ props: forwardProps(props),\n+ attrs: {\nfontSize: '2xl',\nverticalAlign: 'baseline',\nfontWeight: 'semibold',\n- ...forwardProps(this.$props)\n- },\n- attrs: {\n+ ...(data.attrs || {}),\n'data-chakra-component': 'CStatNumber'\n}\n- }, this.$slots.default)\n+ }, slots().default)\n}\n}\n@@ -151,16 +159,20 @@ const CStatNumber = {\n*/\nconst CStatHelperText = {\nname: 'CStatHelperText',\n- extends: CText,\n- render (h) {\n+ functional: true,\n+ props: CText.props,\n+ render (h, { props, slots, data, ...rest }) {\nreturn h(CText, {\n- props: {\n+ ...rest,\n+ props: forwardProps(props),\n+ attrs: {\nfontSize: 'sm',\nopacity: 0.8,\nmb: 2,\n- ...forwardProps(this.$props)\n+ ...(data.attrs || {}),\n+ 'data-chakra-component': 'CStatHelperText'\n}\n- }, this.$slots.default)\n+ }, slots().default)\n}\n}\n@@ -174,18 +186,19 @@ const CStatHelperText = {\n*/\nconst CStatLabel = {\nname: 'CStatLabel',\n- extends: CText,\n- render (h) {\n+ functional: true,\n+ props: CText.props,\n+ render (h, { props, slots, data, ...rest }) {\nreturn h(CText, {\n- props: {\n+ ...rest,\n+ props: forwardProps(props),\n+ attrs: {\nfontWeight: 'medium',\nfontSize: 'sm',\n- ...forwardProps(this.$props)\n- },\n- attrs: {\n+ ...(data.attrs || {}),\n'data-chakra-component': 'CStatLabel'\n}\n- }, this.$slots.default)\n+ }, slots().default)\n}\n}\n",
        "date": "12.07.2020 12:02:29",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "refactor",
        "sim_msg": "refactor(cdr-select): remove script setup",
        "sim_diff": "diff --git a/src/components/select/CdrSelect.vue b/src/components/select/CdrSelect.vue <script>\n-export default {\n- inheritAttrs: false,\n- customOptions: {}\n-}\n-</script>\n-\n-<script setup>\n-import { useCssModule, useSlots, useAttrs, computed } from 'vue';\n+import { defineComponent, useCssModule, computed } from 'vue';\nimport IconCaretDown from '../icon/comps/caret-down.vue';\nimport CdrLabelStandalone from '../labelStandalone/CdrLabelStandalone.vue';\nimport CdrFormError from '../formError/CdrFormError.vue';\n@@ -14,13 +7,22 @@ import sizeProps from '../../props/size.js';\nimport backgroundProps from '../../props/background.js';\nimport mapClasses from '../../utils/mapClasses.js';\nimport uid from '../../utils/uid.js';\n-const emit = defineEmits(['update:modelValue'])\n-const props = defineProps({\n+\n+export default defineComponent({\n+ name: 'CdrSelect',\n+ inheritAttrs: false,\n+ components: {\n+ IconCaretDown,\n+ CdrLabelStandalone,\n+ CdrFormError\n+ },\n+ props: {\n/**\n* `id` for the select that is mapped to the label `for` attribute. If one is not provided, it will be generated.\n*/\nid: {\ntype: String,\n+ default: uid()\n},\n/**\n* Label text. This is required for a11y even if hiding the label with `hideLabel`.\n@@ -69,15 +71,14 @@ const props = defineProps({\noptional: Boolean,\nmultiple: Boolean,\nmultipleSize: Number,\n-})\n-const slots = useSlots();\n-const attrs = useAttrs();\n+ },\n+ customOptions: {},\n+ setup(props, ctx) {\nconst baseClass = 'cdr-select';\n-const hasHelper = slots['helper-text'];\n-const hasInfo = slots.info;\n-const hasInfoAction = slots['info-action'];\n-const hasPreIcon = slots['pre-icon'];\n-const uniqueId = props.id ? props.id : uid();\n+ const hasHelper = ctx.slots['helper-text'];\n+ const hasInfo = ctx.slots.info;\n+ const hasInfoAction = ctx.slots['info-action'];\n+ const hasPreIcon = ctx.slots['pre-icon'];\nconst multipleClass = computed(() => props.multiple && 'cdr-select--multiple');\n@@ -90,12 +91,12 @@ const caretDisabledClass = computed(() => props.disabled && 'cdr-select__caret--\nconst describedby = computed(() => {\nconst helperText = [\n- slots['helper-text'] ? `${uniqueId}-helper-text-top` : '',\n- attrs['aria-describedby'],\n+ ctx.slots['helper-text'] ? `${props.id}-helper-text-top` : '',\n+ ctx.attrs['aria-describedby'],\n].filter((x) => x).join(' ');\nif (props.error) {\n- return `${uniqueId}-error`;\n+ return `${props.id}-error`;\n}\nreturn helperText;\n@@ -130,15 +131,37 @@ const selectModel = computed({\nreturn props.modelValue\n},\nset(newValue) {\n- emit('update:modelValue', newValue)\n+ ctx.emit('update:modelValue', newValue)\n}\n})\nconst style = useCssModule();\n+\n+ return {\n+ mapClasses,\n+ baseClass,\n+ hasHelper,\n+ hasInfo,\n+ hasInfoAction,\n+ hasPreIcon,\n+ multipleClass,\n+ promptClass,\n+ preIconClass,\n+ errorClass,\n+ backgroundClass,\n+ sizeClass,\n+ caretDisabledClass,\n+ describedby,\n+ computedOpts,\n+ selectModel,\n+ style\n+ }\n+ }\n+})\n</script>\n<template>\n<cdr-label-standalone\n- :for-id=\"uniqueId\"\n+ :for-id=\"id\"\n:label=\"label\"\n:hide-label=\"hideLabel\"\n:required=\"required\"\n@@ -168,7 +191,7 @@ const style = useCssModule();\n</span>\n<select\n- :id=\"uniqueId\"\n+ :id=\"id\"\n:class=\"mapClasses(style,\nbaseClass,\nsizeClass,\n@@ -184,7 +207,7 @@ const style = useCssModule();\n:aria-required=\"required || null\"\n:aria-invalid=\"!!error || null\"\n- :aria-errormessage=\"(!!error && `${uniqueId}-error`) || null\"\n+ :aria-errormessage=\"(!!error && `${id}-error`) || null\"\nv-bind=\"$attrs\"\n:aria-describedby=\"describedby || null\"\n:value=\"modelValue\"\n@@ -219,7 +242,7 @@ const style = useCssModule();\n<cdr-form-error\n:error=\"error\"\n:role=\"errorRole\"\n- :id=\"`${uniqueId}-error`\"\n+ :id=\"`${id}-error`\"\nv-if=\"error\"\n>\n<template #error>\n",
        "chatgpt_rag": "refactor(chakra-ui-core): convert CStat, CStatGroup, CStatArrow, CStatNumber, CStatHelperText, and CStatLabel components to functional components"
    },
    {
        "msg": "refactor: use computed data to see whether to use router link",
        "diff": "diff --git a/packages/veui/src/components/Link.vue b/packages/veui/src/components/Link.vue <slot/>\n</component>\n<router-link\n- v-else-if=\"$router && !native\"\n+ v-else-if=\"useRouter\"\n:class=\"klass\"\n:to=\"to\"\n:rel=\"realRel\"\n@@ -73,6 +73,9 @@ export default {\n).join(' ')\n}\nreturn this.rel\n+ },\n+ useRouter () {\n+ return this.$router && !this.native\n}\n},\nmethods: {\n",
        "date": "31.05.2019 21:16:59",
        "repo": "ecomfe/veui",
        "type": "refactor",
        "sim_msg": "chore: Update index file for /dev",
        "sim_diff": "diff --git a/dev/components/index.vue b/dev/components/index.vue <div\nclass=\"list no-border\"\nv-for=\"(category, title) in list\"\n+ :key=\"`category-${title}`\"\n>\n<h4 class=\"uppercase\">\n{{ title }}\n</h4>\n- <router-link\n+ <q-item\nv-for=\"feature in category\"\n:key=\"`${feature.route}${feature.title}`\"\n- tag=\"div\"\n- class=\"q-item q-item-link\"\n:to=\"feature.route\"\n>\n<q-item-main :label=\"feature.title\" />\n<q-item-side right icon=\"chevron_right\" />\n- </router-link>\n+ </q-item>\n</div>\n</div>\n</div>\n",
        "chatgpt_rag": "chore: Update Link component to use useRouter method"
    },
    {
        "msg": "refactor(SentenTree): empty top-level element",
        "diff": "diff --git a/components/SentenTree/index.js b/components/SentenTree/index.js +import { select } from 'd3-selection';\n+\nimport VisComponent from '../../VisComponent';\nimport { SentenTreeBuilder,\nSentenTreeVis } from 'sententree/dist/SentenTree';\n@@ -53,6 +55,11 @@ export default class SentenTree extends VisComponent {\nconstructor (el, {data, id = null, text = 'text', count = 'count', graphs = 3}) {\nsuper(el);\n+ // Empty element.\n+ select(el)\n+ .selectAll('*')\n+ .remove();\n+\n// Transform input data into correct form.\nthis.data = data.map((d, i) => ({\nid: id ? d[id] : i,\n",
        "date": "04.05.2017 10:13:15",
        "repo": "kitware/candela",
        "type": "refactor",
        "sim_msg": "test(Select): custom tag show tests",
        "sim_diff": "diff --git a/test/select/index-spec.js b/test/select/index-spec.js @@ -456,6 +456,25 @@ describe('Select', () => {\nwrapper.find('i.next-icon-delete-filling').simulate('click');\n});\n+ it('should support custom content with mode=tag', done => {\n+ const value = [\n+ { label: 'xxx', value: '0' },\n+ { label: 'empty', value: 1 },\n+ { label: 'zzz', value: 1 },\n+ { label: 'yyy', value: 1 },\n+ ];\n+ wrapper.setProps({\n+ maxTagTextLength: 2,\n+ visible: true,\n+ maxTagCount: 2,\n+ mode: 'tag',\n+ value\n+ });\n+ wrapper.update();\n+ assert(wrapper.find('span.next-select div.next-tag').length === 3);\n+ done()\n+ });\n+\nit('should support onChange with mode=single ', done => {\nconst dataSource = [\n{ label: 'xxx', value: '0' },\n",
        "chatgpt_rag": "refactor(SentenTree): remove all elements before rendering data in constructor"
    },
    {
        "msg": "refactor(Utilities): update generator",
        "diff": "diff --git a/scss/mixins/_utilities.scss b/scss/mixins/_utilities.scss $properties: append((), $properties);\n}\n- // Use class prefix if present\n- $property-class-prefix: if(map-has-key($utility, prefix), map-get($utility, prefix), null);\n- $property-class-prefix: if($property-class-prefix == null, \"\", $property-class-prefix);\n-\n// Use custom class if present\n$property-class: if(map-has-key($utility, class), map-get($utility, class), nth($properties, 1));\n$property-class: if($property-class == null, \"\", $property-class);\n// Don't prefix if value key is null (eg. with shadow class)\n$property-class-modifier: if($key, if($property-class == \"\" and $infix == \"\", \"\", \"-\") + $key, \"\");\n- // Generate also CSS Variable\n+ // Generate CSS Variable\n$generate-vars: if(map-has-key($utility, vars), map-get($utility, vars), false);\n$generate-only-vars: if(map-has-key($utility, only-vars), map-get($utility, only-vars), false);\n// Generate RTL version\n$generate-rtl: if(map-has-key($utility, rtl), map-get($utility, rtl), false);\n+ // // Add theme prefix\n+ // $theme-prefix: if(map-has-key($utility, theme-prefix), map-get($utility, theme-prefix), false);\n+\n@if map-get($utility, rfs) {\n// Inside the media query\n@if $is-rfs-media-query {\n@if $is-rtl == false {\n/* rtl:begin:remove */\n}\n- .#{$property-class-prefix + $property-class + $infix + $property-class-modifier} {\n+\n+ .#{$property-class + $infix + $property-class-modifier} {\n@each $property in $properties {\n@if $generate-vars == true or $generate-only-vars == true {\n@if $generate-only-vars {\n",
        "date": "22.03.2021 13:52:52",
        "repo": "coreui/coreui",
        "type": "refactor",
        "sim_msg": "perf: additional utils for brand colors only (use light for gray)",
        "sim_diff": "diff --git a/scss/_utilities.scss b/scss/_utilities.scss /**\n*\n* Provide additional utility classes for theming\n- * Extra utilities with brand and gray colors\n+ * Extra utilities with brand colors\n*\n*/\n-@mixin utils-variant($color, $value) {\n- // Text colors\n- .text_#{$color} {\n- color: $value;\n- }\n- .hover\\:text_#{$color}:hover {\n- color: $value;\n- }\n-\n- // Standalone background colors\n- .bg_#{$color} {\n- background-color: $value;\n- }\n- .hover\\:bg_#{$color}:hover {\n- background-color: $value;\n- }\n-\n- // Border colors\n- .border_#{$color} {\n- border-color: $value;\n- }\n- .hover\\:border_#{$color}:hover {\n- border-color: $value;\n- }\n-}\n-\n// Map brand colors pallete\n$brand-colors: (\n\"primary-lightest\": lighten($primary, 33%),\n@@ -51,7 +25,6 @@ $brand-colors: (\n@each $color, $value in $brand-colors {\n// Block utilities with background color and YIQ (white or black) text color\n- // For brand colors only\n.block_#{$color} {\nbackground-color: $value;\ncolor: color-yiq($value);\n@@ -60,10 +33,28 @@ $brand-colors: (\nbackground-color: $value;\ncolor: color-yiq($value);\n}\n- @include utils-variant($color, $value);\n+\n+ // Text colors\n+ .text_#{$color} {\n+ color: $value;\n+ }\n+ .hover\\:text_#{$color}:hover {\n+ color: $value;\n}\n-@each $color, $value in $grays {\n- // utilities for grayscale\n- @include utils-variant(\"gray-#{$color}\", $value);\n+ // Standalone background colors\n+ .bg_#{$color} {\n+ background-color: $value;\n+ }\n+ .hover\\:bg_#{$color}:hover {\n+ background-color: $value;\n+ }\n+\n+ // Border colors\n+ .border_#{$color} {\n+ border-color: $value;\n+ }\n+ .hover\\:border_#{$color}:hover {\n+ border-color: $value;\n+ }\n}\n",
        "chatgpt_rag": "style: update CSS variable generation logic and remove theme prefix usage"
    },
    {
        "msg": "refactor: getFiles: allPlaces -> processedPlaces",
        "diff": "diff --git a/packages/engine-processor/lib/processor.js b/packages/engine-processor/lib/processor.js @@ -102,14 +102,15 @@ async function iterate({name, rawSource, fileList, merge, processFile, processed\nasync function getFiles({name, fix, rawSource, processorRunners}) {\nconst fileList = [];\n- const allPlaces = [];\n+ const processedPlaces = [];\nlet isProcessed = false;\nlet processedSource = '';\n- let processedPlaces = [];\nlet merge = null;\nfor (const currentRunner of processorRunners) {\n+ let places = [];\n+\nconst {\nisMatch,\nbranch = stubSplit,\n@@ -127,16 +128,16 @@ async function getFiles({name, fix, rawSource, processorRunners}) {\nisProcessed = true;\nif (lint)\n- [processedSource, processedPlaces] = await lint(rawSource, {fix});\n+ [processedSource, places] = await lint(rawSource, {fix});\nelse if (fix)\nprocessedSource = await fixFind(rawSource);\nelse\n- processedPlaces = await find(rawSource);\n+ places = await find(rawSource);\nif (!processedSource)\nprocessedSource = rawSource;\n- allPlaces.push(...processedPlaces);\n+ processedPlaces.push(...places);\nconst files = await branch(processedSource);\n@@ -147,7 +148,7 @@ async function getFiles({name, fix, rawSource, processorRunners}) {\nmerge,\nisProcessed,\nprocessedSource,\n- processedPlaces: allPlaces,\n+ processedPlaces,\nfileList,\n};\n}\n",
        "date": "23.09.2022 13:27:11",
        "repo": "coderaiser/putout",
        "type": "refactor",
        "sim_msg": "docs: add git util example to docs",
        "sim_diff": "diff --git a/packages/git-utils/README.md b/packages/git-utils/README.md +<img src=\"../../static/logo.png\" width=\"400\"/><br>\n+\n+[![Coverage Status](https://codecov.io/gh/netlify/build/branch/master/graph/badge.svg)](https://codecov.io/gh/netlify/build)\n+[![Build](https://github.com/netlify/build/workflows/Build/badge.svg)](https://github.com/netlify/build/actions)\n+\n# Git Utility\nUtility for dealing with modified, created, deleted files since a git commit.\n@@ -11,68 +16,49 @@ npm install @netlify/git-utils\n## Usage\n```js\n-const gitUtils = require('@netlify/git-utils')\n+/* Export the Netlify Plugin */\n+module.exports = function netlifyPlugin() {\n+ return {\n+ name: 'netlify-plugin-one',\n+ onInit: ({ utils }) => {\n+ const { git } = utils\n-// Git commit ref / branch to check against. Default is 'master'\n-const GIT_COMMIT_REF = '9f63b23ec99e36a176d73909fc67a39dc3bd56b7'\n-\n-gitUtils({\n- base: GIT_COMMIT_REF,\n-}).then(git => {\n- /* git data returns\n- {\n- fileMatch: [Function], <-- Lookup function\n- modifiedFiles: [ Array of modified files ],\n- createdFiles: [ Array of created files ],\n- deletedFiles: [ Array of deleted files ],\n- commits: [ Array of commits ],\n- linesOfCode: [AsyncFunction: linesOfCode]\n+ /* Do stuff if files modified */\n+ if (git.modifiedFiles.length) {\n+ console.log('Modified files:', git.modifiedFiles)\n}\n- */\n- if (modifiedFiles.length) {\n- // Some files have changed\n- }\n+ /* Do stuff only if html code edited */\n+ const htmlFiles = git.fileMatch('**/*.html')\n+ console.log('html files git info:', htmlFiles)\n- if (createdFiles.length) {\n- // Some files have been created\n+ if (htmlFiles.edited) {\n+ console.log('>> Run thing because HTML has changed\\n')\n}\n+ //\n+ /* Do stuff only if markdown files edited */\n+ const markdownFiles = git.fileMatch('**/*.md')\n+ console.log('markdown files git info:', markdownFiles)\n- if (deletedFiles.length) {\n- // Some files have been deleted\n+ if (markdownFiles.modified) {\n+ console.log('>> Run thing because Markdown files have been created/changed/deleted\\n')\n}\n- /* Using fileMatch function */\n- const srcCode = git.fileMatch('src/**/*.js')\n- /* srcCode is object\n- {\n- modified: true,\n- created: true,\n- deleted: true,\n- edited: true,\n- getKeyedPaths: [Function: getKeyedPaths]\n- }\n- */\n- if (srcCode.edited) {\n- console.log('srcCode has been edited')\n- // Do stuff because src edited\n- }\n+ /* Do stuff only if css files edited */\n+ const cssFiles = git.fileMatch('**/*.css')\n+ console.log('css files git info:', cssFiles)\n- const mdFiles = git.fileMatch('**/*.md')\n- if (mdFiles.edited) {\n- // Do stuff because markdown files are changed\n+ if (cssFiles.deleted) {\n+ console.log('>> Run thing because css files have been deleted\\n')\n+ const whichFiles = cssFiles.getKeyedPaths()\n+ console.log(whichFiles)\n+ }\n+ },\n+ onPreBuild: () => {\n+ // Do my magic stuff\n+ },\n}\n-\n- const mdFilesData = git.match('**/*.md')\n- /* mdFilesData is full information on the files in the sub path that changed\n- {\n- modified: [ Array of modified files ],\n- created: [ Array of created files ],\n- deleted:[ Array of deleted files ],\n- edited: [ Array of edited files ]\n}\n- */\n-})\n```\n## Prior art\n",
        "chatgpt_rag": "refactor: update variable names in getFiles function for clarity"
    },
    {
        "msg": "refactor: remove unnecessary me = this",
        "diff": "diff --git a/packages/veui/src/components/FilterPanel.vue b/packages/veui/src/components/FilterPanel.vue @@ -89,8 +89,7 @@ export default {\n}\n},\ncreated () {\n- let me = this\n- this.debounceSearch = debounce(() => me.search(), 200)\n+ this.debounceSearch = debounce(() => this.search(), 200)\n},\nbeforeDestroy () {\nthis.debounceSearch.cancel()\n",
        "date": "09.02.2019 11:15:17",
        "repo": "ecomfe/veui",
        "type": "refactor",
        "sim_msg": "fix: QSearch | :after, :before not working",
        "sim_diff": "diff --git a/src/components/search/QSearch.vue b/src/components/search/QSearch.vue @blur=\"__onBlur\"\n@keyup=\"__onKeyup\"\n@keydown=\"__onKeydown\"\n+ @click=\"__onClick\"\n>\n<slot></slot>\n</q-input>\n@@ -115,10 +116,10 @@ export default {\n: this.debounce\n},\ncontrolBefore () {\n- return [{icon: this.icon, handler: this.focus}]\n+ return this.before || [{icon: this.icon, handler: this.focus}]\n},\ncontrolAfter () {\n- return [{\n+ return this.after || [{\nicon: this.inverted ? 'clear' : 'cancel',\ncontent: true,\nhandler: this.clearAndFocus\n",
        "chatgpt_rag": "refactor: FilterPanel | Simplify debounceSearch function and use arrow function for debounce"
    },
    {
        "msg": "refactor(colors): code structure cleanup, fixed missing export",
        "diff": "diff --git a/src/modeling/color.js b/src/modeling/color.js @@ -180,7 +180,6 @@ export function color () {\nreturn o.setColor(c)\n}\n-\n// from http://axonflux.com/handy-rgb-to-hsl-and-rgb-to-hsv-color-model-c\n/**\n* Converts an RGB color value to HSL. Conversion formula\n@@ -193,25 +192,31 @@ export function color () {\n* @param Number b The blue color value\n* @return Array The HSL representation\n*/\n-function rgb2hsl(r, g, b){\n+export function rgb2hsl (r, g, b) {\nif (r.length) { b = r[2], g = r[1], r = r[0]; }\n- var max = Math.max(r, g, b), min = Math.min(r, g, b);\n- var h, s, l = (max + min) / 2;\n+ var max = Math.max(r, g, b), min = Math.min(r, g, b)\n+ var h, s, l = (max + min) / 2\nif (max == min) {\n- h = s = 0; // achromatic\n+ h = s = 0 // achromatic\n} else {\n- var d = max - min;\n- s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n+ var d = max - min\n+ s = l > 0.5 ? d / (2 - max - min) : d / (max + min)\nswitch (max) {\n- case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n- case g: h = (b - r) / d + 2; break;\n- case b: h = (r - g) / d + 4; break;\n+ case r:\n+ h = (g - b) / d + (g < b ? 6 : 0)\n+ break\n+ case g:\n+ h = (b - r) / d + 2\n+ break\n+ case b:\n+ h = (r - g) / d + 4\n+ break\n}\n- h /= 6;\n+ h /= 6\n}\n- return [h, s, l];\n+ return [h, s, l]\n}\n/**\n@@ -227,28 +232,28 @@ function rgb2hsl(r, g, b){\n*/\nexport function hsl2rgb (h, s, l) {\nif (h.length) { l = h[2], s = h[1], h = h[0]; }\n- var r, g, b;\n+ var r, g, b\nif (s == 0) {\n- r = g = b = l; // achromatic\n+ r = g = b = l // achromatic\n} else {\nfunction hue2rgb (p, q, t) {\n- if(t < 0) t += 1;\n- if(t > 1) t -= 1;\n- if(t < 1/6) return p + (q - p) * 6 * t;\n- if(t < 1/2) return q;\n- if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;\n- return p;\n+ if (t < 0) t += 1\n+ if (t > 1) t -= 1\n+ if (t < 1 / 6) return p + (q - p) * 6 * t\n+ if (t < 1 / 2) return q\n+ if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6\n+ return p\n}\n- var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n- var p = 2 * l - q;\n- r = hue2rgb(p, q, h + 1/3);\n- g = hue2rgb(p, q, h);\n- b = hue2rgb(p, q, h - 1/3);\n+ var q = l < 0.5 ? l * (1 + s) : l + s - l * s\n+ var p = 2 * l - q\n+ r = hue2rgb(p, q, h + 1 / 3)\n+ g = hue2rgb(p, q, h)\n+ b = hue2rgb(p, q, h - 1 / 3)\n}\n- return [r, g, b];\n+ return [r, g, b]\n}\n/**\n@@ -265,24 +270,30 @@ export function hsl2rgb(h, s, l){\nexport function rgb2hsv (r, g, b) {\nif (r.length) { b = r[2], g = r[1], r = r[0]; }\n- var max = Math.max(r, g, b), min = Math.min(r, g, b);\n- var h, s, v = max;\n+ var max = Math.max(r, g, b), min = Math.min(r, g, b)\n+ var h, s, v = max\n- var d = max - min;\n- s = max == 0 ? 0 : d / max;\n+ var d = max - min\n+ s = max == 0 ? 0 : d / max\nif (max == min) {\n- h = 0; // achromatic\n+ h = 0 // achromatic\n} else {\nswitch (max) {\n- case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n- case g: h = (b - r) / d + 2; break;\n- case b: h = (r - g) / d + 4; break;\n+ case r:\n+ h = (g - b) / d + (g < b ? 6 : 0)\n+ break\n+ case g:\n+ h = (b - r) / d + 2\n+ break\n+ case b:\n+ h = (r - g) / d + 4\n+ break\n}\n- h /= 6;\n+ h /= 6\n}\n- return [h, s, v];\n+ return [h, s, v]\n}\n/**\n@@ -298,24 +309,36 @@ export function rgb2hsv(r, g, b){\n*/\nexport function hsv2rgb (h, s, v) {\nif (h.length) { v = h[2], s = h[1], h = h[0]; }\n- var r, g, b;\n+ var r, g, b\n- var i = Math.floor(h * 6);\n- var f = h * 6 - i;\n- var p = v * (1 - s);\n- var q = v * (1 - f * s);\n- var t = v * (1 - (1 - f) * s);\n+ var i = Math.floor(h * 6)\n+ var f = h * 6 - i\n+ var p = v * (1 - s)\n+ var q = v * (1 - f * s)\n+ var t = v * (1 - (1 - f) * s)\nswitch (i % 6) {\n- case 0: r = v, g = t, b = p; break;\n- case 1: r = q, g = v, b = p; break;\n- case 2: r = p, g = v, b = t; break;\n- case 3: r = p, g = q, b = v; break;\n- case 4: r = t, g = p, b = v; break;\n- case 5: r = v, g = p, b = q; break;\n+ case 0:\n+ r = v, g = t, b = p\n+ break\n+ case 1:\n+ r = q, g = v, b = p\n+ break\n+ case 2:\n+ r = p, g = v, b = t\n+ break\n+ case 3:\n+ r = p, g = q, b = v\n+ break\n+ case 4:\n+ r = t, g = p, b = v\n+ break\n+ case 5:\n+ r = v, g = p, b = q\n+ break\n}\n- return [r, g, b];\n+ return [r, g, b]\n}\n/**\n@@ -326,15 +349,15 @@ export function hsv2rgb(h, s, v){\n* - convert the HEX value into RGB values\n*/\nexport function html2rgb (s) {\n- var r = 0;\n- var g = 0;\n- var b = 0;\n+ var r = 0\n+ var g = 0\n+ var b = 0\nif (s.length == 7) {\n- r = parseInt('0x'+s.slice(1,3))/255;\n- g = parseInt('0x'+s.slice(3,5))/255;\n- b = parseInt('0x'+s.slice(5,7))/255;\n+ r = parseInt('0x' + s.slice(1, 3)) / 255\n+ g = parseInt('0x' + s.slice(3, 5)) / 255\n+ b = parseInt('0x' + s.slice(5, 7)) / 255\n}\n- return [r,g,b];\n+ return [r, g, b]\n}\n/**\n@@ -346,6 +369,6 @@ export function html2rgb(s) {\nexport function rgb2html (r, g, b) {\nif (r.length) { b = r[2], g = r[1], r = r[0]; }\nvar s = '#' +\n- Number(0x1000000+r*255*0x10000+g*255*0x100+b*255).toString(16).substring(1);\n- return s;\n+ Number(0x1000000 + r * 255 * 0x10000 + g * 255 * 0x100 + b * 255).toString(16).substring(1)\n+ return s\n}\n",
        "date": "06.01.2017 23:20:21",
        "repo": "jscad/openjscad.org",
        "type": "refactor",
        "sim_msg": "feat: Improve color utils",
        "sim_diff": "diff --git a/src/utils/colors.js b/src/utils/colors.js -export function rgbToHex (r, g, b) {\n- if (typeof r === 'string') {\n- const res = r.match(/\\b\\d{1,3}\\b/g).map(Number)\n- r = res[0]\n- g = res[1]\n- b = res[2]\n- }\n+export function rgbToHex (r, g, b, a) {\n+ const alpha = a !== void 0\nif (\ntypeof r !== 'number' ||\n@@ -12,12 +7,17 @@ export function rgbToHex (r, g, b) {\ntypeof b !== 'number' ||\nr > 255 ||\ng > 255 ||\n- b > 255\n+ b > 255 ||\n+ (alpha && (typeof a !== 'number' || a > 100))\n) {\n- throw new TypeError('Expected three numbers below 256')\n+ throw new TypeError('Expected 3 numbers below 256 (and optionally 1 below 100)')\n}\n- return ((b | g << 8 | r << 16) | 1 << 24).toString(16).slice(1)\n+ const hex = alpha\n+ ? (b | g << 8 | r << 16 | a << 24) | 1 << 32\n+ : (b | g << 8 | r << 16) | 1 << 24\n+\n+ return hex.toString(alpha ? 24 : 16).slice(1)\n}\nexport function hexToRgb (hex) {\n@@ -30,13 +30,18 @@ export function hexToRgb (hex) {\nif (hex.length === 3) {\nhex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2]\n}\n+ else if (hex.length === 4) {\n+ hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2] + hex[3] + hex[3]\n+ }\nlet num = parseInt(hex, 16)\n- return [num >> 16, num >> 8 & 255, num & 255]\n+ return hex.length > 6\n+ ? [num >> 24, num >> 16 & 255, num >> 8 & 255, (num & 255) / 255]\n+ : [num >> 16, num >> 8 & 255, num & 255]\n}\n-export function hsvToRgb (h, s, v) {\n+export function hsvToRgb (h, s, v, a) {\nlet r, g, b, i, f, p, q, t\nif (arguments.length === 1) {\n@@ -88,11 +93,12 @@ export function hsvToRgb (h, s, v) {\nreturn {\nr: Math.round(r * 255),\ng: Math.round(g * 255),\n- b: Math.round(b * 255)\n+ b: Math.round(b * 255),\n+ a\n}\n}\n-export function rgbToHsv (r, g, b) {\n+export function rgbToHsv (r, g, b, a) {\nif (arguments.length === 1) {\nr = r.r\ng = r.g\n@@ -127,6 +133,7 @@ export function rgbToHsv (r, g, b) {\nreturn {\nh: h * 360,\ns: s,\n- v: v\n+ v: v,\n+ a\n}\n}\n",
        "chatgpt_rag": "refactor: Update rgb2hsl function to handle input parameters correctly"
    },
    {
        "msg": "refactor: use slot/slot-scope syntax for consistency",
        "diff": "diff --git a/packages/veui/src/components/Uploader.vue b/packages/veui/src/components/Uploader.vue :expanded.sync=\"expandedControlDropdowns[index]\"\n@click=\"handleMediaAction(file, index, $event)\"\n>\n- <template v-slot:trigger=\"{ props, handlers }\">\n+ <template\n+ slot=\"trigger\"\n+ slot-scope=\"{ props, handlers }\"\n+ >\n<label\nv-if=\"control.name === 'replace'\"\n:key=\"control.name\"\ntrigger=\"hover\"\n@click=\"handleMediaAction(file, index, $event)\"\n>\n- <template v-slot:trigger=\"{ props, handlers }\">\n+ <template\n+ slot=\"trigger\"\n+ slot-scope=\"{ props, handlers }\"\n+ >\n<label\nv-if=\"control.name === 'replace'\"\n:key=\"control.name\"\n@click=\"handleMediaEntry\"\n>\n<template\n- v-slot:trigger=\"{\n+ slot=\"trigger\"\n+ slot-scope=\"{\nprops: triggerProps,\nhandlers: triggerHandlers\n}\"\n@@ -830,12 +837,14 @@ export default {\n},\nrealAccept () {\nif (this.extensions) {\n- return this.extensions.map(extension => {\n+ return this.extensions\n+ .map(extension => {\nif (extension.indexOf('.') !== 0) {\nreturn `.${extension}`\n}\nreturn extension\n- }).join(',')\n+ })\n+ .join(',')\n}\nif (this.accept) {\nreturn this.accept\n@@ -991,7 +1000,11 @@ export default {\nlet newFiles = [...files]\nlet countFiles = this.fileList.length + newFiles.length\n- if (!this.isReplacing && this.maxCount !== 1 && countFiles > this.maxCount) {\n+ if (\n+ !this.isReplacing &&\n+ this.maxCount !== 1 &&\n+ countFiles > this.maxCount\n+ ) {\ntoast.error(this.t('tooManyFiles'))\nthis.$emit('invalid', {\nerrors: [\n@@ -1145,9 +1158,11 @@ export default {\nextensions = []\n}\n- return acceptExtention === '*' &&\n+ return (\n+ acceptExtention === '*' &&\nitem.indexOf('/') > -1 &&\n(extensions.indexOf(extension) > -1 || !extensions.length)\n+ )\n})\n},\nvalidateSize (fileSize) {\n@@ -1401,7 +1416,10 @@ export default {\ndefaultControls = [\n{\nname: 'preview',\n- icon: file.type === 'image' ? this.icons.previewImage : this.icons.previewVideo,\n+ icon:\n+ file.type === 'image'\n+ ? this.icons.previewImage\n+ : this.icons.previewVideo,\ndisabled: false,\nlabel: this.t('preview')\n}\n",
        "date": "08.12.2020 11:01:57",
        "repo": "ecomfe/veui",
        "type": "refactor",
        "sim_msg": "feat: Allow to access file upload response",
        "sim_diff": "diff --git a/src/vue-components/uploader/Uploader.vue b/src/vue-components/uploader/Uploader.vue @@ -168,8 +168,8 @@ export default {\nthis.otherFiles = this.otherFiles.concat(files.filter(file => !file.type.startsWith('image')))\nthis.files = this.files.concat(files)\n},\n- __remove (name, done) {\n- this.$emit(done ? 'upload' : 'remove', name)\n+ __remove (name, done, response) {\n+ this.$emit(done ? 'upload' : 'remove', name, response)\nthis.images = this.images.filter(file => file.name !== name)\nthis.otherFiles = this.otherFiles.filter(file => file.name !== name)\nthis.files = this.files.filter(file => file.name !== name)\n@@ -206,7 +206,7 @@ export default {\nreturn\n}\nif (xhr.status && xhr.status < 400) {\n- this.__remove(file.name, true)\n+ this.__remove(file.name, true, xhr.response)\nresolve(file)\n}\nelse {\n",
        "chatgpt_rag": "refactor: Refactor trigger slot in Uploader component to use slot-scope syntax\nThis commit refactors the trigger slot in the Uploader component to use the slot-scope syntax for better readability and consistency. It updates the slot definition and usage to align with the Vue.js best practices."
    },
    {
        "msg": "refactor(src/common/routing/index.jsx): make absolute export for RouteAuth",
        "diff": "diff --git a/src/common/routing/index.jsx b/src/common/routing/index.jsx import {Route} from 'react-router-dom'\nimport {Users, Dashboard, Login} from 'containers'\n-import {RouteAuth} from 'components/addons'\n+import RouteAuth from 'components/addons/RouteAuth'\nimport {createBrowserHistory, createMemoryHistory} from 'history'\nexport const history = getHistory()\n",
        "date": "10.08.2017 04:53:59",
        "repo": "metnew/suicrux",
        "type": "refactor",
        "sim_msg": "refactor: create injectReducer",
        "sim_diff": "diff --git a/packages/frontend/src/index.js b/packages/frontend/src/index.js @@ -20,6 +20,10 @@ const history = createBrowserHistory();\nexport const store = createStore(createRootReducer(history), createMiddleware(history));\n+store.injectReducer = () => {\n+ store.replaceReducer(createRootReducer(history));\n+};\n+\nReactDOM.render(\n<GoogleReCaptchaProvider\nreCaptchaKey={RECAPTCHA_ENTERPRISE_SITE_KEY}\n",
        "chatgpt_rag": "refactor: update import statement for RouteAuth in routing index file"
    },
    {
        "msg": "refactor(Progress): improve syntax",
        "diff": "diff --git a/scss/_progress.scss b/scss/_progress.scss }\n.progress-group-icon {\n- margin: 0 $spacer 0 ($spacer * .25);\nfont-size: $font-size-lg;\n-\n- // @include ltr {\n- // margin: 0 $spacer 0 ($spacer * .25);\n- // }\n- // @include rtl {\n- // margin: 0 ($spacer * .25) 0 $spacer;\n- // }\n-}\n-\n-.progress-group-text {\n- font-size: $font-size-sm;\n- color: $gray-700;\n}\n.progress-group-header {\n",
        "date": "19.03.2021 12:11:01",
        "repo": "coreui/coreui",
        "type": "refactor",
        "sim_msg": "feat(subnav): restore desktop styles",
        "sim_diff": "diff --git a/src/components/layout/header/sub-navigation.module.scss b/src/components/layout/header/sub-navigation.module.scss padding-left: 0;\ntext-align: left;\n+ @media (min-width: $viewport-lg) {\n+ display: block;\n+\n+ li {\n+ display: inline-block;\n+ a {\n+ @include margin(0, (left, right));\n+ @include margin(1, (top, bottom));\n+ }\n+ &:first-child {\n+ a {\n+ @include margin(0, left);\n+ }\n+ }\n+ }\n+ }\n+\na {\ntext-decoration: none;\nfont-weight: bold;\n",
        "chatgpt_rag": "style(progress): adjust margin and font size in progress group icon and text"
    },
    {
        "msg": "refactor(src/common/routing): use BROWSER env instead of IS_SSR",
        "diff": "diff --git a/src/common/routing/index.jsx b/src/common/routing/index.jsx @@ -19,6 +19,7 @@ export const appRouting = [\nicon: 'newspaper',\nname: 'Dashboard',\nexact: true,\n+ // lazy: true,\nsidebarVisible: true,\ntag: RouteAuth,\ncomponent: Dashboard\n@@ -91,7 +92,7 @@ export const Routing = authCheck => {\nfunction getHistory () {\nconst basename = ''\n- if (process.env.IS_SSR) {\n+ if (process.env.BROWSER !== true) {\nreturn createMemoryHistory()\n}\nreturn createBrowserHistory({basename})\n",
        "date": "04.08.2017 14:05:29",
        "repo": "metnew/suicrux",
        "type": "refactor",
        "sim_msg": "fix: changed background color of content",
        "sim_diff": "diff --git a/src/renderer/index.js b/src/renderer/index.js @@ -66,7 +66,7 @@ render(\n<Provider store={store}>\n<ConnectedRouter history={history.getHistory()}>\n<HashRouter>\n- <div style={{ backgroundColor: '#262F39' }}>\n+ <div style={{ background: 'linear-gradient(135deg, #2b3540 0%,#1e262e 100%)' }}>\n<Route exact path=\"/\" component={Home} />\n<Route path=\"/closeConfirmation\" component={CloseConfirmation} />\n<Route path=\"/createWallet\" component={CreateWallet} />\n",
        "chatgpt_rag": "feat: added lazy loading for Dashboard component and updated condition for checking browser environment in getHistory function"
    },
    {
        "msg": "refactor: remove impossible condition from sceneEqual",
        "diff": "diff --git a/packages/vega-scenegraph/src/util/equal.js b/packages/vega-scenegraph/src/util/equal.js @@ -9,7 +9,6 @@ export function sceneEqual(a, b, key) {\n: (a instanceof Date && b instanceof Date) ? +a === +b\n: (isNumber(a) && isNumber(b)) ? Math.abs(a - b) <= TOLERANCE\n: (!a || !b || !isObject(a) && !isObject(b)) ? a == b\n- : (a == null || b == null) ? false\n: objectEqual(a, b);\n}\n",
        "date": "18.08.2020 22:03:55",
        "repo": "vega/vega",
        "type": "refactor",
        "sim_msg": "chore: Sort fields by name",
        "sim_diff": "diff --git a/src/components/pages/data/api/explorer.js b/src/components/pages/data/api/explorer.js @@ -40,7 +40,9 @@ const Fields = ({ schema }) => {\nreturn (\n<dl>\n- {Object.keys(fields).map(property => (\n+ {Object.keys(fields)\n+ .sort()\n+ .map(property => (\n<Fragment key={`${schema}-${property}`}>\n<dt>{property}</dt>\n<dd>\n@@ -50,7 +52,8 @@ const Fields = ({ schema }) => {\n</div>\n<p>{fields[property].description}</p>\n- {fields[property].type === 'integer' && fields[property].nullable && (\n+ {fields[property].type === 'integer' &&\n+ fields[property].nullable && (\n<DetailText>\nReturns <code>null</code> if no data is available\n</DetailText>\n",
        "chatgpt_rag": "refactor: Remove unnecessary null check in sceneEqual function"
    },
    {
        "msg": "refactor(src/common/components/Root): fix Root component SSR, add SSR props",
        "diff": "diff --git a/src/common/components/views/Root/index.jsx b/src/common/components/views/Root/index.jsx import React, {Component} from 'react'\nimport PropTypes from 'prop-types'\nimport {Provider} from 'react-redux'\n-import {ConnectedRouter as Router} from 'react-router-redux'\nimport {APPLICATION_INIT} from 'actions'\nimport {ThemeProvider} from 'styled-components'\nimport theme from 'styles/theme'\n+const Router = process.env.BROWSER === true\n+ ? require('react-router-redux').ConnectedRouter\n+ : require('react-router').StaticRouter\n+\nexport default class Root extends Component {\nstatic propTypes = {\nstore: PropTypes.object,\n+ SSR: PropTypes.object,\nhistory: PropTypes.object,\nroutes: PropTypes.func\n}\n+ static defaultProps = {\n+ SSR: {}\n+ }\n+\ncomponentWillMount () {\nconst {store} = this.props\nstore.dispatch({type: APPLICATION_INIT})\n@@ -37,11 +45,14 @@ export default class Root extends Component {\n}\nrender () {\n- const {store, history, routes} = this.props\n+ const {SSR, store, history, routes} = this.props\n+ const routerProps = process.env.BROWSER === true\n+ ? {history}\n+ : {location: SSR.location, context: SSR.context}\n// key={Math.random()} = hack for HMR from https://github.com/webpack/webpack-dev-server/issues/395\nreturn (\n<Provider store={store} key={Math.random()}>\n- <Router history={history} key={Math.random()}>\n+ <Router {...routerProps} key={Math.random()}>\n<ThemeProvider theme={theme}>\n{routes(::this.authCheck)}\n</ThemeProvider>\n",
        "date": "04.08.2017 14:09:44",
        "repo": "metnew/suicrux",
        "type": "refactor",
        "sim_msg": "refactor(route-details): remove fa icon",
        "sim_diff": "diff --git a/lib/components/viewers/route-details.js b/lib/components/viewers/route-details.js /* eslint-disable react/prop-types */\nimport { connect } from 'react-redux'\nimport { FormattedMessage, injectIntl } from 'react-intl'\n+import { Link } from '@styled-icons/fa-solid/Link'\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react'\n@@ -14,7 +15,6 @@ import {\ngetVehiclePositionsForRoute\n} from '../../actions/api'\nimport { setHoveredStop, setViewedRoute, setViewedStop } from '../../actions/ui'\n-import Icon from '../util/icon'\nimport {\nContainer,\n@@ -24,6 +24,7 @@ import {\nStop,\nStopContainer\n} from './styled'\n+import StyledIconWrapper from '../util/styledIcon'\nclass RouteDetails extends Component {\nstatic propTypes = {\n@@ -166,7 +167,9 @@ class RouteDetails extends Component {\nstyle={{ whiteSpace: 'nowrap' }}\ntarget=\"_blank\"\n>\n- <Icon type=\"link\" />\n+ <StyledIconWrapper>\n+ <Link />\n+ </StyledIconWrapper>\n<FormattedMessage id=\"components.RouteDetails.moreDetails\" />\n</a>\n)}\n",
        "chatgpt_rag": "refactor(root): update Router import logic and add SSR support"
    },
    {
        "msg": "refactor: simplify responsive behavior",
        "diff": "diff --git a/js/src/sidebar.js b/js/src/sidebar.js @@ -38,7 +38,6 @@ const DefaultType = {\nconst CLASS_NAME_BACKDROP = 'sidebar-backdrop'\nconst CLASS_NAME_FADE = 'fade'\n-// const CLASS_NAME_HIDE = 'hide'\nconst CLASS_NAME_SHOW = 'show'\nconst CLASS_NAME_SIDEBAR = 'sidebar'\nconst CLASS_NAME_SIDEBAR_NARROW = 'sidebar-narrow'\n@@ -69,7 +68,6 @@ class Sidebar extends BaseComponent {\nconstructor(element, config) {\nsuper(element)\nthis._config = this._getConfig(config)\n- // this._breakpoint = this._getBreakpoint()\nthis._show = this._isVisible()\nthis._mobile = this._isMobile()\nthis._overlaid = this._isOverlaid()\n@@ -96,10 +94,6 @@ class Sidebar extends BaseComponent {\nshow() {\nEventHandler.trigger(this._element, EVENT_SHOW)\n- // if (this._element.classList.contains(CLASS_NAME_HIDE)) {\n- // this._element.classList.remove(CLASS_NAME_HIDE)\n- // }\n-\nif (REGEXP_SIDEBAR_SELF_HIDING.test(this._element.className)) {\nthis._element.classList.add(CLASS_NAME_SHOW)\n}\n@@ -132,8 +126,6 @@ class Sidebar extends BaseComponent {\nthis._element.classList.remove(CLASS_NAME_SHOW)\n}\n- // this._element.classList.add(CLASS_NAME_HIDE)\n-\nif (this._isMobile()) {\nthis._removeBackdrop()\n}\n@@ -156,7 +148,7 @@ class Sidebar extends BaseComponent {\n}\ntoggle() {\n- if (this._show) {\n+ if (this._isVisible()) {\nthis.hide()\nreturn\n}\n@@ -240,29 +232,6 @@ class Sidebar extends BaseComponent {\nreturn Boolean(window.getComputedStyle(this._element, null).getPropertyValue('--cui-is-mobile'))\n}\n- _isIOS() {\n- const iOSDevices = [\n- 'iPad Simulator',\n- 'iPhone Simulator',\n- 'iPod Simulator',\n- 'iPad',\n- 'iPhone',\n- 'iPod'\n- ]\n-\n- const platform = Boolean(navigator.platform)\n-\n- if (platform) {\n- while (iOSDevices.length) {\n- if (navigator.platform === iOSDevices.pop()) {\n- return true\n- }\n- }\n- }\n-\n- return false\n- }\n-\n_isNarrow() {\nreturn this._element.classList.contains(CLASS_NAME_SIDEBAR_NARROW)\n}\n",
        "date": "15.04.2021 13:21:00",
        "repo": "coreui/coreui",
        "type": "refactor",
        "sim_msg": "feat(Filter/Sidebar): fix overflow",
        "sim_diff": "diff --git a/components/core/Filter/Sidebar.js b/components/core/Filter/Sidebar.js @@ -46,9 +46,9 @@ const STYLES_SIDEBAR_FILTER_WRAPPER = (theme) => css`\nposition: sticky;\ntop: ${theme.sizes.header + theme.sizes.filterNavbar}px;\nwidth: 236px;\n- height: 100vh;\nmax-height: calc(100vh - ${theme.sizes.header + theme.sizes.filterNavbar}px);\n- padding: 20px;\n+ overflow-y: auto;\n+ padding: 20px 24px;\nbackground-color: ${theme.semantic.bgLight};\n@media (max-width: ${theme.sizes.mobile}px) {\n",
        "chatgpt_rag": "refactor(Sidebar): remove commented out code and unused method"
    },
    {
        "msg": "refactor(tooltips): remove variable references",
        "diff": "diff --git a/consumables/scss/components/tooltips/tooltips.scss b/consumables/scss/components/tooltips/tooltips.scss @import '../../global/colors/colors';\n@import '../../global/typography/typography';\n@import '../../global/layout/grid';\n-@import 'vars';\n@import '../../import-once';\n@include exports('tooltips') {\n",
        "date": "05.01.2017 11:22:53",
        "repo": "carbon-design-system/carbon",
        "type": "refactor",
        "sim_msg": "feat: add `default-link` mixin\nThe `default-link` mixin provides more flexibility vs the `base-link` mixin due to not including the `typography-base` mixin.",
        "sim_diff": "diff --git a/packages/styles/mixins/links.scss b/packages/styles/mixins/links.scss +@import \"./colors.scss\";\n@import \"./typography.scss\";\n-@mixin base-link {\n- @include typography-base;\n+@mixin default-link {\ntext-decoration: none;\ncursor: pointer;\n}\n+@mixin base-link {\n+ @include typography-base;\n+ @include default-link;\n+}\n+\n@mixin primary-link {\ncolor: color(hig-blue-50);\n",
        "chatgpt_rag": "refactor: remove unnecessary import of 'vars' in tooltips.scss"
    },
    {
        "msg": "refactor: update component to bs5",
        "diff": "diff --git a/js/src/sidebar.js b/js/src/sidebar.js import {\ndefineJQueryPlugin,\nemulateTransitionEnd,\n- getElementFromSelector,\n- getTransitionDurationFromElement\n+ getTransitionDurationFromElement,\n+ reflow,\n+ typeCheckConfig\n} from './util/index'\nimport Data from './dom/data'\nimport EventHandler from './dom/event-handler'\n+import Manipulator from './dom/manipulator'\nimport BaseComponent from './base-component'\n/**\n@@ -76,7 +78,7 @@ const SELECTOR_SIDEBAR = '.c-sidebar'\n*/\nclass Sidebar extends BaseComponent {\nconstructor(element, config) {\n- this._element = element\n+ super(element)\nthis._config = this._getConfig(config)\nthis._open = this._isVisible()\nthis._mobile = this._isMobile()\n@@ -92,10 +94,6 @@ class Sidebar extends BaseComponent {\n// Getters\n- static get VERSION() {\n- return VERSION\n- }\n-\nstatic get Default() {\nreturn Default\n}\n@@ -112,14 +110,14 @@ class Sidebar extends BaseComponent {\nif (this._isMobile()) {\nthis._addClassName(this._firstBreakpointClassName())\nthis._showBackdrop()\n- EventHandler.one(this._element, TRANSITION_END, () => {\n+ EventHandler.one(this._element, 'transitionend', () => {\nthis._addClickOutListener()\n})\n} else if (breakpoint) {\nthis._addClassName(this._getBreakpointClassName(breakpoint))\nif (this._isOverlaid()) {\n- EventHandler.one(this._element, TRANSITION_END, () => {\n+ EventHandler.one(this._element, 'transitionend', () => {\nthis._addClickOutListener()\n})\n}\n@@ -127,7 +125,7 @@ class Sidebar extends BaseComponent {\nthis._addClassName(this._firstBreakpointClassName())\nif (this._isOverlaid()) {\n- EventHandler.one(this._element, TRANSITION_END, () => {\n+ EventHandler.one(this._element, 'transitionend', () => {\nthis._addClickOutListener()\n})\n}\n@@ -142,7 +140,7 @@ class Sidebar extends BaseComponent {\nconst transitionDuration = getTransitionDurationFromElement(this._element)\n- EventHandler.one(this._element, TRANSITION_END, complete)\n+ EventHandler.one(this._element, 'transitionend', complete)\nemulateTransitionEnd(this._element, transitionDuration)\n}\n@@ -174,7 +172,7 @@ class Sidebar extends BaseComponent {\nconst transitionDuration = getTransitionDurationFromElement(this._element)\n- EventHandler.one(this._element, TRANSITION_END, complete)\n+ EventHandler.one(this._element, 'transitionend', complete)\nemulateTransitionEnd(this._element, transitionDuration)\n}\n@@ -352,7 +350,7 @@ class Sidebar extends BaseComponent {\nreturn siblings\n}\n- _toggleDropdown(event, sidebar) {\n+ _toggleDropdown(event) {\nlet toggler = event.target\nif (!toggler.classList.contains(CLASS_NAME_NAV_DROPDOWN_TOGGLE)) {\ntoggler = toggler.closest(SELECTOR_NAV_DROPDOWN_TOGGLE)\n",
        "date": "17.12.2020 23:55:43",
        "repo": "coreui/coreui",
        "type": "refactor",
        "sim_msg": "feat(Filter/Sidebar): add tags filters",
        "sim_diff": "diff --git a/components/core/Filter/Sidebar.js b/components/core/Filter/Sidebar.js @@ -2,10 +2,9 @@ import * as React from \"react\";\nimport * as SVG from \"~/common/svg\";\nimport * as Styles from \"~/common/styles\";\nimport * as Filters from \"~/components/core/Filter/Filters\";\n+import * as Constants from \"~/common/constants\";\n-import * as FilterUtilities from \"~/common/filter-utilities\";\nimport { useFilterContext } from \"~/components/core/Filter/Provider\";\n-import { Show } from \"~/components/utility/Show\";\nimport { css } from \"@emotion/react\";\n/* -------------------------------------------------------------------------------------------------\n@@ -23,19 +22,16 @@ const STYLES_SIDEBAR_TRIGGER = (theme) => css`\n}\n`;\n-export function SidebarTrigger() {\n- const [{ isSidebarVisible }, { toggleSidebar }] = useFilterContext();\n+export function SidebarTrigger({ css }) {\n+ const [{ sidebarState }, { toggleSidebar }] = useFilterContext();\nreturn (\n<button\nonClick={toggleSidebar}\n- css={[\n- STYLES_SIDEBAR_TRIGGER,\n- (theme) =>\n- css({\n- backgroundColor: isSidebarVisible ? theme.semantic.bgGrayLight : \"none\",\n- color: isSidebarVisible ? theme.semantic.textBlack : theme.semantic.textGray,\n- }),\n- ]}\n+ css={[STYLES_SIDEBAR_TRIGGER, css]}\n+ style={{\n+ backgroundColor: sidebarState.isVisible ? Constants.semantic.bgGrayLight : \"unset\",\n+ color: sidebarState.isVisible ? Constants.semantic.textBlack : Constants.semantic.textGray,\n+ }}\n>\n<SVG.Sidebar style={{ display: \"block\" }} />\n</button>\n@@ -46,17 +42,6 @@ export function SidebarTrigger() {\n* Sidebar\n* -----------------------------------------------------------------------------------------------*/\n-export function Sidebar() {\n- const [{ isSidebarVisible }] = useFilterContext();\n- return (\n- <Show when={isSidebarVisible}>\n- <div css={STYLES_SIDEBAR_FILTER_WRAPPER}>\n- <SidebarContent />\n- </div>\n- </Show>\n- );\n-}\n-\nconst STYLES_SIDEBAR_FILTER_WRAPPER = (theme) => css`\nposition: sticky;\ntop: ${theme.sizes.header + theme.sizes.filterNavbar}px;\n@@ -71,46 +56,15 @@ const STYLES_SIDEBAR_FILTER_WRAPPER = (theme) => css`\n}\n`;\n-/* -------------------------------------------------------------------------------------------------\n- * SidebarContent\n- * -----------------------------------------------------------------------------------------------*/\n-\n-function SidebarContent() {\n- const [{ filterState }, { setFilterType }] = useFilterContext();\n- const currentView = filterState.view;\n- const currentSubview = filterState.subview;\n-\n- const { FILTER_VIEWS_IDS, FILTER_SUBVIEWS_IDS } = FilterUtilities;\n- const { filters, subviews } = FilterUtilities.getViewData(currentView);\n+export function Sidebar({ viewer, isMobile }) {\n+ const [{ sidebarState }] = useFilterContext();\n- const changeFilterView = (view) => {\n- const { filters } = FilterUtilities.getViewData(view);\n- setFilterType({ view: view, type: filters.initial });\n- };\n-\n- const changeFilterSubview = (subview) => {\n- const initialType = subviews[subview].filters.initial;\n- setFilterType({ view: currentView, subview, type: initialType });\n- };\n-\n- if (currentView === FILTER_VIEWS_IDS.browser) {\n- if (currentSubview === FILTER_SUBVIEWS_IDS.browser.saved) {\n- const { filters } = subviews[currentSubview];\n- return <Filters.BrowserSaved filters={filters} />;\n- }\n+ if (!sidebarState.isVisible || isMobile) return null;\nreturn (\n- <Filters.Browser\n- filters={filters}\n- goToSavedSubview={() => changeFilterSubview(FILTER_SUBVIEWS_IDS.browser.saved)}\n- />\n- );\n- }\n-\n- return (\n- <Filters.Initial\n- filters={filters}\n- goToBrowserView={() => changeFilterView(FILTER_VIEWS_IDS.browser)}\n- />\n+ <div css={STYLES_SIDEBAR_FILTER_WRAPPER}>\n+ <Filters.Library />\n+ <Filters.Tags viewer={viewer} style={{ marginTop: 12 }} />\n+ </div>\n);\n}\n",
        "chatgpt_rag": "refactor(Sidebar): update event handling in toggleDropdown method"
    },
    {
        "msg": "refactor(group): superficial group function cleanup",
        "diff": "diff --git a/src/modeling/group.js b/src/modeling/group.js import {CAG} from '../csg'\n-\n+// FIXME : is this used anywhere ?\nexport default function group () { // experimental\nvar o\nvar i = 0\nvar a = arguments\nif (a[0].length) a = a[0]\n- if ((typeof (a[i]) == 'object') && (a[i] instanceof CAG)) {\n+ if ((typeof (a[i]) === 'object') && (a[i] instanceof CAG)) {\no = a[i].extrude({offset: [0, 0, 0.1]}) // -- convert a 2D shape to a thin solid, note: do not a[i] = a[i].extrude()\n} else {\no = a[i++]\n}\nfor (; i < a.length; i++) {\nvar obj = a[i]\n- if ((typeof (a[i]) == 'object') && (a[i] instanceof CAG)) {\n+ if ((typeof (a[i]) === 'object') && (a[i] instanceof CAG)) {\nobj = a[i].extrude({offset: [0, 0, 0.1]}) // -- convert a 2D shape to a thin solid:\n}\no = o.unionForNonIntersecting(obj)\n",
        "date": "06.01.2017 23:36:23",
        "repo": "jscad/openjscad.org",
        "type": "refactor",
        "sim_msg": "fix: holding backspace",
        "sim_diff": "diff --git a/src/lib/core.js b/src/lib/core.js @@ -4693,6 +4693,13 @@ export default function (context, pluginCallButtons, plugins, lang, options) {\n}\n}\n+ if (!util.isFormatElement(formatEl) && !context.element.wysiwyg.firstElementChild) {\n+ e.preventDefault();\n+ e.stopPropagation();\n+ core._setDefaultFormat('P');\n+ return false;\n+ }\n+\nif (!formatEl.nextElementSibling && !formatEl.previousElementSibling && (util.isWysiwygDiv(formatEl.parentNode) && util.isFormatElement(formatEl) && !util.isListCell(formatEl) &&\n(formatEl.childNodes.length <= 1 && (!formatEl.firstChild || util.onlyZeroWidthSpace(formatEl.firstChild.textContent))))) {\ne.preventDefault();\n",
        "chatgpt_rag": "fix: fix comparison operator in group.js file and remove unused comment"
    },
    {
        "msg": "refactor: remove `c-` prefix and fix icon position",
        "diff": "diff --git a/scss/_icon.scss b/scss/_icon.scss -.c-icon {\n+.icon {\ndisplay: inline-block;\ncolor: inherit;\ntext-align: center;\n+ vertical-align: -.125rem; // Fix the position of icon\nfill: currentColor;\n- &:not(.c-icon-c-s):not(.c-icon-custom-size) {\n+ &:not(.icon-c-s):not(.icon-custom-size) {\n@include icon-size($icon-size-base);\n// TODO: create variable with a range\n@for $i from 2 through 9 {\n- &.c-icon-#{$i}xl {\n+ &.icon-#{$i}xl {\n@include icon-size($i * ($icon-size-xl / 1.5));\n}\n}\n- &.c-icon-xl {\n+ &.icon-xl {\n@include icon-size($icon-size-xl);\n}\n- &.c-icon-lg {\n+ &.icon-lg {\n@include icon-size($icon-size-lg);\n}\n- &.c-icon-sm {\n+ &.icon-sm {\n@include icon-size($icon-size-sm);\n}\n}\n",
        "date": "04.01.2021 23:23:10",
        "repo": "coreui/coreui",
        "type": "refactor",
        "sim_msg": "feat(nav): added nav styles",
        "sim_diff": "diff --git a/scss/os/_utils.scss b/scss/os/_utils.scss @@ -715,3 +715,33 @@ $aspect-ratios: ((16, 9), (4, 3));\ntransform: rotate(-45deg);\n}\n}\n+\n+\n+// --------------------------------- Nav -----------------------------------//\n+.u-nav.nav {\n+ .u-nav__spacer {\n+ .nav-item {\n+ &.active:not(:first-child):not(.u-nav__no-margin) {\n+ margin-top: 1rem !important;\n+ }\n+\n+ &.active:not(.u-nav__no-margin) {\n+ margin-bottom: 1rem !important;\n+ }\n+ }\n+ }\n+\n+ .nav-item {\n+ &.active > .nav-link {\n+ color: $body-color;\n+ }\n+\n+ .nav-link {\n+ color: $text-muted;\n+\n+ &:hover {\n+ color: $body-color;\n+ }\n+ }\n+ }\n+}\n",
        "chatgpt_rag": "style(icon): updated icon styles and class names"
    },
    {
        "msg": "style(webpack_config/server): fix indent",
        "diff": "diff --git a/webpack_config/server/webpack.base.js b/webpack_config/server/webpack.base.js @@ -91,12 +91,11 @@ module.exports = {\nnew webpack.BannerPlugin({\nbanner: config.banner\n}),\n- // NOTE: Server can't process your styles/images/fonts on server-side rendering\n+ // Server can't process require of your styles/images/fonts\nnew webpack.NormalModuleReplacementPlugin(\n/\\.(css|sass|less|jpg|png|gif|scss)$/,\n'node-noop'\n)\n- // NOTE: @Metnew: If I remember correctly this plugin works similarly to NormalModuleReplacementPlugin\n// new webpack.IgnorePlugin(/\\.(css|sass|less|jpg|png|gif|scss)$/)\n],\nnode: {\n",
        "date": "07.08.2017 18:48:58",
        "repo": "metnew/suicrux",
        "type": "style",
        "sim_msg": "chore: update copy-webpack-plugin config",
        "sim_diff": "diff --git a/webpack.config.js b/webpack.config.js @@ -160,13 +160,14 @@ module.exports = {\nnew MiniCssExtractPlugin({\nfilename: '[name].css'\n}),\n- new CopyPlugin([\n+ new CopyPlugin({\n+ patterns: [\n{\nfrom: 'src/assets',\nto: '',\n- copyUnmodified: true,\n},\n- ]),\n+ ],\n+ }),\nnew VueLoaderPlugin(),\nnew webpack.DefinePlugin({\nVERSION: JSON.stringify(require('./src/assets/manifest.json').version)\n",
        "chatgpt_rag": "chore: update webpack base config for server-side rendering restrictions"
    },
    {
        "msg": "style(lint): linted module.js",
        "diff": "diff --git a/lib/module.js b/lib/module.js -const firebase = require('firebase')\nconst { resolve } = require('path')\n+const firebase = require('firebase')\nconst logger = require('./logger')\nconst createServerMiddleware = require('./helpers/createServerMiddleware')\n",
        "date": "18.03.2020 23:21:30",
        "repo": "nuxt-community/firebase-module",
        "type": "style",
        "sim_msg": "test: make 'applyLoggingOptions()' tests more proof against side effects\nThis is a work around. The configuration and loggers setup should be refactored to work without side effects like this.",
        "sim_diff": "diff --git a/test/unit/configuration-test.js b/test/unit/configuration-test.js @@ -6,18 +6,18 @@ const logger = require('../../lib/logger');\nconst reporterOutputLogger = require('../../lib/reporters/reporterOutputLogger');\n-describe('configuration.applyLoggingOptions()', () => {\n- let loggerSettings;\n- let reporterOutputLoggerSettings;\n+const defaultLoggerConsole = clone(logger.transports.console);\n+const defaultReporterOutputLoggerConsole = clone(reporterOutputLogger.transports.console);\n- beforeEach(() => {\n- loggerSettings = clone(logger.transports.console);\n- reporterOutputLoggerSettings = clone(reporterOutputLogger.transports.console);\n- });\n- afterEach(() => {\n- logger.transports.console = loggerSettings;\n- reporterOutputLogger.transports.console = reporterOutputLoggerSettings;\n- });\n+function resetLoggerConsoles() {\n+ logger.transports.console = defaultLoggerConsole;\n+ reporterOutputLogger.transports.console = defaultReporterOutputLoggerConsole;\n+}\n+\n+\n+describe('configuration.applyLoggingOptions()', () => {\n+ beforeEach(resetLoggerConsoles);\n+ afterEach(resetLoggerConsoles);\ndescribe('with color not set', () => {\nbeforeEach(() => {\n",
        "chatgpt_rag": "refactor: fix firebase import duplication in module.js\n\nThe firebase import was duplicated in the module.js file. This commit fixes the duplication by removing the unnecessary import statement."
    },
    {
        "msg": "style(all): add missing semicolon",
        "diff": "diff --git a/packages/all/src/index.js b/packages/all/src/index.js @@ -25,7 +25,7 @@ for (let bundle of [geojs, glo, lineup, onset, sententree, similaritygraph, stat\n}\nfor (let component in vega) {\nif (vega[component] !== vega.VegaView) {\n- components[component] = vega[component]\n+ components[component] = vega[component];\n}\n}\n",
        "date": "14.05.2018 13:22:41",
        "repo": "kitware/candela",
        "type": "style",
        "sim_msg": "feat(card/article): include titles",
        "sim_diff": "diff --git a/components/card/article/src/index.js b/components/card/article/src/index.js @@ -20,7 +20,7 @@ const _renderComments = ({ icon, url, count }, Link) => {\nconst IconComment = icon || Commentsquare\nreturn (\n- <Link href={url} className='sui-CardArticle-comments'>\n+ <Link href={url} className='sui-CardArticle-comments' title={count}>\n<IconComment svgClass='sui-CardArticle-commentsIcon' />\n{count}\n</Link>\n@@ -53,7 +53,7 @@ export default function CardArticle ({\nreturn (\n<div className='sui-CardArticle'>\n- <Link href={link} className='sui-CardArticle-link'>\n+ <Link href={link} className='sui-CardArticle-link' title={title}>\n<div className={cardArticleMediaClassName(video)}>\n{video && <MediaIcon svgClass='sui-CardArticle-mediaIcon' /> }\n{lazyLoad\n@@ -68,7 +68,7 @@ export default function CardArticle ({\n{comments && _renderComments(comments, Link)}\n</div>\n</div>\n- <Link href={link} className='sui-CardArticle-link'>\n+ <Link href={link} className='sui-CardArticle-link' title={title}>\n<div className='sui-CardArticle-content'>\n{title &&\n<header className='sui-CardArticle-title'>{title}</header>\n@@ -176,8 +176,8 @@ CardArticle.propTypes = {\nCardArticle.defaultProps = {\ntagChip: SuiTagChip,\nfeatured: false,\n- linkFactory: ({ href, className, children }) =>\n- <a href={href} className={className}>{children}</a>\n+ linkFactory: ({ href, className, children, title }) =>\n+ <a href={href} className={className} title={title}>{children}</a>\n}\nCardArticle.displayName = 'CardArticle'\n",
        "chatgpt_rag": "refactor(all): add missing semicolon in component assignment"
    },
    {
        "msg": "style: removed semicolons",
        "diff": "diff --git a/lib/templates/firebase-auth-sw.js b/lib/templates/firebase-auth-sw.js @@ -23,61 +23,61 @@ firebase.initializeApp(<%= serialize(options.config) %>)\nconst getIdToken = () => {\nreturn new Promise((resolve) => {\nconst unsubscribe = firebase.auth().onAuthStateChanged((user) => {\n- unsubscribe();\n+ unsubscribe()\nif (user) {\n// force token refresh as it might be used to sign in server side\nuser.getIdToken(true).then((idToken) => {\n- resolve(idToken);\n+ resolve(idToken)\n}, () => {\n- resolve(null);\n- });\n+ resolve(null)\n+ })\n} else {\n- resolve(null);\n+ resolve(null)\n+ }\n+ })\n+ })\n}\n- });\n- });\n-};\nconst fetchWithAuthorization = async (original, idToken) => {\n// Clone headers as request headers are immutable.\n- const headers = new Headers();\n+ const headers = new Headers()\nfor (let entry of original.headers.entries()) {\n- headers.append(entry[0], entry[1]);\n+ headers.append(entry[0], entry[1])\n}\n// Add ID token to header.\n- headers.append('Authorization', 'Bearer ' + idToken);\n+ headers.append('Authorization', 'Bearer ' + idToken)\n// Create authorized request\n- const { url, ...props } = original.clone();\n+ const { url, ...props } = original.clone()\nconst authorized = new Request(url, {\n...props,\nmode: 'same-origin',\nredirect: 'manual',\nheaders\n- });\n+ })\nreturn fetch(authorized)\n-};\n+}\nself.addEventListener('fetch', (event) => {\n- const url = new URL(event.request.url);\n+ const url = new URL(event.request.url)\nconst expectsHTML = event.request.headers.get('accept').includes('text/html')\n- const isSameOrigin = self.location.origin === url.origin;\n- const isHttps = (self.location.protocol === 'https:' || self.location.hostname === 'localhost');\n+ const isSameOrigin = self.location.origin === url.origin\n+ const isHttps = (self.location.protocol === 'https:' || self.location.hostname === 'localhost')\nconst isIgnored = ignorePaths.some(path => {\nif (typeof path === 'string') {\nreturn url.pathname.startsWith(path)\n}\nreturn path.test(url.pathname.slice(1))\n- });\n+ })\nif (!expectsHTML || !isSameOrigin || !isHttps || isIgnored) {\n- event.respondWith(fetch(event.request));\n+ event.respondWith(fetch(event.request))\n- return;\n+ return\n}\n// Fetch the resource after checking for the ID token.\n@@ -93,9 +93,9 @@ self.addEventListener('fetch', (event) => {\n: fetch(event.request)\n)\n)\n-});\n+})\n// In service worker script.\nself.addEventListener('activate', event => {\n- event.waitUntil(clients.claim());\n-});\n+ event.waitUntil(clients.claim())\n+})\n",
        "date": "01.06.2020 15:35:50",
        "repo": "nuxt-community/firebase-module",
        "type": "style",
        "sim_msg": "refactor(Auth0Manager): refactor, remove logs",
        "sim_diff": "diff --git a/lib/common/user/Auth0Manager.js b/lib/common/user/Auth0Manager.js @@ -59,7 +59,8 @@ export default class Auth0Manager {\n}\nloginFromToken (token, props) {\n- return fetch('https://' + this.props.domain + '/tokeninfo?id_token=' + token, {\n+ const url = `https://${this.props.domain}/tokeninfo?id_token=${token}`\n+ return fetch(url, {\nmethod: 'post'\n}).then(res => res.json()).then((profile) => {\nreturn constructUserObj(token, profile)\n@@ -79,13 +80,9 @@ export default class Auth0Manager {\nreturn new Promise((resolve, reject) => {\nvar lockOptions = {\nconnections: ['Username-Password-Authentication'],\n- // callbackURL: getConfigProperty('application.url'),\nicon: getConfigProperty('application.logo') ? getConfigProperty('application.logo') : icon,\ndisableSignupAction: true,\n- // disableResetAction: true,\n- authParams: {\n- state: window.location.href\n- },\n+ authParams: {state: window.location.href},\n...additionalLockOptions\n}\nif (this.props.logo) lockOptions.icon = this.props.logo\n@@ -96,11 +93,6 @@ export default class Auth0Manager {\n}\n// save token to localStorage\nwindow.localStorage.setItem('userToken', token)\n-\n- // initialize auto log out check\n- // this.setupSingleLogout()\n- console.log(token, profile)\n- // this.userLoggedIn(token, profile)\nresolve(constructUserObj(token, profile))\n})\n})\n",
        "chatgpt_rag": "refactor(firebase-auth-sw): refactor, remove unnecessary semicolons and logs"
    },
    {
        "msg": "style: :lipstick: author styles",
        "diff": "diff --git a/src/lib/author.svelte b/src/lib/author.svelte class=\"not-prose border border-primary shadow-lg p-4 rounded-2xl\"\n>\n<div class=\"flex space-x-5 justify-evenly\">\n- <a href={data.html_url} target=\"_blank\" rel=\"noopener\">\n+ <a\n+ class=\"w-1/4\"\n+ href={data.html_url}\n+ target=\"_blank\"\n+ rel=\"noopener\"\n+ >\n<img\n- class=\"w-20 h-20 p-0 m-0 rounded-full\"\n+ class=\"w-20 h-20 p-0 m-0 rounded-full object-cover\"\nsrc={data.avatar_url}\nalt={data.name}\n/>\n</a>\n- <a href={data.html_url} target=\"_blank\" rel=\"noopener\">\n+ <a\n+ class=\"w-3/4\"\n+ href={data.html_url}\n+ target=\"_blank\"\n+ rel=\"noopener\"\n+ >\n<div class=\"text-sm\">\n<p class=\"text-lg font-bold tracking-widest\">{data.name}</p>\n<p>{data.bio || ``}</p>\n",
        "date": "08.05.2022 17:51:04",
        "repo": "spences10/cheat-sheets",
        "type": "style",
        "sim_msg": "docs(website): update 404 page",
        "sim_diff": "diff --git a/website/static/404.html b/website/static/404.html <link rel=\"stylesheet\" href=\"/static/index.css\">\n<link rel=\"stylesheet\" href=\"/static/404.css\">\n- <script defer src=\"https://cdn.jsdelivr.net/npm/clipboard@2.0.1/dist/clipboard.min.js\" integrity=\"sha256-hIvIxeqhGZF+VVeM55k0mJvWpQ6gTkWk3Emc+NmowYA=\" crossorigin=\"anonymous\"></script>\n<script defer src=\"/static/katex.min.js\" crossorigin=\"anonymous\"></script>\n<script defer src=\"/js/404.js\" type=\"text/javascript\"></script>\n</head>\n<p class=\"align-left\">Please try one of these links:</p>\n</div>\n<div class=\"cta\">\n- <a href=\"docs/node.html\" role=\"button\">\n+ <a href=\"/docs/node.html\" role=\"button\">\n<svg class=\"svg-inline--fa fa-download fa-w-16\" aria-hidden=\"true\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\"\nviewBox=\"0 0 512 512\">\n<path fill=\"currentColor\" d=\"M216 0h80c13.3 0 24 10.7 24 24v168h87.7c17.8 0 26.7 21.5 14.1 34.1L269.7 378.3c-7.5 7.5-19.8 7.5-27.3 0L90.1 226.1c-12.6-12.6-3.7-34.1 14.1-34.1H192V24c0-13.3 10.7-24 24-24zm296 376v112c0 13.3-10.7 24-24 24H24c-13.3 0-24-10.7-24-24V376c0-13.3 10.7-24 24-24h146.7l49 49c20.1 20.1 52.5 20.1 72.6 0l49-49H488c13.3 0 24 10.7 24 24zm-124 88c0-11-9-20-20-20s-20 9-20 20 9 20 20 20 20-9 20-20zm64 0c0-11-9-20-20-20s-20 9-20 20 9 20 20 20 20-9 20-20z\"></path>\n</svg>\nInstallation\n</a>\n- <a href=\"docs/api.html\" role=\"button\">\n+ <a href=\"/docs/api.html\" role=\"button\">\n<svg class=\"svg-inline--fa fa-book fa-w-14\" aria-hidden=\"true\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\"\nviewBox=\"0 0 448 512\">\n<path fill=\"currentColor\" d=\"M448 360V24c0-13.3-10.7-24-24-24H96C43 0 0 43 0 96v320c0 53 43 96 96 96h328c13.3 0 24-10.7 24-24v-16c0-7.5-3.5-14.3-8.9-18.7-4.2-15.4-4.2-59.3 0-74.7 5.4-4.3 8.9-11.1 8.9-18.6zM128 134c0-3.3 2.7-6 6-6h212c3.3 0 6 2.7 6 6v20c0 3.3-2.7 6-6 6H134c-3.3 0-6-2.7-6-6v-20zm0 64c0-3.3 2.7-6 6-6h212c3.3 0 6 2.7 6 6v20c0 3.3-2.7 6-6 6H134c-3.3 0-6-2.7-6-6v-20zm253.4 250H96c-17.7 0-32-14.3-32-32 0-17.6 14.4-32 32-32h285.4c-1.9 17.1-1.9 46.9 0 64z\"></path>\n",
        "chatgpt_rag": "feat(author): update author component styles and links"
    },
    {
        "msg": "style(Embed): update typings and propTypes usage",
        "diff": "diff --git a/src/modules/Embed/index.d.ts b/src/modules/Embed/index.d.ts import * as React from 'react';\ninterface EmbedProps {\n- /** An embed can be active. */\n- active?: boolean;\n+ [key: string]: any;\n/** An element type to render as (string or function). */\nas?: any;\n+ /** An embed can be active. */\n+ active?: boolean;\n+\n/** An embed can specify an alternative aspect ratio. */\naspectRatio?: '4:3' | '16:9' | '21:9';\n@@ -16,6 +18,9 @@ interface EmbedProps {\n/** Whether to show networks branded UI like title cards, or after video calls to action. */\nbrandedUI?: boolean;\n+ /** Primary content. */\n+ children?: React.ReactNode;\n+\n/** Additional classes. */\nclassName?: string;\n@@ -40,7 +45,7 @@ interface EmbedProps {\n* @param {SyntheticEvent} event - React's original SyntheticEvent.\n* @param {object} data - All props and proposed value.\n*/\n- onClick?: (e: React.FormEvent<HTMLVideoElement>, data: this) => void;\n+ onClick?: (event: React.MouseEvent<HTMLDivElement>, data: EmbedProps) => void;\n/** A placeholder image for embed. */\nplaceholder?: string;\n",
        "date": "24.01.2017 21:21:06",
        "repo": "semantic-org/semantic-ui-react",
        "type": "style",
        "sim_msg": "refactor(event-card): emotion to chakra",
        "sim_diff": "diff --git a/src/components/EventCard.tsx b/src/components/EventCard.tsx import React from \"react\"\n-import styled from \"@emotion/styled\"\n-import Emoji from \"./OldEmoji\"\n+import Emoji from \"./Emoji\"\nimport ButtonLink from \"./ButtonLink\"\n+import { Box, Text, Heading } from \"@chakra-ui/react\"\n-const StyledCard = styled.div`\n- position: relative;\n-\n- &:after,\n- &:before {\n- content: \"\";\n- display: block;\n- width: 100%;\n- clear: both;\n- }\n-\n- @media (max-width: ${(props) => props.theme.breakpoints.m}) {\n- margin-top: 30px;\n- }\n-`\n-\n-const StyledCardReference = styled.div`\n- background-color: ${(props) => props.theme.colors.primary};\n- width: 24px;\n- height: 24px;\n- position: absolute;\n- top: 0;\n- left: 50%;\n- overflow: hidden;\n- margin-left: -12px;\n-\n- @media (max-width: ${(props) => props.theme.breakpoints.m}) {\n- display: none;\n- }\n-`\n-\n-const StyledCardContent = styled.div`\n- width: 45%;\n- padding: 1.5rem;\n- background-color: ${(props) => props.theme.colors.ednBackground};\n- border-radius: 2px;\n- border: 1px solid ${(props) => props.theme.colors.lightBorder};\n-\n- &:before {\n- content: \"\";\n- position: absolute;\n- left: 45%;\n- top: 10px;\n- width: 0;\n- height: 3px;\n- border-left: 25px solid ${(props) => props.theme.colors.primary};\n+const clearStyles = {\n+ content: '\"\"',\n+ display: \"block\",\n+ width: \"100%\",\n+ clear: \"both\",\n}\n- &.style-card-content-right {\n- float: right;\n- margin-top: -25%;\n-\n- &:before {\n- content: \"\";\n- right: 45%;\n- left: inherit;\n- border-left: 0;\n- border-right: 25px solid ${(props) => props.theme.colors.primary};\n- }\n- }\n-\n- @media (max-width: ${(props) => props.theme.breakpoints.m}) {\n- width: 100%;\n- float: right;\n-\n- &.style-card-content-right {\n- margin-top: 0;\n- }\n-\n- &:before {\n- display: none;\n- }\n- }\n-`\n-\n-const Description = styled.p`\n- opacity: 0.8;\n-`\n-\n-const Date = styled.p`\n- color: ${(props) => props.theme.colors.primary};\n- margin-bottom: 0;\n- text-align: right;\n-`\n-\n-const Location = styled.p`\n- margin-bottom: 0;\n- text-align: right;\n-`\n-\n-const LocationText = styled.span`\n- opacity: 0.6;\n-`\n-\n-const Title = styled.h3`\n- margin-top: 0;\n-`\n-\nexport interface IProps {\ntitle: string\nto: string\n@@ -120,24 +29,78 @@ const EventCard: React.FC<IProps> = ({\nlocation,\nisEven,\n}) => (\n- <StyledCard className={className}>\n- <StyledCardReference />\n- <StyledCardContent\n- className={isEven ? \"style-card-content-right\" : undefined}\n+ <Box\n+ className={className}\n+ position=\"relative\"\n+ marginTop={{ base: \"30px\", md: 0 }}\n+ _before={clearStyles}\n+ _after={clearStyles}\n>\n- <Date>\n+ <Box\n+ w=\"24px\"\n+ h=\"24px\"\n+ position=\"absolute\"\n+ top=\"0\"\n+ left=\"50%\"\n+ overflow=\"hidden\"\n+ marginLeft=\"-12px\"\n+ backgroundColor=\"primary\"\n+ display={{ base: \"none\", md: \"block\" }}\n+ />\n+ <Box\n+ width={{ base: \"100%\", md: \"45%\" }}\n+ padding={6}\n+ backgroundColor=\"ednBackground\"\n+ borderRadius=\"2px\"\n+ border=\"1px solid\"\n+ borderColor=\"lightBorder\"\n+ float={isEven ? \"right\" : { base: \"right\", md: \"none\" }}\n+ marginTop={isEven ? { base: 0, md: \"-25%\" } : 0}\n+ _before={{\n+ content: '\"\"',\n+ position: \"absolute\",\n+ top: \"10px\",\n+ width: 0,\n+ height: \"3px\",\n+ display: { base: \"none\", md: \"inline\" },\n+ ...(isEven\n+ ? {\n+ left: \"inherit\",\n+ right: \"45%\",\n+ borderLeft: 0,\n+ borderRight: \"25px solid\",\n+ }\n+ : {\n+ left: \"45%\",\n+ borderLeft: \"25px solid\",\n+ borderRight: 0,\n+ }),\n+ borderColor: \"primary\",\n+ }}\n+ >\n+ <Text color=\"primary\" marginBottom={0} textAlign=\"right\">\n{date}\n- <Emoji text=\":spiral_calendar:\" size={1} ml={`0.5em`} />\n- </Date>\n- <Location>\n- <LocationText>{location}</LocationText>\n- <Emoji text=\":round_pushpin:\" size={1} ml={`0.5em`} />\n- </Location>\n- <Title>{title}</Title>\n- <Description>{description}</Description>\n+ <Emoji text=\":spiral_calendar:\" fontSize=\"md\" marginLeft=\"0.5em\" />\n+ </Text>\n+ <Text marginBottom={0} textAlign=\"right\">\n+ <Text as=\"span\" opacity={0.6}>\n+ {location}\n+ </Text>\n+ <Emoji text=\":round_pushpin:\" fontSize=\"md\" marginLeft=\"0.5em\" />\n+ </Text>\n+ <Heading\n+ as=\"h3\"\n+ marginTop={0}\n+ fontSize=\"2xl\"\n+ fontWeight=\"semibold\"\n+ lineHeight={1.4}\n+ >\n+ {title}\n+ </Heading>\n+ <Text opacity={0.8}>{description}</Text>\n<ButtonLink to={to}>View Event</ButtonLink>\n- </StyledCardContent>\n- </StyledCard>\n+ </Box>\n+ </Box>\n)\nexport default EventCard\n",
        "chatgpt_rag": "refactor(embed): update onClick event type in Embed component"
    },
    {
        "msg": "style(webpack_config/server): formatting",
        "diff": "diff --git a/webpack_config/server/webpack.prod.babel.js b/webpack_config/server/webpack.prod.babel.js @@ -17,7 +17,7 @@ const plugins = [\nsourceMap: true,\ncompress: {\nwarnings: false\n- // This option removes console log in production\n+ // This option removes console.log in production\n// drop_console: true\n},\noutput: {\n",
        "date": "14.08.2017 17:12:48",
        "repo": "metnew/suicrux",
        "type": "style",
        "sim_msg": "build(webpack): keep babel config only in .babelrc",
        "sim_diff": "diff --git a/webpack.config.js b/webpack.config.js @@ -41,9 +41,6 @@ module.exports = targetProperties.map(config => ({\nuse: [\n{\nloader: 'babel-loader',\n- options: {\n- presets: ['env'],\n- },\n},\n{ loader: 'source-map-loader' },\n],\n",
        "chatgpt_rag": "build(webpack): update compress option to remove console.log in production"
    },
    {
        "msg": "style(pycandela): fix flake8 issues",
        "diff": "diff --git a/python/pycandela/pycandela/__init__.py b/python/pycandela/pycandela/__init__.py @@ -99,11 +99,13 @@ class Component(object):\ndef display(self):\ndisplay(self)\n+\ndef load(filename):\nwith open(filename) as f:\nc = json.load(f)\nreturn Component(c['name'], **c['options'])\n+\nclass ComponentAccessor(object):\ndef __dir__(self):\nreturn _component_list\n",
        "date": "16.05.2018 11:32:15",
        "repo": "kitware/candela",
        "type": "style",
        "sim_msg": "refactor: remove unused import from PriceHistoryPanel.jsx",
        "sim_diff": "diff --git a/app/components/Dashboard/PriceHistoryPanel/PriceHistoryPanel.jsx b/app/components/Dashboard/PriceHistoryPanel/PriceHistoryPanel.jsx @@ -5,7 +5,6 @@ import { keys } from 'lodash-es'\nimport PriceHistoryChart from './PriceHistoryChart'\nimport Panel from '../../Panel'\n-import BoundingBox from './BoundingBox'\nimport DropdownIcon from '../../../assets/icons/dropdown.svg'\nimport {\nASSETS,\n",
        "chatgpt_rag": "refactor: add load method to Component class in __init__.py"
    },
    {
        "msg": "test: comply with strict mode",
        "diff": "diff --git a/test/examples/universalBrowser.test.js b/test/examples/universalBrowser.test.js @@ -9,7 +9,7 @@ describe('Rollbar loaded by snippet', function() {\ndocument.write(window.__html__['examples/universal-browser/test.html']);\n// Stub the xhr interface.\n- server = sinon.createFakeServer();\n+ window.server = sinon.createFakeServer();\n// Give the snippet time to load and init.\nsetTimeout(function() {\n@@ -18,10 +18,11 @@ describe('Rollbar loaded by snippet', function() {\n});\nafter(function () {\n- server.restore();\n+ window.server.restore();\n});\nit('should send a valid log event', function(done) {\n+ var server = window.server;\nvar rollbar = document.defaultView.Rollbar;\nserver.respondWith('POST', 'api/1/item',\n@@ -35,7 +36,7 @@ describe('Rollbar loaded by snippet', function() {\nvar ret = rollbar.info('test');\nserver.respond();\n- body = JSON.parse(server.requests[0].requestBody);\n+ var body = JSON.parse(server.requests[0].requestBody);\nexpect(body.access_token).to.eql('POST_CLIENT_ITEM_TOKEN');\nexpect(body.data.uuid).to.eql(ret.uuid);\n",
        "date": "29.03.2019 18:25:22",
        "repo": "rollbar/rollbar.js",
        "type": "test",
        "sim_msg": "test: remove airplane mode from '(re-)activate after restore'",
        "sim_diff": "diff --git a/tests/test_intercept.js b/tests/test_intercept.js @@ -2687,31 +2687,55 @@ test(\"persist reply with file\", function(t) {\n}, t.end.bind(t));\n});\n-test('(re-)activate after restore', {skip: process.env.AIRPLANE}, function(t) {\n- var scope = nock('http://google.com')\n+test('(re-)activate after restore', function(t) {\n+ t.plan(7)\n+\n+ const server = http.createServer((request, response) => {\n+ t.pass('server received a request')\n+\n+ switch (url.parse(request.url).pathname) {\n+ case '/':\n+ response.writeHead(200)\n+ response.write('server served a response')\n+ break\n+ }\n+\n+ response.end()\n+ })\n+\n+ server.listen(() => {\n+ const scope = nock(`http://localhost:${server.address().port}`)\n.get('/')\n- .reply(200, 'Hello, World!');\n+ .reply(304, 'served from our mock')\n- nock.restore();\n- t.false(nock.isActive());\n+ nock.restore()\n+ t.false(nock.isActive())\n+\n+ http.get(`http://localhost:${server.address().port}`, function(res) {\n+ res.resume()\n+\n+ t.is(200, res.statusCode)\n- http.get('http://google.com/', function(res) {\n- res.resume();\nres.on('end', function() {\n- t.ok(!scope.isDone());\n+ t.ok(!scope.isDone())\n+\n+ nock.activate()\n+ t.true(nock.isActive())\n+ http.get(`http://localhost:${server.address().port}`, function(res) {\n+ res.resume()\n+\n+ t.is(304, res.statusCode)\n- nock.activate();\n- t.true(nock.isActive());\n- http.get('http://google.com', function(res) {\n- res.resume();\nres.on('end', function() {\n- t.ok(scope.isDone());\n- t.end();\n- });\n- }).end();\n- });\n- }).end();\n+ t.ok(scope.isDone())\n+\n+ server.close(t.end)\n});\n+ })\n+ })\n+ })\n+ })\n+})\ntest(\"allow unmocked option works with https\", {skip: process.env.AIRPLANE}, function(t) {\nt.plan(5)\n",
        "chatgpt_rag": "test: update server variable declaration in universalBrowser test"
    },
    {
        "msg": "test(avatar-group): add check for max items",
        "diff": "diff --git a/packages/chakra-ui-core/src/AvatarGroup/tests/AvatarGroup.test.js b/packages/chakra-ui-core/src/AvatarGroup/tests/AvatarGroup.test.js @@ -32,3 +32,9 @@ it('should render correctly', () => {\nconst { asFragment } = renderComponent()\nexpect(asFragment()).toMatchSnapshot()\n})\n+\n+test('renders a number avatar showing count of truncated avatars', () => {\n+ const { getByText } = renderComponent()\n+\n+ getByText('+1')\n+})\n",
        "date": "15.03.2020 20:08:14",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "sim_msg": "fix(ui5-avatar-group): adapt width calculations in composite layouts\nThe calculations of the main container width have been adjusted to take into account sibling nodes.\nFixes",
        "sim_diff": "diff --git a/packages/main/src/AvatarGroup.js b/packages/main/src/AvatarGroup.js @@ -382,7 +382,7 @@ class AvatarGroup extends UI5Element {\nitem = button;\n}\n- return this.effectiveDir === \"rtl\" ? this._getWidthToItem(item) : item.offsetLeft;\n+ return this.effectiveDir === \"rtl\" ? this._getWidthToItem(item) : item.offsetLeft - this.offsetLeft;\n}\nreturn button.offsetWidth;\n@@ -526,7 +526,7 @@ class AvatarGroup extends UI5Element {\n}\n// in LTR the width is equal to item.offsetLeft\n- return item.offsetLeft;\n+ return item.offsetLeft - this.offsetLeft;\n}\n/**\n",
        "chatgpt_rag": "feat(chakra-ui-core): add test for rendering number avatar in AvatarGroup\nAdded a test to ensure that a number avatar is rendered correctly to show the count of truncated avatars in the AvatarGroup component."
    },
    {
        "msg": "test: Remove use of underscore",
        "diff": "diff --git a/test/unit.js b/test/unit.js @@ -2133,7 +2133,7 @@ describe('js interface', {\nthis.foo = obj[\"foo\"];\n};\nvar tmp = scm_eval('(js-new \"BiwaScheme.TestForJSNew\" \\'foo (lambda () 4))');\n- expect(_.isFunction(tmp.foo)).should_be(true);\n+ expect(typeof(tmp.foo)).should_be('function');\n},\n'js-null?' : function(){\nev('(js-null? (js-eval \"null\"))').should_be(true);\n",
        "date": "23.06.2020 22:16:31",
        "repo": "biwascheme/biwascheme",
        "type": "test",
        "sim_msg": "fix(operators): Add tests for json response for _js.",
        "sim_diff": "diff --git a/packages/operators/test/common/js.test.js b/packages/operators/test/common/js.test.js @@ -49,6 +49,47 @@ test('_js with code and args specified named function', () => {\nexpect(_js({ location, params: { code: params.code }, methodName: 'evaluate' })).toEqual(null);\n});\n+test('_js with code and args specified to return json object', () => {\n+ const params = {\n+ code: `function (one, two) {\n+ return { a: one, b: two, c: [1,2,3, one, two, \"three\"]};\n+}`,\n+ args: [12, 14],\n+ };\n+ const fn = _js({ location, params, methodName: 'function' });\n+ expect(fn).toBeInstanceOf(Function);\n+ expect(fn(1, 2)).toEqual({ a: 1, b: 2, c: [1, 2, 3, 1, 2, 'three'] });\n+ expect(_js({ location, params, methodName: 'evaluate' })).toEqual({\n+ a: 12,\n+ b: 14,\n+ c: [1, 2, 3, 12, 14, 'three'],\n+ });\n+ expect(_js({ location, params: { code: params.code }, methodName: 'evaluate' })).toEqual({\n+ c: [1, 2, 3, null, null, 'three'],\n+ });\n+});\n+\n+test('_js with code and args specified to return json array', () => {\n+ const params = {\n+ code: `function (one, two) {\n+ return [1,2,3, one, two, \"three\"];\n+}`,\n+ args: [12, 14],\n+ };\n+ const fn = _js({ location, params, methodName: 'function' });\n+ expect(fn).toBeInstanceOf(Function);\n+ expect(fn(1, 2)).toEqual([1, 2, 3, 1, 2, 'three']);\n+ expect(_js({ location, params, methodName: 'evaluate' })).toEqual([1, 2, 3, 12, 14, 'three']);\n+ expect(_js({ location, params: { code: params.code }, methodName: 'evaluate' })).toEqual([\n+ 1,\n+ 2,\n+ 3,\n+ null,\n+ null,\n+ 'three',\n+ ]);\n+});\n+\ntest('_js with undefined result returns null', () => {\nconst params = {\ncode: `function add(one, two) {\n",
        "chatgpt_rag": "test(operators): Add tests for json response for _js."
    },
    {
        "msg": "test(DynamicLinechart): use new update() API",
        "diff": "diff --git a/app/examples/dynamic-linechart/index.js b/app/examples/dynamic-linechart/index.js @@ -12,18 +12,6 @@ class DynamicLineChart extends LineChart {\nsuper.render();\nthis.emit('render');\n}\n-\n- data (data) {\n- this.options.data = data;\n-\n- this.chart.then(chart => {\n- let data = chart.data('data');\n- data.remove(() => true);\n- data.insert(this.options.data);\n-\n- chart.update();\n- });\n- }\n}\nlet data = [];\n@@ -58,7 +46,7 @@ window.onload = () => {\ncounter++;\n- vis.data(data);\n+ vis.update({data});\nvis.render();\n}, 1000);\n",
        "date": "18.05.2017 15:54:35",
        "repo": "kitware/candela",
        "type": "test",
        "sim_msg": "feat(line-chart): begin adding tooltips\nThis is incomplete: the second argument for `hover` should be the\nhovered day's info, not all of the info.\nSee line 47.",
        "sim_diff": "diff --git a/src/components/charts/line-chart.js b/src/components/charts/line-chart.js -import React, { Fragment } from 'react'\n+import React, { Fragment, useState } from 'react'\nimport { extent, max } from 'd3-array'\nimport { scaleLinear, scaleTime } from 'd3-scale'\nimport { line, curveCardinal } from 'd3-shape'\nimport { timeMonth, timeDay } from 'd3-time'\n+import Tooltip from './tooltip'\n+\nimport { formatDate, formatNumber } from '~utilities/visualization'\nimport chartStyles from './charts.module.scss'\n@@ -24,6 +26,7 @@ const LineChart = ({\nyTicks,\nlastXTick,\nperCapLabel,\n+ renderTooltipContents,\n}) => {\nconst totalXMargin = marginLeft + marginRight\nconst totalYMargin = marginTop + marginBottom\n@@ -37,6 +40,34 @@ const LineChart = ({\n})\n})\n+ const [tooltip, setTooltip] = useState(null)\n+ const [timeoutRef, setTimeoutRef] = useState(null)\n+\n+ const hover = (event, dataLine) => {\n+ console.log(dataLine) // todo get current date's info\n+ // Ensure that tooltip doesn't flash when transitioning between bars\n+ if (timeoutRef) {\n+ clearTimeout(timeoutRef)\n+ }\n+ const isTouchEvent = !event.clientX\n+ const eventX = isTouchEvent ? event.touches[0].clientX : event.clientX\n+ const eventY = isTouchEvent ? event.touches[0].clientY : event.clientY\n+ console.log(eventX, eventY)\n+\n+ setTooltip({\n+ top: isTouchEvent ? eventY - 130 : eventY + 10,\n+ left: isTouchEvent ? eventX - 80 : eventX + 5,\n+ d: dataLine,\n+ })\n+ }\n+\n+ const mouseOut = () => {\n+ if (timeoutRef) {\n+ clearTimeout(timeoutRef)\n+ }\n+ setTimeoutRef(setTimeout(() => setTooltip(null), 200))\n+ }\n+\nconst dateDomain = extent(dates)\nconst xScaleTime = scaleTime()\n@@ -159,17 +190,33 @@ const LineChart = ({\n{data && (\n<>\n{data.map(dataLine => (\n+ <>\n<path\nd={lineFn(dataLine.data)}\nstroke={dataLine.color}\nstrokeWidth={dataLine.stroke}\nfill=\"none\"\n/>\n+ {/* Add a wider hidden path for tooltips. */}\n+ <path\n+ d={lineFn(dataLine.data)}\n+ stroke=\"transparent\"\n+ strokeWidth={6}\n+ fill=\"none\"\n+ onMouseOver={event => hover(event, dataLine)}\n+ onFocus={event => hover(event, dataLine)}\n+ onMouseOut={mouseOut}\n+ onBlur={mouseOut}\n+ />\n+ </>\n))}\n</>\n)}\n</g>\n</svg>\n+ {renderTooltipContents && tooltip && (\n+ <Tooltip {...tooltip}>{renderTooltipContents(tooltip.d)} </Tooltip>\n+ )}\n</>\n)\n}\n",
        "chatgpt_rag": "refactor(dynamic-linechart): refactor data method in DynamicLineChart class\n\n- Removed redundant data method in DynamicLineChart class\n- Updated the update method in the window.onload function to pass data as an object\n- Improved code readability and maintainability"
    },
    {
        "msg": "test(button-group): refactor use screen",
        "diff": "diff --git a/packages/chakra-ui-core/src/CButtonGroup/tests/CButtonGroup.test.js b/packages/chakra-ui-core/src/CButtonGroup/tests/CButtonGroup.test.js import { CButton, CButtonGroup } from '../..'\n-import { render } from '@/tests/test-utils'\n+import { render, screen } from '@/tests/test-utils'\nconst renderComponent = (props) => {\nconst base = {\n@@ -23,7 +23,7 @@ it('should render correctly', () => {\n})\nit('should attach buttons when `is-attached` is passed', () => {\n- const { asFragment, getByText } = renderComponent({\n+ const { asFragment } = renderComponent({\ntemplate: `\n<CButtonGroup isAttached>\n<CButton>Button1</CButton>\n@@ -31,13 +31,13 @@ it('should attach buttons when `is-attached` is passed', () => {\n</CButtonGroup>`\n})\n- const button = getByText('Button1')\n+ const button = screen.getByText('Button1')\nexpect(button).toHaveStyle('border-top-right-radius: 0; border-bottom-right-radius: 0;')\nexpect(asFragment()).toMatchSnapshot()\n})\nit('should display children', () => {\n- const { getByText } = renderComponent()\n- expect(getByText('Button1')).toBeInTheDocument()\n- expect(getByText('Button2')).toBeInTheDocument()\n+ renderComponent()\n+ expect(screen.getByText('Button1')).toBeInTheDocument()\n+ expect(screen.getByText('Button2')).toBeInTheDocument()\n})\n",
        "date": "12.07.2020 16:09:03",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "sim_msg": "test(Root): add MoleculeButtonGroupFields tests",
        "sim_diff": "diff --git a/test/molecule/buttonGroupField/index.js b/test/molecule/buttonGroupField/index.js -/* global MoleculeButtonGroupField */\n+/*\n+ * Remember: YOUR COMPONENT IS DEFINED GLOBALLY\n+ * */\n+\n+/* eslint react/jsx-no-undef:0 */\n+/* eslint no-undef:0 */\nimport React from 'react'\n-import {render, getByText} from '@testing-library/react'\n+import ReactDOM from 'react-dom'\nimport chai, {expect} from 'chai'\nimport chaiDOM from 'chai-dom'\n+import {render} from '@testing-library/react'\nchai.use(chaiDOM)\n-const moleculeButtonGroupTestId = 'testId'\n-const label = 'Test Label'\n-const help = 'Test description here'\n-const success = 'Test Everything ok!'\n-const error = 'Test All wrong!'\n-const alert = 'Test Alert!!!'\n-\n-const createComponent = props => {\n- return (\n- <MoleculeButtonGroupField\n- id={moleculeButtonGroupTestId}\n- label={label}\n- {...props}\n- >\n+const setupBuilder = Component => props => {\n+ const container = document.createElement('div')\n+ container.setAttribute('id', 'test-container')\n+ const utils = render(<Component {...props} />, {\n+ container: document.body.appendChild(container)\n+ })\n+ return utils\n+}\n+\n+describe('molecule/buttonGroupField', () => {\n+ const Component = MoleculeButtonGroupField\n+ const setup = setupBuilder(Component)\n+\n+ it('should render without crashing', () => {\n+ // Given\n+ const props = {\n+ children: (\n+ <>\n+ <div>BUTTON 1</div>\n+ <div>BUTTON 2</div>\n+ </>\n+ )\n+ }\n+\n+ // When\n+ const component = <Component {...props} />\n+\n+ // Then\n+ const div = document.createElement('div')\n+ ReactDOM.render(component, div)\n+ ReactDOM.unmountComponentAtNode(div)\n+ })\n+\n+ it('should NOT render null', () => {\n+ // Given\n+ const props = {\n+ children: (\n+ <>\n+ <div>BUTTON 1</div>\n+ <div>BUTTON 2</div>\n+ </>\n+ )\n+ }\n+\n+ // When\n+ const {container} = setup(props)\n+\n+ // Then\n+ expect(container.innerHTML).to.be.a('string')\n+ expect(container.innerHTML).to.not.have.lengthOf(0)\n+ })\n+\n+ it('should see a label before button group', () => {\n+ // Given\n+ const props = {\n+ id: 'testId',\n+ label: 'Test Label',\n+ helpTest: 'Test description here',\n+ children: (\n<>\n<div>BUTTON 1</div>\n<div>BUTTON 2</div>\n</>\n- </MoleculeButtonGroupField>\n)\n}\n-describe('SUI - MoleculeButtonGroupField', () => {\n- it('User can see a label before button group', () => {\n- const component = createComponent({helpTest: help})\n- const {container} = render(component)\n- const expectedLabel = getByText(container, label)\n- expect(expectedLabel).to.be.exist\n+ // When\n+ const {getByText} = setup(props)\n+\n+ // Then\n+ const expected = getByText(props.label)\n+ expect(expected).to.be.exist\n})\n- it('User can see successHelpText after button group', () => {\n- const component = createComponent({successText: success})\n- const {container} = render(component)\n- const expectedSuccessText = getByText(container, success)\n- expect(expectedSuccessText).to.be.exist\n+ it('should see successHelpText after button group', () => {\n+ // Given\n+ const props = {\n+ id: 'testId',\n+ label: 'Test Label',\n+ successText: 'Test Everything ok!',\n+ children: (\n+ <>\n+ <div>BUTTON 1</div>\n+ <div>BUTTON 2</div>\n+ </>\n+ )\n+ }\n+\n+ // When\n+ const {getByText} = setup(props)\n+\n+ // Then\n+ const expected = getByText(props.successText)\n+ expect(expected).to.be.exist\n})\n- it('User can see errorHelpText after button group', () => {\n- const component = createComponent({errorText: error})\n- const {container} = render(component)\n- const expectedErrorText = getByText(container, error)\n- expect(expectedErrorText).to.be.exist\n+ it('should see errorHelpText after button group', () => {\n+ // Given\n+ const props = {\n+ id: 'testId',\n+ label: 'Test Label',\n+ errorText: 'Test All wrong!',\n+ children: (\n+ <>\n+ <div>BUTTON 1</div>\n+ <div>BUTTON 2</div>\n+ </>\n+ )\n+ }\n+\n+ // When\n+ const {getByText} = setup(props)\n+\n+ // Then\n+ const expected = getByText(props.errorText)\n+ expect(expected).to.be.exist\n})\n- it('User can see alertHelpText after button group', () => {\n- const component = createComponent({alertText: alert})\n- const {container} = render(component)\n- const expectedAlertText = getByText(container, alert)\n- expect(expectedAlertText).to.be.exist\n+ it('should see alertHelpText after button group', () => {\n+ // Given\n+ const props = {\n+ id: 'testId',\n+ label: 'Test Label',\n+ alertText: 'Test Alert!!!',\n+ children: (\n+ <>\n+ <div>BUTTON 1</div>\n+ <div>BUTTON 2</div>\n+ </>\n+ )\n+ }\n+\n+ // When\n+ const {getByText} = setup(props)\n+\n+ // Then\n+ const expected = getByText(props.alertText)\n+ expect(expected).to.be.exist\n})\n})\n",
        "chatgpt_rag": "test(CButtonGroup): update CButtonGroup tests to use screen utility from testing-library for better readability"
    },
    {
        "msg": "test: Add link to Webkit bug to tests",
        "diff": "diff --git a/test/trickle.js b/test/trickle.js @@ -14,7 +14,8 @@ test('get config', function (t) {\ntest('disable trickle', function (t) {\nif (bowser.safari || bowser.ios) {\n- t.pass('Skip on Safari and iOS which do not support this reliably, it seems')\n+ // Note: Webkit bug filed here: https://bugs.webkit.org/show_bug.cgi?id=182906\n+ t.pass('Skip on Safari and iOS which do not support this reliably')\nt.end()\nreturn\n}\n@@ -64,7 +65,8 @@ test('disable trickle', function (t) {\ntest('disable trickle (only initiator)', function (t) {\nif (bowser.safari || bowser.ios) {\n- t.pass('Skip on Safari and iOS which do not support this reliably, it seems')\n+ // Note: Webkit bug filed here: https://bugs.webkit.org/show_bug.cgi?id=182906\n+ t.pass('Skip on Safari and iOS which do not support this reliably')\nt.end()\nreturn\n}\n@@ -114,7 +116,8 @@ test('disable trickle (only initiator)', function (t) {\ntest('disable trickle (only receiver)', function (t) {\nif (bowser.safari || bowser.ios) {\n- t.pass('Skip on Safari and iOS which do not support this reliably, it seems')\n+ // Note: Webkit bug filed here: https://bugs.webkit.org/show_bug.cgi?id=182906\n+ t.pass('Skip on Safari and iOS which do not support this reliably')\nt.end()\nreturn\n}\n",
        "date": "19.02.2018 15:04:02",
        "repo": "feross/simple-peer",
        "type": "test",
        "sim_msg": "feat: delegate configurations in app",
        "sim_diff": "diff --git a/test/lib/application.test.js b/test/lib/application.test.js const Application = require('../../lib/application');\nconst path = require('path');\nconst utils = require('../utils');\n+const assert = require('assert');\ndescribe('test/lib/application.test.js', () => {\nlet app;\n@@ -71,6 +72,26 @@ describe('test/lib/application.test.js', () => {\n});\n});\n+ describe('env', () => {\n+ afterEach(() => app.close());\n+\n+ it('should return app.config.env', function* () {\n+ app = createApplication();\n+ yield app.ready();\n+ assert(app.env === app.config.env);\n+ });\n+ });\n+\n+ describe('proxy', () => {\n+ afterEach(() => app.close());\n+\n+ it('should delegate app.config.proxy', function* () {\n+ app = createApplication();\n+ yield app.ready();\n+ assert(app.proxy === app.config.proxy);\n+ });\n+ });\n+\ndescribe('close()', () => {\nafterEach(() => app.close());\nit('should close all listeners', function* () {\n",
        "chatgpt_rag": "fix: update comments in trickle.js to include Webkit bug reference"
    },
    {
        "msg": "test: add autocomplete highlight-first-item\nadd unit test for",
        "diff": "diff --git a/test/unit/specs/autocomplete.spec.js b/test/unit/specs/autocomplete.spec.js @@ -570,4 +570,54 @@ describe('Autocomplete', () => {\ndone();\n});\n});\n+ it('can highlight first item', done => {\n+ vm = createVue({\n+ template: `\n+ <el-autocomplete\n+ ref=\"autocomplete\"\n+ v-model=\"state\"\n+ :fetch-suggestions=\"querySearch\"\n+ highlight-first-item\n+ ></el-autocomplete>\n+ `,\n+ data() {\n+ return {\n+ restaurants: [],\n+ state: ''\n+ };\n+ },\n+ methods: {\n+ querySearch(queryString, cb) {\n+ const opts = [\n+ { 'value': '1' },\n+ { 'value': '11' },\n+ { 'value': '2' },\n+ { 'value': '22' }\n+ ];\n+ cb(\n+ queryString\n+ ? opts.filter(opt => opt.value.indexOf(queryString) >= 0)\n+ : opts\n+ );\n+ }\n+ }\n+ }, true);\n+ let elm = vm.$el;\n+ let inputElm = elm.querySelector('input');\n+ inputElm.focus();\n+\n+ const autocomplete = vm.$refs.autocomplete;\n+ const input = autocomplete.$refs.input;\n+ input.$emit('input', '1');\n+\n+ setTimeout(_ => {\n+ const suggestions = vm.$refs.autocomplete.$refs.suggestions.$el;\n+ const items = suggestions.querySelectorAll('.el-autocomplete-suggestion__list li');\n+\n+ expect(items.length).to.equal(2);\n+ expect(items[0].classList.contains('highlighted')).to.be.true;\n+\n+ done();\n+ }, 500);\n+ });\n});\n",
        "date": "14.02.2019 20:30:57",
        "repo": "hug-sun/element3",
        "type": "test",
        "sim_msg": "chore(nav): remove auito-focus for search bar on mobile toggle",
        "sim_diff": "diff --git a/src/components/layout/header/search-autocomplete.js b/src/components/layout/header/search-autocomplete.js @@ -36,12 +36,8 @@ export default forwardRef(({ mobile = false, visible = true }, popoverRef) => {\nuseEffect(() => {\nif (mobile && searchInputRef.current !== null) {\n- if (visible) {\n- searchInputRef.current.focus()\n- } else {\nsearchInputRef.current.blur()\n}\n- }\n}, [visible])\nuseEffect(() => {\n",
        "chatgpt_rag": "feat(autocomplete): add test case to highlight first item in autocomplete suggestions"
    },
    {
        "msg": "test(stat): refactor use screen",
        "diff": "diff --git a/packages/chakra-ui-core/src/CStat/tests/CStat.test.js b/packages/chakra-ui-core/src/CStat/tests/CStat.test.js import { CStat, CStatLabel, CStatNumber, CStatHelperText, CStatArrow } from '..'\n-import { render } from '@/tests/test-utils'\n+import { render, screen } from '@/tests/test-utils'\nconst renderComponent = (props) => {\nconst base = {\n@@ -22,8 +22,8 @@ it('should render correctly', () => {\n})\nit('should render children in DOM', () => {\n- const { getByText } = renderComponent()\n- expect(getByText('Collected Fees')).toBeInTheDocument()\n+ renderComponent()\n+ expect(screen.getByText('Collected Fees')).toBeInTheDocument()\n})\ntest('\"CStatArrow\" should display corresponding icon for \"type\" prop', () => {\n",
        "date": "12.07.2020 16:50:53",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "sim_msg": "test(Root): add MoleculeTabs tests",
        "sim_diff": "diff --git a/test/molecule/tabs/index.js b/test/molecule/tabs/index.js * */\n/* eslint react/jsx-no-undef:0 */\n+/* eslint no-undef:0 */\nimport React from 'react'\n-import {render} from '@testing-library/react'\n+import ReactDOM from 'react-dom'\nimport chai, {expect} from 'chai'\nimport chaiDOM from 'chai-dom'\n+import {render} from '@testing-library/react'\n-import MoleculeTabs from '../../../components/molecule/tabs/src'\n-import MoleculeTab from '../../../components/molecule/tabs/src/components/MoleculeTab'\n+import {MoleculeTab} from '../../../components/molecule/tabs/src'\nchai.use(chaiDOM)\n@@ -25,60 +26,86 @@ const setupBuilder = Component => props => {\n}\ndescribe('molecule/tabs', () => {\n- const Environment = propsArray => {\n- return (\n- <MoleculeTabs>\n- {Object.values(propsArray).map((props, index) => {\n- const {children, ...otherProps} = props // eslint-disable-line\n- return (\n- <MoleculeTab key={index} {...otherProps}>\n- {children}\n- </MoleculeTab>\n- )\n- })}\n- </MoleculeTabs>\n- )\n- }\n+ const Component = MoleculeTabs\n+ const setup = setupBuilder(Component)\n+\n+ it('should render without crashing', () => {\n+ // Given\n+ const props = {}\n+\n+ // When\n+ const component = <Component {...props} />\n+\n+ // Then\n+ const div = document.createElement('div')\n+ ReactDOM.render(component, div)\n+ ReactDOM.unmountComponentAtNode(div)\n+ })\n+\n+ it('should NOT render null', () => {\n+ // Given\n+ const props = {}\n+\n+ // When\n+ const {container} = setup(props)\n+\n+ // Then\n+ expect(container.innerHTML).to.be.a('string')\n+ expect(container.innerHTML).to.not.have.lengthOf(0)\n+ })\nit('should display the active content', () => {\n// Given\n- const propsArray = [\n- {label: 'Tab 1', children: 'Content 1', active: true},\n- {label: 'Tab 2', children: 'Content 2'}\n+ const content = 'Content 1'\n+ const props = {\n+ children: [\n+ <MoleculeTab key={0} label=\"Tab 1\" active>\n+ {content}\n+ </MoleculeTab>,\n+ <MoleculeTab key={1} label=\"Tab 2\">\n+ Content 2\n+ </MoleculeTab>\n]\n+ }\n// When\n- const {getByText} = setupBuilder(Environment)(propsArray)\n+ const {getByText} = setup(props)\n// Then\n- expect(getByText(propsArray[0].children).innerHTML).to.equal(\n- propsArray[0].children\n- )\n+ expect(getByText(content).innerHTML).to.equal(content)\n})\nit('should display the active content given count props', () => {\n// Given\n- const propsArray = [\n- {label: 'Tab 1', count: 3, children: 'Content 1', active: true},\n- {label: 'Tab 2', count: -3, children: 'Content 2'},\n- {label: 'Tab 3', count: 0, children: 'Content 3'}\n+ const content = 'Content 1'\n+ const count = [3, -3, 0]\n+ const props = {\n+ children: [\n+ <MoleculeTab key={0} label=\"Tab 1\" count={count[0]} active>\n+ {content}\n+ </MoleculeTab>,\n+ <MoleculeTab key={1} label=\"Tab 2\" count={count[1]}>\n+ Content 2\n+ </MoleculeTab>,\n+ <MoleculeTab key={2} label=\"Tab 3\" count={count[2]}>\n+ Content 3\n+ </MoleculeTab>\n]\n+ }\n// When\n- const {getByText} = setupBuilder(Environment)(propsArray)\n+ const {getByText} = setup(props)\n// Then\n- expect(getByText(propsArray[0].children).innerHTML).to.equal(\n- propsArray[0].children\n- )\n- expect(getByText(propsArray[0].count.toString()).innerHTML).to.equal(\n- propsArray[0].count.toString()\n+ expect(getByText(content).innerHTML).to.equal(content)\n+ expect(getByText(count[0].toString()).innerHTML).to.equal(\n+ count[0].toString()\n)\n- expect(getByText(propsArray[1].count.toString()).innerHTML).to.equal(\n- propsArray[1].count.toString()\n+ expect(getByText(count[1].toString()).innerHTML).to.equal(\n+ count[1].toString()\n)\n- expect(getByText(propsArray[2].count.toString()).innerHTML).to.equal(\n- propsArray[2].count.toString()\n+ expect(getByText(count[2].toString()).innerHTML).to.equal(\n+ count[2].toString()\n)\n})\n})\n",
        "chatgpt_rag": "test(CStat): update renderComponent function and test children in DOM"
    },
    {
        "msg": "test(tag): refactor use screen",
        "diff": "diff --git a/packages/chakra-ui-core/src/CTag/tests/CTag.test.js b/packages/chakra-ui-core/src/CTag/tests/CTag.test.js import { CBox, CTag, CTagLabel, CTagIcon, CTagCloseButton, CAvatar } from '../..'\n-import { render } from '@/tests/test-utils'\n+import { render, screen } from '@/tests/test-utils'\nconst renderComponent = (props) => {\nconst base = {\n@@ -22,9 +22,9 @@ it('should render correctly', () => {\n})\nit('should display children', () => {\n- const { getByText } = renderComponent()\n+ renderComponent()\n- expect(getByText('Green')).toBeInTheDocument()\n+ expect(screen.getByText('Green')).toBeInTheDocument()\n})\nit('should display tag with right icon', () => {\n@@ -35,8 +35,7 @@ it('should display tag with right icon', () => {\n<CTagLabel>Green</CTagLabel>\n<CTagIcon icon=\"add\" size=\"12px\" />\n</CTag>\n- </CBox>\n- `\n+ </CBox>`\n})\nexpect(asFragment()).toMatchSnapshot()\n})\n@@ -52,8 +51,7 @@ it('should display tag with custom element', () => {\n/>\n<CTagLabel>Mesut</CTagLabel>\n</CTag>\n- </CBox>\n- `\n+ </CBox>`\n})\nexpect(asFragment()).toMatchSnapshot()\n})\n",
        "date": "12.07.2020 17:04:43",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "sim_msg": "chore(renderer): add tests for children prop",
        "sim_diff": "diff --git a/packages/react-form-renderer/src/tests/form-renderer/form-renderer.test.js b/packages/react-form-renderer/src/tests/form-renderer/form-renderer.test.js @@ -309,4 +309,80 @@ describe('<FormRenderer />', () => {\nexpect(registerSpy).toHaveBeenCalledWith([]);\n});\n+\n+ describe('children prop', () => {\n+ const ChildrenTemplate = ({ formFields, schema, hideButtons }) => {\n+ const { handleSubmit } = useFormApi();\n+ return (\n+ <form onSubmit={handleSubmit}>\n+ {schema.title}\n+ {formFields}\n+ {!hideButtons && <button type=\"submit\">Child node submit</button>}\n+ </form>\n+ );\n+ };\n+\n+ it('should clone template props to children node', () => {\n+ render(\n+ <FormRenderer componentMapper={componentMapper} schema={schema} onSubmit={jest.fn()}>\n+ <ChildrenTemplate />\n+ </FormRenderer>\n+ );\n+\n+ expect(screen.getByLabelText('component1')).toBeInTheDocument();\n+ expect(screen.getByText('Select field')).toBeInTheDocument();\n+ expect(screen.getByText('Child node submit')).toBeInTheDocument();\n+ });\n+\n+ it('should use children node props', () => {\n+ render(\n+ <FormRenderer componentMapper={componentMapper} schema={schema} onSubmit={jest.fn()}>\n+ <ChildrenTemplate hideButtons />\n+ </FormRenderer>\n+ );\n+\n+ expect(screen.getByLabelText('component1')).toBeInTheDocument();\n+ expect(screen.getByText('Select field')).toBeInTheDocument();\n+ const submitButton = screen.queryByText('Child node submit');\n+ expect(submitButton).toBeNull();\n+ });\n+\n+ it('should submit data from children node', () => {\n+ const submitSpy = jest.fn();\n+ render(\n+ <FormRenderer initialValues={{ foo: 'bar' }} componentMapper={componentMapper} schema={schema} onSubmit={submitSpy}>\n+ <ChildrenTemplate />\n+ </FormRenderer>\n+ );\n+\n+ userEvent.click(screen.getByText('Child node submit'));\n+\n+ expect(submitSpy).toHaveBeenCalledWith({ foo: 'bar' }, expect.any(Object), expect.any(Function));\n+ });\n+\n+ it('should use children render function', () => {\n+ render(\n+ <FormRenderer componentMapper={componentMapper} schema={schema} onSubmit={jest.fn()}>\n+ {(props) => <ChildrenTemplate {...props} />}\n+ </FormRenderer>\n+ );\n+\n+ expect(screen.getByLabelText('component1')).toBeInTheDocument();\n+ expect(screen.getByText('Select field')).toBeInTheDocument();\n+ expect(screen.getByText('Child node submit')).toBeInTheDocument();\n+ });\n+\n+ it('should submit data from children render function', () => {\n+ const submitSpy = jest.fn();\n+ render(\n+ <FormRenderer initialValues={{ foo: 'bar' }} componentMapper={componentMapper} schema={schema} onSubmit={submitSpy}>\n+ {(props) => <ChildrenTemplate {...props} />}\n+ </FormRenderer>\n+ );\n+\n+ userEvent.click(screen.getByText('Child node submit'));\n+\n+ expect(submitSpy).toHaveBeenCalledWith({ foo: 'bar' }, expect.any(Object), expect.any(Function));\n+ });\n+ });\n});\n",
        "chatgpt_rag": "chore(CTag): update tests to use screen utility from test-utils"
    },
    {
        "msg": "test(alert): add a11y test to alert component",
        "diff": "diff --git a/packages/chakra-ui-core/src/Alert/tests/Alert.test.js b/packages/chakra-ui-core/src/Alert/tests/Alert.test.js @@ -43,3 +43,14 @@ it('should override icon if set explicitly', () => {\nexpect(asFragment()).toMatchSnapshot()\n})\n+\n+it('should have role=alert', () => {\n+ const { getByRole } = renderComponent({\n+ template: `\n+ <Alert status=\"error\">\n+ <AlertIcon name=\"add\" />\n+ </Alert>`\n+ })\n+\n+ getByRole('alert')\n+})\n",
        "date": "15.03.2020 20:07:02",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "sim_msg": "test: add jest of error prop for Input",
        "sim_diff": "diff --git a/packages/input/src/presenters/InputHaloPresenter.test.js b/packages/input/src/presenters/InputHaloPresenter.test.js @@ -25,4 +25,9 @@ describe(\"InputHaloPresenter\", () => {\nrenderer.create(<InputHaloPresenter isDisabled />).toJSON()\n).toMatchSnapshot();\n});\n+ it(\"renders when error\", () => {\n+ expect(\n+ renderer.create(<InputHaloPresenter error />).toJSON()\n+ ).toMatchSnapshot();\n+ });\n});\n",
        "chatgpt_rag": "test: add role=alert test for Alert component"
    },
    {
        "msg": "test(code): refactor to screen",
        "diff": "diff --git a/packages/chakra-ui-core/src/CCode/tests/CCode.test.js b/packages/chakra-ui-core/src/CCode/tests/CCode.test.js import CCode from '..'\n-import { render } from '@/tests/test-utils'\n+import { render, screen } from '@/tests/test-utils'\nconst renderComponent = (props) => {\nconst base = {\n@@ -16,7 +16,7 @@ it('should render correctly', () => {\n})\nit('should display children', () => {\n- const { getByText } = renderComponent()\n+ renderComponent()\n- expect(getByText('content')).toBeInTheDocument()\n+ expect(screen.getByText('content')).toBeInTheDocument()\n})\n",
        "date": "06.07.2020 23:32:35",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "sim_msg": "chore(renderer): add tests for children prop",
        "sim_diff": "diff --git a/packages/react-form-renderer/src/tests/form-renderer/form-renderer.test.js b/packages/react-form-renderer/src/tests/form-renderer/form-renderer.test.js @@ -309,4 +309,80 @@ describe('<FormRenderer />', () => {\nexpect(registerSpy).toHaveBeenCalledWith([]);\n});\n+\n+ describe('children prop', () => {\n+ const ChildrenTemplate = ({ formFields, schema, hideButtons }) => {\n+ const { handleSubmit } = useFormApi();\n+ return (\n+ <form onSubmit={handleSubmit}>\n+ {schema.title}\n+ {formFields}\n+ {!hideButtons && <button type=\"submit\">Child node submit</button>}\n+ </form>\n+ );\n+ };\n+\n+ it('should clone template props to children node', () => {\n+ render(\n+ <FormRenderer componentMapper={componentMapper} schema={schema} onSubmit={jest.fn()}>\n+ <ChildrenTemplate />\n+ </FormRenderer>\n+ );\n+\n+ expect(screen.getByLabelText('component1')).toBeInTheDocument();\n+ expect(screen.getByText('Select field')).toBeInTheDocument();\n+ expect(screen.getByText('Child node submit')).toBeInTheDocument();\n+ });\n+\n+ it('should use children node props', () => {\n+ render(\n+ <FormRenderer componentMapper={componentMapper} schema={schema} onSubmit={jest.fn()}>\n+ <ChildrenTemplate hideButtons />\n+ </FormRenderer>\n+ );\n+\n+ expect(screen.getByLabelText('component1')).toBeInTheDocument();\n+ expect(screen.getByText('Select field')).toBeInTheDocument();\n+ const submitButton = screen.queryByText('Child node submit');\n+ expect(submitButton).toBeNull();\n+ });\n+\n+ it('should submit data from children node', () => {\n+ const submitSpy = jest.fn();\n+ render(\n+ <FormRenderer initialValues={{ foo: 'bar' }} componentMapper={componentMapper} schema={schema} onSubmit={submitSpy}>\n+ <ChildrenTemplate />\n+ </FormRenderer>\n+ );\n+\n+ userEvent.click(screen.getByText('Child node submit'));\n+\n+ expect(submitSpy).toHaveBeenCalledWith({ foo: 'bar' }, expect.any(Object), expect.any(Function));\n+ });\n+\n+ it('should use children render function', () => {\n+ render(\n+ <FormRenderer componentMapper={componentMapper} schema={schema} onSubmit={jest.fn()}>\n+ {(props) => <ChildrenTemplate {...props} />}\n+ </FormRenderer>\n+ );\n+\n+ expect(screen.getByLabelText('component1')).toBeInTheDocument();\n+ expect(screen.getByText('Select field')).toBeInTheDocument();\n+ expect(screen.getByText('Child node submit')).toBeInTheDocument();\n+ });\n+\n+ it('should submit data from children render function', () => {\n+ const submitSpy = jest.fn();\n+ render(\n+ <FormRenderer initialValues={{ foo: 'bar' }} componentMapper={componentMapper} schema={schema} onSubmit={submitSpy}>\n+ {(props) => <ChildrenTemplate {...props} />}\n+ </FormRenderer>\n+ );\n+\n+ userEvent.click(screen.getByText('Child node submit'));\n+\n+ expect(submitSpy).toHaveBeenCalledWith({ foo: 'bar' }, expect.any(Object), expect.any(Function));\n+ });\n+ });\n});\n",
        "chatgpt_rag": "test(CCode): update test to use screen from test-utils"
    },
    {
        "msg": "test(cli): Added CLI unit test for --global-var option handling",
        "diff": "diff --git a/test/unit/cli.test.js b/test/unit/cli.test.js @@ -142,6 +142,24 @@ describe('cli parser', function () {\n});\n});\n+ describe('--global-var', function () {\n+ it('should throw an error for missing --global-var values', function (done) {\n+ cli.rawOptions('run myCollection.json --global-var'.split(' '), 'newmantests', function (err) {\n+ expect(err.code).to.equal('ARGError');\n+\n+ done();\n+ });\n+ });\n+\n+ it('should throw an error for --global-var values without an `=`', function (done) {\n+ cli.rawOptions('run myCollection.json --global-var foo'.split(' '), 'newmantests', function (err) {\n+ expect(err.code).to.equal('ARGError');\n+\n+ done();\n+ });\n+ });\n+ });\n+\nit('should load all arguments (except reporters)', function (done) {\ncli.rawOptions(('run ' +\n'myCollection.json ' +\n@@ -154,6 +172,7 @@ describe('cli parser', function () {\n'--reporter-cli-no-summary ' +\n'--iteration-count 23 ' +\n'--reporters json,html ' +\n+ '--global-var foo=bar --global-var alpha==beta= ' +\n'--no-color ' +\n'--delay-request 12000 ' +\n'--timeout-request 5000 ' +\n@@ -183,6 +202,11 @@ describe('cli parser', function () {\nexpect(opts.reporters).to.contain('html');\nexpect(opts.reporters).to.not.contain('junit');\n+ expect(opts.globalVar).to.eql([\n+ { key: 'foo', value: 'bar' },\n+ { key: 'alpha', value: '=beta=' }\n+ ]);\n+\nexpect(opts.bail).to.be(true);\nexpect(opts.suppressExitCode).to.be(true);\n@@ -208,6 +232,7 @@ describe('cli parser', function () {\n'--timeout-request 5000 ' +\n'--ignore-redirects ' +\n'-k ' +\n+ '--global-var foo=bar --global-var alpha==beta= ' +\n'--reporter-json-output ./omg.txt ' +\n'--reporter-html-output report.html ' +\n'--reporter-html-template ./mytemplate.html ' +\n@@ -231,6 +256,11 @@ describe('cli parser', function () {\nexpect(opts.ignoreRedirects).to.be(true);\nexpect(opts.insecure).to.be(true);\n+ expect(opts.globalVar).to.eql([\n+ { key: 'foo', value: 'bar' },\n+ { key: 'alpha', value: '=beta=' }\n+ ]);\n+\nexpect(opts.noColor).to.be(true);\nexpect(opts.reporters).to.contain('json');\n",
        "date": "24.07.2017 14:35:30",
        "repo": "postmanlabs/newman",
        "type": "test",
        "sim_msg": "test(js_helper): test custom attributes",
        "sim_diff": "diff --git a/test/scripts/helpers/js.js b/test/scripts/helpers/js.js 'use strict';\n+const cheerio = require('cheerio');\n+\ndescribe('js', () => {\nconst Hexo = require('../../../lib/hexo');\nconst hexo = new Hexo(__dirname);\n@@ -12,14 +14,26 @@ describe('js', () => {\nconst js = require('../../../lib/plugins/helper/js').bind(ctx);\n- function assertResult(result) {\n- let expected = '';\n+ function assertResult(result, expected) {\n+ const $ = cheerio.load(result);\n- for (let i = 1, len = arguments.length; i < len; i++) {\n- expected += '<script src=\"' + arguments[i] + '\"></script>\\n';\n+ if (!Array.isArray(expected)) {\n+ expected = [expected];\n}\n- result.should.eql(expected.trim());\n+ expected.forEach((item, index) => {\n+ if (typeof item === 'string' || item instanceof String) {\n+ $('script').eq(index).attr('src').should.eql(item);\n+ } else {\n+ for (const attribute in item) {\n+ if (item[attribute] === true) {\n+ $('script').eq(index).attr(attribute).should.eql(attribute);\n+ } else {\n+ $('script').eq(index).attr(attribute).should.eql(item[attribute]);\n+ }\n+ }\n+ }\n+ });\n}\nit('a string', () => {\n@@ -30,18 +44,41 @@ describe('js', () => {\n});\nit('an array', () => {\n- assertResult(js(['foo', 'bar', 'baz']), '/foo.js', '/bar.js', '/baz.js');\n+ assertResult(js(['foo', 'bar', 'baz']), ['/foo.js', '/bar.js', '/baz.js']);\n});\nit('multiple strings', () => {\n- assertResult(js('foo', 'bar', 'baz'), '/foo.js', '/bar.js', '/baz.js');\n+ assertResult(js('foo', 'bar', 'baz'), ['/foo.js', '/bar.js', '/baz.js']);\n});\nit('multiple arrays', () => {\n- assertResult(js(['foo', 'bar'], ['baz']), '/foo.js', '/bar.js', '/baz.js');\n+ assertResult(js(['foo', 'bar'], ['baz']), ['/foo.js', '/bar.js', '/baz.js']);\n});\nit('mixed', () => {\n- assertResult(js(['foo', 'bar'], 'baz'), '/foo.js', '/bar.js', '/baz.js');\n+ assertResult(js(['foo', 'bar'], 'baz'), ['/foo.js', '/bar.js', '/baz.js']);\n+ });\n+\n+ it('an object', () => {\n+ assertResult(js({src: 'script.js'}), {src: '/script.js'});\n+ assertResult(js({src: '/script.js'}), {src: '/script.js'});\n+ assertResult(js({src: '/script.js', foo: 'bar'}), {src: '/script.js', foo: 'bar'});\n+ });\n+\n+ it('mulitple objects', () => {\n+ assertResult(js({src: '/foo.js'}, {src: '/bar.js'}), [{src: '/foo.js'}, {src: '/bar.js'}]);\n+ assertResult(js({src: '/aaa.js', bbb: 'ccc'}, {src: '/ddd.js', eee: 'fff'}),\n+ [{src: '/aaa.js', bbb: 'ccc'}, {src: '/ddd.js', eee: 'fff'}]);\n+ });\n+\n+ it('an array of objects', () => {\n+ assertResult(js([{src: '/foo.js'}, {src: '/bar.js'}]), [{src: '/foo.js'}, {src: '/bar.js'}]);\n+ assertResult(js([{src: '/aaa.js', bbb: 'ccc'}, {src: '/ddd.js', eee: 'fff'}]),\n+ [{src: '/aaa.js', bbb: 'ccc'}, {src: '/ddd.js', eee: 'fff'}]);\n+ });\n+\n+ it('async and defer attributes', () => {\n+ assertResult(js({src: '/foo.js', 'async': true}), {src: '/foo.js', 'async': true});\n+ assertResult(js({src: '/bar.js', 'defer': true}), {src: '/bar.js', 'defer': true});\n});\n});\n",
        "chatgpt_rag": "test(cli_parser): test global-var values with custom attributes"
    },
    {
        "msg": "test: Add a test for strict mode with `Collapse`",
        "diff": "diff --git a/src/__tests__/Collapse.spec.js b/src/__tests__/Collapse.spec.js @@ -32,6 +32,13 @@ describe('Collapse', () => {\nexpect(wrapper.find('p').text()).toBe('hello');\n});\n+ it('works with strict mode', () => {\n+ const spy = jest.spyOn(console, 'error');\n+ wrapper = mount(<React.StrictMode><Collapse/></React.StrictMode>);\n+ expect(wrapper.instance()).toBeTruthy();\n+ expect(spy).not.toHaveBeenCalled();\n+ })\n+\nit('should have default isOpen value', () => {\nwrapper = shallow(<Collapse />);\nexpect(wrapper.instance().props.isOpen).toEqual(false);\n",
        "date": "21.10.2020 15:55:12",
        "repo": "reactstrap/reactstrap",
        "type": "test",
        "sim_msg": "test(select-input): add default value for `maxMenuHeight`",
        "sim_diff": "diff --git a/inputs/select-input/select-input.spec.js b/inputs/select-input/select-input.spec.js @@ -16,6 +16,17 @@ const createTestProps = custom => ({\nintl: { formatMessage: jest.fn(message => message.id) },\n...custom,\n});\n+describe('defaultProps', () => {\n+ let wrapper;\n+ let props;\n+ beforeEach(() => {\n+ props = createTestProps();\n+ wrapper = shallow(<SelectInput {...props} />);\n+ });\n+ it('should default `maxMenuHeight` to `200`', () => {\n+ expect(wrapper.find(Select)).toHaveProp('maxMenuHeight', 200);\n+ });\n+});\ndescribe('overwritten props', () => {\ndescribe('when in single-value mode', () => {\n",
        "chatgpt_rag": "test(collapse): add test for strict mode compatibility"
    },
    {
        "msg": "test: fix repeatClick path",
        "diff": "diff --git a/test/unit/tests/directives/repeatClick.test.js b/test/unit/tests/directives/repeatClick.test.js import { mount } from '@vue/test-utils'\n-import repeatClick from '../../../../src/directives/new-repeat-click'\n+import repeatClick from '../../../../src/directives/repeatClick'\ndescribe('directives: repeat-click', () => {\ntest('should called repeat click callback when emitted mousedown event ', (done) => {\nconst handleRepeatClick = jest.fn()\n",
        "date": "08.08.2020 20:58:14",
        "repo": "hug-sun/element3",
        "type": "test",
        "sim_msg": "fix(b-dropdown): close when clicking on nested elements inside items with `to` prop\nFixes 3474",
        "sim_diff": "diff --git a/src/components/link/link.js b/src/components/link/link.js @@ -121,11 +121,11 @@ const clickHandlerFactory = ({ disabled, tag, href, suppliedHandler, parent }) =\n// Needed to prevent vue-router for doing its thing\nevt.stopImmediatePropagation()\n} else {\n- if (isRouterLink(tag) && evt.target.__vue__) {\n+ if (isRouterLink(tag) && evt.currentTarget.__vue__) {\n// Router links do not emit instance 'click' events, so we\n// add in an $emit('click', evt) on it's vue instance\n/* istanbul ignore next: difficult to test, but we know it works */\n- evt.target.__vue__.$emit('click', evt)\n+ evt.currentTarget.__vue__.$emit('click', evt)\n}\n// Call the suppliedHandler(s), if any provided\nconcat(suppliedHandler)\n",
        "chatgpt_rag": "refactor(tests): fix import path for repeatClick directive in repeatClick.test.js\nUpdated import path for repeatClick directive in repeatClick.test.js to match the correct file location."
    },
    {
        "msg": "test: update description for test package",
        "diff": "diff --git a/tests/package.json b/tests/package.json {\n\"name\": \"tests\",\n\"version\": \"0.0.0\",\n- \"description\": \"Candela unit tests\",\n+ \"description\": \"Candela unit/coverage/image tests\",\n\"scripts\": {\n\"build:unit\": \"webpack\",\n\"build:coverage\": \"webpack --config webpack-coverage.config.js\",\n",
        "date": "06.06.2017 17:41:25",
        "repo": "kitware/candela",
        "type": "test",
        "sim_msg": "feat: avoid languages by now",
        "sim_diff": "diff --git a/package.json b/package.json \"testURL\": \"http://localhost/\",\n\"collectCoverage\": true,\n\"collectCoverageFrom\": [\n- \"**/src/**/**.js\"\n+ \"**/src/**/**.js\",\n+ \"!./packages/lang-**/**\"\n],\n\"coverageDirectory\": \"coverage\",\n\"testEnvironment\": \"node\"\n",
        "chatgpt_rag": "chore: update description in package.json for Candela unit/coverage/image tests"
    },
    {
        "msg": "test(stack): refactor use screen",
        "diff": "diff --git a/packages/chakra-ui-core/src/CStack/tests/CStack.test.js b/packages/chakra-ui-core/src/CStack/tests/CStack.test.js import { CStack, CBox, CHeading, CText } from '../..'\n-import { render, getTagName } from '@/tests/test-utils'\n+import { render, getTagName, screen } from '@/tests/test-utils'\nconst renderComponent = (props) => {\nconst inlineAttrs = (props && props.inlineAttrs) || ''\n@@ -27,22 +27,22 @@ it('should render correctly', () => {\n})\nit('should default to vertical stack', () => {\n- const { getByTestId } = renderComponent()\n- const stack = getByTestId('stack')\n+ renderComponent()\n+ const stack = screen.getByTestId('stack')\nexpect(stack).toHaveStyle('display: flex')\nexpect(stack).toHaveStyle('flex-direction: column')\n})\nit('should not space last child', () => {\n- const { getByTestId } = renderComponent()\n- const stack = getByTestId('stack')\n+ renderComponent()\n+ const stack = screen.getByTestId('stack')\nexpect(stack).not.toHaveStyle('margin-bottom: 0.5rem')\n})\nit('should should stack horizontally if isInline', () => {\nconst inlineAttrs = 'is-inline'\n- const { getByTestId } = renderComponent({ inlineAttrs })\n- const stack = getByTestId('stack')\n+ renderComponent({ inlineAttrs })\n+ const stack = screen.getByTestId('stack')\nexpect(stack).toHaveStyle('display: flex')\nexpect(stack).toHaveStyle('flex-direction: row')\n})\n@@ -58,8 +58,8 @@ it.each`\n'should render CStack with element as $as',\n({ as }) => {\nconst inlineAttrs = `as=\"${as}\"`\n- const { asFragment, getByTestId } = renderComponent({ inlineAttrs })\n- const stack = getByTestId('stack')\n+ const { asFragment } = renderComponent({ inlineAttrs })\n+ const stack = screen.getByTestId('stack')\nexpect(getTagName(stack)).toEqual(as)\nexpect(asFragment()).toMatchSnapshot()\n}\n",
        "date": "12.07.2020 16:49:35",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "sim_msg": "refactor(text): assert based on styles's classes",
        "sim_diff": "diff --git a/typography/text/text.spec.js b/typography/text/text.spec.js import React from 'react';\nimport { shallow } from 'enzyme';\n+import styles from './text.mod.css';\nimport Text from './text';\ndescribe('exports', () => {\n@@ -34,7 +35,7 @@ describe('<Headline>', () => {\nexpect(wrapper.type()).toBe('h1');\n});\nit('should not have \"bold\" class', () => {\n- expect(wrapper).not.toContainClass('bold');\n+ expect(wrapper).not.toContainClass(styles.bold);\n});\nit('should render given text', () => {\nexpect(wrapper.text()).toMatch('Title');\n@@ -52,7 +53,7 @@ describe('<Subheadline>', () => {\nexpect(wrapper.type()).toBe('h4');\n});\nit('should not have \"bold\" class', () => {\n- expect(wrapper).not.toContainClass('bold');\n+ expect(wrapper).not.toContainClass(styles.bold);\n});\nit('should render given text', () => {\nexpect(wrapper.text()).toMatch('Subtitle');\n@@ -69,7 +70,7 @@ describe('<Subheadline>', () => {\nexpect(wrapper.type()).toBe('h4');\n});\nit('should have \"bold\" class', () => {\n- expect(wrapper).toContainClass('bold');\n+ expect(wrapper).toContainClass(styles.bold);\n});\nit('should render given text', () => {\nexpect(wrapper.text()).toMatch('Subtitle');\n@@ -83,7 +84,7 @@ describe('<Wrap>', () => {\nwrapper = shallow(<Text.Wrap>{'Title'}</Text.Wrap>);\n});\nit('should have \"wrap\" class', () => {\n- expect(wrapper).toContainClass('wrap');\n+ expect(wrapper).toContainClass(styles.wrap);\n});\nit('should render given text', () => {\nexpect(wrapper.text()).toMatch('Title');\n@@ -100,7 +101,7 @@ describe('<Body>', () => {\nexpect(wrapper.type()).toBe('p');\n});\nit('should not have \"bold\" class', () => {\n- expect(wrapper).not.toContainClass('bold');\n+ expect(wrapper).not.toContainClass(styles.bold);\n});\nit('should render given text', () => {\nexpect(wrapper.text()).toMatch('Body');\n@@ -113,7 +114,7 @@ describe('<Body>', () => {\nexpect(wrapper.type()).toBe('p');\n});\nit('should have \"bold\" class', () => {\n- expect(wrapper).toContainClass('bold');\n+ expect(wrapper).toContainClass(styles.bold);\n});\nit('should render given text', () => {\nexpect(wrapper.text()).toMatch('Body');\n@@ -130,7 +131,7 @@ describe('<Body>', () => {\nexpect(wrapper.type()).toBe('span');\n});\nit('should not have \"bold\" class', () => {\n- expect(wrapper).not.toContainClass('bold');\n+ expect(wrapper).not.toContainClass(styles.bold);\n});\nit('should render given text', () => {\nexpect(wrapper.text()).toMatch('Body');\n@@ -147,7 +148,7 @@ describe('<Body>', () => {\nexpect(wrapper.type()).toBe('span');\n});\nit('should have \"bold\" class', () => {\n- expect(wrapper).toContainClass('bold');\n+ expect(wrapper).toContainClass(styles.bold);\n});\nit('should render given text', () => {\nexpect(wrapper.text()).toMatch('Body');\n@@ -166,7 +167,7 @@ describe('<Detail>', () => {\nexpect(wrapper.type()).toBe('small');\n});\nit('should not have \"bold\" class', () => {\n- expect(wrapper).not.toContainClass('bold');\n+ expect(wrapper).not.toContainClass(styles.bold);\n});\nit('should render given text', () => {\nexpect(wrapper.text()).toMatch('Detail');\n@@ -179,7 +180,7 @@ describe('<Detail>', () => {\nexpect(wrapper.type()).toBe('small');\n});\nit('should have \"bold\" class', () => {\n- expect(wrapper).toContainClass('bold');\n+ expect(wrapper).toContainClass(styles.bold);\n});\nit('should render given text', () => {\nexpect(wrapper).toHaveText('Detail');\n@@ -196,7 +197,7 @@ describe('<Detail>', () => {\nexpect(wrapper.type()).toBe('small');\n});\nit('should have \"bold\" class', () => {\n- expect(wrapper).toContainClass('secondary');\n+ expect(wrapper).toContainClass(styles.secondary);\n});\nit('should render given text', () => {\nexpect(wrapper).toHaveText('Detail');\n@@ -212,10 +213,10 @@ describe('<Detail>', () => {\nexpect(wrapper.type()).toBe('small');\n});\nit('should not have \"bold\" class', () => {\n- expect(wrapper).not.toContainClass('bold');\n+ expect(wrapper).not.toContainClass(styles.bold);\n});\nit('should have \"inline\" class', () => {\n- expect(wrapper).toContainClass('inline');\n+ expect(wrapper).toContainClass(styles.inline);\n});\nit('should render given text', () => {\nexpect(wrapper.text()).toMatch('Detail');\n@@ -232,10 +233,10 @@ describe('<Detail>', () => {\nexpect(wrapper.type()).toBe('small');\n});\nit('should have \"bold\" class', () => {\n- expect(wrapper).toContainClass('bold');\n+ expect(wrapper).toContainClass(styles.bold);\n});\nit('should have \"inline\" class', () => {\n- expect(wrapper).toContainClass('inline');\n+ expect(wrapper).toContainClass(styles.inline);\n});\nit('should render given text', () => {\nexpect(wrapper).toHaveText('Detail');\n@@ -254,10 +255,10 @@ describe('<Detail>', () => {\nexpect(wrapper.type()).toBe('small');\n});\nit('should have \"secondary\" class', () => {\n- expect(wrapper).toContainClass('secondary');\n+ expect(wrapper).toContainClass(styles.secondary);\n});\nit('should have \"inline\" class', () => {\n- expect(wrapper).toContainClass('inline');\n+ expect(wrapper).toContainClass(styles.inline);\n});\nit('should render given text', () => {\nexpect(wrapper).toHaveText('Detail');\n",
        "chatgpt_rag": "refactor(CStack): update test to use screen utility from test-utils"
    },
    {
        "msg": "test(button): remove unnecessary mock",
        "diff": "diff --git a/packages/chakra-ui-core/src/CButton/tests/CButton.test.js b/packages/chakra-ui-core/src/CButton/tests/CButton.test.js import { CButton } from '../..'\nimport { render, defaultProviders } from '@/tests/test-utils'\n-// mocks\n-jest.mock('breadstick/dist/components/Alert/styles.css', () => ({})) // jest tries to import styles and fails...\n-\nconst renderComponent = (props) => {\nconst base = {\ncomponents: {\n",
        "date": "19.04.2020 20:20:50",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "sim_msg": "test(Root): add MoleculeBreadcrum tests",
        "sim_diff": "diff --git a/test/molecule/breadcrumb/index.js b/test/molecule/breadcrumb/index.js * */\n/* eslint react/jsx-no-undef:0 */\n+/* eslint no-undef:0 */\n-// import React from 'react'\n-// import {render} from '@testing-library/react'\n+import React from 'react'\n+import ReactDOM from 'react-dom'\nimport chai, {expect} from 'chai'\nimport chaiDOM from 'chai-dom'\n+import {render} from '@testing-library/react'\n+import BreadcrumbBasic from '../../../components/molecule/breadcrumb/src'\nchai.use(chaiDOM)\n+const setupBuilder = Component => props => {\n+ const container = document.createElement('div')\n+ container.setAttribute('id', 'test-container')\n+ const utils = render(<Component {...props} />, {\n+ container: document.body.appendChild(container)\n+ })\n+ return utils\n+}\n+\ndescribe('molecule/breadcrumb', () => {\n- it.skip('Render', () => {\n+ const Component = BreadcrumbBasic\n+ const setup = setupBuilder(Component)\n+\n+ it('should render without crashing', () => {\n+ // Given\n+ const props = {\n+ items: [\n+ {\n+ label: 'item 0'\n+ },\n+ {\n+ label: 'item 1'\n+ }\n+ ]\n+ }\n+\n+ // When\n+ const component = <Component {...props} />\n+\n+ // Then\n+ const div = document.createElement('div')\n+ ReactDOM.render(component, div)\n+ ReactDOM.unmountComponentAtNode(div)\n+ })\n+\n+ it('should NOT render null', () => {\n+ // Given\n+ const props = {\n+ items: [\n+ {\n+ label: 'item 0'\n+ },\n+ {\n+ label: 'item 1'\n+ }\n+ ]\n+ }\n+\n+ // When\n+ const {container} = setup(props)\n+\n+ // Then\n+ expect(container.innerHTML).to.be.a('string')\n+ expect(container.innerHTML).to.not.have.lengthOf(0)\n+ })\n+\n+ it.skip('example', () => {\n// Example TO BE DELETED!!!!\n- // const {getByRole} = render(<AtomButton>HOLA</AtomButton>)\n+\n+ // Given\n+ // const props = {}\n+\n+ // When\n+ // const {getByRole} = setup(props)\n+\n+ // Then\n// expect(getByRole('button')).to.have.text('HOLA')\nexpect(true).to.be.eql(false)\n})\n",
        "chatgpt_rag": "test(CButton): remove unnecessary mock for breadstick styles.css and update test-utils usage"
    },
    {
        "msg": "test(stack): update snapshots",
        "diff": "diff --git a/packages/chakra-ui-core/src/CStack/tests/__snapshots__/CStack.test.js.snap b/packages/chakra-ui-core/src/CStack/tests/__snapshots__/CStack.test.js.snap exports[`should render CStack with element as nav 1`] = `\n<DocumentFragment>\n<nav\n- class=\"css-j7qwjs css-k008qs css-1lp2as9\"\n+ class=\"css-j7qwjs css-0\"\ndata-chakra-component=\"CStack\"\ndata-testid=\"stack\"\n>\n<div\n- class=\"css-1ipbp6k\"\n+ class=\"css-dtyjrz\"\ndata-chakra-component=\"CBox\"\ndata-testid=\"stack-child-1\"\n>\n@@ -26,7 +26,6 @@ exports[`should render CStack with element as nav 1`] = `\nThe future can be even brighter but a goal without a plan is just a wish\n</p>\n</div>\n-\n<div\nclass=\"css-1ipbp6k\"\ndata-chakra-component=\"CBox\"\n@@ -53,12 +52,12 @@ exports[`should render CStack with element as nav 1`] = `\nexports[`should render CStack with element as section 1`] = `\n<DocumentFragment>\n<section\n- class=\"css-j7qwjs css-k008qs css-1lp2as9\"\n+ class=\"css-j7qwjs css-0\"\ndata-chakra-component=\"CStack\"\ndata-testid=\"stack\"\n>\n<div\n- class=\"css-1ipbp6k\"\n+ class=\"css-dtyjrz\"\ndata-chakra-component=\"CBox\"\ndata-testid=\"stack-child-1\"\n>\n@@ -76,7 +75,6 @@ exports[`should render CStack with element as section 1`] = `\nThe future can be even brighter but a goal without a plan is just a wish\n</p>\n</div>\n-\n<div\nclass=\"css-1ipbp6k\"\ndata-chakra-component=\"CBox\"\n@@ -103,12 +101,12 @@ exports[`should render CStack with element as section 1`] = `\nexports[`should render correctly 1`] = `\n<DocumentFragment>\n<div\n- class=\"css-j7qwjs css-k008qs css-1lp2as9\"\n+ class=\"css-j7qwjs css-0\"\ndata-chakra-component=\"CStack\"\ndata-testid=\"stack\"\n>\n<div\n- class=\"css-1ipbp6k\"\n+ class=\"css-dtyjrz\"\ndata-chakra-component=\"CBox\"\ndata-testid=\"stack-child-1\"\n>\n@@ -126,7 +124,6 @@ exports[`should render correctly 1`] = `\nThe future can be even brighter but a goal without a plan is just a wish\n</p>\n</div>\n-\n<div\nclass=\"css-1ipbp6k\"\ndata-chakra-component=\"CBox\"\n@@ -153,29 +150,36 @@ exports[`should render correctly 1`] = `\nexports[`should should stack native html elements 1`] = `\n<DocumentFragment>\n<div\n- class=\"css-j7qwjs css-k008qs css-1lp2as9\"\n+ class=\"css-j7qwjs css-0\"\ndata-chakra-component=\"CStack\"\ndata-testid=\"stack\"\n>\n<p\n- class=\"css-18iq2bq\"\n+ class=\"css-16ec2e8\"\ndata-chakra-component=\"CText\"\n>\nThe future can be even brighter but a goal without a plan is just a wish\n</p>\n-\n+ <div\n+ class=\"css-cet0rr\"\n+ data-chakra-component=\"CBox\"\n+ >\n<p\ndata-testid=\"stacked-p\"\n>\nI am a happy paragraph element\n</p>\n-\n+ </div>\n+ <div\n+ class=\"css-cet0rr\"\n+ data-chakra-component=\"CBox\"\n+ >\n<h3\ndata-testid=\"stacked-h3\"\n>\nI am a jolly heading element\n</h3>\n-\n+ </div>\n<p\nclass=\"css-18iq2bq\"\ndata-chakra-component=\"CText\"\n",
        "date": "26.09.2020 21:50:33",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "sim_msg": "refactor(breadcrumbs): implement Chakra's `Breadcrumb` component",
        "sim_diff": "diff --git a/src/components/Breadcrumbs.tsx b/src/components/Breadcrumbs.tsx import React from \"react\"\n-import { Box, UnorderedList, ListItem } from \"@chakra-ui/react\"\n+import {\n+ Box,\n+ UnorderedList,\n+ ListItem,\n+ Breadcrumb,\n+ BreadcrumbItem,\n+ BreadcrumbLink,\n+ BreadcrumbProps,\n+} from \"@chakra-ui/react\"\nimport { useIntl } from \"react-intl\"\nimport Link from \"./Link\"\n-import { isLang, supportedLanguages } from \"../utils/languages\"\n+import { isLang } from \"../utils/languages\"\nimport { isTranslationKey, translateMessageId } from \"../utils/translations\"\n-export interface IProps {\n+export interface IProps extends BreadcrumbProps {\nslug: string\nstartDepth?: number\n}\n@@ -43,56 +51,49 @@ const Breadcrumbs: React.FC<IProps> = ({\n: \"\"\nreturn {\n- fullPath: slugChunk.slice(0, idx + 2 + startDepth).join(\"/\") + \"/\",\n+ fullPath: slugChunk.slice(0, idx + 2 + startDepth).join(\"/\"),\ntext: text.toUpperCase(),\n}\n})\nreturn (\n- <Box\n- aria-label=\"Breadcrumb\"\n+ <Breadcrumb\ndir=\"auto\"\n+ sx={{\n+ // TODO: Move this to `listProps` upon upgrading `@chakra-ui/react`\n+ // to at least v2.4.2\n+ ol: {\n+ m: 0,\n+ lineHeight: 1,\n+ },\n+ }}\n{...restProps}\n- as=\"nav\"\n- marginBottom={8}\n- listStyleType=\"none\"\n- position=\"relative\"\n- zIndex={1}\n>\n- <UnorderedList\n- display=\"flex\"\n- flexWrap=\"wrap\"\n- listStyleType=\"none\"\n- margin={0}\n- >\n- {crumbs.map((crumb, idx) => (\n- <ListItem\n+ {crumbs.map((crumb, idx) => {\n+ const isCurrentPage = slug === crumb.fullPath\n+ return (\n+ <BreadcrumbItem\nkey={idx}\n- margin={0}\n- marginRight={2}\n+ isCurrentPage={isCurrentPage}\n+ color=\"textTableOfContents\"\nfontSize=\"sm\"\n- lineHeight=\"140%\"\nletterSpacing=\"wider\"\n+ lineHeight=\"140%\"\n+ m={0}\n>\n- <Link\n+ <BreadcrumbLink\n+ as={Link}\nto={crumb.fullPath}\n- isPartiallyActive={slug === crumb.fullPath}\n- textDecoration=\"none\"\n- color=\"textTableOfContents\"\n+ isPartiallyActive={isCurrentPage}\n_hover={{ color: \"primary\", textDecor: \"none\" }}\n_active={{ color: \"primary\" }}\n>\n{crumb.text}\n- </Link>\n- {idx < crumbs.length - 1 && (\n- <Box as=\"span\" marginLeft={2} color=\"textTableOfContents\">\n- /\n- </Box>\n- )}\n- </ListItem>\n- ))}\n- </UnorderedList>\n- </Box>\n+ </BreadcrumbLink>\n+ </BreadcrumbItem>\n+ )\n+ })}\n+ </Breadcrumb>\n)\n}\n",
        "chatgpt_rag": "style(CStack): update CSS classes in CStack component tests snapshots"
    },
    {
        "msg": "test: update error message for travis chrome",
        "diff": "diff --git a/test/examples/webpack.test.js b/test/examples/webpack.test.js @@ -68,8 +68,9 @@ describe('webpack app', function() {\n// This has become necessary because Travis switched their Chrome stable\n// version _down_ from 76 to 62, which handles this test case differently.\n+ // 2020-05-06: Travis Chrome 62 is now returning the original message.\nvar version = parseInt(window.navigator.userAgent.match(new RegExp('^.*HeadlessChrome/([0-9]*).*$'))[1]);\n- var message = version > 62 ? 'webpack test error' : 'Script error.';\n+ var message = version >= 62 ? 'webpack test error' : 'Script error.';\nexpect(body.data.body.trace.exception.message).to.eql(message);\n",
        "date": "06.05.2020 17:14:16",
        "repo": "rollbar/rollbar.js",
        "type": "test",
        "sim_msg": "test: skip webpack on older node versions and bump timeout",
        "sim_diff": "diff --git a/test/webpack.test.js b/test/webpack.test.js @@ -9,12 +9,13 @@ describe('webpack', function() {\nit('works for browser build', function(done) {\n// Below is the Webpack config Mongoose uses for testing\n// acquit:ignore:start\n- // Webpack doesn't work on Node.js 4.x or 5.x\n- if (!semver.satisfies(process.version, '>=6.0.0')) {\n+ // Webpack doesn't work on Node.js 4.x or 5.x, and very slow on\n+ // Travis with 6.x and 7.x.\n+ if (!semver.satisfies(process.version, '>=8.0.0')) {\nthis.skip();\n}\nconst webpack = require('webpack');\n- this.timeout(30000);\n+ this.timeout(45000);\n// acquit:ignore:end\nconst config = {\nentry: ['./test/files/sample.js'],\n",
        "chatgpt_rag": "test: update webpack test message based on Chrome version and Travis changes"
    },
    {
        "msg": "test(Dropdown): fix multiple search text assertion",
        "diff": "diff --git a/test/specs/modules/Dropdown/Dropdown-test.js b/test/specs/modules/Dropdown/Dropdown-test.js @@ -973,7 +973,7 @@ describe('Dropdown', () => {\n{ value: 0, text: 'foo' },\n{ value: 1, text: 'foe' },\n]\n- wrapperMount(<Dropdown options={searchOptions} selection />)\n+ wrapperMount(<Dropdown options={searchOptions} search selection />)\n// open and simulate search\nwrapper\n@@ -984,13 +984,10 @@ describe('Dropdown', () => {\ndomEvent.keyDown(document, { key: 'ArrowDown' })\ndomEvent.keyDown(document, { key: 'Enter' })\n- const item = wrapper\n- .find('.selected')\n-\n// text updated\nwrapper\n.find('div.text')\n- .should.contain.text(item.text())\n+ .should.contain.text('foe')\n})\nit('displays if value is 0', () => {\nconst text = faker.hacker.noun()\n",
        "date": "15.10.2017 22:49:20",
        "repo": "semantic-org/semantic-ui-react",
        "type": "test",
        "sim_msg": "refactor(doc): adjusting propTypes on Dropdown doc component",
        "sim_diff": "diff --git a/packages/doc/src/components/Dropdown/Dropdown.jsx b/packages/doc/src/components/Dropdown/Dropdown.jsx @@ -82,7 +82,7 @@ const Dropdown = ({ label, value, options, onSelect }) => {\n<Wrapper>\n<Selector onClick={() => toggleOptions()}>\n<Label>{label}</Label>\n- <span>{value}</span>\n+ <Label>{value}</Label>\n<ArrowDropdown open={isOpen} />\n</Selector>\n{isOpen && (\n@@ -100,14 +100,13 @@ const Dropdown = ({ label, value, options, onSelect }) => {\n};\nDropdown.propTypes = {\n+ label: PropTypes.string.isRequired,\nvalue: PropTypes.string.isRequired,\noptions: PropTypes.arrayOf(PropTypes.any).isRequired,\nonSelect: PropTypes.func,\n};\nDropdown.defaultProps = {\n- value: '',\n- options: [],\nonSelect: () => {},\n};\n",
        "chatgpt_rag": "test(modules): update Dropdown-test.js to include search functionality in Dropdown component"
    },
    {
        "msg": "test: fix rtc config url",
        "diff": "diff --git a/test/common.js b/test/common.js @@ -4,7 +4,7 @@ var thunky = require('thunky')\nexports.getConfig = thunky(function (cb) {\n// Includes TURN -- needed for tests to pass on Sauce Labs\n// https://github.com/feross/simple-peer/issues/41\n- get.concat('https://instant.io/rtcConfig', function (err, res, data) {\n+ get.concat('https://instant.io/_rtcConfig', function (err, res, data) {\nif (err) return cb(err)\ndata = data.toString()\ntry {\n",
        "date": "05.01.2017 01:17:17",
        "repo": "feross/simple-peer",
        "type": "test",
        "sim_msg": "chore(tooling): add debugging to karma config",
        "sim_diff": "diff --git a/karma-ng.conf.js b/karma-ng.conf.js @@ -97,7 +97,12 @@ module.exports = function(config) {\n'mocha'\n],\n- singleRun: !process.env.KARMA_DEBUG\n+ singleRun: !process.env.KARMA_DEBUG,\n+\n+ // video and screenshots add on the request of sauce labs support to help\n+ // diagnose test user creation timeouts\n+ recordVideo: true,\n+ recordScreenshots: true\n};\nif (process.env.COVERAGE && process.env.COVERAGE !== 'undefined') {\n",
        "chatgpt_rag": "fix(test): update rtcConfig URL in common test file"
    },
    {
        "msg": "test: add test for direct call to onerror",
        "diff": "diff --git a/test/browser.rollbar.test.js b/test/browser.rollbar.test.js @@ -595,6 +595,52 @@ describe('log', function() {\ndone();\n})\n});\n+\n+// Test direct call to onerror, as used in verification of browser js install.\n+describe('onerror', function() {\n+ before(function (done) {\n+ window.server = sinon.createFakeServer();\n+ done();\n+ });\n+\n+ after(function () {\n+ window.server.restore();\n+ });\n+\n+ function stubResponse(server) {\n+ server.respondWith('POST', 'api/1/item',\n+ [\n+ 200,\n+ { 'Content-Type': 'application/json' },\n+ '{\"err\": 0, \"result\":{ \"uuid\": \"d4c7acef55bf4c9ea95e4fe9428a8287\"}}'\n+ ]\n+ );\n+ }\n+\n+ it('should send message when calling onerror directly', function(done) {\n+ var server = window.server;\n+ stubResponse(server);\n+ server.requests.length = 0;\n+\n+ var options = {\n+ accessToken: 'POST_CLIENT_ITEM_TOKEN',\n+ captureUncaught: true\n+ };\n+ new Rollbar(options);\n+\n+ window.onerror(\"TestRollbarError: testing window.onerror\", window.location.href);\n+\n+ server.respond();\n+\n+ var body = JSON.parse(server.requests[0].requestBody);\n+\n+ expect(body.access_token).to.eql('POST_CLIENT_ITEM_TOKEN');\n+ expect(body.data.body.trace.exception.message).to.eql('testing window.onerror');\n+\n+ done();\n+ })\n+});\n+\ndescribe('captureEvent', function() {\nit('should handle missing/default type and level', function(done) {\nvar options = {};\n",
        "date": "31.07.2019 13:22:48",
        "repo": "rollbar/rollbar.js",
        "type": "test",
        "sim_msg": "chore: use generateSW correctly",
        "sim_diff": "diff --git a/docs/rollup.config.js b/docs/rollup.config.js const path = require('path');\nconst copy = require('rollup-plugin-copy');\n+const { generateSW } = require('rollup-plugin-workbox');\nconst { createMpaConfig } = require('./_building-rollup/createMpaConfig.js');\nmodule.exports = async () => {\n@@ -13,7 +14,12 @@ module.exports = async () => {\ndevelopmentMode: false, // process.env.ROLLUP_WATCH === 'true',\ninjectServiceWorker: false,\n- workbox: {\n+ workbox: false,\n+ });\n+\n+ const dest = '_site/';\n+ mpaConfig.plugins.push(\n+ generateSW({\nglobIgnores: ['polyfills/*.js', 'legacy-*.js', 'nomodule-*.js'],\nswDest: path.join(process.cwd(), '_site', 'service-worker.js'),\nglobDirectory: path.join(process.cwd(), '_site'),\n@@ -26,10 +32,9 @@ module.exports = async () => {\nhandler: 'CacheFirst',\n},\n],\n- },\n- });\n+ }),\n+ );\n- const dest = '_site/';\nmpaConfig.plugins.push(\ncopy({\ntargets: [\n",
        "chatgpt_rag": "test: add test for direct call to onerror in Rollbar"
    },
    {
        "msg": "test: set unit test concurrency to 1",
        "diff": "diff --git a/package.json b/package.json \"examples\": \"cd packages/examples && npm run serve\",\n\"build:test\": \"lerna run build:test\",\n\"build:coverage\": \"COVERAGE=1 npm run build:test\",\n- \"test:unit\": \"lerna run test --ignore @candela/examples\",\n+ \"test:unit\": \"lerna run test --ignore @candela/examples --concurrency 1\",\n\"test:image\": \"cd packages/examples && npm test\",\n\"test:coverage\": \"COVERAGE=1 npm run test:unit\",\n\"coverage:report\": \"http-server build/coverage/html -p ${PORT-3000}\",\n",
        "date": "20.06.2018 16:43:31",
        "repo": "kitware/candela",
        "type": "test",
        "sim_msg": "build: Fix lerna exec ignore",
        "sim_diff": "diff --git a/package.json b/package.json \"lerna\": \"lerna\",\n\"lint\": \"npm run lerna run lint\",\n\"prepublishOnly\": \"npm run lint && npm run test && npm run build\",\n- \"publish\": \"lerna exec 'npm publish' --ignore web-compare\",\n+ \"publish\": \"lerna exec 'npm publish' --ignore @bundle-stats/web-compare\",\n\"test\": \"npm run lerna run test\"\n},\n\"repository\": {\n",
        "chatgpt_rag": "test:unit: Update lerna run command with concurrency option"
    },
    {
        "msg": "test: add tests specifically for isLuhnValid",
        "diff": "diff --git a/test/validators.js b/test/validators.js @@ -4931,6 +4931,34 @@ describe('Validators', () => {\n});\n});\n+ it('should validate luhn numbers', () => {\n+ test({\n+ validator: 'isLuhnValid',\n+ valid: [\n+ '0',\n+ '5421',\n+ '01234567897',\n+ '0123456789012345678906',\n+ '0123456789012345678901234567891',\n+ '123456789012345678906',\n+ '375556917985515',\n+ '36050234196908',\n+ '4716461583322103',\n+ '4716-2210-5188-5662',\n+ '4929 7226 5379 7141',\n+ ],\n+ invalid: [\n+ '',\n+ '1',\n+ '5422',\n+ 'foo',\n+ 'prefix6234917882863855',\n+ '623491788middle2863855',\n+ '6234917882863855suffix',\n+ ],\n+ });\n+ });\n+\nit('should validate credit cards', () => {\ntest({\nvalidator: 'isCreditCard',\n",
        "date": "23.05.2022 16:12:38",
        "repo": "validatorjs/validator.js",
        "type": "test",
        "sim_msg": "test: adds JsonSchema test case for \"validateBody\"",
        "sim_diff": "diff --git a/lib/api/test/unit/units/validateBody.test.js b/lib/api/test/unit/units/validateBody.test.js @@ -277,8 +277,74 @@ describe('validateBody', () => {\n});\n});\n- describe.skip('application/schema+json', () => {\n- // ...\n+ describe('application/schema+json', () => {\n+ describe('with matching bodies', () => {\n+ const res = validateBody(\n+ { body: '{ \"foo\": \"bar\" }' },\n+ {\n+ bodySchema: {\n+ required: ['foo']\n+ }\n+ }\n+ );\n+\n+ it('has \"JsonSchema\" validator', () => {\n+ assert.propertyVal(res, 'validator', 'JsonSchema');\n+ });\n+\n+ it('has \"application/json\" real type', () => {\n+ assert.propertyVal(res, 'realType', 'application/json');\n+ });\n+\n+ it('has \"application/schema+json\" expected type', () => {\n+ assert.propertyVal(res, 'expectedType', 'application/schema+json');\n+ });\n+\n+ it('has no errors', () => {\n+ assert.lengthOf(res.results, 0);\n+ });\n+ });\n+\n+ describe('with non-matching bodies', () => {\n+ const res = validateBody(\n+ { body: '{ \"oneTwoThree\": \"bar\" }' },\n+ {\n+ bodySchema: {\n+ required: ['doe']\n+ }\n+ }\n+ );\n+\n+ it('has \"JsonSchema\" validator', () => {\n+ assert.propertyVal(res, 'validator', 'JsonSchema');\n+ });\n+\n+ it('has \"application/json\" real type', () => {\n+ assert.propertyVal(res, 'realType', 'application/json');\n+ });\n+\n+ it('has \"application/schema+json\" expected type', () => {\n+ assert.propertyVal(res, 'expectedType', 'application/schema+json');\n+ });\n+\n+ describe('produces an error', () => {\n+ it('exactly one error', () => {\n+ assert.lengthOf(res.results, 1);\n+ });\n+\n+ it('has \"error\" severity', () => {\n+ assert.propertyVal(res.results[0], 'severity', 'error');\n+ });\n+\n+ it('has explanatory message', () => {\n+ assert.propertyVal(\n+ res.results[0],\n+ 'message',\n+ `At '/doe' Missing required property: doe`\n+ );\n+ });\n+ });\n+ });\n});\n});\n});\n",
        "chatgpt_rag": "test: adds luhn numbers validation test case in validators.js"
    },
    {
        "msg": "test(icon-button): refactor use screen",
        "diff": "diff --git a/packages/chakra-ui-core/src/CIconButton/tests/CIconButton.test.js b/packages/chakra-ui-core/src/CIconButton/tests/CIconButton.test.js import CIconButton from '..'\n-import { render } from '@/tests/test-utils'\n+import { render, screen } from '@/tests/test-utils'\nconst renderComponent = (props) => {\nconst inlineAttrs = (props && props.inlineAttrs) || ''\n@@ -19,15 +19,15 @@ it('should render correctly', () => {\nit('should display spinner and hide the icon', () => {\nconst inlineAttrs = 'isLoading'\n- const { container, getByTestId } = renderComponent({ inlineAttrs })\n+ const { container } = renderComponent({ inlineAttrs })\n- const button = getByTestId('btn')\n+ const button = screen.getByTestId('btn')\nexpect(button).toHaveAttribute('disabled')\nexpect(button).toHaveAttribute('aria-disabled', 'true')\n// TODO: find a way to easily grab the spinner element\n- // Maybe? expect(getByTestId('Spinner')).toBeInTheDocument()\n+ // Maybe? expect(screen.getByTestId('Spinner')).toBeInTheDocument()\nexpect(button).toHaveStyle('opacity: 0.4')\nexpect(container.querySelector('button > div')).toBeInTheDocument()\n})\n",
        "date": "07.07.2020 00:59:33",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "sim_msg": "test(Loading): rewrite to testing library",
        "sim_diff": "diff --git a/packages/orbit-components/src/Loading/__tests__/index.test.js b/packages/orbit-components/src/Loading/__tests__/index.test.js // @flow\nimport * as React from \"react\";\n-import { shallow } from \"enzyme\";\n+import { render, screen } from \"@testing-library/react\";\nimport Loading from \"../index\";\nimport TYPE_OPTIONS from \"../consts\";\ndescribe(\"Loading\", () => {\n+ const { BOX_LOADER, SEARCH_LOADER, INLINE_LOADER } = TYPE_OPTIONS;\n+ it(\"should have expected DOM output\", () => {\n+ const text = \"Test test\";\nconst dataTest = \"test\";\n- it(\"should render type\", () => {\n- const type = TYPE_OPTIONS.BOX_LOADER;\n- const component = shallow(<Loading type={type} />);\n- const loader = component.find(\"Loading__StyledLoader\");\n- expect(component.find(\"Loading__StyledLoader\").childAt(0).parent()).toEqual(loader);\n+ render(<Loading type={BOX_LOADER} text={text} dataTest={dataTest} />);\n+ expect(screen.getByTestId(dataTest)).toBeInTheDocument();\n+ expect(screen.getByText(text)).toBeInTheDocument();\n});\n- it(\"should render type with text\", () => {\n- const text = \"Test test\";\n- const type = TYPE_OPTIONS.BOX_LOADER;\n- const component = shallow(<Loading type={type} text={text} />);\n- const loader = component.find(\"Loading__StyledLoader\");\n- const loadingText = component.find(\"Loading__StyledLoadingText\").render();\n- expect(component.find(\"Loading__StyledLoader\").childAt(0).parent()).toEqual(loader);\n- expect(loadingText.text()).toBe(text);\n+ it(\"should have children\", () => {\n+ render(<Loading>kek</Loading>);\n+ expect(screen.getByText(\"kek\")).toBeInTheDocument();\n});\n- it(\"should have data-test\", () => {\n- const component = shallow(<Loading dataTest={dataTest} />);\n- expect(component.render().prop(\"data-test\")).toBe(dataTest);\n+ it.each(Object.values({ BOX_LOADER, SEARCH_LOADER, INLINE_LOADER }))(\n+ \"should have circled icons %s\",\n+ type => {\n+ render(<Loading type={type} dataTest=\"kek\" />);\n+ expect(screen.getByTestId(\"kek\").firstChild).toHaveStyle({\n+ display: \"flex\",\n+ justifyContent: \"center\",\n});\n+ },\n+ );\n- it(\"should render text\", () => {\n- const text = \"Test test\";\n- const component = shallow(<Loading text={text} />);\n- const loadingText = component.find(\"Loading__StyledLoadingText\").render();\n- expect(loadingText.text()).toBe(text);\n+ it(\"should have spinner icon\", () => {\n+ render(<Loading dataTest=\"kek\" type={TYPE_OPTIONS.PAGE_LOADER} />);\n+ expect(screen.getByTestId(\"kek\").firstChild).toHaveStyle({ width: \"40px\", height: \"40px\" });\n+ expect(screen.getByTestId(\"kek\").querySelector(\"svg\")).toBeInTheDocument();\n});\n});\n",
        "chatgpt_rag": "test(CIconButton): update test to use screen from testing library"
    },
    {
        "msg": "test(accordion): add shift+tab tests for accordion",
        "diff": "diff --git a/packages/chakra-ui-core/src/CAccordion/tests/CAccordion.test.js b/packages/chakra-ui-core/src/CAccordion/tests/CAccordion.test.js @@ -144,7 +144,6 @@ it('has the proper aria attributes', () => {\nexpect(panel).toHaveAttribute('aria-labelledby')\n})\n-// test that tab moves focus to the next focusable element\nit('tab moves focus to the next focusable element', async () => {\nrenderComponent({\ntemplate: `\n@@ -178,7 +177,43 @@ it('tab moves focus to the next focusable element', async () => {\nexpect(last).toHaveFocus()\n})\n-// test that aria-contols for button is same as id for panel\n+\n+it('shift+tab moves focus to the previous focusable element', async () => {\n+ renderComponent({\n+ template: `\n+ <CAccordion>\n+ <CAccordionItem>\n+ <CAccordionHeader>First section</CAccordionHeader>\n+ <CAccordionPanel>Panel 1</CAccordionPanel>\n+ </CAccordionItem>\n+ <CAccordionItem>\n+ <CAccordionHeader>Second section</CAccordionHeader>\n+ <CAccordionPanel>Panel 2</CAccordionPanel>\n+ </CAccordionItem>\n+ <CAccordionItem>\n+ <CAccordionHeader>Last section</CAccordionHeader>\n+ <CAccordionPanel>Panel 3</CAccordionPanel>\n+ </CAccordionItem>\n+ </CAccordion>`\n+ })\n+\n+ const first = screen.getByText('First section')\n+ const second = screen.getByText('Second section')\n+ const last = screen.getByText('Last section')\n+\n+ await userEvent.tab()\n+ expect(first).toHaveFocus()\n+\n+ await userEvent.tab()\n+ expect(second).toHaveFocus()\n+\n+ await userEvent.tab()\n+ expect(last).toHaveFocus()\n+\n+ await userEvent.tab({shift: true}) // shift+tab\n+ expect(second).toHaveFocus()\n+})\n+\nit('aria-contols for button is same as id for panel', () => {\nrenderComponent({\ntemplate: `\n@@ -195,7 +230,6 @@ it('aria-contols for button is same as id for panel', () => {\nexpect(button.getAttribute('aria-controls')).toEqual(panel.getAttribute('id'))\n})\n-// test that aria-expanded is true/false when accordion is open/closed\nit('aria-expanded is true/false when accordion is open/closed', () => {\nrenderComponent({\ntemplate: `\n@@ -215,7 +249,6 @@ it('aria-expanded is true/false when accordion is open/closed', () => {\nexpect(button).toHaveAttribute('aria-expanded', 'true')\n})\n-// test that panel has role=region and aria-labelledby\nit('panel has role=region and aria-labelledby', () => {\nrenderComponent({\ntemplate: `\n@@ -231,29 +264,3 @@ it('panel has role=region and aria-labelledby', () => {\nexpect(panel).toHaveAttribute('aria-labelledby')\nexpect(panel).toHaveAttribute('role', 'region')\n})\n\\ No newline at end of file\n-\n-// eslint-disable-next-line no-undef\n-xit('arrow up & down moves focus to next/previous accordion', async () => {\n- renderComponent({\n- template: `\n- <CAccordion>\n- <CAccordionItem>\n- <CAccordionHeader>Section 1 title</CAccordionHeader>\n- <CAccordionPanel>Panel 1</CAccordionPanel>\n- </CAccordionItem>\n- <CAccordionItem>\n- <CAccordionHeader>Section 2 title</CAccordionHeader>\n- <CAccordionPanel>Panel 2</CAccordionPanel>\n- </CAccordionItem>\n- </CAccordion>`\n- })\n-\n- const first = screen.getByText('Section 1 title')\n- const second = screen.getByText('Section 2 title')\n-\n- await fireEvent.keyDown(first, { key: 'ArrowDown', keyCode: 40 })\n- expect(second).toHaveFocus()\n-\n- await fireEvent.keyDown(second, { key: 'ArrowUp', keyCode: 38 })\n- expect(first).toHaveFocus()\n-})\n",
        "date": "04.07.2020 15:53:35",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "sim_msg": "perf(ffe-accordion-react): dont render collapsed content when closed",
        "sim_diff": "diff --git a/packages/ffe-accordion-react/src/AccordionItem.js b/packages/ffe-accordion-react/src/AccordionItem.js @@ -43,6 +43,8 @@ const AccordionItem = ({\n...rest\n} = accordionProps;\n+ const collapseHidden = !isExpanded && !isAnimating;\n+\nreturn (\n<div\nclassName={classNames(className, 'ffe-accordion-item', {\n@@ -78,10 +80,12 @@ const AccordionItem = ({\nonRest={() => setIsAnimating(false)}\nid={contentId.current}\naria-labelledby={buttonId.current}\n- hidden={!isExpanded && !isAnimating}\n+ hidden={collapseHidden}\nrole=\"region\"\n>\n+ {!collapseHidden && (\n<div className=\"ffe-accordion-body\">{children}</div>\n+ )}\n</Collapse>\n</div>\n);\n",
        "chatgpt_rag": "test(chakra-ui-core): add test for shift+tab moving focus to previous focusable element"
    },
    {
        "msg": "test: Fixing test case",
        "diff": "diff --git a/packages/wmr/test/fixtures/prerender-data/index.js b/packages/wmr/test/fixtures/prerender-data/index.js export function prerender() {\n- return { html: '<h1>it works</h1>', links: ['/'], data: { hello: 'world' } };\n+ return { html: '<h1>it works</h1><script type=\"isodata\"></script>', links: ['/'], data: { hello: 'world' } };\n}\n",
        "date": "15.11.2021 10:04:51",
        "repo": "preactjs/wmr",
        "type": "test",
        "sim_msg": "fix(pages): Use t.first instead of t",
        "sim_diff": "diff --git a/pages/trial.js b/pages/trial.js @@ -18,11 +18,11 @@ const Page = ({ router, t }) => {\n`trial/meta/${campaign}/pageTitle`,\n'trial/meta/pageTitle'\n]),\n- title: t([\n+ title: t.first([\n`trial/meta/${campaign}/title`,\n'trial/meta/title'\n]),\n- description: t([\n+ description: t.first([\n`trial/meta/${campaign}/description`,\n'trial/meta/description'\n]),\n",
        "chatgpt_rag": "fix(prerender): Add script tag to prerendered HTML output"
    },
    {
        "msg": "test: fix typo in before_install",
        "diff": "diff --git a/.travis.yml b/.travis.yml @@ -9,8 +9,7 @@ node_js:\n- '8'\n- '6'\nbefore_install:\n- - if [ \"$TRAVIS_BRANCH\" = \"master\" ]; then\n- echo \"//registry.npmjs.org/:_authToken=\\${NPM_TOKEN}\" > .npmrc; fi\n+ - if [ \"$TRAVIS_BRANCH\" == \"master\" ]; then echo \"//registry.npmjs.org/:_authToken=\\${NPM_TOKEN}\" > .npmrc; fi\nafter_success:\n- npm run semantic-release\nbranches:\n",
        "date": "06.12.2017 19:13:06",
        "repo": "remy/nodemon",
        "type": "test",
        "sim_msg": "chore(monorepo): fix how travis creates npm login",
        "sim_diff": "diff --git a/.travis.yml b/.travis.yml @@ -30,7 +30,7 @@ after_success:\nnpm run coverage:upload;\nfi\nif [[ $TRAVIS_BRANCH == 'master' || $TRAVIS_BRANCH == 'next' ]] && [[ $TRAVIS_PULL_REQUEST == 'false' ]]; then\n- echo \"//registry.npmjs.org/:_authToken=\\${NPM_TOKEN}\" > .npmrc\n+ printf \"//registry.npmjs.org/:_authToken=$NPM_TOKEN\\n\" > ~/.npmrc\nnpm run release -- --publish\nfi\nbranches:\n",
        "chatgpt_rag": "chore(travis): update npm login logic in travis configuration"
    },
    {
        "msg": "test(badge): remove unnecessary mock",
        "diff": "diff --git a/packages/chakra-ui-core/src/CBadge/tests/CBadge.test.js b/packages/chakra-ui-core/src/CBadge/tests/CBadge.test.js import { CBadge, CStack } from '../..'\nimport { render } from '@/tests/test-utils'\n-// mocks\n-jest.mock('breadstick/dist/components/Alert/styles.css', () => ({})) // jest tries to import styles and fails...\n-\nconst renderComponent = (props) => {\nconst base = {\ncomponents: { CBadge, CStack },\n",
        "date": "19.04.2020 20:19:01",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "sim_msg": "test(Root): add MoleculeBreadcrum tests",
        "sim_diff": "diff --git a/test/molecule/breadcrumb/index.js b/test/molecule/breadcrumb/index.js * */\n/* eslint react/jsx-no-undef:0 */\n+/* eslint no-undef:0 */\n-// import React from 'react'\n-// import {render} from '@testing-library/react'\n+import React from 'react'\n+import ReactDOM from 'react-dom'\nimport chai, {expect} from 'chai'\nimport chaiDOM from 'chai-dom'\n+import {render} from '@testing-library/react'\n+import BreadcrumbBasic from '../../../components/molecule/breadcrumb/src'\nchai.use(chaiDOM)\n+const setupBuilder = Component => props => {\n+ const container = document.createElement('div')\n+ container.setAttribute('id', 'test-container')\n+ const utils = render(<Component {...props} />, {\n+ container: document.body.appendChild(container)\n+ })\n+ return utils\n+}\n+\ndescribe('molecule/breadcrumb', () => {\n- it.skip('Render', () => {\n+ const Component = BreadcrumbBasic\n+ const setup = setupBuilder(Component)\n+\n+ it('should render without crashing', () => {\n+ // Given\n+ const props = {\n+ items: [\n+ {\n+ label: 'item 0'\n+ },\n+ {\n+ label: 'item 1'\n+ }\n+ ]\n+ }\n+\n+ // When\n+ const component = <Component {...props} />\n+\n+ // Then\n+ const div = document.createElement('div')\n+ ReactDOM.render(component, div)\n+ ReactDOM.unmountComponentAtNode(div)\n+ })\n+\n+ it('should NOT render null', () => {\n+ // Given\n+ const props = {\n+ items: [\n+ {\n+ label: 'item 0'\n+ },\n+ {\n+ label: 'item 1'\n+ }\n+ ]\n+ }\n+\n+ // When\n+ const {container} = setup(props)\n+\n+ // Then\n+ expect(container.innerHTML).to.be.a('string')\n+ expect(container.innerHTML).to.not.have.lengthOf(0)\n+ })\n+\n+ it.skip('example', () => {\n// Example TO BE DELETED!!!!\n- // const {getByRole} = render(<AtomButton>HOLA</AtomButton>)\n+\n+ // Given\n+ // const props = {}\n+\n+ // When\n+ // const {getByRole} = setup(props)\n+\n+ // Then\n// expect(getByRole('button')).to.have.text('HOLA')\nexpect(true).to.be.eql(false)\n})\n",
        "chatgpt_rag": "test(CBadge): render CBadge component with CStack in CBadge.test.js"
    },
    {
        "msg": "test: add a couple more regex tests for ignoredMessages",
        "diff": "diff --git a/test/predicates.test.js b/test/predicates.test.js @@ -378,6 +378,19 @@ describe('messageIsIgnored', function() {\nexpect(p.messageIsIgnored(logger)(item, settings)).to.not.be.ok();\n});\nit('false if ignoredMessages regex match', function() {\n+ var item = {\n+ level: 'critical',\n+ body: {\n+ message: {body: 'This is an ignored message'}\n+ }\n+ };\n+ var settings = {\n+ reportLevel: 'debug',\n+ ignoredMessages: ['^This is an .{7} message$']\n+ };\n+ expect(p.messageIsIgnored(logger)(item, settings)).to.not.be.ok();\n+ });\n+ it('false if ignoredMessages literal match', function() {\nvar item = {\nlevel: 'critical',\nbody: {\n@@ -390,6 +403,19 @@ describe('messageIsIgnored', function() {\n};\nexpect(p.messageIsIgnored(logger)(item, settings)).to.not.be.ok();\n});\n+ it('false if ignoredMessages more literal regex matches', function() {\n+ var item = {\n+ level: 'critical',\n+ body: {\n+ message: {body: 'Match these characters: (*+?)'}\n+ }\n+ };\n+ var settings = {\n+ reportLevel: 'debug',\n+ ignoredMessages: ['\\\\(\\\\*\\\\+\\\\?\\\\)']\n+ };\n+ expect(p.messageIsIgnored(logger)(item, settings)).to.not.be.ok();\n+ });\nit('true if both trace and body message but ignoredMessages only match body', function() {\nvar item = {\nlevel: 'critical',\n",
        "date": "28.02.2020 13:28:32",
        "repo": "rollbar/rollbar.js",
        "type": "test",
        "sim_msg": "test(log): cover log method with tests",
        "sim_diff": "diff --git a/src/components/log/log.test.js b/src/components/log/log.test.js @@ -56,4 +56,37 @@ describe('Log', () => {\nexpect(logger.level).toEqual(Log.LEVEL_INFO)\n})\n+\n+ describe('prints log', function() {\n+ test('indicating level and class with the message', () => {\n+ const logger = new Log()\n+ logger.log('class test', Log.LEVEL_ERROR, 'test message.')\n+\n+ expect(console.log).toHaveBeenCalledWith('%c[error][class test]', 'color: #ff0000;font-weight: bold; font-size: 13px;', 'test message.')\n+ })\n+\n+ test('without the class attribute', () => {\n+ const logger = new Log()\n+ logger.log('test message.', Log.LEVEL_ERROR, '')\n+\n+ expect(console.log).toHaveBeenCalledWith('%c[error]', 'color: #ff0000;font-weight: bold; font-size: 13px;', 'test message.')\n+ })\n+\n+ })\n+\n+ describe('don\\'t print log', function() {\n+ test('without the level attribute', () => {\n+ const logger = new Log()\n+ logger.log('test message.', '', '')\n+\n+ expect(console.log).not.toHaveBeenCalled()\n+ })\n+\n+ test('if the message is registered on the block list', () => {\n+ const logger = new Log()\n+ logger.log('class test', Log.LEVEL_ERROR, ['timeupdate'])\n+\n+ expect(console.log).not.toHaveBeenCalled()\n+ })\n+ })\n})\n",
        "chatgpt_rag": "test(predicates): cover messageIsIgnored method with additional tests"
    },
    {
        "msg": "test(edtiable): remove breadstick mock",
        "diff": "diff --git a/packages/chakra-ui-core/src/CEditable/tests/CEditable.test.js b/packages/chakra-ui-core/src/CEditable/tests/CEditable.test.js @@ -3,7 +3,6 @@ import { render, defaultProviders, userEvent, fireEvent } from '@/tests/test-uti\nimport { useId } from '../../utils'\n// mocks\n-jest.mock('@/packages/chakra-ui-core/src/CToast/index.js', () => {})\njest.mock('@/packages/chakra-ui-core/src/utils/generators.js')\nconst renderComponent = (props) => {\n",
        "date": "19.04.2020 21:00:22",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "sim_msg": "test(components/molecule/textareaField): refactor",
        "sim_diff": "diff --git a/components/molecule/textareaField/test/index.test.js b/components/molecule/textareaField/test/index.test.js @@ -11,12 +11,35 @@ import chai, {expect} from 'chai'\nimport chaiDOM from 'chai-dom'\nimport {fireEvent} from '@testing-library/react'\n+import * as pkg from '../src/index.js'\n+\n+import json from '../package.json'\n+\nchai.use(chaiDOM)\n-describe('molecule/textareaField', () => {\n- const Component = MoleculeTextareaField\n+describe(json.name, () => {\n+ const {default: Component} = pkg\nconst setup = setupEnvironment(Component)\n+ it('library should include defined exported elements', () => {\n+ // Given\n+ const library = pkg\n+ const libraryExportedMembers = ['MoleculeTextareaSizes', 'default']\n+\n+ // When\n+ const {\n+ MoleculeTextareaSizes,\n+ default: MoleculeTextAreaField,\n+ ...others\n+ } = library\n+\n+ // Then\n+ expect(Object.keys(library).length).to.equal(libraryExportedMembers.length)\n+ expect(Object.keys(library)).to.have.members(libraryExportedMembers)\n+ expect(Object.keys(others).length).to.equal(0)\n+ })\n+\n+ describe(Component.displayName, () => {\nit('should render without crashing', () => {\n// Given\nconst props = {}\n@@ -47,7 +70,8 @@ describe('molecule/textareaField', () => {\nconst props = {\nclassName: 'extended-classNames'\n}\n- const findSentence = str => string => string.match(new RegExp(`S*${str}S*`))\n+ const findSentence = str => string =>\n+ string.match(new RegExp(`S*${str}S*`))\n// When\nconst {container} = setup(props)\n@@ -111,3 +135,38 @@ describe('molecule/textareaField', () => {\ngetByText(defaultHelpTextComputed)\n})\n})\n+\n+ describe('MoleculeTextareaSizes', () => {\n+ it('value must be an object enum', () => {\n+ // Given\n+ const library = pkg\n+\n+ // When\n+ const {MoleculeTextareaSizes: actual} = library\n+\n+ // Then\n+ expect(actual).to.be.an('object')\n+ })\n+\n+ it('value must be a defined string-key pair filled', () => {\n+ // Given\n+ const library = pkg\n+ const expected = {\n+ SHORT: 'short',\n+ LONG: 'long'\n+ }\n+\n+ // When\n+ const {MoleculeTextareaSizes: actual} = library\n+ const {SHORT, LONG, ...others} = actual\n+\n+ // Then\n+ expect(Object.keys(others).length).to.equal(0)\n+ expect(Object.keys(actual)).to.have.members(Object.keys(expected))\n+ Object.entries(expected).forEach(([expectedKey, expectedValue]) => {\n+ expect(Object.keys(actual).includes(expectedKey)).to.be.true\n+ expect(actual[expectedKey]).to.equal(expectedValue)\n+ })\n+ })\n+ })\n+})\n",
        "chatgpt_rag": "test(chakra-ui-core): remove mock for CToast and update renderComponent function"
    },
    {
        "msg": "test: use a more standard format for webpack config",
        "diff": "diff --git a/tests/webpack.config.js b/tests/webpack.config.js -// var webpack = require('webpack');\nvar candelaWebpack = require('../webpack');\n-var config = {};\n-\n-config.entry = {\n- 'tests': './tests.js'\n-};\n-\n-config.devtool = 'inline-source-map';\n-\n-config.node = {\n+module.exports = candelaWebpack({\n+ entry: {\n+ tests: './tests.js'\n+ },\n+ devtool: 'inline-source-map',\n+ node: {\nfs: 'empty'\n-};\n-\n-config.output = {\n+ },\n+ output: {\npath: 'build',\nfilename: 'tests.js'\n-};\n-config.module = {\n+ },\n+ module: {\nloaders: [\n{\ntest: /\\.css/,\n@@ -25,9 +20,5 @@ config.module = {\ninclude: /node_modules\\/nvd3/,\n},\n]\n-};\n-delete config.plugins;\n-\n-var final = candelaWebpack(config);\n-\n-module.exports = final;\n+ }\n+});\n",
        "date": "05.06.2017 14:57:01",
        "repo": "kitware/candela",
        "type": "test",
        "sim_msg": "build: Pack with style-loader",
        "sim_diff": "diff --git a/build/webpack/config.js b/build/webpack/config.js @@ -54,6 +54,11 @@ module.exports = {\n},\n{\ntest: /\\.css/,\n+ use: [\n+ {\n+ loader: 'style-loader',\n+ },\n+ {\nloader: 'css-loader',\noptions: {\nmodules: true,\n@@ -61,6 +66,8 @@ module.exports = {\n},\n],\n},\n+ ],\n+ },\ndevtool: 'source-map',\nplugins: [\nnew StatsPlugin('../artifacts/webpack-stats.json', {\n",
        "chatgpt_rag": "build: Update webpack config for tests entry and module loaders"
    },
    {
        "msg": "test(stat): remove provider",
        "diff": "diff --git a/packages/chakra-ui-core/src/CStat/tests/CStat.test.js b/packages/chakra-ui-core/src/CStat/tests/CStat.test.js import { CStat, CStatLabel, CStatNumber, CStatHelperText, CStatArrow } from '..'\n-import { render, defaultProviders } from '@/tests/test-utils'\n-import icons from '../../lib/internal-icons.js'\n+import { render } from '@/tests/test-utils'\nconst renderComponent = (props) => {\nconst base = {\ncomponents: { CStat, CStatLabel, CStatNumber, CStatHelperText, CStatArrow },\n- provide: () => defaultProviders({ $chakraIcons: { 'triangle-up': icons['triangle-up'], 'triangle-down': icons['triangle-down'] } }),\ntemplate: `\n<CStat>\n<CStatLabel>Collected Fees</CStatLabel>\n",
        "date": "19.04.2020 23:59:17",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "sim_msg": "feat(cmp/modal): use a consent key to use correctly uncontrolled components",
        "sim_diff": "diff --git a/components/cmp/modal/src/CmpModal/index.js b/components/cmp/modal/src/CmpModal/index.js @@ -4,6 +4,7 @@ import PropTypes from 'prop-types'\nimport {CmpModal} from './component'\nexport class CmpModalContainer extends Component {\nstate = {\n+ consentKey: 0,\nfetchingData: true,\npurposeConsents: {},\npurposes: [],\n@@ -44,7 +45,7 @@ export class CmpModalContainer extends Component {\nacc[consentId] = enabled\nreturn acc\n}, {})\n- return {[key]: consents}\n+ return {[key]: consents, consentKey: state.consentKey + 1}\n})\n}\n@@ -57,6 +58,7 @@ export class CmpModalContainer extends Component {\nrender() {\nconst {lang, logo} = this.props\nconst {\n+ consentKey,\nfetchingData,\npurposes,\npurposeConsents,\n@@ -68,6 +70,7 @@ export class CmpModalContainer extends Component {\nreturn (\n<CmpModal\n+ consentKey={consentKey}\nlang={lang}\nlogo={logo}\nonAccept={this._handleAccept}\n",
        "chatgpt_rag": "refactor(chakra-ui-core): remove unnecessary import and update renderComponent function in CStat.test.js"
    },
    {
        "msg": "test: disable flaky node tests",
        "diff": "diff --git a/package.json b/package.json \"build\": \"browserify -s SimplePeer -r . | minify > simplepeer.min.js\",\n\"size\": \"npm run build && cat simplepeer.min.js | gzip | wc -c\",\n\"// test\": \"standard && npm run test-node && npm run test-browser\",\n- \"test\": \"standard && npm run test-node\",\n+ \"test\": \"standard && npm run test-browser\",\n\"test-browser\": \"airtap --coverage -- test/*.js\",\n\"test-browser-local\": \"airtap --coverage --local -- test/*.js\",\n\"test-node\": \"WRTC=wrtc tape test/*.js\",\n",
        "date": "21.04.2021 17:14:19",
        "repo": "feross/simple-peer",
        "type": "test",
        "sim_msg": "build(release): adds standard version",
        "sim_diff": "diff --git a/package.json b/package.json \"lint:fix\": \"eslint \\\"src/**/*.{js,jsx,ts,tsx}\\\" \\\"test/**/*.{js,jsx,ts,tsx}\\\" --fix\",\n\"test\": \"cross-env TS_NODE_PROJECT=./test/tsconfig.json tap test/**/*.ts\",\n\"test:ci\": \"cross-env TS_NODE_PROJECT=./test/tsconfig.json tap --coverage-report=text-lcov test/**/*.ts | coveralls\",\n+ \"release\": \"standard-version\",\n\"lint-staged\": \"lint-staged\",\n\"commitlint\": \"commitlint\"\n},\n",
        "chatgpt_rag": "build(test): updates test script to run in browser as well"
    },
    {
        "msg": "test(controls.test.js): add position testing to contro",
        "diff": "diff --git a/src/domain/controls.test.js b/src/domain/controls.test.js @@ -27,6 +27,7 @@ describe(\"Controls reducer\", () => {\n'start': 't0',\n'end': 'tn',\n'showBusy': true,\n+ 'position': [0,0]\n}\nconst action = setControls(controls);\n@@ -70,6 +71,7 @@ describe(\"Controls reducer\", () => {\n'start': null,\n'end': null,\n'showBusy': false,\n+ 'position': [0,0]\n});\ndone();\n",
        "date": "25.06.2019 10:51:23",
        "repo": "iqtlabs/crviz",
        "type": "test",
        "sim_msg": "fix(renderer): Load and remove lowdefy.imports.",
        "sim_diff": "diff --git a/packages/renderer/src/Renderer.js b/packages/renderer/src/Renderer.js @@ -31,19 +31,22 @@ import parseJwt from './utils/auth/parseJwt';\nconst lowdefy = {\ncontexts: {},\n- customActions: window.lowdefy.customActions,\ndisplayMessage: () => () => undefined,\ndocument,\n+ imports: {\n+ jsActions: window.lowdefy.imports.jsActions,\n+ jsOperators: window.lowdefy.imports.jsOperators,\n+ },\ninputs: {},\n- jsOperators: window.lowdefy.jsOperators,\nlink: () => {},\nlocalStorage,\n- registerCustomAction: window.lowdefy.registerCustomAction,\n+ registerJsAction: window.lowdefy.registerJsAction,\nregisterJsOperator: window.lowdefy.registerJsOperator,\nupdaters: {},\nwindow,\n};\n+delete window.lowdefy.imports;\nif (window.location.origin.includes('http://localhost')) {\nwindow.lowdefy = lowdefy;\n}\n",
        "chatgpt_rag": "feat(controls): Add position property to controls reducer."
    },
    {
        "msg": "test(PopperContent): remove debug statement",
        "diff": "diff --git a/src/__tests__/PopperContent.spec.js b/src/__tests__/PopperContent.spec.js @@ -117,8 +117,6 @@ describe('PopperContent', () => {\nit('should have x-placement of auto by default', () => {\nconst wrapper = mount(<PopperContent target=\"target\" isOpen container=\"inline\">Yo!</PopperContent>);\n- console.log(wrapper.debug());\n-\nexpect(wrapper.find('div[x-placement=\"auto\"]').exists()).toBe(true);\n});\n",
        "date": "18.10.2019 18:40:11",
        "repo": "reactstrap/reactstrap",
        "type": "test",
        "sim_msg": "docs(common-tips): fix syntax error\nAdd missing `expect` in assertion",
        "sim_diff": "diff --git a/docs/guides/common-tips.md b/docs/guides/common-tips.md @@ -56,9 +56,9 @@ it('updates text', async () => {\nit('render text', done => {\nconst wrapper = mount(TestComponent)\nwrapper.trigger('click').then(() => {\n- wrapper.text().toContain('updated')\n+ expect(wrapper.text()).toContain('updated')\nwrapper.trigger('click').then(() => {\n- wrapper.text().toContain('some different text')\n+ expect(wrapper.text()).toContain('some different text')\ndone()\n})\n})\n",
        "chatgpt_rag": "src(PopperContent): remove console.log statement"
    },
    {
        "msg": "chore: add note about providing a reference in PR template\ncloses",
        "diff": "diff --git a/.github/pull_request_template.md b/.github/pull_request_template.md @@ -5,8 +5,11 @@ feat(validatorName): brief title of what has been done\n<!--- briefly describe what you have done in this PR --->\n+<!--- provide some (credible) references showing the structure of the data to be validated, if applicable --->\n+\n## Checklist\n- [ ] PR contains only changes related; no stray files, etc.\n- [ ] README updated (where applicable)\n- [ ] Tests written (where applicable)\n+- [ ] References provided in PR (where applicable)\n",
        "date": "08.02.2023 06:57:58",
        "repo": "validatorjs/validator.js",
        "type": "chore",
        "sim_msg": "chore: remove &nbsp; from PR template",
        "sim_diff": "diff --git a/.github/pull_request_template.md b/.github/pull_request_template.md ## **Summary of Changes**\n-\nFixes # _(if applicable - add the number of issue this PR addresses)_\n-&nbsp;\n-\n## **Test Data or Screenshots**\n-&nbsp;\n-\n###### _By submitting this pull request, you are confirming the following:_\n- I have reviewed the [Contribution Guidelines](https://github.com/web3swift-team/web3swift/blob/develop/CONTRIBUTION.md).\n",
        "chatgpt_rag": "feat: add references section to PR template"
    },
    {
        "msg": "chore(demo): skip unnecessary sleep(1500) during prerendering",
        "diff": "diff --git a/examples/demo/public/index.tsx b/examples/demo/public/index.tsx @@ -7,10 +7,12 @@ import Header from './header.tsx';\nconst sleep = t => new Promise(r => setTimeout(r, t));\n+const IS_CLIENT = typeof window !== 'undefined';\n+\nconst About = lazy(() => import('./pages/about/index.js'));\n-const LazyAndLate = lazy(async () => (await sleep(1500), import('./pages/about/index.js')));\n+const LazyAndLate = lazy(async () => (IS_CLIENT && (await sleep(1500)), import('./pages/about/index.js')));\nconst CompatPage = lazy(() => import('./pages/compat.js'));\n-const ClassFields = lazy(async () => (await sleep(1500), import('./pages/class-fields.js')));\n+const ClassFields = lazy(async () => (IS_CLIENT && (await sleep(1500)), import('./pages/class-fields.js')));\nconst Files = lazy(() => import('./pages/files/index.js'));\nconst Environment = lazy(async () => (await import('./pages/environment/index.js')).Environment);\nconst JSONView = lazy(async () => (await import('./pages/json.js')).JSONView);\n",
        "date": "10.05.2021 14:33:11",
        "repo": "preactjs/wmr",
        "type": "chore",
        "sim_msg": "chore: use variable instead of function",
        "sim_diff": "diff --git a/lib/model.js b/lib/model.js @@ -1633,14 +1633,12 @@ function _ensureIndexes(model, options, callback) {\nconst indexFields = utils.clone(index[0]);\nconst indexOptions = utils.clone(index[1]);\n- const noText = () => {\n- for (const key in indexFields) {\n- if (indexFields[key] == 'text') {\n- return false;\n+ let isTextIndex = false;\n+ for (const key of Object.keys(indexFields)) {\n+ if (indexFields[key] === 'text') {\n+ isTextIndex = true;\n}\n}\n- return true;\n- };\ndelete indexOptions._autoIndex;\n_decorateDiscriminatorIndexOptions(model, indexOptions);\nif ('safe' in options) {\n@@ -1660,7 +1658,8 @@ function _ensureIndexes(model, options, callback) {\nindexOptions.background = options.background;\n}\nif (model.schema.options.hasOwnProperty('collation') &&\n- !indexOptions.hasOwnProperty('collation') && noText()) {\n+ !indexOptions.hasOwnProperty('collation')\n+ !isTextIndex) {\nindexOptions.collation = model.schema.options.collation;\n}\n",
        "chatgpt_rag": "chore: use variable instead of inline condition for checking client environment in lazy loading components"
    },
    {
        "msg": "chore: undo change to spawn code",
        "diff": "diff --git a/lib/monitor/run.js b/lib/monitor/run.js @@ -99,8 +99,6 @@ function run(options) {\nif (shouldFork) {\nvar forkArgs = cmd.args.slice(1);\nvar env = utils.merge(options.execOptions.env, process.env);\n- stdio.pop();\n- stdio.push(process.stderr);\nstdio.push('ipc');\nchild = fork(options.execOptions.script, forkArgs, {\nenv: env,\n",
        "date": "04.12.2019 16:09:33",
        "repo": "remy/nodemon",
        "type": "chore",
        "sim_msg": "test: exit non-zero for any failing test file",
        "sim_diff": "diff --git a/test/test.js b/test/test.js @@ -9,10 +9,12 @@ for (const filename of files) {\nif (filename.startsWith('test-')) {\nconst path = join(__dirname, filename);\nconsole.log(`> Running ${filename} ...`);\n- spawnSync(`${process.argv0} ${path}`, {\n+ const result = spawnSync(`${process.argv0} ${path}`, {\nshell: true,\nstdio: 'inherit',\nwindowsHide: true\n});\n+ if (result.status !== 0)\n+ process.exitCode = 1;\n}\n}\n",
        "chatgpt_rag": "monitor: update stdio configuration for child process forked"
    },
    {
        "msg": "chore(webpack): update config",
        "diff": "diff --git a/html/webpack.config.js b/html/webpack.config.js @@ -42,12 +42,9 @@ module.exports = {\n},\n{\ntest: /\\.(eot|png|svg|ttf|woff)/,\n- use: {\n- loader: 'url-loader',\n- options: {\n- limit: false,\n- name: 'assets/[name].[ext]'\n- }\n+ type: 'asset',\n+ generator: {\n+ filename: 'assets/[name][ext]'\n}\n}\n]\n",
        "date": "19.07.2021 18:09:57",
        "repo": "pypy-vrc/vrcx",
        "type": "chore",
        "sim_msg": "feat(Scripts): add images and svg loaders",
        "sim_diff": "diff --git a/packages/scripts/webapp/preset/config/webpack.config.js b/packages/scripts/webapp/preset/config/webpack.config.js @@ -119,6 +119,24 @@ module.exports = ({ getUserConfig, mode }) => {\nmimetype: 'application/font-woff',\n},\n},\n+ {\n+ test: /\\.svg$/,\n+ loader: 'url-loader',\n+ options: {\n+ name: 'assets/svg/[name].[ext]',\n+ limit: 10000,\n+ mimetype: 'image/svg+xml',\n+ },\n+ },\n+ {\n+ test: /\\.(png|jpg|jpeg|gif)$/,\n+ loader: 'url-loader',\n+ options: {\n+ name: 'assets/img/[name].[ext]',\n+ limit: 10000,\n+ mimetype: 'image/png',\n+ },\n+ },\n],\n},\nplugins: [\n",
        "chatgpt_rag": "refactor(HTML): update asset handling in webpack config"
    },
    {
        "msg": "chore(docs): update components list",
        "diff": "diff --git a/packages/kiwi-core/docs/components/components.js b/packages/kiwi-core/docs/components/components.js -// Dear maintainers, please arrange components alphabetically. Thanks :)\n+/**\n+ * NOTE:\n+ *\n+ * Dear maintainers,\n+ * Components listed in this file should be listed alphabetically. Thanks :)\n+ */\nconst components = [\n'Accordion',\n",
        "date": "02.03.2020 15:42:15",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "feat: added theme styles",
        "sim_diff": "diff --git a/package/src/theme/defaultComponentTheme.js b/package/src/theme/defaultComponentTheme.js @@ -516,9 +516,20 @@ const accordion = {\nconst addressBook = {\nrui_addressBookBorderColor: colors.black10,\n+ rui_addressBookBorderRadius: standardBorderRadius,\n+ rui_addressBookBorderStyle: \"solid\",\n+ rui_addressBookBorderWidth: \"1px\",\nrui_addressBookActionButtonColor: colors.coolGreyActive,\nrui_addressBookActionButtonHoverColor: colors.coolGreyHover,\n- rui_addressBookActionButtonIconColor: colors.coolGrey500\n+ rui_addressBookActionButtonIconColor: colors.coolGrey500,\n+ rui_addressBookActionButtonIconHeight: \"20px\",\n+ rui_addressBookActionButtonIconMarginRight: \"10px\",\n+ rui_addressBookActionButtonIconWidth: \"20px\",\n+ rui_addressBookActionPaddingBottom: padding.sixteen,\n+ rui_addressBookActionPaddingLeft: padding.sixteen,\n+ rui_addressBookActionPaddingRight: padding.sixteen,\n+ rui_addressBookActionPaddingTop: padding.sixteen,\n+ rui_addressBookActionDeleteButtonHoverColor: colors.redHover\n};\nconst rui_components = {\n",
        "chatgpt_rag": "style: updated comments in components.js to remind maintainers to list components alphabetically"
    },
    {
        "msg": "chore: add email to docs\nTo prove ownership my email must be added to the docs.",
        "diff": "diff --git a/docs/lib/app.js b/docs/lib/app.js @@ -87,6 +87,7 @@ export default (locals, callback) => {\ndebug: false // Set debug to true if you want to inspect the dropdown\n});\n</script>\n+ <!-- avangate: Evan@lostonia.com -->\n</body>\n</html>`;\ncallback(null, markup);\n",
        "date": "08.11.2018 19:12:26",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "sim_msg": "fix(landing): opening auth link in a new tab",
        "sim_diff": "diff --git a/pages/index.js b/pages/index.js @@ -896,7 +896,7 @@ export default function IndexPage() {\nreturn errors;\n},\nonSubmit: async ({ email }) => {\n- window.open(`/_/auth?tab=signup&email=${email}`);\n+ window.open(`/_/auth?tab=signup&email=${email}`, \"_self\");\n},\n});\n",
        "chatgpt_rag": "feat(docs): added avangate email in the footer"
    },
    {
        "msg": "chore(divider): update divider a11y",
        "diff": "diff --git a/packages/chakra-ui-core/src/CDivider/CDivider.js b/packages/chakra-ui-core/src/CDivider/CDivider.js *\n* @see Docs https://vue.chakra-ui.com/divider\n* @see Source https://github.com/chakra-ui/chakra-ui-vue/blob/master/packages/chakra-ui-core/src/CDivider/CDivider.js\n+ * @see A11y https://github.com/chakra-ui/chakra-ui-vue/blob/master/packages/chakra-ui-core/src/CDivider/accessibility.md\n*/\nimport CBox from '../CBox'\n@@ -45,7 +46,8 @@ const CDivider = {\n...forwardProps(this.$props)\n},\nattrs: {\n- 'aria-orientation': this.orientation\n+ 'aria-orientation': this.orientation,\n+ 'data-chakra-component': 'CDivider'\n}\n})\n}\n",
        "date": "16.04.2020 23:43:19",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "feat: QCollapsible open/close CSS classes",
        "sim_diff": "diff --git a/src/components/collapsible/QCollapsible.vue b/src/components/collapsible/QCollapsible.vue <template>\n<div\nclass=\"q-collapsible q-item-division relative-position\"\n- :class=\"{ 'q-item-separator': separator, 'q-item-inset-separator': insetSeparator }\"\n+ :class=\"[\n+ `q-collapsible-${active ? 'opened' : 'closed'}`,\n+ {\n+ 'q-item-separator': separator,\n+ 'q-item-inset-separator': insetSeparator\n+ }\n+ ]\"\n>\n<q-item-wrapper :class=\"{disabled: disable}\" :cfg=\"cfg\" @click=\"__toggleItem\" v-ripple.mat=\"!iconToggle && !disable\">\n<div\n",
        "chatgpt_rag": "feat: Add aria-orientation and data-chakra-component to CDivider component"
    },
    {
        "msg": "chore: add option to build fro production",
        "diff": "diff --git a/website/nuxt.config.js b/website/nuxt.config.js @@ -97,6 +97,7 @@ export default {\n},\nbabel: {\nplugins: [\n+ ['@babel/plugin-proposal-private-property-in-object', { loose: true }],\n'@babel/plugin-proposal-optional-chaining'\n]\n}\n",
        "date": "26.08.2021 03:46:03",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "refactor: disable useBuiltIns babel setting",
        "sim_diff": "diff --git a/babel.config.js b/babel.config.js @@ -10,7 +10,6 @@ module.exports = {\n[\n'@babel/preset-env',\n{\n- useBuiltIns: 'usage',\ninclude: ['proposal-object-rest-spread', 'transform-classes', 'transform-destructuring'],\n},\n],\n",
        "chatgpt_rag": "feat: add @babel/plugin-proposal-private-property-in-object plugin with loose option in babel config"
    },
    {
        "msg": "chore(pycandela): version 0.4.0",
        "diff": "diff --git a/python/pycandela/setup.py b/python/pycandela/setup.py @@ -2,7 +2,7 @@ from distutils.core import setup\nsetup(\nname='pycandela',\n- version='0.3.0',\n+ version='0.4.0',\ndescription='Jupyter interface for Candela visualization components',\nauthor='Kitware, Inc.',\nauthor_email='kitware@kitware.com',\n",
        "date": "16.05.2018 15:29:38",
        "repo": "kitware/candela",
        "type": "chore",
        "sim_msg": "feat: update to Downshift 6.0.0",
        "sim_diff": "diff --git a/packages/dropdown/package.json b/packages/dropdown/package.json \"@hig/icons\": \"^4.1.0\",\n\"@hig/input\": \"^2.1.0\",\n\"@hig/multi-downshift\": \"^2.1.0\",\n- \"downshift\": \"^3.2.0\",\n+ \"downshift\": \"^6.0.0\",\n\"emotion\": \"^10.0.0\",\n\"prop-types\": \"^15.7.1\"\n},\n",
        "chatgpt_rag": "feat: update pycandela version to 0.4.0"
    },
    {
        "msg": "chore: update changesets config",
        "diff": "diff --git a/.changeset/config.json b/.changeset/config.json \"access\": \"public\",\n\"baseBranch\": \"master\",\n\"ignore\": [],\n-\n- \"changelog\": \"@changesets/cli/changelog\"\n+ \"changelog\": [\"@changesets/changelog-github\", { \"repo\": \"jaredpalmer/razzle\" }]\n}\n\\ No newline at end of file\n",
        "date": "01.03.2022 19:04:14",
        "repo": "jaredpalmer/razzle",
        "type": "chore",
        "sim_msg": "test: resCookie",
        "sim_diff": "diff --git a/test/assets/values/tps2.json b/test/assets/values/tps2.json \"clientIp\": \"${clientIp}\",\n\"statusCode\": \"${statusCode}\",\n\"serverIp\": \"${serverIp}\",\n- \"resHeaderValue\": \"resHeaders.x-res-header-name\",\n- \"resCookieValue\": \"resCookie.res_cookie_name\"\n+ \"resHeaderValue\": \"${resHeaders.x-res-header-name}\",\n+ \"resCookieValue\": \"${resCookie.res_cookie_name}\"\n}\n\\ No newline at end of file\n",
        "chatgpt_rag": "build: update changelog configuration"
    },
    {
        "msg": "chore(docs): change Modal transition time for better understanding\nincreased the transition timings for better understanding of difference between modalTransition and backdropTransition\nCloses",
        "diff": "diff --git a/docs/lib/examples/ModalCustomTimeout.js b/docs/lib/examples/ModalCustomTimeout.js @@ -23,7 +23,7 @@ class ModalExample extends React.Component {\nreturn (\n<div>\n<Button color=\"danger\" onClick={this.toggle}>{this.props.buttonLabel}</Button>\n- <Modal isOpen={this.state.modal} modalTransition={{ timeout: 20 }} backdropTransition={{ timeout: 10 }}\n+ <Modal isOpen={this.state.modal} modalTransition={{ timeout: 700 }} backdropTransition={{ timeout: 1300 }}\ntoggle={this.toggle} className={this.props.className}>\n<ModalHeader toggle={this.toggle}>Modal title</ModalHeader>\n<ModalBody>\n",
        "date": "29.05.2018 22:58:44",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "sim_msg": "chore(a11y): Fixed dismiss",
        "sim_diff": "diff --git a/src/components/common/modal.js b/src/components/common/modal.js @@ -3,7 +3,11 @@ import { DialogOverlay, DialogContent } from '@reach/dialog'\nimport modalStyles from './modal.module.scss'\nconst Modal = ({ children, isOpen, onClose }) => (\n- <DialogOverlay className={modalStyles.overlay} isOpen={isOpen}>\n+ <DialogOverlay\n+ className={modalStyles.overlay}\n+ isOpen={isOpen}\n+ onDismiss={onClose}\n+ >\n<DialogContent className={modalStyles.content}>\n<button\ntype=\"button\"\n",
        "chatgpt_rag": "chore(a11y): Updated modal transition timeouts"
    },
    {
        "msg": "chore: 86 - Add Docker build to Travis\ncloses - added docker build instructions to travis config.",
        "diff": "diff --git a/.travis.yml b/.travis.yml +sudo: required\n+\n+services:\n+ - docker\n+\nlanguage: node_js\nnode_js:\n- '8'\n@@ -14,3 +19,5 @@ script:\n- npm install --no-optional\n- npm run test\n- npm run build\n+- docker build -t crviz -f Dockerfile .\n+- docker build -t crviz-gh -f Dockerfile.gh .\n\\ No newline at end of file\n",
        "date": "26.06.2018 10:03:25",
        "repo": "iqtlabs/crviz",
        "type": "chore",
        "sim_msg": "ci: use default osx_image in .travis.yml",
        "sim_diff": "diff --git a/.travis.yml b/.travis.yml -sudo: required\n-dist: trusty\n-group: travis_latest\n-\n-services:\n- - docker\n-\nlanguage: node_js\nos:\n- linux\n- osx\n-osx_image: xcode8.3\n+#osx_image: xcode11.6\nnode_js:\n- \"10\"\n@@ -61,7 +54,7 @@ before_install:\n- npm install -g npm\n- npm --version\n-install: travis_wait 40 npm install\n+install: npm install\nbefore_script:\n- COMMIT_LOG=`git log -1 --format='%ci %H %s'`\n",
        "chatgpt_rag": "ci: add docker build commands to .travis.yml"
    },
    {
        "msg": "chore(test): fix browser config",
        "diff": "diff --git a/karma.conf.babel.js b/karma.conf.babel.js @@ -29,7 +29,7 @@ const formatError = (msg) => {\nexport default (karmaConfig) => {\nkarmaConfig.set({\nbasePath: process.cwd(),\n- browsers: ['ChromeHeadless'],\n+ browsers: ['puppeteer'],\nclient: {\nmocha: {\nreporter: 'html', // change Karma's debug.html to mocha web reporter\n@@ -47,6 +47,8 @@ export default (karmaConfig) => {\npuppeteer: {\nbase: 'ChromeHeadless',\nflags: [\n+ '--disable-setuid-sandbox',\n+ '--no-sandbox',\n// Avoid \"Maximum call stack size exceeded\" errors on CircleCI\n'--stack-trace-limit 50000',\n],\n",
        "date": "29.10.2017 16:57:17",
        "repo": "semantic-org/semantic-ui-react",
        "type": "chore",
        "sim_msg": "build: fix chrome headless on CI",
        "sim_diff": "diff --git a/test/unit/karma.cover.config.js b/test/unit/karma.cover.config.js @@ -4,7 +4,13 @@ process.env.CHROME_BIN = require('puppeteer').executablePath()\nmodule.exports = function (config) {\nconst options = Object.assign(base, {\n- browsers: ['ChromeHeadless'],\n+ browsers: ['ChromeHeadlessCI'],\n+ customLaunchers: {\n+ 'ChromeHeadlessCI': {\n+ base: 'ChromeHeadless',\n+ flags: ['--no-sandbox']\n+ }\n+ },\nreporters: ['mocha', 'coverage'],\ncoverageReporter: {\nreporters: [\n",
        "chatgpt_rag": "build: update browser configuration to use puppeteer with additional flags"
    },
    {
        "msg": "chore(switch): cleared jest cache and spy works now",
        "diff": "diff --git a/packages/kiwi-core/src/Switch/tests/switch.test.js b/packages/kiwi-core/src/Switch/tests/switch.test.js @@ -32,12 +32,11 @@ it('should switch', async () => {\n})\nit('should emit a change event', async () => {\n- const events = []\n- const eventsHandler = jest.fn(evt => events.push(evt.type))\n+ const spy = jest.fn()\nconst { getByTestId } = renderComponent(\n{\nmethods: {\n- handleChange: eventsHandler\n+ handleChange: spy\n},\ntemplate: `<Toggle data-testid=\"label\" @change=\"handleChange\" /> `\n}\n@@ -45,5 +44,6 @@ it('should emit a change event', async () => {\nconst label = getByTestId('label')\nuserEvent.click(label)\n- expect(events).toEqual(['change'])\n+\n+ expect(spy).toHaveBeenCalledTimes(1)\n})\n",
        "date": "01.03.2020 03:12:13",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "test(toast): disabling close toast with delay test",
        "sim_diff": "diff --git a/src/components/toast/__tests__/CdrToast.spec.js b/src/components/toast/__tests__/CdrToast.spec.js -import { mount } from '@vue/test-utils';\n+import { mount } from '../../../../test/vue-jest-style-workaround.js';\nimport CdrToast from 'componentdir/toast/CdrToast';\ndescribe('CdrToast', () => {\n@@ -13,22 +13,22 @@ describe('CdrToast', () => {\n});\nit('matches snapshot', async () => {\nwrapper.setProps({ open: true });\n- wrapper.setData({ opened: true });\n+ //wrapper.setData({ opened: true });\nawait wrapper.vm.$nextTick(() => {\nexpect(wrapper.element).toMatchSnapshot();\n})\n});\nit('handles close triggers', async () => {\n- const spyCloseToast = jest.spyOn(wrapper.vm, 'closeToast');\n+ const spyCloseToast = spyOn(wrapper.vm, 'closeToast');\nwrapper.setProps({ open: true });\nawait wrapper.vm.$nextTick(() => {\nwrapper.find('button').trigger('click');\nexpect(spyCloseToast).toBeCalled();\n});\n});\n- it('closes after 5 seconds', async () => {\n+ xit('closes after 5 seconds', async () => {\njest.useFakeTimers();\n- const spyCloseToastWithDelay = jest.spyOn(wrapper.vm, 'closeToastWithDelay');\n+ const spyCloseToastWithDelay = spyOn(wrapper.vm, 'closeToastWithDelay');\nwrapper.setProps({ open: true });\njest.runTimersToTime(5000),\nawait wrapper.vm.$nextTick(() => {\n",
        "chatgpt_rag": "test(switch): updating event handler test in switch component"
    },
    {
        "msg": "chore(package): remove changelog deploy scripts",
        "diff": "diff --git a/package.json b/package.json \"build:docs-toc\": \"doctoc ./.github/CONTRIBUTING.md --github --maxlevel 4\",\n\"build:docs-cname\": \"echo react.semantic-ui.com > docs/build/CNAME\",\n\"build:changelog\": \"github_changelog_generator --no-issues --no-unreleased --release-branch master --since-tag $(git describe --abbrev=0 --tags $(git rev-parse HEAD~400))\",\n- \"deploy:changelog\": \"git add CHANGELOG.md && git commit -m 'docs(changelog): update changelog [ci skip]' && git push\",\n\"predeploy:docs\": \"cross-env NODE_ENV=production yarn build:docs && yarn build:docs-cname\",\n\"deploy:docs\": \"gh-pages -d docs/build -m 'deploy docs [ci skip]'\",\n- \"postdeploy:docs\": \"yarn build:changelog && yarn deploy:changelog\",\n\"lint\": \"cross-env NODE_ENV=production eslint .\",\n\"lint:fix\": \"yarn lint --fix\",\n\"prerelease\": \"yarn lint && yarn tsd:lint && yarn tsd:test && yarn test && cross-env NODE_ENV=production yarn build\",\n",
        "date": "25.03.2018 10:21:17",
        "repo": "semantic-org/semantic-ui-react",
        "type": "chore",
        "sim_msg": "chore(deps): updates devdependencies",
        "sim_diff": "diff --git a/package.json b/package.json \"@semantic-release/release-notes-generator\": \"^7.3.0\",\n\"@types/node\": \"^12.7.4\",\n\"@types/qs\": \"^6.5.3\",\n- \"@typescript-eslint/parser\": \"2.3.3\",\n- \"@typescript-eslint/eslint-plugin\": \"2.3.3\",\n+ \"@typescript-eslint/eslint-plugin\": \"2.4.0\",\n+ \"@typescript-eslint/parser\": \"2.4.0\",\n\"commitizen\": \"^4.0.3\",\n\"commitlint-config-cz\": \"^0.12.1\",\n\"cz-conventional-changelog\": \"^3.0.2\",\n\"prettier\": \"^1.18.2\",\n\"rimraf\": \"^3.0.0\",\n\"semantic-release\": \"^15.13.24\",\n- \"tap\": \"^14.6.1\",\n+ \"tap\": \"^14.7.0\",\n\"tap-mocha-reporter\": \"^5.0.0\",\n\"ts-node\": \"^8.3.0\",\n\"typescript\": \"~3.6.2\"\n",
        "chatgpt_rag": "chore(deps): updates scripts in package.json"
    },
    {
        "msg": "chore(release): 6.0.0",
        "diff": "diff --git a/package.json b/package.json {\n\"name\": \"@nuxtjs/firebase\",\n- \"version\": \"5.2.0\",\n+ \"version\": \"6.0.0\",\n\"description\": \"Intergrate Firebase into your Nuxt project.\",\n\"keywords\": [\n\"firebase\",\n",
        "date": "07.06.2020 21:08:34",
        "repo": "nuxt-community/firebase-module",
        "type": "chore",
        "sim_msg": "chore: now working on 5.4.22",
        "sim_diff": "diff --git a/package.json b/package.json {\n\"name\": \"mongoose\",\n\"description\": \"Mongoose MongoDB ODM\",\n- \"version\": \"5.4.21\",\n+ \"version\": \"5.4.22-pre\",\n\"author\": \"Guillermo Rauch <guillermo@learnboost.com>\",\n\"keywords\": [\n\"mongodb\",\n",
        "chatgpt_rag": "chore: now working on 6.0.0"
    },
    {
        "msg": "chore(search-input): Only show public methods",
        "diff": "diff --git a/app/components/search-input.js b/app/components/search-input.js @@ -51,7 +51,8 @@ export default Component.extend({\n'hierarchy.lvl1',\n'hierarchy.lvl2'\n],\n- tagFilters: [`version:${projectVersion}`]\n+ tagFilters: [`version:${projectVersion}`],\n+ facetFilters: ['access:public']\n};\nconst searchObj = {\n",
        "date": "27.01.2018 14:32:10",
        "repo": "ember-learn/ember-api-docs",
        "type": "chore",
        "sim_msg": "fix(Search): export default filter",
        "sim_diff": "diff --git a/components/Search/index.js b/components/Search/index.js @@ -19,7 +19,7 @@ const styles = {\n})\n}\n-const DEFAULT_FILTER = {key: 'template', value: 'front', not: true}\n+export const DEFAULT_FILTER = {key: 'template', value: 'front', not: true}\nclass Search extends Component {\nconstructor (props, ...args) {\n",
        "chatgpt_rag": "fix(SearchInput): add facet filters to search object"
    },
    {
        "msg": "chore(issueTemplate): update demo link",
        "diff": "diff --git a/ISSUE_TEMPLATE.md b/ISSUE_TEMPLATE.md - components: `name`\n- reactstrap version `#x.x.x`\n-- import method `umd/csj/es` (if umd, are you using the \"full\" version (only for v5+)?)\n+- import method `umd/csj/es` <!-- (if umd, are you using the \"full\" version (only for v5+)?) -->\n- react version `#x.x.x`\n- bootstrap version `#x.x.x`\n@@ -29,9 +29,8 @@ paste error message with stacktrack here\n### Code\n<!--\n-Fork a link (for the corresponding version) and update it to demonstrate your issue.\n- - v4 (with react 15): issue http://codepen.io/eddywashere/pen/ZOjmkm\n- - v5 (with react 16): issue https://codepen.io/TheSharpieOne/pen/GMMPEZ\n+Fork the link and update it to demonstrate your issue.\n+https://stackblitz.com/edit/reactstrap?file=Example.js\nand/or add the code which causes the issue directly here\n-->\n",
        "date": "04.05.2018 12:07:08",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "sim_msg": "docs: add react template Varsarr",
        "sim_diff": "diff --git a/README.md b/README.md @@ -165,6 +165,7 @@ Use the \"Table of Contents\" menu on the top-left corner to explore the list.\n- [VRTTV](https://github.com/Drumpy/vrttv-boilerplate) - React + TypeScript + TailwindCSS + ESLint + Prettier + Husky + Conventional Commits + Gitmoji + GitHub Actions + Vercel Deploy.\n- [React Starter Kit](https://github.com/kriasoft/react-starter-kit) - Jamstack, React, React Router, Material UI, Firebase Auth, TypeScript, ESLint, Prettier, Jest, GitHub Actions.\n- [vite-mern-template](https://github.com/apicgg/vite-mern-template) - React 18 + TypeScript + Vite + Redux Toolkit + ESLint + React Router DOM + Axios + React Icons + React Toastify + Express + Mongoose.\n+- [Varsarr](https://github.com/altmshfkgudtjr/varsarr) - React, Typescript, Styled-Components, Recoil, React-Query, Axios, Absolute imports.\n#### Svelte\n",
        "chatgpt_rag": "docs: update import method in ISSUE_TEMPLATE to include comment for umd version usage"
    },
    {
        "msg": "chore(xhr_wrapper): add comment",
        "diff": "diff --git a/src/common/api/utils/xhr_wrapper.js b/src/common/api/utils/xhr_wrapper.js @@ -53,6 +53,7 @@ const requestWrapper = (\n*/\nasync function parseJSON (res: Response): Object {\nlet json: Object\n+ // status response field in return object\ntry {\njson = await res.json()\n} catch (e) {\n",
        "date": "06.09.2017 12:19:47",
        "repo": "metnew/suicrux",
        "type": "chore",
        "sim_msg": "chore: Clean return on build function",
        "sim_diff": "diff --git a/functions/api-build/api-build.js b/functions/api-build/api-build.js @@ -20,8 +20,9 @@ exports.handler = async (event, context) => {\n},\n},\n).then(response => {\n- return { statusCode: 200, body: 'Done' }\n+ return response.text()\n})\n+ return { statusCode: 200, body: 'Done' }\n} catch (err) {\nreturn { statusCode: 500, body: err.toString() }\n}\n",
        "chatgpt_rag": "fix: Add comment for status response field in return object in xhr_wrapper.js"
    },
    {
        "msg": "chore: bump package version",
        "diff": "diff --git a/packages/chakra-ui-core/CHANGELOG.md b/packages/chakra-ui-core/CHANGELOG.md # Change Log\n+## 0.6.3\n+\n+### Patch Changes\n+\n+- fix: includes missing style props for border-radius and flex-grow style declarations\"\n+\n## 0.6.2\n### Patch Changes\n",
        "date": "15.09.2020 20:20:31",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "style(button icon): change to radii.circle on border-radius",
        "sim_diff": "diff --git a/packages/yoga/src/Button/native/Icon.jsx b/packages/yoga/src/Button/native/Icon.jsx @@ -24,7 +24,7 @@ const ButtonContainer = styled.View`\nalign-items: center;\njustify-content: center;\n- border-radius: ${large ? 24 : 12}px;\n+ border-radius: ${button.border.radius}px;\nbackground-color: ${\nbutton.types.contained.backgroundColor[state].default\n",
        "chatgpt_rag": "style(button): fix missing border-radius and flex-grow style props in Button component"
    },
    {
        "msg": "chore: update oliver\n[skip ci]",
        "diff": "diff --git a/.github/oliver.yml b/.github/oliver.yml # Number of days the issue was closed in before the bot should reply.\n# If the issue was closed in more days than this, the bot won't reply.\n# Use `daysClosedIn: false` to *always* reply.\n-daysClosedIn: false\n+daysClosedIn: 100\n# Labels to look for on issues the bot can reply to\nlabels:\n",
        "date": "01.02.2018 18:58:26",
        "repo": "remy/nodemon",
        "type": "chore",
        "sim_msg": "feat(stale): add hint to upvote issue",
        "sim_diff": "diff --git a/.github/stale.yml b/.github/stale.yml @@ -12,7 +12,7 @@ staleLabel: stale\nmarkComment: >\nThis issue has been automatically marked as stale because it has not had\nrecent activity. The core team will be inclined to provide an update soon.\n- If there is no activity after a few months, this issue will be closed.\n+ If this issue impacts you, feel free to subscribe and upvote the first comment.\nThank you for your contributions.\n# Comment to post when closing a stale issue. Set to `false` to disable\ncloseComment: false\n",
        "chatgpt_rag": "feat(oliver): set daysClosedIn to 100"
    },
    {
        "msg": "chore: Add CARD_TYPES constant for Type sorts",
        "diff": "diff --git a/src/utils/Sort.js b/src/utils/Sort.js @@ -55,6 +55,22 @@ const ALL_CMCS = Array.from(Array(33).keys())\n.map((x) => (x / 2).toString())\n.concat(['1000000']);\n+const CARD_TYPES = [\n+ 'Creature',\n+ 'Planeswalker',\n+ 'Instant',\n+ 'Sorcery',\n+ 'Artifact',\n+ 'Enchantment',\n+ 'Conspiracy',\n+ 'Contraption',\n+ 'Phenomenon',\n+ 'Plane',\n+ 'Scheme',\n+ 'Vanguard',\n+ 'Land',\n+];\n+\nconst SINGLE_COLOR = ['White', 'Blue', 'Black', 'Red', 'Green'];\nconst GUILDS = ['Azorius', 'Dimir', 'Rakdos', 'Gruul', 'Selesnya', 'Orzhov', 'Izzet', 'Golgari', 'Boros', 'Simic'];\nconst SHARDS_AND_WEDGES = ['Bant', 'Esper', 'Grixis', 'Jund', 'Naya', 'Mardu', 'Temur', 'Abzan', 'Jeskai', 'Sultai'];\n",
        "date": "09.03.2021 21:19:32",
        "repo": "dekkerglen/cubecobra",
        "type": "chore",
        "sim_msg": "chore(jest): remove exception for statefulPageWizard",
        "sim_diff": "diff --git a/jest.config.js b/jest.config.js @@ -10,7 +10,7 @@ module.exports = {\nfunctions: 80,\nlines: 80,\n},\n- './src/components/**/!(ColumnHeaderRow|ColumnHeaderSelect|FilterHeaderRow|TableToolbar|RowActionsCell|RowActionsError|StatefulWizardInline|WizardInline|StatefulTable|StatefulTableDetailWizard|CatalogContent|FileDrop|HeaderMenu|Dashboard|CardRenderer|Attribute|UnitRenderer|ImageHotspots|ImageControls|TimeSeriesCard|ListCard|StatefulPageWizard|PageHero|PageTitle|EditPage|AsyncTable|ImageCard|WizardHeader).jsx': {\n+ './src/components/**/!(ColumnHeaderRow|ColumnHeaderSelect|FilterHeaderRow|TableToolbar|RowActionsCell|RowActionsError|StatefulWizardInline|WizardInline|StatefulTable|StatefulTableDetailWizard|CatalogContent|FileDrop|HeaderMenu|Dashboard|CardRenderer|Attribute|UnitRenderer|ImageHotspots|ImageControls|TimeSeriesCard|ListCard|PageHero|PageTitle|EditPage|AsyncTable|ImageCard|WizardHeader).jsx': {\nstatements: 80,\nbranches: 80,\nfunctions: 80,\n@@ -60,12 +60,6 @@ module.exports = {\nfunctions: 77,\n},\n'./src/components/ListCard/ListCard.jsx': { branches: 66 },\n- './src/components/PageWizard/StatefulPageWizard.jsx': {\n- statements: 12,\n- branches: 0,\n- lines: 13,\n- functions: 0,\n- },\n'./src/components/Page/EditPage.jsx': {\nstatements: 64,\nbranches: 50,\n",
        "chatgpt_rag": "chore(utils): add CARD_TYPES array to Sort.js file"
    },
    {
        "msg": "chore: update circular progress jsdo",
        "diff": "diff --git a/packages/chakra-ui-core/src/CCircularProgress/CCircularProgress.js b/packages/chakra-ui-core/src/CCircularProgress/CCircularProgress.js +/**\n+ * Hey! Welcome to @chakra-ui/vue CircularProgress\n+ *\n+ * The Circular Progress component is used to indicates the progress for both determinate and indeterminate processes.\n+ *\n+ * @see Docs https://vue.chakra-ui.com/circularprogress\n+ * @see Source https://github.com/chakra-ui/chakra-ui-vue/blob/master/packages/chakra-ui-core/src/CCircularProgress/CCircularProgress.js\n+ * @see A11y https://github.com/chakra-ui/chakra-ui-vue/blob/master/packages/chakra-ui-core/src/CCircularProgress/accessibility.md\n+ */\n+\n+\nimport { baseProps } from '../config/props'\nimport { forwardProps } from '../utils'\nimport { getComputedProps } from './utils/circularprogress.styles'\nimport CBox from '../CBox'\n+/**\n+ * CCircularProgress component\n+ *\n+ * The test label that displays the progress percentage in the `CCircularProgress`\n+ *\n+ * @extends CBox\n+ * @see Docs https://vue.chakra-ui.com/circularprogress\n+ */\nconst CCircularProgressLabel = {\nname: 'CCircularProgressLabel',\nprops: baseProps,\n@@ -25,6 +44,14 @@ const CCircularProgressLabel = {\n}\n}\n+/**\n+ * CCircularProgressLabel component\n+ *\n+ * Indicates the progress for both determinate and indeterminate processes.\n+ *\n+ * @extends CBox\n+ * @see Docs https://vue.chakra-ui.com/circularprogress\n+ */\nconst CCircularProgress = {\nname: 'CCircularProgress',\ninject: ['$chakraColorMode'],\n",
        "date": "16.04.2020 21:53:12",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "feat(progress): add variant prop to control bar color",
        "sim_diff": "diff --git a/packages/yoga/src/Progress/web/Progress.jsx b/packages/yoga/src/Progress/web/Progress.jsx @@ -10,8 +10,10 @@ const ProgressBar = styled.progress`\nborder: none;\n${({\n+ variant,\ntheme: {\nyoga: {\n+ colors: { [variant]: color = {} },\ncomponents: { progress },\n},\n},\n@@ -35,7 +37,7 @@ const ProgressBar = styled.progress`\n}\n&::-webkit-progress-value {\n- background-color: ${progress.backgroundColor.value};\n+ background-color: ${color[3]};\n}\n&&,\n@@ -44,7 +46,7 @@ const ProgressBar = styled.progress`\n}\n&[value]::-moz-progress-bar {\n- background-color: ${progress.backgroundColor.value};\n+ background-color: ${color[3]};\n}\n`}\n`;\n@@ -119,12 +121,12 @@ Wrapper.defaultProps = {\n/** The Progress is a component used to indicate a progress of an indicator\n* of quantity. The use of labels numeric or alphabetic can increase the user\n* understanding. */\n-const Progress = ({ label, max, value, ...props }) => {\n+const Progress = ({ label, max, value, variant, ...props }) => {\nconst isNumber = !isNaN(label.value);\nreturn (\n<Wrapper isNumber={isNumber} align={label.placement} {...props}>\n- <ProgressBar max={max} value={value} />\n+ <ProgressBar max={max} value={value} variant={variant} />\n{Object.keys(label).length > 0 && (isNumber || label.value) && (\n<Label>{label.value}</Label>\n)}\n@@ -149,6 +151,8 @@ Progress.propTypes = {\n* indeterminate; this indicates that an activity is ongoing with no\n* indication of how long it is expected to take. */\nvalue: number,\n+ /** Value color based on theme colors (primary, secondary, tertiary). */\n+ variant: oneOf(['primary', 'secondary', 'tertiary']),\n};\nProgress.defaultProps = {\n@@ -158,6 +162,7 @@ Progress.defaultProps = {\n},\nmax: 1,\nvalue: undefined,\n+ variant: 'primary',\n};\nexport default Progress;\n",
        "chatgpt_rag": "feat(circularprogress): add variant prop to control bar color"
    },
    {
        "msg": "chore(docs): render spaces around \".clearfix\"",
        "diff": "diff --git a/docs/lib/Utilities/ClearfixPage.js b/docs/lib/Utilities/ClearfixPage.js @@ -12,7 +12,7 @@ export default function ClearfixPage() {\n<PageTitle title=\"Clearfix\" />\n<p>\nEasily clear <code className=\"highlighter-rouge\">float</code>s by adding\n- <code className=\"highlighter-rouge\">.clearfix</code>\n+ {' '}<code className=\"highlighter-rouge\">.clearfix</code>{' '}\n<strong>to the parent element</strong>.\nUtilizes <a href=\"http://nicolasgallagher.com/micro-clearfix-hack/\">\nthe micro clearfix</a> as popularized by Nicolas Gallagher.\n",
        "date": "04.10.2018 05:23:51",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "sim_msg": "docs(README): change verb to match subject",
        "sim_diff": "diff --git a/README.md b/README.md @@ -62,7 +62,7 @@ $(document).ready(function() {\n```\nYou can use any tags instead of `<pre><code>` to mark up your code. If\n-you don't use a container that preserve line breaks you will need to\n+you don't use a container that preserves line breaks you will need to\nconfigure highlight.js to use the `<br>` tag:\n```javascript\n",
        "chatgpt_rag": "docs(ClearfixPage): add space around clearfix class to improve readability"
    },
    {
        "msg": "chore(PR): fix typos in the pull request template\nFix the typos in the pull request template",
        "diff": "diff --git a/PULL_REQUEST_TEMPLATE.md b/PULL_REQUEST_TEMPLATE.md <!---\nWhat types of changes does your code introduce? Put an `x` in all the boxes that apply:\n-->\n+\n- [ ] Bug fix <!-- (change which fixes an issue) -->\n- [ ] New feature <!-- (change which adds functionality) -->\n-- [ ] Chore <!-- (change which doesn't affect the usage of the package (such as a documentation, build process, or project setup change)) -->\n+- [ ] Chore <!-- (change which doesn't affect the usage of the package (such as documentation, build process, or project setup changes)) -->\n- [ ] Breaking change <!-- (fix or feature that would cause existing functionality to change) -->\n- [ ] There is an open issue which this change addresses\n- [ ] I have read the **[CONTRIBUTING](./CONTRIBUTING.md)** document.\n@@ -16,8 +17,7 @@ What types of changes does your code introduce? Put an `x` in all the boxes that\n<!-- Put any other information you believe would be useful to know when reviewing this PR below -->\n-\n<!---\nIf there is an issue this PR addresses, please make sure it is in the commit message per the Git Commit Guidelines above\n-**AND** put the issue number below, indicating that is closes or fixes the issue.\n+**AND** put the issue number below, indicating that it closes or fixes the issue.\n-->\n",
        "date": "31.10.2020 20:37:00",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "sim_msg": "style(doc): prettier --fix pull request template",
        "sim_diff": "diff --git a/.github/PULL_REQUEST_TEMPLATE.md b/.github/PULL_REQUEST_TEMPLATE.md > do that.\n## Description\n+\n<!--- Describe your changes in detail -->\n## Motivation and Context\n+\n<!--- Why is this change required? What problem does it solve? -->\n<!--- If it fixes an open issue, please link to the issue here. -->\n## How Has This Been Tested?\n+\n<!--- Please describe in detail how you tested your changes. -->\n<!--- Include details of your testing environment, and the tests you ran to -->\n<!--- see how your change affects other areas of the code, etc. -->\n## Screenshots\n+\n<!-- Only if appropriate - feel free to delete this section if it's not applicable -->\n## Types of changes\n+\n<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->\n+\n- [ ] Bug fix (non-breaking change which fixes an issue)\n- [ ] Documentation only change\n- [ ] Refactor (non-breaking change which fixes an issue without changing functionality)\n- [ ] Breaking change (fix or feature that would cause existing functionality to change)\n## Checklist\n+\n<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->\n<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->\n- [ ] :book:\n+\n- My change doesn't require a documentation update, or ...\n- it _does_ and I have updated it\n- The contribution will be subject to [The MIT license](../LICENSE), and I'm OK with that.\n- The contribution is my own original work.\n- I am ok with the stuff in [**CONTRIBUTING.md**](./CONTRIBUTING.md).\n-\n-\n-\n-\n-\n",
        "chatgpt_rag": "style(doc): chore - update pull request template with correct checkboxes and formatting"
    },
    {
        "msg": "chore: :wrench: update fs allow",
        "diff": "diff --git a/svelte.config.js b/svelte.config.js @@ -16,6 +16,16 @@ const config = {\n// hydrate the <div id=\"svelte\"> element in src/app.html\ntarget: '#svelte',\nadapter: adapter(),\n+ vite: {\n+ // https://vitejs.dev/config/#server-fs-allow\n+ server: {\n+ fs: {\n+ // Allow serving files from one level up to the project root\n+ // posts, copy\n+ allow: ['..'],\n+ },\n+ },\n+ },\n},\n}\n",
        "date": "26.11.2021 18:11:16",
        "repo": "spences10/cheat-sheets",
        "type": "chore",
        "sim_msg": "chore(vue): use plain getters in Svelte useStore",
        "sim_diff": "diff --git a/src/svelte/shared/use-store.js b/src/svelte/shared/use-store.js @@ -17,7 +17,8 @@ export const useStore = (...args) => {\ngetter = args[0];\ncallback = args[1];\n}\n- const obj = store.getters[getter];\n+ // eslint-disable-next-line\n+ const obj = store._gettersPlain[getter];\nconst value = obj.value;\nif (callback) {\nobj.onUpdated(callback);\n@@ -28,8 +29,6 @@ export const useStore = (...args) => {\n// eslint-disable-next-line\nstore.__removeCallback(callback);\n}\n- // eslint-disable-next-line\n- store.__removeCallback(obj.__callback);\n});\nreturn value;\n};\n",
        "chatgpt_rag": "feat(svelte): configure Vite server to allow serving files from one level up in Svelte config"
    },
    {
        "msg": "chore(docs): Remove reference to `onExit` for CollapsePage\nShould have been written as `onExited` as `onExit` is not an event.",
        "diff": "diff --git a/docs/lib/Components/CollapsePage.js b/docs/lib/Components/CollapsePage.js @@ -44,7 +44,7 @@ export default class CollapsePage extends React.Component {\n<SectionTitle>Events</SectionTitle>\n<p>\n- Use the <code>onEnter</code>, onEntering, onEntered, onExit, onExiting and onExited props for callbacks when the\n+ Use the <code>onEnter</code>, onEntering, onEntered, onExiting and onExited props for callbacks when the\nCollapse has finished opening (entering) or closing (exiting).\n</p>\n<div className=\"docs-example\">\n",
        "date": "23.04.2018 17:03:19",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "sim_msg": "refactor(collapsible-panel): update to restore functionality with new bootstrap version",
        "sim_diff": "diff --git a/lib/manager/components/CollapsiblePanel.js b/lib/manager/components/CollapsiblePanel.js @@ -82,7 +82,7 @@ export default class CollapsiblePanel extends Component<Props> {\ndefaultExpanded={defaultExpanded}\nonEnter={this._onEnter}\n>\n- <Panel.Heading><h5 style={{width: '100%', cursor: 'pointer'}}>{title}</h5></Panel.Heading>\n+ <Panel.Heading><Panel.Title toggle style={{width: '100%', cursor: 'pointer'}}>{title}</Panel.Title></Panel.Heading>\n<Panel.Collapse>\n<Panel.Body>\n<Form>\n",
        "chatgpt_rag": "chore(collapse-page): update event callbacks in CollapsePage component"
    },
    {
        "msg": "chore: package: v27.10.0",
        "diff": "diff --git a/packages/putout/ChangeLog b/packages/putout/ChangeLog +2022.09.20, v27.10.0\n+\n+feature:\n+- putout: *.md: typescript/remove-unused-types: off\n+\n2022.09.20, v27.9.0\nfeature:\n",
        "date": "20.09.2022 16:36:35",
        "repo": "coderaiser/putout",
        "type": "chore",
        "sim_msg": "feat: Release 3.7.4",
        "sim_diff": "diff --git a/CHANGELOG.md b/CHANGELOG.md All notable changes to this project will be documented in this file. See [standard-version](https://github.com/conventional-changelog/standard-version) for commit guidelines.\n+## [3.7.4](https://github.com/serverless/components/compare/v3.7.3...v3.7.4) (2021-03-16)\n+\n+- sls registry info improve with translation\n+- sls component search support keyword search\n+\n## [3.7.3](https://github.com/serverless/components/compare/v3.7.2...v3.7.3) (2021-03-10)\n- Improve non-nodejs debug experience (avoid close before start dev)\n",
        "chatgpt_rag": "feat: Release v27.10.0\n- Disable typescript/remove-unused-types rule for *.md files"
    },
    {
        "msg": "chore: -> __c -> __f",
        "diff": "diff --git a/packages/plugin-remove-iife/lib/remove-iife.js b/packages/plugin-remove-iife/lib/remove-iife.js @@ -25,7 +25,7 @@ module.exports.filter = (path) => {\n};\nmodule.exports.replace = () => ({\n- '((__args__a) => __c(__args__a))(__args__b)': '__c(__args__b)',\n+ '((__args__a) => __f(__args__a))(__args__b)': '__f(__args__b)',\n'(() => __body)()': '__body',\n'(function() {})()': (vars, path) => {\nconst {body} = path.node.callee.body;\n",
        "date": "14.09.2022 17:04:09",
        "repo": "coderaiser/putout",
        "type": "chore",
        "sim_msg": "refactor: ensure plugin loading order",
        "sim_diff": "diff --git a/lib/plugins/get-plugins.js b/lib/plugins/get-plugins.js @@ -130,13 +130,17 @@ module.exports = function(callback) {\nreturn !util.excludePlugin(name.split('.')[1]);\n});\nvar len = list.length;\n- list.forEach(function(name) {\n+ if (!len) {\n+ return cb();\n+ }\n+ list.forEach(function(name, i) {\nvar dir = plugins[name];\nvar pkgPath = path.join(dir, 'package.json');\nfs.stat(pkgPath, function(err, stats) {\nif (stats && stats.mtime) {\nname = name.split('.')[1] + ':';\n- result[name] = result[name] || {\n+ list[i] = {\n+ name: name,\nisSys: isSys,\nisProj: isProj,\npath: dir,\n@@ -144,15 +148,16 @@ module.exports = function(callback) {\nmtime: stats.mtime.getTime()\n};\n}\n- if (--len <= 0) {\n- cb();\n+ if (--len === 0) {\n+ list.forEach(function(item) {\n+ if (item && !result[item.name]) {\n+ result[item.name] = item;\n}\n});\n- });\n-\n- if (!len) {\ncb();\n}\n+ });\n+ });\n}, plugins, isCustom);\n};\nvar index = 0;\n",
        "chatgpt_rag": "fix: update function name in replace method"
    },
    {
        "msg": "chore(actions/utils): update comment on Awral",
        "diff": "diff --git a/src/common/actions/utils/index.js b/src/common/actions/utils/index.js @@ -14,8 +14,10 @@ const beforeCheck = a => a\nconst afterCheck = a => a.data\n/**\nCreate default Awral\n- Awral is my own tool.\n- It's not well known, but it can make your work with actions even more simpler.\n+ Awral is not recommended for production usage now\n+ But it can make your work with actions even simpler.\n+ NOTE:I strongly recommend you check Awral sources!\n+ Awral is 880B gzipped!\n{@link https://github.com/Metnew/awral}\n*/\nexport const awral = Awral.of({check, beforeCheck, afterCheck})\n",
        "date": "16.10.2017 18:26:41",
        "repo": "metnew/suicrux",
        "type": "chore",
        "sim_msg": "fix: disable apple pay",
        "sim_diff": "diff --git a/src/store/modules/app/actions.js b/src/store/modules/app/actions.js @@ -94,7 +94,7 @@ export const actions = {\nopenTransakWidgetTab: ({ dispatch }, { chain, asset, address }) => {\nconst widgetUrl = process.env.VUE_APP_TRANSAK_WIDGET_URL\nconst apiKey = process.env.VUE_APP_TRANSAK_API_KEY\n- let url = `${widgetUrl}?apiKey=${apiKey}`\n+ let url = `${widgetUrl}?apiKey=${apiKey}&disablePaymentMethods=apple_pay`\nif (asset) {\nurl = `${url}&cryptoCurrencyCode=${asset}`\n}\n",
        "chatgpt_rag": "refactor: update Awral usage message and recommendation"
    },
    {
        "msg": "chore: bump `sirv` version",
        "diff": "diff --git a/package.json b/package.json \"rollup-plugin-preserve-shebang\": \"^1.0.0\",\n\"sade\": \"^1.7.3\",\n\"semver\": \"^7.3.2\",\n- \"sirv\": \"^0.4.6\",\n+ \"sirv\": \"^1.0.0\",\n\"tar-stream\": \"^2.1.2\",\n\"terser\": \"^4.7.0\",\n\"tiny-glob\": \"^0.2.6\",\n",
        "date": "10.06.2020 16:54:35",
        "repo": "preactjs/wmr",
        "type": "chore",
        "sim_msg": "chore(dependencies): revert rollup-umd-scripts to latest public version",
        "sim_diff": "diff --git a/package.json b/package.json \"rollup-plugin-replace\": \"^2.1.0\",\n\"rollup-plugin-terser\": \"^4.0.1\",\n\"rollup-plugin-visualizer\": \"^0.9.2\",\n- \"rollup-umd-scripts\": \"^0.14.2\",\n+ \"rollup-umd-scripts\": \"^0.13.0\",\n\"rollup-watch\": \"^4.3.1\",\n\"semantic-release\": \"^15.13.2\",\n\"sinon\": \"^7.2.2\",\n",
        "chatgpt_rag": "chore(dependencies): update sirv to version 1.0.0"
    },
    {
        "msg": "chore: point installs to yarn registry",
        "diff": "diff --git a/yarn.lock b/yarn.lock \"@fortawesome/fontawesome-common-types@^0.2.28\":\nversion \"0.2.28\"\n- resolved \"https://npm.fontawesome.com/@fortawesome/fontawesome-common-types/-/0.2.28/fontawesome-common-types-0.2.28.tgz#1091bdfe63b3f139441e9cba27aa022bff97d8b2\"\n+ resolved \"https://registry.yarnpkg.com/@fortawesome/fontawesome-common-types/-/0.2.28/fontawesome-common-types-0.2.28.tgz#1091bdfe63b3f139441e9cba27aa022bff97d8b2\"\nintegrity sha512-gtis2/5yLdfI6n0ia0jH7NJs5i/Z/8M/ZbQL6jXQhCthEOe5Cr5NcQPhgTvFxNOtURE03/ZqUcEskdn2M+QaBg==\n\"@fortawesome/free-brands-svg-icons@^5.12.0\":\nversion \"5.13.0\"\n- resolved \"https://npm.fontawesome.com/@fortawesome/free-brands-svg-icons/-/5.13.0/free-brands-svg-icons-5.13.0.tgz#e79de73ba6555055204828dca9c0691e7ce5242b\"\n+ resolved \"https://registry.yarnpkg.com/@fortawesome/free-brands-svg-icons/-/5.13.0/free-brands-svg-icons-5.13.0.tgz#e79de73ba6555055204828dca9c0691e7ce5242b\"\nintegrity sha512-/6xXiJFCMEQxqxXbL0FPJpwq5Cv6MRrjsbJEmH/t5vOvB4dILDpnY0f7zZSlA8+TG7jwlt12miF/yZpZkykucA==\ndependencies:\n\"@fortawesome/fontawesome-common-types\" \"^0.2.28\"\n\"@fortawesome/free-solid-svg-icons@^5.11.2\":\nversion \"5.13.0\"\n- resolved \"https://npm.fontawesome.com/@fortawesome/free-solid-svg-icons/-/5.13.0/free-solid-svg-icons-5.13.0.tgz#44d9118668ad96b4fd5c9434a43efc5903525739\"\n+ resolved \"https://registry.yarnpkg.com/@fortawesome/free-solid-svg-icons/-/5.13.0/free-solid-svg-icons-5.13.0.tgz#44d9118668ad96b4fd5c9434a43efc5903525739\"\nintegrity sha512-IHUgDJdomv6YtG4p3zl1B5wWf9ffinHIvebqQOmV3U+3SLw4fC+LUCCgwfETkbTtjy5/Qws2VoVf6z/ETQpFpg==\ndependencies:\n\"@fortawesome/fontawesome-common-types\" \"^0.2.28\"\n",
        "date": "22.12.2020 17:59:43",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "chore: yarn lock updated",
        "sim_diff": "diff --git a/yarn.lock b/yarn.lock fs-extra \"6.0.0\"\nglob \"7.1.2\"\n-\"@times-components/context@1.1.14\":\n- version \"1.1.14\"\n- resolved \"https://registry.yarnpkg.com/@times-components/context/-/context-1.1.14.tgz#9a9d15ade0957b95bc2159f5dda4649789b9080a\"\n- integrity sha512-NJ3b7aiDD6JW7oDjIqE/TdMg/atrS/nRovg8NoecclcuxR4lzYwWV6WkT6mtZLiRrtJ//rGFY1eFB4Nd59e4zQ==\n- dependencies:\n- \"@times-components/styleguide\" \"3.31.0\"\n-\n-\"@times-components/responsive@0.5.4\":\n- version \"0.5.4\"\n- resolved \"https://registry.yarnpkg.com/@times-components/responsive/-/responsive-0.5.4.tgz#86d5fda49299014e85dece2612cc5ea35247c20c\"\n- integrity sha512-H7WbuikdavO5+QTImrQN2g8js2cCficEa0/rR2ZhJ9Z0/nNaAykBguuLdmSehTvJ4g7LrMN+Y8TldHOARq6k4w==\n- dependencies:\n- \"@times-components/styleguide\" \"3.31.0\"\n- \"@times-components/utils\" \"5.1.8\"\n- prop-types \"15.7.2\"\n-\n-\"@times-components/storybook@4.1.8\":\n- version \"4.1.8\"\n- resolved \"https://registry.yarnpkg.com/@times-components/storybook/-/storybook-4.1.8.tgz#dc0b5994442e2f0b009827b2f5247aaee1b7cbdd\"\n- integrity sha512-EU766ivMwdxl9Y3P+TiGFLtJHf9ZqL1rIcBb9FnVLxb9bG6lbxOlHr1gxvMiVXiZQKXlDKjlo+9cJEynPBdYoQ==\n- dependencies:\n- \"@babel/core\" \"7.4.4\"\n- \"@storybook/addon-actions\" \"4.1.18\"\n- \"@storybook/addon-knobs\" \"4.1.18\"\n- \"@storybook/react-native\" \"4.1.18\"\n- \"@times-components/schema\" \"0.6.23\"\n- \"@times-components/user-state\" \"0.1.4\"\n- apollo-cache-inmemory \"1.5.1\"\n- apollo-client \"2.5.1\"\n- apollo-link-http \"1.5.14\"\n- prop-types \"15.7.2\"\n- react \"16.9.0\"\n- react-apollo \"2.5.5\"\n- react-helmet-async \"1.0.2\"\n- react-test-renderer \"16.9.0\"\n- styled-components \"4.3.2\"\n-\n-\"@times-components/styleguide@3.31.0\":\n- version \"3.31.0\"\n- resolved \"https://registry.yarnpkg.com/@times-components/styleguide/-/styleguide-3.31.0.tgz#155f0242d2755bb6322a15cef1ddd915cbb861d6\"\n- integrity sha512-3LCI6JHfxugW0AxkWRALZXiejH48UxpGgsQ+w9xVcjc2/Sfg+c6pM6vZqPIclkuUr9rFyfYe4JpHnQ2157jz5w==\n- dependencies:\n- prop-types \"15.7.2\"\n- styled-components \"4.3.2\"\n-\n-\"@times-components/user-state@0.1.4\":\n- version \"0.1.4\"\n- resolved \"https://registry.yarnpkg.com/@times-components/user-state/-/user-state-0.1.4.tgz#463efd431d57b04a7d5e7254b494c48ee1abb26f\"\n- integrity sha512-wrRfCl3IbOhlpEwfM0A9OavSatPKpap7YnqJY6YkSc5KniGe9iMvzX3eDhDynk3+1Z/DHwCsMkNKVsQ1f5GOIg==\n- dependencies:\n- \"@storybook/addon-knobs\" \"4.1.18\"\n- \"@times-components/context\" \"1.1.14\"\n- \"@times-components/utils\" \"5.1.8\"\n- prop-types \"15.7.2\"\n-\n-\"@times-components/utils@5.1.8\":\n- version \"5.1.8\"\n- resolved \"https://registry.yarnpkg.com/@times-components/utils/-/utils-5.1.8.tgz#559ef470d1789c118b044c9329bb09c6322691fd\"\n- integrity sha512-ziaLa/cTr2XjL9fsol3vWQ0DzbMKZehk+0Ax97a0MTN6f4ZGizJYLCT4k2x3OxSA+Xj+s5FyDdBjxVlzHPKkJw==\n- dependencies:\n- \"@times-components/schema\" \"0.6.23\"\n- \"@times-components/styleguide\" \"3.31.0\"\n- apollo-cache-inmemory \"1.5.1\"\n- apollo-client \"2.5.1\"\n- apollo-link-http \"1.5.14\"\n- lodash.omitby \"4.6.0\"\n- prop-types \"15.7.2\"\n- react-native \"0.61.1\"\n- styled-components \"4.3.2\"\n- unfetch \"^3.0.0\"\n-\n\"@types/accepts@^1.3.5\":\nversion \"1.3.5\"\nresolved \"https://registry.yarnpkg.com/@types/accepts/-/accepts-1.3.5.tgz#c34bec115cfc746e04fe5a059df4ce7e7b391575\"\n",
        "chatgpt_rag": "chore: update yarn lock file for fontawesome packages"
    },
    {
        "msg": "chore(testing): example of testing with supplied args",
        "diff": "diff --git a/src/features/dataset-controls/DatasetSelector.test.js b/src/features/dataset-controls/DatasetSelector.test.js @@ -17,7 +17,7 @@ const empty = {name: \"None\", url:\" \"};\nconst change = (target) => {\n}\n-const event = {\"target\": {\"name\": \"ds3\", \"url\":\"test3.url\"}};\n+const event = {\"target\": {value:\"test3.url\"}};\ndescribe('DatasetSelector', () => {\nit('renders the control', () => {\nconst selector = mount(<DatasetSelector\n@@ -31,15 +31,18 @@ describe('DatasetSelector', () => {\n});\nit('changes the selection', () => {\n- const onChange = sinon.stub()\n+ const fakeOnChange = (evt) =>{\n+\n+ }\n+ const onChangeSpy = sinon.spy(fakeOnChange);\nconst selector = mount(<DatasetSelector\nclassName={style.selector}\nselected={empty}\n- onChange={onChange}\n+ onChange={onChangeSpy}\ndatasets={datasets}\n/>);\n- selector.find('select').first().simulate(\"change\", event);\n- expect(onChange.calledOnce).to.equal(true);\n+ selector.find('select').first().simulate('change', event);\n+ expect(onChangeSpy.calledWith(datasets[2])).to.equal(true);\n});\n});\n\\ No newline at end of file\n",
        "date": "10.07.2018 15:44:43",
        "repo": "iqtlabs/crviz",
        "type": "chore",
        "sim_msg": "test: ensure Wrapper.setSelected() idempotency",
        "sim_diff": "diff --git a/test/specs/wrapper/setSelected.spec.js b/test/specs/wrapper/setSelected.spec.js @@ -39,6 +39,38 @@ describeWithShallowAndMount('setSelected', mountingMethod => {\nexpect(wrapper.text()).to.contain('selectA')\n})\n+ it('should trigger a change event on the parent <select>', () => {\n+ const change = sinon.spy()\n+\n+ mountingMethod({\n+ template: `\n+ <select @change=\"change\">\n+ <option />\n+ <option value=\"foo\" />\n+ </select>\n+ `,\n+ methods: { change },\n+ }).findAll('option').at(1).setSelected()\n+\n+ expect(change).to.have.been.called\n+ });\n+\n+ it('should not trigger an event if already selected', () => {\n+ const change = sinon.spy()\n+\n+ mountingMethod({\n+ template: `\n+ <select @change=\"change\">\n+ <option />\n+ <option selected value=\"foo\" />\n+ </select>\n+ `,\n+ methods: { change },\n+ }).findAll('option').at(1).setSelected()\n+\n+ expect(change).not.to.have.been.called\n+ });\n+\nit('throws error if element is not valid', () => {\nconst message = 'wrapper.setSelected() cannot be called on this element'\n",
        "chatgpt_rag": "test: ensure DatasetSelector onChangeSpy called with correct dataset value"
    },
    {
        "msg": "chore(actions/utils): add comment about Awral",
        "diff": "diff --git a/src/common/actions/utils/index.js b/src/common/actions/utils/index.js @@ -12,5 +12,10 @@ import Awral from 'awral'\nconst check = (result: Object = {ok: false}): boolean => result.ok\nconst beforeCheck = a => a\nconst afterCheck = a => a.data\n-// Create default Awral\n+/**\n+ Create default Awral\n+ Awral is my own tool.\n+ It's not well known, but it can make your work with actions even more simpler.\n+ {@link https://github.com/Metnew/awral}\n+*/\nexport const awral = Awral.of({check, beforeCheck, afterCheck})\n",
        "date": "13.10.2017 16:52:31",
        "repo": "metnew/suicrux",
        "type": "chore",
        "sim_msg": "chore(uuid): add return type to `validate`",
        "sim_diff": "diff --git a/uuid/mod.ts b/uuid/mod.ts @@ -33,7 +33,7 @@ export function isNil(id: string): boolean {\n* validate(\"6ec0bd7f-11c0-43da-975e-2a8ad9ebae0b\") // true\n* ```\n*/\n-export function validate(uuid: string) {\n+export function validate(uuid: string): boolean {\nreturn /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i\n.test(\nuuid,\n",
        "chatgpt_rag": "chore(actions): update comments for `awral` function in utils"
    },
    {
        "msg": "chore: fix typo in image mark docs",
        "diff": "diff --git a/docs/docs/marks/image.md b/docs/docs/marks/image.md @@ -17,7 +17,7 @@ permalink: /docs/marks/image/index.html\n| url | {% include type t=\"URL\" %} | The URL of the image file. |\n| image | [Canvas](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas) \\| [Image](https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement/Image) | The image instance to show. This property can be used to include dynamically generated images. This property is ignored if _url_ is specified. {% include tag ver=\"5.8\" %} |\n| aspect | {% include type t=\"Boolean\" %} | A boolean flag (default `true`) indicating if the image aspect ratio should be preserved across sizes. If `true` and only one of the dimensional (*width* or *height*) properties are defined, the other dimensional property will be calculated to match the aspect ratio of the loaded image file. |\n-| smooth | {% include type t=\"Boolean\" %} | A boolean flag (default `true`) indicating if the image should be smoothed when resized. If `false`, indvidual pixels should be scaled directly rather than interpolated with smoothing. For SVG rendering, this option may not work in some browsers due to lack of standardization. {% include tag ver=\"5.8\" %} |\n+| smooth | {% include type t=\"Boolean\" %} | A boolean flag (default `true`) indicating if the image should be smoothed when resized. If `false`, individual pixels should be scaled directly rather than interpolated with smoothing. For SVG rendering, this option may not work in some browsers due to lack of standardization. {% include tag ver=\"5.8\" %} |\n| align | {% include type t=\"String\" %} | The horizontal alignment of the image. One of `left`, `center`, or `right`. The default value is `left`. |\n| baseline | {% include type t=\"String\" %} | The vertical alignment of the image. One of `top`, `middle`, or `bottom`. The default value is `top`. |\n",
        "date": "13.09.2020 15:30:54",
        "repo": "vega/vega",
        "type": "chore",
        "sim_msg": "feat(pixels): add my new pixel (26, 1)",
        "sim_diff": "diff --git a/_data/pixels.json b/_data/pixels.json {\"y\": 1, \"x\": 20, \"color\": \"#9B59D0\", \"username\": \"memitaru\"},\n{\"y\": 1, \"x\": 21, \"color\": \"#33FFFA\", \"username\": \"sogbog\"},\n{\"y\": 1, \"x\": 25, \"color\": \"#D46211\", \"username\": \"kefimochi\"},\n+ {\"y\": 1, \"x\": 26, \"color\": \"#ff6347\", \"username\": \"luisFilipePT\"},\n{\"y\": 1, \"x\": 38, \"color\": \"#FF8C00\", \"username\": \"mlomboglia\"},\n{\"y\": 1, \"x\": 39, \"color\": \"#72972C\", \"username\": \"josh-\"},\n{\"y\": 2, \"x\": 0, \"color\": \"#17bf82\", \"username\": \"veltaine\"},\n",
        "chatgpt_rag": "fix(docs): correct typo in image.md file\n\nThe commit fixes a typo in the image.md file where \"indvidual\" was corrected to \"individual\" for better clarity and correctness."
    },
    {
        "msg": "chore: publish command",
        "diff": "diff --git a/package.json b/package.json \"test:core\": \"jest\",\n\"test:module\": \"yarn workspace @chakra-ui/nuxt test\",\n\"test\": \"yarn test:core && yarn test:module\",\n- \"release\": \"changeset publish\",\n+ \"release\": \"yarn changeset publish\",\n\"clean\": \"lerna run clean\",\n\"storybook\": \"cross-env STORYBOOK_VUE_DEV_TOOLS=1 start-storybook -p 9000\",\n\"storybook:devtools\": \"vue-devtools\",\n",
        "date": "31.12.2020 15:35:20",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "chore: try to fix release process (ref",
        "sim_diff": "diff --git a/package.json b/package.json \"scripts\": {\n\"build\": \"lerna run build\",\n\"test\": \"lerna run test\",\n- \"postversion\": \"yarn build\",\n- \"release\": \"yarn test && lerna publish\",\n+ \"postversion\": \"lerna run build\",\n+ \"release\": \"lerna run test && lerna publish\",\n\"start\": \"lerna exec --scope=simplebar yarn start\",\n\"dev\": \"lerna exec --scope=simplebar yarn dev\"\n},\n",
        "chatgpt_rag": "chore: update release script to use yarn for changeset publishing"
    },
    {
        "msg": "chore: update link",
        "diff": "diff --git a/README.md b/README.md @@ -145,7 +145,7 @@ export default {\nYou can also view all developed components in **[Storybook](https://chakra-ui-vue.netlify.com)!**\n### Development for Contributing:\n-Interested in contributing? See our [open issues](/issues)! Remember to take a look at our [CONTRIBUTORS](../../.github/CONTRIBUTING.md) guide.\n+Interested in contributing? See our [open issues](https://github.com/chakra-ui/chakra-ui-vue/issues)! Remember to take a look at our [CONTRIBUTORS](../../.github/CONTRIBUTING.md) guide.\n```bash\nyarn install\n",
        "date": "17.03.2020 12:44:04",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "docs: give documentation a higher priority",
        "sim_diff": "diff --git a/README.md b/README.md yarn add vuepress -D\n```\n+## Documentation\n+\n+Check out our docs at https://vuepress.vuejs.org/.\n+\n## Showcase\n- [Awesome VuePress](https://github.com/ulivz/awesome-vuepress)\n- [vuepress.gallery](https://vuepress.gallery) (by [@vicbergquist](https://twitter.com/vicbergquist))\n- [vuepress.tools](https://vuepress.tools/) (By [Ahmad Mostafa](https://ahmadmostafa.com))\n-## Documentation\n-\n-Check out our docs at https://vuepress.vuejs.org/.\n-\n## Contribution\nWant to contribute? Check our [issues for beginners](https://github.com/vuejs/vuepress/issues?q=is%3Aopen+is%3Aissue+label%3A%22good+first+issue%22)!\n",
        "chatgpt_rag": "docs: update link to open issues in README for contributing section"
    },
    {
        "msg": "chore: add supporters",
        "diff": "diff --git a/website/index.html b/website/index.html href='https://inkedin.com/free-spins-no-deposit/'><img src='https://logo.clearbit.com/inkedin.com'\nstyle='object-fit: contain; float: left; margin:12px' height='120' width='120'></a><a\nhref='https://www.newcasinosaustralia.com/'><img src='https://logo.clearbit.com/newcasinosaustralia.com'\n+ style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a><a\n+ href='https://casinostranieri.net/'><img\n+ src='https://opencollective-production.s3.us-west-1.amazonaws.com/7aae8900-0c02-11ed-9aa8-2bd811fd6f10.png'\n+ style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a><a\n+ href='https://goread.io/buy-instagram-followers'><img\n+ src='https://opencollective-production.s3.us-west-1.amazonaws.com/7d1302a0-0f33-11ed-a094-3dca78aec7cd.png'\nstyle='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>\n</div>\n</div>\n",
        "date": "29.07.2022 13:12:15",
        "repo": "remy/nodemon",
        "type": "chore",
        "sim_msg": "fix: sample index",
        "sim_diff": "diff --git a/sample/index.html b/sample/index.html </ul>\n<p><br></p>\n</textarea>\n- </>\n+ </div>\n<div id=\"inline\" class=\"tabcontent\">\n<div class=\"inline-margin\"></div>\n<div class=\"se-component se-image-container __se__float-right\" contenteditable=\"false\"><figure style=\"margin: auto;\"><img src=\"http://suneditor.com/docs/cat2.jpg\" data-align=\"right\" alt=\"Sunset image\" data-rotate=\"\" data-proportion=\"false\" data-rotatex=\"\" data-rotatey=\"\" origin-size=\"640,959\" data-origin=\"640,959\" style=\"width: 640px; max-width: 100%;\"><figcaption contenteditable=\"true\" style=\"margin-top: 0px;\"><p>Insert description</p></figcaption></figure></div>\n<p><br></p>\n</textarea>\n- </Supports>\n+ </div>\n- < id=\"balloon\" class=\"tabcontent\">\n+ <div id=\"balloon\" class=\"tabcontent\">\n<div class=\"inline-margin\"></div>\n<textarea id=\"editor_balloon\" style=\"display:none;\">\n<p><br></p>\n",
        "chatgpt_rag": "feat: update website index with new images and links"
    },
    {
        "msg": "chore(package): remove -- arg separator",
        "diff": "diff --git a/package.json b/package.json \"deploy:docs\": \"gh-pages -d docs/build -m 'deploy docs [ci skip]'\",\n\"postdeploy:docs\": \"yarn build:changelog && yarn deploy:changelog\",\n\"lint\": \"cross-env NODE_ENV=production eslint .\",\n- \"lint:fix\": \"yarn lint -- --fix\",\n+ \"lint:fix\": \"yarn lint --fix\",\n\"prerelease\": \"yarn lint && yarn tsd:lint && yarn tsd:test && yarn test && cross-env NODE_ENV=production yarn build\",\n\"postrelease\": \"yarn deploy:docs\",\n\"release:major\": \"yarn prerelease && ta-script npm/release major && yarn postrelease\",\n\"release:minor\": \"yarn prerelease && ta-script npm/release minor && yarn postrelease\",\n\"release:patch\": \"yarn prerelease && ta-script npm/release patch && yarn postrelease\",\n- \"prestart\": \"yarn satisfied -- --fix yarn\",\n+ \"prestart\": \"yarn satisfied --fix yarn\",\n\"start\": \"yarn docs\",\n\"satisfied\": \"satisfied --skip-invalid\",\n\"pretest\": \"yarn satisfied && yarn build:dll\",\n\"test\": \"cross-env NODE_ENV=test node -r babel-register ./node_modules/karma/bin/karma start karma.conf.babel.js\",\n- \"test:watch\": \"yarn test -- --no-single-run\",\n+ \"test:watch\": \"yarn test --no-single-run\",\n\"tsd\": \"gulp tsd\",\n\"tsd:lint\": \"tslint './index.d.ts' './src/**/*.d.ts' './src/**/*.tsx' './test/**/*.d.ts' './test/**/*.tsx'\",\n- \"tsd:lint:fix\": \"yarn tsd:lint -- --fix\",\n+ \"tsd:lint:fix\": \"yarn tsd:lint --fix\",\n\"tsd:test\": \"yarn tsd && tsc -p ./ && rm test/typings.js\"\n},\n\"repository\": {\n",
        "date": "19.10.2017 18:04:47",
        "repo": "semantic-org/semantic-ui-react",
        "type": "chore",
        "sim_msg": "chore(repo): remove the headless flag",
        "sim_diff": "diff --git a/packages/react/package.json b/packages/react/package.json \"lint\": \"yarn lint:javascript && yarn lint:stylelint\",\n\"lint:javascript\": \"eslint --ext .jsx --ext .js .\",\n\"lint:stylelint\": \"stylelint './src/**/*.scss' --syntax scss --ignorePath .gitignore --custom-formatter ./config/stylelint/sassMsgFormatter.js\",\n- \"pre-commit\": \"yarn svg-convert && yarn lint-staged && yarn test:base && yarn test:e2e && yarn reports\",\n+ \"pre-commit\": \"yarn svg-convert && yarn lint-staged && yarn reports:clean && yarn test:base && yarn test:e2e && yarn reports\",\n\"postinstall\": \"carbon-telemetry collect --install\",\n\"start\": \"yarn test:engines && yarn storybook\",\n\"storybook\": \"yarn test:engines && start-storybook -p 3000 -s public/development\",\n\"test:engines\": \"check-node-version --node $(cat ../../.nvmrc) --yarn 1.x\",\n\"test:ci\": \"yarn test --ci --logHeapUsage --coverage\",\n\"test:e2e:update\": \"cypress-image-diff -u\",\n- \"test:e2e\": \"cross-env BABEL_ENV='e2e' NODE_ENV='e2e' cypress run-ct --browser chrome --headless --config video=false,screenshotOnRunFailure=false\",\n+ \"test:e2e\": \"cross-env BABEL_ENV='e2e' NODE_ENV='e2e' cypress run-ct --browser chrome --config video=false,screenshotOnRunFailure=false\",\n\"test:e2e:interactive\": \"cross-env BABEL_ENV='e2e' NODE_ENV='e2e' cypress open-ct --browser chrome --config video=false,screenshotOnRunFailure=false\",\n\"test:e2e:ci\": \"cross-env BABEL_ENV='e2e' NODE_ENV='e2e' cypress run-ct --browser chrome --headless --config --record video=false,screenshotOnRunFailure=false\",\n\"reports:clean\": \"rimraf .nyc_output reports coverage\",\n",
        "chatgpt_rag": "chore(repo): update lint:fix script to remove unnecessary double dash"
    },
    {
        "msg": "chore: update to WHATWG url api",
        "diff": "diff --git a/lib/util.js b/lib/util.js var fs = require('fs'),\n- url = require('url'),\n+ { URL } = require('url'),\n_ = require('lodash'),\nchardet = require('chardet'),\n@@ -191,7 +191,7 @@ util = {\nresource = 'resource';\nif (response.statusCode !== 200) {\n- urlObj = url.parse(location);\n+ urlObj = new URL(location);\n(urlObj.hostname === POSTMAN_API_HOST) &&\n(resource = _(urlObj.path).split('/').get(1).slice(0, -1) || resource);\n",
        "date": "23.03.2021 12:22:42",
        "repo": "postmanlabs/newman",
        "type": "chore",
        "sim_msg": "fix: The req.headers dose not have host field",
        "sim_diff": "diff --git a/lib/util/index.js b/lib/util/index.js @@ -359,10 +359,14 @@ exports.toRegExp = function toRegExp(regExp) {\n};\nfunction getFullUrl(req) {\n+ var host = req.headers.host;\nif (hasProtocol(req.url)) {\n- req.url = url.parse(req.url).path;\n+ var options = url.parse(req.url);\n+ req.url = options.path;\n+ if (!host) {\n+ host = req.headers.host = options.host;\n+ }\n}\n- var host = req.headers.host;\nif (host) {\nhost = req.isHttps ? host.replace(/:443$/, '') : host.replace(/:80$/, '');\n}\n",
        "chatgpt_rag": "fix: Replace deprecated url.parse with new URL constructor in lib/util.js"
    },
    {
        "msg": "chore: use travis CI's new conditional 'if' to check for tag",
        "diff": "diff --git a/.travis.yml b/.travis.yml @@ -24,16 +24,13 @@ branches:\njobs:\ninclude:\n- stage: deploy\n+ if: tag IS present\nnode_js: 12\nbefore_script:\n- chmod +x scripts/docs\nscript: echo \"Deploying ...\"\nafter_success:\n- scripts/docs\n- branches:\n- only:\n- - master\n- - \"/^\\\\d+\\\\.\\\\d+(\\\\.\\\\d+)?(-\\\\S*)?$/\"\nbefore_deploy:\n- echo 'Preparing to publish'\n- npm run build\n",
        "date": "15.01.2020 20:32:33",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "sim_msg": "chore(META): change travis",
        "sim_diff": "diff --git a/.travis.yml b/.travis.yml @@ -18,18 +18,21 @@ script:\njobs:\ninclude:\n- stage: Deploy PR\n+ env:\n+ - NODE_ENV=production\nif: type = pull_request\nscript:\n- npm install --only=dev --force-online\n- npm run deploy:pr\n- stage: deploy pro\n+ env:\n+ - NODE_ENV=production\nif: branch = master AND NOT type = pull_request\nscript:\n- npm install --only=dev --force-online\n- npm run deploy\nenv:\nglobal:\n- - NODE_ENV=production\n- secure: >-\nLjGXe1DETl1mF8P4UD8X1gw6IFrDCKYq/AVP2Rbx8o9OvZ2k7r3+MpRKh6rbMgG/50pfb7MsJXs1Z/Cfgox4+2st6mYKpVcbRaJ7As7DV5ERtrMqM1wIIQObXx+416/cgzp/ESdYQ3ZV5y5xnEe/6IvIXIIjP7Is4pGtTtVllucuf71y85+Cupv2rvauxkdGOd72G8GUpg0L7vDwD3+LqCONdGLmZEUGgrf5KVNXTfvmgLY8coHSZYUDtbmedxMjwEF+j9GkcotlZeX9bDsHgNz/cq8Qs6g4KyeknQKoTfzN39dxcS8r1RA1k0ZXWpuFND9ruJCYcmkhNDiaFqyOKQ5Two298AhUbTZgftsTNFFaM1FkXm+Z+FexJa7Q76bHUrRcKKFJeNZHdbuJD/m9cwYQyOIpKGczOCpJJQu++eeQO+VMLYHxAVlzGZ6ThlRSGHaP1nB9v2A76NPJp9yemyiBCmQ/VYrloXiO9IMV/qqHU2ripx59w6RtAKN/6qqptrpkFgb4COdqSHUEjTwdWIAbDpgs98D1gW0RPoTPMhs+Uq33EM3ar0lZW9A+YkFJBjxysSRe1J7/f+Do5zxMVxIDdKL4CTzp+URG4njKZ/ye3uAl0qU1xXQg+h3K9Wt1hi9ogHJizAPE4J8T89BzwvGNdNSpcnOQ1yWx/R3C+Ec=\n",
        "chatgpt_rag": "chore(META): update travis configuration for deployment with tag present"
    },
    {
        "msg": "chore: add default app in the e2e script",
        "diff": "diff --git a/package.json b/package.json \"deploy:alpha:soft\": \"npm run test && npm run deploy-prepare && npm run git-commit-tag && npx lerna publish from-package --dist-tag alpha --yes\",\n\"deploy:feat\": \"npm run test && npm run deploy-prepare && npm run git-commit-tag && npx lerna publish from-package --dist-tag feat --yes && git push origin HEAD\",\n\"deploy:prod\": \"npm run deploy-all && npx lerna publish from-package --yes && git push origin HEAD\",\n- \"e2e-hello-world-ios\": \"cd packages/renative-template-hello-world && npx rnv build -p ios -s test && yarn e2e:ios\",\n- \"e2e-hello-world-android\": \"cd packages/renative-template-hello-world && npx rnv build -p android -s test && yarn e2e:android\",\n- \"e2e-hello-world-tvos\": \"cd packages/renative-template-hello-world && npx rnv build -p tvos -s test && yarn e2e:tvos\",\n- \"e2e-hello-world-androidtv\": \"cd packages/renative-template-hello-world && npx rnv build -p androidtv -s test && yarn e2e:androidtv\",\n- \"e2e-hello-world-macos\": \"cd packages/renative-template-hello-world && npx rnv build -p macos -s test && yarn e2e:macos\",\n- \"e2e-hello-world-web\": \"cd packages/renative-template-hello-world && npx rnv start -p web -s test & sleep 60 && cd packages/renative-template-hello-world && yarn e2e:web && kill $(lsof -t -i:8080)\",\n+ \"e2e-hello-world-ios\": \"cd packages/renative-template-hello-world && npx rnv build -p ios -s test -c template && yarn e2e:ios\",\n+ \"e2e-hello-world-android\": \"cd packages/renative-template-hello-world && npx rnv build -p android -s test -c template && yarn e2e:android\",\n+ \"e2e-hello-world-tvos\": \"cd packages/renative-template-hello-world && npx rnv build -p tvos -s test -c template && yarn e2e:tvos\",\n+ \"e2e-hello-world-androidtv\": \"cd packages/renative-template-hello-world && npx rnv build -p androidtv -s test -c template && yarn e2e:androidtv\",\n+ \"e2e-hello-world-macos\": \"cd packages/renative-template-hello-world && npx rnv build -p macos -s test -c template && yarn e2e:macos\",\n+ \"e2e-hello-world-web\": \"cd packages/renative-template-hello-world && npx rnv start -p web -s test -c template & sleep 60 && cd packages/renative-template-hello-world && yarn e2e:web && kill $(lsof -t -i:8080)\",\n\"git-commit\": \"rnv hooks run -x gitCommit -r\",\n\"git-commit-tag\": \"rnv hooks run -x gitCommitAndTag -r\",\n\"git-tag\": \"rnv hooks run -x gitTag -r\",\n",
        "date": "01.03.2022 18:04:55",
        "repo": "pavjacko/renative",
        "type": "chore",
        "sim_msg": "chore(build): Remove invalid circleCI keys",
        "sim_diff": "diff --git a/.circleci/config.yml b/.circleci/config.yml @@ -45,7 +45,6 @@ defaults-cypress: &defaults-cypress\njobs:\ncheckout:\n<<: *defaults-js\n- name: Checkout Project\nsteps:\n- checkout\n- run: *setup-artifacts\n@@ -55,7 +54,6 @@ jobs:\ninstall:\n<<: *defaults-js\n- name: Install Project Dependencies\nsteps:\n- attach_workspace:\nat: ~/podlove-web-player\n@@ -73,7 +71,6 @@ jobs:\ndocs-dev:\n<<: *defaults-js\n- name: Generating Documentation\nsteps:\n- attach_workspace:\nat: ~/podlove-web-player\n@@ -88,7 +85,6 @@ jobs:\ndocs-prod:\n<<: *defaults-js\n- name: Generating Documentation\nsteps:\n- attach_workspace:\nat: ~/podlove-web-player\n@@ -103,7 +99,6 @@ jobs:\nbuild-dev:\n<<: *defaults-js\n- name: Building Project\nsteps:\n- attach_workspace:\nat: ~/podlove-web-player\n@@ -114,7 +109,6 @@ jobs:\nbuild-prod:\n<<: *defaults-js\n- name: Building Project\nsteps:\n- attach_workspace:\nat: ~/podlove-web-player\n@@ -125,7 +119,6 @@ jobs:\ntest-lint:\n<<: *defaults-js\n- name: Linting Project\nsteps:\n- attach_workspace:\nat: ~/podlove-web-player\n@@ -137,7 +130,6 @@ jobs:\ntest-unit:\n<<: *defaults-js\n- name: Unit Tests\nsteps:\n- attach_workspace:\nat: ~/podlove-web-player\n@@ -150,7 +142,6 @@ jobs:\ntest-build:\n<<: *defaults-js\n- name: Unit Tests\nsteps:\n- attach_workspace:\nat: ~/podlove-web-player\n@@ -158,7 +149,6 @@ jobs:\ntest-integration:\n<<: *defaults-cypress\n- name: Integration Tests\nsteps:\n- attach_workspace:\nat: ~/podlove-web-player\n@@ -172,7 +162,6 @@ jobs:\ngreenkeeper:\n<<: *defaults-js\n- name: Updating Greenkeeper Lockfile\nsteps:\n- attach_workspace:\nat: ~/podlove-web-player\n@@ -182,7 +171,6 @@ jobs:\ndeploy-staging:\n<<: *defaults-js\n- name: Deploying to podlove-player.surge.sh\nsteps:\n- attach_workspace:\nat: ~/podlove-web-player\n@@ -191,7 +179,6 @@ jobs:\ndeploy-production:\n<<: *defaults-js\n- name: Deploying to docs.podlove.org/podlove-web-player\nsteps:\n- attach_workspace:\nat: ~/podlove-web-player\n@@ -201,7 +188,6 @@ jobs:\npublish-npm:\n<<: *defaults-js\n- name: Publish npm package\nsteps:\n- attach_workspace:\nat: ~/podlove-web-player\n@@ -213,7 +199,6 @@ jobs:\npublish-cdn:\n<<: *defaults-js\n- name: Publish to cdn.podlove.org\nsteps:\n- attach_workspace:\nat: ~/podlove-web-player\n",
        "chatgpt_rag": "chore(e2e): Update e2e scripts for renative-template-hello-world with template flag"
    },
    {
        "msg": "chore(optimize): always stringify `toImport` output",
        "diff": "diff --git a/src/plugins/optimize-graph-plugin.js b/src/plugins/optimize-graph-plugin.js @@ -176,7 +176,7 @@ class ChunkGraph {\nlet rep = typeof newUrl === 'function' ? newUrl(url, fn, quote) : newUrl;\nif (rep === false) return 'null';\nif (typeof rep === 'string') {\n- rep = JSON.stringify(publicPath ? toImport(publicPath, rep) : rep);\n+ rep = publicPath ? toImport(publicPath, rep) : JSON.stringify(rep);\n}\nreturn `${fn}(${rep})`;\n}\n@@ -187,9 +187,8 @@ class ChunkGraph {\n/**\n* @param {string} publicPath\n* @param {string} filename\n- * @param {boolean} [toJSON]\n*/\n-function toImport(publicPath, filename, toJSON) {\n+function toImport(publicPath, filename) {\nlet value = posix.join(publicPath, filename);\nif (/^(https?:)?\\/\\//.test(publicPath)) {\n@@ -198,7 +197,7 @@ function toImport(publicPath, filename, toJSON) {\nvalue = new URL(filename, root).href.substring(isFull ? 0 : 6);\n}\n- return toJSON ? JSON.stringify(value) : value;\n+ return JSON.stringify(value);\n}\n/**\n@@ -285,7 +284,7 @@ function hoistEntryCss(graph) {\n} else {\n// @TODO: this branch is actually unreachable\nif (DEBUG) console.log(`Hoisting CSS \"${f}\" imported by ${id} into parent HTML.`);\n- const url = toImport(graph.publicPath, f, true);\n+ const url = toImport(graph.publicPath, f);\nasset.source = getAssetSource(asset).replace(/<\\/head>/, `<link rel=\"stylesheet\" href=${url}></head>`);\n}\n}\n@@ -348,7 +347,7 @@ function hoistCascadedCss(graph, { cssMinSize }) {\nparentChunk.code += '\\n' + DEFAULT_STYLE_LOAD_IMPL;\n}\n- const url = toImport(graph.publicPath, fileName, true);\n+ const url = toImport(graph.publicPath, fileName);\nparentChunk.code += `\\n${meta.styleLoadFn}(${url});`;\n}\nbreak;\n@@ -390,7 +389,7 @@ function hoistTransitiveImports(graph) {\nappendCode += '\\n' + DEFAULT_STYLE_LOAD_IMPL;\n}\nif (DEBUG) console.log(`Preloading CSS for import(${spec}): ${css}`);\n- preloads.push(...css.map(f => `${meta.styleLoadFn}(${toImport(graph.publicPath, f, true)})`));\n+ preloads.push(...css.map(f => `${meta.styleLoadFn}(${toImport(graph.publicPath, f)})`));\n}\nconst js = deps.js.get(spec);\n",
        "date": "07.12.2020 10:43:15",
        "repo": "preactjs/wmr",
        "type": "chore",
        "sim_msg": "fix: core-enter key in header tag",
        "sim_diff": "diff --git a/src/lib/core.js b/src/lib/core.js @@ -6188,6 +6188,13 @@ export default function (context, pluginCallButtons, plugins, lang, options, _re\n}\n}\n+ if (!shift && /^H[1-6]$/i.test(formatEl.nodeName)) {\n+ e.preventDefault();\n+ const newFormat = core.appendFormatTag(formatEl, options.defaultTag);\n+ core.setRange(newFormat, 1, newFormat, 1);\n+ break;\n+ }\n+\nif (!shift && freeFormatEl) {\ne.preventDefault();\nconst selectionFormat = selectionNode === freeFormatEl;\n",
        "chatgpt_rag": "refactor: removed unnecessary parameter from toImport function"
    },
    {
        "msg": "chore(UncontrolledNavDropdown): simplify logic\nThis simplifies the deprecated component to just return the preferred component (UncontrolledDropdown) with the nav prop\nThis removes the logic from the deprecated component.",
        "diff": "diff --git a/src/UncontrolledNavDropdown.js b/src/UncontrolledNavDropdown.js -import React, { Component } from 'react';\n+import React from 'react';\nimport { warnOnce } from './utils';\n-import NavDropdown from './NavDropdown';\n+import UncontrolledDropdown from './UncontrolledDropdown';\n-export default class UncontrolledNavDropdown extends Component {\n- constructor(props) {\n- super(props);\n-\n- this.state = { isOpen: false };\n- this.toggle = this.toggle.bind(this);\n- }\n-\n- toggle() {\n- this.setState({ isOpen: !this.state.isOpen });\n- }\n-\n- render() {\n+const UncontrolledNavDropdown = () => {\nwarnOnce('The \"UncontrolledNavDropdown\" component has been deprecated.\\nPlease use component \"UncontrolledDropdown\" with nav prop.');\n- return <NavDropdown isOpen={this.state.isOpen} toggle={this.toggle} {...this.props} />;\n- }\n-}\n+ return <UncontrolledDropdown nav {...this.props} />;\n+};\n+\n+export default UncontrolledNavDropdown;\n",
        "date": "02.02.2018 14:17:43",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "sim_msg": "fix: do not override react-bootstrap's defaultProps for Nav component",
        "sim_diff": "diff --git a/src/Nav/index.jsx b/src/Nav/index.jsx +import React from 'react';\nimport BaseNav from 'react-bootstrap/Nav';\nimport BaseNavDropdown from 'react-bootstrap/NavDropdown';\nimport BaseNavItem from 'react-bootstrap/NavItem';\nimport BaseNavLink from 'react-bootstrap/NavLink';\nimport PropTypes from 'prop-types';\n-const Nav = BaseNav;\n-const NavItem = BaseNavItem;\n-const NavLink = BaseNavLink;\n-const NavDropdown = BaseNavDropdown;\n-const NavDropdownItem = BaseNavDropdown.Item;\n-const NavDropdownDivider = BaseNavDropdown.Divider;\n+const Nav = (props) => <BaseNav {...props} />;\n+const NavItem = (props) => <BaseNavItem {...props} />;\n+const NavLink = (props) => <BaseNavLink {...props} />;\n+const NavDropdown = (props) => <BaseNavDropdown {...props} />;\n+const NavDropdownItem = (props) => <BaseNavDropdown.Item {...props} />;\n+const NavDropdownDivider = (props) => <BaseNavDropdown.Divider {...props} />;\nNav.propTypes = {\n...Nav.propTypes,\n@@ -94,42 +95,19 @@ NavDropdown.propTypes = {\n};\nNav.defaultProps = {\n- activeKey: undefined,\n- as: undefined,\n- fill: false,\n- justify: false,\n- navbar: undefined,\n- onKeyDown: undefined,\n- onSelect: undefined,\n- role: undefined,\n- variant: undefined,\n- bsPrefix: 'nav',\n+ ...BaseNav.defaultProps,\n};\nNavDropdown.defaultProps = {\n- active: undefined,\n- disabled: undefined,\n- menuRole: undefined,\n- menuVariant: undefined,\n- onClick: undefined,\n- renderMenuOnMount: undefined,\n- rootCloseEvent: undefined,\n- bsPrefix: undefined,\n+ ...BaseNavDropdown.defaultProps,\n};\nNavItem.defaultProps = {\n- as: 'div',\n- bsPrefix: 'nav-item',\n+ ...BaseNavItem.defaultProps,\n};\nNavLink.defaultProps = {\n- active: undefined,\n- as: 'a',\n- disabled: false,\n- eventKey: undefined,\n- href: undefined,\n- role: undefined,\n- bsPrefix: 'nav-link',\n+ ...BaseNavLink.defaultProps,\n};\nNav.Item = NavItem;\n",
        "chatgpt_rag": "refactor: update UncontrolledNavDropdown component to use UncontrolledDropdown with nav prop instead of NavDropdown"
    },
    {
        "msg": "chore: push versions",
        "diff": "diff --git a/website/package.json b/website/package.json },\n\"dependencies\": {\n\"@chakra-ui/theme-vue\": \"^0.2.7\",\n- \"@chakra-ui/vue\": \"^0.7.0-next.0\",\n+ \"@chakra-ui/vue\": \"^0.7.0-next.2\",\n\"@emotion/css\": \"^11.0.0\",\n\"@mdx-js/vue-loader\": \"^1.6.1\",\n\"@nuxtjs/dotenv\": \"^1.4.0\",\n",
        "date": "23.12.2020 15:38:06",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "feat(app): upgrade vue-loader (has our fix in regards to HMR with vue-class-component)",
        "sim_diff": "diff --git a/app/package.json b/app/package.json \"typescript\": \"4.4.2\",\n\"url-loader\": \"4.1.1\",\n\"vue\": \"3.2.21\",\n- \"vue-loader\": \"16.8.2\",\n+ \"vue-loader\": \"16.8.3\",\n\"vue-router\": \"4.0.12\",\n\"vue-style-loader\": \"4.1.3\",\n\"webpack\": \"^5.58.1\",\n",
        "chatgpt_rag": "feat(website): upgrade @chakra-ui/vue to version ^0.7.0-next.2"
    },
    {
        "msg": "chore: update format script",
        "diff": "diff --git a/package.json b/package.json \"test:packages\": \"lerna run test --stream --scope razzle-* --ignore razzle-examples-* -- --passWithNoTests --verbose --no-cache\",\n\"test:e2e\": \"jest --config ./test/jest.config.json --verbose --no-cache \",\n\"clean\": \"lerna clean --yes\",\n- \"format\": \"prettier --trailing-comma es5 --single-quote --write 'packages/*/*.+(js|jsx|json|yml|yaml|css|less|scss|ts|tsx|md|mdx)' 'packages/*/!(node_modules)/**/*.js'\",\n+ \"format\": \"prettier --write 'packages/*/*.+(js|jsx|json|yml|yaml|css|less|scss|ts|tsx|md|mdx)' 'packages/*/!(node_modules)/**/*.js'\",\n\"publish-canary\": \"lerna version prerelease --preid canary --force-publish && release --pre\",\n\"publish-stable\": \"lerna version --force-publish && release && node ./scripts/release-notes.js\",\n\"build-docs\": \"node ./scripts/build-docs.js\",\n},\n\"lint-staged\": {\n\"*.{js|jsx|json|yml|yaml|css|less|scss|ts|tsx|md|mdx}\": [\n- \"prettier --trailing-comma es5 --single-quote --write\"\n+ \"yarn format\"\n]\n},\n\"dependencies\": {},\n",
        "date": "08.07.2020 23:05:11",
        "repo": "jaredpalmer/razzle",
        "type": "chore",
        "sim_msg": "chore(lerna): make repository commitizen friendly\nAdd commitizen config and adapter for conventional changelog. Switch on conventional changelog\nsupport in Lerna.",
        "sim_diff": "diff --git a/package.json b/package.json \"start\": \"cd packages/template-react; yarn start\",\n\"test\": \"lerna run test --stream\",\n\"lint\": \"eslint \\\"packages/**/*.js\\\"\",\n- \"release\": \"lerna publish --exact\",\n+ \"release\": \"lerna publish --exact --conventional-commits\",\n\"update\": \"yarn upgrade-interactive --latest && yarn\",\n\"postupdate\": \"lerna clean --yes && lerna bootstrap\"\n},\n\"**/spec/mock/**\"\n],\n\"devDependencies\": {\n+ \"cz-conventional-changelog\": \"^2.0.0\",\n\"eslint\": \"^4.8.0\",\n\"eslint-config-semistandard\": \"^11.0.0\",\n\"eslint-config-standard\": \"^10.2.1\",\n\"eslint-plugin-react\": \"^7.4.0\",\n\"eslint-plugin-standard\": \"^3.0.1\",\n\"lerna\": \"^2.4.0\"\n+ },\n+ \"config\": {\n+ \"commitizen\": {\n+ \"path\": \"./node_modules/cz-conventional-changelog\"\n+ }\n}\n}\n",
        "chatgpt_rag": "chore(format): update prettier configuration\nUpdate prettier configuration to remove the trailing comma es5 option. Use prettier to format\nfiles with specified extensions in the packages directory."
    },
    {
        "msg": "chore: remove test from postinstall script",
        "diff": "diff --git a/package.json b/package.json ]\n},\n\"scripts\": {\n- \"postinstall\": \"yarn test && yarn build:dev && yarn theme:dev && lerna link\",\n+ \"postinstall\": \"yarn build:dev && yarn theme:dev && lerna link\",\n\"build:dev\": \"yarn workspace @chakra-ui/vue run rollup --config rollup.dev.config.js\",\n\"build\": \"yarn workspace @chakra-ui/vue build\",\n\"dev\": \"yarn workspace @chakra-ui/vue dev\",\n",
        "date": "16.05.2020 20:39:32",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "chore: add prepublish",
        "sim_diff": "diff --git a/package.json b/package.json \"lint:es\": \"eslint {packages,storybook}/**/*.{js,vue}\",\n\"lint:style\": \"vue-cli-service lint:style\",\n\"prepare\": \"lerna bootstrap\",\n+ \"prepublishOnly\": \"yarn build\",\n\"start\": \"lerna exec yarn start --scope storybook\",\n\"test\": \"vue-cli-service test:unit\",\n\"reinstall\": \"find . -name node_modules -type d -prune -exec echo Removing {} ';' -exec rm -rf {} ';' && echo Clearing yarn cache && yarn cache clean && echo Removing yarn offline mirror && rm -rf \\\"./.yarn-offline-mirror\\\" && yarn install\"\n",
        "chatgpt_rag": "chore: remove yarn test from postinstall script"
    },
    {
        "msg": "chore(tests): remove unnecessary template",
        "diff": "diff --git a/packages/kiwi-core/src/CloseButton/tests/CloseButton.test.js b/packages/kiwi-core/src/CloseButton/tests/CloseButton.test.js @@ -10,9 +10,7 @@ const renderComponent = (props) => {\nreturn render(base)\n}\nit('should render correctly', () => {\n- const { asFragment } = renderComponent({\n- template: `<CloseButton />`\n- })\n+ const { asFragment } = renderComponent()\nexpect(asFragment()).toMatchSnapshot()\n})\nit('should allow setting a custom aria-label for the button', () => {\n",
        "date": "01.03.2020 15:04:41",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "test: Add test for autoposition",
        "sim_diff": "diff --git a/packages/core-toggle/core-toggle.test.js b/packages/core-toggle/core-toggle.test.js @@ -23,6 +23,7 @@ describe('core-toggle', () => {\nconst toggleId = await attr('core-toggle', 'id')\nawait expect(attr('button', 'aria-controls')).toEqual(toggleId)\nawait expect(prop('core-toggle', 'hidden')).toMatch(/true/i)\n+ await expect(prop('core-toggle', 'autoposition')).toMatch(/false/i)\nconst buttonId = await attr('button', 'id')\nawait expect(attr('core-toggle', 'aria-labelledby')).toEqual(buttonId)\n})\n@@ -200,4 +201,16 @@ describe('core-toggle', () => {\nconst itemId = await browser.wait(() => browser.executeScript(() => window.itemId))\nawait expect(itemId).toEqual('my-item')\n})\n+\n+ it('supports attribute autoposition', async () => {\n+ await browser.executeScript(() => {\n+ document.body.innerHTML = `\n+ <button>Toggle</button>\n+ <core-toggle autoposition hidden></core-toggle>\n+ `\n+ })\n+ await expect(prop('core-toggle', 'autoposition')).toMatch(/true/i)\n+ await $('button').click()\n+ await expect($('core-toggle').getCssValue('position')).toEqual('fixed')\n+ })\n})\n",
        "chatgpt_rag": "test: Update CloseButton test to remove unnecessary template prop usage"
    },
    {
        "msg": "chore: fix linting issues",
        "diff": "diff --git a/lib/monitor/signals.js b/lib/monitor/signals.js module.exports = {\n- \"SIGHUP\": \"1\",\n- \"SIGINT\": \"2\",\n- \"SIGQUIT\": \"3\",\n- \"SIGILL\": \"4\",\n- \"SIGTRAP\": \"5\",\n- \"SIGABRT\": \"6\",\n- \"SIGBUS\": \"7\",\n- \"SIGFPE\": \"8\",\n- \"SIGKILL\": \"9\",\n- \"SIGUSR1\": \"10\",\n- \"SIGSEGV\": \"11\",\n- \"SIGUSR2\": \"12\",\n- \"SIGPIPE\": \"13\",\n- \"SIGALRM\": \"14\",\n- \"SIGTERM\": \"15\",\n- \"SIGSTKFLT\": \"16\",\n- \"SIGCHLD\": \"17\",\n- \"SIGCONT\": \"18\",\n- \"SIGSTOP\": \"19\",\n- \"SIGTSTP\": \"20\",\n- \"SIGTTIN\": \"21\",\n- \"SIGTTOU\": \"22\",\n- \"SIGURG\": \"23\",\n- \"SIGXCPU\": \"24\",\n- \"SIGXFSZ\": \"25\",\n- \"SIGVTALRM\": \"26\",\n- \"SIGPROF\": \"27\",\n- \"SIGWINCH\": \"28\",\n- \"SIGIO\": \"29\",\n- \"SIGPWR\": \"30\",\n- \"SIGSYS\": \"31\",\n- \"SIGRTMIN\": \"35\"\n+ SIGHUP: 1,\n+ SIGINT: 2,\n+ SIGQUIT: 3,\n+ SIGILL: 4,\n+ SIGTRAP: 5,\n+ SIGABRT: 6,\n+ SIGBUS: 7,\n+ SIGFPE: 8,\n+ SIGKILL: 9,\n+ SIGUSR1: 10,\n+ SIGSEGV: 11,\n+ SIGUSR2: 12,\n+ SIGPIPE: 13,\n+ SIGALRM: 14,\n+ SIGTERM: 15,\n+ SIGSTKFLT: 16,\n+ SIGCHLD: 17,\n+ SIGCONT: 18,\n+ SIGSTOP: 19,\n+ SIGTSTP: 20,\n+ SIGTTIN: 21,\n+ SIGTTOU: 22,\n+ SIGURG: 23,\n+ SIGXCPU: 24,\n+ SIGXFSZ: 25,\n+ SIGVTALRM: 26,\n+ SIGPROF: 27,\n+ SIGWINCH: 28,\n+ SIGIO: 29,\n+ SIGPWR: 30,\n+ SIGSYS: 31,\n+ SIGRTMIN: 35,\n}\n",
        "date": "15.12.2017 15:20:01",
        "repo": "remy/nodemon",
        "type": "chore",
        "sim_msg": "build(package.json): Set engines to node 8\nTo match the telus-isomorphic-starter-kit",
        "sim_diff": "diff --git a/package.json b/package.json \"license\": \"ISC\",\n\"main\": \"dist/tds.cjs.js\",\n\"module\": \"dist/tds.es.js\",\n- \"files\": [\n- \"dist\",\n- \"src\",\n- \"CHANGELOG.md\",\n- \"CONTRIBUTING.md\",\n- \"UPGRADING.md\"\n- ],\n+ \"files\": [\"dist\", \"src\", \"CHANGELOG.md\", \"CONTRIBUTING.md\", \"UPGRADING.md\"],\n\"scripts\": {\n\"build:css\": \"postcss --use cssnano --replace dist/tds.css\",\n\"build:js\": \"rollup -c config/rollup.config.js\",\n\"dev\": \"styleguidist server --config config/styleguide.config.js\",\n\"gitbook\": \"gitbook serve guide\",\n\"gitbook:install\": \"gitbook install guide\",\n- \"lint:js\": \"eslint src config docs scripts --ext '.js,.jsx' --config config/.eslintrc.json --fix\",\n+ \"lint:js\":\n+ \"eslint src config docs scripts --ext '.js,.jsx' --config config/.eslintrc.json --fix\",\n\"lint:scss\": \"stylelint 'src/components/**/*.scss' --config config/.stylelintrc.json\",\n\"lint:ec\": \"echint\",\n\"lint\": \"yarn lint:js && yarn lint:scss && yarn lint:ec\",\n- \"precommit\": \"yarn lint && yarn test && yarn build-package && yarn build-styleguide && yarn build-gitbook\",\n+ \"precommit\":\n+ \"yarn lint && yarn test && yarn build-package && yarn build-styleguide && yarn build-gitbook\",\n\"release:changelog\": \"changelog\",\n\"release\": \"scripts/release.sh\",\n\"scaffold\": \"node scripts/scaffold.js\",\n\"url\": \"git+https://github.com/telusdigital/tds.git\"\n},\n\"author\": \"TELUS Digital\",\n+ \"engines\": {\n+ \"node\": \">=8\"\n+ },\n\"bugs\": {\n\"url\": \"https://github.com/telusdigital/tds/issues\"\n},\n",
        "chatgpt_rag": "update(signals.js): Convert signal values to numbers for better readability"
    },
    {
        "msg": "chore: add dark theme ability",
        "diff": "diff --git a/src/features/note-selector/NoteSelector.module.css b/src/features/note-selector/NoteSelector.module.css .tag:hover::after {\nborder-left-color: rgb(65, 65, 65);\n}\n+\n+:global(.darkTheme) .tag {\n+ color: white;\n+ background-color: rgb(130, 129, 129);\n+}\n+\n+:global(.darkTheme) .tag:hover {\n+ /*background-color: #cc0000;*/\n+ background-color: white;\n+ color: black;\n+}\n\\ No newline at end of file\n",
        "date": "14.08.2019 09:44:39",
        "repo": "iqtlabs/crviz",
        "type": "chore",
        "sim_msg": "docs(main.css): tag-chooser mis-aligned on mobile",
        "sim_diff": "diff --git a/docs/_static/css/main.css b/docs/_static/css/main.css @@ -247,6 +247,12 @@ h4 a, a:hover, a:focus, :visited {\npadding: 3px 20px;\n}\n+@media (max-width: 979px) {\n+ .tag-chooser {\n+ padding: 3px 15px;\n+ }\n+}\n+\n.tag-chooser button {\nmargin-top: 0 !important;\npadding: 2px 5px;\n",
        "chatgpt_rag": "features(note-selector): Update dark theme styles for tags"
    },
    {
        "msg": "chore(package.json): remove dev:exp command",
        "diff": "diff --git a/package.json b/package.json \"scripts\": {\n\"build\": \"npm run frontend_build && npm run server_build\",\n\"dev\": \"NODE_ENV=development babel-node ./src/server/index.dev\",\n- \"dev:exp\": \"NODE_ENV=development babel-node -- --expose-http2 ./src/server/index.dev\",\n\"server_build\": \"NODE_ENV=production webpack --config webpack_config/server/webpack.prod.babel.js\",\n\"frontend_build\": \"NODE_ENV=production webpack --config webpack_config/client/webpack.prod.babel.js\",\n\"test\": \"NODE_ENV=test jest --config=jest_config/jest.config.json --coverage --forceExit || true\",\n",
        "date": "14.09.2017 01:10:28",
        "repo": "metnew/suicrux",
        "type": "chore",
        "sim_msg": "feat: ensure NODE_ENV is set correctly for prod builds",
        "sim_diff": "diff --git a/package.json b/package.json \"license\": \"GPL-3.0\",\n\"scripts\": {\n\"dev\": \"NODE_ENV=development node ./src/server.js\",\n- \"build\": \"yarn run build-clean && yarn run build-transpile && yarn run build-sync && next build src && cp -R src/.next build/app\",\n+ \"build\": \"yarn run build-clean && yarn run build-transpile && yarn run build-sync && NODE_ENV=production next build src && cp -R src/.next build/app\",\n\"build-transpile\": \"NODE_ENV=production babel src -d build/app --ignore '**/*.test.js','**/*__mocks__','**/*__snapshots__'\",\n\"build-sync\": \"cp -R src/static build/app/static && rsync -av --prune-empty-dirs --include='*/' --include='*.gql' --exclude='*' src/* build/app\",\n\"build-clean\": \"rimraf build/app\",\n",
        "chatgpt_rag": "refactor: update build scripts to use webpack for frontend and server builds"
    },
    {
        "msg": "chore(package): add react-test-renderer",
        "diff": "diff --git a/package.json b/package.json \"doctoc\": \"^1.2.0\",\n\"doctrine\": \"^2.0.0\",\n\"empty\": \"^0.10.1\",\n- \"enzyme\": \"^2.7.1\",\n+ \"enzyme\": \"^2.8.2\",\n\"eslint-config-ta\": \"^5.2.0\",\n\"eslint-plugin-jsx-a11y\": \"^4.0.0\",\n\"express\": \"^4.13.4\",\n\"react-dom\": \"15.5.4\",\n\"react-router\": \"^4.0.0\",\n\"react-router-dom\": \"^4.0.0\",\n+ \"react-test-renderer\": \"^15.5.4\",\n\"require-dir\": \"^0.3.0\",\n\"rimraf\": \"^2.5.2\",\n\"satisfied\": \"^1.1.0\",\n",
        "date": "22.04.2017 09:34:48",
        "repo": "semantic-org/semantic-ui-react",
        "type": "chore",
        "sim_msg": "chore(package): update eslint to version 5.16.0\nCloses",
        "sim_diff": "diff --git a/package.json b/package.json \"coveralls\": \"^3.0.2\",\n\"enzyme\": \"^3.6.0\",\n\"enzyme-adapter-react-16\": \"^1.5.0\",\n- \"eslint\": \"5.15.1\",\n+ \"eslint\": \"5.16.0\",\n\"eslint-plugin-import\": \"^2.14.0\",\n\"eslint-plugin-jsx-a11y\": \"^6.1.1\",\n\"eslint-plugin-react\": \"7.11.1\",\n",
        "chatgpt_rag": "chore(package): update enzyme to version 2.8.2"
    },
    {
        "msg": "chore: Code clean up in View.",
        "diff": "diff --git a/packages/vega-view/src/View.js b/packages/vega-view/src/View.js @@ -74,12 +74,10 @@ export default function View(spec, options) {\nconst ctx = runtime(view, spec, options.functions);\nview._runtime = ctx;\nview._signals = ctx.signals;\n- view._bind = (spec.bindings || []).map(function(_) {\n- return {\n+ view._bind = (spec.bindings || []).map(_ => ({\nstate: null,\nparam: extend({}, _)\n- };\n- });\n+ }));\n// initialize scenegraph\nif (ctx.root) ctx.root.set(root);\n@@ -303,18 +301,15 @@ prototype.removeResizeListener = function(handler) {\n};\nfunction findOperatorHandler(op, handler) {\n- var t = op._targets || [],\n- h = t.filter(function(op) {\n- var u = op._update;\n- return u && u.handler === handler;\n- });\n+ const h = (op._targets || [])\n+ .filter(op => op._update && op._update.handler === handler);\nreturn h.length ? h[0] : null;\n}\nfunction addOperatorListener(view, name, op, handler) {\nvar h = findOperatorHandler(op, handler);\nif (!h) {\n- h = trap(view, function() { handler(name, op.value); });\n+ h = trap(view, () => handler(name, op.value));\nh.handler = handler;\nview.on(op, null, h);\n}\n",
        "date": "16.05.2020 18:33:47",
        "repo": "vega/vega",
        "type": "chore",
        "sim_msg": "fix(Tasks): Fixes an issue where you can't add additional equipment to a probe task template. Closes",
        "sim_diff": "diff --git a/src/components/views/Tasks/core/inputs/ProbeEquipment.js b/src/components/views/Tasks/core/inputs/ProbeEquipment.js @@ -17,6 +17,10 @@ const PROBES_QUERY = gql`\n}\n`;\nconst ProbeEquipment = ({simulatorId, onChange, value}) => {\n+ const sensorArrayCount = Object.keys(value).reduce(\n+ (prev, next) => (next.includes(\"Sensors Array\") ? prev + 1 : prev),\n+ 0,\n+ );\nreturn (\n<Query query={PROBES_QUERY} variables={{simulatorId}} skip={!simulatorId}>\n{({loading, data}) =>\n@@ -73,7 +77,9 @@ const ProbeEquipment = ({simulatorId, onChange, value}) => {\n...value,\n[data\n? randomFromList(data.probes[0].equipment.map(e => e.id))\n- : \"Sensors Array\"]: Math.ceil(Math.random() + 1),\n+ : `Sensors Array${\n+ sensorArrayCount > 0 ? ` (${sensorArrayCount})` : \"\"\n+ }`]: Math.ceil(Math.random() + 1),\n})\n}\n>\n",
        "chatgpt_rag": "refactor(vega-view): Refactor binding logic in View.js to use arrow functions and object destructuring for improved readability. Fixes #issue_number"
    },
    {
        "msg": "chore(docs): update inline form spacing\nCloses",
        "diff": "diff --git a/docs/lib/examples/FormInline.js b/docs/lib/examples/FormInline.js @@ -5,16 +5,14 @@ export default class Example extends React.Component {\nrender() {\nreturn (\n<Form inline>\n- <FormGroup>\n- <Label for=\"exampleEmail\">Email</Label>{' '}\n+ <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\n+ <Label for=\"exampleEmail\" className=\"mr-sm-2\">Email</Label>\n<Input type=\"email\" name=\"email\" id=\"exampleEmail\" placeholder=\"something@idk.cool\" />\n</FormGroup>\n- {' '}\n- <FormGroup>\n- <Label for=\"examplePassword\">Password</Label>{' '}\n+ <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\n+ <Label for=\"examplePassword\" className=\"mr-sm-2\">Password</Label>\n<Input type=\"password\" name=\"password\" id=\"examplePassword\" placeholder=\"don't tell!\" />\n</FormGroup>\n- {' '}\n<Button>Submit</Button>\n</Form>\n);\n",
        "date": "21.11.2017 05:18:34",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "sim_msg": "docs(*): update form validate",
        "sim_diff": "diff --git a/docs/form/demo/base.md b/docs/form/demo/base.md @@ -44,6 +44,15 @@ class Demo extends React.Component {\n<FormItem label=\"Password\" required requiredMessage=\"Please input your password!\">\n<Input.Password name=\"basePass\" placeholder=\"Please Enter Password\"/>\n</FormItem>\n+ <FormItem label=\"Email\" format=\"email\" requiredMessage=\"Please input your email!\">\n+ <Input name=\"email\" placeholder=\"Please Enter Email\"/>\n+ </FormItem>\n+ <FormItem label=\"Phone Number\" format=\"tel\">\n+ <Input name=\"phone\" placeholder=\"Please Enter phone number\"/>\n+ </FormItem>\n+ <FormItem label=\"Homepage\" format=\"url\">\n+ <Input name=\"homepage\" defaultValue=\"https://\" placeholder=\"e.g. https://www.taobao.com\"/>\n+ </FormItem>\n<FormItem label=\" \" colon={false}>\n<Checkbox name=\"agreement\" defaultChecked>Agree</Checkbox>\n</FormItem>\n",
        "chatgpt_rag": "docs(lib/examples): update form layout and styling in FormInline"
    },
    {
        "msg": "chore: improve travis build?",
        "diff": "diff --git a/.travis.yml b/.travis.yml sudo: false\ndist: trusty\nlanguage: node_js\n-node_js:\n-- 10\n-- 11\n-- 12\ncache:\ndirectories:\n- node_modules\n-script:\n-- npm run lint\n-- npm run cover -- --runInBand\n-after_script:\n-- npm run report-coverage\nenv:\nglobal:\nsecure: Jb9Q9+XnCh+n5uNJuqUmLmPG6mUUv7iTi5bNeK6TpLdrVKk+2mLdobV3iRUy/DEqNLwt2lxwzp1oq4YI/lZ0vlUam7HpFWpSf4PAI8ckGRqFdus7K45o+zxHLJ2zBQwXacsZB204qtO8RDdXaNb9PjRGNFdKm3ZuqZTv6PkO+hS05EFxmcW95HiSHpV/qPxKjEsDdCpoTNEA3MP0dNtSKygeht2nFQVr7WkOhkjDvUtU9EypkGbJeBCd0AckqXM0Qvmdi++csyz5VRQhhUwI/2BKSjbBVUZ6Q3m8sX2p4G/wFEbhXl5eKTzAYLuf+9kT9Jg+gKdT30PoChx2NPKHv0XS8BOrKQScs6KIwOVH2/CNCKqAxh3HkCMSONmqEQRqBK1V/gSCZ4zDX9PgrfyE23FLN/GM4YtBlkVCMLh8Y/hiapXUaDobxh/o2tfOoQkeoZWZeoeIydhwULTDSG2R3PKV7rkGYas0VQ+qtU+i8VG+PzjPT4DRf4xIKzNzJbFIq9oTNYBTasWi6+OKzNw0uH3ydmRzf+GxaTwOIdR3nRQMQN60dH+6qeJkrIvpfrGAB5gqTutXPfe0xf2rMrW6dyipnSgGlk1JOgA+cU4CPyHql1OA+ox/kIQ4I3PIJBu5YYE3amFmKLu3vnDHELSzM1CYeOs0sDasRyiDkKE79l0=\n-branches:\n- only:\n- - master\n- - \"/^\\\\d+\\\\.\\\\d+(\\\\.\\\\d+)?(-\\\\S*)?$/\"\n+\n+stages:\n+ - lint\n+ - test\n+ - deploy\njobs:\ninclude:\n+ - stage: lint\n+ node_js: 12\n+ script: npm run lint\n+ - stage: test\n+ node_js:\n+ - 10\n+ - 11\n+ - 12\n+ script: npm run cover -- --runInBand\n+ after_script: npm run report-coverage\n- stage: deploy\nif: tag IS present\nnode_js: 12\n",
        "date": "15.01.2020 20:56:06",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "sim_msg": "chore(Root): gh-workflow",
        "sim_diff": "diff --git a/.github/workflows/node.js.yml b/.github/workflows/node.js.yml @@ -24,7 +24,7 @@ jobs:\nwith:\nrepo-token: ${{ secrets.GITHUB_TOKEN }}\n- build:\n+ install:\nruns-on: ubuntu-latest\nsteps:\n- uses: actions/checkout@v2\n@@ -32,19 +32,43 @@ jobs:\nwith:\nnode-version: 16\nregistry-url: 'https://registry.npmjs.org'\n- - name: Build dependencies\n+ - name: Install dependencies\nrun: |\nnpm run phoenix:ci\nnpm run install:themes\n- npm run build\nenv:\nNODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}\n+\n+ build:\n+ needs: install\n+ runs-on: ubuntu-latest\n+ steps:\n+ - uses: actions/checkout@v2\n+ - uses: actions/setup-node@v1\n+ with:\n+ node-version: 16\n+ registry-url: 'https://registry.npmjs.org'\n+ - name: Build dependencies\n+ run: npm run build\n- uses: actions/upload-artifact@v2\nwith:\nname: public-folder\npath: public\n+ lint:\n+ needs: install\n+ runs-on: ubuntu-latest\n+ steps:\n+ - uses: actions/setup-node@v1\n+ with:\n+ node-version: 16\n+ registry-url: 'https://registry.npmjs.org'\n+ - name: Testing\n+ run: |\n+ npm run lint\n+\ntesting:\n+ needs: install\nruns-on: ubuntu-latest\noutputs:\ncoverage_statements_pct_master: ${{ steps.coverage-master.outputs.coverage_statements_pct_master }}\n@@ -64,9 +88,6 @@ jobs:\ncoverage_functions_covered_current: ${{ steps.coverage-current.outputs.coverage_functions_covered_current }}\ncoverage_lines_covered_current: ${{ steps.coverage-current.outputs.coverage_lines_covered_current }}\nsteps:\n- - uses: actions/checkout@v2\n- with:\n- fetch-depth: 0\n- uses: actions/setup-node@v1\nwith:\nnode-version: 16\n@@ -77,10 +98,7 @@ jobs:\nrun: echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p\n- name: Testing\n- run: |\n- npm run phoenix:ci\n- npm run lint\n- xvfb-run --auto-servernum npm run test -- --ci --coverage\n+ run: xvfb-run --auto-servernum npm run test -- --ci --coverage\n- name: Log Master Coverage\nuses: actions/github-script@v5\nid: coverage-master\n@@ -97,7 +115,7 @@ jobs:\nawait script({github, context, core, exec}, './coverage/coverage.json')\nrelease:\n- needs: testing\n+ needs: [lint, testing]\nruns-on: ubuntu-latest\nsteps:\n- uses: actions/checkout@v2\n",
        "chatgpt_rag": "chore(Root): update Travis CI configuration with stages for linting, testing, and deployment"
    },
    {
        "msg": "chore(webpack_config): add comment about Preact",
        "diff": "diff --git a/webpack_config/client/webpack.base.js b/webpack_config/client/webpack.base.js @@ -51,10 +51,11 @@ const baseBuild = {\nresolve: {\nalias: {\n...isomorphicWebpackConfig.resolve.alias\n+ // NOTE: Preact + preact-compat can save you 148Kb parsed or 14kb gzipped\n+ // Preact may breaks your React app, starter by default doesn't aim to support Preact\n// react: 'preact-compat',\n// 'react-dom': 'preact-compat',\n- // 'preact-compat': 'preact-compat/dist/preact-compat',\n- // 'react-redux': 'preact-redux'\n+ // 'preact-compat': 'preact-compat/dist/preact-compat'\n},\nmodules: isomorphicWebpackConfig.resolve.modules,\nextensions: isomorphicWebpackConfig.resolve.extensions.concat([\n",
        "date": "17.09.2017 21:44:12",
        "repo": "metnew/suicrux",
        "type": "chore",
        "sim_msg": "build(feat): load settings for manifest json",
        "sim_diff": "diff --git a/build/webpack.config.js b/build/webpack.config.js @@ -48,21 +48,25 @@ module.exports = () => {\n// create manifest.json file\nnew WebpackPwaManifest({\n- name: 'My Progressive Web App',\n- short_name: 'MyPWA',\n- description: 'My awesome Progressive Web App!',\n- background_color: '#ffffff',\n+ name: settings.name || 'My Shop',\n+ short_name: settings.short_name || 'MyShop',\n+ description: settings.description || 'My PWA Shop',\n+ background_color: settings.bg_color || '#ffffff',\n// can be null, use-credentials or anonymous\n- crossorigin: 'use-credentials' /*,\n+ crossorigin: 'use-credentials',\nicons: [{\n- src: path.resolve('src/assets/icon.png'),\n+ src: settings.icon\n+ ? path.resolve(pub, 'img', 'uploads', settings.icon)\n+ : path.resolve(pub, 'img', 'icon.png'),\n// multiple sizes\nsizes: [ 96, 128, 192, 256, 384, 512 ]\n}, {\n- src: path.resolve('src/assets/large-icon.png'),\n+ src: settings.large_icon\n+ ? path.resolve(pub, 'img', 'uploads', settings.large_icon)\n+ : path.resolve(pub, 'img', 'large-icon.png'),\n// can also use the specifications pattern\nsize: '1024x1024'\n- }] */\n+ }]\n}),\n// create service-worker.js file\n",
        "chatgpt_rag": "webpack_config(client): update resolve alias for Preact compatibility"
    },
    {
        "msg": "chore: fix lint errs",
        "diff": "diff --git a/packages/chakra-ui-core/src/CAspectRatioBox/tests/CAspectRatioBox.test.js b/packages/chakra-ui-core/src/CAspectRatioBox/tests/CAspectRatioBox.test.js @@ -23,12 +23,12 @@ const renderComponent = (props) => {\nfunction getElementStyles (selector) {\nselector = new RegExp(selector)\nlet styles = []\n- let i; let j; let sel = selector\n+ let i; let j; const sel = selector\nfor (i = 0; i < document.styleSheets.length; ++i) {\nfor (j = 0; j < document.styleSheets[i].cssRules.length; ++j) {\nif (sel.test(document.styleSheets[i].cssRules[j].selectorText)) {\n// let selectorText = document.styleSheets[i].cssRules[j].selectorText\n- let cssText = document.styleSheets[i].cssRules[j].style.cssText\n+ const cssText = document.styleSheets[i].cssRules[j].style.cssText\nstyles += cssText\n}\n}\n@@ -49,8 +49,8 @@ it('should render correctly', () => {\n`.trim())\n})\n-it('should have correct styles', async () => {\n- const inlineAttrs = `:ratio=\"2\"`\n+it('should have correct styles', () => {\n+ const inlineAttrs = ':ratio=\"2\"'\nrenderComponent({ inlineAttrs })\nconst image = screen.getByTestId('image')\nconst aspectRatioBox = screen.getByTestId('aspectRatioBox')\n",
        "date": "13.06.2020 16:20:37",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "refactor(test-utils): correct spacing util for defaults",
        "sim_diff": "diff --git a/src/__spec_helper__/test-utils.js b/src/__spec_helper__/test-utils.js @@ -131,53 +131,72 @@ const getDefaultValue = (value) => {\nconst testStyledSystemSpacing = (component, defaults, styleContainer) => {\ndescribe('default props', () => {\nconst wrapper = mount(component());\n+ const StyleElement = styleContainer ? styleContainer(wrapper) : wrapper;\nit('should set the correct margins', () => {\n+ let margin;\nlet marginLeft;\nlet marginRight;\nlet marginTop;\nlet marginBottom;\nif (defaults) {\n- marginLeft = getDefaultValue(defaults.ml || defaults.mx || defaults.m || undefined);\n- marginRight = getDefaultValue(defaults.mr || defaults.mx || defaults.m || undefined);\n- marginTop = getDefaultValue(defaults.mt || defaults.my || defaults.m || undefined);\n- marginBottom = getDefaultValue(defaults.mb || defaults.my || defaults.m || undefined);\n- }\n+ margin = getDefaultValue(defaults.m || undefined);\n+ marginLeft = getDefaultValue(defaults.ml || defaults.mx || undefined);\n+ marginRight = getDefaultValue(defaults.mr || defaults.mx || undefined);\n+ marginTop = getDefaultValue(defaults.mt || defaults.my || undefined);\n+ marginBottom = getDefaultValue(defaults.mb || defaults.my || undefined);\nexpect(assertStyleMatch(\n{\n+ margin,\nmarginLeft,\nmarginRight,\nmarginTop,\nmarginBottom\n},\n- styleContainer ? styleContainer(wrapper) : wrapper\n+ StyleElement\n));\n+ } else {\n+ expect(StyleElement).not.toHaveStyleRule('marginLeft');\n+ expect(StyleElement).not.toHaveStyleRule('marginRight');\n+ expect(StyleElement).not.toHaveStyleRule('marginTop');\n+ expect(StyleElement).not.toHaveStyleRule('marginBottom');\n+ expect(StyleElement).not.toHaveStyleRule('margin');\n+ }\n});\nit('should set the correct paddings', () => {\n+ let padding;\nlet paddingLeft;\nlet paddingRight;\nlet paddingTop;\nlet paddingBottom;\nif (defaults) {\n- paddingLeft = getDefaultValue(defaults.pl || defaults.px || defaults.p || undefined);\n- paddingRight = getDefaultValue(defaults.pr || defaults.px || defaults.p || undefined);\n- paddingTop = getDefaultValue(defaults.pt || defaults.py || defaults.p || undefined);\n- paddingBottom = getDefaultValue(defaults.pb || defaults.py || defaults.p || undefined);\n- }\n+ padding = getDefaultValue(defaults.p || undefined);\n+ paddingLeft = getDefaultValue(defaults.pl || defaults.px || undefined);\n+ paddingRight = getDefaultValue(defaults.pr || defaults.px || undefined);\n+ paddingTop = getDefaultValue(defaults.pt || defaults.py || undefined);\n+ paddingBottom = getDefaultValue(defaults.pb || defaults.py || undefined);\nexpect(assertStyleMatch(\n{\n+ padding,\npaddingLeft,\npaddingRight,\npaddingTop,\npaddingBottom\n},\n- styleContainer ? styleContainer(wrapper) : wrapper\n+ StyleElement\n));\n+ } else {\n+ expect(StyleElement).not.toHaveStyleRule('paddingLeft');\n+ expect(StyleElement).not.toHaveStyleRule('paddingRight');\n+ expect(StyleElement).not.toHaveStyleRule('paddingTop');\n+ expect(StyleElement).not.toHaveStyleRule('paddingBottom');\n+ expect(StyleElement).not.toHaveStyleRule('padding');\n+ }\n});\n});\n",
        "chatgpt_rag": "refactor(CAspectRatioBox): update getElementStyles function to use const instead of let"
    },
    {
        "msg": "chore: update test envs",
        "diff": "diff --git a/.travis.yml b/.travis.yml @@ -6,13 +6,10 @@ language: node_js\nnotifications:\nemail: false\nnode_js:\n+ - 8\n+ - 7\n- 6\n- - 5\n- 4\n- # - iojs-v3\n- # - iojs-v2\n- # - iojs-v1\n- - '0.10'\nbefore_install:\n- npm i -g npm@^2.0.0\nbefore_script:\n",
        "date": "04.09.2017 20:14:18",
        "repo": "remy/nodemon",
        "type": "chore",
        "sim_msg": "chore: reorder node order to run latest to oldest",
        "sim_diff": "diff --git a/.travis.yml b/.travis.yml @@ -6,12 +6,12 @@ cache:\nnotifications:\nemail: false\nnode_js:\n- - \"8.9.0\"\n- - \"8.16.0\"\n- - \"9.11.2\"\n- - \"10.16.0\"\n- - \"lts/*\"\n- node\n+ - \"lts/*\"\n+ - \"10.16.0\"\n+ - \"9.11.2\"\n+ - \"8.16.0\"\n+ - \"8.9.0\"\ninstall: npm install\n",
        "chatgpt_rag": "chore: update node versions in .travis.yml to include 8 and 7, remove older versions"
    },
    {
        "msg": "chore(Footer): use light color for footer",
        "diff": "diff --git a/src/common/components/parts/Footer/style.jsx b/src/common/components/parts/Footer/style.jsx @@ -5,7 +5,7 @@ export const StyledFooter = styled.footer`\nwidth: 100%;\ndisplay: flex;\nalign-items: center;\n- background-color: ${props => props.theme.primaryColor};\n+ background-color: ${props => props.theme.primaryColorLight};\ncolor: ${props => props.theme.primaryTextColor};\nheight: 90px;\nbox-shadow: inset 0 0 0 0 ${props => props.theme.primaryColorDark},\n",
        "date": "17.09.2017 15:07:40",
        "repo": "metnew/suicrux",
        "type": "chore",
        "sim_msg": "refactor: use spacing unit",
        "sim_diff": "diff --git a/src/components/Footer/Footer.js b/src/components/Footer/Footer.js @@ -5,12 +5,12 @@ import Typography from \"material-ui/Typography\";\nconst date = new Date();\n-const styles = () => ({\n+const styles = (theme) => ({\nfooter: {\nalignItems: \"center\",\ndisplay: \"flex\",\njustifyContent: \"center\",\n- marginBottom: \"1.5rem\"\n+ marginBottom: theme.spacing.unit * 2\n}\n});\n",
        "chatgpt_rag": "refactor: update background color in StyledFooter to primaryColorLight"
    },
    {
        "msg": "chore: docs service worker update",
        "diff": "diff --git a/packages/chakra-ui-docs/static/sw.js b/packages/chakra-ui-docs/static/sw.js -importScripts('https://cdn.jsdelivr.net/npm/workbox-cdn@4.3.1/workbox/workbox-sw.js')\n-\n-// --------------------------------------------------\n-// Configure\n-// --------------------------------------------------\n-\n-// Set workbox config\n-workbox.setConfig({\n- 'debug': false\n-})\n-\n-// Start controlling any existing clients as soon as it activates\n-workbox.core.clientsClaim()\n-\n-// Skip over the SW waiting lifecycle stage\n-workbox.core.skipWaiting()\n-\n-workbox.precaching.cleanupOutdatedCaches()\n-\n-// --------------------------------------------------\n-// Precaches\n-// --------------------------------------------------\n-\n-// Precache assets\n-\n-// --------------------------------------------------\n-// Runtime Caching\n-// --------------------------------------------------\n-\n-// Register route handlers for runtimeCaching\n-workbox.routing.registerRoute(new RegExp('/_nuxt/'), new workbox.strategies.CacheFirst({}), 'GET')\n-workbox.routing.registerRoute(new RegExp('/'), new workbox.strategies.NetworkFirst({}), 'GET')\n+// THIS FILE SHOULD NOT BE VERSION CONTROLLED\n",
        "date": "18.04.2020 23:33:30",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "ci: add gh-pages deploy",
        "sim_diff": "diff --git a/.github/workflows/deploy.yml b/.github/workflows/deploy.yml name: Deployment status\n+concurrency:\n+ group: ${{ github.workflow }}-${{ github.ref }}\n+ cancel-in-progress: true\n+\non:\nworkflow_dispatch:\ninputs:\n@@ -12,7 +16,6 @@ on:\njobs:\nbuild:\nruns-on: macos-latest\n-\nsteps:\n- uses: actions/checkout@v2\n- name: Use Node.js 14.x\n@@ -42,3 +45,43 @@ jobs:\n- name: Deploy website\nrun: |\nibmcloud cf v3-zdt-push carbon-website -b https://github.com/cloudfoundry/nginx-buildpack.git\n+\n+ gh-pages:\n+ if: github.repository == 'carbon-design-system/carbon-website'\n+ runs-on: ubuntu-latest\n+ steps:\n+ - uses: actions/checkout@v3\n+ - name: Use Node.js 14.x\n+ uses: actions/setup-node@v3\n+ with:\n+ node-version: 14.x\n+ - name: Install packages\n+ run: yarn install --frozen-lockfile --network-timeout 300000\n+ - name: Gatsby Cache Folder\n+ uses: actions/cache@v3\n+ id: gatsby-cache-folder\n+ with:\n+ path: .cache\n+ key: ${{ runner.os }}-cache-gatsby\n+ restore-keys: |\n+ ${{ runner.os }}-cache-gatsby\n+ - name: Gatsby Public Folder\n+ uses: actions/cache@v3\n+ id: gatsby-public-folder\n+ with:\n+ path: public/\n+ key: ${{ runner.os }}-public-gatsby\n+ restore-keys: |\n+ ${{ runner.os }}-public-gatsby\n+ - name: Build site\n+ run: yarn build:clean\n+ env:\n+ GATSBY_EXPERIMENTAL_PAGE_BUILD_ON_DATA_CHANGES: true\n+ NODE_ENV: production\n+ CI: true\n+ - name: Deploy\n+ run: |\n+ git remote set-url origin https://git:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git\n+ npx gh-pages -d public -u \"github-actions-bot <support+actions@github.com>\"\n+ env:\n+ GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n",
        "chatgpt_rag": "chore: remove workbox configuration and precaching from service worker"
    },
    {
        "msg": "chore: :wrench: update tailwind config",
        "diff": "diff --git a/tailwind.config.cjs b/tailwind.config.cjs -module.exports = {\n+const config = {\nmode: 'jit',\npurge: ['./src/**/*.{html,js,svelte,ts}'],\ntheme: {\n@@ -6,3 +6,5 @@ module.exports = {\n},\nplugins: [require('@tailwindcss/typography'), require('daisyui')],\n}\n+\n+module.exports = config\n",
        "date": "23.08.2021 18:10:20",
        "repo": "spences10/cheat-sheets",
        "type": "chore",
        "sim_msg": "fix: tailwindcss content sources",
        "sim_diff": "diff --git a/src/generators/tailwindcss.js b/src/generators/tailwindcss.js @@ -35,7 +35,8 @@ module.exports = {\nimportant: true,\ncontent: {\nfiles: [\n- './src/**/*.*',\n+ './src/components/**.html',\n+ './src/layouts/**.html',\n{raw: html, extension: 'html'}\n]\n}\n@@ -46,7 +47,6 @@ module.exports = {\nconfig.content = {\nfiles: [\n...config.content,\n- './src/**/*.*',\n{raw: html, extension: 'html'}\n]\n}\n",
        "chatgpt_rag": "refactor: update tailwindcss config export method"
    },
    {
        "msg": "chore: Removes duplicated dev deps in CLI",
        "diff": "diff --git a/packages/cli/package.json b/packages/cli/package.json \"bugs\": \"https://github.com/preactjs/preact-cli/issues\",\n\"homepage\": \"https://github.com/preactjs/preact-cli\",\n\"devDependencies\": {\n- \"eslint\": \"^7.12.1\",\n\"html-looks-like\": \"^1.0.2\",\n\"jest\": \"^26.0.1\",\n- \"lerna\": \"^3.16.4\",\n- \"lint-staged\": \"^10.5.0\",\n\"mkdirp\": \"^1.0.3\",\n\"ncp\": \"^2.0.0\",\n\"node-sass\": \"^4.12.0\",\n",
        "date": "03.02.2021 04:33:16",
        "repo": "preactjs/preact-cli",
        "type": "chore",
        "sim_msg": "build(dev-deps): remove rollup-plugins",
        "sim_diff": "diff --git a/package.json b/package.json \"jest\": \"^24.9.0\",\n\"lint-staged\": \"^9.4.2\",\n\"prettier\": \"^1.18.2\",\n- \"rimraf\": \"^3.0.0\",\n- \"rollup-plugin-commonjs\": \"^10.1.0\",\n- \"rollup-plugin-node-resolve\": \"^5.2.0\",\n- \"rollup-plugin-terser\": \"^5.1.1\",\n- \"rollup-plugin-uglify\": \"^6.0.3\"\n+ \"rimraf\": \"^3.0.0\"\n}\n}\n",
        "chatgpt_rag": "build(dev-deps): update devDependencies in cli package.json"
    },
    {
        "msg": "chore: remove defaultIsChecked from story",
        "diff": "diff --git a/packages/chakra-ui-core/src/CRadio/CRadio.stories.js b/packages/chakra-ui-core/src/CRadio/CRadio.stories.js @@ -6,7 +6,7 @@ storiesOf('UI | Radio', module)\ncomponents: { CFragment, CRadio },\ntemplate: `\n<div>\n- <CRadio value=\"male\" v-model=\"maleChecked\" defaultIsChecked name=\"bee\">\n+ <CRadio value=\"male\" v-model=\"maleChecked\" name=\"bee\">\nMale\n</CRadio>\n<CRadio ml=\"3\" value=\"female\" name=\"bee\">\n",
        "date": "24.04.2020 11:51:37",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "feat: update radiobutton story",
        "sim_diff": "diff --git a/src/components/RadioButton/__stories__/radioButton.stories.js b/src/components/RadioButton/__stories__/radioButton.stories.js @@ -94,8 +94,6 @@ const renderRadioButtons = (count, options = {}) => {\nfor (let i = 0; i < count; i++) {\nradioButtons.push(\n<RadioButton\n- defaultChecked={!i}\n- checked={i === 2}\nvalue={includeKnobs ? text(`Value${i}`, `${i}`) : i}\ntext={includeKnobs ? text(`Text${i}`, `Option ${i}`) : `Option ${i}`}\nname={includeKnobs ? text(`Name${i}`, \"radios\") : name}\n",
        "chatgpt_rag": "fix: remove defaultIsChecked prop from CRadio component in story"
    },
    {
        "msg": "chore(readme): updated readme",
        "diff": "diff --git a/README.md b/README.md @@ -16,12 +16,12 @@ You can also view all developed components in Storybook!\n#### Project TODO:\n- [x] Setup Storybook for components UI\n- [x] Theme Provider\n+- [x] Develop styling scheme for components with styled components\n- [x] Setup Vue.js plugin system\n- [x] Provide Theme\n- - [ ] Observe theme and set it dynamically in javascript with ease.\n+ - [x] Observe theme and set it dynamically in javascript with ease.\n- [ ] Provide icons API for icons component\n-- [ ] Develop styling scheme for components with styled components\n+- [ ] Accessibility (Focus) Styling\n- [ ] Setup NPM distribution\n- [ ] Set up type system for components with Typescript\n-- [ ] Accessibility (Focus) Styling\n",
        "date": "21.10.2019 03:50:03",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "chore: update `vue/en/simple-component.md`",
        "sim_diff": "diff --git a/content/intro-to-storybook/vue/en/simple-component.md b/content/intro-to-storybook/vue/en/simple-component.md @@ -145,7 +145,7 @@ Another nice thing about bundling the `actionsData` that a component needs is th\n## Config\n-We'll need to make a couple of changes to Storybook's configuration files, so it notices not only our recently created stories and allow us to use the application's CSS file (located in `src/index.css`).\n+We'll need to make a couple of changes to Storybook's configuration files, so it notices our recently created stories and allows us to use the application's CSS file (located in `src/index.css`).\nStart by changing your Storybook configuration file (`.storybook/main.js`) to the following:\n",
        "chatgpt_rag": "chore: update project TODO list in README.md"
    },
    {
        "msg": "chore(docs): button group spacing\nThis removes `{' '}` which was added to the doc in but has not effects on `Button`s inside `ButtonGroup`.",
        "diff": "diff --git a/docs/lib/examples/ButtonGroup.js b/docs/lib/examples/ButtonGroup.js @@ -5,8 +5,8 @@ export default class Example extends React.Component {\nrender() {\nreturn (\n<ButtonGroup>\n- <Button>Left</Button>{' '}\n- <Button>Middle</Button>{' '}\n+ <Button>Left</Button>\n+ <Button>Middle</Button>\n<Button>Right</Button>\n</ButtonGroup>\n);\n",
        "date": "24.03.2018 02:45:50",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "sim_msg": "fix(react): silence react warning about onDeselect prop",
        "sim_diff": "diff --git a/lib/common/components/OptionButton.js b/lib/common/components/OptionButton.js @@ -23,7 +23,7 @@ export default class OptionButton extends React.Component<Props> {\n}\nrender () {\n- const {children, tooltip, ...other} = this.props\n+ const {children, tooltip, onDeselect, ...other} = this.props\nconst button = (\n<Button\n{...other}\n",
        "chatgpt_rag": "style(react): remove unnecessary {' '} in ButtonGroup component in Example class"
    },
    {
        "msg": "chore: add circularprogress component sig",
        "diff": "diff --git a/packages/chakra-ui-core/src/CCircularProgress/CCircularProgress.js b/packages/chakra-ui-core/src/CCircularProgress/CCircularProgress.js * @see A11y https://github.com/chakra-ui/chakra-ui-vue/blob/master/packages/chakra-ui-core/src/CCircularProgress/accessibility.md\n*/\n-\nimport { baseProps } from '../config/props'\nimport { forwardProps } from '../utils'\nimport { getComputedProps } from './utils/circularprogress.styles'\n@@ -39,6 +38,9 @@ const CCircularProgressLabel = {\ntransform: 'translate(-50%, -50%)',\nfontSize: '0.25em',\n...forwardProps(this.$props)\n+ },\n+ attrs: {\n+ 'data-chakra-component': 'CCircularProgressLabel'\n}\n}, this.$slots.default)\n}\n@@ -126,7 +128,10 @@ const CCircularProgress = {\n...rootData.props,\n...forwardProps(this.$props)\n},\n- attrs: rootData.attrs\n+ attrs: {\n+ ...rootData.attrs,\n+ 'data-chakra-component': 'CCircularProgress'\n+ }\n}, [\nh(CBox, {\nprops: svgData.props,\n",
        "date": "16.04.2020 21:55:06",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "feat(QCircularProgress): normalize input value",
        "sim_diff": "diff --git a/ui/src/components/circular-progress/QCircularProgress.js b/ui/src/components/circular-progress/QCircularProgress.js @@ -2,6 +2,7 @@ import Vue from 'vue'\nimport SizeMixin from '../../mixins/size.js'\nimport { mergeSlotSafely } from '../../utils/slot.js'\n+import { between } from '../../utils/format.js'\nconst\nradius = 50,\n@@ -55,6 +56,10 @@ export default Vue.extend({\n},\ncomputed: {\n+ normalizedValue () {\n+ return between(this.value, this.min, this.max)\n+ },\n+\nsvgStyle () {\nreturn { transform: `rotate3d(0, 0, 1, ${this.angle - 90}deg)` }\n},\n@@ -78,7 +83,7 @@ export default Vue.extend({\n},\nstrokeDashOffset () {\n- const progress = 1 - (this.value - this.min) / (this.max - this.min)\n+ const progress = 1 - (this.normalizedValue - this.min) / (this.max - this.min)\nreturn (this.dir * progress) * circumference\n},\n@@ -91,7 +96,7 @@ export default Vue.extend({\nrole: 'progressbar',\n'aria-valuemin': this.min,\n'aria-valuemax': this.max,\n- 'aria-valuenow': this.indeterminate === true ? void 0 : this.value\n+ 'aria-valuenow': this.indeterminate === true ? void 0 : this.normalizedValue\n}\n}\n},\n@@ -165,7 +170,7 @@ export default Vue.extend({\nh('div', {\nstaticClass: 'q-circular-progress__text absolute-full row flex-center content-center',\nstyle: { fontSize: this.fontSize }\n- }, this.$scopedSlots.default !== void 0 ? this.$scopedSlots.default() : [ h('div', [ this.value ]) ])\n+ }, this.$scopedSlots.default !== void 0 ? this.$scopedSlots.default() : [ h('div', [ this.normalizedValue ]) ])\n)\nreturn h('div', {\n",
        "chatgpt_rag": "refactor(CCircularProgress): add data attribute for component identification"
    },
    {
        "msg": "chore(docs): updated App.js example",
        "diff": "diff --git a/docs/lib/Home/index.js b/docs/lib/Home/index.js @@ -80,7 +80,7 @@ npm install --save reactstrap react react-dom`}\n{`import { Button } from 'reactstrap';`}\n</PrismCode>\n</pre>\n- <p>Now you are ready to use the imported reactstrap components within your component hierarchy defined in the render method. Here is an example <a href=\"https://gist.github.com/eddywashere/e13033c0e655ab7cda995f8bc77ce40d\" target=\"_blank\"><code>App.js</code></a> redone using reactstrap.</p>\n+ <p>Now you are ready to use the imported reactstrap components within your component hierarchy defined in the render method. Here is an example <a href=\"https://gist.github.com/Thomas-Smyth/006fd507a7295f17a8473451938f9935\" target=\"_blank\"><code>App.js</code></a> redone using reactstrap.</p>\n<h2 className=\"mt-5\">CDN</h2>\n<p>Reactstrap can be included directly in your application's bundle or excluded during compilation and linked directly to a CDN.</p>\n<pre>\n",
        "date": "01.05.2018 21:53:14",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "sim_msg": "docs: update documentation to reflect new syntax of `importComponent`",
        "sim_diff": "diff --git a/README.md b/README.md @@ -210,7 +210,7 @@ export default () => <p>This has been loaded lazily</p>;\nimport { render, importComponent } from 'hops';\nimport React from 'react';\n-const MyLazyComponent = importComponent('./my-component');\n+const MyLazyComponent = importComponent(() => import('./my-component'));\nexport default render(\n<div>\n@@ -471,7 +471,7 @@ import React from 'react';\nexport default render(<Header name=\"X-Foo\" value=\"my-value\" />);\n```\n-###### `importComponent(module, [exportName])`\n+###### `importComponent(moduleLoader, [exportResolver = (ns) => ns.default])`\nUsing the `importComponent()` function you can asynchronously load modules as React components into your application to help you reduce bundle sizes.\n@@ -480,7 +480,20 @@ It works similarly to [`react-loadable`](https://github.com/jamiebuilds/react-lo\n```javascript\nimport { render, importComponent } from 'hops';\n-const Home = importComponent('./home');\n+const Home = importComponent(() => import('./home'));\n+\n+export default render(<Home />);\n+```\n+\n+In case you have a file that exports named components, you can use the second argument to `importComponent` to control which export should be used:\n+\n+```javascript\n+import { render, importComponent } from 'hops';\n+\n+const Home = importComponent(\n+ () => import('./home'),\n+ namespace => namespace.Home\n+);\nexport default render(<Home />);\n```\n@@ -490,7 +503,7 @@ Components created using `importComponent` support some additional props to cont\n```javascript\nimport { render, importComponent } from 'hops';\n-const About = importComponent('./about');\n+const About = importComponent(() => import('./about'));\nconst loader = load =>\nPromise.race([\n@@ -515,6 +528,16 @@ export default render(<About loader={loader} render={renderAbout} />);\nComponents (and their dependencies) imported using `importComponent` will be placed into separate chunks (i.e. asset files). Hops makes sure that all asset files containing modules used for server-side rendering are referenced in the initial HTML output.\n+**Note about `importComponent(moduleName, [exportName])`:** We still support the \"string\" syntax, where you could just pass a string for the file name and another string for the export name to the `importComponent` function, but we are discouraging the use of it, because it is not compatible with type-checked code and does not provide editor integration (point & click to open the file).\n+\n+```javascript\n+import { render, importComponent } from 'hops';\n+\n+const Home = importComponent('./home', 'Home');\n+\n+export default render(<Home />);\n+```\n+\n###### `withConfig(Component)`\nA component wrapped with this HoC (higher order component) will receive a prop called `config` which contains all [settings](#settings). Use this to pass custom settings to your application, for example to [make environment variables available](#environment-variables).\n",
        "chatgpt_rag": "docs: update documentation to reflect new example link for reactstrap usage in component hierarchy"
    },
    {
        "msg": "chore(maintainers): update list of maintainers",
        "diff": "diff --git a/README.md b/README.md @@ -227,6 +227,8 @@ $ npm test\n- [chriso](https://github.com/chriso) - **Chris O'Hara** (author)\n- [profnandaa](https://github.com/profnandaa) - **Anthony Nandaa**\n+- [ezkemboi](https://github.com/ezkemboi) - **Ezrqn Kemboi**\n+- [tux-tn](https://github.com/tux-tn) - **Sarhan Aissi**\n## Reading\n",
        "date": "17.02.2022 09:02:32",
        "repo": "validatorjs/validator.js",
        "type": "chore",
        "sim_msg": "docs: add dnlup to collaborators",
        "sim_diff": "diff --git a/README.md b/README.md @@ -726,6 +726,7 @@ Refs: https://tools.ietf.org/html/rfc7230#section-6.3.2\n## Collaborators\n+* [__Daniele Belardi__](https://github.com/dnlup), <https://www.npmjs.com/~dnlup>\n* [__Matteo Collina__](https://github.com/mcollina), <https://www.npmjs.com/~matteo.collina>\n* [__Robert Nagy__](https://github.com/ronag), <https://www.npmjs.com/~ronag>\n",
        "chatgpt_rag": "docs: add ezkemboi and tux-tn to collaborators"
    },
    {
        "msg": "chore: package: v28.16.0",
        "diff": "diff --git a/packages/putout/ChangeLog b/packages/putout/ChangeLog +2023.02.04, v28.16.0\n+\n+fix:\n+- @putout/plugin-regexp: remove-useless-group: report after transform\n+\n+feature:\n+- @putout/plugin-apply-maybe: add\n+- @putout/plugin-regexp: apply-literal-notation: report: message\n+- @putout/plugin-regexp: apply-literal-notation: improve support of @putout/plugin-remove-useless-escape\n+- @putout/plugin-regexp: remove-useless-group: improve support of apply-literal-notation\n+\n2023.02.03, v28.15.0\nfeature:\n",
        "date": "04.02.2023 22:42:10",
        "repo": "coderaiser/putout",
        "type": "chore",
        "sim_msg": "docs(changelog): fix heading for 1.2.7",
        "sim_diff": "diff --git a/CHANGELOG.md b/CHANGELOG.md All notable changes to this project will be documented in this file. See [standard-version](https://github.com/conventional-changelog/standard-version) for commit guidelines.\n-### [1.2.7](https://github.com/remarkablemark/html-react-parser/compare/v1.2.6...v1.2.7) (2021-06-19)\n+## [1.2.7](https://github.com/remarkablemark/html-react-parser/compare/v1.2.6...v1.2.7) (2021-06-19)\n## [1.2.6](https://github.com/remarkablemark/html-react-parser/compare/v1.2.5...v1.2.6) (2021-04-18)\n",
        "chatgpt_rag": "feat(putout): add @putout/plugin-apply-maybe, improve @putout/plugin-regexp functionality, and report after transform in @putout/plugin-regexp: remove-useless-group"
    },
    {
        "msg": "chore: bootstrap ci",
        "diff": "diff --git a/.github/workflows/nodejs.yml b/.github/workflows/nodejs.yml @@ -24,7 +24,8 @@ jobs:\nuses: actions/setup-node@v1\nwith:\nnode-version: ${{ matrix.node-version }}\n- - run: yarn bootstrap --frozen-lockfile\n+ - run: yarn install --frozen-lockfile\n+ - run: yarn bootstrap\n- run: yarn build --if-present\n- run: yarn test\nenv:\n",
        "date": "09.05.2020 18:35:53",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "ci: update to yarn instead of npm",
        "sim_diff": "diff --git a/.github/workflows/node.js.yml b/.github/workflows/node.js.yml @@ -25,6 +25,6 @@ jobs:\nuses: actions/setup-node@v1\nwith:\nnode-version: ${{ matrix.node-version }}\n- - run: npm ci\n- - run: npm run build --if-present\n- - run: npm test\n+ - run: yarn install --frozen-lockfile\n+ - run: yarn run build --if-present\n+ - run: yarn test\n",
        "chatgpt_rag": "build: update yarn commands in workflow file"
    },
    {
        "msg": "chore: remove unused screen",
        "diff": "diff --git a/packages/chakra-ui-core/src/CButtonGroup/tests/CButtonGroup.test.js b/packages/chakra-ui-core/src/CButtonGroup/tests/CButtonGroup.test.js import { CButton, CButtonGroup } from '../..'\n-import { render, screen } from '@/tests/test-utils'\n+import { render } from '@/tests/test-utils'\nconst renderComponent = (props) => {\nconst base = {\n",
        "date": "04.07.2020 16:16:25",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "test(components/molecule/radioButtonGroup): refactor",
        "sim_diff": "diff --git a/components/molecule/radioButtonGroup/test/index.test.js b/components/molecule/radioButtonGroup/test/index.test.js @@ -10,12 +10,31 @@ import ReactDOM from 'react-dom'\nimport chai, {expect} from 'chai'\nimport chaiDOM from 'chai-dom'\n+import * as pkg from '../src/index.js'\n+\n+import json from '../package.json'\n+\nchai.use(chaiDOM)\n-describe('molecule/radioButtonGroup', () => {\n- const Component = MoleculeRadioButtonGroup\n+describe(json.name, () => {\n+ const {default: Component} = pkg\nconst setup = setupEnvironment(Component)\n+ it('library should include defined exported elements', () => {\n+ // Given\n+ const library = pkg\n+ const libraryExportedMembers = ['default']\n+\n+ // When\n+ const {default: MoleculeRadioButtonGroup, ...others} = library\n+\n+ // Then\n+ expect(Object.keys(library).length).to.equal(libraryExportedMembers.length)\n+ expect(Object.keys(library)).to.have.members(libraryExportedMembers)\n+ expect(Object.keys(others).length).to.equal(0)\n+ })\n+\n+ describe(Component.displayName, () => {\nit('should render without crashing', () => {\n// Given\nconst props = {}\n@@ -46,7 +65,8 @@ describe('molecule/radioButtonGroup', () => {\nconst props = {\nclassName: 'extended-classNames'\n}\n- const findSentence = str => string => string.match(new RegExp(`S*${str}S*`))\n+ const findSentence = str => string =>\n+ string.match(new RegExp(`S*${str}S*`))\n// When\nconst {container} = setup(props)\n@@ -56,3 +76,4 @@ describe('molecule/radioButtonGroup', () => {\nexpect(findClassName(container.innerHTML)).to.be.null\n})\n})\n+})\n",
        "chatgpt_rag": "test(chakra-ui-core): refactor CButtonGroup test suite"
    },
    {
        "msg": "chore: package: v6.2.0",
        "diff": "diff --git a/packages/engine-processor/package.json b/packages/engine-processor/package.json {\n\"name\": \"@putout/engine-processor\",\n- \"version\": \"6.1.0\",\n+ \"version\": \"6.2.0\",\n\"type\": \"commonjs\",\n\"author\": \"coderaiser <mnemonic.enemy@gmail.com> (https://github.com/coderaiser)\",\n\"description\": \"run processors\",\n",
        "date": "20.09.2022 17:40:25",
        "repo": "coderaiser/putout",
        "type": "chore",
        "sim_msg": "chore(coverage): ignore test files\nrefs",
        "sim_diff": "diff --git a/package.json b/package.json \"test:all\": \"yarn run test:unit && yarn run test:acceptance\",\n\"test\": \"yarn run lint && yarn run test:all\"\n},\n+ \"nyc\": {\n+ \"exclude\": [\n+ \"**/*-spec.js\",\n+ \"test\"\n+ ]\n+ },\n\"engines\": {\n\"node\": \"^4.5.0 || ^6.9.0 || ^8.9.0\"\n},\n",
        "chatgpt_rag": "chore(release): update engine-processor version to 6.2.0"
    },
    {
        "msg": "chore: auto publish",
        "diff": "diff --git a/.github/workflows/release.yml b/.github/workflows/release.yml @@ -24,7 +24,11 @@ jobs:\n- name: Install Dependencies\nrun: yarn\n- - name: Create Release Pull Request\n+ - name: Create Release Pull Request or Publish to npm\nuses: changesets/action@master\n+ with:\n+ # This expects you to have a script called release which does a build for your packages and calls changeset publish\n+ publish: yarn release\nenv:\nGITHUB_TOKEN: ${{ secrets.REPO_SCOPED_TOKEN }}\n+ NPM_TOKEN: ${{ secrets.PREACT_NPM_TOKEN }}\n",
        "date": "26.05.2021 03:35:33",
        "repo": "preactjs/preact-cli",
        "type": "chore",
        "sim_msg": "chore: use latest changesets/action for release workflows",
        "sim_diff": "diff --git a/.github/workflows/release.yml b/.github/workflows/release.yml @@ -33,7 +33,7 @@ jobs:\n- name: Create Release Pull Request or Publish to npm\nid: changesets\n- uses: changesets/action@master\n+ uses: changesets/action@v1\nwith:\n# This expects you to have a script called release which does a build for your packages and calls changeset publish\npublish: yarn release\n",
        "chatgpt_rag": "chore: update release workflow to include npm publish step"
    },
    {
        "msg": "chore: Update CI workflow.",
        "diff": "diff --git a/.github/workflows/test.yml b/.github/workflows/test.yml @@ -19,6 +19,9 @@ jobs:\nsteps:\n- uses: actions/checkout@v3\n+ - name: Ensure apt-get is updated\n+ run: sudo apt-get update\n+\n- name: Install Canvas and XML dependencies\nrun: sudo apt-get install -y libxml2-utils\n",
        "date": "25.03.2022 09:05:16",
        "repo": "vega/vega",
        "type": "chore",
        "sim_msg": "ci: enable node 13 and macOS in CI",
        "sim_diff": "diff --git a/.github/workflows/test.yml b/.github/workflows/test.yml @@ -35,9 +35,12 @@ jobs:\n- 10\n- 12.0.0\n- 12\n+ - 13.0.0\n+ - 13\nos:\n- ubuntu-latest\n- windows-latest\n+ - macOS-latest\nsteps:\n- uses: actions/checkout@master\n- uses: actions/setup-node@v1\n",
        "chatgpt_rag": "build: update dependencies installation in CI workflow"
    },
    {
        "msg": "chore(RoutingWrapper): remove stage-0 syntax, fix types import path",
        "diff": "diff --git a/src/common/components/addons/RoutingWrapper/index.jsx b/src/common/components/addons/RoutingWrapper/index.jsx @@ -5,7 +5,7 @@ import React, {Component} from 'react'\nimport {Switch, Redirect} from 'react-router-dom'\nimport LazyLoad from 'components/addons/LazyLoad'\nimport {getAuthState} from 'selectors'\n-import type {RouteItem} from 'routing'\n+import type {RouteItem} from 'types'\ntype Props = {\nroutes: RouteItem[],\n@@ -52,7 +52,7 @@ export default class RoutingWrapper extends Component {\nconst {path, exact, strict, component, lazy} = a\n// can visitor access this route?\n// this function determinates is user allowed to visit route\n- const canAccess = ::this.authCheck\n+ const canAccess = this.authCheck.bind(this)\n// select only props that we need\nconst b = {path, exact, strict, canAccess}\n",
        "date": "17.09.2017 14:28:32",
        "repo": "metnew/suicrux",
        "type": "chore",
        "sim_msg": "refactor(auth): fix bad import",
        "sim_diff": "diff --git a/lib/manager/reducers/user.js b/lib/manager/reducers/user.js import update from 'react-addons-update'\n-import Auth0Manager from '../../common/user/Auth0Manager'\nimport UserPermissions from '../../common/user/UserPermissions'\nimport UserSubscriptions from '../../common/user/UserSubscriptions'\nexport type UserState = {\n- auth0: any,\nisCheckingLogin: boolean,\ntoken: any,\nprofile: any,\n@@ -17,10 +15,6 @@ export type UserState = {\n}\nexport const defaultState = {\n- auth0: new Auth0Manager({\n- client_id: process.env.AUTH0_CLIENT_ID,\n- domain: process.env.AUTH0_DOMAIN\n- }),\nisCheckingLogin: true,\ntoken: null,\nprofile: null,\n",
        "chatgpt_rag": "refactor(components): update import type in RoutingWrapper index file"
    },
    {
        "msg": "chore: package: v1.3.0",
        "diff": "diff --git a/.nycrc.json b/.nycrc.json \"**/.*.*\",\n\"packages/*/coverage\",\n\"packages/*/bin\",\n- \"packages/*/test\"\n+ \"packages/*/test\",\n+ \"**/eslint.config.js\"\n],\n\"branches\": 100,\n\"lines\": 100,\n",
        "date": "30.08.2022 22:47:06",
        "repo": "coderaiser/putout",
        "type": "chore",
        "sim_msg": "refactor(eslint): update eslintrc",
        "sim_diff": "diff --git a/.eslintrc.js b/.eslintrc.js @@ -24,6 +24,8 @@ module.exports = {\n\"xit\": false,\n\"jest\": false,\n\"test\": false,\n+ \"module\": false,\n+ \"require\": false,\n},\n\"extends\": \"eslint:recommended\",\n\"parserOptions\": {\n",
        "chatgpt_rag": "refactor(nyc): update nycrc.json with new test coverage paths"
    },
    {
        "msg": "chore(divider): review divider",
        "diff": "diff --git a/packages/chakra-ui-core/src/CDivider/CDivider.js b/packages/chakra-ui-core/src/CDivider/CDivider.js +/**\n+ * Hey! Welcome to @chakra-ui/vue Divider\n+ *\n+ * Dividers are used to display a thin horizontal or vertical line.\n+ *\n+ * @see Docs https://vue.chakra-ui.com/divider\n+ * @see Source https://github.com/chakra-ui/chakra-ui-vue/blob/master/packages/chakra-ui-core/src/CDivider/CDivider.js\n+ */\n+\nimport CBox from '../CBox'\nimport { baseProps } from '../config/props'\nimport { forwardProps } from '../utils'\n+/**\n+ * CDivider component\n+ *\n+ * Creates a horizontal or vertical dividing rule between sibling\n+ * elements\n+ *\n+ * @extends CBox\n+ * @see Docs https://vue.chakra-ui.com/divider\n+ */\nconst CDivider = {\nname: 'CDivider',\nprops: {\n",
        "date": "16.04.2020 23:38:25",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "fix(image): re-observe after hot-reload",
        "sim_diff": "diff --git a/gridsome/app/components/Image.js b/gridsome/app/components/Image.js import Vue from 'vue'\n+const supportsIntersectionObserver = (\n+ 'document' in global &&\n+ 'IntersectionObserver' in global &&\n+ 'IntersectionObserverEntry' in global &&\n+ 'intersectionRatio' in global.IntersectionObserverEntry.prototype\n+)\n+\n+const observer = supportsIntersectionObserver\n+ ? createObserver()\n+ : null\n+\n+let uid = 0\n+\nexport default {\nfunctional: true,\n@@ -20,19 +33,28 @@ export default {\n},\nrender: (h, { data, props, parent }) => {\n+ const isDev = process.env.NODE_ENV === 'development'\nconst { src, srcset, sizes, size, dataUri } = props.src\nconst isLazy = typeof props.immediate === 'undefined'\nconst classNames = (data.class || []).concat(['g-image'])\nconst noscriptClass = classNames.slice()\nconst res = []\n+ const ref = data.ref || `__image_${uid++}`\n+ const key = data.key || isDev ? ref : undefined\n+\n+ // we set a key to force update image after hot-reload because\n+ // the html attributes doesn't re-render after deletion\n+\nres.push(h('img', {\n...data,\n+ ref,\n+ key,\nclass: classNames,\nattrs: {\n- 'src': dataUri,\n- 'alt': props.alt,\n- 'width': size.width,\n+ src: dataUri,\n+ alt: props.alt,\n+ width: size.width,\n[`${isLazy ? 'data-' : ''}srcset`]: srcset.join(', '),\n[`${isLazy ? 'data-' : ''}sizes`]: sizes,\n[`${isLazy ? 'data-' : ''}src`]: src\n@@ -40,12 +62,25 @@ export default {\n}))\nif (isLazy) {\n+ const onMount = el => {\n+ if (!el) return\n+ else if (!observer) loadImage(el)\n+ else observer.observe(el)\n+ }\n+\n+ const onDestroy = el => {\n+ if (el && observer) observer.unobserve(el)\n+ }\n+\nclassNames.push('g-image--lazy')\nnoscriptClass.push('g-image--loaded')\n+ parent.$once('hook:mounted', () => onMount(parent.$refs[ref]))\n+ parent.$once('hook:updated', () => onMount(parent.$refs[ref]))\n+ parent.$once('hook:beforeDestroy', () => onDestroy(parent.$refs[ref]))\n+\nres.push(h('noscript', null, [\nh('img', {\n- ...data,\nclass: noscriptClass,\nattrs: {\nsrc,\n@@ -60,17 +95,6 @@ export default {\n}\n}\n-const supportsIntersectionObserver = (\n- 'document' in global &&\n- 'IntersectionObserver' in global &&\n- 'IntersectionObserverEntry' in global &&\n- 'intersectionRatio' in global.IntersectionObserverEntry.prototype\n-)\n-\n-const observer = supportsIntersectionObserver\n- ? createObserver()\n- : null\n-\nexport function initIntersectionObserver (router) {\nif (observer) {\nrouter.beforeEach((to, from, next) => {\n@@ -88,16 +112,16 @@ export function observe (selector = '[data-src]', context = document) {\nconst images = context.querySelectorAll(selector)\nif (observer) {\n- images.forEach(el => observer.observe(el))\n+ images.forEach(el => !el.__vue__ && observer.observe(el))\n} else {\n- Array.from(images).forEach(el => loadImage(el))\n+ Array.from(images).forEach(el => !el.__vue__ && loadImage(el))\n}\n}\nexport function unobserve (selector = '[data-src]', context = document) {\nif (observer) {\ncontext.querySelectorAll(selector).forEach(el => {\n- observer.unobserve(el)\n+ if (!el.__vue__) observer.unobserve(el)\n})\n}\n}\n",
        "chatgpt_rag": "feat(CDivider): add documentation comments for CDivider component"
    },
    {
        "msg": "chore: error handling for routr guards",
        "diff": "diff --git a/packages/chakra-ui-docs/plugins/analytics.js b/packages/chakra-ui-docs/plugins/analytics.js import Vue from 'vue'\nimport mixpanel from 'mixpanel-browser'\n-const MIXPANEL_TOKEN = process.env.MIXPANEL_TOKEN\n-\n-mixpanel.init(MIXPANEL_TOKEN)\n-\n-export default ({ app }) => {\n+export default ({ app, env }) => {\n+ try {\n+ mixpanel.init(env.MIXPANEL_TOKEN)\nVue.prototype.$mixpanel = mixpanel\n+ } catch (error) {\n+ console.error('Error initializing docs analytics', error)\n+ }\napp.router.afterEach(to => {\ntry {\n",
        "date": "10.05.2020 21:27:59",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "feat: allow mixpanel options to be specified",
        "sim_diff": "diff --git a/packages/analytics-plugin-mixpanel/src/browser.js b/packages/analytics-plugin-mixpanel/src/browser.js * @link https://getanalytics.io/plugins/mixpanel/\n* @param {object} pluginConfig - Plugin settings\n* @param {string} pluginConfig.token - The mixpanel token associated to a mixpanel project\n+ * @param {object} [pluginConfig.options] - The mixpanel init options https://github.com/mixpanel/mixpanel-js/blob/8b2e1f7b/src/mixpanel-core.js#L87-L110\n* @param {string} [pluginConfig.pageEvent] - Event name to use for page() events (default to page path)\n* @param {string} [pluginConfig.customScriptSrc] - Load mixpanel script from custom source\n* @return {object} Analytics plugin\n@@ -18,7 +19,7 @@ function mixpanelPlugin(pluginConfig = {}) {\nconfig: pluginConfig,\n/* https://developer.mixpanel.com/docs/javascript-full-api-reference#mixpanelinit */\ninitialize: ({ config }) => {\n- const { token, customScriptSrc } = config;\n+ const { token, customScriptSrc, options = {} } = config;\nif (!token) {\nthrow new Error(\"No mixpanel token defined\");\n}\n@@ -119,7 +120,7 @@ function mixpanelPlugin(pluginConfig = {}) {\n}\n})(document, window.mixpanel || []);\n- mixpanel.init(config.token, { batch_requests: true });\n+ mixpanel.init(config.token, { batch_requests: true, ...options });\n},\n/**\n* Identify a visitor in mixpanel\n",
        "chatgpt_rag": "fix: update mixpanel initialization in analytics plugin to use environment variable"
    },
    {
        "msg": "chore(locals): fix locals",
        "diff": "diff --git a/locals/en.json b/locals/en.json \"Dashboard.h1\": \"Noir.\",\n\"Dashboard.h2-1\": \"Intro\",\n\"Dashboard.h2-2\": \"How it works?\",\n- \"Dashboard.h3-1\": \"Hello, this is Noir.\",\n- \"Dashboard.h3-2\": \"Hello, this is Noir.\",\n- \"Dashboard.p-1\": \"How it works?\",\n- \"Dashboard.p-2\": \"Hello, this is Noir.\"\n+ \"Dashboard.h3-1\": \"Noir.\",\n+ \"Dashboard.h3-2\": \"Noir.\",\n+ \"Dashboard.p-1\": \"In progress.\",\n+ \"Dashboard.p-2\": \"In progress.\"\n}\n",
        "date": "16.10.2017 17:15:32",
        "repo": "metnew/suicrux",
        "type": "chore",
        "sim_msg": "feat: Redirect API calls to newer endpoints",
        "sim_diff": "diff --git a/static/_redirects b/static/_redirects +/api/states /api/v1/states/current.json\n+/api/states/daily /api/v1/states/daily.json\n+/api/states/info /api/v1/states/info.json\n+/api/us /api/v1/us/current.json\n+/api/us/daily /api/v1/us/daily.json\n+\n+/api/us/daily date=:date /api/v1/us/:date.json\n+/api/states state:state /api/v1/states/:state/current.json\n+/api/states/daily state=:state /api/v1/states/:state/daily.json\n+/api/states/daily state=:state date=:date /api/v1/states/:state/:date.json\n+\n/api/* https://covid.cape.io/:splat 200\n/charts/dash http://35.212.27.3:8050/\n/graphql /api/graphql\n",
        "chatgpt_rag": "fix: Update text content in Dashboard component"
    },
    {
        "msg": "chore: change test targets\nNo longer testing in node@8 as of\nAdding node@14 and dropping non-LTS targets (odd versions).",
        "diff": "diff --git a/.travis.yml b/.travis.yml @@ -5,10 +5,9 @@ cache:\nnotifications:\nemail: false\nnode_js:\n+ - '14'\n- '12'\n- - '11'\n- '10'\n- - '8'\nbefore_install:\n- if [ \"$TRAVIS_PULL_REQUEST_BRANCH\" == \"\" ]; then echo \"//registry.npmjs.org/:_authToken=\\${NPM_TOKEN}\" >> .npmrc; fi\nafter_success:\n",
        "date": "19.10.2020 19:20:22",
        "repo": "remy/nodemon",
        "type": "chore",
        "sim_msg": "chore(monorepo): fix how travis creates npm login",
        "sim_diff": "diff --git a/.travis.yml b/.travis.yml @@ -30,7 +30,7 @@ after_success:\nnpm run coverage:upload;\nfi\nif [[ $TRAVIS_BRANCH == 'master' || $TRAVIS_BRANCH == 'next' ]] && [[ $TRAVIS_PULL_REQUEST == 'false' ]]; then\n- echo \"//registry.npmjs.org/:_authToken=\\${NPM_TOKEN}\" > .npmrc\n+ printf \"//registry.npmjs.org/:_authToken=$NPM_TOKEN\\n\" > ~/.npmrc\nnpm run release -- --publish\nfi\nbranches:\n",
        "chatgpt_rag": "chore(travis): update Node.js version to 14 and remove support for Node.js 8 and 11"
    },
    {
        "msg": "chore: updated components list",
        "diff": "diff --git a/packages/chakra-ui-docs/components/components.js b/packages/chakra-ui-docs/components/components.js @@ -23,7 +23,7 @@ const components = [\n'ControlBox',\n'Divider',\n'Drawer',\n- // 'Editable',\n+ 'Editable',\n'Flex',\n'FormControl',\n'Grid',\n@@ -45,7 +45,7 @@ const components = [\n'Select',\n'Slider',\n'Spinner',\n- // 'Stat',\n+ 'Stat',\n'Stack',\n'Switch',\n'Tabs',\n",
        "date": "01.04.2020 00:58:14",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "fix(Dropdown): fix arrow color",
        "sim_diff": "diff --git a/packages/yoga/src/Dropdown/web/Dropdown.jsx b/packages/yoga/src/Dropdown/web/Dropdown.jsx @@ -245,13 +245,15 @@ const ArrowIcon = styled(({ isOpen, selected, ...props }) => (\n${({\nisOpen,\nselected,\n+ disabled,\ntheme: {\nyoga: {\ncomponents: { dropdown },\n},\n},\n}) => `\n- fill: ${dropdown.disabled.arrow.fill};\n+ fill: ${dropdown.arrow.fill};\n+ ${disabled ? `fill: ${dropdown.disabled.arrow.fill};` : ''};\n${selected ? `fill: ${dropdown.selected.arrow.fill};` : ''};\ntransform: rotate(${isOpen ? '180deg' : '0'});\n`}\n@@ -296,7 +298,11 @@ const Dropdown = ({ label, disabled, full, options, onChange, ...rest }) => (\ndisabled={disabled}\n{...getToggleButtonProps()}\n>\n- <ArrowIcon isOpen={isOpen} selected={selectedItem !== null} />\n+ <ArrowIcon\n+ isOpen={isOpen}\n+ selected={selectedItem !== null}\n+ disabled={disabled}\n+ />\n</Button>\n</Selector>\n",
        "chatgpt_rag": "feat(Components): enable Editable and Stat components in components list"
    },
    {
        "msg": "chore(firebase-auth-sw): fixed regression introduced in last commit for firebase-auth-sw",
        "diff": "diff --git a/lib/sw-templates/firebase-auth-sw.js b/lib/sw-templates/firebase-auth-sw.js const ignorePaths = <%= serialize(options.ignorePaths) %>\n-<% if (options.onFirebaseHosting) { %>\n+<% if (options.loadFromFirebaseHosting) { %>\n// Only works on Firebase hosting!\nimportScripts('/__/firebase/<%= options.firebaseVersion %>/firebase-app.js')\nimportScripts('/__/firebase/<%= options.firebaseVersion %>/firebase-auth.js')\n",
        "date": "22.12.2020 23:03:08",
        "repo": "nuxt-community/firebase-module",
        "type": "chore",
        "sim_msg": "feat: add proxy.setGuestAuth(auth)",
        "sim_diff": "diff --git a/lib/config.js b/lib/config.js @@ -297,12 +297,15 @@ function getAuths(_url) {\nexports.getAuths = getAuths;\nexports.setAuth = function(auth) {\n- if (!auth) {\n- return;\n- }\n+ if (auth) {\nconfig.username = auth.username;\nconfig.password = auth.password;\nsetGuestAuth(auth);\n+ }\n+};\n+\n+exports.setGuestAuth = function(auth) {\n+ auth && setGuestAuth(auth);\n};\nfunction parseHost(host) {\n",
        "chatgpt_rag": "refactor: change options.onFirebaseHosting to options.loadFromFirebaseHosting in firebase-auth-sw.js"
    },
    {
        "msg": "chore: fix linting issue",
        "diff": "diff --git a/lib/monitor/match.js b/lib/monitor/match.js @@ -90,7 +90,9 @@ function rulesToMonitor(watch, ignore, config) {\nrule.slice(-1) === '*' &&\nrule.indexOf('*.') === -1) {\n- if (rule.slice(-2) !== '**') rule += '*/*';\n+ if (rule.slice(-2) !== '**') {\n+ rule += '*/*';\n+ }\n}\n",
        "date": "06.01.2018 23:53:59",
        "repo": "remy/nodemon",
        "type": "chore",
        "sim_msg": "refactor: rules",
        "sim_diff": "diff --git a/lib/rules/rules.js b/lib/rules/rules.js @@ -26,7 +26,7 @@ var PATH_RE = /^<.*>$/;\nvar VALUE_RE = /^\\(.*\\)$/;\nvar REG_URL_RE = /^((?:[\\w.*-]+:|\\*+)?\\/\\/)?([\\w*.-]*)/;\nvar REG_URL_SYMBOL_RE = /^(\\^+)/;\n-var PATTERN_FILTER_RE = /^x?(?:filter|ignore):\\/\\/(.+)\\/(i)?$/;\n+var PATTERN_FILTER_RE = /^(?:filter|ignore):\\/\\/(.+)\\/(i)?$/;\nvar PATTERN_WILD_FILTER_RE = /^(?:filter|ignore):\\/\\/(!)?(\\*+\\/)/;\nvar aliasProtocols = protoMgr.aliasProtocols;\nvar regUrlCache = {};\n",
        "chatgpt_rag": "style: improve formatting in rulesToMonitor function"
    },
    {
        "msg": "chore(nuxt): fix internal icons registration",
        "diff": "diff --git a/packages/chakra-ui-nuxt/lib/module.js b/packages/chakra-ui-nuxt/lib/module.js @@ -39,7 +39,7 @@ module.exports = function (moduleOptions) {\n// Icons\nconst icons = {\n- ...internalIcons.default,\n+ ...internalIcons,\n...packIcons,\n...(options.icons && options.icons.extend)\n}\n",
        "date": "31.12.2020 14:14:45",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "chore: Added designs icon\nSee:",
        "sim_diff": "diff --git a/packages/components/src/Icon/icons.js b/packages/components/src/Icon/icons.js @@ -39,7 +39,10 @@ const withBreasts =\nconst withoutBreasts =\n'M 6.2021092,6.7988281 C 5.0433189,10.972649 5.2215488,13.211802 5.2215488,16.798828 h 5.8983122 l 0.143133,-1.21128 c 0.331559,-1.834081 0.655671,-2.543616 1.078829,0.07477 l 0.134587,1.136509 h 5.896176 c 0,-3.587026 0.180363,-5.826179 -0.978425,-9.9999999 z'\n+const designs = 'M 45.47317,1.7975677e-4 C 41.26883,0.01048976 34.91087,0.38220476 30.13561,2.5013188 22.36395,5.9501498 8.31064,18.328616 1.87893,31.96567 l 18.56735,16.733864 5.77951,-3.926377 c 0,0 4.77451,13.774607 5.68285,45.319717 0.25027,8.69169 -1.19459,22.564756 -2.05311,34.639736 h 77.31363 c -0.85842,-12.07498 -2.30288,-25.948046 -2.05259,-34.639736 0.90834,-31.54511 5.68233,-45.319717 5.68233,-45.319717 l 5.7795,3.926892 18.56735,-16.734379 C 128.71415,18.328574 114.66126,5.9501588 106.88957,2.5013188 102.11434,0.38220476 95.75585,0.01048776 91.55149,1.7975677e-4 90.8881,-0.00142024 90.14467,0.00817976 89.40434,0.02084976 89.13193,7.6078498 85.48205,12.226049 81.18056,14.875241 c -4.47214,2.754281 -9.60461,3.445267 -12.52172,3.445267 -2.91132,0 -8.11768,-0.640747 -12.66383,-3.369303 C 51.6202,12.325479 47.8931,7.7032998 47.61827,0.02084976 c -0.73959,-0.01264 -1.48235,-0.0223 -2.1451,-0.0206700032 z M 48.61975,0.03893976 C 48.89174,7.3855928 52.36932,11.60825 56.51074,14.093896 c 4.31416,2.589313 9.38691,3.226676 12.1481,3.226676 2.7554,0 7.75375,-0.684159 11.99616,-3.296956 4.07037,-2.506844 7.4785,-6.7304132 7.74837,-13.98415924 -1.01513,0.0224 -1.93569,0.04886 -2.47994,0.06511 C 85.92343,7.3410168 80.378,14.660708 68.51208,14.768271 56.64652,14.660496 51.10125,7.3409098 51.10125,0.10456676 c -0.5447,-0.01627 -1.46534,-0.04322 -2.4815,-0.06563 z M 1.44176,32.919104 C 0.89312,34.156693 0.40849,35.40315 0,36.652724 l 16.41035,14.78928 3.18482,-2.163691 z m 134.14116,5.29e-4 -18.15291,16.358693 3.18432,2.163691 16.41036,-14.78928 c -0.40841,-1.249378 -0.89326,-2.495706 -1.44177,-3.733104 z M 29.78576,125.73256 c -0.0817,1.18621 -0.15918,2.35987 -0.22583,3.50005 h 35.17667 6.4611 36.26705 c -0.0666,-1.14018 -0.14417,-2.31384 -0.22582,-3.50005 z'\n+\nexport default {\n+ designs,\ndiscord,\ngitter,\ngithub,\n",
        "chatgpt_rag": "chore: Updated icons configuration in module.js"
    },
    {
        "msg": "chore: fix imports order",
        "diff": "diff --git a/packages/chakra-ui-core/src/CThemeProvider/tests/CThemeProvider.test.js b/packages/chakra-ui-core/src/CThemeProvider/tests/CThemeProvider.test.js import { toCSSVar } from '@chakra-ui/styled-system'\nimport { mount, shallowMount } from '@vue/test-utils'\nimport theme from '@chakra-ui/theme-vue'\n-import { getElementStyles } from '@/tests/test-utils'\n-\nimport CThemeProvider from '..'\n+import { getElementStyles } from '@/tests/test-utils'\ndescribe('CThemeProvider', () => {\nconst ChildComponent = {\n",
        "date": "26.08.2021 02:21:27",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "refactor(container): adds script setup syntac, removes buildClass usage",
        "sim_diff": "diff --git a/src/components/container/CdrContainer.vue b/src/components/container/CdrContainer.vue -<template>\n- <component :is=\"tag\" :class=\"mapClasses(style, baseClass, modifierClass)\">\n- <slot />\n- </component>\n-</template>\n-\n-<script>\n-import { defineComponent, useCssModule, computed } from 'vue';\n+<script setup>\n+import { useCssModule, computed } from 'vue';\nimport propValidator from '../../utils/propValidator';\n-import { buildClass } from '../../utils/buildClass';\nimport mapClasses from '../../utils/mapClasses';\n-export default defineComponent({\n- name: 'CdrContainer',\n- props: {\n+const props = defineProps({\n/** Any valid HTML tag */\ntag: {\ntype: String,\n@@ -27,19 +18,21 @@ export default defineComponent({\nfalse,\n),\n},\n- },\n- setup(props, ctx) {\n- const baseClass = 'cdr-container';\n- const modifierClass = computed(() => buildClass(baseClass, props.modifier));\n- return {\n- style: useCssModule(),\n- baseClass,\n- modifierClass,\n- mapClasses,\n- };\n- },\n});\n+\n+const baseClass = 'cdr-container';\n+const style = useCssModule();\n+\n+/************************ Computed properties *************************/\n+const modifierClass = computed(() => `${baseClass}--${props.modifier}`);\n+\n</script>\n+<template>\n+ <component :is=\"tag\" :class=\"mapClasses(style, baseClass, modifierClass)\">\n+ <slot />\n+ </component>\n+</template>\n+\n<style lang=\"scss\" module src=\"./styles/CdrContainer.module.scss\">\n</style>\n",
        "chatgpt_rag": "refactor(CThemeProvider): removes unused import and reorganizes imports in CThemeProvider.test.js"
    },
    {
        "msg": "chore: don't show perf warnings for test scripts",
        "diff": "diff --git a/karma.conf.js b/karma.conf.js @@ -70,6 +70,7 @@ module.exports = function (config) {\nwebpack: {\nplugins: [defaultsPlugin],\ndevtool: 'inline-source-map',\n+ performance: { hints: false },\nmodule: {\nrules: [\n{\n",
        "date": "09.08.2019 15:57:59",
        "repo": "rollbar/rollbar.js",
        "type": "chore",
        "sim_msg": "ci: bump transition unit test duration",
        "sim_diff": "diff --git a/test/unit/karma.base.config.js b/test/unit/karma.base.config.js @@ -19,7 +19,7 @@ var webpackConfig = {\n__WEEX__: false,\n'process.env': {\nNODE_ENV: '\"development\"',\n- TRANSITION_DURATION: 50,\n+ TRANSITION_DURATION: process.env.CI ? 100 : 50,\nTRANSITION_BUFFER: 10\n}\n})\n",
        "chatgpt_rag": "build: disable webpack performance hints in karma config"
    },
    {
        "msg": "chore(docs): rephrase sentence for grammatical correctness\nChange Text from \"Passing anything other than a string is an error.\" to \"Passing anything other than a string will result in an error.\"",
        "diff": "diff --git a/README.md b/README.md @@ -14,7 +14,7 @@ A library of string validators and sanitizers.\n**This library validates and sanitizes strings only.**\nIf you're not sure if your input is a string, coerce it using `input + ''`.\n-Passing anything other than a string is an error.\n+Passing anything other than a string will result in an error.\n## Installation and Usage\n",
        "date": "03.03.2021 16:11:59",
        "repo": "validatorjs/validator.js",
        "type": "chore",
        "sim_msg": "docs: update formating README",
        "sim_diff": "diff --git a/README.md b/README.md @@ -113,7 +113,7 @@ Please don't create GitHub issues for security issues. Instead, please send an e\n### Contributing\n-Please follow [these steps](CONTRIBUTING.md) to contribute.\n+#### [Please follow these steps to contribute.](CONTRIBUTING.md)\n### License\n",
        "chatgpt_rag": "docs: update wording in README for string validation and sanitization"
    },
    {
        "msg": "chore: downgrade jsdom to v19 to support node 12",
        "diff": "diff --git a/package.json b/package.json \"holderjs\": \"^2.9.3\",\n\"jest\": \"28.1.3\",\n\"jest-environment-jsdom\": \"28.1.3\",\n- \"jsdom\": \"^20.0.2\",\n+ \"jsdom\": \"^19.0.0\",\n\"json-loader\": \"^0.5.7\",\n\"microbundle\": \"^0.13.3\",\n\"prettier\": \"2.7.1\",\n",
        "date": "14.11.2022 11:03:02",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "sim_msg": "chore(deps): lock localforage version",
        "sim_diff": "diff --git a/package.json b/package.json \"in-publish\": \"^2.0.0\",\n\"is-function\": \"^1.0.1\",\n\"jsonwebtoken\": \"^7.3.0\",\n- \"localforage\": \"^1.4.3\",\n+ \"localforage\": \"~1.4.3\",\n\"lodash\": \"^4.17.4\",\n\"lodash.assign\": \"^3.1.0\",\n\"lodash.bindall\": \"^3.1.0\",\n",
        "chatgpt_rag": "chore(deps): lock jsdom version to ^19.0.0"
    },
    {
        "msg": "chore(config): remove unused options",
        "diff": "diff --git a/config.js b/config.js @@ -42,12 +42,6 @@ const config = {\n...envConfig,\npaths,\n- // ----------------------------------\n- // Server Configuration\n- // ----------------------------------\n- server_host: 'localhost',\n- server_port: process.env.PORT || 8080,\n-\n// ----------------------------------\n// Compiler Configuration\n// ----------------------------------\n",
        "date": "13.08.2018 10:41:13",
        "repo": "semantic-org/semantic-ui-react",
        "type": "chore",
        "sim_msg": "refactor: refine custom plugin path",
        "sim_diff": "diff --git a/lib/plugins/module-paths.js b/lib/plugins/module-paths.js @@ -35,7 +35,7 @@ if (config.noGlobalPlugins) {\nvar env = process.env || {};\nvar execPath = process.execPath;\nvar isWin = process.platform === 'win32';\n-var paths = addon.concat(module.paths.map(formatPath));\n+var paths = module.paths.map(formatPath);\nvar globalDir = formatPath(getGlobalDir());\nvar appDataDir = formatPath(env.APPDATA, 'npm');\nvar pluginsPath = formatPath(config.baseDir);\n@@ -58,6 +58,7 @@ if (pluginsPath && paths.indexOf(pluginsPath) == -1) {\n}\npaths.unshift(config.CUSTOM_PLUGIN_PATH, config.systemPluginPath);\n+paths = addon.concat(paths);\naddDebugPaths(paths);\nvar nvmBin = env.NVM_BIN;\n",
        "chatgpt_rag": "refactor: remove server configuration from config file"
    },
    {
        "msg": "chore: add chakra to deps",
        "diff": "diff --git a/package.json b/package.json \"website\"\n],\n\"nohoist\": [\n- \"core-js\"\n+ \"core-js\",\n+ \"@chakra-ui/vue\"\n]\n},\n\"scripts\": {\n\"evalbundle\": \"bundlesize\"\n},\n\"dependencies\": {\n+ \"@chakra-ui/vue\": \"^0.7.0-next.2\",\n\"@babel/core\": \"^7.9.0\",\n\"@babel/plugin-proposal-object-rest-spread\": \"^7.7.4\",\n\"@babel/plugin-transform-modules-commonjs\": \"^7.7.4\",\n",
        "date": "23.12.2020 15:46:25",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "chore(deps): updates Vue peerDependency to 3.0.0",
        "sim_diff": "diff --git a/packages/casl-vue/package.json b/packages/casl-vue/package.json \"license\": \"MIT\",\n\"peerDependencies\": {\n\"@casl/ability\": \"^2.0.0 || ^3.0.0 || ^4.0.0 || ^5.1.0\",\n- \"vue\": \"^2.0.0\"\n+ \"vue\": \"^3.0.0\"\n},\n\"devDependencies\": {\n\"@babel/core\": \"^7.8.4\",\n",
        "chatgpt_rag": "chore(deps): updates @chakra-ui/vue dependency to ^0.7.0-next.2 and adds it to the nohoist list"
    },
    {
        "msg": "chore(styles/theme): random color theme",
        "diff": "diff --git a/src/common/styles/theme.jsx b/src/common/styles/theme.jsx * {@link https://www.materialpalette.com/}\n*/\nexport default {\n- primaryColorDark: '#00796B',\n- primaryColor: '#009688',\n- primaryColorLight: '#B2DFDB',\n+ primaryColorDark: '#0e1319',\n+ primaryColor: '#1b1e2f',\n+ primaryColorLight: '#303747',\nprimaryColorText: '#F7F7F7',\n- accentColor: '#00BCD4',\n+ accentColor: '#e2c7c0',\nprimaryTextColor: '#212121',\nsecondaryTextColor: '#757575',\ndividerColor: '#BDBDBD'\n",
        "date": "17.09.2017 14:50:28",
        "repo": "metnew/suicrux",
        "type": "chore",
        "sim_msg": "refactor(theme): replace values on primary to secondary",
        "sim_diff": "diff --git a/packages/doc/src/components/Theme/Colors.jsx b/packages/doc/src/components/Theme/Colors.jsx @@ -113,11 +113,11 @@ const Colors = ({ theme }) => {\n<Wrapper>\n<BackgroundColor theme={theme} color=\"primary\">\n<span>primary</span>\n- <span>#231B22</span>\n+ <span>#D8385E</span>\n</BackgroundColor>\n<BackgroundColor theme={theme} color=\"secondary\">\n<span>secondary</span>\n- <span>#D8385E </span>\n+ <span>#231B22</span>\n</BackgroundColor>\n<FeedbackColors theme={theme} color=\"success\" token={0}>\n<span> feedback.success.light </span>\n",
        "chatgpt_rag": "refactor(theme): update primary color values to new shades"
    },
    {
        "msg": "chore: remove vue-template-computer from devDeps",
        "diff": "diff --git a/package.json b/package.json \"styled-system\": \"^5.1.2\",\n\"v-scroll-lock\": \"^1.1.0\",\n\"vue-loader\": \"^15.7.1\",\n- \"vue-lorem-ipsum\": \"^0.0.1\",\n- \"vue-template-compiler\": \"^2.6.10\"\n+ \"vue-lorem-ipsum\": \"^0.0.1\"\n}\n}\n",
        "date": "09.03.2020 09:14:43",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "feat(app): Upgrade vue-loader to v16.4.1",
        "sim_diff": "diff --git a/app/package.json b/app/package.json \"typescript\": \"4.2.2\",\n\"url-loader\": \"4.1.1\",\n\"vue\": \"3.1.5\",\n- \"vue-loader\": \"16.3.1\",\n+ \"vue-loader\": \"16.4.1\",\n\"vue-router\": \"4.0.10\",\n\"vue-style-loader\": \"4.1.3\",\n\"webpack\": \"^5.35.0\",\n",
        "chatgpt_rag": "fix(package): Remove vue-template-compiler and upgrade vue-loader to v15.7.1"
    },
    {
        "msg": "chore(carbonads): update script src",
        "diff": "diff --git a/docs/app/Components/CarbonAd/CarbonAd.js b/docs/app/Components/CarbonAd/CarbonAd.js @@ -11,7 +11,7 @@ class CarbonAd extends Component {\nscript.async = true\nscript.id = '_carbonads_js'\nscript.type = 'text/javascript'\n- script.src = '//cdn.carbonads.com/carbon.js?zoneid=1673&serve=C6AILKT&placement=reactsemanticuicom'\n+ script.src = '//cdn.carbonads.com/carbon.js?serve=CK7DT23J&placement=reactsemanticuicom'\nthis.ifRef(ref => ref.appendChild(script))\n}\n",
        "date": "24.05.2018 23:14:54",
        "repo": "semantic-org/semantic-ui-react",
        "type": "chore",
        "sim_msg": "style: :art: use else if and move some whitespace",
        "sim_diff": "diff --git a/includes/header.ejs b/includes/header.ejs <% if(page == 'stats'){ %>\n<% if (pack.disabled) { %>\n<div class=\"selected_button\" title=\"Disabled due to unknown issues.\" disabled>Disabled</div>\n- <% } else { %>\n- <% if(req.cookies.pack == pack.id){ %>\n- <div class=\"selected_button\">In Use</div>\n+ <% } else if(req.cookies.pack == pack.id){ %>\n+ <div class=\"selected_button\" disabled>In Use</div>\n<% } else { %>\n<div class=\"switch_packs_button\" onclick=\"switchPack('<%= pack.id %>')\">Switch</div>\n<% } %>\n<% } %>\n- <% } %>\n</div>\n<% } %>\n</div>\n",
        "chatgpt_rag": "style: :art: update CarbonAd script source URL with new serve parameter"
    }
]