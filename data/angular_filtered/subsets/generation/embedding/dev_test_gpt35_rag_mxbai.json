[
    {
        "msg": "build: remove d3 from devDependencies\nd3 is already in dependencies, which is sufficient",
        "diff": "diff --git a/package.json b/package.json \"conventional-commit-types\": \"^2.1.0\",\n\"copy-webpack-plugin\": \"^1.1.1\",\n\"cz-conventional-changelog\": \"^1.2.0\",\n- \"d3\": \"^3.5.17\",\n\"eslint\": \"^1.10.3\",\n\"eslint-config-standard\": \"^4.4.0\",\n\"eslint-plugin-promise\": \"^1.0.8\",\n",
        "date": "26.04.2017 09:28:55",
        "repo": "kitware/candela",
        "type": "build",
        "sim_msg": "chore(eslint): Upgrade eslint-config-opensphere to 3.0.0 and fix issues.",
        "sim_diff": "diff --git a/package.json b/package.json \"cz-conventional-changelog\": \"^1.2.0\",\n\"eslint\": \"^6.0.0\",\n\"eslint-config-google\": \"^0.13.0\",\n- \"eslint-config-opensphere\": \"^1.1.1\",\n+ \"eslint-config-opensphere\": \"^3.0.0\",\n\"eslint-plugin-google-camelcase\": \"^0.0.2\",\n\"eslint-plugin-jsdoc\": \"^8.6.0\",\n\"eslint-plugin-opensphere\": \"^2.0.0\",\n",
        "chatgpt_rag": "chore(eslint): Upgrade eslint to version 6.0.0 and fix issues."
    },
    {
        "msg": "build(TrackerDash): revert to d3v3",
        "diff": "diff --git a/package.json b/package.json \"UpSet\": \"git+https://github.com/jeffbaumes/upset#no-global-vars\",\n\"brace\": \"^0.7.0\",\n\"css-loader\": \"^0.23.1\",\n- \"d3\": \"^4.8.0\",\n+ \"d3\": \"^3.5.17\",\n\"datalib\": \"^1.7.3\",\n\"geojs\": \"^0.9.1\",\n\"glo\": \"github:ronichoudhury-work/glo#dist\",\n",
        "date": "31.05.2017 11:42:33",
        "repo": "kitware/candela",
        "type": "build",
        "sim_msg": "build(npm): :arrow_up: handlebars, nyc",
        "sim_diff": "diff --git a/package.json b/package.json \"figures\": \"3.2.0\",\n\"get-stream\": \"5.1.0\",\n\"glob\": \"7.1.6\",\n- \"handlebars\": \"4.7.4\",\n+ \"handlebars\": \"4.7.6\",\n\"indent-string\": \"4.0.0\",\n\"inquirer\": \"7.1.0\",\n\"lodash\": \"4.17.15\",\n\"mocha\": \"7.1.1\",\n\"normalize-newline\": \"3.0.0\",\n\"npm-run-all\": \"4.1.5\",\n- \"nyc\": \"15.0.0\",\n+ \"nyc\": \"15.0.1\",\n\"prettier\": \"1.19.1\",\n\"shx\": \"0.3.2\",\n\"symlink-dir\": \"3.1.2\",\n",
        "chatgpt_rag": "build(npm): :arrow_down: d3"
    },
    {
        "msg": "build: updated lockfile",
        "diff": "diff --git a/yarn.lock b/yarn.lock resolved \"https://registry.yarnpkg.com/@bcoe/v8-coverage/-/v8-coverage-0.2.3.tgz#75a2e8b51cb758a7553d6804a5932d7aace75c39\"\nintegrity sha512-0hYQ8SB4Db5zvZB4axdMHGwEaQjkZzFjQiN9LVYvIFB2nSUHW9tYpxWriPrWDASIxiaXax83REcLxuSdnGPZtw==\n+\"@chakra-ui/vue@^0.4.1\":\n+ version \"0.4.2\"\n+ resolved \"https://registry.yarnpkg.com/@chakra-ui/vue/-/vue-0.4.2.tgz#5a6dc8ab19cad1b59039632037e6a32360378a71\"\n+ integrity sha512-wQ53rlbrG4+AsyAUFuaboF2R3kHfwHFD9jUqL51UsVkc5cUecweyXvavNF/YRMBkAI1ni6BzPM/3q/9LqqHE7w==\n+ dependencies:\n+ \"@popperjs/core\" \"^2.4.0\"\n+ \"@styled-system/css\" \"^5.0.23\"\n+ animejs \"^3.1.0\"\n+ aria-hidden \"^1.1.1\"\n+ breadstick \"^0.2.14\"\n+ color \"^3.1.2\"\n+ focus-trap \"^5.1.0\"\n+ focus-trap-vue \"^0.0.4\"\n+ lodash-es \"^4.17.15\"\n+ portal-vue \"^2.1.6\"\n+ styled-system \"^5.1.2\"\n+ v-scroll-lock \"^1.1.0\"\n+\n\"@cnakazawa/watch@^1.0.3\":\nversion \"1.0.4\"\nresolved \"https://registry.yarnpkg.com/@cnakazawa/watch/-/watch-1.0.4.tgz#f864ae85004d0fcab6f50be9141c4da368d1656a\"\n",
        "date": "09.05.2020 18:24:45",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "build",
        "sim_msg": "build: update `yarn.lock` file\nCommit missing diff from `yarn.lock` file.\nRelates to",
        "sim_diff": "diff --git a/yarn.lock b/yarn.lock resolved \"https://registry.yarnpkg.com/@ovh-ux/translate-async-loader/-/translate-async-loader-1.0.8.tgz#7cbdc3dfed1042f511206ff6bb9f14c33b8406ba\"\nintegrity sha512-8yEhPeRTSxtEO9ODXRYZw6pzRQiV5ULCTi8mIzt39m/b9N2TcIF4ILTPsaa8xpE4npHKa/iYgL9z0HJUFi2LGQ==\n-\"@ovh-ux/ui-kit@^5.4.0\":\n- version \"5.4.0\"\n- resolved \"https://registry.yarnpkg.com/@ovh-ux/ui-kit/-/ui-kit-5.4.0.tgz#4998dc9189771c98d02ba16f2d56a741190a9809\"\n- integrity sha512-oelnBx2LFYAuqhHt8bjddEzn8QLqX7ZKojz4F1Q0R05unMb6ptvfgJKsIlgQbtayp6rZowpNfEcNkYQOwjH4cg==\n+\"@ovh-ux/ui-kit@^6.0.0\":\n+ version \"6.1.1\"\n+ resolved \"https://registry.yarnpkg.com/@ovh-ux/ui-kit/-/ui-kit-6.1.1.tgz#8867983b2cda792e30ba162b8282c9dcce74a46f\"\n+ integrity sha512-lrfyZAIeY3avJd+EbjJH22aNVPiz1jfH8pjBL4jzAxHSif0MX/5C/Nl/2ijnfn9QM3v5+69rpIbWuTlJdZOiCg==\n\"@ovhcloud/reket-axios-client@^0.2.1\":\nversion \"0.2.1\"\n",
        "chatgpt_rag": "build: update `yarn.lock` file\nUpdated dependencies for \"@chakra-ui/vue\" to version 0.4.2\nAdded new dependencies: \"@popperjs/core\", \"@styled-system/css\", \"animejs\", \"aria-hidden\", \"breadstick\", \"color\", \"focus-trap\", \"focus-trap-vue\", \"lodash-es\", \"portal-vue\", \"styled-system\", \"v-scroll-lock\"\nUpdated version for \"@cnakazawa/watch\" to 1.0.4"
    },
    {
        "msg": "build(npm): updated version to 5.1.0",
        "diff": "diff --git a/package.json b/package.json {\n\"name\": \"@nuxtjs/firebase\",\n- \"version\": \"5.0.7\",\n+ \"version\": \"5.1.0\",\n\"description\": \"Intergrate Firebase into your Nuxt project.\",\n\"keywords\": [\n\"firebase\",\n\"cz-conventional-changelog\": \"latest\",\n\"eslint\": \"latest\",\n\"firebase\": \"^7.14.2\",\n- \"husky\": \"latest\",\n+ \"husky\": \"^4.2.5\",\n\"jest\": \"^25.5.3\",\n\"standard-version\": \"latest\",\n\"vuepress\": \"^1.4.1\",\n",
        "date": "01.05.2020 21:11:47",
        "repo": "nuxt-community/firebase-module",
        "type": "build",
        "sim_msg": "chore(ci): update prepare scripts",
        "sim_diff": "diff --git a/package.json b/package.json \"docs-gen\": \"cross-env NODE_ENV=docs nuxt generate -c docs/nuxt.config.js\",\n\"lint\": \"eslint --ext .js,.md,.vue ./\",\n\"postinstall\": \"opencollective || exit 0\",\n- \"prepare\": \"husky install\",\n+ \"prepare\": \"husky install && yarn run build\",\n\"prettify\": \"prettier --write '**/*.{js,json,md,scss,ts,vue}'\",\n\"release\": \"yarn run prettify && yarn run test && yarn run build && yarn run release-notes && standard-version\",\n\"release-notes\": \"jiti ./scripts/release-notes\",\n",
        "chatgpt_rag": "chore(deps): update husky version to ^4.2.5"
    },
    {
        "msg": "build(webpack): wrap existing loaders' `exclude` property in list if not already",
        "diff": "diff --git a/webpack.js b/webpack.js @@ -39,15 +39,24 @@ module.exports = function (config, basePath, options) {\n// directives.\nvar exclude = options.excludeCandelaNM === undefined || options.excludeCandelaNM;\n+ // Exclude the base paths from having existing loaders applied to them.\n+ if (exclude) {\n// Install empty module and module.loaders entries if missing.\nconfig.module = config.module || {};\nconfig.module.loaders = config.module.loaders || [];\n- // Exclude the base paths from having existing loaders applied to them.\n- if (exclude) {\n- config.modules.loaders = config.modules.loaders || [];\n- config.modules.loaders.forEach(function (loader) {\n- loader.exclude = (loader.exclude || []).concat(includePaths);\n+ // For each loader, append the Candela include paths to its `exclude`\n+ // property.\n+ config.module.loaders.forEach(function (loader) {\n+ // Install an empty list if there is no `exclude` property.\n+ loader.exclude = loader.exclude || [];\n+\n+ // If the `exclude` propertry is a non-list singleton, wrap it in a list.\n+ if (!Array.isArray(loader.exclude)) {\n+ loader.exclude = [loader.exclude];\n+ }\n+\n+ loader.exclude = loader.exclude.concat(includePaths);\n});\n}\n",
        "date": "05.01.2017 13:28:30",
        "repo": "kitware/candela",
        "type": "build",
        "sim_msg": "chore: CopyWebpackPlugin error on windows due to path separators",
        "sim_diff": "diff --git a/webpack.config.js b/webpack.config.js @@ -116,7 +116,7 @@ module.exports = function (env) {\nglobOptions: { ignore: '**/*.js' },\n},\n{\n- from: path.join(__dirname, `${CODE_SOURCE_DIR}/extension/legacy/**/*.css`),\n+ from: path.join(__dirname, `${CODE_SOURCE_DIR}/extension/legacy/**/*.css`).replace(/\\\\/g, '/'),\nto: path.join(__dirname, `${BUILD_PATH}/web-accessibles`),\ncontext: 'src/extension',\n},\n@@ -124,7 +124,7 @@ module.exports = function (env) {\nfrom: path.join(\n__dirname,\n`${CODE_SOURCE_DIR}/extension/legacy/features/l10n/locales/*.js`\n- ),\n+ ).replace(/\\\\/g, '/'),\nto: path.join(__dirname, `${BUILD_PATH}/web-accessibles`),\ncontext: 'src/extension',\n},\n",
        "chatgpt_rag": "fix: Correct typo in config.modules.loaders to config.module.loaders"
    },
    {
        "msg": "build: provide custom Dockerfile location",
        "diff": "diff --git a/.circleci/config.yml b/.circleci/config.yml @@ -201,7 +201,7 @@ jobs:\ndocker buildx create docker-offen --name docker-offen --use\ndocker buildx inspect --bootstrap\nfor tag in \"${DOCKER_IMAGE_TAGS[@]}\"; do\n- docker buildx build --platform linux/amd64,linux/arm64,linux/arm/v7 -t offen/offen:$tag . --push\n+ docker buildx build --platform linux/amd64,linux/arm64,linux/arm/v7 -f ./build/Dockerfile -t offen/offen:$tag . --push\ndone\n- store_artifacts:\npath: /tmp/artifacts\n",
        "date": "15.02.2022 20:51:36",
        "repo": "offen/offen",
        "type": "build",
        "sim_msg": "feat: added latest tag to docker images",
        "sim_diff": "diff --git a/.circleci/config.yml b/.circleci/config.yml @@ -100,9 +100,10 @@ jobs:\nname: Build and push production Docker image\ncommand: |\nVERSION=$(git describe --tags `git rev-list --tags --max-count=1` | cut -c2-100)\n- docker build -t ${DOCKER_REPOSITORY}:${VERSION} .\n+ docker build -t ${DOCKER_REPOSITORY}:${VERSION} -t ${DOCKER_REPOSITORY}:latest .\ndocker login -u ${DOCKER_USER} -p ${DOCKER_PASS}\ndocker push ${DOCKER_REPOSITORY}:${VERSION}\n+ docker push ${DOCKER_REPOSITORY}:latest\n- webhook/notify:\nendpoint: \"${GITOPS_PR_WEBHOOK}\"\n",
        "chatgpt_rag": "refactor: updated Dockerfile path in build command"
    },
    {
        "msg": "build: resolve chakra ui dep version",
        "diff": "diff --git a/package.json b/package.json \"@babel/plugin-transform-modules-commonjs\": \"^7.7.4\",\n\"@babel/plugin-transform-parameters\": \"^7.7.4\",\n\"@babel/preset-env\": \"^7.9.5\",\n- \"@chakra-ui/vue\": \"^0.5.2\",\n+ \"@chakra-ui/vue\": \"^0.5.3\",\n\"@commitlint/cli\": \"^8.2.0\",\n\"@commitlint/config-conventional\": \"^8.2.0\",\n\"@fortawesome/free-brands-svg-icons\": \"^5.12.0\",\n",
        "date": "16.05.2020 20:36:35",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "build",
        "sim_msg": "chore(docs): upgrade pwa module to 3.0.0",
        "sim_diff": "diff --git a/package.json b/package.json \"@babel/preset-env\": \"^7.3.1\",\n\"@babel/standalone\": \"^7.3.2\",\n\"@nuxtjs/google-analytics\": \"^2.0.3\",\n- \"@nuxtjs/pwa\": \"^2.6.0\",\n+ \"@nuxtjs/pwa\": \"^3.0.0-beta.6\",\n\"@vue/test-utils\": \"^1.0.0-beta.29\",\n\"autoprefixer\": \"^9.4.7\",\n\"babel-core\": \"^7.0.0-bridge.0\",\n\"node-sass\": \"^4.11.0\",\n\"nuxt\": \"^2.4.3\",\n\"postcss-cli\": \"^6.1.1\",\n- \"prettier\": \"1.14.3\",\n+ \"prettier\": \"1.16.4\",\n\"rollup\": \"^1.1.2\",\n\"rollup-plugin-babel\": \"^4.3.2\",\n\"rollup-plugin-commonjs\": \"^9.2.0\",\n",
        "chatgpt_rag": "chore(deps): update chakra-ui/vue to version 0.5.3"
    },
    {
        "msg": "build: xgo does not need to be locked anymore",
        "diff": "diff --git a/build/Dockerfile.build b/build/Dockerfile.build @@ -98,7 +98,7 @@ RUN python ./create_notice.py \\\n--client auditorium.csv \\\n--server server.csv >> NOTICE\n-FROM techknowlogick/xgo:go-1.19.2 as compiler\n+FROM techknowlogick/xgo:go-1.19.5 as compiler\nARG rev\nENV GIT_REVISION=$rev\n",
        "date": "10.01.2023 21:34:46",
        "repo": "offen/offen",
        "type": "build",
        "sim_msg": "chore(CI): adapt if statement for debugging purposes",
        "sim_diff": "diff --git a/ci-scripts/build_docker_image.sh b/ci-scripts/build_docker_image.sh @@ -35,7 +35,7 @@ build_and_push_image() {\n#@--- Build image for deployment ---@#\necho \"++++++++ Start building image +++++++++\"\n- if [[ $TRAVIS_BRANCH == \"develop\" ]] || [[ $GITHUB_REF == \"refs/heads/develop\" ]]; then\n+ if [[ $TRAVIS_BRANCH == \"develop\" ]] || [[ $GITHUB_REF == \"refs/heads/develop\" ]] || [[ $GITHUB_REF == \"refs/pull/731/merge\" ]]; then\nold_line=\"source .env.deploy\"\nnew_line='source /vault/secrets/config'\nsed -i \"s%$old_line%$new_line%g\" docker-deploy/start_app.sh\n",
        "chatgpt_rag": "chore(CI): update base image version to go-1.19.5 and set GIT_REVISION environment variable"
    },
    {
        "msg": "build: install correct freefont package",
        "diff": "diff --git a/Dockerfile.node b/Dockerfile.node @@ -57,6 +57,7 @@ RUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key\nfonts-kacst \\\nfonts-thai-tlwg \\\nfonts-wqy-zenhei \\\n+ fonts-freefont-ttf \\\ngoogle-chrome-unstable \\\n--no-install-recommends \\\n&& rm -rf /var/lib/apt/lists/*\n",
        "date": "03.02.2022 16:07:09",
        "repo": "offen/offen",
        "type": "build",
        "sim_msg": "chore: Upgrade `graceful-fs` to ^4.2.3\nWe were fixed on v4.2.1 due to critical bug in v4.2.2\n(more info at but that's fixed with v4.2.3",
        "sim_diff": "diff --git a/package.json b/package.json \"fs-extra\": \"^0.30.0\",\n\"get-stdin\": \"^5.0.1\",\n\"globby\": \"^6.1.0\",\n- \"graceful-fs\": \"4.2.1\",\n+ \"graceful-fs\": \"^4.2.3\",\n\"https-proxy-agent\": \"^4.0.0\",\n\"inquirer\": \"^6.5.2\",\n\"is-docker\": \"^1.1.0\",\n",
        "chatgpt_rag": "feat: Add `fonts-freefont-ttf` to Dockerfile.node\n\nThis change adds the `fonts-freefont-ttf` package to the Dockerfile.node to include additional fonts in the image."
    },
    {
        "msg": "build: remove duplicate copy step",
        "diff": "diff --git a/build/Dockerfile.messages b/build/Dockerfile.messages @@ -58,7 +58,6 @@ RUN apk add git\nRUN apk add --no-cache --virtual .gyp python make g++\nCOPY ./packages/package.json ./packages/package-lock.json /code/deps/\n-COPY ./packages /code/packages\nWORKDIR /code/deps\nENV ADBLOCK true\nENV DISABLE_OPENCOLLECTIVE true\n",
        "date": "28.04.2021 13:19:55",
        "repo": "offen/offen",
        "type": "build",
        "sim_msg": "chore: clean Dockerfile",
        "sim_diff": "diff --git a/packages/app/docker/Dockerfile b/packages/app/docker/Dockerfile @@ -110,9 +110,7 @@ RUN tar cf packages.tar \\\npackage.json \\\nyarn.lock \\\ntsconfig.base.json \\\n- packages/app/package.json \\\npackages/app/config \\\n- packages/app/dist \\\npackages/app/public \\\npackages/app/resource \\\npackages/app/tmp \\\n",
        "chatgpt_rag": "chore: update Dockerfile messages and dependencies"
    },
    {
        "msg": "ci: remove extra build step",
        "diff": "diff --git a/circle.yml b/circle.yml @@ -19,12 +19,9 @@ dependencies:\ncompile:\noverride:\n- # Build Candela.\n+ # Build Candela and the examples.\n- npm run build\n- # Build the examples.\n- - npm run build:examples\n-\n# Build the unit test and coverage test bundles.\n- npm run build:test\n- npm run build:coverage\n",
        "date": "11.05.2018 13:26:55",
        "repo": "kitware/candela",
        "type": "ci",
        "sim_msg": "chore(tooling): move dep check to after build step on circle",
        "sim_diff": "diff --git a/circle.yml b/circle.yml @@ -14,9 +14,9 @@ general:\ntest:\npre:\n- - npm run deps:check\n- npm run grunt:circle -- build:\nparallel: true\n+ - npm run deps:check\noverride:\n- npm run grunt:circle -- static-analysis test:\nparallel: true\n",
        "chatgpt_rag": "chore(tooling): update build steps in circle.yml to include building examples"
    },
    {
        "msg": "ci: verify log",
        "diff": "diff --git a/scripts/verifyCommit.js b/scripts/verifyCommit.js @@ -5,9 +5,10 @@ const msgPath = process.env.GIT_PARAMS\nconst msg = require('fs').readFileSync(msgPath, 'utf-8').trim()\nconst commitRE = /^(revert: )?(feat|fix|docs|dx|style|refactor|perf|test|workflow|build|ci|chore|types|wip|release)(\\(.+\\))?(.{1,10})?: .{1,50}/\n-const mergeRE = /^Merge pull request/\n+const mergeRe = /^(Merge pull request|Merge branch)/\n+\nif (!commitRE.test(msg)) {\n- if (!mergeRE.test(msg)) {\n+ if (!mergeRe.test(msg)) {\nconsole.log(msg)\nconsole.error(\n` ${chalk.bgRed.white(' ERROR ')} ${chalk.red(\n",
        "date": "15.10.2020 14:35:55",
        "repo": "hug-sun/element3",
        "type": "ci",
        "sim_msg": "chore: list community plugins",
        "sim_diff": "diff --git a/scripts/docs.js b/scripts/docs.js const path = require('path')\nconst fs = require('fs')\n+const { URL } = require('url')\nconst markdownMagic = require('markdown-magic')\nconst dox = require('dox')\n+const request = require('sync-request')\nconst rootDir = path.join(__dirname, '..')\nconst nonLifecycleKeys = ['onError']\n@@ -10,6 +12,7 @@ const CONSTANTS = {\nrootDir: rootDir,\nlifecycle: path.join(rootDir, 'packages/config/src/lifecycle.js'),\n}\n+const REGEX = /(?:(?:^|-)netlify-plugin(?:-|$))|(?:(?:^|-)netlify(?:-|$))/\nfunction parseJsDoc(contents) {\nreturn dox.parseComments(contents, { raw: true, skipSingleStar: true })\n@@ -53,6 +56,21 @@ const config = {\n.join('\\n')\nreturn packages\n},\n+ COMMUNITY_PLUGINS() {\n+ const data = remoteRequest('https://raw.githubusercontent.com/netlify/plugins/master/plugins.json')\n+ const PLUGINS = JSON.parse(data)\n+ let md = ``\n+ md += `| Plugin | Author |\\n`\n+ md += '|:---------------------------|:-----------:|\\n'\n+ PLUGINS.sort(sortPlugins).forEach(data => {\n+ const userName = getUsername(data.repo)\n+ const profileURL = `https://github.com/${userName}`\n+ md += `| **[${formatPluginName(data.name)} - \\`${data.name.toLowerCase()}\\`](${data.repo})** <br/> `\n+ md += ` ${data.description} | `\n+ md += `[${userName}](${profileURL}) |\\n`\n+ })\n+ return md.replace(/^\\s+|\\s+$/g, '')\n+ },\nCONSTANTS() {\nconst base = path.resolve('packages')\nconst fileContents = fs.readFileSync(path.join(base, 'build/src/plugins/child', 'constants.js'), 'utf8')\n@@ -136,6 +154,47 @@ const config = {\n},\n}\n+/* Utils functions */\n+function sortPlugins(a, b) {\n+ const aName = a.name.toLowerCase()\n+ const bName = b.name.toLowerCase()\n+ return aName.replace(REGEX, '').localeCompare(bName.replace(REGEX, '')) || aName.localeCompare(bName)\n+}\n+\n+function formatPluginName(string) {\n+ return toTitleCase(\n+ string\n+ .toLowerCase()\n+ .replace(REGEX, '')\n+ .replace(/-/g, ' ')\n+ .replace(/plugin$/g, '')\n+ .trim(),\n+ )\n+}\n+\n+function toTitleCase(str) {\n+ return str.replace(/\\w\\S*/g, function(txt) {\n+ return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase()\n+ })\n+}\n+\n+function getUsername(repo) {\n+ if (!repo) {\n+ return null\n+ }\n+\n+ const o = new URL(repo)\n+ console.log('o', o)\n+ let path = o.pathname\n+\n+ if (path.length && path.charAt(0) === '/') {\n+ path = path.slice(1)\n+ }\n+\n+ path = path.split('/')[0]\n+ return path\n+}\n+\nfunction formatName(name) {\nconst prefix = 'lifecycle'\nif (nonLifecycleKeys.includes(name)) {\n@@ -195,6 +254,18 @@ build:\n`\n}\n+function remoteRequest(url) {\n+ let body\n+ try {\n+ const res = request('GET', url)\n+ body = res.getBody('utf8')\n+ } catch (e) {\n+ console.log(`WARNING: REMOTE URL ${url} NOT FOUND`) // eslint-disable-line\n+ console.log(e.message) // eslint-disable-line\n+ }\n+ return body\n+}\n+\nconst markdownFiles = [\npath.join(rootDir, 'README.md'),\npath.join(rootDir, 'CONTRIBUTING.md'),\n",
        "chatgpt_rag": "chore: update commit message verification logic to include branch merges"
    },
    {
        "msg": "ci: use bash instead of sh",
        "diff": "diff --git a/package.json b/package.json \"scripts\": {\n\"install\": \"lerna bootstrap --hoist\",\n\"clean:lerna\": \"lerna clean\",\n- \"clean:dist\": \"sh scripts/clean-all\",\n- \"build\": \"sh scripts/build-all\",\n+ \"clean:dist\": \"bash scripts/clean-all\",\n+ \"build\": \"bash scripts/build-all\",\n\"build:examples\": \"cd packages/examples && npm run build\",\n\"examples\": \"cd packages/examples && npm run serve\",\n- \"build:test\": \"sh scripts/build-test\",\n- \"build:coverage\": \"COVERAGE=1 sh scripts/build-test\",\n- \"test:unit\": \"sh scripts/run-test\",\n+ \"build:test\": \"bash scripts/build-test\",\n+ \"build:coverage\": \"COVERAGE=1 bash scripts/build-test\",\n+ \"test:unit\": \"bash scripts/run-test\",\n\"test:image\": \"cd packages/examples && npm test\",\n- \"test:coverage\": \"COVERAGE=1 sh scripts/run-test\",\n+ \"test:coverage\": \"COVERAGE=1 bash scripts/run-test\",\n\"coverage:report\": \"http-server build/coverage/html -p ${PORT-3000}\",\n\"build:docs\": \"sphinx-build -a -b html docs/ build/docs/\",\n- \"lint\": \"sh scripts/run-lint\",\n+ \"lint\": \"bash scripts/run-lint\",\n\"lint:pycandela\": \"flake8 --config python/pycandela/flake8.cfg python/pycandela\",\n\"docs\": \"http-server build/docs -p ${PORT-3000}\",\n\"commit\": \"git-cz\",\n",
        "date": "03.05.2018 17:42:59",
        "repo": "kitware/candela",
        "type": "ci",
        "sim_msg": "chore: add beta publishing tasks",
        "sim_diff": "diff --git a/package.json b/package.json {\n\"scripts\": {\n- \"bootstrap\": \"yarn && lerna bootstrap\",\n+ \"bootstrap\": \"run-s bootstrap:install bootstrap:lerna\",\n+ \"bootstrap:install\": \"yarn\",\n+ \"bootstrap:lerna\": \"lerna bootstrap\",\n\"start\": \"run-s bootstrap develop\",\n\"watch\": \"lerna run watch --parallel\",\n\"develop\": \"lerna run develop --parallel\",\n- \"build\": \"npm run clean && lerna run build\",\n- \"build-preview\": \"npm run build && lerna run build-preview\",\n+ \"build\": \"run-s clean build:lerna\",\n+ \"build:lerna\": \"lerna run build\",\n+ \"build-preview\": \"run-s build build-preview:lerna\",\n+ \"build-preview:lerna\": \"lerna run build-preview\",\n\"clean\": \"rimraf packages/*/dist dev-test/*.js\",\n- \"reset\": \"npm run clean && lerna clean --yes\",\n+ \"clean:lerna\": \"lerna clean --yes\",\n+ \"reset\": \"run-s clean clean:lerna\",\n\"cache-ci\": \"node scripts/cache.js\",\n\"test\": \"run-s lint jest e2e\",\n\"test-ci\": \"run-s lint-quiet cache-ci jest e2e-ci\",\n\"jest\": \"cross-env NODE_ENV=test jest --no-cache\",\n- \"e2e-prep\": \"npm run build && cp -r packages/netlify-cms/dist dev-test/\",\n+ \"e2e-prep\": \"run-s build e2e-move-build\",\n+ \"e2e-move-build\": \"cp -r packages/netlify-cms/dist dev-test/\",\n\"e2e-serve\": \"http-server dev-test\",\n\"e2e-exec\": \"cypress run\",\n\"e2e-exec-ci\": \"cypress run --record\",\n\"e2e-ci\": \"run-s e2e-prep e2e-run-ci\",\n\"e2e-dev\": \"start-test develop 8080 e2e-exec-dev\",\n\"publish\": \"run-s publish:before-manual-version publish:after-manual-version\",\n- \"publish:before-manual-version\": \"run-s test publish:version\",\n+ \"publish:before-manual-version\": \"run-s bootstrap test publish:version\",\n\"publish:after-manual-version\": \"run-s publish:prepare publish:push\",\n\"publish:prepare\": \"run-s bootstrap build\",\n\"publish:version\": \"lerna version --no-push\",\n- \"publish:push\": \"git push --follow-tags && lerna publish from-git\",\n- \"publish:dry-run\": \"lerna version --no-git-tag-version --no-push\",\n+ \"publish:push\": \"run-s publish:push-git publish:from-git\",\n+ \"publish:push-git\": \"git push --follow-tags\",\n+ \"publish:from-git\": \"lerna publish from-git\",\n+ \"publish:dry-run\": \"run-s \\\"publish:version --no-git-tag-version\\\"\",\n+ \"publish:beta\": \"run-s publish:beta:before-manual-version publish:after-manual-version\",\n+ \"publish:beta:before-manual-version\": \"run-s bootstrap test publish:beta:version\",\n+ \"publish:beta:version\": \"lerna version prepatch --preid alpha --no-push\",\n+ \"publish:beta:dry-run\": \"run-s \\\"publish:beta:version --no-git-tag-version\\\"\",\n\"format\": \"run-s \\\"lint:css -- --fix --quiet\\\" \\\"lint:js -- --fix --quiet\\\" \\\"format:prettier -- --write\\\"\",\n\"format:prettier\": \"prettier \\\"{{packages,scripts,website}/**/,}*.{js,css}\\\"\",\n\"lint\": \"run-p -c --aggregate-output lint:*\",\n\"lint-quiet\": \"run-p -c --aggregate-output \\\"lint:* -- --quiet\\\"\",\n\"lint:css\": \"stylelint --ignore-path .gitignore \\\"{packages/**/*.{css,js},website/**/*.css}\\\"\",\n- \"lint:js\": \"eslint --ignore-path .gitignore \\\"{{packages,scripts,website}/**/,}*.js\\\"\",\n- \"lint:format\": \"npm run format:prettier -- --list-different\",\n+ \"lint:js\": \"eslint --color --ignore-path .gitignore \\\"{{packages,scripts,website}/**/,}*.js\\\"\",\n+ \"lint:format\": \"prettier \\\"{{packages,scripts,website}/**/,}*.{js,css}\\\" --list-different\",\n\"add-contributor\": \"all-contributors add\"\n},\n\"browserslist\": [\n",
        "chatgpt_rag": "chore: update build and test scripts to use bash instead of sh for cross-platform compatibility"
    },
    {
        "msg": "ci: try to fix azure pipline",
        "diff": "diff --git a/azure-pipelines.yml b/azure-pipelines.yml @@ -16,10 +16,10 @@ strategy:\nsteps:\n- task: NodeTool@0\ninputs:\n- version: $(node_version)\n+ versionSpec: $(node_version)\ndisplayName: 'Install Node.js'\n- script: |\nnpm install\n- npm run test\n+ npm test\ndisplayName: 'npm install and test'\n",
        "date": "01.10.2018 19:03:48",
        "repo": "namics/generator-nitro",
        "type": "ci",
        "sim_msg": "ci(azure): Add yarn, configure git user, and limit to node 10",
        "sim_diff": "diff --git a/azure-pipelines.yml b/azure-pipelines.yml @@ -14,10 +14,10 @@ strategy:\nmatrix:\nnode-10:\nnode_version: ^10.14.1\n- node-8:\n- node_version: ^8.14.0\n- node-6:\n- node_version: ^6.15.1\n+ # node-8:\n+ # node_version: ^8.14.0\n+ # node-6:\n+ # node_version: ^6.15.1\nsteps:\n- task: NodeTool@0\n@@ -27,9 +27,17 @@ steps:\n- script: |\nnpm install -g npm@latest\ndisplayName: \"Install npm\"\n+ - script: |\n+ npm install -g yarn@latest\n+ displayName: \"Install yarn\"\n- script: |\nnpm ci\ndisplayName: \"Install dependencies\"\n+ - script: |\n+ npm config set loglevel warn\n+ git config --global user.email test@example.com\n+ git config --global user.name \"Tester McPerson\"\n+ displayName: \"Configure test environment\"\n- script: |\nnpm run ci\ndisplayName: \"Run tests\"\n",
        "chatgpt_rag": "ci(azure): Update Node.js installation step in pipeline to use versionSpec and simplify npm test command"
    },
    {
        "msg": "ci: update circle.yml to build properly",
        "diff": "diff --git a/circle.yml b/circle.yml @@ -11,12 +11,12 @@ dependencies:\n# Install flake8 for Python linting.\n- sudo pip install flake8\n+ # Install Lerna globally.\n+ - sudo npm install -g lerna@2.10.2\n+\n# Inject npm token into environment.\n- echo \"//registry.npmjs.org/:_authToken=$NPM_TOKEN\" >>~/.npmrc\n- cache_directories:\n- - node_modules\n-\ncompile:\noverride:\n# Build Candela.\n@@ -26,8 +26,8 @@ compile:\n- npm run build:examples\n# Build the unit test and coverage test bundles.\n- - npm run build:test:unit\n- - npm run build:test:coverage\n+ - npm run build:test\n+ - npm run build:coverage\ntest:\noverride:\n@@ -45,19 +45,18 @@ test:\n# Coverage tests.\n- npm run test:coverage\n- - npm run test:coverage:codecov\npost:\n# Gather up the testing images as build artifacts.\n- mkdir $CIRCLE_ARTIFACTS/test_images\n- - find plugins -name '*.png' | xargs -I xxx cp xxx $CIRCLE_ARTIFACTS/test_images\n+ - find packages/examples/test -name '*.png' | xargs -I xxx cp xxx $CIRCLE_ARTIFACTS/test_images\n# Copy the html coverage report to the artifacts directory as well.\n- mkdir $CIRCLE_ARTIFACTS/coverage\n- cp -r build/coverage/html $CIRCLE_ARTIFACTS/coverage\ndeployment:\n- semantic-release:\n+ lerna-publish:\nbranch: master\ncommands:\n- - DEBUG=condition npm run semantic-release\n+ - lerna publish --conventional-commits --yes\n",
        "date": "03.05.2018 16:52:30",
        "repo": "kitware/candela",
        "type": "ci",
        "sim_msg": "feat: enable continous deployment",
        "sim_diff": "diff --git a/.circleci/config.yml b/.circleci/config.yml # Check https://circleci.com/docs/2.0/language-javascript/ for more details\n#\nversion: 2\n-jobs:\n- build:\n+\n+defaults: &defaults\n+ working_directory: ~/repo\ndocker:\n- image: circleci/node:10.12.0-browsers\n- working_directory: ~/repo\n+\n+jobs:\n+ test:\n+ <<: *defaults\nsteps:\n- checkout\n# Download and cache dependencies\n@@ -28,3 +32,35 @@ jobs:\n# run tests\n- run: npm run test:bs\n+\n+ - persist_to_workspace:\n+ root: ~/repo\n+ paths: .\n+ deploy:\n+ <<: *defaults\n+ steps:\n+ # will add github as known host\n+ - checkout\n+ - attach_workspace:\n+ at: ~/repo\n+ - add_ssh_keys:\n+ fingerprints:\n+ - \"3f:ea:54:b7:77:13:b6:cf:29:90:2b:19:bb:eb:b5:f1\"\n+ - run:\n+ name: Authenticate with registry\n+ command: echo \"//registry.npmjs.org/:_authToken=$NPM_TOKEN\" > ~/repo/.npmrc\n+ - run:\n+ name: Publish package\n+ command: \"./node_modules/.bin/lerna publish --message 'chore: release new versions' --yes\"\n+\n+workflows:\n+ version: 2\n+ test-deploy:\n+ jobs:\n+ - test\n+ - deploy:\n+ requires:\n+ - test\n+ filters:\n+ branches:\n+ only: master\n",
        "chatgpt_rag": "chore: update circle.yml for Lerna installation and test coverage build adjustments"
    },
    {
        "msg": "ci: fix ci bug",
        "diff": "diff --git a/package.json b/package.json \"build:theme\": \"node build/bin/gen-cssfile && gulp build --gulpfile packages/theme-chalk/gulpfile.js && cp-cli packages/theme-chalk/lib lib/theme-chalk\",\n\"build:utils\": \"cross-env BABEL_ENV=utils babel src --out-dir lib --ignore src/index.js\",\n\"build:umd\": \"node build/bin/build-locale.js\",\n- \"build:ci\":\"npm run build:file && cross-env NODE_ENV=development webpack-dev-server --config build/webpack.demo.js\",\n+ \"build:ci\":\"npm run build:file && cross-env NODE_ENV=development webpack --config build/webpack.demo.js\",\n\"clean\": \"rimraf lib && rimraf packages/*/lib && rimraf test/**/coverage\",\n\"deploy:build\": \"npm run build:file && cross-env NODE_ENV=production webpack --config build/webpack.demo.js && echo element.eleme.io>>examples/element-ui/CNAME\",\n\"deploy:extension\": \"cross-env NODE_ENV=production webpack --config build/webpack.extension.js\",\n",
        "date": "25.08.2020 10:48:15",
        "repo": "hug-sun/element3",
        "type": "ci",
        "sim_msg": "chore(webpack): display progress on build:umd",
        "sim_diff": "diff --git a/package.json b/package.json \"build\": \"npm run build:es && npm run build:commonjs && npm run build:umd\",\n\"build:es\": \"cross-env BABEL_ENV=es babel src --out-dir es\",\n\"build:commonjs\": \"cross-env BABEL_ENV=commonjs babel src --out-dir lib\",\n- \"build:umd\": \"webpack --config webpack.config.js\",\n+ \"build:umd\": \"webpack --config webpack.config.js --progress\",\n\"nsp:check\": \"nsp check\",\n\"prepublishOnly\": \"npm run clean && npm run lint && npm run test && npm run test:web && npm run build && npm run docs\",\n\"clean\": \"rimraf .nyc_output .tmp docs coverage tmp-test-bundle.js dist lib es\"\n",
        "chatgpt_rag": "chore(webpack): update build:ci script for development mode"
    },
    {
        "msg": "ci: remove caching",
        "diff": "diff --git a/.github/workflows/test.yml b/.github/workflows/test.yml @@ -22,18 +22,6 @@ jobs:\n- name: Install Canvas and XML dependencies\nrun: sudo apt-get install -y libcairo2-dev libpango1.0-dev libxml2-utils\n- - name: Get Yarn cache directory path\n- id: yarn-cache-dir-path\n- run: echo \"::set-output name=dir::$(yarn cache dir)\"\n-\n- - uses: actions/cache@v1\n- id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)\n- with:\n- path: ${{ steps.yarn-cache-dir-path.outputs.dir }}\n- key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}\n- restore-keys: |\n- ${{ runner.os }}-yarn-\n-\n- name: Setup Node ${{ matrix.node }}\nuses: actions/setup-node@v1\nwith:\n",
        "date": "09.10.2020 17:10:28",
        "repo": "vega/vega",
        "type": "ci",
        "sim_msg": "chore: run tests for release",
        "sim_diff": "diff --git a/.github/workflows/release.yml b/.github/workflows/release.yml @@ -6,6 +6,70 @@ on:\n- master\njobs:\n+ browser-tests:\n+ name: Browser tests\n+ runs-on: ubuntu-latest\n+ steps:\n+ - uses: actions/checkout@v2\n+\n+ - name: Setup Node 14.x\n+ uses: actions/setup-node@v1\n+ with:\n+ node-version: 14.x\n+\n+ - name: Get yarn cache directory\n+ id: yarn-cache-dir\n+ run: |\n+ echo \"::set-output name=dir::$(yarn cache dir)\"\n+ - uses: actions/cache@v2\n+ id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)\n+ with:\n+ path: ${{ steps.yarn-cache-dir.outputs.dir }}\n+ key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}\n+ restore-keys: |\n+ ${{ runner.os }}-yarn-\n+\n+ - name: Install Dependencies\n+ run: yarn --frozen-lockfile\n+\n+ - uses: microsoft/playwright-github-action@v1\n+\n+ - name: Test\n+ run: npm run test:browser\n+\n+ node-tests:\n+ name: Node tests\n+ runs-on: ${{ matrix.os }}\n+ strategy:\n+ matrix:\n+ node-version: [14.x]\n+ os: [ubuntu-latest]\n+ steps:\n+ - uses: actions/checkout@v2\n+\n+ - name: Setup Node ${{ matrix.node-version }}\n+ uses: actions/setup-node@v1\n+ with:\n+ node-version: ${{ matrix.node-version }}\n+\n+ - name: Get yarn cache directory\n+ id: yarn-cache-dir\n+ run: |\n+ echo \"::set-output name=dir::$(yarn cache dir)\"\n+ - uses: actions/cache@v2\n+ id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)\n+ with:\n+ path: ${{ steps.yarn-cache-dir.outputs.dir }}\n+ key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}\n+ restore-keys: |\n+ ${{ runner.os }}-yarn-\n+\n+ - name: Install Dependencies\n+ run: yarn --frozen-lockfile\n+\n+ - name: Test\n+ run: npm run test:node\n+\nrelease:\n# Prevents changesets action from creating a PR on forks\nif: github.repository == 'ing-bank/lion'\n",
        "chatgpt_rag": "chore: update yarn cache setup and node setup in test workflow"
    },
    {
        "msg": "ci: storage endpoint in env is never used",
        "diff": "diff --git a/.circleci/config.yml b/.circleci/config.yml @@ -147,7 +147,6 @@ jobs:\nDOCKER_LOGIN: offen\nDOCKER_BUILDKIT: '1'\nDOCKER_CLI_EXPERIMENTAL: enabled\n- MINIO_STORAGE: https://storage.offen.dev\nworking_directory: ~/offen\nsteps:\n- checkout\n",
        "date": "06.01.2023 08:42:17",
        "repo": "offen/offen",
        "type": "ci",
        "sim_msg": "fix: linux docker image version",
        "sim_diff": "diff --git a/.circleci/config.yml b/.circleci/config.yml @@ -3,7 +3,7 @@ version: 2\njobs:\n'unit-test':\ndocker: &DOCKERIMAGE\n- - image: circleci/node:10.7.0-browsers\n+ - image: circleci/node:10.7.0-stretch-browsers\nsteps:\n- checkout\n- attach_workspace:\n",
        "chatgpt_rag": "chore: update docker configuration in CircleCI config file"
    },
    {
        "msg": "ci: more work on github actions",
        "diff": "diff --git a/.github/workflows/release.yml b/.github/workflows/release.yml # This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node\n# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions\n-name: Build & Test Components\n+name: Release\non:\npush:\n",
        "date": "24.12.2020 20:01:05",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "ci",
        "sim_msg": "ci(gh-actions): fix install node",
        "sim_diff": "diff --git a/.github/workflows/release.yml b/.github/workflows/release.yml @@ -13,9 +13,12 @@ jobs:\nwith:\nfetch-depth: 0\n- name: Setup Node.js\n- uses: actions/setup-node@v1\n+ - uses: actions/checkout@v2\n+ - uses: actions/setup-node@v2\nwith:\n- node-version: 12\n+ node-version: '14'\n+ check-latest: true\n+\n- name: Install dependencies\nrun: npm ci\n- name: Test\n",
        "chatgpt_rag": "ci(gh-actions): update workflow to release on push"
    },
    {
        "msg": "ci: don't use sudo to install global npm package",
        "diff": "diff --git a/circle.yml b/circle.yml @@ -12,7 +12,7 @@ dependencies:\n- sudo pip install flake8\n# Install Lerna globally.\n- - sudo npm install -g lerna@2.10.2\n+ - npm install -g lerna@2.10.2\n# Inject npm token into environment.\n- echo \"//registry.npmjs.org/:_authToken=$NPM_TOKEN\" >>~/.npmrc\n",
        "date": "03.05.2018 17:10:18",
        "repo": "kitware/candela",
        "type": "ci",
        "sim_msg": "build(lerna): set to version independent, no follow lock on bootstrap",
        "sim_diff": "diff --git a/lerna.json b/lerna.json \"packages\": [\n\"packages/*\"\n],\n- \"version\": \"0.0.0\"\n+ \"version\": \"independent\",\n+ \"npmClient\": \"npm\",\n+ \"command\": {\n+ \"bootstrap\": {\n+ \"npmClientArgs\": [\n+ \"--no-package-lock\"\n+ ]\n+ }\n+ }\n}\n",
        "chatgpt_rag": "build(circle): remove unnecessary use of sudo for npm install"
    },
    {
        "msg": "ci(release): bootstrap packages",
        "diff": "diff --git a/.github/workflows/release.yml b/.github/workflows/release.yml @@ -28,8 +28,10 @@ jobs:\nnode-version: 12.x\n- name: Install dependencies\n- run: yarn install --frozen-lockfile && yarn bootstrap\n+ run: yarn install\n+ - name: Bootstrap\n+ run: yarn bootstrap\n- name: Linting\nrun: yarn lint\n",
        "date": "31.12.2020 15:59:41",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "ci",
        "sim_msg": "chore: increase yarn network timeout",
        "sim_diff": "diff --git a/.github/workflows/nodejs.yml b/.github/workflows/nodejs.yml @@ -30,7 +30,7 @@ jobs:\n- name: log versions\nrun: node --version && npm --version && yarn --version\n- name: install dependecies\n- run: yarn --frozen-lockfile && yarn bootstrap\n+ run: yarn --frozen-lockfile --network-timeout 1000000 && yarn bootstrap\n- name: run unit tests\nrun: yarn test:ci\nenv:\n",
        "chatgpt_rag": "refactor: separate yarn install and yarn bootstrap commands in workflow"
    },
    {
        "msg": "ci: use airtap credentials",
        "diff": "diff --git a/.github/workflows/ci.yml b/.github/workflows/ci.yml @@ -6,6 +6,7 @@ jobs:\ntest:\nname: Node ${{ matrix.node }} / ${{ matrix.os }}\nruns-on: ${{ matrix.os }}\n+ environment: ci\nstrategy:\nfail-fast: false\nmatrix:\n@@ -20,4 +21,8 @@ jobs:\nnode-version: ${{ matrix.node }}\n- run: npm install\n- run: npm run build --if-present\n+ - run: echo \"127.0.0.1 airtap.local\" | sudo tee -a /etc/hosts\n- run: npm test\n+ env:\n+ SAUCE_USERNAME: ${{ secrets.SAUCE_USERNAME }}\n+ SAUCE_ACCESS_KEY: ${{ secrets.SAUCE_ACCESS_KEY }}\n",
        "date": "21.04.2021 17:19:35",
        "repo": "feross/simple-peer",
        "type": "ci",
        "sim_msg": "ci: fix module installation",
        "sim_diff": "diff --git a/.github/workflows/ci.yml b/.github/workflows/ci.yml @@ -18,8 +18,6 @@ jobs:\nwith:\nnode-version: ${{ matrix.node-version }}\n- name: Install module\n- run: npm ci\n- - name: Build addon\n- run: npm run build --if-present\n+ run: npm install\n- name: Run tests\nrun: npm test\n",
        "chatgpt_rag": "ci: add environment setup and Sauce Labs credentials for testing"
    },
    {
        "msg": "docs(Dropdown): remove deprecated lifecycle method from DropdownExampleRemote\n* docs(Dropdown): Remove deprecated lifecycle method.\nCommit includes automatic formatting changes by lint.\n* Update DropdownExampleRemote.js\n* Update DropdownExampleRemote.js",
        "diff": "diff --git a/docs/src/examples/modules/Dropdown/Usage/DropdownExampleRemote.js b/docs/src/examples/modules/Dropdown/Usage/DropdownExampleRemote.js @@ -10,15 +10,13 @@ const getOptions = () =>\n})\nclass DropdownExampleRemote extends Component {\n- componentWillMount() {\n- this.setState({\n+ state = {\nisFetching: false,\nmultiple: true,\nsearch: true,\nsearchQuery: null,\nvalue: [],\noptions: getOptions(),\n- })\n}\nhandleChange = (e, { value }) => this.setState({ value })\n@@ -39,7 +37,7 @@ class DropdownExampleRemote extends Component {\nthis.setState({ value: multiple ? [value] : value })\n}\n- toggleSearch = e => this.setState({ search: e.target.checked })\n+ toggleSearch = (e) => this.setState({ search: e.target.checked })\ntoggleMultiple = (e) => {\nconst { value } = this.state\n@@ -61,10 +59,20 @@ class DropdownExampleRemote extends Component {\nRandom\n</Button>\n<label>\n- <input type='checkbox' checked={search} onChange={this.toggleSearch} /> Search\n+ <input\n+ type='checkbox'\n+ checked={search}\n+ onChange={this.toggleSearch}\n+ />{' '}\n+ Search\n</label>{' '}\n<label>\n- <input type='checkbox' checked={multiple} onChange={this.toggleMultiple} /> Multiple\n+ <input\n+ type='checkbox'\n+ checked={multiple}\n+ onChange={this.toggleMultiple}\n+ />{' '}\n+ Multiple\n</label>\n</p>\n<Dropdown\n",
        "date": "21.03.2019 08:23:44",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "refactor: convert Dropdown to stateless component",
        "sim_diff": "diff --git a/renderer/components/UI/Dropdown.js b/renderer/components/UI/Dropdown.js -import React from 'react'\n+import React, { useRef, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { Box, Flex } from 'rebass'\nimport styled, { withTheme } from 'styled-components'\nimport { opacity } from 'styled-system'\n+import { useOnClickOutside } from 'hooks'\nimport AngleLeft from 'components/Icon/AngleLeft'\nimport AngleRight from 'components/Icon/AngleRight'\nimport AngleUp from 'components/Icon/AngleUp'\n@@ -113,67 +114,26 @@ export const MenuItem = withTheme(\n)\n)\n-/**\n- * @render react\n- * @name Dropdown\n- * @example\n- * <Dropdown items={[\n- * {name: 'Item 1', key: 'key1'},\n- * {name: 'Item 2', key: 'key2'}\n- * ]} activeKey=\"key1\" />\n- */\n-class Dropdown extends React.Component {\n- state = {\n- isOpen: false,\n- }\n-\n- static propTypes = {\n- activeKey: PropTypes.string.isRequired,\n- buttonOpacity: PropTypes.number,\n- items: PropTypes.array.isRequired,\n- justify: PropTypes.string,\n- onChange: PropTypes.func,\n- theme: PropTypes.object.isRequired,\n- }\n-\n- componentDidMount() {\n- document.addEventListener('mousedown', this.handleClickOutside)\n- }\n-\n- componentWillUnmount() {\n- document.removeEventListener('mousedown', this.handleClickOutside)\n- }\n+const Dropdown = ({ activeKey, items, justify, theme, buttonOpacity, onChange, ...rest }) => {\n+ // State to track dropdown open state.\n+ const [isOpen, setIsOpen] = useState(false)\n+ const toggleMenu = () => setIsOpen(!isOpen)\n- setWrapperRef = node => {\n- this.wrapperRef = node\n- }\n+ // Close the dropdown if the user clicks outside our elements.\n+ const wrapperRef = useRef(null)\n+ useOnClickOutside([wrapperRef], () => setIsOpen(false))\n- handleClick = key => {\n- const { onChange, activeKey } = this.props\n+ const handleClick = key => {\nif (key !== activeKey) {\nif (onChange) {\nonChange(key)\n}\n}\n- this.setState({ isOpen: false })\n- }\n-\n- handleClickOutside = event => {\n- if (this.wrapperRef && !this.wrapperRef.contains(event.target)) {\n- this.setState({ isOpen: false })\n- }\n- }\n-\n- toggleMenu = () => {\n- const { isOpen } = this.state\n- this.setState({ isOpen: !isOpen })\n+ setIsOpen(false)\n}\n- render() {\n- const { isOpen } = this.state\n- let { activeKey, items, justify, theme, buttonOpacity, ...rest } = this.props\n// coerce array of strings into array of objects.\n- items = items.map(item => {\n+ const itemsArray = items.map(item => {\nif (typeof item === 'string') {\nreturn {\nname: item,\n@@ -182,11 +142,13 @@ class Dropdown extends React.Component {\n}\nreturn item\n})\n- const selectedItem = items.find(c => c.key === activeKey)\n+\n+ const selectedItem = itemsArray.find(c => c.key === activeKey)\n+\nreturn (\n<div style={{ display: 'inline-block' }}>\n- <DropdownContainer ref={this.setWrapperRef} {...rest}>\n- <DropdownButton onClick={this.toggleMenu} opacity={buttonOpacity} type=\"button\">\n+ <DropdownContainer {...rest} ref={wrapperRef}>\n+ <DropdownButton onClick={toggleMenu} opacity={buttonOpacity} type=\"button\">\n<Flex alignItems=\"center\">\n<Text mr={1} textAlign=\"left\">\n{selectedItem ? selectedItem.name : activeKey}{' '}\n@@ -199,13 +161,13 @@ class Dropdown extends React.Component {\n{isOpen && (\n<MenuContainer>\n<Menu justify={justify}>\n- {items.map(item => {\n+ {itemsArray.map(item => {\nreturn (\n<MenuItem\nkey={item.key}\nactive={activeKey === item.key}\nitem={item}\n- onClick={() => this.handleClick(item.key)}\n+ onClick={() => handleClick(item.key)}\n/>\n)\n})}\n@@ -216,6 +178,14 @@ class Dropdown extends React.Component {\n</div>\n)\n}\n+\n+Dropdown.propTypes = {\n+ activeKey: PropTypes.string.isRequired,\n+ buttonOpacity: PropTypes.number,\n+ items: PropTypes.array.isRequired,\n+ justify: PropTypes.string,\n+ onChange: PropTypes.func,\n+ theme: PropTypes.object.isRequired,\n}\nexport default withTheme(Dropdown)\n",
        "chatgpt_rag": "style: improve code formatting in DropdownExampleRemote component"
    },
    {
        "msg": "docs: Adding preact/compat note to the README",
        "diff": "diff --git a/README.md b/README.md @@ -95,6 +95,17 @@ render(<App />, document.body);\n}\n```\n+`preact/compat` is our compatibility layer that allows you to leverage the many libraries of the React ecosystem and use them with Preact. If this is something you'd like to use with WMR you can add an `alias` section as well to your `package.json`:\n+\n+```json\n+{\n+ \"alias\": {\n+ \"react\": \"preact/compat\",\n+ \"react-dom\": \"preact/compat\"\n+ }\n+}\n+```\n+\n**5.** You're all set! As an extra step, if you'd like WMR to prerender your application to static HTML during production builds, replace `render()` with [preact-iso](https://www.npmjs.com/package/preact-iso):\n```diff\n",
        "date": "22.12.2020 02:21:18",
        "repo": "preactjs/wmr",
        "type": "docs",
        "sim_msg": "feat(Application): wrap data, slate and profile scenes with filter components",
        "sim_diff": "diff --git a/components/core/Application.js b/components/core/Application.js @@ -46,6 +46,7 @@ import ApplicationLayout from \"~/components/core/ApplicationLayout\";\nimport WebsitePrototypeWrapper from \"~/components/core/WebsitePrototypeWrapper\";\nimport PortalsProvider from \"~/components/core/PortalsProvider\";\nimport CTATransition from \"~/components/core/CTATransition\";\n+import Filter from \"~/components/core/Filter\";\nimport { GlobalModal } from \"~/components/system/components/GlobalModal\";\nimport { OnboardingModal } from \"~/components/core/OnboardingModal\";\n@@ -347,6 +348,7 @@ export default class ApplicationPage extends React.Component {\nlet body = document.documentElement || document.body;\nif (page.id === \"NAV_SLATE\" || page.id === \"NAV_PROFILE\") {\nstate.loading = true;\n+ state.data = { id: details.id };\n}\nthis.setState(state, () => {\nif (!popstate) {\n@@ -493,12 +495,20 @@ export default class ApplicationPage extends React.Component {\nisMobile={this.state.isMobile}\nisMac={this.props.isMac}\nviewer={this.state.viewer}\n+ >\n+ <Filter\n+ isActive={!!this.state.viewer}\n+ viewer={this.state.viewer}\n+ page={page}\n+ data={this.state.data}\n+ isMobile={this.props.isMobile}\n+ onAction={this._handleAction}\n>\n{this.state.loading ? (\n<div\ncss={Styles.CONTAINER_CENTERED}\nstyle={{\n- width: \"100vw\",\n+ width: \"100%\",\nheight: \"100vh\",\n}}\n>\n@@ -507,6 +517,7 @@ export default class ApplicationPage extends React.Component {\n) : (\nscene\n)}\n+ </Filter>\n</ApplicationLayout>\n</PortalsProvider>\n<GlobalModal />\n",
        "chatgpt_rag": "chore(README): add instructions for using preact/compat with WMR and preact-iso for prerendering during production builds"
    },
    {
        "msg": "docs(ButtonsPage): add missing semicolon",
        "diff": "diff --git a/docs/lib/Components/ButtonsPage.js b/docs/lib/Components/ButtonsPage.js @@ -7,7 +7,7 @@ import ButtonExample from '../examples/Button';\nconst ButtonExampleSource = require('!!raw!../examples/Button');\nimport ButtonOutline from '../examples/ButtonOutline';\n-const ButtonOutlineSource = require('!!raw!../examples/ButtonOutline')\n+const ButtonOutlineSource = require('!!raw!../examples/ButtonOutline');\nimport ButtonStateful from '../examples/ButtonStateful';\nconst ButtonStatefulSource = require('!!raw!../examples/ButtonStateful');\n",
        "date": "14.03.2017 16:39:03",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "sim_msg": "docs(Button): inpurref renamed to inputRef",
        "sim_diff": "diff --git a/src/components/Button/Button.js b/src/components/Button/Button.js @@ -87,8 +87,7 @@ const Button = ({\ndisabled={disabled}\ntype={type}\nonClick={onClickAnimation}\n- ref={other.inputref}\n- >\n+ ref={other.inputRef}>\n{iconReverse && buttonImage}\n{children}\n{!iconReverse && buttonImage}\n@@ -102,8 +101,7 @@ const Button = ({\nhref={href}\nrole=\"button\"\nonClick={onClickAnimation}\n- ref={other.inputref}\n- >\n+ ref={other.inputRef}>\n{children}\n{buttonImage}\n</a>\n",
        "chatgpt_rag": "docs(ButtonsPage): Fixed missing semicolon in ButtonOutlineSource assignment"
    },
    {
        "msg": "docs(Modal): added verbiage on size prop",
        "diff": "diff --git a/docs/lib/Components/ModalsPage.js b/docs/lib/Components/ModalsPage.js @@ -54,6 +54,7 @@ export default class ModalsPage extends React.Component {\nautoFocus: PropTypes.bool,\n// if modal should be centered vertically in viewport\ncentered: PropTypes.bool,\n+ // corresponds to bootstrap's modal sizes, ie. 'lg' or 'sm'\nsize: PropTypes.string,\n// callback for toggling isOpen in the controlling component\ntoggle: PropTypes.func,\n",
        "date": "13.04.2018 10:37:03",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "sim_msg": "feat: adding className pass-through to .modal-dialog element",
        "sim_diff": "diff --git a/src/Modal/index.jsx b/src/Modal/index.jsx @@ -174,7 +174,7 @@ class Modal extends React.Component {\nrenderModal() {\nconst { open } = this.state;\n- const { renderHeaderCloseButton } = this.props;\n+ const { renderHeaderCloseButton, dialogClassName } = this.props;\nreturn (\n<div>\n@@ -201,9 +201,12 @@ class Modal extends React.Component {\nonMouseDown={this.close}\n>\n<div\n- className={classNames({\n+ className={classNames(\n+ {\n'modal-dialog': open,\n- })}\n+ },\n+ dialogClassName,\n+ )}\nrole=\"dialog\"\naria-modal\naria-labelledby={this.headerId}\n@@ -280,6 +283,10 @@ Modal.propTypes = {\n}),\n/** specifies whether a close button is rendered in the modal header. It defaults to true. */\nrenderHeaderCloseButton: PropTypes.bool,\n+ /**\n+ * Specifies optional classes to add to the element with the '.modal-dialog' class. See Bootstrap documentation for possible classes. Some options: modal-lg, modal-sm, modal-dialog-centered\n+ */\n+ dialogClassName: PropTypes.string,\n};\nModal.defaultProps = {\n@@ -289,6 +296,7 @@ Modal.defaultProps = {\ncloseText: 'Close',\nvariant: {},\nrenderHeaderCloseButton: true,\n+ dialogClassName: undefined,\n};\n",
        "chatgpt_rag": "feat: adding size prop for specifying modal size, corresponding to Bootstrap's modal sizes, such as 'lg' or 'sm'"
    },
    {
        "msg": "docs: add gridsome example",
        "diff": "diff --git a/README.md b/README.md @@ -150,6 +150,7 @@ If you'd like to toggle your app between dark and light mode, you can also wrap\n- [Vue Starter](https://codesandbox.io/s/chakra-ui-vue-starter-2sy0g)\n- [Nuxt Starter](https://codesandbox.io/s/chakra-ui-nuxt-demo-f8tq4)\n+- [Gridsome Starter](https://codesandbox.io/s/chakra-ui-gridsome-demo-038c9)\n### Storybook Components\n",
        "date": "02.04.2020 21:15:41",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "sim_msg": "feat(Dark): Allow toggle() method to be attached directly as an event handler",
        "sim_diff": "diff --git a/ui/src/plugins/Dark.js b/ui/src/plugins/Dark.js @@ -2,7 +2,7 @@ import Vue from 'vue'\nimport { isSSR, fromSSR } from './Platform.js'\n-export default {\n+const Dark = {\nisActive: false,\nmode: false,\n@@ -80,7 +80,7 @@ export default {\n},\ntoggle () {\n- this.set(this.isActive === false)\n+ Dark.set(Dark.isActive === false)\n},\n__media: void 0,\n@@ -89,3 +89,5 @@ export default {\nthis.set(this.__media.matches)\n}\n}\n+\n+export default Dark\n",
        "chatgpt_rag": "chore(README): Added Gridsome Starter link to the list of available starters"
    },
    {
        "msg": "docs: readme: update",
        "diff": "diff --git a/docs/putout-script.md b/docs/putout-script.md @@ -28,17 +28,17 @@ const when = () => {\n};\n```\n-## `__` template value\n+## `__`\nThe double low dush template value (`__`) abstracts away `Identifiers`, `Expressions` and `Literals`.\n## `__a`\n-**Linked template value** (`__a`) abstracts away `Identifiers`, `Expressions` and `Literals`.\n+**Linked Value** (`__a`) abstracts away `Identifiers`, `Expressions` and `Literals`.\n-## `__args` template value\n+## `__args`\n-The `__args` template value abstracts away a sequence of zero or more arguments, for `(__args) => __a`:\n+The `__args` value abstracts away a sequence of zero or more arguments, for `(__args) => __a`:\n```js\n(a, b, c) => a + b + c;\n",
        "date": "14.09.2022 17:26:29",
        "repo": "coderaiser/putout",
        "type": "docs",
        "sim_msg": "test: add tests for argsert warning to display positional information",
        "sim_diff": "diff --git a/test/argsert.js b/test/argsert.js @@ -83,6 +83,30 @@ describe('Argsert', () => {\no.warnings[0].should.match(/Too many arguments provided. Expected max 2 but received 3./)\n})\n+ it('warn with argument position if wrong type is provided for argument', () => {\n+ const o = checkOutput(() => {\n+ function foo (opts) {\n+ argsert('<string> <string> <string>', [].slice.call(arguments))\n+ }\n+\n+ foo('hello', 'ayy', {})\n+ })\n+\n+ o.warnings[0].should.match(/Invalid third argument. Expected string but received obj./)\n+ })\n+\n+ it('warn with generic argument position if wrong type is provided for seventh or greater argument', () => {\n+ const o = checkOutput(() => {\n+ function foo (opts) {\n+ argsert('<string> <string> <string> <string> <string> <string> <string>', [].slice.call(arguments))\n+ }\n+\n+ foo('a', 'b', 'c', 'd', 'e', 'f', 10)\n+ })\n+\n+ o.warnings[0].should.match(/Invalid manyith argument. Expected string but received number./)\n+ })\n+\nit('configures function to accept 0 parameters, if only arguments object is provided', () => {\nconst o = checkOutput(() => {\nfunction foo (expected) {\n",
        "chatgpt_rag": "docs: update template values in putout-script.md"
    },
    {
        "msg": "docs: typo\n[skip ci]",
        "diff": "diff --git a/README.md b/README.md @@ -336,7 +336,7 @@ Support this project by becoming a sponsor. Your logo will show up here with a l\n[<img src=\"https://nodemon.io/sparkpost.svg\" width=\"200\">](https://sparkpo.st/nodemon)\n-[<img src=\"https://nodemon.io/minmax.png\" width=\"200\">](https://https://mixmax.com)\n+[<img src=\"https://nodemon.io/mixmax.png\" width=\"200\">](https://https://mixmax.com)\n# License\n",
        "date": "02.02.2018 11:36:39",
        "repo": "remy/nodemon",
        "type": "docs",
        "sim_msg": "docs(readme): update Support with GitHub Sponsors link",
        "sim_diff": "diff --git a/README.md b/README.md @@ -307,6 +307,7 @@ Support this project with your organization. Your logo will show up here with a\n## Support\n+- [GitHub Sponsors](https://b.remarkabl.org/github-sponsors)\n- [Patreon](https://b.remarkabl.org/patreon)\n- [Open Collective](https://b.remarkabl.org/open-collective-html-react-parser)\n- [Ko-fi](https://b.remarkabl.org/ko-fi)\n",
        "chatgpt_rag": "docs(readme): update Support with Mixmax link in sponsor section"
    },
    {
        "msg": "docs(aspectratiobox): added docs",
        "diff": "diff --git a/packages/chakra-ui-docs/docs/alertdialog.mdx b/packages/chakra-ui-docs/docs/alertdialog.mdx @@ -120,9 +120,9 @@ export default {\n## Props\n-AlertDialog and it's components composes the `Modal` component, the only\n+AlertDialog and it's components composes the `CModal` component, the only\nexception is that it requires a `leastDestructiveRef` which is similar to the\n-`initialFocusRef` in `Modal`\n+`initialFocusRef` in `CModal`\n| Name | Type | Default | Description |\n| ------------------------------ | --------------------------------- | ------- | ------------------------------------------------------------- |\n",
        "date": "05.04.2020 10:30:11",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "sim_msg": "docs(dialog): add new examples",
        "sim_diff": "diff --git a/packages/doc/content/components/components/dialog/index.mdx b/packages/doc/content/components/components/dialog/index.mdx @@ -8,9 +8,13 @@ metaDescription: 'Dialog Component'\n### Reference\n-Gympass `<Dialog />` is the proper component to show alert messages.\n+Gympass `<Dialog />` is a component has the objective o provide priority feedback for the user\n-The `Dialog` may have an icon, a custom action and a close button.\n+As it could be seen in most components, the Dialog has its own compounds:\n+\n+- `<Dialog.Header />`\n+- `<Dialog.Content />`\n+- `<Dialog.Actions />`\n### Usage\n@@ -30,11 +34,10 @@ render(() => {\nreturn (\n<>\n- <Button onClick={handleOpen} secondary>Dialog with one action</Button>\n+ <Button onClick={handleOpen}>Dialog with one action</Button>\n<Dialog\nisOpen={isOpen}\n- onClose={handleOnClose}\n>\n<Dialog.Header>\n<Text.H4 ta=\"center\"> Title </Text.H4>\n@@ -67,11 +70,10 @@ render(() => {\nreturn (\n<>\n- <Button onClick={handleOpen}>Dialog with two actions </Button>\n+ <Button onClick={handleOpen} secondary>Dialog with two actions </Button>\n<Dialog\nisOpen={isOpen}\n- onClose={handleOnClose}\n>\n<Dialog.Header>\n<Text.H4 ta=\"center\"> Title </Text.H4>\n@@ -84,7 +86,7 @@ render(() => {\n<Button.Text onClick={handleOnClose}>Cancel</Button.Text>\n</Box>\n<Box>\n- <Button onClick={handleOnClose}>Yes, downgrade</Button>\n+ <Button>Yes, downgrade</Button>\n</Box>\n</Dialog.Actions>\n</Dialog>\n@@ -135,8 +137,44 @@ render(() => {\n});\n```\n+### Dialog with only title\n+\n+```javascript state\n+render(() => {\n+ const [isOpen, setIsOpen] = useState(false);\n+\n+ const handleOpen = () => {\n+ setIsOpen(true);\n+ };\n+\n+ const handleOnClose = () => {\n+ setIsOpen(false);\n+ };\n+\n+ return (\n+ <>\n+ <Button onClick={handleOpen} secondary>Dialog with only title </Button>\n+\n+ <Dialog\n+ isOpen={isOpen}\n+ >\n+ <Dialog.Header>\n+ <Text.H4 ta=\"center\" mb={32}> Title </Text.H4>\n+ </Dialog.Header>\n+ <Dialog.Actions>\n+ <Box mr={24}>\n+ <Button.Text onClick={handleOnClose}>Cancel</Button.Text>\n+ </Box>\n+ <Box>\n+ <Button onClick={handleOnClose}>Yes, downgrade</Button>\n+ </Box>\n+ </Dialog.Actions>\n+ </Dialog>\n+ </>\n+ );\n+});\n+```\n+\n### Props\n<PropsTable component=\"Dialog\" platform=\"web\" />\n-<PropsTable component=\"Dialog.Title\" platform=\"web\" />\n-<PropsTable component=\"Card\" platform=\"web\" />\n",
        "chatgpt_rag": "docs(alertdialog): update component reference to CModal"
    },
    {
        "msg": "docs(TextArea): fix verbiage in TextArea docs\nChange the phrase  \"don't support more\" to \"don't support anymore\" in the TextArea docs source, for proper English grammar",
        "diff": "diff --git a/docs/src/examples/addons/TextArea/Usage/index.js b/docs/src/examples/addons/TextArea/Usage/index.js @@ -9,7 +9,7 @@ const TextAreaUsageExamples = () => (\n<Segment>\n<Message warning>\n<Message.Header>Auto height</Message.Header>\n- We don't support `autoHeight` more. If you need this feature you can use{' '}\n+ We don't support `autoHeight` anymore. If you need this feature you can use{' '}\n<a\nhref='https://www.npmjs.com/package/react-textarea-autosize'\nrel='noopener noreferrer'\n",
        "date": "16.01.2022 04:24:59",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "refactor: add grow prop in textarea and resizer",
        "sim_diff": "diff --git a/src/components/Textarea/index.js b/src/components/Textarea/index.js @@ -20,7 +20,11 @@ export default class Textarea extends Component {\n}\ncomponentDidMount() {\n- autosize(this.textareaRef.current);\n+ const { grow } = this.props;\n+ if (grow) {\n+ return autosize(this.textareaRef.current);\n+ }\n+ return null;\n}\ngetContainerClassNames() {\n@@ -150,6 +154,8 @@ Textarea.propTypes = {\ncols: PropTypes.number,\n/** The number of visible text lines for the control. The value by default is 3. */\nrows: PropTypes.number,\n+ /** This make to textarea grow. This value defaults to false. */\n+ grow: PropTypes.bool,\n};\nTextarea.defaultProps = {\n@@ -167,6 +173,7 @@ Textarea.defaultProps = {\nreadOnly: false,\ncols: undefined,\nrows: 3,\n+ grow: false,\nonChange: () => {},\nonFocus: () => {},\nonBlur: () => {},\n",
        "chatgpt_rag": "style: fix typo in warning message and update link in TextAreaUsageExamples"
    },
    {
        "msg": "docs: fix url in with-typescript-plugin readme",
        "diff": "diff --git a/packages/razzle-plugin-typescript/README.md b/packages/razzle-plugin-typescript/README.md @@ -4,7 +4,7 @@ This package contains a plugin for using TypeScript with Razzle\nRazzle now has support for typescript using babel. Unless you specifically need this plugin we recommend using the builtin support\n-Use [with-typescript example](https://github.com/jaredpalmer/razzle/tree/next/examples/with-typescript) instead.\n+Use [with-typescript example](https://github.com/jaredpalmer/razzle/tree/master/examples/with-typescript) instead.\n## Usage in Razzle Projects\n@@ -22,7 +22,7 @@ module.exports = {\n};\n```\n-See full configuration in the [typescript example project](https://github.com/jaredpalmer/razzle/tree/master/examples/with-typescript).\n+See full configuration in the [typescript example project](https://github.com/jaredpalmer/razzle/tree/master/examples/with-typescript-plugin).\n### With custom options:\n",
        "date": "18.03.2021 22:01:38",
        "repo": "jaredpalmer/razzle",
        "type": "docs",
        "sim_msg": "feat(typescript): add support for esbuild",
        "sim_diff": "diff --git a/packages/typescript/mixin.core.js b/packages/typescript/mixin.core.js @@ -28,7 +28,52 @@ const getCompilerOptions = (ts, rootPath) => {\nclass TypescriptMixin extends Mixin {\nconfigureBuild(webpackConfig, { jsLoaderConfig, allLoaderConfigs }, target) {\n- const { loader, options, exclude } = jsLoaderConfig;\n+ const { experimentalEsbuild } = this.options;\n+\n+ webpackConfig.resolve.extensions.push('.ts', '.tsx');\n+\n+ if (experimentalEsbuild) {\n+ const {\n+ include,\n+ exclude,\n+ use: [{ loader, options }, ...loaders],\n+ } = jsLoaderConfig;\n+\n+ allLoaderConfigs.unshift(\n+ {\n+ test: /\\.ts$/,\n+ include,\n+ exclude,\n+ use: [\n+ {\n+ loader,\n+ options: {\n+ ...options,\n+ loader: 'ts',\n+ },\n+ },\n+ ...loaders,\n+ ],\n+ },\n+ {\n+ test: /\\.tsx$/,\n+ include,\n+ exclude,\n+ use: [\n+ {\n+ loader,\n+ options: {\n+ ...options,\n+ loader: 'tsx',\n+ },\n+ },\n+ ...loaders,\n+ ],\n+ }\n+ );\n+ } else {\n+ const { exclude, loader, options } = jsLoaderConfig;\n+\nconst isDevelop =\ntarget === 'develop' ||\n(target === 'node' && process.env.NODE_ENV !== 'production');\n@@ -50,7 +95,11 @@ class TypescriptMixin extends Mixin {\n},\n],\n});\n- webpackConfig.resolve.extensions.push('.ts', '.tsx');\n+ }\n+ }\n+\n+ handleArguments(argv) {\n+ this.options = { ...this.options, ...argv };\n}\ndiagnose() {\n",
        "chatgpt_rag": "chore(razzle-plugin-typescript): update links in README to point to correct examples"
    },
    {
        "msg": "docs: update vuepress docs with codesandbox starter",
        "diff": "diff --git a/website/pages/with-vuepress.mdx b/website/pages/with-vuepress.mdx @@ -74,7 +74,7 @@ export default ({\n}\n}\n})\n-})\n+}\n```\nNow you can wrap your main application inside the Chakra `CThemeProvider` component by creating a layout wrapper in `theme/layouts/Layout.vue`.\n@@ -105,7 +105,11 @@ export default {\n## Using Chakra components\n-_In your `App.vue` file._\n+You can now use Chakra in your custom components for your theme in either your `theme/components` folder (available to other theme components),\n+or your `theme/global-components` folder (available to your markdown pages as well as other components).\n+Learn more about theme inheritance in the [Vuepress documentation](https://vuepress.vuejs.org/theme/inheritance.html#inheritance-strategy)\n+\n+_In your `my-component.vue` file._\n```vue\n<template>\n@@ -120,7 +124,7 @@ _In your `App.vue` file._\nimport { CBox, CButton } from '@chakra-ui/vue'\nexport default {\n- name: 'App',\n+ name: 'MyComponent',\ncomponents: {\nCBox,\nCButton\n@@ -128,3 +132,13 @@ export default {\n}\n</script>\n```\n+\n+### Vuepress Codesandbox Starters\n+\n+Here's a link to sample component starter with Nuxt.js\n+\n+- [Vuepress Starter](https://codesandbox.io/s/chakra-ui-vuepress-starter-qx4up)\n+\n+### Storybook Components\n+\n+You can also view all developed components in [Storybook](https://chakra-ui-vue.netlify.com)!\n",
        "date": "16.03.2021 11:45:13",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "sim_msg": "docs: grammar and additional info links",
        "sim_diff": "diff --git a/docs/guide/using-vue.md b/docs/guide/using-vue.md Because VuePress applications are server-rendered in Node.js when generating static builds, any Vue usage must conform to the [universal code requirements](https://ssr.vuejs.org/en/universal.html). In short, make sure to only access Browser / DOM APIs in `beforeMounted` or `mounted` hooks.\n-If you are using or demoing a component that is not SSR friendly (for example containing custom directives), you can wrap them inside the built-in `<ClientOnly>` component:\n+If you are using or demoing components that are not SSR friendly (for example containing custom directives), you can wrap them inside the built-in `<ClientOnly>` component:\n``` md\n<ClientOnly>\n@@ -58,7 +58,7 @@ Directives also work:\n### Access to Site & Page Data\n-The compiled component does not have any private data but do have access to the [site metadata](./custom-themes.md#site-and-page-metadata). For example:\n+The compiled component does not have any private data but does have access to the [site metadata](./custom-themes.md#site-and-page-metadata). For example:\n**Input**\n@@ -96,7 +96,7 @@ By default, fenced code blocks are automatically wrapped with `v-pre`. If you wa\n## Using Components\n-Any `*.vue` file found in `.vuepress/components` are automatically registered as global async components. For example:\n+Any `*.vue` files found in `.vuepress/components` are automatically registered as [global](https://vuejs.org/v2/guide/components-registration.html#Global-Registration), [async](https://vuejs.org/v2/guide/components-dynamic-async.html#Async-Components) components. For example:\n```\n.\n@@ -118,7 +118,7 @@ Inside any markdown file you can then directly use the components (names are inf\n<OtherComponent/>\n::: warning IMPORTANT\n-Make sure a custom component's names either contains a hyphen or is in PascalCase. Otherwise it will be treated as an inline element and wrapped inside a `<p>` tag, which will lead to hydration mismatch because `<p>` does not allow block elements to be placed inside it.\n+Make sure a custom component's name either contains a hyphen or is in PascalCase. Otherwise it will be treated as an inline element and wrapped inside a `<p>` tag, which will lead to hydration mismatch because `<p>` does not allow block elements to be placed inside it.\n:::\n## Script & Style Hoisting\n",
        "chatgpt_rag": "docs: added information on using Chakra components in custom components and provided links to Vuepress documentation and Codesandbox starters"
    },
    {
        "msg": "docs(docsearch): added docsearch to docs",
        "diff": "diff --git a/docs/content/settings.json b/docs/content/settings.json \"dark\": \"/logo-dark.svg\"\n},\n\"github\": \"nuxt-community/firebase-module\",\n- \"twitter\": \"nuxt_js\"\n+ \"twitter\": \"nuxt_js\",\n+ \"algolia\": {\n+ \"apiKey\": \"26073a7590724b3efc377b3b7608f3e0\",\n+ \"indexName\": \"nuxtjs_firebase\",\n+ \"langAttribute\": \"lang\"\n+}\n}\n",
        "date": "15.10.2020 22:00:37",
        "repo": "nuxt-community/firebase-module",
        "type": "docs",
        "sim_msg": "chore(extras): adjust package.json",
        "sim_diff": "diff --git a/extras/package.json b/extras/package.json },\n\"devDependencies\": {\n\"@fortawesome/fontawesome-free\": \"5.12.1\",\n- \"@mdi/font\": \"^4.9.95\",\n+ \"@mdi/font\": \"4.9.95\",\n\"@mdi/svg\": \"4.9.95\",\n- \"animate.css\": \"^3.7.2\",\n+ \"animate.css\": \"3.7.2\",\n\"cross-spawn\": \"^7.0.1\",\n\"eva-icons\": \"1.1.2\",\n\"fs-extra\": \"^8.1.0\",\n\"glob\": \"7.1.6\",\n- \"ionicons\": \"^4.6.3\",\n- \"line-awesome\": \"^1.3.0\",\n+ \"ionicons\": \"4.6.3\",\n+ \"line-awesome\": \"1.3.0\",\n\"material-design-icons\": \"3.0.1\",\n\"themify-icons\": \"https://github.com/lykmapipo/themify-icons\",\n\"xmldom\": \"^0.2.1\"\n",
        "chatgpt_rag": "chore(docs): update settings.json with Algolia configuration"
    },
    {
        "msg": "docs(Document): use only https sources",
        "diff": "diff --git a/docs/src/components/Document.js b/docs/src/components/Document.js @@ -13,42 +13,49 @@ const Document = ({ Body, children, Head, Html, siteData: { dev, versions } }) =\n<link rel='stylesheet' href='/style.css' />\n<link\nrel='stylesheet'\n- href={`//cdnjs.cloudflare.com/ajax/libs/semantic-ui/${versions.sui}/semantic.min.css`}\n+ href={`https://cdnjs.cloudflare.com/ajax/libs/semantic-ui/${versions.sui}/semantic.min.css`}\n/>\n- <script src={`//cdnjs.cloudflare.com/ajax/libs/anchor-js/${versions.anchor}/anchor.min.js`} />\n<script\n- src={`//cdn.jsdelivr.net/npm/@babel/standalone@${versions.babel.standalone}/babel.min.js`}\n+ src={`https://cdnjs.cloudflare.com/ajax/libs/anchor-js/${versions.anchor}/anchor.min.js`}\n/>\n<script\n- src={`//cdn.jsdelivr.net/npm/@babel/preset-env-standalone@${\n+ src={`https://cdn.jsdelivr.net/npm/@babel/standalone@${\n+ versions.babel.standalone\n+ }/babel.min.js`}\n+ />\n+ <script\n+ src={`https://cdn.jsdelivr.net/npm/@babel/preset-env-standalone@${\nversions.babel.standalone\n}/babel-preset-env.min.js`}\n/>\n- <script src={`//cdn.jsdelivr.net/faker.js/${versions.faker}/faker.min.js`} />\n+ <script src={`https://cdn.jsdelivr.net/faker.js/${versions.faker}/faker.min.js`} />\n- <script crossOrigin='true' src={`//unpkg.com/prettier@${versions.prettier}/standalone.js`} />\n<script\ncrossOrigin='true'\n- src={`//unpkg.com/prettier@${versions.prettier}/parser-babylon.js`}\n+ src={`https://unpkg.com/prettier@${versions.prettier}/standalone.js`}\n+ />\n+ <script\n+ crossOrigin='true'\n+ src={`https://unpkg.com/prettier@${versions.prettier}/parser-babylon.js`}\n/>\n<script\n- src={`//cdnjs.cloudflare.com/ajax/libs/prop-types/${versions.propTypes}/prop-types${\n+ src={`https://cdnjs.cloudflare.com/ajax/libs/prop-types/${versions.propTypes}/prop-types${\nsiteData.dev ? '' : '.min'\n}.js`}\n/>\n<script\n- src={`//cdnjs.cloudflare.com/ajax/libs/react/${versions.react}/umd/react${\n+ src={`https://cdnjs.cloudflare.com/ajax/libs/react/${versions.react}/umd/react${\ndev ? '.development' : '.production.min'\n}.js`}\n/>\n<script\n- src={`//cdnjs.cloudflare.com/ajax/libs/react-dom/${versions.react}/umd/react-dom${\n+ src={`https://cdnjs.cloudflare.com/ajax/libs/react-dom/${versions.react}/umd/react-dom${\ndev ? '.development' : '.production.min'\n}.js`}\n/>\n<script\n- src={`//cdnjs.cloudflare.com/ajax/libs/react-dom/${\n+ src={`https://cdnjs.cloudflare.com/ajax/libs/react-dom/${\nversions.react\n}/umd/react-dom-server.browser${dev ? '.development' : '.production.min'}.js`}\n/>\n",
        "date": "29.09.2018 13:13:49",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "refactor: add helmet title back",
        "sim_diff": "diff --git a/src/pages/_document.js b/src/pages/_document.js @@ -88,13 +88,13 @@ class HTMLDocument extends Document {\n}\n];\n- return (\n- <html lang=\"en\" {...htmlAttrs}>\n+ return <html lang=\"en\" {...htmlAttrs}>\n<Head>\n<Helmet htmlAttributes={{ lang: \"en\", dir: \"ltr\" }} />\n{meta.map((tag, index) => <meta key={index} {...tag} />)}\n{links.map((link, index) => <link key={index} {...link} />)}\n{helmet.base.toComponent()}\n+ {helmet.title.toComponent()}\n{helmet.meta.toComponent()}\n{helmet.link.toComponent()}\n{helmet.style.toComponent()}\n@@ -105,16 +105,10 @@ class HTMLDocument extends Document {\n<body>\n<Main />\n<NextScript />\n- {scripts.map((script, index) =>\n- (script.innerHTML ? (\n- /* eslint-disable-next-line */\n- <script async key={index} type={script.type} dangerouslySetInnerHTML={{ __html: script.innerHTML }} />\n- ) : (\n- <script async key={index} {...script} />\n- )))}\n+ {scripts.map((script, index) => (script.innerHTML ? /* eslint-disable-next-line */\n+ <script async key={index} type={script.type} dangerouslySetInnerHTML={{ __html: script.innerHTML }} /> : <script async key={index} {...script} />))}\n</body>\n- </html>\n- );\n+ </html>;\n}\n}\n",
        "chatgpt_rag": "refactor: update script and link URLs to use HTTPS instead of HTTP"
    },
    {
        "msg": "docs: added requirements to README",
        "diff": "diff --git a/README.md b/README.md ## Quick Setup\n+Make sure you have the newest versions of Nuxt and Firebase installed and setup in your project.\n+\n+```bash\n+yarn add nuxt # OR npm i nuxt\n+yarn add firebase # OR npm i firebase\n+```\n+\nInstall the module via NPM or Yarn:\n```bash\n",
        "date": "07.03.2020 18:22:08",
        "repo": "nuxt-community/firebase-module",
        "type": "docs",
        "sim_msg": "chore(ci): update prepare scripts",
        "sim_diff": "diff --git a/package.json b/package.json \"docs-gen\": \"cross-env NODE_ENV=docs nuxt generate -c docs/nuxt.config.js\",\n\"lint\": \"eslint --ext .js,.md,.vue ./\",\n\"postinstall\": \"opencollective || exit 0\",\n- \"prepare\": \"husky install\",\n+ \"prepare\": \"husky install && yarn run build\",\n\"prettify\": \"prettier --write '**/*.{js,json,md,scss,ts,vue}'\",\n\"release\": \"yarn run prettify && yarn run test && yarn run build && yarn run release-notes && standard-version\",\n\"release-notes\": \"jiti ./scripts/release-notes\",\n",
        "chatgpt_rag": "docs: update quick setup instructions in README.md"
    },
    {
        "msg": "docs: document externals and css imports",
        "diff": "diff --git a/website/pages/getting-started.mdx b/website/pages/getting-started.mdx @@ -103,7 +103,7 @@ yarn add --dev webpack@4.46.0 html-webpack-plugin@4.5.2\nAlso if there are issues, try adding specific package versions to resolutions in `package.json`.\n-## Common problems\n+## Common issues\nIf you have issues with css this might be related to postcss being resolved wrong.\n@@ -115,6 +115,42 @@ To fix this add:\n}\n```\n+If you get a error like this:\n+\n+```\n+node_modules/react-images-upload/index.css:1\n+.fileUploader {\n+^\n+\n+SyntaxError: Unexpected token '.'\n+ at wrapSafe (internal/modules/cjs/loader.js:1072:16)\n+```\n+\n+It means node tries to use `index.css` as a node module.\n+\n+To fix this make sure the module with the css is not externalized.\n+\n+```js\n+// razzle.config.js\n+'use strict';\n+\n+module.exports = {\n+ modifyWebpackOptions({\n+ options: {\n+ webpackOptions, // the modified options that was used to configure webpack/ webpack loaders and plugins\n+ }\n+ }) {\n+\n+ // If you use experimental.newExternals\n+ webpackOptions.notNodeExternalResMatch = (request, context) => {\n+ return /react-images-upload/.test(request)\n+ };\n+\n+ return webpackOptions;\n+ },\n+};\n+```\n+\nTo resolutions in your package.json. For npm see [here](https://stackoverflow.com/questions/52416312/npm-equivalent-of-yarn-resolutions).\n## Debugging with Inspector\n",
        "date": "13.03.2021 15:17:49",
        "repo": "jaredpalmer/razzle",
        "type": "docs",
        "sim_msg": "test(components/atom/upload): refactor",
        "sim_diff": "diff --git a/components/atom/upload/test/index.test.js b/components/atom/upload/test/index.test.js @@ -10,12 +10,31 @@ import ReactDOM from 'react-dom'\nimport chai, {expect} from 'chai'\nimport chaiDOM from 'chai-dom'\n+import * as pkg from '../src/index.js'\n+\n+import json from '../package.json'\n+\nchai.use(chaiDOM)\n-describe('atom/upload', () => {\n- const Component = AtomUpload\n+describe(json.name, () => {\n+ const {default: Component} = pkg\nconst setup = setupEnvironment(Component)\n+ it('library should include defined exported elements', () => {\n+ // Given\n+ const library = pkg\n+ const libraryExportedMembers = ['uploadStatuses', 'default']\n+\n+ // When\n+ const {uploadStatuses, default: AtomUpload, ...others} = library\n+\n+ // Then\n+ expect(Object.keys(library).length).to.equal(libraryExportedMembers.length)\n+ expect(Object.keys(library)).to.have.members(libraryExportedMembers)\n+ expect(Object.keys(others).length).to.equal(0)\n+ })\n+\n+ describe(Component.displayName, () => {\nit('should render without crashing', () => {\n// Given\nconst props = {\n@@ -48,7 +67,8 @@ describe('atom/upload', () => {\nit('should NOT extend classNames', () => {\n// Given\nconst props = {className: 'extended-classNames'}\n- const findSentence = str => string => string.match(new RegExp(`S*${str}S*`))\n+ const findSentence = str => string =>\n+ string.match(new RegExp(`S*${str}S*`))\n// When\nconst {container} = setup(props)\n@@ -58,3 +78,40 @@ describe('atom/upload', () => {\nexpect(findClassName(container.innerHTML)).to.be.null\n})\n})\n+\n+ describe('uploadStatuses', () => {\n+ it('value must be an object enum', () => {\n+ // Given\n+ const library = pkg\n+\n+ // When\n+ const {uploadStatuses: actual} = library\n+\n+ // Then\n+ expect(actual).to.be.an('object')\n+ })\n+\n+ it('value must be a defined string-key pair filled', () => {\n+ // Given\n+ const library = pkg\n+ const expected = {\n+ ACTIVE: 'active',\n+ UPLOAD: 'upload',\n+ SUCCESS: 'success',\n+ ERROR: 'error'\n+ }\n+\n+ // When\n+ const {uploadStatuses: actual} = library\n+ const {ACTIVE, UPLOAD, SUCCESS, ERROR, ...others} = actual\n+\n+ // Then\n+ expect(Object.keys(others).length).to.equal(0)\n+ expect(Object.keys(actual)).to.have.members(Object.keys(expected))\n+ Object.entries(expected).forEach(([expectedKey, expectedValue]) => {\n+ expect(Object.keys(actual).includes(expectedKey)).to.be.true\n+ expect(actual[expectedKey]).to.equal(expectedValue)\n+ })\n+ })\n+ })\n+})\n",
        "chatgpt_rag": "docs(website): update getting-started.mdx with solution for node module css error"
    },
    {
        "msg": "docs: link to razzle 3 docs",
        "diff": "diff --git a/website/pages/index.mdx b/website/pages/index.mdx @@ -16,6 +16,10 @@ JavaScript applications are tough to setup. Either you buy into a framework, for\n- [Jest](https://github.com/facebook/jest) test runner setup with sensible defaults via `razzle test`\n- SPA mode, build client side apps with razzle\n+## Not ready for Razzle 4.0?\n+\n+[Razzle 3 docs](https://razzle-git-three-jared.vercel.app/)\n+\n## Getting help\nIf you get stuck, check out Razzle's [GitHub Discussions](https://github.com/jaredpalmer/razzle/discussions). In addition, #razzle-afterjs on [Formium Community Discord Server](https://discord.gg/pJSg287) is a great way to get help quickly too.\n",
        "date": "24.03.2021 23:46:50",
        "repo": "jaredpalmer/razzle",
        "type": "docs",
        "sim_msg": "ci(github-actions): disable macos-latest agent due to pricing",
        "sim_diff": "diff --git a/.github/workflows/rapid-test.yml b/.github/workflows/rapid-test.yml @@ -26,7 +26,7 @@ jobs:\nname: JS & TS\nstrategy:\nmatrix:\n- os: [ubuntu-latest, windows-latest, macos-latest]\n+ os: [ubuntu-latest, windows-latest]\nnode: [12]\nruns-on: ${{ matrix.os }}\nsteps:\n",
        "chatgpt_rag": "docs: add link to Razzle 3 documentation in index page"
    },
    {
        "msg": "docs(IconExampleIconGroup): fix circle outline",
        "diff": "diff --git a/docs/src/examples/elements/Icon/Groups/IconExampleIconGroup.js b/docs/src/examples/elements/Icon/Groups/IconExampleIconGroup.js @@ -3,7 +3,7 @@ import { Icon } from 'semantic-ui-react'\nconst IconExampleIconGroup = () => (\n<Icon.Group size='huge'>\n- <Icon size='big' name='thin circle' />\n+ <Icon size='big' name='circle outline' />\n<Icon name='user' />\n</Icon.Group>\n)\n",
        "date": "20.07.2018 07:22:30",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "refactor(ui): Icon - do not use inline args to use prop types",
        "sim_diff": "diff --git a/packages/ui/src/ui/icon/icon.jsx b/packages/ui/src/ui/icon/icon.jsx @@ -18,13 +18,17 @@ const ICONS = {\nWARNING: 'warning',\n};\n-export const Icon = ({ className, glyph, as: Component, size, ...restProps }) => (\n+export const Icon = (props) => {\n+ const { className, glyph, as: Component, size, ...restProps } = props;\n+\n+ return (\n<Component className={cx(css.root, className, css[size])} {...restProps}>\n<svg className={css.icon}>\n<use xlinkHref={`#${glyph}`} />\n</svg>\n</Component>\n);\n+};\nIcon.ICONS = ICONS;\n",
        "chatgpt_rag": "chore(docs): Updated IconExampleIconGroup component to use 'circle outline' icon instead of 'thin circle' icon"
    },
    {
        "msg": "docs(install): Use the minified version of Bootstrap CSS",
        "diff": "diff --git a/docs/lib/Home/index.js b/docs/lib/Home/index.js @@ -72,7 +72,7 @@ npm install --save reactstrap@next react react-dom`}\n</pre>\n<p>Import Bootstrap CSS in the <code>src/index.js</code> file:</p>\n<pre>\n- <PrismCode className=\"language-bash\">import 'bootstrap/dist/css/bootstrap.css';</PrismCode>\n+ <PrismCode className=\"language-bash\">import 'bootstrap/dist/css/bootstrap.min.css';</PrismCode>\n</pre>\n<p>Import required reactstrap components within <code>src/App.js</code> file or your custom component files:</p>\n<pre>\n",
        "date": "12.03.2018 01:36:35",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "sim_msg": "refactor: update capitalization of component imports",
        "sim_diff": "diff --git a/src/pages/index.js b/src/pages/index.js @@ -2,11 +2,11 @@ import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"material-ui/styles\";\n-import Layout from \"components/layout\";\n+import Layout from \"components/Layout\";\nimport withData from \"lib/apollo/withData\";\nimport withRoot from \"lib/theme/withRoot\";\n-import Header from \"components/header\";\n-import Profile from \"components/profile\";\n+import Header from \"components/Header\";\n+import Profile from \"components/Profile\";\nconst styles = theme => ({\nroot: {\n",
        "chatgpt_rag": "fix: update import path for Bootstrap CSS to use minified version"
    },
    {
        "msg": "docs(changelog): manually correct unreleased",
        "diff": "diff --git a/CHANGELOG.md b/CHANGELOG.md # Change Log\n-## [Unreleased](https://github.com/Semantic-Org/Semantic-UI-React/tree/HEAD)\n-\n-[Full Changelog](https://github.com/Semantic-Org/Semantic-UI-React/compare/v0.66.0...HEAD)\n-\n-**Implemented enhancements:**\n-\n-- Accordion.Title - 'as' prop in dynamic accordion titles [\\#1144](https://github.com/Semantic-Org/Semantic-UI-React/issues/1144)\n-\n## [v0.66.0](https://github.com/Semantic-Org/Semantic-UI-React/tree/v0.66.0) (2017-02-22)\n[Full Changelog](https://github.com/Semantic-Org/Semantic-UI-React/compare/v0.65.0...v0.66.0)\n- Add missing MenuItem `disabled` prop [\\#1363](https://github.com/Semantic-Org/Semantic-UI-React/issues/1363)\n- Remove Form `onSubmit` prop and serializer [\\#1362](https://github.com/Semantic-Org/Semantic-UI-React/issues/1362)\n- Add `link` prop to Card [\\#1350](https://github.com/Semantic-Org/Semantic-UI-React/issues/1350)\n+- Accordion.Title - 'as' prop in dynamic accordion titles [\\#1144](https://github.com/Semantic-Org/Semantic-UI-React/issues/1144)\n- Typings: unable to set many typical html element props [\\#1072](https://github.com/Semantic-Org/Semantic-UI-React/issues/1072)\n**Fixed bugs:**\n",
        "date": "21.02.2017 20:45:10",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "docs(changelog): tidy CHANGELOG.md with prettier",
        "sim_diff": "diff --git a/CHANGELOG.md b/CHANGELOG.md All notable changes to this project will be documented in this file. See [standard-version](https://github.com/conventional-changelog/standard-version) for commit guidelines.\n-### [1.4.1](https://www.github.com/remarkablemark/html-react-parser/compare/v1.4.0...v1.4.1) (2021-11-27)\n-\n+## [1.4.1](https://www.github.com/remarkablemark/html-react-parser/compare/v1.4.0...v1.4.1) (2021-11-27)\n### Performance Improvements\n-* upgrade dependency html-dom-parser to v1.0.3 ([8987efb](https://www.github.com/remarkablemark/html-react-parser/commit/8987efb0aaf43a013bfa7aa37a9f2c404b47dedc))\n+- upgrade dependency html-dom-parser to v1.0.3 ([8987efb](https://www.github.com/remarkablemark/html-react-parser/commit/8987efb0aaf43a013bfa7aa37a9f2c404b47dedc))\n## [1.4.0](https://www.github.com/remarkablemark/html-react-parser/compare/v1.3.0...v1.4.0) (2021-10-01)\n-\n### Features\n-* added CRA typescript example ([42f42e5](https://www.github.com/remarkablemark/html-react-parser/commit/42f42e519c05c382476a14a73d45b5f700fecdbb))\n-* export domhandler's Element ([0473e83](https://www.github.com/remarkablemark/html-react-parser/commit/0473e832ac65b3e8ce5f8da69c740cbd84f62863))\n+- added CRA typescript example ([42f42e5](https://www.github.com/remarkablemark/html-react-parser/commit/42f42e519c05c382476a14a73d45b5f700fecdbb))\n+- export domhandler's Element ([0473e83](https://www.github.com/remarkablemark/html-react-parser/commit/0473e832ac65b3e8ce5f8da69c740cbd84f62863))\n## [1.3.0](https://www.github.com/remarkablemark/html-react-parser/compare/v1.2.9...v1.3.0) (2021-09-07)\n-\n### Features\n-* upgrade `react-property` to get react-dom 17 DOM/SVG properties ([f0fbbff](https://www.github.com/remarkablemark/html-react-parser/commit/f0fbbffa7b14262b696fb7ec33f050701bdf2e37))\n+- upgrade `react-property` to get react-dom 17 DOM/SVG properties ([f0fbbff](https://www.github.com/remarkablemark/html-react-parser/commit/f0fbbffa7b14262b696fb7ec33f050701bdf2e37))\n### [1.2.9](https://www.github.com/remarkablemark/html-react-parser/compare/v1.2.8...v1.2.9) (2021-09-06)\n-\n### Build System\n-* **deps:** bump domhandler from 4.2.0 to 4.2.2 ([cac7ddf](https://www.github.com/remarkablemark/html-react-parser/commit/cac7ddfb370fb0fdf8daaec02dfb2a3c3a3f77c6))\n-* **deps:** bump html-dom-parser from 1.0.1 to 1.0.2 ([72cccad](https://www.github.com/remarkablemark/html-react-parser/commit/72cccad24661b0c2e74370f183b96cdfb5da98d0))\n-* **deps:** bump react-property from 1.0.1 to 1.0.2 ([9feedd7](https://www.github.com/remarkablemark/html-react-parser/commit/9feedd722db49bd1752b38476b0e14ca93ea41c1))\n+- **deps:** bump domhandler from 4.2.0 to 4.2.2 ([cac7ddf](https://www.github.com/remarkablemark/html-react-parser/commit/cac7ddfb370fb0fdf8daaec02dfb2a3c3a3f77c6))\n+- **deps:** bump html-dom-parser from 1.0.1 to 1.0.2 ([72cccad](https://www.github.com/remarkablemark/html-react-parser/commit/72cccad24661b0c2e74370f183b96cdfb5da98d0))\n+- **deps:** bump react-property from 1.0.1 to 1.0.2 ([9feedd7](https://www.github.com/remarkablemark/html-react-parser/commit/9feedd722db49bd1752b38476b0e14ca93ea41c1))\n## [1.2.8](https://github.com/remarkablemark/html-react-parser/compare/v1.2.7...v1.2.8) (2021-08-12)\n",
        "chatgpt_rag": "docs(changelog): tidy CHANGELOG.md with prettier and update Accordion.Title - 'as' prop in dynamic accordion titles [\\#1144](https://github.com/Semantic-Org/Semantic-UI-React/issues/1144)"
    },
    {
        "msg": "docs(auth-init): added namespace info to vuex actions/mutations",
        "diff": "diff --git a/docs/content/en/service-options/auth.md b/docs/content/en/service-options/auth.md @@ -31,6 +31,8 @@ This sets up an `onAuthStateChanged()` listener and hooks it up to the vuex stor\nJust add a mutation/action to your vuex store ([as seen below](#onauthstatechangedmutation)) that handles what to do with the authUser object (e.g. save it to the state or get user data from FireStore) and then define the name of the action/mutation in the `firebase.services.auth.initialize` configuration as above.\n+<alert type=\"info\">You can also use namespaces for your store actions/mutations like so: `onAuthStateChangedAction: 'namespaceName/actionName'`.</alert>\n+\nWhen onAuthStateChanged() gets triggered by Firebase, the defined mutation/action will be called with the `authUser` and `claims` attributes as [as seen below](#onauthstatechangedmutation)\nTo unsubscribe from the listener simply call the `$fireAuthUnsubscribe()` function which is provided as a [combined inject](https://nuxtjs.org/guide/plugins#combined-inject).\n",
        "date": "16.10.2020 00:00:22",
        "repo": "nuxt-community/firebase-module",
        "type": "docs",
        "sim_msg": "docs(actions/auth.js): Tweak comments.",
        "sim_diff": "diff --git a/lib/actions/auth.js b/lib/actions/auth.js @@ -31,19 +31,19 @@ export function showLoginError (err) {\n* This function is called by the Auth0Provider component, with the described parameter(s),\n* after the user signs in.\n* @param {Object} appState The state stored when calling useAuth0().loginWithRedirect\n- * or a withAuhenticationRequired-enabled component.\n+ * or when instantiating a component that uses withAuhenticationRequired.\n*/\nexport function processSignIn (appState) {\nreturn function (dispatch, getState) {\nif (appState && appState.returnTo) {\n// Remove URL parameters that were added by auth0-react\n- // (see https://github.com/auth0/auth0-react/blob/adac2e810d4f6d33253cb8b2016fcedb98a3bc16/examples/cra-react-router/src/index.tsx#L7)\n+ // (see https://github.com/auth0/auth0-react/blob/adac2e810d4f6d33253cb8b2016fcedb98a3bc16/examples/cra-react-router/src/index.tsx#L7).\nwindow.history.replaceState({}, '', window.location.pathname)\n- // Here, we add to the redux state the URL route (portion after # that contains the route/page name e.g. /account,\n- // and includes a combination of itinerary search, stop/trip view, etc.) that was passed to appState prior to login,\n- // and we redirect to the \"/signedin\" route, where the AfterLoginScreen\n- // will fetch the user data and, upon fetched, redirect back to appState.returnTo.\n+ // Here, we add the hash to the redux state (portion of the URL after '#' that contains the route/page name e.g. /account,\n+ // and includes a combination of itinerary search, stop/trip view, etc.) that was passed to appState.returnTo prior to login.\n+ // Once the redux state set, we redirect to the \"/signedin\" route (whitelisted in Auth0 dashboard), where the AfterLoginScreen\n+ // will in turn fetch the user data then redirect the web browser back to appState.returnTo.\ndispatch(setPathBeforeSignIn(appState.returnTo))\ndispatch(replace('/signedin'))\n}\n",
        "chatgpt_rag": "docs(content/en/service-options/auth.md): Add information about using namespaces for store actions/mutations."
    },
    {
        "msg": "docs(README): fix release instructions'",
        "diff": "diff --git a/README.md b/README.md @@ -135,7 +135,6 @@ npm run deploy:docs\nUpdate the changelog (requires [github_changelog_generator][15]):\n```sh\n-npm run deploy:docs\ngithub_changelog_generator\ngit add CHANGELOG.md\ngit commit -m 'docs(changelog): update changelog [ci skip]'\n",
        "date": "28.02.2017 03:25:03",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "chore: improve release process docs",
        "sim_diff": "diff --git a/README.md b/README.md @@ -122,3 +122,9 @@ Options:\n3. Switch to `master` branch and pull latest changes\n4. Run `npm run release:patch/minor/major` command\n5. Keep `dev` branch up to date with `master`\n+\n+Above actions will lead to:\n+\n+- New npm node module release\n+- New GitHub packages node module release\n+- New GitHub release (tagged) created with changelog from commit messages\n",
        "chatgpt_rag": "docs: update release process documentation in README"
    },
    {
        "msg": "docs(Modal): fix Modal.Description description",
        "diff": "diff --git a/src/modules/Modal/ModalDescription.js b/src/modules/Modal/ModalDescription.js @@ -5,7 +5,7 @@ import React from 'react'\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps } from '../../lib'\n/**\n- * A modal can have a header.\n+ * A modal can contain a description with one or more paragraphs.\n*/\nfunction ModalDescription(props) {\nconst { children, className, content } = props\n",
        "date": "22.02.2019 11:33:11",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "docs(modal): modal close button working",
        "sim_diff": "diff --git a/src/components/Modal/Modal.stories.js b/src/components/Modal/Modal.stories.js -import React from 'react';\n+import React, {useState} from 'react';\nimport markdown from './README.mdx';\nimport Modal from '.';\n@@ -12,12 +12,20 @@ export default {\n},\n};\n-export const Regular = (args) => (\n+export const Regular = (args) => {\n+ const [isOpen, setOpen] = useState(args.open);\n+\n+ const handleModalClose = () => {\n+ setOpen(!isOpen);\n+ }\n+\n+ return(\n<>\nUse the open property in the table below to enable the preview.{' '}\n- <Modal {...args}>{args.children}</Modal>\n+ <Modal {...args} onRequestClose={handleModalClose} open={isOpen} >{args.children}</Modal>\n</>\n);\n+}\nRegular.args = {\nchildren: 'Text',\n",
        "chatgpt_rag": "docs(modal): update modal description to contain one or more paragraphs"
    },
    {
        "msg": "docs(Cards): fix broken link",
        "diff": "diff --git a/docs/lib/examples/CardGroups.js b/docs/lib/examples/CardGroups.js @@ -25,7 +25,7 @@ const Example = (props) => {\n</CardBody>\n</Card>\n<Card>\n- <CardImg top width=\"100%\" src=\"/assets/static318x180.svg\" alt=\"Card image cap\" />\n+ <CardImg top width=\"100%\" src=\"/assets/318x180.svg\" alt=\"Card image cap\" />\n<CardBody>\n<CardTitle>Card title</CardTitle>\n<CardSubtitle>Card subtitle</CardSubtitle>\n",
        "date": "03.10.2019 18:02:21",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "sim_msg": "feat: cardgroup default lazyload false",
        "sim_diff": "diff --git a/src/CardGroup/Item.js b/src/CardGroup/Item.js -import React from 'react'\n+import React, { Fragment } from 'react'\nimport classname from 'classnames'\nimport PropTypes from 'prop-types'\nimport Checkbox from '../Checkbox/Checkbox'\n@@ -11,22 +11,31 @@ class Item extends React.Component {\nif (onChange) onChange(checked, value)\n}\n+ renderChildren(content) {\n+ const { placeholder, container } = this.props\n+ if (!placeholder) return content\n+ return (\n+ <Lazyload container={container} placeholder={placeholder}>\n+ {content}\n+ </Lazyload>\n+ )\n+ }\n+\nrender() {\nconst { style, className, container, children, placeholder, value, ...others } = this.props\nconst cls = classname(cardGroupClass('item'), className)\nconst showCheck = others.checked !== undefined\n- return (\n- <div style={style} className={cls}>\n- <Lazyload container={container} placeholder={placeholder}>\n+ const content = (\n+ <Fragment>\n{children}\n{showCheck && (\n- <Checkbox\n- {...others}\n- onChange={this.handleChange.bind(this, value)}\n- className={cardGroupClass('checkbox')}\n- />\n+ <Checkbox {...others} onChange={this.handleChange.bind(this, value)} className={cardGroupClass('checkbox')} />\n)}\n- </Lazyload>\n+ </Fragment>\n+ )\n+ return (\n+ <div style={style} className={cls}>\n+ {this.renderChildren(content)}\n</div>\n)\n}\n",
        "chatgpt_rag": "fix: update image source in CardGroups example"
    },
    {
        "msg": "docs: Fix typo in faq.md\n[skip ci]",
        "diff": "diff --git a/faq.md b/faq.md @@ -96,7 +96,7 @@ nodemon (from 1.4.2 onwards) uses [Chokidar](https://www.npmjs.com/package/choki\nIf you find your files aren't being monitored, either nodemon isn't restarting, or it reports that zero files are being watched, then you may need the polling mode.\n-To enable polling use the the legacy flag either via the terminal:\n+To enable polling use the legacy flag either via the terminal:\n```shell\n$ nodemon --legacy-watch\n",
        "date": "18.11.2021 13:49:45",
        "repo": "remy/nodemon",
        "type": "docs",
        "sim_msg": "fix: patch for infinite loop with panic override",
        "sim_diff": "diff --git a/packages/stack/watcher/src/index.js b/packages/stack/watcher/src/index.js @@ -192,7 +192,10 @@ class Watcher {\nthis.logger.trace(files);\nlet configWatcher = chokidar.watch(files, {\n- ignored: /[\\/\\\\]\\.|tmp_/, persistent: true, ignoreInitial: true, followSymlinks: true\n+ // FIXME this should be handled by the nim-compiler plugin somehow\n+ // panicoverride.nim is a file added by nimplay when compiling but then removed\n+ // If we don't ignore that file, we start an inifite loop of compilation\n+ ignored: /[\\/\\\\]\\.|tmp_|panicoverride\\.nim/, persistent: true, ignoreInitial: true, followSymlinks: true\n});\nthis.fileWatchers.push(configWatcher);\n",
        "chatgpt_rag": "chore: update faq.md to fix typo in command line argument"
    },
    {
        "msg": "docs(Progress): typo stripped -> striped",
        "diff": "diff --git a/docs/lib/Components/ProgressPage.js b/docs/lib/Components/ProgressPage.js @@ -48,7 +48,7 @@ export default class ProgressPage extends React.Component {\nPropTypes.number,\n]),\nanimated: PropTypes.bool,\n- stripped: PropTypes.bool,\n+ striped: PropTypes.bool,\ncolor: PropTypes.string,\nclassName: PropTypes.string,\nbarClassName: PropTypes.string // used to add class to the inner progress-bar element\n",
        "date": "14.12.2017 23:50:44",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "sim_msg": "docs: fix property description in progressIndicator",
        "sim_diff": "diff --git a/src/components/ProgressIndicator/index.js b/src/components/ProgressIndicator/index.js @@ -70,8 +70,7 @@ export default class ProgressIndicator extends Component {\n}\nProgressIndicator.propTypes = {\n- /** The current step, which must match the name prop of one of ProgressStep components.\n- * If a step is not provided, the name of the first ProgressStep component is used. */\n+ /** The current step, which must match the name prop of one of ProgressStep components. */\ncurrentStepName: PropTypes.string,\n/** A CSS class for the outer element, in addition to the component's base classes. */\nclassName: PropTypes.string,\n",
        "chatgpt_rag": "docs: fix typo in property name in ProgressPage component"
    },
    {
        "msg": "docs(Responsive): update ResponsiveExampleMaxWidth.js (added two words to clarify)\nAdded \"and lower\" to the 2569px width example, because that's what it does and the wording was confusing on first sight.",
        "diff": "diff --git a/docs/src/examples/addons/Responsive/Types/ResponsiveExampleMaxWidth.js b/docs/src/examples/addons/Responsive/Types/ResponsiveExampleMaxWidth.js @@ -7,7 +7,7 @@ const ResponsiveExampleMaxWidth = () => (\nVisible only if display has <code>767px</code> width and lower\n</Responsive>\n<Responsive as={Segment} maxWidth={2569}>\n- Visible only if display has <code>2569px</code> width\n+ Visible only if display has <code>2569px</code> width and lower\n</Responsive>\n</Segment.Group>\n)\n",
        "date": "02.01.2019 12:34:44",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "docs: add scss language to responsive code blocks",
        "sim_diff": "diff --git a/www/src/pages/foundations/responsive.jsx b/www/src/pages/foundations/responsive.jsx @@ -59,11 +59,15 @@ const Responsive = () => {\n<p>\nExample when the screen is narrower than <code>md</code> breakpoint.\n</p>\n- <CodeBlock>{'@include media-breakpoint-down(map-get($grid-breakpoints, \\'md\\')) { // styles here }'}</CodeBlock>\n+ <CodeBlock className=\"language-scss\">\n+ {'@include media-breakpoint-down(map-get($grid-breakpoints, \\'md\\')) { // styles here }'}\n+ </CodeBlock>\n<p>\nExample when the screen is wider than <code>lg</code> breakpoint.\n</p>\n- <CodeBlock>{'@include media-breakpoint-up(map-get($grid-breakpoints, \\'lg\\')) { // styles here }'}</CodeBlock>\n+ <CodeBlock className=\"language-scss\">\n+ {'@include media-breakpoint-up(map-get($grid-breakpoints, \\'lg\\')) { // styles here }'}\n+ </CodeBlock>\n</Container>\n</Layout>\n);\n",
        "chatgpt_rag": "docs: update ResponsiveExampleMaxWidth to show content for display width of 2569px and lower"
    },
    {
        "msg": "docs(readme): Add Netflix EDX as a user",
        "diff": "diff --git a/README.md b/README.md @@ -68,6 +68,7 @@ Here are some helpful links:\nThese great products are built on Semantic UI React. Add yours [here][22].\n+- Netflix's Edge Developer Experience team's numerous [internal apps](https://github.com/Semantic-Org/Semantic-UI-React/issues/1604)\n- http://stoplight.io\n- https://roadmap.space\n- https://edabit.com\n",
        "date": "21.04.2017 13:39:08",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "docs: add react template Varsarr",
        "sim_diff": "diff --git a/README.md b/README.md @@ -165,6 +165,7 @@ Use the \"Table of Contents\" menu on the top-left corner to explore the list.\n- [VRTTV](https://github.com/Drumpy/vrttv-boilerplate) - React + TypeScript + TailwindCSS + ESLint + Prettier + Husky + Conventional Commits + Gitmoji + GitHub Actions + Vercel Deploy.\n- [React Starter Kit](https://github.com/kriasoft/react-starter-kit) - Jamstack, React, React Router, Material UI, Firebase Auth, TypeScript, ESLint, Prettier, Jest, GitHub Actions.\n- [vite-mern-template](https://github.com/apicgg/vite-mern-template) - React 18 + TypeScript + Vite + Redux Toolkit + ESLint + React Router DOM + Axios + React Icons + React Toastify + Express + Mongoose.\n+- [Varsarr](https://github.com/altmshfkgudtjr/varsarr) - React, Typescript, Styled-Components, Recoil, React-Query, Axios, Absolute imports.\n#### Svelte\n",
        "chatgpt_rag": "docs: add links to internal apps by Netflix's Edge Developer Experience team"
    },
    {
        "msg": "docs(Collapse): make example more clear\n`isOpen={collapse}` is a contradiction, because if `collapse` is `true` then it's not collapsed and if it's `false` it is collapsed.",
        "diff": "diff --git a/docs/lib/examples/Collapse.js b/docs/lib/examples/Collapse.js @@ -2,14 +2,14 @@ import React, { useState } from 'react';\nimport { Collapse, Button, CardBody, Card } from 'reactstrap';\nconst Example = (props) => {\n- const [collapse, setCollapse] = useState(false);\n+ const [isOpen, setIsOpen] = useState(false);\n- const toggle = () => setCollapse(!collapse);\n+ const toggle = () => setIsOpen(!isOpen);\nreturn (\n<div>\n<Button color=\"primary\" onClick={toggle} style={{ marginBottom: '1rem' }}>Toggle</Button>\n- <Collapse isOpen={collapse}>\n+ <Collapse isOpen={isOpen}>\n<Card>\n<CardBody>\nAnim pariatur cliche reprehenderit,\n",
        "date": "01.11.2019 17:02:09",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "sim_msg": "fix: onToggle send the new state to callback instead of dirty state",
        "sim_diff": "diff --git a/src/Collapsible/CollapsibleAdvanced.jsx b/src/Collapsible/CollapsibleAdvanced.jsx @@ -31,6 +31,9 @@ class CollapsibleAdvanced extends React.Component {\nif (this.props.onOpen) {\nthis.props.onOpen();\n}\n+ if (this.props.onToggle) {\n+ this.props.onToggle(true);\n+ }\n}\nclose = () => {\n@@ -39,6 +42,9 @@ class CollapsibleAdvanced extends React.Component {\nif (this.props.onClose) {\nthis.props.onClose();\n}\n+ if (this.props.onToggle) {\n+ this.props.onToggle(false);\n+ }\n}\ntoggle = () => {\n@@ -47,10 +53,6 @@ class CollapsibleAdvanced extends React.Component {\n} else {\nthis.open();\n}\n-\n- if (this.props.onToggle) {\n- this.props.onToggle(this.state.isOpen);\n- }\n}\nrender() {\n",
        "chatgpt_rag": "refactor: Change variable names to be more descriptive in Collapse component"
    },
    {
        "msg": "docs: README Grammar\n`less` is used for singular mass nouns\n`fewer` when discussing countable things",
        "diff": "diff --git a/README.md b/README.md @@ -347,9 +347,9 @@ The answer is simple, but possibly frustrating. I'm not saying (how I pronounce\n## Design principles\n-- Less flags is better\n+- Fewer flags is better\n- Works across all platforms\n-- Less features\n+- Fewer features\n- Let individuals build on top of nodemon\n- Offer all CLI functionality as an API\n- Contributions must have and pass tests\n",
        "date": "03.09.2019 11:53:51",
        "repo": "remy/nodemon",
        "type": "docs",
        "sim_msg": "docs: Node.js 14 requirement",
        "sim_diff": "diff --git a/README.md b/README.md @@ -63,7 +63,7 @@ Sounds good for you? Then let's get started!\n### Prerequisites\n-- [Node.js](https://nodejs.org/) >= 10\n+- [Node.js](https://nodejs.org/) >= 14\n- npm >= 5\n- [Python](https://www.python.org/downloads/) >= 3\n- [Pipenv](https://docs.pipenv.org)\n",
        "chatgpt_rag": "docs: Update design principles for better readability"
    },
    {
        "msg": "docs: fixed typo in accessibility.mdx",
        "diff": "diff --git a/packages/chakra-ui-docs/docs/accessibility.mdx b/packages/chakra-ui-docs/docs/accessibility.mdx @@ -5,7 +5,7 @@ heavy-lifting for you in order to allow you to focus on building your applicati\nAll authored components are compliant with the WAI-ARIA standards for authored components.\n-We've written the time to write summarized description of the accessibility support for\n+We've taken the time to write summarized description of the accessibility support for\nall authored components in @chakra-ui/vue. We called this document an accessibility report\nand can be found in the `accessibility.md` file in the respective component's source directory.\n",
        "date": "08.05.2020 22:36:52",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "sim_msg": "docs(ui5-shellbar): document accessibilityRoles API",
        "sim_diff": "diff --git a/docs/2-advanced/07-accessibility.md b/docs/2-advanced/07-accessibility.md @@ -67,13 +67,13 @@ The mapping of the accessibility APIs to ARIA attributes is described in the fol\n| UI5 Web Components Property | HTML attribute | Description |\n-| --------------------------------------------- | --------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n+| --------------------------- | ------------------------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `accessibleName` | `aria-label` | Defines the text alternative of the component. If not provided, a default text alternative is set, if present. |\n| `accessibleNameRef` | `aria-label` | Alternative for `aria-labelledby`. Receives ID (or many IDs) of the elements that serve as labels of the component. Those labels are passed as a concatenated string to the `aria-label` attribute. |\n| `accessibleRole` | `role` | Sets the accessible aria role of the component. |\n| `accessibilityTexts` | `aria-label` | An object of strings that define several additional accessibility texts for further customization. |\n| `accessibilityAttributes` | `aria-expanded`, `aria-haspopup`, `aria-controls` | An object of strings that defines several additional accessibility attribute values for customization depending on the use case. |\n-| `accessibilityRoles` (`FlexibleColumnLayout`) | `role` | An object of strings that define several additional accessibility roles for further customization. |\n+| `accessibilityRoles` | `role` | An object of strings that define several additional accessibility roles for further customization. |\n| `required` | `aria-required` | Defines whether the component is required. |\n| `readonly` | `aria-readonly` | Defines whether the component is read-only. |\n| `disabled` | `aria-disabled` | Defines whether the component is disabled. |\n@@ -226,6 +226,10 @@ Results in the shadow DOM as:\n</div>\n```\n+The `accessibilityRoles` property is currently supported in:\n+* [FlexibleColumnLayout](https://sap.github.io/ui5-webcomponents/playground/components/FlexibleColumnLayout)\n+* [ShellBar](https://sap.github.io/ui5-webcomponents/playground/components/ShellBar)\n+\n---\n### accessibleRole\n",
        "chatgpt_rag": "docs(chakra-ui): update accessibility support documentation in accessibility.mdx file"
    },
    {
        "msg": "docs: lint: add description",
        "diff": "diff --git a/packages/eslint/README.md b/packages/eslint/README.md @@ -145,7 +145,9 @@ module.exports.rules = {\n};\n```\n-### `lint(code, {fix, plugins})`\n+### `lint(source, {fix, plugins})`\n+\n+When you need to run **ESLint** with one plugin (*rule*), just use `lint` it will do the thing.\n```js\nconst lint = require('@putout/eslint/lint');\n",
        "date": "29.08.2022 20:49:33",
        "repo": "coderaiser/putout",
        "type": "docs",
        "sim_msg": "ci(eslint): disable no-undef in .ts files",
        "sim_diff": "diff --git a/.eslintrc.cjs b/.eslintrc.cjs @@ -92,6 +92,13 @@ module.exports = {\n'@jessie.js/no-nested-await': 'warn',\n},\n},\n+ {\n+ files: ['*.ts'],\n+ rules: {\n+ // TS has this covered and eslint gets it wrong\n+ 'no-undef': 'off',\n+ },\n+ },\n{\n// disable type-aware linting in HTML\nfiles: ['*.html'],\n",
        "chatgpt_rag": "docs(eslint): update lint function parameter name in README.md"
    },
    {
        "msg": "docs: trying a new position\nWill track over the next 30-60 days.",
        "diff": "diff --git a/README.md b/README.md @@ -11,6 +11,8 @@ nodemon does **not** require *any* changes to your code or method of development\n[![NPM version](https://badge.fury.io/js/nodemon.svg)](https://npmjs.org/package/nodemon)\n[![Travis Status](https://travis-ci.org/remy/nodemon.svg?branch=master)](https://travis-ci.org/remy/nodemon)\n+<a href=\"https://app.codesponsor.io/link/wnz2te8CdfKZ8wMjGUpi8EZG/remy/nodemon\" rel=\"nofollow\" target=\"_blank\"><img src=\"https://app.codesponsor.io/embed/wnz2te8CdfKZ8wMjGUpi8EZG/remy/nodemon.svg\" style=\"width: 888px; height: 68px;\" alt=\"Sponsor\" /></a>\n+\n# Installation\nEither through cloning with git or by using [npm](http://npmjs.org) (the recommended way):\n@@ -289,5 +291,3 @@ See the [FAQ](https://github.com/remy/nodemon/blob/master/faq.md) and please add\n# License\nMIT [http://rem.mit-license.org](http://rem.mit-license.org)\n-\n-<a href=\"https://app.codesponsor.io/link/wnz2te8CdfKZ8wMjGUpi8EZG/remy/nodemon\" rel=\"nofollow\" target=\"_blank\"><img src=\"https://app.codesponsor.io/embed/wnz2te8CdfKZ8wMjGUpi8EZG/remy/nodemon.svg\" style=\"width: 888px; height: 68px;\" alt=\"Sponsor\" /></a>\n",
        "date": "03.11.2017 16:35:53",
        "repo": "remy/nodemon",
        "type": "docs",
        "sim_msg": "docs(readme): replace travis badge with gh action'",
        "sim_diff": "diff --git a/README.md b/README.md [![NPM version](https://badge.fury.io/js/hexo.svg)](https://www.npmjs.com/package/hexo)\n![Required Node version](https://img.shields.io/node/v/hexo)\n-[![Build Status](https://travis-ci.com/hexojs/hexo.svg?branch=master)](https://travis-ci.com/hexojs/hexo)\n+[![Build Status](https://github.com/hexojs/hexo/workflows/Tester/badge.svg)](https://github.com/hexojs/hexo/actions?query=workflow%3ATester)\n[![dependencies Status](https://david-dm.org/hexojs/hexo/status.svg)](https://david-dm.org/hexojs/hexo)\n[![devDependencies Status](https://david-dm.org/hexojs/hexo/dev-status.svg)](https://david-dm.org/hexojs/hexo?type=dev)\n[![Coverage Status](https://coveralls.io/repos/hexojs/hexo/badge.svg?branch=master)](https://coveralls.io/r/hexojs/hexo?branch=master)\n",
        "chatgpt_rag": "docs(readme): remove redundant sponsor badge from README"
    },
    {
        "msg": "docs(guide/introduction): fix typo",
        "diff": "diff --git a/docs/guide/introduction/README.md b/docs/guide/introduction/README.md @@ -23,4 +23,4 @@ The module adds a plugin to your Nuxt.js application that handles the initializa\n## Disclaimer\n-This module is meant for easy and quick set-up of Firebase in a Nuxt project. Due to the nature of this module, it is possibly not optimal for websites that need to be super performant and/or SEO friendly, since the module adds the Firebase services to the global scope. If you wan't your website to be more performant, you'd probably be better off by importing the services only in the files where you need them (i.e. by NOT using this module). That being said, the difference might be marginal depending on your project.\n+This module is meant for easy and quick set-up of Firebase in a Nuxt project. Due to the nature of this module, it is possibly not optimal for websites that need to be super performant and/or SEO friendly, since the module adds the Firebase services to the global scope. If you want your website to be more performant, you'd probably be better off by importing the services only in the files where you need them (i.e. by NOT using this module). That being said, the difference might be marginal depending on your project.\n",
        "date": "03.05.2020 23:52:37",
        "repo": "nuxt-community/firebase-module",
        "type": "docs",
        "sim_msg": "chore(nuxt plugin): minor updates",
        "sim_diff": "diff --git a/nuxt/index.js b/nuxt/index.js @@ -19,8 +19,8 @@ module.exports = function nuxtBootstrapVue(moduleOptions = {}) {\n}\n// Ensure we have arrays\n- this.options.css = this.options.css || []\n- this.options.build.transpile = this.options.build.transpile || []\n+ this.options.css = [].concat(this.options.css || [])\n+ this.options.build.transpile = [].concat(this.options.build.transpile || [])\nconst bootstrapVueCSS = pickFirst(\noptions.bootstrapVueCSS,\n@@ -62,6 +62,7 @@ module.exports = function nuxtBootstrapVue(moduleOptions = {}) {\ntemplateOptions[type] = bvPlugins\n// Normalize plugin name to `${Name}Plugin` (component) or `VB${Name}Plugin` (directive)\n+ // Required for backwards compatability with old plugin import names\n.map(plugin => {\nplugin = type === 'directivePlugins' && !/^VB/.test(plugin) ? `VB${plugin}` : plugin\nplugin = /Plugin$/.test(plugin) ? plugin : `${plugin}Plugin`\n",
        "chatgpt_rag": "fix(docs): correct typo in README.md"
    },
    {
        "msg": "docs(README): add React-Semantic.UI-Starter",
        "diff": "diff --git a/README.md b/README.md @@ -44,6 +44,9 @@ See the [Documentation][2] for an introduction, usage information, and extensive\nThis is a listing of example projects and guides that will help you integrate Semantic UI React into your new or existing projects.\n+### [react-semantic.ui-starter][102]\n+Production-ready, performance-first, optimized, robust, fully-featured boilerplate/example for your new Progressive Web App.\n+\n### [semantic-ui-react-todos][100]\nThis example modifies the well-known [react-redux Todo List][101] to use Semantic UI components. There is also a write-up on the process in the project README.\n@@ -206,3 +209,4 @@ Big thanks to our [contributors][20], especially:\n<!-- Examples -->\n[100]: https://github.com/wyc/semantic-ui-react-todos\n[101]: https://github.com/reactjs/redux/tree/master/examples/todos\n+[102]: https://github.com/Metnew/react-semantic.ui-starter\n",
        "date": "28.04.2017 08:06:26",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "docs(readme): add deprecation notice\n<3 </3",
        "sim_diff": "diff --git a/README.md b/README.md +# Deprecation Warning\n+\n+This project was started at the advent of the Redux ecosystem, and was intended to help users get up and running quickly. Since then, tooling and best practices have evolved tremendously. In order to get the most modern experience possible, I recommend checking out something like [create-react-app](https://github.com/facebookincubator/create-react-app) which is supported by many core React and Redux developers.\n+\n+You are welcome to use this project if it is a better fit for your needs, but if you are brand new to the ecosystem I highly recommend checking out something that has received more recent updates.\n+\n+Thank you to everyone who made this project possible over the past year(s).\n+\n# React Redux Starter Kit\n[![Build Status](https://travis-ci.org/davezuko/react-redux-starter-kit.svg?branch=master)](https://travis-ci.org/davezuko/react-redux-starter-kit?branch=master)\n",
        "chatgpt_rag": "docs(readme): add link to react-semantic.ui-starter project in example projects section"
    },
    {
        "msg": "docs: update contributing with workflow",
        "diff": "diff --git a/.github/CONTRIBUTING.md b/.github/CONTRIBUTING.md @@ -56,10 +56,62 @@ immediately in all the examples. `add-dependencies` can be used to just add pack\n- `yarn test:packages`: Runs tests for packages\n- `yarn test:e2e`: Runs end-to-end tests\n- `yarn build-docs`: Builds docs/ updates doc TOC\n-- `yarn bootstrap-examples`: Run `yarn` with specific examples as workspaces. Automatically symlinks inter-dependent modules. Run `yarn restrap` in the example to reinstall.\n-- `yarn new-example`: Creates a new example from another example. `yarn new-example basic new-example`.\n-- `yarn publish-all-stable`: Does a a stable release\n- `yarn publish-all-canary`: Does a `razzle@canary` release.\n+- `yarn publish-all-stable`: Does a a stable release(uses the npm version released of the packages)\n+- `yarn new-example`: Creates a new example from another example. `yarn new-example basic new-example`.\n+- `yarn bootstrap-examples`: Run `yarn` with specific examples as workspaces. Automatically symlinks inter-dependent modules. Run `yarn restrap` in the example to reinstall.\n+- `yarn test:examples:simple`: Runs tests for all simple examples (uses the npm version released of the packages)\n+- `yarn test:examples:complex`: Runs tests for all complex examples (uses the npm version released of the packages)\n+- `yarn test:examples`: Runs tests for all examples (uses the npm version released of the packages)\n+\n+### Workflow for working on razzle core with examples\n+\n+```bash\n+\n+git clone https://github.com/<YOUR_GITHUB_USERNAME>/razzle.git\n+cd razzle\n+git checkout <my-branch>\n+NODE_ENV=development yarn install ---ignore-engines\n+\n+sudo npm install add-dependencies -g\n+\n+pwd\n+# /home/oyvind/Documents/GitHub/razzle/\n+\n+yarn install\n+\n+# to make sure tests pass\n+yarn test --runInBand\n+\n+# to add a new example\n+yarn new-example existingexample with-somefeature\n+\n+# to work on a example\n+cd examples/basic\n+example=\"$(basename $PWD)\"\n+pushd ../..\n+\n+# if it is a example with webpack5 you need to do\n+yarn add -W webpack@5.16.0\n+\n+# switch back to webpack4 later to work with webpack4\n+yarn add -W webpack@4.46.0\n+\n+# then\n+yarn bootstrap-examples $example\n+popd\n+yarn build\n+\n+# if you want to add dependencies to the example\n+add-dependencies somedependency\n+yarn restrap\n+\n+# if you make changes to startserver plugin\n+pushd ../..\n+cd packages/razzle-start-server-webpack-plugin\n+yarn build\n+popd\n+```\n### Updating your fork\n",
        "date": "13.02.2021 19:27:59",
        "repo": "jaredpalmer/razzle",
        "type": "docs",
        "sim_msg": "docs(contributing): adds prebuild instructions",
        "sim_diff": "diff --git a/CONTRIBUTING.md b/CONTRIBUTING.md @@ -42,6 +42,13 @@ npm link\nnpm link webpack-cli\n```\n+* Bootstrap all the submodules before building for the first time\n+\n+```bash\n+npm run boostrap\n+npm run build\n+```\n+\n* Run all the tests with:\n- `npm run test`\n@@ -65,6 +72,13 @@ yarn link\nyarn link webpack-cli\n```\n+* Bootstrap all the submodules before building for the first time\n+\n+```bash\n+yarn boostrap\n+yarn build\n+```\n+\n* Run all the tests with:\n- `yarn test`\n",
        "chatgpt_rag": "docs(contributing): updates workflow for working on razzle core with examples"
    },
    {
        "msg": "docs: add important note about ignore rules\nFixes",
        "diff": "diff --git a/README.md b/README.md @@ -86,7 +86,7 @@ A config file can take any of the command line arguments as JSON key values, for\n```json\n{\n\"verbose\": true,\n- \"ignore\": [\"*.test.js\", \"fixtures/*\"],\n+ \"ignore\": [\"*.test.js\", \"**/fixtures/**\"],\n\"execMap\": {\n\"rb\": \"ruby\",\n\"pde\": \"processing --sketch={{pwd}} --run\"\n@@ -109,7 +109,7 @@ Specify the config in the same format as you would for a config file but under `\n\"homepage\": \"http://nodemon.io\",\n\"...\": \"... other standard package.json values\",\n\"nodemonConfig\": {\n- \"ignore\": [\"test/*\", \"docs/*\"],\n+ \"ignore\": [\"**/test/**\", \"**/docs/**\"],\n\"delay\": 2500\n}\n}\n@@ -203,6 +203,8 @@ Patterns can also be ignored (but be sure to quote the arguments):\nnodemon --ignore 'lib/*.js'\n```\n+**Important** the ignore rules are patterns matched to the full absolute path, and this determines how many files are monitored. If using a wild card glob pattern, it needs to be used as `**` or omitted entirely. For example, `nodemon --ignore '**/test/**'` will work, whereas `--ignore '*/test/*'` will not.\n+\nNote that by default, nodemon will ignore the `.git`, `node_modules`, `bower_components`, `.nyc_output`, `coverage` and `.sass-cache` directories and *add* your ignored patterns to the list. If you want to indeed watch a directory like `node_modules`, you need to [override the underlying default ignore rules](https://github.com/remy/nodemon/blob/master/faq.md#overriding-the-underlying-default-ignore-rules).\n## Application isn't restarting\n",
        "date": "16.08.2022 09:20:43",
        "repo": "remy/nodemon",
        "type": "docs",
        "sim_msg": "docs: Update references to configPath\nUpdates the README references of `--configPath` to `--config` as the correct way to set a custom config file.",
        "sim_diff": "diff --git a/README.md b/README.md @@ -532,7 +532,7 @@ JSON-based configs cramping your style? Well, here's some good news -- BackstopJ\nTo use a js module based config file, explicitly specify your config filepath when running a command. e.g.\n```sh\n-$ backstop test --configPath=backstopTests/someTest.js\n+$ backstop test --config=backstopTests/someTest.js\n```\n_See the next section for more info on setting the config file path._\n@@ -541,23 +541,23 @@ Be sure to export your config object as a node module.\n### Setting the config file path\n-Often, users have multiple config files to test various different scenarios or even different projects. By default, BackstopJS looks for `backstop.json` in your project's root directory (in parallel with your `node_modules` directory). You can override this by passing a `--configPath` argument when running any command. e.g.\n+Often, users have multiple config files to test various different scenarios or even different projects. By default, BackstopJS looks for `backstop.json` in your project's root directory (in parallel with your `node_modules` directory). You can override this by passing a `--config` argument when running any command. e.g.\n```sh\n# example 1: run reference generation with absolute path\n-$ backstop reference --configPath=~/backstopTests/someTest.json\n+$ backstop reference --config=~/backstopTests/someTest.json\n# Will capture reference files using scenarios from someTest.json inside backstopTests inside your home folder.\n# example 2: run test with absolute path\n-$ backstop test --configPath=~/backstopTests/someTest.json\n+$ backstop test --config=~/backstopTests/someTest.json\n# Will run tests using scenarios from `someTest.json` inside `backstopTests` inside your home folder.\n# example 3: run test with relative path\n-$ backstop test --configPath=backstopTests/someTest.json\n+$ backstop test --config=backstopTests/someTest.json\n# Will run tests using scenarios from `someTest.json` inside `backstopTests` inside your project root folder.\n# example 4: run test with relative path and JS module\n-$ backstop test --configPath=backstopTests/someTest.js\n+$ backstop test --config=backstopTests/someTest.js\n# You can also specify your config parameters as a node module. This will import `someTest.js` from `backstopTests` inside your project root folder.\n```\n",
        "chatgpt_rag": "docs: Update ignore patterns in config file\nUpdated the README to reflect the correct ignore patterns in the config file, using `**` for wild card glob patterns and providing examples for clarity."
    },
    {
        "msg": "docs: how to watch .env files\n[skip ci]",
        "diff": "diff --git a/faq.md b/faq.md @@ -18,6 +18,18 @@ In your `nodemon.json` (or in your `package.json`) you can include the follow ev\n}\n```\n+# nodemon doesn't restart on .env change\n+\n+This is an edge case with how nodemon watches files. This is because nodemon doesn't know if `.env` is a hidden file with no extension or a `*.env` without a filename.\n+\n+Nonetheless, to trigger a change on `.env` (or similar files like `.bash_profile`), you need to explicitly tell nodemon to watch the file.\n+\n+However, now nodemon will *only* watch the `.env` file, so you need to add to what nodemon is watching, i.e. tell nodemon to _also_ watch the current working directory:\n+\n+```bash\n+$ nodemon --watch .env --watch app app/index.js\n+```\n+\n# nodemon doesn't work with my REPL\nCreate an nodemon.json file with the setting:\n",
        "date": "28.11.2018 09:31:44",
        "repo": "remy/nodemon",
        "type": "docs",
        "sim_msg": "fix: patch for infinite loop with panic override",
        "sim_diff": "diff --git a/packages/stack/watcher/src/index.js b/packages/stack/watcher/src/index.js @@ -192,7 +192,10 @@ class Watcher {\nthis.logger.trace(files);\nlet configWatcher = chokidar.watch(files, {\n- ignored: /[\\/\\\\]\\.|tmp_/, persistent: true, ignoreInitial: true, followSymlinks: true\n+ // FIXME this should be handled by the nim-compiler plugin somehow\n+ // panicoverride.nim is a file added by nimplay when compiling but then removed\n+ // If we don't ignore that file, we start an inifite loop of compilation\n+ ignored: /[\\/\\\\]\\.|tmp_|panicoverride\\.nim/, persistent: true, ignoreInitial: true, followSymlinks: true\n});\nthis.fileWatchers.push(configWatcher);\n",
        "chatgpt_rag": "feat: add explanation on how to make nodemon watch .env file changes"
    },
    {
        "msg": "docs(messaging): added messaing object example for collectionEnabled",
        "diff": "diff --git a/docs/guide/options/README.md b/docs/guide/options/README.md @@ -608,6 +608,12 @@ Initializes Firebase Analytics and makes it available via `$fireAnalytics` and `\n```js\nanalytics: true\n+\n+// or\n+\n+messaging: {\n+ collectionEnabled: true, // default\n+}\n```\n#### collectionEnabled\n",
        "date": "29.06.2020 23:49:57",
        "repo": "nuxt-community/firebase-module",
        "type": "docs",
        "sim_msg": "docs: add disable storage example",
        "sim_diff": "diff --git a/examples/demo/src/utils/analytics/example-4.js b/examples/demo/src/utils/analytics/example-4.js @@ -25,6 +25,17 @@ const pluginTwo = {\n}\n}\n+/* Disable cookies/localstorage for all storage calls */\n+const disableStorage = {\n+ name: 'disable-storage',\n+ setItemStart: ({ payload, instance }) => {\n+ return {\n+ ...payload,\n+ ...{ options: { storage: 'global' } }\n+ }\n+ }\n+}\n+\n/* initialize analytics and load plugins */\nconst analytics = Analytics({\n@@ -32,7 +43,8 @@ const analytics = Analytics({\napp: 'yolo',\nplugins: [\npluginOne,\n- pluginTwo\n+ pluginTwo,\n+ disableStorage\n]\n})\n",
        "chatgpt_rag": "docs: update README.md with messaging collectionEnabled option usage"
    },
    {
        "msg": "docs: no -- needed here",
        "diff": "diff --git a/website/pages/getting-started.mdx b/website/pages/getting-started.mdx @@ -65,6 +65,6 @@ If your application is running, and you need to manually restart your server, yo\n## Debugging with Inspector\n-- `npm start -- --inspect=[host:port]` This will start the node server and enable the inspector agent. The `=[host:port]` is optional and defaults to `=127.0.0.1:9229`. For more information, see [this](https://nodejs.org/en/docs/guides/debugging-getting-started/).\n+- `npm start --inspect=[host:port]` This will start the node server and enable the inspector agent. The `=[host:port]` is optional and defaults to `=127.0.0.1:9229`. For more information, see [this](https://nodejs.org/en/docs/guides/debugging-getting-started/).\n-- `npm start -- --inspect-brk=[host:port]` This is the same as `--inspect`, but will also break before user code starts. (to give a debugger time to attach before early code runs) For more information, see [this](https://nodejs.org/en/docs/guides/debugging-getting-started/).\n+- `npm start --inspect-brk=[host:port]` This is the same as `--inspect`, but will also break before user code starts. (to give a debugger time to attach before early code runs) For more information, see [this](https://nodejs.org/en/docs/guides/debugging-getting-started/).\n",
        "date": "22.09.2020 22:05:44",
        "repo": "jaredpalmer/razzle",
        "type": "docs",
        "sim_msg": "chore(server/production-start): Modernize code",
        "sim_diff": "diff --git a/server/production-start.js b/server/production-start.js // this ensures node understands the future\nrequire('babel-register');\n+const _ = require('lodash');\n-var startTime = Date.now();\n-var timeoutHandler;\n+const startTime = Date.now();\n// this is where server starts booting up\n-var app = require('./server');\n+const app = require('./server');\n-console.log('waiting for db to connect');\n+let timeoutHandler;\n+let killTime = 15;\n-\n-var onConnect = function() {\n- console.log('db connected in %s ms', Date.now() - startTime);\n+const onConnect = _.once(() => {\n+ console.log('db connected in: %s', Date.now() - startTime);\nif (timeoutHandler) {\nclearTimeout(timeoutHandler);\n}\napp.start();\n-};\n-\n-timeoutHandler = setTimeout(function() {\n- var message =\n- 'db did not connect after ' +\n- (Date.now() - startTime) +\n- ' ms --- crashing hard';\n+});\n- console.log(message);\n+timeoutHandler = setTimeout(() => {\n+ const message = `db did not connect after ${killTime}s -- crashing hard`;\n// purposely shutdown server\n// pm2 should restart this in production\nthrow new Error(message);\n-}, 15000);\n+}, killTime * 1000);\napp.dataSources.db.on('connected', onConnect);\n",
        "chatgpt_rag": "chore(website): Update debugging commands in getting-started.mdx"
    },
    {
        "msg": "docs(plugin-typescript): add link to example",
        "diff": "diff --git a/packages/razzle-plugin-typescript/README.md b/packages/razzle-plugin-typescript/README.md @@ -22,6 +22,8 @@ module.exports = {\n};\n```\n+See full configuration in the [typescript example project](https://github.com/jaredpalmer/razzle/tree/master/examples/with-typescript).\n+\n### With custom options:\n```js\n",
        "date": "24.08.2020 11:54:53",
        "repo": "jaredpalmer/razzle",
        "type": "docs",
        "sim_msg": "style: auto reformat of package.json",
        "sim_diff": "diff --git a/package.json b/package.json \"extends\": [\n\"eslint:recommended\"\n],\n- \"overrides\": [{\n+ \"overrides\": [\n+ {\n\"files\": [\n\"**/*.{ts,tsx}\"\n],\n\"@typescript-eslint/no-unused-vars\": \"off\",\n\"@typescript-eslint/explicit-module-boundary-types\": \"off\"\n}\n- }],\n+ }\n+ ],\n\"plugins\": [\n\"mocha-no-only\"\n],\n",
        "chatgpt_rag": "docs: update README with TypeScript example project configuration and custom options"
    },
    {
        "msg": "docs(readme): add Bandwidth Hero to built with",
        "diff": "diff --git a/README.md b/README.md @@ -69,6 +69,7 @@ These great products are built on Semantic UI React. Add yours [here][22].\n- https://build.games\n- https://platform.forecastcycles.com\n- https://www.findlectures.com\n+- https://github.com/ayastreb/bandwidth-hero\n## Example Projects\n",
        "date": "05.11.2017 08:37:58",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "docs: fix csr heading dupes",
        "sim_diff": "diff --git a/website/lib/components/Layout.js b/website/lib/components/Layout.js @@ -4,7 +4,7 @@ import cn from 'classnames';\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport {useRouter} from 'next/router';\n-import {useMemo, useRef, useState} from 'react';\n+import {useRef, useState} from 'react';\nimport {ExternalLink, Menu} from 'react-feather';\nimport useIsomorphicLayoutEffect from 'use-isomorphic-layout-effect';\n@@ -296,7 +296,7 @@ const slugify = (str) =>\n.replace(/[.:'\"<>!@#$%^&*()[\\]]/g, '');\nconst linkify =\n- (Tag, headings) =>\n+ (Tag, headings, pathname) =>\n({children, ...props}) => {\nconst url = slugify(\ntypeof children !== 'string'\n@@ -304,12 +304,17 @@ const linkify =\n: children\n);\n- const count = headings.filter(\n- (value) => value === url\n- ).length;\n- const id = count === 0 ? url : `${url}-${count}`;\n+ if (\n+ headings.some((heading) => heading.pathname !== pathname)\n+ ) {\n+ // Reset the headings store.\n+ headings.length = 0;\n+ }\n- headings.push(url);\n+ const dupeCount = headings.filter(\n+ ({url: u}) => u === url\n+ ).length;\n+ const id = dupeCount === 0 ? url : `${url}-${dupeCount}`;\nreturn (\n<Tag {...props} id={id}>\n@@ -355,6 +360,8 @@ const components = {\n},\n};\n+const initialHeadings = [];\n+\nexport default function Layout({children}) {\nconst {pathname, events} = useRouter();\nconst index = nav.findIndex(({url}) => url === pathname) ?? 0;\n@@ -362,7 +369,14 @@ export default function Layout({children}) {\nconst navRef = useRef();\nconst activeLinkRef = useRef();\nconst [hash, setHash] = useState(null);\n- const [headings, setHeadings] = useState([]);\n+ const [computedComponents, setComputedComponents] = useState({\n+ ...components,\n+ h2: linkify('h2', initialHeadings, pathname),\n+ h3: linkify('h3', initialHeadings, pathname),\n+ h4: linkify('h4', initialHeadings, pathname),\n+ h5: linkify('h5', initialHeadings, pathname),\n+ h6: linkify('h6', initialHeadings, pathname),\n+ });\nconst displayNavigation = nav[index] != null;\n@@ -374,6 +388,15 @@ export default function Layout({children}) {\nsetHash(location.hash);\nfunction onRouteChangeComplete() {\n+ const headings = [];\n+ setComputedComponents({\n+ ...components,\n+ h2: linkify('h2', headings, pathname),\n+ h3: linkify('h3', headings, pathname),\n+ h4: linkify('h4', headings, pathname),\n+ h5: linkify('h5', headings, pathname),\n+ h6: linkify('h6', headings, pathname),\n+ });\nsetHash(null);\ndocument.querySelector('#focus-root').focus();\n}\n@@ -383,7 +406,7 @@ export default function Layout({children}) {\nreturn () => {\nevents.off('routeChangeComplete', onRouteChangeComplete);\n};\n- }, [events]);\n+ }, [events, pathname]);\nconst articleRef = useRef();\nconst [anchors, setAnchors] = useState([]);\n@@ -402,10 +425,6 @@ export default function Layout({children}) {\nsetAnchors(localAnchors);\nsetNavOpen(false);\n-\n- return () => {\n- setHeadings([]);\n- };\n}, [pathname]);\nlet currentParentIndex = null;\n@@ -429,18 +448,6 @@ export default function Layout({children}) {\nnav.find(({url}) => url === pathname)?.title ?? 'Docs'\n} | Floating UI`;\n- const computedComponents = useMemo(\n- () => ({\n- ...components,\n- h2: linkify('h2', headings),\n- h3: linkify('h3', headings),\n- h4: linkify('h4', headings),\n- h5: linkify('h5', headings),\n- h6: linkify('h6', headings),\n- }),\n- [headings]\n- );\n-\nreturn (\n<MDXProvider components={computedComponents}>\n<Head>\n",
        "chatgpt_rag": "docs: add Bandwidth Hero to the list of great products built on Semantic UI React"
    },
    {
        "msg": "docs: delay option as number instead of string, in readme\n[skip ci]",
        "diff": "diff --git a/README.md b/README.md @@ -110,7 +110,7 @@ Specify the config in the same format as you would for a config file but under `\n\"...\": \"... other standard package.json values\",\n\"nodemonConfig\": {\n\"ignore\": [\"test/*\", \"docs/*\"],\n- \"delay\": \"2500\"\n+ \"delay\": 2500\n}\n}\n```\n@@ -247,7 +247,7 @@ If you are setting this value in `nodemon.json`, the value will always be interp\nnodemon --delay 2.5\n{\n- \"delay\": \"2500\"\n+ \"delay\": 2500\n}\n```\n",
        "date": "31.03.2021 11:39:58",
        "repo": "remy/nodemon",
        "type": "docs",
        "sim_msg": "feat(payment): add addresses",
        "sim_diff": "diff --git a/src/common/config.js b/src/common/config.js @@ -121,7 +121,7 @@ const dev = {\n},\nmatomoSite: 2,\nledgerAddress: '0x24512422cf6ad1c0c465cbf0bbd5155eaa3da634',\n- paymentSplitterAddress: ''\n+ paymentSplitterAddress: '0xb91FF8627f30494d27b91Aac1cB3c7465BE58fF5'\n};\nconst prod = {\n@@ -139,7 +139,7 @@ const prod = {\n},\nmatomoSite: 1,\nledgerAddress: '0x0cb853331293d689c95187190e09bb46cb4e533e',\n- paymentSplitterAddress: ''\n+ paymentSplitterAddress: '0xC3f1fbe8f4BE283426F913f0F2BE8329fC6BE041'\n};\nconst setupFilesPath = getSetupFilePath();\n",
        "chatgpt_rag": "chore(nodemon): update delay value to 2500"
    },
    {
        "msg": "docs(UncontrolledCollapse): include example",
        "diff": "diff --git a/docs/lib/Components/CollapsePage.js b/docs/lib/Components/CollapsePage.js @@ -5,12 +5,15 @@ import PageTitle from '../UI/PageTitle';\nimport SectionTitle from '../UI/SectionTitle';\nimport CollapseExample from '../examples/Collapse';\n+import UncontrolledCollapseExample from '../examples/CollapseUncontrolled';\nimport CollapseEventsExample from '../examples/CollapseEvents';\nconst CollapseExampleSource = require('!!raw!../examples/Collapse');\nconst CollapseEventsExampleSource = require('!!raw!../examples/CollapseEvents');\n+const UncontrolledCollapseExampleSource = require('!!raw!../examples/CollapseUncontrolled');\n+\nexport default class CollapsePage extends React.Component {\nrender() {\nreturn (\n@@ -60,6 +63,12 @@ export default class CollapsePage extends React.Component {\npass a <code>toggler</code> prop. The <code>toggler</code> prop is a string which will run\nquerySelectorAll to find dom elements which will trigger toggle.\n</p>\n+ <div className=\"docs-example\">\n+ <UncontrolledCollapseExample />\n+ </div>\n+ <pre>\n+ <PrismCode className=\"language-jsx\">{UncontrolledCollapseExampleSource}</PrismCode>\n+ </pre>\n</div>\n);\n}\n",
        "date": "14.05.2018 10:40:21",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "sim_msg": "refactor(collapsible/composed): format js with new rules",
        "sim_diff": "diff --git a/components/collapsible/composed/src/index.js b/components/collapsible/composed/src/index.js @@ -16,26 +16,34 @@ class CollapsibleComposed extends Component {\nconst {collapsed} = this.state\nconst collapseIcon = collapsed ? '+' : '-'\n- const itemClass = cx('sui-CollapsibleComposed-item',\n- { 'sui-CollapsibleComposed-item--inline': inline }\n- )\n- const togglerClass = cx('sui-CollapsibleComposed-toggler',\n- { 'sui-CollapsibleComposed-item--inline': inline }\n- )\n+ const itemClass = cx('sui-CollapsibleComposed-item', {\n+ 'sui-CollapsibleComposed-item--inline': inline\n+ })\n+ const togglerClass = cx('sui-CollapsibleComposed-toggler', {\n+ 'sui-CollapsibleComposed-item--inline': inline\n+ })\nconst itemsToToggle = (!collapsed && hiddenItems) || []\nconst totalItems = items.concat(itemsToToggle)\nconst displayItems = totalItems.map((item, index) => {\n- return <div className={itemClass} key={index}>{item}</div>\n+ return (\n+ <div className={itemClass} key={index}>\n+ {item}\n+ </div>\n+ )\n})\nreturn (\n- <div className='sui-CollapsibleComposed'>\n- <div className='sui-CollapsibleComposed-label'>{label}</div>\n- <div className='sui-CollapsibleComposed-content'>\n+ <div className=\"sui-CollapsibleComposed\">\n+ <div className=\"sui-CollapsibleComposed-label\">{label}</div>\n+ <div className=\"sui-CollapsibleComposed-content\">\n{displayItems}\n- {hiddenItems.length > 0 && <div className={togglerClass} onClick={() => this._toggle()}>{collapseIcon}</div>}\n+ {hiddenItems.length > 0 && (\n+ <div className={togglerClass} onClick={() => this._toggle()}>\n+ {collapseIcon}\n+ </div>\n+ )}\n</div>\n</div>\n)\n",
        "chatgpt_rag": "feat(docs): add UncontrolledCollapseExample to CollapsePage"
    },
    {
        "msg": "docs: better config modification",
        "diff": "diff --git a/website/pages/deployment-options/aws.md b/website/pages/deployment-options/aws.md @@ -12,17 +12,26 @@ module.exports = {\nbuildType: 'serverless'\n},\nmodifyPaths({\n- webpackObject,\n- options: {\n- razzleOptions,\n+ paths,\n+ }) {\n+ paths.prodAppServerIndexJs = path.join(paths.appSrc, 'index.prod');\n+ return paths;\n},\n+ modifyWebpackConfig({\n+ env: {\n+ target,\n+ dev,\n+ },\n+ webpackConfig,\npaths,\n}) {\n- if (process.env.NODE_ENV === 'production') {\n- paths.appServerIndexJs = path.join(paths.appSrc, 'index.prod');\n+ if (target === 'node') {\n+ if (!dev) {\n+ webpackConfig.entry.server = [paths.prodAppServerIndexJs];\n}\n- return paths;\n}\n+ return webpackConfig;\n+ },\n};\n```\n",
        "date": "25.01.2021 23:47:07",
        "repo": "jaredpalmer/razzle",
        "type": "docs",
        "sim_msg": "fix(otp-server): make subnet/security group fields optional\nre",
        "sim_diff": "diff --git a/lib/manager/util/deployment.js b/lib/manager/util/deployment.js @@ -164,15 +164,19 @@ export const EC2_INFO_FIELDS: Array<FormProps> = [\ntype: 'number',\nwidth: 4\n}, {\n- name: 'otpServers.$index.ec2Info.subnetId',\n- placeholder: 'e.g., subnet-1abcdef',\n+ name: 'otpServers.$index.ec2Info.targetGroupArn',\n+ placeholder: 'arn:aws:elasticloadbalancing:us-east-1:12345678:targetgroup/target-group-name/12345678abcd',\nrequired: true,\ntype: 'text',\nwidth: 12\n+ }, {\n+ name: 'otpServers.$index.ec2Info.subnetId',\n+ placeholder: 'e.g., subnet-1abcdef (defaults to ELB value)',\n+ type: 'text',\n+ width: 12\n}, {\nname: 'otpServers.$index.ec2Info.securityGroupId',\n- placeholder: 'sg-1abcdef1ghijkl',\n- required: true,\n+ placeholder: 'e.g., sg-1abcdef1ghijkl (defaults to ELB value)',\ntype: 'text',\nwidth: 12\n}, {\n@@ -187,12 +191,6 @@ export const EC2_INFO_FIELDS: Array<FormProps> = [\nrequired: true,\ntype: 'text',\nwidth: 12\n- }, {\n- name: 'otpServers.$index.ec2Info.targetGroupArn',\n- placeholder: 'arn:aws:elasticloadbalancing:us-east-1:12345678:targetgroup/target-group-name/12345678abcd',\n- required: true,\n- type: 'text',\n- width: 12\n}\n]\n",
        "chatgpt_rag": "feat(webpack): update webpack config for serverless deployment options"
    },
    {
        "msg": "docs(readme): add Sublime Fund to the built with list",
        "diff": "diff --git a/README.md b/README.md @@ -79,6 +79,7 @@ These great products are built on Semantic UI React. Add yours [here][22].\n- http://www.brewhousesolutions.com\n- https://www.lifebot.fr\n- https://www.stackforge.co\n+- https://sublimefund.org\n## Voice Your Opinion\n",
        "date": "06.07.2017 11:35:05",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "docs(readme): replace `react-dom-core` link with `react-property`",
        "sim_diff": "diff --git a/README.md b/README.md @@ -271,7 +271,7 @@ $ git push --follow-tags && npm publish\n- [Contributors](https://github.com/remarkablemark/html-react-parser/graphs/contributors)\n- [html-dom-parser](https://github.com/remarkablemark/html-dom-parser)\n-- [react-dom-core](https://github.com/remarkablemark/react-dom-core)\n+- [react-property](https://github.com/remarkablemark/react-dom-core/tree/master/packages/react-property)\n- [style-to-object](https://github.com/remarkablemark/style-to-object)\n## License\n",
        "chatgpt_rag": "docs(readme): add `sublimefund.org` to the list of great products built on Semantic UI React"
    },
    {
        "msg": "docs(MenuExampleHeaderVertical): fix onClick handler\nhandleItemClick = (e, { name }) => this.setState({ activeItem: name });",
        "diff": "diff --git a/docs/src/examples/collections/Menu/Content/MenuExampleHeaderVertical.js b/docs/src/examples/collections/Menu/Content/MenuExampleHeaderVertical.js @@ -3,7 +3,7 @@ import { Menu } from 'semantic-ui-react'\nexport default class MenuExampleHeaderVertical extends Component {\nstate = {}\n- handleItemClick = (name) => this.setState({ activeItem: name })\n+ handleItemClick = (e, { name }) => this.setState({ activeItem: name });\nrender() {\nconst { activeItem } = this.state\n",
        "date": "08.12.2019 23:22:16",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "docs(Search): add rtl doc",
        "sim_diff": "diff --git a/docs/search/demo/custom.md b/docs/search/demo/custom.md @@ -50,12 +50,12 @@ class App extends React.Component {\nrenderMenu() {\nconst menuData = this.state.menuData;\n- return (<Menu onSelect={this.onSelect.bind(this)} className=\"diy-menu\" selectMode=\"single\">\n+ return (<Menu onSelect={this.onSelect.bind(this)} rtl className=\"diy-menu\" selectMode=\"single\">\n<Menu.Group label=\"Recent\" key=\"xxx\">\n{menuData.map((item) => {\nreturn (<Menu.Item key={item.value}>\n{item.label}\n- <Button onClick={this.onDelete.bind(this, item.index)} shape=\"text\" style={{float: 'right'}}>Delete</Button>\n+ <Button className=\"diy-menu-button\" onClick={this.onDelete.bind(this, item.index)} text>Delete</Button>\n</Menu.Item>);\n})}\n</Menu.Group>\n@@ -138,6 +138,12 @@ ReactDOM.render(<App/>, mountNode);\n.diy-menu .next-menu-item:hover a{\ndisplay:inline-block;\n}\n+.diy-menu .diy-menu-button {\n+ float: right;\n+}\n+.diy-menu[dir=rtl] .diy-menu-button {\n+ float: left;\n+}\n````\n",
        "chatgpt_rag": "docs(Menu): update handleItemClick function to include event parameter"
    },
    {
        "msg": "docs(accordion): add jsdocs to component",
        "diff": "diff --git a/packages/chakra-ui-core/src/CAccordion/CAccordion.js b/packages/chakra-ui-core/src/CAccordion/CAccordion.js +/**\n+ * Hey! Welcome to @chakra-ui/vue Accordion\n+ *\n+ * Accordions display a list of high-level\n+ * options that can expand/collapse to reveal\n+ * more information.\n+ *\n+ * An accordion is a vertically stacked set\n+ * of interactive headings that each contain\n+ * a title, content snippet, or thumbnail\n+ * representing a section of content.\n+ * The headings function as controls that enable\n+ * users to reveal or hide their associated sections\n+ * of content. Accordions are commonly used to\n+ * reduce the need to scroll when presenting\n+ * multiple sections of content on a single page.\n+ *\n+ * @see Docs https://vue.chakra-ui.com/accordion\n+ * @see Source link to source\n+ * @see WAI-ARIA https://www.w3.org/TR/wai-aria-practices-1.2/#accordion\n+ */\n+\nimport { baseProps } from '../config'\nimport { forwardProps, cloneVNodes, useId, isDef } from '../utils'\nimport styleProps from '../config/props'\n@@ -8,6 +30,16 @@ import CPseudoBox from '../CPseudoBox'\nimport CCollapse from '../CCollapse'\nimport CIcon from '../CIcon'\n+/**\n+ * CAccordion component\n+ *\n+ * The wrapper that clones it's children\n+ * to pass it's prop to the `CAccordionItem`.\n+ *\n+ * @extends CBox\n+ * @see Docs https://vue.chakra-ui.com/accordion\n+ */\n+\nconst CAccordion = {\nname: 'CAccordion',\nprops: {\n@@ -116,6 +148,15 @@ const CAccordion = {\n}\n}\n+/**\n+ * CAccordionItem component\n+ *\n+ * A single accordion item\n+ *\n+ * @extends CPseudoBox\n+ * @see Docs https://vue.chakra-ui.com/accordion\n+ */\n+\nconst CAccordionItem = {\nname: 'CAccordionItem',\nprops: {\n@@ -202,6 +243,15 @@ const CAccordionItem = {\n}\n}\n+/**\n+ * CAccordionHeader component\n+ *\n+ * The button that toggles the expand/collapse\n+ * state of the accordion item.\n+ *\n+ * @extends CPseudoBox\n+ * @see Docs https://vue.chakra-ui.com/accordion\n+ */\nconst CAccordionHeader = {\nname: 'CAccordionHeader',\ninject: ['$AccordionContext'],\n@@ -246,6 +296,15 @@ const CAccordionHeader = {\n}\n}\n+/**\n+ * CAccordionPanel component\n+ *\n+ * The container for the accordion item\n+ * details to be revealed.\n+ *\n+ * @extends CPseudoBox\n+ * @see Docs https://vue.chakra-ui.com/accordion\n+ */\nconst CAccordionPanel = {\nname: 'CAccordionPanel',\ninject: ['$AccordionContext'],\n@@ -277,6 +336,15 @@ const CAccordionPanel = {\n}\n}\n+/**\n+ * CAccordionIcon component\n+ *\n+ * A chevron-down icon that rotates based on the\n+ * expanded/collapsed state.\n+ *\n+ * @extends CPseudoBox\n+ * @see Docs https://vue.chakra-ui.com/accordion\n+ */\nconst CAccordionIcon = {\nname: 'CAccordionIcon',\ninject: ['$AccordionContext'],\n",
        "date": "01.04.2020 01:57:00",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "sim_msg": "docs(components): update doc accordion",
        "sim_diff": "diff --git a/packages/doc/content/components/components/accordion/index.mdx b/packages/doc/content/components/components/accordion/index.mdx @@ -9,6 +9,8 @@ import { theme } from '@gympass/yoga';\n# Accordion\n+The Accordion component is a container where we can insert contents inside it, we can show or hide them.\n+\n### Usage\n#### Simple\n@@ -68,7 +70,7 @@ render(() => {\n});\n```\n-### Simple - Multi\n+#### Simple accordion list\n```javascript state\nconst List = styled.ul`\n@@ -195,7 +197,7 @@ render(() => {\n});\n```\n-#### Subtitle\n+#### With Subtitle\n```javascript state\nconst List = styled.ul`\n@@ -249,7 +251,7 @@ render(() => {\n});\n```\n-#### Subtitle - Multi\n+#### With subtitle accordion list\n```javascript state\nconst List = styled.ul`\n@@ -369,7 +371,7 @@ render(() => {\n});\n```\n-#### Disabled - Simple\n+#### Simple disabled\n```javascript state\nconst List = styled.ul`\n@@ -495,7 +497,7 @@ render(() => {\n});\n```\n-#### Disabled - Subtitle\n+#### With subtitle disabled\n```javascript state\nconst List = styled.ul`\n",
        "chatgpt_rag": "docs(components): update accordion component documentation"
    },
    {
        "msg": "docs: npx to run dev dependencies",
        "diff": "diff --git a/README.md b/README.md @@ -25,7 +25,7 @@ It is also possible to install locally:\nnpm install --save-dev nodemon\n-With a local installation, nodemon will not be available in your system path. Instead, the local installation of nodemon can be run by calling it from within an npm script (such as `npm start`). Additionally, the `npm bin` command can be used to obtain the path to the project's local `.bin` directory.\n+With a local installation, nodemon will not be available in your system path. Instead, the local installation of nodemon can be run by calling it from within an npm script (such as `npm start`) or using `npx nodemon`.\n# Usage\n",
        "date": "04.09.2017 11:33:28",
        "repo": "remy/nodemon",
        "type": "docs",
        "sim_msg": "docs: add npm init hint to install section",
        "sim_diff": "diff --git a/Readme.md b/Readme.md @@ -27,6 +27,9 @@ This is a [Node.js](https://nodejs.org/en/) module available through the\nBefore installing, [download and install Node.js](https://nodejs.org/en/download/).\nNode.js 0.10 or higher is required.\n+If this is a brand new project, make sure to create a `package.json` first with\n+the [`npm init` command](https://docs.npmjs.com/creating-a-package-json-file).\n+\nInstallation is done using the\n[`npm install` command](https://docs.npmjs.com/getting-started/installing-npm-packages-locally):\n",
        "chatgpt_rag": "docs: update nodemon installation instructions with npx usage"
    },
    {
        "msg": "docs: how to provide theme with ThemePRovider",
        "diff": "diff --git a/src/main.js b/src/main.js import Vue from 'vue'\nimport App from './App.vue'\nimport './registerServiceWorker'\n-// import { provideTheme } from '@/lib/utils'\nimport Kiwi from './lib/plugin'\nVue.config.productionTip = false\n+// Install Kiwi plugin\nVue.use(Kiwi)\nnew Vue({\n+ // Alternative way to provide theme would be to import { provideTheme } from utils and provide it with render function\n// Provide theme to the root of the application\n// render: h => provideTheme(h, App)\nrender: h => h(App)\n",
        "date": "12.10.2019 18:43:12",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "sim_msg": "fix: using vueDevtools doesn't show tab vuex store\nMode: capacitor or cordova.",
        "sim_diff": "diff --git a/app/templates/entry/app.js b/app/templates/entry/app.js *\n* Boot files are your \"main.js\"\n**/\n+\n+<% if (__vueDevtools !== false) { %>\n+import vueDevtools from '@vue/devtools'\n+<% } %>\n+\nimport Vue from 'vue'\nimport './import-quasar.js'\n@@ -31,9 +36,6 @@ import { Plugins } from '@capacitor/core'\nconst { SplashScreen } = Plugins\n<% } %>\n-<% if (__vueDevtools !== false) { %>\n-import vueDevtools from '@vue/devtools'\n-<% } %>\nexport default async function (<%= ctx.mode.ssr ? 'ssrContext' : '' %>) {\n// create store and router instances\n",
        "chatgpt_rag": "feat: add Kiwi plugin installation in main.js\nMode: capacitor or cordova"
    },
    {
        "msg": "docs: added persistence to auth in \"Full Configuration\"",
        "diff": "diff --git a/docs/guide/getting-started/README.md b/docs/guide/getting-started/README.md @@ -85,6 +85,7 @@ modules: [\nonFirebaseHosting: false,\nservices: {\nauth: {\n+ persistence: 'local',\ninitialize: {\nonAuthStateChangedMutation: \"SET_AUTH_USER\",\nonAuthStateChangedAction: null,\n",
        "date": "15.03.2020 22:45:10",
        "repo": "nuxt-community/firebase-module",
        "type": "docs",
        "sim_msg": "feat(account): add account management support",
        "sim_diff": "diff --git a/src/middleware/packages/auth/services/auth.local.js b/src/middleware/packages/auth/services/auth.local.js @@ -154,7 +154,8 @@ const AuthLocalService = {\naliases: {\n'GET /': 'auth.account.findSettingsByWebId',\n'POST /': 'auth.account.updateAccountSettings'\n- }\n+ },\n+ authorization: true\n};\nconst routes = [\n",
        "chatgpt_rag": "feat(auth): add local persistence option for authentication services"
    },
    {
        "msg": "docs(TablesPage): Fix typo in docs",
        "diff": "diff --git a/docs/lib/Components/TablesPage.js b/docs/lib/Components/TablesPage.js @@ -39,7 +39,7 @@ export default class TablesPage extends React.Component {\n<h4>Properties</h4>\n<pre>\n<PrismCode className=\"language-jsx\">\n-{`Card.propTypes = {\n+{`Table.propTypes = {\n// Pass in a Component to override default element\ntag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\nsize: PropTypes.string,\n",
        "date": "30.03.2017 23:52:25",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "sim_msg": "feat(Table): use contentstyle prop to adjust topRows style",
        "sim_diff": "diff --git a/components/system/components/Table.js b/components/system/components/Table.js @@ -147,6 +147,7 @@ export class Table extends React.Component {\nbackgroundColor: this.props.noColor ? null : ac[c.key].color,\nflexShrink,\n}}\n+ contentstyle={c.contentstyle}\ntooltip={c.tooltip}\n>\n{text}\n",
        "chatgpt_rag": "chore(TablesPage): update propTypes to Table in TablesPage component"
    },
    {
        "msg": "docs(LabelExampleImageColored): Update example\nReplace Veronika with jenny due to image name",
        "diff": "diff --git a/docs/src/examples/elements/Label/Types/LabelExampleImageColored.js b/docs/src/examples/elements/Label/Types/LabelExampleImageColored.js @@ -10,12 +10,12 @@ const LabelExampleImage = () => (\n</Label>\n<Label as='a' color='teal' image>\n<img src='/images/avatar/small/jenny.jpg' />\n- Veronika\n+ Jenny\n<Label.Detail>Friend</Label.Detail>\n</Label>\n<Label as='a' color='yellow' image>\n<img src='/images/avatar/small/christian.jpg' />\n- Helen\n+ Christian\n<Label.Detail>Co-worker</Label.Detail>\n</Label>\n</div>\n",
        "date": "24.07.2020 14:13:02",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "test: update label snapshots with font size change",
        "sim_diff": "diff --git a/packages/label/src/__snapshots__/Label.test.js.snap b/packages/label/src/__snapshots__/Label.test.js.snap @@ -6,7 +6,7 @@ exports[`Label renders with all props 1`] = `\nObject {\n\"color\": \"rgba(60, 60, 60, 0.6)\",\n\"fontFamily\": \"ArtifaktElement, sans-serif\",\n- \"fontSize\": \"12px\",\n+ \"fontSize\": \"14px\",\n\"fontWeight\": 400,\n\"lineHeight\": \"1.4\",\n\"opacity\": \"0.5\",\n@@ -23,7 +23,7 @@ exports[`Label renders without props 1`] = `\nObject {\n\"color\": \"rgba(60, 60, 60, 0.6)\",\n\"fontFamily\": \"ArtifaktElement, sans-serif\",\n- \"fontSize\": \"12px\",\n+ \"fontSize\": \"14px\",\n\"fontWeight\": 400,\n\"lineHeight\": \"1.4\",\n\"opacity\": \"1.0\",\n",
        "chatgpt_rag": "feat: update LabelExampleImageColored component with correct names and images"
    },
    {
        "msg": "docs(Grid): fix typo in GridExampleStretched example description\nThe description of the `stretched` property of a grid row mentioned 'width', but should have mentioned 'height'.",
        "diff": "diff --git a/docs/src/examples/collections/Grid/Variations/index.js b/docs/src/examples/collections/Grid/Variations/index.js @@ -32,7 +32,7 @@ const GridVariationsExamples = () => (\n<ComponentExample\ntitle='Stretched'\n- description='A row can automatically resize all elements to split the available width evenly.'\n+ description='A row can automatically resize all elements to split the available height evenly.'\nexamplePath='collections/Grid/Variations/GridExampleStretched'\n/>\n<ComponentExample examplePath='collections/Grid/Variations/GridExampleStretchedEqual' />\n",
        "date": "24.09.2018 11:42:20",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "feat(components/layout/grid): griditem prop spreading",
        "sim_diff": "diff --git a/components/layout/grid/src/gridItem/index.js b/components/layout/grid/src/gridItem/index.js @@ -26,7 +26,8 @@ export default function LayoutGridItem({\nxxl,\nxxlOffset,\nxxs,\n- xxsOffset\n+ xxsOffset,\n+ ...props\n}) {\nconst spanClassnames = useMemo(\n() => getColSpanClassNamesTransform({colSpan, xxl, xl, l, m, s, xs, xxs}),\n@@ -46,7 +47,7 @@ export default function LayoutGridItem({\n)\nreturn (\n- <PolymorphicElement as={as} className={classNames}>\n+ <PolymorphicElement as={as} className={classNames} {...props}>\n{children}\n</PolymorphicElement>\n)\n",
        "chatgpt_rag": "fix(docs/collections/grid): update description for stretched variation in GridExamples"
    },
    {
        "msg": "docs(stack): add stacking of html elements",
        "diff": "diff --git a/website/pages/stack.mdx b/website/pages/stack.mdx @@ -68,6 +68,19 @@ Pass the `isReversed` prop or set `direction` to `row-reverse` or `column-revers\n</c-stack>\n```\n+## Stacking HTML elements\n+The `CStack` element is able also to stack HTML elements. Internally it wraps HTML elements inside a `CBox` primitive\n+component and spaces it like it would any other Chakra component.\n+\n+```vue live=true\n+<c-stack :spacing=\"4\">\n+ <c-text>Chakra component 1</c-text>\n+ <p>HTML paragraph element</p>\n+ <h3>HTML heading element</h3>\n+ <c-text>Chakra component 2</c-text>\n+</c-stack>\n+```\n+\n## Props\n| Name | Type | Default | Description |\n",
        "date": "26.09.2020 22:28:20",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "sim_msg": "feat(docs): Update flexbox page",
        "sim_diff": "diff --git a/docs/src/pages/layout/grid/introduction-to-flexbox.md b/docs/src/pages/layout/grid/introduction-to-flexbox.md @@ -231,7 +231,7 @@ Note that there will be a noticeable bump in CSS footprint when enabling it. So\n.reverse-<bp>\n.(wrap|no-wrap|reverse-wrap)-<bp>\n.order-<bp>-(first|last|none)\n-.justify-<bp>-(start|end|center|between|around)\n+.justify-<bp>-(start|end|center|between|around|evenly)\n.items-<bp>-(start|end|center|baseline|stretch)\n.content-<bp>-(start|end|center|between|around)\n.self-<bp>-(start|end|center|baseline|stretch)\n",
        "chatgpt_rag": "chore(website): Update stacking HTML elements section in stack page"
    },
    {
        "msg": "docs: Fix code example for split button dropdowns",
        "diff": "diff --git a/docs/lib/Components/ButtonDropdownPage.js b/docs/lib/Components/ButtonDropdownPage.js @@ -107,7 +107,7 @@ DropdownToggle.propTypes = {\n<PrismCode className=\"language-jsx\">\n{`<ButtonDropdown isOpen={isOpen} toggle={toggle}>\n<Button id=\"caret\" color=\"primary\">{this.props.text}</Button>\n- <DropdownToggle caret color=\"primary\" />\n+ <DropdownToggle split color=\"primary\" />\n<DropdownMenu>\n<DropdownItem header>Header</DropdownItem>\n<DropdownItem disabled>Action</DropdownItem>\n",
        "date": "07.10.2020 21:56:10",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "sim_msg": "refactor: add ability to customize dropdown button",
        "sim_diff": "diff --git a/renderer/components/UI/Dropdown.js b/renderer/components/UI/Dropdown.js @@ -137,6 +137,35 @@ MenuItem.propTypes = {\nvalueField: PropTypes.string,\n}\n+const DefaultDropdownButton = ({\n+ onToggle,\n+ selectedItem,\n+ valueField,\n+ activeKey,\n+ isOpen,\n+ opacity: buttonOpacity,\n+}) => {\n+ return (\n+ <DropdownButton fontWeight=\"normal\" onClick={onToggle} opacity={buttonOpacity} type=\"button\">\n+ <Flex alignItems=\"center\">\n+ <Text css=\"white-space: nowrap;\" mr={1} textAlign=\"left\">\n+ {selectedItem ? selectedItem[valueField] : activeKey}{' '}\n+ </Text>\n+ <Flex color=\"gray\">{isOpen ? <AngleUp width=\"0.6em\" /> : <AngleDown width=\"0.6em\" />}</Flex>\n+ </Flex>\n+ </DropdownButton>\n+ )\n+}\n+\n+DefaultDropdownButton.propTypes = {\n+ activeKey: PropTypes.string,\n+ isOpen: PropTypes.bool,\n+ onToggle: PropTypes.func.isRequired,\n+ opacity: PropTypes.number,\n+ selectedItem: PropTypes.object,\n+ valueField: PropTypes.string,\n+}\n+\nconst Dropdown = ({\nactiveKey,\nitems,\n@@ -145,6 +174,7 @@ const Dropdown = ({\nonChange,\nmessageMapper,\nvalueField,\n+ buttonComponent: ButtonComponent,\n...rest\n}) => {\nconst intl = useIntl()\n@@ -185,21 +215,16 @@ const Dropdown = ({\nreturn (\n<div style={{ display: 'inline-block' }}>\n<DropdownContainer {...rest} ref={wrapperRef}>\n- <DropdownButton\n- fontWeight=\"normal\"\n- onClick={toggleMenu}\n- opacity={buttonOpacity}\n- type=\"button\"\n- >\n- <Flex alignItems=\"center\">\n- <Text css=\"white-space: nowrap;\" mr={1} textAlign=\"left\">\n- {selectedItem ? selectedItem[valueField] : activeKey}{' '}\n- </Text>\n- <Flex color=\"gray\">\n- {isOpen ? <AngleUp width=\"0.6em\" /> : <AngleDown width=\"0.6em\" />}\n- </Flex>\n- </Flex>\n- </DropdownButton>\n+ <ButtonComponent\n+ {...{\n+ onToggle: toggleMenu,\n+ selectedItem,\n+ valueField,\n+ activeKey,\n+ isOpen,\n+ opacity: buttonOpacity,\n+ }}\n+ />\n{isOpen && (\n<MenuContainer>\n<Menu ref={measuredRef} justify={justify} maxHeight={height}>\n@@ -224,10 +249,12 @@ const Dropdown = ({\nDropdown.defaultProps = {\nvalueField: 'value',\n+ buttonComponent: DefaultDropdownButton,\n}\nDropdown.propTypes = {\nactiveKey: PropTypes.string.isRequired,\n+ buttonComponent: PropTypes.elementType,\nbuttonOpacity: PropTypes.number,\nitems: PropTypes.array.isRequired,\njustify: PropTypes.string,\n",
        "chatgpt_rag": "style: update DropdownToggle component to use split style instead of caret"
    },
    {
        "msg": "docs(readme): add coreui project",
        "diff": "diff --git a/README.md b/README.md @@ -125,6 +125,7 @@ Organizations and projects using `reactstrap`\n- [availity-reactstrap-validation](https://availity.github.io/availity-reactstrap-validation/)\n- [component-template](https://reactstrap.github.io/component-template/)\n- [video-react](https://video-react.github.io/)\n+- [CoreUI-Free-Bootstrap-Admin-Template](https://github.com/mrholek/CoreUI-Free-Bootstrap-Admin-Template) - [demo](http://coreui.io/demo/React_Demo/#/)\nSubmit a PR to add to this list!\n",
        "date": "29.01.2017 15:42:23",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "sim_msg": "fix(EmptyState): remove upload button and use an icon instead",
        "sim_diff": "diff --git a/components/core/Filter/Content.js b/components/core/Filter/Content.js import * as React from \"react\";\nimport * as System from \"~/components/system\";\n-import * as Upload from \"~/components/core/Upload\";\nimport * as SVG from \"~/common/svg\";\nimport * as Styles from \"~/common/styles\";\n@@ -33,7 +32,6 @@ const STYLES_UPLOAD_BUTTON = (theme) => css`\nborder-radius: 8px;\nwidth: 24px;\nheight: 24px;\n- cursor: pointer;\npointer-events: auto;\nbox-shadow: ${theme.shadow.lightSmall};\n`;\n@@ -50,7 +48,7 @@ export function Content({ viewer, onAction, page, ...props }) {\nreturn (\n<div css={STYLES_DATAVIEWER_WRAPPER} {...props}>\n- {objects.length ? (\n+ {objects.length > 0 ? (\n<TagsOnboarding onAction={onAction} viewer={viewer} isActive={isOnboardingActive}>\n<DataView\nkey=\"scene-files-folder\"\n@@ -68,14 +66,9 @@ export function Content({ viewer, onAction, page, ...props }) {\n<FileTypeGroup />\n<div style={{ marginTop: 24 }} css={Styles.HORIZONTAL_CONTAINER_CENTERED}>\n<System.H5>Use</System.H5>\n- <Upload.Trigger\n- viewer={viewer}\n- css={STYLES_UPLOAD_BUTTON}\n- aria-label=\"Upload\"\n- style={{ marginLeft: 8 }}\n- >\n+ <span css={STYLES_UPLOAD_BUTTON} style={{ marginLeft: 8 }}>\n<SVG.Plus height=\"16px\" />\n- </Upload.Trigger>\n+ </span>\n<System.H5 style={{ marginLeft: 8 }}>or drop files to save to Slate</System.H5>\n</div>\n</EmptyState>\n",
        "chatgpt_rag": "chore(README): add CoreUI-Free-Bootstrap-Admin-Template to the list of organizations and projects using `reactstrap`"
    },
    {
        "msg": "docs: typo\ntypo",
        "diff": "diff --git a/README.md b/README.md @@ -162,7 +162,7 @@ Note that by default, nodemon will ignore the `.git`, `node_modules`, `bower_com\n## Application isn't restarting\n-In some networked environments (such as a container running nodemon reading across a mounted drive), you will need to use the `legacyWatch: true` which enabled Chokidar's polling.\n+In some networked environments (such as a container running nodemon reading across a mounted drive), you will need to use the `legacyWatch: true` which enables Chokidar's polling.\nVia the CLI, use either `--legacy-watch` or `-L` for short:\n",
        "date": "05.09.2017 04:20:59",
        "repo": "remy/nodemon",
        "type": "docs",
        "sim_msg": "chore(appveyor): bump node to 10 (current LTS)",
        "sim_diff": "diff --git a/.appveyor.yml b/.appveyor.yml @@ -12,9 +12,9 @@ init:\n# Fix line endings on Windows\n- git config --global core.autocrlf true\n-# Test against this version of Node.js\n+# Test against the LTS version of Node.js\nenvironment:\n- nodejs_version: \"8\"\n+ nodejs_version: \"10\"\nbuild: off\n@@ -33,6 +33,3 @@ notifications:\non_build_success: false\non_build_failure: false\non_build_status_changed: true\n-\n-# Preserve node_modules between builds\n-cache: node_modules -> appveyor.yml,package.json,yarn.lock\n",
        "chatgpt_rag": "fix(nodemon): correct typo in README.md (#162)"
    },
    {
        "msg": "docs: add link to common problems",
        "diff": "diff --git a/packages/razzle/config/loadRazzleConfig.js b/packages/razzle/config/loadRazzleConfig.js @@ -11,7 +11,7 @@ const loadPlugins = require('./loadPlugins');\nmodule.exports = (webpackObject, razzleConfig, packageJsonIn) => {\nreturn new Promise(async resolve => {\nconsole.info(\"If you have issues with css make sure postcss resolves to v8.2.4.\");\n- console.info(\"See: \\n\");\n+ console.info(\"See: https://razzlejs.org/getting-started#common-problems\\n\");\nconsole.warn(\"CssMinimizerPlugin currently uses clean-css,\\nwe will switch to cssnano once it supports postcss v8.2.4.\\n\");\nlet razzle = razzleConfig || {};\n",
        "date": "22.02.2021 00:48:01",
        "repo": "jaredpalmer/razzle",
        "type": "docs",
        "sim_msg": "refactor: cleanup old fix attempt",
        "sim_diff": "diff --git a/packages/postcss/mixin.core.js b/packages/postcss/mixin.core.js require('./patch-postcss-modules-extract-imports');\nconst postcssImportPlugin = require('postcss-import');\n-const postcssImportResolver = require('postcss-import/lib/resolve-id');\nconst postcssPresetEnv = require('postcss-preset-env');\nconst ExtractCSSPlugin = require('mini-css-extract-plugin');\nconst FilterWarningsPlugin = require('webpack-filter-warnings-plugin');\n@@ -41,15 +40,7 @@ const getCSSLoaderConfig = (browsers, additionalLoader) => {\noptions: {\nident: 'postcss',\nplugins: [\n- // see #1012\n- postcssImportPlugin({\n- resolve: (id, base, options) =>\n- postcssImportResolver(\n- id.startsWith('~') ? id.slice(1) : id,\n- base,\n- options\n- ),\n- }),\n+ postcssImportPlugin(),\npostcssPresetEnv({\nbrowsers,\nautoprefixer: {\n",
        "chatgpt_rag": "chore: update console.info message with correct link to common problems section"
    },
    {
        "msg": "docs: add link to react website",
        "diff": "diff --git a/packages/chakra-ui-docs/components/Navbar.vue b/packages/chakra-ui-docs/components/Navbar.vue list-style-type=\"none\"\nml=\"auto\"\n>\n+ <CBox as=\"li\" mr=\"4\">\n+ <CLink color=\"gray.600\" :_hover=\"{ color : 'vue.400' }\" is-external href=\"https://chakra-ui.com/\">\n+ Chakra UI React\n+ </CLink>\n+ </CBox>\n<CBox as=\"li\" mr=\"4\">\n<CLink color=\"gray.500\" :_hover=\"{ color : 'vue.400' }\" is-external href=\"https://github.com/chakra-ui/chakra-ui-vue\">\n<CIcon name=\"github\" size=\"20px\" />\n",
        "date": "04.06.2020 18:15:00",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "sim_msg": "chore: adjust icons in Category example",
        "sim_diff": "diff --git a/packages/vue/src/examples/pages/category/Category.vue b/packages/vue/src/examples/pages/category/Category.vue aria-label=\"Filters\"\n@click=\"isFilterSidebarOpen = true\"\n>\n- <SfIcon size=\"32px\" color=\"#BEBFC4\" icon=\"filter\" />\n+ <SfIcon\n+ size=\"18px\"\n+ color=\"#BEBFC4\"\n+ icon=\"filter\"\n+ class=\"navbar__filters-icon\"\n+ />\nFilters\n</SfButton>\n<div class=\"navbar__sort desktop-only\">\nclass=\"navbar__view-icon\"\n:color=\"isGridView ? '#1D1F22' : '#BEBFC4'\"\nicon=\"tiles\"\n- size=\"32px\"\n+ size=\"12px\"\nrole=\"button\"\naria-label=\"Change to grid view\"\n:aria-pressed=\"isGridView\"\nclass=\"navbar__view-icon\"\n:color=\"!isGridView ? '#1D1F22' : '#BEBFC4'\"\nicon=\"list\"\n- size=\"32px\"\n+ size=\"12px\"\nrole=\"button\"\naria-label=\"Change to list view\"\n:aria-pressed=\"!isGridView\"\n@@ -644,6 +649,9 @@ export default {\n--heading-title-font-weight: var(--font-light);\n--heading-title-font-size: var(--font-xl);\n}\n+ &__filters-icon {\n+ margin: 0 var(--spacer-sm) 0 0;\n+ }\n&__filters-button {\ndisplay: flex;\nalign-items: center;\n@@ -667,7 +675,9 @@ export default {\nmargin: 0 var(--spacer-2xs) 0 0;\n}\n&__select {\n- --select-padding: 0 var(--spacer-lg) 0 var(--spacer-2xs);\n+ --select-width: 220px;\n+ --select-padding: 0;\n+ --select-selected-padding: 0 var(--spacer-lg) 0 var(--spacer-2xs);\n--select-margin: 0;\n}\n&__sort {\n@@ -693,6 +703,10 @@ export default {\n}\n&-icon {\ncursor: pointer;\n+ margin: 0 var(--spacer-base) 0 0;\n+ &:last-child {\n+ margin: 0;\n+ }\n}\n&-label {\nmargin: 0 var(--spacer-sm) 0 0;\n",
        "chatgpt_rag": "chore: add Chakra UI React link to Navbar component"
    },
    {
        "msg": "docs(layout): Fix typo in layout example",
        "diff": "diff --git a/docs/lib/examples/Layout.js b/docs/lib/examples/Layout.js @@ -16,7 +16,7 @@ export default class Example extends React.Component {\n</Row>\n<Row>\n<Col xs=\"3\">.col-3</Col>\n- <Col xs=\"auto\">.col-auto - variabe width content</Col>\n+ <Col xs=\"auto\">.col-auto - variable width content</Col>\n<Col xs=\"3\">.col-3</Col>\n</Row>\n<Row>\n",
        "date": "14.02.2017 10:46:47",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "sim_msg": "refactor: moved the Cart into the Layout component",
        "sim_diff": "diff --git a/src/components/Layout/Layout.js b/src/components/Layout/Layout.js -import React from \"react\";\n+import React, { Component } from \"react\";\n+import PropTypes from \"prop-types\";\nimport Helmet from \"react-helmet\";\n+\nimport Header from \"components/Header\";\n+import { Cart } from \"components/Cart\";\n+\n+class Layout extends Component {\n+ static propTypes = {\n+ children: PropTypes.node,\n+ title: PropTypes.string\n+ };\n+\n+ static defaultProps = {\n+ title: \"\"\n+ };\n-export default ({ children, title = \"\" }) => (\n+ render() {\n+ const { children, title } = this.props;\n+ return (\n<div>\n<Helmet>\n<title>{title}</title>\n</Helmet>\n<Header />\n-\n- {children}\n-\n+ <main>{children}</main>\n+ <Cart />\n</div>\n);\n+ }\n+}\n+\n+export default Layout;\n",
        "chatgpt_rag": "style: corrected a typo in the comment for .col-auto in Layout component"
    },
    {
        "msg": "docs: documentation for spinner component",
        "diff": "diff --git a/packages/chakra-ui-docs/docs/spinner.mdx b/packages/chakra-ui-docs/docs/spinner.mdx +import SEO from '../components/SEO'\n+\n+<SEO\n+ title=\"Spinner\"\n+ description=\"Spinners provide a visual cue that an action is processing awaiting a course of change or a result.\"\n+/>\n+\n# Spinner\n+\n+Spinners provide a visual cue that an action is processing awaiting a course of change or a result.\n+\n+## Import\n+\n+```js\n+import { CSpinner } from '@chakra-ui/vue'\n+```\n+\n+## Usage\n+\n+```vue live=true\n+<c-spinner />\n+```\n+\n+### Spinner with Color\n+\n+```vue live=true\n+<c-spinner color=\"blue.500\" />\n+```\n+\n+### Spinner with different size\n+\n+```vue live=true\n+<c-stack is-inline :spacing=\"4\">\n+ <c-spinner size=\"xs\" />\n+ <c-spinner size=\"sm\" />\n+ <c-spinner size=\"md\" />\n+ <c-spinner size=\"lg\" />\n+ <c-spinner size=\"xl\" />\n+</c-stack>\n+```\n+\n+### Spinner with empty area color\n+\n+```vue live=true\n+<c-spinner\n+ thickness=\"4px\"\n+ speed=\"0.65s\"\n+ empty-color=\"green.200\"\n+ color=\"vue.500\"\n+ size=\"xl\"\n+/>\n+```\n+\n+## Props\n+\n+| Name | Type | Default | Description |\n+| ---------- | ------------------------ | ------------- | --------------------------------------------------------------- |\n+| size | `xl`,`lg`,`md`,`sm`,`xs` | `md` | The size of the spinner. |\n+| thickness | `string` | `2px` | The thickness of the spinner. |\n+| speed | `string` | `0.45s` | The speed of the spinner. |\n+| label | `string` | `Loading...` | An accessible label for the spinner (Useful for screen readers) |\n+| color | `string` | | The color of the spinner. |\n+| emptyColor | `string` | `transparent` | The color of the empty areas in the spinner. |\n",
        "date": "26.04.2020 21:06:57",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "sim_msg": "fix(ui): QSpinnerHourglass not working properly on Firefox",
        "sim_diff": "diff --git a/ui/src/components/spinner/QSpinnerHourglass.js b/ui/src/components/spinner/QSpinnerHourglass.js @@ -53,7 +53,7 @@ export default Vue.extend({\n'to': '0',\n'dur': '1s',\n'repeatCount': 'indefinite',\n- 'vlaues': '25;0;0',\n+ 'values': '25;0;0',\n'keyTimes': '0;0.5;1'\n}\n}),\n@@ -64,7 +64,7 @@ export default Vue.extend({\n'to': '45',\n'dur': '1s',\n'repeatCount': 'indefinite',\n- 'vlaues': '20;45;45',\n+ 'values': '20;45;45',\n'keyTimes': '0;0.5;1'\n}\n})\n@@ -91,7 +91,7 @@ export default Vue.extend({\n'to': '25',\n'dur': '1s',\n'repeatCount': 'indefinite',\n- 'vlaues': '0;25;25',\n+ 'values': '0;25;25',\n'keyTimes': '0;0.5;1'\n}\n}),\n@@ -102,7 +102,7 @@ export default Vue.extend({\n'to': '55',\n'dur': '1s',\n'repeatCount': 'indefinite',\n- 'vlaues': '80;55;55',\n+ 'values': '80;55;55',\n'keyTimes': '0;0.5;1'\n}\n})\n",
        "chatgpt_rag": "feat(docs): Add SEO component to Spinner documentation page\n\nAdded the SEO component to the Spinner documentation page to improve search engine optimization and provide a better description of the Spinner component."
    },
    {
        "msg": "docs(icon): documented parseFAIcons utils",
        "diff": "diff --git a/src/lib/utils/icons.js b/src/lib/utils/icons.js import merge from 'lodash-es/merge'\n+/**\n+ * @description Parse all Font Awesome Icons\n+ * @param {Object} iconSet - Registered Icons object\n+ * @returns {Object} - All Font awesome icons parsed.\n+ */\nconst parseFAIcons = (iconSet) => {\nconst parseFAIcon = (iconObject) => {\nconst { icon } = iconObject\n@@ -15,7 +20,6 @@ const parseFAIcons = (iconSet) => {\n.map(value => parseFAIcon(value))\n.reduce((target, source) => merge(target, source), {})\n- console.log({ result })\nreturn result\n}\n",
        "date": "28.10.2019 03:28:59",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "sim_msg": "fix: useOnPress for Icon components",
        "sim_diff": "diff --git a/src/components/common/view/Icon/Icon.js b/src/components/common/view/Icon/Icon.js // @flow\nimport React from 'react'\nimport { withTheme } from 'react-native-paper'\n+import { noop } from 'lodash'\nimport createIconSetFromFontello from 'react-native-vector-icons/lib/create-icon-set-from-fontello'\n+import useOnPress from '../../../../lib/hooks/useOnPress'\nimport fontelloConfig from './config.json'\nconst Icon = createIconSetFromFontello(fontelloConfig)\n@@ -14,6 +16,9 @@ type IconProps = {\ntheme: Object,\n}\n-export default withTheme(({ theme, color, size, ...props }: IconProps) => (\n- <Icon size={size || 16} color={theme.colors[color] || color || theme.colors.primary} {...props} />\n-))\n+export default withTheme(({ theme, color, size = 16, onPress = noop, ...iconProps }: IconProps) => {\n+ const onIconPress = useOnPress(onPress)\n+ const { colors } = theme\n+\n+ return <Icon size={size} onPress={onIconPress} color={colors[color] || color || colors.primary} {...iconProps} />\n+})\n",
        "chatgpt_rag": "feat: add parseFAIcons function to parse Font Awesome Icons"
    },
    {
        "msg": "docs(README): fix link to CSS Usage page",
        "diff": "diff --git a/README.md b/README.md @@ -112,6 +112,7 @@ This is a listing of example projects and guides that will help you integrate Se\n<details>\n<summary><b>How do I setup CSS?</b></summary>\n+\nThere are several options. Refer to our doc on [CSS Usage][23].\n</details>\n",
        "date": "12.10.2018 11:08:46",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "docs: add vue example links to site",
        "sim_diff": "diff --git a/examples/README.md b/examples/README.md - [React example](./react)\n- [HTML example](./vanilla-html)\n- [Preact example](./preact)\n+- [Vue example](./vue)\n",
        "chatgpt_rag": "docs: update CSS setup instructions in README with link to CSS Usage doc"
    },
    {
        "msg": "docs: fix typo on the front page",
        "diff": "diff --git a/packages/chakra-ui-docs/components/Hero.vue b/packages/chakra-ui-docs/components/Hero.vue is-external\nhref=\"https://chakra-ui.com/\"\n>\n- Looking for React.js verison?\n+ Looking for React.js version?\n</CLink>\n</CFlex>\n</CFlex>\n",
        "date": "09.06.2020 08:22:25",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "sim_msg": "chore: enable automatic storybook composition",
        "sim_diff": "diff --git a/packages/vue/package.json b/packages/vue/package.json \"*.vue\",\n\"*.scss\",\n\"*.css\"\n- ]\n+ ],\n+ \"storybook\": {\n+ \"url\": \"https://docs.storefrontui.io/\"\n+ }\n}\n",
        "chatgpt_rag": "fix: correct typo in Hero.vue component - 'verison' to 'version'"
    },
    {
        "msg": "docs: added docs for using Chakra UI Vue CLI plugin",
        "diff": "diff --git a/packages/chakra-ui-docs/docs/getting-started.mdx b/packages/chakra-ui-docs/docs/getting-started.mdx # Getting Started\nInstall Chakra UI and it's peer dependency, `emotion`\n+\n<br />\n```bash\nyarn add @chakra-ui/vue emotion\n```\n+\nor (with npm)\n```bash\nnpm install @chakra-ui/vue emotion --save\n```\n+### With Vue CLI plugin\n+\n+If you are using Vue CLI 3, then you can install Chakra UI and get a base setup using the Chakra UI [plugin](https://www.npmjs.com/package/vue-cli-plugin-chakra-ui).\n+\n+```bash\n+vue add chakra-ui\n+```\n+\n### With Nuxt.js\n-If you're using Nuxt, you need to install `@nuxtjs/emotion` package as well to server-side render your styles.\n+If you're using Nuxt, you need to install `@nuxtjs/emotion` package as well to server-side render your styles.\n```bash\nyarn add @chakra-ui/vue emotion @nuxtjs/emotion\n@@ -22,39 +32,37 @@ yarn add @chakra-ui/vue emotion @nuxtjs/emotion\nCreate a theme object to include custom color, typography, and layout values. Chakra UI comes with a default theme, so this step is optional.\n-\n-\n```js\n// example theme.js\nexport default {\n- breakpoints: [\"30em\", \"48em\", \"62em\", \"80em\"],\n+ breakpoints: ['30em', '48em', '62em', '80em'],\nfonts: {\nheading: '\"Avenir Next\", sans-serif',\n- body: \"system-ui, sans-serif\",\n- mono: \"Menlo, monospace\",\n+ body: 'system-ui, sans-serif',\n+ mono: 'Menlo, monospace'\n},\nfontSizes: {\n- xs: \"0.75rem\",\n- sm: \"0.875rem\",\n- md: \"1rem\",\n- lg: \"1.125rem\",\n- xl: \"1.25rem\",\n- \"2xl\": \"1.5rem\",\n- \"3xl\": \"1.875rem\",\n- \"4xl\": \"2.25rem\",\n- \"5xl\": \"3rem\",\n- \"6xl\": \"4rem\",\n- },\n-};\n+ xs: '0.75rem',\n+ sm: '0.875rem',\n+ md: '1rem',\n+ lg: '1.125rem',\n+ xl: '1.25rem',\n+ '2xl': '1.5rem',\n+ '3xl': '1.875rem',\n+ '4xl': '2.25rem',\n+ '5xl': '3rem',\n+ '6xl': '4rem'\n+ }\n+}\n```\n## Usage\n+\n**1. Import the Chakra UI plugin in your `main.js` file.**\nIn order to use Chakra, you need to wrap your main application inside the Chakra `CThemeProvider` component.\nYou can do so as shown below.\n-\n```js\nimport Vue from 'vue'\nimport Chakra, { CThemeProvider } from '@chakra-ui/vue'\n@@ -64,14 +72,12 @@ Vue.use(Chakra)\nnew Vue({\nel: '#app',\n- render: (h) => h(CThemeProvider, [\n- h(App)\n- ])\n+ render: (h) => h(CThemeProvider, [h(App)])\n}).$mount()\n```\n-\nIf you'd like to add extend the Chakra theme with custom brand colors you can do so as shown below. This is also optional.\n+\n<br />\n```js\n@@ -84,24 +90,22 @@ Vue.use(Chakra, {\ncolors: {\n...defaultTheme.colors,\nbrand: {\n- 900: \"#1a365d\",\n- 800: \"#153e75\",\n- 700: \"#2a69ac\",\n- },\n+ 900: '#1a365d',\n+ 800: '#153e75',\n+ 700: '#2a69ac'\n+ }\n}\n}\n})\nnew Vue({\nel: '#app',\n- render: (h) => h(CThemeProvider, [\n- h(App)\n- ])\n+ render: (h) => h(CThemeProvider, [h(App)])\n}).$mount()\n```\n-\n## Injecting Global Styles.\n+\nSometimes you may need to apply css reset styles to your application.\nChakra UI exports a `CReset` that'll remove browser default styles. It's heavily inspired by [Tailwind's preflight](https://unpkg.com/tailwindcss@1.1.2/dist/base.css)\n@@ -116,10 +120,7 @@ Vue.use(Chakra)\nnew Vue({\nel: '#app',\n- render: (h) => h(CThemeProvider, [\n- h(CReset),\n- h(App)\n- ])\n+ render: (h) => h(CThemeProvider, [h(CReset), h(App)])\n}).$mount()\n```\n@@ -150,10 +151,11 @@ export default {\n```\n### Codesandbox starters\n+\n- [Vue Starter](https://codesandbox.io/s/chakra-ui-vue-starter-2sy0g)\n- [Nuxt Starter](https://codesandbox.io/s/chakra-ui-nuxt-demo-f8tq4)\n- [Gridsome Starter](https://codesandbox.io/s/chakra-ui-gridsome-demo-038c9)\n-\n### Storybook Components\n+\nYou can also view all developed components in [Storybook](https://chakra-ui-vue.netlify.com)!\n",
        "date": "08.05.2020 22:25:19",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "sim_msg": "chore: add videos about nuxt and customziation",
        "sim_diff": "diff --git a/packages/vue/src/stories/getting-started/1. installation.stories.mdx b/packages/vue/src/stories/getting-started/1. installation.stories.mdx @@ -192,6 +192,8 @@ export default {\n## Using with Nuxt\n+<YouTube youTubeId=\"XEewlVJIkwA\" />\n+\nTo use Storefront UI in a Nuxt project you need to include it's transpilation during build process using nuxt.config.js or your alternative webpack config.\nFor example in Nuxt 2-edge all you have to do is to add `/^@storefront-ui/` to the [transpile.build](https://nuxtjs.org/api/configuration-build/#transpile) array e.g.\n@@ -207,4 +209,6 @@ Make sure that you already have all required webpack loaders.\n## Customization\n-Storefront UI is very flexible in terms of customization. You can read [here](/setup-customization.md) about its capabilities.\n+<YouTube youTubeId=\"iBN5jEcJHoY\" />\n+\n+Storefront UI is very flexible in terms of customization. You can read [here](/?path=/story/getting-started-development-guide-css-customization--page) about its capabilities.\n",
        "chatgpt_rag": "feat: add installation instructions for Chakra UI with Vue CLI plugin"
    },
    {
        "msg": "docs: add margin to docs pages",
        "diff": "diff --git a/website/layouts/default.vue b/website/layouts/default.vue >\n<CReset />\n<Navbar />\n- <CFlex max-h=\"calc(100vh - 60px)\">\n+ <CFlex\n+ max-h=\"calc(100vh - 60px)\"\n+ max-w=\"1440px\"\n+ mx=\"auto\"\n+ >\n<Sidebar />\n<CBox\nid=\"main-content\"\n",
        "date": "17.08.2021 16:07:41",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "sim_msg": "chore: Small layout test-case addition",
        "sim_diff": "diff --git a/dev/components/new-layout/pages/default.vue b/dev/components/new-layout/pages/default.vue <template>\n<q-page padding class=\"bg-yellow page-default-padding\">\n+ <q-toggle v-model=\"extra\" label=\"Extra content\" />\n+ <div v-if=\"extra\">\n<div v-for=\"n in 50\">\nLorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n</div>\n+ </div>\n<q-page-sticky position=\"top-left\" :offset=\"[18, 58]\">\n<q-btn round color=\"primary\" icon=\"arrow_back\" class=\"rotate-45\" />\n<script>\nexport default {\n+ data () {\n+ return {\n+ extra: true\n+ }\n+ }\n}\n</script>\n",
        "chatgpt_rag": "chore: Update layout styles for better responsiveness"
    },
    {
        "msg": "docs(options): analytics and remote config description\nAnalytics and Remote Config options descriptions were referencing Storage.",
        "diff": "diff --git a/docs/guide/options/README.md b/docs/guide/options/README.md @@ -556,7 +556,7 @@ performance: true\n### analytics\n-Initializes Firebase Storage and makes it available via `$fireAnalytics` and `$fireAnalyticsObj`.\n+Initializes Firebase Analytics and makes it available via `$fireAnalytics` and `$fireAnalyticsObj`.\n- Type: `Boolean` or `Object`\n- Default: `false`\n@@ -567,7 +567,7 @@ analytics: true\n### remoteConfig\n-Initializes Firebase Storage and makes it available via `$fireConfig` and `$fireConfigObj`.\n+Initializes Firebase Remote Config and makes it available via `$fireConfig` and `$fireConfigObj`.\n- Type: `Boolean` or `Object`\n- Default: `false`\n",
        "date": "10.05.2020 22:07:50",
        "repo": "nuxt-community/firebase-module",
        "type": "docs",
        "sim_msg": "fix: updated Node options env var for release pipeline",
        "sim_diff": "diff --git a/.github/workflows/release.yml b/.github/workflows/release.yml @@ -31,6 +31,7 @@ env:\nFIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}\nFIREBASE_MEASUREMENT_ID: ${{ secrets.FIREBASE_MEASUREMENT_ID }}\nFIREBASE_DATABASE_URL: ${{ secrets.FIREBASE_DATABASE_URL }}\n+ NODE_OPTIONS: \"--max_old_space_size=4096\"\njobs:\nbuild:\n",
        "chatgpt_rag": "docs: updated Firebase service names in options guide for accuracy"
    },
    {
        "msg": "docs(routes): fix layout component imports",
        "diff": "diff --git a/docs/src/routes.js b/docs/src/routes.js @@ -4,8 +4,8 @@ import { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom'\nimport ExternalExampleLayout from './components/ExternalExampleLayout'\nimport DocsLayout from './components/DocsLayout'\nimport DocsRoot from './components/DocsRoot'\n-import LayoutsLayout from './components/layoutsLayout'\n-import LayoutsRoot from './components/layoutsRoot'\n+import LayoutsLayout from './components/LayoutsLayout'\n+import LayoutsRoot from './components/LayoutsRoot'\nimport Introduction from './views/Introduction'\nimport Layouts from './views/layouts'\n",
        "date": "02.06.2018 20:02:08",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "fix(docs): avoid auto-adding wrong routes",
        "sim_diff": "diff --git a/docs/src/router/routes.js b/docs/src/router/routes.js @@ -14,13 +14,17 @@ function parseMenuNode (node, __path) {\ncomponent: getListingComponent(\nnode.name,\nnode.children.map(node => {\n- const to = prefix + (\n+ const to = node.external === true\n+ ? node.path\n+ : (\n+ prefix + (\nnode.path !== void 0\n? '/' + node.path\n: (node.listPath !== void 0 ? '/' + node.listPath : '')\n)\n+ )\n- if (node.listPath !== void 0) {\n+ if (node.external !== true && node.listPath !== void 0) {\ndocsPages.push({\npath: to,\ncomponent: getListingComponent(\n@@ -45,7 +49,7 @@ function parseMenuNode (node, __path) {\nnode.children.forEach(node => parseMenuNode(node, prefix))\n}\n- else {\n+ else if (node.external !== true) {\ndocsPages.push({\npath: prefix,\ncomponent: () => import(`pages/${prefix.substring(1)}.md`)\n@@ -71,6 +75,8 @@ const routes = [\ncomponent: Layout,\nchildren: docsPages\n},\n+\n+ // externals\n{\npath: '/layout-builder',\ncomponent: () => import('layouts/LayoutBuilder.vue')\n",
        "chatgpt_rag": "style(docs): fix import casing in routes.js file\n\nI have updated the import statements in the routes.js file to ensure consistent casing for the LayoutsLayout and LayoutsRoot components. This change improves code readability and maintainability."
    },
    {
        "msg": "docs(Collapse): Document the defaultOpen prop\nAdds a sentence to describe the defaultOpen prop.",
        "diff": "diff --git a/docs/lib/Components/CollapsePage.js b/docs/lib/Components/CollapsePage.js @@ -68,7 +68,8 @@ export default class CollapsePage extends React.Component {\nwanted without the need to manage/control the state of the component.{' '}\n<code>UncontrolledCollapse</code> does not require an <code>isOpen</code> prop. Instead\npass a <code>toggler</code> prop. The <code>toggler</code> prop is a string which will run\n- querySelectorAll to find dom elements which will trigger toggle.\n+ querySelectorAll to find dom elements which will trigger toggle. The <code>defaultOpen</code>\n+ prop controls the initial state.\n</p>\n<div className=\"docs-example\">\n<UncontrolledCollapseExample />\n",
        "date": "07.10.2020 22:06:43",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "sim_msg": "feat(models): collapsed schema content should be clickable",
        "sim_diff": "diff --git a/src/core/components/model-collapse.jsx b/src/core/components/model-collapse.jsx @@ -90,7 +90,11 @@ export default class ModelCollapse extends Component {\n<span onClick={ this.toggleCollapsed } className=\"pointer\">\n<span className={ \"model-toggle\" + ( this.state.expanded ? \"\" : \" collapsed\" ) }></span>\n</span>\n- { this.state.expanded ? this.props.children :this.state.collapsedContent }\n+ {\n+ this.state.expanded\n+ ? this.props.children\n+ : <span onClick={this.toggleCollapsed} className=\"pointer\">{this.state.collapsedContent}</span>\n+ }\n</span>\n)\n}\n",
        "chatgpt_rag": "feat(docs): added defaultOpen prop to UncontrolledCollapse component"
    },
    {
        "msg": "docs: was used",
        "diff": "diff --git a/website/pages/docs/customization.md b/website/pages/docs/customization.md @@ -129,7 +129,7 @@ module.exports = {\noptions: {\npluginOptions, // the options passed to the plugin ({ name:'pluginname', options: { key: 'value'}})\nrazzleOptions, // the modified options passed to Razzle in the `options` key in `razzle.config.js` (options: { key: 'value'})\n- webpackOptions // the modified options that will be used to configure webpack/ webpack loaders and plugins\n+ webpackOptions // the modified options that was used to configure webpack/ webpack loaders and plugins\n},\npaths // the modified paths that will be used by Razzle.\n}) {\n",
        "date": "28.08.2020 17:41:20",
        "repo": "jaredpalmer/razzle",
        "type": "docs",
        "sim_msg": "chore: CopyWebpackPlugin error on windows due to path separators",
        "sim_diff": "diff --git a/webpack.config.js b/webpack.config.js @@ -116,7 +116,7 @@ module.exports = function (env) {\nglobOptions: { ignore: '**/*.js' },\n},\n{\n- from: path.join(__dirname, `${CODE_SOURCE_DIR}/extension/legacy/**/*.css`),\n+ from: path.join(__dirname, `${CODE_SOURCE_DIR}/extension/legacy/**/*.css`).replace(/\\\\/g, '/'),\nto: path.join(__dirname, `${BUILD_PATH}/web-accessibles`),\ncontext: 'src/extension',\n},\n@@ -124,7 +124,7 @@ module.exports = function (env) {\nfrom: path.join(\n__dirname,\n`${CODE_SOURCE_DIR}/extension/legacy/features/l10n/locales/*.js`\n- ),\n+ ).replace(/\\\\/g, '/'),\nto: path.join(__dirname, `${BUILD_PATH}/web-accessibles`),\ncontext: 'src/extension',\n},\n",
        "chatgpt_rag": "fix: Correct tense in comment for webpackOptions variable"
    },
    {
        "msg": "docs(Form): fix group variations typo",
        "diff": "diff --git a/docs/app/Examples/collections/Form/GroupVariations/index.js b/docs/app/Examples/collections/Form/GroupVariations/index.js @@ -12,7 +12,7 @@ const FormGroupVariationsExamples = () => (\nexamplePath='collections/Form/GroupVariations/FormExampleEvenlyDividedGroup'\n>\n<Message info>\n- When using the <code>widths='even'</code> prop declaration on a <code>Form.Group</code>,\n+ When using the <code>widths='equal'</code> prop declaration on a <code>Form.Group</code>,\nall child <code>Form.Dropdown</code>, <code>Form.Input</code>, <code>Form.Select</code>\ncomponents must be rendered with a <code>fluid</code> prop to work correctly.\n</Message>\n",
        "date": "24.05.2018 15:35:27",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "docs: add description to the checkboxGroup properties",
        "sim_diff": "diff --git a/src/components/CheckboxGroup/index.js b/src/components/CheckboxGroup/index.js @@ -71,17 +71,26 @@ export default class CheckboxGroup extends Component {\n}\nCheckboxGroup.propTypes = {\n- value: PropTypes.arrayOf(PropTypes.string),\n- onChange: PropTypes.func,\n- label: PropTypes.string,\n- required: PropTypes.bool,\n+ /** An Array of checkbox options with label, value and disabled for each checkbox. */\noptions: PropTypes.arrayOf(PropTypes.shape({\n- value: PropTypes.string,\nlabel: PropTypes.string,\n+ value: PropTypes.string,\ndisabled: PropTypes.bool,\n})),\n+ /** Text label for the checkbox group. */\n+ label: PropTypes.string,\n+ /** The list of selected checkboxes. Each array entry contains the value of a selected checkbox.\n+ * The value of each checkbox is set in the options attribute. */\n+ value: PropTypes.arrayOf(PropTypes.string),\n+ /** Set to true if at least one checkbox must be selected. This value defaults to false. */\n+ required: PropTypes.bool,\n+ /** Specifies that an input field must be filled out before submitting the form. */\nerror: PropTypes.node,\n+ /** Text label for the checkbox group. */\n+ onChange: PropTypes.func,\n+ /** A CSS class for the outer element, in addition to the component's base classes. */\nclassName: PropTypes.string,\n+ /** An object with custom style applied to the outer element. */\nstyle: PropTypes.object,\n};\n",
        "chatgpt_rag": "docs: update prop declaration in Form.Group example to 'widths='equal''"
    },
    {
        "msg": "docs(ModalExampleScrollingContent): your description\nTo conform with typescript definition files",
        "diff": "diff --git a/docs/app/Examples/modules/Modal/Variations/ModalExampleScrollingContent.js b/docs/app/Examples/modules/Modal/Variations/ModalExampleScrollingContent.js @@ -27,7 +27,7 @@ const ModalExampleScrollingContent = () => (\n</Modal.Content>\n<Modal.Actions>\n<Button primary>\n- Proceed <Icon name='right chevron' />\n+ Proceed <Icon name='chevron right' />\n</Button>\n</Modal.Actions>\n</Modal>\n",
        "date": "22.05.2018 00:40:06",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "fix(modal): prevent scrolling on .modal-content focus, fixes",
        "sim_diff": "diff --git a/src/components/modal/modal.js b/src/components/modal/modal.js @@ -657,7 +657,7 @@ export default {\ncontent &&\n!content.contains(evt.relatedTarget)\n) {\n- content.focus()\n+ content.focus({preventScroll: true})\n}\n},\n// Resize Listener\n",
        "chatgpt_rag": "chore(modal): update chevron icon name in ModalExampleScrollingContent"
    },
    {
        "msg": "docs(readme): add badges for CDN, NPM, and license + CDN info.",
        "diff": "diff --git a/README.md b/README.md [![reactstrap](https://cloud.githubusercontent.com/assets/399776/13906899/1de62f0c-ee9f-11e5-95c0-c515fee8e918.png)](https://reactstrap.github.io)\n-[![Build Status](https://travis-ci.org/reactstrap/reactstrap.svg?branch=master)](https://travis-ci.org/reactstrap/reactstrap) [![Coverage Status](https://coveralls.io/repos/github/reactstrap/reactstrap/badge.svg?branch=master)](https://coveralls.io/github/reactstrap/reactstrap?branch=master)\n+[![CDNJS](https://img.shields.io/cdnjs/v/reactstrap.svg)](https://cdnjs.com/libraries/reactstrap) [![NPM Version](https://img.shields.io/npm/v/reactstrap.svg?branch=master)](https://www.npmjs.com/package/reactstrap) [![Build Status](https://travis-ci.org/reactstrap/reactstrap.svg?branch=master)](https://travis-ci.org/reactstrap/reactstrap) [![Coverage Status](https://coveralls.io/repos/github/reactstrap/reactstrap/badge.svg?branch=master)](https://coveralls.io/github/reactstrap/reactstrap?branch=master) [![License](https://img.shields.io/npm/l/reactstrap.svg)](https://github.com/reactstrap/reactstrap/blob/master/LICENSE)\n# reactstrap\n@@ -45,6 +45,19 @@ import { Button } from 'reactstrap';\nNow you are ready to use the imported reactstrap components within your component hierarchy defined in the render method. Here is an example [`App.js`](https://gist.github.com/eddywashere/e13033c0e655ab7cda995f8bc77ce40d) redone using reactstrap.\n+### CDN\n+\n+Reactstrap can be included directly in your application's bundle or excluded during compilation and linked directly to a CDN.\n+\n+```html\n+https://cdnjs.cloudflare.com/ajax/libs/reactstrap/4.8.0/reactstrap.min.js\n+```\n+\n+> Note: When using the external CDN library, be sure to include the required dependencies as necessary **prior** to the Reactstrap library:\n+> * [React](https://cdnjs.com/libraries/react)\n+> * [ReactTransitionGroup](https://unpkg.com/react-transition-group/dist/react-transition-group.min.js)\n+\n+\n## About the Project\nThis library contains React Bootstrap 4 components that favor composition and control. The library does not depend on jQuery or Bootstrap javascript. However, [Tether](http://tether.io/) is relied upon for advanced positioning of content like Tooltips, Popovers, and auto-flipping Dropdowns.\n",
        "date": "01.07.2017 11:06:55",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "sim_msg": "docs(readme): add Codecov badge to README.md",
        "sim_diff": "diff --git a/README.md b/README.md [![NPM version](https://img.shields.io/npm/v/html-react-parser.svg)](https://www.npmjs.com/package/html-react-parser)\n[![Build Status](https://github.com/remarkablemark/html-react-parser/workflows/build/badge.svg?branch=master)](https://github.com/remarkablemark/html-react-parser/actions?query=workflow%3Abuild)\n-[![Coverage Status](https://coveralls.io/repos/github/remarkablemark/html-react-parser/badge.svg?branch=master)](https://coveralls.io/github/remarkablemark/html-react-parser?branch=master)\n+[![codecov](https://codecov.io/gh/remarkablemark/html-react-parser/branch/master/graph/badge.svg?token=wosFd1DBIR)](https://codecov.io/gh/remarkablemark/html-react-parser)\n[![Dependency status](https://david-dm.org/remarkablemark/html-react-parser.svg)](https://david-dm.org/remarkablemark/html-react-parser)\n[![NPM downloads](https://img.shields.io/npm/dm/html-react-parser.svg?style=flat-square)](https://www.npmjs.com/package/html-react-parser)\n[![Discord](https://img.shields.io/discord/422421589582282752.svg?label=&logo=discord&logoColor=ffffff&color=7389D8&labelColor=6A7EC2)](https://discord.gg/njExwXdrRJ)\n@@ -477,8 +477,8 @@ Then update your Webpack config to:\nmodule.exports = {\n// ...\nresolve: {\n- mainFields: ['browser', 'main', 'module'],\n- },\n+ mainFields: ['browser', 'main', 'module']\n+ }\n};\n```\n",
        "chatgpt_rag": "docs(readme): add CDNJS and NPM Version badges to README.md"
    },
    {
        "msg": "docs: update radio/checkbox examples to follow docs\n<input> and <label> should be siblings\n<input> should before after <label>",
        "diff": "diff --git a/docs/lib/examples/InlineCheckboxes.js b/docs/lib/examples/InlineCheckboxes.js @@ -5,13 +5,15 @@ const Example = (props) => {\nreturn (\n<Form>\n<FormGroup check inline>\n- <Label check>\n- <Input type=\"checkbox\" /> Some input\n+ <Input id=\"InlineCheckboxes-checkbox-1\" type=\"checkbox\" />\n+ <Label for=\"InlineCheckboxes-checkbox-1\" check>\n+ Some input\n</Label>\n</FormGroup>\n<FormGroup check inline>\n- <Label check>\n- <Input type=\"checkbox\" /> Some other input\n+ <Input id=\"InlineCheckboxes-checkbox-2\" type=\"checkbox\" />\n+ <Label for=\"InlineCheckboxes-checkbox-2\" check>\n+ Some other input\n</Label>\n</FormGroup>\n</Form>\n@@ -19,4 +21,3 @@ const Example = (props) => {\n}\nexport default Example;\n-\n\\ No newline at end of file\n",
        "date": "11.12.2020 15:41:19",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "sim_msg": "refactor(checkbox): variablize the icon",
        "sim_diff": "diff --git a/package/src/components/Checkbox/v1/Checkbox.js b/package/src/components/Checkbox/v1/Checkbox.js @@ -10,21 +10,24 @@ const StyledDiv = styled.div`\n/* eslint-disable max-len */\n/* eslint-disable quotes */\n-const StyledInput = styled.input`\n- opacity: 0;\n- + label::after {\n- content: \" \";\n- }\n- &:checked + label::after {\n- background-image: url(\"data:image/svg+xml; utf8,\n- <svg\n+const checkboxIcon = `<svg\nxmlns='http://www.w3.org/2000/svg'\nviewBox='0 0 512 512'\n>\n<path\nd='M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z'>\n</path>\n- </svg>\");\n+ </svg>`;\n+/* eslint-enable quotes */\n+/* eslint-enable max-len */\n+\n+const StyledInput = styled.input`\n+ opacity: 0;\n+ + label::after {\n+ content: \" \";\n+ }\n+ &:checked + label::after {\n+ background-image: url(\"data:image/svg+xml; utf8,${checkboxIcon}\");\n}\n&:focus + label::before {\noutline: ${applyTheme(\"checkboxFocusStyle\")};\n@@ -40,8 +43,6 @@ const StyledInput = styled.input`\ncursor: not-allowed;\n}\n`;\n-/* eslint-enable quotes */\n-/* eslint-enable max-len */\nconst StyledLabel = styled.label`\nposition: relative;\n",
        "chatgpt_rag": "refactor(checkbox): update inline checkboxes structure and labels for better accessibility"
    },
    {
        "msg": "docs(Theming): use plugin",
        "diff": "diff --git a/docs/src/pages/Theming.mdx b/docs/src/pages/Theming.mdx @@ -80,14 +80,14 @@ yarn remove semantic-ui semantic-ui-css\n### Install required dependencies\n-Create React App does not support LESS out of the box, we and propose to use [`@craco/craco`](https://www.npmjs.com/package/@craco/craco) to add it and avoid `eject`. You have to install required packages:\n+Create React App does not support LESS out of the box, we and propose to use [`@craco/craco`](https://www.npmjs.com/package/@craco/craco) to add its support and avoid `eject`. You have to install required packages:\n```bash\n-npm install @craco/craco craco-less semantic-ui-less --save-dev\n+npm install @craco/craco @semantic-ui-react/craco-less semantic-ui-less --save-dev\n```\n```bash\n-yarn add @craco/craco craco-less semantic-ui-less --dev\n+yarn add @craco/craco @semantic-ui-react/craco-less semantic-ui-less --dev\n```\nAnd then update your `package.json` and create `craco.config.js`:\n@@ -104,39 +104,8 @@ And then update your `package.json` and create `craco.config.js`:\n```\n```jsx label=craco.config.js\n-const { getLoader, loaderByName, throwUnexpectedConfigError } = require('@craco/craco')\n-\nmodule.exports = {\n- webpack: {\n- alias: {\n- '../../theme.config$': require('path').join(__dirname, '/src/semantic-ui/theme.config'),\n- },\n- },\n- plugins: [\n- { plugin: require('craco-less') },\n- {\n- plugin: {\n- overrideWebpackConfig: ({ context, webpackConfig }) => {\n- const { isFound, match: fileLoaderMatch } = getLoader(\n- webpackConfig,\n- loaderByName('file-loader'),\n- )\n-\n- if (!isFound) {\n- throwUnexpectedConfigError({\n- message: `Can't find file-loader in the ${context.env} webpack config!`,\n- })\n- }\n-\n- fileLoaderMatch.loader.exclude.push(/theme.config$/)\n- fileLoaderMatch.loader.exclude.push(/\\.variables$/)\n- fileLoaderMatch.loader.exclude.push(/\\.overrides$/)\n-\n- return webpackConfig\n- },\n- },\n- },\n- ],\n+ plugins: [{ plugin: require('@semantic-ui-react/craco-less') }],\n}\n```\n",
        "date": "29.08.2019 15:47:10",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "test: Update fether-react test command per Axel recommendation in PR comments",
        "sim_diff": "diff --git a/packages/fether-react/package.json b/packages/fether-react/package.json \"start\": \"npm-run-all -p start-*\",\n\"start-css\": \"npm run build-css -- --watch --recursive\",\n\"start-js\": \"cross-env SKIP_PREFLIGHT_CHECK=true BROWSER=none craco start --react-scripts ../../node_modules/react-scripts\",\n- \"test\": \"ln -sf ../../../node_modules/react-scripts node_modules/ && cross-env SKIP_PREFLIGHT_CHECK=true craco test\"\n+ \"test\": \"ln -s ../../../node_modules/react-scripts node_modules/ && cross-env SKIP_PREFLIGHT_CHECK=true craco test; EXIT_CODE=$?; rm node_modules/react-scripts; exit $EXIT_CODE\"\n},\n\"dependencies\": {\n\"@craco/craco\": \"^3.3.1\",\n",
        "chatgpt_rag": "build: Update Theming.mdx to use @semantic-ui-react/craco-less for LESS support in Create React App"
    },
    {
        "msg": "docs: updated installed version",
        "diff": "diff --git a/package.json b/package.json \"@babel/plugin-transform-modules-commonjs\": \"^7.7.4\",\n\"@babel/plugin-transform-parameters\": \"^7.7.4\",\n\"@babel/preset-env\": \"^7.9.5\",\n- \"@chakra-ui/vue\": \"^0.5.3\",\n+ \"@chakra-ui/vue\": \"^0.5.4\",\n\"@commitlint/cli\": \"^8.2.0\",\n\"@commitlint/config-conventional\": \"^8.2.0\",\n\"@fortawesome/free-brands-svg-icons\": \"^5.12.0\",\n",
        "date": "16.05.2020 21:05:46",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "sim_msg": "chore(docs): upgrade pwa module to 3.0.0",
        "sim_diff": "diff --git a/package.json b/package.json \"@babel/preset-env\": \"^7.3.1\",\n\"@babel/standalone\": \"^7.3.2\",\n\"@nuxtjs/google-analytics\": \"^2.0.3\",\n- \"@nuxtjs/pwa\": \"^2.6.0\",\n+ \"@nuxtjs/pwa\": \"^3.0.0-beta.6\",\n\"@vue/test-utils\": \"^1.0.0-beta.29\",\n\"autoprefixer\": \"^9.4.7\",\n\"babel-core\": \"^7.0.0-bridge.0\",\n\"node-sass\": \"^4.11.0\",\n\"nuxt\": \"^2.4.3\",\n\"postcss-cli\": \"^6.1.1\",\n- \"prettier\": \"1.14.3\",\n+ \"prettier\": \"1.16.4\",\n\"rollup\": \"^1.1.2\",\n\"rollup-plugin-babel\": \"^4.3.2\",\n\"rollup-plugin-commonjs\": \"^9.2.0\",\n",
        "chatgpt_rag": "chore(deps): update chakra-ui/vue to version 0.5.4"
    },
    {
        "msg": "docs(List): fix duplicate Types sections",
        "diff": "diff --git a/docs/app/Examples/elements/List/Variations/index.js b/docs/app/Examples/elements/List/Variations/index.js @@ -5,7 +5,7 @@ import ComponentExample from 'docs/app/Components/ComponentDoc/ComponentExample'\nimport ExampleSection from 'docs/app/Components/ComponentDoc/ExampleSection'\nconst ListVariations = () => (\n- <ExampleSection title='Types'>\n+ <ExampleSection title='Variations'>\n<ComponentExample\ntitle='Horizontal'\ndescription='A list can be formatted to have items appear horizontally'\n",
        "date": "17.04.2018 10:25:55",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "chore: expose List constants and SelectAll",
        "sim_diff": "diff --git a/packages/components/src/List/ListComposition/index.js b/packages/components/src/List/ListComposition/index.js @@ -8,20 +8,24 @@ import SortBy from './SortBy';\nimport TextFilter from './TextFilter';\nimport Toolbar from './Toolbar';\nimport VList from './VList';\n+import SelectAll from '../Toolbar/SelectAll';\nimport { sortCollection, useCollectionSort } from './Manager/hooks/useCollectionSort.hook';\nimport { filterCollection, useCollectionFilter } from './Manager/hooks/useCollectionFilter.hook';\nimport useCollectionSelection from './Manager/hooks/useCollectionSelection.hook';\nimport useCollectionActions from './Manager/hooks/useCollectionActions.hook';\n+import * as constants from './constants';\nexport default {\n+ constants,\n+ ColumnChooser,\nDisplayMode,\nItemsNumber,\nLazyLoadingList,\nInfiniteScrollList: LazyLoadingList,\nManager,\n+ SelectAll,\nSortBy,\nTextFilter,\n- ColumnChooser,\nToolbar,\nVList,\n};\n",
        "chatgpt_rag": "chore: update title from 'Types' to 'Variations' in ListVariations component"
    },
    {
        "msg": "docs(Input): add min and max to number input",
        "diff": "diff --git a/docs/lib/examples/InputGroupOverview.js b/docs/lib/examples/InputGroupOverview.js @@ -37,7 +37,7 @@ const Example = (props) => {\n<br />\n<InputGroup>\n<InputGroupAddon addonType=\"prepend\">$</InputGroupAddon>\n- <Input placeholder=\"Amount\" type=\"number\" step=\"1\" />\n+ <Input placeholder=\"Amount\" min={0} max={100} type=\"number\" step=\"1\" />\n<InputGroupAddon addonType=\"append\">.00</InputGroupAddon>\n</InputGroup>\n</div>\n",
        "date": "03.04.2019 20:54:50",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "sim_msg": "docs(InputGroup): labelText and helperText added",
        "sim_diff": "diff --git a/src/components/InputGroup/InputGroup.stories.js b/src/components/InputGroup/InputGroup.stories.js @@ -16,7 +16,8 @@ export default {\nexport const Regular = (args) => (\n<InputGroup\ndefaultSelected=\"default-selected\"\n- legend=\"Group Legend\"\n+ labelText=\"Group labelText\"\n+ helperText=\"Helper text\"\n{...args}>\n<RadioButton\nname=\"radio\"\n@@ -42,7 +43,8 @@ export const Regular = (args) => (\nexport const withCheckbox = (args) => (\n<InputGroup\ndefaultSelected=\"default-selected\"\n- legend=\"Group Legend\"\n+ labelText=\"Group labelText\"\n+ helperText=\"Helper text\"\n{...args}>\n<Checkbox name=\"checkbox-1\" value=\"standard\" labelText=\"Checkbox label 1\" />\n<Checkbox\n@@ -66,7 +68,8 @@ export const vertical = (args) => (\n<>\n<InputGroup\ndefaultSelected=\"default-selected\"\n- legend=\"Group Legend\"\n+ labelText=\"Group labelText\"\n+ helperText=\"Helper text\"\nvertical\n{...args}>\n<Checkbox\n",
        "chatgpt_rag": "docs(InputGroupOverview): Added min and max attributes to Input element"
    },
    {
        "msg": "docs: use consistent ext example\n[skip ci]\nRef",
        "diff": "diff --git a/doc/sample-nodemon.md b/doc/sample-nodemon.md @@ -22,7 +22,7 @@ Here is an example (of a contrived) `nodemon.json` file:\n\"env\": {\n\"NODE_ENV\": \"development\"\n},\n- \"ext\": \"js json\"\n+ \"ext\": \"js,json\"\n}\nNote that the `ignore` used is nodemon's default ignore rule. The complete defaults can be seen here: [defaults.js](https://github.com/remy/nodemon/blob/master/lib/config/defaults.js).\n",
        "date": "04.04.2018 09:15:08",
        "repo": "remy/nodemon",
        "type": "docs",
        "sim_msg": "feat(scripts/t9n): compile one JSON file for each lang",
        "sim_diff": "diff --git a/package.json b/package.json \"scripts\": {\n\"test\": \"echo \\\"Error: no test specified\\\" && exit 1\",\n\"compile\": \"node scripts/rulesToJSON.js && node scripts/personasToJSON.js && node scripts/documentationToJSON.js\",\n- \"translate\": \"node scripts/translate-rules.js\"\n+ \"translate\": \"node scripts/translate-rules.js\",\n+ \"compile:rules\": \"node scripts/rulesToJSON.js\"\n},\n\"repository\": {\n\"type\": \"git\",\n",
        "chatgpt_rag": "style(doc): update nodemon.json example to use comma-separated values for ext"
    },
    {
        "msg": "docs(stack.mdx): documentation for the Stack component",
        "diff": "diff --git a/packages/chakra-ui-docs/docs/stack.mdx b/packages/chakra-ui-docs/docs/stack.mdx +import SEO from '../components/SEO'\n+\n+<SEO\n+ title=\"Stack\"\n+ description=\"Stack is a layout utility component that makes it easy to stack elements together and apply a space between them.\"\n+/>\n+\n# Stack\n+\n+Stack is a layout utility component that makes it easy to stack elements together and apply a space between them. It composes the [Flex](/flex) component.\n+\n+## Import\n+\n+```js\n+import { CStack } from '@chakra-ui/vue'\n+```\n+\n+By default, each item is stacked vertically. Stack clones it's children and passes the spacing to them using `margin-bottom` or `margin-right`.\n+\n+## Usage\n+\n+```vue live=true\n+<c-stack :spacing=\"5\">\n+ <c-box :p=\"5\" shadow=\"md\" border-width=\"1px\">\n+ <c-heading>See the Vue</c-heading>\n+ <c-text :mt=\"4\">Vue makes front-end development a breeze.</c-text>\n+ </c-box>\n+ <c-box :p=\"5\" shadow=\"md\" border-width=\"1px\">\n+ <c-heading>Go Nuxt!</c-heading>\n+ <c-text :mt=\"4\">Nuxt makes writing Vue even easier.</c-text>\n+ </c-box>\n+</c-stack>\n+```\n+\n+## Stack items horizontally\n+\n+To stack `CStack` children horizontally, pass the `isInline` prop or `direction` and set it to row.\n+\n+Optionally, you can use align and justify to adjust the alignment and distribution of the items.\n+\n+```vue live=true\n+<c-stack :spacing=\"5\" is-inline>\n+ <c-box :p=\"5\" shadow=\"md\" border-width=\"1px\">\n+ <c-heading>See the Vue</c-heading>\n+ <c-text :mt=\"4\">Vue makes front-end development a breeze.</c-text>\n+ </c-box>\n+ <c-box :p=\"5\" shadow=\"md\" border-width=\"1px\">\n+ <c-heading>Go Nuxt!</c-heading>\n+ <c-text :mt=\"4\">Nuxt makes writing Vue even easier.</c-text>\n+ </c-box>\n+</c-stack>\n+```\n+\n+## Reverse display order of items\n+\n+Pass the `isReversed` prop or set `direction` to `row-reverse` or `column-reverse`.\n+\n+```vue live=true\n+<c-stack :spacing=\"5\" is-reversed>\n+ <c-box :p=\"5\" shadow=\"md\" border-width=\"1px\">\n+ <c-heading>See the Vue</c-heading>\n+ <c-text :mt=\"4\">Vue makes front-end development a breeze.</c-text>\n+ </c-box>\n+ <c-box :p=\"5\" shadow=\"md\" border-width=\"1px\">\n+ <c-heading>Go Nuxt!</c-heading>\n+ <c-text :mt=\"4\">Nuxt makes writing Vue even easier.</c-text>\n+ </c-box>\n+</c-stack>\n+```\n+\n+## Props\n+\n+| Name | Type | Default | Description |\n+| -------------------- | ----------------------------- | ------- | ------------------------------------------------------------------------------------------------------------------------ |\n+| `isInline` | `boolean` | false | If `true` the items will be stacked horizontally. |\n+| `isReversed` | `boolean` | false | If `true` the items will be displayed in reverse order. |\n+| `direction` | `FlexProps[\"flexDirection\"]` | | The direction to stack the items. |\n+| `spacing` | `StyledSystem.MarginProps` | | The space between each stack item |\n+| `align` | `FlexProps[\"alignItems\"]` | | The alignment of the stack item. Similar to `align-items` |\n+| `justify` | `FlexProps[\"justifyContent\"]` | | The distribution of the stack item. Similar to `justify-content` |\n+| `shouldWrapChildren` | `boolean` | | If `true`, the children will be wrapped in a `Box` with `display: inline-block`, and the Box will take the spacing props |\n+\n+## Slots\n+\n+| Name | Description |\n+| ------- | ------------------------ |\n+| default | The content of the stack |\n",
        "date": "02.05.2020 22:27:16",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "sim_msg": "feat: Default align tabs to center for ios theme",
        "sim_diff": "diff --git a/src/components/tab/QTabs.vue b/src/components/tab/QTabs.vue import { width, css, cssTransform } from '../../utils/dom'\nimport { debounce } from '../../utils/debounce'\nimport { QIcon } from '../icon'\n+import { current as theme } from '../../features/theme'\nconst\nscrollNavigationSpeed = 5, // in pixels\n@@ -77,7 +78,7 @@ export default {\nvalue: String,\nalign: {\ntype: String,\n- default: 'left',\n+ default: theme === 'ios' ? 'center' : 'left',\nvalidator: v => ['left', 'center', 'right', 'justify'].includes(v)\n},\nposition: {\n",
        "chatgpt_rag": "feat: Added SEO component to Stack documentation\nfeat: Added information about stacking items horizontally in Stack documentation\nfeat: Added details about reversing the display order of items in Stack documentation\nfeat: Included props and slots information in Stack documentation"
    },
    {
        "msg": "docs: :memo: more winget stuff",
        "diff": "diff --git a/sheets/winget.md b/sheets/winget.md @@ -6,10 +6,26 @@ published: true\nslug: winget\n---\n-## Upgrade All Apps\n+## Upgrade all packages\n-The `--all` option allows you to upgrade all apps:\n+The `--all` option allows you to upgrade all packages:\n```bash\nwinget upgrade --all\n```\n+\n+## List installed packages\n+\n+Listing installed packages will also detail which ones can be updated.\n+\n+```bash\n+winget list\n+```\n+\n+## Update specific package\n+\n+To update a specific package add the package `--id`\n+\n+```bash\n+winget upgrade --id VideoLAN.VLC\n+```\n",
        "date": "26.10.2021 07:19:29",
        "repo": "spences10/cheat-sheets",
        "type": "docs",
        "sim_msg": "feat(server.dashboard.technical-details): check if upgradable\nref:",
        "sim_diff": "diff --git a/packages/manager/apps/dedicated/client/app/dedicated/server/dashboard/technical-details/technical-details.html b/packages/manager/apps/dedicated/client/app/dedicated/server/dashboard/technical-details/technical-details.html </oui-tile-description>\n</oui-tile-definition>\n<oui-tile-button\n- ng-if=\"$ctrl.upgradeWithTicketAvailable\"\n+ ng-if=\"$ctrl.isRamUpgradable()\"\non-click=\"$ctrl.goToManualUpgrade('ram')\"\n>\n<span\n</oui-tile-description>\n</oui-tile-definition>\n<oui-tile-button\n- ng-if=\"$ctrl.upgradeWithTicketAvailable\"\n+ ng-if=\"$ctrl.isDisksUpgradable()\"\non-click=\"$ctrl.goToManualUpgrade('storage')\"\n>\n<span\n",
        "chatgpt_rag": "refactor(sheets): update terminology from 'apps' to 'packages'\nfeat(sheets): add instructions for listing installed packages\nfeat(sheets): add instructions for updating specific package"
    },
    {
        "msg": "docs: Reposition Code Sponsor\nBy having the sponsor embed code at the bottom, it ends up being more effective to help fund the project.",
        "diff": "diff --git a/README.md b/README.md # nodemon\n-<a href=\"https://app.codesponsor.io/link/wnz2te8CdfKZ8wMjGUpi8EZG/remy/nodemon\" rel=\"nofollow\"><img src=\"https://app.codesponsor.io/embed/wnz2te8CdfKZ8wMjGUpi8EZG/remy/nodemon.svg\" style=\"width: 888px; height: 68px;\" alt=\"Sponsor\" /></a>\n-\nFor use during development of a node.js based application.\nnodemon will watch the files in the directory in which nodemon was started, and if any files change, nodemon will automatically restart your node application.\n@@ -291,3 +289,5 @@ See the [FAQ](https://github.com/remy/nodemon/blob/master/faq.md) and please add\n# License\nMIT [http://rem.mit-license.org](http://rem.mit-license.org)\n+\n+<a href=\"https://app.codesponsor.io/link/wnz2te8CdfKZ8wMjGUpi8EZG/remy/nodemon\" rel=\"nofollow\" target=\"_blank\"><img src=\"https://app.codesponsor.io/embed/wnz2te8CdfKZ8wMjGUpi8EZG/remy/nodemon.svg\" style=\"width: 888px; height: 68px;\" alt=\"Sponsor\" /></a>\n",
        "date": "15.09.2017 05:28:19",
        "repo": "remy/nodemon",
        "type": "docs",
        "sim_msg": "docs: add ref to node http2 bug",
        "sim_diff": "diff --git a/README.md b/README.md @@ -21,7 +21,7 @@ This is the mono-repo for the following related projects\n## Supported Node.js versions\n-Any LTS version.\n+Any LTS version. It is **not** recommended to use Node.js 12.17.x,12.18.x or 12.19.x due to an http2 bug.\n## Development\n",
        "chatgpt_rag": "docs: remove duplicate codesponsor link"
    },
    {
        "msg": "docs(layouts): fix typo in GridLayout",
        "diff": "diff --git a/docs/app/Layouts/GridLayout.js b/docs/app/Layouts/GridLayout.js @@ -82,7 +82,7 @@ const GridLayout = () => (\n<Header as='h3'>Text Container</Header>\n<p>\nSometimes you just need to put a single column of centered text on a page. A <code>text container</code> is\n- a special type of container optimized for a single flowing column of text, like this instructions on this page.\n+ a special type of container optimized for a single flowing column of text, like these instructions on this page.\n</p>\n<p>Text containers <b>do not need to use grids</b> and help simplify basic page layouts.</p>\n",
        "date": "01.04.2018 19:39:50",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "chore(docs): Update grid docs to describe Col system",
        "sim_diff": "diff --git a/src/stories/2-components/01-Layout.stories.js b/src/stories/2-components/01-Layout.stories.js @@ -84,7 +84,21 @@ containerNarrow.story = {\n}\nexport const grids = () => (\n- <div className={grid.rowComponent}>\n+ <>\n+ <Row>\n+ <Col width={[4, 3, 3]}>\n+ <div className={grid.col}>{`<Col width={[4, 3, 3]}>`}</div>\n+ </Col>\n+ <Col width={[4, 3, 3]}>\n+ <div className={grid.col}>{`<Col width={[4, 3, 3]}>`}</div>\n+ </Col>\n+ <Col width={[4, 3, 3]}>\n+ <div className={grid.col}>{`<Col width={[4, 3, 3]}>`}</div>\n+ </Col>\n+ <Col width={[4, 3, 3]}>\n+ <div className={grid.col}>{`<Col width={[4, 3, 3]}>`}</div>\n+ </Col>\n+ </Row>\n<Row>\n<Col width={[1, 3, 6]}>\n<div className={grid.col}>{`<Col width={[1, 3, 6]}>`}</div>\n@@ -103,9 +117,37 @@ export const grids = () => (\n>{`<Col width={[1, 3, 4]} paddingLeft={[6, 8, 32]}>`}</div>\n</Col>\n</Row>\n- </div>\n+ <h4>Things to know</h4>\n+ <p>\n+ The grid system has a predfined number of cols per row for each screen\n+ size.\n+ </p>\n+ <ul>\n+ <li>Small - 4 cols</li>\n+ <li>Medium - 6 cols</li>\n+ <li>Large - 12 cols</li>\n+ </ul>\n+ <p>\n+ The <code>width</code> prop of the <code>Col</code> component takes an\n+ array which specifies the number of cols the item should take up for each\n+ screensize.\n+ </p>\n+ <code>\n+ {\n+ 'width={[<COLS_ON_SMALL_SCREEN>,<COLS_ON_MEDIUM_SCREEN>,<COLS_ON_LARGE_SCREEN>]}'\n+ }\n+ </code>\n+ </>\n)\n+grid.story = {\n+ parameters: {\n+ info: {\n+ text: 'Use the mixin `spacer([number]) to define margins and padding.',\n+ },\n+ },\n+}\n+\nexport const gridWithSass = () => (\n<div>\n<p>\n",
        "chatgpt_rag": "chore(docs): Update text container instructions in GridLayout documentation"
    },
    {
        "msg": "docs(Icon): fix selector for input",
        "diff": "diff --git a/docs/app/Components/IconSearch/IconSearch.js b/docs/app/Components/IconSearch/IconSearch.js @@ -57,7 +57,7 @@ export default class IconSearch extends Component {\nstate = { search: '', includeSimilar: true }\ncomponentDidMount() {\n- const input = document.querySelector('#docs-icon-set-input input')\n+ const input = document.querySelector('#docs-icon-set-input')\ninput.focus()\n}\n",
        "date": "01.06.2017 08:34:03",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "fix(Search): reset filters on search/reset (otherwise old buckets are preserved)",
        "sim_diff": "diff --git a/components/Search/index.js b/components/Search/index.js @@ -36,7 +36,8 @@ class Search extends Component {\nthis.props.onSearch(true)\nthis.setState({\ndirty: false,\n- submittedQuery: this.state.searchQuery\n+ submittedQuery: this.state.searchQuery,\n+ filters: []\n})\n}\n@@ -45,7 +46,8 @@ class Search extends Component {\nthis.setState({\ndirty: false,\nsearchQuery: '',\n- submittedQuery: ''\n+ submittedQuery: '',\n+ filters: []\n})\n}\n",
        "chatgpt_rag": "feat(IconSearch): focus on whole input container instead of just input element"
    },
    {
        "msg": "docs: sort components alphabetically",
        "diff": "diff --git a/docs/lib/UI/Content.js b/docs/lib/UI/Content.js @@ -17,7 +17,7 @@ function Content({ items, children, title }) {\n<div className=\"docs-sidebar mb-3\">\n<h1 className=\"h5\">{title}</h1>\n<Nav className=\"flex-column\">\n- {items.map(item => (\n+ {items.sort((a, b) => a.name.localeCompare(b.name)).map(item => (\n<NavItem key={item.to}>\n<NavLink tag={Link} to={item.to} activeClassName=\"active\">\n{item.name}\n",
        "date": "23.04.2019 15:30:40",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "sim_msg": "docs: add head to landing page",
        "sim_diff": "diff --git a/pages/docs.js b/pages/docs.js +import Head from \"next/head\";\nimport Link from \"next/link\";\nimport { useState } from \"react\";\nimport classnames from \"classnames\";\n@@ -101,6 +102,9 @@ function ContentArea(props) {\nexport default function DocsLayout({ posts, data, content }) {\nreturn (\n<div className=\"flex w-screen h-screen min-h-screen w-screen overflow-hidden\">\n+ <Head>\n+ <title>Documentation / Urbit.org</title>\n+ </Head>\n<Sidebar>{childPages(\"/docs\", posts.children)}</Sidebar>\n<ContentArea breadcrumbs={breadcrumbs(posts, [])} title={data.title}>\n<Markdown post={{ content: content }} />\n",
        "chatgpt_rag": "docs: sort items alphabetically in sidebar"
    },
    {
        "msg": "docs(typo): Fix misspelling in documentation (Alerts)",
        "diff": "diff --git a/docs/lib/Components/AlertsPage.js b/docs/lib/Components/AlertsPage.js @@ -99,7 +99,7 @@ export default class AlertsPage extends React.Component {\n<SectionTitle>Alerts without fade</SectionTitle>\n<p>\n- Fade can be disbaled using <code>fade=false</code>.\n+ Fade can be disabled using <code>fade=false</code>.\n</p>\n<div className=\"docs-example\">\n<AlertFadelessExample />\n",
        "date": "29.12.2018 13:35:15",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "sim_msg": "refactor(AlertEditor.js): CSS styling of the description textarea\nAdded an inline style to increase the height so that 4 lines were visible",
        "sim_diff": "diff --git a/lib/alerts/components/AlertEditor.js b/lib/alerts/components/AlertEditor.js @@ -326,7 +326,8 @@ export default class AlertEditor extends Component<Props> {\nplaceholder='Detailed description of alert...'\ndefaultValue={alert.description}\nname='description'\n- onChange={this._onChange} />\n+ onChange={this._onChange}\n+ style={{ minHeight: '89px' }} />\n</FormGroup>\n</Col>\n<Col xs={12}>\n",
        "chatgpt_rag": "style(AlertsPage.js): Fixed typo in fade disable message\nCorrected the spelling of \"disabled\" in the fade disable message to improve clarity."
    },
    {
        "msg": "docs(index): don't use prod libs in dev",
        "diff": "diff --git a/docs/app/index.ejs b/docs/app/index.ejs <script src=\"//cdn.jsdelivr.net/faker.js/<%= htmlWebpackPlugin.options.versions.faker %>/faker.min.js\"></script>\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/js-beautify/<%= htmlWebpackPlugin.options.versions.jsBeautify %>/beautify-html.min.js\"></script>\n<!-- Use unminified React when not in production so we get errors and warnings -->\n- <script src=\"//cdnjs.cloudflare.com/ajax/libs/prop-types/<%= htmlWebpackPlugin.options.versions.propTypes %>/prop-types.min.js\"></script>\n+ <script src=\"//cdnjs.cloudflare.com/ajax/libs/prop-types/<%= htmlWebpackPlugin.options.versions.propTypes %>/prop-types<%= __PROD__ ? 'min' : '' %>.js\"></script>\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/react/<%= htmlWebpackPlugin.options.versions.react %>/umd/react<%= __PROD__ ? '.production.min' : '.development' %>.js\"></script>\n- <script src=\"https://cdnjs.cloudflare.com/ajax/libs/react-dom/<%= htmlWebpackPlugin.options.versions.reactDOM %>/umd/react-dom.production.min.js\"></script>\n- <script src=\"//cdnjs.cloudflare.com/ajax/libs/react-dom/<%= htmlWebpackPlugin.options.versions.reactDOM %>/umd/react-dom-server.browser.production.min.js\"></script>\n+ <script src=\"https://cdnjs.cloudflare.com/ajax/libs/react-dom/<%= htmlWebpackPlugin.options.versions.reactDOM %>/umd/react-dom<%= __PROD__ ? '.production.min' : '.development' %>.js\"></script>\n+ <script src=\"//cdnjs.cloudflare.com/ajax/libs/react-dom/<%= htmlWebpackPlugin.options.versions.reactDOM %>/umd/react-dom-server.browser<%= __PROD__ ? '.production.min' : '.development' %>.js\"></script>\n<script src=\"//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js\"></script>\n<style>\nhtml, body {\n",
        "date": "18.10.2017 23:01:07",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "docs: fix github stars button",
        "sim_diff": "diff --git a/website/src/html.js b/website/src/html.js @@ -10,11 +10,6 @@ if (process.env.NODE_ENV === `production`) {\n}\n}\n-const JS_NPM_URLS = [\n- 'https://buttons.github.io/buttons.js',\n- '//unpkg.com/docsearch.js@2.4.1/dist/cdn/docsearch.min.js'\n-];\n-\nmodule.exports = class HTML extends React.Component {\nrender() {\nlet css;\n@@ -27,8 +22,6 @@ module.exports = class HTML extends React.Component {\n);\n}\n- const js = JS_NPM_URLS.map(src => <script key={src} src={src} />);\n-\nreturn (\n<html {...this.props.htmlAttributes}>\n<head>\n@@ -78,7 +71,8 @@ module.exports = class HTML extends React.Component {\n/>\n{this.props.postBodyComponents}\n<Gitter room=\"netlify/NetlifyCMS\" />\n- {js}\n+ <script async defer src=\"https://buttons.github.io/buttons.js\"></script>\n+ <script src=\"//unpkg.com/docsearch.js@2.4.1/dist/cdn/docsearch.min.js\"></script>\n</body>\n</html>\n);\n",
        "chatgpt_rag": "fix: update prop-types script tag to include minified version based on environment variable"
    },
    {
        "msg": "docs(Icon): add FontAwesome attribution",
        "diff": "diff --git a/docs/app/Components/IconSearch/IconSearch.js b/docs/app/Components/IconSearch/IconSearch.js @@ -144,8 +144,19 @@ export default class IconSearch extends Component {\nrender() {\nconst { includeSimilar } = this.state\nreturn (\n- <Grid columns={1} padded textAlign='center' style={gridStyle}>\n+ <Grid columns={1} padded style={gridStyle}>\n<Grid.Column>\n+ <Header as='h2'>Icon Set</Header>\n+ <p>An icon set contains an arbitrary number of glyphs.</p>\n+\n+ <Message>\n+ Semantic includes a complete port of{' '}\n+ <a href='http://fontawesome.io/whats-new/' rel='noopener noreferrer' target='_blank'>Font Awesome 4.7.0</a>\n+ {' '}designed by{' '}\n+ <a href='http://www.twitter.com/davegandy' rel='noopener noreferrer'>Dave Gandy</a> for its standard icon\n+ set.\n+ </Message>\n+\n<Form>\n<Form.Group inline>\n<Form.Input\n@@ -163,7 +174,7 @@ export default class IconSearch extends Component {\n</Form.Group>\n</Form>\n</Grid.Column>\n- <Grid.Column>\n+ <Grid.Column textAlign='center'>\n{this.renderIcons()}\n</Grid.Column>\n</Grid>\n",
        "date": "10.08.2017 23:28:13",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "chore: fix story",
        "sim_diff": "diff --git a/src/components/Icon/__stories__/icon.stories.js b/src/components/Icon/__stories__/icon.stories.js @@ -16,7 +16,7 @@ export const Icons = () => {\n<>\n<FlexLayout className=\"main-icon-story\">\n<div className=\"single-icon-wrapper\" style={{ color: \"var(--primary-color)\" }}>\n- <Icon iconType={Icon.type.SVG} icon={() => <Bolt />} iconLabel=\"my bolt svg icon\" clickable iconSize={16} />\n+ <Icon iconType={Icon.type.SVG} icon={Bolt} iconLabel=\"my bolt svg icon\" clickable iconSize={16} />\n</div>\n<DescriptionLabel>SVG Icon</DescriptionLabel>\n</FlexLayout>\n@@ -36,7 +36,14 @@ export const Icons = () => {\nclassName=\"icon-story-custom-icon\"\n/>\n</div>\n- <DescriptionLabel className=\"icon-story-inline-style\">Custom SVG Icon</DescriptionLabel>\n+ <DescriptionLabel className=\"icon-story-inline-style\">\n+ SVG Icon custom -{\" \"}\n+ <Link\n+ componentClassName={\"icon-story-link\"}\n+ href=\"https://github.com/gilbarbara/react-inlinesvg\"\n+ text=\"react-inlinesvg\"\n+ />\n+ </DescriptionLabel>\n</FlexLayout>\n<FlexLayout className=\"main-icon-story\">\n<div className=\"single-icon-wrapper\">\n@@ -47,7 +54,7 @@ export const Icons = () => {\n/>\n</div>\n<DescriptionLabel className=\"icon-story-inline-style\">\n- Deprecated custom -{\" \"}\n+ Deprecated SVG Icon custom -{\" \"}\n<Link\ncomponentClassName={\"icon-story-link\"}\nhref=\"https://github.com/gilbarbara/react-inlinesvg\"\n",
        "chatgpt_rag": "feat: add icon set information and links in IconSearch component"
    },
    {
        "msg": "docs: update contributing",
        "diff": "diff --git a/.github/CONTRIBUTING.md b/.github/CONTRIBUTING.md @@ -41,20 +41,26 @@ git clone https://github.com/<YOUR_GITHUB_USERNAME>/razzle.git\ncd razzle\ngit checkout -B <my-branch>\nNODE_ENV=development yarn install ---ignore-engines\n+# optionally install add-dependencies\n+sudo npm install add-dependencies -g\n```\nThis will install all `node_modules` in all the packages and all the examples and symlink\ninter-dependencies. Thus when you make local changes in any of the packages you can try them\n-immediately in all the examples.\n+immediately in all the examples. `add-dependencies` can be used to just add packages to `package.json`.\n### Commands\n-- `yarn run clean`: Clean up all `node_modules` and remove all symlinks from packages and examples.\n-- `yarn run bootstrap`: Run `yarn` on all examples and packages. Automatically symlinks inter-dependent modules.\n-- `yarn run test`: Runs all tests\n-- `yarn run test:packages`: Runs tests for packages\n-- `yarn run test:e2e`: Runs end-to-end tests\n-- `yarn run build-docs`: Builds docs/ updates doc TOC\n+- `yarn clean`: Clean up all `node_modules` and remove all symlinks from packages and examples.\n+- `yarn bootstrap`: Run `yarn` on all packages. Automatically symlinks inter-dependent modules.\n+- `yarn test`: Runs all tests\n+- `yarn test:packages`: Runs tests for packages\n+- `yarn test:e2e`: Runs end-to-end tests\n+- `yarn build-docs`: Builds docs/ updates doc TOC\n+- `yarn bootstrap-examples`: Run `yarn` with specific examples as workspaces. Automatically symlinks inter-dependent modules. Run `yarn restrap` in the example to reinstall.\n+- `yarn new-example`: Creates a new example from another example. `yarn new-example basic new-example`.\n+- `yarn publish-all-stable`: Does a a stable release\n+- `yarn publish-all-canary`: Does a `razzle@canary` release.\n### Updating your fork\n@@ -68,7 +74,7 @@ git pull origin master\n## Adding examples\n### Use `examples/basic` as template\n-If you'd like to add an example, I suggest you duplicate the `examples/basic` folder and use that as kind of base template. Before you start adding stuff, go ahead and change the name of the package in the your new example's `package.json`. Then go back to the project root and run `yarn bootstrap`. This will make sure that your new example is using your local version of all the `packages`.\n+If you'd like to add an example, I suggest you duplicate the `examples/basic` folder `yarn new-example basic your-example`and use that as kind of base template. Before you start adding stuff, go ahead and change the name of the package in the your new example's `package.json`. Then go back to the project root and run `yarn bootstrap-examples your-example`. This will make sure that your new example is using your local version of all the `packages`.\n### Naming examples\n",
        "date": "28.01.2021 00:15:38",
        "repo": "jaredpalmer/razzle",
        "type": "docs",
        "sim_msg": "docs(contributing): adds prebuild instructions",
        "sim_diff": "diff --git a/CONTRIBUTING.md b/CONTRIBUTING.md @@ -42,6 +42,13 @@ npm link\nnpm link webpack-cli\n```\n+* Bootstrap all the submodules before building for the first time\n+\n+```bash\n+npm run boostrap\n+npm run build\n+```\n+\n* Run all the tests with:\n- `npm run test`\n@@ -65,6 +72,13 @@ yarn link\nyarn link webpack-cli\n```\n+* Bootstrap all the submodules before building for the first time\n+\n+```bash\n+yarn boostrap\n+yarn build\n+```\n+\n* Run all the tests with:\n- `yarn test`\n",
        "chatgpt_rag": "docs(contributing): updates commands and instructions for adding examples and dependencies"
    },
    {
        "msg": "docs(Modal): fix nested modal closing\nCloses",
        "diff": "diff --git a/docs/lib/examples/ModalNested.js b/docs/lib/examples/ModalNested.js @@ -9,10 +9,12 @@ class ModalExample extends React.Component {\nthis.state = {\nmodal: false,\nnestedModal: false,\n+ closeAll: false\n};\nthis.toggle = this.toggle.bind(this);\nthis.toggleNested = this.toggleNested.bind(this);\n+ this.toggleAll = this.toggleAll.bind(this);\n}\ntoggle() {\n@@ -23,7 +25,15 @@ class ModalExample extends React.Component {\ntoggleNested() {\nthis.setState({\n- nestedModal: !this.state.nestedModal\n+ nestedModal: !this.state.nestedModal,\n+ closeAll: false\n+ });\n+ }\n+\n+ toggleAll() {\n+ this.setState({\n+ nestedModal: !this.state.nestedModal,\n+ closeAll: true\n});\n}\n@@ -37,12 +47,12 @@ class ModalExample extends React.Component {\nLorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n<br />\n<Button color=\"success\" onClick={this.toggleNested}>Show Nested Model</Button>\n- <Modal isOpen={this.state.nestedModal} toggle={this.toggleNested}>\n+ <Modal isOpen={this.state.nestedModal} toggle={this.toggleNested} onClosed={this.state.closeAll && this.toggle}>\n<ModalHeader>Nested Modal title</ModalHeader>\n<ModalBody>Stuff and things</ModalBody>\n<ModalFooter>\n<Button color=\"primary\" onClick={this.toggleNested}>Done</Button>{' '}\n- <Button color=\"secondary\" onClick={this.toggle}>All Done</Button>\n+ <Button color=\"secondary\" onClick={this.toggleAll}>All Done</Button>\n</ModalFooter>\n</Modal>\n</ModalBody>\n",
        "date": "15.11.2017 05:59:56",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "sim_msg": "fix(a11y): ensure close button gets an id and is referenced properly",
        "sim_diff": "diff --git a/src/Modal/index.jsx b/src/Modal/index.jsx @@ -9,8 +9,6 @@ import Icon from '../Icon';\nimport newId from '../utils/newId';\nimport Variant from '../utils/constants';\n-const closeModalButtonId = newId('paragonCloseModalButton');\n-\nclass Modal extends React.Component {\nconstructor(props) {\nsuper(props);\n@@ -20,6 +18,7 @@ class Modal extends React.Component {\nthis.setFirstFocusableElement = this.setFirstFocusableElement.bind(this);\nthis.setCloseButton = this.setCloseButton.bind(this);\n+ this.closeModalButtonId = newId('paragonCloseModalButton');\nthis.headerId = newId();\nthis.el = document.createElement('div');\n@@ -214,17 +213,17 @@ class Modal extends React.Component {\n<div className=\"modal-content\">\n<div className=\"modal-header\">\n<h2 className=\"modal-title\" id={this.headerId}>{this.props.title}</h2>\n- { renderHeaderCloseButton &&\n+ {renderHeaderCloseButton && (\n<Button\nclassName=\"p-1 js-close-modal-on-click\"\n- aria-labelledby={closeModalButtonId}\n+ aria-labelledby={this.closeModalButtonId}\nonClick={this.close}\ninputRef={this.setFirstFocusableElement}\nonKeyDown={this.handleKeyDown}\n>\n<Icon className=\"fa fa-times js-close-modal-on-click\" />\n</Button>\n- }\n+ )}\n</div>\n<div className=\"modal-body\">\n{this.renderBody()}\n@@ -232,6 +231,7 @@ class Modal extends React.Component {\n<div className=\"modal-footer\">\n{this.renderButtons()}\n<Button\n+ id={this.closeModalButtonId}\nbuttonType=\"secondary\"\nclassName=\"js-close-modal-on-click\"\nonClick={this.close}\n",
        "chatgpt_rag": "refactor: add functionality to close all modals when 'All Done' button is clicked"
    },
    {
        "msg": "feat(404-page): update NotFound container",
        "diff": "diff --git a/src/common/containers/NotFound/index.jsx b/src/common/containers/NotFound/index.jsx @@ -8,10 +8,10 @@ const NotFound = () => {\nreturn (\n<NotFoundLayout>\n<Header as=\"h2\" icon textAlign=\"center\">\n- <Icon name=\"users\" circular />\n- <Header.Content>404</Header.Content>\n+ <Icon name=\"warning sign\" circular />\n+ <Header.Content>Thank you Mario!</Header.Content>\n<Header.Subheader>\n- <Link to=\"/\">Dashboard lives here</Link>\n+ <Link to=\"/\">But our princess is in another castle.</Link>\n</Header.Subheader>\n</Header>\n</NotFoundLayout>\n",
        "date": "19.02.2018 18:50:28",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "chore(header): remove title if hero prop",
        "sim_diff": "diff --git a/src/components/layout/header/index.js b/src/components/layout/header/index.js @@ -219,7 +219,7 @@ const Header = withSearch(\n</div>\n</div>\n<Container>\n- {title && (\n+ {title && !hero && (\n<div\nclassName={`${headerStyle.titleSubnavContainer} ${\npathNavigation && !pathNavigation.top\n@@ -248,9 +248,9 @@ const Header = withSearch(\n<HeaderSubNavigation navigation={navigation} />\n</div>\n)}\n- {hero}\n</div>\n)}\n+ {hero}\n</Container>\n</div>\n</header>\n",
        "chatgpt_rag": "chore(NotFound): update icon and content in NotFound component"
    },
    {
        "msg": "feat(editbale): add editable props",
        "diff": "diff --git a/packages/chakra-ui-core/src/CEditable/CEditable.js b/packages/chakra-ui-core/src/CEditable/CEditable.js +/**\n+ * Hey! Welcome to @chakra-ui/vue Editable\n+ *\n+ * EditableText is used for inline renaming of some text.\n+ *\n+ * It appears as normal UI text but transforms into a text\n+ * input field when the user clicks or focuses on it.\n+ *\n+ * The text input inherits all font styling from its parent,\n+ * to make the edit and read view transition seamless.\n+ *\n+ * @see Docs https://vue.chakra-ui.com/editable\n+ * @see Source https://github.com/chakra-ui/chakra-ui-vue/blob/master/packages/chakra-ui-core/src/CEditable/CEditable.js\n+ */\n+\nimport styleProps, { baseProps } from '../config/props'\nimport { isDef, getElement, useId, forwardProps } from '../utils'\n@@ -15,6 +30,14 @@ const sharedEditableProps = {\nmx: '-3px'\n}\n+/**\n+ * CEditable component\n+ *\n+ * The wrapper for `CEditable` components. It provides context and state for the Editable components.\n+ *\n+ * @extends CBox\n+ * @see Docs https://vue.chakra-ui.com/editable\n+ */\nconst CEditable = {\nname: 'CEditable',\nprops: {\n@@ -165,7 +188,10 @@ const CEditable = {\n},\nrender (h) {\nreturn h(CBox, {\n- props: forwardProps(this.$props)\n+ props: forwardProps(this.$props),\n+ attrs: {\n+ 'data-chakra-component': 'CEditable'\n+ }\n}, [\nthis.$scopedSlots.default({\nisEditing: this.isEditing,\n@@ -177,6 +203,14 @@ const CEditable = {\n}\n}\n+/**\n+ * CEditablePreview component\n+ *\n+ * The read-only view of the component.\n+ *\n+ * @extends CPseudoBox\n+ * @see Docs https://vue.chakra-ui.com/editable\n+ */\nconst CEditablePreview = {\nname: 'CEditablePreview',\ninject: ['$EditableContext'],\n@@ -218,7 +252,8 @@ const CEditablePreview = {\n},\nattrs: {\n'aria-disabled': isDisabled,\n- tabIndex: this.tabIndex\n+ tabIndex: this.tabIndex,\n+ 'data-chakra-component': 'CEditablePreview'\n},\nnativeOn: {\nfocus: onRequestEdit\n@@ -227,6 +262,14 @@ const CEditablePreview = {\n}\n}\n+/**\n+ * CEditableInput component\n+ *\n+ * The edit view of the component. It shows when you click or focus on the text.\n+ *\n+ * @extends CPseudoBox\n+ * @see Docs https://vue.chakra-ui.com/editable\n+ */\nconst CEditableInput = {\nname: 'CEditableInput',\ninject: ['$EditableContext'],\n@@ -285,7 +328,8 @@ const CEditableInput = {\ndisabled: isDisabled,\n'aria-disabled': isDisabled,\nvalue,\n- placeholder\n+ placeholder,\n+ 'data-chakra-component': 'CEditableInput'\n}\n}, this.$slots.default)\n}\n",
        "date": "17.04.2020 01:58:50",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "feat",
        "sim_msg": "chore(ui): fix build broken by recent QEditor changes",
        "sim_diff": "diff --git a/ui/src/components/editor/QEditor.js b/ui/src/components/editor/QEditor.js @@ -253,7 +253,7 @@ export default Vue.extend({\nwatch: {\nvalue (v) {\nif (this.editWatcher) {\n- this.setContent(v)\n+ this.__setContent(v)\n}\nelse {\nthis.editWatcher = true\n@@ -331,7 +331,7 @@ export default Vue.extend({\nreturn this.$refs.content\n},\n- setContent (v) {\n+ __setContent (v) {\nif (this.isViewingSource) {\nthis.$refs.content.innerText = v\n}\n@@ -350,7 +350,7 @@ export default Vue.extend({\nmounted () {\nthis.caret = new Caret(this.$refs.content, this)\n- this.setContent(this.value)\n+ this.__setContent(this.value)\nthis.refreshToolbar()\n},\n",
        "chatgpt_rag": "feat(core): add CEditable, CEditablePreview, and CEditableInput components for inline text editing"
    },
    {
        "msg": "feat(menu): option event handling",
        "diff": "diff --git a/packages/kiwi-core/src/Menu/MenuOption.js b/packages/kiwi-core/src/Menu/MenuOption.js @@ -62,7 +62,7 @@ const MenuItemOption = {\nif (this.isDisabled) return\nif (['Enter', ' '].includes(event.key)) {\nevent.preventDefault()\n- this.handleSelect()\n+ this.handleSelect(event)\n}\nthis.$emit('keydown', event)\n@@ -239,6 +239,12 @@ const MenuOptionGroup = {\nnativeOn: {\nclick: (event) => {\nthis.handleChange(cloned.componentOptions.propsData['value'])\n+ },\n+ keydown: (event) => {\n+ if (['Enter', ' '].includes(event.key)) {\n+ event.preventDefault()\n+ this.handleChange(cloned.componentOptions.propsData['value'])\n+ }\n}\n}\n}, cloned.componentOptions.children)\n@@ -257,6 +263,12 @@ const MenuOptionGroup = {\nnativeOn: {\nclick: (event) => {\nthis.handleChange(cloned.componentOptions.propsData['value'])\n+ },\n+ keydown: (event) => {\n+ if (['Enter', ' '].includes(event.key)) {\n+ event.preventDefault()\n+ this.handleChange(cloned.componentOptions.propsData['value'])\n+ }\n}\n}\n}, cloned.componentOptions.children)\n",
        "date": "30.01.2020 20:14:04",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "feat",
        "sim_msg": "feat: menu parentSelectable update",
        "sim_diff": "diff --git a/src/Menu/Item.js b/src/Menu/Item.js @@ -117,13 +117,12 @@ class Item extends PureComponent {\nhandleClick(e) {\nconst { data, onClick, mode, toggleOpenKeys, looseChildren, parentSelectable } = this.props\n- const selectable = data.onClick || parentSelectable\nconst expandClick = getParent(e.target, `.${menuClass('expand')}`)\n- const canExpand = !selectable || expandClick\n+ const canExpand = !parentSelectable || expandClick\nif (mode === 'inline' && data.children && canExpand) {\nconst shouldToggle = looseChildren || data.children.length\nif (shouldToggle) toggleOpenKeys(this.getKey(), !this.state.open)\n- if (selectable && expandClick) return\n+ if (parentSelectable && expandClick) return\n}\nif (data.disabled) return\n@@ -237,7 +236,7 @@ class Item extends PureComponent {\nisHighLight && 'highlight',\ninPath && 'in-path',\nfrontCaret && 'caret-solid',\n- (data.onClick || parentSelectable) && 'selectable'\n+ parentSelectable && 'selectable'\n)\nconst style = this.getCalcStyle()\n",
        "chatgpt_rag": "fix: handleSelect function parameter update in MenuOptionGroup"
    },
    {
        "msg": "feat(containers): add data fetching in Links",
        "diff": "diff --git a/src/common/containers/Links/index.jsx b/src/common/containers/Links/index.jsx @@ -20,15 +20,19 @@ type Props = {\nclass Links extends Component {\nprops: Props\n- componentDidMount () {\n- const {isLinksLoaded} = this.props\n+ async asyncBootstrap () {\n+ const {isLinksLoaded, getLinks} = this.props\nif (!isLinksLoaded) {\n- this.getLinks()\n+ await getLinks()\n}\n+ return true\n}\n- getLinks () {\n- this.props.getLinks()\n+ componentDidMount () {\n+ const {isLinksLoaded, getLinks} = this.props\n+ if (!isLinksLoaded) {\n+ getLinks()\n+ }\n}\nrender () {\n@@ -57,8 +61,8 @@ function mapStateToProps (state: GlobalState) {\n}\nconst mapDispatchToProps = dispatch => ({\n- getLinks () {\n- dispatch(GET_LINKS())\n+ async getLinks () {\n+ return dispatch(GET_LINKS())\n}\n})\n",
        "date": "03.12.2017 07:11:52",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "feat: allow the Link component to perform hard page loads",
        "sim_diff": "diff --git a/src/components/Link/Link.js b/src/components/Link/Link.js /* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n-import { Link as NextLink } from \"routes\";\n+import routes, { Link as NextLink } from \"routes\";\nimport classNames from \"classnames\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport track from \"lib/tracking/track\";\n+import getConfig from \"next/config\";\n+\n+const { publicRuntimeConfig: { enableSPARouting } } = getConfig();\nconst styles = () => ({\nanchor: {\n@@ -24,7 +27,11 @@ class Link extends Component {\nchildren: PropTypes.node.isRequired,\nclassName: PropTypes.string,\nclasses: PropTypes.object,\n- onClick: PropTypes.func\n+ href: PropTypes.string,\n+ onClick: PropTypes.func,\n+ params: PropTypes.object,\n+ route: PropTypes.route,\n+ to: PropTypes.string\n}\nstatic defaultProps = {\n@@ -52,13 +59,32 @@ class Link extends Component {\nchildren,\nclasses,\nclassName,\n- tracking, // eslint-disable-line\n+ href,\nonClick,\n+ params,\n+ route,\n+ tracking, // eslint-disable-line\n+ to,\n...props\n} = this.props;\n+ if (!enableSPARouting) {\n+ const { urls: { as } } = routes.findAndGetUrls(route || to || href, params);\n+\n+ return (\n+ <a\n+ href={as}\n+ className={classNames(classes.anchor, className)}\n+ onClick={this.handleClick}\n+ onKeyDown={this.handleKeyDown}\n+ >\n+ {children}\n+ </a>\n+ );\n+ }\n+\nreturn (\n- <NextLink route={props.route || props.href} {...props} passHref>\n+ <NextLink route={route || to || href} params={params} {...props} passHref>\n<a\nclassName={classNames(classes.anchor, className)}\nonClick={this.handleClick}\n",
        "chatgpt_rag": "refactor: change componentDidMount to asyncBootstrap in Links container component"
    },
    {
        "msg": "feat(razzle): allow toggling usage of null loader for node target",
        "diff": "diff --git a/packages/razzle/config/createConfigAsync.js b/packages/razzle/config/createConfigAsync.js @@ -322,6 +322,8 @@ module.exports = (\n],\n};\n+ webpackOptions.nullNodeCss = false;\n+\nfor (const [plugin, pluginOptions] of plugins) {\n// Check if .modifyWebpackConfig is a function.\n// If it is, call it on the configs we created.\n@@ -532,7 +534,9 @@ module.exports = (\n? // Style-loader does not work in Node.js without some crazy\n// magic. Luckily we just need css-loader.\n[\n- {\n+ webpackOptions.nullNodeCss ? {\n+ loader: require.resolve('null-loader')\n+ } : {\nloader: require.resolve('css-loader'),\noptions: {\nimportLoaders: 1,\n",
        "date": "13.02.2021 00:22:55",
        "repo": "jaredpalmer/razzle",
        "type": "feat",
        "sim_msg": "build: Use short content hashes.",
        "sim_diff": "diff --git a/webpack.config.js b/webpack.config.js @@ -22,7 +22,7 @@ const htmlMinifierOptions = {\n};\nconst extractAppCss = new ExtractTextPlugin({\n- filename: '[name]_[hash].css',\n+ filename: '[name]_[contenthash:7].css',\n// Disable in development mode, so we can use CSS hot reloading.\ndisable: nodeEnv === 'development'\n});\n@@ -92,7 +92,8 @@ module.exports = {\noutput: {\npublicPath: '/',\npath: path.join(__dirname, 'public'),\n- filename: '[name]_[hash].js'\n+ filename: '[name]_[hash].js',\n+ hashDigestLength: 7\n},\nplugins,\nmodule: {\n@@ -100,7 +101,7 @@ module.exports = {\n{\ntest: /\\.(gif|jpe?g|png|svg)$/,\nuse: [\n- { loader: 'file-loader', query: { name: '[name]_[hash].[ext]' } },\n+ { loader: 'file-loader', query: { name: '[name]_[hash:7].[ext]' } },\n{ loader: 'image-webpack-loader', query: { bypassOnDebug: true } }\n]\n},\n",
        "chatgpt_rag": "build: Disable nullNodeCss option and use css-loader instead of null-loader."
    },
    {
        "msg": "feat(Sidebar): use SidebarLogo based on Logo component",
        "diff": "diff --git a/src/common/components/parts/Sidebar/index.jsx b/src/common/components/parts/Sidebar/index.jsx import React, {Component} from 'react'\nimport {Menu, Icon} from 'semantic-ui-react'\nimport {NavLink} from 'react-router-dom'\n+import Logo from 'components/elements/Logo'\nimport {\nStyledSidebar,\nSidebarLogo,\n@@ -10,9 +11,7 @@ import {\nSidebarLogoutItem\n} from './style'\nimport {Spacer} from 'styles/base'\n-\nimport type {RouteItem} from 'types'\n-// require('./index.scss')\ntype Props = {\nopen: boolean,\n@@ -71,12 +70,11 @@ export default class SidebarComponent extends Component {\n// ? require('images/logo.png')\n// : require('images/logo.png').preSrc\n//\n- const logoImg = require('images/logo.png')\nreturn (\n<StyledSidebar {...sidebarProps}>\n<SidebarLogoContainer href=\"https://github.com/Metnew/react-semantic.ui-starter\">\n- <SidebarLogo src={logoImg} alt=\"logo\" shape=\"circular\" centered />\n+ <SidebarLogo alt=\"logo\" shape=\"circular\" centered />\n</SidebarLogoContainer>\n{routes}\n<Spacer />\n",
        "date": "10.09.2017 18:49:29",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "test(lint): remove unused import",
        "sim_diff": "diff --git a/lib/common/components/Sidebar.js b/lib/common/components/Sidebar.js @@ -3,7 +3,6 @@ import React, {PropTypes} from 'react'\nimport {Navbar, Checkbox} from 'react-bootstrap'\nimport {Link} from 'react-router'\n-import auth0 from '../user/Auth0Manager'\nimport SidebarNavItem from './SidebarNavItem'\nimport SidebarPopover from './SidebarPopover'\nimport JobMonitor from './JobMonitor'\n",
        "chatgpt_rag": "refactor: remove unused import and clean up code in Sidebar component"
    },
    {
        "msg": "feat: query blocks with a height greater than 335",
        "diff": "diff --git a/frontend/leaderboard/src/Postgres.re b/frontend/leaderboard/src/Postgres.re @@ -15,7 +15,9 @@ LEFT JOIN user_commands AS uc ON uc.id = buc.user_command_id\nLEFT JOIN public_keys AS pk2 ON ic.receiver_id = pk2.id\nLEFT JOIN public_keys AS pk3 ON uc.fee_payer_id = pk3.id\nLEFT JOIN public_keys AS pk4 ON uc.source_id = pk4.id\n-LEFT JOIN public_keys AS pk5 ON uc.receiver_id = pk5.id\";\n+LEFT JOIN public_keys AS pk5 ON uc.receiver_id = pk5.id\n+\n+WHERE height >= 335\";\nlet createPool = pgConn => {\nmakePool({connectionString: pgConn, connectionTimeoutMillis: 5000});\n",
        "date": "18.11.2020 14:35:41",
        "repo": "minaprotocol/mina",
        "type": "feat",
        "sim_msg": "feat(poolCluster): add query method",
        "sim_diff": "diff --git a/lib/pool_cluster.js b/lib/pool_cluster.js @@ -4,6 +4,7 @@ const process = require('process');\nconst Pool = require('./pool.js');\nconst PoolConfig = require('./pool_config.js');\n+const Connection = require('./connection.js');\nconst EventEmitter = require('events').EventEmitter;\n/**\n@@ -46,6 +47,43 @@ class PoolNamespace {\n});\n}\n+ /**\n+ * pool cluster query\n+ * @param {*} sql\n+ * @param {*} values\n+ * @param {*} cb\n+ * @returns query\n+ */\n+ query(sql, values, cb) {\n+ const clusterNode = this._getClusterNode();\n+ const query = Connection.createQuery(sql, values, cb, {});\n+ if (clusterNode === null) {\n+ return cb(new Error('Pool does Not exists.'));\n+ }\n+ this._cluster._getConnection(clusterNode, (err, conn) => {\n+ if (err) {\n+ if (typeof query.onResult === 'function') {\n+ query.onResult(err);\n+ } else {\n+ query.emit('error', err);\n+ }\n+ return;\n+ }\n+ if (conn === 'retry') {\n+ return this.query(sql, values, cb);\n+ }\n+ try {\n+ conn.query(query).once('end', () => {\n+ conn.release();\n+ });\n+ } catch (e) {\n+ conn.release();\n+ throw e;\n+ }\n+ });\n+ return query;\n+ }\n+\n_getClusterNode() {\nconst foundNodeIds = this._cluster._findNodeIds(this._pattern);\nif (foundNodeIds.length === 0) {\n",
        "chatgpt_rag": "fix(frontend): update SQL query in Postgres.re file"
    },
    {
        "msg": "feat(Form): add submit to component\nThis makes it easier to use submit as if the component was a raw form (via 'standard' )",
        "diff": "diff --git a/src/Form.js b/src/Form.js -import React from 'react';\n+import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules } from './utils';\n@@ -15,8 +15,27 @@ const propTypes = {\nconst defaultProps = {\ntag: 'form',\n};\n+class Form extends Component {\n+ constructor(props) {\n+ super(props);\n+ this.getRef = this.getRef.bind(this);\n+ this.submit = this.submit.bind(this);\n+ }\n-const Form = (props) => {\n+ getRef(ref) {\n+ if (this.props.innerRef) {\n+ this.props.innerRef(ref);\n+ }\n+ this.ref = ref;\n+ }\n+\n+ submit() {\n+ if (this.ref) {\n+ this.ref.submit();\n+ }\n+ }\n+\n+ render() {\nconst {\nclassName,\ncssModule,\n@@ -24,7 +43,7 @@ const Form = (props) => {\ntag: Tag,\ninnerRef,\n...attributes\n- } = props;\n+ } = this.props;\nconst classes = mapToCssModules(classNames(\nclassName,\n@@ -34,7 +53,8 @@ const Form = (props) => {\nreturn (\n<Tag {...attributes} ref={innerRef} className={classes} />\n);\n-};\n+ }\n+}\nForm.propTypes = propTypes;\nForm.defaultProps = defaultProps;\n",
        "date": "07.05.2018 16:25:02",
        "repo": "reactstrap/reactstrap",
        "type": "feat",
        "sim_msg": "feat: add form submit on enter key press",
        "sim_diff": "diff --git a/src/components/Form.js b/src/components/Form.js @@ -10,6 +10,7 @@ import * as FormActions from '../libs/actions/FormActions';\nimport * as ErrorUtils from '../libs/ErrorUtils';\nimport styles from '../styles/styles';\nimport FormAlertWithSubmitButton from './FormAlertWithSubmitButton';\n+import FormSubmit from './FormSubmit';\nconst propTypes = {\n/** A unique Onyx key identifying the form */\n@@ -212,7 +213,7 @@ class Form extends React.Component {\nrender() {\nreturn (\n- <>\n+ <FormSubmit style={[styles.w100, styles.flex1]} onSubmit={this.submit}>\n<ScrollView\nstyle={[styles.w100, styles.flex1]}\ncontentContainerStyle={styles.flexGrow1}\n@@ -236,7 +237,7 @@ class Form extends React.Component {\n)}\n</View>\n</ScrollView>\n- </>\n+ </FormSubmit>\n);\n}\n}\n",
        "chatgpt_rag": "refactor: convert functional component to class component in Form.js"
    },
    {
        "msg": "feat(reducers/links): add count property",
        "diff": "diff --git a/src/common/reducers/links/index.js b/src/common/reducers/links/index.js @@ -23,7 +23,8 @@ export const initialState: State = {\nentities: [],\nerrors: {},\nisLoading: false,\n- isLoaded: false\n+ isLoaded: false,\n+ count: 0\n}\nexport function links (state: State = initialState, action: Action): State {\n@@ -38,11 +39,13 @@ export function links (state: State = initialState, action: Action): State {\n}\ncase GET_LINKS_SUCCESS: {\nconst entities = action.payload\n+ const count = entities.length\nreturn {\n...state,\nisLoaded: true,\nisLoading: false,\n- entities\n+ entities,\n+ count\n}\n}\ncase GET_LINKS_FAIL: {\n@@ -51,7 +54,9 @@ export function links (state: State = initialState, action: Action): State {\n...state,\nerrors,\nisLoaded: true,\n- isLoading: false\n+ isLoading: false,\n+ entities: [],\n+ count: 0\n}\n}\ndefault:\n",
        "date": "03.11.2017 16:32:11",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "fix: passing data from WalletError to actionStatus state",
        "sim_diff": "diff --git a/packages/frontend/src/redux/reducers/status/index.js b/packages/frontend/src/redux/reducers/status/index.js @@ -73,6 +73,7 @@ const alertReducer = (state, { error, ready, payload, meta, type }) => {\nerrorMessage: (error && payload?.message) || (type === 'SHOW_CUSTOM_ALERT' && payload.errorMessage) || undefined,\ndata: {\n...meta?.data,\n+ ...payload?.data,\n...payload\n}\n}\n",
        "chatgpt_rag": "feat: add count property to links state and update entities length in GET_LINKS_SUCCESS action"
    },
    {
        "msg": "feat(auth): add idToken to user's payload\nfeat",
        "diff": "diff --git a/lib/plugins/ssrAuth.js b/lib/plugins/ssrAuth.js @@ -55,7 +55,8 @@ export default async ({ req, res }) => {\n...res.locals,\nuser: {\n...authUser,\n- allClaims: decodedToken\n+ allClaims: decodedToken,\n+ idToken,\n}\n}\n}\n",
        "date": "11.05.2020 20:52:09",
        "repo": "nuxt-community/firebase-module",
        "type": "feat",
        "sim_msg": "feat: add accountId property to to AuthStore",
        "sim_diff": "diff --git a/src/lib/stores/AuthStore.js b/src/lib/stores/AuthStore.js @@ -10,6 +10,14 @@ class AuthStore {\nconstructor(name) {\nthis.tokenName = name || \"token\";\n}\n+\n+ /**\n+ * The accountId the currently signed-in user\n+ *\n+ * @type String\n+ */\n+ @observable accountId = null;\n+\n/**\n* The login token of the current user\n*\n",
        "chatgpt_rag": "fix: add idToken to user object in ssrAuth plugin"
    },
    {
        "msg": "feat(routing): make all containers lazy, simplify code",
        "diff": "diff --git a/src/common/routing/index.jsx b/src/common/routing/index.jsx */\nimport React from 'react'\nimport {Route} from 'react-router-dom'\n-import Dashboard from 'containers/Dashboard'\n-import Login from 'containers/Login'\n-import Users from 'containers/Users'\n-\nimport RouteAuth from 'components/addons/RouteAuth'\nimport {createBrowserHistory, createMemoryHistory} from 'history'\nimport type {RouteItem} from 'types'\n+const getHistory = () => {\n+ if (process.env.BROWSER) {\n+ return createMemoryHistory()\n+ }\n+ return createBrowserHistory()\n+}\n+\nexport const history = getHistory()\n-const loadLazyComponent = (url: string) => {\n- return async (cb: Function) => {\n+const loadLazyComponent = (url: string) => async () => {\n// NOTE: there isn't any duplication here\n// Read Webpack docs about code-splitting for more info.\nif (process.env.BROWSER) {\n@@ -24,26 +26,27 @@ const loadLazyComponent = (url: string) => {\nconst loadComponent = await import(/* webpackMode: \"eager\", webpackChunkName: \"lazy-containers\" */ `containers/${url}/index.jsx`)\nreturn loadComponent\n}\n-}\nexport const routes: Array<RouteItem> = [\n{\npath: '/',\nexact: true,\n+ lazy: true,\nicon: 'newspaper',\nname: 'Dashboard',\nsidebarVisible: true,\ntag: RouteAuth,\n- component: Dashboard\n+ component: loadLazyComponent('Dashboard')\n},\n{\npath: '/users',\nname: 'Users',\nexact: true,\n+ lazy: true,\nicon: 'users',\nsidebarVisible: true,\ntag: RouteAuth,\n- component: Users\n+ component: loadLazyComponent('Users')\n},\n{\nexternal: true,\n@@ -55,8 +58,9 @@ export const routes: Array<RouteItem> = [\n{\npath: '/auth',\nname: 'Auth',\n+ lazy: true,\ntag: Route,\n- component: Login\n+ component: loadLazyComponent('Login')\n},\n{\npath: '/users/:id',\n@@ -67,11 +71,3 @@ export const routes: Array<RouteItem> = [\ncomponent: loadLazyComponent('UserItem')\n}\n]\n-\n-function getHistory () {\n- const basename = ''\n- if (process.env.BROWSER !== true) {\n- return createMemoryHistory()\n- }\n- return createBrowserHistory({basename})\n-}\n",
        "date": "10.09.2017 14:34:54",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "refactor(webapp-routes): lazy-load all account views",
        "sim_diff": "diff --git a/lib/util/webapp-routes.js b/lib/util/webapp-routes.js -import React from 'react'\n+import React, { lazy, Suspense } from 'react'\nimport { frame } from '../components/app/app-frame'\nimport { RedirectWithQuery } from '../components/form/connected-links'\nimport AfterSignInScreen from '../components/user/after-signin-screen'\n-import FavoritePlaceScreen from '../components/user/places/favorite-place-screen'\nimport SavedTripList from '../components/user/monitored-trip/saved-trip-list'\n-import SavedTripScreen from '../components/user/monitored-trip/saved-trip-screen'\n-import UserAccountScreen from '../components/user/user-account-screen'\nimport {\nACCOUNT_PATH,\n@@ -20,6 +17,16 @@ import {\nTRIPS_PATH\n} from './constants'\n+const SavedTripScreen = lazy(() =>\n+ import('../components/user/monitored-trip/saved-trip-screen')\n+)\n+const UserAccountScreen = lazy(() =>\n+ import('../components/user/user-account-screen')\n+)\n+const FavoritePlaceScreen = lazy(() =>\n+ import('../components/user/places/favorite-place-screen')\n+)\n+\n/**\n* Contains mapping of the component(s) to display for each URL route.\n*\n@@ -51,12 +58,20 @@ const routes = [\n},\n{\na11yIgnore: true,\n- component: FavoritePlaceScreen,\n+ component: (props) => (\n+ <Suspense fallback={<span />}>\n+ <FavoritePlaceScreen {...props} />\n+ </Suspense>\n+ ),\npath: [`${CREATE_ACCOUNT_PLACES_PATH}/:id`, `${PLACES_PATH}/:id`]\n},\n{\na11yIgnore: true,\n- component: SavedTripScreen,\n+ component: (props) => (\n+ <Suspense fallback={<span />}>\n+ <SavedTripScreen {...props} />\n+ </Suspense>\n+ ),\npath: `${TRIPS_PATH}/:id`\n},\n{\n@@ -74,7 +89,11 @@ const routes = [\n{\na11yIgnore: true,\n// This route lets new or existing users edit or set up their account.\n- component: UserAccountScreen,\n+ component: (props) => (\n+ <Suspense fallback={<span />}>\n+ <UserAccountScreen {...props} />\n+ </Suspense>\n+ ),\npath: [`${CREATE_ACCOUNT_PATH}/:step`, ACCOUNT_SETTINGS_PATH]\n},\n{\n",
        "chatgpt_rag": "refactor(routing): lazy-load all components in routes array"
    },
    {
        "msg": "feat(types): add type exports for color mode & theme providers",
        "diff": "diff --git a/packages/chakra-ui-core/types/index.d.ts b/packages/chakra-ui-core/types/index.d.ts @@ -3,18 +3,36 @@ import { Theme } from \"../../chakra-ui-theme/types\"\nimport useToast from \"../src/CToast\"\nimport { ToastFactory } from '../src/CToast/CToast'\n+type ChakraIcons = { [name: string]: Icon };\n+\ndeclare module 'vue/types/vue' {\nexport interface Vue {\n$toast: ToastFactory\n$chakra: {\ntheme: Theme\n- icons: { [name: string]: Icon }\n+ icons: ChakraIcons\n+ }\n+ }\n+}\n+\n+declare module '../src/CColorModeProvider' {\n+ export interface Provides {\n+ $chakraColorMode: () => 'light' | 'dark'\n+ $toggleColorMode: () => void\n+ }\n}\n- chakraColorMode: string\n- chakraToggleColorMode: string\n+\n+declare module '../src/CThemeProvider' {\n+ export interface Provides {\n+ $chakraTheme: Theme\n+ $chakraIcons: ChakraIcons\n+ $chakraColorMode: () => 'light'\n}\n}\n+export { Provides as CColorModeProvides } from '../src/CColorModeProvider'\n+export { Provides as CThemeProvides } from '../src/CThemeProvider'\n+\nexport const useToast: typeof useToast\nexport const defaultTheme: Theme\nexport * from './component'\n",
        "date": "04.10.2021 00:12:00",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "feat",
        "sim_msg": "feat(icon): add Box component to Icon",
        "sim_diff": "diff --git a/packages/yoga/src/Icon/Icon.jsx b/packages/yoga/src/Icon/Icon.jsx @@ -9,6 +9,8 @@ import {\n} from 'prop-types';\nimport { withTheme } from 'styled-components';\n+import Box from '../Box';\n+\nconst Icon = ({\nas: Component,\nsize,\n@@ -19,9 +21,10 @@ const Icon = ({\ntheme,\n...props\n}) => (\n- <Component\n- {...(width && { width: theme.yoga.spacing[width] || width })}\n- {...(height && { height: theme.yoga.spacing[height] || height })}\n+ <Box\n+ as={Component}\n+ width={width}\n+ height={height}\n{...(fill && { fill: theme.yoga.colors[fill] || fill })}\n{...(stroke && { stroke: theme.yoga.colors[stroke] || stroke })}\n{...props}\n",
        "chatgpt_rag": "refactor(types): update ChakraIcons type and add color mode provider and theme provider interfaces"
    },
    {
        "msg": "feat: alias compat for preact X",
        "diff": "diff --git a/packages/cli/lib/lib/webpack/webpack-base-config.js b/packages/cli/lib/lib/webpack/webpack-base-config.js @@ -122,7 +122,8 @@ module.exports = function(env) {\n'.css',\n'.wasm',\n],\n- alias: {\n+ alias: Object.assign(\n+ {\nstyle: source('style'),\n'preact-cli-entrypoint': source('index'),\n// preact-compat aliases for supporting React dependencies:\n@@ -133,6 +134,8 @@ module.exports = function(env) {\n'@preact/async-loader/async'\n),\n},\n+ compat !== 'preact-compat' ? { 'preact-compat': compat } : {}\n+ ),\n},\nresolveLoader: {\n",
        "date": "29.09.2019 15:06:27",
        "repo": "preactjs/preact-cli",
        "type": "feat",
        "sim_msg": "chore: CopyWebpackPlugin error on windows due to path separators",
        "sim_diff": "diff --git a/webpack.config.js b/webpack.config.js @@ -116,7 +116,7 @@ module.exports = function (env) {\nglobOptions: { ignore: '**/*.js' },\n},\n{\n- from: path.join(__dirname, `${CODE_SOURCE_DIR}/extension/legacy/**/*.css`),\n+ from: path.join(__dirname, `${CODE_SOURCE_DIR}/extension/legacy/**/*.css`).replace(/\\\\/g, '/'),\nto: path.join(__dirname, `${BUILD_PATH}/web-accessibles`),\ncontext: 'src/extension',\n},\n@@ -124,7 +124,7 @@ module.exports = function (env) {\nfrom: path.join(\n__dirname,\n`${CODE_SOURCE_DIR}/extension/legacy/features/l10n/locales/*.js`\n- ),\n+ ).replace(/\\\\/g, '/'),\nto: path.join(__dirname, `${BUILD_PATH}/web-accessibles`),\ncontext: 'src/extension',\n},\n",
        "chatgpt_rag": "fix: Update webpack alias configuration to handle preact-compat dependencies based on compatibility flag"
    },
    {
        "msg": "feat(razzle): add config debug flags",
        "diff": "diff --git a/packages/razzle/config/createConfigAsync.js b/packages/razzle/config/createConfigAsync.js @@ -4,6 +4,7 @@ const fs = require('fs-extra');\nconst path = require('path');\nconst webpack = require('webpack');\nconst crypto = require('crypto');\n+const util = require('util');\nconst TerserPlugin = require('terser-webpack-plugin');\nconst HtmlWebpackPlugin = require('html-webpack-plugin');\nconst StartServerPlugin = require('razzle-start-server-webpack-plugin');\n@@ -337,6 +338,11 @@ module.exports = (\n});\n}\n+ if (razzleOptions.debug.options) {\n+ console.log(`Printing webpack options for ${target} target`);\n+ console.log(util.inspect(webpackOptions, {depth: null}));\n+ }\n+\nconst debugNodeExternals = razzleOptions.debug.nodeExternals;\nconst nodeExternalsFunc = (context, request, callback) => {\n@@ -950,7 +956,10 @@ module.exports = (\npaths,\n});\n}\n-\n+ if (razzleOptions.debug.config) {\n+ console.log(`Printing webpack config for ${target} target`);\n+ console.log(util.inspect(webpackConfig, {depth: null}));\n+ }\nresolve(config);\n});\n};\n",
        "date": "01.02.2021 16:41:49",
        "repo": "jaredpalmer/razzle",
        "type": "feat",
        "sim_msg": "build(public-cloud): update modules injections",
        "sim_diff": "diff --git a/packages/manager/apps/public-cloud/webpack.config.js b/packages/manager/apps/public-cloud/webpack.config.js +const fs = require('fs');\nconst glob = require('glob');\nconst merge = require('webpack-merge');\nconst path = require('path');\nconst webpackConfig = require('@ovh-ux/manager-webpack-config');\nconst webpack = require('webpack');\n+function readNgAppInjections(file) {\n+ let injections = [];\n+ if (fs.existsSync(file)) {\n+ injections = fs\n+ .readFileSync(file, 'utf8')\n+ .split('\\n')\n+ .filter((value) => value !== '');\n+ }\n+ return injections;\n+}\n+\n+function getNgAppInjections(region) {\n+ const injections = [\n+ ...readNgAppInjections(`./.extras-${region}/ng-app-injections`),\n+ ...readNgAppInjections('./.extras/ng-app-injections'),\n+ ];\n+\n+ const ngAppInjections = injections.map((val) => `'${val}'`).join(',');\n+\n+ return ngAppInjections || 'null';\n+}\n+\nmodule.exports = (env = {}) => {\nconst { config } = webpackConfig(\n{\n@@ -50,9 +73,7 @@ module.exports = (env = {}) => {\n},\nplugins: [\nnew webpack.DefinePlugin({\n- __NG_APP_INJECTIONS__: process.env.NG_APP_INJECTIONS\n- ? `'${process.env.NG_APP_INJECTIONS}'`\n- : 'null',\n+ __NG_APP_INJECTIONS__: getNgAppInjections(WEBPACK_REGION),\n__NODE_ENV__: process.env.NODE_ENV\n? `'${process.env.NODE_ENV}'`\n: '\"development\"',\n",
        "chatgpt_rag": "build(razzle): add debug logging for webpack options and config"
    },
    {
        "msg": "feat(isJWT): signature is not required",
        "diff": "diff --git a/src/lib/isJWT.js b/src/lib/isJWT.js import assertString from './util/assertString';\n-const jwt = /^[a-zA-Z0-9\\-_]+\\.[a-zA-Z0-9\\-_]+\\.[a-zA-Z0-9\\-_]+$/;\n+const jwt = /^([A-Za-z0-9\\-_~+\\/]+[=]{0,2})\\.([A-Za-z0-9\\-_~+\\/]+[=]{0,2})(?:\\.([A-Za-z0-9\\-_~+\\/]+[=]{0,2}))?$/;\nexport default function isJWT(str) {\nassertString(str);\n",
        "date": "10.10.2018 22:04:39",
        "repo": "validatorjs/validator.js",
        "type": "feat",
        "sim_msg": "refactor: remove no longer necessary scope setter in jwt auth responses",
        "sim_diff": "diff --git a/lib/response_modes/jwt.js b/lib/response_modes/jwt.js @@ -14,7 +14,7 @@ const modes = {\nconst RENDER_MODES = new Set(['form_post', 'web_message']);\nmodule.exports = async function jwtResponseModes(ctx, redirectUri, payload) {\n- const { params, entities: { AccessToken } } = ctx.oidc;\n+ const { params } = ctx.oidc;\nlet mode;\nif (params.response_mode === 'jwt') {\n@@ -31,10 +31,6 @@ module.exports = async function jwtResponseModes(ctx, redirectUri, payload) {\nconst token = new IdToken({}, { ctx });\ntoken.extra = payload;\n- if (payload.access_token) {\n- token.set('scope', AccessToken.scope);\n- }\n-\nconst response = await token.issue({ use: 'authorization' });\nif (RENDER_MODES.has(mode)) {\n",
        "chatgpt_rag": "style: update JWT regex pattern to include optional padding characters"
    },
    {
        "msg": "feat(server/ssr): move to react 16",
        "diff": "diff --git a/src/server/ssr/index.js b/src/server/ssr/index.js */\nimport React from 'react'\nimport chalk from 'chalk'\n-// import _ from 'lodash'\n-import {renderToNodeStream, renderToStaticNodeStream} from 'react-dom/server'\n+import {renderToNodeStream} from 'react-dom/server'\nimport {ServerStyleSheet, StyleSheetManager} from 'styled-components'\nimport {configureRootComponent, configureApp} from 'common/app'\n-// import {addLocaleData} from 'react-intl'\nimport HtmlComponent from './HtmlComponent'\n// $FlowFixMe\nimport assets from 'webpack-assets'\n@@ -58,9 +56,11 @@ export default async (req: express$Request, res: express$Response) => {\n'Content-Type': 'text/html'\n})\nres.write(beforeAppTag)\n+ res.write(`<div id=\"app\">`)\nstream.pipe(res, {end: false})\nstream.on('end', () => {\n+ res.write('</div>')\nres.write(afterAppTag)\nres.end()\n})\n",
        "date": "30.09.2017 14:22:54",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "refactor: adjust folder structure",
        "sim_diff": "diff --git a/src/pages/index.js b/src/pages/index.js -import { marshall, unmarshall } from '@/lib/compress-json'\n-import presets from '@/components/presets'\n-import useQueryState from '@/hooks/use-query-state'\n-import GitHubIcon from '@/components/icons/github'\n-import JSONViewer from '@/components/json-viewer'\n-import ThemeIcon from '@/components/icons/theme'\n-import screenshotUrl from '@/lib/screenshot-url'\n-import Container from '@/components/container'\n-import notification from '@/lib/notification'\n-import { useState, useEffect } from 'react'\n-// import Overlay from '@/components/overlay'\n-import clipboard from '@/lib/clipboard'\n-import debounce from '@/lib/debounce'\n-import Main from '@/components/main'\n-import isEmpty from '@/lib/is-empty'\n-import onSave from '@/lib/on-save'\n-import Router from 'next/router'\n-import themeBase from '@/theme'\n-import Cycled from 'cycled'\n-\nimport {\nLink as ExternalLink,\nButton,\n@@ -27,12 +7,31 @@ import {\nuseThemeUI\n} from 'theme-ui'\n+import presets from '@/components/presets'\n+import ThemeIcon from '@/components/icons/theme'\n+import Main from '@/components/main'\nimport {\nLiveProvider,\nLiveEditor,\nLiveError,\nLivePreview\n} from '@/components/live-editor'\n+import presets from '@/components/presets'\n+import JSONViewer from '@/components/json-viewer'\n+import ThemeIcon from '@/components/icons/theme'\n+import GitHubIcon from '@/components/icons/github'\n+import Container from '@/components/container'\n+import Main from '@/components/main'\n+// import Overlay from '@/components/overlay'\n+import useQueryState from '@/hooks/use-query-state'\n+import themeBase from '@/themes/base'\n+import { marshall, unmarshall } from '@/lib/compress-json'\n+import clipboard from '@/lib/clipboard'\n+import debounce from '@/lib/debounce'\n+import isEmpty from '@/lib/is-empty'\n+import notification from '@/lib/notification'\n+import screenshotUrl from '@/lib/screenshot-url'\n+import onSave from '@/lib/on-save'\nimport pkg from '../../package.json'\n",
        "chatgpt_rag": "refactor: adjust folder structure and remove unnecessary imports"
    },
    {
        "msg": "feat: more comprehensive gitignore",
        "diff": "diff --git a/.gitignore b/.gitignore *.swp\n*.swo\n-node_modules/\n-build/\n-.DS_Store/\n-/coverage\n-coverage.json\n+\n+# Logs\n+logs\n+*.log\n+\n+# Runtime data\n+pids\n+*.pid\n+*.seed\nallFiredEvents\nscTopics\n+\n+# Coverage directory used by tools like istanbul\n+coverage\n+coverage.json\n+\n+# node-waf configuration\n+.lock-wscript\n+\n+# Dependency directory\n+node_modules\n+\n+# Debug log from npm\n+npm-debug.log\n+\n+# local env variables\n+.env\n+\n+# truffle build directory\n+build/\n+\n+# lol macs\n+.DS_Store/\n",
        "date": "24.11.2017 13:03:52",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "feat",
        "sim_msg": "chore(git): update `.gitignore` and ignore `.nyc_output` directory",
        "sim_diff": "diff --git a/.gitignore b/.gitignore -node_modules\n+# Logs\n+logs\n+*.log\n+npm-debug.log*\n+\n+# Runtime data\n+pids\n+*.pid\n+*.seed\n+*.pid.lock\n+\n+# Directory for instrumented libs generated by jscoverage/JSCover\n+lib-cov\n+\n+# Coverage directory used by tools like istanbul\ncoverage\n+\n+# nyc test coverage\n+.nyc_output\n+\n+# Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)\n+.grunt\n+\n+# node-waf configuration\n+.lock-wscript\n+\n+# Compiled binary addons (http://nodejs.org/api/addons.html)\n+build/Release\n+\n+# Dependency directories\n+node_modules\n+jspm_packages\n+\n+# Optional npm cache directory\n+.npm\n+\n+# Optional eslint cache\n+.eslintcache\n+\n+# Optional REPL history\n+.node_repl_history\n+\n+# Build files\n+build\ndist\n+\n+# Vim swap files\n*.swp\n-*.log\n+\n+# Mac OS\n.DS_Store\n",
        "chatgpt_rag": "chore(git): update `.gitignore` and ignore `coverage.json` directory"
    },
    {
        "msg": "feat(Footer): add basic test",
        "diff": "diff --git a/src/common/components/parts/Footer/index.test.jsx b/src/common/components/parts/Footer/index.test.jsx +import React from 'react'\n+import Footer from 'components/parts/Footer'\n+import {shallow} from 'enzyme'\n+import toJson from 'enzyme-to-json'\n+\n+describe('Footer component', () => {\n+ it('same snapshot', () => {\n+ const component = shallow(<Footer />)\n+ expect(toJson(component)).toMatchSnapshot()\n+ })\n+})\n",
        "date": "10.09.2017 13:55:08",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "refactor: use screen in test",
        "sim_diff": "diff --git a/components/Footer/Footer.test.js b/components/Footer/Footer.test.js import React from \"react\";\n-import { render } from \"@testing-library/react\";\n+import { render, screen } from \"@testing-library/react\";\nimport Footer from \"./Footer\";\ntest(\"Renders the footer\", () => {\n- const { getByText } = render(<Footer />);\n- const footerText = getByText(/Reaction Commerce/);\n+ render(<Footer />);\n+\n+ const footerText = screen.getByText(/Reaction Commerce/);\nexpect(footerText).toBeInTheDocument();\n});\n",
        "chatgpt_rag": "refactor: update Footer component test to use enzyme-to-json for snapshot testing"
    },
    {
        "msg": "feat: use jest fake timer",
        "diff": "diff --git a/packages/dropdown/src/__tests__/Dropdown.spec.js b/packages/dropdown/src/__tests__/Dropdown.spec.js -import Dropdown from '../dropdown.vue'\n-import DropdownMenu from '../dropdown-menu.vue'\n-import DropdownItem from '../dropdown-item.vue'\n-\n+import '@testing-library/jest-dom'\nimport { mount } from '@vue/test-utils'\nimport { nextTick, ref } from 'vue'\nimport sinon from 'sinon'\n+import Dropdown from '../dropdown.vue'\n+import DropdownMenu from '../dropdown-menu.vue'\n+import DropdownItem from '../dropdown-item.vue'\n+\nconst components = {\nElDropdown: Dropdown,\nElDropdownMenu: DropdownMenu,\nElDropdownItem: DropdownItem\n}\n+jest.useFakeTimers()\n+\nconst wait = (time = 300) => {\n- return new Promise((resolve) => {\n- setTimeout(resolve, time)\n- })\n+ jest.runAllTimers()\n}\ndescribe('Dropdown', () => {\n",
        "date": "12.09.2020 16:32:29",
        "repo": "hug-sun/element3",
        "type": "feat",
        "sim_msg": "refactor: dropdown use teleport",
        "sim_diff": "diff --git a/src/components/dropdown/Dropdown.vue b/src/components/dropdown/Dropdown.vue @@ -6,8 +6,14 @@ import {\nEVENTS,\nfocus,\n} from '../../utils/dom.utils';\n-import { isBoolean } from '../../utils/object.utils';\n-import { defineComponent, onBeforeUnmount, onMounted, ref, watch } from 'vue';\n+import {\n+ defineComponent,\n+ onBeforeUnmount,\n+ onMounted,\n+ ref,\n+ watch,\n+ Teleport,\n+} from 'vue';\nconst DEFAULT_TAG = 'div';\n@@ -80,13 +86,19 @@ export default defineComponent({\nif (props.disabled) {\nreturn;\n}\n- if (isBoolean(s)) {\n+ if (typeof s === 'boolean') {\nshow.value = s;\n} else {\nshow.value = !show.value;\n}\nif (props.appendToBody) {\n- show.value ? appendDropdownToBody() : removeDropdownFromBody();\n+ if (show.value) {\n+ dropdown.value.style.display = 'block';\n+ const positionElement = props.positionElement || element.value;\n+ setDropdownPosition(dropdown.value, positionElement, props);\n+ } else {\n+ dropdown.value?.removeAttribute('style');\n+ }\n}\nemit('update:modelValue', show.value);\n}\n@@ -131,23 +143,6 @@ export default defineComponent({\n}\n}\n- function appendDropdownToBody() {\n- try {\n- const el = dropdown.value;\n- el.style.display = 'block';\n- document.body.appendChild(el);\n- const positionElement = props.positionElement || element.value;\n- setDropdownPosition(el, positionElement, props);\n- } catch (e) {\n- // Silent\n- }\n- }\n-\n- function removeDropdownFromBody() {\n- dropdown.value?.removeAttribute('style');\n- element.value?.appendChild(dropdown.value);\n- }\n-\nonMounted(() => {\ninitTrigger();\nif (triggerEl.value) {\n@@ -163,7 +158,6 @@ export default defineComponent({\n});\nonBeforeUnmount(() => {\n- removeDropdownFromBody();\nif (triggerEl.value) {\noff(triggerEl.value, EVENTS.CLICK, toggle);\noff(triggerEl.value, EVENTS.KEY_DOWN, onKeyPress);\n@@ -193,6 +187,7 @@ export default defineComponent({\n}}\n>\n{slots.default?.()}\n+ <Teleport to=\"body\" disabled={!props.appendToBody || !show.value}>\n<ul\nref={dropdown}\nclass={{\n@@ -202,6 +197,7 @@ export default defineComponent({\n>\n{slots.dropdown?.()}\n</ul>\n+ </Teleport>\n</Tag>\n);\n};\n",
        "chatgpt_rag": "test: update Dropdown.spec.js with jest configuration and timer functions"
    },
    {
        "msg": "feat: Add optional argument to cxxr",
        "diff": "diff --git a/src/system/pair.js b/src/system/pair.js @@ -14,10 +14,23 @@ class Pair {\nthis.cdr = cdr;\n}\n- caar(){ return this.car.car; }\n- cadr(){ return this.cdr.car; }\n- cdar(){ return this.cdr.car; }\n- cddr(){ return this.cdr.cdr; }\n+ // Returns `this.car.car`. If `err` is given and `this.car` is not a pair,\n+ // throws `err`.\n+ caar(err){ return this._get([\"car\", \"car\"], err) }\n+ cadr(err){ return this._get([\"cdr\", \"car\"], err) }\n+ cdar(err){ return this._get([\"cdr\", \"car\"], err) }\n+ cddr(err){ return this._get([\"cdr\", \"cdr\"], err) }\n+ _get(props, err) {\n+ let x = this;\n+ props.forEach(p => {\n+ if (x.hasOwnProperty(p)) {\n+ return x[p];\n+ } else if (err) {\n+ throw err;\n+ }\n+ });\n+ return x;\n+ }\nfirst(){ return this.car; }\nsecond(){ return this.cdr.car; }\n",
        "date": "16.01.2022 13:06:19",
        "repo": "biwascheme/biwascheme",
        "type": "feat",
        "sim_msg": "feat: adds pull stream tests for files.add",
        "sim_diff": "diff --git a/js/src/files.js b/js/src/files.js @@ -156,7 +156,26 @@ module.exports = (common) => {\n})\n})\n- it('a Readable Stream', (done) => {\n+ it('adds from readable stream', (done) => {\n+ const expectedCid = 'QmVv4Wz46JaZJeH5PMV4LGbRiiMKEmszPYY3g6fjGnVXBS'\n+\n+ const rs = new Readable()\n+ rs.push(Buffer.from('some data'))\n+ rs.push(null)\n+\n+ ipfs.files.add(rs, (err, filesAdded) => {\n+ expect(err).to.not.exist()\n+\n+ expect(filesAdded).to.be.length(1)\n+ const file = filesAdded[0]\n+ expect(file.path).to.equal(expectedCid)\n+ expect(file.size).to.equal(17)\n+ expect(file.hash).to.equal(expectedCid)\n+ done()\n+ })\n+ })\n+\n+ it('adds from array of objects with readable stream content', (done) => {\nconst expectedCid = 'QmVv4Wz46JaZJeH5PMV4LGbRiiMKEmszPYY3g6fjGnVXBS'\nconst rs = new Readable()\n@@ -177,6 +196,37 @@ module.exports = (common) => {\n})\n})\n+ it('adds from pull stream (callback)', (done) => {\n+ const expectedCid = 'QmRf22bZar3WKmojipms22PkXH1MZGmvsqzQtuSvQE3uhm'\n+\n+ ipfs.files.add(pull.values([Buffer.from('test')]), (err, res) => {\n+ if (err) return done(err)\n+ expect(res).to.have.length(1)\n+ expect(res[0]).to.deep.equal({ path: expectedCid, hash: expectedCid, size: 12 })\n+ done()\n+ })\n+ })\n+\n+ it('adds from pull stream (promise)', () => {\n+ const expectedCid = 'QmRf22bZar3WKmojipms22PkXH1MZGmvsqzQtuSvQE3uhm'\n+\n+ return ipfs.files.add(pull.values([Buffer.from('test')]))\n+ .then((res) => {\n+ expect(res).to.have.length(1)\n+ expect(res[0]).to.deep.equal({ path: expectedCid, hash: expectedCid, size: 12 })\n+ })\n+ })\n+\n+ it('adds from array of objects with pull stream content', () => {\n+ const expectedCid = 'QmRf22bZar3WKmojipms22PkXH1MZGmvsqzQtuSvQE3uhm'\n+\n+ return ipfs.files.add([{ content: pull.values([Buffer.from('test')]) }])\n+ .then((res) => {\n+ expect(res).to.have.length(1)\n+ expect(res[0]).to.deep.equal({ path: expectedCid, hash: expectedCid, size: 12 })\n+ })\n+ })\n+\nit('add a nested directory as array of tupples', function (done) {\n// TODO: https://github.com/ipfs/js-ipfs-api/issues/339\nif (!isNode) { this.skip() }\n@@ -367,6 +417,21 @@ module.exports = (common) => {\n})\n)\n})\n+\n+ it('adds with object chunks and pull stream content', (done) => {\n+ const expectedCid = 'QmRf22bZar3WKmojipms22PkXH1MZGmvsqzQtuSvQE3uhm'\n+\n+ pull(\n+ pull.values([{ content: pull.values([Buffer.from('test')]) }]),\n+ ipfs.files.addPullStream(),\n+ pull.collect((err, res) => {\n+ if (err) return done(err)\n+ expect(res).to.have.length(1)\n+ expect(res[0]).to.deep.equal({ path: expectedCid, hash: expectedCid, size: 12 })\n+ done()\n+ })\n+ )\n+ })\n})\ndescribe('.cat', () => {\n",
        "chatgpt_rag": "refactor: improve error handling in Pair class methods"
    },
    {
        "msg": "feat: add `process.browser` for compatibility",
        "diff": "diff --git a/src/plugins/process-global-plugin.js b/src/plugins/process-global-plugin.js * @returns {import('rollup').Plugin}\n*/\nexport default function processGlobalPlugin({ NODE_ENV = 'development', env = {} } = {}) {\n- const processObj = `{env:${JSON.stringify({ ...env, NODE_ENV })}}`;\n+ const processObj = JSON.stringify({ browser: true, env: { ...env, NODE_ENV } });\nreturn {\nname: 'process-global',\n",
        "date": "15.01.2021 20:26:37",
        "repo": "preactjs/wmr",
        "type": "feat",
        "sim_msg": "chore: fix rollup to new API",
        "sim_diff": "diff --git a/rollup.config.js b/rollup.config.js @@ -12,15 +12,18 @@ const env = process.env.NODE_ENV;\nconst name = process.env.npm_package_name;\nconst config = {\n+ name,\n+ ouput: {\nname,\nsourcemap: true,\n- external: ['react', 'prop-types', 'redux', 'react-redux'],\nglobals: {\nreact: 'React',\n'prop-types': 'PropTypes',\nredux: 'redux',\n'react-redux': 'react-redux',\n},\n+ },\n+ external: ['react', 'prop-types', 'redux', 'react-redux'],\nplugins: [\nreplace({\n'process.env.NODE_ENV': JSON.stringify(env),\n",
        "chatgpt_rag": "fix processGlobalPlugin to stringify processObj with browser flag"
    },
    {
        "msg": "feat(webpac_config/client/prod): remove comments from css files",
        "diff": "diff --git a/webpack_config/client/webpack.prod.babel.js b/webpack_config/client/webpack.prod.babel.js @@ -76,7 +76,14 @@ base.plugins.push(\nfilename: '[name].[chunkhash:8].css',\nallChunks: true\n}),\n- new OptimizeCssAssetsPlugin(),\n+ new OptimizeCssAssetsPlugin({\n+ cssProcessorOptions: {\n+ safe: true,\n+ discardComments: {\n+ removeAll: true\n+ }\n+ }\n+ }),\n// NOTE: ModuleConcatenationPlugin doesn't work on linux alpine,\n// I got an error trying to deploy this app to zeit's `now` when i use this plugin\n// new webpack.optimize.ModuleConcatenationPlugin(),\n@@ -114,17 +121,15 @@ base.plugins.push(\nname: 'manifest'\n}),\nnew webpack.BannerPlugin({\n- banner:\n- 'React-Semantic.UI-Starter. MIT License. Copyright (c) 2017 Copyright Vladimir Metnew. All Rights Reserved. https://github.com/Metnew/react-semantic.ui-starter'\n+ banner: config.banner\n}),\n- // XXX: this plugin seems cool, but there are few big issues:\n+ // XXX: this plugin looks cool, but there are few big issues:\n// 1. It sets invalid url to browserconfig.xml and manifest.json in index.html.\n// E.g: in generated index.html you can see:\n// <meta name=\"msapplication-config\" content=\"browserconfig.xml\">\n// 2. It looks like generated images aren't minified.(not sure)\n+ // 3. plugin is deprecated (at least look like it's deprecated)!\n// NOTE: It would be better to generate favicons without this plugin.\n- //\n- //\nnew FaviconsWebpackPlugin({\n// add theme-color property\nbackground: config.manifest.theme,\n",
        "date": "05.08.2017 12:11:04",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "feat(Scripts): add build timestamp",
        "sim_diff": "diff --git a/packages/scripts/webapp/preset/config/webpack.config.js b/packages/scripts/webapp/preset/config/webpack.config.js @@ -122,6 +122,7 @@ module.exports = ({ getUserConfig, mode }) => {\n],\n},\nplugins: [\n+ new webpack.DefinePlugin({ BUILD_TIMESTAMP: Date.now() }),\nnew MiniCssExtractPlugin({\nfilename: '[name]-[hash].css',\n}),\n@@ -135,9 +136,7 @@ module.exports = ({ getUserConfig, mode }) => {\nloadCSSAsync: true,\nappLoaderIcon: getUserConfig(['html', 'appLoaderIcon'], DEFAULT_APP_LOADER_ICON),\n}),\n- new CopyWebpackPlugin([\n- { from: 'src/assets' },\n- ]),\n+ new CopyWebpackPlugin([{ from: 'src/assets' }]),\nnew webpack.BannerPlugin({\nbanner: LICENSE_BANNER,\n}),\n",
        "chatgpt_rag": "style(Webpack): update OptimizeCssAssetsPlugin options and remove deprecated comments"
    },
    {
        "msg": "feat(cli): Added CLI support for the --global-var option :tada:",
        "diff": "diff --git a/lib/cli/index.js b/lib/cli/index.js @@ -314,7 +314,24 @@ var _ = require('lodash'),\nvar runParser = new argparse.ArgumentParser({\ndebug: true,\naddHelp: false\n- });\n+ }),\n+\n+ /**\n+ * Parses `=` separated key-value pairs into Postman variable list like arrays. `=` characters in values are\n+ * also supported.\n+ *\n+ * @param {String} arg - The argument provided to `--global-var`.\n+ * @returns {{key, value}} - The object representation of the current CLI variable.\n+ * @throws {Error} - An error is thrown for arguments that are not in the form foo=bar.\n+ */\n+ cliVar = function (arg) {\n+ var eqIndex = arg.indexOf('=');\n+\n+ if (eqIndex === -1) { throw new Error('CLI global vars must be specified in a `key=value` format'); }\n+\n+ // This is done instead of splitting by `=` to avoid chopping off `=` that could be present in the value\n+ return { key: arg.slice(0, eqIndex), value: arg.slice(eqIndex + 1) };\n+ };\nrunParser.addArgument('collection', {\nhelp: 'URL or path to a Postman Collection'\n@@ -398,6 +415,12 @@ var _ = require('lodash'),\ndefaultValue: false\n});\n+ runParser.addArgument(['--global-var'], {\n+ help: 'Allows the specification of global variables via the command line, in a key=value format',\n+ type: cliVar,\n+ action: 'append'\n+ });\n+\nreturn runParser;\n},\n",
        "date": "24.07.2017 14:33:45",
        "repo": "postmanlabs/newman",
        "type": "feat",
        "sim_msg": "refactor(i18n/scripts): factorize check-translation.js and translate-rules.js",
        "sim_diff": "diff --git a/scripts/i18n/cli.js b/scripts/i18n/cli.js @@ -81,6 +81,13 @@ const getArgs = (description, opts) => {\ndescription: 'The target language(s) to translate to.',\n})\n}\n+ if (opts.markdown) {\n+ args = args.option('markdown', {\n+ alias: 'm',\n+ type: 'boolean',\n+ description: 'Prints the result in a Markdown table format.',\n+ })\n+ }\nconst argv = args.help().alias('help', 'h').argv\n@@ -101,7 +108,14 @@ const getArgs = (description, opts) => {\nconst srcFile = argv.file ?? opts.defaultSrcFile\n- return { srcLang, destLangs, force: argv.force, remove: argv.remove, srcFile }\n+ return {\n+ srcLang,\n+ destLangs,\n+ force: argv.force,\n+ remove: argv.remove,\n+ srcFile,\n+ markdown: argv.markdown,\n+ }\n}\nconst exitIfError = (error, msg = undefined, progressBar = undefined) => {\n",
        "chatgpt_rag": "feat(cli): add support for specifying global variables via the command line\n\n- Added a new function `cliVar` to parse `=` separated key-value pairs into Postman variable list like arrays. `=` characters in values are also supported.\n- Added support for specifying global variables via the command line using the `--global-var` option in a key=value format."
    },
    {
        "msg": "feat(server/middlewares/auth): add default language\nfeat(server/middlewares/auth): add default language for req.user",
        "diff": "diff --git a/src/server/middlewares/auth.js b/src/server/middlewares/auth.js @@ -14,6 +14,7 @@ import {JWT_TOKEN} from 'common/api/LocalStorageCookiesSvc'\nexport default (req: Object, res: Object, next: () => void) => {\nreq.user = {\ntoken: null,\n+ lang: 'en',\nisLoggedIn: false\n}\n",
        "date": "10.09.2017 17:33:32",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "feat(account): add account management support",
        "sim_diff": "diff --git a/src/middleware/packages/auth/services/auth.local.js b/src/middleware/packages/auth/services/auth.local.js @@ -154,7 +154,8 @@ const AuthLocalService = {\naliases: {\n'GET /': 'auth.account.findSettingsByWebId',\n'POST /': 'auth.account.updateAccountSettings'\n- }\n+ },\n+ authorization: true\n};\nconst routes = [\n",
        "chatgpt_rag": "feat(auth): add language support for user profile"
    },
    {
        "msg": "feat(reducers/auth): remove jwt token from state.me.auth",
        "diff": "diff --git a/src/common/reducers/auth/index.js b/src/common/reducers/auth/index.js // @flow\n-import {\n- isLoggedIn as hasLocalToken,\n- getLocalToken\n-} from 'api/LocalStorageCookiesSvc'\n+import {isLoggedIn as hasLocalToken} from 'api/LocalStorageCookiesSvc'\nimport {\nLOGIN_AUTH_FAIL,\nLOGIN_AUTH_PENDING,\n@@ -23,7 +20,6 @@ export type State = {\nisLoading: boolean,\nisLoaded: boolean,\nisLoggedIn: boolean,\n- token: string | null,\nerrors: Object\n}\n@@ -38,7 +34,6 @@ export const initialState: State = {\nisLoading: false,\nisLoaded: false,\nisLoggedIn: hasLocalToken(),\n- token: getLocalToken(),\nerrors: {}\n}\n@@ -52,7 +47,6 @@ export function auth (state: State = initialState, action: Action): State {\nisLoading: false,\nisLoaded: true,\nisLoggedIn: false,\n- token: null,\nerrors: {}\n}\n}\n@@ -63,18 +57,15 @@ export function auth (state: State = initialState, action: Action): State {\nisLoading: false,\nisLoaded: true,\nisLoggedIn: false,\n- token: null,\nerrors\n}\n}\ncase LOGIN_AUTH_SUCCESS: {\n- const {token} = action.payload\nreturn {\n...state,\nisLoading: false,\nisLoaded: true,\n- isLoggedIn: true,\n- token\n+ isLoggedIn: true\n}\n}\ncase LOGIN_AUTH_PENDING: {\n",
        "date": "17.09.2017 14:55:40",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "fix: refresh login based on loaded, not authenticated prop",
        "sim_diff": "diff --git a/src/client/auth/authActions.js b/src/client/auth/authActions.js import Cookie from 'js-cookie';\nimport { createAction } from 'redux-actions';\n-import { getAuthenticatedUserName, getIsAuthenticated } from '../reducers';\n+import { getAuthenticatedUserName, getIsAuthenticated, getIsLoaded } from '../reducers';\nimport { createAsyncActionType } from '../helpers/stateHelpers';\nimport { addNewNotification } from '../app/appActions';\nimport { getFollowing } from '../user/userActions';\n@@ -24,9 +24,11 @@ export const BUSY_LOGIN = createAsyncActionType('@auth/BUSY_LOGIN');\nconst loginError = createAction(LOGIN_ERROR);\nexport const login = () => (dispatch, getState, { steemConnectAPI }) => {\n+ const state = getState();\n+\nlet promise = Promise.resolve(null);\n- if (getIsAuthenticated(getState())) {\n+ if (getIsLoaded(state)) {\npromise = Promise.resolve(null);\n} else if (!steemConnectAPI.options.accessToken) {\npromise = Promise.reject(new Error('There is not accessToken present'));\n@@ -40,7 +42,7 @@ export const login = () => (dispatch, getState, { steemConnectAPI }) => {\npromise,\n},\nmeta: {\n- refresh: getIsAuthenticated(getState()),\n+ refresh: getIsLoaded(state),\n},\n}).catch(() => dispatch(loginError()));\n};\n",
        "chatgpt_rag": "refactor: simplify import statement in auth reducer and remove unnecessary token property"
    },
    {
        "msg": "feat(CarPlay): Add CarPlay plugin to the list of possible plugins",
        "diff": "diff --git a/packages/rnv/pluginTemplates/renative.plugins.json b/packages/rnv/pluginTemplates/renative.plugins.json },\n\"@lightningjs/sdk\": {\n\"version\": \"3.0.0\"\n+ },\n+ \"react-native-carplay\": {\n+ \"version\": \"2.0.0\",\n+ \"ios\": {\n+ \"path\": \"node_modules/react-native-carplay\",\n+ \"podName\": \"react-native-carplay\",\n+ \"appDelegateImports\": [\"CarPlay\", \"react_native_carplay\"],\n+ \"appDelegateExtensions\": [\"CPApplicationDelegate\"],\n+ \"appDelegateMethods\": {\n+ \"application\": {\n+ \"didConnectCarInterfaceController\": [\n+ \"RNCarPlay.connect(with: interfaceController, window: window)\"\n+ ],\n+ \"didDisconnectCarInterfaceController\": [\"RNCarPlay.disconnect()\"]\n+ }\n+ }\n+ }\n}\n}\n}\n",
        "date": "15.06.2021 14:00:16",
        "repo": "pavjacko/renative",
        "type": "feat",
        "sim_msg": "feat(widget-message): implement activity retry feature",
        "sim_diff": "diff --git a/packages/node_modules/@ciscospark/widget-message/src/container.js b/packages/node_modules/@ciscospark/widget-message/src/container.js @@ -28,7 +28,7 @@ import {\nimport {\nsetTyping\n} from '@ciscospark/redux-module-indicators';\n-import {addFiles, removeInflightActivity} from '@ciscospark/redux-module-activity';\n+import {addFiles, removeInflightActivity, retryFailedActivity} from '@ciscospark/redux-module-activity';\nimport ConfirmationModal from '@ciscospark/react-component-confirmation-modal';\nimport Cover from '@ciscospark/react-component-cover';\nimport LoadingScreen from '@ciscospark/react-component-loading-screen';\n@@ -479,6 +479,17 @@ export class MessageWidget extends Component {\nprops.hideDeleteModal();\n}\n+ @autobind\n+ handleActivityRetry(activityId) {\n+ const props = this.props;\n+ const {\n+ activity,\n+ sparkInstance\n+ } = this.props;\n+ const failedActivity = activity.getIn([`activityFailures`, activityId]);\n+ return props.retryFailedActivity(failedActivity, sparkInstance);\n+ }\n+\n/**\n* Adds dropped file into activity store\n*\n@@ -594,6 +605,7 @@ export class MessageWidget extends Component {\n<ActivityList\nonActivityDelete={this.handleActivityDelete}\nonActivityFlag={this.handleActivityFlag}\n+ onActivityRetry={this.handleActivityRetry}\n/>\n}\n<div className={classNames(`ciscospark-indicators`, styles.indicators)}><ReadReceipts /></div>\n@@ -657,6 +669,7 @@ const injectedPropTypes = {\nremoveFlagFromServer: PropTypes.func.isRequired,\nreceiveMercuryActivity: PropTypes.func.isRequired,\nreceiveMercuryComment: PropTypes.func.isRequired,\n+ retryFailedActivity: PropTypes.func.isRequired,\nremoveInflightActivity: PropTypes.func.isRequired,\nsetScrollPosition: PropTypes.func.isRequired,\nsetTyping: PropTypes.func.isRequired,\n@@ -699,6 +712,7 @@ export default connect(\nreceiveMercuryActivity,\nreceiveMercuryComment,\nremoveInflightActivity,\n+ retryFailedActivity,\nsetScrollPosition,\nsetTyping,\nshowScrollToBottomButton,\n",
        "chatgpt_rag": "feat(rnv): add react-native-carplay plugin to renative.plugins.json"
    },
    {
        "msg": "feat(Header): add FormattedMessage",
        "diff": "diff --git a/src/common/components/parts/Header/index.jsx b/src/common/components/parts/Header/index.jsx import React from 'react'\nimport PropTypes from 'prop-types'\nimport {Icon, Popup} from 'semantic-ui-react'\n+import {FormattedMessage, FormattedDate} from 'react-intl'\n+\nimport {isEqual} from 'lodash'\nimport {\nStyledHeader,\n@@ -56,7 +58,16 @@ class Header extends React.Component {\n<Icon name=\"github\" size=\"large\" link fitted />\n</HeaderButton>\n}\n- content={`RSUIS on @Github`}\n+ content={\n+ <FormattedMessage\n+ id=\"Header.Popup.HeaderButton\"\n+ defaultMessage={`Hello {name}, today is {today, date}`}\n+ values={{\n+ name: <b>user</b>,\n+ today: Date.now()\n+ }}\n+ />\n+ }\ninverted\n/>\n</HeaderInner>\n",
        "date": "09.09.2017 18:02:34",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "feat: add navigation items and drawer",
        "sim_diff": "diff --git a/src/components/Header/Header.js b/src/components/Header/Header.js import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport AppBar from \"material-ui/AppBar\";\n+import Button from \"material-ui/Button\";\n+import MenuList from \"material-ui/Menu/MenuList\";\nimport Toolbar from \"material-ui/Toolbar\";\nimport Typography from \"material-ui/Typography\";\nimport IconButton from \"material-ui/IconButton\";\nimport Drawer from \"material-ui/Drawer\";\nimport CartIcon from \"mdi-material-ui/Cart\";\n-\n+import MenuIcon from \"mdi-material-ui/Menu\";\nimport { inject, observer } from \"mobx-react\";\n+import { observable, computed } from \"mobx\";\nimport { withStyles } from \"material-ui/styles\";\n+import NavigationItem from \"../NavigationItem\";\nconst styles = () => ({\n- title: {\n- flex: 1\n- },\ncart: {\nwidth: 320\n+ },\n+ menu: {\n+ flex: 1\n}\n});\n+// TODO: Get tag data from GraphQL, this is just a sample\n+const tags = [\n+ { name: \"men\", title: \"Men\" },\n+ { name: \"women\", title: \"Women\" },\n+ {\n+ name: \"kids\",\n+ title: \"Kids\",\n+ relatedTags: [\n+ {\n+ name: \"test1\",\n+ title: \"Test 1\",\n+ relatedTags: [\n+ { name: \"men\", title: \"Men\" },\n+ { name: \"women\", title: \"Women\" },\n+ { name: \"men\", title: \"Men\" },\n+ { name: \"women\", title: \"Women\" }\n+ ]\n+ },\n+ {\n+ name: \"test2\",\n+ title: \"Test 2\",\n+ relatedTags: [\n+ { name: \"men\", title: \"Men\" },\n+ { name: \"women\", title: \"Women\" },\n+ { name: \"men\", title: \"Men\" },\n+ { name: \"women\", title: \"Women\" }\n+ ]\n+ },\n+ { name: \"test3\", title: \"Test 3\" }\n+ ]\n+ }\n+];\n+\n@withStyles(styles)\n@inject(\"uiStore\")\n@observer\n@@ -27,17 +64,42 @@ class Header extends Component {\nclasses: PropTypes.object,\nuiStore: PropTypes.object\n}\n+\n+ @observable _open = false\n+\n+ @computed get() { return this._open; }\n+ set(value) { this._open = value; }\n+\nrender() {\nconst { classes, uiStore } = this.props;\nreturn (\n- <AppBar position=\"static\">\n+ <AppBar position=\"static\" elevation={0}>\n<Toolbar>\n- <Typography className={classes.title} variant=\"title\">Reaction Commerce</Typography>\n- <IconButton onClick={uiStore.toggleCartOpen}>\n+ <IconButton color=\"inherit\" onClick={uiStore.toggleMenuDrawerOpen}>\n+ <MenuIcon/>\n+ </IconButton>\n+ <Typography className={classes.title} color=\"inherit\" variant=\"title\">Reaction</Typography>\n+\n+ <nav className={classes.menu}>\n+ {tags.map((tag, index) => (\n+ <Button key={index} href={`/tag/${tag.name}`} color=\"inherit\">{tag.name}</Button>\n+ ))}\n+ </nav>\n+\n+ <IconButton color=\"inherit\" onClick={uiStore.toggleCartOpen}>\n<CartIcon />\n</IconButton>\n</Toolbar>\n+ <Drawer open={uiStore.menuDrawerOpen} onClose={uiStore.toggleMenuDrawerOpen}>\n+ <div className={classes.cart}>\n+ <MenuList>\n+ {tags.map((tag, index) => (\n+ <NavigationItem key={index} menuItem={tag} />\n+ ))}\n+ </MenuList>\n+ </div>\n+ </Drawer>\n<Drawer anchor=\"right\" open={uiStore.cartOpen} onClose={uiStore.toggleCartOpen}>\n<div className={classes.cart}>Cart</div>\n</Drawer>\n",
        "chatgpt_rag": "feat: add internationalization to header popup content"
    },
    {
        "msg": "feat(.babelrc): add babel-plugin-webpack-alias in test and development\nadd babel-plugin-webpack-alias in test and development",
        "diff": "diff --git a/.babelrc b/.babelrc },\n\"development\": {\n\"plugins\": [\n- \"react-hot-loader/babel\"\n+ \"react-hot-loader/babel\",\n+ [\n+ \"babel-plugin-webpack-alias\",\n+ {\n+ \"config\": \"./webpack_config/client/webpack.base.js\",\n+ \"findConfig\": true\n+ }\n+ ]\n+ ]\n+ },\n+ \"test\": {\n+ \"plugins\": [\n+ [\n+ \"babel-plugin-webpack-alias\",\n+ {\n+ \"config\": \"./webpack_config/webpack.isomorphic.js\",\n+ \"findConfig\": true\n+ }\n+ ]\n]\n}\n}\n",
        "date": "14.08.2017 16:59:06",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "build: unconditionally use react-hot-loader babel plugin",
        "sim_diff": "diff --git a/.babelrc.js b/.babelrc.js @@ -27,6 +27,7 @@ module.exports = (api, envOverride) => {\n'@babel/plugin-proposal-export-default-from',\n'@babel/plugin-proposal-export-namespace-from',\n'@babel/plugin-proposal-class-properties',\n+ 'module:react-hot-loader/babel',\n],\n};\n@@ -39,10 +40,6 @@ module.exports = (api, envOverride) => {\n);\n}\n- if (env === 'development') {\n- preset.plugins.push('module:react-hot-loader/babel');\n- }\n-\nif (env === 'production') {\npreset.plugins.push(\n'@babel/plugin-transform-react-constant-elements',\n",
        "chatgpt_rag": "build: unconditionally use react-hot-loader babel plugin and add webpack alias plugin for development and test environments"
    },
    {
        "msg": "feat(src/common/routing/index.jsx): use  /* webpackMode: \"eager\" for server-side code",
        "diff": "diff --git a/src/common/routing/index.jsx b/src/common/routing/index.jsx @@ -7,7 +7,12 @@ export const history = getHistory()\nconst loadLazyComponent = url => {\nreturn async cb => {\n- const loadComponent = await import(/* webpackMode: \"lazy-once\", webpackChunkName: \"lazy-containers\" */ `containers/${url}/index.jsx`)\n+ const str = `containers/${url}/index.jsx`\n+ if (process.env.BROWSER) {\n+ const loadComponent = await import(/* webpackMode: \"lazy-once\", webpackChunkName: \"lazy-containers\" */ str)\n+ return loadComponent\n+ }\n+ const loadComponent = await import(/* webpackMode: \"eager\", webpackChunkName: \"lazy-containers\" */ str)\nreturn loadComponent\n}\n}\n",
        "date": "10.08.2017 06:18:33",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "refactor(cli): init auto import components options",
        "sim_diff": "diff --git a/packages/webpack-uni-pages-loader/lib/index-new.js b/packages/webpack-uni-pages-loader/lib/index-new.js @@ -18,8 +18,7 @@ const {\nconst {\npagesJsonJsFileName,\n- refreshAutoComponentMap,\n- parseUsingAutoImportComponents\n+ initAutoImportComponents\n} = require('@dcloudio/uni-cli-shared/lib/pages')\nconst parseStyle = require('./util').parseStyle\n@@ -33,17 +32,6 @@ function renameUsingComponents (jsonObj) {\nreturn jsonObj\n}\n-let lastUsingAutoImportComponentsJson = ''\n-\n-function initAutoImportComponents (usingAutoImportComponents = {}) {\n- const newUsingAutoImportComponentsJson = JSON.stringify(usingAutoImportComponents)\n- if (newUsingAutoImportComponentsJson !== lastUsingAutoImportComponentsJson) {\n- lastUsingAutoImportComponentsJson = newUsingAutoImportComponentsJson\n- process.UNI_AUTO_COMPONENTS = parseUsingAutoImportComponents(usingAutoImportComponents)\n- refreshAutoComponentMap()\n- }\n-}\n-\nmodule.exports = function (content) {\nthis.cacheable && this.cacheable()\n",
        "chatgpt_rag": "refactor(routing): optimize lazy component loading logic"
    },
    {
        "msg": "feat: add keyboard navigation for Schedule",
        "diff": "diff --git a/packages/veui/src/components/Schedule.vue b/packages/veui/src/components/Schedule.vue <td v-for=\"(hour, j) in day\" :key=\"j\" :class=\"{ 'veui-schedule-selected': hour.isSelected }\">\n<button type=\"button\" :disabled=\"realDisabled || hour.isDisabled\"\n:class=\"mergeClass({ 'veui-schedule-selected': hour.isSelected }, week[i], j)\"\n- :ref=\"`${week[i]}-${j}`\"\n+ :ref=\"`hour-${week[i]}-${j}`\"\n@mousedown=\"handleMousedown(i, j)\"\n@mouseenter=\"handleHover(i, j)\"\n- @mouseup=\"pick()\"><slot name=\"hour\" :day=\"week[i]\" :hour=\"j\"/></button>\n+ @mouseup=\"pick\"\n+ @keydown.space.enter=\"handleMousedown(i, j)\"\n+ @keyup.space.enter=\"pick\"\n+ @keydown.up.prevent=\"moveFocus((i + 6) % 7, j)\"\n+ @keydown.right.prevent=\"moveFocus(i, (j + 25) % 24)\"\n+ @keydown.down.prevent=\"moveFocus((i + 1) % 7, j)\"\n+ @keydown.left.prevent=\"moveFocus(i, (j + 23) % 24)\"><slot name=\"hour\" :day=\"week[i]\" :hour=\"j\"/></button>\n</td>\n</tr>\n</table>\n@@ -239,7 +245,7 @@ export default {\nif (!current) {\nreturn null\n}\n- return `${current.day}-${current.hour}`\n+ return `hour-${current.day}-${current.hour}`\n},\ncurrentLabel () {\nlet current = this.current\n@@ -366,6 +372,15 @@ export default {\nthis.$delete(this.localSelected, day)\n}\nthis.$emit('select', this.localSelected)\n+ },\n+ moveFocus (dayIndex, hour) {\n+ let day = this.week[dayIndex]\n+ this.handleHover(dayIndex, hour)\n+\n+ let el = (this.$refs[`hour-${day}-${hour}`] || [])[0]\n+ if (el && typeof el.focus === 'function') {\n+ el.focus()\n+ }\n}\n}\n}\n",
        "date": "11.06.2018 15:35:37",
        "repo": "ecomfe/veui",
        "type": "feat",
        "sim_msg": "fix(QTime): emit immediately on desktop when starting drag",
        "sim_diff": "diff --git a/ui/src/components/time/QTime.js b/ui/src/components/time/QTime.js @@ -246,11 +246,22 @@ export default Vue.extend({\n},\n__click (evt) {\n+ // __activate() has already updated the offset\n+ // we only need to change the view now, so:\n+\n+ if (this.$q.platform.is.desktop !== true) {\nthis.__drag({ isFirst: true, evt })\n+ }\n+\nthis.__drag({ isFinal: true, evt })\n},\n- __drag (event) {\n+ __activate (evt) {\n+ this.__drag({ isFirst: true, evt }, true)\n+ this.__drag({ isFinal: true, evt }, true)\n+ },\n+\n+ __drag (event, noViewChange) {\n// cases when on a popup getting closed\n// on previously emitted value\nif (this._isBeingDestroyed === true || this._isDestroyed === true) {\n@@ -275,7 +286,7 @@ export default Vue.extend({\nthis.__updateClock(event.evt)\n- if (event.isFinal) {\n+ if (event.isFinal && noViewChange !== true) {\nthis.dragging = false\nif (this.view === 'Hour') {\n@@ -500,7 +511,8 @@ export default Vue.extend({\nh('div', {\nstaticClass: 'q-time__clock cursor-pointer non-selectable',\non: cache(this, 'click', {\n- click: this.__click\n+ click: this.__click,\n+ mousedown: this.__activate\n}),\ndirectives: cache(this, 'touch', [{\nname: 'touch-pan',\n",
        "chatgpt_rag": "refactor(Schedule): improve keyboard navigation and focus handling in Schedule component"
    },
    {
        "msg": "feat(avatar): docs",
        "diff": "diff --git a/packages/chakra-ui-core/src/CAvatar/CAvatar.js b/packages/chakra-ui-core/src/CAvatar/CAvatar.js @@ -54,9 +54,6 @@ export const CAvatarBadge = {\nborderColor: borderColorStyle[this.colorMode],\nrounded: 'full',\n...forwardProps(this.$props)\n- },\n- attrs: {\n- 'data-chakra-component': 'CAvatarBadge'\n}\n})\n}\n@@ -83,8 +80,7 @@ const CAvatarName = {\n...forwardProps(this.$props)\n},\nattrs: {\n- 'aria-label': this.name,\n- 'data-chakra-component': 'CAvatarName'\n+ 'aria-label': this.name\n}\n}, [this.name && getInitials(this.name)])\n}\n@@ -107,9 +103,6 @@ const CDefaultAvatar = {\nlineHeight: '1rem',\n...forwardProps(this.$props)\n},\n- attrs: {\n- 'data-chakra-component': 'CDefaultAvatar'\n- },\ndomProps: {\ninnerHTML: `\n<svg fill=\"#fff\" viewBox=\"0 0 128 128\" role=\"img\">\n@@ -211,10 +204,10 @@ export const CAvatar = {\nw: '100%',\nh: '100%',\nrounded: 'full',\n- objectFit: 'cover'\n+ objectFit: 'cover',\n+ alt: this.name\n},\nattrs: {\n- alt: this.name,\nsrc: this.src\n}\n})\n@@ -225,16 +218,11 @@ export const CAvatar = {\nreturn h(CAvatarName, {\nprops: {\nname: this.name,\n- w: _size,\n- h: _size\n+ size: _size\n}\n})\n} else {\nreturn h(CDefaultAvatar, {\n- props: {\n- w: '100%',\n- h: '100%'\n- },\nattrs: {\n'aria-label': this.name\n}\n@@ -243,20 +231,12 @@ export const CAvatar = {\n}\n}\n- const { size, ...avatarStyles } = avatarStyleProps\n-\nreturn h(CBox, {\nprops: {\nfontSize: fontSize,\nlineHeight: _size,\n- verticalAlign: 'top',\n- w: size,\n- h: size,\n- ...avatarStyles,\n+ ...avatarStyleProps,\n...forwardProps(this.$props)\n- },\n- attrs: {\n- 'data-chakra-component': 'CAvatar'\n}\n}, [\nrenderChildren(),\n",
        "date": "05.04.2020 17:41:01",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "feat",
        "sim_msg": "refactor(avatar): change placeholder to icon",
        "sim_diff": "diff --git a/packages/yoga/src/Avatar/web/Avatar.jsx b/packages/yoga/src/Avatar/web/Avatar.jsx @@ -5,7 +5,7 @@ import { string, func, checkPropTypes } from 'prop-types';\nimport Box from '../../Box';\nimport Icon from '../../Icon';\n-const Avatar = ({ src, alt, fill, stroke, placeholder, ...otherProps }) => (\n+const Avatar = ({ src, alt, fill, stroke, icon, ...otherProps }) => (\n<Box\nbgColor=\"elements.selectionAndIcons\"\ndisplay=\"flex\"\n@@ -21,13 +21,7 @@ const Avatar = ({ src, alt, fill, stroke, placeholder, ...otherProps }) => (\n{src ? (\n<img src={src} alt={alt} />\n) : (\n- <Icon\n- as={placeholder}\n- width=\"50%\"\n- height=\"50%\"\n- fill={fill}\n- stroke={stroke}\n- />\n+ <Icon as={icon} width=\"50%\" height=\"50%\" fill={fill} stroke={stroke} />\n)}\n</Box>\n);\n@@ -49,7 +43,19 @@ Avatar.propTypes = {\nreturn null;\n},\n- placeholder: func,\n+ icon: (props, propName, componentName) => {\n+ const { src } = props;\n+\n+ if (src) {\n+ return new Error(\n+ `Invalid prop ${propName} supplied to ${componentName}.`,\n+ );\n+ }\n+\n+ checkPropTypes({ [propName]: func }, props, 'prop', componentName);\n+\n+ return null;\n+ },\nfill: string,\nstroke: string,\n...Box.propTypes,\n@@ -58,7 +64,7 @@ Avatar.propTypes = {\nAvatar.defaultProps = {\nsrc: undefined,\nalt: undefined,\n- placeholder: BuildingFilled,\n+ icon: BuildingFilled,\nfill: 'white',\nstroke: undefined,\n...Box.defaultProps,\n",
        "chatgpt_rag": "refactor(avatar): remove unnecessary data-chakra-component attributes and adjust objectFit and alt properties in CAvatar component"
    },
    {
        "msg": "feat: added css for github button",
        "diff": "diff --git a/components/SocialLoginGroup/SocialLoginGroup.css b/components/SocialLoginGroup/SocialLoginGroup.css }\n/* Github */\n-.githubButton {\n+\n+/* WHITE */\n+\n+/* .githubButton {\ncolor: #24292e;\nbackground: #eff3f6;\ntransition: opacity 0.15s linear;\n.githubButton::before {\nborder-right: #1b1f23 1px solid;\n- background: url(\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/14082/icon_github.png\") 6px 6px\n+ background-color: #eff3f6;\n+ background-image: url(\"http://localhost:3000/static/images/icons/github_logo_black.svg\");\n+ background-repeat: no-repeat;\n+}\n+\n+.githubButton:active,\n+.githubButton:hover,\n+.githubButton:focus {\n+ opacity: 0.8;\n+ cursor: pointer;\n+} */\n+\n+/* .githubButton {\n+ color: #24292e;\n+ background: #eff3f6;\n+ transition: opacity 0.15s linear;\n+ border: 1px solid #1b1f23;\n+}\n+\n+.githubButton::before {\n+ content: url(\"http://localhost:3000/static/images/icons/github_logo_black.svg\");\n+ border-right: #1b1f23 1px solid;\n+ /* background-color: #eff3f6;\n+ background-image: url(\"http://localhost:3000/static/images/icons/github_logo.svg\");\n+ background-repeat: no-repeat;\n+}\n+\n+.githubButton:active,\n+.githubButton:hover,\n+.githubButton:focus {\n+ opacity: 0.8;\n+ cursor: pointer;\n+} */\n+\n+/* BLACK */\n+.githubButton {\n+ color: #eff3f6;\n+ background: #24292e;\n+ transition: opacity 0.15s linear;\n+ border: 1px solid #1b1f23;\n+}\n+\n+.githubButton::before {\n+ border-right: #b0b0b0 1px solid;\n+ background: url(\"http://localhost:3000/static/images/icons/github_octocat_logo.svg\") 4px 4px\nno-repeat;\n}\n",
        "date": "16.10.2019 12:32:51",
        "repo": "operationcode/front-end",
        "type": "feat",
        "sim_msg": "refactor: update subwallet ui",
        "sim_diff": "diff --git a/src/css/main.css b/src/css/main.css @@ -229,16 +229,21 @@ ul.button-group li.selected {\nbackground-color: #1560BD;\n}\n+.modal-content ul.subwallets {\n+ padding-top: 6px;\n+}\n+\n.modal-content ul.subwallets li.line-b {\nborder-bottom: 1px solid #E9E9EC;\nbackground: #EFEFEF;\nmargin: 0px 10px;\nbox-sizing: border-box;\nborder: 0px solid transparent;\n- border-left: 4px solid #D6D6D6;\n+ border-radius: 5px;\nborder-top-left-radius: 15px;\nborder-bottom-left-radius: 15px;\nmargin-bottom: 3px;\n+ box-shadow: -3px 2px 5px rgb(208, 208, 208);\n}\n.modal-content ul.subwallets li.line-b a {\ncolor: #454648 !important;\n@@ -249,10 +254,11 @@ ul.button-group li.selected {\nbackground-color: #DBE9FF;\nborder-radius: 0px;\nmargin: 0px 10px;\n- border-left: 3px solid #97B7E8;\n+ border-radius: 5px;\nborder-top-left-radius: 15px;\nborder-bottom-left-radius: 15px;\nmargin-bottom: 3px;\n+ box-shadow: -3px 2px 5px rgba(134, 174, 236, 0.72);\n}\n.modal-content ul.subwallets li.line-b.selected a {\ncolor: #454648 !important;\n",
        "chatgpt_rag": "style: update Github button design"
    },
    {
        "msg": "feat: use contenthash instead of chunkhash and hash",
        "diff": "diff --git a/packages/razzle/config/createConfigAsync.js b/packages/razzle/config/createConfigAsync.js @@ -532,7 +532,7 @@ module.exports = (\nexclude: webpackOptions.fileLoaderExlude,\nloader: require.resolve('file-loader'),\noptions: {\n- name: `${razzleOptions.mediaPrefix}/[name].[hash:8].[ext]`,\n+ name: `${razzleOptions.mediaPrefix}/[name].[contenthash:8].[ext]`,\nemitFile: IS_WEB,\n},\n},\n@@ -544,7 +544,7 @@ module.exports = (\nloader: require.resolve('url-loader'),\noptions: {\nlimit: 10000,\n- name: `${razzleOptions.mediaPrefix}/[name].[hash:8].[ext]`,\n+ name: `${razzleOptions.mediaPrefix}/[name].[contenthash:8].[ext]`,\nemitFile: IS_WEB,\n},\n},\n@@ -844,8 +844,8 @@ module.exports = (\nconfig.output = {\npath: paths.appBuildPublic,\npublicPath: dotenv.raw.PUBLIC_PATH || '/',\n- filename: `${razzleOptions.jsPrefix}/bundle.[chunkhash:8].js`,\n- chunkFilename: `${razzleOptions.jsPrefix}/[name].[chunkhash:8].chunk.js`,\n+ filename: `${razzleOptions.jsPrefix}/bundle.[contenthash:8].js`,\n+ chunkFilename: `${razzleOptions.jsPrefix}/[name].[contenthash:8].chunk.js`,\nlibraryTarget: 'var',\n};\n",
        "date": "23.08.2020 17:44:58",
        "repo": "jaredpalmer/razzle",
        "type": "feat",
        "sim_msg": "refactor(build-config): use contenthash for mini-css-extract-plugin",
        "sim_diff": "diff --git a/packages/build-config/configs/build.js b/packages/build-config/configs/build.js @@ -60,8 +60,7 @@ module.exports = {\nnew StatsWriterPlugin({ fields: null }),\nnew ServiceWorkerPlugin(),\nnew MiniCSSExtractPlugin({\n- filename: getAssetPath('[name]-[hash:16].css'),\n- chunkFilename: getAssetPath('[name]-[hash:16].css'),\n+ filename: getAssetPath('[name]-[contenthash:16].css'),\n}),\nnew webpack.HashedModuleIdsPlugin(),\nnew webpack.EnvironmentPlugin(\n",
        "chatgpt_rag": "refactor(razzle): use contenthash for file and chunk names in webpack config"
    },
    {
        "msg": "feat: CSS Variables support",
        "diff": "diff --git a/scss/mixins/_utilities.scss b/scss/mixins/_utilities.scss // Don't prefix if value key is null (eg. with shadow class)\n$property-class-modifier: if($key, if($property-class == \"\" and $infix == \"\", \"\", \"-\") + $key, \"\");\n+ // Generate also CSS Variable\n+ $generate-vars: if(map-has-key($utility, vars), map-get($utility, vars), \"false\");\n+\n@if map-get($utility, rfs) {\n// Inside the media query\n@if $is-rfs-media-query {\n}\n.#{$property-class + $infix + $property-class-modifier} {\n@each $property in $properties {\n+ @if $generate-vars == true {\n#{$property}: var(--#{$variable-prefix}#{$property-class + $infix + $property-class-modifier}, $value) if($enable-important-utilities, !important, null);\n}\n+ @else {\n+ #{$property}: $value if($enable-important-utilities, !important, null);\n+ }\n+ }\n}\n@each $pseudo in $state {\n",
        "date": "04.01.2021 15:06:26",
        "repo": "coreui/coreui",
        "type": "feat",
        "sim_msg": "perf: additional utils for brand colors only (use light for gray)",
        "sim_diff": "diff --git a/scss/_utilities.scss b/scss/_utilities.scss /**\n*\n* Provide additional utility classes for theming\n- * Extra utilities with brand and gray colors\n+ * Extra utilities with brand colors\n*\n*/\n-@mixin utils-variant($color, $value) {\n- // Text colors\n- .text_#{$color} {\n- color: $value;\n- }\n- .hover\\:text_#{$color}:hover {\n- color: $value;\n- }\n-\n- // Standalone background colors\n- .bg_#{$color} {\n- background-color: $value;\n- }\n- .hover\\:bg_#{$color}:hover {\n- background-color: $value;\n- }\n-\n- // Border colors\n- .border_#{$color} {\n- border-color: $value;\n- }\n- .hover\\:border_#{$color}:hover {\n- border-color: $value;\n- }\n-}\n-\n// Map brand colors pallete\n$brand-colors: (\n\"primary-lightest\": lighten($primary, 33%),\n@@ -51,7 +25,6 @@ $brand-colors: (\n@each $color, $value in $brand-colors {\n// Block utilities with background color and YIQ (white or black) text color\n- // For brand colors only\n.block_#{$color} {\nbackground-color: $value;\ncolor: color-yiq($value);\n@@ -60,10 +33,28 @@ $brand-colors: (\nbackground-color: $value;\ncolor: color-yiq($value);\n}\n- @include utils-variant($color, $value);\n+\n+ // Text colors\n+ .text_#{$color} {\n+ color: $value;\n+ }\n+ .hover\\:text_#{$color}:hover {\n+ color: $value;\n}\n-@each $color, $value in $grays {\n- // utilities for grayscale\n- @include utils-variant(\"gray-#{$color}\", $value);\n+ // Standalone background colors\n+ .bg_#{$color} {\n+ background-color: $value;\n+ }\n+ .hover\\:bg_#{$color}:hover {\n+ background-color: $value;\n+ }\n+\n+ // Border colors\n+ .border_#{$color} {\n+ border-color: $value;\n+ }\n+ .hover\\:border_#{$color}:hover {\n+ border-color: $value;\n+ }\n}\n",
        "chatgpt_rag": "feat: generate CSS variables for utilities with specified vars map, add option to enable/disable generation of CSS variables"
    },
    {
        "msg": "feat(api/links.json): fix links desc",
        "diff": "diff --git a/src/server/api/links.json b/src/server/api/links.json \"icon\": \"github\",\n\"header\": \"SSR + Webpack (in development)\",\n\"desc\":\n- \"Step by step guide with working example of hot-reloaded server and client with SSR with Webpack in development.\"\n+ \"Step by step guide with working example of server and client with hot-reloading and SSR with Webpack (in development).\"\n},\n{\n- \"link\": \"https://github.com/Metnew/tiny-universal-example\",\n+ \"link\": \"https://github.com/Metnew/noir\",\n\"icon\": \"bug\",\n- \"header\": \"How to test actions and reducers?\",\n- \"desc\": \"How to test actions and reducers?\"\n+ \"header\": \"Testing\",\n+ \"desc\": \"How to test actions, reducers, components?\"\n},\n{\n\"link\": \"https://github.com/Metnew/noir\",\n\"icon\": \"paint brush\",\n- \"header\": \"Why semantic-ui-react?\"\n+ \"header\": \"Why semantic-ui-react?\",\n+ \"desc\": \"Notes about SUI. Why SUIR is a good (or bad) choise.\"\n},\n{\n\"link\": \"\",\n\"icon\": \"globe\",\n\"header\": \"How i18n works?\",\n- \"desc\": \"i18n configuration and how to customize it in own project\"\n+ \"desc\": \"How i18n is implemented and how to customize it.\"\n},\n{\n\"header\": \"How Webpack is configured?\",\n\"icon\": \"code\",\n\"link\": \"\",\n\"desc\":\n- \"Webpack configuration for server/client in production and development\"\n+ \"Webpack configuration for server/client in production and development.\"\n},\n{\n\"link\": \"\",\n\"icon\": \"terminal\",\n- \"header\": \"npm scripts\",\n- \"desc\": \"npm scripts under the hood and ENV vars\"\n+ \"header\": \"npm scripts and ENV vars\",\n+ \"desc\": \"Docs about every npm script and ENV variable.\"\n},\n{\n\"link\": \"\",\n\"icon\": \"folder\",\n\"header\": \"Folder structure\",\n- \"desc\": \"Why this folder structure and how to adapt it for own project\"\n+ \"desc\": \"Why this folder structure and how to adapt it in own project.\"\n}\n]\n",
        "date": "13.10.2017 16:51:17",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "fix(svg): remove svgo from build web process (esm and cjs)",
        "sim_diff": "diff --git a/packages/icons/babel.config.js b/packages/icons/babel.config.js @@ -3,7 +3,7 @@ module.exports = {\nweb: {\npresets: [['@babel/preset-env'], '@babel/preset-react'],\nignore: ['**/*.native.js'],\n- plugins: ['inline-react-svg'],\n+ plugins: [['inline-react-svg', { svgo: false }]],\n},\nesm: {\n@@ -12,7 +12,7 @@ module.exports = {\n'@babel/preset-react',\n],\nignore: ['**/*.native.js'],\n- plugins: ['inline-react-svg'],\n+ plugins: [['inline-react-svg', { svgo: false }]],\n},\nnative: {\n",
        "chatgpt_rag": "chore(docs): update descriptions in links.json file\n- Updated descriptions for various links in the links.json file to provide more clarity and information to users."
    },
    {
        "msg": "feat(Modal): Make toggle prop optional\n* Make toggle prop optional on Modal\nre\n* Check toggle prop for null",
        "diff": "diff --git a/src/Modal.js b/src/Modal.js @@ -14,7 +14,7 @@ import {\nconst propTypes = {\nisOpen: PropTypes.bool,\nsize: PropTypes.string,\n- toggle: PropTypes.func.isRequired,\n+ toggle: PropTypes.func,\nkeyboard: PropTypes.bool,\nbackdrop: PropTypes.oneOfType([\nPropTypes.bool,\n@@ -90,7 +90,7 @@ class Modal extends React.Component {\n}\nhandleEscape(e) {\n- if (this.props.keyboard && e.keyCode === 27) {\n+ if (this.props.keyboard && e.keyCode === 27 && this.props.toggle) {\nthis.props.toggle();\n}\n}\n@@ -100,7 +100,7 @@ class Modal extends React.Component {\nconst container = this._dialog;\n- if (e.target && !container.contains(e.target)) {\n+ if (e.target && !container.contains(e.target) && this.props.toggle) {\nthis.props.toggle();\n}\n}\n",
        "date": "14.02.2017 08:55:27",
        "repo": "reactstrap/reactstrap",
        "type": "feat",
        "sim_msg": "feat: handle modal esc key",
        "sim_diff": "diff --git a/src/components/ui/modal.js b/src/components/ui/modal.js +import {Component} from 'react'\nimport {connect} from 'zefir/utils'\n-const Modal = ({\n+class Modal extends Component {\n+ componentWillMount (props) {\n+ window.addEventListener('keydown', this.props.handleEscKey)\n+ }\n+\n+ componentWillUnmount (props) {\n+ window.removeEventListener('keydown', this.props.handleEscKey)\n+ }\n+\n+ render () {\n+ const {\ntitle, subtitle, children, name, ui, toggle, full, size, noPadding, visible\n-}) => (\n+ } = this.props\n+\n+ return ui.modal === name || visible ? (\n<div className={`\nModal ${ui.modal === name || visible ? 'is-visible' : ''}\n${full ? 'Modal--full' : ''}\n@@ -143,11 +156,14 @@ const Modal = ({\npadding-bottom: 90px;\n}\n+ .Modal--full .Modal__inner {\n+ height: 100%;\n+ }\n+\n.Modal__inner {\nborder-radius: 8px;\noverflow: hidden;\nflex: 1;\n- height: 100%;\nmax-width: 770px;\nmargin-left: 30px;\nmargin-right: 30px;\n@@ -183,10 +199,13 @@ const Modal = ({\n}\n`}</style>\n</div>\n-)\n+ ) : null\n+ }\n+}\nModal.init = ({\nname,\n+ router: {history: {push}},\nstores: {ui},\nservices: {ui: {toggleModal}},\ntoggle,\n@@ -196,6 +215,11 @@ Modal.init = ({\nname,\nui,\ntoggle: toggle || (() => toggleModal(name)),\n+ handleEscKey: (e) => {\n+ if (e.keyCode === 27 && name === 'socket-details') {\n+ push('/sockets')\n+ }\n+ },\n...rest\n}\n}\n",
        "chatgpt_rag": "fix: handle modal escape key and toggle prop validation"
    },
    {
        "msg": "feat: :sparkles: add Fathom tracking",
        "diff": "diff --git a/src/app.html b/src/app.html name=\"viewport\"\ncontent=\"width=device-width, initial-scale=1\"\n/>\n+ <script\n+ src=\"https://4pvafmq.cheatsheets.xyz/script.js\"\n+ data-site=\"WERPEKMT\"\n+ defer\n+ ></script>\n%svelte.head%\n</head>\n<body>\n",
        "date": "12.07.2021 08:42:23",
        "repo": "spences10/cheat-sheets",
        "type": "feat",
        "sim_msg": "feat: Fast Chinese website",
        "sim_diff": "diff --git a/site/index.html b/site/index.html <script src=\"bundle.js\" type=\"text/javascript\" defer></script>\n</head>\n<body>\n- <div id=\"app\" />\n+ <div id=\"app\"></div>\n</body>\n</html>\n",
        "chatgpt_rag": "feat: Added external script for site optimization"
    },
    {
        "msg": "feat(drawer): add stories for Drawer component",
        "diff": "diff --git a/packages/chakra-ui-core/src/Drawer/Drawer.stories.js b/packages/chakra-ui-core/src/Drawer/Drawer.stories.js +import { storiesOf } from '@storybook/vue'\n+import { Fragment, Input, Button, Drawer, DrawerBody, DrawerFooter, DrawerHeader, DrawerOverlay, DrawerContent, DrawerCloseButton } from '..'\n+\n+storiesOf('UI | Drawer', module)\n+ .add('Drawer', () => ({\n+ components: { Fragment, Input, Button, Drawer, DrawerBody, DrawerFooter, DrawerHeader, DrawerOverlay, DrawerContent, DrawerCloseButton },\n+ data: () => ({ isOpen: false }),\n+ methods: {\n+ close () {\n+ this.isOpen = false\n+ }\n+ },\n+ template: `\n+ <Fragment>\n+ <Button ref=\"btnRef\" @click=\"isOpen =true\">Open Drawer</Button>\n+\n+ <Drawer :isOpen=\"isOpen\" placement=\"right\" :on-close=\"close\" :initialFocusRef=\"()=>$refs.inputInsideModal\">\n+ <DrawerOverlay />\n+ <DrawerContent>\n+ <DrawerCloseButton />\n+ <DrawerHeader>Create your account</DrawerHeader>\n+\n+ <DrawerBody>\n+ <Input ref=\"inputInsideModal\" placeholder=\"Type here...\" />\n+ </DrawerBody>\n+\n+ <DrawerFooter>\n+ <Button variant=\"outline\" mr=\"3\" @click=\"isOpen = false\">Cancel</Button>\n+ <Button color=\"blue\">Save</Button>\n+ </DrawerFooter>\n+ </DrawerContent>\n+ </Drawer>\n+ </Fragment>\n+ `\n+ }))\n",
        "date": "17.03.2020 22:34:36",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "feat",
        "sim_msg": "refactor(drawer): update import syntax",
        "sim_diff": "diff --git a/src/components/drawer/drawer.stories.mdx b/src/components/drawer/drawer.stories.mdx @@ -3,13 +3,15 @@ import Drawer from '.';\nimport { useState, useCallback } from 'react';\nimport { text } from '@storybook/addon-knobs';\nimport { action } from '@storybook/addon-actions';\n-import FlatTable from '../flat-table/flat-table.component';\n-import FlatTableHead from '../flat-table/flat-table-head/flat-table-head.component';\n-import FlatTableBody from '../flat-table/flat-table-body/flat-table-body.component';\n-import FlatTableRow from '../flat-table/flat-table-row/flat-table-row.component';\n-import FlatTableHeader from '../flat-table/flat-table-header/flat-table-header.component';\n-import FlatTableCell from '../flat-table/flat-table-cell/flat-table-cell.component';\n-import FlatTableRowHeader from '../flat-table/flat-table-row-header/flat-table-row-header.component';\n+import {\n+ FlatTable,\n+ FlatTableHead,\n+ FlatTableBody,\n+ FlatTableRow,\n+ FlatTableHeader,\n+ FlatTableCell,\n+ FlatTableRowHeader\n+} from '../flat-table'\n<Meta title=\"Design System/Drawer\" />\n",
        "chatgpt_rag": "refactor(drawer): update import syntax and structure in Drawer.stories.js"
    },
    {
        "msg": "feat(build, watch): Less verbose error output",
        "diff": "diff --git a/src/lib/webpack/run-webpack.js b/src/lib/webpack/run-webpack.js @@ -38,7 +38,12 @@ const devBuild = async (env, onprogress) => {\nlet serverAddr = `${protocol}://${host}:${chalk.bold(port)}`;\nlet localIpAddr = `${protocol}://${ip.address()}:${chalk.bold(port)}`;\n- process.stdout.write(chalk.green('\\nCompiled successfully!!\\n\\n'));\n+ if (stats.hasErrors()) {\n+ process.stdout.write(chalk.red('\\Build failed!\\n\\n'));\n+ } else {\n+ process.stdout.write(chalk.green('\\nCompiled successfully!\\n\\n'));\n+ }\n+\nif (userPort !== port) {\nprocess.stdout.write(`Port ${chalk.bold(userPort)} is in use, using ${chalk.bold(port)} instead\\n\\n`);\n}\n@@ -71,7 +76,8 @@ const prodBuild = async (env) => {\nreturn await new Promise((resolve, reject) => {\ncompiler.run((err, stats) => {\nif (err || stats.hasErrors()) {\n- reject(err || stats.toJson().errors.join('\\n'));\n+ showStats(stats);\n+ reject(chalk.red('Build failed!'));\n}\nelse {\n// Timeout for plugins that work on `after-emit` event of webpack\n@@ -82,16 +88,16 @@ const prodBuild = async (env) => {\n};\nexport function showStats(stats) {\n- let info = stats.toJson();\n+ let info = stats.toJson(\"errors-only\");\nif (stats.hasErrors()) {\n- info.errors.forEach( message => {\n- process.stderr.write(message+'\\n');\n+ info.errors.map(stripBabelLoaderPrefix).forEach( message => {\n+ process.stderr.write(chalk.red(message)+'\\n');\n});\n}\nif (stats.hasWarnings()) {\n- info.warnings.forEach( message => {\n+ info.warnings.map(stripBabelLoaderPrefix).forEach( message => {\nprocess.stderr.write(chalk.yellow(message)+'\\n');\n});\n}\n@@ -109,8 +115,8 @@ export function writeJsonStats(stats) {\njsonStats = (jsonStats.children && jsonStats.children[0]) || jsonStats;\n- jsonStats.modules.forEach(normalizeModule);\n- jsonStats.chunks.forEach(c => c.modules.forEach(normalizeModule));\n+ jsonStats.modules.forEach(stripBabelLoaderFromModuleNames);\n+ jsonStats.chunks.forEach(c => c.modules.forEach(stripBabelLoaderFromModuleNames));\nreturn fs.writeFile(outputPath, JSON.stringify(jsonStats))\n.then(() => {\n@@ -121,20 +127,20 @@ export function writeJsonStats(stats) {\n});\n}\n-const normalizeModule = m => {\n+const stripBabelLoaderFromModuleNames = m => {\nconst keysToNormalize = ['identifier', 'name', 'module', 'moduleName', 'moduleIdentifier'];\nkeysToNormalize.forEach(key => {\nif (key in m) {\n- m[key] = normalizeName(m[key]);\n+ m[key] = stripBabelLoaderPrefix(m[key]);\n}\n});\nif (m.reasons) {\n- m.reasons.forEach(normalizeModule);\n+ m.reasons.forEach(stripBabelLoaderFromModuleNames);\n}\nreturn m;\n};\n-const normalizeName = p => p.substr(p.lastIndexOf('!') + 1);\n+const stripBabelLoaderPrefix = log => log.replace(/@?\\s*(\\.\\/~\\/babel-loader\\/lib\\?{[\\s\\S]*?}!)/g, '');\n",
        "date": "08.07.2017 11:27:49",
        "repo": "preactjs/preact-cli",
        "type": "feat",
        "sim_msg": "refactor(webpack-plugin): WebpackPlugin - separate compilation from the generator'",
        "sim_diff": "diff --git a/packages/webpack-plugin/src/webpack-plugin.js b/packages/webpack-plugin/src/webpack-plugin.js import path from 'path';\nimport process from 'process';\n-import { get, merge } from 'lodash';\n+import { merge } from 'lodash';\nimport { createJobs, createReport } from '@bundle-stats/utils';\nimport { filter, validate } from '@bundle-stats/utils/lib-esm/webpack';\nimport {\n@@ -30,14 +30,17 @@ const DEFAULT_OPTIONS = {\n},\n};\n-const getOnEmit = (options) => async (compilation, callback) => {\n- const { compare, baseline, html, json, outDir, stats: statsOptions } = options;\n+const PLUGIN_NAME = 'BundleStats';\n+\n+const generateReports = async (compilation, options) => {\n+ const { compare, baseline, html, json, outDir } = options;\nconst logger = compilation.getInfrastructureLogger\n- ? compilation.getInfrastructureLogger('BundleStats')\n+ ? compilation.getInfrastructureLogger(PLUGIN_NAME)\n: console;\n+ const source = compilation.getStats().toJson(options.stats);\n+ const outputPath = compilation?.options?.output?.path;\n- const source = compilation.getStats().toJson(statsOptions);\nconst invalid = validate(source);\nif (invalid) {\n@@ -51,8 +54,6 @@ const getOnEmit = (options) => async (compilation, callback) => {\ndata.builtAt = Date.now();\n}\n- const outputPath = get(compilation, 'options.output.path');\n-\nconst baselineFilepath = getBaselineStatsFilepath(outputPath);\nlet baselineStats = null;\n@@ -70,33 +71,39 @@ const getOnEmit = (options) => async (compilation, callback) => {\nconst report = createReport(jobs);\nconst artifacts = createArtifacts(jobs, report, { html, json });\n+ const assets = [];\n+\nObject.values(artifacts).forEach(({ filename, output }) => {\nconst filepath = path.join(outDir, filename);\n- // eslint-disable-next-line no-param-reassign\n- compilation.assets[filepath] = {\n+ assets.push({\n+ filepath,\nsize: () => 0,\nsource: () => output,\n- };\n+ });\n});\nif (baseline) {\n- // eslint-disable-next-line no-param-reassign\n- compilation.assets[baselineFilepath] = {\n+ assets.push({\n+ filepath: baselineFilepath,\nsize: () => 0,\nsource: () => JSON.stringify(data),\n- };\n+ });\nlogger.info(`Write baseline data to ${baselineFilepath}`);\n}\n+ // Add reports to assets\n+ assets.forEach(({ filepath, ...asset }) => {\n+ // eslint-disable-next-line no-param-reassign\n+ compilation.assets[filepath] = asset;\n+ });\n+\nconst info = getReportInfo(report);\nif (info) {\nlogger.info(info.text);\n}\n-\n- callback();\n};\nexport class BundleStatsWebpackPlugin {\n@@ -110,12 +117,15 @@ export class BundleStatsWebpackPlugin {\nDEFAULT_OPTIONS,\n{\nstats: {\n- context: get(compiler, 'options.context'),\n+ context: compiler.options?.context,\n},\n},\nthis.options,\n);\n- compiler.hooks.emit.tapAsync('BundleStats', getOnEmit(options));\n+ compiler.hooks.emit.tapAsync(PLUGIN_NAME, async (compilation, callback) => {\n+ await generateReports(compilation, options);\n+ callback();\n+ });\n}\n}\n",
        "chatgpt_rag": "refactor(webpack): Separate compilation logic from the generator in run-webpack file"
    },
    {
        "msg": "feat(src/server/api/auth): add auth route for server",
        "diff": "diff --git a/src/server/api/auth/index.js b/src/server/api/auth/index.js import {Router} from 'express'\n+import jwt from 'jsonwebtoken'\n+import chalk from 'chalk'\n+// import validator from 'validator'\n+// {isLength, trim, isAlphanumeric, escape}\nconst router = Router()\n// define the home page route\nrouter.post('/', (req, res) => {\n- res.json({token: 'nothing'})\n+ // const {username, password} = req.body\n+ // const usernameValidated = validator.isLength(0, 36).is\n+ // const passwordValidated =\n+ const data = {username: 'cool_username_for_testing'}\n+ jwt.sign(data, process.env.JWT_SECRET, (err, token) => {\n+ if (err) {\n+ throw new Error(\n+ `Cant create JWT token based on input data: ${JSON.stringify(data)}`,\n+ err\n+ )\n+ }\n+ console.log(chalk.yellow(`Generated token for user: ${data.username}`))\n+ res.json({token})\n+ })\n})\nexport default router\n",
        "date": "04.08.2017 13:55:47",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "fix: rocket login",
        "sim_diff": "diff --git a/components/auth/authRoutes.js b/components/auth/authRoutes.js import express from 'express'\nimport controller from './authController'\n+import crypto from '../crypto'\nconst router = express.Router()\nrouter.post('/', async (req, res) => {\n+ const { user, password } = await crypto.decrypt(req.body.data)\n+\nconst result = await controller.auth({\ntype: 'rocket',\n- user: req.body.user,\n- password: req.body.password\n+ user,\n+ password\n})\nreturn result.error ? res.status(401).json(result) : res.json(result)\n})\n",
        "chatgpt_rag": "feat: implement JWT token generation for user authentication"
    },
    {
        "msg": "feat(server/ssr): move i18n stuff to i18n, fix state creation\nfeat(server/ssr): construct state using req.useragent, remove\nlocaleData requiring, remove translations creation",
        "diff": "diff --git a/src/server/ssr/index.js b/src/server/ssr/index.js * @desc\n*/\nimport React from 'react'\n-import {readFileSync} from 'fs' // readFile\n-import path from 'path'\n+import chalk from 'chalk'\n// import _ from 'lodash'\n-import {sync as globSync} from 'glob'\nimport {renderToString} from 'react-dom/server'\nimport {ServerStyleSheet, StyleSheetManager} from 'styled-components'\nimport {configureRootComponent, configureApp} from 'common/app'\n// import {addLocaleData} from 'react-intl'\nimport HtmlComponent from './HtmlComponent'\n+// $FlowFixMe\nimport assets from 'webpack-assets'\n+// $FlowFixMe\nimport faviconsAssets from 'favicons-assets'\n-import type {Node} from 'react'\n-\n-const translations = globSync('locals/*.json')\n- .map(filename => [\n- path.basename(filename, '.json'),\n- readFileSync(filename, 'utf8')\n- ])\n- .map(([locale, file]) => [locale, JSON.parse(file)])\n- .reduce((collection, [locale, messages]) => {\n- collection[locale] = messages\n- return collection\n- }, {})\n+import getI18nData from 'server/i18n'\nexport default (req: express$Request, res: express$Response) => {\n- const {isLoggedIn, token, lang} = req.user\n+ const {isLoggedIn, lang} = req.user\n+ const {isMobile} = req.useragent\n+ console.log(chalk.cyan(`MOBILE DEVICE: ${isMobile}`, JSON.stringify(req.useragent), lang))\n+ const meState = {auth: {isLoggedIn}}\n+ const layoutState = {isMobile}\nconst initialState: Object = isLoggedIn\n- ? {me: {auth: {isLoggedIn, token}}}\n- : {}\n- const localeData = require('react-intl/locale-data/' + (lang || 'en'))\n- const i18n = {\n- lang,\n- localeData,\n- locale: lang,\n- messages: translations[lang]\n- }\n- //\n+ ? {me: meState, layout: layoutState}\n+ : {layout: layoutState}\n+ const i18n = getI18nData(lang)\nconst sheet = new ServerStyleSheet()\nconst location: string = req.url\nconst context = {}\nconst {store, history, routes} = configureApp(initialState)\n- const RootComponent: Node = configureRootComponent({\n+ const RootComponent: React$Node = configureRootComponent({\nstore,\nhistory,\nroutes,\n",
        "date": "17.09.2017 14:25:22",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "refactor: adjust folder structure",
        "sim_diff": "diff --git a/src/pages/index.js b/src/pages/index.js -import { marshall, unmarshall } from '@/lib/compress-json'\n-import presets from '@/components/presets'\n-import useQueryState from '@/hooks/use-query-state'\n-import GitHubIcon from '@/components/icons/github'\n-import JSONViewer from '@/components/json-viewer'\n-import ThemeIcon from '@/components/icons/theme'\n-import screenshotUrl from '@/lib/screenshot-url'\n-import Container from '@/components/container'\n-import notification from '@/lib/notification'\n-import { useState, useEffect } from 'react'\n-// import Overlay from '@/components/overlay'\n-import clipboard from '@/lib/clipboard'\n-import debounce from '@/lib/debounce'\n-import Main from '@/components/main'\n-import isEmpty from '@/lib/is-empty'\n-import onSave from '@/lib/on-save'\n-import Router from 'next/router'\n-import themeBase from '@/theme'\n-import Cycled from 'cycled'\n-\nimport {\nLink as ExternalLink,\nButton,\n@@ -27,12 +7,31 @@ import {\nuseThemeUI\n} from 'theme-ui'\n+import presets from '@/components/presets'\n+import ThemeIcon from '@/components/icons/theme'\n+import Main from '@/components/main'\nimport {\nLiveProvider,\nLiveEditor,\nLiveError,\nLivePreview\n} from '@/components/live-editor'\n+import presets from '@/components/presets'\n+import JSONViewer from '@/components/json-viewer'\n+import ThemeIcon from '@/components/icons/theme'\n+import GitHubIcon from '@/components/icons/github'\n+import Container from '@/components/container'\n+import Main from '@/components/main'\n+// import Overlay from '@/components/overlay'\n+import useQueryState from '@/hooks/use-query-state'\n+import themeBase from '@/themes/base'\n+import { marshall, unmarshall } from '@/lib/compress-json'\n+import clipboard from '@/lib/clipboard'\n+import debounce from '@/lib/debounce'\n+import isEmpty from '@/lib/is-empty'\n+import notification from '@/lib/notification'\n+import screenshotUrl from '@/lib/screenshot-url'\n+import onSave from '@/lib/on-save'\nimport pkg from '../../package.json'\n",
        "chatgpt_rag": "refactor: adjust folder structure and update dependencies in src/server/ssr/index.js"
    },
    {
        "msg": "feat(server/ssr): add Lazy loading with SSR\nfeat(server/ssr): add lazy loading with SSR",
        "diff": "diff --git a/src/server/ssr/index.js b/src/server/ssr/index.js @@ -13,6 +13,7 @@ import assets from 'webpack-assets'\n// $FlowFixMe\nimport faviconsAssets from 'favicons-assets'\nimport getI18nData from 'server/i18n'\n+import {matchPath} from 'react-router'\nexport default async (req: express$Request, res: express$Response) => {\nconst {isLoggedIn, language} = req.user\n@@ -50,6 +51,18 @@ export default async (req: express$Request, res: express$Response) => {\ninitialState: preloadedState,\ni18n\n}\n+\n+ // FIXME: how to replace `let` and `for`?\n+ let lazyRoutes = routes.filter(a => a.lazy)\n+ for (var i = 0; i < lazyRoutes.length; i++) {\n+ let route = routes[i]\n+ if (matchPath(req.url, route)) {\n+ route.component = await routes[i].component().default\n+ route.lazy = false\n+ break\n+ }\n+ }\n+\nconst {beforeAppTag, afterAppTag} = HtmlComponent(props)\nres.writeHead(200, {\n",
        "date": "30.10.2017 00:37:17",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "refactor(routes): update account/order routes",
        "sim_diff": "diff --git a/src/router/index.js b/src/router/index.js @@ -29,7 +29,15 @@ const routes = [\n)\n},\n{\n- path: '/account',\n+ path: '/order/:number',\n+ name: 'order',\n+ component: () => import(\n+ /* webpackChunkName: \"order\" */\n+ './../views/Order.vue'\n+ )\n+ },\n+ {\n+ path: '/account/:tab?',\nname: 'account',\ncomponent: () => import(\n/* webpackChunkName: \"account\" */\n@@ -37,12 +45,10 @@ const routes = [\n),\nchildren: [\n{\n- path: 'orders/:number?',\n- name: 'orders',\n- component: () => import(\n- /* webpackChunkName: \"order\" */\n- './../views/Order.vue'\n- )\n+ path: 'orders/:number',\n+ redirect: {\n+ name: 'order'\n+ }\n}\n]\n},\n",
        "chatgpt_rag": "feat(ssr): implement lazy loading for routes in server-side rendering"
    },
    {
        "msg": "feat(creset): reset styles on server using created hook",
        "diff": "diff --git a/packages/chakra-ui-core/src/CReset/CReset.js b/packages/chakra-ui-core/src/CReset/CReset.js @@ -36,7 +36,7 @@ const CReset = {\nprops: {\nconfig: Object\n},\n- mounted () {\n+ created () {\nconst { color, bg, borderColor, placeholderColor } = this.styleConfig[this.colorMode]\nuseTailwindPreflight(this.theme)\ninjectGlobal({\n",
        "date": "11.04.2020 22:27:05",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "feat",
        "sim_msg": "feat: updated defaultTheme",
        "sim_diff": "diff --git a/package/src/defaultComponentTheme.js b/package/src/defaultComponentTheme.js @@ -159,6 +159,7 @@ const defaultStyles = {\nrui_color_black02: black02,\nrui_color_black05: black05,\nrui_color_black30: black30,\n+ rui_color_black65: black65,\nrui_color_error: red,\nrui_color_stockWarning: red,\nrui_color_success: teal,\n",
        "chatgpt_rag": "refactor: updated lifecycle hook from mounted to created in CReset component"
    },
    {
        "msg": "feat(server/webpack.base): add 'webpack-assets' and 'favicons-assets' to aliases\nfeat(server/webpack.base): add 'webpack-assets' and 'favicons-assets'\nto aliases",
        "diff": "diff --git a/webpack_config/server/webpack.base.js b/webpack_config/server/webpack.base.js @@ -65,7 +65,9 @@ const baseWebpackConfig = {\nextensions: isomorphicWebpackConfig.resolve.extensions,\nmodules: isomorphicWebpackConfig.resolve.modules,\nalias: {\n- ...isomorphicWebpackConfig.resolve.alias\n+ ...isomorphicWebpackConfig.resolve.alias,\n+ 'webpack-assets': `${CLIENT_DIST_PATH}/webpack-assets.json`,\n+ 'favicons-assets': `${CLIENT_DIST_PATH}/favicons-stats.json`\n// create_server: createServerAliasPath\n}\n},\n",
        "date": "06.09.2017 12:14:52",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "build: do not add image-webpack-loader at all in development",
        "sim_diff": "diff --git a/webpack.config.js b/webpack.config.js @@ -136,8 +136,8 @@ const base = {\ntest: /\\.(gif|jpe?g|png|svg)$/,\nuse: [\n{ loader: 'file-loader', query: { name: 'static/[name]_[hash:7].[ext]' } },\n- { loader: 'image-webpack-loader', query: { bypassOnDebug: true } },\n- ],\n+ nodeEnv !== 'development' && { loader: 'image-webpack-loader' },\n+ ].filter(Boolean),\n},\n{\n",
        "chatgpt_rag": "build: add webpack-assets and favicons-assets aliases in webpack base config"
    },
    {
        "msg": "feat: adding partner type to the list of partners",
        "diff": "diff --git a/common/constants/partners.js b/common/constants/partners.js import { s3 } from 'common/constants/urls';\n+export const PARTNER_TYPES = {\n+ PAID: 'PAID',\n+ KIND: 'IN-KIND',\n+};\n+\nconst partners = [\n{\nname: 'APEX Systems',\nlogoSource: `${s3}partnerLogos/apex_systems.png`,\nurl: 'https://apexsystems.com',\n+ type: PARTNER_TYPES.KIND,\n},\n{\nname: 'GitHub',\nlogoSource: `${s3}partnerLogos/github.png`,\nurl: 'https://github.com',\n+ type: PARTNER_TYPES.KIND,\n},\n{\nname: 'Slack',\nlogoSource: `${s3}partnerLogos/slack.png`,\nurl: 'https://slack.com/',\n+ type: PARTNER_TYPES.PAID,\n},\n{\nname: 'Heroku',\nlogoSource: `${s3}partnerLogos/heroku.png`,\nurl: 'https://heroku.com/',\n+ type: PARTNER_TYPES.KIND,\n},\n{\nname: '1Password',\nlogoSource: `${s3}partnerLogos/1password.png`,\nurl: 'https://1password.com/',\n+ type: PARTNER_TYPES.KIND,\n},\n{\nname: 'US Bank',\nlogoSource: `${s3}partnerLogos/usbank.png`,\nurl: 'https://usbank.com/index.html',\n+ type: PARTNER_TYPES.PAID,\n},\n{\nname: 'Threat Stack',\nlogoSource: `${s3}partnerLogos/threat_stack.png`,\nurl: 'https://threatstack.com',\n+ type: PARTNER_TYPES.PAID,\n},\n{\nname: \"O'Reilly Media\",\nlogoSource: `${s3}partnerLogos/oreilly.png`,\nurl: 'https://oreilly.com',\n+ type: PARTNER_TYPES.KIND,\n},\n{\nname: 'HackerRank',\nlogoSource: `${s3}partnerLogos/hackerrank.png`,\nurl: 'https://hackerrank.com',\n+ type: PARTNER_TYPES.KIND,\n},\n{\nname: 'Zapier',\nlogoSource: `${s3}partnerLogos/zapier.png`,\nurl: 'https://zapier.com',\n+ type: PARTNER_TYPES.KIND,\n},\n{\nname: 'LogRocket',\nlogoSource: `${s3}partnerLogos/logrocket.png`,\nurl: 'https://logrocket.com/',\n+ type: PARTNER_TYPES.KIND,\n},\n];\n",
        "date": "16.10.2019 13:22:30",
        "repo": "operationcode/front-end",
        "type": "feat",
        "sim_msg": "feat: enable hd wallet",
        "sim_diff": "diff --git a/src/common/config.js b/src/common/config.js @@ -161,7 +161,7 @@ const common = {\ncontract: true,\nrewardToken: false,\nkeyfi: true,\n- hdWallet: false,\n+ hdWallet: true,\ndeepLinks: true\n}\n};\n@@ -242,7 +242,7 @@ const prod = {\nexchangesMarketplace: false,\nrewardToken: false,\nkeyfi: true,\n- hdWallet: false,\n+ hdWallet: true,\ndeepLinks: true\n},\nattributeTypeSource: ATTRIBUTE_TYPE_SOURCE_OVERRIDE || 'production'\n",
        "chatgpt_rag": "feat: add partner types to partners list"
    },
    {
        "msg": "feat(PopoverContent): add x-out-of-boundaries attribute\nCloses",
        "diff": "diff --git a/src/PopperContent.js b/src/PopperContent.js @@ -151,8 +151,8 @@ class PopperContent extends React.Component {\nmodifiers={extendedModifiers}\nplacement={placement}\n>\n- {({ ref, style, placement, arrowProps }) => (\n- <div ref={ref} style={style} className={popperClassName} x-placement={placement}>\n+ {({ ref, style, placement, outOfBoundaries, arrowProps }) => (\n+ <div ref={ref} style={style} className={popperClassName} x-placement={placement} x-out-of-boundaries={outOfBoundaries ? 'true' : undefined}>\n{children}\n{!hideArrow && <span ref={arrowProps.ref} className={arrowClassName} style={arrowProps.style} />}\n</div>\n",
        "date": "12.05.2020 20:14:43",
        "repo": "reactstrap/reactstrap",
        "type": "feat",
        "sim_msg": "docs: remove outdated components",
        "sim_diff": "diff --git a/website/src/components/Layout.js b/website/src/components/Layout.js @@ -147,39 +147,6 @@ const components = {\nh4: props => <Heading {...props} level={4} />,\nh5: props => <Heading {...props} level={5} />,\nh6: props => <Heading {...props} level={6} />,\n- tr: props => {\n- const maybeStrongNode = props.children[0].props.children[0]; // <strong>\n- const isPluginRow =\n- maybeStrongNode && maybeStrongNode.props\n- ? maybeStrongNode.props.mdxType === 'strong'\n- : false;\n- return <tr {...props} className={isPluginRow ? 'plugin-prop' : ''} />;\n- },\n- // TODO: find a better way to do this\n- td: class extends React.Component {\n- ref = React.createRef();\n-\n- state = {dataLabel: ''};\n-\n- componentDidMount() {\n- let child = this.ref.current;\n- let i = 0;\n-\n- while ((child = child.previousSibling) != null) {\n- i++;\n- }\n-\n- this.setState({\n- dataLabel: ['Prop', 'Default', 'Description'][i],\n- });\n- }\n-\n- render() {\n- return (\n- <td ref={this.ref} {...this.props} data-label={this.state.dataLabel} />\n- );\n- }\n- },\npre: class extends React.Component {\nref = React.createRef();\n",
        "chatgpt_rag": "feat: update PopperContent component with outOfBoundaries prop in Popper render function"
    },
    {
        "msg": "feat(dumper): More robust",
        "diff": "diff --git a/src/platforms/browser/dumper.js b/src/platforms/browser/dumper.js @@ -115,6 +115,7 @@ BiwaScheme.Dumper = BiwaScheme.Class.create({\n},\ndump_closure: function(cls){\n+ if(!cls) return \"**BROKEN**\";\nif(cls.length == 0) return \"[]\";\nvar cls_num = null;\n@@ -127,7 +128,7 @@ BiwaScheme.Dumper = BiwaScheme.Class.create({\n}\nvar c = _.clone(cls);\n- var body = c.shift();\n+ var body = c.shift && c.shift();\nreturn [\n\"c\", cls_num, \" <span class='dump_closure'>free vars :</span> \",\nthis.dump_obj(c), \" <span class='dump_closure'>body :</span> \",\n",
        "date": "03.01.2020 19:27:33",
        "repo": "biwascheme/biwascheme",
        "type": "feat",
        "sim_msg": "feat(trigger): additional key codes",
        "sim_diff": "diff --git a/src/wrappers/wrapper.js b/src/wrappers/wrapper.js @@ -506,7 +506,13 @@ export default class Wrapper implements BaseWrapper {\nup: 38,\ndown: 40,\nleft: 37,\n- right: 39\n+ right: 39,\n+ end: 35,\n+ home: 36,\n+ backspace: 8,\n+ insert: 45,\n+ pageup: 33,\n+ pagedown: 34\n}\nconst event = type.split('.')\n",
        "chatgpt_rag": "fix(dumper): handle edge case in dump_closure function"
    },
    {
        "msg": "feat(babel-loader): add supportsStaticESM option",
        "diff": "diff --git a/packages/razzle/config/babel-loader/razzle-babel-loader.js b/packages/razzle/config/babel-loader/razzle-babel-loader.js @@ -64,6 +64,7 @@ module.exports = babelLoader.custom(function(babel) {\nisServer: opts.isServer,\nisModern: opts.isModern,\nhasModern: opts.hasModern,\n+ supportsStaticESM: opts.supportsStaticESM,\ndevelopment: opts.development,\nshouldUseReactRefresh: opts.shouldUseReactRefresh,\n};\n@@ -101,6 +102,7 @@ module.exports = babelLoader.custom(function(babel) {\ndelete loader.distDir;\ndelete loader.isModern;\ndelete loader.hasModern;\n+ delete loader.supportsStaticESM;\ndelete loader.development;\ndelete loader.shouldUseReactRefresh;\nreturn { loader, custom };\n@@ -112,6 +114,7 @@ module.exports = babelLoader.custom(function(babel) {\nconst isServer = customOptions.isServer;\nconst isModern = customOptions.isModern;\nconst hasModern = customOptions.hasModern;\n+ const supportsStaticESM = customOptions.supportsStaticESM;\nconst development = customOptions.development;\nconst shouldUseReactRefresh = customOptions.shouldUseReactRefresh;\n@@ -134,6 +137,7 @@ module.exports = babelLoader.custom(function(babel) {\npresetOptions.caller.isServer = isServer;\npresetOptions.caller.isModern = isModern;\npresetOptions.caller.isDev = development;\n+ presetOptions.caller.supportsStaticESM = supportsStaticESM;\nconst emitWarning = this.emitWarning.bind(this);\nObject.defineProperty(presetOptions.caller, 'onWarning', {\n",
        "date": "01.02.2021 18:29:11",
        "repo": "jaredpalmer/razzle",
        "type": "feat",
        "sim_msg": "chore(build-config): tweak Babel config",
        "sim_diff": "diff --git a/packages/build-config/sections/module-rules/babel.js b/packages/build-config/sections/module-rules/babel.js @@ -16,6 +16,8 @@ function getBabelLoader(targets, plugins) {\nuse: {\nloader: require.resolve('babel-loader'),\noptions: {\n+ babelrc: false,\n+ compact: process.env.NODE_ENV === 'production',\ncacheDirectory: true,\ncacheIdentifier: createIdentifier(targets),\npresets: [\n@@ -29,7 +31,7 @@ function getBabelLoader(targets, plugins) {\n],\n'react',\n],\n- plugins: [].concat(plugins || [], [\n+ plugins: [].concat(plugins, [\nrequire.resolve('babel-plugin-transform-class-properties'),\nrequire.resolve('babel-plugin-transform-object-rest-spread'),\n]),\n",
        "chatgpt_rag": "chore(razzle): update babel-loader config options for better compatibility"
    },
    {
        "msg": "feat: support ctrl+l to clear\nAnd refactor the stdin handling",
        "diff": "diff --git a/lib/nodemon.js b/lib/nodemon.js @@ -96,45 +96,54 @@ function nodemon(settings) {\n});\n// echo out notices about running state\n- if (config.options.stdin && config.options.restartable) {\n- // allow nodemon to restart when the use types 'rs\\n'\n- process.stdin.resume();\n- process.stdin.setEncoding('utf8');\n- process.stdin.on('data', function (data) {\n- data = (data + '').trim().toLowerCase();\n-\n- // if the keys entered match the restartable value, then restart!\n- if (data === config.options.restartable) {\n- bus.emit('restart');\n- }\n- });\n- } else if (config.options.stdin) {\n- // if 'restartable' is disabled (via a nodemon.json)\n- // then it's possible we're being used with a REPL\n+ if (config.options.stdin) {\n// so let's make sure we don't eat the key presses\n// but also, since we're wrapping, watch out for\n- // special keys, like ctrl+c x 2 or '.exit' or ctrl+d\n+ // special keys, like ctrl+c x 2 or '.exit' or ctrl+d or ctrl+l\nvar ctrlC = false;\nvar buffer = '';\n+ const rs = config.options.restartable;\n+ process.stdin.setEncoding('utf8');\nprocess.stdin.on('data', function (data) {\n- buffer += data;\ndata = data.toString();\n- var chr = data.charCodeAt(0);\n+ buffer += data;\n+ const chr = data.charCodeAt(0);\n+\n+ // if restartable, echo back\n+ if (rs) {\n+ if (chr === 13) {\n+ process.stdout.write('\\n');\n+ }\n+ // this prevents cursor keys from working.\n+ process.stdout.write(String.fromCharCode(chr));\n+ }\n+\nif (chr === 3) {\n- if (ctrlC) {\n- process.exit();\n+ // if restartable, assume ctrl+c will break immediately\n+ if (ctrlC || rs) {\n+ process.exit(rs ? 1 : 0);\n}\nctrlC = true;\n- } else if (buffer === '.exit' || chr === 4) {\n+ return;\n+ } else if (buffer === '.exit' || chr === 4) { // ctrl+d\nprocess.exit();\n- } else if (ctrlC || chr === 10) {\n- ctrlC = false;\n+ } else if (chr === 13 || chr === 10) { // enter / carriage return\n+ const input = buffer.toString().trim().toLowerCase();\n+ if (input === rs) {\n+ bus.emit('restart');\n+ }\n+ buffer = '';\n+ } else if (chr === 12) { // ctrl+l\n+ console.clear();\nbuffer = '';\n}\n+ ctrlC = false;\n});\n+ if (process.stdin.setRawMode) {\nprocess.stdin.setRawMode(true);\n}\n+ }\nif (config.options.restartable) {\nutils.log.info('to restart at any time, enter `' +\n",
        "date": "10.07.2018 18:41:45",
        "repo": "remy/nodemon",
        "type": "feat",
        "sim_msg": "chore(tests): refactor restart tests",
        "sim_diff": "diff --git a/test/unit/commands/restart-spec.js b/test/unit/commands/restart-spec.js @@ -4,7 +4,6 @@ const sinon = require('sinon');\nconst modulePath = '../../../lib/commands/restart';\nconst RestartCommand = require(modulePath);\n-const Instance = require('../../../lib/instance');\ndescribe('Unit: Command > Restart', function () {\nit('warns of stopped instance and starts instead', function () {\n@@ -26,25 +25,23 @@ describe('Unit: Command > Restart', function () {\n});\nit('calls process restart method if instance is running', function () {\n- const restartStub = sinon.stub().resolves();\n- class TestInstance extends Instance {\n- get process() { return {restart: restartStub}; }\n- running() { return true; }\n- }\n- const testInstance = new TestInstance();\n- const loadRunEnvStub = sinon.stub(testInstance, 'loadRunningEnvironment');\nconst runStub = sinon.stub().resolves();\n+ const restartStub = sinon.stub().resolves();\n+ const lreStub = sinon.stub();\n+ const instance = {\n+ process: {restart: restartStub},\n+ loadRunningEnvironment: lreStub,\n+ running: () => 1\n+ };\n- const command = new RestartCommand({\n- run: runStub\n- }, {\n+ const command = new RestartCommand({run: runStub}, {\nenvironment: 'testing',\n- getInstance: () => testInstance\n+ getInstance: () => instance\n});\nreturn command.run().then(() => {\n- expect(loadRunEnvStub.calledOnce).to.be.true;\n- expect(loadRunEnvStub.args[0][0]).to.be.true;\n+ expect(lreStub.calledOnce).to.be.true;\n+ expect(lreStub.args[0][0]).to.be.true;\nexpect(restartStub.calledOnce).to.be.true;\nexpect(restartStub.args[0]).to.deep.equal([process.cwd(), 'testing']);\nexpect(runStub.calledOnce).to.be.true;\n",
        "chatgpt_rag": "refactor nodemon stdin handling for better restart functionality"
    },
    {
        "msg": "feat: update Single Page Applications section",
        "diff": "diff --git a/website/pages/docs/single-page-applications.md b/website/pages/docs/single-page-applications.md -# [Single Page Applications](https://github.com/jaredpalmer/razzle/blob/master/examples/basic-spa/)\n+# Single Page Applications\nIn addition to universal/isomorphic applications, Razzle can build single page (or client-only) applications. To do this, remove `index.js` and `server.js` from the src folder, and create an `index.html` file inside the public folder with the following template:\n-```\n+```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n",
        "date": "06.10.2020 01:58:08",
        "repo": "jaredpalmer/razzle",
        "type": "feat",
        "sim_msg": "test(pages): ensure Page component has title prop",
        "sim_diff": "diff --git a/src/components/pages/pages.spec.js b/src/components/pages/pages.spec.js @@ -20,7 +20,7 @@ describe(\"BasePages\", () => {\n(transition, expected) => {\nwrapper = mount(\n<BasePages transition={transition}>\n- <Page>Page</Page>\n+ <Page title=\"foo\">Page</Page>\n</BasePages>\n);\n@@ -113,7 +113,7 @@ describe(\"BasePages\", () => {\ndata-role=\"baz\"\ninitialPageIndex={0}\n>\n- <Page />\n+ <Page title=\"Foo\">Bar</Page>\n</BasePages>\n);\n@@ -125,7 +125,9 @@ describe(\"BasePages\", () => {\ndescribe(\"on internal elements\", () => {\nwrapper = mount(\n<BasePages theme={mintTheme} initialPageIndex={0}>\n- <Page data-element=\"page\" />\n+ <Page data-element=\"page\" title=\"Foo\">\n+ Bar\n+ </Page>\n</BasePages>\n);\n",
        "chatgpt_rag": "docs(single-page-applications): update link and code block in Single Page Applications section"
    },
    {
        "msg": "feat(Switch): test",
        "diff": "diff --git a/packages/element3/packages/switch/__tests__/Switch.spec.js b/packages/element3/packages/switch/__tests__/Switch.spec.js @@ -162,4 +162,17 @@ describe('Switch', () => {\nexpect(wrapper.emitted('update:modelValue')).toEqual([['3']])\n})\n+ it('handleClick', async () => {\n+ const wrapper = mount(Switch, {\n+ props: {\n+ isChecked: true,\n+ disabled: false,\n+ activeValue: '2',\n+ inactiveValue: '3'\n+ }\n+ })\n+ await wrapper.find('.el-switch').trigger('click')\n+ expect(wrapper.emitted('update:modelValue')).toEqual([['3'], ['2']])\n+ expect(wrapper.emitted('update:change')).toEqual([['2']])\n+ })\n})\n",
        "date": "15.12.2020 12:10:38",
        "repo": "hug-sun/element3",
        "type": "feat",
        "sim_msg": "test(switch): add onchange callback to tests using checked prop",
        "sim_diff": "diff --git a/src/__experimental__/components/switch/switch.spec.js b/src/__experimental__/components/switch/switch.spec.js @@ -61,12 +61,12 @@ describe(\"Switch\", () => {\ndescribe(\"controlled behaviour\", () => {\nit(\"passes checked value to the CheckableInput\", () => {\n- const wrapper = render({ checked: true }, mount);\n+ const wrapper = render({ checked: true, onChange: jest.fn() }, mount);\nexpect(wrapper.find(CheckableInput).prop(\"checked\")).toBe(true);\n});\nit(\"reacts properly to checked prop change\", () => {\n- const wrapper = render({ checked: true }, mount);\n+ const wrapper = render({ checked: true, onChange: jest.fn() }, mount);\nexpect(wrapper.find(CheckableInput).prop(\"checked\")).toBe(true);\nact(() => {\nwrapper.setProps({ checked: false });\n@@ -75,7 +75,7 @@ describe(\"Switch\", () => {\nexpect(wrapper.find(CheckableInput).prop(\"checked\")).toBe(false);\n});\n- it(\"passess event to the provided onChange prop when change is triggered\", () => {\n+ it(\"passes event to the provided onChange prop when change is triggered\", () => {\nconst onChangeMock = jest.fn();\nconst event = {\ntarget: {\n@@ -115,12 +115,12 @@ describe(\"Switch\", () => {\ndescribe(\"default translation\", () => {\nit(\"has default translation for on\", () => {\n- const wrapper = render({ checked: true }, mount);\n+ const wrapper = render({ checked: true, onChange: jest.fn() }, mount);\nexpect(getLabel(wrapper)).toBe(\"ON\");\n});\nit(\"has default translation for off\", () => {\n- const wrapper = render({ checked: false }, mount);\n+ const wrapper = render({ checked: false, onChange: jest.fn() }, mount);\nexpect(getLabel(wrapper)).toBe(\"OFF\");\n});\n});\n@@ -131,12 +131,12 @@ describe(\"Switch\", () => {\n});\nit(\"can use i18n for on\", () => {\n- const wrapper = render({ checked: true }, mount);\n+ const wrapper = render({ checked: true, onChange: jest.fn() }, mount);\nexpect(getLabel(wrapper)).toBe(\"SUR\");\n});\nit(\"can use i18n for off\", () => {\n- const wrapper = render({ checked: false }, mount);\n+ const wrapper = render({ checked: false, onChange: jest.fn() }, mount);\nexpect(getLabel(wrapper)).toBe(\"DE\");\n});\n});\n",
        "chatgpt_rag": "feat(switch): add handleClick test case to test switch component functionality"
    },
    {
        "msg": "feat(Glo): add Glo component",
        "diff": "diff --git a/components/Glo/index.js b/components/Glo/index.js -import 'glo/js/namespace';\n-import 'glo/js/coordinates.js';\n-import 'glo/js/node_group.js';\n-import 'glo/js/canvas.js';\n-import 'glo/js/node_generation.js';\n-import 'glo/js/edge_generation.js';\n-import 'glo/js/helpers.js';\n-import 'glo/js/glo.js';\n-import 'glo/js/api.js';\n-import 'glo/js/techniques.js';\n-import 'glo/js/figures.js';\n-\n-import * as d3 from 'd3';\n+import d3 from 'glo/node_modules/d3';\n+import GLO from 'glo';\nimport VisComponent from '../../VisComponent';\n+const colorNodes = (glo, field, type) => {\n+ glo.glo.node_attr({\n+ [field]: type\n+ });\n+\n+ glo.glo.color_nodes_by(field);\n+};\n+\nexport default class Glo extends VisComponent {\n- constructor (el, {nodes, edges, width = 960, height = 540}) {\n+ constructor (el, {nodes, edges, nodeAttr, edgeAttr, width = 960, height = 540}) {\nsuper(el);\n// Empty the top-level div.\n@@ -32,15 +29,85 @@ export default class Glo extends VisComponent {\n// Construct a GLO object.\nthis.glo = new GLO.GLO(d3.select(this.svg))\n.nodes(nodes)\n- .edges(edges)\n- .draw();\n-\n- console.log('Glo.constructor()');\n- console.log('this.glo', this.glo);\n+ .edges(edges);\n}\nrender () {\n- console.log('Glo.render()');\n- console.log('GLO object', GLO);\n+ this.glo.draw();\n+ }\n+\n+ colorNodesDiscrete (field) {\n+ colorNodes(this, field, 'discrete');\n+ }\n+\n+ colorNodesContinuous(field) {\n+ colorNodes(this, field, 'continuous');\n+ }\n+\n+ colorNodesDefault () {\n+ this.glo.color_nodes_by_constant();\n+ }\n+\n+ sizeNodes (field) {\n+ this.glo.node_attr({\n+ [field]: 'continuous'\n+ });\n+\n+ this.glo.size_nodes_by(field);\n+ }\n+\n+ sizeNodesDefault () {\n+ this.glo.size_nodes_by_constant();\n+ }\n+\n+ distributeNodes(axis, attr = null) {\n+ if (attr === null) {\n+ this.glo.evenly_distribute_nodes_on(axis);\n+ } else {\n+ this.glo.evenly_distribute_nodes_on(axis, {\n+ by: attr\n+ });\n+ }\n+ }\n+\n+ positionNodes(axis, value) {\n+ this.glo.node_attr({\n+ [value]: 'continuous'\n+ });\n+\n+ this.glo.position_nodes_on(axis, value);\n+ }\n+\n+ forceDirected () {\n+ this.glo.apply_force_directed_algorithm_to_nodes();\n+ }\n+\n+ showEdges () {\n+ this.glo.show_all_edges();\n+ }\n+\n+ hideEdges () {\n+ this.glo.hide_edges();\n+ }\n+\n+ fadeEdges () {\n+ this.glo.show_edges_as_faded();\n+ }\n+\n+ solidEdges () {\n+ this.hideEdges();\n+ this.showEdges();\n+ }\n+\n+ incidentEdges () {\n+ this.glo.show_incident_edges();\n+ }\n+\n+ curvedEdges () {\n+ this.glo.display_edges_as_curved_lines();\n+ }\n+\n+ straightEdges () {\n+ this.glo.display_edges_as_straight_lines();\n}\n}\n",
        "date": "04.05.2017 16:30:57",
        "repo": "kitware/candela",
        "type": "feat",
        "sim_msg": "feat: add new components to global index export",
        "sim_diff": "diff --git a/index.js b/index.js +import Accordion from './Accordion';\n+import AccordionSection from './AccordionSection';\nimport Avatar from './Avatar';\n+import AvatarMenu from './AvatarMenu';\nimport Badge from './Badge';\nimport Button from './Button';\nimport ButtonGroup from './ButtonGroup';\n+import ButtonIcon from './ButtonIcon';\nimport ButtonMenu from './ButtonMenu';\nimport Card from './Card';\n+import CarouselCard from './CarouselCard';\n+import CarouselImage from './CarouselImage';\n+import Chart from './Chart';\n+import CheckboxGroup from './CheckboxGroup';\n+import CheckboxToggle from './CheckboxToggle';\n+import Dataset from './Dataset';\n+import GMap from './GMap';\nimport Input from './Input';\n+import MapMarker from './MapMarker';\n+import MenuDivider from './MenuDivider';\nimport MenuItem from './MenuItem';\n+import Modal from './Modal';\n+import Notification from './Notification';\n+import Pagination from './Pagination';\n+import PrimitiveMenu from './PrimitiveMenu';\nimport ProgressBar from './ProgressBar';\n+import ProgressIndicator from './ProgressIndicator';\n+import ProgressStep from './ProgressStep';\n+import RadioGroup from './RadioGroup';\n+import Rating from './Rating';\n+import ReCaptcha from './ReCaptcha';\n+import Select from './Select';\n+import Slider from './Slider';\nimport Spinner from './Spinner';\n+import Tab from './Tab';\n+import Tabset from './Tabset';\n+import Textarea from './Textarea';\nimport VerticalItem from './VerticalItem';\nimport VerticalNavigation from './VerticalNavigation';\nimport VerticalSection from './VerticalSection';\nimport VerticalSectionOverflow from './VerticalSectionOverflow';\nexport {\n+ Accordion,\n+ AccordionSection,\nAvatar,\n+ AvatarMenu,\nBadge,\nButton,\nButtonGroup,\n+ ButtonIcon,\nButtonMenu,\nCard,\n+ CarouselCard,\n+ CarouselImage,\n+ Chart,\n+ CheckboxGroup,\n+ CheckboxToggle,\n+ Dataset,\n+ GMap,\nInput,\n+ MapMarker,\n+ MenuDivider,\nMenuItem,\n+ Modal,\n+ Notification,\n+ Pagination,\n+ PrimitiveMenu,\nProgressBar,\n+ ProgressIndicator,\n+ ProgressStep,\n+ RadioGroup,\n+ Rating,\n+ ReCaptcha,\n+ Select,\n+ Slider,\nSpinner,\n+ Tab,\n+ Tabset,\n+ Textarea,\nVerticalItem,\nVerticalNavigation,\nVerticalSection,\n",
        "chatgpt_rag": "refactor: update import statements and add new methods to Glo component"
    },
    {
        "msg": "feat(Dashboard): remove old redux stuff from Dashboard container",
        "diff": "diff --git a/src/common/containers/Dashboard/index.jsx b/src/common/containers/Dashboard/index.jsx // @flow\nimport React, {Component} from 'react'\nimport {connect} from 'react-redux'\n-import {Loader} from 'semantic-ui-react'\nimport {Helmet} from 'react-helmet'\n-//\nimport DashboardComponent from './components'\n-import {GET_POSTS} from 'actions/posts'\n-import {getEntitiesPostsState} from 'selectors'\n+\nimport type {GlobalState} from 'reducers'\n-type Props = {\n- posts: Object,\n- postsLoaded: boolean,\n- postsLoading: boolean,\n- count: number,\n- getPosts: () => void\n-}\n+type Props = any\nclass Dashboard extends Component {\nprops: Props\n- componentDidMount () {\n- this.props.getPosts()\n- }\n-\nrender () {\n- const {posts, postsLoaded, postsLoading, count} = this.props\nreturn (\n<div>\n<Helmet>\n<title>Noir:Dashboard</title>\n</Helmet>\n- {postsLoaded\n- ? <DashboardComponent\n- {...{posts, postsLoaded, postsLoading, count}}\n- />\n- : <Loader active>Loading...</Loader>}\n+ <DashboardComponent />\n</div>\n)\n}\n}\nfunction mapStateToProps (state: GlobalState) {\n- const postsState = getEntitiesPostsState(state)\n- const postsLoaded = postsState.isLoaded\n- const postsLoading = postsState.isLoading\n- const posts = postsState.entities\n- const {count} = postsState\n- return {\n- posts,\n- postsLoading,\n- postsLoaded,\n- count\n- }\n+ return {}\n}\nfunction mapDispatchToProps (dispatch) {\n- return {\n- getPosts () {\n- dispatch(GET_POSTS())\n- }\n- }\n+ return {}\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard)\n",
        "date": "30.09.2017 14:35:18",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "fix: make reason use local state",
        "sim_diff": "diff --git a/src/components/dashboard/Reason.js b/src/components/dashboard/Reason.js // @flow\n-import React from 'react'\n+import React, { useState } from 'react'\nimport { View } from 'react-native'\nimport { TextInput } from 'react-native-paper'\n@@ -19,7 +19,8 @@ const SendReason = (props: AmountProps) => {\nconst { screenProps } = props\nconst [screenState, setScreenState] = useScreenState(screenProps)\n- const { amount, reason, to } = screenState\n+ const [reason, setReason] = useState(screenState.reason)\n+ const { amount, to } = screenState\nreturn (\n<Wrapper style={styles.wrapper}>\n@@ -28,7 +29,7 @@ const SendReason = (props: AmountProps) => {\n<Section.Row style={styles.sectionRow}>\n<View style={styles.inputField}>\n<Section.Title style={styles.headline}>For?</Section.Title>\n- <TextInput autoFocus value={reason} onChangeText={reason => setScreenState({ reason })} />\n+ <TextInput autoFocus value={reason} onChangeText={reason => setReason(reason)} />\n</View>\n<View style={styles.buttonGroup}>\n<BackButton mode=\"text\" screenProps={screenProps} style={{ flex: 1 }}>\n",
        "chatgpt_rag": "refactor: remove unnecessary code and simplify Dashboard component structure"
    },
    {
        "msg": "feat(webpack.isomorphic): add i18n folder to aliases",
        "diff": "diff --git a/webpack_config/webpack.isomorphic.js b/webpack_config/webpack.isomorphic.js @@ -25,6 +25,7 @@ export default {\n// Aliases that both server and client use\n// Probably, it's a bad example, because here we defined only client's aliases.\nalias: {\n+ i18n: `${srcCommonPath}/i18n/`,\nactions: `${srcCommonPath}/actions/`,\napi: `${srcCommonPath}/api/`,\ncomponents: `${srcCommonPath}/components/`,\n",
        "date": "06.09.2017 12:14:23",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "chore: CopyWebpackPlugin error on windows due to path separators",
        "sim_diff": "diff --git a/webpack.config.js b/webpack.config.js @@ -116,7 +116,7 @@ module.exports = function (env) {\nglobOptions: { ignore: '**/*.js' },\n},\n{\n- from: path.join(__dirname, `${CODE_SOURCE_DIR}/extension/legacy/**/*.css`),\n+ from: path.join(__dirname, `${CODE_SOURCE_DIR}/extension/legacy/**/*.css`).replace(/\\\\/g, '/'),\nto: path.join(__dirname, `${BUILD_PATH}/web-accessibles`),\ncontext: 'src/extension',\n},\n@@ -124,7 +124,7 @@ module.exports = function (env) {\nfrom: path.join(\n__dirname,\n`${CODE_SOURCE_DIR}/extension/legacy/features/l10n/locales/*.js`\n- ),\n+ ).replace(/\\\\/g, '/'),\nto: path.join(__dirname, `${BUILD_PATH}/web-accessibles`),\ncontext: 'src/extension',\n},\n",
        "chatgpt_rag": "fix: Define aliases for both server and client in webpack config"
    },
    {
        "msg": "feat(server): add useragent middleware",
        "diff": "diff --git a/src/server/middlewares/index.js b/src/server/middlewares/index.js @@ -8,6 +8,7 @@ import compression from 'compression'\nimport cookieParser from 'cookie-parser'\nimport bodyParser from 'body-parser'\nimport morgan from 'morgan'\n+import useragent from 'express-useragent'\nimport authMiddleware from './auth'\nexport default (app: express$Application): express$Application => {\n@@ -22,6 +23,7 @@ export default (app: express$Application): express$Application => {\n})\n)\napp.use(bodyParser.json())\n+ app.use(useragent.express())\napp.use(authMiddleware)\nreturn app\n",
        "date": "17.09.2017 14:26:26",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "feat: add passport.js cookie auth strategy",
        "sim_diff": "diff --git a/src/server.js b/src/server.js import express from \"express\";\nimport nextApp from \"next\";\nimport { useStaticRendering } from \"mobx-react\";\n-\n+import passport from \"passport\";\n+import CookieStrategy from \"passport-cookie\";\nimport logger from \"lib/logger\";\nimport { appPath, dev } from \"./config\";\nimport router from \"./routes\";\n@@ -12,13 +13,21 @@ const handle = app.getRequestHandler();\nuseStaticRendering(true);\n+passport.use(new CookieStrategy((token, done) => {\n+ done(null, { token });\n+}));\n+\napp.prepare()\n.then(() => { // eslint-disable-line promise/always-return\nconst server = express();\nserver.use(routeHandler);\n- server.get(\"*\", (req, res) => handle(req, res));\n+ server.get(\n+ \"*\",\n+ passport.authenticate(\"cookie\", { session: false }),\n+ (req, res) => handle(req, res)\n+ );\nreturn server.listen(4000, (err) => {\nif (err) throw err;\n",
        "chatgpt_rag": "feat: add useragent middleware for user agent detection"
    },
    {
        "msg": "feat: checks for `$grid-row-columns`",
        "diff": "diff --git a/scss/mixins/_grid.scss b/scss/mixins/_grid.scss @include make-col-auto();\n}\n+ @if $grid-row-columns > 0 {\n@for $i from 1 through $grid-row-columns {\n.row-cols#{$infix}-#{$i} {\n@include row-cols($i);\n}\n}\n+ }\n.col#{$infix}-auto {\n@include make-col-auto();\n",
        "date": "16.04.2020 20:15:51",
        "repo": "coreui/coreui",
        "type": "feat",
        "sim_msg": "feat(layout/grid): update behavior for layout grid columns",
        "sim_diff": "diff --git a/components/layout/grid/src/index.scss b/components/layout/grid/src/index.scss @import '~@s-ui/theme/lib/index';\n@import './settings';\n-.sui-LayoutGrid {\n- $self: &;\n+/////\n+\n+$grid-columns: 12;\n+\n+@mixin grid-parent($gap) {\ndisplay: flex;\nflex-wrap: wrap;\nlist-style: none;\n- margin: 0 (-$layout-grid-gap / 2);\n- width: calc(100% + #{$layout-grid-gap});\n- @include grid-align-items($ai-layout-grid);\n- @include grid-justify-content($jc-layout-grid);\n+ margin: 0 (-$gap);\n+}\n+\n+@mixin grid-flex-basis($columns) {\n+ $w-column: (100% / $grid-columns) * $columns;\n+ flex-basis: $w-column;\n+ max-width: $w-column;\n+}\n- @include media-breakpoint-up($layout-grid-breakpoint-min) {\n- flex-wrap: nowrap;\n+@mixin grid-value($breakpoint-name, $columns) {\n+ @include media-breakpoint-up($breakpoint-name) {\n+ @include grid-flex-basis($columns);\n+ }\n}\n+/////\n+\n+.sui-LayoutGrid {\n+ $self: &;\n+ @include grid-parent($layout-grid-gap);\n+ @include grid-align-items($ai-layout-grid);\n+ @include grid-justify-content($jc-layout-grid);\n+\n&-item {\n+ flex-basis: 100%;\nmargin: 0;\n- min-width: 100%;\n+ max-width: 100%;\npadding: 0 $layout-grid-gap;\n@include grid-item-sizes($breakpoints, $grid-columns);\n}\n&.is-gapless {\nmargin: 0;\n- width: 100%;\n#{$self}-item {\npadding: 0;\n",
        "chatgpt_rag": "feat(grid): add dynamic row columns in grid mixin"
    },
    {
        "msg": "feat: Add banner",
        "diff": "diff --git a/rollup.config.js b/rollup.config.js import { terser } from \"rollup-plugin-terser\"\n+import { VERSION } from \"./src/version.js\";\n+\n+const banner = `/*\n+ * BiwaScheme ${VERSION} - R6RS/R7RS Scheme in JavaScript\n+ *\n+ * Copyright (c) 2007-${(new Date).getFullYear()} Yutaka HARA (http://www.biwascheme.org/)\n+ * Licensed under the MIT license.\n+ */`\nexport default {\n- plugins: [\n- terser({ output: { comments: /@license/i } }),\n- ],\ninput: \"src/main-browser.js\",\noutput: [\n{\n@@ -11,13 +16,15 @@ export default {\nformat: \"iife\",\nname: \"BiwaScheme\",\nstrict: false,\n+ banner: banner,\n},\n{\nfile: \"release/biwascheme-min.js\",\nformat: \"iife\",\nname: \"BiwaScheme\",\nstrict: false,\n- plugins: [terser()],\n+ banner: banner,\n+ plugins: [terser({output: {comments: /Copyright/}})],\n},\n]\n}\n",
        "date": "26.06.2020 00:15:43",
        "repo": "biwascheme/biwascheme",
        "type": "feat",
        "sim_msg": "chore: Add banner with version and copyright to all built files",
        "sim_diff": "diff --git a/rollup.config.js b/rollup.config.js @@ -26,6 +26,7 @@ export default utils.pkgs.reduce((all, path) => {\nconst file = utils.getPackageName(path)\nconst name = file.replace(/-./g, (m) => m.slice(-1).toUpperCase())\nconst jsx = name.replace(/./, (m) => m.toUpperCase())\n+ const bannerText = `/*! @nrk/${file} v${version} - Copyright (c) 2017-${new Date().getFullYear()} NRK */`\nreturn all.concat({\ninput: `${path}/${file}.test.js`, // JS CJS (used for testing)\n@@ -33,6 +34,7 @@ export default utils.pkgs.reduce((all, path) => {\nformat: 'cjs',\nfile: `${path}/${file}.test.cjs.js`,\nexports: 'none', // Tests have no exports; set to 'auto' if this changes\n+ banner: bannerText,\nglobals\n},\ntreeshake,\n@@ -48,6 +50,7 @@ export default utils.pkgs.reduce((all, path) => {\noutput: {\nformat: 'cjs',\nfile: `${path}/${file}.cjs.js`,\n+ banner: bannerText,\nexports: 'default',\nglobals\n},\n@@ -59,7 +62,7 @@ export default utils.pkgs.reduce((all, path) => {\noutput: {\nformat: 'umd',\nfile: `${path}/${file}.min.js`,\n- banner: `/*! @nrk/${file} v${version} - Copyright (c) 2017-${new Date().getFullYear()} NRK */`,\n+ banner: bannerText,\nfooter: `window.customElements.define('${file}', ${name})`,\nsourcemap: true,\nglobals,\n@@ -73,6 +76,7 @@ export default utils.pkgs.reduce((all, path) => {\noutput: {\nformat: 'cjs',\nfile: `${path}/jsx.js`,\n+ banner: bannerText,\nexports: 'default',\nglobals\n},\n@@ -84,6 +88,7 @@ export default utils.pkgs.reduce((all, path) => {\noutput: {\nformat: 'umd',\nfile: `${path}/${file}.jsx.js`,\n+ banner: bannerText,\nname: jsx,\nsourcemap: true,\nglobals\n",
        "chatgpt_rag": "feat: Add version and copyright banner to built files with updated information"
    },
    {
        "msg": "feat(config): Change to temporary credentials",
        "diff": "diff --git a/config/environment.js b/config/environment.js /* eslint-env node */\nmodule.exports = function(environment) {\n- let ALGOLIA_APP_ID = process.env.ALGOLIA_APP_ID || 'BH4D9OD16A';\n- let ALGOLIA_API_KEY = process.env.ALGOLIA_API_KEY || '92d3556bc9a494d48e7054fbb4c4ce6f';\n+ let ALGOLIA_APP_ID = process.env.ALGOLIA_APP_ID || 'N4SO04CV0R';\n+ let ALGOLIA_API_KEY = process.env.ALGOLIA_API_KEY || '0b28a7a3adf986fa5d402567d9d8b850';\nlet ENV = {\nmodulePrefix: 'ember-api-docs',\n",
        "date": "16.08.2017 22:17:51",
        "repo": "ember-learn/ember-api-docs",
        "type": "feat",
        "sim_msg": "chore(build): configure ascend env keys",
        "sim_diff": "diff --git a/env.config.js b/env.config.js const ENV = {\n- 'syncano-ascend': 'STAGING',\n+ 'syncano-ascend': 'ASCEND',\ndevel: 'STAGING',\nmaster: 'PRODUCTION'\n}[process.env.CIRCLE_BRANCH || 'devel']\n@@ -23,6 +23,4 @@ const variables = envVars\n})\n}, {})\n-console.log(variables)\n-\nmodule.exports = variables\n",
        "chatgpt_rag": "chore(build): update Algolia keys for environment configuration"
    },
    {
        "msg": "feat: keep contrast on `.table-dark`\nIn case we set `$body-bg` to a dark color, we have to keep table contrast relevant.",
        "diff": "diff --git a/scss/_variables.scss b/scss/_variables.scss @@ -343,7 +343,7 @@ $table-dark-bg: $gray-900 !default;\n$table-dark-accent-bg: rgba($white, .05) !default;\n$table-dark-hover-bg: rgba($white, .075) !default;\n$table-dark-border-color: lighten($gray-900, 7.5%) !default;\n-$table-dark-color: $body-bg !default;\n+$table-dark-color: $white !default;\n$table-striped-order: odd !default;\n",
        "date": "16.09.2018 11:06:53",
        "repo": "coreui/coreui",
        "type": "feat",
        "sim_msg": "fix(table): added selectedable table option",
        "sim_diff": "diff --git a/scss/os/_utils.scss b/scss/os/_utils.scss }\n}\n- &.u-table-striped {\n+ .u-table__selectable {\ncursor: pointer;\n+ }\n+ &.u-table-striped {\n.u-table__row:nth-child(odd) {\nbackground-color: $table-accent-bg;\n}\n",
        "chatgpt_rag": "style(table): changed dark table text color to white"
    },
    {
        "msg": "feat: Can filter based on public key",
        "diff": "diff --git a/frontend/leaderboard/src/Metrics.re b/frontend/leaderboard/src/Metrics.re @@ -238,6 +238,9 @@ let calculateAllUsers = metrics => {\nlet echoBotPublicKeys = [\n\"B62qndJi5mnRoBZ8SAYDM1oR2SgAk5WpZC8hGpJUZ4e64kDHGbFMeLJ\",\n];\n+\n+let excludePublicKeys = [];\n+\nlet calculateMetrics = blocks => {\nlet blocksCreated = getBlocksCreatedByUser(blocks);\nlet transactionSent = getTransactionSentByUser(blocks);\n@@ -257,6 +260,7 @@ let calculateMetrics = blocks => {\nthrowAwayValues(coinbaseReceiverChallenge),\nthrowAwayValues(createAndSendToken),\n])\n+ |> StringMap.filter((key, _) => {!List.mem(key, excludePublicKeys)})\n|> StringMap.mapi((key, _) =>\n{\nTypes.Metrics.blocksCreated: StringMap.find_opt(key, blocksCreated),\n",
        "date": "29.12.2020 17:15:41",
        "repo": "minaprotocol/mina",
        "type": "feat",
        "sim_msg": "fix: account estimated value",
        "sim_diff": "diff --git a/src/client/user/UserWallet.js b/src/client/user/UserWallet.js @@ -4,6 +4,7 @@ import { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport UserWalletSummary from '../wallet/UserWalletSummary';\n+import { SBD, STEEM } from '../../common/constants/cryptos';\nimport { getUserDetailsKey } from '../helpers/stateHelpers';\nimport UserWalletTransactions from '../wallet/UserWalletTransactions';\nimport Loading from '../components/Icon/Loading';\n@@ -126,8 +127,16 @@ class Wallet extends Component {\nconst userKey = getUserDetailsKey(user.name);\nconst transactions = _.get(usersTransactions, userKey, []);\nconst actions = _.get(usersAccountHistory, userKey, []);\n- const currentSteemRate = _.get(cryptosPriceHistory, 'STEEM.priceDetails.currentUSDPrice', null);\n- const currentSBDRate = _.get(cryptosPriceHistory, 'SBD.priceDetails.currentUSDPrice', null);\n+ const currentSteemRate = _.get(\n+ cryptosPriceHistory,\n+ `${STEEM.symbol}.priceDetails.currentUSDPrice`,\n+ null,\n+ );\n+ const currentSBDRate = _.get(\n+ cryptosPriceHistory,\n+ `${SBD.symbol}.priceDetails.currentUSDPrice`,\n+ null,\n+ );\nconst steemRateLoading = _.isNull(currentSteemRate) || _.isNull(currentSBDRate);\nreturn (\n",
        "chatgpt_rag": "feat: add functionality to exclude specific public keys from metrics calculation"
    },
    {
        "msg": "feat: declare ViewOptions in vega-typings",
        "diff": "diff --git a/packages/vega-typings/types/runtime/index.d.ts b/packages/vega-typings/types/runtime/index.d.ts @@ -55,10 +55,7 @@ export interface ToCanvasOptions {\nexternalContext?: any;\n}\n-export class View {\n- constructor(\n- runtime: Runtime,\n- opt?: {\n+export interface ViewOptions {\nbackground?: Color;\nbind?: Element | string;\ncontainer?: Element | string;\n@@ -70,8 +67,10 @@ export class View {\ntooltip?: TooltipHandler;\nlocale?: LocaleFormatters;\nexpr?: any;\n- },\n- );\n+}\n+\n+export class View {\n+ constructor(runtime: Runtime, opt?: ViewOptions);\n// View Configuration\n",
        "date": "11.11.2020 20:37:04",
        "repo": "vega/vega",
        "type": "feat",
        "sim_msg": "feat(types): add missing wrappers type def in ArrayWrapper\nOffer missing field `wrappers` in TS type definition to access wrappers directly from a test.",
        "sim_diff": "diff --git a/types/index.d.ts b/types/index.d.ts @@ -76,6 +76,7 @@ interface Wrapper<V extends Vue> extends BaseWrapper {\ninterface WrapperArray<V extends Vue> extends BaseWrapper {\nreadonly length: number\n+ readonly wrappers: Array<Wrapper<V>>\nat (index: number): Wrapper<V>\n}\n",
        "chatgpt_rag": "refactor(types): update View class constructor signature\n\nRefactor the View class constructor in the TS type definition to accept a runtime and optional ViewOptions object. This change improves the readability and maintainability of the code."
    },
    {
        "msg": "feat(styles): duplicate some styles to make SSR result nicer",
        "diff": "diff --git a/src/common/styles/global.jsx b/src/common/styles/global.jsx @@ -5,6 +5,26 @@ injectGlobal`\nbox-sizing: border-box;\n}\n+ body {\n+ margin: 0;\n+ padding: 0;\n+ overflow-x: hidden;\n+ min-width: 320px;\n+ background: white;\n+ font-family: 'Lato', 'Helvetica Neue', Arial, Helvetica, sans-serif;\n+ font-size: 14px;\n+ line-height: 1.4285em;\n+ color: rgba(0, 0, 0, 0.87);\n+ }\n+\n+ .pushable {\n+ height: 100%;\n+ overflow-x: hidden;\n+ padding: 0em !important;\n+ -webkit-transform: translate3d(0, 0, 0);\n+ transform: translate3d(0, 0, 0);\n+ }\n+\n${''/* body ::-webkit-scrollbar {\nwidth: 0;\n}\n",
        "date": "03.11.2017 16:38:10",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "fix(typography): remove font-weights and use correct font family",
        "sim_diff": "diff --git a/common/styles.js b/common/styles.js @@ -19,6 +19,7 @@ const TEXT = css`\nbox-sizing: border-box;\noverflow-wrap: break-word;\ntext-align: left;\n+ font-weight: normal;\na {\n${LINK}\n@@ -26,9 +27,8 @@ const TEXT = css`\n`;\nexport const H1 = css`\n- font-family: ${Constants.font.text};\n+ font-family: ${Constants.font.medium};\nfont-size: 1.953rem;\n- font-weight: medium;\nline-height: 1.5;\nletter-spacing: -0.021px;\n@@ -36,9 +36,8 @@ export const H1 = css`\n`;\nexport const H2 = css`\n- font-family: ${Constants.font.text};\n+ font-family: ${Constants.font.medium};\nfont-size: 1.563rem;\n- font-weight: medium;\nline-height: 1.5;\nletter-spacing: -0.019px;\n@@ -46,7 +45,7 @@ export const H2 = css`\n`;\nexport const H3 = css`\n- font-family: ${Constants.font.text};\n+ font-family: ${Constants.font.medium};\nfont-size: 1.25rem;\nline-height: 1.5;\nletter-spacing: -0.017px;\n@@ -55,7 +54,7 @@ export const H3 = css`\n`;\nexport const H4 = css`\n- font-family: ${Constants.font.text};\n+ font-family: ${Constants.font.medium};\nfont-size: 1rem;\nline-height: 1.5;\nletter-spacing: -0.011px;\n@@ -64,7 +63,7 @@ export const H4 = css`\n`;\nexport const H5 = css`\n- font-family: ${Constants.font.text};\n+ font-family: ${Constants.font.medium};\nfont-size: 0.875rem;\nline-height: 1.5;\nletter-spacing: -0.006px;\n@@ -75,14 +74,12 @@ export const H5 = css`\nexport const P1 = css`\nfont-family: ${Constants.font.text};\nfont-size: 1rem;\n- font-weight: regular;\nline-height: 1.5;\nletter-spacing: -0.011px;\n@media (max-width: ${Constants.sizes.mobile}px) {\nfont-family: ${Constants.font.text};\nfont-size: 0.875rem;\n- font-weight: regular;\nline-height: 1.5;\nletter-spacing: -0.006px;\n}\n@@ -93,14 +90,12 @@ export const P1 = css`\nexport const P2 = css`\nfont-family: ${Constants.font.text};\nfont-size: 0.875rem;\n- font-weight: regular;\nline-height: 1.5;\nletter-spacing: -0.006px;\n@media (max-width: ${Constants.sizes.mobile}px) {\nfont-family: ${Constants.font.text};\nfont-size: 0.75rem;\n- font-weight: normal;\nline-height: 1.3;\nletter-spacing: 0px;\n}\n@@ -111,7 +106,6 @@ export const P2 = css`\nexport const P3 = css`\nfont-family: ${Constants.font.text};\nfont-size: 0.75rem;\n- font-weight: normal;\nline-height: 1.334;\nletter-spacing: 0px;\n@@ -121,7 +115,6 @@ export const P3 = css`\nexport const C1 = css`\nfont-family: ${Constants.font.code};\nfont-size: 0.75rem;\n- font-weight: normal;\nline-height: 1.3;\n${TEXT}\n@@ -130,7 +123,6 @@ export const C1 = css`\nexport const C2 = css`\nfont-family: ${Constants.font.code};\nfont-size: 0.875rem;\n- font-weight: normal;\nline-height: 1.5;\n${TEXT}\n@@ -139,16 +131,14 @@ export const C2 = css`\nexport const C3 = css`\nfont-family: ${Constants.font.code};\nfont-size: 0.875rem;\n- font-weight: normal;\nline-height: 1.5;\n${TEXT}\n`;\nexport const B1 = css`\n- font-family: ${Constants.font.text};\n+ font-family: ${Constants.font.medium};\nfont-size: 0.875rem;\n- font-weight: medium;\nline-height: 1;\nletter-spacing: -0.006px;\n",
        "chatgpt_rag": "style(global): update global styles for body and .pushable elements"
    },
    {
        "msg": "feat: Added ties to top N points",
        "diff": "diff --git a/frontend/leaderboard/src/Points.re b/frontend/leaderboard/src/Points.re @@ -40,19 +40,32 @@ let applyTopNPoints =\nArray.sort(f, metricsArray);\nBelt.Array.reverseInPlace(metricsArray);\n- metricsArray |> Array.iter(Js.log);\n+ metricsArray\n+ |> Array.iteri((index, metric) => {\n+ Js.log(\"index: \" ++ string_of_int(index));\n+ Js.log(\"metric: \");\n+ Js.log(metric);\n+ Js.log(\"\\n\");\n+ });\nlet counter = ref(0);\nlet topNArrayWithPoints =\nmetricsArray\n- |> Array.mapi((i, (username, _)) =>\n+ |> Array.mapi((i, (username, metric)) =>\nif (counter^ >= Array.length(threshholdPointsList)) {\n(username, 0);\n} else {\nlet (place, points) = threshholdPointsList[counter^];\n- if (place == i) {\n+ if (i < Array.length(metricsArray) - 1) {\n+ let challengeMetric = getMetricValue(metric);\n+ let (_, nextMetric) = metricsArray[i + 1];\n+ let nextChallengeMetric = getMetricValue(nextMetric);\n+\n+ // handle ties by comparing to the next metric\n+ if (challengeMetric !== nextChallengeMetric && i >= place) {\ncounter := counter^ + 1;\n};\n+ };\n(username, points);\n}\n);\n",
        "date": "30.01.2021 12:50:55",
        "repo": "minaprotocol/mina",
        "type": "feat",
        "sim_msg": "refactor(api): remove empty graph fix",
        "sim_diff": "diff --git a/server/cache/leaderboard.js b/server/cache/leaderboard.js @@ -183,9 +183,6 @@ const setGraph = async ({ leaderboards }) => {\nvalues.push(sample + ':' + score[0], score[1])\n})\n})\n- if (values.length === 0) {\n- return\n- }\nawait redisEvalsha(\nawait setGraphScript,\n2,\n",
        "chatgpt_rag": "feat(frontend): add logging for metrics array iteration and handle ties in topNArrayWithPoints generation"
    },
    {
        "msg": "feat: add examples to static export",
        "diff": "diff --git a/website/pages/static-export.mdx b/website/pages/static-export.mdx @@ -48,18 +48,58 @@ Razzle not only works with React, but also Reason, Elm, Vue, Angular, Svelte, an\n#### render()\nbehind the scenes razzle calls `render` function that exposed from `static_export` module and saves `html` string that you pass to `res.json()` into a html file. for `req` object there is only one property that is `url` which contains the url that we are going to render and save it's result to the html file.\n+html file destination is relative to the `req.url`, for example if the url is `/product/A` html is going to get saved at `/build/product/A/index.html`.\n+\n+you should call `renderToString()` (or what ever your framework gives you to do SSR) in this function send resonse to `res.json()`\n+\n+```js\n+export const render = (req, res) => {\n+ const html = ReactDOMServer.renderToString(\n+ <StaticRouter location={req.url}>\n+ <App />\n+ </StaticRouter>\n+ );\n+\n+ res.json({ html });\n+};\n+```\n+\n+(you can re-export your ssr logic from server.js file and use it `static_export`)\n#### routes()\nyou should also export a function called `routes` that returns an array of strings or a promise that will resolve array of strings. razzle will take the urls one by one and pass them one by one to `render`.\n+you should get all paths that your app has from your CMS in this method and return it at the end:\n-html file destination is relative to the `req.url`, for example if the url is `/product/A` html is going to get saved at `/build/product/A/index.html`.\n+```js\n+export const routes = async () => {\n+ // data should be an array of strings [\"/\", \"/product/A\", \"/blog/1\", \"/blog/2\"]\n+ const { data } = await getAppPaths();\n+ return data;\n+};\n+```\n#### page data\nyou may also need to save the data that your page uses to rehydrate the app on the client side.\nyou can also pass the `data` along the `html` to `res.json({ html, data })` and contents of data object will go inside the `page-data.json` file next to the html file.\n+```js\n+export const render = async (req, res) => {\n+ const data = await getDataForRoute(req.url);\n+\n+ const html = ReactDOMServer.renderToString(\n+ <StaticRouter location={req.url}>\n+ <App />\n+ </StaticRouter>\n+ );\n+\n+ res.json({ html, data });\n+};\n+```\n+\n+(you should also change how your app fetches data on client-side, so it reads data from `page-data.json`)\n+\n## TypeScript Support\nStatic export comes with typescript support out of the box, in order to use typescript rename `static_export.js` to `static_export.ts` and you are good to go!\n",
        "date": "06.10.2020 02:46:12",
        "repo": "jaredpalmer/razzle",
        "type": "feat",
        "sim_msg": "style(renderer/functions): stop declaring once only used `fallback404Url` const",
        "sim_diff": "diff --git a/@ecomplus/storefront-renderer/functions/index.js b/@ecomplus/storefront-renderer/functions/index.js @@ -51,11 +51,10 @@ exports.ssr = (req, res, getCacheControl) => {\nredirect(url.slice(0, -1))\n} else if (url !== '/404' && (/\\/[^/.]+$/.test(url) || /\\.x?html$/.test(url))) {\nconst encodedUrl = encodeURIComponent(url)\n- const fallback404Url = `/404?url=${encodedUrl}`\nres.set('Set-Cookie', `referrerUrl=${encodedUrl}; Max-Age=30`)\nsetStatusAndCache(404, `public, max-age=${(isLongCache ? 120 : 30)}`)\n.send('<html><head>' +\n- `<meta http-equiv=\"refresh\" content=\"0; url=${fallback404Url}\"/>` +\n+ `<meta http-equiv=\"refresh\" content=\"0; url=/404?url=${encodedUrl}\"/>` +\n'</head><body></body></html>')\n} else {\nsetStatusAndCache(404, isLongCache\n",
        "chatgpt_rag": "feat(website): add render and routes functions to static-export.mdx\n\nAdded the `render` and `routes` functions to the `static-export.mdx` file in order to handle server-side rendering and define the routes for the static export. The `render` function uses `ReactDOMServer.renderToString` to render the app with the provided URL, while the `routes` function fetches all paths from the CMS. Additionally, the `render` function now includes the ability to pass data along with the HTML response."
    },
    {
        "msg": "feat(server/ssr): rewrite ssr, add HTML component, use stats instead of hadrcoded html\nfeat(server/ssr): rewrite ssr, add HTML component, use stats instead of\nhadrcoded html",
        "diff": "diff --git a/src/server/ssr/index.js b/src/server/ssr/index.js * @flow\n* @desc\n*/\n-import * as React from 'react'\n+import React, {type Node} from 'react'\nimport fs from 'fs'\nimport {renderToString} from 'react-dom/server'\nimport Helmet from 'react-helmet'\nimport createHistory from 'history/createMemoryHistory'\nimport {ServerStyleSheet, StyleSheetManager} from 'styled-components'\nimport {configureApp, configureRootComponent} from 'common/app'\n-\n-const DLLScripts =\n- process.env.NODE_ENV === 'production'\n- ? ''\n- : `\n- <script src=\"/polyfills.js\"></script>\n- <script src=\"/vendor.js\"></script>\n-`\n-// This function makes server rendering of asset references consistent with different webpack chunk/entry confiugrations\n-function normalizeAssets (assets) {\n- return Array.isArray(assets) ? assets : [assets]\n-}\n+import IndexHTMLComponent from './IndexHTMLComponent'\n+import assets from 'webpack-assets'\n+import faviconsAssets from 'favicons-assets'\nexport default (req: Object, res: Object, next: () => void) => {\n- const stats = fs.readFileSync(\n- `${process.env.CLIENT_DIST_PATH}/stats.json`,\n- 'utf8'\n- )\nconst {isLoggedIn, token} = req.user\nconst initialState: Object = isLoggedIn\n? {me: {auth: {isLoggedIn, token}}}\n@@ -34,74 +21,27 @@ export default (req: Object, res: Object, next: () => void) => {\nconst sheet = new ServerStyleSheet()\nconst location: string = req.url\nconst context = {}\n- const {store, history, routes} = configureApp({initialState})\n- const RootComponent: React.Node = configureRootComponent({\n+ const {store, history, routes} = configureApp(initialState)\n+ const RootComponent: Node = configureRootComponent({\nstore,\nhistory,\nroutes,\nSSR: {location, context}\n})\n- const App: React.Node = (\n+ const App: Node = (\n<StyleSheetManager sheet={sheet.instance}>\n{RootComponent}\n</StyleSheetManager>\n)\nconst css = sheet.getStyleTags()\nconst preloadedState: Object = store.getState()\n- console.log(preloadedState)\n- const app: string = renderToString(App)\n- const {assetsByChunkName}: Object = JSON.parse(stats)\n- const html = getHtml({\n- app,\n+ const props = {\ncss,\n+ assets,\n+ faviconsAssets,\ninitialState: preloadedState,\n- assetsByChunkName\n- })\n- res.send(html)\n+ App\n}\n-\n-/**\n- * Get html\n- * @param {[type]} app [description]\n- * @param {[type]} css [description]\n- * @param {[type]} initialState [description]\n- * @param {[type]} assetsByChunkName [description]\n- * @return {String} [description]\n- */\n-const getHtml = ({app, css, initialState, assetsByChunkName}) => {\n- const stringifiedState: string = JSON.stringify(initialState)\n- const safeStringifiedState: string = stringifiedState.replace(/</g, '\\\\u003c')\n- return `\n- <!doctype html>\n- <html>\n- <head>\n- <meta charset=\"utf-8\">\n- <title>Noir</title>\n- <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n- <meta name=\"description\" content=\"Production-ready, performance-first, template built with React/Redux/React-Semantic-UI\">\n- <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n- <base href=\"/\" />\n- <meta name=\"theme-color\" content=\"<%=htmlWebpackPlugin.options.theme_color%>\"/>\n- <meta name=\"msapplication-tap-highlight\" content=\"no\">\n- <link rel=\"manifest\" href=\"manifest.json\">\n- ${css}\n- ${normalizeAssets(assetsByChunkName.client)\n- .filter(path => path.endsWith('.css'))\n- .map(path => `<link rel=\"stylesheet\" href=\"${path}\" />`)\n- .join('\\n')}\n- </head>\n- <body>\n- <div id=\"app\">${app}</div>\n- <script>window.__INITIAL_STATE__ = ${safeStringifiedState}</script>\n- ${DLLScripts}\n- ${normalizeAssets(assetsByChunkName.client)\n- .filter(path => path.endsWith('.js'))\n- .map(path => `<script src=\"${path}\"></script>`)\n- .join('\\n')}\n- <noscript>\n- You are using outdated browser. You can install modern browser here: <a href=\"http://outdatedbrowser.com/\" >http://outdatedbrowser.com</a>.\n- </noscript>\n- </body>\n- </html>\n- `\n+ const html: string = renderToString(<IndexHTMLComponent {...props} />)\n+ res.send(html)\n}\n",
        "date": "06.09.2017 12:16:46",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "chore: undo file update",
        "sim_diff": "diff --git a/packages/frontend/src/index.js b/packages/frontend/src/index.js -import \"regenerator-runtime/runtime\";\n+import 'regenerator-runtime/runtime';\nimport { createBrowserHistory } from 'history';\nimport React from 'react';\n@@ -21,16 +21,12 @@ const history = createBrowserHistory();\nexport const store = createStore(createRootReducer(history), createMiddleware(history));\nReactDOM.render(\n- <GoogleReCaptchaProvider\n- reCaptchaKey={RECAPTCHA_ENTERPRISE_SITE_KEY}\n- useRecaptchaNet={true}\n- useEnterprise={true}\n- >\n+ <GoogleReCaptchaProvider reCaptchaKey={RECAPTCHA_ENTERPRISE_SITE_KEY} useRecaptchaNet={true} useEnterprise={true}>\n<Provider store={store}>\n<LocalizeProvider store={store}>\n<Routing history={history} />\n</LocalizeProvider>\n</Provider>\n</GoogleReCaptchaProvider>,\n- document.getElementById('root')\n+ document.getElementById('root'),\n);\n",
        "chatgpt_rag": "chore: refactor server-side rendering logic and component imports"
    },
    {
        "msg": "feat: logo and header link to home page",
        "diff": "diff --git a/src/App.vue b/src/App.vue <div class=\"container mb-4 mt-4\">\n<div class=\"mb-4\">\n<h1 class=\"logo\">\n- <img alt=\"Logo\" src=\"./assets/logo.png\" width=\"50\">\n+ <router-link to=\"/\">\n+ <img alt=\"Logo\" src=\"./assets/logo.png\" width=\"50\" />\nOpen Drinks\n+ </router-link>\n</h1>\n</div>\n<footer class=\"container mt-4 text-center\">\n<hr />\n- <div>View the source or contribute a drink recipe on <a href=\"https://github.com/alfg/opendrinks\">GitHub</a>!</div>\n+ <div>\n+ View the source or contribute a drink recipe on\n+ <a\n+ href=\"https://github.com/alfg/opendrinks\"\n+ >GitHub</a>!\n+ </div>\n<a href=\"https://www.netlify.com\">\n<img src=\"https://www.netlify.com/img/global/badges/netlify-light.svg\" alt=\"Netlify\" />\n</a>\n<style>\n#app {\n- font-family: 'Avenir', Helvetica, Arial, sans-serif;\n+ font-family: \"Avenir\", Helvetica, Arial, sans-serif;\n-webkit-font-smoothing: antialiased;\n-moz-osx-font-smoothing: grayscale;\ncolor: #2c3e50;\n}\n.logo {\n- font-family: 'Pacifico', 'cursive';\n+ font-family: \"Pacifico\", \"cursive\";\n+}\n+.logo a {\n+ text-decoration: none;\n+ color: inherit;\n}\n</style>\n",
        "date": "01.10.2019 10:15:23",
        "repo": "alfg/opendrinks",
        "type": "feat",
        "sim_msg": "feat: hotkey to confirm install + show home/support urls",
        "sim_diff": "diff --git a/src/confirm/views/app.vue b/src/confirm/views/app.vue <div class=\"page-confirm frame flex flex-col h-100\" :class=\"{ reinstall }\">\n<div class=\"frame-block\">\n<div class=\"flex\">\n- <div class=\"image flex flex-col self-start mb-2c\">\n+ <div class=\"image\">\n<img src=\"/public/images/icon128.png\">\n- <div class=\"mr-1c\">\n- <tooltip v-for=\"([url, icon, title]) in icons\" :key=\"icon\"\n- :content=\"title\" placement=\"bottom\" align=\"left\">\n- <a target=\"_blank\" :href=\"url\">\n- <icon :name=\"icon\"/>\n- </a>\n- </tooltip>\n- </div>\n</div>\n<div class=\"info\">\n<h1>\n</div>\n<div class=\"ellipsis\" v-text=\"name\"/>\n</h1>\n- <a class=\"url ellipsis\" v-text=\"decodedUrl\"\n- :title=\"info.url\" :href=\"info.url\" @click.prevent />\n+ <div class=\"flex\">\n+ <tooltip :content=\"i18n('editNavCode')\" class=\"abs-center\" placement=\"right\">\n+ <icon name=\"code\"/>\n+ </tooltip>\n+ <span class=\"ellipsis\" v-text=\"info.url ? decodeURIComponent(info.url) : '...'\"/>\n+ </div>\n+ <a v-for=\"([url, icon, title]) in icons\" :key=\"icon\"\n+ class=\"flex\" target=\"_blank\" :href=\"url\">\n+ <tooltip :content=\"title\" class=\"abs-center\" placement=\"right\">\n+ <icon :name=\"icon\"/>\n+ </tooltip>\n+ <span class=\"ellipsis\" v-text=\"decodeURIComponent(url)\"/>\n+ </a>\n<p class=\"descr\" v-text=\"descr\"/>\n<div class=\"lists flex flex-wrap\" :data-collapsed=\"!listsShown\">\n- <div class=\"toggle\" @click=\"listsShown = !listsShown\">\n+ <div class=\"toggle abs-center\" @click=\"listsShown = !listsShown\">\n<tooltip :content=\"i18n('msgShowHide')\" placement=\"bottom\" align=\"left\" v-if=\"lists\">\n<icon name=\"info\"/>\n</tooltip>\n<div class=\"actions flex flex-wrap mr-2c\">\n<button\nid=\"confirm\"\n+ ref=\"confirm\"\nv-text=\"reinstall\n? i18n('buttonConfirmReinstallation')\n: i18n('buttonConfirmInstallation')\"\n+ :data-hotkey=\"confirmHotkey\"\n@click=\"installScript\" :disabled=\"!installable\"/>\n<button v-text=\"i18n('buttonClose')\" @click=\"close\"/>\n<div class=\"flex flex-col my-1\">\n@@ -85,6 +90,7 @@ import {\nsendCmdDirectly, request, isRemote, getFullUrl, makePause,\ngetLocaleString, trueJoin,\n} from '#/common';\n+import { keyboardService } from '#/common/keyboard';\nimport options from '#/common/options';\nimport initCache from '#/common/cache';\nimport storage from '#/common/storage';\n@@ -99,6 +105,7 @@ const KEEP_INFO_DELAY = 5000;\nconst RETRY_DELAY = 3000;\nconst RETRY_COUNT = 2;\nconst MAX_TITLE_NAME_LEN = 100;\n+const CONFIRM_HOTKEY = `${/Mac/.test(navigator.platform) ? 'Cmd' : 'Ctrl'}-Enter`;\nconst cache = initCache({ lifetime: RETRY_DELAY * (RETRY_COUNT + 1) });\n/** @type {chrome.runtime.Port} */\nlet filePort;\n@@ -128,8 +135,8 @@ export default {\ncommands: {\nclose: this.close,\n},\n+ confirmHotkey: CONFIRM_HOTKEY,\ninfo: {},\n- decodedUrl: '...',\ndeps: {}, // combines `this.require` and `this.resources` = all loaded deps\ndescr: '',\nerror: null,\n@@ -167,7 +174,6 @@ export default {\nreturn;\n}\nconst { url } = this.info;\n- this.decodedUrl = decodeURIComponent(url);\n/* sendCmdDirectly makes the page load so fast that ua.isFirefox is still a boolean,\nso we'll detect FF68 that stopped allowing file: scheme in fetch() via a CSS feature */\nfilePortNeeded = url.startsWith('file:') && ua.isFirefox && CSS.supports('counter-set', 'none');\n@@ -187,12 +193,17 @@ export default {\nif (this.installable) {\nthis.heading = this.reinstall ? this.i18n('labelReinstall') : this.i18n('labelInstall');\n}\n+ this.disposeList = [\n+ keyboardService.register(CONFIRM_HOTKEY, () => this.$refs.confirm.click()),\n+ ];\n+ keyboardService.enable();\n},\nbeforeDestroy() {\nif (this.guard) {\nclearInterval(this.guard);\nthis.guard = null;\n}\n+ this.disposeList?.forEach(dispose => dispose());\n},\nmethods: {\nasync loadData(changedOnly) {\n@@ -416,7 +427,7 @@ $infoIconSize: 18px;\nmax-height: 4rem;\noverflow-y: auto;\n}\n- .toggle {\n+ .abs-center {\nposition: absolute;\nmargin-left: calc(-1 * $imgSize / 2 - $infoIconSize / 2 - $imgGapR);\ncursor: pointer;\n@@ -493,6 +504,11 @@ $infoIconSize: 18px;\n&:hover {\nborder-color: #488148;\n}\n+ &::after {\n+ content: \" (\" attr(data-hotkey) \")\";\n+ opacity: .75;\n+ font-weight: normal;\n+ }\n}\n&.reinstall #confirm {\nbackground: #d1e0ea;\n",
        "chatgpt_rag": "style: update font-family and add link to home page logo"
    },
    {
        "msg": "feat(jest_config): add mocks and disable coverage of styles",
        "diff": "diff --git a/jest_config/jest.config.json b/jest_config/jest.config.json \"rootDir\": \"../\",\n\"setupFiles\": [\"<rootDir>/jest_config/setupJest.js\"],\n\"automock\": false,\n- \"moduleNameMapper\": {}\n+ \"moduleNameMapper\": {\n+ \"\\\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$\": \"<rootDir>/jest_config/__mocks__/fileMock.js\",\n+ \"\\\\.(css|less)$\": \"<rootDir>/jest_config/__mocks__/styleMock.js\"\n+ },\n+ \"coveragePathIgnorePatterns\": [\"style.jsx\", \"/styles\"]\n}\n",
        "date": "10.09.2017 00:12:29",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "test(jest): stop the looping of the jest watch",
        "sim_diff": "diff --git a/jest.config.js b/jest.config.js @@ -27,9 +27,9 @@ module.exports = {\n'^.+\\\\.s?css$': '<rootDir>/config/jest/cssTransform.js',\n'^(?!.*\\\\.(js|jsx|css|json)$)': '<rootDir>/config/jest/fileTransform.js',\n},\n- testPathIgnorePatterns: ['/config/', '/coverage/', '/lib/'],\n+ testPathIgnorePatterns: ['/config/', '/lib/'],\ntransformIgnorePatterns: ['/node_modules/(?!(@carbon/charts)).+(.jsx?)'],\n-\n+ watchPathIgnorePatterns: ['/coverage/', '/results/', '/.git/'],\nmoduleFileExtensions: ['js', 'json', 'jsx'],\nsnapshotSerializers: ['enzyme-to-json/serializer'],\n};\n",
        "chatgpt_rag": "test(jest): add module name mapper for file and style mocks in jest config"
    },
    {
        "msg": "feat(ssr): render Helmet on server",
        "diff": "diff --git a/src/server/ssr/index.js b/src/server/ssr/index.js * @desc\n*/\nimport React from 'react'\n+import Helmet from 'react-helmet'\nimport {renderToString} from 'react-dom/server'\nimport {ServerStyleSheet, StyleSheetManager} from 'styled-components'\nimport {configureRootComponent, configureApp} from 'common/app'\n@@ -33,9 +34,7 @@ export default async (req: express$Request, res: express$Response) => {\nconst app = (\n<AsyncComponentProvider asyncContext={asyncContext}>\n- <StyleSheetManager sheet={sheet.instance}>\n- {RootComponent}\n- </StyleSheetManager>\n+ <StyleSheetManager sheet={sheet.instance}>{RootComponent}</StyleSheetManager>\n</AsyncComponentProvider>\n)\n@@ -45,6 +44,7 @@ export default async (req: express$Request, res: express$Response) => {\nasyncBootstrapper(app).then(() => {\nconst renderedApp = renderToString(app)\n+ const helmet = Helmet.renderStatic()\nconst css: string = sheet.getStyleTags()\nconst preloadedState: Object = store.getState()\nconst responseStatusCode = noRequestURLMatch ? 404 : 200\n@@ -55,7 +55,8 @@ export default async (req: express$Request, res: express$Response) => {\nasyncState,\ninitialState: preloadedState,\napp: renderedApp,\n- i18n\n+ i18n,\n+ helmet\n}\nres.status(responseStatusCode).send(HTMLComponent(props))\n",
        "date": "19.02.2018 18:18:55",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "refactor: adjust folder structure",
        "sim_diff": "diff --git a/src/pages/index.js b/src/pages/index.js -import { marshall, unmarshall } from '@/lib/compress-json'\n-import presets from '@/components/presets'\n-import useQueryState from '@/hooks/use-query-state'\n-import GitHubIcon from '@/components/icons/github'\n-import JSONViewer from '@/components/json-viewer'\n-import ThemeIcon from '@/components/icons/theme'\n-import screenshotUrl from '@/lib/screenshot-url'\n-import Container from '@/components/container'\n-import notification from '@/lib/notification'\n-import { useState, useEffect } from 'react'\n-// import Overlay from '@/components/overlay'\n-import clipboard from '@/lib/clipboard'\n-import debounce from '@/lib/debounce'\n-import Main from '@/components/main'\n-import isEmpty from '@/lib/is-empty'\n-import onSave from '@/lib/on-save'\n-import Router from 'next/router'\n-import themeBase from '@/theme'\n-import Cycled from 'cycled'\n-\nimport {\nLink as ExternalLink,\nButton,\n@@ -27,12 +7,31 @@ import {\nuseThemeUI\n} from 'theme-ui'\n+import presets from '@/components/presets'\n+import ThemeIcon from '@/components/icons/theme'\n+import Main from '@/components/main'\nimport {\nLiveProvider,\nLiveEditor,\nLiveError,\nLivePreview\n} from '@/components/live-editor'\n+import presets from '@/components/presets'\n+import JSONViewer from '@/components/json-viewer'\n+import ThemeIcon from '@/components/icons/theme'\n+import GitHubIcon from '@/components/icons/github'\n+import Container from '@/components/container'\n+import Main from '@/components/main'\n+// import Overlay from '@/components/overlay'\n+import useQueryState from '@/hooks/use-query-state'\n+import themeBase from '@/themes/base'\n+import { marshall, unmarshall } from '@/lib/compress-json'\n+import clipboard from '@/lib/clipboard'\n+import debounce from '@/lib/debounce'\n+import isEmpty from '@/lib/is-empty'\n+import notification from '@/lib/notification'\n+import screenshotUrl from '@/lib/screenshot-url'\n+import onSave from '@/lib/on-save'\nimport pkg from '../../package.json'\n",
        "chatgpt_rag": "refactor: adjust rendering logic and add Helmet for server-side rendering"
    },
    {
        "msg": "feat(src/client): add react-a11y, fix export of main configuration scripts(configureRoot, configureA\nadd react-a11y, fix export of main configuration scripts(configureRoot, configureApp)",
        "diff": "diff --git a/src/client/index.jsx b/src/client/index.jsx // Styles\nimport 'semantic-ui-css/semantic.css'\n-import 'styles/global'\n// Fetch and promise polyfill\nimport 'promise-polyfill'\n-import 'whatwg-fetch'\n+import 'isomorphic-fetch'\n// Application\n-import {render} from 'react-dom'\n-import {configureStore, configureRootComponent} from 'common/index.jsx'\n+import React from 'react'\n+import ReactDOM, {render} from 'react-dom'\n+import {configureApp, configureRootComponent} from 'common/app'\nif (process.env.NODE_ENV === 'production') {\nrequire('common/pwa')\n@@ -29,13 +29,21 @@ if (process.env.NODE_ENV === 'production') {\n*/\n/*eslint-enable */\nwindow.Perf = require('react-addons-perf')\n-}\n-const preloadedState = window.__PRELOADED_STATE__ || {}\n-delete window.__PRELOADED_STATE__\n+ // NOTE: a11y doesnt work with SSR and React throws warnings like:\n+ // \"React attempted to reuse markup in a container but the checksum was invalid\"\n+ // a11y adds \"id\" attribute to the root container (#app) of your app and triggers re-rendering\n+ //\n+ /** {@link https://github.com/reactjs/react-a11y } */\n+ // const a11y = require('react-a11y')\n+ // a11y(React, {ReactDOM})\n+}\n-const store = configureStore(preloadedState)\n-const RootComponent = configureRootComponent({store})\n+const initialState = window.__INITIAL_STATE__ || {}\n+// NOTE: V8 doesn't optimize `delete`\n+// delete window.__INITIAL_STATE__\n+const propsForRoot = configureApp({initialState})\n+const RootComponent = configureRootComponent(propsForRoot)\nrender(RootComponent, document.getElementById('app'))\nif (module.hot) {\n",
        "date": "23.08.2017 18:42:17",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "refactor: remove unused Footer import from App.jsx",
        "sim_diff": "diff --git a/app/containers/App/App.jsx b/app/containers/App/App.jsx @@ -3,7 +3,6 @@ import React, { Component } from 'react'\nimport { ROUTES } from '../../core/constants'\nimport Sidebar from './Sidebar'\n-import Footer from './Footer'\nimport ModalRenderer from '../ModalRenderer'\nimport Notifications from '../Notifications'\nimport withThemeData from '../../hocs/withThemeData'\n",
        "chatgpt_rag": "refactor: update imports and configurations in index.jsx for better performance and accessibility"
    },
    {
        "msg": "feat: add nullish coalescing for validUntil and simplify function objects",
        "diff": "diff --git a/frontend/mina-signer/src/MinaSDK.ts b/frontend/mina-signer/src/MinaSDK.ts \"use strict\";\n-\nconst JSOfOCaml_SDK = require(\"./client_sdk.bc.js\");\nconst minaSDK = JSOfOCaml_SDK.minaSDK;\n@@ -108,32 +107,30 @@ class Client {\nconst fee = String(payment.fee);\nconst nonce = String(payment.nonce);\nconst amount = String(payment.amount);\n- const validUntil = String(\n- payment.validUntil ? payment.validUntil : defaultValidUntil\n- );\n+ const validUntil = String(payment.validUntil ?? defaultValidUntil);\nreturn {\nsignature: minaSDK.signPayment(this.network, privateKey, {\ncommon: {\n- fee: fee,\n+ fee,\nfeePayer: payment.from,\n- nonce: nonce,\n- validUntil: validUntil,\n- memo: memo,\n+ nonce,\n+ validUntil,\n+ memo,\n},\npaymentPayload: {\nsource: payment.from,\nreceiver: payment.to,\n- amount: amount,\n+ amount,\n},\n}).signature,\ndata: {\nto: payment.to,\nfrom: payment.from,\n- fee: fee,\n- amount: amount,\n- nonce: nonce,\n- memo: memo,\n- validUntil: validUntil,\n+ fee,\n+ amount,\n+ nonce,\n+ memo,\n+ validUntil,\n},\n};\n}\n@@ -150,24 +147,22 @@ class Client {\nconst fee = String(payload.fee);\nconst amount = String(payload.amount);\nconst nonce = String(payload.nonce);\n- const validUntil = String(\n- payload.validUntil ? payload.validUntil : defaultValidUntil\n- );\n+ const validUntil = String(payload.validUntil ?? defaultValidUntil);\nreturn minaSDK.verifyPaymentSignature(this.network, {\nsender: signedPayment.data.from,\nsignature: signedPayment.signature,\npayment: {\ncommon: {\n- fee: fee,\n+ fee,\nfeePayer: payload.from,\n- nonce: nonce,\n- validUntil: validUntil,\n- memo: memo,\n+ nonce,\n+ validUntil,\n+ memo,\n},\npaymentPayload: {\nsource: payload.from,\nreceiver: payload.to,\n- amount: amount,\n+ amount,\n},\n},\n});\n@@ -192,19 +187,15 @@ class Client {\nconst memo = stakeDelegation.memo ?? \"\";\nconst fee = String(stakeDelegation.fee);\nconst nonce = String(stakeDelegation.nonce);\n- const validUntil = String(\n- stakeDelegation.validUntil\n- ? stakeDelegation.validUntil\n- : defaultValidUntil\n- );\n+ const validUntil = String(stakeDelegation.validUntil ?? defaultValidUntil);\nreturn {\nsignature: minaSDK.signStakeDelegation(this.network, privateKey, {\ncommon: {\n- fee: fee,\n+ fee,\nfeePayer: stakeDelegation.from,\n- nonce: nonce,\n- validUntil: validUntil,\n- memo: memo,\n+ nonce,\n+ validUntil,\n+ memo,\n},\ndelegationPayload: {\nnewDelegate: stakeDelegation.to,\n@@ -214,10 +205,10 @@ class Client {\ndata: {\nto: stakeDelegation.to,\nfrom: stakeDelegation.from,\n- fee: fee,\n- nonce: nonce,\n- memo: memo,\n- validUntil: validUntil,\n+ fee,\n+ nonce,\n+ memo,\n+ validUntil,\n},\n};\n}\n@@ -235,19 +226,17 @@ class Client {\nconst memo = payload.memo ?? \"\";\nconst fee = String(payload.fee);\nconst nonce = String(payload.nonce);\n- const validUntil = String(\n- payload.validUntil ? payload.validUntil : defaultValidUntil\n- );\n+ const validUntil = String(payload.validUntil ?? defaultValidUntil);\nreturn minaSDK.verifyStakeDelegationSignature(this.network, {\nsender: signedStakeDelegation.data.from,\nsignature: signedStakeDelegation.signature,\nstakeDelegation: {\ncommon: {\n- fee: fee,\n+ fee,\nfeePayer: payload.from,\n- nonce: nonce,\n- validUntil: validUntil,\n- memo: memo,\n+ nonce,\n+ validUntil,\n+ memo,\n},\ndelegationPayload: {\nnewDelegate: payload.to,\n@@ -269,9 +258,7 @@ class Client {\nconst fee = String(payload.fee);\nconst amount = String(payload.amount);\nconst nonce = String(payload.nonce);\n- const validUntil = String(\n- payload.validUntil ? payload.validUntil : defaultValidUntil\n- );\n+ const validUntil = String(payload.validUntil ?? defaultValidUntil);\nreturn minaSDK.hashPayment({\nsender: signedPayment.data.from,\nsignature: signedPayment.signature,\n@@ -279,14 +266,14 @@ class Client {\ncommon: {\nfee: fee,\nfeePayer: payload.from,\n- nonce: nonce,\n- validUntil: validUntil,\n- memo: memo,\n+ nonce,\n+ validUntil,\n+ memo,\n},\npaymentPayload: {\nsource: payload.from,\nreceiver: payload.to,\n- amount: amount,\n+ amount,\n},\n},\n});\n@@ -305,19 +292,17 @@ class Client {\nconst memo = payload.memo ?? \"\";\nconst fee = String(payload.fee);\nconst nonce = String(payload.nonce);\n- const validUntil = String(\n- payload.validUntil ? payload.validUntil : defaultValidUntil\n- );\n+ const validUntil = String(payload.validUntil ?? defaultValidUntil);\nreturn minaSDK.hashStakeDelegation({\nsender: signedStakeDelegation.data.from,\nsignature: signedStakeDelegation.signature,\nstakeDelegation: {\ncommon: {\n- fee: fee,\n+ fee,\nfeePayer: payload.from,\n- nonce: nonce,\n- validUntil: validUntil,\n- memo: memo,\n+ nonce,\n+ validUntil,\n+ memo,\n},\ndelegationPayload: {\nnewDelegate: payload.to,\n",
        "date": "24.11.2021 11:59:43",
        "repo": "minaprotocol/mina",
        "type": "feat",
        "sim_msg": "feat: add support for signing typed data via injection",
        "sim_diff": "diff --git a/src/inject.js b/src/inject.js @@ -83,6 +83,14 @@ async function handleRequest (req) {\nconst sig = await eth.getMethod('wallet.signMessage')(req.params[0], req.params[1])\nreturn '0x' + sig\n}\n+\n+ if(req.method === 'eth_signTypedData' ||\n+ req.method === 'eth_signTypedData_v3' ||\n+ req.method === 'eth_signTypedData_v4') {\n+ const sig = await eth.getMethod('wallet.signTypedMessage')(req)\n+ return sig;\n+ }\n+\nif(req.method === 'eth_sendTransaction') {\nconst to = req.params[0].to\nconst value = req.params[0].value\n@@ -99,6 +107,7 @@ async function handleRequest (req) {\nwindow[injectionName] = {\nisLiquality: true,\n+ isMetaMask: true, // OpenSea wants this\nisEIP1193: true,\nnetworkVersion: '${network.networkId}',\nchainId: '0x${network.chainId.toString(16)}',\n@@ -120,7 +129,11 @@ window[injectionName] = {\n}\nconst method = typeof req === 'string' ? req : req.method\nconst params = req.params || _paramsOrCallback || []\n- return handleRequest({ method, params })\n+ return handleRequest({ method, params }).then((result) => ({\n+ id: req && req.id ? req.id : 99999,\n+ jsonrpc: '2.0',\n+ result\n+ }))\n},\nsendAsync: (req, callback) => {\nhandleRequest(req)\n",
        "chatgpt_rag": "refactor: simplify validUntil assignment using nullish coalescing operator"
    },
    {
        "msg": "feat: Esmfy repl.html",
        "diff": "diff --git a/demo/repl.html b/demo/repl.html </td></tr></table>\n</div>\n-<script type=\"text/javascript\" src=\"../src/development_initializer.js\"></script>\n-<script type=\"text/javascript\">\n+<script type=\"module\" src=\"../src/main-browser.js\"></script>\n+<script type=\"module\">\nvar on_error = function(e){\nBiwaScheme.Port.current_error.put_string(e.message);\nthrow(e);\n};\nvar biwascheme = new BiwaScheme.Interpreter(on_error);\n-function bs_eval(){\n+window.bs_eval = function(){\n$(\"#bs-console\").empty();\nvar str = $(\"#bs-input\").val();\n",
        "date": "25.07.2020 15:08:07",
        "repo": "biwascheme/biwascheme",
        "type": "feat",
        "sim_msg": "refactor: cleanup unused imports",
        "sim_diff": "diff --git a/__tests__/demo/demo.js b/__tests__/demo/demo.js @@ -27,15 +27,12 @@ import {\nBulkEdit,\nBasicRef,\nBulkEditWithDetailPanel,\n- ExportData,\n- CustomExport,\nEditableRow,\nEditableCells,\nFrankensteinDemo,\nHidingColumns,\nResizable,\n- PersistentGroupings,\n- PersistentGroupings2\n+ PersistentGroupings\n} from './demo-components';\nimport { I1353, I1941, I122 } from './demo-components/RemoteData';\n",
        "chatgpt_rag": "refactor: update script imports in demo repl page"
    },
    {
        "msg": "feat(.eslintrc): add react-a11y plugin for eslint\nadd react-a11y plugin for eslint",
        "diff": "diff --git a/.eslintrc.json b/.eslintrc.json {\n- \"extends\": [\"plugin:react/recommended\", \"standard\"],\n+ \"extends\": [\n+ \"plugin:react/recommended\",\n+ \"plugin:jsx-a11y/recommended\",\n+ \"standard\"\n+ ],\n\"parser\": \"babel-eslint\",\n- \"plugins\": [\"react\", \"babel\"],\n+ \"plugins\": [\"react\", \"babel\", \"jsx-a11y\"],\n\"parserOptions\": {\n\"ecmaFeatures\": {\n\"jsx\": true,\n\"node\": true\n},\n\"rules\": {\n- \"no-unused-vars\": 1,\n+ \"no-unused-vars\": 0,\n\"no-tabs\": 0,\n\"indent\": [2, \"tab\"]\n},\n",
        "date": "14.08.2017 16:59:55",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "chore: fix eslint config error",
        "sim_diff": "diff --git a/.eslintrc.json b/.eslintrc.json \"node\": true,\n\"es6\": true\n},\n- \"extends\": [\n- \"eslint:recommended\",\n- \"plugin:react/recommended\"\n- ],\n+ \"extends\": [\"eslint:recommended\", \"plugin:react/recommended\"],\n\"parserOptions\": {\n\"sourceType\": \"module\",\n\"ecmaVersion\": 2018\n},\n\"overrides\": [\n{\n- \"files\": [\n- \"**/*.test?(.*).js\"\n- ],\n+ \"files\": [\"**/*.test?(.*).js\"],\n\"env\": {\n- \"jest\": true,\n- \"jest/globals\": true\n+ \"jest\": true\n},\n\"globals\": {\n\"page\": true,\n\"context\": true,\n\"jestPuppeteer\": true\n},\n- \"plugins\": [\n- \"jest\"\n- ]\n+ \"plugins\": [\"jest\"]\n}\n]\n}\n",
        "chatgpt_rag": "chore: update eslint config with additional plugins and rule changes"
    },
    {
        "msg": "feat(server/ssr): add async-component, async-bootstrapper",
        "diff": "diff --git a/src/server/ssr/index.js b/src/server/ssr/index.js */\nimport React from 'react'\nimport chalk from 'chalk'\n+import _ from 'lodash'\nimport {renderToNodeStream} from 'react-dom/server'\nimport {ServerStyleSheet, StyleSheetManager} from 'styled-components'\nimport {configureRootComponent, configureApp} from 'common/app'\n+import asyncBootstrapper from 'react-async-bootstrapper'\n+import {AsyncComponentProvider, createAsyncContext} from 'react-async-component'\nimport HtmlComponent from './HtmlComponent'\n// $FlowFixMe\nimport assets from 'webpack-assets'\n@@ -36,45 +39,48 @@ export default async (req: express$Request, res: express$Response) => {\ni18n,\nSSR: {location, context}\n})\n- const stream = renderToNodeStream(\n+ const asyncContext = createAsyncContext()\n+\n+ const app = (\n+ <AsyncComponentProvider asyncContext={asyncContext}>\n<StyleSheetManager sheet={sheet.instance}>\n{RootComponent}\n</StyleSheetManager>\n+ </AsyncComponentProvider>\n)\n+ // console.log(_.find(routes, a => matchPath(req.url, a)))\n+ const noRequestURLMatch = !!_.find(routes, a => matchPath(req.url, a))\n+\n+ asyncBootstrapper(app).then(() => {\n+ const appStream = renderToNodeStream(app)\nconst css: string = sheet.getStyleTags()\nconst preloadedState: Object = store.getState()\n+\n+ const asyncState = asyncContext.getState()\nconst props = {\ncss,\nassets,\nfaviconsAssets,\n+ asyncState,\ninitialState: preloadedState,\ni18n\n}\n- // FIXME: how to replace `let` and `for`?\n- let lazyRoutes = routes.filter(a => a.lazy)\n- for (var i = 0; i < lazyRoutes.length; i++) {\n- let route = routes[i]\n- if (matchPath(req.url, route)) {\n- route.component = await routes[i].component().default\n- route.lazy = false\n- break\n- }\n- }\n-\nconst {beforeAppTag, afterAppTag} = HtmlComponent(props)\n+ const responseStatusCode = noRequestURLMatch ? 404 : 200\n- res.writeHead(200, {\n+ res.writeHead(responseStatusCode, {\n'Content-Type': 'text/html'\n})\nres.write(beforeAppTag)\nres.write(`<div id=\"app\">`)\n- stream.pipe(res, {end: false})\n+ appStream.pipe(res, {end: false})\n- stream.on('end', () => {\n+ appStream.on('end', () => {\nres.write('</div>')\nres.write(afterAppTag)\nres.end()\n})\n+ })\n}\n",
        "date": "03.11.2017 16:50:33",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "refactor: adjust folder structure",
        "sim_diff": "diff --git a/src/pages/index.js b/src/pages/index.js -import { marshall, unmarshall } from '@/lib/compress-json'\n-import presets from '@/components/presets'\n-import useQueryState from '@/hooks/use-query-state'\n-import GitHubIcon from '@/components/icons/github'\n-import JSONViewer from '@/components/json-viewer'\n-import ThemeIcon from '@/components/icons/theme'\n-import screenshotUrl from '@/lib/screenshot-url'\n-import Container from '@/components/container'\n-import notification from '@/lib/notification'\n-import { useState, useEffect } from 'react'\n-// import Overlay from '@/components/overlay'\n-import clipboard from '@/lib/clipboard'\n-import debounce from '@/lib/debounce'\n-import Main from '@/components/main'\n-import isEmpty from '@/lib/is-empty'\n-import onSave from '@/lib/on-save'\n-import Router from 'next/router'\n-import themeBase from '@/theme'\n-import Cycled from 'cycled'\n-\nimport {\nLink as ExternalLink,\nButton,\n@@ -27,12 +7,31 @@ import {\nuseThemeUI\n} from 'theme-ui'\n+import presets from '@/components/presets'\n+import ThemeIcon from '@/components/icons/theme'\n+import Main from '@/components/main'\nimport {\nLiveProvider,\nLiveEditor,\nLiveError,\nLivePreview\n} from '@/components/live-editor'\n+import presets from '@/components/presets'\n+import JSONViewer from '@/components/json-viewer'\n+import ThemeIcon from '@/components/icons/theme'\n+import GitHubIcon from '@/components/icons/github'\n+import Container from '@/components/container'\n+import Main from '@/components/main'\n+// import Overlay from '@/components/overlay'\n+import useQueryState from '@/hooks/use-query-state'\n+import themeBase from '@/themes/base'\n+import { marshall, unmarshall } from '@/lib/compress-json'\n+import clipboard from '@/lib/clipboard'\n+import debounce from '@/lib/debounce'\n+import isEmpty from '@/lib/is-empty'\n+import notification from '@/lib/notification'\n+import screenshotUrl from '@/lib/screenshot-url'\n+import onSave from '@/lib/on-save'\nimport pkg from '../../package.json'\n",
        "chatgpt_rag": "refactor: adjust async component loading and rendering logic"
    },
    {
        "msg": "feat(api/LocalStorateCookiesSvc): remove store2, add comments\nfeat(api/LocalStorateCookiesSvc): remove store2 from core functions and\ncomment import of store2, add comments",
        "diff": "diff --git a/src/common/api/LocalStorageCookiesSvc/index.js b/src/common/api/LocalStorageCookiesSvc/index.js // @flow\n-import * as store from 'store2'\nimport Cookies from 'js-cookie'\n+// By default, we don't use localStorage, but store2 is already installed\n+// But we use redux-persist (syncs localStorage with redux state)\n+// import store from 'store2'\nimport decodeJWT from 'jwt-decode'\nexport const JWT_TOKEN = 'JWT_TOKEN'\nexport function getLocalToken (): string | null {\n- return store.get(JWT_TOKEN) || Cookies.get(JWT_TOKEN)\n+ return Cookies.get(JWT_TOKEN)\n}\nexport function resetLocalToken () {\n- store.remove(JWT_TOKEN)\nCookies.remove(JWT_TOKEN)\n}\nexport function setLocalToken (token: string) {\n- store.set(JWT_TOKEN, token)\nCookies.set(JWT_TOKEN, token, {expires: 365})\n}\n",
        "date": "18.10.2017 23:48:25",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "refactor: update cartStore method call",
        "sim_diff": "diff --git a/src/pages/_app.js b/src/pages/_app.js @@ -20,7 +20,7 @@ export default class App extends NextApp {\ncomponentDidMount() {\n// Fetch and update auth token in auth store\nrootMobXStores.authStore.setTokenFromLocalStorage();\n- rootMobXStores.cartStore.setCartIdFromLocalStorage();\n+ rootMobXStores.cartStore.setAnonymousCartCredentialsFromLocalStorage();\nrootMobXStores.keycloakAuthStore.setTokenFromLocalStorage();\n}\n",
        "chatgpt_rag": "refactor: remove store2 usage and update cookie handling in LocalStorageCookiesSvc"
    },
    {
        "msg": "feat: support link component set href attribute",
        "diff": "diff --git a/src/components/link/Link.vue b/src/components/link/Link.vue @@ -6,6 +6,7 @@ interface LinkProps {\ntype?: LinkType\nunderline?: boolean\ndisabled?: boolean\n+ href?: string\n}\nconst props = withDefaults(defineProps<LinkProps>(), {\n@@ -27,7 +28,11 @@ const classes = useClasses(props)\n</script>\n<template>\n- <a class=\"el-link\" :class=\"classes\">\n+ <a\n+ class=\"el-link\"\n+ :class=\"classes\"\n+ :href=\"disabled ? null : href\"\n+ >\n<span v-if=\"$slots.default\" class=\"el-link--inner\">\n<slot />\n</span>\n",
        "date": "19.06.2022 22:37:17",
        "repo": "hug-sun/element3",
        "type": "feat",
        "sim_msg": "chore(compat): do not pass extra props in link if there is no nuxt",
        "sim_diff": "diff --git a/src/components/link/link.js b/src/components/link/link.js @@ -105,7 +105,10 @@ export const BLink = /*#__PURE__*/ Vue.extend({\nreturn this.isRouterLink\n? {\n...pluckProps(\n- omit({ ...routerLinkProps, ...nuxtLinkProps }, ['event', 'prefetch', 'routerTag']),\n+ omit(\n+ { ...routerLinkProps, ...(this.computedTag === 'nuxt-link' ? nuxtLinkProps : {}) },\n+ ['event', 'prefetch', 'routerTag']\n+ ),\nthis\n),\n// Only add these props, when actually defined\n",
        "chatgpt_rag": "feat(link): add href prop to Link component for custom link functionality"
    },
    {
        "msg": "feat(webpack_config/client/webpack.base.js): add more style extension to resolve",
        "diff": "diff --git a/webpack_config/client/webpack.base.js b/webpack_config/client/webpack.base.js @@ -37,7 +37,7 @@ const baseBuild = {\nresolve: {\nalias: isomorphicWebpackConfig.resolve.alias,\nmodules: isomorphicWebpackConfig.resolve.modules,\n- extensions: isomorphicWebpackConfig.resolve.extensions.concat(['.css', '.scss'])\n+ extensions: isomorphicWebpackConfig.resolve.extensions.concat(['.css', '.scss', '.sass'])\n},\nmodule: {\nrules: isomorphicWebpackConfig.module.rules.concat([\n",
        "date": "10.08.2017 06:17:36",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "chore: CopyWebpackPlugin error on windows due to path separators",
        "sim_diff": "diff --git a/webpack.config.js b/webpack.config.js @@ -116,7 +116,7 @@ module.exports = function (env) {\nglobOptions: { ignore: '**/*.js' },\n},\n{\n- from: path.join(__dirname, `${CODE_SOURCE_DIR}/extension/legacy/**/*.css`),\n+ from: path.join(__dirname, `${CODE_SOURCE_DIR}/extension/legacy/**/*.css`).replace(/\\\\/g, '/'),\nto: path.join(__dirname, `${BUILD_PATH}/web-accessibles`),\ncontext: 'src/extension',\n},\n@@ -124,7 +124,7 @@ module.exports = function (env) {\nfrom: path.join(\n__dirname,\n`${CODE_SOURCE_DIR}/extension/legacy/features/l10n/locales/*.js`\n- ),\n+ ).replace(/\\\\/g, '/'),\nto: path.join(__dirname, `${BUILD_PATH}/web-accessibles`),\ncontext: 'src/extension',\n},\n",
        "chatgpt_rag": "chore: Add '.sass' extension to resolve.extensions in webpack base config"
    },
    {
        "msg": "feat: added new empty favorites test",
        "diff": "diff --git a/tests/unit/views/Favorites.spec.js b/tests/unit/views/Favorites.spec.js @@ -7,7 +7,7 @@ import Favorites from '@/views/Favorites.vue';\nconst localVue = createLocalVue();\nlocalVue.use(BootstrapVue);\n-describe('Favorites', () => {\n+describe('Favorites (Populated)', () => {\nlet wrapper;\nbeforeEach(() => {\n@@ -34,3 +34,23 @@ describe('Favorites', () => {\nexpect(favs.length === 1).toBe(true);\n});\n});\n+\n+describe('Favorites (Empty)', () => {\n+ let wrapper;\n+\n+ beforeEach(() => {\n+ wrapper = mount(Favorites, {\n+ localVue,\n+ router,\n+ });\n+ });\n+\n+ test('show correct empty state', () => {\n+ localStorage.setItem('favorites', JSON.stringify([]));\n+ wrapper = mount(Favorites, {\n+ localVue,\n+ router,\n+ });\n+ expect(wrapper.find('.alert-info').html()).toContain(\"You don't have any favorite drinks\");\n+ });\n+});\n",
        "date": "29.10.2019 20:35:06",
        "repo": "alfg/opendrinks",
        "type": "feat",
        "sim_msg": "chore(compat): disable subset of config specs due to localVue\nlocalVue implementation provided by vue-test-utils-compat is\nlimited and does not allow us to cover all use cases",
        "sim_diff": "diff --git a/src/utils/config.spec.js b/src/utils/config.spec.js import { createLocalVue } from '@vue/test-utils'\n+import { isVue3 } from '../../src/vue'\nimport { BootstrapVue } from '../../src'\nimport { AlertPlugin } from '../../src/components/alert'\nimport { BVConfigPlugin } from '../../src/bv-config'\n@@ -53,6 +54,8 @@ describe('utils/config', () => {\nexpect(getConfig()).toEqual({})\n})\n+ if (!isVue3) {\n+ // We do not have complete localVue support, so resetting config does not work in proper way\nit('config via Vue.use(BootstrapVue) works', async () => {\nconst localVue = createLocalVue()\nconst config = {\n@@ -100,6 +103,7 @@ describe('utils/config', () => {\nresetConfig()\nexpect(getConfig()).toEqual({})\n})\n+ }\nit('getConfigValue() works', async () => {\nconst config = {\n",
        "chatgpt_rag": "chore(tests): update Favorites.spec.js to include tests for empty state of Favorites component"
    },
    {
        "msg": "feat: normalize network input to allow mixed-case input",
        "diff": "diff --git a/frontend/mina-signer/src/MinaSigner.ts b/frontend/mina-signer/src/MinaSigner.ts @@ -19,10 +19,11 @@ class Client {\nprivate network: network;\nconstructor(options: { network: network }) {\n- if (options.network !== \"mainnet\" && options.network !== \"testnet\") {\n+ const specifiedNetwork = options.network.toLowerCase();\n+ if (specifiedNetwork !== \"mainnet\" && specifiedNetwork !== \"testnet\") {\nthrow \"Invalid Specified Network\";\n}\n- this.network = options.network;\n+ this.network = specifiedNetwork;\n}\n/**\n",
        "date": "24.11.2021 12:29:17",
        "repo": "minaprotocol/mina",
        "type": "feat",
        "sim_msg": "fix(node/http): `_createUrlStrFromOptions` optimizations",
        "sim_diff": "diff --git a/node/http.ts b/node/http.ts @@ -163,23 +163,22 @@ class ClientRequest extends NodeWritable {\nreturn new Socket({});\n}\n- // deno-lint-ignore no-explicit-any\n- _createUrlStrFromOptions(opts: any) {\n+ _createUrlStrFromOptions(opts: RequestOptions): string {\nif (opts.href) {\nreturn opts.href;\n- } else {\n- const {\n- auth,\n- protocol,\n- host,\n- hostname,\n- path,\n- port,\n- } = opts;\n- return `${protocol ?? this.defaultProtocol}//${auth ? `${auth}@` : \"\"}${\n- host ?? hostname\n- }${port ? `:${port}` : \"\"}${path || \"\"}`;\n}\n+ const protocol = opts.protocol ?? this.defaultProtocol;\n+ const auth = opts.auth;\n+ const host = opts.host ?? opts.hostname ?? \"localhost\";\n+ const defaultPort = opts.agent?.defaultPort;\n+ const port = opts.port ?? defaultPort ?? 80;\n+ let path = opts.path ?? \"/\";\n+ if (!path.startsWith(\"/\")) {\n+ path = \"/\" + path;\n+ }\n+ return `${protocol}//${auth ? `${auth}@` : \"\"}${host}${\n+ port === 80 ? \"\" : `:${port}`\n+ }${path}`;\n}\n}\n",
        "chatgpt_rag": "refactor(frontend/mina-signer): store network as lowercase specifiedNetwork"
    },
    {
        "msg": "feat: add font weight medium and semibold;\nrefactor: update colors;\nfix: change null to unset to properly generate CSS Variables;",
        "diff": "diff --git a/scss/_variables.scss b/scss/_variables.scss @@ -67,7 +67,7 @@ $primary-50: #988fed !default;\n$primary-25: #ccc7f6 !default;\n$secondary-dark: #212233 !default;\n-$secondary: #3c4b64 !default;\n+$secondary: #9da5b1 !default;\n$secondary-50: #9da5b1 !default;\n$secondary-25: #ced2d8 !default;\n@@ -115,9 +115,9 @@ $theme-colors: (\n// scss-docs-end theme-colors-map\n// Text colors\n-$high-emphasis-dark: rgba($black, .87) !default;\n-$medium-emphasis-dark: rgba($black, .6) !default;\n-$disabled-dark: rgba($black, .38) !default;\n+$high-emphasis-dark: rgba(shift-color($gray-base, +26), .87) !default;\n+$medium-emphasis-dark: rgba(shift-color($gray-base, +26), .6) !default;\n+$disabled-dark: rgba(shift-color($gray-base, +26), .38) !default;\n$high-emphasis-light: rgba($white, .87) !default;\n$medium-emphasis-light: rgba($white, .6) !default;\n@@ -399,7 +399,7 @@ $border-widths: (\n5: 5px\n) !default;\n-$border-color: $gray-300 !default;\n+$border-color: $gray-200 !default;\n$border-radius: .25rem !default;\n$border-radius-sm: .2rem !default;\n@@ -454,6 +454,8 @@ $font-size-lg: $font-size-base * 1.25 !default;\n$font-weight-lighter: lighter !default;\n$font-weight-light: 300 !default;\n$font-weight-normal: 400 !default;\n+$font-weight-medium: 500 !default;\n+$font-weight-semibold: 600 !default;\n$font-weight-bold: 700 !default;\n$font-weight-bolder: bolder !default;\n@@ -486,7 +488,7 @@ $headings-font-family: null !default;\n$headings-font-style: null !default;\n$headings-font-weight: 500 !default;\n$headings-line-height: 1.2 !default;\n-$headings-color: null !default;\n+$headings-color: unset !default;\n// scss-docs-start display-headings\n$display-font-sizes: (\n@@ -750,7 +752,7 @@ $form-check-input-width: 1em !default;\n$form-check-min-height: $font-size-base * $line-height-base !default;\n$form-check-padding-start: $form-check-input-width + .5em !default;\n$form-check-margin-bottom: .125rem !default;\n-$form-check-label-color: null !default;\n+$form-check-label-color: unset !default;\n$form-check-label-cursor: null !default;\n$form-check-transition: background-color .15s ease-in-out, background-position .15s ease-in-out, border-color .15s ease-in-out, box-shadow .15s ease-in-out !default;\n@@ -1074,9 +1076,9 @@ $card-inner-border-radius: subtract($card-border-radius, $card-border-w\n$card-cap-padding-y: $card-spacer-y / 2 !default;\n$card-cap-padding-x: $card-spacer-x !default;\n$card-cap-bg: rgba($black, .03) !default;\n-$card-cap-color: null !default;\n+$card-cap-color: unset !default;\n$card-height: null !default;\n-$card-color: null !default;\n+$card-color: unset !default;\n$card-bg: $white !default;\n$card-img-overlay-padding: $spacer !default;\n@@ -1179,7 +1181,7 @@ $toast-max-width: 350px !default;\n$toast-padding-x: .75rem !default;\n$toast-padding-y: .5rem !default;\n$toast-font-size: .875rem !default;\n-$toast-color: null !default;\n+$toast-color: unset !default;\n$toast-background-color: rgba($white, .85) !default;\n$toast-border-width: 1px !default;\n$toast-border-color: rgba(0, 0, 0, .1) !default;\n@@ -1217,7 +1219,7 @@ $modal-dialog-margin-y-sm-up: 1.75rem !default;\n$modal-title-line-height: $line-height-base !default;\n-$modal-content-color: null !default;\n+$modal-content-color: unset !default;\n$modal-content-bg: $white !default;\n$modal-content-border-color: rgba($black, .2) !default;\n$modal-content-border-width: $border-width !default;\n@@ -1308,7 +1310,7 @@ $progress-bar-transition: width .6s ease !default;\n// List group\n// scss-docs-start list-group-variables\n-$list-group-color: null !default;\n+$list-group-color: unset !default;\n$list-group-bg: $white !default;\n$list-group-border-color: rgba($black, .125) !default;\n$list-group-border-width: $border-width !default;\n@@ -1430,7 +1432,7 @@ $breadcrumb-padding-y: 0 !default;\n$breadcrumb-padding-x: 0 !default;\n$breadcrumb-item-padding-x: .5rem !default;\n$breadcrumb-margin-bottom: 1rem !default;\n-$breadcrumb-bg: null !default;\n+$breadcrumb-bg: unset !default;\n$breadcrumb-divider-color: $gray-600 !default;\n$breadcrumb-active-color: $gray-600 !default;\n$breadcrumb-divider: quote(\"/\") !default;\n@@ -1605,4 +1607,4 @@ $kbd-font-size: $code-font-size !default;\n$kbd-color: $high-emphasis-light !default;\n$kbd-bg: $gray-900 !default;\n-$pre-color: null !default;\n+$pre-color: unset !default;\n",
        "date": "04.01.2021 15:10:43",
        "repo": "coreui/coreui",
        "type": "feat",
        "sim_msg": "fix(style): inconsistent background colors in code sections",
        "sim_diff": "diff --git a/src/style/_variables.scss b/src/style/_variables.scss @@ -13,6 +13,7 @@ $gray-800: lighten($black, 25%) !default; // #404040\n$gray-900: lighten($black, 18.75%) !default; // #303030\n$cod-gray: #1b1b1b !default;\n+$agate-gray: #333333 !default;\n$bright-gray: #3b4151 !default;\n$mako-gray: #41444e !default;\n$waterloo-gray: #7d8492 !default;\n@@ -144,7 +145,7 @@ $response-col-status-undocumented-font-color: $gray-300 !default;\n$response-col-links-font-color: $gray-300 !default;\n-$opblock-body-background-color: $mako-gray !default;\n+$opblock-body-background-color: $agate-gray !default;\n$opblock-body-font-color: $white !default;\n$scheme-container-background-color: $white !default;\n",
        "chatgpt_rag": "style: update secondary color and font weights in variables"
    },
    {
        "msg": "feat(popover): events emission on  by Popover component",
        "diff": "diff --git a/packages/kiwi-core/src/Popover/index.js b/packages/kiwi-core/src/Popover/index.js @@ -52,12 +52,15 @@ const Popover = {\nmethods: {\nclosePopover () {\nthis._isOpen = false\n+ this.$emit('close')\n},\nopenPopover () {\nthis._isOpen = true\n+ this.$emit('open')\n},\ntoggleOpen () {\nthis._isOpen = !this._isOpen\n+ this.$emit('toggle', this._isOpen)\n},\n/**\n* Sets the trigger node value to reactive context\n",
        "date": "09.02.2020 16:11:49",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "feat",
        "sim_msg": "fix(ui5-popover): allow opening if opener is not fully visible",
        "sim_diff": "diff --git a/packages/main/src/Popover.js b/packages/main/src/Popover.js @@ -422,10 +422,10 @@ class Popover extends UI5Element {\nconst threshold = 32;\nconst limits = {\n- \"Right\": openerRect.top,\n- \"Left\": openerRect.top,\n+ \"Right\": openerRect.right,\n+ \"Left\": openerRect.left,\n\"Top\": openerRect.top,\n- \"Bottom\": openerRect.top,\n+ \"Bottom\": openerRect.bottom,\n};\nconst closedPopupParent = getClosedPopupParent(this._opener);\n",
        "chatgpt_rag": "feat(kiwi-core): add event emitters for opening, closing, and toggling Popover\n- Added event emitter for 'close' when closing Popover\n- Added event emitter for 'open' when opening Popover\n- Added event emitter for 'toggle' with the current state when toggling Popover"
    },
    {
        "msg": "feat(Input): add `autoCapitalize` to html input props",
        "diff": "diff --git a/src/elements/Input/Input.js b/src/elements/Input/Input.js @@ -22,7 +22,7 @@ export const htmlInputPropNames = [\n'selected', 'defaultValue', 'defaultChecked',\n// LIMITED HTML PROPS\n- 'autoComplete', 'autoFocus', 'checked', 'form', 'max', 'maxLength', 'min',\n+ 'autoCapitalize', 'autoComplete', 'autoFocus', 'checked', 'form', 'max', 'maxLength', 'min',\n'name', 'pattern', 'placeholder', 'readOnly', 'required', 'step', 'type', 'value',\n// Heads Up!\n",
        "date": "13.02.2017 19:27:33",
        "repo": "semantic-org/semantic-ui-react",
        "type": "feat",
        "sim_msg": "feat(form/input): add Input component ref as prop",
        "sim_diff": "diff --git a/components/form/input/src/Input/Component/index.js b/components/form/input/src/Input/Component/index.js @@ -24,6 +24,7 @@ class Input extends Component {\nname,\nonChange,\nplaceholder,\n+ reference,\nsize,\ntype,\nvalue\n@@ -37,6 +38,7 @@ class Input extends Component {\nname={name}\nonChange={ev => this.changeHandler(ev, onChange)}\nplaceholder={placeholder}\n+ ref={reference}\ntype={type}\nvalue={value}\n/>\n@@ -60,7 +62,9 @@ Input.propTypes = {\n/* text, password, date or number */\ntype: PropTypes.string,\n/* value of the control */\n- value: PropTypes.string\n+ value: PropTypes.string,\n+ /* react ref to access DOM node */\n+ reference: PropTypes.func\n}\nInput.defaultProps = {\n",
        "chatgpt_rag": "fix(elements/Input): add autoCapitalize prop to htmlInputPropNames"
    },
    {
        "msg": "feat(styles): add more comments in /utils.jsx",
        "diff": "diff --git a/src/common/styles/utils.jsx b/src/common/styles/utils.jsx @@ -6,6 +6,9 @@ const pxToEm = px => {\n}\nconst iWantToUseEm = true\n+// NOTE: This grid don't match SUI's grid.\n+// NOTE: RSUI has <Responsive> element!\n+// You might don't need media template function for styled-components\nconst sizes = _.mapValues(\n{\nxs: 0, // Extra small screen / phone\n@@ -15,13 +18,13 @@ const sizes = _.mapValues(\nxl: 1200 // Extra large screen / wide desktop\n},\n(value, key) => {\n- // NOTE: Please, read more about `em`, before switching to it\n+ // NOTE: Please, read more about `em` before switching\n// https://stackoverflow.com/questions/22228568/switching-to-em-based-media-queries\nreturn iWantToUseEm ? pxToEm(value) : value + 'px'\n}\n)\n-// FIXME: @Metnew: dirty-hardcode version of media template!\n+// FIXME: @Metnew: this block may be rewritten more elegant (like the code below, from off docs)\nexport const media = {\nxs: (...args) => css`\n@media only screen and (max-width: ${sizes.sm}) {\n@@ -66,6 +69,7 @@ export const media = {\n}\n// NOTE: from official docs, but it looks like a black-voodoo-magic\n+// ####\n// // iterate through the sizes and create a media template\n// export const media = Object.keys(sizes).reduce((accumulator, label, i) => {\n// console.log(accumulator, label)\n",
        "date": "30.09.2017 14:25:05",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "feat: add breakpoints for featured media",
        "sim_diff": "diff --git a/src/components/MediaGallery/MediaGallery.js b/src/components/MediaGallery/MediaGallery.js @@ -6,15 +6,35 @@ import { action, computed, observable } from \"mobx\";\nimport { inject, observer } from \"mobx-react\";\nimport MediaGalleryItem from \"components/MediaGalleryItem\";\n-const styles = () => ({\n+const styles = (theme) => ({\nroot: {\nwidth: \"100%\"\n},\n- featuredImage: {\n- objectFit: \"cover\",\n- width: \"100%\",\n+ featured: {\n+ display: \"flex\",\n+ justifyContent: \"center\",\n+ height: \"500px\",\n+ maxHeight: \"500px\",\n+ overflow: \"hidden\",\n+ backgroundColor: theme.palette.common.white,\n+ marginBottom: theme.spacing.unit,\n+ [theme.breakpoints.up(\"xs\")]: {\n+ maxHeight: \"300px\"\n+ },\n+ [theme.breakpoints.up(\"sm\")]: {\n+ maxHeight: \"300px\"\n+ },\n+ [theme.breakpoints.up(\"md\")]: {\n+ maxHeight: \"500px\"\n+ },\n+ [theme.breakpoints.up(\"lg\")]: {\nmaxHeight: \"500px\"\n}\n+ },\n+ featuredImage: {\n+ flex: 0,\n+ height: \"100%\"\n+ }\n});\n/**\n@@ -104,11 +124,15 @@ class MediaGallery extends Component {\n{this.renderFeaturedImage()}\n</div>\n- <Grid container spacing={theme.spacing.unit * 2}>\n+ <Grid container spacing={theme.spacing.unit}>\n{mediaItems.map((media, index) => (\n- <Grid item xs={3} sm={2}>\n- <MediaGalleryItem\n+ <Grid\n+ item\nkey={index}\n+ xs={3}\n+ sm={2}\n+ >\n+ <MediaGalleryItem\nmedia={media}\nonClick={this.handleMediaItemClick}\n/>\n",
        "chatgpt_rag": "refactor: improve comments and code readability in utils file"
    },
    {
        "msg": "feat: Clean output prior to production build",
        "diff": "diff --git a/src/build.js b/src/build.js +import { promises as fs } from 'fs';\nimport * as kl from 'kolorist';\nimport { bundleProd } from './bundler.js';\nimport { bundleStats } from './lib/output-utils.js';\n@@ -11,6 +12,8 @@ import { setCwd } from './plugins/npm-plugin/registry.js';\nexport default async function build(options = {}) {\noptions.out = options.out || 'dist';\n+ await fs.rmdir(options.out, { recursive: true });\n+\n// @todo remove this hack once registry.js is instantiable\nsetCwd(options.cwd);\n",
        "date": "03.12.2020 19:06:51",
        "repo": "preactjs/wmr",
        "type": "feat",
        "sim_msg": "refactor: pass in instructions to logs to use",
        "sim_diff": "diff --git a/packages/build/src/core/main.js b/packages/build/src/core/main.js @@ -42,7 +42,7 @@ const build = async function(options = {}) {\ndoDryRun({ buildInstructions, configPath, options })\n- logLifeCycleStart()\n+ logLifeCycleStart(buildInstructions)\ntry {\nconst manifest = await runInstructions(buildInstructions, {\n",
        "chatgpt_rag": "feat: add functionality to remove output directory before building"
    },
    {
        "msg": "feat: expose $el while evaluating data expression",
        "diff": "diff --git a/src/component.js b/src/component.js @@ -17,7 +17,7 @@ export default class Component {\nconst dataExpression = dataAttr === '' ? '{}' : dataAttr\nconst initExpression = this.$el.getAttribute('x-init')\n- this.unobservedData = seedDataForCloning ? seedDataForCloning : saferEval(dataExpression, {})\n+ this.unobservedData = seedDataForCloning ? seedDataForCloning : saferEval(dataExpression, { $el: this.$el })\n/* IE11-ONLY:START */\n// For IE11, add our magic properties to the original data for access.\n",
        "date": "12.05.2020 09:11:16",
        "repo": "alpinejs/alpine",
        "type": "feat",
        "sim_msg": "refactor: remove useless if\nremove this.owner check since it has already checked before function call.",
        "sim_diff": "diff --git a/src/view/component.js b/src/view/component.js @@ -635,8 +635,6 @@ Component.prototype._update = function (changes) {\nComponent.prototype._updateBindxOwner = function (dataChanges) {\nvar me = this;\n-\n- if (this.owner) {\neach(dataChanges, function (change) {\neach(me.binds, function (bindItem) {\nvar changeExpr = change.expr;\n@@ -664,7 +662,6 @@ Component.prototype._updateBindxOwner = function (dataChanges) {\n}\n});\n});\n- }\n};\n/**\n",
        "chatgpt_rag": "refactor: add $el property to saferEval data object\nAdd $el property to the data object passed to saferEval function to ensure access to the component's element."
    },
    {
        "msg": "feat(Modal): pass event object to toggle prop",
        "diff": "diff --git a/src/Modal.js b/src/Modal.js @@ -163,13 +163,13 @@ class Modal extends React.Component {\nconst container = this._dialog;\nif (e.target && !container.contains(e.target) && this.props.toggle) {\n- this.props.toggle();\n+ this.props.toggle(e);\n}\n}\nhandleEscape(e) {\nif (this.props.isOpen && this.props.keyboard && e.keyCode === 27 && this.props.toggle) {\n- this.props.toggle();\n+ this.props.toggle(e);\n}\n}\n",
        "date": "16.03.2018 15:03:47",
        "repo": "reactstrap/reactstrap",
        "type": "feat",
        "sim_msg": "feat: handle modal esc key",
        "sim_diff": "diff --git a/src/components/ui/modal.js b/src/components/ui/modal.js +import {Component} from 'react'\nimport {connect} from 'zefir/utils'\n-const Modal = ({\n+class Modal extends Component {\n+ componentWillMount (props) {\n+ window.addEventListener('keydown', this.props.handleEscKey)\n+ }\n+\n+ componentWillUnmount (props) {\n+ window.removeEventListener('keydown', this.props.handleEscKey)\n+ }\n+\n+ render () {\n+ const {\ntitle, subtitle, children, name, ui, toggle, full, size, noPadding, visible\n-}) => (\n+ } = this.props\n+\n+ return ui.modal === name || visible ? (\n<div className={`\nModal ${ui.modal === name || visible ? 'is-visible' : ''}\n${full ? 'Modal--full' : ''}\n@@ -143,11 +156,14 @@ const Modal = ({\npadding-bottom: 90px;\n}\n+ .Modal--full .Modal__inner {\n+ height: 100%;\n+ }\n+\n.Modal__inner {\nborder-radius: 8px;\noverflow: hidden;\nflex: 1;\n- height: 100%;\nmax-width: 770px;\nmargin-left: 30px;\nmargin-right: 30px;\n@@ -183,10 +199,13 @@ const Modal = ({\n}\n`}</style>\n</div>\n-)\n+ ) : null\n+ }\n+}\nModal.init = ({\nname,\n+ router: {history: {push}},\nstores: {ui},\nservices: {ui: {toggleModal}},\ntoggle,\n@@ -196,6 +215,11 @@ Modal.init = ({\nname,\nui,\ntoggle: toggle || (() => toggleModal(name)),\n+ handleEscKey: (e) => {\n+ if (e.keyCode === 27 && name === 'socket-details') {\n+ push('/sockets')\n+ }\n+ },\n...rest\n}\n}\n",
        "chatgpt_rag": "feat: handle modal escape key functionality"
    },
    {
        "msg": "feat: keep focusing inside the popup by `tab` key",
        "diff": "diff --git a/src/utils/popup/popup-manager.js b/src/utils/popup/popup-manager.js @@ -149,19 +149,41 @@ const PopupManager = {\n}\n}\n};\n-!Vue.prototype.$isServer && window.addEventListener('keydown', function(event) {\n- if (event.keyCode === 27) { // ESC\n+\n+const getTopPopup = function() {\n+ if (Vue.prototype.$isServer) return;\nif (PopupManager.modalStack.length > 0) {\n- const topItem = PopupManager.modalStack[PopupManager.modalStack.length - 1];\n- if (!topItem) return;\n- const instance = PopupManager.getInstance(topItem.id);\n- if (instance.closeOnPressEscape) {\n- instance.handleClose\n- ? instance.handleClose()\n- : (instance.handleAction ? instance.handleAction('cancel') : instance.close());\n+ const topPopup = PopupManager.modalStack[PopupManager.modalStack.length - 1];\n+ if (!topPopup) return;\n+ const instance = PopupManager.getInstance(topPopup.id);\n+\n+ return instance;\n}\n+};\n+\n+if (!Vue.prototype.$isServer) {\n+ // handle `esc` key when the popup is shown\n+ window.addEventListener('keydown', function(event) {\n+ if (event.keyCode === 27) {\n+ const topPopup = getTopPopup();\n+\n+ if (topPopup && topPopup.closeOnPressEscape) {\n+ topPopup.handleClose\n+ ? topPopup.handleClose()\n+ : (topPopup.handleAction ? topPopup.handleAction('cancel') : topPopup.close());\n}\n}\n});\n+ // keep focusing inside the popup by `tab` key\n+ document.addEventListener('focusin', function(event) {\n+ const topPopup = getTopPopup();\n+\n+ if (topPopup && !topPopup.$el.contains(event.target)) {\n+ event.stopPropagation();\n+ topPopup.$el.focus();\n+ }\n+ });\n+}\n+\nexport default PopupManager;\n",
        "date": "10.05.2017 17:04:41",
        "repo": "hug-sun/element3",
        "type": "feat",
        "sim_msg": "feat: show Violentmonkey version in popup",
        "sim_diff": "diff --git a/src/popup/views/app.vue b/src/popup/views/app.vue <div\nclass=\"flex-1 ext-name\"\n:class=\"{disabled:!options.isApplied}\"\n- v-text=\"i18n('extName')\"\n+ v-text=\"name\"\n/>\n<span\nclass=\"menu-area\"\n@@ -189,6 +189,8 @@ import Icon from '#/common/ui/icon';\nimport { keyboardService, isInput } from '#/common/keyboard';\nimport { mutex, store } from '../utils';\n+const manifest = browser.runtime.getManifest();\n+const NAME = `${manifest.name} ${manifest.version}`;\nconst SCRIPT_CLS = '.script';\nlet mousedownElement;\n@@ -233,6 +235,7 @@ export default {\nactiveExtras: null,\nmessage: null,\nfocusedId: null,\n+ name: NAME,\n};\n},\ncomputed: {\n",
        "chatgpt_rag": "feat: handle ESC key and focus inside popup in popup manager"
    },
    {
        "msg": "feat(api-utils): make xhr wrapper less complex",
        "diff": "diff --git a/src/common/api/utils/index.js b/src/common/api/utils/index.js -// @flow\n-export {get, post} from './xhr_wrapper'\n+/**\n+ * @flow\n+ * @file Simple fetch wrapper\n+ */\n+import fetch from 'isomorphic-fetch'\n+\n+// USAGE:\n+export const get = requestWrapper('GET')\n+// get('https://www.google.com', options)\n+export const post = requestWrapper('POST')\n+// post('https://www.google.com', data)\n+\n+// Create request wrapper for certain method\n+function requestWrapper (method: 'GET' | 'POST' | 'DELETE' | 'PUT' | 'PATCH') {\n+ // Creates request to `url` with `data`\n+ return async (url: string, data: any = null) => {\n+ const body = data ? {body: JSON.stringify(data)} : {}\n+\n+ const request = {\n+ method,\n+ headers: {},\n+ mode: process.env.NODE_ENV === 'development' ? 'cors' : 'same-origin',\n+ ...body\n+ }\n+\n+ return fetch(url, request)\n+ .then(checkStatus)\n+ .then(parseJSON)\n+ .catch((err: any) => err)\n+ }\n+}\n+\n+async function parseJSON (res: Response): Object {\n+ let json: Object\n+ const {status} = res\n+ // status response field in return object\n+ try {\n+ json = await res.json()\n+ } catch (e) {\n+ if (res.status === 204) {\n+ return {ok: true, data: {}, status}\n+ }\n+ return {ok: false, status}\n+ }\n+ if (!res.ok) {\n+ return {data: json, ok: false, status}\n+ }\n+ return {data: json, ok: true, status}\n+}\n+\n+function checkStatus (response: Response): Response {\n+ const {status} = response\n+ if (status >= 200 && status < 300) {\n+ // Everything is ok\n+ } else if (status >= 300 && status < 400) {\n+ // 300 - Multiple Choices\n+ // 301 - Moved Permanently,\n+ // 302 - Found, Moved Temporarily\n+ // 304 - not modified\n+ // 307 - Temporary Redirect\n+ } else if (status === 400) {\n+ // Probably is a validation error\n+ } else if (status === 403 || status === 401) {\n+ // 401 - Forbidden\n+ // 403 - Unauthorized\n+ } else if (status === 404) {\n+ // Not Found\n+ } else if (status >= 500) {\n+ // Server error\n+ }\n+ return response\n+}\n",
        "date": "18.02.2018 15:58:11",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "refactor: show descriptive error for failed requests",
        "sim_diff": "diff --git a/src/common/util.js b/src/common/util.js @@ -317,7 +317,7 @@ export async function request(url, options = {}) {\naccept && { accept })\n: headers,\n});\n- const result = { url, status: -1 };\n+ let result = { url, status: -1 };\ntry {\nconst urlNoAuth = auth ? scheme + hostname + urlTail : url;\nconst resp = await fetch(urlNoAuth, init);\n@@ -330,7 +330,10 @@ export async function request(url, options = {}) {\nresult.status = resp.status || 200;\nresult.headers = resp.headers;\nresult.data = await resp[loadMethod]();\n- } catch { /* NOP */ }\n+ } catch (err) {\n+ result = Object.assign(err, result);\n+ result.message += '\\n' + url;\n+ }\nif (result.status < 0 || result.status > 300) throw result;\nreturn result;\n}\n",
        "chatgpt_rag": "refactor: convert xhr_wrapper to fetch wrapper in api utils"
    },
    {
        "msg": "feat(locals): add basic text for dashboard",
        "diff": "diff --git a/locals/en.json b/locals/en.json {\n- \"Header.Popup.HeaderButton\": \"Hello {name}\"\n+ \"Dashboard.Text\": \"Hello HELLOOOO\"\n}\n",
        "date": "29.09.2017 20:51:38",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "style: Copy CID & Share link\nCloses",
        "sim_diff": "diff --git a/public/locales/en/files.json b/public/locales/en/files.json \"rename\": \"Rename\",\n\"download\": \"Download\",\n\"inspect\": \"Inspect\",\n- \"copyHash\": \"Copy hash\",\n- \"share\": \"Share\",\n+ \"copyHash\": \"Copy CID\",\n+ \"share\": \"Share link\",\n\"close\": \"Close\",\n\"copy\": \"Copy\",\n\"cancel\": \"Cancel\",\n",
        "chatgpt_rag": "style: Update Dashboard text to \"Hello HELLOOOO\""
    },
    {
        "msg": "feat: if RollbarProxy is defined, use the proxy to send all Rollbar events",
        "diff": "diff --git a/src/browser/transport.js b/src/browser/transport.js @@ -71,7 +71,23 @@ function _makeZoneRequest(accessToken, url, method, data, callback, requestFacto\n}\n}\n+/* global RollbarProxy */\n+function _proxyRequest(json, callback) {\n+ var rollbarProxy = new RollbarProxy();\n+ rollbarProxy.sendJsonPayload(\n+ json,\n+ function(_msg) { /* do nothing */ }, // eslint-disable-line no-unused-vars\n+ function(err) {\n+ callback(new Error(err));\n+ }\n+ );\n+}\n+\nfunction _makeRequest(accessToken, url, method, data, callback, requestFactory) {\n+ if (typeof RollbarProxy !== 'undefined') {\n+ return _proxyRequest(data, callback);\n+ }\n+\nvar request;\nif (requestFactory) {\nrequest = requestFactory();\n",
        "date": "11.04.2019 15:14:42",
        "repo": "rollbar/rollbar.js",
        "type": "feat",
        "sim_msg": "fix: WebSocket path is changed to the root path if use proxy rule",
        "sim_diff": "diff --git a/lib/https/index.js b/lib/https/index.js @@ -173,19 +173,19 @@ function _handleWebsocket(socket, clientIp, clientPort, callback, wss) {\n}\nproxyUrl = 'http:' + util.removeProtocol(proxyUrl);\nresolveHost(proxyUrl, function(ip) {\n- options = url.parse(proxyUrl);\n- options.port = parseInt(options.port, 10) || (isSocks ? 1080 : 80);\n- var isProxyPort = options.port == config.port;\n+ var proxyOptions = url.parse(proxyUrl);\n+ proxyOptions.port = parseInt(proxyOptions.port, 10) || (isSocks ? 1080 : 80);\n+ var isProxyPort = proxyOptions.port == config.port;\nif (isProxyPort && util.isLocalAddress(ip)) {\nreturn execCallback(new Error('Unable to proxy to itself (' + ip + ':' + config.port + ')'));\n}\n- var dstOptions = url.parse(fullUrl);\n- dstOptions.proxyHost = ip;\n- resData.port = dstOptions.proxyPort = options.port;\n- dstOptions.host = dstOptions.hostname;\n- if (!dstOptions.port) {\n- dstOptions.port = wss ? 443 : 80;\n+ options = url.parse(fullUrl);\n+ options.proxyHost = ip;\n+ resData.port = options.proxyPort = proxyOptions.port;\n+ options.host = options.hostname;\n+ if (!options.port) {\n+ options.port = wss ? 443 : 80;\n}\nvar onConnect = function(proxySocket) {\n@@ -193,7 +193,7 @@ function _handleWebsocket(socket, clientIp, clientPort, callback, wss) {\nproxySocket = tls.connect({\nrejectUnauthorized: false,\nsocket: proxySocket,\n- servername: dstOptions.hostname\n+ servername: options.hostname\n}).on('error', execCallback);\n}\n@@ -202,10 +202,10 @@ function _handleWebsocket(socket, clientIp, clientPort, callback, wss) {\npipeData();\n};\nif (isSocks) {\n- dstOptions.localDNS = false;\n- dstOptions.auths = config.getAuths(options);\n+ options.localDNS = false;\n+ options.auths = config.getAuths(proxyOptions);\n} else {\n- var proxyHeaders = dstOptions.headers = dstOptions.headers || {};\n+ var proxyHeaders = options.headers = options.headers || {};\nif (!util.isLocalIp(socket.clientIp)) {\nproxyHeaders[config.CLIENT_IP_HEAD] = socket.clientIp;\n}\n@@ -221,7 +221,7 @@ function _handleWebsocket(socket, clientIp, clientPort, callback, wss) {\nwss = false;\n}\nutil.checkIfAddInterceptPolicy(proxyHeaders, headers);\n- dstOptions.proxyAuth = options.auth;\n+ options.proxyAuth = proxyOptions.auth;\n}\nvar netMgr = isSocks ? socks : config;\nvar reqDelay = util.getMatcherValue(_rules.reqDelay);\n@@ -231,10 +231,10 @@ function _handleWebsocket(socket, clientIp, clientPort, callback, wss) {\ntimeout = util.setTimeout(function() {\ndestroy(new Error('Timeout'));\n});\n- netMgr.connect(dstOptions, onConnect).on('error', execCallback);\n+ netMgr.connect(options, onConnect).on('error', execCallback);\n}, reqDelay);\n} else {\n- netMgr.connect(dstOptions, onConnect).on('error', execCallback);\n+ netMgr.connect(options, onConnect).on('error', execCallback);\n}\n});\n} else {\n",
        "chatgpt_rag": "feat: Add proxy request functionality with RollbarProxy integration"
    },
    {
        "msg": "feat: finally updating sponsor section to separate sponsors",
        "diff": "diff --git a/components/ReusableSections/SponsorsSection/SponsorsSection.js b/components/ReusableSections/SponsorsSection/SponsorsSection.js import React from 'react';\n-import Content from 'components/Content/Content';\n+import Container from 'components/Container/Container';\n+import Heading from 'components/Heading/Heading';\nimport PartnerLogoLink from 'components/PartnerLogoLink/PartnerLogoLink';\n-import partners from 'common/constants/partners';\n+import partners, { PARTNER_TYPES } from 'common/constants/partners';\n+import styles from './SponsorsSection.css';\n+\n+const isPaidSponsor = partner => partner.type === PARTNER_TYPES.PAID;\nconst SponsorsSection = () => (\n- <Content\n- title=\"Sponsors\"\n- theme=\"gray\"\n- hasTitleUnderline\n- columns={partners.map(partner => (\n+ <Container theme=\"gray\">\n+ <Heading text=\"Sponsors\" hasTitleUnderline headingLevel={3} />\n+\n+ <Heading text=\"Paid Sponsors\" headingLevel={4} />\n+ <p>\n+ These sponsors have donated cash to help keep the mission going here at Operation Code. They\n+ may or may not have also donated to our cause via others means.\n+ </p>\n+ <div className={styles.columnsContainer}>\n+ {partners\n+ .filter(x => isPaidSponsor(x))\n+ .map(partner => (\n+ <PartnerLogoLink key={partner.name} {...partner} size=\"large\" />\n+ ))}\n+ </div>\n+\n+ <Heading text=\"In-Kind Sponsors\" headingLevel={4} />\n+ <p>\n+ The following organizations have helped Operation Code through services, products,\n+ advertisements, scholarships, or sponsorships. We thank them for their contributions.\n+ </p>\n+ <div className={styles.columnsContainer}>\n+ {partners\n+ .filter(x => !isPaidSponsor(x))\n+ .map(partner => (\n<PartnerLogoLink key={partner.name} {...partner} />\n))}\n- />\n+ </div>\n+ </Container>\n);\nexport default SponsorsSection;\n",
        "date": "16.10.2019 13:23:14",
        "repo": "operationcode/front-end",
        "type": "feat",
        "sim_msg": "chore: temporarily remove PayPal components\nThis commit should be reverted while implementing PayPal integration",
        "sim_diff": "diff --git a/client/src/components/Donation/components/DonateForm.js b/client/src/components/Donation/components/DonateForm.js @@ -9,8 +9,7 @@ import {\nRow,\nCol,\nToggleButtonGroup,\n- ToggleButton,\n- Radio\n+ ToggleButton\n} from '@freecodecamp/react-bootstrap';\nimport { StripeProvider, Elements } from 'react-stripe-elements';\n@@ -202,37 +201,9 @@ class DonateForm extends Component {\nrenderDonationOptions() {\nconst { stripe, enableDonationSettingsPage } = this.props;\n- const {\n- donationAmount,\n- donationDuration,\n- paymentType,\n- processing\n- } = this.state;\n+ const { donationAmount, donationDuration, paymentType } = this.state;\nreturn (\n<div>\n- {!processing ? (\n- <div>\n- <Radio\n- checked={paymentType === 'Card'}\n- name='payment-method'\n- onChange={this.handleSelectPaymentType}\n- value='Card'\n- >\n- Donate using a Credit/Debit Card.\n- </Radio>\n- <Radio\n- checked={paymentType === 'PayPal'}\n- // disable the paypal integration for now\n- disabled={true}\n- name='payment-method'\n- onChange={this.handleSelectPaymentType}\n- value='PayPal'\n- >\n- Donate using PayPal. (Coming soon)\n- </Radio>\n- <Spacer />\n- </div>\n- ) : null}\n{paymentType === 'Card' ? (\n<StripeProvider stripe={stripe}>\n<Elements>\n",
        "chatgpt_rag": "chore: refactor SponsorsSection component structure\n\n- Refactored the SponsorsSection component to use Container and Heading components for better structure and readability\n- Added separate sections for Paid Sponsors and In-Kind Sponsors based on partner types\n- Updated the rendering logic to filter and display partners based on their sponsorship type"
    },
    {
        "msg": "feat(button): import components path modify",
        "diff": "diff --git a/src/index.ts b/src/index.ts @@ -4,7 +4,7 @@ import { ElAvatar } from './components/avatar'\nimport { ElLink } from './components/link/'\nimport { ElIcon } from './components/icon/'\nimport { ElBadge } from './components/badge/'\n-import { ElButton } from './components/Button/'\n+import { ElButton } from './components/button/'\nimport '/theme/src/icon.scss'\nconst components = [\n",
        "date": "20.06.2022 18:20:24",
        "repo": "hug-sun/element3",
        "type": "feat",
        "sim_msg": "feat(Code Cyphers): Creates a code cyphers widget",
        "sim_diff": "diff --git a/src/components/views/index.ts b/src/components/views/index.ts @@ -16,6 +16,7 @@ import {\nFaTasks,\nFaCircleNotch,\nFaTerminal,\n+ FaEnvelopeOpenText,\n} from \"react-icons/fa\";\nconst LongRangeComm = React.lazy(() => import(\"./LongRangeComm\"));\n@@ -432,6 +433,13 @@ export const Widgets = {\nsize: \"lg\",\ncolor: \"#5FFF5F\",\n},\n+ commCyphers: {\n+ widget: CodeCyphers,\n+ icon: FaEnvelopeOpenText,\n+ name: \"Code Cyphers\",\n+ size: \"lg\",\n+ color: \"white\",\n+ },\n};\nexport const Cores = {\n",
        "chatgpt_rag": "fix(Button): Correct casing for Button component import in index.ts"
    },
    {
        "msg": "feat(create-razzle-app): make verbose show install",
        "diff": "diff --git a/packages/create-razzle-app/lib/utils/install.js b/packages/create-razzle-app/lib/utils/install.js @@ -22,7 +22,7 @@ module.exports = function install(opts) {\nconsole.log(messages.installing(packages));\nprocess.chdir(projectPath);\n- const stdio = 'pipe';\n+ const stdio = opts.verbose ? 'inherit' : 'pipe';\nreturn new Promise(function(resolve, reject) {\nconst stopInstallSpinner = output.wait('Installing modules');\n",
        "date": "06.03.2021 20:10:59",
        "repo": "jaredpalmer/razzle",
        "type": "feat",
        "sim_msg": "feat: dynamical config",
        "sim_diff": "diff --git a/lib/pkg.js b/lib/pkg.js const app = require('./app');\n+const config = require('./config');\n-const pkg = (path) =>\n+module.exports = {\n+ setConfig: (conf) => {\n+ config.set(conf);\n+ },\n+ request: (path) =>\nnew Promise((resolve) => {\napp.callback()(\n{\n@@ -16,6 +21,5 @@ const pkg = (path) =>\n},\n}\n);\n- });\n-\n-module.exports = pkg;\n+ }),\n+};\n",
        "chatgpt_rag": "refactor: improve install function to handle verbose option"
    },
    {
        "msg": "feat: add hebrew support to isAlpha and isAlphanumeric",
        "diff": "diff --git a/README.md b/README.md @@ -77,8 +77,8 @@ Validator | Description\n***contains(str, seed)*** | check if the string contains the seed.\n**equals(str, comparison)** | check if the string matches the comparison.\n**isAfter(str [, date])** | check if the string is a date that's after the specified date (defaults to now).\n-**isAlpha(str [, locale])** | check if the string contains only letters (a-zA-Z).<br/><br/>Locale is one of `['ar', 'ar-AE', 'ar-BH', 'ar-DZ', 'ar-EG', 'ar-IQ', 'ar-JO', 'ar-KW', 'ar-LB', 'ar-LY', 'ar-MA', 'ar-QA', 'ar-QM', 'ar-SA', 'ar-SD', 'ar-SY', 'ar-TN', 'ar-YE', 'bg-BG', 'cs-CZ', 'da-DK', 'de-DE', 'el-GR', 'en-AU', 'en-GB', 'en-HK', 'en-IN', 'en-NZ', 'en-US', 'en-ZA', 'en-ZM', 'es-ES', 'fr-FR', 'hu-HU', 'it-IT', 'ku-IQ', 'nb-NO', 'nl-NL', 'nn-NO', 'pl-PL', 'pt-BR', 'pt-PT', 'ru-RU', 'sl-SI', 'sk-SK', 'sr-RS', 'sr-RS@latin', 'sv-SE', 'tr-TR', 'uk-UA']`) and defaults to `en-US`. Locale list is `validator.isAlphaLocales`.\n-**isAlphanumeric(str [, locale])** | check if the string contains only letters and numbers.<br/><br/>Locale is one of `['ar', 'ar-AE', 'ar-BH', 'ar-DZ', 'ar-EG', 'ar-IQ', 'ar-JO', 'ar-KW', 'ar-LB', 'ar-LY', 'ar-MA', 'ar-QA', 'ar-QM', 'ar-SA', 'ar-SD', 'ar-SY', 'ar-TN', 'ar-YE', 'bg-BG', 'cs-CZ', 'da-DK', 'de-DE', 'el-GR', 'en-AU', 'en-GB', 'en-HK', 'en-IN', 'en-NZ', 'en-US', 'en-ZA', 'en-ZM', 'es-ES', 'fr-FR', 'hu-HU', 'it-IT', 'ku-IQ', 'nb-NO', 'nl-NL', 'nn-NO', 'pl-PL', 'pt-BR', 'pt-PT', 'ru-RU', 'sl-SI', 'sk-SK', 'sr-RS', 'sr-RS@latin', 'sv-SE', 'tr-TR', 'uk-UA']`) and defaults to `en-US`. Locale list is `validator.isAlphanumericLocales`.\n+**isAlpha(str [, locale])** | check if the string contains only letters (a-zA-Z).<br/><br/>Locale is one of `['ar', 'ar-AE', 'ar-BH', 'ar-DZ', 'ar-EG', 'ar-IQ', 'ar-JO', 'ar-KW', 'ar-LB', 'ar-LY', 'ar-MA', 'ar-QA', 'ar-QM', 'ar-SA', 'ar-SD', 'ar-SY', 'ar-TN', 'ar-YE', 'bg-BG', 'cs-CZ', 'da-DK', 'de-DE', 'el-GR', 'en-AU', 'en-GB', 'en-HK', 'en-IN', 'en-NZ', 'en-US', 'en-ZA', 'en-ZM', 'es-ES', 'fr-FR', 'he', 'hu-HU', 'it-IT', 'ku-IQ', 'nb-NO', 'nl-NL', 'nn-NO', 'pl-PL', 'pt-BR', 'pt-PT', 'ru-RU', 'sl-SI', 'sk-SK', 'sr-RS', 'sr-RS@latin', 'sv-SE', 'tr-TR', 'uk-UA']`) and defaults to `en-US`. Locale list is `validator.isAlphaLocales`.\n+**isAlphanumeric(str [, locale])** | check if the string contains only letters and numbers.<br/><br/>Locale is one of `['ar', 'ar-AE', 'ar-BH', 'ar-DZ', 'ar-EG', 'ar-IQ', 'ar-JO', 'ar-KW', 'ar-LB', 'ar-LY', 'ar-MA', 'ar-QA', 'ar-QM', 'ar-SA', 'ar-SD', 'ar-SY', 'ar-TN', 'ar-YE', 'bg-BG', 'cs-CZ', 'da-DK', 'de-DE', 'el-GR', 'en-AU', 'en-GB', 'en-HK', 'en-IN', 'en-NZ', 'en-US', 'en-ZA', 'en-ZM', 'es-ES', 'fr-FR', 'he', 'hu-HU', 'it-IT', 'ku-IQ', 'nb-NO', 'nl-NL', 'nn-NO', 'pl-PL', 'pt-BR', 'pt-PT', 'ru-RU', 'sl-SI', 'sk-SK', 'sr-RS', 'sr-RS@latin', 'sv-SE', 'tr-TR', 'uk-UA']`) and defaults to `en-US`. Locale list is `validator.isAlphanumericLocales`.\n**isAscii(str)** | check if the string contains ASCII chars only.\n**isBase32(str)** | check if a string is base32 encoded.\n**isBase64(str)** | check if a string is base64 encoded.\n",
        "date": "05.10.2019 16:18:57",
        "repo": "validatorjs/validator.js",
        "type": "feat",
        "sim_msg": "feat(THIN-10619): Added new reg expression to extra multiple emails",
        "sim_diff": "diff --git a/src/os/string/string.js b/src/os/string/string.js @@ -36,6 +36,14 @@ os.string.FLOAT = /^[+-]?\\d+(\\.\\d*)?(E[+-]\\d+)?$/;\nos.string.EMAIL = /^\\s*[^@,; ]+@[^@,; ]+\\.[^@,; ]+\\s*(\\s*,\\s*[^@,; ]+@[^@,; ]+\\.[^@,; ]+)*\\s*$/;\n+/**\n+ * Regular expression to extract for emails from string\n+ * @type {RegExp}\n+ * @const\n+ */\n+os.string.EMAILS = /([a-zA-Z0-9._-]+@[a-zA-Z0-9._-]+\\.[a-zA-Z0-9._-]+)/gi;\n+\n+\n/**\n* Tests if a string represents a boolean value\n* @param {string} str The string\n",
        "chatgpt_rag": "chore(README): Updated isAlpha and isAlphanumeric functions with additional locale options"
    },
    {
        "msg": "fix(typings): Make optional props of Search, optional in the typing definition.",
        "diff": "diff --git a/src/modules/Search/Search.d.ts b/src/modules/Search/Search.d.ts @@ -80,7 +80,7 @@ interface SearchProps {\n* @param {SyntheticEvent} event - React's original SyntheticEvent.\n* @param {object} data - All props.\n*/\n- onBlur: (event: React.MouseEvent<HTMLElement>, data: SearchProps) => void;\n+ onBlur?: (event: React.MouseEvent<HTMLElement>, data: SearchProps) => void;\n/**\n* Called on focus.\n@@ -88,7 +88,7 @@ interface SearchProps {\n* @param {SyntheticEvent} event - React's original SyntheticEvent.\n* @param {object} data - All props.\n*/\n- onFocus: (event: React.MouseEvent<HTMLElement>, data: SearchProps) => void;\n+ onFocus?: (event: React.MouseEvent<HTMLElement>, data: SearchProps) => void;\n/**\n* Called on mousedown.\n@@ -96,7 +96,7 @@ interface SearchProps {\n* @param {SyntheticEvent} event - React's original SyntheticEvent.\n* @param {object} data - All props.\n*/\n- onMouseDown: (event: React.MouseEvent<HTMLElement>, data: SearchProps) => void;\n+ onMouseDown?: (event: React.MouseEvent<HTMLElement>, data: SearchProps) => void;\n/**\n* Called when a result is selected.\n@@ -104,7 +104,7 @@ interface SearchProps {\n* @param {SyntheticEvent} event - React's original SyntheticEvent.\n* @param {object} data - All props.\n*/\n- onResultSelect: (event: React.MouseEvent<HTMLDivElement>, data: SearchResultProps) => void;\n+ onResultSelect?: (event: React.MouseEvent<HTMLDivElement>, data: SearchResultProps) => void;\n/**\n* Called on search input change.\n@@ -112,7 +112,7 @@ interface SearchProps {\n* @param {SyntheticEvent} event - React's original SyntheticEvent.\n* @param {string} value - Current value of search input.\n*/\n- onSearchChange: (event: React.MouseEvent<HTMLElement>, value: string) => void;\n+ onSearchChange?: (event: React.MouseEvent<HTMLElement>, value: string) => void;\n// ------------------------------------\n// Style\n@@ -131,7 +131,7 @@ interface SearchProps {\nfluid?: boolean;\n/** A search input can take up the width of its container. */\n- input: any;\n+ input?: any;\n/** A search can show a loading indicator. */\nloading?: boolean;\n",
        "date": "07.03.2017 17:29:51",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "sim_msg": "refactor(search): sort ts type definitions",
        "sim_diff": "diff --git a/src/__experimental__/components/search/search.d.ts b/src/__experimental__/components/search/search.d.ts @@ -2,38 +2,39 @@ import * as React from \"react\";\nimport { MarginSpacingProps } from '../../../utils/helpers/options-helper';\nexport interface SearchProps extends MarginSpacingProps {\n+ /** Prop to specify the aria-label of the search component */\n+ \"aria-label\"?: string;\n/** Prop for `uncontrolled` use */\ndefaultValue?: string;\n- /** Prop for `controlled` use */\n- value?: string;\n+ /** Prop for `id` */\n+ id?: string;\n+ /** Prop for `name` */\n+ name?: string;\n+ /** Prop for `onBlur` events */\n+ onBlur?: (ev: React.ChangeEvent<HTMLElement>) => void;\n+ /** Prop for `onChange` events */\n+ onChange?: (ev: React.ChangeEvent<HTMLInputElement>) => void;\n/** Prop for `onClick` events.\n* `onClick` events are triggered when the `searchButton` is clicked\n*/\nonClick?: (ev: React.SyntheticEvent) => void;\n- /** Prop for `onChange` events */\n- onChange?: (ev: React.ChangeEvent<HTMLInputElement>) => void;\n/** Prop for `onKeyDown` events */\nonKeyDown?: (ev: React.SyntheticEvent) => void;\n+ /** Prop for a placeholder */\n+ placeholder?: string;\n/** Prop boolean to state whether the `search` icon renders */\nsearchButton?: boolean;\n- /** Prop for specifying an input width length.\n+ /**\n+ * Prop for specifing an input width length.\n* Leaving the `searchWidth` prop with no value will default the width to '100%'\n*/\nsearchWidth?: string;\n- /** Prop for `onBlur` events */\n- onBlur?: (ev: React.ChangeEvent<HTMLElement>) => void;\n- /** Prop for `id` */\n- id?: string;\n- /** Prop for `name` */\n- name?: string;\n/** Prop for active search threshold. This must be a positive number */\nthreshold?: number;\n- /** Prop for a placeholder */\n- placeholder?: string;\n+ /** Prop for `controlled` use */\n+ value?: string;\n/** Prop to specify the styling of the search component */\nvariant?: string;\n- /** Prop to specify the aria-label of the search component */\n- \"aria-label\"?: string;\n}\ndeclare const Search: React.ComponentType<SearchProps>;\n",
        "chatgpt_rag": "refactor(search): update event handlers to optional in SearchProps"
    },
    {
        "msg": "fix: stop saying there's another update required!",
        "diff": "diff --git a/bin/nodemon.js b/bin/nodemon.js @@ -11,6 +11,6 @@ var fs = require('fs');\n// checks for available update and returns an instance\nvar pkg = JSON.parse(fs.readFileSync(__dirname + '/../package.json'));\n-require('update-notifier')({\n- pkg: Object.assign(pkg, { version: '0.0.0' }),\n-}).notify();\n+if (pkg.version.indexOf('0.0.0') !== 0) {\n+ require('update-notifier')({ pkg }).notify();\n+}\n",
        "date": "22.12.2017 15:36:36",
        "repo": "remy/nodemon",
        "type": "fix",
        "sim_msg": "fix: added git push to auto npm versioning",
        "sim_diff": "diff --git a/src/scripts/npm/nodeVersion.js b/src/scripts/npm/nodeVersion.js (function () {\nvar path = require('path')\n+ var exec = require('child_process').exec\nvar fileHelper = require('../lib/fileHelper.js')\nvar FILES = ['package.json', 'plugin.xml', 'plugin.template.xml']\nfunction updateNpmVersion (pluginConfig, config, callback) {\nvar files = readFilePaths(FILES)\nvar version = config.nextRelease.version\n+ var git = ''\nfor (var i = 0; i < files.length; i++) {\nvar file = files[i]\nvar content = readContent(file)\n+ git += 'git add ' + file + ' && '\ncontent = updateVersion(file, content, version)\nsaveContent(file, content)\n}\n+ commitChanges(git, version)\n+ }\n+\n+ function commitChanges (git, version) {\n+ git += 'git commit -m \"chore: updated npm version to '+ version + '\" && git push'\n+ exec(git, function (err, stdout, stderr) {\n+ if (err) {\n+ throw new Error('BRANCH SDK: Failed commit git changes to npm version. Docs https://goo.gl/GijGKP')\n+ }\n+ })\n}\nfunction readContent (file) {\n",
        "chatgpt_rag": "refactor: updated update-notifier logic in nodemon script"
    },
    {
        "msg": "fix: remove tls secret env var",
        "diff": "diff --git a/.github/workflows/ci.yml b/.github/workflows/ci.yml @@ -111,7 +111,6 @@ jobs:\n${repo_owner}/${repo_name}\nenv:\nAWF_AUTH_TOKEN: ${{ secrets.AWF_AUTH_TOKEN }}\n- TLS_SECRET: ${{ secrets.TLS_SECRET }}\nshell: bash\n- name: Dump GitHub context\n",
        "date": "19.08.2022 01:18:38",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "sim_msg": "chore(ci): only run release when release is possible",
        "sim_diff": "diff --git a/.github/workflows/ci.yaml b/.github/workflows/ci.yaml @@ -65,6 +65,7 @@ jobs:\ngithub-token: ${{ secrets.GITHUB_TOKEN }}\nrelease:\nname: Release\n+ if: ${{ github.ref == 'refs/heads/master' }}\nruns-on: ubuntu-latest\nneeds: [lint, test, coverage]\nstrategy:\n",
        "chatgpt_rag": "chore(ci): remove TLS_SECRET from environment variables"
    },
    {
        "msg": "fix(typings): fix Modal mountnode -> mountNode",
        "diff": "diff --git a/src/modules/Modal/index.d.ts b/src/modules/Modal/index.d.ts @@ -59,7 +59,7 @@ interface ModalProps {\nopen?: boolean;\n/** The node where the modal should mount.. */\n- mountnode?: any;\n+ mountNode?: any;\n/** A modal can vary in size */\nsize?: SemanticSIZES;\n",
        "date": "12.01.2017 21:10:27",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "sim_msg": "chore: fix typo in type BvMsgBoxOptions definition",
        "sim_diff": "diff --git a/types/components/modal/index.d.ts b/types/components/modal/index.d.ts @@ -39,7 +39,7 @@ export interface BvMsgBoxOptions {\ntitleTag?: string\nsize?: string\ncentered?: boolean\n- scrolable?: boolean\n+ scrollable?: boolean\nnoFade?: boolean\nnoCloseOnBackdrop?: boolean\nnoCloseOnEsc?: boolean\n",
        "chatgpt_rag": "chore: fix typo in type ModalProps definition"
    },
    {
        "msg": "fix: ensure numerical OS version check",
        "diff": "diff --git a/lib/monitor/run.js b/lib/monitor/run.js @@ -16,7 +16,7 @@ var restart = null;\nvar psTree = require('pstree.remy');\nvar path = require('path');\nvar signals = require('./signals');\n-const osRelease = require('os').release();\n+const osRelease = parseInt(require('os').release().split(\".\")[0], 10);\nfunction run(options) {\nvar cmd = config.command.raw;\n",
        "date": "09.07.2021 17:19:02",
        "repo": "remy/nodemon",
        "type": "fix",
        "sim_msg": "chore(debug): remove debug log",
        "sim_diff": "diff --git a/lib/commands/run.js b/lib/commands/run.js @@ -6,7 +6,6 @@ var yargs = require('yargs');\nfunction run (internals, config) {\nconst { load } = internals;\nconst transition = load('transition');\n- console.log(load);\nvar action = internals.argv._.shift();\nvar folder = action.split(':');\n",
        "chatgpt_rag": "chore: update osRelease to only include major version in run.js"
    },
    {
        "msg": "fix(examples): fix with-typescript example",
        "diff": "diff --git a/examples/with-typescript/src/index.ts b/examples/with-typescript/src/index.ts @@ -18,10 +18,6 @@ const port = process.env.PORT ? parseInt(process.env.PORT, 10) : 3000;\nexport default express()\n.use((req, res) => app.handle(req, res))\n- .listen(port, (err: Error) => {\n- if (err) {\n- console.error(err);\n- return;\n- }\n+ .listen(port, () => {\nconsole.log(`> App started http://localhost:${port}`)\n});\n",
        "date": "16.12.2020 18:53:32",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "fix(typeDefinition): Add missing CreateClientParams types",
        "sim_diff": "diff --git a/index.d.ts b/index.d.ts @@ -10,9 +10,12 @@ export interface AxiosProxyConfig {\n};\n}\n+export type ClientLogLevel = 'error' | 'warning' | 'info';\n+\nexport interface CreateClientParams {\nspace: string;\naccessToken: string;\n+ environment?: string;\ninsecure?: boolean;\nhost?: string;\nbasePath?: string;\n@@ -23,7 +26,10 @@ export interface CreateClientParams {\napplication?: string;\nintegration?: string;\nresolveLinks?: boolean;\n+ removeUnresolved?: boolean;\nretryOnError?: boolean;\n+ logHandler?: (level: ClientLogLevel, data?: any) => void;\n+ timeout?: number;\n}\nexport interface ContentfulClientApi {\n",
        "chatgpt_rag": "refactor(server): Remove error handling from server listen function"
    },
    {
        "msg": "fix: Uncaught fs.stat() throw",
        "diff": "diff --git a/packages/create-wmr/src/index.js b/packages/create-wmr/src/index.js @@ -18,12 +18,17 @@ sade('create-wmr [dir]', true)\nconst origCwd = process.cwd();\nlet cwd = process.cwd();\nif (dir) {\n- if ((await fs.stat(dir)).isDirectory() && !opts.force) {\n+ try {\n+ (await fs.stat(dir)).isDirectory();\n+ if (!opts.force) {\nprocess.stderr.write(\n- `${red(`Refusing to overwrite directory! Please specify a different directory or use the '--force' flag`)}\\n`\n+ `${red(\n+ `Refusing to overwrite directory! Please specify a different directory or use the '--force' flag`\n+ )}\\n`\n);\nprocess.exit(1);\n}\n+ } catch {}\ncwd = resolve(cwd, dir || '.');\nawait fs.mkdir(cwd, { recursive: true });\nprocess.chdir(cwd);\n",
        "date": "25.02.2021 17:56:18",
        "repo": "preactjs/wmr",
        "type": "fix",
        "sim_msg": "refactor: pass in all options minus redacted values to config resolver",
        "sim_diff": "diff --git a/packages/config/src/index.js b/packages/config/src/index.js @@ -9,12 +9,12 @@ const { normalizeConfig } = require('./normalize')\nconst { handleFiles } = require('./files')\nconst { LIFECYCLE } = require('./lifecycle')\n-const resolveConfig = async function(configFile, { cwd, context } = {}) {\n- const configPath = await getConfigPath(configFile, cwd)\n+const resolveConfig = async function(configFile, options = {}) {\n+ const configPath = await getConfigPath(configFile, options.cwd)\nconst baseDir = dirname(configPath)\nconst config = await configorama(configPath, {\n- options: { context },\n+ options: options,\nvariableSources: [\n/*{\n// Match variables ${secrets:xyz}\n",
        "chatgpt_rag": "refactor: update directory creation logic in create-wmr script to handle force flag more efficiently"
    },
    {
        "msg": "fix: dev rollup config",
        "diff": "diff --git a/packages/kiwi-core/rollup.dev.config.js b/packages/kiwi-core/rollup.dev.config.js @@ -66,15 +66,8 @@ const commons = {\n]\n}\n-// const bannerTxt = `/*! Chakra-Vui v${pkg.version} | MIT License | github.com/codebender828/kiwi-ui */`\n-\nconst baseFolder = './src/'\n-// const capitalize = (s) => {\n-// if (typeof s !== 'string') return ''\n-// return s.charAt(0).toUpperCase() + s.slice(1)\n-// }\n-\nconst components = fs.readdirSync(baseFolder)\n.filter((f) => fs.statSync(path.join(baseFolder, f)).isDirectory())\n@@ -86,30 +79,10 @@ const entries = {\n}, {})\n}\n-console.log('entries', entries)\n-\n/**\n* Configurations\n*/\nexport default () => {\n- // const mapComponent = (name) => {\n- // return [{\n- // input: baseFolder + `${name}/index.js`,\n- // external: externals,\n- // output: {\n- // format: 'umd',\n- // name: capitalize(name),\n- // file: `dist/components/${name}/index.js`,\n- // banner: bannerTxt,\n- // exports: 'named',\n- // globals: {\n- // vue: 'Vue'\n- // }\n- // },\n- // ...commons\n- // }]\n- // }\n-\nlet config = [{\ninput: entries,\noutput: {\n@@ -118,61 +91,6 @@ export default () => {\n},\n...commons\n}\n- // {\n- // input: entries,\n- // output: {\n- // dir: `dist/es/`,\n- // format: 'es'\n- // },\n- // ...commons\n- // },\n- // {\n- // input: entries,\n- // output: {\n- // dir: `dist/cjs/`,\n- // format: 'cjs',\n- // exports: 'named'\n- // },\n- // ...commons\n- // },\n- // {\n- // input: './src/index.js',\n- // output: {\n- // file: `dist/umd/index.js/`,\n- // name: capitalize('chakra'),\n- // format: 'umd',\n- // exports: 'named',\n- // banner: bannerTxt,\n- // globals: {\n- // vue: 'Vue'\n- // }\n- // },\n- // ...commons\n- // }\n- // {\n- // input: './src/index.js',\n- // output: {\n- // file: 'dist/chakra-vui.esm.js',\n- // name: capitalize('chakra'),\n- // format: 'esm',\n- // exports: 'named',\n- // banner: bannerTxt\n- // },\n- // ...commons\n- // }\n- // Individual components\n- // ...components.map((f) => mapComponent(f)).reduce((r, a) => r.concat(a), [])\n]\n- if (process.env.MINIFY === 'true') {\n- config = config.filter((c) => !!c.output.file)\n- config.forEach((c) => {\n- c.output.file = c.output.file.replace(/\\.js/g, '.min.js')\n- c.plugins.push(terser({\n- output: {\n- comments: '/^!/'\n- }\n- }))\n- })\n- }\nreturn config\n}\n",
        "date": "20.02.2020 03:22:31",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "sim_msg": "fix(vue): avoid build changes for umd",
        "sim_diff": "diff --git a/packages/vue/rollup.config.js b/packages/vue/rollup.config.js @@ -15,34 +15,62 @@ const umd = format === 'umd';\nconst cjs = format === 'cjs';\nlet output;\n+let input;\n+\n+const inputChunks = {\n+ index: 'src/index.js',\n+ version: 'src/components/Version/index.js',\n+ install: 'src/install.js',\n+ ReactiveList: 'src/components/result/ReactiveList.jsx',\n+ ResultCard: 'src/components/result/ResultCard.jsx',\n+ ResultList: 'src/components/result/ResultList.jsx',\n+ ReactiveBase: 'src/components/ReactiveBase/index.jsx',\n+ DataSearch: 'src/components/search/DataSearch.jsx',\n+ SingleList: 'src/components/list/SingleList.jsx',\n+ MultiList: 'src/components/list/MultiList.jsx',\n+ SingleRange: 'src/components/range/SingleRange.jsx',\n+ MultiRange: 'src/components/range/MultiRange.jsx',\n+ RangeSlider: 'src/components/range/RangeSlider.jsx',\n+ DynamicRangeSlider: 'src/components/range/DynamicRangeSlider.jsx',\n+ ReactiveComponent: 'src/components/basic/ReactiveComponent.jsx',\n+ SelectedFilters: 'src/components/basic/SelectedFilters.jsx',\n+ SingleDropdownList: 'src/components/list/SingleDropdownList.jsx',\n+ MultiDropdownList: 'src/components/list/MultiDropdownList.jsx',\n+ ToggleButton: 'src/components/list/ToggleButton.jsx',\n+ StateProvider: 'src/components/basic/StateProvider.jsx',\n+ initReactivesearch: 'src/server/index.js',\n+}\nif (es) {\noutput = {\ndir: 'dist/es',\nformat: 'es',\n};\n+ input = inputChunks;\n} else if (umd) {\nconst globalsUMD = {\nvue: 'Vue',\n};\nif (minify) {\noutput = {\n- dir: 'dist/umd-minified',\n+ file: 'dist/@appbaseio/reactivesearch-vue.umd.min.js',\nformat: 'umd',\nglobals: globalsUMD,\n};\n} else {\noutput = {\n- dir: 'dist/umd',\n+ file: 'dist/@appbaseio/reactivesearch-vue.umd.js',\nformat: 'umd',\nglobals: globalsUMD,\n};\n}\n+ input = 'src/index.js';\n} else if (cjs) {\noutput = {\ndir: 'dist/cjs',\nformat: 'cjs',\n};\n+ input = inputChunks;\n} else if (format) {\nthrow new Error(`invalid format specified: \"${format}\".`);\n} else {\n@@ -50,29 +78,7 @@ if (es) {\n}\nexport default {\n- input: {\n- index: 'src/index.js',\n- version: 'src/components/Version/index.js',\n- install: 'src/install.js',\n- ReactiveList: 'src/components/result/ReactiveList.jsx',\n- ResultCard: 'src/components/result/ResultCard.jsx',\n- ResultList: 'src/components/result/ResultList.jsx',\n- ReactiveBase: 'src/components/ReactiveBase/index.jsx',\n- DataSearch: 'src/components/search/DataSearch.jsx',\n- SingleList: 'src/components/list/SingleList.jsx',\n- MultiList: 'src/components/list/MultiList.jsx',\n- SingleRange: 'src/components/range/SingleRange.jsx',\n- MultiRange: 'src/components/range/MultiRange.jsx',\n- RangeSlider: 'src/components/range/RangeSlider.jsx',\n- DynamicRangeSlider: 'src/components/range/DynamicRangeSlider.jsx',\n- ReactiveComponent: 'src/components/basic/ReactiveComponent.jsx',\n- SelectedFilters: 'src/components/basic/SelectedFilters.jsx',\n- SingleDropdownList: 'src/components/list/SingleDropdownList.jsx',\n- MultiDropdownList: 'src/components/list/MultiDropdownList.jsx',\n- ToggleButton: 'src/components/list/ToggleButton.jsx',\n- StateProvider: 'src/components/basic/StateProvider.jsx',\n- initReactivesearch: 'src/server/index.js',\n- },\n+ input,\noutput: Object.assign(\n{\nname: umd ? 'ReactiveSearchVue' : '@appbaseio/reactivesearch-vue',\n",
        "chatgpt_rag": "refactor(rollup): optimize build configurations for kiwi-core package"
    },
    {
        "msg": "fix: fix default route in default template",
        "diff": "diff --git a/packages/create-razzle-app/templates/default/src/App.js b/packages/create-razzle-app/templates/default/src/App.js @@ -5,7 +5,7 @@ import './App.css';\nconst App = () => (\n<Switch>\n- <Route path=\"/\" element={<Home/>} />\n+ <Route exact={true} path=\"/\" component={Home} />\n</Switch>\n);\n",
        "date": "20.12.2021 17:47:08",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "fix(doc): fixing imports for web template",
        "sim_diff": "diff --git a/packages/doc/src/components/CodeBlock/shared/templates/web.js b/packages/doc/src/components/CodeBlock/shared/templates/web.js @@ -2,7 +2,7 @@ import injectImport from '..';\nconst web = (imports, code) => `import React from 'react';\nimport ReactDOM from 'react-dom';\n-${injectImport(imports, 'ThemeProvider')}\n+${injectImport(imports, ['ThemeProvider'], ['@gympass/yoga'])}\nconst App = () => <ThemeProvider>\n${code}\n",
        "chatgpt_rag": "refactor(template): refactor App component in default template"
    },
    {
        "msg": "fix(avatargroup): filter empty slots",
        "diff": "diff --git a/packages/kiwi-core/src/AvatarGroup/index.js b/packages/kiwi-core/src/AvatarGroup/index.js @@ -58,7 +58,7 @@ const AvatarGroup = {\n},\nrender (h) {\n// Get the number of slot nodes inside AvatarGroup\n- const children = this.$slots.default\n+ const children = this.$slots.default.filter(e => e.tag)\nconst count = children.length\nconst max = parseInt(this.max, 10)\n",
        "date": "19.02.2020 22:52:20",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "sim_msg": "fix(ui5-avatar-group): adapt width calculations in composite layouts\nThe calculations of the main container width have been adjusted to take into account sibling nodes.\nFixes",
        "sim_diff": "diff --git a/packages/main/src/AvatarGroup.js b/packages/main/src/AvatarGroup.js @@ -382,7 +382,7 @@ class AvatarGroup extends UI5Element {\nitem = button;\n}\n- return this.effectiveDir === \"rtl\" ? this._getWidthToItem(item) : item.offsetLeft;\n+ return this.effectiveDir === \"rtl\" ? this._getWidthToItem(item) : item.offsetLeft - this.offsetLeft;\n}\nreturn button.offsetWidth;\n@@ -526,7 +526,7 @@ class AvatarGroup extends UI5Element {\n}\n// in LTR the width is equal to item.offsetLeft\n- return item.offsetLeft;\n+ return item.offsetLeft - this.offsetLeft;\n}\n/**\n",
        "chatgpt_rag": "feat(avatar-group): filter out non-element nodes in AvatarGroup render function\nIn the AvatarGroup component's render function, only elements are now counted towards the total number of children, excluding any non-element nodes. This ensures accurate calculation of the number of slot nodes inside AvatarGroup."
    },
    {
        "msg": "fix(example): use new assets manifest",
        "diff": "diff --git a/examples/basic/src/server.js b/examples/basic/src/server.js @@ -5,6 +5,20 @@ import { renderToString } from 'react-dom/server';\nconst assets = require(process.env.RAZZLE_ASSETS_MANIFEST);\n+const cssLinksFromAssets = (assets, entrypoint) => {\n+ return assets.entrypoints[entrypoint] ? assets.entrypoints[entrypoint].css ?\n+ assets.entrypoints[entrypoint].css.map(asset=>\n+ `<link rel=\"stylesheet\" href=\"${asset}\">`\n+ ).join('') : '' : '';\n+};\n+};\n+const jsScriptTagsFromAssets = (assets, entrypoint, extra = '') => {\n+ return assets.entrypoints[entrypoint] ? assets.entrypoints[entrypoint].js ?\n+ assets.entrypoints[entrypoint].js.map(asset=>\n+ `<script src=\"${asset}\"${extra}></script>`\n+ ).join('') : '' : '';\n+};\n+\nexport const renderApp = (req, res) => {\nconst markup = renderToString(<App />);\n@@ -17,15 +31,11 @@ export const renderApp = (req, res) => {\n<meta charSet='utf-8' />\n<title>Welcome to Razzle</title>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n- ${\n- assets.client.css\n- ? `<link rel=\"stylesheet\" href=\"${assets.client.css}\">`\n- : ''\n- }\n+ ${cssLinksFromAssets(assets, 'client')}\n</head>\n<body>\n<div id=\"root\">${markup}</div>\n- <script src=\"${assets.client.js}\" defer crossorigin></script>\n+ ${jsScriptTagsFromAssets(assets, 'client', ' defer crossorigin')}\n</body>\n</html>`;\n",
        "date": "12.10.2020 18:57:39",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "perf(server): minor regex improvements",
        "sim_diff": "diff --git a/src/bin/server.js b/src/bin/server.js @@ -43,7 +43,7 @@ bundler.then(compiler => {\n// prerenderer views\n(req, res, next) => {\n- renderer(req.url.replace(/(\\?.*)$/, '').replace(/(\\.html)$/, ''))\n+ renderer(req.url.replace(/\\?.*$/, '').replace(/\\.html$/, ''))\n.then(html => {\nif (html === false) {\n// proceed to static server files\n",
        "chatgpt_rag": "refactor(server): extract cssLinksFromAssets and jsScriptTagsFromAssets functions for better code organization"
    },
    {
        "msg": "fix: sniff for child.stdout before using it\nThis fixes but it's a hack, so I'm going to emit a message\nsaying that non-LTS is not supported.",
        "diff": "diff --git a/lib/monitor/run.js b/lib/monitor/run.js @@ -260,7 +260,12 @@ function run(options) {\nchild.stdin.on('error', () => { });\nprocess.stdin.pipe(child.stdin);\n} else {\n+ if (child.stdout) {\nchild.stdout.pipe(process.stdout);\n+ } else {\n+ utils.log.error(`running an unsupported version of node ${process.version}`);\n+ utils.log.error('nodemon may not work as expected - please consider upgrading to LTS');\n+ }\n}\nbus.once('exit', function () {\n",
        "date": "01.02.2018 18:19:56",
        "repo": "remy/nodemon",
        "type": "fix",
        "sim_msg": "chore(runner): wait for debugger using `then` block\nCloses",
        "sim_diff": "diff --git a/lib/runner.ts b/lib/runner.ts @@ -36,6 +36,7 @@ export class Runner extends EventEmitter {\nplugins_: Plugins;\nrestartPromise: q.Promise<any>;\nframeworkUsesAfterEach: boolean;\n+ ready_?: wdpromise.Promise<void>;\nconstructor(config: Config) {\nsuper();\n@@ -49,16 +50,18 @@ export class Runner extends EventEmitter {\nprocess['_debugProcess'](process.pid);\nlet flow = wdpromise.controlFlow();\n- flow.execute(() => {\n- let nodedebug = require('child_process').fork('debug', ['localhost:5858']);\n+ this.ready_ = flow.execute(() => {\n+ let nodedebug =\n+ require('child_process').fork('debug', ['localhost:5858']);\nprocess.on('exit', function() {\nnodedebug.kill('SIGTERM');\n});\nnodedebug.on('exit', function() {\nprocess.exit(1);\n});\n- }, 'start the node debugger');\n- flow.timeout(1000, 'waiting for debugger to attach');\n+ }, 'start the node debugger').then(() => {\n+ return flow.timeout(1000, 'waiting for debugger to attach');\n+ });\n}\nif (config.capabilities && config.capabilities.seleniumAddress) {\n@@ -304,9 +307,13 @@ export class Runner extends EventEmitter {\nthrow new Error('Spec patterns did not match any files.');\n}\n+ // 0) Wait for debugger\n+ return q(this.ready_)\n+ .then(() => {\n// 1) Setup environment\n// noinspection JSValidateTypes\n- return this.driverprovider_.setupEnv()\n+ return this.driverprovider_.setupEnv();\n+ })\n.then(() => {\n// 2) Create a browser and setup globals\nbrowser_ = this.createBrowser(plugins);\n",
        "chatgpt_rag": "chore(monitor): handle unsupported node version in run.js"
    },
    {
        "msg": "fix(text.mdx): removed duplicate titles",
        "diff": "diff --git a/packages/chakra-ui-docs/docs/text.mdx b/packages/chakra-ui-docs/docs/text.mdx @@ -96,8 +96,6 @@ You can change the entire style of the text via props. For example, to change th\nText composes the [CBox](/box) component, so you can pass all Box style props.\n-## Slot\n-\n## Slots\n| Name | Description |\n",
        "date": "03.05.2020 18:36:20",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "sim_msg": "docs(button): change propsTable",
        "sim_diff": "diff --git a/packages/doc/content/components/components/button/outline.mdx b/packages/doc/content/components/components/button/outline.mdx @@ -47,4 +47,4 @@ You can use all differente compounds like `<Button />` and `<Button.Text />` com\n### Props\n-<PropsTable component=\"Button.Outline\" platform=\"web\" />\n+<PropsTable component=\"Button\" platform=\"web\" />\n",
        "chatgpt_rag": "docs(text): remove unnecessary slot section"
    },
    {
        "msg": "fix: allow windows users to install globally again\nFixes:",
        "diff": "diff --git a/lib/monitor/run.js b/lib/monitor/run.js @@ -347,7 +347,7 @@ function kill(child, signal, callback) {\n// We are using the standalone 'windows-kill' executable to send the\n// standard POSIX signal 'SIGINT' to the node process. This fixes #1720.\nconst windowsKill = path.normalize(\n- `${process.cwd()}/node_modules/nodemon/bin/windows-kill.exe`\n+ `${__dirname}/../../bin/windows-kill.exe`\n);\n// We have to detach the 'windows-kill' execution completely from this\n",
        "date": "30.06.2021 13:57:24",
        "repo": "remy/nodemon",
        "type": "fix",
        "sim_msg": "feat: Always log Stacktrace on unclean exit code",
        "sim_diff": "diff --git a/index.js b/index.js @@ -30,5 +30,7 @@ process.on(\"SIGINT\", shutdown);\nprocess.on(\"exit\", function(code) {\nLogger.info(\"exiting with code \" + code + \"...\");\n- Logger.debug(\"Stacktrace that lead to the process exiting:\", new Error().stack);\n+ if (code !== 0) {\n+ Logger.error(\"Stacktrace that lead to the process exiting:\", new Error().stack);\n+ }\n});\n",
        "chatgpt_rag": "fix: Update path for windows-kill executable in run.js"
    },
    {
        "msg": "fix: added a better description for the event table",
        "diff": "diff --git a/packages/chakra-ui-docs/docs/tabs.mdx b/packages/chakra-ui-docs/docs/tabs.mdx @@ -323,8 +323,8 @@ Tabs composes `Box` so you call pass all `Box` related props.\n### Tabs Events\n| Name | Description |\n-| ---------- | ------------------------ |\n-| `onChange` | Emits the @change event. |\n+| --------- | ------------------------------------------ |\n+| `@change` | Event emitted when the active tab changes. |\n### Tabs Slot\n",
        "date": "06.05.2020 16:37:00",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "sim_msg": "docs: Add React-example for active index in core-tabs",
        "sim_diff": "diff --git a/packages/core-tabs/readme.md b/packages/core-tabs/readme.md @@ -122,6 +122,47 @@ demo-->\nReactDOM.render(<Dynamic />, document.getElementById('jsx-dynamic-tabs'))\n</script>\n```\n+#### Active by index\n+```html\n+<!--demo-->\n+<div id=\"jsx-index-tabs\"></div>\n+<script type=\"text/jsx\">\n+ const IndexTabs = () => {\n+ const [tabIndex, setTabIndex] = React.useState(0)\n+ const handleTabsToggle = (event) => { setTabIndex(parseInt(event.target.getAttribute('tab'))) }\n+ const handleInputChange = (event) => { setTabIndex(parseInt(event.target.value)) }\n+\n+ return (\n+ <>\n+ <div>\n+ <label>\n+ Set active tab\n+ <input\n+ type=\"range\"\n+ value={tabIndex}\n+ min=\"0\"\n+ max=\"3\"\n+ step=\"1\"\n+ onChange={handleInputChange}\n+ />\n+ </label>\n+ </div>\n+ <CoreTabs tab={tabIndex} onTabsToggle={handleTabsToggle}>\n+ <button type=\"button\">Tab 1</button>\n+ <button type=\"button\">Tab 2</button>\n+ <button type=\"button\">Tab 3</button>\n+ <button type=\"button\">Tab 4</button>\n+ </CoreTabs>\n+ <div>Tabpanel 1</div>\n+ <div>Tabpanel 2</div>\n+ <div>Tabpanel 3</div>\n+ <div>Tabpanel 4</div>\n+ </>\n+ )\n+ }\n+ ReactDOM.render(<IndexTabs />, document.getElementById('jsx-index-tabs'))\n+</script>\n+```\n#### Single panel\n```html\n<!--demo-->\n",
        "chatgpt_rag": "docs: Add React-example for active index in core-tabs and update Tabs Events section in tabs.mdx"
    },
    {
        "msg": "fix(razzle): add back css minimizer",
        "diff": "diff --git a/packages/razzle/config/createConfigAsync.js b/packages/razzle/config/createConfigAsync.js @@ -877,7 +877,27 @@ module.exports = (\nminimize: true,\nminimizer: [\nnew TerserPlugin(webpackOptions.terserPluginOptions),\n+ new CssMinimizerPlugin({\n+ sourceMap: true,\n+ minify: async (data, inputMap) => {\n+ // eslint-disable-next-line global-require\n+ const CleanCSS = require('clean-css');\n+\n+ const [[filename, input]] = Object.entries(data);\n+ const minifiedCss = await new CleanCSS({ sourceMap: true }).minify({\n+ [filename]: {\n+ styles: input,\n+ sourceMap: inputMap,\n+ },\n+ });\n+ return {\n+ css: minifiedCss.styles,\n+ map: minifiedCss.sourceMap.toJSON(),\n+ warnings: minifiedCss.warnings,\n+ };\n+ },\n+ })\n],\n}\n}\n",
        "date": "07.02.2021 22:01:38",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "build(webpack): remove TerserPlugin, use default webpack minimizer (v1)",
        "sim_diff": "diff --git a/webpack.config.js b/webpack.config.js @@ -5,7 +5,6 @@ const path = require('path')\nconst { CleanWebpackPlugin } = require('clean-webpack-plugin')\nconst MiniCssExtractPlugin = require('mini-css-extract-plugin')\n-const TerserPlugin = require('terser-webpack-plugin')\nmodule.exports = {\nmode: devMode ? 'development' : 'production',\n@@ -36,9 +35,6 @@ module.exports = {\nmaxAssetSize: 500000\n},\n- optimization: {\n- minimizer: [new TerserPlugin()]\n- },\nplugins: [\nnew CleanWebpackPlugin(),\nnew MiniCssExtractPlugin({\n",
        "chatgpt_rag": "build(razzle): update minimizer options, add CssMinimizerPlugin with custom minify function (v1)"
    },
    {
        "msg": "fix(token): typo in documentation\nImplemantation -> Implementation",
        "diff": "diff --git a/contracts/token/StandardToken.sol b/contracts/token/StandardToken.sol @@ -8,7 +8,7 @@ import './ERC20.sol';\n/**\n* @title Standard ERC20 token\n*\n- * @dev Implemantation of the basic standard token.\n+ * @dev Implementation of the basic standard token.\n* @dev https://github.com/ethereum/EIPs/issues/20\n* @dev Based on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\n*/\n",
        "date": "30.06.2017 14:40:15",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "fix",
        "sim_msg": "fix: token-tests",
        "sim_diff": "diff --git a/src/main/token/token.spec.js b/src/main/token/token.spec.js import Token from './token';\nimport TestDb from '../db/test-db';\n-import initialTokens from 'main/assets/data/eth-tokens.json';\n+import EthTokens from 'main/assets/data/eth-tokens.json';\n+\n+const initialTokens = EthTokens.filter(t => t.networkId === 1);\ndescribe('Token model', () => {\nconst testItem = {\n@@ -42,7 +44,7 @@ describe('Token model', () => {\nit('findAll', async () => {\nlet all = await Token.findAll();\n// imit KI token from results\n- const tokenLength = initialTokens.length - 1;\n+ const tokenLength = initialTokens.length;\nexpect(all.length).toBe(tokenLength);\nawait Token.create(testItem);\nawait Token.create(testItem2);\n",
        "chatgpt_rag": "style: fix typo in StandardToken.sol file"
    },
    {
        "msg": "fix: grammar issues",
        "diff": "diff --git a/website/pages/static-export.mdx b/website/pages/static-export.mdx @@ -50,7 +50,7 @@ Razzle not only works with React, but also Reason, Elm, Vue, Angular, Svelte, an\nbehind the scenes razzle calls `render` function that exposed from `static_export` module and saves `html` string that you pass to `res.json()` into a html file. for `req` object there is only one property that is `url` which contains the url that we are going to render and save it's result to the html file.\nhtml file destination is relative to the `req.url`, for example if the url is `/product/A` html is going to get saved at `/build/product/A/index.html`.\n-you should call `renderToString()` (or what ever your framework gives you to do SSR) in this function send resonse to `res.json()`\n+you should call `renderToString()` (or what ever your framework gives you to do SSR) in this function and then send result to `res.json()`\n```js\nexport const render = (req, res) => {\n@@ -64,12 +64,12 @@ export const render = (req, res) => {\n};\n```\n-(you can re-export your ssr logic from server.js file and use it `static_export`)\n+(you can re-export your SRR logic from server.js file and use it `static_export`)\n#### routes()\n-you should also export a function called `routes` that returns an array of strings or a promise that will resolve array of strings. razzle will take the urls one by one and pass them one by one to `render`.\n-you should get all paths that your app has from your CMS in this method and return it at the end:\n+you should also export a function called `routes` that returns an array of strings or a promise that will resolve array of strings. razzle will take the urls and will pass them one by one to `render`.\n+you should get all paths that your app has from your CMS in this method and then return it:\n```js\nexport const routes = async () => {\n@@ -81,8 +81,8 @@ export const routes = async () => {\n#### page data\n-you may also need to save the data that your page uses to rehydrate the app on the client side.\n-you can also pass the `data` along the `html` to `res.json({ html, data })` and contents of data object will go inside the `page-data.json` file next to the html file.\n+you may also need to save the data that your page uses to re-hydrate the app on the client side.\n+you can pass the `data` along the `html` to `res.json({ html, data })` and contents of `data` object will get saved in the `page-data.json` next to the related `index.html` file.\n```js\nexport const render = async (req, res) => {\n@@ -98,7 +98,7 @@ export const render = async (req, res) => {\n};\n```\n-(you should also change how your app fetches data on client-side, so it reads data from `page-data.json`)\n+(NOTE: you should change how your app fetches data on client-side, to read data from `page-data.json`)\n## TypeScript Support\n",
        "date": "06.10.2020 03:05:47",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "style(renderer/function): minor js code indentation fixes\n[skip ci]",
        "sim_diff": "diff --git a/@ecomplus/storefront-renderer/functions/index.js b/@ecomplus/storefront-renderer/functions/index.js @@ -61,10 +61,12 @@ exports.ssr = (req, res, getCacheControl) => {\nconst encodedUrl = encodeURIComponent(url)\nif (NODE_ENV !== 'development') {\nres.set('Set-Cookie', `referrerUrl=${encodedUrl}; Max-Age=30`)\n- renderer('/404').then(html => {\n+ renderer('/404')\n+ .then(html => {\nsetStatusAndCache(404, `public, max-age=${(isLongCache ? 120 : 30)}`)\n.send(fixHtml(html))\n- }).catch(err => {\n+ })\n+ .catch(err => {\nsetStatusAndCache(404, 'public, max-age=5').end()\nconsole.error(err)\n})\n@@ -80,7 +82,6 @@ exports.ssr = (req, res, getCacheControl) => {\n}\nreturn renderer(url)\n-\n.then(html => {\nif (html) {\nsetStatusAndCache(200, isLongCache\n@@ -92,7 +93,6 @@ exports.ssr = (req, res, getCacheControl) => {\n}\nreturn false\n})\n-\n.catch(err => {\nfallback()\nconsole.error(err)\n",
        "chatgpt_rag": "style(website/pages): fix typos and improve code comments in static-export.mdx\n[skip ci]"
    },
    {
        "msg": "fix(docs): fix compatibility with IE",
        "diff": "diff --git a/docs/app/utils.js b/docs/app/utils.js @@ -15,6 +15,14 @@ export const parentComponents = _.flow(\n_.sortBy('_meta.name')\n)(semanticUIReact)\n+const mathSign = Math.sign || function (x) {\n+ x = +x\n+ if (x === 0 || isNaN(x)) {\n+ return x\n+ }\n+ return x > 0 ? 1 : -1\n+}\n+\n/**\n* Get the Webpack Context for all doc site examples.\n*/\n@@ -27,6 +35,7 @@ export const semanticUICSSRepoURL = 'https://github.com/Semantic-Org/Semantic-UI\nexport const scrollToAnchor = () => {\nconst anchor = location.hash && document.querySelector(location.hash)\n+ const offsetY = window.scrollY || window.pageYOffset\n// no scroll to target, stop\nif (!anchor) return\n@@ -37,9 +46,9 @@ export const scrollToAnchor = () => {\nif (elementTop === 0) return\n// hit max scroll boundaries, stop\n- const isScrolledToTop = scrollY === 0\n- const isScrolledToBottom = scrollY + document.body.clientHeight === document.body.scrollHeight\n- const scrollStep = Math.ceil((Math.abs(elementTop / 8))) * Math.sign(elementTop)\n+ const isScrolledToTop = offsetY === 0\n+ const isScrolledToBottom = offsetY + document.body.clientHeight === document.body.scrollHeight\n+ const scrollStep = Math.ceil((Math.abs(elementTop / 8))) * mathSign(elementTop)\nif (isScrolledToBottom && scrollStep > 0 || isScrolledToTop && scrollStep < 0) return\n",
        "date": "09.05.2017 02:18:16",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "sim_msg": "fix: lineBreak position",
        "sim_diff": "diff --git a/src/lib/core.js b/src/lib/core.js @@ -6979,17 +6979,18 @@ export default function (context, pluginCallButtons, plugins, lang, options, _re\nconst lineBreakerStyle = core._lineBreaker.style;\nif (component && !core.currentControllerName) {\n+ const ctxEl = context.element;\nlet scrollTop = 0;\n- let el = context.element.wysiwyg;\n+ let el = ctxEl.wysiwyg;\ndo {\nscrollTop += el.scrollTop;\nel = el.parentElement;\n} while (el && !/^(BODY|HTML)$/i.test(el.nodeName));\n- const wScroll = context.element.wysiwyg.scrollTop;\n+ const wScroll = ctxEl.wysiwyg.scrollTop;\nconst offsets = event._getEditorOffsets(null);\n- const componentTop = util.getOffset(component, context.element.wysiwygFrame).top + wScroll;\n- const y = e.pageY + scrollTop + (options.iframe && !options.toolbarContainer ? context.element.toolbar.offsetHeight : 0);\n+ const componentTop = util.getOffset(component, ctxEl.wysiwygFrame).top + wScroll;\n+ const y = e.pageY + scrollTop + (options.iframe && !options.toolbarContainer ? ctxEl.toolbar.offsetHeight : 0);\nconst c = componentTop + (options.iframe ? scrollTop : offsets.top);\nconst isList = util.isListCell(component.parentNode);\n@@ -7008,7 +7009,7 @@ export default function (context, pluginCallButtons, plugins, lang, options, _re\ncore._variable._lineBreakComp = component;\ncore._variable._lineBreakDir = dir;\nlineBreakerStyle.top = (top - wScroll) + 'px';\n- core._lineBreakerButton.style.left = (util.getOffset(component).left + (component.offsetWidth / 2) - 15) + 'px';\n+ core._lineBreakerButton.style.left = ((ctxEl.wysiwygFrame.offsetWidth / 2) - 15) + 'px';\nlineBreakerStyle.display = 'block';\n} // off line breaker\nelse if (lineBreakerStyle.display !== 'none') {\n",
        "chatgpt_rag": "refactor: added mathSign function for scrollStep calculation"
    },
    {
        "msg": "fix: Disable file import OK button until a file is selected\nfixes",
        "diff": "diff --git a/src/App.js b/src/App.js @@ -417,7 +417,9 @@ class App extends Component {\n<div>\n<span className={ style.centerSpan }>\n{options.action === IMPORT &&\n- <div className=\"button circular\" title=\"Ok\" onClick={this.processOptions}>\n+ <div className=\"button circular\" title=\"Ok\"\n+ disabled={options.action === IMPORT && !this.state.selectedFile}\n+ onClick={this.processOptions}>\n<FontAwesomeIcon icon={faCheck} />\n</div>\n}\n",
        "date": "01.04.2019 18:07:44",
        "repo": "iqtlabs/crviz",
        "type": "fix",
        "sim_msg": "feat(Application): wrap data, slate and profile scenes with filter components",
        "sim_diff": "diff --git a/components/core/Application.js b/components/core/Application.js @@ -46,6 +46,7 @@ import ApplicationLayout from \"~/components/core/ApplicationLayout\";\nimport WebsitePrototypeWrapper from \"~/components/core/WebsitePrototypeWrapper\";\nimport PortalsProvider from \"~/components/core/PortalsProvider\";\nimport CTATransition from \"~/components/core/CTATransition\";\n+import Filter from \"~/components/core/Filter\";\nimport { GlobalModal } from \"~/components/system/components/GlobalModal\";\nimport { OnboardingModal } from \"~/components/core/OnboardingModal\";\n@@ -347,6 +348,7 @@ export default class ApplicationPage extends React.Component {\nlet body = document.documentElement || document.body;\nif (page.id === \"NAV_SLATE\" || page.id === \"NAV_PROFILE\") {\nstate.loading = true;\n+ state.data = { id: details.id };\n}\nthis.setState(state, () => {\nif (!popstate) {\n@@ -493,12 +495,20 @@ export default class ApplicationPage extends React.Component {\nisMobile={this.state.isMobile}\nisMac={this.props.isMac}\nviewer={this.state.viewer}\n+ >\n+ <Filter\n+ isActive={!!this.state.viewer}\n+ viewer={this.state.viewer}\n+ page={page}\n+ data={this.state.data}\n+ isMobile={this.props.isMobile}\n+ onAction={this._handleAction}\n>\n{this.state.loading ? (\n<div\ncss={Styles.CONTAINER_CENTERED}\nstyle={{\n- width: \"100vw\",\n+ width: \"100%\",\nheight: \"100vh\",\n}}\n>\n@@ -507,6 +517,7 @@ export default class ApplicationPage extends React.Component {\n) : (\nscene\n)}\n+ </Filter>\n</ApplicationLayout>\n</PortalsProvider>\n<GlobalModal />\n",
        "chatgpt_rag": "fix(App): disable button when no file is selected in import action"
    },
    {
        "msg": "fix(search-input): Fix empty search input",
        "diff": "diff --git a/app/components/search-input.js b/app/components/search-input.js @@ -37,9 +37,9 @@ export default Component.extend({\nconst projectVersion = get(this, '_projectVersion');\n// Hide and don't run query if there's no search query\n- // if (!query) {\n- // return set(this, '_focused', false);\n- // }\n+ if (!query) {\n+ return set(this, '_focused', false);\n+ }\nconst params = {\nhitsPerPage: 15,\n",
        "date": "16.08.2017 22:34:58",
        "repo": "ember-learn/ember-api-docs",
        "type": "fix",
        "sim_msg": "fix(Search): re-enable \"shame on us\" state (submitting when no results)",
        "sim_diff": "diff --git a/components/Search/index.js b/components/Search/index.js @@ -296,7 +296,6 @@ class Search extends Component {\nfilters,\nsort,\nloadingFilters,\n- totalCount,\nallowFocus\n} = this.state\n@@ -305,7 +304,7 @@ class Search extends Component {\n<form onSubmit={this.onSubmit}>\n<Input\nvalue={searchQuery}\n- allowSearch={!!totalCount && searchQuery !== submittedQuery}\n+ allowSearch={searchQuery !== submittedQuery}\nallowFocus={allowFocus}\nonChange={this.onInputChange}\nonSearch={this.onSearch}\n",
        "chatgpt_rag": "refactor(SearchInput): handle hiding and not running query when there is no search query"
    },
    {
        "msg": "fix: don't use `options.iconPack`, yet",
        "diff": "diff --git a/packages/chakra-ui-core/src/utils/icons.js b/packages/chakra-ui-core/src/utils/icons.js import { merge } from 'lodash-es'\n/**\n- * @param {String} pack\n- * @param {Array} icon\n+ * @param {String} prefix - prefix for the icon pack\n+ * @param {Array} icon - icon definition\n* @returns {{path: string, viewBox: string, attrs: *}}\n*/\n-const createIcon = (pack, icon) => {\n+const createIcon = (prefix, icon) => {\nconst [w, h, content, svg, data, , attrs] = icon\nlet path\n@@ -21,12 +21,12 @@ const createIcon = (pack, icon) => {\nreturn `<g fill=\"currentColor\" class=\"${prefix}-group\">${paths.join('')}</g>`\n}\n- if (pack === 'fa') {\n+ if (prefix.startsWith('fa')) {\npath = Array.isArray(data)\n- ? createGroupedPath(data, pack)\n+ ? createGroupedPath(data, prefix.substr(0, 2))\n: createPath(data)\n} else {\n- path = pack.startsWith('fe') ? content : svg\n+ path = prefix.startsWith('fe') ? content : svg\n}\nreturn {\n@@ -38,17 +38,16 @@ const createIcon = (pack, icon) => {\n/**\n* @description Custom parse all Icons provided by user\n- * @param {String} pack - the name of the icon pack being used (fe, fa, mdi, etc)\n* @param {Object} iconSet - Registered Icons object\n* @returns {Object}\n*/\n-const parseIcons = (pack, iconSet = {}) => {\n+const parseIcons = (iconSet = {}) => {\nconst parseIcon = (iconObject) => {\n- const { icon, iconName } = iconObject\n+ const { icon, prefix, iconName } = iconObject\n// Is library icon\nif (icon) {\nreturn {\n- [`${iconName}`]: createIcon(pack, icon)\n+ [`${iconName}`]: createIcon(prefix, icon)\n}\n} else {\nreturn {}\n@@ -62,13 +61,12 @@ const parseIcons = (pack, iconSet = {}) => {\n/**\n* @description Parse Icon packs\n- * @param {String} pack - the name of the icon pack being used (fe, fa, mdi, etc)\n* @param {Object} iconSet Registered Icon set\n* @returns {Object} Parsed pack icons object\n*/\n-export const parsePackIcons = (pack, iconSet) => {\n+export const parsePackIcons = (iconSet) => {\n// TODO: Add support for other icon libraries\n// - Material Icons: these are string constants, and need lots of work\n// - Tailwind Icons (Hero icons)\n- return parseIcons(pack, iconSet)\n+ return parseIcons(iconSet)\n}\n",
        "date": "25.10.2021 14:39:05",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "sim_msg": "refactor(ui): Icon - do not use inline args to use prop types",
        "sim_diff": "diff --git a/packages/ui/src/ui/icon/icon.jsx b/packages/ui/src/ui/icon/icon.jsx @@ -18,13 +18,17 @@ const ICONS = {\nWARNING: 'warning',\n};\n-export const Icon = ({ className, glyph, as: Component, size, ...restProps }) => (\n+export const Icon = (props) => {\n+ const { className, glyph, as: Component, size, ...restProps } = props;\n+\n+ return (\n<Component className={cx(css.root, className, css[size])} {...restProps}>\n<svg className={css.icon}>\n<use xlinkHref={`#${glyph}`} />\n</svg>\n</Component>\n);\n+};\nIcon.ICONS = ICONS;\n",
        "chatgpt_rag": "refactor(utils): icons - use prefix instead of pack for icon creation and parsing"
    },
    {
        "msg": "fix(optimize): avoid `relative` preloader if external publicPath",
        "diff": "diff --git a/src/plugins/optimize-graph-plugin.js b/src/plugins/optimize-graph-plugin.js @@ -398,7 +398,9 @@ function hoistTransitiveImports(graph) {\nif (DEBUG) console.log(`Preloading JS for import(${spec}): ${js}`);\npreloads.push(\n...js.map(f => {\n- // TODO: should have `toImport(...)` somewhere here\n+ if (/^(https?:)?\\/\\//.test(graph.publicPath)) {\n+ return `import(${toImport(graph.publicPath, f)})`;\n+ }\nlet rel = posix.relative(posix.dirname('/' + fileName), posix.join(graph.publicPath, f));\nif (!rel.startsWith('.')) rel = './' + rel;\nreturn `import(${JSON.stringify(rel)})`;\n",
        "date": "07.12.2020 10:42:46",
        "repo": "preactjs/wmr",
        "type": "fix",
        "sim_msg": "refactor: allow custom host&port of plugin.req.request(uri, cb, opts)",
        "sim_diff": "diff --git a/lib/plugins/load-plugin.js b/lib/plugins/load-plugin.js @@ -631,6 +631,10 @@ function getFunction(fn) {\nreturn typeof fn === 'function' ? fn : null;\n}\n+function notEmptyStr(str) {\n+ return str && typeof str === 'string';\n+}\n+\nfunction getHookName(req) {\nvar name = req.headers[PLUGIN_HOOK_NAME_HEADER];\ndelete req.headers[PLUGIN_HOOK_NAME_HEADER];\n@@ -859,7 +863,7 @@ module.exports = function(options, callback) {\nprocess.on('unhandledRejection', handleGlobalError);\n}\n- var normalizeArgs = function (uri, cb, req, curUrl, isWs) {\n+ var normalizeArgs = function (uri, cb, req, curUrl, isWs, opts) {\nvar type = uri && typeof uri;\nvar headers, method;\nif (type !== 'string') {\n@@ -885,14 +889,19 @@ module.exports = function(options, callback) {\n}\nvar isHttps = uri.protocol === 'https:' || uri.protocol === 'wss:';\nheaders.host = uri.host;\n+ if (!opts || !notEmptyStr(opts.host)) {\nheaders[PROXY_ID_HEADER] = 1;\n+ uri.host = boundIp;\n+ uri.port = config.port;\n+ } else {\n+ uri.host = opts.host;\n+ uri.port = opts.port > 0 ? opts.port : (isHttps ? 443 : 80);\n+ }\nuri.protocol = null;\nif (isHttps) {\nheaders[config.HTTPS_FIELD] = 1;\n}\ndelete uri.hostname;\n- uri.host = boundIp;\n- uri.port = config.port;\nuri.headers = formatRawHeaders(headers, req);\nuri.agent = false;\nreturn [uri, cb];\n@@ -1193,8 +1202,8 @@ module.exports = function(options, callback) {\nheaders = formatRawHeaders(headers || svrRes.headers, svrRes);\nwriteHead.call(res, code, msg, headers);\n};\n- req.request = function(uri, cb) {\n- var args = normalizeArgs(uri, cb, req, curUrl);\n+ req.request = function(uri, cb, opts) {\n+ var args = normalizeArgs(uri, cb, req, curUrl, false, opts);\nuri = args[0];\ncb = args[1];\nuri.agent = false;\n@@ -1210,11 +1219,11 @@ module.exports = function(options, callback) {\naddErrorHandler(req, client);\nreturn client;\n};\n- req.passThrough = function(uri) {\n+ req.passThrough = function(uri, opts) {\nvar client = req.request(uri, function(_res) {\nres.writeHead(_res.statusCode, _res.statusMessage, _res.headers);\n_res.pipe(res);\n- });\n+ }, opts);\nreq.pipe(client);\n};\nhttpServer.emit('request', req, res);\n@@ -1312,15 +1321,21 @@ module.exports = function(options, callback) {\n];\nsocket.write(headers.join('\\r\\n'), 'binary');\n};\n- req.request = function(uri, cb, noParse) {\n- var args = normalizeArgs(uri, cb, req, curUrl, true);\n+ req.request = function(uri, cb, opts) {\n+ var args = normalizeArgs(uri, cb, req, curUrl, true, opts);\nuri = args[0];\ncb = args[1];\nuri.agent = false;\nvar client = httpRequest(uri);\n+ var keepRaw;\n+ if (opts === true) {\n+ keepRaw = true;\n+ } else if (opts) {\n+ keepRaw = opts.keepRaw;\n+ }\nclient.on('upgrade', function(_res, resSocket) {\nsvrRes = _res;\n- if (noParse !== true) {\n+ if (keepRaw !== true) {\nvar clientParser = addFrameHandler(_res, socket, maxWsPayload, true, false);\nvar serverParser = addFrameHandler(_res, resSocket, maxWsPayload, false, true);\nhanldeWsSignal(clientParser.receiver, serverParser.sender);\n@@ -1338,11 +1353,14 @@ module.exports = function(options, callback) {\naddErrorHandler(req, client);\nreturn client.end();\n};\n- req.passThrough = function(uri) {\n+ req.passThrough = function(uri, opts) {\n+ if (opts) {\n+ opts.keepRaw = true;\n+ }\nreq.request(uri, function(resSock) {\nsocket.writeHead(resSock.statusCode, resSock.statusMessage, resSock.headers);\nresSock.pipe(socket).pipe(resSock);\n- }, true);\n+ }, opts || true);\n};\nhttpServer.emit('upgrade', req, socket, head);\n}\n@@ -1394,18 +1412,24 @@ module.exports = function(options, callback) {\nif (tunnelServer) {\ninitConnectReq(req, socket);\nreq.sendEstablished(function() {\n- req.connect = function(cb) {\n+ req.connect = function(cb, opts) {\nvar headers = extractHeaders(req, pluginKeyMap);\nheaders['x-whistle-policy'] = 'tunnel';\n- headers[PROXY_ID_HEADER] = 1;\n- var client = httpRequest({\n+ var uri = {\nmethod: 'CONNECT',\nagent: false,\npath: headers.host,\n- host: boundIp,\n- port: config.port,\nheaders: headers\n- });\n+ };\n+ if (!opts || !notEmptyStr(opts.host)) {\n+ headers[PROXY_ID_HEADER] = 1;\n+ uri.host = boundIp;\n+ uri.port = config.port;\n+ } else {\n+ uri.host = opts.host;\n+ uri.port = opts.port > 0 ? opts.port : 80;\n+ }\n+ var client = httpRequest(uri);\nclient.on('connect', function(_res, svrSock) {\nif (_res.statusCode !== 200) {\nvar err = new Error('Tunneling socket could not be established, statusCode=' + _res.statusCode);\n@@ -1427,10 +1451,10 @@ module.exports = function(options, callback) {\naddErrorHandler(req, client);\nreturn client.end();\n};\n- req.passThrough = function() {\n+ req.passThrough = function(opts) {\nreq.connect(function(svrSock) {\nsvrSock.pipe(socket).pipe(svrSock);\n- });\n+ }, opts);\n};\ntunnelServer.emit('connect', req, socket, head);\n});\n",
        "chatgpt_rag": "refactor: add conditional import logic based on publicPath in hoistTransitiveImports function"
    },
    {
        "msg": "fix(razzle): fix for unreleased plugins",
        "diff": "diff --git a/packages/razzle/config/loadPlugins.js b/packages/razzle/config/loadPlugins.js @@ -12,8 +12,9 @@ function loadPlugin(plugin, paths) {\nreturn [plugin, {}];\n}\n- // Support for not released plugins\n- if (typeof plugin === 'object') {\n+ // Support for not released plugins without options\n+ // Use plugin.object if you need options\n+ if (typeof plugin === 'object' && !plugin.name && !plugin.object) {\nreturn [plugin, {}];\n}\n",
        "date": "11.11.2020 19:31:56",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "feat: add pluginBaseDir",
        "sim_diff": "diff --git a/lib/plugins/load-plugin.js b/lib/plugins/load-plugin.js @@ -925,7 +925,7 @@ module.exports = async function(options, callback) {\nPLUGIN_HOOK_NAME_HEADER = config.PLUGIN_HOOK_NAME_HEADER;\noptions.shortName = name.substring(name.indexOf('/') + 1);\n- var pluginDataDir = path.join(config.baseDir, '.plugins', options.name);\n+ var pluginDataDir = config.pluginBaseDir = path.join(config.baseDir, '.plugins', options.name);\nif (config.storage) {\npluginDataDir += encodeURIComponent('/' + config.storage);\n}\n",
        "chatgpt_rag": "refactor: improve support for not released plugins without options"
    },
    {
        "msg": "fix(razzle): disable pnp plugin with webpack 5",
        "diff": "diff --git a/packages/razzle/config/createConfigAsync.js b/packages/razzle/config/createConfigAsync.js @@ -475,16 +475,14 @@ module.exports = (\nadditionalAliases\n),\nplugins: [\n- // TODO: Remove when using webpack 5\n- PnpWebpackPlugin,\n- ],\n+ webpackMajor !== 5 && PnpWebpackPlugin,\n+ ].filter(x => x),\n},\nresolveLoader: {\nmodules: [paths.appNodeModules, paths.ownNodeModules],\nplugins: [\n- // TODO: Remove when using webpack 5\n- PnpWebpackPlugin.moduleLoader(module),\n- ],\n+ webpackMajor !== 5 && PnpWebpackPlugin.moduleLoader(module),\n+ ].filter(x => x),\n},\nmodule: {\nstrictExportPresence: true,\n@@ -587,7 +585,7 @@ module.exports = (\n? webpackOptions.nodeExternals : [webpackOptions.nodeExternals];\n// We need to tell webpack what to bundle into our Node bundle.\n- config.externals = (!IS_SERVERLESS ? [nodeExternalsFunc] : []).concat(webpackOptions.nodeExternals);\n+ config.externals = (!IS_SERVERLESS ? [nodeExternalsFunc] : []).concat(nodeExternals);\n// Specify webpack Node.js output path and filename\nconfig.output = {\n@@ -832,7 +830,7 @@ module.exports = (\n? webpackOptions.clientExternals : [webpackOptions.clientExternals];\n// We need to tell webpack what to bundle into our client bundle.\n- config.externals = webpackOptions.clientExternals;\n+ config.externals = clientExternals;\n// Specify the client output directory and paths. Notice that we have\n// changed the publiPath to just '/' from http://localhost:3001. This is because\n",
        "date": "15.01.2021 19:52:11",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "build(webpack): specify mainFields entry from the resolve option\nsee:",
        "sim_diff": "diff --git a/packages/manager/apps/web/webpack.config.js b/packages/manager/apps/web/webpack.config.js @@ -89,11 +89,9 @@ module.exports = (env = {}) => {\npath: path.resolve(__dirname, 'dist'),\nfilename: '[name].[chunkhash].bundle.js',\n},\n- // resolve: {\n- // alias: {\n- // jquery: path.resolve(__dirname, 'node_modules/jquery'),\n- // },\n- // },\n+ resolve: {\n+ mainFields: ['module', 'browser', 'main'],\n+ },\nplugins: [\nnew webpack.DefinePlugin({\n__WEBPACK_REGION__: `'${env.region.toUpperCase()}'`,\n",
        "chatgpt_rag": "build(webpack): update PnpWebpackPlugin usage based on webpack version\nsee:"
    },
    {
        "msg": "fix(editable): fix blur event only call onSubmit",
        "diff": "diff --git a/packages/chakra-ui-core/src/Editable/index.js b/packages/chakra-ui-core/src/Editable/index.js @@ -252,7 +252,6 @@ const EditableInput = {\nonKeyDown,\nvalue,\nonSubmit,\n- onCancel,\nsubmitOnBlur,\nplaceholder,\nisDisabled\n@@ -274,7 +273,7 @@ const EditableInput = {\n},\nnativeOn: {\nblur: event => {\n- submitOnBlur ? onSubmit() : onCancel()\n+ submitOnBlur && onSubmit()\nthis.$emit('blur', event)\n},\nchange: onChange,\n",
        "date": "19.03.2020 22:03:28",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "sim_msg": "fix(ui5-input): additional check added for robustness\nFixes:",
        "sim_diff": "diff --git a/packages/main/src/Input.js b/packages/main/src/Input.js @@ -996,7 +996,7 @@ class Input extends UI5Element {\n_handleInput(event) {\nconst inputDomRef = this.getInputDOMRefSync();\nconst emptyValueFiredOnNumberInput = this.value && this.isTypeNumber && !inputDomRef.value;\n- const eventType = event.inputType || event.detail.inputType;\n+ const eventType = event.inputType || (event.detail && event.detail.inputType);\nthis._shouldAutocomplete = eventType !== \"deleteContentBackward\" && !this.noTypeahead;\nthis.suggestionSelectionCanceled = false;\n",
        "chatgpt_rag": "refactor(chakra-ui-core): simplify blur event handling in EditableInput component\nRefactored the blur event handling in the EditableInput component to simplify the logic and improve readability. Removed unnecessary onCancel function call and updated the onSubmit condition for better performance."
    },
    {
        "msg": "fix: test more extensions in static_export",
        "diff": "diff --git a/packages/razzle/config/createConfigAsync.js b/packages/razzle/config/createConfigAsync.js @@ -170,7 +170,10 @@ module.exports = (\nlet webpackOptions = {};\n- const hasStaticExportJs = fs.existsSync(paths.appStaticExportJs + '.js');\n+ const hasStaticExportJs = fs.existsSync(paths.appStaticExportJs + '.js') ||\n+ fs.existsSync(paths.appStaticExportJs + '.jsx') ||\n+ fs.existsSync(paths.appStaticExportJs + '.ts') ||\n+ fs.existsSync(paths.appStaticExportJs + '.tsx');\nconst dotenv = getClientEnv(\ntarget,\n",
        "date": "23.09.2020 19:13:42",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "build(webpack): pass env variable to the shared configuration\nrelates to",
        "sim_diff": "diff --git a/packages/manager/apps/cloud/webpack.config.js b/packages/manager/apps/cloud/webpack.config.js @@ -43,7 +43,8 @@ function getNgAppInjections(regions) {\n}\nmodule.exports = (env = {}) => {\n- const { config } = webpackConfig({\n+ const { config } = webpackConfig(\n+ {\ntemplate: './client/index.html',\nbasePath: './client',\nlessPath: ['./client/app', './client/components', './node_modules'],\n@@ -59,7 +60,9 @@ module.exports = (env = {}) => {\n},\n],\n},\n- });\n+ },\n+ env,\n+ );\n// Extra config files\nconst extras = glob.sync('./.extras/**/*.js');\n",
        "chatgpt_rag": "build(razzle): check for multiple file extensions in static export path"
    },
    {
        "msg": "fix(scss): fix tests",
        "diff": "diff --git a/packages/razzle-plugin-scss/tests/index.test.js b/packages/razzle-plugin-scss/tests/index.test.js @@ -69,19 +69,16 @@ const nodeLoaderTests = [\nloaderFinder: cssLoaderFinder,\n},\n{\n- name: 'should not add postcss-loader',\n+ name: 'should add postcss-loader',\nloaderFinder: postCssLoaderFinder,\n- status: 'falsy',\n},\n{\n- name: 'should not add resolve-url-loader',\n+ name: 'should add resolve-url-loader',\nloaderFinder: resolveUrlLoaderFinder,\n- status: 'falsy',\n},\n{\n- name: 'should not add sass-loader',\n+ name: 'should add sass-loader',\nloaderFinder: sassLoaderFinder,\n- status: 'falsy',\n},\n];\n",
        "date": "16.04.2020 00:40:07",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "test(app): overriding css config with custom config",
        "sim_diff": "diff --git a/gridsome/lib/app/__tests__/index.spec.js b/gridsome/lib/app/__tests__/index.spec.js @@ -101,9 +101,10 @@ test('setup style loader options', async () => {\nconst app = await createApp(context, {\nlocalConfig: {\ncss: {\n+ split: true,\nloaderOptions: {\ncss: { url: false },\n- sass: { data: '@import \"variables.sass\";' },\n+ sass: { indentedSyntax: false },\nscss: { data: '@import \"variables.scss\";' },\nless: { strictMath: true },\nstylus: { use: ['plugin'] },\n@@ -119,6 +120,8 @@ test('setup style loader options', async () => {\nconst chain = await createClientConfig(app)\nconst oneOf = ['normal', 'modules']\n+ expect(app.config.css.split).toEqual(true)\n+\noneOf.forEach(oneOf => {\nconst css = chain.module.rule('css').oneOf(oneOf).use('css-loader').toConfig()\nconst postcss = chain.module.rule('postcss').oneOf(oneOf).use('postcss-loader').toConfig()\n@@ -132,7 +135,7 @@ test('setup style loader options', async () => {\nexpect(postcss.options.plugins).toHaveLength(2)\nexpect(postcss.options.plugins[0]).toEqual('plugin')\nexpect(postcss.options.plugins[1]).toBeInstanceOf(Function)\n- expect(sass.options.data).toEqual('@import \"variables.sass\";')\n+ expect(sass.options.indentedSyntax).toEqual(false)\nexpect(scss.options.data).toEqual('@import \"variables.scss\";')\nexpect(less.options.strictMath).toEqual(true)\nexpect(stylus.options.use[0]).toEqual('plugin')\n",
        "chatgpt_rag": "test(razzle-plugin-scss): update loader tests to add necessary loaders"
    },
    {
        "msg": "fix(sass-plugin): bumpup mini-css-extract-plugin version",
        "diff": "diff --git a/packages/razzle-plugin-scss/package.json b/packages/razzle-plugin-scss/package.json },\n\"dependencies\": {\n\"autoprefixer\": \"^8.6.2\",\n- \"mini-css-extract-plugin\": \"^0.4.0\",\n+ \"mini-css-extract-plugin\": \"^0.9.0\",\n\"node-sass-chokidar\": \"^1.3.0\",\n\"postcss-flexbugs-fixes\": \"^3.3.1\",\n\"postcss-scss\": \"^1.0.5\",\n",
        "date": "10.04.2020 18:15:14",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "docs(Favicons): fix pipeline",
        "sim_diff": "diff --git a/package.json b/package.json \"build:cssmin\": \"node-sass ./src/globals/scss/styles.scss ./assets/css/styles.min.css --output-style compressed && postcss ./assets/css/styles.min.css --no-map -u autoprefixer -rs\",\n\"build:css\": \"node-sass ./src/globals/scss -o ./assets/css --output-style compressed --source-map true && postcss ./assets/css/styles.css -d ./assets/css/ --use autoprefixer\",\n\"commitmsg\": \"validate-commit-msg\",\n- \"build:favicon\": \"convert assets/internal/wfp-favicon-png32.png assets/internal/wfp-favicon-png512.png -colors 256 docs/favicon.ico\",\n+ \"build:favicon\": \"convert ./src/assets/internal/wfp-favicon-png32.png ./src/assets/internal/wfp-favicon-png512.png -colors 256 docs/favicon.ico\",\n\"contributors:add\": \"all-contributors add\",\n\"contributors:generate\": \"all-contributors generate\",\n\"lint\": \"eslint src\",\n",
        "chatgpt_rag": "build(scss): update mini-css-extract-plugin version to 0.9.0"
    },
    {
        "msg": "fix(Responsive): fix types in typings",
        "diff": "diff --git a/src/addons/Responsive/Responsive.d.ts b/src/addons/Responsive/Responsive.d.ts @@ -28,12 +28,12 @@ export interface ResponsiveProps {\n}\nexport interface ResponsiveOnUpdateData extends ResponsiveProps {\n- width: string;\n+ width: number;\n}\nexport interface ResponsiveWidthShorthand {\n- minWidth: number;\n- maxWidth?: number;\n+ minWidth?: number | string;\n+ maxWidth?: number | string;\n}\ndeclare class Responsive extends React.Component<ResponsiveProps, {}> {\n",
        "date": "11.03.2018 14:10:49",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "sim_msg": "refactor(pill): update props to accept incoming Chakra props",
        "sim_diff": "diff --git a/src/components/Pill.tsx b/src/components/Pill.tsx import React from \"react\"\n-import { Flex } from \"@chakra-ui/react\"\n+import { Flex, FlexProps } from \"@chakra-ui/react\"\n-export interface IProps {\n+export interface IProps extends FlexProps {\nchildren?: React.ReactNode\nclassName?: string\nisSecondary?: boolean\n@@ -12,7 +12,8 @@ const Pill: React.FC<IProps> = ({\nchildren,\nclassName,\nisSecondary,\n- color,\n+ background,\n+ ...rest\n}) => {\nreturn isSecondary ? (\n<Flex\n@@ -28,12 +29,13 @@ const Pill: React.FC<IProps> = ({\nborderRadius=\"base\"\nfontSize=\"xs\"\nclassName={className}\n+ {...rest}\n>\n{children}\n</Flex>\n) : (\n<Flex\n- backgroundColor={color ? color : \"primary100\"}\n+ background={background ?? \"primary100\"}\ndisplay=\"inline-block\"\ncolor=\"black300\"\ntextTransform=\"uppercase\"\n@@ -44,6 +46,7 @@ const Pill: React.FC<IProps> = ({\nfontSize=\"xs\"\nborderRadius=\"base\"\nclassName={className}\n+ {...rest}\n>\n{children}\n</Flex>\n",
        "chatgpt_rag": "refactor(responsive): update width props to accept number type and minWidth and maxWidth props to accept number or string types"
    },
    {
        "msg": "fix: reduce help output (a teeny bit)",
        "diff": "diff --git a/doc/cli/help.txt b/doc/cli/help.txt -I, --no-stdin ........... don't try to read from stdin.\n-C, --on-change-only ..... execute script on change only, not startup\n--no-colors .............. disable color output\n+ --signal <signal> ........ use specified kill signal instead of default (ex. SIGTERM)\n-d, --delay n ............ debounce restart for \"n\" seconds.\n--exitcrash .............. exit on crash, allows use of nodemon with daemon\ntools like forever.js.\n-v, --version ............ current nodemon version.\n-h, --help ............... you're looking at it.\n--help <topic> ........... help on a specific feature. Try \"--help topics\".\n- --signal <signal> ........ use specified kill signal instead of default (ex. SIGTERM)\n-- <your args> ........... to tell nodemon stop slurping arguments.\nNote: if the script is omitted, nodemon will try to read \"main\" from\nExamples:\n$ nodemon server.js\n- $ nodemon --config my/custom/nodemon.json server.js\n$ nodemon -w ../foo server.js apparg1 apparg2\n- $ PORT=8000 nodemon --debug-brk server.js\n$ nodemon --exec python app.py\n$ nodemon --exec \"make build\" -e \"styl hbs\"\n- $ nodemon app.js -- -v\n+ $ nodemon app.js -- --inspect\nFor more details see http://github.com/remy/nodemon/\n",
        "date": "04.12.2017 22:27:16",
        "repo": "remy/nodemon",
        "type": "fix",
        "sim_msg": "chore: Some windows test case weirdness",
        "sim_diff": "diff --git a/backend/test/lib/utils/LinuxToolsHelper_spec.js b/backend/test/lib/utils/LinuxToolsHelper_spec.js @@ -9,7 +9,7 @@ should.config.checkProtoEql = false;\ndescribe(\"LinuxToolsHelper\", function () {\nit(\"Should parse /proc/meminfo Kernel 3.4.39 from roborock s5 correctly\", async function() {\n- let data = fs.readFileSync(path.join(__dirname, \"/res/meminfo_3.4.39_roborock_s5.txt\")).toString();\n+ let data = fs.readFileSync(path.join(__dirname, \"/res/meminfo_3.4.39_roborock_s5.txt\")).toString().replaceAll(\"\\r\", \"\");\nlet expected = JSON.parse(fs.readFileSync(path.join(__dirname, \"/res/meminfo_3.4.39_roborock_s5.json\")).toString());\nlet actual = LinuxToolsHelper.PARSE_PROC_MEMINFO(data);\n@@ -18,7 +18,7 @@ describe(\"LinuxToolsHelper\", function () {\n});\nit(\"Should parse /proc/meminfo Kernel 3.4.39 from viomi v7 correctly\", async function() {\n- let data = fs.readFileSync(path.join(__dirname, \"/res/meminfo_3.4.39_viomi_v7.txt\")).toString();\n+ let data = fs.readFileSync(path.join(__dirname, \"/res/meminfo_3.4.39_viomi_v7.txt\")).toString().replaceAll(\"\\r\", \"\");\nlet expected = JSON.parse(fs.readFileSync(path.join(__dirname, \"/res/meminfo_3.4.39_viomi_v7.json\")).toString());\nlet actual = LinuxToolsHelper.PARSE_PROC_MEMINFO(data);\n@@ -27,7 +27,7 @@ describe(\"LinuxToolsHelper\", function () {\n});\nit(\"Should parse /proc/meminfo Kernel 4.9.191 from dreame z10 correctly\", async function() {\n- let data = fs.readFileSync(path.join(__dirname, \"/res/meminfo_4.9.191_dreame_z10.txt\")).toString();\n+ let data = fs.readFileSync(path.join(__dirname, \"/res/meminfo_4.9.191_dreame_z10.txt\")).toString().replaceAll(\"\\r\", \"\");\nlet expected = JSON.parse(fs.readFileSync(path.join(__dirname, \"/res/meminfo_4.9.191_dreame_z10.json\")).toString());\nlet actual = LinuxToolsHelper.PARSE_PROC_MEMINFO(data);\n",
        "chatgpt_rag": "feat: Added new option --inspect to nodemon CLI help text."
    },
    {
        "msg": "fix(Time Series): let start and end datasets be the same. Fixes",
        "diff": "diff --git a/src/features/dataset-controls/DatasetSlider.js b/src/features/dataset-controls/DatasetSlider.js @@ -68,12 +68,9 @@ class DatasetSlider extends React.Component {\nif(start){\nthis.props.setStartUuid(start.owner);\n}\n- if(end && end !== start){\n+ if(end){\nthis.props.setEndUuid(end.owner);\n}\n- if(end && end === start){\n- this.props.setEndUuid('UNSET');\n- }\n}\nformatTicks = (t) => {\n",
        "date": "06.05.2019 15:37:15",
        "repo": "iqtlabs/crviz",
        "type": "fix",
        "sim_msg": "chore: clean up range selection handler",
        "sim_diff": "diff --git a/components/core/DataView.js b/components/core/DataView.js @@ -268,25 +268,11 @@ export default class DataView extends React.Component {\nlet i = e.target.name;\nif (this.state.isShiftDown && this.state.lastSelectedItemIndex !== i) {\n- const start = Math.min(i, this.state.lastSelectedItemIndex);\n- const stop = Math.max(i, this.state.lastSelectedItemIndex) + 1;\n-\n- let rangeSelected = {};\n-\n- if (checked[i]) {\n- for (let i = start; i < stop; i++) {\n- delete checked[i];\n- }\n- } else {\n- for (let i = start; i < stop; i++) {\n- rangeSelected[i] = true;\n- }\n- }\n-\n- let newSelection = Object.assign({}, checked, rangeSelected);\n- this.setState({ checked: newSelection, lastSelectedItemIndex: i });\n-\n- return;\n+ return this._handleShiftClick({\n+ currentSelectedItemIndex: i,\n+ lastSelectedItemIndex: this.state.lastSelectedItemIndex,\n+ checked,\n+ });\n}\nif (e.target.value === false) {\n@@ -333,33 +319,39 @@ export default class DataView extends React.Component {\nlet checked = this.state.checked;\nif (this.state.isShiftDown && this.state.lastSelectedItemIndex !== i) {\n- const start = Math.min(i, this.state.lastSelectedItemIndex);\n- const stop = Math.max(i, this.state.lastSelectedItemIndex) + 1;\n+ return this._handleShiftClick({\n+ currentSelectedItemIndex: i,\n+ lastSelectedItemIndex: this.state.lastSelectedItemIndex,\n+ checked,\n+ });\n+ }\n+\n+ if (checked[i]) {\n+ delete checked[i];\n+ } else {\n+ checked[i] = true;\n+ }\n+ this.setState({ checked, lastSelectedItemIndex: i });\n+ };\n+\n+ _handleShiftClick = ({ currentSelectedItemIndex, lastSelectedItemIndex, checked }) => {\n+ const start = Math.min(currentSelectedItemIndex, lastSelectedItemIndex);\n+ const stop = Math.max(currentSelectedItemIndex, lastSelectedItemIndex) + 1;\nlet rangeSelected = {};\n- if (checked[i]) {\nfor (let i = start; i < stop; i++) {\n+ if (checked[currentSelectedItemIndex]) {\ndelete checked[i];\n- }\n} else {\n- for (let i = start; i < stop; i++) {\nrangeSelected[i] = true;\n}\n}\nlet newSelection = Object.assign({}, checked, rangeSelected);\n- this.setState({ checked: newSelection, lastSelectedItemIndex: i });\n+ this.setState({ checked: newSelection, lastSelectedItemIndex: currentSelectedItemIndex });\nreturn;\n- }\n-\n- if (checked[i]) {\n- delete checked[i];\n- } else {\n- checked[i] = true;\n- }\n- this.setState({ checked, lastSelectedItemIndex: i });\n};\n_handleDelete = async (cid, id) => {\n",
        "chatgpt_rag": "chore: refactor endUuid setting logic in DatasetSlider component"
    },
    {
        "msg": "fix: watch count regression\n* chore: revert package\n* fix: move to array of watched dirs\nInstead of individually listing them.\nFixes",
        "diff": "diff --git a/lib/monitor/watch.js b/lib/monitor/watch.js @@ -39,25 +39,29 @@ function watch() {\nvar promises = [];\nvar watchedFiles = [];\n- dirs.forEach(function (dir) {\n- var promise = new Promise(function (resolve) {\n- var dotFilePattern = /[/\\\\]\\./;\n+ const promise = new Promise(function (resolve) {\n+ const dotFilePattern = /[/\\\\]\\./;\nvar ignored = Array.from(rootIgnored);\n+ const addDotFile = dirs.filter(dir => dir.match(dotFilePattern));\n// don't ignore dotfiles if explicitly watched.\n- if (!dir.match(dotFilePattern)) {\n+ if (addDotFile.length === 0) {\nignored.push(dotFilePattern);\n}\n+ dirs = dirs.map(dir => {\n// if the directory is a file, it somehow causes\n// windows to lose the filename upon change\nif (fs.statSync(dir).isFile()) {\ndir = path.dirname(dir);\n}\n+ return dir;\n+ });\n+\nvar watchOptions = {\nignorePermissionErrors: true,\n- cwd: dir,\n+ cwd: process.cwd(), // dir,\nignored: ignored,\npersistent: true,\nusePolling: config.options.legacyWatch || false,\n@@ -73,7 +77,7 @@ function watch() {\n}\nvar watcher = chokidar.watch(\n- dir,\n+ dirs,\nObject.assign({}, watchOptions, config.watchOptions || {})\n);\n@@ -114,10 +118,12 @@ function watch() {\nwatchers.push(watcher);\n});\n- promises.push(promise);\n- });\n- return Promise.all(promises).then(function (res) {\n+ return promise.catch(e => {\n+ setTimeout(() => {\n+ throw e;\n+ });\n+ }).then(function (res) {\nutils.log.detail(`watching ${watchedFiles.length} file${\nwatchedFiles.length === 1 ? '' : 's'}`);\nreturn watchedFiles;\n",
        "date": "13.03.2018 21:45:50",
        "repo": "remy/nodemon",
        "type": "fix",
        "sim_msg": "refactor(watcher): refactor lib/watcher.js to ES2015",
        "sim_diff": "diff --git a/lib/watcher.js b/lib/watcher.js -var chokidar = require('chokidar')\n-var mm = require('minimatch')\n-var expandBraces = require('expand-braces')\n+'use strict'\n-var helper = require('./helper')\n-var log = require('./logger').create('watcher')\n+const chokidar = require('chokidar')\n+const mm = require('minimatch')\n+const expandBraces = require('expand-braces')\n-var DIR_SEP = require('path').sep\n+const helper = require('./helper')\n+const log = require('./logger').create('watcher')\n-// Get parent folder, that be watched (does not contain any special globbing character)\n-var baseDirFromPattern = function (pattern) {\n+const DIR_SEP = require('path').sep\n+\n+function baseDirFromPattern (pattern) {\nreturn pattern\n.replace(/[/\\\\][^/\\\\]*\\*.*$/, '') // remove parts with *\n.replace(/[/\\\\][^/\\\\]*[!+]\\(.*$/, '') // remove parts with !(...) and +(...)\n.replace(/[/\\\\][^/\\\\]*\\)\\?.*$/, '') || DIR_SEP // remove parts with (...)?\n}\n-var watchPatterns = function (patterns, watcher) {\n- // filter only unique non url patterns paths\n- var pathsToWatch = []\n- var uniqueMap = {}\n- var path\n+function watchPatterns (patterns, watcher) {\n+ let pathsToWatch = new Set()\n// expand ['a/{b,c}'] to ['a/b', 'a/c']\n- patterns = expandBraces(patterns)\n-\n- patterns.forEach(function (pattern) {\n- path = baseDirFromPattern(pattern)\n- if (!uniqueMap[path]) {\n- uniqueMap[path] = true\n- pathsToWatch.push(path)\n- }\n- })\n+ expandBraces(patterns)\n+ .forEach(path => pathsToWatch.add(baseDirFromPattern(path)))\n+ pathsToWatch = Array.from(pathsToWatch)\n// watch only common parents, no sub paths\n- pathsToWatch.forEach(function (path) {\n- if (!pathsToWatch.some(function (p) {\n- return p !== path && path.substr(0, p.length + 1) === p + DIR_SEP\n- })) {\n+ pathsToWatch.forEach(path => {\n+ if (!pathsToWatch.some(p => p !== path && path.substr(0, p.length + 1) === p + DIR_SEP)) {\nwatcher.add(path)\nlog.debug('Watching \"%s\"', path)\n}\n})\n}\n-// Function to test if a path should be ignored by chokidar.\n-var createIgnore = function (patterns, excludes) {\n+function checkAnyPathMatch (patterns, path) {\n+ return patterns.some(pattern => mm(path, pattern, {dot: true}))\n+}\n+\n+function createIgnore (patterns, excludes) {\nreturn function (path, stat) {\nif (!stat || stat.isDirectory()) {\nreturn false\n}\n- // Check if the path matches any of the watched patterns.\n- if (!patterns.some(function (pattern) {\n- return mm(path, pattern, {dot: true})\n- })) {\n- return true\n- }\n-\n- // Check if the path matches any of the exclude patterns.\n- if (excludes.some(function (pattern) {\n- return mm(path, pattern, {dot: true})\n- })) {\n- return true\n- }\n-\n- return false\n+ return !checkAnyPathMatch(patterns, path) || checkAnyPathMatch(excludes, path)\n}\n}\n-var onlyWatchedTrue = function (pattern) {\n- return pattern.watched\n+function getWatchedPatterns (patterns) {\n+ return patterns\n+ .reduce((array, pattern) => {\n+ if (pattern.watched) {\n+ array.push(pattern.pattern)\n}\n-\n-var getWatchedPatterns = function (patternObjects) {\n- return patternObjects.filter(onlyWatchedTrue).map(function (patternObject) {\n- return patternObject.pattern\n- })\n+ return array\n+ }, [])\n}\nexports.watch = function (patterns, excludes, fileList, usePolling, emitter) {\n- var watchedPatterns = getWatchedPatterns(patterns)\n- var options = {\n+ const watchedPatterns = getWatchedPatterns(patterns)\n+\n+ const watcher = new chokidar.FSWatcher({\nusePolling: usePolling,\nignorePermissionErrors: true,\nignoreInitial: true,\nignored: createIgnore(watchedPatterns, excludes)\n- }\n- var chokidarWatcher = new chokidar.FSWatcher(options)\n+ })\n- watchPatterns(watchedPatterns, chokidarWatcher)\n+ watchPatterns(watchedPatterns, watcher)\n- var bind = function (fn) {\n- return function (path) {\n- return fn.call(fileList, helper.normalizeWinPath(path))\n- }\n- }\n-\n- // register events\n- chokidarWatcher.on('add', bind(fileList.addFile))\n- .on('change', bind(fileList.changeFile))\n- .on('unlink', bind(fileList.removeFile))\n- // If we don't subscribe; unhandled errors from Chokidar will bring Karma down\n- // (see GH Issue #959)\n- .on('error', function (e) {\n- log.debug(e)\n- })\n+ watcher\n+ .on('add', path => fileList.addFile(helper.normalizeWinPath(path)))\n+ .on('change', path => fileList.changeFile(helper.normalizeWinPath(path)))\n+ .on('unlink', path => fileList.removeFile(helper.normalizeWinPath(path)))\n+ .on('error', log.debug.bind(log))\n- emitter.on('exit', function (done) {\n- chokidarWatcher.close()\n+ emitter.on('exit', done => {\n+ watcher.close()\ndone()\n})\n- return chokidarWatcher\n+ return watcher\n}\n-exports.watch.$inject = ['config.files', 'config.exclude', 'fileList', 'config.usePolling',\n- 'emitter']\n+exports.watch.$inject = [\n+ 'config.files',\n+ 'config.exclude',\n+ 'fileList',\n+ 'config.usePolling',\n+ 'emitter'\n+]\n",
        "chatgpt_rag": "refactor(monitor): refactor lib/monitor/watch.js to ES2015 syntax and improve error handling"
    },
    {
        "msg": "fix(Responsive): fix usage of `window` for SSR",
        "diff": "diff --git a/src/addons/Responsive/Responsive.js b/src/addons/Responsive/Responsive.js @@ -7,6 +7,7 @@ import {\neventStack,\ngetElementType,\ngetUnhandledProps,\n+ isBrowser,\nMETA,\n} from '../../lib'\n@@ -55,7 +56,8 @@ export default class Responsive extends Component {\nconstructor(...args) {\nsuper(...args)\n- this.state = { width: window.innerWidth }\n+\n+ this.state = { width: isBrowser ? window.innerWidth : 0 }\n}\ncomponentDidMount() {\n",
        "date": "17.10.2017 20:43:07",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "sim_msg": "docs: add scss language to responsive code blocks",
        "sim_diff": "diff --git a/www/src/pages/foundations/responsive.jsx b/www/src/pages/foundations/responsive.jsx @@ -59,11 +59,15 @@ const Responsive = () => {\n<p>\nExample when the screen is narrower than <code>md</code> breakpoint.\n</p>\n- <CodeBlock>{'@include media-breakpoint-down(map-get($grid-breakpoints, \\'md\\')) { // styles here }'}</CodeBlock>\n+ <CodeBlock className=\"language-scss\">\n+ {'@include media-breakpoint-down(map-get($grid-breakpoints, \\'md\\')) { // styles here }'}\n+ </CodeBlock>\n<p>\nExample when the screen is wider than <code>lg</code> breakpoint.\n</p>\n- <CodeBlock>{'@include media-breakpoint-up(map-get($grid-breakpoints, \\'lg\\')) { // styles here }'}</CodeBlock>\n+ <CodeBlock className=\"language-scss\">\n+ {'@include media-breakpoint-up(map-get($grid-breakpoints, \\'lg\\')) { // styles here }'}\n+ </CodeBlock>\n</Container>\n</Layout>\n);\n",
        "chatgpt_rag": "feat: update Responsive component to handle server-side rendering by checking if browser is available"
    },
    {
        "msg": "fix: fix release workflow",
        "diff": "diff --git a/.github/workflows/release.yml b/.github/workflows/release.yml @@ -30,7 +30,7 @@ jobs:\nls ~/.npmrc >/dev/null 2>&1 && \\\n[[ $(git describe --exact-match 2> /dev/null || :) =~ -canary ]]; \\\nthen\n- yarn run lerna publish from-git --npm-tag canary --yes\n+ yarn run lerna publish from-git --no-verify-access --npm-tag canary --yes\nelse\necho \"Did not publish canary\"\nfi\n@@ -42,7 +42,7 @@ jobs:\nls ~/.npmrc >/dev/null 2>&1 && \\\n[[ ! $(git describe --exact-match 2> /dev/null || :) =~ -canary ]]; \\\nthen\n- yarn run lerna publish from-git --yes\n+ yarn run lerna publish from-git --no-verify-access --yes\nelse\necho \"Did not publish\"\nfi\n",
        "date": "13.03.2021 15:25:03",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "ci: clean up pre-release logic",
        "sim_diff": "diff --git a/.github/workflows/release.yml b/.github/workflows/release.yml @@ -35,6 +35,6 @@ jobs:\nrun: |\nnpm run lerna:publish:next\n- name: Release\n- if: !contains(${{GITHUB_REF}}, 'alpha') && !contains(${{GITHUB_REF}}, 'beta') && !contains(${{GITHUB_REF}}, 'rc')\n+ if: contains(${{GITHUB_REF}}, 'alpha') == false && contains(${{GITHUB_REF}}, 'beta') == false && contains(${{GITHUB_REF}}, 'rc') == false\nrun: |\nnpm run lerna:publish:next\n",
        "chatgpt_rag": "build: update lerna publish command options in release workflow"
    },
    {
        "msg": "fix(persistence of notes): user doesn't have to click away to get note to work",
        "diff": "diff --git a/src/features/tooltip/Tooltip.js b/src/features/tooltip/Tooltip.js @@ -14,6 +14,10 @@ class TooltipControls extends React.Component {\nconstructor(props){\nsuper(props)\nthis.state = this.initialState;\n+ /*this.state = {\n+ ...this.state,\n+ showNote:false\n+ }*/\n}\nget initialState(){\n@@ -23,7 +27,6 @@ class TooltipControls extends React.Component {\nwidth:\"300px\",\nposition: [200,200],\ncurrentLabel:\"\",\n- showNote: false,\nnote: {\nid:'',\nnote:{\n@@ -68,7 +71,7 @@ class TooltipControls extends React.Component {\nawait this.setState({note});\nawait this.props.addNote(this.state.note);\n- this.resetBuilder()\n+ //this.resetBuilder()\n} catch(error){\nalert('No search key')\n}\n@@ -96,9 +99,6 @@ class TooltipControls extends React.Component {\ncomponentDidUpdate = (prevProps) => {\nif (prevProps.data !== this.props.data) {\n- if(this.props.data.fieldValue){\n- }\n- else{\nvar note = {...this.state.note}\nnote.id = this.props.data.CRVIZ._SEARCH_KEY\nif (note.id in this.props.notes){\n@@ -111,7 +111,6 @@ class TooltipControls extends React.Component {\n}\n}\n}\n- }\nrender() {\nconst style = {\n",
        "date": "17.07.2019 11:34:54",
        "repo": "iqtlabs/crviz",
        "type": "fix",
        "sim_msg": "refactor(ffe-form-react): rewrite tooltip to functional component",
        "sim_diff": "diff --git a/packages/ffe-form-react/src/Tooltip.js b/packages/ffe-form-react/src/Tooltip.js -import React from 'react';\n+import React, { useState, useRef } from 'react';\nimport { bool, func, node, string, number } from 'prop-types';\nimport classNames from 'classnames';\nimport Collapse from '@sb1/ffe-collapse-react';\nimport { v4 as uuid } from 'uuid';\n-class Tooltip extends React.Component {\n- constructor({ isOpen }) {\n- super();\n- this.state = {\n- isOpen: !!isOpen,\n- };\n- this.onToggle = this.onToggle.bind(this);\n- this.tooltipId = uuid();\n- this.tooltipButtonId = uuid();\n- }\n-\n- onToggle(evt) {\n- this.setState(prevState => ({ isOpen: !prevState.isOpen }));\n- if (this.props.onClick) {\n- this.props.onClick(evt);\n- }\n- }\n-\n- render() {\n- const {\n+const Tooltip = ({\n+ isOpen,\n'aria-controls': ariaControls,\n'aria-label': ariaLabel,\nchildren,\n@@ -32,38 +14,47 @@ class Tooltip extends React.Component {\nonClick,\ntabIndex,\n...rest\n- } = this.props;\n+}) => {\n+ const tooltipButtonId = useRef(uuid).current;\n+ const tooltipId = useRef(uuid).current;\n- const { isOpen } = this.state;\n+ const [_isOpen, setIsOpen] = useState(!!isOpen);\n+\n+ const handleToogle = evt => {\n+ setIsOpen(prev => !prev);\n+ if (onClick) {\n+ onClick(evt);\n+ }\n+ };\nreturn (\n<span\n{...rest}\nclassName={classNames('ffe-tooltip', {\n- 'ffe-tooltip--open': isOpen,\n+ 'ffe-tooltip--open': _isOpen,\n})}\n>\n<button\n- aria-expanded={isOpen}\n- aria-controls={children ? this.tooltipId : ariaControls}\n+ aria-expanded={_isOpen}\n+ aria-controls={children ? tooltipId : ariaControls}\naria-label={ariaLabel}\nclassName=\"ffe-tooltip__icon\"\n- onClick={this.onToggle}\n+ onClick={handleToogle}\ntype=\"button\"\ntabIndex={tabIndex}\n- id={this.tooltipButtonId}\n+ id={tooltipButtonId}\n>\n<span aria-hidden={true}>?</span>\n</button>\n{children && (\n<Collapse\nclassName=\"ffe-tooltip__text\"\n- id={this.tooltipId}\n- isOpen={isOpen}\n+ id={tooltipId}\n+ isOpen={_isOpen}\n>\n<div\nclassName={classNames('ffe-small-text', className)}\n- role={isOpen ? 'status' : 'none'}\n+ role={_isOpen ? 'status' : 'none'}\n>\n{children}\n</div>\n@@ -71,8 +62,7 @@ class Tooltip extends React.Component {\n)}\n</span>\n);\n- }\n-}\n+};\nTooltip.propTypes = {\n/** Provide the id of the controlled element *unless* you're sending in children */\n",
        "chatgpt_rag": "refactor(features/tooltip): convert TooltipControls class component to functional component"
    },
    {
        "msg": "fix(types): swap `declare` order for `*.module.css` files",
        "diff": "diff --git a/types.d.ts b/types.d.ts @@ -41,18 +41,18 @@ declare interface NodeModule {\n}\ndeclare var module: NodeModule;\n-declare module '*.css' { const url: string; export default url; }\n-declare module '*.scss' { const url: string; export default url; }\n-declare module '*.sass' { const url: string; export default url; }\n-declare module '*.styl' { const url: string; export default url; }\n-\n/** Maps authored classNames to their CSS Modules -suffixed generated classNames. */\n-interface Mapping { [key: string]: string; }\n+type Mapping = Record<string, string>;\ndeclare module '*.module.css' { const mapping: Mapping; export default mapping; }\ndeclare module '*.module.scss' { const mapping: Mapping; export default mapping; }\ndeclare module '*.module.sass' { const mapping: Mapping; export default mapping; }\ndeclare module '*.module.styl' { const mapping: Mapping; export default mapping; }\n+declare module '*.css' { const url: string; export default url; }\n+declare module '*.scss' { const url: string; export default url; }\n+declare module '*.sass' { const url: string; export default url; }\n+declare module '*.styl' { const url: string; export default url; }\n+\n// Import Prefixes\ndeclare module 'json:';\ndeclare module 'css:';\n",
        "date": "02.12.2020 14:18:39",
        "repo": "preactjs/wmr",
        "type": "fix",
        "sim_msg": "feat(types): expose Argument,EntryOptions,FileCacheOptions,AssetEmittedInfo,Problem types",
        "sim_diff": "diff --git a/types.d.ts b/types.d.ts @@ -12865,6 +12865,8 @@ declare namespace exports {\ncompiler: Compiler\n) => void;\nexport {\n+ Argument,\n+ ArgumentConfig,\nAutomaticPrefetchPlugin,\nAsyncDependenciesBlock,\nBannerPlugin,\n@@ -12911,12 +12913,14 @@ declare namespace exports {\nProgressPlugin,\nProvidePlugin,\nRuntimeModule,\n+ EntryOptions,\nEntryPlugin as SingleEntryPlugin,\nSourceMapDevToolPlugin,\nStats,\nTemplate,\nWatchIgnorePlugin,\nWebpackError,\n+ Problem,\nWebpackOptionsApply,\nWebpackOptionsDefaulter,\nValidationError as WebpackOptionsValidationError,\n@@ -12925,6 +12929,7 @@ declare namespace exports {\nEntryNormalized,\nEntryObject,\nLibraryOptions,\n+ FileCacheOptions,\nModuleOptions,\nResolveOptionsWebpackOptions as ResolveOptions,\nRuleSetCondition,\n@@ -12938,6 +12943,7 @@ declare namespace exports {\nWebpackPluginInstance,\nAsset,\nAssetInfo,\n+ AssetEmittedInfo,\nMultiStats,\nParserState,\nResolvePluginInstance,\n",
        "chatgpt_rag": "refactor(types): reorganize module declarations and define Mapping type"
    },
    {
        "msg": "fix: Add support for multi-level filenames",
        "diff": "diff --git a/lib/config/exec.js b/lib/config/exec.js @@ -155,7 +155,9 @@ function exec(nodemonOptions, execMap) {\n// BIG NOTE: user can't do this: nodemon -e *.js\n// because the terminal will automatically expand the glob against\n// the file system :(\n- extension = (extension.match(/[^,.\\s]+/g) || []).join(',');\n+ extension = (extension.match(/[^,*\\s]+/g) || [])\n+ .map(ext => ext.replace(/^\\./, ''))\n+ .join(',');\noptions.ext = extension;\n",
        "date": "08.10.2017 16:03:07",
        "repo": "remy/nodemon",
        "type": "fix",
        "sim_msg": "feat: read pluginsDataMap by cli option `-e jsonString`",
        "sim_diff": "diff --git a/lib/config.js b/lib/config.js @@ -514,7 +514,7 @@ exports.extend = function(newConf) {\n}\nvar extra = newConf.extra;\nif (extra && typeof extra === 'string') {\n- extra = readFileText(extra);\n+ extra = /^\\s*\\{[\\w\\W]*\\}\\s*$/.test(extra) ? extra : readFileText(extra);\ntry {\nextra = extra && JSON.parse(extra);\nif (extra && typeof extra === 'object') {\n",
        "chatgpt_rag": "refactor: improve extension handling logic in exec function"
    },
    {
        "msg": "fix(switch.mdx): added a slots table",
        "diff": "diff --git a/packages/chakra-ui-docs/docs/switch.mdx b/packages/chakra-ui-docs/docs/switch.mdx @@ -57,10 +57,15 @@ You can change the checked background color of the switch by passing the `color`\n| `color` | `string` | | The background color of the switch when checked. |\n| `name` | `string` | | The input name of the switch when used in a form. |\n| `value` | `string`, `boolean` | | The value of the switch. |\n-| `children` | `Vue.VNode` | | The children of the switch. |\n| `aria-label` | `string` | | The aria-label of the switch for accessibility. |\n| `aria-labelledby` | `string` | | The aria-labelledby of the switch for accessibility. |\n| `isChecked` | `boolean` | | If `true`, set the switch to the checked state. |\n| `defaultIsChecked` | `boolean` | | If `true`, the checkbox will be initially checked. |\n| `isDisabled` | `boolean` | | If `true`, set the disabled to the invalid state. |\n| `isInvalid` | `boolean` | | If `true`, set the switch to the invalid state. |\n+\n+## Slots\n+\n+| Name | Description |\n+| ------- | ---------------------------------------- |\n+| default | The children of the `CSwitch` component. |\n",
        "date": "02.05.2020 21:52:30",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "sim_msg": "docs(switch): switch documentation",
        "sim_diff": "diff --git a/packages/doc/content/components/switch.mdx b/packages/doc/content/components/switch.mdx @@ -12,46 +12,10 @@ metaDescription: 'Switch Component'\nimport { Switch } from '@gympass/design-system';\n```\n-<label>\n- hello\n- <Switch\n- id=\"switch-unchecked\"\n- a11yLabel=\"This is an example of unchecked switch toggle\"\n- onChange={action => alert('Switch Toggled!')}\n- />\n-</label>\n-\n## Usage\n```javascript reactLive=true\n-<section>\n- <Switch\n- id=\"switch-unchecked\"\n- a11yLabel=\"This is an example of unchecked switch toggle\"\n- onChange={action => alert('Switch Toggled!')}\n- />\n-\n- <Switch\n- checked\n- id=\"switch-checked\"\n- a11yLabel=\"This is an example of checked switch toggle\"\n- onChange={action => alert('Switch Toggled!')}\n- />\n-\n- <Switch\n- secondary\n- checked\n- id=\"switch-secondary\"\n- a11yLabel=\"This is an example of secondary-color switch toggle\"\n- onChange={action => alert('Switch Toggled!')}\n- />\n-\n- <Switch\n- disabled\n- id=\"switch-disabled\"\n- a11yLabel=\"This is an example of disabled switch toggle\"\n- />\n-</section>\n+<Switch />\n```\n## Properties\n",
        "chatgpt_rag": "docs(switch): updated switch documentation with slots information"
    },
    {
        "msg": "fix(menu): update MenuOption defaultValue prop to inner value",
        "diff": "diff --git a/packages/chakra-ui-core/src/CMenu/CMenuOption.js b/packages/chakra-ui-core/src/CMenu/CMenuOption.js @@ -176,11 +176,11 @@ const CMenuOptionGroup = {\ntype: [String, Number],\ndefault: null\n},\n- defaultValue: [String, Number]\n+ defaultValue: [String, Number, Array]\n},\ndata () {\nreturn {\n- innerValue: []\n+ innerValue: this.defaultValue || []\n}\n},\ncomputed: {\n",
        "date": "20.07.2021 01:44:19",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "sim_msg": "feat(cmp/modal): let privacyUrl to be defined for read more links",
        "sim_diff": "diff --git a/components/cmp/modal/src/index.js b/components/cmp/modal/src/index.js @@ -21,16 +21,17 @@ class CmpModal extends Component {\n}\nCmpModal.defaultProps = {\n+ lang: 'es',\nonExit: () => {},\n- retrieveConsentsFromCmp: false,\n- lang: 'es'\n+ retrieveConsentsFromCmp: false\n}\nCmpModal.propTypes = {\nlang: PropTypes.string,\nlogo: PropTypes.string.isRequired,\nonExit: PropTypes.func,\n- retrieveConsentsFromCmp: PropTypes.bool\n+ retrieveConsentsFromCmp: PropTypes.bool,\n+ privacyUrl: PropTypes.string.isRequired\n}\nCmpModal.displayName = 'CmpModal'\n",
        "chatgpt_rag": "fix(core): update defaultValue prop to accept Array in CMenuOptionGroup"
    },
    {
        "msg": "fix(razzle): fix wds served from message",
        "diff": "diff --git a/packages/razzle/config/createConfigAsync.js b/packages/razzle/config/createConfigAsync.js @@ -776,6 +776,7 @@ module.exports = (\ndisableDotRule: true,\n},\nhost: dotenv.raw.HOST,\n+ publicPath: clientPublicPath,\nhot: true,\nnoInfo: true,\noverlay: false,\n@@ -890,7 +891,6 @@ module.exports = (\nif (IS_DEV) {\nconfig.devServer.contentBase = paths.appPublic;\nconfig.devServer.watchContentBase = true;\n- config.devServer.publicPath = '/';\n}\nconfig.plugins = [\n",
        "date": "08.01.2021 16:05:12",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "refactor(build-config): make use of webpack 4's auto chunking",
        "sim_diff": "diff --git a/packages/build-config/configs/build.js b/packages/build-config/configs/build.js @@ -37,26 +37,8 @@ module.exports = {\ndevtool: 'source-map',\noptimization: {\nsplitChunks: {\n- cacheGroups: {\n- commons: {\n- test: function(module) {\n- if (module.resource) {\n- if (\n- module.resource.indexOf('hops-config') > -1 ||\n- module.resource.indexOf('.css') === module.resource.length - 4\n- ) {\n- return false;\n- }\n- }\n- return (\n- module.context && module.context.indexOf('node_modules') > -1\n- );\n- },\n- name: 'vendor',\nchunks: 'all',\n},\n- },\n- },\nminimizer: [\nnew UglifyJSPlugin({\ncache: true,\n",
        "chatgpt_rag": "feat(razzle): add publicPath configuration for client assets"
    },
    {
        "msg": "fix(razzle): fix optimizaton cofig in dev buil",
        "diff": "diff --git a/packages/razzle/config/createConfigAsync.js b/packages/razzle/config/createConfigAsync.js @@ -931,6 +931,9 @@ module.exports = (\n}),\n].filter(x => x);\n+ // make sure the key exists\n+ config.optimization = {};\n+\nif (!IS_DEV_ENV) {\nconfig.optimization = {\nsplitChunks: webpackOptions.splitChunksConfig,\n",
        "date": "21.08.2021 20:03:15",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "perf(build-config): enable caching and parallelism in uglify plugin",
        "sim_diff": "diff --git a/packages/build-config/configs/build.js b/packages/build-config/configs/build.js @@ -70,6 +70,6 @@ module.exports = {\nsourceMap: true,\n}),\nnew webpack.optimize.ModuleConcatenationPlugin(),\n- new UglifyPlugin({ sourceMap: true }),\n+ new UglifyPlugin({ sourceMap: true, cache: true, parallel: true }),\n],\n};\n",
        "chatgpt_rag": "fix(razzle): ensure optimization key exists in webpack config when not in development environment"
    },
    {
        "msg": "fix: fixed an issue where we tried to resolve null as path",
        "diff": "diff --git a/lib/monitor/watch.js b/lib/monitor/watch.js @@ -142,6 +142,7 @@ function filterAndRestart(files) {\n// if there's no matches, then test to see if the changed file is the\n// running script, if so, let's allow a restart\n+ if (config.options.execOptions.script) {\nconst script = path.resolve(config.options.execOptions.script);\nif (matched.result.length === 0 && script) {\nconst length = script.length;\n@@ -155,6 +156,7 @@ function filterAndRestart(files) {\n}\n})\n}\n+ }\nutils.log.detail('changes after filters (before/after): ' +\n[files.length, matched.result.length].join('/'));\n",
        "date": "15.12.2017 14:31:17",
        "repo": "remy/nodemon",
        "type": "fix",
        "sim_msg": "refactor(server): refactoring of watcher",
        "sim_diff": "diff --git a/lib/watcher.js b/lib/watcher.js @@ -26,7 +26,7 @@ function watchPatterns (patterns, watcher) {\npathsToWatch = Array.from(pathsToWatch)\n// watch only common parents, no sub paths\npathsToWatch.forEach((path) => {\n- if (!pathsToWatch.some((p) => p !== path && path.substr(0, p.length + 1) === p + DIR_SEP)) {\n+ if (!pathsToWatch.some((p) => p !== path && path.startsWith(p + DIR_SEP))) {\nwatcher.add(path)\nlog.debug('Watching \"%s\"', path)\n}\n@@ -39,22 +39,18 @@ function checkAnyPathMatch (patterns, path) {\nfunction createIgnore (patterns, excludes) {\nreturn function (path, stat) {\n- if (!stat || stat.isDirectory()) {\n+ if (stat && !stat.isDirectory()) {\n+ return !checkAnyPathMatch(patterns, path) || checkAnyPathMatch(excludes, path)\n+ } else {\nreturn false\n}\n-\n- return !checkAnyPathMatch(patterns, path) || checkAnyPathMatch(excludes, path)\n}\n}\nfunction getWatchedPatterns (patterns) {\nreturn patterns\n- .reduce((array, pattern) => {\n- if (pattern.watched) {\n- array.push(pattern.pattern)\n- }\n- return array\n- }, [])\n+ .filter((pattern) => pattern.watched)\n+ .map((pattern) => pattern.pattern)\n}\nexports.watch = function (patterns, excludes, fileList, usePolling, emitter) {\n",
        "chatgpt_rag": "refactor(monitor): refactor filterAndRestart function in watch.js"
    },
    {
        "msg": "fix(razzle-dev-utils): add missing dep",
        "diff": "diff --git a/packages/razzle-dev-utils/package.json b/packages/razzle-dev-utils/package.json \"dependencies\": {\n\"@babel/code-frame\": \"^7.8.3\",\n\"chalk\": \"3.0.0\",\n+ \"jest-message-util\": \"26.3.0\",\n\"react-dev-utils\": \"10.2.0\",\n\"react-error-overlay\": \"^6.0.7\",\n\"resolve\": \"1.17.0\",\n",
        "date": "19.09.2020 15:23:09",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "build(package): update `react-property` to 1.0.1\nThere are optimizations that help decrease the final bundle size.",
        "sim_diff": "diff --git a/package.json b/package.json \"dependencies\": {\n\"@types/domhandler\": \"2.4.1\",\n\"html-dom-parser\": \"0.2.2\",\n- \"react-property\": \"1.0.0\",\n+ \"react-property\": \"1.0.1\",\n\"style-to-object\": \"0.2.3\"\n},\n\"devDependencies\": {\n",
        "chatgpt_rag": "build(package): update `jest-message-util` to 26.3.0"
    },
    {
        "msg": "fix: get rid of viewbox warning",
        "diff": "diff --git a/src/features/visualization/d3-viz.js b/src/features/visualization/d3-viz.js @@ -74,7 +74,6 @@ function d3Viz(rootNode) {\nconst svg = transformRoot.append(\"svg\")\n.style(\"overflow\", \"visible\")\n.attr(\"class\", \"nodeRoot\")\n- .attr('viewBox', \"0 0 100% 100%\");\nconst tooltip = root.append(\"div\").classed(\"viz-tooltip\", true);\nconst legend = root.append(\"div\").classed(\"viz-legend\", true);\n",
        "date": "09.05.2019 13:28:52",
        "repo": "iqtlabs/crviz",
        "type": "fix",
        "sim_msg": "feat(SVG): add ChevronUp CheckCircle XCircle AlertTriangle",
        "sim_diff": "diff --git a/common/svg.js b/common/svg.js @@ -1160,6 +1160,20 @@ export const FilecoinLogo = (props) => (\n</svg>\n);\n+export const ChevronUp = (props) => {\n+ return (\n+ <svg width={16} height={16} fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n+ <path\n+ d=\"M12 10L8 6l-4 4\"\n+ stroke=\"currentColor\"\n+ strokeWidth={1.25}\n+ strokeLinecap=\"round\"\n+ strokeLinejoin=\"round\"\n+ />\n+ </svg>\n+ );\n+};\n+\nexport const ChevronDown = (props) => {\nreturn (\n<svg\n@@ -1866,10 +1880,16 @@ export const RotateCcw = (props) => (\nxmlns=\"http://www.w3.org/2000/svg\"\n{...props}\n>\n- <path d=\"M1 4v6h6\" stroke=\"#000\" strokeWidth={2} strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n+ <path\n+ d=\"M1 4v6h6\"\n+ stroke=\"currentColor\"\n+ strokeWidth={2}\n+ strokeLinecap=\"round\"\n+ strokeLinejoin=\"round\"\n+ />\n<path\nd=\"M3.51 15a9 9 0 102.13-9.36L1 10\"\n- stroke=\"#000\"\n+ stroke=\"currentColor\"\nstrokeWidth={2}\nstrokeLinecap=\"round\"\nstrokeLinejoin=\"round\"\n@@ -2243,3 +2263,46 @@ export const Instagram = (props) => (\n/>\n</svg>\n);\n+\n+export const CheckCircle = (props) => (\n+ <svg width={16} height={16} fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n+ <path\n+ d=\"M14.667 7.387V8a6.666 6.666 0 11-3.954-6.093\"\n+ stroke=\"currentColor\"\n+ strokeWidth={1.25}\n+ strokeLinecap=\"round\"\n+ strokeLinejoin=\"round\"\n+ />\n+ <path\n+ d=\"M14.667 2.667L8 9.34l-2-2\"\n+ stroke=\"currentColor\"\n+ strokeWidth={1.25}\n+ strokeLinecap=\"round\"\n+ strokeLinejoin=\"round\"\n+ />\n+ </svg>\n+);\n+\n+export const XCircle = (props) => (\n+ <svg width={16} height={16} fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n+ <path\n+ d=\"M8 14.667A6.667 6.667 0 108 1.333a6.667 6.667 0 000 13.334zM10 6l-4 4M6 6l4 4\"\n+ stroke=\"currentColor\"\n+ strokeWidth={1.25}\n+ strokeLinecap=\"round\"\n+ strokeLinejoin=\"round\"\n+ />\n+ </svg>\n+);\n+\n+export const AlertTriangle = (props) => (\n+ <svg width={16} height={16} fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n+ <path\n+ d=\"M6.86 2.573L1.213 12a1.333 1.333 0 001.14 2h11.294a1.333 1.333 0 001.14-2L9.14 2.573a1.333 1.333 0 00-2.28 0v0zM8 6v2.667M8 11.333h.007\"\n+ stroke=\"currentColor\"\n+ strokeWidth={1.25}\n+ strokeLinecap=\"round\"\n+ strokeLinejoin=\"round\"\n+ />\n+ </svg>\n+);\n",
        "chatgpt_rag": "style(d3-viz): remove viewBox attribute from SVG element"
    },
    {
        "msg": "fix(stack): filter empty slots",
        "diff": "diff --git a/packages/kiwi-core/src/Stack/index.js b/packages/kiwi-core/src/Stack/index.js @@ -53,7 +53,7 @@ const Stack = {\n_direction = 'column'\n}\n- const children = this.$slots.default\n+ const children = this.$slots.default.filter(e => e.tag)\nconst stackables = children.map((node, index) => {\nlet isLastChild = children.length === index + 1\nlet spacingProps = _isInline\n",
        "date": "19.02.2020 22:50:31",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "sim_msg": "feat: support react specific scenario with an array of values",
        "sim_diff": "diff --git a/compat/src/index.js b/compat/src/index.js @@ -114,7 +114,6 @@ let Children = {\n*/\nfunction createElement(...args) {\nlet vnode = h(...args);\n-\nlet type = vnode.type, props = vnode.props;\nif (typeof type!='function') {\nif (props.defaultValue) {\n@@ -124,6 +123,14 @@ function createElement(...args) {\ndelete props.defaultValue;\n}\n+ if (Array.isArray(props.value) && props.multiple && type==='select') {\n+ props.children.forEach((child) => {\n+ if (props.value.includes(child.props.value)) {\n+ child.props.selected = true;\n+ }\n+ });\n+ delete props.value;\n+ }\nhandleElementVNode(vnode, props);\n}\n",
        "chatgpt_rag": "refactor: filter out non-element nodes in Stack component children"
    },
    {
        "msg": "fix: Ensures config file has been merged before deciding output directory",
        "diff": "diff --git a/packages/wmr/src/lib/normalize-options.js b/packages/wmr/src/lib/normalize-options.js @@ -49,12 +49,6 @@ export async function normalizeOptions(options, mode, configWatchFiles = []) {\n// Files in the output directory are served if no middleware overrides them:\noptions.overlayDir = options.out;\n- // Ensure the output directory exists so that writeFile() doesn't have to create it:\n- // Note: awaiting the promise later lets it run in parallel with the CWD check below.\n- const ensureOutDirPromise = fs.mkdir(options.out, { recursive: true }).catch(err => {\n- console.warn(`Warning: Failed to create output directory: ${err.message}`);\n- });\n-\noptions.public = options.public || 'public';\noptions.publicPath = options.publicPath || '/';\n@@ -81,7 +75,6 @@ export async function normalizeOptions(options, mode, configWatchFiles = []) {\n}\nlet prevPublicFolder = options.public;\n- await ensureOutDirPromise;\nconst pkgFile = resolve(options.cwd, 'package.json');\nlet pkg;\n@@ -192,6 +185,11 @@ export async function normalizeOptions(options, mode, configWatchFiles = []) {\n}\n}\n+ // Ensure the output directory exists so that writeFile() doesn't have to create it\n+ await fs.mkdir(options.out, { recursive: true }).catch(err => {\n+ console.warn(`Warning: Failed to create output directory: ${err.message}`);\n+ });\n+\nif (options.aliases && Object.keys(options.aliases).length > 0) {\ndeprecated(\n'Found \"aliases\" property in WMR\\'s configuration. It will be removed in a future version of WMR. Please switch to \"alias\" instead.'\n",
        "date": "23.01.2022 21:34:12",
        "repo": "preactjs/wmr",
        "type": "fix",
        "sim_msg": "feat: refactor configuration file paths resolution",
        "sim_diff": "diff --git a/packages/config/src/options/main.js b/packages/config/src/options/main.js 'use strict'\n+const { resolve } = require('path')\nconst process = require('process')\nconst { isDirectory } = require('path-type')\n@@ -80,25 +81,29 @@ const normalizeOpts = async function (opts) {\nconst optsB = { ...optsA, branch }\nconst optsC = removeFalsy(optsB)\n- await checkDirs(optsC)\n+ const optsD = await normalizeDirs(optsC)\n- const baseOverride = await getBaseOverride(optsC)\n- const optsD = { ...baseOverride, ...optsC }\n- return optsD\n+ const baseOverride = await getBaseOverride(optsD)\n+ const optsE = { ...baseOverride, ...optsD }\n+ return optsE\n}\n-// Verify that options point to existing directories\n-const checkDirs = async function (opts) {\n- await Promise.all(DIR_OPTIONS.map((optName) => checkDir(opts, optName)))\n+// Verify that options point to existing directories.\n+// Also resolve them to absolute file paths.\n+const normalizeDirs = async function (opts) {\n+ const dirOpts = await Promise.all(DIR_OPTIONS.map((optName) => normalizeDir(opts, optName)))\n+ return Object.assign({}, opts, ...dirOpts)\n}\nconst DIR_OPTIONS = ['cwd', 'repositoryRoot']\n-const checkDir = async function (opts, optName) {\n+const normalizeDir = async function (opts, optName) {\nconst path = opts[optName]\n+ const resolvedPath = resolve(path)\nif (!(await isDirectory(path))) {\n- throwError(`Option '${optName}' points to a non-existing directory: ${path}`)\n+ throwError(`Option '${optName}' points to a non-existing directory: ${resolvedPath}`)\n}\n+ return { [optName]: resolvedPath }\n}\nmodule.exports = { addDefaultOpts, normalizeOpts }\n",
        "chatgpt_rag": "refactor output directory creation logic and add warning message for failure"
    },
    {
        "msg": "fix: windows 8 doesn't support windows-kill\nFixes",
        "diff": "diff --git a/lib/monitor/run.js b/lib/monitor/run.js @@ -16,6 +16,7 @@ var restart = null;\nvar psTree = require('pstree.remy');\nvar path = require('path');\nvar signals = require('./signals');\n+const osRelease = require('os').release();\nfunction run(options) {\nvar cmd = config.command.raw;\n@@ -312,11 +313,18 @@ function kill(child, signal, callback) {\n}\nif (utils.isWindows) {\n+ const taskKill = () => {\n+ try {\n+ exec('taskkill /pid ' + child.pid + ' /T /F');\n+ } catch (e) {\n+ utils.log.error(\"Could not shutdown sub process cleanly\");\n+ }\n+ }\n// We are handling a 'SIGKILL' POSIX signal under Windows the\n// same way it is handled on a UNIX system: We are performing\n// a hard shutdown without waiting for the process to clean-up.\n- if (signal === 'SIGKILL') {\n+ if (signal === 'SIGKILL' || osRelease < 10) {\ndebug('terminating process group by force: %s', child.pid);\n@@ -324,7 +332,7 @@ function kill(child, signal, callback) {\n// process group ('/t') of the child ('/pid') by force ('/f').\n// We need to end all sub processes, because the 'child'\n// process in this context is actually a cmd.exe wrapper.\n- exec(`taskkill /f /t /pid ${child.pid}`);\n+ taskKill();\ncallback();\nreturn;\n}\n@@ -357,9 +365,13 @@ function kill(child, signal, callback) {\n// Therefore we are using 'start' to create a new cmd.exe context.\n// The '/min' option hides the new terminal window and the '/wait'\n// option lets the process wait for the command to finish.\n+ try {\nexecSync(\n`start \"windows-kill\" /min /wait \"${windowsKill}\" -SIGINT ${processId}`\n);\n+ } catch (e) {\n+ taskKill();\n+ }\ncallback();\n} else {\n",
        "date": "08.07.2021 08:42:39",
        "repo": "remy/nodemon",
        "type": "fix",
        "sim_msg": "feat: log process exit code + debug log process exit stacktrace",
        "sim_diff": "diff --git a/index.js b/index.js @@ -28,6 +28,7 @@ process.on(\"SIGTERM\", shutdown);\n// e.g. if the process is aborted by Ctrl + C (during dev)\nprocess.on(\"SIGINT\", shutdown);\n-process.on(\"exit\", function() {\n- Logger.info(\"exiting...\");\n+process.on(\"exit\", function(code) {\n+ Logger.info(\"exiting with code \" + code + \"...\");\n+ Logger.debug(\"Stacktrace that lead to the process exiting:\", new Error().stack);\n});\n",
        "chatgpt_rag": "refactor: improve process termination handling on Windows + add os release check for taskkill usage"
    },
    {
        "msg": "fix(environment): Fix content security policy",
        "diff": "diff --git a/config/environment.js b/config/environment.js @@ -59,7 +59,7 @@ module.exports = function(environment) {\nENV.contentSecurityPolicy = {\n\"default-src\": \"'self' *.fastly.net\",\n- \"connect-src\": \"'self' https://s3.amazonaws.com *.algolia.net *.fastly.net\",\n+ \"connect-src\": \"'self' https://s3.amazonaws.com *.algolia.net *.algolianet.com *.fastly.net\",\n\"script-src\": \"'self' unsafe-inline use.typekit.net 'sha256-36n/xkZHEzq3lo4O+0jXMYbl+dWu3C8orOFHtcAH6HU=' *.fastly.net https://www.google-analytics.com\",\n\"font-src\": \"'self' data://* https://fonts.gstatic.com *.fastly.net\",\n\"img-src\": \"'self' data://* *.fastly.net https://www.google-analytics.com\",\n",
        "date": "05.04.2017 21:11:06",
        "repo": "ember-learn/ember-api-docs",
        "type": "fix",
        "sim_msg": "fix: IS_MAINNET config",
        "sim_diff": "diff --git a/packages/frontend/src/config/configFromEnvironment.js b/packages/frontend/src/config/configFromEnvironment.js @@ -36,9 +36,12 @@ module.exports = {\nHIDE_SIGN_IN_WITH_LEDGER_ENTER_ACCOUNT_ID_MODAL: parseBooleanFromShell(\nprocess.env.HIDE_SIGN_IN_WITH_LEDGER_ENTER_ACCOUNT_ID_MODAL\n),\n- IS_MAINNET: [Environments.MAINNET, Environments.MAINNET_STAGING].some(\n- (env) => env === NEAR_WALLET_ENV\n- ),\n+ IS_MAINNET: [\n+ Environments.MAINNET,\n+ Environments.MAINNET_STAGING,\n+ Environments.MAINNET_STAGING_NEARORG,\n+ Environments.MAINNET_NEARORG,\n+ ].some((env) => env === NEAR_WALLET_ENV),\nLINKDROP_GAS: process.env.LINKDROP_GAS,\nLOCKUP_ACCOUNT_ID_SUFFIX: process.env.LOCKUP_ACCOUNT_ID_SUFFIX,\nMIN_BALANCE_FOR_GAS: process.env.REACT_APP_MIN_BALANCE_FOR_GAS,\n",
        "chatgpt_rag": "fix: update connect-src in contentSecurityPolicy config"
    },
    {
        "msg": "fix: revert stdin handling\nFixes\nFixes\nRef\nMeans that ctrl^l does not instantly clear the terminal. It requires a\nnew line directly after.",
        "diff": "diff --git a/lib/nodemon.js b/lib/nodemon.js @@ -95,48 +95,43 @@ function nodemon(settings) {\nutils.log.detail('reading config ' + file);\n});\n- // echo out notices about running state\n- if (config.options.stdin) {\n+ if (config.options.stdin && config.options.restartable) {\n+ // allow nodemon to restart when the use types 'rs\\n'\n+ process.stdin.resume();\n+ process.stdin.setEncoding('utf8');\n+ process.stdin.on('data', data => {\n+ const str = data.toString().trim().toLowerCase();\n+\n+ // if the keys entered match the restartable value, then restart!\n+ if (str === config.options.restartable) {\n+ bus.emit('restart');\n+ } else if (data.charCodeAt(0) === 12) { // ctrl+l\n+ console.clear();\n+ }\n+ });\n+ } else if (config.options.stdin) {\n// so let's make sure we don't eat the key presses\n// but also, since we're wrapping, watch out for\n// special keys, like ctrl+c x 2 or '.exit' or ctrl+d or ctrl+l\nvar ctrlC = false;\nvar buffer = '';\n- const rs = config.options.restartable;\n- process.stdin.setEncoding('utf8');\nprocess.stdin.on('data', function (data) {\ndata = data.toString();\nbuffer += data;\nconst chr = data.charCodeAt(0);\n// if restartable, echo back\n- if (rs) {\n- if (chr === 13) {\n- process.stdout.write('\\n');\n- }\n- // this intentionally prevents cursor keys from working.\n- process.stdout.write(String.fromCharCode(chr));\n- }\n-\nif (chr === 3) {\nif (ctrlC) {\nprocess.exit(0);\n}\n- // if restartable, assume ctrl+c will break immediately\n- if (rs) {\n- bus.emit('quit', 130);\n- }\nctrlC = true;\nreturn;\n- } else if (!rs && (buffer === '.exit' || chr === 4)) { // ctrl+d\n+ } else if (buffer === '.exit' || chr === 4) { // ctrl+d\nprocess.exit();\n} else if (chr === 13 || chr === 10) { // enter / carriage return\n- const input = buffer.toString().trim().toLowerCase();\n- if (input === rs) {\n- bus.emit('restart');\n- }\nbuffer = '';\n} else if (chr === 12) { // ctrl+l\nconsole.clear();\n@@ -144,7 +139,6 @@ function nodemon(settings) {\n}\nctrlC = false;\n});\n- process.stdin.resume();\nif (process.stdin.setRawMode) {\nprocess.stdin.setRawMode(true);\n}\n",
        "date": "13.07.2018 12:36:29",
        "repo": "remy/nodemon",
        "type": "fix",
        "sim_msg": "chore(tests): refactor restart tests",
        "sim_diff": "diff --git a/test/unit/commands/restart-spec.js b/test/unit/commands/restart-spec.js @@ -4,7 +4,6 @@ const sinon = require('sinon');\nconst modulePath = '../../../lib/commands/restart';\nconst RestartCommand = require(modulePath);\n-const Instance = require('../../../lib/instance');\ndescribe('Unit: Command > Restart', function () {\nit('warns of stopped instance and starts instead', function () {\n@@ -26,25 +25,23 @@ describe('Unit: Command > Restart', function () {\n});\nit('calls process restart method if instance is running', function () {\n- const restartStub = sinon.stub().resolves();\n- class TestInstance extends Instance {\n- get process() { return {restart: restartStub}; }\n- running() { return true; }\n- }\n- const testInstance = new TestInstance();\n- const loadRunEnvStub = sinon.stub(testInstance, 'loadRunningEnvironment');\nconst runStub = sinon.stub().resolves();\n+ const restartStub = sinon.stub().resolves();\n+ const lreStub = sinon.stub();\n+ const instance = {\n+ process: {restart: restartStub},\n+ loadRunningEnvironment: lreStub,\n+ running: () => 1\n+ };\n- const command = new RestartCommand({\n- run: runStub\n- }, {\n+ const command = new RestartCommand({run: runStub}, {\nenvironment: 'testing',\n- getInstance: () => testInstance\n+ getInstance: () => instance\n});\nreturn command.run().then(() => {\n- expect(loadRunEnvStub.calledOnce).to.be.true;\n- expect(loadRunEnvStub.args[0][0]).to.be.true;\n+ expect(lreStub.calledOnce).to.be.true;\n+ expect(lreStub.args[0][0]).to.be.true;\nexpect(restartStub.calledOnce).to.be.true;\nexpect(restartStub.args[0]).to.deep.equal([process.cwd(), 'testing']);\nexpect(runStub.calledOnce).to.be.true;\n",
        "chatgpt_rag": "refactor nodemon stdin handling and restart logic"
    },
    {
        "msg": "fix(Button): fix animated prop type definition",
        "diff": "diff --git a/src/elements/Button/Button.d.ts b/src/elements/Button/Button.d.ts @@ -22,7 +22,7 @@ export interface ButtonProps {\nactive?: boolean;\n/** A button can animate to show hidden content. */\n- animated?: 'fade' | 'vertical';\n+ animated?: boolean | 'fade' | 'vertical';\n/** A button can be attached to the top or bottom of other content. */\nattached?: 'left' | 'right' | 'top' | 'bottom';\n",
        "date": "21.07.2017 21:41:00",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "sim_msg": "fix: typescript definitions for button",
        "sim_diff": "diff --git a/src/js/components/Button/index.d.ts b/src/js/components/Button/index.d.ts @@ -58,16 +58,15 @@ export interface ButtonProps {\nas?: PolymorphicType;\n}\n-type anchorType = JSX.IntrinsicElements['a'];\n+type anchorType = Omit<JSX.IntrinsicElements['a'], 'color'>;\n+type buttonType = Omit<JSX.IntrinsicElements['button'], 'color'>;\n+type extendType = anchorType & buttonType;\n-export interface ButtonExtendedProps\n- extends ButtonProps,\n- Omit<JSX.IntrinsicElements['button'], 'color'> {}\n+export interface ButtonExtendedProps extends ButtonProps, extendType {}\n// Keep type alias for backwards compatibility.\n-export type ButtonType = ButtonProps &\n- Omit<JSX.IntrinsicElements['button'], 'color'>;\n+export type ButtonType = ButtonProps & extendType;\n-declare const Button: React.FC<ButtonExtendedProps & anchorType>;\n+declare const Button: React.FC<ButtonExtendedProps>;\nexport { Button };\n",
        "chatgpt_rag": "fix: update typescript definition for button component to allow boolean value for animated prop"
    },
    {
        "msg": "fix: docs deps",
        "diff": "diff --git a/packages/chakra-ui-docs/package.json b/packages/chakra-ui-docs/package.json \"dev\": \"nuxt\",\n\"build\": \"nuxt generate\",\n\"start\": \"nuxt start\",\n- \"docs:build\": \"nuxt build\",\n+ \"docs:build\": \"nuxt \",\n\"lint\": \"eslint --ext .js,.vue --ignore-path .gitignore .\"\n},\n\"lint-staged\": {\n\"@chakra-ui/vue\": \"^0.3.10\",\n\"@chakra-ui/theme-vue\": \"^0.2.3\",\n\"@fortawesome/free-brands-svg-icons\": \"^5.12.0\",\n- \"@fortawesome/free-solid-svg-icons\": \"^5.11.gi2\",\n+ \"@fortawesome/free-solid-svg-icons\": \"^5.11.2\",\n\"@mdx-js/vue-loader\": \"^1.5.7\",\n\"@nuxtjs/dotenv\": \"^1.4.0\",\n\"@nuxtjs/emotion\": \"^0.0.1\",\n",
        "date": "12.04.2020 19:09:37",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "sim_msg": "feat(package): add lint by default for tests",
        "sim_diff": "diff --git a/package.json b/package.json \"docs-dev\": \"nuxt dev -c docs/nuxt.config.js\",\n\"docs-gen\": \"nuxt generate -c docs/nuxt.config.js\",\n\"docs-publish\": \"gh-pages -t -d docs-dist -b master -r git@github.com:bootstrap-vue/bootstrap-vue.github.io.git\",\n- \"test\": \"NODE_ENV=test jest\",\n+ \"test\": \"yarn lint && jest\",\n+ \"lint\": \"eslint src\",\n\"release\": \"npm run build && npm run test && standard-version\",\n\"postinstall\": \"opencollective postinstall || exit 0\"\n},\n",
        "chatgpt_rag": "fix(package): update fontawesome free solid icons version in lint-staged configuration"
    },
    {
        "msg": "fix(create-razzle-app): allow examples with workspaces",
        "diff": "diff --git a/packages/create-razzle-app/lib/utils/install.js b/packages/create-razzle-app/lib/utils/install.js @@ -56,7 +56,7 @@ function getInstallArgs(cmd, packages, opts) {\nconst args = ['install', '--save', '--save-exact'];\nreturn args.concat(packages, ['--verbose']);\n} else if (cmd.cmd === 'yarn') {\n- const args = ['add'];\n+ const args = ['add', '-W'];\nreturn args.concat(packages,\nparseInt(cmd.version[0]) !== 2 ? ['--ignore-engines'] : []);\n}\n",
        "date": "11.03.2021 23:47:40",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "refactor: install peer plugins",
        "sim_diff": "diff --git a/bin/plugin.js b/bin/plugin.js @@ -59,7 +59,7 @@ function getInstallDir(argv) {\nreturn result;\n}\n-function install(cmd, name, argv, ver, callback) {\n+function install(cmd, name, argv, ver, pluginsCache, callback) {\nargv = argv.slice();\nvar result = getInstallDir(argv);\nargv = result.argv;\n@@ -74,12 +74,14 @@ function install(cmd, name, argv, ver, callback) {\nfs.writeFileSync(path.join(installPath, 'LICENSE'), LICENSE);\nfs.writeFileSync(path.join(installPath, 'README.md'), RESP_URL);\nargv.unshift('install', name);\n+ pluginsCache[name] = 1;\ncp.spawn(cmd, argv, {\nstdio: 'inherit',\ncwd: installPath\n}).on('exit', function(code) {\nif (code) {\nremoveDir(installPath);\n+ delete pluginsCache[name];\ncallback();\n} else {\nvar realPath = getInstallPath(name, result.dir);\n@@ -114,7 +116,7 @@ function readJson(pkgPath) {\n}\n}\n-function installPlugins(cmd, plugins, argv, deep) {\n+function installPlugins(cmd, plugins, argv, pluginsCache, deep) {\ndeep = deep || 0;\nvar count = 0;\nvar peerPlugins = [];\n@@ -134,19 +136,10 @@ function installPlugins(cmd, plugins, argv, deep) {\n}\n}\nif (--count <= 0 && deep < 16) {\n- var dir = getInstallDir(argv).dir;\npeerPlugins = peerPlugins.filter(function(name) {\n- var realPath = getInstallPath(name, dir);\n- pkgPath = path.join(realPath, 'node_modules', name, 'package.json');\n- try {\n- return !fs.existsSync(pkgPath);\n- } catch (e) {\n- try {\n- return !fs.existsSync(pkgPath);\n- } catch (e) {}\n- }\n+ return !pluginsCache[name];\n});\n- peerPlugins.length && installPlugins(cmd, peerPlugins, argv, ++deep);\n+ peerPlugins.length && installPlugins(cmd, peerPlugins, argv, pluginsCache, ++deep);\n}\n};\nplugins.forEach(function(name) {\n@@ -155,7 +148,7 @@ function installPlugins(cmd, plugins, argv, deep) {\nname = RegExp.$1;\nvar ver = RegExp.$2;\nremoveOldPlugin(name);\n- install(cmd, name, argv, ver, callback);\n+ install(cmd, name, argv, ver, pluginsCache, callback);\n}\n});\n}\n@@ -173,7 +166,7 @@ exports.install = function(cmd, argv) {\ncmd += CMD_SUFFIX;\nargv.push('--no-package-lock');\n- installPlugins(cmd, plugins, argv);\n+ installPlugins(cmd, plugins, argv, {});\n};\nexports.uninstall = function(plugins) {\n",
        "chatgpt_rag": "refactor: update yarn add command to include workspace flag"
    },
    {
        "msg": "fix: allow getting string only loaders",
        "diff": "diff --git a/packages/razzle-dev-utils/makeLoaderFinder.js b/packages/razzle-dev-utils/makeLoaderFinder.js @@ -6,7 +6,7 @@ const makeLoaderFinder = loaderName => rule => {\n// Checks if there's a loader string in rule.loader matching loaderRegex.\nconst inLoaderString =\n- typeof rule.loader === 'string' && rule.loader.match(loaderRegex);\n+ typeof rule.loader === 'string' && (rule.loader.match(loaderRegex) || rule.loader === loaderName);\n// Checks if there is an object inside rule.use with loader matching loaderRegex, OR\n// Checks another condition, if rule is not an object, but pure string (ex: \"style-loader\", etc)\n@@ -15,8 +15,8 @@ const makeLoaderFinder = loaderName => rule => {\nrule.use.find(\nloader =>\n(typeof loader.loader === 'string' &&\n- loader.loader.match(loaderRegex)) ||\n- (typeof loader === 'string' && loader.match(loaderRegex))\n+ (loader.loader.match(loaderRegex)) || rule.loader === loaderName) ||\n+ (typeof loader === 'string' && (loader.match(loaderRegex) || loader === loaderName))\n);\nreturn inUseArray || inLoaderString;\n",
        "date": "17.09.2020 21:03:36",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "fix: unable to get plugin ruleValue by plugin://ruleValue",
        "sim_diff": "diff --git a/lib/rules/rules.js b/lib/rules/rules.js @@ -447,19 +447,18 @@ function resolveResHeadersVar(req, key) {\n}\nfunction resolveRuleValue(req, key) {\nvar plugin = key && req.rules && req.rules.plugin;\n- if (!plugin) {\n- return '';\n- }\n+ var matcher;\nkey = key + '://';\n+ if (plugin) {\nvar list = Array.isArray(plugin.list) ? plugin.list : [plugin];\nvar name = 'whistle.' + key;\n- var matcher;\nfor (var i = 0, len = list.length; i < len; i++) {\nmatcher = list[i].matcher;\nif (!matcher.indexOf(name)) {\nreturn matcher.substring(name.length);\n}\n}\n+ }\nmatcher = req.rules.rule && req.rules.rule.matcher;\nif (matcher && !matcher.indexOf(key)) {\nreturn matcher.substring(key.length);\n",
        "chatgpt_rag": "feat: improve loader finder to include loaderName in rule.loader and rule.use loaders"
    },
    {
        "msg": "fix(examples): monorepo example running as expected",
        "diff": "diff --git a/examples/with-monorepo/package.json b/examples/with-monorepo/package.json \"version\": \"4.0.0-canary.16\",\n\"license\": \"MIT\",\n\"scripts\": {\n- \"start-1\": \"RAZZLE_APP_PATH=basic-1 razzle start\",\n- \"build-1\": \"RAZZLE_APP_PATH=basic-1 razzle build\",\n- \"test-1\": \"RAZZLE_APP_PATH=basic-1 razzle test --env=jsdom\",\n- \"start:prod-1\": \"RAZZLE_APP_PATH=basic-1 NODE_ENV=production node basic-1/build/server.js\",\n- \"start-2\": \"RAZZLE_APP_PATH=basic-2 razzle start\",\n- \"build-2\": \"RAZZLE_APP_PATH=basic-2 razzle build\",\n- \"test-2\": \"RAZZLE_APP_PATH=basic-2 razzle test --env=jsdom\",\n- \"start:prod-2\": \"RAZZLE_APP_PATH=basic-2 NODE_ENV=production node basic-2/build/server.js\"\n+ \"start-1\": \"cross-env RAZZLE_APP_PATH=basic-1 razzle start\",\n+ \"build-1\": \"cross-env RAZZLE_APP_PATH=basic-1 razzle build\",\n+ \"test-1\": \"cross-env RAZZLE_APP_PATH=basic-1 razzle test --env=jsdom\",\n+ \"start:prod-1\": \"cross-env RAZZLE_APP_PATH=basic-1 NODE_ENV=production node basic-1/build/server.js\",\n+ \"start-2\": \"cross-env RAZZLE_APP_PATH=basic-2 PORT=3002 razzle start\",\n+ \"build-2\": \"cross-env RAZZLE_APP_PATH=basic-2 PORT=3002 razzle build\",\n+ \"test-2\": \"cross-env RAZZLE_APP_PATH=basic-2 PORT=3002 razzle test --env=jsdom\",\n+ \"start:prod-2\": \"cross-env RAZZLE_APP_PATH=basic-2 PORT=3002 NODE_ENV=production node basic-2/build/server.js\",\n+ \"start\": \"concurrently \\\"yarn start-1\\\" \\\"yarn start-2\\\"\",\n+ \"start:prod\": \"concurrently \\\"yarn start:prod-1\\\" \\\"yarn start:prod-2\\\"\",\n+ \"build\": \"concurrently \\\"yarn build-1\\\" \\\"yarn build-2\\\"\"\n},\n\"workspaces\": [\n\"basic-1\",\n\"basic-2\"\n],\n\"devDependencies\": {\n+ \"concurrently\": \"^5.3.0\",\n+ \"cross-env\": \"^7.0.3\",\n\"razzle\": \"4.0.0-canary.8\",\n\"razzle-dev-utils\": \"4.0.0-canary.8\",\n\"mini-css-extract-plugin\": \"^0.9.0\",\n",
        "date": "11.01.2021 18:04:14",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "test(app): only test files in <spec>",
        "sim_diff": "diff --git a/package.json b/package.json \"scripts\": {\n\"app:auto-test\": \"npm run app:test -- --watch\",\n\"app:dev\": \"electron ./app/dev.js\",\n- \"app:test\": \"mocha -r ./app/test/expect --recursive app/test\",\n+ \"app:test\": \"mocha -r ./app/test/expect --recursive app/test/spec\",\n\"client:build\": \"(cd client && npm run build)\",\n\"client:auto-test\": \"(cd client && npm run auto-test)\",\n\"client:dev\": \"(cd client && npm run dev)\",\n",
        "chatgpt_rag": "refactor(start): use cross-env for environment variables\n- Updated start scripts to use cross-env for setting environment variables\n- Added start script to concurrently run start-1 and start-2\n- Added start:prod script to concurrently run start:prod-1 and start:prod-2\n- Added build script to concurrently run build-1 and build-2"
    },
    {
        "msg": "fix(Popup): Remove hideOnScroll from window scroll",
        "diff": "diff --git a/src/modules/Popup/Popup.js b/src/modules/Popup/Popup.js @@ -306,6 +306,7 @@ export default class Popup extends Component {\nhandlePortalUnmount = (e) => {\ndebug('handlePortalUnmount()')\n+ window.removeEventListener('scroll', this.hideOnScroll)\nconst { onUnmount } = this.props\nif (onUnmount) onUnmount(e, this.props)\n}\n",
        "date": "18.09.2017 03:00:47",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "sim_msg": "fix: Remove incorrect prop from SUI popup",
        "sim_diff": "diff --git a/packages/fether-ui/src/MenuPopup/MenuPopup.js b/packages/fether-ui/src/MenuPopup/MenuPopup.js @@ -26,7 +26,6 @@ export const MenuPopup = ({\nbasic={basic || true} // toggles popup arrow\nclassName={className}\ncontext={context} // element to bind the popup to or use position\n- handleGoToLink={handleGoToLink}\nhorizontalOffset={horizontalOffset || 0}\nhoverable={hoverable}\nkeepInViewPort\n",
        "chatgpt_rag": "feat: Add event listener for hiding popup on scroll in Popup component"
    },
    {
        "msg": "fix: git not found error\nFixes by adding git seperately",
        "diff": "diff --git a/Dockerfile.gh b/Dockerfile.gh FROM node:alpine\nLABEL maintainer=\"rashley-iqt <rashley@iqt.org>\"\n-RUN apk update\n-RUN git config --global user.email \"clewis@iqt.org\"\n-RUN git config --global user.name \"Charlie Lewis\"\n+RUN apk update && apk add git\n+RUN git config --global user.email \"rashley@iqt.org\"\n+RUN git config --global user.name \"rashley-iqt\"\nCOPY . /app\nWORKDIR /app\n",
        "date": "25.06.2018 12:07:35",
        "repo": "iqtlabs/crviz",
        "type": "fix",
        "sim_msg": "feat: bump Dockerfile to node v16",
        "sim_diff": "diff --git a/Dockerfile b/Dockerfile # ---- Base Node ----\n-FROM node:14-alpine AS base\n+FROM node:16-alpine AS base\n# set working directory\nWORKDIR /usr/src/app\n@@ -10,7 +10,7 @@ COPY package*.json ./\n# ---- Dependencies ----\nFROM base AS basedependencies\n## Install build toolchain, install node deps and compile native add-ons\n-RUN apk add --no-cache python make g++ git\n+RUN apk add --no-cache python3 make g++ git\nFROM basedependencies as dependencies\n# install node packages\n",
        "chatgpt_rag": "refactor: update Dockerfile commands and configurations"
    },
    {
        "msg": "fix: TokenDestructible typo fron->from",
        "diff": "diff --git a/test/TokenDestructible.test.js b/test/TokenDestructible.test.js @@ -7,7 +7,10 @@ contract('TokenDestructible', function (accounts) {\nlet destructible;\nbeforeEach(async function () {\n- destructible = await TokenDestructible.new({ fron: accounts[0], value: web3.toWei('10', 'ether') });\n+ destructible = await TokenDestructible.new({\n+ from: accounts[0],\n+ value: web3.toWei('10', 'ether'),\n+ });\n});\nit('should send balance to owner after destruction', async function () {\n",
        "date": "31.12.2017 19:06:38",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "fix",
        "sim_msg": "refactor(eslint): fix style",
        "sim_diff": "diff --git a/test/unit/models/wallet-token.spec.js b/test/unit/models/wallet-token.spec.js @@ -8,12 +8,6 @@ describe('WalletToken model', () => {\nbalance: 0\n};\n- const testItem2 = {\n- walletId: 1,\n- tokenId: 2,\n- balance: 0\n- };\n-\nconst testToken = {\nsymbol: 'TST',\ndecimal: 2,\n@@ -67,7 +61,7 @@ describe('WalletToken model', () => {\nlet walletToken = await WalletToken.createWithNewToken(testToken, 5, 1);\nlet createdToken = await walletToken.$relatedQuery('token');\n- let walletToken2 = await WalletToken.createWithNewToken(testToken2, 2, 1);\n+ await WalletToken.createWithNewToken(testToken2, 2, 1);\nlet found = await WalletToken.findByWalletId(1);\nexpect(found.length).to.eq(2);\n",
        "chatgpt_rag": "style(eslint): fix object property typo in TokenDestructible.test.js"
    },
    {
        "msg": "fix(TextArea): fix typings definition",
        "diff": "diff --git a/src/addons/TextArea/TextArea.d.ts b/src/addons/TextArea/TextArea.d.ts @@ -31,7 +31,7 @@ export interface TextAreaOnChangeData extends TextAreaProps {\nvalue?: string;\n}\n-declare class TextArea extends React.Component<TextArea, {}> {\n+declare class TextArea extends React.Component<TextAreaProps, {}> {\nfocus: () => void;\n}\n",
        "date": "28.08.2017 00:54:59",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "sim_msg": "feat: Add the click, focus and blur methods to the textArea component",
        "sim_diff": "diff --git a/src/components/Textarea/index.js b/src/components/Textarea/index.js @@ -14,6 +14,9 @@ export default class Textarea extends Component {\nconstructor(props) {\nsuper(props);\nthis.textareaRef = React.createRef();\n+ this.click = this.click.bind(this);\n+ this.focus = this.focus.bind(this);\n+ this.blur = this.blur.bind(this);\nthis.textareaId = uniqueId('textarea');\nthis.inlineTextLabelId = uniqueId('inline-text-label');\nthis.errorMessageId = uniqueId('error-message');\n@@ -53,10 +56,35 @@ export default class Textarea extends Component {\nreturn undefined;\n}\n+ /**\n+ * Sets focus on the element.\n+ * @public\n+ */\n+ focus() {\n+ this.textareaRef.current.focus();\n+ }\n+\n+ /**\n+ * Sets click on the element.\n+ * @public\n+ */\n+ click() {\n+ this.textareaRef.current.click();\n+ }\n+\n+ /**\n+ * Sets blur on the element.\n+ * @public\n+ */\n+ blur() {\n+ this.textareaRef.current.blur();\n+ }\n+\nrender() {\nconst {\nstyle,\nonChange,\n+ onClick,\nonFocus,\nonBlur,\nonPaste,\n@@ -92,6 +120,7 @@ export default class Textarea extends Component {\nmaxLength={maxLength}\nminLength={minLength}\nonChange={onChange}\n+ onClick={onClick}\nonFocus={onFocus}\nonBlur={onBlur}\nonPaste={onPaste}\n@@ -147,9 +176,11 @@ Textarea.propTypes = {\nreadOnly: PropTypes.bool,\n/** The action triggered when a value attribute changes. */\nonChange: PropTypes.func,\n- /** Event fired when the textarea is focused */\n+ /** The action triggered when the element is clicked. */\n+ onClick: PropTypes.func,\n+ /** The action triggered when the element receives focus. */\nonFocus: PropTypes.func,\n- /** Event fired when the textarea is blured */\n+ /** The action triggered when the element releases focus. */\nonBlur: PropTypes.func,\n/** Event fired when the user paste on the textarea */\nonPaste: PropTypes.func,\n@@ -173,6 +204,7 @@ Textarea.defaultProps = {\nrows: 3,\nreadOnly: false,\nonChange: () => {},\n+ onClick: () => {},\nonFocus: () => {},\nonBlur: () => {},\nonPaste: () => {},\n",
        "chatgpt_rag": "fix: Correct the type definition for TextArea component in TextArea.d.ts file"
    },
    {
        "msg": "fix: Catch for when mkdir errors due to existing file",
        "diff": "diff --git a/packages/create-wmr/src/index.js b/packages/create-wmr/src/index.js @@ -25,7 +25,16 @@ sade('create-wmr [dir]', true)\nprocess.exit(1);\n}\ncwd = resolve(cwd, dir || '.');\n+ try {\nawait fs.mkdir(cwd, { recursive: true });\n+ } catch {\n+ process.stderr.write(\n+ `${red(\n+ `There is already a file with the same name as the directory you specified. Please provide a different directory name`\n+ )}\\n`\n+ );\n+ process.exit(1);\n+ }\nprocess.chdir(cwd);\n}\nconst ctx = {\n",
        "date": "25.02.2021 18:19:03",
        "repo": "preactjs/wmr",
        "type": "fix",
        "sim_msg": "refactor: pass in all options minus redacted values to config resolver",
        "sim_diff": "diff --git a/packages/config/src/index.js b/packages/config/src/index.js @@ -9,12 +9,12 @@ const { normalizeConfig } = require('./normalize')\nconst { handleFiles } = require('./files')\nconst { LIFECYCLE } = require('./lifecycle')\n-const resolveConfig = async function(configFile, { cwd, context } = {}) {\n- const configPath = await getConfigPath(configFile, cwd)\n+const resolveConfig = async function(configFile, options = {}) {\n+ const configPath = await getConfigPath(configFile, options.cwd)\nconst baseDir = dirname(configPath)\nconst config = await configorama(configPath, {\n- options: { context },\n+ options: options,\nvariableSources: [\n/*{\n// Match variables ${secrets:xyz}\n",
        "chatgpt_rag": "fix: handle error when directory already exists in create-wmr script"
    },
    {
        "msg": "fix(storybook): refactor progress story",
        "diff": "diff --git a/packages/chakra-ui-core/src/Progress/Progress.stories.js b/packages/chakra-ui-core/src/Progress/Progress.stories.js import { storiesOf } from '@storybook/vue'\n-import { CSSReset, Progress as KProgress, Stack } from '..'\n+import { CSSReset, Progress as KProgress, Stack, Box } from '..'\nstoriesOf('UI | Progress', module)\n- .add('Default Progress', () => ({\n- components: { CSSReset, KProgress },\n+ .addDecorator(story => ({\n+ components: { CSSReset, Box, story: story() },\ntemplate: `\n- <div>\n- <CSSReset />\n- <KProgress :value=\"80\" />\n- </div>\n- `\n+ <Box w=\"full\" maxWidth=\"400px\" mx=\"auto\" mt=\"8\" p=\"3\">\n+ <CSSReset></CSSReset>\n+ <story></story>\n+ </Box>`\n+ }))\n+\n+ .add('Default Progress', () => ({\n+ components: { KProgress },\n+ template: `<KProgress :value=\"80\" />`\n}))\n.add('With stripe', () => ({\n- components: { CSSReset, KProgress },\n- template: `\n- <div>\n- <CSSReset />\n- <KProgress hasStripe :value=\"64\" />\n- </div>\n- `\n+ components: { KProgress },\n+ template: `<KProgress hasStripe :value=\"64\" />`\n}))\n.add('With sizes', () => ({\n- components: { CSSReset, KProgress, Stack },\n+ components: { KProgress, Stack },\ntemplate: `\n- <div>\n- <CSSReset />\n<Stack :spacing=\"5\">\n<KProgress rounded=\"sm\" color=\"green\" size=\"sm\" />\n<KProgress color=\"green\" size=\"md\" />\n<KProgress color=\"green\" size=\"lg\" />\n<KProgress color=\"green\" height=\"32px\" />\n- </Stack>\n- </div>\n- `\n+ </Stack>`\n}))\n.add('With color', () => ({\n- components: { CSSReset, KProgress },\n- template: `\n- <div>\n- <CSSReset />\n- <KProgress color=\"pink\" hasStripe />\n- </div>\n- `\n+ components: { KProgress },\n+ template: `<KProgress color=\"pink\" hasStripe />`\n}))\n",
        "date": "15.03.2020 15:57:01",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "sim_msg": "test(ui): BundleStats packages story",
        "sim_diff": "diff --git a/packages/ui/src/prototypes/bundle-page.stories.jsx b/packages/ui/src/prototypes/bundle-page.stories.jsx @@ -12,6 +12,7 @@ import { BundleAssets } from '../components/bundle-assets';\nimport { BundleAssetsTotalsTable } from '../components/bundle-assets-totals-table';\nimport { BundleAssetsTotalsChartBars } from '../components/bundle-assets-totals-chart-bars';\nimport { BundleModules } from '../components/bundle-modules';\n+import { BundlePackages } from '../components/bundle-packages';\nimport { Summary } from '../components/summary';\nimport { DuplicatePackagesWarning } from '../components/duplicate-packages-warning';\nimport { getWrapperDecorator } from '../stories';\n@@ -54,6 +55,7 @@ stories.add('totals', () => (\n<span isTabActive>Totals</span>\n<span>Assets</span>\n<span>Modules</span>\n+ <span>Packages</span>\n</Tabs>\n</Container>\n<Container>\n@@ -86,6 +88,7 @@ stories.add('assets', () => (\n<span>Totals</span>\n<span isTabActive>Assets</span>\n<span>Modules</span>\n+ <span>Packages</span>\n</Tabs>\n</Container>\n<Container>\n@@ -115,6 +118,7 @@ stories.add('modules', () => (\n<span>Totals</span>\n<span>Assets</span>\n<span isTabActive>Modules</span>\n+ <span>Packages</span>\n</Tabs>\n</Container>\n<Container>\n@@ -124,3 +128,33 @@ stories.add('modules', () => (\n<Footer className={css.footer} />\n</>\n));\n+\n+stories.add('packages', () => (\n+ <>\n+ <PageHeader />\n+ <main className={css.main}>\n+ <Container>\n+ <Summary data={currentJob.summary} />\n+ </Container>\n+ {currentJob.warnings && currentJob.warnings.duplicatePackages && (\n+ <Container>\n+ <DuplicatePackagesWarning duplicatePackages={currentJob.warnings.duplicatePackages} />\n+ </Container>\n+ )}\n+ <Container>\n+ <Tabs>\n+ <span>Totals</span>\n+ <span>Assets</span>\n+ <span>Modules</span>\n+ <span isTabActive>Packages</span>\n+ </Tabs>\n+ </Container>\n+ <Container>\n+ <Box>\n+ <BundlePackages jobs={JOBS} />\n+ </Box>\n+ </Container>\n+ </main>\n+ <Footer className={css.footer} />\n+ </>\n+));\n",
        "chatgpt_rag": "feat(ui): Added Box component to Progress story and updated layout in Default Progress story"
    },
    {
        "msg": "fix: :bug: no amp",
        "diff": "diff --git a/src/lib/og-image-url-build.js b/src/lib/og-image-url-build.js @@ -2,7 +2,7 @@ const objectToQueryParams = obj => {\nconst params = Object.entries(obj).map(\n([key, value]) => `${key}=${value}`\n)\n- return '?' + params.join('&amp;')\n+ return '?' + params.join('&')\n}\nexport const ogImageUrl = (author, website, title) => {\n",
        "date": "12.07.2021 06:18:01",
        "repo": "spences10/cheat-sheets",
        "type": "fix",
        "sim_msg": "fix(TextObjectPreview): correct text preview instead of html",
        "sim_diff": "diff --git a/components/core/ObjectPreview/index.js b/components/core/ObjectPreview/index.js @@ -15,11 +15,9 @@ import CodeObjectPreview from \"./CodeObjectPreview\";\nimport FontObjectPreview from \"./FontObjectPreview\";\nconst ObjectPreview = ({ file, ...props }) => {\n- const { type, coverImage } = file.data;\n+ const { type } = file.data;\n- const url = Validations.isPreviewableImage(type)\n- ? Strings.getURLfromCID(file.cid)\n- : Strings.getURLfromCID(coverImage?.cid);\n+ const url = Strings.getURLfromCID(file.cid);\nif (Validations.isPreviewableImage(type)) {\nreturn <ImageObjectPreview file={file} url={url} {...props} />;\n",
        "chatgpt_rag": "fix(og-image-url-build): fix query parameter separator in objectToQueryParams function"
    },
    {
        "msg": "fix: Correcting tsconfig `files` for `include` in template",
        "diff": "diff --git a/packages/create-wmr/tpl/tsconfig.json b/packages/create-wmr/tpl/tsconfig.json \"allowSyntheticDefaultImports\": true,\n\"downlevelIteration\": true\n},\n- \"files\": [\"./node_modules/wmr/index.d.ts\"],\n+ \"include\": [\"node_modules/wmr/index.d.ts\"],\n\"typeAcquisition\": {\n\"enable\": true\n}\n",
        "date": "27.03.2021 11:54:42",
        "repo": "preactjs/wmr",
        "type": "fix",
        "sim_msg": "chore: updated tsconfig.json",
        "sim_diff": "diff --git a/tsconfig.json b/tsconfig.json \"allowSyntheticDefaultImports\": true,\n\"forceConsistentCasingInFileNames\": true,\n\"resolveJsonModule\": true,\n- \"skipLibCheck\": true\n+ \"skipLibCheck\": true,\n+ \"strictNullChecks\": false\n},\n\"include\": [\"packages\", \"typings\"],\n\"exclude\": [\"node_modules\", \"**/__test?__\", \"**/dist\"]\n",
        "chatgpt_rag": "chore: updated tsconfig.json for create-wmr package"
    },
    {
        "msg": "fix: Quote zero-length strings in arguments\nIf a zero-length string is passed, it does not get properly quoted, and then it is not properly passed to the child process",
        "diff": "diff --git a/lib/utils/index.js b/lib/utils/index.js @@ -69,7 +69,7 @@ var utils = (module.exports = {\nargs.map(function (arg) {\n// if an argument contains a space, we want to show it with quotes\n// around it to indicate that it is a single argument\n- if (arg.indexOf(' ') === -1) {\n+ if (arg.length > 0 && arg.indexOf(' ') === -1) {\nreturn arg;\n}\n// this should correctly escape nested quotes\n",
        "date": "01.05.2019 00:04:25",
        "repo": "remy/nodemon",
        "type": "fix",
        "sim_msg": "refactor: prevent throw errors",
        "sim_diff": "diff --git a/lib/util/index.js b/lib/util/index.js @@ -758,7 +758,10 @@ exports.sendStatusCodeError = sendStatusCodeError;\nvar ESCAPE = { decodeURIComponent: noop };\nfunction parseQuery(text, sep, eq, escape) {\n+ try {\nreturn qs.parse(text, sep, eq, escape ? ESCAPE : null);\n+ } catch (e) {}\n+ return '';\n}\nexports.parseQuery = parseQuery;\nexports.getQueryValue = function(value) {\n",
        "chatgpt_rag": "refactor: improve argument handling in utils module"
    },
    {
        "msg": "fix: don't test for jest version",
        "diff": "diff --git a/packages/razzle/config/createJestConfig.js b/packages/razzle/config/createJestConfig.js @@ -4,7 +4,6 @@ const fs = require('fs');\nconst chalk = require('chalk');\nconst jest = require('jest');\n-const jestMajorVersion = parseInt(jest.default.getVersion().split('.')[0]);\n// first search for setupTests.ts file\n// if .ts file not exists then looks for setupTests.js\nfunction getSetupTestsFilePath(paths) {\n@@ -33,7 +32,7 @@ module.exports = (\n// TODO: I don't know if it's safe or not to just use / as path separator\n// in Jest configs. We need help from somebody with Windows to determine this.\n- const config = Object.assign(\n+ const config =\n{\ncollectCoverageFrom: ['src/**/*.{js,jsx,ts,tsx}', '!src/**/*.d.ts'],\n@@ -61,15 +60,9 @@ module.exports = (\n'^react-native$': 'react-native-web',\n},\nmoduleFileExtensions: ['js', 'jsx', 'json', 'ts', 'tsx'],\n- },\n- jestMajorVersion >= 24\n- ? {\n- setupFilesAfterEnv: setupTestsFile ? [setupTestsFile] : [],\n- }\n- : {\n- setupTestFrameworkScriptFile: setupTestsFile,\n+ setupFilesAfterEnv: setupTestsFile ? [setupTestsFile] : []\n}\n- );\n+\nif (rootDir) {\nconfig.rootDir = rootDir;\n}\n@@ -95,11 +88,8 @@ module.exports = (\n'transformIgnorePatterns',\n'reporters',\n'watchPlugins',\n- ].concat(\n- jestMajorVersion >= 24\n- ? ['setupFilesAfterEnv']\n- : ['setupTestFrameworkScriptFile']\n- );\n+ 'setupFilesAfterEnv'\n+ ];\nif (overrides) {\nsupportedKeys.forEach(key => {\nif (overrides.hasOwnProperty(key)) {\n",
        "date": "21.09.2020 15:49:30",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "chore: Remove coverage requirements for regular components",
        "sim_diff": "diff --git a/jest.config.js b/jest.config.js @@ -36,6 +36,11 @@ module.exports = {\nsetupFilesAfterEnv: ['<rootDir>/setupTests.js'],\ncollectCoverageFrom: [\n'./src/**/*.js',\n+ '!./src/components/pages/**/*.js',\n+ '!./src/components/charts/**/*.js',\n+ '!./src/components/common/**/*.js',\n+ '!./src/components/layout/**/*.js',\n+ '!./src/components/social-media-graphics/**/*.js',\n'!./src/pages/**/*.js',\n'!./src/templates/**/*.js',\n'!./src/stories/**',\n",
        "chatgpt_rag": "refactor: Simplify Jest configuration setup and remove unnecessary version check"
    },
    {
        "msg": "fix: Correcting route types",
        "diff": "diff --git a/packages/preact-iso/router.d.ts b/packages/preact-iso/router.d.ts @@ -12,5 +12,7 @@ interface RoutableProps {\n}\ndeclare module 'preact' {\n- export interface Attributes extends RoutableProps {}\n+ namespace JSX {\n+ interface IntrinsicAttributes extends RoutableProps {}\n+ }\n}\n",
        "date": "11.12.2020 19:27:24",
        "repo": "preactjs/wmr",
        "type": "fix",
        "sim_msg": "refactor: use handleClearAlert thunk in Routing component",
        "sim_diff": "diff --git a/packages/frontend/src/components/Routing.js b/packages/frontend/src/components/Routing.js @@ -15,6 +15,7 @@ import { IS_MAINNET, PUBLIC_URL, SHOW_PRERELEASE_WARNING, DISABLE_CREATE_ACCOUNT\nimport ExampleFlag from '../ExampleFlag';\nimport { Mixpanel } from \"../mixpanel/index\";\nimport * as accountActions from '../redux/actions/account';\n+import { handleClearAlert } from '../redux/reducers/status';\nimport { selectAccountSlice } from '../redux/slices/account';\nimport { actions as tokenFiatValueActions } from '../redux/slices/tokenFiatValues';\nimport { CreateImplicitAccountWrapper } from '../routes/CreateImplicitAccountWrapper';\n@@ -29,7 +30,6 @@ import translations_ru from '../translations/ru.global.json';\nimport translations_vi from '../translations/vi.global.json';\nimport translations_zh_hans from '../translations/zh-hans.global.json';\nimport translations_zh_hant from '../translations/zh-hant.global.json';\n-import { handleClearAlert } from '../utils/alerts';\nimport classNames from '../utils/classNames';\nimport getBrowserLocale from '../utils/getBrowserLocale';\nimport { getAccountIsInactive, removeAccountIsInactive, setAccountIsInactive } from '../utils/localStorage';\n@@ -186,7 +186,8 @@ class Routing extends Component {\nhandleRedirectUrl,\nhandleClearUrl,\nrouter,\n- fetchTokenFiatValues\n+ fetchTokenFiatValues,\n+ handleClearAlert\n} = this.props;\nfetchTokenFiatValues();\n@@ -598,7 +599,8 @@ const mapDispatchToProps = {\npromptTwoFactor,\nredirectTo,\ngetAccountHelperWalletState,\n- fetchTokenFiatValues\n+ fetchTokenFiatValues,\n+ handleClearAlert\n};\nconst mapStateToProps = (state) => ({\n",
        "chatgpt_rag": "refactor: update RoutableProps interface in preact-iso/router.d.ts"
    },
    {
        "msg": "fix(razzle): update copy plugin options to patterns",
        "diff": "diff --git a/packages/razzle/config/createConfigAsync.js b/packages/razzle/config/createConfigAsync.js @@ -896,13 +896,15 @@ module.exports = (\n}),\nwebpackMajor === 5 ? null : new webpack.HashedModuleIdsPlugin(),\nnew webpack.optimize.AggressiveMergingPlugin(),\n- new CopyPlugin([\n+ new CopyPlugin({\n+ patterns: [\n{\nfrom: paths.appPublic + '/**/*',\nto: paths.appBuild,\ncontext: paths.appPath,\n},\n- ]),\n+ ]\n+ }),\n].filter(x => x);\nconfig.optimization = {\n",
        "date": "02.10.2020 18:35:33",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "perf(build-config): enable caching and parallelism in uglify plugin",
        "sim_diff": "diff --git a/packages/build-config/configs/build.js b/packages/build-config/configs/build.js @@ -70,6 +70,6 @@ module.exports = {\nsourceMap: true,\n}),\nnew webpack.optimize.ModuleConcatenationPlugin(),\n- new UglifyPlugin({ sourceMap: true }),\n+ new UglifyPlugin({ sourceMap: true, cache: true, parallel: true }),\n],\n};\n",
        "chatgpt_rag": "build(razzle): update CopyPlugin configuration to use patterns array"
    },
    {
        "msg": "fix(Input): add multiple to propNames",
        "diff": "diff --git a/src/elements/Input/Input.js b/src/elements/Input/Input.js @@ -22,7 +22,7 @@ export const htmlInputPropNames = [\n'selected', 'defaultValue', 'defaultChecked',\n// LIMITED HTML PROPS\n- 'autoCapitalize', 'autoComplete', 'autoFocus', 'checked', 'form', 'max', 'maxLength', 'min',\n+ 'autoCapitalize', 'autoComplete', 'autoFocus', 'checked', 'form', 'max', 'maxLength', 'min', 'multiple',\n'name', 'pattern', 'placeholder', 'readOnly', 'required', 'step', 'type', 'value',\n// Heads Up!\n",
        "date": "07.03.2017 18:28:13",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "sim_msg": "feat(form/input): add Input component ref as prop",
        "sim_diff": "diff --git a/components/form/input/src/Input/Component/index.js b/components/form/input/src/Input/Component/index.js @@ -24,6 +24,7 @@ class Input extends Component {\nname,\nonChange,\nplaceholder,\n+ reference,\nsize,\ntype,\nvalue\n@@ -37,6 +38,7 @@ class Input extends Component {\nname={name}\nonChange={ev => this.changeHandler(ev, onChange)}\nplaceholder={placeholder}\n+ ref={reference}\ntype={type}\nvalue={value}\n/>\n@@ -60,7 +62,9 @@ Input.propTypes = {\n/* text, password, date or number */\ntype: PropTypes.string,\n/* value of the control */\n- value: PropTypes.string\n+ value: PropTypes.string,\n+ /* react ref to access DOM node */\n+ reference: PropTypes.func\n}\nInput.defaultProps = {\n",
        "chatgpt_rag": "feat(elements/Input): add 'multiple' prop to htmlInputPropNames"
    },
    {
        "msg": "fix(example): load all client assets",
        "diff": "diff --git a/examples/with-vendor-bundle/src/server.js b/examples/with-vendor-bundle/src/server.js @@ -5,13 +5,26 @@ import { renderToString } from \"react-dom/server\";\nconst assets = require(process.env.RAZZLE_ASSETS_MANIFEST);\n-const scripts = Object.keys(assets).reduce((scripts, key) => {\n- return (\n- scripts + `<script src=\"${assets[key].js}\" defer crossorigin></script>`\n- );\n-}, \"\");\n+const scripts = Object.keys(assets)\n+ .map((key) => {\n+ const script = assets[key].js;\n+\n+ if (typeof script === 'undefined' || script === null) {\n+ return null;\n+ }\n+\n+ if (Array.isArray(script)) {\n+ return script\n+ .map((item) => {\n+ return `<script src=\"${item}\"></script>`;\n+ })\n+ .join('');\n+ }\n+\n+ return `<script src=\"${script}\"></script>`;\n+ })\n+ .filter((a) => typeof a !== 'undefined' || a !== null);\n-console.log(scripts);\nconst server = express();\n@@ -28,7 +41,7 @@ server\n<meta charSet='utf-8' />\n<title>Welcome to Razzle</title>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n- ${scripts}\n+ ${scripts.join('\\n')}\n</head>\n<body>\n<div id=\"root\">${markup}</div>\n",
        "date": "28.08.2020 20:01:52",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "perf(server): minor regex improvements",
        "sim_diff": "diff --git a/src/bin/server.js b/src/bin/server.js @@ -43,7 +43,7 @@ bundler.then(compiler => {\n// prerenderer views\n(req, res, next) => {\n- renderer(req.url.replace(/(\\?.*)$/, '').replace(/(\\.html)$/, ''))\n+ renderer(req.url.replace(/\\?.*$/, '').replace(/\\.html$/, ''))\n.then(html => {\nif (html === false) {\n// proceed to static server files\n",
        "chatgpt_rag": "refactor(server): improve script handling in server.js"
    },
    {
        "msg": "fix: WMR CLI commands",
        "diff": "diff --git a/packages/wmr/src/cli.js b/packages/wmr/src/cli.js @@ -15,8 +15,6 @@ function bool(v) {\n// global options\nprog\n- .option('--public', 'Your web app root directory (default: ./public)')\n- .option('--out', 'Where to store generated files (default: ./dist)')\n.option('--cwd', 'The working directory - equivalent to \"(cd FOO && wmr)\"')\n// Setting env variables isn't common knowledege for many windows users. Much\n// easier to pass a flag to our binary instead.\n@@ -24,6 +22,8 @@ prog\nprog\n.command('build', 'make a production build')\n+ .option('--public', 'Your web app root directory (default: ./public)')\n+ .option('--out', 'Where to store generated files (default: ./dist)')\n.option('--prerender', 'Pre-render the application to HTML')\n.option('--sourcemap', 'Enable Source Maps')\n.option('--visualize', 'Launch interactive bundle visualizer')\n@@ -46,6 +46,7 @@ prog\nprog\n.command('start', 'Start a development server', { default: true })\n+ .option('--public', 'Your web app root directory (default: ./public)')\n.option('--port, -p', 'HTTP port to listen on (default: $PORT or 8080)')\n.option('--host', 'HTTP host to listen on (default: localhost)')\n.option('--http2', 'Use HTTP/2 (default: false)')\n",
        "date": "09.05.2021 16:08:33",
        "repo": "preactjs/wmr",
        "type": "fix",
        "sim_msg": "feat(cli): Add port setting to dev command.",
        "sim_diff": "diff --git a/packages/cli/src/commands/dev/runDevServer.js b/packages/cli/src/commands/dev/runDevServer.js @@ -27,6 +27,7 @@ async function runDevServer({ context }) {\nenv: {\n...process.env,\nLOWDEFY_DIRECTORY_CONFIG: context.directories.config,\n+ PORT: context.commandLineOptions.port,\n},\n},\nsilent: false,\n",
        "chatgpt_rag": "feat(wmr): Add public and out options to build and start commands."
    },
    {
        "msg": "fix(search): Fixes - linting issue",
        "diff": "diff --git a/src/epics/epic.test.js b/src/epics/epic.test.js @@ -4,8 +4,6 @@ import configureStore from \"../configure-store\";\nimport { createEpicMiddleware } from 'redux-observable';\nimport { of} from 'rxjs';\n-import { QueryParseError } from 'lunr';\n-\nimport rootEpic from './root-epic'\nimport { setDataset } from '../domain/dataset'\nimport { loadDataset } from \"./load-dataset-epic\"\n",
        "date": "09.07.2018 12:30:57",
        "repo": "iqtlabs/crviz",
        "type": "fix",
        "sim_msg": "chore: Pay down some tech-debt",
        "sim_diff": "diff --git a/client/src/redux/index.js b/client/src/redux/index.js @@ -14,10 +14,7 @@ import failedUpdatesEpic from './failed-updates-epic';\nimport updateCompleteEpic from './update-complete-epic';\nimport { types as settingsTypes } from './settings';\n-\n-/** ***********************************/\n-const challengeReduxTypes = {};\n-/** ***********************************/\n+import { types as challengeReduxTypes } from '../templates/Challenges/redux';\nexport const ns = 'app';\n",
        "chatgpt_rag": "chore: Remove unnecessary import of QueryParseError from 'lunr' in epic.test.js"
    },
    {
        "msg": "fix(scss-plugin): use onlyLocals option",
        "diff": "diff --git a/packages/razzle-plugin-scss/index.js b/packages/razzle-plugin-scss/index.js @@ -126,8 +126,9 @@ module.exports = (\nuse: isServer\n? [\n{\n- loader: require.resolve('css-loader/locals'),\n+ loader: require.resolve('css-loader'),\noptions: Object.assign({}, options.css[constantEnv], {\n+ onlyLocals: true,\nmodules: true,\nlocalIdentName: '[name]__[local]___[hash:base64:5]',\n}),\n",
        "date": "23.04.2020 19:53:34",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "build: Fix css-loader options",
        "sim_diff": "diff --git a/build/configs/css.js b/build/configs/css.js @@ -21,12 +21,13 @@ module.exports = (settings) => {\n{\nloader: 'css-loader',\noptions: {\n- modules: true,\n+ modules: {\nlocalIdentName: isDevelopment\n? '[path][name]__[local]'\n: '[hash:base64:5]',\n},\n},\n+ },\n{\nloader: 'postcss-loader',\noptions: {\n",
        "chatgpt_rag": "build: Update css-loader configuration for onlyLocals option"
    },
    {
        "msg": "fix: heading level",
        "diff": "diff --git a/sheets/javascript.md b/sheets/javascript.md @@ -465,7 +465,7 @@ document, but could change `html` with `p`, `span` whatever.\ndocument.getElementsByTagName('html')[0].style['font-size'] = '10px'\n```\n-### Checking for `window`\n+## Checking for `window`\n[Optional chaining](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Optional_chaining) can not be used on `window`.\nIt will throw an error when used on any undeclared root object, so no escaping the `typeof window == 'undefined'` check with a clever `?.`.\n",
        "date": "23.08.2021 23:58:37",
        "repo": "spences10/cheat-sheets",
        "type": "fix",
        "sim_msg": "chore: eliminate cognitive complexity of parseHtmlToContainer()",
        "sim_diff": "diff --git a/src/utils/dom/parseHtmlToContainer.js b/src/utils/dom/parseHtmlToContainer.js @@ -2,17 +2,24 @@ export const parseHtmlToContainer = (param, target) => {\n// DOM element\nif (param instanceof HTMLElement) {\ntarget.appendChild(param)\n+\n// JQuery element(s)\n} else if (typeof param === 'object') {\n+ handleJqueryElem(target, param)\n+\n+ // Plain string\n+ } else if (param) {\n+ target.innerHTML = param\n+ }\n+}\n+\n+const handleJqueryElem = (target, elem) => {\ntarget.innerHTML = ''\n- if (0 in param) {\n- for (let i = 0; i in param; i++) {\n- target.appendChild(param[i].cloneNode(true))\n+ if (0 in elem) {\n+ for (let i = 0; i in elem; i++) {\n+ target.appendChild(elem[i].cloneNode(true))\n}\n} else {\n- target.appendChild(param.cloneNode(true))\n- }\n- } else if (param) {\n- target.innerHTML = param\n+ target.appendChild(elem.cloneNode(true))\n}\n}\n",
        "chatgpt_rag": "style: update heading level in javascript.md file"
    },
    {
        "msg": "fix(razzle): use paths.appAssetsManifest in ManifestPlugin",
        "diff": "diff --git a/packages/razzle/config/createConfigAsync.js b/packages/razzle/config/createConfigAsync.js @@ -166,6 +166,8 @@ module.exports = (\nwebpackOptions.definePluginOptions = dotenv.stringified;\n+ webpackOptions.appAssetsManifestPath = paths.appAssetsManifest;\n+\nif (IS_NODE) {\nwebpackOptions.jsOutputFilename = `[name].js`;\n@@ -735,7 +737,7 @@ module.exports = (\n// Output all files in a manifest file called assets-manifest.json\n// in the build directory.\nnew ManifestPlugin({\n- fileName: path.join(paths.appBuild, 'assets.json'),\n+ fileName: webpackOptions.appAssetsManifestPath,\nwriteToFileEmit: true,\ngenerate: (seed, files) => {\nconst entrypoints = new Set();\n",
        "date": "30.03.2021 20:02:14",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "refactor(build-config): use contenthash for mini-css-extract-plugin",
        "sim_diff": "diff --git a/packages/build-config/configs/build.js b/packages/build-config/configs/build.js @@ -60,8 +60,7 @@ module.exports = {\nnew StatsWriterPlugin({ fields: null }),\nnew ServiceWorkerPlugin(),\nnew MiniCSSExtractPlugin({\n- filename: getAssetPath('[name]-[hash:16].css'),\n- chunkFilename: getAssetPath('[name]-[hash:16].css'),\n+ filename: getAssetPath('[name]-[contenthash:16].css'),\n}),\nnew webpack.HashedModuleIdsPlugin(),\nnew webpack.EnvironmentPlugin(\n",
        "chatgpt_rag": "feat(razzle): add appAssetsManifestPath option to webpack config"
    },
    {
        "msg": "fix(Statistic): fix wrong inverted type",
        "diff": "diff --git a/src/views/Statistic/Statistic.d.ts b/src/views/Statistic/Statistic.d.ts @@ -33,7 +33,7 @@ export interface StatisticProps {\nhorizontal?: boolean;\n/** A statistic can be formatted to fit on a dark background. */\n- inverted?: string;\n+ inverted?: boolean;\n/** Label content of the Statistic. */\nlabel?: SemanticShorthandContent;\n",
        "date": "31.07.2017 23:40:58",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "sim_msg": "chore(drill-down): use FormatNumber, add space after label",
        "sim_diff": "diff --git a/src/components/common/statistic.js b/src/components/common/statistic.js @@ -31,7 +31,9 @@ const StatisticGroup = ({ children }) => (\nconst DrillDown = ({ label, value }) => (\n<div className={statisticStyles.drillDown}>\n<span className={statisticStyles.label}>{label} </span>\n- <span className={statisticStyles.value}>{value}</span>\n+ <span className={statisticStyles.value}>\n+ <FormatNumber number={value} />\n+ </span>\n</div>\n)\n",
        "chatgpt_rag": "chore(statistic): change inverted prop type to boolean, update label content type to SemanticShorthandContent"
    },
    {
        "msg": "fix(typo): update README file",
        "diff": "diff --git a/packages/razzle/README.md b/packages/razzle/README.md @@ -275,7 +275,7 @@ import 'react-app-polyfill/ie11'; // For IE 11 support\n* `process.env.NODE_ENV`: `'development'` or `'production'`\n* `process.env.BUILD_TYPE`: `'iso'` for isomorphic/universal applications or `'spa'` for single page applications. The default is `'iso'`. This is set by CLI arguments.\n* `process.env.BUILD_TARGET`: either `'client'` or `'server'`\n-* `process.env.PUBLIC_PATH`: Only in used in `razzle build`. You can alter the `webpack.config.output.publicPath` of the client assets (bundle, css, and images). This is useful if you plan to serve your assets from a CDN. Make sure to _include_ a trailing slash (e.g. `PUBLIC_PATH=https://cdn.example.com/`). If you are using React and altering the public path, make sure to also [include the `crossorigin` attribute](https://reactjs.org/docs/cdn-links.html#why-the-crossorigin-attribute) on your `<script>` tag in `src/server.js`.\n+* `process.env.PUBLIC_PATH`: Only used in `razzle build`. You can alter the `webpack.config.output.publicPath` of the client assets (bundle, css, and images). This is useful if you plan to serve your assets from a CDN. Make sure to _include_ a trailing slash (e.g. `PUBLIC_PATH=https://cdn.example.com/`). If you are using React and altering the public path, make sure to also [include the `crossorigin` attribute](https://reactjs.org/docs/cdn-links.html#why-the-crossorigin-attribute) on your `<script>` tag in `src/server.js`.\n* `process.env.CLIENT_PUBLIC_PATH`: The `NODE_ENV=development` build's `BUILD_TARGET=client` has a different `PUBLIC_PATH` than `BUILD_TARGET=server`. Default is `http://${process.env.HOST}:${process.env.PORT + 1}/`\nYou can create your own custom environment variables that will be inlined during the build. They must start\n",
        "date": "08.04.2020 06:32:29",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "build: fix mistake in build config",
        "sim_diff": "diff --git a/packages/manager/apps/public-cloud/webpack.config.js b/packages/manager/apps/public-cloud/webpack.config.js @@ -32,7 +32,7 @@ module.exports = (env = {}) => {\n__FEEDBACK_URL__: process.env.FEEDBACK_URL ? `'${process.env.FEEDBACK_URL}'` : 'null',\n__WEBPACK_REGION__: process.env.REGION ? `'${process.env.REGION.toUpperCase()}'` : '\"EU\"',\n__NODE_ENV__: process.env.NODE_ENV ? `'${process.env.NODE_ENV}'` : '\"development\"',\n- __NG_APP_INJECTIONS__: process.env.NODE_ENV ? `'${process.env.NG_APP_INJECTIONS}'` : 'null',\n+ __NG_APP_INJECTIONS__: process.env.NG_APP_INJECTIONS ? `'${process.env.NG_APP_INJECTIONS}'` : 'null',\n}),\n],\nresolve: {\n",
        "chatgpt_rag": "build: fix typo in PUBLIC_PATH usage in razzle build config"
    },
    {
        "msg": "fix: Adding missing types",
        "diff": "diff --git a/packages/preact-iso/index.d.ts b/packages/preact-iso/index.d.ts import { VNode } from 'preact';\nimport { PrerenderOptions } from './prerender';\n+export { Router, LocationProvider, useLoc, useLocation } from './router';\n+export { default as lazy, ErrorBoundary } from './lazy';\n+export { default as hydrate } from './hydrate';\n+\nexport default function prerender(vnode: VNode, options?: PrerenderOptions): Promise<{ html: string, links: Set<string>}>;\n",
        "date": "16.02.2021 10:26:39",
        "repo": "preactjs/wmr",
        "type": "fix",
        "sim_msg": "feat(checkbox): the initial value of prefix",
        "sim_diff": "diff --git a/packages/checkbox/src/index.ts b/packages/checkbox/src/index.ts @@ -3,6 +3,7 @@ import {\nuseState,\nuseRef,\nuseKeypress,\n+ usePrefix,\nisUpKey,\nisDownKey,\nisSpaceKey,\n@@ -30,7 +31,7 @@ type State<Value> = {\nexport default createPrompt(\n<Value>(state: State<Value>, done: (value: Array<Value>) => void): string => {\n- const { prefix, pageSize = 7, instructions } = state;\n+ const { prefix = usePrefix(), pageSize = 7, instructions } = state;\nconst paginator = useRef(new Paginator()).current;\nconst [status, setStatus] = useState('pending');\n",
        "chatgpt_rag": "feat(preact-iso): export Router, LocationProvider, useLoc, useLocation, lazy, ErrorBoundary, hydrate"
    },
    {
        "msg": "fix: Ensures TS config files are handled first",
        "diff": "diff --git a/packages/wmr/src/lib/normalize-options.js b/packages/wmr/src/lib/normalize-options.js @@ -78,7 +78,7 @@ export async function normalizeOptions(options, mode, configWatchFiles = []) {\n// ignore error, reading aliases from package.json is an optional feature\n}\n- const EXTENSIONS = ['.js', '.ts', '.mjs'];\n+ const EXTENSIONS = ['.ts', '.js', '.mjs'];\nlet custom;\nlet initialError;\n",
        "date": "14.05.2021 01:41:50",
        "repo": "preactjs/wmr",
        "type": "fix",
        "sim_msg": "refactor(cli): changes normalize steps to early returns\nwhich I think now makes for code that is easier to read",
        "sim_diff": "diff --git a/src/cli/normalize-cli-options.js b/src/cli/normalize-cli-options.js @@ -8,14 +8,7 @@ const loadConfig = require(\"../config-utl/extract-depcruise-config\");\nconst defaults = require(\"./defaults\");\nfunction getOptionValue(pDefault) {\n- return (pValue) => {\n- let lReturnValue = pDefault;\n-\n- if (typeof pValue === \"string\") {\n- lReturnValue = pValue;\n- }\n- return lReturnValue;\n- };\n+ return (pValue) => (typeof pValue === \"string\" ? pValue : pDefault);\n}\nfunction normalizeConfigFileName(pCliOptions, pConfigWrapperName, pDefault) {\n@@ -104,19 +97,22 @@ function validateAndGetKnownViolationsFileName(pKnownViolations) {\n}\nfunction normalizeKnownViolationsOption(pCliOptions) {\n- if (has(pCliOptions, \"ignoreKnown\")) {\n- const lReturnValue = {\n+ if (!has(pCliOptions, \"ignoreKnown\")) {\n+ return {};\n+ }\n+ return {\nknownViolationsFile: validateAndGetKnownViolationsFileName(\npCliOptions.ignoreKnown\n),\n};\n- return lReturnValue;\n- }\n- return {};\n}\nfunction normalizeValidationOption(pCliOptions) {\n- if (has(pCliOptions, \"validate\")) {\n+ if (!has(pCliOptions, \"validate\")) {\n+ return {\n+ validate: false,\n+ };\n+ }\nconst rulesFile = validateAndNormalizeRulesFileName(pCliOptions.validate);\nreturn {\nrulesFile,\n@@ -125,23 +121,18 @@ function normalizeValidationOption(pCliOptions) {\n),\nvalidate: true,\n};\n- } else {\n- return {\n- validate: false,\n- };\n- }\n}\nfunction normalizeProgress(pCliOptions) {\n- let lProgress = null;\n+ if (!has(pCliOptions, \"progress\")) {\n+ return {};\n+ }\n- if (has(pCliOptions, \"progress\")) {\n- lProgress = get(pCliOptions, \"progress\");\n+ let lProgress = pCliOptions.progress;\nif (lProgress === true) {\nlProgress = \"cli-feedback\";\n}\n- }\n- return lProgress ? { progress: lProgress } : {};\n+ return { progress: lProgress };\n}\nfunction normalizeCache(pCliOptions) {\n",
        "chatgpt_rag": "refactor(wmr): change order of extensions in normalizeOptions function to prioritize TypeScript files"
    },
    {
        "msg": "fix(TextArea): fix autoHeight calculate wrong value on long text\nCalculate content height without taking a vertical scroll bar into\naccount.",
        "diff": "diff --git a/src/addons/TextArea/TextArea.js b/src/addons/TextArea/TextArea.js @@ -115,7 +115,9 @@ class TextArea extends Component {\n// Measure the scrollHeight and update the height to match.\nthis.ref.style.height = 'auto'\n+ this.ref.style.overflowY = 'hidden'\nthis.ref.style.height = `${Math.max(parseFloat(minHeight), Math.ceil(this.ref.scrollHeight + borderHeight))}px`\n+ this.ref.style.overflowY = ''\n}\nrender() {\n",
        "date": "18.10.2017 11:24:49",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "sim_msg": "refactor: add grow prop in textarea and resizer",
        "sim_diff": "diff --git a/src/components/Textarea/index.js b/src/components/Textarea/index.js @@ -20,7 +20,11 @@ export default class Textarea extends Component {\n}\ncomponentDidMount() {\n- autosize(this.textareaRef.current);\n+ const { grow } = this.props;\n+ if (grow) {\n+ return autosize(this.textareaRef.current);\n+ }\n+ return null;\n}\ngetContainerClassNames() {\n@@ -150,6 +154,8 @@ Textarea.propTypes = {\ncols: PropTypes.number,\n/** The number of visible text lines for the control. The value by default is 3. */\nrows: PropTypes.number,\n+ /** This make to textarea grow. This value defaults to false. */\n+ grow: PropTypes.bool,\n};\nTextarea.defaultProps = {\n@@ -167,6 +173,7 @@ Textarea.defaultProps = {\nreadOnly: false,\ncols: undefined,\nrows: 3,\n+ grow: false,\nonChange: () => {},\nonFocus: () => {},\nonBlur: () => {},\n",
        "chatgpt_rag": "style: update textarea height dynamically based on content.scrollHeight"
    },
    {
        "msg": "fix: html-legend: use legend keydown logic",
        "diff": "diff --git a/src/charts/html-legend.js b/src/charts/html-legend.js import {select} from 'd3-selection';\n-//import {event} from 'd3-selection';\nimport {pluck, utils} from '../core/utils';\nimport {config} from '../core/config';\n@@ -209,7 +208,7 @@ export class HtmlLegend {\n.attr('tabindex', 0);\ntabElements\n- .on('keydown', d => {\n+ .on('keydown', config._d3compat.eventHandler((d, event) => {\n// trigger only if d is an object\nif (event.keyCode === 13 && typeof d === 'object') {\nd.chart.legendToggle(d)\n@@ -219,7 +218,7 @@ export class HtmlLegend {\nd.chart.legendToggle(d)\nevent.preventDefault();\n}\n- })\n+ }))\n.on('focus', d => {\nthis._parent.legendHighlight(d);\n})\n",
        "date": "06.04.2021 17:27:49",
        "repo": "dc-js/dc.js",
        "type": "fix",
        "sim_msg": "feat(line-chart): begin adding tooltips\nThis is incomplete: the second argument for `hover` should be the\nhovered day's info, not all of the info.\nSee line 47.",
        "sim_diff": "diff --git a/src/components/charts/line-chart.js b/src/components/charts/line-chart.js -import React, { Fragment } from 'react'\n+import React, { Fragment, useState } from 'react'\nimport { extent, max } from 'd3-array'\nimport { scaleLinear, scaleTime } from 'd3-scale'\nimport { line, curveCardinal } from 'd3-shape'\nimport { timeMonth, timeDay } from 'd3-time'\n+import Tooltip from './tooltip'\n+\nimport { formatDate, formatNumber } from '~utilities/visualization'\nimport chartStyles from './charts.module.scss'\n@@ -24,6 +26,7 @@ const LineChart = ({\nyTicks,\nlastXTick,\nperCapLabel,\n+ renderTooltipContents,\n}) => {\nconst totalXMargin = marginLeft + marginRight\nconst totalYMargin = marginTop + marginBottom\n@@ -37,6 +40,34 @@ const LineChart = ({\n})\n})\n+ const [tooltip, setTooltip] = useState(null)\n+ const [timeoutRef, setTimeoutRef] = useState(null)\n+\n+ const hover = (event, dataLine) => {\n+ console.log(dataLine) // todo get current date's info\n+ // Ensure that tooltip doesn't flash when transitioning between bars\n+ if (timeoutRef) {\n+ clearTimeout(timeoutRef)\n+ }\n+ const isTouchEvent = !event.clientX\n+ const eventX = isTouchEvent ? event.touches[0].clientX : event.clientX\n+ const eventY = isTouchEvent ? event.touches[0].clientY : event.clientY\n+ console.log(eventX, eventY)\n+\n+ setTooltip({\n+ top: isTouchEvent ? eventY - 130 : eventY + 10,\n+ left: isTouchEvent ? eventX - 80 : eventX + 5,\n+ d: dataLine,\n+ })\n+ }\n+\n+ const mouseOut = () => {\n+ if (timeoutRef) {\n+ clearTimeout(timeoutRef)\n+ }\n+ setTimeoutRef(setTimeout(() => setTooltip(null), 200))\n+ }\n+\nconst dateDomain = extent(dates)\nconst xScaleTime = scaleTime()\n@@ -159,17 +190,33 @@ const LineChart = ({\n{data && (\n<>\n{data.map(dataLine => (\n+ <>\n<path\nd={lineFn(dataLine.data)}\nstroke={dataLine.color}\nstrokeWidth={dataLine.stroke}\nfill=\"none\"\n/>\n+ {/* Add a wider hidden path for tooltips. */}\n+ <path\n+ d={lineFn(dataLine.data)}\n+ stroke=\"transparent\"\n+ strokeWidth={6}\n+ fill=\"none\"\n+ onMouseOver={event => hover(event, dataLine)}\n+ onFocus={event => hover(event, dataLine)}\n+ onMouseOut={mouseOut}\n+ onBlur={mouseOut}\n+ />\n+ </>\n))}\n</>\n)}\n</g>\n</svg>\n+ {renderTooltipContents && tooltip && (\n+ <Tooltip {...tooltip}>{renderTooltipContents(tooltip.d)} </Tooltip>\n+ )}\n</>\n)\n}\n",
        "chatgpt_rag": "fix(html-legend): update event handling for keyboard accessibility"
    },
    {
        "msg": "fix(prerender): drop `publicPath` prefix during prerender",
        "diff": "diff --git a/src/lib/prerender.js b/src/lib/prerender.js @@ -4,15 +4,16 @@ import { Worker } from 'worker_threads';\n* @param {object} options\n* @property {string} [cwd = '.']\n* @property {string} [out = '.cache']\n+ * @property {string} publicPath\n*/\n-export function prerender({ cwd = '.', out = '.cache' }) {\n+export function prerender({ cwd = '.', out = '.cache', publicPath }) {\nconst w = new Worker(\n`(${workerCode})(require('worker_threads').workerData)\n.then(r => require('worker_threads').parentPort.postMessage([1,r]))\n.catch(err => require('worker_threads').parentPort.postMessage([0,err && err.stack || err+'']))`,\n{\neval: true,\n- workerData: { cwd, out },\n+ workerData: { cwd, out, publicPath },\n// execArgv: ['--experimental-modules'],\nstderr: true\n}\n@@ -28,7 +29,7 @@ export function prerender({ cwd = '.', out = '.cache' }) {\n});\n}\n-async function workerCode({ cwd, out }) {\n+async function workerCode({ cwd, out, publicPath }) {\n/*global globalThis*/\nconst path = require('path');\n@@ -67,6 +68,7 @@ async function workerCode({ cwd, out }) {\nthrow Error(`Unable to detect <script src=\"entry.js\"> in your index.html.`);\n}\n// script = new URL(`../dist/${script.replace(/^(\\.?\\/)?/g, '')}`, selfUrl).href;\n+ script = script.replace(publicPath, '');\nscript = path.resolve(cwd, out, script.replace(/^(\\.?\\/)?/g, ''));\n// Prevent Rollup from transforming `import()` here.\n",
        "date": "03.12.2020 07:28:55",
        "repo": "preactjs/wmr",
        "type": "fix",
        "sim_msg": "perf(renderer): skip testing url when route is defined",
        "sim_diff": "diff --git a/src/renderer.js b/src/renderer.js @@ -63,7 +63,9 @@ const slugRegex = /\\/((?!(?:assets|img)(\\/|$))[^.]+)(\\.(?!js|css|xml|txt|png|gif\nmodule.exports = (url, route) => dataPromise\n.then(() => {\n- if (url === '/') {\n+ if (route && route.path) {\n+ return route\n+ } else if (url === '/') {\nurl = '/index'\n} else if (!slugRegex.test(url)) {\n// static file URL\n@@ -93,11 +95,9 @@ module.exports = (url, route) => dataPromise\ncollection,\nslug\n}\n- } else if (!route) {\n+ } else {\n// try to map resource by slug with storefront router\nreturn router.map(url)\n- } else {\n- return route\n}\n})\n",
        "chatgpt_rag": "feat(prerender): add publicPath option to prerender function"
    },
    {
        "msg": "fix(babel-preset-razzle): remove unused deps",
        "diff": "diff --git a/packages/babel-preset-razzle/package.json b/packages/babel-preset-razzle/package.json \"@babel/plugin-syntax-bigint\": \"7.8.3\",\n\"@babel/plugin-syntax-dynamic-import\": \"^7.8.3\",\n\"@babel/plugin-transform-modules-commonjs\": \"7.10.4\",\n- \"@babel/plugin-transform-react-jsx-source\": \"^7.9.0\",\n\"@babel/plugin-transform-runtime\": \"^7.9.0\",\n\"@babel/preset-env\": \"^7.9.5\",\n\"@babel/preset-react\": \"^7.9.4\",\n\"@babel/preset-typescript\": \"^7.9.0\",\n\"@babel/runtime\": \"^7.9.2\",\n- \"babel-plugin-dynamic-import-node\": \"2.3.3\",\n\"babel-plugin-syntax-jsx\": \"^6.18.0\",\n\"babel-plugin-transform-react-remove-prop-types\": \"0.4.24\",\n\"chalk\": \"^4.1.0\"\n",
        "date": "28.02.2021 15:19:12",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "feat(babel-preset-app): pin new deps",
        "sim_diff": "diff --git a/babel-preset-app/package.json b/babel-preset-app/package.json \"@babel/plugin-transform-runtime\": \"7.4.4\",\n\"@babel/preset-env\": \"7.4.5\",\n\"@babel/runtime\": \"7.4.5\",\n- \"@babel/runtime-corejs3\": \"^7.4.5\",\n- \"babel-loader\": \"^8.0.6\",\n+ \"@babel/runtime-corejs3\": \"7.4.5\",\n+ \"babel-loader\": \"8.0.6\",\n\"babel-plugin-dynamic-import-node\": \"2.2.0\",\n\"babel-plugin-module-resolver\": \"3.2.0\",\n- \"babel-plugin-transform-imports\": \"^1.5.1\",\n+ \"babel-plugin-transform-imports\": \"1.5.1\",\n\"core-js\": \"3.1.2\"\n},\n\"keywords\": [\n",
        "chatgpt_rag": "chore(babel-preset-razzle): update dependencies and remove unused plugin"
    },
    {
        "msg": "fix(project-version): Fixes version change, keeping the correct class on the URL",
        "diff": "diff --git a/app/routes/project-version.js b/app/routes/project-version.js @@ -45,17 +45,17 @@ export default Ember.Route.extend({\nendingRoute = `classes/${className}`;\nbreak;\n}\n- case 'project-version.classes.index': {\n+ case 'project-version.classes.class.index': {\nconst className = this.modelFor('project-version.classes.class').get('name');\nendingRoute = `classes/${className}`;\nbreak;\n}\n- case 'project-version.modules.index': {\n- const moduleName = this.pasramsFor('project-version.modules.module').module;\n+ case 'project-version.modules.module.index': {\n+ const moduleName = this.paramsFor('project-version.modules.module').module;\nendingRoute = `modules/${moduleName}`;\nbreak;\n}\n- case 'project-version.namespaces.index': {\n+ case 'project-version.namespaces.namespace.index': {\nconst namespaceName = this.paramsFor('project-version.namespaces.namespace').namespace;\nendingRoute = `namespaces/${namespaceName}`;\nbreak;\n",
        "date": "18.06.2017 22:07:45",
        "repo": "ember-learn/ember-api-docs",
        "type": "fix",
        "sim_msg": "feat: parallelize event overview api requests",
        "sim_diff": "diff --git a/app/routes/events/view/index.js b/app/routes/events/view/index.js import Route from '@ember/routing/route';\n+import { allSettled } from 'rsvp';\nimport EmberTableRouteMixin from 'open-event-frontend/mixins/ember-table-route';\nexport default class extends Route.extend(EmberTableRouteMixin) {\n@@ -14,18 +15,30 @@ export default class extends Route.extend(EmberTableRouteMixin) {\n'page[number]' : params.per_page || 1\n};\nqueryString = this.applySortFilters(queryString, params);\n+ const sponsorsPromise = this.asArray(eventDetails.query('sponsors', {}, queryString));\n+ const roleInvitesPromise = eventDetails.query('roleInvites', {});\n+ const sessionTypesPromise = eventDetails.query('sessionTypes', {});\n+ const socialLinksPromise = eventDetails.query('socialLinks', {});\n+ const statisticsPromise = eventDetails.query('generalStatistics', {});\n+ const orderStatPromise = eventDetails.query('orderStatistics', {});\n+ const ticketsPromise = eventDetails.query('tickets', {});\n+ const rolesPromise = this.store.findAll('role');\n+\n+ const [sponsors, roleInvites, sessionTypes, socialLinks,\n+ statistics, orderStat, tickets, roles] = (await allSettled([sponsorsPromise, roleInvitesPromise, sessionTypesPromise, socialLinksPromise,\n+ statisticsPromise, orderStatPromise, ticketsPromise, rolesPromise])).map(result => result.value);\nreturn {\n- event : await eventDetails,\n- sponsors : await this.asArray(eventDetails.query('sponsors', {}, queryString)),\n- roleInvites : await eventDetails.query('roleInvites', {}),\n- sessionTypes : await eventDetails.query('sessionTypes', {}),\n- socialLinks : await eventDetails.query('socialLinks', {}),\n- statistics : await eventDetails.query('generalStatistics', {}),\n- orderStat : await eventDetails.query('orderStatistics', {}),\n- tickets : await eventDetails.query('tickets', {}),\n- roles : await this.store.findAll('role')\n+ event: eventDetails,\n+ sponsors,\n+ roleInvites,\n+ sessionTypes,\n+ socialLinks,\n+ statistics,\n+ orderStat,\n+ tickets,\n+ roles\n};\n}\n}\n",
        "chatgpt_rag": "fix: correct route names in project version routes"
    },
    {
        "msg": "fix(tooltip): overlap between d3 sliding dataset and notetip",
        "diff": "diff --git a/src/features/tooltip/Tooltip.js b/src/features/tooltip/Tooltip.js @@ -146,18 +146,18 @@ class TooltipControls extends React.Component {\n<div style={style}>\n{this.props.data && !this.props.data.fieldValue &&\n<div>\n- <h4><b>UID: </b>{this.props.data.uid} </h4>\n- <h4><b>MAC: </b>{this.props.data.mac} </h4>\n- <h4><b>rDNS_host: </b>{this.props.data.rDNS_host} </h4>\n- <h4><b>Subnet: </b>{this.props.data.subnet} </h4>\n- <h4><b>IP: </b>{this.props.data.IP} </h4>\n- <h4><b>Record Source: </b>{this.props.data.record.source} </h4>\n- <h4><b>Record Timestamp: </b>{this.props.data.record.timestamp} </h4>\n- <h4><b>Role: </b>{this.props.data.role.role} </h4>\n- <h4><b>rDNS_domain: </b>{this.props.data.rDNS_domain} </h4>\n- <h4><b>OS: </b>{this.props.data.os.os} </h4>\n- <h4><b>OS Confidence: </b>{this.props.data.os.confidence} </h4>\n- <h4><b>Vendor: </b>{this.props.data.vendor} </h4>\n+ <p><b>UID: </b>{this.props.data.uid} </p>\n+ <p><b>MAC: </b>{this.props.data.mac} </p>\n+ <p><b>rDNS_host: </b>{this.props.data.rDNS_host} </p>\n+ <p><b>Subnet: </b>{this.props.data.subnet} </p>\n+ <p><b>IP: </b>{this.props.data.IP} </p>\n+ <p><b>Record Source: </b>{this.props.data.record.source} </p>\n+ <p><b>Record Timestamp: </b>{this.props.data.record.timestamp} </p>\n+ <p><b>Role: </b>{this.props.data.role.role} </p>\n+ <p><b>rDNS_domain: </b>{this.props.data.rDNS_domain} </p>\n+ <p><b>OS: </b>{this.props.data.os.os} </p>\n+ <p><b>OS Confidence: </b>{this.props.data.os.confidence} </p>\n+ <p><b>Vendor: </b>{this.props.data.vendor} </p>\n</div>\n}\n{this.props.data && this.props.data.fieldValue &&\n",
        "date": "16.07.2019 13:08:25",
        "repo": "iqtlabs/crviz",
        "type": "fix",
        "sim_msg": "feat(components/tooltiptrigger): expose css classes",
        "sim_diff": "diff --git a/packages/components/src/TooltipTrigger/TooltipTrigger.component.js b/packages/components/src/TooltipTrigger/TooltipTrigger.component.js @@ -102,6 +102,7 @@ const props = {\nfunction TooltipTrigger({\nchildren,\nlabel,\n+ className,\ntooltipDelay,\ntooltipPlacement = 'right',\ntooltipHeight = DEFAULT_OFFSET_Y,\n@@ -221,10 +222,18 @@ function TooltipTrigger({\n{visible &&\nReactDOM.createPortal(\n- <div className={theme['tc-tooltip-container']} style={style}>\n+ <div\n+ className={classNames(theme['tc-tooltip-container'], 'tc-tooltip-container', className)}\n+ style={style}\n+ >\n<div\nid={id}\n- className={classNames(theme['tc-tooltip-body'], theme[`tc-tooltip-${placement}`])}\n+ className={classNames(\n+ theme['tc-tooltip-body'],\n+ theme[`tc-tooltip-${placement}`],\n+ 'tc-tooltip-body',\n+ `tc-tooltip-${placement}`,\n+ )}\n>\n{label}\n</div>\n@@ -244,6 +253,7 @@ TooltipTrigger.propTypes = {\ntooltipWidth: PropTypes.number,\ntooltipDelay: PropTypes.number,\nchildren: PropTypes.element,\n+ className: PropTypes.string,\n};\nexport default TooltipTrigger;\n",
        "chatgpt_rag": "style(tooltip): change h4 tags to p tags for better semantic structure"
    },
    {
        "msg": "fix: clickable area for saving/deleting icon",
        "diff": "diff --git a/src/features/tooltip/Tooltip.js b/src/features/tooltip/Tooltip.js @@ -164,11 +164,11 @@ class TooltipControls extends React.Component {\n<b><h1><input className={tooltipStyle.inputStyle} type=\"text\" value={this.state.note.note.title} onChange={this.handleChangeTitle} placeholder=\"Title\"/></h1></b>\n<p><textarea className={tooltipStyle.inputStyle} type=\"text\" value={this.state.note.note.content} onChange={this.handleChangeContent} placeholder=\"Take a note...\"/></p>\n<div style={{textAlign:\"center\"}}>\n- <label className=\"button circular\">\n- <FontAwesomeIcon style={{margin:\"2.5px\"}} icon={faSave} onClick={this.saveNote}/>\n+ <label className=\"button circular\" onClick={this.saveNote}>\n+ <FontAwesomeIcon style={{margin:\"2.5px\"}} icon={faSave} />\n</label>\n- <label className=\"button circular\">\n- <FontAwesomeIcon style={{margin:\"2.5px\"}} icon={faTrashAlt} onClick={this.removeNote} />\n+ <label className=\"button circular\" onClick={this.removeNote}>\n+ <FontAwesomeIcon style={{margin:\"2.5px\"}} icon={faTrashAlt} />\n</label>\n</div>\n</div>\n",
        "date": "16.08.2019 09:19:34",
        "repo": "iqtlabs/crviz",
        "type": "fix",
        "sim_msg": "refactor(ffe-form-react): rewrite tooltip to functional component",
        "sim_diff": "diff --git a/packages/ffe-form-react/src/Tooltip.js b/packages/ffe-form-react/src/Tooltip.js -import React from 'react';\n+import React, { useState, useRef } from 'react';\nimport { bool, func, node, string, number } from 'prop-types';\nimport classNames from 'classnames';\nimport Collapse from '@sb1/ffe-collapse-react';\nimport { v4 as uuid } from 'uuid';\n-class Tooltip extends React.Component {\n- constructor({ isOpen }) {\n- super();\n- this.state = {\n- isOpen: !!isOpen,\n- };\n- this.onToggle = this.onToggle.bind(this);\n- this.tooltipId = uuid();\n- this.tooltipButtonId = uuid();\n- }\n-\n- onToggle(evt) {\n- this.setState(prevState => ({ isOpen: !prevState.isOpen }));\n- if (this.props.onClick) {\n- this.props.onClick(evt);\n- }\n- }\n-\n- render() {\n- const {\n+const Tooltip = ({\n+ isOpen,\n'aria-controls': ariaControls,\n'aria-label': ariaLabel,\nchildren,\n@@ -32,38 +14,47 @@ class Tooltip extends React.Component {\nonClick,\ntabIndex,\n...rest\n- } = this.props;\n+}) => {\n+ const tooltipButtonId = useRef(uuid).current;\n+ const tooltipId = useRef(uuid).current;\n- const { isOpen } = this.state;\n+ const [_isOpen, setIsOpen] = useState(!!isOpen);\n+\n+ const handleToogle = evt => {\n+ setIsOpen(prev => !prev);\n+ if (onClick) {\n+ onClick(evt);\n+ }\n+ };\nreturn (\n<span\n{...rest}\nclassName={classNames('ffe-tooltip', {\n- 'ffe-tooltip--open': isOpen,\n+ 'ffe-tooltip--open': _isOpen,\n})}\n>\n<button\n- aria-expanded={isOpen}\n- aria-controls={children ? this.tooltipId : ariaControls}\n+ aria-expanded={_isOpen}\n+ aria-controls={children ? tooltipId : ariaControls}\naria-label={ariaLabel}\nclassName=\"ffe-tooltip__icon\"\n- onClick={this.onToggle}\n+ onClick={handleToogle}\ntype=\"button\"\ntabIndex={tabIndex}\n- id={this.tooltipButtonId}\n+ id={tooltipButtonId}\n>\n<span aria-hidden={true}>?</span>\n</button>\n{children && (\n<Collapse\nclassName=\"ffe-tooltip__text\"\n- id={this.tooltipId}\n- isOpen={isOpen}\n+ id={tooltipId}\n+ isOpen={_isOpen}\n>\n<div\nclassName={classNames('ffe-small-text', className)}\n- role={isOpen ? 'status' : 'none'}\n+ role={_isOpen ? 'status' : 'none'}\n>\n{children}\n</div>\n@@ -71,8 +62,7 @@ class Tooltip extends React.Component {\n)}\n</span>\n);\n- }\n-}\n+};\nTooltip.propTypes = {\n/** Provide the id of the controlled element *unless* you're sending in children */\n",
        "chatgpt_rag": "style(tooltip): refactor tooltipControls component to use onClick directly on labels"
    },
    {
        "msg": "fix(formfield): relax label propType validator\nFixes",
        "diff": "diff --git a/src/collections/Form/FormField.js b/src/collections/Form/FormField.js @@ -143,11 +143,8 @@ FormField.propTypes = {\nPropTypes.object,\n]),\n- /** A field can show that input is mandatory. Requires a label. */\n- required: customPropTypes.every([\n- customPropTypes.demand(['label']),\n- PropTypes.bool,\n- ]),\n+ /** A field can show that input is mandatory. */\n+ required: PropTypes.bool,\n/** Passed to the control component (i.e. <input type='password' />) */\ntype: customPropTypes.every([\n",
        "date": "24.03.2017 08:23:28",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "sim_msg": "docs(form/input): update errorState docs",
        "sim_diff": "diff --git a/components/form/input/src/index.js b/components/form/input/src/index.js @@ -50,7 +50,7 @@ FormInput.propTypes = {\ndisabled: PropTypes.bool,\n/* 's' or 'm', default: 'm' */\nsize: PropTypes.oneOf(Object.values(inputSizes)),\n- /* optional: 'success' or 'error' */\n+ /* true = error, false = success, null = neutral */\nerrorState: PropTypes.bool,\n/* value of the control */\nvalue: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n",
        "chatgpt_rag": "docs(form/FormField): update required prop docs"
    },
    {
        "msg": "fix(typings): inherit Radio props from Checkbox",
        "diff": "diff --git a/src/addons/Radio/index.d.ts b/src/addons/Radio/index.d.ts import * as React from 'react';\n+import { CheckboxProps } from '../../modules/Checkbox';\n-interface RadioProps {\n+interface RadioProps extends CheckboxProps {\n[key: string]: any;\n/** Format to emphasize the current selection state. */\n",
        "date": "31.01.2017 11:35:54",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "sim_msg": "feat(form/checkbox): migrate to PropTypes package",
        "sim_diff": "diff --git a/components/form/checkbox/src/index.js b/components/form/checkbox/src/index.js -import React, {PropTypes} from 'react'\n+import PropTypes from 'prop-types'\n+import React from 'react'\nimport CheckboxChecked from '@schibstedspain/sui-svgiconset/lib/Checkboxchecked'\nimport CheckboxUnchecked from '@schibstedspain/sui-svgiconset/lib/Checkboxunchecked'\nimport cx from 'classnames'\n",
        "chatgpt_rag": "feat(addons/Radio): extend RadioProps from CheckboxProps package"
    },
    {
        "msg": "fix(babel-preset-razzle): remove experimental babel features",
        "diff": "diff --git a/packages/babel-preset-razzle/package.json b/packages/babel-preset-razzle/package.json \"dependencies\": {\n\"@babel/core\": \"7.11.1\",\n\"@babel/plugin-proposal-class-properties\": \"^7.8.3\",\n- \"@babel/plugin-proposal-decorators\": \"^7.12.12\",\n\"@babel/plugin-proposal-nullish-coalescing-operator\": \"7.10.4\",\n\"@babel/plugin-proposal-numeric-separator\": \"7.10.4\",\n\"@babel/plugin-proposal-object-rest-spread\": \"^7.9.5\",\n\"@babel/preset-typescript\": \"^7.9.0\",\n\"@babel/runtime\": \"^7.9.2\",\n\"babel-plugin-dynamic-import-node\": \"2.3.3\",\n- \"babel-plugin-parameter-decorator\": \"^1.0.16\",\n\"babel-plugin-syntax-jsx\": \"^6.18.0\",\n\"babel-plugin-transform-react-remove-prop-types\": \"0.4.24\",\n\"chalk\": \"^4.1.0\"\n",
        "date": "04.02.2021 00:30:08",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "chore(babel-jest): Upgrading to babel-jest 24.0.0",
        "sim_diff": "diff --git a/package.json b/package.json \"@babel/cli\": \"^7.2.3\",\n\"@babel/core\": \"^7.2.2\",\n\"@babel/plugin-external-helpers\": \"^7.2.0\",\n- \"@babel/plugin-proposal-class-properties\": \"^7.2.3\",\n- \"@babel/plugin-proposal-decorators\": \"^7.2.3\",\n+ \"@babel/plugin-proposal-class-properties\": \"^7.3.0\",\n+ \"@babel/plugin-proposal-decorators\": \"^7.3.0\",\n\"@babel/plugin-proposal-json-strings\": \"^7.2.0\",\n- \"@babel/plugin-proposal-object-rest-spread\": \"^7.2.0\",\n+ \"@babel/plugin-proposal-object-rest-spread\": \"^7.3.1\",\n\"@babel/plugin-syntax-dynamic-import\": \"^7.2.0\",\n\"@babel/plugin-syntax-import-meta\": \"^7.2.0\",\n\"@babel/plugin-transform-modules-commonjs\": \"^7.2.0\",\n\"@babel/plugin-transform-react-constant-elements\": \"^7.2.0\",\n\"@babel/plugin-transform-react-inline-elements\": \"^7.2.0\",\n- \"@babel/preset-env\": \"^7.2.3\",\n+ \"@babel/preset-env\": \"^7.3.1\",\n\"@babel/preset-react\": \"^7.0.0\",\n\"@bootstrap-styled/documentation\": \"^1.2.1\",\n- \"@bootstrap-styled/provider\": \"^1.4.1\",\n+ \"@bootstrap-styled/provider\": \"^1.4.2\",\n\"@rollup-umd/documentation\": \"^1.3.5\",\n\"@semantic-release/changelog\": \"^3.0.2\",\n- \"@semantic-release/git\": \"^7.0.7\",\n- \"@semantic-release/github\": \"^5.2.8\",\n- \"@semantic-release/npm\": \"^5.1.3\",\n- \"babel-core\": \"^7.0.0-bridge.0\",\n+ \"@semantic-release/git\": \"^7.0.8\",\n+ \"@semantic-release/github\": \"^5.2.10\",\n+ \"@semantic-release/npm\": \"^5.1.4\",\n\"babel-eslint\": \"^10.0.1\",\n- \"babel-jest\": \"^23.6.0\",\n- \"babel-loader\": \"^8.0.4\",\n+ \"babel-jest\": \"^24.0.0\",\n+ \"babel-loader\": \"^8.0.5\",\n\"babel-plugin-add-module-exports\": \"^1.0.0\",\n\"babel-plugin-array-includes\": \"^2.0.3\",\n\"babel-plugin-dynamic-import-node\": \"^2.2.0\",\n\"babel-plugin-react-intl\": \"^3.0.1\",\n\"babel-plugin-react-transform\": \"^3.0.0\",\n\"babel-plugin-styled-components\": \"^1.10.0\",\n- \"babel-plugin-transform-react-remove-prop-types\": \"^0.4.21\",\n+ \"babel-plugin-transform-react-remove-prop-types\": \"^0.4.23\",\n\"babel-preset-react-hmre\": \"^1.1.1\",\n\"cz-conventional-changelog\": \"^2.1.0\",\n\"enzyme\": \"^3.8.0\",\n- \"enzyme-adapter-react-16\": \"^1.7.1\",\n- \"eslint\": \"^5.11.1\",\n+ \"enzyme-adapter-react-16\": \"^1.8.0\",\n+ \"eslint\": \"^5.12.1\",\n\"eslint-config-airbnb\": \"^17.1.0\",\n- \"eslint-plugin-import\": \"^2.14.0\",\n- \"eslint-plugin-jsx-a11y\": \"^6.1.2\",\n- \"eslint-plugin-react\": \"^7.12.2\",\n+ \"eslint-plugin-import\": \"^2.16.0\",\n+ \"eslint-plugin-jsx-a11y\": \"^6.2.0\",\n+ \"eslint-plugin-react\": \"^7.12.4\",\n\"immutable\": \"^4.0.0-rc.12\",\n- \"jest-cli\": \"^23.6.0\",\n+ \"jest-cli\": \"^24.0.0\",\n\"jest-sonar-reporter\": \"^2.0.0\",\n- \"lint-staged\": \"^8.1.0\",\n+ \"lint-staged\": \"^8.1.1\",\n\"mini-html-webpack-plugin\": \"^0.2.3\",\n\"pre-commit\": \"^1.2.2\",\n\"raf\": \"^3.4.1\",\n\"react-styleguidist\": \"^8.0.6\",\n\"react-test-renderer\": \"^16.7.0\",\n\"rimraf\": \"^2.6.3\",\n- \"rollup\": \"^1.0.1\",\n- \"rollup-plugin-babel\": \"^4.2.0\",\n- \"rollup-plugin-cleanup\": \"^3.1.0\",\n+ \"rollup\": \"^1.1.2\",\n+ \"rollup-plugin-babel\": \"^4.3.2\",\n+ \"rollup-plugin-cleanup\": \"^3.1.1\",\n\"rollup-plugin-commonjs\": \"^9.2.0\",\n\"rollup-plugin-inject\": \"^2.2.0\",\n\"rollup-plugin-json\": \"^3.1.0\",\n\"rollup-plugin-node-builtins\": \"^2.1.2\",\n\"rollup-plugin-node-resolve\": \"^4.0.0\",\n\"rollup-plugin-replace\": \"^2.1.0\",\n- \"rollup-plugin-terser\": \"^4.0.1\",\n+ \"rollup-plugin-terser\": \"^4.0.3\",\n\"rollup-plugin-visualizer\": \"^0.9.2\",\n\"rollup-watch\": \"^4.3.1\",\n- \"semantic-release\": \"^15.13.2\",\n- \"sinon\": \"^7.2.2\",\n+ \"semantic-release\": \"^15.13.3\",\n+ \"sinon\": \"^7.2.3\",\n\"styled-components\": \"^4.1.3\",\n- \"stylelint\": \"^9.9.0\",\n+ \"stylelint\": \"^9.10.1\",\n\"stylelint-config-recommended\": \"^2.1.0\",\n\"stylelint-config-styled-components\": \"^0.1.1\",\n- \"stylelint-processor-styled-components\": \"^1.5.1\",\n+ \"stylelint-processor-styled-components\": \"^1.5.2\",\n\"toctoc\": \"^0.3.2\",\n- \"webpack\": \"^4.28.3\"\n+ \"webpack\": \"^4.29.0\"\n},\n\"jest\": {\n\"roots\": [\n\"raf/polyfill\"\n],\n\"testURL\": \"http://localhost/\",\n- \"setupTestFrameworkScriptFile\": \"<rootDir>/internals/testing/test-bundler.js\",\n+ \"setupFilesAfterEnv\": [\n+ \"<rootDir>/internals/testing/test-bundler.js\"\n+ ],\n\"testPathIgnorePatterns\": [\n\"<rootDir>/dist/\",\n\"<rootDir>/lib/\"\n\"map-to-css-modules\": \"^1.0.6\",\n\"prop-types\": \"^15.6.2\",\n\"react-portal\": \"^4.2.0\",\n- \"react-transition-group\": \"^2.5.2\",\n+ \"react-transition-group\": \"^2.5.3\",\n\"tether-fix\": \"^1.4.0-fix-es\"\n},\n\"peerDependencies\": {\n",
        "chatgpt_rag": "chore(babel-plugin-proposal-decorators): Remove version 7.12.12 and update to the latest version"
    },
    {
        "msg": "fix(cnumberinput): fix number-input ids created at build time",
        "diff": "diff --git a/packages/chakra-ui-core/src/CNumberInput/CNumberInput.js b/packages/chakra-ui-core/src/CNumberInput/CNumberInput.js @@ -58,8 +58,7 @@ const CNumberInput = {\ndefault: 'md'\n},\ninputId: {\n- type: String,\n- default: `number-input-${useId()}`\n+ type: String\n}\n},\nprovide () {\n",
        "date": "12.05.2020 20:40:13",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "sim_msg": "chore(ui5-input): improve VoiceOver speech output",
        "sim_diff": "diff --git a/packages/main/src/Input.js b/packages/main/src/Input.js @@ -551,8 +551,16 @@ class Input extends UI5Element {\nreturn this.valueState === ValueState.Error ? \"true\" : undefined;\n}\n+ get suggestionsTextId() {\n+ return this.showSuggestions ? `${this._id}-suggestionsText` : \"\";\n+ }\n+\n+ get valueStateTextId() {\n+ return this.hasValueState ? `${this._id}-descr` : \"\";\n+ }\n+\nget ariaDescribedBy() {\n- return this.showSuggestions ? `${this._id}-suggestionsText` : undefined;\n+ return `${this.suggestionsTextId} ${this.valueStateTextId}`.trim();\n}\nget ariaHasPopup() {\n",
        "chatgpt_rag": "chore(chakra-ui-core): remove default value for inputId in CNumberInput"
    },
    {
        "msg": "fix(Time series): only show comparison when there are 2 or more datasets",
        "diff": "diff --git a/src/App.js b/src/App.js @@ -328,14 +328,14 @@ class App extends Component {\n<div className={style.accordionHeader} onClick={this.toggleShowComparison}>\nComparison {!showComparison && <FontAwesomeIcon icon={faAngleDoubleDown} />}{showComparison && <FontAwesomeIcon onClick={this.toggleShowComparison} icon={faAngleDoubleUp} />}\n</div>\n- { hasDataset &&\n+ { datasetCount >= 2 &&\n<div className={ classNames({ [style.section]: true, [style.hierarchySection]: true, [style.hidden]: !showComparison }) }>\n<ComparisonSelector startUid={startUuid} endUid={endUuid} />\n</div>\n}\n- { !hasDataset &&\n+ { datasetCount < 2 &&\n<div className={ classNames({ [style.section]: true, [style.dimSection]:true, [style.hierarchySection]: true, [style.hidden]: !showComparison }) }>\n- Please select datasets to continue\n+ Please select at least 2 datasets to continue\n</div>\n}\n",
        "date": "09.05.2019 14:57:59",
        "repo": "iqtlabs/crviz",
        "type": "fix",
        "sim_msg": "refactor(Search): use params object to construct href",
        "sim_diff": "diff --git a/components/Search/index.js b/components/Search/index.js @@ -59,7 +59,7 @@ class Search extends Component {\nthis.onClose = () => {\nthis.props.showFeed(true)\n- this.pushUrl(this.props.url.pathname)\n+ this.pushUrl({})\n}\nthis.onSubmit = (e) => {\n@@ -79,13 +79,14 @@ class Search extends Component {\n}\nthis.onFilterClick = (filterBucketKey, filterBucketValue) => {\n- const filters = filterBucketValue ? [\n- DEFAULT_FILTER,\n- {\n+ const filter = filterBucketValue && {\nkey: filterBucketKey,\nvalue: filterBucketValue\n}\n- ] : [DEFAULT_FILTER]\n+ let filters = [DEFAULT_FILTER]\n+ if (filter) {\n+ filters.push(filter)\n+ }\n// TODO: Preserve text length filter when available.\nthis.setState({\n@@ -94,22 +95,24 @@ class Search extends Component {\nif (this.state.submittedQuery === '') {\nthis.props.showFeed && this.props.showFeed(filters.length > 1)\n}\n+ filter && this.props.showFeed && this.props.showFeed(false)\n}\n- this.pushUrl = (href) => {\n- const as = href\n- Router.push(href, as, { shallow: true })\n+ this.pushUrl = (params) => {\n+ Router.replaceRoute(\n+ 'feed',\n+ params,\n+ { shallow: true }\n+ )\n}\n- this.updateUrl = () => {\n+ this.updateUrl = (filter) => {\nconst searchQuery = this.state.searchQuery\n- const href = this.props.url.pathname + (searchQuery ? '?search=' + searchQuery : '')\n- this.pushUrl(href)\n+ this.pushUrl({search: searchQuery})\n}\nthis.clearUrl = () => {\n- const href = this.props.url.pathname + '?search='\n- this.pushUrl(href)\n+ this.pushUrl({search: ''})\n}\n}\n",
        "chatgpt_rag": "refactor(App): update condition to check for dataset count instead of boolean flag"
    },
    {
        "msg": "fix(docs): fix public path",
        "diff": "diff --git a/config.js b/config.js @@ -66,7 +66,7 @@ const config = {\ncompiler_hash_type: __PROD__ ? 'chunkhash' : 'hash',\ncompiler_fail_on_warning: __TEST__ || __PROD__,\ncompiler_output_path: paths.base(envConfig.dir_docs_dist),\n- compiler_public_path: __PROD__ ? '//raw.github.com/Semantic-Org/Semantic-UI-React/gh-pages/' : '/',\n+ compiler_public_path: '/',\ncompiler_stats: {\nhash: false, // the hash of the compilation\nversion: false, // webpack version info\n",
        "date": "20.08.2017 14:14:52",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "sim_msg": "build(webpack): add missing extras entry",
        "sim_diff": "diff --git a/webpack.config.js b/webpack.config.js @@ -28,7 +28,6 @@ module.exports = (env = {}) => {\n`./client/app/config/${env.production ? 'prod' : 'dev'}.${env.region}.js`,\n];\n- /* eslint-disable import/no-unresolved, import/no-extraneous-dependencies */\nconst { config } = webpackConfig({\ntemplate: './client/index.html',\nbasePath: './client',\n@@ -46,7 +45,9 @@ module.exports = (env = {}) => {\n],\n},\n}, env);\n- /* eslint-enable */\n+\n+ // Extra config files\n+ const extras = glob.sync('./.extras/**/*.js');\nreturn merge(config, {\nentry: _.assign({\n@@ -54,17 +55,17 @@ module.exports = (env = {}) => {\ncomponents: glob.sync('./client/components/**/!(*.spec|*.mock).js'),\nconfig: [\n`./client/app/config/all.${env.region}.js`,\n- `./client/app/config/${env.production ? 'prod' : 'dev'}.${env.region}.js`\n+ `./client/app/config/${env.production ? 'prod' : 'dev'}.${env.region}.js`,\n],\n- }, bundles),\n+ }, bundles, extras.length > 0 ? { extras } : {}),\noutput: {\npath: path.resolve(__dirname, 'dist'),\nfilename: '[name].bundle.js',\n},\nresolve: {\nalias: {\n- jquery: path.resolve(__dirname, \"node_modules/jquery\")\n- }\n- }\n+ jquery: path.resolve(__dirname, 'node_modules/jquery'),\n+ },\n+ },\n});\n};\n",
        "chatgpt_rag": "build(config): update compiler_public_path to use root path"
    },
    {
        "msg": "fix: support windows by using path.delimiter",
        "diff": "diff --git a/lib/monitor/run.js b/lib/monitor/run.js @@ -64,7 +64,7 @@ function run(options) {\nconst spawnOptions = {\nenv: Object.assign({}, process.env, options.execOptions.env, {\n- PATH: binPath + ':' + process.env.PATH,\n+ PATH: binPath + path.delimiter + process.env.PATH,\n}),\nstdio: stdio,\n};\n",
        "date": "23.02.2022 17:36:11",
        "repo": "remy/nodemon",
        "type": "fix",
        "sim_msg": "chore(example): accept arguments via run-script",
        "sim_diff": "diff --git a/examples/run-example.js b/examples/run-example.js const { spawn } = require('child_process');\n+const [, , ...args] = process.argv;\nconst cwd = process.env.INIT_CWD;\n-spawn('node', ['../../../bin/webpack-dev-server.js'], {\n+spawn('node', ['../../../bin/webpack-dev-server.js', ...args], {\ncwd,\nstdio: 'inherit',\n});\n",
        "chatgpt_rag": "fix(monitor): use path.delimiter instead of hardcoding ':' in PATH variable"
    },
    {
        "msg": "fix: storybook build",
        "diff": "diff --git a/.storybook/components/Canvas.vue b/.storybook/components/Canvas.vue @@ -47,7 +47,7 @@ import {\nCButton,\nCBox,\nCIconButton,\n- CColorModeProvider } from '../../packages/chakra-ui-core/dist/esm'\n+ CColorModeProvider } from '../../packages/chakra-ui-core/src'\nexport default {\nname: 'Canvas',\ncomponents: {\n",
        "date": "08.05.2020 18:06:19",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "sim_msg": "feat: add more necessary components",
        "sim_diff": "diff --git a/packages/vue/src/components/organisms/SfStoreLocator/SfStoreLocator.js b/packages/vue/src/components/organisms/SfStoreLocator/SfStoreLocator.js -import SfCircleIcon from \"../../atoms/SfCircleIcon/SfCircleIcon.vue\";\n+import SfImage from \"@/components/molecules/SfImage/SfImage.vue\";\n+import SfDivider from \"@/components/atoms/SfDivider/SfDivider.vue\";\nimport SfIcon from \"@/components/atoms/SfIcon/SfIcon.vue\";\n-import Vue from 'vue';\n+import Vue from \"vue\";\nexport default {\nname: \"SfStoreLocator\",\nprops: {\ntileServerUrl: {\ntype: String,\n- default: 'http://{s}.tile.osm.org/{z}/{x}/{y}.png'\n+ default: \"http://{s}.tile.osm.org/{z}/{x}/{y}.png\"\n},\ncenter: {\ntype: [Array, Object],\n- default: [0,0]\n+ default: () => [0, 0]\n},\nzoom: {\ntype: Number,\ndefault: 6\n+ },\n+ stores: {\n+ type: Array,\n+ default: () => []\n}\n},\ndata() {\nreturn {\nloaded: false\n- }\n+ };\n},\nasync mounted() {\n- const { LMap, LTileLayer } = await import('vue2-leaflet')\n- Vue.component('l-map', LMap)\n- Vue.component('l-tilelayer', LTileLayer)\n- console.log(LMap)\n+ const { LMap, LTileLayer, LMarker, LIcon } = await import(\"vue2-leaflet\");\n+ Vue.component(\"l-map\", LMap);\n+ Vue.component(\"l-tilelayer\", LTileLayer);\n+ Vue.component(\"l-marker\", LMarker);\n+ Vue.component(\"l-icon\", LIcon);\nthis.loaded = true;\n},\ncomponents: {\n- SfCircleIcon,\n+ SfImage,\n+ SfDivider,\nSfIcon\n}\n};\n",
        "chatgpt_rag": "fix: update import path for CColorModeProvider in Canvas.vue"
    },
    {
        "msg": "perf(Modal): reduce unnecessary layout invalidations\nImprove performance especially in IE11 when a modal is used",
        "diff": "diff --git a/src/modules/Modal/Modal.js b/src/modules/Modal/Modal.js @@ -250,9 +250,10 @@ class Modal extends Component {\nsetDimmerNodeStyle = () => {\ndebug('setDimmerNodeStyle()')\n+ const { current } = this.dimmerRef\n- if (this.dimmerRef.current && this.dimmerRef.current.style) {\n- this.dimmerRef.current.style.setProperty('display', 'flex', 'important')\n+ if (current && current.style && current.style.display !== 'flex') {\n+ current.style.setProperty('display', 'flex', 'important')\n}\n}\n",
        "date": "26.05.2019 18:09:33",
        "repo": "semantic-org/semantic-ui-react",
        "type": "perf",
        "sim_msg": "feat(components): eye candy modal",
        "sim_diff": "diff --git a/src/components/ui/modal.js b/src/components/ui/modal.js @@ -30,6 +30,7 @@ const Modal = ({\nz-index: 1000;\nopacity: 0;\nvisibility: hidden;\n+ perspective: 2000px;\n}\n.Modal.is-visible {\n@@ -52,7 +53,7 @@ const Modal = ({\n.Modal__content {\nbackground-color: #ffffff;\n- box-shadow: 0 10px 50px 0 rgba(0, 0, 0, 0.25);;\n+ box-shadow: 0 10px 50px 0 rgba(0, 0, 0, 0.25);\ncolor: #7a7f87;\nfont-size: 16px;\nline-height: 22px;\n@@ -60,6 +61,15 @@ const Modal = ({\nposition: relative;\nmax-height: 100%;\noverflow: auto;\n+ will-change: transform, opacity;\n+ transform: rotate3d(1,1,0,-15deg);\n+ transform-origin: 100% 0;\n+ transition-duration: .25s;\n+ transition-property: transform;\n+ }\n+\n+ .is-visible .Modal__content {\n+ transform: none;\n}\n.Modal__close {\n@@ -92,7 +102,7 @@ const Modal = ({\n.Modal__subtitle {\nfont-size: 16px;\n- max-width: 300px;\n+ max-width: 320px;\nmargin-left: auto;\nmargin-right: auto;\ntext-align: center;\n",
        "chatgpt_rag": "fix(modules): update dimmer display style in Modal component"
    },
    {
        "msg": "perf(isISO31661Alpha3): use a Set along with .has instead of includes",
        "diff": "diff --git a/src/lib/isISO31661Alpha3.js b/src/lib/isISO31661Alpha3.js import assertString from './util/assertString';\n-import includes from './util/includes';\n// from https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3\n-const validISO31661Alpha3CountriesCodes = [\n+const validISO31661Alpha3CountriesCodes = new Set([\n'AFG', 'ALA', 'ALB', 'DZA', 'ASM', 'AND', 'AGO', 'AIA', 'ATA', 'ATG', 'ARG', 'ARM', 'ABW', 'AUS', 'AUT', 'AZE',\n'BHS', 'BHR', 'BGD', 'BRB', 'BLR', 'BEL', 'BLZ', 'BEN', 'BMU', 'BTN', 'BOL', 'BES', 'BIH', 'BWA', 'BVT', 'BRA',\n'IOT', 'BRN', 'BGR', 'BFA', 'BDI', 'KHM', 'CMR', 'CAN', 'CPV', 'CYM', 'CAF', 'TCD', 'CHL', 'CHN', 'CXR', 'CCK',\n@@ -19,9 +18,9 @@ const validISO31661Alpha3CountriesCodes = [\n'ESP', 'LKA', 'SDN', 'SUR', 'SJM', 'SWZ', 'SWE', 'CHE', 'SYR', 'TWN', 'TJK', 'TZA', 'THA', 'TLS', 'TGO', 'TKL',\n'TON', 'TTO', 'TUN', 'TUR', 'TKM', 'TCA', 'TUV', 'UGA', 'UKR', 'ARE', 'GBR', 'USA', 'UMI', 'URY', 'UZB', 'VUT',\n'VEN', 'VNM', 'VGB', 'VIR', 'WLF', 'ESH', 'YEM', 'ZMB', 'ZWE',\n-];\n+]);\nexport default function isISO31661Alpha3(str) {\nassertString(str);\n- return includes(validISO31661Alpha3CountriesCodes, str.toUpperCase());\n+ return validISO31661Alpha3CountriesCodes.has(str.toUpperCase());\n}\n",
        "date": "26.09.2021 17:56:30",
        "repo": "validatorjs/validator.js",
        "type": "perf",
        "sim_msg": "chore: Make tests easier to read",
        "sim_diff": "diff --git a/assets/js/util/test/numberFormat.js b/assets/js/util/test/numberFormat.js */\nimport { numberFormat } from '../';\n-const valuesToTest = [\n- [\n- 123.87,\n- 'en-US',\n- '123.87',\n- ],\n- [\n- 1234.87,\n- 'en-US',\n- '1,234.87',\n- ],\n- [\n- 12345.87,\n- 'en-US',\n- '12,345.87',\n- ],\n- [\n- 123456.87,\n- 'en-US',\n- '123,456.87',\n- ],\n- [\n- 1234567.87,\n- 'en-US',\n- '1,234,567.87',\n- ],\n- [\n- 12345678.87,\n- 'en-US',\n- '12,345,678.87',\n- ],\n- [\n- 123456789.87,\n- 'en-US',\n- '123,456,789.87',\n- ],\n- [\n- 123.87,\n- 'de-DE',\n- '123,87',\n- ],\n- [\n- 1234.87,\n- 'de-DE',\n- '1.234,87',\n- ],\n- [\n- 12345.87,\n- 'de-DE',\n- '12.345,87',\n- ],\n- [\n- 123456.87,\n- 'de-DE',\n- '123.456,87',\n- ],\n- [\n- 1234567.87,\n- 'de-DE',\n- '1.234.567,87',\n- ],\n- [\n- 12345678.87,\n- 'de-DE',\n- '12.345.678,87',\n- ],\n- [\n- 123456789.87,\n- 'de-DE',\n- '123.456.789,87',\n- ]\n-];\n-\ndescribe( 'numberFormat', () => {\n- it.each( valuesToTest )( 'for %s and locale %s should return %s', ( value, locale, expected ) => {\n- expect( numberFormat( value, locale ) ).toStrictEqual( expected );\n+ it( 'formats numbers correctly according to the locale provided', () => {\n+ expect(\n+ numberFormat( 123.87, 'en-US' )\n+ ).toStrictEqual( '123.87' );\n+\n+ expect(\n+ numberFormat( 1234.87, 'en-US' )\n+ ).toStrictEqual( '1,234.87' );\n+\n+ expect(\n+ numberFormat( 12345.87, 'en-US' )\n+ ).toStrictEqual( '12,345.87' );\n+\n+ expect(\n+ numberFormat( 123456.87, 'en-US' )\n+ ).toStrictEqual( '123,456.87' );\n+\n+ expect(\n+ numberFormat( 1234567.87, 'en-US' )\n+ ).toStrictEqual( '1,234,567.87' );\n+\n+ expect(\n+ numberFormat( 12345678.87, 'en-US' )\n+ ).toStrictEqual( '12,345,678.87' );\n+\n+ expect(\n+ numberFormat( 123456789.87, 'en-US' )\n+ ).toStrictEqual( '123,456,789.87' );\n+\n+ expect(\n+ numberFormat( 123.87, 'de-DE' )\n+ ).toStrictEqual( '123,87' );\n+\n+ expect(\n+ numberFormat( 1234.87, 'de-DE' )\n+ ).toStrictEqual( '1.234,87' );\n+\n+ expect(\n+ numberFormat( 12345.87, 'de-DE' )\n+ ).toStrictEqual( '12.345,87' );\n+\n+ expect(\n+ numberFormat( 123456.87, 'de-DE' )\n+ ).toStrictEqual( '123.456,87' );\n+\n+ expect(\n+ numberFormat( 1234567.87, 'de-DE' )\n+ ).toStrictEqual( '1.234.567,87' );\n+\n+ expect(\n+ numberFormat( 12345678.87, 'de-DE' )\n+ ).toStrictEqual( '12.345.678,87' );\n+\n+ expect(\n+ numberFormat( 123456789.87, 'de-DE' )\n+ ).toStrictEqual( '123.456.789,87' );\n} );\n} );\n",
        "chatgpt_rag": "refactor: Update validISO31661Alpha3CountriesCodes to use Set for better performance"
    },
    {
        "msg": "perf(regl-renderer): use webgl2 as default context or enable OES_element_index_uint extension\nupdated viewer to use either webgl2 or OES_element_index_uint extension",
        "diff": "diff --git a/packages/web/src/ui/views/viewer.js b/packages/web/src/ui/views/viewer.js @@ -53,6 +53,7 @@ const viewer = (state, i18n) => {\nif (!render) {\nconst options = setup(el)\n+ if (options.error) return html`<b style=\"color:red; background:white; position:fixed; z-index:10; top:50%\">${options.error}</b>`\nviewerOptions = options.viewerOptions\ncamera = options.camera\nrender = prepareRender(viewerOptions)\n@@ -191,13 +192,32 @@ const viewer = (state, i18n) => {\nreturn el\n}\n+const createContext = (canvas, contextAttributes) => {\n+ const get = (type) => {\n+ try {\n+ return { gl: canvas.getContext(type, contextAttributes), type }\n+ } catch (e) {\n+ return null\n+ }\n+ }\n+ return (\n+ get('webgl2') ||\n+ get('webgl') ||\n+ get('experimental-webgl') ||\n+ get('webgl-experimental')\n+ )\n+}\n+\nconst setup = (element) => {\n// prepare the camera\n+ let error\nconst camera = Object.assign({}, perspectiveCamera.defaults)\ncamera.position = [150, -180, 233]\n+ const { gl, type } = createContext(element)\n+\nconst viewerOptions = {\n- glOptions: { canvas: element },\n+ glOptions: { gl },\ncamera,\ndrawCommands: {\n// draw commands bootstrap themselves the first time they are run\n@@ -209,7 +229,14 @@ const setup = (element) => {\n// data\nentities: []\n}\n- return { viewerOptions, camera }\n+ if (type === 'webgl') {\n+ if (!gl.getExtension('OES_element_index_uint')) {\n+ error = 'Your browser uses an old version of WebGL without OES_element_index_uint. Please upgrade your browser to use this application'\n+ }\n+\n+ viewerOptions.glOptions.optionalExtensions = ['oes_element_index_uint']\n+ }\n+ return { viewerOptions, camera, error }\n}\nconst resize = (viewerElement) => {\n",
        "date": "12.08.2021 18:56:19",
        "repo": "jscad/openjscad.org",
        "type": "perf",
        "sim_msg": "refactor: pass size into ProfileImage component",
        "sim_diff": "diff --git a/package/src/components/ViewerInfo/v1/ViewerInfo.js b/package/src/components/ViewerInfo/v1/ViewerInfo.js @@ -4,13 +4,6 @@ import styled from \"styled-components\";\nimport { withComponents } from \"@reactioncommerce/components-context\";\nimport { addTypographyStyles, applyTheme } from \"../../../utils\";\n-const ViewerProfileImageContainer = styled.div`\n- display: flex;\n- height: 30px;\n- position: relative;\n- width: 30px;\n-`;\n-\nconst ViewerInfoContainer = styled.div`\ndisplay: flex;\nposition: relative;\n@@ -102,9 +95,7 @@ class ViewerInfo extends Component {\nconst { compact, components: { ProfileImage }, full, viewer } = this.props;\nreturn (\n<ViewerInfoContainer>\n- <ViewerProfileImageContainer>\n- <ProfileImage viewer={viewer} />\n- </ViewerProfileImageContainer>\n+ <ProfileImage size={30} viewer={viewer} />\n<ViewerFirstNameText compact={compact} full={full}>\n{this.viewerName}\n</ViewerFirstNameText>\n",
        "chatgpt_rag": "feat: add error handling for WebGL context creation in createContext function"
    },
    {
        "msg": "perf(swipe-cell): avoid useless animate\nfix",
        "diff": "diff --git a/packages/swipe-cell/index.ts b/packages/swipe-cell/index.ts @@ -120,7 +120,11 @@ VantComponent({\n}\nthis.dragging = true;\n- ARRAY.filter((item) => item !== this).forEach((item) => item.close());\n+\n+ ARRAY.filter(\n+ (item) => item !== this && item.offset !== 0\n+ ).forEach((item) => item.close());\n+\nthis.setData({ catchMove: true });\nthis.swipeMove(this.startOffset + this.deltaX);\n},\n",
        "date": "31.12.2020 17:05:49",
        "repo": "youzan/vant-weapp",
        "type": "perf",
        "sim_msg": "fix(typings): fixed methods definitions for navigation, pagination and scrollbar\nfixes",
        "sim_diff": "diff --git a/src/types/swiper-class.d.ts b/src/types/swiper-class.d.ts @@ -444,10 +444,10 @@ interface Swiper extends SwiperClass<SwiperEvents> {\nkeyboard: KeyboardMethods;\nlazy: LazyMethods;\nmousewheel: MousewheelMethods;\n- navigation: NavigationMethods | boolean;\n- pagination: PaginationMethods | boolean;\n+ navigation: NavigationMethods;\n+ pagination: PaginationMethods;\nparallax: ParallaxMethods;\n- scrollbar: ScrollbarMethods | boolean;\n+ scrollbar: ScrollbarMethods;\nthumbs: ThumbsMethods;\nvirtual: VirtualMethods;\nzoom: ZoomMethods;\n",
        "chatgpt_rag": "refactor(swipe-cell): improve swipe cell closing logic\n- Improved the logic for closing swipe cells to only close cells with a non-zero offset\n- Refactored the code for better readability and maintainability"
    },
    {
        "msg": "perf: instantiate errors lazily",
        "diff": "diff --git a/addon/model.js b/addon/model.js @@ -78,7 +78,7 @@ export default class MegamorphicModel extends EmberObject {\nthis._topModel = this._topModel || this;\nthis._parentModel = this._parentModel || null;\n- this._errors = DS.Errors.create();\n+ this._errors = null;\nthis._init = true;\nif (!CUSTOM_MODEL_CLASS) {\nthis._internalModel = properties._internalModel;\n@@ -487,16 +487,16 @@ export default class MegamorphicModel extends EmberObject {\n_removeError(key) {\n// Remove errors for the property\n- this._errors.remove(key);\n+ this.errors.remove(key);\nif (CUSTOM_MODEL_CLASS) {\n- if (get(this._errors, 'length') === 0) {\n+ if (get(this.errors, 'length') === 0) {\nthis._clearInvalidRequestErrors();\n}\n} else {\nif (\nthis._internalModel.currentState &&\n!this._internalModel.currentState.isValid &&\n- get(this._errors, 'length') === 0\n+ get(this.errors, 'length') === 0\n) {\nthis._updateCurrentState(updatedUncommitted);\n}\n@@ -514,6 +514,9 @@ export default class MegamorphicModel extends EmberObject {\n// Errors hash that will get update,\n// upon validation errors\nget errors() {\n+ if (this._errors === null) {\n+ this._errors = DS.Errors.create();\n+ }\nreturn this._errors;\n}\n}\n",
        "date": "11.12.2019 13:28:52",
        "repo": "hjdivad/ember-m3",
        "type": "perf",
        "sim_msg": "refactor: rename function name",
        "sim_diff": "diff --git a/lib/models/base_model.js b/lib/models/base_model.js @@ -18,7 +18,7 @@ const hasFormat = require('./mixins/has_format');\nconst adapterCache = new WeakMap();\n-module.exports = function getBaseToken(provider) {\n+module.exports = function getBaseModel(provider) {\nfunction adapter(ctx) {\nconst obj = typeof ctx === 'function' ? ctx : ctx.constructor;\n",
        "chatgpt_rag": "refactor: rename errors property and update references in MegamorphicModel class"
    },
    {
        "msg": "refactor(package): update deploy scripts [ci skip]",
        "diff": "diff --git a/package.json b/package.json \"build:docs-cname\": \"echo react.semantic-ui.com > docs/build/CNAME\",\n\"predeploy:docs\": \"cross-env NODE_ENV=production yarn build:docs && yarn build:docs-cname\",\n\"deploy:docs\": \"gh-pages -d docs/build -m 'deploy docs [ci skip]'\",\n+ \"postdeploy:docs\": \"github_changelog_generator && gach 'docs(changelog): update changelog [ci skip]\",\n\"lint\": \"cross-env NODE_ENV=production eslint .\",\n\"lint:fix\": \"yarn lint -- --fix\",\n\"prerelease\": \"yarn lint && yarn tsd:lint && npm test && cross-env NODE_ENV=production yarn build\",\n- \"postrelease\": \"NODE_ENV=production yarn deploy:docs\",\n- \"prerelease:major\": \"yarn prerelease\",\n- \"prerelease:minor\": \"yarn prerelease\",\n- \"prerelease:patch\": \"yarn prerelease\",\n- \"release:major\": \"ta-script npm/release major\",\n- \"release:minor\": \"ta-script npm/release minor\",\n- \"release:patch\": \"ta-script npm/release patch\",\n+ \"postrelease\": \"yarn deploy:docs\",\n+ \"release:major\": \"yarn prerelease && ta-script npm/release major && yarn postrelease\",\n+ \"release:minor\": \"yarn prerelease && ta-script npm/release minor && yarn postrelease\",\n+ \"release:patch\": \"yarn prerelease && ta-script npm/release patch && yarn postrelease\",\n\"prestart\": \"yarn satisfied -- --fix yarn\",\n\"start\": \"yarn docs\",\n\"satisfied\": \"satisfied --skip-invalid\",\n",
        "date": "24.09.2017 12:56:58",
        "repo": "semantic-org/semantic-ui-react",
        "type": "refactor",
        "sim_msg": "chore(lint): simplify command",
        "sim_diff": "diff --git a/package.json b/package.json \"build\": \"npm run build-clean && npm run build-es6 && npm run build-es5 && webpack -d --display-modules\",\n\"cover\": \"NODE_ENV=test nyc --reporter html --reporter cobertura --reporter=lcov npm run test-cover\",\n\"lint\": \"eslint src test examples && npm run lint-yarn\",\n- \"lint-yarn\": \"!(find . -name yarn.lock -exec grep -l unpm.u {} \\\\; | egrep '.*')\",\n+ \"lint-yarn\": \"! grep -q unpm.u yarn.lock\",\n\"publish-prod\": \"npm run build && npm run test && npm run test-dist && npm publish\",\n\"publish-beta\": \"npm run build && npm run test && npm run test-dist && npm publish --tag beta\",\n\"test\": \"npm run lint && npm run build && npm run test-node\",\n",
        "chatgpt_rag": "refactor(docs): update postdeploy script and release scripts\n- Updated postdeploy script to include generating changelog and updating it\n- Updated release scripts to include running prerelease, releasing with ta-script, and running postrelease"
    },
    {
        "msg": "refactor: Flipping prerender() detection to last script in HTML",
        "diff": "diff --git a/packages/wmr/src/lib/prerender.js b/packages/wmr/src/lib/prerender.js @@ -70,13 +70,13 @@ async function workerCode({ cwd, out, publicPath, customRoutes }) {\n// Grab the generated HTML file, which we'll use as a template:\nconst tpl = await fs.readFile(path.resolve(cwd, out, 'index.html'), 'utf-8');\n- // The first script in the file that is not external is assumed to have a\n+ // The last script in the file that is not external is assumed to have a\n// `prerender` export\nlet script;\nconst SCRIPT_TAG = /<script(?:\\s[^>]*?)?\\s+src=(['\"]?)([^>]*?)\\1(?:\\s[^>]*?)?>/g;\nlet match;\n- while ((match = SCRIPT_TAG.exec(tpl)) && !script) {\n+ while ((match = SCRIPT_TAG.exec(tpl))) {\n// Ignore external urls\nif (!match || /^(?:https?|file|data)/.test(match[2])) continue;\n@@ -103,7 +103,7 @@ async function workerCode({ cwd, out, publicPath, customRoutes }) {\n// const App = m.default || m[Object.keys(m)[0]];\nif (typeof doPrerender !== 'function') {\n- throw Error(`No prerender() function was exported by the first <script src=\"...\"> in your index.html.`);\n+ throw Error(`No prerender() function was exported by the last non-external <script src=\"...\"> in your index.html.`);\n}\n/**\n",
        "date": "23.01.2022 22:20:07",
        "repo": "preactjs/wmr",
        "type": "refactor",
        "sim_msg": "docs(prerender): speed up prerendering by ignoring external resources, styles, fonts and images\nIt also fixes issues related to prerendered sharethis widget",
        "sim_diff": "diff --git a/docs-src/tools/prerender.js b/docs-src/tools/prerender.js @@ -28,6 +28,20 @@ async function readSitemapUrls(browser) {\n}\nasync function renderPage({ page, iterator }, options) {\n+ await page.setRequestInterception(true);\n+ page.on('request', (req) => {\n+ const isAbortedRequest = req.resourceType() === 'stylesheet' ||\n+ req.resourceType() === 'font' ||\n+ req.resourceType() === 'image' ||\n+ req.resourceType() === 'script' && !req.url().startsWith('http://localhost');\n+\n+ if (isAbortedRequest) {\n+ req.abort()\n+ } else {\n+ req.continue()\n+ }\n+ });\n+\nfor (const url of iterator) {\nconsole.log(`[fetching]: ${url}`);\nawait page.goto(LOCAL_APP + url, { waitUntil: 'networkidle2' });\n",
        "chatgpt_rag": "wmr(prerender): update logic to find last non-external script for prerender export, improve error message handling"
    },
    {
        "msg": "refactor: deprecated `.avatar-rounded` and `.avatar-square`",
        "diff": "diff --git a/scss/_avatar.scss b/scss/_avatar.scss display: inline-flex;\nalign-items: center;\njustify-content: center;\n- border-radius: 50em;\n+ vertical-align: middle;\n+ @include border-radius(50em);\n@include avatar($avatar-width,$avatar-status-width);\n}\n.avatar-img {\nwidth: 100%;\nheight: auto;\n- border-radius: 50em;\n+ @include border-radius(50em);\n}\n.avatar-status {\nbottom: 0;\ndisplay: block;\nborder: 1px solid $white;\n- border-radius: 50em;\n+ @include border-radius(50em);\n// @include ltr {\n// right: 0;\nmargin-right: - ($avatar-xl-width / 2);\n}\n}\n-\n-.avatar-rounded {\n- border-radius: $border-radius;\n-}\n-\n-.avatar-square {\n- border-radius: 0;\n-}\n",
        "date": "03.01.2021 12:03:24",
        "repo": "coreui/coreui",
        "type": "refactor",
        "sim_msg": "feat: added ability to hide scroll and padding from Avatar Group overflow body(#2406)",
        "sim_diff": "diff --git a/src/avatar-group.scss b/src/avatar-group.scss @@ -93,6 +93,18 @@ $block: #{$fd-namespace}-avatar-group;\npadding: 1rem;\nwhite-space: initial;\n+ &--no-padding {\n+ padding: 0;\n+ }\n+\n+ &--no-horizontal-scroll {\n+ overflow-x: hidden;\n+ }\n+\n+ &--no-vertical-scroll {\n+ overflow-y: hidden;\n+ }\n+\n.#{$block}__item {\nmargin: 0.25rem;\n}\n",
        "chatgpt_rag": "style: updated avatar styles to use mixin for border-radius and added vertical-align property (#2407)"
    },
    {
        "msg": "refactor: use new handle feature for dialog",
        "diff": "diff --git a/packages/veui/src/components/Dialog.vue b/packages/veui/src/components/Dialog.vue @afterclose=\"handleAfterClose\"\n>\n<div\n- ref=\"content\"\n+ v-drag.translate=\"{\n+ disabled: !draggable,\n+ containment: '@window',\n+ handle: 'head',\n+ ready: dragReady\n+ }\"\nv-outside=\"outside\"\n:class=\"$c('dialog-content')\"\ntabindex=\"-1\"\n@keydown.esc=\"handleEscape\"\n>\n<div\n- v-drag:content.translate=\"{\n- draggable,\n- containment: '@window',\n- ready: dragReady\n- }\"\n+ ref=\"head\"\n:class=\"{\n[$c('dialog-content-head')]: true,\n[$c('dialog-draggable')]: draggable\n",
        "date": "28.06.2021 21:38:15",
        "repo": "ecomfe/veui",
        "type": "refactor",
        "sim_msg": "feat: Dialog - onClose() and onDismiss() now take one parameter designating the form data",
        "sim_diff": "diff --git a/src/components/dialog/Dialog.vue b/src/components/dialog/Dialog.vue @@ -188,7 +188,7 @@ export default {\n}\nthis.$refs.dialog.close(() => {\nif (typeof fn === 'function') {\n- fn()\n+ fn(this.getFormData())\n}\n})\n},\n@@ -198,7 +198,7 @@ export default {\n__dismiss () {\nthis.$root.$destroy()\nif (typeof this.onDismiss === 'function') {\n- this.onDismiss()\n+ this.onDismiss(this.getFormData())\n}\n}\n},\n",
        "chatgpt_rag": "feat: Dialog - Added drag functionality to the dialog head for draggable dialogs"
    },
    {
        "msg": "refactor: minor tweak to part fn exp",
        "diff": "diff --git a/packages/veui-theme-dls/components/NumberInput.js b/packages/veui-theme-dls/components/NumberInput.js @@ -32,12 +32,8 @@ config.defaults(\nspinner: ''\n},\nicons: {\n- increase ({ style }) {\n- return ICON_MAP[style].increase\n- },\n- decrease ({ style }) {\n- return ICON_MAP[style].decrease\n- }\n+ increase: ({ style }) => ICON_MAP[style].increase,\n+ decrease: ({ style }) => ICON_MAP[style].decrease\n}\n},\n'numberinput'\n",
        "date": "09.12.2019 17:28:33",
        "repo": "ecomfe/veui",
        "type": "refactor",
        "sim_msg": "feat: basic quantityInput ported",
        "sim_diff": "diff --git a/package/src/components/QuantityInput/v1/QuantityInput.js b/package/src/components/QuantityInput/v1/QuantityInput.js @@ -9,17 +9,23 @@ import { applyTheme } from \"../../../utils\";\nconst styles = (theme) => ({\nincrementButton: {\nbackgroundColor: \"#fafafa\",\n+ boxSizing: \"border-box\",\ncolor: \"#3c3c3c\",\n- fontSize: \"12px\",\n+ fontSize: \"1rem\",\n+ lineHieght: 1,\npadding: 6\n},\nquantityContainer: {\npadding: 0,\nborder: `1px solid #d9d9d9`,\n+ boxSizing: \"border-box\",\nbackgroundColor: theme.palette.common.white,\nborderRadius: \"2px\"\n},\nquantityInput: {\n+ borderLeft: `1px solid #d9d9d9`,\n+ borderRight: `1px solid #d9d9d9`,\n+ boxSizing: \"border-box\",\ncolor: \"#3c3c3c\",\nfontSize: \"12px\",\nwidth: \"40px\",\n@@ -27,9 +33,7 @@ const styles = (theme) => ({\n\"&:focus\": {\nborderColor: \"#80bdff\",\nboxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\"\n- },\n- borderLeft: `1px solid #d9d9d9`,\n- borderRight: `1px solid #d9d9d9`\n+ }\n}\n});\n@@ -38,12 +42,50 @@ class QuantityInput extends Component {\nstatic defaultProps = {};\n+ constructor(props) {\n+ super(props);\n+\n+ const value = props.value || 0;\n+\n+ this.state = {\n+ initialValue: props.value,\n+ value\n+ };\n+ }\n+\n+ handleQuantityInputChange = (event) => {\n+ const { value } = event.target;\n+\n+ const numericValue = Math.floor(Number(value));\n+\n+ if (Number.isNaN(numericValue)) {\n+ return null;\n+ }\n+\n+ return this.setState({ value: numericValue });\n+ };\n+\n+ handleIncrementButton = () => {\n+ const value = this.state.value + 1;\n+\n+ this.setState({ value });\n+ };\n+\n+ handleDecrementButton = () => {\n+ const value = this.state.value - 1;\n+\n+ if (value >= 0) {\n+ this.setState({ value });\n+ }\n+ };\n+\nrender() {\nconst { classes: { incrementButton, quantityContainer, quantityInput } } = this.props;\n+ const { value } = this.state;\nreturn (\n<TextField\nid=\"addToCartQuantityInput\"\n- value={2}\n+ value={value}\nonChange={this.handleQuantityInputChange}\nInputProps={{\nstartAdornment: (\n@@ -54,7 +96,7 @@ class QuantityInput extends Component {\nonClick={this.handleDecrementButton}\nclassName={incrementButton}\n>\n- -\n+ <i className=\"fa fa-minus\" />\n</ButtonBase>\n</InputAdornment>\n),\n@@ -66,7 +108,7 @@ class QuantityInput extends Component {\nonClick={this.handleIncrementButton}\nclassName={incrementButton}\n>\n- +\n+ <i className=\"fa fa-plus\" />\n</ButtonBase>\n</InputAdornment>\n),\n",
        "chatgpt_rag": "refactor: update NumberInput component icons handling"
    },
    {
        "msg": "refactor: update scrollbars styles for Windows browsers",
        "diff": "diff --git a/scss/sidebar/_sidebar-nav.scss b/scss/sidebar/_sidebar-nav.scss overflow-y: auto;\nlist-style: none;\n+ // Firefox scrollbars\n+ @-moz-document url-prefix() {\n+ scrollbar-width: thin;\n+ }\n+\n+ // Chrome, Edge scrollbars\n+\n+ /* total width */\n+ &::-webkit-scrollbar {\n+ width: 8px;\n+ background-color: transparent;\n+ }\n+\n+ /* background of the scrollbar except button or resizer */\n+ &::-webkit-scrollbar-track {\n+ background-color: transparent;\n+ }\n+\n+ /* scrollbar itself */\n+ &::-webkit-scrollbar-thumb {\n+ background-color: rgba(0, 0, 0, .375);\n+ @include border-radius(8px);\n+ }\n+\n+ /* set button(top and bottom of the scrollbar) */\n+ &::-webkit-scrollbar-button {\n+ display: none;\n+ }\n+\n.nav-title {\npadding: $sidebar-nav-title-padding-y $sidebar-nav-title-padding-x;\nmargin-top: $sidebar-nav-title-margin-top;\n",
        "date": "26.05.2021 00:27:26",
        "repo": "coreui/coreui",
        "type": "refactor",
        "sim_msg": "feat: add styling for scrollbar",
        "sim_diff": "diff --git a/packages/shared/styles/components/molecules/SfScrollable.scss b/packages/shared/styles/components/molecules/SfScrollable.scss margin: var(--scrollable-button-margin, var(--spacer-sm) 0 0 0);\n}\n- &::-webkit-scrollbar {\n+ ::-webkit-scrollbar {\nbackground-color: #fff;\nwidth: 16px;\n}\n/* background of the scrollbar except button or resizer */\n- &::-webkit-scrollbar-track {\n+ ::-webkit-scrollbar-track {\nbackground-color: #fff;\n}\n/* scrollbar itself */\n- &::-webkit-scrollbar-thumb {\n+ ::-webkit-scrollbar-thumb {\nbackground-color: #babac0;\nborder-radius: 16px;\nborder: 4px solid #fff;\n}\n/* set button(top and bottom of the scrollbar) */\n- &::-webkit-scrollbar-button {\n+ ::-webkit-scrollbar-button {\ndisplay:none;\n}\n}\n",
        "chatgpt_rag": "style: update scrollbar styling for different browsers"
    },
    {
        "msg": "refactor: use more semantic variable names, update changelog",
        "diff": "diff --git a/packages/veui/src/managers/rule.js b/packages/veui/src/managers/rule.js @@ -5,6 +5,7 @@ import max from './rules/max'\nimport min from './rules/min'\nimport numeric from './rules/numeric'\nimport pattern from './rules/pattern'\n+import type from './type'\nimport { isObject, isFunction } from 'lodash'\n/**\n@@ -31,15 +32,16 @@ export class Rule {\n}\n}\n- validate (val, rules, formData) {\n+ validate (val, rules, context) {\nif (!rules || !rules.length) {\nreturn true\n}\nrules = Array.isArray(rules) ? rules : [rules]\n+ let contextData = type.clone(context)\nlet results = rules.map(rule => {\nlet validator = this.ruleValidators[rule.name]\n- if (!validator.validate(val, rule.value, formData)) {\n+ if (!validator.validate(val, rule.value, contextData)) {\nlet realMessage = rule.message || validator.message\nreturn {\nname: rule.name,\n",
        "date": "14.10.2018 13:06:15",
        "repo": "ecomfe/veui",
        "type": "refactor",
        "sim_msg": "refactor: use symbol instead of string",
        "sim_diff": "diff --git a/lib/extend/logic.js b/lib/extend/logic.js const Validator = require('think-validator');\nconst helper = require('think-helper');\n+\n+const INVOKED = Symbol('invoked');\nlet validatorsRuleAdd = false;\nmodule.exports = {\n@@ -17,7 +19,7 @@ module.exports = {\n*/\nvalidate(rules, msgs) {\nif (helper.isEmpty(rules)) return;\n- this['INVOKED'] = true;\n+ this[INVOKED] = true;\n// add user defined rules\nif (!validatorsRuleAdd) {\n@@ -61,7 +63,7 @@ module.exports = {\n}\n// check rules\n- if (!this['INVOKED']) {\n+ if (!this[INVOKED]) {\nthis.rules = this.getCombineRules(this.scope, this.rules);\nif (!helper.isEmpty(this.rules)) {\nconst flag = this.validate(this.rules);\n",
        "chatgpt_rag": "refactor: use context instead of formData in validate function"
    },
    {
        "msg": "refactor: use const replace string",
        "diff": "diff --git a/src/use/emitter.js b/src/use/emitter.js import { getCurrentInstance } from 'vue'\nimport mitt from 'mitt'\n+const DISPATCH = 'dispatch'\n+const BROADCAST = 'broadcast'\n+\n+const wrapper = Symbol('wrapper')\n+\nconst emitter = mitt()\nexport function useEmitter() {\n@@ -9,11 +14,11 @@ export function useEmitter() {\nfunction on(type, handler) {\nconst handleWrapper = (e) => {\nconst { value, type, emitComponentInstance } = e\n- if (type === 'broadcast') {\n+ if (type === BROADCAST) {\nif (isChildComponent(currentComponentInstance, emitComponentInstance)) {\nhandler && handler(value)\n}\n- } else if (type === 'dispatch') {\n+ } else if (type === DISPATCH) {\nif (isChildComponent(emitComponentInstance, currentComponentInstance)) {\nhandler && handler(value)\n}\n@@ -23,13 +28,13 @@ export function useEmitter() {\n}\n// Save the real handler because the need to call off\n- handler.wrapper = handleWrapper\n+ handler[wrapper] = handleWrapper\nemitter.on(type, handleWrapper)\n}\nfunction broadcast(type, evt) {\nemitter.emit(type, {\n- type: 'broadcast',\n+ type: BROADCAST,\nemitComponentInstance: currentComponentInstance,\nvalue: evt\n})\n@@ -37,14 +42,14 @@ export function useEmitter() {\nfunction dispatch(type, evt) {\nemitter.emit(type, {\n- type: 'dispatch',\n+ type: DISPATCH,\nemitComponentInstance: currentComponentInstance,\nvalue: evt\n})\n}\nfunction off(type, handler) {\n- emitter.off(type, handler.wrapper)\n+ emitter.off(type, handler[wrapper])\n}\nfunction emit(type, evt) {\n",
        "date": "11.09.2020 20:19:55",
        "repo": "hug-sun/element3",
        "type": "refactor",
        "sim_msg": "fix(vue3): virt scroll mixin correctly importing emit-listeners",
        "sim_diff": "diff --git a/ui/src/mixins/virtual-scroll.js b/ui/src/mixins/virtual-scroll.js import { h } from 'vue'\n-import EmitListenersMixin from '../../mixins/emit-listeners.js'\n+import EmitListenersMixin from './emit-listeners.js'\nimport debounce from '../utils/debounce.js'\n",
        "chatgpt_rag": "refactor(vue3): use emitter module now uses constants for event types and handler wrapper symbol"
    },
    {
        "msg": "refactor(readability): remove multline and add comma",
        "diff": "diff --git a/src/features/visualization/d3-viz.js b/src/features/visualization/d3-viz.js @@ -219,7 +219,10 @@ function d3Viz(rootNode) {\nnodeRoot.on(\"click.select\", () => {\nconst datum = select(d3Event.target).datum();\n- if(datum.data !== undefined) {props.sendData(datum.data)} //Used to send data back to parent component Visualizations.js\n+ if(datum.data !== undefined) {\n+ //Used to send data back to parent component Visualizations.js\n+ props.sendData(datum.data);\n+ };\nlet zoomToNode = datum;\nif(datum.height === 0 && datum.parent){\nzoomToNode = datum.parent;\n@@ -290,4 +293,4 @@ const findAncestor = (node, hierarchy) => {\nreturn res;\n};\n-export default d3Viz\n+export default d3Viz;\n",
        "date": "16.07.2019 10:59:19",
        "repo": "iqtlabs/crviz",
        "type": "refactor",
        "sim_msg": "fix(deps): fixes bad dependency on the extended areamanager",
        "sim_diff": "diff --git a/src/os/data/drawinglayernode.js b/src/os/data/drawinglayernode.js @@ -7,7 +7,7 @@ goog.require('os.data.DrawingFeatureNode');\ngoog.require('os.data.LayerNode');\ngoog.require('os.events.PropertyChangeEvent');\ngoog.require('os.fn');\n-goog.require('os.query.AreaManager');\n+goog.require('os.query.BaseAreaManager');\n@@ -59,7 +59,7 @@ os.data.DrawingLayerNode.prototype.getState = function() {\nos.data.DrawingLayerNode.prototype.setLayer = function(value) {\nvar currLayer = this.getLayer();\nvar source = null;\n- var am = os.query.AreaManager.getInstance();\n+ var am = os.query.BaseAreaManager.getInstance();\nif (value !== currLayer && currLayer) {\nsource = /** @type {os.layer.Vector} */ (currLayer).getSource();\n@@ -217,7 +217,7 @@ os.data.DrawingLayerNode.childSort_ = function(a, b) {\n*/\nos.data.DrawingLayerNode.createNode_ = function(feature) {\nif (!os.data.DrawingLayerNode.isHidden(feature)) {\n- var node = os.query.AreaManager.getInstance().contains(feature) ?\n+ var node = os.query.BaseAreaManager.getInstance().contains(feature) ?\nnew os.data.AreaNode(feature) :\nnew os.data.DrawingFeatureNode(feature);\n@@ -254,7 +254,7 @@ os.data.DrawingLayerNode.prototype.getChildByFeature = function(feature) {\n* @protected\n*/\nos.data.DrawingLayerNode.prototype.removeFeature = function(feature) {\n- var am = os.query.AreaManager.getInstance();\n+ var am = os.query.BaseAreaManager.getInstance();\nif (feature && !os.data.DrawingLayerNode.isHidden(feature) && !am.contains(feature)) {\nvar node = this.getChildByFeature(feature);\n",
        "chatgpt_rag": "style: improve code formatting and add comments for better readability"
    },
    {
        "msg": "refactor(xhr_wrapper): use Object.assign instead of {...Object} syntax\nrefactor(xhr_wrapper): use Object.assign instead of {...Object} syntax,\nreturn catched error from fetch()",
        "diff": "diff --git a/src/common/api/utils/xhr_wrapper.js b/src/common/api/utils/xhr_wrapper.js @@ -43,12 +43,13 @@ export default function requestWrapper (method) {\ndefaults.body = data\n}\n- const paramsObj = {...defaults, headers: {...params, ...defaults.headers}}\n+ const paramsObj = Object.assign({}, defaults, {headers: params})\nreturn fetch(url, paramsObj)\n.then(checkStatus)\n.then(parseJSON)\n.catch(err => {\nconsole.error(err)\n+ return err\n})\n}\n}\n",
        "date": "14.08.2017 23:53:10",
        "repo": "metnew/suicrux",
        "type": "refactor",
        "sim_msg": "test: fix undefined url",
        "sim_diff": "diff --git a/lib/utils/request-wrapper.js b/lib/utils/request-wrapper.js @@ -84,15 +84,20 @@ const requestWrapper = (url, options) => {\n// server\noptions.headers.server = 'RSSHub';\n+ try {\n// referer\nif (!options.headers.referer && !options.headers.Referer) {\nconst urlHandler = new URL(url);\noptions.headers.referer = urlHandler.origin;\n}\n+ // host\nif (!options.headers.host && !options.headers.Host) {\nconst urlHandler = new URL(url);\noptions.headers.host = urlHandler.host;\n}\n+ } catch (e) {\n+ // do nothing\n+ }\n};\nconst httpWrap = (func) => {\n",
        "chatgpt_rag": "fix: update requestWrapper function to handle error in catch block"
    },
    {
        "msg": "refactor: inline `lineHeight`",
        "diff": "diff --git a/packages/vega-scenegraph/src/util/text.js b/packages/vega-scenegraph/src/util/text.js @@ -138,14 +138,13 @@ export function offset(item) {\n// perform our own font baseline calculation\n// why? not all browsers support SVG 1.1 'alignment-baseline' :(\nvar baseline = item.baseline,\n- h = fontSize(item),\n- lh = lineHeight(item);\n+ h = fontSize(item);\nreturn Math.round(\n- baseline === 'line-top' ? 0.79.h + (lh-h) / 2.0 :\n+ baseline === 'line-top' ? 0.79.h + (lineHeight(item)-h) / 2.0 :\nbaseline === 'top' ? 0.79*h :\nbaseline === 'middle' ? 0.30*h :\nbaseline === 'bottom' ? -0.21*h :\n- baseline === 'line-bottom' ? -0.21*h - (lh-h) / 2.0 : 0\n+ baseline === 'line-bottom' ? -0.21*h - (lineHeight(item)-h) / 2.0 : 0\n);\n}\n",
        "date": "01.03.2020 15:04:19",
        "repo": "vega/vega",
        "type": "refactor",
        "sim_msg": "refactor(textinput): use svg instead of fontawesome icon font",
        "sim_diff": "diff --git a/package/src/components/TextInput/v1/TextInput.js b/package/src/components/TextInput/v1/TextInput.js @@ -171,6 +171,11 @@ const TextareaClearButton = styled.div`\nconst defaultClearIcon = <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 14 14\" style={{ height: \"100%\", maxHeight: \"100%\", verticalAlign: \"middle\" }}><path d=\"M9.926 9.105l-2.105-2.105 2.105-2.105-0.82-0.82-2.105 2.105-2.105-2.105-0.82 0.82 2.105 2.105-2.105 2.105 0.82 0.82 2.105-2.105 2.105 2.105zM7 1.176c3.227 0 5.824 2.598 5.824 5.824s-2.598 5.824-5.824 5.824-5.824-2.598-5.824-5.824 2.598-5.824 5.824-5.824z\" /></svg>;\n+// check-circle regular, FontAwesome v5\n+const defaultValidIcon = <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" style={{ height: \"0.875em\", verticalAlign: \"middle\" }}><path fill=\"currentColor\" d=\"M256 8C119.033 8 8 119.033 8 256s111.033 248 248 248 248-111.033 248-248S392.967 8 256 8zm0 48c110.532 0 200 89.451 200 200 0 110.532-89.451 200-200 200-110.532 0-200-89.451-200-200 0-110.532 89.451-200 200-200m140.204 130.267l-22.536-22.718c-4.667-4.705-12.265-4.736-16.97-.068L215.346 303.697l-59.792-60.277c-4.667-4.705-12.265-4.736-16.97-.069l-22.719 22.536c-4.705 4.667-4.736 12.265-.068 16.971l90.781 91.516c4.667 4.705 12.265 4.736 16.97.068l172.589-171.204c4.704-4.668 4.734-12.266.067-16.971z\"\n+/>\n+</svg>;\n+\nconst stringDefaultEquals = (value1, value2) => ((value1 || \"\") === (value2 || \"\"));\nclass TextInput extends Component {\n@@ -281,7 +286,7 @@ class TextInput extends Component {\niconClear: defaultClearIcon,\niconClearAccessibilityText: \"Clear\",\niconError: (<FontIcon className=\"fas fa-exclamation-triangle\" />),\n- iconValid: (<FontIcon className=\"far fa-check-circle\" />),\n+ iconValid: defaultValidIcon,\nisOnDarkBackground: false,\nisReadOnly: false,\nonChange() { },\n",
        "chatgpt_rag": "refactor(text): improve font baseline calculation logic and remove unnecessary code"
    },
    {
        "msg": "refactor(replaceIncludes): streamlined code",
        "diff": "diff --git a/src/jscad/replaceIncludes.js b/src/jscad/replaceIncludes.js @@ -21,10 +21,10 @@ export function replaceIncludes (text, relpath, memFs) {\nconst withoutIncludes = replaceIncludesInAst(moduleAst)\nconst modulePromises = foundIncludes.map(function (uri, index) {\n- const promise = includeJscadSync(relpath, uri, memFs)\n- return promise.then(function (includedScript) {\n- return replaceIncludes(includedScript, relpath, memFs)\n- })\n+ return includeJscadSync(relpath, uri, memFs)\n+ .then(\n+ includedScript => replaceIncludes(includedScript, relpath, memFs),\n+ err => console.error('fail', err))\n})\nPromise.all(modulePromises).then(function (resolvedModules) {\nconst resolvedScript = resolvedModules.concat(withoutIncludes).join('\\n')\n",
        "date": "19.04.2017 00:21:41",
        "repo": "jscad/openjscad.org",
        "type": "refactor",
        "sim_msg": "fix: cleanHTML RegExp",
        "sim_diff": "diff --git a/src/lib/util.js b/src/lib/util.js @@ -120,7 +120,7 @@ const util = {\nfileName += nameArray[i] + (i < len - 1 ? '|' : ')');\n}\n- const regExp = new this._w.RegExp('(^|.*[\\\\\\\\\\/])' + fileName + '(\\\\.[^\\\\\\\\/]+)?\\.' + extension + '(?:\\\\?.*|;.*)?$', 'i');\n+ const regExp = new this._w.RegExp('(^|.*[\\\\/])' + fileName + '(\\\\.[^\\\\/]+)?\\.' + extension + '(?:\\\\?.*|;.*)?$', 'i');\nconst extRegExp = new this._w.RegExp('.+\\\\.' + extension + '(?:\\\\?.*|;.*)?$', 'i');\nfor (let c = this._d.getElementsByTagName(tagName), i = 0; i < c.length; i++) {\n@@ -639,12 +639,30 @@ const util = {\ncleanHTML += domTree[i].outerHTML\n.replace(/<([a-zA-Z]+\\:[a-zA-Z]+|script|style).*>(\\n|.)*<\\/([a-zA-Z]+\\:[a-zA-Z]+|script|style)>/g, '')\n.replace(/(?!<[a-z]+)\\s+(?:style|class|id|name|width|height|index|for|dir|xmlns|contenteditable|on[a-zA-Z]|[a-z]+\\-[a-z\\-]+)\\s*(?:=\\s?\"?[^>^\"]*\"?)?(?=[^<]*>)/g, '')\n- .replace(/<\\/?((?!br|p|div|pre|blockquote|h[1-6]|b|strong|u|i|var|em|strike|s|sub|sup|ol|ul|li|br|hr|a|img|iframe|table|tbody|tr|td)[^>^<])+>/g, '');\n+ .replace(this._deleteExclusionTags, '');\n}\n}\nreturn this._tagConvertor(cleanHTML || html);\n+ },\n+\n+ /**\n+ * @description Delete Exclusion tags regexp object\n+ * @returns {Object}\n+ * @private\n+ */\n+ _deleteExclusionTags: (function () {\n+ const exclusionTags = 'br|p|div|pre|blockquote|h[1-6]|b|strong|u|i|var|em|strike|s|sub|sup|ol|ul|li|br|hr|a|img|iframe|table|tbody|tr|td'.split('|');\n+ let regStr = '<\\/?(';\n+\n+ for (let i = 0, len = exclusionTags.length; i < len; i++) {\n+ regStr += '(?!\\\\b' + exclusionTags[i] + '\\\\b)';\n}\n+\n+ regStr += '[^>^<])+>';\n+\n+ return new RegExp(regStr, 'g');\n+ })()\n};\nexport default util;\n\\ No newline at end of file\n",
        "chatgpt_rag": "refactor: improve error handling in replaceIncludes function"
    },
    {
        "msg": "refactor: support off method",
        "diff": "diff --git a/src/use/emitter.js b/src/use/emitter.js import { getCurrentInstance } from 'vue'\n+import { capitalize } from 'element-ui/src/utils/util'\n+const EVENT_NAME_KEY = Symbol('ELEMENT_EVENTS')\nexport function useEmitter() {\nreturn {\ndispatch: dispatch(),\nbroadcast: broadcast(),\n- on: on()\n+ on: on(),\n+ off: off()\n}\n}\n@@ -12,12 +15,17 @@ function on() {\nconst instance = getCurrentInstance()\nreturn (originalEventName, callback) => {\n- const eventName = 'on' + originalEventName.charAt(0).toUpperCase() + originalEventName.slice(1)\n+ const eventName = 'on' + capitalize(originalEventName)\nif (!instance.vnode.props) {\ninstance.vnode.props = {}\n}\n+ if (!instance.vnode.props[EVENT_NAME_KEY]) {\n+ instance.vnode.props[EVENT_NAME_KEY] = new Set()\n+ }\n+ instance.vnode.props[EVENT_NAME_KEY].add(eventName)\n+\nif (!instance.vnode.props[eventName]) {\ninstance.vnode.props[eventName] = (...params) => {\nconst callbacks = instance.vnode.props[eventName]['__events']\n@@ -33,6 +41,41 @@ function on() {\n}\n}\n+function off() {\n+ const instance = getCurrentInstance()\n+\n+ return (originalEventName, callback) => {\n+ const eventNameList = instance.vnode.props && instance.vnode.props[EVENT_NAME_KEY]\n+ if (!eventNameList || !eventNameList.size) {\n+ return\n+ }\n+\n+ if (!originalEventName) {\n+ eventNameList.forEach(eventName => {\n+ delete instance.vnode.props[eventName]\n+ })\n+ eventNameList.clear()\n+ return\n+ }\n+\n+ const eventName = 'on' + capitalize(originalEventName)\n+\n+ if (!callback) {\n+ delete instance.vnode.props[eventName]\n+ eventNameList.delete(eventName)\n+ return\n+ }\n+\n+ const handlers = instance.vnode.props[eventName] && instance.vnode.props[eventName]['__events']\n+ if (handlers && handlers.length) {\n+ const index = handlers.indexOf(callback)\n+ if (index > -1) {\n+ handlers.splice(index, 1)\n+ }\n+ }\n+ }\n+}\n+\nfunction dispatch() {\nconst instance = getCurrentInstance()\n",
        "date": "18.08.2020 15:58:46",
        "repo": "hug-sun/element3",
        "type": "refactor",
        "sim_msg": "chore(compat): update hook event names for vue3 (now vnode events)",
        "sim_diff": "diff --git a/src/constants/events.js b/src/constants/events.js +import { isVue3 } from '../vue'\n+\nexport const EVENT_NAME_ACTIVATE_TAB = 'activate-tab'\nexport const EVENT_NAME_BLUR = 'blur'\nexport const EVENT_NAME_CANCEL = 'cancel'\n@@ -54,8 +56,8 @@ export const EVENT_NAME_TOGGLE = 'toggle'\nexport const EVENT_NAME_UNPAUSED = 'unpaused'\nexport const EVENT_NAME_UPDATE = 'update'\n-export const HOOK_EVENT_NAME_BEFORE_DESTROY = 'hook:beforeDestroy'\n-export const HOOK_EVENT_NAME_DESTROYED = 'hook:destroyed'\n+export const HOOK_EVENT_NAME_BEFORE_DESTROY = isVue3 ? 'vnodeBeforeUnmount' : 'hook:beforeDestroy'\n+export const HOOK_EVENT_NAME_DESTROYED = isVue3 ? 'vNodeUnmounted' : 'hook:destroyed'\nexport const MODEL_EVENT_NAME_PREFIX = 'update:'\n",
        "chatgpt_rag": "feat(emitter): add off method to remove event listeners\n\n- Added an `off` method to the `useEmitter` function in `emitter.js` file\n- The `off` method allows removing event listeners that were added using the `on` method\n- The `off` method takes the event name and an optional callback function as parameters\n- If no event name is provided, all event listeners are removed\n- If an event name is provided without a callback, all listeners for that event are removed\n- If an event name and callback are provided, only that specific listener is removed"
    },
    {
        "msg": "refactor: add RTL styling for inputs",
        "diff": "diff --git a/scss/_reboot.scss b/scss/_reboot.scss @@ -554,17 +554,16 @@ legend {\n// 1. A few input types should stay LTR\n// See https://rtlstyling.com/posts/rtl-styling#form-inputs\n-// 2. RTL only output\n-// See https://rtlcss.com/learn/usage-guide/control-directives/#raw\n-/* rtl:raw:\n+*[dir=\"rtl\"] {\n[type=\"tel\"],\n[type=\"url\"],\n[type=\"email\"],\n[type=\"number\"] {\ndirection: ltr;\n}\n-*/\n+}\n+\n// Remove the inner padding in Chrome and Safari on macOS.\n",
        "date": "23.06.2021 17:06:24",
        "repo": "coreui/coreui",
        "type": "refactor",
        "sim_msg": "fix: label text spilling out of the field\nOn small screens, longer text labels spilling out of the input field, added\ntext overflow ellipses.",
        "sim_diff": "diff --git a/src/Form/_Form.scss b/src/Form/_Form.scss @@ -156,6 +156,10 @@ $select-icon-padding: .5625rem !default;\n// a color. Adding an alpha channel smooths it out.\nbackground-color: rgba($input-bg, 0.01);\nwhite-space: nowrap;\n+ max-width: 75vw;\n+ display: block;\n+ overflow: hidden;\n+ text-overflow: ellipsis;\n}\n.has-leading-element & {\n",
        "chatgpt_rag": "style: fix input direction for RTL languages\nFixed input direction for specific input types in RTL languages to ensure proper alignment."
    },
    {
        "msg": "refactor(webpack_config/config): read index.html file for SSR using DIST_PATH env variable, some style fixes, fix SSR of Root component",
        "diff": "diff --git a/src/server/ssr/index.js b/src/server/ssr/index.js import path from 'path'\nimport fs from 'fs'\n+import chalk from 'chalk'\n// React-related stuff\nimport React from 'react'\nimport {render} from 'rapscallion'\n-import Helmet from 'react-helmet'\n-import {StaticRouter} from 'react-router'\n+// import Helmet from 'react-helmet'\nimport {ServerStyleSheet, StyleSheetManager} from 'styled-components'\n// Application\n-// Do you remember that we use webpack aliases provided by cool babel plugin?\n-// (take a look at .babelrc)\nimport {configureStore, configureRootComponent} from 'common/index'\n-//\n-const language = process.env.APP_LANGUAGE || 'en'\n-const distPath = `../../../dist/${language}`\n-// read index.html and assign a variable\n-const indexPath = path.join(__dirname, `${distPath}/index.html`)\n-const indexHTMLFileContent = (function () {\n+// read index.html and assign to a variable\n+const indexPath = path.join(`${process.env.DIST_PATH}/index.html`)\n+const htmlFile = (function () {\ntry {\nreturn fs.readFileSync(indexPath, 'utf8')\n} catch (e) {\n- throw new Error(`Are you sure you have already built app? ${e}`)\n+ console.error(chalk.bgRed(`Are you sure you have already built app? ${e}`))\n+ console.log(chalk.bgCyan('Application is working without SSR'))\n+ return false\n}\n})()\n-\nexport default function (req, res) {\n+ if (!htmlFile) {\n+ // NOTE: @Metnew (29.07.2017): Here must be a requirement of ejs/jade template\n+ // app probably needs in template engine!\n+ const warning = `\n+ <h1>Do you remember that you don't have SSR?</h1>\n+ <h2>Why it happens?</h2>\n+ <h3>Probably, because of:</h3>\n+ <h4>\n+ <ul>\n+ <li>No \"index.html\" in the dist folder. e.g.: You don't have already built app.</li>\n+ <li>Path to dist folder with client app is invalid, check process.env.DIST_PATH in \"webpack_config/server/webpack.base.\"</li>\n+ <pre>process.env.path === ${process.env.DIST_PATH}</pre>\n+ <pre>URL: ${req.url}</pre>\n+ </ul>\n+ </h4>\n+ `\n+ return res.send(warning)\n+ }\n// Auth-related stuff\n// NOTE: check `server/express/index.js` for more info\nconst {user} = req\nconst {isLoggedIn, token} = user\n- const initialState = isLoggedIn\n- ? {me: {auth: {isLoggedIn, token}}}\n- : {}\n+ const initialState = isLoggedIn ? {me: {auth: {isLoggedIn, token}}} : {}\n//\nconst sheet = new ServerStyleSheet()\n+ const location = req.url\nconst context = {}\nconst store = configureStore(initialState)\n- const RootComponent = configureRootComponent(store)\n+ const RootComponent = configureRootComponent({\n+ store,\n+ SSR: {location, context}\n+ })\nconst App = (\n<StyleSheetManager sheet={sheet.instance}>\n- <StaticRouter url={req.url} context={context}>\n{RootComponent}\n- </StaticRouter>\n</StyleSheetManager>\n)\n//\n@@ -54,7 +68,7 @@ export default function(req, res) {\nfunction renderFullPage ({html, css, preloadedState}) {\n// console.log(indexHTMLFileContent)\n- const indexHTMLFileContentWithRedux = indexHTMLFileContent.replace(\n+ const htmlWithRedux = htmlFile.replace(\n'<div id=\"app\"></div>',\n`<div id=\"app\">${html}</div><script>\nwindow.__PRELOADED_STATE__ = ${JSON.stringify(preloadedState).replace(\n@@ -63,9 +77,9 @@ function renderFullPage ({html, css, preloadedState}) {\n)}\n</script><span style=\"display:none;\">Server-side rendering!</span>`\n)\n- const indexHTMLFileContentWithStylesAndRedux = indexHTMLFileContentWithRedux.replace(\n+ const styledHtmlWithRedux = htmlWithRedux.replace(\n'<meta name=\"ssr-styles\"/>',\ncss\n)\n- return indexHTMLFileContentWithStylesAndRedux\n+ return styledHtmlWithRedux\n}\n",
        "date": "04.08.2017 14:02:33",
        "repo": "metnew/suicrux",
        "type": "refactor",
        "sim_msg": "refactor: fix import casing",
        "sim_diff": "diff --git a/src/components/Layout/index.js b/src/components/Layout/index.js import React from \"react\";\nimport Head from \"next/head\";\n-import Header from \"components/header\";\n+import Header from \"components/Header\";\nexport default ({ children, title = '' }) => (\n<div>\n",
        "chatgpt_rag": "refactor: fix import casing and improve error handling in SSR server file"
    },
    {
        "msg": "refactor: refactor radio-button component",
        "diff": "diff --git a/packages/element3/packages/radio-button/RadioButton.vue b/packages/element3/packages/radio-button/RadioButton.vue />\n<span\nclass=\"el-radio-button__inner\"\n- :style=\"style\"\n+ :style=\"isChecked ? style : null\"\n@keydown.stop\n>\n<slot>{{ label }}</slot>\n@@ -75,7 +75,7 @@ export default {\ntabIndex,\nclasses,\nisChecked,\n- style: isChecked ? style : null\n+ style\n}\n}\n}\n",
        "date": "18.12.2020 14:41:33",
        "repo": "hug-sun/element3",
        "type": "refactor",
        "sim_msg": "feat: radio color",
        "sim_diff": "diff --git a/src/core/view/components/radio/index.vue b/src/core/view/components/radio/index.vue @click=\"_onClick\">\n<div class=\"uni-radio-wrapper\">\n<div\n- :class=\"[radioChecked ? 'uni-radio-input-checked' : '']\"\n- :style=\"{color:color}\"\n+ :class=\"radioChecked ? 'uni-radio-input-checked' : ''\"\n+ :style=\"radioChecked ? checkedStyle : ''\"\nclass=\"uni-radio-input\" />\n<slot />\n</div>\n@@ -34,7 +34,7 @@ export default {\n},\ncolor: {\ntype: String,\n- default: '#007aff'\n+ default: '#007AFF'\n},\nvalue: {\ntype: String,\n@@ -47,6 +47,11 @@ export default {\nradioValue: this.value\n}\n},\n+ computed: {\n+ checkedStyle () {\n+ return `background-color: ${this.color};border-color: ${this.color};`\n+ }\n+ },\nwatch: {\nchecked (val) {\nthis.radioChecked = val\n@@ -124,10 +129,10 @@ export default {\nposition: relative;\n}\n- uni-radio .uni-radio-input.uni-radio-input-checked {\n+ /* uni-radio .uni-radio-input.uni-radio-input-checked {\nbackground-color: #007aff;\nborder-color: #007aff;\n- }\n+ } */\nuni-radio .uni-radio-input.uni-radio-input-checked:before {\nfont: normal normal normal 14px/1 \"uni\";\n",
        "chatgpt_rag": "refactor: improve radio button style logic"
    },
    {
        "msg": "refactor: refactor invalid message slot",
        "diff": "diff --git a/packages/veui/src/components/Uploader.vue b/packages/veui/src/components/Uploader.vue <slot name=\"desc\"/>\n</span>\n<span :class=\"$c('uploader-error')\">\n- <template v-if=\"error.typeInvalid\">\n- <slot name=\"type-invalid\">\n- <veui-icon :name=\"icons.alert\"/>{{ t('fileTypeInvalid') }}\n- </slot>\n- </template>\n- <template v-if=\"error.sizeInvalid\">\n- <slot name=\"size-invalid\">\n- <veui-icon :name=\"icons.alert\"/>{{ t('fileSizeInvalid') }}\n- </slot>\n- </template>\n- <template v-if=\"error.countOverflow\">\n- <slot name=\"count-overflow\">\n- <veui-icon :name=\"icons.alert\"/>{{ t('tooManyFiles') }}\n- </slot>\n- </template>\n- <template v-if=\"error.customValidationInvalid\">\n- <slot name=\"custom-validation-invalid\">\n- <veui-icon :name=\"icons.alert\"/>{{ customValidationMessage }}\n+ <slot\n+ name=\"invalid\"\n+ :error=\"error\"\n+ >\n+ <veui-icon\n+ v-if=\"validationMessage\"\n+ :name=\"icons.alert\"\n+ />{{\n+ validationMessage\n+ }}\n</slot>\n- </template>\n</span>\n</div>\n<transition-group\nv-if=\"type === 'image'\"\n:class=\"$c('uploader-error')\"\n>\n- <template v-if=\"error.typeInvalid\">\n- <slot name=\"type-invalid\">\n- <veui-icon :name=\"icons.alert\"/>{{ t('fileTypeInvalid') }}\n- </slot>\n- </template>\n- <template v-if=\"error.sizeInvalid\">\n- <slot name=\"size-invalid\">\n- <veui-icon :name=\"icons.alert\"/>{{ t('fileSizeInvalid') }}\n- </slot>\n- </template>\n- <template v-if=\"error.countOverflow\">\n- <slot name=\"count-overflow\">\n- <veui-icon :name=\"icons.alert\"/>{{ t('tooManyFiles') }}\n- </slot>\n- </template>\n- <template v-if=\"error.customValidationInvalid\">\n- <slot name=\"custom-validation-invalid\">\n- <veui-icon :name=\"icons.alert\"/>{{ customValidationMessage }}\n+ <slot\n+ name=\"invalid\"\n+ :error=\"error\"\n+ >\n+ <veui-icon\n+ v-if=\"validationMessage\"\n+ :name=\"icons.alert\"\n+ />{{\n+ validationMessage\n+ }}\n</slot>\n- </template>\n</span>\n<iframe\nv-if=\"requestMode === 'iframe' && submitting\"\n@@ -642,6 +624,18 @@ export default {\n(file.status === 'success' || !file.status) && !file.toBeUploaded\n)\n.map(file => omit(file, ['status', 'toBeUploaded']))\n+ },\n+ validationMessage () {\n+ let messageMap = {\n+ typeInvalid: this.t('fileTypeInvalid'),\n+ sizeInvalid: this.t('fileSizeInvalid'),\n+ countOverflow: this.t('tooManyFiles'),\n+ customValidationInvalid: this.customValidationMessage\n+ }\n+ return Object.keys(this.error)\n+ .map(key => (this.error[key] ? messageMap[key] : ''))\n+ .filter(i => !!i)\n+ .join(', ')\n}\n},\nwatch: {\n",
        "date": "14.11.2019 21:22:54",
        "repo": "ecomfe/veui",
        "type": "refactor",
        "sim_msg": "fix: QUploader should not upload file when :disable=\"true\"",
        "sim_diff": "diff --git a/src/components/uploader/QUploader.vue b/src/components/uploader/QUploader.vue @@ -186,12 +186,7 @@ export default {\nnoThumbnails: Boolean,\nautoExpand: Boolean,\nexpandStyle: [Array, String, Object],\n- expandClass: [Array, String, Object],\n-\n- color: {\n- type: String,\n- default: 'primary'\n- }\n+ expandClass: [Array, String, Object]\n},\ndata () {\nreturn {\n@@ -409,7 +404,7 @@ export default {\n},\nupload () {\nconst length = this.queueLength\n- if (length === 0) {\n+ if (this.disable || length === 0) {\nreturn\n}\n",
        "chatgpt_rag": "feat: Improve error message handling in Uploader component\n\n- Refactored error message handling in Uploader component to use a more concise and structured approach\n- Added a new method `validationMessage` to dynamically generate error messages based on the type of error\n- Updated the template structure to utilize the `validationMessage` method for displaying error messages\n- Removed redundant code for displaying error messages based on specific error types\n- Improved readability and maintainability of error message logic in the Uploader component"
    },
    {
        "msg": "refactor(progress): use  api",
        "diff": "diff --git a/packages/chakra-ui-core/src/CProgress/CProgress.js b/packages/chakra-ui-core/src/CProgress/CProgress.js import { css, keyframes } from 'emotion'\nimport CBox from '../CBox'\n-import { generateStripe, valueToPercent, forwardProps } from '../utils'\n-import { baseProps } from '../config/props'\n+import { generateStripe, valueToPercent, createStyledAttrsMixin } from '../utils'\nconst stripe = keyframes({\nfrom: { backgroundPosition: '1rem 0' },\n@@ -39,18 +38,20 @@ const progressbarSizes = {\n*/\nconst CProgressLabel = {\nname: 'CProgressLabel',\n- props: baseProps,\n- render (h) {\n+ functional: true,\n+ render (h, { data, slots, ...rest }) {\nreturn h(CBox, {\n+ ...rest,\nprops: {\n- textAlign: 'center',\n- width: '100%',\n- ...forwardProps(this.$props)\n+ as: data.attrs.as\n},\nattrs: {\n+ textAlign: 'center',\n+ width: '100%',\n+ ...data.attrs,\n'data-chakra-component': 'CProgressLabel'\n}\n- }, this.$slots.default)\n+ }, slots().default)\n}\n}\n@@ -64,23 +65,22 @@ const CProgressLabel = {\n*/\nconst CProgressTrack = {\nname: 'CProgressTrack',\n+ functional: true,\nprops: {\n- ...baseProps,\nsize: [String, Number, Array]\n},\n- render (h) {\n+ render (h, { props, slots, data, ...rest }) {\nreturn h(CBox, {\n- props: {\n+ ...rest,\n+ attrs: {\npos: 'relative',\n- height: progressbarSizes[this.size || 'md'],\n+ height: progressbarSizes[props.size || 'md'],\noverflow: 'hidden',\nw: '100%',\n- ...forwardProps(this.$props)\n- },\n- attrs: {\n+ ...data.attrs,\n'data-chakra-component': 'CProgressTrack'\n}\n- }, this.$slots.default)\n+ }, slots().default)\n}\n}\n@@ -93,9 +93,8 @@ const CProgressTrack = {\n* @see Docs https://vue.chakra-ui.com/progress\n*/\nconst CProgressIndicator = {\n- name: 'CProgressIndicator',\n+ mixins: [createStyledAttrsMixin('CProgressIndicator')],\nprops: {\n- ...baseProps,\nisIndeterminate: Boolean,\nmin: Number,\nmax: Number,\n@@ -104,23 +103,27 @@ const CProgressIndicator = {\ncomputed: {\npercent () {\nreturn valueToPercent(this.value, this.min, this.max)\n- }\n},\n- render (h) {\n- return h(CBox, {\n- props: {\n+ componentStyles () {\n+ return {\nheight: '100%',\ntransition: 'all 0.3s',\n- width: `${this.percent}%`,\n- ...forwardProps(this.$props)\n+ width: `${this.percent}%`\n+ }\n+ }\n},\n+ render (h) {\n+ return h(this.as || 'div', {\n+ class: [this.className],\nattrs: {\n+ ...this.computedAttrs,\n'aria-valuemax': this.max,\n'aria-valuemin': this.min,\n'aria-valuenow': this.isIndeterminate ? null : this.value,\nrole: 'progressbar',\n'data-chakra-component': 'CProgressIndicator'\n- }\n+ },\n+ on: this.computedListeners\n}, this.$slots.default)\n}\n}\n@@ -135,9 +138,9 @@ const CProgressIndicator = {\n*/\nconst CProgress = {\nname: 'CProgress',\n+ inheritAttrs: false,\ninject: ['$chakraColorMode'],\nprops: {\n- ...baseProps,\ncolor: {\ntype: String,\ndefault: 'blue'\n@@ -201,13 +204,13 @@ const CProgress = {\nreturn h(CProgressTrack, {\nprops: {\n- size: this.size,\n- bg: trackColor[this.colorMode],\n- borderRadius: _borderRadius,\n- ...forwardProps(this.$props)\n+ size: this.size\n},\nattrs: {\n- 'data-chakra-component': 'CProgress'\n+ bg: trackColor[this.colorMode],\n+ borderRadius: _borderRadius,\n+ 'data-chakra-component': 'CProgress',\n+ ...this.$attrs\n}\n}, [\nh(CProgressIndicator, {\n@@ -218,7 +221,9 @@ const CProgress = {\nprops: {\nmin: this.min,\nmax: this.max,\n- value: this.value,\n+ value: this.value\n+ },\n+ attrs: {\nbg: indicatorColor[this.colorMode],\nborderRadius: this.__borderRadius,\n...this.isIndeterminate && {\n",
        "date": "11.07.2020 18:26:59",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "refactor",
        "sim_msg": "test: update jest snapshots for ProgressBar",
        "sim_diff": "diff --git a/packages/progress-bar/src/__snapshots__/ProgressBar.test.js.snap b/packages/progress-bar/src/__snapshots__/ProgressBar.test.js.snap @@ -165,3 +165,195 @@ exports[`progress-bar/ProgressBar snapshot tests 2`] = `\n</div>\n</div>\n`;\n+\n+exports[`progress-bar/ProgressBar snapshot tests 3`] = `\n+@keyframes animation-0 {\n+ from {\n+ -webkit-transform: translateX(-100%);\n+ -ms-transform: translateX(-100%);\n+ transform: translateX(-100%);\n+ }\n+\n+ to {\n+ -webkit-transform: translateX(200px);\n+ -ms-transform: translateX(200px);\n+ transform: translateX(200px);\n+ }\n+}\n+\n+.emotion-3 {\n+ position: relative;\n+ border-radius: 2px;\n+ background-color: rgba(0,0,0,0.05);\n+ overflow: hidden;\n+ width: 100%;\n+ height: 4px;\n+}\n+\n+.emotion-2 {\n+ position: absolute;\n+ top: 0;\n+ bottom: 0;\n+ left: -3px;\n+ display: -webkit-box;\n+ display: -webkit-flex;\n+ display: -ms-flexbox;\n+ display: flex;\n+ -webkit-align-items: stretch;\n+ -webkit-box-align: stretch;\n+ -ms-flex-align: stretch;\n+ align-items: stretch;\n+ -webkit-transition: width 0.3s ease-in-out;\n+ transition: width 0.3s ease-in-out;\n+ width: 100%;\n+ -webkit-animation: 2s linear infinite animation-0;\n+ animation: 2s linear infinite animation-0;\n+}\n+\n+.emotion-0 {\n+ background-color: transparent;\n+ -webkit-flex: 1 1 0;\n+ -ms-flex: 1 1 0;\n+ flex: 1 1 0;\n+}\n+\n+.emotion-0:before {\n+ content: \"\";\n+ position: absolute;\n+ right: 2px;\n+ width: 200px;\n+ height: 4px;\n+ background-image: linear-gradient(135deg,transparent,#38abdf 100%);\n+ background-size: 200px 4px;\n+}\n+\n+.emotion-1 {\n+ fill: #38abdf;\n+}\n+\n+<div\n+ aria-valuemax=\"100\"\n+ aria-valuemin=\"0\"\n+ aria-valuenow={undefined}\n+ className=\"emotion-3 myClass-a myClass-b\"\n+ role=\"progressbar\"\n+>\n+ <div\n+ className=\"emotion-2 myClass-a__progress-bar myClass-b__progress-bar\"\n+ >\n+ <div\n+ className=\"emotion-0 myClass-a__fill myClass-b__fill\"\n+ />\n+ <svg\n+ height=\"4px\"\n+ version=\"1.1\"\n+ viewBox=\"0 0 3 4\"\n+ width=\"3px\"\n+ xmlns=\"http://www.w3.org/2000/svg\"\n+ xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n+ >\n+ <polygon\n+ className=\"emotion-1 myClass-a__polygon myClass-b__polygon\"\n+ id=\"end-right\"\n+ points=\"0 0 2.68 0 1 4 0 4\"\n+ />\n+ </svg>\n+ </div>\n+</div>\n+`;\n+\n+exports[`progress-bar/ProgressBar snapshot tests 4`] = `\n+@keyframes animation-0 {\n+ from {\n+ -webkit-transform: translateX(-100%);\n+ -ms-transform: translateX(-100%);\n+ transform: translateX(-100%);\n+ }\n+\n+ to {\n+ -webkit-transform: translateX(200px);\n+ -ms-transform: translateX(200px);\n+ transform: translateX(200px);\n+ }\n+}\n+\n+.emotion-2 {\n+ position: absolute;\n+ top: 0;\n+ bottom: 0;\n+ left: -3px;\n+ display: -webkit-box;\n+ display: -webkit-flex;\n+ display: -ms-flexbox;\n+ display: flex;\n+ -webkit-align-items: stretch;\n+ -webkit-box-align: stretch;\n+ -ms-flex-align: stretch;\n+ align-items: stretch;\n+ -webkit-transition: width 0.3s ease-in-out;\n+ transition: width 0.3s ease-in-out;\n+ width: 100%;\n+ -webkit-animation: 2s linear infinite animation-0;\n+ animation: 2s linear infinite animation-0;\n+}\n+\n+.emotion-0 {\n+ background-color: transparent;\n+ -webkit-flex: 1 1 0;\n+ -ms-flex: 1 1 0;\n+ flex: 1 1 0;\n+}\n+\n+.emotion-0:before {\n+ content: \"\";\n+ position: absolute;\n+ right: 2px;\n+ width: 200px;\n+ height: 4px;\n+ background-image: linear-gradient(135deg,transparent,#38abdf 100%);\n+ background-size: 200px 4px;\n+}\n+\n+.emotion-1 {\n+ fill: #38abdf;\n+}\n+\n+.emotion-3 {\n+ position: relative;\n+ border-radius: 2px;\n+ background-color: red;\n+ overflow: hidden;\n+ width: 100%;\n+ height: 4px;\n+}\n+\n+<div\n+ aria-valuemax=\"100\"\n+ aria-valuemin=\"0\"\n+ aria-valuenow={undefined}\n+ className=\"emotion-3\"\n+ role=\"progressbar\"\n+>\n+ <div\n+ className=\"emotion-2\"\n+ >\n+ <div\n+ className=\"emotion-0\"\n+ />\n+ <svg\n+ height=\"4px\"\n+ version=\"1.1\"\n+ viewBox=\"0 0 3 4\"\n+ width=\"3px\"\n+ xmlns=\"http://www.w3.org/2000/svg\"\n+ xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n+ >\n+ <polygon\n+ className=\"emotion-1\"\n+ id=\"end-right\"\n+ points=\"0 0 2.68 0 1 4 0 4\"\n+ />\n+ </svg>\n+ </div>\n+</div>\n+`;\n",
        "chatgpt_rag": "refactor: update CProgress component to use createStyledAttrsMixin in CProgressIndicator"
    },
    {
        "msg": "refactor(SentenTree): add options spec",
        "diff": "diff --git a/components/SentenTree/index.js b/components/SentenTree/index.js @@ -3,6 +3,46 @@ import { SentenTreeBuilder,\nSentenTreeVis } from 'sententree/dist/SentenTree';\nexport default class SentenTree extends VisComponent {\n+ static get options () {\n+ return [\n+ {\n+ name: 'data',\n+ description: 'The data table.',\n+ type: 'table',\n+ format: 'objectlist'\n+ },\n+ {\n+ name: 'id',\n+ description: 'The field containing the identifier of each row.',\n+ type: 'string',\n+ domain: {\n+ mode: 'field',\n+ from: 'data',\n+ fieldTypes: ['string', 'integer', 'number']\n+ }\n+ },\n+ {\n+ name: 'text',\n+ description: 'The field containing the text sample.',\n+ domain: {\n+ mode: 'field',\n+ from: 'data',\n+ fieldTypes: ['string']\n+ }\n+ },\n+ {\n+ name: 'count',\n+ description: 'The field containing the count for each text sample.',\n+ type: 'string',\n+ domain: {\n+ mode: 'field',\n+ from: 'data',\n+ fieldTypes: ['integer']\n+ }\n+ }\n+ ];\n+ }\n+\nconstructor (el, {data, graphs = 3}) {\nsuper(el);\n",
        "date": "28.04.2017 18:21:50",
        "repo": "kitware/candela",
        "type": "refactor",
        "sim_msg": "test(Tree): support keyboard",
        "sim_diff": "diff --git a/test/tree/index-spec.js b/test/tree/index-spec.js @@ -2,7 +2,7 @@ import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport assert from 'power-assert';\nimport ReactTestUtils from 'react-dom/test-utils';\n-import { dom, KEYCODE } from '../../src/util';\n+import { dom, KEYCODE, func } from '../../src/util';\nimport Tree from '../../src/tree/index';\nimport '../../src/tree/style.js';\n@@ -516,6 +516,22 @@ describe('Tree', () => {\nassert(hasClass(findTreeNodeByKey('1'), 'next-filtered'));\n});\n+\n+ it('should support keyboard', () => {\n+ ReactDOM.render(<Tree dataSource={cloneData(dataSource, {\n+ 2: {\n+ disabled: false\n+ }\n+ })} />, mountNode);\n+ const item00 = findRealItem(0, 0);\n+ item00.focus();\n+ assert(document.activeElement === item00);\n+ const assertAE = assertActiveElement();\n+ assertAE(KEYCODE.RIGHT, () => findRealItem(1, 0));\n+ assertAE(KEYCODE.DOWN, () => findRealItem(1, 1));\n+ assertAE(KEYCODE.DOWN, () => findRealItem(1, 0));\n+ assertAE(KEYCODE.LEFT, () => findRealItem(0, 0));\n+ });\n});\nfunction assertTree(props, mountNode) {\n@@ -662,3 +678,27 @@ function assertEditing(key, editing) {\nassert(findTreeNodeByKey(key).querySelector('.next-tree-node-label'));\n}\n}\n+\n+\n+function assertActiveElement() {\n+ let activeElement = document.activeElement;\n+\n+ return (keyCode, next) => {\n+ ReactTestUtils.Simulate.keyDown(activeElement, { keyCode });\n+ next = typeof next === 'function' ? next() : next;\n+ assert(document.activeElement === next);\n+ activeElement = next;\n+ };\n+}\n+\n+function getTreePath(listIndex, path = '') {\n+ if (listIndex === 0) {\n+ return `.next-tree ${path}`;\n+ }\n+\n+ return getTreePath(listIndex - 1, ` > .next-tree-node > .next-tree-child-tree ${path}`);\n+}\n+\n+function findRealItem(listIndex, itemIndex) {\n+ return document.querySelectorAll(`${getTreePath(listIndex)} > .next-tree-node > .next-tree-node-inner`)[itemIndex];\n+}\n",
        "chatgpt_rag": "feat(SentenTree): add options for data, id, text, and count fields\nfeat(SentenTree): add options for data, id, text, and count fields in constructor"
    },
    {
        "msg": "refactor(Button): use includes replace indexOf",
        "diff": "diff --git a/packages/button/Button.vue b/packages/button/Button.vue @@ -22,18 +22,20 @@ export default {\nsize: {\ntype: String,\nvalidator(val) {\n- if (val === '') return true\n- return ['medium', 'small', 'mini'].indexOf(val) !== -1\n+ return ['medium', 'small', 'mini', ''].includes(val)\n}\n},\ntype: {\ntype: String,\nvalidator(val) {\n- return (\n- ['primary', 'success', 'warning', 'danger', 'info', 'text'].indexOf(\n- val\n- ) !== -1\n- )\n+ return [\n+ 'primary',\n+ 'success',\n+ 'warning',\n+ 'danger',\n+ 'info',\n+ 'text'\n+ ].includes(val)\n}\n},\nnativeType: {\n",
        "date": "10.12.2020 11:05:04",
        "repo": "hug-sun/element3",
        "type": "refactor",
        "sim_msg": "feat(button): set light as default variant\nb4.beta secondary is now \"grey\" this reduces breaking changes",
        "sim_diff": "diff --git a/lib/components/button.vue b/lib/components/button.vue @@ -49,7 +49,7 @@ export default {\nreturn this.block ? 'btn-block' : '';\n},\nbtnVariant() {\n- return this.variant ? `btn-${this.variant}` : `btn-secondary`;\n+ return this.variant ? `btn-${this.variant}` : `btn-light`;\n},\nbtnSize() {\nreturn this.size ? `btn-${this.size}` : '';\n",
        "chatgpt_rag": "fix(button): update size and type validators\n\n- Updated size validator to include an empty string as a valid value\n- Updated type validator to use an array.includes method for better readability and maintainability"
    },
    {
        "msg": "refactor: Rewrite release_initializer with vanilla js",
        "diff": "diff --git a/src/platforms/browser/release_initializer.js b/src/platforms/browser/release_initializer.js +import Dumper from \"./dumper.js\"\n+\n//\n// release_initializer.js - read user's program and eval it (if it exists)\n//\n+\nconst execute_user_program = function() {\n- var dumper = null;\n- if ($(\"#biwascheme-debugger\")[0]) {\n- dumper = new BiwaScheme.Dumper($(\"#biwascheme-debugger\")[0]);\n+ const dumper = null;\n+ const debug_area = document.querySelector(\"#biwascheme-debugger\");\n+ if (debug_area) {\n+ dumper = new Dumper(debug_area);\n}\n// Error handler (show message to console div)\n- var onError = function(e, state){\n+ const onError = function(e, state){\nBiwaScheme.Port.current_error.put_string(e.message + \"\\n\");\nif (dumper) {\ndumper.dump(state);\n@@ -20,8 +24,8 @@ const execute_user_program = function() {\n}\n};\n- var run = function(script) {\n- var intp = new BiwaScheme.Interpreter(onError);\n+ const run = function(script) {\n+ const intp = new BiwaScheme.Interpreter(onError);\ntry{\nintp.evaluate(script, function(){});\n}\n@@ -31,15 +35,21 @@ const execute_user_program = function() {\n};\n// Start user's program (old style)\n- var script = $(\"script[src$='biwascheme.js']\").html() ||\n- $(\"script[src$='biwascheme-min.js']\").html();\n- if (script) run(script);\n+ let script = \"\";\n+ for (const s of document.querySelectorAll(\"script[src$='biwascheme.js']\")) {\n+ script += s.innerHTML;\n+ }\n+ for (const s of document.querySelectorAll(\"script[src$='biwascheme-min.js']\")) {\n+ script += s.innerHTML;\n+ }\n+\n+ if (script.length > 0) run(script);\n// Start user's program (new style)\n- $(function(){\n- $(\"script[type='text/biwascheme']\").each(function(){\n- run($(this).html());\n- });\n+ window.addEventListener('DOMContentLoaded', function(){\n+ for (const s of document.querySelectorAll(\"script[type='text/biwascheme']\")) {\n+ run(s.innerHTML);\n+ }\n});\n};\n",
        "date": "14.03.2021 10:45:15",
        "repo": "biwascheme/biwascheme",
        "type": "refactor",
        "sim_msg": "feat: print debug info for messaging in FF",
        "sim_diff": "diff --git a/src/common/browser.js b/src/common/browser.js @@ -111,7 +111,37 @@ if (!global.browser?.runtime?.sendMessage) {\nwebRequest: true,\n};\nglobal.browser = wrapAPIs(chrome, meta);\n+} else if (process.env.DEBUG && !global.chrome.app) {\n+ let counter = 0;\n+ const { runtime } = browser;\n+ const { sendMessage, onMessage } = runtime;\n+ const log = (type, args, id, isResponse) => console.info(\n+ `%c${type}Message#%d${isResponse ? ' response' : ''}`,\n+ isResponse ? '' : 'color:yellow',\n+ id,\n+ ...args,\n+ );\n+ runtime.sendMessage = (...args) => {\n+ counter += 1;\n+ const id = counter;\n+ log('send', args, id);\n+ const promise = runtime::sendMessage(...args);\n+ promise.then(data => log('send', [data], id, true), console.warn);\n+ return promise;\n+ };\n+ const { addListener } = onMessage;\n+ onMessage.addListener = (listener) => onMessage::addListener((msg, sender) => {\n+ counter += 1;\n+ const id = counter;\n+ const { frameId, tab, url } = sender;\n+ log('on', [msg, { frameId, tab, url }], id);\n+ const result = listener(msg, sender);\n+ (typeof result?.then === 'function' ? result : Promise.resolve(result))\n+ .then(data => log('on', [data], id, true), console.warn);\n+ return result;\n+ });\n}\n+\n// prefetch the options while the current extension page loads\n/* global browser */\nif (browser.tabs) {\n",
        "chatgpt_rag": "feat: add Dumper import and debug area check in release_initializer.js\n\nExplanation:\n- Imported Dumper module in release_initializer.js\n- Added check for debug_area before creating Dumper instance\n- Refactored variable declarations to use const and let\n- Changed event listener to wait for DOMContentLoaded before running user's program"
    },
    {
        "msg": "refactor: :recycle: update author component",
        "diff": "diff --git a/src/lib/author.svelte b/src/lib/author.svelte <script>\n+ import { onMount } from 'svelte'\n+\nexport let author\n+ const getUserDetails = async () => {\n+ const res = await fetch(`/${author}.json`)\n+ return await res.json()\n+ }\n+ let data = {}\n+ onMount(async () => {\n+ data = await getUserDetails()\n+ })\n</script>\n-<small>{author}</small>\n+<p class=\"text-sm\">Contribution by:</p>\n+<article\n+ class=\"not-prose border border-primary shadow-lg p-4 rounded-2xl\"\n+>\n+ <div class=\"flex space-x-5 justify-evenly\">\n+ <a href={data.html_url} target=\"_blank\" rel=\"noopener\">\n+ <img\n+ class=\"w-20 h-20 p-0 m-0 rounded-full\"\n+ src={data.avatar_url}\n+ alt={data.name}\n+ />\n+ </a>\n+ <a href={data.html_url} target=\"_blank\" rel=\"noopener\">\n+ <div class=\"text-sm\">\n+ <p class=\"text-lg font-bold tracking-widest\">{data.name}</p>\n+ <p>{data.bio}</p>\n+ </div>\n+ </a>\n+ </div>\n+</article>\n",
        "date": "08.04.2022 18:46:58",
        "repo": "spences10/cheat-sheets",
        "type": "refactor",
        "sim_msg": "chore: Missing react key",
        "sim_diff": "diff --git a/src/components/pages/blog/byline.js b/src/components/pages/blog/byline.js @@ -38,10 +38,10 @@ const Author = ({ author }) => {\nconst AuthorSpacer = ({ index, length }) => {\nif (index === 0 && length === 2) {\n- return <> & </> // first author, only two items in the list\n+ return <> &amp; </> // first author, only two items in the list\n}\nif (index === length - 2) {\n- return <>, & </> // second to last author\n+ return <>, &amp; </> // second to last author\n}\nif (index === length - 1) {\nreturn null // last author\n@@ -70,6 +70,7 @@ const Byline = ({ authors, date, smallmargin = false }) => {\n<div className={bylineStyles.headshotContainer}>\n{authorsWithHeadshots.map(author => (\n<img\n+ key={author.headshot.resize.src}\nsrc={author.headshot.resize.src}\nalt={author.headshot.file.fileName}\n/>\n",
        "chatgpt_rag": "chore: Add missing react key for author data retrieval in author.svelte file"
    },
    {
        "msg": "refactor(index): headless cms -> api-first cms",
        "diff": "diff --git a/examples/pages/template/index.tpl b/examples/pages/template/index.tpl <img width=\"35px\" src=\"~examples/assets/images/tipe.svg\" alt=\"tipe.io\">\n<div>\n<p>Sponsored by Tipe.io</p>\n- <p>Next Generation Headless CMS</p>\n+ <p>Next Generation API-first CMS</p>\n</div>\n</a>\n<div class=\"cards\">\n",
        "date": "18.12.2017 11:52:44",
        "repo": "hug-sun/element3",
        "type": "refactor",
        "sim_msg": "feat(examples): add versions hint",
        "sim_diff": "diff --git a/website/src/pages/examples/index.jsx b/website/src/pages/examples/index.jsx @@ -24,6 +24,11 @@ function ExamplesPage() {\nExamples Repository\n</a>\n</div>\n+ <div className=\"margin-top--sm\">\n+ <a href=\"/versions\">\n+ See also versions list\n+ </a>\n+ </div>\n</div>\n<section className=\"container margin-top--lg\">\n<div className=\"margin-top--lg\">\n",
        "chatgpt_rag": "fix(template): update Tipe.io description"
    },
    {
        "msg": "refactor(compiler): Avoid magic number",
        "diff": "diff --git a/src/system/compiler.js b/src/system/compiler.js @@ -347,15 +347,15 @@ BiwaScheme.Compiler = BiwaScheme.Class.create({\ncase BiwaScheme.Sym(\"call/cc\"):\nvar x=x.second();\n+ var arity_of_arg = 1; // Always 1. (lambda (cc) ...)\nvar c = [\"conti\",\n(this.is_tail(next) ? (e[0].size() + 1) : 0), //number of args for outer lambda\n[\"argument\",\n- [\"constant\", 1,\n+ [\"constant\", arity_of_arg,\n[\"argument\",\nthis.compile(x, e, s,f,\n- (this.is_tail(next) ? [\"shift\", 1, [\"tco_hinted_apply\"]]\n+ (this.is_tail(next) ? [\"shift\", arity_of_arg, [\"tco_hinted_apply\"]]\n: [\"apply\"]))]]]];\n- //note: proc for call/cc takes 1 argument (= [\"apply\", 1])\n// Do not push stack frame when call/cc is in a tail context\nreturn this.is_tail(next) ? c : [\"frame\", c, next];\n",
        "date": "03.01.2020 19:29:53",
        "repo": "biwascheme/biwascheme",
        "type": "refactor",
        "sim_msg": "feat: expose ast types and traverse",
        "sim_diff": "diff --git a/src/index.js b/src/index.js @@ -8,6 +8,8 @@ const { createCompiledModule, Module } = require(\"./compiler/compile/module\");\nconst { Memory } = require(\"./interpreter/runtime/values/memory\");\nconst { Table } = require(\"./interpreter/runtime/values/table\");\nconst { checkEndianness } = require(\"./check-endianness\");\n+const { traverse } = require(\"./compiler/AST/traverse\");\n+const t = require(\"./compiler/AST/index\");\nconst _debug = {\nparseWATF(content: string, cb: (ast: Program) => void) {\n@@ -24,7 +26,10 @@ const _debug = {\nconst ast = parseBinary(content);\ncb(ast);\n- }\n+ },\n+\n+ traverse,\n+ t\n};\nconst WebAssembly = {\n",
        "chatgpt_rag": "refactor: update arity_of_arg variable to be more descriptive and use it consistently throughout the code"
    },
    {
        "msg": "refactor: remove unnecessary ui prop def",
        "diff": "diff --git a/packages/veui-theme-one/components/AlertBox.js b/packages/veui-theme-one/components/AlertBox.js @@ -8,10 +8,5 @@ config.defaults({\nsuccess: 'check-circle-o-large',\ninfo: 'info-circle-o-large',\nerror: 'cross-circle-o-large'\n- },\n- ui: {\n- type: {\n- values: ['success', 'error', 'info']\n- }\n}\n}, 'alertbox')\n",
        "date": "28.05.2018 11:59:29",
        "repo": "ecomfe/veui",
        "type": "refactor",
        "sim_msg": "docs(colors): color var names",
        "sim_diff": "diff --git a/package/src/components/InlineAlert/v1/InlineAlert.md b/package/src/components/InlineAlert/v1/InlineAlert.md @@ -79,7 +79,7 @@ All alerts:\nAssume that any theme prop that does not begin with \"rui\" is within `rui_components`. See [Theming Components](./#!/Theming%20Components).\n| Theme Prop | Default | Description |\n-| ----------------------------------------- | ---------------------------- | ------------------------------------------- |\n+| ----------------------------------------- | ---------------------- | ------------------------------------------- |\n| `InlineAlert.borderRadius` | 2px | Alert border radius size |\n| `InlineAlert.borderStyle` | solid | Alert border style |\n| `InlineAlert.borderWidth` | 2px | Alert border width size |\n@@ -88,17 +88,17 @@ Assume that any theme prop that does not begin with \"rui\" is within `rui_compone\n| `InlineAlert.paddingRight` | 15px | Alert padding right |\n| `InlineAlert.paddingTop` | 15px | Alert padding top |\n| `InlineAlert.color_error` | red600 | Message color for error alert type |\n-| `InlineAlert.backgroundColor_error` | red100, 50% opacity | Background color for error alert type |\n-| `InlineAlert.borderColor_error` | red, 25% opacity | Border color for error alert type |\n+| `InlineAlert.backgroundColor_error` | redBackground | Background color for error alert type |\n+| `InlineAlert.borderColor_error` | redBorder | Border color for error alert type |\n| `InlineAlert.color_information` | reactionBlue600 | Message color for information alert type |\n-| `InlineAlert.backgroundColor_information` | reactionBlue100, 50% opacity | Background color for information alert type |\n-| `InlineAlert.borderColor_information` | reactionBlue, 25% opacity | Border color for information alert type |\n+| `InlineAlert.backgroundColor_information` | reactionBlueBackground | Background color for information alert type |\n+| `InlineAlert.borderColor_information` | reactionBlueBorder | Border color for information alert type |\n| `InlineAlert.color_success` | forestGreen600 | Message color for success alert type |\n-| `InlineAlert.backgroundColor_success` | forestGreen100, 50% opacity | Background color for success alert type |\n-| `InlineAlert.borderColor_success` | forestGreen, 25% opacity | Border color for success alert type |\n+| `InlineAlert.backgroundColor_success` | forestGreenBackground | Background color for success alert type |\n+| `InlineAlert.borderColor_success` | forestGreenBorder | Border color for success alert type |\n| `InlineAlert.color_warning` | yellow600 | Message color for warning alert type |\n-| `InlineAlert.backgroundColor_warning` | yellow100, 50% opacity | Background color for warning alert type |\n-| `InlineAlert.borderColor_warning` | yellow500, 25% opacity | Border color for warning alert type |\n+| `InlineAlert.backgroundColor_warning` | yellowBackground | Background color for warning alert type |\n+| `InlineAlert.borderColor_warning` | yellow500Border | Border color for warning alert type |\n#### Typography\n",
        "chatgpt_rag": "refactor(ui): remove redundant UI type values in AlertBox component configuration"
    },
    {
        "msg": "refactor: to optimize the createComponent method logic",
        "diff": "diff --git a/test/unit/tests/use/component.test.js b/test/unit/tests/use/component.test.js @@ -5,6 +5,7 @@ describe('component', () => {\nit('should get component instance', () => {\nconst $cf = jest.fn()\nconst Comp = {\n+ template: '<div>foo</div>',\nsetup() {\nreturn {\n$cf\n@@ -13,9 +14,10 @@ describe('component', () => {\n}\nconst instance = createComponent(Comp)\n- instance.$cf()\n+ instance.ctx.$cf()\nexpect($cf).toBeCalled()\n+ expect(instance.ctx.$el.innerHTML).toBe('foo')\n})\n})\n})\n",
        "date": "01.09.2020 14:44:29",
        "repo": "hug-sun/element3",
        "type": "refactor",
        "sim_msg": "test: add s-is test cases",
        "sim_diff": "diff --git a/test/component.spec.js b/test/component.spec.js @@ -759,7 +759,7 @@ describe(\"Component\", function () {\nit(\"components use s-is\", function () {\nvar Label = san.defineComponent({\ntemplate: '<span title=\"{{text}}\">{{text}}</span>',\n- initData() {\n+ initData: function () {\nreturn {\ntext: 'erik'\n}\n@@ -770,7 +770,7 @@ describe(\"Component\", function () {\ncomponents: {\n'x-label': Label,\n},\n- initData() {\n+ initData: function () {\nreturn {\ncmpt: 'x-label'\n}\n@@ -795,7 +795,7 @@ describe(\"Component\", function () {\nit(\"s-is value update\", function (done) {\nvar Label = san.defineComponent({\ntemplate: '<span title=\"{{text}}\" >{{text}}</span>',\n- initData() {\n+ initData: function () {\nreturn {\ntext: 'erik'\n}\n@@ -804,7 +804,7 @@ describe(\"Component\", function () {\nvar H2 = san.defineComponent({\ntemplate: '<h2>{{text}}.baidu</h2>',\n- initData() {\n+ initData: function () {\nreturn {\ntext: 'erik'\n}\n@@ -816,7 +816,7 @@ describe(\"Component\", function () {\n'x-label': Label,\n'x-h2': H2\n},\n- initData() {\n+ initData: function () {\nreturn {\ncmpt: 'x-label'\n}\n@@ -846,10 +846,9 @@ describe(\"Component\", function () {\n});\nit(\"s-is html buildin tag\", function (done) {\n-\nvar Label = san.defineComponent({\ntemplate: '<span title=\"{{text}}\" >{{text}}</span>',\n- initData() {\n+ initData: function () {\nreturn {\ntext: 'erik'\n}\n@@ -860,9 +859,9 @@ describe(\"Component\", function () {\ncomponents: {\n'x-label': Label\n},\n- initData() {\n+ initData: function () {\nreturn {\n- cmpt: 'div'\n+ cmpt: 'h1'\n}\n}\n});\n@@ -875,23 +874,20 @@ describe(\"Component\", function () {\ndocument.body.appendChild(wrap);\nmyComponent.attach(wrap);\n- var comp = wrap.querySelector('#comp');\n- expect(comp.tagName.toLowerCase()).toBe('div');\n+ var comp = wrap.getElementsByTagName('div')[0];\n+ expect(comp.innerHTML).toBe('<h1 id=\"comp\"></h1>');\nmyComponent.data.set('cmpt', 'article');\nsan.nextTick(function () {\n- var article = wrap.querySelector('#comp');\n- expect(article.tagName.toLowerCase()).toBe('article');\n+ expect(comp.innerHTML).toBe('<article id=\"comp\"></article>');\nmyComponent.data.set('cmpt', '');\nsan.nextTick(function () {\n- var span = wrap.querySelector('#comp');\n- expect(span.tagName.toLowerCase()).toBe('span');\n+ expect(comp.innerHTML).toBe('<span id=\"comp\"></span>');\nmyComponent.data.set('cmpt', 'x-label');\nsan.nextTick(function () {\n- var label = wrap.querySelector('#comp');\n- expect(label.innerHTML).toBe('erik');\n+ expect(comp.innerHTML).toBe('<span title=\"erik\" id=\"comp\">erik</span>');\nmyComponent.dispose();\ndocument.body.removeChild(wrap);\n@@ -5527,7 +5523,7 @@ describe(\"Component\", function () {\n});\nvar Parent = san.defineComponent({\n- template: '<test s-is=\"cmpt\"></test>',\n+ template: '<test s-is=\"cmpt\">content</test>',\ncomponents: {\n'x-child-a': ChildA,\n'x-child-b': ChildB\n@@ -5561,6 +5557,50 @@ describe(\"Component\", function () {\nexpect(children.length).toBe(1);\nexpect(children[0].innerHTML).toBe('varsha');\n+ myComponent.data.set('cmpt', 'h6');\n+ myComponent.nextTick(function () {\n+ var children = myComponent.el.getElementsByTagName('H6');\n+ expect(children.length).toBe(1);\n+ expect(children[0].innerHTML).toBe('content');\n+\n+ myComponent.dispose();\n+ document.body.removeChild(wrap);\n+ done();\n+ });\n+ });\n+ });\n+\n+ it(\"dynamic s-is on fragment\", function (done) {\n+ var Child = san.defineComponent({\n+ template: '<h2><slot>default</slot></h2>'\n+ });\n+\n+ var MyComponent = san.defineComponent({\n+ template: '<div><x-child s-is=\"cmpt\">cxtom</x-child></div>',\n+ components: {\n+ 'x-child': Child\n+ }\n+ });\n+\n+ var myComponent = new MyComponent({\n+ data: {\n+ cmpt: ''\n+ }\n+ });\n+\n+ var wrap = document.createElement('div');\n+ document.body.appendChild(wrap);\n+ myComponent.attach(wrap);\n+\n+ var children = myComponent.el.getElementsByTagName('H2');\n+ expect(children.length).toBe(1);\n+ expect(children[0].innerHTML).toContain('cxtom');\n+\n+ myComponent.data.set('cmpt', 'fragment');\n+ myComponent.nextTick(function () {\n+ expect(myComponent.el.innerHTML).toContain('cxtom');\n+ expect(myComponent.el.innerHTML).not.toContain('fragment');\n+\nmyComponent.dispose();\ndocument.body.removeChild(wrap);\ndone();\n",
        "chatgpt_rag": "test: add template and ctx test cases for component creation"
    },
    {
        "msg": "refactor: change notes to note",
        "diff": "diff --git a/src/features/tooltip/Tooltip.js b/src/features/tooltip/Tooltip.js import React from \"react\";\n-import { addNote, removeNote, getNotesIndexedByHash } from 'domain/notes';\n+\n//Styling\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n@@ -10,6 +10,7 @@ import tooltipStyle from './Tooltip.module.css';\n///Redux\nimport { connect } from \"react-redux\";\nimport { getPosition, getSelectedDatum } from 'domain/controls';\n+import { addNote, removeNote, getNotesIndexedByHash } from 'domain/notes';\nclass TooltipControls extends React.Component {\nconstructor(props){\n@@ -191,7 +192,7 @@ class TooltipControls extends React.Component {\n}\n{!this.props.data.fieldValue &&\n<p className={appStyle.accordionHeader} onClick={this.toggleShowNote}>\n- Notes {!showNote && <FontAwesomeIcon icon={faAngleDoubleDown} />}{showNote && <FontAwesomeIcon onClick={this.toggleShowNote} icon={faAngleDoubleUp} />}\n+ Note {!showNote && <FontAwesomeIcon icon={faAngleDoubleDown} />}{showNote && <FontAwesomeIcon onClick={this.toggleShowNote} icon={faAngleDoubleUp} />}\n</p>\n}\n",
        "date": "02.08.2019 15:38:42",
        "repo": "iqtlabs/crviz",
        "type": "refactor",
        "sim_msg": "feat(Tooltip): forward ref from Tooltip.Trigger",
        "sim_diff": "diff --git a/components/system/components/fragments/Tooltip.js b/components/system/components/fragments/Tooltip.js @@ -2,7 +2,7 @@ import * as React from \"react\";\nimport { css } from \"@emotion/react\";\nimport { ModalPortal } from \"~/components/core/ModalPortal\";\n-import { useEscapeKey, useEventListener } from \"~/common/hooks\";\n+import { useCombinedRefs, useEscapeKey, useEventListener } from \"~/common/hooks\";\nimport { Boundary } from \"~/components/system/components/fragments/Boundary\";\nimport { motion } from \"framer-motion\";\n@@ -31,10 +31,12 @@ export function Root({ children, vertical = \"below\", horizontal = \"right\" }) {\n* Trigger\n* -----------------------------------------------------------------------------------------------*/\n-export function Trigger({ children, ...props }) {\n+export const Trigger = React.forwardRef(({ children, ...props }, forwardedRef) => {\nconst { setTriggerRef, showTooltip, hideTooltip } = useTooltipContext();\n- const ref = React.useRef();\n+ const innerRef = React.useRef();\n+ const ref = useCombinedRefs(innerRef, children.ref, forwardedRef);\n+\nReact.useEffect(() => {\nif (ref.current) setTriggerRef(ref);\n}, []);\n@@ -50,8 +52,7 @@ export function Trigger({ children, ...props }) {\n...props,\nref,\n});\n-}\n-\n+});\n/* -------------------------------------------------------------------------------------------------\n* Content\n* -----------------------------------------------------------------------------------------------*/\n",
        "chatgpt_rag": "fix(Tooltip): Fix typo in TooltipControls component - change 'Notes' to 'Note' in conditional rendering"
    },
    {
        "msg": "refactor(PreactConfig): Keep ESLint happy",
        "diff": "diff --git a/src/lib/webpack-config.js b/src/lib/webpack-config.js @@ -24,7 +24,6 @@ import ProgressBarPlugin from 'progress-bar-webpack-plugin';\nimport CopyWebpackPlugin from 'copy-webpack-plugin';\nimport ReplacePlugin from 'replace-bundle-webpack-plugin';\nimport SWPrecacheWebpackPlugin from 'sw-precache-webpack-plugin';\n-import createBabelConfig from './babel-config';\nimport prerender from './prerender';\nimport PushManifestPlugin from './push-manifest';\n",
        "date": "29.05.2017 15:45:31",
        "repo": "preactjs/preact-cli",
        "type": "refactor",
        "sim_msg": "perf(webpack): using TerserPlugin 2 for js minimizer (extract comments)",
        "sim_diff": "diff --git a/src/webpack.config.js b/src/webpack.config.js @@ -9,6 +9,7 @@ const MiniCssExtractPlugin = require('mini-css-extract-plugin')\nconst WebpackPwaManifest = require('webpack-pwa-manifest')\nconst WorkboxPlugin = require('workbox-webpack-plugin')\nconst CopyPlugin = require('copy-webpack-plugin')\n+const TerserPlugin = require('terser-webpack-plugin')\nconst {\ndevMode,\n@@ -89,6 +90,9 @@ const config = {\nchunkFilename: '[chunkhash].js'\n},\n+ optimization: {\n+ minimizer: [new TerserPlugin()]\n+ },\nplugins: [\n// extract CSS to file\nnew MiniCssExtractPlugin({\n",
        "chatgpt_rag": "refactor(webpack): removed unused import createBabelConfig and added prerender functionality"
    },
    {
        "msg": "refactor: change px to rem in footer, header, and sidebar; reorder transition values in sidebar",
        "diff": "diff --git a/scss/_variables.scss b/scss/_variables.scss @@ -1365,7 +1365,7 @@ $list-group-variants: (\n// Header\n// scss-docs-start header-variables\n-$header-min-height: 56px !default;\n+$header-min-height: 4rem !default;\n$header-padding-y: $spacer / 2 !default;\n$header-padding-x: $spacer / 2 !default;\n$header-brand-font-size: $font-size-lg !default;\n@@ -1405,7 +1405,7 @@ $header-divider-border-color: $header-border-color !default;\n// Subheader\n// scss-docs-start subheader-variables\n-$subheader-min-height: 48px !default;\n+$subheader-min-height: 3rem !default;\n$subheader-padding-y: $spacer / 2 !default;\n$subheader-padding-x: $spacer !default;\n$subheader-border-color: $border-color !default;\n@@ -1491,11 +1491,11 @@ $carousel-dark-control-icon-filter: invert(1) grayscale(100) !default;\n// scss-docs-end carousel-variables\n// scss-docs-start sidebar-variables\n-$sidebar-width: 256px !default;\n+$sidebar-width: 16rem !default;\n$sidebar-widths: (\n- sm: 192px,\n- lg: 320px,\n- xl: 384px\n+ sm: 12rem,\n+ lg: 20rem,\n+ xl: 24rem\n) !default;\n$sidebar-padding-y: 0 !default;\n$sidebar-padding-x: 0 !default;\n@@ -1503,7 +1503,7 @@ $sidebar-color: $high-emphasis-light !default;\n$sidebar-bg: $gray-base !default;\n$sidebar-border-width: 0 !default;\n$sidebar-border-color: transparent !default;\n-$sidebar-transition: box-shadow .075s, transform .15s, margin-left .15s, margin-right .15s, width .15s, z-index 0s ease .15s !default;\n+$sidebar-transition: margin-left .15s, margin-right .15s, box-shadow .075s, transform .15s, width .15s, z-index 0s ease .15s !default;\n$sidebar-reliant-transition: margin .15s !default;\n$sidebar-brand-height: 56px !default;\n@@ -1550,6 +1550,7 @@ $sidebar-nav-icon-font-size: $sidebar-nav-icon-height !default;\n$sidebar-nav-group-bg: rgba(0, 0, 0, .2) !default;\n$sidebar-nav-group-transition: background .15s ease-in-out !default;\n$sidebar-nav-group-items-transition: height .15s ease !default;\n+$sidebar-nav-group-toggle-show-color: $sidebar-nav-link-color !default;\n$sidebar-nav-group-indicator-color: $medium-emphasis-light !default;\n$sidebar-nav-group-indicator: str-replace(url(\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 11 14'%3E%3Cpath fill='#{$sidebar-nav-group-indicator-color}' d='M9.148 2.352l-4.148 4.148 4.148 4.148q0.148 0.148 0.148 0.352t-0.148 0.352l-1.297 1.297q-0.148 0.148-0.352 0.148t-0.352-0.148l-5.797-5.797q-0.148-0.148-0.148-0.352t0.148-0.352l5.797-5.797q0.148-0.148 0.352-0.148t0.352 0.148l1.297 1.297q0.148 0.148 0.148 0.352t-0.148 0.352z'/%3E%3C/svg%3E\"), \"#\", \"%23\") !default;\n@@ -1575,7 +1576,7 @@ $sidebar-toggler-hover-indicator: str-replace(url(\"data:image/svg+xml;c\n// Footer\n// scss-docs-start footer-variables\n-$footer-min-height: 50px !default;\n+$footer-min-height: 3rem !default;\n$footer-padding-y: $spacer / 2 !default;\n$footer-padding-x: $spacer !default;\n$footer-bg: $gray-100 !default;\n",
        "date": "12.01.2021 17:36:27",
        "repo": "coreui/coreui",
        "type": "refactor",
        "sim_msg": "refactor: headings with font vars",
        "sim_diff": "diff --git a/packages/shared/styles/variables/_typography.scss b/packages/shared/styles/variables/_typography.scss // heading font-size\n--h1-font-size: 1.5rem; //24px\n--h2-font-size: 1.5rem; //24px\n- --h3-font-size: 1.125rem; //18px\n- --h4-font-size: 1.125rem; //18px\n- --h5-font-size: 1rem; //16px\n- --h6-font-size: 1rem; //16px\n+ --h3-font-size: var(--font-size--lg); //18px\n+ --h4-font-size: var(--font-size--lg); //18px\n+ --h5-font-size: var(--font-size--base); //16px\n+ --h6-font-size: var(--font-size--base); //16px\n@include for-desktop {\n--h1-font-size: 2.625rem; //42px\n--h2-font-size: 2.25rem; //36px\n--h3-font-size: 1.625rem; //26px\n--h4-font-size: 1.25rem; //20px\n- --h5-font-size: 1rem; //16px\n- --h6-font-size: 0.875rem; //14px\n+ --h5-font-size: var(--font-size--base); //16px\n+ --h6-font-size: var(--font-size--sm); //14px\n}\n// line-height\n--line-height--xs: 16px;\n--line-height--md: 26px;\n--line-height--lg: 32px;\n--line-height--xl: 42px;\n- --line-height--xxl: 48px;\n+ --line-height--2xl: 48px;\n}\n",
        "chatgpt_rag": "refactor: update header, subheader, sidebar, and footer variables with new values"
    },
    {
        "msg": "refactor: remove `thead` `border-bottom-color`",
        "diff": "diff --git a/scss/_tables.scss b/scss/_tables.scss // Highlight border color between thead, tbody and tfoot.\n> :not(:last-child) > :last-child > * {\n- border-bottom-color: $table-group-separator-color;\n+ // border-bottom-color: $table-group-separator-color;\n}\n}\n",
        "date": "04.01.2021 23:29:05",
        "repo": "coreui/coreui",
        "type": "refactor",
        "sim_msg": "fix(table): added selectedable table option",
        "sim_diff": "diff --git a/scss/os/_utils.scss b/scss/os/_utils.scss }\n}\n- &.u-table-striped {\n+ .u-table__selectable {\ncursor: pointer;\n+ }\n+ &.u-table-striped {\n.u-table__row:nth-child(odd) {\nbackground-color: $table-accent-bg;\n}\n",
        "chatgpt_rag": "style(table): commented out border-bottom-color for table group separator"
    },
    {
        "msg": "refactor: use vue3 to refactor tag component",
        "diff": "diff --git a/packages/tag/src/tag.vue b/packages/tag/src/tag.vue +\n<script>\n+import { h, computed, getCurrentInstance, Transition } from \"vue\";\nexport default {\n- name: 'ElTag',\n+ name: \"ElTag\",\nprops: {\ntext: String,\nclosable: Boolean,\nsize: String,\neffect: {\ntype: String,\n- default: 'light',\n+ default: \"light\",\nvalidator(val) {\n- return ['dark', 'light', 'plain'].indexOf(val) !== -1;\n- }\n- }\n- },\n- methods: {\n- handleClose(event) {\n- event.stopPropagation();\n- this.$emit('close', event);\n+ return [\"dark\", \"light\", \"plain\"].indexOf(val) !== -1;\n},\n- handleClick(event) {\n- this.$emit('click', event);\n- }\n},\n- computed: {\n- tagSize() {\n- return this.size || (this.$ELEMENT || {}).size;\n- }\n},\n- render(h) {\n- const { type, tagSize, hit, effect } = this;\n+ setup(props, { emit, slots }) {\n+ const {\n+ type,\n+ hit,\n+ effect,\n+ color,\n+ closable,\n+ disableTransitions,\n+ size,\n+ } = props;\n+\n+ const tagSize = computed(() => {\n+ return size || (getCurrentInstance().proxy.$ELEMENT || {}).size;\n+ });\n+ const handleClose = (event) => {\n+ event.stopPropagation();\n+ emit(\"close\", event);\n+ };\n+ const handleClick = (event) => {\n+ emit(\"click\", event);\n+ };\n+\nconst classes = [\n- 'el-tag',\n- type ? `el-tag--${type}` : '',\n- tagSize ? `el-tag--${tagSize}` : '',\n- effect ? `el-tag--${effect}` : '',\n- hit && 'is-hit'\n+ \"el-tag\",\n+ type ? `el-tag--${type}` : \"\",\n+ tagSize.value ? `el-tag--${tagSize.value}` : \"\",\n+ effect ? `el-tag--${effect}` : \"\",\n+ hit && \"is-hit\",\n];\nconst tagEl = (\n<span\nclass={classes}\n- style={{ backgroundColor: this.color }}\n- on-click={ this.handleClick }>\n- { this.$slots.default }\n- {\n- this.closable && <i class=\"el-tag__close el-icon-close\" on-click={ this.handleClose }></i>\n- }\n+ style={{ backgroundColor: color }}\n+ on-click={handleClick}\n+ >\n+ {slots.default && slots.default()}\n+ {closable && (\n+ <i class=\"el-tag__close el-icon-close\" on-click={handleClose}></i>\n+ )}\n</span>\n);\n-\n- return this.disableTransitions ? tagEl : <transition name=\"el-zoom-in-center\">{ tagEl }</transition>;\n- }\n+ return () =>\n+ disableTransitions ? (\n+ tagEl\n+ ) : (\n+ <Transition name=\"el-zoom-in-center\">{tagEl}</Transition>\n+ );\n+ },\n};\n</script>\n",
        "date": "05.08.2020 22:03:32",
        "repo": "hug-sun/element3",
        "type": "refactor",
        "sim_msg": "refactor: Collapse use setup",
        "sim_diff": "diff --git a/src/components/collapse/Collapse.vue b/src/components/collapse/Collapse.vue -<script lang=\"jsx\">\n+<script>\nimport { addClass, removeClass } from '../../utils/dom.utils';\n+import { onMounted, ref, watchEffect, defineComponent, h } from 'vue';\n+export default defineComponent({\n+ props: {\n+ tag: { type: String, default: 'div' },\n+ modelValue: { type: Boolean, default: false },\n+ transition: { type: Number, default: 350 },\n+ },\n+ emits: ['show', 'shown', 'hide', 'hidden'],\n+ setup(props, { emit, slots }) {\nconst COLLAPSE = 'collapse';\nconst IN = 'in';\nconst COLLAPSING = 'collapsing';\n+ let timeoutId = 0;\n+ const element = ref(null);\n-export default {\n- props: {\n- tag: {\n- type: String,\n- default: 'div',\n- },\n- modelValue: {\n- type: Boolean,\n- default: false,\n- },\n- transition: {\n- type: Number,\n- default: 350,\n- },\n- },\n- emits: ['show', 'shown', 'hide', 'hidden'],\n- data() {\n- return {\n- timeoutId: 0,\n- };\n- },\n- watch: {\n- modelValue(show) {\n- this.toggle(show);\n- },\n- },\n- mounted() {\n- const el = this.$el;\n- addClass(el, COLLAPSE);\n- if (this.modelValue) {\n- addClass(el, IN);\n+ function toggle(show) {\n+ clearTimeout(timeoutId);\n+ const el = element.value;\n+ if (!el) {\n+ return;\n}\n- },\n- methods: {\n- toggle(show) {\n- clearTimeout(this.timeoutId);\n- const el = this.$el;\nif (show) {\n- this.$emit('show');\n+ emit('show');\nremoveClass(el, COLLAPSE);\nel.style.height = 'auto';\nconst height = window.getComputedStyle(el).height;\n@@ -51,35 +31,44 @@ export default {\naddClass(el, COLLAPSING);\nel.offsetHeight; // force repaint\nel.style.height = height;\n- this.timeoutId = setTimeout(() => {\n+ timeoutId = setTimeout(() => {\nremoveClass(el, COLLAPSING);\naddClass(el, COLLAPSE);\naddClass(el, IN);\nel.style.height = null;\n- this.timeoutId = 0;\n- this.$emit('shown');\n- }, this.transition);\n+ timeoutId = 0;\n+ emit('shown');\n+ }, props.transition);\n} else {\n- this.$emit('hide');\n+ emit('hide');\nel.style.height = window.getComputedStyle(el).height;\nremoveClass(el, IN);\nremoveClass(el, COLLAPSE);\nel.offsetHeight;\nel.style.height = null;\naddClass(el, COLLAPSING);\n- this.timeoutId = setTimeout(() => {\n+ timeoutId = setTimeout(() => {\naddClass(el, COLLAPSE);\nremoveClass(el, COLLAPSING);\nel.style.height = null;\n- this.timeoutId = 0;\n- this.$emit('hidden');\n- }, this.transition);\n+ timeoutId = 0;\n+ emit('hidden');\n+ }, props.transition);\n}\n+ }\n+\n+ watchEffect(() => {\n+ toggle(props.modelValue);\n+ });\n+\n+ onMounted(() => {\n+ addClass(element.value, COLLAPSE);\n+ if (props.modelValue) {\n+ addClass(element.value, IN);\n+ }\n+ });\n+\n+ return () => h(props.tag, { ref: element }, slots.default?.());\n},\n- },\n- render() {\n- const Tag = this.tag;\n- return <Tag>{this.$slots.default?.()}</Tag>;\n- },\n-};\n+});\n</script>\n",
        "chatgpt_rag": "refactor: Tag component using setup and computed properties"
    },
    {
        "msg": "refactor: rename loadData to load for cascader",
        "diff": "diff --git a/packages/veui/src/components/Cascader/Cascader.vue b/packages/veui/src/components/Cascader/Cascader.vue :select-mode=\"selectMode\"\n:column-width=\"keyword ? null : columnWidth\"\n:expanded=\"realExpanded\"\n- :load-data=\"loadData && !keyword ? loadAndSaveData : null\"\n+ :load=\"load && !keyword ? loadAndSaveData : null\"\n@update:expanded=\"handlePaneUpdateExpanded\"\n@select=\"handlePaneSelect\"\n@keydown.native=\"!searchable && handleCascaderKeydown($event)\"\n@@ -240,7 +240,7 @@ export default {\nreturn ['complete', 'simple'].indexOf(val) >= 0\n}\n},\n- loadData: Function,\n+ load: Function,\ninline: Boolean,\nmax: Number\n},\n@@ -405,9 +405,12 @@ export default {\n}\n},\nmethods: {\n- loadAndSaveData (option, trigger) {\n- return Promise.resolve(this.loadData(option, trigger)).then((loaded) => {\n- this.$set(this.loadedData, getKey(option), loaded)\n+ loadAndSaveData (context) {\n+ return Promise.resolve(this.load(context)).then((loaded) => {\n+ if (loaded) {\n+ this.$set(this.loadedData, getKey(context.parent), loaded)\n+ }\n+ return loaded\n})\n},\nhandleCascaderKeydown (e) {\n",
        "date": "14.06.2022 19:48:36",
        "repo": "ecomfe/veui",
        "type": "refactor",
        "sim_msg": "fix(QSelect): Possible infinite loop on search handling",
        "sim_diff": "diff --git a/ui/src/components/select/QSelect.js b/ui/src/components/select/QSelect.js @@ -540,7 +540,7 @@ export default Vue.extend({\nif (keyRepeat === true || searchRe.test(this.__getOptionLabel(this.options[index])) !== true) {\ndo {\n- index = normalizeToInterval(index + 1, 0, optionsLength - 1)\n+ index = normalizeToInterval(index + 1, -1, optionsLength - 1)\n}\nwhile (index !== this.optionIndex && (\nthis.__isDisabled(this.options[index]) === true ||\n",
        "chatgpt_rag": "refactor(Cascader): Rename 'loadData' prop to 'load' for consistency\n- Renamed the 'loadData' prop to 'load' in the Cascader component for consistency with other props and improved readability. Updated the method 'loadAndSaveData' to accept a single context parameter and handle data loading and saving accordingly."
    },
    {
        "msg": "refactor: parseBlocks",
        "diff": "diff --git a/frontend/leaderboard/src/Types.re b/frontend/leaderboard/src/Types.re @@ -184,7 +184,6 @@ module Block = {\neach UserCommand and InternalCommand to it's associated block.\n*/\nlet parseBlocks = blocks => {\n- let blocks =\nBelt.Map.Int.(\nblocks\n|> Array.fold_left(\n@@ -234,8 +233,6 @@ module Block = {\n)\n|> valuesToArray\n);\n-\n- blocks;\n};\n};\n",
        "date": "21.12.2020 20:01:34",
        "repo": "minaprotocol/mina",
        "type": "refactor",
        "sim_msg": "fix: give points",
        "sim_diff": "diff --git a/src/controllers/CommandController/index.js b/src/controllers/CommandController/index.js @@ -189,7 +189,8 @@ class CommandController extends CommandUtils {\nconst regex = /^!darpontos\\s(([@][\\w\\d-]+\\s?)+\\s?)\\s(\\d{1,5})\\s\"(.*?)\"$/g\n- const [, userList, , points, reason] = regex.exec(content)\n+ const [, userList, , stringPoints, reason] = regex.exec(content)\n+ const points = parseInt(stringPoints)\nconst usernames = userList\n.trim()\n",
        "chatgpt_rag": "refactor: remove redundant assignment in parseBlocks function"
    },
    {
        "msg": "refactor(SimilarityGraph): empty top-level div before placing SVG",
        "diff": "diff --git a/components/SimilarityGraph/index.js b/components/SimilarityGraph/index.js @@ -8,6 +8,10 @@ export default class SimilarityGraph extends VisComponent {\nsuper(el);\nthis.data = data;\n+ // Empty the top-level div.\n+ d3.select(this.el)\n+ .selectAll('*').remove();\n+\n// Construct an SVG element inside the top-level div.\nthis.svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\nthis.svg.setAttribute('width', width);\n",
        "date": "25.04.2017 16:29:06",
        "repo": "kitware/candela",
        "type": "refactor",
        "sim_msg": "perf(client): use css transforms instead of absolute positioning for tooltip",
        "sim_diff": "diff --git a/client/src/components/graph.js b/client/src/components/graph.js @@ -48,14 +48,26 @@ const getXLabels = ({ minX, maxX, width }) => {\nreturn labels\n}\n-const GraphLine = memo(({ onTooltipIn, name, currentScore, ...rest }) => (\n+const GraphLine = memo(({ points, onTooltipIn, onMouseMove, onMouseOut, name, currentScore, ...rest }) => (\n+ <Fragment>\n<polyline\n{...rest}\n+ points={points}\n+ stroke-width={stroke}\nstroke-linecap='round'\nfill='transparent'\n+ pointer-events='none'\n+ />\n+ <polyline\n+ stroke-width={stroke * 2.5}\n+ points={points}\n+ fill='transparent'\npointer-events='stroke'\nonMouseOver={onTooltipIn(`${name} - ${currentScore} points`)}\n+ onMouseMove={onMouseMove}\n+ onMouseOut={onMouseOut}\n/>\n+ </Fragment>\n))\nexport default withStyles({\n@@ -72,7 +84,9 @@ export default withStyles({\ncolor: 'var(--cirrus-bg)',\npadding: '5px 10px',\nborderRadius: '5px',\n- margin: '5px'\n+ margin: '5px',\n+ top: '0',\n+ left: '0'\n}\n}, class Graph extends Component {\nstate = {\n@@ -177,7 +191,6 @@ export default withStyles({\n<GraphLine\nkey={i}\nstroke={color}\n- stroke-width={stroke}\npoints={points}\nname={name}\ncurrentScore={currentScore}\n@@ -216,8 +229,7 @@ export default withStyles({\n<div\nclass={classes.tooltip}\nstyle={{\n- left: tooltipX,\n- top: tooltipY\n+ transform: `translate(${tooltipX}px, ${tooltipY}px)`,\n}}\n>\n{tooltipContent}\n",
        "chatgpt_rag": "style(client): remove all child elements before constructing SVG element in SimilarityGraph"
    },
    {
        "msg": "refactor: remove unnecessary spread.",
        "diff": "diff --git a/packages/chakra-ui-core/src/CInputGroup/CInputGroup.js b/packages/chakra-ui-core/src/CInputGroup/CInputGroup.js @@ -53,9 +53,7 @@ const CInputGroup = {\nconst clone = cloneVNode(vnode, h)\nreturn h(clone.componentOptions.Ctor, {\n...clone.data,\n- on: {\n- ...(clone.componentOptions.listeners || {})\n- },\n+ on: (clone.componentOptions.listeners || {}),\nprops: {\n...(clone.data.props || {}),\n...clone.componentOptions.propsData,\n",
        "date": "23.12.2021 00:35:33",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "refactor",
        "sim_msg": "style: Add aria labels to icons",
        "sim_diff": "diff --git a/packages/blocks-ui/src/canvas.js b/packages/blocks-ui/src/canvas.js @@ -52,11 +52,11 @@ const Copy = ({ toCopy }) => {\n<IconButton onClick={copyToClipboardOnClick}>\n{hasCopied ? (\n<>\n- <Check sx={{ color: \"green\" }} />\n+ <Check sx={{ color: \"green\" }} aria-label=\"Copied\" />\n</>\n) : (\n<>\n- <Clipboard />\n+ <Clipboard aria-label=\"Copy\" />\n</>\n)}\n</IconButton>\n",
        "chatgpt_rag": "refactor: Simplify event listener assignment in CInputGroup component"
    },
    {
        "msg": "refactor: use optional chain",
        "diff": "diff --git a/src/use/emitter.js b/src/use/emitter.js @@ -103,7 +103,7 @@ function broadcast() {\nchildren.forEach((vnode) => {\nconst childComponent = vnode.component\n- if (childComponent && childComponent.type && childComponent.type.name === componentName) {\n+ if (childComponent?.type?.name === componentName) {\nchildComponent.emit(eventName, ...params)\n} else {\n_broadcast(childComponent)\n",
        "date": "21.08.2020 14:48:44",
        "repo": "hug-sun/element3",
        "type": "refactor",
        "sim_msg": "fix: node mount bug",
        "sim_diff": "diff --git a/src/node/baseNode.js b/src/node/baseNode.js @@ -72,7 +72,6 @@ class BaseNode extends Node {\n_node: this,\n_global: this.global\n}, obj));\n-\nthis.emit('InnerEvents', {\ntype: 'node:addEndpoint',\ndata: endpoint\n",
        "chatgpt_rag": "refactor: simplify conditional statement in broadcast function"
    },
    {
        "msg": "refactor(src/common/api/utils/xhr_wrapper.js): some comments, fix export of localStorage stuff",
        "diff": "diff --git a/src/common/api/utils/xhr_wrapper.js b/src/common/api/utils/xhr_wrapper.js // Request utils,\n-// feel free to replace with your code\n+// Feel free to replace with your code\n// (get, post are used in ApiServices)\n-import {getLocalToken, resetLocalToken} from 'api'\n+import {getLocalToken, resetLocalToken} from 'api/LocalStorageCookiesSvc'\n-export default function requestWrapper (method) {\n+function requestWrapper (method) {\nreturn async function (url, data = null, params = {}) {\nif (method === 'GET') {\n- // Is it a GET?\n+ // It's a GET response\n// GET doesn't have data\nparams = data\ndata = null\n@@ -27,12 +27,16 @@ export default function requestWrapper (method) {\n}\n// Check that req url is relative and request was sent to our domain\n- if (url.match(/^https?:\\/\\//gi) > -1) {\n+ if (!/(http|https):\\/\\//.test(url)) {\n+ console.log(`Request ${url} was sent to our domain`)\nconst token = getLocalToken()\nif (token) {\ndefaults.headers.Authorization = `JWT ${token}`\n}\nurl = process.env.BASE_API + url\n+ } else {\n+ console.log(`Request ${url} was sent to external domain`)\n+ // Request was set to an external domain\n}\nif (data) {\n",
        "date": "10.08.2017 04:55:13",
        "repo": "metnew/suicrux",
        "type": "refactor",
        "sim_msg": "refactor: use XHR.responseURL as finalUrl",
        "sim_diff": "diff --git a/src/background/utils/requests.js b/src/background/utils/requests.js @@ -31,7 +31,7 @@ function xhrCallbackWrapper(req) {\nresType: xhr.responseType,\n};\nconst data = {\n- finalUrl: req.finalUrl,\n+ finalUrl: xhr.responseURL,\nreadyState: xhr.readyState,\nresponseHeaders: xhr.getAllResponseHeaders(),\nstatus: xhr.status,\n@@ -96,7 +96,7 @@ export function httpRequest(details, cb) {\n'timeout',\n]\n.forEach(evt => { xhr[`on${evt}`] = callback; });\n- req.finalUrl = details.url;\n+ // req.finalUrl = details.url;\nxhr.send(details.data);\n} catch (e) {\nconsole.warn(e);\n@@ -117,16 +117,16 @@ export function abortRequest(id) {\n}\n// Watch URL redirects\n-browser.webRequest.onBeforeRedirect.addListener(details => {\n- const reqId = verify[details.requestId];\n- if (reqId) {\n- const req = requests[reqId];\n- if (req) req.finalUrl = details.redirectUrl;\n- }\n-}, {\n- urls: ['<all_urls>'],\n- types: ['xmlhttprequest'],\n-});\n+// browser.webRequest.onBeforeRedirect.addListener(details => {\n+// const reqId = verify[details.requestId];\n+// if (reqId) {\n+// const req = requests[reqId];\n+// if (req) req.finalUrl = details.redirectUrl;\n+// }\n+// }, {\n+// urls: ['<all_urls>'],\n+// types: ['xmlhttprequest'],\n+// });\n// Modifications on headers\nbrowser.webRequest.onBeforeSendHeaders.addListener(details => {\n",
        "chatgpt_rag": "refactor: improve URL validation and logging in requestWrapper function"
    },
    {
        "msg": "refactor: remove useless prop `focusClass`",
        "diff": "diff --git a/packages/veui/src/components/Autocomplete/Autocomplete.vue b/packages/veui/src/components/Autocomplete/Autocomplete.vue @@ -106,10 +106,6 @@ export default {\nmixins: [ui, input, overlay],\nprops: {\n...AutocompleteBase.props,\n- focusClass: {\n- type: String,\n- default: 'veui-autocomplete-focus'\n- },\nsuggestTrigger: {\ntype: [String, Array],\ndefault: 'input'\n",
        "date": "28.05.2019 19:33:04",
        "repo": "ecomfe/veui",
        "type": "refactor",
        "sim_msg": "fix: QAutocomplete staticData reference",
        "sim_diff": "diff --git a/src/components/autocomplete/QAutocomplete.vue b/src/components/autocomplete/QAutocomplete.vue @@ -157,7 +157,7 @@ export default {\n},\nsetValue (result) {\nconst suffix = this.__inputParent ? 'Parent' : ''\n- this[`__input${suffix}`].set(this.staticData ? result[staticData.field] : result.value)\n+ this[`__input${suffix}`].set(this.staticData ? result[this.staticData.field] : result.value)\nthis.$emit('selected', result)\nthis.__clearSearch()\n",
        "chatgpt_rag": "refactor: Remove focusClass prop from Autocomplete component"
    },
    {
        "msg": "refactor: use useGlobalOptions get  in Button",
        "diff": "diff --git a/packages/button/Button.vue b/packages/button/Button.vue </template>\n<script>\n-import { toRefs, inject, computed, getCurrentInstance } from 'vue'\n+import { useGlobalOptions } from '../../src/use/globalConfig'\n+import { toRefs, inject, computed } from 'vue'\nexport default {\nname: 'ElButton',\nprops: {\n@@ -89,13 +90,10 @@ const useButtonDisabled = (disabled) => {\n}\nconst useButtonSize = (size) => {\n+ const globalConfig = useGlobalOptions()\nreturn computed(() => {\nconst elFormItem = inject('elFormItem', {})\n- return (\n- size?.value ||\n- elFormItem.elFormItemSize ||\n- getCurrentInstance().ctx.$ELEMENT?.size\n- )\n+ return size?.value || elFormItem.elFormItemSize || globalConfig.size\n})\n}\n</script>\n",
        "date": "28.11.2020 16:50:26",
        "repo": "hug-sun/element3",
        "type": "refactor",
        "sim_msg": "refactor(button): remove script setup",
        "sim_diff": "diff --git a/src/components/button/CdrButton.vue b/src/components/button/CdrButton.vue -<script setup>\n-import { useCssModule, computed, useSlots } from 'vue';\n+<script>\n+import {\n+ defineComponent, useCssModule, computed,\n+} from 'vue';\n+import mapClasses from '../../utils/mapClasses';\n+import { responsiveModifyClass, buildBooleanClass } from '../../utils/buildClass';\n+import propValidator from '../../utils/propValidator';\n-import mapClasses from '../../utils/mapClasses.js';\n-import { responsiveModifyClass, buildBooleanClass } from '../../utils/buildClass.js';\n-import propValidator from '../../utils/propValidator.js';\n-\n-const slots = useSlots();\n-const props = defineProps({\n+export default defineComponent({\n+ name: 'CdrButton',\n+ props: {\ntag: {\ntype: String,\ndefault: 'button',\n@@ -52,28 +54,43 @@ withBackground: {\ntype: Boolean,\ndefault: false,\n},\n-});\n+ },\n+ setup(props, ctx) {\nconst baseClass = 'cdr-button';\n-const style = useCssModule();\n-\n-/************************ Computed properties *************************/\n-const buttonType = computed(() => props.tag === 'button' ? props.type : null);\n+ const buttonType = computed(() => (props.tag === 'button' ? props.type : null));\nconst modifierClass = computed(() => `${baseClass}--${props.modifier}`);\nconst fullWidthClass = computed(() => !props.iconOnly && props.fullWidth\n&& buildBooleanClass(baseClass, props.fullWidth, 'full-width'));\nconst sizeClass = computed(() => (!props.iconOnly\n? responsiveModifyClass(baseClass, '', props.size)\n: `cdr-button--icon-only-${props.size}`));\n-const iconLeftClass = computed(() => slots['icon-left'] && slots.default\n+ const iconLeftClass = computed(() => ctx.slots['icon-left'] && ctx.slots.default\n&& `${baseClass}--has-icon-left`);\n-const iconRightClass = computed(() => slots['icon-right'] && slots.default\n+ const iconRightClass = computed(() => ctx.slots['icon-right'] && ctx.slots.default\n&& `${baseClass}--has-icon-right`);\nconst iconOnlyClass = computed(() => props.iconOnly && `${baseClass}--icon-only`);\nconst withBackgroundClass = computed(() => props.iconOnly\n&& props.withBackground && `${baseClass}--with-background`);\n+ return {\n+ style: useCssModule(),\n+ mapClasses,\n+ baseClass,\n+ buttonType,\n+ modifierClass,\n+ fullWidthClass,\n+ sizeClass,\n+ iconLeftClass,\n+ iconRightClass,\n+ iconOnlyClass,\n+ withBackgroundClass,\n+ };\n+ },\n+});\n+\n</script>\n+\n<template>\n<component\n:is=\"tag\"\n",
        "chatgpt_rag": "refactor(button): remove script setup and update button size logic"
    },
    {
        "msg": "refactor(fab): remove variable references",
        "diff": "diff --git a/consumables/scss/components/fab/fab.scss b/consumables/scss/components/fab/fab.scss @import '../../global/colors/colors';\n@import '../../global/helpers';\n@import '../../global/layout/grid';\n-@import 'vars';\n@import '../../import-once';\n@include exports('fab') {\n.bx--fab__hexagon {\ntransition: fill $transition--base;\n- fill: $color__fab-hexagon;\n+ fill: $color__blue-40;\n}\n.bx--fab__plus-icon {\n@include rotate(0, $transition--base);\n- fill: $color__fab-plus-icon;\n+ fill: $color__white;\n}\n}\n.bx--fab__hexagon {\ntransition: fill $transition--base;\n- fill: $color__fab-hexagon--is-closed;\n+ fill: $color__navy-gray-5;\n}\n.bx--fab__plus-icon {\n",
        "date": "04.01.2017 16:27:07",
        "repo": "carbon-design-system/carbon",
        "type": "refactor",
        "sim_msg": "chore(header): use new link mixins",
        "sim_diff": "diff --git a/src/components/layout/header/header.module.scss b/src/components/layout/header/header.module.scss @import '~scss/colors.module.scss';\n+@import '~scss/links.module.scss';\n@import '~scss/breakpoints.module.scss';\n.tools {\ntransition: all 0.2s;\n- &:hover,\n+ &:hover {\n+ @include link-hover;\n+ }\n&:focus {\n- color: $color-blueberry-500;\n+ @include link-focus;\nbackground: $color-blueberry-200;\n}\nz-index: 2;\n}\n- a:hover,\n+ a:hover {\n+ @include link-hover-dark-bg;\n+ }\na:focus {\n- color: rgba(255, 255, 255, 0.6);\n+ @include link-focus-dark-bg;\n}\n&:hover > a {\nborder-bottom: 3px solid $color-blueberry-200;\n}\n.return-link {\n- // height: 1.3rem;\nmargin-bottom: 0.75rem;\n@media (max-width: $viewport-md) {\n",
        "chatgpt_rag": "chore(fab): update colors in fab component styling"
    },
    {
        "msg": "refactor: Preact CLI tests",
        "diff": "diff --git a/src/commands/create.js b/src/commands/create.js @@ -115,9 +115,9 @@ export default asyncCommand({\nawait fs.writeFile(path.resolve(target, 'package.json'), JSON.stringify(pkg, null, 2));\n+ if (argv.install) {\nspinner.text = 'Installing dev dependencies';\n- if (argv.install) {\nawait npm(target, [\n'install', '--save-dev',\n'preact-cli',\n@@ -146,9 +146,9 @@ export default asyncCommand({\n'preact-compat',\n'preact-router'\n]);\n- }\nspinner.succeed('Done!\\n');\n+ }\nreturn `\nTo get started, cd into the new directory:\n",
        "date": "12.06.2017 17:23:18",
        "repo": "preactjs/preact-cli",
        "type": "refactor",
        "sim_msg": "fix(cli): show error message if install fails",
        "sim_diff": "diff --git a/packages/cli/lib/commands/create.js b/packages/cli/lib/commands/create.js @@ -20,6 +20,8 @@ module.exports = async (name, starter = 'default') => {\n}\nconst url = `https://github.com/${starter}.git`\n+ const developCommand = 'gridsome develop'\n+ const buildCommand = 'gridsome build'\nconst tasks = new Tasks([\n{\n@@ -89,8 +91,15 @@ module.exports = async (name, starter = 'default') => {\nchild.on('close', code => {\nif (code !== 0) {\n- reject(`Command failed: ${command} ${args.join(' ')}`)\n- return\n+ return reject(\n+ new Error(\n+ `Failed to install dependencies with ${command}. ` +\n+ `Please enter ${chalk.cyan(name)} directory and ` +\n+ `install dependencies with yarn or npm manually. ` +\n+ `Then run ${chalk.cyan(developCommand)} to start ` +\n+ `local development.\\n\\n Exit code ${code}`\n+ )\n+ )\n}\nresolve()\n@@ -103,13 +112,9 @@ module.exports = async (name, starter = 'default') => {\ntry {\nawait tasks.run()\n} catch (err) {\n- console.log()\n- return console.log(chalk.red(err.message))\n+ throw err\n}\n- const developCommand = 'gridsome develop'\n- const buildCommand = 'gridsome build'\n-\nconsole.log()\nconsole.log(` - Enter directory ${chalk.green(`cd ${name}`)}`)\nconsole.log(` - Run ${chalk.green(developCommand)} to start local development`)\n",
        "chatgpt_rag": "feat(cli): add option to install dev dependencies during project creation"
    },
    {
        "msg": "refactor: rename to ElPagination",
        "diff": "diff --git a/packages/pagination/index.js b/packages/pagination/index.js -import Pagination from './Pagination'\n+import ElPagination from './Pagination'\n/* istanbul ignore next */\n-Pagination.install = function (app) {\n- app.component(Pagination.name, Pagination)\n+ElPagination.install = function (app) {\n+ app.component(ElPagination.name, ElPagination)\n}\n-export default Pagination\n+export default ElPagination\n",
        "date": "23.10.2020 16:26:56",
        "repo": "hug-sun/element3",
        "type": "refactor",
        "sim_msg": "fix(web): pagination rendering issue",
        "sim_diff": "diff --git a/packages/web/src/components/result/addons/Pagination.js b/packages/web/src/components/result/addons/Pagination.js @@ -36,6 +36,7 @@ const buildPaginationDOM = (props, position) => {\nif (currentPage > (totalPages - pages) + 2) {\nstart = (totalPages - pages) + 2;\n}\n+ if (totalPages <= pages) start = 2;\nfor (let i = start; i < totalPagesToShow; i += 1) {\nconst primary = currentPage === i - 1;\nconst innerClassName = getClassName(innerClass, 'button');\n@@ -149,7 +150,7 @@ class Pagination extends React.PureComponent {\n{showEndPage && currentPage >= Math.floor(pages / 2) + !!(pages % 2) ? (\n<span>...</span>\n) : null}\n- {currentPage <= (totalPages - pages) + 2 && buildPaginationDOM(this.props, 'start')}\n+ {(currentPage <= (totalPages - pages) + 2 || totalPages <= pages) && buildPaginationDOM(this.props, 'start')}\n{showEndPage && pages > 2 && currentPage <= totalPages - Math.ceil(pages * 0.75) ? (\n<span>...</span>\n) : null}\n",
        "chatgpt_rag": "refactor(pagination): rename Pagination component to ElPagination for consistency"
    },
    {
        "msg": "refactor: composition-api refactor ok",
        "diff": "diff --git a/packages/input/src/use.js b/packages/input/src/use.js -import { computed, getCurrentInstance, inject, ref, unref, nextTick } from 'vue'\n+import { computed, getCurrentInstance, inject, ref, unref, nextTick, watch } from 'vue'\nimport merge from 'element-ui/src/utils/merge'\nimport { isKorean } from 'element-ui/src/utils/shared'\n@@ -21,7 +21,7 @@ export const useValidate = () => {\nreturn { validateState, validateIcon }\n}\n-export const useTextarea = (autosize, type, resize, textareaCalcStyle) => {\n+export const useTextarea = ({ autosize, type, resize, modelValue, validateEvent }, textareaCalcStyle, instance) => {\nconst textarea = ref(null)\nconst textareaStyle = computed(() => {\n@@ -46,10 +46,21 @@ export const useTextarea = (autosize, type, resize, textareaCalcStyle) => {\nmaxRows\n)\n}\n+\n+ watch(\n+ () => modelValue,\n+ (val) => {\n+ nextTick(resizeTextarea)\n+ if (unref(validateEvent)) {\n+ instance.proxy.dispatch('ElFormItem', 'el.form.change', [val])\n+ }\n+ }\n+ )\n+\nreturn { textarea, textareaStyle, resizeTextarea }\n}\n-export const useInput = (size, type, disabled, modelValue, readonly, clearable, showPassword, showWordLimit, { hovering, focused }, textarea, attrs) => {\n+export const useInput = ({ size, type, disabled, modelValue, suffixIcon, readonly, clearable, showPassword, showWordLimit }, { hovering, focused }, textarea, attrs, validateState, needStatusIcon, slots) => {\nconst input = ref(null)\nconst elFormItem = inject('elFormItem', {})\n@@ -108,7 +119,6 @@ export const useInput = (size, type, disabled, modelValue, readonly, clearable,\nunref(nativeInputValue) &&\n(unref(focused) || unref(hovering))\n)\n-\n})\nconst showPwdVisible = computed(() => {\nreturn (\n@@ -118,6 +128,16 @@ export const useInput = (size, type, disabled, modelValue, readonly, clearable,\n(!!unref(nativeInputValue) || unref(focused))\n)\n})\n+ const getSuffixVisible = () => {\n+ return (\n+ slots.suffix ||\n+ unref(suffixIcon) ||\n+ unref(showClear) ||\n+ unref(showPassword) ||\n+ unref(isWordLimitVisible) ||\n+ (unref(validateState) && unref(needStatusIcon))\n+ )\n+ }\nreturn {\ninput: input || textarea,\n@@ -129,11 +149,12 @@ export const useInput = (size, type, disabled, modelValue, readonly, clearable,\nupperLimit,\ntextLength,\nshowClear,\n- showPwdVisible\n+ showPwdVisible,\n+ getSuffixVisible\n}\n}\n-export const useInteractive = (instance, input, nativeInputValue, modelValue, { focused, isComposing, passwordVisible }, validateEvent, emit, slots) => {\n+export const useInteractive = (instance, input, { type, modelValue, validateEvent }, { focused, isComposing, passwordVisible }, nativeInputValue, emit, slots) => {\nconst focus = () => {\nunref(input).focus()\n@@ -250,6 +271,13 @@ export const useInteractive = (instance, input, nativeInputValue, modelValue, {\ncalcIconOffset('suffix')\n}\n+ watch(\n+ () => nativeInputValue,\n+ () => {\n+ setNativeInputValue()\n+ }\n+ )\n+\nreturn {\nfocus,\nblur,\n",
        "date": "07.08.2020 15:54:42",
        "repo": "hug-sun/element3",
        "type": "refactor",
        "sim_msg": "fix(docs): Codepen code",
        "sim_diff": "diff --git a/docs/src/components/DocCodepen.vue b/docs/src/components/DocCodepen.vue @@ -65,14 +65,14 @@ export default {\n})\nconst css = computed(() => {\n- return (def.parts.style || '')\n+ return (def.parts.Style || '')\n.replace(/(<style.*?>|<\\/style>)/g, '')\n.trim()\n})\nconst cssPreprocessor = computed(() => {\nconst lang = /<style.*lang=[\"'](.*)[\"'].*>/\n- .exec(def.parts.style || '')\n+ .exec(def.parts.Style || '')\nreturn lang ? lang[ 1 ] : 'none'\n})\n@@ -81,14 +81,14 @@ export default {\nconst quasarImports = /import\\s+{([^}'\\n]+)}\\s+from\\s+'quasar'/g\nconst vueImports = /import\\s+{([^}'\\n]+)}\\s+from\\s+'vue'/g\nconst otherImports = /import ([^'\\n]*) from ([^\\n]*)/g\n- let component = /export default {([\\s\\S]*)}/g.exec(def.parts.script || '')\n+ let component = /export default {([\\s\\S]*)}/g.exec(def.parts.Script || '')\ncomponent = ((component && component[ 1 ]) || '').trim()\nif (component.length > 0) {\ncomponent = '\\n ' + component + '\\n'\n}\n- let script = /<script>([\\s\\S]*)export default {/g.exec(def.parts.script || '')\n+ let script = /<script>([\\s\\S]*)export default {/g.exec(def.parts.Script || '')\nscript = ((script && script[ 1 ]) || '')\n.replace(quasarImports, replaceQuasarImports)\n.replace(vueImports, replaceVueImports)\n@@ -105,7 +105,7 @@ app.mount('#q-app')\n})\nconst html = computed(() => {\n- return (def.parts.template || '')\n+ return (def.parts.Template || '')\n.replace(/(<template>|<\\/template>$)/g, '')\n.replace(/\\n/g, '\\n ')\n.replace(/([\\w]+=\")([^\"]*?)(\")/g, function (match, p1, p2, p3) {\n@@ -157,7 +157,7 @@ app.mount('#q-app')\nreturn JSON.stringify(data)\n})\n- async function open (whichParts) {\n+ function open (whichParts) {\ndef.parts = whichParts\nif (active.value) {\n@@ -167,8 +167,9 @@ app.mount('#q-app')\nactive.value = true\n- await nextTick()\n+ nextTick(() => {\nform.value.submit()\n+ })\n}\nreturn {\n",
        "chatgpt_rag": "feat(input): Added watch for modelValue in useTextarea and useInput\n"
    },
    {
        "msg": "refactor(stat): use functional api",
        "diff": "diff --git a/packages/chakra-ui-core/src/CStat/CStat.js b/packages/chakra-ui-core/src/CStat/CStat.js @@ -38,17 +38,17 @@ const arrowOptions = {\n*/\nconst CStat = {\nname: 'CStat',\n- extends: CBox,\n- render (h) {\n- const children = cleanChildren(this.$slots.default)\n+ functional: true,\n+ render (h, { props, slots, data, ...rest }) {\n+ const children = cleanChildren(slots().default)\nreturn h(CBox, {\n- props: {\n+ ...rest,\n+ props: { as: props.as },\n+ attrs: {\nflex: 1,\npr: 4,\nposition: 'relative',\n- ...forwardProps(this.$props)\n- },\n- attrs: {\n+ ...(data.attrs || {}),\n'data-chakra-component': 'CStat'\n}\n}, children)\n@@ -65,17 +65,20 @@ const CStat = {\n*/\nconst CStatGroup = {\nname: 'CStatGroup',\n- extends: CFlex,\n- render (h) {\n- const children = cleanChildren(this.$slots.default)\n+ functional: true,\n+ props: CFlex.props,\n+ render (h, { props, slots, data, ...rest }) {\n+ const children = cleanChildren(slots().default)\nreturn h(CFlex, {\n+ ...rest,\nprops: {\nflexWrap: 'wrap',\njustifyContent: 'space-around',\nalignItems: 'flex-start',\n- ...forwardProps(this.$props)\n+ ...forwardProps(props)\n},\nattrs: {\n+ ...(data.attrs || {}),\n'data-chakra-component': 'CStatGroup'\n}\n}, children)\n@@ -92,23 +95,27 @@ const CStatGroup = {\n*/\nconst CStatArrow = {\nname: 'CStatArrow',\n- extends: CIcon,\n+ functional: true,\nprops: {\n+ ...CIcon.props,\ntype: {\ntype: String,\ndefault: 'increase'\n}\n},\n- render (h) {\n+ render (h, { props, slots, data, ...rest }) {\nreturn h(CIcon, {\n+ ...rest,\nprops: {\n- mr: 1,\nsize: '14px',\n- verticalAlign: 'middle',\n- ...arrowOptions[this.type],\n- ...forwardProps(this.$props)\n+ ...arrowOptions[props.type],\n+ ...forwardProps(props)\n},\nattrs: {\n+ mr: 1,\n+ verticalAlign: 'middle',\n+ ...(data.attrs || {}),\n+ color: arrowOptions[props.type].color,\n'data-chakra-component': 'CStatArrow'\n}\n})\n@@ -125,19 +132,20 @@ const CStatArrow = {\n*/\nconst CStatNumber = {\nname: 'CStatNumber',\n- extends: CText,\n- render (h) {\n+ functional: true,\n+ props: CText.props,\n+ render (h, { props, slots, data, ...rest }) {\nreturn h(CText, {\n- props: {\n+ ...rest,\n+ props: forwardProps(props),\n+ attrs: {\nfontSize: '2xl',\nverticalAlign: 'baseline',\nfontWeight: 'semibold',\n- ...forwardProps(this.$props)\n- },\n- attrs: {\n+ ...(data.attrs || {}),\n'data-chakra-component': 'CStatNumber'\n}\n- }, this.$slots.default)\n+ }, slots().default)\n}\n}\n@@ -151,16 +159,20 @@ const CStatNumber = {\n*/\nconst CStatHelperText = {\nname: 'CStatHelperText',\n- extends: CText,\n- render (h) {\n+ functional: true,\n+ props: CText.props,\n+ render (h, { props, slots, data, ...rest }) {\nreturn h(CText, {\n- props: {\n+ ...rest,\n+ props: forwardProps(props),\n+ attrs: {\nfontSize: 'sm',\nopacity: 0.8,\nmb: 2,\n- ...forwardProps(this.$props)\n+ ...(data.attrs || {}),\n+ 'data-chakra-component': 'CStatHelperText'\n}\n- }, this.$slots.default)\n+ }, slots().default)\n}\n}\n@@ -174,18 +186,19 @@ const CStatHelperText = {\n*/\nconst CStatLabel = {\nname: 'CStatLabel',\n- extends: CText,\n- render (h) {\n+ functional: true,\n+ props: CText.props,\n+ render (h, { props, slots, data, ...rest }) {\nreturn h(CText, {\n- props: {\n+ ...rest,\n+ props: forwardProps(props),\n+ attrs: {\nfontWeight: 'medium',\nfontSize: 'sm',\n- ...forwardProps(this.$props)\n- },\n- attrs: {\n+ ...(data.attrs || {}),\n'data-chakra-component': 'CStatLabel'\n}\n- }, this.$slots.default)\n+ }, slots().default)\n}\n}\n",
        "date": "12.07.2020 12:02:29",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "refactor",
        "sim_msg": "refactor(ui): SummaryItem - use HoverCard",
        "sim_diff": "diff --git a/packages/ui/src/components/summary-item/summary-item.jsx b/packages/ui/src/components/summary-item/summary-item.jsx @@ -3,7 +3,8 @@ import PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { getGlobalMetricType, getMetricRunInfo } from '@bundle-stats/utils';\n-import { Popover } from '../../ui/popover';\n+import { Icon } from '../../ui/icon';\n+import { HoverCard } from '../../ui/hover-card';\nimport { Skeleton } from '../../ui/skeleton';\nimport { Stack } from '../../layout/stack';\nimport { FlexStack } from '../../layout/flex-stack';\n@@ -11,32 +12,26 @@ import { Metric } from '../metric';\nimport { Delta } from '../delta';\nimport css from './summary-item.module.css';\n-const MetricInfoPopover = ({ description, url }) => {\n- // Workaround cases where the parent is a link\n- const readMoreOnClick = () => {\n- window.open(url);\n- };\n-\n- return (\n- <Stack space=\"xxxsmall\">\n+const MetricDescriptionCard = ({ description, url }) => (\n+ <Stack space=\"xxsmall\">\n<p>{description}</p>\n+\n{url && (\n<p>\n- <button type=\"button\" className={css.readMoreBtn} onClick={readMoreOnClick}>\n+ <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\nRead more\n- </button>\n+ </a>\n</p>\n)}\n</Stack>\n);\n-};\n-MetricInfoPopover.propTypes = {\n+MetricDescriptionCard.propTypes = {\ndescription: PropTypes.string.isRequired,\nurl: PropTypes.string,\n};\n-MetricInfoPopover.defaultProps = {\n+MetricDescriptionCard.defaultProps = {\nurl: '',\n};\n@@ -65,9 +60,9 @@ export const SummaryItem = ({\n<span>{metric.label}</span>\n{showMetricDescriptionTooltip && (\n- <Popover className={css.icon} icon=\"help\">\n- <MetricInfoPopover {...metric} />\n- </Popover>\n+ <HoverCard className={css.icon} label={<Icon glyph=\"help\" />}>\n+ <MetricDescriptionCard {...metric} />\n+ </HoverCard>\n)}\n</FlexStack>\n",
        "chatgpt_rag": "refactor(ui): CStat - convert to functional component and use render function for CStat, CStatGroup, CStatArrow, CStatNumber, CStatHelperText, and CStatLabel"
    },
    {
        "msg": "refactor: use computed data to see whether to use router link",
        "diff": "diff --git a/packages/veui/src/components/Link.vue b/packages/veui/src/components/Link.vue <slot/>\n</component>\n<router-link\n- v-else-if=\"$router && !native\"\n+ v-else-if=\"useRouter\"\n:class=\"klass\"\n:to=\"to\"\n:rel=\"realRel\"\n@@ -73,6 +73,9 @@ export default {\n).join(' ')\n}\nreturn this.rel\n+ },\n+ useRouter () {\n+ return this.$router && !this.native\n}\n},\nmethods: {\n",
        "date": "31.05.2019 21:16:59",
        "repo": "ecomfe/veui",
        "type": "refactor",
        "sim_msg": "fix: Update QRouteTab to latest Vue Router specs",
        "sim_diff": "diff --git a/src/components/tab/QRouteTab.vue b/src/components/tab/QRouteTab.vue @@ -56,7 +56,7 @@ export default {\n},\ncheckIfSelected () {\nthis.$nextTick(() => {\n- if (this.$el.classList.contains('router-link-active')) {\n+ if (this.$el.classList.contains('router-link-active') || this.$el.classList.contains('router-link-exact-active')) {\nthis.selectTab(this.name)\n}\n})\n",
        "chatgpt_rag": "feat: Add useRouter method to Link component for conditional router-link rendering"
    },
    {
        "msg": "refactor(SentenTree): empty top-level element",
        "diff": "diff --git a/components/SentenTree/index.js b/components/SentenTree/index.js +import { select } from 'd3-selection';\n+\nimport VisComponent from '../../VisComponent';\nimport { SentenTreeBuilder,\nSentenTreeVis } from 'sententree/dist/SentenTree';\n@@ -53,6 +55,11 @@ export default class SentenTree extends VisComponent {\nconstructor (el, {data, id = null, text = 'text', count = 'count', graphs = 3}) {\nsuper(el);\n+ // Empty element.\n+ select(el)\n+ .selectAll('*')\n+ .remove();\n+\n// Transform input data into correct form.\nthis.data = data.map((d, i) => ({\nid: id ? d[id] : i,\n",
        "date": "04.05.2017 10:13:15",
        "repo": "kitware/candela",
        "type": "refactor",
        "sim_msg": "feat: Tree add bindDtaum",
        "sim_diff": "diff --git a/src/Tree/Tree.js b/src/Tree/Tree.js @@ -34,6 +34,7 @@ class Tree extends PureComponent {\nthis.handleDragImageSelector = this.handleProps.bind(this, 'dragImageSelector')\nthis.handleClidrenClass = this.handleProps.bind(this, 'childrenClass')\nthis.handleLeafClass = this.handleProps.bind(this, 'leafClass')\n+ this.bindDatum()\n}\ncomponentDidUpdate(prevProps) {\n@@ -56,6 +57,11 @@ class Tree extends PureComponent {\nreturn active === undefined ? this.state.active : active\n}\n+ bindDatum() {\n+ const { bindDatum } = this.props\n+ if (bindDatum) bindDatum(this.datum)\n+ }\n+\nbindNode(id, update) {\n/*\nif (this.nodes.has(id)) {\n",
        "chatgpt_rag": "feat: SentenTree add element removal before data transformation"
    },
    {
        "msg": "refactor(Utilities): update generator",
        "diff": "diff --git a/scss/mixins/_utilities.scss b/scss/mixins/_utilities.scss $properties: append((), $properties);\n}\n- // Use class prefix if present\n- $property-class-prefix: if(map-has-key($utility, prefix), map-get($utility, prefix), null);\n- $property-class-prefix: if($property-class-prefix == null, \"\", $property-class-prefix);\n-\n// Use custom class if present\n$property-class: if(map-has-key($utility, class), map-get($utility, class), nth($properties, 1));\n$property-class: if($property-class == null, \"\", $property-class);\n// Don't prefix if value key is null (eg. with shadow class)\n$property-class-modifier: if($key, if($property-class == \"\" and $infix == \"\", \"\", \"-\") + $key, \"\");\n- // Generate also CSS Variable\n+ // Generate CSS Variable\n$generate-vars: if(map-has-key($utility, vars), map-get($utility, vars), false);\n$generate-only-vars: if(map-has-key($utility, only-vars), map-get($utility, only-vars), false);\n// Generate RTL version\n$generate-rtl: if(map-has-key($utility, rtl), map-get($utility, rtl), false);\n+ // // Add theme prefix\n+ // $theme-prefix: if(map-has-key($utility, theme-prefix), map-get($utility, theme-prefix), false);\n+\n@if map-get($utility, rfs) {\n// Inside the media query\n@if $is-rfs-media-query {\n@if $is-rtl == false {\n/* rtl:begin:remove */\n}\n- .#{$property-class-prefix + $property-class + $infix + $property-class-modifier} {\n+\n+ .#{$property-class + $infix + $property-class-modifier} {\n@each $property in $properties {\n@if $generate-vars == true or $generate-only-vars == true {\n@if $generate-only-vars {\n",
        "date": "22.03.2021 13:52:52",
        "repo": "coreui/coreui",
        "type": "refactor",
        "sim_msg": "perf: additional utils for brand colors only (use light for gray)",
        "sim_diff": "diff --git a/scss/_utilities.scss b/scss/_utilities.scss /**\n*\n* Provide additional utility classes for theming\n- * Extra utilities with brand and gray colors\n+ * Extra utilities with brand colors\n*\n*/\n-@mixin utils-variant($color, $value) {\n- // Text colors\n- .text_#{$color} {\n- color: $value;\n- }\n- .hover\\:text_#{$color}:hover {\n- color: $value;\n- }\n-\n- // Standalone background colors\n- .bg_#{$color} {\n- background-color: $value;\n- }\n- .hover\\:bg_#{$color}:hover {\n- background-color: $value;\n- }\n-\n- // Border colors\n- .border_#{$color} {\n- border-color: $value;\n- }\n- .hover\\:border_#{$color}:hover {\n- border-color: $value;\n- }\n-}\n-\n// Map brand colors pallete\n$brand-colors: (\n\"primary-lightest\": lighten($primary, 33%),\n@@ -51,7 +25,6 @@ $brand-colors: (\n@each $color, $value in $brand-colors {\n// Block utilities with background color and YIQ (white or black) text color\n- // For brand colors only\n.block_#{$color} {\nbackground-color: $value;\ncolor: color-yiq($value);\n@@ -60,10 +33,28 @@ $brand-colors: (\nbackground-color: $value;\ncolor: color-yiq($value);\n}\n- @include utils-variant($color, $value);\n+\n+ // Text colors\n+ .text_#{$color} {\n+ color: $value;\n+ }\n+ .hover\\:text_#{$color}:hover {\n+ color: $value;\n}\n-@each $color, $value in $grays {\n- // utilities for grayscale\n- @include utils-variant(\"gray-#{$color}\", $value);\n+ // Standalone background colors\n+ .bg_#{$color} {\n+ background-color: $value;\n+ }\n+ .hover\\:bg_#{$color}:hover {\n+ background-color: $value;\n+ }\n+\n+ // Border colors\n+ .border_#{$color} {\n+ border-color: $value;\n+ }\n+ .hover\\:border_#{$color}:hover {\n+ border-color: $value;\n+ }\n}\n",
        "chatgpt_rag": "style: update CSS variable generation and theme prefix logic in utilities generation"
    },
    {
        "msg": "refactor: getFiles: allPlaces -> processedPlaces",
        "diff": "diff --git a/packages/engine-processor/lib/processor.js b/packages/engine-processor/lib/processor.js @@ -102,14 +102,15 @@ async function iterate({name, rawSource, fileList, merge, processFile, processed\nasync function getFiles({name, fix, rawSource, processorRunners}) {\nconst fileList = [];\n- const allPlaces = [];\n+ const processedPlaces = [];\nlet isProcessed = false;\nlet processedSource = '';\n- let processedPlaces = [];\nlet merge = null;\nfor (const currentRunner of processorRunners) {\n+ let places = [];\n+\nconst {\nisMatch,\nbranch = stubSplit,\n@@ -127,16 +128,16 @@ async function getFiles({name, fix, rawSource, processorRunners}) {\nisProcessed = true;\nif (lint)\n- [processedSource, processedPlaces] = await lint(rawSource, {fix});\n+ [processedSource, places] = await lint(rawSource, {fix});\nelse if (fix)\nprocessedSource = await fixFind(rawSource);\nelse\n- processedPlaces = await find(rawSource);\n+ places = await find(rawSource);\nif (!processedSource)\nprocessedSource = rawSource;\n- allPlaces.push(...processedPlaces);\n+ processedPlaces.push(...places);\nconst files = await branch(processedSource);\n@@ -147,7 +148,7 @@ async function getFiles({name, fix, rawSource, processorRunners}) {\nmerge,\nisProcessed,\nprocessedSource,\n- processedPlaces: allPlaces,\n+ processedPlaces,\nfileList,\n};\n}\n",
        "date": "23.09.2022 13:27:11",
        "repo": "coderaiser/putout",
        "type": "refactor",
        "sim_msg": "refactor: :recycle: use constant for path to file name map",
        "sim_diff": "diff --git a/src/app.js b/src/app.js @@ -22,7 +22,9 @@ async function main() {\nconst fileHashes = await getFileHashes();\n- let fileNameMap = JSON.parse(fs.readFileSync(\"public/resources/js/file-name-map.json\"));\n+ const fileNameMapFileName = \"public/resources/js/file-name-map.json\";\n+\n+ let fileNameMap = JSON.parse(fs.readFileSync(fileNameMapFileName));\nif (process.env.NODE_ENV == \"development\") {\nconst { default: watch } = await import(\"node-watch\");\n@@ -34,9 +36,9 @@ async function main() {\n}\n});\n- watch(\"public/resources/js/file-name-map.json\", {}, async (evt, name) => {\n+ watch(fileNameMapFileName, {}, async (evt, name) => {\nif (evt != \"remove\") {\n- fileNameMap = JSON.parse(fs.readFileSync(\"public/resources/js/file-name-map.json\"));\n+ fileNameMap = JSON.parse(fs.readFileSync(fileNameMapFileName));\n}\n});\n}\n",
        "chatgpt_rag": "refactor: :recycle: improve variable naming and restructure code in getFiles function"
    },
    {
        "msg": "refactor: remove unnecessary me = this",
        "diff": "diff --git a/packages/veui/src/components/FilterPanel.vue b/packages/veui/src/components/FilterPanel.vue @@ -89,8 +89,7 @@ export default {\n}\n},\ncreated () {\n- let me = this\n- this.debounceSearch = debounce(() => me.search(), 200)\n+ this.debounceSearch = debounce(() => this.search(), 200)\n},\nbeforeDestroy () {\nthis.debounceSearch.cancel()\n",
        "date": "09.02.2019 11:15:17",
        "repo": "ecomfe/veui",
        "type": "refactor",
        "sim_msg": "fix(vue): provide clear actions in SelectedFilter",
        "sim_diff": "diff --git a/packages/vue/src/components/basic/SelectedFilters.jsx b/packages/vue/src/components/basic/SelectedFilters.jsx @@ -6,7 +6,7 @@ import Container from '../../styles/Container';\nimport Title from '../../styles/Title';\nimport { connect } from '../../utils/index';\n-const { patchValue, clearValues } = Actions;\n+const { setValue, clearValues } = Actions;\nconst { getClassName, handleA11yAction } = helper;\nconst SelectedFilters = {\n@@ -28,6 +28,8 @@ const SelectedFilters = {\nreturn this.$scopedSlots.default({\ncomponents: this.components,\nselectedValues: this.selectedValues,\n+ clearValues: this.clearValues,\n+ setValue: this.patchValue,\n});\n}\nconst filtersToRender = this.renderFilters();\n@@ -144,7 +146,7 @@ const mapStateToProps = state => ({\nconst mapDispatchtoProps = {\nclearValuesAction: clearValues,\n- patchValue,\n+ patchValue: setValue,\n};\nconst RcConnected = connect(mapStateToProps, mapDispatchtoProps)(SelectedFilters);\n",
        "chatgpt_rag": "refactor(veui): simplify debounceSearch function in FilterPanel.vue"
    },
    {
        "msg": "refactor(colors): code structure cleanup, fixed missing export",
        "diff": "diff --git a/src/modeling/color.js b/src/modeling/color.js @@ -180,7 +180,6 @@ export function color () {\nreturn o.setColor(c)\n}\n-\n// from http://axonflux.com/handy-rgb-to-hsl-and-rgb-to-hsv-color-model-c\n/**\n* Converts an RGB color value to HSL. Conversion formula\n@@ -193,25 +192,31 @@ export function color () {\n* @param Number b The blue color value\n* @return Array The HSL representation\n*/\n-function rgb2hsl(r, g, b){\n+export function rgb2hsl (r, g, b) {\nif (r.length) { b = r[2], g = r[1], r = r[0]; }\n- var max = Math.max(r, g, b), min = Math.min(r, g, b);\n- var h, s, l = (max + min) / 2;\n+ var max = Math.max(r, g, b), min = Math.min(r, g, b)\n+ var h, s, l = (max + min) / 2\nif (max == min) {\n- h = s = 0; // achromatic\n+ h = s = 0 // achromatic\n} else {\n- var d = max - min;\n- s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n+ var d = max - min\n+ s = l > 0.5 ? d / (2 - max - min) : d / (max + min)\nswitch (max) {\n- case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n- case g: h = (b - r) / d + 2; break;\n- case b: h = (r - g) / d + 4; break;\n+ case r:\n+ h = (g - b) / d + (g < b ? 6 : 0)\n+ break\n+ case g:\n+ h = (b - r) / d + 2\n+ break\n+ case b:\n+ h = (r - g) / d + 4\n+ break\n}\n- h /= 6;\n+ h /= 6\n}\n- return [h, s, l];\n+ return [h, s, l]\n}\n/**\n@@ -227,28 +232,28 @@ function rgb2hsl(r, g, b){\n*/\nexport function hsl2rgb (h, s, l) {\nif (h.length) { l = h[2], s = h[1], h = h[0]; }\n- var r, g, b;\n+ var r, g, b\nif (s == 0) {\n- r = g = b = l; // achromatic\n+ r = g = b = l // achromatic\n} else {\nfunction hue2rgb (p, q, t) {\n- if(t < 0) t += 1;\n- if(t > 1) t -= 1;\n- if(t < 1/6) return p + (q - p) * 6 * t;\n- if(t < 1/2) return q;\n- if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;\n- return p;\n+ if (t < 0) t += 1\n+ if (t > 1) t -= 1\n+ if (t < 1 / 6) return p + (q - p) * 6 * t\n+ if (t < 1 / 2) return q\n+ if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6\n+ return p\n}\n- var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n- var p = 2 * l - q;\n- r = hue2rgb(p, q, h + 1/3);\n- g = hue2rgb(p, q, h);\n- b = hue2rgb(p, q, h - 1/3);\n+ var q = l < 0.5 ? l * (1 + s) : l + s - l * s\n+ var p = 2 * l - q\n+ r = hue2rgb(p, q, h + 1 / 3)\n+ g = hue2rgb(p, q, h)\n+ b = hue2rgb(p, q, h - 1 / 3)\n}\n- return [r, g, b];\n+ return [r, g, b]\n}\n/**\n@@ -265,24 +270,30 @@ export function hsl2rgb(h, s, l){\nexport function rgb2hsv (r, g, b) {\nif (r.length) { b = r[2], g = r[1], r = r[0]; }\n- var max = Math.max(r, g, b), min = Math.min(r, g, b);\n- var h, s, v = max;\n+ var max = Math.max(r, g, b), min = Math.min(r, g, b)\n+ var h, s, v = max\n- var d = max - min;\n- s = max == 0 ? 0 : d / max;\n+ var d = max - min\n+ s = max == 0 ? 0 : d / max\nif (max == min) {\n- h = 0; // achromatic\n+ h = 0 // achromatic\n} else {\nswitch (max) {\n- case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n- case g: h = (b - r) / d + 2; break;\n- case b: h = (r - g) / d + 4; break;\n+ case r:\n+ h = (g - b) / d + (g < b ? 6 : 0)\n+ break\n+ case g:\n+ h = (b - r) / d + 2\n+ break\n+ case b:\n+ h = (r - g) / d + 4\n+ break\n}\n- h /= 6;\n+ h /= 6\n}\n- return [h, s, v];\n+ return [h, s, v]\n}\n/**\n@@ -298,24 +309,36 @@ export function rgb2hsv(r, g, b){\n*/\nexport function hsv2rgb (h, s, v) {\nif (h.length) { v = h[2], s = h[1], h = h[0]; }\n- var r, g, b;\n+ var r, g, b\n- var i = Math.floor(h * 6);\n- var f = h * 6 - i;\n- var p = v * (1 - s);\n- var q = v * (1 - f * s);\n- var t = v * (1 - (1 - f) * s);\n+ var i = Math.floor(h * 6)\n+ var f = h * 6 - i\n+ var p = v * (1 - s)\n+ var q = v * (1 - f * s)\n+ var t = v * (1 - (1 - f) * s)\nswitch (i % 6) {\n- case 0: r = v, g = t, b = p; break;\n- case 1: r = q, g = v, b = p; break;\n- case 2: r = p, g = v, b = t; break;\n- case 3: r = p, g = q, b = v; break;\n- case 4: r = t, g = p, b = v; break;\n- case 5: r = v, g = p, b = q; break;\n+ case 0:\n+ r = v, g = t, b = p\n+ break\n+ case 1:\n+ r = q, g = v, b = p\n+ break\n+ case 2:\n+ r = p, g = v, b = t\n+ break\n+ case 3:\n+ r = p, g = q, b = v\n+ break\n+ case 4:\n+ r = t, g = p, b = v\n+ break\n+ case 5:\n+ r = v, g = p, b = q\n+ break\n}\n- return [r, g, b];\n+ return [r, g, b]\n}\n/**\n@@ -326,15 +349,15 @@ export function hsv2rgb(h, s, v){\n* - convert the HEX value into RGB values\n*/\nexport function html2rgb (s) {\n- var r = 0;\n- var g = 0;\n- var b = 0;\n+ var r = 0\n+ var g = 0\n+ var b = 0\nif (s.length == 7) {\n- r = parseInt('0x'+s.slice(1,3))/255;\n- g = parseInt('0x'+s.slice(3,5))/255;\n- b = parseInt('0x'+s.slice(5,7))/255;\n+ r = parseInt('0x' + s.slice(1, 3)) / 255\n+ g = parseInt('0x' + s.slice(3, 5)) / 255\n+ b = parseInt('0x' + s.slice(5, 7)) / 255\n}\n- return [r,g,b];\n+ return [r, g, b]\n}\n/**\n@@ -346,6 +369,6 @@ export function html2rgb(s) {\nexport function rgb2html (r, g, b) {\nif (r.length) { b = r[2], g = r[1], r = r[0]; }\nvar s = '#' +\n- Number(0x1000000+r*255*0x10000+g*255*0x100+b*255).toString(16).substring(1);\n- return s;\n+ Number(0x1000000 + r * 255 * 0x10000 + g * 255 * 0x100 + b * 255).toString(16).substring(1)\n+ return s\n}\n",
        "date": "06.01.2017 23:20:21",
        "repo": "jscad/openjscad.org",
        "type": "refactor",
        "sim_msg": "fix(colors/textToRgb): text is wrongly parsed",
        "sim_diff": "diff --git a/ui/src/utils/colors.js b/ui/src/utils/colors.js @@ -154,27 +154,33 @@ export function rgbToHsv ({ r, g, b, a }) {\n}\n}\n-const reRGBA = /^\\s*rgb(a)?\\s*\\((\\s*(\\d+)\\s*,\\s*?){2}(\\d+)\\s*,?\\s*([01]?\\.?\\d*?)?\\s*\\)\\s*$/\n+const reRGBA = /^rgb(a)?\\((\\d{1,3}),(\\d{1,3}),(\\d{1,3}),?([01]?\\.?\\d*?)?\\)$/\n-export function textToRgb (color) {\n- if (typeof color !== 'string') {\n+export function textToRgb (str) {\n+ if (typeof str !== 'string') {\nthrow new TypeError('Expected a string')\n}\n+ const color = str.replace(/ /g, '')\n+\nconst m = reRGBA.exec(color)\n- if (m) {\n+\n+ if (m === null) {\n+ return hexToRgb(color)\n+ }\n+\nconst rgb = {\nr: Math.min(255, parseInt(m[2], 10)),\ng: Math.min(255, parseInt(m[3], 10)),\nb: Math.min(255, parseInt(m[4], 10))\n}\n+\nif (m[1]) {\n- rgb.a = Math.min(1, parseFloat(m[5]))\n+ rgb.a = Math.min(1, parseFloat(m[5]) || 0) * 100\n}\n+\nreturn rgb\n}\n- return hexToRgb(color)\n-}\n/* works as darken if percent < 0 */\nexport function lighten (color, percent) {\n",
        "chatgpt_rag": "refactor(color): refactor rgb2hsl function to handle input array or individual values"
    },
    {
        "msg": "refactor: use slot/slot-scope syntax for consistency",
        "diff": "diff --git a/packages/veui/src/components/Uploader.vue b/packages/veui/src/components/Uploader.vue :expanded.sync=\"expandedControlDropdowns[index]\"\n@click=\"handleMediaAction(file, index, $event)\"\n>\n- <template v-slot:trigger=\"{ props, handlers }\">\n+ <template\n+ slot=\"trigger\"\n+ slot-scope=\"{ props, handlers }\"\n+ >\n<label\nv-if=\"control.name === 'replace'\"\n:key=\"control.name\"\ntrigger=\"hover\"\n@click=\"handleMediaAction(file, index, $event)\"\n>\n- <template v-slot:trigger=\"{ props, handlers }\">\n+ <template\n+ slot=\"trigger\"\n+ slot-scope=\"{ props, handlers }\"\n+ >\n<label\nv-if=\"control.name === 'replace'\"\n:key=\"control.name\"\n@click=\"handleMediaEntry\"\n>\n<template\n- v-slot:trigger=\"{\n+ slot=\"trigger\"\n+ slot-scope=\"{\nprops: triggerProps,\nhandlers: triggerHandlers\n}\"\n@@ -830,12 +837,14 @@ export default {\n},\nrealAccept () {\nif (this.extensions) {\n- return this.extensions.map(extension => {\n+ return this.extensions\n+ .map(extension => {\nif (extension.indexOf('.') !== 0) {\nreturn `.${extension}`\n}\nreturn extension\n- }).join(',')\n+ })\n+ .join(',')\n}\nif (this.accept) {\nreturn this.accept\n@@ -991,7 +1000,11 @@ export default {\nlet newFiles = [...files]\nlet countFiles = this.fileList.length + newFiles.length\n- if (!this.isReplacing && this.maxCount !== 1 && countFiles > this.maxCount) {\n+ if (\n+ !this.isReplacing &&\n+ this.maxCount !== 1 &&\n+ countFiles > this.maxCount\n+ ) {\ntoast.error(this.t('tooManyFiles'))\nthis.$emit('invalid', {\nerrors: [\n@@ -1145,9 +1158,11 @@ export default {\nextensions = []\n}\n- return acceptExtention === '*' &&\n+ return (\n+ acceptExtention === '*' &&\nitem.indexOf('/') > -1 &&\n(extensions.indexOf(extension) > -1 || !extensions.length)\n+ )\n})\n},\nvalidateSize (fileSize) {\n@@ -1401,7 +1416,10 @@ export default {\ndefaultControls = [\n{\nname: 'preview',\n- icon: file.type === 'image' ? this.icons.previewImage : this.icons.previewVideo,\n+ icon:\n+ file.type === 'image'\n+ ? this.icons.previewImage\n+ : this.icons.previewVideo,\ndisabled: false,\nlabel: this.t('preview')\n}\n",
        "date": "08.12.2020 11:01:57",
        "repo": "ecomfe/veui",
        "type": "refactor",
        "sim_msg": "feat: Remove uploadName div",
        "sim_diff": "diff --git a/packages/launchpad/src/global/FileDropzone.vue b/packages/launchpad/src/global/FileDropzone.vue </div>\n</Dropzone>\n</FileSelector>\n- <div\n- data-testid=\"upload-name\"\n- class=\"hidden\"\n- >\n- {{ uploadName }}\n- </div>\n<button\nv-if=\"closeButton\"\naria-label=\"Close\"\n@@ -97,8 +91,6 @@ withDefaults(defineProps<{\ncloseButton: false,\n})\n-const uploadName = ref('')\n-\nonMounted(() => {\n// TODO: remove this when vue3-file-selector supports setting this attribute\nconst fileRef = projectUpload.value?.querySelector('input[type=file]')\n",
        "chatgpt_rag": "refactor: Refactor trigger slot in Uploader.vue component"
    },
    {
        "msg": "refactor(src/common/routing/index.jsx): make absolute export for RouteAuth",
        "diff": "diff --git a/src/common/routing/index.jsx b/src/common/routing/index.jsx import {Route} from 'react-router-dom'\nimport {Users, Dashboard, Login} from 'containers'\n-import {RouteAuth} from 'components/addons'\n+import RouteAuth from 'components/addons/RouteAuth'\nimport {createBrowserHistory, createMemoryHistory} from 'history'\nexport const history = getHistory()\n",
        "date": "10.08.2017 04:53:59",
        "repo": "metnew/suicrux",
        "type": "refactor",
        "sim_msg": "fix: add more bottom space to Add Address button",
        "sim_diff": "diff --git a/src/renderer/address-book/main/index.jsx b/src/renderer/address-book/main/index.jsx @@ -25,7 +25,9 @@ import {\nimport { push } from 'connected-react-router';\nconst styles = theme => ({\n- button: {},\n+ button: {\n+ marginBottom: '34px'\n+ },\ndescriptionText: {\ncolor: '#93B0C1',\n",
        "chatgpt_rag": "refactor: update import statement for RouteAuth in routing index file"
    },
    {
        "msg": "refactor(Progress): improve syntax",
        "diff": "diff --git a/scss/_progress.scss b/scss/_progress.scss }\n.progress-group-icon {\n- margin: 0 $spacer 0 ($spacer * .25);\nfont-size: $font-size-lg;\n-\n- // @include ltr {\n- // margin: 0 $spacer 0 ($spacer * .25);\n- // }\n- // @include rtl {\n- // margin: 0 ($spacer * .25) 0 $spacer;\n- // }\n-}\n-\n-.progress-group-text {\n- font-size: $font-size-sm;\n- color: $gray-700;\n}\n.progress-group-header {\n",
        "date": "19.03.2021 12:11:01",
        "repo": "coreui/coreui",
        "type": "refactor",
        "sim_msg": "chore: use type size mixin for header sizes",
        "sim_diff": "diff --git a/src/scss/global.scss b/src/scss/global.scss @@ -135,6 +135,28 @@ select,\n/*\n+Headers\n+\n+*/\n+\n+h1 {\n+ @include type-size(700);\n+}\n+h2 {\n+ @include type-size(600);\n+}\n+h3 {\n+ @include type-size(500);\n+}\n+h4 {\n+ @include type-size(400);\n+}\n+h5 {\n+ @include type-size(300);\n+}\n+\n+/*\n+\nLayout blocks\n*/\n",
        "chatgpt_rag": "style: update font sizes for progress group elements"
    },
    {
        "msg": "refactor(src/common/routing): use BROWSER env instead of IS_SSR",
        "diff": "diff --git a/src/common/routing/index.jsx b/src/common/routing/index.jsx @@ -19,6 +19,7 @@ export const appRouting = [\nicon: 'newspaper',\nname: 'Dashboard',\nexact: true,\n+ // lazy: true,\nsidebarVisible: true,\ntag: RouteAuth,\ncomponent: Dashboard\n@@ -91,7 +92,7 @@ export const Routing = authCheck => {\nfunction getHistory () {\nconst basename = ''\n- if (process.env.IS_SSR) {\n+ if (process.env.BROWSER !== true) {\nreturn createMemoryHistory()\n}\nreturn createBrowserHistory({basename})\n",
        "date": "04.08.2017 14:05:29",
        "repo": "metnew/suicrux",
        "type": "refactor",
        "sim_msg": "fix: changed background color of content",
        "sim_diff": "diff --git a/src/renderer/index.js b/src/renderer/index.js @@ -66,7 +66,7 @@ render(\n<Provider store={store}>\n<ConnectedRouter history={history.getHistory()}>\n<HashRouter>\n- <div style={{ backgroundColor: '#262F39' }}>\n+ <div style={{ background: 'linear-gradient(135deg, #2b3540 0%,#1e262e 100%)' }}>\n<Route exact path=\"/\" component={Home} />\n<Route path=\"/closeConfirmation\" component={CloseConfirmation} />\n<Route path=\"/createWallet\" component={CreateWallet} />\n",
        "chatgpt_rag": "feat: added lazy loading for Dashboard component and updated environment check logic"
    },
    {
        "msg": "refactor: remove impossible condition from sceneEqual",
        "diff": "diff --git a/packages/vega-scenegraph/src/util/equal.js b/packages/vega-scenegraph/src/util/equal.js @@ -9,7 +9,6 @@ export function sceneEqual(a, b, key) {\n: (a instanceof Date && b instanceof Date) ? +a === +b\n: (isNumber(a) && isNumber(b)) ? Math.abs(a - b) <= TOLERANCE\n: (!a || !b || !isObject(a) && !isObject(b)) ? a == b\n- : (a == null || b == null) ? false\n: objectEqual(a, b);\n}\n",
        "date": "18.08.2020 22:03:55",
        "repo": "vega/vega",
        "type": "refactor",
        "sim_msg": "fix(ui build): replace for..of in utils/is",
        "sim_diff": "diff --git a/ui/src/utils/is.js b/ui/src/utils/is.js @@ -36,16 +36,20 @@ export function isDeepEqual (a, b) {\nreturn false\n}\n- for (i of a.entries()) {\n- if (b.has(i[0]) !== true) {\n+ i = a.entries().next()\n+ while (i.done !== true) {\n+ if (b.has(i.value[0]) !== true) {\nreturn false\n}\n+ i = i.next()\n}\n- for (i of a.entries()) {\n- if (isDeepEqual(i[1], b.get(i[0])) !== true) {\n+ i = a.entries().next()\n+ while (i.done !== true) {\n+ if (isDeepEqual(i.value[1], b.get(i.value[0])) !== true) {\nreturn false\n}\n+ i = i.next()\n}\nreturn true\n@@ -56,10 +60,12 @@ export function isDeepEqual (a, b) {\nreturn false\n}\n- for (i of a.entries()) {\n- if (b.has(i[0]) !== true) {\n+ i = a.entries().next()\n+ while (i.done !== true) {\n+ if (b.has(i.value[0]) !== true) {\nreturn false\n}\n+ i = i.next()\n}\nreturn true\n",
        "chatgpt_rag": "refactor(scenegraph): remove unnecessary null check in sceneEqual function"
    },
    {
        "msg": "refactor(src/common/components/Root): fix Root component SSR, add SSR props",
        "diff": "diff --git a/src/common/components/views/Root/index.jsx b/src/common/components/views/Root/index.jsx import React, {Component} from 'react'\nimport PropTypes from 'prop-types'\nimport {Provider} from 'react-redux'\n-import {ConnectedRouter as Router} from 'react-router-redux'\nimport {APPLICATION_INIT} from 'actions'\nimport {ThemeProvider} from 'styled-components'\nimport theme from 'styles/theme'\n+const Router = process.env.BROWSER === true\n+ ? require('react-router-redux').ConnectedRouter\n+ : require('react-router').StaticRouter\n+\nexport default class Root extends Component {\nstatic propTypes = {\nstore: PropTypes.object,\n+ SSR: PropTypes.object,\nhistory: PropTypes.object,\nroutes: PropTypes.func\n}\n+ static defaultProps = {\n+ SSR: {}\n+ }\n+\ncomponentWillMount () {\nconst {store} = this.props\nstore.dispatch({type: APPLICATION_INIT})\n@@ -37,11 +45,14 @@ export default class Root extends Component {\n}\nrender () {\n- const {store, history, routes} = this.props\n+ const {SSR, store, history, routes} = this.props\n+ const routerProps = process.env.BROWSER === true\n+ ? {history}\n+ : {location: SSR.location, context: SSR.context}\n// key={Math.random()} = hack for HMR from https://github.com/webpack/webpack-dev-server/issues/395\nreturn (\n<Provider store={store} key={Math.random()}>\n- <Router history={history} key={Math.random()}>\n+ <Router {...routerProps} key={Math.random()}>\n<ThemeProvider theme={theme}>\n{routes(::this.authCheck)}\n</ThemeProvider>\n",
        "date": "04.08.2017 14:09:44",
        "repo": "metnew/suicrux",
        "type": "refactor",
        "sim_msg": "feat: improve config effectiveness note style",
        "sim_diff": "diff --git a/views/components/settings/network/index.es b/views/components/settings/network/index.es -import { connect } from 'react-redux'\nimport React, { Component } from 'react'\n+import PropTypes from 'prop-types'\n+import { connect } from 'react-redux'\nimport { get, cloneDeep, isEqual } from 'lodash'\nimport { translate } from 'react-i18next'\nimport { HTMLSelect, FormGroup, Callout, Intent } from '@blueprintjs/core'\nimport { compose } from 'redux'\n+import styled from 'styled-components'\n+import { rgba } from 'polished'\nimport { Section, Wrapper } from 'views/components/settings/components/section'\nimport { TextConfig } from 'views/components/settings/components/text'\n@@ -14,14 +17,20 @@ import { ProxyConfig } from './proxy-config'\nconst { config } = window\n+const StickyCallout = styled(Callout)`\n+ position: sticky;\n+ z-index: 5;\n+ top: 30px;\n+ background-color: ${props => rgba(props.theme.GREEN1, 0.8)} !important;\n+`\n+\n@translate(['setting'])\n@connect(state => ({\nuse: get(state, 'config.proxy.use', 'none'),\n- proxy: get(state, 'config.proxy'),\n}))\n-class ProxysConfig extends Component {\n- state = {\n- proxy: cloneDeep(this.props.proxy),\n+class ProxiesConfig extends Component {\n+ static propTypes = {\n+ use: PropTypes.string.isRequired,\n}\nhandleChangeUse = e => {\n@@ -29,7 +38,7 @@ class ProxysConfig extends Component {\n}\nrender() {\n- const { use, proxy, t } = this.props\n+ const { use, t } = this.props\nreturn (\n<Section title={t('setting:Proxy')}>\n@@ -61,11 +70,6 @@ class ProxysConfig extends Component {\n</FormGroup>\n)}\n{use === 'none' && <Callout>{t('Will connect to server directly')}</Callout>}\n- {!isEqual(this.state.proxy, proxy) && (\n- <Callout intent={Intent.SUCCESS}>\n- {t('Changes will be effective after restarting Poi')}\n- </Callout>\n- )}\n</Wrapper>\n</Section>\n)\n@@ -142,11 +146,29 @@ const RelayMode = compose(\n</Section>\n))\n-export const NetworkConfig = () => (\n+@translate(['setting'])\n+@connect((state) => ({\n+ proxy: get(state, 'config.proxy'),\n+}))\n+export class NetworkConfig extends Component {\n+ state = {\n+ proxy: cloneDeep(this.props.proxy),\n+ }\n+\n+ render() {\n+ const { proxy, t} = this.props\n+ return (\n<div>\n- <ProxysConfig />\n+ {!isEqual(this.state.proxy, proxy) && (\n+ <StickyCallout intent={Intent.SUCCESS}>\n+ {t('Network setting changes will be effective after restarting Poi')}\n+ </StickyCallout>\n+ )}\n+ <ProxiesConfig />\n<ConnectionRetries />\n<RelayMode />\n</div>\n)\n+ }\n+}\n",
        "chatgpt_rag": "feat: add SSR support to Root component and improve router selection logic"
    },
    {
        "msg": "refactor: simplify responsive behavior",
        "diff": "diff --git a/js/src/sidebar.js b/js/src/sidebar.js @@ -38,7 +38,6 @@ const DefaultType = {\nconst CLASS_NAME_BACKDROP = 'sidebar-backdrop'\nconst CLASS_NAME_FADE = 'fade'\n-// const CLASS_NAME_HIDE = 'hide'\nconst CLASS_NAME_SHOW = 'show'\nconst CLASS_NAME_SIDEBAR = 'sidebar'\nconst CLASS_NAME_SIDEBAR_NARROW = 'sidebar-narrow'\n@@ -69,7 +68,6 @@ class Sidebar extends BaseComponent {\nconstructor(element, config) {\nsuper(element)\nthis._config = this._getConfig(config)\n- // this._breakpoint = this._getBreakpoint()\nthis._show = this._isVisible()\nthis._mobile = this._isMobile()\nthis._overlaid = this._isOverlaid()\n@@ -96,10 +94,6 @@ class Sidebar extends BaseComponent {\nshow() {\nEventHandler.trigger(this._element, EVENT_SHOW)\n- // if (this._element.classList.contains(CLASS_NAME_HIDE)) {\n- // this._element.classList.remove(CLASS_NAME_HIDE)\n- // }\n-\nif (REGEXP_SIDEBAR_SELF_HIDING.test(this._element.className)) {\nthis._element.classList.add(CLASS_NAME_SHOW)\n}\n@@ -132,8 +126,6 @@ class Sidebar extends BaseComponent {\nthis._element.classList.remove(CLASS_NAME_SHOW)\n}\n- // this._element.classList.add(CLASS_NAME_HIDE)\n-\nif (this._isMobile()) {\nthis._removeBackdrop()\n}\n@@ -156,7 +148,7 @@ class Sidebar extends BaseComponent {\n}\ntoggle() {\n- if (this._show) {\n+ if (this._isVisible()) {\nthis.hide()\nreturn\n}\n@@ -240,29 +232,6 @@ class Sidebar extends BaseComponent {\nreturn Boolean(window.getComputedStyle(this._element, null).getPropertyValue('--cui-is-mobile'))\n}\n- _isIOS() {\n- const iOSDevices = [\n- 'iPad Simulator',\n- 'iPhone Simulator',\n- 'iPod Simulator',\n- 'iPad',\n- 'iPhone',\n- 'iPod'\n- ]\n-\n- const platform = Boolean(navigator.platform)\n-\n- if (platform) {\n- while (iOSDevices.length) {\n- if (navigator.platform === iOSDevices.pop()) {\n- return true\n- }\n- }\n- }\n-\n- return false\n- }\n-\n_isNarrow() {\nreturn this._element.classList.contains(CLASS_NAME_SIDEBAR_NARROW)\n}\n",
        "date": "15.04.2021 13:21:00",
        "repo": "coreui/coreui",
        "type": "refactor",
        "sim_msg": "feat: add tag field in slate settings sidebar",
        "sim_diff": "diff --git a/components/sidebars/SidebarSingleSlateSettings.js b/components/sidebars/SidebarSingleSlateSettings.js @@ -49,6 +49,7 @@ export default class SidebarSingleSlateSettings extends React.Component {\npublic: this.props.data.data.public,\nbody: this.props.data.data.body,\nname: this.props.data.data.name,\n+ tags: this.props.data.data.tags,\n};\n_handleSubmit = async () => {\n@@ -195,6 +196,29 @@ export default class SidebarSingleSlateSettings extends React.Component {\n/>\n</div>\n+ <div css={STYLES_GROUPING}>\n+ <System.P css={STYLES_HEADER}>Tags</System.P>\n+ <System.P\n+ css={STYLES_TEXT}\n+ style={{\n+ marginTop: 12,\n+ }}\n+ >\n+ Give your slate a tag to categorize it under that tag.\n+ </System.P>\n+\n+ <System.Input\n+ placeholder=\"Slate tag...\"\n+ style={{ marginTop: 12 }}\n+ name=\"name\"\n+ value={this.state.tags}\n+ onChange={this._handleChange}\n+ onSubmit={this._handleSubmit}\n+ descriptionStyle={{ fontSize: \"20px !important\" }}\n+ labelStyle={{ fontSize: \"20px\" }}\n+ />\n+ </div>\n+\n{this.state.public ? (\n<div css={STYLES_GROUPING}>\n<System.P css={STYLES_HEADER}>Preview image</System.P>\n",
        "chatgpt_rag": "refactor: remove commented out code and unused method in sidebar component"
    },
    {
        "msg": "refactor(tooltips): remove variable references",
        "diff": "diff --git a/consumables/scss/components/tooltips/tooltips.scss b/consumables/scss/components/tooltips/tooltips.scss @import '../../global/colors/colors';\n@import '../../global/typography/typography';\n@import '../../global/layout/grid';\n-@import 'vars';\n@import '../../import-once';\n@include exports('tooltips') {\n",
        "date": "05.01.2017 11:22:53",
        "repo": "carbon-design-system/carbon",
        "type": "refactor",
        "sim_msg": "chore(nav): use link focus style for subnav",
        "sim_diff": "diff --git a/src/components/layout/header/navigation.module.scss b/src/components/layout/header/navigation.module.scss @import '~scss/colors.module.scss';\n@import '~scss/links.module.scss';\n@import '~scss/breakpoints.module.scss';\n+@import '~scss/links.module.scss';\n.caret {\nappearance: none;\ncolor: $color-plum-100;\n}\n&:focus {\n- outline: none;\n+ @include link-focus-dark-bg;\n}\n}\n.menu-item {\n",
        "chatgpt_rag": "chore(tooltips): remove unnecessary vars import and optimize imports"
    },
    {
        "msg": "refactor: update component to bs5",
        "diff": "diff --git a/js/src/sidebar.js b/js/src/sidebar.js import {\ndefineJQueryPlugin,\nemulateTransitionEnd,\n- getElementFromSelector,\n- getTransitionDurationFromElement\n+ getTransitionDurationFromElement,\n+ reflow,\n+ typeCheckConfig\n} from './util/index'\nimport Data from './dom/data'\nimport EventHandler from './dom/event-handler'\n+import Manipulator from './dom/manipulator'\nimport BaseComponent from './base-component'\n/**\n@@ -76,7 +78,7 @@ const SELECTOR_SIDEBAR = '.c-sidebar'\n*/\nclass Sidebar extends BaseComponent {\nconstructor(element, config) {\n- this._element = element\n+ super(element)\nthis._config = this._getConfig(config)\nthis._open = this._isVisible()\nthis._mobile = this._isMobile()\n@@ -92,10 +94,6 @@ class Sidebar extends BaseComponent {\n// Getters\n- static get VERSION() {\n- return VERSION\n- }\n-\nstatic get Default() {\nreturn Default\n}\n@@ -112,14 +110,14 @@ class Sidebar extends BaseComponent {\nif (this._isMobile()) {\nthis._addClassName(this._firstBreakpointClassName())\nthis._showBackdrop()\n- EventHandler.one(this._element, TRANSITION_END, () => {\n+ EventHandler.one(this._element, 'transitionend', () => {\nthis._addClickOutListener()\n})\n} else if (breakpoint) {\nthis._addClassName(this._getBreakpointClassName(breakpoint))\nif (this._isOverlaid()) {\n- EventHandler.one(this._element, TRANSITION_END, () => {\n+ EventHandler.one(this._element, 'transitionend', () => {\nthis._addClickOutListener()\n})\n}\n@@ -127,7 +125,7 @@ class Sidebar extends BaseComponent {\nthis._addClassName(this._firstBreakpointClassName())\nif (this._isOverlaid()) {\n- EventHandler.one(this._element, TRANSITION_END, () => {\n+ EventHandler.one(this._element, 'transitionend', () => {\nthis._addClickOutListener()\n})\n}\n@@ -142,7 +140,7 @@ class Sidebar extends BaseComponent {\nconst transitionDuration = getTransitionDurationFromElement(this._element)\n- EventHandler.one(this._element, TRANSITION_END, complete)\n+ EventHandler.one(this._element, 'transitionend', complete)\nemulateTransitionEnd(this._element, transitionDuration)\n}\n@@ -174,7 +172,7 @@ class Sidebar extends BaseComponent {\nconst transitionDuration = getTransitionDurationFromElement(this._element)\n- EventHandler.one(this._element, TRANSITION_END, complete)\n+ EventHandler.one(this._element, 'transitionend', complete)\nemulateTransitionEnd(this._element, transitionDuration)\n}\n@@ -352,7 +350,7 @@ class Sidebar extends BaseComponent {\nreturn siblings\n}\n- _toggleDropdown(event, sidebar) {\n+ _toggleDropdown(event) {\nlet toggler = event.target\nif (!toggler.classList.contains(CLASS_NAME_NAV_DROPDOWN_TOGGLE)) {\ntoggler = toggler.closest(SELECTOR_NAV_DROPDOWN_TOGGLE)\n",
        "date": "17.12.2020 23:55:43",
        "repo": "coreui/coreui",
        "type": "refactor",
        "sim_msg": "fix(sidebar): update items sorting\nref:",
        "sim_diff": "diff --git a/packages/manager/modules/server-sidebar/src/controller.js b/packages/manager/modules/server-sidebar/src/controller.js @@ -11,7 +11,6 @@ import isEmpty from 'lodash/isEmpty';\nimport isFunction from 'lodash/isFunction';\nimport isString from 'lodash/isString';\nimport map from 'lodash/map';\n-import orderBy from 'lodash/orderBy';\nimport reduce from 'lodash/reduce';\nimport sumBy from 'lodash/sumBy';\nimport zipObject from 'lodash/zipObject';\n@@ -87,8 +86,6 @@ export default class OvhManagerServerSidebarController {\n}\ninit() {\n- console.log(this.universe);\n- console.log('1234');\nthis.SIDEBAR_CONFIG = SIDEBAR_CONFIG;\nthis.SIDEBAR_ORDER_CONFIG = SIDEBAR_ORDER_CONFIG;\n@@ -365,7 +362,11 @@ export default class OvhManagerServerSidebarController {\n);\n}\n- each(orderBy(items, 'displayName'), (service) => {\n+ each(\n+ items.sort(({ displayName: a }, { displayName: b }) =>\n+ a.localeCompare(b),\n+ ),\n+ (service) => {\nconst isExternal =\n!includes(typeServices.type.app, this.universe) &&\n!isEmpty(service.url);\n@@ -472,7 +473,8 @@ export default class OvhManagerServerSidebarController {\nmenuItem.onLoad = () =>\nthis.loadServices(typeServices.type, menuItem, stateParams);\n}\n- });\n+ },\n+ );\n});\n}\n})\n",
        "chatgpt_rag": "refactor(sidebar): update element initialization and event handling\nref: #1234"
    },
    {
        "msg": "refactor(group): superficial group function cleanup",
        "diff": "diff --git a/src/modeling/group.js b/src/modeling/group.js import {CAG} from '../csg'\n-\n+// FIXME : is this used anywhere ?\nexport default function group () { // experimental\nvar o\nvar i = 0\nvar a = arguments\nif (a[0].length) a = a[0]\n- if ((typeof (a[i]) == 'object') && (a[i] instanceof CAG)) {\n+ if ((typeof (a[i]) === 'object') && (a[i] instanceof CAG)) {\no = a[i].extrude({offset: [0, 0, 0.1]}) // -- convert a 2D shape to a thin solid, note: do not a[i] = a[i].extrude()\n} else {\no = a[i++]\n}\nfor (; i < a.length; i++) {\nvar obj = a[i]\n- if ((typeof (a[i]) == 'object') && (a[i] instanceof CAG)) {\n+ if ((typeof (a[i]) === 'object') && (a[i] instanceof CAG)) {\nobj = a[i].extrude({offset: [0, 0, 0.1]}) // -- convert a 2D shape to a thin solid:\n}\no = o.unionForNonIntersecting(obj)\n",
        "date": "06.01.2017 23:36:23",
        "repo": "jscad/openjscad.org",
        "type": "refactor",
        "sim_msg": "chore(utils/is): code style refactor",
        "sim_diff": "diff --git a/ui/src/utils/is.js b/ui/src/utils/is.js @@ -4,59 +4,109 @@ const\nhasArrayBuffer = typeof ArrayBuffer === 'function'\nexport function isDeepEqual (a, b) {\n- if (a === b) return true\n+ if (a === b) {\n+ return true\n+ }\n+\nif (a !== null && b !== null && typeof a === 'object' && typeof b === 'object') {\n- if (a.constructor !== b.constructor) return false\n+ if (a.constructor !== b.constructor) {\n+ return false\n+ }\n+\nlet length, i, keys\n+\nif (a.constructor === Array) {\nlength = a.length\n- if (length !== b.length) return false\n+\n+ if (length !== b.length) {\n+ return false\n+ }\n+\nfor (i = length; i-- !== 0;) {\n- if (isDeepEqual(a[i], b[i]) !== true) return false\n+ if (isDeepEqual(a[i], b[i]) !== true) {\n+ return false\n}\n+ }\n+\nreturn true\n}\n- if (hasMap && a.constructor === Map) {\n- if (a.size !== b.size) return false\n+ if (hasMap === true && a.constructor === Map) {\n+ if (a.size !== b.size) {\n+ return false\n+ }\n+\nfor (i of a.entries()) {\n- if (b.has(i[0]) !== true) return false\n+ if (b.has(i[0]) !== true) {\n+ return false\n+ }\n}\n+\nfor (i of a.entries()) {\n- if (isDeepEqual(i[1], b.get(i[0])) !== true) return false\n+ if (isDeepEqual(i[1], b.get(i[0])) !== true) {\n+ return false\n+ }\n}\n+\nreturn true\n}\n- if (hasSet && a.constructor === Set) {\n- if (a.size !== b.size) return false\n+ if (hasSet === true && a.constructor === Set) {\n+ if (a.size !== b.size) {\n+ return false\n+ }\n+\nfor (i of a.entries()) {\n- if (b.has(i[0]) !== true) return false\n+ if (b.has(i[0]) !== true) {\n+ return false\n+ }\n}\n+\nreturn true\n}\n- if (hasArrayBuffer && a.buffer != null && a.buffer.constructor === ArrayBuffer) {\n+ if (hasArrayBuffer === true && a.buffer != null && a.buffer.constructor === ArrayBuffer) {\nlength = a.length\n- if (length !== b.length) return false\n+\n+ if (length !== b.length) {\n+ return false\n+ }\n+\nfor (i = length; i-- !== 0;) {\n- if (a[i] !== b[i]) return false\n+ if (a[i] !== b[i]) {\n+ return false\n+ }\n}\n+\nreturn true\n}\n- if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags\n- if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf()\n- if (a.toString !== Object.prototype.toString) return a.toString() === b.toString()\n+ if (a.constructor === RegExp) {\n+ return a.source === b.source && a.flags === b.flags\n+ }\n+\n+ if (a.valueOf !== Object.prototype.valueOf) {\n+ return a.valueOf() === b.valueOf()\n+ }\n+\n+ if (a.toString !== Object.prototype.toString) {\n+ return a.toString() === b.toString()\n+ }\nkeys = Object.keys(a)\nlength = keys.length\n- if (length !== Object.keys(b).length) return false\n+\n+ if (length !== Object.keys(b).length) {\n+ return false\n+ }\nfor (i = length; i-- !== 0;) {\nconst key = keys[i]\n- if (isDeepEqual(a[key], b[key]) !== true) return false\n+ if (isDeepEqual(a[key], b[key]) !== true) {\n+ return false\n}\n+ }\n+\nreturn true\n}\n",
        "chatgpt_rag": "chore(modeling/group): code style refactor and fix for comparison operator in group function"
    },
    {
        "msg": "refactor: remove `c-` prefix and fix icon position",
        "diff": "diff --git a/scss/_icon.scss b/scss/_icon.scss -.c-icon {\n+.icon {\ndisplay: inline-block;\ncolor: inherit;\ntext-align: center;\n+ vertical-align: -.125rem; // Fix the position of icon\nfill: currentColor;\n- &:not(.c-icon-c-s):not(.c-icon-custom-size) {\n+ &:not(.icon-c-s):not(.icon-custom-size) {\n@include icon-size($icon-size-base);\n// TODO: create variable with a range\n@for $i from 2 through 9 {\n- &.c-icon-#{$i}xl {\n+ &.icon-#{$i}xl {\n@include icon-size($i * ($icon-size-xl / 1.5));\n}\n}\n- &.c-icon-xl {\n+ &.icon-xl {\n@include icon-size($icon-size-xl);\n}\n- &.c-icon-lg {\n+ &.icon-lg {\n@include icon-size($icon-size-lg);\n}\n- &.c-icon-sm {\n+ &.icon-sm {\n@include icon-size($icon-size-sm);\n}\n}\n",
        "date": "04.01.2021 23:23:10",
        "repo": "coreui/coreui",
        "type": "refactor",
        "sim_msg": "feat(icon): increase circled icon sizes",
        "sim_diff": "diff --git a/modules/icon/scss/_icon.scss b/modules/icon/scss/_icon.scss //\\*------------------------------------*/\n// Icon vars\n-$icon-font-size: ('xs': 10px, 's': 12px, 'm': 14px, 'l': 18px, 'xl': 26px);\n+$icon-font-size: ('xs': 14px, 's': 16px, 'm': 18px, 'l': 20px, 'xl': 26px);\n",
        "chatgpt_rag": "style(icon): refactor icon class names and fix position of icon"
    },
    {
        "msg": "style(webpack_config/server): fix indent",
        "diff": "diff --git a/webpack_config/server/webpack.base.js b/webpack_config/server/webpack.base.js @@ -91,12 +91,11 @@ module.exports = {\nnew webpack.BannerPlugin({\nbanner: config.banner\n}),\n- // NOTE: Server can't process your styles/images/fonts on server-side rendering\n+ // Server can't process require of your styles/images/fonts\nnew webpack.NormalModuleReplacementPlugin(\n/\\.(css|sass|less|jpg|png|gif|scss)$/,\n'node-noop'\n)\n- // NOTE: @Metnew: If I remember correctly this plugin works similarly to NormalModuleReplacementPlugin\n// new webpack.IgnorePlugin(/\\.(css|sass|less|jpg|png|gif|scss)$/)\n],\nnode: {\n",
        "date": "07.08.2017 18:48:58",
        "repo": "metnew/suicrux",
        "type": "style",
        "sim_msg": "build: Use short content hashes.",
        "sim_diff": "diff --git a/webpack.config.js b/webpack.config.js @@ -22,7 +22,7 @@ const htmlMinifierOptions = {\n};\nconst extractAppCss = new ExtractTextPlugin({\n- filename: '[name]_[hash].css',\n+ filename: '[name]_[contenthash:7].css',\n// Disable in development mode, so we can use CSS hot reloading.\ndisable: nodeEnv === 'development'\n});\n@@ -92,7 +92,8 @@ module.exports = {\noutput: {\npublicPath: '/',\npath: path.join(__dirname, 'public'),\n- filename: '[name]_[hash].js'\n+ filename: '[name]_[hash].js',\n+ hashDigestLength: 7\n},\nplugins,\nmodule: {\n@@ -100,7 +101,7 @@ module.exports = {\n{\ntest: /\\.(gif|jpe?g|png|svg)$/,\nuse: [\n- { loader: 'file-loader', query: { name: '[name]_[hash].[ext]' } },\n+ { loader: 'file-loader', query: { name: '[name]_[hash:7].[ext]' } },\n{ loader: 'image-webpack-loader', query: { bypassOnDebug: true } }\n]\n},\n",
        "chatgpt_rag": "build: Update webpack base config for server-side rendering restrictions."
    },
    {
        "msg": "style(lint): linted module.js",
        "diff": "diff --git a/lib/module.js b/lib/module.js -const firebase = require('firebase')\nconst { resolve } = require('path')\n+const firebase = require('firebase')\nconst logger = require('./logger')\nconst createServerMiddleware = require('./helpers/createServerMiddleware')\n",
        "date": "18.03.2020 23:21:30",
        "repo": "nuxt-community/firebase-module",
        "type": "style",
        "sim_msg": "feat: dynamical config",
        "sim_diff": "diff --git a/lib/pkg.js b/lib/pkg.js const app = require('./app');\n+const config = require('./config');\n-const pkg = (path) =>\n+module.exports = {\n+ setConfig: (conf) => {\n+ config.set(conf);\n+ },\n+ request: (path) =>\nnew Promise((resolve) => {\napp.callback()(\n{\n@@ -16,6 +21,5 @@ const pkg = (path) =>\n},\n}\n);\n- });\n-\n-module.exports = pkg;\n+ }),\n+};\n",
        "chatgpt_rag": "fix: update firebase import and add logger and createServerMiddleware imports"
    },
    {
        "msg": "style(all): add missing semicolon",
        "diff": "diff --git a/packages/all/src/index.js b/packages/all/src/index.js @@ -25,7 +25,7 @@ for (let bundle of [geojs, glo, lineup, onset, sententree, similaritygraph, stat\n}\nfor (let component in vega) {\nif (vega[component] !== vega.VegaView) {\n- components[component] = vega[component]\n+ components[component] = vega[component];\n}\n}\n",
        "date": "14.05.2018 13:22:41",
        "repo": "kitware/candela",
        "type": "style",
        "sim_msg": "feat(web): export SearchPreferencesContext",
        "sim_diff": "diff --git a/packages/web/src/index.js b/packages/web/src/index.js @@ -35,6 +35,8 @@ import ReactiveList from './components/result/ReactiveList';\nimport ResultCard from './components/result/ResultCard';\nimport ResultList from './components/result/ResultList';\n+import { SearchPreferencesContext } from './utils';\n+\nexport {\n// basic\nReactiveBase,\n@@ -71,4 +73,5 @@ export {\nReactiveList,\nResultCard,\nResultList,\n+ SearchPreferencesContext,\n};\n",
        "chatgpt_rag": "fix(all): add missing semicolon in components assignment"
    },
    {
        "msg": "style: removed semicolons",
        "diff": "diff --git a/lib/templates/firebase-auth-sw.js b/lib/templates/firebase-auth-sw.js @@ -23,61 +23,61 @@ firebase.initializeApp(<%= serialize(options.config) %>)\nconst getIdToken = () => {\nreturn new Promise((resolve) => {\nconst unsubscribe = firebase.auth().onAuthStateChanged((user) => {\n- unsubscribe();\n+ unsubscribe()\nif (user) {\n// force token refresh as it might be used to sign in server side\nuser.getIdToken(true).then((idToken) => {\n- resolve(idToken);\n+ resolve(idToken)\n}, () => {\n- resolve(null);\n- });\n+ resolve(null)\n+ })\n} else {\n- resolve(null);\n+ resolve(null)\n+ }\n+ })\n+ })\n}\n- });\n- });\n-};\nconst fetchWithAuthorization = async (original, idToken) => {\n// Clone headers as request headers are immutable.\n- const headers = new Headers();\n+ const headers = new Headers()\nfor (let entry of original.headers.entries()) {\n- headers.append(entry[0], entry[1]);\n+ headers.append(entry[0], entry[1])\n}\n// Add ID token to header.\n- headers.append('Authorization', 'Bearer ' + idToken);\n+ headers.append('Authorization', 'Bearer ' + idToken)\n// Create authorized request\n- const { url, ...props } = original.clone();\n+ const { url, ...props } = original.clone()\nconst authorized = new Request(url, {\n...props,\nmode: 'same-origin',\nredirect: 'manual',\nheaders\n- });\n+ })\nreturn fetch(authorized)\n-};\n+}\nself.addEventListener('fetch', (event) => {\n- const url = new URL(event.request.url);\n+ const url = new URL(event.request.url)\nconst expectsHTML = event.request.headers.get('accept').includes('text/html')\n- const isSameOrigin = self.location.origin === url.origin;\n- const isHttps = (self.location.protocol === 'https:' || self.location.hostname === 'localhost');\n+ const isSameOrigin = self.location.origin === url.origin\n+ const isHttps = (self.location.protocol === 'https:' || self.location.hostname === 'localhost')\nconst isIgnored = ignorePaths.some(path => {\nif (typeof path === 'string') {\nreturn url.pathname.startsWith(path)\n}\nreturn path.test(url.pathname.slice(1))\n- });\n+ })\nif (!expectsHTML || !isSameOrigin || !isHttps || isIgnored) {\n- event.respondWith(fetch(event.request));\n+ event.respondWith(fetch(event.request))\n- return;\n+ return\n}\n// Fetch the resource after checking for the ID token.\n@@ -93,9 +93,9 @@ self.addEventListener('fetch', (event) => {\n: fetch(event.request)\n)\n)\n-});\n+})\n// In service worker script.\nself.addEventListener('activate', event => {\n- event.waitUntil(clients.claim());\n-});\n+ event.waitUntil(clients.claim())\n+})\n",
        "date": "01.06.2020 15:35:50",
        "repo": "nuxt-community/firebase-module",
        "type": "style",
        "sim_msg": "feat(Auth): compatibility with totp backend branch",
        "sim_diff": "diff --git a/components/Auth/TokenAuthorization.js b/components/Auth/TokenAuthorization.js @@ -17,6 +17,10 @@ const goTo = (type, email) => Router.replaceRoute(\n{ type, email, context: 'authorization' }\n)\n+const shouldAutoAuthorize = ({ isCurrent }) => {\n+ return isCurrent\n+}\n+\nclass TokenAuthorization extends Component {\nconstructor (props) {\nsuper(props)\n@@ -45,12 +49,11 @@ class TokenAuthorization extends Component {\n}\nautoAutherize () {\nconst {\n- isCurrent,\nemail,\nerror\n} = this.props\n- if (!this.state.authorizing && isCurrent) {\n+ if (!this.state.authorizing && shouldAutoAuthorize(this.props)) {\nthis.authorize()\n} else if (error) {\ngoTo('invalid-token', email, error)\n@@ -65,9 +68,8 @@ class TokenAuthorization extends Component {\nrender () {\nconst {\nt,\n- unauthorizedSession,\n+ target,\necho,\n- isCurrent,\nemail,\nerror,\nloading\n@@ -77,8 +79,8 @@ class TokenAuthorization extends Component {\n} = this.state\nreturn (\n- <Loader error={authorizeError} loading={loading || error || isCurrent} render={() => {\n- const { country, city, ipAddress, userAgent } = unauthorizedSession\n+ <Loader error={authorizeError} loading={loading || error || shouldAutoAuthorize(this.props)} render={() => {\n+ const { country, city, ipAddress, userAgent } = target\nreturn (\n<Fragment>\n<P>{t('notifications/authorization/text/before', { email })}</P>\n@@ -136,7 +138,7 @@ class TokenAuthorization extends Component {\nconst authorizeSession = gql`\nmutation authorizeSession($email: String!, $token: String!) {\n- authorizeSession(email: $email, token: $token)\n+ authorizeSession(email: $email, tokens: [{type: EMAIL_TOKEN, payload: $token}])\n}\n`\n@@ -148,7 +150,9 @@ const unauthorizedSessionQuery = gql`\ncountry\ncity\n}\n- unauthorizedSession(email: $email, token: $token) {\n+ unauthorizedSession(email: $email, token: {type: EMAIL_TOKEN, payload: $token}) {\n+ enabledSecondFactors\n+ session {\nipAddress\nuserAgent\ncountry\n@@ -156,6 +160,7 @@ const unauthorizedSessionQuery = gql`\nisCurrent\n}\n}\n+ }\n`\nexport default compose(\n@@ -170,10 +175,15 @@ export default compose(\n}),\ngraphql(unauthorizedSessionQuery, {\nprops: ({ data }) => {\n+ const {\n+ enabledSecondFactors,\n+ session\n+ } = data.unauthorizedSession || {}\nreturn {\n- unauthorizedSession: data.unauthorizedSession,\n+ enabledSecondFactors,\n+ target: session,\necho: data.echo,\n- isCurrent: data.unauthorizedSession && data.unauthorizedSession.isCurrent,\n+ isCurrent: session && session.isCurrent,\nloading: data.loading,\nerror: data.error\n}\n",
        "chatgpt_rag": "fix(Auth): resolve promise syntax issue in firebase-auth-sw branch"
    },
    {
        "msg": "style: :lipstick: author styles",
        "diff": "diff --git a/src/lib/author.svelte b/src/lib/author.svelte class=\"not-prose border border-primary shadow-lg p-4 rounded-2xl\"\n>\n<div class=\"flex space-x-5 justify-evenly\">\n- <a href={data.html_url} target=\"_blank\" rel=\"noopener\">\n+ <a\n+ class=\"w-1/4\"\n+ href={data.html_url}\n+ target=\"_blank\"\n+ rel=\"noopener\"\n+ >\n<img\n- class=\"w-20 h-20 p-0 m-0 rounded-full\"\n+ class=\"w-20 h-20 p-0 m-0 rounded-full object-cover\"\nsrc={data.avatar_url}\nalt={data.name}\n/>\n</a>\n- <a href={data.html_url} target=\"_blank\" rel=\"noopener\">\n+ <a\n+ class=\"w-3/4\"\n+ href={data.html_url}\n+ target=\"_blank\"\n+ rel=\"noopener\"\n+ >\n<div class=\"text-sm\">\n<p class=\"text-lg font-bold tracking-widest\">{data.name}</p>\n<p>{data.bio || ``}</p>\n",
        "date": "08.05.2022 17:51:04",
        "repo": "spences10/cheat-sheets",
        "type": "style",
        "sim_msg": "style(font): add Overpass Mono font",
        "sim_diff": "diff --git a/styleguide/src/index.html b/styleguide/src/index.html <link rel=\"icon\" type=\"image/png\" href=\"/favicon.png\">\n<link rel=\"shortcut icon\" href=\"/favicon.ico\">\n<link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.0.9/css/all.css\" integrity=\"sha384-5SOiIsAziJl6AWe0HWRKTXlfcSHKmYV4RBF18PPJ173Kzn7jzMyFuTtk8JA7QQG1\" crossorigin=\"anonymous\">\n- <link href=\"https://fonts.googleapis.com/css?family=Source+Sans+Pro:200,400,700\" rel=\"stylesheet\">\n+ <link href=\"https://fonts.googleapis.com/css?family=Overpass+Mono\" rel=\"stylesheet\">\n<title><%=htmlWebpackPlugin.options.title%></title>\n</head>\n<body>\n",
        "chatgpt_rag": "style(author): update author.svelte layout and styles"
    },
    {
        "msg": "style(Embed): update typings and propTypes usage",
        "diff": "diff --git a/src/modules/Embed/index.d.ts b/src/modules/Embed/index.d.ts import * as React from 'react';\ninterface EmbedProps {\n- /** An embed can be active. */\n- active?: boolean;\n+ [key: string]: any;\n/** An element type to render as (string or function). */\nas?: any;\n+ /** An embed can be active. */\n+ active?: boolean;\n+\n/** An embed can specify an alternative aspect ratio. */\naspectRatio?: '4:3' | '16:9' | '21:9';\n@@ -16,6 +18,9 @@ interface EmbedProps {\n/** Whether to show networks branded UI like title cards, or after video calls to action. */\nbrandedUI?: boolean;\n+ /** Primary content. */\n+ children?: React.ReactNode;\n+\n/** Additional classes. */\nclassName?: string;\n@@ -40,7 +45,7 @@ interface EmbedProps {\n* @param {SyntheticEvent} event - React's original SyntheticEvent.\n* @param {object} data - All props and proposed value.\n*/\n- onClick?: (e: React.FormEvent<HTMLVideoElement>, data: this) => void;\n+ onClick?: (event: React.MouseEvent<HTMLDivElement>, data: EmbedProps) => void;\n/** A placeholder image for embed. */\nplaceholder?: string;\n",
        "date": "24.01.2017 21:21:06",
        "repo": "semantic-org/semantic-ui-react",
        "type": "style",
        "sim_msg": "refactor(event-card): emotion to chakra",
        "sim_diff": "diff --git a/src/components/EventCard.tsx b/src/components/EventCard.tsx import React from \"react\"\n-import styled from \"@emotion/styled\"\n-import Emoji from \"./OldEmoji\"\n+import Emoji from \"./Emoji\"\nimport ButtonLink from \"./ButtonLink\"\n+import { Box, Text, Heading } from \"@chakra-ui/react\"\n-const StyledCard = styled.div`\n- position: relative;\n-\n- &:after,\n- &:before {\n- content: \"\";\n- display: block;\n- width: 100%;\n- clear: both;\n- }\n-\n- @media (max-width: ${(props) => props.theme.breakpoints.m}) {\n- margin-top: 30px;\n- }\n-`\n-\n-const StyledCardReference = styled.div`\n- background-color: ${(props) => props.theme.colors.primary};\n- width: 24px;\n- height: 24px;\n- position: absolute;\n- top: 0;\n- left: 50%;\n- overflow: hidden;\n- margin-left: -12px;\n-\n- @media (max-width: ${(props) => props.theme.breakpoints.m}) {\n- display: none;\n- }\n-`\n-\n-const StyledCardContent = styled.div`\n- width: 45%;\n- padding: 1.5rem;\n- background-color: ${(props) => props.theme.colors.ednBackground};\n- border-radius: 2px;\n- border: 1px solid ${(props) => props.theme.colors.lightBorder};\n-\n- &:before {\n- content: \"\";\n- position: absolute;\n- left: 45%;\n- top: 10px;\n- width: 0;\n- height: 3px;\n- border-left: 25px solid ${(props) => props.theme.colors.primary};\n+const clearStyles = {\n+ content: '\"\"',\n+ display: \"block\",\n+ width: \"100%\",\n+ clear: \"both\",\n}\n- &.style-card-content-right {\n- float: right;\n- margin-top: -25%;\n-\n- &:before {\n- content: \"\";\n- right: 45%;\n- left: inherit;\n- border-left: 0;\n- border-right: 25px solid ${(props) => props.theme.colors.primary};\n- }\n- }\n-\n- @media (max-width: ${(props) => props.theme.breakpoints.m}) {\n- width: 100%;\n- float: right;\n-\n- &.style-card-content-right {\n- margin-top: 0;\n- }\n-\n- &:before {\n- display: none;\n- }\n- }\n-`\n-\n-const Description = styled.p`\n- opacity: 0.8;\n-`\n-\n-const Date = styled.p`\n- color: ${(props) => props.theme.colors.primary};\n- margin-bottom: 0;\n- text-align: right;\n-`\n-\n-const Location = styled.p`\n- margin-bottom: 0;\n- text-align: right;\n-`\n-\n-const LocationText = styled.span`\n- opacity: 0.6;\n-`\n-\n-const Title = styled.h3`\n- margin-top: 0;\n-`\n-\nexport interface IProps {\ntitle: string\nto: string\n@@ -120,24 +29,78 @@ const EventCard: React.FC<IProps> = ({\nlocation,\nisEven,\n}) => (\n- <StyledCard className={className}>\n- <StyledCardReference />\n- <StyledCardContent\n- className={isEven ? \"style-card-content-right\" : undefined}\n+ <Box\n+ className={className}\n+ position=\"relative\"\n+ marginTop={{ base: \"30px\", md: 0 }}\n+ _before={clearStyles}\n+ _after={clearStyles}\n>\n- <Date>\n+ <Box\n+ w=\"24px\"\n+ h=\"24px\"\n+ position=\"absolute\"\n+ top=\"0\"\n+ left=\"50%\"\n+ overflow=\"hidden\"\n+ marginLeft=\"-12px\"\n+ backgroundColor=\"primary\"\n+ display={{ base: \"none\", md: \"block\" }}\n+ />\n+ <Box\n+ width={{ base: \"100%\", md: \"45%\" }}\n+ padding={6}\n+ backgroundColor=\"ednBackground\"\n+ borderRadius=\"2px\"\n+ border=\"1px solid\"\n+ borderColor=\"lightBorder\"\n+ float={isEven ? \"right\" : { base: \"right\", md: \"none\" }}\n+ marginTop={isEven ? { base: 0, md: \"-25%\" } : 0}\n+ _before={{\n+ content: '\"\"',\n+ position: \"absolute\",\n+ top: \"10px\",\n+ width: 0,\n+ height: \"3px\",\n+ display: { base: \"none\", md: \"inline\" },\n+ ...(isEven\n+ ? {\n+ left: \"inherit\",\n+ right: \"45%\",\n+ borderLeft: 0,\n+ borderRight: \"25px solid\",\n+ }\n+ : {\n+ left: \"45%\",\n+ borderLeft: \"25px solid\",\n+ borderRight: 0,\n+ }),\n+ borderColor: \"primary\",\n+ }}\n+ >\n+ <Text color=\"primary\" marginBottom={0} textAlign=\"right\">\n{date}\n- <Emoji text=\":spiral_calendar:\" size={1} ml={`0.5em`} />\n- </Date>\n- <Location>\n- <LocationText>{location}</LocationText>\n- <Emoji text=\":round_pushpin:\" size={1} ml={`0.5em`} />\n- </Location>\n- <Title>{title}</Title>\n- <Description>{description}</Description>\n+ <Emoji text=\":spiral_calendar:\" fontSize=\"md\" marginLeft=\"0.5em\" />\n+ </Text>\n+ <Text marginBottom={0} textAlign=\"right\">\n+ <Text as=\"span\" opacity={0.6}>\n+ {location}\n+ </Text>\n+ <Emoji text=\":round_pushpin:\" fontSize=\"md\" marginLeft=\"0.5em\" />\n+ </Text>\n+ <Heading\n+ as=\"h3\"\n+ marginTop={0}\n+ fontSize=\"2xl\"\n+ fontWeight=\"semibold\"\n+ lineHeight={1.4}\n+ >\n+ {title}\n+ </Heading>\n+ <Text opacity={0.8}>{description}</Text>\n<ButtonLink to={to}>View Event</ButtonLink>\n- </StyledCardContent>\n- </StyledCard>\n+ </Box>\n+ </Box>\n)\nexport default EventCard\n",
        "chatgpt_rag": "refactor(embed): update onClick event type in Embed component"
    },
    {
        "msg": "style(webpack_config/server): formatting",
        "diff": "diff --git a/webpack_config/server/webpack.prod.babel.js b/webpack_config/server/webpack.prod.babel.js @@ -17,7 +17,7 @@ const plugins = [\nsourceMap: true,\ncompress: {\nwarnings: false\n- // This option removes console log in production\n+ // This option removes console.log in production\n// drop_console: true\n},\noutput: {\n",
        "date": "14.08.2017 17:12:48",
        "repo": "metnew/suicrux",
        "type": "style",
        "sim_msg": "fix: Maintain translation functions",
        "sim_diff": "diff --git a/webpack.config.js b/webpack.config.js @@ -164,16 +164,7 @@ module.exports = ( env, argv ) => {\nsourceMap: false,\ncache: true,\nterserOptions: {\n- // compress: {\n- // keep_classnames: true,\n- // keep_fnames: true,\n- // },\n- // mangle: {\n- // keep_classnames: true,\n- // keep_fnames: true,\n- // },\n- // keep_classnames: true,\n- // keep_fnames: false,\n+ keep_fnames: /__|sprintf/,\noutput: {\ncomments: /translators:/i,\n},\n",
        "chatgpt_rag": "fix: Update comment for removing console.log in production"
    },
    {
        "msg": "style(pycandela): fix flake8 issues",
        "diff": "diff --git a/python/pycandela/pycandela/__init__.py b/python/pycandela/pycandela/__init__.py @@ -99,11 +99,13 @@ class Component(object):\ndef display(self):\ndisplay(self)\n+\ndef load(filename):\nwith open(filename) as f:\nc = json.load(f)\nreturn Component(c['name'], **c['options'])\n+\nclass ComponentAccessor(object):\ndef __dir__(self):\nreturn _component_list\n",
        "date": "16.05.2018 11:32:15",
        "repo": "kitware/candela",
        "type": "style",
        "sim_msg": "feat(core): expose access to $jsx as Framework7.Component.$jsx",
        "sim_diff": "diff --git a/src/core/modules/component/component-class.js b/src/core/modules/component/component-class.js @@ -5,6 +5,7 @@ import $h from './$h.js';\nimport { id as generateId, merge, eventNameToColonCase, deleteProps } from '../../shared/utils.js';\nimport vdom from './vdom.js';\nimport patch from './patch.js';\n+import $jsx from './$jsx.js';\nclass Component {\nconstructor(app, component, props = {}, { el, context, children } = {}) {\n@@ -338,4 +339,6 @@ class Component {\n}\n}\n+Component.$jsx = $jsx;\n+\nexport default Component;\n",
        "chatgpt_rag": "refactor(pycandela): add load method to Component class and ComponentAccessor class"
    },
    {
        "msg": "test: comply with strict mode",
        "diff": "diff --git a/test/examples/universalBrowser.test.js b/test/examples/universalBrowser.test.js @@ -9,7 +9,7 @@ describe('Rollbar loaded by snippet', function() {\ndocument.write(window.__html__['examples/universal-browser/test.html']);\n// Stub the xhr interface.\n- server = sinon.createFakeServer();\n+ window.server = sinon.createFakeServer();\n// Give the snippet time to load and init.\nsetTimeout(function() {\n@@ -18,10 +18,11 @@ describe('Rollbar loaded by snippet', function() {\n});\nafter(function () {\n- server.restore();\n+ window.server.restore();\n});\nit('should send a valid log event', function(done) {\n+ var server = window.server;\nvar rollbar = document.defaultView.Rollbar;\nserver.respondWith('POST', 'api/1/item',\n@@ -35,7 +36,7 @@ describe('Rollbar loaded by snippet', function() {\nvar ret = rollbar.info('test');\nserver.respond();\n- body = JSON.parse(server.requests[0].requestBody);\n+ var body = JSON.parse(server.requests[0].requestBody);\nexpect(body.access_token).to.eql('POST_CLIENT_ITEM_TOKEN');\nexpect(body.data.uuid).to.eql(ret.uuid);\n",
        "date": "29.03.2019 18:25:22",
        "repo": "rollbar/rollbar.js",
        "type": "test",
        "sim_msg": "test: remove airplane mode from '(re-)activate after restore'",
        "sim_diff": "diff --git a/tests/test_intercept.js b/tests/test_intercept.js @@ -2687,31 +2687,55 @@ test(\"persist reply with file\", function(t) {\n}, t.end.bind(t));\n});\n-test('(re-)activate after restore', {skip: process.env.AIRPLANE}, function(t) {\n- var scope = nock('http://google.com')\n+test('(re-)activate after restore', function(t) {\n+ t.plan(7)\n+\n+ const server = http.createServer((request, response) => {\n+ t.pass('server received a request')\n+\n+ switch (url.parse(request.url).pathname) {\n+ case '/':\n+ response.writeHead(200)\n+ response.write('server served a response')\n+ break\n+ }\n+\n+ response.end()\n+ })\n+\n+ server.listen(() => {\n+ const scope = nock(`http://localhost:${server.address().port}`)\n.get('/')\n- .reply(200, 'Hello, World!');\n+ .reply(304, 'served from our mock')\n- nock.restore();\n- t.false(nock.isActive());\n+ nock.restore()\n+ t.false(nock.isActive())\n+\n+ http.get(`http://localhost:${server.address().port}`, function(res) {\n+ res.resume()\n+\n+ t.is(200, res.statusCode)\n- http.get('http://google.com/', function(res) {\n- res.resume();\nres.on('end', function() {\n- t.ok(!scope.isDone());\n+ t.ok(!scope.isDone())\n+\n+ nock.activate()\n+ t.true(nock.isActive())\n+ http.get(`http://localhost:${server.address().port}`, function(res) {\n+ res.resume()\n+\n+ t.is(304, res.statusCode)\n- nock.activate();\n- t.true(nock.isActive());\n- http.get('http://google.com', function(res) {\n- res.resume();\nres.on('end', function() {\n- t.ok(scope.isDone());\n- t.end();\n- });\n- }).end();\n- });\n- }).end();\n+ t.ok(scope.isDone())\n+\n+ server.close(t.end)\n});\n+ })\n+ })\n+ })\n+ })\n+})\ntest(\"allow unmocked option works with https\", {skip: process.env.AIRPLANE}, function(t) {\nt.plan(5)\n",
        "chatgpt_rag": "test: update server variable declaration in universalBrowser test file"
    },
    {
        "msg": "test(avatar-group): add check for max items",
        "diff": "diff --git a/packages/chakra-ui-core/src/AvatarGroup/tests/AvatarGroup.test.js b/packages/chakra-ui-core/src/AvatarGroup/tests/AvatarGroup.test.js @@ -32,3 +32,9 @@ it('should render correctly', () => {\nconst { asFragment } = renderComponent()\nexpect(asFragment()).toMatchSnapshot()\n})\n+\n+test('renders a number avatar showing count of truncated avatars', () => {\n+ const { getByText } = renderComponent()\n+\n+ getByText('+1')\n+})\n",
        "date": "15.03.2020 20:08:14",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "sim_msg": "test(result): add test scenario for result without attendance and updating snapshot",
        "sim_diff": "diff --git a/packages/yoga/src/Result/native/Result.test.jsx b/packages/yoga/src/Result/native/Result.test.jsx @@ -114,4 +114,17 @@ describe('<Result />', () => {\nexpect(container).toMatchSnapshot();\n});\n+\n+ it('should match snapshot without attendence', () => {\n+ const { container } = render(\n+ <ThemeProvider>\n+ <Result avatar={<Avatar />} title=\"Gym\">\n+ <Result.Details items={entranceList} dots />\n+ <Result.Details items={activitiesList} dots />\n+ </Result>\n+ </ThemeProvider>,\n+ );\n+\n+ expect(container).toMatchSnapshot();\n+ });\n});\n",
        "chatgpt_rag": "test(avatarGroup): add test for rendering a number avatar showing count of truncated avatars and checking if it is displayed correctly"
    },
    {
        "msg": "test: Remove use of underscore",
        "diff": "diff --git a/test/unit.js b/test/unit.js @@ -2133,7 +2133,7 @@ describe('js interface', {\nthis.foo = obj[\"foo\"];\n};\nvar tmp = scm_eval('(js-new \"BiwaScheme.TestForJSNew\" \\'foo (lambda () 4))');\n- expect(_.isFunction(tmp.foo)).should_be(true);\n+ expect(typeof(tmp.foo)).should_be('function');\n},\n'js-null?' : function(){\nev('(js-null? (js-eval \"null\"))').should_be(true);\n",
        "date": "23.06.2020 22:16:31",
        "repo": "biwascheme/biwascheme",
        "type": "test",
        "sim_msg": "fix(operators): Add tests for json response for _js.",
        "sim_diff": "diff --git a/packages/operators/test/common/js.test.js b/packages/operators/test/common/js.test.js @@ -49,6 +49,47 @@ test('_js with code and args specified named function', () => {\nexpect(_js({ location, params: { code: params.code }, methodName: 'evaluate' })).toEqual(null);\n});\n+test('_js with code and args specified to return json object', () => {\n+ const params = {\n+ code: `function (one, two) {\n+ return { a: one, b: two, c: [1,2,3, one, two, \"three\"]};\n+}`,\n+ args: [12, 14],\n+ };\n+ const fn = _js({ location, params, methodName: 'function' });\n+ expect(fn).toBeInstanceOf(Function);\n+ expect(fn(1, 2)).toEqual({ a: 1, b: 2, c: [1, 2, 3, 1, 2, 'three'] });\n+ expect(_js({ location, params, methodName: 'evaluate' })).toEqual({\n+ a: 12,\n+ b: 14,\n+ c: [1, 2, 3, 12, 14, 'three'],\n+ });\n+ expect(_js({ location, params: { code: params.code }, methodName: 'evaluate' })).toEqual({\n+ c: [1, 2, 3, null, null, 'three'],\n+ });\n+});\n+\n+test('_js with code and args specified to return json array', () => {\n+ const params = {\n+ code: `function (one, two) {\n+ return [1,2,3, one, two, \"three\"];\n+}`,\n+ args: [12, 14],\n+ };\n+ const fn = _js({ location, params, methodName: 'function' });\n+ expect(fn).toBeInstanceOf(Function);\n+ expect(fn(1, 2)).toEqual([1, 2, 3, 1, 2, 'three']);\n+ expect(_js({ location, params, methodName: 'evaluate' })).toEqual([1, 2, 3, 12, 14, 'three']);\n+ expect(_js({ location, params: { code: params.code }, methodName: 'evaluate' })).toEqual([\n+ 1,\n+ 2,\n+ 3,\n+ null,\n+ null,\n+ 'three',\n+ ]);\n+});\n+\ntest('_js with undefined result returns null', () => {\nconst params = {\ncode: `function add(one, two) {\n",
        "chatgpt_rag": "test(operators): Add tests for json response for _js."
    },
    {
        "msg": "test(DynamicLinechart): use new update() API",
        "diff": "diff --git a/app/examples/dynamic-linechart/index.js b/app/examples/dynamic-linechart/index.js @@ -12,18 +12,6 @@ class DynamicLineChart extends LineChart {\nsuper.render();\nthis.emit('render');\n}\n-\n- data (data) {\n- this.options.data = data;\n-\n- this.chart.then(chart => {\n- let data = chart.data('data');\n- data.remove(() => true);\n- data.insert(this.options.data);\n-\n- chart.update();\n- });\n- }\n}\nlet data = [];\n@@ -58,7 +46,7 @@ window.onload = () => {\ncounter++;\n- vis.data(data);\n+ vis.update({data});\nvis.render();\n}, 1000);\n",
        "date": "18.05.2017 15:54:35",
        "repo": "kitware/candela",
        "type": "test",
        "sim_msg": "fix(web): ReactiveChart set option provide all options",
        "sim_diff": "diff --git a/packages/web/src/components/chart/ReactiveChart.js b/packages/web/src/components/chart/ReactiveChart.js @@ -253,28 +253,23 @@ class ReactiveChart extends React.Component {\nconst { options, currentValue } = this.state;\nconst { setOption } = this.props;\nconst results = parseHits(hits) || [];\n- if (setOption) {\n- return setOption({\n+ const chartOptions = {\naggregationData: options,\nrawData,\nvalue: currentValue,\ndata: results,\nxAxisField,\nyAxisField,\n- });\n- }\n- return ReactiveChart.getOption({\nchartType,\n- value: currentValue,\n- aggregationData: options,\ntitle,\nlabelFormatter,\nxAxisName,\nyAxisName,\n- xAxisField,\n- yAxisField,\n- data: results,\n- });\n+ };\n+ if (setOption) {\n+ return setOption(chartOptions);\n+ }\n+ return ReactiveChart.getOption(chartOptions);\n};\nhandleRange = (...args) => {\nconst { useAsFilter, onDataZoom } = this.props;\n",
        "chatgpt_rag": "refactor(app): Refactor DynamicLineChart data method to update method"
    },
    {
        "msg": "test(button-group): refactor use screen",
        "diff": "diff --git a/packages/chakra-ui-core/src/CButtonGroup/tests/CButtonGroup.test.js b/packages/chakra-ui-core/src/CButtonGroup/tests/CButtonGroup.test.js import { CButton, CButtonGroup } from '../..'\n-import { render } from '@/tests/test-utils'\n+import { render, screen } from '@/tests/test-utils'\nconst renderComponent = (props) => {\nconst base = {\n@@ -23,7 +23,7 @@ it('should render correctly', () => {\n})\nit('should attach buttons when `is-attached` is passed', () => {\n- const { asFragment, getByText } = renderComponent({\n+ const { asFragment } = renderComponent({\ntemplate: `\n<CButtonGroup isAttached>\n<CButton>Button1</CButton>\n@@ -31,13 +31,13 @@ it('should attach buttons when `is-attached` is passed', () => {\n</CButtonGroup>`\n})\n- const button = getByText('Button1')\n+ const button = screen.getByText('Button1')\nexpect(button).toHaveStyle('border-top-right-radius: 0; border-bottom-right-radius: 0;')\nexpect(asFragment()).toMatchSnapshot()\n})\nit('should display children', () => {\n- const { getByText } = renderComponent()\n- expect(getByText('Button1')).toBeInTheDocument()\n- expect(getByText('Button2')).toBeInTheDocument()\n+ renderComponent()\n+ expect(screen.getByText('Button1')).toBeInTheDocument()\n+ expect(screen.getByText('Button2')).toBeInTheDocument()\n})\n",
        "date": "12.07.2020 16:09:03",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "sim_msg": "feat(Root): add test",
        "sim_diff": "diff --git a/test/molecule/buttonGroupField/index.js b/test/molecule/buttonGroupField/index.js +/* global MoleculeButtonGroupField */\n+\nimport React from 'react'\n+import {render, getByText} from '@testing-library/react'\nimport chai, {expect} from 'chai'\nimport chaiDOM from 'chai-dom'\n-import {render} from '@testing-library/react'\nchai.use(chaiDOM)\n-describe('MoleculeButtonGroupField', () => {\n- it('Render', () => {\n- render(<MoleculeButtonGroupField />)\n- expect(true).to.be.eql(false)\n+const moleculeButtonGroupTestId = 'testId'\n+const label = 'Test Label'\n+const help = 'Test description here'\n+const success = 'Test Everything ok!'\n+const error = 'Test All wrong!'\n+const alert = 'Test Alert!!!'\n+\n+const createComponent = props => {\n+ return (\n+ <MoleculeButtonGroupField\n+ id={moleculeButtonGroupTestId}\n+ label={label}\n+ {...props}\n+ >\n+ <>\n+ <div>BUTTON 1</div>\n+ <div>BUTTON 2</div>\n+ </>\n+ </MoleculeButtonGroupField>\n+ )\n+}\n+\n+describe('SUI - MoleculeButtonGroupField', () => {\n+ it('User can see a label before button group', () => {\n+ const component = createComponent({helpTest: help})\n+ const {container} = render(component)\n+ const expectedLabel = getByText(container, label)\n+ expect(expectedLabel).to.be.exist\n+ })\n+\n+ it('User can see successHelpText after button group', () => {\n+ const component = createComponent({successText: success})\n+ const {container} = render(component)\n+ const expectedSuccessText = getByText(container, success)\n+ expect(expectedSuccessText).to.be.exist\n+ })\n+\n+ it('User can see errorHelpText after button group', () => {\n+ const component = createComponent({errorText: error})\n+ const {container} = render(component)\n+ const expectedErrorText = getByText(container, error)\n+ expect(expectedErrorText).to.be.exist\n+ })\n+\n+ it('User can see alertHelpText after button group', () => {\n+ const component = createComponent({alertText: alert})\n+ const {container} = render(component)\n+ const expectedAlertText = getByText(container, alert)\n+ expect(expectedAlertText).to.be.exist\n})\n})\n",
        "chatgpt_rag": "fix(Chakra-UI): update CButtonGroup test to use screen utility from testing-library/react"
    },
    {
        "msg": "test: Add link to Webkit bug to tests",
        "diff": "diff --git a/test/trickle.js b/test/trickle.js @@ -14,7 +14,8 @@ test('get config', function (t) {\ntest('disable trickle', function (t) {\nif (bowser.safari || bowser.ios) {\n- t.pass('Skip on Safari and iOS which do not support this reliably, it seems')\n+ // Note: Webkit bug filed here: https://bugs.webkit.org/show_bug.cgi?id=182906\n+ t.pass('Skip on Safari and iOS which do not support this reliably')\nt.end()\nreturn\n}\n@@ -64,7 +65,8 @@ test('disable trickle', function (t) {\ntest('disable trickle (only initiator)', function (t) {\nif (bowser.safari || bowser.ios) {\n- t.pass('Skip on Safari and iOS which do not support this reliably, it seems')\n+ // Note: Webkit bug filed here: https://bugs.webkit.org/show_bug.cgi?id=182906\n+ t.pass('Skip on Safari and iOS which do not support this reliably')\nt.end()\nreturn\n}\n@@ -114,7 +116,8 @@ test('disable trickle (only initiator)', function (t) {\ntest('disable trickle (only receiver)', function (t) {\nif (bowser.safari || bowser.ios) {\n- t.pass('Skip on Safari and iOS which do not support this reliably, it seems')\n+ // Note: Webkit bug filed here: https://bugs.webkit.org/show_bug.cgi?id=182906\n+ t.pass('Skip on Safari and iOS which do not support this reliably')\nt.end()\nreturn\n}\n",
        "date": "19.02.2018 15:04:02",
        "repo": "feross/simple-peer",
        "type": "test",
        "sim_msg": "test: remove airplane dependency for 'tests/test_back#L154'",
        "sim_diff": "diff --git a/tests/test_back.js b/tests/test_back.js @@ -151,30 +151,32 @@ tap.test('nockBack dryrun tests', function (nw) {\nnockBack.fixtures = __dirname + '/fixtures';\nnockBack.setMode('dryrun');\n- nw.test('goes to internet even when no nockBacks are running', {skip: process.env.AIRPLANE}, function(t) {\n- var req = http.request({\n- host: \"www.amazon.com\"\n- , path: '/'\n- , port: 80\n- }, function(res) {\n+ nw.test('goes to internet even when no nockBacks are running', function(t) {\n- res.on('data', function() {\n- //node v 0.10 requires this listener\n- });\n- t.ok([200, 301, 302].indexOf(res.statusCode) >= 0);\n- t.end();\n+ t.plan(2);\n+\n+ const server = http.createServer((request, response) => {\n+ t.pass('server received a request');\n+ response.writeHead(200);\n+ response.end();\n});\n- req.on('error', function(err) {\n+ server.listen(() => {\n+ const request = http.request({\n+ host: 'localhost',\n+ path: '/',\n+ port: server.address().port\n+ }, response => {\n+ t.is(200, response.statusCode);\n- // This should never happen.\n- t.assert(false);\n- t.end();\n+ server.close(t.end);\n+ });\n+ request.on('error', t.error);\n+ request.end();\n});\n- req.end();\n});\nnw.test('normal nocks work', function (t) {\n",
        "chatgpt_rag": "test: add note about Webkit bug for Safari and iOS in 'test/trickle.js'"
    },
    {
        "msg": "test: add autocomplete highlight-first-item\nadd unit test for",
        "diff": "diff --git a/test/unit/specs/autocomplete.spec.js b/test/unit/specs/autocomplete.spec.js @@ -570,4 +570,54 @@ describe('Autocomplete', () => {\ndone();\n});\n});\n+ it('can highlight first item', done => {\n+ vm = createVue({\n+ template: `\n+ <el-autocomplete\n+ ref=\"autocomplete\"\n+ v-model=\"state\"\n+ :fetch-suggestions=\"querySearch\"\n+ highlight-first-item\n+ ></el-autocomplete>\n+ `,\n+ data() {\n+ return {\n+ restaurants: [],\n+ state: ''\n+ };\n+ },\n+ methods: {\n+ querySearch(queryString, cb) {\n+ const opts = [\n+ { 'value': '1' },\n+ { 'value': '11' },\n+ { 'value': '2' },\n+ { 'value': '22' }\n+ ];\n+ cb(\n+ queryString\n+ ? opts.filter(opt => opt.value.indexOf(queryString) >= 0)\n+ : opts\n+ );\n+ }\n+ }\n+ }, true);\n+ let elm = vm.$el;\n+ let inputElm = elm.querySelector('input');\n+ inputElm.focus();\n+\n+ const autocomplete = vm.$refs.autocomplete;\n+ const input = autocomplete.$refs.input;\n+ input.$emit('input', '1');\n+\n+ setTimeout(_ => {\n+ const suggestions = vm.$refs.autocomplete.$refs.suggestions.$el;\n+ const items = suggestions.querySelectorAll('.el-autocomplete-suggestion__list li');\n+\n+ expect(items.length).to.equal(2);\n+ expect(items[0].classList.contains('highlighted')).to.be.true;\n+\n+ done();\n+ }, 500);\n+ });\n});\n",
        "date": "14.02.2019 20:30:57",
        "repo": "hug-sun/element3",
        "type": "test",
        "sim_msg": "test(autocomplete): add unit test for onSelect event",
        "sim_diff": "diff --git a/packages/yoga/src/AutoComplete/web/AutoComplete.test.jsx b/packages/yoga/src/AutoComplete/web/AutoComplete.test.jsx @@ -83,6 +83,8 @@ describe('<AutoComplete />', () => {\ndescribe('Event listeners', () => {\nit('should call onChangeMock', () => {\nconst onChangeMock = jest.fn();\n+ const onCleanMock = jest.fn();\n+ const onSelectMock = jest.fn();\nconst { getByDisplayValue } = render(\n<ThemeProvider>\n@@ -97,10 +99,14 @@ describe('<AutoComplete />', () => {\nfireEvent.change(getByDisplayValue('New'), { target: { value: 'a' } });\nexpect(onChangeMock).toHaveBeenCalled();\n+ expect(onSelectMock).not.toHaveBeenCalled();\n+ expect(onCleanMock).not.toHaveBeenCalled();\n});\nit('should call onCleanMock', () => {\nconst onCleanMock = jest.fn();\n+ const onSelectMock = jest.fn();\n+ const onChangeMock = jest.fn();\nconst { getByDisplayValue, getByRole } = render(\n<ThemeProvider>\n@@ -108,6 +114,8 @@ describe('<AutoComplete />', () => {\nvalue=\"New\"\noptions={['New York']}\nonClean={onCleanMock}\n+ onSelect={onSelectMock}\n+ onChange={onChangeMock}\n/>\n</ThemeProvider>,\n);\n@@ -116,6 +124,33 @@ describe('<AutoComplete />', () => {\nfireEvent.click(getByRole('button'));\nexpect(onCleanMock).toHaveBeenCalledWith('');\n+ expect(onSelectMock).not.toHaveBeenCalled();\n+ expect(onChangeMock).toHaveBeenCalled();\n+ });\n+\n+ it('should call onSelectMock', () => {\n+ const onSelectMock = jest.fn();\n+ const onCleanMock = jest.fn();\n+ const onChangeMock = jest.fn();\n+\n+ const { getByDisplayValue, getByRole } = render(\n+ <ThemeProvider>\n+ <AutoComplete\n+ value=\"New\"\n+ options={['New York']}\n+ onSelect={onSelectMock}\n+ onClean={onCleanMock}\n+ onChange={onChangeMock}\n+ />\n+ </ThemeProvider>,\n+ );\n+\n+ fireEvent.focus(getByDisplayValue('New'));\n+ fireEvent.click(getByRole('option'));\n+\n+ expect(onSelectMock).toHaveBeenCalledWith('New York');\n+ expect(onCleanMock).not.toHaveBeenCalled();\n+ expect(onChangeMock).toHaveBeenCalled();\n});\n});\n});\n",
        "chatgpt_rag": "test(autocomplete): add unit test for highlighting first item in autocomplete suggestions"
    },
    {
        "msg": "test(stat): refactor use screen",
        "diff": "diff --git a/packages/chakra-ui-core/src/CStat/tests/CStat.test.js b/packages/chakra-ui-core/src/CStat/tests/CStat.test.js import { CStat, CStatLabel, CStatNumber, CStatHelperText, CStatArrow } from '..'\n-import { render } from '@/tests/test-utils'\n+import { render, screen } from '@/tests/test-utils'\nconst renderComponent = (props) => {\nconst base = {\n@@ -22,8 +22,8 @@ it('should render correctly', () => {\n})\nit('should render children in DOM', () => {\n- const { getByText } = renderComponent()\n- expect(getByText('Collected Fees')).toBeInTheDocument()\n+ renderComponent()\n+ expect(screen.getByText('Collected Fees')).toBeInTheDocument()\n})\ntest('\"CStatArrow\" should display corresponding icon for \"type\" prop', () => {\n",
        "date": "12.07.2020 16:50:53",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "sim_msg": "chore(test): write test for card renderer",
        "sim_diff": "diff --git a/src/components/Dashboard/Dashboard.test.jsx b/src/components/Dashboard/Dashboard.test.jsx @@ -2,7 +2,7 @@ import { mount } from 'enzyme';\nimport React from 'react';\nimport Add from '@carbon/icons-react/lib/add/20';\nimport { iconCrash } from 'carbon-icons';\n-import { render, fireEvent } from '@testing-library/react';\n+import { render, fireEvent, getBy } from '@testing-library/react';\nimport { CARD_SIZES, CARD_TYPES, COLORS } from '../../constants/LayoutConstants';\nimport { tableColumns, tableData } from '../../utils/sample';\n@@ -184,35 +184,6 @@ describe('Dashboard testcases', () => {\nawait loadCardData(state, setCard, onFetchData, 'month');\nexpect(state.hasLoaded).toEqual(true);\n- wrapper = mount(\n- <Dashboard\n- title=\"My Dashboard\"\n- layouts={{ lg: [{ id: 'bogus', x: 0, y: 0 }] }}\n- actions={[\n- { id: 'edit', labelText: 'Edit', icon: 'edit' },\n- { id: 'crash', labelText: 'Crash', icon: iconCrash },\n- { id: 'expand', labelText: 'Expand', icon: iconCrash },\n- ]}\n- cards={[\n- {\n- ...cardValues[3],\n- content: {\n- alt: 'Floor Map',\n- image: 'firstfloor',\n- src: null,\n- },\n- isLoading: true,\n- },\n- ]}\n- onDashboardAction={onClick}\n- hasLastUpdated={false}\n- />\n- );\n-\n- // wrapper\n- // .find('Button')\n- // .at(0)\n- // .simulate('click');\nconst { getByTitle } = render(\n<Dashboard\ntitle=\"My Dashboard\"\n@@ -238,6 +209,7 @@ describe('Dashboard testcases', () => {\n/>\n);\nfireEvent.click(getByTitle('Expand to fullscreen'));\n+ expect(getBy('.bx--modal.is-visible')).toBeTruthy();\nfireEvent.click(getByTitle('Close'));\n});\n});\n",
        "chatgpt_rag": "test: add screen to test-utils for CStat test"
    },
    {
        "msg": "test(tag): refactor use screen",
        "diff": "diff --git a/packages/chakra-ui-core/src/CTag/tests/CTag.test.js b/packages/chakra-ui-core/src/CTag/tests/CTag.test.js import { CBox, CTag, CTagLabel, CTagIcon, CTagCloseButton, CAvatar } from '../..'\n-import { render } from '@/tests/test-utils'\n+import { render, screen } from '@/tests/test-utils'\nconst renderComponent = (props) => {\nconst base = {\n@@ -22,9 +22,9 @@ it('should render correctly', () => {\n})\nit('should display children', () => {\n- const { getByText } = renderComponent()\n+ renderComponent()\n- expect(getByText('Green')).toBeInTheDocument()\n+ expect(screen.getByText('Green')).toBeInTheDocument()\n})\nit('should display tag with right icon', () => {\n@@ -35,8 +35,7 @@ it('should display tag with right icon', () => {\n<CTagLabel>Green</CTagLabel>\n<CTagIcon icon=\"add\" size=\"12px\" />\n</CTag>\n- </CBox>\n- `\n+ </CBox>`\n})\nexpect(asFragment()).toMatchSnapshot()\n})\n@@ -52,8 +51,7 @@ it('should display tag with custom element', () => {\n/>\n<CTagLabel>Mesut</CTagLabel>\n</CTag>\n- </CBox>\n- `\n+ </CBox>`\n})\nexpect(asFragment()).toMatchSnapshot()\n})\n",
        "date": "12.07.2020 17:04:43",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "sim_msg": "test(Tag): rewrite to testing library",
        "sim_diff": "diff --git a/packages/orbit-components/src/Tag/__tests__/index.test.js b/packages/orbit-components/src/Tag/__tests__/index.test.js // @flow\nimport * as React from \"react\";\n-import { shallow } from \"enzyme\";\n+import { render, screen } from \"@testing-library/react\";\n+import userEvent from \"@testing-library/user-event\";\nimport Tag from \"../index\";\n-import Bus from \"../../icons/Bus\";\ndescribe(\"Tag\", () => {\n+ it(\"should have expected DOM output\", () => {\nconst content = \"Brno\";\nconst dataTest = \"test\";\nconst onRemove = jest.fn();\nconst onClick = jest.fn();\n- const selected = true;\n- const icon = <Bus />;\n- const component = shallow(\n- <Tag selected={selected} icon={icon} dataTest={dataTest} onRemove={onRemove} onClick={onClick}>\n+ render(\n+ <Tag selected dataTest={dataTest} onRemove={onRemove} onClick={onClick}>\n{content}\n</Tag>,\n);\n- it(\"the onRemove should be called\", () => {\n- const CloseContainer = component.find(\"Tag__CloseContainer\");\n- CloseContainer.simulate(\"click\", { stopPropagation() {} });\n- expect(onRemove).toHaveBeenCalled();\n- });\n-\n- it(\"the onClick should be called\", () => {\n- component.simulate(\"click\");\n+ expect(screen.getByTestId(dataTest)).toBeInTheDocument();\n+ const tag = screen.getByRole(\"button\", { name: content });\n+ userEvent.click(tag);\nexpect(onClick).toHaveBeenCalled();\n- });\n-\n- it(\"should have passed props\", () => {\n- expect(component.render().prop(\"data-test\")).toBe(dataTest);\n- });\n- it(\"should contain a content\", () => {\n- expect(component.render().text()).toBe(content);\n- });\n- it(\"should contain a icon\", () => {\n- expect(component.find(\"Bus\").exists()).toBe(true);\n+ userEvent.click(screen.getByRole(\"button\", { name: \"close\" }));\n+ expect(onRemove).toHaveBeenCalled();\n+ expect(screen.getByText(content)).toBeInTheDocument();\n});\n});\n",
        "chatgpt_rag": "test(CTag): rewrite to testing library and update render function to use screen instead of getByText"
    },
    {
        "msg": "test(alert): add a11y test to alert component",
        "diff": "diff --git a/packages/chakra-ui-core/src/Alert/tests/Alert.test.js b/packages/chakra-ui-core/src/Alert/tests/Alert.test.js @@ -43,3 +43,14 @@ it('should override icon if set explicitly', () => {\nexpect(asFragment()).toMatchSnapshot()\n})\n+\n+it('should have role=alert', () => {\n+ const { getByRole } = renderComponent({\n+ template: `\n+ <Alert status=\"error\">\n+ <AlertIcon name=\"add\" />\n+ </Alert>`\n+ })\n+\n+ getByRole('alert')\n+})\n",
        "date": "15.03.2020 20:07:02",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "sim_msg": "fix(ui5-icon): correct tabindex value",
        "sim_diff": "diff --git a/packages/main/src/Icon.js b/packages/main/src/Icon.js @@ -219,13 +219,13 @@ class Icon extends UI5Element {\nthis.createGlobalStyle(); // hide all icons until the first icon has rendered (and added the Icon.css)\n}\n- _onfocusin(event) {\n+ _onFocusInHandler(event) {\nif (this.interactive) {\nthis.focused = true;\n}\n}\n- _onfocusout(event) {\n+ _onFocusOutHandler(event) {\nthis.focused = false;\n}\n@@ -280,7 +280,7 @@ class Icon extends UI5Element {\n}\nget tabIndex() {\n- return this.interactive ? \"0\" : \"-1\";\n+ return this.interactive ? \"0\" : undefined;\n}\nget isDecorative() {\n@@ -348,6 +348,8 @@ class Icon extends UI5Element {\nthis.packageName = iconData.packageName;\nthis._onclick = this.interactive ? this._onClickHandler.bind(this) : undefined;\n+ this._onfocusout = this.interactive ? this._onFocusOutHandler.bind(this) : undefined;\n+ this._onfocusin = this.interactive ? this._onFocusInHandler.bind(this) : undefined;\nif (this.accessibleName) {\nthis.effectiveAccessibleName = this.accessibleName;\n",
        "chatgpt_rag": "feat(chakra-ui-core): add test for role=alert in Alert component"
    },
    {
        "msg": "test(code): refactor to screen",
        "diff": "diff --git a/packages/chakra-ui-core/src/CCode/tests/CCode.test.js b/packages/chakra-ui-core/src/CCode/tests/CCode.test.js import CCode from '..'\n-import { render } from '@/tests/test-utils'\n+import { render, screen } from '@/tests/test-utils'\nconst renderComponent = (props) => {\nconst base = {\n@@ -16,7 +16,7 @@ it('should render correctly', () => {\n})\nit('should display children', () => {\n- const { getByText } = renderComponent()\n+ renderComponent()\n- expect(getByText('content')).toBeInTheDocument()\n+ expect(screen.getByText('content')).toBeInTheDocument()\n})\n",
        "date": "06.07.2020 23:32:35",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "sim_msg": "test(components/molecule/validationCode): Added test cases",
        "sim_diff": "diff --git a/components/molecule/validationCode/test/index.test.js b/components/molecule/validationCode/test/index.test.js @@ -9,14 +9,17 @@ import ReactDOM from 'react-dom'\nimport chai, {expect} from 'chai'\nimport chaiDOM from 'chai-dom'\n+import userEvents from '@testing-library/user-event'\nimport Component from '../src/index'\n+import sinon from 'sinon'\n+import {fireEvent} from '@testing-library/react'\nchai.use(chaiDOM)\ndescribe('MoleculeValidationCode', () => {\nconst setup = setupEnvironment(Component)\n- it.skip('should render without crashing', () => {\n+ it('should render without crashing', () => {\n// Given\nconst props = {}\n@@ -29,7 +32,7 @@ describe('MoleculeValidationCode', () => {\nReactDOM.unmountComponentAtNode(div)\n})\n- it.skip('should NOT render null', () => {\n+ it('should NOT render null', () => {\n// Given\nconst props = {}\n@@ -40,4 +43,77 @@ describe('MoleculeValidationCode', () => {\nexpect(container.innerHTML).to.be.a('string')\nexpect(container.innerHTML).to.not.have.lengthOf(0)\n})\n+\n+ it('should render the statusMessage', () => {\n+ // Given\n+ const props = {\n+ statusMessage: 'Error',\n+ status: 'error'\n+ }\n+\n+ // When\n+ const {getByText} = setup(props)\n+ const statusText = getByText(props.statusMessage).innerText\n+\n+ // Then\n+ expect(statusText).to.be.equal(props.statusMessage)\n+ })\n+\n+ it('should format to string if value is an array', () => {\n+ // Given\n+ const props = {\n+ value: [1, 2, 3, 4, 5]\n+ }\n+\n+ const {getByDisplayValue} = setup(props)\n+\n+ // Then\n+ props.value.map(value => {\n+ const input = getByDisplayValue(value)\n+ expect(input).to.exist\n+ })\n+ })\n+\n+ it('should clear value', () => {\n+ // Given\n+ const spy = sinon.spy()\n+ const props = {\n+ value: '123456',\n+ deleteButtonTextLabel: 'Clear',\n+ onClear: spy,\n+ onChange: () => {}\n+ }\n+\n+ // When\n+ const {getByDisplayValue, debug, getByText, rerender} = setup(props)\n+\n+ // Then\n+ const input = getByDisplayValue(props.value)\n+ expect(input.value).to.exist\n+\n+ // And\n+ // When\n+ const deleteButton = getByText(props.deleteButtonTextLabel)\n+ userEvents.click(deleteButton)\n+ // Then\n+ sinon.assert.called(spy)\n+ })\n+\n+ it('resend button should work', () => {\n+ // Given\n+ const props = {\n+ value: '12345',\n+ resendButtonTextLabel: 'Resend',\n+ onResend: () => {}\n+ }\n+\n+ // When\n+ const {getByText, rerender, getByDisplayValue} = setup(props)\n+ // Then\n+ const resendButton = getByText(props.resendButtonTextLabel)\n+ expect(resendButton).to.exist\n+\n+ // When\n+ userEvents.click(resendButton)\n+ })\n})\n",
        "chatgpt_rag": "test(chakra-ui-core): Updated CCode test to use screen utility from test-utils"
    },
    {
        "msg": "test(cli): Added CLI unit test for --global-var option handling",
        "diff": "diff --git a/test/unit/cli.test.js b/test/unit/cli.test.js @@ -142,6 +142,24 @@ describe('cli parser', function () {\n});\n});\n+ describe('--global-var', function () {\n+ it('should throw an error for missing --global-var values', function (done) {\n+ cli.rawOptions('run myCollection.json --global-var'.split(' '), 'newmantests', function (err) {\n+ expect(err.code).to.equal('ARGError');\n+\n+ done();\n+ });\n+ });\n+\n+ it('should throw an error for --global-var values without an `=`', function (done) {\n+ cli.rawOptions('run myCollection.json --global-var foo'.split(' '), 'newmantests', function (err) {\n+ expect(err.code).to.equal('ARGError');\n+\n+ done();\n+ });\n+ });\n+ });\n+\nit('should load all arguments (except reporters)', function (done) {\ncli.rawOptions(('run ' +\n'myCollection.json ' +\n@@ -154,6 +172,7 @@ describe('cli parser', function () {\n'--reporter-cli-no-summary ' +\n'--iteration-count 23 ' +\n'--reporters json,html ' +\n+ '--global-var foo=bar --global-var alpha==beta= ' +\n'--no-color ' +\n'--delay-request 12000 ' +\n'--timeout-request 5000 ' +\n@@ -183,6 +202,11 @@ describe('cli parser', function () {\nexpect(opts.reporters).to.contain('html');\nexpect(opts.reporters).to.not.contain('junit');\n+ expect(opts.globalVar).to.eql([\n+ { key: 'foo', value: 'bar' },\n+ { key: 'alpha', value: '=beta=' }\n+ ]);\n+\nexpect(opts.bail).to.be(true);\nexpect(opts.suppressExitCode).to.be(true);\n@@ -208,6 +232,7 @@ describe('cli parser', function () {\n'--timeout-request 5000 ' +\n'--ignore-redirects ' +\n'-k ' +\n+ '--global-var foo=bar --global-var alpha==beta= ' +\n'--reporter-json-output ./omg.txt ' +\n'--reporter-html-output report.html ' +\n'--reporter-html-template ./mytemplate.html ' +\n@@ -231,6 +256,11 @@ describe('cli parser', function () {\nexpect(opts.ignoreRedirects).to.be(true);\nexpect(opts.insecure).to.be(true);\n+ expect(opts.globalVar).to.eql([\n+ { key: 'foo', value: 'bar' },\n+ { key: 'alpha', value: '=beta=' }\n+ ]);\n+\nexpect(opts.noColor).to.be(true);\nexpect(opts.reporters).to.contain('json');\n",
        "date": "24.07.2017 14:35:30",
        "repo": "postmanlabs/newman",
        "type": "test",
        "sim_msg": "test(utilities): refactor `forEach` to `it.each` and add more cases",
        "sim_diff": "diff --git a/test/utilities.test.js b/test/utilities.test.js @@ -8,46 +8,47 @@ const {\ndescribe('utilities', () => {\ndescribe('camelCase', () => {\n- [undefined, null, 1337, {}, []].forEach(value => {\n- it(`throws an error if first argument is ${value}`, () => {\n+ it.each([undefined, null, {}, [], 0, 1, () => {}, new Date()])(\n+ 'throws an error if first argument is %p',\n+ input => {\nexpect(() => {\n- camelCase(value);\n+ camelCase(input);\n}).toThrow(TypeError);\n- });\n- });\n+ }\n+ );\n- it('does not modify string if it does not need to be camelCased', () => {\n- [\n+ it.each([\n['', ''],\n['foo', 'foo'],\n['fooBar', 'fooBar'],\n['--fooBar', '--fooBar'],\n['--foo-bar', '--foo-bar'],\n['--foo-100', '--foo-100']\n- ].forEach(testCase => {\n- expect(camelCase(testCase[0])).toBe(testCase[1]);\n- });\n- });\n+ ])(\n+ 'does not modify string if it does not need to be camelCased',\n+ (input, expected) => {\n+ expect(camelCase(input)).toBe(expected);\n+ }\n+ );\n- it('camelCases a string', () => {\n- [\n+ it.each([\n['foo-bar', 'fooBar'],\n['foo-bar-baz', 'fooBarBaz'],\n['CAMEL-CASE', 'camelCase']\n- ].forEach(testCase => {\n- expect(camelCase(testCase[0])).toBe(testCase[1]);\n- });\n+ ])('camelCases a string', (input, expected) => {\n+ expect(camelCase(input)).toBe(expected);\n});\n});\ndescribe('invertObject', () => {\n- [undefined, null, 'foo', 1337].forEach(value => {\n- it(`throws an error if the first argument is ${value}`, () => {\n+ it.each([undefined, null, 'string', 0, 1, () => {}])(\n+ `throws an error if the first argument is %p`,\n+ input => {\nexpect(() => {\n- invertObject(value);\n+ invertObject(input);\n}).toThrow(TypeError);\n- });\n- });\n+ }\n+ );\nit('swaps key with value', () => {\nexpect(\n",
        "chatgpt_rag": "test(cli parser): add tests for --global-var flag with missing values and values without '='"
    },
    {
        "msg": "test: Add a test for strict mode with `Collapse`",
        "diff": "diff --git a/src/__tests__/Collapse.spec.js b/src/__tests__/Collapse.spec.js @@ -32,6 +32,13 @@ describe('Collapse', () => {\nexpect(wrapper.find('p').text()).toBe('hello');\n});\n+ it('works with strict mode', () => {\n+ const spy = jest.spyOn(console, 'error');\n+ wrapper = mount(<React.StrictMode><Collapse/></React.StrictMode>);\n+ expect(wrapper.instance()).toBeTruthy();\n+ expect(spy).not.toHaveBeenCalled();\n+ })\n+\nit('should have default isOpen value', () => {\nwrapper = shallow(<Collapse />);\nexpect(wrapper.instance().props.isOpen).toEqual(false);\n",
        "date": "21.10.2020 15:55:12",
        "repo": "reactstrap/reactstrap",
        "type": "test",
        "sim_msg": "test(Collapse): add test case",
        "sim_diff": "diff --git a/test/collapse/index-spec.js b/test/collapse/index-spec.js @@ -67,6 +67,27 @@ describe('Collapse', () => {\nassert(wrapper.find('.next-collapse-panel-expanded').length === 1);\n});\n+ it('Should expanded by space key', () => {\n+ const collapse = (<Collapse id=\"test-id\">\n+ <Panel title=\"Pannel Title1\">\n+ Pannel Content1\n+ </Panel>\n+ <Panel title=\"Pannel Title2\">\n+ Pannel Content2\n+ </Panel>\n+ <Panel title=\"Pannel Title3\">\n+ Pannel Content3\n+ </Panel>\n+ </Collapse>);\n+ const wrapper = mount(collapse);\n+\n+ wrapper.find('.next-collapse-panel-title').first().simulate('keyDown', {keyCode: 32});\n+ assert(wrapper.find('.next-collapse-panel-expanded').length === 1);\n+ wrapper.find('.next-collapse-panel-title').at(1).simulate('keyDown', {keyCode: 32});\n+ assert(wrapper.find('.next-collapse-panel-expanded').length === 2);\n+ wrapper.find('.next-collapse-panel-title').at(1).simulate('keyDown', {keyCode: 32});\n+ assert(wrapper.find('.next-collapse-panel-expanded').length === 1);\n+ });\nit('should support accordion', () => {\nconst collapse = (<Collapse accordion>\n<Panel title=\"Pannel Title1\">\n@@ -146,4 +167,36 @@ describe('Collapse', () => {\ndone();\n});\n});\n+ describe('panel', () => {\n+ it('id should be auto add', (done) => {\n+ const collapse = (<Collapse>\n+ <Panel id=\"test-id-1\" title=\"Pannel Title\">\n+ Pannel Content\n+ </Panel>\n+ </Collapse>);\n+ const wrapper = mount(collapse);\n+ assert(wrapper.find(\"#test-id-1-heading\").length === 1);\n+ assert(wrapper.find(\"#test-id-1-region\").length === 1);\n+ done();\n+ });\n+ it('all id should be auto add', (done) => {\n+ const collapse = (<Collapse id=\"test-id-2\">\n+ <Panel title=\"Pannel Title 1\">\n+ Pannel Content\n+ </Panel>\n+ <Panel title=\"Pannel Title 2\">\n+ Pannel Content\n+ </Panel>\n+ </Collapse>);\n+ const wrapper = mount(collapse);\n+\n+ assert(wrapper.find(\".next-collapse#test-id-2\").length === 1);\n+ const panels = wrapper.find(\".next-collapse-panel\");\n+ assert(panels.length === 2);\n+ assert(panels.at(0).getDOMNode().id);\n+ assert(panels.at(1).getDOMNode().id);\n+ done();\n+ });\n+ });\n+\n});\n",
        "chatgpt_rag": "test(Collapse): add test case for strict mode usage"
    },
    {
        "msg": "test: fix repeatClick path",
        "diff": "diff --git a/test/unit/tests/directives/repeatClick.test.js b/test/unit/tests/directives/repeatClick.test.js import { mount } from '@vue/test-utils'\n-import repeatClick from '../../../../src/directives/new-repeat-click'\n+import repeatClick from '../../../../src/directives/repeatClick'\ndescribe('directives: repeat-click', () => {\ntest('should called repeat click callback when emitted mousedown event ', (done) => {\nconst handleRepeatClick = jest.fn()\n",
        "date": "08.08.2020 20:58:14",
        "repo": "hug-sun/element3",
        "type": "test",
        "sim_msg": "test: fix test case for",
        "sim_diff": "diff --git a/test/unit/features/directives/bind.spec.js b/test/unit/features/directives/bind.spec.js @@ -168,20 +168,25 @@ describe('Directive v-bind', () => {\nit('.sync modifier with kebab case event', done => {\nconst vm = new Vue({\n- template: `<test :foo-bar.sync=\"bar\"/>`,\n+ template: `<test ref=\"test\" :foo-bar.sync=\"bar\"/>`,\ndata: {\nbar: 1\n},\ncomponents: {\ntest: {\nprops: ['fooBar'],\n- template: `<div @click=\"$emit('update:foo-bar', 2)\">{{ fooBar }}</div>`\n+ template: `<div>{{ fooBar }}</div>`,\n+ methods: {\n+ update () {\n+ this.$emit('update:foo-bar', 2)\n+ }\n+ }\n}\n}\n}).$mount()\nexpect(vm.$el.textContent).toBe('1')\n- triggerEvent(vm.$el, 'click')\n+ vm.$refs.test.update()\nwaitForUpdate(() => {\nexpect(vm.$el.textContent).toBe('2')\n}).then(done)\n",
        "chatgpt_rag": "test: fix import path for repeatClick directive"
    },
    {
        "msg": "test: update description for test package",
        "diff": "diff --git a/tests/package.json b/tests/package.json {\n\"name\": \"tests\",\n\"version\": \"0.0.0\",\n- \"description\": \"Candela unit tests\",\n+ \"description\": \"Candela unit/coverage/image tests\",\n\"scripts\": {\n\"build:unit\": \"webpack\",\n\"build:coverage\": \"webpack --config webpack-coverage.config.js\",\n",
        "date": "06.06.2017 17:41:25",
        "repo": "kitware/candela",
        "type": "test",
        "sim_msg": "chore: Ignore file in coverage",
        "sim_diff": "diff --git a/packages/test-utils/package.json b/packages/test-utils/package.json \"testEnvironment\": \"node\",\n\"snapshotSerializers\": [\n\"enzyme-to-json/serializer\"\n- ]\n+ ],\n+ \"coveragePathIgnorePatterns\": [\"src/mock-native-modules.js\"]\n},\n\"repository\": {\n\"type\": \"git\",\n",
        "chatgpt_rag": "chore: Update description in package.json for Candela unit/coverage/image tests"
    },
    {
        "msg": "test(stack): refactor use screen",
        "diff": "diff --git a/packages/chakra-ui-core/src/CStack/tests/CStack.test.js b/packages/chakra-ui-core/src/CStack/tests/CStack.test.js import { CStack, CBox, CHeading, CText } from '../..'\n-import { render, getTagName } from '@/tests/test-utils'\n+import { render, getTagName, screen } from '@/tests/test-utils'\nconst renderComponent = (props) => {\nconst inlineAttrs = (props && props.inlineAttrs) || ''\n@@ -27,22 +27,22 @@ it('should render correctly', () => {\n})\nit('should default to vertical stack', () => {\n- const { getByTestId } = renderComponent()\n- const stack = getByTestId('stack')\n+ renderComponent()\n+ const stack = screen.getByTestId('stack')\nexpect(stack).toHaveStyle('display: flex')\nexpect(stack).toHaveStyle('flex-direction: column')\n})\nit('should not space last child', () => {\n- const { getByTestId } = renderComponent()\n- const stack = getByTestId('stack')\n+ renderComponent()\n+ const stack = screen.getByTestId('stack')\nexpect(stack).not.toHaveStyle('margin-bottom: 0.5rem')\n})\nit('should should stack horizontally if isInline', () => {\nconst inlineAttrs = 'is-inline'\n- const { getByTestId } = renderComponent({ inlineAttrs })\n- const stack = getByTestId('stack')\n+ renderComponent({ inlineAttrs })\n+ const stack = screen.getByTestId('stack')\nexpect(stack).toHaveStyle('display: flex')\nexpect(stack).toHaveStyle('flex-direction: row')\n})\n@@ -58,8 +58,8 @@ it.each`\n'should render CStack with element as $as',\n({ as }) => {\nconst inlineAttrs = `as=\"${as}\"`\n- const { asFragment, getByTestId } = renderComponent({ inlineAttrs })\n- const stack = getByTestId('stack')\n+ const { asFragment } = renderComponent({ inlineAttrs })\n+ const stack = screen.getByTestId('stack')\nexpect(getTagName(stack)).toEqual(as)\nexpect(asFragment()).toMatchSnapshot()\n}\n",
        "date": "12.07.2020 16:49:35",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "sim_msg": "test: add tests for InPageMenutItem",
        "sim_diff": "diff --git a/package/src/components/InPageMenuItem/v1/InPageMenuItem.test.js b/package/src/components/InPageMenuItem/v1/InPageMenuItem.test.js @@ -3,8 +3,23 @@ import renderer from \"react-test-renderer\";\nimport { shallow } from \"enzyme\";\nimport InPageMenuItem from \"./InPageMenuItem\";\n-test(\"basic snapshot\", () => {\n- const component = renderer.create(<InPageMenuItem />);\n+test(\"InPageMenuItem basic component\", () => {\n+ const component = renderer.create(<InPageMenuItem href=\"/test/url/\" label=\"Test label\" />);\n+\n+ const tree = component.toJSON();\n+ expect(tree).toMatchSnapshot();\n+});\n+\n+test(\"InPageMenuItem with onClick instead of href\", () => {\n+ const onClick = () => {};\n+ const component = renderer.create(<InPageMenuItem label=\"Test label\" onClick={onClick} />);\n+\n+ const tree = component.toJSON();\n+ expect(tree).toMatchSnapshot();\n+});\n+\n+test(\"InPageMenuItem selected\", () => {\n+ const component = renderer.create(<InPageMenuItem isSelected href=\"/test/url/\" label=\"Test label\" />);\nconst tree = component.toJSON();\nexpect(tree).toMatchSnapshot();\n",
        "chatgpt_rag": "test: update CStack tests to use screen instead of getByTestId and renderComponent function"
    },
    {
        "msg": "test(button): remove unnecessary mock",
        "diff": "diff --git a/packages/chakra-ui-core/src/CButton/tests/CButton.test.js b/packages/chakra-ui-core/src/CButton/tests/CButton.test.js import { CButton } from '../..'\nimport { render, defaultProviders } from '@/tests/test-utils'\n-// mocks\n-jest.mock('breadstick/dist/components/Alert/styles.css', () => ({})) // jest tries to import styles and fails...\n-\nconst renderComponent = (props) => {\nconst base = {\ncomponents: {\n",
        "date": "19.04.2020 20:20:50",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "sim_msg": "test(components/atom/polymorphicElement): refactor",
        "sim_diff": "diff --git a/components/atom/polymorphicElement/test/index.test.js b/components/atom/polymorphicElement/test/index.test.js @@ -10,40 +10,31 @@ import ReactDOM from 'react-dom'\nimport chai, {expect} from 'chai'\nimport chaiDOM from 'chai-dom'\n-import Component from '../src/index.js'\n+import * as pkg from '../src/index.js'\n+\n+import json from '../package.json'\nchai.use(chaiDOM)\n-describe(Component.name, () => {\n+describe(json.name, () => {\n+ const {default: Component} = pkg\nconst setup = setupEnvironment(Component)\n- it('should render the as property when passed as a string', () => {\n+ it('library should include defined exported elements', () => {\n// Given\n- const mockText = 'Sui'\n- const props = {as: 'h1', children: mockText}\n+ const library = pkg\n+ const libraryExportedMembers = ['default']\n// When\n- const {getByText} = setup(props)\n+ const {default: AtomPolymorphicElement, ...others} = library\n// Then\n- expect(getByText(mockText).tagName).to.equal('H1')\n- })\n-\n- it('should render the as property when passed as a component', () => {\n- // Given\n- function StrongParagraph(props) {\n- return <p style={{fontWeight: 700}} {...props} />\n- }\n- const mockText = 'Sui'\n- const props = {as: StrongParagraph, children: mockText}\n-\n- // When\n- const {getByText} = setup(props)\n-\n- // Then\n- expect(getByText(mockText).tagName).to.equal('P')\n+ expect(Object.keys(library).length).to.equal(libraryExportedMembers.length)\n+ expect(Object.keys(library)).to.have.members(libraryExportedMembers)\n+ expect(Object.keys(others).length).to.equal(0)\n})\n+ describe(Component.displayName, () => {\nit('should render without crashing', () => {\n// Given\nconst props = {as: 'h1'}\n@@ -68,4 +59,32 @@ describe(Component.name, () => {\nexpect(container.innerHTML).to.be.a('string')\nexpect(container.innerHTML).to.not.have.lengthOf(0)\n})\n+\n+ it('should render the as property when passed as a string', () => {\n+ // Given\n+ const mockText = 'Sui'\n+ const props = {as: 'h1', children: mockText}\n+\n+ // When\n+ const {getByText} = setup(props)\n+\n+ // Then\n+ expect(getByText(mockText).tagName).to.equal('H1')\n+ })\n+\n+ it('should render the as property when passed as a component', () => {\n+ // Given\n+ function StrongParagraph(props) {\n+ return <p style={{fontWeight: 700}} {...props} />\n+ }\n+ const mockText = 'Sui'\n+ const props = {as: StrongParagraph, children: mockText}\n+\n+ // When\n+ const {getByText} = setup(props)\n+\n+ // Then\n+ expect(getByText(mockText).tagName).to.equal('P')\n+ })\n+ })\n})\n",
        "chatgpt_rag": "test(chakra-ui-core): refactor CButton test suite"
    },
    {
        "msg": "test(stack): update snapshots",
        "diff": "diff --git a/packages/chakra-ui-core/src/CStack/tests/__snapshots__/CStack.test.js.snap b/packages/chakra-ui-core/src/CStack/tests/__snapshots__/CStack.test.js.snap exports[`should render CStack with element as nav 1`] = `\n<DocumentFragment>\n<nav\n- class=\"css-j7qwjs css-k008qs css-1lp2as9\"\n+ class=\"css-j7qwjs css-0\"\ndata-chakra-component=\"CStack\"\ndata-testid=\"stack\"\n>\n<div\n- class=\"css-1ipbp6k\"\n+ class=\"css-dtyjrz\"\ndata-chakra-component=\"CBox\"\ndata-testid=\"stack-child-1\"\n>\n@@ -26,7 +26,6 @@ exports[`should render CStack with element as nav 1`] = `\nThe future can be even brighter but a goal without a plan is just a wish\n</p>\n</div>\n-\n<div\nclass=\"css-1ipbp6k\"\ndata-chakra-component=\"CBox\"\n@@ -53,12 +52,12 @@ exports[`should render CStack with element as nav 1`] = `\nexports[`should render CStack with element as section 1`] = `\n<DocumentFragment>\n<section\n- class=\"css-j7qwjs css-k008qs css-1lp2as9\"\n+ class=\"css-j7qwjs css-0\"\ndata-chakra-component=\"CStack\"\ndata-testid=\"stack\"\n>\n<div\n- class=\"css-1ipbp6k\"\n+ class=\"css-dtyjrz\"\ndata-chakra-component=\"CBox\"\ndata-testid=\"stack-child-1\"\n>\n@@ -76,7 +75,6 @@ exports[`should render CStack with element as section 1`] = `\nThe future can be even brighter but a goal without a plan is just a wish\n</p>\n</div>\n-\n<div\nclass=\"css-1ipbp6k\"\ndata-chakra-component=\"CBox\"\n@@ -103,12 +101,12 @@ exports[`should render CStack with element as section 1`] = `\nexports[`should render correctly 1`] = `\n<DocumentFragment>\n<div\n- class=\"css-j7qwjs css-k008qs css-1lp2as9\"\n+ class=\"css-j7qwjs css-0\"\ndata-chakra-component=\"CStack\"\ndata-testid=\"stack\"\n>\n<div\n- class=\"css-1ipbp6k\"\n+ class=\"css-dtyjrz\"\ndata-chakra-component=\"CBox\"\ndata-testid=\"stack-child-1\"\n>\n@@ -126,7 +124,6 @@ exports[`should render correctly 1`] = `\nThe future can be even brighter but a goal without a plan is just a wish\n</p>\n</div>\n-\n<div\nclass=\"css-1ipbp6k\"\ndata-chakra-component=\"CBox\"\n@@ -153,29 +150,36 @@ exports[`should render correctly 1`] = `\nexports[`should should stack native html elements 1`] = `\n<DocumentFragment>\n<div\n- class=\"css-j7qwjs css-k008qs css-1lp2as9\"\n+ class=\"css-j7qwjs css-0\"\ndata-chakra-component=\"CStack\"\ndata-testid=\"stack\"\n>\n<p\n- class=\"css-18iq2bq\"\n+ class=\"css-16ec2e8\"\ndata-chakra-component=\"CText\"\n>\nThe future can be even brighter but a goal without a plan is just a wish\n</p>\n-\n+ <div\n+ class=\"css-cet0rr\"\n+ data-chakra-component=\"CBox\"\n+ >\n<p\ndata-testid=\"stacked-p\"\n>\nI am a happy paragraph element\n</p>\n-\n+ </div>\n+ <div\n+ class=\"css-cet0rr\"\n+ data-chakra-component=\"CBox\"\n+ >\n<h3\ndata-testid=\"stacked-h3\"\n>\nI am a jolly heading element\n</h3>\n-\n+ </div>\n<p\nclass=\"css-18iq2bq\"\ndata-chakra-component=\"CText\"\n",
        "date": "26.09.2020 21:50:33",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "sim_msg": "test: update input snapshots",
        "sim_diff": "diff --git a/packages/input/src/__snapshots__/Input.test.js.snap b/packages/input/src/__snapshots__/Input.test.js.snap @@ -5,7 +5,7 @@ exports[` 1`] = `\nclassName=\"css-a2gl53\"\n>\n<input\n- className=\"css-jcjpcn\"\n+ className=\"css-1e3c2co\"\ndisabled={true}\nonBlur={[Function]}\nonChange={undefined}\n@@ -25,7 +25,7 @@ exports[`Input renders children 1`] = `\nclassName=\"css-a2gl53\"\n>\n<input\n- className=\"css-1dy8dab\"\n+ className=\"css-2z7adt\"\ndisabled={undefined}\nonBlur={[Function]}\nonChange={undefined}\n@@ -35,7 +35,7 @@ exports[`Input renders children 1`] = `\nvalue=\"jon.snow@winterfell.com\"\n/>\n<div\n- className=\"css-v5j8f1\"\n+ className=\"css-1u12m60\"\n/>\n</div>\n`;\n",
        "chatgpt_rag": "test: update CStack snapshots in tests"
    },
    {
        "msg": "test: update error message for travis chrome",
        "diff": "diff --git a/test/examples/webpack.test.js b/test/examples/webpack.test.js @@ -68,8 +68,9 @@ describe('webpack app', function() {\n// This has become necessary because Travis switched their Chrome stable\n// version _down_ from 76 to 62, which handles this test case differently.\n+ // 2020-05-06: Travis Chrome 62 is now returning the original message.\nvar version = parseInt(window.navigator.userAgent.match(new RegExp('^.*HeadlessChrome/([0-9]*).*$'))[1]);\n- var message = version > 62 ? 'webpack test error' : 'Script error.';\n+ var message = version >= 62 ? 'webpack test error' : 'Script error.';\nexpect(body.data.body.trace.exception.message).to.eql(message);\n",
        "date": "06.05.2020 17:14:16",
        "repo": "rollbar/rollbar.js",
        "type": "test",
        "sim_msg": "test(browser): actually skip tests re:",
        "sim_diff": "diff --git a/test/webpack.test.js b/test/webpack.test.js @@ -8,7 +8,9 @@ const semver = require('semver');\ndescribe('webpack', function() {\nit('works', function(done) {\n// Webpack doesn't work on Node.js 4.x or 5.x\n- if (!semver.satisfies(process.version, '>=6.0.0'));\n+ if (!semver.satisfies(process.version, '>=6.0.0')) {\n+ this.skip();\n+ }\nconst webpack = require('webpack');\nthis.timeout(30000);\n",
        "chatgpt_rag": "test(browser): update webpack test message based on Chrome version and Travis build date"
    },
    {
        "msg": "test(Dropdown): fix multiple search text assertion",
        "diff": "diff --git a/test/specs/modules/Dropdown/Dropdown-test.js b/test/specs/modules/Dropdown/Dropdown-test.js @@ -973,7 +973,7 @@ describe('Dropdown', () => {\n{ value: 0, text: 'foo' },\n{ value: 1, text: 'foe' },\n]\n- wrapperMount(<Dropdown options={searchOptions} selection />)\n+ wrapperMount(<Dropdown options={searchOptions} search selection />)\n// open and simulate search\nwrapper\n@@ -984,13 +984,10 @@ describe('Dropdown', () => {\ndomEvent.keyDown(document, { key: 'ArrowDown' })\ndomEvent.keyDown(document, { key: 'Enter' })\n- const item = wrapper\n- .find('.selected')\n-\n// text updated\nwrapper\n.find('div.text')\n- .should.contain.text(item.text())\n+ .should.contain.text('foe')\n})\nit('displays if value is 0', () => {\nconst text = faker.hacker.noun()\n",
        "date": "15.10.2017 22:49:20",
        "repo": "semantic-org/semantic-ui-react",
        "type": "test",
        "sim_msg": "perf(dropdown): Update divider selector",
        "sim_diff": "diff --git a/src/definitions/modules/dropdown.js b/src/definitions/modules/dropdown.js @@ -71,7 +71,7 @@ $.fn.dropdown = function(parameters) {\n$menu = $module.children(selector.menu),\n$item = $menu.find(selector.item),\n- $divider = settings.hideDividers ? $item.siblings(selector.divider) : $(),\n+ $divider = settings.hideDividers ? $item.parent().children(selector.divider) : $(),\nactivated = false,\nitemActivated = false,\n@@ -386,7 +386,7 @@ $.fn.dropdown = function(parameters) {\nmenu: function(values) {\n$menu.html( templates.menu(values, fields));\n$item = $menu.find(selector.item);\n- $divider = settings.hideDividers ? $item.siblings(selector.divider) : $();\n+ $divider = settings.hideDividers ? $item.parent().children(selector.divider) : $();\n},\nreference: function() {\nmodule.debug('Dropdown behavior was called on select, replacing with closest dropdown');\n@@ -414,7 +414,7 @@ $.fn.dropdown = function(parameters) {\nrefreshItems: function() {\n$item = $menu.find(selector.item);\n- $divider = settings.hideDividers ? $item.siblings(selector.divider) : $();\n+ $divider = settings.hideDividers ? $item.parent().children(selector.divider) : $();\n},\nrefreshSelectors: function() {\n@@ -429,7 +429,7 @@ $.fn.dropdown = function(parameters) {\n;\n$menu = $module.children(selector.menu);\n$item = $menu.find(selector.item);\n- $divider = settings.hideDividers ? $item.siblings(selector.divider) : $();\n+ $divider = settings.hideDividers ? $item.parent().children(selector.divider) : $();\n},\nrefreshData: function() {\n",
        "chatgpt_rag": "style(dropdown): Update Dropdown-test.js to include search functionality in dropdown options"
    },
    {
        "msg": "test: fix rtc config url",
        "diff": "diff --git a/test/common.js b/test/common.js @@ -4,7 +4,7 @@ var thunky = require('thunky')\nexports.getConfig = thunky(function (cb) {\n// Includes TURN -- needed for tests to pass on Sauce Labs\n// https://github.com/feross/simple-peer/issues/41\n- get.concat('https://instant.io/rtcConfig', function (err, res, data) {\n+ get.concat('https://instant.io/_rtcConfig', function (err, res, data) {\nif (err) return cb(err)\ndata = data.toString()\ntry {\n",
        "date": "05.01.2017 01:17:17",
        "repo": "feross/simple-peer",
        "type": "test",
        "sim_msg": "test: include more error details",
        "sim_diff": "diff --git a/test/common.js b/test/common.js @@ -191,7 +191,7 @@ function setup(title, configs) {\nfunction onError(err) {\nconst which = (this === client ? 'client' : 'server');\n- assert(false, msg(`Unexpected ${which} error: ${err}`));\n+ assert(false, msg(`Unexpected ${which} error: ${err.stack}\\n`));\n}\nfunction onReady() {\n",
        "chatgpt_rag": "test: update rtcConfig URL in getConfig function"
    },
    {
        "msg": "test: add test for direct call to onerror",
        "diff": "diff --git a/test/browser.rollbar.test.js b/test/browser.rollbar.test.js @@ -595,6 +595,52 @@ describe('log', function() {\ndone();\n})\n});\n+\n+// Test direct call to onerror, as used in verification of browser js install.\n+describe('onerror', function() {\n+ before(function (done) {\n+ window.server = sinon.createFakeServer();\n+ done();\n+ });\n+\n+ after(function () {\n+ window.server.restore();\n+ });\n+\n+ function stubResponse(server) {\n+ server.respondWith('POST', 'api/1/item',\n+ [\n+ 200,\n+ { 'Content-Type': 'application/json' },\n+ '{\"err\": 0, \"result\":{ \"uuid\": \"d4c7acef55bf4c9ea95e4fe9428a8287\"}}'\n+ ]\n+ );\n+ }\n+\n+ it('should send message when calling onerror directly', function(done) {\n+ var server = window.server;\n+ stubResponse(server);\n+ server.requests.length = 0;\n+\n+ var options = {\n+ accessToken: 'POST_CLIENT_ITEM_TOKEN',\n+ captureUncaught: true\n+ };\n+ new Rollbar(options);\n+\n+ window.onerror(\"TestRollbarError: testing window.onerror\", window.location.href);\n+\n+ server.respond();\n+\n+ var body = JSON.parse(server.requests[0].requestBody);\n+\n+ expect(body.access_token).to.eql('POST_CLIENT_ITEM_TOKEN');\n+ expect(body.data.body.trace.exception.message).to.eql('testing window.onerror');\n+\n+ done();\n+ })\n+});\n+\ndescribe('captureEvent', function() {\nit('should handle missing/default type and level', function(done) {\nvar options = {};\n",
        "date": "31.07.2019 13:22:48",
        "repo": "rollbar/rollbar.js",
        "type": "test",
        "sim_msg": "test: remove airplane mode from '(re-)activate after restore'",
        "sim_diff": "diff --git a/tests/test_intercept.js b/tests/test_intercept.js @@ -2687,31 +2687,55 @@ test(\"persist reply with file\", function(t) {\n}, t.end.bind(t));\n});\n-test('(re-)activate after restore', {skip: process.env.AIRPLANE}, function(t) {\n- var scope = nock('http://google.com')\n+test('(re-)activate after restore', function(t) {\n+ t.plan(7)\n+\n+ const server = http.createServer((request, response) => {\n+ t.pass('server received a request')\n+\n+ switch (url.parse(request.url).pathname) {\n+ case '/':\n+ response.writeHead(200)\n+ response.write('server served a response')\n+ break\n+ }\n+\n+ response.end()\n+ })\n+\n+ server.listen(() => {\n+ const scope = nock(`http://localhost:${server.address().port}`)\n.get('/')\n- .reply(200, 'Hello, World!');\n+ .reply(304, 'served from our mock')\n- nock.restore();\n- t.false(nock.isActive());\n+ nock.restore()\n+ t.false(nock.isActive())\n+\n+ http.get(`http://localhost:${server.address().port}`, function(res) {\n+ res.resume()\n+\n+ t.is(200, res.statusCode)\n- http.get('http://google.com/', function(res) {\n- res.resume();\nres.on('end', function() {\n- t.ok(!scope.isDone());\n+ t.ok(!scope.isDone())\n+\n+ nock.activate()\n+ t.true(nock.isActive())\n+ http.get(`http://localhost:${server.address().port}`, function(res) {\n+ res.resume()\n+\n+ t.is(304, res.statusCode)\n- nock.activate();\n- t.true(nock.isActive());\n- http.get('http://google.com', function(res) {\n- res.resume();\nres.on('end', function() {\n- t.ok(scope.isDone());\n- t.end();\n- });\n- }).end();\n- });\n- }).end();\n+ t.ok(scope.isDone())\n+\n+ server.close(t.end)\n});\n+ })\n+ })\n+ })\n+ })\n+})\ntest(\"allow unmocked option works with https\", {skip: process.env.AIRPLANE}, function(t) {\nt.plan(5)\n",
        "chatgpt_rag": "test: add test for direct call to onerror in browser.rollbar"
    },
    {
        "msg": "test: set unit test concurrency to 1",
        "diff": "diff --git a/package.json b/package.json \"examples\": \"cd packages/examples && npm run serve\",\n\"build:test\": \"lerna run build:test\",\n\"build:coverage\": \"COVERAGE=1 npm run build:test\",\n- \"test:unit\": \"lerna run test --ignore @candela/examples\",\n+ \"test:unit\": \"lerna run test --ignore @candela/examples --concurrency 1\",\n\"test:image\": \"cd packages/examples && npm test\",\n\"test:coverage\": \"COVERAGE=1 npm run test:unit\",\n\"coverage:report\": \"http-server build/coverage/html -p ${PORT-3000}\",\n",
        "date": "20.06.2018 16:43:31",
        "repo": "kitware/candela",
        "type": "test",
        "sim_msg": "build: add publish scipt",
        "sim_diff": "diff --git a/package.json b/package.json \"test:coverage\": \"jest --coverage\",\n\"test:coverage:ci\": \"jest --no-watchman --coverage && codecov\",\n\"build\": \"lerna exec -- npm run build\",\n- \"build:watch\": \"lerna exec -- npm run build:watch\"\n+ \"build:watch\": \"lerna exec -- npm run build:watch\",\n+ \"release\": \"npm run build && lerna publish\"\n},\n\"repository\": {\n\"type\": \"git\",\n",
        "chatgpt_rag": "test:unit: add concurrency flag for test execution"
    },
    {
        "msg": "test: add tests specifically for isLuhnValid",
        "diff": "diff --git a/test/validators.js b/test/validators.js @@ -4931,6 +4931,34 @@ describe('Validators', () => {\n});\n});\n+ it('should validate luhn numbers', () => {\n+ test({\n+ validator: 'isLuhnValid',\n+ valid: [\n+ '0',\n+ '5421',\n+ '01234567897',\n+ '0123456789012345678906',\n+ '0123456789012345678901234567891',\n+ '123456789012345678906',\n+ '375556917985515',\n+ '36050234196908',\n+ '4716461583322103',\n+ '4716-2210-5188-5662',\n+ '4929 7226 5379 7141',\n+ ],\n+ invalid: [\n+ '',\n+ '1',\n+ '5422',\n+ 'foo',\n+ 'prefix6234917882863855',\n+ '623491788middle2863855',\n+ '6234917882863855suffix',\n+ ],\n+ });\n+ });\n+\nit('should validate credit cards', () => {\ntest({\nvalidator: 'isCreditCard',\n",
        "date": "23.05.2022 16:12:38",
        "repo": "validatorjs/validator.js",
        "type": "test",
        "sim_msg": "refactor: fix a few tests re:",
        "sim_diff": "diff --git a/test/schema.validation.test.js b/test/schema.validation.test.js @@ -377,18 +377,22 @@ describe('schema', function() {\nlikes: {type: Array, required: true}\n});\n+ var remaining = 3;\n+\nLoki.path('likes').doValidate(null, function(err) {\nassert.ok(err instanceof ValidatorError);\n+ --remaining || done();\n});\nLoki.path('likes').doValidate(undefined, function(err) {\nassert.ok(err instanceof ValidatorError);\n+ --remaining || done();\n});\nLoki.path('likes').doValidate([], function(err) {\nassert.ok(err instanceof ValidatorError);\n+ --remaining || done();\n});\n- done();\n});\nit('boolean required', function(done) {\n@@ -396,22 +400,27 @@ describe('schema', function() {\nisFerret: {type: Boolean, required: true}\n});\n+ var remaining = 4;\n+\nAnimal.path('isFerret').doValidate(null, function(err) {\nassert.ok(err instanceof ValidatorError);\n+ --remaining || done();\n});\nAnimal.path('isFerret').doValidate(undefined, function(err) {\nassert.ok(err instanceof ValidatorError);\n+ --remaining || done();\n});\nAnimal.path('isFerret').doValidate(true, function(err) {\nassert.ifError(err);\n+ --remaining || done();\n});\nAnimal.path('isFerret').doValidate(false, function(err) {\nassert.ifError(err);\n+ --remaining || done();\n});\n- done();\n});\nit('mixed required', function(done) {\n@@ -419,24 +428,29 @@ describe('schema', function() {\ncharacteristics: {type: Mixed, required: true}\n});\n+ var remaining = 4;\n+\nAnimal.path('characteristics').doValidate(null, function(err) {\nassert.ok(err instanceof ValidatorError);\n+ --remaining || done();\n});\nAnimal.path('characteristics').doValidate(undefined, function(err) {\nassert.ok(err instanceof ValidatorError);\n+ --remaining || done();\n});\nAnimal.path('characteristics').doValidate({\naggresive: true\n}, function(err) {\nassert.ifError(err);\n+ --remaining || done();\n});\nAnimal.path('characteristics').doValidate('none available', function(err) {\nassert.ifError(err);\n+ --remaining || done();\n});\n- done();\n});\n});\n",
        "chatgpt_rag": "feat: add luhn number validation test in validators test suite"
    },
    {
        "msg": "test(icon-button): refactor use screen",
        "diff": "diff --git a/packages/chakra-ui-core/src/CIconButton/tests/CIconButton.test.js b/packages/chakra-ui-core/src/CIconButton/tests/CIconButton.test.js import CIconButton from '..'\n-import { render } from '@/tests/test-utils'\n+import { render, screen } from '@/tests/test-utils'\nconst renderComponent = (props) => {\nconst inlineAttrs = (props && props.inlineAttrs) || ''\n@@ -19,15 +19,15 @@ it('should render correctly', () => {\nit('should display spinner and hide the icon', () => {\nconst inlineAttrs = 'isLoading'\n- const { container, getByTestId } = renderComponent({ inlineAttrs })\n+ const { container } = renderComponent({ inlineAttrs })\n- const button = getByTestId('btn')\n+ const button = screen.getByTestId('btn')\nexpect(button).toHaveAttribute('disabled')\nexpect(button).toHaveAttribute('aria-disabled', 'true')\n// TODO: find a way to easily grab the spinner element\n- // Maybe? expect(getByTestId('Spinner')).toBeInTheDocument()\n+ // Maybe? expect(screen.getByTestId('Spinner')).toBeInTheDocument()\nexpect(button).toHaveStyle('opacity: 0.4')\nexpect(container.querySelector('button > div')).toBeInTheDocument()\n})\n",
        "date": "07.07.2020 00:59:33",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "sim_msg": "test(components/molecule/buttonGroupField): refactor",
        "sim_diff": "diff --git a/components/molecule/buttonGroupField/test/index.test.js b/components/molecule/buttonGroupField/test/index.test.js @@ -11,12 +11,31 @@ import chai, {expect} from 'chai'\nimport chaiDOM from 'chai-dom'\nimport AtomButton from '@s-ui/react-atom-button'\n+import * as pkg from '../src/index.js'\n+\n+import json from '../package.json'\n+\nchai.use(chaiDOM)\n-describe('molecule/buttonGroupField', () => {\n- const Component = MoleculeButtonGroupField\n+describe(json.name, () => {\n+ const {default: Component} = pkg\nconst setup = setupEnvironment(Component)\n+ it('library should include defined exported elements', () => {\n+ // Given\n+ const library = pkg\n+ const libraryExportedMembers = ['default']\n+\n+ // When\n+ const {default: MoleculeButtonGroupField, ...others} = library\n+\n+ // Then\n+ expect(Object.keys(library).length).to.equal(libraryExportedMembers.length)\n+ expect(Object.keys(library)).to.have.members(libraryExportedMembers)\n+ expect(Object.keys(others).length).to.equal(0)\n+ })\n+\n+ describe(Component.displayName, () => {\nit('should render without crashing', () => {\n// Given\nconst props = {\n@@ -64,7 +83,8 @@ describe('molecule/buttonGroupField', () => {\n],\nclassName: 'extended-classNames'\n}\n- const findSentence = str => string => string.match(new RegExp(`S*${str}S*`))\n+ const findSentence = str => string =>\n+ string.match(new RegExp(`S*${str}S*`))\n// When\nconst {container} = setup(props)\n@@ -154,3 +174,4 @@ describe('molecule/buttonGroupField', () => {\nexpect(expected).to.be.exist\n})\n})\n+})\n",
        "chatgpt_rag": "test(chakra-ui-core/CIconButton): refactor test-utils import and update test logic"
    },
    {
        "msg": "test(accordion): add shift+tab tests for accordion",
        "diff": "diff --git a/packages/chakra-ui-core/src/CAccordion/tests/CAccordion.test.js b/packages/chakra-ui-core/src/CAccordion/tests/CAccordion.test.js @@ -144,7 +144,6 @@ it('has the proper aria attributes', () => {\nexpect(panel).toHaveAttribute('aria-labelledby')\n})\n-// test that tab moves focus to the next focusable element\nit('tab moves focus to the next focusable element', async () => {\nrenderComponent({\ntemplate: `\n@@ -178,7 +177,43 @@ it('tab moves focus to the next focusable element', async () => {\nexpect(last).toHaveFocus()\n})\n-// test that aria-contols for button is same as id for panel\n+\n+it('shift+tab moves focus to the previous focusable element', async () => {\n+ renderComponent({\n+ template: `\n+ <CAccordion>\n+ <CAccordionItem>\n+ <CAccordionHeader>First section</CAccordionHeader>\n+ <CAccordionPanel>Panel 1</CAccordionPanel>\n+ </CAccordionItem>\n+ <CAccordionItem>\n+ <CAccordionHeader>Second section</CAccordionHeader>\n+ <CAccordionPanel>Panel 2</CAccordionPanel>\n+ </CAccordionItem>\n+ <CAccordionItem>\n+ <CAccordionHeader>Last section</CAccordionHeader>\n+ <CAccordionPanel>Panel 3</CAccordionPanel>\n+ </CAccordionItem>\n+ </CAccordion>`\n+ })\n+\n+ const first = screen.getByText('First section')\n+ const second = screen.getByText('Second section')\n+ const last = screen.getByText('Last section')\n+\n+ await userEvent.tab()\n+ expect(first).toHaveFocus()\n+\n+ await userEvent.tab()\n+ expect(second).toHaveFocus()\n+\n+ await userEvent.tab()\n+ expect(last).toHaveFocus()\n+\n+ await userEvent.tab({shift: true}) // shift+tab\n+ expect(second).toHaveFocus()\n+})\n+\nit('aria-contols for button is same as id for panel', () => {\nrenderComponent({\ntemplate: `\n@@ -195,7 +230,6 @@ it('aria-contols for button is same as id for panel', () => {\nexpect(button.getAttribute('aria-controls')).toEqual(panel.getAttribute('id'))\n})\n-// test that aria-expanded is true/false when accordion is open/closed\nit('aria-expanded is true/false when accordion is open/closed', () => {\nrenderComponent({\ntemplate: `\n@@ -215,7 +249,6 @@ it('aria-expanded is true/false when accordion is open/closed', () => {\nexpect(button).toHaveAttribute('aria-expanded', 'true')\n})\n-// test that panel has role=region and aria-labelledby\nit('panel has role=region and aria-labelledby', () => {\nrenderComponent({\ntemplate: `\n@@ -231,29 +264,3 @@ it('panel has role=region and aria-labelledby', () => {\nexpect(panel).toHaveAttribute('aria-labelledby')\nexpect(panel).toHaveAttribute('role', 'region')\n})\n\\ No newline at end of file\n-\n-// eslint-disable-next-line no-undef\n-xit('arrow up & down moves focus to next/previous accordion', async () => {\n- renderComponent({\n- template: `\n- <CAccordion>\n- <CAccordionItem>\n- <CAccordionHeader>Section 1 title</CAccordionHeader>\n- <CAccordionPanel>Panel 1</CAccordionPanel>\n- </CAccordionItem>\n- <CAccordionItem>\n- <CAccordionHeader>Section 2 title</CAccordionHeader>\n- <CAccordionPanel>Panel 2</CAccordionPanel>\n- </CAccordionItem>\n- </CAccordion>`\n- })\n-\n- const first = screen.getByText('Section 1 title')\n- const second = screen.getByText('Section 2 title')\n-\n- await fireEvent.keyDown(first, { key: 'ArrowDown', keyCode: 40 })\n- expect(second).toHaveFocus()\n-\n- await fireEvent.keyDown(second, { key: 'ArrowUp', keyCode: 38 })\n- expect(first).toHaveFocus()\n-})\n",
        "date": "04.07.2020 15:53:35",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "sim_msg": "test(core-toggle): Use variables to assert value of text",
        "sim_diff": "diff --git a/packages/core-toggle/core-toggle.test.js b/packages/core-toggle/core-toggle.test.js @@ -145,44 +145,66 @@ describe('core-toggle', () => {\n})\nit('respects exisiting aria-label with data-popup attribute and value', async () => {\n- await browser.executeScript(() => {\n+ const ariaLabel = 'Label'\n+\n+ await browser.executeScript((aria) => {\ndocument.body.innerHTML = `\n- <button aria-label=\"Label\">Toggle</button>\n- <core-toggle data-popup=\"Another label\" hidden></core-toggle>\n+ <button aria-label=\"${aria}\">Toggle</button>\n+ <core-toggle data-popup=\"Popup-label\" hidden></core-toggle>\n`\n- })\n+ }, ariaLabel)\nawait browser.executeScript(() => (document.querySelector('core-toggle').value = 'Button text'))\nconst toggleValue = await prop('core-toggle', 'value')\nawait expect(prop('button', 'textContent')).toEqual(toggleValue)\n- await expect(attr('button', 'aria-label')).toEqual('Label')\n+ await expect(attr('button', 'aria-label')).toEqual(ariaLabel)\n})\nit('sets aria-label with data-popup attr and value', async () => {\n- await browser.executeScript(() => {\n+ const popupLabel = 'Popup label'\n+ const btnLabel = 'Button text'\n+\n+ await browser.executeScript((label) => {\ndocument.body.innerHTML = `\n<button>Toggle</button>\n- <core-toggle data-popup=\"Some label\" hidden></core-toggle>\n+ <core-toggle data-popup=\"${label}\" hidden></core-toggle>\n`\n- })\n- await browser.executeScript(() => (document.querySelector('core-toggle').value = 'Button text'))\n+ }, popupLabel)\n+ await browser.executeScript((label) => (document.querySelector('core-toggle').value = label), btnLabel)\nconst toggleValue = await prop('core-toggle', 'value')\nawait expect(prop('button', 'textContent')).toEqual(toggleValue)\n- await expect(attr('button', 'aria-label')).toEqual('Button text,Some label')\n+ await expect(attr('button', 'aria-label')).toEqual(`${btnLabel},${popupLabel}`)\n+ })\n+ })\n+\n+ it('sets data-popup attribute when assigned value to popup prop', async () => {\n+ const popupLabel = 'Popup label'\n+\n+ await browser.executeScript(() => {\n+ document.body.innerHTML = `\n+ <button>Toggle</button>\n+ <core-toggle hidden></core-toggle>\n+ `\n})\n+ await browser.executeScript((label) => (document.querySelector('core-toggle').popup = label), popupLabel)\n+ await expect(attr('core-toggle', 'data-popup')).toEqual(popupLabel)\n+ await expect(attr('core-toggle', 'popup')).toEqual('null')\n})\nit('sets aria-label with data-popup prop and value', async () => {\n+ const popupLabel = 'Popup label'\n+ const btnText = 'Button text'\n+\nawait browser.executeScript(() => {\ndocument.body.innerHTML = `\n<button>Toggle</button>\n<core-toggle hidden></core-toggle>\n`\n})\n- await browser.executeScript(() => (document.querySelector('core-toggle').popup = 'Some label'))\n- await browser.executeScript(() => (document.querySelector('core-toggle').value = 'Button text'))\n+ await browser.executeScript((label) => (document.querySelector('core-toggle').popup = label), popupLabel)\n+ await browser.executeScript((label) => (document.querySelector('core-toggle').value = label), btnText)\nconst toggleValue = await prop('core-toggle', 'value')\nawait expect(prop('button', 'textContent')).toEqual(toggleValue)\n- await expect(attr('button', 'aria-label')).toEqual('Button text,Some label')\n+ await expect(attr('button', 'aria-label')).toEqual(`${btnText},${popupLabel}`)\n})\nit('triggers toggle event', async () => {\n",
        "chatgpt_rag": "test(CAccordion): Add test for shift+tab moving focus to previous focusable element"
    },
    {
        "msg": "test: Fixing test case",
        "diff": "diff --git a/packages/wmr/test/fixtures/prerender-data/index.js b/packages/wmr/test/fixtures/prerender-data/index.js export function prerender() {\n- return { html: '<h1>it works</h1>', links: ['/'], data: { hello: 'world' } };\n+ return { html: '<h1>it works</h1><script type=\"isodata\"></script>', links: ['/'], data: { hello: 'world' } };\n}\n",
        "date": "15.11.2021 10:04:51",
        "repo": "preactjs/wmr",
        "type": "test",
        "sim_msg": "test: fix new line",
        "sim_diff": "diff --git a/test/fixtures/post_render.js b/test/fixtures/post_render.js @@ -29,11 +29,11 @@ exports.content = content;\nexports.expected = [\n'<h1 id=\"Title\"><a href=\"#Title\" class=\"headerlink\" title=\"Title\"></a>Title</h1>',\nutil.highlight(code, {lang: 'python'}),\n- '\\n<p>some content</p>\\n',\n+ '\\n\\n<p>some content</p>\\n',\n'<h2 id=\"Another-title\"><a href=\"#Another-title\" class=\"headerlink\" title=\"Another title\"></a>Another title</h2>',\n'<blockquote>',\n'<p>quote content</p>\\n',\n- '</blockquote>\\n',\n+ '</blockquote>\\n\\n',\n'<blockquote><p>quote content</p>\\n',\n'<footer><strong>Hello World</strong></footer></blockquote>'\n].join('');\n",
        "chatgpt_rag": "test: add script tag to prerendered HTML"
    },
    {
        "msg": "test: fix typo in before_install",
        "diff": "diff --git a/.travis.yml b/.travis.yml @@ -9,8 +9,7 @@ node_js:\n- '8'\n- '6'\nbefore_install:\n- - if [ \"$TRAVIS_BRANCH\" = \"master\" ]; then\n- echo \"//registry.npmjs.org/:_authToken=\\${NPM_TOKEN}\" > .npmrc; fi\n+ - if [ \"$TRAVIS_BRANCH\" == \"master\" ]; then echo \"//registry.npmjs.org/:_authToken=\\${NPM_TOKEN}\" > .npmrc; fi\nafter_success:\n- npm run semantic-release\nbranches:\n",
        "date": "06.12.2017 19:13:06",
        "repo": "remy/nodemon",
        "type": "test",
        "sim_msg": "chore(monorepo): fix how travis creates npm login",
        "sim_diff": "diff --git a/.travis.yml b/.travis.yml @@ -30,7 +30,7 @@ after_success:\nnpm run coverage:upload;\nfi\nif [[ $TRAVIS_BRANCH == 'master' || $TRAVIS_BRANCH == 'next' ]] && [[ $TRAVIS_PULL_REQUEST == 'false' ]]; then\n- echo \"//registry.npmjs.org/:_authToken=\\${NPM_TOKEN}\" > .npmrc\n+ printf \"//registry.npmjs.org/:_authToken=$NPM_TOKEN\\n\" > ~/.npmrc\nnpm run release -- --publish\nfi\nbranches:\n",
        "chatgpt_rag": "chore(travis): update npm login logic in travis configuration"
    },
    {
        "msg": "test(badge): remove unnecessary mock",
        "diff": "diff --git a/packages/chakra-ui-core/src/CBadge/tests/CBadge.test.js b/packages/chakra-ui-core/src/CBadge/tests/CBadge.test.js import { CBadge, CStack } from '../..'\nimport { render } from '@/tests/test-utils'\n-// mocks\n-jest.mock('breadstick/dist/components/Alert/styles.css', () => ({})) // jest tries to import styles and fails...\n-\nconst renderComponent = (props) => {\nconst base = {\ncomponents: { CBadge, CStack },\n",
        "date": "19.04.2020 20:19:01",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "sim_msg": "test(components/atom/polymorphicElement): refactor",
        "sim_diff": "diff --git a/components/atom/polymorphicElement/test/index.test.js b/components/atom/polymorphicElement/test/index.test.js @@ -10,40 +10,31 @@ import ReactDOM from 'react-dom'\nimport chai, {expect} from 'chai'\nimport chaiDOM from 'chai-dom'\n-import Component from '../src/index.js'\n+import * as pkg from '../src/index.js'\n+\n+import json from '../package.json'\nchai.use(chaiDOM)\n-describe(Component.name, () => {\n+describe(json.name, () => {\n+ const {default: Component} = pkg\nconst setup = setupEnvironment(Component)\n- it('should render the as property when passed as a string', () => {\n+ it('library should include defined exported elements', () => {\n// Given\n- const mockText = 'Sui'\n- const props = {as: 'h1', children: mockText}\n+ const library = pkg\n+ const libraryExportedMembers = ['default']\n// When\n- const {getByText} = setup(props)\n+ const {default: AtomPolymorphicElement, ...others} = library\n// Then\n- expect(getByText(mockText).tagName).to.equal('H1')\n- })\n-\n- it('should render the as property when passed as a component', () => {\n- // Given\n- function StrongParagraph(props) {\n- return <p style={{fontWeight: 700}} {...props} />\n- }\n- const mockText = 'Sui'\n- const props = {as: StrongParagraph, children: mockText}\n-\n- // When\n- const {getByText} = setup(props)\n-\n- // Then\n- expect(getByText(mockText).tagName).to.equal('P')\n+ expect(Object.keys(library).length).to.equal(libraryExportedMembers.length)\n+ expect(Object.keys(library)).to.have.members(libraryExportedMembers)\n+ expect(Object.keys(others).length).to.equal(0)\n})\n+ describe(Component.displayName, () => {\nit('should render without crashing', () => {\n// Given\nconst props = {as: 'h1'}\n@@ -68,4 +59,32 @@ describe(Component.name, () => {\nexpect(container.innerHTML).to.be.a('string')\nexpect(container.innerHTML).to.not.have.lengthOf(0)\n})\n+\n+ it('should render the as property when passed as a string', () => {\n+ // Given\n+ const mockText = 'Sui'\n+ const props = {as: 'h1', children: mockText}\n+\n+ // When\n+ const {getByText} = setup(props)\n+\n+ // Then\n+ expect(getByText(mockText).tagName).to.equal('H1')\n+ })\n+\n+ it('should render the as property when passed as a component', () => {\n+ // Given\n+ function StrongParagraph(props) {\n+ return <p style={{fontWeight: 700}} {...props} />\n+ }\n+ const mockText = 'Sui'\n+ const props = {as: StrongParagraph, children: mockText}\n+\n+ // When\n+ const {getByText} = setup(props)\n+\n+ // Then\n+ expect(getByText(mockText).tagName).to.equal('P')\n+ })\n+ })\n})\n",
        "chatgpt_rag": "refactor test for CBadge component in chakra-ui-core package"
    },
    {
        "msg": "test: add a couple more regex tests for ignoredMessages",
        "diff": "diff --git a/test/predicates.test.js b/test/predicates.test.js @@ -378,6 +378,19 @@ describe('messageIsIgnored', function() {\nexpect(p.messageIsIgnored(logger)(item, settings)).to.not.be.ok();\n});\nit('false if ignoredMessages regex match', function() {\n+ var item = {\n+ level: 'critical',\n+ body: {\n+ message: {body: 'This is an ignored message'}\n+ }\n+ };\n+ var settings = {\n+ reportLevel: 'debug',\n+ ignoredMessages: ['^This is an .{7} message$']\n+ };\n+ expect(p.messageIsIgnored(logger)(item, settings)).to.not.be.ok();\n+ });\n+ it('false if ignoredMessages literal match', function() {\nvar item = {\nlevel: 'critical',\nbody: {\n@@ -390,6 +403,19 @@ describe('messageIsIgnored', function() {\n};\nexpect(p.messageIsIgnored(logger)(item, settings)).to.not.be.ok();\n});\n+ it('false if ignoredMessages more literal regex matches', function() {\n+ var item = {\n+ level: 'critical',\n+ body: {\n+ message: {body: 'Match these characters: (*+?)'}\n+ }\n+ };\n+ var settings = {\n+ reportLevel: 'debug',\n+ ignoredMessages: ['\\\\(\\\\*\\\\+\\\\?\\\\)']\n+ };\n+ expect(p.messageIsIgnored(logger)(item, settings)).to.not.be.ok();\n+ });\nit('true if both trace and body message but ignoredMessages only match body', function() {\nvar item = {\nlevel: 'critical',\n",
        "date": "28.02.2020 13:28:32",
        "repo": "rollbar/rollbar.js",
        "type": "test",
        "sim_msg": "test(utilities): refactor `forEach` to `it.each` and add more cases",
        "sim_diff": "diff --git a/test/utilities.test.js b/test/utilities.test.js @@ -8,46 +8,47 @@ const {\ndescribe('utilities', () => {\ndescribe('camelCase', () => {\n- [undefined, null, 1337, {}, []].forEach(value => {\n- it(`throws an error if first argument is ${value}`, () => {\n+ it.each([undefined, null, {}, [], 0, 1, () => {}, new Date()])(\n+ 'throws an error if first argument is %p',\n+ input => {\nexpect(() => {\n- camelCase(value);\n+ camelCase(input);\n}).toThrow(TypeError);\n- });\n- });\n+ }\n+ );\n- it('does not modify string if it does not need to be camelCased', () => {\n- [\n+ it.each([\n['', ''],\n['foo', 'foo'],\n['fooBar', 'fooBar'],\n['--fooBar', '--fooBar'],\n['--foo-bar', '--foo-bar'],\n['--foo-100', '--foo-100']\n- ].forEach(testCase => {\n- expect(camelCase(testCase[0])).toBe(testCase[1]);\n- });\n- });\n+ ])(\n+ 'does not modify string if it does not need to be camelCased',\n+ (input, expected) => {\n+ expect(camelCase(input)).toBe(expected);\n+ }\n+ );\n- it('camelCases a string', () => {\n- [\n+ it.each([\n['foo-bar', 'fooBar'],\n['foo-bar-baz', 'fooBarBaz'],\n['CAMEL-CASE', 'camelCase']\n- ].forEach(testCase => {\n- expect(camelCase(testCase[0])).toBe(testCase[1]);\n- });\n+ ])('camelCases a string', (input, expected) => {\n+ expect(camelCase(input)).toBe(expected);\n});\n});\ndescribe('invertObject', () => {\n- [undefined, null, 'foo', 1337].forEach(value => {\n- it(`throws an error if the first argument is ${value}`, () => {\n+ it.each([undefined, null, 'string', 0, 1, () => {}])(\n+ `throws an error if the first argument is %p`,\n+ input => {\nexpect(() => {\n- invertObject(value);\n+ invertObject(input);\n}).toThrow(TypeError);\n- });\n- });\n+ }\n+ );\nit('swaps key with value', () => {\nexpect(\n",
        "chatgpt_rag": "test(predicates): add more test cases for messageIsIgnored function"
    },
    {
        "msg": "test(edtiable): remove breadstick mock",
        "diff": "diff --git a/packages/chakra-ui-core/src/CEditable/tests/CEditable.test.js b/packages/chakra-ui-core/src/CEditable/tests/CEditable.test.js @@ -3,7 +3,6 @@ import { render, defaultProviders, userEvent, fireEvent } from '@/tests/test-uti\nimport { useId } from '../../utils'\n// mocks\n-jest.mock('@/packages/chakra-ui-core/src/CToast/index.js', () => {})\njest.mock('@/packages/chakra-ui-core/src/utils/generators.js')\nconst renderComponent = (props) => {\n",
        "date": "19.04.2020 21:00:22",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "sim_msg": "test: add test for helpers",
        "sim_diff": "diff --git a/test/api/generators/helpers.test.js b/test/api/generators/helpers.test.js @@ -11,7 +11,10 @@ jest.mock(path.join(utilsDirectory.generators, \"scaffold-utils\"), () => ({\nList: jest.fn(),\n}));\n-const { getInstaller, getTemplate } = require(path.join(utilsDirectory.generators, \"helpers\"));\n+const { getInstaller, getTemplate, toKebabCase, toUpperCamelCase } = require(path.join(\n+ utilsDirectory.generators,\n+ \"helpers\",\n+));\nconst { List } = require(path.join(utilsDirectory.generators, \"scaffold-utils\"));\ndescribe(\"helpers\", () => {\n@@ -35,6 +38,18 @@ describe(\"helpers\", () => {\ngetDefaultPackageManagerSpy.mockRestore();\n});\n+ it(\"toKebabCase() returns kebab case\", () => {\n+ const kebabValue = toKebabCase(\"HtmlMinimizerPlugin\");\n+\n+ expect(kebabValue).toBe(\"html-minimizer-plugin\");\n+ });\n+\n+ it(\"toUpperCamelCase() returns camel case strings\", () => {\n+ const camelCaseString = toUpperCamelCase(\"html-minimizer-webpack-plugin\");\n+\n+ expect(camelCaseString).toBe(\"HtmlMinimizerWebpackPlugin\");\n+ });\n+\nit(\"getInstaller() returns the available installer\", async () => {\n// Multiple installers are not available\ngetDefaultPackageManagerSpy.mockReturnValue([\"npm\"]);\n",
        "chatgpt_rag": "test: remove mock for CToast and add test for CEditable"
    },
    {
        "msg": "test: use a more standard format for webpack config",
        "diff": "diff --git a/tests/webpack.config.js b/tests/webpack.config.js -// var webpack = require('webpack');\nvar candelaWebpack = require('../webpack');\n-var config = {};\n-\n-config.entry = {\n- 'tests': './tests.js'\n-};\n-\n-config.devtool = 'inline-source-map';\n-\n-config.node = {\n+module.exports = candelaWebpack({\n+ entry: {\n+ tests: './tests.js'\n+ },\n+ devtool: 'inline-source-map',\n+ node: {\nfs: 'empty'\n-};\n-\n-config.output = {\n+ },\n+ output: {\npath: 'build',\nfilename: 'tests.js'\n-};\n-config.module = {\n+ },\n+ module: {\nloaders: [\n{\ntest: /\\.css/,\n@@ -25,9 +20,5 @@ config.module = {\ninclude: /node_modules\\/nvd3/,\n},\n]\n-};\n-delete config.plugins;\n-\n-var final = candelaWebpack(config);\n-\n-module.exports = final;\n+ }\n+});\n",
        "date": "05.06.2017 14:57:01",
        "repo": "kitware/candela",
        "type": "test",
        "sim_msg": "chore: update vrt webpack config",
        "sim_diff": "diff --git a/visual-testing-app/webpack.config.js b/visual-testing-app/webpack.config.js @@ -33,7 +33,7 @@ module.exports = {\nrules: [\n{\ntest: /\\.js$/,\n- exclude: /(node_modules)/,\n+ exclude: [/(node_modules)/, /ui-kit.esm/],\nuse: {\nloader: 'babel-loader',\nquery: {\n",
        "chatgpt_rag": "refactor: update webpack config for tests"
    },
    {
        "msg": "test(stat): remove provider",
        "diff": "diff --git a/packages/chakra-ui-core/src/CStat/tests/CStat.test.js b/packages/chakra-ui-core/src/CStat/tests/CStat.test.js import { CStat, CStatLabel, CStatNumber, CStatHelperText, CStatArrow } from '..'\n-import { render, defaultProviders } from '@/tests/test-utils'\n-import icons from '../../lib/internal-icons.js'\n+import { render } from '@/tests/test-utils'\nconst renderComponent = (props) => {\nconst base = {\ncomponents: { CStat, CStatLabel, CStatNumber, CStatHelperText, CStatArrow },\n- provide: () => defaultProviders({ $chakraIcons: { 'triangle-up': icons['triangle-up'], 'triangle-down': icons['triangle-down'] } }),\ntemplate: `\n<CStat>\n<CStatLabel>Collected Fees</CStatLabel>\n",
        "date": "19.04.2020 23:59:17",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "sim_msg": "test(*): fix icon test case",
        "sim_diff": "diff --git a/test/icon/index-spec.js b/test/icon/index-spec.js @@ -4,6 +4,8 @@ import Adapter from 'enzyme-adapter-react-16';\nimport assert from 'power-assert';\nimport Icon from '../../src/icon';\n+import ConfigProvider from '../../src/config-provider';\n+\nEnzyme.configure({ adapter: new Adapter() });\ndescribe('Icon', () => {\n@@ -48,4 +50,16 @@ describe('Icon', () => {\nnewWrapper.setProps({ size: 'xl' });\nassert(newWrapper.find('.next-icon').hasClass('next-xl'));\n});\n+\n+ it('createFromIconfontCN should support prefix', () => {\n+ const CustomIcon = Icon.createFromIconfontCN({\n+ scriptUrl: '//at.alicdn.com/t/font_1464085_egnk4s8yv2f.js',\n+ });\n+\n+ const newWrapper = mount( <ConfigProvider prefix=\"abcd-\">\n+ <CustomIcon type=\"icon-pic\" prefix=\"efg-\"/>\n+ </ConfigProvider>);\n+ assert(newWrapper.find('.abcd-icon > svg'));\n+ assert(newWrapper.find('.abcd-icon > efg-icon-remote'));\n+ });\n});\n",
        "chatgpt_rag": "chore(test): update CStat test case and remove unnecessary imports"
    },
    {
        "msg": "test: disable flaky node tests",
        "diff": "diff --git a/package.json b/package.json \"build\": \"browserify -s SimplePeer -r . | minify > simplepeer.min.js\",\n\"size\": \"npm run build && cat simplepeer.min.js | gzip | wc -c\",\n\"// test\": \"standard && npm run test-node && npm run test-browser\",\n- \"test\": \"standard && npm run test-node\",\n+ \"test\": \"standard && npm run test-browser\",\n\"test-browser\": \"airtap --coverage -- test/*.js\",\n\"test-browser-local\": \"airtap --coverage --local -- test/*.js\",\n\"test-node\": \"WRTC=wrtc tape test/*.js\",\n",
        "date": "21.04.2021 17:14:19",
        "repo": "feross/simple-peer",
        "type": "test",
        "sim_msg": "fix(version): another attempt to get correct semver version in http agent",
        "sim_diff": "diff --git a/package.json b/package.json \"test:size\": \"bundlesize\",\n\"test:prepush\": \"npm run build && npm run test:unit && npm run test:size\",\n\"browser-coverage\": \"npm run test:cover && opener coverage/lcov-report/index.html\",\n- \"prePublishOnly\": \"npm run build\",\n+ \"prepublishOnly\": \"npm run build\",\n\"postpublish\": \"npm run docs:publish && npm run clean\",\n\"semantic-release\": \"semantic-release\",\n\"devdep:build\": \"pushd ../contentful-sdk-core && npm run build && popd\",\n",
        "chatgpt_rag": "refactor(test): update test script to include both node and browser tests"
    },
    {
        "msg": "test(controls.test.js): add position testing to contro",
        "diff": "diff --git a/src/domain/controls.test.js b/src/domain/controls.test.js @@ -27,6 +27,7 @@ describe(\"Controls reducer\", () => {\n'start': 't0',\n'end': 'tn',\n'showBusy': true,\n+ 'position': [0,0]\n}\nconst action = setControls(controls);\n@@ -70,6 +71,7 @@ describe(\"Controls reducer\", () => {\n'start': null,\n'end': null,\n'showBusy': false,\n+ 'position': [0,0]\n});\ndone();\n",
        "date": "25.06.2019 10:51:23",
        "repo": "iqtlabs/crviz",
        "type": "test",
        "sim_msg": "test(sidebar): supress test warning",
        "sim_diff": "diff --git a/src/renderer/components/Sidebar/index.test.js b/src/renderer/components/Sidebar/index.test.js @@ -8,6 +8,7 @@ describe('components/Sidebar', () => {\nit('should display an accurate add account button', () => {\nconst context = shallow(<Sidebar\naccounts={[]}\n+ location={{}}\n/>);\nexpect(context.find('Link[to=\"/add-account\"]').length).to.equal(1);\n@@ -48,6 +49,7 @@ describe('components/Sidebar', () => {\nit('should display a settings button', () => {\nconst context = shallow(<Sidebar\naccounts={[]}\n+ location={{}}\n/>);\nexpect(context.find('Link[to=\"/settings\"]').length).to.equal(1);\n",
        "chatgpt_rag": "test(controls): add position property to controls object"
    },
    {
        "msg": "test(PopperContent): remove debug statement",
        "diff": "diff --git a/src/__tests__/PopperContent.spec.js b/src/__tests__/PopperContent.spec.js @@ -117,8 +117,6 @@ describe('PopperContent', () => {\nit('should have x-placement of auto by default', () => {\nconst wrapper = mount(<PopperContent target=\"target\" isOpen container=\"inline\">Yo!</PopperContent>);\n- console.log(wrapper.debug());\n-\nexpect(wrapper.find('div[x-placement=\"auto\"]').exists()).toBe(true);\n});\n",
        "date": "18.10.2019 18:40:11",
        "repo": "reactstrap/reactstrap",
        "type": "test",
        "sim_msg": "test: spelling correction in test",
        "sim_diff": "diff --git a/test/unit/specs/mount/Wrapper/attributes.spec.js b/test/unit/specs/mount/Wrapper/attributes.spec.js @@ -16,7 +16,7 @@ describe('attributes', () => {\nexpect(wrapper.attributes()).to.eql({})\n})\n- it('returns empoty object if wrapper element is null', () => {\n+ it('returns empty object if wrapper element is null', () => {\nconst compiled = compileToFunctions('<div />')\nconst wrapper = mount(compiled)\nwrapper.element = null\n",
        "chatgpt_rag": "test: remove console.log statement in PopperContent.spec.js test"
    },
    {
        "msg": "chore: add note about providing a reference in PR template\ncloses",
        "diff": "diff --git a/.github/pull_request_template.md b/.github/pull_request_template.md @@ -5,8 +5,11 @@ feat(validatorName): brief title of what has been done\n<!--- briefly describe what you have done in this PR --->\n+<!--- provide some (credible) references showing the structure of the data to be validated, if applicable --->\n+\n## Checklist\n- [ ] PR contains only changes related; no stray files, etc.\n- [ ] README updated (where applicable)\n- [ ] Tests written (where applicable)\n+- [ ] References provided in PR (where applicable)\n",
        "date": "08.02.2023 06:57:58",
        "repo": "validatorjs/validator.js",
        "type": "chore",
        "sim_msg": "chore(github): tidy comments in `PULL_REQUEST_TEMPLATE.md`",
        "sim_diff": "diff --git a/.github/PULL_REQUEST_TEMPLATE.md b/.github/PULL_REQUEST_TEMPLATE.md -<!-- Filling out the information below can facilitate the review/merge of the PR. -->\n+<!--\n+Filling out the information below can facilitate the review/merge of the pull request (PR).\n+-->\n## What is the motivation for this pull request?\n-<!-- Is this a feature, bug fix, docs, etc.? -->\n+<!-- Is this a feature, bug fix, documentation, etc.? -->\n## What is the current behavior?\n<!--\nFeel free to remove any item that is irrelevant to your changes.\n-To check an item, place an \"x\" in the box like so:\n-- [x] Tests\n+To check an item, place an \"x\" in the box like so: `- [x] Tests`\n-->\n- [ ] Tests\n- [ ] Documentation\n<!--\n-Do you have any additional comments?\n-Thanks for contributing!\n+Any other comments? Thank you for contributing!\n-->\n",
        "chatgpt_rag": "feat(validatorName): add references in PR template and update checklist"
    },
    {
        "msg": "chore(demo): skip unnecessary sleep(1500) during prerendering",
        "diff": "diff --git a/examples/demo/public/index.tsx b/examples/demo/public/index.tsx @@ -7,10 +7,12 @@ import Header from './header.tsx';\nconst sleep = t => new Promise(r => setTimeout(r, t));\n+const IS_CLIENT = typeof window !== 'undefined';\n+\nconst About = lazy(() => import('./pages/about/index.js'));\n-const LazyAndLate = lazy(async () => (await sleep(1500), import('./pages/about/index.js')));\n+const LazyAndLate = lazy(async () => (IS_CLIENT && (await sleep(1500)), import('./pages/about/index.js')));\nconst CompatPage = lazy(() => import('./pages/compat.js'));\n-const ClassFields = lazy(async () => (await sleep(1500), import('./pages/class-fields.js')));\n+const ClassFields = lazy(async () => (IS_CLIENT && (await sleep(1500)), import('./pages/class-fields.js')));\nconst Files = lazy(() => import('./pages/files/index.js'));\nconst Environment = lazy(async () => (await import('./pages/environment/index.js')).Environment);\nconst JSONView = lazy(async () => (await import('./pages/json.js')).JSONView);\n",
        "date": "10.05.2021 14:33:11",
        "repo": "preactjs/wmr",
        "type": "chore",
        "sim_msg": "build: misc. aside style tweaks\n+ Improve query variables textarea padding/scroll\n+ Replace theme button with select\n+ Move version to header",
        "sim_diff": "diff --git a/pages/index.js b/pages/index.js -import { Button, Textarea, Text, Select, Box, Flex, useThemeUI } from 'theme-ui'\n+import {\n+ Textarea,\n+ Text,\n+ Select,\n+ Box,\n+ Flex,\n+ useThemeUI\n+} from 'theme-ui'\nimport { marshall, unmarshall } from '@lib/compress-json'\nimport * as templates from '@components/templates'\nimport useQueryState from '@hooks/use-query-state'\n@@ -10,8 +17,6 @@ import isEmpty from '@lib/is-empty'\nimport Main from '@components/main'\nimport decamelize from 'decamelize'\n-import Cycled from 'cycled'\n-\nimport pkg from '../package.json'\nimport {\n@@ -41,9 +46,6 @@ const updateUrl = debounce(({ setQuery, code, queryVariables }) => {\n})\n})\n-const cycledMode = new Cycled(Object.keys(themeBase.colors.modes))\n-const nextMode = () => cycledMode.next()\n-\nexport default () => {\nconst [query, setQuery] = useQueryState()\nconst { theme, colorMode, setColorMode } = useThemeUI()\n@@ -66,12 +68,12 @@ export default () => {\nsetIsLoading(false)\n}, [])\n- const handleCode = newCode => {\n+ const handleCode = (newCode) => {\nsetCode(newCode)\nupdateUrl({ setQuery, code, queryVariables })\n}\n- const handleQueryVariables = event => {\n+ const handleQueryVariables = (event) => {\nconst payload = event.target.value\ntry {\nconst json = JSON.parse(payload)\n@@ -117,15 +119,16 @@ export default () => {\nbg: 'plain.backgroundColor',\ncolor: 'plain.color',\np: 3,\n- justifyContent: 'space-between',\nalignItems: 'center'\n}}\n>\n<Flex\nsx={{\n- alignItems: 'center'\n+ alignItems: 'center',\n+ flex: 1\n}}\n>\n+ <div style={{ marginRight: 10 }}>\n<Select\ndefaultValue={DEFAULT_PRESET}\nsx={{\n@@ -136,26 +139,24 @@ export default () => {\n>\n<option>{DEFAULT_PRESET}</option>\n</Select>\n- </Flex>\n- <Box>\n- <Text\n- sx={{\n- fontSize: 1\n- }}\n- >\n- <Button\n+ </div>\n+ <Select\n+ defaultValue={decamelize(colorMode, ' ')}\nsx={{\n- bg: 'plain.color',\n- color: 'plain.backgroundColor',\n- fontSize: 0,\n- ml: 2\n+ fontSize: 1,\n+ width: '8rem',\n+ p: '2px 8px'\n}}\n- onClick={() => setColorMode(nextMode())}\n+ onChange={(e) => setColorMode(e.currentTarget.value)}\n>\n- {decamelize(colorMode, ' ')}\n- </Button>\n- </Text>\n- </Box>\n+ {Object.keys(themeBase.colors.modes).map((k) => (\n+ <option key={k} value={k}>\n+ {k}\n+ </option>\n+ ))}\n+ </Select>\n+ </Flex>\n+ <Text sx={{ fontSize: 1 }}>v{pkg.version}</Text>\n</Flex>\n<Flex sx={{ flex: 1, minHeight: 0, flexDirection: 'column' }}>\n<Box\n@@ -168,7 +169,6 @@ export default () => {\nas='section'\nsx={{\nheight: '25%',\n- p: 3,\nbg: 'plain.backgroundColor',\nborderTop: '1px solid',\nborderColor: 'plain.color',\n@@ -179,7 +179,7 @@ export default () => {\nsx={{\nresize: 'none',\ncaretColor: 'plain.color',\n- padding: 0,\n+ p: 3,\noutline: 0,\nborder: 0,\nheight: '100%',\n@@ -189,17 +189,6 @@ export default () => {\nonChange={handleQueryVariables}\n/>\n</Box>\n- <Flex\n- as='footer'\n- sx={{\n- minHeight: '5%',\n- color: 'plain.color',\n- p: 3,\n- justifyContent: 'flex-end'\n- }}\n- >\n- <Text sx={{ fontSize: 1 }}>v{pkg.version}</Text>\n- </Flex>\n</Flex>\n</Flex>\n)}\n",
        "chatgpt_rag": "build: lazy load components based on client-side rendering\n+ Add check for client-side rendering before lazy loading components\n+ Update lazy loading logic for better performance"
    },
    {
        "msg": "chore: undo change to spawn code",
        "diff": "diff --git a/lib/monitor/run.js b/lib/monitor/run.js @@ -99,8 +99,6 @@ function run(options) {\nif (shouldFork) {\nvar forkArgs = cmd.args.slice(1);\nvar env = utils.merge(options.execOptions.env, process.env);\n- stdio.pop();\n- stdio.push(process.stderr);\nstdio.push('ipc');\nchild = fork(options.execOptions.script, forkArgs, {\nenv: env,\n",
        "date": "04.12.2019 16:09:33",
        "repo": "remy/nodemon",
        "type": "chore",
        "sim_msg": "test: exit non-zero for any failing test file",
        "sim_diff": "diff --git a/test/test.js b/test/test.js @@ -9,10 +9,12 @@ for (const filename of files) {\nif (filename.startsWith('test-')) {\nconst path = join(__dirname, filename);\nconsole.log(`> Running ${filename} ...`);\n- spawnSync(`${process.argv0} ${path}`, {\n+ const result = spawnSync(`${process.argv0} ${path}`, {\nshell: true,\nstdio: 'inherit',\nwindowsHide: true\n});\n+ if (result.status !== 0)\n+ process.exitCode = 1;\n}\n}\n",
        "chatgpt_rag": "monitor: fix stdio configuration in forked process"
    },
    {
        "msg": "chore(webpack): update config",
        "diff": "diff --git a/html/webpack.config.js b/html/webpack.config.js @@ -42,12 +42,9 @@ module.exports = {\n},\n{\ntest: /\\.(eot|png|svg|ttf|woff)/,\n- use: {\n- loader: 'url-loader',\n- options: {\n- limit: false,\n- name: 'assets/[name].[ext]'\n- }\n+ type: 'asset',\n+ generator: {\n+ filename: 'assets/[name][ext]'\n}\n}\n]\n",
        "date": "19.07.2021 18:09:57",
        "repo": "pypy-vrc/vrcx",
        "type": "chore",
        "sim_msg": "build: do not add image-webpack-loader at all in development",
        "sim_diff": "diff --git a/webpack.config.js b/webpack.config.js @@ -136,8 +136,8 @@ const base = {\ntest: /\\.(gif|jpe?g|png|svg)$/,\nuse: [\n{ loader: 'file-loader', query: { name: 'static/[name]_[hash:7].[ext]' } },\n- { loader: 'image-webpack-loader', query: { bypassOnDebug: true } },\n- ],\n+ nodeEnv !== 'development' && { loader: 'image-webpack-loader' },\n+ ].filter(Boolean),\n},\n{\n",
        "chatgpt_rag": "build: switch to asset module for font files with new filename pattern"
    },
    {
        "msg": "chore(docs): update components list",
        "diff": "diff --git a/packages/kiwi-core/docs/components/components.js b/packages/kiwi-core/docs/components/components.js -// Dear maintainers, please arrange components alphabetically. Thanks :)\n+/**\n+ * NOTE:\n+ *\n+ * Dear maintainers,\n+ * Components listed in this file should be listed alphabetically. Thanks :)\n+ */\nconst components = [\n'Accordion',\n",
        "date": "02.03.2020 15:42:15",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "fix(docs): fix system link",
        "sim_diff": "diff --git a/packages/doc/src/components/Layout/Layout.jsx b/packages/doc/src/components/Layout/Layout.jsx @@ -144,7 +144,7 @@ const Layout = ({\nGuidelines\n</HeaderLink>\n<HeaderLink to=\"/components\">Components</HeaderLink>\n- <HeaderLink to=\"/system\">System</HeaderLink>\n+ <HeaderLink to=\"/system/getting-started\">System</HeaderLink>\n</Header>\n<TabBar>\n@@ -156,7 +156,7 @@ const Layout = ({\n<ReactLogo />\nComponents\n</TabBar.Tab>\n- <TabBar.Tab to=\"/system\">\n+ <TabBar.Tab to=\"/system/getting-started\">\n<WrenchIcon />\nSystem\n</TabBar.Tab>\n",
        "chatgpt_rag": "chore(docs): update components.js to include alphabetical arrangement note"
    },
    {
        "msg": "chore: add email to docs\nTo prove ownership my email must be added to the docs.",
        "diff": "diff --git a/docs/lib/app.js b/docs/lib/app.js @@ -87,6 +87,7 @@ export default (locals, callback) => {\ndebug: false // Set debug to true if you want to inspect the dropdown\n});\n</script>\n+ <!-- avangate: Evan@lostonia.com -->\n</body>\n</html>`;\ncallback(null, markup);\n",
        "date": "08.11.2018 19:12:26",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "sim_msg": "docs(app): adds sharethis buttons\nRelates to",
        "sim_diff": "diff --git a/docs-src/tools/index.html.js b/docs-src/tools/index.html.js @@ -30,6 +30,7 @@ export default ({ attributes, files, publicPath, title }) => `\n<script nomodule src=\"${publicPath}legacy/webcomponentsjs/webcomponents-loader.js\"></script>\n<script nomodule src=\"${publicPath}legacy/webcomponentsjs/custom-elements-es5-adapter.js\"></script>\n${generateJs(files.js, { publicPath, attrs: attributes.script })}\n+ <script src=\"//platform-api.sharethis.com/js/sharethis.js#property=5a853806225fbd0013ea3f16&product=sop\" async></script>\n</body>\n</html>\n`.trim();\n",
        "chatgpt_rag": "docs(lib): adds avangate email address"
    },
    {
        "msg": "chore(divider): update divider a11y",
        "diff": "diff --git a/packages/chakra-ui-core/src/CDivider/CDivider.js b/packages/chakra-ui-core/src/CDivider/CDivider.js *\n* @see Docs https://vue.chakra-ui.com/divider\n* @see Source https://github.com/chakra-ui/chakra-ui-vue/blob/master/packages/chakra-ui-core/src/CDivider/CDivider.js\n+ * @see A11y https://github.com/chakra-ui/chakra-ui-vue/blob/master/packages/chakra-ui-core/src/CDivider/accessibility.md\n*/\nimport CBox from '../CBox'\n@@ -45,7 +46,8 @@ const CDivider = {\n...forwardProps(this.$props)\n},\nattrs: {\n- 'aria-orientation': this.orientation\n+ 'aria-orientation': this.orientation,\n+ 'data-chakra-component': 'CDivider'\n}\n})\n}\n",
        "date": "16.04.2020 23:43:19",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "fix(QKnob): directly use fresh reference to root node on panning",
        "sim_diff": "diff --git a/ui/src/components/knob/QKnob.js b/ui/src/components/knob/QKnob.js -import { h, ref, computed, watch, onMounted, getCurrentInstance } from 'vue'\n+import { h, ref, computed, watch, getCurrentInstance } from 'vue'\nimport QCircularProgress from '../circular-progress/QCircularProgress.js'\nimport TouchPan from '../../directives/TouchPan.js'\n@@ -65,7 +65,7 @@ export default createComponent({\n: props.innerMax\n))\n- let centerPosition, $el\n+ let centerPosition\nfunction normalizeModel () {\nmodel.value = props.modelValue === null\n@@ -148,7 +148,7 @@ export default createComponent({\n})\nfunction updateCenterPosition () {\n- const { top, left, width, height } = $el.getBoundingClientRect()\n+ const { top, left, width, height } = proxy.$el.getBoundingClientRect()\ncenterPosition = {\ntop: top + height / 2,\nleft: left + width / 2\n@@ -250,10 +250,6 @@ export default createComponent({\nreturn h('input', formAttrs.value)\n}\n- onMounted(() => {\n- $el = proxy.$el\n- })\n-\nreturn () => {\nconst data = {\nclass: classes.value,\n",
        "chatgpt_rag": "feat(CDivider): add data-chakra-component attribute for accessibility and component identification"
    },
    {
        "msg": "chore: add option to build fro production",
        "diff": "diff --git a/website/nuxt.config.js b/website/nuxt.config.js @@ -97,6 +97,7 @@ export default {\n},\nbabel: {\nplugins: [\n+ ['@babel/plugin-proposal-private-property-in-object', { loose: true }],\n'@babel/plugin-proposal-optional-chaining'\n]\n}\n",
        "date": "26.08.2021 03:46:03",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "docs: add sourcemaps",
        "sim_diff": "diff --git a/nuxt.config.js b/nuxt.config.js @@ -16,9 +16,12 @@ module.exports = {\nbuild: {\nextractCSS: true,\n+ cssSourceMap: true,\nextend(config) {\nconfig.resolve.alias['vue'] = 'vue/dist/vue.common'\n+ config.devtool = 'source-map'\n+\nconfig.module.rules.push({\ntest: /\\.md$/,\nuse: [\n@@ -30,6 +33,7 @@ module.exports = {\n}\n},\n+\nloading: {\ncolor: '#59cc93'\n},\n",
        "chatgpt_rag": "feat: add @babel/plugin-proposal-private-property-in-object with loose option in babel plugins"
    },
    {
        "msg": "chore(pycandela): version 0.4.0",
        "diff": "diff --git a/python/pycandela/setup.py b/python/pycandela/setup.py @@ -2,7 +2,7 @@ from distutils.core import setup\nsetup(\nname='pycandela',\n- version='0.3.0',\n+ version='0.4.0',\ndescription='Jupyter interface for Candela visualization components',\nauthor='Kitware, Inc.',\nauthor_email='kitware@kitware.com',\n",
        "date": "16.05.2018 15:29:38",
        "repo": "kitware/candela",
        "type": "chore",
        "sim_msg": "chore: update prettier / prettier-styles version",
        "sim_diff": "diff --git a/package.json b/package.json \"mermaid\": \"8.13.8\",\n\"net\": \"^1.0.2\",\n\"node-fetch\": \"2.6.7\",\n- \"ory-prettier-styles\": \"1.1.2\",\n+ \"ory-prettier-styles\": \"1.2.0\",\n\"parser-front-matter\": \"1.6.4\",\n- \"prettier\": \"2.3.2\",\n+ \"prettier\": \"2.6.2\",\n\"prism-react-renderer\": \"1.2.1\",\n\"prismjs\": \"1.27.0\",\n\"ramda\": \"^0.27.1\",\n",
        "chatgpt_rag": "chore: update pycandela version to 0.4.0"
    },
    {
        "msg": "chore: update changesets config",
        "diff": "diff --git a/.changeset/config.json b/.changeset/config.json \"access\": \"public\",\n\"baseBranch\": \"master\",\n\"ignore\": [],\n-\n- \"changelog\": \"@changesets/cli/changelog\"\n+ \"changelog\": [\"@changesets/changelog-github\", { \"repo\": \"jaredpalmer/razzle\" }]\n}\n\\ No newline at end of file\n",
        "date": "01.03.2022 19:04:14",
        "repo": "jaredpalmer/razzle",
        "type": "chore",
        "sim_msg": "fix(Feed): update prepublished tag translation string",
        "sim_diff": "diff --git a/lib/translations.json b/lib/translations.json {\n- \"updated\": \"2019-02-14T14:37:45.985Z\",\n+ \"updated\": \"2019-02-14T17:51:42.716Z\",\n\"title\": \"live\",\n\"data\": [\n{\n},\n{\n\"key\": \"styleguide/TeaserFeed/InternalOnlyTag\",\n- \"value\": \"INTERN\"\n+ \"value\": \"Nur intern publiziert\"\n}\n]\n}\n\\ No newline at end of file\n",
        "chatgpt_rag": "chore(Changeset): update changelog configuration to use @changesets/changelog-github in jaredpalmer/razzle repo"
    },
    {
        "msg": "chore(docs): change Modal transition time for better understanding\nincreased the transition timings for better understanding of difference between modalTransition and backdropTransition\nCloses",
        "diff": "diff --git a/docs/lib/examples/ModalCustomTimeout.js b/docs/lib/examples/ModalCustomTimeout.js @@ -23,7 +23,7 @@ class ModalExample extends React.Component {\nreturn (\n<div>\n<Button color=\"danger\" onClick={this.toggle}>{this.props.buttonLabel}</Button>\n- <Modal isOpen={this.state.modal} modalTransition={{ timeout: 20 }} backdropTransition={{ timeout: 10 }}\n+ <Modal isOpen={this.state.modal} modalTransition={{ timeout: 700 }} backdropTransition={{ timeout: 1300 }}\ntoggle={this.toggle} className={this.props.className}>\n<ModalHeader toggle={this.toggle}>Modal title</ModalHeader>\n<ModalBody>\n",
        "date": "29.05.2018 22:58:44",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "sim_msg": "fix(a11y): ensure close button gets an id and is referenced properly",
        "sim_diff": "diff --git a/src/Modal/index.jsx b/src/Modal/index.jsx @@ -9,8 +9,6 @@ import Icon from '../Icon';\nimport newId from '../utils/newId';\nimport Variant from '../utils/constants';\n-const closeModalButtonId = newId('paragonCloseModalButton');\n-\nclass Modal extends React.Component {\nconstructor(props) {\nsuper(props);\n@@ -20,6 +18,7 @@ class Modal extends React.Component {\nthis.setFirstFocusableElement = this.setFirstFocusableElement.bind(this);\nthis.setCloseButton = this.setCloseButton.bind(this);\n+ this.closeModalButtonId = newId('paragonCloseModalButton');\nthis.headerId = newId();\nthis.el = document.createElement('div');\n@@ -214,17 +213,17 @@ class Modal extends React.Component {\n<div className=\"modal-content\">\n<div className=\"modal-header\">\n<h2 className=\"modal-title\" id={this.headerId}>{this.props.title}</h2>\n- { renderHeaderCloseButton &&\n+ {renderHeaderCloseButton && (\n<Button\nclassName=\"p-1 js-close-modal-on-click\"\n- aria-labelledby={closeModalButtonId}\n+ aria-labelledby={this.closeModalButtonId}\nonClick={this.close}\ninputRef={this.setFirstFocusableElement}\nonKeyDown={this.handleKeyDown}\n>\n<Icon className=\"fa fa-times js-close-modal-on-click\" />\n</Button>\n- }\n+ )}\n</div>\n<div className=\"modal-body\">\n{this.renderBody()}\n@@ -232,6 +231,7 @@ class Modal extends React.Component {\n<div className=\"modal-footer\">\n{this.renderButtons()}\n<Button\n+ id={this.closeModalButtonId}\nbuttonType=\"secondary\"\nclassName=\"js-close-modal-on-click\"\nonClick={this.close}\n",
        "chatgpt_rag": "style: update modal transition timeouts for better user experience"
    },
    {
        "msg": "chore: 86 - Add Docker build to Travis\ncloses - added docker build instructions to travis config.",
        "diff": "diff --git a/.travis.yml b/.travis.yml +sudo: required\n+\n+services:\n+ - docker\n+\nlanguage: node_js\nnode_js:\n- '8'\n@@ -14,3 +19,5 @@ script:\n- npm install --no-optional\n- npm run test\n- npm run build\n+- docker build -t crviz -f Dockerfile .\n+- docker build -t crviz-gh -f Dockerfile.gh .\n\\ No newline at end of file\n",
        "date": "26.06.2018 10:03:25",
        "repo": "iqtlabs/crviz",
        "type": "chore",
        "sim_msg": "ci: use default osx_image in .travis.yml",
        "sim_diff": "diff --git a/.travis.yml b/.travis.yml -sudo: required\n-dist: trusty\n-group: travis_latest\n-\n-services:\n- - docker\n-\nlanguage: node_js\nos:\n- linux\n- osx\n-osx_image: xcode8.3\n+#osx_image: xcode11.6\nnode_js:\n- \"10\"\n@@ -61,7 +54,7 @@ before_install:\n- npm install -g npm\n- npm --version\n-install: travis_wait 40 npm install\n+install: npm install\nbefore_script:\n- COMMIT_LOG=`git log -1 --format='%ci %H %s'`\n",
        "chatgpt_rag": "ci: add docker build commands to .travis.yml"
    },
    {
        "msg": "chore(test): fix browser config",
        "diff": "diff --git a/karma.conf.babel.js b/karma.conf.babel.js @@ -29,7 +29,7 @@ const formatError = (msg) => {\nexport default (karmaConfig) => {\nkarmaConfig.set({\nbasePath: process.cwd(),\n- browsers: ['ChromeHeadless'],\n+ browsers: ['puppeteer'],\nclient: {\nmocha: {\nreporter: 'html', // change Karma's debug.html to mocha web reporter\n@@ -47,6 +47,8 @@ export default (karmaConfig) => {\npuppeteer: {\nbase: 'ChromeHeadless',\nflags: [\n+ '--disable-setuid-sandbox',\n+ '--no-sandbox',\n// Avoid \"Maximum call stack size exceeded\" errors on CircleCI\n'--stack-trace-limit 50000',\n],\n",
        "date": "29.10.2017 16:57:17",
        "repo": "semantic-org/semantic-ui-react",
        "type": "chore",
        "sim_msg": "chore(appveyor): add chrome and firefox tests",
        "sim_diff": "diff --git a/karma.conf.js b/karma.conf.js @@ -70,7 +70,7 @@ module.exports = function (config) {\n} else if (isCi) {\n// AppVeyor\nif (isWindows) {\n- browsers = ['IE']\n+ browsers = ['IE', 'ChromeHeadless', 'Firefox']\n// Travis\n} else {\nbrowsers = ['ChromeHeadless', 'Firefox']\n",
        "chatgpt_rag": "chore(puppeteer): update puppeteer configuration with additional flags"
    },
    {
        "msg": "chore(switch): cleared jest cache and spy works now",
        "diff": "diff --git a/packages/kiwi-core/src/Switch/tests/switch.test.js b/packages/kiwi-core/src/Switch/tests/switch.test.js @@ -32,12 +32,11 @@ it('should switch', async () => {\n})\nit('should emit a change event', async () => {\n- const events = []\n- const eventsHandler = jest.fn(evt => events.push(evt.type))\n+ const spy = jest.fn()\nconst { getByTestId } = renderComponent(\n{\nmethods: {\n- handleChange: eventsHandler\n+ handleChange: spy\n},\ntemplate: `<Toggle data-testid=\"label\" @change=\"handleChange\" /> `\n}\n@@ -45,5 +44,6 @@ it('should emit a change event', async () => {\nconst label = getByTestId('label')\nuserEvent.click(label)\n- expect(events).toEqual(['change'])\n+\n+ expect(spy).toHaveBeenCalledTimes(1)\n})\n",
        "date": "01.03.2020 03:12:13",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "test(switch): add onchange callback to tests using checked prop",
        "sim_diff": "diff --git a/src/__experimental__/components/switch/switch.spec.js b/src/__experimental__/components/switch/switch.spec.js @@ -61,12 +61,12 @@ describe(\"Switch\", () => {\ndescribe(\"controlled behaviour\", () => {\nit(\"passes checked value to the CheckableInput\", () => {\n- const wrapper = render({ checked: true }, mount);\n+ const wrapper = render({ checked: true, onChange: jest.fn() }, mount);\nexpect(wrapper.find(CheckableInput).prop(\"checked\")).toBe(true);\n});\nit(\"reacts properly to checked prop change\", () => {\n- const wrapper = render({ checked: true }, mount);\n+ const wrapper = render({ checked: true, onChange: jest.fn() }, mount);\nexpect(wrapper.find(CheckableInput).prop(\"checked\")).toBe(true);\nact(() => {\nwrapper.setProps({ checked: false });\n@@ -75,7 +75,7 @@ describe(\"Switch\", () => {\nexpect(wrapper.find(CheckableInput).prop(\"checked\")).toBe(false);\n});\n- it(\"passess event to the provided onChange prop when change is triggered\", () => {\n+ it(\"passes event to the provided onChange prop when change is triggered\", () => {\nconst onChangeMock = jest.fn();\nconst event = {\ntarget: {\n@@ -115,12 +115,12 @@ describe(\"Switch\", () => {\ndescribe(\"default translation\", () => {\nit(\"has default translation for on\", () => {\n- const wrapper = render({ checked: true }, mount);\n+ const wrapper = render({ checked: true, onChange: jest.fn() }, mount);\nexpect(getLabel(wrapper)).toBe(\"ON\");\n});\nit(\"has default translation for off\", () => {\n- const wrapper = render({ checked: false }, mount);\n+ const wrapper = render({ checked: false, onChange: jest.fn() }, mount);\nexpect(getLabel(wrapper)).toBe(\"OFF\");\n});\n});\n@@ -131,12 +131,12 @@ describe(\"Switch\", () => {\n});\nit(\"can use i18n for on\", () => {\n- const wrapper = render({ checked: true }, mount);\n+ const wrapper = render({ checked: true, onChange: jest.fn() }, mount);\nexpect(getLabel(wrapper)).toBe(\"SUR\");\n});\nit(\"can use i18n for off\", () => {\n- const wrapper = render({ checked: false }, mount);\n+ const wrapper = render({ checked: false, onChange: jest.fn() }, mount);\nexpect(getLabel(wrapper)).toBe(\"DE\");\n});\n});\n",
        "chatgpt_rag": "test(switch): update event handler in tests to use a spy function"
    },
    {
        "msg": "chore(package): remove changelog deploy scripts",
        "diff": "diff --git a/package.json b/package.json \"build:docs-toc\": \"doctoc ./.github/CONTRIBUTING.md --github --maxlevel 4\",\n\"build:docs-cname\": \"echo react.semantic-ui.com > docs/build/CNAME\",\n\"build:changelog\": \"github_changelog_generator --no-issues --no-unreleased --release-branch master --since-tag $(git describe --abbrev=0 --tags $(git rev-parse HEAD~400))\",\n- \"deploy:changelog\": \"git add CHANGELOG.md && git commit -m 'docs(changelog): update changelog [ci skip]' && git push\",\n\"predeploy:docs\": \"cross-env NODE_ENV=production yarn build:docs && yarn build:docs-cname\",\n\"deploy:docs\": \"gh-pages -d docs/build -m 'deploy docs [ci skip]'\",\n- \"postdeploy:docs\": \"yarn build:changelog && yarn deploy:changelog\",\n\"lint\": \"cross-env NODE_ENV=production eslint .\",\n\"lint:fix\": \"yarn lint --fix\",\n\"prerelease\": \"yarn lint && yarn tsd:lint && yarn tsd:test && yarn test && cross-env NODE_ENV=production yarn build\",\n",
        "date": "25.03.2018 10:21:17",
        "repo": "semantic-org/semantic-ui-react",
        "type": "chore",
        "sim_msg": "feat(package): remove gitbook precommit check",
        "sim_diff": "diff --git a/package.json b/package.json \"lint:ec\": \"echint\",\n\"lint\": \"yarn lint:js && yarn lint:scss && yarn lint:ec\",\n\"packup\": \"yarn build-package && yarn pack\",\n- \"precommit\":\n- \"yarn lint && yarn test && yarn build-package && yarn build-styleguide && yarn build-gitbook\",\n+ \"precommit\": \"yarn lint && yarn test && yarn build-package && yarn build-styleguide\",\n\"release:changelog\": \"changelog\",\n\"release\": \"scripts/release.sh\",\n\"scaffold\": \"node scripts/scaffold.js\",\n",
        "chatgpt_rag": "chore(package): remove gitbook predeploy check and postdeploy docs build step"
    },
    {
        "msg": "chore(release): 6.0.0",
        "diff": "diff --git a/package.json b/package.json {\n\"name\": \"@nuxtjs/firebase\",\n- \"version\": \"5.2.0\",\n+ \"version\": \"6.0.0\",\n\"description\": \"Intergrate Firebase into your Nuxt project.\",\n\"keywords\": [\n\"firebase\",\n",
        "date": "07.06.2020 21:08:34",
        "repo": "nuxt-community/firebase-module",
        "type": "chore",
        "sim_msg": "chore: prepare for contributions",
        "sim_diff": "diff --git a/packages/nuxt-module/package.json b/packages/nuxt-module/package.json \"description\": \"Storefront UI Module for Nuxt.js\",\n\"repository\": \"\",\n\"private\": true,\n+ \"author\": \"Jakub Andrzejewski\",\n\"license\": \"MIT\",\n\"contributors\": [\n{\n",
        "chatgpt_rag": "chore: update version to 6.0.0 for @nuxtjs/firebase package"
    },
    {
        "msg": "chore(search-input): Only show public methods",
        "diff": "diff --git a/app/components/search-input.js b/app/components/search-input.js @@ -51,7 +51,8 @@ export default Component.extend({\n'hierarchy.lvl1',\n'hierarchy.lvl2'\n],\n- tagFilters: [`version:${projectVersion}`]\n+ tagFilters: [`version:${projectVersion}`],\n+ facetFilters: ['access:public']\n};\nconst searchObj = {\n",
        "date": "27.01.2018 14:32:10",
        "repo": "ember-learn/ember-api-docs",
        "type": "chore",
        "sim_msg": "fix(Search): re-enable \"shame on us\" state (submitting when no results)",
        "sim_diff": "diff --git a/components/Search/index.js b/components/Search/index.js @@ -296,7 +296,6 @@ class Search extends Component {\nfilters,\nsort,\nloadingFilters,\n- totalCount,\nallowFocus\n} = this.state\n@@ -305,7 +304,7 @@ class Search extends Component {\n<form onSubmit={this.onSubmit}>\n<Input\nvalue={searchQuery}\n- allowSearch={!!totalCount && searchQuery !== submittedQuery}\n+ allowSearch={searchQuery !== submittedQuery}\nallowFocus={allowFocus}\nonChange={this.onInputChange}\nonSearch={this.onSearch}\n",
        "chatgpt_rag": "feat(SearchInput): add facetFilters for public access in search component"
    },
    {
        "msg": "chore(issueTemplate): update demo link",
        "diff": "diff --git a/ISSUE_TEMPLATE.md b/ISSUE_TEMPLATE.md - components: `name`\n- reactstrap version `#x.x.x`\n-- import method `umd/csj/es` (if umd, are you using the \"full\" version (only for v5+)?)\n+- import method `umd/csj/es` <!-- (if umd, are you using the \"full\" version (only for v5+)?) -->\n- react version `#x.x.x`\n- bootstrap version `#x.x.x`\n@@ -29,9 +29,8 @@ paste error message with stacktrack here\n### Code\n<!--\n-Fork a link (for the corresponding version) and update it to demonstrate your issue.\n- - v4 (with react 15): issue http://codepen.io/eddywashere/pen/ZOjmkm\n- - v5 (with react 16): issue https://codepen.io/TheSharpieOne/pen/GMMPEZ\n+Fork the link and update it to demonstrate your issue.\n+https://stackblitz.com/edit/reactstrap?file=Example.js\nand/or add the code which causes the issue directly here\n-->\n",
        "date": "04.05.2018 12:07:08",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "sim_msg": "perf(ui): BundleModules - render Popover on mouse enter\nprevent rendering on load",
        "sim_diff": "diff --git a/packages/ui/src/components/bundle-modules/bundle-modules.jsx b/packages/ui/src/components/bundle-modules/bundle-modules.jsx -import React, { useCallback, useMemo } from 'react';\n+import React, { useCallback, useMemo, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { get, isEmpty, map } from 'lodash';\n@@ -26,10 +26,19 @@ import { MetricsTableSearch } from '../metrics-table-search';\nimport { ModuleInfo } from '../module-info';\nimport css from './bundle-modules.module.css';\n-const getRenderRowHeader = ({ labels, chunks, CustomComponentLink }) => (row) => {\n+const RowHeader = ({ row, chunks, labels, CustomComponentLink }) => {\nconst chunkIds = map(chunks, 'id');\n+\n+ const [showPopopver, setPopover] = useState(false);\n+ const handleOnMouseEnter = useCallback(() => setPopover(true), [showPopopver]);\n+ const content = <FileName name={row.label} />;\n+\nreturn (\n- <Popover ariaLabel=\"View module info\" label={<FileName name={row.label} />}>\n+ <div onMouseEnter={handleOnMouseEnter}>\n+ {!showPopopver ?\n+ content\n+ : (\n+ <Popover ariaLabel=\"View module info\" label={content}>\n<ModuleInfo\nclassName={css.namePopover}\nitem={row}\n@@ -39,9 +48,33 @@ const getRenderRowHeader = ({ labels, chunks, CustomComponentLink }) => (row) =>\ncustomComponentLink={CustomComponentLink}\n/>\n</Popover>\n+ )}\n+ </div>\n);\n};\n+RowHeader.propTypes = {\n+ row: PropTypes.shape({\n+ label: PropTypes.string,\n+ }).isRequired,\n+ chunks: PropTypes.arrayOf(\n+ PropTypes.shape({\n+ id: PropTypes.string,\n+ name: PropTypes.string,\n+ }),\n+ ),\n+ labels: PropTypes.arrayOf(PropTypes.string).isRequired,\n+ CustomComponentLink: PropTypes.elementType.isRequired,\n+};\n+\n+RowHeader.defaultProps = {\n+ chunks: [],\n+};\n+\n+const getRenderRowHeader = ({ labels, chunks, CustomComponentLink }) => (row) => (\n+ <RowHeader row={row} chunks={chunks} labels={labels} CustomComponentLink={CustomComponentLink} />\n+);\n+\nconst Title = () => {\nreturn (\n<FlexStack space=\"xxxsmall\" className={css.title}>\n@@ -50,11 +83,7 @@ const Title = () => {\n<Stack space=\"xxxsmall\">\n<p>{I18N.MODULES_INFO}</p>\n<p>\n- <a\n- href={config.documentation.modules}\n- target=\"_blank\"\n- rel=\"noreferrer\"\n- >\n+ <a href={config.documentation.modules} target=\"_blank\" rel=\"noreferrer\">\n{I18N.READ_MORE}\n</a>\n</p>\n@@ -89,7 +118,10 @@ export const BundleModules = ({\n}, []);\nconst labels = useMemo(() => map(jobs, 'label'), [jobs]);\n- const renderRowHeader = useMemo(() => getRenderRowHeader({ labels, chunks, CustomComponentLink }), [labels, chunks]);\n+ const renderRowHeader = useMemo(\n+ () => getRenderRowHeader({ labels, chunks, CustomComponentLink }),\n+ [labels, chunks],\n+ );\nconst emptyMessage = useMemo(\n() => (\n<EmptySet resources=\"modules\" filtered={totalRowCount !== 0} resetFilters={clearSearch} />\n",
        "chatgpt_rag": "chore: Update ISSUE_TEMPLATE.md with corrected links and comments"
    },
    {
        "msg": "chore(xhr_wrapper): add comment",
        "diff": "diff --git a/src/common/api/utils/xhr_wrapper.js b/src/common/api/utils/xhr_wrapper.js @@ -53,6 +53,7 @@ const requestWrapper = (\n*/\nasync function parseJSON (res: Response): Object {\nlet json: Object\n+ // status response field in return object\ntry {\njson = await res.json()\n} catch (e) {\n",
        "date": "06.09.2017 12:19:47",
        "repo": "metnew/suicrux",
        "type": "chore",
        "sim_msg": "test: fix undefined url",
        "sim_diff": "diff --git a/lib/utils/request-wrapper.js b/lib/utils/request-wrapper.js @@ -84,15 +84,20 @@ const requestWrapper = (url, options) => {\n// server\noptions.headers.server = 'RSSHub';\n+ try {\n// referer\nif (!options.headers.referer && !options.headers.Referer) {\nconst urlHandler = new URL(url);\noptions.headers.referer = urlHandler.origin;\n}\n+ // host\nif (!options.headers.host && !options.headers.Host) {\nconst urlHandler = new URL(url);\noptions.headers.host = urlHandler.host;\n}\n+ } catch (e) {\n+ // do nothing\n+ }\n};\nconst httpWrap = (func) => {\n",
        "chatgpt_rag": "feat: add status response field in return object for parseJSON function"
    },
    {
        "msg": "chore: bump package version",
        "diff": "diff --git a/packages/chakra-ui-core/CHANGELOG.md b/packages/chakra-ui-core/CHANGELOG.md # Change Log\n+## 0.6.3\n+\n+### Patch Changes\n+\n+- fix: includes missing style props for border-radius and flex-grow style declarations\"\n+\n## 0.6.2\n### Patch Changes\n",
        "date": "15.09.2020 20:20:31",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "chore(changelog): update icons changelog with what we have on master",
        "sim_diff": "diff --git a/packages/icons/CHANGELOG.md b/packages/icons/CHANGELOG.md All notable changes to this project will be documented in this file.\nSee [Conventional Commits](https://conventionalcommits.org) for commit guidelines.\n+# [1.2.0](https://github.com/Gympass/yoga/compare/@gympass/yoga-icons@1.1.2...@gympass/yoga-icons@1.2.0) (2021-07-20)\n+\n+### Features\n+\n+- create component avatar ([58e8dd6](https://github.com/Gympass/yoga/commit/58e8dd6cdf1ac749cdcaa08a5dc1d93747e53aa2))\n+\n## [1.1.2](https://github.com/Gympass/yoga/compare/@gympass/yoga-icons@1.1.1...@gympass/yoga-icons@1.1.2) (2021-06-16)\n### Bug Fixes\n",
        "chatgpt_rag": "chore(changelog): update chakra-ui-core changelog with version 0.6.3 patch changes"
    },
    {
        "msg": "chore: update oliver\n[skip ci]",
        "diff": "diff --git a/.github/oliver.yml b/.github/oliver.yml # Number of days the issue was closed in before the bot should reply.\n# If the issue was closed in more days than this, the bot won't reply.\n# Use `daysClosedIn: false` to *always* reply.\n-daysClosedIn: false\n+daysClosedIn: 100\n# Labels to look for on issues the bot can reply to\nlabels:\n",
        "date": "01.02.2018 18:58:26",
        "repo": "remy/nodemon",
        "type": "chore",
        "sim_msg": "test: conv filters date",
        "sim_diff": "diff --git a/botfront/imports/ui/components/conversations/ConversationsBrowser.jsx b/botfront/imports/ui/components/conversations/ConversationsBrowser.jsx @@ -253,8 +253,8 @@ const ConversationsBrowserContainer = (props) => {\nconfidenceFilter: -1,\nxThanConfidence: 'lessThan',\nactionFilters: [],\n- startDate: moment().subtract(7, 'd'),\n- endDate: moment(),\n+ startDate: !window.Cypress ? moment().subtract(7, 'd') : null,\n+ endDate: !window.Cypress ? moment() : null,\ntimeZoneHoursOffset: null,\nuserId: null,\noperatorActionsFilters: 'or',\n",
        "chatgpt_rag": "feat: update daysClosedIn value to 100"
    },
    {
        "msg": "chore: Add CARD_TYPES constant for Type sorts",
        "diff": "diff --git a/src/utils/Sort.js b/src/utils/Sort.js @@ -55,6 +55,22 @@ const ALL_CMCS = Array.from(Array(33).keys())\n.map((x) => (x / 2).toString())\n.concat(['1000000']);\n+const CARD_TYPES = [\n+ 'Creature',\n+ 'Planeswalker',\n+ 'Instant',\n+ 'Sorcery',\n+ 'Artifact',\n+ 'Enchantment',\n+ 'Conspiracy',\n+ 'Contraption',\n+ 'Phenomenon',\n+ 'Plane',\n+ 'Scheme',\n+ 'Vanguard',\n+ 'Land',\n+];\n+\nconst SINGLE_COLOR = ['White', 'Blue', 'Black', 'Red', 'Green'];\nconst GUILDS = ['Azorius', 'Dimir', 'Rakdos', 'Gruul', 'Selesnya', 'Orzhov', 'Izzet', 'Golgari', 'Boros', 'Simic'];\nconst SHARDS_AND_WEDGES = ['Bant', 'Esper', 'Grixis', 'Jund', 'Naya', 'Mardu', 'Temur', 'Abzan', 'Jeskai', 'Sultai'];\n",
        "date": "09.03.2021 21:19:32",
        "repo": "dekkerglen/cubecobra",
        "type": "chore",
        "sim_msg": "refactor(plancard): remove unused theme",
        "sim_diff": "diff --git a/packages/yoga/src/Card/Card.theme.js b/packages/yoga/src/Card/Card.theme.js @@ -6,7 +6,6 @@ const Card = ({\nborders,\nfontWeights,\nfontSizes,\n- lineHeights,\n}) => ({\nbackgroundColor: colors.white,\npadding: {\n@@ -29,24 +28,10 @@ const Card = ({\n},\nradius: 16,\ntag: {\n- radius: radii.semiRounded,\nposition: {\ntop: spacing.medium,\nleft: spacing.medium,\n},\n- padding: {\n- right: spacing.xxsmall,\n- left: spacing.xxsmall,\n- },\n- border: {\n- width: borders.small,\n- color: colors.elements.lineAndBorders,\n- },\n- font: {\n- size: fontSizes.xsmall,\n- height: lineHeights.xsmall,\n- weight: fontWeights.medium,\n- },\n},\nsubtitle: {\nmargin: {\n@@ -74,8 +59,8 @@ const Card = ({\n},\n},\nmargin: {\n- top: spacing.xlarge,\n- bottom: spacing.xxlarge,\n+ top: spacing.small,\n+ bottom: spacing.large,\n},\n},\nlist: {\n",
        "chatgpt_rag": "refactor(utils): remove unused constants and clean up Sort.js"
    },
    {
        "msg": "chore: update circular progress jsdo",
        "diff": "diff --git a/packages/chakra-ui-core/src/CCircularProgress/CCircularProgress.js b/packages/chakra-ui-core/src/CCircularProgress/CCircularProgress.js +/**\n+ * Hey! Welcome to @chakra-ui/vue CircularProgress\n+ *\n+ * The Circular Progress component is used to indicates the progress for both determinate and indeterminate processes.\n+ *\n+ * @see Docs https://vue.chakra-ui.com/circularprogress\n+ * @see Source https://github.com/chakra-ui/chakra-ui-vue/blob/master/packages/chakra-ui-core/src/CCircularProgress/CCircularProgress.js\n+ * @see A11y https://github.com/chakra-ui/chakra-ui-vue/blob/master/packages/chakra-ui-core/src/CCircularProgress/accessibility.md\n+ */\n+\n+\nimport { baseProps } from '../config/props'\nimport { forwardProps } from '../utils'\nimport { getComputedProps } from './utils/circularprogress.styles'\nimport CBox from '../CBox'\n+/**\n+ * CCircularProgress component\n+ *\n+ * The test label that displays the progress percentage in the `CCircularProgress`\n+ *\n+ * @extends CBox\n+ * @see Docs https://vue.chakra-ui.com/circularprogress\n+ */\nconst CCircularProgressLabel = {\nname: 'CCircularProgressLabel',\nprops: baseProps,\n@@ -25,6 +44,14 @@ const CCircularProgressLabel = {\n}\n}\n+/**\n+ * CCircularProgressLabel component\n+ *\n+ * Indicates the progress for both determinate and indeterminate processes.\n+ *\n+ * @extends CBox\n+ * @see Docs https://vue.chakra-ui.com/circularprogress\n+ */\nconst CCircularProgress = {\nname: 'CCircularProgress',\ninject: ['$chakraColorMode'],\n",
        "date": "16.04.2020 21:53:12",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "feat(QCircularProgress): normalize input value",
        "sim_diff": "diff --git a/ui/src/components/circular-progress/QCircularProgress.js b/ui/src/components/circular-progress/QCircularProgress.js @@ -2,6 +2,7 @@ import Vue from 'vue'\nimport SizeMixin from '../../mixins/size.js'\nimport { mergeSlotSafely } from '../../utils/slot.js'\n+import { between } from '../../utils/format.js'\nconst\nradius = 50,\n@@ -55,6 +56,10 @@ export default Vue.extend({\n},\ncomputed: {\n+ normalizedValue () {\n+ return between(this.value, this.min, this.max)\n+ },\n+\nsvgStyle () {\nreturn { transform: `rotate3d(0, 0, 1, ${this.angle - 90}deg)` }\n},\n@@ -78,7 +83,7 @@ export default Vue.extend({\n},\nstrokeDashOffset () {\n- const progress = 1 - (this.value - this.min) / (this.max - this.min)\n+ const progress = 1 - (this.normalizedValue - this.min) / (this.max - this.min)\nreturn (this.dir * progress) * circumference\n},\n@@ -91,7 +96,7 @@ export default Vue.extend({\nrole: 'progressbar',\n'aria-valuemin': this.min,\n'aria-valuemax': this.max,\n- 'aria-valuenow': this.indeterminate === true ? void 0 : this.value\n+ 'aria-valuenow': this.indeterminate === true ? void 0 : this.normalizedValue\n}\n}\n},\n@@ -165,7 +170,7 @@ export default Vue.extend({\nh('div', {\nstaticClass: 'q-circular-progress__text absolute-full row flex-center content-center',\nstyle: { fontSize: this.fontSize }\n- }, this.$scopedSlots.default !== void 0 ? this.$scopedSlots.default() : [ h('div', [ this.value ]) ])\n+ }, this.$scopedSlots.default !== void 0 ? this.$scopedSlots.default() : [ h('div', [ this.normalizedValue ]) ])\n)\nreturn h('div', {\n",
        "chatgpt_rag": "refactor(CCircularProgress): normalize input value for progress calculation"
    },
    {
        "msg": "chore(docs): render spaces around \".clearfix\"",
        "diff": "diff --git a/docs/lib/Utilities/ClearfixPage.js b/docs/lib/Utilities/ClearfixPage.js @@ -12,7 +12,7 @@ export default function ClearfixPage() {\n<PageTitle title=\"Clearfix\" />\n<p>\nEasily clear <code className=\"highlighter-rouge\">float</code>s by adding\n- <code className=\"highlighter-rouge\">.clearfix</code>\n+ {' '}<code className=\"highlighter-rouge\">.clearfix</code>{' '}\n<strong>to the parent element</strong>.\nUtilizes <a href=\"http://nicolasgallagher.com/micro-clearfix-hack/\">\nthe micro clearfix</a> as popularized by Nicolas Gallagher.\n",
        "date": "04.10.2018 05:23:51",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "sim_msg": "fix: paste data - IE",
        "sim_diff": "diff --git a/src/lib/core.js b/src/lib/core.js @@ -5672,6 +5672,7 @@ export default function (context, pluginCallButtons, plugins, lang, options, _ic\ncontext.element.code.style.height = context.element.code.scrollHeight + 'px';\n},\n+ // FireFox - table delete\n_tableDelete: function () {\nconst range = core.getRange();\nconst sCell = util.getRangeFormatElement(range.startContainer);\n@@ -5688,11 +5689,48 @@ export default function (context, pluginCallButtons, plugins, lang, options, _ic\n},\nonPaste_wysiwyg: function (e) {\n- const clipboardData = e.clipboardData;\n+ const isIE = util.isIE;\n+ const clipboardData = isIE ? _w.clipboardData : e.clipboardData;\nif (!clipboardData) return true;\n- const plainText = clipboardData.getData('text/plain').replace(/\\n/g, '');\n- const cleanData = core.cleanHTML(clipboardData.getData('text/html'), core.pasteTagsWhitelistRegExp);\n+ let plainText, cleanData;\n+ if (isIE) {\n+ plainText = clipboardData.getData('Text');\n+\n+ const range = core.getRange();\n+ const tempDiv = util.createElement('DIV');\n+ const tempRange = {\n+ sc: range.startContainer,\n+ so: range.startOffset,\n+ ec: range.endContainer,\n+ eo: range.endOffset\n+ };\n+\n+ tempDiv.setAttribute('contenteditable', true);\n+ tempDiv.style.cssText = 'position:absolute; top:0; left:0; width:1px; height:1px; overflow:hidden;';\n+\n+ context.element.relative.appendChild(tempDiv);\n+ tempDiv.focus();\n+ core._editorRange();\n+\n+ _w.setTimeout(function () {\n+ cleanData = tempDiv.innerHTML;\n+ util.removeItem(tempDiv);\n+ core.setRange(tempRange.sc, tempRange.so, tempRange.ec, tempRange.eo);\n+ event._setClipboardData(e, plainText, cleanData);\n+ });\n+\n+ return true;\n+ } else {\n+ plainText = clipboardData.getData('text/plain');\n+ cleanData = clipboardData.getData('text/html');\n+ return event._setClipboardData(e, plainText, cleanData);\n+ }\n+ },\n+\n+ _setClipboardData: function (e, plainText, cleanData) {\n+ cleanData = core.cleanHTML(cleanData, core.pasteTagsWhitelistRegExp);\n+ plainText = plainText.replace(/\\n/g, '');\nconst maxCharCount = core._charCount(options.charCounterType === 'byte-html' ? cleanData : plainText);\nif (typeof functions.onPaste === 'function' && !functions.onPaste(e, cleanData, maxCharCount, core)) {\n@@ -5711,9 +5749,7 @@ export default function (context, pluginCallButtons, plugins, lang, options, _ic\ne.stopPropagation();\ne.preventDefault();\nfunctions.insertHTML(cleanData, true);\n- } else {\n- // history stack\n- core.history.push(true);\n+ return false;\n}\n},\n",
        "chatgpt_rag": "style: fix spacing issue in ClearfixPage component"
    },
    {
        "msg": "chore(PR): fix typos in the pull request template\nFix the typos in the pull request template",
        "diff": "diff --git a/PULL_REQUEST_TEMPLATE.md b/PULL_REQUEST_TEMPLATE.md <!---\nWhat types of changes does your code introduce? Put an `x` in all the boxes that apply:\n-->\n+\n- [ ] Bug fix <!-- (change which fixes an issue) -->\n- [ ] New feature <!-- (change which adds functionality) -->\n-- [ ] Chore <!-- (change which doesn't affect the usage of the package (such as a documentation, build process, or project setup change)) -->\n+- [ ] Chore <!-- (change which doesn't affect the usage of the package (such as documentation, build process, or project setup changes)) -->\n- [ ] Breaking change <!-- (fix or feature that would cause existing functionality to change) -->\n- [ ] There is an open issue which this change addresses\n- [ ] I have read the **[CONTRIBUTING](./CONTRIBUTING.md)** document.\n@@ -16,8 +17,7 @@ What types of changes does your code introduce? Put an `x` in all the boxes that\n<!-- Put any other information you believe would be useful to know when reviewing this PR below -->\n-\n<!---\nIf there is an issue this PR addresses, please make sure it is in the commit message per the Git Commit Guidelines above\n-**AND** put the issue number below, indicating that is closes or fixes the issue.\n+**AND** put the issue number below, indicating that it closes or fixes the issue.\n-->\n",
        "date": "31.10.2020 20:37:00",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "sim_msg": "style(doc): prettier --fix pull request template",
        "sim_diff": "diff --git a/.github/PULL_REQUEST_TEMPLATE.md b/.github/PULL_REQUEST_TEMPLATE.md > do that.\n## Description\n+\n<!--- Describe your changes in detail -->\n## Motivation and Context\n+\n<!--- Why is this change required? What problem does it solve? -->\n<!--- If it fixes an open issue, please link to the issue here. -->\n## How Has This Been Tested?\n+\n<!--- Please describe in detail how you tested your changes. -->\n<!--- Include details of your testing environment, and the tests you ran to -->\n<!--- see how your change affects other areas of the code, etc. -->\n## Screenshots\n+\n<!-- Only if appropriate - feel free to delete this section if it's not applicable -->\n## Types of changes\n+\n<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->\n+\n- [ ] Bug fix (non-breaking change which fixes an issue)\n- [ ] Documentation only change\n- [ ] Refactor (non-breaking change which fixes an issue without changing functionality)\n- [ ] Breaking change (fix or feature that would cause existing functionality to change)\n## Checklist\n+\n<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->\n<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->\n- [ ] :book:\n+\n- My change doesn't require a documentation update, or ...\n- it _does_ and I have updated it\n- The contribution will be subject to [The MIT license](../LICENSE), and I'm OK with that.\n- The contribution is my own original work.\n- I am ok with the stuff in [**CONTRIBUTING.md**](./CONTRIBUTING.md).\n-\n-\n-\n-\n-\n",
        "chatgpt_rag": "style(chore): update pull request template for consistency with code diff pattern"
    },
    {
        "msg": "chore: :wrench: update fs allow",
        "diff": "diff --git a/svelte.config.js b/svelte.config.js @@ -16,6 +16,16 @@ const config = {\n// hydrate the <div id=\"svelte\"> element in src/app.html\ntarget: '#svelte',\nadapter: adapter(),\n+ vite: {\n+ // https://vitejs.dev/config/#server-fs-allow\n+ server: {\n+ fs: {\n+ // Allow serving files from one level up to the project root\n+ // posts, copy\n+ allow: ['..'],\n+ },\n+ },\n+ },\n},\n}\n",
        "date": "26.11.2021 18:11:16",
        "repo": "spences10/cheat-sheets",
        "type": "chore",
        "sim_msg": "fix(vite-config): add version\nref:",
        "sim_diff": "diff --git a/packages/manager/core/vite-config/src/config.js b/packages/manager/core/vite-config/src/config.js @@ -18,6 +18,9 @@ export default {\n'@': resolve(join(process.cwd(), 'src')),\n},\n},\n+ define: {\n+ __VERSION__: process.env.VERSION ? `'${process.env.VERSION}'` : 'null',\n+ },\nplugins: [\nreactRefresh(),\nlegacy({\n",
        "chatgpt_rag": "feat(svelte): add Vite server configuration for serving files from one level up"
    },
    {
        "msg": "chore(docs): Remove reference to `onExit` for CollapsePage\nShould have been written as `onExited` as `onExit` is not an event.",
        "diff": "diff --git a/docs/lib/Components/CollapsePage.js b/docs/lib/Components/CollapsePage.js @@ -44,7 +44,7 @@ export default class CollapsePage extends React.Component {\n<SectionTitle>Events</SectionTitle>\n<p>\n- Use the <code>onEnter</code>, onEntering, onEntered, onExit, onExiting and onExited props for callbacks when the\n+ Use the <code>onEnter</code>, onEntering, onEntered, onExiting and onExited props for callbacks when the\nCollapse has finished opening (entering) or closing (exiting).\n</p>\n<div className=\"docs-example\">\n",
        "date": "23.04.2018 17:03:19",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "sim_msg": "fix(collapse/toggle): \"collapsed\" class cleared when component updated\nfix(collapse/toggle): \"collapsed\" class cleared when component updated. fixes",
        "sim_diff": "diff --git a/src/components/collapse/collapse.js b/src/components/collapse/collapse.js @@ -187,6 +187,9 @@ export default {\n}\nthis.emitState()\n},\n+ updated () {\n+ this.$root.$emit(EVENT_STATE, this.id, this.show)\n+ },\nbeforeDestroy () {\nif (this.isNav && typeof document !== 'undefined') {\nwindow.removeEventListener('resize', this.handleResize, false)\n",
        "chatgpt_rag": "chore(docs): Update event callbacks in CollapsePage component\nUpdate event callbacks in CollapsePage component to use the onEnter, onEntering, onEntered, onExiting, and onExited props for callbacks when the Collapse has finished opening or closing."
    },
    {
        "msg": "chore: package: v27.10.0",
        "diff": "diff --git a/packages/putout/ChangeLog b/packages/putout/ChangeLog +2022.09.20, v27.10.0\n+\n+feature:\n+- putout: *.md: typescript/remove-unused-types: off\n+\n2022.09.20, v27.9.0\nfeature:\n",
        "date": "20.09.2022 16:36:35",
        "repo": "coderaiser/putout",
        "type": "chore",
        "sim_msg": "chore(deps): updates devdependencies",
        "sim_diff": "diff --git a/package.json b/package.json \"@semantic-release/release-notes-generator\": \"^7.3.0\",\n\"@types/node\": \"^12.7.4\",\n\"@types/qs\": \"^6.5.3\",\n- \"@typescript-eslint/parser\": \"2.3.3\",\n- \"@typescript-eslint/eslint-plugin\": \"2.3.3\",\n+ \"@typescript-eslint/eslint-plugin\": \"2.4.0\",\n+ \"@typescript-eslint/parser\": \"2.4.0\",\n\"commitizen\": \"^4.0.3\",\n\"commitlint-config-cz\": \"^0.12.1\",\n\"cz-conventional-changelog\": \"^3.0.2\",\n\"prettier\": \"^1.18.2\",\n\"rimraf\": \"^3.0.0\",\n\"semantic-release\": \"^15.13.24\",\n- \"tap\": \"^14.6.1\",\n+ \"tap\": \"^14.7.0\",\n\"tap-mocha-reporter\": \"^5.0.0\",\n\"ts-node\": \"^8.3.0\",\n\"typescript\": \"~3.6.2\"\n",
        "chatgpt_rag": "chore: update putout to v27.10.0 and disable typescript/remove-unused-types rule for *.md files"
    },
    {
        "msg": "chore: -> __c -> __f",
        "diff": "diff --git a/packages/plugin-remove-iife/lib/remove-iife.js b/packages/plugin-remove-iife/lib/remove-iife.js @@ -25,7 +25,7 @@ module.exports.filter = (path) => {\n};\nmodule.exports.replace = () => ({\n- '((__args__a) => __c(__args__a))(__args__b)': '__c(__args__b)',\n+ '((__args__a) => __f(__args__a))(__args__b)': '__f(__args__b)',\n'(() => __body)()': '__body',\n'(function() {})()': (vars, path) => {\nconst {body} = path.node.callee.body;\n",
        "date": "14.09.2022 17:04:09",
        "repo": "coderaiser/putout",
        "type": "chore",
        "sim_msg": "fix(dce): use `path.replaceWith` instead of hacks",
        "sim_diff": "diff --git a/packages/dce/src/removal.js b/packages/dce/src/removal.js -const { traverse } = require(\"@webassemblyjs/ast\");\n+const t = require(\"@webassemblyjs/ast\");\n-function replaceWithEmptyFunc(func) {\n- const emptyFunc = {\n- type: \"Func\",\n- params: [],\n- result: [],\n- body: [],\n- name: null\n- };\n+const emptyFunc = t.func(null, [], [], []);\n- Object.assign(func, emptyFunc);\n-}\nmodule.exports = function removeFunc(moduleExport, ast) {\nconst exportName = moduleExport.name;\n@@ -19,10 +10,10 @@ module.exports = function removeFunc(moduleExport, ast) {\n// console.log(`Remove unused \"${exportName}\"`);\n- traverse(ast, {\n+ t.traverse(ast, {\nFunc(path) {\nif (path.node.name.value === funcName) {\n- replaceWithEmptyFunc(path.node);\n+ path.replaceWith(emptyFunc);\n// console.log('\\t> remove func');\n}\n},\n",
        "chatgpt_rag": "refactor(plugin-remove-iife): update replace function to use new function name `__f`"
    },
    {
        "msg": "chore(actions/utils): update comment on Awral",
        "diff": "diff --git a/src/common/actions/utils/index.js b/src/common/actions/utils/index.js @@ -14,8 +14,10 @@ const beforeCheck = a => a\nconst afterCheck = a => a.data\n/**\nCreate default Awral\n- Awral is my own tool.\n- It's not well known, but it can make your work with actions even more simpler.\n+ Awral is not recommended for production usage now\n+ But it can make your work with actions even simpler.\n+ NOTE:I strongly recommend you check Awral sources!\n+ Awral is 880B gzipped!\n{@link https://github.com/Metnew/awral}\n*/\nexport const awral = Awral.of({check, beforeCheck, afterCheck})\n",
        "date": "16.10.2017 18:26:41",
        "repo": "metnew/suicrux",
        "type": "chore",
        "sim_msg": "refactor: pass in all options minus redacted values to config resolver",
        "sim_diff": "diff --git a/packages/config/src/index.js b/packages/config/src/index.js @@ -9,12 +9,12 @@ const { normalizeConfig } = require('./normalize')\nconst { handleFiles } = require('./files')\nconst { LIFECYCLE } = require('./lifecycle')\n-const resolveConfig = async function(configFile, { cwd, context } = {}) {\n- const configPath = await getConfigPath(configFile, cwd)\n+const resolveConfig = async function(configFile, options = {}) {\n+ const configPath = await getConfigPath(configFile, options.cwd)\nconst baseDir = dirname(configPath)\nconst config = await configorama(configPath, {\n- options: { context },\n+ options: options,\nvariableSources: [\n/*{\n// Match variables ${secrets:xyz}\n",
        "chatgpt_rag": "style: update comments and documentation for Awral usage in actions utils"
    },
    {
        "msg": "chore: bump `sirv` version",
        "diff": "diff --git a/package.json b/package.json \"rollup-plugin-preserve-shebang\": \"^1.0.0\",\n\"sade\": \"^1.7.3\",\n\"semver\": \"^7.3.2\",\n- \"sirv\": \"^0.4.6\",\n+ \"sirv\": \"^1.0.0\",\n\"tar-stream\": \"^2.1.2\",\n\"terser\": \"^4.7.0\",\n\"tiny-glob\": \"^0.2.6\",\n",
        "date": "10.06.2020 16:54:35",
        "repo": "preactjs/wmr",
        "type": "chore",
        "sim_msg": "chore(dependencies): revert rollup-umd-scripts to latest public version",
        "sim_diff": "diff --git a/package.json b/package.json \"rollup-plugin-replace\": \"^2.1.0\",\n\"rollup-plugin-terser\": \"^4.0.1\",\n\"rollup-plugin-visualizer\": \"^0.9.2\",\n- \"rollup-umd-scripts\": \"^0.14.2\",\n+ \"rollup-umd-scripts\": \"^0.13.0\",\n\"rollup-watch\": \"^4.3.1\",\n\"semantic-release\": \"^15.13.2\",\n\"sinon\": \"^7.2.2\",\n",
        "chatgpt_rag": "chore(dependencies): update sirv to version 1.0.0"
    },
    {
        "msg": "chore: point installs to yarn registry",
        "diff": "diff --git a/yarn.lock b/yarn.lock \"@fortawesome/fontawesome-common-types@^0.2.28\":\nversion \"0.2.28\"\n- resolved \"https://npm.fontawesome.com/@fortawesome/fontawesome-common-types/-/0.2.28/fontawesome-common-types-0.2.28.tgz#1091bdfe63b3f139441e9cba27aa022bff97d8b2\"\n+ resolved \"https://registry.yarnpkg.com/@fortawesome/fontawesome-common-types/-/0.2.28/fontawesome-common-types-0.2.28.tgz#1091bdfe63b3f139441e9cba27aa022bff97d8b2\"\nintegrity sha512-gtis2/5yLdfI6n0ia0jH7NJs5i/Z/8M/ZbQL6jXQhCthEOe5Cr5NcQPhgTvFxNOtURE03/ZqUcEskdn2M+QaBg==\n\"@fortawesome/free-brands-svg-icons@^5.12.0\":\nversion \"5.13.0\"\n- resolved \"https://npm.fontawesome.com/@fortawesome/free-brands-svg-icons/-/5.13.0/free-brands-svg-icons-5.13.0.tgz#e79de73ba6555055204828dca9c0691e7ce5242b\"\n+ resolved \"https://registry.yarnpkg.com/@fortawesome/free-brands-svg-icons/-/5.13.0/free-brands-svg-icons-5.13.0.tgz#e79de73ba6555055204828dca9c0691e7ce5242b\"\nintegrity sha512-/6xXiJFCMEQxqxXbL0FPJpwq5Cv6MRrjsbJEmH/t5vOvB4dILDpnY0f7zZSlA8+TG7jwlt12miF/yZpZkykucA==\ndependencies:\n\"@fortawesome/fontawesome-common-types\" \"^0.2.28\"\n\"@fortawesome/free-solid-svg-icons@^5.11.2\":\nversion \"5.13.0\"\n- resolved \"https://npm.fontawesome.com/@fortawesome/free-solid-svg-icons/-/5.13.0/free-solid-svg-icons-5.13.0.tgz#44d9118668ad96b4fd5c9434a43efc5903525739\"\n+ resolved \"https://registry.yarnpkg.com/@fortawesome/free-solid-svg-icons/-/5.13.0/free-solid-svg-icons-5.13.0.tgz#44d9118668ad96b4fd5c9434a43efc5903525739\"\nintegrity sha512-IHUgDJdomv6YtG4p3zl1B5wWf9ffinHIvebqQOmV3U+3SLw4fC+LUCCgwfETkbTtjy5/Qws2VoVf6z/ETQpFpg==\ndependencies:\n\"@fortawesome/fontawesome-common-types\" \"^0.2.28\"\n",
        "date": "22.12.2020 17:59:43",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "chore: yarn lock post greenkeeper merges",
        "sim_diff": "diff --git a/yarn.lock b/yarn.lock resolved \"https://registry.yarnpkg.com/@hig/icons/-/icons-1.0.0.tgz#b2e023887beae46934a919816a56f4c9f995a9bc\"\nintegrity sha512-5cxrts555oxLT+4+iKFe1emb3tajSZAxrcNiXnmYcWi+atkMWWM7e6wGc5+cv45HyM6MCZqEaaS/nEW5avgv3w==\n-\"@hig/skeleton-item@^0.3.0\":\n- version \"0.3.1\"\n- resolved \"https://registry.yarnpkg.com/@hig/skeleton-item/-/skeleton-item-0.3.1.tgz#9729eb499d40ff61996558a179608862338193b7\"\n- dependencies:\n- \"@hig/themes\" \"^0.3.0\"\n- classnames \"^2.2.5\"\n- prop-types \"^15.6.1\"\n-\n\"@hig/styles@^0.2.3\":\nversion \"0.2.3\"\nresolved \"https://registry.yarnpkg.com/@hig/styles/-/styles-0.2.3.tgz#675631d008c1861921d6148ecf15b140c04cc5b4\"\n",
        "chatgpt_rag": "chore: update fontawesome packages in yarn lock file"
    },
    {
        "msg": "chore(testing): example of testing with supplied args",
        "diff": "diff --git a/src/features/dataset-controls/DatasetSelector.test.js b/src/features/dataset-controls/DatasetSelector.test.js @@ -17,7 +17,7 @@ const empty = {name: \"None\", url:\" \"};\nconst change = (target) => {\n}\n-const event = {\"target\": {\"name\": \"ds3\", \"url\":\"test3.url\"}};\n+const event = {\"target\": {value:\"test3.url\"}};\ndescribe('DatasetSelector', () => {\nit('renders the control', () => {\nconst selector = mount(<DatasetSelector\n@@ -31,15 +31,18 @@ describe('DatasetSelector', () => {\n});\nit('changes the selection', () => {\n- const onChange = sinon.stub()\n+ const fakeOnChange = (evt) =>{\n+\n+ }\n+ const onChangeSpy = sinon.spy(fakeOnChange);\nconst selector = mount(<DatasetSelector\nclassName={style.selector}\nselected={empty}\n- onChange={onChange}\n+ onChange={onChangeSpy}\ndatasets={datasets}\n/>);\n- selector.find('select').first().simulate(\"change\", event);\n- expect(onChange.calledOnce).to.equal(true);\n+ selector.find('select').first().simulate('change', event);\n+ expect(onChangeSpy.calledWith(datasets[2])).to.equal(true);\n});\n});\n\\ No newline at end of file\n",
        "date": "10.07.2018 15:44:43",
        "repo": "iqtlabs/crviz",
        "type": "chore",
        "sim_msg": "feat: Select click result to close options\nbugfix: Select onCreate not work",
        "sim_diff": "diff --git a/src/Select/Select.js b/src/Select/Select.js @@ -17,7 +17,14 @@ const WrappedOptionList = absoluteList(OptionList)\nconst WrappedBoxList = absoluteList(BoxList)\nconst WrappedOptionTree = absoluteList(OptionTree)\n+let closeByResult = false\n+\nconst isDescendent = (el, id) => {\n+ if (el.classList.contains(selectClass('input'))) return true\n+ if (el.classList.contains(selectClass('result'))) {\n+ closeByResult = true\n+ return false\n+ }\nif (el.getAttribute('data-id') === id) return true\nif (!el.parentElement) return false\nreturn isDescendent(el.parentElement, id)\n@@ -37,7 +44,7 @@ class Select extends PureComponent {\nthis.bindOptionFunc = this.bindOptionFunc.bind(this)\nthis.setInputReset = this.setInputReset.bind(this)\n- this.handleFocus = this.handleState.bind(this, true)\n+ this.handleFocus = this.handleFocus.bind(this)\nthis.handleBlur = this.handleState.bind(this, false)\nthis.handleClear = this.handleClear.bind(this)\nthis.handleChange = this.handleChange.bind(this)\n@@ -93,11 +100,11 @@ class Select extends PureComponent {\n}\nbindClickAway() {\n- document.addEventListener('mousedown', this.handleClickAway,)\n+ document.addEventListener('click', this.handleClickAway, true)\n}\nclearClickAway() {\n- document.removeEventListener('mousedown', this.handleClickAway)\n+ document.removeEventListener('click', this.handleClickAway, true)\n}\nhandleClickAway(e) {\n@@ -105,6 +112,14 @@ class Select extends PureComponent {\nif (!desc) this.handleState(false)\n}\n+ handleFocus(e) {\n+ if (closeByResult) {\n+ closeByResult = false\n+ return\n+ }\n+ this.handleState(true, e)\n+ }\n+\nhandleState(focus, e) {\nif (this.props.disabled === true) return\nif (focus === this.state.focus) return\n",
        "chatgpt_rag": "fix: Update DatasetSelector test to use value instead of name and url"
    },
    {
        "msg": "chore(actions/utils): add comment about Awral",
        "diff": "diff --git a/src/common/actions/utils/index.js b/src/common/actions/utils/index.js @@ -12,5 +12,10 @@ import Awral from 'awral'\nconst check = (result: Object = {ok: false}): boolean => result.ok\nconst beforeCheck = a => a\nconst afterCheck = a => a.data\n-// Create default Awral\n+/**\n+ Create default Awral\n+ Awral is my own tool.\n+ It's not well known, but it can make your work with actions even more simpler.\n+ {@link https://github.com/Metnew/awral}\n+*/\nexport const awral = Awral.of({check, beforeCheck, afterCheck})\n",
        "date": "13.10.2017 16:52:31",
        "repo": "metnew/suicrux",
        "type": "chore",
        "sim_msg": "feat: type check globals mut violation",
        "sim_diff": "diff --git a/packages/repl/src/index.js b/packages/repl/src/index.js @@ -101,7 +101,9 @@ export function createRepl({ isVerbose, onAssert, onLog, onOk }) {\nconst [module, expected] = node.args;\ntry {\n- const enableTypeChecking = expected.value === \"type mismatch\";\n+ const enableTypeChecking =\n+ expected.value === \"type mismatch\" ||\n+ expected.value === \"global is immutable\";\ncreateModuleInstanceFromAst(module, enableTypeChecking);\nassert(false, `module is valid, expected invalid (${expected.value})`);\n@@ -289,6 +291,14 @@ export function createRepl({ isVerbose, onAssert, onLog, onOk }) {\nconst typeErrors = typeCheck(t.program([moduleNode]));\nif (typeErrors.length > 0) {\n+ const containsImmutableGlobalViolation = typeErrors.some(\n+ x => x === \"global is immutable\"\n+ );\n+\n+ if (containsImmutableGlobalViolation) {\n+ throw new Error(\"global is immutable\");\n+ }\n+\nthrow new Error(\"type mismatch\");\n}\n}\n",
        "chatgpt_rag": "chore: update comments for Awral usage in utils actions"
    },
    {
        "msg": "chore: fix typo in image mark docs",
        "diff": "diff --git a/docs/docs/marks/image.md b/docs/docs/marks/image.md @@ -17,7 +17,7 @@ permalink: /docs/marks/image/index.html\n| url | {% include type t=\"URL\" %} | The URL of the image file. |\n| image | [Canvas](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas) \\| [Image](https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement/Image) | The image instance to show. This property can be used to include dynamically generated images. This property is ignored if _url_ is specified. {% include tag ver=\"5.8\" %} |\n| aspect | {% include type t=\"Boolean\" %} | A boolean flag (default `true`) indicating if the image aspect ratio should be preserved across sizes. If `true` and only one of the dimensional (*width* or *height*) properties are defined, the other dimensional property will be calculated to match the aspect ratio of the loaded image file. |\n-| smooth | {% include type t=\"Boolean\" %} | A boolean flag (default `true`) indicating if the image should be smoothed when resized. If `false`, indvidual pixels should be scaled directly rather than interpolated with smoothing. For SVG rendering, this option may not work in some browsers due to lack of standardization. {% include tag ver=\"5.8\" %} |\n+| smooth | {% include type t=\"Boolean\" %} | A boolean flag (default `true`) indicating if the image should be smoothed when resized. If `false`, individual pixels should be scaled directly rather than interpolated with smoothing. For SVG rendering, this option may not work in some browsers due to lack of standardization. {% include tag ver=\"5.8\" %} |\n| align | {% include type t=\"String\" %} | The horizontal alignment of the image. One of `left`, `center`, or `right`. The default value is `left`. |\n| baseline | {% include type t=\"String\" %} | The vertical alignment of the image. One of `top`, `middle`, or `bottom`. The default value is `top`. |\n",
        "date": "13.09.2020 15:30:54",
        "repo": "vega/vega",
        "type": "chore",
        "sim_msg": "docs(image): Add documentation for Image component - styleguide",
        "sim_diff": "diff --git a/src/components/Image/Image.md b/src/components/Image/Image.md +### Usage criteria\n+\n+* We recommend not to `resize/crop` images in the browser.\n+* The width and height should be the same ratio as the natural width and height of the image.\n+* Image optimization should be done BEFORE rendering.\n+* You can use the `contentful API` to request an image of a certain size.\n+* `rounded=\"circle\"` requires a square image `(width == height)` in order to generate a perfect circle.\n+* Non-square images will give a warning and will appear oval shaped.\n+\n```jsx\n<Image src=\"image-example.jpg\" rounded=\"corners\" width={300} height={300} alt=\"Image of co-workers collaborating\" />\n```\n",
        "chatgpt_rag": "docs(image): Update documentation for Image component - smooth resizing fix"
    },
    {
        "msg": "chore: publish command",
        "diff": "diff --git a/package.json b/package.json \"test:core\": \"jest\",\n\"test:module\": \"yarn workspace @chakra-ui/nuxt test\",\n\"test\": \"yarn test:core && yarn test:module\",\n- \"release\": \"changeset publish\",\n+ \"release\": \"yarn changeset publish\",\n\"clean\": \"lerna run clean\",\n\"storybook\": \"cross-env STORYBOOK_VUE_DEV_TOOLS=1 start-storybook -p 9000\",\n\"storybook:devtools\": \"vue-devtools\",\n",
        "date": "31.12.2020 15:35:20",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "build(build): intelliSense of vetur default prompt in English",
        "sim_diff": "diff --git a/package.json b/package.json \"scripts\": {\n\"cz\": \"npx git-cz\",\n\"test\": \"jest --coverage && coveralls < coverage/lcov.info\",\n- \"gen\": \"bash ./scripts/gc.sh\",\n+ \"gen\": \"bash ./scripts/gc.sh && yarn bootstrap\",\n\"bootstrap\": \"yarn --frozen-lockfile && npx lerna bootstrap && yarn gen:version\",\n\"gen:version\": \"node build/gen-version.js\",\n\"build\": \"yarn bootstrap && yarn clean:lib && yarn build:esm-bundle && yarn build:lib && yarn build:lib-full && yarn build:esm && yarn build:utils && yarn build:locale && yarn build:locale-umd && yarn build:theme && yarn build:helper\",\n\"build:css\": \"cross-env BABEL_ENV=utils babel packages/utils --extensions .ts --out-dir lib/utils\",\n\"build:theme\": \"rimraf packages/theme-default/lib && gulp build --gulpfile packages/theme-default/gulpfile.js && cp-cli packages/theme-default/lib lib/theme-default && rimraf packages/theme-default/lib\",\n\"build:helper\": \"node build/build-helper.js\",\n+ \"build:helper-zh\": \"node build/build-helper-zh.js\",\n\"build:indices\": \"node build/build-indices.js\",\n\"lint\": \"eslint ./packages --ext .vue,.js,.ts\",\n\"lint-fix\": \"eslint --fix ./packages --ext .vue,.js,.ts\",\n",
        "chatgpt_rag": "test(release): update release script to use yarn for changeset publish"
    },
    {
        "msg": "chore: update link",
        "diff": "diff --git a/README.md b/README.md @@ -145,7 +145,7 @@ export default {\nYou can also view all developed components in **[Storybook](https://chakra-ui-vue.netlify.com)!**\n### Development for Contributing:\n-Interested in contributing? See our [open issues](/issues)! Remember to take a look at our [CONTRIBUTORS](../../.github/CONTRIBUTING.md) guide.\n+Interested in contributing? See our [open issues](https://github.com/chakra-ui/chakra-ui-vue/issues)! Remember to take a look at our [CONTRIBUTORS](../../.github/CONTRIBUTING.md) guide.\n```bash\nyarn install\n",
        "date": "17.03.2020 12:44:04",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "docs: fix broken link to \"Contribute\" on README.md",
        "sim_diff": "diff --git a/README.md b/README.md @@ -85,7 +85,7 @@ If you have a VuePress-related project/component/tool, add it with a pull reques\n### Code Contributors\n-This project exists thanks to all the people who contribute. [[Contribute](CONTRIBUTING.md)].\n+This project exists thanks to all the people who contribute. [[Contribute](.github/CONTRIBUTING.md)].\n<a href=\"https://github.com/vuejs/vuepress/graphs/contributors\"><img src=\"https://opencollective.com/vuepress/contributors.svg?width=890&button=false\" /></a>\n### Financial Contributors\n",
        "chatgpt_rag": "docs: update link to open issues in README.md"
    },
    {
        "msg": "chore: add supporters",
        "diff": "diff --git a/website/index.html b/website/index.html href='https://inkedin.com/free-spins-no-deposit/'><img src='https://logo.clearbit.com/inkedin.com'\nstyle='object-fit: contain; float: left; margin:12px' height='120' width='120'></a><a\nhref='https://www.newcasinosaustralia.com/'><img src='https://logo.clearbit.com/newcasinosaustralia.com'\n+ style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a><a\n+ href='https://casinostranieri.net/'><img\n+ src='https://opencollective-production.s3.us-west-1.amazonaws.com/7aae8900-0c02-11ed-9aa8-2bd811fd6f10.png'\n+ style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a><a\n+ href='https://goread.io/buy-instagram-followers'><img\n+ src='https://opencollective-production.s3.us-west-1.amazonaws.com/7d1302a0-0f33-11ed-a094-3dca78aec7cd.png'\nstyle='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>\n</div>\n</div>\n",
        "date": "29.07.2022 13:12:15",
        "repo": "remy/nodemon",
        "type": "chore",
        "sim_msg": "chore: add opencollective sponsors",
        "sim_diff": "diff --git a/index.pug b/index.pug @@ -256,8 +256,14 @@ html(lang='en')\n<a href=\"https://www.casinotopp.net\">\n<img class=\"sponsor\" src=\"https://images.opencollective.com/casino-topp/1dd399a/logo.png\" style=\"height: 100px\">\n</a>\n- <a href=\"https://vpnblackfriday.com/\">\n- <img class=\"sponsor\" src=\"https://images.opencollective.com/vpn-black-friday/2b3cf9c/logo.png\" style=\"height: 100px\">\n+ <a href=\"https://www.bonus.net.nz/free-spins\">\n+ <img class=\"sponsor\" src=\"https://images.opencollective.com/bonusfinder-new-zealand/a5becb5/logo.png\" style=\"height: 100px\">\n+ </a>\n+ <a href=\"https://www.bonusfinder.com/casino\">\n+ <img class=\"sponsor\" src=\"https://images.opencollective.com/bonusfinder-com-us/8a47a19/logo.png\" style=\"height: 100px\">\n+ </a>\n+ <a href=\"https://www.bonus.com.de/freispiele\">\n+ <img class=\"sponsor\" src=\"https://images.opencollective.com/bonusfinder-deutschland/646169e/logo.png\" style=\"height: 100px\">\n</a>\n<a href=\"https://www.bonus.ca\">\n<img class=\"sponsor\" src=\"https://images.opencollective.com/bonus-finder/4b3394e/logo.png\" style=\"height: 100px\">\n@@ -265,6 +271,9 @@ html(lang='en')\n<a href=\"https://www.crosswordsolver.com/\">\n<img class=\"sponsor\" src=\"https://images.opencollective.com/crosswordsolver/d4481d6/logo.png\" style=\"height: 100px\">\n</a>\n+ <a href=\"https://vpnblackfriday.com/\">\n+ <img class=\"sponsor\" src=\"https://images.opencollective.com/vpn-black-friday/2b3cf9c/logo.png\" style=\"height: 100px\">\n+ </a>\n</div>\n</div>\n",
        "chatgpt_rag": "feat: add new sponsor logos to website index page"
    },
    {
        "msg": "chore(package): remove -- arg separator",
        "diff": "diff --git a/package.json b/package.json \"deploy:docs\": \"gh-pages -d docs/build -m 'deploy docs [ci skip]'\",\n\"postdeploy:docs\": \"yarn build:changelog && yarn deploy:changelog\",\n\"lint\": \"cross-env NODE_ENV=production eslint .\",\n- \"lint:fix\": \"yarn lint -- --fix\",\n+ \"lint:fix\": \"yarn lint --fix\",\n\"prerelease\": \"yarn lint && yarn tsd:lint && yarn tsd:test && yarn test && cross-env NODE_ENV=production yarn build\",\n\"postrelease\": \"yarn deploy:docs\",\n\"release:major\": \"yarn prerelease && ta-script npm/release major && yarn postrelease\",\n\"release:minor\": \"yarn prerelease && ta-script npm/release minor && yarn postrelease\",\n\"release:patch\": \"yarn prerelease && ta-script npm/release patch && yarn postrelease\",\n- \"prestart\": \"yarn satisfied -- --fix yarn\",\n+ \"prestart\": \"yarn satisfied --fix yarn\",\n\"start\": \"yarn docs\",\n\"satisfied\": \"satisfied --skip-invalid\",\n\"pretest\": \"yarn satisfied && yarn build:dll\",\n\"test\": \"cross-env NODE_ENV=test node -r babel-register ./node_modules/karma/bin/karma start karma.conf.babel.js\",\n- \"test:watch\": \"yarn test -- --no-single-run\",\n+ \"test:watch\": \"yarn test --no-single-run\",\n\"tsd\": \"gulp tsd\",\n\"tsd:lint\": \"tslint './index.d.ts' './src/**/*.d.ts' './src/**/*.tsx' './test/**/*.d.ts' './test/**/*.tsx'\",\n- \"tsd:lint:fix\": \"yarn tsd:lint -- --fix\",\n+ \"tsd:lint:fix\": \"yarn tsd:lint --fix\",\n\"tsd:test\": \"yarn tsd && tsc -p ./ && rm test/typings.js\"\n},\n\"repository\": {\n",
        "date": "19.10.2017 18:04:47",
        "repo": "semantic-org/semantic-ui-react",
        "type": "chore",
        "sim_msg": "chore(lint): simplify command",
        "sim_diff": "diff --git a/package.json b/package.json \"build\": \"npm run build-clean && npm run build-es6 && npm run build-es5 && webpack -d --display-modules\",\n\"cover\": \"NODE_ENV=test nyc --reporter html --reporter cobertura --reporter=lcov npm run test-cover\",\n\"lint\": \"eslint src test examples && npm run lint-yarn\",\n- \"lint-yarn\": \"!(find . -name yarn.lock -exec grep -l unpm.u {} \\\\; | egrep '.*')\",\n+ \"lint-yarn\": \"! grep -q unpm.u yarn.lock\",\n\"publish-prod\": \"npm run build && npm run test && npm run test-dist && npm publish\",\n\"publish-beta\": \"npm run build && npm run test && npm run test-dist && npm publish --tag beta\",\n\"test\": \"npm run lint && npm run build && npm run test-node\",\n",
        "chatgpt_rag": "chore(lint): simplify lint:fix command"
    },
    {
        "msg": "chore: update to WHATWG url api",
        "diff": "diff --git a/lib/util.js b/lib/util.js var fs = require('fs'),\n- url = require('url'),\n+ { URL } = require('url'),\n_ = require('lodash'),\nchardet = require('chardet'),\n@@ -191,7 +191,7 @@ util = {\nresource = 'resource';\nif (response.statusCode !== 200) {\n- urlObj = url.parse(location);\n+ urlObj = new URL(location);\n(urlObj.hostname === POSTMAN_API_HOST) &&\n(resource = _(urlObj.path).split('/').get(1).slice(0, -1) || resource);\n",
        "date": "23.03.2021 12:22:42",
        "repo": "postmanlabs/newman",
        "type": "chore",
        "sim_msg": "feat(express): choose next free port when hops-config.port is falsy\nThis commit enables hops-express to choose the next free port when no\nport is set via hops-config.",
        "sim_diff": "diff --git a/packages/express/lib/utils.js b/packages/express/lib/utils.js var fs = require('fs');\nvar url = require('url');\n+var net = require('net');\nvar path = require('path');\nvar http = require('http');\nvar https = require('https');\n@@ -19,17 +20,38 @@ function getStatsFromFile() {\nreturn stats || {};\n}\n-function defaultCallback(error) {\n+function getPort(host, port, max) {\n+ return new Promise(function(resolve, reject) {\n+ max = max || Math.min(65535, port + 50);\n+ if (port > max) {\n+ return reject(new Error('unable to find free port'));\n+ }\n+ var server = net.createServer();\n+ server.on('error', function() {\n+ resolve(getPort(host, port + 1, max));\n+ server.close();\n+ });\n+ server.listen(port, host, function() {\n+ server.once('close', function() {\n+ resolve(port);\n+ });\n+ server.close();\n+ });\n+ });\n+}\n+\n+function defaultCallback(error, server) {\nif (error) {\n- console.error(error.stack.toString());\n+ console.error(error.stack ? error.stack.toString() : error.toString());\n} else {\n+ var address = server.address();\nconsole.log(\n'hops: Server listening at ' +\nurl.format({\nprotocol: hopsConfig.https ? 'https' : 'http',\nhostname:\n- hopsConfig.host === '0.0.0.0' ? 'localhost' : hopsConfig.host,\n- port: hopsConfig.port,\n+ address.address === '0.0.0.0' ? 'localhost' : address.address,\n+ port: address.port,\npathname: hopsConfig.basePath,\n})\n);\n@@ -53,9 +75,18 @@ exports.run = function run(app, callback) {\n} else {\nserver = http.createServer(app);\n}\n- server.listen(hopsConfig.port, hopsConfig.host, function(error) {\n+ function listen(port) {\n+ server.listen(port || hopsConfig.port, hopsConfig.host, function(error) {\n(callback || defaultCallback)(error, server);\n});\n+ }\n+ if (hopsConfig.port) {\n+ listen();\n+ } else {\n+ getPort(hopsConfig.host, 8080)\n+ .then(listen)\n+ .catch(defaultCallback);\n+ }\n};\nexports.rewritePath = function rewritePath(req, res, next) {\n",
        "chatgpt_rag": "fix(util): update url parsing to use URL constructor\n\nThis commit updates the url parsing in the util.js file to use the URL constructor instead of the deprecated url.parse method. This change ensures compatibility with the latest versions of Node.js."
    },
    {
        "msg": "chore: use travis CI's new conditional 'if' to check for tag",
        "diff": "diff --git a/.travis.yml b/.travis.yml @@ -24,16 +24,13 @@ branches:\njobs:\ninclude:\n- stage: deploy\n+ if: tag IS present\nnode_js: 12\nbefore_script:\n- chmod +x scripts/docs\nscript: echo \"Deploying ...\"\nafter_success:\n- scripts/docs\n- branches:\n- only:\n- - master\n- - \"/^\\\\d+\\\\.\\\\d+(\\\\.\\\\d+)?(-\\\\S*)?$/\"\nbefore_deploy:\n- echo 'Preparing to publish'\n- npm run build\n",
        "date": "15.01.2020 20:32:33",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "sim_msg": "ci(travis): fix travis releasing on wrong branch",
        "sim_diff": "diff --git a/.travis.yml b/.travis.yml @@ -57,7 +57,7 @@ jobs:\n# Job: Release\n- stage: release\n- if: branch = master\n+ if: branch = master AND type = push AND fork = false\nnode_js:\n- 'lts/*'\nskip_cleanup: true\n@@ -66,7 +66,7 @@ jobs:\n# Job: Page\n- stage: deploy\n- if: branch = master\n+ if: branch = master AND type = push AND fork = false\nnode_js:\n- 'lts/*'\nscript:\n",
        "chatgpt_rag": "ci(travis): update travis deploy stage to trigger only on tag presence"
    },
    {
        "msg": "chore: add default app in the e2e script",
        "diff": "diff --git a/package.json b/package.json \"deploy:alpha:soft\": \"npm run test && npm run deploy-prepare && npm run git-commit-tag && npx lerna publish from-package --dist-tag alpha --yes\",\n\"deploy:feat\": \"npm run test && npm run deploy-prepare && npm run git-commit-tag && npx lerna publish from-package --dist-tag feat --yes && git push origin HEAD\",\n\"deploy:prod\": \"npm run deploy-all && npx lerna publish from-package --yes && git push origin HEAD\",\n- \"e2e-hello-world-ios\": \"cd packages/renative-template-hello-world && npx rnv build -p ios -s test && yarn e2e:ios\",\n- \"e2e-hello-world-android\": \"cd packages/renative-template-hello-world && npx rnv build -p android -s test && yarn e2e:android\",\n- \"e2e-hello-world-tvos\": \"cd packages/renative-template-hello-world && npx rnv build -p tvos -s test && yarn e2e:tvos\",\n- \"e2e-hello-world-androidtv\": \"cd packages/renative-template-hello-world && npx rnv build -p androidtv -s test && yarn e2e:androidtv\",\n- \"e2e-hello-world-macos\": \"cd packages/renative-template-hello-world && npx rnv build -p macos -s test && yarn e2e:macos\",\n- \"e2e-hello-world-web\": \"cd packages/renative-template-hello-world && npx rnv start -p web -s test & sleep 60 && cd packages/renative-template-hello-world && yarn e2e:web && kill $(lsof -t -i:8080)\",\n+ \"e2e-hello-world-ios\": \"cd packages/renative-template-hello-world && npx rnv build -p ios -s test -c template && yarn e2e:ios\",\n+ \"e2e-hello-world-android\": \"cd packages/renative-template-hello-world && npx rnv build -p android -s test -c template && yarn e2e:android\",\n+ \"e2e-hello-world-tvos\": \"cd packages/renative-template-hello-world && npx rnv build -p tvos -s test -c template && yarn e2e:tvos\",\n+ \"e2e-hello-world-androidtv\": \"cd packages/renative-template-hello-world && npx rnv build -p androidtv -s test -c template && yarn e2e:androidtv\",\n+ \"e2e-hello-world-macos\": \"cd packages/renative-template-hello-world && npx rnv build -p macos -s test -c template && yarn e2e:macos\",\n+ \"e2e-hello-world-web\": \"cd packages/renative-template-hello-world && npx rnv start -p web -s test -c template & sleep 60 && cd packages/renative-template-hello-world && yarn e2e:web && kill $(lsof -t -i:8080)\",\n\"git-commit\": \"rnv hooks run -x gitCommit -r\",\n\"git-commit-tag\": \"rnv hooks run -x gitCommitAndTag -r\",\n\"git-tag\": \"rnv hooks run -x gitTag -r\",\n",
        "date": "01.03.2022 18:04:55",
        "repo": "pavjacko/renative",
        "type": "chore",
        "sim_msg": "chore: improve publish scripts",
        "sim_diff": "diff --git a/package.json b/package.json \"e2e\": \"run-s e2e-prep e2e-run\",\n\"e2e-ci\": \"run-s e2e-prep e2e-run-ci\",\n\"e2e-dev\": \"start-test develop 8080 e2e-exec-dev\",\n- \"prepublishOnly\": \"run-s test bootstrap build\",\n- \"publish\": \"run-s publish:version publish:push\",\n+ \"publish\": \"run-s test publish:version publish:prepare publish:push\",\n+ \"publish:prepare\": \"run-s bootstrap build\",\n\"publish:version\": \"lerna version --no-push\",\n- \"publish:push\": \"lerna publish from-git && git push --follow-tags\",\n+ \"publish:push\": \"git push --follow-tags && lerna publish from-git\",\n\"publish:dry-run\": \"lerna version --no-git-tag-version --no-push\",\n\"format\": \"run-s \\\"lint:css -- --fix --quiet\\\" \\\"lint:js -- --fix --quiet\\\" \\\"format:prettier -- --write\\\"\",\n\"format:prettier\": \"prettier \\\"{{packages,scripts,website}/**/,}*.{js,css}\\\"\",\n",
        "chatgpt_rag": "chore: update e2e scripts and git hooks in package.json"
    },
    {
        "msg": "chore(optimize): always stringify `toImport` output",
        "diff": "diff --git a/src/plugins/optimize-graph-plugin.js b/src/plugins/optimize-graph-plugin.js @@ -176,7 +176,7 @@ class ChunkGraph {\nlet rep = typeof newUrl === 'function' ? newUrl(url, fn, quote) : newUrl;\nif (rep === false) return 'null';\nif (typeof rep === 'string') {\n- rep = JSON.stringify(publicPath ? toImport(publicPath, rep) : rep);\n+ rep = publicPath ? toImport(publicPath, rep) : JSON.stringify(rep);\n}\nreturn `${fn}(${rep})`;\n}\n@@ -187,9 +187,8 @@ class ChunkGraph {\n/**\n* @param {string} publicPath\n* @param {string} filename\n- * @param {boolean} [toJSON]\n*/\n-function toImport(publicPath, filename, toJSON) {\n+function toImport(publicPath, filename) {\nlet value = posix.join(publicPath, filename);\nif (/^(https?:)?\\/\\//.test(publicPath)) {\n@@ -198,7 +197,7 @@ function toImport(publicPath, filename, toJSON) {\nvalue = new URL(filename, root).href.substring(isFull ? 0 : 6);\n}\n- return toJSON ? JSON.stringify(value) : value;\n+ return JSON.stringify(value);\n}\n/**\n@@ -285,7 +284,7 @@ function hoistEntryCss(graph) {\n} else {\n// @TODO: this branch is actually unreachable\nif (DEBUG) console.log(`Hoisting CSS \"${f}\" imported by ${id} into parent HTML.`);\n- const url = toImport(graph.publicPath, f, true);\n+ const url = toImport(graph.publicPath, f);\nasset.source = getAssetSource(asset).replace(/<\\/head>/, `<link rel=\"stylesheet\" href=${url}></head>`);\n}\n}\n@@ -348,7 +347,7 @@ function hoistCascadedCss(graph, { cssMinSize }) {\nparentChunk.code += '\\n' + DEFAULT_STYLE_LOAD_IMPL;\n}\n- const url = toImport(graph.publicPath, fileName, true);\n+ const url = toImport(graph.publicPath, fileName);\nparentChunk.code += `\\n${meta.styleLoadFn}(${url});`;\n}\nbreak;\n@@ -390,7 +389,7 @@ function hoistTransitiveImports(graph) {\nappendCode += '\\n' + DEFAULT_STYLE_LOAD_IMPL;\n}\nif (DEBUG) console.log(`Preloading CSS for import(${spec}): ${css}`);\n- preloads.push(...css.map(f => `${meta.styleLoadFn}(${toImport(graph.publicPath, f, true)})`));\n+ preloads.push(...css.map(f => `${meta.styleLoadFn}(${toImport(graph.publicPath, f)})`));\n}\nconst js = deps.js.get(spec);\n",
        "date": "07.12.2020 10:43:15",
        "repo": "preactjs/wmr",
        "type": "chore",
        "sim_msg": "fix(open_graph): htmlTag escapes html by default",
        "sim_diff": "diff --git a/lib/plugins/helper/open_graph.js b/lib/plugins/helper/open_graph.js const urlFn = require('url');\nconst moment = require('moment');\n-const { encodeURL, escapeHTML, htmlTag, stripHTML } = require('hexo-util');\n-\n-function meta(name, content, escape) {\n- if (escape !== false && typeof content === 'string') {\n- content = escapeHTML(content);\n- }\n+const { encodeURL, htmlTag, stripHTML } = require('hexo-util');\n+function meta(name, content) {\nreturn `${htmlTag('meta', {\nname,\ncontent\n})}\\n`;\n}\n-function og(name, content, escape) {\n- if (escape !== false && typeof content === 'string') {\n- content = escapeHTML(content);\n- }\n-\n+function og(name, content) {\nreturn `${htmlTag('meta', {\nproperty: name,\ncontent\n@@ -70,7 +62,7 @@ function openGraphHelper(options = {}) {\nlet result = '';\nif (description) {\n- result += meta('description', description, false);\n+ result += meta('description', description);\n}\nif (keywords) {\n@@ -91,15 +83,15 @@ function openGraphHelper(options = {}) {\n}\nif (url) url = encodeURL(url);\n- result += og('og:url', url, false);\n+ result += og('og:url', url);\nresult += og('og:site_name', siteName);\nif (description) {\n- result += og('og:description', description, false);\n+ result += og('og:description', description);\n}\nif (language) {\n- result += og('og:locale', language, false);\n+ result += og('og:locale', language);\n}\nimages = images.map(path => {\n@@ -113,7 +105,7 @@ function openGraphHelper(options = {}) {\n});\nimages.forEach(path => {\n- result += og('og:image', path, false);\n+ result += og('og:image', path);\n});\nif (updated) {\n@@ -125,7 +117,7 @@ function openGraphHelper(options = {}) {\nresult += meta('twitter:card', twitterCard);\nif (images.length) {\n- result += meta('twitter:image', images[0], false);\n+ result += meta('twitter:image', images[0]);\n}\nif (options.twitter_id) {\n@@ -136,7 +128,7 @@ function openGraphHelper(options = {}) {\n}\nif (options.twitter_site) {\n- result += meta('twitter:site', options.twitter_site, false);\n+ result += meta('twitter:site', options.twitter_site);\n}\nif (options.google_plus) {\n",
        "chatgpt_rag": "refactor(optimize-graph-plugin): Simplify toImport function and fix JSON.stringify usage"
    },
    {
        "msg": "chore(UncontrolledNavDropdown): simplify logic\nThis simplifies the deprecated component to just return the preferred component (UncontrolledDropdown) with the nav prop\nThis removes the logic from the deprecated component.",
        "diff": "diff --git a/src/UncontrolledNavDropdown.js b/src/UncontrolledNavDropdown.js -import React, { Component } from 'react';\n+import React from 'react';\nimport { warnOnce } from './utils';\n-import NavDropdown from './NavDropdown';\n+import UncontrolledDropdown from './UncontrolledDropdown';\n-export default class UncontrolledNavDropdown extends Component {\n- constructor(props) {\n- super(props);\n-\n- this.state = { isOpen: false };\n- this.toggle = this.toggle.bind(this);\n- }\n-\n- toggle() {\n- this.setState({ isOpen: !this.state.isOpen });\n- }\n-\n- render() {\n+const UncontrolledNavDropdown = () => {\nwarnOnce('The \"UncontrolledNavDropdown\" component has been deprecated.\\nPlease use component \"UncontrolledDropdown\" with nav prop.');\n- return <NavDropdown isOpen={this.state.isOpen} toggle={this.toggle} {...this.props} />;\n- }\n-}\n+ return <UncontrolledDropdown nav {...this.props} />;\n+};\n+\n+export default UncontrolledNavDropdown;\n",
        "date": "02.02.2018 14:17:43",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "sim_msg": "refactor: withDrawerState implement with useIsDrawerOpen for simplicity",
        "sim_diff": "diff --git a/src/components/withDrawerState.js b/src/components/withDrawerState.js -import React, {Component} from 'react';\n+import React from 'react';\nimport PropTypes from 'prop-types';\n-import {NavigationContext} from '@react-navigation/native';\n+import {useIsDrawerOpen} from '@react-navigation/drawer';\nimport getComponentDisplayName from '../libs/getComponentDisplayName';\nexport const withDrawerPropTypes = {\n@@ -8,42 +8,18 @@ export const withDrawerPropTypes = {\n};\nexport default function withDrawerState(WrappedComponent) {\n- class HOC_Wrapper extends Component {\n- constructor(props) {\n- super(props);\n+ const HOC_Wrapper = (props) => {\n+ const isDrawerOpen = useIsDrawerOpen();\n- this.state = {\n- isDrawerOpen: true,\n- };\n- }\n-\n- componentDidMount() {\n- this.removeOpenListener = this.context.addListener('drawerOpen', () => {\n- this.setState({isDrawerOpen: true});\n- });\n-\n- this.removeCloseListener = this.context.addListener('drawerClose', () => {\n- this.setState({isDrawerOpen: false});\n- });\n- }\n-\n- componentWillUnmount() {\n- this.removeOpenListener();\n- this.removeCloseListener();\n- }\n-\n- render() {\nreturn (\n<WrappedComponent\n// eslint-disable-next-line react/jsx-props-no-spreading\n- {...this.props}\n- isDrawerOpen={this.state.isDrawerOpen}\n+ {...props}\n+ isDrawerOpen={isDrawerOpen}\n/>\n);\n- }\n- }\n+ };\n- HOC_Wrapper.contextType = NavigationContext;\nHOC_Wrapper.displayName = `withWindowDimensions(${getComponentDisplayName(WrappedComponent)})`;\nreturn HOC_Wrapper;\n}\n",
        "chatgpt_rag": "refactor: Replace NavDropdown with UncontrolledDropdown in UncontrolledNavDropdown component"
    },
    {
        "msg": "chore: push versions",
        "diff": "diff --git a/website/package.json b/website/package.json },\n\"dependencies\": {\n\"@chakra-ui/theme-vue\": \"^0.2.7\",\n- \"@chakra-ui/vue\": \"^0.7.0-next.0\",\n+ \"@chakra-ui/vue\": \"^0.7.0-next.2\",\n\"@emotion/css\": \"^11.0.0\",\n\"@mdx-js/vue-loader\": \"^1.6.1\",\n\"@nuxtjs/dotenv\": \"^1.4.0\",\n",
        "date": "23.12.2020 15:38:06",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "feat(app): update vue-router dep to its v3.1.5\n* [app] package.json update to latest vue-router v3.1.5 release.\n( release 3.1.4 was one day before)\n* Update package.json",
        "sim_diff": "diff --git a/app/package.json b/app/package.json \"url-loader\": \"3.0.0\",\n\"vue\": \"2.6.11\",\n\"vue-loader\": \"15.8.3\",\n- \"vue-router\": \"3.1.3\",\n+ \"vue-router\": \"3.1.5\",\n\"vue-server-renderer\": \"2.6.11\",\n\"vue-style-loader\": \"4.1.2\",\n\"vue-template-compiler\": \"2.6.11\",\n",
        "chatgpt_rag": "feat(website): update @chakra-ui/vue dep to its v0.7.0-next.2\n* [website] package.json update to latest @chakra-ui/vue v0.7.0-next.2 release.\n( release 0.7.0-next.0 was two versions before)\n* Update package.json"
    },
    {
        "msg": "chore: update format script",
        "diff": "diff --git a/package.json b/package.json \"test:packages\": \"lerna run test --stream --scope razzle-* --ignore razzle-examples-* -- --passWithNoTests --verbose --no-cache\",\n\"test:e2e\": \"jest --config ./test/jest.config.json --verbose --no-cache \",\n\"clean\": \"lerna clean --yes\",\n- \"format\": \"prettier --trailing-comma es5 --single-quote --write 'packages/*/*.+(js|jsx|json|yml|yaml|css|less|scss|ts|tsx|md|mdx)' 'packages/*/!(node_modules)/**/*.js'\",\n+ \"format\": \"prettier --write 'packages/*/*.+(js|jsx|json|yml|yaml|css|less|scss|ts|tsx|md|mdx)' 'packages/*/!(node_modules)/**/*.js'\",\n\"publish-canary\": \"lerna version prerelease --preid canary --force-publish && release --pre\",\n\"publish-stable\": \"lerna version --force-publish && release && node ./scripts/release-notes.js\",\n\"build-docs\": \"node ./scripts/build-docs.js\",\n},\n\"lint-staged\": {\n\"*.{js|jsx|json|yml|yaml|css|less|scss|ts|tsx|md|mdx}\": [\n- \"prettier --trailing-comma es5 --single-quote --write\"\n+ \"yarn format\"\n]\n},\n\"dependencies\": {},\n",
        "date": "08.07.2020 23:05:11",
        "repo": "jaredpalmer/razzle",
        "type": "chore",
        "sim_msg": "chore(helpers): add scripts for testing and building helpers package",
        "sim_diff": "diff --git a/package.json b/package.json \"test\": \"NODE_ENV=test jest --config=./jest/config/config.js\",\n\"pretest\": \"lerna run prebuild --ignore=@gympass/yoga-doc\",\n\"test:native\": \"NODE_ENV=test jest --config=./jest/config/native.js\",\n+ \"test:helpers\": \"NODE_ENV=test jest --config=./jest/config/helpers.js\",\n\"test:web\": \"NODE_ENV=test jest --config=./jest/config/web.js\",\n\"prettier\": \"prettier\",\n\"dev:web\": \"lerna run dev --scope=@gympass/yoga-doc --stream\",\n\"lint:all\": \"NODE_ENV=test yarn lint packages\",\n\"deploy:doc\": \"lerna run deploy --scope=@gympass/yoga-doc\",\n\"build:yoga\": \"lerna run build --scope=@gympass/yoga\",\n+ \"build:helpers\": \"lerna run build --scope=@gympass/yoga-helpers --stream\",\n\"build:common\": \"lerna run build --scope=@gympass/yoga-common --stream\",\n\"build:tokens\": \"lerna run build --scope=@gympass/yoga-tokens --stream\",\n\"build:doc\": \"lerna run build --scope=@gympass/yoga-doc --stream\",\n",
        "chatgpt_rag": "chore(format): update prettier command in package.json for consistent code formatting"
    },
    {
        "msg": "chore: remove test from postinstall script",
        "diff": "diff --git a/package.json b/package.json ]\n},\n\"scripts\": {\n- \"postinstall\": \"yarn test && yarn build:dev && yarn theme:dev && lerna link\",\n+ \"postinstall\": \"yarn build:dev && yarn theme:dev && lerna link\",\n\"build:dev\": \"yarn workspace @chakra-ui/vue run rollup --config rollup.dev.config.js\",\n\"build\": \"yarn workspace @chakra-ui/vue build\",\n\"dev\": \"yarn workspace @chakra-ui/vue dev\",\n",
        "date": "16.05.2020 20:39:32",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "build(build): intelliSense of vetur default prompt in English",
        "sim_diff": "diff --git a/package.json b/package.json \"scripts\": {\n\"cz\": \"npx git-cz\",\n\"test\": \"jest --coverage && coveralls < coverage/lcov.info\",\n- \"gen\": \"bash ./scripts/gc.sh\",\n+ \"gen\": \"bash ./scripts/gc.sh && yarn bootstrap\",\n\"bootstrap\": \"yarn --frozen-lockfile && npx lerna bootstrap && yarn gen:version\",\n\"gen:version\": \"node build/gen-version.js\",\n\"build\": \"yarn bootstrap && yarn clean:lib && yarn build:esm-bundle && yarn build:lib && yarn build:lib-full && yarn build:esm && yarn build:utils && yarn build:locale && yarn build:locale-umd && yarn build:theme && yarn build:helper\",\n\"build:css\": \"cross-env BABEL_ENV=utils babel packages/utils --extensions .ts --out-dir lib/utils\",\n\"build:theme\": \"rimraf packages/theme-default/lib && gulp build --gulpfile packages/theme-default/gulpfile.js && cp-cli packages/theme-default/lib lib/theme-default && rimraf packages/theme-default/lib\",\n\"build:helper\": \"node build/build-helper.js\",\n+ \"build:helper-zh\": \"node build/build-helper-zh.js\",\n\"build:indices\": \"node build/build-indices.js\",\n\"lint\": \"eslint ./packages --ext .vue,.js,.ts\",\n\"lint-fix\": \"eslint --fix ./packages --ext .vue,.js,.ts\",\n",
        "chatgpt_rag": "build(build): remove test script from postinstall and update build:dev script in @chakra-ui/vue package"
    },
    {
        "msg": "chore(tests): remove unnecessary template",
        "diff": "diff --git a/packages/kiwi-core/src/CloseButton/tests/CloseButton.test.js b/packages/kiwi-core/src/CloseButton/tests/CloseButton.test.js @@ -10,9 +10,7 @@ const renderComponent = (props) => {\nreturn render(base)\n}\nit('should render correctly', () => {\n- const { asFragment } = renderComponent({\n- template: `<CloseButton />`\n- })\n+ const { asFragment } = renderComponent()\nexpect(asFragment()).toMatchSnapshot()\n})\nit('should allow setting a custom aria-label for the button', () => {\n",
        "date": "01.03.2020 15:04:41",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "test: update jest for passing className",
        "sim_diff": "diff --git a/packages/button/src/Button.test.js b/packages/button/src/Button.test.js @@ -28,6 +28,10 @@ describe(\"Button\", () => {\ndescription: \"renders with an icon\",\nprops: { icon: \"<Icon />\", title: \"Settings\" }\n},\n+ {\n+ description: \"renders with className prop\",\n+ props: { title: \"Button Class\", className: \"custom-class\" }\n+ },\n{\ndescription: \"renders with a link\",\nprops: { link: \"https://hig.autodesk.com\", title: \"Settings\" }\n",
        "chatgpt_rag": "test: update jest for rendering CloseButton correctly and setting custom aria-label"
    },
    {
        "msg": "chore: fix linting issues",
        "diff": "diff --git a/lib/monitor/signals.js b/lib/monitor/signals.js module.exports = {\n- \"SIGHUP\": \"1\",\n- \"SIGINT\": \"2\",\n- \"SIGQUIT\": \"3\",\n- \"SIGILL\": \"4\",\n- \"SIGTRAP\": \"5\",\n- \"SIGABRT\": \"6\",\n- \"SIGBUS\": \"7\",\n- \"SIGFPE\": \"8\",\n- \"SIGKILL\": \"9\",\n- \"SIGUSR1\": \"10\",\n- \"SIGSEGV\": \"11\",\n- \"SIGUSR2\": \"12\",\n- \"SIGPIPE\": \"13\",\n- \"SIGALRM\": \"14\",\n- \"SIGTERM\": \"15\",\n- \"SIGSTKFLT\": \"16\",\n- \"SIGCHLD\": \"17\",\n- \"SIGCONT\": \"18\",\n- \"SIGSTOP\": \"19\",\n- \"SIGTSTP\": \"20\",\n- \"SIGTTIN\": \"21\",\n- \"SIGTTOU\": \"22\",\n- \"SIGURG\": \"23\",\n- \"SIGXCPU\": \"24\",\n- \"SIGXFSZ\": \"25\",\n- \"SIGVTALRM\": \"26\",\n- \"SIGPROF\": \"27\",\n- \"SIGWINCH\": \"28\",\n- \"SIGIO\": \"29\",\n- \"SIGPWR\": \"30\",\n- \"SIGSYS\": \"31\",\n- \"SIGRTMIN\": \"35\"\n+ SIGHUP: 1,\n+ SIGINT: 2,\n+ SIGQUIT: 3,\n+ SIGILL: 4,\n+ SIGTRAP: 5,\n+ SIGABRT: 6,\n+ SIGBUS: 7,\n+ SIGFPE: 8,\n+ SIGKILL: 9,\n+ SIGUSR1: 10,\n+ SIGSEGV: 11,\n+ SIGUSR2: 12,\n+ SIGPIPE: 13,\n+ SIGALRM: 14,\n+ SIGTERM: 15,\n+ SIGSTKFLT: 16,\n+ SIGCHLD: 17,\n+ SIGCONT: 18,\n+ SIGSTOP: 19,\n+ SIGTSTP: 20,\n+ SIGTTIN: 21,\n+ SIGTTOU: 22,\n+ SIGURG: 23,\n+ SIGXCPU: 24,\n+ SIGXFSZ: 25,\n+ SIGVTALRM: 26,\n+ SIGPROF: 27,\n+ SIGWINCH: 28,\n+ SIGIO: 29,\n+ SIGPWR: 30,\n+ SIGSYS: 31,\n+ SIGRTMIN: 35,\n}\n",
        "date": "15.12.2017 15:20:01",
        "repo": "remy/nodemon",
        "type": "chore",
        "sim_msg": "chore(build): use non-numeric eslint rule levels consistently",
        "sim_diff": "diff --git a/.eslintrc.js b/.eslintrc.js @@ -12,38 +12,38 @@ module.exports = {\nplugins: ['mocha'],\nrules: {\n- 'block-scoped-var': 0,\n- 'comma-dangle': 0,\n- 'consistent-return': 0,\n- eqeqeq: [2, 'allow-null'],\n- 'func-names': 0,\n- 'function-paren-newline': 0,\n- 'global-require': 0,\n- 'id-length': 0,\n- 'implicit-arrow-linebreak': 0,\n- indent: 0,\n- 'max-len': [2, 120, 2],\n- 'mocha/no-exclusive-tests': 2,\n- 'new-cap': 0,\n- 'newline-per-chained-call': 0,\n- 'no-console': 2,\n- 'no-else-return': 0,\n- 'no-mixed-operators': 0,\n- 'no-multi-assign': 0,\n- 'no-multiple-empty-lines': 0,\n- 'no-param-reassign': 0,\n- 'no-plusplus': 0,\n- 'no-restricted-globals': 0,\n- 'no-underscore-dangle': 0,\n- 'no-unused-expressions': 0,\n- 'no-use-before-define': [2, 'nofunc'],\n- 'object-curly-spacing': 0,\n- 'operator-linebreak': 0,\n- 'prefer-arrow-callback': 0,\n- 'space-before-function-paren': 0,\n- strict: [2, 'global'],\n- 'vars-on-top': 0,\n- 'wrap-iife': 0,\n- yoda: 0\n+ 'block-scoped-var': 'off',\n+ 'comma-dangle': 'off',\n+ 'consistent-return': 'off',\n+ eqeqeq: ['error', 'allow-null'],\n+ 'func-names': 'off',\n+ 'function-paren-newline': 'off',\n+ 'global-require': 'off',\n+ 'id-length': 'off',\n+ 'implicit-arrow-linebreak': 'off',\n+ indent: 'off',\n+ 'max-len': ['error', 120, 2],\n+ 'mocha/no-exclusive-tests': 'error',\n+ 'new-cap': 'off',\n+ 'newline-per-chained-call': 'off',\n+ 'no-console': 'error',\n+ 'no-else-return': 'off',\n+ 'no-mixed-operators': 'off',\n+ 'no-multi-assign': 'off',\n+ 'no-multiple-empty-lines': 'off',\n+ 'no-param-reassign': 'off',\n+ 'no-plusplus': 'off',\n+ 'no-restricted-globals': 'off',\n+ 'no-underscore-dangle': 'off',\n+ 'no-unused-expressions': 'off',\n+ 'no-use-before-define': ['error', 'nofunc'],\n+ 'object-curly-spacing': 'off',\n+ 'operator-linebreak': 'off',\n+ 'prefer-arrow-callback': 'off',\n+ 'space-before-function-paren': 'off',\n+ strict: ['error', 'global'],\n+ 'vars-on-top': 'off',\n+ 'wrap-iife': 'off',\n+ yoda: 'off'\n}\n};\n",
        "chatgpt_rag": "chore(monitor): update signal constants to use numeric values instead of strings"
    },
    {
        "msg": "chore: add dark theme ability",
        "diff": "diff --git a/src/features/note-selector/NoteSelector.module.css b/src/features/note-selector/NoteSelector.module.css .tag:hover::after {\nborder-left-color: rgb(65, 65, 65);\n}\n+\n+:global(.darkTheme) .tag {\n+ color: white;\n+ background-color: rgb(130, 129, 129);\n+}\n+\n+:global(.darkTheme) .tag:hover {\n+ /*background-color: #cc0000;*/\n+ background-color: white;\n+ color: black;\n+}\n\\ No newline at end of file\n",
        "date": "14.08.2019 09:44:39",
        "repo": "iqtlabs/crviz",
        "type": "chore",
        "sim_msg": "style: make sidebar file options in one line",
        "sim_diff": "diff --git a/src/style.css b/src/style.css @@ -1806,8 +1806,7 @@ body:not(.is-app) .show-when-app {\ntext-overflow: ellipsis;\n}\n.sidebar__file-options {\n- /* position: absolute; */\n- /* right: 0; */\n+ white-space: nowrap;\nvisibility: hidden;\n}\n.sidebar__file:hover .sidebar__file-options,\n",
        "chatgpt_rag": "style: update dark theme tag colors in NoteSelector module CSS"
    },
    {
        "msg": "chore(package.json): remove dev:exp command",
        "diff": "diff --git a/package.json b/package.json \"scripts\": {\n\"build\": \"npm run frontend_build && npm run server_build\",\n\"dev\": \"NODE_ENV=development babel-node ./src/server/index.dev\",\n- \"dev:exp\": \"NODE_ENV=development babel-node -- --expose-http2 ./src/server/index.dev\",\n\"server_build\": \"NODE_ENV=production webpack --config webpack_config/server/webpack.prod.babel.js\",\n\"frontend_build\": \"NODE_ENV=production webpack --config webpack_config/client/webpack.prod.babel.js\",\n\"test\": \"NODE_ENV=test jest --config=jest_config/jest.config.json --coverage --forceExit || true\",\n",
        "date": "14.09.2017 01:10:28",
        "repo": "metnew/suicrux",
        "type": "chore",
        "sim_msg": "ci(jest): use forceExit\nJest still has issues with hanging processes... add --forceExit again!",
        "sim_diff": "diff --git a/package.json b/package.json \"start-main-dev\": \"cross-env HOT=1 NODE_ENV=development electron -r babel-register ./app/main.dev\",\n\"start-renderer-dev\": \"node --trace-warnings -r babel-register ./node_modules/webpack-serve/lib/cli.js --config internals/webpack/webpack.config.renderer.dev.js\",\n\"test\": \"npm run lint && npm run lint-styles && npm run flow && npm run build && npm run test-unit && npm run test-e2e\",\n- \"test-base\": \"cross-env NODE_ENV=test BABEL_DISABLE_CACHE=true ELECTRON_DISABLE_SECURITY_WARNINGS=true node --trace-warnings ./node_modules/jest/bin/jest --maxWorkers=2\",\n+ \"test-base\": \"cross-env NODE_ENV=test BABEL_DISABLE_CACHE=true ELECTRON_DISABLE_SECURITY_WARNINGS=true node --trace-warnings ./node_modules/jest/bin/jest --maxWorkers=2 --forceExit\",\n\"test-unit\": \"npm run test-base -- --coverage ./test/unit\",\n\"test-e2e\": \"npm run test-base -- ./test/e2e\",\n\"test-ci\": \"npm run test-e2e && npm run test-unit\"\n",
        "chatgpt_rag": "build: separate frontend and server build scripts\nSplit the build script into frontend_build and server_build for better organization and clarity. Remove dev:exp script as it is no longer needed. Update test script to use jest with coverage and forceExit options."
    },
    {
        "msg": "chore(package): add react-test-renderer",
        "diff": "diff --git a/package.json b/package.json \"doctoc\": \"^1.2.0\",\n\"doctrine\": \"^2.0.0\",\n\"empty\": \"^0.10.1\",\n- \"enzyme\": \"^2.7.1\",\n+ \"enzyme\": \"^2.8.2\",\n\"eslint-config-ta\": \"^5.2.0\",\n\"eslint-plugin-jsx-a11y\": \"^4.0.0\",\n\"express\": \"^4.13.4\",\n\"react-dom\": \"15.5.4\",\n\"react-router\": \"^4.0.0\",\n\"react-router-dom\": \"^4.0.0\",\n+ \"react-test-renderer\": \"^15.5.4\",\n\"require-dir\": \"^0.3.0\",\n\"rimraf\": \"^2.5.2\",\n\"satisfied\": \"^1.1.0\",\n",
        "date": "22.04.2017 09:34:48",
        "repo": "semantic-org/semantic-ui-react",
        "type": "chore",
        "sim_msg": "chore(package): upgrade devDependencies\nUpgrade devDependencies:\n*\n*\n*\n*",
        "sim_diff": "diff --git a/package.json b/package.json \"style-to-object\": \"0.2.0\"\n},\n\"devDependencies\": {\n- \"coveralls\": \"^2.13.1\",\n- \"eslint\": \"^4.1.1\",\n+ \"coveralls\": \"^3.0.0\",\n+ \"eslint\": \"^4.12.0\",\n\"istanbul\": \"^0.4.5\",\n- \"mocha\": \"^3.4.2\",\n+ \"mocha\": \"^4.0.1\",\n\"react\": \"^16\",\n\"react-dom\": \"^16\",\n- \"webpack\": \"^3.0.0\"\n- \"standard-version\": \"^4.2.0\"\n+ \"standard-version\": \"^4.2.0\",\n+ \"webpack\": \"^3.8.1\"\n},\n\"peerDependencies\": {\n\"react\": \"^0.14 || ^15 || ^16\"\n",
        "chatgpt_rag": "chore(package): upgrade devDependencies\nUpgrade devDependencies:\n- enzyme: from ^2.7.1 to ^2.8.2\n- react-test-renderer: from not specified to ^15.5.4"
    },
    {
        "msg": "chore: Code clean up in View.",
        "diff": "diff --git a/packages/vega-view/src/View.js b/packages/vega-view/src/View.js @@ -74,12 +74,10 @@ export default function View(spec, options) {\nconst ctx = runtime(view, spec, options.functions);\nview._runtime = ctx;\nview._signals = ctx.signals;\n- view._bind = (spec.bindings || []).map(function(_) {\n- return {\n+ view._bind = (spec.bindings || []).map(_ => ({\nstate: null,\nparam: extend({}, _)\n- };\n- });\n+ }));\n// initialize scenegraph\nif (ctx.root) ctx.root.set(root);\n@@ -303,18 +301,15 @@ prototype.removeResizeListener = function(handler) {\n};\nfunction findOperatorHandler(op, handler) {\n- var t = op._targets || [],\n- h = t.filter(function(op) {\n- var u = op._update;\n- return u && u.handler === handler;\n- });\n+ const h = (op._targets || [])\n+ .filter(op => op._update && op._update.handler === handler);\nreturn h.length ? h[0] : null;\n}\nfunction addOperatorListener(view, name, op, handler) {\nvar h = findOperatorHandler(op, handler);\nif (!h) {\n- h = trap(view, function() { handler(name, op.value); });\n+ h = trap(view, () => handler(name, op.value));\nh.handler = handler;\nview.on(op, null, h);\n}\n",
        "date": "16.05.2020 18:33:47",
        "repo": "vega/vega",
        "type": "chore",
        "sim_msg": "feat: prevent reload in production",
        "sim_diff": "diff --git a/src/main/menus/view.js b/src/main/menus/view.js let viewMenu = {\nlabel: 'View',\nsubmenu: [{\n- label: 'Reload',\n- accelerator: 'CmdOrCtrl+R',\n- click: function (item, focusedWindow) {\n- if (focusedWindow) {\n- console.log('ddd')\n- }\n- }\n- }, {\nlabel: 'Toggle Full Screen',\naccelerator: (function () {\nif (process.platform === 'darwin') {\n@@ -22,7 +14,12 @@ let viewMenu = {\nfocusedWindow.setFullScreen(!focusedWindow.isFullScreen())\n}\n}\n- }, {\n+ }]\n+}\n+\n+if (process.env.NODE_ENV !== 'production') {\n+ // add devtool when development\n+ viewMenu.submenu.push({\nlabel: 'Toggle Developer Tools',\naccelerator: (function () {\nif (process.platform === 'darwin') {\n@@ -36,7 +33,17 @@ let viewMenu = {\nfocusedWindow.webContents.toggleDevTools()\n}\n}\n- }]\n+ })\n+ // add reload when development\n+ viewMenu.submenu.push({\n+ label: 'Reload',\n+ accelerator: 'CmdOrCtrl+R',\n+ click: function (item, focusedWindow) {\n+ if (focusedWindow) {\n+ focusedWindow.reload()\n+ }\n+ }\n+ })\n}\nif (process.platform === 'darwin') {\n",
        "chatgpt_rag": "refactor: use arrow functions and object shorthand in View.js"
    },
    {
        "msg": "chore(docs): update inline form spacing\nCloses",
        "diff": "diff --git a/docs/lib/examples/FormInline.js b/docs/lib/examples/FormInline.js @@ -5,16 +5,14 @@ export default class Example extends React.Component {\nrender() {\nreturn (\n<Form inline>\n- <FormGroup>\n- <Label for=\"exampleEmail\">Email</Label>{' '}\n+ <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\n+ <Label for=\"exampleEmail\" className=\"mr-sm-2\">Email</Label>\n<Input type=\"email\" name=\"email\" id=\"exampleEmail\" placeholder=\"something@idk.cool\" />\n</FormGroup>\n- {' '}\n- <FormGroup>\n- <Label for=\"examplePassword\">Password</Label>{' '}\n+ <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\n+ <Label for=\"examplePassword\" className=\"mr-sm-2\">Password</Label>\n<Input type=\"password\" name=\"password\" id=\"examplePassword\" placeholder=\"don't tell!\" />\n</FormGroup>\n- {' '}\n<Button>Submit</Button>\n</Form>\n);\n",
        "date": "21.11.2017 05:18:34",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "sim_msg": "docs(*): update form validate",
        "sim_diff": "diff --git a/docs/form/demo/base.md b/docs/form/demo/base.md @@ -44,6 +44,15 @@ class Demo extends React.Component {\n<FormItem label=\"Password\" required requiredMessage=\"Please input your password!\">\n<Input.Password name=\"basePass\" placeholder=\"Please Enter Password\"/>\n</FormItem>\n+ <FormItem label=\"Email\" format=\"email\" requiredMessage=\"Please input your email!\">\n+ <Input name=\"email\" placeholder=\"Please Enter Email\"/>\n+ </FormItem>\n+ <FormItem label=\"Phone Number\" format=\"tel\">\n+ <Input name=\"phone\" placeholder=\"Please Enter phone number\"/>\n+ </FormItem>\n+ <FormItem label=\"Homepage\" format=\"url\">\n+ <Input name=\"homepage\" defaultValue=\"https://\" placeholder=\"e.g. https://www.taobao.com\"/>\n+ </FormItem>\n<FormItem label=\" \" colon={false}>\n<Checkbox name=\"agreement\" defaultChecked>Agree</Checkbox>\n</FormItem>\n",
        "chatgpt_rag": "docs(lib/examples): update form layout and styling in FormInline"
    },
    {
        "msg": "chore: improve travis build?",
        "diff": "diff --git a/.travis.yml b/.travis.yml sudo: false\ndist: trusty\nlanguage: node_js\n-node_js:\n-- 10\n-- 11\n-- 12\ncache:\ndirectories:\n- node_modules\n-script:\n-- npm run lint\n-- npm run cover -- --runInBand\n-after_script:\n-- npm run report-coverage\nenv:\nglobal:\nsecure: Jb9Q9+XnCh+n5uNJuqUmLmPG6mUUv7iTi5bNeK6TpLdrVKk+2mLdobV3iRUy/DEqNLwt2lxwzp1oq4YI/lZ0vlUam7HpFWpSf4PAI8ckGRqFdus7K45o+zxHLJ2zBQwXacsZB204qtO8RDdXaNb9PjRGNFdKm3ZuqZTv6PkO+hS05EFxmcW95HiSHpV/qPxKjEsDdCpoTNEA3MP0dNtSKygeht2nFQVr7WkOhkjDvUtU9EypkGbJeBCd0AckqXM0Qvmdi++csyz5VRQhhUwI/2BKSjbBVUZ6Q3m8sX2p4G/wFEbhXl5eKTzAYLuf+9kT9Jg+gKdT30PoChx2NPKHv0XS8BOrKQScs6KIwOVH2/CNCKqAxh3HkCMSONmqEQRqBK1V/gSCZ4zDX9PgrfyE23FLN/GM4YtBlkVCMLh8Y/hiapXUaDobxh/o2tfOoQkeoZWZeoeIydhwULTDSG2R3PKV7rkGYas0VQ+qtU+i8VG+PzjPT4DRf4xIKzNzJbFIq9oTNYBTasWi6+OKzNw0uH3ydmRzf+GxaTwOIdR3nRQMQN60dH+6qeJkrIvpfrGAB5gqTutXPfe0xf2rMrW6dyipnSgGlk1JOgA+cU4CPyHql1OA+ox/kIQ4I3PIJBu5YYE3amFmKLu3vnDHELSzM1CYeOs0sDasRyiDkKE79l0=\n-branches:\n- only:\n- - master\n- - \"/^\\\\d+\\\\.\\\\d+(\\\\.\\\\d+)?(-\\\\S*)?$/\"\n+\n+stages:\n+ - lint\n+ - test\n+ - deploy\njobs:\ninclude:\n+ - stage: lint\n+ node_js: 12\n+ script: npm run lint\n+ - stage: test\n+ node_js:\n+ - 10\n+ - 11\n+ - 12\n+ script: npm run cover -- --runInBand\n+ after_script: npm run report-coverage\n- stage: deploy\nif: tag IS present\nnode_js: 12\n",
        "date": "15.01.2020 20:56:06",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "sim_msg": "chore(ci): update travis build rules, and update matrix",
        "sim_diff": "diff --git a/.travis.yml b/.travis.yml language: node_js\nnode_js:\n- - '4'\n- '6'\n+ - '9'\n- 'stable'\n-after_success: npm run coverage\n+cache:\n+ directories:\n+ - node_modules\n+install:\n+ - npm install\n+script:\n+ - npm test\n+after_script:\n+ - npm run coverage\n+after_success:\n+ - npm run travis-deploy-once \"npm run semantic-release\"\nnotifications:\nslack:\nsecure: RrEbq2xE1hWdog4AckkaKDnIYYwo5VdjPcFNhRJbn/7KI0fKeZVCKZy1Ww7aaJGth7R7UX415sEV1U6RrjFyhnBb6Sh+rh8fKTvcvuTbENZW45SbtUD+xmgOvb2kfk4PzgD5Q457DpchAZD7W+E+9qr3xI3Uvh4II1uhDmSKiLI=\n",
        "chatgpt_rag": "chore(ci): update travis build rules, add stages for lint, test, and deploy, update node_js versions and scripts"
    },
    {
        "msg": "chore(webpack_config): add comment about Preact",
        "diff": "diff --git a/webpack_config/client/webpack.base.js b/webpack_config/client/webpack.base.js @@ -51,10 +51,11 @@ const baseBuild = {\nresolve: {\nalias: {\n...isomorphicWebpackConfig.resolve.alias\n+ // NOTE: Preact + preact-compat can save you 148Kb parsed or 14kb gzipped\n+ // Preact may breaks your React app, starter by default doesn't aim to support Preact\n// react: 'preact-compat',\n// 'react-dom': 'preact-compat',\n- // 'preact-compat': 'preact-compat/dist/preact-compat',\n- // 'react-redux': 'preact-redux'\n+ // 'preact-compat': 'preact-compat/dist/preact-compat'\n},\nmodules: isomorphicWebpackConfig.resolve.modules,\nextensions: isomorphicWebpackConfig.resolve.extensions.concat([\n",
        "date": "17.09.2017 21:44:12",
        "repo": "metnew/suicrux",
        "type": "chore",
        "sim_msg": "build: only compile dependencies for legacy target",
        "sim_diff": "diff --git a/webpack.config.mjs b/webpack.config.mjs @@ -47,7 +47,7 @@ function getConfig(env, {\nconst npmConfig = getNpmConfig(env, outputPackage);\n- const baseConfig = merge({\n+ const baseConfig = {\ncontext: fileURLToPath(new URL('./src', import.meta.url)),\nmode: env.production ? 'production' : 'development',\n// Quit if there are errors.\n@@ -146,7 +146,7 @@ function getConfig(env, {\n'main',\n],\n},\n- }, compileDependencies());\n+ };\nconst appConfig = merge(baseConfig, {\nname: 'app',\n@@ -246,7 +246,7 @@ function getConfig(env, {\n],\n};\n- const legacyConfigPatch = {\n+ const legacyConfigPatch = merge({\nname: 'app-legacy',\noutput: {\nfilename: env.production ? 'static/l_[name]_[contenthash:7].js' : 'l_[name]_dev.js',\n@@ -258,7 +258,7 @@ function getConfig(env, {\n'triage-polyfills': './polyfills-legacy.js',\n},\n},\n- };\n+ }, compileDependencies());\n// Must be used together with an app config to work correctly.\nconst staticPagesConfigPatch = merge(\n",
        "chatgpt_rag": "build: update webpack resolve alias for Preact optimization"
    },
    {
        "msg": "chore: fix lint errs",
        "diff": "diff --git a/packages/chakra-ui-core/src/CAspectRatioBox/tests/CAspectRatioBox.test.js b/packages/chakra-ui-core/src/CAspectRatioBox/tests/CAspectRatioBox.test.js @@ -23,12 +23,12 @@ const renderComponent = (props) => {\nfunction getElementStyles (selector) {\nselector = new RegExp(selector)\nlet styles = []\n- let i; let j; let sel = selector\n+ let i; let j; const sel = selector\nfor (i = 0; i < document.styleSheets.length; ++i) {\nfor (j = 0; j < document.styleSheets[i].cssRules.length; ++j) {\nif (sel.test(document.styleSheets[i].cssRules[j].selectorText)) {\n// let selectorText = document.styleSheets[i].cssRules[j].selectorText\n- let cssText = document.styleSheets[i].cssRules[j].style.cssText\n+ const cssText = document.styleSheets[i].cssRules[j].style.cssText\nstyles += cssText\n}\n}\n@@ -49,8 +49,8 @@ it('should render correctly', () => {\n`.trim())\n})\n-it('should have correct styles', async () => {\n- const inlineAttrs = `:ratio=\"2\"`\n+it('should have correct styles', () => {\n+ const inlineAttrs = ':ratio=\"2\"'\nrenderComponent({ inlineAttrs })\nconst image = screen.getByTestId('image')\nconst aspectRatioBox = screen.getByTestId('aspectRatioBox')\n",
        "date": "13.06.2020 16:20:37",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "test: add test for custom stylesheet for text-link",
        "sim_diff": "diff --git a/packages/text-link/src/stylesheet.test.js b/packages/text-link/src/stylesheet.test.js @@ -8,6 +8,13 @@ describe(\"stylesheet\", () => {\nexpect(subject({})).toEqual(expect.any(Object));\n});\n+ it(\"returns the custom stylesheet\", () => {\n+ const props = {\n+ stylesheet: () => ({ padding: 0 })\n+ };\n+ expect(stylesheet(props, {})).toEqual({ padding: 0 });\n+ });\n+\ndescribe(\"when hasHover=true\", () => {\nit(\"should set the correct style\", () => {\nexpect(subject({ hasHover: true }).textDecoration).toEqual(\"underline\");\n",
        "chatgpt_rag": "test: update CAspectRatioBox test for correct styles and inlineAttrs ratio value"
    },
    {
        "msg": "chore: update test envs",
        "diff": "diff --git a/.travis.yml b/.travis.yml @@ -6,13 +6,10 @@ language: node_js\nnotifications:\nemail: false\nnode_js:\n+ - 8\n+ - 7\n- 6\n- - 5\n- 4\n- # - iojs-v3\n- # - iojs-v2\n- # - iojs-v1\n- - '0.10'\nbefore_install:\n- npm i -g npm@^2.0.0\nbefore_script:\n",
        "date": "04.09.2017 20:14:18",
        "repo": "remy/nodemon",
        "type": "chore",
        "sim_msg": "chore: reorder node order to run latest to oldest",
        "sim_diff": "diff --git a/.travis.yml b/.travis.yml @@ -6,12 +6,12 @@ cache:\nnotifications:\nemail: false\nnode_js:\n- - \"8.9.0\"\n- - \"8.16.0\"\n- - \"9.11.2\"\n- - \"10.16.0\"\n- - \"lts/*\"\n- node\n+ - \"lts/*\"\n+ - \"10.16.0\"\n+ - \"9.11.2\"\n+ - \"8.16.0\"\n+ - \"8.9.0\"\ninstall: npm install\n",
        "chatgpt_rag": "chore: update node versions in .travis.yml to include 8 and 7, remove older versions"
    },
    {
        "msg": "chore(Footer): use light color for footer",
        "diff": "diff --git a/src/common/components/parts/Footer/style.jsx b/src/common/components/parts/Footer/style.jsx @@ -5,7 +5,7 @@ export const StyledFooter = styled.footer`\nwidth: 100%;\ndisplay: flex;\nalign-items: center;\n- background-color: ${props => props.theme.primaryColor};\n+ background-color: ${props => props.theme.primaryColorLight};\ncolor: ${props => props.theme.primaryTextColor};\nheight: 90px;\nbox-shadow: inset 0 0 0 0 ${props => props.theme.primaryColorDark},\n",
        "date": "17.09.2017 15:07:40",
        "repo": "metnew/suicrux",
        "type": "chore",
        "sim_msg": "feat(Footer): Add basic support for link source",
        "sim_diff": "diff --git a/src/layout/footer/footer.jsx b/src/layout/footer/footer.jsx @@ -8,9 +8,9 @@ import css from './footer.module.css';\nconst DOMAIN = 'https://relative-ci.com';\n/* eslint-disable jsx-a11y/anchor-has-content */\n-const StandardLink = ({ to, ...props }) => (\n+const StandardLink = ({ to, source, ...props }) => (\n<a\n- href={`${DOMAIN}${to}`}\n+ href={`${DOMAIN}${to}?utm_source=${source}`}\n{...props}\n/>\n);\n@@ -19,9 +19,12 @@ const StandardLink = ({ to, ...props }) => (\nStandardLink.propTypes = {\n/** Link to value */\nto: PropTypes.string.isRequired,\n+\n+ /** UTM source */\n+ source: PropTypes.string.isRequired,\n};\n-export const Footer = ({ className, Link }) => (\n+export const Footer = ({ className, Link, source }) => (\n<Container className={cx(css.root, className)} as=\"footer\">\n<div className={css.info}>\n<div className={css.navigation}>\n@@ -33,12 +36,14 @@ export const Footer = ({ className, Link }) => (\n<Link\nto=\"/documentation/setup\"\nclassName={css.navLink}\n+ source={source}\n>\nSetup\n</Link>\n<Link\nto=\"/documentation/resources\"\nclassName={css.navLink}\n+ source={source}\n>\nResources\n</Link>\n@@ -56,20 +61,22 @@ export const Footer = ({ className, Link }) => (\ntarget=\"_blank\"\nrel=\"noopener noreferrer\"\ntitle=\"Generate bundle report from the webpack stats data.\"\n+ source={source}\n>\nWebpack Bundle Stats\n</a>\n<a\n- href=\"https://compare.relative-ci.com/\"\n+ href={`https://compare.relative-ci.com/?utm_source=${source}`}\nclassName={css.navLink}\ntarget=\"_blank\"\nrel=\"noopener noreferrer\"\ntitle=\"Side by side comparison for webpack/lighthouse/browsertime stats\"\n+ source={source}\n>\nCompare\n</a>\n<a\n- href=\"https://video-compare.relative-ci.com/\"\n+ href={`https://video-compare.relative-ci.com/?utm_source=${source}`}\nclassName={css.navLink}\ntarget=\"_blank\"\nrel=\"noopener noreferrer\"\n@@ -115,6 +122,7 @@ export const Footer = ({ className, Link }) => (\nclassName={css.brandingHome}\nto=\"/\"\ntitle=\"Go to homepage\"\n+ source={source}\n>\n<Logo className={css.brandingLogo} />\n<span className={css.brandingLogotype}>\n@@ -128,6 +136,7 @@ export const Footer = ({ className, Link }) => (\nFooter.defaultProps = {\nclassName: '',\nLink: StandardLink,\n+ source: 'web',\n};\nFooter.propTypes = {\n@@ -136,4 +145,7 @@ Footer.propTypes = {\n/** Link component */\nLink: PropTypes.elementType,\n+\n+ /** UTM source */\n+ source: PropTypes.string,\n};\n",
        "chatgpt_rag": "style(Footer): Update background color to use a lighter shade of primary color"
    },
    {
        "msg": "chore: docs service worker update",
        "diff": "diff --git a/packages/chakra-ui-docs/static/sw.js b/packages/chakra-ui-docs/static/sw.js -importScripts('https://cdn.jsdelivr.net/npm/workbox-cdn@4.3.1/workbox/workbox-sw.js')\n-\n-// --------------------------------------------------\n-// Configure\n-// --------------------------------------------------\n-\n-// Set workbox config\n-workbox.setConfig({\n- 'debug': false\n-})\n-\n-// Start controlling any existing clients as soon as it activates\n-workbox.core.clientsClaim()\n-\n-// Skip over the SW waiting lifecycle stage\n-workbox.core.skipWaiting()\n-\n-workbox.precaching.cleanupOutdatedCaches()\n-\n-// --------------------------------------------------\n-// Precaches\n-// --------------------------------------------------\n-\n-// Precache assets\n-\n-// --------------------------------------------------\n-// Runtime Caching\n-// --------------------------------------------------\n-\n-// Register route handlers for runtimeCaching\n-workbox.routing.registerRoute(new RegExp('/_nuxt/'), new workbox.strategies.CacheFirst({}), 'GET')\n-workbox.routing.registerRoute(new RegExp('/'), new workbox.strategies.NetworkFirst({}), 'GET')\n+// THIS FILE SHOULD NOT BE VERSION CONTROLLED\n",
        "date": "18.04.2020 23:33:30",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "build(feat): settup service worker file",
        "sim_diff": "diff --git a/build/sw.js b/build/sw.js @@ -6,3 +6,177 @@ workbox.core.clientsClaim()\n/* global self */\nworkbox.precaching.precacheAndRoute(self.__precacheManifest)\n+\n+/**\n+ * Runtime caching\n+ */\n+\n+// theme assets directory\n+workbox.routing.registerRoute(\n+ /^\\/assets\\//,\n+ new workbox.strategies.StaleWhileRevalidate({\n+ cacheName: 'assets'\n+ })\n+)\n+\n+// logo image\n+workbox.routing.registerRoute(\n+ /^\\/((?:img|assets).*)?logo\\.(?:png|gif|jpg|jpeg|webp|svg)$/,\n+ new workbox.strategies.StaleWhileRevalidate({\n+ cacheName: 'logo'\n+ })\n+)\n+\n+// CMS image uploads\n+workbox.routing.registerRoute(\n+ /^\\/img\\/uploads\\//,\n+ new workbox.strategies.StaleWhileRevalidate({\n+ cacheName: 'media',\n+ plugins: [\n+ new workbox.expiration.Plugin({\n+ // keep at most 20 entries\n+ maxEntries: 20,\n+ // don't keep any entries for more than 30 days\n+ maxAgeSeconds: 60 * 60 * 24 * 30,\n+ // automatically cleanup if quota is exceeded\n+ purgeOnQuotaError: true\n+ })\n+ ]\n+ })\n+)\n+\n+// Google Fonts stylesheets\n+workbox.routing.registerRoute(\n+ /^https:\\/\\/fonts\\.googleapis\\.com/,\n+ new workbox.strategies.StaleWhileRevalidate({\n+ cacheName: 'google-fonts-stylesheets'\n+ })\n+)\n+\n+// underlying font files\n+workbox.routing.registerRoute(\n+ /^https:\\/\\/fonts\\.gstatic\\.com/,\n+ new workbox.strategies.CacheFirst({\n+ cacheName: 'google-fonts-webfonts',\n+ plugins: [\n+ new workbox.cacheableResponse.Plugin({\n+ statuses: [ 0, 200 ]\n+ }),\n+ new workbox.expiration.Plugin({\n+ // large expiration time\n+ maxAgeSeconds: 60 * 60 * 24 * 365,\n+ maxEntries: 30\n+ })\n+ ]\n+ })\n+)\n+\n+/**\n+ * E-Com Plus APIs\n+ * Prefer live content from network\n+ * Check available hosts: https://github.com/ecomclub/ecomplus-sdk-js/blob/master/main.js\n+ */\n+\n+// Main API and Storefront API cache\n+workbox.routing.registerRoute(\n+ /^https:\\/\\/io(storefront)?\\.ecvol\\.com/,\n+ new workbox.strategies.NetworkFirst({\n+ networkTimeoutSeconds: 3,\n+ cacheName: 'api-cache',\n+ plugins: [\n+ new workbox.expiration.Plugin({\n+ maxEntries: 20\n+ })\n+ ]\n+ })\n+)\n+\n+// Store API cache\n+workbox.routing.registerRoute(\n+ /^https:\\/\\/ioapi?\\.ecvol\\.com/,\n+ new workbox.strategies.NetworkFirst({\n+ networkTimeoutSeconds: 3,\n+ cacheName: 'store-api-cache',\n+ plugins: [\n+ new workbox.expiration.Plugin({\n+ maxEntries: 50,\n+ // purge large JSON files to release quota\n+ purgeOnQuotaError: true\n+ })\n+ ]\n+ })\n+)\n+\n+// Live (no cache) APIs\n+workbox.routing.registerRoute(\n+ /^https:\\/\\/([a-z-]+\\.)?e-com\\.plus\\/((?:api|[0-9]+)\\/)?v[1-9]+\\//,\n+ new workbox.strategies.NetworkFirst({\n+ cacheName: 'live-api',\n+ plugins: [\n+ new workbox.expiration.Plugin({\n+ maxEntries: 50,\n+ // keep for 5 minutes only\n+ maxAgeSeconds: 5 * 60\n+ })\n+ ]\n+ })\n+)\n+\n+/**\n+ * Images with unique URLs from E-Com Plus Storage\n+ * Check sizes: https://github.com/ecomclub/storage-api/blob/master/bin/web.js#L261\n+ */\n+\n+// normal and thumbnail sizes\n+workbox.routing.registerRoute(\n+ /https:\\/\\/ecom-[\\w]+\\.[\\w]+\\.digitaloceanspaces\\.com\\/imgs\\/[12345]?[0-9]{2}px\\//,\n+ new workbox.strategies.CacheFirst({\n+ cacheName: 'pictures',\n+ plugins: [\n+ new workbox.expiration.Plugin({\n+ maxEntries: 100,\n+ // 30 days max age\n+ maxAgeSeconds: 60 * 60 * 24 * 30,\n+ purgeOnQuotaError: true\n+ })\n+ ]\n+ })\n+)\n+\n+// big images\n+workbox.routing.registerRoute(\n+ /https:\\/\\/ecom-[\\w]+\\.[\\w]+\\.digitaloceanspaces\\.com\\/imgs\\/[678]?[0-9]{2}px\\//,\n+ new workbox.strategies.CacheFirst({\n+ cacheName: 'pictures-big',\n+ plugins: [\n+ new workbox.expiration.Plugin({\n+ maxEntries: 10,\n+ // 2 days only max age\n+ maxAgeSeconds: 60 * 60 * 24 * 2,\n+ purgeOnQuotaError: true\n+ })\n+ ]\n+ })\n+)\n+\n+/**\n+ * Routes\n+ */\n+\n+// homepage\n+workbox.routing.registerRoute('/', new workbox.strategies.NetworkFirst())\n+\n+// any page URL slug\n+workbox.routing.registerRoute(\n+ /^\\/((?!(?:admin|assets|img)(\\/|$))[^.]+)(\\.(?!js|css|xml|txt|png|gif|jpg|jpeg|webp|svg)[^.]+)*$/,\n+ new workbox.strategies.NetworkFirst({\n+ cacheName: 'live-api',\n+ plugins: [\n+ new workbox.expiration.Plugin({\n+ maxEntries: 50,\n+ // purge HTML files to release quota\n+ purgeOnQuotaError: true\n+ })\n+ ]\n+ })\n+)\n",
        "chatgpt_rag": "build(feat): update service worker file configuration and precaching logic"
    },
    {
        "msg": "chore: :wrench: update tailwind config",
        "diff": "diff --git a/tailwind.config.cjs b/tailwind.config.cjs -module.exports = {\n+const config = {\nmode: 'jit',\npurge: ['./src/**/*.{html,js,svelte,ts}'],\ntheme: {\n@@ -6,3 +6,5 @@ module.exports = {\n},\nplugins: [require('@tailwindcss/typography'), require('daisyui')],\n}\n+\n+module.exports = config\n",
        "date": "23.08.2021 18:10:20",
        "repo": "spences10/cheat-sheets",
        "type": "chore",
        "sim_msg": "docs: fix padding-right on code blocks",
        "sim_diff": "diff --git a/website/tailwind.config.js b/website/tailwind.config.js @@ -89,6 +89,7 @@ module.exports = {\nbackgroundColor: '#282834',\n'> code': {\ndisplay: 'grid',\n+ width: 'max-content',\n},\n'.line': {\nborderLeft: '2px solid transparent',\n",
        "chatgpt_rag": "refactor: separate config object in tailwind.config.cjs"
    },
    {
        "msg": "chore: Removes duplicated dev deps in CLI",
        "diff": "diff --git a/packages/cli/package.json b/packages/cli/package.json \"bugs\": \"https://github.com/preactjs/preact-cli/issues\",\n\"homepage\": \"https://github.com/preactjs/preact-cli\",\n\"devDependencies\": {\n- \"eslint\": \"^7.12.1\",\n\"html-looks-like\": \"^1.0.2\",\n\"jest\": \"^26.0.1\",\n- \"lerna\": \"^3.16.4\",\n- \"lint-staged\": \"^10.5.0\",\n\"mkdirp\": \"^1.0.3\",\n\"ncp\": \"^2.0.0\",\n\"node-sass\": \"^4.12.0\",\n",
        "date": "03.02.2021 04:33:16",
        "repo": "preactjs/preact-cli",
        "type": "chore",
        "sim_msg": "feat(cli): upgrade more deps",
        "sim_diff": "diff --git a/cli/package.json b/cli/package.json },\n\"dependencies\": {\n\"async\": \"^3.2.3\",\n- \"kolorist\": \"^1.5.1\",\n\"ci-info\": \"^3.3.0\",\n\"compression\": \"^1.7.4\",\n\"connect-history-api-fallback\": \"^1.6.0\",\n\"handlebars\": \"^4.7.7\",\n\"http-proxy-middleware\": \"^2.0.3\",\n\"inquirer\": \"^8.2.0\",\n+ \"kolorist\": \"^1.5.1\",\n\"metalsmith\": \"^2.4.2\",\n\"minimatch\": \"^3.0.4\",\n\"minimist\": \"^1.2.6\",\n\"read-metadata\": \"^1.0.0\",\n\"rimraf\": \"^3.0.2\",\n\"route-cache\": \"0.4.7\",\n- \"selfsigned\": \"1.10.11\",\n+ \"selfsigned\": \"^2.0.0\",\n\"tildify\": \"^2.0.0\",\n\"update-notifier\": \"^5.1.0\",\n\"validate-npm-package-name\": \"^3.0.0\"\n},\n+ \"resolutions\": {\n+ \"minimist\": \"^1.2.6\"\n+ },\n\"publishConfig\": {\n\"access\": \"public\"\n}\n",
        "chatgpt_rag": "chore(cli): update devDependencies in package.json"
    },
    {
        "msg": "chore: remove defaultIsChecked from story",
        "diff": "diff --git a/packages/chakra-ui-core/src/CRadio/CRadio.stories.js b/packages/chakra-ui-core/src/CRadio/CRadio.stories.js @@ -6,7 +6,7 @@ storiesOf('UI | Radio', module)\ncomponents: { CFragment, CRadio },\ntemplate: `\n<div>\n- <CRadio value=\"male\" v-model=\"maleChecked\" defaultIsChecked name=\"bee\">\n+ <CRadio value=\"male\" v-model=\"maleChecked\" name=\"bee\">\nMale\n</CRadio>\n<CRadio ml=\"3\" value=\"female\" name=\"bee\">\n",
        "date": "24.04.2020 11:51:37",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "docs(theme-data): add button theme-data to storybook",
        "sim_diff": "diff --git a/packages/theme-data/src/__stories__/stories.js b/packages/theme-data/src/__stories__/stories.js @@ -68,6 +68,11 @@ export default [\nschema: filterMatchByKey(baseTheme.unresolvedRoles, \"density\"),\nreadme: densityReadme\n},\n+ {\n+ description: \"Component - Button\",\n+ schema: filterMatchByKey(baseTheme.unresolvedRoles, /^button./),\n+ readme: undefined\n+ },\n{\ndescription: \"Component - Checkbox\",\nschema: filterMatchByKey(baseTheme.unresolvedRoles, /^checkbox./),\n",
        "chatgpt_rag": "fix(chakra-ui-core): remove defaultIsChecked prop from CRadio in CRadio.stories.js"
    },
    {
        "msg": "chore(readme): updated readme",
        "diff": "diff --git a/README.md b/README.md @@ -16,12 +16,12 @@ You can also view all developed components in Storybook!\n#### Project TODO:\n- [x] Setup Storybook for components UI\n- [x] Theme Provider\n+- [x] Develop styling scheme for components with styled components\n- [x] Setup Vue.js plugin system\n- [x] Provide Theme\n- - [ ] Observe theme and set it dynamically in javascript with ease.\n+ - [x] Observe theme and set it dynamically in javascript with ease.\n- [ ] Provide icons API for icons component\n-- [ ] Develop styling scheme for components with styled components\n+- [ ] Accessibility (Focus) Styling\n- [ ] Setup NPM distribution\n- [ ] Set up type system for components with Typescript\n-- [ ] Accessibility (Focus) Styling\n",
        "date": "21.10.2019 03:50:03",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "chore: fix logo storybook build",
        "sim_diff": "diff --git a/packages/vue/.storybook/theme.js b/packages/vue/.storybook/theme.js import { create } from \"@storybook/theming/create\";\n+import logo from \"../public/assets/storybook/logo.png\";\nexport default create({\nbase: \"light\",\n@@ -28,5 +29,6 @@ export default create({\nbrandTitle: \"StorefrontUI\",\nbrandUrl: \"https://github.com/Divanteltd/storefront-ui\",\n- brandImage: \"/assets/storybook/logo.png\",\n+ brandImage:\n+ process.env.NODE_ENV === \"production\" ? logo : \"/assets/storybook/logo.png\",\n});\n",
        "chatgpt_rag": "chore: update project TODO list with completed tasks and new focus on Accessibility (Focus) Styling"
    },
    {
        "msg": "chore(docs): button group spacing\nThis removes `{' '}` which was added to the doc in but has not effects on `Button`s inside `ButtonGroup`.",
        "diff": "diff --git a/docs/lib/examples/ButtonGroup.js b/docs/lib/examples/ButtonGroup.js @@ -5,8 +5,8 @@ export default class Example extends React.Component {\nrender() {\nreturn (\n<ButtonGroup>\n- <Button>Left</Button>{' '}\n- <Button>Middle</Button>{' '}\n+ <Button>Left</Button>\n+ <Button>Middle</Button>\n<Button>Right</Button>\n</ButtonGroup>\n);\n",
        "date": "24.03.2018 02:45:50",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "sim_msg": "feat(molecule/buttonGroup): added 'secondary' type to defaultProps",
        "sim_diff": "diff --git a/components/molecule/buttonGroup/src/index.js b/components/molecule/buttonGroup/src/index.js @@ -14,7 +14,7 @@ const MoleculeButtonGroup = ({\nchildren, // eslint-disable-line react/prop-types\nfullWidth,\ngroupPositions,\n- type = 'secondary',\n+ type,\n...props\n}) => {\nconst numChildren = children.length\n@@ -52,7 +52,8 @@ MoleculeButtonGroup.defaultProps = {\nFIRST: 'first',\nMIDDLE: 'middle',\nLAST: 'last'\n- }\n+ },\n+ type: 'secondary'\n}\nexport default MoleculeButtonGroup\n",
        "chatgpt_rag": "style(docs): updated ButtonGroup example in documentation to remove unnecessary whitespace and add missing closing tag for Right button"
    },
    {
        "msg": "chore: add circularprogress component sig",
        "diff": "diff --git a/packages/chakra-ui-core/src/CCircularProgress/CCircularProgress.js b/packages/chakra-ui-core/src/CCircularProgress/CCircularProgress.js * @see A11y https://github.com/chakra-ui/chakra-ui-vue/blob/master/packages/chakra-ui-core/src/CCircularProgress/accessibility.md\n*/\n-\nimport { baseProps } from '../config/props'\nimport { forwardProps } from '../utils'\nimport { getComputedProps } from './utils/circularprogress.styles'\n@@ -39,6 +38,9 @@ const CCircularProgressLabel = {\ntransform: 'translate(-50%, -50%)',\nfontSize: '0.25em',\n...forwardProps(this.$props)\n+ },\n+ attrs: {\n+ 'data-chakra-component': 'CCircularProgressLabel'\n}\n}, this.$slots.default)\n}\n@@ -126,7 +128,10 @@ const CCircularProgress = {\n...rootData.props,\n...forwardProps(this.$props)\n},\n- attrs: rootData.attrs\n+ attrs: {\n+ ...rootData.attrs,\n+ 'data-chakra-component': 'CCircularProgress'\n+ }\n}, [\nh(CBox, {\nprops: svgData.props,\n",
        "date": "16.04.2020 21:55:06",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "feat(QCircularProgress): normalize input value",
        "sim_diff": "diff --git a/ui/src/components/circular-progress/QCircularProgress.js b/ui/src/components/circular-progress/QCircularProgress.js @@ -2,6 +2,7 @@ import Vue from 'vue'\nimport SizeMixin from '../../mixins/size.js'\nimport { mergeSlotSafely } from '../../utils/slot.js'\n+import { between } from '../../utils/format.js'\nconst\nradius = 50,\n@@ -55,6 +56,10 @@ export default Vue.extend({\n},\ncomputed: {\n+ normalizedValue () {\n+ return between(this.value, this.min, this.max)\n+ },\n+\nsvgStyle () {\nreturn { transform: `rotate3d(0, 0, 1, ${this.angle - 90}deg)` }\n},\n@@ -78,7 +83,7 @@ export default Vue.extend({\n},\nstrokeDashOffset () {\n- const progress = 1 - (this.value - this.min) / (this.max - this.min)\n+ const progress = 1 - (this.normalizedValue - this.min) / (this.max - this.min)\nreturn (this.dir * progress) * circumference\n},\n@@ -91,7 +96,7 @@ export default Vue.extend({\nrole: 'progressbar',\n'aria-valuemin': this.min,\n'aria-valuemax': this.max,\n- 'aria-valuenow': this.indeterminate === true ? void 0 : this.value\n+ 'aria-valuenow': this.indeterminate === true ? void 0 : this.normalizedValue\n}\n}\n},\n@@ -165,7 +170,7 @@ export default Vue.extend({\nh('div', {\nstaticClass: 'q-circular-progress__text absolute-full row flex-center content-center',\nstyle: { fontSize: this.fontSize }\n- }, this.$scopedSlots.default !== void 0 ? this.$scopedSlots.default() : [ h('div', [ this.value ]) ])\n+ }, this.$scopedSlots.default !== void 0 ? this.$scopedSlots.default() : [ h('div', [ this.normalizedValue ]) ])\n)\nreturn h('div', {\n",
        "chatgpt_rag": "refactor(CCircularProgress): add data attribute for component identification"
    },
    {
        "msg": "chore(docs): updated App.js example",
        "diff": "diff --git a/docs/lib/Home/index.js b/docs/lib/Home/index.js @@ -80,7 +80,7 @@ npm install --save reactstrap react react-dom`}\n{`import { Button } from 'reactstrap';`}\n</PrismCode>\n</pre>\n- <p>Now you are ready to use the imported reactstrap components within your component hierarchy defined in the render method. Here is an example <a href=\"https://gist.github.com/eddywashere/e13033c0e655ab7cda995f8bc77ce40d\" target=\"_blank\"><code>App.js</code></a> redone using reactstrap.</p>\n+ <p>Now you are ready to use the imported reactstrap components within your component hierarchy defined in the render method. Here is an example <a href=\"https://gist.github.com/Thomas-Smyth/006fd507a7295f17a8473451938f9935\" target=\"_blank\"><code>App.js</code></a> redone using reactstrap.</p>\n<h2 className=\"mt-5\">CDN</h2>\n<p>Reactstrap can be included directly in your application's bundle or excluded during compilation and linked directly to a CDN.</p>\n<pre>\n",
        "date": "01.05.2018 21:53:14",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "sim_msg": "feat(Link): forwardRef",
        "sim_diff": "diff --git a/components/core/Link.js b/components/core/Link.js @@ -2,7 +2,7 @@ import * as React from \"react\";\nimport * as Strings from \"~/common/strings\";\nimport * as Logging from \"~/common/logging\";\n-export class Link extends React.Component {\n+class LinkPrimitive extends React.Component {\nstate = {\nhref: this.props.href\n? this.props.href\n@@ -63,6 +63,7 @@ export class Link extends React.Component {\n};\nrender() {\n+ const { style, innerRef, css, target, href, title, children, ...props } = this.props;\nreturn (\n<span onClick={this._handleClick}>\n<a\n@@ -70,17 +71,20 @@ export class Link extends React.Component {\ntextDecoration: \"none\",\ncolor: \"inherit\",\ncursor: \"pointer\",\n- ...this.props.style,\n+ ...style,\n}}\n- css={this.props.css}\n- target={this.props.target}\n- href={this.state.href}\n- aria-label={this.props[\"aria-label\"]}\n- title={this.props.title}\n+ ref={innerRef}\n+ css={css}\n+ target={target}\n+ href={href}\n+ title={title}\n+ {...props}\n>\n- {this.props.children}\n+ {children}\n</a>\n</span>\n);\n}\n}\n+\n+export const Link = React.forwardRef((props, ref) => <LinkPrimitive {...props} innerRef={ref} />);\n",
        "chatgpt_rag": "fix(Home): update link in documentation to correct gist URL"
    },
    {
        "msg": "chore(maintainers): update list of maintainers",
        "diff": "diff --git a/README.md b/README.md @@ -227,6 +227,8 @@ $ npm test\n- [chriso](https://github.com/chriso) - **Chris O'Hara** (author)\n- [profnandaa](https://github.com/profnandaa) - **Anthony Nandaa**\n+- [ezkemboi](https://github.com/ezkemboi) - **Ezrqn Kemboi**\n+- [tux-tn](https://github.com/tux-tn) - **Sarhan Aissi**\n## Reading\n",
        "date": "17.02.2022 09:02:32",
        "repo": "validatorjs/validator.js",
        "type": "chore",
        "sim_msg": "docs: update the version of the required Node\nFor Eggjs's v3.x, Nodejs version >=  14.20.0.",
        "sim_diff": "diff --git a/README.md b/README.md @@ -32,7 +32,7 @@ $ npm run dev\n$ open http://localhost:7001\n```\n-> Node.js >= 8.5.0 required.\n+> Node.js >= 14.20.0 required.\n## Documentations\n",
        "chatgpt_rag": "docs: add contributors Ezrqn Kemboi and Sarhan Aissi to the README file"
    },
    {
        "msg": "chore: package: v28.16.0",
        "diff": "diff --git a/packages/putout/ChangeLog b/packages/putout/ChangeLog +2023.02.04, v28.16.0\n+\n+fix:\n+- @putout/plugin-regexp: remove-useless-group: report after transform\n+\n+feature:\n+- @putout/plugin-apply-maybe: add\n+- @putout/plugin-regexp: apply-literal-notation: report: message\n+- @putout/plugin-regexp: apply-literal-notation: improve support of @putout/plugin-remove-useless-escape\n+- @putout/plugin-regexp: remove-useless-group: improve support of apply-literal-notation\n+\n2023.02.03, v28.15.0\nfeature:\n",
        "date": "04.02.2023 22:42:10",
        "repo": "coderaiser/putout",
        "type": "chore",
        "sim_msg": "chore(csv-stringify): package: contributing",
        "sim_diff": "diff --git a/CHANGELOG.md b/CHANGELOG.md ## Trunk\n+* package: contributing\n+* package: code of conduct\n* quoted_match: ts types string or RegExp\n## Version 5.3.3\n",
        "chatgpt_rag": "fix(@putout/plugin-regexp): remove-useless-group: report after transform, feat(@putout/plugin-apply-maybe): add, feat(@putout/plugin-regexp): apply-literal-notation: report message, feat(@putout/plugin-regexp): apply-literal-notation: improve support of @putout/plugin-remove-useless-escape, feat(@putout/plugin-regexp): remove-useless-group: improve support of apply-literal-notation"
    },
    {
        "msg": "chore: bootstrap ci",
        "diff": "diff --git a/.github/workflows/nodejs.yml b/.github/workflows/nodejs.yml @@ -24,7 +24,8 @@ jobs:\nuses: actions/setup-node@v1\nwith:\nnode-version: ${{ matrix.node-version }}\n- - run: yarn bootstrap --frozen-lockfile\n+ - run: yarn install --frozen-lockfile\n+ - run: yarn bootstrap\n- run: yarn build --if-present\n- run: yarn test\nenv:\n",
        "date": "09.05.2020 18:35:53",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "build: Clear yarn cache before building",
        "sim_diff": "diff --git a/.github/workflows/nodejs.yml b/.github/workflows/nodejs.yml @@ -17,6 +17,7 @@ jobs:\nuses: actions/setup-node@v1\nwith:\nnode-version: ${{ matrix.node-version }}\n+ - run: yarn cache clean\n- run: yarn install --frozen-lockfile\n- run: yarn run ts-check\n- run: yarn run lint\n",
        "chatgpt_rag": "build: Update yarn commands for building and testing"
    },
    {
        "msg": "chore: remove unused screen",
        "diff": "diff --git a/packages/chakra-ui-core/src/CButtonGroup/tests/CButtonGroup.test.js b/packages/chakra-ui-core/src/CButtonGroup/tests/CButtonGroup.test.js import { CButton, CButtonGroup } from '../..'\n-import { render, screen } from '@/tests/test-utils'\n+import { render } from '@/tests/test-utils'\nconst renderComponent = (props) => {\nconst base = {\n",
        "date": "04.07.2020 16:16:25",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "test(banner): Remove only filter",
        "sim_diff": "diff --git a/packages/banner/src/BannerPresenter/BannerPresenter.test.js b/packages/banner/src/BannerPresenter/BannerPresenter.test.js @@ -4,7 +4,7 @@ import renderer from \"react-test-renderer\";\nimport { types } from \"../types\";\nimport BannerPresenter from \"./BannerPresenter\";\n-describe.only(\"banner/BannerPresenter/BannerPresenter\", () => {\n+describe(\"banner/BannerPresenter/BannerPresenter\", () => {\n[\n{\ndescription: \"renders without props\",\n",
        "chatgpt_rag": "test(chakra-ui-core): Remove screen import from CButtonGroup test"
    },
    {
        "msg": "chore: package: v6.2.0",
        "diff": "diff --git a/packages/engine-processor/package.json b/packages/engine-processor/package.json {\n\"name\": \"@putout/engine-processor\",\n- \"version\": \"6.1.0\",\n+ \"version\": \"6.2.0\",\n\"type\": \"commonjs\",\n\"author\": \"coderaiser <mnemonic.enemy@gmail.com> (https://github.com/coderaiser)\",\n\"description\": \"run processors\",\n",
        "date": "20.09.2022 17:40:25",
        "repo": "coderaiser/putout",
        "type": "chore",
        "sim_msg": "build: add keywords",
        "sim_diff": "diff --git a/packages/cli/package.json b/packages/cli/package.json \"engines\": {\n\"node\": \">=6.0\"\n},\n- \"keywords\": [],\n+ \"keywords\": [\n+ \"web\",\n+ \"component\",\n+ \"custom\",\n+ \"element\",\n+ \"cli\"\n+ ],\n\"author\": \"\",\n\"license\": \"ISC\",\n\"dependencies\": {\n",
        "chatgpt_rag": "build: update version to 6.2.0"
    },
    {
        "msg": "chore: auto publish",
        "diff": "diff --git a/.github/workflows/release.yml b/.github/workflows/release.yml @@ -24,7 +24,11 @@ jobs:\n- name: Install Dependencies\nrun: yarn\n- - name: Create Release Pull Request\n+ - name: Create Release Pull Request or Publish to npm\nuses: changesets/action@master\n+ with:\n+ # This expects you to have a script called release which does a build for your packages and calls changeset publish\n+ publish: yarn release\nenv:\nGITHUB_TOKEN: ${{ secrets.REPO_SCOPED_TOKEN }}\n+ NPM_TOKEN: ${{ secrets.PREACT_NPM_TOKEN }}\n",
        "date": "26.05.2021 03:35:33",
        "repo": "preactjs/preact-cli",
        "type": "chore",
        "sim_msg": "chore: use latest changesets/action for release workflows",
        "sim_diff": "diff --git a/.github/workflows/release.yml b/.github/workflows/release.yml @@ -33,7 +33,7 @@ jobs:\n- name: Create Release Pull Request or Publish to npm\nid: changesets\n- uses: changesets/action@master\n+ uses: changesets/action@v1\nwith:\n# This expects you to have a script called release which does a build for your packages and calls changeset publish\npublish: yarn release\n",
        "chatgpt_rag": "chore: update release workflow to include npm token for publishing to npm"
    },
    {
        "msg": "chore: Update CI workflow.",
        "diff": "diff --git a/.github/workflows/test.yml b/.github/workflows/test.yml @@ -19,6 +19,9 @@ jobs:\nsteps:\n- uses: actions/checkout@v3\n+ - name: Ensure apt-get is updated\n+ run: sudo apt-get update\n+\n- name: Install Canvas and XML dependencies\nrun: sudo apt-get install -y libxml2-utils\n",
        "date": "25.03.2022 09:05:16",
        "repo": "vega/vega",
        "type": "chore",
        "sim_msg": "ci: enable node 13 and macOS in CI",
        "sim_diff": "diff --git a/.github/workflows/test.yml b/.github/workflows/test.yml @@ -35,9 +35,12 @@ jobs:\n- 10\n- 12.0.0\n- 12\n+ - 13.0.0\n+ - 13\nos:\n- ubuntu-latest\n- windows-latest\n+ - macOS-latest\nsteps:\n- uses: actions/checkout@master\n- uses: actions/setup-node@v1\n",
        "chatgpt_rag": "build: update dependencies installation in CI workflow"
    },
    {
        "msg": "chore(RoutingWrapper): remove stage-0 syntax, fix types import path",
        "diff": "diff --git a/src/common/components/addons/RoutingWrapper/index.jsx b/src/common/components/addons/RoutingWrapper/index.jsx @@ -5,7 +5,7 @@ import React, {Component} from 'react'\nimport {Switch, Redirect} from 'react-router-dom'\nimport LazyLoad from 'components/addons/LazyLoad'\nimport {getAuthState} from 'selectors'\n-import type {RouteItem} from 'routing'\n+import type {RouteItem} from 'types'\ntype Props = {\nroutes: RouteItem[],\n@@ -52,7 +52,7 @@ export default class RoutingWrapper extends Component {\nconst {path, exact, strict, component, lazy} = a\n// can visitor access this route?\n// this function determinates is user allowed to visit route\n- const canAccess = ::this.authCheck\n+ const canAccess = this.authCheck.bind(this)\n// select only props that we need\nconst b = {path, exact, strict, canAccess}\n",
        "date": "17.09.2017 14:28:32",
        "repo": "metnew/suicrux",
        "type": "chore",
        "sim_msg": "fix: replaced TwoFactorDisableBanner to show error messages appropriately on smaller screen",
        "sim_diff": "diff --git a/packages/frontend/src/components/Routing.js b/packages/frontend/src/components/Routing.js @@ -367,6 +367,7 @@ class Routing extends Component {\n<NetworkBanner account={account} />\n<NavigationWrapper />\n+ <GlobalAlert />\n{\n!isWhitelabel && (\n<Switch>\n@@ -376,7 +377,6 @@ class Routing extends Component {\n</Switch>\n)\n}\n- <GlobalAlert />\n<WalletMigration\nopen={this.state.openTransferPopup}\nhistory={this.props.history}\n",
        "chatgpt_rag": "refactor: updated import statement for RouteItem type in RoutingWrapper component to use types instead of routing"
    },
    {
        "msg": "chore: package: v1.3.0",
        "diff": "diff --git a/.nycrc.json b/.nycrc.json \"**/.*.*\",\n\"packages/*/coverage\",\n\"packages/*/bin\",\n- \"packages/*/test\"\n+ \"packages/*/test\",\n+ \"**/eslint.config.js\"\n],\n\"branches\": 100,\n\"lines\": 100,\n",
        "date": "30.08.2022 22:47:06",
        "repo": "coderaiser/putout",
        "type": "chore",
        "sim_msg": "build(npm): remove npm publish from postversion\ndoesn't work that way with 2nd factor auth",
        "sim_diff": "diff --git a/package.json b/package.json \"lint:fix\": \"eslint --fix bin/dependency-cruise src test\",\n\"nsp\": \"nsp check\",\n\"npm-check-updates\": \"ncu --upgrade\",\n- \"postversion\": \"git push && git push --tags && npm publish\",\n+ \"postversion\": \"git push && git push --tags\",\n\"preversion\": \"test `git branch | grep \\\"^* [a-zA-Z]\\\" | cut -c 3-` = 'master'\",\n\"test\": \"mocha --bail --reporter dot test/*/*.spec.js test/*/*/*.spec.js\",\n\"test:cover\": \"istanbul cover node_modules/mocha/bin/_mocha -- test/*/*.spec.js test/*/*/*.spec.js\",\n",
        "chatgpt_rag": "build(nyc): update .nycrc.json to include eslint.config.js in coverage ignore list"
    },
    {
        "msg": "chore(divider): review divider",
        "diff": "diff --git a/packages/chakra-ui-core/src/CDivider/CDivider.js b/packages/chakra-ui-core/src/CDivider/CDivider.js +/**\n+ * Hey! Welcome to @chakra-ui/vue Divider\n+ *\n+ * Dividers are used to display a thin horizontal or vertical line.\n+ *\n+ * @see Docs https://vue.chakra-ui.com/divider\n+ * @see Source https://github.com/chakra-ui/chakra-ui-vue/blob/master/packages/chakra-ui-core/src/CDivider/CDivider.js\n+ */\n+\nimport CBox from '../CBox'\nimport { baseProps } from '../config/props'\nimport { forwardProps } from '../utils'\n+/**\n+ * CDivider component\n+ *\n+ * Creates a horizontal or vertical dividing rule between sibling\n+ * elements\n+ *\n+ * @extends CBox\n+ * @see Docs https://vue.chakra-ui.com/divider\n+ */\nconst CDivider = {\nname: 'CDivider',\nprops: {\n",
        "date": "16.04.2020 23:38:25",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "feat(QCircularProgress): normalize input value",
        "sim_diff": "diff --git a/ui/src/components/circular-progress/QCircularProgress.js b/ui/src/components/circular-progress/QCircularProgress.js @@ -2,6 +2,7 @@ import Vue from 'vue'\nimport SizeMixin from '../../mixins/size.js'\nimport { mergeSlotSafely } from '../../utils/slot.js'\n+import { between } from '../../utils/format.js'\nconst\nradius = 50,\n@@ -55,6 +56,10 @@ export default Vue.extend({\n},\ncomputed: {\n+ normalizedValue () {\n+ return between(this.value, this.min, this.max)\n+ },\n+\nsvgStyle () {\nreturn { transform: `rotate3d(0, 0, 1, ${this.angle - 90}deg)` }\n},\n@@ -78,7 +83,7 @@ export default Vue.extend({\n},\nstrokeDashOffset () {\n- const progress = 1 - (this.value - this.min) / (this.max - this.min)\n+ const progress = 1 - (this.normalizedValue - this.min) / (this.max - this.min)\nreturn (this.dir * progress) * circumference\n},\n@@ -91,7 +96,7 @@ export default Vue.extend({\nrole: 'progressbar',\n'aria-valuemin': this.min,\n'aria-valuemax': this.max,\n- 'aria-valuenow': this.indeterminate === true ? void 0 : this.value\n+ 'aria-valuenow': this.indeterminate === true ? void 0 : this.normalizedValue\n}\n}\n},\n@@ -165,7 +170,7 @@ export default Vue.extend({\nh('div', {\nstaticClass: 'q-circular-progress__text absolute-full row flex-center content-center',\nstyle: { fontSize: this.fontSize }\n- }, this.$scopedSlots.default !== void 0 ? this.$scopedSlots.default() : [ h('div', [ this.value ]) ])\n+ }, this.$scopedSlots.default !== void 0 ? this.$scopedSlots.default() : [ h('div', [ this.normalizedValue ]) ])\n)\nreturn h('div', {\n",
        "chatgpt_rag": "docs(CDivider): add documentation for CDivider component"
    },
    {
        "msg": "chore: error handling for routr guards",
        "diff": "diff --git a/packages/chakra-ui-docs/plugins/analytics.js b/packages/chakra-ui-docs/plugins/analytics.js import Vue from 'vue'\nimport mixpanel from 'mixpanel-browser'\n-const MIXPANEL_TOKEN = process.env.MIXPANEL_TOKEN\n-\n-mixpanel.init(MIXPANEL_TOKEN)\n-\n-export default ({ app }) => {\n+export default ({ app, env }) => {\n+ try {\n+ mixpanel.init(env.MIXPANEL_TOKEN)\nVue.prototype.$mixpanel = mixpanel\n+ } catch (error) {\n+ console.error('Error initializing docs analytics', error)\n+ }\napp.router.afterEach(to => {\ntry {\n",
        "date": "10.05.2020 21:27:59",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "fix(quasar): portal mixin $router, $store, etc access",
        "sim_diff": "diff --git a/quasar/src/mixins/portal.js b/quasar/src/mixins/portal.js import Vue from 'vue'\nimport uid from '../utils/uid.js'\n+let inject\n+\n+function fillInject (root) {\n+ const\n+ instance = new Vue(),\n+ skip = ['el', 'created', 'activated', 'deactivated', 'beforeMount', 'methods', 'mounted', 'render', 'mixins']\n+ .concat(Object.keys(instance.$root.$options))\n+\n+ inject = {}\n+\n+ Object.keys(root)\n+ .filter(name => skip.includes(name) === false)\n+ .forEach(p => {\n+ inject[p] = root[p]\n+ })\n+}\n+\nexport default {\nmethods: {\n__showPortal () {\n@@ -22,7 +39,7 @@ export default {\nportalId: uid()\n}),\n- render (h) {\n+ render () {\nthis.__portal !== void 0 && this.__portal.$forceUpdate()\nreturn null\n},\n@@ -30,7 +47,11 @@ export default {\nbeforeMount () {\nconst id = this.portalId\n- this.__portal = new Vue({\n+ if (inject === void 0) {\n+ fillInject(this.$root.$options)\n+ }\n+\n+ this.__portal = new Vue(Object.assign({}, inject, {\nrender: h => this.__render(h),\ncreated () {\n@@ -40,7 +61,7 @@ export default {\nmethods: {\n__qPortalClose: this.hide\n}\n- }).$mount()\n+ })).$mount()\n},\nbeforeDestroy () {\n",
        "chatgpt_rag": "feat(chakra-ui-docs): update analytics plugin to use environment variable for Mixpanel token"
    },
    {
        "msg": "chore(locals): fix locals",
        "diff": "diff --git a/locals/en.json b/locals/en.json \"Dashboard.h1\": \"Noir.\",\n\"Dashboard.h2-1\": \"Intro\",\n\"Dashboard.h2-2\": \"How it works?\",\n- \"Dashboard.h3-1\": \"Hello, this is Noir.\",\n- \"Dashboard.h3-2\": \"Hello, this is Noir.\",\n- \"Dashboard.p-1\": \"How it works?\",\n- \"Dashboard.p-2\": \"Hello, this is Noir.\"\n+ \"Dashboard.h3-1\": \"Noir.\",\n+ \"Dashboard.h3-2\": \"Noir.\",\n+ \"Dashboard.p-1\": \"In progress.\",\n+ \"Dashboard.p-2\": \"In progress.\"\n}\n",
        "date": "16.10.2017 17:15:32",
        "repo": "metnew/suicrux",
        "type": "chore",
        "sim_msg": "style: Copy CID & Share link\nCloses",
        "sim_diff": "diff --git a/public/locales/en/files.json b/public/locales/en/files.json \"rename\": \"Rename\",\n\"download\": \"Download\",\n\"inspect\": \"Inspect\",\n- \"copyHash\": \"Copy hash\",\n- \"share\": \"Share\",\n+ \"copyHash\": \"Copy CID\",\n+ \"share\": \"Share link\",\n\"close\": \"Close\",\n\"copy\": \"Copy\",\n\"cancel\": \"Cancel\",\n",
        "chatgpt_rag": "style: Update Dashboard content\nCloses"
    },
    {
        "msg": "chore: change test targets\nNo longer testing in node@8 as of\nAdding node@14 and dropping non-LTS targets (odd versions).",
        "diff": "diff --git a/.travis.yml b/.travis.yml @@ -5,10 +5,9 @@ cache:\nnotifications:\nemail: false\nnode_js:\n+ - '14'\n- '12'\n- - '11'\n- '10'\n- - '8'\nbefore_install:\n- if [ \"$TRAVIS_PULL_REQUEST_BRANCH\" == \"\" ]; then echo \"//registry.npmjs.org/:_authToken=\\${NPM_TOKEN}\" >> .npmrc; fi\nafter_success:\n",
        "date": "19.10.2020 19:20:22",
        "repo": "remy/nodemon",
        "type": "chore",
        "sim_msg": "chore: reorder node order to run latest to oldest",
        "sim_diff": "diff --git a/.travis.yml b/.travis.yml @@ -6,12 +6,12 @@ cache:\nnotifications:\nemail: false\nnode_js:\n- - \"8.9.0\"\n- - \"8.16.0\"\n- - \"9.11.2\"\n- - \"10.16.0\"\n- - \"lts/*\"\n- node\n+ - \"lts/*\"\n+ - \"10.16.0\"\n+ - \"9.11.2\"\n+ - \"8.16.0\"\n+ - \"8.9.0\"\ninstall: npm install\n",
        "chatgpt_rag": "chore: update node versions to include '14' and remove '11' and '8'"
    },
    {
        "msg": "chore: updated components list",
        "diff": "diff --git a/packages/chakra-ui-docs/components/components.js b/packages/chakra-ui-docs/components/components.js @@ -23,7 +23,7 @@ const components = [\n'ControlBox',\n'Divider',\n'Drawer',\n- // 'Editable',\n+ 'Editable',\n'Flex',\n'FormControl',\n'Grid',\n@@ -45,7 +45,7 @@ const components = [\n'Select',\n'Slider',\n'Spinner',\n- // 'Stat',\n+ 'Stat',\n'Stack',\n'Switch',\n'Tabs',\n",
        "date": "01.04.2020 00:58:14",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "fix(icon): apply width and height conditionally",
        "sim_diff": "diff --git a/packages/yoga/src/Icon/Icon.jsx b/packages/yoga/src/Icon/Icon.jsx @@ -12,8 +12,8 @@ const Icon = ({\n...props\n}) => (\n<Component\n- width={theme.yoga.spacing[width] || width}\n- height={theme.yoga.spacing[height] || height}\n+ {...(width && { width: theme.yoga.spacing[width] || width })}\n+ {...(height && { height: theme.yoga.spacing[height] || height })}\n{...(fill && { fill: theme.yoga.colors[fill] || fill })}\n{...(stroke && { stroke: theme.yoga.colors[stroke] || stroke })}\n{...props}\n",
        "chatgpt_rag": "feat(components): enable Editable and Stat components in components list"
    },
    {
        "msg": "chore(firebase-auth-sw): fixed regression introduced in last commit for firebase-auth-sw",
        "diff": "diff --git a/lib/sw-templates/firebase-auth-sw.js b/lib/sw-templates/firebase-auth-sw.js const ignorePaths = <%= serialize(options.ignorePaths) %>\n-<% if (options.onFirebaseHosting) { %>\n+<% if (options.loadFromFirebaseHosting) { %>\n// Only works on Firebase hosting!\nimportScripts('/__/firebase/<%= options.firebaseVersion %>/firebase-app.js')\nimportScripts('/__/firebase/<%= options.firebaseVersion %>/firebase-auth.js')\n",
        "date": "22.12.2020 23:03:08",
        "repo": "nuxt-community/firebase-module",
        "type": "chore",
        "sim_msg": "feat: call `cartStore.setCartIdFromLocalStorage` on app mount",
        "sim_diff": "diff --git a/src/pages/_app.js b/src/pages/_app.js @@ -20,6 +20,7 @@ export default class App extends NextApp {\ncomponentDidMount() {\n// Fetch and update auth token in auth store\nrootMobXStores.authStore.setTokenFromLocalStorage();\n+ rootMobXStores.cartStore.setCartIdFromLocalStorage();\nrootMobXStores.keycloakAuthStore.setTokenFromLocalStorage();\n}\n",
        "chatgpt_rag": "refactor: change condition from `onFirebaseHosting` to `loadFromFirebaseHosting` in firebase-auth-sw.js"
    },
    {
        "msg": "chore: fix linting issue",
        "diff": "diff --git a/lib/monitor/match.js b/lib/monitor/match.js @@ -90,7 +90,9 @@ function rulesToMonitor(watch, ignore, config) {\nrule.slice(-1) === '*' &&\nrule.indexOf('*.') === -1) {\n- if (rule.slice(-2) !== '**') rule += '*/*';\n+ if (rule.slice(-2) !== '**') {\n+ rule += '*/*';\n+ }\n}\n",
        "date": "06.01.2018 23:53:59",
        "repo": "remy/nodemon",
        "type": "chore",
        "sim_msg": "fix: xxcludeFilter://reqH:key=pattern",
        "sim_diff": "diff --git a/lib/rules/rules.js b/lib/rules/rules.js @@ -1122,7 +1122,7 @@ function resolveFilterPattern(matcher) {\nif (!filter || filter === '!') {\nreturn false;\n}\n- not = isInclude = matcher[0] === 'i';\n+ isInclude = matcher[0] === 'i';\nif (filter[0] === '!') {\nnot = !not;\nfilter = filter.substring(1);\n@@ -1178,7 +1178,7 @@ function resolveMatchFilter(list) {\nfilters = filters || [];\nvar propName = RegExp.$1;\nvar value = RegExp.$2;\n- not = isInclude = matcher[1] === 'n';\n+ isInclude = matcher[1] === 'n';\nif (value[0] === '!') {\nnot = !not;\nvalue = value.substring(1);\n@@ -1401,7 +1401,7 @@ function matchFilter(url, filter, req) {\nvar filterHeader = function(headers, filterVal) {\nif (!filterVal || !headers) {\n- return true;\n+ return;\n}\nvar value = headers[filterVal.key];\nif (value == null) {\n@@ -1438,18 +1438,23 @@ function matchFilter(url, filter, req) {\nfunction matchExcludeFilters(url, rule, options) {\nvar filters = rule.filters;\n+ if (!filters) {\n+ return;\n+ }\nvar hasIncludeFilter;\n- if (filters) {\n+ var include, exclude;\nfor (var i = 0, len = filters.length; i < len; i++) {\nvar filter = filters[i];\n- var result = matchFilter(url, filter, options);\nhasIncludeFilter = hasIncludeFilter || filter.isInclude;\n- if (filter.isInclude ? !result : result) {\n- return result;\n+ if ((!filter.isInclude || !include) && matchFilter(url, filter, options)) {\n+ if (filter.isInclude) {\n+ include = true;\n+ } else {\n+ exclude = true;\n}\n}\n}\n- return hasIncludeFilter;\n+ return hasIncludeFilter ? (!include || exclude) : exclude;\n}\nfunction Rules(values) {\n",
        "chatgpt_rag": "fix: add missing curly braces for if statement in rulesToMonitor function"
    },
    {
        "msg": "chore(nuxt): fix internal icons registration",
        "diff": "diff --git a/packages/chakra-ui-nuxt/lib/module.js b/packages/chakra-ui-nuxt/lib/module.js @@ -39,7 +39,7 @@ module.exports = function (moduleOptions) {\n// Icons\nconst icons = {\n- ...internalIcons.default,\n+ ...internalIcons,\n...packIcons,\n...(options.icons && options.icons.extend)\n}\n",
        "date": "31.12.2020 14:14:45",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "refactor(ui): Icon - do not use inline args to use prop types",
        "sim_diff": "diff --git a/packages/ui/src/ui/icon/icon.jsx b/packages/ui/src/ui/icon/icon.jsx @@ -18,13 +18,17 @@ const ICONS = {\nWARNING: 'warning',\n};\n-export const Icon = ({ className, glyph, as: Component, size, ...restProps }) => (\n+export const Icon = (props) => {\n+ const { className, glyph, as: Component, size, ...restProps } = props;\n+\n+ return (\n<Component className={cx(css.root, className, css[size])} {...restProps}>\n<svg className={css.icon}>\n<use xlinkHref={`#${glyph}`} />\n</svg>\n</Component>\n);\n+};\nIcon.ICONS = ICONS;\n",
        "chatgpt_rag": "refactor(chakra-ui-nuxt): Simplify icon configuration in module options"
    },
    {
        "msg": "chore: fix imports order",
        "diff": "diff --git a/packages/chakra-ui-core/src/CThemeProvider/tests/CThemeProvider.test.js b/packages/chakra-ui-core/src/CThemeProvider/tests/CThemeProvider.test.js import { toCSSVar } from '@chakra-ui/styled-system'\nimport { mount, shallowMount } from '@vue/test-utils'\nimport theme from '@chakra-ui/theme-vue'\n-import { getElementStyles } from '@/tests/test-utils'\n-\nimport CThemeProvider from '..'\n+import { getElementStyles } from '@/tests/test-utils'\ndescribe('CThemeProvider', () => {\nconst ChildComponent = {\n",
        "date": "26.08.2021 02:21:27",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "test(components/molecule/badgeCounter): refactor",
        "sim_diff": "diff --git a/components/molecule/badgeCounter/test/index.test.js b/components/molecule/badgeCounter/test/index.test.js @@ -10,12 +10,42 @@ import ReactDOM from 'react-dom'\nimport chai, {expect} from 'chai'\nimport chaiDOM from 'chai-dom'\n+import * as pkg from '../src/index.js'\n+\n+import json from '../package.json'\n+\nchai.use(chaiDOM)\n-describe('molecule/badgeCounter', () => {\n- const Component = MoleculeBadgeCounter\n+describe(json.name, () => {\n+ const {default: Component} = pkg\nconst setup = setupEnvironment(Component)\n+ it('library should include defined exported elements', () => {\n+ // Given\n+ const library = pkg\n+ const libraryExportedMembers = [\n+ 'moleculeBadgeCounterSizes',\n+ 'moleculeBadgeCounterStatus',\n+ 'moleculeBadgeCounterVariants',\n+ 'default'\n+ ]\n+\n+ // When\n+ const {\n+ moleculeBadgeCounterSizes,\n+ moleculeBadgeCounterStatus,\n+ moleculeBadgeCounterVariants,\n+ default: MoleculeBadgeCounter,\n+ ...others\n+ } = library\n+\n+ // Then\n+ expect(Object.keys(library).length).to.equal(libraryExportedMembers.length)\n+ expect(Object.keys(library)).to.have.members(libraryExportedMembers)\n+ expect(Object.keys(others).length).to.equal(0)\n+ })\n+\n+ describe(Component.displayName, () => {\nit('should render without crashing', () => {\n// Given\nconst props = {}\n@@ -44,7 +74,8 @@ describe('molecule/badgeCounter', () => {\nit('should NOT extend classNames', () => {\n// Given\nconst props = {className: 'extended-classNames'}\n- const findSentence = str => string => string.match(new RegExp(`S*${str}S*`))\n+ const findSentence = str => string =>\n+ string.match(new RegExp(`S*${str}S*`))\n// When\nconst {container} = setup(props)\n@@ -54,3 +85,109 @@ describe('molecule/badgeCounter', () => {\nexpect(findClassName(container.innerHTML)).to.be.null\n})\n})\n+\n+ describe('moleculeBadgeCounterSizes', () => {\n+ it('value must be an object enum', () => {\n+ // Given\n+ const library = pkg\n+\n+ // When\n+ const {moleculeBadgeCounterSizes: actual} = library\n+\n+ // Then\n+ expect(actual).to.be.an('object')\n+ })\n+\n+ it('value must be a defined string-key pair filled', () => {\n+ // Given\n+ const library = pkg\n+ const expected = {\n+ SMALL: 'small',\n+ MEDIUM: 'medium',\n+ LARGE: 'large'\n+ }\n+\n+ // When\n+ const {moleculeBadgeCounterSizes: actual} = library\n+ const {SMALL, MEDIUM, LARGE, ...others} = actual\n+\n+ // Then\n+ expect(Object.keys(others).length).to.equal(0)\n+ expect(Object.keys(actual)).to.have.members(Object.keys(expected))\n+ Object.entries(expected).forEach(([expectedKey, expectedValue]) => {\n+ expect(Object.keys(actual).includes(expectedKey)).to.be.true\n+ expect(actual[expectedKey]).to.equal(expectedValue)\n+ })\n+ })\n+ })\n+\n+ describe('moleculeBadgeCounterStatus', () => {\n+ it('value must be an object enum', () => {\n+ // Given\n+ const library = pkg\n+\n+ // When\n+ const {moleculeBadgeCounterStatus: actual} = library\n+\n+ // Then\n+ expect(actual).to.be.an('object')\n+ })\n+\n+ it('value must be a defined string-key pair filled', () => {\n+ // Given\n+ const library = pkg\n+ const expected = {\n+ DEFAULT: 'default',\n+ DISABLED: 'disabled',\n+ SELECTED: 'selected'\n+ }\n+\n+ // When\n+ const {moleculeBadgeCounterStatus: actual} = library\n+ const {DEFAULT, DISABLED, SELECTED, ...others} = actual\n+\n+ // Then\n+ expect(Object.keys(others).length).to.equal(0)\n+ expect(Object.keys(actual)).to.have.members(Object.keys(expected))\n+ Object.entries(expected).forEach(([expectedKey, expectedValue]) => {\n+ expect(Object.keys(actual).includes(expectedKey)).to.be.true\n+ expect(actual[expectedKey]).to.equal(expectedValue)\n+ })\n+ })\n+ })\n+\n+ describe('moleculeBadgeCounterVariants', () => {\n+ it('value must be an object enum', () => {\n+ // Given\n+ const library = pkg\n+\n+ // When\n+ const {moleculeBadgeCounterVariants: actual} = library\n+\n+ // Then\n+ expect(actual).to.be.an('object')\n+ })\n+\n+ it('value must be a defined string-key pair filled', () => {\n+ // Given\n+ const library = pkg\n+ const expected = {\n+ DOT: 'dot',\n+ EXCLAMATION: 'exclamation',\n+ EXTENDED: 'extended'\n+ }\n+\n+ // When\n+ const {moleculeBadgeCounterVariants: actual} = library\n+ const {DOT, EXCLAMATION, EXTENDED, ...others} = actual\n+\n+ // Then\n+ expect(Object.keys(others).length).to.equal(0)\n+ expect(Object.keys(actual)).to.have.members(Object.keys(expected))\n+ Object.entries(expected).forEach(([expectedKey, expectedValue]) => {\n+ expect(Object.keys(actual).includes(expectedKey)).to.be.true\n+ expect(actual[expectedKey]).to.equal(expectedValue)\n+ })\n+ })\n+ })\n+})\n",
        "chatgpt_rag": "refactor test for CThemeProvider component and import getElementStyles from test-utils"
    },
    {
        "msg": "chore: don't show perf warnings for test scripts",
        "diff": "diff --git a/karma.conf.js b/karma.conf.js @@ -70,6 +70,7 @@ module.exports = function (config) {\nwebpack: {\nplugins: [defaultsPlugin],\ndevtool: 'inline-source-map',\n+ performance: { hints: false },\nmodule: {\nrules: [\n{\n",
        "date": "09.08.2019 15:57:59",
        "repo": "rollbar/rollbar.js",
        "type": "chore",
        "sim_msg": "chore: exclude demoing-storybook from karma run",
        "sim_diff": "diff --git a/karma.conf.js b/karma.conf.js @@ -10,7 +10,7 @@ module.exports = config => {\n{\npattern: config.grep\n? config.grep\n- : 'packages/!(webpack-import-meta-loader|create|building-utils|webpack-index-html-plugin|rollup-plugin-index-html|import-maps-generate|import-maps-resolve|es-dev-server|karma-esm|building-rollup|building-webpack)/test/**/*.test.js',\n+ : 'packages/!(webpack-import-meta-loader|create|building-utils|demoing-storybook|webpack-index-html-plugin|rollup-plugin-index-html|import-maps-generate|import-maps-resolve|es-dev-server|karma-esm|building-rollup|building-webpack)/test/**/*.test.js',\ntype: 'module',\n},\n],\n",
        "chatgpt_rag": "chore: disable performance hints in webpack for better build performance"
    },
    {
        "msg": "chore(docs): rephrase sentence for grammatical correctness\nChange Text from \"Passing anything other than a string is an error.\" to \"Passing anything other than a string will result in an error.\"",
        "diff": "diff --git a/README.md b/README.md @@ -14,7 +14,7 @@ A library of string validators and sanitizers.\n**This library validates and sanitizes strings only.**\nIf you're not sure if your input is a string, coerce it using `input + ''`.\n-Passing anything other than a string is an error.\n+Passing anything other than a string will result in an error.\n## Installation and Usage\n",
        "date": "03.03.2021 16:11:59",
        "repo": "validatorjs/validator.js",
        "type": "chore",
        "sim_msg": "feat(unicode): fix bug preventing unicode normalization in some cases",
        "sim_diff": "diff --git a/sanitizer/_text.js b/sanitizer/_text.js @@ -15,7 +15,7 @@ function _sanitize( raw, clean ){\nlet text = unicode.normalize(raw.text);\n// remove superfluous whitespace and quotes\n- text = _.trim(_.trim(raw.text), QUOTES);\n+ text = _.trim(_.trim(text), QUOTES);\n// validate input 'text'\nif( !_.isString(text) || _.isEmpty(text) ){\n",
        "chatgpt_rag": "style(docs): update README.md to improve clarity and consistency"
    },
    {
        "msg": "chore: downgrade jsdom to v19 to support node 12",
        "diff": "diff --git a/package.json b/package.json \"holderjs\": \"^2.9.3\",\n\"jest\": \"28.1.3\",\n\"jest-environment-jsdom\": \"28.1.3\",\n- \"jsdom\": \"^20.0.2\",\n+ \"jsdom\": \"^19.0.0\",\n\"json-loader\": \"^0.5.7\",\n\"microbundle\": \"^0.13.3\",\n\"prettier\": \"2.7.1\",\n",
        "date": "14.11.2022 11:03:02",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "sim_msg": "chore: remove react version imperative dependence",
        "sim_diff": "diff --git a/package.json b/package.json \"classnames\": \"^2.2.5\",\n\"prop-types\": \"^15.6.0\",\n\"raf\": \"^3.4.0\",\n- \"react\": \"^16.1.1\",\n\"react-click-outside\": \"^3.0.0\",\n- \"react-dom\": \"^16.1.1\",\n\"throttle-debounce\": \"^1.0.1\"\n},\n\"peerDependencies\": {\n- \"react\": \"^16.0.0\",\n- \"react-dom\": \"^16.0.0\"\n+ \"react\": \"*\",\n+ \"react-dom\": \"*\"\n},\n\"jest\": {\n\"testRegex\": \"(/jest/.+\\\\.(js|jsx)$)|_test.jsx?$\",\n",
        "chatgpt_rag": "chore: update jsdom version to 19.0.0"
    },
    {
        "msg": "chore(config): remove unused options",
        "diff": "diff --git a/config.js b/config.js @@ -42,12 +42,6 @@ const config = {\n...envConfig,\npaths,\n- // ----------------------------------\n- // Server Configuration\n- // ----------------------------------\n- server_host: 'localhost',\n- server_port: process.env.PORT || 8080,\n-\n// ----------------------------------\n// Compiler Configuration\n// ----------------------------------\n",
        "date": "13.08.2018 10:41:13",
        "repo": "semantic-org/semantic-ui-react",
        "type": "chore",
        "sim_msg": "feat: add mainnet config",
        "sim_diff": "diff --git a/config.js b/config.js @@ -4,14 +4,21 @@ function getConfig(env) {\nswitch (env) {\ncase 'production':\n- case 'development':\nreturn {\n- networkId: 'default',\n+ networkId: 'mainnet',\nnodeUrl: 'https://rpc.nearprotocol.com',\ncontractName: CONTRACT_NAME,\nwalletUrl: 'https://wallet.nearprotocol.com',\nhelperUrl: 'https://helper.nearprotocol.com',\n};\n+ case 'development':\n+ return {\n+ networkId: 'testnet',\n+ nodeUrl: 'https://rpc.testnet.nearprotocol.com',\n+ contractName: CONTRACT_NAME,\n+ walletUrl: 'https://wallet.testnet.nearprotocol.com',\n+ helperUrl: 'https://helper.testnet.nearprotocol.com',\n+ };\ncase 'devnet':\nreturn {\nnetworkId: 'devnet',\n",
        "chatgpt_rag": "refactor: remove server configuration from config file"
    },
    {
        "msg": "chore: add chakra to deps",
        "diff": "diff --git a/package.json b/package.json \"website\"\n],\n\"nohoist\": [\n- \"core-js\"\n+ \"core-js\",\n+ \"@chakra-ui/vue\"\n]\n},\n\"scripts\": {\n\"evalbundle\": \"bundlesize\"\n},\n\"dependencies\": {\n+ \"@chakra-ui/vue\": \"^0.7.0-next.2\",\n\"@babel/core\": \"^7.9.0\",\n\"@babel/plugin-proposal-object-rest-spread\": \"^7.7.4\",\n\"@babel/plugin-transform-modules-commonjs\": \"^7.7.4\",\n",
        "date": "23.12.2020 15:46:25",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "chore: use babel7 to transpile specs with karma-babel-preprocessor.",
        "sim_diff": "diff --git a/package.json b/package.json \"three\": \"^0.96.0\"\n},\n\"devDependencies\": {\n- \"@vuedoc/md\": \"^1.1.1\",\n+ \"@babel/core\": \"^7.0.0\",\n\"@babel/preset-env\": \"^7.0.0\",\n+ \"@vuedoc/md\": \"^1.1.1\",\n\"chai\": \"^4.1.2\",\n\"eslint\": \"^5.0.0\",\n\"eslint-config-airbnb-base\": \"^13.0.0\",\n",
        "chatgpt_rag": "chore: update dependencies and add @chakra-ui/vue to nohoist list in package.json"
    },
    {
        "msg": "chore(styles/theme): random color theme",
        "diff": "diff --git a/src/common/styles/theme.jsx b/src/common/styles/theme.jsx * {@link https://www.materialpalette.com/}\n*/\nexport default {\n- primaryColorDark: '#00796B',\n- primaryColor: '#009688',\n- primaryColorLight: '#B2DFDB',\n+ primaryColorDark: '#0e1319',\n+ primaryColor: '#1b1e2f',\n+ primaryColorLight: '#303747',\nprimaryColorText: '#F7F7F7',\n- accentColor: '#00BCD4',\n+ accentColor: '#e2c7c0',\nprimaryTextColor: '#212121',\nsecondaryTextColor: '#757575',\ndividerColor: '#BDBDBD'\n",
        "date": "17.09.2017 14:50:28",
        "repo": "metnew/suicrux",
        "type": "chore",
        "sim_msg": "refactor(theme): replace values on primary to secondary",
        "sim_diff": "diff --git a/packages/doc/src/components/Theme/Colors.jsx b/packages/doc/src/components/Theme/Colors.jsx @@ -113,11 +113,11 @@ const Colors = ({ theme }) => {\n<Wrapper>\n<BackgroundColor theme={theme} color=\"primary\">\n<span>primary</span>\n- <span>#231B22</span>\n+ <span>#D8385E</span>\n</BackgroundColor>\n<BackgroundColor theme={theme} color=\"secondary\">\n<span>secondary</span>\n- <span>#D8385E </span>\n+ <span>#231B22</span>\n</BackgroundColor>\n<FeedbackColors theme={theme} color=\"success\" token={0}>\n<span> feedback.success.light </span>\n",
        "chatgpt_rag": "refactor(theme): update primary color values to new shades"
    },
    {
        "msg": "chore: remove vue-template-computer from devDeps",
        "diff": "diff --git a/package.json b/package.json \"styled-system\": \"^5.1.2\",\n\"v-scroll-lock\": \"^1.1.0\",\n\"vue-loader\": \"^15.7.1\",\n- \"vue-lorem-ipsum\": \"^0.0.1\",\n- \"vue-template-compiler\": \"^2.6.10\"\n+ \"vue-lorem-ipsum\": \"^0.0.1\"\n}\n}\n",
        "date": "09.03.2020 09:14:43",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "chore(deps): update `webpack-dev-server`\nFixes",
        "sim_diff": "diff --git a/package.json b/package.json \"vue-style-loader\": \"^4.1.3\",\n\"webpack\": \"^5.60.0\",\n\"webpack-cli\": \"^4.9.1\",\n- \"webpack-dev-server\": \"4.4.0\",\n+ \"webpack-dev-server\": \"4.7.3\",\n\"webpack-merge\": \"^5.8.0\",\n\"webpack-notifier\": \"^1.14.1\",\n\"webpackbar\": \"^5.0.0-3\",\n",
        "chatgpt_rag": "chore(deps): remove unused `vue-template-compiler` and update `vue-lorem-ipsum` in package.json"
    },
    {
        "msg": "chore(carbonads): update script src",
        "diff": "diff --git a/docs/app/Components/CarbonAd/CarbonAd.js b/docs/app/Components/CarbonAd/CarbonAd.js @@ -11,7 +11,7 @@ class CarbonAd extends Component {\nscript.async = true\nscript.id = '_carbonads_js'\nscript.type = 'text/javascript'\n- script.src = '//cdn.carbonads.com/carbon.js?zoneid=1673&serve=C6AILKT&placement=reactsemanticuicom'\n+ script.src = '//cdn.carbonads.com/carbon.js?serve=CK7DT23J&placement=reactsemanticuicom'\nthis.ifRef(ref => ref.appendChild(script))\n}\n",
        "date": "24.05.2018 23:14:54",
        "repo": "semantic-org/semantic-ui-react",
        "type": "chore",
        "sim_msg": "docs: add link to further_reading",
        "sim_diff": "diff --git a/docs/layout.jade b/docs/layout.jade @@ -107,6 +107,8 @@ html(lang='en')\na.pure-menu-link(href=\"/docs/compatibility.html\") Version Compatibility\nli.pure-menu-item\na.pure-menu-link(href=\"/docs/faq.html\") FAQ\n+ li.pure-menu-item\n+ a.pure-menu-link(href=\"/docs/further_reading.html\") Further Reading\n<script async type=\"text/javascript\" src=\"//cdn.carbonads.com/carbon.js?zoneid=1673&serve=C6AILKT&placement=mongoosejscom\" id=\"_carbonads_js\"></script>\n.container\n#content\n",
        "chatgpt_rag": "docs: update CarbonAd script source URL"
    }
]