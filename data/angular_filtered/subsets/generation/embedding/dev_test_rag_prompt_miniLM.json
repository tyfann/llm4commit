[
    {
        "msg": "build: remove d3 from devDependencies\nd3 is already in dependencies, which is sufficient",
        "diff": "diff --git a/package.json b/package.json \"conventional-commit-types\": \"^2.1.0\",\n\"copy-webpack-plugin\": \"^1.1.1\",\n\"cz-conventional-changelog\": \"^1.2.0\",\n- \"d3\": \"^3.5.17\",\n\"eslint\": \"^1.10.3\",\n\"eslint-config-standard\": \"^4.4.0\",\n\"eslint-plugin-promise\": \"^1.0.8\",\n",
        "date": "26.04.2017 09:28:55",
        "repo": "kitware/candela",
        "type": "build",
        "sim_msg": "chore: update eslint and fix lint errors",
        "sim_diff": "diff --git a/package.json b/package.json \"vary\": \"^1.1.2\"\n},\n\"devDependencies\": {\n- \"eslint\": \"^3.17.1\",\n+ \"eslint\": \"^6.0.1\",\n\"eslint-config-koa\": \"^2.0.0\",\n\"eslint-config-standard\": \"^7.0.1\",\n\"eslint-plugin-promise\": \"^3.5.0\",\n"
    },
    {
        "msg": "build(TrackerDash): revert to d3v3",
        "diff": "diff --git a/package.json b/package.json \"UpSet\": \"git+https://github.com/jeffbaumes/upset#no-global-vars\",\n\"brace\": \"^0.7.0\",\n\"css-loader\": \"^0.23.1\",\n- \"d3\": \"^4.8.0\",\n+ \"d3\": \"^3.5.17\",\n\"datalib\": \"^1.7.3\",\n\"geojs\": \"^0.9.1\",\n\"glo\": \"github:ronichoudhury-work/glo#dist\",\n",
        "date": "31.05.2017 11:42:33",
        "repo": "kitware/candela",
        "type": "build",
        "sim_msg": "chore: update inquirer to version 3.3.0\nFixes",
        "sim_diff": "diff --git a/package.json b/package.json \"glob\": \"^7.0.5\",\n\"html\": \"^1.0.0\",\n\"htmlencode\": \"0.0.4\",\n- \"inquirer\": \"^1.1.0\",\n+ \"inquirer\": \"^3.3.0\",\n\"js-yaml\": \"^3.8.3\",\n\"markdown-it\": \"^8.3.1\",\n\"optimist\": \"^0.6.1\",\n"
    },
    {
        "msg": "build: updated lockfile",
        "diff": "diff --git a/yarn.lock b/yarn.lock resolved \"https://registry.yarnpkg.com/@bcoe/v8-coverage/-/v8-coverage-0.2.3.tgz#75a2e8b51cb758a7553d6804a5932d7aace75c39\"\nintegrity sha512-0hYQ8SB4Db5zvZB4axdMHGwEaQjkZzFjQiN9LVYvIFB2nSUHW9tYpxWriPrWDASIxiaXax83REcLxuSdnGPZtw==\n+\"@chakra-ui/vue@^0.4.1\":\n+ version \"0.4.2\"\n+ resolved \"https://registry.yarnpkg.com/@chakra-ui/vue/-/vue-0.4.2.tgz#5a6dc8ab19cad1b59039632037e6a32360378a71\"\n+ integrity sha512-wQ53rlbrG4+AsyAUFuaboF2R3kHfwHFD9jUqL51UsVkc5cUecweyXvavNF/YRMBkAI1ni6BzPM/3q/9LqqHE7w==\n+ dependencies:\n+ \"@popperjs/core\" \"^2.4.0\"\n+ \"@styled-system/css\" \"^5.0.23\"\n+ animejs \"^3.1.0\"\n+ aria-hidden \"^1.1.1\"\n+ breadstick \"^0.2.14\"\n+ color \"^3.1.2\"\n+ focus-trap \"^5.1.0\"\n+ focus-trap-vue \"^0.0.4\"\n+ lodash-es \"^4.17.15\"\n+ portal-vue \"^2.1.6\"\n+ styled-system \"^5.1.2\"\n+ v-scroll-lock \"^1.1.0\"\n+\n\"@cnakazawa/watch@^1.0.3\":\nversion \"1.0.4\"\nresolved \"https://registry.yarnpkg.com/@cnakazawa/watch/-/watch-1.0.4.tgz#f864ae85004d0fcab6f50be9141c4da368d1656a\"\n",
        "date": "09.05.2020 18:24:45",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "build",
        "sim_msg": "build: udpate yarn.lock",
        "sim_diff": "diff --git a/yarn.lock b/yarn.lock resolved \"https://registry.yarnpkg.com/@types/node/-/node-11.11.3.tgz#7c6b0f8eaf16ae530795de2ad1b85d34bf2f5c58\"\nintegrity sha512-wp6IOGu1lxsfnrD+5mX6qwSwWuqsdkKKxTN4aQc4wByHAKZJf9/D4KXPQ1POUjEbnCP5LMggB0OEFNY9OTsMqg==\n+\"@types/node@^11.13.5\":\n+ version \"11.13.7\"\n+ resolved \"https://registry.yarnpkg.com/@types/node/-/node-11.13.7.tgz#85dbb71c510442d00c0631f99dae957ce44fd104\"\n+ integrity sha512-suFHr6hcA9mp8vFrZTgrmqW2ZU3mbWsryQtQlY/QvwTISCw7nw/j+bCQPPohqmskhmqa5wLNuMHTTsc+xf1MQg==\n+\n\"@types/unist@*\", \"@types/unist@^2.0.0\":\nversion \"2.0.3\"\nresolved \"https://registry.yarnpkg.com/@types/unist/-/unist-2.0.3.tgz#9c088679876f374eb5983f150d4787aa6fb32d7e\"\n@@ -11049,6 +11054,15 @@ rollup@^1.1.2:\n\"@types/node\" \"^11.9.5\"\nacorn \"^6.1.1\"\n+rollup@^1.10.1:\n+ version \"1.10.1\"\n+ resolved \"https://registry.yarnpkg.com/rollup/-/rollup-1.10.1.tgz#aeb763bbe98f707dc6496708db88372fa66687e7\"\n+ integrity sha512-pW353tmBE7QP622ITkGxtqF0d5gSRCVPD9xqM+fcPjudeZfoXMFW2sCzsTe2TU/zU1xamIjiS9xuFCPVT9fESw==\n+ dependencies:\n+ \"@types/estree\" \"0.0.39\"\n+ \"@types/node\" \"^11.13.5\"\n+ acorn \"^6.1.1\"\n+\nrun-async@^2.2.0:\nversion \"2.3.0\"\nresolved \"https://registry.yarnpkg.com/run-async/-/run-async-2.3.0.tgz#0371ab4ae0bdd720d4166d7dfda64ff7a445a6c0\"\n"
    },
    {
        "msg": "build(npm): updated version to 5.1.0",
        "diff": "diff --git a/package.json b/package.json {\n\"name\": \"@nuxtjs/firebase\",\n- \"version\": \"5.0.7\",\n+ \"version\": \"5.1.0\",\n\"description\": \"Intergrate Firebase into your Nuxt project.\",\n\"keywords\": [\n\"firebase\",\n\"cz-conventional-changelog\": \"latest\",\n\"eslint\": \"latest\",\n\"firebase\": \"^7.14.2\",\n- \"husky\": \"latest\",\n+ \"husky\": \"^4.2.5\",\n\"jest\": \"^25.5.3\",\n\"standard-version\": \"latest\",\n\"vuepress\": \"^1.4.1\",\n",
        "date": "01.05.2020 21:11:47",
        "repo": "nuxt-community/firebase-module",
        "type": "build",
        "sim_msg": "feat: v3.7.7",
        "sim_diff": "diff --git a/package.json b/package.json {\n\"name\": \"nei\",\n\"description\": \"builder for nei platform\",\n- \"version\": \"3.7.6\",\n+ \"version\": \"3.7.7\",\n\"license\": \"MIT\",\n\"keywords\": [\n\"nei\",\n"
    },
    {
        "msg": "build(webpack): wrap existing loaders' `exclude` property in list if not already",
        "diff": "diff --git a/webpack.js b/webpack.js @@ -39,15 +39,24 @@ module.exports = function (config, basePath, options) {\n// directives.\nvar exclude = options.excludeCandelaNM === undefined || options.excludeCandelaNM;\n+ // Exclude the base paths from having existing loaders applied to them.\n+ if (exclude) {\n// Install empty module and module.loaders entries if missing.\nconfig.module = config.module || {};\nconfig.module.loaders = config.module.loaders || [];\n- // Exclude the base paths from having existing loaders applied to them.\n- if (exclude) {\n- config.modules.loaders = config.modules.loaders || [];\n- config.modules.loaders.forEach(function (loader) {\n- loader.exclude = (loader.exclude || []).concat(includePaths);\n+ // For each loader, append the Candela include paths to its `exclude`\n+ // property.\n+ config.module.loaders.forEach(function (loader) {\n+ // Install an empty list if there is no `exclude` property.\n+ loader.exclude = loader.exclude || [];\n+\n+ // If the `exclude` propertry is a non-list singleton, wrap it in a list.\n+ if (!Array.isArray(loader.exclude)) {\n+ loader.exclude = [loader.exclude];\n+ }\n+\n+ loader.exclude = loader.exclude.concat(includePaths);\n});\n}\n",
        "date": "05.01.2017 13:28:30",
        "repo": "kitware/candela",
        "type": "build",
        "sim_msg": "build: Enable caching for babel-loader",
        "sim_diff": "diff --git a/build/webpack.config.common.js b/build/webpack.config.common.js @@ -34,8 +34,11 @@ module.exports = (settings) => {\n},\n{\ntest: /\\.jsx?$/,\n- use: 'babel-loader',\n+ loader: 'babel-loader',\nexclude: /node_modules/,\n+ options: {\n+ cacheDirectory: isDevelopment,\n+ },\n},\n],\n},\n"
    },
    {
        "msg": "build: provide custom Dockerfile location",
        "diff": "diff --git a/.circleci/config.yml b/.circleci/config.yml @@ -201,7 +201,7 @@ jobs:\ndocker buildx create docker-offen --name docker-offen --use\ndocker buildx inspect --bootstrap\nfor tag in \"${DOCKER_IMAGE_TAGS[@]}\"; do\n- docker buildx build --platform linux/amd64,linux/arm64,linux/arm/v7 -t offen/offen:$tag . --push\n+ docker buildx build --platform linux/amd64,linux/arm64,linux/arm/v7 -f ./build/Dockerfile -t offen/offen:$tag . --push\ndone\n- store_artifacts:\npath: /tmp/artifacts\n",
        "date": "15.02.2022 20:51:36",
        "repo": "offen/offen",
        "type": "build",
        "sim_msg": "ci: missing escape characters",
        "sim_diff": "diff --git a/eve/main.yml b/eve/main.yml @@ -281,9 +281,15 @@ stages:\nname: Build docker image\ncommand: >-\ndocker build\n+ --no-cache\n-t %(prop:docker_image_name)s\n- -t zenko/cloudserver:latest-%(prop:product_version)s\n.\n+ - ShellCommand:\n+ name: Tag images\n+ command: |\n+ docker tag %(prop:docker_image_name)s zenko/cloudserver:$TAG\n+ env:\n+ TAG: \"latest-%(prop:product_version)s\"\n- ShellCommand:\nname: Push image\ncommand: |\n"
    },
    {
        "msg": "build: resolve chakra ui dep version",
        "diff": "diff --git a/package.json b/package.json \"@babel/plugin-transform-modules-commonjs\": \"^7.7.4\",\n\"@babel/plugin-transform-parameters\": \"^7.7.4\",\n\"@babel/preset-env\": \"^7.9.5\",\n- \"@chakra-ui/vue\": \"^0.5.2\",\n+ \"@chakra-ui/vue\": \"^0.5.3\",\n\"@commitlint/cli\": \"^8.2.0\",\n\"@commitlint/config-conventional\": \"^8.2.0\",\n\"@fortawesome/free-brands-svg-icons\": \"^5.12.0\",\n",
        "date": "16.05.2020 20:36:35",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "build",
        "sim_msg": "build(npm): :arrow_up: eslint, eslint-plugin-mocha, eslint-plugin-unicorn, lint-staged, mocha, typescript, upem",
        "sim_diff": "diff --git a/package.json b/package.json \"wrap-ansi\": \"7.0.0\"\n},\n\"devDependencies\": {\n- \"@babel/core\": \"7.9.6\",\n- \"@babel/plugin-transform-modules-commonjs\": \"7.9.6\",\n+ \"@babel/core\": \"7.10.2\",\n+ \"@babel/plugin-transform-modules-commonjs\": \"7.10.1\",\n\"chai\": \"4.2.0\",\n\"chai-json-schema\": \"1.5.1\",\n\"coffeescript\": \"2.5.1\",\n- \"eslint\": \"7.0.0\",\n+ \"eslint\": \"7.1.0\",\n\"eslint-config-moving-meadow\": \"2.0.2\",\n\"eslint-config-prettier\": \"6.11.0\",\n\"eslint-plugin-budapestian\": \"2.0.0\",\n\"eslint-plugin-import\": \"2.20.2\",\n- \"eslint-plugin-mocha\": \"7.0.0\",\n+ \"eslint-plugin-mocha\": \"7.0.1\",\n\"eslint-plugin-node\": \"11.1.0\",\n\"eslint-plugin-security\": \"1.4.0\",\n- \"eslint-plugin-unicorn\": \"20.0.0\",\n+ \"eslint-plugin-unicorn\": \"20.1.0\",\n\"husky\": \"4.2.5\",\n\"intercept-stdout\": \"0.1.2\",\n- \"lint-staged\": \"10.2.4\",\n- \"mocha\": \"7.1.2\",\n+ \"lint-staged\": \"10.2.7\",\n+ \"mocha\": \"7.2.0\",\n\"normalize-newline\": \"3.0.0\",\n\"npm-run-all\": \"4.1.5\",\n\"nyc\": \"15.0.1\",\n\"symlink-dir\": \"4.0.3\",\n\"tslint\": \"6.1.2\",\n\"tslint-config-prettier\": \"1.18.0\",\n- \"typescript\": \"3.9.2\",\n- \"upem\": \"4.0.0\",\n+ \"typescript\": \"3.9.3\",\n+ \"upem\": \"4.0.1\",\n\"vue-template-compiler\": \"2.6.11\",\n\"yarn\": \"1.22.4\"\n},\n"
    },
    {
        "msg": "build: xgo does not need to be locked anymore",
        "diff": "diff --git a/build/Dockerfile.build b/build/Dockerfile.build @@ -98,7 +98,7 @@ RUN python ./create_notice.py \\\n--client auditorium.csv \\\n--server server.csv >> NOTICE\n-FROM techknowlogick/xgo:go-1.19.2 as compiler\n+FROM techknowlogick/xgo:go-1.19.5 as compiler\nARG rev\nENV GIT_REVISION=$rev\n",
        "date": "10.01.2023 21:34:46",
        "repo": "offen/offen",
        "type": "build",
        "sim_msg": "chore(docker): add docker related scripts",
        "sim_diff": "diff --git a/skeleton/common/package.json b/skeleton/common/package.json // @endif\n\"scripts\": {\n\"build\": \"au build\",\n- \"start\": \"au run\"\n+ \"start\": \"au run\",\n+// @if feat.docker\n+\"docker:build\": \"docker build -t /* @echo projectName */:0.1.0 -t /* @echo projectName */:latest .\",\n+\"docker:start\": \"docker-compose up -d\",\n+\"docker:stop\": \"docker-compose down\",\n+// @endif\n},\n\"engines\": {\n\"node\": \">=8.9.0\"\n"
    },
    {
        "msg": "build: install correct freefont package",
        "diff": "diff --git a/Dockerfile.node b/Dockerfile.node @@ -57,6 +57,7 @@ RUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key\nfonts-kacst \\\nfonts-thai-tlwg \\\nfonts-wqy-zenhei \\\n+ fonts-freefont-ttf \\\ngoogle-chrome-unstable \\\n--no-install-recommends \\\n&& rm -rf /var/lib/apt/lists/*\n",
        "date": "03.02.2022 16:07:09",
        "repo": "offen/offen",
        "type": "build",
        "sim_msg": "build: update dockerfile [skip ci]",
        "sim_diff": "diff --git a/Dockerfile b/Dockerfile # Base image\n-FROM node:16.8-buster-slim\n+FROM node:17.3-bullseye-slim\n# Copy repository\nCOPY . /metrics\n+WORKDIR /metrics\n# Setup\nRUN chmod +x /metrics/source/app/action/index.mjs \\\n@@ -13,19 +14,17 @@ RUN chmod +x /metrics/source/app/action/index.mjs \\\n&& wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \\\n&& sh -c 'echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google.list' \\\n&& apt-get update \\\n- && apt-get install -y google-chrome-stable fonts-ipafont-gothic fonts-wqy-zenhei fonts-thai-tlwg fonts-kacst fonts-freefont-ttf libxss1 --no-install-recommends \\\n- && apt-get install -y ca-certificates fonts-liberation libappindicator3-1 libasound2 libatk-bridge2.0-0 libatk1.0-0 libc6 libcairo2 libcups2 libdbus-1-3 libexpat1 libfontconfig1 libgbm1 libgcc1 libglib2.0-0 libgtk-3-0 libnspr4 libnss3 libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 lsb-release wget xdg-utils \\\n+ && apt-get install -y google-chrome-stable fonts-ipafont-gothic fonts-wqy-zenhei fonts-thai-tlwg fonts-kacst fonts-freefont-ttf libxss1 libx11-xcb1 libxtst6 lsb-release --no-install-recommends \\\n# Install ruby to support github licensed gem\n&& apt-get install -y ruby-full git g++ cmake pkg-config libssl-dev \\\n&& gem install licensed \\\n# Install python for node-gyp\n&& apt-get install -y python3 \\\n- # Install node modules\n- && cd /metrics \\\n+ # Clean apt/lists\n+ && rm -rf /var/lib/apt/lists/* \\\n+ # Install node modules and rebuild indexes\n&& npm ci \\\n- # Rebuild indexes\n- && npm run index \\\n- && rm -rf /var/lib/apt/lists/*\n+ && npm run index\n# Environment variables\nENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD true\n"
    },
    {
        "msg": "build: remove duplicate copy step",
        "diff": "diff --git a/build/Dockerfile.messages b/build/Dockerfile.messages @@ -58,7 +58,6 @@ RUN apk add git\nRUN apk add --no-cache --virtual .gyp python make g++\nCOPY ./packages/package.json ./packages/package-lock.json /code/deps/\n-COPY ./packages /code/packages\nWORKDIR /code/deps\nENV ADBLOCK true\nENV DISABLE_OPENCOLLECTIVE true\n",
        "date": "28.04.2021 13:19:55",
        "repo": "offen/offen",
        "type": "build",
        "sim_msg": "feat: bump Dockerfile to node v16",
        "sim_diff": "diff --git a/Dockerfile b/Dockerfile # ---- Base Node ----\n-FROM node:14-alpine AS base\n+FROM node:16-alpine AS base\n# set working directory\nWORKDIR /usr/src/app\n@@ -10,7 +10,7 @@ COPY package*.json ./\n# ---- Dependencies ----\nFROM base AS basedependencies\n## Install build toolchain, install node deps and compile native add-ons\n-RUN apk add --no-cache python make g++ git\n+RUN apk add --no-cache python3 make g++ git\nFROM basedependencies as dependencies\n# install node packages\n"
    },
    {
        "msg": "ci: remove extra build step",
        "diff": "diff --git a/circle.yml b/circle.yml @@ -19,12 +19,9 @@ dependencies:\ncompile:\noverride:\n- # Build Candela.\n+ # Build Candela and the examples.\n- npm run build\n- # Build the examples.\n- - npm run build:examples\n-\n# Build the unit test and coverage test bundles.\n- npm run build:test\n- npm run build:coverage\n",
        "date": "11.05.2018 13:26:55",
        "repo": "kitware/candela",
        "type": "ci",
        "sim_msg": "feat: improve workflow parallelism",
        "sim_diff": "diff --git a/.circleci/config.yml b/.circleci/config.yml @@ -108,11 +108,15 @@ workflows:\njobs:\n- lint\n- type_check:\n- requires:\n- - lint\n- build_test_unit_node_6:\nrequires:\n+ - lint\n- type_check\n- build_test_unit_node_8:\nrequires:\n+ - lint\n- type_check\n+ - bundlesize_check:\n+ requires:\n+ - build_test_unit_node_6\n+ - build_test_unit_node_8\n"
    },
    {
        "msg": "ci: verify log",
        "diff": "diff --git a/scripts/verifyCommit.js b/scripts/verifyCommit.js @@ -5,9 +5,10 @@ const msgPath = process.env.GIT_PARAMS\nconst msg = require('fs').readFileSync(msgPath, 'utf-8').trim()\nconst commitRE = /^(revert: )?(feat|fix|docs|dx|style|refactor|perf|test|workflow|build|ci|chore|types|wip|release)(\\(.+\\))?(.{1,10})?: .{1,50}/\n-const mergeRE = /^Merge pull request/\n+const mergeRe = /^(Merge pull request|Merge branch)/\n+\nif (!commitRE.test(msg)) {\n- if (!mergeRE.test(msg)) {\n+ if (!mergeRe.test(msg)) {\nconsole.log(msg)\nconsole.error(\n` ${chalk.bgRed.white(' ERROR ')} ${chalk.red(\n",
        "date": "15.10.2020 14:35:55",
        "repo": "hug-sun/element3",
        "type": "ci",
        "sim_msg": "chore(eslint): Fail the new git workflow if `git diff` fails",
        "sim_diff": "diff --git a/.github/workflows/lint.diff.yml b/.github/workflows/lint.diff.yml @@ -22,7 +22,7 @@ jobs:\nuses: actions/checkout@v2\nwith:\nref: ${{ github.base_ref }}\n- - name: Checkout PR topic ref\n+ - name: Checkout PR merge ref\nuses: actions/checkout@v2\nwith:\nref: ${{ github.ref }}\n@@ -37,4 +37,16 @@ jobs:\n- name: Build all\nrun: npm run buildall\n- name: Run eslint\n- run: npx eslint --no-error-on-unmatched-pattern $(git diff --name-only origin/$GITHUB_BASE_REF)\n+ run: |\n+ changed_files=\"$(git diff --name-only origin/${{ github.base_ref }})\"\n+ if (( $? )); then\n+ echo \"Failed diff against origin/${{ github.base_ref }}\"\n+ exit 1\n+ else\n+ echo \"Changed files:\"\n+ echo \"$changed_files\"\n+ echo\n+ echo \"Running eslint\"\n+ echo\n+ npx eslint --no-error-on-unmatched-pattern $changed_files\n+ fi\n"
    },
    {
        "msg": "ci: use bash instead of sh",
        "diff": "diff --git a/package.json b/package.json \"scripts\": {\n\"install\": \"lerna bootstrap --hoist\",\n\"clean:lerna\": \"lerna clean\",\n- \"clean:dist\": \"sh scripts/clean-all\",\n- \"build\": \"sh scripts/build-all\",\n+ \"clean:dist\": \"bash scripts/clean-all\",\n+ \"build\": \"bash scripts/build-all\",\n\"build:examples\": \"cd packages/examples && npm run build\",\n\"examples\": \"cd packages/examples && npm run serve\",\n- \"build:test\": \"sh scripts/build-test\",\n- \"build:coverage\": \"COVERAGE=1 sh scripts/build-test\",\n- \"test:unit\": \"sh scripts/run-test\",\n+ \"build:test\": \"bash scripts/build-test\",\n+ \"build:coverage\": \"COVERAGE=1 bash scripts/build-test\",\n+ \"test:unit\": \"bash scripts/run-test\",\n\"test:image\": \"cd packages/examples && npm test\",\n- \"test:coverage\": \"COVERAGE=1 sh scripts/run-test\",\n+ \"test:coverage\": \"COVERAGE=1 bash scripts/run-test\",\n\"coverage:report\": \"http-server build/coverage/html -p ${PORT-3000}\",\n\"build:docs\": \"sphinx-build -a -b html docs/ build/docs/\",\n- \"lint\": \"sh scripts/run-lint\",\n+ \"lint\": \"bash scripts/run-lint\",\n\"lint:pycandela\": \"flake8 --config python/pycandela/flake8.cfg python/pycandela\",\n\"docs\": \"http-server build/docs -p ${PORT-3000}\",\n\"commit\": \"git-cz\",\n",
        "date": "03.05.2018 17:42:59",
        "repo": "kitware/candela",
        "type": "ci",
        "sim_msg": "chore: add beta publishing tasks",
        "sim_diff": "diff --git a/package.json b/package.json {\n\"scripts\": {\n- \"bootstrap\": \"yarn && lerna bootstrap\",\n+ \"bootstrap\": \"run-s bootstrap:install bootstrap:lerna\",\n+ \"bootstrap:install\": \"yarn\",\n+ \"bootstrap:lerna\": \"lerna bootstrap\",\n\"start\": \"run-s bootstrap develop\",\n\"watch\": \"lerna run watch --parallel\",\n\"develop\": \"lerna run develop --parallel\",\n- \"build\": \"npm run clean && lerna run build\",\n- \"build-preview\": \"npm run build && lerna run build-preview\",\n+ \"build\": \"run-s clean build:lerna\",\n+ \"build:lerna\": \"lerna run build\",\n+ \"build-preview\": \"run-s build build-preview:lerna\",\n+ \"build-preview:lerna\": \"lerna run build-preview\",\n\"clean\": \"rimraf packages/*/dist dev-test/*.js\",\n- \"reset\": \"npm run clean && lerna clean --yes\",\n+ \"clean:lerna\": \"lerna clean --yes\",\n+ \"reset\": \"run-s clean clean:lerna\",\n\"cache-ci\": \"node scripts/cache.js\",\n\"test\": \"run-s lint jest e2e\",\n\"test-ci\": \"run-s lint-quiet cache-ci jest e2e-ci\",\n\"jest\": \"cross-env NODE_ENV=test jest --no-cache\",\n- \"e2e-prep\": \"npm run build && cp -r packages/netlify-cms/dist dev-test/\",\n+ \"e2e-prep\": \"run-s build e2e-move-build\",\n+ \"e2e-move-build\": \"cp -r packages/netlify-cms/dist dev-test/\",\n\"e2e-serve\": \"http-server dev-test\",\n\"e2e-exec\": \"cypress run\",\n\"e2e-exec-ci\": \"cypress run --record\",\n\"e2e-ci\": \"run-s e2e-prep e2e-run-ci\",\n\"e2e-dev\": \"start-test develop 8080 e2e-exec-dev\",\n\"publish\": \"run-s publish:before-manual-version publish:after-manual-version\",\n- \"publish:before-manual-version\": \"run-s test publish:version\",\n+ \"publish:before-manual-version\": \"run-s bootstrap test publish:version\",\n\"publish:after-manual-version\": \"run-s publish:prepare publish:push\",\n\"publish:prepare\": \"run-s bootstrap build\",\n\"publish:version\": \"lerna version --no-push\",\n- \"publish:push\": \"git push --follow-tags && lerna publish from-git\",\n- \"publish:dry-run\": \"lerna version --no-git-tag-version --no-push\",\n+ \"publish:push\": \"run-s publish:push-git publish:from-git\",\n+ \"publish:push-git\": \"git push --follow-tags\",\n+ \"publish:from-git\": \"lerna publish from-git\",\n+ \"publish:dry-run\": \"run-s \\\"publish:version --no-git-tag-version\\\"\",\n+ \"publish:beta\": \"run-s publish:beta:before-manual-version publish:after-manual-version\",\n+ \"publish:beta:before-manual-version\": \"run-s bootstrap test publish:beta:version\",\n+ \"publish:beta:version\": \"lerna version prepatch --preid alpha --no-push\",\n+ \"publish:beta:dry-run\": \"run-s \\\"publish:beta:version --no-git-tag-version\\\"\",\n\"format\": \"run-s \\\"lint:css -- --fix --quiet\\\" \\\"lint:js -- --fix --quiet\\\" \\\"format:prettier -- --write\\\"\",\n\"format:prettier\": \"prettier \\\"{{packages,scripts,website}/**/,}*.{js,css}\\\"\",\n\"lint\": \"run-p -c --aggregate-output lint:*\",\n\"lint-quiet\": \"run-p -c --aggregate-output \\\"lint:* -- --quiet\\\"\",\n\"lint:css\": \"stylelint --ignore-path .gitignore \\\"{packages/**/*.{css,js},website/**/*.css}\\\"\",\n- \"lint:js\": \"eslint --ignore-path .gitignore \\\"{{packages,scripts,website}/**/,}*.js\\\"\",\n- \"lint:format\": \"npm run format:prettier -- --list-different\",\n+ \"lint:js\": \"eslint --color --ignore-path .gitignore \\\"{{packages,scripts,website}/**/,}*.js\\\"\",\n+ \"lint:format\": \"prettier \\\"{{packages,scripts,website}/**/,}*.{js,css}\\\" --list-different\",\n\"add-contributor\": \"all-contributors add\"\n},\n\"browserslist\": [\n"
    },
    {
        "msg": "ci: try to fix azure pipline",
        "diff": "diff --git a/azure-pipelines.yml b/azure-pipelines.yml @@ -16,10 +16,10 @@ strategy:\nsteps:\n- task: NodeTool@0\ninputs:\n- version: $(node_version)\n+ versionSpec: $(node_version)\ndisplayName: 'Install Node.js'\n- script: |\nnpm install\n- npm run test\n+ npm test\ndisplayName: 'npm install and test'\n",
        "date": "01.10.2018 19:03:48",
        "repo": "namics/generator-nitro",
        "type": "ci",
        "sim_msg": "fix: azure-pipelines",
        "sim_diff": "diff --git a/azure-pipelines.yml b/azure-pipelines.yml @@ -7,12 +7,12 @@ trigger:\n- master\npool:\n- vmImage: 'Ubuntu-16.04'\n+ vmImage: 'ubuntu-latest'\nsteps:\n- task: NodeTool@0\ninputs:\n- versionSpec: '8.x'\n+ versionSpec: '10.x'\ndisplayName: 'Install Node.js'\n- script: |\n"
    },
    {
        "msg": "ci: update circle.yml to build properly",
        "diff": "diff --git a/circle.yml b/circle.yml @@ -11,12 +11,12 @@ dependencies:\n# Install flake8 for Python linting.\n- sudo pip install flake8\n+ # Install Lerna globally.\n+ - sudo npm install -g lerna@2.10.2\n+\n# Inject npm token into environment.\n- echo \"//registry.npmjs.org/:_authToken=$NPM_TOKEN\" >>~/.npmrc\n- cache_directories:\n- - node_modules\n-\ncompile:\noverride:\n# Build Candela.\n@@ -26,8 +26,8 @@ compile:\n- npm run build:examples\n# Build the unit test and coverage test bundles.\n- - npm run build:test:unit\n- - npm run build:test:coverage\n+ - npm run build:test\n+ - npm run build:coverage\ntest:\noverride:\n@@ -45,19 +45,18 @@ test:\n# Coverage tests.\n- npm run test:coverage\n- - npm run test:coverage:codecov\npost:\n# Gather up the testing images as build artifacts.\n- mkdir $CIRCLE_ARTIFACTS/test_images\n- - find plugins -name '*.png' | xargs -I xxx cp xxx $CIRCLE_ARTIFACTS/test_images\n+ - find packages/examples/test -name '*.png' | xargs -I xxx cp xxx $CIRCLE_ARTIFACTS/test_images\n# Copy the html coverage report to the artifacts directory as well.\n- mkdir $CIRCLE_ARTIFACTS/coverage\n- cp -r build/coverage/html $CIRCLE_ARTIFACTS/coverage\ndeployment:\n- semantic-release:\n+ lerna-publish:\nbranch: master\ncommands:\n- - DEBUG=condition npm run semantic-release\n+ - lerna publish --conventional-commits --yes\n",
        "date": "03.05.2018 16:52:30",
        "repo": "kitware/candela",
        "type": "ci",
        "sim_msg": "ci: fix install cli",
        "sim_diff": "diff --git a/package.json b/package.json \"lerna:rm\": \"npm run lerna:rm:node_modules && npm run lerna:rm:build\",\n\"lerna:rm:build\": \"lerna exec -- rm -rf package-lock.json\",\n\"lerna:rm:node_modules\": \"lerna exec -- rm -rf node_modules\",\n- \"lerna:install\": \"lerna exec --bail --concurrency 5 npm i\",\n+ \"lerna:install\": \"lerna exec --bail --concurrency 5 npm install\",\n\"lerna:update\": \"lerna exec --bail --concurrency 5 npm update\",\n\"lerna:outdated\": \"lerna exec --concurrency 2 npm outdated\",\n\"lerna:audit\": \"lerna exec --concurrency 2 npm audit fix\",\n"
    },
    {
        "msg": "ci: fix ci bug",
        "diff": "diff --git a/package.json b/package.json \"build:theme\": \"node build/bin/gen-cssfile && gulp build --gulpfile packages/theme-chalk/gulpfile.js && cp-cli packages/theme-chalk/lib lib/theme-chalk\",\n\"build:utils\": \"cross-env BABEL_ENV=utils babel src --out-dir lib --ignore src/index.js\",\n\"build:umd\": \"node build/bin/build-locale.js\",\n- \"build:ci\":\"npm run build:file && cross-env NODE_ENV=development webpack-dev-server --config build/webpack.demo.js\",\n+ \"build:ci\":\"npm run build:file && cross-env NODE_ENV=development webpack --config build/webpack.demo.js\",\n\"clean\": \"rimraf lib && rimraf packages/*/lib && rimraf test/**/coverage\",\n\"deploy:build\": \"npm run build:file && cross-env NODE_ENV=production webpack --config build/webpack.demo.js && echo element.eleme.io>>examples/element-ui/CNAME\",\n\"deploy:extension\": \"cross-env NODE_ENV=production webpack --config build/webpack.extension.js\",\n",
        "date": "25.08.2020 10:48:15",
        "repo": "hug-sun/element3",
        "type": "ci",
        "sim_msg": "feat(cover/basic): update scripts following latest sui-studio release.",
        "sim_diff": "diff --git a/components/cover/basic/package.json b/components/cover/basic/package.json \"description\": \"\",\n\"main\": \"lib/index.js\",\n\"scripts\": {\n- \"build\": \"rm -Rf ./lib && mkdir -p ./lib && npm run babel && npm run sass\",\n- \"babel\": \"../../../node_modules/.bin/babel --presets sui ./src --out-dir ./lib\",\n- \"sass\": \"../../../node_modules/.bin/cpx \\\"./src/**/*.scss\\\" ./lib\"\n+ \"build\": \"rm -Rf ./lib && mkdir -p ./lib && npm run build:js && npm run build:styles\",\n+ \"build:js\": \"../../../node_modules/.bin/babel --presets sui ./src --out-dir ./lib\",\n+ \"build:styles\": \"../../../node_modules/.bin/cpx './src/**/*.scss' ./lib\"\n},\n\"dependencies\": {\n\"@schibstedspain/sui-component-dependencies\": \"latest\"\n"
    },
    {
        "msg": "ci: remove caching",
        "diff": "diff --git a/.github/workflows/test.yml b/.github/workflows/test.yml @@ -22,18 +22,6 @@ jobs:\n- name: Install Canvas and XML dependencies\nrun: sudo apt-get install -y libcairo2-dev libpango1.0-dev libxml2-utils\n- - name: Get Yarn cache directory path\n- id: yarn-cache-dir-path\n- run: echo \"::set-output name=dir::$(yarn cache dir)\"\n-\n- - uses: actions/cache@v1\n- id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)\n- with:\n- path: ${{ steps.yarn-cache-dir-path.outputs.dir }}\n- key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}\n- restore-keys: |\n- ${{ runner.os }}-yarn-\n-\n- name: Setup Node ${{ matrix.node }}\nuses: actions/setup-node@v1\nwith:\n",
        "date": "09.10.2020 17:10:28",
        "repo": "vega/vega",
        "type": "ci",
        "sim_msg": "ci(gh-actions): bump node from 12 to 14",
        "sim_diff": "diff --git a/.github/workflows/release.yml b/.github/workflows/release.yml @@ -8,21 +8,10 @@ jobs:\nruns-on: ubuntu-18.04\nsteps:\n- uses: actions/checkout@v2\n- - uses: actions/setup-node@v1\n+ - uses: actions/setup-node@v2\nwith:\n- node-version: '12'\n-\n- - name: Get yarn cache\n- id: yarn-cache\n- run: echo \"::set-output name=dir::$(yarn cache dir)\"\n-\n- - name: Cache dependencies\n- uses: actions/cache@v2\n- with:\n- path: ${{ steps.yarn-cache.outputs.dir }}\n- key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}\n- restore-keys: |\n- ${{ runner.os }}-yarn-\n+ node-version: '14'\n+ cache: 'yarn'\n- name: Install dependencies\nrun: yarn install\n"
    },
    {
        "msg": "ci: storage endpoint in env is never used",
        "diff": "diff --git a/.circleci/config.yml b/.circleci/config.yml @@ -147,7 +147,6 @@ jobs:\nDOCKER_LOGIN: offen\nDOCKER_BUILDKIT: '1'\nDOCKER_CLI_EXPERIMENTAL: enabled\n- MINIO_STORAGE: https://storage.offen.dev\nworking_directory: ~/offen\nsteps:\n- checkout\n",
        "date": "06.01.2023 08:42:17",
        "repo": "offen/offen",
        "type": "ci",
        "sim_msg": "ci: bump node to 12.13.1",
        "sim_diff": "diff --git a/.circleci/config.yml b/.circleci/config.yml @@ -3,7 +3,7 @@ version: 2.1\nexecutors:\ndocker-env:\ndocker:\n- - image: circleci/node:10.16.0-jessie-browsers-legacy\n+ - image: circleci/node:12.13.1-browsers-legacy\n- image: cibuilds/snapcraft:stable\nmacos-env:\nmacos:\n"
    },
    {
        "msg": "ci: more work on github actions",
        "diff": "diff --git a/.github/workflows/release.yml b/.github/workflows/release.yml # This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node\n# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions\n-name: Build & Test Components\n+name: Release\non:\npush:\n",
        "date": "24.12.2020 20:01:05",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "ci",
        "sim_msg": "ci(gh-actions): fix install node",
        "sim_diff": "diff --git a/.github/workflows/release.yml b/.github/workflows/release.yml @@ -13,9 +13,12 @@ jobs:\nwith:\nfetch-depth: 0\n- name: Setup Node.js\n- uses: actions/setup-node@v1\n+ - uses: actions/checkout@v2\n+ - uses: actions/setup-node@v2\nwith:\n- node-version: 12\n+ node-version: '14'\n+ check-latest: true\n+\n- name: Install dependencies\nrun: npm ci\n- name: Test\n"
    },
    {
        "msg": "ci: don't use sudo to install global npm package",
        "diff": "diff --git a/circle.yml b/circle.yml @@ -12,7 +12,7 @@ dependencies:\n- sudo pip install flake8\n# Install Lerna globally.\n- - sudo npm install -g lerna@2.10.2\n+ - npm install -g lerna@2.10.2\n# Inject npm token into environment.\n- echo \"//registry.npmjs.org/:_authToken=$NPM_TOKEN\" >>~/.npmrc\n",
        "date": "03.05.2018 17:10:18",
        "repo": "kitware/candela",
        "type": "ci",
        "sim_msg": "ci(circleci): do not double-install npm",
        "sim_diff": "diff --git a/.circleci/config.yml b/.circleci/config.yml @@ -20,9 +20,6 @@ commands:\n- restore_cache:\nkeys:\n- v1-dependencies-{{ checksum \"package.json\" }}\n- - run:\n- name: install latest npm\n- command: npm -g install npm\n- run:\nname: Installing Dependencies\ncommand: npm ci\n"
    },
    {
        "msg": "ci(release): bootstrap packages",
        "diff": "diff --git a/.github/workflows/release.yml b/.github/workflows/release.yml @@ -28,8 +28,10 @@ jobs:\nnode-version: 12.x\n- name: Install dependencies\n- run: yarn install --frozen-lockfile && yarn bootstrap\n+ run: yarn install\n+ - name: Bootstrap\n+ run: yarn bootstrap\n- name: Linting\nrun: yarn lint\n",
        "date": "31.12.2020 15:59:41",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "ci",
        "sim_msg": "chore: add format GitHub action",
        "sim_diff": "diff --git a/.github/workflows/test.yml b/.github/workflows/test.yml @@ -22,12 +22,6 @@ jobs:\n- name: Install dependencies\nrun: yarn install --frozen-lockfile\n- - name: Check formatting\n- run: yarn format:check\n-\n- - name: Lint\n- run: yarn lint\n-\n- name: Build\nrun: yarn build\n"
    },
    {
        "msg": "ci: use airtap credentials",
        "diff": "diff --git a/.github/workflows/ci.yml b/.github/workflows/ci.yml @@ -6,6 +6,7 @@ jobs:\ntest:\nname: Node ${{ matrix.node }} / ${{ matrix.os }}\nruns-on: ${{ matrix.os }}\n+ environment: ci\nstrategy:\nfail-fast: false\nmatrix:\n@@ -20,4 +21,8 @@ jobs:\nnode-version: ${{ matrix.node }}\n- run: npm install\n- run: npm run build --if-present\n+ - run: echo \"127.0.0.1 airtap.local\" | sudo tee -a /etc/hosts\n- run: npm test\n+ env:\n+ SAUCE_USERNAME: ${{ secrets.SAUCE_USERNAME }}\n+ SAUCE_ACCESS_KEY: ${{ secrets.SAUCE_ACCESS_KEY }}\n",
        "date": "21.04.2021 17:19:35",
        "repo": "feross/simple-peer",
        "type": "ci",
        "sim_msg": "ci: fix module installation",
        "sim_diff": "diff --git a/.github/workflows/ci.yml b/.github/workflows/ci.yml @@ -18,8 +18,6 @@ jobs:\nwith:\nnode-version: ${{ matrix.node-version }}\n- name: Install module\n- run: npm ci\n- - name: Build addon\n- run: npm run build --if-present\n+ run: npm install\n- name: Run tests\nrun: npm test\n"
    },
    {
        "msg": "docs(Dropdown): remove deprecated lifecycle method from DropdownExampleRemote\n* docs(Dropdown): Remove deprecated lifecycle method.\nCommit includes automatic formatting changes by lint.\n* Update DropdownExampleRemote.js\n* Update DropdownExampleRemote.js",
        "diff": "diff --git a/docs/src/examples/modules/Dropdown/Usage/DropdownExampleRemote.js b/docs/src/examples/modules/Dropdown/Usage/DropdownExampleRemote.js @@ -10,15 +10,13 @@ const getOptions = () =>\n})\nclass DropdownExampleRemote extends Component {\n- componentWillMount() {\n- this.setState({\n+ state = {\nisFetching: false,\nmultiple: true,\nsearch: true,\nsearchQuery: null,\nvalue: [],\noptions: getOptions(),\n- })\n}\nhandleChange = (e, { value }) => this.setState({ value })\n@@ -39,7 +37,7 @@ class DropdownExampleRemote extends Component {\nthis.setState({ value: multiple ? [value] : value })\n}\n- toggleSearch = e => this.setState({ search: e.target.checked })\n+ toggleSearch = (e) => this.setState({ search: e.target.checked })\ntoggleMultiple = (e) => {\nconst { value } = this.state\n@@ -61,10 +59,20 @@ class DropdownExampleRemote extends Component {\nRandom\n</Button>\n<label>\n- <input type='checkbox' checked={search} onChange={this.toggleSearch} /> Search\n+ <input\n+ type='checkbox'\n+ checked={search}\n+ onChange={this.toggleSearch}\n+ />{' '}\n+ Search\n</label>{' '}\n<label>\n- <input type='checkbox' checked={multiple} onChange={this.toggleMultiple} /> Multiple\n+ <input\n+ type='checkbox'\n+ checked={multiple}\n+ onChange={this.toggleMultiple}\n+ />{' '}\n+ Multiple\n</label>\n</p>\n<Dropdown\n",
        "date": "21.03.2019 08:23:44",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "refactor(doc): adjusting propTypes on Dropdown doc component",
        "sim_diff": "diff --git a/packages/doc/src/components/Dropdown/Dropdown.jsx b/packages/doc/src/components/Dropdown/Dropdown.jsx @@ -82,7 +82,7 @@ const Dropdown = ({ label, value, options, onSelect }) => {\n<Wrapper>\n<Selector onClick={() => toggleOptions()}>\n<Label>{label}</Label>\n- <span>{value}</span>\n+ <Label>{value}</Label>\n<ArrowDropdown open={isOpen} />\n</Selector>\n{isOpen && (\n@@ -100,14 +100,13 @@ const Dropdown = ({ label, value, options, onSelect }) => {\n};\nDropdown.propTypes = {\n+ label: PropTypes.string.isRequired,\nvalue: PropTypes.string.isRequired,\noptions: PropTypes.arrayOf(PropTypes.any).isRequired,\nonSelect: PropTypes.func,\n};\nDropdown.defaultProps = {\n- value: '',\n- options: [],\nonSelect: () => {},\n};\n"
    },
    {
        "msg": "docs: Adding preact/compat note to the README",
        "diff": "diff --git a/README.md b/README.md @@ -95,6 +95,17 @@ render(<App />, document.body);\n}\n```\n+`preact/compat` is our compatibility layer that allows you to leverage the many libraries of the React ecosystem and use them with Preact. If this is something you'd like to use with WMR you can add an `alias` section as well to your `package.json`:\n+\n+```json\n+{\n+ \"alias\": {\n+ \"react\": \"preact/compat\",\n+ \"react-dom\": \"preact/compat\"\n+ }\n+}\n+```\n+\n**5.** You're all set! As an extra step, if you'd like WMR to prerender your application to static HTML during production builds, replace `render()` with [preact-iso](https://www.npmjs.com/package/preact-iso):\n```diff\n",
        "date": "22.12.2020 02:21:18",
        "repo": "preactjs/wmr",
        "type": "docs",
        "sim_msg": "test(html-to-react): add test for option library\nAlthough we have a test in dom-to-react, adding one here helps\nwith completeness.",
        "sim_diff": "diff --git a/test/html-to-react.js b/test/html-to-react.js @@ -127,5 +127,15 @@ describe('HTML to React', () => {\n);\n});\n});\n+\n+ describe('library', () => {\n+ it('converts with Preact instead of React', () => {\n+ const Preact = require('preact');\n+ const html = data.html.single;\n+ const options = { library: Preact };\n+ const preactElement = parse(html, options);\n+ assert.deepEqual(preactElement, Preact.createElement('p', {}, 'foo'));\n+ });\n+ });\n});\n});\n"
    },
    {
        "msg": "docs(ButtonsPage): add missing semicolon",
        "diff": "diff --git a/docs/lib/Components/ButtonsPage.js b/docs/lib/Components/ButtonsPage.js @@ -7,7 +7,7 @@ import ButtonExample from '../examples/Button';\nconst ButtonExampleSource = require('!!raw!../examples/Button');\nimport ButtonOutline from '../examples/ButtonOutline';\n-const ButtonOutlineSource = require('!!raw!../examples/ButtonOutline')\n+const ButtonOutlineSource = require('!!raw!../examples/ButtonOutline');\nimport ButtonStateful from '../examples/ButtonStateful';\nconst ButtonStatefulSource = require('!!raw!../examples/ButtonStateful');\n",
        "date": "14.03.2017 16:39:03",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "sim_msg": "refactor(button/basic): remove unneded check for size as is default prop",
        "sim_diff": "diff --git a/components/button/basic/src/index.js b/components/button/basic/src/index.js @@ -12,10 +12,10 @@ function ButtonBasic ({\n}) {\nconst className = cx(\n'sui-ButtonBasic',\n+ `sui-ButtonBasic--${size}`,\n`sui-ButtonBasic--${type}`,\n{\n- [`sui-ButtonBasic--${layout}`]: layout,\n- [`sui-ButtonBasic--${size}`]: size\n+ [`sui-ButtonBasic--${layout}`]: layout\n}\n)\n"
    },
    {
        "msg": "docs(Modal): added verbiage on size prop",
        "diff": "diff --git a/docs/lib/Components/ModalsPage.js b/docs/lib/Components/ModalsPage.js @@ -54,6 +54,7 @@ export default class ModalsPage extends React.Component {\nautoFocus: PropTypes.bool,\n// if modal should be centered vertically in viewport\ncentered: PropTypes.bool,\n+ // corresponds to bootstrap's modal sizes, ie. 'lg' or 'sm'\nsize: PropTypes.string,\n// callback for toggling isOpen in the controlling component\ntoggle: PropTypes.func,\n",
        "date": "13.04.2018 10:37:03",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "sim_msg": "fix(modal): modal stacking position fix (Closes",
        "sim_diff": "diff --git a/src/components/modal/modal.js b/src/components/modal/modal.js @@ -342,7 +342,7 @@ export default {\nmodalOuterStyle() {\nreturn {\n// We only set these styles on the stacked modals (ones with next z-index > 0).\n- position: 'relative',\n+ position: 'absolute',\nzIndex: this.zIndex\n}\n}\n"
    },
    {
        "msg": "docs: add gridsome example",
        "diff": "diff --git a/README.md b/README.md @@ -150,6 +150,7 @@ If you'd like to toggle your app between dark and light mode, you can also wrap\n- [Vue Starter](https://codesandbox.io/s/chakra-ui-vue-starter-2sy0g)\n- [Nuxt Starter](https://codesandbox.io/s/chakra-ui-nuxt-demo-f8tq4)\n+- [Gridsome Starter](https://codesandbox.io/s/chakra-ui-gridsome-demo-038c9)\n### Storybook Components\n",
        "date": "02.04.2020 21:15:41",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "sim_msg": "feat(Dark): Allow toggle() method to be attached directly as an event handler",
        "sim_diff": "diff --git a/ui/src/plugins/Dark.js b/ui/src/plugins/Dark.js @@ -2,7 +2,7 @@ import Vue from 'vue'\nimport { isSSR, fromSSR } from './Platform.js'\n-export default {\n+const Dark = {\nisActive: false,\nmode: false,\n@@ -80,7 +80,7 @@ export default {\n},\ntoggle () {\n- this.set(this.isActive === false)\n+ Dark.set(Dark.isActive === false)\n},\n__media: void 0,\n@@ -89,3 +89,5 @@ export default {\nthis.set(this.__media.matches)\n}\n}\n+\n+export default Dark\n"
    },
    {
        "msg": "docs: readme: update",
        "diff": "diff --git a/docs/putout-script.md b/docs/putout-script.md @@ -28,17 +28,17 @@ const when = () => {\n};\n```\n-## `__` template value\n+## `__`\nThe double low dush template value (`__`) abstracts away `Identifiers`, `Expressions` and `Literals`.\n## `__a`\n-**Linked template value** (`__a`) abstracts away `Identifiers`, `Expressions` and `Literals`.\n+**Linked Value** (`__a`) abstracts away `Identifiers`, `Expressions` and `Literals`.\n-## `__args` template value\n+## `__args`\n-The `__args` template value abstracts away a sequence of zero or more arguments, for `(__args) => __a`:\n+The `__args` value abstracts away a sequence of zero or more arguments, for `(__args) => __a`:\n```js\n(a, b, c) => a + b + c;\n",
        "date": "14.09.2022 17:26:29",
        "repo": "coderaiser/putout",
        "type": "docs",
        "sim_msg": "docs: remove logs",
        "sim_diff": "diff --git a/scripts/docs.js b/scripts/docs.js @@ -43,7 +43,6 @@ const config = {\n},\nGENERATE_COMMANDS_LIST(content, options, instance) {\nconst context = path.basename(instance.originalPath, '.md')\n- console.log('context', context)\n/* Generate Command List */\nlet md = ''\nObject.keys(commandData).map(commandName => {\n@@ -74,7 +73,7 @@ function commandExamples(examples) {\nlet exampleRender = `**Examples**${newLine}`\nexampleRender += '```bash\\n'\nexamples.forEach(ex => {\n- console.log('ex', ex)\n+ // console.log('ex', ex)\nexampleRender += `${ex}\\n`\n})\nexampleRender += `\\`\\`\\`${newLine}`\n@@ -83,7 +82,7 @@ function commandExamples(examples) {\n/* Start - Docs Templating logic */\nfunction commandListTitle(command, context) {\n- const url = context === 'README' ? `/docs/commands/${command}.md` : `/commands/${command}`\n+ const url = `/docs/commands/${command}.md`\n// const url = (context === 'README') ? `/docs/${command}.md` : `/${command}`\nreturn `### [${command}](${url})${newLine}`\n}\n@@ -101,7 +100,7 @@ function commandListSubCommandDisplay(commands, context) {\ntable += '|:--------------------------- |:-----|\\n'\ncommands.forEach(cmd => {\nconst commandBase = cmd.name.split(':')[0]\n- const baseUrl = context === 'README' ? `/docs/commands/${commandBase}.md` : `/commands/${commandBase}`\n+ const baseUrl = `/docs/commands/${commandBase}.md`\n// const baseUrl = (context === 'README') ? `/docs/${commandBase}.md` : `/${commandBase}`\nconst slug = cmd.name.replace(/:/g, '')\ntable += `| [\\`${cmd.name}\\`](${baseUrl}#${slug}) | ${cmd.description.split('\\n')[0]} |\\n`\n@@ -112,7 +111,7 @@ function formatUsage(commandName, info) {\nconst defaultUsage = `netlify ${commandName}`\nif (commandName === 'sites:delete') {\n- console.log(info)\n+ // console.log(info)\n}\nconst usageString = info.usage || defaultUsage\n"
    },
    {
        "msg": "docs: typo\n[skip ci]",
        "diff": "diff --git a/README.md b/README.md @@ -336,7 +336,7 @@ Support this project by becoming a sponsor. Your logo will show up here with a l\n[<img src=\"https://nodemon.io/sparkpost.svg\" width=\"200\">](https://sparkpo.st/nodemon)\n-[<img src=\"https://nodemon.io/minmax.png\" width=\"200\">](https://https://mixmax.com)\n+[<img src=\"https://nodemon.io/mixmax.png\" width=\"200\">](https://https://mixmax.com)\n# License\n",
        "date": "02.02.2018 11:36:39",
        "repo": "remy/nodemon",
        "type": "docs",
        "sim_msg": "docs: update index.pug",
        "sim_diff": "diff --git a/index.pug b/index.pug @@ -173,7 +173,7 @@ html(lang='en')\n<img class=\"sponsor\" src=\"https://uploads-ssl.webflow.com/618b15b23212e0b2b4f8f67b/618b189f1d441fd9e0f6c5f3_logo-black-text.png\" style=\"height: 100px\">\n</a>\n<a rel=\"sponsored\" href=\"https://helloclub.com/?source=Mongoose\">\n- <img class=\"sponsor\" src=\"https://helloclub.com/images/logo/logo-text-white.svg\" style=\"height:100px\">\n+ <img class=\"sponsor\" src=\"https://codebarbarian-images.s3.amazonaws.com/logo-text-default.svg\" style=\"height:100px\">\n</a>\n</div>\n</div>\n"
    },
    {
        "msg": "docs(aspectratiobox): added docs",
        "diff": "diff --git a/packages/chakra-ui-docs/docs/alertdialog.mdx b/packages/chakra-ui-docs/docs/alertdialog.mdx @@ -120,9 +120,9 @@ export default {\n## Props\n-AlertDialog and it's components composes the `Modal` component, the only\n+AlertDialog and it's components composes the `CModal` component, the only\nexception is that it requires a `leastDestructiveRef` which is similar to the\n-`initialFocusRef` in `Modal`\n+`initialFocusRef` in `CModal`\n| Name | Type | Default | Description |\n| ------------------------------ | --------------------------------- | ------- | ------------------------------------------------------------- |\n",
        "date": "05.04.2020 10:30:11",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "sim_msg": "docs(dialog): add new examples",
        "sim_diff": "diff --git a/packages/doc/content/components/components/dialog/index.mdx b/packages/doc/content/components/components/dialog/index.mdx @@ -8,9 +8,13 @@ metaDescription: 'Dialog Component'\n### Reference\n-Gympass `<Dialog />` is the proper component to show alert messages.\n+Gympass `<Dialog />` is a component has the objective o provide priority feedback for the user\n-The `Dialog` may have an icon, a custom action and a close button.\n+As it could be seen in most components, the Dialog has its own compounds:\n+\n+- `<Dialog.Header />`\n+- `<Dialog.Content />`\n+- `<Dialog.Actions />`\n### Usage\n@@ -30,11 +34,10 @@ render(() => {\nreturn (\n<>\n- <Button onClick={handleOpen} secondary>Dialog with one action</Button>\n+ <Button onClick={handleOpen}>Dialog with one action</Button>\n<Dialog\nisOpen={isOpen}\n- onClose={handleOnClose}\n>\n<Dialog.Header>\n<Text.H4 ta=\"center\"> Title </Text.H4>\n@@ -67,11 +70,10 @@ render(() => {\nreturn (\n<>\n- <Button onClick={handleOpen}>Dialog with two actions </Button>\n+ <Button onClick={handleOpen} secondary>Dialog with two actions </Button>\n<Dialog\nisOpen={isOpen}\n- onClose={handleOnClose}\n>\n<Dialog.Header>\n<Text.H4 ta=\"center\"> Title </Text.H4>\n@@ -84,7 +86,7 @@ render(() => {\n<Button.Text onClick={handleOnClose}>Cancel</Button.Text>\n</Box>\n<Box>\n- <Button onClick={handleOnClose}>Yes, downgrade</Button>\n+ <Button>Yes, downgrade</Button>\n</Box>\n</Dialog.Actions>\n</Dialog>\n@@ -135,8 +137,44 @@ render(() => {\n});\n```\n+### Dialog with only title\n+\n+```javascript state\n+render(() => {\n+ const [isOpen, setIsOpen] = useState(false);\n+\n+ const handleOpen = () => {\n+ setIsOpen(true);\n+ };\n+\n+ const handleOnClose = () => {\n+ setIsOpen(false);\n+ };\n+\n+ return (\n+ <>\n+ <Button onClick={handleOpen} secondary>Dialog with only title </Button>\n+\n+ <Dialog\n+ isOpen={isOpen}\n+ >\n+ <Dialog.Header>\n+ <Text.H4 ta=\"center\" mb={32}> Title </Text.H4>\n+ </Dialog.Header>\n+ <Dialog.Actions>\n+ <Box mr={24}>\n+ <Button.Text onClick={handleOnClose}>Cancel</Button.Text>\n+ </Box>\n+ <Box>\n+ <Button onClick={handleOnClose}>Yes, downgrade</Button>\n+ </Box>\n+ </Dialog.Actions>\n+ </Dialog>\n+ </>\n+ );\n+});\n+```\n+\n### Props\n<PropsTable component=\"Dialog\" platform=\"web\" />\n-<PropsTable component=\"Dialog.Title\" platform=\"web\" />\n-<PropsTable component=\"Card\" platform=\"web\" />\n"
    },
    {
        "msg": "docs(TextArea): fix verbiage in TextArea docs\nChange the phrase  \"don't support more\" to \"don't support anymore\" in the TextArea docs source, for proper English grammar",
        "diff": "diff --git a/docs/src/examples/addons/TextArea/Usage/index.js b/docs/src/examples/addons/TextArea/Usage/index.js @@ -9,7 +9,7 @@ const TextAreaUsageExamples = () => (\n<Segment>\n<Message warning>\n<Message.Header>Auto height</Message.Header>\n- We don't support `autoHeight` more. If you need this feature you can use{' '}\n+ We don't support `autoHeight` anymore. If you need this feature you can use{' '}\n<a\nhref='https://www.npmjs.com/package/react-textarea-autosize'\nrel='noopener noreferrer'\n",
        "date": "16.01.2022 04:24:59",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "feat(Textarea): add css prop",
        "sim_diff": "diff --git a/components/system/components/Textarea.js b/components/system/components/Textarea.js @@ -45,17 +45,7 @@ const STYLES_TEXTAREA = css`\nexport class Textarea extends React.Component {\nrender() {\n- return (\n- <TextareaAutoSize\n- css={STYLES_TEXTAREA}\n- style={this.props.style}\n- onChange={this.props.onChange}\n- placeholder={this.props.placeholder}\n- name={this.props.name}\n- value={this.props.value}\n- readOnly={this.props.readOnly}\n- maxLength={this.props.maxLength}\n- />\n- );\n+ const { css, ...props } = this.props;\n+ return <TextareaAutoSize css={[STYLES_TEXTAREA, css]} {...props} />;\n}\n}\n"
    },
    {
        "msg": "docs: fix url in with-typescript-plugin readme",
        "diff": "diff --git a/packages/razzle-plugin-typescript/README.md b/packages/razzle-plugin-typescript/README.md @@ -4,7 +4,7 @@ This package contains a plugin for using TypeScript with Razzle\nRazzle now has support for typescript using babel. Unless you specifically need this plugin we recommend using the builtin support\n-Use [with-typescript example](https://github.com/jaredpalmer/razzle/tree/next/examples/with-typescript) instead.\n+Use [with-typescript example](https://github.com/jaredpalmer/razzle/tree/master/examples/with-typescript) instead.\n## Usage in Razzle Projects\n@@ -22,7 +22,7 @@ module.exports = {\n};\n```\n-See full configuration in the [typescript example project](https://github.com/jaredpalmer/razzle/tree/master/examples/with-typescript).\n+See full configuration in the [typescript example project](https://github.com/jaredpalmer/razzle/tree/master/examples/with-typescript-plugin).\n### With custom options:\n",
        "date": "18.03.2021 22:01:38",
        "repo": "jaredpalmer/razzle",
        "type": "docs",
        "sim_msg": "fix(eslintrc): remove createDefaultProgram",
        "sim_diff": "diff --git a/.eslintrc.js b/.eslintrc.js module.exports = {\n- ignorePatterns: ['bin'],\n+ ignorePatterns: ['bin', 'commitlint.config.js'],\nextends: [\n'plugin:@typescript-eslint/recommended',\n'prettier',\n@@ -8,10 +8,8 @@ module.exports = {\n],\nparser: '@typescript-eslint/parser',\nparserOptions: {\n- project: './tsconfig.json',\n+ project: ['./tsconfig.json', './test/tsconfig.json', './src/db/tsconfig.json'],\ntsconfigRootDir: './',\n- // TODO: we need this because of an issue with @typescript-eslint/parser: https://github.com/typescript-eslint/typescript-eslint/issues/864\n- createDefaultProgram: true,\n},\nplugins: ['@typescript-eslint', 'prettier'],\nrules: {\n"
    },
    {
        "msg": "docs: update vuepress docs with codesandbox starter",
        "diff": "diff --git a/website/pages/with-vuepress.mdx b/website/pages/with-vuepress.mdx @@ -74,7 +74,7 @@ export default ({\n}\n}\n})\n-})\n+}\n```\nNow you can wrap your main application inside the Chakra `CThemeProvider` component by creating a layout wrapper in `theme/layouts/Layout.vue`.\n@@ -105,7 +105,11 @@ export default {\n## Using Chakra components\n-_In your `App.vue` file._\n+You can now use Chakra in your custom components for your theme in either your `theme/components` folder (available to other theme components),\n+or your `theme/global-components` folder (available to your markdown pages as well as other components).\n+Learn more about theme inheritance in the [Vuepress documentation](https://vuepress.vuejs.org/theme/inheritance.html#inheritance-strategy)\n+\n+_In your `my-component.vue` file._\n```vue\n<template>\n@@ -120,7 +124,7 @@ _In your `App.vue` file._\nimport { CBox, CButton } from '@chakra-ui/vue'\nexport default {\n- name: 'App',\n+ name: 'MyComponent',\ncomponents: {\nCBox,\nCButton\n@@ -128,3 +132,13 @@ export default {\n}\n</script>\n```\n+\n+### Vuepress Codesandbox Starters\n+\n+Here's a link to sample component starter with Nuxt.js\n+\n+- [Vuepress Starter](https://codesandbox.io/s/chakra-ui-vuepress-starter-qx4up)\n+\n+### Storybook Components\n+\n+You can also view all developed components in [Storybook](https://chakra-ui-vue.netlify.com)!\n",
        "date": "16.03.2021 11:45:13",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "sim_msg": "docs: update description of config.theme",
        "sim_diff": "diff --git a/packages/docs/docs/config/README.md b/packages/docs/docs/config/README.md @@ -159,7 +159,11 @@ VuePress provides a convenient way to add extra styles. you can create an `.vuep\n- Type: `string`\n- Default: `undefined`\n-Specify this to use a custom theme. With the value of `\"foo\"`, VuePress will attempt to load the theme component at `node_modules/vuepress-theme-foo/Layout.vue`.\n+Specify this to use a custom theme.\n+\n+**Also see:**\n+\n+- [Using a theme](../theme/README.md#using-a-theme).\n### themeConfig\n"
    },
    {
        "msg": "docs(docsearch): added docsearch to docs",
        "diff": "diff --git a/docs/content/settings.json b/docs/content/settings.json \"dark\": \"/logo-dark.svg\"\n},\n\"github\": \"nuxt-community/firebase-module\",\n- \"twitter\": \"nuxt_js\"\n+ \"twitter\": \"nuxt_js\",\n+ \"algolia\": {\n+ \"apiKey\": \"26073a7590724b3efc377b3b7608f3e0\",\n+ \"indexName\": \"nuxtjs_firebase\",\n+ \"langAttribute\": \"lang\"\n+}\n}\n",
        "date": "15.10.2020 22:00:37",
        "repo": "nuxt-community/firebase-module",
        "type": "docs",
        "sim_msg": "chore: prepare for contributions",
        "sim_diff": "diff --git a/packages/nuxt-module/package.json b/packages/nuxt-module/package.json \"description\": \"Storefront UI Module for Nuxt.js\",\n\"repository\": \"\",\n\"private\": true,\n+ \"author\": \"Jakub Andrzejewski\",\n\"license\": \"MIT\",\n\"contributors\": [\n{\n"
    },
    {
        "msg": "docs(Document): use only https sources",
        "diff": "diff --git a/docs/src/components/Document.js b/docs/src/components/Document.js @@ -13,42 +13,49 @@ const Document = ({ Body, children, Head, Html, siteData: { dev, versions } }) =\n<link rel='stylesheet' href='/style.css' />\n<link\nrel='stylesheet'\n- href={`//cdnjs.cloudflare.com/ajax/libs/semantic-ui/${versions.sui}/semantic.min.css`}\n+ href={`https://cdnjs.cloudflare.com/ajax/libs/semantic-ui/${versions.sui}/semantic.min.css`}\n/>\n- <script src={`//cdnjs.cloudflare.com/ajax/libs/anchor-js/${versions.anchor}/anchor.min.js`} />\n<script\n- src={`//cdn.jsdelivr.net/npm/@babel/standalone@${versions.babel.standalone}/babel.min.js`}\n+ src={`https://cdnjs.cloudflare.com/ajax/libs/anchor-js/${versions.anchor}/anchor.min.js`}\n/>\n<script\n- src={`//cdn.jsdelivr.net/npm/@babel/preset-env-standalone@${\n+ src={`https://cdn.jsdelivr.net/npm/@babel/standalone@${\n+ versions.babel.standalone\n+ }/babel.min.js`}\n+ />\n+ <script\n+ src={`https://cdn.jsdelivr.net/npm/@babel/preset-env-standalone@${\nversions.babel.standalone\n}/babel-preset-env.min.js`}\n/>\n- <script src={`//cdn.jsdelivr.net/faker.js/${versions.faker}/faker.min.js`} />\n+ <script src={`https://cdn.jsdelivr.net/faker.js/${versions.faker}/faker.min.js`} />\n- <script crossOrigin='true' src={`//unpkg.com/prettier@${versions.prettier}/standalone.js`} />\n<script\ncrossOrigin='true'\n- src={`//unpkg.com/prettier@${versions.prettier}/parser-babylon.js`}\n+ src={`https://unpkg.com/prettier@${versions.prettier}/standalone.js`}\n+ />\n+ <script\n+ crossOrigin='true'\n+ src={`https://unpkg.com/prettier@${versions.prettier}/parser-babylon.js`}\n/>\n<script\n- src={`//cdnjs.cloudflare.com/ajax/libs/prop-types/${versions.propTypes}/prop-types${\n+ src={`https://cdnjs.cloudflare.com/ajax/libs/prop-types/${versions.propTypes}/prop-types${\nsiteData.dev ? '' : '.min'\n}.js`}\n/>\n<script\n- src={`//cdnjs.cloudflare.com/ajax/libs/react/${versions.react}/umd/react${\n+ src={`https://cdnjs.cloudflare.com/ajax/libs/react/${versions.react}/umd/react${\ndev ? '.development' : '.production.min'\n}.js`}\n/>\n<script\n- src={`//cdnjs.cloudflare.com/ajax/libs/react-dom/${versions.react}/umd/react-dom${\n+ src={`https://cdnjs.cloudflare.com/ajax/libs/react-dom/${versions.react}/umd/react-dom${\ndev ? '.development' : '.production.min'\n}.js`}\n/>\n<script\n- src={`//cdnjs.cloudflare.com/ajax/libs/react-dom/${\n+ src={`https://cdnjs.cloudflare.com/ajax/libs/react-dom/${\nversions.react\n}/umd/react-dom-server.browser${dev ? '.development' : '.production.min'}.js`}\n/>\n",
        "date": "29.09.2018 13:13:49",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "docs(links): Document links CSS in Styleguidist format",
        "sim_diff": "diff --git a/config/styleguide.config.js b/config/styleguide.config.js @@ -22,12 +22,16 @@ module.exports = {\n{\nname: 'Buttons',\ncontent: '../docs-new/elements/buttons.md'\n+ },\n+ {\n+ name: 'Links',\n+ content: '../docs-new/elements/links.md'\n}\n]\n},\n{\nname: 'Components',\n- components: '../src/components/**/*.jsx',\n+ components: '../src/components/**/*.jsx'\n}\n],\n@@ -54,5 +58,10 @@ module.exports = {\n}\n]\n}\n+ },\n+ theme: {\n+ fontFamily: {\n+ base: ['TELUS-Web', 'Helvetica Neue', 'Helvetica', 'Arial', 'sans-serif']\n+ }\n}\n};\n"
    },
    {
        "msg": "docs: added requirements to README",
        "diff": "diff --git a/README.md b/README.md ## Quick Setup\n+Make sure you have the newest versions of Nuxt and Firebase installed and setup in your project.\n+\n+```bash\n+yarn add nuxt # OR npm i nuxt\n+yarn add firebase # OR npm i firebase\n+```\n+\nInstall the module via NPM or Yarn:\n```bash\n",
        "date": "07.03.2020 18:22:08",
        "repo": "nuxt-community/firebase-module",
        "type": "docs",
        "sim_msg": "docs(develop.install): add note about nvm configuration",
        "sim_diff": "diff --git a/DEVELOP.md b/DEVELOP.md @@ -4,6 +4,8 @@ If you've made it this far, **thank you**! We appreciate your contribution, and\n## Install\n+If you have [`nvm`](https://github.com/nvm-sh/nvm) installed you can run `nvm use` at the root of the project to get the Node.js LTS version.\n+\nRun `yarn install` to install the npm dependencies.\n## Scripts\n"
    },
    {
        "msg": "docs: document externals and css imports",
        "diff": "diff --git a/website/pages/getting-started.mdx b/website/pages/getting-started.mdx @@ -103,7 +103,7 @@ yarn add --dev webpack@4.46.0 html-webpack-plugin@4.5.2\nAlso if there are issues, try adding specific package versions to resolutions in `package.json`.\n-## Common problems\n+## Common issues\nIf you have issues with css this might be related to postcss being resolved wrong.\n@@ -115,6 +115,42 @@ To fix this add:\n}\n```\n+If you get a error like this:\n+\n+```\n+node_modules/react-images-upload/index.css:1\n+.fileUploader {\n+^\n+\n+SyntaxError: Unexpected token '.'\n+ at wrapSafe (internal/modules/cjs/loader.js:1072:16)\n+```\n+\n+It means node tries to use `index.css` as a node module.\n+\n+To fix this make sure the module with the css is not externalized.\n+\n+```js\n+// razzle.config.js\n+'use strict';\n+\n+module.exports = {\n+ modifyWebpackOptions({\n+ options: {\n+ webpackOptions, // the modified options that was used to configure webpack/ webpack loaders and plugins\n+ }\n+ }) {\n+\n+ // If you use experimental.newExternals\n+ webpackOptions.notNodeExternalResMatch = (request, context) => {\n+ return /react-images-upload/.test(request)\n+ };\n+\n+ return webpackOptions;\n+ },\n+};\n+```\n+\nTo resolutions in your package.json. For npm see [here](https://stackoverflow.com/questions/52416312/npm-equivalent-of-yarn-resolutions).\n## Debugging with Inspector\n",
        "date": "13.03.2021 15:17:49",
        "repo": "jaredpalmer/razzle",
        "type": "docs",
        "sim_msg": "feat(webpack): add source map to transpile",
        "sim_diff": "diff --git a/scripts/webpack/webpack.transpile.babel.js b/scripts/webpack/webpack.transpile.babel.js @@ -10,6 +10,7 @@ const libraryName = pkg.name;\nmodule.exports = (env) => {\nconsole.info('webpacking for transpile');\nreturn {\n+ devtool: 'source-map',\nentry: './src/index.js',\noutput: {\npath: path.resolve(process.cwd(), 'es'),\n@@ -155,8 +156,6 @@ module.exports = (env) => {\n},\nresolve: {\nalias: {\n- react: path.resolve(__dirname, './node_modules/react'),\n- 'react-dom': path.resolve(__dirname, './node_modules/react-dom'),\nassets: path.resolve(__dirname, 'assets'),\nnode_modules: path.resolve(__dirname, '..', '..', 'node_modules')\n},\n"
    },
    {
        "msg": "docs: link to razzle 3 docs",
        "diff": "diff --git a/website/pages/index.mdx b/website/pages/index.mdx @@ -16,6 +16,10 @@ JavaScript applications are tough to setup. Either you buy into a framework, for\n- [Jest](https://github.com/facebook/jest) test runner setup with sensible defaults via `razzle test`\n- SPA mode, build client side apps with razzle\n+## Not ready for Razzle 4.0?\n+\n+[Razzle 3 docs](https://razzle-git-three-jared.vercel.app/)\n+\n## Getting help\nIf you get stuck, check out Razzle's [GitHub Discussions](https://github.com/jaredpalmer/razzle/discussions). In addition, #razzle-afterjs on [Formium Community Discord Server](https://discord.gg/pJSg287) is a great way to get help quickly too.\n",
        "date": "24.03.2021 23:46:50",
        "repo": "jaredpalmer/razzle",
        "type": "docs",
        "sim_msg": "docs(readme): fix links to guide",
        "sim_diff": "diff --git a/README.md b/README.md @@ -12,11 +12,11 @@ This guide is aimed at users who are either unfamiliar or inexperienced with Nod\nThere are many different subjects covered, such as:\n-- How to get a bot [up and running](https://discordjs.guide/#/preparations/) from scratch;\n-- How to properly [create](https://discordjs.guide/#/creating-your-bot/), [organize](https://discordjs.guide/#/command-handling/), and [expand](https://discordjs.guide/#/command-handling/adding-features) on your commands;\n-- In-depth explanations and examples regarding popular topics (e.g. [reactions](https://discordjs.guide/#/popular-topics/reactions), [embeds](https://discordjs.guide/#/popular-topics/embeds), [canvas](https://discordjs.guide/#/popular-topics/canvas));\n-- Working with databases (e.g. [sequelize](https://discordjs.guide/#/sequelize/) and [keyv](https://discordjs.guide/#/keyv/));\n-- Getting started with [sharding](https://discordjs.guide/#/sharding/);\n+- How to get a bot [up and running](https://discordjs.guide/preparations/) from scratch;\n+- How to properly [create](https://discordjs.guide/creating-your-bot/), [organize](https://discordjs.guide/command-handling/), and [expand](https://discordjs.guide/command-handling/adding-features) on your commands;\n+- In-depth explanations and examples regarding popular topics (e.g. [reactions](https://discordjs.guide/popular-topics/reactions), [embeds](https://discordjs.guide/popular-topics/embeds), [canvas](https://discordjs.guide/popular-topics/canvas));\n+- Working with databases (e.g. [sequelize](https://discordjs.guide/sequelize/) and [keyv](https://discordjs.guide/keyv/));\n+- Getting started with [sharding](https://discordjs.guide/sharding/);\n- And much more.\n## Contributing\n"
    },
    {
        "msg": "docs(IconExampleIconGroup): fix circle outline",
        "diff": "diff --git a/docs/src/examples/elements/Icon/Groups/IconExampleIconGroup.js b/docs/src/examples/elements/Icon/Groups/IconExampleIconGroup.js @@ -3,7 +3,7 @@ import { Icon } from 'semantic-ui-react'\nconst IconExampleIconGroup = () => (\n<Icon.Group size='huge'>\n- <Icon size='big' name='thin circle' />\n+ <Icon size='big' name='circle outline' />\n<Icon name='user' />\n</Icon.Group>\n)\n",
        "date": "20.07.2018 07:22:30",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "refactor(icon): add descriptions to type definitions",
        "sim_diff": "diff --git a/src/components/icon/icon.d.ts b/src/components/icon/icon.d.ts import * as React from 'react';\nexport interface IconProps {\n- className?: string;\n+ /** Icon type */\ntype: string;\n+ /** Background size */\nbgSize?: 'small' | 'medium' | 'large';\n+ /** Background shape */\nbgShape?: 'circle' | 'rounded-rect' | 'square';\n+ /** Background color theme */\nbgTheme?: 'info' | 'error' | 'success' | 'warning' | 'business' | 'none';\n+ /** Icon font size */\nfontSize?: 'small' | 'large';\n+ /** Icon color */\niconColor?: 'default' | 'on-light-background' | 'on-dark-background' | 'business-color';\n+ /** Override iconColor, provide any color from palette or any valid css color value. */\ncolor?: string;\n+ /** Override bgTheme, provide any color from palette or any valid css color value. */\nbg?: string;\n+ /** Sets the icon in the disabled state */\ndisabled?: boolean;\n+ /** Margin right, given number will be multiplied by base spacing unit (8) */\nmr?: number;\n+ /** Margin left, given number will be multiplied by base spacing unit (8) */\nml?: number;\n+ /** Aria label for accessibility purposes */\nariaLabel?: string;\n+ /** The message string to be displayed in the tooltip */\ntooltipMessage?: string;\n+ /** The position to display the tooltip */\ntooltipPosition?: \"top\" | \"bottom\" | \"left\" | \"right\";\n+ /** Control whether the tooltip is visible */\ntooltipVisible?: boolean;\n+ /** Override background color of the Tooltip, provide any color from palette or any valid css color value. */\ntooltipBgColor?: string;\n+ /** Override font color of the Tooltip, provide any color from palette or any valid css color value. */\ntooltipFontColor?: string;\n}\n"
    },
    {
        "msg": "docs(install): Use the minified version of Bootstrap CSS\ndocs(install): Use the minified version of Bootstrap CSS",
        "diff": "diff --git a/docs/lib/Home/index.js b/docs/lib/Home/index.js @@ -72,7 +72,7 @@ npm install --save reactstrap@next react react-dom`}\n</pre>\n<p>Import Bootstrap CSS in the <code>src/index.js</code> file:</p>\n<pre>\n- <PrismCode className=\"language-bash\">import 'bootstrap/dist/css/bootstrap.css';</PrismCode>\n+ <PrismCode className=\"language-bash\">import 'bootstrap/dist/css/bootstrap.min.css';</PrismCode>\n</pre>\n<p>Import required reactstrap components within <code>src/App.js</code> file or your custom component files:</p>\n<pre>\n",
        "date": "12.03.2018 01:36:35",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "sim_msg": "docs(Editorial): moved to separate page",
        "sim_diff": "diff --git a/src/documentation/Usage/UsageCss-story.js b/src/documentation/Usage/UsageCss-story.js @@ -15,20 +15,24 @@ storiesOf(' Design|Getting started', module)\nuse it from the CDN.\n</p>\n- <h3>CDN Usage</h3>\n-\n- <p>\n- Import the WFP UI css from the WFP CDN. Change the version number to the\n- UI Kit version you are using.\n- </p>\n+ <h3>React import</h3>\n+ <p>You can also import the css directly from the npm package.</p>\n+ <Blockquote title=\"Import css via react\" kind=\"code\">\n+ <PrismCode component=\"pre\" className=\"language-css\">\n+ {`// Import all stylesheets\n+import '~@wfp/ui/assets/css/styles.css';\n+`}\n+ </PrismCode>\n+ </Blockquote>\n+ <p>Make sure you have a scss loader installed.</p>\n+ <Blockquote title=\"Import scss via react\" kind=\"code\">\n+ <PrismCode component=\"pre\" className=\"language-css\">\n+ {`// Import all stylesheets\n+import '~@wfp/ui/source/globals/scss/styles';\n- <Blockquote title=\"CDN\" kind=\"code\">\n- <PrismCode component=\"pre\" className=\"language-html\">\n- {`<link\n- rel=\"stylesheet\"\n- type=\"text/css\"\n- href=\"https://cdn.wfp.org/guides/ui/v1.1.16/assets/css/styles.min.css\"\n-/>`}\n+// Only import the Button stylesheet\n+import '~@wfp/ui/source/components/Button/button';\n+`}\n</PrismCode>\n</Blockquote>\n<h3>SCSS</h3>\n@@ -56,28 +60,20 @@ $color__main: #0076FF;\n@import \"~@wfp/ui/source/globals/scss/vars\";`}\n</PrismCode>\n</Blockquote>\n+ <h3>CDN Usage</h3>\n- <h3>React import</h3>\n- <p>You can also import the css directly from the npm package.</p>\n- <Blockquote title=\"Import scss via react\" kind=\"code\">\n- <PrismCode component=\"pre\" className=\"language-css\">\n- {`\n-// Import all stylesheets\n-import '~@wfp/ui/assets/css/styles.css';\n-`}\n- </PrismCode>\n- </Blockquote>\n- <p>Make sure you have a scss loader installed.</p>\n- <Blockquote title=\"Import scss via react\" kind=\"code\">\n- <PrismCode component=\"pre\" className=\"language-css\">\n- {`\n-//\n-// Import all stylesheets\n-import '~@wfp/ui/source/globals/scss/styles';\n+ <p>\n+ Import the WFP UI css from the WFP CDN. Change the version number to the\n+ UI Kit version you are using.\n+ </p>\n-// Only import the Button stylesheet\n-import '~@wfp/ui/source/components/Button/button';\n-`}\n+ <Blockquote title=\"CDN\" kind=\"code\">\n+ <PrismCode component=\"pre\" className=\"language-html\">\n+ {`<link\n+rel=\"stylesheet\"\n+type=\"text/css\"\n+href=\"https://cdn.wfp.org/guides/ui/v1.1.16/assets/css/styles.min.css\"\n+/>`}\n</PrismCode>\n</Blockquote>\n</Page>\n"
    },
    {
        "msg": "docs(changelog): manually correct unreleased",
        "diff": "diff --git a/CHANGELOG.md b/CHANGELOG.md # Change Log\n-## [Unreleased](https://github.com/Semantic-Org/Semantic-UI-React/tree/HEAD)\n-\n-[Full Changelog](https://github.com/Semantic-Org/Semantic-UI-React/compare/v0.66.0...HEAD)\n-\n-**Implemented enhancements:**\n-\n-- Accordion.Title - 'as' prop in dynamic accordion titles [\\#1144](https://github.com/Semantic-Org/Semantic-UI-React/issues/1144)\n-\n## [v0.66.0](https://github.com/Semantic-Org/Semantic-UI-React/tree/v0.66.0) (2017-02-22)\n[Full Changelog](https://github.com/Semantic-Org/Semantic-UI-React/compare/v0.65.0...v0.66.0)\n- Add missing MenuItem `disabled` prop [\\#1363](https://github.com/Semantic-Org/Semantic-UI-React/issues/1363)\n- Remove Form `onSubmit` prop and serializer [\\#1362](https://github.com/Semantic-Org/Semantic-UI-React/issues/1362)\n- Add `link` prop to Card [\\#1350](https://github.com/Semantic-Org/Semantic-UI-React/issues/1350)\n+- Accordion.Title - 'as' prop in dynamic accordion titles [\\#1144](https://github.com/Semantic-Org/Semantic-UI-React/issues/1144)\n- Typings: unable to set many typical html element props [\\#1072](https://github.com/Semantic-Org/Semantic-UI-React/issues/1072)\n**Fixed bugs:**\n",
        "date": "21.02.2017 20:45:10",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "chore(docs): updated release notes",
        "sim_diff": "diff --git a/RELEASE-NOTES.md b/RELEASE-NOTES.md - **Menu** - Added `center` modifier allowing center aligned menus and tabs **Thanks @ColinFrick** [#5589](https://github.com/Semantic-Org/Semantic-UI/issues/5589)\n- **Flags** - Added `uk` as an alias for United Kingdom **Thanks @hammy2899**\n- **Comments** - Added inverted variation **Thanks @prudho** [#88](https://github.com/hammy2899/Fomantic-UI/pull/88)\n+- **Form** - Added transparent variation for textareas **Thanks @LewHgh**\n**Bugs**\n- **Label** - Fixed ribbon label background color **Thanks @hammy2899** [#6497](https://github.com/Semantic-Org/Semantic-UI/issues/6497)\n"
    },
    {
        "msg": "docs(auth-init): added namespace info to vuex actions/mutations",
        "diff": "diff --git a/docs/content/en/service-options/auth.md b/docs/content/en/service-options/auth.md @@ -31,6 +31,8 @@ This sets up an `onAuthStateChanged()` listener and hooks it up to the vuex stor\nJust add a mutation/action to your vuex store ([as seen below](#onauthstatechangedmutation)) that handles what to do with the authUser object (e.g. save it to the state or get user data from FireStore) and then define the name of the action/mutation in the `firebase.services.auth.initialize` configuration as above.\n+<alert type=\"info\">You can also use namespaces for your store actions/mutations like so: `onAuthStateChangedAction: 'namespaceName/actionName'`.</alert>\n+\nWhen onAuthStateChanged() gets triggered by Firebase, the defined mutation/action will be called with the `authUser` and `claims` attributes as [as seen below](#onauthstatechangedmutation)\nTo unsubscribe from the listener simply call the `$fireAuthUnsubscribe()` function which is provided as a [combined inject](https://nuxtjs.org/guide/plugins#combined-inject).\n",
        "date": "16.10.2020 00:00:22",
        "repo": "nuxt-community/firebase-module",
        "type": "docs",
        "sim_msg": "refactor(ActiveUserRetriever): Display any error messages returned from auth0 login.",
        "sim_diff": "diff --git a/lib/common/containers/ActiveUserRetriever.js b/lib/common/containers/ActiveUserRetriever.js @@ -12,13 +12,19 @@ import * as userActions from '../../manager/actions/user'\n*/\nconst ActiveUserRetriever = ({ logout, receiveTokenAndProfile }) => {\nconst auth0 = useAuth0()\n- const { getAccessTokenSilently, isAuthenticated, isLoading, user: profile } = auth0\n+ const {\n+ error,\n+ getAccessTokenSilently,\n+ isAuthenticated,\n+ isLoading,\n+ user: profile\n+ } = auth0\n// Any time the login state reported by auth0 changes,\n// update the user info in the redux state.\nuseEffect(async () => {\nif (isAuthenticated) {\n- // Request a detailed response in order to get the user app permissions.\n+ // Request a detailed response in order to get the user app permissions stored in Auth0.\nconst tokenResponse = await getAccessTokenSilently({\ndetailedResponse: true\n})\n@@ -26,6 +32,11 @@ const ActiveUserRetriever = ({ logout, receiveTokenAndProfile }) => {\n// Unlike the access_token portion, the id_token contains the app_metadata info for the user.\nreceiveTokenAndProfile({ profile, token: tokenResponse.id_token })\n} else if (!isLoading) {\n+ if (error) {\n+ // If login fails for \"technical\" reasons (e.g. incorrect settings in env.yml or in Auth0 dashboard),\n+ // then show the error in a basic prompt.\n+ alert(error)\n+ }\nlogout(auth0)\n}\n}, [isAuthenticated, isLoading, profile])\n"
    },
    {
        "msg": "docs(README): fix release instructions'",
        "diff": "diff --git a/README.md b/README.md @@ -135,7 +135,6 @@ npm run deploy:docs\nUpdate the changelog (requires [github_changelog_generator][15]):\n```sh\n-npm run deploy:docs\ngithub_changelog_generator\ngit add CHANGELOG.md\ngit commit -m 'docs(changelog): update changelog [ci skip]'\n",
        "date": "28.02.2017 03:25:03",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "docs: create branch of current version",
        "sim_diff": "diff --git a/package.json b/package.json \"release:major\": \"changelog -M && git add CHANGELOG.md && git commit -m 'updated CHANGELOG.md' && npm version major -m 'Release v%s' && npm run git:push:tags\",\n\"release:minor\": \"changelog -m && git add CHANGELOG.md && git commit -m 'updated CHANGELOG.md' && npm version minor -m 'Release v%s' && npm run git:push:tags\",\n\"release:patch\": \"changelog -p && git add CHANGELOG.md && git commit -m 'updated CHANGELOG.md' && npm version patch -m 'Release v%s' && npm run git:push:tags\",\n- \"git:push:tags\": \"git push origin && git push origin --tags\"\n+ \"git:push:tags\": \"npm run versionBranch && git push origin && git push origin --tags\",\n+ \"versionBranch\": \"git switch -c $npm_package_version && git checkout -\"\n},\n\"husky\": {\n\"hooks\": {\n"
    },
    {
        "msg": "docs(Modal): fix Modal.Description description\ndocs(Modal): fix Modal.Description description",
        "diff": "diff --git a/src/modules/Modal/ModalDescription.js b/src/modules/Modal/ModalDescription.js @@ -5,7 +5,7 @@ import React from 'react'\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps } from '../../lib'\n/**\n- * A modal can have a header.\n+ * A modal can contain a description with one or more paragraphs.\n*/\nfunction ModalDescription(props) {\nconst { children, className, content } = props\n",
        "date": "22.02.2019 11:33:11",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "feat: adding className pass-through to .modal-dialog element",
        "sim_diff": "diff --git a/src/Modal/index.jsx b/src/Modal/index.jsx @@ -174,7 +174,7 @@ class Modal extends React.Component {\nrenderModal() {\nconst { open } = this.state;\n- const { renderHeaderCloseButton } = this.props;\n+ const { renderHeaderCloseButton, dialogClassName } = this.props;\nreturn (\n<div>\n@@ -201,9 +201,12 @@ class Modal extends React.Component {\nonMouseDown={this.close}\n>\n<div\n- className={classNames({\n+ className={classNames(\n+ {\n'modal-dialog': open,\n- })}\n+ },\n+ dialogClassName,\n+ )}\nrole=\"dialog\"\naria-modal\naria-labelledby={this.headerId}\n@@ -280,6 +283,10 @@ Modal.propTypes = {\n}),\n/** specifies whether a close button is rendered in the modal header. It defaults to true. */\nrenderHeaderCloseButton: PropTypes.bool,\n+ /**\n+ * Specifies optional classes to add to the element with the '.modal-dialog' class. See Bootstrap documentation for possible classes. Some options: modal-lg, modal-sm, modal-dialog-centered\n+ */\n+ dialogClassName: PropTypes.string,\n};\nModal.defaultProps = {\n@@ -289,6 +296,7 @@ Modal.defaultProps = {\ncloseText: 'Close',\nvariant: {},\nrenderHeaderCloseButton: true,\n+ dialogClassName: undefined,\n};\n"
    },
    {
        "msg": "docs(Cards): fix broken link",
        "diff": "diff --git a/docs/lib/examples/CardGroups.js b/docs/lib/examples/CardGroups.js @@ -25,7 +25,7 @@ const Example = (props) => {\n</CardBody>\n</Card>\n<Card>\n- <CardImg top width=\"100%\" src=\"/assets/static318x180.svg\" alt=\"Card image cap\" />\n+ <CardImg top width=\"100%\" src=\"/assets/318x180.svg\" alt=\"Card image cap\" />\n<CardBody>\n<CardTitle>Card title</CardTitle>\n<CardSubtitle>Card subtitle</CardSubtitle>\n",
        "date": "03.10.2019 18:02:21",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "sim_msg": "docs(Card): pass others to dom",
        "sim_diff": "diff --git a/docs/card/adaptor/index.jsx b/docs/card/adaptor/index.jsx @@ -2,7 +2,6 @@ import React from 'react';\nimport { Card, Button } from '@alifd/next';\nimport { Types } from '@alifd/adaptor-helper';\n-let index = 0;\nexport default {\nname: 'Card',\neditor: () => ({\n@@ -46,7 +45,7 @@ export default {\n};\nreturn (\n- <Card free style={cardStyle}>\n+ <Card free style={cardStyle} {...others}>\n<Card.Header title={title} subTitle={subTitle} extra={<Button text type=\"primary\">{extra}</Button>} />\n{divider && <Card.Divider />}\n<Card.Content>\n"
    },
    {
        "msg": "docs: Fix typo in faq.md\n[skip ci]",
        "diff": "diff --git a/faq.md b/faq.md @@ -96,7 +96,7 @@ nodemon (from 1.4.2 onwards) uses [Chokidar](https://www.npmjs.com/package/choki\nIf you find your files aren't being monitored, either nodemon isn't restarting, or it reports that zero files are being watched, then you may need the polling mode.\n-To enable polling use the the legacy flag either via the terminal:\n+To enable polling use the legacy flag either via the terminal:\n```shell\n$ nodemon --legacy-watch\n",
        "date": "18.11.2021 13:49:45",
        "repo": "remy/nodemon",
        "type": "docs",
        "sim_msg": "chore: remove `prepack` and `postpack` npm scripts",
        "sim_diff": "diff --git a/package.json b/package.json \"test:affected\": \"node ./tools/affected-test.js\",\n\"docs\": \"node ./site/scripts/docs.js\",\n\"watch\": \"c8 --reporter=lcov ava --watch\",\n- \"prepack\": \"npm prune --prod\",\n- \"postpack\": \"npm i\",\n\"site:build\": \"run-s site:build:*\",\n\"site:build:install\": \"cd site && npm ci --no-audit\",\n\"site:build:assets\": \"cd site && npm run build\",\n"
    },
    {
        "msg": "docs(Progress): typo stripped -> striped",
        "diff": "diff --git a/docs/lib/Components/ProgressPage.js b/docs/lib/Components/ProgressPage.js @@ -48,7 +48,7 @@ export default class ProgressPage extends React.Component {\nPropTypes.number,\n]),\nanimated: PropTypes.bool,\n- stripped: PropTypes.bool,\n+ striped: PropTypes.bool,\ncolor: PropTypes.string,\nclassName: PropTypes.string,\nbarClassName: PropTypes.string // used to add class to the inner progress-bar element\n",
        "date": "14.12.2017 23:50:44",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "sim_msg": "feat: allow className to be passed down to ProgressBar",
        "sim_diff": "diff --git a/packages/progress-bar/src/ProgressBar.js b/packages/progress-bar/src/ProgressBar.js import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n-import { css } from \"emotion\";\n+import { cx, css } from \"emotion\";\nimport { ThemeContext } from \"@hig/theme-context\";\n+import { createCustomClassNames } from \"@hig/utils\";\nimport stylesheet from \"./stylesheet\";\nexport default class ProgressBar extends Component {\n@@ -17,7 +18,19 @@ export default class ProgressBar extends Component {\n};\nrender() {\n- const { percentComplete, stylesheet: customStylesheet } = this.props;\n+ const {\n+ percentComplete,\n+ stylesheet: customStylesheet,\n+ ...otherProps\n+ } = this.props;\n+\n+ const { className } = otherProps;\n+ const innerWrapperClassNames = createCustomClassNames(\n+ className,\n+ \"progress-bar\"\n+ );\n+ const fillClassNames = createCustomClassNames(className, \"fill\");\n+ const polygonClassNames = createCustomClassNames(className, \"polygon\");\nreturn (\n<ThemeContext.Consumer>\n@@ -28,14 +41,18 @@ export default class ProgressBar extends Component {\n);\nreturn (\n<div\n- className={css(styles.wrapper)}\n+ className={cx(css(styles.wrapper), className)}\nrole=\"progressbar\"\naria-valuemin=\"0\"\naria-valuemax=\"100\"\naria-valuenow={percentComplete}\n>\n- <div className={css(styles.progressBar)}>\n- <div className={css(styles.progressBarFill)} />\n+ <div\n+ className={cx(css(styles.progressBar), innerWrapperClassNames)}\n+ >\n+ <div\n+ className={cx(css(styles.progressBarFill), fillClassNames)}\n+ />\n<svg\nwidth=\"3px\"\nheight=\"4px\"\n@@ -45,7 +62,7 @@ export default class ProgressBar extends Component {\nxmlnsXlink=\"http://www.w3.org/1999/xlink\"\n>\n<polygon\n- className={css(styles.polygon)}\n+ className={cx(css(styles.polygon), polygonClassNames)}\nid=\"end-right\"\npoints=\"0 0 2.68 0 1 4 0 4\"\n/>\n"
    },
    {
        "msg": "docs(Responsive): update ResponsiveExampleMaxWidth.js (added two words to clarify)\nAdded \"and lower\" to the 2569px width example, because that's what it does and the wording was confusing on first sight.",
        "diff": "diff --git a/docs/src/examples/addons/Responsive/Types/ResponsiveExampleMaxWidth.js b/docs/src/examples/addons/Responsive/Types/ResponsiveExampleMaxWidth.js @@ -7,7 +7,7 @@ const ResponsiveExampleMaxWidth = () => (\nVisible only if display has <code>767px</code> width and lower\n</Responsive>\n<Responsive as={Segment} maxWidth={2569}>\n- Visible only if display has <code>2569px</code> width\n+ Visible only if display has <code>2569px</code> width and lower\n</Responsive>\n</Segment.Group>\n)\n",
        "date": "02.01.2019 12:34:44",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "feat(docs): Added responsive setup to Layout Concepts.",
        "sim_diff": "diff --git a/packages/docs/concepts/layout.yaml b/packages/docs/concepts/layout.yaml @@ -1405,6 +1405,92 @@ _ref:\nhtml: |\n<div style=\"background: #69c0ff; font-size: 16px; font-weight: 500; padding-left: 8px; padding-right: 8px\">Block 15</div>\n+ - id: markdown_responsive_setup\n+ type: Markdown\n+ style:\n+ marginTop: 16px\n+ properties:\n+ content: |\n+ # Responsive Setup\n+\n+ All the settings defined in the Block layout properties can be defined for the various responsive breakpoints, eg: `{ xs: ... sm: ... md: ... lg: ... xl: ... xxl: ... }`\n+\n+ The responsive breakpoints are:\n+\n+ - `xs`: width less than 576px\n+ - `sm`: width between 576px and 768px\n+ - `md`: width between 768px and 992px\n+ - `lg`: width between 992px and 1200px\n+ - `xl`: width between 1200px and 1600px\n+ - `xxl`: width greater than 1600px\n+\n+ The properties that can be set in `layout` for each breakpoint are:\n+\n+ - `align`: _Enum_\n+ - `flex`: _String_\n+ - `grow`: _Number_\n+ - `order`: _Number_\n+ - `offset`: _Number_\n+ - `pull`: _Number_\n+ - `push`: _Number_\n+ - `shrink`: _Number_\n+ - `size`: _String_ | _Number_\n+ - `span`: _Number_\n+\n+ The responsive breakpoints can also be used in `style` when defining the css properties to be used in a block.\n+\n+ ### Responsive setup examples:\n+\n+ - id: responsive_setup_usage_examples_collapse\n+ type: Collapse\n+ properties:\n+ panels:\n+ - title: Layout example\n+ key: layout\n+ - title: Style example\n+ key: style\n+ areas:\n+ layout:\n+ blocks:\n+ - id: markdown_span_layout_example\n+ type: Markdown\n+ style:\n+ marginTop: 16px\n+ properties:\n+ content: |\n+ ```yaml\n+ - id: button\n+ type: Button\n+ layout:\n+ xs:\n+ span: 15\n+ sm:\n+ span: 10\n+ md:\n+ span: 5\n+ properties:\n+ title: A Button\n+ style:\n+ blocks:\n+ - id: markdown_align_style_example\n+ type: Markdown\n+ style:\n+ marginTop: 16px\n+ properties:\n+ content: |\n+ ```yaml\n+ - id: title\n+ type: Title\n+ style:\n+ lg:\n+ textAlign: left\n+ md:\n+ textAlign: center\n+ sm:\n+ textAlign: right\n+ properties:\n+ content: A Title\n+\n- _ref:\npath: templates/navigation_buttons.yaml\nvars:\n"
    },
    {
        "msg": "docs(readme): Add Netflix EDX as a user",
        "diff": "diff --git a/README.md b/README.md @@ -68,6 +68,7 @@ Here are some helpful links:\nThese great products are built on Semantic UI React. Add yours [here][22].\n+- Netflix's Edge Developer Experience team's numerous [internal apps](https://github.com/Semantic-Org/Semantic-UI-React/issues/1604)\n- http://stoplight.io\n- https://roadmap.space\n- https://edabit.com\n",
        "date": "21.04.2017 13:39:08",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "docs: Add version docs",
        "sim_diff": "diff --git a/README.md b/README.md The Cisco Spark for React library allows developers to easily incorporate Spark functionality into an application.\n## Table of Contents\n+\n- [Background](#background)\n- [Widgets](#widgets)\n- [Install](#install)\n- [Build from Source](#build-from-source)\n-- [Limitations](#limitations)\n+- [Version](#version)\n- [Development](#development)\n- [License](#license)\n@@ -26,8 +27,8 @@ The basic components are just presentational React <https://github.com/facebook/\nWhile many of our components are purely presentational, some have extended functionality that provide a piece of the full Cisco Spark experience. These fully self contained elements are called `Widgets` and are available here:\n-* [Space Widget](./packages/node_modules/@ciscospark/widget-space)\n-* [Recents Widget](./packages/node_modules/@ciscospark/widget-recents)\n+- [Space Widget](./packages/node_modules/@ciscospark/widget-space)\n+- [Recents Widget](./packages/node_modules/@ciscospark/widget-recents)\n## Install\n@@ -41,11 +42,17 @@ While many of our components are purely presentational, some have extended funct\n```\n1. The built bundles are located at `packages/node_modules/@ciscospark/PACKAGE_NAME/dist`.\n-## Limitations\n+## Version\n+\n+Once a widget is bundled, the version number is available in the following ways:\n+\n+- A comment at the top of each bundled file\n+- Programmatic access after a widget has been registered: `window.ciscospark.widgetFn.{widgetName}.version` (e.g. `window.ciscospark.widgetFn.spaceWidget.version`)\n+- Access after a widget has been instantiated: `window.ciscospark.widget({widgetEl}).version` (e.g. `window.ciscospark.widget(document.getElementById('myWidget')).version`)\n### Development\n-* `stylelint` currently ignores all `node_modules` directories, and will not lint our packages. Discussion: <https://github.com/stylelint/stylelint/issues/2236>\n+- `stylelint` currently ignores all `node_modules` directories, and will not lint our packages. Discussion: <https://github.com/stylelint/stylelint/issues/2236>\n## License\n"
    },
    {
        "msg": "docs(Collapse): make example more clear\n`isOpen={collapse}` is a contradiction, because if `collapse` is `true` then it's not collapsed and if it's `false` it is collapsed.",
        "diff": "diff --git a/docs/lib/examples/Collapse.js b/docs/lib/examples/Collapse.js @@ -2,14 +2,14 @@ import React, { useState } from 'react';\nimport { Collapse, Button, CardBody, Card } from 'reactstrap';\nconst Example = (props) => {\n- const [collapse, setCollapse] = useState(false);\n+ const [isOpen, setIsOpen] = useState(false);\n- const toggle = () => setCollapse(!collapse);\n+ const toggle = () => setIsOpen(!isOpen);\nreturn (\n<div>\n<Button color=\"primary\" onClick={toggle} style={{ marginBottom: '1rem' }}>Toggle</Button>\n- <Collapse isOpen={collapse}>\n+ <Collapse isOpen={isOpen}>\n<Card>\n<CardBody>\nAnim pariatur cliche reprehenderit,\n",
        "date": "01.11.2019 17:02:09",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "sim_msg": "feat(molecule/collapsible): improve conditional and tipying from PR comments",
        "sim_diff": "diff --git a/components/molecule/collapsible/src/index.js b/components/molecule/collapsible/src/index.js @@ -14,28 +14,20 @@ class MoleculeCollapsible extends Component {\nsuper(props)\nthis.childrenContainer = React.createRef()\nthis.state = {collapsed: true, showButton: true}\n- this.contentStyles = {\n- height: `${MIN_HEIGHT}`\n- }\n}\ntoggleCollapse = () => {\nconst {collapsed, showButton} = this.state\nconst {onClose, onOpen} = this.props\nif (showButton) {\n- if (collapsed) {\n- this.setState({collapsed: false})\n- onOpen()\n- } else {\n- this.setState({collapsed: true})\n- onClose()\n- }\n+ this.setState({collapsed: !collapsed})\n+ ;(collapsed && onOpen()) || onClose()\n}\n}\ncomponentDidMount() {\nconst offsetHeight = this.childrenContainer.current.offsetHeight\n- this.setState({showButton: offsetHeight >= MIN_HEIGHT})\n+ this.setState({showButton: offsetHeight >= this.props.height})\n}\nrender() {\n"
    },
    {
        "msg": "docs: README Grammar\n`less` is used for singular mass nouns\n`fewer` when discussing countable things",
        "diff": "diff --git a/README.md b/README.md @@ -347,9 +347,9 @@ The answer is simple, but possibly frustrating. I'm not saying (how I pronounce\n## Design principles\n-- Less flags is better\n+- Fewer flags is better\n- Works across all platforms\n-- Less features\n+- Fewer features\n- Let individuals build on top of nodemon\n- Offer all CLI functionality as an API\n- Contributions must have and pass tests\n",
        "date": "03.09.2019 11:53:51",
        "repo": "remy/nodemon",
        "type": "docs",
        "sim_msg": "chore: move node-fetch to dependencies",
        "sim_diff": "diff --git a/package.json b/package.json \"minimist\": \"^1.1.0\",\n\"moment\": \"^2.10.6\",\n\"morgan\": \"^1.5.0\",\n+ \"node-fetch\": \"^2.2.0\",\n\"node-gpsd\": \"^0.3.0\",\n\"pem\": \"^1.11.0\",\n\"please-upgrade-node\": \"^3.0.1\",\n\"husky\": \"^1.0.0\",\n\"lint-staged\": \"^7.0.0\",\n\"mocha\": \"^5.0.0\",\n- \"node-fetch\": \"^2.1.1\",\n\"prettier-standard\": \"^8.0.0\",\n\"request\": \"^2.81.0\",\n\"request-promise\": \"^4.1.1\"\n"
    },
    {
        "msg": "docs: fixed typo in accessibility.mdx",
        "diff": "diff --git a/packages/chakra-ui-docs/docs/accessibility.mdx b/packages/chakra-ui-docs/docs/accessibility.mdx @@ -5,7 +5,7 @@ heavy-lifting for you in order to allow you to focus on building your applicati\nAll authored components are compliant with the WAI-ARIA standards for authored components.\n-We've written the time to write summarized description of the accessibility support for\n+We've taken the time to write summarized description of the accessibility support for\nall authored components in @chakra-ui/vue. We called this document an accessibility report\nand can be found in the `accessibility.md` file in the respective component's source directory.\n",
        "date": "08.05.2020 22:36:52",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "sim_msg": "chore: Restore missing comma",
        "sim_diff": "diff --git a/src/technologies/c.json b/src/technologies/c.json 66\n],\n\"description\": \"Chakra UI is a simple, modular and accessible component library that gives you the building blocks you need to build your React applications.\",\n- \"dom\": \"html[style*='chakra-ui-color-mode'], body.chakra-ui-dark, body.chakra-ui-light, div.chakra-portal\"\n+ \"dom\": \"html[style*='chakra-ui-color-mode'], body.chakra-ui-dark, body.chakra-ui-light, div.chakra-portal\",\n\"icon\": \"Chakra UI.svg\",\n\"implies\": \"React\",\n\"oss\": true,\n"
    },
    {
        "msg": "docs: lint: add description",
        "diff": "diff --git a/packages/eslint/README.md b/packages/eslint/README.md @@ -145,7 +145,9 @@ module.exports.rules = {\n};\n```\n-### `lint(code, {fix, plugins})`\n+### `lint(source, {fix, plugins})`\n+\n+When you need to run **ESLint** with one plugin (*rule*), just use `lint` it will do the thing.\n```js\nconst lint = require('@putout/eslint/lint');\n",
        "date": "29.08.2022 20:49:33",
        "repo": "coderaiser/putout",
        "type": "docs",
        "sim_msg": "chore: remove parserOptions, it's in eslint-config-standard",
        "sim_diff": "diff --git a/.eslintrc.js b/.eslintrc.js @@ -13,10 +13,6 @@ module.exports = {\nplugins: [\n'import'\n],\n- parserOptions: {\n- ecmaVersion: 2018,\n- sourceType: 'module'\n- },\nrules: {\n'@typescript-eslint/explicit-function-return-type': 0,\n'@typescript-eslint/indent': ['error', 2],\n"
    },
    {
        "msg": "docs: trying a new position\nWill track over the next 30-60 days.",
        "diff": "diff --git a/README.md b/README.md @@ -11,6 +11,8 @@ nodemon does **not** require *any* changes to your code or method of development\n[![NPM version](https://badge.fury.io/js/nodemon.svg)](https://npmjs.org/package/nodemon)\n[![Travis Status](https://travis-ci.org/remy/nodemon.svg?branch=master)](https://travis-ci.org/remy/nodemon)\n+<a href=\"https://app.codesponsor.io/link/wnz2te8CdfKZ8wMjGUpi8EZG/remy/nodemon\" rel=\"nofollow\" target=\"_blank\"><img src=\"https://app.codesponsor.io/embed/wnz2te8CdfKZ8wMjGUpi8EZG/remy/nodemon.svg\" style=\"width: 888px; height: 68px;\" alt=\"Sponsor\" /></a>\n+\n# Installation\nEither through cloning with git or by using [npm](http://npmjs.org) (the recommended way):\n@@ -289,5 +291,3 @@ See the [FAQ](https://github.com/remy/nodemon/blob/master/faq.md) and please add\n# License\nMIT [http://rem.mit-license.org](http://rem.mit-license.org)\n-\n-<a href=\"https://app.codesponsor.io/link/wnz2te8CdfKZ8wMjGUpi8EZG/remy/nodemon\" rel=\"nofollow\" target=\"_blank\"><img src=\"https://app.codesponsor.io/embed/wnz2te8CdfKZ8wMjGUpi8EZG/remy/nodemon.svg\" style=\"width: 888px; height: 68px;\" alt=\"Sponsor\" /></a>\n",
        "date": "03.11.2017 16:35:53",
        "repo": "remy/nodemon",
        "type": "docs",
        "sim_msg": "docs: Remove broken badges",
        "sim_diff": "diff --git a/README.md b/README.md <p align=\"center\">\n<a href=\"https://www.npmjs.com/package/lerna\"><img alt=\"NPM Status\" src=\"https://img.shields.io/npm/v/lerna.svg?style=flat\"></a>\n<a href=\"https://travis-ci.org/lerna/lerna\"><img alt=\"Travis Status\" src=\"https://img.shields.io/travis/lerna/lerna/master.svg?style=flat&label=travis\"></a>\n- <a href=\"https://ci.appveyor.com/project/lerna/lerna/branch/master\"><img alt=\"Appveyor Status\" src=\"https://img.shields.io/appveyor/ci/lerna/lerna/master.svg\"></a>\n- <a href=\"https://slack.lernajs.io/\"><img alt=\"Slack Status\" src=\"https://slack.lernajs.io/badge.svg\"></a>\n</p>\n* [About](#about)\n"
    },
    {
        "msg": "docs(guide/introduction): fix typo",
        "diff": "diff --git a/docs/guide/introduction/README.md b/docs/guide/introduction/README.md @@ -23,4 +23,4 @@ The module adds a plugin to your Nuxt.js application that handles the initializa\n## Disclaimer\n-This module is meant for easy and quick set-up of Firebase in a Nuxt project. Due to the nature of this module, it is possibly not optimal for websites that need to be super performant and/or SEO friendly, since the module adds the Firebase services to the global scope. If you wan't your website to be more performant, you'd probably be better off by importing the services only in the files where you need them (i.e. by NOT using this module). That being said, the difference might be marginal depending on your project.\n+This module is meant for easy and quick set-up of Firebase in a Nuxt project. Due to the nature of this module, it is possibly not optimal for websites that need to be super performant and/or SEO friendly, since the module adds the Firebase services to the global scope. If you want your website to be more performant, you'd probably be better off by importing the services only in the files where you need them (i.e. by NOT using this module). That being said, the difference might be marginal depending on your project.\n",
        "date": "03.05.2020 23:52:37",
        "repo": "nuxt-community/firebase-module",
        "type": "docs",
        "sim_msg": "docs(advanced): fixes typo in typescript.md",
        "sim_diff": "diff --git a/docs-src/src/content/pages/advanced/typescript/en.md b/docs-src/src/content/pages/advanced/typescript/en.md @@ -10,7 +10,7 @@ meta:\nCASL is written in [TypeScript] and this brings several benefits:\n* better safety as you can control what actions and subjects can be used\n* better IDE integration as you can get hints on what classes you can use and arguments you need to pass inside\n-* easier library support, we can forgot about synchronization issues between `.d.ts` and `.js` files\n+* easier library support, we can forget about synchronization issues between `.d.ts` and `.js` files\n[TypeScript]: https://typescriptlang.org/\n"
    },
    {
        "msg": "docs(README): add React-Semantic.UI-Starter",
        "diff": "diff --git a/README.md b/README.md @@ -44,6 +44,9 @@ See the [Documentation][2] for an introduction, usage information, and extensive\nThis is a listing of example projects and guides that will help you integrate Semantic UI React into your new or existing projects.\n+### [react-semantic.ui-starter][102]\n+Production-ready, performance-first, optimized, robust, fully-featured boilerplate/example for your new Progressive Web App.\n+\n### [semantic-ui-react-todos][100]\nThis example modifies the well-known [react-redux Todo List][101] to use Semantic UI components. There is also a write-up on the process in the project README.\n@@ -206,3 +209,4 @@ Big thanks to our [contributors][20], especially:\n<!-- Examples -->\n[100]: https://github.com/wyc/semantic-ui-react-todos\n[101]: https://github.com/reactjs/redux/tree/master/examples/todos\n+[102]: https://github.com/Metnew/react-semantic.ui-starter\n",
        "date": "28.04.2017 08:06:26",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "docs(readme): add deprecation notice\n<3 </3",
        "sim_diff": "diff --git a/README.md b/README.md +# Deprecation Warning\n+\n+This project was started at the advent of the Redux ecosystem, and was intended to help users get up and running quickly. Since then, tooling and best practices have evolved tremendously. In order to get the most modern experience possible, I recommend checking out something like [create-react-app](https://github.com/facebookincubator/create-react-app) which is supported by many core React and Redux developers.\n+\n+You are welcome to use this project if it is a better fit for your needs, but if you are brand new to the ecosystem I highly recommend checking out something that has received more recent updates.\n+\n+Thank you to everyone who made this project possible over the past year(s).\n+\n# React Redux Starter Kit\n[![Build Status](https://travis-ci.org/davezuko/react-redux-starter-kit.svg?branch=master)](https://travis-ci.org/davezuko/react-redux-starter-kit?branch=master)\n"
    },
    {
        "msg": "docs: update contributing with workflow",
        "diff": "diff --git a/.github/CONTRIBUTING.md b/.github/CONTRIBUTING.md @@ -56,10 +56,62 @@ immediately in all the examples. `add-dependencies` can be used to just add pack\n- `yarn test:packages`: Runs tests for packages\n- `yarn test:e2e`: Runs end-to-end tests\n- `yarn build-docs`: Builds docs/ updates doc TOC\n-- `yarn bootstrap-examples`: Run `yarn` with specific examples as workspaces. Automatically symlinks inter-dependent modules. Run `yarn restrap` in the example to reinstall.\n-- `yarn new-example`: Creates a new example from another example. `yarn new-example basic new-example`.\n-- `yarn publish-all-stable`: Does a a stable release\n- `yarn publish-all-canary`: Does a `razzle@canary` release.\n+- `yarn publish-all-stable`: Does a a stable release(uses the npm version released of the packages)\n+- `yarn new-example`: Creates a new example from another example. `yarn new-example basic new-example`.\n+- `yarn bootstrap-examples`: Run `yarn` with specific examples as workspaces. Automatically symlinks inter-dependent modules. Run `yarn restrap` in the example to reinstall.\n+- `yarn test:examples:simple`: Runs tests for all simple examples (uses the npm version released of the packages)\n+- `yarn test:examples:complex`: Runs tests for all complex examples (uses the npm version released of the packages)\n+- `yarn test:examples`: Runs tests for all examples (uses the npm version released of the packages)\n+\n+### Workflow for working on razzle core with examples\n+\n+```bash\n+\n+git clone https://github.com/<YOUR_GITHUB_USERNAME>/razzle.git\n+cd razzle\n+git checkout <my-branch>\n+NODE_ENV=development yarn install ---ignore-engines\n+\n+sudo npm install add-dependencies -g\n+\n+pwd\n+# /home/oyvind/Documents/GitHub/razzle/\n+\n+yarn install\n+\n+# to make sure tests pass\n+yarn test --runInBand\n+\n+# to add a new example\n+yarn new-example existingexample with-somefeature\n+\n+# to work on a example\n+cd examples/basic\n+example=\"$(basename $PWD)\"\n+pushd ../..\n+\n+# if it is a example with webpack5 you need to do\n+yarn add -W webpack@5.16.0\n+\n+# switch back to webpack4 later to work with webpack4\n+yarn add -W webpack@4.46.0\n+\n+# then\n+yarn bootstrap-examples $example\n+popd\n+yarn build\n+\n+# if you want to add dependencies to the example\n+add-dependencies somedependency\n+yarn restrap\n+\n+# if you make changes to startserver plugin\n+pushd ../..\n+cd packages/razzle-start-server-webpack-plugin\n+yarn build\n+popd\n+```\n### Updating your fork\n",
        "date": "13.02.2021 19:27:59",
        "repo": "jaredpalmer/razzle",
        "type": "docs",
        "sim_msg": "ci: check for differences after `yarn install`",
        "sim_diff": "diff --git a/.github/workflows/test-all-packages.yml b/.github/workflows/test-all-packages.yml @@ -33,8 +33,10 @@ jobs:\n# 'yarn install' must be done at the top level, to build all the\n# cross-package symlinks\n- - name: yarn install --frozen-lockfile\n- run: yarn install --frozen-lockfile\n+ - name: yarn install\n+ run: yarn install\n+ - name: check if git is dirty\n+ run: git diff --stat --exit-code\n- name: check dependencies\nrun: yarn check-dependencies\n# 'yarn build' loops over all workspaces\n"
    },
    {
        "msg": "docs: add important note about ignore rules\nFixes",
        "diff": "diff --git a/README.md b/README.md @@ -86,7 +86,7 @@ A config file can take any of the command line arguments as JSON key values, for\n```json\n{\n\"verbose\": true,\n- \"ignore\": [\"*.test.js\", \"fixtures/*\"],\n+ \"ignore\": [\"*.test.js\", \"**/fixtures/**\"],\n\"execMap\": {\n\"rb\": \"ruby\",\n\"pde\": \"processing --sketch={{pwd}} --run\"\n@@ -109,7 +109,7 @@ Specify the config in the same format as you would for a config file but under `\n\"homepage\": \"http://nodemon.io\",\n\"...\": \"... other standard package.json values\",\n\"nodemonConfig\": {\n- \"ignore\": [\"test/*\", \"docs/*\"],\n+ \"ignore\": [\"**/test/**\", \"**/docs/**\"],\n\"delay\": 2500\n}\n}\n@@ -203,6 +203,8 @@ Patterns can also be ignored (but be sure to quote the arguments):\nnodemon --ignore 'lib/*.js'\n```\n+**Important** the ignore rules are patterns matched to the full absolute path, and this determines how many files are monitored. If using a wild card glob pattern, it needs to be used as `**` or omitted entirely. For example, `nodemon --ignore '**/test/**'` will work, whereas `--ignore '*/test/*'` will not.\n+\nNote that by default, nodemon will ignore the `.git`, `node_modules`, `bower_components`, `.nyc_output`, `coverage` and `.sass-cache` directories and *add* your ignored patterns to the list. If you want to indeed watch a directory like `node_modules`, you need to [override the underlying default ignore rules](https://github.com/remy/nodemon/blob/master/faq.md#overriding-the-underlying-default-ignore-rules).\n## Application isn't restarting\n",
        "date": "16.08.2022 09:20:43",
        "repo": "remy/nodemon",
        "type": "docs",
        "sim_msg": "ci(gh-pages): include Korean docs",
        "sim_diff": "diff --git a/.circleci/config.yml b/.circleci/config.yml @@ -150,7 +150,7 @@ jobs:\n--dist . \\\n--message \"chore: update to $(git rev-parse HEAD) [ci skip]\" \\\n--repo \"$(node -e 'process.stdout.write(require(\"./package.json\").repository.url)')\" \\\n- --src \"{{common-docs-files,coverage,docs,examples,$(node -e 'process.stdout.write(require(\"./package.json\").files.join(\",\"))')}/**/*,*.{html,md}}\"\n+ --src \"{{common-docs-files,coverage,docs,docs-kr,examples,$(node -e 'process.stdout.write(require(\"./package.json\").files.join(\",\"))')}/**/*,*.{html,md}}\"\nrelease:\nexecutor: node\n"
    },
    {
        "msg": "docs: how to watch .env files\n[skip ci]",
        "diff": "diff --git a/faq.md b/faq.md @@ -18,6 +18,18 @@ In your `nodemon.json` (or in your `package.json`) you can include the follow ev\n}\n```\n+# nodemon doesn't restart on .env change\n+\n+This is an edge case with how nodemon watches files. This is because nodemon doesn't know if `.env` is a hidden file with no extension or a `*.env` without a filename.\n+\n+Nonetheless, to trigger a change on `.env` (or similar files like `.bash_profile`), you need to explicitly tell nodemon to watch the file.\n+\n+However, now nodemon will *only* watch the `.env` file, so you need to add to what nodemon is watching, i.e. tell nodemon to _also_ watch the current working directory:\n+\n+```bash\n+$ nodemon --watch .env --watch app app/index.js\n+```\n+\n# nodemon doesn't work with my REPL\nCreate an nodemon.json file with the setting:\n",
        "date": "28.11.2018 09:31:44",
        "repo": "remy/nodemon",
        "type": "docs",
        "sim_msg": "docs: updated cwd, watch & callbacks inline documentation",
        "sim_diff": "diff --git a/lib/default-config.js b/lib/default-config.js */\nmodule.exports = {\n- /**\n- * Current working directory\n- * @property cwd\n- * @type String\n- * @since 2.23.0\n- */\n-\n/**\n* Browsersync includes a user-interface that is accessed via a separate port.\n* The UI allows to controls all devices, push sync updates and much more.\n@@ -44,7 +37,11 @@ module.exports = {\nwatchEvents: [\"change\"],\n/**\n- * Watch files automatically\n+ * Watch files automatically - this should be used as an\n+ * alternative to the `files` option. When this option is used, some directories\n+ * will be ignored automatically such as `node_modules` `bower_components` `.sass-cache`\n+ * `.vscode` `.git` `.idea`\n+ *\n* @property watch\n* @type Boolean\n* @default false\n@@ -173,6 +170,25 @@ module.exports = {\n* @since 2.18.0\n*/\n+ /**\n+ * Current working directory\n+ * @property cwd\n+ * @type String\n+ * @since 2.23.0\n+ */\n+\n+ /**\n+ * Register callbacks via a regular option - this can be used\n+ * to get access the Browsersync instance in situations where you\n+ * cannot provide a callback via the normal API (for example, in a Gruntfile)\n+ *\n+ * **Note**: Only the `ready` callback is currently supported here.\n+ *\n+ * @property callbacks\n+ * @type Object\n+ * @param {Function} ready\n+ */\n+\n/**\n* Clicks, Scrolls & Form inputs on any device will be mirrored to all others.\n* @property ghostMode\n"
    },
    {
        "msg": "docs(messaging): added messaing object example for collectionEnabled",
        "diff": "diff --git a/docs/guide/options/README.md b/docs/guide/options/README.md @@ -608,6 +608,12 @@ Initializes Firebase Analytics and makes it available via `$fireAnalytics` and `\n```js\nanalytics: true\n+\n+// or\n+\n+messaging: {\n+ collectionEnabled: true, // default\n+}\n```\n#### collectionEnabled\n",
        "date": "29.06.2020 23:49:57",
        "repo": "nuxt-community/firebase-module",
        "type": "docs",
        "sim_msg": "feat: automatically call ready callback if instance ready",
        "sim_diff": "diff --git a/packages/analytics-core/src/index.js b/packages/analytics-core/src/index.js @@ -276,6 +276,7 @@ function analytics(config = {}) {\n...parsedOptions.methods\n}\n+ let readyCalled = false\n/**\n* Analytic instance returned from initialization\n* @typedef {Object} AnalyticsInstance\n@@ -546,7 +547,12 @@ function analytics(config = {}) {\n* })\n*/\nready: (callback) => {\n- return instance.on(EVENTS.ready, callback)\n+ // If ready already fired. Call callback immediately\n+ if (readyCalled) callback({ plugins, instance })\n+ return instance.on(EVENTS.ready, (x) => {\n+ callback(x)\n+ readyCalled = true\n+ })\n},\n/**\n* Attach an event handler function for analytics lifecycle events.\n"
    },
    {
        "msg": "docs: no -- needed here",
        "diff": "diff --git a/website/pages/getting-started.mdx b/website/pages/getting-started.mdx @@ -65,6 +65,6 @@ If your application is running, and you need to manually restart your server, yo\n## Debugging with Inspector\n-- `npm start -- --inspect=[host:port]` This will start the node server and enable the inspector agent. The `=[host:port]` is optional and defaults to `=127.0.0.1:9229`. For more information, see [this](https://nodejs.org/en/docs/guides/debugging-getting-started/).\n+- `npm start --inspect=[host:port]` This will start the node server and enable the inspector agent. The `=[host:port]` is optional and defaults to `=127.0.0.1:9229`. For more information, see [this](https://nodejs.org/en/docs/guides/debugging-getting-started/).\n-- `npm start -- --inspect-brk=[host:port]` This is the same as `--inspect`, but will also break before user code starts. (to give a debugger time to attach before early code runs) For more information, see [this](https://nodejs.org/en/docs/guides/debugging-getting-started/).\n+- `npm start --inspect-brk=[host:port]` This is the same as `--inspect`, but will also break before user code starts. (to give a debugger time to attach before early code runs) For more information, see [this](https://nodejs.org/en/docs/guides/debugging-getting-started/).\n",
        "date": "22.09.2020 22:05:44",
        "repo": "jaredpalmer/razzle",
        "type": "docs",
        "sim_msg": "docs: update the version of the required Node\nFor Eggjs's v3.x, Nodejs version >=  14.20.0.",
        "sim_diff": "diff --git a/README.md b/README.md @@ -32,7 +32,7 @@ $ npm run dev\n$ open http://localhost:7001\n```\n-> Node.js >= 8.5.0 required.\n+> Node.js >= 14.20.0 required.\n## Documentations\n"
    },
    {
        "msg": "docs(plugin-typescript): add link to example",
        "diff": "diff --git a/packages/razzle-plugin-typescript/README.md b/packages/razzle-plugin-typescript/README.md @@ -22,6 +22,8 @@ module.exports = {\n};\n```\n+See full configuration in the [typescript example project](https://github.com/jaredpalmer/razzle/tree/master/examples/with-typescript).\n+\n### With custom options:\n```js\n",
        "date": "24.08.2020 11:54:53",
        "repo": "jaredpalmer/razzle",
        "type": "docs",
        "sim_msg": "chore: config eslint import resolver for ts",
        "sim_diff": "diff --git a/.eslintrc.js b/.eslintrc.js @@ -63,6 +63,14 @@ module.exports = {\n'plugin:@typescript-eslint/recommended',\n...configExtendsPrettier,\n],\n+ settings: {\n+ 'import/resolver': {\n+ node: {\n+ extensions: ['', '.js', '.jsx', '.es', '.ts', '.tsx'],\n+ paths: [__dirname],\n+ },\n+ },\n+ },\n},\n],\n}\n"
    },
    {
        "msg": "docs(readme): add Bandwidth Hero to built with\ndocs(readme): add Bandwidth Hero to built with",
        "diff": "diff --git a/README.md b/README.md @@ -69,6 +69,7 @@ These great products are built on Semantic UI React. Add yours [here][22].\n- https://build.games\n- https://platform.forecastcycles.com\n- https://www.findlectures.com\n+- https://github.com/ayastreb/bandwidth-hero\n## Example Projects\n",
        "date": "05.11.2017 08:37:58",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "chore(showcase): added reactgo blog",
        "sim_diff": "diff --git a/docs/sites.yml b/docs/sites.yml built_by: Little & Big\nbuilt_by_url: \"https://www.littleandbig.com.au/\"\nfeatured: false\n+- title: Reactgo blog\n+ url: https://reactgo.com/\n+ main_url: https://reactgo.com/\n+ description: >\n+ It provides tutorials & articles about modern open source web technologies such as react,vuejs and gatsby.\n+ categories:\n+ - Blog\n+ - Education\n+ - Programming\n+ - Web Development\n+ built_by: Sai gowtham\n+ built_by_url: \"https://twitter.com/saigowthamr\"\n+ featured: false\n"
    },
    {
        "msg": "docs: delay option as number instead of string, in readme\n[skip ci]",
        "diff": "diff --git a/README.md b/README.md @@ -110,7 +110,7 @@ Specify the config in the same format as you would for a config file but under `\n\"...\": \"... other standard package.json values\",\n\"nodemonConfig\": {\n\"ignore\": [\"test/*\", \"docs/*\"],\n- \"delay\": \"2500\"\n+ \"delay\": 2500\n}\n}\n```\n@@ -247,7 +247,7 @@ If you are setting this value in `nodemon.json`, the value will always be interp\nnodemon --delay 2.5\n{\n- \"delay\": \"2500\"\n+ \"delay\": 2500\n}\n```\n",
        "date": "31.03.2021 11:39:58",
        "repo": "remy/nodemon",
        "type": "docs",
        "sim_msg": "chore: updated tsconfig.json",
        "sim_diff": "diff --git a/tsconfig.json b/tsconfig.json \"allowSyntheticDefaultImports\": true,\n\"forceConsistentCasingInFileNames\": true,\n\"resolveJsonModule\": true,\n- \"skipLibCheck\": true\n+ \"skipLibCheck\": true,\n+ \"strictNullChecks\": false\n},\n\"include\": [\"packages\", \"typings\"],\n\"exclude\": [\"node_modules\", \"**/__test?__\", \"**/dist\"]\n"
    },
    {
        "msg": "docs(UncontrolledCollapse): include example",
        "diff": "diff --git a/docs/lib/Components/CollapsePage.js b/docs/lib/Components/CollapsePage.js @@ -5,12 +5,15 @@ import PageTitle from '../UI/PageTitle';\nimport SectionTitle from '../UI/SectionTitle';\nimport CollapseExample from '../examples/Collapse';\n+import UncontrolledCollapseExample from '../examples/CollapseUncontrolled';\nimport CollapseEventsExample from '../examples/CollapseEvents';\nconst CollapseExampleSource = require('!!raw!../examples/Collapse');\nconst CollapseEventsExampleSource = require('!!raw!../examples/CollapseEvents');\n+const UncontrolledCollapseExampleSource = require('!!raw!../examples/CollapseUncontrolled');\n+\nexport default class CollapsePage extends React.Component {\nrender() {\nreturn (\n@@ -60,6 +63,12 @@ export default class CollapsePage extends React.Component {\npass a <code>toggler</code> prop. The <code>toggler</code> prop is a string which will run\nquerySelectorAll to find dom elements which will trigger toggle.\n</p>\n+ <div className=\"docs-example\">\n+ <UncontrolledCollapseExample />\n+ </div>\n+ <pre>\n+ <PrismCode className=\"language-jsx\">{UncontrolledCollapseExampleSource}</PrismCode>\n+ </pre>\n</div>\n);\n}\n",
        "date": "14.05.2018 10:40:21",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "sim_msg": "fix(Models): onLoad should check this.props.layoutSelectors method\nref",
        "sim_diff": "diff --git a/src/core/components/model-collapse.jsx b/src/core/components/model-collapse.jsx @@ -65,7 +65,7 @@ export default class ModelCollapse extends Component {\n}\nonLoad = (ref) => {\n- if(ref) {\n+ if (ref && this.props.layoutSelectors) {\nconst scrollToKey = this.props.layoutSelectors.getScrollToKey()\nif( Im.is(scrollToKey, this.props.specPath) ) this.toggleCollapsed()\n"
    },
    {
        "msg": "docs: better config modification",
        "diff": "diff --git a/website/pages/deployment-options/aws.md b/website/pages/deployment-options/aws.md @@ -12,17 +12,26 @@ module.exports = {\nbuildType: 'serverless'\n},\nmodifyPaths({\n- webpackObject,\n- options: {\n- razzleOptions,\n+ paths,\n+ }) {\n+ paths.prodAppServerIndexJs = path.join(paths.appSrc, 'index.prod');\n+ return paths;\n},\n+ modifyWebpackConfig({\n+ env: {\n+ target,\n+ dev,\n+ },\n+ webpackConfig,\npaths,\n}) {\n- if (process.env.NODE_ENV === 'production') {\n- paths.appServerIndexJs = path.join(paths.appSrc, 'index.prod');\n+ if (target === 'node') {\n+ if (!dev) {\n+ webpackConfig.entry.server = [paths.prodAppServerIndexJs];\n}\n- return paths;\n}\n+ return webpackConfig;\n+ },\n};\n```\n",
        "date": "25.01.2021 23:47:07",
        "repo": "jaredpalmer/razzle",
        "type": "docs",
        "sim_msg": "build(apps.public-cloud): remove resolve.symlinks from webpack config",
        "sim_diff": "diff --git a/packages/manager/apps/public-cloud/webpack.config.js b/packages/manager/apps/public-cloud/webpack.config.js @@ -22,7 +22,6 @@ module.exports = (env = {}) => {\npath.resolve(__dirname, '../../../node_modules'),\n],\nmainFields: ['module', 'browser', 'main'],\n- symlinks: false,\n},\noptimization: {\nsplitChunks: {\n"
    },
    {
        "msg": "docs(readme): add Sublime Fund to the built with list",
        "diff": "diff --git a/README.md b/README.md @@ -79,6 +79,7 @@ These great products are built on Semantic UI React. Add yours [here][22].\n- http://www.brewhousesolutions.com\n- https://www.lifebot.fr\n- https://www.stackforge.co\n+- https://sublimefund.org\n## Voice Your Opinion\n",
        "date": "06.07.2017 11:35:05",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "chore(starters): add semantic-ui-docs-gatsby\n* chore(starters): add semantic-ui-docs-gatsby\nAdding my Semantic UI documentation starter.\n* Adding Semantic UI category to Starters\n* Removing SUI category\n* Removing SUI from categories",
        "sim_diff": "diff --git a/docs/starters.yml b/docs/starters.yml - Storybook\n- Jest and React Testing library for snapshots and unit tests.\n- Styled-Components for all your styles.\n+- url: https://semantic-ui-docs-gatsby.netlify.com/\n+ repo: https://github.com/whoisryosuke/semantic-ui-docs-gatsby\n+ description: Documentation starter using Semantic UI and MDX\n+ tags:\n+ - Documentation\n+ - Linting\n+ - Markdown\n+ - MDX\n+ - PWA\n+ - SEO\n+ features:\n+ - Easy starter for documentation-style sites\n+ - Use SUI React components anywhere in MDX\n+ - SASS/LESS support\n+ - Live code component\n+ - Customizable sidebar\n+ - Offline-ready\n+ - Responsive design\n+ - Nodemon for restarting dev server on changes\n+ - Webpack aliasing for components, assets, etc\n- url: https://gatsby-starter-saas-marketing.netlify.com/\nrepo: https://github.com/keegn/gatsby-starter-saas-marketing\ndescription: A simple one page marketing site starter for SaaS companies and products\n"
    },
    {
        "msg": "docs(MenuExampleHeaderVertical): fix onClick handler\nhandleItemClick = (e, { name }) => this.setState({ activeItem: name });",
        "diff": "diff --git a/docs/src/examples/collections/Menu/Content/MenuExampleHeaderVertical.js b/docs/src/examples/collections/Menu/Content/MenuExampleHeaderVertical.js @@ -3,7 +3,7 @@ import { Menu } from 'semantic-ui-react'\nexport default class MenuExampleHeaderVertical extends Component {\nstate = {}\n- handleItemClick = (name) => this.setState({ activeItem: name })\n+ handleItemClick = (e, { name }) => this.setState({ activeItem: name });\nrender() {\nconst { activeItem } = this.state\n",
        "date": "08.12.2019 23:22:16",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "feat: MenuItem focused handling",
        "sim_diff": "diff --git a/src/components/PopoverMenu/BasePopoverMenu.js b/src/components/PopoverMenu/BasePopoverMenu.js @@ -48,7 +48,7 @@ class BasePopoverMenu extends PureComponent {\n</Text>\n</View>\n)}\n- {_.map(this.props.menuItems, item => (\n+ {_.map(this.props.menuItems, (item, index) => (\n<MenuItem\nkey={item.text}\nicon={item.icon}\n@@ -57,6 +57,7 @@ class BasePopoverMenu extends PureComponent {\ntitle={item.text}\ndescription={item.description}\nonPress={() => this.props.onItemSelected(item)}\n+ focused={index === this.state.activeMenuIndex}\n/>\n))}\n</View>\n"
    },
    {
        "msg": "docs(accordion): add jsdocs to component",
        "diff": "diff --git a/packages/chakra-ui-core/src/CAccordion/CAccordion.js b/packages/chakra-ui-core/src/CAccordion/CAccordion.js +/**\n+ * Hey! Welcome to @chakra-ui/vue Accordion\n+ *\n+ * Accordions display a list of high-level\n+ * options that can expand/collapse to reveal\n+ * more information.\n+ *\n+ * An accordion is a vertically stacked set\n+ * of interactive headings that each contain\n+ * a title, content snippet, or thumbnail\n+ * representing a section of content.\n+ * The headings function as controls that enable\n+ * users to reveal or hide their associated sections\n+ * of content. Accordions are commonly used to\n+ * reduce the need to scroll when presenting\n+ * multiple sections of content on a single page.\n+ *\n+ * @see Docs https://vue.chakra-ui.com/accordion\n+ * @see Source link to source\n+ * @see WAI-ARIA https://www.w3.org/TR/wai-aria-practices-1.2/#accordion\n+ */\n+\nimport { baseProps } from '../config'\nimport { forwardProps, cloneVNodes, useId, isDef } from '../utils'\nimport styleProps from '../config/props'\n@@ -8,6 +30,16 @@ import CPseudoBox from '../CPseudoBox'\nimport CCollapse from '../CCollapse'\nimport CIcon from '../CIcon'\n+/**\n+ * CAccordion component\n+ *\n+ * The wrapper that clones it's children\n+ * to pass it's prop to the `CAccordionItem`.\n+ *\n+ * @extends CBox\n+ * @see Docs https://vue.chakra-ui.com/accordion\n+ */\n+\nconst CAccordion = {\nname: 'CAccordion',\nprops: {\n@@ -116,6 +148,15 @@ const CAccordion = {\n}\n}\n+/**\n+ * CAccordionItem component\n+ *\n+ * A single accordion item\n+ *\n+ * @extends CPseudoBox\n+ * @see Docs https://vue.chakra-ui.com/accordion\n+ */\n+\nconst CAccordionItem = {\nname: 'CAccordionItem',\nprops: {\n@@ -202,6 +243,15 @@ const CAccordionItem = {\n}\n}\n+/**\n+ * CAccordionHeader component\n+ *\n+ * The button that toggles the expand/collapse\n+ * state of the accordion item.\n+ *\n+ * @extends CPseudoBox\n+ * @see Docs https://vue.chakra-ui.com/accordion\n+ */\nconst CAccordionHeader = {\nname: 'CAccordionHeader',\ninject: ['$AccordionContext'],\n@@ -246,6 +296,15 @@ const CAccordionHeader = {\n}\n}\n+/**\n+ * CAccordionPanel component\n+ *\n+ * The container for the accordion item\n+ * details to be revealed.\n+ *\n+ * @extends CPseudoBox\n+ * @see Docs https://vue.chakra-ui.com/accordion\n+ */\nconst CAccordionPanel = {\nname: 'CAccordionPanel',\ninject: ['$AccordionContext'],\n@@ -277,6 +336,15 @@ const CAccordionPanel = {\n}\n}\n+/**\n+ * CAccordionIcon component\n+ *\n+ * A chevron-down icon that rotates based on the\n+ * expanded/collapsed state.\n+ *\n+ * @extends CPseudoBox\n+ * @see Docs https://vue.chakra-ui.com/accordion\n+ */\nconst CAccordionIcon = {\nname: 'CAccordionIcon',\ninject: ['$AccordionContext'],\n",
        "date": "01.04.2020 01:57:00",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "sim_msg": "refactor(components): adjust conditional when receive no value",
        "sim_diff": "diff --git a/packages/yoga/src/Accordion/web/Accordion.jsx b/packages/yoga/src/Accordion/web/Accordion.jsx @@ -157,7 +157,7 @@ const Accordion = ({ title, subtitle, children, disabled }) => {\n}}\n>\n<Title>\n- <Text color={disabled && 'deep'}>{title}</Text>\n+ <Text color={disabled ? 'deep' : undefined}>{title}</Text>\n<Text.Small color=\"deep\">{subtitle}</Text.Small>\n</Title>\n"
    },
    {
        "msg": "docs: npx to run dev dependencies",
        "diff": "diff --git a/README.md b/README.md @@ -25,7 +25,7 @@ It is also possible to install locally:\nnpm install --save-dev nodemon\n-With a local installation, nodemon will not be available in your system path. Instead, the local installation of nodemon can be run by calling it from within an npm script (such as `npm start`). Additionally, the `npm bin` command can be used to obtain the path to the project's local `.bin` directory.\n+With a local installation, nodemon will not be available in your system path. Instead, the local installation of nodemon can be run by calling it from within an npm script (such as `npm start`) or using `npx nodemon`.\n# Usage\n",
        "date": "04.09.2017 11:33:28",
        "repo": "remy/nodemon",
        "type": "docs",
        "sim_msg": "fix: Change node engine",
        "sim_diff": "diff --git a/package.json b/package.json \"license\": \"MIT\",\n\"scripts\": {\n\"build\": \"npm run clean && babel lib -d dist\",\n- \"build:standalone\": \"npm run build && pkg --targets node6-macos-x64,node6-win-x64 --debug --out-dir build .\",\n+ \"build:standalone\": \"npm run build && pkg --targets node8-macos-x64,node8-win-x64 --debug --out-dir build .\",\n\"build:package\": \"npm run build:standalone && script/package\",\n\"clean\": \"rimraf dist\",\n\"dev\": \"nodemon --exec npm run build -w lib\",\n\"yargs\": \"^8.0.2\"\n},\n\"engines\": {\n- \"node\": \">=6\"\n+ \"node\": \">=8\"\n},\n\"files\": [\n\"bin\",\n"
    },
    {
        "msg": "docs: how to provide theme with ThemePRovider",
        "diff": "diff --git a/src/main.js b/src/main.js import Vue from 'vue'\nimport App from './App.vue'\nimport './registerServiceWorker'\n-// import { provideTheme } from '@/lib/utils'\nimport Kiwi from './lib/plugin'\nVue.config.productionTip = false\n+// Install Kiwi plugin\nVue.use(Kiwi)\nnew Vue({\n+ // Alternative way to provide theme would be to import { provideTheme } from utils and provide it with render function\n// Provide theme to the root of the application\n// render: h => provideTheme(h, App)\nrender: h => h(App)\n",
        "date": "12.10.2019 18:43:12",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "sim_msg": "feat: add ability to use environment variables in vue.config.js",
        "sim_diff": "diff --git a/packages/@vue/cli-service/lib/Service.js b/packages/@vue/cli-service/lib/Service.js @@ -21,14 +21,14 @@ module.exports = class Service {\nthis.commands = {}\nthis.pkg = this.resolvePkg(pkg)\n+ // load base .env\n+ this.loadEnv()\n+\nconst userOptions = this.loadProjectOptions(projectOptions)\nthis.projectOptions = Object.assign(defaults(), userOptions)\ndebug('vue:project-config')(this.projectOptions)\n- // load base .env\n- this.loadEnv()\n-\n// install plugins.\n// If there are inline plugins, they will be used instead of those\n// found in package.json.\n"
    },
    {
        "msg": "docs: added persistence to auth in \"Full Configuration\"",
        "diff": "diff --git a/docs/guide/getting-started/README.md b/docs/guide/getting-started/README.md @@ -85,6 +85,7 @@ modules: [\nonFirebaseHosting: false,\nservices: {\nauth: {\n+ persistence: 'local',\ninitialize: {\nonAuthStateChangedMutation: \"SET_AUTH_USER\",\nonAuthStateChangedAction: null,\n",
        "date": "15.03.2020 22:45:10",
        "repo": "nuxt-community/firebase-module",
        "type": "docs",
        "sim_msg": "feat(firebase): add redirected info on getUser",
        "sim_diff": "diff --git a/packages/cerebral-provider-firebase/src/getUser.js b/packages/cerebral-provider-firebase/src/getUser.js @@ -13,13 +13,15 @@ export default function getUser () {\nuser.accessToken = result.credential.accessToken\n}\nresolve({\n- user: user\n+ user: user,\n+ isRedirected: true\n})\n} else {\nconst unsubscribe = firebase.auth().onAuthStateChanged(user => {\nunsubscribe()\nresolve({\n- user: user ? createUser(user) : null\n+ user: user ? createUser(user) : null,\n+ isRedirected: false\n})\n})\n}\n"
    },
    {
        "msg": "docs(TablesPage): Fix typo in docs",
        "diff": "diff --git a/docs/lib/Components/TablesPage.js b/docs/lib/Components/TablesPage.js @@ -39,7 +39,7 @@ export default class TablesPage extends React.Component {\n<h4>Properties</h4>\n<pre>\n<PrismCode className=\"language-jsx\">\n-{`Card.propTypes = {\n+{`Table.propTypes = {\n// Pass in a Component to override default element\ntag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\nsize: PropTypes.string,\n",
        "date": "30.03.2017 23:52:25",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "sim_msg": "feat: allow classNames to be passed to Table",
        "sim_diff": "diff --git a/src/components/common/table.js b/src/components/common/table.js import React from 'react'\n-const Table = ({ children }) => <table>{children}</table>\n+const Table = ({ children, className }) => (\n+ <table className={className}>{children}</table>\n+)\nexport default Table\n"
    },
    {
        "msg": "docs(LabelExampleImageColored): Update example\nReplace Veronika with jenny due to image name",
        "diff": "diff --git a/docs/src/examples/elements/Label/Types/LabelExampleImageColored.js b/docs/src/examples/elements/Label/Types/LabelExampleImageColored.js @@ -10,12 +10,12 @@ const LabelExampleImage = () => (\n</Label>\n<Label as='a' color='teal' image>\n<img src='/images/avatar/small/jenny.jpg' />\n- Veronika\n+ Jenny\n<Label.Detail>Friend</Label.Detail>\n</Label>\n<Label as='a' color='yellow' image>\n<img src='/images/avatar/small/christian.jpg' />\n- Helen\n+ Christian\n<Label.Detail>Co-worker</Label.Detail>\n</Label>\n</div>\n",
        "date": "24.07.2020 14:13:02",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "feat: Export file type labels",
        "sim_diff": "diff --git a/src/assets/file-types.js b/src/assets/file-types.js @@ -16,6 +16,16 @@ export const FILE_TYPE_PATTERNS = {\n[FILE_TYPE_HTML]: /\\.(html?)$/,\n};\n+export const FILE_TYPE_LABELS = {\n+ [FILE_TYPE_CSS]: 'CSS',\n+ [FILE_TYPE_JS]: 'JS',\n+ [FILE_TYPE_IMG]: 'IMG',\n+ [FILE_TYPE_MEDIA]: 'Media',\n+ [FILE_TYPE_FONT]: 'Fonts',\n+ [FILE_TYPE_HTML]: 'HTML',\n+ [FILE_TYPE_OTHER]: 'Other',\n+};\n+\nexport const FILE_TYPES = [\n...Object.keys(FILE_TYPE_PATTERNS),\nFILE_TYPE_OTHER,\n"
    },
    {
        "msg": "docs(Grid): fix typo in GridExampleStretched example description\nThe description of the `stretched` property of a grid row mentioned 'width', but should have mentioned 'height'.",
        "diff": "diff --git a/docs/src/examples/collections/Grid/Variations/index.js b/docs/src/examples/collections/Grid/Variations/index.js @@ -32,7 +32,7 @@ const GridVariationsExamples = () => (\n<ComponentExample\ntitle='Stretched'\n- description='A row can automatically resize all elements to split the available width evenly.'\n+ description='A row can automatically resize all elements to split the available height evenly.'\nexamplePath='collections/Grid/Variations/GridExampleStretched'\n/>\n<ComponentExample examplePath='collections/Grid/Variations/GridExampleStretchedEqual' />\n",
        "date": "24.09.2018 11:42:20",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "refactor(layout/grid): rmeove unnecesary breakpoint",
        "sim_diff": "diff --git a/components/layout/grid/src/gridItem/index.js b/components/layout/grid/src/gridItem/index.js @@ -79,7 +79,6 @@ LayoutGridItem.propTypes = {\n/**\n* Number of cells the component has to fill. It's applied for the `l` breakpoint and wider screens.\n*/\n-\nl: PropTypes.oneOf(CELL_NUMBERS),\n/**\n* Number of cells offset to move component. It's applied for the `l` breakpoint and wider screens.\n"
    },
    {
        "msg": "docs(stack): add stacking of html elements",
        "diff": "diff --git a/website/pages/stack.mdx b/website/pages/stack.mdx @@ -68,6 +68,19 @@ Pass the `isReversed` prop or set `direction` to `row-reverse` or `column-revers\n</c-stack>\n```\n+## Stacking HTML elements\n+The `CStack` element is able also to stack HTML elements. Internally it wraps HTML elements inside a `CBox` primitive\n+component and spaces it like it would any other Chakra component.\n+\n+```vue live=true\n+<c-stack :spacing=\"4\">\n+ <c-text>Chakra component 1</c-text>\n+ <p>HTML paragraph element</p>\n+ <h3>HTML heading element</h3>\n+ <c-text>Chakra component 2</c-text>\n+</c-stack>\n+```\n+\n## Props\n| Name | Type | Default | Description |\n",
        "date": "26.09.2020 22:28:20",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "sim_msg": "chore: Restore missing comma",
        "sim_diff": "diff --git a/src/technologies/c.json b/src/technologies/c.json 66\n],\n\"description\": \"Chakra UI is a simple, modular and accessible component library that gives you the building blocks you need to build your React applications.\",\n- \"dom\": \"html[style*='chakra-ui-color-mode'], body.chakra-ui-dark, body.chakra-ui-light, div.chakra-portal\"\n+ \"dom\": \"html[style*='chakra-ui-color-mode'], body.chakra-ui-dark, body.chakra-ui-light, div.chakra-portal\",\n\"icon\": \"Chakra UI.svg\",\n\"implies\": \"React\",\n\"oss\": true,\n"
    },
    {
        "msg": "docs: Fix code example for split button dropdowns",
        "diff": "diff --git a/docs/lib/Components/ButtonDropdownPage.js b/docs/lib/Components/ButtonDropdownPage.js @@ -107,7 +107,7 @@ DropdownToggle.propTypes = {\n<PrismCode className=\"language-jsx\">\n{`<ButtonDropdown isOpen={isOpen} toggle={toggle}>\n<Button id=\"caret\" color=\"primary\">{this.props.text}</Button>\n- <DropdownToggle caret color=\"primary\" />\n+ <DropdownToggle split color=\"primary\" />\n<DropdownMenu>\n<DropdownItem header>Header</DropdownItem>\n<DropdownItem disabled>Action</DropdownItem>\n",
        "date": "07.10.2020 21:56:10",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "sim_msg": "refactor: add ability to customize dropdown button",
        "sim_diff": "diff --git a/renderer/components/UI/Dropdown.js b/renderer/components/UI/Dropdown.js @@ -137,6 +137,35 @@ MenuItem.propTypes = {\nvalueField: PropTypes.string,\n}\n+const DefaultDropdownButton = ({\n+ onToggle,\n+ selectedItem,\n+ valueField,\n+ activeKey,\n+ isOpen,\n+ opacity: buttonOpacity,\n+}) => {\n+ return (\n+ <DropdownButton fontWeight=\"normal\" onClick={onToggle} opacity={buttonOpacity} type=\"button\">\n+ <Flex alignItems=\"center\">\n+ <Text css=\"white-space: nowrap;\" mr={1} textAlign=\"left\">\n+ {selectedItem ? selectedItem[valueField] : activeKey}{' '}\n+ </Text>\n+ <Flex color=\"gray\">{isOpen ? <AngleUp width=\"0.6em\" /> : <AngleDown width=\"0.6em\" />}</Flex>\n+ </Flex>\n+ </DropdownButton>\n+ )\n+}\n+\n+DefaultDropdownButton.propTypes = {\n+ activeKey: PropTypes.string,\n+ isOpen: PropTypes.bool,\n+ onToggle: PropTypes.func.isRequired,\n+ opacity: PropTypes.number,\n+ selectedItem: PropTypes.object,\n+ valueField: PropTypes.string,\n+}\n+\nconst Dropdown = ({\nactiveKey,\nitems,\n@@ -145,6 +174,7 @@ const Dropdown = ({\nonChange,\nmessageMapper,\nvalueField,\n+ buttonComponent: ButtonComponent,\n...rest\n}) => {\nconst intl = useIntl()\n@@ -185,21 +215,16 @@ const Dropdown = ({\nreturn (\n<div style={{ display: 'inline-block' }}>\n<DropdownContainer {...rest} ref={wrapperRef}>\n- <DropdownButton\n- fontWeight=\"normal\"\n- onClick={toggleMenu}\n- opacity={buttonOpacity}\n- type=\"button\"\n- >\n- <Flex alignItems=\"center\">\n- <Text css=\"white-space: nowrap;\" mr={1} textAlign=\"left\">\n- {selectedItem ? selectedItem[valueField] : activeKey}{' '}\n- </Text>\n- <Flex color=\"gray\">\n- {isOpen ? <AngleUp width=\"0.6em\" /> : <AngleDown width=\"0.6em\" />}\n- </Flex>\n- </Flex>\n- </DropdownButton>\n+ <ButtonComponent\n+ {...{\n+ onToggle: toggleMenu,\n+ selectedItem,\n+ valueField,\n+ activeKey,\n+ isOpen,\n+ opacity: buttonOpacity,\n+ }}\n+ />\n{isOpen && (\n<MenuContainer>\n<Menu ref={measuredRef} justify={justify} maxHeight={height}>\n@@ -224,10 +249,12 @@ const Dropdown = ({\nDropdown.defaultProps = {\nvalueField: 'value',\n+ buttonComponent: DefaultDropdownButton,\n}\nDropdown.propTypes = {\nactiveKey: PropTypes.string.isRequired,\n+ buttonComponent: PropTypes.elementType,\nbuttonOpacity: PropTypes.number,\nitems: PropTypes.array.isRequired,\njustify: PropTypes.string,\n"
    },
    {
        "msg": "docs(readme): add coreui project",
        "diff": "diff --git a/README.md b/README.md @@ -125,6 +125,7 @@ Organizations and projects using `reactstrap`\n- [availity-reactstrap-validation](https://availity.github.io/availity-reactstrap-validation/)\n- [component-template](https://reactstrap.github.io/component-template/)\n- [video-react](https://video-react.github.io/)\n+- [CoreUI-Free-Bootstrap-Admin-Template](https://github.com/mrholek/CoreUI-Free-Bootstrap-Admin-Template) - [demo](http://coreui.io/demo/React_Demo/#/)\nSubmit a PR to add to this list!\n",
        "date": "29.01.2017 15:42:23",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "sim_msg": "docs: add react template Varsarr",
        "sim_diff": "diff --git a/README.md b/README.md @@ -165,6 +165,7 @@ Use the \"Table of Contents\" menu on the top-left corner to explore the list.\n- [VRTTV](https://github.com/Drumpy/vrttv-boilerplate) - React + TypeScript + TailwindCSS + ESLint + Prettier + Husky + Conventional Commits + Gitmoji + GitHub Actions + Vercel Deploy.\n- [React Starter Kit](https://github.com/kriasoft/react-starter-kit) - Jamstack, React, React Router, Material UI, Firebase Auth, TypeScript, ESLint, Prettier, Jest, GitHub Actions.\n- [vite-mern-template](https://github.com/apicgg/vite-mern-template) - React 18 + TypeScript + Vite + Redux Toolkit + ESLint + React Router DOM + Axios + React Icons + React Toastify + Express + Mongoose.\n+- [Varsarr](https://github.com/altmshfkgudtjr/varsarr) - React, Typescript, Styled-Components, Recoil, React-Query, Axios, Absolute imports.\n#### Svelte\n"
    },
    {
        "msg": "docs: typo\ntypo",
        "diff": "diff --git a/README.md b/README.md @@ -162,7 +162,7 @@ Note that by default, nodemon will ignore the `.git`, `node_modules`, `bower_com\n## Application isn't restarting\n-In some networked environments (such as a container running nodemon reading across a mounted drive), you will need to use the `legacyWatch: true` which enabled Chokidar's polling.\n+In some networked environments (such as a container running nodemon reading across a mounted drive), you will need to use the `legacyWatch: true` which enables Chokidar's polling.\nVia the CLI, use either `--legacy-watch` or `-L` for short:\n",
        "date": "05.09.2017 04:20:59",
        "repo": "remy/nodemon",
        "type": "docs",
        "sim_msg": "ci(restore-node): verify no `yarn.lock` change after `yarn install`",
        "sim_diff": "diff --git a/.github/actions/restore-node/action.yml b/.github/actions/restore-node/action.yml @@ -38,10 +38,15 @@ runs:\nwith:\npath: .\nkey: ${{ runner.os }}-${{ runner.arch }}-${{ steps.system-info.outputs.release }}-node-${{ inputs.node-version }}-built-${{ inputs.xsnap-random-init }}-${{ github.sha }}\n- - name: yarn install --frozen-lockfile\n- run: yarn install --frozen-lockfile\n+ # This and the git diff below are to detect if `yarn install` results in a\n+ # change to the lock file.\n+ - name: yarn install\n+ run: yarn install\nshell: bash\nif: steps.built.outputs.cache-hit != 'true'\n+ - name: git diff --exit-code yarn.lock\n+ run: git diff --exit-code yarn.lock\n+ shell: bash\n- name: yarn build\nrun: yarn build\nshell: bash\n"
    },
    {
        "msg": "docs: add link to common problems",
        "diff": "diff --git a/packages/razzle/config/loadRazzleConfig.js b/packages/razzle/config/loadRazzleConfig.js @@ -11,7 +11,7 @@ const loadPlugins = require('./loadPlugins');\nmodule.exports = (webpackObject, razzleConfig, packageJsonIn) => {\nreturn new Promise(async resolve => {\nconsole.info(\"If you have issues with css make sure postcss resolves to v8.2.4.\");\n- console.info(\"See: \\n\");\n+ console.info(\"See: https://razzlejs.org/getting-started#common-problems\\n\");\nconsole.warn(\"CssMinimizerPlugin currently uses clean-css,\\nwe will switch to cssnano once it supports postcss v8.2.4.\\n\");\nlet razzle = razzleConfig || {};\n",
        "date": "22.02.2021 00:48:01",
        "repo": "jaredpalmer/razzle",
        "type": "docs",
        "sim_msg": "chore(build-config): remove obsolete dependency",
        "sim_diff": "diff --git a/packages/build-config/package.json b/packages/build-config/package.json \"postcss-cssnext\": \"^3.0.2\",\n\"postcss-import\": \"^11.0.0\",\n\"postcss-loader\": \"^2.0.9\",\n- \"serialize-javascript\": \"^1.4.0\",\n\"style-loader\": \"^0.19.0\",\n\"uglifyjs-webpack-plugin\": \"^1.1.1\",\n\"url-loader\": \"^0.6.2\",\n"
    },
    {
        "msg": "docs: add link to react website",
        "diff": "diff --git a/packages/chakra-ui-docs/components/Navbar.vue b/packages/chakra-ui-docs/components/Navbar.vue list-style-type=\"none\"\nml=\"auto\"\n>\n+ <CBox as=\"li\" mr=\"4\">\n+ <CLink color=\"gray.600\" :_hover=\"{ color : 'vue.400' }\" is-external href=\"https://chakra-ui.com/\">\n+ Chakra UI React\n+ </CLink>\n+ </CBox>\n<CBox as=\"li\" mr=\"4\">\n<CLink color=\"gray.500\" :_hover=\"{ color : 'vue.400' }\" is-external href=\"https://github.com/chakra-ui/chakra-ui-vue\">\n<CIcon name=\"github\" size=\"20px\" />\n",
        "date": "04.06.2020 18:15:00",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "sim_msg": "chore: Restore missing comma",
        "sim_diff": "diff --git a/src/technologies/c.json b/src/technologies/c.json 66\n],\n\"description\": \"Chakra UI is a simple, modular and accessible component library that gives you the building blocks you need to build your React applications.\",\n- \"dom\": \"html[style*='chakra-ui-color-mode'], body.chakra-ui-dark, body.chakra-ui-light, div.chakra-portal\"\n+ \"dom\": \"html[style*='chakra-ui-color-mode'], body.chakra-ui-dark, body.chakra-ui-light, div.chakra-portal\",\n\"icon\": \"Chakra UI.svg\",\n\"implies\": \"React\",\n\"oss\": true,\n"
    },
    {
        "msg": "docs(layout): Fix typo in layout example",
        "diff": "diff --git a/docs/lib/examples/Layout.js b/docs/lib/examples/Layout.js @@ -16,7 +16,7 @@ export default class Example extends React.Component {\n</Row>\n<Row>\n<Col xs=\"3\">.col-3</Col>\n- <Col xs=\"auto\">.col-auto - variabe width content</Col>\n+ <Col xs=\"auto\">.col-auto - variable width content</Col>\n<Col xs=\"3\">.col-3</Col>\n</Row>\n<Row>\n",
        "date": "14.02.2017 10:46:47",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "sim_msg": "chore(docs): Update grid docs to describe Col system",
        "sim_diff": "diff --git a/src/stories/2-components/01-Layout.stories.js b/src/stories/2-components/01-Layout.stories.js @@ -84,7 +84,21 @@ containerNarrow.story = {\n}\nexport const grids = () => (\n- <div className={grid.rowComponent}>\n+ <>\n+ <Row>\n+ <Col width={[4, 3, 3]}>\n+ <div className={grid.col}>{`<Col width={[4, 3, 3]}>`}</div>\n+ </Col>\n+ <Col width={[4, 3, 3]}>\n+ <div className={grid.col}>{`<Col width={[4, 3, 3]}>`}</div>\n+ </Col>\n+ <Col width={[4, 3, 3]}>\n+ <div className={grid.col}>{`<Col width={[4, 3, 3]}>`}</div>\n+ </Col>\n+ <Col width={[4, 3, 3]}>\n+ <div className={grid.col}>{`<Col width={[4, 3, 3]}>`}</div>\n+ </Col>\n+ </Row>\n<Row>\n<Col width={[1, 3, 6]}>\n<div className={grid.col}>{`<Col width={[1, 3, 6]}>`}</div>\n@@ -103,9 +117,37 @@ export const grids = () => (\n>{`<Col width={[1, 3, 4]} paddingLeft={[6, 8, 32]}>`}</div>\n</Col>\n</Row>\n- </div>\n+ <h4>Things to know</h4>\n+ <p>\n+ The grid system has a predfined number of cols per row for each screen\n+ size.\n+ </p>\n+ <ul>\n+ <li>Small - 4 cols</li>\n+ <li>Medium - 6 cols</li>\n+ <li>Large - 12 cols</li>\n+ </ul>\n+ <p>\n+ The <code>width</code> prop of the <code>Col</code> component takes an\n+ array which specifies the number of cols the item should take up for each\n+ screensize.\n+ </p>\n+ <code>\n+ {\n+ 'width={[<COLS_ON_SMALL_SCREEN>,<COLS_ON_MEDIUM_SCREEN>,<COLS_ON_LARGE_SCREEN>]}'\n+ }\n+ </code>\n+ </>\n)\n+grid.story = {\n+ parameters: {\n+ info: {\n+ text: 'Use the mixin `spacer([number]) to define margins and padding.',\n+ },\n+ },\n+}\n+\nexport const gridWithSass = () => (\n<div>\n<p>\n"
    },
    {
        "msg": "docs: documentation for spinner component",
        "diff": "diff --git a/packages/chakra-ui-docs/docs/spinner.mdx b/packages/chakra-ui-docs/docs/spinner.mdx +import SEO from '../components/SEO'\n+\n+<SEO\n+ title=\"Spinner\"\n+ description=\"Spinners provide a visual cue that an action is processing awaiting a course of change or a result.\"\n+/>\n+\n# Spinner\n+\n+Spinners provide a visual cue that an action is processing awaiting a course of change or a result.\n+\n+## Import\n+\n+```js\n+import { CSpinner } from '@chakra-ui/vue'\n+```\n+\n+## Usage\n+\n+```vue live=true\n+<c-spinner />\n+```\n+\n+### Spinner with Color\n+\n+```vue live=true\n+<c-spinner color=\"blue.500\" />\n+```\n+\n+### Spinner with different size\n+\n+```vue live=true\n+<c-stack is-inline :spacing=\"4\">\n+ <c-spinner size=\"xs\" />\n+ <c-spinner size=\"sm\" />\n+ <c-spinner size=\"md\" />\n+ <c-spinner size=\"lg\" />\n+ <c-spinner size=\"xl\" />\n+</c-stack>\n+```\n+\n+### Spinner with empty area color\n+\n+```vue live=true\n+<c-spinner\n+ thickness=\"4px\"\n+ speed=\"0.65s\"\n+ empty-color=\"green.200\"\n+ color=\"vue.500\"\n+ size=\"xl\"\n+/>\n+```\n+\n+## Props\n+\n+| Name | Type | Default | Description |\n+| ---------- | ------------------------ | ------------- | --------------------------------------------------------------- |\n+| size | `xl`,`lg`,`md`,`sm`,`xs` | `md` | The size of the spinner. |\n+| thickness | `string` | `2px` | The thickness of the spinner. |\n+| speed | `string` | `0.45s` | The speed of the spinner. |\n+| label | `string` | `Loading...` | An accessible label for the spinner (Useful for screen readers) |\n+| color | `string` | | The color of the spinner. |\n+| emptyColor | `string` | `transparent` | The color of the empty areas in the spinner. |\n",
        "date": "26.04.2020 21:06:57",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "sim_msg": "docs(components/atom/spinner/demo): fix demo classname",
        "sim_diff": "diff --git a/components/atom/spinner/demo/index.js b/components/atom/spinner/demo/index.js @@ -7,7 +7,7 @@ import {CLASS_SECTION} from './settings.js'\nconst Demo = () => {\nreturn (\n- <div className=\"sui-StudioPreview-content sui-StudioDemo-preview\">\n+ <div className=\"sui-StudioPreview\">\n<H1>Spinner</H1>\n<Paragraph>\nAn animated loop used for giving users feedback while the content of a\n"
    },
    {
        "msg": "docs(icon): documented parseFAIcons utils",
        "diff": "diff --git a/src/lib/utils/icons.js b/src/lib/utils/icons.js import merge from 'lodash-es/merge'\n+/**\n+ * @description Parse all Font Awesome Icons\n+ * @param {Object} iconSet - Registered Icons object\n+ * @returns {Object} - All Font awesome icons parsed.\n+ */\nconst parseFAIcons = (iconSet) => {\nconst parseFAIcon = (iconObject) => {\nconst { icon } = iconObject\n@@ -15,7 +20,6 @@ const parseFAIcons = (iconSet) => {\n.map(value => parseFAIcon(value))\n.reduce((target, source) => merge(target, source), {})\n- console.log({ result })\nreturn result\n}\n",
        "date": "28.10.2019 03:28:59",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "sim_msg": "docs(icon-add-ons): add add-ons",
        "sim_diff": "diff --git a/src/Icon/Icon.stories.jsx b/src/Icon/Icon.stories.jsx import React from 'react';\nimport { storiesOf } from '@storybook/react';\n+import centered from '@storybook/addon-centered';\n+import { checkA11y } from '@storybook/addon-a11y';\n+import { withInfo } from '@storybook/addon-info';\nimport FontAwesomeStyles from 'font-awesome/css/font-awesome.min.css';\nimport Icon from './index';\n+import README from './README.md';\nstoriesOf('Icon', module)\n+ .addDecorator((story, context) => withInfo({}, README)(story)(context))\n+ .addDecorator(centered)\n+ .addDecorator(checkA11y)\n.add('basic usage', () => (\n<Icon\nclassName={[\n"
    },
    {
        "msg": "docs(README): fix link to CSS Usage page",
        "diff": "diff --git a/README.md b/README.md @@ -112,6 +112,7 @@ This is a listing of example projects and guides that will help you integrate Se\n<details>\n<summary><b>How do I setup CSS?</b></summary>\n+\nThere are several options. Refer to our doc on [CSS Usage][23].\n</details>\n",
        "date": "12.10.2018 11:08:46",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "docs(readme): minor text improve on development section\n[skip ci]",
        "sim_diff": "diff --git a/README.md b/README.md @@ -48,7 +48,7 @@ Please read the [contribution guidelines](CONTRIBUTING.md).\n<details>\n<summary>\n- Check some example commands for development\n+ Check some example useful commands\n</summary>\n#### Compile template for production\n"
    },
    {
        "msg": "docs: fix typo on the front page",
        "diff": "diff --git a/packages/chakra-ui-docs/components/Hero.vue b/packages/chakra-ui-docs/components/Hero.vue is-external\nhref=\"https://chakra-ui.com/\"\n>\n- Looking for React.js verison?\n+ Looking for React.js version?\n</CLink>\n</CFlex>\n</CFlex>\n",
        "date": "09.06.2020 08:22:25",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "sim_msg": "fix(link): default href to null\nBy explictly setting it to # ssr rendered links will overriden to # even if they hav to prop",
        "sim_diff": "diff --git a/lib/components/link.js b/lib/components/link.js @@ -15,7 +15,7 @@ export function propsFactory() {\nreturn {\nhref: {\ntype: String,\n- default: \"#\"\n+ default: null\n},\nrel: {\ntype: String,\n"
    },
    {
        "msg": "docs: added docs for using Chakra UI Vue CLI plugin",
        "diff": "diff --git a/packages/chakra-ui-docs/docs/getting-started.mdx b/packages/chakra-ui-docs/docs/getting-started.mdx # Getting Started\nInstall Chakra UI and it's peer dependency, `emotion`\n+\n<br />\n```bash\nyarn add @chakra-ui/vue emotion\n```\n+\nor (with npm)\n```bash\nnpm install @chakra-ui/vue emotion --save\n```\n+### With Vue CLI plugin\n+\n+If you are using Vue CLI 3, then you can install Chakra UI and get a base setup using the Chakra UI [plugin](https://www.npmjs.com/package/vue-cli-plugin-chakra-ui).\n+\n+```bash\n+vue add chakra-ui\n+```\n+\n### With Nuxt.js\n-If you're using Nuxt, you need to install `@nuxtjs/emotion` package as well to server-side render your styles.\n+If you're using Nuxt, you need to install `@nuxtjs/emotion` package as well to server-side render your styles.\n```bash\nyarn add @chakra-ui/vue emotion @nuxtjs/emotion\n@@ -22,39 +32,37 @@ yarn add @chakra-ui/vue emotion @nuxtjs/emotion\nCreate a theme object to include custom color, typography, and layout values. Chakra UI comes with a default theme, so this step is optional.\n-\n-\n```js\n// example theme.js\nexport default {\n- breakpoints: [\"30em\", \"48em\", \"62em\", \"80em\"],\n+ breakpoints: ['30em', '48em', '62em', '80em'],\nfonts: {\nheading: '\"Avenir Next\", sans-serif',\n- body: \"system-ui, sans-serif\",\n- mono: \"Menlo, monospace\",\n+ body: 'system-ui, sans-serif',\n+ mono: 'Menlo, monospace'\n},\nfontSizes: {\n- xs: \"0.75rem\",\n- sm: \"0.875rem\",\n- md: \"1rem\",\n- lg: \"1.125rem\",\n- xl: \"1.25rem\",\n- \"2xl\": \"1.5rem\",\n- \"3xl\": \"1.875rem\",\n- \"4xl\": \"2.25rem\",\n- \"5xl\": \"3rem\",\n- \"6xl\": \"4rem\",\n- },\n-};\n+ xs: '0.75rem',\n+ sm: '0.875rem',\n+ md: '1rem',\n+ lg: '1.125rem',\n+ xl: '1.25rem',\n+ '2xl': '1.5rem',\n+ '3xl': '1.875rem',\n+ '4xl': '2.25rem',\n+ '5xl': '3rem',\n+ '6xl': '4rem'\n+ }\n+}\n```\n## Usage\n+\n**1. Import the Chakra UI plugin in your `main.js` file.**\nIn order to use Chakra, you need to wrap your main application inside the Chakra `CThemeProvider` component.\nYou can do so as shown below.\n-\n```js\nimport Vue from 'vue'\nimport Chakra, { CThemeProvider } from '@chakra-ui/vue'\n@@ -64,14 +72,12 @@ Vue.use(Chakra)\nnew Vue({\nel: '#app',\n- render: (h) => h(CThemeProvider, [\n- h(App)\n- ])\n+ render: (h) => h(CThemeProvider, [h(App)])\n}).$mount()\n```\n-\nIf you'd like to add extend the Chakra theme with custom brand colors you can do so as shown below. This is also optional.\n+\n<br />\n```js\n@@ -84,24 +90,22 @@ Vue.use(Chakra, {\ncolors: {\n...defaultTheme.colors,\nbrand: {\n- 900: \"#1a365d\",\n- 800: \"#153e75\",\n- 700: \"#2a69ac\",\n- },\n+ 900: '#1a365d',\n+ 800: '#153e75',\n+ 700: '#2a69ac'\n+ }\n}\n}\n})\nnew Vue({\nel: '#app',\n- render: (h) => h(CThemeProvider, [\n- h(App)\n- ])\n+ render: (h) => h(CThemeProvider, [h(App)])\n}).$mount()\n```\n-\n## Injecting Global Styles.\n+\nSometimes you may need to apply css reset styles to your application.\nChakra UI exports a `CReset` that'll remove browser default styles. It's heavily inspired by [Tailwind's preflight](https://unpkg.com/tailwindcss@1.1.2/dist/base.css)\n@@ -116,10 +120,7 @@ Vue.use(Chakra)\nnew Vue({\nel: '#app',\n- render: (h) => h(CThemeProvider, [\n- h(CReset),\n- h(App)\n- ])\n+ render: (h) => h(CThemeProvider, [h(CReset), h(App)])\n}).$mount()\n```\n@@ -150,10 +151,11 @@ export default {\n```\n### Codesandbox starters\n+\n- [Vue Starter](https://codesandbox.io/s/chakra-ui-vue-starter-2sy0g)\n- [Nuxt Starter](https://codesandbox.io/s/chakra-ui-nuxt-demo-f8tq4)\n- [Gridsome Starter](https://codesandbox.io/s/chakra-ui-gridsome-demo-038c9)\n-\n### Storybook Components\n+\nYou can also view all developed components in [Storybook](https://chakra-ui-vue.netlify.com)!\n",
        "date": "08.05.2020 22:25:19",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "sim_msg": "chore: Restore missing comma",
        "sim_diff": "diff --git a/src/technologies/c.json b/src/technologies/c.json 66\n],\n\"description\": \"Chakra UI is a simple, modular and accessible component library that gives you the building blocks you need to build your React applications.\",\n- \"dom\": \"html[style*='chakra-ui-color-mode'], body.chakra-ui-dark, body.chakra-ui-light, div.chakra-portal\"\n+ \"dom\": \"html[style*='chakra-ui-color-mode'], body.chakra-ui-dark, body.chakra-ui-light, div.chakra-portal\",\n\"icon\": \"Chakra UI.svg\",\n\"implies\": \"React\",\n\"oss\": true,\n"
    },
    {
        "msg": "docs: add margin to docs pages",
        "diff": "diff --git a/website/layouts/default.vue b/website/layouts/default.vue >\n<CReset />\n<Navbar />\n- <CFlex max-h=\"calc(100vh - 60px)\">\n+ <CFlex\n+ max-h=\"calc(100vh - 60px)\"\n+ max-w=\"1440px\"\n+ mx=\"auto\"\n+ >\n<Sidebar />\n<CBox\nid=\"main-content\"\n",
        "date": "17.08.2021 16:07:41",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "sim_msg": "chore(docs): improve logo spin on header",
        "sim_diff": "diff --git a/docs/src/layouts/DocLayout.vue b/docs/src/layouts/DocLayout.vue @@ -192,10 +192,6 @@ export default {\n.header\nbackground-color: $grey-4\n-.header-logo\n- width: 25px\n- height: 25px\n-\n.doc-layout__main-btn\nwidth: 268px\n@@ -228,6 +224,7 @@ export default {\nwidth: 38px\nheight: 38px\nmargin-right: 8px\n+ border-radius: 50%\n&:hover &__img\ntransform: rotate(-360deg)\n"
    },
    {
        "msg": "docs(options): analytics and remote config description\nAnalytics and Remote Config options descriptions were referencing Storage.",
        "diff": "diff --git a/docs/guide/options/README.md b/docs/guide/options/README.md @@ -556,7 +556,7 @@ performance: true\n### analytics\n-Initializes Firebase Storage and makes it available via `$fireAnalytics` and `$fireAnalyticsObj`.\n+Initializes Firebase Analytics and makes it available via `$fireAnalytics` and `$fireAnalyticsObj`.\n- Type: `Boolean` or `Object`\n- Default: `false`\n@@ -567,7 +567,7 @@ analytics: true\n### remoteConfig\n-Initializes Firebase Storage and makes it available via `$fireConfig` and `$fireConfigObj`.\n+Initializes Firebase Remote Config and makes it available via `$fireConfig` and `$fireConfigObj`.\n- Type: `Boolean` or `Object`\n- Default: `false`\n",
        "date": "10.05.2020 22:07:50",
        "repo": "nuxt-community/firebase-module",
        "type": "docs",
        "sim_msg": "feat: automatically call ready callback if instance ready",
        "sim_diff": "diff --git a/packages/analytics-core/src/index.js b/packages/analytics-core/src/index.js @@ -276,6 +276,7 @@ function analytics(config = {}) {\n...parsedOptions.methods\n}\n+ let readyCalled = false\n/**\n* Analytic instance returned from initialization\n* @typedef {Object} AnalyticsInstance\n@@ -546,7 +547,12 @@ function analytics(config = {}) {\n* })\n*/\nready: (callback) => {\n- return instance.on(EVENTS.ready, callback)\n+ // If ready already fired. Call callback immediately\n+ if (readyCalled) callback({ plugins, instance })\n+ return instance.on(EVENTS.ready, (x) => {\n+ callback(x)\n+ readyCalled = true\n+ })\n},\n/**\n* Attach an event handler function for analytics lifecycle events.\n"
    },
    {
        "msg": "docs(routes): fix layout component imports",
        "diff": "diff --git a/docs/src/routes.js b/docs/src/routes.js @@ -4,8 +4,8 @@ import { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom'\nimport ExternalExampleLayout from './components/ExternalExampleLayout'\nimport DocsLayout from './components/DocsLayout'\nimport DocsRoot from './components/DocsRoot'\n-import LayoutsLayout from './components/layoutsLayout'\n-import LayoutsRoot from './components/layoutsRoot'\n+import LayoutsLayout from './components/LayoutsLayout'\n+import LayoutsRoot from './components/LayoutsRoot'\nimport Introduction from './views/Introduction'\nimport Layouts from './views/layouts'\n",
        "date": "02.06.2018 20:02:08",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "docs: fix csr heading dupes",
        "sim_diff": "diff --git a/website/lib/components/Layout.js b/website/lib/components/Layout.js @@ -4,7 +4,7 @@ import cn from 'classnames';\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport {useRouter} from 'next/router';\n-import {useMemo, useRef, useState} from 'react';\n+import {useRef, useState} from 'react';\nimport {ExternalLink, Menu} from 'react-feather';\nimport useIsomorphicLayoutEffect from 'use-isomorphic-layout-effect';\n@@ -296,7 +296,7 @@ const slugify = (str) =>\n.replace(/[.:'\"<>!@#$%^&*()[\\]]/g, '');\nconst linkify =\n- (Tag, headings) =>\n+ (Tag, headings, pathname) =>\n({children, ...props}) => {\nconst url = slugify(\ntypeof children !== 'string'\n@@ -304,12 +304,17 @@ const linkify =\n: children\n);\n- const count = headings.filter(\n- (value) => value === url\n- ).length;\n- const id = count === 0 ? url : `${url}-${count}`;\n+ if (\n+ headings.some((heading) => heading.pathname !== pathname)\n+ ) {\n+ // Reset the headings store.\n+ headings.length = 0;\n+ }\n- headings.push(url);\n+ const dupeCount = headings.filter(\n+ ({url: u}) => u === url\n+ ).length;\n+ const id = dupeCount === 0 ? url : `${url}-${dupeCount}`;\nreturn (\n<Tag {...props} id={id}>\n@@ -355,6 +360,8 @@ const components = {\n},\n};\n+const initialHeadings = [];\n+\nexport default function Layout({children}) {\nconst {pathname, events} = useRouter();\nconst index = nav.findIndex(({url}) => url === pathname) ?? 0;\n@@ -362,7 +369,14 @@ export default function Layout({children}) {\nconst navRef = useRef();\nconst activeLinkRef = useRef();\nconst [hash, setHash] = useState(null);\n- const [headings, setHeadings] = useState([]);\n+ const [computedComponents, setComputedComponents] = useState({\n+ ...components,\n+ h2: linkify('h2', initialHeadings, pathname),\n+ h3: linkify('h3', initialHeadings, pathname),\n+ h4: linkify('h4', initialHeadings, pathname),\n+ h5: linkify('h5', initialHeadings, pathname),\n+ h6: linkify('h6', initialHeadings, pathname),\n+ });\nconst displayNavigation = nav[index] != null;\n@@ -374,6 +388,15 @@ export default function Layout({children}) {\nsetHash(location.hash);\nfunction onRouteChangeComplete() {\n+ const headings = [];\n+ setComputedComponents({\n+ ...components,\n+ h2: linkify('h2', headings, pathname),\n+ h3: linkify('h3', headings, pathname),\n+ h4: linkify('h4', headings, pathname),\n+ h5: linkify('h5', headings, pathname),\n+ h6: linkify('h6', headings, pathname),\n+ });\nsetHash(null);\ndocument.querySelector('#focus-root').focus();\n}\n@@ -383,7 +406,7 @@ export default function Layout({children}) {\nreturn () => {\nevents.off('routeChangeComplete', onRouteChangeComplete);\n};\n- }, [events]);\n+ }, [events, pathname]);\nconst articleRef = useRef();\nconst [anchors, setAnchors] = useState([]);\n@@ -402,10 +425,6 @@ export default function Layout({children}) {\nsetAnchors(localAnchors);\nsetNavOpen(false);\n-\n- return () => {\n- setHeadings([]);\n- };\n}, [pathname]);\nlet currentParentIndex = null;\n@@ -429,18 +448,6 @@ export default function Layout({children}) {\nnav.find(({url}) => url === pathname)?.title ?? 'Docs'\n} | Floating UI`;\n- const computedComponents = useMemo(\n- () => ({\n- ...components,\n- h2: linkify('h2', headings),\n- h3: linkify('h3', headings),\n- h4: linkify('h4', headings),\n- h5: linkify('h5', headings),\n- h6: linkify('h6', headings),\n- }),\n- [headings]\n- );\n-\nreturn (\n<MDXProvider components={computedComponents}>\n<Head>\n"
    },
    {
        "msg": "docs(Collapse): Document the defaultOpen prop\nAdds a sentence to describe the defaultOpen prop.",
        "diff": "diff --git a/docs/lib/Components/CollapsePage.js b/docs/lib/Components/CollapsePage.js @@ -68,7 +68,8 @@ export default class CollapsePage extends React.Component {\nwanted without the need to manage/control the state of the component.{' '}\n<code>UncontrolledCollapse</code> does not require an <code>isOpen</code> prop. Instead\npass a <code>toggler</code> prop. The <code>toggler</code> prop is a string which will run\n- querySelectorAll to find dom elements which will trigger toggle.\n+ querySelectorAll to find dom elements which will trigger toggle. The <code>defaultOpen</code>\n+ prop controls the initial state.\n</p>\n<div className=\"docs-example\">\n<UncontrolledCollapseExample />\n",
        "date": "07.10.2020 22:06:43",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "sim_msg": "fix(Models): onLoad should check this.props.layoutSelectors method\nref",
        "sim_diff": "diff --git a/src/core/components/model-collapse.jsx b/src/core/components/model-collapse.jsx @@ -65,7 +65,7 @@ export default class ModelCollapse extends Component {\n}\nonLoad = (ref) => {\n- if(ref) {\n+ if (ref && this.props.layoutSelectors) {\nconst scrollToKey = this.props.layoutSelectors.getScrollToKey()\nif( Im.is(scrollToKey, this.props.specPath) ) this.toggleCollapsed()\n"
    },
    {
        "msg": "docs: was used",
        "diff": "diff --git a/website/pages/docs/customization.md b/website/pages/docs/customization.md @@ -129,7 +129,7 @@ module.exports = {\noptions: {\npluginOptions, // the options passed to the plugin ({ name:'pluginname', options: { key: 'value'}})\nrazzleOptions, // the modified options passed to Razzle in the `options` key in `razzle.config.js` (options: { key: 'value'})\n- webpackOptions // the modified options that will be used to configure webpack/ webpack loaders and plugins\n+ webpackOptions // the modified options that was used to configure webpack/ webpack loaders and plugins\n},\npaths // the modified paths that will be used by Razzle.\n}) {\n",
        "date": "28.08.2020 17:41:20",
        "repo": "jaredpalmer/razzle",
        "type": "docs",
        "sim_msg": "feat(hops-build-config): add source maps to production build output",
        "sim_diff": "diff --git a/packages/build-config/configs/build.js b/packages/build-config/configs/build.js @@ -26,6 +26,7 @@ module.exports = {\nmodule: {\nrules: require('../sections/module-rules')('build')\n},\n+ devtool: 'source-map',\nplugins: [\nnew WriteFilePlugin(/^manifest\\.js?$/),\nnew WriteManifestPlugin(),\n@@ -61,9 +62,9 @@ module.exports = {\nnew webpack.LoaderOptionsPlugin({\ndebug: false,\nminimize: true,\n- sourceMap: false\n+ sourceMap: true\n}),\nnew webpack.optimize.ModuleConcatenationPlugin(),\n- new UglifyPlugin()\n+ new UglifyPlugin({ sourceMap: true })\n]\n};\n"
    },
    {
        "msg": "docs(Form): fix group variations typo\ndocs(Form): fix group variations typo",
        "diff": "diff --git a/docs/app/Examples/collections/Form/GroupVariations/index.js b/docs/app/Examples/collections/Form/GroupVariations/index.js @@ -12,7 +12,7 @@ const FormGroupVariationsExamples = () => (\nexamplePath='collections/Form/GroupVariations/FormExampleEvenlyDividedGroup'\n>\n<Message info>\n- When using the <code>widths='even'</code> prop declaration on a <code>Form.Group</code>,\n+ When using the <code>widths='equal'</code> prop declaration on a <code>Form.Group</code>,\nall child <code>Form.Dropdown</code>, <code>Form.Input</code>, <code>Form.Select</code>\ncomponents must be rendered with a <code>fluid</code> prop to work correctly.\n</Message>\n",
        "date": "24.05.2018 15:35:27",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "docs(form/input): update errorState docs",
        "sim_diff": "diff --git a/components/form/input/src/index.js b/components/form/input/src/index.js @@ -50,7 +50,7 @@ FormInput.propTypes = {\ndisabled: PropTypes.bool,\n/* 's' or 'm', default: 'm' */\nsize: PropTypes.oneOf(Object.values(inputSizes)),\n- /* optional: 'success' or 'error' */\n+ /* true = error, false = success, null = neutral */\nerrorState: PropTypes.bool,\n/* value of the control */\nvalue: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n"
    },
    {
        "msg": "docs(ModalExampleScrollingContent): your description\nTo conform with typescript definition files",
        "diff": "diff --git a/docs/app/Examples/modules/Modal/Variations/ModalExampleScrollingContent.js b/docs/app/Examples/modules/Modal/Variations/ModalExampleScrollingContent.js @@ -27,7 +27,7 @@ const ModalExampleScrollingContent = () => (\n</Modal.Content>\n<Modal.Actions>\n<Button primary>\n- Proceed <Icon name='right chevron' />\n+ Proceed <Icon name='chevron right' />\n</Button>\n</Modal.Actions>\n</Modal>\n",
        "date": "22.05.2018 00:40:06",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "fix(popup): fix close button position",
        "sim_diff": "diff --git a/src/renderer/common/popup.jsx b/src/renderer/common/popup.jsx @@ -6,6 +6,9 @@ const styles = theme => ({\nmodal: {\noverflow: 'auto'\n},\n+ closeButton: {\n+ top: '20px'\n+ },\ntitle: {\n// verticalAlign: 'middle',\n// lineHeight: '30px'\n@@ -15,7 +18,7 @@ const styles = theme => ({\nexport const Popup = withStyles(styles)(({ classes, children, closeAction, text, open = true }) => (\n<Modal open={open} className={classes.modal}>\n<ModalWrap>\n- <ModalCloseButton onClick={closeAction}>\n+ <ModalCloseButton onClick={closeAction} className={classes.closeButton}>\n<ModalCloseIcon />\n</ModalCloseButton>\n<ModalHeader>\n"
    },
    {
        "msg": "docs(readme): add badges for CDN, NPM, and license + CDN info.",
        "diff": "diff --git a/README.md b/README.md [![reactstrap](https://cloud.githubusercontent.com/assets/399776/13906899/1de62f0c-ee9f-11e5-95c0-c515fee8e918.png)](https://reactstrap.github.io)\n-[![Build Status](https://travis-ci.org/reactstrap/reactstrap.svg?branch=master)](https://travis-ci.org/reactstrap/reactstrap) [![Coverage Status](https://coveralls.io/repos/github/reactstrap/reactstrap/badge.svg?branch=master)](https://coveralls.io/github/reactstrap/reactstrap?branch=master)\n+[![CDNJS](https://img.shields.io/cdnjs/v/reactstrap.svg)](https://cdnjs.com/libraries/reactstrap) [![NPM Version](https://img.shields.io/npm/v/reactstrap.svg?branch=master)](https://www.npmjs.com/package/reactstrap) [![Build Status](https://travis-ci.org/reactstrap/reactstrap.svg?branch=master)](https://travis-ci.org/reactstrap/reactstrap) [![Coverage Status](https://coveralls.io/repos/github/reactstrap/reactstrap/badge.svg?branch=master)](https://coveralls.io/github/reactstrap/reactstrap?branch=master) [![License](https://img.shields.io/npm/l/reactstrap.svg)](https://github.com/reactstrap/reactstrap/blob/master/LICENSE)\n# reactstrap\n@@ -45,6 +45,19 @@ import { Button } from 'reactstrap';\nNow you are ready to use the imported reactstrap components within your component hierarchy defined in the render method. Here is an example [`App.js`](https://gist.github.com/eddywashere/e13033c0e655ab7cda995f8bc77ce40d) redone using reactstrap.\n+### CDN\n+\n+Reactstrap can be included directly in your application's bundle or excluded during compilation and linked directly to a CDN.\n+\n+```html\n+https://cdnjs.cloudflare.com/ajax/libs/reactstrap/4.8.0/reactstrap.min.js\n+```\n+\n+> Note: When using the external CDN library, be sure to include the required dependencies as necessary **prior** to the Reactstrap library:\n+> * [React](https://cdnjs.com/libraries/react)\n+> * [ReactTransitionGroup](https://unpkg.com/react-transition-group/dist/react-transition-group.min.js)\n+\n+\n## About the Project\nThis library contains React Bootstrap 4 components that favor composition and control. The library does not depend on jQuery or Bootstrap javascript. However, [Tether](http://tether.io/) is relied upon for advanced positioning of content like Tooltips, Popovers, and auto-flipping Dropdowns.\n",
        "date": "01.07.2017 11:06:55",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "sim_msg": "docs: remove codeship badge",
        "sim_diff": "diff --git a/README.md b/README.md -# Carbon [![Codeship Status](https://img.shields.io/codeship/dd2c7bd0-6c4e-0133-1f77-72bb5571e5ad/master.svg)](https://app.codeship.com/projects/115478) [![Travis Status](https://travis-ci.org/Sage/carbon.svg?branch=master)](https://travis-ci.org/Sage/carbon) [![npm](https://img.shields.io/npm/v/carbon-react.svg)](https://www.npmjs.com/package/carbon-react)\n+# Carbon [![Travis Status](https://travis-ci.org/Sage/carbon.svg?branch=master)](https://travis-ci.org/Sage/carbon) [![npm](https://img.shields.io/npm/v/carbon-react.svg)](https://www.npmjs.com/package/carbon-react)\n<img src=\"https://raw.githubusercontent.com/Sage/carbon/master/logo/carbon-logo.png\" width=\"50\">\n"
    },
    {
        "msg": "docs: update radio/checkbox examples to follow docs\n<input> and <label> should be siblings\n<input> should before after <label>",
        "diff": "diff --git a/docs/lib/examples/InlineCheckboxes.js b/docs/lib/examples/InlineCheckboxes.js @@ -5,13 +5,15 @@ const Example = (props) => {\nreturn (\n<Form>\n<FormGroup check inline>\n- <Label check>\n- <Input type=\"checkbox\" /> Some input\n+ <Input id=\"InlineCheckboxes-checkbox-1\" type=\"checkbox\" />\n+ <Label for=\"InlineCheckboxes-checkbox-1\" check>\n+ Some input\n</Label>\n</FormGroup>\n<FormGroup check inline>\n- <Label check>\n- <Input type=\"checkbox\" /> Some other input\n+ <Input id=\"InlineCheckboxes-checkbox-2\" type=\"checkbox\" />\n+ <Label for=\"InlineCheckboxes-checkbox-2\" check>\n+ Some other input\n</Label>\n</FormGroup>\n</Form>\n@@ -19,4 +21,3 @@ const Example = (props) => {\n}\nexport default Example;\n-\n\\ No newline at end of file\n",
        "date": "11.12.2020 15:41:19",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "sim_msg": "refactor(form/checkboxList): format js with new rules",
        "sim_diff": "diff --git a/components/form/checkboxList/src/index.js b/components/form/checkboxList/src/index.js @@ -18,29 +18,32 @@ const FormCheckboxList = ({\noptions,\nhandleChange,\nselectedValues\n-} = {}) =>\n- <div className='sui-FormCheckboxList'>\n- {options.map((\n- { value, label, checked = isChecked({ selectedValues, value }) },\n- index\n- ) =>\n- <label key={index} className={labelClassName({\n+} = {}) => (\n+ <div className=\"sui-FormCheckboxList\">\n+ {options.map(\n+ ({value, label, checked = isChecked({selectedValues, value})}, index) => (\n+ <label\n+ key={index}\n+ className={labelClassName({\nclassNameItem,\nvalue,\nchecked\n- })}>\n+ })}\n+ >\n<input\n- type='checkbox'\n+ type=\"checkbox\"\nvalue={value}\nchecked={checked}\nname={name}\nonChange={handleChange}\n- className='sui-FormCheckboxList-input'\n+ className=\"sui-FormCheckboxList-input\"\n/>\n{label}\n</label>\n+ )\n)}\n</div>\n+)\nFormCheckboxList.displayName = 'FormCheckboxList'\n@@ -55,8 +58,8 @@ FormCheckboxList.propTypes = {\nPropTypes.string.isRequired\n]),\nlabel: PropTypes.string.isRequired\n- }\n- )),\n+ })\n+ ),\nhandleChange: PropTypes.func.isRequired,\nselectedValues: PropTypes.arrayOf(\nPropTypes.oneOfType([\n"
    },
    {
        "msg": "docs(Theming): use plugin",
        "diff": "diff --git a/docs/src/pages/Theming.mdx b/docs/src/pages/Theming.mdx @@ -80,14 +80,14 @@ yarn remove semantic-ui semantic-ui-css\n### Install required dependencies\n-Create React App does not support LESS out of the box, we and propose to use [`@craco/craco`](https://www.npmjs.com/package/@craco/craco) to add it and avoid `eject`. You have to install required packages:\n+Create React App does not support LESS out of the box, we and propose to use [`@craco/craco`](https://www.npmjs.com/package/@craco/craco) to add its support and avoid `eject`. You have to install required packages:\n```bash\n-npm install @craco/craco craco-less semantic-ui-less --save-dev\n+npm install @craco/craco @semantic-ui-react/craco-less semantic-ui-less --save-dev\n```\n```bash\n-yarn add @craco/craco craco-less semantic-ui-less --dev\n+yarn add @craco/craco @semantic-ui-react/craco-less semantic-ui-less --dev\n```\nAnd then update your `package.json` and create `craco.config.js`:\n@@ -104,39 +104,8 @@ And then update your `package.json` and create `craco.config.js`:\n```\n```jsx label=craco.config.js\n-const { getLoader, loaderByName, throwUnexpectedConfigError } = require('@craco/craco')\n-\nmodule.exports = {\n- webpack: {\n- alias: {\n- '../../theme.config$': require('path').join(__dirname, '/src/semantic-ui/theme.config'),\n- },\n- },\n- plugins: [\n- { plugin: require('craco-less') },\n- {\n- plugin: {\n- overrideWebpackConfig: ({ context, webpackConfig }) => {\n- const { isFound, match: fileLoaderMatch } = getLoader(\n- webpackConfig,\n- loaderByName('file-loader'),\n- )\n-\n- if (!isFound) {\n- throwUnexpectedConfigError({\n- message: `Can't find file-loader in the ${context.env} webpack config!`,\n- })\n- }\n-\n- fileLoaderMatch.loader.exclude.push(/theme.config$/)\n- fileLoaderMatch.loader.exclude.push(/\\.variables$/)\n- fileLoaderMatch.loader.exclude.push(/\\.overrides$/)\n-\n- return webpackConfig\n- },\n- },\n- },\n- ],\n+ plugins: [{ plugin: require('@semantic-ui-react/craco-less') }],\n}\n```\n",
        "date": "29.08.2019 15:47:10",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "docs(Usage): create-react-app link added",
        "sim_diff": "diff --git a/src/documentation/Usage/UsageDevelopers.stories.mdx b/src/documentation/Usage/UsageDevelopers.stories.mdx @@ -26,6 +26,8 @@ The UI Kit provides developers with **React.js components, scss, css, html and a\nTo kickstart your new project with the Kit, we do recommend to **generate a boilerplate React app** with the official [create-react-app](https://github.com/facebook/create-react-app) tool: you will be provided with a solid build setup with zero effort (that is, no configuration needed on your part).\n+An example implementation using `create-react-app` and `scss` can be found in our [GitHub repository](https://github.com/wfp/ui/tree/master/examples/create-react-app).\n+\n## 2. Add the Kit as a dependency\nThe next step is to **add the Kit to your project as a dependancy**. You can choose to install it through `npm` or `yarn`: they are both valid package managers and we don't want to recommend one over the other, but once you pick your favourite tool, simply stick with it and avoid using them simultaneously.\n"
    },
    {
        "msg": "docs: updated installed version",
        "diff": "diff --git a/package.json b/package.json \"@babel/plugin-transform-modules-commonjs\": \"^7.7.4\",\n\"@babel/plugin-transform-parameters\": \"^7.7.4\",\n\"@babel/preset-env\": \"^7.9.5\",\n- \"@chakra-ui/vue\": \"^0.5.3\",\n+ \"@chakra-ui/vue\": \"^0.5.4\",\n\"@commitlint/cli\": \"^8.2.0\",\n\"@commitlint/config-conventional\": \"^8.2.0\",\n\"@fortawesome/free-brands-svg-icons\": \"^5.12.0\",\n",
        "date": "16.05.2020 21:05:46",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "sim_msg": "build(npm): :arrow_up: eslint, eslint-plugin-mocha, eslint-plugin-unicorn, lint-staged, mocha, typescript, upem",
        "sim_diff": "diff --git a/package.json b/package.json \"wrap-ansi\": \"7.0.0\"\n},\n\"devDependencies\": {\n- \"@babel/core\": \"7.9.6\",\n- \"@babel/plugin-transform-modules-commonjs\": \"7.9.6\",\n+ \"@babel/core\": \"7.10.2\",\n+ \"@babel/plugin-transform-modules-commonjs\": \"7.10.1\",\n\"chai\": \"4.2.0\",\n\"chai-json-schema\": \"1.5.1\",\n\"coffeescript\": \"2.5.1\",\n- \"eslint\": \"7.0.0\",\n+ \"eslint\": \"7.1.0\",\n\"eslint-config-moving-meadow\": \"2.0.2\",\n\"eslint-config-prettier\": \"6.11.0\",\n\"eslint-plugin-budapestian\": \"2.0.0\",\n\"eslint-plugin-import\": \"2.20.2\",\n- \"eslint-plugin-mocha\": \"7.0.0\",\n+ \"eslint-plugin-mocha\": \"7.0.1\",\n\"eslint-plugin-node\": \"11.1.0\",\n\"eslint-plugin-security\": \"1.4.0\",\n- \"eslint-plugin-unicorn\": \"20.0.0\",\n+ \"eslint-plugin-unicorn\": \"20.1.0\",\n\"husky\": \"4.2.5\",\n\"intercept-stdout\": \"0.1.2\",\n- \"lint-staged\": \"10.2.4\",\n- \"mocha\": \"7.1.2\",\n+ \"lint-staged\": \"10.2.7\",\n+ \"mocha\": \"7.2.0\",\n\"normalize-newline\": \"3.0.0\",\n\"npm-run-all\": \"4.1.5\",\n\"nyc\": \"15.0.1\",\n\"symlink-dir\": \"4.0.3\",\n\"tslint\": \"6.1.2\",\n\"tslint-config-prettier\": \"1.18.0\",\n- \"typescript\": \"3.9.2\",\n- \"upem\": \"4.0.0\",\n+ \"typescript\": \"3.9.3\",\n+ \"upem\": \"4.0.1\",\n\"vue-template-compiler\": \"2.6.11\",\n\"yarn\": \"1.22.4\"\n},\n"
    },
    {
        "msg": "docs(List): fix duplicate Types sections",
        "diff": "diff --git a/docs/app/Examples/elements/List/Variations/index.js b/docs/app/Examples/elements/List/Variations/index.js @@ -5,7 +5,7 @@ import ComponentExample from 'docs/app/Components/ComponentDoc/ComponentExample'\nimport ExampleSection from 'docs/app/Components/ComponentDoc/ExampleSection'\nconst ListVariations = () => (\n- <ExampleSection title='Types'>\n+ <ExampleSection title='Variations'>\n<ComponentExample\ntitle='Horizontal'\ndescription='A list can be formatted to have items appear horizontally'\n",
        "date": "17.04.2018 10:25:55",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "refactor(list/link): Remove linter warnings",
        "sim_diff": "diff --git a/components/list/link/src/index.js b/components/list/link/src/index.js @@ -31,7 +31,7 @@ ListLink.defaultProps = {\n}\nListLink.propTypes = {\ndisplayInline: PropTypes.bool,\n- list: PropTypes.array.isRequired,\n+ list: PropTypes.array,\nuseReactRouterLinks: PropTypes.bool\n}\n"
    },
    {
        "msg": "docs(Input): add min and max to number input",
        "diff": "diff --git a/docs/lib/examples/InputGroupOverview.js b/docs/lib/examples/InputGroupOverview.js @@ -37,7 +37,7 @@ const Example = (props) => {\n<br />\n<InputGroup>\n<InputGroupAddon addonType=\"prepend\">$</InputGroupAddon>\n- <Input placeholder=\"Amount\" type=\"number\" step=\"1\" />\n+ <Input placeholder=\"Amount\" min={0} max={100} type=\"number\" step=\"1\" />\n<InputGroupAddon addonType=\"append\">.00</InputGroupAddon>\n</InputGroup>\n</div>\n",
        "date": "03.04.2019 20:54:50",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "sim_msg": "feat(inputs-numeric): adds new props max, min and step",
        "sim_diff": "diff --git a/inputs/numeric-input/numeric-input.js b/inputs/numeric-input/numeric-input.js @@ -8,6 +8,9 @@ const NumericInput = props => (\nname={props.name}\ntype=\"number\"\nvalue={props.value}\n+ min={props.minValue}\n+ max={props.maxValue}\n+ step={props.stepValue}\nonChange={props.onChange}\nonBlur={props.onBlur}\ndisabled={props.isDisabled}\n@@ -31,6 +34,9 @@ NumericInput.displayName = 'NumericInput';\nNumericInput.propTypes = {\nname: PropTypes.string,\nvalue: PropTypes.string.isRequired,\n+ minValue: PropTypes.string,\n+ maxValue: PropTypes.string,\n+ stepValue: PropTypes.string,\nonChange: PropTypes.func.isRequired,\nonBlur: PropTypes.func,\nisDisabled: PropTypes.bool,\n"
    },
    {
        "msg": "docs: use consistent ext example\n[skip ci]\nRef",
        "diff": "diff --git a/doc/sample-nodemon.md b/doc/sample-nodemon.md @@ -22,7 +22,7 @@ Here is an example (of a contrived) `nodemon.json` file:\n\"env\": {\n\"NODE_ENV\": \"development\"\n},\n- \"ext\": \"js json\"\n+ \"ext\": \"js,json\"\n}\nNote that the `ignore` used is nodemon's default ignore rule. The complete defaults can be seen here: [defaults.js](https://github.com/remy/nodemon/blob/master/lib/config/defaults.js).\n",
        "date": "04.04.2018 09:15:08",
        "repo": "remy/nodemon",
        "type": "docs",
        "sim_msg": "feat: Define a new lint script",
        "sim_diff": "diff --git a/package.json b/package.json \"develop:client\": \"cd ./client && npm run develop\",\n\"develop:server\": \"cd ./api-server && node development-entry.js\",\n\"ensure-env\": \"cross-env DEBUG=fcc:* node ./tools/scripts/ensure-env.js\",\n- \"lint\": \"echo 'Warning: TODO - Define Linting with fixing.'\",\n+ \"lint\": \"npm-run-all -p lint:*\",\n\"lint:api\": \"eslint api-server --ignore-pattern 'api-server/node_modules/**/*.js' --ignore-pattern 'api-server/public/js/**/*.js' --ignore-pattern 'api-server/lib/**/*.js'\",\n+ \"lint:client\": \"echo 'Warning: TODO - Define Linting with fixing.'\",\n+ \"lint:config\": \"echo 'Warning: TODO - Define Linting with fixing.'\",\n+ \"lint:curriculum\": \"echo 'Warning: TODO - Define Linting with fixing.'\",\n+ \"lint:tools\": \"echo 'Warning: TODO - Define Linting with fixing.'\",\n\"seed\": \"npm-run-all -p seed:*\",\n\"seed:auth-user\": \"cross-env DEBUG=fcc:* node ./tools/scripts/seed/seedAuthUser\",\n\"seed:challenges\": \"cross-env DEBUG=fcc:* node ./tools/scripts/seed/seedChallenges\",\n"
    },
    {
        "msg": "docs(stack.mdx): documentation for the Stack component",
        "diff": "diff --git a/packages/chakra-ui-docs/docs/stack.mdx b/packages/chakra-ui-docs/docs/stack.mdx +import SEO from '../components/SEO'\n+\n+<SEO\n+ title=\"Stack\"\n+ description=\"Stack is a layout utility component that makes it easy to stack elements together and apply a space between them.\"\n+/>\n+\n# Stack\n+\n+Stack is a layout utility component that makes it easy to stack elements together and apply a space between them. It composes the [Flex](/flex) component.\n+\n+## Import\n+\n+```js\n+import { CStack } from '@chakra-ui/vue'\n+```\n+\n+By default, each item is stacked vertically. Stack clones it's children and passes the spacing to them using `margin-bottom` or `margin-right`.\n+\n+## Usage\n+\n+```vue live=true\n+<c-stack :spacing=\"5\">\n+ <c-box :p=\"5\" shadow=\"md\" border-width=\"1px\">\n+ <c-heading>See the Vue</c-heading>\n+ <c-text :mt=\"4\">Vue makes front-end development a breeze.</c-text>\n+ </c-box>\n+ <c-box :p=\"5\" shadow=\"md\" border-width=\"1px\">\n+ <c-heading>Go Nuxt!</c-heading>\n+ <c-text :mt=\"4\">Nuxt makes writing Vue even easier.</c-text>\n+ </c-box>\n+</c-stack>\n+```\n+\n+## Stack items horizontally\n+\n+To stack `CStack` children horizontally, pass the `isInline` prop or `direction` and set it to row.\n+\n+Optionally, you can use align and justify to adjust the alignment and distribution of the items.\n+\n+```vue live=true\n+<c-stack :spacing=\"5\" is-inline>\n+ <c-box :p=\"5\" shadow=\"md\" border-width=\"1px\">\n+ <c-heading>See the Vue</c-heading>\n+ <c-text :mt=\"4\">Vue makes front-end development a breeze.</c-text>\n+ </c-box>\n+ <c-box :p=\"5\" shadow=\"md\" border-width=\"1px\">\n+ <c-heading>Go Nuxt!</c-heading>\n+ <c-text :mt=\"4\">Nuxt makes writing Vue even easier.</c-text>\n+ </c-box>\n+</c-stack>\n+```\n+\n+## Reverse display order of items\n+\n+Pass the `isReversed` prop or set `direction` to `row-reverse` or `column-reverse`.\n+\n+```vue live=true\n+<c-stack :spacing=\"5\" is-reversed>\n+ <c-box :p=\"5\" shadow=\"md\" border-width=\"1px\">\n+ <c-heading>See the Vue</c-heading>\n+ <c-text :mt=\"4\">Vue makes front-end development a breeze.</c-text>\n+ </c-box>\n+ <c-box :p=\"5\" shadow=\"md\" border-width=\"1px\">\n+ <c-heading>Go Nuxt!</c-heading>\n+ <c-text :mt=\"4\">Nuxt makes writing Vue even easier.</c-text>\n+ </c-box>\n+</c-stack>\n+```\n+\n+## Props\n+\n+| Name | Type | Default | Description |\n+| -------------------- | ----------------------------- | ------- | ------------------------------------------------------------------------------------------------------------------------ |\n+| `isInline` | `boolean` | false | If `true` the items will be stacked horizontally. |\n+| `isReversed` | `boolean` | false | If `true` the items will be displayed in reverse order. |\n+| `direction` | `FlexProps[\"flexDirection\"]` | | The direction to stack the items. |\n+| `spacing` | `StyledSystem.MarginProps` | | The space between each stack item |\n+| `align` | `FlexProps[\"alignItems\"]` | | The alignment of the stack item. Similar to `align-items` |\n+| `justify` | `FlexProps[\"justifyContent\"]` | | The distribution of the stack item. Similar to `justify-content` |\n+| `shouldWrapChildren` | `boolean` | | If `true`, the children will be wrapped in a `Box` with `display: inline-block`, and the Box will take the spacing props |\n+\n+## Slots\n+\n+| Name | Description |\n+| ------- | ------------------------ |\n+| default | The content of the stack |\n",
        "date": "02.05.2020 22:27:16",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "sim_msg": "chore: Restore missing comma",
        "sim_diff": "diff --git a/src/technologies/c.json b/src/technologies/c.json 66\n],\n\"description\": \"Chakra UI is a simple, modular and accessible component library that gives you the building blocks you need to build your React applications.\",\n- \"dom\": \"html[style*='chakra-ui-color-mode'], body.chakra-ui-dark, body.chakra-ui-light, div.chakra-portal\"\n+ \"dom\": \"html[style*='chakra-ui-color-mode'], body.chakra-ui-dark, body.chakra-ui-light, div.chakra-portal\",\n\"icon\": \"Chakra UI.svg\",\n\"implies\": \"React\",\n\"oss\": true,\n"
    },
    {
        "msg": "docs: :memo: more winget stuff",
        "diff": "diff --git a/sheets/winget.md b/sheets/winget.md @@ -6,10 +6,26 @@ published: true\nslug: winget\n---\n-## Upgrade All Apps\n+## Upgrade all packages\n-The `--all` option allows you to upgrade all apps:\n+The `--all` option allows you to upgrade all packages:\n```bash\nwinget upgrade --all\n```\n+\n+## List installed packages\n+\n+Listing installed packages will also detail which ones can be updated.\n+\n+```bash\n+winget list\n+```\n+\n+## Update specific package\n+\n+To update a specific package add the package `--id`\n+\n+```bash\n+winget upgrade --id VideoLAN.VLC\n+```\n",
        "date": "26.10.2021 07:19:29",
        "repo": "spences10/cheat-sheets",
        "type": "docs",
        "sim_msg": "chore: update website release ticket",
        "sim_diff": "diff --git a/website/data/updates.yml b/website/data/updates.yml updates:\n+ - date: '2018-08-01'\n+ description: Fix uploads in backends, fix workflow, other bugfixes\n+ version: 2.0.6\n+ - date: '2018-07-28'\n+ description: Fix backends\n+ version: 2.0.6\n+ - date: '2018-07-27'\n+ description: Fix Git Gateway, other bugfixes\n+ version: 2.0.5\n+ - date: '2018-07-26'\n+ description: Bitbucket support!\n+ version: 2.0.0\n- date: '2018-07-21'\ndescription: Fix multipart extension support for GitLab\nversion: 1.9.4\n"
    },
    {
        "msg": "docs: Reposition Code Sponsor\nBy having the sponsor embed code at the bottom, it ends up being more effective to help fund the project.",
        "diff": "diff --git a/README.md b/README.md # nodemon\n-<a href=\"https://app.codesponsor.io/link/wnz2te8CdfKZ8wMjGUpi8EZG/remy/nodemon\" rel=\"nofollow\"><img src=\"https://app.codesponsor.io/embed/wnz2te8CdfKZ8wMjGUpi8EZG/remy/nodemon.svg\" style=\"width: 888px; height: 68px;\" alt=\"Sponsor\" /></a>\n-\nFor use during development of a node.js based application.\nnodemon will watch the files in the directory in which nodemon was started, and if any files change, nodemon will automatically restart your node application.\n@@ -291,3 +289,5 @@ See the [FAQ](https://github.com/remy/nodemon/blob/master/faq.md) and please add\n# License\nMIT [http://rem.mit-license.org](http://rem.mit-license.org)\n+\n+<a href=\"https://app.codesponsor.io/link/wnz2te8CdfKZ8wMjGUpi8EZG/remy/nodemon\" rel=\"nofollow\" target=\"_blank\"><img src=\"https://app.codesponsor.io/embed/wnz2te8CdfKZ8wMjGUpi8EZG/remy/nodemon.svg\" style=\"width: 888px; height: 68px;\" alt=\"Sponsor\" /></a>\n",
        "date": "15.09.2017 05:28:19",
        "repo": "remy/nodemon",
        "type": "docs",
        "sim_msg": "docs(README): update coverage badge",
        "sim_diff": "diff --git a/README.md b/README.md [![npm](https://img.shields.io/npm/v/contentful-cli.svg)](https://www.npmjs.com/package/contentful-cli)\n[![Build Status](https://travis-ci.com/contentful/contentful-cli.svg?token=fyDxSEex8FXB9BKySX88&branch=master)](https://travis-ci.com/contentful/contentful-cli)\n-[![codecov](https://codecov.io/gh/contentful/contentful-cli/branch/master/graph/badge.svg?token=L0f5L0tgr9)](https://codecov.io/gh/contentful/contentful-cli)\n+[![codecov](https://codecov.io/gh/contentful/contentful-cli/branch/master/graph/badge.svg?token=c2bwazppuO)](https://codecov.io/gh/contentful/contentful-cli)\n[Contentful](https://www.contentful.com) provides a content infrastructure for digital teams to power content in websites, apps, and devices. Unlike a CMS, Contentful was built to integrate with the modern software stack. It offers a central hub for structured content, powerful management and delivery APIs, and a customizable web app that enable developers and content creators to ship digital products faster.\n"
    },
    {
        "msg": "docs(layouts): fix typo in GridLayout\ndocs(layouts): fix typo in GridLayout",
        "diff": "diff --git a/docs/app/Layouts/GridLayout.js b/docs/app/Layouts/GridLayout.js @@ -82,7 +82,7 @@ const GridLayout = () => (\n<Header as='h3'>Text Container</Header>\n<p>\nSometimes you just need to put a single column of centered text on a page. A <code>text container</code> is\n- a special type of container optimized for a single flowing column of text, like this instructions on this page.\n+ a special type of container optimized for a single flowing column of text, like these instructions on this page.\n</p>\n<p>Text containers <b>do not need to use grids</b> and help simplify basic page layouts.</p>\n",
        "date": "01.04.2018 19:39:50",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "docs(Root): add layout/grid offset support",
        "sim_diff": "diff --git a/demo/layout/grid/demo/index.js b/demo/layout/grid/demo/index.js @@ -38,7 +38,7 @@ export default () => (\n<LayoutGridItem xxs={6} xxsOffset={3} lOffset={6}>\n<Box>s:12</Box>\n</LayoutGridItem>\n- <LayoutGridItem s={6}>\n+ <LayoutGridItem s={6} sOffset={6} lOffset={3}>\n<Box>s:6</Box>\n</LayoutGridItem>\n<LayoutGridItem s={6}>\n"
    },
    {
        "msg": "docs(Icon): fix selector for input",
        "diff": "diff --git a/docs/app/Components/IconSearch/IconSearch.js b/docs/app/Components/IconSearch/IconSearch.js @@ -57,7 +57,7 @@ export default class IconSearch extends Component {\nstate = { search: '', includeSimilar: true }\ncomponentDidMount() {\n- const input = document.querySelector('#docs-icon-set-input input')\n+ const input = document.querySelector('#docs-icon-set-input')\ninput.focus()\n}\n",
        "date": "01.06.2017 08:34:03",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "fix(Search): reset filters when user input changes (otherwise filter is still applied silently)",
        "sim_diff": "diff --git a/components/Search/index.js b/components/Search/index.js @@ -110,7 +110,8 @@ class Search extends Component {\nthis.setState({\nsearchQuery: value,\nloadingFilters: true,\n- allowFocus: true\n+ allowFocus: true,\n+ filters: DEFAULT_FILTERS\n})\nthis.loadFilters()\n}\n"
    },
    {
        "msg": "docs: sort components alphabetically",
        "diff": "diff --git a/docs/lib/UI/Content.js b/docs/lib/UI/Content.js @@ -17,7 +17,7 @@ function Content({ items, children, title }) {\n<div className=\"docs-sidebar mb-3\">\n<h1 className=\"h5\">{title}</h1>\n<Nav className=\"flex-column\">\n- {items.map(item => (\n+ {items.sort((a, b) => a.name.localeCompare(b.name)).map(item => (\n<NavItem key={item.to}>\n<NavLink tag={Link} to={item.to} activeClassName=\"active\">\n{item.name}\n",
        "date": "23.04.2019 15:30:40",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "sim_msg": "docs(website): add home",
        "sim_diff": "diff --git a/packages/website/builder/pages/docs/nav.js b/packages/website/builder/pages/docs/nav.js @@ -76,7 +76,14 @@ function Navigation(props) {\nfunction Sections(props) {\nreturn (\n<ul>\n- {Object.keys(props.docs).map(function(sectionKey, index) {\n+ {[\n+ <li key={'home'} className=\"nav_item\">\n+ <label className=\"nav_toggle-label nav_section nav_home\">\n+ <a href=\"/\">HOME</a>\n+ </label>\n+ </li>,\n+ ].concat(\n+ Object.keys(props.docs).map(function(sectionKey, index) {\nconst open = props.sectionName === sectionKey\nreturn (\n<li key={index} className={`nav_item ${open ? 'nav_open' : ''}`}>\n@@ -100,7 +107,8 @@ function Navigation(props) {\n/>\n</li>\n)\n- })}\n+ })\n+ )}\n</ul>\n)\n}\n"
    },
    {
        "msg": "docs(typo): Fix misspelling in documentation (Alerts)",
        "diff": "diff --git a/docs/lib/Components/AlertsPage.js b/docs/lib/Components/AlertsPage.js @@ -99,7 +99,7 @@ export default class AlertsPage extends React.Component {\n<SectionTitle>Alerts without fade</SectionTitle>\n<p>\n- Fade can be disbaled using <code>fade=false</code>.\n+ Fade can be disabled using <code>fade=false</code>.\n</p>\n<div className=\"docs-example\">\n<AlertFadelessExample />\n",
        "date": "29.12.2018 13:35:15",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "sim_msg": "fix(alerts): check for undefined alert description on save",
        "sim_diff": "diff --git a/lib/alerts/components/AlertEditor.js b/lib/alerts/components/AlertEditor.js @@ -56,7 +56,7 @@ export default class AlertEditor extends Component {\nif (title.length > ALERT_TITLE_CHAR_LIMIT) {\nreturn window.alert(`Alert title must be ${ALERT_TITLE_CHAR_LIMIT} characters or less`)\n}\n- if (description.length > ALERT_DESCRIPTION_CHAR_LIMIT) {\n+ if (description && description.length > ALERT_DESCRIPTION_CHAR_LIMIT) {\nreturn window.alert(`Alert description must be ${ALERT_DESCRIPTION_CHAR_LIMIT} characters or less`)\n}\nif (!end || !start) {\n"
    },
    {
        "msg": "docs(index): don't use prod libs in dev",
        "diff": "diff --git a/docs/app/index.ejs b/docs/app/index.ejs <script src=\"//cdn.jsdelivr.net/faker.js/<%= htmlWebpackPlugin.options.versions.faker %>/faker.min.js\"></script>\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/js-beautify/<%= htmlWebpackPlugin.options.versions.jsBeautify %>/beautify-html.min.js\"></script>\n<!-- Use unminified React when not in production so we get errors and warnings -->\n- <script src=\"//cdnjs.cloudflare.com/ajax/libs/prop-types/<%= htmlWebpackPlugin.options.versions.propTypes %>/prop-types.min.js\"></script>\n+ <script src=\"//cdnjs.cloudflare.com/ajax/libs/prop-types/<%= htmlWebpackPlugin.options.versions.propTypes %>/prop-types<%= __PROD__ ? 'min' : '' %>.js\"></script>\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/react/<%= htmlWebpackPlugin.options.versions.react %>/umd/react<%= __PROD__ ? '.production.min' : '.development' %>.js\"></script>\n- <script src=\"https://cdnjs.cloudflare.com/ajax/libs/react-dom/<%= htmlWebpackPlugin.options.versions.reactDOM %>/umd/react-dom.production.min.js\"></script>\n- <script src=\"//cdnjs.cloudflare.com/ajax/libs/react-dom/<%= htmlWebpackPlugin.options.versions.reactDOM %>/umd/react-dom-server.browser.production.min.js\"></script>\n+ <script src=\"https://cdnjs.cloudflare.com/ajax/libs/react-dom/<%= htmlWebpackPlugin.options.versions.reactDOM %>/umd/react-dom<%= __PROD__ ? '.production.min' : '.development' %>.js\"></script>\n+ <script src=\"//cdnjs.cloudflare.com/ajax/libs/react-dom/<%= htmlWebpackPlugin.options.versions.reactDOM %>/umd/react-dom-server.browser<%= __PROD__ ? '.production.min' : '.development' %>.js\"></script>\n<script src=\"//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js\"></script>\n<style>\nhtml, body {\n",
        "date": "18.10.2017 23:01:07",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "chore: talend/scripts dependency security issues",
        "sim_diff": "diff --git a/packages/scripts/package.json b/packages/scripts/package.json {\n\"name\": \"@talend/scripts\",\n\"description\": \"Set of scripts\",\n- \"version\": \"0.19.0\",\n+ \"version\": \"0.19.1\",\n\"license\": \"Apache-2.0\",\n\"main\": \"index.js\",\n\"mainSrc\": \"index.js\",\n\"@babel/preset-env\": \"^7.2.0\",\n\"@babel/preset-react\": \"^7.0.0\",\n\"@talend/html-webpack-plugin\": \"^1.1.0\",\n- \"@talend/react-cmf-webpack-plugin\": \"^2.6.2\",\n+ \"@talend/react-cmf-webpack-plugin\": \"^3.4.0\",\n\"autoprefixer\": \"^7.1.4\",\n\"babel-core\": \"^7.0.0-bridge.0\",\n\"babel-eslint\": \"^10.0.1\",\n\"jasmine\": \"2.5.2\",\n\"jasmine-core\": \"2.5.2\",\n\"jest\": \"^24.0.0\",\n- \"jest-environment-jsdom\": \"^23.4.0\",\n- \"jest-environment-jsdom-global\": \"^1.1.1\",\n+ \"jest-environment-jsdom\": \"^24.7.1\",\n+ \"jest-environment-jsdom-global\": \"^1.2.0\",\n\"karma\": \"^1.4.1\",\n\"karma-jasmine\": \"^1.1.0\",\n\"karma-jasmine-diff-reporter\": \"^1.2.0\",\n"
    },
    {
        "msg": "docs(Icon): add FontAwesome attribution",
        "diff": "diff --git a/docs/app/Components/IconSearch/IconSearch.js b/docs/app/Components/IconSearch/IconSearch.js @@ -144,8 +144,19 @@ export default class IconSearch extends Component {\nrender() {\nconst { includeSimilar } = this.state\nreturn (\n- <Grid columns={1} padded textAlign='center' style={gridStyle}>\n+ <Grid columns={1} padded style={gridStyle}>\n<Grid.Column>\n+ <Header as='h2'>Icon Set</Header>\n+ <p>An icon set contains an arbitrary number of glyphs.</p>\n+\n+ <Message>\n+ Semantic includes a complete port of{' '}\n+ <a href='http://fontawesome.io/whats-new/' rel='noopener noreferrer' target='_blank'>Font Awesome 4.7.0</a>\n+ {' '}designed by{' '}\n+ <a href='http://www.twitter.com/davegandy' rel='noopener noreferrer'>Dave Gandy</a> for its standard icon\n+ set.\n+ </Message>\n+\n<Form>\n<Form.Group inline>\n<Form.Input\n@@ -163,7 +174,7 @@ export default class IconSearch extends Component {\n</Form.Group>\n</Form>\n</Grid.Column>\n- <Grid.Column>\n+ <Grid.Column textAlign='center'>\n{this.renderIcons()}\n</Grid.Column>\n</Grid>\n",
        "date": "10.08.2017 23:28:13",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "test(Icon): add test case for icon",
        "sim_diff": "diff --git a/test/icon/index-spec.js b/test/icon/index-spec.js @@ -37,4 +37,15 @@ describe('Icon', () => {\nwrapper.setProps({ style: { color: 'red' } });\nassert(wrapper.find('.next-icon').prop('style').color === 'red');\n});\n+\n+ it('should receive style prop', () => {\n+ const CustomIcon = Icon.createFromIconfontCN({\n+ scriptUrl: '//at.alicdn.com/t/font_1464085_egnk4s8yv2f.js',\n+ });\n+\n+ const newWrapper = mount(<CustomIcon type=\"icon-pic\"/>);\n+ assert(newWrapper.find('.next-icon svg'));\n+ newWrapper.setProps({ size: 'xl' });\n+ assert(newWrapper.find('.next-icon').hasClass('next-xl'));\n+ });\n});\n"
    },
    {
        "msg": "docs: update contributing",
        "diff": "diff --git a/.github/CONTRIBUTING.md b/.github/CONTRIBUTING.md @@ -41,20 +41,26 @@ git clone https://github.com/<YOUR_GITHUB_USERNAME>/razzle.git\ncd razzle\ngit checkout -B <my-branch>\nNODE_ENV=development yarn install ---ignore-engines\n+# optionally install add-dependencies\n+sudo npm install add-dependencies -g\n```\nThis will install all `node_modules` in all the packages and all the examples and symlink\ninter-dependencies. Thus when you make local changes in any of the packages you can try them\n-immediately in all the examples.\n+immediately in all the examples. `add-dependencies` can be used to just add packages to `package.json`.\n### Commands\n-- `yarn run clean`: Clean up all `node_modules` and remove all symlinks from packages and examples.\n-- `yarn run bootstrap`: Run `yarn` on all examples and packages. Automatically symlinks inter-dependent modules.\n-- `yarn run test`: Runs all tests\n-- `yarn run test:packages`: Runs tests for packages\n-- `yarn run test:e2e`: Runs end-to-end tests\n-- `yarn run build-docs`: Builds docs/ updates doc TOC\n+- `yarn clean`: Clean up all `node_modules` and remove all symlinks from packages and examples.\n+- `yarn bootstrap`: Run `yarn` on all packages. Automatically symlinks inter-dependent modules.\n+- `yarn test`: Runs all tests\n+- `yarn test:packages`: Runs tests for packages\n+- `yarn test:e2e`: Runs end-to-end tests\n+- `yarn build-docs`: Builds docs/ updates doc TOC\n+- `yarn bootstrap-examples`: Run `yarn` with specific examples as workspaces. Automatically symlinks inter-dependent modules. Run `yarn restrap` in the example to reinstall.\n+- `yarn new-example`: Creates a new example from another example. `yarn new-example basic new-example`.\n+- `yarn publish-all-stable`: Does a a stable release\n+- `yarn publish-all-canary`: Does a `razzle@canary` release.\n### Updating your fork\n@@ -68,7 +74,7 @@ git pull origin master\n## Adding examples\n### Use `examples/basic` as template\n-If you'd like to add an example, I suggest you duplicate the `examples/basic` folder and use that as kind of base template. Before you start adding stuff, go ahead and change the name of the package in the your new example's `package.json`. Then go back to the project root and run `yarn bootstrap`. This will make sure that your new example is using your local version of all the `packages`.\n+If you'd like to add an example, I suggest you duplicate the `examples/basic` folder `yarn new-example basic your-example`and use that as kind of base template. Before you start adding stuff, go ahead and change the name of the package in the your new example's `package.json`. Then go back to the project root and run `yarn bootstrap-examples your-example`. This will make sure that your new example is using your local version of all the `packages`.\n### Naming examples\n",
        "date": "28.01.2021 00:15:38",
        "repo": "jaredpalmer/razzle",
        "type": "docs",
        "sim_msg": "docs: remove redundant word to make a statement clearer",
        "sim_diff": "diff --git a/docs/contributing/setting-up-your-local-dev-environment.md b/docs/contributing/setting-up-your-local-dev-environment.md @@ -27,7 +27,7 @@ Yarn is a package manager for your code, similar to [NPM](https://www.npmjs.com/\n- Set up repo and install dependencies: `yarn run bootstrap`\n- Make sure tests are passing for you: `yarn test`\n- Create a topic branch: `git checkout -b topics/new-feature-name`\n-- See [docs setup instructions](/contributing/docs-contributions#docs-site-setup-instructions) below for docs-only changes.\n+- See [docs setup instructions](/contributing/docs-contributions#docs-site-setup-instructions) for docs-only changes.\n- Run `yarn run watch` from the root of the repo to watch for changes to packages' source code and compile these changes on-the-fly as you work.\n- Note that the watch command can be resource intensive. To limit it to the packages you're working on, add a scope flag, like `yarn run watch --scope={gatsby,gatsby-cli}`.\n- To watch just one package, run `yarn run watch --scope=gatsby`.\n"
    },
    {
        "msg": "docs(Modal): fix nested modal closing\nCloses",
        "diff": "diff --git a/docs/lib/examples/ModalNested.js b/docs/lib/examples/ModalNested.js @@ -9,10 +9,12 @@ class ModalExample extends React.Component {\nthis.state = {\nmodal: false,\nnestedModal: false,\n+ closeAll: false\n};\nthis.toggle = this.toggle.bind(this);\nthis.toggleNested = this.toggleNested.bind(this);\n+ this.toggleAll = this.toggleAll.bind(this);\n}\ntoggle() {\n@@ -23,7 +25,15 @@ class ModalExample extends React.Component {\ntoggleNested() {\nthis.setState({\n- nestedModal: !this.state.nestedModal\n+ nestedModal: !this.state.nestedModal,\n+ closeAll: false\n+ });\n+ }\n+\n+ toggleAll() {\n+ this.setState({\n+ nestedModal: !this.state.nestedModal,\n+ closeAll: true\n});\n}\n@@ -37,12 +47,12 @@ class ModalExample extends React.Component {\nLorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n<br />\n<Button color=\"success\" onClick={this.toggleNested}>Show Nested Model</Button>\n- <Modal isOpen={this.state.nestedModal} toggle={this.toggleNested}>\n+ <Modal isOpen={this.state.nestedModal} toggle={this.toggleNested} onClosed={this.state.closeAll && this.toggle}>\n<ModalHeader>Nested Modal title</ModalHeader>\n<ModalBody>Stuff and things</ModalBody>\n<ModalFooter>\n<Button color=\"primary\" onClick={this.toggleNested}>Done</Button>{' '}\n- <Button color=\"secondary\" onClick={this.toggle}>All Done</Button>\n+ <Button color=\"secondary\" onClick={this.toggleAll}>All Done</Button>\n</ModalFooter>\n</Modal>\n</ModalBody>\n",
        "date": "15.11.2017 05:59:56",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "sim_msg": "feat: add loading state to git sync staging modal",
        "sim_diff": "diff --git a/packages/insomnia-app/app/ui/components/modals/git-staging-modal.js b/packages/insomnia-app/app/ui/components/modals/git-staging-modal.js @@ -32,6 +32,7 @@ type Item = {|\n|};\ntype State = {|\n+ loading: boolean,\nbranch: string,\nmessage: string,\nitems: {\n@@ -40,6 +41,7 @@ type State = {|\n|};\nconst INITIAL_STATE: State = {\n+ loading: false,\nbranch: '',\nmessage: '',\nitems: {},\n@@ -173,6 +175,12 @@ class GitStagingModal extends React.PureComponent<Props, State> {\nasync _refresh(callback?: () => void) {\nconst { vcs, workspace } = this.props;\n+ this.setState({ loading: true });\n+\n+ // Get and set branch name\n+ const branch = await vcs.getBranch();\n+ this.setState({ branch });\n+\n// Cache status names\nconst docs = await withDescendants(workspace);\nconst allPaths = await this.getAllPaths();\n@@ -239,8 +247,7 @@ class GitStagingModal extends React.PureComponent<Props, State> {\n};\n}\n- const branch = await vcs.getBranch();\n- this.setState({ items, branch }, callback);\n+ this.setState({ items, loading: false }, callback);\n}\nrenderOperation(item: Item) {\n@@ -355,36 +362,24 @@ class GitStagingModal extends React.PureComponent<Props, State> {\n);\n}\n- render() {\n- const { items, message, branch } = this.state;\n+ _renderEmpty() {\n+ const { loading } = this.state;\n- const itemsList = Object.keys(items).map(k => items[k]);\n- let body = null;\n- if (itemsList.length === 0) {\n- body = (\n- <>\n- <ModalHeader>Commit Changes</ModalHeader>\n- <ModalBody className=\"wide pad\">No changes to commit.</ModalBody>\n- <ModalFooter>\n- <div className=\"margin-left italic txt-sm tall\">\n- <i className=\"fa fa-code-fork\" /> {branch}\n- </div>\n- <div>\n- <button className=\"btn\" onClick={this._hideModal}>\n- Close\n- </button>\n- </div>\n- </ModalFooter>\n- </>\n- );\n- } else {\n- const newItems = itemsList.filter(i => i.status.includes('added'));\n- const existingItems = itemsList.filter(i => !i.status.includes('added'));\n+ if (loading) {\n+ return <>Loading...</>;\n+ }\n+\n+ return <>No changes to commit.</>;\n+ }\n- body = (\n+ _renderItems(items: Array<Item>) {\n+ const { message } = this.state;\n+\n+ const newItems = items.filter(i => i.status.includes('added'));\n+ const existingItems = items.filter(i => !i.status.includes('added'));\n+\n+ return (\n<>\n- <ModalHeader>Commit Changes</ModalHeader>\n- <ModalBody className=\"wide pad\">\n<div className=\"form-control form-control--outlined\">\n<textarea\nref={this._setTextareaRef}\n@@ -397,23 +392,39 @@ class GitStagingModal extends React.PureComponent<Props, State> {\n</div>\n{this.renderTable('Modified Objects', existingItems, 'Rollback all')}\n{this.renderTable('Unversioned Objects', newItems, 'Delete all')}\n+ </>\n+ );\n+ }\n+\n+ render() {\n+ const { items, branch, loading } = this.state;\n+\n+ const itemsList = Object.keys(items).map(k => items[k]);\n+ const hasChanges = !!itemsList.length;\n+\n+ return (\n+ <Modal ref={this._setModalRef}>\n+ <ModalHeader>Commit Changes</ModalHeader>\n+ <ModalBody className=\"wide pad\">\n+ {hasChanges ? this._renderItems(itemsList) : this._renderEmpty()}\n</ModalBody>\n<ModalFooter>\n<div className=\"margin-left italic txt-sm tall\">\n- <i className=\"fa fa-code-fork\" /> {branch}\n+ <i className=\"fa fa-code-fork\" /> {branch}{' '}\n+ {loading && <i className=\"fa fa-refresh fa-spin\" />}\n</div>\n<div>\n- <button className=\"btn\" onClick={this._handleCommit}>\n+ <button className=\"btn\" onClick={this._hideModal}>\n+ Close\n+ </button>\n+ <button className=\"btn\" onClick={this._handleCommit} disabled={loading || !hasChanges}>\nCommit\n</button>\n</div>\n</ModalFooter>\n- </>\n+ </Modal>\n);\n}\n-\n- return <Modal ref={this._setModalRef}>{body}</Modal>;\n- }\n}\nexport default GitStagingModal;\n"
    },
    {
        "msg": "feat(404-page): update NotFound container\nfeat(404-page): update NotFound container",
        "diff": "diff --git a/src/common/containers/NotFound/index.jsx b/src/common/containers/NotFound/index.jsx @@ -8,10 +8,10 @@ const NotFound = () => {\nreturn (\n<NotFoundLayout>\n<Header as=\"h2\" icon textAlign=\"center\">\n- <Icon name=\"users\" circular />\n- <Header.Content>404</Header.Content>\n+ <Icon name=\"warning sign\" circular />\n+ <Header.Content>Thank you Mario!</Header.Content>\n<Header.Subheader>\n- <Link to=\"/\">Dashboard lives here</Link>\n+ <Link to=\"/\">But our princess is in another castle.</Link>\n</Header.Subheader>\n</Header>\n</NotFoundLayout>\n",
        "date": "19.02.2018 18:50:28",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "feat: data policy style",
        "sim_diff": "diff --git a/src/pages/HomePage/HomePage.js b/src/pages/HomePage/HomePage.js @@ -186,9 +186,15 @@ const HomePage = () => {\nalign=\"center\"\ngutterBottom\n>\n- <Link to=\"http://home.opentargets.org/partner-preview-platform-data-policy\">\n+ <strong>\n+ <Link\n+ external\n+ newTab\n+ to=\"http://home.opentargets.org/partner-preview-platform-data-policy\"\n+ >\nView our data policy\n</Link>\n+ </strong>\n</Typography>\n</div>\n) : null}\n"
    },
    {
        "msg": "feat(editbale): add editable props",
        "diff": "diff --git a/packages/chakra-ui-core/src/CEditable/CEditable.js b/packages/chakra-ui-core/src/CEditable/CEditable.js +/**\n+ * Hey! Welcome to @chakra-ui/vue Editable\n+ *\n+ * EditableText is used for inline renaming of some text.\n+ *\n+ * It appears as normal UI text but transforms into a text\n+ * input field when the user clicks or focuses on it.\n+ *\n+ * The text input inherits all font styling from its parent,\n+ * to make the edit and read view transition seamless.\n+ *\n+ * @see Docs https://vue.chakra-ui.com/editable\n+ * @see Source https://github.com/chakra-ui/chakra-ui-vue/blob/master/packages/chakra-ui-core/src/CEditable/CEditable.js\n+ */\n+\nimport styleProps, { baseProps } from '../config/props'\nimport { isDef, getElement, useId, forwardProps } from '../utils'\n@@ -15,6 +30,14 @@ const sharedEditableProps = {\nmx: '-3px'\n}\n+/**\n+ * CEditable component\n+ *\n+ * The wrapper for `CEditable` components. It provides context and state for the Editable components.\n+ *\n+ * @extends CBox\n+ * @see Docs https://vue.chakra-ui.com/editable\n+ */\nconst CEditable = {\nname: 'CEditable',\nprops: {\n@@ -165,7 +188,10 @@ const CEditable = {\n},\nrender (h) {\nreturn h(CBox, {\n- props: forwardProps(this.$props)\n+ props: forwardProps(this.$props),\n+ attrs: {\n+ 'data-chakra-component': 'CEditable'\n+ }\n}, [\nthis.$scopedSlots.default({\nisEditing: this.isEditing,\n@@ -177,6 +203,14 @@ const CEditable = {\n}\n}\n+/**\n+ * CEditablePreview component\n+ *\n+ * The read-only view of the component.\n+ *\n+ * @extends CPseudoBox\n+ * @see Docs https://vue.chakra-ui.com/editable\n+ */\nconst CEditablePreview = {\nname: 'CEditablePreview',\ninject: ['$EditableContext'],\n@@ -218,7 +252,8 @@ const CEditablePreview = {\n},\nattrs: {\n'aria-disabled': isDisabled,\n- tabIndex: this.tabIndex\n+ tabIndex: this.tabIndex,\n+ 'data-chakra-component': 'CEditablePreview'\n},\nnativeOn: {\nfocus: onRequestEdit\n@@ -227,6 +262,14 @@ const CEditablePreview = {\n}\n}\n+/**\n+ * CEditableInput component\n+ *\n+ * The edit view of the component. It shows when you click or focus on the text.\n+ *\n+ * @extends CPseudoBox\n+ * @see Docs https://vue.chakra-ui.com/editable\n+ */\nconst CEditableInput = {\nname: 'CEditableInput',\ninject: ['$EditableContext'],\n@@ -285,7 +328,8 @@ const CEditableInput = {\ndisabled: isDisabled,\n'aria-disabled': isDisabled,\nvalue,\n- placeholder\n+ placeholder,\n+ 'data-chakra-component': 'CEditableInput'\n}\n}, this.$slots.default)\n}\n",
        "date": "17.04.2020 01:58:50",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "feat",
        "sim_msg": "chore(component): remove two proptypes warnings",
        "sim_diff": "diff --git a/packages/components/src/EditableText/EditableText.component.js b/packages/components/src/EditableText/EditableText.component.js @@ -34,7 +34,7 @@ function PlainTextTitle({ onEdit, disabled, text, inProgress, t }) {\nPlainTextTitle.propTypes = {\ntext: PropTypes.string.isRequired,\n- onEdit: PropTypes.bool,\n+ onEdit: PropTypes.func.isRequired,\ndisabled: PropTypes.bool,\ninProgress: PropTypes.bool,\nt: PropTypes.func,\n@@ -73,7 +73,7 @@ EditableText.propTypes = {\neditMode: PropTypes.bool,\nloading: PropTypes.bool,\ninProgress: PropTypes.bool,\n- onEdit: PropTypes.bool,\n+ onEdit: PropTypes.func.isRequired,\ndisabled: PropTypes.bool,\nt: PropTypes.func,\n};\n"
    },
    {
        "msg": "feat(menu): option event handling",
        "diff": "diff --git a/packages/kiwi-core/src/Menu/MenuOption.js b/packages/kiwi-core/src/Menu/MenuOption.js @@ -62,7 +62,7 @@ const MenuItemOption = {\nif (this.isDisabled) return\nif (['Enter', ' '].includes(event.key)) {\nevent.preventDefault()\n- this.handleSelect()\n+ this.handleSelect(event)\n}\nthis.$emit('keydown', event)\n@@ -239,6 +239,12 @@ const MenuOptionGroup = {\nnativeOn: {\nclick: (event) => {\nthis.handleChange(cloned.componentOptions.propsData['value'])\n+ },\n+ keydown: (event) => {\n+ if (['Enter', ' '].includes(event.key)) {\n+ event.preventDefault()\n+ this.handleChange(cloned.componentOptions.propsData['value'])\n+ }\n}\n}\n}, cloned.componentOptions.children)\n@@ -257,6 +263,12 @@ const MenuOptionGroup = {\nnativeOn: {\nclick: (event) => {\nthis.handleChange(cloned.componentOptions.propsData['value'])\n+ },\n+ keydown: (event) => {\n+ if (['Enter', ' '].includes(event.key)) {\n+ event.preventDefault()\n+ this.handleChange(cloned.componentOptions.propsData['value'])\n+ }\n}\n}\n}, cloned.componentOptions.children)\n",
        "date": "30.01.2020 20:14:04",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "feat",
        "sim_msg": "fix(menu/main): Fix movement on unintended focus\nFocus is sometimes retained after the menu is closed even though it shoudn't, this will disable handlers from functioning if the menu is closed",
        "sim_diff": "diff --git a/menu/src/hooks/useKeyboardNavigation.tsx b/menu/src/hooks/useKeyboardNavigation.tsx import { useEffect } from \"react\";\nimport { useKeyboardNavContext } from \"../provider/KeyboardNavProvider\";\n+import { useIsMenuVisible } from '../state/visibility.state';\ninterface KeyCallbacks {\nonLeftDown?: () => void;\n@@ -32,11 +33,17 @@ export const useKeyboardNavigation = ({\ndisableOnFocused = false\n}: KeyCallbacks) => {\nconst { disabledKeyNav } = useKeyboardNavContext();\n+ const isMenuVisible = useIsMenuVisible()\n+\nuseEffect(() => {\n// Our basic handler function for keydown events\nconst keyHandler = (e: KeyboardEvent) => {\n- if (disableOnFocused && disabledKeyNav) return\n+ if (disableOnFocused && disabledKeyNav) return;\n+\n+ // Fix for menu still having focus when it shouldn't\n+ if (!isMenuVisible) return;\n+\nswitch (e.code) {\ncase \"ArrowLeft\":\ne.preventDefault()\n@@ -73,6 +80,7 @@ export const useKeyboardNavigation = ({\nonDownDown,\nonEnterDown,\ndisabledKeyNav,\n- disableOnFocused\n+ disableOnFocused,\n+ isMenuVisible\n]);\n};\n"
    },
    {
        "msg": "feat(containers): add data fetching in Links\nfeat(containers): add data fetching in Links",
        "diff": "diff --git a/src/common/containers/Links/index.jsx b/src/common/containers/Links/index.jsx @@ -20,15 +20,19 @@ type Props = {\nclass Links extends Component {\nprops: Props\n- componentDidMount () {\n- const {isLinksLoaded} = this.props\n+ async asyncBootstrap () {\n+ const {isLinksLoaded, getLinks} = this.props\nif (!isLinksLoaded) {\n- this.getLinks()\n+ await getLinks()\n}\n+ return true\n}\n- getLinks () {\n- this.props.getLinks()\n+ componentDidMount () {\n+ const {isLinksLoaded, getLinks} = this.props\n+ if (!isLinksLoaded) {\n+ getLinks()\n+ }\n}\nrender () {\n@@ -57,8 +61,8 @@ function mapStateToProps (state: GlobalState) {\n}\nconst mapDispatchToProps = dispatch => ({\n- getLinks () {\n- dispatch(GET_LINKS())\n+ async getLinks () {\n+ return dispatch(GET_LINKS())\n}\n})\n",
        "date": "03.12.2017 07:11:52",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "refactor(list/link): format js with new rules",
        "sim_diff": "diff --git a/components/list/link/src/index.js b/components/list/link/src/index.js @@ -20,9 +20,7 @@ class ListLink extends Component {\nrender() {\nreturn (\n- <ul className='sui-ListLink'>\n- {this.props.list.map(this._renderLink)}\n- </ul>\n+ <ul className=\"sui-ListLink\">{this.props.list.map(this._renderLink)}</ul>\n)\n}\n}\n"
    },
    {
        "msg": "feat(razzle): allow toggling usage of null loader for node target",
        "diff": "diff --git a/packages/razzle/config/createConfigAsync.js b/packages/razzle/config/createConfigAsync.js @@ -322,6 +322,8 @@ module.exports = (\n],\n};\n+ webpackOptions.nullNodeCss = false;\n+\nfor (const [plugin, pluginOptions] of plugins) {\n// Check if .modifyWebpackConfig is a function.\n// If it is, call it on the configs we created.\n@@ -532,7 +534,9 @@ module.exports = (\n? // Style-loader does not work in Node.js without some crazy\n// magic. Luckily we just need css-loader.\n[\n- {\n+ webpackOptions.nullNodeCss ? {\n+ loader: require.resolve('null-loader')\n+ } : {\nloader: require.resolve('css-loader'),\noptions: {\nimportLoaders: 1,\n",
        "date": "13.02.2021 00:22:55",
        "repo": "jaredpalmer/razzle",
        "type": "feat",
        "sim_msg": "fix(blockTools): cleanup webpack config",
        "sim_diff": "diff --git a/packages/blockTools/webpack.config.js b/packages/blockTools/webpack.config.js const HtmlWebpackPlugin = require('html-webpack-plugin');\n-const path = require('path');\nconst webpack = require('webpack');\n+const path = require('path');\nmodule.exports = {\nentry: './demo/index.js',\n@@ -18,6 +18,7 @@ module.exports = {\n},\nfallback: { buffer: false },\n},\n+\nmodule: {\nrules: [\n// TODO: FIXME: do NOT webpack 5 support with this\n@@ -52,37 +53,11 @@ module.exports = {\n},\n],\n},\n- {\n- test: /\\.less$/,\n- use: [\n- {\n- loader: 'style-loader',\n- },\n- {\n- loader: 'css-loader', // translates CSS into CommonJS\n- },\n- {\n- loader: 'less-loader', // compiles Less to CSS\n- options: {\n- lessOptions: {\n- modifyVars: {\n- '@primary-color': '#697a8c',\n- '@link-color': '#1890ff',\n- '@layout-header-background': '#30383f',\n- '@layout-sider-background': '#30383f',\n- '@menu-dark-submenu-bg': '#21262b',\n- },\n- javascriptEnabled: true,\n- },\n- },\n- },\n- ],\n- },\n],\n},\nplugins: [\n- new webpack.ProvidePlugin({ Buffer: ['buffer', 'Buffer'] }),\n- new webpack.ProvidePlugin({ process: ['process'] }),\n+ new webpack.IgnorePlugin({ resourceRegExp: /runRenderTests/ }),\n+ new webpack.IgnorePlugin({ resourceRegExp: /mockBlock/ }),\nnew HtmlWebpackPlugin({\ntemplate: './public/index.html',\n}),\n"
    },
    {
        "msg": "feat(Sidebar): use SidebarLogo based on Logo component\nfeat(Sidebar): use SidebarLogo based on Logo component",
        "diff": "diff --git a/src/common/components/parts/Sidebar/index.jsx b/src/common/components/parts/Sidebar/index.jsx import React, {Component} from 'react'\nimport {Menu, Icon} from 'semantic-ui-react'\nimport {NavLink} from 'react-router-dom'\n+import Logo from 'components/elements/Logo'\nimport {\nStyledSidebar,\nSidebarLogo,\n@@ -10,9 +11,7 @@ import {\nSidebarLogoutItem\n} from './style'\nimport {Spacer} from 'styles/base'\n-\nimport type {RouteItem} from 'types'\n-// require('./index.scss')\ntype Props = {\nopen: boolean,\n@@ -71,12 +70,11 @@ export default class SidebarComponent extends Component {\n// ? require('images/logo.png')\n// : require('images/logo.png').preSrc\n//\n- const logoImg = require('images/logo.png')\nreturn (\n<StyledSidebar {...sidebarProps}>\n<SidebarLogoContainer href=\"https://github.com/Metnew/react-semantic.ui-starter\">\n- <SidebarLogo src={logoImg} alt=\"logo\" shape=\"circular\" centered />\n+ <SidebarLogo alt=\"logo\" shape=\"circular\" centered />\n</SidebarLogoContainer>\n{routes}\n<Spacer />\n",
        "date": "10.09.2017 18:49:29",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "fix: cleanup conflict",
        "sim_diff": "diff --git a/packages/frontend/src/components/navigation/NavLinks.js b/packages/frontend/src/components/navigation/NavLinks.js @@ -2,7 +2,7 @@ import React from 'react';\nimport { Translate } from 'react-localize-redux';\nimport { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n-import USN_LOGO from '../../images/USN-logo.png';\n+\nimport { CREATE_USN_CONTRACT, USN_BUTTON, DONATE_TO_UKRAINE } from '../../../../../features';\nimport { IS_MAINNET } from '../../config';\nimport USN_LOGO from '../../images/USN-logo.png';\n"
    },
    {
        "msg": "feat: query blocks with a height greater than 335",
        "diff": "diff --git a/frontend/leaderboard/src/Postgres.re b/frontend/leaderboard/src/Postgres.re @@ -15,7 +15,9 @@ LEFT JOIN user_commands AS uc ON uc.id = buc.user_command_id\nLEFT JOIN public_keys AS pk2 ON ic.receiver_id = pk2.id\nLEFT JOIN public_keys AS pk3 ON uc.fee_payer_id = pk3.id\nLEFT JOIN public_keys AS pk4 ON uc.source_id = pk4.id\n-LEFT JOIN public_keys AS pk5 ON uc.receiver_id = pk5.id\";\n+LEFT JOIN public_keys AS pk5 ON uc.receiver_id = pk5.id\n+\n+WHERE height >= 335\";\nlet createPool = pgConn => {\nmakePool({connectionString: pgConn, connectionTimeoutMillis: 5000});\n",
        "date": "18.11.2020 14:35:41",
        "repo": "minaprotocol/mina",
        "type": "feat",
        "sim_msg": "chore: Add titles to team and author profiles",
        "sim_diff": "diff --git a/_tools/fetch-team-data.js b/_tools/fetch-team-data.js @@ -48,6 +48,14 @@ const teamIds = {\n[ALUMNI_TEAM_SLUG]: \"alumni\"\n};\n+// lookup table mapping Github team IDs to member titles\n+const teamMemberTitles = {\n+ tsc: \"ESLint Technical Steering Committee\",\n+ committers: \"ESLint Committer\",\n+ reviewers: \"ESLint Reviewer\",\n+ alumni: \"ESLint Alumnus\"\n+};\n+\n// blog post authors\nconst users = new Map();\n@@ -72,6 +80,7 @@ async function fetchUserProfile(username) {\nconst result = {\nusername: profile.login,\nname: profile.name,\n+ title: \"Guest Author\",\nwebsite: profile.blog,\navatar_url: profile.avatar_url,\nbio: profile.bio,\n@@ -115,6 +124,13 @@ async function fetchTeamMembers() {\nteam.committers = team.committers.filter(user => !team.tsc.find(tscmember => tscmember.username === user.username) &&\n!team.reviewers.find(tscmember => tscmember.username === user.username));\n+ // add appropriate titles\n+ for (const [teamName, members] of Object.entries(team)) {\n+ members.forEach(member => {\n+ member.title = teamMemberTitles[teamName];\n+ });\n+ }\n+\nreturn team;\n}\n"
    },
    {
        "msg": "feat(Form): add submit to component\nThis makes it easier to use submit as if the component was a raw form (via 'standard' )",
        "diff": "diff --git a/src/Form.js b/src/Form.js -import React from 'react';\n+import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules } from './utils';\n@@ -15,8 +15,27 @@ const propTypes = {\nconst defaultProps = {\ntag: 'form',\n};\n+class Form extends Component {\n+ constructor(props) {\n+ super(props);\n+ this.getRef = this.getRef.bind(this);\n+ this.submit = this.submit.bind(this);\n+ }\n-const Form = (props) => {\n+ getRef(ref) {\n+ if (this.props.innerRef) {\n+ this.props.innerRef(ref);\n+ }\n+ this.ref = ref;\n+ }\n+\n+ submit() {\n+ if (this.ref) {\n+ this.ref.submit();\n+ }\n+ }\n+\n+ render() {\nconst {\nclassName,\ncssModule,\n@@ -24,7 +43,7 @@ const Form = (props) => {\ntag: Tag,\ninnerRef,\n...attributes\n- } = props;\n+ } = this.props;\nconst classes = mapToCssModules(classNames(\nclassName,\n@@ -34,7 +53,8 @@ const Form = (props) => {\nreturn (\n<Tag {...attributes} ref={innerRef} className={classes} />\n);\n-};\n+ }\n+}\nForm.propTypes = propTypes;\nForm.defaultProps = defaultProps;\n",
        "date": "07.05.2018 16:25:02",
        "repo": "reactstrap/reactstrap",
        "type": "feat",
        "sim_msg": "chore(renderer): add missing propsTypes to TS interface",
        "sim_diff": "diff --git a/packages/react-form-renderer/src/form-renderer/form-renderer.d.ts b/packages/react-form-renderer/src/form-renderer/form-renderer.d.ts -import { ComponentType, FunctionComponent } from 'react';\n+import { ComponentType, FunctionComponent, ReactNode } from 'react';\nimport { FormProps } from 'react-final-form';\nimport Schema from '../common-types/schema';\nimport ComponentMapper from '../common-types/component-mapper';\n@@ -12,6 +12,7 @@ export interface FormRendererProps extends FormProps {\ninitialValues?: object;\nonCancel?: (values: AnyObject, ...args: any[]) => void;\nonReset?: () => void;\n+ onError?: (...args: any[]) => void;\nschema: Schema;\nclearOnUnmount?: boolean;\nclearedValue?: any;\n@@ -20,6 +21,8 @@ export interface FormRendererProps extends FormProps {\nvalidatorMapper?: ValidatorMapper;\nactionMapper?: ActionMapper;\nschemaValidatorMapper?: SchemaValidatorMapper;\n+ FormTemplateProps?: AnyObject;\n+ children?: ReactNode | ((props: FormTemplateRenderProps) => ReactNode)\n}\ndeclare const FormRenderer: React.ComponentType<FormRendererProps>;\n"
    },
    {
        "msg": "feat(reducers/links): add count property\nfeat(reducers/links): add count property",
        "diff": "diff --git a/src/common/reducers/links/index.js b/src/common/reducers/links/index.js @@ -23,7 +23,8 @@ export const initialState: State = {\nentities: [],\nerrors: {},\nisLoading: false,\n- isLoaded: false\n+ isLoaded: false,\n+ count: 0\n}\nexport function links (state: State = initialState, action: Action): State {\n@@ -38,11 +39,13 @@ export function links (state: State = initialState, action: Action): State {\n}\ncase GET_LINKS_SUCCESS: {\nconst entities = action.payload\n+ const count = entities.length\nreturn {\n...state,\nisLoaded: true,\nisLoading: false,\n- entities\n+ entities,\n+ count\n}\n}\ncase GET_LINKS_FAIL: {\n@@ -51,7 +54,9 @@ export function links (state: State = initialState, action: Action): State {\n...state,\nerrors,\nisLoaded: true,\n- isLoading: false\n+ isLoading: false,\n+ entities: [],\n+ count: 0\n}\n}\ndefault:\n",
        "date": "03.11.2017 16:32:11",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "chore(actions-core): Changed Link Action function declaration.",
        "sim_diff": "diff --git a/packages/plugins/actions/actions-core/src/actions/Link.js b/packages/plugins/actions/actions-core/src/actions/Link.js import { type } from '@lowdefy/helpers';\n-const Link = ({ methods: { link }, params }) => {\n+function Link({ methods: { link }, params }) {\nconst linkParams = type.isString(params) ? { pageId: params } : params;\ntry {\nlink(linkParams);\n@@ -24,6 +24,6 @@ const Link = ({ methods: { link }, params }) => {\nconsole.log(error);\nthrow new Error(`Invalid Link, check action params. Received \"${JSON.stringify(params)}\".`);\n}\n-};\n+}\nexport default Link;\n"
    },
    {
        "msg": "feat(auth): add idToken to user's payload\nfeat",
        "diff": "diff --git a/lib/plugins/ssrAuth.js b/lib/plugins/ssrAuth.js @@ -55,7 +55,8 @@ export default async ({ req, res }) => {\n...res.locals,\nuser: {\n...authUser,\n- allClaims: decodedToken\n+ allClaims: decodedToken,\n+ idToken,\n}\n}\n}\n",
        "date": "11.05.2020 20:52:09",
        "repo": "nuxt-community/firebase-module",
        "type": "feat",
        "sim_msg": "chore: update file references in Auth0 example README\nchore: update file references from README",
        "sim_diff": "diff --git a/examples/auth0/README.md b/examples/auth0/README.md @@ -4,8 +4,8 @@ This example shows how you can use `@auth0/nextjs-auth` to easily add authentica\n- Signing in\n- Signing out\n-- Loading the user on the server side and adding it as part of SSR ([`pages/advanced/ssr-profile.ts`](pages/advanced/ssr-profile.ts))\n-- Loading the user on the client side and using fast/cached SSR pages ([`pages/index.ts`](pages/index.ts))\n+- Loading the user on the server side and adding it as part of SSR ([`pages/advanced/ssr-profile.tsx`](pages/advanced/ssr-profile.tsx))\n+- Loading the user on the client side and using fast/cached SSR pages ([`pages/index.tsx`](pages/index.tsx))\n- API Routes which can load the current user ([`pages/api/me.ts`](pages/api/me.ts))\n- Using hooks to make the user available throughout the application ([`lib/user.ts`](lib/user.ts))\n"
    },
    {
        "msg": "feat(routing): make all containers lazy, simplify code\nfeat(routing): make all containers lazy, simplify code",
        "diff": "diff --git a/src/common/routing/index.jsx b/src/common/routing/index.jsx */\nimport React from 'react'\nimport {Route} from 'react-router-dom'\n-import Dashboard from 'containers/Dashboard'\n-import Login from 'containers/Login'\n-import Users from 'containers/Users'\n-\nimport RouteAuth from 'components/addons/RouteAuth'\nimport {createBrowserHistory, createMemoryHistory} from 'history'\nimport type {RouteItem} from 'types'\n+const getHistory = () => {\n+ if (process.env.BROWSER) {\n+ return createMemoryHistory()\n+ }\n+ return createBrowserHistory()\n+}\n+\nexport const history = getHistory()\n-const loadLazyComponent = (url: string) => {\n- return async (cb: Function) => {\n+const loadLazyComponent = (url: string) => async () => {\n// NOTE: there isn't any duplication here\n// Read Webpack docs about code-splitting for more info.\nif (process.env.BROWSER) {\n@@ -24,26 +26,27 @@ const loadLazyComponent = (url: string) => {\nconst loadComponent = await import(/* webpackMode: \"eager\", webpackChunkName: \"lazy-containers\" */ `containers/${url}/index.jsx`)\nreturn loadComponent\n}\n-}\nexport const routes: Array<RouteItem> = [\n{\npath: '/',\nexact: true,\n+ lazy: true,\nicon: 'newspaper',\nname: 'Dashboard',\nsidebarVisible: true,\ntag: RouteAuth,\n- component: Dashboard\n+ component: loadLazyComponent('Dashboard')\n},\n{\npath: '/users',\nname: 'Users',\nexact: true,\n+ lazy: true,\nicon: 'users',\nsidebarVisible: true,\ntag: RouteAuth,\n- component: Users\n+ component: loadLazyComponent('Users')\n},\n{\nexternal: true,\n@@ -55,8 +58,9 @@ export const routes: Array<RouteItem> = [\n{\npath: '/auth',\nname: 'Auth',\n+ lazy: true,\ntag: Route,\n- component: Login\n+ component: loadLazyComponent('Login')\n},\n{\npath: '/users/:id',\n@@ -67,11 +71,3 @@ export const routes: Array<RouteItem> = [\ncomponent: loadLazyComponent('UserItem')\n}\n]\n-\n-function getHistory () {\n- const basename = ''\n- if (process.env.BROWSER !== true) {\n- return createMemoryHistory()\n- }\n- return createBrowserHistory({basename})\n-}\n",
        "date": "10.09.2017 14:34:54",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "refactor(UserAccount): only fetch deployments if module is enabled",
        "sim_diff": "diff --git a/lib/public/components/UserAccount.js b/lib/public/components/UserAccount.js @@ -7,7 +7,7 @@ import {browserHistory, Link} from 'react-router'\nimport {LinkContainer} from 'react-router-bootstrap'\nimport ManagerPage from '../../common/components/ManagerPage'\n-import {getComponentMessages, getConfigProperty} from '../../common/util/config'\n+import {getComponentMessages, getConfigProperty, isModuleEnabled} from '../../common/util/config'\nimport auth0 from '../../common/user/Auth0Manager'\nimport * as deploymentsActions from '../../manager/actions/deployments'\nimport * as feedsActions from '../../manager/actions/feeds'\n@@ -55,7 +55,7 @@ export default class UserAccount extends Component<Props> {\n.then((projects) =>\nPromise.all(projects.map(project => {\nfetchProjectFeeds(project.id)\n- fetchProjectDeployments(project.id)\n+ if (isModuleEnabled('deployment')) fetchProjectDeployments(project.id)\n}))\n)\n}\n"
    },
    {
        "msg": "feat(types): add type exports for color mode & theme providers",
        "diff": "diff --git a/packages/chakra-ui-core/types/index.d.ts b/packages/chakra-ui-core/types/index.d.ts @@ -3,18 +3,36 @@ import { Theme } from \"../../chakra-ui-theme/types\"\nimport useToast from \"../src/CToast\"\nimport { ToastFactory } from '../src/CToast/CToast'\n+type ChakraIcons = { [name: string]: Icon };\n+\ndeclare module 'vue/types/vue' {\nexport interface Vue {\n$toast: ToastFactory\n$chakra: {\ntheme: Theme\n- icons: { [name: string]: Icon }\n+ icons: ChakraIcons\n+ }\n+ }\n+}\n+\n+declare module '../src/CColorModeProvider' {\n+ export interface Provides {\n+ $chakraColorMode: () => 'light' | 'dark'\n+ $toggleColorMode: () => void\n+ }\n}\n- chakraColorMode: string\n- chakraToggleColorMode: string\n+\n+declare module '../src/CThemeProvider' {\n+ export interface Provides {\n+ $chakraTheme: Theme\n+ $chakraIcons: ChakraIcons\n+ $chakraColorMode: () => 'light'\n}\n}\n+export { Provides as CColorModeProvides } from '../src/CColorModeProvider'\n+export { Provides as CThemeProvides } from '../src/CThemeProvider'\n+\nexport const useToast: typeof useToast\nexport const defaultTheme: Theme\nexport * from './component'\n",
        "date": "04.10.2021 00:12:00",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "feat",
        "sim_msg": "refactor(button): script setup, removes build class util usage",
        "sim_diff": "diff --git a/src/components/button/CdrButton.vue b/src/components/button/CdrButton.vue -<template>\n- <component\n- :is=\"tag\"\n- :class=\"mapClasses(style,\n- baseClass,\n- modifierClass,\n- sizeClass,\n- fullWidthClass,\n- iconOnlyClass,\n- iconLeftClass,\n- iconRightClass,\n- elevatedClass,\n- iconOnlyClass,\n- withBackgroundClass,\n- )\"\n- :type=\"buttonType\"\n- >\n- <slot name=\"icon-left\" />\n- <slot />\n- <slot name=\"icon-right\" />\n- </component>\n-</template>\n-\n-<!-- NOTE: REMOVED icon slot. use icon-left -->\n-<script>\n-import { defineComponent, useCssModule, computed } from 'vue';\n+<script setup>\n+import { useCssModule, computed, useSlots } from 'vue';\nimport mapClasses from '../../utils/mapClasses';\n-import { buildClass, buildBooleanClass } from '../../utils/buildClass';\n+import { responsiveModifyClass, buildBooleanClass } from '../../utils/buildClass';\nimport propValidator from '../../utils/propValidator';\n-export default defineComponent({\n- name: 'CdrButton',\n- props: {\n- /**\n- * Controls render as button or anchor. {button, a}\n- */\n+const slots = useSlots();\n+const props = defineProps({\ntag: {\ntype: String,\ndefault: 'button',\nvalidator: (value) => propValidator(value, ['button', 'a']),\n},\n- /**\n- * Sets the button type. {button, submit, reset}\n- */\ntype: {\ntype: String,\ndefault: 'button',\nvalidator: (value) => propValidator(value, ['button', 'submit', 'reset']),\n},\n- /**\n- * Sets the button style\n- */\nmodifier: {\ntype: String,\ndefault: 'primary',\n- validator: (value) => propValidator(value, ['primary', 'secondary', 'sale', 'dark']),\n+ validator: (value) => propValidator(value, ['primary', 'secondary', 'sale', 'dark', 'link']),\n},\nsize: {\ntype: String,\n@@ -64,62 +30,76 @@ export default defineComponent({\n['small', 'medium', 'large'],\n),\n},\n- /**\n- * Increases box-shadow around button to enhance contrast against background\n- */\nelevated: {\ntype: Boolean,\ndefault: false,\n},\n- /**\n- * Renders an icon-only button. Default slot is disabled. Overrides size and responsiveSize props.\n- */\n+fullWidth: {\n+ type: [String, Boolean],\n+ default: false,\n+ validator: (value) => {\n+ if (typeof value === 'string') {\n+ return propValidator(\n+ value,\n+ ['@xs', '@sm', '@md', '@lg'],\n+ false,\n+ );\n+ }\n+ return typeof value === 'boolean';\n+ },\n+},\niconOnly: {\ntype: Boolean,\ndefault: false,\n},\n- /**\n- * Used in conjunction with `icon-only`, renders a border and background around the icon button\n- */\nwithBackground: {\ntype: Boolean,\ndefault: false,\n},\n- },\n- setup(props, ctx) {\n+});\n+\nconst baseClass = 'cdr-button';\n- const modifierClass = computed(() => buildClass(baseClass, props.modifier));\n- const elevatedClass = computed(() => props.elevated && buildClass(baseClass, 'elevated'));\n+const style = useCssModule();\n+\n+/************************ Computed properties *************************/\n+const modifierClass = computed(() => `${baseClass}--${props.modifier}`);\n+const elevatedClass = computed(() => props.elevated && `${baseClass}--elevated`);\nconst fullWidthClass = computed(() => !props.iconOnly && props.fullWidth\n&& buildBooleanClass(baseClass, props.fullWidth, 'full-width'));\nconst sizeClass = computed(() => (!props.iconOnly\n- ? buildClass(baseClass, props.size)\n+ ? responsiveModifyClass(baseClass, '', props.size)\n: `cdr-button--icon-only-${props.size}`));\n- const iconLeftClass = computed(() => ctx.slots['icon-left'] && ctx.slots.default\n- && buildClass(baseClass, 'has-icon-left'));\n- const iconRightClass = computed(() => ctx.slots['icon-right'] && ctx.slots.default\n- && buildClass(baseClass, 'has-icon-right'));\n- const iconOnlyClass = computed(() => props.iconOnly && buildClass(baseClass, 'icon-only'));\n+const iconLeftClass = computed(() => slots['icon-left'] && slots.default\n+ && `${baseClass}--has-icon-left`);\n+const iconRightClass = computed(() => slots['icon-right'] && slots.default\n+ && `${baseClass}--has-icon-right`);\n+const iconOnlyClass = computed(() => props.iconOnly && `${baseClass}--icon-only`);\nconst withBackgroundClass = computed(() => props.iconOnly\n- && props.withBackground && buildClass(baseClass, 'with-background'));\n+ && props.withBackground && `${baseClass}--with-background`);\n- return {\n- style: useCssModule(),\n- buttonType: props.tag === 'button' ? props.type : null,\n+</script>\n+<template>\n+ <component\n+ :is=\"tag\"\n+ :class=\"mapClasses(style,\nbaseClass,\nmodifierClass,\n- fullWidthClass,\nsizeClass,\n+ fullWidthClass,\niconOnlyClass,\niconLeftClass,\niconRightClass,\nelevatedClass,\n+ iconOnlyClass,\nwithBackgroundClass,\n- mapClasses,\n- };\n- },\n-});\n-</script>\n+ )\"\n+ :type=\"buttonType\"\n+ >\n+ <slot name=\"icon-left\" />\n+ <slot />\n+ <slot name=\"icon-right\" />\n+ </component>\n+</template>\n<style lang=\"scss\" module src=\"./styles/CdrButton.module.scss\">\n</style>\n"
    },
    {
        "msg": "feat: alias compat for preact X",
        "diff": "diff --git a/packages/cli/lib/lib/webpack/webpack-base-config.js b/packages/cli/lib/lib/webpack/webpack-base-config.js @@ -122,7 +122,8 @@ module.exports = function(env) {\n'.css',\n'.wasm',\n],\n- alias: {\n+ alias: Object.assign(\n+ {\nstyle: source('style'),\n'preact-cli-entrypoint': source('index'),\n// preact-compat aliases for supporting React dependencies:\n@@ -133,6 +134,8 @@ module.exports = function(env) {\n'@preact/async-loader/async'\n),\n},\n+ compat !== 'preact-compat' ? { 'preact-compat': compat } : {}\n+ ),\n},\nresolveLoader: {\n",
        "date": "29.09.2019 15:06:27",
        "repo": "preactjs/preact-cli",
        "type": "feat",
        "sim_msg": "fix: support es20215 to es5",
        "sim_diff": "diff --git a/webpack.config.js b/webpack.config.js @@ -9,10 +9,14 @@ const common = {\nhints: false\n},\nentry: './index.js',\n+ target: ['web', 'es5'],\noutput: {\npath: __dirname,\nfilename: 'dist/index.js',\nlibraryTarget: 'umd',\n+ environment: {\n+ arrowFunction: false\n+ }\n},\nresolve: {\nalias: {},\n"
    },
    {
        "msg": "feat(razzle): add config debug flags",
        "diff": "diff --git a/packages/razzle/config/createConfigAsync.js b/packages/razzle/config/createConfigAsync.js @@ -4,6 +4,7 @@ const fs = require('fs-extra');\nconst path = require('path');\nconst webpack = require('webpack');\nconst crypto = require('crypto');\n+const util = require('util');\nconst TerserPlugin = require('terser-webpack-plugin');\nconst HtmlWebpackPlugin = require('html-webpack-plugin');\nconst StartServerPlugin = require('razzle-start-server-webpack-plugin');\n@@ -337,6 +338,11 @@ module.exports = (\n});\n}\n+ if (razzleOptions.debug.options) {\n+ console.log(`Printing webpack options for ${target} target`);\n+ console.log(util.inspect(webpackOptions, {depth: null}));\n+ }\n+\nconst debugNodeExternals = razzleOptions.debug.nodeExternals;\nconst nodeExternalsFunc = (context, request, callback) => {\n@@ -950,7 +956,10 @@ module.exports = (\npaths,\n});\n}\n-\n+ if (razzleOptions.debug.config) {\n+ console.log(`Printing webpack config for ${target} target`);\n+ console.log(util.inspect(webpackConfig, {depth: null}));\n+ }\nresolve(config);\n});\n};\n",
        "date": "01.02.2021 16:41:49",
        "repo": "jaredpalmer/razzle",
        "type": "feat",
        "sim_msg": "fix: check for http in baseUrl\n* fix: check for http in baseUrl\n`path.posix.join` can't be used with URLs.\n* Update plugin.js",
        "sim_diff": "diff --git a/plugins/plugin-webpack/plugin.js b/plugins/plugin-webpack/plugin.js @@ -2,6 +2,7 @@ const crypto = require(\"crypto\");\nconst fs = require(\"fs\");\nconst glob = require(\"glob\");\nconst path = require(\"path\");\n+const url = require(\"url\");\nconst webpack = require(\"webpack\");\nconst MiniCssExtractPlugin = require(\"mini-css-extract-plugin\");\nconst TerserJSPlugin = require(\"terser-webpack-plugin\");\n@@ -67,7 +68,9 @@ function emitHTMLFiles({ doms, jsEntries, stats, baseUrl, buildDirectory }) {\nfor (const jsFile of jsFiles) {\nconst scriptEl = dom.window.document.createElement(\"script\");\n- scriptEl.src = path.posix.join(baseUrl, jsFile);\n+ scriptEl.src = url.parse(baseUrl).protocol\n+ ? url.resolve(baseUrl, jsFile)\n+ : path.posix.join(baseUrl, jsFile);\n// insert _before_ so the relative order of these scripts is maintained\ninsertBefore(scriptEl, originalScriptEl);\n}\n"
    },
    {
        "msg": "feat(isJWT): signature is not required",
        "diff": "diff --git a/src/lib/isJWT.js b/src/lib/isJWT.js import assertString from './util/assertString';\n-const jwt = /^[a-zA-Z0-9\\-_]+\\.[a-zA-Z0-9\\-_]+\\.[a-zA-Z0-9\\-_]+$/;\n+const jwt = /^([A-Za-z0-9\\-_~+\\/]+[=]{0,2})\\.([A-Za-z0-9\\-_~+\\/]+[=]{0,2})(?:\\.([A-Za-z0-9\\-_~+\\/]+[=]{0,2}))?$/;\nexport default function isJWT(str) {\nassertString(str);\n",
        "date": "10.10.2018 22:04:39",
        "repo": "validatorjs/validator.js",
        "type": "feat",
        "sim_msg": "chore(ui): fix linting issue from previous PR",
        "sim_diff": "diff --git a/ui/src/utils/patterns.js b/ui/src/utils/patterns.js @@ -19,6 +19,7 @@ export const testPattern = {\n// This is a basic helper validation.\n// For something more complex (like RFC 822) you should write and use your own rule.\n// We won't be accepting PRs to enhance the one below because of the reason above.\n+ // eslint-disable-next-line\nemail: v => /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(v),\nhexColor: v => hex.test(v),\n"
    },
    {
        "msg": "feat(server/ssr): move to react 16\nfeat(server/ssr): move to react 16",
        "diff": "diff --git a/src/server/ssr/index.js b/src/server/ssr/index.js */\nimport React from 'react'\nimport chalk from 'chalk'\n-// import _ from 'lodash'\n-import {renderToNodeStream, renderToStaticNodeStream} from 'react-dom/server'\n+import {renderToNodeStream} from 'react-dom/server'\nimport {ServerStyleSheet, StyleSheetManager} from 'styled-components'\nimport {configureRootComponent, configureApp} from 'common/app'\n-// import {addLocaleData} from 'react-intl'\nimport HtmlComponent from './HtmlComponent'\n// $FlowFixMe\nimport assets from 'webpack-assets'\n@@ -58,9 +56,11 @@ export default async (req: express$Request, res: express$Response) => {\n'Content-Type': 'text/html'\n})\nres.write(beforeAppTag)\n+ res.write(`<div id=\"app\">`)\nstream.pipe(res, {end: false})\nstream.on('end', () => {\n+ res.write('</div>')\nres.write(afterAppTag)\nres.end()\n})\n",
        "date": "30.09.2017 14:22:54",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "feat(app): SSR prod distributables should force use the prod code of externalized vue/vuex/etc packages",
        "sim_diff": "diff --git a/app/lib/webpack/ssr/webserver.js b/app/lib/webpack/ssr/webserver.js @@ -6,6 +6,8 @@ const WebserverAssetsPlugin = require('./plugin.webserver-assets')\nconst injectNodeTypescript = require('../inject.node-typescript')\nconst WebpackProgressPlugin = require('../plugin.progress')\n+const nodeEnvBanner = `if(process.env.NODE_ENV===void 0){process.env.NODE_ENV='production'}`\n+\nconst flattenObject = (obj, prefix = 'process.env') => {\nreturn Object.keys(obj)\n.reduce((acc, k) => {\n@@ -104,6 +106,15 @@ module.exports = function (cfg, configName) {\n.use(WebpackProgressPlugin, [{ name: configName, cfg, hasExternalWork: true }])\nif (cfg.ctx.prod) {\n+ // we need to set process.env.NODE_ENV to 'production'\n+ // (unless it's already set to something)\n+ // in order for externalized vue/vuex/etc packages to run the\n+ // production code (*.cjs.prod.js) instead of the dev one\n+ chain.plugin('node-env-banner')\n+ .use(webpack.BannerPlugin, [\n+ { banner: nodeEnvBanner, raw: true, entryOnly: true }\n+ ])\n+\nchain.plugin('webserver-assets-plugin')\n.use(WebserverAssetsPlugin, [ cfg ])\n"
    },
    {
        "msg": "feat: more comprehensive gitignore",
        "diff": "diff --git a/.gitignore b/.gitignore *.swp\n*.swo\n-node_modules/\n-build/\n-.DS_Store/\n-/coverage\n-coverage.json\n+\n+# Logs\n+logs\n+*.log\n+\n+# Runtime data\n+pids\n+*.pid\n+*.seed\nallFiredEvents\nscTopics\n+\n+# Coverage directory used by tools like istanbul\n+coverage\n+coverage.json\n+\n+# node-waf configuration\n+.lock-wscript\n+\n+# Dependency directory\n+node_modules\n+\n+# Debug log from npm\n+npm-debug.log\n+\n+# local env variables\n+.env\n+\n+# truffle build directory\n+build/\n+\n+# lol macs\n+.DS_Store/\n",
        "date": "24.11.2017 13:03:52",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "feat",
        "sim_msg": "chore(ci): increase mocha test timeout to reduce flakiness of cli suite",
        "sim_diff": "diff --git a/package.json b/package.json \"scripts\": {\n\"preversion\": \"npm test\",\n\"pretest\": \"eslint .\",\n- \"test\": \"istanbul cover ./node_modules/mocha/bin/_mocha --report lcovonly -- --opts mocha.opts\",\n+ \"test\": \"istanbul cover ./node_modules/mocha/bin/_mocha --report lcovonly -- --opts mocha.opts --timeout 10000\",\n\"coverage\": \"cat ./coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js\",\n\"semantic-release\": \"semantic-release\",\n\"travis-deploy-once\": \"travis-deploy-once\",\n"
    },
    {
        "msg": "feat(Footer): add basic test\nfeat(Footer): add basic test",
        "diff": "diff --git a/src/common/components/parts/Footer/index.test.jsx b/src/common/components/parts/Footer/index.test.jsx +import React from 'react'\n+import Footer from 'components/parts/Footer'\n+import {shallow} from 'enzyme'\n+import toJson from 'enzyme-to-json'\n+\n+describe('Footer component', () => {\n+ it('same snapshot', () => {\n+ const component = shallow(<Footer />)\n+ expect(toJson(component)).toMatchSnapshot()\n+ })\n+})\n",
        "date": "10.09.2017 13:55:08",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "test: update header test",
        "sim_diff": "diff --git a/src/components/Header/Header.test.js b/src/components/Header/Header.test.js import React from \"react\";\nimport renderer from \"react-test-renderer\";\n+import { shallow } from \"enzyme\";\nimport Header from \"./Header\";\ntest(\"basic snapshot\", () => {\n- const component = renderer.create(<Header />);\n+ const component = renderer.create(shallow(<Header />).get(3));\nconst tree = component.toJSON();\nexpect(tree).toMatchSnapshot();\n"
    },
    {
        "msg": "feat: use jest fake timer",
        "diff": "diff --git a/packages/dropdown/src/__tests__/Dropdown.spec.js b/packages/dropdown/src/__tests__/Dropdown.spec.js -import Dropdown from '../dropdown.vue'\n-import DropdownMenu from '../dropdown-menu.vue'\n-import DropdownItem from '../dropdown-item.vue'\n-\n+import '@testing-library/jest-dom'\nimport { mount } from '@vue/test-utils'\nimport { nextTick, ref } from 'vue'\nimport sinon from 'sinon'\n+import Dropdown from '../dropdown.vue'\n+import DropdownMenu from '../dropdown-menu.vue'\n+import DropdownItem from '../dropdown-item.vue'\n+\nconst components = {\nElDropdown: Dropdown,\nElDropdownMenu: DropdownMenu,\nElDropdownItem: DropdownItem\n}\n+jest.useFakeTimers()\n+\nconst wait = (time = 300) => {\n- return new Promise((resolve) => {\n- setTimeout(resolve, time)\n- })\n+ jest.runAllTimers()\n}\ndescribe('Dropdown', () => {\n",
        "date": "12.09.2020 16:32:29",
        "repo": "hug-sun/element3",
        "type": "feat",
        "sim_msg": "fix(nav-item-dropdown): add show class",
        "sim_diff": "diff --git a/lib/components/nav-item-dropdown.vue b/lib/components/nav-item-dropdown.vue <slot name=\"button-content\"><slot name=\"text\"><span v-html=\"text\"></span></slot></slot>\n</a>\n- <div :class=\"['dropdown-menu',{'dropdown-menu-right': right}]\"\n+ <div :class=\"['dropdown-menu',{'dropdown-menu-right': right, show: visible}]\"\nrole=\"menu\"\nref=\"menu\"\n:aria-labelledby=\"id ? (id + '__BV_button_') : null\"\n"
    },
    {
        "msg": "feat: Add optional argument to cxxr",
        "diff": "diff --git a/src/system/pair.js b/src/system/pair.js @@ -14,10 +14,23 @@ class Pair {\nthis.cdr = cdr;\n}\n- caar(){ return this.car.car; }\n- cadr(){ return this.cdr.car; }\n- cdar(){ return this.cdr.car; }\n- cddr(){ return this.cdr.cdr; }\n+ // Returns `this.car.car`. If `err` is given and `this.car` is not a pair,\n+ // throws `err`.\n+ caar(err){ return this._get([\"car\", \"car\"], err) }\n+ cadr(err){ return this._get([\"cdr\", \"car\"], err) }\n+ cdar(err){ return this._get([\"cdr\", \"car\"], err) }\n+ cddr(err){ return this._get([\"cdr\", \"cdr\"], err) }\n+ _get(props, err) {\n+ let x = this;\n+ props.forEach(p => {\n+ if (x.hasOwnProperty(p)) {\n+ return x[p];\n+ } else if (err) {\n+ throw err;\n+ }\n+ });\n+ return x;\n+ }\nfirst(){ return this.car; }\nsecond(){ return this.cdr.car; }\n",
        "date": "16.01.2022 13:06:19",
        "repo": "biwascheme/biwascheme",
        "type": "feat",
        "sim_msg": "fix(core): replace unsupported Object.entries\nfixes",
        "sim_diff": "diff --git a/src/components/core/classes/addClasses.js b/src/components/core/classes/addClasses.js @@ -2,8 +2,8 @@ function prepareClasses(entries, prefix) {\nconst resultClasses = [];\nentries.forEach((item) => {\nif (typeof item === 'object') {\n- Object.entries(item).forEach(([classNames, condition]) => {\n- if (condition) {\n+ Object.keys(item).forEach((classNames) => {\n+ if (item[classNames]) {\nresultClasses.push(prefix + classNames);\n}\n});\n"
    },
    {
        "msg": "feat: add `process.browser` for compatibility",
        "diff": "diff --git a/src/plugins/process-global-plugin.js b/src/plugins/process-global-plugin.js * @returns {import('rollup').Plugin}\n*/\nexport default function processGlobalPlugin({ NODE_ENV = 'development', env = {} } = {}) {\n- const processObj = `{env:${JSON.stringify({ ...env, NODE_ENV })}}`;\n+ const processObj = JSON.stringify({ browser: true, env: { ...env, NODE_ENV } });\nreturn {\nname: 'process-global',\n",
        "date": "15.01.2021 20:26:37",
        "repo": "preactjs/wmr",
        "type": "feat",
        "sim_msg": "build(rollup): create new configuration",
        "sim_diff": "diff --git a/rollup.config.js b/rollup.config.js -import resolve from 'rollup-plugin-node-resolve';\n-import babel from 'rollup-plugin-babel';\n+import flow from 'rollup-plugin-flow';\nimport commonjs from 'rollup-plugin-commonjs';\n+import resolve from 'rollup-plugin-node-resolve';\nimport { uglify } from 'rollup-plugin-uglify';\n+import babel from 'rollup-plugin-babel';\n+import { terser } from 'rollup-plugin-terser';\n+import replace from 'rollup-plugin-replace';\n+import pkg from './package.json';\n-const prod = process.env.PRODUCTION;\n-let config = {\n- input: 'src/index.js',\n- external: ['react', 'styled-components'],\n-};\n-\n-const plugins = [resolve(), commonjs(), babel()];\n-\n-if (prod) plugins.push(uglify());\n+const configuredFlow = flow({ all: true, pretty: true });\n-if (process.env.BROWSER) {\n- config = {\n- ...config,\n- output: {\n- file: 'dist/styled-breakpoints.umd.js',\n- sourcemap: true,\n- format: 'umd',\n- exports: 'named',\n- name: 'styled-breakpoints',\n- },\n- plugins,\n- };\n-} else if (process.env.COMMON) {\n- config = {\n- ...config,\n- plugins: [resolve(), commonjs(), babel()],\n+export default [\n+ // CommonJS\n+ {\n+ input: './src/index.js',\noutput: {\n- file: 'dist/styled-breakpoints.common.js',\n+ file: 'lib/styled-breakpoints.cjs.js',\nformat: 'cjs',\n+ indent: false,\n+ sourcemap: false,\n},\n- };\n-} else if (process.env.ES) {\n- config = {\n- ...config,\n- plugins: [resolve(), commonjs(), babel()],\n+ external: [\n+ ...Object.keys(pkg.dependencies || {}),\n+ ...Object.keys(pkg.peerDependencies || {}),\n+ ],\n+ plugins: [configuredFlow, babel(), uglify(), resolve(), commonjs()],\n+ },\n+\n+ // ES\n+ {\n+ input: './src/index.js',\noutput: {\n- file: 'dist/styled-breakpoints.es.js',\n+ file: 'es/styled-breakpoints.es.js',\nformat: 'es',\n+ indent: false,\n+ sourcemap: false,\n+ },\n+ external: [\n+ ...Object.keys(pkg.dependencies || {}),\n+ ...Object.keys(pkg.peerDependencies || {}),\n+ ],\n+ plugins: [configuredFlow, resolve(), babel(), terser(), commonjs()],\n},\n- };\n-}\n-export default config;\n+ // ES for Browsers\n+ {\n+ input: 'src/index.js',\n+ output: {\n+ file: 'es/styled-breakpoints.es.mjs',\n+ format: 'es',\n+ indent: false,\n+ sourcemap: false,\n+ },\n+ plugins: [\n+ configuredFlow,\n+ resolve({\n+ jsnext: true,\n+ }),\n+ replace({\n+ 'process.env.NODE_ENV': JSON.stringify('production'),\n+ }),\n+ terser(),\n+ commonjs(),\n+ ],\n+ },\n+];\n"
    },
    {
        "msg": "feat(webpac_config/client/prod): remove comments from css files",
        "diff": "diff --git a/webpack_config/client/webpack.prod.babel.js b/webpack_config/client/webpack.prod.babel.js @@ -76,7 +76,14 @@ base.plugins.push(\nfilename: '[name].[chunkhash:8].css',\nallChunks: true\n}),\n- new OptimizeCssAssetsPlugin(),\n+ new OptimizeCssAssetsPlugin({\n+ cssProcessorOptions: {\n+ safe: true,\n+ discardComments: {\n+ removeAll: true\n+ }\n+ }\n+ }),\n// NOTE: ModuleConcatenationPlugin doesn't work on linux alpine,\n// I got an error trying to deploy this app to zeit's `now` when i use this plugin\n// new webpack.optimize.ModuleConcatenationPlugin(),\n@@ -114,17 +121,15 @@ base.plugins.push(\nname: 'manifest'\n}),\nnew webpack.BannerPlugin({\n- banner:\n- 'React-Semantic.UI-Starter. MIT License. Copyright (c) 2017 Copyright Vladimir Metnew. All Rights Reserved. https://github.com/Metnew/react-semantic.ui-starter'\n+ banner: config.banner\n}),\n- // XXX: this plugin seems cool, but there are few big issues:\n+ // XXX: this plugin looks cool, but there are few big issues:\n// 1. It sets invalid url to browserconfig.xml and manifest.json in index.html.\n// E.g: in generated index.html you can see:\n// <meta name=\"msapplication-config\" content=\"browserconfig.xml\">\n// 2. It looks like generated images aren't minified.(not sure)\n+ // 3. plugin is deprecated (at least look like it's deprecated)!\n// NOTE: It would be better to generate favicons without this plugin.\n- //\n- //\nnew FaviconsWebpackPlugin({\n// add theme-color property\nbackground: config.manifest.theme,\n",
        "date": "05.08.2017 12:11:04",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "feat: add helpful error messages for removed plugins",
        "sim_diff": "diff --git a/lib/webpack.js b/lib/webpack.js @@ -132,3 +132,23 @@ exportPlugins(exports.node = {}, {\nexportPlugins(exports.debug = {}, {\n\"ProfilingPlugin\": () => require(\"./debug/ProfilingPlugin\"),\n});\n+\n+const defineMissingPluginError = (pluginName, errorMessage) => {\n+ Reflect.defineProperty(exports.optimize, pluginName, {\n+ configurable: false,\n+ enumerable: true,\n+ get() {\n+ throw new Error(errorMessage);\n+ }\n+ });\n+}\n+\n+defineMissingPluginError(\n+ \"UglifyJsPlugin\",\n+ \"webpack.optimize.UglifyJsPlugin has been removed, please use config.optimization.minimize instead.\"\n+)\n+\n+defineMissingPluginError(\n+ \"CommonsChunkPlugin\",\n+ \"webpack.optimize.CommonsChunkPlugin has been removed, please use config.optimization.splitChunks instead.\"\n+)\n"
    },
    {
        "msg": "feat(cli): Added CLI support for the --global-var option :tada:",
        "diff": "diff --git a/lib/cli/index.js b/lib/cli/index.js @@ -314,7 +314,24 @@ var _ = require('lodash'),\nvar runParser = new argparse.ArgumentParser({\ndebug: true,\naddHelp: false\n- });\n+ }),\n+\n+ /**\n+ * Parses `=` separated key-value pairs into Postman variable list like arrays. `=` characters in values are\n+ * also supported.\n+ *\n+ * @param {String} arg - The argument provided to `--global-var`.\n+ * @returns {{key, value}} - The object representation of the current CLI variable.\n+ * @throws {Error} - An error is thrown for arguments that are not in the form foo=bar.\n+ */\n+ cliVar = function (arg) {\n+ var eqIndex = arg.indexOf('=');\n+\n+ if (eqIndex === -1) { throw new Error('CLI global vars must be specified in a `key=value` format'); }\n+\n+ // This is done instead of splitting by `=` to avoid chopping off `=` that could be present in the value\n+ return { key: arg.slice(0, eqIndex), value: arg.slice(eqIndex + 1) };\n+ };\nrunParser.addArgument('collection', {\nhelp: 'URL or path to a Postman Collection'\n@@ -398,6 +415,12 @@ var _ = require('lodash'),\ndefaultValue: false\n});\n+ runParser.addArgument(['--global-var'], {\n+ help: 'Allows the specification of global variables via the command line, in a key=value format',\n+ type: cliVar,\n+ action: 'append'\n+ });\n+\nreturn runParser;\n},\n",
        "date": "24.07.2017 14:33:45",
        "repo": "postmanlabs/newman",
        "type": "feat",
        "sim_msg": "docs(api): add description for coerce behavior for array type argument\nCloses",
        "sim_diff": "diff --git a/docs/api.md b/docs/api.md @@ -137,10 +137,10 @@ var argv = require('yargs')\nProvide a synchronous function to coerce or transform the value(s) given on the\ncommand line for `key`.\n-The coercion function should accept one argument, representing the parsed value\n-from the command line, and should return a new value or throw an error. The\n-returned value will be used as the value for `key` (or one of its aliases) in\n-`argv`.\n+The coercion function should accept one argument, representing the parsed value from\n+the command line (an array if multiple values are parsed for the key), and should\n+return a new value or throw an error. The returned value will be used as the value for\n+`key` (or one of its aliases) in `argv`.\nIf the function throws, the error will be treated as a validation\nfailure, delegating to either a custom [`.fail()`](#fail) handler or printing\n"
    },
    {
        "msg": "feat(server/middlewares/auth): add default language\nfeat(server/middlewares/auth): add default language for req.user",
        "diff": "diff --git a/src/server/middlewares/auth.js b/src/server/middlewares/auth.js @@ -14,6 +14,7 @@ import {JWT_TOKEN} from 'common/api/LocalStorageCookiesSvc'\nexport default (req: Object, res: Object, next: () => void) => {\nreq.user = {\ntoken: null,\n+ lang: 'en',\nisLoggedIn: false\n}\n",
        "date": "10.09.2017 17:33:32",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "feat(account): add account management support",
        "sim_diff": "diff --git a/src/middleware/packages/auth/services/auth.local.js b/src/middleware/packages/auth/services/auth.local.js @@ -154,7 +154,8 @@ const AuthLocalService = {\naliases: {\n'GET /': 'auth.account.findSettingsByWebId',\n'POST /': 'auth.account.updateAccountSettings'\n- }\n+ },\n+ authorization: true\n};\nconst routes = [\n"
    },
    {
        "msg": "feat(reducers/auth): remove jwt token from state.me.auth\nfeat(reducers/auth): remove jwt token from state.me.auth",
        "diff": "diff --git a/src/common/reducers/auth/index.js b/src/common/reducers/auth/index.js // @flow\n-import {\n- isLoggedIn as hasLocalToken,\n- getLocalToken\n-} from 'api/LocalStorageCookiesSvc'\n+import {isLoggedIn as hasLocalToken} from 'api/LocalStorageCookiesSvc'\nimport {\nLOGIN_AUTH_FAIL,\nLOGIN_AUTH_PENDING,\n@@ -23,7 +20,6 @@ export type State = {\nisLoading: boolean,\nisLoaded: boolean,\nisLoggedIn: boolean,\n- token: string | null,\nerrors: Object\n}\n@@ -38,7 +34,6 @@ export const initialState: State = {\nisLoading: false,\nisLoaded: false,\nisLoggedIn: hasLocalToken(),\n- token: getLocalToken(),\nerrors: {}\n}\n@@ -52,7 +47,6 @@ export function auth (state: State = initialState, action: Action): State {\nisLoading: false,\nisLoaded: true,\nisLoggedIn: false,\n- token: null,\nerrors: {}\n}\n}\n@@ -63,18 +57,15 @@ export function auth (state: State = initialState, action: Action): State {\nisLoading: false,\nisLoaded: true,\nisLoggedIn: false,\n- token: null,\nerrors\n}\n}\ncase LOGIN_AUTH_SUCCESS: {\n- const {token} = action.payload\nreturn {\n...state,\nisLoading: false,\nisLoaded: true,\n- isLoggedIn: true,\n- token\n+ isLoggedIn: true\n}\n}\ncase LOGIN_AUTH_PENDING: {\n",
        "date": "17.09.2017 14:55:40",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "fix: refresh login based on loaded, not authenticated prop",
        "sim_diff": "diff --git a/src/client/auth/authActions.js b/src/client/auth/authActions.js import Cookie from 'js-cookie';\nimport { createAction } from 'redux-actions';\n-import { getAuthenticatedUserName, getIsAuthenticated } from '../reducers';\n+import { getAuthenticatedUserName, getIsAuthenticated, getIsLoaded } from '../reducers';\nimport { createAsyncActionType } from '../helpers/stateHelpers';\nimport { addNewNotification } from '../app/appActions';\nimport { getFollowing } from '../user/userActions';\n@@ -24,9 +24,11 @@ export const BUSY_LOGIN = createAsyncActionType('@auth/BUSY_LOGIN');\nconst loginError = createAction(LOGIN_ERROR);\nexport const login = () => (dispatch, getState, { steemConnectAPI }) => {\n+ const state = getState();\n+\nlet promise = Promise.resolve(null);\n- if (getIsAuthenticated(getState())) {\n+ if (getIsLoaded(state)) {\npromise = Promise.resolve(null);\n} else if (!steemConnectAPI.options.accessToken) {\npromise = Promise.reject(new Error('There is not accessToken present'));\n@@ -40,7 +42,7 @@ export const login = () => (dispatch, getState, { steemConnectAPI }) => {\npromise,\n},\nmeta: {\n- refresh: getIsAuthenticated(getState()),\n+ refresh: getIsLoaded(state),\n},\n}).catch(() => dispatch(loginError()));\n};\n"
    },
    {
        "msg": "feat(CarPlay): Add CarPlay plugin to the list of possible plugins",
        "diff": "diff --git a/packages/rnv/pluginTemplates/renative.plugins.json b/packages/rnv/pluginTemplates/renative.plugins.json },\n\"@lightningjs/sdk\": {\n\"version\": \"3.0.0\"\n+ },\n+ \"react-native-carplay\": {\n+ \"version\": \"2.0.0\",\n+ \"ios\": {\n+ \"path\": \"node_modules/react-native-carplay\",\n+ \"podName\": \"react-native-carplay\",\n+ \"appDelegateImports\": [\"CarPlay\", \"react_native_carplay\"],\n+ \"appDelegateExtensions\": [\"CPApplicationDelegate\"],\n+ \"appDelegateMethods\": {\n+ \"application\": {\n+ \"didConnectCarInterfaceController\": [\n+ \"RNCarPlay.connect(with: interfaceController, window: window)\"\n+ ],\n+ \"didDisconnectCarInterfaceController\": [\"RNCarPlay.disconnect()\"]\n+ }\n+ }\n+ }\n}\n}\n}\n",
        "date": "15.06.2021 14:00:16",
        "repo": "pavjacko/renative",
        "type": "feat",
        "sim_msg": "chore: remove fix-nvm-ios script",
        "sim_diff": "diff --git a/example/package.json b/example/package.json \"android\": \"react-native run-android\",\n\"ios\": \"react-native run-ios --simulator=\\\"iPhone SE (2nd generation)\\\"\",\n\"pod:install\": \"cd ios && pod install\",\n- \"preios\": \"yarn pod:install && yarn fix-nvm-ios\",\n\"start\": \"react-native start\",\n\"postinstall\": \"node ./scripts/set_access_token.js && jetifier\",\n\"purge:android\": \"(cd android && ./gradlew --stop) && rm -rf ~/.gradle/caches/ android/app/build\",\n\"purge:ios\": \"rm -rf ios/Pods/* ios/build ~/Library/Caches/CocoaPods ~/Library/Developer/Xcode/DerivedData && pod cache clean --all\",\n\"purge:js\": \"rm -rf node_modules && yarn cache clean && watchman watch-del-all\",\n\"purge\": \"yarn purge:js && yarn purge:android && yarn purge:ios\",\n- \"fix-nvm-ios\": \"node ./scripts/fix_nvm_issue.js\",\n\"type:check\": \"yarn tsc --noEmit\"\n},\n\"dependencies\": {\n"
    },
    {
        "msg": "feat(Header): add FormattedMessage\nfeat(Header): add FormattedMessage",
        "diff": "diff --git a/src/common/components/parts/Header/index.jsx b/src/common/components/parts/Header/index.jsx import React from 'react'\nimport PropTypes from 'prop-types'\nimport {Icon, Popup} from 'semantic-ui-react'\n+import {FormattedMessage, FormattedDate} from 'react-intl'\n+\nimport {isEqual} from 'lodash'\nimport {\nStyledHeader,\n@@ -56,7 +58,16 @@ class Header extends React.Component {\n<Icon name=\"github\" size=\"large\" link fitted />\n</HeaderButton>\n}\n- content={`RSUIS on @Github`}\n+ content={\n+ <FormattedMessage\n+ id=\"Header.Popup.HeaderButton\"\n+ defaultMessage={`Hello {name}, today is {today, date}`}\n+ values={{\n+ name: <b>user</b>,\n+ today: Date.now()\n+ }}\n+ />\n+ }\ninverted\n/>\n</HeaderInner>\n",
        "date": "09.09.2017 18:02:34",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "chore: improve useEffect of PoiAlert",
        "sim_diff": "diff --git a/views/components/info/alert.es b/views/components/info/alert.es import React, { useState, useRef, useCallback, useEffect } from 'react'\nimport i18next from 'views/env-parts/i18next'\n-import { takeRight } from 'lodash'\n+import { take } from 'lodash'\nimport styled, { keyframes, css } from 'styled-components'\nimport { CustomTag } from 'views/components/etc/custom-tag'\n-const HISTORY_SIZE = 6\n+const HISTORY_SIZE = 7\n+\n+const initialMessage = {\n+ type: 'default',\n+ content: i18next.t('Waiting for response'),\n+ priority: 0,\n+ options: {\n+ dontReserve: true,\n+ },\n+}\nconst PoiAlertTag = styled(CustomTag)`\nwidth: 0;\n@@ -98,15 +107,7 @@ const MsgMainCnt = styled.div`\n`\nexport const PoiAlert = () => {\n- const [history, setHistory] = useState([])\n- const [current, setCurrent] = useState({\n- type: 'default',\n- content: i18next.t('Waiting for response'),\n- priority: 0,\n- options: {\n- dontReserve: true,\n- },\n- })\n+ const [list, setList] = useState([initialMessage])\nconst [showHistory, setShowHistory] = useState(false)\nconst [containerWidth, setContainerWidth] = useState(1)\nconst [containerHeight, setContainerHeight] = useState(0)\n@@ -116,13 +117,11 @@ export const PoiAlert = () => {\nconst alertMain = useRef()\nconst alertHistory = useRef()\nconst msgCnt = useRef()\n- const updateTime = useRef(0)\nconst stickyEnd = useRef(Date.now())\nconst toggleHistory = useCallback(() => setShowHistory(!showHistory), [showHistory])\n- const handleAddAlert = useCallback(\n- (e) => {\n+ const handleAddAlert = useCallback((e) => {\nconst nowTS = Date.now()\nconst value = {\ntype: 'default',\n@@ -131,23 +130,25 @@ export const PoiAlert = () => {\nts: nowTS,\n...e.detail,\n}\n+ setList((prevList) => {\n+ const [current, ...history] = prevList\nif (value.priority < current.priority && nowTS < stickyEnd.current) {\nif (!value.dontReserve) {\n// Old message has higher priority, push new message to history\n- setHistory([...takeRight(history, HISTORY_SIZE), value])\n+ return [current, value, ...take(history, HISTORY_SIZE - 2)]\n}\n} else if (!current.dontReserve) {\n// push old message to history\n- updateTime.current = value.stickyFor || 3000\n- setHistory([...takeRight(history, HISTORY_SIZE - 1), current])\n- setCurrent(value)\n+ stickyEnd.current = nowTS + value.stickyFor || 3000\n+ return [value, current, ...take(history, HISTORY_SIZE - 2)]\n} else {\n- updateTime.current = value.stickyFor || 3000\n- setCurrent(value)\n+ // Replace old message\n+ stickyEnd.current = nowTS + value.stickyFor || 3000\n+ return [value, ...take(history, HISTORY_SIZE - 1)]\n}\n- },\n- [current, history],\n- )\n+ return prevList\n+ })\n+ }, [])\nconst handleRefResize = useCallback((entries) => {\nentries.forEach((entry) => {\n@@ -165,11 +166,6 @@ export const PoiAlert = () => {\n})\n}, [])\n- useEffect(() => {\n- stickyEnd.current = Date.now() + updateTime.current\n- updateTime.current = 0\n- })\n-\nuseEffect(() => {\nconst observer = new ResizeObserver(handleRefResize)\nobserver.observe(alertMain.current)\n@@ -185,6 +181,8 @@ export const PoiAlert = () => {\n}, [handleRefResize, handleAddAlert])\nconst isOverflow = msgWidth > containerWidth\n+ const [current, ...history] = list\n+\nreturn (\n<PoiAlertTag tag=\"poi-alert\">\n<AlertMain id=\"alert-main\" className=\"alert-main bp3-popover\" ref={alertMain}>\n@@ -216,7 +214,7 @@ export const PoiAlert = () => {\ncontainerHeight={containerHeight}\nonClick={toggleHistory}\n>\n- {history.map((h) => (\n+ {history.reverse().map((h) => (\n<AlertLogContent\nkey={h.ts}\nclassName={`bp3-callout bp3-intent-${h.type}`}\n"
    },
    {
        "msg": "feat(.babelrc): add babel-plugin-webpack-alias in test and development\nadd babel-plugin-webpack-alias in test and development",
        "diff": "diff --git a/.babelrc b/.babelrc },\n\"development\": {\n\"plugins\": [\n- \"react-hot-loader/babel\"\n+ \"react-hot-loader/babel\",\n+ [\n+ \"babel-plugin-webpack-alias\",\n+ {\n+ \"config\": \"./webpack_config/client/webpack.base.js\",\n+ \"findConfig\": true\n+ }\n+ ]\n+ ]\n+ },\n+ \"test\": {\n+ \"plugins\": [\n+ [\n+ \"babel-plugin-webpack-alias\",\n+ {\n+ \"config\": \"./webpack_config/webpack.isomorphic.js\",\n+ \"findConfig\": true\n+ }\n+ ]\n]\n}\n}\n",
        "date": "14.08.2017 16:59:06",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "refactor: simplify project-wide babel config",
        "sim_diff": "diff --git a/babel.config.js b/babel.config.js module.exports = {\nbabelrcRoots: [\".\", \"./website/*\"],\npresets: [[\"@babel/env\", { loose: true }], \"@babel/react\"],\n- plugins: [\"dev-expression\"],\n+ plugins: [\n+ \"dev-expression\",\n+ [\"@babel/plugin-proposal-class-properties\", { loose: true }]\n+ ],\nenv: {\ntest: {\npresets: [[\"@babel/preset-env\", { targets: { node: \"current\" } }]]\n}\n- },\n- overrides: [\n- {\n- test: \"./packages/react-router/modules/*\",\n- plugins: [[\"@babel/plugin-proposal-class-properties\", { loose: true }]]\n- },\n- {\n- test: \"./packages/react-router-dom/modules/*\",\n- plugins: [[\"@babel/plugin-proposal-class-properties\", { loose: true }]]\n}\n- ]\n};\n"
    },
    {
        "msg": "feat(src/common/routing/index.jsx): use  /* webpackMode: \"eager\" for server-side code",
        "diff": "diff --git a/src/common/routing/index.jsx b/src/common/routing/index.jsx @@ -7,7 +7,12 @@ export const history = getHistory()\nconst loadLazyComponent = url => {\nreturn async cb => {\n- const loadComponent = await import(/* webpackMode: \"lazy-once\", webpackChunkName: \"lazy-containers\" */ `containers/${url}/index.jsx`)\n+ const str = `containers/${url}/index.jsx`\n+ if (process.env.BROWSER) {\n+ const loadComponent = await import(/* webpackMode: \"lazy-once\", webpackChunkName: \"lazy-containers\" */ str)\n+ return loadComponent\n+ }\n+ const loadComponent = await import(/* webpackMode: \"eager\", webpackChunkName: \"lazy-containers\" */ str)\nreturn loadComponent\n}\n}\n",
        "date": "10.08.2017 06:18:33",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "feat(cli): support pages.js",
        "sim_diff": "diff --git a/packages/webpack-uni-pages-loader/lib/index.js b/packages/webpack-uni-pages-loader/lib/index.js @@ -13,6 +13,10 @@ const {\ngetPagesJson\n} = require('@dcloudio/uni-cli-shared/lib/cache')\n+const {\n+ pagesJsonJsFileName\n+} = require('@dcloudio/uni-cli-shared/lib/pages')\n+\nconst parseStyle = require('./util').parseStyle\nconst emitFileCaches = {}\n@@ -44,11 +48,18 @@ module.exports = function (content) {\nthis.cacheable && this.cacheable()\nconst manifestJsonPath = path.resolve(process.env.UNI_INPUT_DIR, 'manifest.json')\n+ const pagesJsonJsPath = path.resolve(process.env.UNI_INPUT_DIR, pagesJsonJsFileName)\nconst manifestJson = parseManifestJson(fs.readFileSync(manifestJsonPath, 'utf8'))\nthis.addDependency(manifestJsonPath)\n+ this.addDependency(pagesJsonJsPath)\n- const pagesJson = parsePagesJson(content)\n+ const pagesJson = parsePagesJson(content, {\n+ addDependency: (file) => {\n+ (process.UNI_PAGES_DEPS || (process.UNI_PAGES_DEPS = new Set())).add(normalizePath(file))\n+ this.addDependency(file)\n+ }\n+ })\nif (manifestJson.transformPx === false) {\nprocess.UNI_TRANSFORM_PX = false\n"
    },
    {
        "msg": "feat: add keyboard navigation for Schedule",
        "diff": "diff --git a/packages/veui/src/components/Schedule.vue b/packages/veui/src/components/Schedule.vue <td v-for=\"(hour, j) in day\" :key=\"j\" :class=\"{ 'veui-schedule-selected': hour.isSelected }\">\n<button type=\"button\" :disabled=\"realDisabled || hour.isDisabled\"\n:class=\"mergeClass({ 'veui-schedule-selected': hour.isSelected }, week[i], j)\"\n- :ref=\"`${week[i]}-${j}`\"\n+ :ref=\"`hour-${week[i]}-${j}`\"\n@mousedown=\"handleMousedown(i, j)\"\n@mouseenter=\"handleHover(i, j)\"\n- @mouseup=\"pick()\"><slot name=\"hour\" :day=\"week[i]\" :hour=\"j\"/></button>\n+ @mouseup=\"pick\"\n+ @keydown.space.enter=\"handleMousedown(i, j)\"\n+ @keyup.space.enter=\"pick\"\n+ @keydown.up.prevent=\"moveFocus((i + 6) % 7, j)\"\n+ @keydown.right.prevent=\"moveFocus(i, (j + 25) % 24)\"\n+ @keydown.down.prevent=\"moveFocus((i + 1) % 7, j)\"\n+ @keydown.left.prevent=\"moveFocus(i, (j + 23) % 24)\"><slot name=\"hour\" :day=\"week[i]\" :hour=\"j\"/></button>\n</td>\n</tr>\n</table>\n@@ -239,7 +245,7 @@ export default {\nif (!current) {\nreturn null\n}\n- return `${current.day}-${current.hour}`\n+ return `hour-${current.day}-${current.hour}`\n},\ncurrentLabel () {\nlet current = this.current\n@@ -366,6 +372,15 @@ export default {\nthis.$delete(this.localSelected, day)\n}\nthis.$emit('select', this.localSelected)\n+ },\n+ moveFocus (dayIndex, hour) {\n+ let day = this.week[dayIndex]\n+ this.handleHover(dayIndex, hour)\n+\n+ let el = (this.$refs[`hour-${day}-${hour}`] || [])[0]\n+ if (el && typeof el.focus === 'function') {\n+ el.focus()\n+ }\n}\n}\n}\n",
        "date": "11.06.2018 15:35:37",
        "repo": "ecomfe/veui",
        "type": "feat",
        "sim_msg": "fix(time-picker): the selected value was changed when open again",
        "sim_diff": "diff --git a/src/components/time-picker/time-picker.vue b/src/components/time-picker/time-picker.vue const value = this.value\nconst minTime = this.minTime\n// fix the value last choose was changed when time-picker is opened again\n- if (value < Math.floor(minTime / MINUTE_TIMESTAMP) * MINUTE_TIMESTAMP) {\n+ const comparativeTime = (this.min || this.min === 0)\n+ ? +minTime\n+ : Math.floor(minTime / MINUTE_TIMESTAMP) * MINUTE_TIMESTAMP\n+ if (value < comparativeTime) {\nthis.selectedIndex = [0, 0, 0]\n} else {\n// calculate dayIndex\n"
    },
    {
        "msg": "feat(avatar): docs",
        "diff": "diff --git a/packages/chakra-ui-core/src/CAvatar/CAvatar.js b/packages/chakra-ui-core/src/CAvatar/CAvatar.js @@ -54,9 +54,6 @@ export const CAvatarBadge = {\nborderColor: borderColorStyle[this.colorMode],\nrounded: 'full',\n...forwardProps(this.$props)\n- },\n- attrs: {\n- 'data-chakra-component': 'CAvatarBadge'\n}\n})\n}\n@@ -83,8 +80,7 @@ const CAvatarName = {\n...forwardProps(this.$props)\n},\nattrs: {\n- 'aria-label': this.name,\n- 'data-chakra-component': 'CAvatarName'\n+ 'aria-label': this.name\n}\n}, [this.name && getInitials(this.name)])\n}\n@@ -107,9 +103,6 @@ const CDefaultAvatar = {\nlineHeight: '1rem',\n...forwardProps(this.$props)\n},\n- attrs: {\n- 'data-chakra-component': 'CDefaultAvatar'\n- },\ndomProps: {\ninnerHTML: `\n<svg fill=\"#fff\" viewBox=\"0 0 128 128\" role=\"img\">\n@@ -211,10 +204,10 @@ export const CAvatar = {\nw: '100%',\nh: '100%',\nrounded: 'full',\n- objectFit: 'cover'\n+ objectFit: 'cover',\n+ alt: this.name\n},\nattrs: {\n- alt: this.name,\nsrc: this.src\n}\n})\n@@ -225,16 +218,11 @@ export const CAvatar = {\nreturn h(CAvatarName, {\nprops: {\nname: this.name,\n- w: _size,\n- h: _size\n+ size: _size\n}\n})\n} else {\nreturn h(CDefaultAvatar, {\n- props: {\n- w: '100%',\n- h: '100%'\n- },\nattrs: {\n'aria-label': this.name\n}\n@@ -243,20 +231,12 @@ export const CAvatar = {\n}\n}\n- const { size, ...avatarStyles } = avatarStyleProps\n-\nreturn h(CBox, {\nprops: {\nfontSize: fontSize,\nlineHeight: _size,\n- verticalAlign: 'top',\n- w: size,\n- h: size,\n- ...avatarStyles,\n+ ...avatarStyleProps,\n...forwardProps(this.$props)\n- },\n- attrs: {\n- 'data-chakra-component': 'CAvatar'\n}\n}, [\nrenderChildren(),\n",
        "date": "05.04.2020 17:41:01",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "feat",
        "sim_msg": "chore: Restore missing comma",
        "sim_diff": "diff --git a/src/technologies/c.json b/src/technologies/c.json 66\n],\n\"description\": \"Chakra UI is a simple, modular and accessible component library that gives you the building blocks you need to build your React applications.\",\n- \"dom\": \"html[style*='chakra-ui-color-mode'], body.chakra-ui-dark, body.chakra-ui-light, div.chakra-portal\"\n+ \"dom\": \"html[style*='chakra-ui-color-mode'], body.chakra-ui-dark, body.chakra-ui-light, div.chakra-portal\",\n\"icon\": \"Chakra UI.svg\",\n\"implies\": \"React\",\n\"oss\": true,\n"
    },
    {
        "msg": "feat: added css for github button",
        "diff": "diff --git a/components/SocialLoginGroup/SocialLoginGroup.css b/components/SocialLoginGroup/SocialLoginGroup.css }\n/* Github */\n-.githubButton {\n+\n+/* WHITE */\n+\n+/* .githubButton {\ncolor: #24292e;\nbackground: #eff3f6;\ntransition: opacity 0.15s linear;\n.githubButton::before {\nborder-right: #1b1f23 1px solid;\n- background: url(\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/14082/icon_github.png\") 6px 6px\n+ background-color: #eff3f6;\n+ background-image: url(\"http://localhost:3000/static/images/icons/github_logo_black.svg\");\n+ background-repeat: no-repeat;\n+}\n+\n+.githubButton:active,\n+.githubButton:hover,\n+.githubButton:focus {\n+ opacity: 0.8;\n+ cursor: pointer;\n+} */\n+\n+/* .githubButton {\n+ color: #24292e;\n+ background: #eff3f6;\n+ transition: opacity 0.15s linear;\n+ border: 1px solid #1b1f23;\n+}\n+\n+.githubButton::before {\n+ content: url(\"http://localhost:3000/static/images/icons/github_logo_black.svg\");\n+ border-right: #1b1f23 1px solid;\n+ /* background-color: #eff3f6;\n+ background-image: url(\"http://localhost:3000/static/images/icons/github_logo.svg\");\n+ background-repeat: no-repeat;\n+}\n+\n+.githubButton:active,\n+.githubButton:hover,\n+.githubButton:focus {\n+ opacity: 0.8;\n+ cursor: pointer;\n+} */\n+\n+/* BLACK */\n+.githubButton {\n+ color: #eff3f6;\n+ background: #24292e;\n+ transition: opacity 0.15s linear;\n+ border: 1px solid #1b1f23;\n+}\n+\n+.githubButton::before {\n+ border-right: #b0b0b0 1px solid;\n+ background: url(\"http://localhost:3000/static/images/icons/github_octocat_logo.svg\") 4px 4px\nno-repeat;\n}\n",
        "date": "16.10.2019 12:32:51",
        "repo": "operationcode/front-end",
        "type": "feat",
        "sim_msg": "style(sidebar): style the sidebar padding and link text with overrides",
        "sim_diff": "diff --git a/styleguide.config.js b/styleguide.config.js @@ -92,6 +92,7 @@ module.exports = {\n},\nfontFamily: {\nbase: [\n+ \"PostGrotesk-Book\",\n\"-apple-system\",\n\"sans-serif\"\n],\n@@ -118,19 +119,15 @@ module.exports = {\nsidebar: {\nbackgroundColor: \"#f7fdff\",\nborder: [[\"#a7edff\", \"solid\"]],\n- borderWidth: [[0, 2, 0, 0]]\n+ borderWidth: [[0, 2, 0, 0]],\n+ paddingLeft: 25,\n},\nlogo: {\nborderBottom: [[0]],\nbackgroundImage: \"url(reaction-design-system-logo.svg)\",\nbackgroundRepeat: \"no-repeat\",\nheight: 110,\n- backgroundPosition: \"50%\",\n- }\n- },\n- ComponentsList: {\n- list: {\n- paddingLeft: \"40px\"\n+ backgroundPosition: \"25% 50%\",\n}\n},\nEditorLoader: {\n@@ -141,6 +138,20 @@ module.exports = {\n}\n}\n},\n+ ComponentsList: {\n+ item: {\n+ color: \"#062a4e\",\n+ \"& > a\": {\n+ fontWeight: \"bold !important\",\n+ textDecoration: \"none !important\"\n+ }\n+ },\n+ isChild: {\n+ \"& > a\": {\n+ fontWeight: \"normal !important\",\n+ }\n+ }\n+ },\nReactComponent: {\nheader: {\nbackgroundColor: \"#fffbcc\",\n@@ -165,11 +176,11 @@ module.exports = {\nLink: {\nlink: {\n'&, &:link, &:visited': {\n- color: \"#fd8283\",\n+ color: \"inherit\",\ntextDecoration: \"underline\",\n},\n'&:hover, &:active': {\n- color: \"#fd8283\",\n+ color: \"inherit\",\ntextDecoration: \"none\"\n},\n}\n@@ -181,6 +192,7 @@ module.exports = {\n},\nTableOfContents: {\nsearch: {\n+ paddingLeft: 0,\nposition: \"relative\",\n\"&::before\": {\nborder: \"3px solid #052a4e\",\n@@ -188,7 +200,7 @@ module.exports = {\ncontent: \"' '\",\ndisplay: \"block\",\nheight: 12,\n- left: 28,\n+ left: 14,\nwidth: 12,\nposition: \"absolute\",\ntop: \"47%\",\n@@ -200,7 +212,7 @@ module.exports = {\ncontent: \"' '\",\ndisplay: \"block\",\nheight: 7,\n- left: 38,\n+ left: 24,\nposition: \"absolute\",\ntransform: \"rotate(-45deg)\",\ntop: \"52%\",\n@@ -212,6 +224,7 @@ module.exports = {\nbackgroundColor: \"#f6f6f6\",\nborder: \"1px solid #f6f6f6\",\nborderRadius: 23,\n+ padding: 11,\npaddingLeft: 35,\n\"&:focus\": {\nborderColor: \"#ebebeb\",\n"
    },
    {
        "msg": "feat: use contenthash instead of chunkhash and hash",
        "diff": "diff --git a/packages/razzle/config/createConfigAsync.js b/packages/razzle/config/createConfigAsync.js @@ -532,7 +532,7 @@ module.exports = (\nexclude: webpackOptions.fileLoaderExlude,\nloader: require.resolve('file-loader'),\noptions: {\n- name: `${razzleOptions.mediaPrefix}/[name].[hash:8].[ext]`,\n+ name: `${razzleOptions.mediaPrefix}/[name].[contenthash:8].[ext]`,\nemitFile: IS_WEB,\n},\n},\n@@ -544,7 +544,7 @@ module.exports = (\nloader: require.resolve('url-loader'),\noptions: {\nlimit: 10000,\n- name: `${razzleOptions.mediaPrefix}/[name].[hash:8].[ext]`,\n+ name: `${razzleOptions.mediaPrefix}/[name].[contenthash:8].[ext]`,\nemitFile: IS_WEB,\n},\n},\n@@ -844,8 +844,8 @@ module.exports = (\nconfig.output = {\npath: paths.appBuildPublic,\npublicPath: dotenv.raw.PUBLIC_PATH || '/',\n- filename: `${razzleOptions.jsPrefix}/bundle.[chunkhash:8].js`,\n- chunkFilename: `${razzleOptions.jsPrefix}/[name].[chunkhash:8].chunk.js`,\n+ filename: `${razzleOptions.jsPrefix}/bundle.[contenthash:8].js`,\n+ chunkFilename: `${razzleOptions.jsPrefix}/[name].[contenthash:8].chunk.js`,\nlibraryTarget: 'var',\n};\n",
        "date": "23.08.2020 17:44:58",
        "repo": "jaredpalmer/razzle",
        "type": "feat",
        "sim_msg": "refactor(build-config): do not emit files during server build",
        "sim_diff": "diff --git a/packages/build-config/sections/module-rules/file.js b/packages/build-config/sections/module-rules/file.js @@ -11,3 +11,12 @@ exports.default = {\nname: path.join(hopsConfig.assetPath, '[name]-[hash:16].[ext]'),\n},\n};\n+\n+exports.node = {\n+ exclude: /\\.(?:m?jsx?|html|json)$/,\n+ loader: require.resolve('file-loader'),\n+ options: {\n+ name: path.join(hopsConfig.assetPath, '[name]-[hash:16].[ext]'),\n+ emitFile: false,\n+ },\n+};\n"
    },
    {
        "msg": "feat: CSS Variables support",
        "diff": "diff --git a/scss/mixins/_utilities.scss b/scss/mixins/_utilities.scss // Don't prefix if value key is null (eg. with shadow class)\n$property-class-modifier: if($key, if($property-class == \"\" and $infix == \"\", \"\", \"-\") + $key, \"\");\n+ // Generate also CSS Variable\n+ $generate-vars: if(map-has-key($utility, vars), map-get($utility, vars), \"false\");\n+\n@if map-get($utility, rfs) {\n// Inside the media query\n@if $is-rfs-media-query {\n}\n.#{$property-class + $infix + $property-class-modifier} {\n@each $property in $properties {\n+ @if $generate-vars == true {\n#{$property}: var(--#{$variable-prefix}#{$property-class + $infix + $property-class-modifier}, $value) if($enable-important-utilities, !important, null);\n}\n+ @else {\n+ #{$property}: $value if($enable-important-utilities, !important, null);\n+ }\n+ }\n}\n@each $pseudo in $state {\n",
        "date": "04.01.2021 15:06:26",
        "repo": "coreui/coreui",
        "type": "feat",
        "sim_msg": "feat: update display font sizes and line heights\nfeat: update display font sizes and line heights\nBREAKING CHANGE changed font-sizes and line-heights of display-1,-2,-3,-4",
        "sim_diff": "diff --git a/scss/core/_variables.scss b/scss/core/_variables.scss // Variables\n+// Variables\n//\n// Variables should follow the `$component-state-property-size` formula for\n// consistent naming. Ex: $nav-link-disabled-color and $modal-content-box-shadow-xs.\n@@ -560,16 +561,17 @@ $headings-font-weight: $font-weight-bold !default;\n$headings-line-height: 1.25 !default;\n$headings-color: $black !default;\n-$display1-size: 6rem !default;\n-$display2-size: 5.5rem !default;\n-$display3-size: 4.5rem !default;\n-$display4-size: 3.5rem !default;\n+$display1-size: 3.75rem !default;\n+$display2-size: 4.875rem !default;\n+$display3-size: 5.625rem !default;\n+$display4-size: 7.5rem !default;\n$display1-weight: 700 !default;\n$display2-weight: 700 !default;\n$display3-weight: 700 !default;\n$display4-weight: 700 !default;\n-$display-line-height: $headings-line-height !default;\n+\n+$display-line-height: 1.0 !default;\n$lead-font-size: $font-size-base * 1.25 !default;\n$lead-font-weight: null !default;\n"
    },
    {
        "msg": "feat(api/links.json): fix links desc\nfeat(api/links.json): fix links desc",
        "diff": "diff --git a/src/server/api/links.json b/src/server/api/links.json \"icon\": \"github\",\n\"header\": \"SSR + Webpack (in development)\",\n\"desc\":\n- \"Step by step guide with working example of hot-reloaded server and client with SSR with Webpack in development.\"\n+ \"Step by step guide with working example of server and client with hot-reloading and SSR with Webpack (in development).\"\n},\n{\n- \"link\": \"https://github.com/Metnew/tiny-universal-example\",\n+ \"link\": \"https://github.com/Metnew/noir\",\n\"icon\": \"bug\",\n- \"header\": \"How to test actions and reducers?\",\n- \"desc\": \"How to test actions and reducers?\"\n+ \"header\": \"Testing\",\n+ \"desc\": \"How to test actions, reducers, components?\"\n},\n{\n\"link\": \"https://github.com/Metnew/noir\",\n\"icon\": \"paint brush\",\n- \"header\": \"Why semantic-ui-react?\"\n+ \"header\": \"Why semantic-ui-react?\",\n+ \"desc\": \"Notes about SUI. Why SUIR is a good (or bad) choise.\"\n},\n{\n\"link\": \"\",\n\"icon\": \"globe\",\n\"header\": \"How i18n works?\",\n- \"desc\": \"i18n configuration and how to customize it in own project\"\n+ \"desc\": \"How i18n is implemented and how to customize it.\"\n},\n{\n\"header\": \"How Webpack is configured?\",\n\"icon\": \"code\",\n\"link\": \"\",\n\"desc\":\n- \"Webpack configuration for server/client in production and development\"\n+ \"Webpack configuration for server/client in production and development.\"\n},\n{\n\"link\": \"\",\n\"icon\": \"terminal\",\n- \"header\": \"npm scripts\",\n- \"desc\": \"npm scripts under the hood and ENV vars\"\n+ \"header\": \"npm scripts and ENV vars\",\n+ \"desc\": \"Docs about every npm script and ENV variable.\"\n},\n{\n\"link\": \"\",\n\"icon\": \"folder\",\n\"header\": \"Folder structure\",\n- \"desc\": \"Why this folder structure and how to adapt it for own project\"\n+ \"desc\": \"Why this folder structure and how to adapt it in own project.\"\n}\n]\n",
        "date": "13.10.2017 16:51:17",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "chore(app): update TS-related deps",
        "sim_diff": "diff --git a/app/package.json b/app/package.json \"@quasar/ssr-helpers\": \"^0.0.1\",\n\"@types/cordova\": \"0.0.34\",\n\"@types/electron-packager\": \"14.0.0\",\n- \"@types/express\": \"4.17.8\",\n+ \"@types/express\": \"4.17.11\",\n\"@types/terser-webpack-plugin\": \"3.0.0\",\n\"@types/webpack\": \"4.41.24\",\n\"@types/webpack-bundle-analyzer\": \"3.8.0\",\n\"express\": \"4.17.1\",\n\"fast-glob\": \"3.2.4\",\n\"file-loader\": \"6.2.0\",\n- \"fork-ts-checker-webpack-plugin\": \"6.0.4\",\n+ \"fork-ts-checker-webpack-plugin\": \"6.1.0\",\n\"friendly-errors-webpack-plugin\": \"1.7.0\",\n\"fs-extra\": \"9.0.1\",\n\"html-minifier\": \"4.0.0\",\n\"strip-ansi\": \"6.0.0\",\n\"table\": \"6.0.3\",\n\"terser-webpack-plugin\": \"4.1.0\",\n- \"ts-loader\": \"8.0.7\",\n- \"typescript\": \"4.0.5\",\n+ \"ts-loader\": \"8.0.14\",\n+ \"typescript\": \"4.1.3\",\n\"url-loader\": \"4.1.1\",\n\"vue\": \"^3.0.0\",\n\"vue-loader\": \"^16.1.2\",\n"
    },
    {
        "msg": "feat(Modal): Make toggle prop optional\n* Make toggle prop optional on Modal\nre\n* Check toggle prop for null",
        "diff": "diff --git a/src/Modal.js b/src/Modal.js @@ -14,7 +14,7 @@ import {\nconst propTypes = {\nisOpen: PropTypes.bool,\nsize: PropTypes.string,\n- toggle: PropTypes.func.isRequired,\n+ toggle: PropTypes.func,\nkeyboard: PropTypes.bool,\nbackdrop: PropTypes.oneOfType([\nPropTypes.bool,\n@@ -90,7 +90,7 @@ class Modal extends React.Component {\n}\nhandleEscape(e) {\n- if (this.props.keyboard && e.keyCode === 27) {\n+ if (this.props.keyboard && e.keyCode === 27 && this.props.toggle) {\nthis.props.toggle();\n}\n}\n@@ -100,7 +100,7 @@ class Modal extends React.Component {\nconst container = this._dialog;\n- if (e.target && !container.contains(e.target)) {\n+ if (e.target && !container.contains(e.target) && this.props.toggle) {\nthis.props.toggle();\n}\n}\n",
        "date": "14.02.2017 08:55:27",
        "repo": "reactstrap/reactstrap",
        "type": "feat",
        "sim_msg": "feat: handle modal esc key",
        "sim_diff": "diff --git a/src/components/ui/modal.js b/src/components/ui/modal.js +import {Component} from 'react'\nimport {connect} from 'zefir/utils'\n-const Modal = ({\n+class Modal extends Component {\n+ componentWillMount (props) {\n+ window.addEventListener('keydown', this.props.handleEscKey)\n+ }\n+\n+ componentWillUnmount (props) {\n+ window.removeEventListener('keydown', this.props.handleEscKey)\n+ }\n+\n+ render () {\n+ const {\ntitle, subtitle, children, name, ui, toggle, full, size, noPadding, visible\n-}) => (\n+ } = this.props\n+\n+ return ui.modal === name || visible ? (\n<div className={`\nModal ${ui.modal === name || visible ? 'is-visible' : ''}\n${full ? 'Modal--full' : ''}\n@@ -143,11 +156,14 @@ const Modal = ({\npadding-bottom: 90px;\n}\n+ .Modal--full .Modal__inner {\n+ height: 100%;\n+ }\n+\n.Modal__inner {\nborder-radius: 8px;\noverflow: hidden;\nflex: 1;\n- height: 100%;\nmax-width: 770px;\nmargin-left: 30px;\nmargin-right: 30px;\n@@ -183,10 +199,13 @@ const Modal = ({\n}\n`}</style>\n</div>\n-)\n+ ) : null\n+ }\n+}\nModal.init = ({\nname,\n+ router: {history: {push}},\nstores: {ui},\nservices: {ui: {toggleModal}},\ntoggle,\n@@ -196,6 +215,11 @@ Modal.init = ({\nname,\nui,\ntoggle: toggle || (() => toggleModal(name)),\n+ handleEscKey: (e) => {\n+ if (e.keyCode === 27 && name === 'socket-details') {\n+ push('/sockets')\n+ }\n+ },\n...rest\n}\n}\n"
    },
    {
        "msg": "feat: :sparkles: add Fathom tracking",
        "diff": "diff --git a/src/app.html b/src/app.html name=\"viewport\"\ncontent=\"width=device-width, initial-scale=1\"\n/>\n+ <script\n+ src=\"https://4pvafmq.cheatsheets.xyz/script.js\"\n+ data-site=\"WERPEKMT\"\n+ defer\n+ ></script>\n%svelte.head%\n</head>\n<body>\n",
        "date": "12.07.2021 08:42:23",
        "repo": "spences10/cheat-sheets",
        "type": "feat",
        "sim_msg": "feat: Fast Chinese website",
        "sim_diff": "diff --git a/site/index.html b/site/index.html <script src=\"bundle.js\" type=\"text/javascript\" defer></script>\n</head>\n<body>\n- <div id=\"app\" />\n+ <div id=\"app\"></div>\n</body>\n</html>\n"
    },
    {
        "msg": "feat(drawer): add stories for Drawer component",
        "diff": "diff --git a/packages/chakra-ui-core/src/Drawer/Drawer.stories.js b/packages/chakra-ui-core/src/Drawer/Drawer.stories.js +import { storiesOf } from '@storybook/vue'\n+import { Fragment, Input, Button, Drawer, DrawerBody, DrawerFooter, DrawerHeader, DrawerOverlay, DrawerContent, DrawerCloseButton } from '..'\n+\n+storiesOf('UI | Drawer', module)\n+ .add('Drawer', () => ({\n+ components: { Fragment, Input, Button, Drawer, DrawerBody, DrawerFooter, DrawerHeader, DrawerOverlay, DrawerContent, DrawerCloseButton },\n+ data: () => ({ isOpen: false }),\n+ methods: {\n+ close () {\n+ this.isOpen = false\n+ }\n+ },\n+ template: `\n+ <Fragment>\n+ <Button ref=\"btnRef\" @click=\"isOpen =true\">Open Drawer</Button>\n+\n+ <Drawer :isOpen=\"isOpen\" placement=\"right\" :on-close=\"close\" :initialFocusRef=\"()=>$refs.inputInsideModal\">\n+ <DrawerOverlay />\n+ <DrawerContent>\n+ <DrawerCloseButton />\n+ <DrawerHeader>Create your account</DrawerHeader>\n+\n+ <DrawerBody>\n+ <Input ref=\"inputInsideModal\" placeholder=\"Type here...\" />\n+ </DrawerBody>\n+\n+ <DrawerFooter>\n+ <Button variant=\"outline\" mr=\"3\" @click=\"isOpen = false\">Cancel</Button>\n+ <Button color=\"blue\">Save</Button>\n+ </DrawerFooter>\n+ </DrawerContent>\n+ </Drawer>\n+ </Fragment>\n+ `\n+ }))\n",
        "date": "17.03.2020 22:34:36",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "feat",
        "sim_msg": "feat(QDrawer): handle dynamic side change",
        "sim_diff": "diff --git a/ui/src/components/drawer/QDrawer.js b/ui/src/components/drawer/QDrawer.js @@ -120,13 +120,17 @@ export default Vue.extend({\n))\n},\n- side (_, oldSide) {\n- this.layout[oldSide].space = false\n- this.layout[oldSide].offset = 0\n-\n+ side (newSide, oldSide) {\nif (this.layout.instances[oldSide] === this) {\nthis.layout.instances[oldSide] = void 0\n+ this.layout[oldSide].space = false\n+ this.layout[oldSide].offset = 0\n}\n+\n+ this.layout.instances[newSide] = this\n+ this.layout[newSide].size = this.size\n+ this.layout[newSide].space = this.onLayout\n+ this.layout[newSide].offset = this.offset\n},\nbehavior (val) {\n"
    },
    {
        "msg": "feat(build, watch): Less verbose error output",
        "diff": "diff --git a/src/lib/webpack/run-webpack.js b/src/lib/webpack/run-webpack.js @@ -38,7 +38,12 @@ const devBuild = async (env, onprogress) => {\nlet serverAddr = `${protocol}://${host}:${chalk.bold(port)}`;\nlet localIpAddr = `${protocol}://${ip.address()}:${chalk.bold(port)}`;\n- process.stdout.write(chalk.green('\\nCompiled successfully!!\\n\\n'));\n+ if (stats.hasErrors()) {\n+ process.stdout.write(chalk.red('\\Build failed!\\n\\n'));\n+ } else {\n+ process.stdout.write(chalk.green('\\nCompiled successfully!\\n\\n'));\n+ }\n+\nif (userPort !== port) {\nprocess.stdout.write(`Port ${chalk.bold(userPort)} is in use, using ${chalk.bold(port)} instead\\n\\n`);\n}\n@@ -71,7 +76,8 @@ const prodBuild = async (env) => {\nreturn await new Promise((resolve, reject) => {\ncompiler.run((err, stats) => {\nif (err || stats.hasErrors()) {\n- reject(err || stats.toJson().errors.join('\\n'));\n+ showStats(stats);\n+ reject(chalk.red('Build failed!'));\n}\nelse {\n// Timeout for plugins that work on `after-emit` event of webpack\n@@ -82,16 +88,16 @@ const prodBuild = async (env) => {\n};\nexport function showStats(stats) {\n- let info = stats.toJson();\n+ let info = stats.toJson(\"errors-only\");\nif (stats.hasErrors()) {\n- info.errors.forEach( message => {\n- process.stderr.write(message+'\\n');\n+ info.errors.map(stripBabelLoaderPrefix).forEach( message => {\n+ process.stderr.write(chalk.red(message)+'\\n');\n});\n}\nif (stats.hasWarnings()) {\n- info.warnings.forEach( message => {\n+ info.warnings.map(stripBabelLoaderPrefix).forEach( message => {\nprocess.stderr.write(chalk.yellow(message)+'\\n');\n});\n}\n@@ -109,8 +115,8 @@ export function writeJsonStats(stats) {\njsonStats = (jsonStats.children && jsonStats.children[0]) || jsonStats;\n- jsonStats.modules.forEach(normalizeModule);\n- jsonStats.chunks.forEach(c => c.modules.forEach(normalizeModule));\n+ jsonStats.modules.forEach(stripBabelLoaderFromModuleNames);\n+ jsonStats.chunks.forEach(c => c.modules.forEach(stripBabelLoaderFromModuleNames));\nreturn fs.writeFile(outputPath, JSON.stringify(jsonStats))\n.then(() => {\n@@ -121,20 +127,20 @@ export function writeJsonStats(stats) {\n});\n}\n-const normalizeModule = m => {\n+const stripBabelLoaderFromModuleNames = m => {\nconst keysToNormalize = ['identifier', 'name', 'module', 'moduleName', 'moduleIdentifier'];\nkeysToNormalize.forEach(key => {\nif (key in m) {\n- m[key] = normalizeName(m[key]);\n+ m[key] = stripBabelLoaderPrefix(m[key]);\n}\n});\nif (m.reasons) {\n- m.reasons.forEach(normalizeModule);\n+ m.reasons.forEach(stripBabelLoaderFromModuleNames);\n}\nreturn m;\n};\n-const normalizeName = p => p.substr(p.lastIndexOf('!') + 1);\n+const stripBabelLoaderPrefix = log => log.replace(/@?\\s*(\\.\\/~\\/babel-loader\\/lib\\?{[\\s\\S]*?}!)/g, '');\n",
        "date": "08.07.2017 11:27:49",
        "repo": "preactjs/preact-cli",
        "type": "feat",
        "sim_msg": "refactor(cleanup): Remove unused path from the build",
        "sim_diff": "diff --git a/scripts/build.js b/scripts/build.js @@ -11,7 +11,6 @@ require('dotenv').config({ silent: true });\nconst chalk = require('chalk');\nconst webpack = require('webpack');\nconst config = require('../config/webpack.config.prod');\n-const paths = require('../config/paths');\n// Create the production build and print the deployment instructions.\nfunction build() {\n@@ -24,58 +23,8 @@ function build() {\n}\nconsole.log(chalk.green('Compiled successfully.'));\n- console.log();\n-\n- const openCommand = process.platform === 'win32' ? 'start' : 'open';\n- const homepagePath = require(paths.appPackageJson).homepage;\n- const publicPath = config.output.publicPath;\n-\n- if (homepagePath && homepagePath.indexOf('.github.io/') !== -1) {\n- // \"homepage\": \"http://user.github.io/project\"\n- console.log(`The project was built assuming it is hosted at ${chalk.green(publicPath)}.`);\n- console.log(`You can control this with the ${chalk.green('homepage')} field in your ${chalk.cyan('package.json')}.`);\n- console.log();\n- console.log(`The ${chalk.cyan('dist')} folder is ready to be deployed.`);\n- console.log(`To publish it at ${chalk.green(homepagePath)}, run:`);\n- console.log();\n- console.log(` ${chalk.cyan('git')} commit -am ${chalk.yellow('\"Save local changes\"')}`);\n- console.log(` ${chalk.cyan('git')} checkout -B gh-pages`);\n- console.log(` ${chalk.cyan('git')} add -f dist`);\n- console.log(` ${chalk.cyan('git')} commit -am ${chalk.yellow('\"Rebuild website\"')}`);\n- console.log(` ${chalk.cyan('git')} filter-branch -f --prune-empty --subdirectory-filter dist`);\n- console.log(` ${chalk.cyan('git')} push -f origin gh-pages`);\n- console.log(` ${chalk.cyan('git')} checkout -`);\n- console.log();\n- } else if (publicPath !== '/') {\n- // \"homepage\": \"http://mywebsite.com/project\"\n- console.log(`The project was built assuming it is hosted at ${chalk.green(publicPath)}.`);\n- console.log(`You can control this with the ${chalk.green('homepage')} field in your ${chalk.cyan('package.json')}.`);\n- console.log();\nconsole.log(`The ${chalk.cyan('dist')} folder is ready to be deployed.`);\nconsole.log();\n- } else {\n- // no homepage or \"homepage\": \"http://mywebsite.com\"\n- console.log('The project was built assuming it is hosted at the server root.');\n- if (homepagePath) {\n- // \"homepage\": \"http://mywebsite.com\"\n- console.log(`You can control this with the ${chalk.green('homepage')} field in your ${chalk.cyan('package.json')}.`);\n- console.log();\n- } else {\n- // no homepage\n- console.log(`To override this, specify the ${chalk.green('homepage')} in your ${chalk.cyan('package.json')}.`);\n- console.log('For example, add this to build it for GitHub Pages:');\n- console.log();\n- console.log(` ${chalk.green('\"homepage\"')}${chalk.cyan(': ')}${chalk.green('\"http://myname.github.io/myapp\"')}${chalk.cyan(',')}`);\n- console.log();\n- }\n- console.log(`The ${chalk.cyan('dist')} folder is ready to be deployed.`);\n- console.log('You may also serve it locally with a static server:');\n- console.log();\n- console.log(` ${chalk.cyan('npm')} install -g pushstate-server`);\n- console.log(` ${chalk.cyan('pushstate-server')} dist`);\n- console.log(` ${chalk.cyan(openCommand)} http://localhost:9000`);\n- console.log();\n- }\n});\n}\n"
    },
    {
        "msg": "feat(src/server/api/auth): add auth route for server",
        "diff": "diff --git a/src/server/api/auth/index.js b/src/server/api/auth/index.js import {Router} from 'express'\n+import jwt from 'jsonwebtoken'\n+import chalk from 'chalk'\n+// import validator from 'validator'\n+// {isLength, trim, isAlphanumeric, escape}\nconst router = Router()\n// define the home page route\nrouter.post('/', (req, res) => {\n- res.json({token: 'nothing'})\n+ // const {username, password} = req.body\n+ // const usernameValidated = validator.isLength(0, 36).is\n+ // const passwordValidated =\n+ const data = {username: 'cool_username_for_testing'}\n+ jwt.sign(data, process.env.JWT_SECRET, (err, token) => {\n+ if (err) {\n+ throw new Error(\n+ `Cant create JWT token based on input data: ${JSON.stringify(data)}`,\n+ err\n+ )\n+ }\n+ console.log(chalk.yellow(`Generated token for user: ${data.username}`))\n+ res.json({token})\n+ })\n})\nexport default router\n",
        "date": "04.08.2017 13:55:47",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "fix: rocket login",
        "sim_diff": "diff --git a/components/auth/authRoutes.js b/components/auth/authRoutes.js import express from 'express'\nimport controller from './authController'\n+import crypto from '../crypto'\nconst router = express.Router()\nrouter.post('/', async (req, res) => {\n+ const { user, password } = await crypto.decrypt(req.body.data)\n+\nconst result = await controller.auth({\ntype: 'rocket',\n- user: req.body.user,\n- password: req.body.password\n+ user,\n+ password\n})\nreturn result.error ? res.status(401).json(result) : res.json(result)\n})\n"
    },
    {
        "msg": "feat(server/ssr): move i18n stuff to i18n, fix state creation\nfeat(server/ssr): construct state using req.useragent, remove\nlocaleData requiring, remove translations creation",
        "diff": "diff --git a/src/server/ssr/index.js b/src/server/ssr/index.js * @desc\n*/\nimport React from 'react'\n-import {readFileSync} from 'fs' // readFile\n-import path from 'path'\n+import chalk from 'chalk'\n// import _ from 'lodash'\n-import {sync as globSync} from 'glob'\nimport {renderToString} from 'react-dom/server'\nimport {ServerStyleSheet, StyleSheetManager} from 'styled-components'\nimport {configureRootComponent, configureApp} from 'common/app'\n// import {addLocaleData} from 'react-intl'\nimport HtmlComponent from './HtmlComponent'\n+// $FlowFixMe\nimport assets from 'webpack-assets'\n+// $FlowFixMe\nimport faviconsAssets from 'favicons-assets'\n-import type {Node} from 'react'\n-\n-const translations = globSync('locals/*.json')\n- .map(filename => [\n- path.basename(filename, '.json'),\n- readFileSync(filename, 'utf8')\n- ])\n- .map(([locale, file]) => [locale, JSON.parse(file)])\n- .reduce((collection, [locale, messages]) => {\n- collection[locale] = messages\n- return collection\n- }, {})\n+import getI18nData from 'server/i18n'\nexport default (req: express$Request, res: express$Response) => {\n- const {isLoggedIn, token, lang} = req.user\n+ const {isLoggedIn, lang} = req.user\n+ const {isMobile} = req.useragent\n+ console.log(chalk.cyan(`MOBILE DEVICE: ${isMobile}`, JSON.stringify(req.useragent), lang))\n+ const meState = {auth: {isLoggedIn}}\n+ const layoutState = {isMobile}\nconst initialState: Object = isLoggedIn\n- ? {me: {auth: {isLoggedIn, token}}}\n- : {}\n- const localeData = require('react-intl/locale-data/' + (lang || 'en'))\n- const i18n = {\n- lang,\n- localeData,\n- locale: lang,\n- messages: translations[lang]\n- }\n- //\n+ ? {me: meState, layout: layoutState}\n+ : {layout: layoutState}\n+ const i18n = getI18nData(lang)\nconst sheet = new ServerStyleSheet()\nconst location: string = req.url\nconst context = {}\nconst {store, history, routes} = configureApp(initialState)\n- const RootComponent: Node = configureRootComponent({\n+ const RootComponent: React$Node = configureRootComponent({\nstore,\nhistory,\nroutes,\n",
        "date": "17.09.2017 14:25:22",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "fix(docs): update getStyles usage",
        "sim_diff": "diff --git a/website/docs/internal/production.md b/website/docs/internal/production.md @@ -79,16 +79,16 @@ Also note that the configuration of the `rule` parameter in JS files uses `enfor\nThere are two ways to implement SSR.\n-### SSR via getStyles function\n+### SSR via sstyled.getStyles function\nThis method will work for you if you're not using the @semcore/shadow-loader package (see [CSS extract](/internal/production/#a5c869)).\n-Use the @semcore/core package and the `getStyles` function which will return `style` tags with all the necessary styles:\n+Use the @semcore/core package and the `sstyled.getStyles` function which will return `style` tags with all the necessary styles:\n```jsx\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n-import { getStyles } from '@semcore/core';\n+import { sstyled } from '@semcore/core';\nimport App from './App';\nconst body = ReactDOM.renderToString(<App />);\n@@ -96,7 +96,7 @@ const body = ReactDOM.renderToString(<App />);\nconst html = `\n<html>\n<head>\n- {getStyles().css}\n+ {sstyled.getStyles().css}\n</head>\n<body>\n<div id=\"root\">{body}</div>\n"
    },
    {
        "msg": "feat(server/ssr): add Lazy loading with SSR\nfeat(server/ssr): add lazy loading with SSR",
        "diff": "diff --git a/src/server/ssr/index.js b/src/server/ssr/index.js @@ -13,6 +13,7 @@ import assets from 'webpack-assets'\n// $FlowFixMe\nimport faviconsAssets from 'favicons-assets'\nimport getI18nData from 'server/i18n'\n+import {matchPath} from 'react-router'\nexport default async (req: express$Request, res: express$Response) => {\nconst {isLoggedIn, language} = req.user\n@@ -50,6 +51,18 @@ export default async (req: express$Request, res: express$Response) => {\ninitialState: preloadedState,\ni18n\n}\n+\n+ // FIXME: how to replace `let` and `for`?\n+ let lazyRoutes = routes.filter(a => a.lazy)\n+ for (var i = 0; i < lazyRoutes.length; i++) {\n+ let route = routes[i]\n+ if (matchPath(req.url, route)) {\n+ route.component = await routes[i].component().default\n+ route.lazy = false\n+ break\n+ }\n+ }\n+\nconst {beforeAppTag, afterAppTag} = HtmlComponent(props)\nres.writeHead(200, {\n",
        "date": "30.10.2017 00:37:17",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "docs(ssr-caching): remove link to react-esi example",
        "sim_diff": "diff --git a/examples/ssr-caching/README.md b/examples/ssr-caching/README.md @@ -5,8 +5,6 @@ That's what this example demonstrate.\nThis app uses Next's [custom server and routing](https://github.com/zeit/next.js#custom-server-and-routing) mode. It also uses [express](https://expressjs.com/) to handle routing and page serving.\n-Alternatively, see [the example using React ESI](../with-react-esi/).\n-\n## How to use\n### Using `create-next-app`\n"
    },
    {
        "msg": "feat(creset): reset styles on server using created hook",
        "diff": "diff --git a/packages/chakra-ui-core/src/CReset/CReset.js b/packages/chakra-ui-core/src/CReset/CReset.js @@ -36,7 +36,7 @@ const CReset = {\nprops: {\nconfig: Object\n},\n- mounted () {\n+ created () {\nconst { color, bg, borderColor, placeholderColor } = this.styleConfig[this.colorMode]\nuseTailwindPreflight(this.theme)\ninjectGlobal({\n",
        "date": "11.04.2020 22:27:05",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "feat",
        "sim_msg": "style(badge): reconsolidate styles",
        "sim_diff": "diff --git a/src/@chakra-ui/gatsby-plugin/components/Badge.ts b/src/@chakra-ui/gatsby-plugin/components/Badge.ts import { ComponentStyleConfig, SystemStyleObject } from \"@chakra-ui/react\"\n-const variantPrimary: SystemStyleObject = {\n- background: \"primary100\",\n- color: \"black300\",\n-}\n-\nconst variantSecondary: SystemStyleObject = {\nborder: \"1px solid\",\nborderColor: \"primary100\",\n+ color: \"text\",\n}\nexport const Badge: ComponentStyleConfig = {\nbaseStyle: {\n- background: \"transparent\",\nborderRadius: \"base\",\n+ border: \"1px solid\",\n+ color: \"black300\",\nfontWeight: \"initial\",\npy: 1,\npx: 2,\ntextTransform: \"uppercase\",\n},\nvariants: {\n- primary: variantPrimary,\nsecondary: variantSecondary,\n},\n+ sizes: {\n+ sm: {\n+ py: 0,\n+ },\n+ lg: {\n+ px: 3,\n+ },\n+ },\ndefaultProps: {\n- variant: \"primary\",\n+ // Remove the default from Chakra\n+ variant: \"\",\n},\n}\n"
    },
    {
        "msg": "feat(server/webpack.base): add 'webpack-assets' and 'favicons-assets' to aliases\nfeat(server/webpack.base): add 'webpack-assets' and 'favicons-assets'\nto aliases",
        "diff": "diff --git a/webpack_config/server/webpack.base.js b/webpack_config/server/webpack.base.js @@ -65,7 +65,9 @@ const baseWebpackConfig = {\nextensions: isomorphicWebpackConfig.resolve.extensions,\nmodules: isomorphicWebpackConfig.resolve.modules,\nalias: {\n- ...isomorphicWebpackConfig.resolve.alias\n+ ...isomorphicWebpackConfig.resolve.alias,\n+ 'webpack-assets': `${CLIENT_DIST_PATH}/webpack-assets.json`,\n+ 'favicons-assets': `${CLIENT_DIST_PATH}/favicons-stats.json`\n// create_server: createServerAliasPath\n}\n},\n",
        "date": "06.09.2017 12:14:52",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "build: remove custom less paths",
        "sim_diff": "diff --git a/packages/manager/apps/telecom/webpack.config.js b/packages/manager/apps/telecom/webpack.config.js @@ -35,12 +35,6 @@ module.exports = (env = {}) => {\nconst { config } = webpackConfig({\ntemplate: './src/index.html',\nbasePath: './src',\n- lessPath: [\n- './src/app',\n- './src/components',\n- './node_modules',\n- '../../../node_modules',\n- ],\nroot: path.resolve(__dirname, './src/app'),\nassets: {\nfiles: [\n"
    },
    {
        "msg": "feat: adding partner type to the list of partners",
        "diff": "diff --git a/common/constants/partners.js b/common/constants/partners.js import { s3 } from 'common/constants/urls';\n+export const PARTNER_TYPES = {\n+ PAID: 'PAID',\n+ KIND: 'IN-KIND',\n+};\n+\nconst partners = [\n{\nname: 'APEX Systems',\nlogoSource: `${s3}partnerLogos/apex_systems.png`,\nurl: 'https://apexsystems.com',\n+ type: PARTNER_TYPES.KIND,\n},\n{\nname: 'GitHub',\nlogoSource: `${s3}partnerLogos/github.png`,\nurl: 'https://github.com',\n+ type: PARTNER_TYPES.KIND,\n},\n{\nname: 'Slack',\nlogoSource: `${s3}partnerLogos/slack.png`,\nurl: 'https://slack.com/',\n+ type: PARTNER_TYPES.PAID,\n},\n{\nname: 'Heroku',\nlogoSource: `${s3}partnerLogos/heroku.png`,\nurl: 'https://heroku.com/',\n+ type: PARTNER_TYPES.KIND,\n},\n{\nname: '1Password',\nlogoSource: `${s3}partnerLogos/1password.png`,\nurl: 'https://1password.com/',\n+ type: PARTNER_TYPES.KIND,\n},\n{\nname: 'US Bank',\nlogoSource: `${s3}partnerLogos/usbank.png`,\nurl: 'https://usbank.com/index.html',\n+ type: PARTNER_TYPES.PAID,\n},\n{\nname: 'Threat Stack',\nlogoSource: `${s3}partnerLogos/threat_stack.png`,\nurl: 'https://threatstack.com',\n+ type: PARTNER_TYPES.PAID,\n},\n{\nname: \"O'Reilly Media\",\nlogoSource: `${s3}partnerLogos/oreilly.png`,\nurl: 'https://oreilly.com',\n+ type: PARTNER_TYPES.KIND,\n},\n{\nname: 'HackerRank',\nlogoSource: `${s3}partnerLogos/hackerrank.png`,\nurl: 'https://hackerrank.com',\n+ type: PARTNER_TYPES.KIND,\n},\n{\nname: 'Zapier',\nlogoSource: `${s3}partnerLogos/zapier.png`,\nurl: 'https://zapier.com',\n+ type: PARTNER_TYPES.KIND,\n},\n{\nname: 'LogRocket',\nlogoSource: `${s3}partnerLogos/logrocket.png`,\nurl: 'https://logrocket.com/',\n+ type: PARTNER_TYPES.KIND,\n},\n];\n",
        "date": "16.10.2019 13:22:30",
        "repo": "operationcode/front-end",
        "type": "feat",
        "sim_msg": "docs(users): add zzllrr mather project\nadd a new open-sourced mather project using KaTeX",
        "sim_diff": "diff --git a/website/siteConfig.js b/website/siteConfig.js @@ -160,6 +160,11 @@ const users = [\nimage: '/img/vade_mecum_shelf_logo.png',\ninfoLink: 'https://github.com/tonton-pixel/vade-mecum-shelf/',\n},\n+ {\n+ caption: 'zzllrr Mather',\n+ image: 'https://github.com/zzllrr/mather/raw/master/img/logo.jpg',\n+ infoLink: 'https://github.com/zzllrr/mather',\n+ },\n];\nconst {version} = require('../package.json');\n"
    },
    {
        "msg": "feat(PopoverContent): add x-out-of-boundaries attribute\nCloses",
        "diff": "diff --git a/src/PopperContent.js b/src/PopperContent.js @@ -151,8 +151,8 @@ class PopperContent extends React.Component {\nmodifiers={extendedModifiers}\nplacement={placement}\n>\n- {({ ref, style, placement, arrowProps }) => (\n- <div ref={ref} style={style} className={popperClassName} x-placement={placement}>\n+ {({ ref, style, placement, outOfBoundaries, arrowProps }) => (\n+ <div ref={ref} style={style} className={popperClassName} x-placement={placement} x-out-of-boundaries={outOfBoundaries ? 'true' : undefined}>\n{children}\n{!hideArrow && <span ref={arrowProps.ref} className={arrowClassName} style={arrowProps.style} />}\n</div>\n",
        "date": "12.05.2020 20:14:43",
        "repo": "reactstrap/reactstrap",
        "type": "feat",
        "sim_msg": "docs(atom/popover): improved prop doc",
        "sim_diff": "diff --git a/components/atom/popover/src/index.js b/components/atom/popover/src/index.js @@ -90,7 +90,7 @@ AtomPopover.propTypes = {\ncontent: PropTypes.element.isRequired,\n/** Popover children */\nchildren: PropTypes.node.isRequired,\n- /** Initial value for the show pop over */\n+ /** Controlled value for the show pop over */\nshowPopover: PropTypes.bool,\n/** Popover id: only is needed if use a children without ref */\nid: PropTypes.string,\n"
    },
    {
        "msg": "feat(dumper): More robust",
        "diff": "diff --git a/src/platforms/browser/dumper.js b/src/platforms/browser/dumper.js @@ -115,6 +115,7 @@ BiwaScheme.Dumper = BiwaScheme.Class.create({\n},\ndump_closure: function(cls){\n+ if(!cls) return \"**BROKEN**\";\nif(cls.length == 0) return \"[]\";\nvar cls_num = null;\n@@ -127,7 +128,7 @@ BiwaScheme.Dumper = BiwaScheme.Class.create({\n}\nvar c = _.clone(cls);\n- var body = c.shift();\n+ var body = c.shift && c.shift();\nreturn [\n\"c\", cls_num, \" <span class='dump_closure'>free vars :</span> \",\nthis.dump_obj(c), \" <span class='dump_closure'>body :</span> \",\n",
        "date": "03.01.2020 19:27:33",
        "repo": "biwascheme/biwascheme",
        "type": "feat",
        "sim_msg": "refactor: simplify UpdatedValues",
        "sim_diff": "diff --git a/src/injected/content/index.js b/src/injected/content/index.js -import { getUniqId, makePause } from '#/common';\n+import { getUniqId, makePause, isEmpty } from '#/common';\nimport { INJECT_PAGE, INJECT_CONTENT } from '#/common/consts';\nimport { bindEvents, sendCmd, sendMessage } from '../utils';\nimport {\n- setJsonDump, objectKeys, filter, forEach, includes, append, createElementNS, setAttribute,\n- NS_HTML,\n+ setJsonDump, objectKeys, forEach, includes, append, createElementNS, setAttribute, NS_HTML,\n} from '../utils/helpers';\nimport bridge from './bridge';\nimport './clipboard';\n@@ -41,20 +40,14 @@ bridge.addBackgroundHandlers({\n},\nGetPopup: getPopup,\nUpdatedValues(data) {\n- const realms = [\n- { data: {}, present: false },\n- { data: {}, present: false, realm: INJECT_CONTENT },\n- ];\n+ const dataPage = {};\n+ const dataContent = {};\n+ const { invokableIds } = bridge;\nobjectKeys(data)::forEach((id) => {\n- const r = realms[bridge.invokableIds::includes(id) ? 1 : 0];\n- r.data[id] = data[id];\n- r.present = true;\n- });\n- realms\n- ::filter(r => r.present)\n- ::forEach(({ data: d, realm }) => {\n- bridge.post('UpdatedValues', d, realm);\n+ (invokableIds::includes(id) ? dataContent : dataPage)[id] = data[id];\n});\n+ if (!isEmpty(dataPage)) bridge.post('UpdatedValues', dataPage);\n+ if (!isEmpty(dataContent)) bridge.post('UpdatedValues', dataContent, INJECT_CONTENT);\n},\n});\n"
    },
    {
        "msg": "feat(babel-loader): add supportsStaticESM option",
        "diff": "diff --git a/packages/razzle/config/babel-loader/razzle-babel-loader.js b/packages/razzle/config/babel-loader/razzle-babel-loader.js @@ -64,6 +64,7 @@ module.exports = babelLoader.custom(function(babel) {\nisServer: opts.isServer,\nisModern: opts.isModern,\nhasModern: opts.hasModern,\n+ supportsStaticESM: opts.supportsStaticESM,\ndevelopment: opts.development,\nshouldUseReactRefresh: opts.shouldUseReactRefresh,\n};\n@@ -101,6 +102,7 @@ module.exports = babelLoader.custom(function(babel) {\ndelete loader.distDir;\ndelete loader.isModern;\ndelete loader.hasModern;\n+ delete loader.supportsStaticESM;\ndelete loader.development;\ndelete loader.shouldUseReactRefresh;\nreturn { loader, custom };\n@@ -112,6 +114,7 @@ module.exports = babelLoader.custom(function(babel) {\nconst isServer = customOptions.isServer;\nconst isModern = customOptions.isModern;\nconst hasModern = customOptions.hasModern;\n+ const supportsStaticESM = customOptions.supportsStaticESM;\nconst development = customOptions.development;\nconst shouldUseReactRefresh = customOptions.shouldUseReactRefresh;\n@@ -134,6 +137,7 @@ module.exports = babelLoader.custom(function(babel) {\npresetOptions.caller.isServer = isServer;\npresetOptions.caller.isModern = isModern;\npresetOptions.caller.isDev = development;\n+ presetOptions.caller.supportsStaticESM = supportsStaticESM;\nconst emitWarning = this.emitWarning.bind(this);\nObject.defineProperty(presetOptions.caller, 'onWarning', {\n",
        "date": "01.02.2021 18:29:11",
        "repo": "jaredpalmer/razzle",
        "type": "feat",
        "sim_msg": "build: Manually resolve Babel env plugins",
        "sim_diff": "diff --git a/.babelrc.js b/.babelrc.js -module.exports = {\n+const env = process.env.BABEL_ENV || process.env.NODE_ENV || 'development';\n+\n+const preset = {\npresets: [\n['env', {\nmodules: false\n@@ -10,19 +12,19 @@ module.exports = {\n'transform-decorators-legacy',\n'transform-export-extensions',\n['transform-runtime', { polyfill: false }]\n- ],\n- env: {\n- development: {\n- plugins: [\n- 'react-hot-loader/babel'\n]\n- },\n- production: {\n- plugins: [\n+};\n+\n+if (env === 'development') {\n+ preset.plugins.push('react-hot-loader/babel');\n+}\n+\n+if (env === 'production') {\n+ preset.plugins.push(\n'transform-react-constant-elements',\n'transform-react-inline-elements',\n['transform-react-remove-prop-types', { mode: 'wrap' }]\n- ]\n+ );\n}\n- }\n-};\n+\n+module.exports = preset;\n"
    },
    {
        "msg": "feat: support ctrl+l to clear\nAnd refactor the stdin handling",
        "diff": "diff --git a/lib/nodemon.js b/lib/nodemon.js @@ -96,45 +96,54 @@ function nodemon(settings) {\n});\n// echo out notices about running state\n- if (config.options.stdin && config.options.restartable) {\n- // allow nodemon to restart when the use types 'rs\\n'\n- process.stdin.resume();\n- process.stdin.setEncoding('utf8');\n- process.stdin.on('data', function (data) {\n- data = (data + '').trim().toLowerCase();\n-\n- // if the keys entered match the restartable value, then restart!\n- if (data === config.options.restartable) {\n- bus.emit('restart');\n- }\n- });\n- } else if (config.options.stdin) {\n- // if 'restartable' is disabled (via a nodemon.json)\n- // then it's possible we're being used with a REPL\n+ if (config.options.stdin) {\n// so let's make sure we don't eat the key presses\n// but also, since we're wrapping, watch out for\n- // special keys, like ctrl+c x 2 or '.exit' or ctrl+d\n+ // special keys, like ctrl+c x 2 or '.exit' or ctrl+d or ctrl+l\nvar ctrlC = false;\nvar buffer = '';\n+ const rs = config.options.restartable;\n+ process.stdin.setEncoding('utf8');\nprocess.stdin.on('data', function (data) {\n- buffer += data;\ndata = data.toString();\n- var chr = data.charCodeAt(0);\n+ buffer += data;\n+ const chr = data.charCodeAt(0);\n+\n+ // if restartable, echo back\n+ if (rs) {\n+ if (chr === 13) {\n+ process.stdout.write('\\n');\n+ }\n+ // this prevents cursor keys from working.\n+ process.stdout.write(String.fromCharCode(chr));\n+ }\n+\nif (chr === 3) {\n- if (ctrlC) {\n- process.exit();\n+ // if restartable, assume ctrl+c will break immediately\n+ if (ctrlC || rs) {\n+ process.exit(rs ? 1 : 0);\n}\nctrlC = true;\n- } else if (buffer === '.exit' || chr === 4) {\n+ return;\n+ } else if (buffer === '.exit' || chr === 4) { // ctrl+d\nprocess.exit();\n- } else if (ctrlC || chr === 10) {\n- ctrlC = false;\n+ } else if (chr === 13 || chr === 10) { // enter / carriage return\n+ const input = buffer.toString().trim().toLowerCase();\n+ if (input === rs) {\n+ bus.emit('restart');\n+ }\n+ buffer = '';\n+ } else if (chr === 12) { // ctrl+l\n+ console.clear();\nbuffer = '';\n}\n+ ctrlC = false;\n});\n+ if (process.stdin.setRawMode) {\nprocess.stdin.setRawMode(true);\n}\n+ }\nif (config.options.restartable) {\nutils.log.info('to restart at any time, enter `' +\n",
        "date": "10.07.2018 18:41:45",
        "repo": "remy/nodemon",
        "type": "feat",
        "sim_msg": "chore: refactor main handling logic",
        "sim_diff": "diff --git a/functions/npm-diff.js b/functions/npm-diff.js @@ -175,8 +175,9 @@ const serializeDiffUrl = function ({ url }) {\nreturn `- ${url}`\n}\n-// eslint-disable-next-line max-statements\nconst handler = async function (rawEvent) {\n+ console.log(rawEvent)\n+\ntry {\nconst { error } = validate(rawEvent)\nif (error) {\n@@ -186,18 +187,24 @@ const handler = async function (rawEvent) {\nbody: 'Not Found',\n}\n}\n- const event = JSON.parse(rawEvent.body)\n- console.log(JSON.stringify(event, null, 2))\n- if (['opened', 'synchronize', 'reopened'].includes(event.action)) {\n- const baseSha = event.pull_request.base.sha\n- const baseRepoUrl = event.pull_request.base.repo.url\n- const diffUrl = event.pull_request.diff_url\n- const commentsUrl = event.pull_request.comments_url\n- const token = env.GITHUB_TOKEN\n- await diff({ baseSha, baseRepoUrl, diffUrl, commentsUrl, token })\n- } else {\n- console.log(`Ignoring action ${event.action}`)\n+\n+ const {\n+ action,\n+ pull_request: {\n+ base: {\n+ sha: baseSha,\n+ repo: { url: baseRepoUrl },\n+ },\n+ diff_url: diffUrl,\n+ comments_url: commentsUrl,\n+ },\n+ } = JSON.parse(rawEvent.body)\n+ if (!ALLOWED_ACTIONS.has(action)) {\n+ console.log(`Ignoring action ${action}`)\n+ return\n}\n+\n+ await diff({ baseSha, baseRepoUrl, diffUrl, commentsUrl, token: env.GITHUB_TOKEN })\nreturn {\nstatusCode: 200,\nbody: JSON.stringify({ message: 'success' }),\n@@ -211,5 +218,7 @@ const handler = async function (rawEvent) {\n}\n}\n+const ALLOWED_ACTIONS = new Set(['opened', 'synchronize', 'reopened'])\n+\nmodule.exports = { handler }\n/* eslint-enable max-lines, unicorn/filename-case */\n"
    },
    {
        "msg": "feat: update Single Page Applications section",
        "diff": "diff --git a/website/pages/docs/single-page-applications.md b/website/pages/docs/single-page-applications.md -# [Single Page Applications](https://github.com/jaredpalmer/razzle/blob/master/examples/basic-spa/)\n+# Single Page Applications\nIn addition to universal/isomorphic applications, Razzle can build single page (or client-only) applications. To do this, remove `index.js` and `server.js` from the src folder, and create an `index.html` file inside the public folder with the following template:\n-```\n+```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n",
        "date": "06.10.2020 01:58:08",
        "repo": "jaredpalmer/razzle",
        "type": "feat",
        "sim_msg": "feat: Fast Chinese website",
        "sim_diff": "diff --git a/site/index.html b/site/index.html <script src=\"bundle.js\" type=\"text/javascript\" defer></script>\n</head>\n<body>\n- <div id=\"app\" />\n+ <div id=\"app\"></div>\n</body>\n</html>\n"
    },
    {
        "msg": "feat(Switch): test",
        "diff": "diff --git a/packages/element3/packages/switch/__tests__/Switch.spec.js b/packages/element3/packages/switch/__tests__/Switch.spec.js @@ -162,4 +162,17 @@ describe('Switch', () => {\nexpect(wrapper.emitted('update:modelValue')).toEqual([['3']])\n})\n+ it('handleClick', async () => {\n+ const wrapper = mount(Switch, {\n+ props: {\n+ isChecked: true,\n+ disabled: false,\n+ activeValue: '2',\n+ inactiveValue: '3'\n+ }\n+ })\n+ await wrapper.find('.el-switch').trigger('click')\n+ expect(wrapper.emitted('update:modelValue')).toEqual([['3'], ['2']])\n+ expect(wrapper.emitted('update:change')).toEqual([['2']])\n+ })\n})\n",
        "date": "15.12.2020 12:10:38",
        "repo": "hug-sun/element3",
        "type": "feat",
        "sim_msg": "test: Add test for autoposition",
        "sim_diff": "diff --git a/packages/core-toggle/core-toggle.test.js b/packages/core-toggle/core-toggle.test.js @@ -23,6 +23,7 @@ describe('core-toggle', () => {\nconst toggleId = await attr('core-toggle', 'id')\nawait expect(attr('button', 'aria-controls')).toEqual(toggleId)\nawait expect(prop('core-toggle', 'hidden')).toMatch(/true/i)\n+ await expect(prop('core-toggle', 'autoposition')).toMatch(/false/i)\nconst buttonId = await attr('button', 'id')\nawait expect(attr('core-toggle', 'aria-labelledby')).toEqual(buttonId)\n})\n@@ -200,4 +201,16 @@ describe('core-toggle', () => {\nconst itemId = await browser.wait(() => browser.executeScript(() => window.itemId))\nawait expect(itemId).toEqual('my-item')\n})\n+\n+ it('supports attribute autoposition', async () => {\n+ await browser.executeScript(() => {\n+ document.body.innerHTML = `\n+ <button>Toggle</button>\n+ <core-toggle autoposition hidden></core-toggle>\n+ `\n+ })\n+ await expect(prop('core-toggle', 'autoposition')).toMatch(/true/i)\n+ await $('button').click()\n+ await expect($('core-toggle').getCssValue('position')).toEqual('fixed')\n+ })\n})\n"
    },
    {
        "msg": "feat(Glo): add Glo component",
        "diff": "diff --git a/components/Glo/index.js b/components/Glo/index.js -import 'glo/js/namespace';\n-import 'glo/js/coordinates.js';\n-import 'glo/js/node_group.js';\n-import 'glo/js/canvas.js';\n-import 'glo/js/node_generation.js';\n-import 'glo/js/edge_generation.js';\n-import 'glo/js/helpers.js';\n-import 'glo/js/glo.js';\n-import 'glo/js/api.js';\n-import 'glo/js/techniques.js';\n-import 'glo/js/figures.js';\n-\n-import * as d3 from 'd3';\n+import d3 from 'glo/node_modules/d3';\n+import GLO from 'glo';\nimport VisComponent from '../../VisComponent';\n+const colorNodes = (glo, field, type) => {\n+ glo.glo.node_attr({\n+ [field]: type\n+ });\n+\n+ glo.glo.color_nodes_by(field);\n+};\n+\nexport default class Glo extends VisComponent {\n- constructor (el, {nodes, edges, width = 960, height = 540}) {\n+ constructor (el, {nodes, edges, nodeAttr, edgeAttr, width = 960, height = 540}) {\nsuper(el);\n// Empty the top-level div.\n@@ -32,15 +29,85 @@ export default class Glo extends VisComponent {\n// Construct a GLO object.\nthis.glo = new GLO.GLO(d3.select(this.svg))\n.nodes(nodes)\n- .edges(edges)\n- .draw();\n-\n- console.log('Glo.constructor()');\n- console.log('this.glo', this.glo);\n+ .edges(edges);\n}\nrender () {\n- console.log('Glo.render()');\n- console.log('GLO object', GLO);\n+ this.glo.draw();\n+ }\n+\n+ colorNodesDiscrete (field) {\n+ colorNodes(this, field, 'discrete');\n+ }\n+\n+ colorNodesContinuous(field) {\n+ colorNodes(this, field, 'continuous');\n+ }\n+\n+ colorNodesDefault () {\n+ this.glo.color_nodes_by_constant();\n+ }\n+\n+ sizeNodes (field) {\n+ this.glo.node_attr({\n+ [field]: 'continuous'\n+ });\n+\n+ this.glo.size_nodes_by(field);\n+ }\n+\n+ sizeNodesDefault () {\n+ this.glo.size_nodes_by_constant();\n+ }\n+\n+ distributeNodes(axis, attr = null) {\n+ if (attr === null) {\n+ this.glo.evenly_distribute_nodes_on(axis);\n+ } else {\n+ this.glo.evenly_distribute_nodes_on(axis, {\n+ by: attr\n+ });\n+ }\n+ }\n+\n+ positionNodes(axis, value) {\n+ this.glo.node_attr({\n+ [value]: 'continuous'\n+ });\n+\n+ this.glo.position_nodes_on(axis, value);\n+ }\n+\n+ forceDirected () {\n+ this.glo.apply_force_directed_algorithm_to_nodes();\n+ }\n+\n+ showEdges () {\n+ this.glo.show_all_edges();\n+ }\n+\n+ hideEdges () {\n+ this.glo.hide_edges();\n+ }\n+\n+ fadeEdges () {\n+ this.glo.show_edges_as_faded();\n+ }\n+\n+ solidEdges () {\n+ this.hideEdges();\n+ this.showEdges();\n+ }\n+\n+ incidentEdges () {\n+ this.glo.show_incident_edges();\n+ }\n+\n+ curvedEdges () {\n+ this.glo.display_edges_as_curved_lines();\n+ }\n+\n+ straightEdges () {\n+ this.glo.display_edges_as_straight_lines();\n}\n}\n",
        "date": "04.05.2017 16:30:57",
        "repo": "kitware/candela",
        "type": "feat",
        "sim_msg": "feat(operators): Add other functions to operators export.",
        "sim_diff": "diff --git a/packages/operators/src/index.js b/packages/operators/src/index.js limitations under the License.\n*/\n+import getFromArray from './getFromArray.js';\n+import getFromObject from './getFromObject.js';\nimport NodeParser from './nodeParser.js';\n+import runClass from './runClass.js';\n+import runInstance from './runInstance.js';\nimport WebParser from './webParser.js';\n-export { NodeParser, WebParser };\n+export { getFromArray, getFromObject, NodeParser, runClass, runInstance, WebParser };\n"
    },
    {
        "msg": "feat(Dashboard): remove old redux stuff from Dashboard container\nfeat(Dashboard): remove old redux stuff from Dashboard container",
        "diff": "diff --git a/src/common/containers/Dashboard/index.jsx b/src/common/containers/Dashboard/index.jsx // @flow\nimport React, {Component} from 'react'\nimport {connect} from 'react-redux'\n-import {Loader} from 'semantic-ui-react'\nimport {Helmet} from 'react-helmet'\n-//\nimport DashboardComponent from './components'\n-import {GET_POSTS} from 'actions/posts'\n-import {getEntitiesPostsState} from 'selectors'\n+\nimport type {GlobalState} from 'reducers'\n-type Props = {\n- posts: Object,\n- postsLoaded: boolean,\n- postsLoading: boolean,\n- count: number,\n- getPosts: () => void\n-}\n+type Props = any\nclass Dashboard extends Component {\nprops: Props\n- componentDidMount () {\n- this.props.getPosts()\n- }\n-\nrender () {\n- const {posts, postsLoaded, postsLoading, count} = this.props\nreturn (\n<div>\n<Helmet>\n<title>Noir:Dashboard</title>\n</Helmet>\n- {postsLoaded\n- ? <DashboardComponent\n- {...{posts, postsLoaded, postsLoading, count}}\n- />\n- : <Loader active>Loading...</Loader>}\n+ <DashboardComponent />\n</div>\n)\n}\n}\nfunction mapStateToProps (state: GlobalState) {\n- const postsState = getEntitiesPostsState(state)\n- const postsLoaded = postsState.isLoaded\n- const postsLoading = postsState.isLoading\n- const posts = postsState.entities\n- const {count} = postsState\n- return {\n- posts,\n- postsLoading,\n- postsLoaded,\n- count\n- }\n+ return {}\n}\nfunction mapDispatchToProps (dispatch) {\n- return {\n- getPosts () {\n- dispatch(GET_POSTS())\n- }\n- }\n+ return {}\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard)\n",
        "date": "30.09.2017 14:35:18",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "feat(redux): implement constructor based mixins\nBREAKING CHANGE: export.contextDefinition is now a constructor function (used to be an object literal)",
        "sim_diff": "diff --git a/packages/redux/index.js b/packages/redux/index.js @@ -9,15 +9,16 @@ var hopsReact = require('hops-react');\nvar REDUX_STATE = 'REDUX_STATE';\n-exports.contextDefinition = {\n- constructor: function (options) {\n+exports.contextDefinition = function (options) {\nthis.reducers = {};\nObject.keys((options && options.reducers) || {}).forEach(\nfunction (key) {\nthis.registerReducer(key, options.reducers[key]);\n}.bind(this)\n);\n- },\n+};\n+\n+exports.contextDefinition.prototype = {\nregisterReducer: function (namespace, reducer) {\nthis.reducers[namespace] = reducer;\nif (this.store) {\n"
    },
    {
        "msg": "feat(webpack.isomorphic): add i18n folder to aliases\nfeat(webpack.isomorphic): add i18n folder to aliases",
        "diff": "diff --git a/webpack_config/webpack.isomorphic.js b/webpack_config/webpack.isomorphic.js @@ -25,6 +25,7 @@ export default {\n// Aliases that both server and client use\n// Probably, it's a bad example, because here we defined only client's aliases.\nalias: {\n+ i18n: `${srcCommonPath}/i18n/`,\nactions: `${srcCommonPath}/actions/`,\napi: `${srcCommonPath}/api/`,\ncomponents: `${srcCommonPath}/components/`,\n",
        "date": "06.09.2017 12:14:23",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "docs: corrected configureWebpack object key",
        "sim_diff": "diff --git a/docs/guide/assets.md b/docs/guide/assets.md @@ -21,7 +21,7 @@ webpack aliases can be configured via [configureWebpack](/config/#configurewebpa\n``` js\nmodule.exports = {\n- configurewebpack: {\n+ configureWebpack: {\nresolve: {\nalias: {\n'@alias': 'path/to/some/dir'\n"
    },
    {
        "msg": "feat(server): add useragent middleware\nfeat(server): add useragent middleware",
        "diff": "diff --git a/src/server/middlewares/index.js b/src/server/middlewares/index.js @@ -8,6 +8,7 @@ import compression from 'compression'\nimport cookieParser from 'cookie-parser'\nimport bodyParser from 'body-parser'\nimport morgan from 'morgan'\n+import useragent from 'express-useragent'\nimport authMiddleware from './auth'\nexport default (app: express$Application): express$Application => {\n@@ -22,6 +23,7 @@ export default (app: express$Application): express$Application => {\n})\n)\napp.use(bodyParser.json())\n+ app.use(useragent.express())\napp.use(authMiddleware)\nreturn app\n",
        "date": "17.09.2017 14:26:26",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "fix: memoryServer warning",
        "sim_diff": "diff --git a/index.js b/index.js @@ -43,7 +43,13 @@ app.use((req, res, next) => {\n});\napp.use(express.static(\"public\"));\n-app.use(session({ secret: \"atenagamification\" }));\n+app.use(\n+ session({\n+ secret: \"atenagamification\",\n+ resave: false,\n+ saveUninitialized: false\n+ })\n+);\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: true }));\napp.use(passport.initialize());\n"
    },
    {
        "msg": "feat: checks for `$grid-row-columns`",
        "diff": "diff --git a/scss/mixins/_grid.scss b/scss/mixins/_grid.scss @include make-col-auto();\n}\n+ @if $grid-row-columns > 0 {\n@for $i from 1 through $grid-row-columns {\n.row-cols#{$infix}-#{$i} {\n@include row-cols($i);\n}\n}\n+ }\n.col#{$infix}-auto {\n@include make-col-auto();\n",
        "date": "16.04.2020 20:15:51",
        "repo": "coreui/coreui",
        "type": "feat",
        "sim_msg": "fix: update grid gutters to match design\nFrom 30px gutters to 24px",
        "sim_diff": "diff --git a/scss/core/_variables.scss b/scss/core/_variables.scss @@ -463,7 +463,7 @@ $container-max-widths: (\n// Set the number of columns and specify the width of the gutters.\n$grid-columns: 12 !default;\n-$grid-gutter-width: 30px !default;\n+$grid-gutter-width: 24px !default;\n$grid-row-columns: 6 !default;\n"
    },
    {
        "msg": "feat: Add banner",
        "diff": "diff --git a/rollup.config.js b/rollup.config.js import { terser } from \"rollup-plugin-terser\"\n+import { VERSION } from \"./src/version.js\";\n+\n+const banner = `/*\n+ * BiwaScheme ${VERSION} - R6RS/R7RS Scheme in JavaScript\n+ *\n+ * Copyright (c) 2007-${(new Date).getFullYear()} Yutaka HARA (http://www.biwascheme.org/)\n+ * Licensed under the MIT license.\n+ */`\nexport default {\n- plugins: [\n- terser({ output: { comments: /@license/i } }),\n- ],\ninput: \"src/main-browser.js\",\noutput: [\n{\n@@ -11,13 +16,15 @@ export default {\nformat: \"iife\",\nname: \"BiwaScheme\",\nstrict: false,\n+ banner: banner,\n},\n{\nfile: \"release/biwascheme-min.js\",\nformat: \"iife\",\nname: \"BiwaScheme\",\nstrict: false,\n- plugins: [terser()],\n+ banner: banner,\n+ plugins: [terser({output: {comments: /Copyright/}})],\n},\n]\n}\n",
        "date": "26.06.2020 00:15:43",
        "repo": "biwascheme/biwascheme",
        "type": "feat",
        "sim_msg": "feat(rollup): Don't use terser to minify code\nJust ship code as-is, let bundlers take care of it.\nCloses",
        "sim_diff": "diff --git a/config/templates/rollup.config.dflt.js b/config/templates/rollup.config.dflt.js import resolve from '@rollup/plugin-node-resolve'\nimport commonjs from '@rollup/plugin-commonjs'\nimport json from '@rollup/plugin-json'\n-import { terser } from 'rollup-plugin-terser'\nimport peerDepsExternal from 'rollup-plugin-peer-deps-external'\nimport { name, version, description, author, license, main, module, rollup } from './package.json'\n+const banner = `/**\\n * ${name} | v${version}\\n * ${description}\\n * (c) ${new Date().getFullYear()} ${author}\\n * @license ${license}\\n */`\nconst output = [\n{\n+ banner\nfile: main,\nformat: 'cjs',\nsourcemap: true,\n- exports: rollup.exports\n+ exports: rollup.exports,\n}\n]\nif (typeof module !== 'undefined')\noutput.push({\n+ banner\nfile: module,\nformat: 'es',\nsourcemap: true\n@@ -28,10 +30,5 @@ export default {\nresolve({ modulesOnly: true }),\ncommonjs(),\njson(),\n- terser({\n- output: {\n- preamble: `/**\\n * ${name} | v${version}\\n * ${description}\\n * (c) ${new Date().getFullYear()} ${author}\\n * @license ${license}\\n */`\n- }\n- })\n]\n}\n"
    },
    {
        "msg": "feat(config): Change to temporary credentials",
        "diff": "diff --git a/config/environment.js b/config/environment.js /* eslint-env node */\nmodule.exports = function(environment) {\n- let ALGOLIA_APP_ID = process.env.ALGOLIA_APP_ID || 'BH4D9OD16A';\n- let ALGOLIA_API_KEY = process.env.ALGOLIA_API_KEY || '92d3556bc9a494d48e7054fbb4c4ce6f';\n+ let ALGOLIA_APP_ID = process.env.ALGOLIA_APP_ID || 'N4SO04CV0R';\n+ let ALGOLIA_API_KEY = process.env.ALGOLIA_API_KEY || '0b28a7a3adf986fa5d402567d9d8b850';\nlet ENV = {\nmodulePrefix: 'ember-api-docs',\n",
        "date": "16.08.2017 22:17:51",
        "repo": "ember-learn/ember-api-docs",
        "type": "feat",
        "sim_msg": "chore: Update brower targets",
        "sim_diff": "diff --git a/config/targets.js b/config/targets.js const browsers = [\n- 'Firefox >= 20', 'Chrome >=20', 'Android >= 4.0', 'Safari >= 7', 'iOS >= 5'\n+ 'Firefox >= 55', 'Chrome >=55', 'Android >= 4.4', 'Safari >= 10', 'iOS >= 10',\n];\nconst isCI = !!process.env.CI;\nconst isProduction = process.env.EMBER_ENV === 'production';\nif (isCI || isProduction) {\n- browsers.push('ie 11');\n+ browsers.push('defaults');\n}\nmodule.exports = {\n"
    },
    {
        "msg": "feat: keep contrast on `.table-dark`\nIn case we set `$body-bg` to a dark color, we have to keep table contrast relevant.",
        "diff": "diff --git a/scss/_variables.scss b/scss/_variables.scss @@ -343,7 +343,7 @@ $table-dark-bg: $gray-900 !default;\n$table-dark-accent-bg: rgba($white, .05) !default;\n$table-dark-hover-bg: rgba($white, .075) !default;\n$table-dark-border-color: lighten($gray-900, 7.5%) !default;\n-$table-dark-color: $body-bg !default;\n+$table-dark-color: $white !default;\n$table-striped-order: odd !default;\n",
        "date": "16.09.2018 11:06:53",
        "repo": "coreui/coreui",
        "type": "feat",
        "sim_msg": "perf(twbs/table): remove background tables, responsive inflix and dark theads\ntables almost not used at all\nBREAKING CHANGE: tons of table additional classes removed",
        "sim_diff": "diff --git a/@ecomplus/storefront-twbs/scss/components/_tables.scss b/@ecomplus/storefront-twbs/scss/components/_tables.scss }\n}\n}\n-\n-\n-// Table backgrounds\n-//\n-// Exact selectors below required to override `.table-striped` and prevent\n-// inheritance to nested tables.\n-\n-@each $color, $value in $theme-colors {\n- @include table-row-variant($color, theme-color-level($color, $table-bg-level), theme-color-level($color, $table-border-level));\n-}\n-\n-@include table-row-variant(active, $table-active-bg);\n-\n-\n-// Dark styles\n-//\n-// Same table markup, but inverted color scheme: dark background and light text.\n-\n-// stylelint-disable-next-line no-duplicate-selectors\n-.table {\n- .thead-dark {\n- th {\n- color: $table-dark-color;\n- background-color: $table-dark-bg;\n- border-color: $table-dark-border-color;\n- }\n- }\n-\n- .thead-light {\n- th {\n- color: $table-head-color;\n- background-color: $table-head-bg;\n- border-color: $table-border-color;\n- }\n- }\n-}\n-\n-.table-dark {\n- color: $table-dark-color;\n- background-color: $table-dark-bg;\n-\n- th,\n- td,\n- thead th {\n- border-color: $table-dark-border-color;\n- }\n-\n- &.table-bordered {\n- border: 0;\n- }\n-\n- &.table-striped {\n- tbody tr:nth-of-type(#{$table-striped-order}) {\n- background-color: $table-dark-accent-bg;\n- }\n- }\n-\n- &.table-hover {\n- tbody tr {\n- @include hover() {\n- color: $table-dark-hover-color;\n- background-color: $table-dark-hover-bg;\n- }\n- }\n- }\n-}\n-\n-\n-// Responsive tables\n-//\n-// Generate series of `.table-responsive-*` classes for configuring the screen\n-// size of where your table will overflow.\n-\n-.table-responsive {\n- @each $breakpoint in map-keys($grid-breakpoints) {\n- $next: breakpoint-next($breakpoint, $grid-breakpoints);\n- $infix: breakpoint-infix($next, $grid-breakpoints);\n-\n- &#{$infix} {\n- @include media-breakpoint-down($breakpoint) {\n- display: block;\n- width: 100%;\n- overflow-x: auto;\n- -webkit-overflow-scrolling: touch;\n-\n- // Prevent double border on horizontal scroll due to use of `display: block;`\n- > .table-bordered {\n- border: 0;\n- }\n- }\n- }\n- }\n-}\n"
    },
    {
        "msg": "feat: Can filter based on public key",
        "diff": "diff --git a/frontend/leaderboard/src/Metrics.re b/frontend/leaderboard/src/Metrics.re @@ -238,6 +238,9 @@ let calculateAllUsers = metrics => {\nlet echoBotPublicKeys = [\n\"B62qndJi5mnRoBZ8SAYDM1oR2SgAk5WpZC8hGpJUZ4e64kDHGbFMeLJ\",\n];\n+\n+let excludePublicKeys = [];\n+\nlet calculateMetrics = blocks => {\nlet blocksCreated = getBlocksCreatedByUser(blocks);\nlet transactionSent = getTransactionSentByUser(blocks);\n@@ -257,6 +260,7 @@ let calculateMetrics = blocks => {\nthrowAwayValues(coinbaseReceiverChallenge),\nthrowAwayValues(createAndSendToken),\n])\n+ |> StringMap.filter((key, _) => {!List.mem(key, excludePublicKeys)})\n|> StringMap.mapi((key, _) =>\n{\nTypes.Metrics.blocksCreated: StringMap.find_opt(key, blocksCreated),\n",
        "date": "29.12.2020 17:15:41",
        "repo": "minaprotocol/mina",
        "type": "feat",
        "sim_msg": "fix: achievements types",
        "sim_diff": "diff --git a/src/controllers/UserController.js b/src/controllers/UserController.js @@ -150,13 +150,27 @@ class UserController {\nconst general = await RankingController.getGeneralPositionByUser(uuid)\nconst monthly = await RankingController.getMonthlyPositionByUser(uuid)\n+ const types = {\n+ messageSended: 'network.message.sended',\n+ reactionSended: 'network.reaction.sended',\n+ reactionReceived: 'network.reaction.received'\n+ }\n+\n+ const medals = {\n+ bronze: 'bronze',\n+ silver: 'prata',\n+ gold: 'ouro',\n+ platinum: 'platina',\n+ diamond: 'diamante'\n+ }\n+\nreturn {\nuser: { level: user.level.value, score: user.score.value },\nrankings: { general, monthly },\nuserAchievements: user.achievements.map(achievement => ({\n- type: achievement.name,\n+ type: types[achievement.name],\nname: achievement.name,\n- medal: achievement.medal,\n+ medal: medals[achievement.medal],\ntier: achievement.range,\nscore: achievement.currentValue,\nmaxScore: achievement.nextTarget\n"
    },
    {
        "msg": "feat: declare ViewOptions in vega-typings",
        "diff": "diff --git a/packages/vega-typings/types/runtime/index.d.ts b/packages/vega-typings/types/runtime/index.d.ts @@ -55,10 +55,7 @@ export interface ToCanvasOptions {\nexternalContext?: any;\n}\n-export class View {\n- constructor(\n- runtime: Runtime,\n- opt?: {\n+export interface ViewOptions {\nbackground?: Color;\nbind?: Element | string;\ncontainer?: Element | string;\n@@ -70,8 +67,10 @@ export class View {\ntooltip?: TooltipHandler;\nlocale?: LocaleFormatters;\nexpr?: any;\n- },\n- );\n+}\n+\n+export class View {\n+ constructor(runtime: Runtime, opt?: ViewOptions);\n// View Configuration\n",
        "date": "11.11.2020 20:37:04",
        "repo": "vega/vega",
        "type": "feat",
        "sim_msg": "refactor(types): add regions for readability",
        "sim_diff": "diff --git a/src/types.ts b/src/types.ts @@ -123,17 +123,6 @@ export interface PopperChildren {\narrow: HTMLDivElement | null;\n}\n-export interface HideAllOptions<TProps = Props> {\n- duration?: number;\n- exclude?: Instance<TProps> | ReferenceElement<TProps>;\n-}\n-\n-export interface Plugin<TProps = Props> {\n- name?: string;\n- defaultValue?: any;\n- fn(instance: Instance<TProps>): Partial<LifecycleHooks<TProps>>;\n-}\n-\nexport interface TippyStatics {\nreadonly currentInput: {isTouch: boolean};\nreadonly defaultProps: DefaultProps;\n@@ -161,9 +150,9 @@ export interface Tippy extends TippyStatics {\ndeclare const tippy: Tippy;\n-export type HideAll = <TProps>(options?: HideAllOptions<TProps>) => void;\n-declare const hideAll: HideAll;\n-\n+// =============================================================================\n+// Addon types\n+// =============================================================================\nexport interface DelegateInstance<TProps = Props> extends Instance<TProps> {\ndestroy(shouldDestroyTargetInstances?: boolean): void;\n}\n@@ -200,6 +189,15 @@ export interface CreateSingleton<TProps = Props> {\ndeclare const delegate: Delegate;\ndeclare const createSingleton: CreateSingleton;\n+// =============================================================================\n+// Plugin types\n+// =============================================================================\n+export interface Plugin<TProps = Props> {\n+ name?: string;\n+ defaultValue?: any;\n+ fn(instance: Instance<TProps>): Partial<LifecycleHooks<TProps>>;\n+}\n+\nexport interface AnimateFillInstance extends Instance {\npopperChildren: PopperChildren & {\nbackdrop: HTMLDivElement | null;\n@@ -232,8 +230,22 @@ declare const followCursor: FollowCursor;\ndeclare const inlinePositioning: InlinePositioning;\ndeclare const sticky: Sticky;\n+// =============================================================================\n+// Misc types\n+// =============================================================================\n+export interface HideAllOptions<TProps = Props> {\n+ duration?: number;\n+ exclude?: Instance<TProps> | ReferenceElement<TProps>;\n+}\n+\n+export type HideAll = <TProps>(options?: HideAllOptions<TProps>) => void;\n+\n+declare const hideAll: HideAll;\ndeclare const roundArrow: string;\n+// =============================================================================\n+// Deprecated types - these will be removed in the next major\n+// =============================================================================\n/**\n* @deprecated use tippy.setDefaultProps({plugins: [...]});\n*/\n"
    },
    {
        "msg": "feat(styles): duplicate some styles to make SSR result nicer\nfeat(styles): duplicate some styles to make SSR result nicer",
        "diff": "diff --git a/src/common/styles/global.jsx b/src/common/styles/global.jsx @@ -5,6 +5,26 @@ injectGlobal`\nbox-sizing: border-box;\n}\n+ body {\n+ margin: 0;\n+ padding: 0;\n+ overflow-x: hidden;\n+ min-width: 320px;\n+ background: white;\n+ font-family: 'Lato', 'Helvetica Neue', Arial, Helvetica, sans-serif;\n+ font-size: 14px;\n+ line-height: 1.4285em;\n+ color: rgba(0, 0, 0, 0.87);\n+ }\n+\n+ .pushable {\n+ height: 100%;\n+ overflow-x: hidden;\n+ padding: 0em !important;\n+ -webkit-transform: translate3d(0, 0, 0);\n+ transform: translate3d(0, 0, 0);\n+ }\n+\n${''/* body ::-webkit-scrollbar {\nwidth: 0;\n}\n",
        "date": "03.11.2017 16:38:10",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "fix: alignment of dropdown",
        "sim_diff": "diff --git a/src/renderer/wallet/main/toolbar.jsx b/src/renderer/wallet/main/toolbar.jsx @@ -82,11 +82,15 @@ const styles = theme => ({\nwidth: '1px'\n},\nprofileContainer: {\n- width: '100%',\n+ left: '-33px',\nposition: 'fixed',\nright: '2%',\ntop: '63px',\n- zIndex: '999'\n+ width: '100%',\n+ zIndex: '999',\n+ '@media screen and (min-width: 1480px)': {\n+ left: '-43px'\n+ }\n},\nopenedProfile: {\ntransform: 'scaleY(-1)',\n@@ -101,17 +105,17 @@ const styles = theme => ({\nconst profileStyle = theme =>\ncreateStyles({\nprofile: {\n- minWidth: '198px',\n- maxWidth: '198px',\n+ minWidth: '208px',\n+ maxWidth: '208px',\nfloat: 'right',\n- padding: '20px 15px 8px 15px',\nborderRadius: '4px',\nbackgroundColor: '#1E262E',\nborder: 'solid 1px #303c49'\n},\nprofileFooter: {\nbottom: '7px',\n- marginTop: '10px'\n+ marginTop: '10px',\n+ padding: '0 15px'\n},\nhorizontalDivider: {\nheight: '1px',\n@@ -125,21 +129,33 @@ const profileStyle = theme =>\njustifyContent: 'center'\n},\nprofileCorporate: {\n- padding: '20px 0px 14px 6px',\n+ padding: '20px 15px 14px',\ndisplay: 'flex',\nflexDirection: 'row',\nalignItems: 'center',\njustifyContent: 'center'\n},\nprofileDetail: {\n- paddingBottom: '20px',\n- cursor: 'pointer'\n+ cursor: 'pointer',\n+ padding: '10px 15px 10px 15px',\n+ width: '208px',\n+ '&:hover': {\n+ backgroundColor: '#313D49'\n+ },\n+ '&:first-child': {\n+ marginTop: '5px'\n+ }\n},\nprofileName: {\npaddingLeft: '15px'\n},\nbutton: {\nwidth: '189px'\n+ },\n+ smallButton: {\n+ fontSize: '10px',\n+ letterSpacing: '0.4px',\n+ width: '100%'\n}\n});\n@@ -167,10 +183,10 @@ const ProfileList = withStyles(profileStyle)(\n)}\n</Grid>\n<Grid item sm={8} className={classes.profileName}>\n- <Typography variant=\"h6\">\n+ <Typography variant=\"subtitle1\" style={{ marginBottom: '5px' }}>\n{el.name || defaultIdentityName(el)}\n</Typography>\n- <Typography variant=\"subtitle1\" color=\"secondary\">\n+ <Typography variant=\"subtitle2\" color=\"secondary\">\n{`${el.type.charAt(0).toUpperCase() +\nel.type.slice(1)} Profile`}\n</Typography>\n@@ -185,7 +201,7 @@ const ProfileList = withStyles(profileStyle)(\n<Button\nvariant=\"outlined\"\nsize=\"small\"\n- className={classes.button}\n+ className={classes.smallButton}\nonClick={onClickPersonal}\n>\nNEW PERSONAL PROFILE\n@@ -194,7 +210,12 @@ const ProfileList = withStyles(profileStyle)(\n</Grid> */}\n<Grid container className={classes.profileCorporate}>\n<Grid item xs={12}>\n- <Button variant=\"outlined\" size=\"small\" onClick={onClickCorporate}>\n+ <Button\n+ variant=\"outlined\"\n+ size=\"small\"\n+ onClick={onClickCorporate}\n+ className={classes.smallButton}\n+ >\nNEW CORPORATE PROFILE\n</Button>\n</Grid>\n"
    },
    {
        "msg": "feat: Added ties to top N points",
        "diff": "diff --git a/frontend/leaderboard/src/Points.re b/frontend/leaderboard/src/Points.re @@ -40,19 +40,32 @@ let applyTopNPoints =\nArray.sort(f, metricsArray);\nBelt.Array.reverseInPlace(metricsArray);\n- metricsArray |> Array.iter(Js.log);\n+ metricsArray\n+ |> Array.iteri((index, metric) => {\n+ Js.log(\"index: \" ++ string_of_int(index));\n+ Js.log(\"metric: \");\n+ Js.log(metric);\n+ Js.log(\"\\n\");\n+ });\nlet counter = ref(0);\nlet topNArrayWithPoints =\nmetricsArray\n- |> Array.mapi((i, (username, _)) =>\n+ |> Array.mapi((i, (username, metric)) =>\nif (counter^ >= Array.length(threshholdPointsList)) {\n(username, 0);\n} else {\nlet (place, points) = threshholdPointsList[counter^];\n- if (place == i) {\n+ if (i < Array.length(metricsArray) - 1) {\n+ let challengeMetric = getMetricValue(metric);\n+ let (_, nextMetric) = metricsArray[i + 1];\n+ let nextChallengeMetric = getMetricValue(nextMetric);\n+\n+ // handle ties by comparing to the next metric\n+ if (challengeMetric !== nextChallengeMetric && i >= place) {\ncounter := counter^ + 1;\n};\n+ };\n(username, points);\n}\n);\n",
        "date": "30.01.2021 12:50:55",
        "repo": "minaprotocol/mina",
        "type": "feat",
        "sim_msg": "fix: clear datasets when updating metrics",
        "sim_diff": "diff --git a/packages/manager/modules/pci/src/projects/project/storages/databases/database/metrics/metrics.controller.js b/packages/manager/modules/pci/src/projects/project/storages/databases/database/metrics/metrics.controller.js @@ -108,8 +108,9 @@ export default class MetricsCtrl {\nthis.selectedTimeRange.value,\n).then((data) => {\nconst metrics = sortBy(data.metrics, 'hostname');\n- this.metricsData[data.name].data = data;\n+ this.metricsData[data.name].data = data;\n+ this.metricsData[data.name].chart.data.datasets = [];\nmetrics.forEach((metric) => {\nthis.metricsData[data.name].chart.updateSerie(\nmetric.hostname,\n"
    },
    {
        "msg": "feat: add examples to static export",
        "diff": "diff --git a/website/pages/static-export.mdx b/website/pages/static-export.mdx @@ -48,18 +48,58 @@ Razzle not only works with React, but also Reason, Elm, Vue, Angular, Svelte, an\n#### render()\nbehind the scenes razzle calls `render` function that exposed from `static_export` module and saves `html` string that you pass to `res.json()` into a html file. for `req` object there is only one property that is `url` which contains the url that we are going to render and save it's result to the html file.\n+html file destination is relative to the `req.url`, for example if the url is `/product/A` html is going to get saved at `/build/product/A/index.html`.\n+\n+you should call `renderToString()` (or what ever your framework gives you to do SSR) in this function send resonse to `res.json()`\n+\n+```js\n+export const render = (req, res) => {\n+ const html = ReactDOMServer.renderToString(\n+ <StaticRouter location={req.url}>\n+ <App />\n+ </StaticRouter>\n+ );\n+\n+ res.json({ html });\n+};\n+```\n+\n+(you can re-export your ssr logic from server.js file and use it `static_export`)\n#### routes()\nyou should also export a function called `routes` that returns an array of strings or a promise that will resolve array of strings. razzle will take the urls one by one and pass them one by one to `render`.\n+you should get all paths that your app has from your CMS in this method and return it at the end:\n-html file destination is relative to the `req.url`, for example if the url is `/product/A` html is going to get saved at `/build/product/A/index.html`.\n+```js\n+export const routes = async () => {\n+ // data should be an array of strings [\"/\", \"/product/A\", \"/blog/1\", \"/blog/2\"]\n+ const { data } = await getAppPaths();\n+ return data;\n+};\n+```\n#### page data\nyou may also need to save the data that your page uses to rehydrate the app on the client side.\nyou can also pass the `data` along the `html` to `res.json({ html, data })` and contents of data object will go inside the `page-data.json` file next to the html file.\n+```js\n+export const render = async (req, res) => {\n+ const data = await getDataForRoute(req.url);\n+\n+ const html = ReactDOMServer.renderToString(\n+ <StaticRouter location={req.url}>\n+ <App />\n+ </StaticRouter>\n+ );\n+\n+ res.json({ html, data });\n+};\n+```\n+\n+(you should also change how your app fetches data on client-side, so it reads data from `page-data.json`)\n+\n## TypeScript Support\nStatic export comes with typescript support out of the box, in order to use typescript rename `static_export.js` to `static_export.ts` and you are good to go!\n",
        "date": "06.10.2020 02:46:12",
        "repo": "jaredpalmer/razzle",
        "type": "feat",
        "sim_msg": "feat(app): Improve dev-server for SSR in dev mode",
        "sim_diff": "diff --git a/app/lib/dev-server.js b/app/lib/dev-server.js @@ -232,11 +232,10 @@ module.exports = class DevServer {\napp,\nssr: {\n- renderToString ({ req, res }, fn) {\n+ renderToString (opts, fn) {\nconst context = {\n- url: req.url,\n- req,\n- res\n+ ...opts,\n+ url: opts.req.url\n}\nrenderer.renderToString(context, (err, html) => {\n"
    },
    {
        "msg": "feat(server/ssr): rewrite ssr, add HTML component, use stats instead of hadrcoded html\nfeat(server/ssr): rewrite ssr, add HTML component, use stats instead of\nhadrcoded html",
        "diff": "diff --git a/src/server/ssr/index.js b/src/server/ssr/index.js * @flow\n* @desc\n*/\n-import * as React from 'react'\n+import React, {type Node} from 'react'\nimport fs from 'fs'\nimport {renderToString} from 'react-dom/server'\nimport Helmet from 'react-helmet'\nimport createHistory from 'history/createMemoryHistory'\nimport {ServerStyleSheet, StyleSheetManager} from 'styled-components'\nimport {configureApp, configureRootComponent} from 'common/app'\n-\n-const DLLScripts =\n- process.env.NODE_ENV === 'production'\n- ? ''\n- : `\n- <script src=\"/polyfills.js\"></script>\n- <script src=\"/vendor.js\"></script>\n-`\n-// This function makes server rendering of asset references consistent with different webpack chunk/entry confiugrations\n-function normalizeAssets (assets) {\n- return Array.isArray(assets) ? assets : [assets]\n-}\n+import IndexHTMLComponent from './IndexHTMLComponent'\n+import assets from 'webpack-assets'\n+import faviconsAssets from 'favicons-assets'\nexport default (req: Object, res: Object, next: () => void) => {\n- const stats = fs.readFileSync(\n- `${process.env.CLIENT_DIST_PATH}/stats.json`,\n- 'utf8'\n- )\nconst {isLoggedIn, token} = req.user\nconst initialState: Object = isLoggedIn\n? {me: {auth: {isLoggedIn, token}}}\n@@ -34,74 +21,27 @@ export default (req: Object, res: Object, next: () => void) => {\nconst sheet = new ServerStyleSheet()\nconst location: string = req.url\nconst context = {}\n- const {store, history, routes} = configureApp({initialState})\n- const RootComponent: React.Node = configureRootComponent({\n+ const {store, history, routes} = configureApp(initialState)\n+ const RootComponent: Node = configureRootComponent({\nstore,\nhistory,\nroutes,\nSSR: {location, context}\n})\n- const App: React.Node = (\n+ const App: Node = (\n<StyleSheetManager sheet={sheet.instance}>\n{RootComponent}\n</StyleSheetManager>\n)\nconst css = sheet.getStyleTags()\nconst preloadedState: Object = store.getState()\n- console.log(preloadedState)\n- const app: string = renderToString(App)\n- const {assetsByChunkName}: Object = JSON.parse(stats)\n- const html = getHtml({\n- app,\n+ const props = {\ncss,\n+ assets,\n+ faviconsAssets,\ninitialState: preloadedState,\n- assetsByChunkName\n- })\n- res.send(html)\n+ App\n}\n-\n-/**\n- * Get html\n- * @param {[type]} app [description]\n- * @param {[type]} css [description]\n- * @param {[type]} initialState [description]\n- * @param {[type]} assetsByChunkName [description]\n- * @return {String} [description]\n- */\n-const getHtml = ({app, css, initialState, assetsByChunkName}) => {\n- const stringifiedState: string = JSON.stringify(initialState)\n- const safeStringifiedState: string = stringifiedState.replace(/</g, '\\\\u003c')\n- return `\n- <!doctype html>\n- <html>\n- <head>\n- <meta charset=\"utf-8\">\n- <title>Noir</title>\n- <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n- <meta name=\"description\" content=\"Production-ready, performance-first, template built with React/Redux/React-Semantic-UI\">\n- <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n- <base href=\"/\" />\n- <meta name=\"theme-color\" content=\"<%=htmlWebpackPlugin.options.theme_color%>\"/>\n- <meta name=\"msapplication-tap-highlight\" content=\"no\">\n- <link rel=\"manifest\" href=\"manifest.json\">\n- ${css}\n- ${normalizeAssets(assetsByChunkName.client)\n- .filter(path => path.endsWith('.css'))\n- .map(path => `<link rel=\"stylesheet\" href=\"${path}\" />`)\n- .join('\\n')}\n- </head>\n- <body>\n- <div id=\"app\">${app}</div>\n- <script>window.__INITIAL_STATE__ = ${safeStringifiedState}</script>\n- ${DLLScripts}\n- ${normalizeAssets(assetsByChunkName.client)\n- .filter(path => path.endsWith('.js'))\n- .map(path => `<script src=\"${path}\"></script>`)\n- .join('\\n')}\n- <noscript>\n- You are using outdated browser. You can install modern browser here: <a href=\"http://outdatedbrowser.com/\" >http://outdatedbrowser.com</a>.\n- </noscript>\n- </body>\n- </html>\n- `\n+ const html: string = renderToString(<IndexHTMLComponent {...props} />)\n+ res.send(html)\n}\n",
        "date": "06.09.2017 12:16:46",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "feat(app): Improve dev-server for SSR in dev mode",
        "sim_diff": "diff --git a/app/lib/dev-server.js b/app/lib/dev-server.js @@ -232,11 +232,10 @@ module.exports = class DevServer {\napp,\nssr: {\n- renderToString ({ req, res }, fn) {\n+ renderToString (opts, fn) {\nconst context = {\n- url: req.url,\n- req,\n- res\n+ ...opts,\n+ url: opts.req.url\n}\nrenderer.renderToString(context, (err, html) => {\n"
    },
    {
        "msg": "feat: logo and header link to home page",
        "diff": "diff --git a/src/App.vue b/src/App.vue <div class=\"container mb-4 mt-4\">\n<div class=\"mb-4\">\n<h1 class=\"logo\">\n- <img alt=\"Logo\" src=\"./assets/logo.png\" width=\"50\">\n+ <router-link to=\"/\">\n+ <img alt=\"Logo\" src=\"./assets/logo.png\" width=\"50\" />\nOpen Drinks\n+ </router-link>\n</h1>\n</div>\n<footer class=\"container mt-4 text-center\">\n<hr />\n- <div>View the source or contribute a drink recipe on <a href=\"https://github.com/alfg/opendrinks\">GitHub</a>!</div>\n+ <div>\n+ View the source or contribute a drink recipe on\n+ <a\n+ href=\"https://github.com/alfg/opendrinks\"\n+ >GitHub</a>!\n+ </div>\n<a href=\"https://www.netlify.com\">\n<img src=\"https://www.netlify.com/img/global/badges/netlify-light.svg\" alt=\"Netlify\" />\n</a>\n<style>\n#app {\n- font-family: 'Avenir', Helvetica, Arial, sans-serif;\n+ font-family: \"Avenir\", Helvetica, Arial, sans-serif;\n-webkit-font-smoothing: antialiased;\n-moz-osx-font-smoothing: grayscale;\ncolor: #2c3e50;\n}\n.logo {\n- font-family: 'Pacifico', 'cursive';\n+ font-family: \"Pacifico\", \"cursive\";\n+}\n+.logo a {\n+ text-decoration: none;\n+ color: inherit;\n}\n</style>\n",
        "date": "01.10.2019 10:15:23",
        "repo": "alfg/opendrinks",
        "type": "feat",
        "sim_msg": "fix: set decimal places for available and amount",
        "sim_diff": "diff --git a/src/views/Send.vue b/src/views/Send.vue min=\"0\"\n:class=\"{ 'is-invalid': amount && amountError }\"\n:style=\"getAssetColorStyle(asset)\"\n- v-model=\"amount\"\n+ v-model=\"sendAmount\"\nclass=\"form-control\"\nid=\"amount\"\nplaceholder=\"0.00\"\n</div>\n<div class=\"sub-form-group\">\n<div class=\"label-sub\"\n- ><span class=\"text-muted\">Available</span> {{ available }}\n+ ><span class=\"text-muted\">Available</span> {{ dpUI(available) }}\n{{ asset }}</div\n>\n<div\n</div>\n<div class=\"wrapper_bottom\">\n<div class=\"button-group\">\n- <router-link :to=\"routeSource === 'assets' ? '/wallet' : `/account/${asset}`\"\n- ><button class=\"btn btn-light btn-outline-primary btn-lg\">\n+ <router-link :to=\"routeSource === 'assets' ? '/wallet' : `/account/${asset}`\">\n+ <button class=\"btn btn-light btn-outline-primary btn-lg\">\nCancel\n- </button></router-link\n- >\n+ </button>\n+ </router-link>\n<button\nclass=\"btn btn-primary btn-lg\"\n@click=\"showConfirm = true\"\n</label>\n<div class=\"d-flex align-items-center justify-content-between mt-0\">\n<div class=\"confirm-value\" :style=\"getAssetColorStyle(asset)\">\n- {{ amount }} {{ asset }}\n+ {{ prettyBalance(amount, asset) }} {{ asset }}\n</div>\n<div class=\"details-text\">${{ amountInFiat }}</div>\n</div>\n</label>\n<div class=\"d-flex align-items-center justify-content-between mt-0\">\n<div class=\"font-weight-bold\" v-if=\"asset === feeType\">\n- {{ amountWithFee }} {{ asset }}\n+ {{ prettyBalance(amountWithFee, asset) }} {{ asset }}\n</div>\n<div class=\"font-weight-bold\" v-else>\n- {{ amount }} {{ asset }} + {{ prettyFee }} {{ feeType }}\n+ {{ prettyBalance(amount, asset) }} {{ asset }} + {{ prettyFee }} {{ feeType }}\n</div>\n<div class=\"font-weight-bold\">${{ totalToSendInFiat }}</div>\n</div>\n@@ -209,7 +209,7 @@ import BN from 'bignumber.js'\nimport cryptoassets from '@/utils/cryptoassets'\nimport NavBar from '@/components/NavBar'\nimport FeeSelector from '@/components/FeeSelector'\n-import { prettyBalance, prettyFiatBalance } from '@/utils/coinFormatter'\n+import { prettyBalance, prettyFiatBalance, dpUI } from '@/utils/coinFormatter'\nimport {\ngetChainFromAsset,\ngetAssetColorStyle,\n@@ -246,6 +246,14 @@ export default {\nasset: String\n},\ncomputed: {\n+ sendAmount: {\n+ get () {\n+ return dpUI(this.amount)\n+ },\n+ set (newValue) {\n+ this.amount = BN(newValue)\n+ }\n+ },\n...mapState([\n'activeNetwork',\n'activeWalletId',\n@@ -336,6 +344,7 @@ export default {\nmethods: {\n...mapActions(['updateFees', 'sendTransaction']),\nprettyBalance,\n+ dpUI,\nprettyFiatBalance,\ngetAssetIcon,\ngetAssetColorStyle,\n"
    },
    {
        "msg": "feat(jest_config): add mocks and disable coverage of styles\nfeat(jest_config): add mocks and disable coverage of styles",
        "diff": "diff --git a/jest_config/jest.config.json b/jest_config/jest.config.json \"rootDir\": \"../\",\n\"setupFiles\": [\"<rootDir>/jest_config/setupJest.js\"],\n\"automock\": false,\n- \"moduleNameMapper\": {}\n+ \"moduleNameMapper\": {\n+ \"\\\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$\": \"<rootDir>/jest_config/__mocks__/fileMock.js\",\n+ \"\\\\.(css|less)$\": \"<rootDir>/jest_config/__mocks__/styleMock.js\"\n+ },\n+ \"coveragePathIgnorePatterns\": [\"style.jsx\", \"/styles\"]\n}\n",
        "date": "10.09.2017 00:12:29",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "chore(package): remove unused jest config",
        "sim_diff": "diff --git a/package.json b/package.json \"**/*.spec.js\",\n\"node_modules\"\n]\n- },\n- \"jest\": {\n- \"verbose\": true,\n- \"resolver\": \"jest-directory-named-resolver\",\n- \"transform\": {\n- \"^.+\\\\.js$\": \"babel-jest\",\n- \"^.+\\\\.html$\": \"<rootDir>/src/__mocks__/htmlMock.js\"\n- },\n- \"moduleNameMapper\": {\n- \"^@/(.*)$\": \"<rootDir>/src/$1\",\n- \"^clappr-zepto$\": \"clappr-zepto/zepto.js\",\n- \"\\\\.(scss)$\": \"<rootDir>/src/__mocks__/styleMock.js\"\n- },\n- \"collectCoverageFrom\": [\n- \"src/*.js\",\n- \"src/**/*.js\",\n- \"src/**/**/*.js\"\n- ]\n}\n}\n"
    },
    {
        "msg": "feat(ssr): render Helmet on server",
        "diff": "diff --git a/src/server/ssr/index.js b/src/server/ssr/index.js * @desc\n*/\nimport React from 'react'\n+import Helmet from 'react-helmet'\nimport {renderToString} from 'react-dom/server'\nimport {ServerStyleSheet, StyleSheetManager} from 'styled-components'\nimport {configureRootComponent, configureApp} from 'common/app'\n@@ -33,9 +34,7 @@ export default async (req: express$Request, res: express$Response) => {\nconst app = (\n<AsyncComponentProvider asyncContext={asyncContext}>\n- <StyleSheetManager sheet={sheet.instance}>\n- {RootComponent}\n- </StyleSheetManager>\n+ <StyleSheetManager sheet={sheet.instance}>{RootComponent}</StyleSheetManager>\n</AsyncComponentProvider>\n)\n@@ -45,6 +44,7 @@ export default async (req: express$Request, res: express$Response) => {\nasyncBootstrapper(app).then(() => {\nconst renderedApp = renderToString(app)\n+ const helmet = Helmet.renderStatic()\nconst css: string = sheet.getStyleTags()\nconst preloadedState: Object = store.getState()\nconst responseStatusCode = noRequestURLMatch ? 404 : 200\n@@ -55,7 +55,8 @@ export default async (req: express$Request, res: express$Response) => {\nasyncState,\ninitialState: preloadedState,\napp: renderedApp,\n- i18n\n+ i18n,\n+ helmet\n}\nres.status(responseStatusCode).send(HTMLComponent(props))\n",
        "date": "19.02.2018 18:18:55",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "chore(app): make the render ssr middleware a bit more complete",
        "sim_diff": "diff --git a/app/templates/ssr/middlewares/render.js b/app/templates/ssr/middlewares/render.js @@ -10,7 +10,7 @@ export default ssrMiddleware(({ app, resolve, render, serve }) => {\napp.get(resolve.urlPath('*'), (req, res) => {\nres.setHeader('Content-Type', 'text/html')\n- render({ req, res })\n+ render(/* the ssrContext: */ { req, res })\n.then(html => {\n// now let's send the rendered html to the client\nres.send(html)\n"
    },
    {
        "msg": "feat(src/client): add react-a11y, fix export of main configuration scripts(configureRoot, configureA\nadd react-a11y, fix export of main configuration scripts(configureRoot, configureApp)",
        "diff": "diff --git a/src/client/index.jsx b/src/client/index.jsx // Styles\nimport 'semantic-ui-css/semantic.css'\n-import 'styles/global'\n// Fetch and promise polyfill\nimport 'promise-polyfill'\n-import 'whatwg-fetch'\n+import 'isomorphic-fetch'\n// Application\n-import {render} from 'react-dom'\n-import {configureStore, configureRootComponent} from 'common/index.jsx'\n+import React from 'react'\n+import ReactDOM, {render} from 'react-dom'\n+import {configureApp, configureRootComponent} from 'common/app'\nif (process.env.NODE_ENV === 'production') {\nrequire('common/pwa')\n@@ -29,13 +29,21 @@ if (process.env.NODE_ENV === 'production') {\n*/\n/*eslint-enable */\nwindow.Perf = require('react-addons-perf')\n-}\n-const preloadedState = window.__PRELOADED_STATE__ || {}\n-delete window.__PRELOADED_STATE__\n+ // NOTE: a11y doesnt work with SSR and React throws warnings like:\n+ // \"React attempted to reuse markup in a container but the checksum was invalid\"\n+ // a11y adds \"id\" attribute to the root container (#app) of your app and triggers re-rendering\n+ //\n+ /** {@link https://github.com/reactjs/react-a11y } */\n+ // const a11y = require('react-a11y')\n+ // a11y(React, {ReactDOM})\n+}\n-const store = configureStore(preloadedState)\n-const RootComponent = configureRootComponent({store})\n+const initialState = window.__INITIAL_STATE__ || {}\n+// NOTE: V8 doesn't optimize `delete`\n+// delete window.__INITIAL_STATE__\n+const propsForRoot = configureApp({initialState})\n+const RootComponent = configureRootComponent(propsForRoot)\nrender(RootComponent, document.getElementById('app'))\nif (module.hot) {\n",
        "date": "23.08.2017 18:42:17",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "fix: market config so it will be boolean",
        "sim_diff": "diff --git a/src/config/config.js b/src/config/config.js const publicUrl = process.env.REACT_APP_PUBLIC_URL || (window && window.location && window.location.origin)\n-\n+const isEToro = process.env.REACT_APP_ETORO === 'true' || process.env.REACT_APP_NETWORK === 'etoro'\nconst Config = {\nenv: process.env.REACT_APP_ENV || 'development',\nversion: process.env.VERSION || 'v0',\n@@ -14,9 +14,9 @@ const Config = {\ndashboardUrl: process.env.REACT_APP_DASHBOARD_URL || 'https://dashboard.gooddollar.org',\ninfuraKey: process.env.REACT_APP_INFURA_KEY,\nnetwork: process.env.REACT_APP_NETWORK || 'fuse',\n- market: process.env.REACT_APP_MARKET || process.env.REACT_APP_ETORO || process.env.REACT_APP_NETWORK === 'etoro',\n+ market: process.env.REACT_APP_MARKET === 'true' || isEToro,\nmarketUrl: process.env.REACT_APP_MARKET_URL || 'https://etoro.paperclip.co',\n- isEToro: process.env.REACT_APP_ETORO === 'true' || process.env.REACT_APP_NETWORK === 'etoro',\n+ isEToro,\nshowInvite: process.env.REACT_APP_DASHBOARD_SHOW_INVITE === 'true',\nshowRewards: process.env.REACT_APP_DASHBOARD_SHOW_REWARDS === 'true',\nzoomLicenseKey: process.env.REACT_APP_ZOOM_LICENSE_KEY,\n"
    },
    {
        "msg": "feat: add nullish coalescing for validUntil and simplify function objects",
        "diff": "diff --git a/frontend/mina-signer/src/MinaSDK.ts b/frontend/mina-signer/src/MinaSDK.ts \"use strict\";\n-\nconst JSOfOCaml_SDK = require(\"./client_sdk.bc.js\");\nconst minaSDK = JSOfOCaml_SDK.minaSDK;\n@@ -108,32 +107,30 @@ class Client {\nconst fee = String(payment.fee);\nconst nonce = String(payment.nonce);\nconst amount = String(payment.amount);\n- const validUntil = String(\n- payment.validUntil ? payment.validUntil : defaultValidUntil\n- );\n+ const validUntil = String(payment.validUntil ?? defaultValidUntil);\nreturn {\nsignature: minaSDK.signPayment(this.network, privateKey, {\ncommon: {\n- fee: fee,\n+ fee,\nfeePayer: payment.from,\n- nonce: nonce,\n- validUntil: validUntil,\n- memo: memo,\n+ nonce,\n+ validUntil,\n+ memo,\n},\npaymentPayload: {\nsource: payment.from,\nreceiver: payment.to,\n- amount: amount,\n+ amount,\n},\n}).signature,\ndata: {\nto: payment.to,\nfrom: payment.from,\n- fee: fee,\n- amount: amount,\n- nonce: nonce,\n- memo: memo,\n- validUntil: validUntil,\n+ fee,\n+ amount,\n+ nonce,\n+ memo,\n+ validUntil,\n},\n};\n}\n@@ -150,24 +147,22 @@ class Client {\nconst fee = String(payload.fee);\nconst amount = String(payload.amount);\nconst nonce = String(payload.nonce);\n- const validUntil = String(\n- payload.validUntil ? payload.validUntil : defaultValidUntil\n- );\n+ const validUntil = String(payload.validUntil ?? defaultValidUntil);\nreturn minaSDK.verifyPaymentSignature(this.network, {\nsender: signedPayment.data.from,\nsignature: signedPayment.signature,\npayment: {\ncommon: {\n- fee: fee,\n+ fee,\nfeePayer: payload.from,\n- nonce: nonce,\n- validUntil: validUntil,\n- memo: memo,\n+ nonce,\n+ validUntil,\n+ memo,\n},\npaymentPayload: {\nsource: payload.from,\nreceiver: payload.to,\n- amount: amount,\n+ amount,\n},\n},\n});\n@@ -192,19 +187,15 @@ class Client {\nconst memo = stakeDelegation.memo ?? \"\";\nconst fee = String(stakeDelegation.fee);\nconst nonce = String(stakeDelegation.nonce);\n- const validUntil = String(\n- stakeDelegation.validUntil\n- ? stakeDelegation.validUntil\n- : defaultValidUntil\n- );\n+ const validUntil = String(stakeDelegation.validUntil ?? defaultValidUntil);\nreturn {\nsignature: minaSDK.signStakeDelegation(this.network, privateKey, {\ncommon: {\n- fee: fee,\n+ fee,\nfeePayer: stakeDelegation.from,\n- nonce: nonce,\n- validUntil: validUntil,\n- memo: memo,\n+ nonce,\n+ validUntil,\n+ memo,\n},\ndelegationPayload: {\nnewDelegate: stakeDelegation.to,\n@@ -214,10 +205,10 @@ class Client {\ndata: {\nto: stakeDelegation.to,\nfrom: stakeDelegation.from,\n- fee: fee,\n- nonce: nonce,\n- memo: memo,\n- validUntil: validUntil,\n+ fee,\n+ nonce,\n+ memo,\n+ validUntil,\n},\n};\n}\n@@ -235,19 +226,17 @@ class Client {\nconst memo = payload.memo ?? \"\";\nconst fee = String(payload.fee);\nconst nonce = String(payload.nonce);\n- const validUntil = String(\n- payload.validUntil ? payload.validUntil : defaultValidUntil\n- );\n+ const validUntil = String(payload.validUntil ?? defaultValidUntil);\nreturn minaSDK.verifyStakeDelegationSignature(this.network, {\nsender: signedStakeDelegation.data.from,\nsignature: signedStakeDelegation.signature,\nstakeDelegation: {\ncommon: {\n- fee: fee,\n+ fee,\nfeePayer: payload.from,\n- nonce: nonce,\n- validUntil: validUntil,\n- memo: memo,\n+ nonce,\n+ validUntil,\n+ memo,\n},\ndelegationPayload: {\nnewDelegate: payload.to,\n@@ -269,9 +258,7 @@ class Client {\nconst fee = String(payload.fee);\nconst amount = String(payload.amount);\nconst nonce = String(payload.nonce);\n- const validUntil = String(\n- payload.validUntil ? payload.validUntil : defaultValidUntil\n- );\n+ const validUntil = String(payload.validUntil ?? defaultValidUntil);\nreturn minaSDK.hashPayment({\nsender: signedPayment.data.from,\nsignature: signedPayment.signature,\n@@ -279,14 +266,14 @@ class Client {\ncommon: {\nfee: fee,\nfeePayer: payload.from,\n- nonce: nonce,\n- validUntil: validUntil,\n- memo: memo,\n+ nonce,\n+ validUntil,\n+ memo,\n},\npaymentPayload: {\nsource: payload.from,\nreceiver: payload.to,\n- amount: amount,\n+ amount,\n},\n},\n});\n@@ -305,19 +292,17 @@ class Client {\nconst memo = payload.memo ?? \"\";\nconst fee = String(payload.fee);\nconst nonce = String(payload.nonce);\n- const validUntil = String(\n- payload.validUntil ? payload.validUntil : defaultValidUntil\n- );\n+ const validUntil = String(payload.validUntil ?? defaultValidUntil);\nreturn minaSDK.hashStakeDelegation({\nsender: signedStakeDelegation.data.from,\nsignature: signedStakeDelegation.signature,\nstakeDelegation: {\ncommon: {\n- fee: fee,\n+ fee,\nfeePayer: payload.from,\n- nonce: nonce,\n- validUntil: validUntil,\n- memo: memo,\n+ nonce,\n+ validUntil,\n+ memo,\n},\ndelegationPayload: {\nnewDelegate: payload.to,\n",
        "date": "24.11.2021 11:59:43",
        "repo": "minaprotocol/mina",
        "type": "feat",
        "sim_msg": "style: clean up code comments",
        "sim_diff": "diff --git a/renderer/reducers/payment/utils.js b/renderer/reducers/payment/utils.js @@ -97,7 +97,7 @@ export const getPaymentConfig = () => {\n* @param {string} pubkey Pubkey\n* @param {number} amt Amount in satoshi\n* @param {number} feeLimit Fee limit (sats)\n- * @returns {object} Keysnd payment\n+ * @returns {object} Keysnd payment payload\n*/\nexport const prepareKeysendPayload = (pubkey, amt, feeLimit) => {\nconst preimage = generatePreimage()\n@@ -121,7 +121,7 @@ export const prepareKeysendPayload = (pubkey, amt, feeLimit) => {\n* @param {string} payReq Payment request\n* @param {number} amt Amount in satoshi\n* @param {number} feeLimit Fee limit (sats)\n- * @returns {object} bolt11 payment\n+ * @returns {object} Bolt11 payment payload\n*/\nexport const prepareBolt11Payload = (payReq, amt, feeLimit) => {\nconst invoice = decodePayReq(payReq)\n@@ -141,7 +141,7 @@ export const prepareBolt11Payload = (payReq, amt, feeLimit) => {\n* @param {string} pubkey Pubkey\n* @param {number} amt Amount in satoshi\n* @param {number} feeLimit Fee limit (sats)\n- * @returns {object} Keysnd payment\n+ * @returns {object} Keysend probe payload\n*/\nexport const prepareKeysendProbe = (pubkey, amt, feeLimit) => {\nconst preimage = generatePreimage()\n@@ -164,7 +164,7 @@ export const prepareKeysendProbe = (pubkey, amt, feeLimit) => {\n*\n* @param {string} payReq Payment request\n* @param {number} feeLimit Fee limit (sats)\n- * @returns {object} bolt11 payment\n+ * @returns {object} Bolt11 probe payload\n*/\nexport const prepareBolt11Probe = (payReq, feeLimit) => {\nconst invoice = decodePayReq(payReq)\n"
    },
    {
        "msg": "feat: Esmfy repl.html",
        "diff": "diff --git a/demo/repl.html b/demo/repl.html </td></tr></table>\n</div>\n-<script type=\"text/javascript\" src=\"../src/development_initializer.js\"></script>\n-<script type=\"text/javascript\">\n+<script type=\"module\" src=\"../src/main-browser.js\"></script>\n+<script type=\"module\">\nvar on_error = function(e){\nBiwaScheme.Port.current_error.put_string(e.message);\nthrow(e);\n};\nvar biwascheme = new BiwaScheme.Interpreter(on_error);\n-function bs_eval(){\n+window.bs_eval = function(){\n$(\"#bs-console\").empty();\nvar str = $(\"#bs-input\").val();\n",
        "date": "25.07.2020 15:08:07",
        "repo": "biwascheme/biwascheme",
        "type": "feat",
        "sim_msg": "refactor: refine cmd",
        "sim_diff": "diff --git a/bin/whistle.js b/bin/whistle.js @@ -29,6 +29,12 @@ function showStartupInfo(err, options, debugMode, restart) {\nerror(err.stack ? 'Date: ' + new Date().toLocaleString() + '\\n' + err.stack : err);\n}\n+function getName() {\n+ if (/[/\\\\](\\w+)$/.test(process.argv[1])) {\n+ return RegExp.$1;\n+ }\n+}\n+\nprogram.setConfig({\nmain: function(options) {\nvar cmd = process.argv[2];\n@@ -41,7 +47,7 @@ program.setConfig({\nvar hash = options && options.storage && encodeURIComponent(options.storage);\nreturn path.join(__dirname, '../index.js') + (hash ? '#' + hash + '#' : '');\n},\n- name: config.name,\n+ name: getName() || config.name,\nversion: config.version,\nrunCallback: function(err, options) {\nif (err) {\n"
    },
    {
        "msg": "feat(.eslintrc): add react-a11y plugin for eslint\nadd react-a11y plugin for eslint",
        "diff": "diff --git a/.eslintrc.json b/.eslintrc.json {\n- \"extends\": [\"plugin:react/recommended\", \"standard\"],\n+ \"extends\": [\n+ \"plugin:react/recommended\",\n+ \"plugin:jsx-a11y/recommended\",\n+ \"standard\"\n+ ],\n\"parser\": \"babel-eslint\",\n- \"plugins\": [\"react\", \"babel\"],\n+ \"plugins\": [\"react\", \"babel\", \"jsx-a11y\"],\n\"parserOptions\": {\n\"ecmaFeatures\": {\n\"jsx\": true,\n\"node\": true\n},\n\"rules\": {\n- \"no-unused-vars\": 1,\n+ \"no-unused-vars\": 0,\n\"no-tabs\": 0,\n\"indent\": [2, \"tab\"]\n},\n",
        "date": "14.08.2017 16:59:55",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "chore: fix eslint config error",
        "sim_diff": "diff --git a/.eslintrc.json b/.eslintrc.json \"node\": true,\n\"es6\": true\n},\n- \"extends\": [\n- \"eslint:recommended\",\n- \"plugin:react/recommended\"\n- ],\n+ \"extends\": [\"eslint:recommended\", \"plugin:react/recommended\"],\n\"parserOptions\": {\n\"sourceType\": \"module\",\n\"ecmaVersion\": 2018\n},\n\"overrides\": [\n{\n- \"files\": [\n- \"**/*.test?(.*).js\"\n- ],\n+ \"files\": [\"**/*.test?(.*).js\"],\n\"env\": {\n- \"jest\": true,\n- \"jest/globals\": true\n+ \"jest\": true\n},\n\"globals\": {\n\"page\": true,\n\"context\": true,\n\"jestPuppeteer\": true\n},\n- \"plugins\": [\n- \"jest\"\n- ]\n+ \"plugins\": [\"jest\"]\n}\n]\n}\n"
    },
    {
        "msg": "feat(server/ssr): add async-component, async-bootstrapper\nfeat(server/ssr): add async-component, async-bootstrapper",
        "diff": "diff --git a/src/server/ssr/index.js b/src/server/ssr/index.js */\nimport React from 'react'\nimport chalk from 'chalk'\n+import _ from 'lodash'\nimport {renderToNodeStream} from 'react-dom/server'\nimport {ServerStyleSheet, StyleSheetManager} from 'styled-components'\nimport {configureRootComponent, configureApp} from 'common/app'\n+import asyncBootstrapper from 'react-async-bootstrapper'\n+import {AsyncComponentProvider, createAsyncContext} from 'react-async-component'\nimport HtmlComponent from './HtmlComponent'\n// $FlowFixMe\nimport assets from 'webpack-assets'\n@@ -36,45 +39,48 @@ export default async (req: express$Request, res: express$Response) => {\ni18n,\nSSR: {location, context}\n})\n- const stream = renderToNodeStream(\n+ const asyncContext = createAsyncContext()\n+\n+ const app = (\n+ <AsyncComponentProvider asyncContext={asyncContext}>\n<StyleSheetManager sheet={sheet.instance}>\n{RootComponent}\n</StyleSheetManager>\n+ </AsyncComponentProvider>\n)\n+ // console.log(_.find(routes, a => matchPath(req.url, a)))\n+ const noRequestURLMatch = !!_.find(routes, a => matchPath(req.url, a))\n+\n+ asyncBootstrapper(app).then(() => {\n+ const appStream = renderToNodeStream(app)\nconst css: string = sheet.getStyleTags()\nconst preloadedState: Object = store.getState()\n+\n+ const asyncState = asyncContext.getState()\nconst props = {\ncss,\nassets,\nfaviconsAssets,\n+ asyncState,\ninitialState: preloadedState,\ni18n\n}\n- // FIXME: how to replace `let` and `for`?\n- let lazyRoutes = routes.filter(a => a.lazy)\n- for (var i = 0; i < lazyRoutes.length; i++) {\n- let route = routes[i]\n- if (matchPath(req.url, route)) {\n- route.component = await routes[i].component().default\n- route.lazy = false\n- break\n- }\n- }\n-\nconst {beforeAppTag, afterAppTag} = HtmlComponent(props)\n+ const responseStatusCode = noRequestURLMatch ? 404 : 200\n- res.writeHead(200, {\n+ res.writeHead(responseStatusCode, {\n'Content-Type': 'text/html'\n})\nres.write(beforeAppTag)\nres.write(`<div id=\"app\">`)\n- stream.pipe(res, {end: false})\n+ appStream.pipe(res, {end: false})\n- stream.on('end', () => {\n+ appStream.on('end', () => {\nres.write('</div>')\nres.write(afterAppTag)\nres.end()\n})\n+ })\n}\n",
        "date": "03.11.2017 16:50:33",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "feat(app): SSR prod distributables should force use the prod code of externalized vue/vuex/etc packages",
        "sim_diff": "diff --git a/app/lib/webpack/ssr/webserver.js b/app/lib/webpack/ssr/webserver.js @@ -6,6 +6,8 @@ const WebserverAssetsPlugin = require('./plugin.webserver-assets')\nconst injectNodeTypescript = require('../inject.node-typescript')\nconst WebpackProgressPlugin = require('../plugin.progress')\n+const nodeEnvBanner = `if(process.env.NODE_ENV===void 0){process.env.NODE_ENV='production'}`\n+\nconst flattenObject = (obj, prefix = 'process.env') => {\nreturn Object.keys(obj)\n.reduce((acc, k) => {\n@@ -104,6 +106,15 @@ module.exports = function (cfg, configName) {\n.use(WebpackProgressPlugin, [{ name: configName, cfg, hasExternalWork: true }])\nif (cfg.ctx.prod) {\n+ // we need to set process.env.NODE_ENV to 'production'\n+ // (unless it's already set to something)\n+ // in order for externalized vue/vuex/etc packages to run the\n+ // production code (*.cjs.prod.js) instead of the dev one\n+ chain.plugin('node-env-banner')\n+ .use(webpack.BannerPlugin, [\n+ { banner: nodeEnvBanner, raw: true, entryOnly: true }\n+ ])\n+\nchain.plugin('webserver-assets-plugin')\n.use(WebserverAssetsPlugin, [ cfg ])\n"
    },
    {
        "msg": "feat(api/LocalStorateCookiesSvc): remove store2, add comments\nfeat(api/LocalStorateCookiesSvc): remove store2 from core functions and\ncomment import of store2, add comments",
        "diff": "diff --git a/src/common/api/LocalStorageCookiesSvc/index.js b/src/common/api/LocalStorageCookiesSvc/index.js // @flow\n-import * as store from 'store2'\nimport Cookies from 'js-cookie'\n+// By default, we don't use localStorage, but store2 is already installed\n+// But we use redux-persist (syncs localStorage with redux state)\n+// import store from 'store2'\nimport decodeJWT from 'jwt-decode'\nexport const JWT_TOKEN = 'JWT_TOKEN'\nexport function getLocalToken (): string | null {\n- return store.get(JWT_TOKEN) || Cookies.get(JWT_TOKEN)\n+ return Cookies.get(JWT_TOKEN)\n}\nexport function resetLocalToken () {\n- store.remove(JWT_TOKEN)\nCookies.remove(JWT_TOKEN)\n}\nexport function setLocalToken (token: string) {\n- store.set(JWT_TOKEN, token)\nCookies.set(JWT_TOKEN, token, {expires: 365})\n}\n",
        "date": "18.10.2017 23:48:25",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "fix(store): fix loading initial state",
        "sim_diff": "diff --git a/src/renderer/store.js b/src/renderer/store.js @@ -8,9 +8,9 @@ const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nlet initialState;\ntry {\n- initialState = JSON.parse(window.localStorage.getItem('appState'));\n+ initialState = JSON.parse(window.localStorage.getItem('appState')) || undefined;\n} catch (error) {\n- initialState = {};\n+ initialState = undefined;\n}\nexport default createStore(\n"
    },
    {
        "msg": "feat: support link component set href attribute",
        "diff": "diff --git a/src/components/link/Link.vue b/src/components/link/Link.vue @@ -6,6 +6,7 @@ interface LinkProps {\ntype?: LinkType\nunderline?: boolean\ndisabled?: boolean\n+ href?: string\n}\nconst props = withDefaults(defineProps<LinkProps>(), {\n@@ -27,7 +28,11 @@ const classes = useClasses(props)\n</script>\n<template>\n- <a class=\"el-link\" :class=\"classes\">\n+ <a\n+ class=\"el-link\"\n+ :class=\"classes\"\n+ :href=\"disabled ? null : href\"\n+ >\n<span v-if=\"$slots.default\" class=\"el-link--inner\">\n<slot />\n</span>\n",
        "date": "19.06.2022 22:37:17",
        "repo": "hug-sun/element3",
        "type": "feat",
        "sim_msg": "feat: disabled link property",
        "sim_diff": "diff --git a/packages/core/src/components/cv-link/cv-link.vue b/packages/core/src/components/cv-link/cv-link.vue v-on=\"$listeners\"\nv-bind=\"linkProps\"\nclass=\"cv-link\"\n- :class=\"[`${carbonPrefix}--link`, { [`${carbonPrefix}--link--inline`]: inline }]\"\n+ :class=\"[\n+ `${carbonPrefix}--link`,\n+ {\n+ [`${carbonPrefix}--link--disabled`]: disabled,\n+ [`${carbonPrefix}--link--inline`]: inline,\n+ },\n+ ]\"\n>\n<slot></slot>\n</component>\n@@ -17,6 +23,7 @@ export default {\nname: 'CvLink',\nmixins: [linkMixin, carbonPrefixMixin],\nprops: {\n+ disabled: Boolean,\ninline: Boolean,\n},\n};\n"
    },
    {
        "msg": "feat(webpack_config/client/webpack.base.js): add more style extension to resolve",
        "diff": "diff --git a/webpack_config/client/webpack.base.js b/webpack_config/client/webpack.base.js @@ -37,7 +37,7 @@ const baseBuild = {\nresolve: {\nalias: isomorphicWebpackConfig.resolve.alias,\nmodules: isomorphicWebpackConfig.resolve.modules,\n- extensions: isomorphicWebpackConfig.resolve.extensions.concat(['.css', '.scss'])\n+ extensions: isomorphicWebpackConfig.resolve.extensions.concat(['.css', '.scss', '.sass'])\n},\nmodule: {\nrules: isomorphicWebpackConfig.module.rules.concat([\n",
        "date": "10.08.2017 06:17:36",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "chore: CopyWebpackPlugin error on windows due to path separators",
        "sim_diff": "diff --git a/webpack.config.js b/webpack.config.js @@ -116,7 +116,7 @@ module.exports = function (env) {\nglobOptions: { ignore: '**/*.js' },\n},\n{\n- from: path.join(__dirname, `${CODE_SOURCE_DIR}/extension/legacy/**/*.css`),\n+ from: path.join(__dirname, `${CODE_SOURCE_DIR}/extension/legacy/**/*.css`).replace(/\\\\/g, '/'),\nto: path.join(__dirname, `${BUILD_PATH}/web-accessibles`),\ncontext: 'src/extension',\n},\n@@ -124,7 +124,7 @@ module.exports = function (env) {\nfrom: path.join(\n__dirname,\n`${CODE_SOURCE_DIR}/extension/legacy/features/l10n/locales/*.js`\n- ),\n+ ).replace(/\\\\/g, '/'),\nto: path.join(__dirname, `${BUILD_PATH}/web-accessibles`),\ncontext: 'src/extension',\n},\n"
    },
    {
        "msg": "feat: added new empty favorites test",
        "diff": "diff --git a/tests/unit/views/Favorites.spec.js b/tests/unit/views/Favorites.spec.js @@ -7,7 +7,7 @@ import Favorites from '@/views/Favorites.vue';\nconst localVue = createLocalVue();\nlocalVue.use(BootstrapVue);\n-describe('Favorites', () => {\n+describe('Favorites (Populated)', () => {\nlet wrapper;\nbeforeEach(() => {\n@@ -34,3 +34,23 @@ describe('Favorites', () => {\nexpect(favs.length === 1).toBe(true);\n});\n});\n+\n+describe('Favorites (Empty)', () => {\n+ let wrapper;\n+\n+ beforeEach(() => {\n+ wrapper = mount(Favorites, {\n+ localVue,\n+ router,\n+ });\n+ });\n+\n+ test('show correct empty state', () => {\n+ localStorage.setItem('favorites', JSON.stringify([]));\n+ wrapper = mount(Favorites, {\n+ localVue,\n+ router,\n+ });\n+ expect(wrapper.find('.alert-info').html()).toContain(\"You don't have any favorite drinks\");\n+ });\n+});\n",
        "date": "29.10.2019 20:35:06",
        "repo": "alfg/opendrinks",
        "type": "feat",
        "sim_msg": "test: Add DatasetCard selectMode tests",
        "sim_diff": "diff --git a/lib/assets/test/spec/new-dashboard/unit/specs/components/Dataset/DatasetCard.spec.js b/lib/assets/test/spec/new-dashboard/unit/specs/components/Dataset/DatasetCard.spec.js @@ -466,4 +466,35 @@ describe('DatasetCard.vue', () => {\nexpect(datasetCard.vm.activeHover).toBe(true);\n});\n});\n+\n+ describe('properties', () => {\n+ let dataset, mocks;\n+\n+ beforeEach(() => {\n+ dataset = {...datasets.visualizations[0]};\n+ mocks = { $cartoModels, $t, $tc };\n+ });\n+\n+ it('should select the map when the user clicks on the card and selectMode property is true', () => {\n+ const datasetCardWrapper = shallowMount(DatasetCard, {\n+ propsData: { dataset, selectMode: true },\n+ mocks\n+ });\n+\n+ datasetCardWrapper.trigger('click');\n+\n+ expect(datasetCardWrapper.emitted().toggleSelection).toBeDefined();\n+ });\n+\n+ it('should not the map when the user clicks on the card and selectMode property is true', () => {\n+ const datasetCardWrapper = shallowMount(DatasetCard, {\n+ propsData: { dataset, selectMode: false },\n+ mocks\n+ });\n+\n+ datasetCardWrapper.trigger('click');\n+\n+ expect(datasetCardWrapper.emitted().toggleSelection).toBeUndefined();\n+ });\n+ });\n});\n"
    },
    {
        "msg": "feat: normalize network input to allow mixed-case input",
        "diff": "diff --git a/frontend/mina-signer/src/MinaSigner.ts b/frontend/mina-signer/src/MinaSigner.ts @@ -19,10 +19,11 @@ class Client {\nprivate network: network;\nconstructor(options: { network: network }) {\n- if (options.network !== \"mainnet\" && options.network !== \"testnet\") {\n+ const specifiedNetwork = options.network.toLowerCase();\n+ if (specifiedNetwork !== \"mainnet\" && specifiedNetwork !== \"testnet\") {\nthrow \"Invalid Specified Network\";\n}\n- this.network = options.network;\n+ this.network = specifiedNetwork;\n}\n/**\n",
        "date": "24.11.2021 12:29:17",
        "repo": "minaprotocol/mina",
        "type": "feat",
        "sim_msg": "feat: handle custom network in setNetwork",
        "sim_diff": "diff --git a/helpers.js b/helpers.js @@ -29,7 +29,12 @@ module.exports = {\nnetworkName = 'goerli';\nnetworkId = 5;\nisTestnet = true;\n+ } else if (typeof network === 'object') {\n+ networkName = network.networkName;\n+ networkId = network.chainId;\n+ isTestnet = network.isTestnet;\n}\n+ // todo: handle a case when setNetwork() is triggered by changeNetwork() with a string of already added custom networks\n},\ngetNetwork: () => {\nreturn { networkName, networkId, isTestnet };\n"
    },
    {
        "msg": "feat: add font weight medium and semibold;\nrefactor: update colors;\nfix: change null to unset to properly generate CSS Variables;",
        "diff": "diff --git a/scss/_variables.scss b/scss/_variables.scss @@ -67,7 +67,7 @@ $primary-50: #988fed !default;\n$primary-25: #ccc7f6 !default;\n$secondary-dark: #212233 !default;\n-$secondary: #3c4b64 !default;\n+$secondary: #9da5b1 !default;\n$secondary-50: #9da5b1 !default;\n$secondary-25: #ced2d8 !default;\n@@ -115,9 +115,9 @@ $theme-colors: (\n// scss-docs-end theme-colors-map\n// Text colors\n-$high-emphasis-dark: rgba($black, .87) !default;\n-$medium-emphasis-dark: rgba($black, .6) !default;\n-$disabled-dark: rgba($black, .38) !default;\n+$high-emphasis-dark: rgba(shift-color($gray-base, +26), .87) !default;\n+$medium-emphasis-dark: rgba(shift-color($gray-base, +26), .6) !default;\n+$disabled-dark: rgba(shift-color($gray-base, +26), .38) !default;\n$high-emphasis-light: rgba($white, .87) !default;\n$medium-emphasis-light: rgba($white, .6) !default;\n@@ -399,7 +399,7 @@ $border-widths: (\n5: 5px\n) !default;\n-$border-color: $gray-300 !default;\n+$border-color: $gray-200 !default;\n$border-radius: .25rem !default;\n$border-radius-sm: .2rem !default;\n@@ -454,6 +454,8 @@ $font-size-lg: $font-size-base * 1.25 !default;\n$font-weight-lighter: lighter !default;\n$font-weight-light: 300 !default;\n$font-weight-normal: 400 !default;\n+$font-weight-medium: 500 !default;\n+$font-weight-semibold: 600 !default;\n$font-weight-bold: 700 !default;\n$font-weight-bolder: bolder !default;\n@@ -486,7 +488,7 @@ $headings-font-family: null !default;\n$headings-font-style: null !default;\n$headings-font-weight: 500 !default;\n$headings-line-height: 1.2 !default;\n-$headings-color: null !default;\n+$headings-color: unset !default;\n// scss-docs-start display-headings\n$display-font-sizes: (\n@@ -750,7 +752,7 @@ $form-check-input-width: 1em !default;\n$form-check-min-height: $font-size-base * $line-height-base !default;\n$form-check-padding-start: $form-check-input-width + .5em !default;\n$form-check-margin-bottom: .125rem !default;\n-$form-check-label-color: null !default;\n+$form-check-label-color: unset !default;\n$form-check-label-cursor: null !default;\n$form-check-transition: background-color .15s ease-in-out, background-position .15s ease-in-out, border-color .15s ease-in-out, box-shadow .15s ease-in-out !default;\n@@ -1074,9 +1076,9 @@ $card-inner-border-radius: subtract($card-border-radius, $card-border-w\n$card-cap-padding-y: $card-spacer-y / 2 !default;\n$card-cap-padding-x: $card-spacer-x !default;\n$card-cap-bg: rgba($black, .03) !default;\n-$card-cap-color: null !default;\n+$card-cap-color: unset !default;\n$card-height: null !default;\n-$card-color: null !default;\n+$card-color: unset !default;\n$card-bg: $white !default;\n$card-img-overlay-padding: $spacer !default;\n@@ -1179,7 +1181,7 @@ $toast-max-width: 350px !default;\n$toast-padding-x: .75rem !default;\n$toast-padding-y: .5rem !default;\n$toast-font-size: .875rem !default;\n-$toast-color: null !default;\n+$toast-color: unset !default;\n$toast-background-color: rgba($white, .85) !default;\n$toast-border-width: 1px !default;\n$toast-border-color: rgba(0, 0, 0, .1) !default;\n@@ -1217,7 +1219,7 @@ $modal-dialog-margin-y-sm-up: 1.75rem !default;\n$modal-title-line-height: $line-height-base !default;\n-$modal-content-color: null !default;\n+$modal-content-color: unset !default;\n$modal-content-bg: $white !default;\n$modal-content-border-color: rgba($black, .2) !default;\n$modal-content-border-width: $border-width !default;\n@@ -1308,7 +1310,7 @@ $progress-bar-transition: width .6s ease !default;\n// List group\n// scss-docs-start list-group-variables\n-$list-group-color: null !default;\n+$list-group-color: unset !default;\n$list-group-bg: $white !default;\n$list-group-border-color: rgba($black, .125) !default;\n$list-group-border-width: $border-width !default;\n@@ -1430,7 +1432,7 @@ $breadcrumb-padding-y: 0 !default;\n$breadcrumb-padding-x: 0 !default;\n$breadcrumb-item-padding-x: .5rem !default;\n$breadcrumb-margin-bottom: 1rem !default;\n-$breadcrumb-bg: null !default;\n+$breadcrumb-bg: unset !default;\n$breadcrumb-divider-color: $gray-600 !default;\n$breadcrumb-active-color: $gray-600 !default;\n$breadcrumb-divider: quote(\"/\") !default;\n@@ -1605,4 +1607,4 @@ $kbd-font-size: $code-font-size !default;\n$kbd-color: $high-emphasis-light !default;\n$kbd-bg: $gray-900 !default;\n-$pre-color: null !default;\n+$pre-color: unset !default;\n",
        "date": "04.01.2021 15:10:43",
        "repo": "coreui/coreui",
        "type": "feat",
        "sim_msg": "feat(theming): updated purple for light theme",
        "sim_diff": "diff --git a/scss/overrides_default/_variables.scss b/scss/overrides_default/_variables.scss @@ -6,7 +6,7 @@ $enable-gradients: true;\n$blue: #08c !default;\n$indigo: #6c94bc !default;\n-$purple: #6f42c1 !default;\n+$purple: #9d67ff !default;\n$pink: #e83e8c !default;\n$red: #ee5f5b !default;\n$orange: #f89406 !default;\n"
    },
    {
        "msg": "feat(popover): events emission on  by Popover component",
        "diff": "diff --git a/packages/kiwi-core/src/Popover/index.js b/packages/kiwi-core/src/Popover/index.js @@ -52,12 +52,15 @@ const Popover = {\nmethods: {\nclosePopover () {\nthis._isOpen = false\n+ this.$emit('close')\n},\nopenPopover () {\nthis._isOpen = true\n+ this.$emit('open')\n},\ntoggleOpen () {\nthis._isOpen = !this._isOpen\n+ this.$emit('toggle', this._isOpen)\n},\n/**\n* Sets the trigger node value to reactive context\n",
        "date": "09.02.2020 16:11:49",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "feat",
        "sim_msg": "feat(atom/popover): fix toggle default",
        "sim_diff": "diff --git a/components/atom/popover/src/index.js b/components/atom/popover/src/index.js @@ -79,7 +79,7 @@ function AtomPopover({\nplacement={placement}\nplacementPrefix={PREFIX_PLACEMENT}\ntarget={id || targetRef.current}\n- toggle={!disableNativeToggle && handleToggle}\n+ toggle={!disableNativeToggle ? handleToggle : undefined}\ntrigger={DEFAULT_TRIGGER}\n>\n{closeIcon && (\n"
    },
    {
        "msg": "feat(Input): add `autoCapitalize` to html input props\nfeat(Input): add `autoCapitalize` to html input props",
        "diff": "diff --git a/src/elements/Input/Input.js b/src/elements/Input/Input.js @@ -22,7 +22,7 @@ export const htmlInputPropNames = [\n'selected', 'defaultValue', 'defaultChecked',\n// LIMITED HTML PROPS\n- 'autoComplete', 'autoFocus', 'checked', 'form', 'max', 'maxLength', 'min',\n+ 'autoCapitalize', 'autoComplete', 'autoFocus', 'checked', 'form', 'max', 'maxLength', 'min',\n'name', 'pattern', 'placeholder', 'readOnly', 'required', 'step', 'type', 'value',\n// Heads Up!\n",
        "date": "13.02.2017 19:27:33",
        "repo": "semantic-org/semantic-ui-react",
        "type": "feat",
        "sim_msg": "feat(form): add Placeholder component",
        "sim_diff": "diff --git a/src/components/common/form.js b/src/components/common/form.js @@ -198,4 +198,20 @@ const List = ({ type, name, options, label, isRequired, detailText }) => (\n</>\n)\n-export { Form, FormLabel, Textarea, Select, Input, List, InputDefinedLength }\n+const Placeholder = ({ label, isRequired, children }) => (\n+ <>\n+ <FormLabel isRequired={isRequired}>{label}</FormLabel>\n+ {children}\n+ </>\n+)\n+\n+export {\n+ Form,\n+ FormLabel,\n+ Textarea,\n+ Select,\n+ Input,\n+ List,\n+ InputDefinedLength,\n+ Placeholder,\n+}\n"
    },
    {
        "msg": "feat(styles): add more comments in /utils.jsx\nfeat(styles): add more comments in /utils.jsx",
        "diff": "diff --git a/src/common/styles/utils.jsx b/src/common/styles/utils.jsx @@ -6,6 +6,9 @@ const pxToEm = px => {\n}\nconst iWantToUseEm = true\n+// NOTE: This grid don't match SUI's grid.\n+// NOTE: RSUI has <Responsive> element!\n+// You might don't need media template function for styled-components\nconst sizes = _.mapValues(\n{\nxs: 0, // Extra small screen / phone\n@@ -15,13 +18,13 @@ const sizes = _.mapValues(\nxl: 1200 // Extra large screen / wide desktop\n},\n(value, key) => {\n- // NOTE: Please, read more about `em`, before switching to it\n+ // NOTE: Please, read more about `em` before switching\n// https://stackoverflow.com/questions/22228568/switching-to-em-based-media-queries\nreturn iWantToUseEm ? pxToEm(value) : value + 'px'\n}\n)\n-// FIXME: @Metnew: dirty-hardcode version of media template!\n+// FIXME: @Metnew: this block may be rewritten more elegant (like the code below, from off docs)\nexport const media = {\nxs: (...args) => css`\n@media only screen and (max-width: ${sizes.sm}) {\n@@ -66,6 +69,7 @@ export const media = {\n}\n// NOTE: from official docs, but it looks like a black-voodoo-magic\n+// ####\n// // iterate through the sizes and create a media template\n// export const media = Object.keys(sizes).reduce((accumulator, label, i) => {\n// console.log(accumulator, label)\n",
        "date": "30.09.2017 14:25:05",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "feat: add an API description to the readme",
        "sim_diff": "diff --git a/README.md b/README.md @@ -122,6 +122,52 @@ const Component = styled.div`\n</ThemeProvider>;\n```\n+## API\n+\n+ <strong>All incoming values are converted to em.</strong>\n+\n+\n+ For example, let's take default values of breakpoints.\n+\n+### up\n+\n+ ```js\n+ // (tablets, 768px and up)\n+ up('tablet') => '@media (min-width: 768px) { ... }'\n+ ```\n+\n+### down\n+\n+ We occasionally use media queries that go in the other direction (the given screen size or smaller):\n+\n+```js\n+ // (tablets, from 768px to 991.98px)\n+ down('tablet') => '@media (max-width: 991.98px) { ... }'\n+ ```\n+\n+\n+<br/>\n+\n+ >Note that since browsers do not currently support [range context queries](https://www.w3.org/TR/mediaqueries-4/#range-context), we work around the limitations of [min- and max- prefixes](https://www.w3.org/TR/mediaqueries-4/#mq-min-max) and viewports with fractional widths (which can occur under certain conditions on high-dpi devices, for instance) by using values with higher precision for these comparisons.\n+\n+<br/>\n+\n+\n+Similarly, media queries may span multiple breakpoint widths:\n+\n+### between\n+\n+ ```js\n+ // (from tablet to desktop )\n+ between('tablet', 'desktop') => '@media (min-width: 768px) and (max-width: 1199.98px) { ... }'\n+ ```\n+\n+### only\n+\n+ ```js\n+ only('tablet') => '@media (min-width: 768px) and (max-width: 991.98px) { ... }'\n+ ```\n+\n## License\nMIT License\n"
    },
    {
        "msg": "feat: Clean output prior to production build",
        "diff": "diff --git a/src/build.js b/src/build.js +import { promises as fs } from 'fs';\nimport * as kl from 'kolorist';\nimport { bundleProd } from './bundler.js';\nimport { bundleStats } from './lib/output-utils.js';\n@@ -11,6 +12,8 @@ import { setCwd } from './plugins/npm-plugin/registry.js';\nexport default async function build(options = {}) {\noptions.out = options.out || 'dist';\n+ await fs.rmdir(options.out, { recursive: true });\n+\n// @todo remove this hack once registry.js is instantiable\nsetCwd(options.cwd);\n",
        "date": "03.12.2020 19:06:51",
        "repo": "preactjs/wmr",
        "type": "feat",
        "sim_msg": "build(ses): properly handle bundling errors",
        "sim_diff": "diff --git a/packages/ses/scripts/bundle.js b/packages/ses/scripts/bundle.js +/* global process */\nimport '../index.js';\nimport fs from 'fs';\nimport { makeBundle } from '@endo/compartment-mapper/bundle.js';\n@@ -12,7 +13,7 @@ const write = async (target, content) => {\nawait fs.promises.writeFile(new URL(location).pathname, content);\n};\n-(async () => {\n+const main = async () => {\nconst bundle = await makeBundle(\nread,\nresolve('../index.js', import.meta.url),\n@@ -26,7 +27,6 @@ const write = async (target, content) => {\nconsole.log(`Minified bundle size: ${terse.length} bytes`);\nawait fs.promises.mkdir('dist', { recursive: true });\n-\nawait write('dist/ses.cjs', bundle);\nawait write('dist/ses.mjs', bundle);\nawait write('dist/ses.umd.js', bundle);\n@@ -36,4 +36,9 @@ const write = async (target, content) => {\nawait write('dist/lockdown.mjs', bundle);\nawait write('dist/lockdown.umd.js', bundle);\nawait write('dist/lockdown.umd.min.js', terse);\n-})();\n+};\n+\n+main().catch(err => {\n+ console.error('Error running main:', err);\n+ process.exitCode = 1;\n+});\n"
    },
    {
        "msg": "feat: expose $el while evaluating data expression",
        "diff": "diff --git a/src/component.js b/src/component.js @@ -17,7 +17,7 @@ export default class Component {\nconst dataExpression = dataAttr === '' ? '{}' : dataAttr\nconst initExpression = this.$el.getAttribute('x-init')\n- this.unobservedData = seedDataForCloning ? seedDataForCloning : saferEval(dataExpression, {})\n+ this.unobservedData = seedDataForCloning ? seedDataForCloning : saferEval(dataExpression, { $el: this.$el })\n/* IE11-ONLY:START */\n// For IE11, add our magic properties to the original data for access.\n",
        "date": "12.05.2020 09:11:16",
        "repo": "alpinejs/alpine",
        "type": "feat",
        "sim_msg": "refactor(codegen): simplify conditions",
        "sim_diff": "diff --git a/src/compiler/codegen/index.js b/src/compiler/codegen/index.js @@ -27,7 +27,7 @@ export class CodegenState {\nthis.dataGenFns = pluckModuleFunction(options.modules, 'genData')\nthis.directives = extend(extend({}, baseDirectives), options.directives)\nconst isReservedTag = options.isReservedTag || no\n- this.maybeComponent = (el: ASTElement) => !(isReservedTag(el.tag) && !el.component)\n+ this.maybeComponent = (el: ASTElement) => el.component || !isReservedTag(el.tag)\nthis.onceId = 0\nthis.staticRenderFns = []\nthis.pre = false\n"
    },
    {
        "msg": "feat(Modal): pass event object to toggle prop",
        "diff": "diff --git a/src/Modal.js b/src/Modal.js @@ -163,13 +163,13 @@ class Modal extends React.Component {\nconst container = this._dialog;\nif (e.target && !container.contains(e.target) && this.props.toggle) {\n- this.props.toggle();\n+ this.props.toggle(e);\n}\n}\nhandleEscape(e) {\nif (this.props.isOpen && this.props.keyboard && e.keyCode === 27 && this.props.toggle) {\n- this.props.toggle();\n+ this.props.toggle(e);\n}\n}\n",
        "date": "16.03.2018 15:03:47",
        "repo": "reactstrap/reactstrap",
        "type": "feat",
        "sim_msg": "feat: handle modal esc key",
        "sim_diff": "diff --git a/src/components/ui/modal.js b/src/components/ui/modal.js +import {Component} from 'react'\nimport {connect} from 'zefir/utils'\n-const Modal = ({\n+class Modal extends Component {\n+ componentWillMount (props) {\n+ window.addEventListener('keydown', this.props.handleEscKey)\n+ }\n+\n+ componentWillUnmount (props) {\n+ window.removeEventListener('keydown', this.props.handleEscKey)\n+ }\n+\n+ render () {\n+ const {\ntitle, subtitle, children, name, ui, toggle, full, size, noPadding, visible\n-}) => (\n+ } = this.props\n+\n+ return ui.modal === name || visible ? (\n<div className={`\nModal ${ui.modal === name || visible ? 'is-visible' : ''}\n${full ? 'Modal--full' : ''}\n@@ -143,11 +156,14 @@ const Modal = ({\npadding-bottom: 90px;\n}\n+ .Modal--full .Modal__inner {\n+ height: 100%;\n+ }\n+\n.Modal__inner {\nborder-radius: 8px;\noverflow: hidden;\nflex: 1;\n- height: 100%;\nmax-width: 770px;\nmargin-left: 30px;\nmargin-right: 30px;\n@@ -183,10 +199,13 @@ const Modal = ({\n}\n`}</style>\n</div>\n-)\n+ ) : null\n+ }\n+}\nModal.init = ({\nname,\n+ router: {history: {push}},\nstores: {ui},\nservices: {ui: {toggleModal}},\ntoggle,\n@@ -196,6 +215,11 @@ Modal.init = ({\nname,\nui,\ntoggle: toggle || (() => toggleModal(name)),\n+ handleEscKey: (e) => {\n+ if (e.keyCode === 27 && name === 'socket-details') {\n+ push('/sockets')\n+ }\n+ },\n...rest\n}\n}\n"
    },
    {
        "msg": "feat: keep focusing inside the popup by `tab` key",
        "diff": "diff --git a/src/utils/popup/popup-manager.js b/src/utils/popup/popup-manager.js @@ -149,19 +149,41 @@ const PopupManager = {\n}\n}\n};\n-!Vue.prototype.$isServer && window.addEventListener('keydown', function(event) {\n- if (event.keyCode === 27) { // ESC\n+\n+const getTopPopup = function() {\n+ if (Vue.prototype.$isServer) return;\nif (PopupManager.modalStack.length > 0) {\n- const topItem = PopupManager.modalStack[PopupManager.modalStack.length - 1];\n- if (!topItem) return;\n- const instance = PopupManager.getInstance(topItem.id);\n- if (instance.closeOnPressEscape) {\n- instance.handleClose\n- ? instance.handleClose()\n- : (instance.handleAction ? instance.handleAction('cancel') : instance.close());\n+ const topPopup = PopupManager.modalStack[PopupManager.modalStack.length - 1];\n+ if (!topPopup) return;\n+ const instance = PopupManager.getInstance(topPopup.id);\n+\n+ return instance;\n}\n+};\n+\n+if (!Vue.prototype.$isServer) {\n+ // handle `esc` key when the popup is shown\n+ window.addEventListener('keydown', function(event) {\n+ if (event.keyCode === 27) {\n+ const topPopup = getTopPopup();\n+\n+ if (topPopup && topPopup.closeOnPressEscape) {\n+ topPopup.handleClose\n+ ? topPopup.handleClose()\n+ : (topPopup.handleAction ? topPopup.handleAction('cancel') : topPopup.close());\n}\n}\n});\n+ // keep focusing inside the popup by `tab` key\n+ document.addEventListener('focusin', function(event) {\n+ const topPopup = getTopPopup();\n+\n+ if (topPopup && !topPopup.$el.contains(event.target)) {\n+ event.stopPropagation();\n+ topPopup.$el.focus();\n+ }\n+ });\n+}\n+\nexport default PopupManager;\n",
        "date": "10.05.2017 17:04:41",
        "repo": "hug-sun/element3",
        "type": "feat",
        "sim_msg": "fix(QSelect): Pressing ESC on a QSelect with menu open in a QDialog will also close QDialog",
        "sim_diff": "diff --git a/ui/src/components/select/QSelect.js b/ui/src/components/select/QSelect.js @@ -416,6 +416,13 @@ export default Vue.extend({\n},\n__onTargetKeyup (e) {\n+ // if ESC and we have an opened menu\n+ // then stop propagation (might be caught by a QDialog\n+ // and so it will also close the QDialog, which is wrong)\n+ if (e.keyCode === 27 && this.menu === true) {\n+ stop(e)\n+ this.__closeMenu()\n+ }\nthis.$emit('keyup', e)\n},\n@@ -426,8 +433,13 @@ export default Vue.extend({\n__onTargetKeydown (e) {\nthis.$emit('keydown', e)\n- // escape, tab\n- if (e.keyCode === 27 || e.keyCode === 9) {\n+ // escape\n+ if (e.keyCode === 27) {\n+ return\n+ }\n+\n+ // tab\n+ if (e.keyCode === 9) {\nthis.__closeMenu()\nreturn\n}\n"
    },
    {
        "msg": "feat(api-utils): make xhr wrapper less complex\nfeat(api-utils): make xhr wrapper less complex",
        "diff": "diff --git a/src/common/api/utils/index.js b/src/common/api/utils/index.js -// @flow\n-export {get, post} from './xhr_wrapper'\n+/**\n+ * @flow\n+ * @file Simple fetch wrapper\n+ */\n+import fetch from 'isomorphic-fetch'\n+\n+// USAGE:\n+export const get = requestWrapper('GET')\n+// get('https://www.google.com', options)\n+export const post = requestWrapper('POST')\n+// post('https://www.google.com', data)\n+\n+// Create request wrapper for certain method\n+function requestWrapper (method: 'GET' | 'POST' | 'DELETE' | 'PUT' | 'PATCH') {\n+ // Creates request to `url` with `data`\n+ return async (url: string, data: any = null) => {\n+ const body = data ? {body: JSON.stringify(data)} : {}\n+\n+ const request = {\n+ method,\n+ headers: {},\n+ mode: process.env.NODE_ENV === 'development' ? 'cors' : 'same-origin',\n+ ...body\n+ }\n+\n+ return fetch(url, request)\n+ .then(checkStatus)\n+ .then(parseJSON)\n+ .catch((err: any) => err)\n+ }\n+}\n+\n+async function parseJSON (res: Response): Object {\n+ let json: Object\n+ const {status} = res\n+ // status response field in return object\n+ try {\n+ json = await res.json()\n+ } catch (e) {\n+ if (res.status === 204) {\n+ return {ok: true, data: {}, status}\n+ }\n+ return {ok: false, status}\n+ }\n+ if (!res.ok) {\n+ return {data: json, ok: false, status}\n+ }\n+ return {data: json, ok: true, status}\n+}\n+\n+function checkStatus (response: Response): Response {\n+ const {status} = response\n+ if (status >= 200 && status < 300) {\n+ // Everything is ok\n+ } else if (status >= 300 && status < 400) {\n+ // 300 - Multiple Choices\n+ // 301 - Moved Permanently,\n+ // 302 - Found, Moved Temporarily\n+ // 304 - not modified\n+ // 307 - Temporary Redirect\n+ } else if (status === 400) {\n+ // Probably is a validation error\n+ } else if (status === 403 || status === 401) {\n+ // 401 - Forbidden\n+ // 403 - Unauthorized\n+ } else if (status === 404) {\n+ // Not Found\n+ } else if (status >= 500) {\n+ // Server error\n+ }\n+ return response\n+}\n",
        "date": "18.02.2018 15:58:11",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "refactor: show descriptive error for failed requests",
        "sim_diff": "diff --git a/src/common/util.js b/src/common/util.js @@ -317,7 +317,7 @@ export async function request(url, options = {}) {\naccept && { accept })\n: headers,\n});\n- const result = { url, status: -1 };\n+ let result = { url, status: -1 };\ntry {\nconst urlNoAuth = auth ? scheme + hostname + urlTail : url;\nconst resp = await fetch(urlNoAuth, init);\n@@ -330,7 +330,10 @@ export async function request(url, options = {}) {\nresult.status = resp.status || 200;\nresult.headers = resp.headers;\nresult.data = await resp[loadMethod]();\n- } catch { /* NOP */ }\n+ } catch (err) {\n+ result = Object.assign(err, result);\n+ result.message += '\\n' + url;\n+ }\nif (result.status < 0 || result.status > 300) throw result;\nreturn result;\n}\n"
    },
    {
        "msg": "feat(locals): add basic text for dashboard\nfeat(locals): add basic text for dashboard",
        "diff": "diff --git a/locals/en.json b/locals/en.json {\n- \"Header.Popup.HeaderButton\": \"Hello {name}\"\n+ \"Dashboard.Text\": \"Hello HELLOOOO\"\n}\n",
        "date": "29.09.2017 20:51:38",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "chore: update docs and root version",
        "sim_diff": "diff --git a/package.json b/package.json {\n\"name\": \"@storefront-ui/root\",\n\"private\": true,\n- \"version\": \"0.11.0-rc.2\",\n+ \"version\": \"0.11.0\",\n\"description\": \"\",\n\"main\": \"index.js\",\n\"author\": \"Storefront UI\",\n"
    },
    {
        "msg": "feat: if RollbarProxy is defined, use the proxy to send all Rollbar events",
        "diff": "diff --git a/src/browser/transport.js b/src/browser/transport.js @@ -71,7 +71,23 @@ function _makeZoneRequest(accessToken, url, method, data, callback, requestFacto\n}\n}\n+/* global RollbarProxy */\n+function _proxyRequest(json, callback) {\n+ var rollbarProxy = new RollbarProxy();\n+ rollbarProxy.sendJsonPayload(\n+ json,\n+ function(_msg) { /* do nothing */ }, // eslint-disable-line no-unused-vars\n+ function(err) {\n+ callback(new Error(err));\n+ }\n+ );\n+}\n+\nfunction _makeRequest(accessToken, url, method, data, callback, requestFactory) {\n+ if (typeof RollbarProxy !== 'undefined') {\n+ return _proxyRequest(data, callback);\n+ }\n+\nvar request;\nif (requestFactory) {\nrequest = requestFactory();\n",
        "date": "11.04.2019 15:14:42",
        "repo": "rollbar/rollbar.js",
        "type": "feat",
        "sim_msg": "fix: Https request via http",
        "sim_diff": "diff --git a/lib/init.js b/lib/init.js @@ -2,6 +2,8 @@ var PipeStream = require('pipestream');\nvar util = require('./util');\nvar config = require('./config');\n+var HTTPS_RE = /^https:/;\n+\nfunction addErrorEvents(req, res) {\nvar clientReq;\nreq.on('dest', function(_req) {\n@@ -122,7 +124,9 @@ module.exports = function(req, res, next) {\nreq.headers['connection'] = req.headers['proxy-connection'];\n}\ndelete req.headers['proxy-connection'];\n-\n+ if (!req.isHttps && HTTPS_RE.test(req.url)) {\n+ req.isHttps = true;\n+ }\nvar responsed;\nres.response = function(_res) {\nif (responsed) {\n"
    },
    {
        "msg": "feat: finally updating sponsor section to separate sponsors",
        "diff": "diff --git a/components/ReusableSections/SponsorsSection/SponsorsSection.js b/components/ReusableSections/SponsorsSection/SponsorsSection.js import React from 'react';\n-import Content from 'components/Content/Content';\n+import Container from 'components/Container/Container';\n+import Heading from 'components/Heading/Heading';\nimport PartnerLogoLink from 'components/PartnerLogoLink/PartnerLogoLink';\n-import partners from 'common/constants/partners';\n+import partners, { PARTNER_TYPES } from 'common/constants/partners';\n+import styles from './SponsorsSection.css';\n+\n+const isPaidSponsor = partner => partner.type === PARTNER_TYPES.PAID;\nconst SponsorsSection = () => (\n- <Content\n- title=\"Sponsors\"\n- theme=\"gray\"\n- hasTitleUnderline\n- columns={partners.map(partner => (\n+ <Container theme=\"gray\">\n+ <Heading text=\"Sponsors\" hasTitleUnderline headingLevel={3} />\n+\n+ <Heading text=\"Paid Sponsors\" headingLevel={4} />\n+ <p>\n+ These sponsors have donated cash to help keep the mission going here at Operation Code. They\n+ may or may not have also donated to our cause via others means.\n+ </p>\n+ <div className={styles.columnsContainer}>\n+ {partners\n+ .filter(x => isPaidSponsor(x))\n+ .map(partner => (\n+ <PartnerLogoLink key={partner.name} {...partner} size=\"large\" />\n+ ))}\n+ </div>\n+\n+ <Heading text=\"In-Kind Sponsors\" headingLevel={4} />\n+ <p>\n+ The following organizations have helped Operation Code through services, products,\n+ advertisements, scholarships, or sponsorships. We thank them for their contributions.\n+ </p>\n+ <div className={styles.columnsContainer}>\n+ {partners\n+ .filter(x => !isPaidSponsor(x))\n+ .map(partner => (\n<PartnerLogoLink key={partner.name} {...partner} />\n))}\n- />\n+ </div>\n+ </Container>\n);\nexport default SponsorsSection;\n",
        "date": "16.10.2019 13:23:14",
        "repo": "operationcode/front-end",
        "type": "feat",
        "sim_msg": "refactor: removed helmet from the Layout component",
        "sim_diff": "diff --git a/src/components/Layout/Layout.js b/src/components/Layout/Layout.js import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n-import Helmet from \"react-helmet\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Header from \"components/Header\";\nimport Footer from \"components/Footer\";\n@@ -28,23 +27,18 @@ class Layout extends Component {\nclasses: PropTypes.object,\nshop: PropTypes.shape({\nname: PropTypes.string\n- }).isRequired,\n- title: PropTypes.string\n+ }).isRequired\n};\nstatic defaultProps = {\n- classes: {},\n- title: \"\"\n+ classes: {}\n};\nrender() {\n- const { classes, children, shop, title } = this.props;\n+ const { classes, children, shop } = this.props;\nreturn (\n<React.Fragment>\n- <Helmet>\n- <title>{title}</title>\n- </Helmet>\n<div className={classes.root}>\n<Header shop={shop} />\n<main className={classes.main}>\n"
    },
    {
        "msg": "feat(button): import components path modify",
        "diff": "diff --git a/src/index.ts b/src/index.ts @@ -4,7 +4,7 @@ import { ElAvatar } from './components/avatar'\nimport { ElLink } from './components/link/'\nimport { ElIcon } from './components/icon/'\nimport { ElBadge } from './components/badge/'\n-import { ElButton } from './components/Button/'\n+import { ElButton } from './components/button/'\nimport '/theme/src/icon.scss'\nconst components = [\n",
        "date": "20.06.2022 18:20:24",
        "repo": "hug-sun/element3",
        "type": "feat",
        "sim_msg": "fix(containter): account sidebar link button\nref:",
        "sim_diff": "diff --git a/packages/manager/apps/container/src/container/legacy/account-sidebar/UsefulLinks/Link/Button.tsx b/packages/manager/apps/container/src/container/legacy/account-sidebar/UsefulLinks/Link/Button.tsx @@ -15,7 +15,12 @@ const Button = ({ link = {}, translationBase = '' }: Props): JSX.Element => {\nconst { t } = useTranslation(TRANSLATE_NAMESPACE);\nreturn (\n- <button className=\"btn btn-link d-flex\" type=\"button\" role=\"button\">\n+ <button\n+ className=\"btn btn-link d-flex\"\n+ type=\"button\"\n+ role=\"button\"\n+ onClick={link.action}\n+ >\n{link.icon && <span className={link.icon} aria-hidden=\"true\"></span>}\n<span>{t(`${translationBase}_${link.id}`)}</span>\n</button>\n"
    },
    {
        "msg": "feat(create-razzle-app): make verbose show install",
        "diff": "diff --git a/packages/create-razzle-app/lib/utils/install.js b/packages/create-razzle-app/lib/utils/install.js @@ -22,7 +22,7 @@ module.exports = function install(opts) {\nconsole.log(messages.installing(packages));\nprocess.chdir(projectPath);\n- const stdio = 'pipe';\n+ const stdio = opts.verbose ? 'inherit' : 'pipe';\nreturn new Promise(function(resolve, reject) {\nconst stopInstallSpinner = output.wait('Installing modules');\n",
        "date": "06.03.2021 20:10:59",
        "repo": "jaredpalmer/razzle",
        "type": "feat",
        "sim_msg": "style: renamed deferral to async",
        "sim_diff": "diff --git a/src/scripts/npm/nodeDependencies.js b/src/scripts/npm/nodeDependencies.js function install (context) {\n// set properties\nvar q = context.requireCordovaModule('q')\n- var deferral = new q.defer() // eslint-disable-line\n+ var async = new q.defer() // eslint-disable-line\nvar installFlagLocation = path.join(context.opts.projectRoot, 'plugins', context.opts.plugin.id, installFlagName)\nvar dependencies = require(path.join(context.opts.projectRoot, 'plugins', context.opts.plugin.id, 'package.json')).dependencies\n// install node modules\nvar modules = getNodeModulesToInstall(dependencies)\n- if (modules.length === 0) return deferral.promise\n+ if (modules.length === 0) return async.promise\ninstallNodeModules(modules, function (err) {\nif (err) {\nsetPackageInstalled(installFlagLocation)\nremoveEtcDirectory()\n}\n- deferral.resolve()\n+ async.resolve()\n})\n// wait until callbacks from the all the npm install complete\n- return deferral.promise\n+ return async.promise\n}\n// installs the node modules via npm install one at a time\n"
    },
    {
        "msg": "feat: add hebrew support to isAlpha and isAlphanumeric",
        "diff": "diff --git a/README.md b/README.md @@ -77,8 +77,8 @@ Validator | Description\n***contains(str, seed)*** | check if the string contains the seed.\n**equals(str, comparison)** | check if the string matches the comparison.\n**isAfter(str [, date])** | check if the string is a date that's after the specified date (defaults to now).\n-**isAlpha(str [, locale])** | check if the string contains only letters (a-zA-Z).<br/><br/>Locale is one of `['ar', 'ar-AE', 'ar-BH', 'ar-DZ', 'ar-EG', 'ar-IQ', 'ar-JO', 'ar-KW', 'ar-LB', 'ar-LY', 'ar-MA', 'ar-QA', 'ar-QM', 'ar-SA', 'ar-SD', 'ar-SY', 'ar-TN', 'ar-YE', 'bg-BG', 'cs-CZ', 'da-DK', 'de-DE', 'el-GR', 'en-AU', 'en-GB', 'en-HK', 'en-IN', 'en-NZ', 'en-US', 'en-ZA', 'en-ZM', 'es-ES', 'fr-FR', 'hu-HU', 'it-IT', 'ku-IQ', 'nb-NO', 'nl-NL', 'nn-NO', 'pl-PL', 'pt-BR', 'pt-PT', 'ru-RU', 'sl-SI', 'sk-SK', 'sr-RS', 'sr-RS@latin', 'sv-SE', 'tr-TR', 'uk-UA']`) and defaults to `en-US`. Locale list is `validator.isAlphaLocales`.\n-**isAlphanumeric(str [, locale])** | check if the string contains only letters and numbers.<br/><br/>Locale is one of `['ar', 'ar-AE', 'ar-BH', 'ar-DZ', 'ar-EG', 'ar-IQ', 'ar-JO', 'ar-KW', 'ar-LB', 'ar-LY', 'ar-MA', 'ar-QA', 'ar-QM', 'ar-SA', 'ar-SD', 'ar-SY', 'ar-TN', 'ar-YE', 'bg-BG', 'cs-CZ', 'da-DK', 'de-DE', 'el-GR', 'en-AU', 'en-GB', 'en-HK', 'en-IN', 'en-NZ', 'en-US', 'en-ZA', 'en-ZM', 'es-ES', 'fr-FR', 'hu-HU', 'it-IT', 'ku-IQ', 'nb-NO', 'nl-NL', 'nn-NO', 'pl-PL', 'pt-BR', 'pt-PT', 'ru-RU', 'sl-SI', 'sk-SK', 'sr-RS', 'sr-RS@latin', 'sv-SE', 'tr-TR', 'uk-UA']`) and defaults to `en-US`. Locale list is `validator.isAlphanumericLocales`.\n+**isAlpha(str [, locale])** | check if the string contains only letters (a-zA-Z).<br/><br/>Locale is one of `['ar', 'ar-AE', 'ar-BH', 'ar-DZ', 'ar-EG', 'ar-IQ', 'ar-JO', 'ar-KW', 'ar-LB', 'ar-LY', 'ar-MA', 'ar-QA', 'ar-QM', 'ar-SA', 'ar-SD', 'ar-SY', 'ar-TN', 'ar-YE', 'bg-BG', 'cs-CZ', 'da-DK', 'de-DE', 'el-GR', 'en-AU', 'en-GB', 'en-HK', 'en-IN', 'en-NZ', 'en-US', 'en-ZA', 'en-ZM', 'es-ES', 'fr-FR', 'he', 'hu-HU', 'it-IT', 'ku-IQ', 'nb-NO', 'nl-NL', 'nn-NO', 'pl-PL', 'pt-BR', 'pt-PT', 'ru-RU', 'sl-SI', 'sk-SK', 'sr-RS', 'sr-RS@latin', 'sv-SE', 'tr-TR', 'uk-UA']`) and defaults to `en-US`. Locale list is `validator.isAlphaLocales`.\n+**isAlphanumeric(str [, locale])** | check if the string contains only letters and numbers.<br/><br/>Locale is one of `['ar', 'ar-AE', 'ar-BH', 'ar-DZ', 'ar-EG', 'ar-IQ', 'ar-JO', 'ar-KW', 'ar-LB', 'ar-LY', 'ar-MA', 'ar-QA', 'ar-QM', 'ar-SA', 'ar-SD', 'ar-SY', 'ar-TN', 'ar-YE', 'bg-BG', 'cs-CZ', 'da-DK', 'de-DE', 'el-GR', 'en-AU', 'en-GB', 'en-HK', 'en-IN', 'en-NZ', 'en-US', 'en-ZA', 'en-ZM', 'es-ES', 'fr-FR', 'he', 'hu-HU', 'it-IT', 'ku-IQ', 'nb-NO', 'nl-NL', 'nn-NO', 'pl-PL', 'pt-BR', 'pt-PT', 'ru-RU', 'sl-SI', 'sk-SK', 'sr-RS', 'sr-RS@latin', 'sv-SE', 'tr-TR', 'uk-UA']`) and defaults to `en-US`. Locale list is `validator.isAlphanumericLocales`.\n**isAscii(str)** | check if the string contains ASCII chars only.\n**isBase32(str)** | check if a string is base32 encoded.\n**isBase64(str)** | check if a string is base64 encoded.\n",
        "date": "05.10.2019 16:18:57",
        "repo": "validatorjs/validator.js",
        "type": "feat",
        "sim_msg": "chore: update description for strict()",
        "sim_diff": "diff --git a/README.md b/README.md @@ -1847,8 +1847,7 @@ If any of the options is present, yargs validation is skipped.\nAny command-line argument given that is not demanded, or does not have a\ncorresponding description, will be reported as an error.\n-`global` indicates whether `strict()` should be enabled both\n-at the top-level and for each sub-command.\n+Unrecognized commands will also be reported as errors.\n<a name=\"string\"></a>.string(key)\n------------\n"
    },
    {
        "msg": "fix(typings): Make optional props of Search, optional in the typing definition.",
        "diff": "diff --git a/src/modules/Search/Search.d.ts b/src/modules/Search/Search.d.ts @@ -80,7 +80,7 @@ interface SearchProps {\n* @param {SyntheticEvent} event - React's original SyntheticEvent.\n* @param {object} data - All props.\n*/\n- onBlur: (event: React.MouseEvent<HTMLElement>, data: SearchProps) => void;\n+ onBlur?: (event: React.MouseEvent<HTMLElement>, data: SearchProps) => void;\n/**\n* Called on focus.\n@@ -88,7 +88,7 @@ interface SearchProps {\n* @param {SyntheticEvent} event - React's original SyntheticEvent.\n* @param {object} data - All props.\n*/\n- onFocus: (event: React.MouseEvent<HTMLElement>, data: SearchProps) => void;\n+ onFocus?: (event: React.MouseEvent<HTMLElement>, data: SearchProps) => void;\n/**\n* Called on mousedown.\n@@ -96,7 +96,7 @@ interface SearchProps {\n* @param {SyntheticEvent} event - React's original SyntheticEvent.\n* @param {object} data - All props.\n*/\n- onMouseDown: (event: React.MouseEvent<HTMLElement>, data: SearchProps) => void;\n+ onMouseDown?: (event: React.MouseEvent<HTMLElement>, data: SearchProps) => void;\n/**\n* Called when a result is selected.\n@@ -104,7 +104,7 @@ interface SearchProps {\n* @param {SyntheticEvent} event - React's original SyntheticEvent.\n* @param {object} data - All props.\n*/\n- onResultSelect: (event: React.MouseEvent<HTMLDivElement>, data: SearchResultProps) => void;\n+ onResultSelect?: (event: React.MouseEvent<HTMLDivElement>, data: SearchResultProps) => void;\n/**\n* Called on search input change.\n@@ -112,7 +112,7 @@ interface SearchProps {\n* @param {SyntheticEvent} event - React's original SyntheticEvent.\n* @param {string} value - Current value of search input.\n*/\n- onSearchChange: (event: React.MouseEvent<HTMLElement>, value: string) => void;\n+ onSearchChange?: (event: React.MouseEvent<HTMLElement>, value: string) => void;\n// ------------------------------------\n// Style\n@@ -131,7 +131,7 @@ interface SearchProps {\nfluid?: boolean;\n/** A search input can take up the width of its container. */\n- input: any;\n+ input?: any;\n/** A search can show a loading indicator. */\nloading?: boolean;\n",
        "date": "07.03.2017 17:29:51",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "sim_msg": "refactor(search): remove redundant ref",
        "sim_diff": "diff --git a/src/__experimental__/components/search/search.component.js b/src/__experimental__/components/search/search.component.js -import React, { useState, useRef, useMemo } from 'react';\n+import React, { useState, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport invariant from 'invariant';\nimport StyledSearch, { StyledSearchButton, StyledButtonIcon } from './search.style';\n@@ -15,9 +15,8 @@ const Search = ({\ntypeof initialValue === 'string',\n'This component has no initial value'\n);\n- let inputRef = useRef(null);\nconst [searchValue, setSearchValue] = useState(initialValue);\n- const [isFocused, setIsFocused] = useState(inputRef.current === document.activeElement);\n+ const [isFocused, setIsFocused] = useState(false);\nconst [searchIsActive, setSearchIsActive] = useState(initialValue.length >= threshold);\nconst iconType = useMemo(() => {\n@@ -98,7 +97,6 @@ const Search = ({\n{ ...rest }\nplaceholder={ placeholder }\nvalue={ searchValue }\n- inputRef={ (el) => { inputRef = el; } }\ninputIcon={ iconType }\niconOnClick={ handleIconClick }\n/>\n"
    },
    {
        "msg": "fix: stop saying there's another update required!",
        "diff": "diff --git a/bin/nodemon.js b/bin/nodemon.js @@ -11,6 +11,6 @@ var fs = require('fs');\n// checks for available update and returns an instance\nvar pkg = JSON.parse(fs.readFileSync(__dirname + '/../package.json'));\n-require('update-notifier')({\n- pkg: Object.assign(pkg, { version: '0.0.0' }),\n-}).notify();\n+if (pkg.version.indexOf('0.0.0') !== 0) {\n+ require('update-notifier')({ pkg }).notify();\n+}\n",
        "date": "22.12.2017 15:36:36",
        "repo": "remy/nodemon",
        "type": "fix",
        "sim_msg": "feat: add module version to readme table",
        "sim_diff": "diff --git a/script/update-readme.js b/script/update-readme.js @@ -15,6 +15,7 @@ const data = versions.map((version) => {\nPublished: version.published_at.substring(0, 10),\nnpm: version.npm_dist_tags ? version.npm_dist_tags.join(', ') : '',\nPrerelease: version.prerelease ? 'yes' : 'no',\n+ 'Module Version': version.deps ? version.deps.modules : '',\nNode: version.deps ? version.deps.node : '',\nChrome: version.deps ? version.deps.chrome : '',\nDownloads: version.total_downloads,\n"
    },
    {
        "msg": "fix: remove tls secret env var",
        "diff": "diff --git a/.github/workflows/ci.yml b/.github/workflows/ci.yml @@ -111,7 +111,6 @@ jobs:\n${repo_owner}/${repo_name}\nenv:\nAWF_AUTH_TOKEN: ${{ secrets.AWF_AUTH_TOKEN }}\n- TLS_SECRET: ${{ secrets.TLS_SECRET }}\nshell: bash\n- name: Dump GitHub context\n",
        "date": "19.08.2022 01:18:38",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "sim_msg": "chore(toolchain): remove coveralls",
        "sim_diff": "diff --git a/.github/workflows/ci.yml b/.github/workflows/ci.yml @@ -38,8 +38,3 @@ jobs:\n- name: Run tests\nrun: |\nnpm run test:ci\n- - name: Coveralls\n- uses: coverallsapp/github-action@master\n- with:\n- github-token: ${{ secrets.GITHUB_TOKEN }}\n- path-to-lcov: ./lcov.info\n"
    },
    {
        "msg": "fix(typings): fix Modal mountnode -> mountNode",
        "diff": "diff --git a/src/modules/Modal/index.d.ts b/src/modules/Modal/index.d.ts @@ -59,7 +59,7 @@ interface ModalProps {\nopen?: boolean;\n/** The node where the modal should mount.. */\n- mountnode?: any;\n+ mountNode?: any;\n/** A modal can vary in size */\nsize?: SemanticSIZES;\n",
        "date": "12.01.2017 21:10:27",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "sim_msg": "docs: remove css import",
        "sim_diff": "diff --git a/packages/modal/README.md b/packages/modal/README.md @@ -12,11 +12,10 @@ Read more about when and how to use the Modal component [on the internal wiki](h\nyarn add @hig/modal @hig/theme-context @hig/theme-data\n```\n-### Import the component and CSS\n+### Import the component\n```js\nimport Modal from '@hig/modal';\n-import '@hig/modal/build/index.css';\n```\n## Basic usage\n"
    },
    {
        "msg": "fix: ensure numerical OS version check",
        "diff": "diff --git a/lib/monitor/run.js b/lib/monitor/run.js @@ -16,7 +16,7 @@ var restart = null;\nvar psTree = require('pstree.remy');\nvar path = require('path');\nvar signals = require('./signals');\n-const osRelease = require('os').release();\n+const osRelease = parseInt(require('os').release().split(\".\")[0], 10);\nfunction run(options) {\nvar cmd = config.command.raw;\n",
        "date": "09.07.2021 17:19:02",
        "repo": "remy/nodemon",
        "type": "fix",
        "sim_msg": "feat(core): prevent start/stop tx resource on cfg",
        "sim_diff": "diff --git a/src/extras/helpers.js b/src/extras/helpers.js //Requires\nconst fs = require('fs');\nconst path = require('path');\n+const xss = require('./xss')();\n+//const log = (x) => process.stdout.write(JSON.stringify(x, null, 2) + '\\n');\n//================================================================\n@@ -135,19 +137,18 @@ function resolveCFGFilePath(cfgPath, serverDataPath) {\n* - no endpoints found\n* - endpoints that are not 0.0.0.0:xxx\n* - port mismatch\n- * - \"stop monitor\"\n+ * - \"stop/start/ensure/restart txAdmin/monitor\"\n* - if endpoint on 40120~40130\n* - zap-hosting iface and port enforcement\n* @param {string} rawCfgFile\n*/\nfunction getFXServerPort(rawCfgFile) {\n- if (rawCfgFile.includes('stop monitor')) throw new Error('Remove \"stop monitor\" from your config');\n-\n- const maxClientsRegex = /^\\s*sv_maxclients\\s+(\\d+).*$/gim;\nconst endpointsRegex = /^\\s*endpoint_add_(\\w+)\\s+[\"']?([0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}):([0-9]{1,5})[\"']?.*$/gim;\n- // const endpointsRegex = /endpoint_add_(\\w+)\\s+[\"']?([0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3})\\:([0-9]{1,5})[\"']?.*/gi;\n- let endpoints = [];\n- let maxClients = [];\n+ const maxClientsRegex = /^\\s*sv_maxclients\\s+(\\d+).*$/gim;\n+ const txResCommandsRegex = /^\\s*(start|stop|ensure|restart)\\s+(monitor|txadmin).*$/gim;\n+ const endpoints = [];\n+ const maxClients = [];\n+ const txResCommandsLines = [];\ntry {\nlet match;\nwhile ((match = endpointsRegex.exec(rawCfgFile))) {\n@@ -161,6 +162,9 @@ function getFXServerPort(rawCfgFile) {\nwhile ((match = maxClientsRegex.exec(rawCfgFile))) {\nmaxClients.push(parseInt(match[1]));\n}\n+ while ((match = txResCommandsRegex.exec(rawCfgFile))) {\n+ txResCommandsLines.push(xss(match[0].trim()));\n+ }\n} catch (error) {\nthrow new Error('Regex Match Error');\n}\n@@ -175,6 +179,15 @@ function getFXServerPort(rawCfgFile) {\n}\n}\n+ //Checking for stop/start/ensure/restart txAdmin/monitor\n+ if (txResCommandsLines.length) {\n+ throw new Error([\n+ `Remove the following line${txResCommandsLines.length > 1 ? 's' : ''} from your config file:<code>`,\n+ ...txResCommandsLines,\n+ '</code>',\n+ ].join('\\n<br>'));\n+ }\n+\n//Checking if endpoints present at all\nconst oneTCPEndpoint = endpoints.find((m) => (m.type === 'tcp'));\nif (!oneTCPEndpoint) throw new Error('You MUST have at least one <code>endpoint_add_tcp</code> in your config');\n"
    },
    {
        "msg": "fix(examples): fix with-typescript example",
        "diff": "diff --git a/examples/with-typescript/src/index.ts b/examples/with-typescript/src/index.ts @@ -18,10 +18,6 @@ const port = process.env.PORT ? parseInt(process.env.PORT, 10) : 3000;\nexport default express()\n.use((req, res) => app.handle(req, res))\n- .listen(port, (err: Error) => {\n- if (err) {\n- console.error(err);\n- return;\n- }\n+ .listen(port, () => {\nconsole.log(`> App started http://localhost:${port}`)\n});\n",
        "date": "16.12.2020 18:53:32",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "refactor: convert echo server util to use promises",
        "sim_diff": "diff --git a/src/utils/echo-http-server.js b/src/utils/echo-http-server.js @@ -43,15 +43,11 @@ module.exports.createServer = () => {\nconst server = http.createServer(handler)\n- server.start = (opts, cb) => {\n- if (typeof opts === 'function') {\n- cb = opts\n- opts = {}\n- }\n- return server.listen(Object.assign({ port: defaultPort, host: '127.0.0.1' }, opts), cb)\n- }\n+ server.start = (opts) => new Promise(\n+ (resolve) => server.listen(Object.assign({ port: defaultPort, host: '127.0.0.1' }, opts), resolve)\n+ )\n- server.stop = (cb) => server.close(cb)\n+ server.stop = () => new Promise((resolve) => server.close(resolve))\nreturn server\n}\n"
    },
    {
        "msg": "fix: Uncaught fs.stat() throw",
        "diff": "diff --git a/packages/create-wmr/src/index.js b/packages/create-wmr/src/index.js @@ -18,12 +18,17 @@ sade('create-wmr [dir]', true)\nconst origCwd = process.cwd();\nlet cwd = process.cwd();\nif (dir) {\n- if ((await fs.stat(dir)).isDirectory() && !opts.force) {\n+ try {\n+ (await fs.stat(dir)).isDirectory();\n+ if (!opts.force) {\nprocess.stderr.write(\n- `${red(`Refusing to overwrite directory! Please specify a different directory or use the '--force' flag`)}\\n`\n+ `${red(\n+ `Refusing to overwrite directory! Please specify a different directory or use the '--force' flag`\n+ )}\\n`\n);\nprocess.exit(1);\n}\n+ } catch {}\ncwd = resolve(cwd, dir || '.');\nawait fs.mkdir(cwd, { recursive: true });\nprocess.chdir(cwd);\n",
        "date": "25.02.2021 17:56:18",
        "repo": "preactjs/wmr",
        "type": "fix",
        "sim_msg": "refactor(cli/tests): change std_path to root_path in std_tests() (denoland/deno#7438)",
        "sim_diff": "diff --git a/node/process_test.ts b/node/process_test.ts @@ -32,6 +32,8 @@ Deno.test({\nfn() {\nassertEquals(process.cwd(), Deno.cwd());\n+ const currentDir = Deno.cwd(); // to unchange current directory after this test\n+\nconst moduleDir = path.dirname(path.fromFileUrl(import.meta.url));\nprocess.chdir(path.resolve(moduleDir, \"..\"));\n@@ -40,6 +42,7 @@ Deno.test({\nassert(process.cwd().match(/\\Wnode$/));\nprocess.chdir(\"..\");\nassert(process.cwd().match(/\\Wstd$/));\n+ process.chdir(currentDir); // to unchange current directory after this test\n},\n});\n"
    },
    {
        "msg": "fix: dev rollup config",
        "diff": "diff --git a/packages/kiwi-core/rollup.dev.config.js b/packages/kiwi-core/rollup.dev.config.js @@ -66,15 +66,8 @@ const commons = {\n]\n}\n-// const bannerTxt = `/*! Chakra-Vui v${pkg.version} | MIT License | github.com/codebender828/kiwi-ui */`\n-\nconst baseFolder = './src/'\n-// const capitalize = (s) => {\n-// if (typeof s !== 'string') return ''\n-// return s.charAt(0).toUpperCase() + s.slice(1)\n-// }\n-\nconst components = fs.readdirSync(baseFolder)\n.filter((f) => fs.statSync(path.join(baseFolder, f)).isDirectory())\n@@ -86,30 +79,10 @@ const entries = {\n}, {})\n}\n-console.log('entries', entries)\n-\n/**\n* Configurations\n*/\nexport default () => {\n- // const mapComponent = (name) => {\n- // return [{\n- // input: baseFolder + `${name}/index.js`,\n- // external: externals,\n- // output: {\n- // format: 'umd',\n- // name: capitalize(name),\n- // file: `dist/components/${name}/index.js`,\n- // banner: bannerTxt,\n- // exports: 'named',\n- // globals: {\n- // vue: 'Vue'\n- // }\n- // },\n- // ...commons\n- // }]\n- // }\n-\nlet config = [{\ninput: entries,\noutput: {\n@@ -118,61 +91,6 @@ export default () => {\n},\n...commons\n}\n- // {\n- // input: entries,\n- // output: {\n- // dir: `dist/es/`,\n- // format: 'es'\n- // },\n- // ...commons\n- // },\n- // {\n- // input: entries,\n- // output: {\n- // dir: `dist/cjs/`,\n- // format: 'cjs',\n- // exports: 'named'\n- // },\n- // ...commons\n- // },\n- // {\n- // input: './src/index.js',\n- // output: {\n- // file: `dist/umd/index.js/`,\n- // name: capitalize('chakra'),\n- // format: 'umd',\n- // exports: 'named',\n- // banner: bannerTxt,\n- // globals: {\n- // vue: 'Vue'\n- // }\n- // },\n- // ...commons\n- // }\n- // {\n- // input: './src/index.js',\n- // output: {\n- // file: 'dist/chakra-vui.esm.js',\n- // name: capitalize('chakra'),\n- // format: 'esm',\n- // exports: 'named',\n- // banner: bannerTxt\n- // },\n- // ...commons\n- // }\n- // Individual components\n- // ...components.map((f) => mapComponent(f)).reduce((r, a) => r.concat(a), [])\n]\n- if (process.env.MINIFY === 'true') {\n- config = config.filter((c) => !!c.output.file)\n- config.forEach((c) => {\n- c.output.file = c.output.file.replace(/\\.js/g, '.min.js')\n- c.plugins.push(terser({\n- output: {\n- comments: '/^!/'\n- }\n- }))\n- })\n- }\nreturn config\n}\n",
        "date": "20.02.2020 03:22:31",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "sim_msg": "chore: Add banner with version and copyright to all built files",
        "sim_diff": "diff --git a/rollup.config.js b/rollup.config.js @@ -26,6 +26,7 @@ export default utils.pkgs.reduce((all, path) => {\nconst file = utils.getPackageName(path)\nconst name = file.replace(/-./g, (m) => m.slice(-1).toUpperCase())\nconst jsx = name.replace(/./, (m) => m.toUpperCase())\n+ const bannerText = `/*! @nrk/${file} v${version} - Copyright (c) 2017-${new Date().getFullYear()} NRK */`\nreturn all.concat({\ninput: `${path}/${file}.test.js`, // JS CJS (used for testing)\n@@ -33,6 +34,7 @@ export default utils.pkgs.reduce((all, path) => {\nformat: 'cjs',\nfile: `${path}/${file}.test.cjs.js`,\nexports: 'none', // Tests have no exports; set to 'auto' if this changes\n+ banner: bannerText,\nglobals\n},\ntreeshake,\n@@ -48,6 +50,7 @@ export default utils.pkgs.reduce((all, path) => {\noutput: {\nformat: 'cjs',\nfile: `${path}/${file}.cjs.js`,\n+ banner: bannerText,\nexports: 'default',\nglobals\n},\n@@ -59,7 +62,7 @@ export default utils.pkgs.reduce((all, path) => {\noutput: {\nformat: 'umd',\nfile: `${path}/${file}.min.js`,\n- banner: `/*! @nrk/${file} v${version} - Copyright (c) 2017-${new Date().getFullYear()} NRK */`,\n+ banner: bannerText,\nfooter: `window.customElements.define('${file}', ${name})`,\nsourcemap: true,\nglobals,\n@@ -73,6 +76,7 @@ export default utils.pkgs.reduce((all, path) => {\noutput: {\nformat: 'cjs',\nfile: `${path}/jsx.js`,\n+ banner: bannerText,\nexports: 'default',\nglobals\n},\n@@ -84,6 +88,7 @@ export default utils.pkgs.reduce((all, path) => {\noutput: {\nformat: 'umd',\nfile: `${path}/${file}.jsx.js`,\n+ banner: bannerText,\nname: jsx,\nsourcemap: true,\nglobals\n"
    },
    {
        "msg": "fix: fix default route in default template",
        "diff": "diff --git a/packages/create-razzle-app/templates/default/src/App.js b/packages/create-razzle-app/templates/default/src/App.js @@ -5,7 +5,7 @@ import './App.css';\nconst App = () => (\n<Switch>\n- <Route path=\"/\" element={<Home/>} />\n+ <Route exact={true} path=\"/\" component={Home} />\n</Switch>\n);\n",
        "date": "20.12.2021 17:47:08",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "fix: respect config.js root paths in tailwindcss content sources",
        "sim_diff": "diff --git a/src/generators/tailwindcss.js b/src/generators/tailwindcss.js @@ -35,8 +35,8 @@ module.exports = {\nimportant: true,\ncontent: {\nfiles: [\n- './src/components/**.html',\n- './src/layouts/**.html',\n+ `${get(maizzleConfig, 'build.components.root', './src/components')}/**/*.html`,\n+ `${get(maizzleConfig, 'build.layouts.root', './src/layouts')}/**/*.html`,\n{raw: html, extension: 'html'}\n]\n}\n"
    },
    {
        "msg": "fix(avatargroup): filter empty slots",
        "diff": "diff --git a/packages/kiwi-core/src/AvatarGroup/index.js b/packages/kiwi-core/src/AvatarGroup/index.js @@ -58,7 +58,7 @@ const AvatarGroup = {\n},\nrender (h) {\n// Get the number of slot nodes inside AvatarGroup\n- const children = this.$slots.default\n+ const children = this.$slots.default.filter(e => e.tag)\nconst count = children.length\nconst max = parseInt(this.max, 10)\n",
        "date": "19.02.2020 22:52:20",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "sim_msg": "docs(ui5-avatar-group): comment on the avatars' shape\nMake clear that the avatars with \"Circle\" shape is the one Fiori 3 suggests and meant to be used.\nFIXES:",
        "sim_diff": "diff --git a/packages/main/src/AvatarGroup.js b/packages/main/src/AvatarGroup.js @@ -100,7 +100,11 @@ const metadata = {\n},\nslots: /** @lends sap.ui.webcomponents.main.AvatarGroup.prototype */ {\n/**\n- * Defines the items of the <code>ui5-avatar-group</code>.\n+ * Defines the items of the <code>ui5-avatar-group</code>. Use the <code>ui5-avatar</code> component as an item.\n+ * <br><br>\n+ * <b>Note:</b> The UX guidelines recommends using avatars with \"Circle\" shape.\n+ * Moreover, if you use avatars with \"Square\" shape, there will be visual inconsistency\n+ * as the built-in overflow action has \"Circle\" shape.\n* @type {HTMLElement[]}\n* @slot\n* @public\n"
    },
    {
        "msg": "fix(example): use new assets manifest",
        "diff": "diff --git a/examples/basic/src/server.js b/examples/basic/src/server.js @@ -5,6 +5,20 @@ import { renderToString } from 'react-dom/server';\nconst assets = require(process.env.RAZZLE_ASSETS_MANIFEST);\n+const cssLinksFromAssets = (assets, entrypoint) => {\n+ return assets.entrypoints[entrypoint] ? assets.entrypoints[entrypoint].css ?\n+ assets.entrypoints[entrypoint].css.map(asset=>\n+ `<link rel=\"stylesheet\" href=\"${asset}\">`\n+ ).join('') : '' : '';\n+};\n+};\n+const jsScriptTagsFromAssets = (assets, entrypoint, extra = '') => {\n+ return assets.entrypoints[entrypoint] ? assets.entrypoints[entrypoint].js ?\n+ assets.entrypoints[entrypoint].js.map(asset=>\n+ `<script src=\"${asset}\"${extra}></script>`\n+ ).join('') : '' : '';\n+};\n+\nexport const renderApp = (req, res) => {\nconst markup = renderToString(<App />);\n@@ -17,15 +31,11 @@ export const renderApp = (req, res) => {\n<meta charSet='utf-8' />\n<title>Welcome to Razzle</title>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n- ${\n- assets.client.css\n- ? `<link rel=\"stylesheet\" href=\"${assets.client.css}\">`\n- : ''\n- }\n+ ${cssLinksFromAssets(assets, 'client')}\n</head>\n<body>\n<div id=\"root\">${markup}</div>\n- <script src=\"${assets.client.js}\" defer crossorigin></script>\n+ ${jsScriptTagsFromAssets(assets, 'client', ' defer crossorigin')}\n</body>\n</html>`;\n",
        "date": "12.10.2020 18:57:39",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "chore: add copyright to scss and less styles\nfixes",
        "sim_diff": "diff --git a/scripts/build-styles.js b/scripts/build-styles.js @@ -99,7 +99,10 @@ async function buildStyles() {\nfiles.map(async (file) => {\nconst distFilePath = path.resolve(__dirname, `../${outputDir}`, file);\nconst srcFilePath = path.resolve(__dirname, '../src', file);\n- const distFileContent = await readSwiperFile(srcFilePath);\n+ let distFileContent = await readSwiperFile(srcFilePath);\n+ if (file === 'swiper.scss' || file === 'swiper.less') {\n+ distFileContent = `${banner()}\\n${distFileContent}`;\n+ }\nawait fs.ensureDir(path.dirname(distFilePath));\nawait fs.writeFile(distFilePath, distFileContent);\n}),\n"
    },
    {
        "msg": "fix: sniff for child.stdout before using it\nThis fixes but it's a hack, so I'm going to emit a message\nsaying that non-LTS is not supported.",
        "diff": "diff --git a/lib/monitor/run.js b/lib/monitor/run.js @@ -260,7 +260,12 @@ function run(options) {\nchild.stdin.on('error', () => { });\nprocess.stdin.pipe(child.stdin);\n} else {\n+ if (child.stdout) {\nchild.stdout.pipe(process.stdout);\n+ } else {\n+ utils.log.error(`running an unsupported version of node ${process.version}`);\n+ utils.log.error('nodemon may not work as expected - please consider upgrading to LTS');\n+ }\n}\nbus.once('exit', function () {\n",
        "date": "01.02.2018 18:19:56",
        "repo": "remy/nodemon",
        "type": "fix",
        "sim_msg": "refactor: Expose serverless.onExitPromise for internal processing\n(PR",
        "sim_diff": "diff --git a/scripts/serverless.js b/scripts/serverless.js @@ -29,11 +29,6 @@ if (process.env.SLS_DEBUG) {\n});\n}\n-let resolveServerlessExecutionSpan;\n-require('../lib/utils/analytics').sendPending({\n- serverlessExecutionSpan: new BbPromise(resolve => (resolveServerlessExecutionSpan = resolve)),\n-});\n-\nif (nodeVersion < 10) {\nrequire('../lib/utils/logDeprecation')(\n'OUTDATED_NODEJS',\n@@ -47,15 +42,21 @@ const Serverless = require('../lib/Serverless');\nconst serverless = new Serverless();\n+let resolveOnExitPromise;\n+serverless.onExitPromise = new Promise(resolve => (resolveOnExitPromise = resolve));\nserverless.invocationId = invocationId;\n+require('../lib/utils/analytics').sendPending({\n+ serverlessExecutionSpan: serverless.onExitPromise,\n+});\n+\nserverless\n.init()\n.then(() => serverless.run())\n.then(\n- () => resolveServerlessExecutionSpan(),\n+ () => resolveOnExitPromise(),\nerr => {\n- resolveServerlessExecutionSpan();\n+ resolveOnExitPromise();\n// If Enterprise Plugin, capture error\nlet enterpriseErrorHandler = null;\nserverless.pluginManager.plugins.forEach(p => {\n"
    },
    {
        "msg": "fix(text.mdx): removed duplicate titles",
        "diff": "diff --git a/packages/chakra-ui-docs/docs/text.mdx b/packages/chakra-ui-docs/docs/text.mdx @@ -96,8 +96,6 @@ You can change the entire style of the text via props. For example, to change th\nText composes the [CBox](/box) component, so you can pass all Box style props.\n-## Slot\n-\n## Slots\n| Name | Description |\n",
        "date": "03.05.2020 18:36:20",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "sim_msg": "chore: Restore missing comma",
        "sim_diff": "diff --git a/src/technologies/c.json b/src/technologies/c.json 66\n],\n\"description\": \"Chakra UI is a simple, modular and accessible component library that gives you the building blocks you need to build your React applications.\",\n- \"dom\": \"html[style*='chakra-ui-color-mode'], body.chakra-ui-dark, body.chakra-ui-light, div.chakra-portal\"\n+ \"dom\": \"html[style*='chakra-ui-color-mode'], body.chakra-ui-dark, body.chakra-ui-light, div.chakra-portal\",\n\"icon\": \"Chakra UI.svg\",\n\"implies\": \"React\",\n\"oss\": true,\n"
    },
    {
        "msg": "fix: allow windows users to install globally again\nFixes:",
        "diff": "diff --git a/lib/monitor/run.js b/lib/monitor/run.js @@ -347,7 +347,7 @@ function kill(child, signal, callback) {\n// We are using the standalone 'windows-kill' executable to send the\n// standard POSIX signal 'SIGINT' to the node process. This fixes #1720.\nconst windowsKill = path.normalize(\n- `${process.cwd()}/node_modules/nodemon/bin/windows-kill.exe`\n+ `${__dirname}/../../bin/windows-kill.exe`\n);\n// We have to detach the 'windows-kill' execution completely from this\n",
        "date": "30.06.2021 13:57:24",
        "repo": "remy/nodemon",
        "type": "fix",
        "sim_msg": "test: ignore alll windows taskkill errors, get over it",
        "sim_diff": "diff --git a/build/tasks/release-checks/tasks/task.js b/build/tasks/release-checks/tasks/task.js @@ -17,8 +17,8 @@ module.exports = class Task extends Step {\nstop() {\nkill(this.proc.pid, err => {\n- // ignore windows taskkill error on process not found.\n- if (err && !err.message.match(/not found\\.\\s*$/)) {\n+ // ignore windows taskkill error.\n+ if (err && process.platform !== 'win32') {\nthis.reject && this.reject(err);\n} else {\nthis.resolve && this.resolve();\n"
    },
    {
        "msg": "fix: added a better description for the event table",
        "diff": "diff --git a/packages/chakra-ui-docs/docs/tabs.mdx b/packages/chakra-ui-docs/docs/tabs.mdx @@ -323,8 +323,8 @@ Tabs composes `Box` so you call pass all `Box` related props.\n### Tabs Events\n| Name | Description |\n-| ---------- | ------------------------ |\n-| `onChange` | Emits the @change event. |\n+| --------- | ------------------------------------------ |\n+| `@change` | Event emitted when the active tab changes. |\n### Tabs Slot\n",
        "date": "06.05.2020 16:37:00",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "sim_msg": "refactor(tab/basic): format js with new rules",
        "sim_diff": "diff --git a/components/tab/basic/src/index.js b/components/tab/basic/src/index.js @@ -8,7 +8,7 @@ export default class TabBasic extends Component {\n}\n_createHandleClick(index) {\n- return (event) => {\n+ return event => {\nevent.preventDefault()\nthis.setState({activeTab: index})\nthis.props.handleClick(index, this.props.tabsList[index])\n@@ -25,11 +25,11 @@ export default class TabBasic extends Component {\n})\nreturn (\n- <li className='sui-TabBasic-item' key={index}>\n+ <li className=\"sui-TabBasic-item\" key={index}>\n<button\nclassName={tabLinkClassName}\nonClick={this._createHandleClick(index)}\n- role='tab'\n+ role=\"tab\"\n>\n{tabLabel}\n</button>\n@@ -39,11 +39,7 @@ export default class TabBasic extends Component {\n}\nrender() {\n- return (\n- <ul className='sui-TabBasic'>\n- {this._renderTabs()}\n- </ul>\n- )\n+ return <ul className=\"sui-TabBasic\">{this._renderTabs()}</ul>\n}\n}\n"
    },
    {
        "msg": "fix(razzle): add back css minimizer",
        "diff": "diff --git a/packages/razzle/config/createConfigAsync.js b/packages/razzle/config/createConfigAsync.js @@ -877,7 +877,27 @@ module.exports = (\nminimize: true,\nminimizer: [\nnew TerserPlugin(webpackOptions.terserPluginOptions),\n+ new CssMinimizerPlugin({\n+ sourceMap: true,\n+ minify: async (data, inputMap) => {\n+ // eslint-disable-next-line global-require\n+ const CleanCSS = require('clean-css');\n+\n+ const [[filename, input]] = Object.entries(data);\n+ const minifiedCss = await new CleanCSS({ sourceMap: true }).minify({\n+ [filename]: {\n+ styles: input,\n+ sourceMap: inputMap,\n+ },\n+ });\n+ return {\n+ css: minifiedCss.styles,\n+ map: minifiedCss.sourceMap.toJSON(),\n+ warnings: minifiedCss.warnings,\n+ };\n+ },\n+ })\n],\n}\n}\n",
        "date": "07.02.2021 22:01:38",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "build(webpack): using TerserPlugin 2 for js minimizer",
        "sim_diff": "diff --git a/webpack.config.js b/webpack.config.js @@ -5,6 +5,7 @@ const path = require('path')\nconst { CleanWebpackPlugin } = require('clean-webpack-plugin')\nconst MiniCssExtractPlugin = require('mini-css-extract-plugin')\n+const TerserPlugin = require('terser-webpack-plugin')\nmodule.exports = {\nmode: devMode ? 'development' : 'production',\n@@ -35,6 +36,9 @@ module.exports = {\nmaxAssetSize: 500000\n},\n+ optimization: {\n+ minimizer: [new TerserPlugin()]\n+ },\nplugins: [\nnew CleanWebpackPlugin(),\nnew MiniCssExtractPlugin({\n"
    },
    {
        "msg": "fix(token): typo in documentation\nImplemantation -> Implementation",
        "diff": "diff --git a/contracts/token/StandardToken.sol b/contracts/token/StandardToken.sol @@ -8,7 +8,7 @@ import './ERC20.sol';\n/**\n* @title Standard ERC20 token\n*\n- * @dev Implemantation of the basic standard token.\n+ * @dev Implementation of the basic standard token.\n* @dev https://github.com/ethereum/EIPs/issues/20\n* @dev Based on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\n*/\n",
        "date": "30.06.2017 14:40:15",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "fix",
        "sim_msg": "fix: PancakeSwap Token test fixed",
        "sim_diff": "diff --git a/tests/integration/add_custom_token.spec.js b/tests/integration/add_custom_token.spec.js @@ -94,7 +94,7 @@ if (process.env.NODE_ENV === 'mainnet') {\nchain: 'bsc',\naddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\nname: 'PancakeSwap Token',\n- symbol: 'CAKE',\n+ symbol: 'Cake',\ndecimal: '18'\n}\n// Import wallet option\n"
    },
    {
        "msg": "fix: grammar issues",
        "diff": "diff --git a/website/pages/static-export.mdx b/website/pages/static-export.mdx @@ -50,7 +50,7 @@ Razzle not only works with React, but also Reason, Elm, Vue, Angular, Svelte, an\nbehind the scenes razzle calls `render` function that exposed from `static_export` module and saves `html` string that you pass to `res.json()` into a html file. for `req` object there is only one property that is `url` which contains the url that we are going to render and save it's result to the html file.\nhtml file destination is relative to the `req.url`, for example if the url is `/product/A` html is going to get saved at `/build/product/A/index.html`.\n-you should call `renderToString()` (or what ever your framework gives you to do SSR) in this function send resonse to `res.json()`\n+you should call `renderToString()` (or what ever your framework gives you to do SSR) in this function and then send result to `res.json()`\n```js\nexport const render = (req, res) => {\n@@ -64,12 +64,12 @@ export const render = (req, res) => {\n};\n```\n-(you can re-export your ssr logic from server.js file and use it `static_export`)\n+(you can re-export your SRR logic from server.js file and use it `static_export`)\n#### routes()\n-you should also export a function called `routes` that returns an array of strings or a promise that will resolve array of strings. razzle will take the urls one by one and pass them one by one to `render`.\n-you should get all paths that your app has from your CMS in this method and return it at the end:\n+you should also export a function called `routes` that returns an array of strings or a promise that will resolve array of strings. razzle will take the urls and will pass them one by one to `render`.\n+you should get all paths that your app has from your CMS in this method and then return it:\n```js\nexport const routes = async () => {\n@@ -81,8 +81,8 @@ export const routes = async () => {\n#### page data\n-you may also need to save the data that your page uses to rehydrate the app on the client side.\n-you can also pass the `data` along the `html` to `res.json({ html, data })` and contents of data object will go inside the `page-data.json` file next to the html file.\n+you may also need to save the data that your page uses to re-hydrate the app on the client side.\n+you can pass the `data` along the `html` to `res.json({ html, data })` and contents of `data` object will get saved in the `page-data.json` next to the related `index.html` file.\n```js\nexport const render = async (req, res) => {\n@@ -98,7 +98,7 @@ export const render = async (req, res) => {\n};\n```\n-(you should also change how your app fetches data on client-side, so it reads data from `page-data.json`)\n+(NOTE: you should change how your app fetches data on client-side, to read data from `page-data.json`)\n## TypeScript Support\n",
        "date": "06.10.2020 03:05:47",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "feat(app): Improve dev-server for SSR in dev mode",
        "sim_diff": "diff --git a/app/lib/dev-server.js b/app/lib/dev-server.js @@ -232,11 +232,10 @@ module.exports = class DevServer {\napp,\nssr: {\n- renderToString ({ req, res }, fn) {\n+ renderToString (opts, fn) {\nconst context = {\n- url: req.url,\n- req,\n- res\n+ ...opts,\n+ url: opts.req.url\n}\nrenderer.renderToString(context, (err, html) => {\n"
    },
    {
        "msg": "fix(docs): fix compatibility with IE",
        "diff": "diff --git a/docs/app/utils.js b/docs/app/utils.js @@ -15,6 +15,14 @@ export const parentComponents = _.flow(\n_.sortBy('_meta.name')\n)(semanticUIReact)\n+const mathSign = Math.sign || function (x) {\n+ x = +x\n+ if (x === 0 || isNaN(x)) {\n+ return x\n+ }\n+ return x > 0 ? 1 : -1\n+}\n+\n/**\n* Get the Webpack Context for all doc site examples.\n*/\n@@ -27,6 +35,7 @@ export const semanticUICSSRepoURL = 'https://github.com/Semantic-Org/Semantic-UI\nexport const scrollToAnchor = () => {\nconst anchor = location.hash && document.querySelector(location.hash)\n+ const offsetY = window.scrollY || window.pageYOffset\n// no scroll to target, stop\nif (!anchor) return\n@@ -37,9 +46,9 @@ export const scrollToAnchor = () => {\nif (elementTop === 0) return\n// hit max scroll boundaries, stop\n- const isScrolledToTop = scrollY === 0\n- const isScrolledToBottom = scrollY + document.body.clientHeight === document.body.scrollHeight\n- const scrollStep = Math.ceil((Math.abs(elementTop / 8))) * Math.sign(elementTop)\n+ const isScrolledToTop = offsetY === 0\n+ const isScrolledToBottom = offsetY + document.body.clientHeight === document.body.scrollHeight\n+ const scrollStep = Math.ceil((Math.abs(elementTop / 8))) * mathSign(elementTop)\nif (isScrolledToBottom && scrollStep > 0 || isScrolledToTop && scrollStep < 0) return\n",
        "date": "09.05.2017 02:18:16",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "sim_msg": "fix: Maintain translation functions",
        "sim_diff": "diff --git a/webpack.config.js b/webpack.config.js @@ -164,16 +164,7 @@ module.exports = ( env, argv ) => {\nsourceMap: false,\ncache: true,\nterserOptions: {\n- // compress: {\n- // keep_classnames: true,\n- // keep_fnames: true,\n- // },\n- // mangle: {\n- // keep_classnames: true,\n- // keep_fnames: true,\n- // },\n- // keep_classnames: true,\n- // keep_fnames: false,\n+ keep_fnames: /__|sprintf/,\noutput: {\ncomments: /translators:/i,\n},\n"
    },
    {
        "msg": "fix: Disable file import OK button until a file is selected\nfixes",
        "diff": "diff --git a/src/App.js b/src/App.js @@ -417,7 +417,9 @@ class App extends Component {\n<div>\n<span className={ style.centerSpan }>\n{options.action === IMPORT &&\n- <div className=\"button circular\" title=\"Ok\" onClick={this.processOptions}>\n+ <div className=\"button circular\" title=\"Ok\"\n+ disabled={options.action === IMPORT && !this.state.selectedFile}\n+ onClick={this.processOptions}>\n<FontAwesomeIcon icon={faCheck} />\n</div>\n}\n",
        "date": "01.04.2019 18:07:44",
        "repo": "iqtlabs/crviz",
        "type": "fix",
        "sim_msg": "feat(header/actions): update right button type",
        "sim_diff": "diff --git a/components/header/actions/src/index.js b/components/header/actions/src/index.js @@ -9,7 +9,7 @@ const HeaderActions = ({title, icon, buttonLabel}) => (\n<span className={getClass('icon')}>{icon}</span>\n<h1 className={getClass('title')}>{title}</h1>\n<span className={getClass('button')}>\n- <Button type=\"secondary\" negative>\n+ <Button type=\"primary\" negative>\n{buttonLabel}\n</Button>\n</span>\n"
    },
    {
        "msg": "fix(search-input): Fix empty search input",
        "diff": "diff --git a/app/components/search-input.js b/app/components/search-input.js @@ -37,9 +37,9 @@ export default Component.extend({\nconst projectVersion = get(this, '_projectVersion');\n// Hide and don't run query if there's no search query\n- // if (!query) {\n- // return set(this, '_focused', false);\n- // }\n+ if (!query) {\n+ return set(this, '_focused', false);\n+ }\nconst params = {\nhitsPerPage: 15,\n",
        "date": "16.08.2017 22:34:58",
        "repo": "ember-learn/ember-api-docs",
        "type": "fix",
        "sim_msg": "fix(Search): re-enable \"shame on us\" state (submitting when no results)",
        "sim_diff": "diff --git a/components/Search/index.js b/components/Search/index.js @@ -296,7 +296,6 @@ class Search extends Component {\nfilters,\nsort,\nloadingFilters,\n- totalCount,\nallowFocus\n} = this.state\n@@ -305,7 +304,7 @@ class Search extends Component {\n<form onSubmit={this.onSubmit}>\n<Input\nvalue={searchQuery}\n- allowSearch={!!totalCount && searchQuery !== submittedQuery}\n+ allowSearch={searchQuery !== submittedQuery}\nallowFocus={allowFocus}\nonChange={this.onInputChange}\nonSearch={this.onSearch}\n"
    },
    {
        "msg": "fix: don't use `options.iconPack`, yet",
        "diff": "diff --git a/packages/chakra-ui-core/src/utils/icons.js b/packages/chakra-ui-core/src/utils/icons.js import { merge } from 'lodash-es'\n/**\n- * @param {String} pack\n- * @param {Array} icon\n+ * @param {String} prefix - prefix for the icon pack\n+ * @param {Array} icon - icon definition\n* @returns {{path: string, viewBox: string, attrs: *}}\n*/\n-const createIcon = (pack, icon) => {\n+const createIcon = (prefix, icon) => {\nconst [w, h, content, svg, data, , attrs] = icon\nlet path\n@@ -21,12 +21,12 @@ const createIcon = (pack, icon) => {\nreturn `<g fill=\"currentColor\" class=\"${prefix}-group\">${paths.join('')}</g>`\n}\n- if (pack === 'fa') {\n+ if (prefix.startsWith('fa')) {\npath = Array.isArray(data)\n- ? createGroupedPath(data, pack)\n+ ? createGroupedPath(data, prefix.substr(0, 2))\n: createPath(data)\n} else {\n- path = pack.startsWith('fe') ? content : svg\n+ path = prefix.startsWith('fe') ? content : svg\n}\nreturn {\n@@ -38,17 +38,16 @@ const createIcon = (pack, icon) => {\n/**\n* @description Custom parse all Icons provided by user\n- * @param {String} pack - the name of the icon pack being used (fe, fa, mdi, etc)\n* @param {Object} iconSet - Registered Icons object\n* @returns {Object}\n*/\n-const parseIcons = (pack, iconSet = {}) => {\n+const parseIcons = (iconSet = {}) => {\nconst parseIcon = (iconObject) => {\n- const { icon, iconName } = iconObject\n+ const { icon, prefix, iconName } = iconObject\n// Is library icon\nif (icon) {\nreturn {\n- [`${iconName}`]: createIcon(pack, icon)\n+ [`${iconName}`]: createIcon(prefix, icon)\n}\n} else {\nreturn {}\n@@ -62,13 +61,12 @@ const parseIcons = (pack, iconSet = {}) => {\n/**\n* @description Parse Icon packs\n- * @param {String} pack - the name of the icon pack being used (fe, fa, mdi, etc)\n* @param {Object} iconSet Registered Icon set\n* @returns {Object} Parsed pack icons object\n*/\n-export const parsePackIcons = (pack, iconSet) => {\n+export const parsePackIcons = (iconSet) => {\n// TODO: Add support for other icon libraries\n// - Material Icons: these are string constants, and need lots of work\n// - Tailwind Icons (Hero icons)\n- return parseIcons(pack, iconSet)\n+ return parseIcons(iconSet)\n}\n",
        "date": "25.10.2021 14:39:05",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "sim_msg": "feat: QIcon - add Icon Moon support + \"size\" prop",
        "sim_diff": "diff --git a/src/components/icon/QIcon.js b/src/components/icon/QIcon.js @@ -5,7 +5,8 @@ export default {\nname: String,\nmat: String,\nios: String,\n- color: String\n+ color: String,\n+ size: String\n},\nrender (h, ctx) {\nlet name, text\n@@ -24,7 +25,7 @@ export default {\nelse if (icon.startsWith('fa-')) {\nname = `fa ${icon}`\n}\n- else if (icon.startsWith('ion-')) {\n+ else if (icon.startsWith('ion-') || icon.startsWith('icon-')) {\nname = `${icon}`\n}\nelse {\n@@ -33,10 +34,19 @@ export default {\n}\ndata.staticClass = `${cls ? cls + ' ' : ''}q-icon${name.length ? ` ${name}` : ''}${prop.color ? ` text-${prop.color}` : ''}`\n+\nif (!data.hasOwnProperty('attrs')) {\ndata.attrs = {}\n}\ndata.attrs['aria-hidden'] = 'true'\n+\n+ if (prop.size) {\n+ const style = `font-size: ${prop.size};`\n+ data.style = data.style\n+ ? [data.style, style]\n+ : style\n+ }\n+\nreturn h('i', data, text ? [text, ctx.children] : [' ', ctx.children])\n}\n}\n"
    },
    {
        "msg": "fix(optimize): avoid `relative` preloader if external publicPath",
        "diff": "diff --git a/src/plugins/optimize-graph-plugin.js b/src/plugins/optimize-graph-plugin.js @@ -398,7 +398,9 @@ function hoistTransitiveImports(graph) {\nif (DEBUG) console.log(`Preloading JS for import(${spec}): ${js}`);\npreloads.push(\n...js.map(f => {\n- // TODO: should have `toImport(...)` somewhere here\n+ if (/^(https?:)?\\/\\//.test(graph.publicPath)) {\n+ return `import(${toImport(graph.publicPath, f)})`;\n+ }\nlet rel = posix.relative(posix.dirname('/' + fileName), posix.join(graph.publicPath, f));\nif (!rel.startsWith('.')) rel = './' + rel;\nreturn `import(${JSON.stringify(rel)})`;\n",
        "date": "07.12.2020 10:42:46",
        "repo": "preactjs/wmr",
        "type": "fix",
        "sim_msg": "fix: deprecated config in",
        "sim_diff": "diff --git a/plugins/plugin-optimize/plugin.js b/plugins/plugin-optimize/plugin.js @@ -113,7 +113,7 @@ exports.default = function plugin(config, userDefinedOptions) {\nconst allFiles = glob\n.sync('**/*', {\ncwd: buildDirectory,\n- ignore: [`${config.buildOptions.metaDir}/*`],\n+ ignore: [`${config.buildOptions.metaUrlPath}/*`],\nnodir: true,\n})\n.map((file) => path.join(buildDirectory, file)); // resolve to root dir\n@@ -169,7 +169,7 @@ exports.default = function plugin(config, userDefinedOptions) {\n// 6. write manifest\nfs.writeFileSync(\n- path.join(buildDirectory, config.buildOptions.metaDir, 'optimize-manifest.json'),\n+ path.join(buildDirectory, config.buildOptions.metaUrlPath, 'optimize-manifest.json'),\nJSON.stringify(\nformatManifest({manifest, buildDirectory, generatedFiles, preloadCSS}),\nundefined,\n"
    },
    {
        "msg": "fix(razzle): fix for unreleased plugins",
        "diff": "diff --git a/packages/razzle/config/loadPlugins.js b/packages/razzle/config/loadPlugins.js @@ -12,8 +12,9 @@ function loadPlugin(plugin, paths) {\nreturn [plugin, {}];\n}\n- // Support for not released plugins\n- if (typeof plugin === 'object') {\n+ // Support for not released plugins without options\n+ // Use plugin.object if you need options\n+ if (typeof plugin === 'object' && !plugin.name && !plugin.object) {\nreturn [plugin, {}];\n}\n",
        "date": "11.11.2020 19:31:56",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "docs: add deprication log if plugins is object",
        "sim_diff": "diff --git a/packages/build/src/plugins/options.js b/packages/build/src/plugins/options.js @@ -2,6 +2,10 @@ const DEFAULT_PLUGINS_DIR = __dirname\n// Load plugin options (specified by user in `config.plugins`)\nconst getPluginsOptions = function({ config: { plugins: pluginsOptions } }) {\n+ // Temporary warning for malformed plugin block in config\n+ if (!Array.isArray(pluginsOptions)) {\n+ console.log('Warning: Plugins have been changed to an array!\\nSee more information in the docs http://bit.ly/31z46mF')\n+ }\nreturn [...DEFAULT_PLUGINS, ...pluginsOptions].map(normalizePluginOptions).filter(isPluginEnabled)\n}\n"
    },
    {
        "msg": "fix(razzle): disable pnp plugin with webpack 5",
        "diff": "diff --git a/packages/razzle/config/createConfigAsync.js b/packages/razzle/config/createConfigAsync.js @@ -475,16 +475,14 @@ module.exports = (\nadditionalAliases\n),\nplugins: [\n- // TODO: Remove when using webpack 5\n- PnpWebpackPlugin,\n- ],\n+ webpackMajor !== 5 && PnpWebpackPlugin,\n+ ].filter(x => x),\n},\nresolveLoader: {\nmodules: [paths.appNodeModules, paths.ownNodeModules],\nplugins: [\n- // TODO: Remove when using webpack 5\n- PnpWebpackPlugin.moduleLoader(module),\n- ],\n+ webpackMajor !== 5 && PnpWebpackPlugin.moduleLoader(module),\n+ ].filter(x => x),\n},\nmodule: {\nstrictExportPresence: true,\n@@ -587,7 +585,7 @@ module.exports = (\n? webpackOptions.nodeExternals : [webpackOptions.nodeExternals];\n// We need to tell webpack what to bundle into our Node bundle.\n- config.externals = (!IS_SERVERLESS ? [nodeExternalsFunc] : []).concat(webpackOptions.nodeExternals);\n+ config.externals = (!IS_SERVERLESS ? [nodeExternalsFunc] : []).concat(nodeExternals);\n// Specify webpack Node.js output path and filename\nconfig.output = {\n@@ -832,7 +830,7 @@ module.exports = (\n? webpackOptions.clientExternals : [webpackOptions.clientExternals];\n// We need to tell webpack what to bundle into our client bundle.\n- config.externals = webpackOptions.clientExternals;\n+ config.externals = clientExternals;\n// Specify the client output directory and paths. Notice that we have\n// changed the publiPath to just '/' from http://localhost:3001. This is because\n",
        "date": "15.01.2021 19:52:11",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "build: remove custom less paths",
        "sim_diff": "diff --git a/packages/manager/apps/telecom/webpack.config.js b/packages/manager/apps/telecom/webpack.config.js @@ -35,12 +35,6 @@ module.exports = (env = {}) => {\nconst { config } = webpackConfig({\ntemplate: './src/index.html',\nbasePath: './src',\n- lessPath: [\n- './src/app',\n- './src/components',\n- './node_modules',\n- '../../../node_modules',\n- ],\nroot: path.resolve(__dirname, './src/app'),\nassets: {\nfiles: [\n"
    },
    {
        "msg": "fix(editable): fix blur event only call onSubmit",
        "diff": "diff --git a/packages/chakra-ui-core/src/Editable/index.js b/packages/chakra-ui-core/src/Editable/index.js @@ -252,7 +252,6 @@ const EditableInput = {\nonKeyDown,\nvalue,\nonSubmit,\n- onCancel,\nsubmitOnBlur,\nplaceholder,\nisDisabled\n@@ -274,7 +273,7 @@ const EditableInput = {\n},\nnativeOn: {\nblur: event => {\n- submitOnBlur ? onSubmit() : onCancel()\n+ submitOnBlur && onSubmit()\nthis.$emit('blur', event)\n},\nchange: onChange,\n",
        "date": "19.03.2020 22:03:28",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "sim_msg": "fix(EditableCell): Change behavior to save cell contents when losing focus, clicking away etc.\nfix",
        "sim_diff": "diff --git a/lib/editor/components/timetable/EditableCell.js b/lib/editor/components/timetable/EditableCell.js @@ -259,6 +259,10 @@ export default class EditableCell extends Component<Props, State> {\n}\n}\n+ handleBlur = () => {\n+ this.save()\n+ }\n+\nhandleChange = (evt: SyntheticInputEvent<HTMLInputElement>) => {\nthis.setState({data: evt.target.value})\n}\n@@ -335,7 +339,7 @@ export default class EditableCell extends Component<Props, State> {\nautoFocus\ndefaultValue={renderCell(column, data)}\nclassName='cell-input'\n- onBlur={this.cancel}\n+ onBlur={this.handleBlur}\nonChange={this.handleChange}\nonFocus={this._onInputFocus}\nonKeyDown={this.handleKeyDown}\n"
    },
    {
        "msg": "fix: test more extensions in static_export",
        "diff": "diff --git a/packages/razzle/config/createConfigAsync.js b/packages/razzle/config/createConfigAsync.js @@ -170,7 +170,10 @@ module.exports = (\nlet webpackOptions = {};\n- const hasStaticExportJs = fs.existsSync(paths.appStaticExportJs + '.js');\n+ const hasStaticExportJs = fs.existsSync(paths.appStaticExportJs + '.js') ||\n+ fs.existsSync(paths.appStaticExportJs + '.jsx') ||\n+ fs.existsSync(paths.appStaticExportJs + '.ts') ||\n+ fs.existsSync(paths.appStaticExportJs + '.tsx');\nconst dotenv = getClientEnv(\ntarget,\n",
        "date": "23.09.2020 19:13:42",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "fix(app): Fix .ts extension resolve",
        "sim_diff": "diff --git a/app/lib/webpack/create-chain.js b/app/lib/webpack/create-chain.js @@ -65,8 +65,8 @@ module.exports = function (cfg, configName) {\nchain.resolve.extensions\n.merge(\ncfg.supportTS !== false\n- ? [ '.mjs', '.js', '.vue', '.json', '.wasm' ]\n- : [ '.mjs', '.ts', '.js', '.vue', '.json', '.wasm' ]\n+ ? [ '.mjs', '.ts', '.js', '.vue', '.json', '.wasm' ]\n+ : [ '.mjs', '.js', '.vue', '.json', '.wasm' ]\n)\nchain.resolve.modules\n"
    },
    {
        "msg": "fix(scss): fix tests",
        "diff": "diff --git a/packages/razzle-plugin-scss/tests/index.test.js b/packages/razzle-plugin-scss/tests/index.test.js @@ -69,19 +69,16 @@ const nodeLoaderTests = [\nloaderFinder: cssLoaderFinder,\n},\n{\n- name: 'should not add postcss-loader',\n+ name: 'should add postcss-loader',\nloaderFinder: postCssLoaderFinder,\n- status: 'falsy',\n},\n{\n- name: 'should not add resolve-url-loader',\n+ name: 'should add resolve-url-loader',\nloaderFinder: resolveUrlLoaderFinder,\n- status: 'falsy',\n},\n{\n- name: 'should not add sass-loader',\n+ name: 'should add sass-loader',\nloaderFinder: sassLoaderFinder,\n- status: 'falsy',\n},\n];\n",
        "date": "16.04.2020 00:40:07",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "chore: Add scss data loader",
        "sim_diff": "diff --git a/.storybook/webpack.config.js b/.storybook/webpack.config.js @@ -33,7 +33,17 @@ module.exports = ({ config }) => {\nlocalIdentName: '[name]__[local]___[hash:base64:5]',\n},\n},\n- require.resolve('sass-loader'),\n+ {\n+ loader: require.resolve('sass-loader'),\n+\n+ options: {\n+ data: `@import '~scss/type.module.scss';\n+ @import '~scss/helpers.module.scss';\n+ @import '~scss/colors.module.scss';\n+ @import '~scss/links.module.scss';\n+ @import '~scss/breakpoints.module.scss';`,\n+ },\n+ },\n],\n})\n"
    },
    {
        "msg": "fix(sass-plugin): bumpup mini-css-extract-plugin version",
        "diff": "diff --git a/packages/razzle-plugin-scss/package.json b/packages/razzle-plugin-scss/package.json },\n\"dependencies\": {\n\"autoprefixer\": \"^8.6.2\",\n- \"mini-css-extract-plugin\": \"^0.4.0\",\n+ \"mini-css-extract-plugin\": \"^0.9.0\",\n\"node-sass-chokidar\": \"^1.3.0\",\n\"postcss-flexbugs-fixes\": \"^3.3.1\",\n\"postcss-scss\": \"^1.0.5\",\n",
        "date": "10.04.2020 18:15:14",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "docs(Favicons): fix pipeline",
        "sim_diff": "diff --git a/package.json b/package.json \"build:cssmin\": \"node-sass ./src/globals/scss/styles.scss ./assets/css/styles.min.css --output-style compressed && postcss ./assets/css/styles.min.css --no-map -u autoprefixer -rs\",\n\"build:css\": \"node-sass ./src/globals/scss -o ./assets/css --output-style compressed --source-map true && postcss ./assets/css/styles.css -d ./assets/css/ --use autoprefixer\",\n\"commitmsg\": \"validate-commit-msg\",\n- \"build:favicon\": \"convert assets/internal/wfp-favicon-png32.png assets/internal/wfp-favicon-png512.png -colors 256 docs/favicon.ico\",\n+ \"build:favicon\": \"convert ./src/assets/internal/wfp-favicon-png32.png ./src/assets/internal/wfp-favicon-png512.png -colors 256 docs/favicon.ico\",\n\"contributors:add\": \"all-contributors add\",\n\"contributors:generate\": \"all-contributors generate\",\n\"lint\": \"eslint src\",\n"
    },
    {
        "msg": "fix(Responsive): fix types in typings",
        "diff": "diff --git a/src/addons/Responsive/Responsive.d.ts b/src/addons/Responsive/Responsive.d.ts @@ -28,12 +28,12 @@ export interface ResponsiveProps {\n}\nexport interface ResponsiveOnUpdateData extends ResponsiveProps {\n- width: string;\n+ width: number;\n}\nexport interface ResponsiveWidthShorthand {\n- minWidth: number;\n- maxWidth?: number;\n+ minWidth?: number | string;\n+ maxWidth?: number | string;\n}\ndeclare class Responsive extends React.Component<ResponsiveProps, {}> {\n",
        "date": "11.03.2018 14:10:49",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "sim_msg": "docs(responsive): add child function usage notes",
        "sim_diff": "diff --git a/src/components/Responsive/Responsive.md b/src/components/Responsive/Responsive.md -### Usage\n-\nThe Responsive component is a thin wrapper over the [**react-responsive**](https://github.com/contra/react-responsive) community component. We encourage mobile-first development by using the `minWidth` prop exclusively, though you're welcome to use `maxWidth` or any of the other props supplied by **react-responsive** if the need arises; **note** if you do use props supplied by react-responsive, you must provide pixel values and not breakpoint keys as used by the Responsive component.\n### Breakpoints\n@@ -7,24 +5,39 @@ The Responsive component is a thin wrapper over the [**react-responsive**](https\nUsing the `minWidth` and `maxWidth` props, you can pass a breakpoint key. They represent the following:\n| Breakpoint key | Value as `minWidth` | Value as `maxWidth` |\n-| ---------- | ------------------- | ------------------- |\n+| -------------- | ------------------- | ------------------- |\n| `sm` | 576px | 575px |\n| `md` | 768px | 767px |\n| `lg` | 992px | 991px |\n| `xl` | 1200px | 1199px |\n+### Basic usage\n+\n```jsx\n<div>\n- <Responsive minWidth='xs' maxWidth='md'>\n+ <Responsive minWidth=\"xs\" maxWidth=\"md\">\n<Heading level=\"h1\">Hello I'm a heading in XS and SM</Heading>\n</Responsive>\n- <Responsive minWidth='md' maxWidth='lg'>\n+ <Responsive minWidth=\"md\" maxWidth=\"lg\">\n<Card>\nHello I'm a Card in MD\n</Card>\n</Responsive>\n- <Responsive minWidth='lg'>\n+ <Responsive minWidth=\"lg\">\n<Button>Hello I'm a Button in L and XL</Button>\n</Responsive>\n</div>\n```\n+\n+### Passing a child function\n+\n+Since the Responsive component wraps **react-responsive**, you may pass a function as the only child to perform logical operations based on whether or not the query matches the browser viewport.\n+\n+```jsx\n+<Responsive minWidth=\"sm\">\n+{\n+ (matches) =>\n+ matches ? \"You're using a large display.\" : \"You're viewing this on mobile.\"\n+}\n+</Responsive>\n+```\n"
    },
    {
        "msg": "fix: reduce help output (a teeny bit)",
        "diff": "diff --git a/doc/cli/help.txt b/doc/cli/help.txt -I, --no-stdin ........... don't try to read from stdin.\n-C, --on-change-only ..... execute script on change only, not startup\n--no-colors .............. disable color output\n+ --signal <signal> ........ use specified kill signal instead of default (ex. SIGTERM)\n-d, --delay n ............ debounce restart for \"n\" seconds.\n--exitcrash .............. exit on crash, allows use of nodemon with daemon\ntools like forever.js.\n-v, --version ............ current nodemon version.\n-h, --help ............... you're looking at it.\n--help <topic> ........... help on a specific feature. Try \"--help topics\".\n- --signal <signal> ........ use specified kill signal instead of default (ex. SIGTERM)\n-- <your args> ........... to tell nodemon stop slurping arguments.\nNote: if the script is omitted, nodemon will try to read \"main\" from\nExamples:\n$ nodemon server.js\n- $ nodemon --config my/custom/nodemon.json server.js\n$ nodemon -w ../foo server.js apparg1 apparg2\n- $ PORT=8000 nodemon --debug-brk server.js\n$ nodemon --exec python app.py\n$ nodemon --exec \"make build\" -e \"styl hbs\"\n- $ nodemon app.js -- -v\n+ $ nodemon app.js -- --inspect\nFor more details see http://github.com/remy/nodemon/\n",
        "date": "04.12.2017 22:27:16",
        "repo": "remy/nodemon",
        "type": "fix",
        "sim_msg": "fix: added logging to testbed init script",
        "sim_diff": "diff --git a/testbed/init.sh b/testbed/init.sh @@ -50,8 +50,29 @@ options() {\ndone\n}\n+# logging\n+logger() {\n+ if [ \"$1\" == \"info\" ] ; then\n+ COLOR=\"96m\";\n+ elif [ \"$1\" == \"success\" ] ; then\n+ COLOR=\"92m\";\n+ elif [ \"$1\" == \"warning\" ] ; then\n+ COLOR=\"93m\";\n+ elif [ \"$1\" == \"danger\" ] ; then\n+ COLOR=\"91m\";\n+ else\n+ COLOR=\"0m\";\n+ fi\n+\n+ STARTCOLOR=\"\\e[$COLOR\";\n+ ENDCOLOR=\"\\e[0m\";\n+\n+ printf \"$STARTCOLOR%b$ENDCOLOR\" \"$2\";\n+}\n+\n+# main\nmain() {\n- # clean\n+ logger \"info\" \"BRANCH: clean \\n\"\nrm -rf ../.installed\nrm -rf ./node_modules\nrm -rf ./plugins\n@@ -62,37 +83,45 @@ main() {\nrm -rf ./package-lock.json\nif [[ \"$run_cor\" == \"true\" ]]; then\n+ logger \"info\" \"BRANCH: install cordova \\n\"\nnpm install -g cordova gulp-cli ios-deploy\nfi\n+\nif [[ \"$run_dep\" == \"true\" ]]; then\n+ logger \"info\" \"BRANCH: install node dependencies \\n\"\nnpm uninstall mkpath node-version-compare plist xml2js\nfi\n- # validate\n+ logger \"info\" \"BRANCH: validate code \\n\"\ngulp prod\n- # config\n+ logger \"info\" \"BRANCH: copy config \\n\"\ncp config.template.xml config.xml\n- # build (platforms added before plugin because before_plugin_install does not work on file reference)\nif [[ \"$run_ios\" == \"true\" ]]; then\n+ logger \"info\" \"BRANCH: add ios platform \\n\"\ncordova platform add ios\nfi\n+\nif [[ \"$run_and\" == \"true\" ]]; then\n+ logger \"info\" \"BRANCH: add android platform \\n\"\ncordova platform add android\nfi\n# plugin\ncordova plugin add ../\n- # run\nif [[ \"$run_ios\" == \"true\" ]]; then\n+ logger \"info\" \"BRANCH: run ios \\n\"\ncordova run ios --device\nfi\n+\nif [[ \"$run_and\" == \"true\" ]]; then\n+ logger \"info\" \"BRANCH: run android \\n\"\ncordova run android\nfi\n}\n+# run\noptions \"$@\"\nmain\n"
    },
    {
        "msg": "fix(Time Series): let start and end datasets be the same. Fixes",
        "diff": "diff --git a/src/features/dataset-controls/DatasetSlider.js b/src/features/dataset-controls/DatasetSlider.js @@ -68,12 +68,9 @@ class DatasetSlider extends React.Component {\nif(start){\nthis.props.setStartUuid(start.owner);\n}\n- if(end && end !== start){\n+ if(end){\nthis.props.setEndUuid(end.owner);\n}\n- if(end && end === start){\n- this.props.setEndUuid('UNSET');\n- }\n}\nformatTicks = (t) => {\n",
        "date": "06.05.2019 15:37:15",
        "repo": "iqtlabs/crviz",
        "type": "fix",
        "sim_msg": "feat(Root): header demo MoleculeDataCounter",
        "sim_diff": "diff --git a/demo/molecule/dataCounter/playground b/demo/molecule/dataCounter/playground @@ -23,6 +23,7 @@ const propsMessages = {\nreturn (\n<div>\n+ <h1><pre>MoleculeDataCounter</pre></h1>\n<h2>Basic</h2>\n<div style={stylesSection}>\n<MoleculeDataCounter onChange={consoleValue} label=\"Label\" id=\"demo1\" {...propsMessages} />\n"
    },
    {
        "msg": "fix: watch count regression\n* chore: revert package\n* fix: move to array of watched dirs\nInstead of individually listing them.\nFixes",
        "diff": "diff --git a/lib/monitor/watch.js b/lib/monitor/watch.js @@ -39,25 +39,29 @@ function watch() {\nvar promises = [];\nvar watchedFiles = [];\n- dirs.forEach(function (dir) {\n- var promise = new Promise(function (resolve) {\n- var dotFilePattern = /[/\\\\]\\./;\n+ const promise = new Promise(function (resolve) {\n+ const dotFilePattern = /[/\\\\]\\./;\nvar ignored = Array.from(rootIgnored);\n+ const addDotFile = dirs.filter(dir => dir.match(dotFilePattern));\n// don't ignore dotfiles if explicitly watched.\n- if (!dir.match(dotFilePattern)) {\n+ if (addDotFile.length === 0) {\nignored.push(dotFilePattern);\n}\n+ dirs = dirs.map(dir => {\n// if the directory is a file, it somehow causes\n// windows to lose the filename upon change\nif (fs.statSync(dir).isFile()) {\ndir = path.dirname(dir);\n}\n+ return dir;\n+ });\n+\nvar watchOptions = {\nignorePermissionErrors: true,\n- cwd: dir,\n+ cwd: process.cwd(), // dir,\nignored: ignored,\npersistent: true,\nusePolling: config.options.legacyWatch || false,\n@@ -73,7 +77,7 @@ function watch() {\n}\nvar watcher = chokidar.watch(\n- dir,\n+ dirs,\nObject.assign({}, watchOptions, config.watchOptions || {})\n);\n@@ -114,10 +118,12 @@ function watch() {\nwatchers.push(watcher);\n});\n- promises.push(promise);\n- });\n- return Promise.all(promises).then(function (res) {\n+ return promise.catch(e => {\n+ setTimeout(() => {\n+ throw e;\n+ });\n+ }).then(function (res) {\nutils.log.detail(`watching ${watchedFiles.length} file${\nwatchedFiles.length === 1 ? '' : 's'}`);\nreturn watchedFiles;\n",
        "date": "13.03.2018 21:45:50",
        "repo": "remy/nodemon",
        "type": "fix",
        "sim_msg": "refactor(server): refactoring of watcher",
        "sim_diff": "diff --git a/lib/watcher.js b/lib/watcher.js @@ -26,7 +26,7 @@ function watchPatterns (patterns, watcher) {\npathsToWatch = Array.from(pathsToWatch)\n// watch only common parents, no sub paths\npathsToWatch.forEach((path) => {\n- if (!pathsToWatch.some((p) => p !== path && path.substr(0, p.length + 1) === p + DIR_SEP)) {\n+ if (!pathsToWatch.some((p) => p !== path && path.startsWith(p + DIR_SEP))) {\nwatcher.add(path)\nlog.debug('Watching \"%s\"', path)\n}\n@@ -39,22 +39,18 @@ function checkAnyPathMatch (patterns, path) {\nfunction createIgnore (patterns, excludes) {\nreturn function (path, stat) {\n- if (!stat || stat.isDirectory()) {\n+ if (stat && !stat.isDirectory()) {\n+ return !checkAnyPathMatch(patterns, path) || checkAnyPathMatch(excludes, path)\n+ } else {\nreturn false\n}\n-\n- return !checkAnyPathMatch(patterns, path) || checkAnyPathMatch(excludes, path)\n}\n}\nfunction getWatchedPatterns (patterns) {\nreturn patterns\n- .reduce((array, pattern) => {\n- if (pattern.watched) {\n- array.push(pattern.pattern)\n- }\n- return array\n- }, [])\n+ .filter((pattern) => pattern.watched)\n+ .map((pattern) => pattern.pattern)\n}\nexports.watch = function (patterns, excludes, fileList, usePolling, emitter) {\n"
    },
    {
        "msg": "fix(Responsive): fix usage of `window` for SSR",
        "diff": "diff --git a/src/addons/Responsive/Responsive.js b/src/addons/Responsive/Responsive.js @@ -7,6 +7,7 @@ import {\neventStack,\ngetElementType,\ngetUnhandledProps,\n+ isBrowser,\nMETA,\n} from '../../lib'\n@@ -55,7 +56,8 @@ export default class Responsive extends Component {\nconstructor(...args) {\nsuper(...args)\n- this.state = { width: window.innerWidth }\n+\n+ this.state = { width: isBrowser ? window.innerWidth : 0 }\n}\ncomponentDidMount() {\n",
        "date": "17.10.2017 20:43:07",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "sim_msg": "fix: responsive bug",
        "sim_diff": "diff --git a/src/lib/core.js b/src/lib/core.js @@ -6580,7 +6580,7 @@ export default function (context, pluginCallButtons, plugins, lang, options, _re\nconst responsiveSize = event._responsiveButtonSize;\nif (responsiveSize) {\n- const windowWidth = _w.innerWidth;\n+ const windowWidth = context.element.toolbar.offsetWidth;\nlet responsiveWidth = 'default';\nfor (let i = 1, len = responsiveSize.length; i < len; i++) {\nif (windowWidth < responsiveSize[i]) {\n"
    },
    {
        "msg": "fix: fix release workflow",
        "diff": "diff --git a/.github/workflows/release.yml b/.github/workflows/release.yml @@ -30,7 +30,7 @@ jobs:\nls ~/.npmrc >/dev/null 2>&1 && \\\n[[ $(git describe --exact-match 2> /dev/null || :) =~ -canary ]]; \\\nthen\n- yarn run lerna publish from-git --npm-tag canary --yes\n+ yarn run lerna publish from-git --no-verify-access --npm-tag canary --yes\nelse\necho \"Did not publish canary\"\nfi\n@@ -42,7 +42,7 @@ jobs:\nls ~/.npmrc >/dev/null 2>&1 && \\\n[[ ! $(git describe --exact-match 2> /dev/null || :) =~ -canary ]]; \\\nthen\n- yarn run lerna publish from-git --yes\n+ yarn run lerna publish from-git --no-verify-access --yes\nelse\necho \"Did not publish\"\nfi\n",
        "date": "13.03.2021 15:25:03",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "chore(script): update lerna",
        "sim_diff": "diff --git a/scripts/publish b/scripts/publish @@ -7,7 +7,7 @@ set -e\nif [[ $BRANCH == \"master\" ]];\nthen\n- yarn lerna publish --no-verify-access\n+ yarn lerna publish --yes --no-verify-access\nelif [[ $BRANCH == \"alpha\" || $BRANCH == \"beta\" ]];\nthen\nyarn lerna publish --conventional-prerelease --yes --preid $BRANCH --dist-tag $BRANCH\n"
    },
    {
        "msg": "fix(persistence of notes): user doesn't have to click away to get note to work",
        "diff": "diff --git a/src/features/tooltip/Tooltip.js b/src/features/tooltip/Tooltip.js @@ -14,6 +14,10 @@ class TooltipControls extends React.Component {\nconstructor(props){\nsuper(props)\nthis.state = this.initialState;\n+ /*this.state = {\n+ ...this.state,\n+ showNote:false\n+ }*/\n}\nget initialState(){\n@@ -23,7 +27,6 @@ class TooltipControls extends React.Component {\nwidth:\"300px\",\nposition: [200,200],\ncurrentLabel:\"\",\n- showNote: false,\nnote: {\nid:'',\nnote:{\n@@ -68,7 +71,7 @@ class TooltipControls extends React.Component {\nawait this.setState({note});\nawait this.props.addNote(this.state.note);\n- this.resetBuilder()\n+ //this.resetBuilder()\n} catch(error){\nalert('No search key')\n}\n@@ -96,9 +99,6 @@ class TooltipControls extends React.Component {\ncomponentDidUpdate = (prevProps) => {\nif (prevProps.data !== this.props.data) {\n- if(this.props.data.fieldValue){\n- }\n- else{\nvar note = {...this.state.note}\nnote.id = this.props.data.CRVIZ._SEARCH_KEY\nif (note.id in this.props.notes){\n@@ -111,7 +111,6 @@ class TooltipControls extends React.Component {\n}\n}\n}\n- }\nrender() {\nconst style = {\n",
        "date": "17.07.2019 11:34:54",
        "repo": "iqtlabs/crviz",
        "type": "fix",
        "sim_msg": "feat: add ability to hide tip in tooltip",
        "sim_diff": "diff --git a/src/components/Tooltip/Tooltip.jsx b/src/components/Tooltip/Tooltip.jsx @@ -113,7 +113,8 @@ export default class Tooltip extends React.PureComponent {\nchildren,\ngetContainer,\ntheme,\n- paddingSize\n+ paddingSize,\n+ tip\n} = this.props;\nif (!children) {\n@@ -127,7 +128,7 @@ export default class Tooltip extends React.PureComponent {\nconst dialogProps = {\n...this.props,\nstartingEdge: justify,\n- tooltip: true,\n+ tooltip: tip,\ncontent,\ngetContainer: getContainer || this.getContainer,\nmoveBy,\n@@ -153,5 +154,6 @@ Tooltip.defaultProps = {\nanimationType: \"expand\",\nwithoutDialog: false,\ncontainerSelector: \"#tooltips-container\",\n- immediateShowDelay: null\n+ immediateShowDelay: null,\n+ tip: true\n};\n"
    },
    {
        "msg": "fix(types): swap `declare` order for `*.module.css` files",
        "diff": "diff --git a/types.d.ts b/types.d.ts @@ -41,18 +41,18 @@ declare interface NodeModule {\n}\ndeclare var module: NodeModule;\n-declare module '*.css' { const url: string; export default url; }\n-declare module '*.scss' { const url: string; export default url; }\n-declare module '*.sass' { const url: string; export default url; }\n-declare module '*.styl' { const url: string; export default url; }\n-\n/** Maps authored classNames to their CSS Modules -suffixed generated classNames. */\n-interface Mapping { [key: string]: string; }\n+type Mapping = Record<string, string>;\ndeclare module '*.module.css' { const mapping: Mapping; export default mapping; }\ndeclare module '*.module.scss' { const mapping: Mapping; export default mapping; }\ndeclare module '*.module.sass' { const mapping: Mapping; export default mapping; }\ndeclare module '*.module.styl' { const mapping: Mapping; export default mapping; }\n+declare module '*.css' { const url: string; export default url; }\n+declare module '*.scss' { const url: string; export default url; }\n+declare module '*.sass' { const url: string; export default url; }\n+declare module '*.styl' { const url: string; export default url; }\n+\n// Import Prefixes\ndeclare module 'json:';\ndeclare module 'css:';\n",
        "date": "02.12.2020 14:18:39",
        "repo": "preactjs/wmr",
        "type": "fix",
        "sim_msg": "build: Eslint - fix tsx specific config",
        "sim_diff": "diff --git a/.eslintrc.js b/.eslintrc.js @@ -48,12 +48,12 @@ module.exports = {\nplugins: ['jest'],\noverrides: [\n{\n- files: '*.ts',\n+ files: ['*.ts', '*.tsx'],\nparser: '@typescript-eslint/parser',\nparserOptions: {\nproject: './tsconfig.json',\n},\n- extends: ['airbnb-typescript/base'],\n+ extends: ['airbnb-typescript'],\nplugins: ['@typescript-eslint'],\nrules: {\n'import/prefer-default-export': 'off',\n"
    },
    {
        "msg": "fix: Add support for multi-level filenames",
        "diff": "diff --git a/lib/config/exec.js b/lib/config/exec.js @@ -155,7 +155,9 @@ function exec(nodemonOptions, execMap) {\n// BIG NOTE: user can't do this: nodemon -e *.js\n// because the terminal will automatically expand the glob against\n// the file system :(\n- extension = (extension.match(/[^,.\\s]+/g) || []).join(',');\n+ extension = (extension.match(/[^,*\\s]+/g) || [])\n+ .map(ext => ext.replace(/^\\./, ''))\n+ .join(',');\noptions.ext = extension;\n",
        "date": "08.10.2017 16:03:07",
        "repo": "remy/nodemon",
        "type": "fix",
        "sim_msg": "fix: ERR_INVALID_ARG_TYPE",
        "sim_diff": "diff --git a/lib/plugins/module-paths.js b/lib/plugins/module-paths.js @@ -97,7 +97,7 @@ function formatPath(dir, prefix) {\nif (/(?:^|\\/|\\\\)node_modules[\\\\\\/]?$/.test(dir)) {\nreturn dir.replace(/\\\\/g, '/');\n}\n- return path.resolve(dir, prefix || '', 'node_modules').replace(/\\\\/g, '/');\n+ return path.resolve(dir, typeof prefix === 'string' ? prefix : '', 'node_modules').replace(/\\\\/g, '/');\n}\nfunction getGlobalDir() {\n"
    },
    {
        "msg": "fix(switch.mdx): added a slots table",
        "diff": "diff --git a/packages/chakra-ui-docs/docs/switch.mdx b/packages/chakra-ui-docs/docs/switch.mdx @@ -57,10 +57,15 @@ You can change the checked background color of the switch by passing the `color`\n| `color` | `string` | | The background color of the switch when checked. |\n| `name` | `string` | | The input name of the switch when used in a form. |\n| `value` | `string`, `boolean` | | The value of the switch. |\n-| `children` | `Vue.VNode` | | The children of the switch. |\n| `aria-label` | `string` | | The aria-label of the switch for accessibility. |\n| `aria-labelledby` | `string` | | The aria-labelledby of the switch for accessibility. |\n| `isChecked` | `boolean` | | If `true`, set the switch to the checked state. |\n| `defaultIsChecked` | `boolean` | | If `true`, the checkbox will be initially checked. |\n| `isDisabled` | `boolean` | | If `true`, set the disabled to the invalid state. |\n| `isInvalid` | `boolean` | | If `true`, set the switch to the invalid state. |\n+\n+## Slots\n+\n+| Name | Description |\n+| ------- | ---------------------------------------- |\n+| default | The children of the `CSwitch` component. |\n",
        "date": "02.05.2020 21:52:30",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "sim_msg": "docs(switch): switch documentation",
        "sim_diff": "diff --git a/packages/doc/content/components/switch.mdx b/packages/doc/content/components/switch.mdx @@ -12,46 +12,10 @@ metaDescription: 'Switch Component'\nimport { Switch } from '@gympass/design-system';\n```\n-<label>\n- hello\n- <Switch\n- id=\"switch-unchecked\"\n- a11yLabel=\"This is an example of unchecked switch toggle\"\n- onChange={action => alert('Switch Toggled!')}\n- />\n-</label>\n-\n## Usage\n```javascript reactLive=true\n-<section>\n- <Switch\n- id=\"switch-unchecked\"\n- a11yLabel=\"This is an example of unchecked switch toggle\"\n- onChange={action => alert('Switch Toggled!')}\n- />\n-\n- <Switch\n- checked\n- id=\"switch-checked\"\n- a11yLabel=\"This is an example of checked switch toggle\"\n- onChange={action => alert('Switch Toggled!')}\n- />\n-\n- <Switch\n- secondary\n- checked\n- id=\"switch-secondary\"\n- a11yLabel=\"This is an example of secondary-color switch toggle\"\n- onChange={action => alert('Switch Toggled!')}\n- />\n-\n- <Switch\n- disabled\n- id=\"switch-disabled\"\n- a11yLabel=\"This is an example of disabled switch toggle\"\n- />\n-</section>\n+<Switch />\n```\n## Properties\n"
    },
    {
        "msg": "fix(menu): update MenuOption defaultValue prop to inner value",
        "diff": "diff --git a/packages/chakra-ui-core/src/CMenu/CMenuOption.js b/packages/chakra-ui-core/src/CMenu/CMenuOption.js @@ -176,11 +176,11 @@ const CMenuOptionGroup = {\ntype: [String, Number],\ndefault: null\n},\n- defaultValue: [String, Number]\n+ defaultValue: [String, Number, Array]\n},\ndata () {\nreturn {\n- innerValue: []\n+ innerValue: this.defaultValue || []\n}\n},\ncomputed: {\n",
        "date": "20.07.2021 01:44:19",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "sim_msg": "feat: Small addition to previous commit",
        "sim_diff": "diff --git a/src/components/range/range-utils.js b/src/components/range/range-utils.js @@ -60,12 +60,17 @@ export let mixin = {\n},\ncomputed: {\nclasses () {\n- return {\n+ const cls = {\ndisabled: this.disable,\n'label-always': this.labelAlways,\n- 'has-error': this.error,\n- [`text-${this.color}`]: !this.error && this.color\n+ 'has-error': this.error\n}\n+\n+ if (!this.error && this.color) {\n+ cls[`text-${this.color}`] = true\n+ }\n+\n+ return cls\n},\nlabelColor () {\nreturn this.error\n"
    },
    {
        "msg": "fix(razzle): fix wds served from message",
        "diff": "diff --git a/packages/razzle/config/createConfigAsync.js b/packages/razzle/config/createConfigAsync.js @@ -776,6 +776,7 @@ module.exports = (\ndisableDotRule: true,\n},\nhost: dotenv.raw.HOST,\n+ publicPath: clientPublicPath,\nhot: true,\nnoInfo: true,\noverlay: false,\n@@ -890,7 +891,6 @@ module.exports = (\nif (IS_DEV) {\nconfig.devServer.contentBase = paths.appPublic;\nconfig.devServer.watchContentBase = true;\n- config.devServer.publicPath = '/';\n}\nconfig.plugins = [\n",
        "date": "08.01.2021 16:05:12",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "build(run-protocol): prep:eval:collateral etc.\n- build -> prep\n- invite-committee too",
        "sim_diff": "diff --git a/packages/run-protocol/package.json b/packages/run-protocol/package.json \"scripts\": {\n\"build\": \"yarn build:bundles\",\n\"build:bundles\": \"node ./scripts/build-bundles.js\",\n- \"build:eval:main\": \"agoric deploy ./scripts/init-core.js\",\n+ \"prep:eval:main\": \"agoric deploy ./scripts/init-core.js\",\n+ \"prep:eval:collateral\": \"agoric deploy ./scripts/add-collateral-core.js\",\n+ \"prep:eval:invite-committee\": \"agoric deploy ./scripts/invite-committee-core.js\",\n\"deploy:contracts\": \"agoric deploy scripts/deploy-contracts.js\",\n\"build:eval-permit:psm\": \"node src/psm/writePsmScript.js --permit >scripts/gov-startPSM-permit.json\",\n- \"build:eval-code:psm\": \"node src/psm/writePsmScript.js >scripts/gov-startPSM.js; yarn prettier --write scripts/gov-startPSM.js\",\n+ \"prep:eval-code:psm\": \"node src/psm/writePsmScript.js >scripts/gov-startPSM.js; yarn prettier --write scripts/gov-startPSM.js\",\n\"test\": \"ava\",\n\"test:c8\": \"c8 $C8_OPTIONS ava --config=ava-nesm.config.js\",\n\"test:xs\": \"exit 0\",\n"
    },
    {
        "msg": "fix(razzle): fix optimizaton cofig in dev buil",
        "diff": "diff --git a/packages/razzle/config/createConfigAsync.js b/packages/razzle/config/createConfigAsync.js @@ -931,6 +931,9 @@ module.exports = (\n}),\n].filter(x => x);\n+ // make sure the key exists\n+ config.optimization = {};\n+\nif (!IS_DEV_ENV) {\nconfig.optimization = {\nsplitChunks: webpackOptions.splitChunksConfig,\n",
        "date": "21.08.2021 20:03:15",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "build: Enable code splitting",
        "sim_diff": "diff --git a/build/webpack/webpack.config.production.js b/build/webpack/webpack.config.production.js @@ -33,4 +33,21 @@ module.exports = webpackMerge(commonConfig, {\nwarnings: false,\n}),\n],\n+ optimization: {\n+ splitChunks: {\n+ chunks: 'all',\n+ name: true,\n+ minSize: Infinity,\n+ cacheGroups: {\n+ vendor: {\n+ chunks: 'initial',\n+ name: 'vendor',\n+ filename: 'vendor.[contenthash:5].js',\n+ test: /[\\\\/]node_modules[\\\\/]/,\n+ priority: -10,\n+ enforce: true,\n+ },\n+ },\n+ },\n+ },\n});\n"
    },
    {
        "msg": "fix: fixed an issue where we tried to resolve null as path",
        "diff": "diff --git a/lib/monitor/watch.js b/lib/monitor/watch.js @@ -142,6 +142,7 @@ function filterAndRestart(files) {\n// if there's no matches, then test to see if the changed file is the\n// running script, if so, let's allow a restart\n+ if (config.options.execOptions.script) {\nconst script = path.resolve(config.options.execOptions.script);\nif (matched.result.length === 0 && script) {\nconst length = script.length;\n@@ -155,6 +156,7 @@ function filterAndRestart(files) {\n}\n})\n}\n+ }\nutils.log.detail('changes after filters (before/after): ' +\n[files.length, matched.result.length].join('/'));\n",
        "date": "15.12.2017 14:31:17",
        "repo": "remy/nodemon",
        "type": "fix",
        "sim_msg": "chore(build): update watcher to support more files",
        "sim_diff": "diff --git a/scripts/build/_watch.js b/scripts/build/_watch.js @@ -4,9 +4,11 @@ const runRollup = require('./_run-rollup')\nconst checkSsr = require('./_checkSSR')\nconst dir = process.cwd()\n-const watcher = sane(dir, { glob: ['src/**/*.js'] })\n+const watcher = sane(dir, { glob: ['src/**/*.js'], watchman: true })\nconsole.log(`Start ${dir} watcher`)\n+watcher.on('ready', function () { console.log('ready') });\n+\nwatcher.on('change', async function (filepath, root, stat) {\nconsole.log('file changed', path.join(dir, filepath))\ntry {\n"
    },
    {
        "msg": "fix(razzle-dev-utils): add missing dep",
        "diff": "diff --git a/packages/razzle-dev-utils/package.json b/packages/razzle-dev-utils/package.json \"dependencies\": {\n\"@babel/code-frame\": \"^7.8.3\",\n\"chalk\": \"3.0.0\",\n+ \"jest-message-util\": \"26.3.0\",\n\"react-dev-utils\": \"10.2.0\",\n\"react-error-overlay\": \"^6.0.7\",\n\"resolve\": \"1.17.0\",\n",
        "date": "19.09.2020 15:23:09",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "chore(META): sort dependencies on package.json",
        "sim_diff": "diff --git a/package.json b/package.json \"@s-ui/studio\": \"5\",\n\"babel-jest\": \"20.0.3\",\n\"enzyme\": \"3.3.0\",\n+ \"enzyme-adapter-react-16\": \"1.1.1\",\n\"husky\": \"0.13.4\",\n\"jest\": \"20.0.4\",\n- \"enzyme-adapter-react-16\": \"1.1.1\",\n\"validate-commit-msg\": \"2.12.2\"\n},\n\"dependencies\": {\n"
    },
    {
        "msg": "fix: get rid of viewbox warning",
        "diff": "diff --git a/src/features/visualization/d3-viz.js b/src/features/visualization/d3-viz.js @@ -74,7 +74,6 @@ function d3Viz(rootNode) {\nconst svg = transformRoot.append(\"svg\")\n.style(\"overflow\", \"visible\")\n.attr(\"class\", \"nodeRoot\")\n- .attr('viewBox', \"0 0 100% 100%\");\nconst tooltip = root.append(\"div\").classed(\"viz-tooltip\", true);\nconst legend = root.append(\"div\").classed(\"viz-legend\", true);\n",
        "date": "09.05.2019 13:28:52",
        "repo": "iqtlabs/crviz",
        "type": "fix",
        "sim_msg": "feat: smoother animation for mini-tooltip",
        "sim_diff": "diff --git a/src/charts/mini-tooltip.js b/src/charts/mini-tooltip.js @@ -58,6 +58,7 @@ define(function(require){\n// Animations\nmouseChaseDuration = 100,\n+ fadeInDuration = 200,\nease = d3Ease.easeQuadInOut,\n// tooltip\n@@ -242,7 +243,9 @@ define(function(require){\n*/\nfunction showTooltip(dataPoint) {\nupdateContent(dataPoint);\n- svg.style('visibility', 'visible');\n+ svg\n+ .style('visibility', 'visible')\n+ .style('opacity', 0);\n}\n/**\n@@ -317,8 +320,9 @@ define(function(require){\nlet [tooltipX, tooltipY] = getTooltipPosition(mousePosition, parentChartSize);\nsvg.transition()\n- .duration(mouseChaseDuration)\n+ .duration(fadeInDuration)\n.ease(ease)\n+ .style('opacity', 1)\n.attr('height', chartHeight + margin.top + margin.bottom)\n.attr('width', chartWidth + margin.left + margin.right)\n.attr('transform', `translate(${tooltipX},${tooltipY})`);\n"
    },
    {
        "msg": "fix(stack): filter empty slots",
        "diff": "diff --git a/packages/kiwi-core/src/Stack/index.js b/packages/kiwi-core/src/Stack/index.js @@ -53,7 +53,7 @@ const Stack = {\n_direction = 'column'\n}\n- const children = this.$slots.default\n+ const children = this.$slots.default.filter(e => e.tag)\nconst stackables = children.map((node, index) => {\nlet isLastChild = children.length === index + 1\nlet spacingProps = _isInline\n",
        "date": "19.02.2020 22:50:31",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "sim_msg": "fix: merge text node",
        "sim_diff": "diff --git a/src/lib/core.js b/src/lib/core.js @@ -1538,11 +1538,18 @@ export default function (context, pluginCallButtons, plugins, lang, _options) {\nfor (let n = 0, nLen = childs.length; n < nLen; n++) {\nif (childs[n].textContent.length > 0) childLength++;\n}\n- if (childLength > 0 && child.lastChild && next.firstChild && child.lastChild.nodeType === 3 && next.firstChild.nodeType === 3) childLength--;\nconst l = child.lastChild;\nconst r = next.firstChild;\nconst textOffset = l && r && l.nodeType === 3 && r.nodeType === 3;\n+ let addOffset = l.textContent.length;\n+ let tempL = l.previousSibling;\n+ while(tempL && tempL.nodeType === 3) {\n+ addOffset += tempL.textContent.length;\n+ tempL = tempL.previousSibling;\n+ }\n+\n+ if (childLength > 0 && l && r && l.nodeType === 3 && r.nodeType === 3 && (l.textContent.length > 0 || r.textContent.length > 0)) childLength--;\n// start\nif (includedPath_s && nodePath_s && nodePath_s[depth] > i) {\n@@ -1553,8 +1560,8 @@ export default function (context, pluginCallButtons, plugins, lang, _options) {\nif (nodePath_s[depth + 1] >= 0 && nodePath_s[depth] === i) {\nnodePath_s[depth + 1] += childLength;\nif (textOffset) {\n- if (child.lastChild && child.lastChild.nodeType === 3 && next.firstChild && next.firstChild.nodeType === 3) {\n- offsets.a += child.lastChild.textContent.length;\n+ if (l && l.nodeType === 3 && r && r.nodeType === 3) {\n+ offsets.a += addOffset;\n}\n}\n}\n@@ -1569,8 +1576,8 @@ export default function (context, pluginCallButtons, plugins, lang, _options) {\nif (nodePath_e[depth + 1] >= 0 && nodePath_e[depth] === i) {\nnodePath_e[depth + 1] += childLength;\nif (textOffset) {\n- if (child.lastChild && child.lastChild.nodeType === 3 && next.firstChild && next.firstChild.nodeType === 3) {\n- offsets.b += child.lastChild.textContent.length;\n+ if (l && l.nodeType === 3 && r && r.nodeType === 3) {\n+ offsets.b += addOffset;\n}\n}\n}\n@@ -4133,7 +4140,7 @@ export default function (context, pluginCallButtons, plugins, lang, _options) {\nconst frontZeroWidthCnt = (selectionNode.textContent.match(event._frontZeroWidthReg) || '').length;\nconst so = range.startOffset - frontZeroWidthCnt, eo = range.endOffset - frontZeroWidthCnt;\nselectionNode.textContent = selectionNode.textContent.replace(util.zeroWidthRegExp, '');\n- core.setRange(selectionNode, so < 0 ? 0 : so, selectionNode, eo < 0 ? 0 : eo);\n+ core.setRange(selectionNode, so < 0 ? 0 : so - 1, selectionNode, eo < 0 ? 0 : eo - 1);\n}\nconst textKey = !ctrl && !alt && !event._nonTextKeyCode.test(keyCode);\n"
    },
    {
        "msg": "fix: Ensures config file has been merged before deciding output directory",
        "diff": "diff --git a/packages/wmr/src/lib/normalize-options.js b/packages/wmr/src/lib/normalize-options.js @@ -49,12 +49,6 @@ export async function normalizeOptions(options, mode, configWatchFiles = []) {\n// Files in the output directory are served if no middleware overrides them:\noptions.overlayDir = options.out;\n- // Ensure the output directory exists so that writeFile() doesn't have to create it:\n- // Note: awaiting the promise later lets it run in parallel with the CWD check below.\n- const ensureOutDirPromise = fs.mkdir(options.out, { recursive: true }).catch(err => {\n- console.warn(`Warning: Failed to create output directory: ${err.message}`);\n- });\n-\noptions.public = options.public || 'public';\noptions.publicPath = options.publicPath || '/';\n@@ -81,7 +75,6 @@ export async function normalizeOptions(options, mode, configWatchFiles = []) {\n}\nlet prevPublicFolder = options.public;\n- await ensureOutDirPromise;\nconst pkgFile = resolve(options.cwd, 'package.json');\nlet pkg;\n@@ -192,6 +185,11 @@ export async function normalizeOptions(options, mode, configWatchFiles = []) {\n}\n}\n+ // Ensure the output directory exists so that writeFile() doesn't have to create it\n+ await fs.mkdir(options.out, { recursive: true }).catch(err => {\n+ console.warn(`Warning: Failed to create output directory: ${err.message}`);\n+ });\n+\nif (options.aliases && Object.keys(options.aliases).length > 0) {\ndeprecated(\n'Found \"aliases\" property in WMR\\'s configuration. It will be removed in a future version of WMR. Please switch to \"alias\" instead.'\n",
        "date": "23.01.2022 21:34:12",
        "repo": "preactjs/wmr",
        "type": "fix",
        "sim_msg": "refactor: pass in all options minus redacted values to config resolver",
        "sim_diff": "diff --git a/packages/config/src/index.js b/packages/config/src/index.js @@ -9,12 +9,12 @@ const { normalizeConfig } = require('./normalize')\nconst { handleFiles } = require('./files')\nconst { LIFECYCLE } = require('./lifecycle')\n-const resolveConfig = async function(configFile, { cwd, context } = {}) {\n- const configPath = await getConfigPath(configFile, cwd)\n+const resolveConfig = async function(configFile, options = {}) {\n+ const configPath = await getConfigPath(configFile, options.cwd)\nconst baseDir = dirname(configPath)\nconst config = await configorama(configPath, {\n- options: { context },\n+ options: options,\nvariableSources: [\n/*{\n// Match variables ${secrets:xyz}\n"
    },
    {
        "msg": "fix: windows 8 doesn't support windows-kill\nFixes",
        "diff": "diff --git a/lib/monitor/run.js b/lib/monitor/run.js @@ -16,6 +16,7 @@ var restart = null;\nvar psTree = require('pstree.remy');\nvar path = require('path');\nvar signals = require('./signals');\n+const osRelease = require('os').release();\nfunction run(options) {\nvar cmd = config.command.raw;\n@@ -312,11 +313,18 @@ function kill(child, signal, callback) {\n}\nif (utils.isWindows) {\n+ const taskKill = () => {\n+ try {\n+ exec('taskkill /pid ' + child.pid + ' /T /F');\n+ } catch (e) {\n+ utils.log.error(\"Could not shutdown sub process cleanly\");\n+ }\n+ }\n// We are handling a 'SIGKILL' POSIX signal under Windows the\n// same way it is handled on a UNIX system: We are performing\n// a hard shutdown without waiting for the process to clean-up.\n- if (signal === 'SIGKILL') {\n+ if (signal === 'SIGKILL' || osRelease < 10) {\ndebug('terminating process group by force: %s', child.pid);\n@@ -324,7 +332,7 @@ function kill(child, signal, callback) {\n// process group ('/t') of the child ('/pid') by force ('/f').\n// We need to end all sub processes, because the 'child'\n// process in this context is actually a cmd.exe wrapper.\n- exec(`taskkill /f /t /pid ${child.pid}`);\n+ taskKill();\ncallback();\nreturn;\n}\n@@ -357,9 +365,13 @@ function kill(child, signal, callback) {\n// Therefore we are using 'start' to create a new cmd.exe context.\n// The '/min' option hides the new terminal window and the '/wait'\n// option lets the process wait for the command to finish.\n+ try {\nexecSync(\n`start \"windows-kill\" /min /wait \"${windowsKill}\" -SIGINT ${processId}`\n);\n+ } catch (e) {\n+ taskKill();\n+ }\ncallback();\n} else {\n",
        "date": "08.07.2021 08:42:39",
        "repo": "remy/nodemon",
        "type": "fix",
        "sim_msg": "test(agoric-cli): don't attach stdout (prevents exiting on timeout)",
        "sim_diff": "diff --git a/packages/agoric-cli/integration-tests/test-workflow.js b/packages/agoric-cli/integration-tests/test-workflow.js @@ -34,28 +34,14 @@ test('workflow', async t => {\n// Kill an entire process group.\nconst pkill = (cp, signal = 'SIGINT') => process.kill(-cp.pid, signal);\n- function pspawnStdout(...args) {\n- let output = '';\n- const ps = pspawn(...args);\n- ps.childProcess.stdout.on('data', chunk => {\n- output += chunk.toString('utf-8');\n- });\n- ps.then(ret => {\n- if (ret !== 0) {\n- process.stdout.write(output);\n- }\n- });\n- return ps;\n- }\n-\n// Run all main programs with the '--sdk' flag if we are in agoric-sdk.\nconst extraArgs = fs.existsSync(`${__dirname}/../../cosmic-swingset`)\n? ['--sdk']\n: [];\nfunction myMain(args) {\n// console.error('running agoric-cli', ...extraArgs, ...args);\n- return pspawnStdout(`agoric`, [...extraArgs, ...args], {\n- stdio: ['ignore', 'pipe', 'inherit'],\n+ return pspawn(`agoric`, [...extraArgs, ...args], {\n+ stdio: ['ignore', 'inherit', 'inherit'],\nenv: { ...process.env, DEBUG: 'agoric' },\ndetached: true,\n});\n@@ -85,6 +71,7 @@ test('workflow', async t => {\ntry {\nprocess.on('SIGINT', runFinalizers);\n+ process.on('exit', runFinalizers);\nprocess.chdir(name);\n// ==============\n"
    },
    {
        "msg": "fix(environment): Fix content security policy",
        "diff": "diff --git a/config/environment.js b/config/environment.js @@ -59,7 +59,7 @@ module.exports = function(environment) {\nENV.contentSecurityPolicy = {\n\"default-src\": \"'self' *.fastly.net\",\n- \"connect-src\": \"'self' https://s3.amazonaws.com *.algolia.net *.fastly.net\",\n+ \"connect-src\": \"'self' https://s3.amazonaws.com *.algolia.net *.algolianet.com *.fastly.net\",\n\"script-src\": \"'self' unsafe-inline use.typekit.net 'sha256-36n/xkZHEzq3lo4O+0jXMYbl+dWu3C8orOFHtcAH6HU=' *.fastly.net https://www.google-analytics.com\",\n\"font-src\": \"'self' data://* https://fonts.gstatic.com *.fastly.net\",\n\"img-src\": \"'self' data://* *.fastly.net https://www.google-analytics.com\",\n",
        "date": "05.04.2017 21:11:06",
        "repo": "ember-learn/ember-api-docs",
        "type": "fix",
        "sim_msg": "chore(url): Update API URLs",
        "sim_diff": "diff --git a/webpack.config.js b/webpack.config.js @@ -72,8 +72,8 @@ module.exports = config(({ development, bugsnagApiKey, production, release, vers\n},\nplugins: [\nnew EnvironmentPlugin({\n- API_URL: 'https://toggl.com/api',\n- TOGGL_WEB_HOST: 'https://toggl.com',\n+ API_URL: 'https://track.toggl.com/api',\n+ TOGGL_WEB_HOST: 'https://toggl.com/track',\nBUGSNAG_API_KEY: bugsnagApiKey,\nDEBUG: development,\nGA_TRACKING_ID: 'UA-3215787-22',\n"
    },
    {
        "msg": "fix: revert stdin handling\nFixes\nFixes\nRef\nMeans that ctrl^l does not instantly clear the terminal. It requires a\nnew line directly after.",
        "diff": "diff --git a/lib/nodemon.js b/lib/nodemon.js @@ -95,48 +95,43 @@ function nodemon(settings) {\nutils.log.detail('reading config ' + file);\n});\n- // echo out notices about running state\n- if (config.options.stdin) {\n+ if (config.options.stdin && config.options.restartable) {\n+ // allow nodemon to restart when the use types 'rs\\n'\n+ process.stdin.resume();\n+ process.stdin.setEncoding('utf8');\n+ process.stdin.on('data', data => {\n+ const str = data.toString().trim().toLowerCase();\n+\n+ // if the keys entered match the restartable value, then restart!\n+ if (str === config.options.restartable) {\n+ bus.emit('restart');\n+ } else if (data.charCodeAt(0) === 12) { // ctrl+l\n+ console.clear();\n+ }\n+ });\n+ } else if (config.options.stdin) {\n// so let's make sure we don't eat the key presses\n// but also, since we're wrapping, watch out for\n// special keys, like ctrl+c x 2 or '.exit' or ctrl+d or ctrl+l\nvar ctrlC = false;\nvar buffer = '';\n- const rs = config.options.restartable;\n- process.stdin.setEncoding('utf8');\nprocess.stdin.on('data', function (data) {\ndata = data.toString();\nbuffer += data;\nconst chr = data.charCodeAt(0);\n// if restartable, echo back\n- if (rs) {\n- if (chr === 13) {\n- process.stdout.write('\\n');\n- }\n- // this intentionally prevents cursor keys from working.\n- process.stdout.write(String.fromCharCode(chr));\n- }\n-\nif (chr === 3) {\nif (ctrlC) {\nprocess.exit(0);\n}\n- // if restartable, assume ctrl+c will break immediately\n- if (rs) {\n- bus.emit('quit', 130);\n- }\nctrlC = true;\nreturn;\n- } else if (!rs && (buffer === '.exit' || chr === 4)) { // ctrl+d\n+ } else if (buffer === '.exit' || chr === 4) { // ctrl+d\nprocess.exit();\n} else if (chr === 13 || chr === 10) { // enter / carriage return\n- const input = buffer.toString().trim().toLowerCase();\n- if (input === rs) {\n- bus.emit('restart');\n- }\nbuffer = '';\n} else if (chr === 12) { // ctrl+l\nconsole.clear();\n@@ -144,7 +139,6 @@ function nodemon(settings) {\n}\nctrlC = false;\n});\n- process.stdin.resume();\nif (process.stdin.setRawMode) {\nprocess.stdin.setRawMode(true);\n}\n",
        "date": "13.07.2018 12:36:29",
        "repo": "remy/nodemon",
        "type": "fix",
        "sim_msg": "fix: crash report start",
        "sim_diff": "diff --git a/src/main/controllers/crash-report-service.js b/src/main/controllers/crash-report-service.js @@ -9,12 +9,20 @@ module.exports = {\nstartCrashReport: async () => {\nif (process.env.NODE_ENV !== 'development' && process.env.MODE !== 'test') {\nconst result = await guideSettings.findAll();\n- if (result.crashReportAgreement !== 0 && !hasStarted) {\n- log.info('RESULT', result);\n+ if (result[0].crashReportAgreement && !hasStarted) {\nhasStarted = true;\ninit({\ndsn: sentry.dsn\n});\n+ log.info('CRASH REPORT STARTED');\n+ } else {\n+ log.info(\n+ 'CRASH REPORT NOT STARTED ',\n+ 'crashReportAgreement: ',\n+ result[0].crashReportAgreement,\n+ 'hasStarted: ',\n+ hasStarted\n+ );\n}\n}\nreturn;\n"
    },
    {
        "msg": "fix(Button): fix animated prop type definition",
        "diff": "diff --git a/src/elements/Button/Button.d.ts b/src/elements/Button/Button.d.ts @@ -22,7 +22,7 @@ export interface ButtonProps {\nactive?: boolean;\n/** A button can animate to show hidden content. */\n- animated?: 'fade' | 'vertical';\n+ animated?: boolean | 'fade' | 'vertical';\n/** A button can be attached to the top or bottom of other content. */\nattached?: 'left' | 'right' | 'top' | 'bottom';\n",
        "date": "21.07.2017 21:41:00",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "sim_msg": "fix: typescript definitions for button",
        "sim_diff": "diff --git a/src/js/components/Button/index.d.ts b/src/js/components/Button/index.d.ts @@ -58,16 +58,15 @@ export interface ButtonProps {\nas?: PolymorphicType;\n}\n-type anchorType = JSX.IntrinsicElements['a'];\n+type anchorType = Omit<JSX.IntrinsicElements['a'], 'color'>;\n+type buttonType = Omit<JSX.IntrinsicElements['button'], 'color'>;\n+type extendType = anchorType & buttonType;\n-export interface ButtonExtendedProps\n- extends ButtonProps,\n- Omit<JSX.IntrinsicElements['button'], 'color'> {}\n+export interface ButtonExtendedProps extends ButtonProps, extendType {}\n// Keep type alias for backwards compatibility.\n-export type ButtonType = ButtonProps &\n- Omit<JSX.IntrinsicElements['button'], 'color'>;\n+export type ButtonType = ButtonProps & extendType;\n-declare const Button: React.FC<ButtonExtendedProps & anchorType>;\n+declare const Button: React.FC<ButtonExtendedProps>;\nexport { Button };\n"
    },
    {
        "msg": "fix: docs deps",
        "diff": "diff --git a/packages/chakra-ui-docs/package.json b/packages/chakra-ui-docs/package.json \"dev\": \"nuxt\",\n\"build\": \"nuxt generate\",\n\"start\": \"nuxt start\",\n- \"docs:build\": \"nuxt build\",\n+ \"docs:build\": \"nuxt \",\n\"lint\": \"eslint --ext .js,.vue --ignore-path .gitignore .\"\n},\n\"lint-staged\": {\n\"@chakra-ui/vue\": \"^0.3.10\",\n\"@chakra-ui/theme-vue\": \"^0.2.3\",\n\"@fortawesome/free-brands-svg-icons\": \"^5.12.0\",\n- \"@fortawesome/free-solid-svg-icons\": \"^5.11.gi2\",\n+ \"@fortawesome/free-solid-svg-icons\": \"^5.11.2\",\n\"@mdx-js/vue-loader\": \"^1.5.7\",\n\"@nuxtjs/dotenv\": \"^1.4.0\",\n\"@nuxtjs/emotion\": \"^0.0.1\",\n",
        "date": "12.04.2020 19:09:37",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "sim_msg": "chore(ci): update prepare scripts",
        "sim_diff": "diff --git a/package.json b/package.json \"docs-gen\": \"cross-env NODE_ENV=docs nuxt generate -c docs/nuxt.config.js\",\n\"lint\": \"eslint --ext .js,.md,.vue ./\",\n\"postinstall\": \"opencollective || exit 0\",\n- \"prepare\": \"husky install\",\n+ \"prepare\": \"husky install && yarn run build\",\n\"prettify\": \"prettier --write '**/*.{js,json,md,scss,ts,vue}'\",\n\"release\": \"yarn run prettify && yarn run test && yarn run build && yarn run release-notes && standard-version\",\n\"release-notes\": \"jiti ./scripts/release-notes\",\n"
    },
    {
        "msg": "fix(create-razzle-app): allow examples with workspaces",
        "diff": "diff --git a/packages/create-razzle-app/lib/utils/install.js b/packages/create-razzle-app/lib/utils/install.js @@ -56,7 +56,7 @@ function getInstallArgs(cmd, packages, opts) {\nconst args = ['install', '--save', '--save-exact'];\nreturn args.concat(packages, ['--verbose']);\n} else if (cmd.cmd === 'yarn') {\n- const args = ['add'];\n+ const args = ['add', '-W'];\nreturn args.concat(packages,\nparseInt(cmd.version[0]) !== 2 ? ['--ignore-engines'] : []);\n}\n",
        "date": "11.03.2021 23:47:40",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "chore: remove unused scripts from package.json",
        "sim_diff": "diff --git a/package.json b/package.json ],\n\"scripts\": {\n\"preinstall\": \"/usr/bin/env bash -c \\\"[[ $npm_execpath = *'yarn'* ]] || (echo 'use yarn' && exit 1)\\\"\",\n- \"bootstrap\": \"lerna bootstrap\",\n\"start\": \"cd packages/template-react; yarn start\",\n\"start:minimal\": \"cd packages/template-minimal; yarn start\",\n\"start:graphql\": \"cd packages/template-graphql; yarn start\",\n\"release:candidate\": \"lerna publish --force-publish=* --cd-version=premajor --preid=rc --npm-tag=next\",\n\"release:candidate:feature\": \"lerna publish --cd-version=preminor --preid=rc --npm-tag=next\",\n\"release:next\": \"lerna publish --cd-version=prerelease --preid=rc --npm-tag=next\",\n- \"update\": \"yarn upgrade-interactive --latest && rm yarn.lock && yarn\",\n- \"postupdate\": \"lerna clean --yes && lerna bootstrap\",\n- \"reset\": \"git clean -dfx && yarn && yarn bootstrap\",\n+ \"reset\": \"git clean -dfx && yarn\",\n\"fmt\": \"prettier --write '**/*.{js,json,css}' '**/README.md'\",\n\"precommit\": \"lint-staged\",\n\"pull-wiki\": \"git subtree pull --prefix docs wiki master --squash --message='docs(wiki): update wiki subtree'\",\n"
    },
    {
        "msg": "fix: allow getting string only loaders",
        "diff": "diff --git a/packages/razzle-dev-utils/makeLoaderFinder.js b/packages/razzle-dev-utils/makeLoaderFinder.js @@ -6,7 +6,7 @@ const makeLoaderFinder = loaderName => rule => {\n// Checks if there's a loader string in rule.loader matching loaderRegex.\nconst inLoaderString =\n- typeof rule.loader === 'string' && rule.loader.match(loaderRegex);\n+ typeof rule.loader === 'string' && (rule.loader.match(loaderRegex) || rule.loader === loaderName);\n// Checks if there is an object inside rule.use with loader matching loaderRegex, OR\n// Checks another condition, if rule is not an object, but pure string (ex: \"style-loader\", etc)\n@@ -15,8 +15,8 @@ const makeLoaderFinder = loaderName => rule => {\nrule.use.find(\nloader =>\n(typeof loader.loader === 'string' &&\n- loader.loader.match(loaderRegex)) ||\n- (typeof loader === 'string' && loader.match(loaderRegex))\n+ (loader.loader.match(loaderRegex)) || rule.loader === loaderName) ||\n+ (typeof loader === 'string' && (loader.match(loaderRegex) || loader === loaderName))\n);\nreturn inUseArray || inLoaderString;\n",
        "date": "17.09.2020 21:03:36",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "test(rules): Update example rules",
        "sim_diff": "diff --git a/Utilities/config/rules-examples.js b/Utilities/config/rules-examples.js module.exports = [\n- { test: /\\.(png|jpg)$/, use: 'url-loader?limit=81920', exclude: /test[^\\.]*\\.(png|jpg)$/ },\n+ { test: /\\.(png|jpg)$/, use: 'url-loader?limit=81920' },\n{ test: /\\.html$/, loader: 'html-loader' },\n{ test: /\\.css$/, use: ['style-loader', 'css-loader', 'postcss-loader'] },\n{ test: /\\.cjson$/, loader: 'hson-loader' },\n"
    },
    {
        "msg": "fix(examples): monorepo example running as expected",
        "diff": "diff --git a/examples/with-monorepo/package.json b/examples/with-monorepo/package.json \"version\": \"4.0.0-canary.16\",\n\"license\": \"MIT\",\n\"scripts\": {\n- \"start-1\": \"RAZZLE_APP_PATH=basic-1 razzle start\",\n- \"build-1\": \"RAZZLE_APP_PATH=basic-1 razzle build\",\n- \"test-1\": \"RAZZLE_APP_PATH=basic-1 razzle test --env=jsdom\",\n- \"start:prod-1\": \"RAZZLE_APP_PATH=basic-1 NODE_ENV=production node basic-1/build/server.js\",\n- \"start-2\": \"RAZZLE_APP_PATH=basic-2 razzle start\",\n- \"build-2\": \"RAZZLE_APP_PATH=basic-2 razzle build\",\n- \"test-2\": \"RAZZLE_APP_PATH=basic-2 razzle test --env=jsdom\",\n- \"start:prod-2\": \"RAZZLE_APP_PATH=basic-2 NODE_ENV=production node basic-2/build/server.js\"\n+ \"start-1\": \"cross-env RAZZLE_APP_PATH=basic-1 razzle start\",\n+ \"build-1\": \"cross-env RAZZLE_APP_PATH=basic-1 razzle build\",\n+ \"test-1\": \"cross-env RAZZLE_APP_PATH=basic-1 razzle test --env=jsdom\",\n+ \"start:prod-1\": \"cross-env RAZZLE_APP_PATH=basic-1 NODE_ENV=production node basic-1/build/server.js\",\n+ \"start-2\": \"cross-env RAZZLE_APP_PATH=basic-2 PORT=3002 razzle start\",\n+ \"build-2\": \"cross-env RAZZLE_APP_PATH=basic-2 PORT=3002 razzle build\",\n+ \"test-2\": \"cross-env RAZZLE_APP_PATH=basic-2 PORT=3002 razzle test --env=jsdom\",\n+ \"start:prod-2\": \"cross-env RAZZLE_APP_PATH=basic-2 PORT=3002 NODE_ENV=production node basic-2/build/server.js\",\n+ \"start\": \"concurrently \\\"yarn start-1\\\" \\\"yarn start-2\\\"\",\n+ \"start:prod\": \"concurrently \\\"yarn start:prod-1\\\" \\\"yarn start:prod-2\\\"\",\n+ \"build\": \"concurrently \\\"yarn build-1\\\" \\\"yarn build-2\\\"\"\n},\n\"workspaces\": [\n\"basic-1\",\n\"basic-2\"\n],\n\"devDependencies\": {\n+ \"concurrently\": \"^5.3.0\",\n+ \"cross-env\": \"^7.0.3\",\n\"razzle\": \"4.0.0-canary.8\",\n\"razzle-dev-utils\": \"4.0.0-canary.8\",\n\"mini-css-extract-plugin\": \"^0.9.0\",\n",
        "date": "11.01.2021 18:04:14",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "chore(META): use sui-mono phoenix",
        "sim_diff": "diff --git a/package.json b/package.json \"lint\": \"npm run lint:js && npm run lint:sass\",\n\"lint:js\": \"sui-lint js\",\n\"lint:sass\": \"sui-lint sass\",\n- \"phoenix\": \"rm -Rf node_modules && npm i && sui-studio clean-modules && sui-studio run-parallel npm i\",\n+ \"phoenix\": \"npx @s-ui/mono phoenix\",\n\"precommit\": \"sui-precommit run\",\n\"release\": \"sui-studio release\",\n\"start\": \"sui-studio start\",\n"
    },
    {
        "msg": "fix(Popup): Remove hideOnScroll from window scroll",
        "diff": "diff --git a/src/modules/Popup/Popup.js b/src/modules/Popup/Popup.js @@ -306,6 +306,7 @@ export default class Popup extends Component {\nhandlePortalUnmount = (e) => {\ndebug('handlePortalUnmount()')\n+ window.removeEventListener('scroll', this.hideOnScroll)\nconst { onUnmount } = this.props\nif (onUnmount) onUnmount(e, this.props)\n}\n",
        "date": "18.09.2017 03:00:47",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "sim_msg": "refactor: comment in conversation popup",
        "sim_diff": "diff --git a/botfront/imports/ui/components/nlu/activity/Activity.jsx b/botfront/imports/ui/components/nlu/activity/Activity.jsx @@ -223,6 +223,7 @@ function Activity(props) {\n}\nsetOpenConvPopup(-1);\n}}\n+ // closeOnScroll // disabled as it also closes when scrolling inside the popup\ntrigger={(\n<IconButton\n// basic\n@@ -233,7 +234,7 @@ function Activity(props) {\nclassName={`action-icon ${!convId && 'inactive'}`}\nname='comments'\nsize='mini'\n- // closeOnScroll // disabled as it also closes when scrolling inside the popup\n+\nonClick={() => {\nif (row.index !== openConvPopup) {\nsetOpenConvPopup(row.index);\n"
    },
    {
        "msg": "fix: git not found error\nFixes by adding git seperately",
        "diff": "diff --git a/Dockerfile.gh b/Dockerfile.gh FROM node:alpine\nLABEL maintainer=\"rashley-iqt <rashley@iqt.org>\"\n-RUN apk update\n-RUN git config --global user.email \"clewis@iqt.org\"\n-RUN git config --global user.name \"Charlie Lewis\"\n+RUN apk update && apk add git\n+RUN git config --global user.email \"rashley@iqt.org\"\n+RUN git config --global user.name \"rashley-iqt\"\nCOPY . /app\nWORKDIR /app\n",
        "date": "25.06.2018 12:07:35",
        "repo": "iqtlabs/crviz",
        "type": "fix",
        "sim_msg": "feat: bump Dockerfile to node v16",
        "sim_diff": "diff --git a/Dockerfile b/Dockerfile # ---- Base Node ----\n-FROM node:14-alpine AS base\n+FROM node:16-alpine AS base\n# set working directory\nWORKDIR /usr/src/app\n@@ -10,7 +10,7 @@ COPY package*.json ./\n# ---- Dependencies ----\nFROM base AS basedependencies\n## Install build toolchain, install node deps and compile native add-ons\n-RUN apk add --no-cache python make g++ git\n+RUN apk add --no-cache python3 make g++ git\nFROM basedependencies as dependencies\n# install node packages\n"
    },
    {
        "msg": "fix: TokenDestructible typo fron->from",
        "diff": "diff --git a/test/TokenDestructible.test.js b/test/TokenDestructible.test.js @@ -7,7 +7,10 @@ contract('TokenDestructible', function (accounts) {\nlet destructible;\nbeforeEach(async function () {\n- destructible = await TokenDestructible.new({ fron: accounts[0], value: web3.toWei('10', 'ether') });\n+ destructible = await TokenDestructible.new({\n+ from: accounts[0],\n+ value: web3.toWei('10', 'ether'),\n+ });\n});\nit('should send balance to owner after destruction', async function () {\n",
        "date": "31.12.2017 19:06:38",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "fix",
        "sim_msg": "test: add one more check for returning any extra pulled tokens",
        "sim_diff": "diff --git a/test/balancer/balancer-supply.js b/test/balancer/balancer-supply.js @@ -63,7 +63,11 @@ describe('Balancer-Supply', function () {\nit('... supply exact tokens for LP tokens', async () => {\nconst lpTokenBalanceBefore = await balanceOf(balancerPairs[i].poolAddress, to);\nconsole.log(balancerPairs[i].tokens);\n+ const proxyBalanceAmounts = [];\nfor (let j = 0; j < balancerPairs[i].tokens.length; j++) {\n+ proxyBalanceAmounts.push(\n+ await balanceOf(balancerPairs[i].tokens[j], proxy.address),\n+ );\nawait buyTokenIfNeeded(\nbalancerPairs[i].tokens[j],\nsenderAcc,\n@@ -88,6 +92,11 @@ describe('Balancer-Supply', function () {\nconst lpTokenDiff = lpTokenBalanceAfter.sub(lpTokenBalanceBefore);\nconsole.log(lpTokenDiff.toString());\nexpect(lpTokenDiff).to.be.gt(0);\n+ for (let j = 0; j < balancerPairs[i].tokens.length; j++) {\n+ expect(\n+ await balanceOf(balancerPairs[i].tokens[j], proxy.address),\n+ ).to.be.eq(proxyBalanceAmounts[j]);\n+ }\n}).timeout(50000);\nit('... supply only first token for LP tokens', async () => {\n"
    },
    {
        "msg": "fix(TextArea): fix typings definition",
        "diff": "diff --git a/src/addons/TextArea/TextArea.d.ts b/src/addons/TextArea/TextArea.d.ts @@ -31,7 +31,7 @@ export interface TextAreaOnChangeData extends TextAreaProps {\nvalue?: string;\n}\n-declare class TextArea extends React.Component<TextArea, {}> {\n+declare class TextArea extends React.Component<TextAreaProps, {}> {\nfocus: () => void;\n}\n",
        "date": "28.08.2017 00:54:59",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "sim_msg": "docs(core-text-area): add description for value vs defaultValue props",
        "sim_diff": "diff --git a/packages/TextArea/TextArea.jsx b/packages/TextArea/TextArea.jsx @@ -218,7 +218,8 @@ TextArea.propTypes = {\n*/\nhint: PropTypes.string,\n/**\n- * The value.\n+ * Use `value` for controlled textarea. For uncontrolled textarea, use React's built-in `defaultValue` prop.\n+ * See examples below for more details.\n*/\nvalue: PropTypes.string,\n/**\n"
    },
    {
        "msg": "fix: Catch for when mkdir errors due to existing file",
        "diff": "diff --git a/packages/create-wmr/src/index.js b/packages/create-wmr/src/index.js @@ -25,7 +25,16 @@ sade('create-wmr [dir]', true)\nprocess.exit(1);\n}\ncwd = resolve(cwd, dir || '.');\n+ try {\nawait fs.mkdir(cwd, { recursive: true });\n+ } catch {\n+ process.stderr.write(\n+ `${red(\n+ `There is already a file with the same name as the directory you specified. Please provide a different directory name`\n+ )}\\n`\n+ );\n+ process.exit(1);\n+ }\nprocess.chdir(cwd);\n}\nconst ctx = {\n",
        "date": "25.02.2021 18:19:03",
        "repo": "preactjs/wmr",
        "type": "fix",
        "sim_msg": "build(fix): test as output folder when not in production",
        "sim_diff": "diff --git a/build/paths.js b/build/paths.js @@ -7,7 +7,7 @@ const path = require('path')\nconst src = path.resolve(process.cwd(), 'template')\nconst pub = path.resolve(process.cwd(), 'template/public')\n// outpur dir\n-const output = path.resolve(process.cwd(), 'dist')\n+const output = path.resolve(process.cwd(), process.env.NODE_ENV === 'production' ? 'dist' : 'test')\n// exports project folders\nmodule.exports = {\n"
    },
    {
        "msg": "fix(storybook): refactor progress story",
        "diff": "diff --git a/packages/chakra-ui-core/src/Progress/Progress.stories.js b/packages/chakra-ui-core/src/Progress/Progress.stories.js import { storiesOf } from '@storybook/vue'\n-import { CSSReset, Progress as KProgress, Stack } from '..'\n+import { CSSReset, Progress as KProgress, Stack, Box } from '..'\nstoriesOf('UI | Progress', module)\n- .add('Default Progress', () => ({\n- components: { CSSReset, KProgress },\n+ .addDecorator(story => ({\n+ components: { CSSReset, Box, story: story() },\ntemplate: `\n- <div>\n- <CSSReset />\n- <KProgress :value=\"80\" />\n- </div>\n- `\n+ <Box w=\"full\" maxWidth=\"400px\" mx=\"auto\" mt=\"8\" p=\"3\">\n+ <CSSReset></CSSReset>\n+ <story></story>\n+ </Box>`\n+ }))\n+\n+ .add('Default Progress', () => ({\n+ components: { KProgress },\n+ template: `<KProgress :value=\"80\" />`\n}))\n.add('With stripe', () => ({\n- components: { CSSReset, KProgress },\n- template: `\n- <div>\n- <CSSReset />\n- <KProgress hasStripe :value=\"64\" />\n- </div>\n- `\n+ components: { KProgress },\n+ template: `<KProgress hasStripe :value=\"64\" />`\n}))\n.add('With sizes', () => ({\n- components: { CSSReset, KProgress, Stack },\n+ components: { KProgress, Stack },\ntemplate: `\n- <div>\n- <CSSReset />\n<Stack :spacing=\"5\">\n<KProgress rounded=\"sm\" color=\"green\" size=\"sm\" />\n<KProgress color=\"green\" size=\"md\" />\n<KProgress color=\"green\" size=\"lg\" />\n<KProgress color=\"green\" height=\"32px\" />\n- </Stack>\n- </div>\n- `\n+ </Stack>`\n}))\n.add('With color', () => ({\n- components: { CSSReset, KProgress },\n- template: `\n- <div>\n- <CSSReset />\n- <KProgress color=\"pink\" hasStripe />\n- </div>\n- `\n+ components: { KProgress },\n+ template: `<KProgress color=\"pink\" hasStripe />`\n}))\n",
        "date": "15.03.2020 15:57:01",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "sim_msg": "chore(ui): small tweak to QCircularProgress",
        "sim_diff": "diff --git a/ui/src/components/circular-progress/QCircularProgress.js b/ui/src/components/circular-progress/QCircularProgress.js @@ -109,7 +109,7 @@ export default Vue.extend({\nrender (h) {\nreturn h('div', {\nstaticClass: 'q-circular-progress',\n- 'class': `q-circular-progress--${this.indeterminate === true ? 'in' : ''}determinate`,\n+ class: `q-circular-progress--${this.indeterminate === true ? 'in' : ''}determinate`,\nstyle: this.sizeStyle,\non: this.$listeners,\nattrs: {\n"
    },
    {
        "msg": "fix: :bug: no amp",
        "diff": "diff --git a/src/lib/og-image-url-build.js b/src/lib/og-image-url-build.js @@ -2,7 +2,7 @@ const objectToQueryParams = obj => {\nconst params = Object.entries(obj).map(\n([key, value]) => `${key}=${value}`\n)\n- return '?' + params.join('&amp;')\n+ return '?' + params.join('&')\n}\nexport const ogImageUrl = (author, website, title) => {\n",
        "date": "12.07.2021 06:18:01",
        "repo": "spences10/cheat-sheets",
        "type": "fix",
        "sim_msg": "chore: Handle errors in OG image generation",
        "sim_diff": "diff --git a/sites/shared/prebuild/og/index.mjs b/sites/shared/prebuild/og/index.mjs @@ -130,7 +130,8 @@ const writeAsPng = async (svg, site, slug) => {\n.resize({ width: 1200 })\n.toBuffer(async (err, data, info) => {\nif (err) console.log(err)\n- return await fs.writeFile(path.join(dir, 'og.png'), data)\n+ if (data) return await fs.writeFile(path.join(dir, 'og.png'), data)\n+ else console.log('No data for', slug)\n})\n}\n@@ -149,5 +150,9 @@ export const generateOgImage = async (data) => {\n// Inject into SVG\nconst meta = await getMetaData(data)\nconst svg = decorateSvg(meta)\n+ try {\nawait writeAsPng(svg, data.site, data.slug)\n+ } catch (err) {\n+ console.log('Could not write PNG for', data, meta)\n+ }\n}\n"
    },
    {
        "msg": "fix: Correcting tsconfig `files` for `include` in template",
        "diff": "diff --git a/packages/create-wmr/tpl/tsconfig.json b/packages/create-wmr/tpl/tsconfig.json \"allowSyntheticDefaultImports\": true,\n\"downlevelIteration\": true\n},\n- \"files\": [\"./node_modules/wmr/index.d.ts\"],\n+ \"include\": [\"node_modules/wmr/index.d.ts\"],\n\"typeAcquisition\": {\n\"enable\": true\n}\n",
        "date": "27.03.2021 11:54:42",
        "repo": "preactjs/wmr",
        "type": "fix",
        "sim_msg": "chore: updated tsconfig.json",
        "sim_diff": "diff --git a/tsconfig.json b/tsconfig.json \"allowSyntheticDefaultImports\": true,\n\"forceConsistentCasingInFileNames\": true,\n\"resolveJsonModule\": true,\n- \"skipLibCheck\": true\n+ \"skipLibCheck\": true,\n+ \"strictNullChecks\": false\n},\n\"include\": [\"packages\", \"typings\"],\n\"exclude\": [\"node_modules\", \"**/__test?__\", \"**/dist\"]\n"
    },
    {
        "msg": "fix: Quote zero-length strings in arguments\nIf a zero-length string is passed, it does not get properly quoted, and then it is not properly passed to the child process",
        "diff": "diff --git a/lib/utils/index.js b/lib/utils/index.js @@ -69,7 +69,7 @@ var utils = (module.exports = {\nargs.map(function (arg) {\n// if an argument contains a space, we want to show it with quotes\n// around it to indicate that it is a single argument\n- if (arg.indexOf(' ') === -1) {\n+ if (arg.length > 0 && arg.indexOf(' ') === -1) {\nreturn arg;\n}\n// this should correctly escape nested quotes\n",
        "date": "01.05.2019 00:04:25",
        "repo": "remy/nodemon",
        "type": "fix",
        "sim_msg": "docs(api): fix array API docs that vanished because of\nFix",
        "sim_diff": "diff --git a/docs/source/api.js b/docs/source/api.js @@ -23,7 +23,7 @@ const files = [\n'lib/schematype.js',\n'lib/virtualtype.js',\n'lib/error/index.js',\n- 'lib/types/array.js'\n+ 'lib/types/core_array.js'\n];\nmodule.exports = {\n@@ -52,6 +52,9 @@ function parse() {\nreplace('/index', '');\nconst lastSlash = name.lastIndexOf('/');\nname = name.substr(lastSlash === -1 ? 0 : lastSlash + 1);\n+ if (name === 'core_array') {\n+ name = 'array';\n+ }\nconst data = {\nname: name.charAt(0).toUpperCase() === name.charAt(0) ? name : name.charAt(0).toUpperCase() + name.substr(1),\nprops: []\n"
    },
    {
        "msg": "fix: don't test for jest version",
        "diff": "diff --git a/packages/razzle/config/createJestConfig.js b/packages/razzle/config/createJestConfig.js @@ -4,7 +4,6 @@ const fs = require('fs');\nconst chalk = require('chalk');\nconst jest = require('jest');\n-const jestMajorVersion = parseInt(jest.default.getVersion().split('.')[0]);\n// first search for setupTests.ts file\n// if .ts file not exists then looks for setupTests.js\nfunction getSetupTestsFilePath(paths) {\n@@ -33,7 +32,7 @@ module.exports = (\n// TODO: I don't know if it's safe or not to just use / as path separator\n// in Jest configs. We need help from somebody with Windows to determine this.\n- const config = Object.assign(\n+ const config =\n{\ncollectCoverageFrom: ['src/**/*.{js,jsx,ts,tsx}', '!src/**/*.d.ts'],\n@@ -61,15 +60,9 @@ module.exports = (\n'^react-native$': 'react-native-web',\n},\nmoduleFileExtensions: ['js', 'jsx', 'json', 'ts', 'tsx'],\n- },\n- jestMajorVersion >= 24\n- ? {\n- setupFilesAfterEnv: setupTestsFile ? [setupTestsFile] : [],\n- }\n- : {\n- setupTestFrameworkScriptFile: setupTestsFile,\n+ setupFilesAfterEnv: setupTestsFile ? [setupTestsFile] : []\n}\n- );\n+\nif (rootDir) {\nconfig.rootDir = rootDir;\n}\n@@ -95,11 +88,8 @@ module.exports = (\n'transformIgnorePatterns',\n'reporters',\n'watchPlugins',\n- ].concat(\n- jestMajorVersion >= 24\n- ? ['setupFilesAfterEnv']\n- : ['setupTestFrameworkScriptFile']\n- );\n+ 'setupFilesAfterEnv'\n+ ];\nif (overrides) {\nsupportedKeys.forEach(key => {\nif (overrides.hasOwnProperty(key)) {\n",
        "date": "21.09.2020 15:49:30",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "chore(docs): Fix `ts-jest` import statement in Unit Testing Guide",
        "sim_diff": "diff --git a/docs/docs/how-to/testing/unit-testing.md b/docs/docs/how-to/testing/unit-testing.md @@ -276,7 +276,7 @@ npm install --save-dev ts-jest\n```js:title=jest.config.js\nconst { compilerOptions } = require(\"./tsconfig.json\")\n-const { pathsToModuleNameMapper } = require(\"ts-jest/utils\")\n+const { pathsToModuleNameMapper } = require(\"ts-jest\")\nconst paths = pathsToModuleNameMapper(compilerOptions.paths, {\nprefix: \"<rootDir>/\",\n})\n"
    },
    {
        "msg": "fix: Correcting route types",
        "diff": "diff --git a/packages/preact-iso/router.d.ts b/packages/preact-iso/router.d.ts @@ -12,5 +12,7 @@ interface RoutableProps {\n}\ndeclare module 'preact' {\n- export interface Attributes extends RoutableProps {}\n+ namespace JSX {\n+ interface IntrinsicAttributes extends RoutableProps {}\n+ }\n}\n",
        "date": "11.12.2020 19:27:24",
        "repo": "preactjs/wmr",
        "type": "fix",
        "sim_msg": "chore: mark router APIs as",
        "sim_diff": "diff --git a/packages/router/router.ts b/packages/router/router.ts @@ -39,21 +39,33 @@ import {\n*/\nexport interface Router {\n/**\n+ * @internal\n+ * PRIVATE - DO NOT USE\n+ *\n* Return the basename for the router\n*/\nget basename(): RouterInit[\"basename\"];\n/**\n+ * @internal\n+ * PRIVATE - DO NOT USE\n+ *\n* Return the current state of the router\n*/\nget state(): RouterState;\n/**\n+ * @internal\n+ * PRIVATE - DO NOT USE\n+ *\n* Return the routes for this router instance\n*/\nget routes(): AgnosticDataRouteObject[];\n/**\n+ * @internal\n+ * PRIVATE - DO NOT USE\n+ *\n* Initialize the router, including adding history listeners and kicking off\n* initial data fetches. Returns a function to cleanup listeners and abort\n* any in-progress loads\n@@ -61,6 +73,9 @@ export interface Router {\ninitialize(): Router;\n/**\n+ * @internal\n+ * PRIVATE - DO NOT USE\n+ *\n* Subscribe to router.state updates\n*\n* @param fn function to call with the new state\n@@ -68,6 +83,9 @@ export interface Router {\nsubscribe(fn: RouterSubscriber): () => void;\n/**\n+ * @internal\n+ * PRIVATE - DO NOT USE\n+ *\n* Enable scroll restoration behavior in the router\n*\n* @param savedScrollPositions Object that will manage positions, in case\n@@ -82,6 +100,9 @@ export interface Router {\n): () => void;\n/**\n+ * @internal\n+ * PRIVATE - DO NOT USE\n+ *\n* Navigate forward/backward in the history stack\n* @param to Delta to move in the history stack\n*/\n@@ -95,6 +116,9 @@ export interface Router {\nnavigate(to: To, opts?: RouterNavigateOptions): void;\n/**\n+ * @internal\n+ * PRIVATE - DO NOT USE\n+ *\n* Trigger a fetcher load/submission\n*\n* @param key Fetcher key\n@@ -110,42 +134,61 @@ export interface Router {\n): void;\n/**\n+ * @internal\n+ * PRIVATE - DO NOT USE\n+ *\n* Trigger a revalidation of all current route loaders and fetcher loads\n*/\nrevalidate(): void;\n/**\n+ * @internal\n+ * PRIVATE - DO NOT USE\n+ *\n* Utility function to create an href for the given location\n* @param location\n*/\ncreateHref(location: Location | URL): string;\n/**\n+ * @internal\n+ * PRIVATE - DO NOT USE\n+ *\n* Get/create a fetcher for the given key\n* @param key\n*/\ngetFetcher<TData = any>(key?: string): Fetcher<TData>;\n/**\n+ * @internal\n+ * PRIVATE - DO NOT USE\n+ *\n* Delete the fetcher for a given key\n* @param key\n*/\ndeleteFetcher(key?: string): void;\n/**\n+ * @internal\n+ * PRIVATE - DO NOT USE\n+ *\n* Cleanup listeners and abort any in-progress loads\n*/\ndispose(): void;\n/**\n+ * @internal\n+ * PRIVATE - DO NOT USE\n+ *\n* Internal fetch AbortControllers accessed by unit tests\n- * @private\n*/\n_internalFetchControllers: Map<string, AbortController>;\n/**\n+ * @internal\n+ * PRIVATE - DO NOT USE\n+ *\n* Internal pending DeferredData instances accessed by unit tests\n- * @private\n*/\n_internalActiveDeferreds: Map<string, DeferredData>;\n}\n"
    },
    {
        "msg": "fix(razzle): update copy plugin options to patterns",
        "diff": "diff --git a/packages/razzle/config/createConfigAsync.js b/packages/razzle/config/createConfigAsync.js @@ -896,13 +896,15 @@ module.exports = (\n}),\nwebpackMajor === 5 ? null : new webpack.HashedModuleIdsPlugin(),\nnew webpack.optimize.AggressiveMergingPlugin(),\n- new CopyPlugin([\n+ new CopyPlugin({\n+ patterns: [\n{\nfrom: paths.appPublic + '/**/*',\nto: paths.appBuild,\ncontext: paths.appPath,\n},\n- ]),\n+ ]\n+ }),\n].filter(x => x);\nconfig.optimization = {\n",
        "date": "02.10.2020 18:35:33",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "build: Enable code splitting",
        "sim_diff": "diff --git a/build/webpack/webpack.config.production.js b/build/webpack/webpack.config.production.js @@ -33,4 +33,21 @@ module.exports = webpackMerge(commonConfig, {\nwarnings: false,\n}),\n],\n+ optimization: {\n+ splitChunks: {\n+ chunks: 'all',\n+ name: true,\n+ minSize: Infinity,\n+ cacheGroups: {\n+ vendor: {\n+ chunks: 'initial',\n+ name: 'vendor',\n+ filename: 'vendor.[contenthash:5].js',\n+ test: /[\\\\/]node_modules[\\\\/]/,\n+ priority: -10,\n+ enforce: true,\n+ },\n+ },\n+ },\n+ },\n});\n"
    },
    {
        "msg": "fix(Input): add multiple to propNames",
        "diff": "diff --git a/src/elements/Input/Input.js b/src/elements/Input/Input.js @@ -22,7 +22,7 @@ export const htmlInputPropNames = [\n'selected', 'defaultValue', 'defaultChecked',\n// LIMITED HTML PROPS\n- 'autoCapitalize', 'autoComplete', 'autoFocus', 'checked', 'form', 'max', 'maxLength', 'min',\n+ 'autoCapitalize', 'autoComplete', 'autoFocus', 'checked', 'form', 'max', 'maxLength', 'min', 'multiple',\n'name', 'pattern', 'placeholder', 'readOnly', 'required', 'step', 'type', 'value',\n// Heads Up!\n",
        "date": "07.03.2017 18:28:13",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "sim_msg": "feat(form): add Placeholder component",
        "sim_diff": "diff --git a/src/components/common/form.js b/src/components/common/form.js @@ -198,4 +198,20 @@ const List = ({ type, name, options, label, isRequired, detailText }) => (\n</>\n)\n-export { Form, FormLabel, Textarea, Select, Input, List, InputDefinedLength }\n+const Placeholder = ({ label, isRequired, children }) => (\n+ <>\n+ <FormLabel isRequired={isRequired}>{label}</FormLabel>\n+ {children}\n+ </>\n+)\n+\n+export {\n+ Form,\n+ FormLabel,\n+ Textarea,\n+ Select,\n+ Input,\n+ List,\n+ InputDefinedLength,\n+ Placeholder,\n+}\n"
    },
    {
        "msg": "fix(example): load all client assets",
        "diff": "diff --git a/examples/with-vendor-bundle/src/server.js b/examples/with-vendor-bundle/src/server.js @@ -5,13 +5,26 @@ import { renderToString } from \"react-dom/server\";\nconst assets = require(process.env.RAZZLE_ASSETS_MANIFEST);\n-const scripts = Object.keys(assets).reduce((scripts, key) => {\n- return (\n- scripts + `<script src=\"${assets[key].js}\" defer crossorigin></script>`\n- );\n-}, \"\");\n+const scripts = Object.keys(assets)\n+ .map((key) => {\n+ const script = assets[key].js;\n+\n+ if (typeof script === 'undefined' || script === null) {\n+ return null;\n+ }\n+\n+ if (Array.isArray(script)) {\n+ return script\n+ .map((item) => {\n+ return `<script src=\"${item}\"></script>`;\n+ })\n+ .join('');\n+ }\n+\n+ return `<script src=\"${script}\"></script>`;\n+ })\n+ .filter((a) => typeof a !== 'undefined' || a !== null);\n-console.log(scripts);\nconst server = express();\n@@ -28,7 +41,7 @@ server\n<meta charSet='utf-8' />\n<title>Welcome to Razzle</title>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n- ${scripts}\n+ ${scripts.join('\\n')}\n</head>\n<body>\n<div id=\"root\">${markup}</div>\n",
        "date": "28.08.2020 20:01:52",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "refactor(build): convert exports to getters",
        "sim_diff": "diff --git a/packages/build/index.js b/packages/build/index.js 'use strict';\nmodule.exports = {\n- runBuild: function() {\n- return require('./lib/build').apply(null, arguments);\n+ get runBuild() {\n+ return require('./lib/build');\n},\n- runServer: function() {\n- return require('./lib/server').apply(null, arguments);\n+ get runServer() {\n+ return require('./lib/server');\n},\n- createRenderer: function() {\n- return require('./lib/renderer').apply(null, arguments);\n+ get createRenderer() {\n+ return require('./lib/renderer');\n},\n- createMiddleware: function() {\n- return require('./lib/middleware').apply(null, arguments);\n+ get createMiddleware() {\n+ return require('./lib/middleware');\n},\n- createTranspiler: function() {\n- return require('./lib/transpiler').apply(null, arguments);\n+ get createTranspiler() {\n+ return require('./lib/transpiler');\n},\n};\n"
    },
    {
        "msg": "fix: WMR CLI commands",
        "diff": "diff --git a/packages/wmr/src/cli.js b/packages/wmr/src/cli.js @@ -15,8 +15,6 @@ function bool(v) {\n// global options\nprog\n- .option('--public', 'Your web app root directory (default: ./public)')\n- .option('--out', 'Where to store generated files (default: ./dist)')\n.option('--cwd', 'The working directory - equivalent to \"(cd FOO && wmr)\"')\n// Setting env variables isn't common knowledege for many windows users. Much\n// easier to pass a flag to our binary instead.\n@@ -24,6 +22,8 @@ prog\nprog\n.command('build', 'make a production build')\n+ .option('--public', 'Your web app root directory (default: ./public)')\n+ .option('--out', 'Where to store generated files (default: ./dist)')\n.option('--prerender', 'Pre-render the application to HTML')\n.option('--sourcemap', 'Enable Source Maps')\n.option('--visualize', 'Launch interactive bundle visualizer')\n@@ -46,6 +46,7 @@ prog\nprog\n.command('start', 'Start a development server', { default: true })\n+ .option('--public', 'Your web app root directory (default: ./public)')\n.option('--port, -p', 'HTTP port to listen on (default: $PORT or 8080)')\n.option('--host', 'HTTP host to listen on (default: localhost)')\n.option('--http2', 'Use HTTP/2 (default: false)')\n",
        "date": "09.05.2021 16:08:33",
        "repo": "preactjs/wmr",
        "type": "fix",
        "sim_msg": "test: fixup tests on windows",
        "sim_diff": "diff --git a/tests/utils/cli-path.js b/tests/utils/cli-path.js const path = require('path')\n-const process = require('process')\n-const cliPath = path.resolve(__dirname, '..', '..', 'bin', process.platform === 'win32' ? 'run.cmd' : 'run')\n+const cliPath = path.resolve(__dirname, '../../bin/run')\nmodule.exports = cliPath\n"
    },
    {
        "msg": "fix(search): Fixes - linting issue",
        "diff": "diff --git a/src/epics/epic.test.js b/src/epics/epic.test.js @@ -4,8 +4,6 @@ import configureStore from \"../configure-store\";\nimport { createEpicMiddleware } from 'redux-observable';\nimport { of} from 'rxjs';\n-import { QueryParseError } from 'lunr';\n-\nimport rootEpic from './root-epic'\nimport { setDataset } from '../domain/dataset'\nimport { loadDataset } from \"./load-dataset-epic\"\n",
        "date": "09.07.2018 12:30:57",
        "repo": "iqtlabs/crviz",
        "type": "fix",
        "sim_msg": "feat(wepback): Add app reducer hot reloading",
        "sim_diff": "diff --git a/common/app/create-app.jsx b/common/app/create-app.jsx import { Observable } from 'rx';\n+import createDebugger from 'debug';\nimport { compose, createStore, applyMiddleware } from 'redux';\nimport { selectLocationState, connectRoutes } from 'redux-first-router';\nimport { combineReducers } from 'berkeleys-redux-utils';\n@@ -14,6 +15,7 @@ import epics from './epics';\nimport { onBeforeChange } from './utils/redux-first-router.js';\nimport servicesCreator from '../utils/services-creator';\n+const debug = createDebugger('fcc:app:createApp');\n// createApp(settings: {\n// history?: History,\n// defaultState?: Object|Void,\n@@ -84,6 +86,21 @@ export default function createApp({\nconst store = createStore(reducer, defaultState, enhancer);\nconst location = selectLocationState(store.getState());\n+ // note(berks): should get stripped in production client by webpack\n+ // We need to find a way to hoist to top level in production node env\n+ // babel plugin, maybe? After a quick search I couldn't find one\n+ if (process.env.NODE_ENV === 'development') {\n+ if (module.hot) {\n+ module.hot.accept('./reducer.js', () => {\n+ debug('hot reloading reducers');\n+ store.replaceReducer(combineReducers(\n+ require('./reducer.js').default,\n+ panesReducer,\n+ routesReducer\n+ ));\n+ });\n+ }\n+ }\n// ({\n// redirect,\n// props,\n"
    },
    {
        "msg": "fix(scss-plugin): use onlyLocals option",
        "diff": "diff --git a/packages/razzle-plugin-scss/index.js b/packages/razzle-plugin-scss/index.js @@ -126,8 +126,9 @@ module.exports = (\nuse: isServer\n? [\n{\n- loader: require.resolve('css-loader/locals'),\n+ loader: require.resolve('css-loader'),\noptions: Object.assign({}, options.css[constantEnv], {\n+ onlyLocals: true,\nmodules: true,\nlocalIdentName: '[name]__[local]___[hash:base64:5]',\n}),\n",
        "date": "23.04.2020 19:53:34",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "chore: Add scss data loader",
        "sim_diff": "diff --git a/.storybook/webpack.config.js b/.storybook/webpack.config.js @@ -33,7 +33,17 @@ module.exports = ({ config }) => {\nlocalIdentName: '[name]__[local]___[hash:base64:5]',\n},\n},\n- require.resolve('sass-loader'),\n+ {\n+ loader: require.resolve('sass-loader'),\n+\n+ options: {\n+ data: `@import '~scss/type.module.scss';\n+ @import '~scss/helpers.module.scss';\n+ @import '~scss/colors.module.scss';\n+ @import '~scss/links.module.scss';\n+ @import '~scss/breakpoints.module.scss';`,\n+ },\n+ },\n],\n})\n"
    },
    {
        "msg": "fix: heading level",
        "diff": "diff --git a/sheets/javascript.md b/sheets/javascript.md @@ -465,7 +465,7 @@ document, but could change `html` with `p`, `span` whatever.\ndocument.getElementsByTagName('html')[0].style['font-size'] = '10px'\n```\n-### Checking for `window`\n+## Checking for `window`\n[Optional chaining](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Optional_chaining) can not be used on `window`.\nIt will throw an error when used on any undeclared root object, so no escaping the `typeof window == 'undefined'` check with a clever `?.`.\n",
        "date": "23.08.2021 23:58:37",
        "repo": "spences10/cheat-sheets",
        "type": "fix",
        "sim_msg": "feat(THIN-10812): syntax fixes",
        "sim_diff": "diff --git a/browserCheck.js b/browserCheck.js @@ -86,8 +86,9 @@ function populateCheckInfo(doSpin) {\nif (result) {\nvar report = 'Unsupported Browser!';\nif (checkVersion()) {\n- if (checkCompat()) {\nreport = 'Supported Browser!';\n+ if (!checkCompat()) {\n+ report += ' <small><strong>(required features may be disabled!)</strong></small>';\n}\n}\nresult.innerHTML = report;\n"
    },
    {
        "msg": "fix(razzle): use paths.appAssetsManifest in ManifestPlugin",
        "diff": "diff --git a/packages/razzle/config/createConfigAsync.js b/packages/razzle/config/createConfigAsync.js @@ -166,6 +166,8 @@ module.exports = (\nwebpackOptions.definePluginOptions = dotenv.stringified;\n+ webpackOptions.appAssetsManifestPath = paths.appAssetsManifest;\n+\nif (IS_NODE) {\nwebpackOptions.jsOutputFilename = `[name].js`;\n@@ -735,7 +737,7 @@ module.exports = (\n// Output all files in a manifest file called assets-manifest.json\n// in the build directory.\nnew ManifestPlugin({\n- fileName: path.join(paths.appBuild, 'assets.json'),\n+ fileName: webpackOptions.appAssetsManifestPath,\nwriteToFileEmit: true,\ngenerate: (seed, files) => {\nconst entrypoints = new Set();\n",
        "date": "30.03.2021 20:02:14",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "build(webpack): add hash to output.filename",
        "sim_diff": "diff --git a/webpack.config.js b/webpack.config.js @@ -54,17 +54,17 @@ module.exports = (env = {}) => {\ncomponents: glob.sync('./client/components/**/!(*.spec|*.mock).js'),\nconfig: [\n`./client/app/config/all.${env.region}.js`,\n- `./client/app/config/${env.production ? 'prod' : 'dev'}.${env.region}.js`\n+ `./client/app/config/${env.production ? 'prod' : 'dev'}.${env.region}.js`,\n],\n}, bundles),\noutput: {\npath: path.resolve(__dirname, 'dist'),\n- filename: '[name].bundle.js',\n+ filename: '[name].[hash].bundle.js',\n},\nresolve: {\nalias: {\n- jquery: path.resolve(__dirname, \"node_modules/jquery\")\n- }\n- }\n+ jquery: path.resolve(__dirname, 'node_modules/jquery'),\n+ },\n+ },\n});\n};\n"
    },
    {
        "msg": "fix(Statistic): fix wrong inverted type",
        "diff": "diff --git a/src/views/Statistic/Statistic.d.ts b/src/views/Statistic/Statistic.d.ts @@ -33,7 +33,7 @@ export interface StatisticProps {\nhorizontal?: boolean;\n/** A statistic can be formatted to fit on a dark background. */\n- inverted?: string;\n+ inverted?: boolean;\n/** Label content of the Statistic. */\nlabel?: SemanticShorthandContent;\n",
        "date": "31.07.2017 23:40:58",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "sim_msg": "chore(drill-down): use FormatNumber, add space after label",
        "sim_diff": "diff --git a/src/components/common/statistic.js b/src/components/common/statistic.js @@ -31,7 +31,9 @@ const StatisticGroup = ({ children }) => (\nconst DrillDown = ({ label, value }) => (\n<div className={statisticStyles.drillDown}>\n<span className={statisticStyles.label}>{label} </span>\n- <span className={statisticStyles.value}>{value}</span>\n+ <span className={statisticStyles.value}>\n+ <FormatNumber number={value} />\n+ </span>\n</div>\n)\n"
    },
    {
        "msg": "fix(typo): update README file",
        "diff": "diff --git a/packages/razzle/README.md b/packages/razzle/README.md @@ -275,7 +275,7 @@ import 'react-app-polyfill/ie11'; // For IE 11 support\n* `process.env.NODE_ENV`: `'development'` or `'production'`\n* `process.env.BUILD_TYPE`: `'iso'` for isomorphic/universal applications or `'spa'` for single page applications. The default is `'iso'`. This is set by CLI arguments.\n* `process.env.BUILD_TARGET`: either `'client'` or `'server'`\n-* `process.env.PUBLIC_PATH`: Only in used in `razzle build`. You can alter the `webpack.config.output.publicPath` of the client assets (bundle, css, and images). This is useful if you plan to serve your assets from a CDN. Make sure to _include_ a trailing slash (e.g. `PUBLIC_PATH=https://cdn.example.com/`). If you are using React and altering the public path, make sure to also [include the `crossorigin` attribute](https://reactjs.org/docs/cdn-links.html#why-the-crossorigin-attribute) on your `<script>` tag in `src/server.js`.\n+* `process.env.PUBLIC_PATH`: Only used in `razzle build`. You can alter the `webpack.config.output.publicPath` of the client assets (bundle, css, and images). This is useful if you plan to serve your assets from a CDN. Make sure to _include_ a trailing slash (e.g. `PUBLIC_PATH=https://cdn.example.com/`). If you are using React and altering the public path, make sure to also [include the `crossorigin` attribute](https://reactjs.org/docs/cdn-links.html#why-the-crossorigin-attribute) on your `<script>` tag in `src/server.js`.\n* `process.env.CLIENT_PUBLIC_PATH`: The `NODE_ENV=development` build's `BUILD_TARGET=client` has a different `PUBLIC_PATH` than `BUILD_TARGET=server`. Default is `http://${process.env.HOST}:${process.env.PORT + 1}/`\nYou can create your own custom environment variables that will be inlined during the build. They must start\n",
        "date": "08.04.2020 06:32:29",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "docs: clean up syntax",
        "sim_diff": "diff --git a/website/docs/best-practices/05-bundling.md b/website/docs/best-practices/05-bundling.md @@ -132,11 +132,11 @@ const __filename = fileURLToPath(import.meta.url)\nconst __dirname = path.dirname(__filename)\nexport default {\n- \"mode\": \"development\",\n- \"entry\": \"./index.js\",\n- \"output\": {\n- \"filename\": \"index.bundle.webpack.mjs\",\n- \"path\": __dirname\n+ mode: \"development\",\n+ entry: \"./index.js\",\n+ output: {\n+ filename: \"index.bundle.webpack.mjs\",\n+ path: __dirname\n},\nexperiments: {\noutputModule: true,\n"
    },
    {
        "msg": "fix: Adding missing types",
        "diff": "diff --git a/packages/preact-iso/index.d.ts b/packages/preact-iso/index.d.ts import { VNode } from 'preact';\nimport { PrerenderOptions } from './prerender';\n+export { Router, LocationProvider, useLoc, useLocation } from './router';\n+export { default as lazy, ErrorBoundary } from './lazy';\n+export { default as hydrate } from './hydrate';\n+\nexport default function prerender(vnode: VNode, options?: PrerenderOptions): Promise<{ html: string, links: Set<string>}>;\n",
        "date": "16.02.2021 10:26:39",
        "repo": "preactjs/wmr",
        "type": "fix",
        "sim_msg": "feat: add `netlify` preset\n+ Via",
        "sim_diff": "diff --git a/packages/app/src/components/presets/index.js b/packages/app/src/components/presets/index.js @@ -18,6 +18,7 @@ export { m1guelpf } from './m1guelpf'\nexport { meta } from './meta'\nexport { microlink } from './microlink'\nexport { midudev } from './midudev'\n+export { netlify } from './netlify'\nexport { nextjsconf } from './nextjsconf'\nexport { paco } from './paco'\nexport { pedro } from './pedro'\n"
    },
    {
        "msg": "fix: Ensures TS config files are handled first",
        "diff": "diff --git a/packages/wmr/src/lib/normalize-options.js b/packages/wmr/src/lib/normalize-options.js @@ -78,7 +78,7 @@ export async function normalizeOptions(options, mode, configWatchFiles = []) {\n// ignore error, reading aliases from package.json is an optional feature\n}\n- const EXTENSIONS = ['.js', '.ts', '.mjs'];\n+ const EXTENSIONS = ['.ts', '.js', '.mjs'];\nlet custom;\nlet initialError;\n",
        "date": "14.05.2021 01:41:50",
        "repo": "preactjs/wmr",
        "type": "fix",
        "sim_msg": "build: :wrench: change tsconfig to allow new DOM stuff",
        "sim_diff": "diff --git a/public/resources/ts/tsconfig.json b/public/resources/ts/tsconfig.json \"module\": \"es2015\",\n\"moduleResolution\": \"node\",\n\"target\": \"es2017\",\n- \"lib\": [\"dom\"],\n+ \"lib\": [\"dom\", \"dom.iterable\", \"ESNext.String\"],\n\"outDir\": \"../js\"\n},\n\"include\": [\".\", \"common-defer.js\"]\n"
    },
    {
        "msg": "fix(TextArea): fix autoHeight calculate wrong value on long text\nCalculate content height without taking a vertical scroll bar into\naccount.",
        "diff": "diff --git a/src/addons/TextArea/TextArea.js b/src/addons/TextArea/TextArea.js @@ -115,7 +115,9 @@ class TextArea extends Component {\n// Measure the scrollHeight and update the height to match.\nthis.ref.style.height = 'auto'\n+ this.ref.style.overflowY = 'hidden'\nthis.ref.style.height = `${Math.max(parseFloat(minHeight), Math.ceil(this.ref.scrollHeight + borderHeight))}px`\n+ this.ref.style.overflowY = ''\n}\nrender() {\n",
        "date": "18.10.2017 11:24:49",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "sim_msg": "chore(text-area): changes comment",
        "sim_diff": "diff --git a/inputs/text-area/text-area.js b/inputs/text-area/text-area.js @@ -67,7 +67,7 @@ export class TextArea extends React.Component {\n// This is the displayed textarea element's height in rows\ntextareaRowCount: TextArea.MIN_ROW_COUNT,\n- // This is the internal virtual DOM rendered textarea element's height in rows\n+ // This is the internal \"fake\" rendered textarea element's height in rows\ncontentRowCount: TextArea.MIN_ROW_COUNT,\n};\n"
    },
    {
        "msg": "fix: html-legend: use legend keydown logic",
        "diff": "diff --git a/src/charts/html-legend.js b/src/charts/html-legend.js import {select} from 'd3-selection';\n-//import {event} from 'd3-selection';\nimport {pluck, utils} from '../core/utils';\nimport {config} from '../core/config';\n@@ -209,7 +208,7 @@ export class HtmlLegend {\n.attr('tabindex', 0);\ntabElements\n- .on('keydown', d => {\n+ .on('keydown', config._d3compat.eventHandler((d, event) => {\n// trigger only if d is an object\nif (event.keyCode === 13 && typeof d === 'object') {\nd.chart.legendToggle(d)\n@@ -219,7 +218,7 @@ export class HtmlLegend {\nd.chart.legendToggle(d)\nevent.preventDefault();\n}\n- })\n+ }))\n.on('focus', d => {\nthis._parent.legendHighlight(d);\n})\n",
        "date": "06.04.2021 17:27:49",
        "repo": "dc-js/dc.js",
        "type": "fix",
        "sim_msg": "feat(chart-legend): add reset button placeholder",
        "sim_diff": "diff --git a/src/components/charts/chart-legend.js b/src/components/charts/chart-legend.js @@ -35,7 +35,7 @@ const ChartLegend = ({\n{legendNames[category]}\n</button>\n))}\n- {selectedItem && (\n+ {selectedItem ? (\n<button\nonClick={() => setSelectedItem(null)}\ntype=\"button\"\n@@ -43,6 +43,10 @@ const ChartLegend = ({\n>\nReset highlight\n</button>\n+ ) : (\n+ // this is a placeholder for the reset button so that the page doesn't\n+ // jump when selectedItem goes from null to not null\n+ <div> </div>\n)}\n</div>\n)\n"
    },
    {
        "msg": "fix(prerender): drop `publicPath` prefix during prerender",
        "diff": "diff --git a/src/lib/prerender.js b/src/lib/prerender.js @@ -4,15 +4,16 @@ import { Worker } from 'worker_threads';\n* @param {object} options\n* @property {string} [cwd = '.']\n* @property {string} [out = '.cache']\n+ * @property {string} publicPath\n*/\n-export function prerender({ cwd = '.', out = '.cache' }) {\n+export function prerender({ cwd = '.', out = '.cache', publicPath }) {\nconst w = new Worker(\n`(${workerCode})(require('worker_threads').workerData)\n.then(r => require('worker_threads').parentPort.postMessage([1,r]))\n.catch(err => require('worker_threads').parentPort.postMessage([0,err && err.stack || err+'']))`,\n{\neval: true,\n- workerData: { cwd, out },\n+ workerData: { cwd, out, publicPath },\n// execArgv: ['--experimental-modules'],\nstderr: true\n}\n@@ -28,7 +29,7 @@ export function prerender({ cwd = '.', out = '.cache' }) {\n});\n}\n-async function workerCode({ cwd, out }) {\n+async function workerCode({ cwd, out, publicPath }) {\n/*global globalThis*/\nconst path = require('path');\n@@ -67,6 +68,7 @@ async function workerCode({ cwd, out }) {\nthrow Error(`Unable to detect <script src=\"entry.js\"> in your index.html.`);\n}\n// script = new URL(`../dist/${script.replace(/^(\\.?\\/)?/g, '')}`, selfUrl).href;\n+ script = script.replace(publicPath, '');\nscript = path.resolve(cwd, out, script.replace(/^(\\.?\\/)?/g, ''));\n// Prevent Rollup from transforming `import()` here.\n",
        "date": "03.12.2020 07:28:55",
        "repo": "preactjs/wmr",
        "type": "fix",
        "sim_msg": "fix(critical): ignore trailing slash in patterns",
        "sim_diff": "diff --git a/packages/plugin-critical/index.js b/packages/plugin-critical/index.js const micromatch = require('micromatch')\nconst Worker = require('jest-worker').default\n+const normalize = p => p.replace(/\\/+$/, '') || '/'\n+\nmodule.exports = function (api, options) {\napi.afterBuild(async ({ queue, config }) => {\nconst { outDir: base, pathPrefix, publicPath } = config\n+ const patterns = options.paths.map(p => normalize(p))\nconst pages = queue.filter(page => {\n- return micromatch(page.path, options.paths).length\n+ return micromatch(page.path, patterns).length\n})\nconst worker = new Worker(require.resolve('./lib/worker'))\n"
    },
    {
        "msg": "fix(babel-preset-razzle): remove unused deps",
        "diff": "diff --git a/packages/babel-preset-razzle/package.json b/packages/babel-preset-razzle/package.json \"@babel/plugin-syntax-bigint\": \"7.8.3\",\n\"@babel/plugin-syntax-dynamic-import\": \"^7.8.3\",\n\"@babel/plugin-transform-modules-commonjs\": \"7.10.4\",\n- \"@babel/plugin-transform-react-jsx-source\": \"^7.9.0\",\n\"@babel/plugin-transform-runtime\": \"^7.9.0\",\n\"@babel/preset-env\": \"^7.9.5\",\n\"@babel/preset-react\": \"^7.9.4\",\n\"@babel/preset-typescript\": \"^7.9.0\",\n\"@babel/runtime\": \"^7.9.2\",\n- \"babel-plugin-dynamic-import-node\": \"2.3.3\",\n\"babel-plugin-syntax-jsx\": \"^6.18.0\",\n\"babel-plugin-transform-react-remove-prop-types\": \"0.4.24\",\n\"chalk\": \"^4.1.0\"\n",
        "date": "28.02.2021 15:19:12",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "feat: add autolayout api",
        "sim_diff": "diff --git a/package.json b/package.json },\n\"devDependencies\": {\n\"@babel/core\": \"~7.14.0\",\n- \"@babel/plugin-proposal-class-properties\": \"~7.13.0\",\n+ \"@babel/plugin-proposal-class-properties\": \"~7.14.0\",\n\"@babel/plugin-proposal-object-rest-spread\": \"~7.14.2\",\n\"@babel/plugin-transform-modules-commonjs\": \"~7.14.0\",\n\"@babel/plugin-transform-runtime\": \"~7.14.2\",\n\"@babel/preset-env\": \"~7.13.0\",\n- \"@babel/preset-react\": \"~7.13.13\",\n- \"@babel/register\": \"~7.13.0\",\n+ \"@babel/preset-react\": \"~7.14.0\",\n+ \"@babel/register\": \"~7.14.0\",\n\"babel-loader\": \"~8.2.0\",\n\"babel-plugin-transform-es2015-modules-commonjs\": \"~6.26.2\",\n\"canvas\": \"^2.6.1\",\n\"jquery\": \"^3.5.1\",\n\"jsdom\": \"^16.4.0\",\n\"less\": \"~4.1.1\",\n- \"less-loader\": \"~9.0.0\",\n+ \"less-loader\": \"~10.0.1\",\n\"lodash\": \"^4.17.20\",\n- \"mini-css-extract-plugin\": \"~1.5.1\",\n- \"mocha\": \"^8.2.1\",\n+ \"mini-css-extract-plugin\": \"~2.0.0\",\n+ \"mocha\": \"~9.0.1\",\n\"nyc\": \"^15.1.0\",\n- \"rollup\": \"~2.46.0\",\n+ \"rollup\": \"~2.52.7\",\n\"rollup-plugin-babel\": \"~4.4.0\",\n\"rollup-plugin-commonjs\": \"~10.1.0\",\n\"rollup-plugin-extensions\": \"~0.1.0\",\n\"rollup-plugin-peer-deps-external\": \"~2.2.0\",\n\"rollup-plugin-postcss\": \"~4.0.0\",\n\"rollup-plugin-url\": \"~3.0.1\",\n- \"style-loader\": \"~2.0.0\",\n+ \"style-loader\": \"~3.0.0\",\n\"url-loader\": \"~4.1.0\",\n- \"webpack\": \"~5.37.0\",\n+ \"webpack\": \"~5.42.0\",\n\"webpack-cli\": \"~4.6.0\"\n},\n\"peerDependencies\": {\n"
    },
    {
        "msg": "fix(project-version): Fixes version change, keeping the correct class on the URL",
        "diff": "diff --git a/app/routes/project-version.js b/app/routes/project-version.js @@ -45,17 +45,17 @@ export default Ember.Route.extend({\nendingRoute = `classes/${className}`;\nbreak;\n}\n- case 'project-version.classes.index': {\n+ case 'project-version.classes.class.index': {\nconst className = this.modelFor('project-version.classes.class').get('name');\nendingRoute = `classes/${className}`;\nbreak;\n}\n- case 'project-version.modules.index': {\n- const moduleName = this.pasramsFor('project-version.modules.module').module;\n+ case 'project-version.modules.module.index': {\n+ const moduleName = this.paramsFor('project-version.modules.module').module;\nendingRoute = `modules/${moduleName}`;\nbreak;\n}\n- case 'project-version.namespaces.index': {\n+ case 'project-version.namespaces.namespace.index': {\nconst namespaceName = this.paramsFor('project-version.namespaces.namespace').namespace;\nendingRoute = `namespaces/${namespaceName}`;\nbreak;\n",
        "date": "18.06.2017 22:07:45",
        "repo": "ember-learn/ember-api-docs",
        "type": "fix",
        "sim_msg": "chore: Add back jquery for ember-try builds that require it.",
        "sim_diff": "diff --git a/config/ember-try.js b/config/ember-try.js @@ -11,7 +11,8 @@ module.exports = function() {\nname: 'ember-lts-2.12',\nnpm: {\ndevDependencies: {\n- 'ember-source': '~2.12.0'\n+ 'ember-source': '~2.12.0',\n+ '@ember/jquery': '^0.5.2'\n}\n}\n},\n@@ -19,7 +20,8 @@ module.exports = function() {\nname: 'ember-lts-2.16',\nnpm: {\ndevDependencies: {\n- 'ember-source': '~2.16.0'\n+ 'ember-source': '~2.16.0',\n+ '@ember/jquery': '^0.5.2'\n}\n}\n},\n@@ -27,7 +29,8 @@ module.exports = function() {\nname: 'ember-lts-2.18',\nnpm: {\ndevDependencies: {\n- 'ember-source': '~2.18.0'\n+ 'ember-source': '~2.18.0',\n+ '@ember/jquery': '^0.5.2'\n}\n}\n},\n"
    },
    {
        "msg": "fix(tooltip): overlap between d3 sliding dataset and notetip",
        "diff": "diff --git a/src/features/tooltip/Tooltip.js b/src/features/tooltip/Tooltip.js @@ -146,18 +146,18 @@ class TooltipControls extends React.Component {\n<div style={style}>\n{this.props.data && !this.props.data.fieldValue &&\n<div>\n- <h4><b>UID: </b>{this.props.data.uid} </h4>\n- <h4><b>MAC: </b>{this.props.data.mac} </h4>\n- <h4><b>rDNS_host: </b>{this.props.data.rDNS_host} </h4>\n- <h4><b>Subnet: </b>{this.props.data.subnet} </h4>\n- <h4><b>IP: </b>{this.props.data.IP} </h4>\n- <h4><b>Record Source: </b>{this.props.data.record.source} </h4>\n- <h4><b>Record Timestamp: </b>{this.props.data.record.timestamp} </h4>\n- <h4><b>Role: </b>{this.props.data.role.role} </h4>\n- <h4><b>rDNS_domain: </b>{this.props.data.rDNS_domain} </h4>\n- <h4><b>OS: </b>{this.props.data.os.os} </h4>\n- <h4><b>OS Confidence: </b>{this.props.data.os.confidence} </h4>\n- <h4><b>Vendor: </b>{this.props.data.vendor} </h4>\n+ <p><b>UID: </b>{this.props.data.uid} </p>\n+ <p><b>MAC: </b>{this.props.data.mac} </p>\n+ <p><b>rDNS_host: </b>{this.props.data.rDNS_host} </p>\n+ <p><b>Subnet: </b>{this.props.data.subnet} </p>\n+ <p><b>IP: </b>{this.props.data.IP} </p>\n+ <p><b>Record Source: </b>{this.props.data.record.source} </p>\n+ <p><b>Record Timestamp: </b>{this.props.data.record.timestamp} </p>\n+ <p><b>Role: </b>{this.props.data.role.role} </p>\n+ <p><b>rDNS_domain: </b>{this.props.data.rDNS_domain} </p>\n+ <p><b>OS: </b>{this.props.data.os.os} </p>\n+ <p><b>OS Confidence: </b>{this.props.data.os.confidence} </p>\n+ <p><b>Vendor: </b>{this.props.data.vendor} </p>\n</div>\n}\n{this.props.data && this.props.data.fieldValue &&\n",
        "date": "16.07.2019 13:08:25",
        "repo": "iqtlabs/crviz",
        "type": "fix",
        "sim_msg": "refactor(tooltip/basic): format js with new rules",
        "sim_diff": "diff --git a/components/tooltip/basic/src/index.js b/components/tooltip/basic/src/index.js @@ -9,12 +9,7 @@ export default function TooltipBasic (props) {\n[className]: !!className\n})\nreturn (\n- <ReactTooltip\n- {...props}\n- className={customClass}\n- insecure={false}\n- border\n- />\n+ <ReactTooltip {...props} className={customClass} insecure={false} border />\n)\n}\n"
    },
    {
        "msg": "fix: clickable area for saving/deleting icon",
        "diff": "diff --git a/src/features/tooltip/Tooltip.js b/src/features/tooltip/Tooltip.js @@ -164,11 +164,11 @@ class TooltipControls extends React.Component {\n<b><h1><input className={tooltipStyle.inputStyle} type=\"text\" value={this.state.note.note.title} onChange={this.handleChangeTitle} placeholder=\"Title\"/></h1></b>\n<p><textarea className={tooltipStyle.inputStyle} type=\"text\" value={this.state.note.note.content} onChange={this.handleChangeContent} placeholder=\"Take a note...\"/></p>\n<div style={{textAlign:\"center\"}}>\n- <label className=\"button circular\">\n- <FontAwesomeIcon style={{margin:\"2.5px\"}} icon={faSave} onClick={this.saveNote}/>\n+ <label className=\"button circular\" onClick={this.saveNote}>\n+ <FontAwesomeIcon style={{margin:\"2.5px\"}} icon={faSave} />\n</label>\n- <label className=\"button circular\">\n- <FontAwesomeIcon style={{margin:\"2.5px\"}} icon={faTrashAlt} onClick={this.removeNote} />\n+ <label className=\"button circular\" onClick={this.removeNote}>\n+ <FontAwesomeIcon style={{margin:\"2.5px\"}} icon={faTrashAlt} />\n</label>\n</div>\n</div>\n",
        "date": "16.08.2019 09:19:34",
        "repo": "iqtlabs/crviz",
        "type": "fix",
        "sim_msg": "feat(toolbar): use AtlasKit tooltip",
        "sim_diff": "diff --git a/react/features/toolbox/components/ToolbarButton.web.js b/react/features/toolbox/components/ToolbarButton.web.js /* @flow */\n+import { Tooltip } from '@atlaskit/tooltip';\nimport React, { Component } from 'react';\nimport { translate } from '../../base/i18n';\n-import {\n- setTooltip,\n- setTooltipText\n-} from '../../../../modules/UI/util/Tooltip';\n+import { isButtonEnabled } from '../functions';\nimport StatelessToolbarButton from './StatelessToolbarButton';\n@@ -23,6 +21,22 @@ class ToolbarButton extends Component {\nbutton: Object;\n_createRefToButton: Function;\n+ _onClick: Function;\n+\n+ _onMouseOut: Function;\n+\n+ _onMouseOver: Function;\n+\n+ state: {\n+\n+ /**\n+ * Whether or not the tooltip for the button should be displayed.\n+ *\n+ * @type {boolean}\n+ */\n+ showTooltip: boolean\n+ }\n+\n/**\n* Toolbar button component's property types.\n*\n@@ -67,8 +81,15 @@ class ToolbarButton extends Component {\nconstructor(props: Object) {\nsuper(props);\n+ this.state = {\n+ showTooltip: false\n+ };\n+\n// Bind methods to save the context\nthis._createRefToButton = this._createRefToButton.bind(this);\n+ this._onClick = this._onClick.bind(this);\n+ this._onMouseOut = this._onMouseOut.bind(this);\n+ this._onMouseOver = this._onMouseOver.bind(this);\n}\n/**\n@@ -79,7 +100,7 @@ class ToolbarButton extends Component {\n* @returns {void}\n*/\ncomponentDidMount(): void {\n- this._setShortcutAndTooltip();\n+ this._setShortcut();\nif (this.props.onMount) {\nthis.props.onMount();\n@@ -105,21 +126,41 @@ class ToolbarButton extends Component {\n* @returns {ReactElement}\n*/\nrender(): ReactElement<*> {\n- const { button } = this.props;\n+ const { button, t, tooltipPosition } = this.props;\nconst popups = button.popups || [];\nconst props = {\n...this.props,\n+ onClick: this._onClick,\ncreateRefToButton: this._createRefToButton\n};\nreturn (\n+ <Tooltip\n+ description = { button.tooltipText || t(button.tooltipKey) }\n+ onMouseOut = { this._onMouseOut }\n+ onMouseOver = { this._onMouseOver }\n+ position = { tooltipPosition }\n+ visible = { this.state.showTooltip }>\n<StatelessToolbarButton { ...props }>\n{ this._renderPopups(popups) }\n</StatelessToolbarButton>\n+ </Tooltip>\n);\n}\n+ /**\n+ * Wrapper on on click handler props for current button.\n+ *\n+ * @param {Event} event - Click event object.\n+ * @returns {void}\n+ * @private\n+ */\n+ _onClick(event) {\n+ this.props.onClick(event);\n+ this.setState({ showTooltip: false });\n+ }\n+\n/**\n* Creates reference to current toolbar button.\n*\n@@ -176,26 +217,39 @@ class ToolbarButton extends Component {\n}\n/**\n- * Sets shortcut and tooltip for current toolbar button.\n+ * Hides any displayed tooltip.\n*\n* @private\n* @returns {void}\n*/\n- _setShortcutAndTooltip(): void {\n- const { button, tooltipPosition } = this.props;\n-\n- if (!button.unclickable) {\n- if (button.tooltipText) {\n- setTooltipText(this.button,\n- button.tooltipText,\n- tooltipPosition);\n- } else {\n- setTooltip(this.button,\n- button.tooltipKey,\n- tooltipPosition);\n+ _onMouseOut(): void {\n+ this.setState({ showTooltip: false });\n}\n+\n+ /**\n+ * Hides any displayed tooltip.\n+ *\n+ * @private\n+ * @returns {void}\n+ */\n+ _onMouseOver(): void {\n+ const { button } = this.props;\n+\n+ this.setState({\n+ showTooltip: isButtonEnabled(button.buttonName)\n+ && !button.unclickable\n+ });\n}\n+ /**\n+ * Sets shortcut and tooltip for current toolbar button.\n+ *\n+ * @private\n+ * @returns {void}\n+ */\n+ _setShortcut(): void {\n+ const { button } = this.props;\n+\nif (button.shortcut && APP && APP.keyboardshortcut) {\nAPP.keyboardshortcut.registerShortcut(\nbutton.shortcut,\n"
    },
    {
        "msg": "fix(formfield): relax label propType validator\nFixes",
        "diff": "diff --git a/src/collections/Form/FormField.js b/src/collections/Form/FormField.js @@ -143,11 +143,8 @@ FormField.propTypes = {\nPropTypes.object,\n]),\n- /** A field can show that input is mandatory. Requires a label. */\n- required: customPropTypes.every([\n- customPropTypes.demand(['label']),\n- PropTypes.bool,\n- ]),\n+ /** A field can show that input is mandatory. */\n+ required: PropTypes.bool,\n/** Passed to the control component (i.e. <input type='password' />) */\ntype: customPropTypes.every([\n",
        "date": "24.03.2017 08:23:28",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "sim_msg": "docs(form/input): update errorState docs",
        "sim_diff": "diff --git a/components/form/input/src/index.js b/components/form/input/src/index.js @@ -50,7 +50,7 @@ FormInput.propTypes = {\ndisabled: PropTypes.bool,\n/* 's' or 'm', default: 'm' */\nsize: PropTypes.oneOf(Object.values(inputSizes)),\n- /* optional: 'success' or 'error' */\n+ /* true = error, false = success, null = neutral */\nerrorState: PropTypes.bool,\n/* value of the control */\nvalue: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n"
    },
    {
        "msg": "fix(typings): inherit Radio props from Checkbox\nfix(typings): inherit Radio props from Checkbox",
        "diff": "diff --git a/src/addons/Radio/index.d.ts b/src/addons/Radio/index.d.ts import * as React from 'react';\n+import { CheckboxProps } from '../../modules/Checkbox';\n-interface RadioProps {\n+interface RadioProps extends CheckboxProps {\n[key: string]: any;\n/** Format to emphasize the current selection state. */\n",
        "date": "31.01.2017 11:35:54",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "sim_msg": "docs(core-radio): add description for checked vs defaultChecked props",
        "sim_diff": "diff --git a/packages/Radio/Radio.jsx b/packages/Radio/Radio.jsx @@ -160,6 +160,11 @@ Radio.propTypes = {\n* The value. Must be unique within the group.\n*/\nvalue: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool]).isRequired,\n+ /**\n+ * Use `checked` for controlled radio. For uncontrolled radio, use React's built-in `defaultChecked` prop.\n+ * See examples below for more details.\n+ */\n+ checked: PropTypes.bool,\n/**\n* The id. Must be unique within the group. If no id is provided, one will be generated in the following format: `name_value`\n*/\n@@ -183,6 +188,7 @@ Radio.defaultProps = {\ndescription: undefined,\nfeedback: undefined,\nerror: undefined,\n+ checked: undefined,\n}\nRadio.displayName = 'Radio'\n"
    },
    {
        "msg": "fix(babel-preset-razzle): remove experimental babel features",
        "diff": "diff --git a/packages/babel-preset-razzle/package.json b/packages/babel-preset-razzle/package.json \"dependencies\": {\n\"@babel/core\": \"7.11.1\",\n\"@babel/plugin-proposal-class-properties\": \"^7.8.3\",\n- \"@babel/plugin-proposal-decorators\": \"^7.12.12\",\n\"@babel/plugin-proposal-nullish-coalescing-operator\": \"7.10.4\",\n\"@babel/plugin-proposal-numeric-separator\": \"7.10.4\",\n\"@babel/plugin-proposal-object-rest-spread\": \"^7.9.5\",\n\"@babel/preset-typescript\": \"^7.9.0\",\n\"@babel/runtime\": \"^7.9.2\",\n\"babel-plugin-dynamic-import-node\": \"2.3.3\",\n- \"babel-plugin-parameter-decorator\": \"^1.0.16\",\n\"babel-plugin-syntax-jsx\": \"^6.18.0\",\n\"babel-plugin-transform-react-remove-prop-types\": \"0.4.24\",\n\"chalk\": \"^4.1.0\"\n",
        "date": "04.02.2021 00:30:08",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "chore: upgrade cli deps",
        "sim_diff": "diff --git a/package.json b/package.json \"url\": \"https://github.com/aurelia/cli\"\n},\n\"dependencies\": {\n- \"@babel/core\": \"^7.7.5\",\n- \"@babel/plugin-proposal-class-properties\": \"^7.7.4\",\n- \"@babel/plugin-proposal-decorators\": \"^7.7.4\",\n- \"@babel/plugin-transform-modules-amd\": \"^7.7.5\",\n- \"@babel/plugin-transform-modules-commonjs\": \"^7.7.5\",\n- \"@babel/register\": \"^7.7.4\",\n+ \"@babel/core\": \"^7.8.4\",\n+ \"@babel/plugin-proposal-class-properties\": \"^7.8.3\",\n+ \"@babel/plugin-proposal-decorators\": \"^7.8.3\",\n+ \"@babel/plugin-transform-modules-amd\": \"^7.8.3\",\n+ \"@babel/plugin-transform-modules-commonjs\": \"^7.8.3\",\n+ \"@babel/register\": \"^7.8.3\",\n\"ansi-colors\": \"^4.1.1\",\n\"aurelia-dependency-injection\": \"^1.5.2\",\n\"aurelia-logging\": \"^1.5.2\",\n\"concat-with-sourcemaps\": \"^1.1.0\",\n\"convert-source-map\": \"^1.7.0\",\n\"del\": \"^5.1.0\",\n- \"enquirer\": \"^2.3.2\",\n+ \"enquirer\": \"^2.3.4\",\n\"esprima\": \"^4.0.1\",\n\"glob\": \"^7.1.6\",\n\"gulp\": \"^4.0.2\",\n- \"htmlparser2\": \"^4.0.0\",\n+ \"htmlparser2\": \"^4.1.0\",\n\"lead\": \"^1.0.0\",\n\"lodash\": \"^4.17.15\",\n\"map-stream\": \"0.0.7\",\n- \"mkdirp\": \"^0.5.1\",\n+ \"mkdirp\": \"^1.0.3\",\n\"node-libs-browser\": \"^2.2.1\",\n\"npm-which\": \"^3.0.1\",\n\"preprocess\": \"^3.1.0\",\n\"pumpify\": \"^2.0.1\",\n\"querystring-es3\": \"1.0.0-0\",\n\"readable-stream\": \"^2.3.6\",\n- \"resolve\": \"^1.13.1\",\n- \"semver\": \"^6.3.0\",\n- \"terser\": \"^4.4.2\",\n+ \"resolve\": \"^1.15.1\",\n+ \"semver\": \"^7.1.3\",\n+ \"terser\": \"^4.6.4\",\n\"through2\": \"^3.0.1\",\n\"typescript\": \"^1.0.0 || ^2.0.0 || ^3.0.0\"\n},\n\"devDependencies\": {\n- \"@types/node\": \"^12.12.17\",\n- \"babel-eslint\": \"^10.0.3\",\n- \"copyfiles\": \"^2.1.1\",\n+ \"@types/node\": \"^13.7.6\",\n+ \"babel-eslint\": \"^10.1.0\",\n+ \"copyfiles\": \"^2.2.0\",\n\"gulp-bump\": \"^3.1.3\",\n\"gulp-clean\": \"^0.4.0\",\n- \"gulp-conventional-changelog\": \"^2.0.26\",\n+ \"gulp-conventional-changelog\": \"^2.0.29\",\n\"gulp-eslint\": \"^6.0.0\",\n\"jasmine\": \"^3.5.0\",\n\"jasmine-spec-reporter\": \"^4.2.1\",\n\"jasmine-ts\": \"^0.3.0\",\n\"latest-version\": \"^5.1.0\",\n\"minimatch\": \"^3.0.4\",\n- \"mock-fs\": \"^4.10.4\",\n+ \"mock-fs\": \"^4.11.0\",\n\"nodemon\": \"^2.0.2\",\n- \"nyc\": \"^14.1.1\",\n- \"puppeteer\": \"^2.0.0\",\n- \"rimraf\": \"^3.0.0\",\n+ \"nyc\": \"^15.0.0\",\n+ \"puppeteer\": \"^2.1.1\",\n+ \"rimraf\": \"^3.0.2\",\n\"tree-kill\": \"^1.2.2\",\n- \"ts-node\": \"^8.5.4\",\n- \"typescript\": \"^3.7.3\",\n- \"yargs\": \"^15.0.2\"\n+ \"ts-node\": \"^8.6.2\",\n+ \"typescript\": \"^3.8.2\",\n+ \"yargs\": \"^15.1.0\"\n}\n}\n"
    },
    {
        "msg": "fix(cnumberinput): fix number-input ids created at build time",
        "diff": "diff --git a/packages/chakra-ui-core/src/CNumberInput/CNumberInput.js b/packages/chakra-ui-core/src/CNumberInput/CNumberInput.js @@ -58,8 +58,7 @@ const CNumberInput = {\ndefault: 'md'\n},\ninputId: {\n- type: String,\n- default: `number-input-${useId()}`\n+ type: String\n}\n},\nprovide () {\n",
        "date": "12.05.2020 20:40:13",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "sim_msg": "fix(number): change api input number",
        "sim_diff": "diff --git a/packages/yoga/src/Input/web/Number.jsx b/packages/yoga/src/Input/web/Number.jsx @@ -2,7 +2,7 @@ import React from 'react';\nimport Input from './Input';\nconst InputNumber = React.forwardRef((props, ref) => {\n- return <Input ref={ref} {...props} keyboardType=\"numeric\" />;\n+ return <Input ref={ref} {...props} type=\"number\" />;\n});\nexport default InputNumber;\n"
    },
    {
        "msg": "fix(Time series): only show comparison when there are 2 or more datasets",
        "diff": "diff --git a/src/App.js b/src/App.js @@ -328,14 +328,14 @@ class App extends Component {\n<div className={style.accordionHeader} onClick={this.toggleShowComparison}>\nComparison {!showComparison && <FontAwesomeIcon icon={faAngleDoubleDown} />}{showComparison && <FontAwesomeIcon onClick={this.toggleShowComparison} icon={faAngleDoubleUp} />}\n</div>\n- { hasDataset &&\n+ { datasetCount >= 2 &&\n<div className={ classNames({ [style.section]: true, [style.hierarchySection]: true, [style.hidden]: !showComparison }) }>\n<ComparisonSelector startUid={startUuid} endUid={endUuid} />\n</div>\n}\n- { !hasDataset &&\n+ { datasetCount < 2 &&\n<div className={ classNames({ [style.section]: true, [style.dimSection]:true, [style.hierarchySection]: true, [style.hidden]: !showComparison }) }>\n- Please select datasets to continue\n+ Please select at least 2 datasets to continue\n</div>\n}\n",
        "date": "09.05.2019 14:57:59",
        "repo": "iqtlabs/crviz",
        "type": "fix",
        "sim_msg": "refactor: exposed Accordion toggle method",
        "sim_diff": "diff --git a/package/src/components/Accordion/v1/Accordion.js b/package/src/components/Accordion/v1/Accordion.js @@ -90,6 +90,8 @@ class Accordion extends Component {\nexpanded: this.props.expanded\n};\n+ _accordion = null;\n+\n// handle accordion toggle\nhandleToggle = () => {\nconst { expanded } = this.state;\n@@ -101,7 +103,12 @@ class Accordion extends Component {\nconst { expanded } = this.state;\nreturn (\n- <AccordionWrapper className={className}>\n+ <AccordionWrapper\n+ className={className}\n+ ref={(accordionEl) => {\n+ this._accordion = accordionEl;\n+ }}\n+ >\n<AccordionHeader onClick={this.handleToggle}>\n<span>\n{icon ? <AccordionHeaderIcon>{icon}</AccordionHeaderIcon> : null}\n"
    },
    {
        "msg": "fix(docs): fix public path",
        "diff": "diff --git a/config.js b/config.js @@ -66,7 +66,7 @@ const config = {\ncompiler_hash_type: __PROD__ ? 'chunkhash' : 'hash',\ncompiler_fail_on_warning: __TEST__ || __PROD__,\ncompiler_output_path: paths.base(envConfig.dir_docs_dist),\n- compiler_public_path: __PROD__ ? '//raw.github.com/Semantic-Org/Semantic-UI-React/gh-pages/' : '/',\n+ compiler_public_path: '/',\ncompiler_stats: {\nhash: false, // the hash of the compilation\nversion: false, // webpack version info\n",
        "date": "20.08.2017 14:14:52",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "sim_msg": "fix: correct version display",
        "sim_diff": "diff --git a/src/config/config.js b/src/config/config.js @@ -2,7 +2,7 @@ const publicUrl = process.env.REACT_APP_PUBLIC_URL || (window && window.location\nconst Config = {\nenv: process.env.REACT_APP_ENV || 'development',\n- version: '2' || process.env.VERSION || 'v0',\n+ version: process.env.VERSION || 'v0',\nnewVersionUrl: process.env.REACT_APP_NEW_VERSION_URL || 'https://gdlr.info/newversion',\nmnemonicToSeed: process.env.REACT_APP_MNEMONIC_TO_SEED || true,\nlogLevel: process.env.REACT_APP_LOG_LEVEL || 'debug',\n"
    },
    {
        "msg": "fix: support windows by using path.delimiter",
        "diff": "diff --git a/lib/monitor/run.js b/lib/monitor/run.js @@ -64,7 +64,7 @@ function run(options) {\nconst spawnOptions = {\nenv: Object.assign({}, process.env, options.execOptions.env, {\n- PATH: binPath + ':' + process.env.PATH,\n+ PATH: binPath + path.delimiter + process.env.PATH,\n}),\nstdio: stdio,\n};\n",
        "date": "23.02.2022 17:36:11",
        "repo": "remy/nodemon",
        "type": "fix",
        "sim_msg": "chore(build): update watcher to support more files",
        "sim_diff": "diff --git a/scripts/build/_watch.js b/scripts/build/_watch.js @@ -4,9 +4,11 @@ const runRollup = require('./_run-rollup')\nconst checkSsr = require('./_checkSSR')\nconst dir = process.cwd()\n-const watcher = sane(dir, { glob: ['src/**/*.js'] })\n+const watcher = sane(dir, { glob: ['src/**/*.js'], watchman: true })\nconsole.log(`Start ${dir} watcher`)\n+watcher.on('ready', function () { console.log('ready') });\n+\nwatcher.on('change', async function (filepath, root, stat) {\nconsole.log('file changed', path.join(dir, filepath))\ntry {\n"
    },
    {
        "msg": "fix: storybook build",
        "diff": "diff --git a/.storybook/components/Canvas.vue b/.storybook/components/Canvas.vue @@ -47,7 +47,7 @@ import {\nCButton,\nCBox,\nCIconButton,\n- CColorModeProvider } from '../../packages/chakra-ui-core/dist/esm'\n+ CColorModeProvider } from '../../packages/chakra-ui-core/src'\nexport default {\nname: 'Canvas',\ncomponents: {\n",
        "date": "08.05.2020 18:06:19",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "sim_msg": "docs(readme): update title and add simple example",
        "sim_diff": "diff --git a/README.md b/README.md -# storefront-widget-boilerplate\n-Webpack + Babel + Vue boilerplate for widgets\n+# widget-trustvox\n+\n+Storefront plugin for Trustvox reviews widgets\n+\n+```js\n+import widgetTrustvox from '@ecomplus/widget-trustvox'\n+\n+widgetTrustvox({\n+ trustvoxStoreId: 123\n+})\n+```\n"
    },
    {
        "msg": "perf(Modal): reduce unnecessary layout invalidations\nImprove performance especially in IE11 when a modal is used",
        "diff": "diff --git a/src/modules/Modal/Modal.js b/src/modules/Modal/Modal.js @@ -250,9 +250,10 @@ class Modal extends Component {\nsetDimmerNodeStyle = () => {\ndebug('setDimmerNodeStyle()')\n+ const { current } = this.dimmerRef\n- if (this.dimmerRef.current && this.dimmerRef.current.style) {\n- this.dimmerRef.current.style.setProperty('display', 'flex', 'important')\n+ if (current && current.style && current.style.display !== 'flex') {\n+ current.style.setProperty('display', 'flex', 'important')\n}\n}\n",
        "date": "26.05.2019 18:09:33",
        "repo": "semantic-org/semantic-ui-react",
        "type": "perf",
        "sim_msg": "feat: added additional roles for modal fonts and spacing",
        "sim_diff": "diff --git a/packages/theme-data/src/baseTheme/components/modal.js b/packages/theme-data/src/baseTheme/components/modal.js -import { BORDER_RADIUS, COLOR, LENGTH, SPACING } from \"../../consts/types\";\n+import { BORDER_RADIUS, COLOR, FONT_FAMILY, FONT_SIZE, FONT_WEIGHT, LENGTH, SPACING } from \"../../consts/types\";\nexport default {\n\"modal.fontColor\": {\n@@ -50,4 +50,28 @@ export default {\ntype: COLOR,\nvalue: { ref: \"colorScheme.shadow.high\" },\n},\n+ \"modal.header.fontSize\": {\n+ type: FONT_SIZE,\n+ value: { ref: \"density.fontSizes.large\" },\n+ },\n+ \"modal.header.fontWeight\": {\n+ type: FONT_WEIGHT,\n+ value: { ref: \"basics.fontWeights.medium\" },\n+ },\n+ \"modal.header.paddingBottom\": {\n+ type: SPACING,\n+ value: { ref: \"density.spacings.extraSmall\" },\n+ },\n+ \"modal.subhead.fontSize\": {\n+ type: FONT_SIZE,\n+ value: { ref: \"density.fontSizes.medium\" },\n+ },\n+ \"modal.subhead.fontWeight\": {\n+ type: FONT_WEIGHT,\n+ value: { ref: \"basics.fontWeights.regular\" },\n+ },\n+ \"modal.fontFamily\": {\n+ type: FONT_FAMILY,\n+ value: { ref: \"basics.fontFamilies.main\" },\n+ },\n};\n"
    },
    {
        "msg": "perf(isISO31661Alpha3): use a Set along with .has instead of includes",
        "diff": "diff --git a/src/lib/isISO31661Alpha3.js b/src/lib/isISO31661Alpha3.js import assertString from './util/assertString';\n-import includes from './util/includes';\n// from https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3\n-const validISO31661Alpha3CountriesCodes = [\n+const validISO31661Alpha3CountriesCodes = new Set([\n'AFG', 'ALA', 'ALB', 'DZA', 'ASM', 'AND', 'AGO', 'AIA', 'ATA', 'ATG', 'ARG', 'ARM', 'ABW', 'AUS', 'AUT', 'AZE',\n'BHS', 'BHR', 'BGD', 'BRB', 'BLR', 'BEL', 'BLZ', 'BEN', 'BMU', 'BTN', 'BOL', 'BES', 'BIH', 'BWA', 'BVT', 'BRA',\n'IOT', 'BRN', 'BGR', 'BFA', 'BDI', 'KHM', 'CMR', 'CAN', 'CPV', 'CYM', 'CAF', 'TCD', 'CHL', 'CHN', 'CXR', 'CCK',\n@@ -19,9 +18,9 @@ const validISO31661Alpha3CountriesCodes = [\n'ESP', 'LKA', 'SDN', 'SUR', 'SJM', 'SWZ', 'SWE', 'CHE', 'SYR', 'TWN', 'TJK', 'TZA', 'THA', 'TLS', 'TGO', 'TKL',\n'TON', 'TTO', 'TUN', 'TUR', 'TKM', 'TCA', 'TUV', 'UGA', 'UKR', 'ARE', 'GBR', 'USA', 'UMI', 'URY', 'UZB', 'VUT',\n'VEN', 'VNM', 'VGB', 'VIR', 'WLF', 'ESH', 'YEM', 'ZMB', 'ZWE',\n-];\n+]);\nexport default function isISO31661Alpha3(str) {\nassertString(str);\n- return includes(validISO31661Alpha3CountriesCodes, str.toUpperCase());\n+ return validISO31661Alpha3CountriesCodes.has(str.toUpperCase());\n}\n",
        "date": "26.09.2021 17:56:30",
        "repo": "validatorjs/validator.js",
        "type": "perf",
        "sim_msg": "docs(readme.usage): add output example",
        "sim_diff": "diff --git a/packages/manager/tools/codename-generator/README.md b/packages/manager/tools/codename-generator/README.md @@ -25,6 +25,7 @@ const { Codename, Sample } = require('@ovh-ux/codename-generator');\nconst codename = new Codename(Sample, 'B4cKT0T43FUtUR3');\ncodename.encode('1985-10-26');\n+// => Lutetium Leopard\n```\nor\n@@ -35,6 +36,7 @@ const { Codename } = require('@ovh-ux/codename-generator');\nconst mySample = [['A', 'B', 'C'], ['X', 'Y', 'Z']];\nconst codename = new Codename(mySample, 'B4cKT0T43FUtUR3');\ncodename.encode('1985-10-26');\n+// => B Z\n```\n#### new Codename(source, seed)\n"
    },
    {
        "msg": "perf(regl-renderer): use webgl2 as default context or enable OES_element_index_uint extension\nupdated viewer to use either webgl2 or OES_element_index_uint extension",
        "diff": "diff --git a/packages/web/src/ui/views/viewer.js b/packages/web/src/ui/views/viewer.js @@ -53,6 +53,7 @@ const viewer = (state, i18n) => {\nif (!render) {\nconst options = setup(el)\n+ if (options.error) return html`<b style=\"color:red; background:white; position:fixed; z-index:10; top:50%\">${options.error}</b>`\nviewerOptions = options.viewerOptions\ncamera = options.camera\nrender = prepareRender(viewerOptions)\n@@ -191,13 +192,32 @@ const viewer = (state, i18n) => {\nreturn el\n}\n+const createContext = (canvas, contextAttributes) => {\n+ const get = (type) => {\n+ try {\n+ return { gl: canvas.getContext(type, contextAttributes), type }\n+ } catch (e) {\n+ return null\n+ }\n+ }\n+ return (\n+ get('webgl2') ||\n+ get('webgl') ||\n+ get('experimental-webgl') ||\n+ get('webgl-experimental')\n+ )\n+}\n+\nconst setup = (element) => {\n// prepare the camera\n+ let error\nconst camera = Object.assign({}, perspectiveCamera.defaults)\ncamera.position = [150, -180, 233]\n+ const { gl, type } = createContext(element)\n+\nconst viewerOptions = {\n- glOptions: { canvas: element },\n+ glOptions: { gl },\ncamera,\ndrawCommands: {\n// draw commands bootstrap themselves the first time they are run\n@@ -209,7 +229,14 @@ const setup = (element) => {\n// data\nentities: []\n}\n- return { viewerOptions, camera }\n+ if (type === 'webgl') {\n+ if (!gl.getExtension('OES_element_index_uint')) {\n+ error = 'Your browser uses an old version of WebGL without OES_element_index_uint. Please upgrade your browser to use this application'\n+ }\n+\n+ viewerOptions.glOptions.optionalExtensions = ['oes_element_index_uint']\n+ }\n+ return { viewerOptions, camera, error }\n}\nconst resize = (viewerElement) => {\n",
        "date": "12.08.2021 18:56:19",
        "repo": "jscad/openjscad.org",
        "type": "perf",
        "sim_msg": "fix(index.js): replace deleted function setUserInterfaceCollapsed for setUICollapsed\n`setUserInterfaceCollapsed` was refactored to `setUICollapsed` here:",
        "sim_diff": "diff --git a/src/index.js b/src/index.js @@ -159,7 +159,7 @@ export function initializeEmbeddedViewers() {\nviewer.setBackgroundColor(bgColor)\n}\n- viewer.setUserInterfaceCollapsed(true)\n+ viewer.setUICollapsed(true)\n// Render\nif (viewer.renderWindow && viewer.renderWindow.render) {\nviewer.renderWindow.render()\n"
    },
    {
        "msg": "perf(swipe-cell): avoid useless animate\nfix",
        "diff": "diff --git a/packages/swipe-cell/index.ts b/packages/swipe-cell/index.ts @@ -120,7 +120,11 @@ VantComponent({\n}\nthis.dragging = true;\n- ARRAY.filter((item) => item !== this).forEach((item) => item.close());\n+\n+ ARRAY.filter(\n+ (item) => item !== this && item.offset !== 0\n+ ).forEach((item) => item.close());\n+\nthis.setData({ catchMove: true });\nthis.swipeMove(this.startOffset + this.deltaX);\n},\n",
        "date": "31.12.2020 17:05:49",
        "repo": "youzan/vant-weapp",
        "type": "perf",
        "sim_msg": "feat: support disable bounce for vertical mode",
        "sim_diff": "diff --git a/src/utils/innerSliderUtils.js b/src/utils/innerSliderUtils.js @@ -386,9 +386,9 @@ export const swipeMove = (e, spec) => {\nlet touchSwipeLength = touchObject.swipeLength;\nif (!infinite) {\nif (\n- (currentSlide === 0 && swipeDirection === \"right\") ||\n- (currentSlide + 1 >= dotCount && swipeDirection === \"left\") ||\n- (!canGoNext(spec) && swipeDirection === \"left\")\n+ (currentSlide === 0 && (swipeDirection === \"right\" || swipeDirection === \"down\")) ||\n+ (currentSlide + 1 >= dotCount && (swipeDirection === \"left\" || swipeDirection === \"up\")) ||\n+ (!canGoNext(spec) && (swipeDirection === \"left\" || swipeDirection === \"up\"))\n) {\ntouchSwipeLength = touchObject.swipeLength * edgeFriction;\nif (edgeDragged === false && onEdge) {\n"
    },
    {
        "msg": "perf: instantiate errors lazily",
        "diff": "diff --git a/addon/model.js b/addon/model.js @@ -78,7 +78,7 @@ export default class MegamorphicModel extends EmberObject {\nthis._topModel = this._topModel || this;\nthis._parentModel = this._parentModel || null;\n- this._errors = DS.Errors.create();\n+ this._errors = null;\nthis._init = true;\nif (!CUSTOM_MODEL_CLASS) {\nthis._internalModel = properties._internalModel;\n@@ -487,16 +487,16 @@ export default class MegamorphicModel extends EmberObject {\n_removeError(key) {\n// Remove errors for the property\n- this._errors.remove(key);\n+ this.errors.remove(key);\nif (CUSTOM_MODEL_CLASS) {\n- if (get(this._errors, 'length') === 0) {\n+ if (get(this.errors, 'length') === 0) {\nthis._clearInvalidRequestErrors();\n}\n} else {\nif (\nthis._internalModel.currentState &&\n!this._internalModel.currentState.isValid &&\n- get(this._errors, 'length') === 0\n+ get(this.errors, 'length') === 0\n) {\nthis._updateCurrentState(updatedUncommitted);\n}\n@@ -514,6 +514,9 @@ export default class MegamorphicModel extends EmberObject {\n// Errors hash that will get update,\n// upon validation errors\nget errors() {\n+ if (this._errors === null) {\n+ this._errors = DS.Errors.create();\n+ }\nreturn this._errors;\n}\n}\n",
        "date": "11.12.2019 13:28:52",
        "repo": "hjdivad/ember-m3",
        "type": "perf",
        "sim_msg": "chore: removes use of deprecated getWithDefault",
        "sim_diff": "diff --git a/addon/-private/helpers/-format-base.js b/addon/-private/helpers/-format-base.js import Helper from '@ember/component/helper';\nimport { getOwner } from '@ember/application';\nimport { isEmpty } from '@ember/utils';\n-import { getWithDefault } from '@ember/object';\n/**\n* @private\n@@ -31,7 +30,7 @@ const AbstractHelper = Helper.extend({\ncompute([value], options) {\nif (isEmpty(value)) {\n- if (getWithDefault(options, 'allowEmpty', this.allowEmpty)) {\n+ if (options.allowEmpty ?? this.allowEmpty) {\nreturn;\n}\n"
    },
    {
        "msg": "refactor(package): update deploy scripts [ci skip]",
        "diff": "diff --git a/package.json b/package.json \"build:docs-cname\": \"echo react.semantic-ui.com > docs/build/CNAME\",\n\"predeploy:docs\": \"cross-env NODE_ENV=production yarn build:docs && yarn build:docs-cname\",\n\"deploy:docs\": \"gh-pages -d docs/build -m 'deploy docs [ci skip]'\",\n+ \"postdeploy:docs\": \"github_changelog_generator && gach 'docs(changelog): update changelog [ci skip]\",\n\"lint\": \"cross-env NODE_ENV=production eslint .\",\n\"lint:fix\": \"yarn lint -- --fix\",\n\"prerelease\": \"yarn lint && yarn tsd:lint && npm test && cross-env NODE_ENV=production yarn build\",\n- \"postrelease\": \"NODE_ENV=production yarn deploy:docs\",\n- \"prerelease:major\": \"yarn prerelease\",\n- \"prerelease:minor\": \"yarn prerelease\",\n- \"prerelease:patch\": \"yarn prerelease\",\n- \"release:major\": \"ta-script npm/release major\",\n- \"release:minor\": \"ta-script npm/release minor\",\n- \"release:patch\": \"ta-script npm/release patch\",\n+ \"postrelease\": \"yarn deploy:docs\",\n+ \"release:major\": \"yarn prerelease && ta-script npm/release major && yarn postrelease\",\n+ \"release:minor\": \"yarn prerelease && ta-script npm/release minor && yarn postrelease\",\n+ \"release:patch\": \"yarn prerelease && ta-script npm/release patch && yarn postrelease\",\n\"prestart\": \"yarn satisfied -- --fix yarn\",\n\"start\": \"yarn docs\",\n\"satisfied\": \"satisfied --skip-invalid\",\n",
        "date": "24.09.2017 12:56:58",
        "repo": "semantic-org/semantic-ui-react",
        "type": "refactor",
        "sim_msg": "build: tweak, cleanup package.json",
        "sim_diff": "diff --git a/package.json b/package.json \"scripts\": {\n\"bootstrap\": \"lerna bootstrap\",\n\"start\": \"cd packages/template-react; yarn start\",\n+ \"start:minimal\": \"cd packages/template-minimal; yarn start\",\n+ \"start:graphql\": \"cd packages/template-graphql; yarn start\",\n\"test\": \"lerna run test --stream\",\n\"lint\": \"eslint \\\"packages/**/*.js\\\"\",\n\"release\": \"lerna publish --exact --conventional-commits\",\n+ \"release:major\": \"lerna publish --force-publish=* --cd-version major\",\n\"update\": \"yarn upgrade-interactive --latest && rm yarn.lock && yarn\",\n\"postupdate\": \"lerna clean --yes && lerna bootstrap\",\n\"reset\": \"git clean -dfx && yarn && yarn bootstrap\",\n},\n\"prettier\": {\n\"trailingComma\": \"es5\",\n- \"jsxBracketSameLine\": true,\n\"proseWrap\": \"never\",\n\"singleQuote\": true\n},\n\"eslintConfig\": {\n\"extends\": [\"semistandard\", \"prettier\"],\n- \"plugins\": [\"react\", \"prettier\"],\n+ \"plugins\": [\"prettier\"],\n\"rules\": {\n\"prettier/prettier\": \"error\"\n},\n\"eslint-plugin-node\": \"^5.2.0\",\n\"eslint-plugin-prettier\": \"^2.4.0\",\n\"eslint-plugin-promise\": \"^3.5.0\",\n- \"eslint-plugin-react\": \"^7.5.1\",\n\"eslint-plugin-standard\": \"^3.0.1\",\n\"husky\": \"^0.14.3\",\n\"lerna\": \"^2.5.1\",\n"
    },
    {
        "msg": "refactor: Flipping prerender() detection to last script in HTML",
        "diff": "diff --git a/packages/wmr/src/lib/prerender.js b/packages/wmr/src/lib/prerender.js @@ -70,13 +70,13 @@ async function workerCode({ cwd, out, publicPath, customRoutes }) {\n// Grab the generated HTML file, which we'll use as a template:\nconst tpl = await fs.readFile(path.resolve(cwd, out, 'index.html'), 'utf-8');\n- // The first script in the file that is not external is assumed to have a\n+ // The last script in the file that is not external is assumed to have a\n// `prerender` export\nlet script;\nconst SCRIPT_TAG = /<script(?:\\s[^>]*?)?\\s+src=(['\"]?)([^>]*?)\\1(?:\\s[^>]*?)?>/g;\nlet match;\n- while ((match = SCRIPT_TAG.exec(tpl)) && !script) {\n+ while ((match = SCRIPT_TAG.exec(tpl))) {\n// Ignore external urls\nif (!match || /^(?:https?|file|data)/.test(match[2])) continue;\n@@ -103,7 +103,7 @@ async function workerCode({ cwd, out, publicPath, customRoutes }) {\n// const App = m.default || m[Object.keys(m)[0]];\nif (typeof doPrerender !== 'function') {\n- throw Error(`No prerender() function was exported by the first <script src=\"...\"> in your index.html.`);\n+ throw Error(`No prerender() function was exported by the last non-external <script src=\"...\"> in your index.html.`);\n}\n/**\n",
        "date": "23.01.2022 22:20:07",
        "repo": "preactjs/wmr",
        "type": "refactor",
        "sim_msg": "fix(serve): destination of templates in nested directories",
        "sim_diff": "diff --git a/src/commands/serve.js b/src/commands/serve.js @@ -72,19 +72,23 @@ const serve = async (env = 'local', config = {}) => {\nrenderOptions\n)\n.then(async ({html, config}) => {\n+ let source = ''\nlet dest = ''\nlet ext = ''\nif (Array.isArray(config.build.templates)) {\nconst match = config.build.templates.find(template => template.source === path.parse(file).dir)\n+ source = get(match, 'source')\ndest = get(match, 'destination.path', 'build_local')\next = get(match, 'destination.ext', 'html')\n} else if (isObject(config.build.templates)) {\n+ source = get(config, 'build.templates.source')\ndest = get(config, 'build.templates.destination.path', 'build_local')\next = get(config, 'build.templates.destination.ext', 'html')\n}\n- const finalDestination = path.join(dest, `${path.parse(file).name}.${ext}`)\n+ const fileDir = path.parse(file).dir.replace(source, '')\n+ const finalDestination = path.join(dest, fileDir, `${path.parse(file).name}.${ext}`)\nawait fs.outputFile(config.permalink || finalDestination, html)\n})\n"
    },
    {
        "msg": "refactor: deprecated `.avatar-rounded` and `.avatar-square`",
        "diff": "diff --git a/scss/_avatar.scss b/scss/_avatar.scss display: inline-flex;\nalign-items: center;\njustify-content: center;\n- border-radius: 50em;\n+ vertical-align: middle;\n+ @include border-radius(50em);\n@include avatar($avatar-width,$avatar-status-width);\n}\n.avatar-img {\nwidth: 100%;\nheight: auto;\n- border-radius: 50em;\n+ @include border-radius(50em);\n}\n.avatar-status {\nbottom: 0;\ndisplay: block;\nborder: 1px solid $white;\n- border-radius: 50em;\n+ @include border-radius(50em);\n// @include ltr {\n// right: 0;\nmargin-right: - ($avatar-xl-width / 2);\n}\n}\n-\n-.avatar-rounded {\n- border-radius: $border-radius;\n-}\n-\n-.avatar-square {\n- border-radius: 0;\n-}\n",
        "date": "03.01.2021 12:03:24",
        "repo": "coreui/coreui",
        "type": "refactor",
        "sim_msg": "fix(ui5-avatar): wrong border-radius\nSafari applies styles of last defined slot selector.\nFixes:",
        "sim_diff": "diff --git a/packages/main/src/themes/Avatar.css b/packages/main/src/themes/Avatar.css color: var(--ui5-avatar-initials-color);\n}\n-/* Shapes */\n-:host([shape=\"Square\"]),\n-:host([shape=\"Square\"]) ::slotted(*){\n- border-radius: .25rem;\n-}\n-\n-:host([shape=\"Square\"]) .ui5-avatar-root {\n- border-radius: inherit;\n-}\n-\n-:host([shape=\"Square\"]) .ui5-avatar-img {\n- border-radius: inherit;\n+.ui5-avatar-root {\n+ display: flex;\n+ align-items: center;\n+ justify-content: center;\n+ outline: none;\n+ height: 100%;\n+ width: 100%;\n}\n/* Sizes */\nborder-radius: 50%;\nwidth: 100%;\nheight: 100%;\n+ pointer-events: none;\n+}\n+\n+/* Shapes */\n+:host([shape=\"Square\"]),\n+:host([shape=\"Square\"]) ::slotted(*) {\n+ border-radius: .25rem;\n}\n:host(:not([color-scheme])),\nvertical-align: middle;\n}\n-:host([image-fit-type=\"Contain\"]) .ui5-avatar-img {\n- background-size: contain;\n-}\n-\n-.ui5-avatar-root {\n- display: flex;\n- align-items: center;\n- justify-content: center;\n- outline: none;\n-}\n-\n-.ui5-avatar-root,\n-.ui5-avatar-img {\n- height: 100%;\n- width: 100%;\n- border-radius: 50%;\n-}\n-\n-.ui5-avatar-img {\n- background-repeat: no-repeat;\n- background-position: center;\n- background-size: cover;\n-}\n-\n.ui5-avatar-initials {\ncolor: inherit;\n}\n\\ No newline at end of file\n-\n-::slotted(*) {\n- pointer-events: none;\n-}\n\\ No newline at end of file\n"
    },
    {
        "msg": "refactor: use new handle feature for dialog",
        "diff": "diff --git a/packages/veui/src/components/Dialog.vue b/packages/veui/src/components/Dialog.vue @afterclose=\"handleAfterClose\"\n>\n<div\n- ref=\"content\"\n+ v-drag.translate=\"{\n+ disabled: !draggable,\n+ containment: '@window',\n+ handle: 'head',\n+ ready: dragReady\n+ }\"\nv-outside=\"outside\"\n:class=\"$c('dialog-content')\"\ntabindex=\"-1\"\n@keydown.esc=\"handleEscape\"\n>\n<div\n- v-drag:content.translate=\"{\n- draggable,\n- containment: '@window',\n- ready: dragReady\n- }\"\n+ ref=\"head\"\n:class=\"{\n[$c('dialog-content-head')]: true,\n[$c('dialog-draggable')]: draggable\n",
        "date": "28.06.2021 21:38:15",
        "repo": "ecomfe/veui",
        "type": "refactor",
        "sim_msg": "feat: [request] inline option group in dialogs",
        "sim_diff": "diff --git a/src/components/dialog/Dialog.vue b/src/components/dialog/Dialog.vue v-model=\"el.model\"\n:color=\"el.color\"\n:options=\"el.items\"\n+ :inline=\"el.inline\"\n></q-option-group>\n<div v-if=\"el.type === 'slider' || el.type === 'range'\" style=\"margin-top: 15px; margin-bottom: 10px\">\n"
    },
    {
        "msg": "refactor: minor tweak to part fn exp",
        "diff": "diff --git a/packages/veui-theme-dls/components/NumberInput.js b/packages/veui-theme-dls/components/NumberInput.js @@ -32,12 +32,8 @@ config.defaults(\nspinner: ''\n},\nicons: {\n- increase ({ style }) {\n- return ICON_MAP[style].increase\n- },\n- decrease ({ style }) {\n- return ICON_MAP[style].decrease\n- }\n+ increase: ({ style }) => ICON_MAP[style].increase,\n+ decrease: ({ style }) => ICON_MAP[style].decrease\n}\n},\n'numberinput'\n",
        "date": "09.12.2019 17:28:33",
        "repo": "ecomfe/veui",
        "type": "refactor",
        "sim_msg": "refactor: change caret icon",
        "sim_diff": "diff --git a/packages/numeric-input/src/presenters/UpPresenter.js b/packages/numeric-input/src/presenters/UpPresenter.js @@ -4,7 +4,7 @@ import { css } from \"emotion\";\nimport { ThemeContext } from \"@hig/theme-context\";\nimport stylesheet from \"./stylesheet\";\n-import { CaretUp16, CaretDown16 } from \"@hig/icons\";\n+import { CaretUpSUI, CaretDown16, CaretUpMUI } from \"@hig/icons\";\nexport default class UpPresenter extends Component {\nstatic PropTypes = {\n@@ -26,20 +26,21 @@ export default class UpPresenter extends Component {\nhasHover,\nisPressed\n} = this.props;\n- const iconColor = hasHover ? \"red\" : \"\";\nreturn (\n<ThemeContext.Consumer>\n- {({ resolvedRoles }) => {\n+ {({ resolvedRoles, metadata }) => {\nconst styles = stylesheet(\n{ disabled, hasFocus, hasHover, isPressed },\nresolvedRoles\n);\n+ const iconColor = hasHover ? \"red\" : \"\";\n+ const UpIcon = metadata.densityId === \"medium-density\" ? CaretUpMUI : CaretUpSUI;\nreturn (\n<span className={css(styles.spinnerUpWrapper)}>\n<span className={css(styles.spinnerUp)}>\n- <CaretUp16 color={iconColor}/>\n+ <UpIcon color={iconColor}/>\n</span>\n</span>\n);\n"
    },
    {
        "msg": "refactor: update scrollbars styles for Windows browsers",
        "diff": "diff --git a/scss/sidebar/_sidebar-nav.scss b/scss/sidebar/_sidebar-nav.scss overflow-y: auto;\nlist-style: none;\n+ // Firefox scrollbars\n+ @-moz-document url-prefix() {\n+ scrollbar-width: thin;\n+ }\n+\n+ // Chrome, Edge scrollbars\n+\n+ /* total width */\n+ &::-webkit-scrollbar {\n+ width: 8px;\n+ background-color: transparent;\n+ }\n+\n+ /* background of the scrollbar except button or resizer */\n+ &::-webkit-scrollbar-track {\n+ background-color: transparent;\n+ }\n+\n+ /* scrollbar itself */\n+ &::-webkit-scrollbar-thumb {\n+ background-color: rgba(0, 0, 0, .375);\n+ @include border-radius(8px);\n+ }\n+\n+ /* set button(top and bottom of the scrollbar) */\n+ &::-webkit-scrollbar-button {\n+ display: none;\n+ }\n+\n.nav-title {\npadding: $sidebar-nav-title-padding-y $sidebar-nav-title-padding-x;\nmargin-top: $sidebar-nav-title-margin-top;\n",
        "date": "26.05.2021 00:27:26",
        "repo": "coreui/coreui",
        "type": "refactor",
        "sim_msg": "feat: add styling for scrollbar",
        "sim_diff": "diff --git a/packages/shared/styles/components/molecules/SfScrollable.scss b/packages/shared/styles/components/molecules/SfScrollable.scss margin: var(--scrollable-button-margin, var(--spacer-sm) 0 0 0);\n}\n- &::-webkit-scrollbar {\n+ ::-webkit-scrollbar {\nbackground-color: #fff;\nwidth: 16px;\n}\n/* background of the scrollbar except button or resizer */\n- &::-webkit-scrollbar-track {\n+ ::-webkit-scrollbar-track {\nbackground-color: #fff;\n}\n/* scrollbar itself */\n- &::-webkit-scrollbar-thumb {\n+ ::-webkit-scrollbar-thumb {\nbackground-color: #babac0;\nborder-radius: 16px;\nborder: 4px solid #fff;\n}\n/* set button(top and bottom of the scrollbar) */\n- &::-webkit-scrollbar-button {\n+ ::-webkit-scrollbar-button {\ndisplay:none;\n}\n}\n"
    },
    {
        "msg": "refactor: use more semantic variable names, update changelog",
        "diff": "diff --git a/packages/veui/src/managers/rule.js b/packages/veui/src/managers/rule.js @@ -5,6 +5,7 @@ import max from './rules/max'\nimport min from './rules/min'\nimport numeric from './rules/numeric'\nimport pattern from './rules/pattern'\n+import type from './type'\nimport { isObject, isFunction } from 'lodash'\n/**\n@@ -31,15 +32,16 @@ export class Rule {\n}\n}\n- validate (val, rules, formData) {\n+ validate (val, rules, context) {\nif (!rules || !rules.length) {\nreturn true\n}\nrules = Array.isArray(rules) ? rules : [rules]\n+ let contextData = type.clone(context)\nlet results = rules.map(rule => {\nlet validator = this.ruleValidators[rule.name]\n- if (!validator.validate(val, rule.value, formData)) {\n+ if (!validator.validate(val, rule.value, contextData)) {\nlet realMessage = rule.message || validator.message\nreturn {\nname: rule.name,\n",
        "date": "14.10.2018 13:06:15",
        "repo": "ecomfe/veui",
        "type": "refactor",
        "sim_msg": "chore(rule): ensure private getters are minified",
        "sim_diff": "diff --git a/packages/casl-ability/src/Rule.ts b/packages/casl-ability/src/Rule.ts @@ -34,8 +34,8 @@ export interface RuleOptions<A extends Abilities, Conditions> {\n}\nexport class Rule<A extends Abilities, C> {\n- private __matchConditions: MatchConditions | undefined;\n- private __matchField: MatchField<string> | undefined;\n+ private _matchConditions: MatchConditions | undefined;\n+ private _matchField: MatchField<string> | undefined;\nprivate readonly _options!: RuleOptions<A, C>;\npublic readonly action!: Tuple<A>[0] | Tuple<A>[0][];\npublic readonly subject!: Tuple<A>[1] | Tuple<A>[1][];\n@@ -62,28 +62,28 @@ export class Rule<A extends Abilities, C> {\nthis._options = options;\n}\n- private get _matchConditions() {\n- if (this.conditions && !this.__matchConditions) {\n- this.__matchConditions = this._options.conditionsMatcher!(this.conditions);\n+ private get _lazyMatchConditions() {\n+ if (this.conditions && !this._matchConditions) {\n+ this._matchConditions = this._options.conditionsMatcher!(this.conditions);\n}\n- return this.__matchConditions;\n+ return this._matchConditions;\n}\n- private get _matchField() {\n- if (this.fields && !this.__matchField) {\n- this.__matchField = this._options.fieldMatcher!(this.fields);\n+ private get _lazyMatchField() {\n+ if (this.fields && !this._matchField) {\n+ this._matchField = this._options.fieldMatcher!(this.fields);\n}\n- return this.__matchField;\n+ return this._matchField;\n}\nget ast() {\n- return this._matchConditions ? this._matchConditions.ast : undefined;\n+ return this._lazyMatchConditions ? this._lazyMatchConditions.ast : undefined;\n}\nmatchesConditions(object: Normalize<A>[1] | undefined): boolean {\n- if (!this._matchConditions) {\n+ if (!this._lazyMatchConditions) {\nreturn true;\n}\n@@ -91,11 +91,11 @@ export class Rule<A extends Abilities, C> {\nreturn !this.inverted;\n}\n- return this._matchConditions(object as object);\n+ return this._lazyMatchConditions(object as object);\n}\nmatchesField(field: string | undefined): boolean {\n- if (!this._matchField) {\n+ if (!this._lazyMatchField) {\nreturn true;\n}\n@@ -103,6 +103,6 @@ export class Rule<A extends Abilities, C> {\nreturn !this.inverted;\n}\n- return this._matchField(field);\n+ return this._lazyMatchField(field);\n}\n}\n"
    },
    {
        "msg": "refactor: use const replace string",
        "diff": "diff --git a/src/use/emitter.js b/src/use/emitter.js import { getCurrentInstance } from 'vue'\nimport mitt from 'mitt'\n+const DISPATCH = 'dispatch'\n+const BROADCAST = 'broadcast'\n+\n+const wrapper = Symbol('wrapper')\n+\nconst emitter = mitt()\nexport function useEmitter() {\n@@ -9,11 +14,11 @@ export function useEmitter() {\nfunction on(type, handler) {\nconst handleWrapper = (e) => {\nconst { value, type, emitComponentInstance } = e\n- if (type === 'broadcast') {\n+ if (type === BROADCAST) {\nif (isChildComponent(currentComponentInstance, emitComponentInstance)) {\nhandler && handler(value)\n}\n- } else if (type === 'dispatch') {\n+ } else if (type === DISPATCH) {\nif (isChildComponent(emitComponentInstance, currentComponentInstance)) {\nhandler && handler(value)\n}\n@@ -23,13 +28,13 @@ export function useEmitter() {\n}\n// Save the real handler because the need to call off\n- handler.wrapper = handleWrapper\n+ handler[wrapper] = handleWrapper\nemitter.on(type, handleWrapper)\n}\nfunction broadcast(type, evt) {\nemitter.emit(type, {\n- type: 'broadcast',\n+ type: BROADCAST,\nemitComponentInstance: currentComponentInstance,\nvalue: evt\n})\n@@ -37,14 +42,14 @@ export function useEmitter() {\nfunction dispatch(type, evt) {\nemitter.emit(type, {\n- type: 'dispatch',\n+ type: DISPATCH,\nemitComponentInstance: currentComponentInstance,\nvalue: evt\n})\n}\nfunction off(type, handler) {\n- emitter.off(type, handler.wrapper)\n+ emitter.off(type, handler[wrapper])\n}\nfunction emit(type, evt) {\n",
        "date": "11.09.2020 20:19:55",
        "repo": "hug-sun/element3",
        "type": "refactor",
        "sim_msg": "refactor(lib): small update in lib/emitter_wrapper",
        "sim_diff": "diff --git a/lib/emitter_wrapper.js b/lib/emitter_wrapper.js @@ -8,13 +8,8 @@ class EmitterWrapper {\naddListener (event, listener) {\nthis.emitter.addListener(event, listener)\n-\n- if (!this.listeners.hasOwnProperty(event)) {\n- this.listeners[event] = []\n- }\n-\n+ this.listeners[event] = this.listeners[event] || []\nthis.listeners[event].push(listener)\n-\nreturn this\n}\n"
    },
    {
        "msg": "refactor(readability): remove multline and add comma",
        "diff": "diff --git a/src/features/visualization/d3-viz.js b/src/features/visualization/d3-viz.js @@ -219,7 +219,10 @@ function d3Viz(rootNode) {\nnodeRoot.on(\"click.select\", () => {\nconst datum = select(d3Event.target).datum();\n- if(datum.data !== undefined) {props.sendData(datum.data)} //Used to send data back to parent component Visualizations.js\n+ if(datum.data !== undefined) {\n+ //Used to send data back to parent component Visualizations.js\n+ props.sendData(datum.data);\n+ };\nlet zoomToNode = datum;\nif(datum.height === 0 && datum.parent){\nzoomToNode = datum.parent;\n@@ -290,4 +293,4 @@ const findAncestor = (node, hierarchy) => {\nreturn res;\n};\n-export default d3Viz\n+export default d3Viz;\n",
        "date": "16.07.2019 10:59:19",
        "repo": "iqtlabs/crviz",
        "type": "refactor",
        "sim_msg": "feat(components/molecule/select): Avoid recreating a new props object",
        "sim_diff": "diff --git a/components/molecule/select/src/components/MoleculeInputSelect.js b/components/molecule/select/src/components/MoleculeInputSelect.js @@ -19,7 +19,7 @@ const MoleculeInputSelect = props => {\nconst extendedChildren = () =>\nChildren.toArray(children)\n.filter(Boolean)\n- .map((child, index) => cloneElement(child, {...props}))\n+ .map((child, index) => cloneElement(child, props))\nreturn (\n<div className={CLASS_CONTAINER} onClick={!disabled ? onClick : null}>\n"
    },
    {
        "msg": "refactor(xhr_wrapper): use Object.assign instead of {...Object} syntax\nrefactor(xhr_wrapper): use Object.assign instead of {...Object} syntax,\nreturn catched error from fetch()",
        "diff": "diff --git a/src/common/api/utils/xhr_wrapper.js b/src/common/api/utils/xhr_wrapper.js @@ -43,12 +43,13 @@ export default function requestWrapper (method) {\ndefaults.body = data\n}\n- const paramsObj = {...defaults, headers: {...params, ...defaults.headers}}\n+ const paramsObj = Object.assign({}, defaults, {headers: params})\nreturn fetch(url, paramsObj)\n.then(checkStatus)\n.then(parseJSON)\n.catch(err => {\nconsole.error(err)\n+ return err\n})\n}\n}\n",
        "date": "14.08.2017 23:53:10",
        "repo": "metnew/suicrux",
        "type": "refactor",
        "sim_msg": "feat(http): Add XHR Timeout configuration",
        "sim_diff": "diff --git a/src/lib/http.js b/src/lib/http.js @@ -9,7 +9,8 @@ type RequestOptionsType = {\njson? : Object,\ndata? : { [key : string] : string },\nbody? : string,\n- win? : any\n+ win? : any,\n+ timeout? : number\n};\nconst HEADERS = {\n@@ -19,7 +20,7 @@ const HEADERS = {\nlet headerBuilders = [];\n-export function request({ url, method = 'get', headers = {}, json, data, body, win = window } : RequestOptionsType) : SyncPromise<Object> {\n+export function request({ url, method = 'get', headers = {}, json, data, body, win = window, timeout = 0 } : RequestOptionsType) : SyncPromise<Object> {\nreturn new SyncPromise((resolve, reject) => {\n@@ -106,6 +107,11 @@ export function request({ url, method = 'get', headers = {}, json, data, body, w\n}).join('&');\n}\n+ xhr.timeout = timeout;\n+ xhr.ontimeout = function () {\n+ reject(new Error(`Request to ${method.toLowerCase()} ${url} has timed out`));\n+ };\n+\nxhr.send(body);\n});\n}\n"
    },
    {
        "msg": "refactor: inline `lineHeight`",
        "diff": "diff --git a/packages/vega-scenegraph/src/util/text.js b/packages/vega-scenegraph/src/util/text.js @@ -138,14 +138,13 @@ export function offset(item) {\n// perform our own font baseline calculation\n// why? not all browsers support SVG 1.1 'alignment-baseline' :(\nvar baseline = item.baseline,\n- h = fontSize(item),\n- lh = lineHeight(item);\n+ h = fontSize(item);\nreturn Math.round(\n- baseline === 'line-top' ? 0.79.h + (lh-h) / 2.0 :\n+ baseline === 'line-top' ? 0.79.h + (lineHeight(item)-h) / 2.0 :\nbaseline === 'top' ? 0.79*h :\nbaseline === 'middle' ? 0.30*h :\nbaseline === 'bottom' ? -0.21*h :\n- baseline === 'line-bottom' ? -0.21*h - (lh-h) / 2.0 : 0\n+ baseline === 'line-bottom' ? -0.21*h - (lineHeight(item)-h) / 2.0 : 0\n);\n}\n",
        "date": "01.03.2020 15:04:19",
        "repo": "vega/vega",
        "type": "refactor",
        "sim_msg": "fix(app/metrics): force dimensions to be at least one",
        "sim_diff": "diff --git a/source/app/metrics/utils.mjs b/source/app/metrics/utils.mjs @@ -457,8 +457,8 @@ export const svg = {\n//Get bounds and resize\nlet {y:height, width} = document.querySelector(\"svg #metrics-end\").getBoundingClientRect()\nconsole.debug(`bounds width=${width}, height=${height}`)\n- height = Math.ceil(height * padding.height + padding.absolute.height)\n- width = Math.ceil(width * padding.width + padding.absolute.width)\n+ height = Math.max(1, Math.ceil(height * padding.height + padding.absolute.height))\n+ width = Math.max(1, Math.ceil(width * padding.width + padding.absolute.width))\nconsole.debug(`bounds after applying padding width=${width} (*${padding.width}+${padding.absolute.width}), height=${height} (*${padding.height}+${padding.absolute.height})`)\n//Resize svg\nif (document.querySelector(\"svg\").getAttribute(\"height\") === \"auto\")\n"
    },
    {
        "msg": "refactor(replaceIncludes): streamlined code",
        "diff": "diff --git a/src/jscad/replaceIncludes.js b/src/jscad/replaceIncludes.js @@ -21,10 +21,10 @@ export function replaceIncludes (text, relpath, memFs) {\nconst withoutIncludes = replaceIncludesInAst(moduleAst)\nconst modulePromises = foundIncludes.map(function (uri, index) {\n- const promise = includeJscadSync(relpath, uri, memFs)\n- return promise.then(function (includedScript) {\n- return replaceIncludes(includedScript, relpath, memFs)\n- })\n+ return includeJscadSync(relpath, uri, memFs)\n+ .then(\n+ includedScript => replaceIncludes(includedScript, relpath, memFs),\n+ err => console.error('fail', err))\n})\nPromise.all(modulePromises).then(function (resolvedModules) {\nconst resolvedScript = resolvedModules.concat(withoutIncludes).join('\\n')\n",
        "date": "19.04.2017 00:21:41",
        "repo": "jscad/openjscad.org",
        "type": "refactor",
        "sim_msg": "fix(transformers): better type check for replaceStrings",
        "sim_diff": "diff --git a/src/transformers/replaceStrings.js b/src/transformers/replaceStrings.js -module.exports = async (html, config) => {\n- const regexes = config.replaceStrings || false\n- if (typeof regexes === 'object') {\n- Object.entries(regexes).map(([k, v]) => {\n+const { isObject, isEmptyObject } = require('../utils/helpers')\n+\n+module.exports = async (html, config) => {\n+ if (isObject(config.replaceStrings) && !isEmptyObject(config.replaceStrings)) {\n+ Object.entries(config.replaceStrings).map(([k, v]) => {\nconst regex = new RegExp(k, 'gi')\nhtml = html.replace(regex, v)\n})\n"
    },
    {
        "msg": "refactor: support off method",
        "diff": "diff --git a/src/use/emitter.js b/src/use/emitter.js import { getCurrentInstance } from 'vue'\n+import { capitalize } from 'element-ui/src/utils/util'\n+const EVENT_NAME_KEY = Symbol('ELEMENT_EVENTS')\nexport function useEmitter() {\nreturn {\ndispatch: dispatch(),\nbroadcast: broadcast(),\n- on: on()\n+ on: on(),\n+ off: off()\n}\n}\n@@ -12,12 +15,17 @@ function on() {\nconst instance = getCurrentInstance()\nreturn (originalEventName, callback) => {\n- const eventName = 'on' + originalEventName.charAt(0).toUpperCase() + originalEventName.slice(1)\n+ const eventName = 'on' + capitalize(originalEventName)\nif (!instance.vnode.props) {\ninstance.vnode.props = {}\n}\n+ if (!instance.vnode.props[EVENT_NAME_KEY]) {\n+ instance.vnode.props[EVENT_NAME_KEY] = new Set()\n+ }\n+ instance.vnode.props[EVENT_NAME_KEY].add(eventName)\n+\nif (!instance.vnode.props[eventName]) {\ninstance.vnode.props[eventName] = (...params) => {\nconst callbacks = instance.vnode.props[eventName]['__events']\n@@ -33,6 +41,41 @@ function on() {\n}\n}\n+function off() {\n+ const instance = getCurrentInstance()\n+\n+ return (originalEventName, callback) => {\n+ const eventNameList = instance.vnode.props && instance.vnode.props[EVENT_NAME_KEY]\n+ if (!eventNameList || !eventNameList.size) {\n+ return\n+ }\n+\n+ if (!originalEventName) {\n+ eventNameList.forEach(eventName => {\n+ delete instance.vnode.props[eventName]\n+ })\n+ eventNameList.clear()\n+ return\n+ }\n+\n+ const eventName = 'on' + capitalize(originalEventName)\n+\n+ if (!callback) {\n+ delete instance.vnode.props[eventName]\n+ eventNameList.delete(eventName)\n+ return\n+ }\n+\n+ const handlers = instance.vnode.props[eventName] && instance.vnode.props[eventName]['__events']\n+ if (handlers && handlers.length) {\n+ const index = handlers.indexOf(callback)\n+ if (index > -1) {\n+ handlers.splice(index, 1)\n+ }\n+ }\n+ }\n+}\n+\nfunction dispatch() {\nconst instance = getCurrentInstance()\n",
        "date": "18.08.2020 15:58:46",
        "repo": "hug-sun/element3",
        "type": "refactor",
        "sim_msg": "feat(wxs): support preventDefault,stopPropagation",
        "sim_diff": "diff --git a/src/core/view/plugins/index.js b/src/core/view/plugins/index.js @@ -64,9 +64,16 @@ export default {\nconst instance = currentTarget &&\ncurrentTarget.__vue__ &&\ncurrentTarget.__vue__.$getComponentDescriptor(currentTarget.__vue__, false)\n- $event = processEvent.call(this, $event.type, $event, {}, findUniTarget($event, this.$el) || $event.target,\n- $event.currentTarget)\n+ const $origEvent = $event\n+ $event = processEvent.call(this, $origEvent.type, $origEvent, {}, findUniTarget($origEvent, this.$el) || $origEvent.target,\n+ $origEvent.currentTarget)\n$event.instance = instance\n+ $event.preventDefault = function () {\n+ return $origEvent.preventDefault()\n+ }\n+ $event.stopPropagation = function () {\n+ return $origEvent.stopPropagation()\n+ }\n}\nreturn $event\n}\n"
    },
    {
        "msg": "refactor: add RTL styling for inputs",
        "diff": "diff --git a/scss/_reboot.scss b/scss/_reboot.scss @@ -554,17 +554,16 @@ legend {\n// 1. A few input types should stay LTR\n// See https://rtlstyling.com/posts/rtl-styling#form-inputs\n-// 2. RTL only output\n-// See https://rtlcss.com/learn/usage-guide/control-directives/#raw\n-/* rtl:raw:\n+*[dir=\"rtl\"] {\n[type=\"tel\"],\n[type=\"url\"],\n[type=\"email\"],\n[type=\"number\"] {\ndirection: ltr;\n}\n-*/\n+}\n+\n// Remove the inner padding in Chrome and Safari on macOS.\n",
        "date": "23.06.2021 17:06:24",
        "repo": "coreui/coreui",
        "type": "refactor",
        "sim_msg": "refactor(scss): consolidated styles",
        "sim_diff": "diff --git a/scss/os/_utils.scss b/scss/os/_utils.scss border-bottom-right-radius: 0 !important;\n}\n-.u-horizontal-border:before {\n- border-top: 1px dotted $border-color;\n- content: ' ';\n- display: block;\n- left: -($spacer * 1.5);\n- position: relative;\n- top: $spacer;\n- width: ($spacer * 1.5);\n-}\n-\n// At certain breakpoints, forms look really bad (especially in modals. Lets adjust forms to takeup more of the screen)\n// To use, just add u-form-vertical-at-<breakpoint>. (u-form-veritical-at-md).\n"
    },
    {
        "msg": "refactor(webpack_config/config): read index.html file for SSR using DIST_PATH env variable, some style fixes, fix SSR of Root component",
        "diff": "diff --git a/src/server/ssr/index.js b/src/server/ssr/index.js import path from 'path'\nimport fs from 'fs'\n+import chalk from 'chalk'\n// React-related stuff\nimport React from 'react'\nimport {render} from 'rapscallion'\n-import Helmet from 'react-helmet'\n-import {StaticRouter} from 'react-router'\n+// import Helmet from 'react-helmet'\nimport {ServerStyleSheet, StyleSheetManager} from 'styled-components'\n// Application\n-// Do you remember that we use webpack aliases provided by cool babel plugin?\n-// (take a look at .babelrc)\nimport {configureStore, configureRootComponent} from 'common/index'\n-//\n-const language = process.env.APP_LANGUAGE || 'en'\n-const distPath = `../../../dist/${language}`\n-// read index.html and assign a variable\n-const indexPath = path.join(__dirname, `${distPath}/index.html`)\n-const indexHTMLFileContent = (function () {\n+// read index.html and assign to a variable\n+const indexPath = path.join(`${process.env.DIST_PATH}/index.html`)\n+const htmlFile = (function () {\ntry {\nreturn fs.readFileSync(indexPath, 'utf8')\n} catch (e) {\n- throw new Error(`Are you sure you have already built app? ${e}`)\n+ console.error(chalk.bgRed(`Are you sure you have already built app? ${e}`))\n+ console.log(chalk.bgCyan('Application is working without SSR'))\n+ return false\n}\n})()\n-\nexport default function (req, res) {\n+ if (!htmlFile) {\n+ // NOTE: @Metnew (29.07.2017): Here must be a requirement of ejs/jade template\n+ // app probably needs in template engine!\n+ const warning = `\n+ <h1>Do you remember that you don't have SSR?</h1>\n+ <h2>Why it happens?</h2>\n+ <h3>Probably, because of:</h3>\n+ <h4>\n+ <ul>\n+ <li>No \"index.html\" in the dist folder. e.g.: You don't have already built app.</li>\n+ <li>Path to dist folder with client app is invalid, check process.env.DIST_PATH in \"webpack_config/server/webpack.base.\"</li>\n+ <pre>process.env.path === ${process.env.DIST_PATH}</pre>\n+ <pre>URL: ${req.url}</pre>\n+ </ul>\n+ </h4>\n+ `\n+ return res.send(warning)\n+ }\n// Auth-related stuff\n// NOTE: check `server/express/index.js` for more info\nconst {user} = req\nconst {isLoggedIn, token} = user\n- const initialState = isLoggedIn\n- ? {me: {auth: {isLoggedIn, token}}}\n- : {}\n+ const initialState = isLoggedIn ? {me: {auth: {isLoggedIn, token}}} : {}\n//\nconst sheet = new ServerStyleSheet()\n+ const location = req.url\nconst context = {}\nconst store = configureStore(initialState)\n- const RootComponent = configureRootComponent(store)\n+ const RootComponent = configureRootComponent({\n+ store,\n+ SSR: {location, context}\n+ })\nconst App = (\n<StyleSheetManager sheet={sheet.instance}>\n- <StaticRouter url={req.url} context={context}>\n{RootComponent}\n- </StaticRouter>\n</StyleSheetManager>\n)\n//\n@@ -54,7 +68,7 @@ export default function(req, res) {\nfunction renderFullPage ({html, css, preloadedState}) {\n// console.log(indexHTMLFileContent)\n- const indexHTMLFileContentWithRedux = indexHTMLFileContent.replace(\n+ const htmlWithRedux = htmlFile.replace(\n'<div id=\"app\"></div>',\n`<div id=\"app\">${html}</div><script>\nwindow.__PRELOADED_STATE__ = ${JSON.stringify(preloadedState).replace(\n@@ -63,9 +77,9 @@ function renderFullPage ({html, css, preloadedState}) {\n)}\n</script><span style=\"display:none;\">Server-side rendering!</span>`\n)\n- const indexHTMLFileContentWithStylesAndRedux = indexHTMLFileContentWithRedux.replace(\n+ const styledHtmlWithRedux = htmlWithRedux.replace(\n'<meta name=\"ssr-styles\"/>',\ncss\n)\n- return indexHTMLFileContentWithStylesAndRedux\n+ return styledHtmlWithRedux\n}\n",
        "date": "04.08.2017 14:02:33",
        "repo": "metnew/suicrux",
        "type": "refactor",
        "sim_msg": "feat(app): SSR prod distributables should force use the prod code of externalized vue/vuex/etc packages",
        "sim_diff": "diff --git a/app/lib/webpack/ssr/webserver.js b/app/lib/webpack/ssr/webserver.js @@ -6,6 +6,8 @@ const WebserverAssetsPlugin = require('./plugin.webserver-assets')\nconst injectNodeTypescript = require('../inject.node-typescript')\nconst WebpackProgressPlugin = require('../plugin.progress')\n+const nodeEnvBanner = `if(process.env.NODE_ENV===void 0){process.env.NODE_ENV='production'}`\n+\nconst flattenObject = (obj, prefix = 'process.env') => {\nreturn Object.keys(obj)\n.reduce((acc, k) => {\n@@ -104,6 +106,15 @@ module.exports = function (cfg, configName) {\n.use(WebpackProgressPlugin, [{ name: configName, cfg, hasExternalWork: true }])\nif (cfg.ctx.prod) {\n+ // we need to set process.env.NODE_ENV to 'production'\n+ // (unless it's already set to something)\n+ // in order for externalized vue/vuex/etc packages to run the\n+ // production code (*.cjs.prod.js) instead of the dev one\n+ chain.plugin('node-env-banner')\n+ .use(webpack.BannerPlugin, [\n+ { banner: nodeEnvBanner, raw: true, entryOnly: true }\n+ ])\n+\nchain.plugin('webserver-assets-plugin')\n.use(WebserverAssetsPlugin, [ cfg ])\n"
    },
    {
        "msg": "refactor: refactor radio-button component",
        "diff": "diff --git a/packages/element3/packages/radio-button/RadioButton.vue b/packages/element3/packages/radio-button/RadioButton.vue />\n<span\nclass=\"el-radio-button__inner\"\n- :style=\"style\"\n+ :style=\"isChecked ? style : null\"\n@keydown.stop\n>\n<slot>{{ label }}</slot>\n@@ -75,7 +75,7 @@ export default {\ntabIndex,\nclasses,\nisChecked,\n- style: isChecked ? style : null\n+ style\n}\n}\n}\n",
        "date": "18.12.2020 14:41:33",
        "repo": "hug-sun/element3",
        "type": "refactor",
        "sim_msg": "feat: radio color",
        "sim_diff": "diff --git a/src/core/view/components/radio/index.vue b/src/core/view/components/radio/index.vue @click=\"_onClick\">\n<div class=\"uni-radio-wrapper\">\n<div\n- :class=\"[radioChecked ? 'uni-radio-input-checked' : '']\"\n- :style=\"{color:color}\"\n+ :class=\"radioChecked ? 'uni-radio-input-checked' : ''\"\n+ :style=\"radioChecked ? checkedStyle : ''\"\nclass=\"uni-radio-input\" />\n<slot />\n</div>\n@@ -34,7 +34,7 @@ export default {\n},\ncolor: {\ntype: String,\n- default: '#007aff'\n+ default: '#007AFF'\n},\nvalue: {\ntype: String,\n@@ -47,6 +47,11 @@ export default {\nradioValue: this.value\n}\n},\n+ computed: {\n+ checkedStyle () {\n+ return `background-color: ${this.color};border-color: ${this.color};`\n+ }\n+ },\nwatch: {\nchecked (val) {\nthis.radioChecked = val\n@@ -124,10 +129,10 @@ export default {\nposition: relative;\n}\n- uni-radio .uni-radio-input.uni-radio-input-checked {\n+ /* uni-radio .uni-radio-input.uni-radio-input-checked {\nbackground-color: #007aff;\nborder-color: #007aff;\n- }\n+ } */\nuni-radio .uni-radio-input.uni-radio-input-checked:before {\nfont: normal normal normal 14px/1 \"uni\";\n"
    },
    {
        "msg": "refactor: refactor invalid message slot",
        "diff": "diff --git a/packages/veui/src/components/Uploader.vue b/packages/veui/src/components/Uploader.vue <slot name=\"desc\"/>\n</span>\n<span :class=\"$c('uploader-error')\">\n- <template v-if=\"error.typeInvalid\">\n- <slot name=\"type-invalid\">\n- <veui-icon :name=\"icons.alert\"/>{{ t('fileTypeInvalid') }}\n- </slot>\n- </template>\n- <template v-if=\"error.sizeInvalid\">\n- <slot name=\"size-invalid\">\n- <veui-icon :name=\"icons.alert\"/>{{ t('fileSizeInvalid') }}\n- </slot>\n- </template>\n- <template v-if=\"error.countOverflow\">\n- <slot name=\"count-overflow\">\n- <veui-icon :name=\"icons.alert\"/>{{ t('tooManyFiles') }}\n- </slot>\n- </template>\n- <template v-if=\"error.customValidationInvalid\">\n- <slot name=\"custom-validation-invalid\">\n- <veui-icon :name=\"icons.alert\"/>{{ customValidationMessage }}\n+ <slot\n+ name=\"invalid\"\n+ :error=\"error\"\n+ >\n+ <veui-icon\n+ v-if=\"validationMessage\"\n+ :name=\"icons.alert\"\n+ />{{\n+ validationMessage\n+ }}\n</slot>\n- </template>\n</span>\n</div>\n<transition-group\nv-if=\"type === 'image'\"\n:class=\"$c('uploader-error')\"\n>\n- <template v-if=\"error.typeInvalid\">\n- <slot name=\"type-invalid\">\n- <veui-icon :name=\"icons.alert\"/>{{ t('fileTypeInvalid') }}\n- </slot>\n- </template>\n- <template v-if=\"error.sizeInvalid\">\n- <slot name=\"size-invalid\">\n- <veui-icon :name=\"icons.alert\"/>{{ t('fileSizeInvalid') }}\n- </slot>\n- </template>\n- <template v-if=\"error.countOverflow\">\n- <slot name=\"count-overflow\">\n- <veui-icon :name=\"icons.alert\"/>{{ t('tooManyFiles') }}\n- </slot>\n- </template>\n- <template v-if=\"error.customValidationInvalid\">\n- <slot name=\"custom-validation-invalid\">\n- <veui-icon :name=\"icons.alert\"/>{{ customValidationMessage }}\n+ <slot\n+ name=\"invalid\"\n+ :error=\"error\"\n+ >\n+ <veui-icon\n+ v-if=\"validationMessage\"\n+ :name=\"icons.alert\"\n+ />{{\n+ validationMessage\n+ }}\n</slot>\n- </template>\n</span>\n<iframe\nv-if=\"requestMode === 'iframe' && submitting\"\n@@ -642,6 +624,18 @@ export default {\n(file.status === 'success' || !file.status) && !file.toBeUploaded\n)\n.map(file => omit(file, ['status', 'toBeUploaded']))\n+ },\n+ validationMessage () {\n+ let messageMap = {\n+ typeInvalid: this.t('fileTypeInvalid'),\n+ sizeInvalid: this.t('fileSizeInvalid'),\n+ countOverflow: this.t('tooManyFiles'),\n+ customValidationInvalid: this.customValidationMessage\n+ }\n+ return Object.keys(this.error)\n+ .map(key => (this.error[key] ? messageMap[key] : ''))\n+ .filter(i => !!i)\n+ .join(', ')\n}\n},\nwatch: {\n",
        "date": "14.11.2019 21:22:54",
        "repo": "ecomfe/veui",
        "type": "refactor",
        "sim_msg": "refactor: mo icon",
        "sim_diff": "diff --git a/src/renderer/components/Icons/Icon.vue b/src/renderer/components/Icons/Icon.vue <template>\n- <svg version=\"1.1\"\n+ <svg\n+ version=\"1.1\"\n:class=\"klass\"\n:role=\"label ? 'img' : 'presentation'\"\n:aria-label=\"label\"\n:width=\"width\"\n:height=\"height\"\n:viewBox=\"box\"\n- :style=\"style\">\n+ :style=\"style\"\n+ >\n<slot>\n<template v-if=\"icon && icon.paths\">\n<path v-for=\"(path, i) in icon.paths\" :key=\"`path-${i}`\" v-bind=\"path\" />\n<template v-if=\"icon && icon.polygons\">\n<polygon v-for=\"(polygon, i) in icon.polygons\" :key=\"`polygon-${i}`\" v-bind=\"polygon\" />\n</template>\n- <template v-if=\"icon && icon.raw\"><g v-html=\"raw\" v-bind=\"icon.g\"></g></template>\n+ <template v-if=\"icon && icon.raw\"><g v-bind=\"icon.g\" v-html=\"raw\" /></template>\n</slot>\n</svg>\n</template>\n-<style>\n-.fa-icon {\n- display: inline-block;\n- fill: currentColor;\n-}\n-\n-.fa-flip-horizontal {\n- transform: scale(-1, 1);\n-}\n-\n-.fa-flip-vertical {\n- transform: scale(1, -1);\n-}\n-\n-.fa-spin {\n- animation: fa-spin 0.5s 0s infinite linear;\n-}\n-\n-.fa-inverse {\n- color: #fff;\n-}\n-\n-.fa-pulse {\n- animation: fa-spin 1s infinite steps(8);\n-}\n-\n-@keyframes fa-spin {\n- 0% {\n- transform: rotate(0deg);\n- }\n- 100% {\n- transform: rotate(360deg);\n- }\n-}\n-</style>\n-\n<script>\nconst icons = {}\nexport default {\n- name: 'fa-icon',\n+ name: 'mo-icon',\nprops: {\nname: {\ntype: String,\n},\nklass () {\nreturn {\n- 'fa-icon': true,\n- 'fa-spin': this.spin,\n- 'fa-flip-horizontal': this.flip === 'horizontal',\n- 'fa-flip-vertical': this.flip === 'vertical',\n- 'fa-inverse': this.inverse,\n- 'fa-pulse': this.pulse,\n+ 'mo-icon': true,\n+ 'mo-spin': this.spin,\n+ 'mo-flip-horizontal': this.flip === 'horizontal',\n+ 'mo-flip-vertical': this.flip === 'vertical',\n+ 'mo-inverse': this.inverse,\n+ 'mo-pulse': this.pulse,\n[this.$options.name]: true\n}\n},\nlet width = 0\nlet height = 0\n- this.$children.forEach(child => {\n+ this.$children.forEach((child) => {\nchild.outerScale = this.normalizedScale\nwidth = Math.max(width, child.width)\n})\nthis.childrenWidth = width\nthis.childrenHeight = height\n- this.$children.forEach(child => {\n+ this.$children.forEach((child) => {\nchild.x = (width - child.width) / 2\nchild.y = (height - child.height) / 2\n})\nicons\n}\n- let cursor = 0xd4937\n+ let cursor = 0xD4937\nfunction getId () {\n- return `fa-${(cursor++).toString(16)}`\n+ return `mo-${(cursor++).toString(16)}`\n}\n</script>\n+\n+<style>\n+.mo-icon {\n+ display: inline-block;\n+ fill: currentColor;\n+}\n+\n+.mo-flip-horizontal {\n+ transform: scale(-1, 1);\n+}\n+\n+.mo-flip-vertical {\n+ transform: scale(1, -1);\n+}\n+\n+.mo-spin {\n+ animation: mo-spin 0.5s 0s infinite linear;\n+}\n+\n+.mo-inverse {\n+ color: #fff;\n+}\n+\n+.mo-pulse {\n+ animation: mo-spin 1s infinite steps(8);\n+}\n+\n+@keyframes mo-spin {\n+ 0% {\n+ transform: rotate(0deg);\n+ }\n+ 100% {\n+ transform: rotate(360deg);\n+ }\n+}\n+</style>\n"
    },
    {
        "msg": "refactor(progress): use  api",
        "diff": "diff --git a/packages/chakra-ui-core/src/CProgress/CProgress.js b/packages/chakra-ui-core/src/CProgress/CProgress.js import { css, keyframes } from 'emotion'\nimport CBox from '../CBox'\n-import { generateStripe, valueToPercent, forwardProps } from '../utils'\n-import { baseProps } from '../config/props'\n+import { generateStripe, valueToPercent, createStyledAttrsMixin } from '../utils'\nconst stripe = keyframes({\nfrom: { backgroundPosition: '1rem 0' },\n@@ -39,18 +38,20 @@ const progressbarSizes = {\n*/\nconst CProgressLabel = {\nname: 'CProgressLabel',\n- props: baseProps,\n- render (h) {\n+ functional: true,\n+ render (h, { data, slots, ...rest }) {\nreturn h(CBox, {\n+ ...rest,\nprops: {\n- textAlign: 'center',\n- width: '100%',\n- ...forwardProps(this.$props)\n+ as: data.attrs.as\n},\nattrs: {\n+ textAlign: 'center',\n+ width: '100%',\n+ ...data.attrs,\n'data-chakra-component': 'CProgressLabel'\n}\n- }, this.$slots.default)\n+ }, slots().default)\n}\n}\n@@ -64,23 +65,22 @@ const CProgressLabel = {\n*/\nconst CProgressTrack = {\nname: 'CProgressTrack',\n+ functional: true,\nprops: {\n- ...baseProps,\nsize: [String, Number, Array]\n},\n- render (h) {\n+ render (h, { props, slots, data, ...rest }) {\nreturn h(CBox, {\n- props: {\n+ ...rest,\n+ attrs: {\npos: 'relative',\n- height: progressbarSizes[this.size || 'md'],\n+ height: progressbarSizes[props.size || 'md'],\noverflow: 'hidden',\nw: '100%',\n- ...forwardProps(this.$props)\n- },\n- attrs: {\n+ ...data.attrs,\n'data-chakra-component': 'CProgressTrack'\n}\n- }, this.$slots.default)\n+ }, slots().default)\n}\n}\n@@ -93,9 +93,8 @@ const CProgressTrack = {\n* @see Docs https://vue.chakra-ui.com/progress\n*/\nconst CProgressIndicator = {\n- name: 'CProgressIndicator',\n+ mixins: [createStyledAttrsMixin('CProgressIndicator')],\nprops: {\n- ...baseProps,\nisIndeterminate: Boolean,\nmin: Number,\nmax: Number,\n@@ -104,23 +103,27 @@ const CProgressIndicator = {\ncomputed: {\npercent () {\nreturn valueToPercent(this.value, this.min, this.max)\n- }\n},\n- render (h) {\n- return h(CBox, {\n- props: {\n+ componentStyles () {\n+ return {\nheight: '100%',\ntransition: 'all 0.3s',\n- width: `${this.percent}%`,\n- ...forwardProps(this.$props)\n+ width: `${this.percent}%`\n+ }\n+ }\n},\n+ render (h) {\n+ return h(this.as || 'div', {\n+ class: [this.className],\nattrs: {\n+ ...this.computedAttrs,\n'aria-valuemax': this.max,\n'aria-valuemin': this.min,\n'aria-valuenow': this.isIndeterminate ? null : this.value,\nrole: 'progressbar',\n'data-chakra-component': 'CProgressIndicator'\n- }\n+ },\n+ on: this.computedListeners\n}, this.$slots.default)\n}\n}\n@@ -135,9 +138,9 @@ const CProgressIndicator = {\n*/\nconst CProgress = {\nname: 'CProgress',\n+ inheritAttrs: false,\ninject: ['$chakraColorMode'],\nprops: {\n- ...baseProps,\ncolor: {\ntype: String,\ndefault: 'blue'\n@@ -201,13 +204,13 @@ const CProgress = {\nreturn h(CProgressTrack, {\nprops: {\n- size: this.size,\n- bg: trackColor[this.colorMode],\n- borderRadius: _borderRadius,\n- ...forwardProps(this.$props)\n+ size: this.size\n},\nattrs: {\n- 'data-chakra-component': 'CProgress'\n+ bg: trackColor[this.colorMode],\n+ borderRadius: _borderRadius,\n+ 'data-chakra-component': 'CProgress',\n+ ...this.$attrs\n}\n}, [\nh(CProgressIndicator, {\n@@ -218,7 +221,9 @@ const CProgress = {\nprops: {\nmin: this.min,\nmax: this.max,\n- value: this.value,\n+ value: this.value\n+ },\n+ attrs: {\nbg: indicatorColor[this.colorMode],\nborderRadius: this.__borderRadius,\n...this.isIndeterminate && {\n",
        "date": "11.07.2020 18:26:59",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "refactor",
        "sim_msg": "feat: allow className to be passed down to ProgressBar",
        "sim_diff": "diff --git a/packages/progress-bar/src/ProgressBar.js b/packages/progress-bar/src/ProgressBar.js import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n-import { css } from \"emotion\";\n+import { cx, css } from \"emotion\";\nimport { ThemeContext } from \"@hig/theme-context\";\n+import { createCustomClassNames } from \"@hig/utils\";\nimport stylesheet from \"./stylesheet\";\nexport default class ProgressBar extends Component {\n@@ -17,7 +18,19 @@ export default class ProgressBar extends Component {\n};\nrender() {\n- const { percentComplete, stylesheet: customStylesheet } = this.props;\n+ const {\n+ percentComplete,\n+ stylesheet: customStylesheet,\n+ ...otherProps\n+ } = this.props;\n+\n+ const { className } = otherProps;\n+ const innerWrapperClassNames = createCustomClassNames(\n+ className,\n+ \"progress-bar\"\n+ );\n+ const fillClassNames = createCustomClassNames(className, \"fill\");\n+ const polygonClassNames = createCustomClassNames(className, \"polygon\");\nreturn (\n<ThemeContext.Consumer>\n@@ -28,14 +41,18 @@ export default class ProgressBar extends Component {\n);\nreturn (\n<div\n- className={css(styles.wrapper)}\n+ className={cx(css(styles.wrapper), className)}\nrole=\"progressbar\"\naria-valuemin=\"0\"\naria-valuemax=\"100\"\naria-valuenow={percentComplete}\n>\n- <div className={css(styles.progressBar)}>\n- <div className={css(styles.progressBarFill)} />\n+ <div\n+ className={cx(css(styles.progressBar), innerWrapperClassNames)}\n+ >\n+ <div\n+ className={cx(css(styles.progressBarFill), fillClassNames)}\n+ />\n<svg\nwidth=\"3px\"\nheight=\"4px\"\n@@ -45,7 +62,7 @@ export default class ProgressBar extends Component {\nxmlnsXlink=\"http://www.w3.org/1999/xlink\"\n>\n<polygon\n- className={css(styles.polygon)}\n+ className={cx(css(styles.polygon), polygonClassNames)}\nid=\"end-right\"\npoints=\"0 0 2.68 0 1 4 0 4\"\n/>\n"
    },
    {
        "msg": "refactor(SentenTree): add options spec",
        "diff": "diff --git a/components/SentenTree/index.js b/components/SentenTree/index.js @@ -3,6 +3,46 @@ import { SentenTreeBuilder,\nSentenTreeVis } from 'sententree/dist/SentenTree';\nexport default class SentenTree extends VisComponent {\n+ static get options () {\n+ return [\n+ {\n+ name: 'data',\n+ description: 'The data table.',\n+ type: 'table',\n+ format: 'objectlist'\n+ },\n+ {\n+ name: 'id',\n+ description: 'The field containing the identifier of each row.',\n+ type: 'string',\n+ domain: {\n+ mode: 'field',\n+ from: 'data',\n+ fieldTypes: ['string', 'integer', 'number']\n+ }\n+ },\n+ {\n+ name: 'text',\n+ description: 'The field containing the text sample.',\n+ domain: {\n+ mode: 'field',\n+ from: 'data',\n+ fieldTypes: ['string']\n+ }\n+ },\n+ {\n+ name: 'count',\n+ description: 'The field containing the count for each text sample.',\n+ type: 'string',\n+ domain: {\n+ mode: 'field',\n+ from: 'data',\n+ fieldTypes: ['integer']\n+ }\n+ }\n+ ];\n+ }\n+\nconstructor (el, {data, graphs = 3}) {\nsuper(el);\n",
        "date": "28.04.2017 18:21:50",
        "repo": "kitware/candela",
        "type": "refactor",
        "sim_msg": "refactor: corrention in test data",
        "sim_diff": "diff --git a/botfront/imports/api/instances/testData/results.data.js b/botfront/imports/api/instances/testData/results.data.js @@ -2467,7 +2467,7 @@ export const selectedExampleAndDummy = {\n}, {\ntext: 'good morning too', intent: 'chitchat.greet', canonical: false, entities: [],\n}, {\n- text: 'dummy', intent: 'dummy', canonical: false, entities: [],\n+ text: 'dummyazerty12345', intent: 'dummy', canonical: false, entities: [],\n}],\nentity_synonyms: [{ value: 'NYC', synonyms: ['New-York', 'the big apple'] }],\ngazette: [],\n"
    },
    {
        "msg": "refactor(Button): use includes replace indexOf",
        "diff": "diff --git a/packages/button/Button.vue b/packages/button/Button.vue @@ -22,18 +22,20 @@ export default {\nsize: {\ntype: String,\nvalidator(val) {\n- if (val === '') return true\n- return ['medium', 'small', 'mini'].indexOf(val) !== -1\n+ return ['medium', 'small', 'mini', ''].includes(val)\n}\n},\ntype: {\ntype: String,\nvalidator(val) {\n- return (\n- ['primary', 'success', 'warning', 'danger', 'info', 'text'].indexOf(\n- val\n- ) !== -1\n- )\n+ return [\n+ 'primary',\n+ 'success',\n+ 'warning',\n+ 'danger',\n+ 'info',\n+ 'text'\n+ ].includes(val)\n}\n},\nnativeType: {\n",
        "date": "10.12.2020 11:05:04",
        "repo": "hug-sun/element3",
        "type": "refactor",
        "sim_msg": "feat(button): set light as default variant\nb4.beta secondary is now \"grey\" this reduces breaking changes",
        "sim_diff": "diff --git a/lib/components/button.vue b/lib/components/button.vue @@ -49,7 +49,7 @@ export default {\nreturn this.block ? 'btn-block' : '';\n},\nbtnVariant() {\n- return this.variant ? `btn-${this.variant}` : `btn-secondary`;\n+ return this.variant ? `btn-${this.variant}` : `btn-light`;\n},\nbtnSize() {\nreturn this.size ? `btn-${this.size}` : '';\n"
    },
    {
        "msg": "refactor: Rewrite release_initializer with vanilla js",
        "diff": "diff --git a/src/platforms/browser/release_initializer.js b/src/platforms/browser/release_initializer.js +import Dumper from \"./dumper.js\"\n+\n//\n// release_initializer.js - read user's program and eval it (if it exists)\n//\n+\nconst execute_user_program = function() {\n- var dumper = null;\n- if ($(\"#biwascheme-debugger\")[0]) {\n- dumper = new BiwaScheme.Dumper($(\"#biwascheme-debugger\")[0]);\n+ const dumper = null;\n+ const debug_area = document.querySelector(\"#biwascheme-debugger\");\n+ if (debug_area) {\n+ dumper = new Dumper(debug_area);\n}\n// Error handler (show message to console div)\n- var onError = function(e, state){\n+ const onError = function(e, state){\nBiwaScheme.Port.current_error.put_string(e.message + \"\\n\");\nif (dumper) {\ndumper.dump(state);\n@@ -20,8 +24,8 @@ const execute_user_program = function() {\n}\n};\n- var run = function(script) {\n- var intp = new BiwaScheme.Interpreter(onError);\n+ const run = function(script) {\n+ const intp = new BiwaScheme.Interpreter(onError);\ntry{\nintp.evaluate(script, function(){});\n}\n@@ -31,15 +35,21 @@ const execute_user_program = function() {\n};\n// Start user's program (old style)\n- var script = $(\"script[src$='biwascheme.js']\").html() ||\n- $(\"script[src$='biwascheme-min.js']\").html();\n- if (script) run(script);\n+ let script = \"\";\n+ for (const s of document.querySelectorAll(\"script[src$='biwascheme.js']\")) {\n+ script += s.innerHTML;\n+ }\n+ for (const s of document.querySelectorAll(\"script[src$='biwascheme-min.js']\")) {\n+ script += s.innerHTML;\n+ }\n+\n+ if (script.length > 0) run(script);\n// Start user's program (new style)\n- $(function(){\n- $(\"script[type='text/biwascheme']\").each(function(){\n- run($(this).html());\n- });\n+ window.addEventListener('DOMContentLoaded', function(){\n+ for (const s of document.querySelectorAll(\"script[type='text/biwascheme']\")) {\n+ run(s.innerHTML);\n+ }\n});\n};\n",
        "date": "14.03.2021 10:45:15",
        "repo": "biwascheme/biwascheme",
        "type": "refactor",
        "sim_msg": "fix: logging for unhandledRejection",
        "sim_diff": "diff --git a/lib/cli/index.js b/lib/cli/index.js @@ -13,6 +13,10 @@ process.on('uncaughtException', (err) => {\nprocess.exit(1);\n});\n+process.on('unhandledRejection', (reason, p) => {\n+ logger.error('Unhandled Rejection:\\nPromise: ', p, '\\nReason: ', reason);\n+});\n+\nexports.run = () => {\nconst program = new Command();\n"
    },
    {
        "msg": "refactor: :recycle: update author component",
        "diff": "diff --git a/src/lib/author.svelte b/src/lib/author.svelte <script>\n+ import { onMount } from 'svelte'\n+\nexport let author\n+ const getUserDetails = async () => {\n+ const res = await fetch(`/${author}.json`)\n+ return await res.json()\n+ }\n+ let data = {}\n+ onMount(async () => {\n+ data = await getUserDetails()\n+ })\n</script>\n-<small>{author}</small>\n+<p class=\"text-sm\">Contribution by:</p>\n+<article\n+ class=\"not-prose border border-primary shadow-lg p-4 rounded-2xl\"\n+>\n+ <div class=\"flex space-x-5 justify-evenly\">\n+ <a href={data.html_url} target=\"_blank\" rel=\"noopener\">\n+ <img\n+ class=\"w-20 h-20 p-0 m-0 rounded-full\"\n+ src={data.avatar_url}\n+ alt={data.name}\n+ />\n+ </a>\n+ <a href={data.html_url} target=\"_blank\" rel=\"noopener\">\n+ <div class=\"text-sm\">\n+ <p class=\"text-lg font-bold tracking-widest\">{data.name}</p>\n+ <p>{data.bio}</p>\n+ </div>\n+ </a>\n+ </div>\n+</article>\n",
        "date": "08.04.2022 18:46:58",
        "repo": "spences10/cheat-sheets",
        "type": "refactor",
        "sim_msg": "chore(byline): revert byline text to p element",
        "sim_diff": "diff --git a/src/components/pages/blog/byline.js b/src/components/pages/blog/byline.js @@ -77,13 +77,13 @@ const Byline = ({ authors, date, smallmargin = false }) => {\n))}\n</div>\n)}\n- <div className={bylineStyles.bylineText}>\n+ <p className={bylineStyles.bylineText}>\n<span className={bylineStyles.spacer}>By </span>\n<span className={bylineStyles.author}>\n<AuthorsText authors={authors} />\n</span>\n<span className={bylineStyles.date}>{date}</span>\n- </div>\n+ </p>\n</div>\n)\n}\n"
    },
    {
        "msg": "refactor(index): headless cms -> api-first cms",
        "diff": "diff --git a/examples/pages/template/index.tpl b/examples/pages/template/index.tpl <img width=\"35px\" src=\"~examples/assets/images/tipe.svg\" alt=\"tipe.io\">\n<div>\n<p>Sponsored by Tipe.io</p>\n- <p>Next Generation Headless CMS</p>\n+ <p>Next Generation API-first CMS</p>\n</div>\n</a>\n<div class=\"cards\">\n",
        "date": "18.12.2017 11:52:44",
        "repo": "hug-sun/element3",
        "type": "refactor",
        "sim_msg": "fix: make default landing page responsive",
        "sim_diff": "diff --git a/public/index.html b/public/index.html <html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n+ <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<title>Hoodie</title>\n<link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n</head>\n"
    },
    {
        "msg": "refactor(compiler): Avoid magic number",
        "diff": "diff --git a/src/system/compiler.js b/src/system/compiler.js @@ -347,15 +347,15 @@ BiwaScheme.Compiler = BiwaScheme.Class.create({\ncase BiwaScheme.Sym(\"call/cc\"):\nvar x=x.second();\n+ var arity_of_arg = 1; // Always 1. (lambda (cc) ...)\nvar c = [\"conti\",\n(this.is_tail(next) ? (e[0].size() + 1) : 0), //number of args for outer lambda\n[\"argument\",\n- [\"constant\", 1,\n+ [\"constant\", arity_of_arg,\n[\"argument\",\nthis.compile(x, e, s,f,\n- (this.is_tail(next) ? [\"shift\", 1, [\"tco_hinted_apply\"]]\n+ (this.is_tail(next) ? [\"shift\", arity_of_arg, [\"tco_hinted_apply\"]]\n: [\"apply\"]))]]]];\n- //note: proc for call/cc takes 1 argument (= [\"apply\", 1])\n// Do not push stack frame when call/cc is in a tail context\nreturn this.is_tail(next) ? c : [\"frame\", c, next];\n",
        "date": "03.01.2020 19:29:53",
        "repo": "biwascheme/biwascheme",
        "type": "refactor",
        "sim_msg": "test: add tests for argsert warning to display positional information",
        "sim_diff": "diff --git a/test/argsert.js b/test/argsert.js @@ -83,6 +83,30 @@ describe('Argsert', () => {\no.warnings[0].should.match(/Too many arguments provided. Expected max 2 but received 3./)\n})\n+ it('warn with argument position if wrong type is provided for argument', () => {\n+ const o = checkOutput(() => {\n+ function foo (opts) {\n+ argsert('<string> <string> <string>', [].slice.call(arguments))\n+ }\n+\n+ foo('hello', 'ayy', {})\n+ })\n+\n+ o.warnings[0].should.match(/Invalid third argument. Expected string but received obj./)\n+ })\n+\n+ it('warn with generic argument position if wrong type is provided for seventh or greater argument', () => {\n+ const o = checkOutput(() => {\n+ function foo (opts) {\n+ argsert('<string> <string> <string> <string> <string> <string> <string>', [].slice.call(arguments))\n+ }\n+\n+ foo('a', 'b', 'c', 'd', 'e', 'f', 10)\n+ })\n+\n+ o.warnings[0].should.match(/Invalid manyith argument. Expected string but received number./)\n+ })\n+\nit('configures function to accept 0 parameters, if only arguments object is provided', () => {\nconst o = checkOutput(() => {\nfunction foo (expected) {\n"
    },
    {
        "msg": "refactor: remove unnecessary ui prop def",
        "diff": "diff --git a/packages/veui-theme-one/components/AlertBox.js b/packages/veui-theme-one/components/AlertBox.js @@ -8,10 +8,5 @@ config.defaults({\nsuccess: 'check-circle-o-large',\ninfo: 'info-circle-o-large',\nerror: 'cross-circle-o-large'\n- },\n- ui: {\n- type: {\n- values: ['success', 'error', 'info']\n- }\n}\n}, 'alertbox')\n",
        "date": "28.05.2018 11:59:29",
        "repo": "ecomfe/veui",
        "type": "refactor",
        "sim_msg": "fix: added border radius to Alert",
        "sim_diff": "diff --git a/src/renderer/common/alert.js b/src/renderer/common/alert.js @@ -10,7 +10,7 @@ const styles = theme => ({\nborder: `1px solid ${typography}`,\nminHeight: '50px',\nwidth: '100%',\n- borderRadius: 0,\n+ borderRadius: '4px',\npadding: '15px',\nboxSizing: 'border-box',\ncolor: typography,\n"
    },
    {
        "msg": "refactor: to optimize the createComponent method logic",
        "diff": "diff --git a/test/unit/tests/use/component.test.js b/test/unit/tests/use/component.test.js @@ -5,6 +5,7 @@ describe('component', () => {\nit('should get component instance', () => {\nconst $cf = jest.fn()\nconst Comp = {\n+ template: '<div>foo</div>',\nsetup() {\nreturn {\n$cf\n@@ -13,9 +14,10 @@ describe('component', () => {\n}\nconst instance = createComponent(Comp)\n- instance.$cf()\n+ instance.ctx.$cf()\nexpect($cf).toBeCalled()\n+ expect(instance.ctx.$el.innerHTML).toBe('foo')\n})\n})\n})\n",
        "date": "01.09.2020 14:44:29",
        "repo": "hug-sun/element3",
        "type": "refactor",
        "sim_msg": "test(components/layout/grid): add polymorphic test",
        "sim_diff": "diff --git a/components/layout/grid/test/index.test.js b/components/layout/grid/test/index.test.js @@ -88,6 +88,28 @@ describe(json.name, () => {\n// Then\nexpect(findClassName(container.innerHTML)).to.be.null\n})\n+\n+ it('should render a div when `as` prop has not been passed', () => {\n+ // given\n+ const props = {}\n+ // when\n+ const {container} = setup(props)\n+ // then\n+ expect(container.innerHTML).to.be.a('string')\n+ expect(container.innerHTML).to.not.have.lengthOf(0)\n+ expect(container.innerHTML).to.contain('div')\n+ })\n+\n+ it('should render an article when `as` prop has this value', () => {\n+ // given\n+ const props = {as: 'article'}\n+ // when\n+ const {container} = setup(props)\n+ // then\n+ expect(container.innerHTML).to.be.a('string')\n+ expect(container.innerHTML).to.not.have.lengthOf(0)\n+ expect(container.innerHTML).to.contain('article')\n+ })\n})\ndescribe('LayoutGridAlignContent', () => {\n"
    },
    {
        "msg": "refactor: change notes to note",
        "diff": "diff --git a/src/features/tooltip/Tooltip.js b/src/features/tooltip/Tooltip.js import React from \"react\";\n-import { addNote, removeNote, getNotesIndexedByHash } from 'domain/notes';\n+\n//Styling\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n@@ -10,6 +10,7 @@ import tooltipStyle from './Tooltip.module.css';\n///Redux\nimport { connect } from \"react-redux\";\nimport { getPosition, getSelectedDatum } from 'domain/controls';\n+import { addNote, removeNote, getNotesIndexedByHash } from 'domain/notes';\nclass TooltipControls extends React.Component {\nconstructor(props){\n@@ -191,7 +192,7 @@ class TooltipControls extends React.Component {\n}\n{!this.props.data.fieldValue &&\n<p className={appStyle.accordionHeader} onClick={this.toggleShowNote}>\n- Notes {!showNote && <FontAwesomeIcon icon={faAngleDoubleDown} />}{showNote && <FontAwesomeIcon onClick={this.toggleShowNote} icon={faAngleDoubleUp} />}\n+ Note {!showNote && <FontAwesomeIcon icon={faAngleDoubleDown} />}{showNote && <FontAwesomeIcon onClick={this.toggleShowNote} icon={faAngleDoubleUp} />}\n</p>\n}\n",
        "date": "02.08.2019 15:38:42",
        "repo": "iqtlabs/crviz",
        "type": "refactor",
        "sim_msg": "refactor(tooltip-icon-button): Updated translations and added tooltip to send",
        "sim_diff": "diff --git a/src/pages/home/report/ReportActionCompose.js b/src/pages/home/report/ReportActionCompose.js @@ -635,6 +635,7 @@ class ReportActionCompose extends React.Component {\n</Tooltip>\n)}\n</Pressable>\n+ <Tooltip text={this.props.translate('common.send')}>\n<TouchableOpacity\nstyle={[styles.chatItemSubmitButton,\nthis.state.isCommentEmpty\n@@ -645,6 +646,7 @@ class ReportActionCompose extends React.Component {\n>\n<Icon src={Send} fill={themeColors.componentBG} />\n</TouchableOpacity>\n+ </Tooltip>\n</View>\n{this.props.network.isOffline ? (\n<View style={[styles.chatItemComposeSecondaryRow]}>\n"
    },
    {
        "msg": "refactor(PreactConfig): Keep ESLint happy",
        "diff": "diff --git a/src/lib/webpack-config.js b/src/lib/webpack-config.js @@ -24,7 +24,6 @@ import ProgressBarPlugin from 'progress-bar-webpack-plugin';\nimport CopyWebpackPlugin from 'copy-webpack-plugin';\nimport ReplacePlugin from 'replace-bundle-webpack-plugin';\nimport SWPrecacheWebpackPlugin from 'sw-precache-webpack-plugin';\n-import createBabelConfig from './babel-config';\nimport prerender from './prerender';\nimport PushManifestPlugin from './push-manifest';\n",
        "date": "29.05.2017 15:45:31",
        "repo": "preactjs/preact-cli",
        "type": "refactor",
        "sim_msg": "feat(hops-build-config): add source maps to production build output",
        "sim_diff": "diff --git a/packages/build-config/configs/build.js b/packages/build-config/configs/build.js @@ -26,6 +26,7 @@ module.exports = {\nmodule: {\nrules: require('../sections/module-rules')('build')\n},\n+ devtool: 'source-map',\nplugins: [\nnew WriteFilePlugin(/^manifest\\.js?$/),\nnew WriteManifestPlugin(),\n@@ -61,9 +62,9 @@ module.exports = {\nnew webpack.LoaderOptionsPlugin({\ndebug: false,\nminimize: true,\n- sourceMap: false\n+ sourceMap: true\n}),\nnew webpack.optimize.ModuleConcatenationPlugin(),\n- new UglifyPlugin()\n+ new UglifyPlugin({ sourceMap: true })\n]\n};\n"
    },
    {
        "msg": "refactor: change px to rem in footer, header, and sidebar; reorder transition values in sidebar",
        "diff": "diff --git a/scss/_variables.scss b/scss/_variables.scss @@ -1365,7 +1365,7 @@ $list-group-variants: (\n// Header\n// scss-docs-start header-variables\n-$header-min-height: 56px !default;\n+$header-min-height: 4rem !default;\n$header-padding-y: $spacer / 2 !default;\n$header-padding-x: $spacer / 2 !default;\n$header-brand-font-size: $font-size-lg !default;\n@@ -1405,7 +1405,7 @@ $header-divider-border-color: $header-border-color !default;\n// Subheader\n// scss-docs-start subheader-variables\n-$subheader-min-height: 48px !default;\n+$subheader-min-height: 3rem !default;\n$subheader-padding-y: $spacer / 2 !default;\n$subheader-padding-x: $spacer !default;\n$subheader-border-color: $border-color !default;\n@@ -1491,11 +1491,11 @@ $carousel-dark-control-icon-filter: invert(1) grayscale(100) !default;\n// scss-docs-end carousel-variables\n// scss-docs-start sidebar-variables\n-$sidebar-width: 256px !default;\n+$sidebar-width: 16rem !default;\n$sidebar-widths: (\n- sm: 192px,\n- lg: 320px,\n- xl: 384px\n+ sm: 12rem,\n+ lg: 20rem,\n+ xl: 24rem\n) !default;\n$sidebar-padding-y: 0 !default;\n$sidebar-padding-x: 0 !default;\n@@ -1503,7 +1503,7 @@ $sidebar-color: $high-emphasis-light !default;\n$sidebar-bg: $gray-base !default;\n$sidebar-border-width: 0 !default;\n$sidebar-border-color: transparent !default;\n-$sidebar-transition: box-shadow .075s, transform .15s, margin-left .15s, margin-right .15s, width .15s, z-index 0s ease .15s !default;\n+$sidebar-transition: margin-left .15s, margin-right .15s, box-shadow .075s, transform .15s, width .15s, z-index 0s ease .15s !default;\n$sidebar-reliant-transition: margin .15s !default;\n$sidebar-brand-height: 56px !default;\n@@ -1550,6 +1550,7 @@ $sidebar-nav-icon-font-size: $sidebar-nav-icon-height !default;\n$sidebar-nav-group-bg: rgba(0, 0, 0, .2) !default;\n$sidebar-nav-group-transition: background .15s ease-in-out !default;\n$sidebar-nav-group-items-transition: height .15s ease !default;\n+$sidebar-nav-group-toggle-show-color: $sidebar-nav-link-color !default;\n$sidebar-nav-group-indicator-color: $medium-emphasis-light !default;\n$sidebar-nav-group-indicator: str-replace(url(\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 11 14'%3E%3Cpath fill='#{$sidebar-nav-group-indicator-color}' d='M9.148 2.352l-4.148 4.148 4.148 4.148q0.148 0.148 0.148 0.352t-0.148 0.352l-1.297 1.297q-0.148 0.148-0.352 0.148t-0.352-0.148l-5.797-5.797q-0.148-0.148-0.148-0.352t0.148-0.352l5.797-5.797q0.148-0.148 0.352-0.148t0.352 0.148l1.297 1.297q0.148 0.148 0.148 0.352t-0.148 0.352z'/%3E%3C/svg%3E\"), \"#\", \"%23\") !default;\n@@ -1575,7 +1576,7 @@ $sidebar-toggler-hover-indicator: str-replace(url(\"data:image/svg+xml;c\n// Footer\n// scss-docs-start footer-variables\n-$footer-min-height: 50px !default;\n+$footer-min-height: 3rem !default;\n$footer-padding-y: $spacer / 2 !default;\n$footer-padding-x: $spacer !default;\n$footer-bg: $gray-100 !default;\n",
        "date": "12.01.2021 17:36:27",
        "repo": "coreui/coreui",
        "type": "refactor",
        "sim_msg": "feat: update display font sizes and line heights\nfeat: update display font sizes and line heights\nBREAKING CHANGE changed font-sizes and line-heights of display-1,-2,-3,-4",
        "sim_diff": "diff --git a/scss/core/_variables.scss b/scss/core/_variables.scss // Variables\n+// Variables\n//\n// Variables should follow the `$component-state-property-size` formula for\n// consistent naming. Ex: $nav-link-disabled-color and $modal-content-box-shadow-xs.\n@@ -560,16 +561,17 @@ $headings-font-weight: $font-weight-bold !default;\n$headings-line-height: 1.25 !default;\n$headings-color: $black !default;\n-$display1-size: 6rem !default;\n-$display2-size: 5.5rem !default;\n-$display3-size: 4.5rem !default;\n-$display4-size: 3.5rem !default;\n+$display1-size: 3.75rem !default;\n+$display2-size: 4.875rem !default;\n+$display3-size: 5.625rem !default;\n+$display4-size: 7.5rem !default;\n$display1-weight: 700 !default;\n$display2-weight: 700 !default;\n$display3-weight: 700 !default;\n$display4-weight: 700 !default;\n-$display-line-height: $headings-line-height !default;\n+\n+$display-line-height: 1.0 !default;\n$lead-font-size: $font-size-base * 1.25 !default;\n$lead-font-weight: null !default;\n"
    },
    {
        "msg": "refactor: remove `thead` `border-bottom-color`",
        "diff": "diff --git a/scss/_tables.scss b/scss/_tables.scss // Highlight border color between thead, tbody and tfoot.\n> :not(:last-child) > :last-child > * {\n- border-bottom-color: $table-group-separator-color;\n+ // border-bottom-color: $table-group-separator-color;\n}\n}\n",
        "date": "04.01.2021 23:29:05",
        "repo": "coreui/coreui",
        "type": "refactor",
        "sim_msg": "perf(twbs/table): remove background tables, responsive inflix and dark theads\ntables almost not used at all\nBREAKING CHANGE: tons of table additional classes removed",
        "sim_diff": "diff --git a/@ecomplus/storefront-twbs/scss/components/_tables.scss b/@ecomplus/storefront-twbs/scss/components/_tables.scss }\n}\n}\n-\n-\n-// Table backgrounds\n-//\n-// Exact selectors below required to override `.table-striped` and prevent\n-// inheritance to nested tables.\n-\n-@each $color, $value in $theme-colors {\n- @include table-row-variant($color, theme-color-level($color, $table-bg-level), theme-color-level($color, $table-border-level));\n-}\n-\n-@include table-row-variant(active, $table-active-bg);\n-\n-\n-// Dark styles\n-//\n-// Same table markup, but inverted color scheme: dark background and light text.\n-\n-// stylelint-disable-next-line no-duplicate-selectors\n-.table {\n- .thead-dark {\n- th {\n- color: $table-dark-color;\n- background-color: $table-dark-bg;\n- border-color: $table-dark-border-color;\n- }\n- }\n-\n- .thead-light {\n- th {\n- color: $table-head-color;\n- background-color: $table-head-bg;\n- border-color: $table-border-color;\n- }\n- }\n-}\n-\n-.table-dark {\n- color: $table-dark-color;\n- background-color: $table-dark-bg;\n-\n- th,\n- td,\n- thead th {\n- border-color: $table-dark-border-color;\n- }\n-\n- &.table-bordered {\n- border: 0;\n- }\n-\n- &.table-striped {\n- tbody tr:nth-of-type(#{$table-striped-order}) {\n- background-color: $table-dark-accent-bg;\n- }\n- }\n-\n- &.table-hover {\n- tbody tr {\n- @include hover() {\n- color: $table-dark-hover-color;\n- background-color: $table-dark-hover-bg;\n- }\n- }\n- }\n-}\n-\n-\n-// Responsive tables\n-//\n-// Generate series of `.table-responsive-*` classes for configuring the screen\n-// size of where your table will overflow.\n-\n-.table-responsive {\n- @each $breakpoint in map-keys($grid-breakpoints) {\n- $next: breakpoint-next($breakpoint, $grid-breakpoints);\n- $infix: breakpoint-infix($next, $grid-breakpoints);\n-\n- &#{$infix} {\n- @include media-breakpoint-down($breakpoint) {\n- display: block;\n- width: 100%;\n- overflow-x: auto;\n- -webkit-overflow-scrolling: touch;\n-\n- // Prevent double border on horizontal scroll due to use of `display: block;`\n- > .table-bordered {\n- border: 0;\n- }\n- }\n- }\n- }\n-}\n"
    },
    {
        "msg": "refactor: use vue3 to refactor tag component",
        "diff": "diff --git a/packages/tag/src/tag.vue b/packages/tag/src/tag.vue +\n<script>\n+import { h, computed, getCurrentInstance, Transition } from \"vue\";\nexport default {\n- name: 'ElTag',\n+ name: \"ElTag\",\nprops: {\ntext: String,\nclosable: Boolean,\nsize: String,\neffect: {\ntype: String,\n- default: 'light',\n+ default: \"light\",\nvalidator(val) {\n- return ['dark', 'light', 'plain'].indexOf(val) !== -1;\n- }\n- }\n- },\n- methods: {\n- handleClose(event) {\n- event.stopPropagation();\n- this.$emit('close', event);\n+ return [\"dark\", \"light\", \"plain\"].indexOf(val) !== -1;\n},\n- handleClick(event) {\n- this.$emit('click', event);\n- }\n},\n- computed: {\n- tagSize() {\n- return this.size || (this.$ELEMENT || {}).size;\n- }\n},\n- render(h) {\n- const { type, tagSize, hit, effect } = this;\n+ setup(props, { emit, slots }) {\n+ const {\n+ type,\n+ hit,\n+ effect,\n+ color,\n+ closable,\n+ disableTransitions,\n+ size,\n+ } = props;\n+\n+ const tagSize = computed(() => {\n+ return size || (getCurrentInstance().proxy.$ELEMENT || {}).size;\n+ });\n+ const handleClose = (event) => {\n+ event.stopPropagation();\n+ emit(\"close\", event);\n+ };\n+ const handleClick = (event) => {\n+ emit(\"click\", event);\n+ };\n+\nconst classes = [\n- 'el-tag',\n- type ? `el-tag--${type}` : '',\n- tagSize ? `el-tag--${tagSize}` : '',\n- effect ? `el-tag--${effect}` : '',\n- hit && 'is-hit'\n+ \"el-tag\",\n+ type ? `el-tag--${type}` : \"\",\n+ tagSize.value ? `el-tag--${tagSize.value}` : \"\",\n+ effect ? `el-tag--${effect}` : \"\",\n+ hit && \"is-hit\",\n];\nconst tagEl = (\n<span\nclass={classes}\n- style={{ backgroundColor: this.color }}\n- on-click={ this.handleClick }>\n- { this.$slots.default }\n- {\n- this.closable && <i class=\"el-tag__close el-icon-close\" on-click={ this.handleClose }></i>\n- }\n+ style={{ backgroundColor: color }}\n+ on-click={handleClick}\n+ >\n+ {slots.default && slots.default()}\n+ {closable && (\n+ <i class=\"el-tag__close el-icon-close\" on-click={handleClose}></i>\n+ )}\n</span>\n);\n-\n- return this.disableTransitions ? tagEl : <transition name=\"el-zoom-in-center\">{ tagEl }</transition>;\n- }\n+ return () =>\n+ disableTransitions ? (\n+ tagEl\n+ ) : (\n+ <Transition name=\"el-zoom-in-center\">{tagEl}</Transition>\n+ );\n+ },\n};\n</script>\n",
        "date": "05.08.2020 22:03:32",
        "repo": "hug-sun/element3",
        "type": "refactor",
        "sim_msg": "refactor(container): adds script setup syntac, removes buildClass usage",
        "sim_diff": "diff --git a/src/components/container/CdrContainer.vue b/src/components/container/CdrContainer.vue -<template>\n- <component :is=\"tag\" :class=\"mapClasses(style, baseClass, modifierClass)\">\n- <slot />\n- </component>\n-</template>\n-\n-<script>\n-import { defineComponent, useCssModule, computed } from 'vue';\n+<script setup>\n+import { useCssModule, computed } from 'vue';\nimport propValidator from '../../utils/propValidator';\n-import { buildClass } from '../../utils/buildClass';\nimport mapClasses from '../../utils/mapClasses';\n-export default defineComponent({\n- name: 'CdrContainer',\n- props: {\n+const props = defineProps({\n/** Any valid HTML tag */\ntag: {\ntype: String,\n@@ -27,19 +18,21 @@ export default defineComponent({\nfalse,\n),\n},\n- },\n- setup(props, ctx) {\n- const baseClass = 'cdr-container';\n- const modifierClass = computed(() => buildClass(baseClass, props.modifier));\n- return {\n- style: useCssModule(),\n- baseClass,\n- modifierClass,\n- mapClasses,\n- };\n- },\n});\n+\n+const baseClass = 'cdr-container';\n+const style = useCssModule();\n+\n+/************************ Computed properties *************************/\n+const modifierClass = computed(() => `${baseClass}--${props.modifier}`);\n+\n</script>\n+<template>\n+ <component :is=\"tag\" :class=\"mapClasses(style, baseClass, modifierClass)\">\n+ <slot />\n+ </component>\n+</template>\n+\n<style lang=\"scss\" module src=\"./styles/CdrContainer.module.scss\">\n</style>\n"
    },
    {
        "msg": "refactor: rename loadData to load for cascader",
        "diff": "diff --git a/packages/veui/src/components/Cascader/Cascader.vue b/packages/veui/src/components/Cascader/Cascader.vue :select-mode=\"selectMode\"\n:column-width=\"keyword ? null : columnWidth\"\n:expanded=\"realExpanded\"\n- :load-data=\"loadData && !keyword ? loadAndSaveData : null\"\n+ :load=\"load && !keyword ? loadAndSaveData : null\"\n@update:expanded=\"handlePaneUpdateExpanded\"\n@select=\"handlePaneSelect\"\n@keydown.native=\"!searchable && handleCascaderKeydown($event)\"\n@@ -240,7 +240,7 @@ export default {\nreturn ['complete', 'simple'].indexOf(val) >= 0\n}\n},\n- loadData: Function,\n+ load: Function,\ninline: Boolean,\nmax: Number\n},\n@@ -405,9 +405,12 @@ export default {\n}\n},\nmethods: {\n- loadAndSaveData (option, trigger) {\n- return Promise.resolve(this.loadData(option, trigger)).then((loaded) => {\n- this.$set(this.loadedData, getKey(option), loaded)\n+ loadAndSaveData (context) {\n+ return Promise.resolve(this.load(context)).then((loaded) => {\n+ if (loaded) {\n+ this.$set(this.loadedData, getKey(context.parent), loaded)\n+ }\n+ return loaded\n})\n},\nhandleCascaderKeydown (e) {\n",
        "date": "14.06.2022 19:48:36",
        "repo": "ecomfe/veui",
        "type": "refactor",
        "sim_msg": "chore: Fix QDataTable demo page typo",
        "sim_diff": "diff --git a/dev/components/components/data-table.vue b/dev/components/components/data-table.vue :separator=\"separator\"\n@request=\"request\"\n>\n- <template slot=\"top-right\" slot-slot-scope=\"props\">\n+ <template slot=\"top-right\" slot-scope=\"props\">\n<q-search v-model=\"filter\" />\n</template>\n</q-data-table>\n"
    },
    {
        "msg": "refactor: parseBlocks",
        "diff": "diff --git a/frontend/leaderboard/src/Types.re b/frontend/leaderboard/src/Types.re @@ -184,7 +184,6 @@ module Block = {\neach UserCommand and InternalCommand to it's associated block.\n*/\nlet parseBlocks = blocks => {\n- let blocks =\nBelt.Map.Int.(\nblocks\n|> Array.fold_left(\n@@ -234,8 +233,6 @@ module Block = {\n)\n|> valuesToArray\n);\n-\n- blocks;\n};\n};\n",
        "date": "21.12.2020 20:01:34",
        "repo": "minaprotocol/mina",
        "type": "refactor",
        "sim_msg": "refactor(tokens): add border jsdoc module",
        "sim_diff": "diff --git a/packages/tokens/src/global/borders.js b/packages/tokens/src/global/borders.js +/**\n+ * @module borders\n+ * @desc Borders tokens module.\n+ *\n+ * @memberof @gympass/tokens\n+ */\n+\n+/**\n+ * A border\n+ * @typedef Border\n+ *\n+ * @type {Object}\n+ * @property {String} zero\n+ * @property {String} small\n+ * @property {String} medium\n+ * @property {String} large\n+ */\n+\n+/**\n+ * @type {Border}\n+ */\nconst border = [0, 2, 4, 8];\n[border.zero, border.small, border.medium, border.large] = border;\n"
    },
    {
        "msg": "refactor(SimilarityGraph): empty top-level div before placing SVG",
        "diff": "diff --git a/components/SimilarityGraph/index.js b/components/SimilarityGraph/index.js @@ -8,6 +8,10 @@ export default class SimilarityGraph extends VisComponent {\nsuper(el);\nthis.data = data;\n+ // Empty the top-level div.\n+ d3.select(this.el)\n+ .selectAll('*').remove();\n+\n// Construct an SVG element inside the top-level div.\nthis.svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\nthis.svg.setAttribute('width', width);\n",
        "date": "25.04.2017 16:29:06",
        "repo": "kitware/candela",
        "type": "refactor",
        "sim_msg": "feat(svg): add share, twitter, mail and clipboard icons",
        "sim_diff": "diff --git a/common/svg.js b/common/svg.js @@ -2006,3 +2006,66 @@ export const Lock = (props) => (\n/>\n</svg>\n);\n+\n+export const Share = (props) => (\n+ <svg width={16} height={16} fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n+ <path\n+ d=\"M12 5.333a2 2 0 100-4 2 2 0 000 4zM4 10a2 2 0 100-4 2 2 0 000 4zM12 14.667a2 2 0 100-4 2 2 0 000 4zM5.727 9.007l4.553 2.653M10.273 4.34L5.727 6.993\"\n+ stroke=\"currentColor\"\n+ strokeWidth={1.25}\n+ strokeLinecap=\"round\"\n+ strokeLinejoin=\"round\"\n+ />\n+ </svg>\n+);\n+\n+export const Mail = (props) => (\n+ <svg width={16} height={16} fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n+ <path\n+ d=\"M2.667 2.667h10.666c.734 0 1.334.6 1.334 1.333v8c0 .733-.6 1.333-1.334 1.333H2.667c-.734 0-1.334-.6-1.334-1.333V4c0-.733.6-1.333 1.334-1.333z\"\n+ stroke=\"currentColor\"\n+ strokeWidth={1.25}\n+ strokeLinecap=\"round\"\n+ strokeLinejoin=\"round\"\n+ />\n+ <path\n+ d=\"M14.667 4L8 8.667 1.333 4\"\n+ stroke=\"currentColor\"\n+ strokeWidth={1.25}\n+ strokeLinecap=\"round\"\n+ strokeLinejoin=\"round\"\n+ />\n+ </svg>\n+);\n+\n+export const Twitter = (props) => (\n+ <svg width={16} height={14} fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n+ <path\n+ d=\"M15.333 1a7.268 7.268 0 01-2.093 1.02 2.987 2.987 0 00-5.24 2v.667a7.107 7.107 0 01-6-3.02s-2.667 6 3.333 8.666a7.76 7.76 0 01-4.666 1.334C6.667 15 14 11.667 14 4c0-.186-.018-.371-.053-.553A5.147 5.147 0 0015.333 1z\"\n+ fill=\"#fff\"\n+ stroke=\"#fff\"\n+ strokeWidth={1.25}\n+ strokeLinecap=\"round\"\n+ strokeLinejoin=\"round\"\n+ />\n+ </svg>\n+);\n+\n+export const Clipboard = (props) => (\n+ <svg width={16} height={16} fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n+ <path\n+ d=\"M10.667 2.667H12A1.333 1.333 0 0113.333 4v9.333A1.333 1.333 0 0112 14.667H4a1.333 1.333 0 01-1.333-1.334V4A1.333 1.333 0 014 2.667h1.333\"\n+ stroke=\"currentColor\"\n+ strokeWidth={1.25}\n+ strokeLinecap=\"round\"\n+ strokeLinejoin=\"round\"\n+ />\n+ <path\n+ d=\"M10 1.333H6A.667.667 0 005.333 2v1.333c0 .369.299.667.667.667h4a.667.667 0 00.667-.667V2A.667.667 0 0010 1.333z\"\n+ stroke=\"currentColor\"\n+ strokeWidth={1.25}\n+ strokeLinecap=\"round\"\n+ strokeLinejoin=\"round\"\n+ />\n+ </svg>\n+);\n"
    },
    {
        "msg": "refactor: remove unnecessary spread.",
        "diff": "diff --git a/packages/chakra-ui-core/src/CInputGroup/CInputGroup.js b/packages/chakra-ui-core/src/CInputGroup/CInputGroup.js @@ -53,9 +53,7 @@ const CInputGroup = {\nconst clone = cloneVNode(vnode, h)\nreturn h(clone.componentOptions.Ctor, {\n...clone.data,\n- on: {\n- ...(clone.componentOptions.listeners || {})\n- },\n+ on: (clone.componentOptions.listeners || {}),\nprops: {\n...(clone.data.props || {}),\n...clone.componentOptions.propsData,\n",
        "date": "23.12.2021 00:35:33",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "refactor",
        "sim_msg": "refactor(components/molecule/buttonGroup): Remove no-longer needed functions",
        "sim_diff": "diff --git a/components/molecule/buttonGroup/src/settings.js b/components/molecule/buttonGroup/src/settings.js export const BASE_CLASS = 'sui-MoleculeButtonGroup'\n-\n-export const isFunction = fn => typeof fn === 'function'\n-\n-export const combineProps = (childProp, wrapperProp) =>\n- childProp === undefined ? wrapperProp : childProp\n"
    },
    {
        "msg": "refactor: use optional chain",
        "diff": "diff --git a/src/use/emitter.js b/src/use/emitter.js @@ -103,7 +103,7 @@ function broadcast() {\nchildren.forEach((vnode) => {\nconst childComponent = vnode.component\n- if (childComponent && childComponent.type && childComponent.type.name === componentName) {\n+ if (childComponent?.type?.name === componentName) {\nchildComponent.emit(eventName, ...params)\n} else {\n_broadcast(childComponent)\n",
        "date": "21.08.2020 14:48:44",
        "repo": "hug-sun/element3",
        "type": "refactor",
        "sim_msg": "refactor(lib): small update in lib/emitter_wrapper",
        "sim_diff": "diff --git a/lib/emitter_wrapper.js b/lib/emitter_wrapper.js @@ -8,13 +8,8 @@ class EmitterWrapper {\naddListener (event, listener) {\nthis.emitter.addListener(event, listener)\n-\n- if (!this.listeners.hasOwnProperty(event)) {\n- this.listeners[event] = []\n- }\n-\n+ this.listeners[event] = this.listeners[event] || []\nthis.listeners[event].push(listener)\n-\nreturn this\n}\n"
    },
    {
        "msg": "refactor(src/common/api/utils/xhr_wrapper.js): some comments, fix export of localStorage stuff",
        "diff": "diff --git a/src/common/api/utils/xhr_wrapper.js b/src/common/api/utils/xhr_wrapper.js // Request utils,\n-// feel free to replace with your code\n+// Feel free to replace with your code\n// (get, post are used in ApiServices)\n-import {getLocalToken, resetLocalToken} from 'api'\n+import {getLocalToken, resetLocalToken} from 'api/LocalStorageCookiesSvc'\n-export default function requestWrapper (method) {\n+function requestWrapper (method) {\nreturn async function (url, data = null, params = {}) {\nif (method === 'GET') {\n- // Is it a GET?\n+ // It's a GET response\n// GET doesn't have data\nparams = data\ndata = null\n@@ -27,12 +27,16 @@ export default function requestWrapper (method) {\n}\n// Check that req url is relative and request was sent to our domain\n- if (url.match(/^https?:\\/\\//gi) > -1) {\n+ if (!/(http|https):\\/\\//.test(url)) {\n+ console.log(`Request ${url} was sent to our domain`)\nconst token = getLocalToken()\nif (token) {\ndefaults.headers.Authorization = `JWT ${token}`\n}\nurl = process.env.BASE_API + url\n+ } else {\n+ console.log(`Request ${url} was sent to external domain`)\n+ // Request was set to an external domain\n}\nif (data) {\n",
        "date": "10.08.2017 04:55:13",
        "repo": "metnew/suicrux",
        "type": "refactor",
        "sim_msg": "feat(http): Add XHR Timeout configuration",
        "sim_diff": "diff --git a/src/lib/http.js b/src/lib/http.js @@ -9,7 +9,8 @@ type RequestOptionsType = {\njson? : Object,\ndata? : { [key : string] : string },\nbody? : string,\n- win? : any\n+ win? : any,\n+ timeout? : number\n};\nconst HEADERS = {\n@@ -19,7 +20,7 @@ const HEADERS = {\nlet headerBuilders = [];\n-export function request({ url, method = 'get', headers = {}, json, data, body, win = window } : RequestOptionsType) : SyncPromise<Object> {\n+export function request({ url, method = 'get', headers = {}, json, data, body, win = window, timeout = 0 } : RequestOptionsType) : SyncPromise<Object> {\nreturn new SyncPromise((resolve, reject) => {\n@@ -106,6 +107,11 @@ export function request({ url, method = 'get', headers = {}, json, data, body, w\n}).join('&');\n}\n+ xhr.timeout = timeout;\n+ xhr.ontimeout = function () {\n+ reject(new Error(`Request to ${method.toLowerCase()} ${url} has timed out`));\n+ };\n+\nxhr.send(body);\n});\n}\n"
    },
    {
        "msg": "refactor: remove useless prop `focusClass`",
        "diff": "diff --git a/packages/veui/src/components/Autocomplete/Autocomplete.vue b/packages/veui/src/components/Autocomplete/Autocomplete.vue @@ -106,10 +106,6 @@ export default {\nmixins: [ui, input, overlay],\nprops: {\n...AutocompleteBase.props,\n- focusClass: {\n- type: String,\n- default: 'veui-autocomplete-focus'\n- },\nsuggestTrigger: {\ntype: [String, Array],\ndefault: 'input'\n",
        "date": "28.05.2019 19:33:04",
        "repo": "ecomfe/veui",
        "type": "refactor",
        "sim_msg": "fix: Autocomplete only work in q-search",
        "sim_diff": "diff --git a/src/components/autocomplete/QAutocomplete.vue b/src/components/autocomplete/QAutocomplete.vue @@ -223,8 +223,8 @@ export default {\n}\n},\nmounted () {\n- if (this.__input === void 0) {\n- console.error('Autocomplete needs to be inserted into an input form component.')\n+ if (this.__input === null) {\n+ console.error('Autocomplete needs to be inserted into a QInput or QSearch component.')\nreturn\n}\nthis.__input.register()\n"
    },
    {
        "msg": "refactor: use useGlobalOptions get  in Button",
        "diff": "diff --git a/packages/button/Button.vue b/packages/button/Button.vue </template>\n<script>\n-import { toRefs, inject, computed, getCurrentInstance } from 'vue'\n+import { useGlobalOptions } from '../../src/use/globalConfig'\n+import { toRefs, inject, computed } from 'vue'\nexport default {\nname: 'ElButton',\nprops: {\n@@ -89,13 +90,10 @@ const useButtonDisabled = (disabled) => {\n}\nconst useButtonSize = (size) => {\n+ const globalConfig = useGlobalOptions()\nreturn computed(() => {\nconst elFormItem = inject('elFormItem', {})\n- return (\n- size?.value ||\n- elFormItem.elFormItemSize ||\n- getCurrentInstance().ctx.$ELEMENT?.size\n- )\n+ return size?.value || elFormItem.elFormItemSize || globalConfig.size\n})\n}\n</script>\n",
        "date": "28.11.2020 16:50:26",
        "repo": "hug-sun/element3",
        "type": "refactor",
        "sim_msg": "feat(button): set light as default variant\nb4.beta secondary is now \"grey\" this reduces breaking changes",
        "sim_diff": "diff --git a/lib/components/button.vue b/lib/components/button.vue @@ -49,7 +49,7 @@ export default {\nreturn this.block ? 'btn-block' : '';\n},\nbtnVariant() {\n- return this.variant ? `btn-${this.variant}` : `btn-secondary`;\n+ return this.variant ? `btn-${this.variant}` : `btn-light`;\n},\nbtnSize() {\nreturn this.size ? `btn-${this.size}` : '';\n"
    },
    {
        "msg": "refactor(fab): remove variable references",
        "diff": "diff --git a/consumables/scss/components/fab/fab.scss b/consumables/scss/components/fab/fab.scss @import '../../global/colors/colors';\n@import '../../global/helpers';\n@import '../../global/layout/grid';\n-@import 'vars';\n@import '../../import-once';\n@include exports('fab') {\n.bx--fab__hexagon {\ntransition: fill $transition--base;\n- fill: $color__fab-hexagon;\n+ fill: $color__blue-40;\n}\n.bx--fab__plus-icon {\n@include rotate(0, $transition--base);\n- fill: $color__fab-plus-icon;\n+ fill: $color__white;\n}\n}\n.bx--fab__hexagon {\ntransition: fill $transition--base;\n- fill: $color__fab-hexagon--is-closed;\n+ fill: $color__navy-gray-5;\n}\n.bx--fab__plus-icon {\n",
        "date": "04.01.2017 16:27:07",
        "repo": "carbon-design-system/carbon",
        "type": "refactor",
        "sim_msg": "feat(atom/upload): remove duplicated token",
        "sim_diff": "diff --git a/components/atom/upload/src/index.scss b/components/atom/upload/src/index.scss @@ -11,7 +11,6 @@ $fd-atom-upload: column !default;\n$p-atom-upload: $p-l * 3 $p-l * 2 $p-l !default;\n$ai-atom-upload: center !default;\n$jc-atom-upload: center !default;\n-$br-atom-upload: $bdrs-atom-upload;\n$ai-atom-upload-block-text: center !default;\n$fz-atom-upload-text: $fz-xl !default;\n$fz-atom-upload-text-secondary: $fz-l !default;\n@@ -22,7 +21,7 @@ $w-atom-upload-icon: $sz-icon-xl * 2 !default;\nalign-items: $ai-atom-upload;\nbackground-color: $bg-atom-upload;\nborder: $bw-atom-upload dashed $c-atom-upload;\n- border-radius: $br-atom-upload;\n+ border-radius: $bdrs-atom-upload;\ncolor: $c-atom-upload;\ndisplay: flex;\nflex-direction: $fd-atom-upload;\n"
    },
    {
        "msg": "refactor: Preact CLI tests",
        "diff": "diff --git a/src/commands/create.js b/src/commands/create.js @@ -115,9 +115,9 @@ export default asyncCommand({\nawait fs.writeFile(path.resolve(target, 'package.json'), JSON.stringify(pkg, null, 2));\n+ if (argv.install) {\nspinner.text = 'Installing dev dependencies';\n- if (argv.install) {\nawait npm(target, [\n'install', '--save-dev',\n'preact-cli',\n@@ -146,9 +146,9 @@ export default asyncCommand({\n'preact-compat',\n'preact-router'\n]);\n- }\nspinner.succeed('Done!\\n');\n+ }\nreturn `\nTo get started, cd into the new directory:\n",
        "date": "12.06.2017 17:23:18",
        "repo": "preactjs/preact-cli",
        "type": "refactor",
        "sim_msg": "fix(core): catch build errors in serve method",
        "sim_diff": "diff --git a/src/index.js b/src/index.js @@ -14,7 +14,7 @@ const self = module.exports = {\n.catch(error => { spinner.fail('Build failed'); console.error(error); process.exit(1) })\n},\nserve: async () => {\n- await self.build()\n+ await self.build().catch(error => { console.error(error); process.exit(1) })\nrequire('./generators/config')\n.getMerged('local')\n@@ -40,7 +40,11 @@ const self = module.exports = {\n...watchPaths\n]\n)\n- .on('change', async () => { await self.build(); bs.reload() })\n+ .on('change', async () => {\n+ await self.build()\n+ .then(() => bs.reload())\n+ .catch(error => { console.error(error); process.exit(1) })\n+ })\n})\n}\n}\n"
    },
    {
        "msg": "refactor: rename to ElPagination",
        "diff": "diff --git a/packages/pagination/index.js b/packages/pagination/index.js -import Pagination from './Pagination'\n+import ElPagination from './Pagination'\n/* istanbul ignore next */\n-Pagination.install = function (app) {\n- app.component(Pagination.name, Pagination)\n+ElPagination.install = function (app) {\n+ app.component(ElPagination.name, ElPagination)\n}\n-export default Pagination\n+export default ElPagination\n",
        "date": "23.10.2020 16:26:56",
        "repo": "hug-sun/element3",
        "type": "refactor",
        "sim_msg": "docs(example): removed page options from the pagination example state",
        "sim_diff": "diff --git a/examples/pagination-client-side/src/App.js b/examples/pagination-client-side/src/App.js @@ -76,7 +76,6 @@ function Table({ columns, data }) {\npageCount,\ncanNextPage,\ncanPreviousPage,\n- pageOptions: [...pageOptions.slice(0, 6), '...'],\n},\nnull,\n2\n"
    },
    {
        "msg": "refactor: composition-api refactor ok",
        "diff": "diff --git a/packages/input/src/use.js b/packages/input/src/use.js -import { computed, getCurrentInstance, inject, ref, unref, nextTick } from 'vue'\n+import { computed, getCurrentInstance, inject, ref, unref, nextTick, watch } from 'vue'\nimport merge from 'element-ui/src/utils/merge'\nimport { isKorean } from 'element-ui/src/utils/shared'\n@@ -21,7 +21,7 @@ export const useValidate = () => {\nreturn { validateState, validateIcon }\n}\n-export const useTextarea = (autosize, type, resize, textareaCalcStyle) => {\n+export const useTextarea = ({ autosize, type, resize, modelValue, validateEvent }, textareaCalcStyle, instance) => {\nconst textarea = ref(null)\nconst textareaStyle = computed(() => {\n@@ -46,10 +46,21 @@ export const useTextarea = (autosize, type, resize, textareaCalcStyle) => {\nmaxRows\n)\n}\n+\n+ watch(\n+ () => modelValue,\n+ (val) => {\n+ nextTick(resizeTextarea)\n+ if (unref(validateEvent)) {\n+ instance.proxy.dispatch('ElFormItem', 'el.form.change', [val])\n+ }\n+ }\n+ )\n+\nreturn { textarea, textareaStyle, resizeTextarea }\n}\n-export const useInput = (size, type, disabled, modelValue, readonly, clearable, showPassword, showWordLimit, { hovering, focused }, textarea, attrs) => {\n+export const useInput = ({ size, type, disabled, modelValue, suffixIcon, readonly, clearable, showPassword, showWordLimit }, { hovering, focused }, textarea, attrs, validateState, needStatusIcon, slots) => {\nconst input = ref(null)\nconst elFormItem = inject('elFormItem', {})\n@@ -108,7 +119,6 @@ export const useInput = (size, type, disabled, modelValue, readonly, clearable,\nunref(nativeInputValue) &&\n(unref(focused) || unref(hovering))\n)\n-\n})\nconst showPwdVisible = computed(() => {\nreturn (\n@@ -118,6 +128,16 @@ export const useInput = (size, type, disabled, modelValue, readonly, clearable,\n(!!unref(nativeInputValue) || unref(focused))\n)\n})\n+ const getSuffixVisible = () => {\n+ return (\n+ slots.suffix ||\n+ unref(suffixIcon) ||\n+ unref(showClear) ||\n+ unref(showPassword) ||\n+ unref(isWordLimitVisible) ||\n+ (unref(validateState) && unref(needStatusIcon))\n+ )\n+ }\nreturn {\ninput: input || textarea,\n@@ -129,11 +149,12 @@ export const useInput = (size, type, disabled, modelValue, readonly, clearable,\nupperLimit,\ntextLength,\nshowClear,\n- showPwdVisible\n+ showPwdVisible,\n+ getSuffixVisible\n}\n}\n-export const useInteractive = (instance, input, nativeInputValue, modelValue, { focused, isComposing, passwordVisible }, validateEvent, emit, slots) => {\n+export const useInteractive = (instance, input, { type, modelValue, validateEvent }, { focused, isComposing, passwordVisible }, nativeInputValue, emit, slots) => {\nconst focus = () => {\nunref(input).focus()\n@@ -250,6 +271,13 @@ export const useInteractive = (instance, input, nativeInputValue, modelValue, {\ncalcIconOffset('suffix')\n}\n+ watch(\n+ () => nativeInputValue,\n+ () => {\n+ setNativeInputValue()\n+ }\n+ )\n+\nreturn {\nfocus,\nblur,\n",
        "date": "07.08.2020 15:54:42",
        "repo": "hug-sun/element3",
        "type": "refactor",
        "sim_msg": "fix(form-textarea): improve auto-row height calculation timing (closes",
        "sim_diff": "diff --git a/src/components/form-textarea/form-textarea.js b/src/components/form-textarea/form-textarea.js @@ -7,6 +7,7 @@ import formTextMixin from '../../mixins/form-text'\nimport formSelectionMixin from '../../mixins/form-selection'\nimport formValidityMixin from '../../mixins/form-validity'\nimport { getCS, isVisible } from '../../utils/dom'\n+import { isNull } from '../../utils/inspect'\n// @vue/component\nexport default Vue.extend({\n@@ -47,7 +48,8 @@ export default Vue.extend({\n},\ndata() {\nreturn {\n- dontResize: true\n+ dontResize: true,\n+ heightInPx: null\n}\n},\ncomputed: {\n@@ -60,7 +62,7 @@ export default Vue.extend({\nif (!this.computedRows) {\n// The computed height for auto resize.\n// We avoid setting the style to null, which can override user manual resize.\n- styles.height = this.computedHeight\n+ styles.height = this.heightInPx\n// We always add a vertical scrollbar to the textarea when auto-resize is\n// enabled so that the computed height calcaultion returns a stable value.\nstyles.overflowY = 'scroll'\n@@ -80,17 +82,46 @@ export default Vue.extend({\n// This is used to set the attribute 'rows' on the textarea.\n// If auto-resize is enabled, then we return null as we use CSS to control height.\nreturn this.computedMinRows === this.computedMaxRows ? this.computedMinRows : null\n+ }\n+ },\n+ watch: {\n+ dontResize(newVal, oldval) {\n+ if (!newVal) {\n+ this.setHeight()\n+ }\n+ },\n+ localValue(newVal, oldVal) {\n+ this.setHeight()\n+ }\n+ },\n+ mounted() {\n+ // Enable opt-in resizing once mounted\n+ this.$nextTick(() => {\n+ this.dontResize = false\n+ })\n+ },\n+ activated() {\n+ // If we are being re-activated in <keep-alive>, enable opt-in resizing\n+ this.$nextTick(() => {\n+ this.dontResize = false\n+ })\n+ },\n+ deactivated() {\n+ // If we are in a deactivated <keep-alive>, disable opt-in resizing\n+ this.dontResize = true\n+ },\n+ beforeDestroy() {\n+ /* istanbul ignore next */\n+ this.dontResize = true\n+ },\n+ methods: {\n+ setHeight() {\n+ this.$nextTick(() => {\n+ this.heightInPx = this.computeHeight()\n+ })\n},\n- computedHeight() /* istanbul ignore next: can't test getComputedStyle in JSDOM */ {\n- // We compare `computedRows` and `localValue` to `true`, a value\n- // they both can't have at any time, to ensure reactivity of this\n- // computed property.\n- if (\n- this.$isServer ||\n- this.dontResize ||\n- this.computedRows === true ||\n- this.localValue === true\n- ) {\n+ computeHeight() /* istanbul ignore next: can't test getComputedStyle in JSDOM */ {\n+ if (this.$isServer || !isNull(this.computedRows)) {\nreturn null\n}\n@@ -143,26 +174,6 @@ export default Vue.extend({\nreturn `${height}px`\n}\n},\n- mounted() {\n- // Enable opt-in resizing once mounted\n- this.$nextTick(() => {\n- this.dontResize = false\n- })\n- },\n- activated() {\n- // If we are being re-activated in <keep-alive>, enable opt-in resizing\n- this.$nextTick(() => {\n- this.dontResize = false\n- })\n- },\n- deactivated() {\n- // If we are in a deactivated <keep-alive>, disable opt-in resizing\n- this.dontResize = true\n- },\n- beforeDestroy() {\n- /* istanbul ignore next */\n- this.dontResize = true\n- },\nrender(h) {\n// Using self instead of this helps reduce code size during minification\nconst self = this\n"
    },
    {
        "msg": "refactor(stat): use functional api",
        "diff": "diff --git a/packages/chakra-ui-core/src/CStat/CStat.js b/packages/chakra-ui-core/src/CStat/CStat.js @@ -38,17 +38,17 @@ const arrowOptions = {\n*/\nconst CStat = {\nname: 'CStat',\n- extends: CBox,\n- render (h) {\n- const children = cleanChildren(this.$slots.default)\n+ functional: true,\n+ render (h, { props, slots, data, ...rest }) {\n+ const children = cleanChildren(slots().default)\nreturn h(CBox, {\n- props: {\n+ ...rest,\n+ props: { as: props.as },\n+ attrs: {\nflex: 1,\npr: 4,\nposition: 'relative',\n- ...forwardProps(this.$props)\n- },\n- attrs: {\n+ ...(data.attrs || {}),\n'data-chakra-component': 'CStat'\n}\n}, children)\n@@ -65,17 +65,20 @@ const CStat = {\n*/\nconst CStatGroup = {\nname: 'CStatGroup',\n- extends: CFlex,\n- render (h) {\n- const children = cleanChildren(this.$slots.default)\n+ functional: true,\n+ props: CFlex.props,\n+ render (h, { props, slots, data, ...rest }) {\n+ const children = cleanChildren(slots().default)\nreturn h(CFlex, {\n+ ...rest,\nprops: {\nflexWrap: 'wrap',\njustifyContent: 'space-around',\nalignItems: 'flex-start',\n- ...forwardProps(this.$props)\n+ ...forwardProps(props)\n},\nattrs: {\n+ ...(data.attrs || {}),\n'data-chakra-component': 'CStatGroup'\n}\n}, children)\n@@ -92,23 +95,27 @@ const CStatGroup = {\n*/\nconst CStatArrow = {\nname: 'CStatArrow',\n- extends: CIcon,\n+ functional: true,\nprops: {\n+ ...CIcon.props,\ntype: {\ntype: String,\ndefault: 'increase'\n}\n},\n- render (h) {\n+ render (h, { props, slots, data, ...rest }) {\nreturn h(CIcon, {\n+ ...rest,\nprops: {\n- mr: 1,\nsize: '14px',\n- verticalAlign: 'middle',\n- ...arrowOptions[this.type],\n- ...forwardProps(this.$props)\n+ ...arrowOptions[props.type],\n+ ...forwardProps(props)\n},\nattrs: {\n+ mr: 1,\n+ verticalAlign: 'middle',\n+ ...(data.attrs || {}),\n+ color: arrowOptions[props.type].color,\n'data-chakra-component': 'CStatArrow'\n}\n})\n@@ -125,19 +132,20 @@ const CStatArrow = {\n*/\nconst CStatNumber = {\nname: 'CStatNumber',\n- extends: CText,\n- render (h) {\n+ functional: true,\n+ props: CText.props,\n+ render (h, { props, slots, data, ...rest }) {\nreturn h(CText, {\n- props: {\n+ ...rest,\n+ props: forwardProps(props),\n+ attrs: {\nfontSize: '2xl',\nverticalAlign: 'baseline',\nfontWeight: 'semibold',\n- ...forwardProps(this.$props)\n- },\n- attrs: {\n+ ...(data.attrs || {}),\n'data-chakra-component': 'CStatNumber'\n}\n- }, this.$slots.default)\n+ }, slots().default)\n}\n}\n@@ -151,16 +159,20 @@ const CStatNumber = {\n*/\nconst CStatHelperText = {\nname: 'CStatHelperText',\n- extends: CText,\n- render (h) {\n+ functional: true,\n+ props: CText.props,\n+ render (h, { props, slots, data, ...rest }) {\nreturn h(CText, {\n- props: {\n+ ...rest,\n+ props: forwardProps(props),\n+ attrs: {\nfontSize: 'sm',\nopacity: 0.8,\nmb: 2,\n- ...forwardProps(this.$props)\n+ ...(data.attrs || {}),\n+ 'data-chakra-component': 'CStatHelperText'\n}\n- }, this.$slots.default)\n+ }, slots().default)\n}\n}\n@@ -174,18 +186,19 @@ const CStatHelperText = {\n*/\nconst CStatLabel = {\nname: 'CStatLabel',\n- extends: CText,\n- render (h) {\n+ functional: true,\n+ props: CText.props,\n+ render (h, { props, slots, data, ...rest }) {\nreturn h(CText, {\n- props: {\n+ ...rest,\n+ props: forwardProps(props),\n+ attrs: {\nfontWeight: 'medium',\nfontSize: 'sm',\n- ...forwardProps(this.$props)\n- },\n- attrs: {\n+ ...(data.attrs || {}),\n'data-chakra-component': 'CStatLabel'\n}\n- }, this.$slots.default)\n+ }, slots().default)\n}\n}\n",
        "date": "12.07.2020 12:02:29",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "refactor",
        "sim_msg": "chore: Restore missing comma",
        "sim_diff": "diff --git a/src/technologies/c.json b/src/technologies/c.json 66\n],\n\"description\": \"Chakra UI is a simple, modular and accessible component library that gives you the building blocks you need to build your React applications.\",\n- \"dom\": \"html[style*='chakra-ui-color-mode'], body.chakra-ui-dark, body.chakra-ui-light, div.chakra-portal\"\n+ \"dom\": \"html[style*='chakra-ui-color-mode'], body.chakra-ui-dark, body.chakra-ui-light, div.chakra-portal\",\n\"icon\": \"Chakra UI.svg\",\n\"implies\": \"React\",\n\"oss\": true,\n"
    },
    {
        "msg": "refactor: use computed data to see whether to use router link",
        "diff": "diff --git a/packages/veui/src/components/Link.vue b/packages/veui/src/components/Link.vue <slot/>\n</component>\n<router-link\n- v-else-if=\"$router && !native\"\n+ v-else-if=\"useRouter\"\n:class=\"klass\"\n:to=\"to\"\n:rel=\"realRel\"\n@@ -73,6 +73,9 @@ export default {\n).join(' ')\n}\nreturn this.rel\n+ },\n+ useRouter () {\n+ return this.$router && !this.native\n}\n},\nmethods: {\n",
        "date": "31.05.2019 21:16:59",
        "repo": "ecomfe/veui",
        "type": "refactor",
        "sim_msg": "fix(QBtn): Adapt to newer vue-router behavior of throwing error when navigating to same route",
        "sim_diff": "diff --git a/ui/src/components/btn/QBtn.js b/ui/src/components/btn/QBtn.js @@ -64,7 +64,14 @@ export default Vue.extend({\n}\nconst go = () => {\n- this.$router[this.replace === true ? 'replace' : 'push'](this.to)\n+ const res = this.$router[this.replace === true ? 'replace' : 'push'](this.to)\n+\n+ // vue-router now throwing error if navigating\n+ // to the same route that the user is currently at\n+ // https://github.com/vuejs/vue-router/issues/2872\n+ if (res !== void 0 && typeof res.catch === 'function') {\n+ res.catch(() => {})\n+ }\n}\nthis.$emit('click', e, go)\n"
    },
    {
        "msg": "refactor(SentenTree): empty top-level element",
        "diff": "diff --git a/components/SentenTree/index.js b/components/SentenTree/index.js +import { select } from 'd3-selection';\n+\nimport VisComponent from '../../VisComponent';\nimport { SentenTreeBuilder,\nSentenTreeVis } from 'sententree/dist/SentenTree';\n@@ -53,6 +55,11 @@ export default class SentenTree extends VisComponent {\nconstructor (el, {data, id = null, text = 'text', count = 'count', graphs = 3}) {\nsuper(el);\n+ // Empty element.\n+ select(el)\n+ .selectAll('*')\n+ .remove();\n+\n// Transform input data into correct form.\nthis.data = data.map((d, i) => ({\nid: id ? d[id] : i,\n",
        "date": "04.05.2017 10:13:15",
        "repo": "kitware/candela",
        "type": "refactor",
        "sim_msg": "perf: changed stupidity of deleting and adding line every hover event",
        "sim_diff": "diff --git a/src/components/Main/Containment.tsx b/src/components/Main/Containment.tsx @@ -129,6 +129,19 @@ class Graph extends React.Component {\n.attr('transform', 'rotate(-90)')\n.text('Transmission rel to baseline')\n+ // Hovering dashed line\n+ this.d3Graph\n+ .append('line')\n+ .attr('id', 'temp-line')\n+ .attr('x1', 0)\n+ .attr('x2', 0)\n+ .attr('y1', 0)\n+ .attr('y2', height-margin.top-margin.bottom)\n+ .attr('stroke', 'black')\n+ .attr('stroke-width', 2)\n+ .attr(\"opacity\", 0)\n+ .style('stroke-dasharray', '3, 3');\n+\nthis.d3Graph\n.selectAll('.dot')\n.data(this.props.data)\n@@ -141,8 +154,7 @@ class Graph extends React.Component {\n.attr('cy', function(d) {\nreturn yScale(d.y)\n})\n- .attr('r', 5)\n- .attr('r', 10)\n+ .attr('r', 8)\nvar Root = this.d3Graph\nthis.d3Graph\n@@ -151,34 +163,17 @@ class Graph extends React.Component {\nd3.select(this)\n.attr('fill', '#ffab00')\n.attr('r', 10)\n- Root.append('path')\n- .datum([\n- { y: 0, t: d.t },\n- { y: height, t: d.t },\n- ])\n- .attr('class', 'temp-line')\n- .attr('stroke', 'black')\n- .attr('stroke-width', 2)\n- .attr('opacity', 0.2)\n- .style('stroke-dasharray', '3, 3')\n- .attr(\n- 'd',\n- d3\n- .line()\n- .x(function(d) {\n- return tScale(d.t)\n- })\n- .y(function(d) {\n- return yScale(d.y)\n- })\n- .curve(d3.curveMonotoneX),\n- )\n+ Root.select('#temp-line')\n+ .attr(\"opacity\", 0.3)\n+ .attr(\"x1\", tScale(d.t))\n+ .attr(\"x2\", tScale(d.t));\n})\n.on('mouseout', function() {\nd3.select(this)\n.attr('fill', 'black')\n- .attr('r', 10)\n- Root.select('.temp-line').remove()\n+ .attr('r', 8)\n+ Root.select('#temp-line')\n+ .attr(\"opacity\", 0);\n})\n.call(\nd3\n"
    },
    {
        "msg": "refactor(Utilities): update generator",
        "diff": "diff --git a/scss/mixins/_utilities.scss b/scss/mixins/_utilities.scss $properties: append((), $properties);\n}\n- // Use class prefix if present\n- $property-class-prefix: if(map-has-key($utility, prefix), map-get($utility, prefix), null);\n- $property-class-prefix: if($property-class-prefix == null, \"\", $property-class-prefix);\n-\n// Use custom class if present\n$property-class: if(map-has-key($utility, class), map-get($utility, class), nth($properties, 1));\n$property-class: if($property-class == null, \"\", $property-class);\n// Don't prefix if value key is null (eg. with shadow class)\n$property-class-modifier: if($key, if($property-class == \"\" and $infix == \"\", \"\", \"-\") + $key, \"\");\n- // Generate also CSS Variable\n+ // Generate CSS Variable\n$generate-vars: if(map-has-key($utility, vars), map-get($utility, vars), false);\n$generate-only-vars: if(map-has-key($utility, only-vars), map-get($utility, only-vars), false);\n// Generate RTL version\n$generate-rtl: if(map-has-key($utility, rtl), map-get($utility, rtl), false);\n+ // // Add theme prefix\n+ // $theme-prefix: if(map-has-key($utility, theme-prefix), map-get($utility, theme-prefix), false);\n+\n@if map-get($utility, rfs) {\n// Inside the media query\n@if $is-rfs-media-query {\n@if $is-rtl == false {\n/* rtl:begin:remove */\n}\n- .#{$property-class-prefix + $property-class + $infix + $property-class-modifier} {\n+\n+ .#{$property-class + $infix + $property-class-modifier} {\n@each $property in $properties {\n@if $generate-vars == true or $generate-only-vars == true {\n@if $generate-only-vars {\n",
        "date": "22.03.2021 13:52:52",
        "repo": "coreui/coreui",
        "type": "refactor",
        "sim_msg": "perf: additional utils for brand colors only (use light for gray)",
        "sim_diff": "diff --git a/scss/_utilities.scss b/scss/_utilities.scss /**\n*\n* Provide additional utility classes for theming\n- * Extra utilities with brand and gray colors\n+ * Extra utilities with brand colors\n*\n*/\n-@mixin utils-variant($color, $value) {\n- // Text colors\n- .text_#{$color} {\n- color: $value;\n- }\n- .hover\\:text_#{$color}:hover {\n- color: $value;\n- }\n-\n- // Standalone background colors\n- .bg_#{$color} {\n- background-color: $value;\n- }\n- .hover\\:bg_#{$color}:hover {\n- background-color: $value;\n- }\n-\n- // Border colors\n- .border_#{$color} {\n- border-color: $value;\n- }\n- .hover\\:border_#{$color}:hover {\n- border-color: $value;\n- }\n-}\n-\n// Map brand colors pallete\n$brand-colors: (\n\"primary-lightest\": lighten($primary, 33%),\n@@ -51,7 +25,6 @@ $brand-colors: (\n@each $color, $value in $brand-colors {\n// Block utilities with background color and YIQ (white or black) text color\n- // For brand colors only\n.block_#{$color} {\nbackground-color: $value;\ncolor: color-yiq($value);\n@@ -60,10 +33,28 @@ $brand-colors: (\nbackground-color: $value;\ncolor: color-yiq($value);\n}\n- @include utils-variant($color, $value);\n+\n+ // Text colors\n+ .text_#{$color} {\n+ color: $value;\n+ }\n+ .hover\\:text_#{$color}:hover {\n+ color: $value;\n}\n-@each $color, $value in $grays {\n- // utilities for grayscale\n- @include utils-variant(\"gray-#{$color}\", $value);\n+ // Standalone background colors\n+ .bg_#{$color} {\n+ background-color: $value;\n+ }\n+ .hover\\:bg_#{$color}:hover {\n+ background-color: $value;\n+ }\n+\n+ // Border colors\n+ .border_#{$color} {\n+ border-color: $value;\n+ }\n+ .hover\\:border_#{$color}:hover {\n+ border-color: $value;\n+ }\n}\n"
    },
    {
        "msg": "refactor: getFiles: allPlaces -> processedPlaces",
        "diff": "diff --git a/packages/engine-processor/lib/processor.js b/packages/engine-processor/lib/processor.js @@ -102,14 +102,15 @@ async function iterate({name, rawSource, fileList, merge, processFile, processed\nasync function getFiles({name, fix, rawSource, processorRunners}) {\nconst fileList = [];\n- const allPlaces = [];\n+ const processedPlaces = [];\nlet isProcessed = false;\nlet processedSource = '';\n- let processedPlaces = [];\nlet merge = null;\nfor (const currentRunner of processorRunners) {\n+ let places = [];\n+\nconst {\nisMatch,\nbranch = stubSplit,\n@@ -127,16 +128,16 @@ async function getFiles({name, fix, rawSource, processorRunners}) {\nisProcessed = true;\nif (lint)\n- [processedSource, processedPlaces] = await lint(rawSource, {fix});\n+ [processedSource, places] = await lint(rawSource, {fix});\nelse if (fix)\nprocessedSource = await fixFind(rawSource);\nelse\n- processedPlaces = await find(rawSource);\n+ places = await find(rawSource);\nif (!processedSource)\nprocessedSource = rawSource;\n- allPlaces.push(...processedPlaces);\n+ processedPlaces.push(...places);\nconst files = await branch(processedSource);\n@@ -147,7 +148,7 @@ async function getFiles({name, fix, rawSource, processorRunners}) {\nmerge,\nisProcessed,\nprocessedSource,\n- processedPlaces: allPlaces,\n+ processedPlaces,\nfileList,\n};\n}\n",
        "date": "23.09.2022 13:27:11",
        "repo": "coderaiser/putout",
        "type": "refactor",
        "sim_msg": "docs: add sponsor feeds.pub",
        "sim_diff": "diff --git a/docs/.format/format.js b/docs/.format/format.js @@ -101,21 +101,13 @@ const buildStagedList = async () => {\nconst stagedFiles = await sgf();\nfor (const processor of processors) {\n- // We don't want to mix up processor\n- /* eslint-disable no-await-in-loop */\n- await Promise.all(\n- processor.rules(fileList).map(async (e) => {\n+ for (const e of processor.rules(fileList)) {\nlet formatted = await file.readFile(e.path);\nformatted = await processor.handler(formatted);\nawait file.writeFile(e.path, formatted);\nif (stagedFiles.find((x) => e.path.indexOf(x.filename) !== -1)) {\nawait exec(`git add ${e.path}`);\n}\n- })\n- ).catch((err) => {\n- // eslint-disable-next-line no-console\n- console.log(err);\n- process.exit(1);\n- });\n+ }\n}\n})();\n"
    },
    {
        "msg": "refactor: remove unnecessary me = this",
        "diff": "diff --git a/packages/veui/src/components/FilterPanel.vue b/packages/veui/src/components/FilterPanel.vue @@ -89,8 +89,7 @@ export default {\n}\n},\ncreated () {\n- let me = this\n- this.debounceSearch = debounce(() => me.search(), 200)\n+ this.debounceSearch = debounce(() => this.search(), 200)\n},\nbeforeDestroy () {\nthis.debounceSearch.cancel()\n",
        "date": "09.02.2019 11:15:17",
        "repo": "ecomfe/veui",
        "type": "refactor",
        "sim_msg": "fix(Search): reset filters when user input changes (now without flickering)",
        "sim_diff": "diff --git a/components/Search/index.js b/components/Search/index.js @@ -101,6 +101,7 @@ class Search extends Component {\nthis.loadFilters = debounce(() => {\nthis.setState({\n+ filters: DEFAULT_FILTERS,\nfilterQuery: this.state.searchQuery,\nloadingFilters: false\n})\n@@ -110,8 +111,7 @@ class Search extends Component {\nthis.setState({\nsearchQuery: value,\nloadingFilters: true,\n- allowFocus: true,\n- filters: DEFAULT_FILTERS\n+ allowFocus: true\n})\nthis.loadFilters()\n}\n"
    },
    {
        "msg": "refactor(colors): code structure cleanup, fixed missing export",
        "diff": "diff --git a/src/modeling/color.js b/src/modeling/color.js @@ -180,7 +180,6 @@ export function color () {\nreturn o.setColor(c)\n}\n-\n// from http://axonflux.com/handy-rgb-to-hsl-and-rgb-to-hsv-color-model-c\n/**\n* Converts an RGB color value to HSL. Conversion formula\n@@ -193,25 +192,31 @@ export function color () {\n* @param Number b The blue color value\n* @return Array The HSL representation\n*/\n-function rgb2hsl(r, g, b){\n+export function rgb2hsl (r, g, b) {\nif (r.length) { b = r[2], g = r[1], r = r[0]; }\n- var max = Math.max(r, g, b), min = Math.min(r, g, b);\n- var h, s, l = (max + min) / 2;\n+ var max = Math.max(r, g, b), min = Math.min(r, g, b)\n+ var h, s, l = (max + min) / 2\nif (max == min) {\n- h = s = 0; // achromatic\n+ h = s = 0 // achromatic\n} else {\n- var d = max - min;\n- s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n+ var d = max - min\n+ s = l > 0.5 ? d / (2 - max - min) : d / (max + min)\nswitch (max) {\n- case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n- case g: h = (b - r) / d + 2; break;\n- case b: h = (r - g) / d + 4; break;\n+ case r:\n+ h = (g - b) / d + (g < b ? 6 : 0)\n+ break\n+ case g:\n+ h = (b - r) / d + 2\n+ break\n+ case b:\n+ h = (r - g) / d + 4\n+ break\n}\n- h /= 6;\n+ h /= 6\n}\n- return [h, s, l];\n+ return [h, s, l]\n}\n/**\n@@ -227,28 +232,28 @@ function rgb2hsl(r, g, b){\n*/\nexport function hsl2rgb (h, s, l) {\nif (h.length) { l = h[2], s = h[1], h = h[0]; }\n- var r, g, b;\n+ var r, g, b\nif (s == 0) {\n- r = g = b = l; // achromatic\n+ r = g = b = l // achromatic\n} else {\nfunction hue2rgb (p, q, t) {\n- if(t < 0) t += 1;\n- if(t > 1) t -= 1;\n- if(t < 1/6) return p + (q - p) * 6 * t;\n- if(t < 1/2) return q;\n- if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;\n- return p;\n+ if (t < 0) t += 1\n+ if (t > 1) t -= 1\n+ if (t < 1 / 6) return p + (q - p) * 6 * t\n+ if (t < 1 / 2) return q\n+ if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6\n+ return p\n}\n- var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n- var p = 2 * l - q;\n- r = hue2rgb(p, q, h + 1/3);\n- g = hue2rgb(p, q, h);\n- b = hue2rgb(p, q, h - 1/3);\n+ var q = l < 0.5 ? l * (1 + s) : l + s - l * s\n+ var p = 2 * l - q\n+ r = hue2rgb(p, q, h + 1 / 3)\n+ g = hue2rgb(p, q, h)\n+ b = hue2rgb(p, q, h - 1 / 3)\n}\n- return [r, g, b];\n+ return [r, g, b]\n}\n/**\n@@ -265,24 +270,30 @@ export function hsl2rgb(h, s, l){\nexport function rgb2hsv (r, g, b) {\nif (r.length) { b = r[2], g = r[1], r = r[0]; }\n- var max = Math.max(r, g, b), min = Math.min(r, g, b);\n- var h, s, v = max;\n+ var max = Math.max(r, g, b), min = Math.min(r, g, b)\n+ var h, s, v = max\n- var d = max - min;\n- s = max == 0 ? 0 : d / max;\n+ var d = max - min\n+ s = max == 0 ? 0 : d / max\nif (max == min) {\n- h = 0; // achromatic\n+ h = 0 // achromatic\n} else {\nswitch (max) {\n- case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n- case g: h = (b - r) / d + 2; break;\n- case b: h = (r - g) / d + 4; break;\n+ case r:\n+ h = (g - b) / d + (g < b ? 6 : 0)\n+ break\n+ case g:\n+ h = (b - r) / d + 2\n+ break\n+ case b:\n+ h = (r - g) / d + 4\n+ break\n}\n- h /= 6;\n+ h /= 6\n}\n- return [h, s, v];\n+ return [h, s, v]\n}\n/**\n@@ -298,24 +309,36 @@ export function rgb2hsv(r, g, b){\n*/\nexport function hsv2rgb (h, s, v) {\nif (h.length) { v = h[2], s = h[1], h = h[0]; }\n- var r, g, b;\n+ var r, g, b\n- var i = Math.floor(h * 6);\n- var f = h * 6 - i;\n- var p = v * (1 - s);\n- var q = v * (1 - f * s);\n- var t = v * (1 - (1 - f) * s);\n+ var i = Math.floor(h * 6)\n+ var f = h * 6 - i\n+ var p = v * (1 - s)\n+ var q = v * (1 - f * s)\n+ var t = v * (1 - (1 - f) * s)\nswitch (i % 6) {\n- case 0: r = v, g = t, b = p; break;\n- case 1: r = q, g = v, b = p; break;\n- case 2: r = p, g = v, b = t; break;\n- case 3: r = p, g = q, b = v; break;\n- case 4: r = t, g = p, b = v; break;\n- case 5: r = v, g = p, b = q; break;\n+ case 0:\n+ r = v, g = t, b = p\n+ break\n+ case 1:\n+ r = q, g = v, b = p\n+ break\n+ case 2:\n+ r = p, g = v, b = t\n+ break\n+ case 3:\n+ r = p, g = q, b = v\n+ break\n+ case 4:\n+ r = t, g = p, b = v\n+ break\n+ case 5:\n+ r = v, g = p, b = q\n+ break\n}\n- return [r, g, b];\n+ return [r, g, b]\n}\n/**\n@@ -326,15 +349,15 @@ export function hsv2rgb(h, s, v){\n* - convert the HEX value into RGB values\n*/\nexport function html2rgb (s) {\n- var r = 0;\n- var g = 0;\n- var b = 0;\n+ var r = 0\n+ var g = 0\n+ var b = 0\nif (s.length == 7) {\n- r = parseInt('0x'+s.slice(1,3))/255;\n- g = parseInt('0x'+s.slice(3,5))/255;\n- b = parseInt('0x'+s.slice(5,7))/255;\n+ r = parseInt('0x' + s.slice(1, 3)) / 255\n+ g = parseInt('0x' + s.slice(3, 5)) / 255\n+ b = parseInt('0x' + s.slice(5, 7)) / 255\n}\n- return [r,g,b];\n+ return [r, g, b]\n}\n/**\n@@ -346,6 +369,6 @@ export function html2rgb(s) {\nexport function rgb2html (r, g, b) {\nif (r.length) { b = r[2], g = r[1], r = r[0]; }\nvar s = '#' +\n- Number(0x1000000+r*255*0x10000+g*255*0x100+b*255).toString(16).substring(1);\n- return s;\n+ Number(0x1000000 + r * 255 * 0x10000 + g * 255 * 0x100 + b * 255).toString(16).substring(1)\n+ return s\n}\n",
        "date": "06.01.2017 23:20:21",
        "repo": "jscad/openjscad.org",
        "type": "refactor",
        "sim_msg": "feat: Improve color utils",
        "sim_diff": "diff --git a/src/utils/colors.js b/src/utils/colors.js -export function rgbToHex (r, g, b) {\n- if (typeof r === 'string') {\n- const res = r.match(/\\b\\d{1,3}\\b/g).map(Number)\n- r = res[0]\n- g = res[1]\n- b = res[2]\n- }\n+export function rgbToHex (r, g, b, a) {\n+ const alpha = a !== void 0\nif (\ntypeof r !== 'number' ||\n@@ -12,12 +7,17 @@ export function rgbToHex (r, g, b) {\ntypeof b !== 'number' ||\nr > 255 ||\ng > 255 ||\n- b > 255\n+ b > 255 ||\n+ (alpha && (typeof a !== 'number' || a > 100))\n) {\n- throw new TypeError('Expected three numbers below 256')\n+ throw new TypeError('Expected 3 numbers below 256 (and optionally 1 below 100)')\n}\n- return ((b | g << 8 | r << 16) | 1 << 24).toString(16).slice(1)\n+ const hex = alpha\n+ ? (b | g << 8 | r << 16 | a << 24) | 1 << 32\n+ : (b | g << 8 | r << 16) | 1 << 24\n+\n+ return hex.toString(alpha ? 24 : 16).slice(1)\n}\nexport function hexToRgb (hex) {\n@@ -30,13 +30,18 @@ export function hexToRgb (hex) {\nif (hex.length === 3) {\nhex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2]\n}\n+ else if (hex.length === 4) {\n+ hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2] + hex[3] + hex[3]\n+ }\nlet num = parseInt(hex, 16)\n- return [num >> 16, num >> 8 & 255, num & 255]\n+ return hex.length > 6\n+ ? [num >> 24, num >> 16 & 255, num >> 8 & 255, (num & 255) / 255]\n+ : [num >> 16, num >> 8 & 255, num & 255]\n}\n-export function hsvToRgb (h, s, v) {\n+export function hsvToRgb (h, s, v, a) {\nlet r, g, b, i, f, p, q, t\nif (arguments.length === 1) {\n@@ -88,11 +93,12 @@ export function hsvToRgb (h, s, v) {\nreturn {\nr: Math.round(r * 255),\ng: Math.round(g * 255),\n- b: Math.round(b * 255)\n+ b: Math.round(b * 255),\n+ a\n}\n}\n-export function rgbToHsv (r, g, b) {\n+export function rgbToHsv (r, g, b, a) {\nif (arguments.length === 1) {\nr = r.r\ng = r.g\n@@ -127,6 +133,7 @@ export function rgbToHsv (r, g, b) {\nreturn {\nh: h * 360,\ns: s,\n- v: v\n+ v: v,\n+ a\n}\n}\n"
    },
    {
        "msg": "refactor: use slot/slot-scope syntax for consistency",
        "diff": "diff --git a/packages/veui/src/components/Uploader.vue b/packages/veui/src/components/Uploader.vue :expanded.sync=\"expandedControlDropdowns[index]\"\n@click=\"handleMediaAction(file, index, $event)\"\n>\n- <template v-slot:trigger=\"{ props, handlers }\">\n+ <template\n+ slot=\"trigger\"\n+ slot-scope=\"{ props, handlers }\"\n+ >\n<label\nv-if=\"control.name === 'replace'\"\n:key=\"control.name\"\ntrigger=\"hover\"\n@click=\"handleMediaAction(file, index, $event)\"\n>\n- <template v-slot:trigger=\"{ props, handlers }\">\n+ <template\n+ slot=\"trigger\"\n+ slot-scope=\"{ props, handlers }\"\n+ >\n<label\nv-if=\"control.name === 'replace'\"\n:key=\"control.name\"\n@click=\"handleMediaEntry\"\n>\n<template\n- v-slot:trigger=\"{\n+ slot=\"trigger\"\n+ slot-scope=\"{\nprops: triggerProps,\nhandlers: triggerHandlers\n}\"\n@@ -830,12 +837,14 @@ export default {\n},\nrealAccept () {\nif (this.extensions) {\n- return this.extensions.map(extension => {\n+ return this.extensions\n+ .map(extension => {\nif (extension.indexOf('.') !== 0) {\nreturn `.${extension}`\n}\nreturn extension\n- }).join(',')\n+ })\n+ .join(',')\n}\nif (this.accept) {\nreturn this.accept\n@@ -991,7 +1000,11 @@ export default {\nlet newFiles = [...files]\nlet countFiles = this.fileList.length + newFiles.length\n- if (!this.isReplacing && this.maxCount !== 1 && countFiles > this.maxCount) {\n+ if (\n+ !this.isReplacing &&\n+ this.maxCount !== 1 &&\n+ countFiles > this.maxCount\n+ ) {\ntoast.error(this.t('tooManyFiles'))\nthis.$emit('invalid', {\nerrors: [\n@@ -1145,9 +1158,11 @@ export default {\nextensions = []\n}\n- return acceptExtention === '*' &&\n+ return (\n+ acceptExtention === '*' &&\nitem.indexOf('/') > -1 &&\n(extensions.indexOf(extension) > -1 || !extensions.length)\n+ )\n})\n},\nvalidateSize (fileSize) {\n@@ -1401,7 +1416,10 @@ export default {\ndefaultControls = [\n{\nname: 'preview',\n- icon: file.type === 'image' ? this.icons.previewImage : this.icons.previewVideo,\n+ icon:\n+ file.type === 'image'\n+ ? this.icons.previewImage\n+ : this.icons.previewVideo,\ndisabled: false,\nlabel: this.t('preview')\n}\n",
        "date": "08.12.2020 11:01:57",
        "repo": "ecomfe/veui",
        "type": "refactor",
        "sim_msg": "feat: Remove uploadName div",
        "sim_diff": "diff --git a/packages/launchpad/src/global/FileDropzone.vue b/packages/launchpad/src/global/FileDropzone.vue </div>\n</Dropzone>\n</FileSelector>\n- <div\n- data-testid=\"upload-name\"\n- class=\"hidden\"\n- >\n- {{ uploadName }}\n- </div>\n<button\nv-if=\"closeButton\"\naria-label=\"Close\"\n@@ -97,8 +91,6 @@ withDefaults(defineProps<{\ncloseButton: false,\n})\n-const uploadName = ref('')\n-\nonMounted(() => {\n// TODO: remove this when vue3-file-selector supports setting this attribute\nconst fileRef = projectUpload.value?.querySelector('input[type=file]')\n"
    },
    {
        "msg": "refactor(src/common/routing/index.jsx): make absolute export for RouteAuth",
        "diff": "diff --git a/src/common/routing/index.jsx b/src/common/routing/index.jsx import {Route} from 'react-router-dom'\nimport {Users, Dashboard, Login} from 'containers'\n-import {RouteAuth} from 'components/addons'\n+import RouteAuth from 'components/addons/RouteAuth'\nimport {createBrowserHistory, createMemoryHistory} from 'history'\nexport const history = getHistory()\n",
        "date": "10.08.2017 04:53:59",
        "repo": "metnew/suicrux",
        "type": "refactor",
        "sim_msg": "refactor(UserAccount): only fetch deployments if module is enabled",
        "sim_diff": "diff --git a/lib/public/components/UserAccount.js b/lib/public/components/UserAccount.js @@ -7,7 +7,7 @@ import {browserHistory, Link} from 'react-router'\nimport {LinkContainer} from 'react-router-bootstrap'\nimport ManagerPage from '../../common/components/ManagerPage'\n-import {getComponentMessages, getConfigProperty} from '../../common/util/config'\n+import {getComponentMessages, getConfigProperty, isModuleEnabled} from '../../common/util/config'\nimport auth0 from '../../common/user/Auth0Manager'\nimport * as deploymentsActions from '../../manager/actions/deployments'\nimport * as feedsActions from '../../manager/actions/feeds'\n@@ -55,7 +55,7 @@ export default class UserAccount extends Component<Props> {\n.then((projects) =>\nPromise.all(projects.map(project => {\nfetchProjectFeeds(project.id)\n- fetchProjectDeployments(project.id)\n+ if (isModuleEnabled('deployment')) fetchProjectDeployments(project.id)\n}))\n)\n}\n"
    },
    {
        "msg": "refactor(Progress): improve syntax",
        "diff": "diff --git a/scss/_progress.scss b/scss/_progress.scss }\n.progress-group-icon {\n- margin: 0 $spacer 0 ($spacer * .25);\nfont-size: $font-size-lg;\n-\n- // @include ltr {\n- // margin: 0 $spacer 0 ($spacer * .25);\n- // }\n- // @include rtl {\n- // margin: 0 ($spacer * .25) 0 $spacer;\n- // }\n-}\n-\n-.progress-group-text {\n- font-size: $font-size-sm;\n- color: $gray-700;\n}\n.progress-group-header {\n",
        "date": "19.03.2021 12:11:01",
        "repo": "coreui/coreui",
        "type": "refactor",
        "sim_msg": "feat(components/molecule/progressSteps): center progress steps icon",
        "sim_diff": "diff --git a/components/molecule/progressSteps/src/styles/index.scss b/components/molecule/progressSteps/src/styles/index.scss @@ -66,6 +66,7 @@ $content-class: '#{$base-class}-content';\n&-number,\n&-icon {\nalign-items: center;\n+ justify-content: center;\ndisplay: flex;\nheight: $sz-progress-steps-icon;\nmargin: $m-progress-steps-icon;\n"
    },
    {
        "msg": "refactor(src/common/routing): use BROWSER env instead of IS_SSR",
        "diff": "diff --git a/src/common/routing/index.jsx b/src/common/routing/index.jsx @@ -19,6 +19,7 @@ export const appRouting = [\nicon: 'newspaper',\nname: 'Dashboard',\nexact: true,\n+ // lazy: true,\nsidebarVisible: true,\ntag: RouteAuth,\ncomponent: Dashboard\n@@ -91,7 +92,7 @@ export const Routing = authCheck => {\nfunction getHistory () {\nconst basename = ''\n- if (process.env.IS_SSR) {\n+ if (process.env.BROWSER !== true) {\nreturn createMemoryHistory()\n}\nreturn createBrowserHistory({basename})\n",
        "date": "04.08.2017 14:05:29",
        "repo": "metnew/suicrux",
        "type": "refactor",
        "sim_msg": "feat(app): small tweak to server-entry",
        "sim_diff": "diff --git a/app/templates/entry/server-entry.js b/app/templates/entry/server-entry.js @@ -57,6 +57,8 @@ const doubleSlashRE = /\\/\\//\nconst addPublicPath = url => (publicPath + url).replace(doubleSlashRE, '/')\n<% } %>\n+const bootFiles = [<%= bootNames.join(',') %>].filter(boot => typeof boot === 'function')\n+\nfunction redirectBrowser (url, router, reject) {\nconst normalized = Object(url) === url\n? <%= build.publicPath === '/' ? 'router.resolve(url).fullPath' : 'addPublicPath(router.resolve(url).fullPath)' %>\n@@ -80,12 +82,7 @@ export default ssrContext => {\nredirectBrowser(url, router, reject)\n}\n- const bootFiles = [<%= bootNames.join(',') %>]\nfor (let i = 0; hasRedirected === false && i < bootFiles.length; i++) {\n- if (typeof bootFiles[i] !== 'function') {\n- continue\n- }\n-\ntry {\nawait bootFiles[i]({\napp,\n"
    },
    {
        "msg": "refactor: remove impossible condition from sceneEqual",
        "diff": "diff --git a/packages/vega-scenegraph/src/util/equal.js b/packages/vega-scenegraph/src/util/equal.js @@ -9,7 +9,6 @@ export function sceneEqual(a, b, key) {\n: (a instanceof Date && b instanceof Date) ? +a === +b\n: (isNumber(a) && isNumber(b)) ? Math.abs(a - b) <= TOLERANCE\n: (!a || !b || !isObject(a) && !isObject(b)) ? a == b\n- : (a == null || b == null) ? false\n: objectEqual(a, b);\n}\n",
        "date": "18.08.2020 22:03:55",
        "repo": "vega/vega",
        "type": "refactor",
        "sim_msg": "perf(utils): major speedup for `deepEqual()` on documents and arrays\nRe:",
        "sim_diff": "diff --git a/lib/utils.js b/lib/utils.js @@ -62,6 +62,10 @@ exports.deepEqual = function deepEqual(a, b) {\nreturn true;\n}\n+ if (typeof a !== 'object' && typeof b !== 'object') {\n+ return a === b;\n+ }\n+\nif (a instanceof Date && b instanceof Date) {\nreturn a.getTime() === b.getTime();\n}\n@@ -78,10 +82,6 @@ exports.deepEqual = function deepEqual(a, b) {\na.global === b.global;\n}\n- if (typeof a !== 'object' && typeof b !== 'object') {\n- return a === b;\n- }\n-\nif (a === null || b === null || a === undefined || b === undefined) {\nreturn false;\n}\n@@ -104,24 +104,34 @@ exports.deepEqual = function deepEqual(a, b) {\nreturn exports.buffer.areEqual(a, b);\n}\n- if (isMongooseObject(a)) {\n+ if (Array.isArray(a) && Array.isArray(b)) {\n+ if (a.length !== b.length) {\n+ return false;\n+ }\n+ const len = a.length;\n+ for (let i = 0; i < len; ++i) {\n+ if (!deepEqual(a[i], b[i])) {\n+ return false;\n+ }\n+ }\n+ return true;\n+ }\n+\n+ if (a.$__ != null) {\n+ a = a._doc;\n+ } else if (isMongooseObject(a)) {\na = a.toObject();\n}\n- if (isMongooseObject(b)) {\n+ if (b.$__ != null) {\n+ b = b._doc;\n+ } else if (isMongooseObject(b)) {\nb = b.toObject();\n}\n- let ka;\n- let kb;\n+ const ka = Object.keys(a);\n+ const kb = Object.keys(b);\nlet key;\nlet i;\n- try {\n- ka = Object.keys(a);\n- kb = Object.keys(b);\n- } catch (e) {\n- // happens when one is a string literal and the other isn't\n- return false;\n- }\n// having the same number of owned properties (keys incorporates\n// hasOwnProperty)\n"
    },
    {
        "msg": "refactor(src/common/components/Root): fix Root component SSR, add SSR props",
        "diff": "diff --git a/src/common/components/views/Root/index.jsx b/src/common/components/views/Root/index.jsx import React, {Component} from 'react'\nimport PropTypes from 'prop-types'\nimport {Provider} from 'react-redux'\n-import {ConnectedRouter as Router} from 'react-router-redux'\nimport {APPLICATION_INIT} from 'actions'\nimport {ThemeProvider} from 'styled-components'\nimport theme from 'styles/theme'\n+const Router = process.env.BROWSER === true\n+ ? require('react-router-redux').ConnectedRouter\n+ : require('react-router').StaticRouter\n+\nexport default class Root extends Component {\nstatic propTypes = {\nstore: PropTypes.object,\n+ SSR: PropTypes.object,\nhistory: PropTypes.object,\nroutes: PropTypes.func\n}\n+ static defaultProps = {\n+ SSR: {}\n+ }\n+\ncomponentWillMount () {\nconst {store} = this.props\nstore.dispatch({type: APPLICATION_INIT})\n@@ -37,11 +45,14 @@ export default class Root extends Component {\n}\nrender () {\n- const {store, history, routes} = this.props\n+ const {SSR, store, history, routes} = this.props\n+ const routerProps = process.env.BROWSER === true\n+ ? {history}\n+ : {location: SSR.location, context: SSR.context}\n// key={Math.random()} = hack for HMR from https://github.com/webpack/webpack-dev-server/issues/395\nreturn (\n<Provider store={store} key={Math.random()}>\n- <Router history={history} key={Math.random()}>\n+ <Router {...routerProps} key={Math.random()}>\n<ThemeProvider theme={theme}>\n{routes(::this.authCheck)}\n</ThemeProvider>\n",
        "date": "04.08.2017 14:09:44",
        "repo": "metnew/suicrux",
        "type": "refactor",
        "sim_msg": "refactor: convert Root to stateless component",
        "sim_diff": "diff --git a/renderer/containers/Root.js b/renderer/containers/Root.js -import React from 'react'\n+import React, { useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Route, Switch } from 'react-router-dom'\n@@ -32,52 +32,12 @@ const PageWithLoading = withLoading(Page)\n/**\n* Root component that deals with mounting the app and managing top level routing.\n*/\n-class Root extends React.Component {\n- static propTypes = {\n- hasWallets: PropTypes.bool,\n- history: PropTypes.object.isRequired,\n- initDatabase: PropTypes.func.isRequired,\n- initSettings: PropTypes.func.isRequired,\n- initTheme: PropTypes.func.isRequired,\n- isAppReady: PropTypes.bool.isRequired,\n- isLoading: PropTypes.bool.isRequired,\n- isMounted: PropTypes.bool.isRequired,\n- loadingMessage: PropTypes.object,\n- notifications: PropTypes.array.isRequired,\n- removeNotification: PropTypes.func.isRequired,\n- setMounted: PropTypes.func.isRequired,\n- theme: PropTypes.object,\n- }\n-\n- async componentDidMount() {\n- const { initDatabase, initSettings, initTheme, isMounted, setMounted } = this.props\n-\n- // If this is the first time the app has mounted, initialize things.\n- if (!isMounted) {\n- setMounted(true)\n- await initDatabase()\n- await initSettings()\n- await initTheme()\n- }\n- }\n-\n- redirectToHome = () => {\n- const { history } = this.props\n- history.push('/home')\n- }\n-\n- redirectToLogout = () => {\n- const { history } = this.props\n- history.push('/logout')\n- }\n-\n- canLogout = () => {\n- const { history } = this.props\n- return history.location.pathname === '/app'\n- }\n-\n- render() {\n- const {\n+const Root = ({\n+ initDatabase,\n+ initSettings,\n+ initTheme,\n+ isMounted,\n+ setMounted,\nhasWallets,\nremoveNotification,\ntheme,\n@@ -86,7 +46,22 @@ class Root extends React.Component {\nisLoading,\nisAppReady,\nloadingMessage,\n- } = this.props\n+}) => {\n+ useEffect(() => {\n+ async function init() {\n+ if (!isMounted) {\n+ setMounted(true)\n+ await initDatabase()\n+ await initSettings()\n+ await initTheme()\n+ }\n+ }\n+ init()\n+ }, [initDatabase, initSettings, initTheme, isMounted, setMounted])\n+\n+ const redirectToHome = () => history.push('/home')\n+ const redirectToLogout = () => history.push('/logout')\n+ const canLogout = () => history.location.pathname === '/app'\n// Wait until we have loaded essential data before displaying anything.\nif (!theme) {\n@@ -106,10 +81,10 @@ class Root extends React.Component {\n<DialogLndCrashed />\n<ModalStack />\n<PageWithLoading\n- hasClose={this.canLogout()}\n+ hasClose={canLogout()}\nisLoading={isLoading}\nloadingMessage={loadingMessage}\n- onClose={this.redirectToLogout}\n+ onClose={redirectToLogout}\n>\n<Switch>\n<Route component={Initializer} exact path=\"/\" />\n@@ -118,14 +93,12 @@ class Root extends React.Component {\n<Route\nexact\npath=\"/onboarding\"\n- render={() => (\n- <Onboarding hasWallets={hasWallets} onClose={this.redirectToHome} />\n- )}\n+ render={() => <Onboarding hasWallets={hasWallets} onClose={redirectToHome} />}\n/>\n<Route\nexact\npath=\"/syncing\"\n- render={() => <Syncing onClose={this.redirectToLogout} pb={0} px={0} />}\n+ render={() => <Syncing onClose={redirectToLogout} pb={0} px={0} />}\n/>\n<Route\npath=\"/app\"\n@@ -144,6 +117,21 @@ class Root extends React.Component {\n</ConnectedRouter>\n)\n}\n+\n+Root.propTypes = {\n+ hasWallets: PropTypes.bool,\n+ history: PropTypes.object.isRequired,\n+ initDatabase: PropTypes.func.isRequired,\n+ initSettings: PropTypes.func.isRequired,\n+ initTheme: PropTypes.func.isRequired,\n+ isAppReady: PropTypes.bool.isRequired,\n+ isLoading: PropTypes.bool.isRequired,\n+ isMounted: PropTypes.bool.isRequired,\n+ loadingMessage: PropTypes.object,\n+ notifications: PropTypes.array.isRequired,\n+ removeNotification: PropTypes.func.isRequired,\n+ setMounted: PropTypes.func.isRequired,\n+ theme: PropTypes.object,\n}\nconst mapStateToProps = state => ({\n"
    },
    {
        "msg": "refactor: simplify responsive behavior",
        "diff": "diff --git a/js/src/sidebar.js b/js/src/sidebar.js @@ -38,7 +38,6 @@ const DefaultType = {\nconst CLASS_NAME_BACKDROP = 'sidebar-backdrop'\nconst CLASS_NAME_FADE = 'fade'\n-// const CLASS_NAME_HIDE = 'hide'\nconst CLASS_NAME_SHOW = 'show'\nconst CLASS_NAME_SIDEBAR = 'sidebar'\nconst CLASS_NAME_SIDEBAR_NARROW = 'sidebar-narrow'\n@@ -69,7 +68,6 @@ class Sidebar extends BaseComponent {\nconstructor(element, config) {\nsuper(element)\nthis._config = this._getConfig(config)\n- // this._breakpoint = this._getBreakpoint()\nthis._show = this._isVisible()\nthis._mobile = this._isMobile()\nthis._overlaid = this._isOverlaid()\n@@ -96,10 +94,6 @@ class Sidebar extends BaseComponent {\nshow() {\nEventHandler.trigger(this._element, EVENT_SHOW)\n- // if (this._element.classList.contains(CLASS_NAME_HIDE)) {\n- // this._element.classList.remove(CLASS_NAME_HIDE)\n- // }\n-\nif (REGEXP_SIDEBAR_SELF_HIDING.test(this._element.className)) {\nthis._element.classList.add(CLASS_NAME_SHOW)\n}\n@@ -132,8 +126,6 @@ class Sidebar extends BaseComponent {\nthis._element.classList.remove(CLASS_NAME_SHOW)\n}\n- // this._element.classList.add(CLASS_NAME_HIDE)\n-\nif (this._isMobile()) {\nthis._removeBackdrop()\n}\n@@ -156,7 +148,7 @@ class Sidebar extends BaseComponent {\n}\ntoggle() {\n- if (this._show) {\n+ if (this._isVisible()) {\nthis.hide()\nreturn\n}\n@@ -240,29 +232,6 @@ class Sidebar extends BaseComponent {\nreturn Boolean(window.getComputedStyle(this._element, null).getPropertyValue('--cui-is-mobile'))\n}\n- _isIOS() {\n- const iOSDevices = [\n- 'iPad Simulator',\n- 'iPhone Simulator',\n- 'iPod Simulator',\n- 'iPad',\n- 'iPhone',\n- 'iPod'\n- ]\n-\n- const platform = Boolean(navigator.platform)\n-\n- if (platform) {\n- while (iOSDevices.length) {\n- if (navigator.platform === iOSDevices.pop()) {\n- return true\n- }\n- }\n- }\n-\n- return false\n- }\n-\n_isNarrow() {\nreturn this._element.classList.contains(CLASS_NAME_SIDEBAR_NARROW)\n}\n",
        "date": "15.04.2021 13:21:00",
        "repo": "coreui/coreui",
        "type": "refactor",
        "sim_msg": "fix: alignment of version",
        "sim_diff": "diff --git a/src/renderer/wallet/main/sidebar.jsx b/src/renderer/wallet/main/sidebar.jsx @@ -95,9 +95,11 @@ const styles = theme => ({\nfontSize: '10px',\nopacity: 0.6,\nposition: 'absolute',\n- right: 0,\nwidth: 'auto'\n},\n+ versionWrap: {\n+ paddingLeft: '50px'\n+ },\ndrawer: {\ntransition: 'all 3s',\n'& > div:first-of-type': {\n@@ -302,7 +304,7 @@ class Sidebar extends Component {\nQuit\n</Typography>\n</ListItem>\n- <ListItem key=\"version\">\n+ <ListItem key=\"version\" className={classes.versionWrap}>\n<Typography variant=\"subtitle2\" className={classes.version}>\nV {window.appVersion}\n</Typography>\n"
    },
    {
        "msg": "refactor(tooltips): remove variable references",
        "diff": "diff --git a/consumables/scss/components/tooltips/tooltips.scss b/consumables/scss/components/tooltips/tooltips.scss @import '../../global/colors/colors';\n@import '../../global/typography/typography';\n@import '../../global/layout/grid';\n-@import 'vars';\n@import '../../import-once';\n@include exports('tooltips') {\n",
        "date": "05.01.2017 11:22:53",
        "repo": "carbon-design-system/carbon",
        "type": "refactor",
        "sim_msg": "refactor: remove unused import from AssetBalancesPanel.jsx",
        "sim_diff": "diff --git a/app/components/Dashboard/AssetBalancesPanel/AssetBalancesPanel.jsx b/app/components/Dashboard/AssetBalancesPanel/AssetBalancesPanel.jsx @@ -9,7 +9,6 @@ import Tooltip from '../../Tooltip'\nimport { formatGAS, formatFiat, formatNEO } from '../../../core/formatters'\nimport { toNumber, toBigNumber } from '../../../core/math'\nimport { ASSETS, CURRENCIES } from '../../../core/constants'\n-import RefreshIcon from '../../../assets/icons/refresh.svg'\nimport LogoWithStrikethrough from '../../LogoWithStrikethrough'\nimport styles from './AssetBalancesPanel.scss'\n"
    },
    {
        "msg": "refactor: update component to bs5",
        "diff": "diff --git a/js/src/sidebar.js b/js/src/sidebar.js import {\ndefineJQueryPlugin,\nemulateTransitionEnd,\n- getElementFromSelector,\n- getTransitionDurationFromElement\n+ getTransitionDurationFromElement,\n+ reflow,\n+ typeCheckConfig\n} from './util/index'\nimport Data from './dom/data'\nimport EventHandler from './dom/event-handler'\n+import Manipulator from './dom/manipulator'\nimport BaseComponent from './base-component'\n/**\n@@ -76,7 +78,7 @@ const SELECTOR_SIDEBAR = '.c-sidebar'\n*/\nclass Sidebar extends BaseComponent {\nconstructor(element, config) {\n- this._element = element\n+ super(element)\nthis._config = this._getConfig(config)\nthis._open = this._isVisible()\nthis._mobile = this._isMobile()\n@@ -92,10 +94,6 @@ class Sidebar extends BaseComponent {\n// Getters\n- static get VERSION() {\n- return VERSION\n- }\n-\nstatic get Default() {\nreturn Default\n}\n@@ -112,14 +110,14 @@ class Sidebar extends BaseComponent {\nif (this._isMobile()) {\nthis._addClassName(this._firstBreakpointClassName())\nthis._showBackdrop()\n- EventHandler.one(this._element, TRANSITION_END, () => {\n+ EventHandler.one(this._element, 'transitionend', () => {\nthis._addClickOutListener()\n})\n} else if (breakpoint) {\nthis._addClassName(this._getBreakpointClassName(breakpoint))\nif (this._isOverlaid()) {\n- EventHandler.one(this._element, TRANSITION_END, () => {\n+ EventHandler.one(this._element, 'transitionend', () => {\nthis._addClickOutListener()\n})\n}\n@@ -127,7 +125,7 @@ class Sidebar extends BaseComponent {\nthis._addClassName(this._firstBreakpointClassName())\nif (this._isOverlaid()) {\n- EventHandler.one(this._element, TRANSITION_END, () => {\n+ EventHandler.one(this._element, 'transitionend', () => {\nthis._addClickOutListener()\n})\n}\n@@ -142,7 +140,7 @@ class Sidebar extends BaseComponent {\nconst transitionDuration = getTransitionDurationFromElement(this._element)\n- EventHandler.one(this._element, TRANSITION_END, complete)\n+ EventHandler.one(this._element, 'transitionend', complete)\nemulateTransitionEnd(this._element, transitionDuration)\n}\n@@ -174,7 +172,7 @@ class Sidebar extends BaseComponent {\nconst transitionDuration = getTransitionDurationFromElement(this._element)\n- EventHandler.one(this._element, TRANSITION_END, complete)\n+ EventHandler.one(this._element, 'transitionend', complete)\nemulateTransitionEnd(this._element, transitionDuration)\n}\n@@ -352,7 +350,7 @@ class Sidebar extends BaseComponent {\nreturn siblings\n}\n- _toggleDropdown(event, sidebar) {\n+ _toggleDropdown(event) {\nlet toggler = event.target\nif (!toggler.classList.contains(CLASS_NAME_NAV_DROPDOWN_TOGGLE)) {\ntoggler = toggler.closest(SELECTOR_NAV_DROPDOWN_TOGGLE)\n",
        "date": "17.12.2020 23:55:43",
        "repo": "coreui/coreui",
        "type": "refactor",
        "sim_msg": "chore: fix tests after PR",
        "sim_diff": "diff --git a/packages/simplebar/src/simplebar.js b/packages/simplebar/src/simplebar.js @@ -389,7 +389,10 @@ export default class SimpleBar {\n'touchend',\n'touchmove'\n].forEach(e => {\n- this.el.addEventListener(e, this.onPointerEvent, { capture: true, passive: true });\n+ this.el.addEventListener(e, this.onPointerEvent, {\n+ capture: true,\n+ passive: true\n+ });\n});\nthis.el.addEventListener('mousemove', this.onMouseMove);\nthis.el.addEventListener('mouseleave', this.onMouseLeave);\n@@ -866,7 +869,10 @@ export default class SimpleBar {\n'touchend',\n'touchmove'\n].forEach(e => {\n- this.el.removeEventListener(e, this.onPointerEvent, true);\n+ this.el.removeEventListener(e, this.onPointerEvent, {\n+ capture: true,\n+ passive: true\n+ });\n});\nthis.el.removeEventListener('mousemove', this.onMouseMove);\n"
    },
    {
        "msg": "refactor(group): superficial group function cleanup",
        "diff": "diff --git a/src/modeling/group.js b/src/modeling/group.js import {CAG} from '../csg'\n-\n+// FIXME : is this used anywhere ?\nexport default function group () { // experimental\nvar o\nvar i = 0\nvar a = arguments\nif (a[0].length) a = a[0]\n- if ((typeof (a[i]) == 'object') && (a[i] instanceof CAG)) {\n+ if ((typeof (a[i]) === 'object') && (a[i] instanceof CAG)) {\no = a[i].extrude({offset: [0, 0, 0.1]}) // -- convert a 2D shape to a thin solid, note: do not a[i] = a[i].extrude()\n} else {\no = a[i++]\n}\nfor (; i < a.length; i++) {\nvar obj = a[i]\n- if ((typeof (a[i]) == 'object') && (a[i] instanceof CAG)) {\n+ if ((typeof (a[i]) === 'object') && (a[i] instanceof CAG)) {\nobj = a[i].extrude({offset: [0, 0, 0.1]}) // -- convert a 2D shape to a thin solid:\n}\no = o.unionForNonIntersecting(obj)\n",
        "date": "06.01.2017 23:36:23",
        "repo": "jscad/openjscad.org",
        "type": "refactor",
        "sim_msg": "feat(js_helper): add support for custom attributes",
        "sim_diff": "diff --git a/lib/plugins/helper/css.js b/lib/plugins/helper/css.js 'use strict';\n+const flatten = function(arr, result = []) {\n+ for (const i in arr) {\n+ const value = arr[i];\n+ if (Array.isArray(value)) {\n+ flatten(value, result);\n+ } else {\n+ result.push(value);\n+ }\n+ }\n+ return result;\n+};\n+\nfunction cssHelper(...args) {\n- return args.reduce((result, path, i) => {\n- if (i) result += '\\n';\n+ let result = '\\n';\n+ let items = args;\n+\n+ if (!Array.isArray(args)) {\n+ items = [args];\n+ }\n- if (Array.isArray(path)) {\n- return result + Reflect.apply(cssHelper, this, path);\n+ items = flatten(items);\n+\n+ items.forEach(item => {\n+ // Old syntax\n+ if (typeof item === 'string' || item instanceof String) {\n+ let path = item;\n+ if (!path.endsWith('.css')) {\n+ path += '.css';\n+ }\n+ result += `<link rel=\"stylesheet\" href=\"${this.url_for(path)}\">\\n`;\n+ } else {\n+ // New syntax\n+ let tmpResult = '<link rel=\"stylesheet\"';\n+ for (const attribute in item) {\n+ if (attribute === 'href') {\n+ item[attribute] = this.url_for(item[attribute]);\n+ if (!item[attribute].endsWith('.css')) item[attribute] += '.css';\n+ }\n+ tmpResult += ` ${attribute}=\"${item[attribute]}\"`;\n+ }\n+ tmpResult += '>\\n';\n+ result += tmpResult;\n}\n- if (!path.includes('?') && !path.endsWith('.css')) path += '.css';\n- return `${result}<link rel=\"stylesheet\" href=\"${this.url_for(path)}\">`;\n- }, '');\n+ });\n+ return result;\n}\nmodule.exports = cssHelper;\n"
    },
    {
        "msg": "refactor: remove `c-` prefix and fix icon position",
        "diff": "diff --git a/scss/_icon.scss b/scss/_icon.scss -.c-icon {\n+.icon {\ndisplay: inline-block;\ncolor: inherit;\ntext-align: center;\n+ vertical-align: -.125rem; // Fix the position of icon\nfill: currentColor;\n- &:not(.c-icon-c-s):not(.c-icon-custom-size) {\n+ &:not(.icon-c-s):not(.icon-custom-size) {\n@include icon-size($icon-size-base);\n// TODO: create variable with a range\n@for $i from 2 through 9 {\n- &.c-icon-#{$i}xl {\n+ &.icon-#{$i}xl {\n@include icon-size($i * ($icon-size-xl / 1.5));\n}\n}\n- &.c-icon-xl {\n+ &.icon-xl {\n@include icon-size($icon-size-xl);\n}\n- &.c-icon-lg {\n+ &.icon-lg {\n@include icon-size($icon-size-lg);\n}\n- &.c-icon-sm {\n+ &.icon-sm {\n@include icon-size($icon-size-sm);\n}\n}\n",
        "date": "04.01.2021 23:23:10",
        "repo": "coreui/coreui",
        "type": "refactor",
        "sim_msg": "feat(icon): increase circled icon sizes",
        "sim_diff": "diff --git a/modules/icon/scss/_icon.scss b/modules/icon/scss/_icon.scss //\\*------------------------------------*/\n// Icon vars\n-$icon-font-size: ('xs': 10px, 's': 12px, 'm': 14px, 'l': 18px, 'xl': 26px);\n+$icon-font-size: ('xs': 14px, 's': 16px, 'm': 18px, 'l': 20px, 'xl': 26px);\n"
    },
    {
        "msg": "style(webpack_config/server): fix indent",
        "diff": "diff --git a/webpack_config/server/webpack.base.js b/webpack_config/server/webpack.base.js @@ -91,12 +91,11 @@ module.exports = {\nnew webpack.BannerPlugin({\nbanner: config.banner\n}),\n- // NOTE: Server can't process your styles/images/fonts on server-side rendering\n+ // Server can't process require of your styles/images/fonts\nnew webpack.NormalModuleReplacementPlugin(\n/\\.(css|sass|less|jpg|png|gif|scss)$/,\n'node-noop'\n)\n- // NOTE: @Metnew: If I remember correctly this plugin works similarly to NormalModuleReplacementPlugin\n// new webpack.IgnorePlugin(/\\.(css|sass|less|jpg|png|gif|scss)$/)\n],\nnode: {\n",
        "date": "07.08.2017 18:48:58",
        "repo": "metnew/suicrux",
        "type": "style",
        "sim_msg": "fix(blockTools): cleanup webpack config",
        "sim_diff": "diff --git a/packages/blockTools/webpack.config.js b/packages/blockTools/webpack.config.js const HtmlWebpackPlugin = require('html-webpack-plugin');\n-const path = require('path');\nconst webpack = require('webpack');\n+const path = require('path');\nmodule.exports = {\nentry: './demo/index.js',\n@@ -18,6 +18,7 @@ module.exports = {\n},\nfallback: { buffer: false },\n},\n+\nmodule: {\nrules: [\n// TODO: FIXME: do NOT webpack 5 support with this\n@@ -52,37 +53,11 @@ module.exports = {\n},\n],\n},\n- {\n- test: /\\.less$/,\n- use: [\n- {\n- loader: 'style-loader',\n- },\n- {\n- loader: 'css-loader', // translates CSS into CommonJS\n- },\n- {\n- loader: 'less-loader', // compiles Less to CSS\n- options: {\n- lessOptions: {\n- modifyVars: {\n- '@primary-color': '#697a8c',\n- '@link-color': '#1890ff',\n- '@layout-header-background': '#30383f',\n- '@layout-sider-background': '#30383f',\n- '@menu-dark-submenu-bg': '#21262b',\n- },\n- javascriptEnabled: true,\n- },\n- },\n- },\n- ],\n- },\n],\n},\nplugins: [\n- new webpack.ProvidePlugin({ Buffer: ['buffer', 'Buffer'] }),\n- new webpack.ProvidePlugin({ process: ['process'] }),\n+ new webpack.IgnorePlugin({ resourceRegExp: /runRenderTests/ }),\n+ new webpack.IgnorePlugin({ resourceRegExp: /mockBlock/ }),\nnew HtmlWebpackPlugin({\ntemplate: './public/index.html',\n}),\n"
    },
    {
        "msg": "style(lint): linted module.js",
        "diff": "diff --git a/lib/module.js b/lib/module.js -const firebase = require('firebase')\nconst { resolve } = require('path')\n+const firebase = require('firebase')\nconst logger = require('./logger')\nconst createServerMiddleware = require('./helpers/createServerMiddleware')\n",
        "date": "18.03.2020 23:21:30",
        "repo": "nuxt-community/firebase-module",
        "type": "style",
        "sim_msg": "fix(logger-import): fix require -> import",
        "sim_diff": "diff --git a/src/main/main.js b/src/main/main.js 'use strict';\nimport configureStore from 'common/configure-store';\nimport { localeUpdate } from 'common/locale/actions';\n-const { Logger } = require('common/logger');\n+import Logger from 'common/logger';\nconst path = require('path');\nconst fs = require('fs');\n"
    },
    {
        "msg": "style(all): add missing semicolon",
        "diff": "diff --git a/packages/all/src/index.js b/packages/all/src/index.js @@ -25,7 +25,7 @@ for (let bundle of [geojs, glo, lineup, onset, sententree, similaritygraph, stat\n}\nfor (let component in vega) {\nif (vega[component] !== vega.VegaView) {\n- components[component] = vega[component]\n+ components[component] = vega[component];\n}\n}\n",
        "date": "14.05.2018 13:22:41",
        "repo": "kitware/candela",
        "type": "style",
        "sim_msg": "feat(molecule/tabs): linter fixing",
        "sim_diff": "diff --git a/components/molecule/tabs/src/index.js b/components/molecule/tabs/src/index.js @@ -22,7 +22,6 @@ const VARIANTS = {\n}\nconst MoleculeTabs = ({variant, type, children, onChange}) => {\n-\nconst CLASS_VARIANT = `${BASE_CLASS}--${variant}`\nconst CLASS_TYPE = `${BASE_CLASS}--${type}`\n"
    },
    {
        "msg": "style: removed semicolons",
        "diff": "diff --git a/lib/templates/firebase-auth-sw.js b/lib/templates/firebase-auth-sw.js @@ -23,61 +23,61 @@ firebase.initializeApp(<%= serialize(options.config) %>)\nconst getIdToken = () => {\nreturn new Promise((resolve) => {\nconst unsubscribe = firebase.auth().onAuthStateChanged((user) => {\n- unsubscribe();\n+ unsubscribe()\nif (user) {\n// force token refresh as it might be used to sign in server side\nuser.getIdToken(true).then((idToken) => {\n- resolve(idToken);\n+ resolve(idToken)\n}, () => {\n- resolve(null);\n- });\n+ resolve(null)\n+ })\n} else {\n- resolve(null);\n+ resolve(null)\n+ }\n+ })\n+ })\n}\n- });\n- });\n-};\nconst fetchWithAuthorization = async (original, idToken) => {\n// Clone headers as request headers are immutable.\n- const headers = new Headers();\n+ const headers = new Headers()\nfor (let entry of original.headers.entries()) {\n- headers.append(entry[0], entry[1]);\n+ headers.append(entry[0], entry[1])\n}\n// Add ID token to header.\n- headers.append('Authorization', 'Bearer ' + idToken);\n+ headers.append('Authorization', 'Bearer ' + idToken)\n// Create authorized request\n- const { url, ...props } = original.clone();\n+ const { url, ...props } = original.clone()\nconst authorized = new Request(url, {\n...props,\nmode: 'same-origin',\nredirect: 'manual',\nheaders\n- });\n+ })\nreturn fetch(authorized)\n-};\n+}\nself.addEventListener('fetch', (event) => {\n- const url = new URL(event.request.url);\n+ const url = new URL(event.request.url)\nconst expectsHTML = event.request.headers.get('accept').includes('text/html')\n- const isSameOrigin = self.location.origin === url.origin;\n- const isHttps = (self.location.protocol === 'https:' || self.location.hostname === 'localhost');\n+ const isSameOrigin = self.location.origin === url.origin\n+ const isHttps = (self.location.protocol === 'https:' || self.location.hostname === 'localhost')\nconst isIgnored = ignorePaths.some(path => {\nif (typeof path === 'string') {\nreturn url.pathname.startsWith(path)\n}\nreturn path.test(url.pathname.slice(1))\n- });\n+ })\nif (!expectsHTML || !isSameOrigin || !isHttps || isIgnored) {\n- event.respondWith(fetch(event.request));\n+ event.respondWith(fetch(event.request))\n- return;\n+ return\n}\n// Fetch the resource after checking for the ID token.\n@@ -93,9 +93,9 @@ self.addEventListener('fetch', (event) => {\n: fetch(event.request)\n)\n)\n-});\n+})\n// In service worker script.\nself.addEventListener('activate', event => {\n- event.waitUntil(clients.claim());\n-});\n+ event.waitUntil(clients.claim())\n+})\n",
        "date": "01.06.2020 15:35:50",
        "repo": "nuxt-community/firebase-module",
        "type": "style",
        "sim_msg": "feat(firebase): add redirected info on getUser",
        "sim_diff": "diff --git a/packages/cerebral-provider-firebase/src/getUser.js b/packages/cerebral-provider-firebase/src/getUser.js @@ -13,13 +13,15 @@ export default function getUser () {\nuser.accessToken = result.credential.accessToken\n}\nresolve({\n- user: user\n+ user: user,\n+ isRedirected: true\n})\n} else {\nconst unsubscribe = firebase.auth().onAuthStateChanged(user => {\nunsubscribe()\nresolve({\n- user: user ? createUser(user) : null\n+ user: user ? createUser(user) : null,\n+ isRedirected: false\n})\n})\n}\n"
    },
    {
        "msg": "style: :lipstick: author styles",
        "diff": "diff --git a/src/lib/author.svelte b/src/lib/author.svelte class=\"not-prose border border-primary shadow-lg p-4 rounded-2xl\"\n>\n<div class=\"flex space-x-5 justify-evenly\">\n- <a href={data.html_url} target=\"_blank\" rel=\"noopener\">\n+ <a\n+ class=\"w-1/4\"\n+ href={data.html_url}\n+ target=\"_blank\"\n+ rel=\"noopener\"\n+ >\n<img\n- class=\"w-20 h-20 p-0 m-0 rounded-full\"\n+ class=\"w-20 h-20 p-0 m-0 rounded-full object-cover\"\nsrc={data.avatar_url}\nalt={data.name}\n/>\n</a>\n- <a href={data.html_url} target=\"_blank\" rel=\"noopener\">\n+ <a\n+ class=\"w-3/4\"\n+ href={data.html_url}\n+ target=\"_blank\"\n+ rel=\"noopener\"\n+ >\n<div class=\"text-sm\">\n<p class=\"text-lg font-bold tracking-widest\">{data.name}</p>\n<p>{data.bio || ``}</p>\n",
        "date": "08.05.2022 17:51:04",
        "repo": "spences10/cheat-sheets",
        "type": "style",
        "sim_msg": "style: a bit more of tweaking",
        "sim_diff": "diff --git a/layouts/index.html b/layouts/index.html <div class=\"bg-white p-8 text-center rounded-lg shadow-lg\">\n{{- $image := resources.Get .Params.Icon -}}\n- <img src=\"{{ $image.RelPermalink }}\" alt=\"feature-icon\" class=\"mx-auto mb-4\">\n+ <div class=\"h-20 my-4\">\n+ <img src=\"{{ $image.RelPermalink }}\" alt=\"feature-icon\" class=\"mx-auto my-auto\">\n+ </div>\n+\n<h3 class=\"uppercase text-md text-red-500 font-bold mb-2\">{{.Params.Title}}</h3>\n<p class=\"text-x\">{{.Content}}</p>\n<section class=\"pt-12 pb-10 text-center sponsors\">\n<div class=\"container\">\n<h2 class=\"text-3xl mb-10 font-bold\">{{.Params.SponsorsTitle}}</h2>\n- <ul class=\"flex flex-row space-x-10 justify-center\">\n+ <ul class=\"flex flex-col md:flex-row gap-16 justify-center\">\n{{ range where .Site.Pages \"Params.type\" \"sponsor\" }}\n<li class=\"\">\n- <a href=\"{{.Params.Website}}\" class=\"flex flex-col items-center space-y-3\">\n+ <a href=\"{{.Params.Website}}\" class=\"flex flex-col items-center space-y-3 mb-10\">\n{{- $image := (resources.Get .Params.Image).Resize \"400x webp\" -}}\n- <img src=\"{{$image.RelPermalink}}\" alt=\"sponsor-logo\" class=\"w-36\">\n- <h3 class=\"text-xl font-medium\">{{.Params.Name}}</h3>\n+ <img src=\"{{$image.RelPermalink}}\" alt=\"sponsor-logo\" class=\"w-40 md:w-36 mb-5\">\n+ <h3 class=\"text-xl font-bold\">{{.Params.Name}}</h3>\n</a>\n</li>\n{{end}}\n<li class=\"\">\n<a href=\"/\" class=\"flex flex-col items-center space-y-3\">\n- <div class=\"w-36 text-blue-400 border-2 border-dashed border-blue-400\">\n+ <div class=\"w-36 text-blue-400 border-2 border-dashed border-blue-400 mb-4\">\n<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-36 w-36\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" stroke-width=\"2\">\n<path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M12 4v16m8-8H4\" />\n</svg>\n"
    },
    {
        "msg": "style(Embed): update typings and propTypes usage",
        "diff": "diff --git a/src/modules/Embed/index.d.ts b/src/modules/Embed/index.d.ts import * as React from 'react';\ninterface EmbedProps {\n- /** An embed can be active. */\n- active?: boolean;\n+ [key: string]: any;\n/** An element type to render as (string or function). */\nas?: any;\n+ /** An embed can be active. */\n+ active?: boolean;\n+\n/** An embed can specify an alternative aspect ratio. */\naspectRatio?: '4:3' | '16:9' | '21:9';\n@@ -16,6 +18,9 @@ interface EmbedProps {\n/** Whether to show networks branded UI like title cards, or after video calls to action. */\nbrandedUI?: boolean;\n+ /** Primary content. */\n+ children?: React.ReactNode;\n+\n/** Additional classes. */\nclassName?: string;\n@@ -40,7 +45,7 @@ interface EmbedProps {\n* @param {SyntheticEvent} event - React's original SyntheticEvent.\n* @param {object} data - All props and proposed value.\n*/\n- onClick?: (e: React.FormEvent<HTMLVideoElement>, data: this) => void;\n+ onClick?: (event: React.MouseEvent<HTMLDivElement>, data: EmbedProps) => void;\n/** A placeholder image for embed. */\nplaceholder?: string;\n",
        "date": "24.01.2017 21:21:06",
        "repo": "semantic-org/semantic-ui-react",
        "type": "style",
        "sim_msg": "docs: fix code snippet in working-with-video.md\nFixes Video component file.",
        "sim_diff": "diff --git a/docs/docs/working-with-video.md b/docs/docs/working-with-video.md @@ -23,7 +23,8 @@ If you would like more control over how YouTube (or similar) videos are embedded\nIn this reusable sample component, you could include props for video data like URL or title, any necessary markup for styling purposes, and the common `iframe` embed code:\n-```js:title=components/video.js\n+```jsx:title=src/components/video.js\n+import React from \"react\"\nconst Video = ({ videoSrcURL, videoTitle, ...props }) => (\n<div className=\"video\">\n<iframe\n@@ -37,6 +38,7 @@ const Video = ({ videoSrcURL, videoTitle, ...props }) => (\n/>\n</div>\n)\n+export default Video\n```\nYou would then include this component in a template or page with a video source URL and title passed in as props. The data for video URLs and titles can be sourced in multiple ways, such as importing JSON or [querying data from Markdown with GraphQL](#querying-data-from-markdown-with-graphql). You can also hard-code video data for something fun, like a custom 404 page with an Easter egg YouTube video:\n"
    },
    {
        "msg": "style(webpack_config/server): formatting\nstyle(webpack_config/server): formatting",
        "diff": "diff --git a/webpack_config/server/webpack.prod.babel.js b/webpack_config/server/webpack.prod.babel.js @@ -17,7 +17,7 @@ const plugins = [\nsourceMap: true,\ncompress: {\nwarnings: false\n- // This option removes console log in production\n+ // This option removes console.log in production\n// drop_console: true\n},\noutput: {\n",
        "date": "14.08.2017 17:12:48",
        "repo": "metnew/suicrux",
        "type": "style",
        "sim_msg": "build(webpack): different entry point for dev server",
        "sim_diff": "diff --git a/webpack.config.js b/webpack.config.js @@ -18,7 +18,7 @@ const output = {\n// base Webpack config\nconst config = {\nmode: devMode ? 'development' : 'production',\n- entry: path.resolve(__dirname, 'src/index.js'),\n+ entry: path.resolve(__dirname, devMode ? 'docs/demo.js' : 'src/index.js'),\noutput,\ndevServer: {\ncontentBase: templatePath,\n"
    },
    {
        "msg": "style(pycandela): fix flake8 issues",
        "diff": "diff --git a/python/pycandela/pycandela/__init__.py b/python/pycandela/pycandela/__init__.py @@ -99,11 +99,13 @@ class Component(object):\ndef display(self):\ndisplay(self)\n+\ndef load(filename):\nwith open(filename) as f:\nc = json.load(f)\nreturn Component(c['name'], **c['options'])\n+\nclass ComponentAccessor(object):\ndef __dir__(self):\nreturn _component_list\n",
        "date": "16.05.2018 11:32:15",
        "repo": "kitware/candela",
        "type": "style",
        "sim_msg": "fix: Pin CoffeeScript version\nPrevents",
        "sim_diff": "diff --git a/package.json b/package.json \"caseless\": \"^0.12.0\",\n\"chai\": \"^4.0.2\",\n\"clone\": \"^2.1.1\",\n- \"coffee-script\": \"^1.12.5\",\n+ \"coffee-script\": \"1.12.6\",\n\"colors\": \"^1.1.2\",\n\"cross-spawn\": \"^5.0.1\",\n\"dredd-transactions\": \"5.0.0\",\n"
    },
    {
        "msg": "test: comply with strict mode",
        "diff": "diff --git a/test/examples/universalBrowser.test.js b/test/examples/universalBrowser.test.js @@ -9,7 +9,7 @@ describe('Rollbar loaded by snippet', function() {\ndocument.write(window.__html__['examples/universal-browser/test.html']);\n// Stub the xhr interface.\n- server = sinon.createFakeServer();\n+ window.server = sinon.createFakeServer();\n// Give the snippet time to load and init.\nsetTimeout(function() {\n@@ -18,10 +18,11 @@ describe('Rollbar loaded by snippet', function() {\n});\nafter(function () {\n- server.restore();\n+ window.server.restore();\n});\nit('should send a valid log event', function(done) {\n+ var server = window.server;\nvar rollbar = document.defaultView.Rollbar;\nserver.respondWith('POST', 'api/1/item',\n@@ -35,7 +36,7 @@ describe('Rollbar loaded by snippet', function() {\nvar ret = rollbar.info('test');\nserver.respond();\n- body = JSON.parse(server.requests[0].requestBody);\n+ var body = JSON.parse(server.requests[0].requestBody);\nexpect(body.access_token).to.eql('POST_CLIENT_ITEM_TOKEN');\nexpect(body.data.uuid).to.eql(ret.uuid);\n",
        "date": "29.03.2019 18:25:22",
        "repo": "rollbar/rollbar.js",
        "type": "test",
        "sim_msg": "fix: scrollBy using scrollTo",
        "sim_diff": "diff --git a/lib/browser/existing-browser.js b/lib/browser/existing-browser.js @@ -176,7 +176,8 @@ module.exports = class ExistingBrowser extends Browser {\n}\nscrollBy(x, y) {\n- return this._session.execute(`return window.scrollBy(${x},${y})`).then(({value}) => value);\n+ const script = `return window.scrollTo(window.pageXOffset+${x},window.pageYOffset+${y});`;\n+ return this._session.execute(script).then(({value}) => value);\n}\nget meta() {\n"
    },
    {
        "msg": "test(avatar-group): add check for max items",
        "diff": "diff --git a/packages/chakra-ui-core/src/AvatarGroup/tests/AvatarGroup.test.js b/packages/chakra-ui-core/src/AvatarGroup/tests/AvatarGroup.test.js @@ -32,3 +32,9 @@ it('should render correctly', () => {\nconst { asFragment } = renderComponent()\nexpect(asFragment()).toMatchSnapshot()\n})\n+\n+test('renders a number avatar showing count of truncated avatars', () => {\n+ const { getByText } = renderComponent()\n+\n+ getByText('+1')\n+})\n",
        "date": "15.03.2020 20:08:14",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "sim_msg": "test(result): add new test variation without limitLabel prop",
        "sim_diff": "diff --git a/packages/yoga/src/Result/native/Result.test.jsx b/packages/yoga/src/Result/native/Result.test.jsx @@ -39,7 +39,11 @@ const activitiesList = [\nvariant: 'deep',\n},\n{\n- children: '04',\n+ children: 'Activity4',\n+ variant: 'deep',\n+ },\n+ {\n+ children: 'Activity5',\nvariant: 'deep',\n},\n];\n@@ -83,4 +87,31 @@ describe('<Result />', () => {\nexpect(container).toMatchSnapshot();\n});\n+\n+ it('should match snapshot without limitLabel prop', () => {\n+ const { container } = render(\n+ <ThemeProvider>\n+ <Result\n+ rate=\"5.0\"\n+ avatar={<Avatar.Circle />}\n+ attendances={attendanceList}\n+ title=\"John Doe\"\n+ subTitle=\"Activity\"\n+ divided\n+ >\n+ <Result.Details items={entranceList} dots renderItem={Text.Small} />\n+ <Result.Details\n+ items={activitiesList}\n+ dots\n+ limit={2}\n+ renderItem={Text.Small}\n+ />\n+ <Result.Tags items={tagsList} />\n+ <Result.Button>See Details</Result.Button>\n+ </Result>\n+ </ThemeProvider>,\n+ );\n+\n+ expect(container).toMatchSnapshot();\n+ });\n});\n"
    },
    {
        "msg": "test: Remove use of underscore",
        "diff": "diff --git a/test/unit.js b/test/unit.js @@ -2133,7 +2133,7 @@ describe('js interface', {\nthis.foo = obj[\"foo\"];\n};\nvar tmp = scm_eval('(js-new \"BiwaScheme.TestForJSNew\" \\'foo (lambda () 4))');\n- expect(_.isFunction(tmp.foo)).should_be(true);\n+ expect(typeof(tmp.foo)).should_be('function');\n},\n'js-null?' : function(){\nev('(js-null? (js-eval \"null\"))').should_be(true);\n",
        "date": "23.06.2020 22:16:31",
        "repo": "biwascheme/biwascheme",
        "type": "test",
        "sim_msg": "fix(operators): Add tests for json response for _js.",
        "sim_diff": "diff --git a/packages/operators/test/common/js.test.js b/packages/operators/test/common/js.test.js @@ -49,6 +49,47 @@ test('_js with code and args specified named function', () => {\nexpect(_js({ location, params: { code: params.code }, methodName: 'evaluate' })).toEqual(null);\n});\n+test('_js with code and args specified to return json object', () => {\n+ const params = {\n+ code: `function (one, two) {\n+ return { a: one, b: two, c: [1,2,3, one, two, \"three\"]};\n+}`,\n+ args: [12, 14],\n+ };\n+ const fn = _js({ location, params, methodName: 'function' });\n+ expect(fn).toBeInstanceOf(Function);\n+ expect(fn(1, 2)).toEqual({ a: 1, b: 2, c: [1, 2, 3, 1, 2, 'three'] });\n+ expect(_js({ location, params, methodName: 'evaluate' })).toEqual({\n+ a: 12,\n+ b: 14,\n+ c: [1, 2, 3, 12, 14, 'three'],\n+ });\n+ expect(_js({ location, params: { code: params.code }, methodName: 'evaluate' })).toEqual({\n+ c: [1, 2, 3, null, null, 'three'],\n+ });\n+});\n+\n+test('_js with code and args specified to return json array', () => {\n+ const params = {\n+ code: `function (one, two) {\n+ return [1,2,3, one, two, \"three\"];\n+}`,\n+ args: [12, 14],\n+ };\n+ const fn = _js({ location, params, methodName: 'function' });\n+ expect(fn).toBeInstanceOf(Function);\n+ expect(fn(1, 2)).toEqual([1, 2, 3, 1, 2, 'three']);\n+ expect(_js({ location, params, methodName: 'evaluate' })).toEqual([1, 2, 3, 12, 14, 'three']);\n+ expect(_js({ location, params: { code: params.code }, methodName: 'evaluate' })).toEqual([\n+ 1,\n+ 2,\n+ 3,\n+ null,\n+ null,\n+ 'three',\n+ ]);\n+});\n+\ntest('_js with undefined result returns null', () => {\nconst params = {\ncode: `function add(one, two) {\n"
    },
    {
        "msg": "test(DynamicLinechart): use new update() API",
        "diff": "diff --git a/app/examples/dynamic-linechart/index.js b/app/examples/dynamic-linechart/index.js @@ -12,18 +12,6 @@ class DynamicLineChart extends LineChart {\nsuper.render();\nthis.emit('render');\n}\n-\n- data (data) {\n- this.options.data = data;\n-\n- this.chart.then(chart => {\n- let data = chart.data('data');\n- data.remove(() => true);\n- data.insert(this.options.data);\n-\n- chart.update();\n- });\n- }\n}\nlet data = [];\n@@ -58,7 +46,7 @@ window.onload = () => {\ncounter++;\n- vis.data(data);\n+ vis.update({data});\nvis.render();\n}, 1000);\n",
        "date": "18.05.2017 15:54:35",
        "repo": "kitware/candela",
        "type": "test",
        "sim_msg": "chore(charts): formatting x-axis labels, new stories for test",
        "sim_diff": "diff --git a/src/components/TimeSeriesCard/TimeSeriesCard.jsx b/src/components/TimeSeriesCard/TimeSeriesCard.jsx @@ -15,6 +15,8 @@ import Card from '../Card/Card';\nconst LineChartWrapper = styled.div`\npadding-left: 16px;\n+ width: 100%;\n+ height: 100%;\n&&& {\n.chart-wrapper g.tick text {\n${props =>\n@@ -27,6 +29,10 @@ const LineChartWrapper = styled.div`\n.legend-wrapper {\ndisplay: ${props => (props.isLegendHidden ? 'none' : 'block')};\n}\n+ .chart-holder {\n+ width: 100%;\n+ height: 100%;\n+ }\n}\n`;\n@@ -38,15 +44,28 @@ const TimeSeriesCard = ({\nvalues,\n...others\n}) => {\n- const formatInterval = timestamp => {\n+ const formatInterval = (timestamp, sameDay, index) => {\nconst m = moment.unix(timestamp / 1000);\n- return interval === 'day'\n- ? m.format('YYYY-MM-DD')\n- : interval === 'hour'\n- ? m.format('MM-DD HH:00')\n+\n+ return sameDay && interval === 'hour'\n+ ? m.format('HH:mm')\n+ : interval === 'hour' && !sameDay\n+ ? m.format('Do HH:00')\n+ : interval === 'day' && size === CARD_SIZES.MEDIUM && index === 0\n+ ? m.format('DD MMM YYYY')\n+ : interval === 'month'\n+ ? m.format('MMM YYYY')\n: interval === 'minute'\n? m.format('HH:mm')\n- : m.format('YYYY-MM-DD');\n+ : m.format('DD MMM');\n+\n+ // return interval === 'day'\n+ // ? m.format('MM DD')\n+ // : interval === 'hour'\n+ // ? m.format('MM-DD HH:00')\n+ // : interval === 'minute'\n+ // ? m.format('HH:mm')\n+ // : m.format('YYYY-MM-DD');\n};\nconst maxTicketPerSize = size => {\n@@ -62,15 +81,21 @@ const TimeSeriesCard = ({\n}\n};\n+ const sameDay =\n+ moment(moment.unix(values[0].timestamp / 1000)).isSame(moment(), 'day') &&\n+ moment(moment.unix(values[values.length - 1].timestamp / 1000)).isSame(moment(), 'day');\n+\nreturn (\n<withSize.SizeMe monitorHeight>\n{({ size: measuredSize }) => {\nconst ticksInterval = Math.round(values.length / maxTicketPerSize(size));\nconst labels = values\n.sort((left, right) => moment.utc(left.timestamp).diff(moment.utc(right.timestamp)))\n- .map((i, idx) =>\n- idx % ticksInterval === 0 ? formatInterval(i[timeDataSourceId]) : ' '.repeat(idx)\n- );\n+ .map((i, idx) => {\n+ return idx % ticksInterval === 0\n+ ? formatInterval(i[timeDataSourceId], sameDay, idx)\n+ : ' '.repeat(idx);\n+ });\nreturn (\n<Card title={title} size={size} {...others} isEmpty={isEmpty(values)}>\n{!others.isLoading && !isEmpty(values) ? (\n@@ -98,6 +123,7 @@ const TimeSeriesCard = ({\nlegendClickable: true,\ncontainerResizable: true,\n}}\n+ height={size === CARD_SIZES.MEDIUM ? 200 : null}\n/>\n</LineChartWrapper>\n) : null}\n"
    },
    {
        "msg": "test(button-group): refactor use screen",
        "diff": "diff --git a/packages/chakra-ui-core/src/CButtonGroup/tests/CButtonGroup.test.js b/packages/chakra-ui-core/src/CButtonGroup/tests/CButtonGroup.test.js import { CButton, CButtonGroup } from '../..'\n-import { render } from '@/tests/test-utils'\n+import { render, screen } from '@/tests/test-utils'\nconst renderComponent = (props) => {\nconst base = {\n@@ -23,7 +23,7 @@ it('should render correctly', () => {\n})\nit('should attach buttons when `is-attached` is passed', () => {\n- const { asFragment, getByText } = renderComponent({\n+ const { asFragment } = renderComponent({\ntemplate: `\n<CButtonGroup isAttached>\n<CButton>Button1</CButton>\n@@ -31,13 +31,13 @@ it('should attach buttons when `is-attached` is passed', () => {\n</CButtonGroup>`\n})\n- const button = getByText('Button1')\n+ const button = screen.getByText('Button1')\nexpect(button).toHaveStyle('border-top-right-radius: 0; border-bottom-right-radius: 0;')\nexpect(asFragment()).toMatchSnapshot()\n})\nit('should display children', () => {\n- const { getByText } = renderComponent()\n- expect(getByText('Button1')).toBeInTheDocument()\n- expect(getByText('Button2')).toBeInTheDocument()\n+ renderComponent()\n+ expect(screen.getByText('Button1')).toBeInTheDocument()\n+ expect(screen.getByText('Button2')).toBeInTheDocument()\n})\n",
        "date": "12.07.2020 16:09:03",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "sim_msg": "test(Root): add atom/button tests",
        "sim_diff": "diff --git a/test/atom/button/index.js b/test/atom/button/index.js * */\n/* eslint react/jsx-no-undef:0 */\n+/* eslint no-undef:0 */\n-// import React from 'react'\n-// import {render} from '@testing-library/react'\n+import React from 'react'\n+import ReactDOM from 'react-dom'\nimport chai, {expect} from 'chai'\nimport chaiDOM from 'chai-dom'\n+import {render} from '@testing-library/react'\nchai.use(chaiDOM)\n+const setupBuilder = Component => props => {\n+ const container = document.createElement('div')\n+ container.setAttribute('id', 'test-container')\n+ const utils = render(<Component {...props} />, {\n+ container: document.body.appendChild(container)\n+ })\n+ return utils\n+}\n+\ndescribe('atom/button', () => {\n- it.skip('Render', () => {\n+ const Component = AtomButton\n+ const setup = setupBuilder(Component)\n+\n+ it('should render without crashing', () => {\n+ // Given\n+ const props = {}\n+\n+ // When\n+ const component = <Component {...props} />\n+\n+ // Then\n+ const div = document.createElement('div')\n+ ReactDOM.render(component, div)\n+ ReactDOM.unmountComponentAtNode(div)\n+ })\n+\n+ it('should NOT render null', () => {\n+ // Given\n+ const props = {}\n+\n+ // When\n+ const {container} = setup(props)\n+\n+ // Then\n+ expect(container.innerHTML).to.be.a('string')\n+ expect(container.innerHTML).to.not.have.lengthOf(0)\n+ })\n+\n+ it.skip('example', () => {\n// Example TO BE DELETED!!!!\n- // const {getByRole} = render(<AtomButton>HOLA</AtomButton>)\n+\n+ // Given\n+ // const props = {}\n+\n+ // When\n+ // const {getByRole} = setup(props)\n+\n+ // Then\n// expect(getByRole('button')).to.have.text('HOLA')\nexpect(true).to.be.eql(false)\n})\n"
    },
    {
        "msg": "test: Add link to Webkit bug to tests",
        "diff": "diff --git a/test/trickle.js b/test/trickle.js @@ -14,7 +14,8 @@ test('get config', function (t) {\ntest('disable trickle', function (t) {\nif (bowser.safari || bowser.ios) {\n- t.pass('Skip on Safari and iOS which do not support this reliably, it seems')\n+ // Note: Webkit bug filed here: https://bugs.webkit.org/show_bug.cgi?id=182906\n+ t.pass('Skip on Safari and iOS which do not support this reliably')\nt.end()\nreturn\n}\n@@ -64,7 +65,8 @@ test('disable trickle', function (t) {\ntest('disable trickle (only initiator)', function (t) {\nif (bowser.safari || bowser.ios) {\n- t.pass('Skip on Safari and iOS which do not support this reliably, it seems')\n+ // Note: Webkit bug filed here: https://bugs.webkit.org/show_bug.cgi?id=182906\n+ t.pass('Skip on Safari and iOS which do not support this reliably')\nt.end()\nreturn\n}\n@@ -114,7 +116,8 @@ test('disable trickle (only initiator)', function (t) {\ntest('disable trickle (only receiver)', function (t) {\nif (bowser.safari || bowser.ios) {\n- t.pass('Skip on Safari and iOS which do not support this reliably, it seems')\n+ // Note: Webkit bug filed here: https://bugs.webkit.org/show_bug.cgi?id=182906\n+ t.pass('Skip on Safari and iOS which do not support this reliably')\nt.end()\nreturn\n}\n",
        "date": "19.02.2018 15:04:02",
        "repo": "feross/simple-peer",
        "type": "test",
        "sim_msg": "test(http): add attributes assertion; linting",
        "sim_diff": "diff --git a/test/integration/instrumentation/http.tap.js b/test/integration/instrumentation/http.tap.js var tap = require('tap')\nvar test = tap.test\nvar http = require('http')\n-var helper = require('../../lib/agent_helper.js')\n-var StreamSink = require('../../../lib/util/stream-sink.js')\n+var helper = require('../../lib/agent_helper')\n+var StreamSink = require('../../../lib/util/stream-sink')\n+var HTTP_ATTS = require('../../lib/fixtures').httpAttributes\ntest(\"built-in http instrumentation should handle internal & external requests\",\nfunction(t) {\n- t.plan(14)\n+ t.plan(20)\nvar agent = helper.instrumentMockedAgent()\n+ agent.config.attributes.enabled = true\nvar TEST_INTERNAL_PORT = 8123\nvar TEST_INTERNAL_PATH = '/path'\n@@ -131,6 +133,12 @@ test(\"built-in http instrumentation should handle internal & external requests\",\n'should associate outbound HTTP requests with the inbound transaction'\n)\n+ var attributes = transaction.trace.attributes.get('transaction_tracer')\n+\n+ HTTP_ATTS.forEach(function(key) {\n+ t.ok(attributes[key] !== undefined, 'Trace contains attribute: ' + key)\n+ })\n+\nt.end()\n})\n}.bind(this)\n"
    },
    {
        "msg": "test: add autocomplete highlight-first-item\nadd unit test for",
        "diff": "diff --git a/test/unit/specs/autocomplete.spec.js b/test/unit/specs/autocomplete.spec.js @@ -570,4 +570,54 @@ describe('Autocomplete', () => {\ndone();\n});\n});\n+ it('can highlight first item', done => {\n+ vm = createVue({\n+ template: `\n+ <el-autocomplete\n+ ref=\"autocomplete\"\n+ v-model=\"state\"\n+ :fetch-suggestions=\"querySearch\"\n+ highlight-first-item\n+ ></el-autocomplete>\n+ `,\n+ data() {\n+ return {\n+ restaurants: [],\n+ state: ''\n+ };\n+ },\n+ methods: {\n+ querySearch(queryString, cb) {\n+ const opts = [\n+ { 'value': '1' },\n+ { 'value': '11' },\n+ { 'value': '2' },\n+ { 'value': '22' }\n+ ];\n+ cb(\n+ queryString\n+ ? opts.filter(opt => opt.value.indexOf(queryString) >= 0)\n+ : opts\n+ );\n+ }\n+ }\n+ }, true);\n+ let elm = vm.$el;\n+ let inputElm = elm.querySelector('input');\n+ inputElm.focus();\n+\n+ const autocomplete = vm.$refs.autocomplete;\n+ const input = autocomplete.$refs.input;\n+ input.$emit('input', '1');\n+\n+ setTimeout(_ => {\n+ const suggestions = vm.$refs.autocomplete.$refs.suggestions.$el;\n+ const items = suggestions.querySelectorAll('.el-autocomplete-suggestion__list li');\n+\n+ expect(items.length).to.equal(2);\n+ expect(items[0].classList.contains('highlighted')).to.be.true;\n+\n+ done();\n+ }, 500);\n+ });\n});\n",
        "date": "14.02.2019 20:30:57",
        "repo": "hug-sun/element3",
        "type": "test",
        "sim_msg": "feat(pelias_parser): fix tests",
        "sim_diff": "diff --git a/test/unit/query/autocomplete.js b/test/unit/query/autocomplete.js @@ -309,7 +309,7 @@ module.exports.tests.query = function(test, common) {\nvar expected = require('../fixture/autocomplete_linguistic_bbox_san_francisco');\nt.deepEqual(compiled.type, 'autocomplete', 'query type set');\n- t.deepEqual(compiled.body, expected, 'autocomplete_linguistic_focus_null_island');\n+ t.deepEqual(compiled.body, expected, 'autocomplete_linguistic_bbox_san_francisco');\nt.end();\n});\n"
    },
    {
        "msg": "test(stat): refactor use screen",
        "diff": "diff --git a/packages/chakra-ui-core/src/CStat/tests/CStat.test.js b/packages/chakra-ui-core/src/CStat/tests/CStat.test.js import { CStat, CStatLabel, CStatNumber, CStatHelperText, CStatArrow } from '..'\n-import { render } from '@/tests/test-utils'\n+import { render, screen } from '@/tests/test-utils'\nconst renderComponent = (props) => {\nconst base = {\n@@ -22,8 +22,8 @@ it('should render correctly', () => {\n})\nit('should render children in DOM', () => {\n- const { getByText } = renderComponent()\n- expect(getByText('Collected Fees')).toBeInTheDocument()\n+ renderComponent()\n+ expect(screen.getByText('Collected Fees')).toBeInTheDocument()\n})\ntest('\"CStatArrow\" should display corresponding icon for \"type\" prop', () => {\n",
        "date": "12.07.2020 16:50:53",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "sim_msg": "test(valuecard): add explicit precision testcase",
        "sim_diff": "diff --git a/packages/react/src/components/ValueCard/ValueCard.test.jsx b/packages/react/src/components/ValueCard/ValueCard.test.jsx @@ -75,4 +75,27 @@ describe('ValueCard', () => {\nexpect(defaultFormattedValue).toBe('10,000');\nexpect(screen.queryByText(testValue)).toBeTruthy();\n});\n+ it('Precision value for attribute is used', () => {\n+ render(\n+ <ValueCard\n+ id=\"myIdTest\"\n+ title=\"Health score\"\n+ content={{ attributes: [{ label: 'title', dataSourceId: 'v', precision: 2 }] }}\n+ size={CARD_SIZES.SMALL}\n+ values={{ v: 10000 }}\n+ />\n+ );\n+ expect(screen.queryByText('10,000.00')).toBeTruthy();\n+\n+ render(\n+ <ValueCard\n+ id=\"myIdTest\"\n+ title=\"Health score\"\n+ content={{ attributes: [{ label: 'title', dataSourceId: 'v', precision: 1 }] }}\n+ size={CARD_SIZES.SMALL}\n+ values={{ v: 10000 }}\n+ />\n+ );\n+ expect(screen.queryByText('10,000.0')).toBeTruthy();\n+ });\n});\n"
    },
    {
        "msg": "test(tag): refactor use screen",
        "diff": "diff --git a/packages/chakra-ui-core/src/CTag/tests/CTag.test.js b/packages/chakra-ui-core/src/CTag/tests/CTag.test.js import { CBox, CTag, CTagLabel, CTagIcon, CTagCloseButton, CAvatar } from '../..'\n-import { render } from '@/tests/test-utils'\n+import { render, screen } from '@/tests/test-utils'\nconst renderComponent = (props) => {\nconst base = {\n@@ -22,9 +22,9 @@ it('should render correctly', () => {\n})\nit('should display children', () => {\n- const { getByText } = renderComponent()\n+ renderComponent()\n- expect(getByText('Green')).toBeInTheDocument()\n+ expect(screen.getByText('Green')).toBeInTheDocument()\n})\nit('should display tag with right icon', () => {\n@@ -35,8 +35,7 @@ it('should display tag with right icon', () => {\n<CTagLabel>Green</CTagLabel>\n<CTagIcon icon=\"add\" size=\"12px\" />\n</CTag>\n- </CBox>\n- `\n+ </CBox>`\n})\nexpect(asFragment()).toMatchSnapshot()\n})\n@@ -52,8 +51,7 @@ it('should display tag with custom element', () => {\n/>\n<CTagLabel>Mesut</CTagLabel>\n</CTag>\n- </CBox>\n- `\n+ </CBox>`\n})\nexpect(asFragment()).toMatchSnapshot()\n})\n",
        "date": "12.07.2020 17:04:43",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "sim_msg": "test(Root): add atom/button tests",
        "sim_diff": "diff --git a/test/atom/button/index.js b/test/atom/button/index.js * */\n/* eslint react/jsx-no-undef:0 */\n+/* eslint no-undef:0 */\n-// import React from 'react'\n-// import {render} from '@testing-library/react'\n+import React from 'react'\n+import ReactDOM from 'react-dom'\nimport chai, {expect} from 'chai'\nimport chaiDOM from 'chai-dom'\n+import {render} from '@testing-library/react'\nchai.use(chaiDOM)\n+const setupBuilder = Component => props => {\n+ const container = document.createElement('div')\n+ container.setAttribute('id', 'test-container')\n+ const utils = render(<Component {...props} />, {\n+ container: document.body.appendChild(container)\n+ })\n+ return utils\n+}\n+\ndescribe('atom/button', () => {\n- it.skip('Render', () => {\n+ const Component = AtomButton\n+ const setup = setupBuilder(Component)\n+\n+ it('should render without crashing', () => {\n+ // Given\n+ const props = {}\n+\n+ // When\n+ const component = <Component {...props} />\n+\n+ // Then\n+ const div = document.createElement('div')\n+ ReactDOM.render(component, div)\n+ ReactDOM.unmountComponentAtNode(div)\n+ })\n+\n+ it('should NOT render null', () => {\n+ // Given\n+ const props = {}\n+\n+ // When\n+ const {container} = setup(props)\n+\n+ // Then\n+ expect(container.innerHTML).to.be.a('string')\n+ expect(container.innerHTML).to.not.have.lengthOf(0)\n+ })\n+\n+ it.skip('example', () => {\n// Example TO BE DELETED!!!!\n- // const {getByRole} = render(<AtomButton>HOLA</AtomButton>)\n+\n+ // Given\n+ // const props = {}\n+\n+ // When\n+ // const {getByRole} = setup(props)\n+\n+ // Then\n// expect(getByRole('button')).to.have.text('HOLA')\nexpect(true).to.be.eql(false)\n})\n"
    },
    {
        "msg": "test(alert): add a11y test to alert component",
        "diff": "diff --git a/packages/chakra-ui-core/src/Alert/tests/Alert.test.js b/packages/chakra-ui-core/src/Alert/tests/Alert.test.js @@ -43,3 +43,14 @@ it('should override icon if set explicitly', () => {\nexpect(asFragment()).toMatchSnapshot()\n})\n+\n+it('should have role=alert', () => {\n+ const { getByRole } = renderComponent({\n+ template: `\n+ <Alert status=\"error\">\n+ <AlertIcon name=\"add\" />\n+ </Alert>`\n+ })\n+\n+ getByRole('alert')\n+})\n",
        "date": "15.03.2020 20:07:02",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "sim_msg": "refactor(alert/basic): format js with new rules",
        "sim_diff": "diff --git a/components/alert/basic/src/index.js b/components/alert/basic/src/index.js @@ -8,9 +8,9 @@ import Bell from '@schibstedspain/sui-svgiconset/lib/Bell'\nimport Check from '@schibstedspain/sui-svgiconset/lib/Check'\nconst icons = {\n- 'info': Info,\n- 'error': Bell,\n- 'success': Check\n+ info: Info,\n+ error: Bell,\n+ success: Check\n}\nfunction _renderAction({handle, text, className}) {\n@@ -26,7 +26,7 @@ function _renderAction ({ handle, text, className }) {\nfunction _renderActions(actions) {\nreturn (\n- <div className='sui-AlertBasic-actions'>\n+ <div className=\"sui-AlertBasic-actions\">\n{actions.map((action, index) => _renderAction(action))}\n</div>\n)\n@@ -44,14 +44,14 @@ export default function AlertBasic ({\nreturn (\n<div>\n<div className={`sui-AlertBasic sui-AlertBasic--${type}`}>\n- {IconClose &&\n- <button className='sui-AlertBasic-buttonClose' onClick={handleClose}>\n- <IconClose svgClass='sui-AlertBasic-buttonCloseIcon' />\n+ {IconClose && (\n+ <button className=\"sui-AlertBasic-buttonClose\" onClick={handleClose}>\n+ <IconClose svgClass=\"sui-AlertBasic-buttonCloseIcon\" />\n</button>\n- }\n- <div className='sui-AlertBasic-message'>\n+ )}\n+ <div className=\"sui-AlertBasic-message\">\n<div>\n- <AlertIcon svgClass='sui-AlertBasic-icon' />\n+ <AlertIcon svgClass=\"sui-AlertBasic-icon\" />\n</div>\n<div>{children}</div>\n</div>\n"
    },
    {
        "msg": "test(code): refactor to screen",
        "diff": "diff --git a/packages/chakra-ui-core/src/CCode/tests/CCode.test.js b/packages/chakra-ui-core/src/CCode/tests/CCode.test.js import CCode from '..'\n-import { render } from '@/tests/test-utils'\n+import { render, screen } from '@/tests/test-utils'\nconst renderComponent = (props) => {\nconst base = {\n@@ -16,7 +16,7 @@ it('should render correctly', () => {\n})\nit('should display children', () => {\n- const { getByText } = renderComponent()\n+ renderComponent()\n- expect(getByText('content')).toBeInTheDocument()\n+ expect(screen.getByText('content')).toBeInTheDocument()\n})\n",
        "date": "06.07.2020 23:32:35",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "sim_msg": "test(Root): add AtomPanel test",
        "sim_diff": "diff --git a/test/atom/panel/index.js b/test/atom/panel/index.js * */\n/* eslint react/jsx-no-undef:0 */\n+/* eslint no-undef:0 */\n-// import React from 'react'\n-// import {render} from '@testing-library/react'\n+import React from 'react'\n+import ReactDOM from 'react-dom'\nimport chai, {expect} from 'chai'\nimport chaiDOM from 'chai-dom'\n+import {render} from '@testing-library/react'\nchai.use(chaiDOM)\n+const setupBuilder = Component => props => {\n+ const container = document.createElement('div')\n+ container.setAttribute('id', 'test-container')\n+ const utils = render(<Component {...props} />, {\n+ container: document.body.appendChild(container)\n+ })\n+ return utils\n+}\n+\ndescribe('atom/panel', () => {\n- it.skip('Render', () => {\n+ const Component = AtomPanel\n+ const setup = setupBuilder(Component)\n+\n+ it('should render without crashing', () => {\n+ // Given\n+ const props = {}\n+\n+ // When\n+ const component = <Component {...props} />\n+\n+ // Then\n+ const div = document.createElement('div')\n+ ReactDOM.render(component, div)\n+ ReactDOM.unmountComponentAtNode(div)\n+ })\n+\n+ it('should NOT render null', () => {\n+ // Given\n+ const props = {}\n+\n+ // When\n+ const {container} = setup(props)\n+\n+ // Then\n+ expect(container.innerHTML).to.be.a('string')\n+ expect(container.innerHTML).to.not.have.lengthOf(0)\n+ })\n+\n+ it.skip('example', () => {\n// Example TO BE DELETED!!!!\n- // const {getByRole} = render(<AtomButton>HOLA</AtomButton>)\n+\n+ // Given\n+ // const props = {}\n+\n+ // When\n+ // const {getByRole} = setup(props)\n+\n+ // Then\n// expect(getByRole('button')).to.have.text('HOLA')\nexpect(true).to.be.eql(false)\n})\n"
    },
    {
        "msg": "test(cli): Added CLI unit test for --global-var option handling",
        "diff": "diff --git a/test/unit/cli.test.js b/test/unit/cli.test.js @@ -142,6 +142,24 @@ describe('cli parser', function () {\n});\n});\n+ describe('--global-var', function () {\n+ it('should throw an error for missing --global-var values', function (done) {\n+ cli.rawOptions('run myCollection.json --global-var'.split(' '), 'newmantests', function (err) {\n+ expect(err.code).to.equal('ARGError');\n+\n+ done();\n+ });\n+ });\n+\n+ it('should throw an error for --global-var values without an `=`', function (done) {\n+ cli.rawOptions('run myCollection.json --global-var foo'.split(' '), 'newmantests', function (err) {\n+ expect(err.code).to.equal('ARGError');\n+\n+ done();\n+ });\n+ });\n+ });\n+\nit('should load all arguments (except reporters)', function (done) {\ncli.rawOptions(('run ' +\n'myCollection.json ' +\n@@ -154,6 +172,7 @@ describe('cli parser', function () {\n'--reporter-cli-no-summary ' +\n'--iteration-count 23 ' +\n'--reporters json,html ' +\n+ '--global-var foo=bar --global-var alpha==beta= ' +\n'--no-color ' +\n'--delay-request 12000 ' +\n'--timeout-request 5000 ' +\n@@ -183,6 +202,11 @@ describe('cli parser', function () {\nexpect(opts.reporters).to.contain('html');\nexpect(opts.reporters).to.not.contain('junit');\n+ expect(opts.globalVar).to.eql([\n+ { key: 'foo', value: 'bar' },\n+ { key: 'alpha', value: '=beta=' }\n+ ]);\n+\nexpect(opts.bail).to.be(true);\nexpect(opts.suppressExitCode).to.be(true);\n@@ -208,6 +232,7 @@ describe('cli parser', function () {\n'--timeout-request 5000 ' +\n'--ignore-redirects ' +\n'-k ' +\n+ '--global-var foo=bar --global-var alpha==beta= ' +\n'--reporter-json-output ./omg.txt ' +\n'--reporter-html-output report.html ' +\n'--reporter-html-template ./mytemplate.html ' +\n@@ -231,6 +256,11 @@ describe('cli parser', function () {\nexpect(opts.ignoreRedirects).to.be(true);\nexpect(opts.insecure).to.be(true);\n+ expect(opts.globalVar).to.eql([\n+ { key: 'foo', value: 'bar' },\n+ { key: 'alpha', value: '=beta=' }\n+ ]);\n+\nexpect(opts.noColor).to.be(true);\nexpect(opts.reporters).to.contain('json');\n",
        "date": "24.07.2017 14:35:30",
        "repo": "postmanlabs/newman",
        "type": "test",
        "sim_msg": "fix(operators): Add tests for json response for _js.",
        "sim_diff": "diff --git a/packages/operators/test/common/js.test.js b/packages/operators/test/common/js.test.js @@ -49,6 +49,47 @@ test('_js with code and args specified named function', () => {\nexpect(_js({ location, params: { code: params.code }, methodName: 'evaluate' })).toEqual(null);\n});\n+test('_js with code and args specified to return json object', () => {\n+ const params = {\n+ code: `function (one, two) {\n+ return { a: one, b: two, c: [1,2,3, one, two, \"three\"]};\n+}`,\n+ args: [12, 14],\n+ };\n+ const fn = _js({ location, params, methodName: 'function' });\n+ expect(fn).toBeInstanceOf(Function);\n+ expect(fn(1, 2)).toEqual({ a: 1, b: 2, c: [1, 2, 3, 1, 2, 'three'] });\n+ expect(_js({ location, params, methodName: 'evaluate' })).toEqual({\n+ a: 12,\n+ b: 14,\n+ c: [1, 2, 3, 12, 14, 'three'],\n+ });\n+ expect(_js({ location, params: { code: params.code }, methodName: 'evaluate' })).toEqual({\n+ c: [1, 2, 3, null, null, 'three'],\n+ });\n+});\n+\n+test('_js with code and args specified to return json array', () => {\n+ const params = {\n+ code: `function (one, two) {\n+ return [1,2,3, one, two, \"three\"];\n+}`,\n+ args: [12, 14],\n+ };\n+ const fn = _js({ location, params, methodName: 'function' });\n+ expect(fn).toBeInstanceOf(Function);\n+ expect(fn(1, 2)).toEqual([1, 2, 3, 1, 2, 'three']);\n+ expect(_js({ location, params, methodName: 'evaluate' })).toEqual([1, 2, 3, 12, 14, 'three']);\n+ expect(_js({ location, params: { code: params.code }, methodName: 'evaluate' })).toEqual([\n+ 1,\n+ 2,\n+ 3,\n+ null,\n+ null,\n+ 'three',\n+ ]);\n+});\n+\ntest('_js with undefined result returns null', () => {\nconst params = {\ncode: `function add(one, two) {\n"
    },
    {
        "msg": "test: Add a test for strict mode with `Collapse`",
        "diff": "diff --git a/src/__tests__/Collapse.spec.js b/src/__tests__/Collapse.spec.js @@ -32,6 +32,13 @@ describe('Collapse', () => {\nexpect(wrapper.find('p').text()).toBe('hello');\n});\n+ it('works with strict mode', () => {\n+ const spy = jest.spyOn(console, 'error');\n+ wrapper = mount(<React.StrictMode><Collapse/></React.StrictMode>);\n+ expect(wrapper.instance()).toBeTruthy();\n+ expect(spy).not.toHaveBeenCalled();\n+ })\n+\nit('should have default isOpen value', () => {\nwrapper = shallow(<Collapse />);\nexpect(wrapper.instance().props.isOpen).toEqual(false);\n",
        "date": "21.10.2020 15:55:12",
        "repo": "reactstrap/reactstrap",
        "type": "test",
        "sim_msg": "test(ui_container_plugin): improving existent tests descripition",
        "sim_diff": "diff --git a/src/base/ui_container_plugin/ui_container_plugin.test.js b/src/base/ui_container_plugin/ui_container_plugin.test.js @@ -22,7 +22,7 @@ describe('UI Container Plugin', () => {\n})\n})\n- test('enables', () => {\n+ test('enables the plugin', () => {\nconst plugin = new UIContainerPlugin({})\nconst spy = jest.spyOn(plugin, 'bindEvents')\nconst show = jest.fn()\n@@ -36,7 +36,7 @@ describe('UI Container Plugin', () => {\nexpect(plugin.enabled).toBeTruthy()\n})\n- test('disables', () => {\n+ test('disables the plugin', () => {\nconst plugin = new UIContainerPlugin({})\nconst spy = jest.spyOn(plugin, 'stopListening')\nconst hide = jest.fn()\n@@ -49,7 +49,7 @@ describe('UI Container Plugin', () => {\nexpect(plugin.enabled).toBeFalsy()\n})\n- test('destroys', () => {\n+ test('destroys the plugin', () => {\nconst plugin = new UIContainerPlugin({})\nconst spy = jest.spyOn(plugin, 'destroy')\n"
    },
    {
        "msg": "test: fix repeatClick path",
        "diff": "diff --git a/test/unit/tests/directives/repeatClick.test.js b/test/unit/tests/directives/repeatClick.test.js import { mount } from '@vue/test-utils'\n-import repeatClick from '../../../../src/directives/new-repeat-click'\n+import repeatClick from '../../../../src/directives/repeatClick'\ndescribe('directives: repeat-click', () => {\ntest('should called repeat click callback when emitted mousedown event ', (done) => {\nconst handleRepeatClick = jest.fn()\n",
        "date": "08.08.2020 20:58:14",
        "repo": "hug-sun/element3",
        "type": "test",
        "sim_msg": "test: add tests for v-for",
        "sim_diff": "diff --git a/test/mp/runtime/directives/on.spec.js b/test/mp/runtime/directives/on.spec.js @@ -613,4 +613,35 @@ describe('Directive v-on', () => {\npage._triggerEvent(undefined, 'touch-start')\nexpect(onTouchStart.calls.count()).toBe(1)\n})\n+\n+ it('should work with components in v-for', () => {\n+ const { page } = createPage({\n+ template: '<div>' +\n+ '<div v-for=\"i in 3\">' +\n+ '<test :v=\"i\"></test>' +\n+ '</div>' +\n+ '</div>',\n+ components: {\n+ test: {\n+ template: '<div @click=\"foo(v-1)\"></div>',\n+ props: ['v'],\n+ methods: { foo: spy }\n+ }\n+ }\n+ })\n+\n+ page._triggerEvent({ dataset: { hid: '0', cid: '0v0-0' }}, 'tap')\n+ expect(spy.calls.count()).toBe(1)\n+\n+ page._triggerEvent({ dataset: { hid: '0', cid: '0v0-1' }}, 'tap')\n+ expect(spy.calls.count()).toBe(2)\n+\n+ page._triggerEvent({ dataset: { hid: '0', cid: '0v0-2' }}, 'tap')\n+ expect(spy.calls.count()).toBe(3)\n+\n+ const args = spy.calls.allArgs()\n+ args.forEach((arg, i) => {\n+ expect(arg[0]).toBe(i)\n+ })\n+ })\n})\n"
    },
    {
        "msg": "test: update description for test package",
        "diff": "diff --git a/tests/package.json b/tests/package.json {\n\"name\": \"tests\",\n\"version\": \"0.0.0\",\n- \"description\": \"Candela unit tests\",\n+ \"description\": \"Candela unit/coverage/image tests\",\n\"scripts\": {\n\"build:unit\": \"webpack\",\n\"build:coverage\": \"webpack --config webpack-coverage.config.js\",\n",
        "date": "06.06.2017 17:41:25",
        "repo": "kitware/candela",
        "type": "test",
        "sim_msg": "test: Improves test coverage\nWell, it's more like this makes jest not report coverage of files we\ndon't care about, i.e. transpiled files from linked packages.",
        "sim_diff": "diff --git a/package.json b/package.json \"webpack\": \"^3.8.1\"\n},\n\"jest\": {\n- \"setupTestFrameworkScriptFile\": \"./test-setup.js\"\n+ \"setupTestFrameworkScriptFile\": \"./test-setup.js\",\n+ \"coveragePathIgnorePatterns\": [\n+ \"/node_modules/\",\n+ \"<rootDir>/packages/.*/lib/\"\n+ ]\n}\n}\n"
    },
    {
        "msg": "test(stack): refactor use screen",
        "diff": "diff --git a/packages/chakra-ui-core/src/CStack/tests/CStack.test.js b/packages/chakra-ui-core/src/CStack/tests/CStack.test.js import { CStack, CBox, CHeading, CText } from '../..'\n-import { render, getTagName } from '@/tests/test-utils'\n+import { render, getTagName, screen } from '@/tests/test-utils'\nconst renderComponent = (props) => {\nconst inlineAttrs = (props && props.inlineAttrs) || ''\n@@ -27,22 +27,22 @@ it('should render correctly', () => {\n})\nit('should default to vertical stack', () => {\n- const { getByTestId } = renderComponent()\n- const stack = getByTestId('stack')\n+ renderComponent()\n+ const stack = screen.getByTestId('stack')\nexpect(stack).toHaveStyle('display: flex')\nexpect(stack).toHaveStyle('flex-direction: column')\n})\nit('should not space last child', () => {\n- const { getByTestId } = renderComponent()\n- const stack = getByTestId('stack')\n+ renderComponent()\n+ const stack = screen.getByTestId('stack')\nexpect(stack).not.toHaveStyle('margin-bottom: 0.5rem')\n})\nit('should should stack horizontally if isInline', () => {\nconst inlineAttrs = 'is-inline'\n- const { getByTestId } = renderComponent({ inlineAttrs })\n- const stack = getByTestId('stack')\n+ renderComponent({ inlineAttrs })\n+ const stack = screen.getByTestId('stack')\nexpect(stack).toHaveStyle('display: flex')\nexpect(stack).toHaveStyle('flex-direction: row')\n})\n@@ -58,8 +58,8 @@ it.each`\n'should render CStack with element as $as',\n({ as }) => {\nconst inlineAttrs = `as=\"${as}\"`\n- const { asFragment, getByTestId } = renderComponent({ inlineAttrs })\n- const stack = getByTestId('stack')\n+ const { asFragment } = renderComponent({ inlineAttrs })\n+ const stack = screen.getByTestId('stack')\nexpect(getTagName(stack)).toEqual(as)\nexpect(asFragment()).toMatchSnapshot()\n}\n",
        "date": "12.07.2020 16:49:35",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "sim_msg": "chore: Restore missing comma",
        "sim_diff": "diff --git a/src/technologies/c.json b/src/technologies/c.json 66\n],\n\"description\": \"Chakra UI is a simple, modular and accessible component library that gives you the building blocks you need to build your React applications.\",\n- \"dom\": \"html[style*='chakra-ui-color-mode'], body.chakra-ui-dark, body.chakra-ui-light, div.chakra-portal\"\n+ \"dom\": \"html[style*='chakra-ui-color-mode'], body.chakra-ui-dark, body.chakra-ui-light, div.chakra-portal\",\n\"icon\": \"Chakra UI.svg\",\n\"implies\": \"React\",\n\"oss\": true,\n"
    },
    {
        "msg": "test(button): remove unnecessary mock",
        "diff": "diff --git a/packages/chakra-ui-core/src/CButton/tests/CButton.test.js b/packages/chakra-ui-core/src/CButton/tests/CButton.test.js import { CButton } from '../..'\nimport { render, defaultProviders } from '@/tests/test-utils'\n-// mocks\n-jest.mock('breadstick/dist/components/Alert/styles.css', () => ({})) // jest tries to import styles and fails...\n-\nconst renderComponent = (props) => {\nconst base = {\ncomponents: {\n",
        "date": "19.04.2020 20:20:50",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "sim_msg": "test(Root): add MoleculeBadgeCounter tests",
        "sim_diff": "diff --git a/test/molecule/badgeCounter/index.js b/test/molecule/badgeCounter/index.js * */\n/* eslint react/jsx-no-undef:0 */\n+/* eslint no-undef:0 */\n-// import React from 'react'\n-// import {render} from '@testing-library/react'\n+import React from 'react'\n+import ReactDOM from 'react-dom'\nimport chai, {expect} from 'chai'\nimport chaiDOM from 'chai-dom'\n+import {render} from '@testing-library/react'\nchai.use(chaiDOM)\n+const setupBuilder = Component => props => {\n+ const container = document.createElement('div')\n+ container.setAttribute('id', 'test-container')\n+ const utils = render(<Component {...props} />, {\n+ container: document.body.appendChild(container)\n+ })\n+ return utils\n+}\n+\ndescribe('molecule/badgeCounter', () => {\n- it.skip('Render', () => {\n+ const Component = MoleculeBadgeCounter\n+ const setup = setupBuilder(Component)\n+\n+ it('should render without crashing', () => {\n+ // Given\n+ const props = {}\n+\n+ // When\n+ const component = <Component {...props} />\n+\n+ // Then\n+ const div = document.createElement('div')\n+ ReactDOM.render(component, div)\n+ ReactDOM.unmountComponentAtNode(div)\n+ })\n+\n+ it('should NOT render null', () => {\n+ // Given\n+ const props = {}\n+\n+ // When\n+ const {container} = setup(props)\n+\n+ // Then\n+ expect(container.innerHTML).to.be.a('string')\n+ expect(container.innerHTML).to.not.have.lengthOf(0)\n+ })\n+\n+ it.skip('example', () => {\n// Example TO BE DELETED!!!!\n- // const {getByRole} = render(<AtomButton>HOLA</AtomButton>)\n+\n+ // Given\n+ // const props = {}\n+\n+ // When\n+ // const {getByRole} = setup(props)\n+\n+ // Then\n// expect(getByRole('button')).to.have.text('HOLA')\nexpect(true).to.be.eql(false)\n})\n"
    },
    {
        "msg": "test(stack): update snapshots",
        "diff": "diff --git a/packages/chakra-ui-core/src/CStack/tests/__snapshots__/CStack.test.js.snap b/packages/chakra-ui-core/src/CStack/tests/__snapshots__/CStack.test.js.snap exports[`should render CStack with element as nav 1`] = `\n<DocumentFragment>\n<nav\n- class=\"css-j7qwjs css-k008qs css-1lp2as9\"\n+ class=\"css-j7qwjs css-0\"\ndata-chakra-component=\"CStack\"\ndata-testid=\"stack\"\n>\n<div\n- class=\"css-1ipbp6k\"\n+ class=\"css-dtyjrz\"\ndata-chakra-component=\"CBox\"\ndata-testid=\"stack-child-1\"\n>\n@@ -26,7 +26,6 @@ exports[`should render CStack with element as nav 1`] = `\nThe future can be even brighter but a goal without a plan is just a wish\n</p>\n</div>\n-\n<div\nclass=\"css-1ipbp6k\"\ndata-chakra-component=\"CBox\"\n@@ -53,12 +52,12 @@ exports[`should render CStack with element as nav 1`] = `\nexports[`should render CStack with element as section 1`] = `\n<DocumentFragment>\n<section\n- class=\"css-j7qwjs css-k008qs css-1lp2as9\"\n+ class=\"css-j7qwjs css-0\"\ndata-chakra-component=\"CStack\"\ndata-testid=\"stack\"\n>\n<div\n- class=\"css-1ipbp6k\"\n+ class=\"css-dtyjrz\"\ndata-chakra-component=\"CBox\"\ndata-testid=\"stack-child-1\"\n>\n@@ -76,7 +75,6 @@ exports[`should render CStack with element as section 1`] = `\nThe future can be even brighter but a goal without a plan is just a wish\n</p>\n</div>\n-\n<div\nclass=\"css-1ipbp6k\"\ndata-chakra-component=\"CBox\"\n@@ -103,12 +101,12 @@ exports[`should render CStack with element as section 1`] = `\nexports[`should render correctly 1`] = `\n<DocumentFragment>\n<div\n- class=\"css-j7qwjs css-k008qs css-1lp2as9\"\n+ class=\"css-j7qwjs css-0\"\ndata-chakra-component=\"CStack\"\ndata-testid=\"stack\"\n>\n<div\n- class=\"css-1ipbp6k\"\n+ class=\"css-dtyjrz\"\ndata-chakra-component=\"CBox\"\ndata-testid=\"stack-child-1\"\n>\n@@ -126,7 +124,6 @@ exports[`should render correctly 1`] = `\nThe future can be even brighter but a goal without a plan is just a wish\n</p>\n</div>\n-\n<div\nclass=\"css-1ipbp6k\"\ndata-chakra-component=\"CBox\"\n@@ -153,29 +150,36 @@ exports[`should render correctly 1`] = `\nexports[`should should stack native html elements 1`] = `\n<DocumentFragment>\n<div\n- class=\"css-j7qwjs css-k008qs css-1lp2as9\"\n+ class=\"css-j7qwjs css-0\"\ndata-chakra-component=\"CStack\"\ndata-testid=\"stack\"\n>\n<p\n- class=\"css-18iq2bq\"\n+ class=\"css-16ec2e8\"\ndata-chakra-component=\"CText\"\n>\nThe future can be even brighter but a goal without a plan is just a wish\n</p>\n-\n+ <div\n+ class=\"css-cet0rr\"\n+ data-chakra-component=\"CBox\"\n+ >\n<p\ndata-testid=\"stacked-p\"\n>\nI am a happy paragraph element\n</p>\n-\n+ </div>\n+ <div\n+ class=\"css-cet0rr\"\n+ data-chakra-component=\"CBox\"\n+ >\n<h3\ndata-testid=\"stacked-h3\"\n>\nI am a jolly heading element\n</h3>\n-\n+ </div>\n<p\nclass=\"css-18iq2bq\"\ndata-chakra-component=\"CText\"\n",
        "date": "26.09.2020 21:50:33",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "sim_msg": "chore: Bumped state list test",
        "sim_diff": "diff --git a/src/__tests__/components/pages/data/__snapshots__/state-list.js.snap b/src/__tests__/components/pages/data/__snapshots__/state-list.js.snap @@ -17,17 +17,6 @@ exports[`Components : Pages : Data : State data renders correctly 1`] = `\nAlabama\n</a>\n</h3>\n- <p\n- className=\"state-grade stateGrade\"\n- >\n- <span>\n- Current\n- <a\n- href=\"/about-data#data-quality-grade\"\n- >\n- data grade\n- </a>\n- </h3>\n<p\nclassName=\"state-grade stateGrade\"\n>\n@@ -47,14 +36,6 @@ exports[`Components : Pages : Data : State data renders correctly 1`] = `\nwidth=\"28px\"\n/>\n</p>\n- :\n- </span>\n- <img\n- alt=\"Grade B\"\n- src=\"test-file-stub\"\n- width=\"28px\"\n- />\n- </p>\n</div>\n<div>\n<table\n@@ -219,7 +200,6 @@ exports[`Components : Pages : Data : State data renders correctly 1`] = `\nclassName=\"detail-text detailText\"\n>\nLast updated: Fri Apr 17 2020 12:00 am ET\n-\n</div>\n</div>\n<ul\n"
    },
    {
        "msg": "test: update error message for travis chrome",
        "diff": "diff --git a/test/examples/webpack.test.js b/test/examples/webpack.test.js @@ -68,8 +68,9 @@ describe('webpack app', function() {\n// This has become necessary because Travis switched their Chrome stable\n// version _down_ from 76 to 62, which handles this test case differently.\n+ // 2020-05-06: Travis Chrome 62 is now returning the original message.\nvar version = parseInt(window.navigator.userAgent.match(new RegExp('^.*HeadlessChrome/([0-9]*).*$'))[1]);\n- var message = version > 62 ? 'webpack test error' : 'Script error.';\n+ var message = version >= 62 ? 'webpack test error' : 'Script error.';\nexpect(body.data.body.trace.exception.message).to.eql(message);\n",
        "date": "06.05.2020 17:14:16",
        "repo": "rollbar/rollbar.js",
        "type": "test",
        "sim_msg": "test: check Firefox 100+ compat",
        "sim_diff": "diff --git a/test/unit/extractVersion.js b/test/unit/extractVersion.js @@ -90,6 +90,12 @@ describe('extractVersion', () => {\nexpect(extractVersion(ua, expr, 1)).to.equal(44);\n});\n+ it('matches Firefox 100+', () => {\n+ ua = 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:44.0) Gecko/20100101 ' +\n+ 'Firefox/100.0';\n+ expect(extractVersion(ua, expr, 1)).to.equal(100);\n+ });\n+\nit('does not match Chrome', () => {\nua = 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like ' +\n'Gecko) Chrome/45.0.2454.101 Safari/537.36';\n"
    },
    {
        "msg": "test(Dropdown): fix multiple search text assertion",
        "diff": "diff --git a/test/specs/modules/Dropdown/Dropdown-test.js b/test/specs/modules/Dropdown/Dropdown-test.js @@ -973,7 +973,7 @@ describe('Dropdown', () => {\n{ value: 0, text: 'foo' },\n{ value: 1, text: 'foe' },\n]\n- wrapperMount(<Dropdown options={searchOptions} selection />)\n+ wrapperMount(<Dropdown options={searchOptions} search selection />)\n// open and simulate search\nwrapper\n@@ -984,13 +984,10 @@ describe('Dropdown', () => {\ndomEvent.keyDown(document, { key: 'ArrowDown' })\ndomEvent.keyDown(document, { key: 'Enter' })\n- const item = wrapper\n- .find('.selected')\n-\n// text updated\nwrapper\n.find('div.text')\n- .should.contain.text(item.text())\n+ .should.contain.text('foe')\n})\nit('displays if value is 0', () => {\nconst text = faker.hacker.noun()\n",
        "date": "15.10.2017 22:49:20",
        "repo": "semantic-org/semantic-ui-react",
        "type": "test",
        "sim_msg": "test(Select): add test case of highlightKey changed",
        "sim_diff": "diff --git a/test/select/index-spec.js b/test/select/index-spec.js @@ -1115,6 +1115,26 @@ describe('AutoComplete', () => {\n// assert(wrapper.find('input').prop('value') === 'a');\n});\n+ it('should remove highlightKey while value changed', () => {\n+ const dataSource = [\n+ { label: 'xxx', value: 'a' },\n+ { label: 'empty', value: 'b' },\n+ ];\n+ wrapper.setProps({\n+ dataSource,\n+ visible: true,\n+ autoHighlightFirstItem: false\n+ });\n+ wrapper.find('input').simulate('keydown', { keyCode: 40 });\n+ wrapper.find('input').simulate('keydown', { keyCode: 40 });\n+ wrapper.find('input').simulate('keydown', { keyCode: 13 });\n+ wrapper.update();\n+ assert( document.querySelectorAll('.next-menu-item.next-focused').length === 1 );\n+ wrapper.find('input').simulate('change', { target: { value: '' } });\n+ wrapper.update();\n+ assert( document.querySelectorAll('.next-menu-item.next-focused').length === 0 );\n+ });\n+\n// simulate keydown not work in test event\n// it('should input keyCode space with popupContent', () => {\n// wrapper.setProps({\n"
    },
    {
        "msg": "test: fix rtc config url",
        "diff": "diff --git a/test/common.js b/test/common.js @@ -4,7 +4,7 @@ var thunky = require('thunky')\nexports.getConfig = thunky(function (cb) {\n// Includes TURN -- needed for tests to pass on Sauce Labs\n// https://github.com/feross/simple-peer/issues/41\n- get.concat('https://instant.io/rtcConfig', function (err, res, data) {\n+ get.concat('https://instant.io/_rtcConfig', function (err, res, data) {\nif (err) return cb(err)\ndata = data.toString()\ntry {\n",
        "date": "05.01.2017 01:17:17",
        "repo": "feross/simple-peer",
        "type": "test",
        "sim_msg": "fix(#122): fix issue where socks proxy failed when host with a port(except 80)",
        "sim_diff": "diff --git a/lib/config.js b/lib/config.js @@ -449,6 +449,13 @@ exports.extend = function extend(newConf) {\nagent.on('free', preventThrowOutError);\nvar createSocket = agent.createSocket;\nagent.createSocket = function(req, options) {\n+ var host = options && options.host;\n+ if (typeof host === 'string') {\n+ var index = host.indexOf(':');\n+ if (index !== -1) {\n+ options.host = host.substring(0, index);\n+ }\n+ }\nvar client = createSocket.apply(this, arguments);\nclient.on('error', function(err) {\nreq.emit('error', err);\n"
    },
    {
        "msg": "test: add test for direct call to onerror",
        "diff": "diff --git a/test/browser.rollbar.test.js b/test/browser.rollbar.test.js @@ -595,6 +595,52 @@ describe('log', function() {\ndone();\n})\n});\n+\n+// Test direct call to onerror, as used in verification of browser js install.\n+describe('onerror', function() {\n+ before(function (done) {\n+ window.server = sinon.createFakeServer();\n+ done();\n+ });\n+\n+ after(function () {\n+ window.server.restore();\n+ });\n+\n+ function stubResponse(server) {\n+ server.respondWith('POST', 'api/1/item',\n+ [\n+ 200,\n+ { 'Content-Type': 'application/json' },\n+ '{\"err\": 0, \"result\":{ \"uuid\": \"d4c7acef55bf4c9ea95e4fe9428a8287\"}}'\n+ ]\n+ );\n+ }\n+\n+ it('should send message when calling onerror directly', function(done) {\n+ var server = window.server;\n+ stubResponse(server);\n+ server.requests.length = 0;\n+\n+ var options = {\n+ accessToken: 'POST_CLIENT_ITEM_TOKEN',\n+ captureUncaught: true\n+ };\n+ new Rollbar(options);\n+\n+ window.onerror(\"TestRollbarError: testing window.onerror\", window.location.href);\n+\n+ server.respond();\n+\n+ var body = JSON.parse(server.requests[0].requestBody);\n+\n+ expect(body.access_token).to.eql('POST_CLIENT_ITEM_TOKEN');\n+ expect(body.data.body.trace.exception.message).to.eql('testing window.onerror');\n+\n+ done();\n+ })\n+});\n+\ndescribe('captureEvent', function() {\nit('should handle missing/default type and level', function(done) {\nvar options = {};\n",
        "date": "31.07.2019 13:22:48",
        "repo": "rollbar/rollbar.js",
        "type": "test",
        "sim_msg": "test(plugins): test all public plugins methods",
        "sim_diff": "diff --git a/client/src/remote/__tests__/PluginsSpec.js b/client/src/remote/__tests__/PluginsSpec.js import Plugins from '../Plugins';\n-const stub = sinon.stub;\n-const noop = () => {};\n+describe('plugins', function() {\n+ describe('#loadAll', function() {\n-describe('Plugins', function() {\n-\n- let plugins;\n+ let headStub;\nbeforeEach(function() {\n- delete window.plugins;\n+ headStub = sinon.stub(document.head, 'appendChild')\n+ .callsFake(({ onload }) => onload && onload());\n+ });\n- plugins = new Plugins({\n- plugins: {\n- getAll() {\n- return {\n+\n+ afterEach(function() {\n+ headStub && headStub.restore();\n+ });\n+\n+\n+ it('should load all plugins', async function() {\n+ // given\n+ const mockPlugins = {\nfoo: {\nname: 'foo',\n- script: 'foo.js'\n+ script: 'bar',\n+ style: 'baz'\n},\nbar: {\nname: 'bar',\n- script: 'bar.js'\n- },\n- baz: {\n- name: 'baz',\n- style: 'baz.css'\n+ script: 'foo',\n+ style: 'baz'\n}\n};\n+\n+ const plugins = new Plugins({\n+ plugins: {\n+ getAll() {\n+ return mockPlugins;\n}\n}\n});\n- stub(plugins, '_loadStylePlugin').callsFake(noop);\n- stub(plugins, '_loadScriptPlugin').callsFake(({ name }) => {\n- if (!window.plugins) {\n- window.plugins = [];\n- }\n+ // when\n+ await plugins.loadAll();\n- window.plugins.push({\n- type: name,\n- plugin: {\n- __init__: [ name ],\n- [ name ]: [ 'type', noop ]\n- }\n- });\n+ // then\n+ const calls = headStub.getCalls();\n+\n+ expect(calls).to.have.lengthOf(4);\n+\n+ const args = calls.reduce((args, call) => [ ...args, ...call.args ], []);\n- Promise.resolve();\n+ expect(args.filter(({ tagName }) => tagName === 'LINK')).to.have.lengthOf(2);\n+ expect(args.filter(({ tagName }) => tagName === 'SCRIPT')).to.have.lengthOf(2);\n});\n+\n});\n+\n+ describe('#get', function() {\n+\nafterEach(function() {\ndelete window.plugins;\n});\n- it('should load plugins', async function() {\n-\n- // when\n- await plugins.loadAll();\n+ it('should get registered plugin', function() {\n+ // given\n+ const mockPlugin = {};\n+ const mockType = 'foo';\n- // then\n- expect(plugins._getAll()).to.eql([{\n- type: 'foo',\n- plugin: {\n- __init__: [ 'foo' ],\n- foo: [ 'type', noop ]\n- }\n- }, {\n- type: 'bar',\n- plugin: {\n- __init__: [ 'bar' ],\n- bar: [ 'type', noop ]\n+ window.plugins = [\n+ {\n+ type: mockType,\n+ plugin: mockPlugin\n}\n- }]);\n- });\n+ ];\n+ const plugins = new Plugins();\n- it('should get loaded plugins (type=foo)', async function() {\n-\n- // given\n- await plugins.loadAll();\n+ // when\n+ const registeredPlugins = plugins.get(mockType);\n// then\n- expect(plugins.get('foo')).to.eql([{\n- __init__: [ 'foo' ],\n- foo: [ 'type', noop ]\n- }]);\n+ expect(registeredPlugins).to.be.an('Array').and.have.lengthOf(1);\n+ expect(registeredPlugins[0]).to.be.eql(mockPlugin);\n+ });\n+\n});\n});\n\\ No newline at end of file\n"
    },
    {
        "msg": "test: set unit test concurrency to 1",
        "diff": "diff --git a/package.json b/package.json \"examples\": \"cd packages/examples && npm run serve\",\n\"build:test\": \"lerna run build:test\",\n\"build:coverage\": \"COVERAGE=1 npm run build:test\",\n- \"test:unit\": \"lerna run test --ignore @candela/examples\",\n+ \"test:unit\": \"lerna run test --ignore @candela/examples --concurrency 1\",\n\"test:image\": \"cd packages/examples && npm test\",\n\"test:coverage\": \"COVERAGE=1 npm run test:unit\",\n\"coverage:report\": \"http-server build/coverage/html -p ${PORT-3000}\",\n",
        "date": "20.06.2018 16:43:31",
        "repo": "kitware/candela",
        "type": "test",
        "sim_msg": "test: clean up one off unit test",
        "sim_diff": "diff --git a/package.json b/package.json \"test\": \"npm run test:lint && npm run test:packages\",\n\"test:lint\": \"ts-standard --fix && prettier --write --loglevel=warn --no-semi --single-quote --trailing-comma none \\\"./**/*.js\\\"\",\n\"test:lint:ci\": \"ts-standard\",\n- \"test:package:unit\": \"cd packages/http-json-body-parser && npm run test:unit\",\n+ \"test:unit\": \"cd packages/$PACKAGE && npm run test:unit\",\n\"test:packages\": \"npm run test:packages:typings && npm run test:packages:unit\",\n\"test:packages:unit\": \"lerna exec --bail --concurrency 5 npm run test:unit\",\n\"test:packages:typings\": \"lerna exec --bail --concurrency 5 tsd\",\n"
    },
    {
        "msg": "test: add tests specifically for isLuhnValid",
        "diff": "diff --git a/test/validators.js b/test/validators.js @@ -4931,6 +4931,34 @@ describe('Validators', () => {\n});\n});\n+ it('should validate luhn numbers', () => {\n+ test({\n+ validator: 'isLuhnValid',\n+ valid: [\n+ '0',\n+ '5421',\n+ '01234567897',\n+ '0123456789012345678906',\n+ '0123456789012345678901234567891',\n+ '123456789012345678906',\n+ '375556917985515',\n+ '36050234196908',\n+ '4716461583322103',\n+ '4716-2210-5188-5662',\n+ '4929 7226 5379 7141',\n+ ],\n+ invalid: [\n+ '',\n+ '1',\n+ '5422',\n+ 'foo',\n+ 'prefix6234917882863855',\n+ '623491788middle2863855',\n+ '6234917882863855suffix',\n+ ],\n+ });\n+ });\n+\nit('should validate credit cards', () => {\ntest({\nvalidator: 'isCreditCard',\n",
        "date": "23.05.2022 16:12:38",
        "repo": "validatorjs/validator.js",
        "type": "test",
        "sim_msg": "refactor: parse query",
        "sim_diff": "diff --git a/lib/util/index.js b/lib/util/index.js @@ -829,7 +829,7 @@ exports.getQueryValue = function(value) {\nvar KV_RE = /^([^:=&]+):([^=&]*)$/;\nfunction parseInlineJSON(text, isValue) {\n- if (/\\s/.test(text) || (!isValue && (/\\\\|\\//.test(text) && !/^&/.test(text)))) {\n+ if (/\\s/.test(text) || (!isValue && /\\\\|\\//.test(text) && text[0] !== '&')) {\nreturn;\n}\nif (KV_RE.test(text)) {\n@@ -837,7 +837,7 @@ function parseInlineJSON(text, isValue) {\ndata[RegExp.$1] = RegExp.$2;\nreturn data;\n}\n- return parseQuery(text);\n+ return parseQuery(text, null, null, text[0] === '&');\n}\nfunction replaceCrLf(char) {\n@@ -1049,7 +1049,7 @@ function parseHeaders(headers, rawNames) {\nexports.parseHeaders = parseHeaders;\n-var QUERY_PARAM_RE = /^[\\w$-]+=/;\n+var QUERY_PARAM_RE = /^[^\\/&=]+=/;\nfunction parseRuleJson(rules, callback) {\nif (!Array.isArray(rules)) {\nrules = [rules];\n"
    },
    {
        "msg": "test(icon-button): refactor use screen",
        "diff": "diff --git a/packages/chakra-ui-core/src/CIconButton/tests/CIconButton.test.js b/packages/chakra-ui-core/src/CIconButton/tests/CIconButton.test.js import CIconButton from '..'\n-import { render } from '@/tests/test-utils'\n+import { render, screen } from '@/tests/test-utils'\nconst renderComponent = (props) => {\nconst inlineAttrs = (props && props.inlineAttrs) || ''\n@@ -19,15 +19,15 @@ it('should render correctly', () => {\nit('should display spinner and hide the icon', () => {\nconst inlineAttrs = 'isLoading'\n- const { container, getByTestId } = renderComponent({ inlineAttrs })\n+ const { container } = renderComponent({ inlineAttrs })\n- const button = getByTestId('btn')\n+ const button = screen.getByTestId('btn')\nexpect(button).toHaveAttribute('disabled')\nexpect(button).toHaveAttribute('aria-disabled', 'true')\n// TODO: find a way to easily grab the spinner element\n- // Maybe? expect(getByTestId('Spinner')).toBeInTheDocument()\n+ // Maybe? expect(screen.getByTestId('Spinner')).toBeInTheDocument()\nexpect(button).toHaveStyle('opacity: 0.4')\nexpect(container.querySelector('button > div')).toBeInTheDocument()\n})\n",
        "date": "07.07.2020 00:59:33",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "sim_msg": "test(Root): add atom/button tests",
        "sim_diff": "diff --git a/test/atom/button/index.js b/test/atom/button/index.js * */\n/* eslint react/jsx-no-undef:0 */\n+/* eslint no-undef:0 */\n-// import React from 'react'\n-// import {render} from '@testing-library/react'\n+import React from 'react'\n+import ReactDOM from 'react-dom'\nimport chai, {expect} from 'chai'\nimport chaiDOM from 'chai-dom'\n+import {render} from '@testing-library/react'\nchai.use(chaiDOM)\n+const setupBuilder = Component => props => {\n+ const container = document.createElement('div')\n+ container.setAttribute('id', 'test-container')\n+ const utils = render(<Component {...props} />, {\n+ container: document.body.appendChild(container)\n+ })\n+ return utils\n+}\n+\ndescribe('atom/button', () => {\n- it.skip('Render', () => {\n+ const Component = AtomButton\n+ const setup = setupBuilder(Component)\n+\n+ it('should render without crashing', () => {\n+ // Given\n+ const props = {}\n+\n+ // When\n+ const component = <Component {...props} />\n+\n+ // Then\n+ const div = document.createElement('div')\n+ ReactDOM.render(component, div)\n+ ReactDOM.unmountComponentAtNode(div)\n+ })\n+\n+ it('should NOT render null', () => {\n+ // Given\n+ const props = {}\n+\n+ // When\n+ const {container} = setup(props)\n+\n+ // Then\n+ expect(container.innerHTML).to.be.a('string')\n+ expect(container.innerHTML).to.not.have.lengthOf(0)\n+ })\n+\n+ it.skip('example', () => {\n// Example TO BE DELETED!!!!\n- // const {getByRole} = render(<AtomButton>HOLA</AtomButton>)\n+\n+ // Given\n+ // const props = {}\n+\n+ // When\n+ // const {getByRole} = setup(props)\n+\n+ // Then\n// expect(getByRole('button')).to.have.text('HOLA')\nexpect(true).to.be.eql(false)\n})\n"
    },
    {
        "msg": "test(accordion): add shift+tab tests for accordion",
        "diff": "diff --git a/packages/chakra-ui-core/src/CAccordion/tests/CAccordion.test.js b/packages/chakra-ui-core/src/CAccordion/tests/CAccordion.test.js @@ -144,7 +144,6 @@ it('has the proper aria attributes', () => {\nexpect(panel).toHaveAttribute('aria-labelledby')\n})\n-// test that tab moves focus to the next focusable element\nit('tab moves focus to the next focusable element', async () => {\nrenderComponent({\ntemplate: `\n@@ -178,7 +177,43 @@ it('tab moves focus to the next focusable element', async () => {\nexpect(last).toHaveFocus()\n})\n-// test that aria-contols for button is same as id for panel\n+\n+it('shift+tab moves focus to the previous focusable element', async () => {\n+ renderComponent({\n+ template: `\n+ <CAccordion>\n+ <CAccordionItem>\n+ <CAccordionHeader>First section</CAccordionHeader>\n+ <CAccordionPanel>Panel 1</CAccordionPanel>\n+ </CAccordionItem>\n+ <CAccordionItem>\n+ <CAccordionHeader>Second section</CAccordionHeader>\n+ <CAccordionPanel>Panel 2</CAccordionPanel>\n+ </CAccordionItem>\n+ <CAccordionItem>\n+ <CAccordionHeader>Last section</CAccordionHeader>\n+ <CAccordionPanel>Panel 3</CAccordionPanel>\n+ </CAccordionItem>\n+ </CAccordion>`\n+ })\n+\n+ const first = screen.getByText('First section')\n+ const second = screen.getByText('Second section')\n+ const last = screen.getByText('Last section')\n+\n+ await userEvent.tab()\n+ expect(first).toHaveFocus()\n+\n+ await userEvent.tab()\n+ expect(second).toHaveFocus()\n+\n+ await userEvent.tab()\n+ expect(last).toHaveFocus()\n+\n+ await userEvent.tab({shift: true}) // shift+tab\n+ expect(second).toHaveFocus()\n+})\n+\nit('aria-contols for button is same as id for panel', () => {\nrenderComponent({\ntemplate: `\n@@ -195,7 +230,6 @@ it('aria-contols for button is same as id for panel', () => {\nexpect(button.getAttribute('aria-controls')).toEqual(panel.getAttribute('id'))\n})\n-// test that aria-expanded is true/false when accordion is open/closed\nit('aria-expanded is true/false when accordion is open/closed', () => {\nrenderComponent({\ntemplate: `\n@@ -215,7 +249,6 @@ it('aria-expanded is true/false when accordion is open/closed', () => {\nexpect(button).toHaveAttribute('aria-expanded', 'true')\n})\n-// test that panel has role=region and aria-labelledby\nit('panel has role=region and aria-labelledby', () => {\nrenderComponent({\ntemplate: `\n@@ -231,29 +264,3 @@ it('panel has role=region and aria-labelledby', () => {\nexpect(panel).toHaveAttribute('aria-labelledby')\nexpect(panel).toHaveAttribute('role', 'region')\n})\n\\ No newline at end of file\n-\n-// eslint-disable-next-line no-undef\n-xit('arrow up & down moves focus to next/previous accordion', async () => {\n- renderComponent({\n- template: `\n- <CAccordion>\n- <CAccordionItem>\n- <CAccordionHeader>Section 1 title</CAccordionHeader>\n- <CAccordionPanel>Panel 1</CAccordionPanel>\n- </CAccordionItem>\n- <CAccordionItem>\n- <CAccordionHeader>Section 2 title</CAccordionHeader>\n- <CAccordionPanel>Panel 2</CAccordionPanel>\n- </CAccordionItem>\n- </CAccordion>`\n- })\n-\n- const first = screen.getByText('Section 1 title')\n- const second = screen.getByText('Section 2 title')\n-\n- await fireEvent.keyDown(first, { key: 'ArrowDown', keyCode: 40 })\n- expect(second).toHaveFocus()\n-\n- await fireEvent.keyDown(second, { key: 'ArrowUp', keyCode: 38 })\n- expect(first).toHaveFocus()\n-})\n",
        "date": "04.07.2020 15:53:35",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "sim_msg": "feat(shared-hocs): adding aria attr. support - setting focus on render",
        "sim_diff": "diff --git a/packages/hocs/withFocusTrap.jsx b/packages/hocs/withFocusTrap.jsx /* eslint-disable jsx-a11y/no-noninteractive-tabindex */\n-import React, { useRef } from 'react'\n+import React, { useRef, useEffect } from 'react'\n+import PropTypes from 'prop-types'\n// Returns an array of focusable elements in the order they are found in c\n-const getFocusable = c =>\n- c.querySelectorAll('button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])')\n+const selector =\n+ 'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"]), audio[controls], video[controls], [contenteditable]:not([contenteditable=false]'\n+const getFocusable = c => c.querySelectorAll(selector)\nconst withFocusTrap = Component => {\nconst WithFocusTrap = props => {\nconst componentRef = useRef(null)\n+ useEffect(() => {\n+ // setting the focus to the first focusable element\n+ getFocusable(componentRef.current).focus()\n+ })\n+\n+ // To force VoiceOver to treat the dialog as a modal we need to set the aria-label attribute.\n+ // Also the modal-dialog html needs to be inserted into the page using JS after the page loads (this isn't a real problem)\n+ const { ariaLabel, ...rest } = props\n+\nconst handleFocus = isEnd => () => {\nconst focusableElements = getFocusable(componentRef.current)\nfocusableElements[isEnd ? 0 : focusableElements.length - 1].focus()\n}\nreturn (\n- <div>\n+ <div role=\"dialog\" aria-modal=\"true\" aria-label={ariaLabel}>\n<div onFocus={handleFocus(false)} tabIndex={0} />\n- <Component {...props} ref={componentRef} />\n+ <Component {...rest} ref={componentRef} />\n<div onFocus={handleFocus(true)} tabIndex={0} />\n</div>\n)\n}\n+ WithFocusTrap.propTypes = {\n+ ariaLabel: PropTypes.string.isRequired,\n+ }\n+\nreturn WithFocusTrap\n}\n"
    },
    {
        "msg": "test: Fixing test case",
        "diff": "diff --git a/packages/wmr/test/fixtures/prerender-data/index.js b/packages/wmr/test/fixtures/prerender-data/index.js export function prerender() {\n- return { html: '<h1>it works</h1>', links: ['/'], data: { hello: 'world' } };\n+ return { html: '<h1>it works</h1><script type=\"isodata\"></script>', links: ['/'], data: { hello: 'world' } };\n}\n",
        "date": "15.11.2021 10:04:51",
        "repo": "preactjs/wmr",
        "type": "test",
        "sim_msg": "chore: Add more notes to LTC page",
        "sim_diff": "diff --git a/src/templates/state/long-term-care/index.js b/src/templates/state/long-term-care/index.js @@ -52,6 +52,30 @@ export default ({ pageContext, path, data }) => {\n__html: marked(data.notes.data.Public_Notes),\n}}\n/>\n+ {data.notes.data.generated_facility_notes_source_links_text && (\n+ <>\n+ <h3>Source links</h3>\n+ <div\n+ dangerouslySetInnerHTML={{\n+ __html: marked(\n+ data.notes.data.generated_facility_notes_source_links_text,\n+ ),\n+ }}\n+ />\n+ </>\n+ )}\n+ {data.notes.data.Generated_facility_notes_full_text && (\n+ <>\n+ <h3>Facility notes</h3>\n+ <div\n+ dangerouslySetInnerHTML={{\n+ __html: marked(\n+ data.notes.data.Generated_facility_notes_full_text,\n+ ),\n+ }}\n+ />\n+ </>\n+ )}\n</>\n) : (\n<LongTermCareAlertNote>\n@@ -205,6 +229,8 @@ export const query = graphql`\n) {\ntable\ndata {\n+ Generated_facility_notes_full_text\n+ generated_facility_notes_source_links_text\nPublic_Notes\nAlert_Message\n}\n"
    },
    {
        "msg": "test: fix typo in before_install",
        "diff": "diff --git a/.travis.yml b/.travis.yml @@ -9,8 +9,7 @@ node_js:\n- '8'\n- '6'\nbefore_install:\n- - if [ \"$TRAVIS_BRANCH\" = \"master\" ]; then\n- echo \"//registry.npmjs.org/:_authToken=\\${NPM_TOKEN}\" > .npmrc; fi\n+ - if [ \"$TRAVIS_BRANCH\" == \"master\" ]; then echo \"//registry.npmjs.org/:_authToken=\\${NPM_TOKEN}\" > .npmrc; fi\nafter_success:\n- npm run semantic-release\nbranches:\n",
        "date": "06.12.2017 19:13:06",
        "repo": "remy/nodemon",
        "type": "test",
        "sim_msg": "chore(monorepo): fix how travis creates npm login",
        "sim_diff": "diff --git a/.travis.yml b/.travis.yml @@ -30,7 +30,7 @@ after_success:\nnpm run coverage:upload;\nfi\nif [[ $TRAVIS_BRANCH == 'master' || $TRAVIS_BRANCH == 'next' ]] && [[ $TRAVIS_PULL_REQUEST == 'false' ]]; then\n- echo \"//registry.npmjs.org/:_authToken=\\${NPM_TOKEN}\" > .npmrc\n+ printf \"//registry.npmjs.org/:_authToken=$NPM_TOKEN\\n\" > ~/.npmrc\nnpm run release -- --publish\nfi\nbranches:\n"
    },
    {
        "msg": "test(badge): remove unnecessary mock",
        "diff": "diff --git a/packages/chakra-ui-core/src/CBadge/tests/CBadge.test.js b/packages/chakra-ui-core/src/CBadge/tests/CBadge.test.js import { CBadge, CStack } from '../..'\nimport { render } from '@/tests/test-utils'\n-// mocks\n-jest.mock('breadstick/dist/components/Alert/styles.css', () => ({})) // jest tries to import styles and fails...\n-\nconst renderComponent = (props) => {\nconst base = {\ncomponents: { CBadge, CStack },\n",
        "date": "19.04.2020 20:19:01",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "sim_msg": "docs: reference main Jest unit docs",
        "sim_diff": "diff --git a/README.md b/README.md @@ -163,26 +163,9 @@ Components must use the [styled-components](https://www.styled-components.com/)\nEvery component and helper in this style guide must have a corresponding file containing component tests. All tests are written using, and run by, the [Jest](https://facebook.github.io/jest/) test framework, which is based on the Jasmine framework. If you haven't used Jest, you should read their documentation to get familiar.\n-### Test Files\n+### Writing Tests\n-Files containing tests for a component must end in `.test.js` and be named after the component. Files containing tests for a helper must end in `.test.js` and be named after the helper function.\n-\n-### Code Style for Tests\n-\n-- Follow the same eslint rules as for the components themselves.\n-- Jest tests are automatically file scoped. This means that your test file does not need a `describe` block in it. You _may_ add multiple `describe` blocks to group related tests within the file, but you _should not_ have a file with only a single `describe` block in it. (It will not break anything, but it diminishes simplicity and readability.)\n-- Jest test functions can be defined using either `it()` or `test()`. Because it is more understandable, we will always use `test()`.\n-- `describe`, `test`, `jasmine`, and `expect` are automatic globals in all test files. You do not need to import them from anywhere.\n-- Use arrow functions for all `describe` and `test` functions.\n-- Use `expect` for assertions. See [the documentation](https://facebook.github.io/jest/docs/en/expect.html#content).\n-\n-### Rendering Components In Tests\n-\n-To render your component in your tests, use either `react-test-renderer` or `enzyme`. `react-test-renderer` is primarily for snapshots, while `enzyme` is for whenever you need to actually interact with the component, like simulate clicking it, feed it new props and see how it changes, etc. There is a good explanation of both of them [here](https://facebook.github.io/jest/docs/en/tutorial-react.html).\n-\n-### Mocking Functions\n-\n-https://facebook.github.io/jest/docs/en/mock-function-api.html\n+Review and follow all guidelines in [Writing Jest Unit Tests](https://docs.reactioncommerce.com/reaction-docs/master/writing-jest-unit-tests)\n### Running Tests\n"
    },
    {
        "msg": "test: add a couple more regex tests for ignoredMessages",
        "diff": "diff --git a/test/predicates.test.js b/test/predicates.test.js @@ -378,6 +378,19 @@ describe('messageIsIgnored', function() {\nexpect(p.messageIsIgnored(logger)(item, settings)).to.not.be.ok();\n});\nit('false if ignoredMessages regex match', function() {\n+ var item = {\n+ level: 'critical',\n+ body: {\n+ message: {body: 'This is an ignored message'}\n+ }\n+ };\n+ var settings = {\n+ reportLevel: 'debug',\n+ ignoredMessages: ['^This is an .{7} message$']\n+ };\n+ expect(p.messageIsIgnored(logger)(item, settings)).to.not.be.ok();\n+ });\n+ it('false if ignoredMessages literal match', function() {\nvar item = {\nlevel: 'critical',\nbody: {\n@@ -390,6 +403,19 @@ describe('messageIsIgnored', function() {\n};\nexpect(p.messageIsIgnored(logger)(item, settings)).to.not.be.ok();\n});\n+ it('false if ignoredMessages more literal regex matches', function() {\n+ var item = {\n+ level: 'critical',\n+ body: {\n+ message: {body: 'Match these characters: (*+?)'}\n+ }\n+ };\n+ var settings = {\n+ reportLevel: 'debug',\n+ ignoredMessages: ['\\\\(\\\\*\\\\+\\\\?\\\\)']\n+ };\n+ expect(p.messageIsIgnored(logger)(item, settings)).to.not.be.ok();\n+ });\nit('true if both trace and body message but ignoredMessages only match body', function() {\nvar item = {\nlevel: 'critical',\n",
        "date": "28.02.2020 13:28:32",
        "repo": "rollbar/rollbar.js",
        "type": "test",
        "sim_msg": "test(log): cover setLevel static method with tests",
        "sim_diff": "diff --git a/src/components/log/log.test.js b/src/components/log/log.test.js @@ -134,5 +134,15 @@ describe('Log', () => {\nexpect(anotherLogger).toEqual(logger)\nexpect(anotherLogger.testReference).toBeTruthy()\n})\n+\n+ test('to set one Log level', () => {\n+ const logger = Log.getInstance()\n+\n+ expect(logger.level).toEqual(Log.LEVEL_INFO)\n+\n+ Log.setLevel(Log.LEVEL_WARN)\n+\n+ expect(logger.level).toEqual(Log.LEVEL_WARN)\n+ })\n})\n})\n"
    },
    {
        "msg": "test(edtiable): remove breadstick mock",
        "diff": "diff --git a/packages/chakra-ui-core/src/CEditable/tests/CEditable.test.js b/packages/chakra-ui-core/src/CEditable/tests/CEditable.test.js @@ -3,7 +3,6 @@ import { render, defaultProviders, userEvent, fireEvent } from '@/tests/test-uti\nimport { useId } from '../../utils'\n// mocks\n-jest.mock('@/packages/chakra-ui-core/src/CToast/index.js', () => {})\njest.mock('@/packages/chakra-ui-core/src/utils/generators.js')\nconst renderComponent = (props) => {\n",
        "date": "19.04.2020 21:00:22",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "sim_msg": "feat(components/hook/usePortal): first version",
        "sim_diff": "diff --git a/components/hook/usePortal/test/index.test.js b/components/hook/usePortal/test/index.test.js +/*\n+ * Remember: YOUR COMPONENT IS DEFINED GLOBALLY\n+ * */\n+\n+/* eslint react/jsx-no-undef:0 */\n+/* eslint no-undef:0 */\n+\n+import PropTypes from 'prop-types'\nimport React, {useRef} from 'react'\nimport ReactDOM from 'react-dom'\n-import chai, {expect} from 'chai'\n-import chaiDOM from 'chai-dom'\n-import sinon from 'sinon'\n+import {/** chai, **/ expect} from 'chai'\n+// import chaiDOM from 'chai-dom'\n+// import sinon from 'sinon'\n-import {fireEvent} from '@testing-library/react'\n+// import {fireEvent} from '@testing-library/react'\nimport json from '../package.json'\nimport * as pkg from '../src/index.js'\n@@ -34,6 +42,11 @@ describe(json.name, () => {\n)\n}\n+ Component.propTypes = {\n+ children: PropTypes.node,\n+ isOpen: PropTypes.bool\n+ }\n+\nconst setup = setupEnvironment(Component)\nit('library should include defined exported elements', () => {\n@@ -210,35 +223,32 @@ describe(json.name, () => {\n})\ndescribe('fire events', () => {\n- it('should fire onClose when it is triggered', () => {\n+ it.skip('should fire onClose when it is triggered', () => {\n// Given\n- const spyOnClose = sinon.spy()\n- const props = {children: 'portal-content', onClose: spyOnClose}\n-\n+ // const spyOnClose = sinon.spy()\n+ // const props = {children: 'portal-content', onClose: spyOnClose}\n// When\n- const {container, rerender, getByTestId} = setup(props)\n- rerender(<Component {...props} />)\n- const portalContainerElement = getByTestId('portal-test-container')\n- const portalContainerOriginElement = getByTestId(\n- 'portal-test-container-origin'\n- )\n- const portalContainerTargetElement = getByTestId(\n- 'portal-test-container-target'\n- )\n-\n+ // const {container, rerender, getByTestId, getByText} = setup(props)\n+ // rerender(<Component {...props} />)\n+ // const portalContainerElement = getByTestId('portal-test-container')\n+ // const portalContainerOriginElement = getByTestId(\n+ // 'portal-test-container-origin'\n+ // )\n+ // const portalContainerTargetElement = getByTestId(\n+ // 'portal-test-container-target'\n+ // )\n// Then\n- expect(portalContainerElement.innerHTML).to.be.a('string')\n- expect(portalContainerElement.innerHTML).to.not.have.lengthOf(0)\n-\n- expect(portalContainerOriginElement.innerHTML).to.be.a('string')\n- expect(portalContainerOriginElement.innerHTML).to.have.lengthOf(0)\n-\n- expect(portalContainerTargetElement.innerHTML).to.be.a('string')\n- expect(portalContainerTargetElement.innerHTML).to.not.have.lengthOf(0)\n-\n+ // expect(portalContainerElement.innerHTML).to.be.a('string')\n+ // expect(portalContainerElement.innerHTML).to.not.have.lengthOf(0)\n+ //\n+ // expect(portalContainerOriginElement.innerHTML).to.be.a('string')\n+ // expect(portalContainerOriginElement.innerHTML).to.have.lengthOf(0)\n+ //\n+ // expect(portalContainerTargetElement.innerHTML).to.be.a('string')\n+ // expect(portalContainerTargetElement.innerHTML).to.not.have.lengthOf(0)\n// And\n// When\n- fireEvent.click(getByText(props.children))\n+ // fireEvent.click(getByText(props.children))\n})\n})\n})\n"
    },
    {
        "msg": "test: use a more standard format for webpack config",
        "diff": "diff --git a/tests/webpack.config.js b/tests/webpack.config.js -// var webpack = require('webpack');\nvar candelaWebpack = require('../webpack');\n-var config = {};\n-\n-config.entry = {\n- 'tests': './tests.js'\n-};\n-\n-config.devtool = 'inline-source-map';\n-\n-config.node = {\n+module.exports = candelaWebpack({\n+ entry: {\n+ tests: './tests.js'\n+ },\n+ devtool: 'inline-source-map',\n+ node: {\nfs: 'empty'\n-};\n-\n-config.output = {\n+ },\n+ output: {\npath: 'build',\nfilename: 'tests.js'\n-};\n-config.module = {\n+ },\n+ module: {\nloaders: [\n{\ntest: /\\.css/,\n@@ -25,9 +20,5 @@ config.module = {\ninclude: /node_modules\\/nvd3/,\n},\n]\n-};\n-delete config.plugins;\n-\n-var final = candelaWebpack(config);\n-\n-module.exports = final;\n+ }\n+});\n",
        "date": "05.06.2017 14:57:01",
        "repo": "kitware/candela",
        "type": "test",
        "sim_msg": "feat(hops-build-config): add source maps to production build output",
        "sim_diff": "diff --git a/packages/build-config/configs/build.js b/packages/build-config/configs/build.js @@ -26,6 +26,7 @@ module.exports = {\nmodule: {\nrules: require('../sections/module-rules')('build')\n},\n+ devtool: 'source-map',\nplugins: [\nnew WriteFilePlugin(/^manifest\\.js?$/),\nnew WriteManifestPlugin(),\n@@ -61,9 +62,9 @@ module.exports = {\nnew webpack.LoaderOptionsPlugin({\ndebug: false,\nminimize: true,\n- sourceMap: false\n+ sourceMap: true\n}),\nnew webpack.optimize.ModuleConcatenationPlugin(),\n- new UglifyPlugin()\n+ new UglifyPlugin({ sourceMap: true })\n]\n};\n"
    },
    {
        "msg": "test(stat): remove provider",
        "diff": "diff --git a/packages/chakra-ui-core/src/CStat/tests/CStat.test.js b/packages/chakra-ui-core/src/CStat/tests/CStat.test.js import { CStat, CStatLabel, CStatNumber, CStatHelperText, CStatArrow } from '..'\n-import { render, defaultProviders } from '@/tests/test-utils'\n-import icons from '../../lib/internal-icons.js'\n+import { render } from '@/tests/test-utils'\nconst renderComponent = (props) => {\nconst base = {\ncomponents: { CStat, CStatLabel, CStatNumber, CStatHelperText, CStatArrow },\n- provide: () => defaultProviders({ $chakraIcons: { 'triangle-up': icons['triangle-up'], 'triangle-down': icons['triangle-down'] } }),\ntemplate: `\n<CStat>\n<CStatLabel>Collected Fees</CStatLabel>\n",
        "date": "19.04.2020 23:59:17",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "sim_msg": "chore: Restore missing comma",
        "sim_diff": "diff --git a/src/technologies/c.json b/src/technologies/c.json 66\n],\n\"description\": \"Chakra UI is a simple, modular and accessible component library that gives you the building blocks you need to build your React applications.\",\n- \"dom\": \"html[style*='chakra-ui-color-mode'], body.chakra-ui-dark, body.chakra-ui-light, div.chakra-portal\"\n+ \"dom\": \"html[style*='chakra-ui-color-mode'], body.chakra-ui-dark, body.chakra-ui-light, div.chakra-portal\",\n\"icon\": \"Chakra UI.svg\",\n\"implies\": \"React\",\n\"oss\": true,\n"
    },
    {
        "msg": "test: disable flaky node tests",
        "diff": "diff --git a/package.json b/package.json \"build\": \"browserify -s SimplePeer -r . | minify > simplepeer.min.js\",\n\"size\": \"npm run build && cat simplepeer.min.js | gzip | wc -c\",\n\"// test\": \"standard && npm run test-node && npm run test-browser\",\n- \"test\": \"standard && npm run test-node\",\n+ \"test\": \"standard && npm run test-browser\",\n\"test-browser\": \"airtap --coverage -- test/*.js\",\n\"test-browser-local\": \"airtap --coverage --local -- test/*.js\",\n\"test-node\": \"WRTC=wrtc tape test/*.js\",\n",
        "date": "21.04.2021 17:14:19",
        "repo": "feross/simple-peer",
        "type": "test",
        "sim_msg": "test(lint): fix linting so it actually lints all files",
        "sim_diff": "diff --git a/package.json b/package.json \"cover-client\": \"npm run test-client -- --coverage --coverage-paths \\\"lib/**/*.js\\\"\",\n\"cover-flow\": \"flow-coverage-report -t html -t text -i 'lib/**/*.js' -o coverage-flow\",\n\"deploy\": \"mastarm deploy --minify --env production\",\n- \"lint\": \"mastarm lint \\\"lib/**/*.js\\\"\",\n+ \"lint\": \"mastarm lint lib\",\n\"predeploy\": \"yarn\",\n\"prestart\": \"yarn\",\n\"start\": \"mastarm build --env dev --serve --proxy http://localhost:4000/api\",\n"
    },
    {
        "msg": "test(controls.test.js): add position testing to contro",
        "diff": "diff --git a/src/domain/controls.test.js b/src/domain/controls.test.js @@ -27,6 +27,7 @@ describe(\"Controls reducer\", () => {\n'start': 't0',\n'end': 'tn',\n'showBusy': true,\n+ 'position': [0,0]\n}\nconst action = setControls(controls);\n@@ -70,6 +71,7 @@ describe(\"Controls reducer\", () => {\n'start': null,\n'end': null,\n'showBusy': false,\n+ 'position': [0,0]\n});\ndone();\n",
        "date": "25.06.2019 10:51:23",
        "repo": "iqtlabs/crviz",
        "type": "test",
        "sim_msg": "fix: format exception",
        "sim_diff": "diff --git a/src/lib/core.js b/src/lib/core.js @@ -2545,9 +2545,9 @@ export default function (context, pluginCallButtons, plugins, lang) {\ne.stopPropagation();\nconst formatEl = util.getFormatElement(core.getSelectionNode());\n- const rangeEl = util.getRangeFormatElement(formatEl);\n+ const rangeEl = util.getRangeFormatElement(core.getSelectionNode());\nif (core.getRange().collapsed && (!formatEl || formatEl === rangeEl)) {\n- core.execCommand('formatBlock', false, util.isCell(rangeEl) ? 'DIV' : 'P');\n+ core.execCommand('formatBlock', false, util.isRangeFormatElement(rangeEl) ? 'DIV' : 'P');\ncore.focus();\nreturn;\n}\n@@ -2941,9 +2941,9 @@ export default function (context, pluginCallButtons, plugins, lang) {\n}\nconst formatEl = util.getFormatElement(selectionNode);\n- const rangeEl = util.getRangeFormatElement(formatEl);\n+ const rangeEl = util.getRangeFormatElement(selectionNode);\nif (!formatEl || formatEl === rangeEl) {\n- core.execCommand('formatBlock', false, util.isCell(rangeEl) ? 'DIV' : 'P');\n+ core.execCommand('formatBlock', false, util.isRangeFormatElement(rangeEl) ? 'DIV' : 'P');\ncore.focus();\nselectionNode = core.getSelectionNode();\n}\n"
    },
    {
        "msg": "test(PopperContent): remove debug statement\ntest(PopperContent): remove debug statement",
        "diff": "diff --git a/src/__tests__/PopperContent.spec.js b/src/__tests__/PopperContent.spec.js @@ -117,8 +117,6 @@ describe('PopperContent', () => {\nit('should have x-placement of auto by default', () => {\nconst wrapper = mount(<PopperContent target=\"target\" isOpen container=\"inline\">Yo!</PopperContent>);\n- console.log(wrapper.debug());\n-\nexpect(wrapper.find('div[x-placement=\"auto\"]').exists()).toBe(true);\n});\n",
        "date": "18.10.2019 18:40:11",
        "repo": "reactstrap/reactstrap",
        "type": "test",
        "sim_msg": "test(fa): fix fa test",
        "sim_diff": "diff --git a/src/Fa/tests/Fa.test.js b/src/Fa/tests/Fa.test.js @@ -21,7 +21,7 @@ describe('<Fa />', () => {\nconst renderedComponent = renderComponent({\ntrash: true,\n});\n- expect(renderedComponent.find('FaUnstyled').length).toEqual(1);\n+ expect(renderedComponent.find('Fa').length).toEqual(1);\n});\nit('should have class .fa-trash', () => {\nconst renderedComponent = renderComponentUsingTheme({\n"
    },
    {
        "msg": "chore: add note about providing a reference in PR template\ncloses",
        "diff": "diff --git a/.github/pull_request_template.md b/.github/pull_request_template.md @@ -5,8 +5,11 @@ feat(validatorName): brief title of what has been done\n<!--- briefly describe what you have done in this PR --->\n+<!--- provide some (credible) references showing the structure of the data to be validated, if applicable --->\n+\n## Checklist\n- [ ] PR contains only changes related; no stray files, etc.\n- [ ] README updated (where applicable)\n- [ ] Tests written (where applicable)\n+- [ ] References provided in PR (where applicable)\n",
        "date": "08.02.2023 06:57:58",
        "repo": "validatorjs/validator.js",
        "type": "chore",
        "sim_msg": "chore: updates pr template",
        "sim_diff": "diff --git a/.github/PULL_REQUEST_TEMPLATE/pull_request_template.md b/.github/PULL_REQUEST_TEMPLATE/pull_request_template.md -# Description\n+## Description\n<!--\nPlease include a summary of the changes and the related issue.\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\n- [ ] This change requires a documentation update\n-# How Has This Been Tested?\n+## How Has This Been Tested?\n<!--\nPlease describe the tests that you ran to verify your changes.\n- [ ] Test A\n- [ ] Test B\n-# Checklist:\n+## Checklist:\n<!-- Please delete options that are not relevant. -->\n"
    },
    {
        "msg": "chore(demo): skip unnecessary sleep(1500) during prerendering",
        "diff": "diff --git a/examples/demo/public/index.tsx b/examples/demo/public/index.tsx @@ -7,10 +7,12 @@ import Header from './header.tsx';\nconst sleep = t => new Promise(r => setTimeout(r, t));\n+const IS_CLIENT = typeof window !== 'undefined';\n+\nconst About = lazy(() => import('./pages/about/index.js'));\n-const LazyAndLate = lazy(async () => (await sleep(1500), import('./pages/about/index.js')));\n+const LazyAndLate = lazy(async () => (IS_CLIENT && (await sleep(1500)), import('./pages/about/index.js')));\nconst CompatPage = lazy(() => import('./pages/compat.js'));\n-const ClassFields = lazy(async () => (await sleep(1500), import('./pages/class-fields.js')));\n+const ClassFields = lazy(async () => (IS_CLIENT && (await sleep(1500)), import('./pages/class-fields.js')));\nconst Files = lazy(() => import('./pages/files/index.js'));\nconst Environment = lazy(async () => (await import('./pages/environment/index.js')).Environment);\nconst JSONView = lazy(async () => (await import('./pages/json.js')).JSONView);\n",
        "date": "10.05.2021 14:33:11",
        "repo": "preactjs/wmr",
        "type": "chore",
        "sim_msg": "feat(server): add timeout action over HTTP",
        "sim_diff": "diff --git a/server/src/core/server.js b/server/src/core/server.js @@ -24,6 +24,108 @@ let brain = { }\nlet nlu = { }\nlet httpServer = { }\n+/**\n+ * Generate packages routes\n+ */\n+const generatePackagesRoutes = () => {\n+ // Dynamically expose Leon modules over HTTP\n+ endpoints.forEach((endpoint) => {\n+ fastify.route({\n+ method: endpoint.method,\n+ url: endpoint.route,\n+ async handler (request, reply) {\n+ const timeout = endpoint.timeout || 60000\n+ const [, , pkg, module, action] = endpoint.route.split('/')\n+ const handleRoute = async () => {\n+ const { params } = endpoint\n+ const entities = []\n+\n+ params.forEach((param) => {\n+ const value = request.body[param]\n+ const trimEntity = {\n+ entity: param,\n+ sourceText: value,\n+ utteranceText: value,\n+ resolution: { value }\n+ }\n+ const builtInEntity = {\n+ entity: param,\n+ resolution: { ...value }\n+ }\n+ let entity = endpoint?.entitiesType === 'trim' ? trimEntity : builtInEntity\n+\n+ if (Array.isArray(value)) {\n+ value.forEach((v) => {\n+ entity = {\n+ entity: param,\n+ resolution: { ...v }\n+ }\n+\n+ entities.push(entity)\n+ })\n+ } else {\n+ entities.push(entity)\n+ }\n+ })\n+\n+ const obj = {\n+ query: '',\n+ entities,\n+ classification: {\n+ package: pkg,\n+ module,\n+ action,\n+ confidence: 1\n+ }\n+ }\n+ const responseData = {\n+ package: pkg,\n+ module,\n+ action,\n+ execution_time: 0, // ms\n+ speeches: []\n+ }\n+\n+ try {\n+ const { speeches, executionTime } = await brain.execute(obj, { mute: true })\n+\n+ reply.send({\n+ ...responseData,\n+ entities,\n+ speeches,\n+ execution_time: executionTime,\n+ success: true\n+ })\n+ } catch (e) /* istanbul ignore next */ {\n+ log[e.type](e.obj.message)\n+ reply.statusCode = 500\n+ reply.send({\n+ ...responseData,\n+ speeches: e.speeches,\n+ execution_time: e.executionTime,\n+ error: e.obj.message,\n+ success: false\n+ })\n+ }\n+ }\n+\n+ handleRoute()\n+ setTimeout(() => {\n+ reply.statusCode = 408\n+ reply.send({\n+ package: pkg,\n+ module,\n+ action,\n+ message: 'The action has timed out',\n+ timeout,\n+ success: false\n+ })\n+ }, timeout)\n+ }\n+ })\n+ })\n+}\n+\n/**\n* Bootstrap socket\n*/\n@@ -128,86 +230,7 @@ const bootstrap = async () => {\nfastify.register(downloadsPlugin, { apiVersion })\nif (process.env.PACKAGES_OVER_HTTP === 'true') {\n- // Dynamically expose Leon modules over HTTP\n- endpoints.forEach((endpoint) => {\n- fastify.route({\n- method: endpoint.method,\n- url: endpoint.route,\n- async handler (request, reply) {\n- const [, , pkg, module, action] = endpoint.route.split('/')\n- const { params } = endpoint\n- const entities = []\n-\n- params.forEach((param) => {\n- const value = request.body[param]\n- const trimEntity = {\n- entity: param,\n- sourceText: value,\n- utteranceText: value,\n- resolution: { value }\n- }\n- const builtInEntity = {\n- entity: param,\n- resolution: { ...value }\n- }\n- let entity = endpoint?.entitiesType === 'trim' ? trimEntity : builtInEntity\n-\n- if (Array.isArray(value)) {\n- value.forEach((v) => {\n- entity = {\n- entity: param,\n- resolution: { ...v }\n- }\n-\n- entities.push(entity)\n- })\n- } else {\n- entities.push(entity)\n- }\n- })\n-\n- const obj = {\n- query: '',\n- entities,\n- classification: {\n- package: pkg,\n- module,\n- action,\n- confidence: 1\n- }\n- }\n- const responseData = {\n- package: pkg,\n- module,\n- action,\n- execution_time: 0, // ms\n- speeches: []\n- }\n-\n- try {\n- const { speeches, executionTime } = await brain.execute(obj, { mute: true })\n-\n- reply.send({\n- ...responseData,\n- entities,\n- speeches,\n- execution_time: executionTime,\n- success: true\n- })\n- } catch (e) /* istanbul ignore next */ {\n- log[e.type](e.obj.message)\n- reply.statusCode = 500\n- reply.send({\n- ...responseData,\n- speeches: e.speeches,\n- execution_time: e.executionTime,\n- error: e.obj.message,\n- success: false\n- })\n- }\n- }\n- })\n- })\n+ generatePackagesRoutes()\n}\nhttpServer = fastify.server\n"
    },
    {
        "msg": "chore: undo change to spawn code",
        "diff": "diff --git a/lib/monitor/run.js b/lib/monitor/run.js @@ -99,8 +99,6 @@ function run(options) {\nif (shouldFork) {\nvar forkArgs = cmd.args.slice(1);\nvar env = utils.merge(options.execOptions.env, process.env);\n- stdio.pop();\n- stdio.push(process.stderr);\nstdio.push('ipc');\nchild = fork(options.execOptions.script, forkArgs, {\nenv: env,\n",
        "date": "04.12.2019 16:09:33",
        "repo": "remy/nodemon",
        "type": "chore",
        "sim_msg": "fix(command-dev): extract starting a static server to a separate function",
        "sim_diff": "diff --git a/src/commands/dev/index.js b/src/commands/dev/index.js const childProcess = require('child_process')\nconst path = require('path')\nconst process = require('process')\n+const { promisify } = require('util')\nconst { flags: flagsLib } = require('@oclif/command')\nconst boxen = require('boxen')\n@@ -28,8 +29,7 @@ const SERVER_POLL_INTERVAL = 1e3\n// 20 seconds\nconst SERVER_POLL_TIMEOUT = 2e4\n-const startFrameworkServer = async function ({ settings, log, exit }) {\n- if (settings.noCmd) {\n+const startStaticServer = async ({ settings, log }) => {\nconst server = new StaticServer({\nrootPath: settings.dist,\nname: 'netlify-dev',\n@@ -39,13 +39,13 @@ const startFrameworkServer = async function ({ settings, log, exit }) {\n},\n})\n- await new Promise((resolve) => {\n- server.start(function onListening() {\n+ await promisify(server.start.bind(server))()\nlog(`\\n${NETLIFYDEVLOG} Server listening to`, settings.frameworkPort)\n- resolve()\n- })\n- })\n- return\n+}\n+\n+const startFrameworkServer = async function ({ settings, log, exit }) {\n+ if (settings.noCmd) {\n+ return await startStaticServer({ settings, log })\n}\nlog(`${NETLIFYDEVLOG} Starting Netlify Dev with ${settings.framework || 'custom config'}`)\n"
    },
    {
        "msg": "chore(webpack): update config",
        "diff": "diff --git a/html/webpack.config.js b/html/webpack.config.js @@ -42,12 +42,9 @@ module.exports = {\n},\n{\ntest: /\\.(eot|png|svg|ttf|woff)/,\n- use: {\n- loader: 'url-loader',\n- options: {\n- limit: false,\n- name: 'assets/[name].[ext]'\n- }\n+ type: 'asset',\n+ generator: {\n+ filename: 'assets/[name][ext]'\n}\n}\n]\n",
        "date": "19.07.2021 18:09:57",
        "repo": "pypy-vrc/vrcx",
        "type": "chore",
        "sim_msg": "feat(Scripts): add images and svg loaders",
        "sim_diff": "diff --git a/packages/scripts/webapp/preset/config/webpack.config.js b/packages/scripts/webapp/preset/config/webpack.config.js @@ -119,6 +119,24 @@ module.exports = ({ getUserConfig, mode }) => {\nmimetype: 'application/font-woff',\n},\n},\n+ {\n+ test: /\\.svg$/,\n+ loader: 'url-loader',\n+ options: {\n+ name: 'assets/svg/[name].[ext]',\n+ limit: 10000,\n+ mimetype: 'image/svg+xml',\n+ },\n+ },\n+ {\n+ test: /\\.(png|jpg|jpeg|gif)$/,\n+ loader: 'url-loader',\n+ options: {\n+ name: 'assets/img/[name].[ext]',\n+ limit: 10000,\n+ mimetype: 'image/png',\n+ },\n+ },\n],\n},\nplugins: [\n"
    },
    {
        "msg": "chore(docs): update components list",
        "diff": "diff --git a/packages/kiwi-core/docs/components/components.js b/packages/kiwi-core/docs/components/components.js -// Dear maintainers, please arrange components alphabetically. Thanks :)\n+/**\n+ * NOTE:\n+ *\n+ * Dear maintainers,\n+ * Components listed in this file should be listed alphabetically. Thanks :)\n+ */\nconst components = [\n'Accordion',\n",
        "date": "02.03.2020 15:42:15",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "docs: started Accordion list example",
        "sim_diff": "diff --git a/package/src/components/Accordion/v1/Accordion.md b/package/src/components/Accordion/v1/Accordion.md @@ -14,5 +14,28 @@ const props = {\n</Accordion>\n```\n+```jsx\n+const props = {\n+ className: \"address-book-option\",\n+ label: \"Susan Doe\",\n+ detail: \"2300 Buckwheat Ave, Salt Lake Sity, UT 84111 USA\",\n+ icon: null\n+};\n+\n+<div>\n+<Accordion {...props} >\n+ Content\n+</Accordion>\n+<Accordion {...props} >\n+ Content\n+</Accordion>\n+<Accordion {...props} >\n+ Content\n+</Accordion>\n+<Accordion {...props} >\n+ Content\n+</Accordion>\n+</div>\n+```\n"
    },
    {
        "msg": "chore: add email to docs\nTo prove ownership my email must be added to the docs.",
        "diff": "diff --git a/docs/lib/app.js b/docs/lib/app.js @@ -87,6 +87,7 @@ export default (locals, callback) => {\ndebug: false // Set debug to true if you want to inspect the dropdown\n});\n</script>\n+ <!-- avangate: Evan@lostonia.com -->\n</body>\n</html>`;\ncallback(null, markup);\n",
        "date": "08.11.2018 19:12:26",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "sim_msg": "docs(storybook): remove disabled story for simplicity",
        "sim_diff": "diff --git a/packages/dropdown/src/__stories__/stories.js b/packages/dropdown/src/__stories__/stories.js @@ -20,14 +20,5 @@ export default [\n}\n]\n})\n- },\n- {\n- description: \"disabled\",\n- getProps: () => ({\n- label: \"Disabled Dropdown\",\n- instructions: \"instructions for disabled dropdown\",\n- placeholder: \"placeholder for disabled dropdown\",\n- disabled: true\n- })\n}\n];\n"
    },
    {
        "msg": "chore(divider): update divider a11y",
        "diff": "diff --git a/packages/chakra-ui-core/src/CDivider/CDivider.js b/packages/chakra-ui-core/src/CDivider/CDivider.js *\n* @see Docs https://vue.chakra-ui.com/divider\n* @see Source https://github.com/chakra-ui/chakra-ui-vue/blob/master/packages/chakra-ui-core/src/CDivider/CDivider.js\n+ * @see A11y https://github.com/chakra-ui/chakra-ui-vue/blob/master/packages/chakra-ui-core/src/CDivider/accessibility.md\n*/\nimport CBox from '../CBox'\n@@ -45,7 +46,8 @@ const CDivider = {\n...forwardProps(this.$props)\n},\nattrs: {\n- 'aria-orientation': this.orientation\n+ 'aria-orientation': this.orientation,\n+ 'data-chakra-component': 'CDivider'\n}\n})\n}\n",
        "date": "16.04.2020 23:43:19",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "refactor(button): remove script setup",
        "sim_diff": "diff --git a/src/components/button/CdrButton.vue b/src/components/button/CdrButton.vue -<script setup>\n-import { useCssModule, computed, useSlots } from 'vue';\n+<script>\n+import {\n+ defineComponent, useCssModule, computed,\n+} from 'vue';\n+import mapClasses from '../../utils/mapClasses';\n+import { responsiveModifyClass, buildBooleanClass } from '../../utils/buildClass';\n+import propValidator from '../../utils/propValidator';\n-import mapClasses from '../../utils/mapClasses.js';\n-import { responsiveModifyClass, buildBooleanClass } from '../../utils/buildClass.js';\n-import propValidator from '../../utils/propValidator.js';\n-\n-const slots = useSlots();\n-const props = defineProps({\n+export default defineComponent({\n+ name: 'CdrButton',\n+ props: {\ntag: {\ntype: String,\ndefault: 'button',\n@@ -52,28 +54,43 @@ withBackground: {\ntype: Boolean,\ndefault: false,\n},\n-});\n+ },\n+ setup(props, ctx) {\nconst baseClass = 'cdr-button';\n-const style = useCssModule();\n-\n-/************************ Computed properties *************************/\n-const buttonType = computed(() => props.tag === 'button' ? props.type : null);\n+ const buttonType = computed(() => (props.tag === 'button' ? props.type : null));\nconst modifierClass = computed(() => `${baseClass}--${props.modifier}`);\nconst fullWidthClass = computed(() => !props.iconOnly && props.fullWidth\n&& buildBooleanClass(baseClass, props.fullWidth, 'full-width'));\nconst sizeClass = computed(() => (!props.iconOnly\n? responsiveModifyClass(baseClass, '', props.size)\n: `cdr-button--icon-only-${props.size}`));\n-const iconLeftClass = computed(() => slots['icon-left'] && slots.default\n+ const iconLeftClass = computed(() => ctx.slots['icon-left'] && ctx.slots.default\n&& `${baseClass}--has-icon-left`);\n-const iconRightClass = computed(() => slots['icon-right'] && slots.default\n+ const iconRightClass = computed(() => ctx.slots['icon-right'] && ctx.slots.default\n&& `${baseClass}--has-icon-right`);\nconst iconOnlyClass = computed(() => props.iconOnly && `${baseClass}--icon-only`);\nconst withBackgroundClass = computed(() => props.iconOnly\n&& props.withBackground && `${baseClass}--with-background`);\n+ return {\n+ style: useCssModule(),\n+ mapClasses,\n+ baseClass,\n+ buttonType,\n+ modifierClass,\n+ fullWidthClass,\n+ sizeClass,\n+ iconLeftClass,\n+ iconRightClass,\n+ iconOnlyClass,\n+ withBackgroundClass,\n+ };\n+ },\n+});\n+\n</script>\n+\n<template>\n<component\n:is=\"tag\"\n"
    },
    {
        "msg": "chore: add option to build fro production",
        "diff": "diff --git a/website/nuxt.config.js b/website/nuxt.config.js @@ -97,6 +97,7 @@ export default {\n},\nbabel: {\nplugins: [\n+ ['@babel/plugin-proposal-private-property-in-object', { loose: true }],\n'@babel/plugin-proposal-optional-chaining'\n]\n}\n",
        "date": "26.08.2021 03:46:03",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "chore: prepare for contributions",
        "sim_diff": "diff --git a/packages/nuxt-module/package.json b/packages/nuxt-module/package.json \"description\": \"Storefront UI Module for Nuxt.js\",\n\"repository\": \"\",\n\"private\": true,\n+ \"author\": \"Jakub Andrzejewski\",\n\"license\": \"MIT\",\n\"contributors\": [\n{\n"
    },
    {
        "msg": "chore(pycandela): version 0.4.0",
        "diff": "diff --git a/python/pycandela/setup.py b/python/pycandela/setup.py @@ -2,7 +2,7 @@ from distutils.core import setup\nsetup(\nname='pycandela',\n- version='0.3.0',\n+ version='0.4.0',\ndescription='Jupyter interface for Candela visualization components',\nauthor='Kitware, Inc.',\nauthor_email='kitware@kitware.com',\n",
        "date": "16.05.2018 15:29:38",
        "repo": "kitware/candela",
        "type": "chore",
        "sim_msg": "feat(cli): add default config",
        "sim_diff": "diff --git a/install/rctf.py b/install/rctf.py @@ -267,6 +267,11 @@ class Config(collections.OrderedDict):\n}\n+ default_config = collections.OrderedDict({\n+ 'cli.ansi' : True\n+ })\n+\n+\ndef __init__(self, config_path, *args, **kwargs):\nretval = super().__init__(*args, **kwargs)\n@@ -303,7 +308,7 @@ class Config(collections.OrderedDict):\nraise RuntimeError('Attempted to read dummy config path')\nif update_config or not check_file(self.config_path):\n- config = collections.OrderedDict()\n+ config = default_config.copy()\nif update_config:\nconfig = self.read(update_config = False)\n@@ -314,8 +319,8 @@ class Config(collections.OrderedDict):\nfor key in sorted(dotenv_config.keys()):\nvalue = dotenv_config[key]\n- if key in rCTF.config_keys:\n- config[rCTF.config_keys[key]] = str(value)\n+ if key in Config.config_keys:\n+ config[Config.config_keys[key]] = str(value)\nconfig.write()\nos.chmod(self.config_path, 0o600)\n@@ -344,7 +349,7 @@ class Config(collections.OrderedDict):\ndef _get_as_environ(self):\nenvvars = dict()\n- reverse_config_keys = {value : key for key, value in rCTF.config_keys.items()}\n+ reverse_config_keys = {value : key for key, value in Config.config_keys.items()}\nfor key, value in self.items():\nif key in reverse_config_keys:\n@@ -409,7 +414,7 @@ class rCTF:\n# merges os.environ and configuration environ\ndef get_env(self):\n- environ = self._get_config_as_environ()\n+ environ = self.get_config()._get_as_environ()\nenviron.update(os.environ.copy())\nreturn environ\n@@ -460,9 +465,7 @@ if __name__ == '__main__':\nread_config = True\nexcept PermissionError:\n# XXX: this is a dummy path. find a better way to handle\n- config = Config('', {\n- 'cli.ansi' : True\n- })\n+ config = Config(Config.default_config)\n# disable ansi color codes if necessary\n"
    },
    {
        "msg": "chore: update changesets config",
        "diff": "diff --git a/.changeset/config.json b/.changeset/config.json \"access\": \"public\",\n\"baseBranch\": \"master\",\n\"ignore\": [],\n-\n- \"changelog\": \"@changesets/cli/changelog\"\n+ \"changelog\": [\"@changesets/changelog-github\", { \"repo\": \"jaredpalmer/razzle\" }]\n}\n\\ No newline at end of file\n",
        "date": "01.03.2022 19:04:14",
        "repo": "jaredpalmer/razzle",
        "type": "chore",
        "sim_msg": "chore(ci): set conventional-changelog header config;",
        "sim_diff": "diff --git a/package.json b/package.json \"plugins\": {\n\"@release-it/conventional-changelog\": {\n\"preset\": \"angular\",\n- \"infile\": \"CHANGELOG.md\"\n+ \"infile\": \"CHANGELOG.md\",\n+ \"header\": \"# Changelog\"\n}\n},\n\"hooks\": {\n"
    },
    {
        "msg": "chore(docs): change Modal transition time for better understanding\nincreased the transition timings for better understanding of difference between modalTransition and backdropTransition\nCloses",
        "diff": "diff --git a/docs/lib/examples/ModalCustomTimeout.js b/docs/lib/examples/ModalCustomTimeout.js @@ -23,7 +23,7 @@ class ModalExample extends React.Component {\nreturn (\n<div>\n<Button color=\"danger\" onClick={this.toggle}>{this.props.buttonLabel}</Button>\n- <Modal isOpen={this.state.modal} modalTransition={{ timeout: 20 }} backdropTransition={{ timeout: 10 }}\n+ <Modal isOpen={this.state.modal} modalTransition={{ timeout: 700 }} backdropTransition={{ timeout: 1300 }}\ntoggle={this.toggle} className={this.props.className}>\n<ModalHeader toggle={this.toggle}>Modal title</ModalHeader>\n<ModalBody>\n",
        "date": "29.05.2018 22:58:44",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "sim_msg": "feat: handle modal esc key",
        "sim_diff": "diff --git a/src/components/ui/modal.js b/src/components/ui/modal.js +import {Component} from 'react'\nimport {connect} from 'zefir/utils'\n-const Modal = ({\n+class Modal extends Component {\n+ componentWillMount (props) {\n+ window.addEventListener('keydown', this.props.handleEscKey)\n+ }\n+\n+ componentWillUnmount (props) {\n+ window.removeEventListener('keydown', this.props.handleEscKey)\n+ }\n+\n+ render () {\n+ const {\ntitle, subtitle, children, name, ui, toggle, full, size, noPadding, visible\n-}) => (\n+ } = this.props\n+\n+ return ui.modal === name || visible ? (\n<div className={`\nModal ${ui.modal === name || visible ? 'is-visible' : ''}\n${full ? 'Modal--full' : ''}\n@@ -143,11 +156,14 @@ const Modal = ({\npadding-bottom: 90px;\n}\n+ .Modal--full .Modal__inner {\n+ height: 100%;\n+ }\n+\n.Modal__inner {\nborder-radius: 8px;\noverflow: hidden;\nflex: 1;\n- height: 100%;\nmax-width: 770px;\nmargin-left: 30px;\nmargin-right: 30px;\n@@ -183,10 +199,13 @@ const Modal = ({\n}\n`}</style>\n</div>\n-)\n+ ) : null\n+ }\n+}\nModal.init = ({\nname,\n+ router: {history: {push}},\nstores: {ui},\nservices: {ui: {toggleModal}},\ntoggle,\n@@ -196,6 +215,11 @@ Modal.init = ({\nname,\nui,\ntoggle: toggle || (() => toggleModal(name)),\n+ handleEscKey: (e) => {\n+ if (e.keyCode === 27 && name === 'socket-details') {\n+ push('/sockets')\n+ }\n+ },\n...rest\n}\n}\n"
    },
    {
        "msg": "chore: 86 - Add Docker build to Travis\ncloses - added docker build instructions to travis config.",
        "diff": "diff --git a/.travis.yml b/.travis.yml +sudo: required\n+\n+services:\n+ - docker\n+\nlanguage: node_js\nnode_js:\n- '8'\n@@ -14,3 +19,5 @@ script:\n- npm install --no-optional\n- npm run test\n- npm run build\n+- docker build -t crviz -f Dockerfile .\n+- docker build -t crviz-gh -f Dockerfile.gh .\n\\ No newline at end of file\n",
        "date": "26.06.2018 10:03:25",
        "repo": "iqtlabs/crviz",
        "type": "chore",
        "sim_msg": "ci: use default osx_image in .travis.yml",
        "sim_diff": "diff --git a/.travis.yml b/.travis.yml -sudo: required\n-dist: trusty\n-group: travis_latest\n-\n-services:\n- - docker\n-\nlanguage: node_js\nos:\n- linux\n- osx\n-osx_image: xcode8.3\n+#osx_image: xcode11.6\nnode_js:\n- \"10\"\n@@ -61,7 +54,7 @@ before_install:\n- npm install -g npm\n- npm --version\n-install: travis_wait 40 npm install\n+install: npm install\nbefore_script:\n- COMMIT_LOG=`git log -1 --format='%ci %H %s'`\n"
    },
    {
        "msg": "chore(test): fix browser config",
        "diff": "diff --git a/karma.conf.babel.js b/karma.conf.babel.js @@ -29,7 +29,7 @@ const formatError = (msg) => {\nexport default (karmaConfig) => {\nkarmaConfig.set({\nbasePath: process.cwd(),\n- browsers: ['ChromeHeadless'],\n+ browsers: ['puppeteer'],\nclient: {\nmocha: {\nreporter: 'html', // change Karma's debug.html to mocha web reporter\n@@ -47,6 +47,8 @@ export default (karmaConfig) => {\npuppeteer: {\nbase: 'ChromeHeadless',\nflags: [\n+ '--disable-setuid-sandbox',\n+ '--no-sandbox',\n// Avoid \"Maximum call stack size exceeded\" errors on CircleCI\n'--stack-trace-limit 50000',\n],\n",
        "date": "29.10.2017 16:57:17",
        "repo": "semantic-org/semantic-ui-react",
        "type": "chore",
        "sim_msg": "build: fix chrome headless on CI",
        "sim_diff": "diff --git a/test/unit/karma.cover.config.js b/test/unit/karma.cover.config.js @@ -4,7 +4,13 @@ process.env.CHROME_BIN = require('puppeteer').executablePath()\nmodule.exports = function (config) {\nconst options = Object.assign(base, {\n- browsers: ['ChromeHeadless'],\n+ browsers: ['ChromeHeadlessCI'],\n+ customLaunchers: {\n+ 'ChromeHeadlessCI': {\n+ base: 'ChromeHeadless',\n+ flags: ['--no-sandbox']\n+ }\n+ },\nreporters: ['mocha', 'coverage'],\ncoverageReporter: {\nreporters: [\n"
    },
    {
        "msg": "chore(switch): cleared jest cache and spy works now",
        "diff": "diff --git a/packages/kiwi-core/src/Switch/tests/switch.test.js b/packages/kiwi-core/src/Switch/tests/switch.test.js @@ -32,12 +32,11 @@ it('should switch', async () => {\n})\nit('should emit a change event', async () => {\n- const events = []\n- const eventsHandler = jest.fn(evt => events.push(evt.type))\n+ const spy = jest.fn()\nconst { getByTestId } = renderComponent(\n{\nmethods: {\n- handleChange: eventsHandler\n+ handleChange: spy\n},\ntemplate: `<Toggle data-testid=\"label\" @change=\"handleChange\" /> `\n}\n@@ -45,5 +44,6 @@ it('should emit a change event', async () => {\nconst label = getByTestId('label')\nuserEvent.click(label)\n- expect(events).toEqual(['change'])\n+\n+ expect(spy).toHaveBeenCalledTimes(1)\n})\n",
        "date": "01.03.2020 03:12:13",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "test(switch): add onchange callback to tests using checked prop",
        "sim_diff": "diff --git a/src/__experimental__/components/switch/switch.spec.js b/src/__experimental__/components/switch/switch.spec.js @@ -61,12 +61,12 @@ describe(\"Switch\", () => {\ndescribe(\"controlled behaviour\", () => {\nit(\"passes checked value to the CheckableInput\", () => {\n- const wrapper = render({ checked: true }, mount);\n+ const wrapper = render({ checked: true, onChange: jest.fn() }, mount);\nexpect(wrapper.find(CheckableInput).prop(\"checked\")).toBe(true);\n});\nit(\"reacts properly to checked prop change\", () => {\n- const wrapper = render({ checked: true }, mount);\n+ const wrapper = render({ checked: true, onChange: jest.fn() }, mount);\nexpect(wrapper.find(CheckableInput).prop(\"checked\")).toBe(true);\nact(() => {\nwrapper.setProps({ checked: false });\n@@ -75,7 +75,7 @@ describe(\"Switch\", () => {\nexpect(wrapper.find(CheckableInput).prop(\"checked\")).toBe(false);\n});\n- it(\"passess event to the provided onChange prop when change is triggered\", () => {\n+ it(\"passes event to the provided onChange prop when change is triggered\", () => {\nconst onChangeMock = jest.fn();\nconst event = {\ntarget: {\n@@ -115,12 +115,12 @@ describe(\"Switch\", () => {\ndescribe(\"default translation\", () => {\nit(\"has default translation for on\", () => {\n- const wrapper = render({ checked: true }, mount);\n+ const wrapper = render({ checked: true, onChange: jest.fn() }, mount);\nexpect(getLabel(wrapper)).toBe(\"ON\");\n});\nit(\"has default translation for off\", () => {\n- const wrapper = render({ checked: false }, mount);\n+ const wrapper = render({ checked: false, onChange: jest.fn() }, mount);\nexpect(getLabel(wrapper)).toBe(\"OFF\");\n});\n});\n@@ -131,12 +131,12 @@ describe(\"Switch\", () => {\n});\nit(\"can use i18n for on\", () => {\n- const wrapper = render({ checked: true }, mount);\n+ const wrapper = render({ checked: true, onChange: jest.fn() }, mount);\nexpect(getLabel(wrapper)).toBe(\"SUR\");\n});\nit(\"can use i18n for off\", () => {\n- const wrapper = render({ checked: false }, mount);\n+ const wrapper = render({ checked: false, onChange: jest.fn() }, mount);\nexpect(getLabel(wrapper)).toBe(\"DE\");\n});\n});\n"
    },
    {
        "msg": "chore(package): remove changelog deploy scripts",
        "diff": "diff --git a/package.json b/package.json \"build:docs-toc\": \"doctoc ./.github/CONTRIBUTING.md --github --maxlevel 4\",\n\"build:docs-cname\": \"echo react.semantic-ui.com > docs/build/CNAME\",\n\"build:changelog\": \"github_changelog_generator --no-issues --no-unreleased --release-branch master --since-tag $(git describe --abbrev=0 --tags $(git rev-parse HEAD~400))\",\n- \"deploy:changelog\": \"git add CHANGELOG.md && git commit -m 'docs(changelog): update changelog [ci skip]' && git push\",\n\"predeploy:docs\": \"cross-env NODE_ENV=production yarn build:docs && yarn build:docs-cname\",\n\"deploy:docs\": \"gh-pages -d docs/build -m 'deploy docs [ci skip]'\",\n- \"postdeploy:docs\": \"yarn build:changelog && yarn deploy:changelog\",\n\"lint\": \"cross-env NODE_ENV=production eslint .\",\n\"lint:fix\": \"yarn lint --fix\",\n\"prerelease\": \"yarn lint && yarn tsd:lint && yarn tsd:test && yarn test && cross-env NODE_ENV=production yarn build\",\n",
        "date": "25.03.2018 10:21:17",
        "repo": "semantic-org/semantic-ui-react",
        "type": "chore",
        "sim_msg": "docs: create brach on rlease",
        "sim_diff": "diff --git a/package.json b/package.json \"release:major\": \"changelog -M && git add CHANGELOG.md && git commit -m 'updated CHANGELOG.md' && npm version major --preid=next -m 'Release v%s' && npm run git:push:tags\",\n\"release:minor\": \"changelog -m && git add CHANGELOG.md && git commit -m 'updated CHANGELOG.md' && npm version minor --preid=next -m 'Release v%s' && npm run git:push:tags\",\n\"release:patch\": \"changelog -p && git add CHANGELOG.md && git commit -m 'updated CHANGELOG.md' && npm version patch --preid=next -m 'Release v%s' && npm run git:push:tags\",\n- \"git:push:tags\": \"git push origin && git push origin --tags\"\n+ \"git:push:tags\": \"npm run versionBranch && git push origin && git push origin --tags\",\n+ \"versionBranch\": \"git switch -c $npm_package_version && git checkout -\"\n},\n\"husky\": {\n\"hooks\": {\n"
    },
    {
        "msg": "chore(release): 6.0.0",
        "diff": "diff --git a/package.json b/package.json {\n\"name\": \"@nuxtjs/firebase\",\n- \"version\": \"5.2.0\",\n+ \"version\": \"6.0.0\",\n\"description\": \"Intergrate Firebase into your Nuxt project.\",\n\"keywords\": [\n\"firebase\",\n",
        "date": "07.06.2020 21:08:34",
        "repo": "nuxt-community/firebase-module",
        "type": "chore",
        "sim_msg": "feat: v3.7.7",
        "sim_diff": "diff --git a/package.json b/package.json {\n\"name\": \"nei\",\n\"description\": \"builder for nei platform\",\n- \"version\": \"3.7.6\",\n+ \"version\": \"3.7.7\",\n\"license\": \"MIT\",\n\"keywords\": [\n\"nei\",\n"
    },
    {
        "msg": "chore(search-input): Only show public methods",
        "diff": "diff --git a/app/components/search-input.js b/app/components/search-input.js @@ -51,7 +51,8 @@ export default Component.extend({\n'hierarchy.lvl1',\n'hierarchy.lvl2'\n],\n- tagFilters: [`version:${projectVersion}`]\n+ tagFilters: [`version:${projectVersion}`],\n+ facetFilters: ['access:public']\n};\nconst searchObj = {\n",
        "date": "27.01.2018 14:32:10",
        "repo": "ember-learn/ember-api-docs",
        "type": "chore",
        "sim_msg": "fix(Search): export default filter",
        "sim_diff": "diff --git a/components/Search/index.js b/components/Search/index.js @@ -19,7 +19,7 @@ const styles = {\n})\n}\n-const DEFAULT_FILTER = {key: 'template', value: 'front', not: true}\n+export const DEFAULT_FILTER = {key: 'template', value: 'front', not: true}\nclass Search extends Component {\nconstructor (props, ...args) {\n"
    },
    {
        "msg": "chore(issueTemplate): update demo link",
        "diff": "diff --git a/ISSUE_TEMPLATE.md b/ISSUE_TEMPLATE.md - components: `name`\n- reactstrap version `#x.x.x`\n-- import method `umd/csj/es` (if umd, are you using the \"full\" version (only for v5+)?)\n+- import method `umd/csj/es` <!-- (if umd, are you using the \"full\" version (only for v5+)?) -->\n- react version `#x.x.x`\n- bootstrap version `#x.x.x`\n@@ -29,9 +29,8 @@ paste error message with stacktrack here\n### Code\n<!--\n-Fork a link (for the corresponding version) and update it to demonstrate your issue.\n- - v4 (with react 15): issue http://codepen.io/eddywashere/pen/ZOjmkm\n- - v5 (with react 16): issue https://codepen.io/TheSharpieOne/pen/GMMPEZ\n+Fork the link and update it to demonstrate your issue.\n+https://stackblitz.com/edit/reactstrap?file=Example.js\nand/or add the code which causes the issue directly here\n-->\n",
        "date": "04.05.2018 12:07:08",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "sim_msg": "fix: update unpkg file for react-router-dom-v5-compat",
        "sim_diff": "diff --git a/packages/react-router-dom-v5-compat/package.json b/packages/react-router-dom-v5-compat/package.json \"author\": \"Remix Software <hello@remix.run>\",\n\"sideEffects\": false,\n\"main\": \"./dist/main.js\",\n- \"unpkg\": \"./dist/umd/react-router.production.min.js\",\n+ \"unpkg\": \"./dist/umd/react-router-dom-v5-compat.production.min.js\",\n\"module\": \"./dist/index.js\",\n\"types\": \"./dist/index.d.ts\",\n\"dependencies\": {\n"
    },
    {
        "msg": "chore(xhr_wrapper): add comment\nchore(xhr_wrapper): add comment",
        "diff": "diff --git a/src/common/api/utils/xhr_wrapper.js b/src/common/api/utils/xhr_wrapper.js @@ -53,6 +53,7 @@ const requestWrapper = (\n*/\nasync function parseJSON (res: Response): Object {\nlet json: Object\n+ // status response field in return object\ntry {\njson = await res.json()\n} catch (e) {\n",
        "date": "06.09.2017 12:19:47",
        "repo": "metnew/suicrux",
        "type": "chore",
        "sim_msg": "fix: don't send up custom headers on all requests from sendJson",
        "sim_diff": "diff --git a/packages/frontend/src/tmp_fetch_send_json.js b/packages/frontend/src/tmp_fetch_send_json.js @@ -5,15 +5,12 @@ let fetch = (typeof window === 'undefined' || window.name === 'nodejs') ? requir\nconst createError = require('http-errors');\n-const { CUSTOM_REQUEST_HEADERS } = require('./utils/constants');\n-\nmodule.exports = async function sendJson(method, url, json) {\nconst response = await fetch(url, {\nmethod: method,\nbody: method !== 'GET' ? JSON.stringify(json) : undefined,\nheaders: {\n'Content-type': 'application/json; charset=utf-8',\n- ...CUSTOM_REQUEST_HEADERS,\n}\n});\nif (!response.ok) {\n"
    },
    {
        "msg": "chore: bump package version",
        "diff": "diff --git a/packages/chakra-ui-core/CHANGELOG.md b/packages/chakra-ui-core/CHANGELOG.md # Change Log\n+## 0.6.3\n+\n+### Patch Changes\n+\n+- fix: includes missing style props for border-radius and flex-grow style declarations\"\n+\n## 0.6.2\n### Patch Changes\n",
        "date": "15.09.2020 20:20:31",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "chore: Restore missing comma",
        "sim_diff": "diff --git a/src/technologies/c.json b/src/technologies/c.json 66\n],\n\"description\": \"Chakra UI is a simple, modular and accessible component library that gives you the building blocks you need to build your React applications.\",\n- \"dom\": \"html[style*='chakra-ui-color-mode'], body.chakra-ui-dark, body.chakra-ui-light, div.chakra-portal\"\n+ \"dom\": \"html[style*='chakra-ui-color-mode'], body.chakra-ui-dark, body.chakra-ui-light, div.chakra-portal\",\n\"icon\": \"Chakra UI.svg\",\n\"implies\": \"React\",\n\"oss\": true,\n"
    },
    {
        "msg": "chore: update oliver\n[skip ci]",
        "diff": "diff --git a/.github/oliver.yml b/.github/oliver.yml # Number of days the issue was closed in before the bot should reply.\n# If the issue was closed in more days than this, the bot won't reply.\n# Use `daysClosedIn: false` to *always* reply.\n-daysClosedIn: false\n+daysClosedIn: 100\n# Labels to look for on issues the bot can reply to\nlabels:\n",
        "date": "01.02.2018 18:58:26",
        "repo": "remy/nodemon",
        "type": "chore",
        "sim_msg": "chore: update to org-wide config",
        "sim_diff": "diff --git a/.github/stale.yml b/.github/stale.yml -# ProBot Stale (https://probot.github.io/apps/stale/)\n-\n-# Number of days of inactivity before an issue becomes stale\n-daysUntilStale: 180\n-\n-# Number of days of inactivity before a stale issue is closed\n-daysUntilClose: 14\n-\n-# Issues with these labels will never be considered stale\n-exemptLabels:\n- - accepted\n- - bug\n- - enhancement\n- - help wanted\n- - question\n- - security\n- - meta\n-\n-# Label to use when marking an issue as stale\n-staleLabel: stale\n-\n-# Comment to post when marking an issue as stale. Set to `false` to disable\n-markComment: >\n- This issue has been automatically marked as stale because it has not had\n- recent activity. It will be closed if no further activity occurs.\n-\n-# Comment to post when closing a stale issue. Set to `false` to disable\n-closeComment: false\n+_extends: .github\n"
    },
    {
        "msg": "chore: Add CARD_TYPES constant for Type sorts",
        "diff": "diff --git a/src/utils/Sort.js b/src/utils/Sort.js @@ -55,6 +55,22 @@ const ALL_CMCS = Array.from(Array(33).keys())\n.map((x) => (x / 2).toString())\n.concat(['1000000']);\n+const CARD_TYPES = [\n+ 'Creature',\n+ 'Planeswalker',\n+ 'Instant',\n+ 'Sorcery',\n+ 'Artifact',\n+ 'Enchantment',\n+ 'Conspiracy',\n+ 'Contraption',\n+ 'Phenomenon',\n+ 'Plane',\n+ 'Scheme',\n+ 'Vanguard',\n+ 'Land',\n+];\n+\nconst SINGLE_COLOR = ['White', 'Blue', 'Black', 'Red', 'Green'];\nconst GUILDS = ['Azorius', 'Dimir', 'Rakdos', 'Gruul', 'Selesnya', 'Orzhov', 'Izzet', 'Golgari', 'Boros', 'Simic'];\nconst SHARDS_AND_WEDGES = ['Bant', 'Esper', 'Grixis', 'Jund', 'Naya', 'Mardu', 'Temur', 'Abzan', 'Jeskai', 'Sultai'];\n",
        "date": "09.03.2021 21:19:32",
        "repo": "dekkerglen/cubecobra",
        "type": "chore",
        "sim_msg": "feat(color): add buenosAires color pallete",
        "sim_diff": "diff --git a/packages/tokens/src/global/colors.js b/packages/tokens/src/global/colors.js @@ -25,7 +25,7 @@ const milan = ['#FFF6E6', '#FFE5B3', '#FFD380', '#FFC24C'];\n/**\n* @type {Color}\n*/\n-const saoPaulo = ['#6FDCCB', '#58C2B4', '#3FA99B', '#2B9486'];\n+const saoPaulo = ['#B5DAD5', '#55A99E', '#2B9486', '#22766B'];\n/**\n* @type {Color}\n@@ -37,6 +37,11 @@ const newYork = ['#606CD2', '#3847C7', '#2D399F', '#232C7B'];\n*/\nconst paris = ['#BFA8F0', '#A07CE9', '#8051E1', '#652CDB'];\n+/**\n+ * @type {Color}\n+ */\n+const buenosAires = ['#A3C2E9', '#4686D3', '#1968C9', '#1453A0'];\n+\n/**\n* @type {Color}\n*/\n@@ -89,6 +94,7 @@ const colors = {\nsaoPaulo,\nnewYork,\nparis,\n+ buenosAires,\npositive,\nnegative,\ninformative,\n"
    },
    {
        "msg": "chore: update circular progress jsdo",
        "diff": "diff --git a/packages/chakra-ui-core/src/CCircularProgress/CCircularProgress.js b/packages/chakra-ui-core/src/CCircularProgress/CCircularProgress.js +/**\n+ * Hey! Welcome to @chakra-ui/vue CircularProgress\n+ *\n+ * The Circular Progress component is used to indicates the progress for both determinate and indeterminate processes.\n+ *\n+ * @see Docs https://vue.chakra-ui.com/circularprogress\n+ * @see Source https://github.com/chakra-ui/chakra-ui-vue/blob/master/packages/chakra-ui-core/src/CCircularProgress/CCircularProgress.js\n+ * @see A11y https://github.com/chakra-ui/chakra-ui-vue/blob/master/packages/chakra-ui-core/src/CCircularProgress/accessibility.md\n+ */\n+\n+\nimport { baseProps } from '../config/props'\nimport { forwardProps } from '../utils'\nimport { getComputedProps } from './utils/circularprogress.styles'\nimport CBox from '../CBox'\n+/**\n+ * CCircularProgress component\n+ *\n+ * The test label that displays the progress percentage in the `CCircularProgress`\n+ *\n+ * @extends CBox\n+ * @see Docs https://vue.chakra-ui.com/circularprogress\n+ */\nconst CCircularProgressLabel = {\nname: 'CCircularProgressLabel',\nprops: baseProps,\n@@ -25,6 +44,14 @@ const CCircularProgressLabel = {\n}\n}\n+/**\n+ * CCircularProgressLabel component\n+ *\n+ * Indicates the progress for both determinate and indeterminate processes.\n+ *\n+ * @extends CBox\n+ * @see Docs https://vue.chakra-ui.com/circularprogress\n+ */\nconst CCircularProgress = {\nname: 'CCircularProgress',\ninject: ['$chakraColorMode'],\n",
        "date": "16.04.2020 21:53:12",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "feat(QCircularProgress): normalize input value",
        "sim_diff": "diff --git a/ui/src/components/circular-progress/QCircularProgress.js b/ui/src/components/circular-progress/QCircularProgress.js @@ -2,6 +2,7 @@ import Vue from 'vue'\nimport SizeMixin from '../../mixins/size.js'\nimport { mergeSlotSafely } from '../../utils/slot.js'\n+import { between } from '../../utils/format.js'\nconst\nradius = 50,\n@@ -55,6 +56,10 @@ export default Vue.extend({\n},\ncomputed: {\n+ normalizedValue () {\n+ return between(this.value, this.min, this.max)\n+ },\n+\nsvgStyle () {\nreturn { transform: `rotate3d(0, 0, 1, ${this.angle - 90}deg)` }\n},\n@@ -78,7 +83,7 @@ export default Vue.extend({\n},\nstrokeDashOffset () {\n- const progress = 1 - (this.value - this.min) / (this.max - this.min)\n+ const progress = 1 - (this.normalizedValue - this.min) / (this.max - this.min)\nreturn (this.dir * progress) * circumference\n},\n@@ -91,7 +96,7 @@ export default Vue.extend({\nrole: 'progressbar',\n'aria-valuemin': this.min,\n'aria-valuemax': this.max,\n- 'aria-valuenow': this.indeterminate === true ? void 0 : this.value\n+ 'aria-valuenow': this.indeterminate === true ? void 0 : this.normalizedValue\n}\n}\n},\n@@ -165,7 +170,7 @@ export default Vue.extend({\nh('div', {\nstaticClass: 'q-circular-progress__text absolute-full row flex-center content-center',\nstyle: { fontSize: this.fontSize }\n- }, this.$scopedSlots.default !== void 0 ? this.$scopedSlots.default() : [ h('div', [ this.value ]) ])\n+ }, this.$scopedSlots.default !== void 0 ? this.$scopedSlots.default() : [ h('div', [ this.normalizedValue ]) ])\n)\nreturn h('div', {\n"
    },
    {
        "msg": "chore(docs): render spaces around \".clearfix\"",
        "diff": "diff --git a/docs/lib/Utilities/ClearfixPage.js b/docs/lib/Utilities/ClearfixPage.js @@ -12,7 +12,7 @@ export default function ClearfixPage() {\n<PageTitle title=\"Clearfix\" />\n<p>\nEasily clear <code className=\"highlighter-rouge\">float</code>s by adding\n- <code className=\"highlighter-rouge\">.clearfix</code>\n+ {' '}<code className=\"highlighter-rouge\">.clearfix</code>{' '}\n<strong>to the parent element</strong>.\nUtilizes <a href=\"http://nicolasgallagher.com/micro-clearfix-hack/\">\nthe micro clearfix</a> as popularized by Nicolas Gallagher.\n",
        "date": "04.10.2018 05:23:51",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "sim_msg": "docs: add \"edit page on github\" link\nFixes",
        "sim_diff": "diff --git a/pages/docs/[[...slug]].js b/pages/docs/[[...slug]].js @@ -121,6 +121,7 @@ export default function DocsLayout({\n\"text-wall-600\": !isSelected,\n});\nconst rootClasses = \"pl-0 text-base hover:text-green-400\";\n+\nreturn (\n<>\n<Head>\n@@ -176,6 +177,15 @@ export default function DocsLayout({\n/>\n)}\n</div>\n+ <a\n+ className=\"font-semibold rounded-xl block p-2 text-center bg-wall-100 text-black mt-8\"\n+ target=\"_blank\"\n+ href={`https://github.com/urbit/urbit.org/blob/master/content/docs/${\n+ params.slug?.join(\"/\") || \"_index\"\n+ }.md`}\n+ >\n+ Edit this page on GitHub\n+ </a>\n</ContentArea>\n</div>\n</>\n"
    },
    {
        "msg": "chore(PR): fix typos in the pull request template\nFix the typos in the pull request template",
        "diff": "diff --git a/PULL_REQUEST_TEMPLATE.md b/PULL_REQUEST_TEMPLATE.md <!---\nWhat types of changes does your code introduce? Put an `x` in all the boxes that apply:\n-->\n+\n- [ ] Bug fix <!-- (change which fixes an issue) -->\n- [ ] New feature <!-- (change which adds functionality) -->\n-- [ ] Chore <!-- (change which doesn't affect the usage of the package (such as a documentation, build process, or project setup change)) -->\n+- [ ] Chore <!-- (change which doesn't affect the usage of the package (such as documentation, build process, or project setup changes)) -->\n- [ ] Breaking change <!-- (fix or feature that would cause existing functionality to change) -->\n- [ ] There is an open issue which this change addresses\n- [ ] I have read the **[CONTRIBUTING](./CONTRIBUTING.md)** document.\n@@ -16,8 +17,7 @@ What types of changes does your code introduce? Put an `x` in all the boxes that\n<!-- Put any other information you believe would be useful to know when reviewing this PR below -->\n-\n<!---\nIf there is an issue this PR addresses, please make sure it is in the commit message per the Git Commit Guidelines above\n-**AND** put the issue number below, indicating that is closes or fixes the issue.\n+**AND** put the issue number below, indicating that it closes or fixes the issue.\n-->\n",
        "date": "31.10.2020 20:37:00",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "sim_msg": "docs: add release branch to template\n[skip ci]\nref:",
        "sim_diff": "diff --git a/.github/PULL_REQUEST_TEMPLATE.md b/.github/PULL_REQUEST_TEMPLATE.md @@ -7,7 +7,7 @@ Have any questions? Check out the contributing docs at https://github.com/ovh/ma\n| Question | Answer\n| ---------------- | ---\n-| Branch? | `master` for hotfix / `develop` for bug fixes <!-- target branch -->\n+| Branch? | `master` / `release/**` / `develop` <!-- target branch -->\n| Bug fix? | yes/no\n| New feature? | yes/no\n| Breaking change? | yes/no\n"
    },
    {
        "msg": "chore: :wrench: update fs allow",
        "diff": "diff --git a/svelte.config.js b/svelte.config.js @@ -16,6 +16,16 @@ const config = {\n// hydrate the <div id=\"svelte\"> element in src/app.html\ntarget: '#svelte',\nadapter: adapter(),\n+ vite: {\n+ // https://vitejs.dev/config/#server-fs-allow\n+ server: {\n+ fs: {\n+ // Allow serving files from one level up to the project root\n+ // posts, copy\n+ allow: ['..'],\n+ },\n+ },\n+ },\n},\n}\n",
        "date": "26.11.2021 18:11:16",
        "repo": "spences10/cheat-sheets",
        "type": "chore",
        "sim_msg": "fix: undefined extension when developing locally",
        "sim_diff": "diff --git a/src/index.js b/src/index.js @@ -59,7 +59,7 @@ const self = module.exports = { // eslint-disable-line\nconst fileSource = get(config, 'build.currentTemplates.source')\nconst destination = get(config, 'build.currentTemplates.destination.path')\n- const extension = get(config, 'build.currentTemplates.destination.extension')\n+ const extension = get(config, 'build.currentTemplates.destination.extension', 'html')\nlet finalDestination = path.join(destination, file.replace(fileSource, ''))\n"
    },
    {
        "msg": "chore(docs): Remove reference to `onExit` for CollapsePage\nShould have been written as `onExited` as `onExit` is not an event.",
        "diff": "diff --git a/docs/lib/Components/CollapsePage.js b/docs/lib/Components/CollapsePage.js @@ -44,7 +44,7 @@ export default class CollapsePage extends React.Component {\n<SectionTitle>Events</SectionTitle>\n<p>\n- Use the <code>onEnter</code>, onEntering, onEntered, onExit, onExiting and onExited props for callbacks when the\n+ Use the <code>onEnter</code>, onEntering, onEntered, onExiting and onExited props for callbacks when the\nCollapse has finished opening (entering) or closing (exiting).\n</p>\n<div className=\"docs-example\">\n",
        "date": "23.04.2018 17:03:19",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "sim_msg": "fix(collapse/toggle): \"collapsed\" class cleared when component updated\nfix(collapse/toggle): \"collapsed\" class cleared when component updated. fixes",
        "sim_diff": "diff --git a/src/components/collapse/collapse.js b/src/components/collapse/collapse.js @@ -187,6 +187,9 @@ export default {\n}\nthis.emitState()\n},\n+ updated () {\n+ this.$root.$emit(EVENT_STATE, this.id, this.show)\n+ },\nbeforeDestroy () {\nif (this.isNav && typeof document !== 'undefined') {\nwindow.removeEventListener('resize', this.handleResize, false)\n"
    },
    {
        "msg": "chore: package: v27.10.0",
        "diff": "diff --git a/packages/putout/ChangeLog b/packages/putout/ChangeLog +2022.09.20, v27.10.0\n+\n+feature:\n+- putout: *.md: typescript/remove-unused-types: off\n+\n2022.09.20, v27.9.0\nfeature:\n",
        "date": "20.09.2022 16:36:35",
        "repo": "coderaiser/putout",
        "type": "chore",
        "sim_msg": "chore(package): pins typescript version for older npm versions",
        "sim_diff": "diff --git a/package.json b/package.json \"semantic-release\": \"15.9.17\",\n\"semantic-release-monorepo\": \"^6.1.1\",\n\"tslib\": \"^1.9.3\",\n- \"typescript\": \"^3.1.6\"\n+ \"typescript\": \"3.1.6\"\n},\n\"version\": \"0.0.0-development\",\n\"repository\": {\n"
    },
    {
        "msg": "chore: -> __c -> __f",
        "diff": "diff --git a/packages/plugin-remove-iife/lib/remove-iife.js b/packages/plugin-remove-iife/lib/remove-iife.js @@ -25,7 +25,7 @@ module.exports.filter = (path) => {\n};\nmodule.exports.replace = () => ({\n- '((__args__a) => __c(__args__a))(__args__b)': '__c(__args__b)',\n+ '((__args__a) => __f(__args__a))(__args__b)': '__f(__args__b)',\n'(() => __body)()': '__body',\n'(function() {})()': (vars, path) => {\nconst {body} = path.node.callee.body;\n",
        "date": "14.09.2022 17:04:09",
        "repo": "coderaiser/putout",
        "type": "chore",
        "sim_msg": "fix(dce): use `path.replaceWith` instead of hacks",
        "sim_diff": "diff --git a/packages/dce/src/removal.js b/packages/dce/src/removal.js -const { traverse } = require(\"@webassemblyjs/ast\");\n+const t = require(\"@webassemblyjs/ast\");\n-function replaceWithEmptyFunc(func) {\n- const emptyFunc = {\n- type: \"Func\",\n- params: [],\n- result: [],\n- body: [],\n- name: null\n- };\n+const emptyFunc = t.func(null, [], [], []);\n- Object.assign(func, emptyFunc);\n-}\nmodule.exports = function removeFunc(moduleExport, ast) {\nconst exportName = moduleExport.name;\n@@ -19,10 +10,10 @@ module.exports = function removeFunc(moduleExport, ast) {\n// console.log(`Remove unused \"${exportName}\"`);\n- traverse(ast, {\n+ t.traverse(ast, {\nFunc(path) {\nif (path.node.name.value === funcName) {\n- replaceWithEmptyFunc(path.node);\n+ path.replaceWith(emptyFunc);\n// console.log('\\t> remove func');\n}\n},\n"
    },
    {
        "msg": "chore(actions/utils): update comment on Awral\nchore(actions/utils): update comment on Awral",
        "diff": "diff --git a/src/common/actions/utils/index.js b/src/common/actions/utils/index.js @@ -14,8 +14,10 @@ const beforeCheck = a => a\nconst afterCheck = a => a.data\n/**\nCreate default Awral\n- Awral is my own tool.\n- It's not well known, but it can make your work with actions even more simpler.\n+ Awral is not recommended for production usage now\n+ But it can make your work with actions even simpler.\n+ NOTE:I strongly recommend you check Awral sources!\n+ Awral is 880B gzipped!\n{@link https://github.com/Metnew/awral}\n*/\nexport const awral = Awral.of({check, beforeCheck, afterCheck})\n",
        "date": "16.10.2017 18:26:41",
        "repo": "metnew/suicrux",
        "type": "chore",
        "sim_msg": "feat(AWS Local Invocation): Randomize awsRequestId",
        "sim_diff": "diff --git a/lib/plugins/aws/invokeLocal/index.js b/lib/plugins/aws/invokeLocal/index.js @@ -15,6 +15,7 @@ const download = require('download');\nconst { ensureDir } = require('fs-extra');\nconst cachedir = require('cachedir');\nconst decompress = require('decompress');\n+const { v4: uuidv4 } = require('uuid');\nconst dirExists = require('../../../utils/fs/dirExists');\nconst fileExists = require('../../../utils/fs/fileExists');\nconst isStandalone = require('../../../utils/isStandaloneExecutable');\n@@ -834,7 +835,7 @@ class AwsInvokeLocal {\nNumber(this.serverless.service.provider.timeout) ||\n6;\nlet context = {\n- awsRequestId: 'id',\n+ awsRequestId: uuidv4(),\ninvokeid: 'id',\nlogGroupName: this.provider.naming.getLogGroupName(this.options.functionObj.name),\nlogStreamName: '2015/09/22/[HEAD]13370a84ca4ed8b77c427af260',\n"
    },
    {
        "msg": "chore: bump `sirv` version",
        "diff": "diff --git a/package.json b/package.json \"rollup-plugin-preserve-shebang\": \"^1.0.0\",\n\"sade\": \"^1.7.3\",\n\"semver\": \"^7.3.2\",\n- \"sirv\": \"^0.4.6\",\n+ \"sirv\": \"^1.0.0\",\n\"tar-stream\": \"^2.1.2\",\n\"terser\": \"^4.7.0\",\n\"tiny-glob\": \"^0.2.6\",\n",
        "date": "10.06.2020 16:54:35",
        "repo": "preactjs/wmr",
        "type": "chore",
        "sim_msg": "chore(deps): bump hexo-util to 1.8.0",
        "sim_diff": "diff --git a/package.json b/package.json \"hexo-fs\": \"^2.0.0\",\n\"hexo-i18n\": \"^1.0.0\",\n\"hexo-log\": \"^1.0.0\",\n- \"hexo-util\": \"^1.7.0\",\n+ \"hexo-util\": \"^1.8.0\",\n\"js-yaml\": \"^3.12.0\",\n\"lodash\": \"^4.17.11\",\n\"micromatch\": \"^4.0.2\",\n"
    },
    {
        "msg": "chore: point installs to yarn registry",
        "diff": "diff --git a/yarn.lock b/yarn.lock \"@fortawesome/fontawesome-common-types@^0.2.28\":\nversion \"0.2.28\"\n- resolved \"https://npm.fontawesome.com/@fortawesome/fontawesome-common-types/-/0.2.28/fontawesome-common-types-0.2.28.tgz#1091bdfe63b3f139441e9cba27aa022bff97d8b2\"\n+ resolved \"https://registry.yarnpkg.com/@fortawesome/fontawesome-common-types/-/0.2.28/fontawesome-common-types-0.2.28.tgz#1091bdfe63b3f139441e9cba27aa022bff97d8b2\"\nintegrity sha512-gtis2/5yLdfI6n0ia0jH7NJs5i/Z/8M/ZbQL6jXQhCthEOe5Cr5NcQPhgTvFxNOtURE03/ZqUcEskdn2M+QaBg==\n\"@fortawesome/free-brands-svg-icons@^5.12.0\":\nversion \"5.13.0\"\n- resolved \"https://npm.fontawesome.com/@fortawesome/free-brands-svg-icons/-/5.13.0/free-brands-svg-icons-5.13.0.tgz#e79de73ba6555055204828dca9c0691e7ce5242b\"\n+ resolved \"https://registry.yarnpkg.com/@fortawesome/free-brands-svg-icons/-/5.13.0/free-brands-svg-icons-5.13.0.tgz#e79de73ba6555055204828dca9c0691e7ce5242b\"\nintegrity sha512-/6xXiJFCMEQxqxXbL0FPJpwq5Cv6MRrjsbJEmH/t5vOvB4dILDpnY0f7zZSlA8+TG7jwlt12miF/yZpZkykucA==\ndependencies:\n\"@fortawesome/fontawesome-common-types\" \"^0.2.28\"\n\"@fortawesome/free-solid-svg-icons@^5.11.2\":\nversion \"5.13.0\"\n- resolved \"https://npm.fontawesome.com/@fortawesome/free-solid-svg-icons/-/5.13.0/free-solid-svg-icons-5.13.0.tgz#44d9118668ad96b4fd5c9434a43efc5903525739\"\n+ resolved \"https://registry.yarnpkg.com/@fortawesome/free-solid-svg-icons/-/5.13.0/free-solid-svg-icons-5.13.0.tgz#44d9118668ad96b4fd5c9434a43efc5903525739\"\nintegrity sha512-IHUgDJdomv6YtG4p3zl1B5wWf9ffinHIvebqQOmV3U+3SLw4fC+LUCCgwfETkbTtjy5/Qws2VoVf6z/ETQpFpg==\ndependencies:\n\"@fortawesome/fontawesome-common-types\" \"^0.2.28\"\n",
        "date": "22.12.2020 17:59:43",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "chore(BRAND/guidelines): resolve deps",
        "sim_diff": "diff --git a/yarn.lock b/yarn.lock minimatch \"^3.0.4\"\nstrip-json-comments \"^3.1.1\"\n-\"@fontsource/jost@^4.5.4\":\n- version \"4.5.4\"\n- resolved \"https://registry.yarnpkg.com/@fontsource/jost/-/jost-4.5.4.tgz#5388f2bf99f30191f85ca4f6f6805198548f4e2e\"\n- integrity sha512-KHTF84XsoO3MUxHjdUqwF7jsHbqyZAafceFngKURUfx2MdN795ilQ7noNW2gu7qlv2N1fwGJnAUhCTUGelkLwQ==\n-\n\"@fontsource/overpass@^4.5.4\":\nversion \"4.5.4\"\nresolved \"https://registry.yarnpkg.com/@fontsource/overpass/-/overpass-4.5.4.tgz#ab782e935c2c4a0b942682c41a2117e43a6fe66b\"\n"
    },
    {
        "msg": "chore(testing): example of testing with supplied args",
        "diff": "diff --git a/src/features/dataset-controls/DatasetSelector.test.js b/src/features/dataset-controls/DatasetSelector.test.js @@ -17,7 +17,7 @@ const empty = {name: \"None\", url:\" \"};\nconst change = (target) => {\n}\n-const event = {\"target\": {\"name\": \"ds3\", \"url\":\"test3.url\"}};\n+const event = {\"target\": {value:\"test3.url\"}};\ndescribe('DatasetSelector', () => {\nit('renders the control', () => {\nconst selector = mount(<DatasetSelector\n@@ -31,15 +31,18 @@ describe('DatasetSelector', () => {\n});\nit('changes the selection', () => {\n- const onChange = sinon.stub()\n+ const fakeOnChange = (evt) =>{\n+\n+ }\n+ const onChangeSpy = sinon.spy(fakeOnChange);\nconst selector = mount(<DatasetSelector\nclassName={style.selector}\nselected={empty}\n- onChange={onChange}\n+ onChange={onChangeSpy}\ndatasets={datasets}\n/>);\n- selector.find('select').first().simulate(\"change\", event);\n- expect(onChange.calledOnce).to.equal(true);\n+ selector.find('select').first().simulate('change', event);\n+ expect(onChangeSpy.calledWith(datasets[2])).to.equal(true);\n});\n});\n\\ No newline at end of file\n",
        "date": "10.07.2018 15:44:43",
        "repo": "iqtlabs/crviz",
        "type": "chore",
        "sim_msg": "chore: Fix link to definition if posNeg",
        "sim_diff": "diff --git a/src/pages/data/state-total-tests.js b/src/pages/data/state-total-tests.js @@ -8,19 +8,15 @@ import Layout from '~components/layout'\nconst DataStateTotalTestsPage = ({ data }) => {\nconst states = []\ndata.allCovidStateInfo.nodes.forEach(state => {\n- states.push({\n- state: <Link to={`/${state.childSlug.slug}`}>{state.name}</Link>,\n- field: (\n- <Link\n- to={`/about-data/data-definitions#definition-${state.totalTestResultsColumns}`}\n- >\n- <FieldName\n- field={\n+ const column =\nstate.totalTestResultsColumns === 'posNeg'\n? 'totalTestResults'\n: state.totalTestResultsColumns\n- }\n- />\n+ states.push({\n+ state: <Link to={`/${state.childSlug.slug}`}>{state.name}</Link>,\n+ field: (\n+ <Link to={`/about-data/data-definitions#definition-${column}`}>\n+ <FieldName field={column} />\n</Link>\n),\nunits: state.totalTestResultsUnits,\n@@ -29,8 +25,8 @@ const DataStateTotalTestsPage = ({ data }) => {\nreturn (\n<Layout\n- title=\"Data Download\"\n- path=\"/data/download\"\n+ title=\"Total test fields\"\n+ path=\"/data/state-total-tests\"\nreturnLinks={[{ link: '/data' }]}\n>\n<ContentfulContent\n"
    },
    {
        "msg": "chore(actions/utils): add comment about Awral\nchore(actions/utils): add comment about Awral",
        "diff": "diff --git a/src/common/actions/utils/index.js b/src/common/actions/utils/index.js @@ -12,5 +12,10 @@ import Awral from 'awral'\nconst check = (result: Object = {ok: false}): boolean => result.ok\nconst beforeCheck = a => a\nconst afterCheck = a => a.data\n-// Create default Awral\n+/**\n+ Create default Awral\n+ Awral is my own tool.\n+ It's not well known, but it can make your work with actions even more simpler.\n+ {@link https://github.com/Metnew/awral}\n+*/\nexport const awral = Awral.of({check, beforeCheck, afterCheck})\n",
        "date": "13.10.2017 16:52:31",
        "repo": "metnew/suicrux",
        "type": "chore",
        "sim_msg": "feat(checkbox): improves storybook",
        "sim_diff": "diff --git a/switches/checkbox/checkbox.story.js b/switches/checkbox/checkbox.story.js @@ -15,47 +15,14 @@ storiesOf('Switches', module)\n<Section>\n<Spacings.Stack>\n<Checkbox\n- isDisabled={boolean('isFirstCheckboxDisabled', false)}\n- isChecked={boolean('isFirstCheckboxChecked', true)}\n- onChange={action('onChange: first')}\n- hasError={boolean('hasFirstCheckboxError', false)}\n+ onChange={action('onChange')}\nvalue=\"foo-value\"\n+ isDisabled={boolean('isDisabled', false)}\n+ isChecked={boolean('isChecked', false)}\n+ isIndeterminate={boolean('isIndeterminate', false)}\n+ hasError={boolean('hasError', false)}\n>\n- {text('Label of primary action', 'Primary checkbox')}\n- </Checkbox>\n- <Checkbox\n- isDisabled={boolean('isSecondCheckboxDisabled', false)}\n- onChange={action('onChange: second')}\n- value=\"bar-value\"\n- hasError={boolean('hasSecondCheckboxError', false)}\n- >\n- {text('Label of second action', 'Second checkbox')}\n- </Checkbox>\n- <Checkbox\n- isDisabled={boolean('isThirdCheckboxDisabled', true)}\n- onChange={action('onChange: third')}\n- value=\"baz-value\"\n- >\n- {text('Label of third action', 'Third checkbox')}\n- </Checkbox>\n- <Checkbox\n- isDisabled={boolean('isFourthCheckboxDisabled', false)}\n- isChecked={boolean('isFourthCheckboxChecked', false)}\n- onChange={action('onChange: fourth')}\n- value=\"x-value\"\n- isIndeterminate={boolean('isFourthCheckboxIndeterminate', true)}\n- hasError={boolean('hasFourthCheckboxError', false)}\n- >\n- {text('Label of fourth action', 'Fourth checkbox')}\n- </Checkbox>\n- <Checkbox\n- isDisabled={boolean('isFifthCheckboxDisabled', false)}\n- isChecked={boolean('isFifthCheckboxChecked', true)}\n- onChange={action('onChange: fifth')}\n- value=\"x-value\"\n- hasError={boolean('hasFifthCheckboxError', true)}\n- >\n- {text('Label of fifth action', 'Fifth checkbox')}\n+ {text('Label', 'This is a label')}\n</Checkbox>\n</Spacings.Stack>\n</Section>\n"
    },
    {
        "msg": "chore: fix typo in image mark docs",
        "diff": "diff --git a/docs/docs/marks/image.md b/docs/docs/marks/image.md @@ -17,7 +17,7 @@ permalink: /docs/marks/image/index.html\n| url | {% include type t=\"URL\" %} | The URL of the image file. |\n| image | [Canvas](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas) \\| [Image](https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement/Image) | The image instance to show. This property can be used to include dynamically generated images. This property is ignored if _url_ is specified. {% include tag ver=\"5.8\" %} |\n| aspect | {% include type t=\"Boolean\" %} | A boolean flag (default `true`) indicating if the image aspect ratio should be preserved across sizes. If `true` and only one of the dimensional (*width* or *height*) properties are defined, the other dimensional property will be calculated to match the aspect ratio of the loaded image file. |\n-| smooth | {% include type t=\"Boolean\" %} | A boolean flag (default `true`) indicating if the image should be smoothed when resized. If `false`, indvidual pixels should be scaled directly rather than interpolated with smoothing. For SVG rendering, this option may not work in some browsers due to lack of standardization. {% include tag ver=\"5.8\" %} |\n+| smooth | {% include type t=\"Boolean\" %} | A boolean flag (default `true`) indicating if the image should be smoothed when resized. If `false`, individual pixels should be scaled directly rather than interpolated with smoothing. For SVG rendering, this option may not work in some browsers due to lack of standardization. {% include tag ver=\"5.8\" %} |\n| align | {% include type t=\"String\" %} | The horizontal alignment of the image. One of `left`, `center`, or `right`. The default value is `left`. |\n| baseline | {% include type t=\"String\" %} | The vertical alignment of the image. One of `top`, `middle`, or `bottom`. The default value is `top`. |\n",
        "date": "13.09.2020 15:30:54",
        "repo": "vega/vega",
        "type": "chore",
        "sim_msg": "docs: use image-size alias in showcase",
        "sim_diff": "diff --git a/docs/showcase.md b/docs/showcase.md @@ -164,7 +164,7 @@ Get the dimensions of an image ([source code](https://github.com/saasify-sh/imag\nThis project provides a hosted API for [image-size](https://github.com/image-size/image-size).\n-<a href=\"https://dev_image-size.saasify.sh\" target=\"_blank\">\n+<a href=\"https://image-size.saasify.sh\" target=\"_blank\">\n<img\nsrc=\"https://badges.saasify.sh?text=View%20Hosted%20API\"\nheight=\"40\"\n@@ -173,7 +173,7 @@ This project provides a hosted API for [image-size](https://github.com/image-siz\n</a>\n<p align=\"center\">\n- <a href=\"https://dev_image-size.saasify.sh/\" title=\"Hosted API\" target=\"_blank\">\n+ <a href=\"https://image-size.saasify.sh/\" title=\"Hosted API\" target=\"_blank\">\n<img src=\"https://storage.googleapis.com/saasify-uploads-prod/577ffc19d4c84dba9e4bca871c8e64f0636cd1fb.png\" alt=\"API Logo\" width=\"200\" />\n</a>\n</p>\n"
    },
    {
        "msg": "chore: publish command",
        "diff": "diff --git a/package.json b/package.json \"test:core\": \"jest\",\n\"test:module\": \"yarn workspace @chakra-ui/nuxt test\",\n\"test\": \"yarn test:core && yarn test:module\",\n- \"release\": \"changeset publish\",\n+ \"release\": \"yarn changeset publish\",\n\"clean\": \"lerna run clean\",\n\"storybook\": \"cross-env STORYBOOK_VUE_DEV_TOOLS=1 start-storybook -p 9000\",\n\"storybook:devtools\": \"vue-devtools\",\n",
        "date": "31.12.2020 15:35:20",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "chore: hotfix for docs update",
        "sim_diff": "diff --git a/packages/vue/package.json b/packages/vue/package.json \"test:dev\": \"vue-cli-service test:unit --watch\",\n\"version\": \"node scripts/version.js\",\n\"storybook\": \"start-storybook -s ./public -p 6006\",\n- \"build-storybook\": \"update-components-docs && build-storybook -s ./public\",\n+ \"build-storybook\": \"yarn update-components-docs && build-storybook -s ./public\",\n\"update-components-docs\": \"node scripts/update-components-docs.js\"\n},\n\"main\": \"./index.js\",\n"
    },
    {
        "msg": "chore: update link",
        "diff": "diff --git a/README.md b/README.md @@ -145,7 +145,7 @@ export default {\nYou can also view all developed components in **[Storybook](https://chakra-ui-vue.netlify.com)!**\n### Development for Contributing:\n-Interested in contributing? See our [open issues](/issues)! Remember to take a look at our [CONTRIBUTORS](../../.github/CONTRIBUTING.md) guide.\n+Interested in contributing? See our [open issues](https://github.com/chakra-ui/chakra-ui-vue/issues)! Remember to take a look at our [CONTRIBUTORS](../../.github/CONTRIBUTING.md) guide.\n```bash\nyarn install\n",
        "date": "17.03.2020 12:44:04",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "docs: remove financial contributors from readme",
        "sim_diff": "diff --git a/README.md b/README.md @@ -79,6 +79,7 @@ If you have a VuePress-related project/component/tool, add it with a pull reques\n<!-- markdownlint-enable -->\n<!-- prettier-ignore-end -->\n+\n<!-- ALL-CONTRIBUTORS-LIST:END -->\n### Core Team Emeriti\n@@ -103,29 +104,6 @@ Here we honor some no-longer-active core team members who have made valuable con\nThis project exists thanks to all the people who contribute. [[Contribute](.github/CONTRIBUTING.md)].\n<a href=\"https://github.com/vuejs/vuepress/graphs/contributors\"><img src=\"https://opencollective.com/vuepress/contributors.svg?width=890&button=false\" /></a>\n-### Financial Contributors\n-\n-Become a financial contributor and help us sustain our community. [[Contribute](https://opencollective.com/vuepress/contribute)]\n-\n-#### Individuals\n-\n-<a href=\"https://opencollective.com/vuepress\"><img src=\"https://opencollective.com/vuepress/individuals.svg?width=890\"></a>\n-\n-#### Organizations\n-\n-Support this project with your organization. Your logo will show up here with a link to your website. [[Contribute](https://opencollective.com/vuepress/contribute)]\n-\n-<a href=\"https://opencollective.com/vuepress/organization/0/website\"><img src=\"https://opencollective.com/vuepress/organization/0/avatar.svg\"></a>\n-<a href=\"https://opencollective.com/vuepress/organization/1/website\"><img src=\"https://opencollective.com/vuepress/organization/1/avatar.svg\"></a>\n-<a href=\"https://opencollective.com/vuepress/organization/2/website\"><img src=\"https://opencollective.com/vuepress/organization/2/avatar.svg\"></a>\n-<a href=\"https://opencollective.com/vuepress/organization/3/website\"><img src=\"https://opencollective.com/vuepress/organization/3/avatar.svg\"></a>\n-<a href=\"https://opencollective.com/vuepress/organization/4/website\"><img src=\"https://opencollective.com/vuepress/organization/4/avatar.svg\"></a>\n-<a href=\"https://opencollective.com/vuepress/organization/5/website\"><img src=\"https://opencollective.com/vuepress/organization/5/avatar.svg\"></a>\n-<a href=\"https://opencollective.com/vuepress/organization/6/website\"><img src=\"https://opencollective.com/vuepress/organization/6/avatar.svg\"></a>\n-<a href=\"https://opencollective.com/vuepress/organization/7/website\"><img src=\"https://opencollective.com/vuepress/organization/7/avatar.svg\"></a>\n-<a href=\"https://opencollective.com/vuepress/organization/8/website\"><img src=\"https://opencollective.com/vuepress/organization/8/avatar.svg\"></a>\n-<a href=\"https://opencollective.com/vuepress/organization/9/website\"><img src=\"https://opencollective.com/vuepress/organization/9/avatar.svg\"></a>\n-\n## License\n[MIT](https://github.com/vuejs/vuepress/blob/master/LICENSE)\n"
    },
    {
        "msg": "chore: add supporters",
        "diff": "diff --git a/website/index.html b/website/index.html href='https://inkedin.com/free-spins-no-deposit/'><img src='https://logo.clearbit.com/inkedin.com'\nstyle='object-fit: contain; float: left; margin:12px' height='120' width='120'></a><a\nhref='https://www.newcasinosaustralia.com/'><img src='https://logo.clearbit.com/newcasinosaustralia.com'\n+ style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a><a\n+ href='https://casinostranieri.net/'><img\n+ src='https://opencollective-production.s3.us-west-1.amazonaws.com/7aae8900-0c02-11ed-9aa8-2bd811fd6f10.png'\n+ style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a><a\n+ href='https://goread.io/buy-instagram-followers'><img\n+ src='https://opencollective-production.s3.us-west-1.amazonaws.com/7d1302a0-0f33-11ed-a094-3dca78aec7cd.png'\nstyle='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>\n</div>\n</div>\n",
        "date": "29.07.2022 13:12:15",
        "repo": "remy/nodemon",
        "type": "chore",
        "sim_msg": "chore: add opencollective sponsors: top web design companies, casino top",
        "sim_diff": "diff --git a/index.pug b/index.pug @@ -223,6 +223,15 @@ html(lang='en')\n<a href=\"https://vpngorilla.com/\">\n<img class=\"sponsor\" src=\"https://images.opencollective.com/vpngorilla-com/ae76cc5/logo.png\" style=\"height: 100px\">\n</a>\n+ <a href=\"https://medium.com/@niksundin/best-web-design-companies-1872e445775f\">\n+ <img class=\"sponsor\" src=\"https://images.opencollective.com/top-web-design-agencies/d92d747/logo.png\" style=\"height: 100px\">\n+ </a>\n+ <a href=\"https://www.casinotop.com\">\n+ <img class=\"sponsor\" src=\"https://images.opencollective.com/casinotop-com/10fd95b/logo.png\" style=\"height: 100px\">\n+ </a>\n+ <a href=\"https://www.casinotopp.net\">\n+ <img class=\"sponsor\" src=\"https://images.opencollective.com/casino-topp/1dd399a/logo.png\" style=\"height: 100px\">\n+ </a>\n</div>\n</div>\n"
    },
    {
        "msg": "chore(package): remove -- arg separator",
        "diff": "diff --git a/package.json b/package.json \"deploy:docs\": \"gh-pages -d docs/build -m 'deploy docs [ci skip]'\",\n\"postdeploy:docs\": \"yarn build:changelog && yarn deploy:changelog\",\n\"lint\": \"cross-env NODE_ENV=production eslint .\",\n- \"lint:fix\": \"yarn lint -- --fix\",\n+ \"lint:fix\": \"yarn lint --fix\",\n\"prerelease\": \"yarn lint && yarn tsd:lint && yarn tsd:test && yarn test && cross-env NODE_ENV=production yarn build\",\n\"postrelease\": \"yarn deploy:docs\",\n\"release:major\": \"yarn prerelease && ta-script npm/release major && yarn postrelease\",\n\"release:minor\": \"yarn prerelease && ta-script npm/release minor && yarn postrelease\",\n\"release:patch\": \"yarn prerelease && ta-script npm/release patch && yarn postrelease\",\n- \"prestart\": \"yarn satisfied -- --fix yarn\",\n+ \"prestart\": \"yarn satisfied --fix yarn\",\n\"start\": \"yarn docs\",\n\"satisfied\": \"satisfied --skip-invalid\",\n\"pretest\": \"yarn satisfied && yarn build:dll\",\n\"test\": \"cross-env NODE_ENV=test node -r babel-register ./node_modules/karma/bin/karma start karma.conf.babel.js\",\n- \"test:watch\": \"yarn test -- --no-single-run\",\n+ \"test:watch\": \"yarn test --no-single-run\",\n\"tsd\": \"gulp tsd\",\n\"tsd:lint\": \"tslint './index.d.ts' './src/**/*.d.ts' './src/**/*.tsx' './test/**/*.d.ts' './test/**/*.tsx'\",\n- \"tsd:lint:fix\": \"yarn tsd:lint -- --fix\",\n+ \"tsd:lint:fix\": \"yarn tsd:lint --fix\",\n\"tsd:test\": \"yarn tsd && tsc -p ./ && rm test/typings.js\"\n},\n\"repository\": {\n",
        "date": "19.10.2017 18:04:47",
        "repo": "semantic-org/semantic-ui-react",
        "type": "chore",
        "sim_msg": "feat(package): remove gitbook precommit check",
        "sim_diff": "diff --git a/package.json b/package.json \"lint:ec\": \"echint\",\n\"lint\": \"yarn lint:js && yarn lint:scss && yarn lint:ec\",\n\"packup\": \"yarn build-package && yarn pack\",\n- \"precommit\":\n- \"yarn lint && yarn test && yarn build-package && yarn build-styleguide && yarn build-gitbook\",\n+ \"precommit\": \"yarn lint && yarn test && yarn build-package && yarn build-styleguide\",\n\"release:changelog\": \"changelog\",\n\"release\": \"scripts/release.sh\",\n\"scaffold\": \"node scripts/scaffold.js\",\n"
    },
    {
        "msg": "chore: update to WHATWG url api",
        "diff": "diff --git a/lib/util.js b/lib/util.js var fs = require('fs'),\n- url = require('url'),\n+ { URL } = require('url'),\n_ = require('lodash'),\nchardet = require('chardet'),\n@@ -191,7 +191,7 @@ util = {\nresource = 'resource';\nif (response.statusCode !== 200) {\n- urlObj = url.parse(location);\n+ urlObj = new URL(location);\n(urlObj.hostname === POSTMAN_API_HOST) &&\n(resource = _(urlObj.path).split('/').get(1).slice(0, -1) || resource);\n",
        "date": "23.03.2021 12:22:42",
        "repo": "postmanlabs/newman",
        "type": "chore",
        "sim_msg": "refactor: defaultHostname => hostname",
        "sim_diff": "diff --git a/lib/request.js b/lib/request.js @@ -30,7 +30,7 @@ class Request {\nrequestTimeout\n}, {\n[kRequestTimeout]: defaultRequestTimeout,\n- [kUrl]: { hostname: defaultHostname, pathname }\n+ [kUrl]: { hostname, pathname }\n}, handler) {\nif (typeof path !== 'string' || path[0] !== '/') {\nthrow new InvalidArgumentError('path must be a valid path')\n@@ -104,7 +104,7 @@ class Request {\n}\nif (!hostHeader) {\n- header += `host: ${defaultHostname}\\r\\n`\n+ header += `host: ${hostname}\\r\\n`\n}\nif (headers) {\n"
    },
    {
        "msg": "chore: use travis CI's new conditional 'if' to check for tag",
        "diff": "diff --git a/.travis.yml b/.travis.yml @@ -24,16 +24,13 @@ branches:\njobs:\ninclude:\n- stage: deploy\n+ if: tag IS present\nnode_js: 12\nbefore_script:\n- chmod +x scripts/docs\nscript: echo \"Deploying ...\"\nafter_success:\n- scripts/docs\n- branches:\n- only:\n- - master\n- - \"/^\\\\d+\\\\.\\\\d+(\\\\.\\\\d+)?(-\\\\S*)?$/\"\nbefore_deploy:\n- echo 'Preparing to publish'\n- npm run build\n",
        "date": "15.01.2020 20:32:33",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "sim_msg": "ci(travis): fix travis releasing on wrong branch",
        "sim_diff": "diff --git a/.travis.yml b/.travis.yml @@ -57,7 +57,7 @@ jobs:\n# Job: Release\n- stage: release\n- if: branch = master\n+ if: branch = master AND type = push AND fork = false\nnode_js:\n- 'lts/*'\nskip_cleanup: true\n@@ -66,7 +66,7 @@ jobs:\n# Job: Page\n- stage: deploy\n- if: branch = master\n+ if: branch = master AND type = push AND fork = false\nnode_js:\n- 'lts/*'\nscript:\n"
    },
    {
        "msg": "chore: add default app in the e2e script",
        "diff": "diff --git a/package.json b/package.json \"deploy:alpha:soft\": \"npm run test && npm run deploy-prepare && npm run git-commit-tag && npx lerna publish from-package --dist-tag alpha --yes\",\n\"deploy:feat\": \"npm run test && npm run deploy-prepare && npm run git-commit-tag && npx lerna publish from-package --dist-tag feat --yes && git push origin HEAD\",\n\"deploy:prod\": \"npm run deploy-all && npx lerna publish from-package --yes && git push origin HEAD\",\n- \"e2e-hello-world-ios\": \"cd packages/renative-template-hello-world && npx rnv build -p ios -s test && yarn e2e:ios\",\n- \"e2e-hello-world-android\": \"cd packages/renative-template-hello-world && npx rnv build -p android -s test && yarn e2e:android\",\n- \"e2e-hello-world-tvos\": \"cd packages/renative-template-hello-world && npx rnv build -p tvos -s test && yarn e2e:tvos\",\n- \"e2e-hello-world-androidtv\": \"cd packages/renative-template-hello-world && npx rnv build -p androidtv -s test && yarn e2e:androidtv\",\n- \"e2e-hello-world-macos\": \"cd packages/renative-template-hello-world && npx rnv build -p macos -s test && yarn e2e:macos\",\n- \"e2e-hello-world-web\": \"cd packages/renative-template-hello-world && npx rnv start -p web -s test & sleep 60 && cd packages/renative-template-hello-world && yarn e2e:web && kill $(lsof -t -i:8080)\",\n+ \"e2e-hello-world-ios\": \"cd packages/renative-template-hello-world && npx rnv build -p ios -s test -c template && yarn e2e:ios\",\n+ \"e2e-hello-world-android\": \"cd packages/renative-template-hello-world && npx rnv build -p android -s test -c template && yarn e2e:android\",\n+ \"e2e-hello-world-tvos\": \"cd packages/renative-template-hello-world && npx rnv build -p tvos -s test -c template && yarn e2e:tvos\",\n+ \"e2e-hello-world-androidtv\": \"cd packages/renative-template-hello-world && npx rnv build -p androidtv -s test -c template && yarn e2e:androidtv\",\n+ \"e2e-hello-world-macos\": \"cd packages/renative-template-hello-world && npx rnv build -p macos -s test -c template && yarn e2e:macos\",\n+ \"e2e-hello-world-web\": \"cd packages/renative-template-hello-world && npx rnv start -p web -s test -c template & sleep 60 && cd packages/renative-template-hello-world && yarn e2e:web && kill $(lsof -t -i:8080)\",\n\"git-commit\": \"rnv hooks run -x gitCommit -r\",\n\"git-commit-tag\": \"rnv hooks run -x gitCommitAndTag -r\",\n\"git-tag\": \"rnv hooks run -x gitTag -r\",\n",
        "date": "01.03.2022 18:04:55",
        "repo": "pavjacko/renative",
        "type": "chore",
        "sim_msg": "chore: Added testall script",
        "sim_diff": "diff --git a/package.json b/package.json \"reconfigure\": \"node scripts/reconfigure.js\",\n\"prerelease\": \"lerna version --no-git-tag-version --no-push && yarn reconfigure && lerna run lernabuild\",\n\"buildall\": \"lerna run lernabuild\",\n+ \"testall\": \"lerna run testci\",\n\"release\": \"lerna exec -- npm publish\",\n\"postrelease\": \"git add . && git commit -m ':bookmark: v$npm_package_version' && git tag -a v$npm_package_version -m ':bookmark: FreeSewing v$npm_package_version'\",\n\"bump\": \"git add . && git commit -m 'chore: Reconfigure packages'\"\n"
    },
    {
        "msg": "chore(optimize): always stringify `toImport` output",
        "diff": "diff --git a/src/plugins/optimize-graph-plugin.js b/src/plugins/optimize-graph-plugin.js @@ -176,7 +176,7 @@ class ChunkGraph {\nlet rep = typeof newUrl === 'function' ? newUrl(url, fn, quote) : newUrl;\nif (rep === false) return 'null';\nif (typeof rep === 'string') {\n- rep = JSON.stringify(publicPath ? toImport(publicPath, rep) : rep);\n+ rep = publicPath ? toImport(publicPath, rep) : JSON.stringify(rep);\n}\nreturn `${fn}(${rep})`;\n}\n@@ -187,9 +187,8 @@ class ChunkGraph {\n/**\n* @param {string} publicPath\n* @param {string} filename\n- * @param {boolean} [toJSON]\n*/\n-function toImport(publicPath, filename, toJSON) {\n+function toImport(publicPath, filename) {\nlet value = posix.join(publicPath, filename);\nif (/^(https?:)?\\/\\//.test(publicPath)) {\n@@ -198,7 +197,7 @@ function toImport(publicPath, filename, toJSON) {\nvalue = new URL(filename, root).href.substring(isFull ? 0 : 6);\n}\n- return toJSON ? JSON.stringify(value) : value;\n+ return JSON.stringify(value);\n}\n/**\n@@ -285,7 +284,7 @@ function hoistEntryCss(graph) {\n} else {\n// @TODO: this branch is actually unreachable\nif (DEBUG) console.log(`Hoisting CSS \"${f}\" imported by ${id} into parent HTML.`);\n- const url = toImport(graph.publicPath, f, true);\n+ const url = toImport(graph.publicPath, f);\nasset.source = getAssetSource(asset).replace(/<\\/head>/, `<link rel=\"stylesheet\" href=${url}></head>`);\n}\n}\n@@ -348,7 +347,7 @@ function hoistCascadedCss(graph, { cssMinSize }) {\nparentChunk.code += '\\n' + DEFAULT_STYLE_LOAD_IMPL;\n}\n- const url = toImport(graph.publicPath, fileName, true);\n+ const url = toImport(graph.publicPath, fileName);\nparentChunk.code += `\\n${meta.styleLoadFn}(${url});`;\n}\nbreak;\n@@ -390,7 +389,7 @@ function hoistTransitiveImports(graph) {\nappendCode += '\\n' + DEFAULT_STYLE_LOAD_IMPL;\n}\nif (DEBUG) console.log(`Preloading CSS for import(${spec}): ${css}`);\n- preloads.push(...css.map(f => `${meta.styleLoadFn}(${toImport(graph.publicPath, f, true)})`));\n+ preloads.push(...css.map(f => `${meta.styleLoadFn}(${toImport(graph.publicPath, f)})`));\n}\nconst js = deps.js.get(spec);\n",
        "date": "07.12.2020 10:43:15",
        "repo": "preactjs/wmr",
        "type": "chore",
        "sim_msg": "refactor: refine plugin data dir",
        "sim_diff": "diff --git a/lib/plugins/load-plugin.js b/lib/plugins/load-plugin.js @@ -902,8 +902,8 @@ module.exports = async function(options, callback) {\nvar boundIp = config.host;\nvar PROXY_ID_HEADER = config.PROXY_ID_HEADER;\nvar name = options.name;\n- var PLUGIN_HOOKS = options.config.PLUGIN_HOOKS;\n- var RES_RULES_HEAD = options.config.RES_RULES_HEAD;\n+ var PLUGIN_HOOKS = config.PLUGIN_HOOKS;\n+ var RES_RULES_HEAD = config.RES_RULES_HEAD;\nvar getRulesStr = function(obj) {\nobj = JSON.stringify({\nrules: typeof obj === 'string' ? obj : obj.rules,\n@@ -913,9 +913,14 @@ module.exports = async function(options, callback) {\nreturn encodeURIComponent(obj);\n};\n- PLUGIN_HOOK_NAME_HEADER = options.config.PLUGIN_HOOK_NAME_HEADER;\n+ PLUGIN_HOOK_NAME_HEADER = config.PLUGIN_HOOK_NAME_HEADER;\noptions.shortName = name.substring(name.indexOf('/') + 1);\n- storage = new Storage(path.join(options.config.baseDir, '.plugins', options.name));\n+ var pluginDataDir = path.join(config.baseDir, '.plugins', options.name);\n+ if (config.storage || config.username) {\n+ pluginDataDir += '.' + encodeURIComponent((config.username || '') + '/' + (config.storage || ''));\n+ }\n+ config.pluginDataDir = pluginDataDir;\n+ storage = new Storage(pluginDataDir);\noptions.storage = options.localStorage = storage;\npluginOpts = options;\nObject.keys(options).forEach(function(key) {\n"
    },
    {
        "msg": "chore(UncontrolledNavDropdown): simplify logic\nThis simplifies the deprecated component to just return the preferred component (UncontrolledDropdown) with the nav prop\nThis removes the logic from the deprecated component.",
        "diff": "diff --git a/src/UncontrolledNavDropdown.js b/src/UncontrolledNavDropdown.js -import React, { Component } from 'react';\n+import React from 'react';\nimport { warnOnce } from './utils';\n-import NavDropdown from './NavDropdown';\n+import UncontrolledDropdown from './UncontrolledDropdown';\n-export default class UncontrolledNavDropdown extends Component {\n- constructor(props) {\n- super(props);\n-\n- this.state = { isOpen: false };\n- this.toggle = this.toggle.bind(this);\n- }\n-\n- toggle() {\n- this.setState({ isOpen: !this.state.isOpen });\n- }\n-\n- render() {\n+const UncontrolledNavDropdown = () => {\nwarnOnce('The \"UncontrolledNavDropdown\" component has been deprecated.\\nPlease use component \"UncontrolledDropdown\" with nav prop.');\n- return <NavDropdown isOpen={this.state.isOpen} toggle={this.toggle} {...this.props} />;\n- }\n-}\n+ return <UncontrolledDropdown nav {...this.props} />;\n+};\n+\n+export default UncontrolledNavDropdown;\n",
        "date": "02.02.2018 14:17:43",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "sim_msg": "feat(atom/switch): refactor class functions to instance functions",
        "sim_diff": "diff --git a/components/atom/switch/src/index.js b/components/atom/switch/src/index.js @@ -62,38 +62,38 @@ class AtomSwitch extends Component {\n}\n}\n- toggleSwitch = function () {\n+ toggleSwitch = () => {\nconst {disabled, onToggle, toggle} = this.state\nif (disabled) {\nreturn\n}\n(onToggle) && onToggle(!toggle)\nthis.setState({toggle: !toggle})\n- }.bind(this)\n+ }\n- activateToggle = function () {\n+ activateToggle = () => {\nconst {disabled} = this.state\nif (disabled) {\nreturn\n}\nthis.setState({toggle: true})\n- }.bind(this)\n+ }\n- deactivateToggle = function () {\n+ deactivateToggle = () => {\nconst {disabled} = this.state\nif (disabled) {\nreturn\n}\nthis.setState({toggle: false})\n- }.bind(this)\n+ }\n- focusSwitch = function () {\n+ focusSwitch = () => {\nthis.setState({isFocus: true})\n- }.bind(this)\n+ }\n- focusOutSwitch = function () {\n+ focusOutSwitch = () => {\nthis.setState({isFocus: false})\n- }.bind(this)\n+ }\nrender () {\nreturn (this.type === TYPES.SINGLE)\n"
    },
    {
        "msg": "chore: push versions",
        "diff": "diff --git a/website/package.json b/website/package.json },\n\"dependencies\": {\n\"@chakra-ui/theme-vue\": \"^0.2.7\",\n- \"@chakra-ui/vue\": \"^0.7.0-next.0\",\n+ \"@chakra-ui/vue\": \"^0.7.0-next.2\",\n\"@emotion/css\": \"^11.0.0\",\n\"@mdx-js/vue-loader\": \"^1.6.1\",\n\"@nuxtjs/dotenv\": \"^1.4.0\",\n",
        "date": "23.12.2020 15:38:06",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "chore(deps): update `webpack-dev-server`\nFixes",
        "sim_diff": "diff --git a/package.json b/package.json \"vue-style-loader\": \"^4.1.3\",\n\"webpack\": \"^5.60.0\",\n\"webpack-cli\": \"^4.9.1\",\n- \"webpack-dev-server\": \"4.4.0\",\n+ \"webpack-dev-server\": \"4.7.3\",\n\"webpack-merge\": \"^5.8.0\",\n\"webpack-notifier\": \"^1.14.1\",\n\"webpackbar\": \"^5.0.0-3\",\n"
    },
    {
        "msg": "chore: update format script",
        "diff": "diff --git a/package.json b/package.json \"test:packages\": \"lerna run test --stream --scope razzle-* --ignore razzle-examples-* -- --passWithNoTests --verbose --no-cache\",\n\"test:e2e\": \"jest --config ./test/jest.config.json --verbose --no-cache \",\n\"clean\": \"lerna clean --yes\",\n- \"format\": \"prettier --trailing-comma es5 --single-quote --write 'packages/*/*.+(js|jsx|json|yml|yaml|css|less|scss|ts|tsx|md|mdx)' 'packages/*/!(node_modules)/**/*.js'\",\n+ \"format\": \"prettier --write 'packages/*/*.+(js|jsx|json|yml|yaml|css|less|scss|ts|tsx|md|mdx)' 'packages/*/!(node_modules)/**/*.js'\",\n\"publish-canary\": \"lerna version prerelease --preid canary --force-publish && release --pre\",\n\"publish-stable\": \"lerna version --force-publish && release && node ./scripts/release-notes.js\",\n\"build-docs\": \"node ./scripts/build-docs.js\",\n},\n\"lint-staged\": {\n\"*.{js|jsx|json|yml|yaml|css|less|scss|ts|tsx|md|mdx}\": [\n- \"prettier --trailing-comma es5 --single-quote --write\"\n+ \"yarn format\"\n]\n},\n\"dependencies\": {},\n",
        "date": "08.07.2020 23:05:11",
        "repo": "jaredpalmer/razzle",
        "type": "chore",
        "sim_msg": "ci: add missing types check",
        "sim_diff": "diff --git a/package.json b/package.json \"clean:lerna\": \"lerna clean --yes\",\n\"reset\": \"run-s clean clean:lerna\",\n\"test\": \"run-s clean lint type-check test:unit\",\n- \"test:ci\": \"run-s clean lint-quiet test:unit\",\n+ \"test:ci\": \"run-s clean lint-quiet type-check test:unit\",\n\"test:all\": \"run-s test test:e2e\",\n\"test:all:ci\": \"run-s test:ci test:e2e:ci\",\n\"test:unit\": \"cross-env NODE_ENV=test jest --no-cache\",\n"
    },
    {
        "msg": "chore: remove test from postinstall script",
        "diff": "diff --git a/package.json b/package.json ]\n},\n\"scripts\": {\n- \"postinstall\": \"yarn test && yarn build:dev && yarn theme:dev && lerna link\",\n+ \"postinstall\": \"yarn build:dev && yarn theme:dev && lerna link\",\n\"build:dev\": \"yarn workspace @chakra-ui/vue run rollup --config rollup.dev.config.js\",\n\"build\": \"yarn workspace @chakra-ui/vue build\",\n\"dev\": \"yarn workspace @chakra-ui/vue dev\",\n",
        "date": "16.05.2020 20:39:32",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "build: force checks before release",
        "sim_diff": "diff --git a/package.json b/package.json \"packages:list\": \"lerna ls -l\",\n\"prepublishOnly\": \"yarn --pure-lockfile && yarn lint && yarn test && yarn build\",\n\"register-vuepress\": \"lerna exec --scope vuepress -- yarn link\",\n- \"release\": \"node scripts/release.js\",\n+ \"release\": \"yarn lint && yarn build && yarn test && node scripts/release.js\",\n\"remote-version\": \"node scripts/remote-version.js\",\n\"show-help\": \"yarn workspace docs show-help\",\n\"test\": \"node scripts/test.js\",\n"
    },
    {
        "msg": "chore(tests): remove unnecessary template",
        "diff": "diff --git a/packages/kiwi-core/src/CloseButton/tests/CloseButton.test.js b/packages/kiwi-core/src/CloseButton/tests/CloseButton.test.js @@ -10,9 +10,7 @@ const renderComponent = (props) => {\nreturn render(base)\n}\nit('should render correctly', () => {\n- const { asFragment } = renderComponent({\n- template: `<CloseButton />`\n- })\n+ const { asFragment } = renderComponent()\nexpect(asFragment()).toMatchSnapshot()\n})\nit('should allow setting a custom aria-label for the button', () => {\n",
        "date": "01.03.2020 15:04:41",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "test(button): add unit tests to icon button",
        "sim_diff": "diff --git a/packages/yoga/src/Button/web/Button.test.jsx b/packages/yoga/src/Button/web/Button.test.jsx @@ -795,19 +795,15 @@ describe('<Button />', () => {\nexpect(onClickMock).toHaveBeenCalled();\n});\n- it.skip('should call onClick function when click on Button.Icon', () => {\n+ it('should call onClick function when click on Button.Icon', () => {\nconst onClickMock = jest.fn();\nconst { getByRole } = render(\n<ThemeProvider>\n- <Button.Icon icon={Close} onClick={onClickMock} ariaLabel=\"Close\" />\n+ <Button.Icon icon={Close} onClick={onClickMock} aria-pressed=\"true\" />\n</ThemeProvider>,\n);\n- fireEvent.click(\n- getByRole('button', {\n- name: /close/i,\n- }),\n- );\n+ fireEvent.click(getByRole('button', { pressed: true }));\nexpect(onClickMock).toHaveBeenCalled();\n});\n"
    },
    {
        "msg": "chore: fix linting issues",
        "diff": "diff --git a/lib/monitor/signals.js b/lib/monitor/signals.js module.exports = {\n- \"SIGHUP\": \"1\",\n- \"SIGINT\": \"2\",\n- \"SIGQUIT\": \"3\",\n- \"SIGILL\": \"4\",\n- \"SIGTRAP\": \"5\",\n- \"SIGABRT\": \"6\",\n- \"SIGBUS\": \"7\",\n- \"SIGFPE\": \"8\",\n- \"SIGKILL\": \"9\",\n- \"SIGUSR1\": \"10\",\n- \"SIGSEGV\": \"11\",\n- \"SIGUSR2\": \"12\",\n- \"SIGPIPE\": \"13\",\n- \"SIGALRM\": \"14\",\n- \"SIGTERM\": \"15\",\n- \"SIGSTKFLT\": \"16\",\n- \"SIGCHLD\": \"17\",\n- \"SIGCONT\": \"18\",\n- \"SIGSTOP\": \"19\",\n- \"SIGTSTP\": \"20\",\n- \"SIGTTIN\": \"21\",\n- \"SIGTTOU\": \"22\",\n- \"SIGURG\": \"23\",\n- \"SIGXCPU\": \"24\",\n- \"SIGXFSZ\": \"25\",\n- \"SIGVTALRM\": \"26\",\n- \"SIGPROF\": \"27\",\n- \"SIGWINCH\": \"28\",\n- \"SIGIO\": \"29\",\n- \"SIGPWR\": \"30\",\n- \"SIGSYS\": \"31\",\n- \"SIGRTMIN\": \"35\"\n+ SIGHUP: 1,\n+ SIGINT: 2,\n+ SIGQUIT: 3,\n+ SIGILL: 4,\n+ SIGTRAP: 5,\n+ SIGABRT: 6,\n+ SIGBUS: 7,\n+ SIGFPE: 8,\n+ SIGKILL: 9,\n+ SIGUSR1: 10,\n+ SIGSEGV: 11,\n+ SIGUSR2: 12,\n+ SIGPIPE: 13,\n+ SIGALRM: 14,\n+ SIGTERM: 15,\n+ SIGSTKFLT: 16,\n+ SIGCHLD: 17,\n+ SIGCONT: 18,\n+ SIGSTOP: 19,\n+ SIGTSTP: 20,\n+ SIGTTIN: 21,\n+ SIGTTOU: 22,\n+ SIGURG: 23,\n+ SIGXCPU: 24,\n+ SIGXFSZ: 25,\n+ SIGVTALRM: 26,\n+ SIGPROF: 27,\n+ SIGWINCH: 28,\n+ SIGIO: 29,\n+ SIGPWR: 30,\n+ SIGSYS: 31,\n+ SIGRTMIN: 35,\n}\n",
        "date": "15.12.2017 15:20:01",
        "repo": "remy/nodemon",
        "type": "chore",
        "sim_msg": "chore: use latest streams and server-admin-ui versions",
        "sim_diff": "diff --git a/package.json b/package.json \"@signalk/maptracker\": \"^1.0.0\",\n\"@signalk/playground\": \"^1.0.0\",\n\"@signalk/sailgauge\": \"^1.1.0\",\n- \"@signalk/server-admin-ui\": \"1.12.x\",\n+ \"@signalk/server-admin-ui\": \"1.13.x\",\n\"@signalk/set-system-time\": \"^1.2.0\",\n\"@signalk/signalk-schema\": \"1.1.1\",\n\"@signalk/signalk-to-nmea0183\": \"^1.0.0\",\n\"@signalk/simplegauges\": \"^1.0.1\",\n- \"@signalk/streams\": \"^1.2.0\",\n+ \"@signalk/streams\": \"1.3.x\",\n\"@signalk/zones\": \"^1.0.0\",\n\"baconjs\": \"^1.0.1\",\n\"bcryptjs\": \"^2.4.3\",\n"
    },
    {
        "msg": "chore: add dark theme ability",
        "diff": "diff --git a/src/features/note-selector/NoteSelector.module.css b/src/features/note-selector/NoteSelector.module.css .tag:hover::after {\nborder-left-color: rgb(65, 65, 65);\n}\n+\n+:global(.darkTheme) .tag {\n+ color: white;\n+ background-color: rgb(130, 129, 129);\n+}\n+\n+:global(.darkTheme) .tag:hover {\n+ /*background-color: #cc0000;*/\n+ background-color: white;\n+ color: black;\n+}\n\\ No newline at end of file\n",
        "date": "14.08.2019 09:44:39",
        "repo": "iqtlabs/crviz",
        "type": "chore",
        "sim_msg": "feat(BRAND/blog): add rebranding article",
        "sim_diff": "diff --git a/src/app/index.scss b/src/app/index.scss @@ -229,3 +229,13 @@ a[download] {\nopacity: 0.7;\n}\n}\n+\n+// FIXME: from vars\n+.brand--primary {\n+ background: linear-gradient(135deg, rgba(41,190,220,1) 0%, rgba(81,122,237,1) 100%);\n+ transition: 0.25s;\n+\n+ &:hover {\n+ opacity: 0.8;\n+ }\n+}\n\\ No newline at end of file\n"
    },
    {
        "msg": "chore(package.json): remove dev:exp command\nchore(package.json): remove dev:exp command",
        "diff": "diff --git a/package.json b/package.json \"scripts\": {\n\"build\": \"npm run frontend_build && npm run server_build\",\n\"dev\": \"NODE_ENV=development babel-node ./src/server/index.dev\",\n- \"dev:exp\": \"NODE_ENV=development babel-node -- --expose-http2 ./src/server/index.dev\",\n\"server_build\": \"NODE_ENV=production webpack --config webpack_config/server/webpack.prod.babel.js\",\n\"frontend_build\": \"NODE_ENV=production webpack --config webpack_config/client/webpack.prod.babel.js\",\n\"test\": \"NODE_ENV=test jest --config=jest_config/jest.config.json --coverage --forceExit || true\",\n",
        "date": "14.09.2017 01:10:28",
        "repo": "metnew/suicrux",
        "type": "chore",
        "sim_msg": "test: eslint webpack as well",
        "sim_diff": "diff --git a/package.json b/package.json \"start\": \"npm run dev\",\n\"build\": \"cross-env NODE_ENV=production webpack --config webpack/prod.config.js --progress --display-error-details --colors\",\n\"dev\": \"cross-env NODE_ENV=development webpack-dev-server --config webpack/dev.config.js --watch --colors\",\n- \"test\": \"eslint src\"\n+ \"test\": \"eslint src webpack\"\n},\n\"files\": [\n\"dist\"\n"
    },
    {
        "msg": "chore(package): add react-test-renderer",
        "diff": "diff --git a/package.json b/package.json \"doctoc\": \"^1.2.0\",\n\"doctrine\": \"^2.0.0\",\n\"empty\": \"^0.10.1\",\n- \"enzyme\": \"^2.7.1\",\n+ \"enzyme\": \"^2.8.2\",\n\"eslint-config-ta\": \"^5.2.0\",\n\"eslint-plugin-jsx-a11y\": \"^4.0.0\",\n\"express\": \"^4.13.4\",\n\"react-dom\": \"15.5.4\",\n\"react-router\": \"^4.0.0\",\n\"react-router-dom\": \"^4.0.0\",\n+ \"react-test-renderer\": \"^15.5.4\",\n\"require-dir\": \"^0.3.0\",\n\"rimraf\": \"^2.5.2\",\n\"satisfied\": \"^1.1.0\",\n",
        "date": "22.04.2017 09:34:48",
        "repo": "semantic-org/semantic-ui-react",
        "type": "chore",
        "sim_msg": "feat: Add types for js-cookie and ES Lint processor for React hooks rules. ES Lint processor not implemented yet",
        "sim_diff": "diff --git a/package.json b/package.json \"@testing-library/jest-dom\": \"^5.16.4\",\n\"@types/cookie\": \"^0.5.1\",\n\"@types/jest\": \"^27.4.1\",\n+ \"@types/js-cookie\": \"^3.0.2\",\n\"@types/node\": \"^17.0.28\",\n\"@types/react\": \"^18.0.8\",\n\"@types/react-dom\": \"^18.0.0\",\n\"electron-react-devtools\": \"^0.5.3\",\n\"eslint\": \"^8.14.0\",\n\"eslint-config-airbnb\": \"^19.0.4\",\n+ \"eslint-plugin-react-hooks\": \"^4.5.0\",\n\"fake-indexeddb\": \"^3.1.7\",\n\"html-webpack-plugin\": \"^5.5.0\",\n\"istanbul\": \"^0.4.5\",\n}\n]\n}\n-\n"
    },
    {
        "msg": "chore: Code clean up in View.",
        "diff": "diff --git a/packages/vega-view/src/View.js b/packages/vega-view/src/View.js @@ -74,12 +74,10 @@ export default function View(spec, options) {\nconst ctx = runtime(view, spec, options.functions);\nview._runtime = ctx;\nview._signals = ctx.signals;\n- view._bind = (spec.bindings || []).map(function(_) {\n- return {\n+ view._bind = (spec.bindings || []).map(_ => ({\nstate: null,\nparam: extend({}, _)\n- };\n- });\n+ }));\n// initialize scenegraph\nif (ctx.root) ctx.root.set(root);\n@@ -303,18 +301,15 @@ prototype.removeResizeListener = function(handler) {\n};\nfunction findOperatorHandler(op, handler) {\n- var t = op._targets || [],\n- h = t.filter(function(op) {\n- var u = op._update;\n- return u && u.handler === handler;\n- });\n+ const h = (op._targets || [])\n+ .filter(op => op._update && op._update.handler === handler);\nreturn h.length ? h[0] : null;\n}\nfunction addOperatorListener(view, name, op, handler) {\nvar h = findOperatorHandler(op, handler);\nif (!h) {\n- h = trap(view, function() { handler(name, op.value); });\n+ h = trap(view, () => handler(name, op.value));\nh.handler = handler;\nview.on(op, null, h);\n}\n",
        "date": "16.05.2020 18:33:47",
        "repo": "vega/vega",
        "type": "chore",
        "sim_msg": "feat(app): video add attrs show-mute-btn",
        "sim_diff": "diff --git a/src/platforms/app-plus/view/components/video/index.vue b/src/platforms/app-plus/view/components/video/index.vue @@ -56,6 +56,7 @@ const attrs = [\n'pageGesture',\n'enableProgressGesture',\n'showPlayBtn',\n+ 'showMuteBtn',\n'enablePlayGesture',\n'vslideGesture',\n'vslideGestureInFullscreen',\n@@ -158,6 +159,10 @@ export default {\ntype: [Boolean, String],\ndefault: true\n},\n+ showMuteBtn: {\n+ type: [Boolean, String],\n+ default: true\n+ },\nenablePlayGesture: {\ntype: [Boolean, String],\ndefault: true\n"
    },
    {
        "msg": "chore(docs): update inline form spacing\nCloses",
        "diff": "diff --git a/docs/lib/examples/FormInline.js b/docs/lib/examples/FormInline.js @@ -5,16 +5,14 @@ export default class Example extends React.Component {\nrender() {\nreturn (\n<Form inline>\n- <FormGroup>\n- <Label for=\"exampleEmail\">Email</Label>{' '}\n+ <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\n+ <Label for=\"exampleEmail\" className=\"mr-sm-2\">Email</Label>\n<Input type=\"email\" name=\"email\" id=\"exampleEmail\" placeholder=\"something@idk.cool\" />\n</FormGroup>\n- {' '}\n- <FormGroup>\n- <Label for=\"examplePassword\">Password</Label>{' '}\n+ <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\n+ <Label for=\"examplePassword\" className=\"mr-sm-2\">Password</Label>\n<Input type=\"password\" name=\"password\" id=\"examplePassword\" placeholder=\"don't tell!\" />\n</FormGroup>\n- {' '}\n<Button>Submit</Button>\n</Form>\n);\n",
        "date": "21.11.2017 05:18:34",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "sim_msg": "docs(*): update form validate",
        "sim_diff": "diff --git a/docs/form/demo/base.md b/docs/form/demo/base.md @@ -44,6 +44,15 @@ class Demo extends React.Component {\n<FormItem label=\"Password\" required requiredMessage=\"Please input your password!\">\n<Input.Password name=\"basePass\" placeholder=\"Please Enter Password\"/>\n</FormItem>\n+ <FormItem label=\"Email\" format=\"email\" requiredMessage=\"Please input your email!\">\n+ <Input name=\"email\" placeholder=\"Please Enter Email\"/>\n+ </FormItem>\n+ <FormItem label=\"Phone Number\" format=\"tel\">\n+ <Input name=\"phone\" placeholder=\"Please Enter phone number\"/>\n+ </FormItem>\n+ <FormItem label=\"Homepage\" format=\"url\">\n+ <Input name=\"homepage\" defaultValue=\"https://\" placeholder=\"e.g. https://www.taobao.com\"/>\n+ </FormItem>\n<FormItem label=\" \" colon={false}>\n<Checkbox name=\"agreement\" defaultChecked>Agree</Checkbox>\n</FormItem>\n"
    },
    {
        "msg": "chore: improve travis build?",
        "diff": "diff --git a/.travis.yml b/.travis.yml sudo: false\ndist: trusty\nlanguage: node_js\n-node_js:\n-- 10\n-- 11\n-- 12\ncache:\ndirectories:\n- node_modules\n-script:\n-- npm run lint\n-- npm run cover -- --runInBand\n-after_script:\n-- npm run report-coverage\nenv:\nglobal:\nsecure: Jb9Q9+XnCh+n5uNJuqUmLmPG6mUUv7iTi5bNeK6TpLdrVKk+2mLdobV3iRUy/DEqNLwt2lxwzp1oq4YI/lZ0vlUam7HpFWpSf4PAI8ckGRqFdus7K45o+zxHLJ2zBQwXacsZB204qtO8RDdXaNb9PjRGNFdKm3ZuqZTv6PkO+hS05EFxmcW95HiSHpV/qPxKjEsDdCpoTNEA3MP0dNtSKygeht2nFQVr7WkOhkjDvUtU9EypkGbJeBCd0AckqXM0Qvmdi++csyz5VRQhhUwI/2BKSjbBVUZ6Q3m8sX2p4G/wFEbhXl5eKTzAYLuf+9kT9Jg+gKdT30PoChx2NPKHv0XS8BOrKQScs6KIwOVH2/CNCKqAxh3HkCMSONmqEQRqBK1V/gSCZ4zDX9PgrfyE23FLN/GM4YtBlkVCMLh8Y/hiapXUaDobxh/o2tfOoQkeoZWZeoeIydhwULTDSG2R3PKV7rkGYas0VQ+qtU+i8VG+PzjPT4DRf4xIKzNzJbFIq9oTNYBTasWi6+OKzNw0uH3ydmRzf+GxaTwOIdR3nRQMQN60dH+6qeJkrIvpfrGAB5gqTutXPfe0xf2rMrW6dyipnSgGlk1JOgA+cU4CPyHql1OA+ox/kIQ4I3PIJBu5YYE3amFmKLu3vnDHELSzM1CYeOs0sDasRyiDkKE79l0=\n-branches:\n- only:\n- - master\n- - \"/^\\\\d+\\\\.\\\\d+(\\\\.\\\\d+)?(-\\\\S*)?$/\"\n+\n+stages:\n+ - lint\n+ - test\n+ - deploy\njobs:\ninclude:\n+ - stage: lint\n+ node_js: 12\n+ script: npm run lint\n+ - stage: test\n+ node_js:\n+ - 10\n+ - 11\n+ - 12\n+ script: npm run cover -- --runInBand\n+ after_script: npm run report-coverage\n- stage: deploy\nif: tag IS present\nnode_js: 12\n",
        "date": "15.01.2020 20:56:06",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "sim_msg": "ci(travis): add tokens",
        "sim_diff": "diff --git a/.travis.yml b/.travis.yml @@ -24,5 +24,5 @@ jobs:\n- npm run build\n- npx semantic-release\nenv:\n- - secure: 0PTkefim1bMIg6wE2uSa662DCZg7N4bpNK/3HDJRk2H4CNpPWvMK6l8y7fP9hj7d3k4bUMJkKasdJND1P4/TyZM/UuV6KXQaO14rs2iuZsfL4q+x1IpmgZtR0rIpHiV52URGZJPVTOfIOs9wJFxyNxXeLq5dadiSoQ7zOgxnuk3nm3aTZUTC7DxXoz3bsRjPXlNnUjWYI/dbBl8BR41yte5qo5DChnn63XVm+hybSvUbJ/cHiUtbJPpMWHILKYLYLJwhP9s5SZ9YkLgBIVTlJtXMs9wOrbfB3+MLddsz35kHs4lz9IIfhdb11o5LrXAoKPlXdQPP4X6NVmKEehE8tQ8YrCpWHRtLrw6Z8UVnd7b/ZKrCeErmcAFLh0NgSMGNDXJtpV8QHz+4/vMISZKeYocpOof6ohUG9QrAYMJlkOkovgL2YXjmFPYmY0vl41mk+2RxcDVP8dmD/TqFFYut5Q9ulzqRi43PIG7JE4cdpk+CU7hffTbeZs7NeapgHwoSLJPGbPVBHbjznDpaZk4a5xY++abaX58Q9Z7leKIihleXxS6O3W0TqfZdEBC8oBBMrmG9UF1dSCUm1LpMCFBa7YDL96HAOH4bge5lBweKJmmd5CqzARl2u9nxy2nbePRXiNP0rRphx5P1zhmxMFDt551Tmz5whGBCUgVfOkjvW70=\n- - secure: uSjfhFYSQwB7hwZUcEN6Izp+iPdfB93sGW+DEV6ZkwSWphSoSTjbBhPfNA2p4tuM+8anBd0nRlrbBarXTrwnKsoZXdqSmPP6o25bxLTyOJHRJseDycSw56YOEa34sEt3REDRvojbfzyIkrS61aTXWdMAwc4aGtf8LADWDyWSE4l3Rl1qUBgw+hxsClVzggO4FIdmexH8QWevv1VyONunbN5W5UD6cuLo56DiJKQiQhOPexnWKvJJj32G53j8HvVarUh+TDA3XGZ5+cPwLQK2Gok8S/zaVHU88tiWHuwZ/r3PLRVbCEN8x21N7E2pJHqrFvA9cgF1QmOViI9To/rX+Ksx933U8s0wchinALQ2d0SJpnpN504mPeOOSba2aC/F5n27r9R7HXb6+FyGuAyvFIVr/cF4sTqncvdNkIt05KEEGAEUK1gzzifmsR8Vor040rXTPkQXRz8WGzKCglxWucWbyNg5AKUIDd0wRVIdIz4HOd5T3DhWB3OCpud/u7Xgk2ZaYCy3u5FrTh47PWs5cK3PN4HUm5okb17iXS4BE6ZSUPrIQoi6h1onu1jskpPOoXg4CSaMuoJ+AYC66mXDd7ehaGQ7rBWnw5bdAC+YthskI4JOECjYHKwtPzOz3nQn2hKNTRtIn0vPHDV0Z2d2Oc8gb/3a/PwijmdOrbMnQtA=\n+ - secure: qnh8WGy9H9unaWYWl6YdJcSDvcN7XaQ1hCxbxIGEaNttoRhBmBL+mwxIiChqMSJYa0M/m7nZFVafbfc6EcHEwUarWG2IGPNKscE36c1iEXtaEfau0OfFk+0fjO0K7MWuhkXHSl2g4IKoV587Bpikdark6JC89OHnJNOLG2a7QtYQQDIM9cVk+U3s1zhuDZ980iJ+4VqJMUy04c9bx6RuSHH6pL+pjxJ7Lg5RKgzfHzpYop+RDLI1la2yoEKip/AKwW2fewZOptSKYOLlxhAcDzZMiWmqswr6uPqEQcVSKB5kEk58j7st25bOAMRE2hdh4Baq5b0qBaQwpEXEKY/h37VGf7+kUe/NZay/bcoWPuoFUCzfpfAag6vFDsS4bqENN10nzALmU9gvVY/o7R66fFR+PDf4lBFz67o94zEtV+r0TWYaIrz9ZCqtmDJ4+vRN0wSUIgnw/oOj5NrCjdOW5Fi6SyJG3He9KtVpK4HAmKCUkuRVBoIlHSeJZjmjmY8Q2Koe4SZmXrahCNRbkBLaIQ+La6tttid1UBo2ZaJznFeueU8mEYabwcRh6PJ8Y8vD2O9YhfTgQ+mvC5DwkX4INpU0OGi7d0JMFsOwniDAAqR1/D/QVBqzTt/HWKXTLnPpOgdNh7pa07nrK50/T79UXymoaHqQvB96DgLvjHWNnVw=\n+ - secure: J0aRMYmMw5ZzBKs3snK85U2PxyD6mO4XErNNApA5gZknQYv8WlLRtSxNSRMOEPlN16N2ylbK6O2A7Lytw9hV3pRM0YNTzi04/clPGNJxSi3TTKYuZXe8Jw/jOklc4RemUqWQQuDOEne3jOmizDnn0DetqcYBdJHw0ULLlbpFMYj+TBf4iROCd0a6HX2kvF5bypvf5JfZz9jyfkNlgZukMK6hWZFPdVtkAf6wS7wMKwu6TmYYGgiodFYdS9uF6BMsUgjdeHhhGUXBQKpXsmyMYZK/Pt/vffhI+6EguB/lOnPHQMRSsfR4iFAVK7q12P10kCvb9sg+oG3z1v8JN3k5kD6O4znrWu+NXCld+0EFnL+E4YjBstIleRrx1I14cgWtad9C9PWsfiNsx7ItyZ+JeHxtzQ9zDyhzA/+t2/eZbthU1QTA+mZY0yvp+VPyRfBvWPu+R966H9i9y4ycWqN7LvwQHgx4rwqvTQ8wYfgdlrWUtgZEDl2OoofAaKI0NwbGxt9pzQvrtN6yMVxPKC6ALdF8bUbUdfTFZkZgrVWC1CfliMWZ5MVBMhdNKru176/ZFzmTpzv+Oi+JGTbuc9Hps8vJkfFegiRSp28MjfPjSsHAagU4ElaCzg2xBbW1CJi8NASpH4OLqdl0J4Kp8EHhFipJwGeQdGsJeCkuVFxao78=\n"
    },
    {
        "msg": "chore(webpack_config): add comment about Preact\nchore(webpack_config): add comment about Preact",
        "diff": "diff --git a/webpack_config/client/webpack.base.js b/webpack_config/client/webpack.base.js @@ -51,10 +51,11 @@ const baseBuild = {\nresolve: {\nalias: {\n...isomorphicWebpackConfig.resolve.alias\n+ // NOTE: Preact + preact-compat can save you 148Kb parsed or 14kb gzipped\n+ // Preact may breaks your React app, starter by default doesn't aim to support Preact\n// react: 'preact-compat',\n// 'react-dom': 'preact-compat',\n- // 'preact-compat': 'preact-compat/dist/preact-compat',\n- // 'react-redux': 'preact-redux'\n+ // 'preact-compat': 'preact-compat/dist/preact-compat'\n},\nmodules: isomorphicWebpackConfig.resolve.modules,\nextensions: isomorphicWebpackConfig.resolve.extensions.concat([\n",
        "date": "17.09.2017 21:44:12",
        "repo": "metnew/suicrux",
        "type": "chore",
        "sim_msg": "fix: `React is not defined` compilation error after ejected",
        "sim_diff": "diff --git a/packages/react-scripts/config/webpack.config.js b/packages/react-scripts/config/webpack.config.js @@ -406,9 +406,6 @@ module.exports = function (webpackEnv) {\ncustomize: require.resolve(\n'babel-preset-react-app/webpack-overrides'\n),\n- // @remove-on-eject-begin\n- babelrc: false,\n- configFile: false,\npresets: [\n[\nrequire.resolve('babel-preset-react-app'),\n@@ -417,6 +414,9 @@ module.exports = function (webpackEnv) {\n},\n],\n],\n+ // @remove-on-eject-begin\n+ babelrc: false,\n+ configFile: false,\n// Make sure we have a unique cache identifier, erring on the\n// side of caution.\n// We remove this when the user ejects because the default\n"
    },
    {
        "msg": "chore: fix lint errs",
        "diff": "diff --git a/packages/chakra-ui-core/src/CAspectRatioBox/tests/CAspectRatioBox.test.js b/packages/chakra-ui-core/src/CAspectRatioBox/tests/CAspectRatioBox.test.js @@ -23,12 +23,12 @@ const renderComponent = (props) => {\nfunction getElementStyles (selector) {\nselector = new RegExp(selector)\nlet styles = []\n- let i; let j; let sel = selector\n+ let i; let j; const sel = selector\nfor (i = 0; i < document.styleSheets.length; ++i) {\nfor (j = 0; j < document.styleSheets[i].cssRules.length; ++j) {\nif (sel.test(document.styleSheets[i].cssRules[j].selectorText)) {\n// let selectorText = document.styleSheets[i].cssRules[j].selectorText\n- let cssText = document.styleSheets[i].cssRules[j].style.cssText\n+ const cssText = document.styleSheets[i].cssRules[j].style.cssText\nstyles += cssText\n}\n}\n@@ -49,8 +49,8 @@ it('should render correctly', () => {\n`.trim())\n})\n-it('should have correct styles', async () => {\n- const inlineAttrs = `:ratio=\"2\"`\n+it('should have correct styles', () => {\n+ const inlineAttrs = ':ratio=\"2\"'\nrenderComponent({ inlineAttrs })\nconst image = screen.getByTestId('image')\nconst aspectRatioBox = screen.getByTestId('aspectRatioBox')\n",
        "date": "13.06.2020 16:20:37",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "fix: duplicate \"span\" when pasting, IE support",
        "sim_diff": "diff --git a/src/lib/core.js b/src/lib/core.js @@ -1691,26 +1691,30 @@ export default function (context, pluginCallButtons, plugins, lang, options, _re\nlet duple = false;\n(function recursionFunc(ancestor) {\nif (util.isWysiwygDiv(ancestor) || !util.isTextStyleElement(ancestor)) return;\n-\nif (ancestor.nodeName === nodeName) {\nduple = true;\n- (ancestor.style.cssText.match(/[^;]+;/g) || []).forEach(function(v){\n- let i;\n- if ((i = oStyles.indexOf(v.trim())) > -1) {\n- oStyles.splice(i, 1);\n+ const styles = ancestor.style.cssText.match(/[^;]+;/g) || [];\n+ for (let i = 0, len = styles.length, j; i < len; i++) {\n+ if ((j = oStyles.indexOf(styles[i].trim())) > -1) {\n+ oStyles.splice(j, 1);\n+ }\n+ }\n+ for (let i = 0, len = ancestor.classList.length; i < len; i++) {\n+ oNode.classList.remove(ancestor.classList[i]);\n}\n- });\n- ancestor.classList.forEach(function(v){\n- oNode.classList.remove(v);\n- });\n}\nrecursionFunc(ancestor.parentElement);\n})(parentNode);\nif (duple) {\n- if (!(oNode.style.cssText = oStyles.join(' '))) oNode.removeAttribute('style');\n- if (!oNode.attributes.length) oNode.setAttribute('data-se-duple', 'true');\n+ if (!(oNode.style.cssText = oStyles.join(' '))) {\n+ oNode.setAttribute('style', '');\n+ oNode.removeAttribute('style');\n+ }\n+ if (!oNode.attributes.length) {\n+ oNode.setAttribute('data-se-duple', 'true');\n+ }\n}\nreturn oNode;\n"
    },
    {
        "msg": "chore: update test envs",
        "diff": "diff --git a/.travis.yml b/.travis.yml @@ -6,13 +6,10 @@ language: node_js\nnotifications:\nemail: false\nnode_js:\n+ - 8\n+ - 7\n- 6\n- - 5\n- 4\n- # - iojs-v3\n- # - iojs-v2\n- # - iojs-v1\n- - '0.10'\nbefore_install:\n- npm i -g npm@^2.0.0\nbefore_script:\n",
        "date": "04.09.2017 20:14:18",
        "repo": "remy/nodemon",
        "type": "chore",
        "sim_msg": "chore: reorder node order to run latest to oldest",
        "sim_diff": "diff --git a/.travis.yml b/.travis.yml @@ -6,12 +6,12 @@ cache:\nnotifications:\nemail: false\nnode_js:\n- - \"8.9.0\"\n- - \"8.16.0\"\n- - \"9.11.2\"\n- - \"10.16.0\"\n- - \"lts/*\"\n- node\n+ - \"lts/*\"\n+ - \"10.16.0\"\n+ - \"9.11.2\"\n+ - \"8.16.0\"\n+ - \"8.9.0\"\ninstall: npm install\n"
    },
    {
        "msg": "chore(Footer): use light color for footer\nchore(Footer): use light color for footer",
        "diff": "diff --git a/src/common/components/parts/Footer/style.jsx b/src/common/components/parts/Footer/style.jsx @@ -5,7 +5,7 @@ export const StyledFooter = styled.footer`\nwidth: 100%;\ndisplay: flex;\nalign-items: center;\n- background-color: ${props => props.theme.primaryColor};\n+ background-color: ${props => props.theme.primaryColorLight};\ncolor: ${props => props.theme.primaryTextColor};\nheight: 90px;\nbox-shadow: inset 0 0 0 0 ${props => props.theme.primaryColorDark},\n",
        "date": "17.09.2017 15:07:40",
        "repo": "metnew/suicrux",
        "type": "chore",
        "sim_msg": "feat: add optimizely",
        "sim_diff": "diff --git a/src/components/shared/footer.js b/src/components/shared/footer.js @@ -83,6 +83,8 @@ const Footer = () => (\n<div className='Copyrights'>&copy; 2017 by Syncano. All rights reserved.</div>\n+ <script src=\"https://cdn.optimizely.com/js/8415101584.js\"></script>\n+\n<style jsx>{`\n.Footer {\nmax-width: 880px;\n"
    },
    {
        "msg": "chore: docs service worker update",
        "diff": "diff --git a/packages/chakra-ui-docs/static/sw.js b/packages/chakra-ui-docs/static/sw.js -importScripts('https://cdn.jsdelivr.net/npm/workbox-cdn@4.3.1/workbox/workbox-sw.js')\n-\n-// --------------------------------------------------\n-// Configure\n-// --------------------------------------------------\n-\n-// Set workbox config\n-workbox.setConfig({\n- 'debug': false\n-})\n-\n-// Start controlling any existing clients as soon as it activates\n-workbox.core.clientsClaim()\n-\n-// Skip over the SW waiting lifecycle stage\n-workbox.core.skipWaiting()\n-\n-workbox.precaching.cleanupOutdatedCaches()\n-\n-// --------------------------------------------------\n-// Precaches\n-// --------------------------------------------------\n-\n-// Precache assets\n-\n-// --------------------------------------------------\n-// Runtime Caching\n-// --------------------------------------------------\n-\n-// Register route handlers for runtimeCaching\n-workbox.routing.registerRoute(new RegExp('/_nuxt/'), new workbox.strategies.CacheFirst({}), 'GET')\n-workbox.routing.registerRoute(new RegExp('/'), new workbox.strategies.NetworkFirst({}), 'GET')\n+// THIS FILE SHOULD NOT BE VERSION CONTROLLED\n",
        "date": "18.04.2020 23:33:30",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "docs(app): sets workbox precache revisions to null to get rid of warnings",
        "sim_diff": "diff --git a/docs-src/tools/workbox.config.js b/docs-src/tools/workbox.config.js @@ -3,7 +3,7 @@ const prependBaseUrl = baseUrl => async manifest => ({\nmanifest: manifest.map((entry) => {\nentry.url = `${baseUrl}/${entry.url}`;\nif (process.env.NODE_ENV === 'production') {\n- entry.revision = undefined;\n+ entry.revision = null;\n}\nreturn entry;\n})\n"
    },
    {
        "msg": "chore: :wrench: update tailwind config",
        "diff": "diff --git a/tailwind.config.cjs b/tailwind.config.cjs -module.exports = {\n+const config = {\nmode: 'jit',\npurge: ['./src/**/*.{html,js,svelte,ts}'],\ntheme: {\n@@ -6,3 +6,5 @@ module.exports = {\n},\nplugins: [require('@tailwindcss/typography'), require('daisyui')],\n}\n+\n+module.exports = config\n",
        "date": "23.08.2021 18:10:20",
        "repo": "spences10/cheat-sheets",
        "type": "chore",
        "sim_msg": "feat(tailwind): use purge options from tailwind config",
        "sim_diff": "diff --git a/src/generators/tailwind.js b/src/generators/tailwind.js @@ -14,10 +14,15 @@ const defaultPurgeCSSExtractor = /[\\w-/:%.]+(?<!:)/g\nmodule.exports = {\nfromFile: async (config, env) => {\n+ const tailwindConfig = isObject(config) ? getPropValue(config, 'build.tailwind.config') || {} : 'tailwind.config.js'\n+ const tailwindConfigObject = importCwd.silent(`./${tailwindConfig}`) || tailwindConfig\n+\nconst purgeCSSOptions = getPropValue(config, 'purgeCSS') || {}\n+\nconst templatesRoot = getPropValue(config, 'build.templates.root')\nconst templateSources = Array.isArray(templatesRoot) ? templatesRoot.map(item => `${item}/**/*.*`) : [`./${templatesRoot}/**/*.*`]\n+ const tailwindSources = Array.isArray(tailwindConfigObject.purge) ? tailwindConfigObject.purge : (isObject(tailwindConfigObject.purge) ? tailwindConfigObject.purge.content : [])\nconst extraPurgeSources = purgeCSSOptions.content || []\nconst purgeSources = [\n@@ -25,12 +30,13 @@ module.exports = {\n'src/partials/**/*.*',\n'src/components/**/*.*',\n...templateSources,\n+ ...tailwindSources,\n...extraPurgeSources\n]\n- const extractor = purgeCSSOptions.extractor || defaultPurgeCSSExtractor\n- const purgeWhitelist = purgeCSSOptions.whitelist || []\n- const purgewhitelistPatterns = purgeCSSOptions.whitelistPatterns || []\n+ const extractor = getPropValue(tailwindConfigObject, 'purge.options.extractor') || purgeCSSOptions.extractor || defaultPurgeCSSExtractor\n+ const purgeWhitelist = getPropValue(tailwindConfigObject, 'purge.options.whitelist') || purgeCSSOptions.whitelist || []\n+ const purgewhitelistPatterns = getPropValue(tailwindConfigObject, 'purge.options.whitelistPatterns') || purgeCSSOptions.whitelistPatterns || []\nconst purgeCssPlugin = env === 'local' ? () => {} : purgecss({\ncontent: purgeSources,\n@@ -41,10 +47,6 @@ module.exports = {\nconst mergeLonghandPlugin = env === 'local' ? () => {} : mergeLonghand()\n- const tailwindConfig = isObject(config) ? getPropValue(config, 'build.tailwind.config') || {} : 'tailwind.config.js'\n- const tailwindConfigObject = importCwd.silent(`./${tailwindConfig}`) || tailwindConfig\n- const tailwindPlugin = tailwind({target: 'ie11', ...tailwindConfigObject})\n-\nconst postcssUserPlugins = getPropValue(config, 'build.postcss.plugins') || []\nconst userFilePath = getPropValue(config, 'build.tailwind.css')\n@@ -52,6 +54,14 @@ module.exports = {\nconst cssString = await fs.pathExists(userFilePath)\n.then(exists => exists ? fs.readFile(path.resolve(userFilePath), 'utf8') : '@tailwind components; @tailwind utilities;')\n+ const tailwindPlugin = tailwind({\n+ target: 'ie11',\n+ ...tailwindConfigObject,\n+ purge: {\n+ enabled: false\n+ }\n+ })\n+\nreturn postcss([\natImport({path: userFilePath ? path.dirname(userFilePath) : []}),\npostcssNested(),\n"
    },
    {
        "msg": "chore: Removes duplicated dev deps in CLI",
        "diff": "diff --git a/packages/cli/package.json b/packages/cli/package.json \"bugs\": \"https://github.com/preactjs/preact-cli/issues\",\n\"homepage\": \"https://github.com/preactjs/preact-cli\",\n\"devDependencies\": {\n- \"eslint\": \"^7.12.1\",\n\"html-looks-like\": \"^1.0.2\",\n\"jest\": \"^26.0.1\",\n- \"lerna\": \"^3.16.4\",\n- \"lint-staged\": \"^10.5.0\",\n\"mkdirp\": \"^1.0.3\",\n\"ncp\": \"^2.0.0\",\n\"node-sass\": \"^4.12.0\",\n",
        "date": "03.02.2021 04:33:16",
        "repo": "preactjs/preact-cli",
        "type": "chore",
        "sim_msg": "refactor: refine deps",
        "sim_diff": "diff --git a/package.json b/package.json \"type\": \"git\",\n\"url\": \"https://github.com/avwo/whistle.git\"\n},\n- \"gitHooks\": {\n- \"pre-commit\": \"lint-staged\"\n- },\n- \"lint-staged\": {\n- \"*.{js,jsx,less,md,json}\": [\n- \"prettier --write\"\n- ]\n- },\n\"dependencies\": {\n\"adm-zip\": \"0.5.9\",\n\"async-limiter\": \"2.0.0\",\n\"test\": \"node test/index.test.js\",\n\"lint\": \"eslint *.js ./lib ./bin ./biz ./test ./docs/script\",\n\"lintfix\": \"eslint --fix *.js ./lib ./bin ./biz ./test ./docs/script\",\n- \"prettier\": \"prettier --write ./biz/webui/htdocs/src/ ./lib\",\n\"cov\": \"node_modules/istanbul/lib/cli.js cover node_modules/.bin/tape -- test/index.test.js\",\n\"docs\": \"gitbook build ./docs/zh ../avwo.github.io/whistle\",\n\"docs:build\": \"vuepress build docs\",\n\"codemirror\": \"5.5.0\",\n\"coveralls\": \"^2.11.12\",\n\"css-loader\": \"0.16.0\",\n- \"eslint\": \"^8.7.0\",\n- \"eslint-config-airbnb\": \"^19.0.4\",\n- \"eslint-config-prettier\": \"^8.3.0\",\n- \"eslint-plugin-prettier\": \"^4.0.0\",\n- \"eslint-plugin-react\": \"^7.28.0\",\n+ \"eslint\": \"^2.8.0\",\n+ \"eslint-plugin-react\": \"^4.3.0\",\n\"file-loader\": \"0.8.4\",\n\"glob\": \"^7.1.2\",\n\"istanbul\": \"^0.4.4\",\n\"jquery\": \"3.3.1\",\n\"js-base64\": \"^2.4.5\",\n\"lodash.startcase\": \"^4.4.0\",\n- \"prettier\": \"^2.5.1\",\n\"prop-types\": \"^15.5.8\",\n- \"qrcode\": \"^1.5.0\",\n+ \"qrcode\": \"^1.2.0\",\n\"react\": \"^15.6.2\",\n\"react-base16-styling\": \"^0.5.1\",\n\"react-dom\": \"^15.6.2\",\n"
    },
    {
        "msg": "chore: remove defaultIsChecked from story",
        "diff": "diff --git a/packages/chakra-ui-core/src/CRadio/CRadio.stories.js b/packages/chakra-ui-core/src/CRadio/CRadio.stories.js @@ -6,7 +6,7 @@ storiesOf('UI | Radio', module)\ncomponents: { CFragment, CRadio },\ntemplate: `\n<div>\n- <CRadio value=\"male\" v-model=\"maleChecked\" defaultIsChecked name=\"bee\">\n+ <CRadio value=\"male\" v-model=\"maleChecked\" name=\"bee\">\nMale\n</CRadio>\n<CRadio ml=\"3\" value=\"female\" name=\"bee\">\n",
        "date": "24.04.2020 11:51:37",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "refactor: separates knobs into logical groupings",
        "sim_diff": "diff --git a/src/__experimental__/components/radio-button/radio-button.stories.js b/src/__experimental__/components/radio-button/radio-button.stories.js @@ -27,11 +27,25 @@ function makeStory(name, themeSelector, component) {\nreturn [name, component, metadata];\n}\n-const radioComponent = () => {\n- const knobs = defaultKnobs();\n+const groupedKnobs = (type, themeName) => {\n+ return {\n+ key: type,\n+ label: text(`${type} label`, `Example ${type} radio button`, type),\n+ labelHelp: text(`${type} labelHelp`, 'This text provides more information for the label.', type),\n+ value: text(`${type} value`, type, type),\n+ disabled: boolean(`${type} disabled`, false, type),\n+ reverse: boolean(`${type} reverse`, false, type),\n+ size: themeName !== 'classic' ? select('size', OptionsHelper.sizesBinary, 'small', type) : undefined\n+ };\n+};\n+\n+const radioComponent = themeName => () => {\n+ const knobs = defaultKnobs(themeName);\n+ const labelHelp = text('labelHelp', 'Group label helper');\nreturn (\n<RadioButtonGroup\n+ labelHelp={ labelHelp }\ngroupName='frequency'\nlabel={ text('groupLabel', 'Please select a frequency from the options below') }\ninitialValue='weekly'\n@@ -40,29 +54,28 @@ const radioComponent = () => {\n<RadioButton\nid='input-1'\nname='input-1'\n- label={ text('radioOneLabel', 'Example Weekly Radio Button') }\n- value={ text('radioOneValue', 'weekly') }\n+ checked\n{ ...knobs }\n+ { ...groupedKnobs('weekly', themeName) }\n/>\n<RadioButton\nid='input-2'\nname='input-2'\n- label={ text('radioTwoLabel', 'Example Monthly Radio Button') }\n- value={ text('radioTwoValue', 'monthly') }\n{ ...knobs }\n+ { ...groupedKnobs('monthly', themeName) }\n/>\n<RadioButton\n// id prop intentionally left off here, to demonstrate automatic GUID generation\nname='input-2'\n- label={ text('radioThreeLabel', 'Example Annual Radio Button') }\n- value={ text('radioThreeValue', 'annually') }\n+ key='Radio Three'\n{ ...knobs }\n+ { ...groupedKnobs('yearly', themeName) }\n/>\n</RadioButtonGroup>\n);\n};\n-const radioComponentWithValidation = () => {\n+const radioComponentWithValidation = themeName => () => {\nconst validationTypes = ['error', 'warning', 'info'];\nconst labelHelp = text('labelHelp', 'Group label helper');\n@@ -100,12 +113,11 @@ const radioComponentWithValidation = () => {\n>\n{validationTypes.map(vType => (\n<RadioButton\n- { ...defaultKnobs() }\n- key={ `key-${vType}` }\n+ { ...groupedKnobs(vType, themeName) }\n+ { ...defaultKnobs(themeName) }\nid={ `id-${vType}` }\nname={ vType }\nlabel={ `Example Radion Button (${vType})` }\n- value={ vType }\nonChange={ handleGroupChange }\nlabelHelp=''\n/>\n@@ -116,10 +128,10 @@ const radioComponentWithValidation = () => {\n};\nstoriesOf('Experimental/RadioButton', module)\n- .add(...makeStory('default', dlsThemeSelector, radioComponent))\n- .add(...makeStory('classic', classicThemeSelector, radioComponent))\n- .add(...makeStory('validations', dlsThemeSelector, radioComponentWithValidation))\n- .add(...makeStory('validations classic', classicThemeSelector, radioComponentWithValidation));\n+ .add(...makeStory('default', dlsThemeSelector, radioComponent()))\n+ .add(...makeStory('classic', classicThemeSelector, radioComponent('classic')))\n+ .add(...makeStory('validations', dlsThemeSelector, radioComponentWithValidation()))\n+ .add(...makeStory('validations classic', classicThemeSelector, radioComponentWithValidation('classic')));\nfunction handleChange(event) {\nconst { value } = event.target;\n@@ -134,14 +146,11 @@ function handleGroupChange(event) {\naction('Selected')(value);\n}\n-function defaultKnobs() {\n+function defaultKnobs(themeName) {\nreturn ({\n- disabled: boolean('disabled', false),\n- error: boolean('error', false),\n+ error: themeName === 'classic' ? boolean('error', false) : undefined,\nfieldHelp: text('fieldHelp', 'This text provides help for the input.'),\nfieldHelpInline: boolean('fieldHelpInline', false),\n- reverse: boolean('reverse', false),\n- labelHelp: text('labelHelp', 'This text provides more information for the label.'),\ninputWidth: number('inputWidth', 0, {\nrange: true,\nmin: 0,\n@@ -159,7 +168,6 @@ function defaultKnobs() {\nOptionsHelper.alignBinary,\nOptionsHelper.alignBinary[0]\n),\n- size: select('size', OptionsHelper.sizesBinary, 'small'),\nonChange: handleChange\n});\n}\n"
    },
    {
        "msg": "chore(readme): updated readme",
        "diff": "diff --git a/README.md b/README.md @@ -16,12 +16,12 @@ You can also view all developed components in Storybook!\n#### Project TODO:\n- [x] Setup Storybook for components UI\n- [x] Theme Provider\n+- [x] Develop styling scheme for components with styled components\n- [x] Setup Vue.js plugin system\n- [x] Provide Theme\n- - [ ] Observe theme and set it dynamically in javascript with ease.\n+ - [x] Observe theme and set it dynamically in javascript with ease.\n- [ ] Provide icons API for icons component\n-- [ ] Develop styling scheme for components with styled components\n+- [ ] Accessibility (Focus) Styling\n- [ ] Setup NPM distribution\n- [ ] Set up type system for components with Typescript\n-- [ ] Accessibility (Focus) Styling\n",
        "date": "21.10.2019 03:50:03",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "fix(docs): bootstrap-icons.css version",
        "sim_diff": "diff --git a/docs/src/components/page-parts/umd/UmdTags.vue b/docs/src/components/page-parts/umd/UmdTags.vue @@ -71,7 +71,7 @@ const cssMap = {\n'eva-icons': 'cdn.jsdelivr.net/npm/eva-icons@^1.0.0/style/eva-icons.css',\nthemify: 'themify.me/wp-content/themes/themify-v32/themify-icons/themify-icons.css',\n'line-awesome': 'maxst.icons8.com/vue-static/landings/line-awesome/font-awesome-line-awesome/css/all.min.css',\n- 'bootstrap-icons': 'cdn.jsdelivr.net/npm/bootstrap-icons@1.4.0/font/bootstrap-icons.css',\n+ 'bootstrap-icons': 'cdn.jsdelivr.net/npm/bootstrap-icons@^1.4.0/font/bootstrap-icons.css',\nanimate: 'cdn.jsdelivr.net/npm/animate.css@^4.0.0/animate.min.css'\n}\n"
    },
    {
        "msg": "chore(docs): button group spacing\nThis removes `{' '}` which was added to the doc in but has not effects on `Button`s inside `ButtonGroup`.",
        "diff": "diff --git a/docs/lib/examples/ButtonGroup.js b/docs/lib/examples/ButtonGroup.js @@ -5,8 +5,8 @@ export default class Example extends React.Component {\nrender() {\nreturn (\n<ButtonGroup>\n- <Button>Left</Button>{' '}\n- <Button>Middle</Button>{' '}\n+ <Button>Left</Button>\n+ <Button>Middle</Button>\n<Button>Right</Button>\n</ButtonGroup>\n);\n",
        "date": "24.03.2018 02:45:50",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "sim_msg": "test(e2e): enable gpu acceleration in button group cartesian\ntest(e2e): update chrome button group baseline",
        "sim_diff": "diff --git a/e2e/visual/components/CartesianButtonGroup.jsx b/e2e/visual/components/CartesianButtonGroup.jsx @@ -6,7 +6,7 @@ import { Cartesian } from '@compositor/kit'\nimport ButtonGroup from '../../../packages/ButtonGroup'\nconst CartesianButtonGroup = props => (\n- <React.Fragment>\n+ <div style={{ transform: 'translateZ(0)' }}>\n<Cartesian\n{...props}\ncomponent={ButtonGroup}\n@@ -34,7 +34,7 @@ const CartesianButtonGroup = props => (\n],\n]}\n/>\n- </React.Fragment>\n+ </div>\n)\nexport default { name: 'ButtonGroup', Component: CartesianButtonGroup }\n"
    },
    {
        "msg": "chore: add circularprogress component sig",
        "diff": "diff --git a/packages/chakra-ui-core/src/CCircularProgress/CCircularProgress.js b/packages/chakra-ui-core/src/CCircularProgress/CCircularProgress.js * @see A11y https://github.com/chakra-ui/chakra-ui-vue/blob/master/packages/chakra-ui-core/src/CCircularProgress/accessibility.md\n*/\n-\nimport { baseProps } from '../config/props'\nimport { forwardProps } from '../utils'\nimport { getComputedProps } from './utils/circularprogress.styles'\n@@ -39,6 +38,9 @@ const CCircularProgressLabel = {\ntransform: 'translate(-50%, -50%)',\nfontSize: '0.25em',\n...forwardProps(this.$props)\n+ },\n+ attrs: {\n+ 'data-chakra-component': 'CCircularProgressLabel'\n}\n}, this.$slots.default)\n}\n@@ -126,7 +128,10 @@ const CCircularProgress = {\n...rootData.props,\n...forwardProps(this.$props)\n},\n- attrs: rootData.attrs\n+ attrs: {\n+ ...rootData.attrs,\n+ 'data-chakra-component': 'CCircularProgress'\n+ }\n}, [\nh(CBox, {\nprops: svgData.props,\n",
        "date": "16.04.2020 21:55:06",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "chore: Restore missing comma",
        "sim_diff": "diff --git a/src/technologies/c.json b/src/technologies/c.json 66\n],\n\"description\": \"Chakra UI is a simple, modular and accessible component library that gives you the building blocks you need to build your React applications.\",\n- \"dom\": \"html[style*='chakra-ui-color-mode'], body.chakra-ui-dark, body.chakra-ui-light, div.chakra-portal\"\n+ \"dom\": \"html[style*='chakra-ui-color-mode'], body.chakra-ui-dark, body.chakra-ui-light, div.chakra-portal\",\n\"icon\": \"Chakra UI.svg\",\n\"implies\": \"React\",\n\"oss\": true,\n"
    },
    {
        "msg": "chore(docs): updated App.js example",
        "diff": "diff --git a/docs/lib/Home/index.js b/docs/lib/Home/index.js @@ -80,7 +80,7 @@ npm install --save reactstrap react react-dom`}\n{`import { Button } from 'reactstrap';`}\n</PrismCode>\n</pre>\n- <p>Now you are ready to use the imported reactstrap components within your component hierarchy defined in the render method. Here is an example <a href=\"https://gist.github.com/eddywashere/e13033c0e655ab7cda995f8bc77ce40d\" target=\"_blank\"><code>App.js</code></a> redone using reactstrap.</p>\n+ <p>Now you are ready to use the imported reactstrap components within your component hierarchy defined in the render method. Here is an example <a href=\"https://gist.github.com/Thomas-Smyth/006fd507a7295f17a8473451938f9935\" target=\"_blank\"><code>App.js</code></a> redone using reactstrap.</p>\n<h2 className=\"mt-5\">CDN</h2>\n<p>Reactstrap can be included directly in your application's bundle or excluded during compilation and linked directly to a CDN.</p>\n<pre>\n",
        "date": "01.05.2018 21:53:14",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "sim_msg": "docs: fix example components context import paths",
        "sim_diff": "diff --git a/styleguide/src/sections/InstallingandImporting.md b/styleguide/src/sections/InstallingandImporting.md @@ -24,21 +24,20 @@ Most components in this library do not directly import other components in this\nComponent injection also allows you to, for example, use a Button component from another library while still using any of our components that render buttons for you.\n-Check out the [@reactioncommerce/components-context](https://github.com/reactioncommerce/components-context) package documentation for details about how to provide this context. To get started quickly, you may start by using the following object as the `value` of your app's `ComponentsProvider`.\n+Check out the [@reactioncommerce/components-context](https://github.com/reactioncommerce/components-context) package documentation for details about how to provide this context. To get started quickly, you may start by using the following object as the `value` of your app's `ComponentsProvider`. However, we recommend that you remove the imports for any components that aren't used by the components you use. (Refer to `components` prop documentation for each component you use.)\n```jsx static\n-import React from \"react\";\n-import iconClear from \"@reactioncommerce/svg/iconClear\";\n-import iconError from \"@reactioncommerce/svg/iconError\";\n-import iconValid from \"@reactioncommerce/svg/iconValid\";\n-import iconExpand from \"@reactioncommerce/svg/iconExpand\";\n-import iconPlus from \"@reactioncommerce/svg/iconPlus\";\n-import iconAmericanExpress from \"@reactioncommerce/svg/iconAmericanExpress\";\n-import iconDiscover from \"@reactioncommerce/svg/iconDiscover\";\n-import iconLock from \"@reactioncommerce/svg/iconLock\";\n-import iconMastercard from \"@reactioncommerce/svg/iconMastercard\";\n-import iconVisa from \"@reactioncommerce/svg/iconVisa\";\n-import spinner from \"@reactioncommerce/svg/spinner\";\n+import iconClear from \"@reactioncommerce/components/svg/iconClear\";\n+import iconError from \"@reactioncommerce/components/svg/iconError\";\n+import iconValid from \"@reactioncommerce/components/svg/iconValid\";\n+import iconExpand from \"@reactioncommerce/components/svg/iconExpand\";\n+import iconPlus from \"@reactioncommerce/components/svg/iconPlus\";\n+import iconAmericanExpress from \"@reactioncommerce/components/svg/iconAmericanExpress\";\n+import iconDiscover from \"@reactioncommerce/components/svg/iconDiscover\";\n+import iconLock from \"@reactioncommerce/components/svg/iconLock\";\n+import iconMastercard from \"@reactioncommerce/components/svg/iconMastercard\";\n+import iconVisa from \"@reactioncommerce/components/svg/iconVisa\";\n+import spinner from \"@reactioncommerce/components/svg/spinner\";\nimport Accordion from \"@reactioncommerce/components/Accordion/v1\";\nimport AddressBook from \"@reactioncommerce/components/AddressBook/v1\";\nimport AddressForm from \"@reactioncommerce/components/AddressForm/v1\";\n"
    },
    {
        "msg": "chore(maintainers): update list of maintainers",
        "diff": "diff --git a/README.md b/README.md @@ -227,6 +227,8 @@ $ npm test\n- [chriso](https://github.com/chriso) - **Chris O'Hara** (author)\n- [profnandaa](https://github.com/profnandaa) - **Anthony Nandaa**\n+- [ezkemboi](https://github.com/ezkemboi) - **Ezrqn Kemboi**\n+- [tux-tn](https://github.com/tux-tn) - **Sarhan Aissi**\n## Reading\n",
        "date": "17.02.2022 09:02:32",
        "repo": "validatorjs/validator.js",
        "type": "chore",
        "sim_msg": "docs: add dnlup to collaborators",
        "sim_diff": "diff --git a/README.md b/README.md @@ -726,6 +726,7 @@ Refs: https://tools.ietf.org/html/rfc7230#section-6.3.2\n## Collaborators\n+* [__Daniele Belardi__](https://github.com/dnlup), <https://www.npmjs.com/~dnlup>\n* [__Matteo Collina__](https://github.com/mcollina), <https://www.npmjs.com/~matteo.collina>\n* [__Robert Nagy__](https://github.com/ronag), <https://www.npmjs.com/~ronag>\n"
    },
    {
        "msg": "chore: package: v28.16.0",
        "diff": "diff --git a/packages/putout/ChangeLog b/packages/putout/ChangeLog +2023.02.04, v28.16.0\n+\n+fix:\n+- @putout/plugin-regexp: remove-useless-group: report after transform\n+\n+feature:\n+- @putout/plugin-apply-maybe: add\n+- @putout/plugin-regexp: apply-literal-notation: report: message\n+- @putout/plugin-regexp: apply-literal-notation: improve support of @putout/plugin-remove-useless-escape\n+- @putout/plugin-regexp: remove-useless-group: improve support of apply-literal-notation\n+\n2023.02.03, v28.15.0\nfeature:\n",
        "date": "04.02.2023 22:42:10",
        "repo": "coderaiser/putout",
        "type": "chore",
        "sim_msg": "chore(csv-stringify): package: contributing",
        "sim_diff": "diff --git a/CHANGELOG.md b/CHANGELOG.md ## Trunk\n+* package: contributing\n+* package: code of conduct\n* quoted_match: ts types string or RegExp\n## Version 5.3.3\n"
    },
    {
        "msg": "chore: bootstrap ci",
        "diff": "diff --git a/.github/workflows/nodejs.yml b/.github/workflows/nodejs.yml @@ -24,7 +24,8 @@ jobs:\nuses: actions/setup-node@v1\nwith:\nnode-version: ${{ matrix.node-version }}\n- - run: yarn bootstrap --frozen-lockfile\n+ - run: yarn install --frozen-lockfile\n+ - run: yarn bootstrap\n- run: yarn build --if-present\n- run: yarn test\nenv:\n",
        "date": "09.05.2020 18:35:53",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "ci: update to yarn instead of npm",
        "sim_diff": "diff --git a/.github/workflows/node.js.yml b/.github/workflows/node.js.yml @@ -25,6 +25,6 @@ jobs:\nuses: actions/setup-node@v1\nwith:\nnode-version: ${{ matrix.node-version }}\n- - run: npm ci\n- - run: npm run build --if-present\n- - run: npm test\n+ - run: yarn install --frozen-lockfile\n+ - run: yarn run build --if-present\n+ - run: yarn test\n"
    },
    {
        "msg": "chore: remove unused screen",
        "diff": "diff --git a/packages/chakra-ui-core/src/CButtonGroup/tests/CButtonGroup.test.js b/packages/chakra-ui-core/src/CButtonGroup/tests/CButtonGroup.test.js import { CButton, CButtonGroup } from '../..'\n-import { render, screen } from '@/tests/test-utils'\n+import { render } from '@/tests/test-utils'\nconst renderComponent = (props) => {\nconst base = {\n",
        "date": "04.07.2020 16:16:25",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "test(Root): add MoleculeAccordion tests",
        "sim_diff": "diff --git a/test/molecule/accordion/index.js b/test/molecule/accordion/index.js * */\n/* eslint react/jsx-no-undef:0 */\n+/* eslint no-undef:0 */\n-// import React from 'react'\n-// import {render} from '@testing-library/react'\n+import React from 'react'\n+import ReactDOM from 'react-dom'\nimport chai, {expect} from 'chai'\nimport chaiDOM from 'chai-dom'\n+import {render} from '@testing-library/react'\nchai.use(chaiDOM)\n+const setupBuilder = Component => props => {\n+ const container = document.createElement('div')\n+ container.setAttribute('id', 'test-container')\n+ const utils = render(<Component {...props} />, {\n+ container: document.body.appendChild(container)\n+ })\n+ return utils\n+}\n+\ndescribe('molecule/accordion', () => {\n- it.skip('Render', () => {\n+ const Component = MoleculeAccordion\n+ const setup = setupBuilder(Component)\n+\n+ it('should render without crashing', () => {\n+ // Given\n+ const props = {\n+ children: [<div key={0}>element 1</div>, <div key={1}>element 2</div>]\n+ }\n+\n+ // When\n+ const component = <Component {...props} />\n+\n+ // Then\n+ const div = document.createElement('div')\n+ ReactDOM.render(component, div)\n+ ReactDOM.unmountComponentAtNode(div)\n+ })\n+\n+ it('should NOT render null', () => {\n+ // Given\n+ const props = {\n+ children: [<div key={0}>element 1</div>, <div key={1}>element 2</div>]\n+ }\n+\n+ // When\n+ const {container} = setup(props)\n+\n+ // Then\n+ expect(container.innerHTML).to.be.a('string')\n+ expect(container.innerHTML).to.not.have.lengthOf(0)\n+ })\n+\n+ it.skip('example', () => {\n// Example TO BE DELETED!!!!\n- // const {getByRole} = render(<AtomButton>HOLA</AtomButton>)\n+\n+ // Given\n+ // const props = {}\n+\n+ // When\n+ // const {getByRole} = setup(props)\n+\n+ // Then\n// expect(getByRole('button')).to.have.text('HOLA')\nexpect(true).to.be.eql(false)\n})\n"
    },
    {
        "msg": "chore: package: v6.2.0",
        "diff": "diff --git a/packages/engine-processor/package.json b/packages/engine-processor/package.json {\n\"name\": \"@putout/engine-processor\",\n- \"version\": \"6.1.0\",\n+ \"version\": \"6.2.0\",\n\"type\": \"commonjs\",\n\"author\": \"coderaiser <mnemonic.enemy@gmail.com> (https://github.com/coderaiser)\",\n\"description\": \"run processors\",\n",
        "date": "20.09.2022 17:40:25",
        "repo": "coderaiser/putout",
        "type": "chore",
        "sim_msg": "chore: Release v1.69.0",
        "sim_diff": "diff --git a/package.json b/package.json {\n\"name\": \"serverless\",\n- \"version\": \"1.68.0\",\n+ \"version\": \"1.69.0\",\n\"engines\": {\n\"node\": \">=6.0\"\n},\n"
    },
    {
        "msg": "chore: auto publish",
        "diff": "diff --git a/.github/workflows/release.yml b/.github/workflows/release.yml @@ -24,7 +24,11 @@ jobs:\n- name: Install Dependencies\nrun: yarn\n- - name: Create Release Pull Request\n+ - name: Create Release Pull Request or Publish to npm\nuses: changesets/action@master\n+ with:\n+ # This expects you to have a script called release which does a build for your packages and calls changeset publish\n+ publish: yarn release\nenv:\nGITHUB_TOKEN: ${{ secrets.REPO_SCOPED_TOKEN }}\n+ NPM_TOKEN: ${{ secrets.PREACT_NPM_TOKEN }}\n",
        "date": "26.05.2021 03:35:33",
        "repo": "preactjs/preact-cli",
        "type": "chore",
        "sim_msg": "chore: fix release token key",
        "sim_diff": "diff --git a/.github/workflows/release.yml b/.github/workflows/release.yml @@ -45,4 +45,4 @@ jobs:\npublish: yarn release\nenv:\nGITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n- NPM_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}\n+ NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}\n"
    },
    {
        "msg": "chore: Update CI workflow.",
        "diff": "diff --git a/.github/workflows/test.yml b/.github/workflows/test.yml @@ -19,6 +19,9 @@ jobs:\nsteps:\n- uses: actions/checkout@v3\n+ - name: Ensure apt-get is updated\n+ run: sudo apt-get update\n+\n- name: Install Canvas and XML dependencies\nrun: sudo apt-get install -y libxml2-utils\n",
        "date": "25.03.2022 09:05:16",
        "repo": "vega/vega",
        "type": "chore",
        "sim_msg": "ci(test): disable slow macos tests for now",
        "sim_diff": "diff --git a/.github/workflows/test.yml b/.github/workflows/test.yml @@ -27,7 +27,7 @@ jobs:\nstrategy:\nmatrix:\nnode-version: ['12', '14', '16']\n- os: [macOS-latest, ubuntu-latest]\n+ os: [ubuntu-latest]\nsteps:\n- name: Checkout\nuses: actions/checkout@v2\n"
    },
    {
        "msg": "chore(RoutingWrapper): remove stage-0 syntax, fix types import path\nchore(RoutingWrapper): remove stage-0 syntax, fix types import path",
        "diff": "diff --git a/src/common/components/addons/RoutingWrapper/index.jsx b/src/common/components/addons/RoutingWrapper/index.jsx @@ -5,7 +5,7 @@ import React, {Component} from 'react'\nimport {Switch, Redirect} from 'react-router-dom'\nimport LazyLoad from 'components/addons/LazyLoad'\nimport {getAuthState} from 'selectors'\n-import type {RouteItem} from 'routing'\n+import type {RouteItem} from 'types'\ntype Props = {\nroutes: RouteItem[],\n@@ -52,7 +52,7 @@ export default class RoutingWrapper extends Component {\nconst {path, exact, strict, component, lazy} = a\n// can visitor access this route?\n// this function determinates is user allowed to visit route\n- const canAccess = ::this.authCheck\n+ const canAccess = this.authCheck.bind(this)\n// select only props that we need\nconst b = {path, exact, strict, canAccess}\n",
        "date": "17.09.2017 14:28:32",
        "repo": "metnew/suicrux",
        "type": "chore",
        "sim_msg": "refactor: convert Root to stateless component",
        "sim_diff": "diff --git a/renderer/containers/Root.js b/renderer/containers/Root.js -import React from 'react'\n+import React, { useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Route, Switch } from 'react-router-dom'\n@@ -32,52 +32,12 @@ const PageWithLoading = withLoading(Page)\n/**\n* Root component that deals with mounting the app and managing top level routing.\n*/\n-class Root extends React.Component {\n- static propTypes = {\n- hasWallets: PropTypes.bool,\n- history: PropTypes.object.isRequired,\n- initDatabase: PropTypes.func.isRequired,\n- initSettings: PropTypes.func.isRequired,\n- initTheme: PropTypes.func.isRequired,\n- isAppReady: PropTypes.bool.isRequired,\n- isLoading: PropTypes.bool.isRequired,\n- isMounted: PropTypes.bool.isRequired,\n- loadingMessage: PropTypes.object,\n- notifications: PropTypes.array.isRequired,\n- removeNotification: PropTypes.func.isRequired,\n- setMounted: PropTypes.func.isRequired,\n- theme: PropTypes.object,\n- }\n-\n- async componentDidMount() {\n- const { initDatabase, initSettings, initTheme, isMounted, setMounted } = this.props\n-\n- // If this is the first time the app has mounted, initialize things.\n- if (!isMounted) {\n- setMounted(true)\n- await initDatabase()\n- await initSettings()\n- await initTheme()\n- }\n- }\n-\n- redirectToHome = () => {\n- const { history } = this.props\n- history.push('/home')\n- }\n-\n- redirectToLogout = () => {\n- const { history } = this.props\n- history.push('/logout')\n- }\n-\n- canLogout = () => {\n- const { history } = this.props\n- return history.location.pathname === '/app'\n- }\n-\n- render() {\n- const {\n+const Root = ({\n+ initDatabase,\n+ initSettings,\n+ initTheme,\n+ isMounted,\n+ setMounted,\nhasWallets,\nremoveNotification,\ntheme,\n@@ -86,7 +46,22 @@ class Root extends React.Component {\nisLoading,\nisAppReady,\nloadingMessage,\n- } = this.props\n+}) => {\n+ useEffect(() => {\n+ async function init() {\n+ if (!isMounted) {\n+ setMounted(true)\n+ await initDatabase()\n+ await initSettings()\n+ await initTheme()\n+ }\n+ }\n+ init()\n+ }, [initDatabase, initSettings, initTheme, isMounted, setMounted])\n+\n+ const redirectToHome = () => history.push('/home')\n+ const redirectToLogout = () => history.push('/logout')\n+ const canLogout = () => history.location.pathname === '/app'\n// Wait until we have loaded essential data before displaying anything.\nif (!theme) {\n@@ -106,10 +81,10 @@ class Root extends React.Component {\n<DialogLndCrashed />\n<ModalStack />\n<PageWithLoading\n- hasClose={this.canLogout()}\n+ hasClose={canLogout()}\nisLoading={isLoading}\nloadingMessage={loadingMessage}\n- onClose={this.redirectToLogout}\n+ onClose={redirectToLogout}\n>\n<Switch>\n<Route component={Initializer} exact path=\"/\" />\n@@ -118,14 +93,12 @@ class Root extends React.Component {\n<Route\nexact\npath=\"/onboarding\"\n- render={() => (\n- <Onboarding hasWallets={hasWallets} onClose={this.redirectToHome} />\n- )}\n+ render={() => <Onboarding hasWallets={hasWallets} onClose={redirectToHome} />}\n/>\n<Route\nexact\npath=\"/syncing\"\n- render={() => <Syncing onClose={this.redirectToLogout} pb={0} px={0} />}\n+ render={() => <Syncing onClose={redirectToLogout} pb={0} px={0} />}\n/>\n<Route\npath=\"/app\"\n@@ -144,6 +117,21 @@ class Root extends React.Component {\n</ConnectedRouter>\n)\n}\n+\n+Root.propTypes = {\n+ hasWallets: PropTypes.bool,\n+ history: PropTypes.object.isRequired,\n+ initDatabase: PropTypes.func.isRequired,\n+ initSettings: PropTypes.func.isRequired,\n+ initTheme: PropTypes.func.isRequired,\n+ isAppReady: PropTypes.bool.isRequired,\n+ isLoading: PropTypes.bool.isRequired,\n+ isMounted: PropTypes.bool.isRequired,\n+ loadingMessage: PropTypes.object,\n+ notifications: PropTypes.array.isRequired,\n+ removeNotification: PropTypes.func.isRequired,\n+ setMounted: PropTypes.func.isRequired,\n+ theme: PropTypes.object,\n}\nconst mapStateToProps = state => ({\n"
    },
    {
        "msg": "chore: package: v1.3.0",
        "diff": "diff --git a/.nycrc.json b/.nycrc.json \"**/.*.*\",\n\"packages/*/coverage\",\n\"packages/*/bin\",\n- \"packages/*/test\"\n+ \"packages/*/test\",\n+ \"**/eslint.config.js\"\n],\n\"branches\": 100,\n\"lines\": 100,\n",
        "date": "30.08.2022 22:47:06",
        "repo": "coderaiser/putout",
        "type": "chore",
        "sim_msg": "build(lint-staged): don't run eslint on json",
        "sim_diff": "diff --git a/package.json b/package.json }\n},\n\"lint-staged\": {\n- \"{src,config}/**/*.{js,json}\": [\n+ \"{src,config}/**/*.js\": [\n\"eslint --fix\",\n+ \"git add\"\n+ ],\n+ \"{src,config}/**/*.{js,json}\": [\n\"prettier --write\",\n\"git add\"\n],\n"
    },
    {
        "msg": "chore(divider): review divider",
        "diff": "diff --git a/packages/chakra-ui-core/src/CDivider/CDivider.js b/packages/chakra-ui-core/src/CDivider/CDivider.js +/**\n+ * Hey! Welcome to @chakra-ui/vue Divider\n+ *\n+ * Dividers are used to display a thin horizontal or vertical line.\n+ *\n+ * @see Docs https://vue.chakra-ui.com/divider\n+ * @see Source https://github.com/chakra-ui/chakra-ui-vue/blob/master/packages/chakra-ui-core/src/CDivider/CDivider.js\n+ */\n+\nimport CBox from '../CBox'\nimport { baseProps } from '../config/props'\nimport { forwardProps } from '../utils'\n+/**\n+ * CDivider component\n+ *\n+ * Creates a horizontal or vertical dividing rule between sibling\n+ * elements\n+ *\n+ * @extends CBox\n+ * @see Docs https://vue.chakra-ui.com/divider\n+ */\nconst CDivider = {\nname: 'CDivider',\nprops: {\n",
        "date": "16.04.2020 23:38:25",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "refactor: Inline Chakra UI's Divider component",
        "sim_diff": "diff --git a/src/components/BugBountyCards.tsx b/src/components/BugBountyCards.tsx @@ -5,7 +5,7 @@ import {\nFlex,\nHeading,\nText as ChakraText,\n- Divider as ChakraDivider,\n+ Divider,\nBox,\n} from \"@chakra-ui/react\"\n@@ -126,10 +126,6 @@ const Description = ({ children }) => {\n)\n}\n-const Divider = () => {\n- return <ChakraDivider opacity=\"1\" />\n-}\n-\nconst SubHeader = ({ children }) => {\nreturn (\n<ChakraText\n@@ -261,7 +257,7 @@ export const BugBountyCards: React.FC<IProps> = () => (\n<SubHeader>\n<Translation id={card.subDescriptionTranslationId} />\n</SubHeader>\n- <Divider />\n+ <Divider opacity=\"1\" />\n<SubHeader>\n<Translation id={card.subHeader1TranslationId} />\n</SubHeader>\n@@ -274,7 +270,7 @@ export const BugBountyCards: React.FC<IProps> = () => (\n))}\n</ul>\n</Text>\n- <Divider />\n+ <Divider opacity=\"1\" />\n<SubHeader>\n<Translation id={card.subHeader2TranslationId} />\n</SubHeader>\n"
    },
    {
        "msg": "chore: error handling for routr guards",
        "diff": "diff --git a/packages/chakra-ui-docs/plugins/analytics.js b/packages/chakra-ui-docs/plugins/analytics.js import Vue from 'vue'\nimport mixpanel from 'mixpanel-browser'\n-const MIXPANEL_TOKEN = process.env.MIXPANEL_TOKEN\n-\n-mixpanel.init(MIXPANEL_TOKEN)\n-\n-export default ({ app }) => {\n+export default ({ app, env }) => {\n+ try {\n+ mixpanel.init(env.MIXPANEL_TOKEN)\nVue.prototype.$mixpanel = mixpanel\n+ } catch (error) {\n+ console.error('Error initializing docs analytics', error)\n+ }\napp.router.afterEach(to => {\ntry {\n",
        "date": "10.05.2020 21:27:59",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "refactor(core): remove unused vars",
        "sim_diff": "diff --git a/packages/analytics-core/index.js b/packages/analytics-core/index.js import { createStore, combineReducers, applyMiddleware, compose } from 'redux'\nimport { inBrowser } from 'analytics-utils'\nimport * as middleware from './middleware'\n-import plugins, { enablePlugin, disablePlugin } from './modules/plugins' // registerPlugin\n-// import { formatPayload } from './middleware/plugins/engine'\n+import plugins, { enablePlugin, disablePlugin } from './modules/plugins'\nimport context, { makeContext } from './modules/context'\nimport page, { getPageData } from './modules/page'\n-// import queue from './modules/queue'\nimport track from './modules/track'\nimport user, { reset } from './modules/user'\nimport dotProp from './utils/dotProp'\n@@ -13,10 +11,9 @@ import timestamp from './utils/timestamp'\nimport { watch } from './utils/handleNetworkEvents'\nimport getCallback from './utils/getCallback'\nimport EVENTS, { eventKeys, isReservedAction } from './events'\n-// import heartBeat from './utils/heartbeat'\nimport * as CONSTANTS from './constants'\n-\n-const isDev = process.env.NODE_ENV === 'development'\n+// import heartBeat from './utils/heartbeat'\n+// import queue from './modules/queue'\nconst { addMiddleware, removeMiddleware, setItem, removeItem, getItem } = middleware\n@@ -208,7 +205,7 @@ export default function analytics(config = {}) {\nreturn false\n}\n// Dispatch actionStart\n- const autoPrefixType = `${theAction.type.replace(/Start$/, '')}Start`\n+ // const autoPrefixType = `${theAction.type.replace(/Start$/, '')}Start`\n// TODO automatically add meta.timestamp\nstore.dispatch({\n...theAction,\n"
    },
    {
        "msg": "chore(locals): fix locals\nchore(locals): fix locals",
        "diff": "diff --git a/locals/en.json b/locals/en.json \"Dashboard.h1\": \"Noir.\",\n\"Dashboard.h2-1\": \"Intro\",\n\"Dashboard.h2-2\": \"How it works?\",\n- \"Dashboard.h3-1\": \"Hello, this is Noir.\",\n- \"Dashboard.h3-2\": \"Hello, this is Noir.\",\n- \"Dashboard.p-1\": \"How it works?\",\n- \"Dashboard.p-2\": \"Hello, this is Noir.\"\n+ \"Dashboard.h3-1\": \"Noir.\",\n+ \"Dashboard.h3-2\": \"Noir.\",\n+ \"Dashboard.p-1\": \"In progress.\",\n+ \"Dashboard.p-2\": \"In progress.\"\n}\n",
        "date": "16.10.2017 17:15:32",
        "repo": "metnew/suicrux",
        "type": "chore",
        "sim_msg": "feat(pixels): add my new pixel (28, 42)",
        "sim_diff": "diff --git a/_data/pixels.json b/_data/pixels.json {\"y\": 39, \"x\": 0, \"color\": \"#623CE4\", \"username\": \"toddmoy\"},\n{\"y\": 39, \"x\": 3, \"color\": \"#F22F46\", \"username\": \"memitaru\"},\n{\"y\": 39, \"x\": 39, \"color\": \"#000080\", \"username\": \"rmkubik\"},\n+ {\"y\": 42, \"x\": 28, \"color\": \"#5918df\", \"username\": \"YasiOnFire\"},\n{\"y\": 42, \"x\": 42, \"color\": \"#9440A0\", \"username\": \"amykapernick\"},\n{\"y\": 42, \"x\": 43, \"color\": \"#F22F46\", \"username\": \"azrizhaziq\"},\n{\"y\": 43, \"x\": 43, \"color\": \"#F22F46\", \"username\": \"frinzekt\"},\n"
    },
    {
        "msg": "chore: change test targets\nNo longer testing in node@8 as of\nAdding node@14 and dropping non-LTS targets (odd versions).",
        "diff": "diff --git a/.travis.yml b/.travis.yml @@ -5,10 +5,9 @@ cache:\nnotifications:\nemail: false\nnode_js:\n+ - '14'\n- '12'\n- - '11'\n- '10'\n- - '8'\nbefore_install:\n- if [ \"$TRAVIS_PULL_REQUEST_BRANCH\" == \"\" ]; then echo \"//registry.npmjs.org/:_authToken=\\${NPM_TOKEN}\" >> .npmrc; fi\nafter_success:\n",
        "date": "19.10.2020 19:20:22",
        "repo": "remy/nodemon",
        "type": "chore",
        "sim_msg": "chore(monorepo): fix how travis creates npm login",
        "sim_diff": "diff --git a/.travis.yml b/.travis.yml @@ -30,7 +30,7 @@ after_success:\nnpm run coverage:upload;\nfi\nif [[ $TRAVIS_BRANCH == 'master' || $TRAVIS_BRANCH == 'next' ]] && [[ $TRAVIS_PULL_REQUEST == 'false' ]]; then\n- echo \"//registry.npmjs.org/:_authToken=\\${NPM_TOKEN}\" > .npmrc\n+ printf \"//registry.npmjs.org/:_authToken=$NPM_TOKEN\\n\" > ~/.npmrc\nnpm run release -- --publish\nfi\nbranches:\n"
    },
    {
        "msg": "chore: updated components list",
        "diff": "diff --git a/packages/chakra-ui-docs/components/components.js b/packages/chakra-ui-docs/components/components.js @@ -23,7 +23,7 @@ const components = [\n'ControlBox',\n'Divider',\n'Drawer',\n- // 'Editable',\n+ 'Editable',\n'Flex',\n'FormControl',\n'Grid',\n@@ -45,7 +45,7 @@ const components = [\n'Select',\n'Slider',\n'Spinner',\n- // 'Stat',\n+ 'Stat',\n'Stack',\n'Switch',\n'Tabs',\n",
        "date": "01.04.2020 00:58:14",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "chore: Restore missing comma",
        "sim_diff": "diff --git a/src/technologies/c.json b/src/technologies/c.json 66\n],\n\"description\": \"Chakra UI is a simple, modular and accessible component library that gives you the building blocks you need to build your React applications.\",\n- \"dom\": \"html[style*='chakra-ui-color-mode'], body.chakra-ui-dark, body.chakra-ui-light, div.chakra-portal\"\n+ \"dom\": \"html[style*='chakra-ui-color-mode'], body.chakra-ui-dark, body.chakra-ui-light, div.chakra-portal\",\n\"icon\": \"Chakra UI.svg\",\n\"implies\": \"React\",\n\"oss\": true,\n"
    },
    {
        "msg": "chore(firebase-auth-sw): fixed regression introduced in last commit for firebase-auth-sw",
        "diff": "diff --git a/lib/sw-templates/firebase-auth-sw.js b/lib/sw-templates/firebase-auth-sw.js const ignorePaths = <%= serialize(options.ignorePaths) %>\n-<% if (options.onFirebaseHosting) { %>\n+<% if (options.loadFromFirebaseHosting) { %>\n// Only works on Firebase hosting!\nimportScripts('/__/firebase/<%= options.firebaseVersion %>/firebase-app.js')\nimportScripts('/__/firebase/<%= options.firebaseVersion %>/firebase-auth.js')\n",
        "date": "22.12.2020 23:03:08",
        "repo": "nuxt-community/firebase-module",
        "type": "chore",
        "sim_msg": "chore(debugger): remove debugger from scopes",
        "sim_diff": "diff --git a/.cz-config.js b/.cz-config.js @@ -37,8 +37,7 @@ module.exports = {\n{name: 'firebase-admin'},\n{name: 'storage'},\n{name: 'website'},\n- {name: 'tutorial'},\n- {name: 'debugger'}\n+ {name: 'tutorial'}\n],\n// it needs to match the value for field type. Eg.: 'fix'\n"
    },
    {
        "msg": "chore: fix linting issue",
        "diff": "diff --git a/lib/monitor/match.js b/lib/monitor/match.js @@ -90,7 +90,9 @@ function rulesToMonitor(watch, ignore, config) {\nrule.slice(-1) === '*' &&\nrule.indexOf('*.') === -1) {\n- if (rule.slice(-2) !== '**') rule += '*/*';\n+ if (rule.slice(-2) !== '**') {\n+ rule += '*/*';\n+ }\n}\n",
        "date": "06.01.2018 23:53:59",
        "repo": "remy/nodemon",
        "type": "chore",
        "sim_msg": "refactor: add default statusCode = 0",
        "sim_diff": "diff --git a/lib/rules/rules.js b/lib/rules/rules.js @@ -984,10 +984,7 @@ function parseRule(rulesMgr, pattern, matcher, raw, root, options) {\nisRules = true;\n}\nif (protocol === 'statusCode') {\n- statusCode = matcher.substring(index + 3);\n- if (!statusCode) {\n- return;\n- }\n+ statusCode = matcher.substring(index + 3) || '0';\n}\n}\nvar rules = rulesMgr._rules;\n"
    },
    {
        "msg": "chore(nuxt): fix internal icons registration",
        "diff": "diff --git a/packages/chakra-ui-nuxt/lib/module.js b/packages/chakra-ui-nuxt/lib/module.js @@ -39,7 +39,7 @@ module.exports = function (moduleOptions) {\n// Icons\nconst icons = {\n- ...internalIcons.default,\n+ ...internalIcons,\n...packIcons,\n...(options.icons && options.icons.extend)\n}\n",
        "date": "31.12.2020 14:14:45",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "docs(icons): change icons width and height",
        "sim_diff": "diff --git a/packages/doc/content/components/icons/index.mdx b/packages/doc/content/components/icons/index.mdx @@ -24,7 +24,7 @@ export const AllIcons = () => (\n<>\n{Object.entries(YogaIcons).map(([name, Component]) => (\n<IconWrapper key={name}>\n- <Component />\n+ <Component width={12} height={12} />\n{name}\n</IconWrapper>\n))}\n"
    },
    {
        "msg": "chore: fix imports order",
        "diff": "diff --git a/packages/chakra-ui-core/src/CThemeProvider/tests/CThemeProvider.test.js b/packages/chakra-ui-core/src/CThemeProvider/tests/CThemeProvider.test.js import { toCSSVar } from '@chakra-ui/styled-system'\nimport { mount, shallowMount } from '@vue/test-utils'\nimport theme from '@chakra-ui/theme-vue'\n-import { getElementStyles } from '@/tests/test-utils'\n-\nimport CThemeProvider from '..'\n+import { getElementStyles } from '@/tests/test-utils'\ndescribe('CThemeProvider', () => {\nconst ChildComponent = {\n",
        "date": "26.08.2021 02:21:27",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "chore: Restore missing comma",
        "sim_diff": "diff --git a/src/technologies/c.json b/src/technologies/c.json 66\n],\n\"description\": \"Chakra UI is a simple, modular and accessible component library that gives you the building blocks you need to build your React applications.\",\n- \"dom\": \"html[style*='chakra-ui-color-mode'], body.chakra-ui-dark, body.chakra-ui-light, div.chakra-portal\"\n+ \"dom\": \"html[style*='chakra-ui-color-mode'], body.chakra-ui-dark, body.chakra-ui-light, div.chakra-portal\",\n\"icon\": \"Chakra UI.svg\",\n\"implies\": \"React\",\n\"oss\": true,\n"
    },
    {
        "msg": "chore: don't show perf warnings for test scripts",
        "diff": "diff --git a/karma.conf.js b/karma.conf.js @@ -70,6 +70,7 @@ module.exports = function (config) {\nwebpack: {\nplugins: [defaultsPlugin],\ndevtool: 'inline-source-map',\n+ performance: { hints: false },\nmodule: {\nrules: [\n{\n",
        "date": "09.08.2019 15:57:59",
        "repo": "rollbar/rollbar.js",
        "type": "chore",
        "sim_msg": "build: run webpack on postinstall\nThe net effect is the same, with the bonus that it avoids problems when running\nyarn.",
        "sim_diff": "diff --git a/package.json b/package.json \"webpack\": \"1.14.0\"\n},\n\"scripts\": {\n- \"install\": \"webpack -p\",\n\"lint\": \"jshint . && eslint . && flow\",\n+ \"postinstall\": \"webpack -p\",\n\"test\": \"karma start karma.conf.js\",\n\"validate\": \"npm ls\"\n},\n"
    },
    {
        "msg": "chore(docs): rephrase sentence for grammatical correctness\nChange Text from \"Passing anything other than a string is an error.\" to \"Passing anything other than a string will result in an error.\"",
        "diff": "diff --git a/README.md b/README.md @@ -14,7 +14,7 @@ A library of string validators and sanitizers.\n**This library validates and sanitizes strings only.**\nIf you're not sure if your input is a string, coerce it using `input + ''`.\n-Passing anything other than a string is an error.\n+Passing anything other than a string will result in an error.\n## Installation and Usage\n",
        "date": "03.03.2021 16:11:59",
        "repo": "validatorjs/validator.js",
        "type": "chore",
        "sim_msg": "chore: update description for strict()",
        "sim_diff": "diff --git a/README.md b/README.md @@ -1847,8 +1847,7 @@ If any of the options is present, yargs validation is skipped.\nAny command-line argument given that is not demanded, or does not have a\ncorresponding description, will be reported as an error.\n-`global` indicates whether `strict()` should be enabled both\n-at the top-level and for each sub-command.\n+Unrecognized commands will also be reported as errors.\n<a name=\"string\"></a>.string(key)\n------------\n"
    },
    {
        "msg": "chore: downgrade jsdom to v19 to support node 12",
        "diff": "diff --git a/package.json b/package.json \"holderjs\": \"^2.9.3\",\n\"jest\": \"28.1.3\",\n\"jest-environment-jsdom\": \"28.1.3\",\n- \"jsdom\": \"^20.0.2\",\n+ \"jsdom\": \"^19.0.0\",\n\"json-loader\": \"^0.5.7\",\n\"microbundle\": \"^0.13.3\",\n\"prettier\": \"2.7.1\",\n",
        "date": "14.11.2022 11:03:02",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "sim_msg": "chore(deps): remove jest-cli",
        "sim_diff": "diff --git a/package.json b/package.json \"flow-runtime\": \"^0.16.0\",\n\"husky\": \"^1.3.1\",\n\"jest\": \"^23.4.2\",\n- \"jest-cli\": \"^23.4.2\",\n\"jest-styled-components\": \"^5.0.1\",\n\"jest-yaml-flat-transfrom\": \"^0.1.0\",\n\"json-loader\": \"^0.5.4\",\n"
    },
    {
        "msg": "chore(config): remove unused options",
        "diff": "diff --git a/config.js b/config.js @@ -42,12 +42,6 @@ const config = {\n...envConfig,\npaths,\n- // ----------------------------------\n- // Server Configuration\n- // ----------------------------------\n- server_host: 'localhost',\n- server_port: process.env.PORT || 8080,\n-\n// ----------------------------------\n// Compiler Configuration\n// ----------------------------------\n",
        "date": "13.08.2018 10:41:13",
        "repo": "semantic-org/semantic-ui-react",
        "type": "chore",
        "sim_msg": "refactor(config): remove useless try/catch",
        "sim_diff": "diff --git a/src/generators/config.js b/src/generators/config.js @@ -3,36 +3,27 @@ const deepmerge = require('deepmerge')\nmodule.exports = {\ngetMerged: async env => {\n- env = env === 'local' ? '' : `.${env}`\n- let baseConfig\n+ let baseConfig = {}\nlet envConfig = {}\n+ for (const module of ['./config', './config.local']) {\ntry {\n- baseConfig = require(path.resolve(process.cwd(), './config'))\n- } catch (error) {\n- try {\n- baseConfig = require(path.resolve(process.cwd(), './config.local'))\n- } catch (error) {\n- throw error\n- }\n+ baseConfig = require(path.resolve(process.cwd(), module))\n+ } catch {}\n}\n- if (env) {\n+ if (typeof env === 'string' && env !== 'local') {\ntry {\n- envConfig = require(path.resolve(process.cwd(), `./config${env}`))\n+ envConfig = require(path.resolve(process.cwd(), `./config.${env}`))\n} catch (error) {\nif (error.code === 'MODULE_NOT_FOUND') {\n- throw new Error(`no 'config${env}.js' file found in project root`)\n+ throw new Error(`no 'config.${env}.js' file found in project root`)\n}\nthrow error\n}\n}\n- try {\nreturn deepmerge(baseConfig, envConfig)\n- } catch (error) {\n- throw error\n- }\n}\n}\n"
    },
    {
        "msg": "chore: add chakra to deps",
        "diff": "diff --git a/package.json b/package.json \"website\"\n],\n\"nohoist\": [\n- \"core-js\"\n+ \"core-js\",\n+ \"@chakra-ui/vue\"\n]\n},\n\"scripts\": {\n\"evalbundle\": \"bundlesize\"\n},\n\"dependencies\": {\n+ \"@chakra-ui/vue\": \"^0.7.0-next.2\",\n\"@babel/core\": \"^7.9.0\",\n\"@babel/plugin-proposal-object-rest-spread\": \"^7.7.4\",\n\"@babel/plugin-transform-modules-commonjs\": \"^7.7.4\",\n",
        "date": "23.12.2020 15:46:25",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "chore: upgrade cli deps",
        "sim_diff": "diff --git a/package.json b/package.json \"url\": \"https://github.com/aurelia/cli\"\n},\n\"dependencies\": {\n- \"@babel/core\": \"^7.7.5\",\n- \"@babel/plugin-proposal-class-properties\": \"^7.7.4\",\n- \"@babel/plugin-proposal-decorators\": \"^7.7.4\",\n- \"@babel/plugin-transform-modules-amd\": \"^7.7.5\",\n- \"@babel/plugin-transform-modules-commonjs\": \"^7.7.5\",\n- \"@babel/register\": \"^7.7.4\",\n+ \"@babel/core\": \"^7.8.4\",\n+ \"@babel/plugin-proposal-class-properties\": \"^7.8.3\",\n+ \"@babel/plugin-proposal-decorators\": \"^7.8.3\",\n+ \"@babel/plugin-transform-modules-amd\": \"^7.8.3\",\n+ \"@babel/plugin-transform-modules-commonjs\": \"^7.8.3\",\n+ \"@babel/register\": \"^7.8.3\",\n\"ansi-colors\": \"^4.1.1\",\n\"aurelia-dependency-injection\": \"^1.5.2\",\n\"aurelia-logging\": \"^1.5.2\",\n\"concat-with-sourcemaps\": \"^1.1.0\",\n\"convert-source-map\": \"^1.7.0\",\n\"del\": \"^5.1.0\",\n- \"enquirer\": \"^2.3.2\",\n+ \"enquirer\": \"^2.3.4\",\n\"esprima\": \"^4.0.1\",\n\"glob\": \"^7.1.6\",\n\"gulp\": \"^4.0.2\",\n- \"htmlparser2\": \"^4.0.0\",\n+ \"htmlparser2\": \"^4.1.0\",\n\"lead\": \"^1.0.0\",\n\"lodash\": \"^4.17.15\",\n\"map-stream\": \"0.0.7\",\n- \"mkdirp\": \"^0.5.1\",\n+ \"mkdirp\": \"^1.0.3\",\n\"node-libs-browser\": \"^2.2.1\",\n\"npm-which\": \"^3.0.1\",\n\"preprocess\": \"^3.1.0\",\n\"pumpify\": \"^2.0.1\",\n\"querystring-es3\": \"1.0.0-0\",\n\"readable-stream\": \"^2.3.6\",\n- \"resolve\": \"^1.13.1\",\n- \"semver\": \"^6.3.0\",\n- \"terser\": \"^4.4.2\",\n+ \"resolve\": \"^1.15.1\",\n+ \"semver\": \"^7.1.3\",\n+ \"terser\": \"^4.6.4\",\n\"through2\": \"^3.0.1\",\n\"typescript\": \"^1.0.0 || ^2.0.0 || ^3.0.0\"\n},\n\"devDependencies\": {\n- \"@types/node\": \"^12.12.17\",\n- \"babel-eslint\": \"^10.0.3\",\n- \"copyfiles\": \"^2.1.1\",\n+ \"@types/node\": \"^13.7.6\",\n+ \"babel-eslint\": \"^10.1.0\",\n+ \"copyfiles\": \"^2.2.0\",\n\"gulp-bump\": \"^3.1.3\",\n\"gulp-clean\": \"^0.4.0\",\n- \"gulp-conventional-changelog\": \"^2.0.26\",\n+ \"gulp-conventional-changelog\": \"^2.0.29\",\n\"gulp-eslint\": \"^6.0.0\",\n\"jasmine\": \"^3.5.0\",\n\"jasmine-spec-reporter\": \"^4.2.1\",\n\"jasmine-ts\": \"^0.3.0\",\n\"latest-version\": \"^5.1.0\",\n\"minimatch\": \"^3.0.4\",\n- \"mock-fs\": \"^4.10.4\",\n+ \"mock-fs\": \"^4.11.0\",\n\"nodemon\": \"^2.0.2\",\n- \"nyc\": \"^14.1.1\",\n- \"puppeteer\": \"^2.0.0\",\n- \"rimraf\": \"^3.0.0\",\n+ \"nyc\": \"^15.0.0\",\n+ \"puppeteer\": \"^2.1.1\",\n+ \"rimraf\": \"^3.0.2\",\n\"tree-kill\": \"^1.2.2\",\n- \"ts-node\": \"^8.5.4\",\n- \"typescript\": \"^3.7.3\",\n- \"yargs\": \"^15.0.2\"\n+ \"ts-node\": \"^8.6.2\",\n+ \"typescript\": \"^3.8.2\",\n+ \"yargs\": \"^15.1.0\"\n}\n}\n"
    },
    {
        "msg": "chore(styles/theme): random color theme\nchore(styles/theme): random color theme",
        "diff": "diff --git a/src/common/styles/theme.jsx b/src/common/styles/theme.jsx * {@link https://www.materialpalette.com/}\n*/\nexport default {\n- primaryColorDark: '#00796B',\n- primaryColor: '#009688',\n- primaryColorLight: '#B2DFDB',\n+ primaryColorDark: '#0e1319',\n+ primaryColor: '#1b1e2f',\n+ primaryColorLight: '#303747',\nprimaryColorText: '#F7F7F7',\n- accentColor: '#00BCD4',\n+ accentColor: '#e2c7c0',\nprimaryTextColor: '#212121',\nsecondaryTextColor: '#757575',\ndividerColor: '#BDBDBD'\n",
        "date": "17.09.2017 14:50:28",
        "repo": "metnew/suicrux",
        "type": "chore",
        "sim_msg": "style(search input): add magnifying glass to search input",
        "sim_diff": "diff --git a/styleguide.config.js b/styleguide.config.js @@ -76,37 +76,37 @@ module.exports = {\nmaxWidth: 1000,\ncolor: {\n// base:\n- sidebarBackground: \"#ffffff\",\n// light: '#767676',\n// lightest: '#ccc',\n- // link: '#1978c8',\n+ link: '#062a4e',\n// linkHover: '#f28a25',\n// border: '#e8e8e8',\n// name: '#7f9a44',\n// type: '#b77daa',\n// error: '#c00',\n// baseBackground: '#fff',\n- // codeBackground: '#f5f5f5',\n+ codeBackground: '#233444',\n// ribbonBackground: '#f9970d',\n// ribbonText: '#fff',\n},\n- // fontFamily: {\n- // base: [\n-\n- // ],\n- // monospace: []\n- // },\n- // fontSize: {\n- // base: ,\n- // text: ,\n- // small: ,\n- // h1: ,\n- // h2: ,\n- // h3: ,\n- // h4: ,\n- // h5: ,\n- // h6 ,\n- // }\n+ fontFamily: {\n+ base: [\n+ \"-apple-system\",\n+ \"sans-serif\"\n+ ],\n+ monospace: [\"Overpass Mono\", \"Menlo\", \"monospace\"]\n+ },\n+ fontSize: {\n+ base: 16,\n+ text: 16,\n+ small: 14,\n+ h1: 39,\n+ h2: 31,\n+ h3: 25,\n+ h4: 20,\n+ h5: 18,\n+ h6: 16,\n+ }\n},\nstyles: {\nStyleGuide: {\n@@ -135,42 +135,55 @@ module.exports = {\npadding: \"20px 80px 40px 80px\"\n},\n},\n+ Link: {\n+ link: {\n+ '&, &:link, &:visited': {\n+ color: \"#fd8283\",\n+ textDecoration: \"underline\",\n+ },\n+ '&:hover, &:active': {\n+ color: \"#fd8283\",\n+ textDecoration: \"none\"\n+ },\n+ }\n+ },\nTableOfContents: {\nsearch: {\nposition: \"relative\",\n- },\n- input: {\n- backgroundColor: \"#f6f6f6\",\n- border: \"1px solid #f6f6f6\",\n- borderRadius: 23,\n- paddingLeft: 30,\n- \"&:focus\": {\n- borderColor: \"#ebebeb\",\n- },\n\"&::before\": {\nborder: \"3px solid #052a4e\",\nborderRadius: \"50%\",\ncontent: \"' '\",\ndisplay: \"block\",\n- height: 6,\n- left: 25,\n- width: 6,\n+ height: 12,\n+ left: 28,\n+ width: 12,\nposition: \"absolute\",\n- top: \"50%\",\n+ top: \"47%\",\nzIndex: 1,\ntransform: \"translateY(-58%)\",\n},\n\"&::after\": {\nbackground: \"#052a4e\",\ncontent: \"' '\",\n+ display: \"block\",\nheight: 7,\n- left: 35,\n+ left: 38,\nposition: \"absolute\",\ntransform: \"rotate(-45deg)\",\n- top: \"55%\",\n+ top: \"52%\",\nwidth: 3,\nzIndex: 1,\n}\n+ },\n+ input: {\n+ backgroundColor: \"#f6f6f6\",\n+ border: \"1px solid #f6f6f6\",\n+ borderRadius: 23,\n+ paddingLeft: 35,\n+ \"&:focus\": {\n+ borderColor: \"#ebebeb\",\n+ }\n}\n}\n},\n"
    },
    {
        "msg": "chore: remove vue-template-computer from devDeps",
        "diff": "diff --git a/package.json b/package.json \"styled-system\": \"^5.1.2\",\n\"v-scroll-lock\": \"^1.1.0\",\n\"vue-loader\": \"^15.7.1\",\n- \"vue-lorem-ipsum\": \"^0.0.1\",\n- \"vue-template-compiler\": \"^2.6.10\"\n+ \"vue-lorem-ipsum\": \"^0.0.1\"\n}\n}\n",
        "date": "09.03.2020 09:14:43",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "feat(app): update vue-router dep to its v3.1.5\n* [app] package.json update to latest vue-router v3.1.5 release.\n( release 3.1.4 was one day before)\n* Update package.json",
        "sim_diff": "diff --git a/app/package.json b/app/package.json \"url-loader\": \"3.0.0\",\n\"vue\": \"2.6.11\",\n\"vue-loader\": \"15.8.3\",\n- \"vue-router\": \"3.1.3\",\n+ \"vue-router\": \"3.1.5\",\n\"vue-server-renderer\": \"2.6.11\",\n\"vue-style-loader\": \"4.1.2\",\n\"vue-template-compiler\": \"2.6.11\",\n"
    },
    {
        "msg": "chore(carbonads): update script src",
        "diff": "diff --git a/docs/app/Components/CarbonAd/CarbonAd.js b/docs/app/Components/CarbonAd/CarbonAd.js @@ -11,7 +11,7 @@ class CarbonAd extends Component {\nscript.async = true\nscript.id = '_carbonads_js'\nscript.type = 'text/javascript'\n- script.src = '//cdn.carbonads.com/carbon.js?zoneid=1673&serve=C6AILKT&placement=reactsemanticuicom'\n+ script.src = '//cdn.carbonads.com/carbon.js?serve=CK7DT23J&placement=reactsemanticuicom'\nthis.ifRef(ref => ref.appendChild(script))\n}\n",
        "date": "24.05.2018 23:14:54",
        "repo": "semantic-org/semantic-ui-react",
        "type": "chore",
        "sim_msg": "fix(Long Range Message): Fixes an issue where edits aren't saved on the long range message macro. Closes Closes",
        "sim_diff": "diff --git a/src/components/macros/sendLongRangeMessage.js b/src/components/macros/sendLongRangeMessage.js @@ -4,13 +4,6 @@ import {FormGroup, Label, Input, Button, ButtonGroup} from \"helpers/reactstrap\";\nexport default ({updateArgs = () => {}, args, client}) => {\nconst lrmText = e => {\nlet value = e.target.value;\n- const regex = /.*(?= out| out\\.)/gi;\n- const match = value.match(regex);\n- if (match) {\n- setTimeout(() => {\n- updateArgs(\"sender\", match[match.length - 2]);\n- }, 100);\n- }\nupdateArgs(\"message\", value);\n};\nconst updateSender = e => {\n@@ -19,9 +12,6 @@ export default ({updateArgs = () => {}, args, client}) => {\nconst updateDecoded = e => {\nupdateArgs(\"decoded\", e.target.checked);\n};\n- // if (!args || !args.crew) {\n- // updateArgs(\"crew\", true);\n- // }\nreturn (\n<FormGroup className=\"macro-sendLongRangeMessage\">\n<Label>Inbound/Outbound</Label>\n"
    }
]