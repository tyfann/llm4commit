[
    {
        "msg": "build: remove d3 from devDependencies\nd3 is already in dependencies, which is sufficient",
        "diff": "diff --git a/package.json b/package.json \"conventional-commit-types\": \"^2.1.0\",\n\"copy-webpack-plugin\": \"^1.1.1\",\n\"cz-conventional-changelog\": \"^1.2.0\",\n- \"d3\": \"^3.5.17\",\n\"eslint\": \"^1.10.3\",\n\"eslint-config-standard\": \"^4.4.0\",\n\"eslint-plugin-promise\": \"^1.0.8\",\n",
        "date": "26.04.2017 09:28:55",
        "repo": "kitware/candela",
        "type": "build",
        "sim_msg": "chore(babel): remove babel-preset-gatsby",
        "sim_diff": "diff --git a/package.json b/package.json \"babel-eslint\": \"10.0.3\",\n\"babel-jest\": \"^24.9.0\",\n\"babel-plugin-module-resolver\": \"^3.2.0\",\n- \"babel-preset-gatsby\": \"^0.2.23\",\n\"commitizen\": \"^4.0.3\",\n\"cz-conventional-changelog\": \"^3.0.2\",\n\"eslint\": \"^6.6.0\",\n"
    },
    {
        "msg": "build(TrackerDash): revert to d3v3",
        "diff": "diff --git a/package.json b/package.json \"UpSet\": \"git+https://github.com/jeffbaumes/upset#no-global-vars\",\n\"brace\": \"^0.7.0\",\n\"css-loader\": \"^0.23.1\",\n- \"d3\": \"^4.8.0\",\n+ \"d3\": \"^3.5.17\",\n\"datalib\": \"^1.7.3\",\n\"geojs\": \"^0.9.1\",\n\"glo\": \"github:ronichoudhury-work/glo#dist\",\n",
        "date": "31.05.2017 11:42:33",
        "repo": "kitware/candela",
        "type": "build",
        "sim_msg": "chore: updates hls.js 0.6.17",
        "sim_diff": "diff --git a/package.json b/package.json \"eslint\": \"^3.1.0\",\n\"file-loader\": \"^0.9.0\",\n\"gulp\": \"^3.8.1\",\n- \"hls.js\": \"^0.6.15\",\n+ \"hls.js\": \"^0.6.17\",\n\"html-loader\": \"^0.4.3\",\n\"isparta\": \"^4.0.0\",\n\"istanbul\": \"^0.4.2\",\n"
    },
    {
        "msg": "build: updated lockfile",
        "diff": "diff --git a/yarn.lock b/yarn.lock resolved \"https://registry.yarnpkg.com/@bcoe/v8-coverage/-/v8-coverage-0.2.3.tgz#75a2e8b51cb758a7553d6804a5932d7aace75c39\"\nintegrity sha512-0hYQ8SB4Db5zvZB4axdMHGwEaQjkZzFjQiN9LVYvIFB2nSUHW9tYpxWriPrWDASIxiaXax83REcLxuSdnGPZtw==\n+\"@chakra-ui/vue@^0.4.1\":\n+ version \"0.4.2\"\n+ resolved \"https://registry.yarnpkg.com/@chakra-ui/vue/-/vue-0.4.2.tgz#5a6dc8ab19cad1b59039632037e6a32360378a71\"\n+ integrity sha512-wQ53rlbrG4+AsyAUFuaboF2R3kHfwHFD9jUqL51UsVkc5cUecweyXvavNF/YRMBkAI1ni6BzPM/3q/9LqqHE7w==\n+ dependencies:\n+ \"@popperjs/core\" \"^2.4.0\"\n+ \"@styled-system/css\" \"^5.0.23\"\n+ animejs \"^3.1.0\"\n+ aria-hidden \"^1.1.1\"\n+ breadstick \"^0.2.14\"\n+ color \"^3.1.2\"\n+ focus-trap \"^5.1.0\"\n+ focus-trap-vue \"^0.0.4\"\n+ lodash-es \"^4.17.15\"\n+ portal-vue \"^2.1.6\"\n+ styled-system \"^5.1.2\"\n+ v-scroll-lock \"^1.1.0\"\n+\n\"@cnakazawa/watch@^1.0.3\":\nversion \"1.0.4\"\nresolved \"https://registry.yarnpkg.com/@cnakazawa/watch/-/watch-1.0.4.tgz#f864ae85004d0fcab6f50be9141c4da368d1656a\"\n",
        "date": "09.05.2020 18:24:45",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "build",
        "sim_msg": "build(deps): bump prismjs from 1.17.1 to 1.25.0\nBumps [prismjs](https://github.com/PrismJS/prism) from 1.17.1 to 1.25.0.\n[Release notes](https://github.com/PrismJS/prism/releases)\n[Changelog](https://github.com/PrismJS/prism/blob/master/CHANGELOG.md)\n[Commits](PrismJS/prism@v1.17.1...v1.25.0)\nupdated-dependencies:\ndependency-name: prismjs\ndependency-type: indirect\n...",
        "sim_diff": "diff --git a/yarn.lock b/yarn.lock @@ -6710,15 +6710,6 @@ cli-width@^2.0.0:\nresolved \"https://registry.yarnpkg.com/cli-width/-/cli-width-2.2.0.tgz#ff19ede8a9a5e579324147b0c11f0fbcbabed639\"\nintegrity sha1-/xnt6Kml5XkyQUewwR8PvLq+1jk=\n-clipboard@^2.0.0:\n- version \"2.0.4\"\n- resolved \"https://registry.yarnpkg.com/clipboard/-/clipboard-2.0.4.tgz#836dafd66cf0fea5d71ce5d5b0bf6e958009112d\"\n- integrity sha512-Vw26VSLRpJfBofiVaFb/I8PVfdI1OxKcYShe6fm0sP/DtmiWQNCjhM/okTvdCo0G+lMMm1rMYbk4IK4x1X+kgQ==\n- dependencies:\n- good-listener \"^1.2.2\"\n- select \"^1.1.2\"\n- tiny-emitter \"^2.0.0\"\n-\nclipboard@^2.0.4:\nversion \"2.0.6\"\nresolved \"https://registry.yarnpkg.com/clipboard/-/clipboard-2.0.6.tgz#52921296eec0fdf77ead1749421b21c968647376\"\n@@ -16012,11 +16003,9 @@ pretty-time@^1.1.0:\nintegrity sha512-28iF6xPQrP8Oa6uxE6a1biz+lWeTOAPKggvjB8HAs6nVMKZwf5bG++632Dx614hIWgUPkgivRfG+a8uAXGTIbA==\nprismjs@^1.13.0:\n- version \"1.17.1\"\n- resolved \"https://registry.yarnpkg.com/prismjs/-/prismjs-1.17.1.tgz#e669fcbd4cdd873c35102881c33b14d0d68519be\"\n- integrity sha512-PrEDJAFdUGbOP6xK/UsfkC5ghJsPJviKgnQOoxaDbBjwc8op68Quupwt1DeAFoG8GImPhiKXAvvsH7wDSLsu1Q==\n- optionalDependencies:\n- clipboard \"^2.0.0\"\n+ version \"1.25.0\"\n+ resolved \"https://registry.yarnpkg.com/prismjs/-/prismjs-1.25.0.tgz#6f822df1bdad965734b310b315a23315cf999756\"\n+ integrity sha512-WCjJHl1KEWbnkQom1+SzftbtXMKQoezOCYs5rECqMN+jP+apI7ftoflyqigqzopSO3hMhTEb0mFClA8lkolgEg==\nprivate@^0.1.6, private@^0.1.8:\nversion \"0.1.8\"\n"
    },
    {
        "msg": "build(npm): updated version to 5.1.0",
        "diff": "diff --git a/package.json b/package.json {\n\"name\": \"@nuxtjs/firebase\",\n- \"version\": \"5.0.7\",\n+ \"version\": \"5.1.0\",\n\"description\": \"Intergrate Firebase into your Nuxt project.\",\n\"keywords\": [\n\"firebase\",\n\"cz-conventional-changelog\": \"latest\",\n\"eslint\": \"latest\",\n\"firebase\": \"^7.14.2\",\n- \"husky\": \"latest\",\n+ \"husky\": \"^4.2.5\",\n\"jest\": \"^25.5.3\",\n\"standard-version\": \"latest\",\n\"vuepress\": \"^1.4.1\",\n",
        "date": "01.05.2020 21:11:47",
        "repo": "nuxt-community/firebase-module",
        "type": "build",
        "sim_msg": "chore(deps): remove jest-cli",
        "sim_diff": "diff --git a/package.json b/package.json \"flow-runtime\": \"^0.16.0\",\n\"husky\": \"^1.3.1\",\n\"jest\": \"^23.4.2\",\n- \"jest-cli\": \"^23.4.2\",\n\"jest-styled-components\": \"^5.0.1\",\n\"jest-yaml-flat-transfrom\": \"^0.1.0\",\n\"json-loader\": \"^0.5.4\",\n"
    },
    {
        "msg": "build(webpack): wrap existing loaders' `exclude` property in list if not already",
        "diff": "diff --git a/webpack.js b/webpack.js @@ -39,15 +39,24 @@ module.exports = function (config, basePath, options) {\n// directives.\nvar exclude = options.excludeCandelaNM === undefined || options.excludeCandelaNM;\n+ // Exclude the base paths from having existing loaders applied to them.\n+ if (exclude) {\n// Install empty module and module.loaders entries if missing.\nconfig.module = config.module || {};\nconfig.module.loaders = config.module.loaders || [];\n- // Exclude the base paths from having existing loaders applied to them.\n- if (exclude) {\n- config.modules.loaders = config.modules.loaders || [];\n- config.modules.loaders.forEach(function (loader) {\n- loader.exclude = (loader.exclude || []).concat(includePaths);\n+ // For each loader, append the Candela include paths to its `exclude`\n+ // property.\n+ config.module.loaders.forEach(function (loader) {\n+ // Install an empty list if there is no `exclude` property.\n+ loader.exclude = loader.exclude || [];\n+\n+ // If the `exclude` propertry is a non-list singleton, wrap it in a list.\n+ if (!Array.isArray(loader.exclude)) {\n+ loader.exclude = [loader.exclude];\n+ }\n+\n+ loader.exclude = loader.exclude.concat(includePaths);\n});\n}\n",
        "date": "05.01.2017 13:28:30",
        "repo": "kitware/candela",
        "type": "build",
        "sim_msg": "perf(bundle-size): only en locale from moment\nShaves 136.63k of final renderer.prod.js bundle size.",
        "sim_diff": "diff --git a/webpack.config.base.js b/webpack.config.base.js */\nimport path from 'path'\n+import { IgnorePlugin } from 'webpack'\nimport { dependencies as externals } from './app/package.json'\nexport default {\n@@ -38,6 +39,8 @@ export default {\nmodules: [path.join(__dirname, 'app'), 'node_modules']\n},\n+ plugins: [new IgnorePlugin(/^\\.\\/locale$/, /moment$/)],\n+\noptimization: {\nnamedModules: true\n}\n"
    },
    {
        "msg": "build: provide custom Dockerfile location",
        "diff": "diff --git a/.circleci/config.yml b/.circleci/config.yml @@ -201,7 +201,7 @@ jobs:\ndocker buildx create docker-offen --name docker-offen --use\ndocker buildx inspect --bootstrap\nfor tag in \"${DOCKER_IMAGE_TAGS[@]}\"; do\n- docker buildx build --platform linux/amd64,linux/arm64,linux/arm/v7 -t offen/offen:$tag . --push\n+ docker buildx build --platform linux/amd64,linux/arm64,linux/arm/v7 -f ./build/Dockerfile -t offen/offen:$tag . --push\ndone\n- store_artifacts:\npath: /tmp/artifacts\n",
        "date": "15.02.2022 20:51:36",
        "repo": "offen/offen",
        "type": "build",
        "sim_msg": "feat: added latest tag to docker images",
        "sim_diff": "diff --git a/.circleci/config.yml b/.circleci/config.yml @@ -100,9 +100,10 @@ jobs:\nname: Build and push production Docker image\ncommand: |\nVERSION=$(git describe --tags `git rev-list --tags --max-count=1` | cut -c2-100)\n- docker build -t ${DOCKER_REPOSITORY}:${VERSION} .\n+ docker build -t ${DOCKER_REPOSITORY}:${VERSION} -t ${DOCKER_REPOSITORY}:latest .\ndocker login -u ${DOCKER_USER} -p ${DOCKER_PASS}\ndocker push ${DOCKER_REPOSITORY}:${VERSION}\n+ docker push ${DOCKER_REPOSITORY}:latest\n- webhook/notify:\nendpoint: \"${GITOPS_PR_WEBHOOK}\"\n"
    },
    {
        "msg": "build: resolve chakra ui dep version",
        "diff": "diff --git a/package.json b/package.json \"@babel/plugin-transform-modules-commonjs\": \"^7.7.4\",\n\"@babel/plugin-transform-parameters\": \"^7.7.4\",\n\"@babel/preset-env\": \"^7.9.5\",\n- \"@chakra-ui/vue\": \"^0.5.2\",\n+ \"@chakra-ui/vue\": \"^0.5.3\",\n\"@commitlint/cli\": \"^8.2.0\",\n\"@commitlint/config-conventional\": \"^8.2.0\",\n\"@fortawesome/free-brands-svg-icons\": \"^5.12.0\",\n",
        "date": "16.05.2020 20:36:35",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "build",
        "sim_msg": "chore: remove the unused dependencies babel-template and babel-types",
        "sim_diff": "diff --git a/package.json b/package.json \"babel-plugin-transform-object-rest-spread\": \"^6.23.0\",\n\"babel-preset-env\": \"^1.4.0\",\n\"babel-register\": \"^6.24.1\",\n- \"babel-template\": \"^6.24.1\",\n- \"babel-types\": \"^6.24.1\",\n\"cz-conventional-changelog\": \"^2.0.0\",\n\"eslint\": \"^4.5.0\",\n\"eslint-config-standard\": \"^10.2.1\",\n"
    },
    {
        "msg": "build: xgo does not need to be locked anymore",
        "diff": "diff --git a/build/Dockerfile.build b/build/Dockerfile.build @@ -98,7 +98,7 @@ RUN python ./create_notice.py \\\n--client auditorium.csv \\\n--server server.csv >> NOTICE\n-FROM techknowlogick/xgo:go-1.19.2 as compiler\n+FROM techknowlogick/xgo:go-1.19.5 as compiler\nARG rev\nENV GIT_REVISION=$rev\n",
        "date": "10.01.2023 21:34:46",
        "repo": "offen/offen",
        "type": "build",
        "sim_msg": "feat: add console mode",
        "sim_diff": "diff --git a/Dockerfile b/Dockerfile @@ -19,7 +19,10 @@ COPY app/console /usr/local/src/console\nWORKDIR /usr/local/src/console\nARG VITE_GA_PROJECT\n+ARG VITE_CONSOLE_MODE\n+\nENV VITE_GA_PROJECT=$VITE_GA_PROJECT\n+ENV VITE_CONSOLE_MODE=$VITE_CONSOLE_MODE\nRUN npm ci\nRUN npm run build\n"
    },
    {
        "msg": "build: install correct freefont package",
        "diff": "diff --git a/Dockerfile.node b/Dockerfile.node @@ -57,6 +57,7 @@ RUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key\nfonts-kacst \\\nfonts-thai-tlwg \\\nfonts-wqy-zenhei \\\n+ fonts-freefont-ttf \\\ngoogle-chrome-unstable \\\n--no-install-recommends \\\n&& rm -rf /var/lib/apt/lists/*\n",
        "date": "03.02.2022 16:07:09",
        "repo": "offen/offen",
        "type": "build",
        "sim_msg": "chore: optimize Dockerfile",
        "sim_diff": "diff --git a/Dockerfile b/Dockerfile FROM node:10.15-slim\nLABEL MAINTAINER https://github.com/DIYgod/RSSHub/\n-RUN apt-get update && apt-get install -yq libgconf-2-4 apt-transport-https\n+RUN apt-get update && apt-get install -yq libgconf-2-4 apt-transport-https --no-install-recommends && apt-get clean \\\n+ && rm -rf /var/lib/apt/lists/*\nENV NODE_ENV production\nENV TZ Asia/Shanghai\n@@ -25,6 +26,7 @@ RUN if [ \"$PUPPETEER_SKIP_CHROMIUM_DOWNLOAD\" = 0 ]; then \\\n&& apt-get update \\\n&& apt-get install -y google-chrome-unstable fonts-ipafont-gothic fonts-wqy-zenhei fonts-thai-tlwg fonts-kacst ttf-freefont \\\n--no-install-recommends \\\n+ && apt-get clean \\\n&& rm -rf /var/lib/apt/lists/* \\\n&& apt-get purge --auto-remove -y curl \\\n&& rm -rf /src/*.deb \\\n"
    },
    {
        "msg": "build: remove duplicate copy step",
        "diff": "diff --git a/build/Dockerfile.messages b/build/Dockerfile.messages @@ -58,7 +58,6 @@ RUN apk add git\nRUN apk add --no-cache --virtual .gyp python make g++\nCOPY ./packages/package.json ./packages/package-lock.json /code/deps/\n-COPY ./packages /code/packages\nWORKDIR /code/deps\nENV ADBLOCK true\nENV DISABLE_OPENCOLLECTIVE true\n",
        "date": "28.04.2021 13:19:55",
        "repo": "offen/offen",
        "type": "build",
        "sim_msg": "feat: bump Dockerfile to node v16",
        "sim_diff": "diff --git a/Dockerfile b/Dockerfile # ---- Base Node ----\n-FROM node:14-alpine AS base\n+FROM node:16-alpine AS base\n# set working directory\nWORKDIR /usr/src/app\n@@ -10,7 +10,7 @@ COPY package*.json ./\n# ---- Dependencies ----\nFROM base AS basedependencies\n## Install build toolchain, install node deps and compile native add-ons\n-RUN apk add --no-cache python make g++ git\n+RUN apk add --no-cache python3 make g++ git\nFROM basedependencies as dependencies\n# install node packages\n"
    },
    {
        "msg": "ci: remove extra build step",
        "diff": "diff --git a/circle.yml b/circle.yml @@ -19,12 +19,9 @@ dependencies:\ncompile:\noverride:\n- # Build Candela.\n+ # Build Candela and the examples.\n- npm run build\n- # Build the examples.\n- - npm run build:examples\n-\n# Build the unit test and coverage test bundles.\n- npm run build:test\n- npm run build:coverage\n",
        "date": "11.05.2018 13:26:55",
        "repo": "kitware/candela",
        "type": "ci",
        "sim_msg": "test: circle ci",
        "sim_diff": "diff --git a/.circleci/config.yml b/.circleci/config.yml @@ -35,5 +35,5 @@ jobs:\n- node_modules\nkey: v1-dependencies-{{ checksum \"package.json\" }}\n- # run compile\n- - run: npm run build\n+ # run compile & test\n+ - run: npm run build & npm run test\n"
    },
    {
        "msg": "ci: verify log",
        "diff": "diff --git a/scripts/verifyCommit.js b/scripts/verifyCommit.js @@ -5,9 +5,10 @@ const msgPath = process.env.GIT_PARAMS\nconst msg = require('fs').readFileSync(msgPath, 'utf-8').trim()\nconst commitRE = /^(revert: )?(feat|fix|docs|dx|style|refactor|perf|test|workflow|build|ci|chore|types|wip|release)(\\(.+\\))?(.{1,10})?: .{1,50}/\n-const mergeRE = /^Merge pull request/\n+const mergeRe = /^(Merge pull request|Merge branch)/\n+\nif (!commitRE.test(msg)) {\n- if (!mergeRE.test(msg)) {\n+ if (!mergeRe.test(msg)) {\nconsole.log(msg)\nconsole.error(\n` ${chalk.bgRed.white(' ERROR ')} ${chalk.red(\n",
        "date": "15.10.2020 14:35:55",
        "repo": "hug-sun/element3",
        "type": "ci",
        "sim_msg": "build: add types as allowed commit type",
        "sim_diff": "diff --git a/build/git-hooks/commit-msg b/build/git-hooks/commit-msg #!/usr/bin/env bash\n# Validate commit log\n-commit_regex='^Merge.+|(feat|fix|docs|style|refactor|perf|test|build|ci|chore|revert)(\\(.+\\))?: .{1,50}'\n+commit_regex='^Merge.+|(feat|fix|docs|style|refactor|perf|test|build|ci|chore|revert|types)(\\(.+\\))?: .{1,50}'\nif ! grep -iqE \"$commit_regex\" \"$1\"; then\necho\n"
    },
    {
        "msg": "ci: use bash instead of sh",
        "diff": "diff --git a/package.json b/package.json \"scripts\": {\n\"install\": \"lerna bootstrap --hoist\",\n\"clean:lerna\": \"lerna clean\",\n- \"clean:dist\": \"sh scripts/clean-all\",\n- \"build\": \"sh scripts/build-all\",\n+ \"clean:dist\": \"bash scripts/clean-all\",\n+ \"build\": \"bash scripts/build-all\",\n\"build:examples\": \"cd packages/examples && npm run build\",\n\"examples\": \"cd packages/examples && npm run serve\",\n- \"build:test\": \"sh scripts/build-test\",\n- \"build:coverage\": \"COVERAGE=1 sh scripts/build-test\",\n- \"test:unit\": \"sh scripts/run-test\",\n+ \"build:test\": \"bash scripts/build-test\",\n+ \"build:coverage\": \"COVERAGE=1 bash scripts/build-test\",\n+ \"test:unit\": \"bash scripts/run-test\",\n\"test:image\": \"cd packages/examples && npm test\",\n- \"test:coverage\": \"COVERAGE=1 sh scripts/run-test\",\n+ \"test:coverage\": \"COVERAGE=1 bash scripts/run-test\",\n\"coverage:report\": \"http-server build/coverage/html -p ${PORT-3000}\",\n\"build:docs\": \"sphinx-build -a -b html docs/ build/docs/\",\n- \"lint\": \"sh scripts/run-lint\",\n+ \"lint\": \"bash scripts/run-lint\",\n\"lint:pycandela\": \"flake8 --config python/pycandela/flake8.cfg python/pycandela\",\n\"docs\": \"http-server build/docs -p ${PORT-3000}\",\n\"commit\": \"git-cz\",\n",
        "date": "03.05.2018 17:42:59",
        "repo": "kitware/candela",
        "type": "ci",
        "sim_msg": "chore: add beta publishing tasks",
        "sim_diff": "diff --git a/package.json b/package.json {\n\"scripts\": {\n- \"bootstrap\": \"yarn && lerna bootstrap\",\n+ \"bootstrap\": \"run-s bootstrap:install bootstrap:lerna\",\n+ \"bootstrap:install\": \"yarn\",\n+ \"bootstrap:lerna\": \"lerna bootstrap\",\n\"start\": \"run-s bootstrap develop\",\n\"watch\": \"lerna run watch --parallel\",\n\"develop\": \"lerna run develop --parallel\",\n- \"build\": \"npm run clean && lerna run build\",\n- \"build-preview\": \"npm run build && lerna run build-preview\",\n+ \"build\": \"run-s clean build:lerna\",\n+ \"build:lerna\": \"lerna run build\",\n+ \"build-preview\": \"run-s build build-preview:lerna\",\n+ \"build-preview:lerna\": \"lerna run build-preview\",\n\"clean\": \"rimraf packages/*/dist dev-test/*.js\",\n- \"reset\": \"npm run clean && lerna clean --yes\",\n+ \"clean:lerna\": \"lerna clean --yes\",\n+ \"reset\": \"run-s clean clean:lerna\",\n\"cache-ci\": \"node scripts/cache.js\",\n\"test\": \"run-s lint jest e2e\",\n\"test-ci\": \"run-s lint-quiet cache-ci jest e2e-ci\",\n\"jest\": \"cross-env NODE_ENV=test jest --no-cache\",\n- \"e2e-prep\": \"npm run build && cp -r packages/netlify-cms/dist dev-test/\",\n+ \"e2e-prep\": \"run-s build e2e-move-build\",\n+ \"e2e-move-build\": \"cp -r packages/netlify-cms/dist dev-test/\",\n\"e2e-serve\": \"http-server dev-test\",\n\"e2e-exec\": \"cypress run\",\n\"e2e-exec-ci\": \"cypress run --record\",\n\"e2e-ci\": \"run-s e2e-prep e2e-run-ci\",\n\"e2e-dev\": \"start-test develop 8080 e2e-exec-dev\",\n\"publish\": \"run-s publish:before-manual-version publish:after-manual-version\",\n- \"publish:before-manual-version\": \"run-s test publish:version\",\n+ \"publish:before-manual-version\": \"run-s bootstrap test publish:version\",\n\"publish:after-manual-version\": \"run-s publish:prepare publish:push\",\n\"publish:prepare\": \"run-s bootstrap build\",\n\"publish:version\": \"lerna version --no-push\",\n- \"publish:push\": \"git push --follow-tags && lerna publish from-git\",\n- \"publish:dry-run\": \"lerna version --no-git-tag-version --no-push\",\n+ \"publish:push\": \"run-s publish:push-git publish:from-git\",\n+ \"publish:push-git\": \"git push --follow-tags\",\n+ \"publish:from-git\": \"lerna publish from-git\",\n+ \"publish:dry-run\": \"run-s \\\"publish:version --no-git-tag-version\\\"\",\n+ \"publish:beta\": \"run-s publish:beta:before-manual-version publish:after-manual-version\",\n+ \"publish:beta:before-manual-version\": \"run-s bootstrap test publish:beta:version\",\n+ \"publish:beta:version\": \"lerna version prepatch --preid alpha --no-push\",\n+ \"publish:beta:dry-run\": \"run-s \\\"publish:beta:version --no-git-tag-version\\\"\",\n\"format\": \"run-s \\\"lint:css -- --fix --quiet\\\" \\\"lint:js -- --fix --quiet\\\" \\\"format:prettier -- --write\\\"\",\n\"format:prettier\": \"prettier \\\"{{packages,scripts,website}/**/,}*.{js,css}\\\"\",\n\"lint\": \"run-p -c --aggregate-output lint:*\",\n\"lint-quiet\": \"run-p -c --aggregate-output \\\"lint:* -- --quiet\\\"\",\n\"lint:css\": \"stylelint --ignore-path .gitignore \\\"{packages/**/*.{css,js},website/**/*.css}\\\"\",\n- \"lint:js\": \"eslint --ignore-path .gitignore \\\"{{packages,scripts,website}/**/,}*.js\\\"\",\n- \"lint:format\": \"npm run format:prettier -- --list-different\",\n+ \"lint:js\": \"eslint --color --ignore-path .gitignore \\\"{{packages,scripts,website}/**/,}*.js\\\"\",\n+ \"lint:format\": \"prettier \\\"{{packages,scripts,website}/**/,}*.{js,css}\\\" --list-different\",\n\"add-contributor\": \"all-contributors add\"\n},\n\"browserslist\": [\n"
    },
    {
        "msg": "ci: try to fix azure pipline",
        "diff": "diff --git a/azure-pipelines.yml b/azure-pipelines.yml @@ -16,10 +16,10 @@ strategy:\nsteps:\n- task: NodeTool@0\ninputs:\n- version: $(node_version)\n+ versionSpec: $(node_version)\ndisplayName: 'Install Node.js'\n- script: |\nnpm install\n- npm run test\n+ npm test\ndisplayName: 'npm install and test'\n",
        "date": "01.10.2018 19:03:48",
        "repo": "namics/generator-nitro",
        "type": "ci",
        "sim_msg": "refactor(azurepipeline): added test to azure pipeline",
        "sim_diff": "diff --git a/azure-pipelines.yml b/azure-pipelines.yml @@ -35,6 +35,10 @@ jobs:\nnpm install\ndisplayName: 'npm install'\n+ - script: |\n+ npm run test\n+ displayName: 'npm run test'\n+\n- script: |\nnpm run build\ndisplayName: 'npm run build'\n"
    },
    {
        "msg": "ci: update circle.yml to build properly",
        "diff": "diff --git a/circle.yml b/circle.yml @@ -11,12 +11,12 @@ dependencies:\n# Install flake8 for Python linting.\n- sudo pip install flake8\n+ # Install Lerna globally.\n+ - sudo npm install -g lerna@2.10.2\n+\n# Inject npm token into environment.\n- echo \"//registry.npmjs.org/:_authToken=$NPM_TOKEN\" >>~/.npmrc\n- cache_directories:\n- - node_modules\n-\ncompile:\noverride:\n# Build Candela.\n@@ -26,8 +26,8 @@ compile:\n- npm run build:examples\n# Build the unit test and coverage test bundles.\n- - npm run build:test:unit\n- - npm run build:test:coverage\n+ - npm run build:test\n+ - npm run build:coverage\ntest:\noverride:\n@@ -45,19 +45,18 @@ test:\n# Coverage tests.\n- npm run test:coverage\n- - npm run test:coverage:codecov\npost:\n# Gather up the testing images as build artifacts.\n- mkdir $CIRCLE_ARTIFACTS/test_images\n- - find plugins -name '*.png' | xargs -I xxx cp xxx $CIRCLE_ARTIFACTS/test_images\n+ - find packages/examples/test -name '*.png' | xargs -I xxx cp xxx $CIRCLE_ARTIFACTS/test_images\n# Copy the html coverage report to the artifacts directory as well.\n- mkdir $CIRCLE_ARTIFACTS/coverage\n- cp -r build/coverage/html $CIRCLE_ARTIFACTS/coverage\ndeployment:\n- semantic-release:\n+ lerna-publish:\nbranch: master\ncommands:\n- - DEBUG=condition npm run semantic-release\n+ - lerna publish --conventional-commits --yes\n",
        "date": "03.05.2018 16:52:30",
        "repo": "kitware/candela",
        "type": "ci",
        "sim_msg": "chore: remove testing on node@6",
        "sim_diff": "diff --git a/.circleci/config.yml b/.circleci/config.yml @@ -45,10 +45,6 @@ aliases:\nname: Unit testing (with coverage report)\ncommand: yarn test:ci:coverage\n-node6Environment: &node6Environment\n- docker:\n- - image: circleci/node:6@sha256:59ff8290842ebf74242e7434b75508fdb9dd4b9a764ce3791fc716ab22e327fc\n- working_directory: *working_directory\nnode8Environment: &node8Environment\ndocker:\n- image: circleci/node:8@sha256:9249d0ba00986d50bcab7380edcf8e20a0c76a6cb2e936588061f1c4f27cb350\n@@ -85,14 +81,6 @@ jobs:\n- run: *install\n- run: *build\n- run: *bundlesize\n- build_test_unit_node_6:\n- <<: *node6Environment\n- steps:\n- - checkout\n- - restore_cache: *restore_yarn_cache\n- - run: *install\n- - run: *build\n- - run: *unit_test\nbuild_test_unit_node_8:\n<<: *node8Environment\nsteps:\n"
    },
    {
        "msg": "ci: fix ci bug",
        "diff": "diff --git a/package.json b/package.json \"build:theme\": \"node build/bin/gen-cssfile && gulp build --gulpfile packages/theme-chalk/gulpfile.js && cp-cli packages/theme-chalk/lib lib/theme-chalk\",\n\"build:utils\": \"cross-env BABEL_ENV=utils babel src --out-dir lib --ignore src/index.js\",\n\"build:umd\": \"node build/bin/build-locale.js\",\n- \"build:ci\":\"npm run build:file && cross-env NODE_ENV=development webpack-dev-server --config build/webpack.demo.js\",\n+ \"build:ci\":\"npm run build:file && cross-env NODE_ENV=development webpack --config build/webpack.demo.js\",\n\"clean\": \"rimraf lib && rimraf packages/*/lib && rimraf test/**/coverage\",\n\"deploy:build\": \"npm run build:file && cross-env NODE_ENV=production webpack --config build/webpack.demo.js && echo element.eleme.io>>examples/element-ui/CNAME\",\n\"deploy:extension\": \"cross-env NODE_ENV=production webpack --config build/webpack.extension.js\",\n",
        "date": "25.08.2020 10:48:15",
        "repo": "hug-sun/element3",
        "type": "ci",
        "sim_msg": "chore(deps): pin root dependencies for serve",
        "sim_diff": "diff --git a/packages/serve/package.json b/packages/serve/package.json \"author\": \"\",\n\"license\": \"MIT\",\n\"dependencies\": {\n- \"@webpack-cli/utils\": \"^0.1.2\",\n- \"@webpack-cli/webpack-scaffold\": \"^0.1.2\",\n- \"chalk\": \"^2.4.1\",\n- \"cross-spawn\": \"^6.0.5\",\n- \"inquirer\": \"^6.2.0\"\n+ \"@webpack-cli/utils\": \"0.1.2\",\n+ \"@webpack-cli/webpack-scaffold\": \"0.1.2\",\n+ \"chalk\": \"2.4.1\",\n+ \"cross-spawn\": \"6.0.5\",\n+ \"inquirer\": \"6.2.0\"\n},\n\"devDependencies\": {\n- \"@types/cross-spawn\": \"^6.0.0\",\n+ \"@types/cross-spawn\": \"6.0.0\",\n\"@types/inquirer\": \"0.0.43\",\n- \"@types/node\": \"^10.12.9\",\n- \"typescript\": \"^3.1.6\"\n+ \"@types/node\": \"10.12.9\",\n+ \"typescript\": \"3.1.6\"\n},\n\"scripts\": {\n\"build\": \"tsc\",\n"
    },
    {
        "msg": "ci: remove caching",
        "diff": "diff --git a/.github/workflows/test.yml b/.github/workflows/test.yml @@ -22,18 +22,6 @@ jobs:\n- name: Install Canvas and XML dependencies\nrun: sudo apt-get install -y libcairo2-dev libpango1.0-dev libxml2-utils\n- - name: Get Yarn cache directory path\n- id: yarn-cache-dir-path\n- run: echo \"::set-output name=dir::$(yarn cache dir)\"\n-\n- - uses: actions/cache@v1\n- id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)\n- with:\n- path: ${{ steps.yarn-cache-dir-path.outputs.dir }}\n- key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}\n- restore-keys: |\n- ${{ runner.os }}-yarn-\n-\n- name: Setup Node ${{ matrix.node }}\nuses: actions/setup-node@v1\nwith:\n",
        "date": "09.10.2020 17:10:28",
        "repo": "vega/vega",
        "type": "ci",
        "sim_msg": "ci(gh-actions): bump node from 12 to 14",
        "sim_diff": "diff --git a/.github/workflows/release.yml b/.github/workflows/release.yml @@ -8,21 +8,10 @@ jobs:\nruns-on: ubuntu-18.04\nsteps:\n- uses: actions/checkout@v2\n- - uses: actions/setup-node@v1\n+ - uses: actions/setup-node@v2\nwith:\n- node-version: '12'\n-\n- - name: Get yarn cache\n- id: yarn-cache\n- run: echo \"::set-output name=dir::$(yarn cache dir)\"\n-\n- - name: Cache dependencies\n- uses: actions/cache@v2\n- with:\n- path: ${{ steps.yarn-cache.outputs.dir }}\n- key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}\n- restore-keys: |\n- ${{ runner.os }}-yarn-\n+ node-version: '14'\n+ cache: 'yarn'\n- name: Install dependencies\nrun: yarn install\n"
    },
    {
        "msg": "ci: storage endpoint in env is never used",
        "diff": "diff --git a/.circleci/config.yml b/.circleci/config.yml @@ -147,7 +147,6 @@ jobs:\nDOCKER_LOGIN: offen\nDOCKER_BUILDKIT: '1'\nDOCKER_CLI_EXPERIMENTAL: enabled\n- MINIO_STORAGE: https://storage.offen.dev\nworking_directory: ~/offen\nsteps:\n- checkout\n",
        "date": "06.01.2023 08:42:17",
        "repo": "offen/offen",
        "type": "ci",
        "sim_msg": "fix: linux docker image version",
        "sim_diff": "diff --git a/.circleci/config.yml b/.circleci/config.yml @@ -3,7 +3,7 @@ version: 2\njobs:\n'unit-test':\ndocker: &DOCKERIMAGE\n- - image: circleci/node:10.7.0-browsers\n+ - image: circleci/node:10.7.0-stretch-browsers\nsteps:\n- checkout\n- attach_workspace:\n"
    },
    {
        "msg": "ci: more work on github actions",
        "diff": "diff --git a/.github/workflows/release.yml b/.github/workflows/release.yml # This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node\n# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions\n-name: Build & Test Components\n+name: Release\non:\npush:\n",
        "date": "24.12.2020 20:01:05",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "ci",
        "sim_msg": "chore: fix release job",
        "sim_diff": "diff --git a/.github/workflows/release.yml b/.github/workflows/release.yml @@ -15,7 +15,7 @@ jobs:\n- uses: actions/checkout@v2\n- uses: actions/setup-node@v2\nwith:\n- node-version: 14\n+ node-version: 16\n- name: install\nrun: yarn\n- name: test\n"
    },
    {
        "msg": "ci: don't use sudo to install global npm package",
        "diff": "diff --git a/circle.yml b/circle.yml @@ -12,7 +12,7 @@ dependencies:\n- sudo pip install flake8\n# Install Lerna globally.\n- - sudo npm install -g lerna@2.10.2\n+ - npm install -g lerna@2.10.2\n# Inject npm token into environment.\n- echo \"//registry.npmjs.org/:_authToken=$NPM_TOKEN\" >>~/.npmrc\n",
        "date": "03.05.2018 17:10:18",
        "repo": "kitware/candela",
        "type": "ci",
        "sim_msg": "chore: set email, user for git; auth for npm",
        "sim_diff": "diff --git a/.circleci/config.yml b/.circleci/config.yml @@ -48,7 +48,9 @@ jobs:\n- \"3f:ea:54:b7:77:13:b6:cf:29:90:2b:19:bb:eb:b5:f1\"\n- run:\nname: Authenticate with registry\n- command: echo \"//registry.npmjs.org/:_authToken=$NPM_TOKEN\" > ~/repo/.npmrc\n+ command: echo \"//registry.npmjs.org/:_authToken=$NPM_TOKEN\" >> ~/.npmrc\n+ - run: git config --global user.email circleci@circleci\n+ - run: git config --global user.name CircleCI\n- run:\nname: Publish package\ncommand: \"./node_modules/.bin/lerna publish --message 'chore: release new versions' --yes\"\n"
    },
    {
        "msg": "ci(release): bootstrap packages",
        "diff": "diff --git a/.github/workflows/release.yml b/.github/workflows/release.yml @@ -28,8 +28,10 @@ jobs:\nnode-version: 12.x\n- name: Install dependencies\n- run: yarn install --frozen-lockfile && yarn bootstrap\n+ run: yarn install\n+ - name: Bootstrap\n+ run: yarn bootstrap\n- name: Linting\nrun: yarn lint\n",
        "date": "31.12.2020 15:59:41",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "ci",
        "sim_msg": "chore: add format GitHub action",
        "sim_diff": "diff --git a/.github/workflows/test.yml b/.github/workflows/test.yml @@ -22,12 +22,6 @@ jobs:\n- name: Install dependencies\nrun: yarn install --frozen-lockfile\n- - name: Check formatting\n- run: yarn format:check\n-\n- - name: Lint\n- run: yarn lint\n-\n- name: Build\nrun: yarn build\n"
    },
    {
        "msg": "ci: use airtap credentials",
        "diff": "diff --git a/.github/workflows/ci.yml b/.github/workflows/ci.yml @@ -6,6 +6,7 @@ jobs:\ntest:\nname: Node ${{ matrix.node }} / ${{ matrix.os }}\nruns-on: ${{ matrix.os }}\n+ environment: ci\nstrategy:\nfail-fast: false\nmatrix:\n@@ -20,4 +21,8 @@ jobs:\nnode-version: ${{ matrix.node }}\n- run: npm install\n- run: npm run build --if-present\n+ - run: echo \"127.0.0.1 airtap.local\" | sudo tee -a /etc/hosts\n- run: npm test\n+ env:\n+ SAUCE_USERNAME: ${{ secrets.SAUCE_USERNAME }}\n+ SAUCE_ACCESS_KEY: ${{ secrets.SAUCE_ACCESS_KEY }}\n",
        "date": "21.04.2021 17:19:35",
        "repo": "feross/simple-peer",
        "type": "ci",
        "sim_msg": "ci: add node 14 to workflow",
        "sim_diff": "diff --git a/.github/workflows/ci.yml b/.github/workflows/ci.yml @@ -25,7 +25,7 @@ jobs:\nruns-on: ${{ matrix.os }}\nstrategy:\nmatrix:\n- node-version: [10.x, 12.x]\n+ node-version: [10.x, 12.x, 14.x]\nos: [macos-latest]\nsteps:\n@@ -57,7 +57,7 @@ jobs:\nruns-on: ${{ matrix.os }}\nstrategy:\nmatrix:\n- node-version: [10.x, 12.x]\n+ node-version: [10.x, 12.x, 14.x]\nos: [ubuntu-latest, windows-latest]\nsteps:\n"
    },
    {
        "msg": "docs(Dropdown): remove deprecated lifecycle method from DropdownExampleRemote\n* docs(Dropdown): Remove deprecated lifecycle method.\nCommit includes automatic formatting changes by lint.\n* Update DropdownExampleRemote.js\n* Update DropdownExampleRemote.js",
        "diff": "diff --git a/docs/src/examples/modules/Dropdown/Usage/DropdownExampleRemote.js b/docs/src/examples/modules/Dropdown/Usage/DropdownExampleRemote.js @@ -10,15 +10,13 @@ const getOptions = () =>\n})\nclass DropdownExampleRemote extends Component {\n- componentWillMount() {\n- this.setState({\n+ state = {\nisFetching: false,\nmultiple: true,\nsearch: true,\nsearchQuery: null,\nvalue: [],\noptions: getOptions(),\n- })\n}\nhandleChange = (e, { value }) => this.setState({ value })\n@@ -39,7 +37,7 @@ class DropdownExampleRemote extends Component {\nthis.setState({ value: multiple ? [value] : value })\n}\n- toggleSearch = e => this.setState({ search: e.target.checked })\n+ toggleSearch = (e) => this.setState({ search: e.target.checked })\ntoggleMultiple = (e) => {\nconst { value } = this.state\n@@ -61,10 +59,20 @@ class DropdownExampleRemote extends Component {\nRandom\n</Button>\n<label>\n- <input type='checkbox' checked={search} onChange={this.toggleSearch} /> Search\n+ <input\n+ type='checkbox'\n+ checked={search}\n+ onChange={this.toggleSearch}\n+ />{' '}\n+ Search\n</label>{' '}\n<label>\n- <input type='checkbox' checked={multiple} onChange={this.toggleMultiple} /> Multiple\n+ <input\n+ type='checkbox'\n+ checked={multiple}\n+ onChange={this.toggleMultiple}\n+ />{' '}\n+ Multiple\n</label>\n</p>\n<Dropdown\n",
        "date": "21.03.2019 08:23:44",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "refactor: fix SelectableList on receive props",
        "sim_diff": "diff --git a/package/src/components/SelectableList/v1/SelectableList.js b/package/src/components/SelectableList/v1/SelectableList.js @@ -139,14 +139,13 @@ class SelectableList extends Component {\nconstructor(props) {\nsuper(props);\n-\nthis.state = {\n- value: this.props.value\n+ value: props.value || \"\"\n};\n}\ncomponentWillMount() {\n- this.handleChange(this.props.value || false);\n+ this.handleChange(this.props.value || \"\");\n}\ncomponentWillReceiveProps(nextProps) {\n@@ -154,9 +153,9 @@ class SelectableList extends Component {\nconst { value: nextValue } = nextProps;\n// Whenever a changed value prop comes in, we reset state to that, thus becoming clean.\n- if (value !== nextValue) {\n- this.setState({ value: nextValue || false });\n- this.handleChange(nextValue || false);\n+ if (nextValue && value !== nextValue) {\n+ this.setState({ value: nextValue || \"\" });\n+ this.handleChange(nextValue || \"\");\n}\n}\n@@ -174,7 +173,7 @@ class SelectableList extends Component {\n}\nresetValue() {\n- this.setValue(this.props.value || false);\n+ this.setValue(this.props.value || \"\");\n}\nhandleChange(value) {\n@@ -202,7 +201,6 @@ class SelectableList extends Component {\ncomponents: { SelectableItem },\n...props\n} = this.props;\n-\nreturn (\n<div>\n{isBordered ?\n@@ -259,4 +257,8 @@ class SelectableList extends Component {\n}\n}\n-export default withComponents(SelectableList);\n+const WrappedSelectableList = withComponents(SelectableList);\n+\n+WrappedSelectableList.isFormInput = true;\n+\n+export default WrappedSelectableList;\n"
    },
    {
        "msg": "docs: Adding preact/compat note to the README",
        "diff": "diff --git a/README.md b/README.md @@ -95,6 +95,17 @@ render(<App />, document.body);\n}\n```\n+`preact/compat` is our compatibility layer that allows you to leverage the many libraries of the React ecosystem and use them with Preact. If this is something you'd like to use with WMR you can add an `alias` section as well to your `package.json`:\n+\n+```json\n+{\n+ \"alias\": {\n+ \"react\": \"preact/compat\",\n+ \"react-dom\": \"preact/compat\"\n+ }\n+}\n+```\n+\n**5.** You're all set! As an extra step, if you'd like WMR to prerender your application to static HTML during production builds, replace `render()` with [preact-iso](https://www.npmjs.com/package/preact-iso):\n```diff\n",
        "date": "22.12.2020 02:21:18",
        "repo": "preactjs/wmr",
        "type": "docs",
        "sim_msg": "docs: Update optional steps quotes, use `\"`",
        "sim_diff": "diff --git a/docs/02-quickstart.md b/docs/02-quickstart.md @@ -100,7 +100,7 @@ Open up your browser's Dev Tools and debug your application directly in the brow\n- Replace Preact with React (see our [React](#react) guide below).\n- Replace HTM with JSX (see our [Babel](#babel) guide below).\n- Add TypeScript support (see our [TypeScript](#typescript) guide below).\n-- Add 'package name\" import support (see our [Importing Packages by Name](#importing-packages-by-name)) guide below).\n+- Add \"package name\" import support (see our [Importing Packages by Name](#importing-packages-by-name)) guide below).\n- See all of our guides below!\n"
    },
    {
        "msg": "docs(ButtonsPage): add missing semicolon",
        "diff": "diff --git a/docs/lib/Components/ButtonsPage.js b/docs/lib/Components/ButtonsPage.js @@ -7,7 +7,7 @@ import ButtonExample from '../examples/Button';\nconst ButtonExampleSource = require('!!raw!../examples/Button');\nimport ButtonOutline from '../examples/ButtonOutline';\n-const ButtonOutlineSource = require('!!raw!../examples/ButtonOutline')\n+const ButtonOutlineSource = require('!!raw!../examples/ButtonOutline');\nimport ButtonStateful from '../examples/ButtonStateful';\nconst ButtonStatefulSource = require('!!raw!../examples/ButtonStateful');\n",
        "date": "14.03.2017 16:39:03",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "sim_msg": "fix: Independent buttonList by instance",
        "sim_diff": "diff --git a/src/lib/constructor.js b/src/lib/constructor.js @@ -494,7 +494,7 @@ export default {\noptions.placeholder = typeof options.placeholder === 'string' ? options.placeholder : null;\noptions.linkProtocol = typeof options.linkProtocol === 'string' ? options.linkProtocol : null;\n/** Buttons */\n- options.buttonList = options.buttonList || [\n+ options.buttonList = JSON.parse(JSON.stringify(options.buttonList)) || [\n['undo', 'redo'],\n['bold', 'underline', 'italic', 'strike', 'subscript', 'superscript'],\n['removeFormat'],\n"
    },
    {
        "msg": "docs(Modal): added verbiage on size prop",
        "diff": "diff --git a/docs/lib/Components/ModalsPage.js b/docs/lib/Components/ModalsPage.js @@ -54,6 +54,7 @@ export default class ModalsPage extends React.Component {\nautoFocus: PropTypes.bool,\n// if modal should be centered vertically in viewport\ncentered: PropTypes.bool,\n+ // corresponds to bootstrap's modal sizes, ie. 'lg' or 'sm'\nsize: PropTypes.string,\n// callback for toggling isOpen in the controlling component\ntoggle: PropTypes.func,\n",
        "date": "13.04.2018 10:37:03",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "sim_msg": "feat: adding className pass-through to .modal-dialog element",
        "sim_diff": "diff --git a/src/Modal/index.jsx b/src/Modal/index.jsx @@ -174,7 +174,7 @@ class Modal extends React.Component {\nrenderModal() {\nconst { open } = this.state;\n- const { renderHeaderCloseButton } = this.props;\n+ const { renderHeaderCloseButton, dialogClassName } = this.props;\nreturn (\n<div>\n@@ -201,9 +201,12 @@ class Modal extends React.Component {\nonMouseDown={this.close}\n>\n<div\n- className={classNames({\n+ className={classNames(\n+ {\n'modal-dialog': open,\n- })}\n+ },\n+ dialogClassName,\n+ )}\nrole=\"dialog\"\naria-modal\naria-labelledby={this.headerId}\n@@ -280,6 +283,10 @@ Modal.propTypes = {\n}),\n/** specifies whether a close button is rendered in the modal header. It defaults to true. */\nrenderHeaderCloseButton: PropTypes.bool,\n+ /**\n+ * Specifies optional classes to add to the element with the '.modal-dialog' class. See Bootstrap documentation for possible classes. Some options: modal-lg, modal-sm, modal-dialog-centered\n+ */\n+ dialogClassName: PropTypes.string,\n};\nModal.defaultProps = {\n@@ -289,6 +296,7 @@ Modal.defaultProps = {\ncloseText: 'Close',\nvariant: {},\nrenderHeaderCloseButton: true,\n+ dialogClassName: undefined,\n};\n"
    },
    {
        "msg": "docs: add gridsome example",
        "diff": "diff --git a/README.md b/README.md @@ -150,6 +150,7 @@ If you'd like to toggle your app between dark and light mode, you can also wrap\n- [Vue Starter](https://codesandbox.io/s/chakra-ui-vue-starter-2sy0g)\n- [Nuxt Starter](https://codesandbox.io/s/chakra-ui-nuxt-demo-f8tq4)\n+- [Gridsome Starter](https://codesandbox.io/s/chakra-ui-gridsome-demo-038c9)\n### Storybook Components\n",
        "date": "02.04.2020 21:15:41",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "sim_msg": "docs: add new Vue 2 project vitify-admin",
        "sim_diff": "diff --git a/README.md b/README.md @@ -116,6 +116,7 @@ Use the \"Table of Contents\" menu on the top-left corner to explore the list.\n- [vite-vue2-ts-vuetify-starter](https://github.com/logue/vite-vue2-vuetify-ts-starter) - It is the above vite-vue2-ts-starter with Vuetify and its optimized settings. Includes basic templates.\n- [vite-vue2-simple-starter](https://github.com/ryuhojin/vite-vue2-simple-starter) - Vue2 + Vue Router + Vuex + Axios Api + SASS With Sample Code.\n- [vite-vue2-ts-template-starter](https://github.com/Luncode/vite-vue2-ts-template-starter) - Vite + Vue2 + Typescript + Vuex + Vue-router + Axios + Sass Simple Template.\n+- [vitify-admin](https://github.com/kingyue737/vitify-admin) - Vuetify admin starter template with full TypeScript support and intellisense of Vuetify components.\n#### React\n"
    },
    {
        "msg": "docs: readme: update",
        "diff": "diff --git a/docs/putout-script.md b/docs/putout-script.md @@ -28,17 +28,17 @@ const when = () => {\n};\n```\n-## `__` template value\n+## `__`\nThe double low dush template value (`__`) abstracts away `Identifiers`, `Expressions` and `Literals`.\n## `__a`\n-**Linked template value** (`__a`) abstracts away `Identifiers`, `Expressions` and `Literals`.\n+**Linked Value** (`__a`) abstracts away `Identifiers`, `Expressions` and `Literals`.\n-## `__args` template value\n+## `__args`\n-The `__args` template value abstracts away a sequence of zero or more arguments, for `(__args) => __a`:\n+The `__args` value abstracts away a sequence of zero or more arguments, for `(__args) => __a`:\n```js\n(a, b, c) => a + b + c;\n",
        "date": "14.09.2022 17:26:29",
        "repo": "coderaiser/putout",
        "type": "docs",
        "sim_msg": "docs: add link to custom casting guide",
        "sim_diff": "diff --git a/docs/guides.pug b/docs/guides.pug @@ -41,9 +41,14 @@ block content\n* [Getters and Setters](/docs/tutorials/getters-setters.html)\n* [Virtuals](/docs/tutorials/virtuals.html)\n- ### Integrations\n+ ### Advanced Topics\n+ * [Working with Dates](/docs/tutorials/dates.html)\n+ * [Custom Casting For Built-in Types](/docs/tutorials/custom-casting.html)\n* [Custom SchemaTypes](/docs/customschematypes.html)\n+\n+ ### Integrations\n+\n* [Promises](/docs/promises.html)\n* [AWS Lambda](/docs/lambda.html)\n* [Browser Library](/docs/browser.html)\n@@ -51,7 +56,6 @@ block content\n* [Transactions](/docs/transactions.html)\n* [MongoDB Driver Deprecation Warnings](/docs/deprecations.html)\n* [Testing with Jest](/docs/jest.html)\n- * [Working with Dates](/docs/tutorials/dates.html)\n### Migration Guides\n"
    },
    {
        "msg": "docs: typo\n[skip ci]",
        "diff": "diff --git a/README.md b/README.md @@ -336,7 +336,7 @@ Support this project by becoming a sponsor. Your logo will show up here with a l\n[<img src=\"https://nodemon.io/sparkpost.svg\" width=\"200\">](https://sparkpo.st/nodemon)\n-[<img src=\"https://nodemon.io/minmax.png\" width=\"200\">](https://https://mixmax.com)\n+[<img src=\"https://nodemon.io/mixmax.png\" width=\"200\">](https://https://mixmax.com)\n# License\n",
        "date": "02.02.2018 11:36:39",
        "repo": "remy/nodemon",
        "type": "docs",
        "sim_msg": "docs: fix contributors link, fixed",
        "sim_diff": "diff --git a/README.md b/README.md @@ -97,7 +97,7 @@ Support this project by becoming a sponsor. Your logo will show up here with a l\n## Contributors\nThis project exists thanks to all the people who contribute. [[Contribute](CONTRIBUTING.md)].\n-<a href=\"graphs/contributors\"><img src=\"https://opencollective.com/docsify/contributors.svg?width=890\" /></a>\n+<a href=\"https://github.com/QingWei-Li/docsify/graphs/contributors\"><img src=\"https://opencollective.com/docsify/contributors.svg?width=890\" /></a>\n## License\n"
    },
    {
        "msg": "docs(aspectratiobox): added docs",
        "diff": "diff --git a/packages/chakra-ui-docs/docs/alertdialog.mdx b/packages/chakra-ui-docs/docs/alertdialog.mdx @@ -120,9 +120,9 @@ export default {\n## Props\n-AlertDialog and it's components composes the `Modal` component, the only\n+AlertDialog and it's components composes the `CModal` component, the only\nexception is that it requires a `leastDestructiveRef` which is similar to the\n-`initialFocusRef` in `Modal`\n+`initialFocusRef` in `CModal`\n| Name | Type | Default | Description |\n| ------------------------------ | --------------------------------- | ------- | ------------------------------------------------------------- |\n",
        "date": "05.04.2020 10:30:11",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "sim_msg": "chore: release 6.23.2",
        "sim_diff": "diff --git a/CHANGELOG.md b/CHANGELOG.md # Changelog\n+## [6.23.2](https://github.com/blackbaud/skyux/compare/6.23.1...6.23.2) (2022-10-04)\n+\n+\n+### Bug Fixes\n+\n+* **components/modals:** set modal content tabindex to make scrollable area focusable ([#619](https://github.com/blackbaud/skyux/issues/619)) ([d71c467](https://github.com/blackbaud/skyux/commit/d71c46778cb7aaed64aa9ae4b190a410f5ecf437))\n+\n## [6.23.1](https://github.com/blackbaud/skyux/compare/6.23.0...6.23.1) (2022-10-03)\n"
    },
    {
        "msg": "docs(TextArea): fix verbiage in TextArea docs\nChange the phrase  \"don't support more\" to \"don't support anymore\" in the TextArea docs source, for proper English grammar",
        "diff": "diff --git a/docs/src/examples/addons/TextArea/Usage/index.js b/docs/src/examples/addons/TextArea/Usage/index.js @@ -9,7 +9,7 @@ const TextAreaUsageExamples = () => (\n<Segment>\n<Message warning>\n<Message.Header>Auto height</Message.Header>\n- We don't support `autoHeight` more. If you need this feature you can use{' '}\n+ We don't support `autoHeight` anymore. If you need this feature you can use{' '}\n<a\nhref='https://www.npmjs.com/package/react-textarea-autosize'\nrel='noopener noreferrer'\n",
        "date": "16.01.2022 04:24:59",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "feat(Textarea): add css prop",
        "sim_diff": "diff --git a/components/system/components/Textarea.js b/components/system/components/Textarea.js @@ -45,17 +45,7 @@ const STYLES_TEXTAREA = css`\nexport class Textarea extends React.Component {\nrender() {\n- return (\n- <TextareaAutoSize\n- css={STYLES_TEXTAREA}\n- style={this.props.style}\n- onChange={this.props.onChange}\n- placeholder={this.props.placeholder}\n- name={this.props.name}\n- value={this.props.value}\n- readOnly={this.props.readOnly}\n- maxLength={this.props.maxLength}\n- />\n- );\n+ const { css, ...props } = this.props;\n+ return <TextareaAutoSize css={[STYLES_TEXTAREA, css]} {...props} />;\n}\n}\n"
    },
    {
        "msg": "docs: fix url in with-typescript-plugin readme",
        "diff": "diff --git a/packages/razzle-plugin-typescript/README.md b/packages/razzle-plugin-typescript/README.md @@ -4,7 +4,7 @@ This package contains a plugin for using TypeScript with Razzle\nRazzle now has support for typescript using babel. Unless you specifically need this plugin we recommend using the builtin support\n-Use [with-typescript example](https://github.com/jaredpalmer/razzle/tree/next/examples/with-typescript) instead.\n+Use [with-typescript example](https://github.com/jaredpalmer/razzle/tree/master/examples/with-typescript) instead.\n## Usage in Razzle Projects\n@@ -22,7 +22,7 @@ module.exports = {\n};\n```\n-See full configuration in the [typescript example project](https://github.com/jaredpalmer/razzle/tree/master/examples/with-typescript).\n+See full configuration in the [typescript example project](https://github.com/jaredpalmer/razzle/tree/master/examples/with-typescript-plugin).\n### With custom options:\n",
        "date": "18.03.2021 22:01:38",
        "repo": "jaredpalmer/razzle",
        "type": "docs",
        "sim_msg": "docs(jest-preset): correct preset name in README",
        "sim_diff": "diff --git a/packages/jest-preset/README.md b/packages/jest-preset/README.md @@ -8,7 +8,7 @@ It ensures that Babel works correctly out of the box and that requiring files su\n## Usage\n-Add `hops-jest-preset` as [preset](https://facebook.github.io/jest/docs/en/configuration.html#preset-string) to your Jest config.\n+Add `jest-preset-hops` as [preset](https://facebook.github.io/jest/docs/en/configuration.html#preset-string) to your Jest config.\nThis can for example be done by adding it to your package.json.\n```json\n"
    },
    {
        "msg": "docs: update vuepress docs with codesandbox starter",
        "diff": "diff --git a/website/pages/with-vuepress.mdx b/website/pages/with-vuepress.mdx @@ -74,7 +74,7 @@ export default ({\n}\n}\n})\n-})\n+}\n```\nNow you can wrap your main application inside the Chakra `CThemeProvider` component by creating a layout wrapper in `theme/layouts/Layout.vue`.\n@@ -105,7 +105,11 @@ export default {\n## Using Chakra components\n-_In your `App.vue` file._\n+You can now use Chakra in your custom components for your theme in either your `theme/components` folder (available to other theme components),\n+or your `theme/global-components` folder (available to your markdown pages as well as other components).\n+Learn more about theme inheritance in the [Vuepress documentation](https://vuepress.vuejs.org/theme/inheritance.html#inheritance-strategy)\n+\n+_In your `my-component.vue` file._\n```vue\n<template>\n@@ -120,7 +124,7 @@ _In your `App.vue` file._\nimport { CBox, CButton } from '@chakra-ui/vue'\nexport default {\n- name: 'App',\n+ name: 'MyComponent',\ncomponents: {\nCBox,\nCButton\n@@ -128,3 +132,13 @@ export default {\n}\n</script>\n```\n+\n+### Vuepress Codesandbox Starters\n+\n+Here's a link to sample component starter with Nuxt.js\n+\n+- [Vuepress Starter](https://codesandbox.io/s/chakra-ui-vuepress-starter-qx4up)\n+\n+### Storybook Components\n+\n+You can also view all developed components in [Storybook](https://chakra-ui-vue.netlify.com)!\n",
        "date": "16.03.2021 11:45:13",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "sim_msg": "docs: add showcase to README",
        "sim_diff": "diff --git a/README.md b/README.md @@ -33,6 +33,26 @@ https://vuepress.vuejs.org/\n- Customizable navbar and sidebar\n- [Auto-generated GitHub link and page edit links](https://vuepress.vuejs.org/default-theme-config/#git-repo-and-edit-links)\n+## Showcase\n+\n+Websites built with VuePress:\n+\n+### Vue Ecosystem\n+\n+- [vue-cli](https://cli.vuejs.org/)\n+- [vuex](https://vuex.vuejs.org/)\n+- [vue-server-renderer](https://ssr.vuejs.org/)\n+- [vue-router](https://github.com/vuejs/vue-router)\n+- [vue-test-utils](https://vue-test-utils.vuejs.org/)\n+- [vue-loader](https://vue-loader.vuejs.org/)\n+- [vetur](https://vuejs.github.io/vetur/)\n+- [rollup-plugin-vue](https://rollup-plugin-vue.vuejs.org/)\n+\n+### Community\n+\n+- [cr-vue](https://cr-vue.mio3io.com/)\n+- [vuesax](https://lusaxweb.github.io/vuesax/)\n+\n## Todo Features\nVuePress is still a work in progress. There are a few things that it currently does not support but are planned:\n"
    },
    {
        "msg": "docs(docsearch): added docsearch to docs",
        "diff": "diff --git a/docs/content/settings.json b/docs/content/settings.json \"dark\": \"/logo-dark.svg\"\n},\n\"github\": \"nuxt-community/firebase-module\",\n- \"twitter\": \"nuxt_js\"\n+ \"twitter\": \"nuxt_js\",\n+ \"algolia\": {\n+ \"apiKey\": \"26073a7590724b3efc377b3b7608f3e0\",\n+ \"indexName\": \"nuxtjs_firebase\",\n+ \"langAttribute\": \"lang\"\n+}\n}\n",
        "date": "15.10.2020 22:00:37",
        "repo": "nuxt-community/firebase-module",
        "type": "docs",
        "sim_msg": "feat: Custom token event updated with extra labels",
        "sim_diff": "diff --git a/src/background.js b/src/background.js @@ -128,6 +128,9 @@ store.subscribe(async ({\nproperties: {\ncategory: 'Settings',\naction: 'Custom Token Added',\n+ customTokenName: `${payload.customToken.name}`,\n+ customTokenChain: `${payload.customToken.chain}`,\n+ customTokenSymbol: `${payload.customToken.symbol}`,\nlabel: [`${payload.customToken.name}`, `(${payload.customToken.chain})`, `(${payload.customToken.symbol})`]\n}\n})\n"
    },
    {
        "msg": "docs(Document): use only https sources",
        "diff": "diff --git a/docs/src/components/Document.js b/docs/src/components/Document.js @@ -13,42 +13,49 @@ const Document = ({ Body, children, Head, Html, siteData: { dev, versions } }) =\n<link rel='stylesheet' href='/style.css' />\n<link\nrel='stylesheet'\n- href={`//cdnjs.cloudflare.com/ajax/libs/semantic-ui/${versions.sui}/semantic.min.css`}\n+ href={`https://cdnjs.cloudflare.com/ajax/libs/semantic-ui/${versions.sui}/semantic.min.css`}\n/>\n- <script src={`//cdnjs.cloudflare.com/ajax/libs/anchor-js/${versions.anchor}/anchor.min.js`} />\n<script\n- src={`//cdn.jsdelivr.net/npm/@babel/standalone@${versions.babel.standalone}/babel.min.js`}\n+ src={`https://cdnjs.cloudflare.com/ajax/libs/anchor-js/${versions.anchor}/anchor.min.js`}\n/>\n<script\n- src={`//cdn.jsdelivr.net/npm/@babel/preset-env-standalone@${\n+ src={`https://cdn.jsdelivr.net/npm/@babel/standalone@${\n+ versions.babel.standalone\n+ }/babel.min.js`}\n+ />\n+ <script\n+ src={`https://cdn.jsdelivr.net/npm/@babel/preset-env-standalone@${\nversions.babel.standalone\n}/babel-preset-env.min.js`}\n/>\n- <script src={`//cdn.jsdelivr.net/faker.js/${versions.faker}/faker.min.js`} />\n+ <script src={`https://cdn.jsdelivr.net/faker.js/${versions.faker}/faker.min.js`} />\n- <script crossOrigin='true' src={`//unpkg.com/prettier@${versions.prettier}/standalone.js`} />\n<script\ncrossOrigin='true'\n- src={`//unpkg.com/prettier@${versions.prettier}/parser-babylon.js`}\n+ src={`https://unpkg.com/prettier@${versions.prettier}/standalone.js`}\n+ />\n+ <script\n+ crossOrigin='true'\n+ src={`https://unpkg.com/prettier@${versions.prettier}/parser-babylon.js`}\n/>\n<script\n- src={`//cdnjs.cloudflare.com/ajax/libs/prop-types/${versions.propTypes}/prop-types${\n+ src={`https://cdnjs.cloudflare.com/ajax/libs/prop-types/${versions.propTypes}/prop-types${\nsiteData.dev ? '' : '.min'\n}.js`}\n/>\n<script\n- src={`//cdnjs.cloudflare.com/ajax/libs/react/${versions.react}/umd/react${\n+ src={`https://cdnjs.cloudflare.com/ajax/libs/react/${versions.react}/umd/react${\ndev ? '.development' : '.production.min'\n}.js`}\n/>\n<script\n- src={`//cdnjs.cloudflare.com/ajax/libs/react-dom/${versions.react}/umd/react-dom${\n+ src={`https://cdnjs.cloudflare.com/ajax/libs/react-dom/${versions.react}/umd/react-dom${\ndev ? '.development' : '.production.min'\n}.js`}\n/>\n<script\n- src={`//cdnjs.cloudflare.com/ajax/libs/react-dom/${\n+ src={`https://cdnjs.cloudflare.com/ajax/libs/react-dom/${\nversions.react\n}/umd/react-dom-server.browser${dev ? '.development' : '.production.min'}.js`}\n/>\n",
        "date": "29.09.2018 13:13:49",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "fix: pasting media tag",
        "sim_diff": "diff --git a/src/lib/util.js b/src/lib/util.js @@ -1747,7 +1747,7 @@ const util = {\nfor (let i = 0, len = withoutFormatCells.length, t, f; i < len; i++) {\nt = withoutFormatCells[i];\nf = this.createElement('DIV');\n- f.innerHTML = t.textContent.trim().length === 0 ? '<br>' : t.innerHTML;\n+ f.innerHTML = (t.textContent.trim().length === 0 && t.children.length === 0) ? '<br>' : t.innerHTML;\nt.innerHTML = f.outerHTML;\n}\n},\n"
    },
    {
        "msg": "docs: added requirements to README",
        "diff": "diff --git a/README.md b/README.md ## Quick Setup\n+Make sure you have the newest versions of Nuxt and Firebase installed and setup in your project.\n+\n+```bash\n+yarn add nuxt # OR npm i nuxt\n+yarn add firebase # OR npm i firebase\n+```\n+\nInstall the module via NPM or Yarn:\n```bash\n",
        "date": "07.03.2020 18:22:08",
        "repo": "nuxt-community/firebase-module",
        "type": "docs",
        "sim_msg": "docs: add instructions for npm install",
        "sim_diff": "diff --git a/README.md b/README.md @@ -33,6 +33,10 @@ https://vuepress.vuejs.org/\n```bash\nyarn add vuepress -D # Install 0.x.x.\nyarn add vuepress@next -D # Install next.\n+\n+or\n+npm install -D vuepress # Install 0.x.x.\n+npm install -D vuepress@next # Install next.\n```\n## Features\n"
    },
    {
        "msg": "docs: document externals and css imports",
        "diff": "diff --git a/website/pages/getting-started.mdx b/website/pages/getting-started.mdx @@ -103,7 +103,7 @@ yarn add --dev webpack@4.46.0 html-webpack-plugin@4.5.2\nAlso if there are issues, try adding specific package versions to resolutions in `package.json`.\n-## Common problems\n+## Common issues\nIf you have issues with css this might be related to postcss being resolved wrong.\n@@ -115,6 +115,42 @@ To fix this add:\n}\n```\n+If you get a error like this:\n+\n+```\n+node_modules/react-images-upload/index.css:1\n+.fileUploader {\n+^\n+\n+SyntaxError: Unexpected token '.'\n+ at wrapSafe (internal/modules/cjs/loader.js:1072:16)\n+```\n+\n+It means node tries to use `index.css` as a node module.\n+\n+To fix this make sure the module with the css is not externalized.\n+\n+```js\n+// razzle.config.js\n+'use strict';\n+\n+module.exports = {\n+ modifyWebpackOptions({\n+ options: {\n+ webpackOptions, // the modified options that was used to configure webpack/ webpack loaders and plugins\n+ }\n+ }) {\n+\n+ // If you use experimental.newExternals\n+ webpackOptions.notNodeExternalResMatch = (request, context) => {\n+ return /react-images-upload/.test(request)\n+ };\n+\n+ return webpackOptions;\n+ },\n+};\n+```\n+\nTo resolutions in your package.json. For npm see [here](https://stackoverflow.com/questions/52416312/npm-equivalent-of-yarn-resolutions).\n## Debugging with Inspector\n",
        "date": "13.03.2021 15:17:49",
        "repo": "jaredpalmer/razzle",
        "type": "docs",
        "sim_msg": "docs(changelog): update for v3.0.0",
        "sim_diff": "diff --git a/CHANGELOG.md b/CHANGELOG.md Changelog\n=========\n+3.0.0\n+-------------\n+\n+### Features\n+* Upgraded webpack to `^2.0.0` (along with all associated dependencies)\n+* Upgraded react to `^15.5.4`\n+* Upgraded react-dom to `^15.5.4`\n+* Upgraded react-redux to `^5.0.4`\n+* Upgraded redbox-react to `^5.0.4`\n+* Upgraded bootstrap to `^4.0.0-alpha`\n+* Replaced 3rd-party bootstrap import with local dependency\n+* Replaced `babel-preset-stage-1` and friends with `babel-preset-env`\n+* Added normalizer bundler for JavaScript (`Promise`, `fetch`, and `Object.assign`)\n+* Added `dirty-chai`\n+\n+### Improvements\n+* Replaced PropTypes usage with `prop-types` package\n+* Simplified project structure and configuration\n+* Replaced postcss-loader usage with css-loader builtins\n+* Webpack manifest is now bundled separately from vendor bundle (improves caching)\n+* Replaced `file-loader` with `url-loader`\n+* Moved all build-related dependencies back to `devDependencies`\n+* Replaced `better-npm-run` with `cross-env`\n+* Cleaned up some sloppy tests\n+\n+### Fixes\n+* `console.log` now works correctly inside of Karma\n+\n+### Deprecations\n+* Code coverage reporting has been temporarily removed\n+* Support for `.css` files has been temporarily removed (use `.scss` or `.sass`)\n+* Removed `normalize.css` since this is now provided by bootstrap\n+\n3.0.0-alpha.0\n-------------\n"
    },
    {
        "msg": "docs: link to razzle 3 docs",
        "diff": "diff --git a/website/pages/index.mdx b/website/pages/index.mdx @@ -16,6 +16,10 @@ JavaScript applications are tough to setup. Either you buy into a framework, for\n- [Jest](https://github.com/facebook/jest) test runner setup with sensible defaults via `razzle test`\n- SPA mode, build client side apps with razzle\n+## Not ready for Razzle 4.0?\n+\n+[Razzle 3 docs](https://razzle-git-three-jared.vercel.app/)\n+\n## Getting help\nIf you get stuck, check out Razzle's [GitHub Discussions](https://github.com/jaredpalmer/razzle/discussions). In addition, #razzle-afterjs on [Formium Community Discord Server](https://discord.gg/pJSg287) is a great way to get help quickly too.\n",
        "date": "24.03.2021 23:46:50",
        "repo": "jaredpalmer/razzle",
        "type": "docs",
        "sim_msg": "docs: Add discouraging notes about Mocha [ci skip]",
        "sim_diff": "diff --git a/docs/Guide.Mocha.md b/docs/Guide.Mocha.md This guide describes how to install [Mocha](mochajs.org) as a test runner to be used by Detox for running the E2E tests.\n-**Disclaimer:**\n-\n-* Here we focus on installing Detox on _new projects_. If you're migrating a project with an existing Detox installation, please apply some common sense while using this guide.\n-\n+Note that while Mocha is lightweight and easy to set up, we nevertheless encourage usage of [Jest](Guide.Jest.md]) instead, for 2 main reasons:\n+1. Mocha does not support parallel-test execution (i.e. splitting the test suites between concurrently running test devices/emulators).\n+2. Advanced integration features such as taking device screenshots on failures will not be as timely accurate as with working with Jest.\n## Installation\n+**Disclaimer: **Here we focus on installing Detox on _new projects_. If you're migrating a project with an existing Detox installation, please apply some common sense while using this guide.\n+\n### 1. Install Mocha :coffee:\nBefore starting with Mocha setup, be sure to complete the preliminary sections of the [Getting Started](Introduction.GettingStarted.md) guide.\n"
    },
    {
        "msg": "docs(IconExampleIconGroup): fix circle outline",
        "diff": "diff --git a/docs/src/examples/elements/Icon/Groups/IconExampleIconGroup.js b/docs/src/examples/elements/Icon/Groups/IconExampleIconGroup.js @@ -3,7 +3,7 @@ import { Icon } from 'semantic-ui-react'\nconst IconExampleIconGroup = () => (\n<Icon.Group size='huge'>\n- <Icon size='big' name='thin circle' />\n+ <Icon size='big' name='circle outline' />\n<Icon name='user' />\n</Icon.Group>\n)\n",
        "date": "20.07.2018 07:22:30",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "refactor: fix groupHeaderElements linting",
        "sim_diff": "diff --git a/packages/table/src/components/GroupHeaderElements.js b/packages/table/src/components/GroupHeaderElements.js import React from \"react\";\n+import PropTypes from \"prop-types\";\n+\nimport { CaretRight16, CaretDown16 } from \"@hig/icons\";\nimport { css } from \"emotion\";\nconst GroupHeaderElements = ({ isGrouped, groupHeaderElementStyles }) => (\n- <GroupHeader className={css(groupHeaderElementStyles)}>\n+ <div className={css(groupHeaderElementStyles)}>\n{isGrouped ? <CaretDown16 /> : <CaretRight16 />}\n- </GroupHeader>\n+ </div>\n);\n+GroupHeaderElements.propTypes = {\n+ isGrouped: PropTypes.bool,\n+ groupHeaderElementStyles: PropTypes.shape({\n+ styles: PropTypes.string\n+ })\n+};\n+\nexport default GroupHeaderElements;\n"
    },
    {
        "msg": "docs(install): Use the minified version of Bootstrap CSS\ndocs(install): Use the minified version of Bootstrap CSS",
        "diff": "diff --git a/docs/lib/Home/index.js b/docs/lib/Home/index.js @@ -72,7 +72,7 @@ npm install --save reactstrap@next react react-dom`}\n</pre>\n<p>Import Bootstrap CSS in the <code>src/index.js</code> file:</p>\n<pre>\n- <PrismCode className=\"language-bash\">import 'bootstrap/dist/css/bootstrap.css';</PrismCode>\n+ <PrismCode className=\"language-bash\">import 'bootstrap/dist/css/bootstrap.min.css';</PrismCode>\n</pre>\n<p>Import required reactstrap components within <code>src/App.js</code> file or your custom component files:</p>\n<pre>\n",
        "date": "12.03.2018 01:36:35",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "sim_msg": "refactor(doc): code-review improvement suggestion implementation",
        "sim_diff": "diff --git a/packages/doc/src/components/CodeBlock/PrismHighlight/PrismHighlight.jsx b/packages/doc/src/components/CodeBlock/PrismHighlight/PrismHighlight.jsx @@ -44,7 +44,7 @@ const Pre = styled.pre`\n`;\nconst PrismHighlight = ({ code, liveEditor }) => {\n- const highlightCode = !code ? useContext(CodeBlockContext).code : code;\n+ const highlightCode = code || useContext(CodeBlockContext).code;\nreturn (\n<Highlight {...defaultPropsWithTheme} code={highlightCode} language=\"jsx\">\n"
    },
    {
        "msg": "docs(changelog): manually correct unreleased",
        "diff": "diff --git a/CHANGELOG.md b/CHANGELOG.md # Change Log\n-## [Unreleased](https://github.com/Semantic-Org/Semantic-UI-React/tree/HEAD)\n-\n-[Full Changelog](https://github.com/Semantic-Org/Semantic-UI-React/compare/v0.66.0...HEAD)\n-\n-**Implemented enhancements:**\n-\n-- Accordion.Title - 'as' prop in dynamic accordion titles [\\#1144](https://github.com/Semantic-Org/Semantic-UI-React/issues/1144)\n-\n## [v0.66.0](https://github.com/Semantic-Org/Semantic-UI-React/tree/v0.66.0) (2017-02-22)\n[Full Changelog](https://github.com/Semantic-Org/Semantic-UI-React/compare/v0.65.0...v0.66.0)\n- Add missing MenuItem `disabled` prop [\\#1363](https://github.com/Semantic-Org/Semantic-UI-React/issues/1363)\n- Remove Form `onSubmit` prop and serializer [\\#1362](https://github.com/Semantic-Org/Semantic-UI-React/issues/1362)\n- Add `link` prop to Card [\\#1350](https://github.com/Semantic-Org/Semantic-UI-React/issues/1350)\n+- Accordion.Title - 'as' prop in dynamic accordion titles [\\#1144](https://github.com/Semantic-Org/Semantic-UI-React/issues/1144)\n- Typings: unable to set many typical html element props [\\#1072](https://github.com/Semantic-Org/Semantic-UI-React/issues/1072)\n**Fixed bugs:**\n",
        "date": "21.02.2017 20:45:10",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "docs(changelog): update and tidy latest release",
        "sim_diff": "diff --git a/CHANGELOG.md b/CHANGELOG.md All notable changes to this project will be documented in this file. See [standard-version](https://github.com/conventional-changelog/standard-version) for commit guidelines.\n-### [1.2.3](https://github.com/remarkablemark/html-react-parser/compare/v1.2.2...v1.2.3) (2021-01-28)\n-\n+## [1.2.3](https://github.com/remarkablemark/html-react-parser/compare/v1.2.2...v1.2.3) (2021-01-28)\n### Bug Fixes\n-* **index:** make sure to export the named exports ([1689bd9](https://github.com/remarkablemark/html-react-parser/commit/1689bd9b2c3a3dd6d9d7b3c06d9d3fa7436c65b5)), closes [#217](https://github.com/remarkablemark/html-react-parser/issues/217) [#216](https://github.com/remarkablemark/html-react-parser/issues/216)\n+- **index:** make sure to export the named exports ([1689bd9](https://github.com/remarkablemark/html-react-parser/commit/1689bd9b2c3a3dd6d9d7b3c06d9d3fa7436c65b5)), closes [#217](https://github.com/remarkablemark/html-react-parser/issues/217)\n## [1.2.2](https://github.com/remarkablemark/html-react-parser/compare/v1.2.1...v1.2.2) (2021-01-28)\n"
    },
    {
        "msg": "docs(auth-init): added namespace info to vuex actions/mutations",
        "diff": "diff --git a/docs/content/en/service-options/auth.md b/docs/content/en/service-options/auth.md @@ -31,6 +31,8 @@ This sets up an `onAuthStateChanged()` listener and hooks it up to the vuex stor\nJust add a mutation/action to your vuex store ([as seen below](#onauthstatechangedmutation)) that handles what to do with the authUser object (e.g. save it to the state or get user data from FireStore) and then define the name of the action/mutation in the `firebase.services.auth.initialize` configuration as above.\n+<alert type=\"info\">You can also use namespaces for your store actions/mutations like so: `onAuthStateChangedAction: 'namespaceName/actionName'`.</alert>\n+\nWhen onAuthStateChanged() gets triggered by Firebase, the defined mutation/action will be called with the `authUser` and `claims` attributes as [as seen below](#onauthstatechangedmutation)\nTo unsubscribe from the listener simply call the `$fireAuthUnsubscribe()` function which is provided as a [combined inject](https://nuxtjs.org/guide/plugins#combined-inject).\n",
        "date": "16.10.2020 00:00:22",
        "repo": "nuxt-community/firebase-module",
        "type": "docs",
        "sim_msg": "docs: add more example on unsubscribe method\nfix",
        "sim_diff": "diff --git a/docs/api/README.md b/docs/api/README.md @@ -176,13 +176,16 @@ const store = new Vuex.Store({ ...options })\n- `subscribe(handler: Function, options?: Object): Function`\n- Subscribe to store mutations. The `handler` is called after every mutation and receives the mutation descriptor and post-mutation state as arguments:\n+ Subscribe to store mutations. The `handler` is called after every mutation and receives the mutation descriptor and post-mutation state as arguments.\n``` js\n- store.subscribe((mutation, state) => {\n+ const unsubscribe = store.subscribe((mutation, state) => {\nconsole.log(mutation.type)\nconsole.log(mutation.payload)\n})\n+\n+ // You may call unsubscribe to stop the subscription\n+ unsubscribe()\n```\nBy default, new handler is added to the end of the chain, so it will be executed after other handlers that were added before. This can be overridden by adding `prepend: true` to `options`, which will add the handler to the beginning of the chain.\n@@ -191,7 +194,7 @@ const store = new Vuex.Store({ ...options })\nstore.subscribe(handler, { prepend: true })\n```\n- To stop subscribing, call the returned unsubscribe function.\n+ The `subscribe` method will return an `unsubscribe` function, which should be called when the subscription is no longer needed. For example, you might subscribe to a Vuex Module and unsubscribe when you unregister the module. Or you might call `subscribe` from inside a Vue Component and then destroy the component later. In these cases, you should remember to unsubscribe the subscription manually.\nMost commonly used in plugins. [Details](../guide/plugins.md)\n@@ -201,13 +204,17 @@ const store = new Vuex.Store({ ...options })\n> New in 2.5.0\n- Subscribe to store actions. The `handler` is called for every dispatched action and receives the action descriptor and current store state as arguments:\n+ Subscribe to store actions. The `handler` is called for every dispatched action and receives the action descriptor and current store state as arguments.\n+ The `subscribe` method will return an `unsubscribe` function, which should be called when the subscription is no longer needed. For example, when unregistering a Vuex module or before destroying a Vue component.\n``` js\n- store.subscribeAction((action, state) => {\n+ const unsubscribe = store.subscribeAction((action, state) => {\nconsole.log(action.type)\nconsole.log(action.payload)\n})\n+\n+ // You may call unsubscribe to stop the subscription\n+ unsubscribe()\n```\nBy default, new handler is added to the end of the chain, so it will be executed after other handlers that were added before. This can be overridden by adding `prepend: true` to `options`, which will add the handler to the beginning of the chain.\n@@ -216,7 +223,7 @@ const store = new Vuex.Store({ ...options })\nstore.subscribeAction(handler, { prepend: true })\n```\n- To stop subscribing, call the returned unsubscribe function.\n+ The `subscribeAction` method will return an `unsubscribe` function, which should be called when the subscription is no longer needed. For example, you might subscribe to a Vuex Module and unsubscribe when you unregister the module. Or you might call `subscribeAction` from inside a Vue Component and then destroy the component later. In these cases, you should remember to unsubscribe the subscription manually.\n> New in 3.1.0\n"
    },
    {
        "msg": "docs(README): fix release instructions'",
        "diff": "diff --git a/README.md b/README.md @@ -135,7 +135,6 @@ npm run deploy:docs\nUpdate the changelog (requires [github_changelog_generator][15]):\n```sh\n-npm run deploy:docs\ngithub_changelog_generator\ngit add CHANGELOG.md\ngit commit -m 'docs(changelog): update changelog [ci skip]'\n",
        "date": "28.02.2017 03:25:03",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "docs: update the version of the required Node\nFor Eggjs's v3.x, Nodejs version >=  14.20.0.",
        "sim_diff": "diff --git a/README.md b/README.md @@ -32,7 +32,7 @@ $ npm run dev\n$ open http://localhost:7001\n```\n-> Node.js >= 8.5.0 required.\n+> Node.js >= 14.20.0 required.\n## Documentations\n"
    },
    {
        "msg": "docs(Modal): fix Modal.Description description\ndocs(Modal): fix Modal.Description description",
        "diff": "diff --git a/src/modules/Modal/ModalDescription.js b/src/modules/Modal/ModalDescription.js @@ -5,7 +5,7 @@ import React from 'react'\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps } from '../../lib'\n/**\n- * A modal can have a header.\n+ * A modal can contain a description with one or more paragraphs.\n*/\nfunction ModalDescription(props) {\nconst { children, className, content } = props\n",
        "date": "22.02.2019 11:33:11",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "docs: remove interactive modal breaking gatsby build",
        "sim_diff": "diff --git a/www/src/pages/components/modal.mdx b/www/src/pages/components/modal.mdx @@ -19,7 +19,7 @@ import PropsTable from '../../components/PropsTable';\n##### Example Usage\n-```jsx live=true\n+```jsx\nclass ModalWrapper extends React.Component {\nconstructor(props) {\nsuper(props);\n"
    },
    {
        "msg": "docs(Cards): fix broken link",
        "diff": "diff --git a/docs/lib/examples/CardGroups.js b/docs/lib/examples/CardGroups.js @@ -25,7 +25,7 @@ const Example = (props) => {\n</CardBody>\n</Card>\n<Card>\n- <CardImg top width=\"100%\" src=\"/assets/static318x180.svg\" alt=\"Card image cap\" />\n+ <CardImg top width=\"100%\" src=\"/assets/318x180.svg\" alt=\"Card image cap\" />\n<CardBody>\n<CardTitle>Card title</CardTitle>\n<CardSubtitle>Card subtitle</CardSubtitle>\n",
        "date": "03.10.2019 18:02:21",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "sim_msg": "feat(card/article): adapat default linkfactory to receive more params",
        "sim_diff": "diff --git a/components/card/article/src/index.js b/components/card/article/src/index.js @@ -180,8 +180,8 @@ CardArticle.propTypes = {\nCardArticle.defaultProps = {\ntagChip: SuiTagChip,\nfeatured: false,\n- linkFactory: ({ href, className, children, title }) =>\n- <a href={href} className={className} title={title}>{children}</a>\n+ linkFactory: ({ children, ...rest }) =>\n+ <a {...rest}>{children}</a>\n}\nCardArticle.displayName = 'CardArticle'\n"
    },
    {
        "msg": "docs: Fix typo in faq.md\n[skip ci]",
        "diff": "diff --git a/faq.md b/faq.md @@ -96,7 +96,7 @@ nodemon (from 1.4.2 onwards) uses [Chokidar](https://www.npmjs.com/package/choki\nIf you find your files aren't being monitored, either nodemon isn't restarting, or it reports that zero files are being watched, then you may need the polling mode.\n-To enable polling use the the legacy flag either via the terminal:\n+To enable polling use the legacy flag either via the terminal:\n```shell\n$ nodemon --legacy-watch\n",
        "date": "18.11.2021 13:49:45",
        "repo": "remy/nodemon",
        "type": "docs",
        "sim_msg": "docs: add watchmen docs",
        "sim_diff": "diff --git a/CONTRIBUTING.md b/CONTRIBUTING.md @@ -18,6 +18,13 @@ $ cd analytics\n$ npm run bootstrap\n```\n+Because analytics has a large number of packages, we need to also [install watchmen](https://facebook.github.io/watchman/docs/install.html) for better watching.\n+\n+```sh\n+brew update\n+brew install watchman\n+```\n+\n### Run locally\n```sh\n@@ -38,7 +45,7 @@ $ npm run bootstrap\n### `watch`\n-Watches all `analytics` packages and transpiles them on change.\n+Watches all `analytics` packages and builds them on change.\n#### Usage\n"
    },
    {
        "msg": "docs(Progress): typo stripped -> striped",
        "diff": "diff --git a/docs/lib/Components/ProgressPage.js b/docs/lib/Components/ProgressPage.js @@ -48,7 +48,7 @@ export default class ProgressPage extends React.Component {\nPropTypes.number,\n]),\nanimated: PropTypes.bool,\n- stripped: PropTypes.bool,\n+ striped: PropTypes.bool,\ncolor: PropTypes.string,\nclassName: PropTypes.string,\nbarClassName: PropTypes.string // used to add class to the inner progress-bar element\n",
        "date": "14.12.2017 23:50:44",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "sim_msg": "test: update jest for ProgressBar",
        "sim_diff": "diff --git a/packages/progress-bar/src/ProgressBar.test.js b/packages/progress-bar/src/ProgressBar.test.js @@ -10,6 +10,22 @@ describe(\"progress-bar/ProgressBar\", () => {\n{\ndescription: \"determinate\",\nprops: { percentComplete: 33 }\n+ },\n+ {\n+ description: \"passing className\",\n+ props: { className: \"myClass-a myClass-b\" }\n+ },\n+ {\n+ description: \"custom stylesheet\",\n+ props: {\n+ stylesheet: styles => ({\n+ ...styles,\n+ wrapper: {\n+ ...styles.wrapper,\n+ backgroundColor: \"red\"\n+ }\n+ })\n+ }\n}\n]);\n});\n"
    },
    {
        "msg": "docs(Responsive): update ResponsiveExampleMaxWidth.js (added two words to clarify)\nAdded \"and lower\" to the 2569px width example, because that's what it does and the wording was confusing on first sight.",
        "diff": "diff --git a/docs/src/examples/addons/Responsive/Types/ResponsiveExampleMaxWidth.js b/docs/src/examples/addons/Responsive/Types/ResponsiveExampleMaxWidth.js @@ -7,7 +7,7 @@ const ResponsiveExampleMaxWidth = () => (\nVisible only if display has <code>767px</code> width and lower\n</Responsive>\n<Responsive as={Segment} maxWidth={2569}>\n- Visible only if display has <code>2569px</code> width\n+ Visible only if display has <code>2569px</code> width and lower\n</Responsive>\n</Segment.Group>\n)\n",
        "date": "02.01.2019 12:34:44",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "fix: responsive bug",
        "sim_diff": "diff --git a/src/lib/core.js b/src/lib/core.js @@ -6580,7 +6580,7 @@ export default function (context, pluginCallButtons, plugins, lang, options, _re\nconst responsiveSize = event._responsiveButtonSize;\nif (responsiveSize) {\n- const windowWidth = _w.innerWidth;\n+ const windowWidth = context.element.toolbar.offsetWidth;\nlet responsiveWidth = 'default';\nfor (let i = 1, len = responsiveSize.length; i < len; i++) {\nif (windowWidth < responsiveSize[i]) {\n"
    },
    {
        "msg": "docs(readme): Add Netflix EDX as a user",
        "diff": "diff --git a/README.md b/README.md @@ -68,6 +68,7 @@ Here are some helpful links:\nThese great products are built on Semantic UI React. Add yours [here][22].\n+- Netflix's Edge Developer Experience team's numerous [internal apps](https://github.com/Semantic-Org/Semantic-UI-React/issues/1604)\n- http://stoplight.io\n- https://roadmap.space\n- https://edabit.com\n",
        "date": "21.04.2017 13:39:08",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "docs: Fix contributing guidelines link",
        "sim_diff": "diff --git a/packages/react/README.md b/packages/react/README.md @@ -49,7 +49,7 @@ For full documentation, visit [stitches.dev](https://stitches.dev).\n## Contributing\n-Please follow our [contributing guidelines](./CONTRIBUTING.md).\n+Please follow our [contributing guidelines](https://github.com/modulz/stitches/blob/canary/CONTRIBUTING.md).\n## Authors\n"
    },
    {
        "msg": "docs(Collapse): make example more clear\n`isOpen={collapse}` is a contradiction, because if `collapse` is `true` then it's not collapsed and if it's `false` it is collapsed.",
        "diff": "diff --git a/docs/lib/examples/Collapse.js b/docs/lib/examples/Collapse.js @@ -2,14 +2,14 @@ import React, { useState } from 'react';\nimport { Collapse, Button, CardBody, Card } from 'reactstrap';\nconst Example = (props) => {\n- const [collapse, setCollapse] = useState(false);\n+ const [isOpen, setIsOpen] = useState(false);\n- const toggle = () => setCollapse(!collapse);\n+ const toggle = () => setIsOpen(!isOpen);\nreturn (\n<div>\n<Button color=\"primary\" onClick={toggle} style={{ marginBottom: '1rem' }}>Toggle</Button>\n- <Collapse isOpen={collapse}>\n+ <Collapse isOpen={isOpen}>\n<Card>\n<CardBody>\nAnim pariatur cliche reprehenderit,\n",
        "date": "01.11.2019 17:02:09",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "sim_msg": "feat(cards): add card definitions panel",
        "sim_diff": "diff --git a/src/components/common/card.js b/src/components/common/card.js @@ -4,6 +4,8 @@ import {\nDisclosureButton,\nDisclosurePanel,\n} from '@reach/disclosure'\n+import DefinitionsPanel from '~components/common/state/definitions-panel'\n+\nimport cardStyles from './card.module.scss'\nconst CardDisclosure = ({ children }) => (\n@@ -18,10 +20,15 @@ const CardDisclsoureButton = ({ closed, expanded }) => (\n<span className={cardStyles.expanded}>{expanded}</span>\n</DisclosureButton>\n)\n+\nconst CardDisclosurePanel = ({ children }) => (\n<DisclosurePanel>{children}</DisclosurePanel>\n)\n+const CardDefinitionsPanel = ({ children }) => (\n+ <DefinitionsPanel>{children}</DefinitionsPanel>\n+)\n+\nconst CardBody = ({ children }) => (\n<div className={cardStyles.body}>{children}</div>\n)\n@@ -44,4 +51,5 @@ export {\nCardDisclosure,\nCardDisclsoureButton,\nCardDisclosurePanel,\n+ CardDefinitionsPanel,\n}\n"
    },
    {
        "msg": "docs: README Grammar\n`less` is used for singular mass nouns\n`fewer` when discussing countable things",
        "diff": "diff --git a/README.md b/README.md @@ -347,9 +347,9 @@ The answer is simple, but possibly frustrating. I'm not saying (how I pronounce\n## Design principles\n-- Less flags is better\n+- Fewer flags is better\n- Works across all platforms\n-- Less features\n+- Fewer features\n- Let individuals build on top of nodemon\n- Offer all CLI functionality as an API\n- Contributions must have and pass tests\n",
        "date": "03.09.2019 11:53:51",
        "repo": "remy/nodemon",
        "type": "docs",
        "sim_msg": "docs: fix formatting of flags in readme\ncloses",
        "sim_diff": "diff --git a/Readme.md b/Readme.md @@ -1388,13 +1388,13 @@ is set to `true`:\nThere are other flags available. They may or may not function, but are still\navailable to specify.\n-- COMPRESS\n-- INTERACTIVE\n-- NO_SCHEMA\n-- PLUGIN_AUTH\n-- REMEMBER_OPTIONS\n-- SSL\n-- SSL_VERIFY_SERVER_CERT\n+- `COMPRESS`\n+- `INTERACTIVE`\n+- `NO_SCHEMA`\n+- `PLUGIN_AUTH`\n+- `REMEMBER_OPTIONS`\n+- `SSL`\n+- `SSL_VERIFY_SERVER_CERT`\n## Debugging and reporting problems\n"
    },
    {
        "msg": "docs: fixed typo in accessibility.mdx",
        "diff": "diff --git a/packages/chakra-ui-docs/docs/accessibility.mdx b/packages/chakra-ui-docs/docs/accessibility.mdx @@ -5,7 +5,7 @@ heavy-lifting for you in order to allow you to focus on building your applicati\nAll authored components are compliant with the WAI-ARIA standards for authored components.\n-We've written the time to write summarized description of the accessibility support for\n+We've taken the time to write summarized description of the accessibility support for\nall authored components in @chakra-ui/vue. We called this document an accessibility report\nand can be found in the `accessibility.md` file in the respective component's source directory.\n",
        "date": "08.05.2020 22:36:52",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "sim_msg": "chore: Make pronouns consistent",
        "sim_diff": "diff --git a/demo/stories/10-announcement.stories.mdx b/demo/stories/10-announcement.stories.mdx @@ -44,7 +44,7 @@ Your components should be usable by every kind of user. Accessibility is hard to\nOr, alternatively\n-> Lea writes his own component, and the accessibility issue is hard to fix because of the way she initially wrote his HTML structure, and will also lead to a breaking change.\n+> Lea writes her own component, and the accessibility issue is hard to fix because of the way she initially wrote the HTML structure, and will also lead to a breaking change.\n### Summary\n"
    },
    {
        "msg": "docs: lint: add description",
        "diff": "diff --git a/packages/eslint/README.md b/packages/eslint/README.md @@ -145,7 +145,9 @@ module.exports.rules = {\n};\n```\n-### `lint(code, {fix, plugins})`\n+### `lint(source, {fix, plugins})`\n+\n+When you need to run **ESLint** with one plugin (*rule*), just use `lint` it will do the thing.\n```js\nconst lint = require('@putout/eslint/lint');\n",
        "date": "29.08.2022 20:49:33",
        "repo": "coderaiser/putout",
        "type": "docs",
        "sim_msg": "docs: fix eslint webpack-chain documentation",
        "sim_diff": "diff --git a/packages/@vue/cli-plugin-eslint/README.md b/packages/@vue/cli-plugin-eslint/README.md @@ -39,5 +39,5 @@ vue add @vue/eslint\n## Injected webpack-chain Rules\n-- `config.rule('eslint')`\n-- `config.rule('eslint').use('eslint-loader')`\n+- `config.module.rule('eslint')`\n+- `config.module.rule('eslint').use('eslint-loader')`\n"
    },
    {
        "msg": "docs: trying a new position\nWill track over the next 30-60 days.",
        "diff": "diff --git a/README.md b/README.md @@ -11,6 +11,8 @@ nodemon does **not** require *any* changes to your code or method of development\n[![NPM version](https://badge.fury.io/js/nodemon.svg)](https://npmjs.org/package/nodemon)\n[![Travis Status](https://travis-ci.org/remy/nodemon.svg?branch=master)](https://travis-ci.org/remy/nodemon)\n+<a href=\"https://app.codesponsor.io/link/wnz2te8CdfKZ8wMjGUpi8EZG/remy/nodemon\" rel=\"nofollow\" target=\"_blank\"><img src=\"https://app.codesponsor.io/embed/wnz2te8CdfKZ8wMjGUpi8EZG/remy/nodemon.svg\" style=\"width: 888px; height: 68px;\" alt=\"Sponsor\" /></a>\n+\n# Installation\nEither through cloning with git or by using [npm](http://npmjs.org) (the recommended way):\n@@ -289,5 +291,3 @@ See the [FAQ](https://github.com/remy/nodemon/blob/master/faq.md) and please add\n# License\nMIT [http://rem.mit-license.org](http://rem.mit-license.org)\n-\n-<a href=\"https://app.codesponsor.io/link/wnz2te8CdfKZ8wMjGUpi8EZG/remy/nodemon\" rel=\"nofollow\" target=\"_blank\"><img src=\"https://app.codesponsor.io/embed/wnz2te8CdfKZ8wMjGUpi8EZG/remy/nodemon.svg\" style=\"width: 888px; height: 68px;\" alt=\"Sponsor\" /></a>\n",
        "date": "03.11.2017 16:35:53",
        "repo": "remy/nodemon",
        "type": "docs",
        "sim_msg": "docs: add pipeline badges",
        "sim_diff": "diff --git a/README.md b/README.md ![freeCodeCamp.org Social Banner](https://s3.amazonaws.com/freecodecamp/wide-social-banner.png)\n-[![Build Status](https://travis-ci.org/freeCodeCamp/freeCodeCamp.svg?branch=staging)](https://travis-ci.org/freeCodeCamp/freeCodeCamp)\n+\n[![Pull Requests Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat)](http://makeapullrequest.com)\n[![first-timers-only Friendly](https://img.shields.io/badge/first--timers--only-friendly-blue.svg)](http://www.firsttimersonly.com/)\n[![Open Source Helpers](https://www.codetriage.com/freecodecamp/freecodecamp/badges/users.svg)](https://www.codetriage.com/freecodecamp/freecodecamp)\n@@ -138,7 +138,23 @@ Please don't create GitHub issues for security issues. Instead, please send an e\n### Contributing\n-#### [Please follow these steps to contribute.](CONTRIBUTING.md)\n+> ### [Please follow these steps to contribute.](CONTRIBUTING.md)\n+\n+#### Build Status:\n+\n+| Platform | Type | Status |\n+| :-------------- | :--------- | :---------: |\n+| Travis CI | Unit Tests | [![Travis CI Build Status](https://travis-ci.org/freeCodeCamp/freeCodeCamp.svg?branch=master)](https://travis-ci.org/freeCodeCamp/freeCodeCamp) |\n+| Azure Pipelines | Artifacts | [![Azure Pipelines Build Status](https://dev.azure.com/freeCodeCamp-org/freeCodeCamp/_apis/build/status/freeCodeCamp-CI)](https://dev.azure.com/freeCodeCamp-org/freeCodeCamp/_build) |\n+\n+#### Deployment Status:\n+\n+| Application | Version | Status |\n+| :----------- | :--------- | :---------: |\n+| Client | Beta/Next | [![Azure Pipelines Deployment Status](https://vsrm.dev.azure.com/freeCodeCamp-org/_apis/public/Release/badge/4b80aded-11d9-49ea-9b7d-596e98ff07c4/4/8)](https://dev.azure.com/freeCodeCamp-org/freeCodeCamp/_release) |\n+| API | Beta/Next | [![Azure Pipelines Deployment Status](https://vsrm.dev.azure.com/freeCodeCamp-org/_apis/public/Release/badge/4b80aded-11d9-49ea-9b7d-596e98ff07c4/4/9)](https://dev.azure.com/freeCodeCamp-org/freeCodeCamp/_release) |\n+| Client | Production | [![Azure Pipelines Deployment Status](https://vsrm.dev.azure.com/freeCodeCamp-org/_apis/public/Release/badge/4b80aded-11d9-49ea-9b7d-596e98ff07c4/4/12)](https://dev.azure.com/freeCodeCamp-org/freeCodeCamp/_release) |\n+| API | Production | [![Azure Pipelines Deployment Status](https://vsrm.dev.azure.com/freeCodeCamp-org/_apis/public/Release/badge/4b80aded-11d9-49ea-9b7d-596e98ff07c4/4/11)](https://dev.azure.com/freeCodeCamp-org/freeCodeCamp/_release) |\n### License\n"
    },
    {
        "msg": "docs(guide/introduction): fix typo",
        "diff": "diff --git a/docs/guide/introduction/README.md b/docs/guide/introduction/README.md @@ -23,4 +23,4 @@ The module adds a plugin to your Nuxt.js application that handles the initializa\n## Disclaimer\n-This module is meant for easy and quick set-up of Firebase in a Nuxt project. Due to the nature of this module, it is possibly not optimal for websites that need to be super performant and/or SEO friendly, since the module adds the Firebase services to the global scope. If you wan't your website to be more performant, you'd probably be better off by importing the services only in the files where you need them (i.e. by NOT using this module). That being said, the difference might be marginal depending on your project.\n+This module is meant for easy and quick set-up of Firebase in a Nuxt project. Due to the nature of this module, it is possibly not optimal for websites that need to be super performant and/or SEO friendly, since the module adds the Firebase services to the global scope. If you want your website to be more performant, you'd probably be better off by importing the services only in the files where you need them (i.e. by NOT using this module). That being said, the difference might be marginal depending on your project.\n",
        "date": "03.05.2020 23:52:37",
        "repo": "nuxt-community/firebase-module",
        "type": "docs",
        "sim_msg": "docs: add Hugo guide",
        "sim_diff": "diff --git a/website/content/docs/nuxt.md b/website/content/docs/nuxt.md @@ -10,7 +10,7 @@ This guide will walk you through how to integrate Netlify CMS with Nuxt.\nFollow the instructions on the [Nuxt documentation](https://nuxtjs.org/guide/installation#using-code-create-nuxt-app-code-) for creating a new project, or run:\n-```sh\n+```bash\nnpx create-nuxt-app <name-of-your-new-project>\ncd <name-of-your-new-project>\nnpm run dev\n@@ -41,7 +41,7 @@ In the `static/` directory, create a new directory `admin/`. Inside that directo\nFor your `static/admin/config.yml` file, you can put in a basic starter config:\n-```yml\n+```yaml\nbackend:\nname: git-gateway\nbranch: master\n@@ -52,6 +52,7 @@ public_folder: /img\ncollections:\n- name: 'blog'\nlabel: 'Blog'\n+ format: 'json'\nfolder: 'assets/content/blog'\ncreate: true\nslug: '{{year}}-{{month}}-{{day}}-{{slug}}'\n"
    },
    {
        "msg": "docs(README): add React-Semantic.UI-Starter",
        "diff": "diff --git a/README.md b/README.md @@ -44,6 +44,9 @@ See the [Documentation][2] for an introduction, usage information, and extensive\nThis is a listing of example projects and guides that will help you integrate Semantic UI React into your new or existing projects.\n+### [react-semantic.ui-starter][102]\n+Production-ready, performance-first, optimized, robust, fully-featured boilerplate/example for your new Progressive Web App.\n+\n### [semantic-ui-react-todos][100]\nThis example modifies the well-known [react-redux Todo List][101] to use Semantic UI components. There is also a write-up on the process in the project README.\n@@ -206,3 +209,4 @@ Big thanks to our [contributors][20], especially:\n<!-- Examples -->\n[100]: https://github.com/wyc/semantic-ui-react-todos\n[101]: https://github.com/reactjs/redux/tree/master/examples/todos\n+[102]: https://github.com/Metnew/react-semantic.ui-starter\n",
        "date": "28.04.2017 08:06:26",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "docs(readme): add deprecation notice\n<3 </3",
        "sim_diff": "diff --git a/README.md b/README.md +# Deprecation Warning\n+\n+This project was started at the advent of the Redux ecosystem, and was intended to help users get up and running quickly. Since then, tooling and best practices have evolved tremendously. In order to get the most modern experience possible, I recommend checking out something like [create-react-app](https://github.com/facebookincubator/create-react-app) which is supported by many core React and Redux developers.\n+\n+You are welcome to use this project if it is a better fit for your needs, but if you are brand new to the ecosystem I highly recommend checking out something that has received more recent updates.\n+\n+Thank you to everyone who made this project possible over the past year(s).\n+\n# React Redux Starter Kit\n[![Build Status](https://travis-ci.org/davezuko/react-redux-starter-kit.svg?branch=master)](https://travis-ci.org/davezuko/react-redux-starter-kit?branch=master)\n"
    },
    {
        "msg": "docs: update contributing with workflow",
        "diff": "diff --git a/.github/CONTRIBUTING.md b/.github/CONTRIBUTING.md @@ -56,10 +56,62 @@ immediately in all the examples. `add-dependencies` can be used to just add pack\n- `yarn test:packages`: Runs tests for packages\n- `yarn test:e2e`: Runs end-to-end tests\n- `yarn build-docs`: Builds docs/ updates doc TOC\n-- `yarn bootstrap-examples`: Run `yarn` with specific examples as workspaces. Automatically symlinks inter-dependent modules. Run `yarn restrap` in the example to reinstall.\n-- `yarn new-example`: Creates a new example from another example. `yarn new-example basic new-example`.\n-- `yarn publish-all-stable`: Does a a stable release\n- `yarn publish-all-canary`: Does a `razzle@canary` release.\n+- `yarn publish-all-stable`: Does a a stable release(uses the npm version released of the packages)\n+- `yarn new-example`: Creates a new example from another example. `yarn new-example basic new-example`.\n+- `yarn bootstrap-examples`: Run `yarn` with specific examples as workspaces. Automatically symlinks inter-dependent modules. Run `yarn restrap` in the example to reinstall.\n+- `yarn test:examples:simple`: Runs tests for all simple examples (uses the npm version released of the packages)\n+- `yarn test:examples:complex`: Runs tests for all complex examples (uses the npm version released of the packages)\n+- `yarn test:examples`: Runs tests for all examples (uses the npm version released of the packages)\n+\n+### Workflow for working on razzle core with examples\n+\n+```bash\n+\n+git clone https://github.com/<YOUR_GITHUB_USERNAME>/razzle.git\n+cd razzle\n+git checkout <my-branch>\n+NODE_ENV=development yarn install ---ignore-engines\n+\n+sudo npm install add-dependencies -g\n+\n+pwd\n+# /home/oyvind/Documents/GitHub/razzle/\n+\n+yarn install\n+\n+# to make sure tests pass\n+yarn test --runInBand\n+\n+# to add a new example\n+yarn new-example existingexample with-somefeature\n+\n+# to work on a example\n+cd examples/basic\n+example=\"$(basename $PWD)\"\n+pushd ../..\n+\n+# if it is a example with webpack5 you need to do\n+yarn add -W webpack@5.16.0\n+\n+# switch back to webpack4 later to work with webpack4\n+yarn add -W webpack@4.46.0\n+\n+# then\n+yarn bootstrap-examples $example\n+popd\n+yarn build\n+\n+# if you want to add dependencies to the example\n+add-dependencies somedependency\n+yarn restrap\n+\n+# if you make changes to startserver plugin\n+pushd ../..\n+cd packages/razzle-start-server-webpack-plugin\n+yarn build\n+popd\n+```\n### Updating your fork\n",
        "date": "13.02.2021 19:27:59",
        "repo": "jaredpalmer/razzle",
        "type": "docs",
        "sim_msg": "ci(test-all-packages): fork SwingSet and XS tests for speed",
        "sim_diff": "diff --git a/.github/workflows/test-all-packages.yml b/.github/workflows/test-all-packages.yml @@ -510,7 +510,7 @@ jobs:\n# END-RESTORE-BOILERPLATE\n- name: yarn test (SwingSet)\n- run: cd packages/SwingSet && yarn test\n+ run: cd packages/SwingSet && yarn test 'test/**/test-[A-Ia-i]*.js'\nenv:\nESM_DISABLE_CACHE: true\n- name: yarn test (xsnap)\n@@ -523,6 +523,78 @@ jobs:\nenv:\nESM_DISABLE_CACHE: true\n+ test-swingset2:\n+ # BEGIN-TEST-BOILERPLATE\n+ needs: build\n+ runs-on: ubuntu-latest\n+ strategy:\n+ matrix:\n+ node-version: ['14.x', '16.x']\n+ steps:\n+ - uses: actions/setup-node@v1\n+ with:\n+ node-version: ${{ matrix.node-version }}\n+ # END-TEST-BOILERPLATE\n+ # BEGIN-RESTORE-BOILERPLATE\n+ - name: restore built files\n+ id: built\n+ uses: actions/cache@v1\n+ with:\n+ path: .\n+ key: ${{ runner.os }}-${{ matrix.node-version }}-built-${{ github.sha }}\n+ - uses: actions/checkout@v2\n+ with:\n+ submodules: 'true'\n+ if: steps.built.outputs.cache-hit != 'true'\n+ - name: yarn install\n+ run: yarn install\n+ if: steps.built.outputs.cache-hit != 'true'\n+ - name: yarn build\n+ run: yarn build\n+ if: steps.built.outputs.cache-hit != 'true'\n+ # END-RESTORE-BOILERPLATE\n+\n+ - name: yarn test (SwingSet)\n+ run: cd packages/SwingSet && yarn test 'test/**/test-[J-Rj-r]*.js'\n+ env:\n+ ESM_DISABLE_CACHE: true\n+\n+ test-swingset3:\n+ # BEGIN-TEST-BOILERPLATE\n+ needs: build\n+ runs-on: ubuntu-latest\n+ strategy:\n+ matrix:\n+ node-version: ['14.x', '16.x']\n+ steps:\n+ - uses: actions/setup-node@v1\n+ with:\n+ node-version: ${{ matrix.node-version }}\n+ # END-TEST-BOILERPLATE\n+ # BEGIN-RESTORE-BOILERPLATE\n+ - name: restore built files\n+ id: built\n+ uses: actions/cache@v1\n+ with:\n+ path: .\n+ key: ${{ runner.os }}-${{ matrix.node-version }}-built-${{ github.sha }}\n+ - uses: actions/checkout@v2\n+ with:\n+ submodules: 'true'\n+ if: steps.built.outputs.cache-hit != 'true'\n+ - name: yarn install\n+ run: yarn install\n+ if: steps.built.outputs.cache-hit != 'true'\n+ - name: yarn build\n+ run: yarn build\n+ if: steps.built.outputs.cache-hit != 'true'\n+ # END-RESTORE-BOILERPLATE\n+\n+ - name: yarn test (SwingSet)\n+ run: cd packages/SwingSet && yarn test 'test/**/test-[S-Zs-z0-9]*.js'\n+ env:\n+ ESM_DISABLE_CACHE: true\n+\ntest-zoe-unit:\n# BEGIN-TEST-BOILERPLATE\nneeds: build\n@@ -598,7 +670,6 @@ jobs:\nESM_DISABLE_CACHE: true\ntest-xs:\n- continue-on-error: true # XS failures won't block CI\n# BEGIN-TEST-BOILERPLATE\nneeds: build\nruns-on: ubuntu-latest\n@@ -632,6 +703,83 @@ jobs:\n- name: yarn test (xs)\ntimeout-minutes: 30\n- run: yarn test:xs\n+ run: yarn test:xs 'test/**/test-[A-Ia-i]*.js'\n+ env:\n+ ESM_DISABLE_CACHE: true\n+\n+ test-xs2:\n+ # BEGIN-TEST-BOILERPLATE\n+ needs: build\n+ runs-on: ubuntu-latest\n+ strategy:\n+ matrix:\n+ # note: only use one node-version, maybe\n+ node-version: ['14.x']\n+ steps:\n+ - uses: actions/setup-node@v1\n+ with:\n+ node-version: ${{ matrix.node-version }}\n+ # END-TEST-BOILERPLATE\n+ # BEGIN-RESTORE-BOILERPLATE\n+ - name: restore built files\n+ id: built\n+ uses: actions/cache@v1\n+ with:\n+ path: .\n+ key: ${{ runner.os }}-${{ matrix.node-version }}-built-${{ github.sha }}\n+ - uses: actions/checkout@v2\n+ with:\n+ submodules: 'true'\n+ if: steps.built.outputs.cache-hit != 'true'\n+ - name: yarn install\n+ run: yarn install\n+ if: steps.built.outputs.cache-hit != 'true'\n+ - name: yarn build\n+ run: yarn build\n+ if: steps.built.outputs.cache-hit != 'true'\n+ # END-RESTORE-BOILERPLATE\n+\n+ - name: yarn test (xs)\n+ timeout-minutes: 30\n+ run: yarn test:xs 'test/**/test-[J-Rj-r]*.js'\n+ env:\n+ ESM_DISABLE_CACHE: true\n+\n+\n+ test-xs3:\n+ # BEGIN-TEST-BOILERPLATE\n+ needs: build\n+ runs-on: ubuntu-latest\n+ strategy:\n+ matrix:\n+ # note: only use one node-version, maybe\n+ node-version: ['14.x']\n+ steps:\n+ - uses: actions/setup-node@v1\n+ with:\n+ node-version: ${{ matrix.node-version }}\n+ # END-TEST-BOILERPLATE\n+ # BEGIN-RESTORE-BOILERPLATE\n+ - name: restore built files\n+ id: built\n+ uses: actions/cache@v1\n+ with:\n+ path: .\n+ key: ${{ runner.os }}-${{ matrix.node-version }}-built-${{ github.sha }}\n+ - uses: actions/checkout@v2\n+ with:\n+ submodules: 'true'\n+ if: steps.built.outputs.cache-hit != 'true'\n+ - name: yarn install\n+ run: yarn install\n+ if: steps.built.outputs.cache-hit != 'true'\n+ - name: yarn build\n+ run: yarn build\n+ if: steps.built.outputs.cache-hit != 'true'\n+ # END-RESTORE-BOILERPLATE\n+\n+ - name: yarn test (xs)\n+ timeout-minutes: 30\n+ run: yarn test:xs 'test/**/test-[S-Zs-z0-9]*.js'\nenv:\nESM_DISABLE_CACHE: true\n"
    },
    {
        "msg": "docs: add important note about ignore rules\nFixes",
        "diff": "diff --git a/README.md b/README.md @@ -86,7 +86,7 @@ A config file can take any of the command line arguments as JSON key values, for\n```json\n{\n\"verbose\": true,\n- \"ignore\": [\"*.test.js\", \"fixtures/*\"],\n+ \"ignore\": [\"*.test.js\", \"**/fixtures/**\"],\n\"execMap\": {\n\"rb\": \"ruby\",\n\"pde\": \"processing --sketch={{pwd}} --run\"\n@@ -109,7 +109,7 @@ Specify the config in the same format as you would for a config file but under `\n\"homepage\": \"http://nodemon.io\",\n\"...\": \"... other standard package.json values\",\n\"nodemonConfig\": {\n- \"ignore\": [\"test/*\", \"docs/*\"],\n+ \"ignore\": [\"**/test/**\", \"**/docs/**\"],\n\"delay\": 2500\n}\n}\n@@ -203,6 +203,8 @@ Patterns can also be ignored (but be sure to quote the arguments):\nnodemon --ignore 'lib/*.js'\n```\n+**Important** the ignore rules are patterns matched to the full absolute path, and this determines how many files are monitored. If using a wild card glob pattern, it needs to be used as `**` or omitted entirely. For example, `nodemon --ignore '**/test/**'` will work, whereas `--ignore '*/test/*'` will not.\n+\nNote that by default, nodemon will ignore the `.git`, `node_modules`, `bower_components`, `.nyc_output`, `coverage` and `.sass-cache` directories and *add* your ignored patterns to the list. If you want to indeed watch a directory like `node_modules`, you need to [override the underlying default ignore rules](https://github.com/remy/nodemon/blob/master/faq.md#overriding-the-underlying-default-ignore-rules).\n## Application isn't restarting\n",
        "date": "16.08.2022 09:20:43",
        "repo": "remy/nodemon",
        "type": "docs",
        "sim_msg": "docs: remove pre-commit docs",
        "sim_diff": "diff --git a/README.md b/README.md @@ -65,10 +65,6 @@ Run `npm test` command to run all tests in watch mode. This command runs only th\nIn a CI container, `npm test` will not run in watch mode. This is because the `CI` environment variable is set in CI containers. If you need to run tests in non-watch mode locally, you can do the same: `CI=true npm test`\n-### Pre-commit Checks\n-\n-When you `git commit` from this repo, it automatically runs eslint and all tests. It will not push if anything fails. This runs through the `pre-commit` package. If you really need to skip this hook for a commit, see [the docs](https://www.npmjs.com/package/pre-commit).\n-\n## Full Documentation\nSee [the docs](./docs/README.md)\n"
    },
    {
        "msg": "docs: how to watch .env files\n[skip ci]",
        "diff": "diff --git a/faq.md b/faq.md @@ -18,6 +18,18 @@ In your `nodemon.json` (or in your `package.json`) you can include the follow ev\n}\n```\n+# nodemon doesn't restart on .env change\n+\n+This is an edge case with how nodemon watches files. This is because nodemon doesn't know if `.env` is a hidden file with no extension or a `*.env` without a filename.\n+\n+Nonetheless, to trigger a change on `.env` (or similar files like `.bash_profile`), you need to explicitly tell nodemon to watch the file.\n+\n+However, now nodemon will *only* watch the `.env` file, so you need to add to what nodemon is watching, i.e. tell nodemon to _also_ watch the current working directory:\n+\n+```bash\n+$ nodemon --watch .env --watch app app/index.js\n+```\n+\n# nodemon doesn't work with my REPL\nCreate an nodemon.json file with the setting:\n",
        "date": "28.11.2018 09:31:44",
        "repo": "remy/nodemon",
        "type": "docs",
        "sim_msg": "docs: watchman installation step removed",
        "sim_diff": "diff --git a/docs/installation/local.md b/docs/installation/local.md @@ -7,8 +7,6 @@ You will need the following things properly installed on your computer.\n* **[Node.js 14.x LTS](https://nodejs.org/)**\n* **[Yarn](https://yarnpkg.com/en/docs/install)**\n-It is also recommended to have [watchman](https://facebook.github.io/watchman/docs/install) installed to speed up the `file-watcher/auto-build` service of the ember build server.\n-\n## Steps\n* `git clone <repository-url>` this repository\n* `cd open-event-frontend`\n"
    },
    {
        "msg": "docs(messaging): added messaing object example for collectionEnabled",
        "diff": "diff --git a/docs/guide/options/README.md b/docs/guide/options/README.md @@ -608,6 +608,12 @@ Initializes Firebase Analytics and makes it available via `$fireAnalytics` and `\n```js\nanalytics: true\n+\n+// or\n+\n+messaging: {\n+ collectionEnabled: true, // default\n+}\n```\n#### collectionEnabled\n",
        "date": "29.06.2020 23:49:57",
        "repo": "nuxt-community/firebase-module",
        "type": "docs",
        "sim_msg": "docs: add disable storage example",
        "sim_diff": "diff --git a/examples/demo/src/utils/analytics/example-4.js b/examples/demo/src/utils/analytics/example-4.js @@ -25,6 +25,17 @@ const pluginTwo = {\n}\n}\n+/* Disable cookies/localstorage for all storage calls */\n+const disableStorage = {\n+ name: 'disable-storage',\n+ setItemStart: ({ payload, instance }) => {\n+ return {\n+ ...payload,\n+ ...{ options: { storage: 'global' } }\n+ }\n+ }\n+}\n+\n/* initialize analytics and load plugins */\nconst analytics = Analytics({\n@@ -32,7 +43,8 @@ const analytics = Analytics({\napp: 'yolo',\nplugins: [\npluginOne,\n- pluginTwo\n+ pluginTwo,\n+ disableStorage\n]\n})\n"
    },
    {
        "msg": "docs: no -- needed here",
        "diff": "diff --git a/website/pages/getting-started.mdx b/website/pages/getting-started.mdx @@ -65,6 +65,6 @@ If your application is running, and you need to manually restart your server, yo\n## Debugging with Inspector\n-- `npm start -- --inspect=[host:port]` This will start the node server and enable the inspector agent. The `=[host:port]` is optional and defaults to `=127.0.0.1:9229`. For more information, see [this](https://nodejs.org/en/docs/guides/debugging-getting-started/).\n+- `npm start --inspect=[host:port]` This will start the node server and enable the inspector agent. The `=[host:port]` is optional and defaults to `=127.0.0.1:9229`. For more information, see [this](https://nodejs.org/en/docs/guides/debugging-getting-started/).\n-- `npm start -- --inspect-brk=[host:port]` This is the same as `--inspect`, but will also break before user code starts. (to give a debugger time to attach before early code runs) For more information, see [this](https://nodejs.org/en/docs/guides/debugging-getting-started/).\n+- `npm start --inspect-brk=[host:port]` This is the same as `--inspect`, but will also break before user code starts. (to give a debugger time to attach before early code runs) For more information, see [this](https://nodejs.org/en/docs/guides/debugging-getting-started/).\n",
        "date": "22.09.2020 22:05:44",
        "repo": "jaredpalmer/razzle",
        "type": "docs",
        "sim_msg": "docs(readme): mention chrome-flags troubleshooting in getting started",
        "sim_diff": "diff --git a/readme.md b/readme.md @@ -230,9 +230,10 @@ yarn build-all\n```sh\nnode lighthouse-cli http://example.com\n+# append --chrome-flags=\"--no-sandbox --headless --disable-gpu\" if you run into problems connecting to Chrome\n```\n-> **Getting started tip**: `node --inspect --debug-brk lighthouse-cli http://example.com` to open up Chrome DevTools and step\n+> **Getting started tip**: `node --inspect-brk lighthouse-cli http://example.com` to open up Chrome DevTools and step\nthrough the entire app. See [Debugging Node.js with Chrome\nDevTools](https://medium.com/@paul_irish/debugging-node-js-nightlies-with-chrome-devtools-7c4a1b95ae27#.59rma3ukm)\nfor more info.\n"
    },
    {
        "msg": "docs(plugin-typescript): add link to example",
        "diff": "diff --git a/packages/razzle-plugin-typescript/README.md b/packages/razzle-plugin-typescript/README.md @@ -22,6 +22,8 @@ module.exports = {\n};\n```\n+See full configuration in the [typescript example project](https://github.com/jaredpalmer/razzle/tree/master/examples/with-typescript).\n+\n### With custom options:\n```js\n",
        "date": "24.08.2020 11:54:53",
        "repo": "jaredpalmer/razzle",
        "type": "docs",
        "sim_msg": "docs: simplify language",
        "sim_diff": "diff --git a/README.md b/README.md @@ -25,7 +25,7 @@ yarn add vuepress -D\n## Documentation\n-Docs are available at https://vuepress.vuejs.org/ - we are still working on refining it and contributions are welcome!\n+Check out our docs at https://vuepress.vuejs.org/.\n## Contribution\n"
    },
    {
        "msg": "docs(readme): add Bandwidth Hero to built with\ndocs(readme): add Bandwidth Hero to built with",
        "diff": "diff --git a/README.md b/README.md @@ -69,6 +69,7 @@ These great products are built on Semantic UI React. Add yours [here][22].\n- https://build.games\n- https://platform.forecastcycles.com\n- https://www.findlectures.com\n+- https://github.com/ayastreb/bandwidth-hero\n## Example Projects\n",
        "date": "05.11.2017 08:37:58",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "docs: Fix contributing guidelines link",
        "sim_diff": "diff --git a/packages/react/README.md b/packages/react/README.md @@ -49,7 +49,7 @@ For full documentation, visit [stitches.dev](https://stitches.dev).\n## Contributing\n-Please follow our [contributing guidelines](./CONTRIBUTING.md).\n+Please follow our [contributing guidelines](https://github.com/modulz/stitches/blob/canary/CONTRIBUTING.md).\n## Authors\n"
    },
    {
        "msg": "docs: delay option as number instead of string, in readme\n[skip ci]",
        "diff": "diff --git a/README.md b/README.md @@ -110,7 +110,7 @@ Specify the config in the same format as you would for a config file but under `\n\"...\": \"... other standard package.json values\",\n\"nodemonConfig\": {\n\"ignore\": [\"test/*\", \"docs/*\"],\n- \"delay\": \"2500\"\n+ \"delay\": 2500\n}\n}\n```\n@@ -247,7 +247,7 @@ If you are setting this value in `nodemon.json`, the value will always be interp\nnodemon --delay 2.5\n{\n- \"delay\": \"2500\"\n+ \"delay\": 2500\n}\n```\n",
        "date": "31.03.2021 11:39:58",
        "repo": "remy/nodemon",
        "type": "docs",
        "sim_msg": "chore: updated tsconfig.json",
        "sim_diff": "diff --git a/tsconfig.json b/tsconfig.json \"allowSyntheticDefaultImports\": true,\n\"forceConsistentCasingInFileNames\": true,\n\"resolveJsonModule\": true,\n- \"skipLibCheck\": true\n+ \"skipLibCheck\": true,\n+ \"strictNullChecks\": false\n},\n\"include\": [\"packages\", \"typings\"],\n\"exclude\": [\"node_modules\", \"**/__test?__\", \"**/dist\"]\n"
    },
    {
        "msg": "docs(UncontrolledCollapse): include example",
        "diff": "diff --git a/docs/lib/Components/CollapsePage.js b/docs/lib/Components/CollapsePage.js @@ -5,12 +5,15 @@ import PageTitle from '../UI/PageTitle';\nimport SectionTitle from '../UI/SectionTitle';\nimport CollapseExample from '../examples/Collapse';\n+import UncontrolledCollapseExample from '../examples/CollapseUncontrolled';\nimport CollapseEventsExample from '../examples/CollapseEvents';\nconst CollapseExampleSource = require('!!raw!../examples/Collapse');\nconst CollapseEventsExampleSource = require('!!raw!../examples/CollapseEvents');\n+const UncontrolledCollapseExampleSource = require('!!raw!../examples/CollapseUncontrolled');\n+\nexport default class CollapsePage extends React.Component {\nrender() {\nreturn (\n@@ -60,6 +63,12 @@ export default class CollapsePage extends React.Component {\npass a <code>toggler</code> prop. The <code>toggler</code> prop is a string which will run\nquerySelectorAll to find dom elements which will trigger toggle.\n</p>\n+ <div className=\"docs-example\">\n+ <UncontrolledCollapseExample />\n+ </div>\n+ <pre>\n+ <PrismCode className=\"language-jsx\">{UncontrolledCollapseExampleSource}</PrismCode>\n+ </pre>\n</div>\n);\n}\n",
        "date": "14.05.2018 10:40:21",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "sim_msg": "refactor: refine Collapse logic",
        "sim_diff": "diff --git a/src/components/collapse/Collapse.vue b/src/components/collapse/Collapse.vue @@ -16,9 +16,11 @@ export default defineComponent({\nlet timeoutId = 0;\nconst element = ref(null);\n- function toggle(show) {\n- clearTimeout(timeoutId);\n+ function toggle() {\n+ const show = props.modelValue;\nconst el = element.value;\n+ // console.log('toggle', el, show);\n+ clearTimeout(timeoutId);\nif (!el) {\nreturn;\n}\n@@ -57,18 +59,10 @@ export default defineComponent({\n}\n}\n- watchEffect(() => {\n- toggle(props.modelValue);\n- });\n-\n- onMounted(() => {\n- addClass(element.value, COLLAPSE);\n- if (props.modelValue) {\n- addClass(element.value, IN);\n- }\n- });\n+ watchEffect(toggle);\n- return () => h(props.tag, { ref: element }, slots.default?.());\n+ return () =>\n+ h(props.tag, { ref: element, class: COLLAPSE }, slots.default?.());\n},\n});\n</script>\n"
    },
    {
        "msg": "docs: better config modification",
        "diff": "diff --git a/website/pages/deployment-options/aws.md b/website/pages/deployment-options/aws.md @@ -12,17 +12,26 @@ module.exports = {\nbuildType: 'serverless'\n},\nmodifyPaths({\n- webpackObject,\n- options: {\n- razzleOptions,\n+ paths,\n+ }) {\n+ paths.prodAppServerIndexJs = path.join(paths.appSrc, 'index.prod');\n+ return paths;\n},\n+ modifyWebpackConfig({\n+ env: {\n+ target,\n+ dev,\n+ },\n+ webpackConfig,\npaths,\n}) {\n- if (process.env.NODE_ENV === 'production') {\n- paths.appServerIndexJs = path.join(paths.appSrc, 'index.prod');\n+ if (target === 'node') {\n+ if (!dev) {\n+ webpackConfig.entry.server = [paths.prodAppServerIndexJs];\n}\n- return paths;\n}\n+ return webpackConfig;\n+ },\n};\n```\n",
        "date": "25.01.2021 23:47:07",
        "repo": "jaredpalmer/razzle",
        "type": "docs",
        "sim_msg": "build: fix mistake in build config",
        "sim_diff": "diff --git a/packages/manager/apps/public-cloud/webpack.config.js b/packages/manager/apps/public-cloud/webpack.config.js @@ -32,7 +32,7 @@ module.exports = (env = {}) => {\n__FEEDBACK_URL__: process.env.FEEDBACK_URL ? `'${process.env.FEEDBACK_URL}'` : 'null',\n__WEBPACK_REGION__: process.env.REGION ? `'${process.env.REGION.toUpperCase()}'` : '\"EU\"',\n__NODE_ENV__: process.env.NODE_ENV ? `'${process.env.NODE_ENV}'` : '\"development\"',\n- __NG_APP_INJECTIONS__: process.env.NODE_ENV ? `'${process.env.NG_APP_INJECTIONS}'` : 'null',\n+ __NG_APP_INJECTIONS__: process.env.NG_APP_INJECTIONS ? `'${process.env.NG_APP_INJECTIONS}'` : 'null',\n}),\n],\nresolve: {\n"
    },
    {
        "msg": "docs(readme): add Sublime Fund to the built with list",
        "diff": "diff --git a/README.md b/README.md @@ -79,6 +79,7 @@ These great products are built on Semantic UI React. Add yours [here][22].\n- http://www.brewhousesolutions.com\n- https://www.lifebot.fr\n- https://www.stackforge.co\n+- https://sublimefund.org\n## Voice Your Opinion\n",
        "date": "06.07.2017 11:35:05",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "docs: Fix contributing guidelines link",
        "sim_diff": "diff --git a/packages/react/README.md b/packages/react/README.md @@ -49,7 +49,7 @@ For full documentation, visit [stitches.dev](https://stitches.dev).\n## Contributing\n-Please follow our [contributing guidelines](./CONTRIBUTING.md).\n+Please follow our [contributing guidelines](https://github.com/modulz/stitches/blob/canary/CONTRIBUTING.md).\n## Authors\n"
    },
    {
        "msg": "docs(MenuExampleHeaderVertical): fix onClick handler\nhandleItemClick = (e, { name }) => this.setState({ activeItem: name });",
        "diff": "diff --git a/docs/src/examples/collections/Menu/Content/MenuExampleHeaderVertical.js b/docs/src/examples/collections/Menu/Content/MenuExampleHeaderVertical.js @@ -3,7 +3,7 @@ import { Menu } from 'semantic-ui-react'\nexport default class MenuExampleHeaderVertical extends Component {\nstate = {}\n- handleItemClick = (name) => this.setState({ activeItem: name })\n+ handleItemClick = (e, { name }) => this.setState({ activeItem: name });\nrender() {\nconst { activeItem } = this.state\n",
        "date": "08.12.2019 23:22:16",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "chore: remove use of index as key",
        "sim_diff": "diff --git a/docs-site/src/components/Examples/index.js b/docs-site/src/components/Examples/index.js @@ -406,11 +406,10 @@ export default class exampleComponents extends React.Component {\n<>\n<h1>Examples</h1>\n<ul className=\"examples__navigation\">\n- {this.examples.map((example, index) => (\n- <li className=\"examples__navigation-item\" key={`link-${index}`}>\n+ {this.examples.map(example => (\n+ <li className=\"examples__navigation-item\" key={`link-${example.title}`}>\n<a\nhref={`#example-${slugify(example.title, { lower: true })}`}\n- title=\"something\"\nonClick={e =>\nthis.handleAnchorClick(\ne,\n@@ -424,8 +423,8 @@ export default class exampleComponents extends React.Component {\n))}\n</ul>\n<div className=\"examples\">\n- {this.examples.map((example, index) => (\n- <CodeExampleComponent key={index} example={example} />\n+ {this.examples.map((example) => (\n+ <CodeExampleComponent key={example.title} example={example} />\n))}\n</div>\n</>\n"
    },
    {
        "msg": "docs(accordion): add jsdocs to component",
        "diff": "diff --git a/packages/chakra-ui-core/src/CAccordion/CAccordion.js b/packages/chakra-ui-core/src/CAccordion/CAccordion.js +/**\n+ * Hey! Welcome to @chakra-ui/vue Accordion\n+ *\n+ * Accordions display a list of high-level\n+ * options that can expand/collapse to reveal\n+ * more information.\n+ *\n+ * An accordion is a vertically stacked set\n+ * of interactive headings that each contain\n+ * a title, content snippet, or thumbnail\n+ * representing a section of content.\n+ * The headings function as controls that enable\n+ * users to reveal or hide their associated sections\n+ * of content. Accordions are commonly used to\n+ * reduce the need to scroll when presenting\n+ * multiple sections of content on a single page.\n+ *\n+ * @see Docs https://vue.chakra-ui.com/accordion\n+ * @see Source link to source\n+ * @see WAI-ARIA https://www.w3.org/TR/wai-aria-practices-1.2/#accordion\n+ */\n+\nimport { baseProps } from '../config'\nimport { forwardProps, cloneVNodes, useId, isDef } from '../utils'\nimport styleProps from '../config/props'\n@@ -8,6 +30,16 @@ import CPseudoBox from '../CPseudoBox'\nimport CCollapse from '../CCollapse'\nimport CIcon from '../CIcon'\n+/**\n+ * CAccordion component\n+ *\n+ * The wrapper that clones it's children\n+ * to pass it's prop to the `CAccordionItem`.\n+ *\n+ * @extends CBox\n+ * @see Docs https://vue.chakra-ui.com/accordion\n+ */\n+\nconst CAccordion = {\nname: 'CAccordion',\nprops: {\n@@ -116,6 +148,15 @@ const CAccordion = {\n}\n}\n+/**\n+ * CAccordionItem component\n+ *\n+ * A single accordion item\n+ *\n+ * @extends CPseudoBox\n+ * @see Docs https://vue.chakra-ui.com/accordion\n+ */\n+\nconst CAccordionItem = {\nname: 'CAccordionItem',\nprops: {\n@@ -202,6 +243,15 @@ const CAccordionItem = {\n}\n}\n+/**\n+ * CAccordionHeader component\n+ *\n+ * The button that toggles the expand/collapse\n+ * state of the accordion item.\n+ *\n+ * @extends CPseudoBox\n+ * @see Docs https://vue.chakra-ui.com/accordion\n+ */\nconst CAccordionHeader = {\nname: 'CAccordionHeader',\ninject: ['$AccordionContext'],\n@@ -246,6 +296,15 @@ const CAccordionHeader = {\n}\n}\n+/**\n+ * CAccordionPanel component\n+ *\n+ * The container for the accordion item\n+ * details to be revealed.\n+ *\n+ * @extends CPseudoBox\n+ * @see Docs https://vue.chakra-ui.com/accordion\n+ */\nconst CAccordionPanel = {\nname: 'CAccordionPanel',\ninject: ['$AccordionContext'],\n@@ -277,6 +336,15 @@ const CAccordionPanel = {\n}\n}\n+/**\n+ * CAccordionIcon component\n+ *\n+ * A chevron-down icon that rotates based on the\n+ * expanded/collapsed state.\n+ *\n+ * @extends CPseudoBox\n+ * @see Docs https://vue.chakra-ui.com/accordion\n+ */\nconst CAccordionIcon = {\nname: 'CAccordionIcon',\ninject: ['$AccordionContext'],\n",
        "date": "01.04.2020 01:57:00",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "sim_msg": "feat(components): add divider to accordion border",
        "sim_diff": "diff --git a/packages/yoga/src/Accordion/web/Accordion.jsx b/packages/yoga/src/Accordion/web/Accordion.jsx @@ -3,6 +3,7 @@ import styled, { css } from 'styled-components';\nimport { string, node, bool } from 'prop-types';\nimport { ChevronDown } from '@gympass/yoga-icons';\nimport { Text } from '@gympass/yoga';\n+import Divider from '../../Divider';\nconst Accordion = ({ title, subtitle, children, disabled }) => {\nconst [open, setOpen] = useState(false);\n@@ -12,19 +13,26 @@ const Accordion = ({ title, subtitle, children, disabled }) => {\nborder: none;\ndisplay: flex;\nflex-direction: column;\n+ position: relative;\n${({\ntheme: {\nyoga: {\n- colors: { white, elements },\n+ colors: { white },\n},\n},\n}) => {\nreturn `\nbackground: ${white}\n- border-bottom: 1px solid ${elements.lineAndBorders};\n`;\n}}\n+\n+ hr {\n+ position: absolute;\n+ left: 0;\n+ bottom: 0;\n+ margin: 0;\n+ }\n`;\nconst Header = styled.button`\n@@ -130,8 +138,12 @@ const Accordion = ({ title, subtitle, children, disabled }) => {\ndisplay: flex;\njustify-content: center;\nalign-items: center;\n- transition: transform 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n- transform: ${({ isOpen }) => (isOpen ? 'rotate(180deg)' : 'rotate(0deg)')};\n+\n+ svg {\n+ transition: all 200ms ease-out 0s;\n+ transform: ${({ isOpen }) =>\n+ isOpen ? 'rotate(180deg)' : 'rotate(0deg)'};\n+ }\n${({\ntheme: {\n@@ -144,10 +156,6 @@ const Accordion = ({ title, subtitle, children, disabled }) => {\npadding: ${accordion.paddingArrow.total}px;\n`;\n}}\n-\n- &:hover {\n- box-shadow: rgb(216 56 94 / 45%) 0px 4px 8px;\n- }\n`;\nreturn (\n@@ -166,14 +174,15 @@ const Accordion = ({ title, subtitle, children, disabled }) => {\n<ArrowWrapper isOpen={open}>\n<ChevronDown\n- stroke={disabled ? '#6B6B78' : '#D8385E'}\n- width={20}\n- height={20}\n+ fill={disabled ? '#6B6B78' : '#D8385E'}\n+ width={24}\n+ height={24}\n/>\n</ArrowWrapper>\n</Header>\n<AccordionContent isOpen={open}>{children}</AccordionContent>\n+ <Divider />\n</AccordionWrapper>\n);\n};\n"
    },
    {
        "msg": "docs: npx to run dev dependencies",
        "diff": "diff --git a/README.md b/README.md @@ -25,7 +25,7 @@ It is also possible to install locally:\nnpm install --save-dev nodemon\n-With a local installation, nodemon will not be available in your system path. Instead, the local installation of nodemon can be run by calling it from within an npm script (such as `npm start`). Additionally, the `npm bin` command can be used to obtain the path to the project's local `.bin` directory.\n+With a local installation, nodemon will not be available in your system path. Instead, the local installation of nodemon can be run by calling it from within an npm script (such as `npm start`) or using `npx nodemon`.\n# Usage\n",
        "date": "04.09.2017 11:33:28",
        "repo": "remy/nodemon",
        "type": "docs",
        "sim_msg": "docs: add new dev script to the README",
        "sim_diff": "diff --git a/README.md b/README.md @@ -119,7 +119,7 @@ The following need to be installed.\n- This is optional, as `npm` provides easy access to the local copies of these that are installed by `npm install`\n1. (optional) Run `npm install -g migrate`.\n- This installs node-migrate globally.\n-1. To start server, run `npm start`.\n+1. To start server in production, run `npm start`. Use `npm run dev` for development.\n- In your terminal, a user and password were generated. You will use these credentials to log into the application. Example: `\"admin\" user created with password \"password\"`.\n1. Navigate to `https://localhost:3000` in your browser.\n- This will show you the running site. Login with the user name and password from your terminal mentioned above.\n"
    },
    {
        "msg": "docs: how to provide theme with ThemePRovider",
        "diff": "diff --git a/src/main.js b/src/main.js import Vue from 'vue'\nimport App from './App.vue'\nimport './registerServiceWorker'\n-// import { provideTheme } from '@/lib/utils'\nimport Kiwi from './lib/plugin'\nVue.config.productionTip = false\n+// Install Kiwi plugin\nVue.use(Kiwi)\nnew Vue({\n+ // Alternative way to provide theme would be to import { provideTheme } from utils and provide it with render function\n// Provide theme to the root of the application\n// render: h => provideTheme(h, App)\nrender: h => h(App)\n",
        "date": "12.10.2019 18:43:12",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "sim_msg": "perf(global): exposing only router afterEach and currentRoute",
        "sim_diff": "diff --git a/src/main.js b/src/main.js @@ -45,7 +45,14 @@ router.afterEach(to => {\n}\n})\n-window.storefrontApp = { router }\n+window.storefrontApp = {\n+ router: {\n+ afterEach: cb => router.afterEach(cb),\n+ get currentRoute () {\n+ return router.currentRoute\n+ }\n+ }\n+}\nnew Vue({\nrouter,\n"
    },
    {
        "msg": "docs: added persistence to auth in \"Full Configuration\"",
        "diff": "diff --git a/docs/guide/getting-started/README.md b/docs/guide/getting-started/README.md @@ -85,6 +85,7 @@ modules: [\nonFirebaseHosting: false,\nservices: {\nauth: {\n+ persistence: 'local',\ninitialize: {\nonAuthStateChangedMutation: \"SET_AUTH_USER\",\nonAuthStateChangedAction: null,\n",
        "date": "15.03.2020 22:45:10",
        "repo": "nuxt-community/firebase-module",
        "type": "docs",
        "sim_msg": "docs: update formating README",
        "sim_diff": "diff --git a/README.md b/README.md @@ -113,7 +113,7 @@ Please don't create GitHub issues for security issues. Instead, please send an e\n### Contributing\n-Please follow [these steps](CONTRIBUTING.md) to contribute.\n+#### [Please follow these steps to contribute.](CONTRIBUTING.md)\n### License\n"
    },
    {
        "msg": "docs(TablesPage): Fix typo in docs",
        "diff": "diff --git a/docs/lib/Components/TablesPage.js b/docs/lib/Components/TablesPage.js @@ -39,7 +39,7 @@ export default class TablesPage extends React.Component {\n<h4>Properties</h4>\n<pre>\n<PrismCode className=\"language-jsx\">\n-{`Card.propTypes = {\n+{`Table.propTypes = {\n// Pass in a Component to override default element\ntag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\nsize: PropTypes.string,\n",
        "date": "30.03.2017 23:52:25",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "sim_msg": "chore(tablecard): remove unnecessary sizes from proptypes",
        "sim_diff": "diff --git a/packages/react/src/constants/CardPropTypes.js b/packages/react/src/constants/CardPropTypes.js @@ -130,12 +130,7 @@ export const ValueContentPropTypes = {\nexport const TableCardPropTypes = {\ntooltip: PropTypes.node,\ntitle: PropTypes.string,\n- size: PropTypes.oneOf([\n- CARD_SIZES.MEDIUM,\n- CARD_SIZES.MEDIUMWIDE,\n- CARD_SIZES.LARGE,\n- CARD_SIZES.LARGEWIDE,\n- ]),\n+ size: PropTypes.oneOf([CARD_SIZES.LARGE, CARD_SIZES.LARGEWIDE]),\ncontent: PropTypes.shape({\ncolumns: PropTypes.arrayOf(\nPropTypes.shape({\n"
    },
    {
        "msg": "docs(LabelExampleImageColored): Update example\nReplace Veronika with jenny due to image name",
        "diff": "diff --git a/docs/src/examples/elements/Label/Types/LabelExampleImageColored.js b/docs/src/examples/elements/Label/Types/LabelExampleImageColored.js @@ -10,12 +10,12 @@ const LabelExampleImage = () => (\n</Label>\n<Label as='a' color='teal' image>\n<img src='/images/avatar/small/jenny.jpg' />\n- Veronika\n+ Jenny\n<Label.Detail>Friend</Label.Detail>\n</Label>\n<Label as='a' color='yellow' image>\n<img src='/images/avatar/small/christian.jpg' />\n- Helen\n+ Christian\n<Label.Detail>Co-worker</Label.Detail>\n</Label>\n</div>\n",
        "date": "24.07.2020 14:13:02",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "fix(Search): Render empty result translation string with HTML",
        "sim_diff": "diff --git a/components/Search/Results.js b/components/Search/Results.js @@ -13,10 +13,11 @@ import CommentTeaser from './CommentTeaser'\nimport UserTeaser from './UserTeaser'\nimport {\n- TeaserFeed,\ncolors,\nlabelRule,\n- linkRule\n+ linkRule,\n+ RawHtml,\n+ TeaserFeed\n} from '@project-r/styleguide'\nconst styles = {\n@@ -203,9 +204,14 @@ class Results extends Component {\nif (totalCount === 0) {\nreturn (\n- <span {...labelRule}>\n- {t('search/results/empty', { term: filterQuery })}\n- </span>\n+ <RawHtml\n+ {...labelRule}\n+ dangerouslySetInnerHTML={{\n+ __html: t('search/results/empty',\n+ { term: filterQuery }\n+ )\n+ }}\n+ />\n)\n}\n"
    },
    {
        "msg": "docs(Grid): fix typo in GridExampleStretched example description\nThe description of the `stretched` property of a grid row mentioned 'width', but should have mentioned 'height'.",
        "diff": "diff --git a/docs/src/examples/collections/Grid/Variations/index.js b/docs/src/examples/collections/Grid/Variations/index.js @@ -32,7 +32,7 @@ const GridVariationsExamples = () => (\n<ComponentExample\ntitle='Stretched'\n- description='A row can automatically resize all elements to split the available width evenly.'\n+ description='A row can automatically resize all elements to split the available height evenly.'\nexamplePath='collections/Grid/Variations/GridExampleStretched'\n/>\n<ComponentExample examplePath='collections/Grid/Variations/GridExampleStretchedEqual' />\n",
        "date": "24.09.2018 11:42:20",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "feat(components/layout/grid): add props spreading",
        "sim_diff": "diff --git a/components/layout/grid/src/index.js b/components/layout/grid/src/index.js @@ -38,7 +38,8 @@ const LayoutGrid = ({\nxxl,\nxxlOffset,\nxxs,\n- xxsOffset\n+ xxsOffset,\n+ ...props\n}) => {\nconst classNames = cx(\n`${BASE_CLASS}`,\n@@ -53,7 +54,7 @@ const LayoutGrid = ({\n)\nreturn (\n- <PolymorphicElement as={as} className={classNames}>\n+ <PolymorphicElement as={as} className={classNames} {...props}>\n<Injector\ncolSpan={colSpan}\nl={l}\n"
    },
    {
        "msg": "docs(stack): add stacking of html elements",
        "diff": "diff --git a/website/pages/stack.mdx b/website/pages/stack.mdx @@ -68,6 +68,19 @@ Pass the `isReversed` prop or set `direction` to `row-reverse` or `column-revers\n</c-stack>\n```\n+## Stacking HTML elements\n+The `CStack` element is able also to stack HTML elements. Internally it wraps HTML elements inside a `CBox` primitive\n+component and spaces it like it would any other Chakra component.\n+\n+```vue live=true\n+<c-stack :spacing=\"4\">\n+ <c-text>Chakra component 1</c-text>\n+ <p>HTML paragraph element</p>\n+ <h3>HTML heading element</h3>\n+ <c-text>Chakra component 2</c-text>\n+</c-stack>\n+```\n+\n## Props\n| Name | Type | Default | Description |\n",
        "date": "26.09.2020 22:28:20",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "sim_msg": "docs(avatar): add documentation for new usage of avatar",
        "sim_diff": "diff --git a/packages/doc/content/components/components/avatar/avatar-web.mdx b/packages/doc/content/components/components/avatar/avatar-web.mdx </Box>\n```\n+### Custom image component (children)\n+You can also pass your very own children to Avatar, which may be useful in cases where you need to wrap it inside some custom component to extend it:\n+\n+```javascript\n+<Box display=\"flex\" justifyContent=\"space-evenly\" width=\"100%\">\n+ <Avatar>\n+ <Text color=\"white\">LC</Text>\n+ </Avatar>\n+\n+ <Avatar>\n+ <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" w=\"100%\" h=\"100%\" bg=\"peace\">\n+ <Text color=\"vibin\">Yoga</Text>\n+ </Box>\n+ </Avatar>\n+</Box>\n+```\n+\n### Props\n<PropsTable component=\"Avatar\" platform=\"web\" />\n"
    },
    {
        "msg": "docs: Fix code example for split button dropdowns",
        "diff": "diff --git a/docs/lib/Components/ButtonDropdownPage.js b/docs/lib/Components/ButtonDropdownPage.js @@ -107,7 +107,7 @@ DropdownToggle.propTypes = {\n<PrismCode className=\"language-jsx\">\n{`<ButtonDropdown isOpen={isOpen} toggle={toggle}>\n<Button id=\"caret\" color=\"primary\">{this.props.text}</Button>\n- <DropdownToggle caret color=\"primary\" />\n+ <DropdownToggle split color=\"primary\" />\n<DropdownMenu>\n<DropdownItem header>Header</DropdownItem>\n<DropdownItem disabled>Action</DropdownItem>\n",
        "date": "07.10.2020 21:56:10",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "sim_msg": "refactor(doc): adjusting propTypes on Dropdown doc component",
        "sim_diff": "diff --git a/packages/doc/src/components/Dropdown/Dropdown.jsx b/packages/doc/src/components/Dropdown/Dropdown.jsx @@ -82,7 +82,7 @@ const Dropdown = ({ label, value, options, onSelect }) => {\n<Wrapper>\n<Selector onClick={() => toggleOptions()}>\n<Label>{label}</Label>\n- <span>{value}</span>\n+ <Label>{value}</Label>\n<ArrowDropdown open={isOpen} />\n</Selector>\n{isOpen && (\n@@ -100,14 +100,13 @@ const Dropdown = ({ label, value, options, onSelect }) => {\n};\nDropdown.propTypes = {\n+ label: PropTypes.string.isRequired,\nvalue: PropTypes.string.isRequired,\noptions: PropTypes.arrayOf(PropTypes.any).isRequired,\nonSelect: PropTypes.func,\n};\nDropdown.defaultProps = {\n- value: '',\n- options: [],\nonSelect: () => {},\n};\n"
    },
    {
        "msg": "docs(readme): add coreui project",
        "diff": "diff --git a/README.md b/README.md @@ -125,6 +125,7 @@ Organizations and projects using `reactstrap`\n- [availity-reactstrap-validation](https://availity.github.io/availity-reactstrap-validation/)\n- [component-template](https://reactstrap.github.io/component-template/)\n- [video-react](https://video-react.github.io/)\n+- [CoreUI-Free-Bootstrap-Admin-Template](https://github.com/mrholek/CoreUI-Free-Bootstrap-Admin-Template) - [demo](http://coreui.io/demo/React_Demo/#/)\nSubmit a PR to add to this list!\n",
        "date": "29.01.2017 15:42:23",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "sim_msg": "docs(readme): fix table of contents",
        "sim_diff": "diff --git a/README.md b/README.md @@ -17,12 +17,11 @@ Finally, This project wouldn't be possible without the help of our many contribu\n1. [Running the Project](#running-the-project)\n1. [Project Structure](#project-structure)\n1. [Live Development](#local-development)\n- 1. [Hot Reloading](#hot-reloading)\n- 1. [Redux DevTools](#redux-devtools)\n+ * [Hot Reloading](#hot-reloading)\n+ * [Redux DevTools](#redux-devtools)\n1. [Routing](#routing)\n1. [Testing](#testing)\n- 1. [dirty-chai](#dirty-chai)\n- 1. [enzyme](#enzyme)\n+ * [dirty-chai](#dirty-chai)\n1. [Building for Production](#building-for-production)\n1. [Deployment](#deployment)\n1. [Thank You](#thank-you)\n"
    },
    {
        "msg": "docs: typo\ntypo",
        "diff": "diff --git a/README.md b/README.md @@ -162,7 +162,7 @@ Note that by default, nodemon will ignore the `.git`, `node_modules`, `bower_com\n## Application isn't restarting\n-In some networked environments (such as a container running nodemon reading across a mounted drive), you will need to use the `legacyWatch: true` which enabled Chokidar's polling.\n+In some networked environments (such as a container running nodemon reading across a mounted drive), you will need to use the `legacyWatch: true` which enables Chokidar's polling.\nVia the CLI, use either `--legacy-watch` or `-L` for short:\n",
        "date": "05.09.2017 04:20:59",
        "repo": "remy/nodemon",
        "type": "docs",
        "sim_msg": "docs: remove pre-commit docs",
        "sim_diff": "diff --git a/README.md b/README.md @@ -65,10 +65,6 @@ Run `npm test` command to run all tests in watch mode. This command runs only th\nIn a CI container, `npm test` will not run in watch mode. This is because the `CI` environment variable is set in CI containers. If you need to run tests in non-watch mode locally, you can do the same: `CI=true npm test`\n-### Pre-commit Checks\n-\n-When you `git commit` from this repo, it automatically runs eslint and all tests. It will not push if anything fails. This runs through the `pre-commit` package. If you really need to skip this hook for a commit, see [the docs](https://www.npmjs.com/package/pre-commit).\n-\n## Full Documentation\nSee [the docs](./docs/README.md)\n"
    },
    {
        "msg": "docs: add link to common problems",
        "diff": "diff --git a/packages/razzle/config/loadRazzleConfig.js b/packages/razzle/config/loadRazzleConfig.js @@ -11,7 +11,7 @@ const loadPlugins = require('./loadPlugins');\nmodule.exports = (webpackObject, razzleConfig, packageJsonIn) => {\nreturn new Promise(async resolve => {\nconsole.info(\"If you have issues with css make sure postcss resolves to v8.2.4.\");\n- console.info(\"See: \\n\");\n+ console.info(\"See: https://razzlejs.org/getting-started#common-problems\\n\");\nconsole.warn(\"CssMinimizerPlugin currently uses clean-css,\\nwe will switch to cssnano once it supports postcss v8.2.4.\\n\");\nlet razzle = razzleConfig || {};\n",
        "date": "22.02.2021 00:48:01",
        "repo": "jaredpalmer/razzle",
        "type": "docs",
        "sim_msg": "feat: autoload tailwind.css if it exists\nno need to specify it in the maizzle config",
        "sim_diff": "diff --git a/src/generators/tailwindcss.js b/src/generators/tailwindcss.js @@ -43,7 +43,7 @@ module.exports = {\n// Merge user's Tailwind plugins with our default ones\nconfig.plugins.push(require('tailwindcss-box-shadow'))\n- const userFilePath = get(maizzleConfig, 'build.tailwind.css')\n+ const userFilePath = get(maizzleConfig, 'build.tailwind.css', path.join(process.cwd(), 'src/css/tailwind.css'))\ncss = await fs.pathExists(userFilePath).then(async exists => {\nif (exists) {\n"
    },
    {
        "msg": "docs: add link to react website",
        "diff": "diff --git a/packages/chakra-ui-docs/components/Navbar.vue b/packages/chakra-ui-docs/components/Navbar.vue list-style-type=\"none\"\nml=\"auto\"\n>\n+ <CBox as=\"li\" mr=\"4\">\n+ <CLink color=\"gray.600\" :_hover=\"{ color : 'vue.400' }\" is-external href=\"https://chakra-ui.com/\">\n+ Chakra UI React\n+ </CLink>\n+ </CBox>\n<CBox as=\"li\" mr=\"4\">\n<CLink color=\"gray.500\" :_hover=\"{ color : 'vue.400' }\" is-external href=\"https://github.com/chakra-ui/chakra-ui-vue\">\n<CIcon name=\"github\" size=\"20px\" />\n",
        "date": "04.06.2020 18:15:00",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "sim_msg": "docs: remove demo status badge",
        "sim_diff": "diff --git a/docs/.vuepress/components/RouteEn.vue b/docs/.vuepress/components/RouteEn.vue Author: <a v-for=\"uid in author.split(' ')\" :href=\"`https://github.com/${uid}`\" target=\"_blank\"> @{{ uid }} </a>\n</p>\n<p class=\"example\">\n- <span>Example:</span> <a :href=\"demoUrl\" target=\"_blank\">{{demoUrl}}</a> <img :src=\"'https://img.shields.io/website?label=status&style=flat-square&url=' + encodeURIComponent(encodeURI(demoUrl))\">\n+ <span>Example:</span> <a :href=\"demoUrl\" target=\"_blank\">{{demoUrl}}</a> <!--<img :src=\"'https://img.shields.io/website?label=status&style=flat-square&cacheSeconds=86400&url=' + encodeURIComponent(encodeURI(demoUrl))\">-->\n</p>\n<p class=\"path\">\nRoute: <code>{{ path }}</code>\n"
    },
    {
        "msg": "docs(layout): Fix typo in layout example",
        "diff": "diff --git a/docs/lib/examples/Layout.js b/docs/lib/examples/Layout.js @@ -16,7 +16,7 @@ export default class Example extends React.Component {\n</Row>\n<Row>\n<Col xs=\"3\">.col-3</Col>\n- <Col xs=\"auto\">.col-auto - variabe width content</Col>\n+ <Col xs=\"auto\">.col-auto - variable width content</Col>\n<Col xs=\"3\">.col-3</Col>\n</Row>\n<Row>\n",
        "date": "14.02.2017 10:46:47",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "sim_msg": "feat(www): add docsearch:version meta tag\nadd meta tag so docsearch can index both v1 and v2 websites\nsee",
        "sim_diff": "diff --git a/www/src/components/layout.js b/www/src/components/layout.js @@ -151,6 +151,7 @@ class DefaultLayout extends React.Component {\n<meta name=\"twitter:site\" content=\"@gatsbyjs\" />\n<meta name=\"og:type\" content=\"website\" />\n<meta name=\"og:site_name\" content=\"GatsbyJS\" />\n+ <meta name=\"docsearch:version\" content=\"2.0\" />\n<link\nrel=\"canonical\"\nhref={`https://gatsbyjs.org${this.props.location.pathname}`}\n"
    },
    {
        "msg": "docs: documentation for spinner component",
        "diff": "diff --git a/packages/chakra-ui-docs/docs/spinner.mdx b/packages/chakra-ui-docs/docs/spinner.mdx +import SEO from '../components/SEO'\n+\n+<SEO\n+ title=\"Spinner\"\n+ description=\"Spinners provide a visual cue that an action is processing awaiting a course of change or a result.\"\n+/>\n+\n# Spinner\n+\n+Spinners provide a visual cue that an action is processing awaiting a course of change or a result.\n+\n+## Import\n+\n+```js\n+import { CSpinner } from '@chakra-ui/vue'\n+```\n+\n+## Usage\n+\n+```vue live=true\n+<c-spinner />\n+```\n+\n+### Spinner with Color\n+\n+```vue live=true\n+<c-spinner color=\"blue.500\" />\n+```\n+\n+### Spinner with different size\n+\n+```vue live=true\n+<c-stack is-inline :spacing=\"4\">\n+ <c-spinner size=\"xs\" />\n+ <c-spinner size=\"sm\" />\n+ <c-spinner size=\"md\" />\n+ <c-spinner size=\"lg\" />\n+ <c-spinner size=\"xl\" />\n+</c-stack>\n+```\n+\n+### Spinner with empty area color\n+\n+```vue live=true\n+<c-spinner\n+ thickness=\"4px\"\n+ speed=\"0.65s\"\n+ empty-color=\"green.200\"\n+ color=\"vue.500\"\n+ size=\"xl\"\n+/>\n+```\n+\n+## Props\n+\n+| Name | Type | Default | Description |\n+| ---------- | ------------------------ | ------------- | --------------------------------------------------------------- |\n+| size | `xl`,`lg`,`md`,`sm`,`xs` | `md` | The size of the spinner. |\n+| thickness | `string` | `2px` | The thickness of the spinner. |\n+| speed | `string` | `0.45s` | The speed of the spinner. |\n+| label | `string` | `Loading...` | An accessible label for the spinner (Useful for screen readers) |\n+| color | `string` | | The color of the spinner. |\n+| emptyColor | `string` | `transparent` | The color of the empty areas in the spinner. |\n",
        "date": "26.04.2020 21:06:57",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "sim_msg": "refactor(checkbox): remove script setup",
        "sim_diff": "diff --git a/src/components/checkbox/CdrCheckbox.vue b/src/components/checkbox/CdrCheckbox.vue -<template>\n- <cdr-label-wrapper\n- :class=\"style[baseClass]\"\n- :size=\"size\"\n- :modifier=\"modifier\"\n- :label-class=\"labelClass\"\n- :content-class=\"contentClass\"\n- :background=\"background\"\n- :disabled=\"$attrs.disabled\"\n- >\n- <template #input>\n- <input\n- :class=\"[style['cdr-checkbox__input'], inputClass]\"\n- type=\"checkbox\"\n- v-bind=\"$attrs\"\n- :true-value=\"customValue ? null : trueValue\"\n- :false-value=\"customValue ? null : falseValue\"\n- :value=\"customValue\"\n- v-indeterminate=\"indeterminate\"\n- v-model=\"checkboxModel\"\n- />\n- </template>\n- <slot />\n- </cdr-label-wrapper>\n-</template>\n<script>\n-export default {\n- inheritAttrs: false,\n- customOptions: {}\n-}\n-</script>\n-<script setup>\n-import { useCssModule, computed } from 'vue';\n+import { defineComponent, useCssModule, computed } from 'vue';\nimport CdrLabelWrapper from '../labelWrapper/CdrLabelWrapper.vue';\n-import sizeProps from '../../props/size.js';\n-import propValidator from '../../utils/propValidator.js';\n-import backgroundProps from '../../props/background.js';\n+import sizeProps from '../../props/size';\n+import propValidator from '../../utils/propValidator';\n+import backgroundProps from '../../props/background';\n-const props = defineProps({\n+export default defineComponent({\n+ name: 'CdrCheckbox',\n+ components: { CdrLabelWrapper },\n+ directives: {\n+ indeterminate: {\n+ mounted(el, binding) {\n+ if (binding.value) {\n+ el.setAttribute('indeterminate', binding.value);\n+ return;\n+ }\n+ el.removeAttribute('indeterminate');\n+ },\n+ },\n+ },\n+ inheritAttrs: false,\n+ customOptions: {},\n+ props: {\n/**\n* Class that is added to the label for custom styles\n*/\n@@ -86,27 +71,55 @@ const props = defineProps({\n/** @ignore */\nmodelValue: {\ntype: [String, Number, Boolean, Object, Array, Symbol, Function],\n- }\n-});\n- const emit = defineEmits(['update:modelValue'])\n+ },\n+ },\n+\n+ setup(props, ctx) {\n+ const baseClass = 'cdr-checkbox';\n- const vIndeterminate = (el, binding)=>{\n- if(!!binding.value) {\n- el.setAttribute(\"indeterminate\", binding.value)\n- return;\n- }\n- el.removeAttribute(\"indeterminate\");\n- }\nconst checkboxModel = computed({\nget() {\n- return props.modelValue\n+ return props.modelValue;\n},\nset(newValue) {\n- emit('update:modelValue', newValue)\n- }\n-})\n-const style = useCssModule();\n-const baseClass = 'cdr-checkbox';\n+ ctx.emit('update:modelValue', newValue);\n+ },\n+ });\n+\n+ return {\n+ style: useCssModule(),\n+ baseClass,\n+ checkboxModel,\n+ };\n+ },\n+});\n</script>\n+\n+<template>\n+ <cdr-label-wrapper\n+ :class=\"style[baseClass]\"\n+ :size=\"size\"\n+ :modifier=\"modifier\"\n+ :label-class=\"labelClass\"\n+ :content-class=\"contentClass\"\n+ :background=\"background\"\n+ :disabled=\"$attrs.disabled\"\n+ >\n+ <template #input>\n+ <input\n+ :class=\"[style['cdr-checkbox__input'], inputClass]\"\n+ type=\"checkbox\"\n+ v-bind=\"$attrs\"\n+ :true-value=\"customValue ? null : trueValue\"\n+ :false-value=\"customValue ? null : falseValue\"\n+ :value=\"customValue\"\n+ v-indeterminate=\"indeterminate\"\n+ v-model=\"checkboxModel\"\n+ >\n+ </template>\n+ <slot />\n+ </cdr-label-wrapper>\n+</template>\n+\n<style lang=\"scss\" module src=\"./styles/CdrCheckbox.module.scss\">\n</style>\n"
    },
    {
        "msg": "docs(icon): documented parseFAIcons utils",
        "diff": "diff --git a/src/lib/utils/icons.js b/src/lib/utils/icons.js import merge from 'lodash-es/merge'\n+/**\n+ * @description Parse all Font Awesome Icons\n+ * @param {Object} iconSet - Registered Icons object\n+ * @returns {Object} - All Font awesome icons parsed.\n+ */\nconst parseFAIcons = (iconSet) => {\nconst parseFAIcon = (iconObject) => {\nconst { icon } = iconObject\n@@ -15,7 +20,6 @@ const parseFAIcons = (iconSet) => {\n.map(value => parseFAIcon(value))\n.reduce((target, source) => merge(target, source), {})\n- console.log({ result })\nreturn result\n}\n",
        "date": "28.10.2019 03:28:59",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "sim_msg": "build: update bundle configuration",
        "sim_diff": "diff --git a/bundle.config.js b/bundle.config.js @@ -6,7 +6,7 @@ const icons = require(\"./config/icons.json\");\nconst generateColorsVirtualFile = () => {\nconst content = [];\nconst colorsList = []; //Colors list\n- Object.keys(colors).forEach((colorName) => {\n+ Object.keys(colors).forEach(colorName => {\nreturn Object.keys(colors[colorName]).forEach((colorIndex) => {\nreturn colorsList.push({\n\"index\": `${colorName}-${colorIndex}`,\n@@ -15,7 +15,7 @@ const generateColorsVirtualFile = () => {\n});\n});\ncontent.push(\"$colors: (\");\n- colorsList.forEach((color) => {\n+ colorsList.forEach(color => {\n//const sep = (index === colorsList.length - 1) ? \"\" : \",\"; //Separator\nreturn content.push(` \"${color.index}\": ${color.value},`);\n});\n@@ -25,13 +25,13 @@ const generateColorsVirtualFile = () => {\n};\n//Unicode parser\n-const parseUnicode = (value) => value.toString(16).toLowerCase();\n+const parseUnicode = value => value.toString(16).toLowerCase();\n//Generate icons file\nconst generateIconsVirtualFile = () => {\nconst content = [];\ncontent.push(\"$icons: (\");\n- icons.forEach((item) => {\n+ icons.forEach(item => {\nreturn content.push(` \"${item.id}\": \"${parseUnicode(item.unicode)}\",`);\n});\n//content.push(\") !default;\");\n@@ -40,34 +40,68 @@ const generateIconsVirtualFile = () => {\nreturn content.join(\"\\n\");\n};\n-module.exports = {\n- \"name\": \"siimple\",\n- \"cwd\": __dirname,\n+module.exports = Object.values({\n+ \"index\": {\n\"output\": \"index.scss\",\n\"entry\": [\n- // Auto generated modules\n- \"./sass/colors.scss\",\n- \"./sass/icons.scss\",\n- // Core modules\n+ \"./sass/index.scss\",\n+ ],\n+ \"resolve\": {\n+ \"siimple:lib\": \"./lib.scss\",\n+ \"siimple:plugins\": \"./plugins.scss\",\n+ },\n+ },\n+ \"colors\": {\n+ \"output\": \"colors.scss\",\n+ \"entry\": [\n+ \"./colors.scss\",\n+ \"./sass/addons/colors.scss\",\n+ ],\n+ \"resolve\": {\n+ \"siimple:lib\": \"./lib.scss\",\n+ },\n+ \"virtualFiles\": {\n+ \"./colors.scss\": generateColorsVirtualFile(),\n+ },\n+ },\n+ \"icons\": {\n+ \"output\": \"icons.scss\",\n+ \"entry\": [\n+ \"./icons.scss\",\n+ \"./sass/addons/icons.scss\",\n+ ],\n+ \"virtualFiles\": {\n+ \"./icons.scss\": generateIconsVirtualFile(),\n+ },\n+ },\n+ \"plugins\": {\n+ \"output\": \"plugins.scss\",\n+ \"entry\": [\n+ \"./sass/components/*.scss\",\n+ \"./sass/experiments/*.scss\",\n+ \"./sass/helpers/*.scss\",\n+ \"./sass/plugins/*.scss\",\n+ ],\n+ \"resolve\": {\n+ \"siimple:icons\": \"./icons.scss\",\n+ \"siimple:colors\": \"./colors.scss\",\n+ \"siimple:lib\": \"./lib.scss\",\n+ },\n+ },\n+ \"lib\": {\n+ \"output\": \"lib.scss\",\n+ \"entry\": [\n\"./sass/utils.scss\",\n\"./sass/constants.scss\",\n- \"./sass/sheet.scss\",\n\"./sass/naming.scss\",\n\"./sass/scales.scss\",\n\"./sass/breakpoints.scss\",\n\"./sass/variants.scss\",\n- \"./sass/selectors.scss\",\n- \"./sass/api.scss\",\n+ // \"./sass/selectors.scss\",\n+ \"./sass/plugins.scss\",\n\"./sass/theme.scss\",\n- // Components\n- \"./sass/components/*.scss\",\n- \"./sass/experiments/*.scss\",\n- // Plugins\n- \"./sass/plugins/*.scss\",\n+ \"./sass/sheet.scss\",\n],\n\"resolve\": {},\n- \"virtualFiles\": {\n- \"./sass/colors.scss\": generateColorsVirtualFile(),\n- \"./sass/icons.scss\": generateIconsVirtualFile(),\n},\n-};\n+});\n"
    },
    {
        "msg": "docs(README): fix link to CSS Usage page",
        "diff": "diff --git a/README.md b/README.md @@ -112,6 +112,7 @@ This is a listing of example projects and guides that will help you integrate Se\n<details>\n<summary><b>How do I setup CSS?</b></summary>\n+\nThere are several options. Refer to our doc on [CSS Usage][23].\n</details>\n",
        "date": "12.10.2018 11:08:46",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "docs(readme): minor text improve on development section\n[skip ci]",
        "sim_diff": "diff --git a/README.md b/README.md @@ -48,7 +48,7 @@ Please read the [contribution guidelines](CONTRIBUTING.md).\n<details>\n<summary>\n- Check some example commands for development\n+ Check some example useful commands\n</summary>\n#### Compile template for production\n"
    },
    {
        "msg": "docs: fix typo on the front page",
        "diff": "diff --git a/packages/chakra-ui-docs/components/Hero.vue b/packages/chakra-ui-docs/components/Hero.vue is-external\nhref=\"https://chakra-ui.com/\"\n>\n- Looking for React.js verison?\n+ Looking for React.js version?\n</CLink>\n</CFlex>\n</CFlex>\n",
        "date": "09.06.2020 08:22:25",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "sim_msg": "chore(control-panel): Add test script",
        "sim_diff": "diff --git a/packages/control-panel/package.json b/packages/control-panel/package.json \"dev\": \"vite\",\n\"build\": \"tsc && vite build\",\n\"preview\": \"vite preview\",\n- \"lint\": \"eslint src\"\n+ \"lint\": \"eslint src\",\n+ \"test\": \"jest\"\n},\n\"dependencies\": {\n\"@chakra-ui/react\": \"^1.7.4\",\n"
    },
    {
        "msg": "docs: added docs for using Chakra UI Vue CLI plugin",
        "diff": "diff --git a/packages/chakra-ui-docs/docs/getting-started.mdx b/packages/chakra-ui-docs/docs/getting-started.mdx # Getting Started\nInstall Chakra UI and it's peer dependency, `emotion`\n+\n<br />\n```bash\nyarn add @chakra-ui/vue emotion\n```\n+\nor (with npm)\n```bash\nnpm install @chakra-ui/vue emotion --save\n```\n+### With Vue CLI plugin\n+\n+If you are using Vue CLI 3, then you can install Chakra UI and get a base setup using the Chakra UI [plugin](https://www.npmjs.com/package/vue-cli-plugin-chakra-ui).\n+\n+```bash\n+vue add chakra-ui\n+```\n+\n### With Nuxt.js\n-If you're using Nuxt, you need to install `@nuxtjs/emotion` package as well to server-side render your styles.\n+If you're using Nuxt, you need to install `@nuxtjs/emotion` package as well to server-side render your styles.\n```bash\nyarn add @chakra-ui/vue emotion @nuxtjs/emotion\n@@ -22,39 +32,37 @@ yarn add @chakra-ui/vue emotion @nuxtjs/emotion\nCreate a theme object to include custom color, typography, and layout values. Chakra UI comes with a default theme, so this step is optional.\n-\n-\n```js\n// example theme.js\nexport default {\n- breakpoints: [\"30em\", \"48em\", \"62em\", \"80em\"],\n+ breakpoints: ['30em', '48em', '62em', '80em'],\nfonts: {\nheading: '\"Avenir Next\", sans-serif',\n- body: \"system-ui, sans-serif\",\n- mono: \"Menlo, monospace\",\n+ body: 'system-ui, sans-serif',\n+ mono: 'Menlo, monospace'\n},\nfontSizes: {\n- xs: \"0.75rem\",\n- sm: \"0.875rem\",\n- md: \"1rem\",\n- lg: \"1.125rem\",\n- xl: \"1.25rem\",\n- \"2xl\": \"1.5rem\",\n- \"3xl\": \"1.875rem\",\n- \"4xl\": \"2.25rem\",\n- \"5xl\": \"3rem\",\n- \"6xl\": \"4rem\",\n- },\n-};\n+ xs: '0.75rem',\n+ sm: '0.875rem',\n+ md: '1rem',\n+ lg: '1.125rem',\n+ xl: '1.25rem',\n+ '2xl': '1.5rem',\n+ '3xl': '1.875rem',\n+ '4xl': '2.25rem',\n+ '5xl': '3rem',\n+ '6xl': '4rem'\n+ }\n+}\n```\n## Usage\n+\n**1. Import the Chakra UI plugin in your `main.js` file.**\nIn order to use Chakra, you need to wrap your main application inside the Chakra `CThemeProvider` component.\nYou can do so as shown below.\n-\n```js\nimport Vue from 'vue'\nimport Chakra, { CThemeProvider } from '@chakra-ui/vue'\n@@ -64,14 +72,12 @@ Vue.use(Chakra)\nnew Vue({\nel: '#app',\n- render: (h) => h(CThemeProvider, [\n- h(App)\n- ])\n+ render: (h) => h(CThemeProvider, [h(App)])\n}).$mount()\n```\n-\nIf you'd like to add extend the Chakra theme with custom brand colors you can do so as shown below. This is also optional.\n+\n<br />\n```js\n@@ -84,24 +90,22 @@ Vue.use(Chakra, {\ncolors: {\n...defaultTheme.colors,\nbrand: {\n- 900: \"#1a365d\",\n- 800: \"#153e75\",\n- 700: \"#2a69ac\",\n- },\n+ 900: '#1a365d',\n+ 800: '#153e75',\n+ 700: '#2a69ac'\n+ }\n}\n}\n})\nnew Vue({\nel: '#app',\n- render: (h) => h(CThemeProvider, [\n- h(App)\n- ])\n+ render: (h) => h(CThemeProvider, [h(App)])\n}).$mount()\n```\n-\n## Injecting Global Styles.\n+\nSometimes you may need to apply css reset styles to your application.\nChakra UI exports a `CReset` that'll remove browser default styles. It's heavily inspired by [Tailwind's preflight](https://unpkg.com/tailwindcss@1.1.2/dist/base.css)\n@@ -116,10 +120,7 @@ Vue.use(Chakra)\nnew Vue({\nel: '#app',\n- render: (h) => h(CThemeProvider, [\n- h(CReset),\n- h(App)\n- ])\n+ render: (h) => h(CThemeProvider, [h(CReset), h(App)])\n}).$mount()\n```\n@@ -150,10 +151,11 @@ export default {\n```\n### Codesandbox starters\n+\n- [Vue Starter](https://codesandbox.io/s/chakra-ui-vue-starter-2sy0g)\n- [Nuxt Starter](https://codesandbox.io/s/chakra-ui-nuxt-demo-f8tq4)\n- [Gridsome Starter](https://codesandbox.io/s/chakra-ui-gridsome-demo-038c9)\n-\n### Storybook Components\n+\nYou can also view all developed components in [Storybook](https://chakra-ui-vue.netlify.com)!\n",
        "date": "08.05.2020 22:25:19",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "sim_msg": "build: wrap preset in ThemeProvider",
        "sim_diff": "diff --git a/src/components/presets/pedro.js b/src/components/presets/pedro.js /* eslint-disable no-use-before-define */\nimport Inline from '../inline.macro'\n-import { Image, Box, Flex, Text, Link } from './scope'\n+import { ThemeProvider, Image, Box, Flex, Text, Link } from './scope'\nconst code = (\n<Inline>\n- <>\n+ <ThemeProvider theme={query.theme}>\n<Link\nhref='https://fonts.googleapis.com/css?family=Inter:400,500,600,700&display=swap'\nrel='stylesheet'\n@@ -17,29 +17,29 @@ const code = (\n<Flex\nsx={{\n- bg: query.theme.colors.accent,\n- color: query.theme.colors.foreground,\n+ bg: 'accent',\n+ color: 'foreground',\nfontFamily: 'Inter',\nfontWeight: 500,\n- fontSize: query.theme.fontSizes[2],\n+ fontSize: 2,\nflexDirection: 'column'\n}}\n>\n<Box\nas='header'\nsx={{\n- bg: query.theme.colors.background,\n- py: query.theme.space[2],\n- px: query.theme.space[3],\n+ bg: 'background',\n+ py: 2,\n+ px: 3,\nborderBottomWidth: query.theme.space[2],\n- borderBottomColor: query.theme.colors.background,\n+ borderBottomColor: 'background',\nborderBottomStyle: 'solid',\nflex: 0\n}}\n>\n<Text>\n{query.heading}{' '}\n- <Text as='span' sx={{ color: query.theme.colors.faded }}>\n+ <Text as='span' sx={{ color: 'faded' }}>\n{query.subHeading}\n</Text>\n</Text>\n@@ -47,20 +47,20 @@ const code = (\n<Flex\nsx={{\n- bg: query.theme.colors.foreground,\n- color: query.theme.colors.background,\n- pt: query.theme.space[2],\n- pb: query.theme.space[1],\n- px: query.theme.space[3],\n- mx: query.theme.space[3],\n- mt: -query.theme.space[2],\n+ bg: 'foreground',\n+ color: 'background',\n+ pt: 2,\n+ pb: 1,\n+ px: 3,\n+ mx: 3,\n+ mt: -2,\nflex: 1,\nflexDirection: 'column'\n}}\n>\n<Image\nsx={{\n- size: query.theme.space[2],\n+ size: 2,\nmx: 'auto',\ndisplay: 'block'\n}}\n@@ -69,7 +69,7 @@ const code = (\n<Text\nsx={{\n- mt: query.theme.space[2]\n+ mt: 2\n}}\n>\n{query.title}\n@@ -79,8 +79,8 @@ const code = (\nsx={{\nfontFamily: 'Fira Mono',\nfontWeight: '400',\n- color: query.theme.colors.faded,\n- fontSize: query.theme.fontSizes[1],\n+ color: 'faded',\n+ fontSize: 1,\nmt: 'auto'\n}}\n>\n@@ -88,7 +88,7 @@ const code = (\n</Text>\n</Flex>\n</Flex>\n- </>\n+ </ThemeProvider>\n</Inline>\n)\n@@ -107,6 +107,7 @@ const query = {\nfaded: 'rgba(128, 128, 128, 1)'\n},\nspace: [0, 32, 48, 64],\n+ sizes: [0, 32, 48, 64],\nfontSizes: [0, 16, 24]\n}\n}\n"
    },
    {
        "msg": "docs: add margin to docs pages",
        "diff": "diff --git a/website/layouts/default.vue b/website/layouts/default.vue >\n<CReset />\n<Navbar />\n- <CFlex max-h=\"calc(100vh - 60px)\">\n+ <CFlex\n+ max-h=\"calc(100vh - 60px)\"\n+ max-w=\"1440px\"\n+ mx=\"auto\"\n+ >\n<Sidebar />\n<CBox\nid=\"main-content\"\n",
        "date": "17.08.2021 16:07:41",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "sim_msg": "feat(docs): small tweaks to search results design",
        "sim_diff": "diff --git a/docs/src/components/AppSearchResults.vue b/docs/src/components/AppSearchResults.vue @@ -98,10 +98,10 @@ export default {\nopacity: 0\n&__section\n- margin: 16px 0\n+ margin: 4px 0\n&__section-title\n- padding: 4px 0 8px 16px\n+ padding: 4px 0 4px 16px\nfont-weight: 500\ncolor: $primary\n"
    },
    {
        "msg": "docs(options): analytics and remote config description\nAnalytics and Remote Config options descriptions were referencing Storage.",
        "diff": "diff --git a/docs/guide/options/README.md b/docs/guide/options/README.md @@ -556,7 +556,7 @@ performance: true\n### analytics\n-Initializes Firebase Storage and makes it available via `$fireAnalytics` and `$fireAnalyticsObj`.\n+Initializes Firebase Analytics and makes it available via `$fireAnalytics` and `$fireAnalyticsObj`.\n- Type: `Boolean` or `Object`\n- Default: `false`\n@@ -567,7 +567,7 @@ analytics: true\n### remoteConfig\n-Initializes Firebase Storage and makes it available via `$fireConfig` and `$fireConfigObj`.\n+Initializes Firebase Remote Config and makes it available via `$fireConfig` and `$fireConfigObj`.\n- Type: `Boolean` or `Object`\n- Default: `false`\n",
        "date": "10.05.2020 22:07:50",
        "repo": "nuxt-community/firebase-module",
        "type": "docs",
        "sim_msg": "docs: update original source docs",
        "sim_diff": "diff --git a/packages/analytics-plugin-original-source/README.md b/packages/analytics-plugin-original-source/README.md ## Usage\n```bash\n-npm i analytics\n-npm i analytics-plugin-original-source\n+npm install analytics\n+npm install analytics-plugin-original-source\n```\n```js\n-import analyticsLib from 'analytics'\n+import Analytics from 'analytics'\nimport originalSrc from 'analytics-plugin-original-source'\n-const analytics = analyticsLib({\n- app: 'doggieDating',\n+const analytics = Analytics({\n+ app: 'my-app',\nversion: 100,\ndebug: true,\nplugins: [\n"
    },
    {
        "msg": "docs(routes): fix layout component imports",
        "diff": "diff --git a/docs/src/routes.js b/docs/src/routes.js @@ -4,8 +4,8 @@ import { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom'\nimport ExternalExampleLayout from './components/ExternalExampleLayout'\nimport DocsLayout from './components/DocsLayout'\nimport DocsRoot from './components/DocsRoot'\n-import LayoutsLayout from './components/layoutsLayout'\n-import LayoutsRoot from './components/layoutsRoot'\n+import LayoutsLayout from './components/LayoutsLayout'\n+import LayoutsRoot from './components/LayoutsRoot'\nimport Introduction from './views/Introduction'\nimport Layouts from './views/layouts'\n",
        "date": "02.06.2018 20:02:08",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "fix(dist-build): add fs-extra to white list and dll",
        "sim_diff": "diff --git a/package.json b/package.json \"connected-react-router\",\n\"@material-ui/core\",\n\"@material-ui/icons\",\n- \"flag-icon-css/css/flag-icon.css\"\n+ \"flag-icon-css/css/flag-icon.css\",\n+ \"fs-extra\"\n],\n\"main\": {\n\"extraEntries\": [\n\"connected-react-router\",\n\"@material-ui/core\",\n\"@material-ui/icons\",\n- \"flag-icon-css/css/flag-icon.css\"\n+ \"flag-icon-css/css/flag-icon.css\",\n+ \"fs-extra\"\n],\n\"webpackConfig\": \"webpack/renderer.additions.js\",\n\"webpackDllConfig\": \"webpack/dll.additions.js\"\n"
    },
    {
        "msg": "docs(Collapse): Document the defaultOpen prop\nAdds a sentence to describe the defaultOpen prop.",
        "diff": "diff --git a/docs/lib/Components/CollapsePage.js b/docs/lib/Components/CollapsePage.js @@ -68,7 +68,8 @@ export default class CollapsePage extends React.Component {\nwanted without the need to manage/control the state of the component.{' '}\n<code>UncontrolledCollapse</code> does not require an <code>isOpen</code> prop. Instead\npass a <code>toggler</code> prop. The <code>toggler</code> prop is a string which will run\n- querySelectorAll to find dom elements which will trigger toggle.\n+ querySelectorAll to find dom elements which will trigger toggle. The <code>defaultOpen</code>\n+ prop controls the initial state.\n</p>\n<div className=\"docs-example\">\n<UncontrolledCollapseExample />\n",
        "date": "07.10.2020 22:06:43",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "sim_msg": "feat(models): collapsed schema content should be clickable",
        "sim_diff": "diff --git a/src/core/components/model-collapse.jsx b/src/core/components/model-collapse.jsx @@ -90,7 +90,11 @@ export default class ModelCollapse extends Component {\n<span onClick={ this.toggleCollapsed } className=\"pointer\">\n<span className={ \"model-toggle\" + ( this.state.expanded ? \"\" : \" collapsed\" ) }></span>\n</span>\n- { this.state.expanded ? this.props.children :this.state.collapsedContent }\n+ {\n+ this.state.expanded\n+ ? this.props.children\n+ : <span onClick={this.toggleCollapsed} className=\"pointer\">{this.state.collapsedContent}</span>\n+ }\n</span>\n)\n}\n"
    },
    {
        "msg": "docs: was used",
        "diff": "diff --git a/website/pages/docs/customization.md b/website/pages/docs/customization.md @@ -129,7 +129,7 @@ module.exports = {\noptions: {\npluginOptions, // the options passed to the plugin ({ name:'pluginname', options: { key: 'value'}})\nrazzleOptions, // the modified options passed to Razzle in the `options` key in `razzle.config.js` (options: { key: 'value'})\n- webpackOptions // the modified options that will be used to configure webpack/ webpack loaders and plugins\n+ webpackOptions // the modified options that was used to configure webpack/ webpack loaders and plugins\n},\npaths // the modified paths that will be used by Razzle.\n}) {\n",
        "date": "28.08.2020 17:41:20",
        "repo": "jaredpalmer/razzle",
        "type": "docs",
        "sim_msg": "docs: sunset pluginAPI.enabled",
        "sim_diff": "diff --git a/packages/docs/docs/plugin/option-api.md b/packages/docs/docs/plugin/option-api.md @@ -40,21 +40,6 @@ module.exports = {\n}\n```\n-## enabled\n-\n-- Type: `boolean`\n-- Default: true\n-\n-Configure whether to enable this plugin. e.g. if you want to enable a plugin only in development mode:\n-\n-```js\n-module.exports = (options, ctx) => {\n- return {\n- enabled: !ctx.isProd\n- }\n-}\n-```\n-\n## chainWebpack\n- Type: `Function`\n"
    },
    {
        "msg": "docs(Form): fix group variations typo\ndocs(Form): fix group variations typo",
        "diff": "diff --git a/docs/app/Examples/collections/Form/GroupVariations/index.js b/docs/app/Examples/collections/Form/GroupVariations/index.js @@ -12,7 +12,7 @@ const FormGroupVariationsExamples = () => (\nexamplePath='collections/Form/GroupVariations/FormExampleEvenlyDividedGroup'\n>\n<Message info>\n- When using the <code>widths='even'</code> prop declaration on a <code>Form.Group</code>,\n+ When using the <code>widths='equal'</code> prop declaration on a <code>Form.Group</code>,\nall child <code>Form.Dropdown</code>, <code>Form.Input</code>, <code>Form.Select</code>\ncomponents must be rendered with a <code>fluid</code> prop to work correctly.\n</Message>\n",
        "date": "24.05.2018 15:35:27",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "chore: use first-of-type instead of first-child",
        "sim_diff": "diff --git a/src/components/internals/create-select-styles.js b/src/components/internals/create-select-styles.js @@ -228,7 +228,7 @@ const groupStyles = (props, theme) => base => {\nreturn {\n...base,\npadding: 0,\n- '&:not(:first-child)': {\n+ '&:not(:first-of-type)': {\nborderTop: props.showOptionGroupDivider\n? `1px solid ${overwrittenVars.colorNeutral}`\n: base.borderTop,\n"
    },
    {
        "msg": "docs(ModalExampleScrollingContent): your description\nTo conform with typescript definition files",
        "diff": "diff --git a/docs/app/Examples/modules/Modal/Variations/ModalExampleScrollingContent.js b/docs/app/Examples/modules/Modal/Variations/ModalExampleScrollingContent.js @@ -27,7 +27,7 @@ const ModalExampleScrollingContent = () => (\n</Modal.Content>\n<Modal.Actions>\n<Button primary>\n- Proceed <Icon name='right chevron' />\n+ Proceed <Icon name='chevron right' />\n</Button>\n</Modal.Actions>\n</Modal>\n",
        "date": "22.05.2018 00:40:06",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "feat: added extra class opportunity to popup",
        "sim_diff": "diff --git a/src/renderer/common/popup.jsx b/src/renderer/common/popup.jsx @@ -15,8 +15,9 @@ const styles = theme => ({\n}\n});\n-export const Popup = withStyles(styles)(({ classes, children, closeAction, text, open = true }) => (\n- <Modal open={open} className={classes.modal}>\n+export const Popup = withStyles(styles)(\n+ ({ classes, xtraClass, children, closeAction, text, open = true }) => (\n+ <Modal open={open} className={`${classes.modal} ${xtraClass}`}>\n<ModalWrap>\n<ModalCloseButton onClick={closeAction} className={classes.closeButton}>\n<ModalCloseIcon />\n@@ -33,6 +34,7 @@ export const Popup = withStyles(styles)(({ classes, children, closeAction, text,\n<ModalBody>{children}</ModalBody>\n</ModalWrap>\n</Modal>\n-));\n+ )\n+);\nexport default Popup;\n"
    },
    {
        "msg": "docs(readme): add badges for CDN, NPM, and license + CDN info.",
        "diff": "diff --git a/README.md b/README.md [![reactstrap](https://cloud.githubusercontent.com/assets/399776/13906899/1de62f0c-ee9f-11e5-95c0-c515fee8e918.png)](https://reactstrap.github.io)\n-[![Build Status](https://travis-ci.org/reactstrap/reactstrap.svg?branch=master)](https://travis-ci.org/reactstrap/reactstrap) [![Coverage Status](https://coveralls.io/repos/github/reactstrap/reactstrap/badge.svg?branch=master)](https://coveralls.io/github/reactstrap/reactstrap?branch=master)\n+[![CDNJS](https://img.shields.io/cdnjs/v/reactstrap.svg)](https://cdnjs.com/libraries/reactstrap) [![NPM Version](https://img.shields.io/npm/v/reactstrap.svg?branch=master)](https://www.npmjs.com/package/reactstrap) [![Build Status](https://travis-ci.org/reactstrap/reactstrap.svg?branch=master)](https://travis-ci.org/reactstrap/reactstrap) [![Coverage Status](https://coveralls.io/repos/github/reactstrap/reactstrap/badge.svg?branch=master)](https://coveralls.io/github/reactstrap/reactstrap?branch=master) [![License](https://img.shields.io/npm/l/reactstrap.svg)](https://github.com/reactstrap/reactstrap/blob/master/LICENSE)\n# reactstrap\n@@ -45,6 +45,19 @@ import { Button } from 'reactstrap';\nNow you are ready to use the imported reactstrap components within your component hierarchy defined in the render method. Here is an example [`App.js`](https://gist.github.com/eddywashere/e13033c0e655ab7cda995f8bc77ce40d) redone using reactstrap.\n+### CDN\n+\n+Reactstrap can be included directly in your application's bundle or excluded during compilation and linked directly to a CDN.\n+\n+```html\n+https://cdnjs.cloudflare.com/ajax/libs/reactstrap/4.8.0/reactstrap.min.js\n+```\n+\n+> Note: When using the external CDN library, be sure to include the required dependencies as necessary **prior** to the Reactstrap library:\n+> * [React](https://cdnjs.com/libraries/react)\n+> * [ReactTransitionGroup](https://unpkg.com/react-transition-group/dist/react-transition-group.min.js)\n+\n+\n## About the Project\nThis library contains React Bootstrap 4 components that favor composition and control. The library does not depend on jQuery or Bootstrap javascript. However, [Tether](http://tether.io/) is relied upon for advanced positioning of content like Tooltips, Popovers, and auto-flipping Dropdowns.\n",
        "date": "01.07.2017 11:06:55",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "sim_msg": "chore(README): Change to shield.io badges",
        "sim_diff": "diff --git a/README.md b/README.md [![npm](https://img.shields.io/npm/v/contentful.svg)](https://www.npmjs.com/package/contentful)\n[![Build Status](https://travis-ci.org/contentful/contentful.js.svg?branch=master)](https://travis-ci.org/contentful/contentful.js)\n[![Coverage Status](https://coveralls.io/repos/github/contentful/contentful.js/badge.svg?branch=master)](https://coveralls.io/github/contentful/contentful.js?branch=master)\n-[![Dependency Status](https://david-dm.org/contentful/contentful.js.svg)](https://david-dm.org/contentful/contentful.js)\n-[![devDependency Status](https://david-dm.org/contentful/contentful.js/dev-status.svg)](https://david-dm.org/contentful/contentful.js#info=devDependencies)\n+[![Dependency Status](https://img.shields.io/david/contentful/contentful.js.svg)](https://david-dm.org/contentful/contentful.js)\n+[![devDependency Status](https://img.shields.io/david/dev/contentful/contentful.js.svg)](https://david-dm.org/contentful/contentful.js#info=devDependencies)\n[![semantic-release](https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg)](https://github.com/semantic-release/semantic-release)\n[![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg)](http://standardjs.com/)\n"
    },
    {
        "msg": "docs: update radio/checkbox examples to follow docs\n<input> and <label> should be siblings\n<input> should before after <label>",
        "diff": "diff --git a/docs/lib/examples/InlineCheckboxes.js b/docs/lib/examples/InlineCheckboxes.js @@ -5,13 +5,15 @@ const Example = (props) => {\nreturn (\n<Form>\n<FormGroup check inline>\n- <Label check>\n- <Input type=\"checkbox\" /> Some input\n+ <Input id=\"InlineCheckboxes-checkbox-1\" type=\"checkbox\" />\n+ <Label for=\"InlineCheckboxes-checkbox-1\" check>\n+ Some input\n</Label>\n</FormGroup>\n<FormGroup check inline>\n- <Label check>\n- <Input type=\"checkbox\" /> Some other input\n+ <Input id=\"InlineCheckboxes-checkbox-2\" type=\"checkbox\" />\n+ <Label for=\"InlineCheckboxes-checkbox-2\" check>\n+ Some other input\n</Label>\n</FormGroup>\n</Form>\n@@ -19,4 +21,3 @@ const Example = (props) => {\n}\nexport default Example;\n-\n\\ No newline at end of file\n",
        "date": "11.12.2020 15:41:19",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "sim_msg": "refactor(checkbox): add missing props in checkbox.style.js file",
        "sim_diff": "diff --git a/src/components/checkbox/checkbox.style.js b/src/components/checkbox/checkbox.style.js @@ -205,6 +205,9 @@ CheckboxStyle.propTypes = {\nfieldHelpInline: PropTypes.bool,\ninputWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\nsize: PropTypes.string,\n+ labelSpacing: PropTypes.oneOf([1, 2]),\n+ reverse: PropTypes.bool,\n+ adaptiveSpacingSmallScreen: PropTypes.bool,\n};\nconst StyledCheckboxGroup = styled.div`\n@@ -239,6 +242,10 @@ const StyledCheckboxGroup = styled.div`\n`}\n`;\n+StyledCheckboxGroup.propTypes = {\n+ legendInline: PropTypes.bool,\n+};\n+\nexport { StyledCheckboxGroup };\nexport default CheckboxStyle;\n"
    },
    {
        "msg": "docs(Theming): use plugin",
        "diff": "diff --git a/docs/src/pages/Theming.mdx b/docs/src/pages/Theming.mdx @@ -80,14 +80,14 @@ yarn remove semantic-ui semantic-ui-css\n### Install required dependencies\n-Create React App does not support LESS out of the box, we and propose to use [`@craco/craco`](https://www.npmjs.com/package/@craco/craco) to add it and avoid `eject`. You have to install required packages:\n+Create React App does not support LESS out of the box, we and propose to use [`@craco/craco`](https://www.npmjs.com/package/@craco/craco) to add its support and avoid `eject`. You have to install required packages:\n```bash\n-npm install @craco/craco craco-less semantic-ui-less --save-dev\n+npm install @craco/craco @semantic-ui-react/craco-less semantic-ui-less --save-dev\n```\n```bash\n-yarn add @craco/craco craco-less semantic-ui-less --dev\n+yarn add @craco/craco @semantic-ui-react/craco-less semantic-ui-less --dev\n```\nAnd then update your `package.json` and create `craco.config.js`:\n@@ -104,39 +104,8 @@ And then update your `package.json` and create `craco.config.js`:\n```\n```jsx label=craco.config.js\n-const { getLoader, loaderByName, throwUnexpectedConfigError } = require('@craco/craco')\n-\nmodule.exports = {\n- webpack: {\n- alias: {\n- '../../theme.config$': require('path').join(__dirname, '/src/semantic-ui/theme.config'),\n- },\n- },\n- plugins: [\n- { plugin: require('craco-less') },\n- {\n- plugin: {\n- overrideWebpackConfig: ({ context, webpackConfig }) => {\n- const { isFound, match: fileLoaderMatch } = getLoader(\n- webpackConfig,\n- loaderByName('file-loader'),\n- )\n-\n- if (!isFound) {\n- throwUnexpectedConfigError({\n- message: `Can't find file-loader in the ${context.env} webpack config!`,\n- })\n- }\n-\n- fileLoaderMatch.loader.exclude.push(/theme.config$/)\n- fileLoaderMatch.loader.exclude.push(/\\.variables$/)\n- fileLoaderMatch.loader.exclude.push(/\\.overrides$/)\n-\n- return webpackConfig\n- },\n- },\n- },\n- ],\n+ plugins: [{ plugin: require('@semantic-ui-react/craco-less') }],\n}\n```\n",
        "date": "29.08.2019 15:47:10",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "refactor: cleanup craco config",
        "sim_diff": "diff --git a/craco.config.js b/craco.config.js const path = require('path')\n-const fs = require('fs-extra')\n-const HtmlWebpackPlugin = require('html-webpack-plugin')\n-const webpack = require('webpack')\nconst { addBeforeLoader, getLoaders, loaderByName } = require('@craco/craco')\nconst BabelRcPlugin = require('@jackwilsdon/craco-use-babelrc')\n+const fastRefreshCracoPlugin = require('craco-fast-refresh')\n+const fs = require('fs-extra')\n+const HtmlWebpackPlugin = require('html-webpack-plugin')\nconst MiniCssExtractPlugin = require('mini-css-extract-plugin')\nconst OptimizeCSSAssetsPlugin = require('optimize-css-assets-webpack-plugin')\n-const TerserPlugin = require('terser-webpack-plugin')\n-const fastRefreshCracoPlugin = require('craco-fast-refresh')\nconst ReactRefreshWebpackPlugin = require('@pmmmwh/react-refresh-webpack-plugin')\n+const TerserPlugin = require('terser-webpack-plugin')\n+const webpack = require('webpack')\nmodule.exports = {\nplugins: [{ plugin: BabelRcPlugin }, { plugin: fastRefreshCracoPlugin }],\n@@ -71,13 +71,18 @@ module.exports = {\n)\n}\n+ // Support React hot-reloading\nwebpackConfig.entry = [\nrequire.resolve('react-dev-utils/webpackHotDevClient'),\npaths.appIndexJs\n]\n+\n+ // Allow for manual configuration of optimization plugins\nwebpackConfig.optimization = {\nminimizer: [new TerserPlugin(), new OptimizeCSSAssetsPlugin({})]\n}\n+\n+ // Custom plugins to allow trimet-mod-otp integration\nwebpackConfig.plugins = [\nnew ReactRefreshWebpackPlugin(),\nnew HtmlWebpackPlugin({\n@@ -94,12 +99,17 @@ module.exports = {\nYAML_CONFIG: JSON.stringify(YAML_CONFIG)\n})\n]\n+\n+ // Enable hot-reloading\nwebpackConfig.devServer = {\nhot: true,\nstatic: './dist'\n}\n+\n+ // Make source-maps useful\nwebpackConfig.devtool = 'eval-cheap-module-source-map'\n+ // Match mastarm behavior\nwebpackConfig.output = {\nfilename: 'bundle.js',\npath: path.join(__dirname, '/dist'),\n"
    },
    {
        "msg": "docs: updated installed version",
        "diff": "diff --git a/package.json b/package.json \"@babel/plugin-transform-modules-commonjs\": \"^7.7.4\",\n\"@babel/plugin-transform-parameters\": \"^7.7.4\",\n\"@babel/preset-env\": \"^7.9.5\",\n- \"@chakra-ui/vue\": \"^0.5.3\",\n+ \"@chakra-ui/vue\": \"^0.5.4\",\n\"@commitlint/cli\": \"^8.2.0\",\n\"@commitlint/config-conventional\": \"^8.2.0\",\n\"@fortawesome/free-brands-svg-icons\": \"^5.12.0\",\n",
        "date": "16.05.2020 21:05:46",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "sim_msg": "chore: remove the unused dependencies babel-template and babel-types",
        "sim_diff": "diff --git a/package.json b/package.json \"babel-plugin-transform-object-rest-spread\": \"^6.23.0\",\n\"babel-preset-env\": \"^1.4.0\",\n\"babel-register\": \"^6.24.1\",\n- \"babel-template\": \"^6.24.1\",\n- \"babel-types\": \"^6.24.1\",\n\"cz-conventional-changelog\": \"^2.0.0\",\n\"eslint\": \"^4.5.0\",\n\"eslint-config-standard\": \"^10.2.1\",\n"
    },
    {
        "msg": "docs(List): fix duplicate Types sections",
        "diff": "diff --git a/docs/app/Examples/elements/List/Variations/index.js b/docs/app/Examples/elements/List/Variations/index.js @@ -5,7 +5,7 @@ import ComponentExample from 'docs/app/Components/ComponentDoc/ComponentExample'\nimport ExampleSection from 'docs/app/Components/ComponentDoc/ExampleSection'\nconst ListVariations = () => (\n- <ExampleSection title='Types'>\n+ <ExampleSection title='Variations'>\n<ComponentExample\ntitle='Horizontal'\ndescription='A list can be formatted to have items appear horizontally'\n",
        "date": "17.04.2018 10:25:55",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "docs: fix link to websites on showcase",
        "sim_diff": "diff --git a/docs/components/ShowcaseList/index.js b/docs/components/ShowcaseList/index.js @@ -95,7 +95,7 @@ const ShowcaseList = (props: Object) => (\n</Link>\n))}\n</View>\n- <Link to={item.url}>\n+ <Link href={item.url}>\n<View style={styles.imageContainerLarge}>\n<Image\nsource={{\n"
    },
    {
        "msg": "docs(Input): add min and max to number input",
        "diff": "diff --git a/docs/lib/examples/InputGroupOverview.js b/docs/lib/examples/InputGroupOverview.js @@ -37,7 +37,7 @@ const Example = (props) => {\n<br />\n<InputGroup>\n<InputGroupAddon addonType=\"prepend\">$</InputGroupAddon>\n- <Input placeholder=\"Amount\" type=\"number\" step=\"1\" />\n+ <Input placeholder=\"Amount\" min={0} max={100} type=\"number\" step=\"1\" />\n<InputGroupAddon addonType=\"append\">.00</InputGroupAddon>\n</InputGroup>\n</div>\n",
        "date": "03.04.2019 20:54:50",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "sim_msg": "feat(inputs-numeric): adds new props max, min and step",
        "sim_diff": "diff --git a/inputs/numeric-input/numeric-input.js b/inputs/numeric-input/numeric-input.js @@ -8,6 +8,9 @@ const NumericInput = props => (\nname={props.name}\ntype=\"number\"\nvalue={props.value}\n+ min={props.minValue}\n+ max={props.maxValue}\n+ step={props.stepValue}\nonChange={props.onChange}\nonBlur={props.onBlur}\ndisabled={props.isDisabled}\n@@ -31,6 +34,9 @@ NumericInput.displayName = 'NumericInput';\nNumericInput.propTypes = {\nname: PropTypes.string,\nvalue: PropTypes.string.isRequired,\n+ minValue: PropTypes.string,\n+ maxValue: PropTypes.string,\n+ stepValue: PropTypes.string,\nonChange: PropTypes.func.isRequired,\nonBlur: PropTypes.func,\nisDisabled: PropTypes.bool,\n"
    },
    {
        "msg": "docs: use consistent ext example\n[skip ci]\nRef",
        "diff": "diff --git a/doc/sample-nodemon.md b/doc/sample-nodemon.md @@ -22,7 +22,7 @@ Here is an example (of a contrived) `nodemon.json` file:\n\"env\": {\n\"NODE_ENV\": \"development\"\n},\n- \"ext\": \"js json\"\n+ \"ext\": \"js,json\"\n}\nNote that the `ignore` used is nodemon's default ignore rule. The complete defaults can be seen here: [defaults.js](https://github.com/remy/nodemon/blob/master/lib/config/defaults.js).\n",
        "date": "04.04.2018 09:15:08",
        "repo": "remy/nodemon",
        "type": "docs",
        "sim_msg": "docs: deprecate ignoreJSON",
        "sim_diff": "diff --git a/docs/source/en/core/security.md b/docs/source/en/core/security.md @@ -350,7 +350,9 @@ module.exports = {\n};\n```\n-#### Ignore JSON request\n+#### Ignore JSON request(deprecated)\n+\n+**Notice: this configure is deprecated, the attacker can bypass it through [flash and 307](https://www.geekboy.ninja/blog/exploiting-json-cross-site-request-forgery-csrf-using-flash/), please don't enable it in production environment!**\nWith security policy protection [SOP](https://en.wikipedia.org/wiki/Same-origin_policy), basically all modern browsers do not allow cross domain request when content-type is set to JSON, so we can just leave out JSON request.\n"
    },
    {
        "msg": "docs(stack.mdx): documentation for the Stack component",
        "diff": "diff --git a/packages/chakra-ui-docs/docs/stack.mdx b/packages/chakra-ui-docs/docs/stack.mdx +import SEO from '../components/SEO'\n+\n+<SEO\n+ title=\"Stack\"\n+ description=\"Stack is a layout utility component that makes it easy to stack elements together and apply a space between them.\"\n+/>\n+\n# Stack\n+\n+Stack is a layout utility component that makes it easy to stack elements together and apply a space between them. It composes the [Flex](/flex) component.\n+\n+## Import\n+\n+```js\n+import { CStack } from '@chakra-ui/vue'\n+```\n+\n+By default, each item is stacked vertically. Stack clones it's children and passes the spacing to them using `margin-bottom` or `margin-right`.\n+\n+## Usage\n+\n+```vue live=true\n+<c-stack :spacing=\"5\">\n+ <c-box :p=\"5\" shadow=\"md\" border-width=\"1px\">\n+ <c-heading>See the Vue</c-heading>\n+ <c-text :mt=\"4\">Vue makes front-end development a breeze.</c-text>\n+ </c-box>\n+ <c-box :p=\"5\" shadow=\"md\" border-width=\"1px\">\n+ <c-heading>Go Nuxt!</c-heading>\n+ <c-text :mt=\"4\">Nuxt makes writing Vue even easier.</c-text>\n+ </c-box>\n+</c-stack>\n+```\n+\n+## Stack items horizontally\n+\n+To stack `CStack` children horizontally, pass the `isInline` prop or `direction` and set it to row.\n+\n+Optionally, you can use align and justify to adjust the alignment and distribution of the items.\n+\n+```vue live=true\n+<c-stack :spacing=\"5\" is-inline>\n+ <c-box :p=\"5\" shadow=\"md\" border-width=\"1px\">\n+ <c-heading>See the Vue</c-heading>\n+ <c-text :mt=\"4\">Vue makes front-end development a breeze.</c-text>\n+ </c-box>\n+ <c-box :p=\"5\" shadow=\"md\" border-width=\"1px\">\n+ <c-heading>Go Nuxt!</c-heading>\n+ <c-text :mt=\"4\">Nuxt makes writing Vue even easier.</c-text>\n+ </c-box>\n+</c-stack>\n+```\n+\n+## Reverse display order of items\n+\n+Pass the `isReversed` prop or set `direction` to `row-reverse` or `column-reverse`.\n+\n+```vue live=true\n+<c-stack :spacing=\"5\" is-reversed>\n+ <c-box :p=\"5\" shadow=\"md\" border-width=\"1px\">\n+ <c-heading>See the Vue</c-heading>\n+ <c-text :mt=\"4\">Vue makes front-end development a breeze.</c-text>\n+ </c-box>\n+ <c-box :p=\"5\" shadow=\"md\" border-width=\"1px\">\n+ <c-heading>Go Nuxt!</c-heading>\n+ <c-text :mt=\"4\">Nuxt makes writing Vue even easier.</c-text>\n+ </c-box>\n+</c-stack>\n+```\n+\n+## Props\n+\n+| Name | Type | Default | Description |\n+| -------------------- | ----------------------------- | ------- | ------------------------------------------------------------------------------------------------------------------------ |\n+| `isInline` | `boolean` | false | If `true` the items will be stacked horizontally. |\n+| `isReversed` | `boolean` | false | If `true` the items will be displayed in reverse order. |\n+| `direction` | `FlexProps[\"flexDirection\"]` | | The direction to stack the items. |\n+| `spacing` | `StyledSystem.MarginProps` | | The space between each stack item |\n+| `align` | `FlexProps[\"alignItems\"]` | | The alignment of the stack item. Similar to `align-items` |\n+| `justify` | `FlexProps[\"justifyContent\"]` | | The distribution of the stack item. Similar to `justify-content` |\n+| `shouldWrapChildren` | `boolean` | | If `true`, the children will be wrapped in a `Box` with `display: inline-block`, and the Box will take the spacing props |\n+\n+## Slots\n+\n+| Name | Description |\n+| ------- | ------------------------ |\n+| default | The content of the stack |\n",
        "date": "02.05.2020 22:27:16",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "sim_msg": "chore(readme): adds ultimate vue3/vite/ts template to readme file",
        "sim_diff": "diff --git a/README.md b/README.md @@ -104,6 +104,7 @@ Use the \"Table of Contents\" menu on the top-left corner to explore the list.\n- [vite-vue3-bootstrap-ts-vitest-starter](https://github.com/marcoarruda/vite-vue3-bootstrap-ts-vitest-starter) - Vue 3 + TypeScript + Vite + Bootstrap Vue 3 + Vitest.\n- [vue-xs-admin](https://github.com/jsxiaosi/vue-xs-admin) - Based on Vue3, Vite3 ElementPlus, TypeScript, Pinia, VueRouter.\n- [vue-component-template](https://github.com/houtaroy/vue-component-template) - Vue 3, TSX, ESLint, Prettier.\n+- [ultimate-vite-ts-less-template](https://github.com/alireza0sfr/vue3-vite-ts-base) - Vue 3, TS, Less, i18n, Vitest, Vitepress, lodash, jQuery, axios, Pinia, Built-in logger, Built-in input validators, env files.\n#### Vue 2\n@@ -255,7 +256,6 @@ Use the \"Table of Contents\" menu on the top-left corner to explore the list.\n- [tailwindcss-vite-plugin](https://github.com/await-ovo/tailwindcss-webpack-plugin) - Tailwind CSS integration.\n- [vite-plugin-assemblyscript-asc](https://github.com/krymel/vite-plugin-assemblyscript-asc) - AssemblyScript integration with full support for HMR, ESM import bindings, and source maps.\n-\n#### Loaders\n- [unplugin-icons](https://github.com/antfu/unplugin-icons) - Access thousands of icons as components.\n"
    },
    {
        "msg": "docs: :memo: more winget stuff",
        "diff": "diff --git a/sheets/winget.md b/sheets/winget.md @@ -6,10 +6,26 @@ published: true\nslug: winget\n---\n-## Upgrade All Apps\n+## Upgrade all packages\n-The `--all` option allows you to upgrade all apps:\n+The `--all` option allows you to upgrade all packages:\n```bash\nwinget upgrade --all\n```\n+\n+## List installed packages\n+\n+Listing installed packages will also detail which ones can be updated.\n+\n+```bash\n+winget list\n+```\n+\n+## Update specific package\n+\n+To update a specific package add the package `--id`\n+\n+```bash\n+winget upgrade --id VideoLAN.VLC\n+```\n",
        "date": "26.10.2021 07:19:29",
        "repo": "spences10/cheat-sheets",
        "type": "docs",
        "sim_msg": "docs(readme): update webpack-cli to webpack CLI",
        "sim_diff": "diff --git a/README.md b/README.md # webpack CLI\n* [About](#about)\n+ - [How to install](#how-to-install)\n* [Getting Started](#getting-started)\n-* [webpack-cli Scaffolds](#webpack-cli-scaffolds)\n+* [webpack CLI Scaffolds](#webpack-cli-scaffolds)\n* Commands\n- [`webpack-cli init`](./packages/init/README.md#webpack-cli-init)\n- [`webpack-cli add`](./packages/add/README.md#webpack-cli-add)\n"
    },
    {
        "msg": "docs: Reposition Code Sponsor\nBy having the sponsor embed code at the bottom, it ends up being more effective to help fund the project.",
        "diff": "diff --git a/README.md b/README.md # nodemon\n-<a href=\"https://app.codesponsor.io/link/wnz2te8CdfKZ8wMjGUpi8EZG/remy/nodemon\" rel=\"nofollow\"><img src=\"https://app.codesponsor.io/embed/wnz2te8CdfKZ8wMjGUpi8EZG/remy/nodemon.svg\" style=\"width: 888px; height: 68px;\" alt=\"Sponsor\" /></a>\n-\nFor use during development of a node.js based application.\nnodemon will watch the files in the directory in which nodemon was started, and if any files change, nodemon will automatically restart your node application.\n@@ -291,3 +289,5 @@ See the [FAQ](https://github.com/remy/nodemon/blob/master/faq.md) and please add\n# License\nMIT [http://rem.mit-license.org](http://rem.mit-license.org)\n+\n+<a href=\"https://app.codesponsor.io/link/wnz2te8CdfKZ8wMjGUpi8EZG/remy/nodemon\" rel=\"nofollow\" target=\"_blank\"><img src=\"https://app.codesponsor.io/embed/wnz2te8CdfKZ8wMjGUpi8EZG/remy/nodemon.svg\" style=\"width: 888px; height: 68px;\" alt=\"Sponsor\" /></a>\n",
        "date": "15.09.2017 05:28:19",
        "repo": "remy/nodemon",
        "type": "docs",
        "sim_msg": "docs: add discord link",
        "sim_diff": "diff --git a/README.md b/README.md <p align=\"center\">\n<a href=\"https://travis-ci.org/QingWei-Li/docsify\"><img alt=\"Travis Status\" src=\"https://img.shields.io/travis/QingWei-Li/docsify/master.svg?style=flat-square\"></a>\n<a href=\"https://www.npmjs.com/package/docsify\"><img alt=\"npm\" src=\"https://img.shields.io/npm/v/docsify.svg?style=flat-square\"></a>\n+ <a href=\"https://discord.gg/Yu2vxQ5\"><img alt=\"Discord\" src=\"https://img.shields.io/discord/405225830701334550.svg?style=flat-square\"></a>\n<a href=\"https://github.com/QingWei-Li/donate\"><img alt=\"donate\" src=\"https://img.shields.io/badge/%24-donate-ff69b4.svg?style=flat-square\"></a>\n</p>\n"
    },
    {
        "msg": "docs(layouts): fix typo in GridLayout\ndocs(layouts): fix typo in GridLayout",
        "diff": "diff --git a/docs/app/Layouts/GridLayout.js b/docs/app/Layouts/GridLayout.js @@ -82,7 +82,7 @@ const GridLayout = () => (\n<Header as='h3'>Text Container</Header>\n<p>\nSometimes you just need to put a single column of centered text on a page. A <code>text container</code> is\n- a special type of container optimized for a single flowing column of text, like this instructions on this page.\n+ a special type of container optimized for a single flowing column of text, like these instructions on this page.\n</p>\n<p>Text containers <b>do not need to use grids</b> and help simplify basic page layouts.</p>\n",
        "date": "01.04.2018 19:39:50",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "docs: Update Text tag docs page",
        "sim_diff": "diff --git a/src/tags/object/Text.js b/src/tags/object/Text.js // stub file to keep docs for Text object tag\n/**\n- * The Text tag shows text that can be labeled. Use to display any type of text on the labeling interface.\n+ * The `Text` tag shows text that can be labeled. Use to display any type of text on the labeling interface.\n* You can use `<Style>.htx-text{ white-space: pre-wrap; }</Style>` to preserve all spaces in the text, otherwise spaces are trimmed when displayed.\n* Every space in the text sample is counted when calculating result offsets, for example for NER labeling tasks.\n*\n- * Use with the following data types: text\n+ * Use with the following data types: text.\n* @example\n* <!--Labeling configuration to label text for NER tasks with a word-level granularity -->\n* <View>\n"
    },
    {
        "msg": "docs(Icon): fix selector for input",
        "diff": "diff --git a/docs/app/Components/IconSearch/IconSearch.js b/docs/app/Components/IconSearch/IconSearch.js @@ -57,7 +57,7 @@ export default class IconSearch extends Component {\nstate = { search: '', includeSimilar: true }\ncomponentDidMount() {\n- const input = document.querySelector('#docs-icon-set-input input')\n+ const input = document.querySelector('#docs-icon-set-input')\ninput.focus()\n}\n",
        "date": "01.06.2017 08:34:03",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "fix(Search): reset filters on search/reset (otherwise old buckets are preserved)",
        "sim_diff": "diff --git a/components/Search/index.js b/components/Search/index.js @@ -36,7 +36,8 @@ class Search extends Component {\nthis.props.onSearch(true)\nthis.setState({\ndirty: false,\n- submittedQuery: this.state.searchQuery\n+ submittedQuery: this.state.searchQuery,\n+ filters: []\n})\n}\n@@ -45,7 +46,8 @@ class Search extends Component {\nthis.setState({\ndirty: false,\nsearchQuery: '',\n- submittedQuery: ''\n+ submittedQuery: '',\n+ filters: []\n})\n}\n"
    },
    {
        "msg": "docs: sort components alphabetically",
        "diff": "diff --git a/docs/lib/UI/Content.js b/docs/lib/UI/Content.js @@ -17,7 +17,7 @@ function Content({ items, children, title }) {\n<div className=\"docs-sidebar mb-3\">\n<h1 className=\"h5\">{title}</h1>\n<Nav className=\"flex-column\">\n- {items.map(item => (\n+ {items.sort((a, b) => a.name.localeCompare(b.name)).map(item => (\n<NavItem key={item.to}>\n<NavLink tag={Link} to={item.to} activeClassName=\"active\">\n{item.name}\n",
        "date": "23.04.2019 15:30:40",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "sim_msg": "refactor(navigation): check if anchorLink has child to render the proper element",
        "sim_diff": "diff --git a/packages/doc/src/components/Navigation/Navigation.jsx b/packages/doc/src/components/Navigation/Navigation.jsx @@ -48,14 +48,9 @@ const getHtml = (tree, level = 0) =>\nreturn (\n<ListItem key={url} active={window.location.pathname === url}>\n- {hasChild ? (\n- title\n- ) : (\n- <AnchorLink to={url} level={level}>\n+ <AnchorLink to={url} level={level} as={hasChild && 'span'}>\n{title}\n</AnchorLink>\n- )}\n-\n{hasChild && <List level={level}>{getHtml(childs, level + 1)}</List>}\n</ListItem>\n);\n"
    },
    {
        "msg": "docs(typo): Fix misspelling in documentation (Alerts)",
        "diff": "diff --git a/docs/lib/Components/AlertsPage.js b/docs/lib/Components/AlertsPage.js @@ -99,7 +99,7 @@ export default class AlertsPage extends React.Component {\n<SectionTitle>Alerts without fade</SectionTitle>\n<p>\n- Fade can be disbaled using <code>fade=false</code>.\n+ Fade can be disabled using <code>fade=false</code>.\n</p>\n<div className=\"docs-example\">\n<AlertFadelessExample />\n",
        "date": "29.12.2018 13:35:15",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "sim_msg": "fix(alerts): check for undefined alert description on save",
        "sim_diff": "diff --git a/lib/alerts/components/AlertEditor.js b/lib/alerts/components/AlertEditor.js @@ -56,7 +56,7 @@ export default class AlertEditor extends Component {\nif (title.length > ALERT_TITLE_CHAR_LIMIT) {\nreturn window.alert(`Alert title must be ${ALERT_TITLE_CHAR_LIMIT} characters or less`)\n}\n- if (description.length > ALERT_DESCRIPTION_CHAR_LIMIT) {\n+ if (description && description.length > ALERT_DESCRIPTION_CHAR_LIMIT) {\nreturn window.alert(`Alert description must be ${ALERT_DESCRIPTION_CHAR_LIMIT} characters or less`)\n}\nif (!end || !start) {\n"
    },
    {
        "msg": "docs(index): don't use prod libs in dev",
        "diff": "diff --git a/docs/app/index.ejs b/docs/app/index.ejs <script src=\"//cdn.jsdelivr.net/faker.js/<%= htmlWebpackPlugin.options.versions.faker %>/faker.min.js\"></script>\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/js-beautify/<%= htmlWebpackPlugin.options.versions.jsBeautify %>/beautify-html.min.js\"></script>\n<!-- Use unminified React when not in production so we get errors and warnings -->\n- <script src=\"//cdnjs.cloudflare.com/ajax/libs/prop-types/<%= htmlWebpackPlugin.options.versions.propTypes %>/prop-types.min.js\"></script>\n+ <script src=\"//cdnjs.cloudflare.com/ajax/libs/prop-types/<%= htmlWebpackPlugin.options.versions.propTypes %>/prop-types<%= __PROD__ ? 'min' : '' %>.js\"></script>\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/react/<%= htmlWebpackPlugin.options.versions.react %>/umd/react<%= __PROD__ ? '.production.min' : '.development' %>.js\"></script>\n- <script src=\"https://cdnjs.cloudflare.com/ajax/libs/react-dom/<%= htmlWebpackPlugin.options.versions.reactDOM %>/umd/react-dom.production.min.js\"></script>\n- <script src=\"//cdnjs.cloudflare.com/ajax/libs/react-dom/<%= htmlWebpackPlugin.options.versions.reactDOM %>/umd/react-dom-server.browser.production.min.js\"></script>\n+ <script src=\"https://cdnjs.cloudflare.com/ajax/libs/react-dom/<%= htmlWebpackPlugin.options.versions.reactDOM %>/umd/react-dom<%= __PROD__ ? '.production.min' : '.development' %>.js\"></script>\n+ <script src=\"//cdnjs.cloudflare.com/ajax/libs/react-dom/<%= htmlWebpackPlugin.options.versions.reactDOM %>/umd/react-dom-server.browser<%= __PROD__ ? '.production.min' : '.development' %>.js\"></script>\n<script src=\"//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js\"></script>\n<style>\nhtml, body {\n",
        "date": "18.10.2017 23:01:07",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "chore(examples): simplify and tidy `script-tag.html`\nRemove HTML cruft and use development versions of React and\nReactDOM.",
        "sim_diff": "diff --git a/examples/script-tag.html b/examples/script-tag.html -<!DOCTYPE html>\n-<html>\n- <head>\n- <meta charset=\"utf-8\" />\n- <title>Load with Script Tag</title>\n- </head>\n- <body style=\"padding: 50px;\">\n- <div id=\"root\"></div>\n+<div id=\"root\" style=\"padding: 50px;\"></div>\n<!-- React -->\n- <script src=\"https://unpkg.com/react@16/umd/react.production.min.js\"></script>\n- <!-- <script src=\"https://unpkg.com/react@15/dist/react.min.js\"></script> -->\n+<script src=\"https://unpkg.com/react@16/umd/react.development.js\"></script>\n+<!--\n+ <script src=\"https://unpkg.com/react@15/dist/react.js\"></script>\n+-->\n<!-- HTMLReactParser -->\n<script src=\"../dist/html-react-parser.min.js\"></script>\n<!-- ReactDOM -->\n- <script src=\"https://unpkg.com/react-dom@16/umd/react-dom.production.min.js\"></script>\n- <!-- <script src=\"https://unpkg.com/react-dom@15/dist/react-dom.min.js\"></script> -->\n+<script src=\"https://unpkg.com/react-dom@16/umd/react-dom.development.js\"></script>\n+<!--\n+ <script src=\"https://unpkg.com/react-dom@15/dist/react-dom.js\"></script>\n+-->\n<script>\n- ReactDOM.render(\n- HTMLReactParser(\n+ window.ReactDOM.render(\n+ window.HTMLReactParser(\n'<h2 style=\"font-family: \\'Lucida Grande\\', sans-serif;\">' +\n'HTMLReactParser loaded with script tag' +\n'<\\/h2>'\ndocument.getElementById('root')\n);\n</script>\n- </body>\n-</html>\n"
    },
    {
        "msg": "docs(Icon): add FontAwesome attribution",
        "diff": "diff --git a/docs/app/Components/IconSearch/IconSearch.js b/docs/app/Components/IconSearch/IconSearch.js @@ -144,8 +144,19 @@ export default class IconSearch extends Component {\nrender() {\nconst { includeSimilar } = this.state\nreturn (\n- <Grid columns={1} padded textAlign='center' style={gridStyle}>\n+ <Grid columns={1} padded style={gridStyle}>\n<Grid.Column>\n+ <Header as='h2'>Icon Set</Header>\n+ <p>An icon set contains an arbitrary number of glyphs.</p>\n+\n+ <Message>\n+ Semantic includes a complete port of{' '}\n+ <a href='http://fontawesome.io/whats-new/' rel='noopener noreferrer' target='_blank'>Font Awesome 4.7.0</a>\n+ {' '}designed by{' '}\n+ <a href='http://www.twitter.com/davegandy' rel='noopener noreferrer'>Dave Gandy</a> for its standard icon\n+ set.\n+ </Message>\n+\n<Form>\n<Form.Group inline>\n<Form.Input\n@@ -163,7 +174,7 @@ export default class IconSearch extends Component {\n</Form.Group>\n</Form>\n</Grid.Column>\n- <Grid.Column>\n+ <Grid.Column textAlign='center'>\n{this.renderIcons()}\n</Grid.Column>\n</Grid>\n",
        "date": "10.08.2017 23:28:13",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "sim_msg": "feat(docs): add accessibleText to IconTable",
        "sim_diff": "diff --git a/docs/components/custom/IconTable/IconTable.jsx b/docs/components/custom/IconTable/IconTable.jsx @@ -17,6 +17,8 @@ const IconTable = ({ icons, heading, noSort }) => {\nreturn 0\n})\n}\n+ const hasAccessibleText = icons.find(icon => icon.accessibleText)\n+\nreturn (\n<Box between={3}>\n<Heading level=\"h3\">{heading}</Heading>\n@@ -30,6 +32,7 @@ const IconTable = ({ icons, heading, noSort }) => {\n<th>Symbol</th>\n<th>Icon</th>\n<th>Usage Criteria</th>\n+ {hasAccessibleText && <th>Accessible Text?</th>}\n</tr>\n</thead>\n<tbody>\n@@ -39,7 +42,8 @@ const IconTable = ({ icons, heading, noSort }) => {\n<td>\n<icon.Component {...icon.props} />\n</td>\n- <td>{icon.usageCriteria}</td>\n+ <td dangerouslySetInnerHTML={{ __html: icon.usageCriteria }} />\n+ {hasAccessibleText && <td>{icon.accessibleText}</td>}\n</tr>\n))}\n</tbody>\n"
    },
    {
        "msg": "docs: update contributing",
        "diff": "diff --git a/.github/CONTRIBUTING.md b/.github/CONTRIBUTING.md @@ -41,20 +41,26 @@ git clone https://github.com/<YOUR_GITHUB_USERNAME>/razzle.git\ncd razzle\ngit checkout -B <my-branch>\nNODE_ENV=development yarn install ---ignore-engines\n+# optionally install add-dependencies\n+sudo npm install add-dependencies -g\n```\nThis will install all `node_modules` in all the packages and all the examples and symlink\ninter-dependencies. Thus when you make local changes in any of the packages you can try them\n-immediately in all the examples.\n+immediately in all the examples. `add-dependencies` can be used to just add packages to `package.json`.\n### Commands\n-- `yarn run clean`: Clean up all `node_modules` and remove all symlinks from packages and examples.\n-- `yarn run bootstrap`: Run `yarn` on all examples and packages. Automatically symlinks inter-dependent modules.\n-- `yarn run test`: Runs all tests\n-- `yarn run test:packages`: Runs tests for packages\n-- `yarn run test:e2e`: Runs end-to-end tests\n-- `yarn run build-docs`: Builds docs/ updates doc TOC\n+- `yarn clean`: Clean up all `node_modules` and remove all symlinks from packages and examples.\n+- `yarn bootstrap`: Run `yarn` on all packages. Automatically symlinks inter-dependent modules.\n+- `yarn test`: Runs all tests\n+- `yarn test:packages`: Runs tests for packages\n+- `yarn test:e2e`: Runs end-to-end tests\n+- `yarn build-docs`: Builds docs/ updates doc TOC\n+- `yarn bootstrap-examples`: Run `yarn` with specific examples as workspaces. Automatically symlinks inter-dependent modules. Run `yarn restrap` in the example to reinstall.\n+- `yarn new-example`: Creates a new example from another example. `yarn new-example basic new-example`.\n+- `yarn publish-all-stable`: Does a a stable release\n+- `yarn publish-all-canary`: Does a `razzle@canary` release.\n### Updating your fork\n@@ -68,7 +74,7 @@ git pull origin master\n## Adding examples\n### Use `examples/basic` as template\n-If you'd like to add an example, I suggest you duplicate the `examples/basic` folder and use that as kind of base template. Before you start adding stuff, go ahead and change the name of the package in the your new example's `package.json`. Then go back to the project root and run `yarn bootstrap`. This will make sure that your new example is using your local version of all the `packages`.\n+If you'd like to add an example, I suggest you duplicate the `examples/basic` folder `yarn new-example basic your-example`and use that as kind of base template. Before you start adding stuff, go ahead and change the name of the package in the your new example's `package.json`. Then go back to the project root and run `yarn bootstrap-examples your-example`. This will make sure that your new example is using your local version of all the `packages`.\n### Naming examples\n",
        "date": "28.01.2021 00:15:38",
        "repo": "jaredpalmer/razzle",
        "type": "docs",
        "sim_msg": "docs: remove redundant word to make a statement clearer",
        "sim_diff": "diff --git a/docs/contributing/setting-up-your-local-dev-environment.md b/docs/contributing/setting-up-your-local-dev-environment.md @@ -27,7 +27,7 @@ Yarn is a package manager for your code, similar to [NPM](https://www.npmjs.com/\n- Set up repo and install dependencies: `yarn run bootstrap`\n- Make sure tests are passing for you: `yarn test`\n- Create a topic branch: `git checkout -b topics/new-feature-name`\n-- See [docs setup instructions](/contributing/docs-contributions#docs-site-setup-instructions) below for docs-only changes.\n+- See [docs setup instructions](/contributing/docs-contributions#docs-site-setup-instructions) for docs-only changes.\n- Run `yarn run watch` from the root of the repo to watch for changes to packages' source code and compile these changes on-the-fly as you work.\n- Note that the watch command can be resource intensive. To limit it to the packages you're working on, add a scope flag, like `yarn run watch --scope={gatsby,gatsby-cli}`.\n- To watch just one package, run `yarn run watch --scope=gatsby`.\n"
    },
    {
        "msg": "docs(Modal): fix nested modal closing\nCloses",
        "diff": "diff --git a/docs/lib/examples/ModalNested.js b/docs/lib/examples/ModalNested.js @@ -9,10 +9,12 @@ class ModalExample extends React.Component {\nthis.state = {\nmodal: false,\nnestedModal: false,\n+ closeAll: false\n};\nthis.toggle = this.toggle.bind(this);\nthis.toggleNested = this.toggleNested.bind(this);\n+ this.toggleAll = this.toggleAll.bind(this);\n}\ntoggle() {\n@@ -23,7 +25,15 @@ class ModalExample extends React.Component {\ntoggleNested() {\nthis.setState({\n- nestedModal: !this.state.nestedModal\n+ nestedModal: !this.state.nestedModal,\n+ closeAll: false\n+ });\n+ }\n+\n+ toggleAll() {\n+ this.setState({\n+ nestedModal: !this.state.nestedModal,\n+ closeAll: true\n});\n}\n@@ -37,12 +47,12 @@ class ModalExample extends React.Component {\nLorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n<br />\n<Button color=\"success\" onClick={this.toggleNested}>Show Nested Model</Button>\n- <Modal isOpen={this.state.nestedModal} toggle={this.toggleNested}>\n+ <Modal isOpen={this.state.nestedModal} toggle={this.toggleNested} onClosed={this.state.closeAll && this.toggle}>\n<ModalHeader>Nested Modal title</ModalHeader>\n<ModalBody>Stuff and things</ModalBody>\n<ModalFooter>\n<Button color=\"primary\" onClick={this.toggleNested}>Done</Button>{' '}\n- <Button color=\"secondary\" onClick={this.toggle}>All Done</Button>\n+ <Button color=\"secondary\" onClick={this.toggleAll}>All Done</Button>\n</ModalFooter>\n</Modal>\n</ModalBody>\n",
        "date": "15.11.2017 05:59:56",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "sim_msg": "feat: adding className pass-through to .modal-dialog element",
        "sim_diff": "diff --git a/src/Modal/index.jsx b/src/Modal/index.jsx @@ -174,7 +174,7 @@ class Modal extends React.Component {\nrenderModal() {\nconst { open } = this.state;\n- const { renderHeaderCloseButton } = this.props;\n+ const { renderHeaderCloseButton, dialogClassName } = this.props;\nreturn (\n<div>\n@@ -201,9 +201,12 @@ class Modal extends React.Component {\nonMouseDown={this.close}\n>\n<div\n- className={classNames({\n+ className={classNames(\n+ {\n'modal-dialog': open,\n- })}\n+ },\n+ dialogClassName,\n+ )}\nrole=\"dialog\"\naria-modal\naria-labelledby={this.headerId}\n@@ -280,6 +283,10 @@ Modal.propTypes = {\n}),\n/** specifies whether a close button is rendered in the modal header. It defaults to true. */\nrenderHeaderCloseButton: PropTypes.bool,\n+ /**\n+ * Specifies optional classes to add to the element with the '.modal-dialog' class. See Bootstrap documentation for possible classes. Some options: modal-lg, modal-sm, modal-dialog-centered\n+ */\n+ dialogClassName: PropTypes.string,\n};\nModal.defaultProps = {\n@@ -289,6 +296,7 @@ Modal.defaultProps = {\ncloseText: 'Close',\nvariant: {},\nrenderHeaderCloseButton: true,\n+ dialogClassName: undefined,\n};\n"
    },
    {
        "msg": "feat(404-page): update NotFound container\nfeat(404-page): update NotFound container",
        "diff": "diff --git a/src/common/containers/NotFound/index.jsx b/src/common/containers/NotFound/index.jsx @@ -8,10 +8,10 @@ const NotFound = () => {\nreturn (\n<NotFoundLayout>\n<Header as=\"h2\" icon textAlign=\"center\">\n- <Icon name=\"users\" circular />\n- <Header.Content>404</Header.Content>\n+ <Icon name=\"warning sign\" circular />\n+ <Header.Content>Thank you Mario!</Header.Content>\n<Header.Subheader>\n- <Link to=\"/\">Dashboard lives here</Link>\n+ <Link to=\"/\">But our princess is in another castle.</Link>\n</Header.Subheader>\n</Header>\n</NotFoundLayout>\n",
        "date": "19.02.2018 18:50:28",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "fix(auth): put auth settings to the end",
        "sim_diff": "diff --git a/components/Account/index.js b/components/Account/index.js @@ -73,14 +73,14 @@ const Account = ({ loading, error, me, t, query, hasMemberships, acceptedStatue,\n{t('account/newsletterSubscriptions/title')}\n</H2>\n<NewsletterSubscriptions />\n- <H2 style={{marginTop: 80}} id='anmeldung'>\n- {t('account/authSettings/title')}\n- </H2>\n- <AuthSettings />\n<H2 style={{marginTop: 80}} id='benachrichtigungen'>\n{t('account/notificationOptions/title')}\n</H2>\n<NotificationOptions />\n+ <H2 style={{marginTop: 80}} id='anmeldung'>\n+ {t('account/authSettings/title')}\n+ </H2>\n+ <AuthSettings />\n</Content>\n</MainContainer>\n</Fragment>\n"
    },
    {
        "msg": "feat(editbale): add editable props",
        "diff": "diff --git a/packages/chakra-ui-core/src/CEditable/CEditable.js b/packages/chakra-ui-core/src/CEditable/CEditable.js +/**\n+ * Hey! Welcome to @chakra-ui/vue Editable\n+ *\n+ * EditableText is used for inline renaming of some text.\n+ *\n+ * It appears as normal UI text but transforms into a text\n+ * input field when the user clicks or focuses on it.\n+ *\n+ * The text input inherits all font styling from its parent,\n+ * to make the edit and read view transition seamless.\n+ *\n+ * @see Docs https://vue.chakra-ui.com/editable\n+ * @see Source https://github.com/chakra-ui/chakra-ui-vue/blob/master/packages/chakra-ui-core/src/CEditable/CEditable.js\n+ */\n+\nimport styleProps, { baseProps } from '../config/props'\nimport { isDef, getElement, useId, forwardProps } from '../utils'\n@@ -15,6 +30,14 @@ const sharedEditableProps = {\nmx: '-3px'\n}\n+/**\n+ * CEditable component\n+ *\n+ * The wrapper for `CEditable` components. It provides context and state for the Editable components.\n+ *\n+ * @extends CBox\n+ * @see Docs https://vue.chakra-ui.com/editable\n+ */\nconst CEditable = {\nname: 'CEditable',\nprops: {\n@@ -165,7 +188,10 @@ const CEditable = {\n},\nrender (h) {\nreturn h(CBox, {\n- props: forwardProps(this.$props)\n+ props: forwardProps(this.$props),\n+ attrs: {\n+ 'data-chakra-component': 'CEditable'\n+ }\n}, [\nthis.$scopedSlots.default({\nisEditing: this.isEditing,\n@@ -177,6 +203,14 @@ const CEditable = {\n}\n}\n+/**\n+ * CEditablePreview component\n+ *\n+ * The read-only view of the component.\n+ *\n+ * @extends CPseudoBox\n+ * @see Docs https://vue.chakra-ui.com/editable\n+ */\nconst CEditablePreview = {\nname: 'CEditablePreview',\ninject: ['$EditableContext'],\n@@ -218,7 +252,8 @@ const CEditablePreview = {\n},\nattrs: {\n'aria-disabled': isDisabled,\n- tabIndex: this.tabIndex\n+ tabIndex: this.tabIndex,\n+ 'data-chakra-component': 'CEditablePreview'\n},\nnativeOn: {\nfocus: onRequestEdit\n@@ -227,6 +262,14 @@ const CEditablePreview = {\n}\n}\n+/**\n+ * CEditableInput component\n+ *\n+ * The edit view of the component. It shows when you click or focus on the text.\n+ *\n+ * @extends CPseudoBox\n+ * @see Docs https://vue.chakra-ui.com/editable\n+ */\nconst CEditableInput = {\nname: 'CEditableInput',\ninject: ['$EditableContext'],\n@@ -285,7 +328,8 @@ const CEditableInput = {\ndisabled: isDisabled,\n'aria-disabled': isDisabled,\nvalue,\n- placeholder\n+ placeholder,\n+ 'data-chakra-component': 'CEditableInput'\n}\n}, this.$slots.default)\n}\n",
        "date": "17.04.2020 01:58:50",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "feat",
        "sim_msg": "feat: Code improvement\nAdd keyUp handler function\nImplement keyUp handler to trigger emoji picker\nModify timeout function\nRemove unused functions and variables",
        "sim_diff": "diff --git a/packages/app/src/components/PageEditor/CodeMirrorEditor.jsx b/packages/app/src/components/PageEditor/CodeMirrorEditor.jsx @@ -116,8 +116,6 @@ export default class CodeMirrorEditor extends AbstractEditor {\nadditionalClassSet: new Set(),\nisEmojiPickerShown: false,\nemojiSearchText: null,\n- isInputtingEmoji: false,\n- searchEmojiTimeout: 0,\n};\nthis.gridEditModal = React.createRef();\n@@ -142,6 +140,7 @@ export default class CodeMirrorEditor extends AbstractEditor {\nthis.pasteHandler = this.pasteHandler.bind(this);\nthis.cursorHandler = this.cursorHandler.bind(this);\nthis.changeHandler = this.changeHandler.bind(this);\n+ this.keyUpHandler = this.keyUpHandler.bind(this);\nthis.updateCheatsheetStates = this.updateCheatsheetStates.bind(this);\n@@ -570,15 +569,12 @@ export default class CodeMirrorEditor extends AbstractEditor {\nthis.updateCheatsheetStates(null, value);\n- /**\n- * Prevent emoji picker to show on delete emoji colons\n- */\n- editor.on('keydown', (editor, ev) => {\n- if (ev.key !== 'Backspace') {\n- this.emojiPickerHandler();\n}\n- });\n+ keyUpHandler(editor, event) {\n+ if (event.key !== 'Backspace') {\n+ this.emojiPickerHandler();\n+ }\n}\n/**\n@@ -611,19 +607,13 @@ export default class CodeMirrorEditor extends AbstractEditor {\nif (!emoji) {\nthis.setState({ isEmojiPickerShown: false });\nthis.setState({ emojiSearchText: null });\n- this.setState({ isInputtingEmoji: false });\n}\nelse {\n- this.setState({ isInputtingEmoji: true });\n- if (this.state.searchEmojiTimeout) {\n- clearTimeout(this.state.searchEmojiTimeout);\n- }\n+ this.setState({ emojiSearchText: emoji });\n// Show emoji picker after user stop typing\n- const timeout = setTimeout(() => {\n+ setTimeout(() => {\nthis.setState({ isEmojiPickerShown: true });\n- this.setState({ emojiSearchText: emoji });\n}, 700);\n- this.setState({ searchEmojiTimeout: timeout });\n}\n}\n@@ -1036,6 +1026,7 @@ export default class CodeMirrorEditor extends AbstractEditor {\nthis.props.onDragEnter(event);\n}\n}}\n+ onKeyUp={this.keyUpHandler}\n/>\n{ this.renderLoadingKeymapOverlay() }\n"
    },
    {
        "msg": "feat(menu): option event handling",
        "diff": "diff --git a/packages/kiwi-core/src/Menu/MenuOption.js b/packages/kiwi-core/src/Menu/MenuOption.js @@ -62,7 +62,7 @@ const MenuItemOption = {\nif (this.isDisabled) return\nif (['Enter', ' '].includes(event.key)) {\nevent.preventDefault()\n- this.handleSelect()\n+ this.handleSelect(event)\n}\nthis.$emit('keydown', event)\n@@ -239,6 +239,12 @@ const MenuOptionGroup = {\nnativeOn: {\nclick: (event) => {\nthis.handleChange(cloned.componentOptions.propsData['value'])\n+ },\n+ keydown: (event) => {\n+ if (['Enter', ' '].includes(event.key)) {\n+ event.preventDefault()\n+ this.handleChange(cloned.componentOptions.propsData['value'])\n+ }\n}\n}\n}, cloned.componentOptions.children)\n@@ -257,6 +263,12 @@ const MenuOptionGroup = {\nnativeOn: {\nclick: (event) => {\nthis.handleChange(cloned.componentOptions.propsData['value'])\n+ },\n+ keydown: (event) => {\n+ if (['Enter', ' '].includes(event.key)) {\n+ event.preventDefault()\n+ this.handleChange(cloned.componentOptions.propsData['value'])\n+ }\n}\n}\n}, cloned.componentOptions.children)\n",
        "date": "30.01.2020 20:14:04",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "feat",
        "sim_msg": "feat: autofocus the first value",
        "sim_diff": "diff --git a/src/options/views/edit/values.vue b/src/options/views/edit/values.vue @@ -129,9 +129,12 @@ export default {\nwatch: {\nactive(val) {\nif (val) {\n- storage.value.getOne(this.script.props.id).then(this.setData);\n+ storage.value.getOne(this.script.props.id).then(data => {\n+ // Focusing explicitly when the values UI becomes active again\n+ if (this.page) this.autofocus();\n+ this.setData(data);\n+ });\nscriptStorageKey = storage.value.prefix + this.script?.props.id;\n- (focusedElement || this.$refs.container.querySelector('button')).focus();\nthis.disposeList = [\nkeyboardService.register('pageup', () => flipPage(this, -1)),\nkeyboardService.register('pagedown', () => flipPage(this, 1)),\n@@ -154,8 +157,18 @@ export default {\nfocusedElement?.focus();\n}\n},\n+ page() {\n+ focusedElement = null;\n+ this.autofocus();\n+ },\n},\nmethods: {\n+ autofocus() {\n+ this.$nextTick(() => {\n+ (focusedElement || this.$refs.container.querySelector(this.keys?.length ? 'a' : 'button'))\n+ .focus();\n+ });\n+ },\ngetLength(key) {\nconst len = this.values[key].length - 1;\nreturn len < 10_000 ? len : formatByteLength(len);\n"
    },
    {
        "msg": "feat(containers): add data fetching in Links\nfeat(containers): add data fetching in Links",
        "diff": "diff --git a/src/common/containers/Links/index.jsx b/src/common/containers/Links/index.jsx @@ -20,15 +20,19 @@ type Props = {\nclass Links extends Component {\nprops: Props\n- componentDidMount () {\n- const {isLinksLoaded} = this.props\n+ async asyncBootstrap () {\n+ const {isLinksLoaded, getLinks} = this.props\nif (!isLinksLoaded) {\n- this.getLinks()\n+ await getLinks()\n}\n+ return true\n}\n- getLinks () {\n- this.props.getLinks()\n+ componentDidMount () {\n+ const {isLinksLoaded, getLinks} = this.props\n+ if (!isLinksLoaded) {\n+ getLinks()\n+ }\n}\nrender () {\n@@ -57,8 +61,8 @@ function mapStateToProps (state: GlobalState) {\n}\nconst mapDispatchToProps = dispatch => ({\n- getLinks () {\n- dispatch(GET_LINKS())\n+ async getLinks () {\n+ return dispatch(GET_LINKS())\n}\n})\n",
        "date": "03.12.2017 07:11:52",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "feat(Link): forwardRef",
        "sim_diff": "diff --git a/components/core/Link.js b/components/core/Link.js @@ -2,7 +2,7 @@ import * as React from \"react\";\nimport * as Strings from \"~/common/strings\";\nimport * as Logging from \"~/common/logging\";\n-export class Link extends React.Component {\n+class LinkPrimitive extends React.Component {\nstate = {\nhref: this.props.href\n? this.props.href\n@@ -63,6 +63,7 @@ export class Link extends React.Component {\n};\nrender() {\n+ const { style, innerRef, css, target, href, title, children, ...props } = this.props;\nreturn (\n<span onClick={this._handleClick}>\n<a\n@@ -70,17 +71,20 @@ export class Link extends React.Component {\ntextDecoration: \"none\",\ncolor: \"inherit\",\ncursor: \"pointer\",\n- ...this.props.style,\n+ ...style,\n}}\n- css={this.props.css}\n- target={this.props.target}\n- href={this.state.href}\n- aria-label={this.props[\"aria-label\"]}\n- title={this.props.title}\n+ ref={innerRef}\n+ css={css}\n+ target={target}\n+ href={href}\n+ title={title}\n+ {...props}\n>\n- {this.props.children}\n+ {children}\n</a>\n</span>\n);\n}\n}\n+\n+export const Link = React.forwardRef((props, ref) => <LinkPrimitive {...props} innerRef={ref} />);\n"
    },
    {
        "msg": "feat(razzle): allow toggling usage of null loader for node target",
        "diff": "diff --git a/packages/razzle/config/createConfigAsync.js b/packages/razzle/config/createConfigAsync.js @@ -322,6 +322,8 @@ module.exports = (\n],\n};\n+ webpackOptions.nullNodeCss = false;\n+\nfor (const [plugin, pluginOptions] of plugins) {\n// Check if .modifyWebpackConfig is a function.\n// If it is, call it on the configs we created.\n@@ -532,7 +534,9 @@ module.exports = (\n? // Style-loader does not work in Node.js without some crazy\n// magic. Luckily we just need css-loader.\n[\n- {\n+ webpackOptions.nullNodeCss ? {\n+ loader: require.resolve('null-loader')\n+ } : {\nloader: require.resolve('css-loader'),\noptions: {\nimportLoaders: 1,\n",
        "date": "13.02.2021 00:22:55",
        "repo": "jaredpalmer/razzle",
        "type": "feat",
        "sim_msg": "docs: chainWebpack & merge example of modifying loader options",
        "sim_diff": "diff --git a/docs/webpack.md b/docs/webpack.md @@ -59,6 +59,25 @@ module.exports = {\n}\n```\n+#### Modifying Loader Options\n+\n+``` js\n+// vue.config.js\n+module.exports = {\n+ chainWebpack: config => {\n+ config.module\n+ .rule('scss')\n+ .use('sass-loader')\n+ .tap(options =>\n+ merge(options, {\n+ includePaths: [path.resolve(__dirname, 'node_modules')],\n+ })\n+ )\n+ }\n+}\n+```\n+\n+\n#### Modifying Plugin Options\n``` js\n"
    },
    {
        "msg": "feat(Sidebar): use SidebarLogo based on Logo component\nfeat(Sidebar): use SidebarLogo based on Logo component",
        "diff": "diff --git a/src/common/components/parts/Sidebar/index.jsx b/src/common/components/parts/Sidebar/index.jsx import React, {Component} from 'react'\nimport {Menu, Icon} from 'semantic-ui-react'\nimport {NavLink} from 'react-router-dom'\n+import Logo from 'components/elements/Logo'\nimport {\nStyledSidebar,\nSidebarLogo,\n@@ -10,9 +11,7 @@ import {\nSidebarLogoutItem\n} from './style'\nimport {Spacer} from 'styles/base'\n-\nimport type {RouteItem} from 'types'\n-// require('./index.scss')\ntype Props = {\nopen: boolean,\n@@ -71,12 +70,11 @@ export default class SidebarComponent extends Component {\n// ? require('images/logo.png')\n// : require('images/logo.png').preSrc\n//\n- const logoImg = require('images/logo.png')\nreturn (\n<StyledSidebar {...sidebarProps}>\n<SidebarLogoContainer href=\"https://github.com/Metnew/react-semantic.ui-starter\">\n- <SidebarLogo src={logoImg} alt=\"logo\" shape=\"circular\" centered />\n+ <SidebarLogo alt=\"logo\" shape=\"circular\" centered />\n</SidebarLogoContainer>\n{routes}\n<Spacer />\n",
        "date": "10.09.2017 18:49:29",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "test(lint): remove unused import",
        "sim_diff": "diff --git a/lib/common/components/Sidebar.js b/lib/common/components/Sidebar.js @@ -3,7 +3,6 @@ import React, {PropTypes} from 'react'\nimport {Navbar, Checkbox} from 'react-bootstrap'\nimport {Link} from 'react-router'\n-import auth0 from '../user/Auth0Manager'\nimport SidebarNavItem from './SidebarNavItem'\nimport SidebarPopover from './SidebarPopover'\nimport JobMonitor from './JobMonitor'\n"
    },
    {
        "msg": "feat: query blocks with a height greater than 335",
        "diff": "diff --git a/frontend/leaderboard/src/Postgres.re b/frontend/leaderboard/src/Postgres.re @@ -15,7 +15,9 @@ LEFT JOIN user_commands AS uc ON uc.id = buc.user_command_id\nLEFT JOIN public_keys AS pk2 ON ic.receiver_id = pk2.id\nLEFT JOIN public_keys AS pk3 ON uc.fee_payer_id = pk3.id\nLEFT JOIN public_keys AS pk4 ON uc.source_id = pk4.id\n-LEFT JOIN public_keys AS pk5 ON uc.receiver_id = pk5.id\";\n+LEFT JOIN public_keys AS pk5 ON uc.receiver_id = pk5.id\n+\n+WHERE height >= 335\";\nlet createPool = pgConn => {\nmakePool({connectionString: pgConn, connectionTimeoutMillis: 5000});\n",
        "date": "18.11.2020 14:35:41",
        "repo": "minaprotocol/mina",
        "type": "feat",
        "sim_msg": "fix: include WALLET_BATCH_IMPORT_URL in",
        "sim_diff": "diff --git a/packages/frontend/src/redux/actions/account.js b/packages/frontend/src/redux/actions/account.js @@ -122,7 +122,7 @@ export const handleRefreshUrl = (prevRouter) => (dispatch, getState) => {\nconst { pathname, search } = prevRouter?.location || getLocation(getState());\nconst currentPage = pathname.split('/')[pathname[1] === '/' ? 2 : 1];\n- if ([...WALLET_CREATE_NEW_ACCOUNT_FLOW_URLS, WALLET_LOGIN_URL, WALLET_SIGN_URL, WALLET_LINKDROP_URL].includes(currentPage)) {\n+ if ([...WALLET_CREATE_NEW_ACCOUNT_FLOW_URLS, WALLET_LOGIN_URL, WALLET_SIGN_URL, WALLET_LINKDROP_URL, WALLET_BATCH_IMPORT_URL].includes(currentPage)) {\nconst parsedUrl = {\n...parse(search),\nreferrer: document.referrer ? new URL(document.referrer).hostname : undefined,\n"
    },
    {
        "msg": "feat(Form): add submit to component\nThis makes it easier to use submit as if the component was a raw form (via 'standard' )",
        "diff": "diff --git a/src/Form.js b/src/Form.js -import React from 'react';\n+import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules } from './utils';\n@@ -15,8 +15,27 @@ const propTypes = {\nconst defaultProps = {\ntag: 'form',\n};\n+class Form extends Component {\n+ constructor(props) {\n+ super(props);\n+ this.getRef = this.getRef.bind(this);\n+ this.submit = this.submit.bind(this);\n+ }\n-const Form = (props) => {\n+ getRef(ref) {\n+ if (this.props.innerRef) {\n+ this.props.innerRef(ref);\n+ }\n+ this.ref = ref;\n+ }\n+\n+ submit() {\n+ if (this.ref) {\n+ this.ref.submit();\n+ }\n+ }\n+\n+ render() {\nconst {\nclassName,\ncssModule,\n@@ -24,7 +43,7 @@ const Form = (props) => {\ntag: Tag,\ninnerRef,\n...attributes\n- } = props;\n+ } = this.props;\nconst classes = mapToCssModules(classNames(\nclassName,\n@@ -34,7 +53,8 @@ const Form = (props) => {\nreturn (\n<Tag {...attributes} ref={innerRef} className={classes} />\n);\n-};\n+ }\n+}\nForm.propTypes = propTypes;\nForm.defaultProps = defaultProps;\n",
        "date": "07.05.2018 16:25:02",
        "repo": "reactstrap/reactstrap",
        "type": "feat",
        "sim_msg": "refactor: removes uneeded async await from submitControlledForm fn",
        "sim_diff": "diff --git a/src/__experimental__/components/form/form.component.js b/src/__experimental__/components/form/form.component.js @@ -239,11 +239,11 @@ class FormWithoutValidations extends React.Component {\nthis.submitControlledForm();\n}\n- async submitControlledForm() {\n+ submitControlledForm() {\nconst { csrFValue } = this.csrfValues;\nService.configure({ csrfToken: csrFValue });\nthis._service.setURL(this.props.formAction);\n- await this._service.post(\n+ this._service.post(\nJSON.stringify(this.state.formInputs),\n{ onSuccess: this.clearFormData }\n);\n"
    },
    {
        "msg": "feat(reducers/links): add count property\nfeat(reducers/links): add count property",
        "diff": "diff --git a/src/common/reducers/links/index.js b/src/common/reducers/links/index.js @@ -23,7 +23,8 @@ export const initialState: State = {\nentities: [],\nerrors: {},\nisLoading: false,\n- isLoaded: false\n+ isLoaded: false,\n+ count: 0\n}\nexport function links (state: State = initialState, action: Action): State {\n@@ -38,11 +39,13 @@ export function links (state: State = initialState, action: Action): State {\n}\ncase GET_LINKS_SUCCESS: {\nconst entities = action.payload\n+ const count = entities.length\nreturn {\n...state,\nisLoaded: true,\nisLoading: false,\n- entities\n+ entities,\n+ count\n}\n}\ncase GET_LINKS_FAIL: {\n@@ -51,7 +54,9 @@ export function links (state: State = initialState, action: Action): State {\n...state,\nerrors,\nisLoaded: true,\n- isLoading: false\n+ isLoading: false,\n+ entities: [],\n+ count: 0\n}\n}\ndefault:\n",
        "date": "03.11.2017 16:32:11",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "chore(actions-core): Changed Link Action function declaration.",
        "sim_diff": "diff --git a/packages/plugins/actions/actions-core/src/actions/Link.js b/packages/plugins/actions/actions-core/src/actions/Link.js import { type } from '@lowdefy/helpers';\n-const Link = ({ methods: { link }, params }) => {\n+function Link({ methods: { link }, params }) {\nconst linkParams = type.isString(params) ? { pageId: params } : params;\ntry {\nlink(linkParams);\n@@ -24,6 +24,6 @@ const Link = ({ methods: { link }, params }) => {\nconsole.log(error);\nthrow new Error(`Invalid Link, check action params. Received \"${JSON.stringify(params)}\".`);\n}\n-};\n+}\nexport default Link;\n"
    },
    {
        "msg": "feat(auth): add idToken to user's payload\nfeat",
        "diff": "diff --git a/lib/plugins/ssrAuth.js b/lib/plugins/ssrAuth.js @@ -55,7 +55,8 @@ export default async ({ req, res }) => {\n...res.locals,\nuser: {\n...authUser,\n- allClaims: decodedToken\n+ allClaims: decodedToken,\n+ idToken,\n}\n}\n}\n",
        "date": "11.05.2020 20:52:09",
        "repo": "nuxt-community/firebase-module",
        "type": "feat",
        "sim_msg": "fix(app): SSR mode with publicPath not working correctly",
        "sim_diff": "diff --git a/app/templates/entry/server-entry.js b/app/templates/entry/server-entry.js @@ -116,7 +116,7 @@ export default ssrContext => {\napp.use(router)\n<% if (store) { %>app.use(store, storeKey)<% } %>\n- const url = ssrContext.req.url<% if (build.publicPath !== '/') { %>.replace(publicPath, '')<% } %>\n+ const url = ssrContext.req.url<% if (build.publicPath !== '/') { %>.replace(publicPath, '/')<% } %>\nconst { fullPath } = router.resolve(url)\nif (fullPath !== url) {\n"
    },
    {
        "msg": "feat(routing): make all containers lazy, simplify code\nfeat(routing): make all containers lazy, simplify code",
        "diff": "diff --git a/src/common/routing/index.jsx b/src/common/routing/index.jsx */\nimport React from 'react'\nimport {Route} from 'react-router-dom'\n-import Dashboard from 'containers/Dashboard'\n-import Login from 'containers/Login'\n-import Users from 'containers/Users'\n-\nimport RouteAuth from 'components/addons/RouteAuth'\nimport {createBrowserHistory, createMemoryHistory} from 'history'\nimport type {RouteItem} from 'types'\n+const getHistory = () => {\n+ if (process.env.BROWSER) {\n+ return createMemoryHistory()\n+ }\n+ return createBrowserHistory()\n+}\n+\nexport const history = getHistory()\n-const loadLazyComponent = (url: string) => {\n- return async (cb: Function) => {\n+const loadLazyComponent = (url: string) => async () => {\n// NOTE: there isn't any duplication here\n// Read Webpack docs about code-splitting for more info.\nif (process.env.BROWSER) {\n@@ -24,26 +26,27 @@ const loadLazyComponent = (url: string) => {\nconst loadComponent = await import(/* webpackMode: \"eager\", webpackChunkName: \"lazy-containers\" */ `containers/${url}/index.jsx`)\nreturn loadComponent\n}\n-}\nexport const routes: Array<RouteItem> = [\n{\npath: '/',\nexact: true,\n+ lazy: true,\nicon: 'newspaper',\nname: 'Dashboard',\nsidebarVisible: true,\ntag: RouteAuth,\n- component: Dashboard\n+ component: loadLazyComponent('Dashboard')\n},\n{\npath: '/users',\nname: 'Users',\nexact: true,\n+ lazy: true,\nicon: 'users',\nsidebarVisible: true,\ntag: RouteAuth,\n- component: Users\n+ component: loadLazyComponent('Users')\n},\n{\nexternal: true,\n@@ -55,8 +58,9 @@ export const routes: Array<RouteItem> = [\n{\npath: '/auth',\nname: 'Auth',\n+ lazy: true,\ntag: Route,\n- component: Login\n+ component: loadLazyComponent('Login')\n},\n{\npath: '/users/:id',\n@@ -67,11 +71,3 @@ export const routes: Array<RouteItem> = [\ncomponent: loadLazyComponent('UserItem')\n}\n]\n-\n-function getHistory () {\n- const basename = ''\n- if (process.env.BROWSER !== true) {\n- return createMemoryHistory()\n- }\n- return createBrowserHistory({basename})\n-}\n",
        "date": "10.09.2017 14:34:54",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "refactor(flow): add flow type to wrapComponentInAuthStrategy",
        "sim_diff": "diff --git a/lib/common/containers/App.js b/lib/common/containers/App.js import bugsnag from 'bugsnag-js/dist/bugsnag.min'\nimport createPlugin from 'bugsnag-react'\nimport omit from 'lodash/omit'\n-import React, { Component } from 'react'\n+import * as React from 'react'\nimport {connect} from 'react-redux'\nimport { Router, Route, browserHistory } from 'react-router'\nimport { toast } from 'react-toastify'\n@@ -36,11 +36,11 @@ type AuthWrapperProps = {\n}\nfunction wrapComponentInAuthStrategy (\n- ComponentToWrap,\n- requireAuth,\n- requireAdmin\n-) {\n- class AuthStrategyWrapper extends Component<AuthWrapperProps> {\n+ ComponentToWrap: React.Component<*>,\n+ requireAuth?: boolean,\n+ requireAdmin?: boolean\n+): React.Component<AuthWrapperProps> {\n+ class AuthStrategyWrapper extends React.Component<AuthWrapperProps> {\ncomponentWillMount () {\nconst {checkLogin, fetchAppInfo, user} = this.props\nconst userIsLoggedIn: boolean = !!user.token\n@@ -108,6 +108,7 @@ function wrapComponentInAuthStrategy (\n} else {\n// User is authenticated to view page or it is a public route.\nreturn (\n+ // $FlowFixMe\n<ComponentToWrap\n// Pass props to wrapped component except for auth-specific props\n{...omit(this.props, ['checkLogin', 'children', 'user'])} />\n@@ -146,7 +147,7 @@ type AppProps = {\n}\n}\n-export default class App extends Component<AppProps> {\n+export default class App extends React.Component<AppProps> {\nrender () {\nconst {history} = this.props\nconst routes = [\n"
    },
    {
        "msg": "feat(types): add type exports for color mode & theme providers",
        "diff": "diff --git a/packages/chakra-ui-core/types/index.d.ts b/packages/chakra-ui-core/types/index.d.ts @@ -3,18 +3,36 @@ import { Theme } from \"../../chakra-ui-theme/types\"\nimport useToast from \"../src/CToast\"\nimport { ToastFactory } from '../src/CToast/CToast'\n+type ChakraIcons = { [name: string]: Icon };\n+\ndeclare module 'vue/types/vue' {\nexport interface Vue {\n$toast: ToastFactory\n$chakra: {\ntheme: Theme\n- icons: { [name: string]: Icon }\n+ icons: ChakraIcons\n+ }\n+ }\n+}\n+\n+declare module '../src/CColorModeProvider' {\n+ export interface Provides {\n+ $chakraColorMode: () => 'light' | 'dark'\n+ $toggleColorMode: () => void\n+ }\n}\n- chakraColorMode: string\n- chakraToggleColorMode: string\n+\n+declare module '../src/CThemeProvider' {\n+ export interface Provides {\n+ $chakraTheme: Theme\n+ $chakraIcons: ChakraIcons\n+ $chakraColorMode: () => 'light'\n}\n}\n+export { Provides as CColorModeProvides } from '../src/CColorModeProvider'\n+export { Provides as CThemeProvides } from '../src/CThemeProvider'\n+\nexport const useToast: typeof useToast\nexport const defaultTheme: Theme\nexport * from './component'\n",
        "date": "04.10.2021 00:12:00",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "feat",
        "sim_msg": "refactor(cdr-toast): remove useSlots() and add component name",
        "sim_diff": "diff --git a/src/components/toast/CdrToast.vue b/src/components/toast/CdrToast.vue <script>\nimport {\n- useCssModule, defineComponent, computed, useSlots, ref, watch, onUpdated,\n+ useCssModule, defineComponent, computed, ref, watch, onUpdated,\n} from 'vue';\nimport propValidator from '../../utils/propValidator.js';\nimport IconXSm from '../icon/comps/x-sm.vue';\nimport CdrButton from '../button/CdrButton.vue';\nexport default defineComponent({\n+ name: 'CdrToast',\ncomponents: {\nIconXSm,\nCdrButton\n@@ -34,10 +35,9 @@ export default defineComponent({\n},\n},\nsetup(props, ctx) {\n- const slots = useSlots();\nconst baseClass = 'cdr-toast';\nconst style = useCssModule();\n- const hasIconLeft = slots['icon-left'];\n+ const hasIconLeft = ctx.slots['icon-left'];\nconst opened = ref(null);\nconst toastEl = ref(null);\nlet timeout;\n@@ -95,7 +95,6 @@ export default defineComponent({\n});\nreturn {\n- slots,\nbaseClass,\nstyle,\nhasIconLeft,\n"
    },
    {
        "msg": "feat: alias compat for preact X",
        "diff": "diff --git a/packages/cli/lib/lib/webpack/webpack-base-config.js b/packages/cli/lib/lib/webpack/webpack-base-config.js @@ -122,7 +122,8 @@ module.exports = function(env) {\n'.css',\n'.wasm',\n],\n- alias: {\n+ alias: Object.assign(\n+ {\nstyle: source('style'),\n'preact-cli-entrypoint': source('index'),\n// preact-compat aliases for supporting React dependencies:\n@@ -133,6 +134,8 @@ module.exports = function(env) {\n'@preact/async-loader/async'\n),\n},\n+ compat !== 'preact-compat' ? { 'preact-compat': compat } : {}\n+ ),\n},\nresolveLoader: {\n",
        "date": "29.09.2019 15:06:27",
        "repo": "preactjs/preact-cli",
        "type": "feat",
        "sim_msg": "feat(webpack): add source map to transpile",
        "sim_diff": "diff --git a/scripts/webpack/webpack.transpile.babel.js b/scripts/webpack/webpack.transpile.babel.js @@ -10,6 +10,7 @@ const libraryName = pkg.name;\nmodule.exports = (env) => {\nconsole.info('webpacking for transpile');\nreturn {\n+ devtool: 'source-map',\nentry: './src/index.js',\noutput: {\npath: path.resolve(process.cwd(), 'es'),\n@@ -155,8 +156,6 @@ module.exports = (env) => {\n},\nresolve: {\nalias: {\n- react: path.resolve(__dirname, './node_modules/react'),\n- 'react-dom': path.resolve(__dirname, './node_modules/react-dom'),\nassets: path.resolve(__dirname, 'assets'),\nnode_modules: path.resolve(__dirname, '..', '..', 'node_modules')\n},\n"
    },
    {
        "msg": "feat(razzle): add config debug flags",
        "diff": "diff --git a/packages/razzle/config/createConfigAsync.js b/packages/razzle/config/createConfigAsync.js @@ -4,6 +4,7 @@ const fs = require('fs-extra');\nconst path = require('path');\nconst webpack = require('webpack');\nconst crypto = require('crypto');\n+const util = require('util');\nconst TerserPlugin = require('terser-webpack-plugin');\nconst HtmlWebpackPlugin = require('html-webpack-plugin');\nconst StartServerPlugin = require('razzle-start-server-webpack-plugin');\n@@ -337,6 +338,11 @@ module.exports = (\n});\n}\n+ if (razzleOptions.debug.options) {\n+ console.log(`Printing webpack options for ${target} target`);\n+ console.log(util.inspect(webpackOptions, {depth: null}));\n+ }\n+\nconst debugNodeExternals = razzleOptions.debug.nodeExternals;\nconst nodeExternalsFunc = (context, request, callback) => {\n@@ -950,7 +956,10 @@ module.exports = (\npaths,\n});\n}\n-\n+ if (razzleOptions.debug.config) {\n+ console.log(`Printing webpack config for ${target} target`);\n+ console.log(util.inspect(webpackConfig, {depth: null}));\n+ }\nresolve(config);\n});\n};\n",
        "date": "01.02.2021 16:41:49",
        "repo": "jaredpalmer/razzle",
        "type": "feat",
        "sim_msg": "fix: check for http in baseUrl\n* fix: check for http in baseUrl\n`path.posix.join` can't be used with URLs.\n* Update plugin.js",
        "sim_diff": "diff --git a/plugins/plugin-webpack/plugin.js b/plugins/plugin-webpack/plugin.js @@ -2,6 +2,7 @@ const crypto = require(\"crypto\");\nconst fs = require(\"fs\");\nconst glob = require(\"glob\");\nconst path = require(\"path\");\n+const url = require(\"url\");\nconst webpack = require(\"webpack\");\nconst MiniCssExtractPlugin = require(\"mini-css-extract-plugin\");\nconst TerserJSPlugin = require(\"terser-webpack-plugin\");\n@@ -67,7 +68,9 @@ function emitHTMLFiles({ doms, jsEntries, stats, baseUrl, buildDirectory }) {\nfor (const jsFile of jsFiles) {\nconst scriptEl = dom.window.document.createElement(\"script\");\n- scriptEl.src = path.posix.join(baseUrl, jsFile);\n+ scriptEl.src = url.parse(baseUrl).protocol\n+ ? url.resolve(baseUrl, jsFile)\n+ : path.posix.join(baseUrl, jsFile);\n// insert _before_ so the relative order of these scripts is maintained\ninsertBefore(scriptEl, originalScriptEl);\n}\n"
    },
    {
        "msg": "feat(isJWT): signature is not required",
        "diff": "diff --git a/src/lib/isJWT.js b/src/lib/isJWT.js import assertString from './util/assertString';\n-const jwt = /^[a-zA-Z0-9\\-_]+\\.[a-zA-Z0-9\\-_]+\\.[a-zA-Z0-9\\-_]+$/;\n+const jwt = /^([A-Za-z0-9\\-_~+\\/]+[=]{0,2})\\.([A-Za-z0-9\\-_~+\\/]+[=]{0,2})(?:\\.([A-Za-z0-9\\-_~+\\/]+[=]{0,2}))?$/;\nexport default function isJWT(str) {\nassertString(str);\n",
        "date": "10.10.2018 22:04:39",
        "repo": "validatorjs/validator.js",
        "type": "feat",
        "sim_msg": "fix: remove whitespace",
        "sim_diff": "diff --git a/src/lib/util.js b/src/lib/util.js @@ -1594,7 +1594,7 @@ const util = {\n*/\nhtmlRemoveWhiteSpace: function (html) {\nif (!html) return '';\n- return html.trim().replace(/<\\/?(?!strong|span|font|b|var|i|em|u|ins|s|strike|del|sub|sup|mark|a|label|code|summary)[^>^<]+>\\s+(?=<)/ig, function (m) { return m.trim(); });\n+ return html.trim().replace(/<\\/?(?!strong|span|font|b|var|i|em|u|ins|s|strike|del|sub|sup|mark|a|label|code|summary)[^>^<]+>\\s+(?=<)/ig, function (m) { return m.replace(/\\n/g, '').replace(/\\s+/, ' '); });\n},\n/**\n"
    },
    {
        "msg": "feat(server/ssr): move to react 16\nfeat(server/ssr): move to react 16",
        "diff": "diff --git a/src/server/ssr/index.js b/src/server/ssr/index.js */\nimport React from 'react'\nimport chalk from 'chalk'\n-// import _ from 'lodash'\n-import {renderToNodeStream, renderToStaticNodeStream} from 'react-dom/server'\n+import {renderToNodeStream} from 'react-dom/server'\nimport {ServerStyleSheet, StyleSheetManager} from 'styled-components'\nimport {configureRootComponent, configureApp} from 'common/app'\n-// import {addLocaleData} from 'react-intl'\nimport HtmlComponent from './HtmlComponent'\n// $FlowFixMe\nimport assets from 'webpack-assets'\n@@ -58,9 +56,11 @@ export default async (req: express$Request, res: express$Response) => {\n'Content-Type': 'text/html'\n})\nres.write(beforeAppTag)\n+ res.write(`<div id=\"app\">`)\nstream.pipe(res, {end: false})\nstream.on('end', () => {\n+ res.write('</div>')\nres.write(afterAppTag)\nres.end()\n})\n",
        "date": "30.09.2017 14:22:54",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "fix(@quasar/app): SSR bundle -> do not externalize anything from within build > transpileDependencies",
        "sim_diff": "diff --git a/app/lib/webpack/ssr/server.js b/app/lib/webpack/ssr/server.js @@ -32,7 +32,9 @@ module.exports = function (chain, cfg) {\nchain.externals(nodeExternals({\n// do not externalize CSS files in case we need to import it from a dep\n- whitelist: /(\\.css$|\\.vue$|\\?vue&type=style|^quasar[\\\\/]lang[\\\\/]|^quasar[\\\\/]icon-set[\\\\/]|^quasar[\\\\/]src[\\\\/])/\n+ whitelist: [\n+ /(\\.css$|\\.vue$|\\?vue&type=style|^quasar[\\\\/]lang[\\\\/]|^quasar[\\\\/]icon-set[\\\\/]|^quasar[\\\\/]src[\\\\/])/\n+ ].concat(cfg.build.transpileDependencies)\n}))\nchain.plugin('vue-ssr-client')\n"
    },
    {
        "msg": "feat: more comprehensive gitignore",
        "diff": "diff --git a/.gitignore b/.gitignore *.swp\n*.swo\n-node_modules/\n-build/\n-.DS_Store/\n-/coverage\n-coverage.json\n+\n+# Logs\n+logs\n+*.log\n+\n+# Runtime data\n+pids\n+*.pid\n+*.seed\nallFiredEvents\nscTopics\n+\n+# Coverage directory used by tools like istanbul\n+coverage\n+coverage.json\n+\n+# node-waf configuration\n+.lock-wscript\n+\n+# Dependency directory\n+node_modules\n+\n+# Debug log from npm\n+npm-debug.log\n+\n+# local env variables\n+.env\n+\n+# truffle build directory\n+build/\n+\n+# lol macs\n+.DS_Store/\n",
        "date": "24.11.2017 13:03:52",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "feat",
        "sim_msg": "chore(git): update `.gitignore` and ignore `.nyc_output` directory",
        "sim_diff": "diff --git a/.gitignore b/.gitignore -node_modules\n+# Logs\n+logs\n+*.log\n+npm-debug.log*\n+\n+# Runtime data\n+pids\n+*.pid\n+*.seed\n+*.pid.lock\n+\n+# Directory for instrumented libs generated by jscoverage/JSCover\n+lib-cov\n+\n+# Coverage directory used by tools like istanbul\ncoverage\n+\n+# nyc test coverage\n+.nyc_output\n+\n+# Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)\n+.grunt\n+\n+# node-waf configuration\n+.lock-wscript\n+\n+# Compiled binary addons (http://nodejs.org/api/addons.html)\n+build/Release\n+\n+# Dependency directories\n+node_modules\n+jspm_packages\n+\n+# Optional npm cache directory\n+.npm\n+\n+# Optional eslint cache\n+.eslintcache\n+\n+# Optional REPL history\n+.node_repl_history\n+\n+# Build files\n+build\ndist\n+\n+# Vim swap files\n*.swp\n-*.log\n+\n+# Mac OS\n.DS_Store\n"
    },
    {
        "msg": "feat(Footer): add basic test\nfeat(Footer): add basic test",
        "diff": "diff --git a/src/common/components/parts/Footer/index.test.jsx b/src/common/components/parts/Footer/index.test.jsx +import React from 'react'\n+import Footer from 'components/parts/Footer'\n+import {shallow} from 'enzyme'\n+import toJson from 'enzyme-to-json'\n+\n+describe('Footer component', () => {\n+ it('same snapshot', () => {\n+ const component = shallow(<Footer />)\n+ expect(toJson(component)).toMatchSnapshot()\n+ })\n+})\n",
        "date": "10.09.2017 13:55:08",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "test: update header test",
        "sim_diff": "diff --git a/src/components/Header/Header.test.js b/src/components/Header/Header.test.js import React from \"react\";\nimport renderer from \"react-test-renderer\";\n+import { shallow } from \"enzyme\";\nimport Header from \"./Header\";\ntest(\"basic snapshot\", () => {\n- const component = renderer.create(<Header />);\n+ const component = renderer.create(shallow(<Header />).get(3));\nconst tree = component.toJSON();\nexpect(tree).toMatchSnapshot();\n"
    },
    {
        "msg": "feat: use jest fake timer",
        "diff": "diff --git a/packages/dropdown/src/__tests__/Dropdown.spec.js b/packages/dropdown/src/__tests__/Dropdown.spec.js -import Dropdown from '../dropdown.vue'\n-import DropdownMenu from '../dropdown-menu.vue'\n-import DropdownItem from '../dropdown-item.vue'\n-\n+import '@testing-library/jest-dom'\nimport { mount } from '@vue/test-utils'\nimport { nextTick, ref } from 'vue'\nimport sinon from 'sinon'\n+import Dropdown from '../dropdown.vue'\n+import DropdownMenu from '../dropdown-menu.vue'\n+import DropdownItem from '../dropdown-item.vue'\n+\nconst components = {\nElDropdown: Dropdown,\nElDropdownMenu: DropdownMenu,\nElDropdownItem: DropdownItem\n}\n+jest.useFakeTimers()\n+\nconst wait = (time = 300) => {\n- return new Promise((resolve) => {\n- setTimeout(resolve, time)\n- })\n+ jest.runAllTimers()\n}\ndescribe('Dropdown', () => {\n",
        "date": "12.09.2020 16:32:29",
        "repo": "hug-sun/element3",
        "type": "feat",
        "sim_msg": "test(dropdown): testing native bootstrap 4 dropdown",
        "sim_diff": "diff --git a/test/index.html b/test/index.html <a href=\"https://bootstrap-vue.js.org/docs/\" target=\"_blank\">BootstrapVue</a>\n</b-alert>\n</div>\n+\n+ <div class=\"dropdown\">\n+ <button\n+ class=\"btn btn-secondary dropdown-toggle\"\n+ type=\"button\"\n+ id=\"dropdownMenuButton\"\n+ data-toggle=\"dropdown\"\n+ aria-haspopup=\"true\"\n+ aria-expanded=\"false\"\n+ >\n+ Dropdown button\n+ </button>\n+ <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n+ <a class=\"dropdown-item\" href=\"#\">Action</a>\n+ <a class=\"dropdown-item\" href=\"#\">Another action</a>\n+ <a class=\"dropdown-item\" href=\"#\">Something else here</a>\n+ </div>\n+ </div>\n</div>\n<script src=\"storefront-twbs.min.js\"></script>\n"
    },
    {
        "msg": "feat: Add optional argument to cxxr",
        "diff": "diff --git a/src/system/pair.js b/src/system/pair.js @@ -14,10 +14,23 @@ class Pair {\nthis.cdr = cdr;\n}\n- caar(){ return this.car.car; }\n- cadr(){ return this.cdr.car; }\n- cdar(){ return this.cdr.car; }\n- cddr(){ return this.cdr.cdr; }\n+ // Returns `this.car.car`. If `err` is given and `this.car` is not a pair,\n+ // throws `err`.\n+ caar(err){ return this._get([\"car\", \"car\"], err) }\n+ cadr(err){ return this._get([\"cdr\", \"car\"], err) }\n+ cdar(err){ return this._get([\"cdr\", \"car\"], err) }\n+ cddr(err){ return this._get([\"cdr\", \"cdr\"], err) }\n+ _get(props, err) {\n+ let x = this;\n+ props.forEach(p => {\n+ if (x.hasOwnProperty(p)) {\n+ return x[p];\n+ } else if (err) {\n+ throw err;\n+ }\n+ });\n+ return x;\n+ }\nfirst(){ return this.car; }\nsecond(){ return this.cdr.car; }\n",
        "date": "16.01.2022 13:06:19",
        "repo": "biwascheme/biwascheme",
        "type": "feat",
        "sim_msg": "feat: Make Links in TOC point to active service mesh",
        "sim_diff": "diff --git a/src/components/Learn-Components/TOC-Chapters/index.js b/src/components/Learn-Components/TOC-Chapters/index.js @@ -17,6 +17,9 @@ const TOC = ({ courseData, chapterData, location }) => {\nreturn currentChapter[currentChapter.length - 2];\n}\n};\n+\n+ const getActiveServiceMesh = () => chapterData.fields.slug.split(\"/\")[3];\n+\nreturn (\n<TOCWrapper>\n<div className=\"chapter-back\">\n@@ -30,7 +33,7 @@ const TOC = ({ courseData, chapterData, location }) => {\n{courseData.frontmatter.toc.map((item) => (\n<li key={item} className={item === getCurrentPage(location)? \"active-link\" : \"\"}>\n<p className=\"toc-item\">\n- <a href={`/learn-ng/${chapterData.fields.learnpath}/${chapterData.fields.course}/istio/${item}/`}>\n+ <a href={`/learn-ng/${chapterData.fields.learnpath}/${chapterData.fields.course}/${getActiveServiceMesh()}/${item}/`}>\n{reformatTOC(item)}\n</a>\n</p>\n"
    },
    {
        "msg": "feat: add `process.browser` for compatibility",
        "diff": "diff --git a/src/plugins/process-global-plugin.js b/src/plugins/process-global-plugin.js * @returns {import('rollup').Plugin}\n*/\nexport default function processGlobalPlugin({ NODE_ENV = 'development', env = {} } = {}) {\n- const processObj = `{env:${JSON.stringify({ ...env, NODE_ENV })}}`;\n+ const processObj = JSON.stringify({ browser: true, env: { ...env, NODE_ENV } });\nreturn {\nname: 'process-global',\n",
        "date": "15.01.2021 20:26:37",
        "repo": "preactjs/wmr",
        "type": "feat",
        "sim_msg": "chore: fix rollup to new API",
        "sim_diff": "diff --git a/rollup.config.js b/rollup.config.js @@ -12,15 +12,18 @@ const env = process.env.NODE_ENV;\nconst name = process.env.npm_package_name;\nconst config = {\n+ name,\n+ ouput: {\nname,\nsourcemap: true,\n- external: ['react', 'prop-types', 'redux', 'react-redux'],\nglobals: {\nreact: 'React',\n'prop-types': 'PropTypes',\nredux: 'redux',\n'react-redux': 'react-redux',\n},\n+ },\n+ external: ['react', 'prop-types', 'redux', 'react-redux'],\nplugins: [\nreplace({\n'process.env.NODE_ENV': JSON.stringify(env),\n"
    },
    {
        "msg": "feat(webpac_config/client/prod): remove comments from css files",
        "diff": "diff --git a/webpack_config/client/webpack.prod.babel.js b/webpack_config/client/webpack.prod.babel.js @@ -76,7 +76,14 @@ base.plugins.push(\nfilename: '[name].[chunkhash:8].css',\nallChunks: true\n}),\n- new OptimizeCssAssetsPlugin(),\n+ new OptimizeCssAssetsPlugin({\n+ cssProcessorOptions: {\n+ safe: true,\n+ discardComments: {\n+ removeAll: true\n+ }\n+ }\n+ }),\n// NOTE: ModuleConcatenationPlugin doesn't work on linux alpine,\n// I got an error trying to deploy this app to zeit's `now` when i use this plugin\n// new webpack.optimize.ModuleConcatenationPlugin(),\n@@ -114,17 +121,15 @@ base.plugins.push(\nname: 'manifest'\n}),\nnew webpack.BannerPlugin({\n- banner:\n- 'React-Semantic.UI-Starter. MIT License. Copyright (c) 2017 Copyright Vladimir Metnew. All Rights Reserved. https://github.com/Metnew/react-semantic.ui-starter'\n+ banner: config.banner\n}),\n- // XXX: this plugin seems cool, but there are few big issues:\n+ // XXX: this plugin looks cool, but there are few big issues:\n// 1. It sets invalid url to browserconfig.xml and manifest.json in index.html.\n// E.g: in generated index.html you can see:\n// <meta name=\"msapplication-config\" content=\"browserconfig.xml\">\n// 2. It looks like generated images aren't minified.(not sure)\n+ // 3. plugin is deprecated (at least look like it's deprecated)!\n// NOTE: It would be better to generate favicons without this plugin.\n- //\n- //\nnew FaviconsWebpackPlugin({\n// add theme-color property\nbackground: config.manifest.theme,\n",
        "date": "05.08.2017 12:11:04",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "feat(Scripts): add build timestamp",
        "sim_diff": "diff --git a/packages/scripts/webapp/preset/config/webpack.config.js b/packages/scripts/webapp/preset/config/webpack.config.js @@ -122,6 +122,7 @@ module.exports = ({ getUserConfig, mode }) => {\n],\n},\nplugins: [\n+ new webpack.DefinePlugin({ BUILD_TIMESTAMP: Date.now() }),\nnew MiniCssExtractPlugin({\nfilename: '[name]-[hash].css',\n}),\n@@ -135,9 +136,7 @@ module.exports = ({ getUserConfig, mode }) => {\nloadCSSAsync: true,\nappLoaderIcon: getUserConfig(['html', 'appLoaderIcon'], DEFAULT_APP_LOADER_ICON),\n}),\n- new CopyWebpackPlugin([\n- { from: 'src/assets' },\n- ]),\n+ new CopyWebpackPlugin([{ from: 'src/assets' }]),\nnew webpack.BannerPlugin({\nbanner: LICENSE_BANNER,\n}),\n"
    },
    {
        "msg": "feat(cli): Added CLI support for the --global-var option :tada:",
        "diff": "diff --git a/lib/cli/index.js b/lib/cli/index.js @@ -314,7 +314,24 @@ var _ = require('lodash'),\nvar runParser = new argparse.ArgumentParser({\ndebug: true,\naddHelp: false\n- });\n+ }),\n+\n+ /**\n+ * Parses `=` separated key-value pairs into Postman variable list like arrays. `=` characters in values are\n+ * also supported.\n+ *\n+ * @param {String} arg - The argument provided to `--global-var`.\n+ * @returns {{key, value}} - The object representation of the current CLI variable.\n+ * @throws {Error} - An error is thrown for arguments that are not in the form foo=bar.\n+ */\n+ cliVar = function (arg) {\n+ var eqIndex = arg.indexOf('=');\n+\n+ if (eqIndex === -1) { throw new Error('CLI global vars must be specified in a `key=value` format'); }\n+\n+ // This is done instead of splitting by `=` to avoid chopping off `=` that could be present in the value\n+ return { key: arg.slice(0, eqIndex), value: arg.slice(eqIndex + 1) };\n+ };\nrunParser.addArgument('collection', {\nhelp: 'URL or path to a Postman Collection'\n@@ -398,6 +415,12 @@ var _ = require('lodash'),\ndefaultValue: false\n});\n+ runParser.addArgument(['--global-var'], {\n+ help: 'Allows the specification of global variables via the command line, in a key=value format',\n+ type: cliVar,\n+ action: 'append'\n+ });\n+\nreturn runParser;\n},\n",
        "date": "24.07.2017 14:33:45",
        "repo": "postmanlabs/newman",
        "type": "feat",
        "sim_msg": "chore: make src more readable",
        "sim_diff": "diff --git a/lib/bootstrap.js b/lib/bootstrap.js @@ -4,15 +4,18 @@ const cmdArgs = require('command-line-args');\nrequire('./utils/process-log');\n-const helpFlagPresent = args => args.find(arg => ['help', '--help'].indexOf(arg) !== -1);\n+const isHelpFlagPresent = args => args.find(arg => ['help', '--help'].indexOf(arg) !== -1);\nconst normalizeFlags = (args, command) => args.slice(2).filter(arg => arg.indexOf('--') < 0 && arg !== command.name && arg !== command.alias);\n-const isCommandUsed = commands => commands.find(cmd => (cmd.alias ? process.argv.includes(cmd.name) || process.argv.includes(cmd.alias) : process.argv.includes(cmd.name)));\n+const isCommandUsed = commands =>\n+ commands.find(cmd => {\n+ return process.argv.includes(cmd.name) || process.argv.includes(cmd.alias);\n+ });\nasync function runCLI(cli, commandIsUsed) {\nlet args;\n- const helpFlagExists = helpFlagPresent(process.argv);\n+ const helpFlagExists = isHelpFlagPresent(process.argv);\nif (helpFlagExists) {\nawait cli.runHelp();\nreturn;\n"
    },
    {
        "msg": "feat(server/middlewares/auth): add default language\nfeat(server/middlewares/auth): add default language for req.user",
        "diff": "diff --git a/src/server/middlewares/auth.js b/src/server/middlewares/auth.js @@ -14,6 +14,7 @@ import {JWT_TOKEN} from 'common/api/LocalStorageCookiesSvc'\nexport default (req: Object, res: Object, next: () => void) => {\nreq.user = {\ntoken: null,\n+ lang: 'en',\nisLoggedIn: false\n}\n",
        "date": "10.09.2017 17:33:32",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "fix: add Utilities import to get-serialized",
        "sim_diff": "diff --git a/pages/api/users/get-serialized.js b/pages/api/users/get-serialized.js import * as Data from \"~/node_common/data\";\nimport * as Serializers from \"~/node_common/serializers\";\nimport * as Strings from \"~/common/strings\";\n+import * as Utilities from \"~/node_common/utilities\";\nexport default async (req, res) => {\nconst id = Utilities.getIdFromCookie(req);\n"
    },
    {
        "msg": "feat(reducers/auth): remove jwt token from state.me.auth\nfeat(reducers/auth): remove jwt token from state.me.auth",
        "diff": "diff --git a/src/common/reducers/auth/index.js b/src/common/reducers/auth/index.js // @flow\n-import {\n- isLoggedIn as hasLocalToken,\n- getLocalToken\n-} from 'api/LocalStorageCookiesSvc'\n+import {isLoggedIn as hasLocalToken} from 'api/LocalStorageCookiesSvc'\nimport {\nLOGIN_AUTH_FAIL,\nLOGIN_AUTH_PENDING,\n@@ -23,7 +20,6 @@ export type State = {\nisLoading: boolean,\nisLoaded: boolean,\nisLoggedIn: boolean,\n- token: string | null,\nerrors: Object\n}\n@@ -38,7 +34,6 @@ export const initialState: State = {\nisLoading: false,\nisLoaded: false,\nisLoggedIn: hasLocalToken(),\n- token: getLocalToken(),\nerrors: {}\n}\n@@ -52,7 +47,6 @@ export function auth (state: State = initialState, action: Action): State {\nisLoading: false,\nisLoaded: true,\nisLoggedIn: false,\n- token: null,\nerrors: {}\n}\n}\n@@ -63,18 +57,15 @@ export function auth (state: State = initialState, action: Action): State {\nisLoading: false,\nisLoaded: true,\nisLoggedIn: false,\n- token: null,\nerrors\n}\n}\ncase LOGIN_AUTH_SUCCESS: {\n- const {token} = action.payload\nreturn {\n...state,\nisLoading: false,\nisLoaded: true,\n- isLoggedIn: true,\n- token\n+ isLoggedIn: true\n}\n}\ncase LOGIN_AUTH_PENDING: {\n",
        "date": "17.09.2017 14:55:40",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "docs(jsdoc): adding param descriptions for account reducer",
        "sim_diff": "diff --git a/renderer/reducers/account/reducer.js b/renderer/reducers/account/reducer.js @@ -28,12 +28,12 @@ const {\n/**\n* @typedef State\n- * @property {boolean} isAccountLoading\n- * @property {boolean} isAccountLoaded\n- * @property {boolean} isLoggingIn\n- * @property {boolean} isLoggedIn\n- * @property {boolean|null} isPasswordEnabled\n- * @property {string|null} loginError\n+ * @property {boolean} isAccountLoading Boolean indicating if account is loading.\n+ * @property {boolean} isAccountLoaded Boolean indicating if account is loaded.\n+ * @property {boolean} isLoggingIn Boolean indicating if login is in process.\n+ * @property {boolean} isLoggedIn Boolean indicating if user is logged in.\n+ * @property {boolean|null} isPasswordEnabled Boolean indicating if user password is enabled.\n+ * @property {string|null} loginError Login error message.\n*/\n/** @type {State} */\n"
    },
    {
        "msg": "feat(CarPlay): Add CarPlay plugin to the list of possible plugins",
        "diff": "diff --git a/packages/rnv/pluginTemplates/renative.plugins.json b/packages/rnv/pluginTemplates/renative.plugins.json },\n\"@lightningjs/sdk\": {\n\"version\": \"3.0.0\"\n+ },\n+ \"react-native-carplay\": {\n+ \"version\": \"2.0.0\",\n+ \"ios\": {\n+ \"path\": \"node_modules/react-native-carplay\",\n+ \"podName\": \"react-native-carplay\",\n+ \"appDelegateImports\": [\"CarPlay\", \"react_native_carplay\"],\n+ \"appDelegateExtensions\": [\"CPApplicationDelegate\"],\n+ \"appDelegateMethods\": {\n+ \"application\": {\n+ \"didConnectCarInterfaceController\": [\n+ \"RNCarPlay.connect(with: interfaceController, window: window)\"\n+ ],\n+ \"didDisconnectCarInterfaceController\": [\"RNCarPlay.disconnect()\"]\n+ }\n+ }\n+ }\n}\n}\n}\n",
        "date": "15.06.2021 14:00:16",
        "repo": "pavjacko/renative",
        "type": "feat",
        "sim_msg": "fix: isMobileOny condition will broke the calculations for browser responsive mode. Calculate width and height even for mobile device.",
        "sim_diff": "diff --git a/src/lib/utils/Orientation.js b/src/lib/utils/Orientation.js import { Dimensions } from 'react-native'\n-import { isBrowser, isMobileOnly } from 'mobile-device-detect'\n+import { isBrowser } from 'mobile-device-detect'\nimport { theme } from '../../components/theme/styles'\nlet originalScreenHeight = 0\n@@ -22,7 +22,7 @@ export const getMaxDeviceHeight = () => {\nconst height = getScreenHeight()\nconst { maxHeightForTabletAndDesktop } = theme.sizes\n- return isMobileOnly ? height : Math.min(height, maxHeightForTabletAndDesktop)\n+ return Math.min(height, maxHeightForTabletAndDesktop)\n}\nexport const getScreenWidth = () => Dimensions.get('window').width\n@@ -30,7 +30,7 @@ export const getMaxDeviceWidth = () => {\nconst width = getScreenWidth()\nconst { maxWidthForTabletAndDesktop } = theme.sizes\n- return isMobileOnly ? width : Math.min(width, maxWidthForTabletAndDesktop)\n+ return Math.min(width, maxWidthForTabletAndDesktop)\n}\nexport const isPortrait = () => {\n"
    },
    {
        "msg": "feat(Header): add FormattedMessage\nfeat(Header): add FormattedMessage",
        "diff": "diff --git a/src/common/components/parts/Header/index.jsx b/src/common/components/parts/Header/index.jsx import React from 'react'\nimport PropTypes from 'prop-types'\nimport {Icon, Popup} from 'semantic-ui-react'\n+import {FormattedMessage, FormattedDate} from 'react-intl'\n+\nimport {isEqual} from 'lodash'\nimport {\nStyledHeader,\n@@ -56,7 +58,16 @@ class Header extends React.Component {\n<Icon name=\"github\" size=\"large\" link fitted />\n</HeaderButton>\n}\n- content={`RSUIS on @Github`}\n+ content={\n+ <FormattedMessage\n+ id=\"Header.Popup.HeaderButton\"\n+ defaultMessage={`Hello {name}, today is {today, date}`}\n+ values={{\n+ name: <b>user</b>,\n+ today: Date.now()\n+ }}\n+ />\n+ }\ninverted\n/>\n</HeaderInner>\n",
        "date": "09.09.2017 18:02:34",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "feat(core-heading): add forwardRefs",
        "sim_diff": "diff --git a/packages/Heading/Heading.jsx b/packages/Heading/Heading.jsx -import React from 'react'\n+import React, { forwardRef } from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n@@ -89,13 +89,22 @@ export const StyledHeading = styled.h1(wordBreak, ({ level, invert }) => {\n*\n* @version ./package.json\n*/\n-const Heading = ({ level, tag = level, invert, children, ...rest }) => {\n+const Heading = forwardRef(({ level, tag = level, invert, children, ...rest }, ref) => {\nreturn (\n- <StyledHeading {...safeRest(rest)} as={tag} level={level} invert={invert} data-testid=\"heading\">\n+ <StyledHeading\n+ {...safeRest(rest)}\n+ ref={ref}\n+ as={tag}\n+ level={level}\n+ invert={invert}\n+ data-testid=\"heading\"\n+ >\n{children}\n</StyledHeading>\n)\n-}\n+})\n+\n+Heading.displayName = 'Heading'\nHeading.propTypes = {\n/**\n"
    },
    {
        "msg": "feat(.babelrc): add babel-plugin-webpack-alias in test and development\nadd babel-plugin-webpack-alias in test and development",
        "diff": "diff --git a/.babelrc b/.babelrc },\n\"development\": {\n\"plugins\": [\n- \"react-hot-loader/babel\"\n+ \"react-hot-loader/babel\",\n+ [\n+ \"babel-plugin-webpack-alias\",\n+ {\n+ \"config\": \"./webpack_config/client/webpack.base.js\",\n+ \"findConfig\": true\n+ }\n+ ]\n+ ]\n+ },\n+ \"test\": {\n+ \"plugins\": [\n+ [\n+ \"babel-plugin-webpack-alias\",\n+ {\n+ \"config\": \"./webpack_config/webpack.isomorphic.js\",\n+ \"findConfig\": true\n+ }\n+ ]\n]\n}\n}\n",
        "date": "14.08.2017 16:59:06",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "build: Manually resolve Babel env plugins",
        "sim_diff": "diff --git a/.babelrc.js b/.babelrc.js -module.exports = {\n+const env = process.env.BABEL_ENV || process.env.NODE_ENV || 'development';\n+\n+const preset = {\npresets: [\n['env', {\nmodules: false\n@@ -10,19 +12,19 @@ module.exports = {\n'transform-decorators-legacy',\n'transform-export-extensions',\n['transform-runtime', { polyfill: false }]\n- ],\n- env: {\n- development: {\n- plugins: [\n- 'react-hot-loader/babel'\n]\n- },\n- production: {\n- plugins: [\n+};\n+\n+if (env === 'development') {\n+ preset.plugins.push('react-hot-loader/babel');\n+}\n+\n+if (env === 'production') {\n+ preset.plugins.push(\n'transform-react-constant-elements',\n'transform-react-inline-elements',\n['transform-react-remove-prop-types', { mode: 'wrap' }]\n- ]\n+ );\n}\n- }\n-};\n+\n+module.exports = preset;\n"
    },
    {
        "msg": "feat(src/common/routing/index.jsx): use  /* webpackMode: \"eager\" for server-side code",
        "diff": "diff --git a/src/common/routing/index.jsx b/src/common/routing/index.jsx @@ -7,7 +7,12 @@ export const history = getHistory()\nconst loadLazyComponent = url => {\nreturn async cb => {\n- const loadComponent = await import(/* webpackMode: \"lazy-once\", webpackChunkName: \"lazy-containers\" */ `containers/${url}/index.jsx`)\n+ const str = `containers/${url}/index.jsx`\n+ if (process.env.BROWSER) {\n+ const loadComponent = await import(/* webpackMode: \"lazy-once\", webpackChunkName: \"lazy-containers\" */ str)\n+ return loadComponent\n+ }\n+ const loadComponent = await import(/* webpackMode: \"eager\", webpackChunkName: \"lazy-containers\" */ str)\nreturn loadComponent\n}\n}\n",
        "date": "10.08.2017 06:18:33",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "fix: set default value for options",
        "sim_diff": "diff --git a/src/routes.js b/src/routes.js @@ -4,7 +4,7 @@ const getConfig = require(\"next/config\").default;\nif (process.browser) {\nconst { publicRuntimeConfig } = getConfig();\n- const wrap = (method) => (route, params, options) => {\n+ const wrap = (method) => (route, params, options = {}) => {\nconst { byName, urls: { as, href } } = routes.findAndGetUrls(route, params);\n// Force full page loads\n"
    },
    {
        "msg": "feat: add keyboard navigation for Schedule",
        "diff": "diff --git a/packages/veui/src/components/Schedule.vue b/packages/veui/src/components/Schedule.vue <td v-for=\"(hour, j) in day\" :key=\"j\" :class=\"{ 'veui-schedule-selected': hour.isSelected }\">\n<button type=\"button\" :disabled=\"realDisabled || hour.isDisabled\"\n:class=\"mergeClass({ 'veui-schedule-selected': hour.isSelected }, week[i], j)\"\n- :ref=\"`${week[i]}-${j}`\"\n+ :ref=\"`hour-${week[i]}-${j}`\"\n@mousedown=\"handleMousedown(i, j)\"\n@mouseenter=\"handleHover(i, j)\"\n- @mouseup=\"pick()\"><slot name=\"hour\" :day=\"week[i]\" :hour=\"j\"/></button>\n+ @mouseup=\"pick\"\n+ @keydown.space.enter=\"handleMousedown(i, j)\"\n+ @keyup.space.enter=\"pick\"\n+ @keydown.up.prevent=\"moveFocus((i + 6) % 7, j)\"\n+ @keydown.right.prevent=\"moveFocus(i, (j + 25) % 24)\"\n+ @keydown.down.prevent=\"moveFocus((i + 1) % 7, j)\"\n+ @keydown.left.prevent=\"moveFocus(i, (j + 23) % 24)\"><slot name=\"hour\" :day=\"week[i]\" :hour=\"j\"/></button>\n</td>\n</tr>\n</table>\n@@ -239,7 +245,7 @@ export default {\nif (!current) {\nreturn null\n}\n- return `${current.day}-${current.hour}`\n+ return `hour-${current.day}-${current.hour}`\n},\ncurrentLabel () {\nlet current = this.current\n@@ -366,6 +372,15 @@ export default {\nthis.$delete(this.localSelected, day)\n}\nthis.$emit('select', this.localSelected)\n+ },\n+ moveFocus (dayIndex, hour) {\n+ let day = this.week[dayIndex]\n+ this.handleHover(dayIndex, hour)\n+\n+ let el = (this.$refs[`hour-${day}-${hour}`] || [])[0]\n+ if (el && typeof el.focus === 'function') {\n+ el.focus()\n+ }\n}\n}\n}\n",
        "date": "11.06.2018 15:35:37",
        "repo": "ecomfe/veui",
        "type": "feat",
        "sim_msg": "refactor(container): adds script setup syntac, removes buildClass usage",
        "sim_diff": "diff --git a/src/components/container/CdrContainer.vue b/src/components/container/CdrContainer.vue -<template>\n- <component :is=\"tag\" :class=\"mapClasses(style, baseClass, modifierClass)\">\n- <slot />\n- </component>\n-</template>\n-\n-<script>\n-import { defineComponent, useCssModule, computed } from 'vue';\n+<script setup>\n+import { useCssModule, computed } from 'vue';\nimport propValidator from '../../utils/propValidator';\n-import { buildClass } from '../../utils/buildClass';\nimport mapClasses from '../../utils/mapClasses';\n-export default defineComponent({\n- name: 'CdrContainer',\n- props: {\n+const props = defineProps({\n/** Any valid HTML tag */\ntag: {\ntype: String,\n@@ -27,19 +18,21 @@ export default defineComponent({\nfalse,\n),\n},\n- },\n- setup(props, ctx) {\n- const baseClass = 'cdr-container';\n- const modifierClass = computed(() => buildClass(baseClass, props.modifier));\n- return {\n- style: useCssModule(),\n- baseClass,\n- modifierClass,\n- mapClasses,\n- };\n- },\n});\n+\n+const baseClass = 'cdr-container';\n+const style = useCssModule();\n+\n+/************************ Computed properties *************************/\n+const modifierClass = computed(() => `${baseClass}--${props.modifier}`);\n+\n</script>\n+<template>\n+ <component :is=\"tag\" :class=\"mapClasses(style, baseClass, modifierClass)\">\n+ <slot />\n+ </component>\n+</template>\n+\n<style lang=\"scss\" module src=\"./styles/CdrContainer.module.scss\">\n</style>\n"
    },
    {
        "msg": "feat(avatar): docs",
        "diff": "diff --git a/packages/chakra-ui-core/src/CAvatar/CAvatar.js b/packages/chakra-ui-core/src/CAvatar/CAvatar.js @@ -54,9 +54,6 @@ export const CAvatarBadge = {\nborderColor: borderColorStyle[this.colorMode],\nrounded: 'full',\n...forwardProps(this.$props)\n- },\n- attrs: {\n- 'data-chakra-component': 'CAvatarBadge'\n}\n})\n}\n@@ -83,8 +80,7 @@ const CAvatarName = {\n...forwardProps(this.$props)\n},\nattrs: {\n- 'aria-label': this.name,\n- 'data-chakra-component': 'CAvatarName'\n+ 'aria-label': this.name\n}\n}, [this.name && getInitials(this.name)])\n}\n@@ -107,9 +103,6 @@ const CDefaultAvatar = {\nlineHeight: '1rem',\n...forwardProps(this.$props)\n},\n- attrs: {\n- 'data-chakra-component': 'CDefaultAvatar'\n- },\ndomProps: {\ninnerHTML: `\n<svg fill=\"#fff\" viewBox=\"0 0 128 128\" role=\"img\">\n@@ -211,10 +204,10 @@ export const CAvatar = {\nw: '100%',\nh: '100%',\nrounded: 'full',\n- objectFit: 'cover'\n+ objectFit: 'cover',\n+ alt: this.name\n},\nattrs: {\n- alt: this.name,\nsrc: this.src\n}\n})\n@@ -225,16 +218,11 @@ export const CAvatar = {\nreturn h(CAvatarName, {\nprops: {\nname: this.name,\n- w: _size,\n- h: _size\n+ size: _size\n}\n})\n} else {\nreturn h(CDefaultAvatar, {\n- props: {\n- w: '100%',\n- h: '100%'\n- },\nattrs: {\n'aria-label': this.name\n}\n@@ -243,20 +231,12 @@ export const CAvatar = {\n}\n}\n- const { size, ...avatarStyles } = avatarStyleProps\n-\nreturn h(CBox, {\nprops: {\nfontSize: fontSize,\nlineHeight: _size,\n- verticalAlign: 'top',\n- w: size,\n- h: size,\n- ...avatarStyles,\n+ ...avatarStyleProps,\n...forwardProps(this.$props)\n- },\n- attrs: {\n- 'data-chakra-component': 'CAvatar'\n}\n}, [\nrenderChildren(),\n",
        "date": "05.04.2020 17:41:01",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "feat",
        "sim_msg": "perf(QParallax): start/stop based on screen visibility",
        "sim_diff": "diff --git a/ui/src/components/parallax/QParallax.js b/ui/src/components/parallax/QParallax.js @@ -5,8 +5,10 @@ import ListenersMixin from '../../mixins/listeners.js'\nimport { height, offset } from '../../utils/dom.js'\nimport frameDebounce from '../../utils/frame-debounce.js'\nimport { getScrollTarget } from '../../utils/scroll.js'\n-import { listenOpts } from '../../utils/event.js'\nimport { slot } from '../../utils/slot.js'\n+import { listenOpts } from '../../utils/event.js'\n+\n+const { passive } = listenOpts\nexport default Vue.extend({\nname: 'QParallax',\n@@ -39,12 +41,14 @@ export default Vue.extend({\nwatch: {\nheight () {\n- this.__updatePos()\n+ this.isWorking === true && this.__updatePos()\n},\nscrollTarget () {\n- this.__unconfigureScrollTarget()\n- this.__configureScrollTarget()\n+ if (this.isWorking === true || this.__scrollTarget === 'invalid') {\n+ this.__stop()\n+ this.__start()\n+ }\n}\n},\n@@ -54,13 +58,6 @@ export default Vue.extend({\nthis.qListeners.scroll !== void 0 && this.$emit('scroll', percentage)\n},\n- __onResize () {\n- if (this.__scrollTarget) {\n- this.mediaHeight = this.media.naturalHeight || this.media.videoHeight || height(this.media)\n- this.__updatePos()\n- }\n- },\n-\n__updatePos () {\nlet containerTop, containerHeight, containerBottom, top, bottom\n@@ -78,7 +75,7 @@ export default Vue.extend({\ntop = offset(this.$el).top\nbottom = top + this.height\n- if (bottom > containerTop && top < containerBottom) {\n+ if (this.observer !== void 0 || bottom > containerTop && top < containerBottom) {\nconst percent = (containerBottom - top) / (this.height + containerHeight)\nthis.__setPos((this.mediaHeight - this.height) * percent * this.speed)\nthis.__update(percent)\n@@ -90,17 +87,33 @@ export default Vue.extend({\nthis.media.style.transform = `translate3D(-50%,${Math.round(offset)}px, 0)`\n},\n- __configureScrollTarget () {\n+ __onResize () {\n+ this.mediaHeight = this.media.naturalHeight || this.media.videoHeight || height(this.media)\n+ this.isWorking === true && this.__updatePos()\n+ },\n+\n+ __start () {\nthis.__scrollTarget = getScrollTarget(this.$el, this.scrollTarget)\n- this.__scrollTarget.addEventListener('scroll', this.__updatePos, listenOpts.passive)\n- this.__onResize()\n+\n+ if (this.__scrollTarget) {\n+ this.isWorking = true\n+ this.__scrollTarget.addEventListener('scroll', this.__updatePos, passive)\n+ window.addEventListener('resize', this.__resizeHandler, passive)\n+ this.__updatePos()\n+ }\n+ else {\n+ this.__scrollTarget = 'invalid'\n+ }\n},\n- __unconfigureScrollTarget () {\n- if (this.__scrollTarget !== void 0) {\n- this.__scrollTarget.removeEventListener('scroll', this.__updatePos, listenOpts.passive)\n- this.__scrollTarget = void 0\n+ __stop () {\n+ if (this.isWorking === true) {\n+ this.isWorking = false\n+ this.__scrollTarget.removeEventListener('scroll', this.__updatePos, passive)\n+ window.removeEventListener('resize', this.__resizeHandler, passive)\n}\n+\n+ this.__scrollTarget = void 0\n}\n},\n@@ -132,13 +145,10 @@ export default Vue.extend({\n])\n},\n- beforeMount () {\n- this.__setPos = frameDebounce(this.__setPos)\n- },\n-\nmounted () {\n+ this.__setPos = frameDebounce(this.__setPos)\nthis.__update = frameDebounce(this.__update)\n- this.resizeHandler = frameDebounce(this.__onResize)\n+ this.__resizeHandler = frameDebounce(this.__onResize)\nthis.media = this.$scopedSlots.media !== void 0\n? this.$refs.mediaParent.children[0]\n@@ -146,14 +156,21 @@ export default Vue.extend({\nthis.media.onload = this.media.onloadstart = this.media.loadedmetadata = this.__onResize\n- window.addEventListener('resize', this.resizeHandler, listenOpts.passive)\n+ if (window.IntersectionObserver !== void 0) {\n+ this.observer = new IntersectionObserver(entries => {\n+ this[entries[0].isIntersecting === true ? '__start' : '__stop']()\n+ })\n- this.__configureScrollTarget()\n+ this.observer.observe(this.$el)\n+ }\n+ else {\n+ this.__start()\n+ }\n},\nbeforeDestroy () {\n- window.removeEventListener('resize', this.resizeHandler, listenOpts.passive)\n- this.__unconfigureScrollTarget()\n+ this.__stop()\n+ this.observer !== void 0 && this.observer.disconnect()\nthis.media.onload = this.media.onloadstart = this.media.loadedmetadata = null\n}\n})\n"
    },
    {
        "msg": "feat: added css for github button",
        "diff": "diff --git a/components/SocialLoginGroup/SocialLoginGroup.css b/components/SocialLoginGroup/SocialLoginGroup.css }\n/* Github */\n-.githubButton {\n+\n+/* WHITE */\n+\n+/* .githubButton {\ncolor: #24292e;\nbackground: #eff3f6;\ntransition: opacity 0.15s linear;\n.githubButton::before {\nborder-right: #1b1f23 1px solid;\n- background: url(\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/14082/icon_github.png\") 6px 6px\n+ background-color: #eff3f6;\n+ background-image: url(\"http://localhost:3000/static/images/icons/github_logo_black.svg\");\n+ background-repeat: no-repeat;\n+}\n+\n+.githubButton:active,\n+.githubButton:hover,\n+.githubButton:focus {\n+ opacity: 0.8;\n+ cursor: pointer;\n+} */\n+\n+/* .githubButton {\n+ color: #24292e;\n+ background: #eff3f6;\n+ transition: opacity 0.15s linear;\n+ border: 1px solid #1b1f23;\n+}\n+\n+.githubButton::before {\n+ content: url(\"http://localhost:3000/static/images/icons/github_logo_black.svg\");\n+ border-right: #1b1f23 1px solid;\n+ /* background-color: #eff3f6;\n+ background-image: url(\"http://localhost:3000/static/images/icons/github_logo.svg\");\n+ background-repeat: no-repeat;\n+}\n+\n+.githubButton:active,\n+.githubButton:hover,\n+.githubButton:focus {\n+ opacity: 0.8;\n+ cursor: pointer;\n+} */\n+\n+/* BLACK */\n+.githubButton {\n+ color: #eff3f6;\n+ background: #24292e;\n+ transition: opacity 0.15s linear;\n+ border: 1px solid #1b1f23;\n+}\n+\n+.githubButton::before {\n+ border-right: #b0b0b0 1px solid;\n+ background: url(\"http://localhost:3000/static/images/icons/github_octocat_logo.svg\") 4px 4px\nno-repeat;\n}\n",
        "date": "16.10.2019 12:32:51",
        "repo": "operationcode/front-end",
        "type": "feat",
        "sim_msg": "test(snapshot): Update top-nav snapshot test to align with Avatar updates",
        "sim_diff": "diff --git a/packages/top-nav/src/presenters/__snapshots__/ProfileButtonPresenter.test.js.snap b/packages/top-nav/src/presenters/__snapshots__/ProfileButtonPresenter.test.js.snap @@ -42,15 +42,9 @@ exports[`top-nav/presenters/ProfileButtonPresenter 1`] = `\n`;\nexports[`top-nav/presenters/ProfileButtonPresenter 2`] = `\n-.emotion-0 {\n- width: 32px;\n- height: 32px;\n- font-family: ArtifaktElement,sans-serif;\n-}\n-\n.emotion-1 {\n- background-color: #507b16;\n- color: #ffffff;\n+ background-color: #5bc9bd;\n+ color: #3c3c3c;\nwidth: 32px;\nheight: 32px;\nline-height: 32px;\n@@ -63,6 +57,12 @@ exports[`top-nav/presenters/ProfileButtonPresenter 2`] = `\ntext-align: center;\n}\n+.emotion-0 {\n+ width: 32px;\n+ height: 32px;\n+ font-family: ArtifaktElement,sans-serif;\n+}\n+\n<button\nonClick={undefined}\ntype=\"button\"\n@@ -83,15 +83,9 @@ exports[`top-nav/presenters/ProfileButtonPresenter 2`] = `\n`;\nexports[`top-nav/presenters/ProfileButtonPresenter 3`] = `\n-.emotion-2 {\n- width: 32px;\n- height: 32px;\n- font-family: ArtifaktElement,sans-serif;\n-}\n-\n.emotion-3 {\n- background-color: #7993b0;\n- color: #ffffff;\n+ background-color: #5bc9bd;\n+ color: #3c3c3c;\nwidth: 32px;\nheight: 32px;\nline-height: 32px;\n@@ -104,6 +98,12 @@ exports[`top-nav/presenters/ProfileButtonPresenter 3`] = `\ntext-align: center;\n}\n+.emotion-2 {\n+ width: 32px;\n+ height: 32px;\n+ font-family: ArtifaktElement,sans-serif;\n+}\n+\n.emotion-1 {\nposition: absolute;\ndisplay: -webkit-box;\n"
    },
    {
        "msg": "feat: use contenthash instead of chunkhash and hash",
        "diff": "diff --git a/packages/razzle/config/createConfigAsync.js b/packages/razzle/config/createConfigAsync.js @@ -532,7 +532,7 @@ module.exports = (\nexclude: webpackOptions.fileLoaderExlude,\nloader: require.resolve('file-loader'),\noptions: {\n- name: `${razzleOptions.mediaPrefix}/[name].[hash:8].[ext]`,\n+ name: `${razzleOptions.mediaPrefix}/[name].[contenthash:8].[ext]`,\nemitFile: IS_WEB,\n},\n},\n@@ -544,7 +544,7 @@ module.exports = (\nloader: require.resolve('url-loader'),\noptions: {\nlimit: 10000,\n- name: `${razzleOptions.mediaPrefix}/[name].[hash:8].[ext]`,\n+ name: `${razzleOptions.mediaPrefix}/[name].[contenthash:8].[ext]`,\nemitFile: IS_WEB,\n},\n},\n@@ -844,8 +844,8 @@ module.exports = (\nconfig.output = {\npath: paths.appBuildPublic,\npublicPath: dotenv.raw.PUBLIC_PATH || '/',\n- filename: `${razzleOptions.jsPrefix}/bundle.[chunkhash:8].js`,\n- chunkFilename: `${razzleOptions.jsPrefix}/[name].[chunkhash:8].chunk.js`,\n+ filename: `${razzleOptions.jsPrefix}/bundle.[contenthash:8].js`,\n+ chunkFilename: `${razzleOptions.jsPrefix}/[name].[contenthash:8].chunk.js`,\nlibraryTarget: 'var',\n};\n",
        "date": "23.08.2020 17:44:58",
        "repo": "jaredpalmer/razzle",
        "type": "feat",
        "sim_msg": "build(webpack): var output for cdns, alias for itself",
        "sim_diff": "diff --git a/@ecomplus/storefront-twbs/webpack.config.js b/@ecomplus/storefront-twbs/webpack.config.js @@ -6,18 +6,20 @@ const path = require('path')\nconst { CleanWebpackPlugin } = require('clean-webpack-plugin')\nconst MiniCssExtractPlugin = require('mini-css-extract-plugin')\n-module.exports = {\n+const output = {\n+ library: '__storefront_twbs',\n+ libraryTarget: 'umd',\n+ path: path.resolve(__dirname, 'dist'),\n+ filename: 'storefront-twbs.min.js'\n+}\n+\n+const webpackConfig = {\nmode: devMode ? 'development' : 'production',\nentry: [\npath.resolve(__dirname, 'scss/styles.scss'),\npath.resolve(__dirname, 'src/index.js')\n],\n- output: {\n- library: '__storefront_twbs',\n- libraryTarget: 'umd',\n- path: path.resolve(__dirname, 'dist'),\n- filename: 'storefront-twbs.min.js'\n- },\n+ output,\ndevServer: {\ncontentBase: path.resolve(__dirname, '__tests__'),\n@@ -68,7 +70,23 @@ module.exports = {\nresolve: {\nalias: {\n- jquery$: 'jquery/dist/jquery.slim'\n+ jquery$: 'jquery/dist/jquery.slim',\n+ '@ecomplus/storefront-twbs': __dirname\n}\n}\n}\n+\n+module.exports = [\n+ {\n+ ...webpackConfig,\n+ entry: path.resolve(__dirname, 'src/index.js'),\n+ output: {\n+ ...output,\n+ libraryTarget: 'var',\n+ filename: output.filename.replace('.min.js', '.var.min.js'),\n+ path: path.resolve(output.path, 'public')\n+ }\n+ },\n+\n+ webpackConfig\n+]\n"
    },
    {
        "msg": "feat: CSS Variables support",
        "diff": "diff --git a/scss/mixins/_utilities.scss b/scss/mixins/_utilities.scss // Don't prefix if value key is null (eg. with shadow class)\n$property-class-modifier: if($key, if($property-class == \"\" and $infix == \"\", \"\", \"-\") + $key, \"\");\n+ // Generate also CSS Variable\n+ $generate-vars: if(map-has-key($utility, vars), map-get($utility, vars), \"false\");\n+\n@if map-get($utility, rfs) {\n// Inside the media query\n@if $is-rfs-media-query {\n}\n.#{$property-class + $infix + $property-class-modifier} {\n@each $property in $properties {\n+ @if $generate-vars == true {\n#{$property}: var(--#{$variable-prefix}#{$property-class + $infix + $property-class-modifier}, $value) if($enable-important-utilities, !important, null);\n}\n+ @else {\n+ #{$property}: $value if($enable-important-utilities, !important, null);\n+ }\n+ }\n}\n@each $pseudo in $state {\n",
        "date": "04.01.2021 15:06:26",
        "repo": "coreui/coreui",
        "type": "feat",
        "sim_msg": "fix(cssutils): fix u-bg- and u-border- utils",
        "sim_diff": "diff --git a/scss/os/_utils.scss b/scss/os/_utils.scss @@ -189,7 +189,7 @@ $form-control-disabled-opacity: .6 !default;\n@each $color, $value in $colors {\n.u-bg-#{$color} {\n- color: $value;\n+ background-color: $value;\n}\n}\n@@ -197,7 +197,7 @@ $form-control-disabled-opacity: .6 !default;\n@mixin color-generator($color-map) {\n@each $color, $value in $color-map {\n.u-border-#{$color} {\n- color: $value;\n+ border-color: $value;\n}\n}\n"
    },
    {
        "msg": "feat(api/links.json): fix links desc\nfeat(api/links.json): fix links desc",
        "diff": "diff --git a/src/server/api/links.json b/src/server/api/links.json \"icon\": \"github\",\n\"header\": \"SSR + Webpack (in development)\",\n\"desc\":\n- \"Step by step guide with working example of hot-reloaded server and client with SSR with Webpack in development.\"\n+ \"Step by step guide with working example of server and client with hot-reloading and SSR with Webpack (in development).\"\n},\n{\n- \"link\": \"https://github.com/Metnew/tiny-universal-example\",\n+ \"link\": \"https://github.com/Metnew/noir\",\n\"icon\": \"bug\",\n- \"header\": \"How to test actions and reducers?\",\n- \"desc\": \"How to test actions and reducers?\"\n+ \"header\": \"Testing\",\n+ \"desc\": \"How to test actions, reducers, components?\"\n},\n{\n\"link\": \"https://github.com/Metnew/noir\",\n\"icon\": \"paint brush\",\n- \"header\": \"Why semantic-ui-react?\"\n+ \"header\": \"Why semantic-ui-react?\",\n+ \"desc\": \"Notes about SUI. Why SUIR is a good (or bad) choise.\"\n},\n{\n\"link\": \"\",\n\"icon\": \"globe\",\n\"header\": \"How i18n works?\",\n- \"desc\": \"i18n configuration and how to customize it in own project\"\n+ \"desc\": \"How i18n is implemented and how to customize it.\"\n},\n{\n\"header\": \"How Webpack is configured?\",\n\"icon\": \"code\",\n\"link\": \"\",\n\"desc\":\n- \"Webpack configuration for server/client in production and development\"\n+ \"Webpack configuration for server/client in production and development.\"\n},\n{\n\"link\": \"\",\n\"icon\": \"terminal\",\n- \"header\": \"npm scripts\",\n- \"desc\": \"npm scripts under the hood and ENV vars\"\n+ \"header\": \"npm scripts and ENV vars\",\n+ \"desc\": \"Docs about every npm script and ENV variable.\"\n},\n{\n\"link\": \"\",\n\"icon\": \"folder\",\n\"header\": \"Folder structure\",\n- \"desc\": \"Why this folder structure and how to adapt it for own project\"\n+ \"desc\": \"Why this folder structure and how to adapt it in own project.\"\n}\n]\n",
        "date": "13.10.2017 16:51:17",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "feat(app): SSR prod distributables should force use the prod code of externalized vue/vuex/etc packages",
        "sim_diff": "diff --git a/app/lib/webpack/ssr/webserver.js b/app/lib/webpack/ssr/webserver.js @@ -6,6 +6,8 @@ const WebserverAssetsPlugin = require('./plugin.webserver-assets')\nconst injectNodeTypescript = require('../inject.node-typescript')\nconst WebpackProgressPlugin = require('../plugin.progress')\n+const nodeEnvBanner = `if(process.env.NODE_ENV===void 0){process.env.NODE_ENV='production'}`\n+\nconst flattenObject = (obj, prefix = 'process.env') => {\nreturn Object.keys(obj)\n.reduce((acc, k) => {\n@@ -104,6 +106,15 @@ module.exports = function (cfg, configName) {\n.use(WebpackProgressPlugin, [{ name: configName, cfg, hasExternalWork: true }])\nif (cfg.ctx.prod) {\n+ // we need to set process.env.NODE_ENV to 'production'\n+ // (unless it's already set to something)\n+ // in order for externalized vue/vuex/etc packages to run the\n+ // production code (*.cjs.prod.js) instead of the dev one\n+ chain.plugin('node-env-banner')\n+ .use(webpack.BannerPlugin, [\n+ { banner: nodeEnvBanner, raw: true, entryOnly: true }\n+ ])\n+\nchain.plugin('webserver-assets-plugin')\n.use(WebserverAssetsPlugin, [ cfg ])\n"
    },
    {
        "msg": "feat(Modal): Make toggle prop optional\n* Make toggle prop optional on Modal\nre\n* Check toggle prop for null",
        "diff": "diff --git a/src/Modal.js b/src/Modal.js @@ -14,7 +14,7 @@ import {\nconst propTypes = {\nisOpen: PropTypes.bool,\nsize: PropTypes.string,\n- toggle: PropTypes.func.isRequired,\n+ toggle: PropTypes.func,\nkeyboard: PropTypes.bool,\nbackdrop: PropTypes.oneOfType([\nPropTypes.bool,\n@@ -90,7 +90,7 @@ class Modal extends React.Component {\n}\nhandleEscape(e) {\n- if (this.props.keyboard && e.keyCode === 27) {\n+ if (this.props.keyboard && e.keyCode === 27 && this.props.toggle) {\nthis.props.toggle();\n}\n}\n@@ -100,7 +100,7 @@ class Modal extends React.Component {\nconst container = this._dialog;\n- if (e.target && !container.contains(e.target)) {\n+ if (e.target && !container.contains(e.target) && this.props.toggle) {\nthis.props.toggle();\n}\n}\n",
        "date": "14.02.2017 08:55:27",
        "repo": "reactstrap/reactstrap",
        "type": "feat",
        "sim_msg": "refactor: add classes for modal overlay and modal root container on purpose to manage plugin in external projects",
        "sim_diff": "diff --git a/projects/react/components/Modal.js b/projects/react/components/Modal.js @@ -133,6 +133,8 @@ export class Modal extends Component {\nsuper(props);\nthis.root = document.createElement('div');\n+ this.root.classList.add('filerobot-image-editor-root');\n+\ndocument.body.appendChild(this.root);\nconst { closeOnOutsideClick = true } = this.props;\n@@ -164,7 +166,7 @@ export class Modal extends Component {\nreturn createPortal(\n<Fragment>\n- <ModalOverlay onClick={() => onClose(ON_CLOSE_STATUSES.MODAL_OVERLAY_CLICKED)}/>\n+ <ModalOverlay className=\"modal-overlay\" onClick={() => onClose(ON_CLOSE_STATUSES.MODAL_OVERLAY_CLICKED)}/>\n<ModalFullScreen id={MODAL_ID} {...this.props}>\n{!isHideCloseBtn && <CloseBtn onClick={onClose}/>}\n<ModalContent h=\"100%\" {...otherProps}>\n"
    },
    {
        "msg": "feat: :sparkles: add Fathom tracking",
        "diff": "diff --git a/src/app.html b/src/app.html name=\"viewport\"\ncontent=\"width=device-width, initial-scale=1\"\n/>\n+ <script\n+ src=\"https://4pvafmq.cheatsheets.xyz/script.js\"\n+ data-site=\"WERPEKMT\"\n+ defer\n+ ></script>\n%svelte.head%\n</head>\n<body>\n",
        "date": "12.07.2021 08:42:23",
        "repo": "spences10/cheat-sheets",
        "type": "feat",
        "sim_msg": "feat: Fast Chinese website",
        "sim_diff": "diff --git a/site/index.html b/site/index.html <script src=\"bundle.js\" type=\"text/javascript\" defer></script>\n</head>\n<body>\n- <div id=\"app\" />\n+ <div id=\"app\"></div>\n</body>\n</html>\n"
    },
    {
        "msg": "feat(drawer): add stories for Drawer component",
        "diff": "diff --git a/packages/chakra-ui-core/src/Drawer/Drawer.stories.js b/packages/chakra-ui-core/src/Drawer/Drawer.stories.js +import { storiesOf } from '@storybook/vue'\n+import { Fragment, Input, Button, Drawer, DrawerBody, DrawerFooter, DrawerHeader, DrawerOverlay, DrawerContent, DrawerCloseButton } from '..'\n+\n+storiesOf('UI | Drawer', module)\n+ .add('Drawer', () => ({\n+ components: { Fragment, Input, Button, Drawer, DrawerBody, DrawerFooter, DrawerHeader, DrawerOverlay, DrawerContent, DrawerCloseButton },\n+ data: () => ({ isOpen: false }),\n+ methods: {\n+ close () {\n+ this.isOpen = false\n+ }\n+ },\n+ template: `\n+ <Fragment>\n+ <Button ref=\"btnRef\" @click=\"isOpen =true\">Open Drawer</Button>\n+\n+ <Drawer :isOpen=\"isOpen\" placement=\"right\" :on-close=\"close\" :initialFocusRef=\"()=>$refs.inputInsideModal\">\n+ <DrawerOverlay />\n+ <DrawerContent>\n+ <DrawerCloseButton />\n+ <DrawerHeader>Create your account</DrawerHeader>\n+\n+ <DrawerBody>\n+ <Input ref=\"inputInsideModal\" placeholder=\"Type here...\" />\n+ </DrawerBody>\n+\n+ <DrawerFooter>\n+ <Button variant=\"outline\" mr=\"3\" @click=\"isOpen = false\">Cancel</Button>\n+ <Button color=\"blue\">Save</Button>\n+ </DrawerFooter>\n+ </DrawerContent>\n+ </Drawer>\n+ </Fragment>\n+ `\n+ }))\n",
        "date": "17.03.2020 22:34:36",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "feat",
        "sim_msg": "docs: add object knob",
        "sim_diff": "diff --git a/stories/Autocomplete.stories.js b/stories/Autocomplete.stories.js @@ -2,7 +2,7 @@ import React from 'react';\nimport { storiesOf } from '@storybook/react';\nimport Autocomplete from '../src/Autocomplete';\nimport Icon from '../src/Icon';\n-import { text, withKnobs } from '@storybook/addon-knobs';\n+import { text, withKnobs, object } from '@storybook/addon-knobs';\nconst stories = storiesOf('Javascript|Autocomplete', module);\nstories.addDecorator(withKnobs);\n@@ -16,11 +16,11 @@ stories.add(\n() => (\n<Autocomplete\noptions={{\n- data: {\n+ data: object('Data', {\n['Gus Fring']: null,\n['Saul Goodman']: null,\n['Tuco Salamanca']: 'https://placehold.it/250x250'\n- }\n+ })\n}}\nplaceholder=\"Insert here\"\n/>\n@@ -33,11 +33,11 @@ stories.add(\n() => (\n<Autocomplete\noptions={{\n- data: {\n+ data: object('Data', {\n['Gus Fring']: null,\n['Saul Goodman']: null,\n['Tuco Salamanca']: 'https://placehold.it/250x250'\n- }\n+ })\n}}\nplaceholder=\"Insert here\"\nicon={<Icon>{text('icon', 'textsms')}</Icon>}\n"
    },
    {
        "msg": "feat(build, watch): Less verbose error output",
        "diff": "diff --git a/src/lib/webpack/run-webpack.js b/src/lib/webpack/run-webpack.js @@ -38,7 +38,12 @@ const devBuild = async (env, onprogress) => {\nlet serverAddr = `${protocol}://${host}:${chalk.bold(port)}`;\nlet localIpAddr = `${protocol}://${ip.address()}:${chalk.bold(port)}`;\n- process.stdout.write(chalk.green('\\nCompiled successfully!!\\n\\n'));\n+ if (stats.hasErrors()) {\n+ process.stdout.write(chalk.red('\\Build failed!\\n\\n'));\n+ } else {\n+ process.stdout.write(chalk.green('\\nCompiled successfully!\\n\\n'));\n+ }\n+\nif (userPort !== port) {\nprocess.stdout.write(`Port ${chalk.bold(userPort)} is in use, using ${chalk.bold(port)} instead\\n\\n`);\n}\n@@ -71,7 +76,8 @@ const prodBuild = async (env) => {\nreturn await new Promise((resolve, reject) => {\ncompiler.run((err, stats) => {\nif (err || stats.hasErrors()) {\n- reject(err || stats.toJson().errors.join('\\n'));\n+ showStats(stats);\n+ reject(chalk.red('Build failed!'));\n}\nelse {\n// Timeout for plugins that work on `after-emit` event of webpack\n@@ -82,16 +88,16 @@ const prodBuild = async (env) => {\n};\nexport function showStats(stats) {\n- let info = stats.toJson();\n+ let info = stats.toJson(\"errors-only\");\nif (stats.hasErrors()) {\n- info.errors.forEach( message => {\n- process.stderr.write(message+'\\n');\n+ info.errors.map(stripBabelLoaderPrefix).forEach( message => {\n+ process.stderr.write(chalk.red(message)+'\\n');\n});\n}\nif (stats.hasWarnings()) {\n- info.warnings.forEach( message => {\n+ info.warnings.map(stripBabelLoaderPrefix).forEach( message => {\nprocess.stderr.write(chalk.yellow(message)+'\\n');\n});\n}\n@@ -109,8 +115,8 @@ export function writeJsonStats(stats) {\njsonStats = (jsonStats.children && jsonStats.children[0]) || jsonStats;\n- jsonStats.modules.forEach(normalizeModule);\n- jsonStats.chunks.forEach(c => c.modules.forEach(normalizeModule));\n+ jsonStats.modules.forEach(stripBabelLoaderFromModuleNames);\n+ jsonStats.chunks.forEach(c => c.modules.forEach(stripBabelLoaderFromModuleNames));\nreturn fs.writeFile(outputPath, JSON.stringify(jsonStats))\n.then(() => {\n@@ -121,20 +127,20 @@ export function writeJsonStats(stats) {\n});\n}\n-const normalizeModule = m => {\n+const stripBabelLoaderFromModuleNames = m => {\nconst keysToNormalize = ['identifier', 'name', 'module', 'moduleName', 'moduleIdentifier'];\nkeysToNormalize.forEach(key => {\nif (key in m) {\n- m[key] = normalizeName(m[key]);\n+ m[key] = stripBabelLoaderPrefix(m[key]);\n}\n});\nif (m.reasons) {\n- m.reasons.forEach(normalizeModule);\n+ m.reasons.forEach(stripBabelLoaderFromModuleNames);\n}\nreturn m;\n};\n-const normalizeName = p => p.substr(p.lastIndexOf('!') + 1);\n+const stripBabelLoaderPrefix = log => log.replace(/@?\\s*(\\.\\/~\\/babel-loader\\/lib\\?{[\\s\\S]*?}!)/g, '');\n",
        "date": "08.07.2017 11:27:49",
        "repo": "preactjs/preact-cli",
        "type": "feat",
        "sim_msg": "fix(command-dev): use waitPort built-in http request support",
        "sim_diff": "diff --git a/src/commands/dev/index.js b/src/commands/dev/index.js @@ -6,8 +6,6 @@ const { promisify } = require('util')\nconst { flags: flagsLib } = require('@oclif/command')\nconst boxen = require('boxen')\nconst chalk = require('chalk')\n-const fetch = require('node-fetch')\n-const waitFor = require('p-wait-for')\nconst StaticServer = require('static-server')\nconst stripAnsiCc = require('strip-ansi-control-characters')\nconst waitPort = require('wait-port')\n@@ -23,11 +21,6 @@ const openBrowser = require('../../utils/open-browser')\nconst { startProxy } = require('../../utils/proxy')\nconst { startForwardProxy } = require('../../utils/traffic-mesh')\n-// 1 second\n-const SERVER_POLL_INTERVAL = 1e3\n-// 20 seconds\n-const SERVER_POLL_TIMEOUT = 2e4\n-\nconst startStaticServer = async ({ settings, log }) => {\nconst server = new StaticServer({\nrootPath: settings.dist,\n@@ -92,35 +85,12 @@ const startFrameworkServer = async function ({ settings, log, exit }) {\nport: settings.frameworkPort,\noutput: 'silent',\ntimeout: FRAMEWORK_PORT_TIMEOUT,\n+ ...(settings.disableLocalServerPolling ? {} : { protocol: 'http' }),\n})\nif (!open) {\nthrow new Error(`Timed out waiting for port '${settings.frameworkPort}' to be open`)\n}\n-\n- if (!settings.disableLocalServerPolling) {\n- const waitForServerToRespond = async () => {\n- try {\n- await fetch(`http://localhost:${settings.frameworkPort}`, {\n- method: 'HEAD',\n- timeout: SERVER_POLL_INTERVAL,\n- })\n- } catch (_) {\n- return false\n- }\n-\n- return true\n- }\n-\n- try {\n- await waitFor(waitForServerToRespond, {\n- interval: SERVER_POLL_INTERVAL,\n- timeout: SERVER_POLL_TIMEOUT,\n- })\n- } catch (_) {\n- log(NETLIFYDEVWARN, 'Netlify Dev could not verify that your framework server is responding to requests.')\n- }\n- }\n} catch (error) {\nlog(NETLIFYDEVERR, `Netlify Dev could not connect to localhost:${settings.frameworkPort}.`)\nlog(NETLIFYDEVERR, `Please make sure your framework server is running on port ${settings.frameworkPort}`)\n"
    },
    {
        "msg": "feat(src/server/api/auth): add auth route for server",
        "diff": "diff --git a/src/server/api/auth/index.js b/src/server/api/auth/index.js import {Router} from 'express'\n+import jwt from 'jsonwebtoken'\n+import chalk from 'chalk'\n+// import validator from 'validator'\n+// {isLength, trim, isAlphanumeric, escape}\nconst router = Router()\n// define the home page route\nrouter.post('/', (req, res) => {\n- res.json({token: 'nothing'})\n+ // const {username, password} = req.body\n+ // const usernameValidated = validator.isLength(0, 36).is\n+ // const passwordValidated =\n+ const data = {username: 'cool_username_for_testing'}\n+ jwt.sign(data, process.env.JWT_SECRET, (err, token) => {\n+ if (err) {\n+ throw new Error(\n+ `Cant create JWT token based on input data: ${JSON.stringify(data)}`,\n+ err\n+ )\n+ }\n+ console.log(chalk.yellow(`Generated token for user: ${data.username}`))\n+ res.json({token})\n+ })\n})\nexport default router\n",
        "date": "04.08.2017 13:55:47",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "feat: add route for tags",
        "sim_diff": "diff --git a/src/server.js b/src/server.js @@ -21,6 +21,12 @@ app.prepare()\n// app.render(req, res, actualPage, queryParams);\n// });\n+ server.get(\"/tag/:slug\", (req, res) => {\n+ const actualPage = \"/\";\n+ const queryParams = { slug: req.params.slug };\n+ app.render(req, res, actualPage, queryParams);\n+ });\n+\nserver.get(\"*\", (req, res) => handle(req, res));\n/* END EXPRESS ROUTES */\n"
    },
    {
        "msg": "feat(server/ssr): move i18n stuff to i18n, fix state creation\nfeat(server/ssr): construct state using req.useragent, remove\nlocaleData requiring, remove translations creation",
        "diff": "diff --git a/src/server/ssr/index.js b/src/server/ssr/index.js * @desc\n*/\nimport React from 'react'\n-import {readFileSync} from 'fs' // readFile\n-import path from 'path'\n+import chalk from 'chalk'\n// import _ from 'lodash'\n-import {sync as globSync} from 'glob'\nimport {renderToString} from 'react-dom/server'\nimport {ServerStyleSheet, StyleSheetManager} from 'styled-components'\nimport {configureRootComponent, configureApp} from 'common/app'\n// import {addLocaleData} from 'react-intl'\nimport HtmlComponent from './HtmlComponent'\n+// $FlowFixMe\nimport assets from 'webpack-assets'\n+// $FlowFixMe\nimport faviconsAssets from 'favicons-assets'\n-import type {Node} from 'react'\n-\n-const translations = globSync('locals/*.json')\n- .map(filename => [\n- path.basename(filename, '.json'),\n- readFileSync(filename, 'utf8')\n- ])\n- .map(([locale, file]) => [locale, JSON.parse(file)])\n- .reduce((collection, [locale, messages]) => {\n- collection[locale] = messages\n- return collection\n- }, {})\n+import getI18nData from 'server/i18n'\nexport default (req: express$Request, res: express$Response) => {\n- const {isLoggedIn, token, lang} = req.user\n+ const {isLoggedIn, lang} = req.user\n+ const {isMobile} = req.useragent\n+ console.log(chalk.cyan(`MOBILE DEVICE: ${isMobile}`, JSON.stringify(req.useragent), lang))\n+ const meState = {auth: {isLoggedIn}}\n+ const layoutState = {isMobile}\nconst initialState: Object = isLoggedIn\n- ? {me: {auth: {isLoggedIn, token}}}\n- : {}\n- const localeData = require('react-intl/locale-data/' + (lang || 'en'))\n- const i18n = {\n- lang,\n- localeData,\n- locale: lang,\n- messages: translations[lang]\n- }\n- //\n+ ? {me: meState, layout: layoutState}\n+ : {layout: layoutState}\n+ const i18n = getI18nData(lang)\nconst sheet = new ServerStyleSheet()\nconst location: string = req.url\nconst context = {}\nconst {store, history, routes} = configureApp(initialState)\n- const RootComponent: Node = configureRootComponent({\n+ const RootComponent: React$Node = configureRootComponent({\nstore,\nhistory,\nroutes,\n",
        "date": "17.09.2017 14:25:22",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "fix: improve submit fn in VerifyEditCode.js",
        "sim_diff": "diff --git a/src/components/profile/VerifyEditCode.js b/src/components/profile/VerifyEditCode.js // @flow\n-import React from 'react'\n+import React, { useCallback } from 'react'\nimport { get } from 'lodash'\nimport logger from '../../lib/logger/pino-logger'\nimport userStorage from '../../lib/gundb/UserStorage'\n@@ -10,6 +10,7 @@ const log = logger.child({ from: 'Verify Edit Code' })\nconst VerifyEditCode = props => {\nconst { navigation, screenProps } = props\n+ const { pop, navigateTo } = screenProps\nconst field = get(navigation, 'state.params.field')\nconst content = get(navigation, 'state.params.content')\nlet fieldToSave\n@@ -36,13 +37,13 @@ const VerifyEditCode = props => {\ncontent,\n})\n- const handleSubmit = async () => {\n+ const handleSubmit = useCallback(async () => {\nconst privacy = await userStorage.getFieldPrivacy(fieldToSave)\nawait userStorage.setProfileField(fieldToSave, content, privacy)\n- screenProps.pop()\n- navigation.navigate('Profile')\n- }\n+ pop()\n+ navigateTo('Profile')\n+ }, [fieldToSave, content, navigateTo, pop])\nreturn (\n<RenderComponent\n"
    },
    {
        "msg": "feat(server/ssr): add Lazy loading with SSR\nfeat(server/ssr): add lazy loading with SSR",
        "diff": "diff --git a/src/server/ssr/index.js b/src/server/ssr/index.js @@ -13,6 +13,7 @@ import assets from 'webpack-assets'\n// $FlowFixMe\nimport faviconsAssets from 'favicons-assets'\nimport getI18nData from 'server/i18n'\n+import {matchPath} from 'react-router'\nexport default async (req: express$Request, res: express$Response) => {\nconst {isLoggedIn, language} = req.user\n@@ -50,6 +51,18 @@ export default async (req: express$Request, res: express$Response) => {\ninitialState: preloadedState,\ni18n\n}\n+\n+ // FIXME: how to replace `let` and `for`?\n+ let lazyRoutes = routes.filter(a => a.lazy)\n+ for (var i = 0; i < lazyRoutes.length; i++) {\n+ let route = routes[i]\n+ if (matchPath(req.url, route)) {\n+ route.component = await routes[i].component().default\n+ route.lazy = false\n+ break\n+ }\n+ }\n+\nconst {beforeAppTag, afterAppTag} = HtmlComponent(props)\nres.writeHead(200, {\n",
        "date": "30.10.2017 00:37:17",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "feat: add route for tags",
        "sim_diff": "diff --git a/src/server.js b/src/server.js @@ -21,6 +21,12 @@ app.prepare()\n// app.render(req, res, actualPage, queryParams);\n// });\n+ server.get(\"/tag/:slug\", (req, res) => {\n+ const actualPage = \"/\";\n+ const queryParams = { slug: req.params.slug };\n+ app.render(req, res, actualPage, queryParams);\n+ });\n+\nserver.get(\"*\", (req, res) => handle(req, res));\n/* END EXPRESS ROUTES */\n"
    },
    {
        "msg": "feat(creset): reset styles on server using created hook",
        "diff": "diff --git a/packages/chakra-ui-core/src/CReset/CReset.js b/packages/chakra-ui-core/src/CReset/CReset.js @@ -36,7 +36,7 @@ const CReset = {\nprops: {\nconfig: Object\n},\n- mounted () {\n+ created () {\nconst { color, bg, borderColor, placeholderColor } = this.styleConfig[this.colorMode]\nuseTailwindPreflight(this.theme)\ninjectGlobal({\n",
        "date": "11.04.2020 22:27:05",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "feat",
        "sim_msg": "refactor(get-component-themes): improve reducer legibility",
        "sim_diff": "diff --git a/packages/yoga/src/Theme/theme/theme.js b/packages/yoga/src/Theme/theme/theme.js @@ -5,12 +5,12 @@ import * as componentThemes from '../../**/*.theme.js';\nconst getComponentThemes = tokens => {\nconst { colors, baseFont, baseFontSize } = tokens;\nconst components = Object.entries(componentThemes).reduce(\n- (acc, [names, themed]) => {\n- const [, name] = names.split('$');\n+ (componentsStyles, [names, themed]) => {\n+ const [, name] = names.toLowerCase().split('$');\nreturn {\n- ...acc,\n- [name.toLowerCase()]: themed({\n+ ...componentsStyles,\n+ [name]: themed({\n...tokens,\ncolors,\nbaseFont,\n"
    },
    {
        "msg": "feat(server/webpack.base): add 'webpack-assets' and 'favicons-assets' to aliases\nfeat(server/webpack.base): add 'webpack-assets' and 'favicons-assets'\nto aliases",
        "diff": "diff --git a/webpack_config/server/webpack.base.js b/webpack_config/server/webpack.base.js @@ -65,7 +65,9 @@ const baseWebpackConfig = {\nextensions: isomorphicWebpackConfig.resolve.extensions,\nmodules: isomorphicWebpackConfig.resolve.modules,\nalias: {\n- ...isomorphicWebpackConfig.resolve.alias\n+ ...isomorphicWebpackConfig.resolve.alias,\n+ 'webpack-assets': `${CLIENT_DIST_PATH}/webpack-assets.json`,\n+ 'favicons-assets': `${CLIENT_DIST_PATH}/favicons-stats.json`\n// create_server: createServerAliasPath\n}\n},\n",
        "date": "06.09.2017 12:14:52",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "chore: CopyWebpackPlugin error on windows due to path separators",
        "sim_diff": "diff --git a/webpack.config.js b/webpack.config.js @@ -116,7 +116,7 @@ module.exports = function (env) {\nglobOptions: { ignore: '**/*.js' },\n},\n{\n- from: path.join(__dirname, `${CODE_SOURCE_DIR}/extension/legacy/**/*.css`),\n+ from: path.join(__dirname, `${CODE_SOURCE_DIR}/extension/legacy/**/*.css`).replace(/\\\\/g, '/'),\nto: path.join(__dirname, `${BUILD_PATH}/web-accessibles`),\ncontext: 'src/extension',\n},\n@@ -124,7 +124,7 @@ module.exports = function (env) {\nfrom: path.join(\n__dirname,\n`${CODE_SOURCE_DIR}/extension/legacy/features/l10n/locales/*.js`\n- ),\n+ ).replace(/\\\\/g, '/'),\nto: path.join(__dirname, `${BUILD_PATH}/web-accessibles`),\ncontext: 'src/extension',\n},\n"
    },
    {
        "msg": "feat: adding partner type to the list of partners",
        "diff": "diff --git a/common/constants/partners.js b/common/constants/partners.js import { s3 } from 'common/constants/urls';\n+export const PARTNER_TYPES = {\n+ PAID: 'PAID',\n+ KIND: 'IN-KIND',\n+};\n+\nconst partners = [\n{\nname: 'APEX Systems',\nlogoSource: `${s3}partnerLogos/apex_systems.png`,\nurl: 'https://apexsystems.com',\n+ type: PARTNER_TYPES.KIND,\n},\n{\nname: 'GitHub',\nlogoSource: `${s3}partnerLogos/github.png`,\nurl: 'https://github.com',\n+ type: PARTNER_TYPES.KIND,\n},\n{\nname: 'Slack',\nlogoSource: `${s3}partnerLogos/slack.png`,\nurl: 'https://slack.com/',\n+ type: PARTNER_TYPES.PAID,\n},\n{\nname: 'Heroku',\nlogoSource: `${s3}partnerLogos/heroku.png`,\nurl: 'https://heroku.com/',\n+ type: PARTNER_TYPES.KIND,\n},\n{\nname: '1Password',\nlogoSource: `${s3}partnerLogos/1password.png`,\nurl: 'https://1password.com/',\n+ type: PARTNER_TYPES.KIND,\n},\n{\nname: 'US Bank',\nlogoSource: `${s3}partnerLogos/usbank.png`,\nurl: 'https://usbank.com/index.html',\n+ type: PARTNER_TYPES.PAID,\n},\n{\nname: 'Threat Stack',\nlogoSource: `${s3}partnerLogos/threat_stack.png`,\nurl: 'https://threatstack.com',\n+ type: PARTNER_TYPES.PAID,\n},\n{\nname: \"O'Reilly Media\",\nlogoSource: `${s3}partnerLogos/oreilly.png`,\nurl: 'https://oreilly.com',\n+ type: PARTNER_TYPES.KIND,\n},\n{\nname: 'HackerRank',\nlogoSource: `${s3}partnerLogos/hackerrank.png`,\nurl: 'https://hackerrank.com',\n+ type: PARTNER_TYPES.KIND,\n},\n{\nname: 'Zapier',\nlogoSource: `${s3}partnerLogos/zapier.png`,\nurl: 'https://zapier.com',\n+ type: PARTNER_TYPES.KIND,\n},\n{\nname: 'LogRocket',\nlogoSource: `${s3}partnerLogos/logrocket.png`,\nurl: 'https://logrocket.com/',\n+ type: PARTNER_TYPES.KIND,\n},\n];\n",
        "date": "16.10.2019 13:22:30",
        "repo": "operationcode/front-end",
        "type": "feat",
        "sim_msg": "fix(emailpro): wrong guide urls for en subsidiary\nref:",
        "sim_diff": "diff --git a/packages/manager/modules/emailpro/src/emailpro.constants.js b/packages/manager/modules/emailpro/src/emailpro.constants.js @@ -68,26 +68,26 @@ export const EMAILPRO_CONFIG = {\nWE: '',\n},\nDOCS_HOME: {\n- CA: 'https://docs.ovh.com/gb/en/web/emails-pro',\n- CZ: 'https://docs.ovh.com/gb/en/web/emails-pro',\n- DE: 'https://docs.ovh.com/gb/en/web/emails-pro',\n- EN: 'https://docs.ovh.com/gb/en/web/emails-pro',\n- ES: 'https://docs.ovh.com/gb/en/web/emails-pro',\n- FI: 'https://docs.ovh.com/gb/en/web/emails-pro',\n+ CA: 'https://docs.ovh.com/gb/en/emails-pro',\n+ CZ: 'https://docs.ovh.com/gb/en/emails-pro',\n+ DE: 'https://docs.ovh.com/gb/en/emails-pro',\n+ EN: 'https://docs.ovh.com/gb/en/emails-pro',\n+ ES: 'https://docs.ovh.com/gb/en/emails-pro',\n+ FI: 'https://docs.ovh.com/gb/en/emails-pro',\nFR: 'https://docs.ovh.com/fr/emails-pro',\n- GB: 'https://docs.ovh.com/gb/en/web/emails-pro',\n- IE: 'https://docs.ovh.com/gb/en/web/emails-pro',\n- IT: 'https://docs.ovh.com/gb/en/web/emails-pro',\n- LT: 'https://docs.ovh.com/gb/en/web/emails-pro',\n- MA: 'https://docs.ovh.com/gb/en/web/emails-pro',\n- NL: 'https://docs.ovh.com/gb/en/web/emails-pro',\n- PL: 'https://docs.ovh.com/gb/en/web/emails-pro',\n- PT: 'https://docs.ovh.com/gb/en/web/emails-pro',\n- QC: 'https://docs.ovh.com/gb/en/web/emails-pro',\n- RU: 'https://docs.ovh.com/gb/en/web/emails-pro',\n- SN: 'https://docs.ovh.com/gb/en/web/emails-pro',\n- TN: 'https://docs.ovh.com/gb/en/web/emails-pro',\n- WE: 'https://docs.ovh.com/gb/en/web/emails-pro',\n+ GB: 'https://docs.ovh.com/gb/en/emails-pro',\n+ IE: 'https://docs.ovh.com/gb/en/emails-pro',\n+ IT: 'https://docs.ovh.com/gb/en/emails-pro',\n+ LT: 'https://docs.ovh.com/gb/en/emails-pro',\n+ MA: 'https://docs.ovh.com/gb/en/emails-pro',\n+ NL: 'https://docs.ovh.com/gb/en/emails-pro',\n+ PL: 'https://docs.ovh.com/gb/en/emails-pro',\n+ PT: 'https://docs.ovh.com/gb/en/emails-pro',\n+ QC: 'https://docs.ovh.com/gb/en/emails-pro',\n+ RU: 'https://docs.ovh.com/gb/en/emails-pro',\n+ SN: 'https://docs.ovh.com/gb/en/emails-pro',\n+ TN: 'https://docs.ovh.com/gb/en/emails-pro',\n+ WE: 'https://docs.ovh.com/gb/en/emails-pro',\n},\nDIAGNOSTIC: {\nCA:\n"
    },
    {
        "msg": "feat(PopoverContent): add x-out-of-boundaries attribute\nCloses",
        "diff": "diff --git a/src/PopperContent.js b/src/PopperContent.js @@ -151,8 +151,8 @@ class PopperContent extends React.Component {\nmodifiers={extendedModifiers}\nplacement={placement}\n>\n- {({ ref, style, placement, arrowProps }) => (\n- <div ref={ref} style={style} className={popperClassName} x-placement={placement}>\n+ {({ ref, style, placement, outOfBoundaries, arrowProps }) => (\n+ <div ref={ref} style={style} className={popperClassName} x-placement={placement} x-out-of-boundaries={outOfBoundaries ? 'true' : undefined}>\n{children}\n{!hideArrow && <span ref={arrowProps.ref} className={arrowClassName} style={arrowProps.style} />}\n</div>\n",
        "date": "12.05.2020 20:14:43",
        "repo": "reactstrap/reactstrap",
        "type": "feat",
        "sim_msg": "fix: replace post link from modal",
        "sim_diff": "diff --git a/src/client/post/PostModal.js b/src/client/post/PostModal.js @@ -120,7 +120,7 @@ class PostModal extends React.Component {\n<a role=\"presentation\" onClick={this.handleHidePostModal} className=\"PostModal__action\">\n<i className=\"iconfont icon-close PostModal__icon\" />\n</a>\n- <Link to={`/@${author}/${permlink}`} className=\"PostModal__action\">\n+ <Link replace to={`/@${author}/${permlink}`} className=\"PostModal__action\">\n<i className=\"iconfont icon-send PostModal__icon\" />\n</Link>\n<a href={twitterShareURL} target=\"_blank\" className=\"PostModal__action\">\n"
    },
    {
        "msg": "feat(dumper): More robust",
        "diff": "diff --git a/src/platforms/browser/dumper.js b/src/platforms/browser/dumper.js @@ -115,6 +115,7 @@ BiwaScheme.Dumper = BiwaScheme.Class.create({\n},\ndump_closure: function(cls){\n+ if(!cls) return \"**BROKEN**\";\nif(cls.length == 0) return \"[]\";\nvar cls_num = null;\n@@ -127,7 +128,7 @@ BiwaScheme.Dumper = BiwaScheme.Class.create({\n}\nvar c = _.clone(cls);\n- var body = c.shift();\n+ var body = c.shift && c.shift();\nreturn [\n\"c\", cls_num, \" <span class='dump_closure'>free vars :</span> \",\nthis.dump_obj(c), \" <span class='dump_closure'>body :</span> \",\n",
        "date": "03.01.2020 19:27:33",
        "repo": "biwascheme/biwascheme",
        "type": "feat",
        "sim_msg": "fix: remove whitespace",
        "sim_diff": "diff --git a/src/lib/util.js b/src/lib/util.js @@ -1594,7 +1594,7 @@ const util = {\n*/\nhtmlRemoveWhiteSpace: function (html) {\nif (!html) return '';\n- return html.trim().replace(/<\\/?(?!strong|span|font|b|var|i|em|u|ins|s|strike|del|sub|sup|mark|a|label|code|summary)[^>^<]+>\\s+(?=<)/ig, function (m) { return m.trim(); });\n+ return html.trim().replace(/<\\/?(?!strong|span|font|b|var|i|em|u|ins|s|strike|del|sub|sup|mark|a|label|code|summary)[^>^<]+>\\s+(?=<)/ig, function (m) { return m.replace(/\\n/g, '').replace(/\\s+/, ' '); });\n},\n/**\n"
    },
    {
        "msg": "feat(babel-loader): add supportsStaticESM option",
        "diff": "diff --git a/packages/razzle/config/babel-loader/razzle-babel-loader.js b/packages/razzle/config/babel-loader/razzle-babel-loader.js @@ -64,6 +64,7 @@ module.exports = babelLoader.custom(function(babel) {\nisServer: opts.isServer,\nisModern: opts.isModern,\nhasModern: opts.hasModern,\n+ supportsStaticESM: opts.supportsStaticESM,\ndevelopment: opts.development,\nshouldUseReactRefresh: opts.shouldUseReactRefresh,\n};\n@@ -101,6 +102,7 @@ module.exports = babelLoader.custom(function(babel) {\ndelete loader.distDir;\ndelete loader.isModern;\ndelete loader.hasModern;\n+ delete loader.supportsStaticESM;\ndelete loader.development;\ndelete loader.shouldUseReactRefresh;\nreturn { loader, custom };\n@@ -112,6 +114,7 @@ module.exports = babelLoader.custom(function(babel) {\nconst isServer = customOptions.isServer;\nconst isModern = customOptions.isModern;\nconst hasModern = customOptions.hasModern;\n+ const supportsStaticESM = customOptions.supportsStaticESM;\nconst development = customOptions.development;\nconst shouldUseReactRefresh = customOptions.shouldUseReactRefresh;\n@@ -134,6 +137,7 @@ module.exports = babelLoader.custom(function(babel) {\npresetOptions.caller.isServer = isServer;\npresetOptions.caller.isModern = isModern;\npresetOptions.caller.isDev = development;\n+ presetOptions.caller.supportsStaticESM = supportsStaticESM;\nconst emitWarning = this.emitWarning.bind(this);\nObject.defineProperty(presetOptions.caller, 'onWarning', {\n",
        "date": "01.02.2021 18:29:11",
        "repo": "jaredpalmer/razzle",
        "type": "feat",
        "sim_msg": "refactor: cleanup craco config",
        "sim_diff": "diff --git a/craco.config.js b/craco.config.js const path = require('path')\n-const fs = require('fs-extra')\n-const HtmlWebpackPlugin = require('html-webpack-plugin')\n-const webpack = require('webpack')\nconst { addBeforeLoader, getLoaders, loaderByName } = require('@craco/craco')\nconst BabelRcPlugin = require('@jackwilsdon/craco-use-babelrc')\n+const fastRefreshCracoPlugin = require('craco-fast-refresh')\n+const fs = require('fs-extra')\n+const HtmlWebpackPlugin = require('html-webpack-plugin')\nconst MiniCssExtractPlugin = require('mini-css-extract-plugin')\nconst OptimizeCSSAssetsPlugin = require('optimize-css-assets-webpack-plugin')\n-const TerserPlugin = require('terser-webpack-plugin')\n-const fastRefreshCracoPlugin = require('craco-fast-refresh')\nconst ReactRefreshWebpackPlugin = require('@pmmmwh/react-refresh-webpack-plugin')\n+const TerserPlugin = require('terser-webpack-plugin')\n+const webpack = require('webpack')\nmodule.exports = {\nplugins: [{ plugin: BabelRcPlugin }, { plugin: fastRefreshCracoPlugin }],\n@@ -71,13 +71,18 @@ module.exports = {\n)\n}\n+ // Support React hot-reloading\nwebpackConfig.entry = [\nrequire.resolve('react-dev-utils/webpackHotDevClient'),\npaths.appIndexJs\n]\n+\n+ // Allow for manual configuration of optimization plugins\nwebpackConfig.optimization = {\nminimizer: [new TerserPlugin(), new OptimizeCSSAssetsPlugin({})]\n}\n+\n+ // Custom plugins to allow trimet-mod-otp integration\nwebpackConfig.plugins = [\nnew ReactRefreshWebpackPlugin(),\nnew HtmlWebpackPlugin({\n@@ -94,12 +99,17 @@ module.exports = {\nYAML_CONFIG: JSON.stringify(YAML_CONFIG)\n})\n]\n+\n+ // Enable hot-reloading\nwebpackConfig.devServer = {\nhot: true,\nstatic: './dist'\n}\n+\n+ // Make source-maps useful\nwebpackConfig.devtool = 'eval-cheap-module-source-map'\n+ // Match mastarm behavior\nwebpackConfig.output = {\nfilename: 'bundle.js',\npath: path.join(__dirname, '/dist'),\n"
    },
    {
        "msg": "feat: support ctrl+l to clear\nAnd refactor the stdin handling",
        "diff": "diff --git a/lib/nodemon.js b/lib/nodemon.js @@ -96,45 +96,54 @@ function nodemon(settings) {\n});\n// echo out notices about running state\n- if (config.options.stdin && config.options.restartable) {\n- // allow nodemon to restart when the use types 'rs\\n'\n- process.stdin.resume();\n- process.stdin.setEncoding('utf8');\n- process.stdin.on('data', function (data) {\n- data = (data + '').trim().toLowerCase();\n-\n- // if the keys entered match the restartable value, then restart!\n- if (data === config.options.restartable) {\n- bus.emit('restart');\n- }\n- });\n- } else if (config.options.stdin) {\n- // if 'restartable' is disabled (via a nodemon.json)\n- // then it's possible we're being used with a REPL\n+ if (config.options.stdin) {\n// so let's make sure we don't eat the key presses\n// but also, since we're wrapping, watch out for\n- // special keys, like ctrl+c x 2 or '.exit' or ctrl+d\n+ // special keys, like ctrl+c x 2 or '.exit' or ctrl+d or ctrl+l\nvar ctrlC = false;\nvar buffer = '';\n+ const rs = config.options.restartable;\n+ process.stdin.setEncoding('utf8');\nprocess.stdin.on('data', function (data) {\n- buffer += data;\ndata = data.toString();\n- var chr = data.charCodeAt(0);\n+ buffer += data;\n+ const chr = data.charCodeAt(0);\n+\n+ // if restartable, echo back\n+ if (rs) {\n+ if (chr === 13) {\n+ process.stdout.write('\\n');\n+ }\n+ // this prevents cursor keys from working.\n+ process.stdout.write(String.fromCharCode(chr));\n+ }\n+\nif (chr === 3) {\n- if (ctrlC) {\n- process.exit();\n+ // if restartable, assume ctrl+c will break immediately\n+ if (ctrlC || rs) {\n+ process.exit(rs ? 1 : 0);\n}\nctrlC = true;\n- } else if (buffer === '.exit' || chr === 4) {\n+ return;\n+ } else if (buffer === '.exit' || chr === 4) { // ctrl+d\nprocess.exit();\n- } else if (ctrlC || chr === 10) {\n- ctrlC = false;\n+ } else if (chr === 13 || chr === 10) { // enter / carriage return\n+ const input = buffer.toString().trim().toLowerCase();\n+ if (input === rs) {\n+ bus.emit('restart');\n+ }\n+ buffer = '';\n+ } else if (chr === 12) { // ctrl+l\n+ console.clear();\nbuffer = '';\n}\n+ ctrlC = false;\n});\n+ if (process.stdin.setRawMode) {\nprocess.stdin.setRawMode(true);\n}\n+ }\nif (config.options.restartable) {\nutils.log.info('to restart at any time, enter `' +\n",
        "date": "10.07.2018 18:41:45",
        "repo": "remy/nodemon",
        "type": "feat",
        "sim_msg": "refactor(buffer): add a more robust workaround for feross/safe-buffer#23\nFix",
        "sim_diff": "diff --git a/lib/types/buffer.js b/lib/types/buffer.js @@ -8,7 +8,8 @@ const Binary = require('../driver').get().Binary;\nconst utils = require('../utils');\nconst Buffer = require('safe-buffer').Buffer;\n-const NodeBuffer = global.Buffer || Buffer;\n+// Yes this is weird. See https://github.com/feross/safe-buffer/pull/23\n+const proto = Buffer.from('').constructor.prototype;\n/**\n* Mongoose Buffer constructor.\n@@ -134,7 +135,7 @@ MongooseBuffer.mixin = {\n*/\nwrite: function() {\n- const written = NodeBuffer.prototype.write.apply(this, arguments);\n+ const written = proto.write.apply(this, arguments);\nif (written > 0) {\nthis._markModified();\n@@ -157,7 +158,7 @@ MongooseBuffer.mixin = {\n*/\ncopy: function(target) {\n- const ret = NodeBuffer.prototype.copy.apply(this, arguments);\n+ const ret = proto.copy.apply(this, arguments);\nif (target && target.isMongooseBuffer) {\ntarget._markModified();\n@@ -181,11 +182,11 @@ MongooseBuffer.mixin = {\n'writeUInt16LE writeUInt16BE writeUInt32LE writeUInt32BE ' +\n'writeInt16LE writeInt16BE writeInt32LE writeInt32BE ' + 'writeFloatLE writeFloatBE writeDoubleLE writeDoubleBE')\n).split(' ').forEach(function(method) {\n- if (!NodeBuffer.prototype[method]) {\n+ if (!proto[method]) {\nreturn;\n}\nMongooseBuffer.mixin[method] = function() {\n- const ret = NodeBuffer.prototype[method].apply(this, arguments);\n+ const ret = proto[method].apply(this, arguments);\nthis._markModified();\nreturn ret;\n};\n"
    },
    {
        "msg": "feat: update Single Page Applications section",
        "diff": "diff --git a/website/pages/docs/single-page-applications.md b/website/pages/docs/single-page-applications.md -# [Single Page Applications](https://github.com/jaredpalmer/razzle/blob/master/examples/basic-spa/)\n+# Single Page Applications\nIn addition to universal/isomorphic applications, Razzle can build single page (or client-only) applications. To do this, remove `index.js` and `server.js` from the src folder, and create an `index.html` file inside the public folder with the following template:\n-```\n+```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n",
        "date": "06.10.2020 01:58:08",
        "repo": "jaredpalmer/razzle",
        "type": "feat",
        "sim_msg": "docs: update wildcard recipe md\n[skip ci]",
        "sim_diff": "diff --git a/recipes/redirect_uri_wildcards.md b/recipes/redirect_uri_wildcards.md ## `redirect_uri`\n-Install the `wildcards` package.\n+Install the `wildcard` package.\n```console\n-npm i wildcard\n+npm i wildcard@^1.1.2\n```\nUpdate whatever file holds your provider, e.g. `index.js` where the provider instance Client\n"
    },
    {
        "msg": "feat(Switch): test",
        "diff": "diff --git a/packages/element3/packages/switch/__tests__/Switch.spec.js b/packages/element3/packages/switch/__tests__/Switch.spec.js @@ -162,4 +162,17 @@ describe('Switch', () => {\nexpect(wrapper.emitted('update:modelValue')).toEqual([['3']])\n})\n+ it('handleClick', async () => {\n+ const wrapper = mount(Switch, {\n+ props: {\n+ isChecked: true,\n+ disabled: false,\n+ activeValue: '2',\n+ inactiveValue: '3'\n+ }\n+ })\n+ await wrapper.find('.el-switch').trigger('click')\n+ expect(wrapper.emitted('update:modelValue')).toEqual([['3'], ['2']])\n+ expect(wrapper.emitted('update:change')).toEqual([['2']])\n+ })\n})\n",
        "date": "15.12.2020 12:10:38",
        "repo": "hug-sun/element3",
        "type": "feat",
        "sim_msg": "test(wrapper): split disabled attribute tests for invalid and invalid elements",
        "sim_diff": "diff --git a/test/specs/wrapper/trigger.spec.js b/test/specs/wrapper/trigger.spec.js @@ -120,23 +120,46 @@ describeWithShallowAndMount('trigger', mountingMethod => {\nexpect(stub).calledWith(123)\n})\n- it('does not fire on disabled elements', () => {\n+ it('does not fire on valid disabled elements', () => {\nconst clickHandler = sandbox.stub()\n- const TestComponent = {\n- template:\n- '<div><button disabled @click=\"clickHandler\"/><a href=\"#\" disabled @click=\"clickHandler\"/></div>',\n+ const ButtonComponent = {\n+ template: '<button disabled @click=\"clickHandler\">Button</button>',\nprops: ['clickHandler']\n}\n- const wrapper = mountingMethod(TestComponent, {\n+ const buttonWrapper = mountingMethod(ButtonComponent, {\npropsData: {\nclickHandler\n}\n})\n-\n- wrapper.find('button').trigger('click')\n+ buttonWrapper.trigger('click')\nexpect(clickHandler.called).to.equal(false)\n- wrapper.find('a').trigger('click')\n+ const changeHandler = sandbox.stub()\n+ const InputComponent = {\n+ template: '<input disabled @change=\"changeHandler\"/>',\n+ props: ['changeHandler']\n+ }\n+ const inputWrapper = mountingMethod(InputComponent, {\n+ propsData: {\n+ changeHandler\n+ }\n+ })\n+ inputWrapper.trigger('change')\n+ expect(changeHandler.called).to.equal(false)\n+ })\n+\n+ it('fires on invalid disabled elements', () => {\n+ const clickHandler = sandbox.stub()\n+ const LinkComponent = {\n+ template: '<a disabled href=\"#\" @click=\"clickHandler\">Link</a>',\n+ props: ['clickHandler']\n+ }\n+ const linkWrapper = mountingMethod(LinkComponent, {\n+ propsData: {\n+ clickHandler\n+ }\n+ })\n+ linkWrapper.trigger('click')\nexpect(clickHandler.called).to.equal(true)\n})\n"
    },
    {
        "msg": "feat(Glo): add Glo component",
        "diff": "diff --git a/components/Glo/index.js b/components/Glo/index.js -import 'glo/js/namespace';\n-import 'glo/js/coordinates.js';\n-import 'glo/js/node_group.js';\n-import 'glo/js/canvas.js';\n-import 'glo/js/node_generation.js';\n-import 'glo/js/edge_generation.js';\n-import 'glo/js/helpers.js';\n-import 'glo/js/glo.js';\n-import 'glo/js/api.js';\n-import 'glo/js/techniques.js';\n-import 'glo/js/figures.js';\n-\n-import * as d3 from 'd3';\n+import d3 from 'glo/node_modules/d3';\n+import GLO from 'glo';\nimport VisComponent from '../../VisComponent';\n+const colorNodes = (glo, field, type) => {\n+ glo.glo.node_attr({\n+ [field]: type\n+ });\n+\n+ glo.glo.color_nodes_by(field);\n+};\n+\nexport default class Glo extends VisComponent {\n- constructor (el, {nodes, edges, width = 960, height = 540}) {\n+ constructor (el, {nodes, edges, nodeAttr, edgeAttr, width = 960, height = 540}) {\nsuper(el);\n// Empty the top-level div.\n@@ -32,15 +29,85 @@ export default class Glo extends VisComponent {\n// Construct a GLO object.\nthis.glo = new GLO.GLO(d3.select(this.svg))\n.nodes(nodes)\n- .edges(edges)\n- .draw();\n-\n- console.log('Glo.constructor()');\n- console.log('this.glo', this.glo);\n+ .edges(edges);\n}\nrender () {\n- console.log('Glo.render()');\n- console.log('GLO object', GLO);\n+ this.glo.draw();\n+ }\n+\n+ colorNodesDiscrete (field) {\n+ colorNodes(this, field, 'discrete');\n+ }\n+\n+ colorNodesContinuous(field) {\n+ colorNodes(this, field, 'continuous');\n+ }\n+\n+ colorNodesDefault () {\n+ this.glo.color_nodes_by_constant();\n+ }\n+\n+ sizeNodes (field) {\n+ this.glo.node_attr({\n+ [field]: 'continuous'\n+ });\n+\n+ this.glo.size_nodes_by(field);\n+ }\n+\n+ sizeNodesDefault () {\n+ this.glo.size_nodes_by_constant();\n+ }\n+\n+ distributeNodes(axis, attr = null) {\n+ if (attr === null) {\n+ this.glo.evenly_distribute_nodes_on(axis);\n+ } else {\n+ this.glo.evenly_distribute_nodes_on(axis, {\n+ by: attr\n+ });\n+ }\n+ }\n+\n+ positionNodes(axis, value) {\n+ this.glo.node_attr({\n+ [value]: 'continuous'\n+ });\n+\n+ this.glo.position_nodes_on(axis, value);\n+ }\n+\n+ forceDirected () {\n+ this.glo.apply_force_directed_algorithm_to_nodes();\n+ }\n+\n+ showEdges () {\n+ this.glo.show_all_edges();\n+ }\n+\n+ hideEdges () {\n+ this.glo.hide_edges();\n+ }\n+\n+ fadeEdges () {\n+ this.glo.show_edges_as_faded();\n+ }\n+\n+ solidEdges () {\n+ this.hideEdges();\n+ this.showEdges();\n+ }\n+\n+ incidentEdges () {\n+ this.glo.show_incident_edges();\n+ }\n+\n+ curvedEdges () {\n+ this.glo.display_edges_as_curved_lines();\n+ }\n+\n+ straightEdges () {\n+ this.glo.display_edges_as_straight_lines();\n}\n}\n",
        "date": "04.05.2017 16:30:57",
        "repo": "kitware/candela",
        "type": "feat",
        "sim_msg": "fix: node edge pos in group",
        "sim_diff": "diff --git a/src/canvas/baseCanvas.js b/src/canvas/baseCanvas.js @@ -2692,12 +2692,25 @@ class BaseCanvas extends Canvas {\norientation: link.targetEndpoint.orientation ? link.targetEndpoint.orientation : undefined\n};\n} else if (link.type === 'node') {\n+ let _getNodePos = (node, attr) => {\n+ let result = 0;\n+ let queue = [node.group];\n+ while(queue.length > 0) {\n+ let groupId = queue.pop();\n+ let group = this.getGroup(groupId);\n+ if (group) {\n+ result += group[attr];\n+ group.group && queue.push(group.group);\n+ }\n+ }\n+ return result;\n+ }\n_soucePoint = {\n- pos: [link.sourceNode.left + link.sourceNode.getWidth(true) / 2, link.sourceNode.top + link.sourceNode.getHeight(true) / 2]\n+ pos: [link.sourceNode.left + link.sourceNode.getWidth(true) / 2 + _getNodePos(link.sourceNode, 'left'), link.sourceNode.top + link.sourceNode.getHeight(true) / 2 + _getNodePos(link.sourceNode, 'top')]\n};\n_targetPoint = {\n- pos: [link.targetNode.left + link.targetNode.getWidth(true) / 2, link.targetNode.top + link.targetNode.getHeight(true) / 2]\n+ pos: [link.targetNode.left + link.targetNode.getWidth(true) / 2 + _getNodePos(link.targetNode, 'left'), link.targetNode.top + link.targetNode.getHeight(true) / 2 + _getNodePos(link.targetNode, 'top')]\n};\n}\nlink.redraw(_soucePoint, _targetPoint);\n"
    },
    {
        "msg": "feat(Dashboard): remove old redux stuff from Dashboard container\nfeat(Dashboard): remove old redux stuff from Dashboard container",
        "diff": "diff --git a/src/common/containers/Dashboard/index.jsx b/src/common/containers/Dashboard/index.jsx // @flow\nimport React, {Component} from 'react'\nimport {connect} from 'react-redux'\n-import {Loader} from 'semantic-ui-react'\nimport {Helmet} from 'react-helmet'\n-//\nimport DashboardComponent from './components'\n-import {GET_POSTS} from 'actions/posts'\n-import {getEntitiesPostsState} from 'selectors'\n+\nimport type {GlobalState} from 'reducers'\n-type Props = {\n- posts: Object,\n- postsLoaded: boolean,\n- postsLoading: boolean,\n- count: number,\n- getPosts: () => void\n-}\n+type Props = any\nclass Dashboard extends Component {\nprops: Props\n- componentDidMount () {\n- this.props.getPosts()\n- }\n-\nrender () {\n- const {posts, postsLoaded, postsLoading, count} = this.props\nreturn (\n<div>\n<Helmet>\n<title>Noir:Dashboard</title>\n</Helmet>\n- {postsLoaded\n- ? <DashboardComponent\n- {...{posts, postsLoaded, postsLoading, count}}\n- />\n- : <Loader active>Loading...</Loader>}\n+ <DashboardComponent />\n</div>\n)\n}\n}\nfunction mapStateToProps (state: GlobalState) {\n- const postsState = getEntitiesPostsState(state)\n- const postsLoaded = postsState.isLoaded\n- const postsLoading = postsState.isLoading\n- const posts = postsState.entities\n- const {count} = postsState\n- return {\n- posts,\n- postsLoading,\n- postsLoaded,\n- count\n- }\n+ return {}\n}\nfunction mapDispatchToProps (dispatch) {\n- return {\n- getPosts () {\n- dispatch(GET_POSTS())\n- }\n- }\n+ return {}\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard)\n",
        "date": "30.09.2017 14:35:18",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "refactor: defer rendering App until ready",
        "sim_diff": "diff --git a/renderer/containers/Root.js b/renderer/containers/Root.js @@ -38,6 +38,7 @@ class Root extends React.Component {\nhistory: PropTypes.object.isRequired,\ninitSettings: PropTypes.func.isRequired,\ninitTheme: PropTypes.func.isRequired,\n+ isAppReady: PropTypes.bool.isRequired,\nisLoading: PropTypes.bool.isRequired,\nisMounted: PropTypes.bool.isRequired,\nloadingMessage: PropTypes.object,\n@@ -81,6 +82,7 @@ class Root extends React.Component {\nnotifications,\nhistory,\nisLoading,\n+ isAppReady,\nloadingMessage,\n} = this.props\n@@ -123,7 +125,15 @@ class Root extends React.Component {\npath=\"/syncing\"\nrender={() => <Syncing onClose={this.redirectToLogout} pb={0} px={0} />}\n/>\n- <Route component={App} path=\"/app\" />\n+ <Route\n+ path=\"/app\"\n+ render={() => {\n+ if (!isAppReady) {\n+ return null\n+ }\n+ return <App />\n+ }}\n+ />\n<Route component={Logout} path=\"/logout\" />\n</Switch>\n</PageWithLoading>\n@@ -141,6 +151,7 @@ const mapStateToProps = state => ({\nisLoading: isLoading(state) || isLoadingPerPath(state),\nloadingMessage: getLoadingMessage(state),\nisMounted: appSelectors.isMounted(state),\n+ isAppReady: appSelectors.isAppReady(state),\n})\nconst mapDispatchToProps = {\n"
    },
    {
        "msg": "feat(webpack.isomorphic): add i18n folder to aliases\nfeat(webpack.isomorphic): add i18n folder to aliases",
        "diff": "diff --git a/webpack_config/webpack.isomorphic.js b/webpack_config/webpack.isomorphic.js @@ -25,6 +25,7 @@ export default {\n// Aliases that both server and client use\n// Probably, it's a bad example, because here we defined only client's aliases.\nalias: {\n+ i18n: `${srcCommonPath}/i18n/`,\nactions: `${srcCommonPath}/actions/`,\napi: `${srcCommonPath}/api/`,\ncomponents: `${srcCommonPath}/components/`,\n",
        "date": "06.09.2017 12:14:23",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "build(webpack): production outputs with and without polyfill",
        "sim_diff": "diff --git a/webpack.config.js b/webpack.config.js @@ -68,4 +68,18 @@ if (devMode) {\n}))\n}\n-module.exports = config\n+module.exports = devMode\n+ // single config object for dev server\n+ ? config\n+ // production outputs with and without polyfill\n+ : [\n+ config,\n+ {\n+ ...config,\n+ output: {\n+ ...output,\n+ path: path.join(output.path, 'root')\n+ },\n+ externals\n+ }\n+ ]\n"
    },
    {
        "msg": "feat(server): add useragent middleware\nfeat(server): add useragent middleware",
        "diff": "diff --git a/src/server/middlewares/index.js b/src/server/middlewares/index.js @@ -8,6 +8,7 @@ import compression from 'compression'\nimport cookieParser from 'cookie-parser'\nimport bodyParser from 'body-parser'\nimport morgan from 'morgan'\n+import useragent from 'express-useragent'\nimport authMiddleware from './auth'\nexport default (app: express$Application): express$Application => {\n@@ -22,6 +23,7 @@ export default (app: express$Application): express$Application => {\n})\n)\napp.use(bodyParser.json())\n+ app.use(useragent.express())\napp.use(authMiddleware)\nreturn app\n",
        "date": "17.09.2017 14:26:26",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "feat: add route for tags",
        "sim_diff": "diff --git a/src/server.js b/src/server.js @@ -21,6 +21,12 @@ app.prepare()\n// app.render(req, res, actualPage, queryParams);\n// });\n+ server.get(\"/tag/:slug\", (req, res) => {\n+ const actualPage = \"/\";\n+ const queryParams = { slug: req.params.slug };\n+ app.render(req, res, actualPage, queryParams);\n+ });\n+\nserver.get(\"*\", (req, res) => handle(req, res));\n/* END EXPRESS ROUTES */\n"
    },
    {
        "msg": "feat: checks for `$grid-row-columns`",
        "diff": "diff --git a/scss/mixins/_grid.scss b/scss/mixins/_grid.scss @include make-col-auto();\n}\n+ @if $grid-row-columns > 0 {\n@for $i from 1 through $grid-row-columns {\n.row-cols#{$infix}-#{$i} {\n@include row-cols($i);\n}\n}\n+ }\n.col#{$infix}-auto {\n@include make-col-auto();\n",
        "date": "16.04.2020 20:15:51",
        "repo": "coreui/coreui",
        "type": "feat",
        "sim_msg": "feat(layout/grid): move to with property for grid items",
        "sim_diff": "diff --git a/components/layout/grid/src/index.scss b/components/layout/grid/src/index.scss @include grid-align-items($ai-layout-grid);\n@include grid-justify-content($jc-layout-grid);\n+ @include media-breakpoint-up(s) {\n+ flex-wrap: nowrap;\n+ }\n+\n&-item {\nbox-sizing: border-box;\nflex-grow: 0;\nmargin: 0;\n+ min-width: 100%;\npadding: 0 $layout-grid-gap;\n@include grid-item-sizes($breakpoints, $grid-columns);\n}\n"
    },
    {
        "msg": "feat: Add banner",
        "diff": "diff --git a/rollup.config.js b/rollup.config.js import { terser } from \"rollup-plugin-terser\"\n+import { VERSION } from \"./src/version.js\";\n+\n+const banner = `/*\n+ * BiwaScheme ${VERSION} - R6RS/R7RS Scheme in JavaScript\n+ *\n+ * Copyright (c) 2007-${(new Date).getFullYear()} Yutaka HARA (http://www.biwascheme.org/)\n+ * Licensed under the MIT license.\n+ */`\nexport default {\n- plugins: [\n- terser({ output: { comments: /@license/i } }),\n- ],\ninput: \"src/main-browser.js\",\noutput: [\n{\n@@ -11,13 +16,15 @@ export default {\nformat: \"iife\",\nname: \"BiwaScheme\",\nstrict: false,\n+ banner: banner,\n},\n{\nfile: \"release/biwascheme-min.js\",\nformat: \"iife\",\nname: \"BiwaScheme\",\nstrict: false,\n- plugins: [terser()],\n+ banner: banner,\n+ plugins: [terser({output: {comments: /Copyright/}})],\n},\n]\n}\n",
        "date": "26.06.2020 00:15:43",
        "repo": "biwascheme/biwascheme",
        "type": "feat",
        "sim_msg": "build(rollup): remove babel",
        "sim_diff": "diff --git a/rollup.config.js b/rollup.config.js import commonjs from 'rollup-plugin-commonjs';\nimport resolve from 'rollup-plugin-node-resolve';\nimport { uglify } from 'rollup-plugin-uglify';\n-import babel from 'rollup-plugin-babel';\n-import { terser } from 'rollup-plugin-terser';\n-import { main, module, dependencies, peerDependencies } from './package.json';\n+import { main, dependencies, peerDependencies } from './package.json';\nexport default [\n{\n@@ -17,19 +15,6 @@ export default [\n...Object.keys(dependencies || {}),\n...Object.keys(peerDependencies || {}),\n],\n- plugins: [babel(), uglify(), resolve(), commonjs()],\n- },\n- {\n- input: './src/index.js',\n- output: {\n- file: module,\n- format: 'es',\n- indent: false,\n- },\n- external: [\n- ...Object.keys(dependencies || {}),\n- ...Object.keys(peerDependencies || {}),\n- ],\n- plugins: [resolve(), babel(), terser(), commonjs()],\n+ plugins: [resolve(), commonjs(), uglify()],\n},\n];\n"
    },
    {
        "msg": "feat(config): Change to temporary credentials",
        "diff": "diff --git a/config/environment.js b/config/environment.js /* eslint-env node */\nmodule.exports = function(environment) {\n- let ALGOLIA_APP_ID = process.env.ALGOLIA_APP_ID || 'BH4D9OD16A';\n- let ALGOLIA_API_KEY = process.env.ALGOLIA_API_KEY || '92d3556bc9a494d48e7054fbb4c4ce6f';\n+ let ALGOLIA_APP_ID = process.env.ALGOLIA_APP_ID || 'N4SO04CV0R';\n+ let ALGOLIA_API_KEY = process.env.ALGOLIA_API_KEY || '0b28a7a3adf986fa5d402567d9d8b850';\nlet ENV = {\nmodulePrefix: 'ember-api-docs',\n",
        "date": "16.08.2017 22:17:51",
        "repo": "ember-learn/ember-api-docs",
        "type": "feat",
        "sim_msg": "chore: update env var for admin key",
        "sim_diff": "diff --git a/gatsby-config.js b/gatsby-config.js @@ -2,6 +2,7 @@ require(`@babel/register`)({\npresets: ['@babel/preset-env', '@babel/preset-react'],\nplugins: ['@babel/plugin-transform-runtime'],\n})\n+\nconst { DateTime } = require('luxon')\nconst algoliaQueries = require('./src/utilities/algolia').queries\n@@ -30,7 +31,7 @@ module.exports = {\nresolve: `gatsby-plugin-algolia`,\noptions: {\nappId: process.env.GATSBY_ALGOLIA_APP_ID,\n- apiKey: process.env.GATSBY_ALGOLIA_ADMIN_KEY,\n+ apiKey: process.env.ALGOLIA_ADMIN_KEY,\nqueries: algoliaQueries,\nchunkSize: 5000,\n},\n"
    },
    {
        "msg": "feat: keep contrast on `.table-dark`\nIn case we set `$body-bg` to a dark color, we have to keep table contrast relevant.",
        "diff": "diff --git a/scss/_variables.scss b/scss/_variables.scss @@ -343,7 +343,7 @@ $table-dark-bg: $gray-900 !default;\n$table-dark-accent-bg: rgba($white, .05) !default;\n$table-dark-hover-bg: rgba($white, .075) !default;\n$table-dark-border-color: lighten($gray-900, 7.5%) !default;\n-$table-dark-color: $body-bg !default;\n+$table-dark-color: $white !default;\n$table-striped-order: odd !default;\n",
        "date": "16.09.2018 11:06:53",
        "repo": "coreui/coreui",
        "type": "feat",
        "sim_msg": "feat(theming): updated purple for light theme",
        "sim_diff": "diff --git a/scss/overrides_default/_variables.scss b/scss/overrides_default/_variables.scss @@ -6,7 +6,7 @@ $enable-gradients: true;\n$blue: #08c !default;\n$indigo: #6c94bc !default;\n-$purple: #6f42c1 !default;\n+$purple: #9d67ff !default;\n$pink: #e83e8c !default;\n$red: #ee5f5b !default;\n$orange: #f89406 !default;\n"
    },
    {
        "msg": "feat: Can filter based on public key",
        "diff": "diff --git a/frontend/leaderboard/src/Metrics.re b/frontend/leaderboard/src/Metrics.re @@ -238,6 +238,9 @@ let calculateAllUsers = metrics => {\nlet echoBotPublicKeys = [\n\"B62qndJi5mnRoBZ8SAYDM1oR2SgAk5WpZC8hGpJUZ4e64kDHGbFMeLJ\",\n];\n+\n+let excludePublicKeys = [];\n+\nlet calculateMetrics = blocks => {\nlet blocksCreated = getBlocksCreatedByUser(blocks);\nlet transactionSent = getTransactionSentByUser(blocks);\n@@ -257,6 +260,7 @@ let calculateMetrics = blocks => {\nthrowAwayValues(coinbaseReceiverChallenge),\nthrowAwayValues(createAndSendToken),\n])\n+ |> StringMap.filter((key, _) => {!List.mem(key, excludePublicKeys)})\n|> StringMap.mapi((key, _) =>\n{\nTypes.Metrics.blocksCreated: StringMap.find_opt(key, blocksCreated),\n",
        "date": "29.12.2020 17:15:41",
        "repo": "minaprotocol/mina",
        "type": "feat",
        "sim_msg": "fix: set right path for near",
        "sim_diff": "diff --git a/src/utils/derivationPath.js b/src/utils/derivationPath.js @@ -15,7 +15,6 @@ const getBitcoinDerivationPath = (walletType, coinType, index) => {\n}\nconst getEthereumBasedDerivationPath = (coinType, index) => `m/44'/${coinType}'/${index}'/0/0`\n-\nconst derivationPaths = {\n[ChainId.Bitcoin]: (network, index, walletType = 'default') => {\nconst bitcoinNetwork = ChainNetworks[ChainId.Bitcoin][network]\n@@ -41,8 +40,8 @@ const derivationPaths = {\nreturn getEthereumBasedDerivationPath(ethNetwork.coinType, index)\n},\n[ChainId.Near]: (network, index) => {\n- const ethNetwork = ChainNetworks[ChainId.Near][network]\n- return getEthereumBasedDerivationPath(ethNetwork.coinType, index)\n+ const nearNetwork = ChainNetworks[ChainId.Near][network]\n+ return `m/44'/${nearNetwork.coinType}'/${index}'`\n},\n[ChainId.Polygon]: (network, index) => {\nconst ethNetwork = ChainNetworks[ChainId.Polygon][network]\n"
    },
    {
        "msg": "feat: declare ViewOptions in vega-typings",
        "diff": "diff --git a/packages/vega-typings/types/runtime/index.d.ts b/packages/vega-typings/types/runtime/index.d.ts @@ -55,10 +55,7 @@ export interface ToCanvasOptions {\nexternalContext?: any;\n}\n-export class View {\n- constructor(\n- runtime: Runtime,\n- opt?: {\n+export interface ViewOptions {\nbackground?: Color;\nbind?: Element | string;\ncontainer?: Element | string;\n@@ -70,8 +67,10 @@ export class View {\ntooltip?: TooltipHandler;\nlocale?: LocaleFormatters;\nexpr?: any;\n- },\n- );\n+}\n+\n+export class View {\n+ constructor(runtime: Runtime, opt?: ViewOptions);\n// View Configuration\n",
        "date": "11.11.2020 20:37:04",
        "repo": "vega/vega",
        "type": "feat",
        "sim_msg": "build(rendering): ensure that mapper2d is compiled in an ESM build\nThis change adds vtkMapper2D to the catalog for ESM builds.",
        "sim_diff": "diff --git a/Sources/Rendering/Core/index.js b/Sources/Rendering/Core/index.js @@ -24,6 +24,7 @@ import vtkInteractorObserver from './InteractorObserver';\nimport vtkInteractorStyle from './InteractorStyle';\nimport vtkLight from './Light';\nimport vtkMapper from './Mapper';\n+import vtkMapper2D from './Mapper2D';\nimport vtkPicker from './Picker';\nimport vtkPixelSpaceCallbackMapper from './PixelSpaceCallbackMapper';\nimport vtkPointPicker from './PointPicker';\n@@ -67,6 +68,7 @@ export default {\nvtkInteractorStyle,\nvtkLight,\nvtkMapper,\n+ vtkMapper2D,\nvtkPicker,\nvtkPixelSpaceCallbackMapper,\nvtkPointPicker,\n"
    },
    {
        "msg": "feat(styles): duplicate some styles to make SSR result nicer\nfeat(styles): duplicate some styles to make SSR result nicer",
        "diff": "diff --git a/src/common/styles/global.jsx b/src/common/styles/global.jsx @@ -5,6 +5,26 @@ injectGlobal`\nbox-sizing: border-box;\n}\n+ body {\n+ margin: 0;\n+ padding: 0;\n+ overflow-x: hidden;\n+ min-width: 320px;\n+ background: white;\n+ font-family: 'Lato', 'Helvetica Neue', Arial, Helvetica, sans-serif;\n+ font-size: 14px;\n+ line-height: 1.4285em;\n+ color: rgba(0, 0, 0, 0.87);\n+ }\n+\n+ .pushable {\n+ height: 100%;\n+ overflow-x: hidden;\n+ padding: 0em !important;\n+ -webkit-transform: translate3d(0, 0, 0);\n+ transform: translate3d(0, 0, 0);\n+ }\n+\n${''/* body ::-webkit-scrollbar {\nwidth: 0;\n}\n",
        "date": "03.11.2017 16:38:10",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "chore: updating defaultTheme with a few font styles",
        "sim_diff": "diff --git a/package/src/defaultComponentTheme.js b/package/src/defaultComponentTheme.js @@ -92,6 +92,9 @@ const teal600 = \"#34584f\";\n* Default Theme Typography\n*/\n+// font family\n+const fontFamily = \"'Source Sans Pro', 'Helvetica Neue', Helvetica, sans-serif\";\n+\n// font scale\nconst baseFontSize = 16; // pixels\nconst fontSize12 = `${baseFontSize * 0.75}px`;\n@@ -154,6 +157,7 @@ const defaultStyles = {\nrui_color_default: black55,\nrui_color_disabled: black25,\nrui_color_black02: black02,\n+ rui_color_black05: black05,\nrui_color_black30: black30,\nrui_color_error: red,\nrui_color_stockWarning: red,\n@@ -167,6 +171,8 @@ const defaultStyles = {\nrui_color_coolGrey600: coolGrey600,\nrui_color_forestGreen300: forestGreen300,\nrui_color_white: white,\n+ rui_font_family: fontFamily,\n+ rui_font_size_small: fontSize14,\nrui_font_weight_light: fontWeightLight,\nrui_font_weight_normal: fontWeightRegular,\nrui_font_weight_bold: fontWeightBold,\n"
    },
    {
        "msg": "feat: Added ties to top N points",
        "diff": "diff --git a/frontend/leaderboard/src/Points.re b/frontend/leaderboard/src/Points.re @@ -40,19 +40,32 @@ let applyTopNPoints =\nArray.sort(f, metricsArray);\nBelt.Array.reverseInPlace(metricsArray);\n- metricsArray |> Array.iter(Js.log);\n+ metricsArray\n+ |> Array.iteri((index, metric) => {\n+ Js.log(\"index: \" ++ string_of_int(index));\n+ Js.log(\"metric: \");\n+ Js.log(metric);\n+ Js.log(\"\\n\");\n+ });\nlet counter = ref(0);\nlet topNArrayWithPoints =\nmetricsArray\n- |> Array.mapi((i, (username, _)) =>\n+ |> Array.mapi((i, (username, metric)) =>\nif (counter^ >= Array.length(threshholdPointsList)) {\n(username, 0);\n} else {\nlet (place, points) = threshholdPointsList[counter^];\n- if (place == i) {\n+ if (i < Array.length(metricsArray) - 1) {\n+ let challengeMetric = getMetricValue(metric);\n+ let (_, nextMetric) = metricsArray[i + 1];\n+ let nextChallengeMetric = getMetricValue(nextMetric);\n+\n+ // handle ties by comparing to the next metric\n+ if (challengeMetric !== nextChallengeMetric && i >= place) {\ncounter := counter^ + 1;\n};\n+ };\n(username, points);\n}\n);\n",
        "date": "30.01.2021 12:50:55",
        "repo": "minaprotocol/mina",
        "type": "feat",
        "sim_msg": "fix(app/metrics): `action.yml` removing default token value [skip ci]",
        "sim_diff": "diff --git a/source/app/metrics/metadata.mjs b/source/app/metrics/metadata.mjs @@ -228,7 +228,7 @@ metadata.plugin = async function({__plugins, __templates, name, logger}) {\nkey,\n{\ncomment:comments[key] ?? `# ${value.description}`,\n- descriptor:yaml.dump({[key]:Object.fromEntries(Object.entries(value).filter(([key]) => [\"description\", \"default\", \"required\"].includes(key)).map(([k, v]) => k === \"description\" ? [k, v.split(\"\\n\")[0]] : k === \"default\" ? [k, \"<default-value>\"] : [k, v]))}, {quotingType:'\"', noCompatMode:true}),\n+ descriptor:yaml.dump({[key]:Object.fromEntries(Object.entries(value).filter(([key]) => [\"description\", \"default\", \"required\"].includes(key)).map(([k, v]) => k === \"description\" ? [k, v.split(\"\\n\")[0]] : k === \"default\" ? [k, /^\\$\\{\\{[\\s\\S]+\\}\\}$/.test(v) ? v : \"<default-value>\"] : [k, v]))}, {quotingType:'\"', noCompatMode:true}),\n},\n]),\n)\n"
    },
    {
        "msg": "feat: add examples to static export",
        "diff": "diff --git a/website/pages/static-export.mdx b/website/pages/static-export.mdx @@ -48,18 +48,58 @@ Razzle not only works with React, but also Reason, Elm, Vue, Angular, Svelte, an\n#### render()\nbehind the scenes razzle calls `render` function that exposed from `static_export` module and saves `html` string that you pass to `res.json()` into a html file. for `req` object there is only one property that is `url` which contains the url that we are going to render and save it's result to the html file.\n+html file destination is relative to the `req.url`, for example if the url is `/product/A` html is going to get saved at `/build/product/A/index.html`.\n+\n+you should call `renderToString()` (or what ever your framework gives you to do SSR) in this function send resonse to `res.json()`\n+\n+```js\n+export const render = (req, res) => {\n+ const html = ReactDOMServer.renderToString(\n+ <StaticRouter location={req.url}>\n+ <App />\n+ </StaticRouter>\n+ );\n+\n+ res.json({ html });\n+};\n+```\n+\n+(you can re-export your ssr logic from server.js file and use it `static_export`)\n#### routes()\nyou should also export a function called `routes` that returns an array of strings or a promise that will resolve array of strings. razzle will take the urls one by one and pass them one by one to `render`.\n+you should get all paths that your app has from your CMS in this method and return it at the end:\n-html file destination is relative to the `req.url`, for example if the url is `/product/A` html is going to get saved at `/build/product/A/index.html`.\n+```js\n+export const routes = async () => {\n+ // data should be an array of strings [\"/\", \"/product/A\", \"/blog/1\", \"/blog/2\"]\n+ const { data } = await getAppPaths();\n+ return data;\n+};\n+```\n#### page data\nyou may also need to save the data that your page uses to rehydrate the app on the client side.\nyou can also pass the `data` along the `html` to `res.json({ html, data })` and contents of data object will go inside the `page-data.json` file next to the html file.\n+```js\n+export const render = async (req, res) => {\n+ const data = await getDataForRoute(req.url);\n+\n+ const html = ReactDOMServer.renderToString(\n+ <StaticRouter location={req.url}>\n+ <App />\n+ </StaticRouter>\n+ );\n+\n+ res.json({ html, data });\n+};\n+```\n+\n+(you should also change how your app fetches data on client-side, so it reads data from `page-data.json`)\n+\n## TypeScript Support\nStatic export comes with typescript support out of the box, in order to use typescript rename `static_export.js` to `static_export.ts` and you are good to go!\n",
        "date": "06.10.2020 02:46:12",
        "repo": "jaredpalmer/razzle",
        "type": "feat",
        "sim_msg": "chore(docs): Update \"Debugging HTML builds\" to include `getServerData`",
        "sim_diff": "diff --git a/docs/docs/debugging-html-builds.md b/docs/docs/debugging-html-builds.md title: Debugging HTML Builds\n---\n-Errors while building static HTML files (the build-time React SSR process) generally happen for one of the following reasons:\n+Errors while building static HTML files (the build-time React SSR process) or while using `getServerData` (the [runtime SSR](/docs/reference/rendering-options/server-side-rendering/) process) generally happen for one of the following reasons:\n1. Some of your code references \"browser globals\" like `window` or `document`\nthat aren't available in Node.js. If this is your problem you should see an\n"
    },
    {
        "msg": "feat(server/ssr): rewrite ssr, add HTML component, use stats instead of hadrcoded html\nfeat(server/ssr): rewrite ssr, add HTML component, use stats instead of\nhadrcoded html",
        "diff": "diff --git a/src/server/ssr/index.js b/src/server/ssr/index.js * @flow\n* @desc\n*/\n-import * as React from 'react'\n+import React, {type Node} from 'react'\nimport fs from 'fs'\nimport {renderToString} from 'react-dom/server'\nimport Helmet from 'react-helmet'\nimport createHistory from 'history/createMemoryHistory'\nimport {ServerStyleSheet, StyleSheetManager} from 'styled-components'\nimport {configureApp, configureRootComponent} from 'common/app'\n-\n-const DLLScripts =\n- process.env.NODE_ENV === 'production'\n- ? ''\n- : `\n- <script src=\"/polyfills.js\"></script>\n- <script src=\"/vendor.js\"></script>\n-`\n-// This function makes server rendering of asset references consistent with different webpack chunk/entry confiugrations\n-function normalizeAssets (assets) {\n- return Array.isArray(assets) ? assets : [assets]\n-}\n+import IndexHTMLComponent from './IndexHTMLComponent'\n+import assets from 'webpack-assets'\n+import faviconsAssets from 'favicons-assets'\nexport default (req: Object, res: Object, next: () => void) => {\n- const stats = fs.readFileSync(\n- `${process.env.CLIENT_DIST_PATH}/stats.json`,\n- 'utf8'\n- )\nconst {isLoggedIn, token} = req.user\nconst initialState: Object = isLoggedIn\n? {me: {auth: {isLoggedIn, token}}}\n@@ -34,74 +21,27 @@ export default (req: Object, res: Object, next: () => void) => {\nconst sheet = new ServerStyleSheet()\nconst location: string = req.url\nconst context = {}\n- const {store, history, routes} = configureApp({initialState})\n- const RootComponent: React.Node = configureRootComponent({\n+ const {store, history, routes} = configureApp(initialState)\n+ const RootComponent: Node = configureRootComponent({\nstore,\nhistory,\nroutes,\nSSR: {location, context}\n})\n- const App: React.Node = (\n+ const App: Node = (\n<StyleSheetManager sheet={sheet.instance}>\n{RootComponent}\n</StyleSheetManager>\n)\nconst css = sheet.getStyleTags()\nconst preloadedState: Object = store.getState()\n- console.log(preloadedState)\n- const app: string = renderToString(App)\n- const {assetsByChunkName}: Object = JSON.parse(stats)\n- const html = getHtml({\n- app,\n+ const props = {\ncss,\n+ assets,\n+ faviconsAssets,\ninitialState: preloadedState,\n- assetsByChunkName\n- })\n- res.send(html)\n+ App\n}\n-\n-/**\n- * Get html\n- * @param {[type]} app [description]\n- * @param {[type]} css [description]\n- * @param {[type]} initialState [description]\n- * @param {[type]} assetsByChunkName [description]\n- * @return {String} [description]\n- */\n-const getHtml = ({app, css, initialState, assetsByChunkName}) => {\n- const stringifiedState: string = JSON.stringify(initialState)\n- const safeStringifiedState: string = stringifiedState.replace(/</g, '\\\\u003c')\n- return `\n- <!doctype html>\n- <html>\n- <head>\n- <meta charset=\"utf-8\">\n- <title>Noir</title>\n- <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n- <meta name=\"description\" content=\"Production-ready, performance-first, template built with React/Redux/React-Semantic-UI\">\n- <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n- <base href=\"/\" />\n- <meta name=\"theme-color\" content=\"<%=htmlWebpackPlugin.options.theme_color%>\"/>\n- <meta name=\"msapplication-tap-highlight\" content=\"no\">\n- <link rel=\"manifest\" href=\"manifest.json\">\n- ${css}\n- ${normalizeAssets(assetsByChunkName.client)\n- .filter(path => path.endsWith('.css'))\n- .map(path => `<link rel=\"stylesheet\" href=\"${path}\" />`)\n- .join('\\n')}\n- </head>\n- <body>\n- <div id=\"app\">${app}</div>\n- <script>window.__INITIAL_STATE__ = ${safeStringifiedState}</script>\n- ${DLLScripts}\n- ${normalizeAssets(assetsByChunkName.client)\n- .filter(path => path.endsWith('.js'))\n- .map(path => `<script src=\"${path}\"></script>`)\n- .join('\\n')}\n- <noscript>\n- You are using outdated browser. You can install modern browser here: <a href=\"http://outdatedbrowser.com/\" >http://outdatedbrowser.com</a>.\n- </noscript>\n- </body>\n- </html>\n- `\n+ const html: string = renderToString(<IndexHTMLComponent {...props} />)\n+ res.send(html)\n}\n",
        "date": "06.09.2017 12:16:46",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "feat: add react helmet\nAdd react helmet\nMove static member into component class",
        "sim_diff": "diff --git a/src/pages/_document.js b/src/pages/_document.js @@ -3,41 +3,10 @@ import Document, { Head, Main, NextScript } from \"next/document\";\nimport JssProvider from \"react-jss/lib/JssProvider\";\nimport flush from \"styled-jsx/server\";\nimport getPageContext from \"../lib/theme/getPageContext\";\n+import Helmet from \"react-helmet\";\nclass HTMLDocument extends Document {\n- render() {\n- const { pageContext } = this.props;\n-\n- return (\n- <html lang=\"en\" dir=\"ltr\">\n- <Head>\n- <title>My page</title>\n- <meta charSet=\"utf-8\" />\n- {/* Use minimum-scale=1 to enable GPU rasterization */}\n- <meta\n- name=\"viewport\"\n- content={\n- \"user-scalable=0, initial-scale=1, \" +\n- \"minimum-scale=1, width=device-width, height=device-height\"\n- }\n- />\n- {/* PWA primary color */}\n- <meta name=\"theme-color\" content={pageContext.theme.palette.primary.main} />\n- <link\n- rel=\"stylesheet\"\n- href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500\"\n- />\n- </Head>\n- <body>\n- <Main />\n- <NextScript />\n- </body>\n- </html>\n- );\n- }\n-}\n-\n-HTMLDocument.getInitialProps = (ctx) => {\n+ static getInitialProps = (ctx) => {\n// Resolution order\n//\n// On the server:\n@@ -69,6 +38,7 @@ HTMLDocument.getInitialProps = (ctx) => {\nreturn {\n...page,\npageContext,\n+ helmet: Helmet.rewind(),\nstyles: (\n<React.Fragment>\n<style\n@@ -80,6 +50,44 @@ HTMLDocument.getInitialProps = (ctx) => {\n</React.Fragment>\n)\n};\n-};\n+ }\n+\n+ render() {\n+ const { pageContext, helmet } = this.props;\n+ const htmlAttrs = helmet.htmlAttributes.toComponent();\n+\n+ return (\n+ <html {...htmlAttrs}>\n+ <Head>\n+ <Helmet\n+ htmlAttributes={{lang: \"en\", dir: \"ltr\"}}\n+ title=\"My page\"\n+ meta={[\n+ { charSet: \"utf-8\" },\n+ // Use minimum-scale=1 to enable GPU rasterization\n+ { name: \"viewport\", content: \"user-scalable=0, initial-scale=1 minimum-scale=1, width=device-width, height=device-height\" },\n+ // PWA primary color\n+ { name: \"theme-color\", content: pageContext.theme.palette.primary.main }\n+ ]}\n+ link={[\n+ { rel: \"stylesheet\", href: \"https://fonts.googleapis.com/css?family=Roboto:300,400,500\" }\n+ ]}\n+ />\n+ {helmet.base.toComponent()}\n+ {helmet.title.toComponent()}\n+ {helmet.meta.toComponent()}\n+ {helmet.link.toComponent()}\n+ {helmet.style.toComponent()}\n+ {helmet.script.toComponent()}\n+ {helmet.noscript.toComponent()}\n+ </Head>\n+ <body>\n+ <Main />\n+ <NextScript />\n+ </body>\n+ </html>\n+ );\n+ }\n+}\nexport default HTMLDocument;\n"
    },
    {
        "msg": "feat: logo and header link to home page",
        "diff": "diff --git a/src/App.vue b/src/App.vue <div class=\"container mb-4 mt-4\">\n<div class=\"mb-4\">\n<h1 class=\"logo\">\n- <img alt=\"Logo\" src=\"./assets/logo.png\" width=\"50\">\n+ <router-link to=\"/\">\n+ <img alt=\"Logo\" src=\"./assets/logo.png\" width=\"50\" />\nOpen Drinks\n+ </router-link>\n</h1>\n</div>\n<footer class=\"container mt-4 text-center\">\n<hr />\n- <div>View the source or contribute a drink recipe on <a href=\"https://github.com/alfg/opendrinks\">GitHub</a>!</div>\n+ <div>\n+ View the source or contribute a drink recipe on\n+ <a\n+ href=\"https://github.com/alfg/opendrinks\"\n+ >GitHub</a>!\n+ </div>\n<a href=\"https://www.netlify.com\">\n<img src=\"https://www.netlify.com/img/global/badges/netlify-light.svg\" alt=\"Netlify\" />\n</a>\n<style>\n#app {\n- font-family: 'Avenir', Helvetica, Arial, sans-serif;\n+ font-family: \"Avenir\", Helvetica, Arial, sans-serif;\n-webkit-font-smoothing: antialiased;\n-moz-osx-font-smoothing: grayscale;\ncolor: #2c3e50;\n}\n.logo {\n- font-family: 'Pacifico', 'cursive';\n+ font-family: \"Pacifico\", \"cursive\";\n+}\n+.logo a {\n+ text-decoration: none;\n+ color: inherit;\n}\n</style>\n",
        "date": "01.10.2019 10:15:23",
        "repo": "alfg/opendrinks",
        "type": "feat",
        "sim_msg": "chore: adjust icons in Category example",
        "sim_diff": "diff --git a/packages/vue/src/examples/pages/category/Category.vue b/packages/vue/src/examples/pages/category/Category.vue aria-label=\"Filters\"\n@click=\"isFilterSidebarOpen = true\"\n>\n- <SfIcon size=\"32px\" color=\"#BEBFC4\" icon=\"filter\" />\n+ <SfIcon\n+ size=\"18px\"\n+ color=\"#BEBFC4\"\n+ icon=\"filter\"\n+ class=\"navbar__filters-icon\"\n+ />\nFilters\n</SfButton>\n<div class=\"navbar__sort desktop-only\">\nclass=\"navbar__view-icon\"\n:color=\"isGridView ? '#1D1F22' : '#BEBFC4'\"\nicon=\"tiles\"\n- size=\"32px\"\n+ size=\"12px\"\nrole=\"button\"\naria-label=\"Change to grid view\"\n:aria-pressed=\"isGridView\"\nclass=\"navbar__view-icon\"\n:color=\"!isGridView ? '#1D1F22' : '#BEBFC4'\"\nicon=\"list\"\n- size=\"32px\"\n+ size=\"12px\"\nrole=\"button\"\naria-label=\"Change to list view\"\n:aria-pressed=\"!isGridView\"\n@@ -644,6 +649,9 @@ export default {\n--heading-title-font-weight: var(--font-light);\n--heading-title-font-size: var(--font-xl);\n}\n+ &__filters-icon {\n+ margin: 0 var(--spacer-sm) 0 0;\n+ }\n&__filters-button {\ndisplay: flex;\nalign-items: center;\n@@ -667,7 +675,9 @@ export default {\nmargin: 0 var(--spacer-2xs) 0 0;\n}\n&__select {\n- --select-padding: 0 var(--spacer-lg) 0 var(--spacer-2xs);\n+ --select-width: 220px;\n+ --select-padding: 0;\n+ --select-selected-padding: 0 var(--spacer-lg) 0 var(--spacer-2xs);\n--select-margin: 0;\n}\n&__sort {\n@@ -693,6 +703,10 @@ export default {\n}\n&-icon {\ncursor: pointer;\n+ margin: 0 var(--spacer-base) 0 0;\n+ &:last-child {\n+ margin: 0;\n+ }\n}\n&-label {\nmargin: 0 var(--spacer-sm) 0 0;\n"
    },
    {
        "msg": "feat(jest_config): add mocks and disable coverage of styles\nfeat(jest_config): add mocks and disable coverage of styles",
        "diff": "diff --git a/jest_config/jest.config.json b/jest_config/jest.config.json \"rootDir\": \"../\",\n\"setupFiles\": [\"<rootDir>/jest_config/setupJest.js\"],\n\"automock\": false,\n- \"moduleNameMapper\": {}\n+ \"moduleNameMapper\": {\n+ \"\\\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$\": \"<rootDir>/jest_config/__mocks__/fileMock.js\",\n+ \"\\\\.(css|less)$\": \"<rootDir>/jest_config/__mocks__/styleMock.js\"\n+ },\n+ \"coveragePathIgnorePatterns\": [\"style.jsx\", \"/styles\"]\n}\n",
        "date": "10.09.2017 00:12:29",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "chore(package): remove unused jest config",
        "sim_diff": "diff --git a/package.json b/package.json \"**/*.spec.js\",\n\"node_modules\"\n]\n- },\n- \"jest\": {\n- \"verbose\": true,\n- \"resolver\": \"jest-directory-named-resolver\",\n- \"transform\": {\n- \"^.+\\\\.js$\": \"babel-jest\",\n- \"^.+\\\\.html$\": \"<rootDir>/src/__mocks__/htmlMock.js\"\n- },\n- \"moduleNameMapper\": {\n- \"^@/(.*)$\": \"<rootDir>/src/$1\",\n- \"^clappr-zepto$\": \"clappr-zepto/zepto.js\",\n- \"\\\\.(scss)$\": \"<rootDir>/src/__mocks__/styleMock.js\"\n- },\n- \"collectCoverageFrom\": [\n- \"src/*.js\",\n- \"src/**/*.js\",\n- \"src/**/**/*.js\"\n- ]\n}\n}\n"
    },
    {
        "msg": "feat(ssr): render Helmet on server",
        "diff": "diff --git a/src/server/ssr/index.js b/src/server/ssr/index.js * @desc\n*/\nimport React from 'react'\n+import Helmet from 'react-helmet'\nimport {renderToString} from 'react-dom/server'\nimport {ServerStyleSheet, StyleSheetManager} from 'styled-components'\nimport {configureRootComponent, configureApp} from 'common/app'\n@@ -33,9 +34,7 @@ export default async (req: express$Request, res: express$Response) => {\nconst app = (\n<AsyncComponentProvider asyncContext={asyncContext}>\n- <StyleSheetManager sheet={sheet.instance}>\n- {RootComponent}\n- </StyleSheetManager>\n+ <StyleSheetManager sheet={sheet.instance}>{RootComponent}</StyleSheetManager>\n</AsyncComponentProvider>\n)\n@@ -45,6 +44,7 @@ export default async (req: express$Request, res: express$Response) => {\nasyncBootstrapper(app).then(() => {\nconst renderedApp = renderToString(app)\n+ const helmet = Helmet.renderStatic()\nconst css: string = sheet.getStyleTags()\nconst preloadedState: Object = store.getState()\nconst responseStatusCode = noRequestURLMatch ? 404 : 200\n@@ -55,7 +55,8 @@ export default async (req: express$Request, res: express$Response) => {\nasyncState,\ninitialState: preloadedState,\napp: renderedApp,\n- i18n\n+ i18n,\n+ helmet\n}\nres.status(responseStatusCode).send(HTMLComponent(props))\n",
        "date": "19.02.2018 18:18:55",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "feat: add react helmet\nAdd react helmet\nMove static member into component class",
        "sim_diff": "diff --git a/src/pages/_document.js b/src/pages/_document.js @@ -3,41 +3,10 @@ import Document, { Head, Main, NextScript } from \"next/document\";\nimport JssProvider from \"react-jss/lib/JssProvider\";\nimport flush from \"styled-jsx/server\";\nimport getPageContext from \"../lib/theme/getPageContext\";\n+import Helmet from \"react-helmet\";\nclass HTMLDocument extends Document {\n- render() {\n- const { pageContext } = this.props;\n-\n- return (\n- <html lang=\"en\" dir=\"ltr\">\n- <Head>\n- <title>My page</title>\n- <meta charSet=\"utf-8\" />\n- {/* Use minimum-scale=1 to enable GPU rasterization */}\n- <meta\n- name=\"viewport\"\n- content={\n- \"user-scalable=0, initial-scale=1, \" +\n- \"minimum-scale=1, width=device-width, height=device-height\"\n- }\n- />\n- {/* PWA primary color */}\n- <meta name=\"theme-color\" content={pageContext.theme.palette.primary.main} />\n- <link\n- rel=\"stylesheet\"\n- href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500\"\n- />\n- </Head>\n- <body>\n- <Main />\n- <NextScript />\n- </body>\n- </html>\n- );\n- }\n-}\n-\n-HTMLDocument.getInitialProps = (ctx) => {\n+ static getInitialProps = (ctx) => {\n// Resolution order\n//\n// On the server:\n@@ -69,6 +38,7 @@ HTMLDocument.getInitialProps = (ctx) => {\nreturn {\n...page,\npageContext,\n+ helmet: Helmet.rewind(),\nstyles: (\n<React.Fragment>\n<style\n@@ -80,6 +50,44 @@ HTMLDocument.getInitialProps = (ctx) => {\n</React.Fragment>\n)\n};\n-};\n+ }\n+\n+ render() {\n+ const { pageContext, helmet } = this.props;\n+ const htmlAttrs = helmet.htmlAttributes.toComponent();\n+\n+ return (\n+ <html {...htmlAttrs}>\n+ <Head>\n+ <Helmet\n+ htmlAttributes={{lang: \"en\", dir: \"ltr\"}}\n+ title=\"My page\"\n+ meta={[\n+ { charSet: \"utf-8\" },\n+ // Use minimum-scale=1 to enable GPU rasterization\n+ { name: \"viewport\", content: \"user-scalable=0, initial-scale=1 minimum-scale=1, width=device-width, height=device-height\" },\n+ // PWA primary color\n+ { name: \"theme-color\", content: pageContext.theme.palette.primary.main }\n+ ]}\n+ link={[\n+ { rel: \"stylesheet\", href: \"https://fonts.googleapis.com/css?family=Roboto:300,400,500\" }\n+ ]}\n+ />\n+ {helmet.base.toComponent()}\n+ {helmet.title.toComponent()}\n+ {helmet.meta.toComponent()}\n+ {helmet.link.toComponent()}\n+ {helmet.style.toComponent()}\n+ {helmet.script.toComponent()}\n+ {helmet.noscript.toComponent()}\n+ </Head>\n+ <body>\n+ <Main />\n+ <NextScript />\n+ </body>\n+ </html>\n+ );\n+ }\n+}\nexport default HTMLDocument;\n"
    },
    {
        "msg": "feat(src/client): add react-a11y, fix export of main configuration scripts(configureRoot, configureA\nadd react-a11y, fix export of main configuration scripts(configureRoot, configureApp)",
        "diff": "diff --git a/src/client/index.jsx b/src/client/index.jsx // Styles\nimport 'semantic-ui-css/semantic.css'\n-import 'styles/global'\n// Fetch and promise polyfill\nimport 'promise-polyfill'\n-import 'whatwg-fetch'\n+import 'isomorphic-fetch'\n// Application\n-import {render} from 'react-dom'\n-import {configureStore, configureRootComponent} from 'common/index.jsx'\n+import React from 'react'\n+import ReactDOM, {render} from 'react-dom'\n+import {configureApp, configureRootComponent} from 'common/app'\nif (process.env.NODE_ENV === 'production') {\nrequire('common/pwa')\n@@ -29,13 +29,21 @@ if (process.env.NODE_ENV === 'production') {\n*/\n/*eslint-enable */\nwindow.Perf = require('react-addons-perf')\n-}\n-const preloadedState = window.__PRELOADED_STATE__ || {}\n-delete window.__PRELOADED_STATE__\n+ // NOTE: a11y doesnt work with SSR and React throws warnings like:\n+ // \"React attempted to reuse markup in a container but the checksum was invalid\"\n+ // a11y adds \"id\" attribute to the root container (#app) of your app and triggers re-rendering\n+ //\n+ /** {@link https://github.com/reactjs/react-a11y } */\n+ // const a11y = require('react-a11y')\n+ // a11y(React, {ReactDOM})\n+}\n-const store = configureStore(preloadedState)\n-const RootComponent = configureRootComponent({store})\n+const initialState = window.__INITIAL_STATE__ || {}\n+// NOTE: V8 doesn't optimize `delete`\n+// delete window.__INITIAL_STATE__\n+const propsForRoot = configureApp({initialState})\n+const RootComponent = configureRootComponent(propsForRoot)\nrender(RootComponent, document.getElementById('app'))\nif (module.hot) {\n",
        "date": "23.08.2017 18:42:17",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "feat: updated google fonts href to be source sans pro",
        "sim_diff": "diff --git a/src/pages/_document.js b/src/pages/_document.js @@ -7,7 +7,6 @@ import { Provider } from \"mobx-react\";\nimport rootMobxStores from \"../lib/stores\";\nimport getPageContext from \"../lib/theme/getPageContext\";\n-\nclass HTMLDocument extends Document {\nstatic getInitialProps = (ctx) => {\n// Resolution order\n@@ -32,10 +31,7 @@ class HTMLDocument extends Document {\n/* eslint-disable-next-line react/display-name */\nconst page = ctx.renderPage((Component) => (props) => (\n- <JssProvider\n- registry={pageContext.sheetsRegistry}\n- generateClassName={pageContext.generateClassName}\n- >\n+ <JssProvider registry={pageContext.sheetsRegistry} generateClassName={pageContext.generateClassName}>\n<Provider {...rootMobxStores}>\n<Component pageContext={pageContext} {...props} />\n</Provider>\n@@ -57,7 +53,7 @@ class HTMLDocument extends Document {\n</React.Fragment>\n)\n};\n- }\n+ };\nrender() {\nconst { pageContext, helmet } = this.props;\n@@ -72,13 +68,14 @@ class HTMLDocument extends Document {\nmeta={[\n{ charSet: \"utf-8\" },\n// Use minimum-scale=1 to enable GPU rasterization\n- { name: \"viewport\", content: \"user-scalable=0, initial-scale=1 minimum-scale=1, width=device-width, height=device-height\" },\n+ {\n+ name: \"viewport\",\n+ content: \"user-scalable=0, initial-scale=1 minimum-scale=1, width=device-width, height=device-height\"\n+ },\n// PWA primary color\n{ name: \"theme-color\", content: pageContext.theme.palette.primary.main }\n]}\n- link={[\n- { rel: \"stylesheet\", href: \"https://fonts.googleapis.com/css?family=Roboto:300,400,500\" }\n- ]}\n+ link={[{ rel: \"stylesheet\", href: \"https://fonts.googleapis.com/css?family=Source+Sans+Pro:200,400,700\" }]}\n/>\n{helmet.base.toComponent()}\n{helmet.title.toComponent()}\n"
    },
    {
        "msg": "feat: add nullish coalescing for validUntil and simplify function objects",
        "diff": "diff --git a/frontend/mina-signer/src/MinaSDK.ts b/frontend/mina-signer/src/MinaSDK.ts \"use strict\";\n-\nconst JSOfOCaml_SDK = require(\"./client_sdk.bc.js\");\nconst minaSDK = JSOfOCaml_SDK.minaSDK;\n@@ -108,32 +107,30 @@ class Client {\nconst fee = String(payment.fee);\nconst nonce = String(payment.nonce);\nconst amount = String(payment.amount);\n- const validUntil = String(\n- payment.validUntil ? payment.validUntil : defaultValidUntil\n- );\n+ const validUntil = String(payment.validUntil ?? defaultValidUntil);\nreturn {\nsignature: minaSDK.signPayment(this.network, privateKey, {\ncommon: {\n- fee: fee,\n+ fee,\nfeePayer: payment.from,\n- nonce: nonce,\n- validUntil: validUntil,\n- memo: memo,\n+ nonce,\n+ validUntil,\n+ memo,\n},\npaymentPayload: {\nsource: payment.from,\nreceiver: payment.to,\n- amount: amount,\n+ amount,\n},\n}).signature,\ndata: {\nto: payment.to,\nfrom: payment.from,\n- fee: fee,\n- amount: amount,\n- nonce: nonce,\n- memo: memo,\n- validUntil: validUntil,\n+ fee,\n+ amount,\n+ nonce,\n+ memo,\n+ validUntil,\n},\n};\n}\n@@ -150,24 +147,22 @@ class Client {\nconst fee = String(payload.fee);\nconst amount = String(payload.amount);\nconst nonce = String(payload.nonce);\n- const validUntil = String(\n- payload.validUntil ? payload.validUntil : defaultValidUntil\n- );\n+ const validUntil = String(payload.validUntil ?? defaultValidUntil);\nreturn minaSDK.verifyPaymentSignature(this.network, {\nsender: signedPayment.data.from,\nsignature: signedPayment.signature,\npayment: {\ncommon: {\n- fee: fee,\n+ fee,\nfeePayer: payload.from,\n- nonce: nonce,\n- validUntil: validUntil,\n- memo: memo,\n+ nonce,\n+ validUntil,\n+ memo,\n},\npaymentPayload: {\nsource: payload.from,\nreceiver: payload.to,\n- amount: amount,\n+ amount,\n},\n},\n});\n@@ -192,19 +187,15 @@ class Client {\nconst memo = stakeDelegation.memo ?? \"\";\nconst fee = String(stakeDelegation.fee);\nconst nonce = String(stakeDelegation.nonce);\n- const validUntil = String(\n- stakeDelegation.validUntil\n- ? stakeDelegation.validUntil\n- : defaultValidUntil\n- );\n+ const validUntil = String(stakeDelegation.validUntil ?? defaultValidUntil);\nreturn {\nsignature: minaSDK.signStakeDelegation(this.network, privateKey, {\ncommon: {\n- fee: fee,\n+ fee,\nfeePayer: stakeDelegation.from,\n- nonce: nonce,\n- validUntil: validUntil,\n- memo: memo,\n+ nonce,\n+ validUntil,\n+ memo,\n},\ndelegationPayload: {\nnewDelegate: stakeDelegation.to,\n@@ -214,10 +205,10 @@ class Client {\ndata: {\nto: stakeDelegation.to,\nfrom: stakeDelegation.from,\n- fee: fee,\n- nonce: nonce,\n- memo: memo,\n- validUntil: validUntil,\n+ fee,\n+ nonce,\n+ memo,\n+ validUntil,\n},\n};\n}\n@@ -235,19 +226,17 @@ class Client {\nconst memo = payload.memo ?? \"\";\nconst fee = String(payload.fee);\nconst nonce = String(payload.nonce);\n- const validUntil = String(\n- payload.validUntil ? payload.validUntil : defaultValidUntil\n- );\n+ const validUntil = String(payload.validUntil ?? defaultValidUntil);\nreturn minaSDK.verifyStakeDelegationSignature(this.network, {\nsender: signedStakeDelegation.data.from,\nsignature: signedStakeDelegation.signature,\nstakeDelegation: {\ncommon: {\n- fee: fee,\n+ fee,\nfeePayer: payload.from,\n- nonce: nonce,\n- validUntil: validUntil,\n- memo: memo,\n+ nonce,\n+ validUntil,\n+ memo,\n},\ndelegationPayload: {\nnewDelegate: payload.to,\n@@ -269,9 +258,7 @@ class Client {\nconst fee = String(payload.fee);\nconst amount = String(payload.amount);\nconst nonce = String(payload.nonce);\n- const validUntil = String(\n- payload.validUntil ? payload.validUntil : defaultValidUntil\n- );\n+ const validUntil = String(payload.validUntil ?? defaultValidUntil);\nreturn minaSDK.hashPayment({\nsender: signedPayment.data.from,\nsignature: signedPayment.signature,\n@@ -279,14 +266,14 @@ class Client {\ncommon: {\nfee: fee,\nfeePayer: payload.from,\n- nonce: nonce,\n- validUntil: validUntil,\n- memo: memo,\n+ nonce,\n+ validUntil,\n+ memo,\n},\npaymentPayload: {\nsource: payload.from,\nreceiver: payload.to,\n- amount: amount,\n+ amount,\n},\n},\n});\n@@ -305,19 +292,17 @@ class Client {\nconst memo = payload.memo ?? \"\";\nconst fee = String(payload.fee);\nconst nonce = String(payload.nonce);\n- const validUntil = String(\n- payload.validUntil ? payload.validUntil : defaultValidUntil\n- );\n+ const validUntil = String(payload.validUntil ?? defaultValidUntil);\nreturn minaSDK.hashStakeDelegation({\nsender: signedStakeDelegation.data.from,\nsignature: signedStakeDelegation.signature,\nstakeDelegation: {\ncommon: {\n- fee: fee,\n+ fee,\nfeePayer: payload.from,\n- nonce: nonce,\n- validUntil: validUntil,\n- memo: memo,\n+ nonce,\n+ validUntil,\n+ memo,\n},\ndelegationPayload: {\nnewDelegate: payload.to,\n",
        "date": "24.11.2021 11:59:43",
        "repo": "minaprotocol/mina",
        "type": "feat",
        "sim_msg": "refactor: promise chains to await",
        "sim_diff": "diff --git a/packages/frontend/src/utils/wallet.js b/packages/frontend/src/utils/wallet.js @@ -322,7 +322,7 @@ export default class Wallet {\nconst keyStore = new nearApiJs.keyStores.InMemoryKeyStore();\nawait keyStore.setKey(NETWORK_ID, accountId, keyPair);\nconst newKeyPair = nearApiJs.KeyPair.fromRandom('ed25519');\n- return new nearApiJs.Account(\n+ const account = new nearApiJs.Account(\nnearApiJs.Connection.fromConfig({\nnetworkId: NETWORK_ID,\nprovider: {\n@@ -332,33 +332,33 @@ export default class Wallet {\nsigner: new nearApiJs.InMemorySigner(keyStore),\n}),\naccountId\n- )\n- .addKey(newKeyPair.getPublicKey())\n- .then(() => this.saveAccount(accountId, newKeyPair))\n- .then(() => {\n+ );\n+\n+ await account.addKey(newKeyPair.getPublicKey());\n+ await this.saveAccount(accountId, newKeyPair);\n+\nif (!this.accountId) {\nreturn this.makeAccountActive(accountId);\n}\nreturn this.save();\n- });\n}\ncase Wallet.KEY_TYPES.MULTISIG:\n- case Wallet.KEY_TYPES.LEDGER:\n- return this.saveAccount(accountId, keyPair)\n- .then(() => {\n+ case Wallet.KEY_TYPES.LEDGER: {\n+ await this.saveAccount(accountId, keyPair);\n+\nif (keyType === Wallet.KEY_TYPES.LEDGER) {\nif (ledgerHdPath) {\nsetLedgerHdPath({accountId, path: ledgerHdPath});\n}\n- return this.getLedgerPublicKey(ledgerHdPath).then((publicKey) => setKeyMeta(publicKey.toString(), {type: 'ledger'}));\n+\n+ await this.getLedgerPublicKey(ledgerHdPath).then((publicKey) => setKeyMeta(publicKey.toString(), {type: 'ledger'}));\n}\n- })\n- .then(() => {\n+\nif (!this.accountId) {\nreturn this.makeAccountActive(accountId);\n}\nreturn this.save();\n- });\n+ }\ndefault:\nthrow new Error('Unable to add unrecognized key to wallet key store');\n}\n"
    },
    {
        "msg": "feat: Esmfy repl.html",
        "diff": "diff --git a/demo/repl.html b/demo/repl.html </td></tr></table>\n</div>\n-<script type=\"text/javascript\" src=\"../src/development_initializer.js\"></script>\n-<script type=\"text/javascript\">\n+<script type=\"module\" src=\"../src/main-browser.js\"></script>\n+<script type=\"module\">\nvar on_error = function(e){\nBiwaScheme.Port.current_error.put_string(e.message);\nthrow(e);\n};\nvar biwascheme = new BiwaScheme.Interpreter(on_error);\n-function bs_eval(){\n+window.bs_eval = function(){\n$(\"#bs-console\").empty();\nvar str = $(\"#bs-input\").val();\n",
        "date": "25.07.2020 15:08:07",
        "repo": "biwascheme/biwascheme",
        "type": "feat",
        "sim_msg": "fix: convert contents",
        "sim_diff": "diff --git a/src/lib/util.js b/src/lib/util.js @@ -231,7 +231,7 @@ const util = {\nif (text.length > 0) returnHTML += '<p>' + text + '</p>';\n}\n} else {\n- returnHTML += baseHtml.replace(/(?!>)\\s+(?=<)/g, '');\n+ returnHTML += baseHtml.replace(/(?<=(span|font|b|strong|var|i|em|u|ins|s|strike|del|sub|sup|mark|a|label)>)\\s+(?=<)/g, '');\n}\n}\n"
    },
    {
        "msg": "feat(.eslintrc): add react-a11y plugin for eslint\nadd react-a11y plugin for eslint",
        "diff": "diff --git a/.eslintrc.json b/.eslintrc.json {\n- \"extends\": [\"plugin:react/recommended\", \"standard\"],\n+ \"extends\": [\n+ \"plugin:react/recommended\",\n+ \"plugin:jsx-a11y/recommended\",\n+ \"standard\"\n+ ],\n\"parser\": \"babel-eslint\",\n- \"plugins\": [\"react\", \"babel\"],\n+ \"plugins\": [\"react\", \"babel\", \"jsx-a11y\"],\n\"parserOptions\": {\n\"ecmaFeatures\": {\n\"jsx\": true,\n\"node\": true\n},\n\"rules\": {\n- \"no-unused-vars\": 1,\n+ \"no-unused-vars\": 0,\n\"no-tabs\": 0,\n\"indent\": [2, \"tab\"]\n},\n",
        "date": "14.08.2017 16:59:55",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "chore: fix eslint config error",
        "sim_diff": "diff --git a/.eslintrc.json b/.eslintrc.json \"node\": true,\n\"es6\": true\n},\n- \"extends\": [\n- \"eslint:recommended\",\n- \"plugin:react/recommended\"\n- ],\n+ \"extends\": [\"eslint:recommended\", \"plugin:react/recommended\"],\n\"parserOptions\": {\n\"sourceType\": \"module\",\n\"ecmaVersion\": 2018\n},\n\"overrides\": [\n{\n- \"files\": [\n- \"**/*.test?(.*).js\"\n- ],\n+ \"files\": [\"**/*.test?(.*).js\"],\n\"env\": {\n- \"jest\": true,\n- \"jest/globals\": true\n+ \"jest\": true\n},\n\"globals\": {\n\"page\": true,\n\"context\": true,\n\"jestPuppeteer\": true\n},\n- \"plugins\": [\n- \"jest\"\n- ]\n+ \"plugins\": [\"jest\"]\n}\n]\n}\n"
    },
    {
        "msg": "feat(server/ssr): add async-component, async-bootstrapper\nfeat(server/ssr): add async-component, async-bootstrapper",
        "diff": "diff --git a/src/server/ssr/index.js b/src/server/ssr/index.js */\nimport React from 'react'\nimport chalk from 'chalk'\n+import _ from 'lodash'\nimport {renderToNodeStream} from 'react-dom/server'\nimport {ServerStyleSheet, StyleSheetManager} from 'styled-components'\nimport {configureRootComponent, configureApp} from 'common/app'\n+import asyncBootstrapper from 'react-async-bootstrapper'\n+import {AsyncComponentProvider, createAsyncContext} from 'react-async-component'\nimport HtmlComponent from './HtmlComponent'\n// $FlowFixMe\nimport assets from 'webpack-assets'\n@@ -36,45 +39,48 @@ export default async (req: express$Request, res: express$Response) => {\ni18n,\nSSR: {location, context}\n})\n- const stream = renderToNodeStream(\n+ const asyncContext = createAsyncContext()\n+\n+ const app = (\n+ <AsyncComponentProvider asyncContext={asyncContext}>\n<StyleSheetManager sheet={sheet.instance}>\n{RootComponent}\n</StyleSheetManager>\n+ </AsyncComponentProvider>\n)\n+ // console.log(_.find(routes, a => matchPath(req.url, a)))\n+ const noRequestURLMatch = !!_.find(routes, a => matchPath(req.url, a))\n+\n+ asyncBootstrapper(app).then(() => {\n+ const appStream = renderToNodeStream(app)\nconst css: string = sheet.getStyleTags()\nconst preloadedState: Object = store.getState()\n+\n+ const asyncState = asyncContext.getState()\nconst props = {\ncss,\nassets,\nfaviconsAssets,\n+ asyncState,\ninitialState: preloadedState,\ni18n\n}\n- // FIXME: how to replace `let` and `for`?\n- let lazyRoutes = routes.filter(a => a.lazy)\n- for (var i = 0; i < lazyRoutes.length; i++) {\n- let route = routes[i]\n- if (matchPath(req.url, route)) {\n- route.component = await routes[i].component().default\n- route.lazy = false\n- break\n- }\n- }\n-\nconst {beforeAppTag, afterAppTag} = HtmlComponent(props)\n+ const responseStatusCode = noRequestURLMatch ? 404 : 200\n- res.writeHead(200, {\n+ res.writeHead(responseStatusCode, {\n'Content-Type': 'text/html'\n})\nres.write(beforeAppTag)\nres.write(`<div id=\"app\">`)\n- stream.pipe(res, {end: false})\n+ appStream.pipe(res, {end: false})\n- stream.on('end', () => {\n+ appStream.on('end', () => {\nres.write('</div>')\nres.write(afterAppTag)\nres.end()\n})\n+ })\n}\n",
        "date": "03.11.2017 16:50:33",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "feat(app): SSR prod distributables should force use the prod code of externalized vue/vuex/etc packages",
        "sim_diff": "diff --git a/app/lib/webpack/ssr/webserver.js b/app/lib/webpack/ssr/webserver.js @@ -6,6 +6,8 @@ const WebserverAssetsPlugin = require('./plugin.webserver-assets')\nconst injectNodeTypescript = require('../inject.node-typescript')\nconst WebpackProgressPlugin = require('../plugin.progress')\n+const nodeEnvBanner = `if(process.env.NODE_ENV===void 0){process.env.NODE_ENV='production'}`\n+\nconst flattenObject = (obj, prefix = 'process.env') => {\nreturn Object.keys(obj)\n.reduce((acc, k) => {\n@@ -104,6 +106,15 @@ module.exports = function (cfg, configName) {\n.use(WebpackProgressPlugin, [{ name: configName, cfg, hasExternalWork: true }])\nif (cfg.ctx.prod) {\n+ // we need to set process.env.NODE_ENV to 'production'\n+ // (unless it's already set to something)\n+ // in order for externalized vue/vuex/etc packages to run the\n+ // production code (*.cjs.prod.js) instead of the dev one\n+ chain.plugin('node-env-banner')\n+ .use(webpack.BannerPlugin, [\n+ { banner: nodeEnvBanner, raw: true, entryOnly: true }\n+ ])\n+\nchain.plugin('webserver-assets-plugin')\n.use(WebserverAssetsPlugin, [ cfg ])\n"
    },
    {
        "msg": "feat(api/LocalStorateCookiesSvc): remove store2, add comments\nfeat(api/LocalStorateCookiesSvc): remove store2 from core functions and\ncomment import of store2, add comments",
        "diff": "diff --git a/src/common/api/LocalStorageCookiesSvc/index.js b/src/common/api/LocalStorageCookiesSvc/index.js // @flow\n-import * as store from 'store2'\nimport Cookies from 'js-cookie'\n+// By default, we don't use localStorage, but store2 is already installed\n+// But we use redux-persist (syncs localStorage with redux state)\n+// import store from 'store2'\nimport decodeJWT from 'jwt-decode'\nexport const JWT_TOKEN = 'JWT_TOKEN'\nexport function getLocalToken (): string | null {\n- return store.get(JWT_TOKEN) || Cookies.get(JWT_TOKEN)\n+ return Cookies.get(JWT_TOKEN)\n}\nexport function resetLocalToken () {\n- store.remove(JWT_TOKEN)\nCookies.remove(JWT_TOKEN)\n}\nexport function setLocalToken (token: string) {\n- store.set(JWT_TOKEN, token)\nCookies.set(JWT_TOKEN, token, {expires: 365})\n}\n",
        "date": "18.10.2017 23:48:25",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "fix: include WALLET_BATCH_IMPORT_URL in",
        "sim_diff": "diff --git a/packages/frontend/src/redux/actions/account.js b/packages/frontend/src/redux/actions/account.js @@ -122,7 +122,7 @@ export const handleRefreshUrl = (prevRouter) => (dispatch, getState) => {\nconst { pathname, search } = prevRouter?.location || getLocation(getState());\nconst currentPage = pathname.split('/')[pathname[1] === '/' ? 2 : 1];\n- if ([...WALLET_CREATE_NEW_ACCOUNT_FLOW_URLS, WALLET_LOGIN_URL, WALLET_SIGN_URL, WALLET_LINKDROP_URL].includes(currentPage)) {\n+ if ([...WALLET_CREATE_NEW_ACCOUNT_FLOW_URLS, WALLET_LOGIN_URL, WALLET_SIGN_URL, WALLET_LINKDROP_URL, WALLET_BATCH_IMPORT_URL].includes(currentPage)) {\nconst parsedUrl = {\n...parse(search),\nreferrer: document.referrer ? new URL(document.referrer).hostname : undefined,\n"
    },
    {
        "msg": "feat: support link component set href attribute",
        "diff": "diff --git a/src/components/link/Link.vue b/src/components/link/Link.vue @@ -6,6 +6,7 @@ interface LinkProps {\ntype?: LinkType\nunderline?: boolean\ndisabled?: boolean\n+ href?: string\n}\nconst props = withDefaults(defineProps<LinkProps>(), {\n@@ -27,7 +28,11 @@ const classes = useClasses(props)\n</script>\n<template>\n- <a class=\"el-link\" :class=\"classes\">\n+ <a\n+ class=\"el-link\"\n+ :class=\"classes\"\n+ :href=\"disabled ? null : href\"\n+ >\n<span v-if=\"$slots.default\" class=\"el-link--inner\">\n<slot />\n</span>\n",
        "date": "19.06.2022 22:37:17",
        "repo": "hug-sun/element3",
        "type": "feat",
        "sim_msg": "feat: disabled link property",
        "sim_diff": "diff --git a/packages/core/src/components/cv-link/cv-link.vue b/packages/core/src/components/cv-link/cv-link.vue v-on=\"$listeners\"\nv-bind=\"linkProps\"\nclass=\"cv-link\"\n- :class=\"[`${carbonPrefix}--link`, { [`${carbonPrefix}--link--inline`]: inline }]\"\n+ :class=\"[\n+ `${carbonPrefix}--link`,\n+ {\n+ [`${carbonPrefix}--link--disabled`]: disabled,\n+ [`${carbonPrefix}--link--inline`]: inline,\n+ },\n+ ]\"\n>\n<slot></slot>\n</component>\n@@ -17,6 +23,7 @@ export default {\nname: 'CvLink',\nmixins: [linkMixin, carbonPrefixMixin],\nprops: {\n+ disabled: Boolean,\ninline: Boolean,\n},\n};\n"
    },
    {
        "msg": "feat(webpack_config/client/webpack.base.js): add more style extension to resolve",
        "diff": "diff --git a/webpack_config/client/webpack.base.js b/webpack_config/client/webpack.base.js @@ -37,7 +37,7 @@ const baseBuild = {\nresolve: {\nalias: isomorphicWebpackConfig.resolve.alias,\nmodules: isomorphicWebpackConfig.resolve.modules,\n- extensions: isomorphicWebpackConfig.resolve.extensions.concat(['.css', '.scss'])\n+ extensions: isomorphicWebpackConfig.resolve.extensions.concat(['.css', '.scss', '.sass'])\n},\nmodule: {\nrules: isomorphicWebpackConfig.module.rules.concat([\n",
        "date": "10.08.2017 06:17:36",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "build: do not add image-webpack-loader at all in development",
        "sim_diff": "diff --git a/webpack.config.js b/webpack.config.js @@ -136,8 +136,8 @@ const base = {\ntest: /\\.(gif|jpe?g|png|svg)$/,\nuse: [\n{ loader: 'file-loader', query: { name: 'static/[name]_[hash:7].[ext]' } },\n- { loader: 'image-webpack-loader', query: { bypassOnDebug: true } },\n- ],\n+ nodeEnv !== 'development' && { loader: 'image-webpack-loader' },\n+ ].filter(Boolean),\n},\n{\n"
    },
    {
        "msg": "feat: added new empty favorites test",
        "diff": "diff --git a/tests/unit/views/Favorites.spec.js b/tests/unit/views/Favorites.spec.js @@ -7,7 +7,7 @@ import Favorites from '@/views/Favorites.vue';\nconst localVue = createLocalVue();\nlocalVue.use(BootstrapVue);\n-describe('Favorites', () => {\n+describe('Favorites (Populated)', () => {\nlet wrapper;\nbeforeEach(() => {\n@@ -34,3 +34,23 @@ describe('Favorites', () => {\nexpect(favs.length === 1).toBe(true);\n});\n});\n+\n+describe('Favorites (Empty)', () => {\n+ let wrapper;\n+\n+ beforeEach(() => {\n+ wrapper = mount(Favorites, {\n+ localVue,\n+ router,\n+ });\n+ });\n+\n+ test('show correct empty state', () => {\n+ localStorage.setItem('favorites', JSON.stringify([]));\n+ wrapper = mount(Favorites, {\n+ localVue,\n+ router,\n+ });\n+ expect(wrapper.find('.alert-info').html()).toContain(\"You don't have any favorite drinks\");\n+ });\n+});\n",
        "date": "29.10.2019 20:35:06",
        "repo": "alfg/opendrinks",
        "type": "feat",
        "sim_msg": "refactor(script setup): refactor caption, moving script block to top",
        "sim_diff": "diff --git a/src/components/caption/CdrCaption.vue b/src/components/caption/CdrCaption.vue +<script setup>\n+\n+import {\n+ defineComponent,\n+ useCssModule\n+} from 'vue';\n+import { buildClass } from '../../utils/buildClass';\n+\n+const props = defineProps({\n+ summary: {\n+ type: String,\n+ },\n+ credit: {\n+ type: String,\n+ },\n+});\n+\n+const baseClass = 'cdr-caption';\n+const style = useCssModule();\n+const summaryClass = 'cdr-caption__summary';\n+const citeClass = 'cdr-caption__cite';\n+\n+</script>\n+\n<template>\n<div :class=\"style[baseClass]\">\n<p\n</div>\n</template>\n-<script>\n-\n-import { defineComponent, useCssModule } from 'vue';\n-\n-export default defineComponent({\n- name: 'CdrCaption',\n- props: {\n- summary: String,\n- credit: String,\n- },\n- setup() {\n- return {\n- style: useCssModule(),\n- baseClass: 'cdr-caption',\n- summaryClass: 'cdr-caption__summary',\n- citeClass: 'cdr-caption__cite',\n- };\n- },\n-});\n-</script>\n-\n<style lang=\"scss\" module src=\"./styles/CdrCaption.module.scss\">\n</style>\n"
    },
    {
        "msg": "feat: normalize network input to allow mixed-case input",
        "diff": "diff --git a/frontend/mina-signer/src/MinaSigner.ts b/frontend/mina-signer/src/MinaSigner.ts @@ -19,10 +19,11 @@ class Client {\nprivate network: network;\nconstructor(options: { network: network }) {\n- if (options.network !== \"mainnet\" && options.network !== \"testnet\") {\n+ const specifiedNetwork = options.network.toLowerCase();\n+ if (specifiedNetwork !== \"mainnet\" && specifiedNetwork !== \"testnet\") {\nthrow \"Invalid Specified Network\";\n}\n- this.network = options.network;\n+ this.network = specifiedNetwork;\n}\n/**\n",
        "date": "24.11.2021 12:29:17",
        "repo": "minaprotocol/mina",
        "type": "feat",
        "sim_msg": "refactor: explicit if",
        "sim_diff": "diff --git a/lib/client-base.js b/lib/client-base.js @@ -865,7 +865,9 @@ function write (client, request) {\n}\nfinished = true\n- err = err || socket[kError]\n+ if (!err) {\n+ err = socket[kError]\n+ }\nif (!err && contentLength !== undefined && bytesWritten !== contentLength) {\nerr = new ContentLengthMismatch()\n"
    },
    {
        "msg": "feat: add font weight medium and semibold;\nrefactor: update colors;\nfix: change null to unset to properly generate CSS Variables;",
        "diff": "diff --git a/scss/_variables.scss b/scss/_variables.scss @@ -67,7 +67,7 @@ $primary-50: #988fed !default;\n$primary-25: #ccc7f6 !default;\n$secondary-dark: #212233 !default;\n-$secondary: #3c4b64 !default;\n+$secondary: #9da5b1 !default;\n$secondary-50: #9da5b1 !default;\n$secondary-25: #ced2d8 !default;\n@@ -115,9 +115,9 @@ $theme-colors: (\n// scss-docs-end theme-colors-map\n// Text colors\n-$high-emphasis-dark: rgba($black, .87) !default;\n-$medium-emphasis-dark: rgba($black, .6) !default;\n-$disabled-dark: rgba($black, .38) !default;\n+$high-emphasis-dark: rgba(shift-color($gray-base, +26), .87) !default;\n+$medium-emphasis-dark: rgba(shift-color($gray-base, +26), .6) !default;\n+$disabled-dark: rgba(shift-color($gray-base, +26), .38) !default;\n$high-emphasis-light: rgba($white, .87) !default;\n$medium-emphasis-light: rgba($white, .6) !default;\n@@ -399,7 +399,7 @@ $border-widths: (\n5: 5px\n) !default;\n-$border-color: $gray-300 !default;\n+$border-color: $gray-200 !default;\n$border-radius: .25rem !default;\n$border-radius-sm: .2rem !default;\n@@ -454,6 +454,8 @@ $font-size-lg: $font-size-base * 1.25 !default;\n$font-weight-lighter: lighter !default;\n$font-weight-light: 300 !default;\n$font-weight-normal: 400 !default;\n+$font-weight-medium: 500 !default;\n+$font-weight-semibold: 600 !default;\n$font-weight-bold: 700 !default;\n$font-weight-bolder: bolder !default;\n@@ -486,7 +488,7 @@ $headings-font-family: null !default;\n$headings-font-style: null !default;\n$headings-font-weight: 500 !default;\n$headings-line-height: 1.2 !default;\n-$headings-color: null !default;\n+$headings-color: unset !default;\n// scss-docs-start display-headings\n$display-font-sizes: (\n@@ -750,7 +752,7 @@ $form-check-input-width: 1em !default;\n$form-check-min-height: $font-size-base * $line-height-base !default;\n$form-check-padding-start: $form-check-input-width + .5em !default;\n$form-check-margin-bottom: .125rem !default;\n-$form-check-label-color: null !default;\n+$form-check-label-color: unset !default;\n$form-check-label-cursor: null !default;\n$form-check-transition: background-color .15s ease-in-out, background-position .15s ease-in-out, border-color .15s ease-in-out, box-shadow .15s ease-in-out !default;\n@@ -1074,9 +1076,9 @@ $card-inner-border-radius: subtract($card-border-radius, $card-border-w\n$card-cap-padding-y: $card-spacer-y / 2 !default;\n$card-cap-padding-x: $card-spacer-x !default;\n$card-cap-bg: rgba($black, .03) !default;\n-$card-cap-color: null !default;\n+$card-cap-color: unset !default;\n$card-height: null !default;\n-$card-color: null !default;\n+$card-color: unset !default;\n$card-bg: $white !default;\n$card-img-overlay-padding: $spacer !default;\n@@ -1179,7 +1181,7 @@ $toast-max-width: 350px !default;\n$toast-padding-x: .75rem !default;\n$toast-padding-y: .5rem !default;\n$toast-font-size: .875rem !default;\n-$toast-color: null !default;\n+$toast-color: unset !default;\n$toast-background-color: rgba($white, .85) !default;\n$toast-border-width: 1px !default;\n$toast-border-color: rgba(0, 0, 0, .1) !default;\n@@ -1217,7 +1219,7 @@ $modal-dialog-margin-y-sm-up: 1.75rem !default;\n$modal-title-line-height: $line-height-base !default;\n-$modal-content-color: null !default;\n+$modal-content-color: unset !default;\n$modal-content-bg: $white !default;\n$modal-content-border-color: rgba($black, .2) !default;\n$modal-content-border-width: $border-width !default;\n@@ -1308,7 +1310,7 @@ $progress-bar-transition: width .6s ease !default;\n// List group\n// scss-docs-start list-group-variables\n-$list-group-color: null !default;\n+$list-group-color: unset !default;\n$list-group-bg: $white !default;\n$list-group-border-color: rgba($black, .125) !default;\n$list-group-border-width: $border-width !default;\n@@ -1430,7 +1432,7 @@ $breadcrumb-padding-y: 0 !default;\n$breadcrumb-padding-x: 0 !default;\n$breadcrumb-item-padding-x: .5rem !default;\n$breadcrumb-margin-bottom: 1rem !default;\n-$breadcrumb-bg: null !default;\n+$breadcrumb-bg: unset !default;\n$breadcrumb-divider-color: $gray-600 !default;\n$breadcrumb-active-color: $gray-600 !default;\n$breadcrumb-divider: quote(\"/\") !default;\n@@ -1605,4 +1607,4 @@ $kbd-font-size: $code-font-size !default;\n$kbd-color: $high-emphasis-light !default;\n$kbd-bg: $gray-900 !default;\n-$pre-color: null !default;\n+$pre-color: unset !default;\n",
        "date": "04.01.2021 15:10:43",
        "repo": "coreui/coreui",
        "type": "feat",
        "sim_msg": "fix: focus style",
        "sim_diff": "diff --git a/src/assets/css/suneditor.css b/src/assets/css/suneditor.css .sun-editor .se-btn-primary:hover, .sun-editor .se-btn-primary:focus {color:#000; background-color:#80bdff; border-color:#3f9dff; outline:0 none;}\n.sun-editor .se-btn-primary:active {color:#fff; background-color:#3f9dff; border-color:#4592ff; -webkit-box-shadow:inset 0 3px 5px #4592ff; box-shadow:inset 0 3px 5px #4592ff;}\n-/** --- Input focus effect */\n-.sun-editor input:focus, .sun-editor select:focus, .sun-editor textarea:focus {border-color:#80bdff; border-width:1px; border-style:solid; outline:0; -webkit-box-shadow:0 0 0 0.2rem #c7deff; box-shadow:0 0 0 0.2rem #c7deff;}\n+/** --- Input */\n+.sun-editor input, .sun-editor select, .sun-editor textarea {color:#000; border:1px solid #ccc; border-radius:4px;}\n+.sun-editor input:focus, .sun-editor select:focus, .sun-editor textarea:focus {border-color:#80bdff; border-width:1px; border-style:solid; outline:0; -webkit-box-shadow:0 0 0 0.2rem #c7deff; box-shadow:0 0 0 0.2rem #c7deff; transition:border-color .15s ease-in-out,box-shadow .15s ease-in-out;}\n/* se-btn button active*/\n.sun-editor .se-btn:enabled.active {color:#4592ff; outline:0 none;}\n.sun-editor .se-dialog .se-dialog-inner .se-dialog-form .se-dialog-form-files .se-dialog-files-edge-button:hover {background-color:#f0f0f0; outline:0 none;}\n.sun-editor .se-dialog .se-dialog-inner .se-dialog-form .se-dialog-form-files .se-dialog-files-edge-button:active {background-color:#e9e9e9; -webkit-box-shadow:inset 0 3px 5px #d6d6d6; box-shadow:inset 0 3px 5px #d6d6d6;}\n/* dialog - modal - input */\n-.sun-editor .se-dialog .se-dialog-inner .se-dialog-form .se-input-select {display:inline-block; width:auto; height:34px; font-size:14px; text-align:center; line-height:1.42857143; color:#000; border:1px solid #ccc; border-radius:4px; transition:border-color .15s ease-in-out,box-shadow .15s ease-in-out;}\n-.sun-editor .se-dialog .se-dialog-inner .se-dialog-form .se-input-control {display:inline-block; width:70px; height:34px; font-size:14px; text-align:center; line-height:1.42857143; color:#000; border:1px solid #ccc; border-radius:4px; transition:border-color .15s ease-in-out,box-shadow .15s ease-in-out;}\n-.sun-editor .se-dialog .se-dialog-inner .se-dialog-form .se-input-form {display:block; width:100%; height:34px; font-size:14px; line-height:1.42857143; padding:0 4px; color:#000; border:1px solid #ccc; border-radius:4px; transition:border-color .15s ease-in-out,box-shadow .15s ease-in-out;}\n+.sun-editor .se-dialog .se-dialog-inner .se-dialog-form .se-input-select {display:inline-block; width:auto; height:34px; font-size:14px; text-align:center; line-height:1.42857143;}\n+.sun-editor .se-dialog .se-dialog-inner .se-dialog-form .se-input-control {display:inline-block; width:70px; height:34px; font-size:14px; text-align:center; line-height:1.42857143;}\n+.sun-editor .se-dialog .se-dialog-inner .se-dialog-form .se-input-form {display:block; width:100%; height:34px; font-size:14px; line-height:1.42857143; padding:0 4px;}\n.sun-editor .se-dialog .se-dialog-inner .se-dialog-form .se-input-form.se-input-url:disabled {text-decoration:line-through; color:#999;}\n.sun-editor .se-dialog .se-dialog-inner .se-dialog-form .se-video-ratio {width:70px; margin-left:4px;}\n.sun-editor .se-dialog .se-dialog-inner .se-dialog-form a {color:#004cff;}\n"
    },
    {
        "msg": "feat(popover): events emission on  by Popover component",
        "diff": "diff --git a/packages/kiwi-core/src/Popover/index.js b/packages/kiwi-core/src/Popover/index.js @@ -52,12 +52,15 @@ const Popover = {\nmethods: {\nclosePopover () {\nthis._isOpen = false\n+ this.$emit('close')\n},\nopenPopover () {\nthis._isOpen = true\n+ this.$emit('open')\n},\ntoggleOpen () {\nthis._isOpen = !this._isOpen\n+ this.$emit('toggle', this._isOpen)\n},\n/**\n* Sets the trigger node value to reactive context\n",
        "date": "09.02.2020 16:11:49",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "feat",
        "sim_msg": "fix(popover): fixes close emit argument\nemit `bv::hide::popover` instead of `bv::hide::popover` to close a specific popover",
        "sim_diff": "diff --git a/src/directives/popover/README.md b/src/directives/popover/README.md @@ -388,7 +388,7 @@ this.$root.$emit('bv::hide::popover');\nTo close a **specific popover**, pass the trigger element's `id` as the first argument:\n```js\n-this.$root.$emit('bv::show::popover', 'my-trigger-button-id');\n+this.$root.$emit('bv::hide::popover', 'my-trigger-button-id');\n```\nTo open (show) a **specific popover**, pass the trigger element's `id` as the first argument when\n"
    },
    {
        "msg": "feat(Input): add `autoCapitalize` to html input props\nfeat(Input): add `autoCapitalize` to html input props",
        "diff": "diff --git a/src/elements/Input/Input.js b/src/elements/Input/Input.js @@ -22,7 +22,7 @@ export const htmlInputPropNames = [\n'selected', 'defaultValue', 'defaultChecked',\n// LIMITED HTML PROPS\n- 'autoComplete', 'autoFocus', 'checked', 'form', 'max', 'maxLength', 'min',\n+ 'autoCapitalize', 'autoComplete', 'autoFocus', 'checked', 'form', 'max', 'maxLength', 'min',\n'name', 'pattern', 'placeholder', 'readOnly', 'required', 'step', 'type', 'value',\n// Heads Up!\n",
        "date": "13.02.2017 19:27:33",
        "repo": "semantic-org/semantic-ui-react",
        "type": "feat",
        "sim_msg": "docs: possible values for the autocomplete prop were added on Input/index.js/Input.propTypes",
        "sim_diff": "diff --git a/src/components/Input/index.js b/src/components/Input/index.js @@ -130,7 +130,13 @@ Input.propTypes = {\n/** The id of the outer element. */\nid: PropTypes.string,\n/** A string indicating the type of autocomplete functionality.\n- * If any, to allow on the input. */\n+ * If any, to allow on the input.\n+ *\n+ * Values accepted by the autocomplete prop: name, organization-title, username, new-password,\n+ * street-address, country, cc-name, transaction-currency, language, bday, sex, url, photo,\n+ * tel, email and impp\n+ *\n+ * For a detailed list, go to: https://www.w3.org/TR/WCAG21/#input-purposes */\nautoComplete: PropTypes.string,\n};\n"
    },
    {
        "msg": "feat(styles): add more comments in /utils.jsx\nfeat(styles): add more comments in /utils.jsx",
        "diff": "diff --git a/src/common/styles/utils.jsx b/src/common/styles/utils.jsx @@ -6,6 +6,9 @@ const pxToEm = px => {\n}\nconst iWantToUseEm = true\n+// NOTE: This grid don't match SUI's grid.\n+// NOTE: RSUI has <Responsive> element!\n+// You might don't need media template function for styled-components\nconst sizes = _.mapValues(\n{\nxs: 0, // Extra small screen / phone\n@@ -15,13 +18,13 @@ const sizes = _.mapValues(\nxl: 1200 // Extra large screen / wide desktop\n},\n(value, key) => {\n- // NOTE: Please, read more about `em`, before switching to it\n+ // NOTE: Please, read more about `em` before switching\n// https://stackoverflow.com/questions/22228568/switching-to-em-based-media-queries\nreturn iWantToUseEm ? pxToEm(value) : value + 'px'\n}\n)\n-// FIXME: @Metnew: dirty-hardcode version of media template!\n+// FIXME: @Metnew: this block may be rewritten more elegant (like the code below, from off docs)\nexport const media = {\nxs: (...args) => css`\n@media only screen and (max-width: ${sizes.sm}) {\n@@ -66,6 +69,7 @@ export const media = {\n}\n// NOTE: from official docs, but it looks like a black-voodoo-magic\n+// ####\n// // iterate through the sizes and create a media template\n// export const media = Object.keys(sizes).reduce((accumulator, label, i) => {\n// console.log(accumulator, label)\n",
        "date": "30.09.2017 14:25:05",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "feat: add an API description to the readme",
        "sim_diff": "diff --git a/README.md b/README.md @@ -122,6 +122,52 @@ const Component = styled.div`\n</ThemeProvider>;\n```\n+## API\n+\n+ <strong>All incoming values are converted to em.</strong>\n+\n+\n+ For example, let's take default values of breakpoints.\n+\n+### up\n+\n+ ```js\n+ // (tablets, 768px and up)\n+ up('tablet') => '@media (min-width: 768px) { ... }'\n+ ```\n+\n+### down\n+\n+ We occasionally use media queries that go in the other direction (the given screen size or smaller):\n+\n+```js\n+ // (tablets, from 768px to 991.98px)\n+ down('tablet') => '@media (max-width: 991.98px) { ... }'\n+ ```\n+\n+\n+<br/>\n+\n+ >Note that since browsers do not currently support [range context queries](https://www.w3.org/TR/mediaqueries-4/#range-context), we work around the limitations of [min- and max- prefixes](https://www.w3.org/TR/mediaqueries-4/#mq-min-max) and viewports with fractional widths (which can occur under certain conditions on high-dpi devices, for instance) by using values with higher precision for these comparisons.\n+\n+<br/>\n+\n+\n+Similarly, media queries may span multiple breakpoint widths:\n+\n+### between\n+\n+ ```js\n+ // (from tablet to desktop )\n+ between('tablet', 'desktop') => '@media (min-width: 768px) and (max-width: 1199.98px) { ... }'\n+ ```\n+\n+### only\n+\n+ ```js\n+ only('tablet') => '@media (min-width: 768px) and (max-width: 991.98px) { ... }'\n+ ```\n+\n## License\nMIT License\n"
    },
    {
        "msg": "feat: Clean output prior to production build",
        "diff": "diff --git a/src/build.js b/src/build.js +import { promises as fs } from 'fs';\nimport * as kl from 'kolorist';\nimport { bundleProd } from './bundler.js';\nimport { bundleStats } from './lib/output-utils.js';\n@@ -11,6 +12,8 @@ import { setCwd } from './plugins/npm-plugin/registry.js';\nexport default async function build(options = {}) {\noptions.out = options.out || 'dist';\n+ await fs.rmdir(options.out, { recursive: true });\n+\n// @todo remove this hack once registry.js is instantiable\nsetCwd(options.cwd);\n",
        "date": "03.12.2020 19:06:51",
        "repo": "preactjs/wmr",
        "type": "feat",
        "sim_msg": "chore: re-enable full js build",
        "sim_diff": "diff --git a/build/script.build.javascript.js b/build/script.build.javascript.js @@ -69,13 +69,13 @@ const builds = [\n}\n]\n-// addAssets(builds, 'i18n')\n-// addAssets(builds, 'icons')\n+addAssets(builds, 'i18n')\n+addAssets(builds, 'icons')\n-// require('./build.transforms').generate()\n-// build(builds).then(() => {\n+require('./build.transforms').generate()\n+build(builds).then(() => {\nrequire('./build.helpers').generate()\n-// })\n+})\n/**\n* Helpers\n"
    },
    {
        "msg": "feat: expose $el while evaluating data expression",
        "diff": "diff --git a/src/component.js b/src/component.js @@ -17,7 +17,7 @@ export default class Component {\nconst dataExpression = dataAttr === '' ? '{}' : dataAttr\nconst initExpression = this.$el.getAttribute('x-init')\n- this.unobservedData = seedDataForCloning ? seedDataForCloning : saferEval(dataExpression, {})\n+ this.unobservedData = seedDataForCloning ? seedDataForCloning : saferEval(dataExpression, { $el: this.$el })\n/* IE11-ONLY:START */\n// For IE11, add our magic properties to the original data for access.\n",
        "date": "12.05.2020 09:11:16",
        "repo": "alpinejs/alpine",
        "type": "feat",
        "sim_msg": "docs: fix Link warning/error",
        "sim_diff": "diff --git a/docs/components/Link/index.web.js b/docs/components/Link/index.web.js @@ -14,7 +14,7 @@ const Link = (props: Object) => {\n\" \" + StyleSheet.resolve(injectedProps.style).className;\ninjectedProps.style = undefined;\n}\n- if (typeof activeStyle === \"number\") {\n+ if (typeof injectedProps.activeStyle === \"number\") {\ninjectedProps.activeClassName +=\n\" \" + StyleSheet.resolve(injectedProps.activeStyle).className;\ninjectedProps.activeStyle = undefined;\n"
    },
    {
        "msg": "feat(Modal): pass event object to toggle prop",
        "diff": "diff --git a/src/Modal.js b/src/Modal.js @@ -163,13 +163,13 @@ class Modal extends React.Component {\nconst container = this._dialog;\nif (e.target && !container.contains(e.target) && this.props.toggle) {\n- this.props.toggle();\n+ this.props.toggle(e);\n}\n}\nhandleEscape(e) {\nif (this.props.isOpen && this.props.keyboard && e.keyCode === 27 && this.props.toggle) {\n- this.props.toggle();\n+ this.props.toggle(e);\n}\n}\n",
        "date": "16.03.2018 15:03:47",
        "repo": "reactstrap/reactstrap",
        "type": "feat",
        "sim_msg": "fix: modal can accept any react component for buttons",
        "sim_diff": "diff --git a/src/Modal/index.jsx b/src/Modal/index.jsx @@ -136,8 +136,8 @@ class Modal extends React.Component {\nrenderButtons() {\nreturn this.props.buttons.map((button) => {\n- // button is either a Button component that we want clone or a set of props\n- if (button.type === Button) {\n+ // button is either a React component that we want clone or a set of props\n+ if (React.isValidElement(button)) {\nreturn React.cloneElement(button, {\nkey: button.props.children,\nonKeyDown: this.handleKeyDown,\n"
    },
    {
        "msg": "feat: keep focusing inside the popup by `tab` key",
        "diff": "diff --git a/src/utils/popup/popup-manager.js b/src/utils/popup/popup-manager.js @@ -149,19 +149,41 @@ const PopupManager = {\n}\n}\n};\n-!Vue.prototype.$isServer && window.addEventListener('keydown', function(event) {\n- if (event.keyCode === 27) { // ESC\n+\n+const getTopPopup = function() {\n+ if (Vue.prototype.$isServer) return;\nif (PopupManager.modalStack.length > 0) {\n- const topItem = PopupManager.modalStack[PopupManager.modalStack.length - 1];\n- if (!topItem) return;\n- const instance = PopupManager.getInstance(topItem.id);\n- if (instance.closeOnPressEscape) {\n- instance.handleClose\n- ? instance.handleClose()\n- : (instance.handleAction ? instance.handleAction('cancel') : instance.close());\n+ const topPopup = PopupManager.modalStack[PopupManager.modalStack.length - 1];\n+ if (!topPopup) return;\n+ const instance = PopupManager.getInstance(topPopup.id);\n+\n+ return instance;\n}\n+};\n+\n+if (!Vue.prototype.$isServer) {\n+ // handle `esc` key when the popup is shown\n+ window.addEventListener('keydown', function(event) {\n+ if (event.keyCode === 27) {\n+ const topPopup = getTopPopup();\n+\n+ if (topPopup && topPopup.closeOnPressEscape) {\n+ topPopup.handleClose\n+ ? topPopup.handleClose()\n+ : (topPopup.handleAction ? topPopup.handleAction('cancel') : topPopup.close());\n}\n}\n});\n+ // keep focusing inside the popup by `tab` key\n+ document.addEventListener('focusin', function(event) {\n+ const topPopup = getTopPopup();\n+\n+ if (topPopup && !topPopup.$el.contains(event.target)) {\n+ event.stopPropagation();\n+ topPopup.$el.focus();\n+ }\n+ });\n+}\n+\nexport default PopupManager;\n",
        "date": "10.05.2017 17:04:41",
        "repo": "hug-sun/element3",
        "type": "feat",
        "sim_msg": "fix(QDialog): changing maximized and value in same cycle breaks parts of cleanup",
        "sim_diff": "diff --git a/ui/src/components/dialog/QDialog.js b/ui/src/components/dialog/QDialog.js @@ -78,11 +78,8 @@ export default Vue.extend({\n}\n},\n- maximized (newV, oldV) {\n- if (this.showing === true) {\n- this.__updateState(false, oldV)\n- this.__updateState(true, newV)\n- }\n+ maximized (state) {\n+ this.showing === true && this.__updateMaximized(state)\n},\nuseBackdrop (v) {\n@@ -167,8 +164,7 @@ export default Vue.extend({\n: void 0\nthis.$el.dispatchEvent(create('popup-show', { bubbles: true }))\n-\n- this.__updateState(true, this.maximized)\n+ this.__updateMaximized(this.maximized)\nEscapeKey.register(this, () => {\nif (this.seamless !== true) {\n@@ -250,7 +246,8 @@ export default Vue.extend({\nif (hiding === true || this.showing === true) {\nEscapeKey.pop(this)\n- this.__updateState(false, this.maximized)\n+ this.__updateMaximized(false)\n+\nif (this.seamless !== true) {\nthis.__preventScroll(false)\nthis.__preventFocusout(false)\n@@ -258,15 +255,22 @@ export default Vue.extend({\n}\n},\n- __updateState (opening, maximized) {\n- if (maximized === true) {\n- if (opening === true) {\n+ __updateMaximized (active) {\n+ if (active === true) {\n+ if (this.isMaximized !== true) {\nmaximizedModals < 1 && document.body.classList.add('q-body--dialog')\n+ maximizedModals++\n+\n+ this.isMaximized = true\n+ }\n}\n- else if (maximizedModals < 2) {\n+ else if (this.isMaximized === true) {\n+ if (maximizedModals < 2) {\ndocument.body.classList.remove('q-body--dialog')\n}\n- maximizedModals += opening === true ? 1 : -1\n+\n+ maximizedModals--\n+ this.isMaximized = false\n}\n},\n"
    },
    {
        "msg": "feat(api-utils): make xhr wrapper less complex\nfeat(api-utils): make xhr wrapper less complex",
        "diff": "diff --git a/src/common/api/utils/index.js b/src/common/api/utils/index.js -// @flow\n-export {get, post} from './xhr_wrapper'\n+/**\n+ * @flow\n+ * @file Simple fetch wrapper\n+ */\n+import fetch from 'isomorphic-fetch'\n+\n+// USAGE:\n+export const get = requestWrapper('GET')\n+// get('https://www.google.com', options)\n+export const post = requestWrapper('POST')\n+// post('https://www.google.com', data)\n+\n+// Create request wrapper for certain method\n+function requestWrapper (method: 'GET' | 'POST' | 'DELETE' | 'PUT' | 'PATCH') {\n+ // Creates request to `url` with `data`\n+ return async (url: string, data: any = null) => {\n+ const body = data ? {body: JSON.stringify(data)} : {}\n+\n+ const request = {\n+ method,\n+ headers: {},\n+ mode: process.env.NODE_ENV === 'development' ? 'cors' : 'same-origin',\n+ ...body\n+ }\n+\n+ return fetch(url, request)\n+ .then(checkStatus)\n+ .then(parseJSON)\n+ .catch((err: any) => err)\n+ }\n+}\n+\n+async function parseJSON (res: Response): Object {\n+ let json: Object\n+ const {status} = res\n+ // status response field in return object\n+ try {\n+ json = await res.json()\n+ } catch (e) {\n+ if (res.status === 204) {\n+ return {ok: true, data: {}, status}\n+ }\n+ return {ok: false, status}\n+ }\n+ if (!res.ok) {\n+ return {data: json, ok: false, status}\n+ }\n+ return {data: json, ok: true, status}\n+}\n+\n+function checkStatus (response: Response): Response {\n+ const {status} = response\n+ if (status >= 200 && status < 300) {\n+ // Everything is ok\n+ } else if (status >= 300 && status < 400) {\n+ // 300 - Multiple Choices\n+ // 301 - Moved Permanently,\n+ // 302 - Found, Moved Temporarily\n+ // 304 - not modified\n+ // 307 - Temporary Redirect\n+ } else if (status === 400) {\n+ // Probably is a validation error\n+ } else if (status === 403 || status === 401) {\n+ // 401 - Forbidden\n+ // 403 - Unauthorized\n+ } else if (status === 404) {\n+ // Not Found\n+ } else if (status >= 500) {\n+ // Server error\n+ }\n+ return response\n+}\n",
        "date": "18.02.2018 15:58:11",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "refactor(getErrorMessageFromJson): Display old network error in small text if json content overrides",
        "sim_diff": "diff --git a/lib/common/actions/index.js b/lib/common/actions/index.js @@ -4,7 +4,6 @@ import fetch from 'isomorphic-fetch'\nimport {GTFS_GRAPHQL_PREFIX} from '../../common/constants'\nimport { setErrorMessage } from '../../manager/actions/status'\n-\nimport type {dispatchFn, getStateFn} from '../../types/reducers'\ntype ErrorResponse = {\n@@ -87,7 +86,6 @@ function getErrorMessageFromJson (\n) {\nlet action = 'RELOAD'\nlet detail\n- // let detail, message\nlet errorMessage = `Network error!\\n\\n(${method} request on ${url})`\nif (status < 500) {\naction = status === 401\n@@ -98,6 +96,10 @@ function getErrorMessageFromJson (\nif (json) {\ndetail = json.detail\nerrorMessage = json.message || JSON.stringify(json)\n+ // if status >= 500 and detail is being overrode, add original network error in small text\n+ if (status >= 500) {\n+ detail = detail ? detail += `\\nNetwork error!\\n\\n(${method} request on ${url})` : `\\nNetwork error!\\n\\n(${method} request on ${url})`\n+ }\n}\nconsole.error(`Error making ${method} request to ${url}: `, errorMessage)\nreturn { action, detail, message: errorMessage }\n"
    },
    {
        "msg": "feat(locals): add basic text for dashboard\nfeat(locals): add basic text for dashboard",
        "diff": "diff --git a/locals/en.json b/locals/en.json {\n- \"Header.Popup.HeaderButton\": \"Hello {name}\"\n+ \"Dashboard.Text\": \"Hello HELLOOOO\"\n}\n",
        "date": "29.09.2017 20:51:38",
        "repo": "metnew/suicrux",
        "type": "feat",
        "sim_msg": "docs: Make a header consistent with the others",
        "sim_diff": "diff --git a/docs/examples/index.js b/docs/examples/index.js @@ -60,7 +60,7 @@ export default rootPath => ({\n},\n{\npath: `${rootPath}/header-body-aligned`,\n- title: 'Align sticky header and body',\n+ title: 'Align Sticky Header and Body',\ncomponent: require('./header-body-aligned.md')\n}\n]\n"
    },
    {
        "msg": "feat: if RollbarProxy is defined, use the proxy to send all Rollbar events",
        "diff": "diff --git a/src/browser/transport.js b/src/browser/transport.js @@ -71,7 +71,23 @@ function _makeZoneRequest(accessToken, url, method, data, callback, requestFacto\n}\n}\n+/* global RollbarProxy */\n+function _proxyRequest(json, callback) {\n+ var rollbarProxy = new RollbarProxy();\n+ rollbarProxy.sendJsonPayload(\n+ json,\n+ function(_msg) { /* do nothing */ }, // eslint-disable-line no-unused-vars\n+ function(err) {\n+ callback(new Error(err));\n+ }\n+ );\n+}\n+\nfunction _makeRequest(accessToken, url, method, data, callback, requestFactory) {\n+ if (typeof RollbarProxy !== 'undefined') {\n+ return _proxyRequest(data, callback);\n+ }\n+\nvar request;\nif (requestFactory) {\nrequest = requestFactory();\n",
        "date": "11.04.2019 15:14:42",
        "repo": "rollbar/rollbar.js",
        "type": "feat",
        "sim_msg": "refactor: Add rules headers to tunnel proxy headers",
        "sim_diff": "diff --git a/lib/index.js b/lib/index.js @@ -119,6 +119,16 @@ function tunnelProxy(server, proxy) {\nreturn emitError(new Error('No plugin.tunnelServer'));\n}\nproxyUrl = 'proxy://127.0.0.1:' + tunnelPort;\n+ headers[pluginMgr.FULL_URL_HEADER] = encodeURIComponent(tunnelUrl);\n+ if (req.reqId) {\n+ headers[pluginMgr.REQ_ID_HEADER] = req.reqId;\n+ }\n+ var localHost = _rules.host;\n+ if (localHost) {\n+ headers[pluginMgr.LOCAL_HOST_HEADER] = headers[pluginMgr.CUR_HOST_HEADER]\n+ = encodeURIComponent(util.removeProtocol(localHost.matcher, true)\n+ + (localHost.port ? ':' + localHost.port : ''));\n+ }\n}\nvar realUrl = _rules.rule && _rules.rule.url.replace('https:', 'tunnel:');\n"
    },
    {
        "msg": "feat: finally updating sponsor section to separate sponsors",
        "diff": "diff --git a/components/ReusableSections/SponsorsSection/SponsorsSection.js b/components/ReusableSections/SponsorsSection/SponsorsSection.js import React from 'react';\n-import Content from 'components/Content/Content';\n+import Container from 'components/Container/Container';\n+import Heading from 'components/Heading/Heading';\nimport PartnerLogoLink from 'components/PartnerLogoLink/PartnerLogoLink';\n-import partners from 'common/constants/partners';\n+import partners, { PARTNER_TYPES } from 'common/constants/partners';\n+import styles from './SponsorsSection.css';\n+\n+const isPaidSponsor = partner => partner.type === PARTNER_TYPES.PAID;\nconst SponsorsSection = () => (\n- <Content\n- title=\"Sponsors\"\n- theme=\"gray\"\n- hasTitleUnderline\n- columns={partners.map(partner => (\n+ <Container theme=\"gray\">\n+ <Heading text=\"Sponsors\" hasTitleUnderline headingLevel={3} />\n+\n+ <Heading text=\"Paid Sponsors\" headingLevel={4} />\n+ <p>\n+ These sponsors have donated cash to help keep the mission going here at Operation Code. They\n+ may or may not have also donated to our cause via others means.\n+ </p>\n+ <div className={styles.columnsContainer}>\n+ {partners\n+ .filter(x => isPaidSponsor(x))\n+ .map(partner => (\n+ <PartnerLogoLink key={partner.name} {...partner} size=\"large\" />\n+ ))}\n+ </div>\n+\n+ <Heading text=\"In-Kind Sponsors\" headingLevel={4} />\n+ <p>\n+ The following organizations have helped Operation Code through services, products,\n+ advertisements, scholarships, or sponsorships. We thank them for their contributions.\n+ </p>\n+ <div className={styles.columnsContainer}>\n+ {partners\n+ .filter(x => !isPaidSponsor(x))\n+ .map(partner => (\n<PartnerLogoLink key={partner.name} {...partner} />\n))}\n- />\n+ </div>\n+ </Container>\n);\nexport default SponsorsSection;\n",
        "date": "16.10.2019 13:23:14",
        "repo": "operationcode/front-end",
        "type": "feat",
        "sim_msg": "fix: don't mutate the transaction object",
        "sim_diff": "diff --git a/packages/frontend/src/components/sign/v2/SignTransactionDetails.js b/packages/frontend/src/components/sign/v2/SignTransactionDetails.js @@ -123,15 +123,21 @@ export default ({\n<div className='contract-details'>\n<div className='title'><Translate id='sign.contractDetails' /></div>\n- {transactions.map((transaction, i) => (\n- <div key={transaction.receiverId}>\n+ {transactions.map(({ receiverId, actions }, i) => {\n+ const sortedActions = [\n+ ...actions.filter((a) => Object.keys(a)[0] === 'functionCall'),\n+ ...actions.filter((a) => Object.keys(a)[0] !== 'functionCall')\n+ ];\n+\n+ return (\n+ <div key={receiverId}>\n<div className='entry'>\n<Translate id='sign.details.forContract' />\n- <a href={`${EXPLORER_URL}/accounts/${transaction.receiverId}`} rel='noopener noreferrer' target='_blank'>{transaction.receiverId} <ArrowUpRight /></a>\n+ <a href={`${EXPLORER_URL}/accounts/${receiverId}`} rel='noopener noreferrer' target='_blank'>{receiverId} <ArrowUpRight /></a>\n</div>\n- {transaction.actions.sort((a) => Object.keys(a)[0] === 'functionCall' ? -1 : 1).map((action, i) => {\n+ {sortedActions.map((action, i) => {\nconst methodName = action.functionCall?.methodName || '';\n- const uniqueMethodId = `${methodName}-${transaction.receiverId}`;\n+ const uniqueMethodId = `${methodName}-${receiverId}`;\nreturn (\n<div key={methodName}>\n<div className='entry function'>\n@@ -153,7 +159,8 @@ export default ({\n);\n})}\n</div>\n- ))}\n+ );\n+ })}\n</div>\n</StyledContainer>\n);\n"
    },
    {
        "msg": "feat(button): import components path modify",
        "diff": "diff --git a/src/index.ts b/src/index.ts @@ -4,7 +4,7 @@ import { ElAvatar } from './components/avatar'\nimport { ElLink } from './components/link/'\nimport { ElIcon } from './components/icon/'\nimport { ElBadge } from './components/badge/'\n-import { ElButton } from './components/Button/'\n+import { ElButton } from './components/button/'\nimport '/theme/src/icon.scss'\nconst components = [\n",
        "date": "20.06.2022 18:20:24",
        "repo": "hug-sun/element3",
        "type": "feat",
        "sim_msg": "feat: add application to the index file",
        "sim_diff": "diff --git a/index.js b/index.js import Accordion from './Accordion';\nimport AccordionSection from './AccordionSection';\n+import Application from './Application';\nimport Avatar from './Avatar';\nimport AvatarMenu from './AvatarMenu';\nimport Badge from './Badge';\n@@ -49,6 +50,7 @@ import VerticalSectionOverflow from './VerticalSectionOverflow';\nexport {\nAccordion,\nAccordionSection,\n+ Application,\nAvatar,\nAvatarMenu,\nBadge,\n"
    },
    {
        "msg": "feat(create-razzle-app): make verbose show install",
        "diff": "diff --git a/packages/create-razzle-app/lib/utils/install.js b/packages/create-razzle-app/lib/utils/install.js @@ -22,7 +22,7 @@ module.exports = function install(opts) {\nconsole.log(messages.installing(packages));\nprocess.chdir(projectPath);\n- const stdio = 'pipe';\n+ const stdio = opts.verbose ? 'inherit' : 'pipe';\nreturn new Promise(function(resolve, reject) {\nconst stopInstallSpinner = output.wait('Installing modules');\n",
        "date": "06.03.2021 20:10:59",
        "repo": "jaredpalmer/razzle",
        "type": "feat",
        "sim_msg": "chore(spec): return stderr from Hops-build function",
        "sim_diff": "diff --git a/packages/spec/helpers/test-helpers.js b/packages/spec/helpers/test-helpers.js @@ -15,9 +15,11 @@ const build = async ({ cwd, env = {}, argv = [] }) => {\nconst hopsBin = resolveFrom(cwd, 'hops/bin');\nconst command = `${hopsBin} build ${argv.join(' ')}`;\ndebug('Starting', command);\n- await exec(command, { env, cwd });\n-\n- return cwd;\n+ try {\n+ return await exec(command, { env, cwd });\n+ } catch (err) {\n+ return { stderr: err.message };\n+ }\n};\nconst startServer = ({ cwd, command, env = {}, argv = [] }) =>\nnew Promise((resolve, reject) => {\n"
    },
    {
        "msg": "feat: add hebrew support to isAlpha and isAlphanumeric",
        "diff": "diff --git a/README.md b/README.md @@ -77,8 +77,8 @@ Validator | Description\n***contains(str, seed)*** | check if the string contains the seed.\n**equals(str, comparison)** | check if the string matches the comparison.\n**isAfter(str [, date])** | check if the string is a date that's after the specified date (defaults to now).\n-**isAlpha(str [, locale])** | check if the string contains only letters (a-zA-Z).<br/><br/>Locale is one of `['ar', 'ar-AE', 'ar-BH', 'ar-DZ', 'ar-EG', 'ar-IQ', 'ar-JO', 'ar-KW', 'ar-LB', 'ar-LY', 'ar-MA', 'ar-QA', 'ar-QM', 'ar-SA', 'ar-SD', 'ar-SY', 'ar-TN', 'ar-YE', 'bg-BG', 'cs-CZ', 'da-DK', 'de-DE', 'el-GR', 'en-AU', 'en-GB', 'en-HK', 'en-IN', 'en-NZ', 'en-US', 'en-ZA', 'en-ZM', 'es-ES', 'fr-FR', 'hu-HU', 'it-IT', 'ku-IQ', 'nb-NO', 'nl-NL', 'nn-NO', 'pl-PL', 'pt-BR', 'pt-PT', 'ru-RU', 'sl-SI', 'sk-SK', 'sr-RS', 'sr-RS@latin', 'sv-SE', 'tr-TR', 'uk-UA']`) and defaults to `en-US`. Locale list is `validator.isAlphaLocales`.\n-**isAlphanumeric(str [, locale])** | check if the string contains only letters and numbers.<br/><br/>Locale is one of `['ar', 'ar-AE', 'ar-BH', 'ar-DZ', 'ar-EG', 'ar-IQ', 'ar-JO', 'ar-KW', 'ar-LB', 'ar-LY', 'ar-MA', 'ar-QA', 'ar-QM', 'ar-SA', 'ar-SD', 'ar-SY', 'ar-TN', 'ar-YE', 'bg-BG', 'cs-CZ', 'da-DK', 'de-DE', 'el-GR', 'en-AU', 'en-GB', 'en-HK', 'en-IN', 'en-NZ', 'en-US', 'en-ZA', 'en-ZM', 'es-ES', 'fr-FR', 'hu-HU', 'it-IT', 'ku-IQ', 'nb-NO', 'nl-NL', 'nn-NO', 'pl-PL', 'pt-BR', 'pt-PT', 'ru-RU', 'sl-SI', 'sk-SK', 'sr-RS', 'sr-RS@latin', 'sv-SE', 'tr-TR', 'uk-UA']`) and defaults to `en-US`. Locale list is `validator.isAlphanumericLocales`.\n+**isAlpha(str [, locale])** | check if the string contains only letters (a-zA-Z).<br/><br/>Locale is one of `['ar', 'ar-AE', 'ar-BH', 'ar-DZ', 'ar-EG', 'ar-IQ', 'ar-JO', 'ar-KW', 'ar-LB', 'ar-LY', 'ar-MA', 'ar-QA', 'ar-QM', 'ar-SA', 'ar-SD', 'ar-SY', 'ar-TN', 'ar-YE', 'bg-BG', 'cs-CZ', 'da-DK', 'de-DE', 'el-GR', 'en-AU', 'en-GB', 'en-HK', 'en-IN', 'en-NZ', 'en-US', 'en-ZA', 'en-ZM', 'es-ES', 'fr-FR', 'he', 'hu-HU', 'it-IT', 'ku-IQ', 'nb-NO', 'nl-NL', 'nn-NO', 'pl-PL', 'pt-BR', 'pt-PT', 'ru-RU', 'sl-SI', 'sk-SK', 'sr-RS', 'sr-RS@latin', 'sv-SE', 'tr-TR', 'uk-UA']`) and defaults to `en-US`. Locale list is `validator.isAlphaLocales`.\n+**isAlphanumeric(str [, locale])** | check if the string contains only letters and numbers.<br/><br/>Locale is one of `['ar', 'ar-AE', 'ar-BH', 'ar-DZ', 'ar-EG', 'ar-IQ', 'ar-JO', 'ar-KW', 'ar-LB', 'ar-LY', 'ar-MA', 'ar-QA', 'ar-QM', 'ar-SA', 'ar-SD', 'ar-SY', 'ar-TN', 'ar-YE', 'bg-BG', 'cs-CZ', 'da-DK', 'de-DE', 'el-GR', 'en-AU', 'en-GB', 'en-HK', 'en-IN', 'en-NZ', 'en-US', 'en-ZA', 'en-ZM', 'es-ES', 'fr-FR', 'he', 'hu-HU', 'it-IT', 'ku-IQ', 'nb-NO', 'nl-NL', 'nn-NO', 'pl-PL', 'pt-BR', 'pt-PT', 'ru-RU', 'sl-SI', 'sk-SK', 'sr-RS', 'sr-RS@latin', 'sv-SE', 'tr-TR', 'uk-UA']`) and defaults to `en-US`. Locale list is `validator.isAlphanumericLocales`.\n**isAscii(str)** | check if the string contains ASCII chars only.\n**isBase32(str)** | check if a string is base32 encoded.\n**isBase64(str)** | check if a string is base64 encoded.\n",
        "date": "05.10.2019 16:18:57",
        "repo": "validatorjs/validator.js",
        "type": "feat",
        "sim_msg": "chore(gcc): Update gcc arguments for xt build.",
        "sim_diff": "diff --git a/src/os/xt/gcc-args b/src/os/xt/gcc-args ---dependency_mode STRICT --summary_detail_level 3 --language_in ECMASCRIPT5_STRICT --warning_level VERBOSE --jscomp_error='accessControls' --jscomp_error='ambiguousFunctionDecl' --jscomp_error='checkEventfulObjectDisposal' --jscomp_error='checkRegExp' --jscomp_error='checkTypes' --jscomp_error='checkVars' --jscomp_error='conformanceViolations' --jscomp_error='const' --jscomp_error='constantProperty' --jscomp_error='deprecatedAnnotations' --jscomp_error='duplicateMessage' --jscomp_error='es5Strict' --jscomp_error='externsValidation' --jscomp_error='fileoverviewTags' --jscomp_error='globalThis' --jscomp_error='inferredConstCheck' --jscomp_error='internetExplorerChecks' --jscomp_error='invalidCasts' --jscomp_error='misplacedTypeAnnotation' --jscomp_error='missingGetCssName' --jscomp_error='missingProperties' --jscomp_error='missingRequire' --jscomp_error='missingReturn' --jscomp_error='msgDescriptions' --jscomp_error='nonStandardJsDocs' --jscomp_error='suspiciousCode' --jscomp_error='strictModuleDepCheck' --jscomp_error='typeInvalidation' --jscomp_error='undefinedNames' --jscomp_error='undefinedVars' --jscomp_error='unknownDefines' --jscomp_error='unnecessaryCasts' --jscomp_error='uselessCode' --jscomp_error='underscore' --jscomp_error='visibility' --jscomp_warning='deprecated' --jscomp_warning='missingProvide' --jscomp_warning='unusedLocalVariables' --jscomp_warning='unusedPrivateMembers' --jscomp_warning='useOfGoogBase' --jscomp_off='es3' --jscomp_off='newCheckTypes' --jscomp_off='reportUnknownTypes' --compilation_level ADVANCED --js='!node_modules/google-closure-library/third_party/**test.js' --js='!node_modules/google-closure-library/closure/goog/**test.js' --js='node_modules/google-closure-library/third_party/**.js' --js='node_modules/google-closure-library/closure/goog/**.js' --js='src/os/alert/**.js' --js='src/os/xt/**.js' --js='src/os/structs/**.js' --js=src/os/xt/exports.export --entry_point goog:xt --js_output_file dist/opensphere/xt.min.js --hide_warnings_for /google-closure-library/\n+--dependency_mode STRICT --summary_detail_level 3 --language_in ECMASCRIPT5_STRICT --warning_level VERBOSE --jscomp_error='accessControls' --jscomp_error='ambiguousFunctionDecl' --jscomp_error='checkEventfulObjectDisposal' --jscomp_error='checkRegExp' --jscomp_error='checkTypes' --jscomp_error='checkVars' --jscomp_error='conformanceViolations' --jscomp_error='const' --jscomp_error='constantProperty' --jscomp_error='deprecatedAnnotations' --jscomp_error='duplicateMessage' --jscomp_error='es5Strict' --jscomp_error='externsValidation' --jscomp_error='fileoverviewTags' --jscomp_error='globalThis' --jscomp_error='internetExplorerChecks' --jscomp_error='invalidCasts' --jscomp_error='misplacedTypeAnnotation' --jscomp_error='missingGetCssName' --jscomp_error='missingProperties' --jscomp_error='missingRequire' --jscomp_error='missingReturn' --jscomp_error='msgDescriptions' --jscomp_error='nonStandardJsDocs' --jscomp_error='suspiciousCode' --jscomp_error='strictModuleDepCheck' --jscomp_error='typeInvalidation' --jscomp_error='undefinedNames' --jscomp_error='undefinedVars' --jscomp_error='unknownDefines' --jscomp_error='uselessCode' --jscomp_error='underscore' --jscomp_error='visibility' --jscomp_warning='deprecated' --jscomp_warning='missingProvide' --jscomp_warning='unusedLocalVariables' --jscomp_warning='unusedPrivateMembers' --jscomp_warning='useOfGoogBase' --jscomp_off='es3' --jscomp_off='newCheckTypes' --jscomp_off='reportUnknownTypes' --compilation_level ADVANCED --js='!node_modules/google-closure-library/third_party/**test.js' --js='!node_modules/google-closure-library/closure/goog/**test.js' --js='node_modules/google-closure-library/third_party/**.js' --js='node_modules/google-closure-library/closure/goog/**.js' --js='src/os/alert/**.js' --js='src/os/xt/**.js' --js='src/os/structs/**.js' --js=src/os/xt/exports.export --entry_point goog:xt --js_output_file dist/opensphere/xt.min.js --hide_warnings_for /google-closure-library/\n"
    },
    {
        "msg": "fix(typings): Make optional props of Search, optional in the typing definition.",
        "diff": "diff --git a/src/modules/Search/Search.d.ts b/src/modules/Search/Search.d.ts @@ -80,7 +80,7 @@ interface SearchProps {\n* @param {SyntheticEvent} event - React's original SyntheticEvent.\n* @param {object} data - All props.\n*/\n- onBlur: (event: React.MouseEvent<HTMLElement>, data: SearchProps) => void;\n+ onBlur?: (event: React.MouseEvent<HTMLElement>, data: SearchProps) => void;\n/**\n* Called on focus.\n@@ -88,7 +88,7 @@ interface SearchProps {\n* @param {SyntheticEvent} event - React's original SyntheticEvent.\n* @param {object} data - All props.\n*/\n- onFocus: (event: React.MouseEvent<HTMLElement>, data: SearchProps) => void;\n+ onFocus?: (event: React.MouseEvent<HTMLElement>, data: SearchProps) => void;\n/**\n* Called on mousedown.\n@@ -96,7 +96,7 @@ interface SearchProps {\n* @param {SyntheticEvent} event - React's original SyntheticEvent.\n* @param {object} data - All props.\n*/\n- onMouseDown: (event: React.MouseEvent<HTMLElement>, data: SearchProps) => void;\n+ onMouseDown?: (event: React.MouseEvent<HTMLElement>, data: SearchProps) => void;\n/**\n* Called when a result is selected.\n@@ -104,7 +104,7 @@ interface SearchProps {\n* @param {SyntheticEvent} event - React's original SyntheticEvent.\n* @param {object} data - All props.\n*/\n- onResultSelect: (event: React.MouseEvent<HTMLDivElement>, data: SearchResultProps) => void;\n+ onResultSelect?: (event: React.MouseEvent<HTMLDivElement>, data: SearchResultProps) => void;\n/**\n* Called on search input change.\n@@ -112,7 +112,7 @@ interface SearchProps {\n* @param {SyntheticEvent} event - React's original SyntheticEvent.\n* @param {string} value - Current value of search input.\n*/\n- onSearchChange: (event: React.MouseEvent<HTMLElement>, value: string) => void;\n+ onSearchChange?: (event: React.MouseEvent<HTMLElement>, value: string) => void;\n// ------------------------------------\n// Style\n@@ -131,7 +131,7 @@ interface SearchProps {\nfluid?: boolean;\n/** A search input can take up the width of its container. */\n- input: any;\n+ input?: any;\n/** A search can show a loading indicator. */\nloading?: boolean;\n",
        "date": "07.03.2017 17:29:51",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "sim_msg": "feat(useHover): move prop",
        "sim_diff": "diff --git a/packages/react-dom-interactions/src/hooks/useHover.ts b/packages/react-dom-interactions/src/hooks/useHover.ts @@ -42,6 +42,7 @@ export interface Props<RT extends ReferenceType = ReferenceType> {\nrestMs?: number;\ndelay?: number | Partial<{open: number; close: number}>;\nmouseOnly?: boolean;\n+ move?: boolean;\n}\n/**\n@@ -56,6 +57,7 @@ export const useHover = <RT extends ReferenceType = ReferenceType>(\nhandleClose = null,\nmouseOnly = false,\nrestMs = 0,\n+ move = true,\n}: Props<RT> = {}\n): ElementProps => {\nconst {open, onOpenChange, dataRef, events, refs} = context;\n@@ -254,13 +256,13 @@ export const useHover = <RT extends ReferenceType = ReferenceType>(\nif (isElement(reference)) {\nopen && reference.addEventListener('mouseleave', onScrollMouseLeave);\nfloating?.addEventListener('mouseleave', onScrollMouseLeave);\n- reference.addEventListener('mousemove', onMouseEnter, {once: true});\n+ move && reference.addEventListener('mousemove', onMouseEnter);\nreference.addEventListener('mouseenter', onMouseEnter);\nreference.addEventListener('mouseleave', onMouseLeave);\nreturn () => {\nopen && reference.removeEventListener('mouseleave', onScrollMouseLeave);\nfloating?.removeEventListener('mouseleave', onScrollMouseLeave);\n- reference.removeEventListener('mousemove', onMouseEnter);\n+ move && reference.removeEventListener('mousemove', onMouseEnter);\nreference.removeEventListener('mouseenter', onMouseEnter);\nreference.removeEventListener('mouseleave', onMouseLeave);\n};\n@@ -270,6 +272,7 @@ export const useHover = <RT extends ReferenceType = ReferenceType>(\ncontext,\nmouseOnly,\nrestMs,\n+ move,\ncloseWithDelay,\ncleanupPointerMoveHandler,\nclearPointerEvents,\n"
    },
    {
        "msg": "fix: stop saying there's another update required!",
        "diff": "diff --git a/bin/nodemon.js b/bin/nodemon.js @@ -11,6 +11,6 @@ var fs = require('fs');\n// checks for available update and returns an instance\nvar pkg = JSON.parse(fs.readFileSync(__dirname + '/../package.json'));\n-require('update-notifier')({\n- pkg: Object.assign(pkg, { version: '0.0.0' }),\n-}).notify();\n+if (pkg.version.indexOf('0.0.0') !== 0) {\n+ require('update-notifier')({ pkg }).notify();\n+}\n",
        "date": "22.12.2017 15:36:36",
        "repo": "remy/nodemon",
        "type": "fix",
        "sim_msg": "fix: whistle crash if install new plugin",
        "sim_diff": "diff --git a/lib/plugins/index.js b/lib/plugins/index.js @@ -201,7 +201,7 @@ function readPackages(obj, callback) {\n++count;\nfse.readJson(newPkg.pkgPath, function(err, result) {\nif (result && result.version) {\n- var conf = pkg.whistleConfig || '';\n+ var conf = result.whistleConfig || '';\nnewPkg.version = result.version;\nnewPkg.priority = parseInt(conf.priority, 10) || parseInt(result.pluginPriority, 10) || 0;\nnewPkg.rulesUrl = util.getCgiUrl(conf.rulesUrl);\n"
    },
    {
        "msg": "fix: remove tls secret env var",
        "diff": "diff --git a/.github/workflows/ci.yml b/.github/workflows/ci.yml @@ -111,7 +111,6 @@ jobs:\n${repo_owner}/${repo_name}\nenv:\nAWF_AUTH_TOKEN: ${{ secrets.AWF_AUTH_TOKEN }}\n- TLS_SECRET: ${{ secrets.TLS_SECRET }}\nshell: bash\n- name: Dump GitHub context\n",
        "date": "19.08.2022 01:18:38",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "sim_msg": "ci: print git status",
        "sim_diff": "diff --git a/.github/workflows/release.yml b/.github/workflows/release.yml @@ -52,7 +52,9 @@ jobs:\nNPM_TOKEN: ${{ secrets.NPM_TOKEN }}\n- name: Release ${{ github.event.inputs.version }}\n- run: npm run release:${{ github.event.inputs.version }} --ci\n+ run: |\n+ git status\n+ npm run release:${{ github.event.inputs.version }} --ci\nenv:\nGITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\nNPM_TOKEN: ${{ secrets.NPM_TOKEN }}\n"
    },
    {
        "msg": "fix(typings): fix Modal mountnode -> mountNode",
        "diff": "diff --git a/src/modules/Modal/index.d.ts b/src/modules/Modal/index.d.ts @@ -59,7 +59,7 @@ interface ModalProps {\nopen?: boolean;\n/** The node where the modal should mount.. */\n- mountnode?: any;\n+ mountNode?: any;\n/** A modal can vary in size */\nsize?: SemanticSIZES;\n",
        "date": "12.01.2017 21:10:27",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "sim_msg": "chore: fix typo in type BvMsgBoxOptions definition",
        "sim_diff": "diff --git a/types/components/modal/index.d.ts b/types/components/modal/index.d.ts @@ -39,7 +39,7 @@ export interface BvMsgBoxOptions {\ntitleTag?: string\nsize?: string\ncentered?: boolean\n- scrolable?: boolean\n+ scrollable?: boolean\nnoFade?: boolean\nnoCloseOnBackdrop?: boolean\nnoCloseOnEsc?: boolean\n"
    },
    {
        "msg": "fix: ensure numerical OS version check",
        "diff": "diff --git a/lib/monitor/run.js b/lib/monitor/run.js @@ -16,7 +16,7 @@ var restart = null;\nvar psTree = require('pstree.remy');\nvar path = require('path');\nvar signals = require('./signals');\n-const osRelease = require('os').release();\n+const osRelease = parseInt(require('os').release().split(\".\")[0], 10);\nfunction run(options) {\nvar cmd = config.command.raw;\n",
        "date": "09.07.2021 17:19:02",
        "repo": "remy/nodemon",
        "type": "fix",
        "sim_msg": "refactor: refine cmd",
        "sim_diff": "diff --git a/bin/whistle.js b/bin/whistle.js @@ -29,6 +29,12 @@ function showStartupInfo(err, options, debugMode, restart) {\nerror(err.stack ? 'Date: ' + new Date().toLocaleString() + '\\n' + err.stack : err);\n}\n+function getName() {\n+ if (/[/\\\\](\\w+)$/.test(process.argv[1])) {\n+ return RegExp.$1;\n+ }\n+}\n+\nprogram.setConfig({\nmain: function(options) {\nvar cmd = process.argv[2];\n@@ -41,7 +47,7 @@ program.setConfig({\nvar hash = options && options.storage && encodeURIComponent(options.storage);\nreturn path.join(__dirname, '../index.js') + (hash ? '#' + hash + '#' : '');\n},\n- name: config.name,\n+ name: getName() || config.name,\nversion: config.version,\nrunCallback: function(err, options) {\nif (err) {\n"
    },
    {
        "msg": "fix(examples): fix with-typescript example",
        "diff": "diff --git a/examples/with-typescript/src/index.ts b/examples/with-typescript/src/index.ts @@ -18,10 +18,6 @@ const port = process.env.PORT ? parseInt(process.env.PORT, 10) : 3000;\nexport default express()\n.use((req, res) => app.handle(req, res))\n- .listen(port, (err: Error) => {\n- if (err) {\n- console.error(err);\n- return;\n- }\n+ .listen(port, () => {\nconsole.log(`> App started http://localhost:${port}`)\n});\n",
        "date": "16.12.2020 18:53:32",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "fix(server): Catch OPTIONS * requests",
        "sim_diff": "diff --git a/server/index.js b/server/index.js @@ -164,6 +164,14 @@ app.prepare().then(() => {\n)\n})\n+ server.options('*', (req, res, next) => {\n+ if (req.url === '*') {\n+ return res.sendStatus(400)\n+ }\n+\n+ next()\n+ })\n+\nserver.use(express.static('public'))\nserver.all('*', (req, res) => {\nreturn handler(req, res)\n"
    },
    {
        "msg": "fix: Uncaught fs.stat() throw",
        "diff": "diff --git a/packages/create-wmr/src/index.js b/packages/create-wmr/src/index.js @@ -18,12 +18,17 @@ sade('create-wmr [dir]', true)\nconst origCwd = process.cwd();\nlet cwd = process.cwd();\nif (dir) {\n- if ((await fs.stat(dir)).isDirectory() && !opts.force) {\n+ try {\n+ (await fs.stat(dir)).isDirectory();\n+ if (!opts.force) {\nprocess.stderr.write(\n- `${red(`Refusing to overwrite directory! Please specify a different directory or use the '--force' flag`)}\\n`\n+ `${red(\n+ `Refusing to overwrite directory! Please specify a different directory or use the '--force' flag`\n+ )}\\n`\n);\nprocess.exit(1);\n}\n+ } catch {}\ncwd = resolve(cwd, dir || '.');\nawait fs.mkdir(cwd, { recursive: true });\nprocess.chdir(cwd);\n",
        "date": "25.02.2021 17:56:18",
        "repo": "preactjs/wmr",
        "type": "fix",
        "sim_msg": "refactor: handle uncauth exception",
        "sim_diff": "diff --git a/lib/index.js b/lib/index.js @@ -233,8 +233,14 @@ function handleGlobalException(err){\nfs.writeFileSync(path.join(process.cwd(), config.name + '.log'), '\\r\\n' + stack + '\\r\\n', {flag: 'a'});\n/*eslint no-console: \"off\"*/\nconsole.error(stack);\n+ if (typeof process.handleUncauthtErrorMessage === 'function' &&\n+ process.handleUncauthtErrorMessage(stack, err) === false) {\n+ return;\n+ }\n}\n+ setTimeout(function() {\nprocess.exit(1);\n+ }, 360);\n}\nprocess.on('unhandledRejection', handleGlobalException);\n"
    },
    {
        "msg": "fix: dev rollup config",
        "diff": "diff --git a/packages/kiwi-core/rollup.dev.config.js b/packages/kiwi-core/rollup.dev.config.js @@ -66,15 +66,8 @@ const commons = {\n]\n}\n-// const bannerTxt = `/*! Chakra-Vui v${pkg.version} | MIT License | github.com/codebender828/kiwi-ui */`\n-\nconst baseFolder = './src/'\n-// const capitalize = (s) => {\n-// if (typeof s !== 'string') return ''\n-// return s.charAt(0).toUpperCase() + s.slice(1)\n-// }\n-\nconst components = fs.readdirSync(baseFolder)\n.filter((f) => fs.statSync(path.join(baseFolder, f)).isDirectory())\n@@ -86,30 +79,10 @@ const entries = {\n}, {})\n}\n-console.log('entries', entries)\n-\n/**\n* Configurations\n*/\nexport default () => {\n- // const mapComponent = (name) => {\n- // return [{\n- // input: baseFolder + `${name}/index.js`,\n- // external: externals,\n- // output: {\n- // format: 'umd',\n- // name: capitalize(name),\n- // file: `dist/components/${name}/index.js`,\n- // banner: bannerTxt,\n- // exports: 'named',\n- // globals: {\n- // vue: 'Vue'\n- // }\n- // },\n- // ...commons\n- // }]\n- // }\n-\nlet config = [{\ninput: entries,\noutput: {\n@@ -118,61 +91,6 @@ export default () => {\n},\n...commons\n}\n- // {\n- // input: entries,\n- // output: {\n- // dir: `dist/es/`,\n- // format: 'es'\n- // },\n- // ...commons\n- // },\n- // {\n- // input: entries,\n- // output: {\n- // dir: `dist/cjs/`,\n- // format: 'cjs',\n- // exports: 'named'\n- // },\n- // ...commons\n- // },\n- // {\n- // input: './src/index.js',\n- // output: {\n- // file: `dist/umd/index.js/`,\n- // name: capitalize('chakra'),\n- // format: 'umd',\n- // exports: 'named',\n- // banner: bannerTxt,\n- // globals: {\n- // vue: 'Vue'\n- // }\n- // },\n- // ...commons\n- // }\n- // {\n- // input: './src/index.js',\n- // output: {\n- // file: 'dist/chakra-vui.esm.js',\n- // name: capitalize('chakra'),\n- // format: 'esm',\n- // exports: 'named',\n- // banner: bannerTxt\n- // },\n- // ...commons\n- // }\n- // Individual components\n- // ...components.map((f) => mapComponent(f)).reduce((r, a) => r.concat(a), [])\n]\n- if (process.env.MINIFY === 'true') {\n- config = config.filter((c) => !!c.output.file)\n- config.forEach((c) => {\n- c.output.file = c.output.file.replace(/\\.js/g, '.min.js')\n- c.plugins.push(terser({\n- output: {\n- comments: '/^!/'\n- }\n- }))\n- })\n- }\nreturn config\n}\n",
        "date": "20.02.2020 03:22:31",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "sim_msg": "fix(quasar): More adjustments to QImg",
        "sim_diff": "diff --git a/ui/src/components/img/QImg.js b/ui/src/components/img/QImg.js @@ -76,16 +76,17 @@ export default Vue.extend({\n},\nmethods: {\n- __onLoad () {\n+ __onLoad (img) {\nthis.isLoading = false\nthis.hasError = false\n+ this.__computeRatio(img)\nthis.__updateSrc()\nthis.__updateWatcher(this.srcset)\nthis.$emit('load', this.currentSrc)\n},\n__onError (err) {\n- clearTimeout(this.timer)\n+ clearTimeout(this.ratioTimer)\nthis.isLoading = false\nthis.hasError = true\nthis.currentSrc = ''\n@@ -114,7 +115,7 @@ export default Vue.extend({\n},\n__load () {\n- clearTimeout(this.timer)\n+ clearTimeout(this.ratioTimer)\nthis.hasError = false\nif (!this.src) {\n@@ -139,8 +140,8 @@ export default Vue.extend({\nimg.onload = () => {\n// if we are still rendering same image\nif (this.image === img) {\n- if (this.image.decode) {\n- this.image\n+ if (img.decode !== void 0) {\n+ img\n.decode()\n.catch(err => {\nif (this.image === img) {\n@@ -149,12 +150,12 @@ export default Vue.extend({\n})\n.then(() => {\nif (this.image === img) {\n- this.__onLoad()\n+ this.__onLoad(img)\n}\n})\n}\nelse {\n- this.__onLoad()\n+ this.__onLoad(img)\n}\n}\n}\n@@ -164,26 +165,23 @@ export default Vue.extend({\nif (this.srcset) {\nimg.srcset = this.srcset\n}\n+\nif (this.sizes) {\nimg.sizes = this.sizes\n}\n-\n- this.__computeRatio(img)\n},\n__computeRatio (img) {\n- if (this.image !== img) {\n- return\n- }\n-\nconst { naturalHeight, naturalWidth } = img\nif (naturalHeight || naturalWidth) {\n- this.naturalRatio = naturalHeight === 0 ? 1 : naturalWidth / naturalHeight\n+ this.naturalRatio = naturalHeight === 0\n+ ? 1\n+ : naturalWidth / naturalHeight\n}\nelse {\n- this.timer = setTimeout(() => {\n- this.__computeRatio(img)\n+ this.ratioTimer = setTimeout(() => {\n+ this.image === img && this.__computeRatio(img)\n}, 100)\n}\n},\n@@ -263,7 +261,7 @@ export default Vue.extend({\n},\nbeforeDestroy () {\n- clearTimeout(this.timer)\n+ clearTimeout(this.ratioTimer)\nthis.unwatch !== void 0 && this.unwatch()\n}\n})\n"
    },
    {
        "msg": "fix: fix default route in default template",
        "diff": "diff --git a/packages/create-razzle-app/templates/default/src/App.js b/packages/create-razzle-app/templates/default/src/App.js @@ -5,7 +5,7 @@ import './App.css';\nconst App = () => (\n<Switch>\n- <Route path=\"/\" element={<Home/>} />\n+ <Route exact={true} path=\"/\" component={Home} />\n</Switch>\n);\n",
        "date": "20.12.2021 17:47:08",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "docs: remove exact prop in v6 Route example",
        "sim_diff": "diff --git a/docs/example-react-router.mdx b/docs/example-react-router.mdx @@ -27,7 +27,7 @@ export const App = () => (\n<Link to=\"/about\">About</Link>\n<Routes>\n- <Route exact path=\"/\" element={<Home />} />\n+ <Route path=\"/\" element={<Home />} />\n<Route path=\"/about\" element={<About />} />\n"
    },
    {
        "msg": "fix(avatargroup): filter empty slots",
        "diff": "diff --git a/packages/kiwi-core/src/AvatarGroup/index.js b/packages/kiwi-core/src/AvatarGroup/index.js @@ -58,7 +58,7 @@ const AvatarGroup = {\n},\nrender (h) {\n// Get the number of slot nodes inside AvatarGroup\n- const children = this.$slots.default\n+ const children = this.$slots.default.filter(e => e.tag)\nconst count = children.length\nconst max = parseInt(this.max, 10)\n",
        "date": "19.02.2020 22:52:20",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "sim_msg": "fix(input-group): correct input-group right addon via prop",
        "sim_diff": "diff --git a/src/components/input-group/input-group.js b/src/components/input-group/input-group.js @@ -43,7 +43,7 @@ export default {\n// Right slot / prop\nif (slots().right) {\nchildNodes.push(slots().right);\n- } else if (props.left) {\n+ } else if (props.right) {\nchildNodes.push(h(InputGroupAddon, { domProps: { innerHTML: props.right } }))\n}\n"
    },
    {
        "msg": "fix(example): use new assets manifest",
        "diff": "diff --git a/examples/basic/src/server.js b/examples/basic/src/server.js @@ -5,6 +5,20 @@ import { renderToString } from 'react-dom/server';\nconst assets = require(process.env.RAZZLE_ASSETS_MANIFEST);\n+const cssLinksFromAssets = (assets, entrypoint) => {\n+ return assets.entrypoints[entrypoint] ? assets.entrypoints[entrypoint].css ?\n+ assets.entrypoints[entrypoint].css.map(asset=>\n+ `<link rel=\"stylesheet\" href=\"${asset}\">`\n+ ).join('') : '' : '';\n+};\n+};\n+const jsScriptTagsFromAssets = (assets, entrypoint, extra = '') => {\n+ return assets.entrypoints[entrypoint] ? assets.entrypoints[entrypoint].js ?\n+ assets.entrypoints[entrypoint].js.map(asset=>\n+ `<script src=\"${asset}\"${extra}></script>`\n+ ).join('') : '' : '';\n+};\n+\nexport const renderApp = (req, res) => {\nconst markup = renderToString(<App />);\n@@ -17,15 +31,11 @@ export const renderApp = (req, res) => {\n<meta charSet='utf-8' />\n<title>Welcome to Razzle</title>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n- ${\n- assets.client.css\n- ? `<link rel=\"stylesheet\" href=\"${assets.client.css}\">`\n- : ''\n- }\n+ ${cssLinksFromAssets(assets, 'client')}\n</head>\n<body>\n<div id=\"root\">${markup}</div>\n- <script src=\"${assets.client.js}\" defer crossorigin></script>\n+ ${jsScriptTagsFromAssets(assets, 'client', ' defer crossorigin')}\n</body>\n</html>`;\n",
        "date": "12.10.2020 18:57:39",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "feat(Feedback): scroll to article headline when appropriate",
        "sim_diff": "diff --git a/components/Feedback/Page.js b/components/Feedback/Page.js @@ -7,7 +7,11 @@ import {\nCDN_FRONTEND_BASE_URL,\nGENERAL_FEEDBACK_DISCUSSION_ID\n} from '../../lib/constants'\n-import { ZINDEX_CONTENT } from '../constants'\n+import {\n+ HEADER_HEIGHT,\n+ HEADER_HEIGHT_MOBILE,\n+ ZINDEX_CONTENT\n+} from '../constants'\nimport Frame from '../Frame'\n@@ -155,6 +159,7 @@ class FeedbackPage extends Component {\n}\nthis.handleResize = () => {\n+ console.log('resize')\nconst isMobile = window.innerWidth < mediaQueries.mBreakPoint\nif (isMobile !== this.state.isMobile) {\nthis.setState({ isMobile })\n@@ -190,18 +195,36 @@ class FeedbackPage extends Component {\n)\n}\n- this.clearUrl = () => {\n- Router.replaceRoute(\n- 'discussion',\n- {},\n- { shallow: true }\n- )\n+ this.setArticleRef = ref => {\n+ this.articleRef = ref\n+ }\n+\n+ this.scrollToArticleDiscussion = () => {\n+ const { tab, articleDiscussionId, focusId } = this.state\n+ if (!focusId && this.articleRef && tab === 'article' && articleDiscussionId) {\n+ const headerHeight = window.innerWidth < mediaQueries.mBreakPoint\n+ ? HEADER_HEIGHT_MOBILE\n+ : HEADER_HEIGHT\n+ setTimeout(() => {\n+ const { top } = this.articleRef.getBoundingClientRect()\n+ window.scrollTo({\n+ top: top - headerHeight - 20,\n+ left: 0,\n+ behavior: 'smooth'\n+ })\n+ }, 100)\n+ }\n}\n}\ncomponentDidMount () {\nwindow.addEventListener('resize', this.handleResize)\nthis.handleResize()\n+ this.scrollToArticleDiscussion()\n+ }\n+\n+ componentDidUpdate () {\n+ this.scrollToArticleDiscussion()\n}\ncomponentWillUnmount () {\n@@ -280,7 +303,7 @@ class FeedbackPage extends Component {\nonReset={this.onReset}\n/>\n- {!linkedDiscussion && <div {...styles.selectedHeadline}>\n+ {!linkedDiscussion && <div {...styles.selectedHeadline} ref={this.setArticleRef}>\n<ArticleDiscussionHeadline meta={meta} discussionId={articleDiscussionId} />\n</div>}\n</Fragment>\n"
    },
    {
        "msg": "fix: sniff for child.stdout before using it\nThis fixes but it's a hack, so I'm going to emit a message\nsaying that non-LTS is not supported.",
        "diff": "diff --git a/lib/monitor/run.js b/lib/monitor/run.js @@ -260,7 +260,12 @@ function run(options) {\nchild.stdin.on('error', () => { });\nprocess.stdin.pipe(child.stdin);\n} else {\n+ if (child.stdout) {\nchild.stdout.pipe(process.stdout);\n+ } else {\n+ utils.log.error(`running an unsupported version of node ${process.version}`);\n+ utils.log.error('nodemon may not work as expected - please consider upgrading to LTS');\n+ }\n}\nbus.once('exit', function () {\n",
        "date": "01.02.2018 18:19:56",
        "repo": "remy/nodemon",
        "type": "fix",
        "sim_msg": "build: Decide whether to use autoreloading API server later",
        "sim_diff": "diff --git a/tasks/serve.js b/tasks/serve.js @@ -30,7 +30,7 @@ function clearLine() {\nprocess.stdout.write('\\x1B[2K\\x1B[1G');\n}\n-gulp.task('devServer', (done) => {\n+const devServerTask = (done) => {\nconst serverPort = env.serverPort || 6042;\nconst coreDir = tryResolve('u-wave-core/src',\n@@ -51,13 +51,22 @@ gulp.task('devServer', (done) => {\nclearLine();\nlog(colors.grey('apiServer'), msg.colour);\n});\n-});\n+};\n-gulp.task('apiServer', () => {\n+const apiServerTask = () => {\nrequire('./apiServer');\n+};\n+\n+gulp.task('apiServer', (done) => {\n+ if (env.watch) {\n+ devServerTask(done);\n+ } else {\n+ apiServerTask();\n+ done();\n+ }\n});\n-gulp.task('serve', [ env.watch ? 'devServer' : 'apiServer' ], (done) => {\n+gulp.task('serve', [ 'apiServer' ], (done) => {\nconst port = env.port || 6041;\nconst serverPort = env.serverPort || 6042;\nconst watch = env.watch || false;\n"
    },
    {
        "msg": "fix(text.mdx): removed duplicate titles",
        "diff": "diff --git a/packages/chakra-ui-docs/docs/text.mdx b/packages/chakra-ui-docs/docs/text.mdx @@ -96,8 +96,6 @@ You can change the entire style of the text via props. For example, to change th\nText composes the [CBox](/box) component, so you can pass all Box style props.\n-## Slot\n-\n## Slots\n| Name | Description |\n",
        "date": "03.05.2020 18:36:20",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "sim_msg": "chore(docs): Fix missing closing ```",
        "sim_diff": "diff --git a/docs/docs/tutorial/part-2/index.mdx b/docs/docs/tutorial/part-2/index.mdx @@ -615,6 +615,7 @@ Follow the steps below to style your `Layout` component using CSS Modules.\nmax-width: 500px;\nfont-family: sans-serif;\n}\n+```\n3. Then import that class into your `Layout` component `.js` file, and use the `className` prop to assign it to the `<main>` element:\n"
    },
    {
        "msg": "fix: allow windows users to install globally again\nFixes:",
        "diff": "diff --git a/lib/monitor/run.js b/lib/monitor/run.js @@ -347,7 +347,7 @@ function kill(child, signal, callback) {\n// We are using the standalone 'windows-kill' executable to send the\n// standard POSIX signal 'SIGINT' to the node process. This fixes #1720.\nconst windowsKill = path.normalize(\n- `${process.cwd()}/node_modules/nodemon/bin/windows-kill.exe`\n+ `${__dirname}/../../bin/windows-kill.exe`\n);\n// We have to detach the 'windows-kill' execution completely from this\n",
        "date": "30.06.2021 13:57:24",
        "repo": "remy/nodemon",
        "type": "fix",
        "sim_msg": "refactor(e2e): coerce variable with file buffer into string before running regex on it",
        "sim_diff": "diff --git a/__tests__/test-utils/utils.js b/__tests__/test-utils/utils.js @@ -49,6 +49,7 @@ function killDetachedProcess (processName, callback) {\n// make absolutely sure that the pid file contains a numeric string. This\n// is to make sure that the file we're reading didn't somehow change and now\n// includes a harmful command that could be executed\n+ pid = pid.toString()\nif (!pid.match(/^\\d*$/)) {\nconsole.error(`pid file ${pidFilename} has unexpected data!`)\nreturn callback(new Error(`pid file ${pidFilename} has unexpected data!`))\n"
    },
    {
        "msg": "fix: added a better description for the event table",
        "diff": "diff --git a/packages/chakra-ui-docs/docs/tabs.mdx b/packages/chakra-ui-docs/docs/tabs.mdx @@ -323,8 +323,8 @@ Tabs composes `Box` so you call pass all `Box` related props.\n### Tabs Events\n| Name | Description |\n-| ---------- | ------------------------ |\n-| `onChange` | Emits the @change event. |\n+| --------- | ------------------------------------------ |\n+| `@change` | Event emitted when the active tab changes. |\n### Tabs Slot\n",
        "date": "06.05.2020 16:37:00",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "sim_msg": "refactor(doc): remove react-expo-snack imports",
        "sim_diff": "diff --git a/packages/doc/src/components/Documentation/Documentation.jsx b/packages/doc/src/components/Documentation/Documentation.jsx @@ -5,7 +5,6 @@ import MDXRenderer from 'gatsby-plugin-mdx/mdx-renderer';\nimport { MDXProvider } from '@mdx-js/react';\nimport * as components from '@gympass/yoga';\nimport * as icons from '@gympass/yoga-icons';\n-import ExpoSnack from 'react-expo-snack';\nimport {\nCodeBlock,\nPropsTable,\n@@ -27,7 +26,6 @@ const customComponents = prefix => ({\nTabbedView: props => <TabbedView {...props} />,\nTab: props => <Tab {...props} />,\nPropsTable,\n- ExpoSnack,\nimg: props => <Img {...props} prefix={prefix} />,\nRedirect: props => <Redirect {...props} />,\nTokens: props => <Tokens {...props} />,\n"
    },
    {
        "msg": "fix(razzle): add back css minimizer",
        "diff": "diff --git a/packages/razzle/config/createConfigAsync.js b/packages/razzle/config/createConfigAsync.js @@ -877,7 +877,27 @@ module.exports = (\nminimize: true,\nminimizer: [\nnew TerserPlugin(webpackOptions.terserPluginOptions),\n+ new CssMinimizerPlugin({\n+ sourceMap: true,\n+ minify: async (data, inputMap) => {\n+ // eslint-disable-next-line global-require\n+ const CleanCSS = require('clean-css');\n+\n+ const [[filename, input]] = Object.entries(data);\n+ const minifiedCss = await new CleanCSS({ sourceMap: true }).minify({\n+ [filename]: {\n+ styles: input,\n+ sourceMap: inputMap,\n+ },\n+ });\n+ return {\n+ css: minifiedCss.styles,\n+ map: minifiedCss.sourceMap.toJSON(),\n+ warnings: minifiedCss.warnings,\n+ };\n+ },\n+ })\n],\n}\n}\n",
        "date": "07.02.2021 22:01:38",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "build(webpack): using TerserPlugin 2 for js minimizer",
        "sim_diff": "diff --git a/webpack.config.js b/webpack.config.js @@ -5,6 +5,7 @@ const path = require('path')\nconst { CleanWebpackPlugin } = require('clean-webpack-plugin')\nconst MiniCssExtractPlugin = require('mini-css-extract-plugin')\n+const TerserPlugin = require('terser-webpack-plugin')\nmodule.exports = {\nmode: devMode ? 'development' : 'production',\n@@ -35,6 +36,9 @@ module.exports = {\nmaxAssetSize: 500000\n},\n+ optimization: {\n+ minimizer: [new TerserPlugin()]\n+ },\nplugins: [\nnew CleanWebpackPlugin(),\nnew MiniCssExtractPlugin({\n"
    },
    {
        "msg": "fix(token): typo in documentation\nImplemantation -> Implementation",
        "diff": "diff --git a/contracts/token/StandardToken.sol b/contracts/token/StandardToken.sol @@ -8,7 +8,7 @@ import './ERC20.sol';\n/**\n* @title Standard ERC20 token\n*\n- * @dev Implemantation of the basic standard token.\n+ * @dev Implementation of the basic standard token.\n* @dev https://github.com/ethereum/EIPs/issues/20\n* @dev Based on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\n*/\n",
        "date": "30.06.2017 14:40:15",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "fix",
        "sim_msg": "fix: ERC20BaseProperties are back to inherit from AnyObject (restricting protocol to classes)",
        "sim_diff": "diff --git a/Sources/web3swift/Tokens/ERC20/ERC20BaseProperties.swift b/Sources/web3swift/Tokens/ERC20/ERC20BaseProperties.swift @@ -9,7 +9,7 @@ import Foundation\n/// Declares common properties of an [ERC-20](https://eips.ethereum.org/EIPS/eip-20) complient smart contract.\n/// Default implementation of access to these properties is declared in the extension of this protocol.\n-public protocol ERC20BaseProperties: Any {\n+public protocol ERC20BaseProperties: AnyObject {\nvar basePropertiesProvider: ERC20BasePropertiesProvider { get }\nvar contract: Web3.Contract { get }\nvar name: String? { get }\n"
    },
    {
        "msg": "fix: grammar issues",
        "diff": "diff --git a/website/pages/static-export.mdx b/website/pages/static-export.mdx @@ -50,7 +50,7 @@ Razzle not only works with React, but also Reason, Elm, Vue, Angular, Svelte, an\nbehind the scenes razzle calls `render` function that exposed from `static_export` module and saves `html` string that you pass to `res.json()` into a html file. for `req` object there is only one property that is `url` which contains the url that we are going to render and save it's result to the html file.\nhtml file destination is relative to the `req.url`, for example if the url is `/product/A` html is going to get saved at `/build/product/A/index.html`.\n-you should call `renderToString()` (or what ever your framework gives you to do SSR) in this function send resonse to `res.json()`\n+you should call `renderToString()` (or what ever your framework gives you to do SSR) in this function and then send result to `res.json()`\n```js\nexport const render = (req, res) => {\n@@ -64,12 +64,12 @@ export const render = (req, res) => {\n};\n```\n-(you can re-export your ssr logic from server.js file and use it `static_export`)\n+(you can re-export your SRR logic from server.js file and use it `static_export`)\n#### routes()\n-you should also export a function called `routes` that returns an array of strings or a promise that will resolve array of strings. razzle will take the urls one by one and pass them one by one to `render`.\n-you should get all paths that your app has from your CMS in this method and return it at the end:\n+you should also export a function called `routes` that returns an array of strings or a promise that will resolve array of strings. razzle will take the urls and will pass them one by one to `render`.\n+you should get all paths that your app has from your CMS in this method and then return it:\n```js\nexport const routes = async () => {\n@@ -81,8 +81,8 @@ export const routes = async () => {\n#### page data\n-you may also need to save the data that your page uses to rehydrate the app on the client side.\n-you can also pass the `data` along the `html` to `res.json({ html, data })` and contents of data object will go inside the `page-data.json` file next to the html file.\n+you may also need to save the data that your page uses to re-hydrate the app on the client side.\n+you can pass the `data` along the `html` to `res.json({ html, data })` and contents of `data` object will get saved in the `page-data.json` next to the related `index.html` file.\n```js\nexport const render = async (req, res) => {\n@@ -98,7 +98,7 @@ export const render = async (req, res) => {\n};\n```\n-(you should also change how your app fetches data on client-side, so it reads data from `page-data.json`)\n+(NOTE: you should change how your app fetches data on client-side, to read data from `page-data.json`)\n## TypeScript Support\n",
        "date": "06.10.2020 03:05:47",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "docs: grammar and additional info links",
        "sim_diff": "diff --git a/docs/guide/using-vue.md b/docs/guide/using-vue.md Because VuePress applications are server-rendered in Node.js when generating static builds, any Vue usage must conform to the [universal code requirements](https://ssr.vuejs.org/en/universal.html). In short, make sure to only access Browser / DOM APIs in `beforeMounted` or `mounted` hooks.\n-If you are using or demoing a component that is not SSR friendly (for example containing custom directives), you can wrap them inside the built-in `<ClientOnly>` component:\n+If you are using or demoing components that are not SSR friendly (for example containing custom directives), you can wrap them inside the built-in `<ClientOnly>` component:\n``` md\n<ClientOnly>\n@@ -58,7 +58,7 @@ Directives also work:\n### Access to Site & Page Data\n-The compiled component does not have any private data but do have access to the [site metadata](./custom-themes.md#site-and-page-metadata). For example:\n+The compiled component does not have any private data but does have access to the [site metadata](./custom-themes.md#site-and-page-metadata). For example:\n**Input**\n@@ -96,7 +96,7 @@ By default, fenced code blocks are automatically wrapped with `v-pre`. If you wa\n## Using Components\n-Any `*.vue` file found in `.vuepress/components` are automatically registered as global async components. For example:\n+Any `*.vue` files found in `.vuepress/components` are automatically registered as [global](https://vuejs.org/v2/guide/components-registration.html#Global-Registration), [async](https://vuejs.org/v2/guide/components-dynamic-async.html#Async-Components) components. For example:\n```\n.\n@@ -118,7 +118,7 @@ Inside any markdown file you can then directly use the components (names are inf\n<OtherComponent/>\n::: warning IMPORTANT\n-Make sure a custom component's names either contains a hyphen or is in PascalCase. Otherwise it will be treated as an inline element and wrapped inside a `<p>` tag, which will lead to hydration mismatch because `<p>` does not allow block elements to be placed inside it.\n+Make sure a custom component's name either contains a hyphen or is in PascalCase. Otherwise it will be treated as an inline element and wrapped inside a `<p>` tag, which will lead to hydration mismatch because `<p>` does not allow block elements to be placed inside it.\n:::\n## Script & Style Hoisting\n"
    },
    {
        "msg": "fix(docs): fix compatibility with IE",
        "diff": "diff --git a/docs/app/utils.js b/docs/app/utils.js @@ -15,6 +15,14 @@ export const parentComponents = _.flow(\n_.sortBy('_meta.name')\n)(semanticUIReact)\n+const mathSign = Math.sign || function (x) {\n+ x = +x\n+ if (x === 0 || isNaN(x)) {\n+ return x\n+ }\n+ return x > 0 ? 1 : -1\n+}\n+\n/**\n* Get the Webpack Context for all doc site examples.\n*/\n@@ -27,6 +35,7 @@ export const semanticUICSSRepoURL = 'https://github.com/Semantic-Org/Semantic-UI\nexport const scrollToAnchor = () => {\nconst anchor = location.hash && document.querySelector(location.hash)\n+ const offsetY = window.scrollY || window.pageYOffset\n// no scroll to target, stop\nif (!anchor) return\n@@ -37,9 +46,9 @@ export const scrollToAnchor = () => {\nif (elementTop === 0) return\n// hit max scroll boundaries, stop\n- const isScrolledToTop = scrollY === 0\n- const isScrolledToBottom = scrollY + document.body.clientHeight === document.body.scrollHeight\n- const scrollStep = Math.ceil((Math.abs(elementTop / 8))) * Math.sign(elementTop)\n+ const isScrolledToTop = offsetY === 0\n+ const isScrolledToBottom = offsetY + document.body.clientHeight === document.body.scrollHeight\n+ const scrollStep = Math.ceil((Math.abs(elementTop / 8))) * mathSign(elementTop)\nif (isScrolledToBottom && scrollStep > 0 || isScrolledToTop && scrollStep < 0) return\n",
        "date": "09.05.2017 02:18:16",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "sim_msg": "feat(virtual-scroll): small tweaks",
        "sim_diff": "diff --git a/ui/src/components/virtual-scroll/use-virtual-scroll.js b/ui/src/components/virtual-scroll/use-virtual-scroll.js @@ -15,8 +15,8 @@ const scrollToEdges = [\n'end-force'\n]\n-const slice = Array.prototype.slice\nlet id = 1\n+const filterProto = Array.prototype.filter\nconst setOverflowAnchor = __QUASAR_SSR__ || window.getComputedStyle(document.body).overflowAnchor === void 0\n? noop\n@@ -66,7 +66,7 @@ function getScrollDetails (\nif (horizontal === true) {\nif (parent === window) {\ndetails.scrollStart = window.pageXOffset || window.scrollX || document.body.scrollLeft || 0\n- details.scrollViewSize += window.innerWidth\n+ details.scrollViewSize += document.documentElement.clientWidth\n}\nelse {\ndetails.scrollStart = parentCalc.scrollLeft\n@@ -81,7 +81,7 @@ function getScrollDetails (\nelse {\nif (parent === window) {\ndetails.scrollStart = window.pageYOffset || window.scrollY || document.body.scrollTop || 0\n- details.scrollViewSize += window.innerHeight\n+ details.scrollViewSize += document.documentElement.clientHeight\n}\nelse {\ndetails.scrollStart = parentCalc.scrollTop\n@@ -130,10 +130,16 @@ function getScrollDetails (\n}\nfunction setScroll (parent, scroll, horizontal, rtl) {\n+ if (scroll === 'end') {\n+ scroll = (parent === window ? document.body : parent)[\n+ horizontal === true ? 'scrollWidth' : 'scrollHeight'\n+ ]\n+ }\n+\nif (parent === window) {\nif (horizontal === true) {\nif (rtl === true) {\n- scroll = (rtlHasScrollBug === true ? document.body.scrollWidth - window.innerWidth : 0) - scroll\n+ scroll = (rtlHasScrollBug === true ? document.body.scrollWidth - document.documentElement.clientWidth : 0) - scroll\n}\nwindow.scrollTo(scroll, window.pageYOffset || window.scrollY || document.body.scrollTop || 0)\n}\n@@ -398,20 +404,17 @@ export function useVirtualScroll ({\n}\nconst { activeElement } = document\n+ const contentEl = contentRef.value\nif (\nrangeChanged === true\n- && contentRef.value !== null\n- && contentRef.value !== activeElement\n- && contentRef.value.contains(activeElement) === true\n+ && contentEl !== null\n+ && contentEl !== activeElement\n+ && contentEl.contains(activeElement) === true\n) {\n- const onBlurFn = () => {\n- contentRef.value.focus()\n- }\n+ contentEl.addEventListener('focusout', onBlurRefocusFn)\n- activeElement.addEventListener('blur', onBlurFn, true)\n-\n- requestAnimationFrame(() => {\n- activeElement.removeEventListener('blur', onBlurFn, true)\n+ setTimeout(() => {\n+ contentEl !== void 0 && contentEl.removeEventListener('focusout', onBlurRefocusFn)\n})\n}\n@@ -489,8 +492,10 @@ export function useVirtualScroll ({\nif (contentEl) {\nconst\n- children = slice.call(contentEl.children)\n- .filter(el => el.classList.contains('q-virtual-scroll--skip') === false),\n+ children = filterProto.call(\n+ contentEl.children,\n+ el => el.classList && el.classList.contains('q-virtual-scroll--skip') === false\n+ ),\nchildrenLength = children.length,\nsizeFn = props.virtualScrollHorizontal === true\n? el => el.getBoundingClientRect().width\n@@ -521,6 +526,10 @@ export function useVirtualScroll ({\n}\n}\n+ function onBlurRefocusFn () {\n+ contentRef.value !== void 0 && contentRef.value.focus()\n+ }\n+\nfunction localResetVirtualScroll (toIndex, fullReset) {\nconst defaultSize = 1 * virtualScrollItemSizeComputed.value\n"
    },
    {
        "msg": "fix: Disable file import OK button until a file is selected\nfixes",
        "diff": "diff --git a/src/App.js b/src/App.js @@ -417,7 +417,9 @@ class App extends Component {\n<div>\n<span className={ style.centerSpan }>\n{options.action === IMPORT &&\n- <div className=\"button circular\" title=\"Ok\" onClick={this.processOptions}>\n+ <div className=\"button circular\" title=\"Ok\"\n+ disabled={options.action === IMPORT && !this.state.selectedFile}\n+ onClick={this.processOptions}>\n<FontAwesomeIcon icon={faCheck} />\n</div>\n}\n",
        "date": "01.04.2019 18:07:44",
        "repo": "iqtlabs/crviz",
        "type": "fix",
        "sim_msg": "feat(form): Change color of mode button checkboxes to green",
        "sim_diff": "diff --git a/lib/components/form/mode-button.js b/lib/components/form/mode-button.js @@ -31,7 +31,7 @@ export default class ModeButton extends Component {\n<div className='mode-label' style={{ color: buttonColor }}>{label}</div>\n{active && <div>\n<div className='mode-check' style={{ color: 'white' }}><i className='fa fa-circle' /></div>\n- <div className='mode-check' style={{ color: 'red' }}><i className='fa fa-check-circle' /></div>\n+ <div className='mode-check' style={{ color: 'green' }}><i className='fa fa-check-circle' /></div>\n</div>}\n</div>\n)\n"
    },
    {
        "msg": "fix(search-input): Fix empty search input",
        "diff": "diff --git a/app/components/search-input.js b/app/components/search-input.js @@ -37,9 +37,9 @@ export default Component.extend({\nconst projectVersion = get(this, '_projectVersion');\n// Hide and don't run query if there's no search query\n- // if (!query) {\n- // return set(this, '_focused', false);\n- // }\n+ if (!query) {\n+ return set(this, '_focused', false);\n+ }\nconst params = {\nhitsPerPage: 15,\n",
        "date": "16.08.2017 22:34:58",
        "repo": "ember-learn/ember-api-docs",
        "type": "fix",
        "sim_msg": "fix: url-encode search query in URL",
        "sim_diff": "diff --git a/components/Search/index.js b/components/Search/index.js @@ -208,7 +208,7 @@ class Search extends Component {\n}\nthis.updateUrl = (filters, sort) => {\n- const searchQuery = this.state.searchQuery\n+ const searchQuery = encodeURIComponent(this.state.searchQuery)\nthis.pushUrl({q: searchQuery, filters, sort})\n}\n@@ -222,13 +222,14 @@ class Search extends Component {\nlet filters = DEFAULT_FILTERS\nlet newState = {}\n+ const decodedQuery = decodeURIComponent(query.q)\n- if (query.q && query.q !== this.state.searchQuery) {\n+ if (decodedQuery && decodedQuery !== this.state.searchQuery) {\nnewState = {\n...newState,\n- searchQuery: query.q,\n- submittedQuery: query.q,\n- filterQuery: query.q\n+ searchQuery: decodedQuery,\n+ submittedQuery: decodedQuery,\n+ filterQuery: decodedQuery\n}\n}\n"
    },
    {
        "msg": "fix: don't use `options.iconPack`, yet",
        "diff": "diff --git a/packages/chakra-ui-core/src/utils/icons.js b/packages/chakra-ui-core/src/utils/icons.js import { merge } from 'lodash-es'\n/**\n- * @param {String} pack\n- * @param {Array} icon\n+ * @param {String} prefix - prefix for the icon pack\n+ * @param {Array} icon - icon definition\n* @returns {{path: string, viewBox: string, attrs: *}}\n*/\n-const createIcon = (pack, icon) => {\n+const createIcon = (prefix, icon) => {\nconst [w, h, content, svg, data, , attrs] = icon\nlet path\n@@ -21,12 +21,12 @@ const createIcon = (pack, icon) => {\nreturn `<g fill=\"currentColor\" class=\"${prefix}-group\">${paths.join('')}</g>`\n}\n- if (pack === 'fa') {\n+ if (prefix.startsWith('fa')) {\npath = Array.isArray(data)\n- ? createGroupedPath(data, pack)\n+ ? createGroupedPath(data, prefix.substr(0, 2))\n: createPath(data)\n} else {\n- path = pack.startsWith('fe') ? content : svg\n+ path = prefix.startsWith('fe') ? content : svg\n}\nreturn {\n@@ -38,17 +38,16 @@ const createIcon = (pack, icon) => {\n/**\n* @description Custom parse all Icons provided by user\n- * @param {String} pack - the name of the icon pack being used (fe, fa, mdi, etc)\n* @param {Object} iconSet - Registered Icons object\n* @returns {Object}\n*/\n-const parseIcons = (pack, iconSet = {}) => {\n+const parseIcons = (iconSet = {}) => {\nconst parseIcon = (iconObject) => {\n- const { icon, iconName } = iconObject\n+ const { icon, prefix, iconName } = iconObject\n// Is library icon\nif (icon) {\nreturn {\n- [`${iconName}`]: createIcon(pack, icon)\n+ [`${iconName}`]: createIcon(prefix, icon)\n}\n} else {\nreturn {}\n@@ -62,13 +61,12 @@ const parseIcons = (pack, iconSet = {}) => {\n/**\n* @description Parse Icon packs\n- * @param {String} pack - the name of the icon pack being used (fe, fa, mdi, etc)\n* @param {Object} iconSet Registered Icon set\n* @returns {Object} Parsed pack icons object\n*/\n-export const parsePackIcons = (pack, iconSet) => {\n+export const parsePackIcons = (iconSet) => {\n// TODO: Add support for other icon libraries\n// - Material Icons: these are string constants, and need lots of work\n// - Tailwind Icons (Hero icons)\n- return parseIcons(pack, iconSet)\n+ return parseIcons(iconSet)\n}\n",
        "date": "25.10.2021 14:39:05",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "sim_msg": "test(components/molecule/thumbnail): refactor",
        "sim_diff": "diff --git a/components/molecule/thumbnail/test/index.test.js b/components/molecule/thumbnail/test/index.test.js @@ -10,12 +10,42 @@ import ReactDOM from 'react-dom'\nimport chai, {expect} from 'chai'\nimport chaiDOM from 'chai-dom'\n+import * as pkg from '../src/index.js'\n+\n+import json from '../package.json'\n+\nchai.use(chaiDOM)\n-describe('molecule/thumbnail', () => {\n- const Component = MoleculeThumbnail\n+describe(json.name, () => {\n+ const {default: Component} = pkg\nconst setup = setupEnvironment(Component)\n+ it('library should include defined exported elements', () => {\n+ // Given\n+ const library = pkg\n+ const libraryExportedMembers = [\n+ 'moleculeThumbnailRatio',\n+ 'moleculeThumbnailShape',\n+ 'moleculeThumbnailSize',\n+ 'default'\n+ ]\n+\n+ // When\n+ const {\n+ moleculeThumbnailRatio,\n+ moleculeThumbnailShape,\n+ moleculeThumbnailSize,\n+ default: MoleculeThumbnail,\n+ ...others\n+ } = library\n+\n+ // Then\n+ expect(Object.keys(library).length).to.equal(libraryExportedMembers.length)\n+ expect(Object.keys(library)).to.have.members(libraryExportedMembers)\n+ expect(Object.keys(others).length).to.equal(0)\n+ })\n+\n+ describe(Component.displayName, () => {\nit('should render without crashing', () => {\n// Given\nconst props = {\n@@ -54,7 +84,8 @@ describe('molecule/thumbnail', () => {\nclassName: 'extended-classNames',\nsrc: '#'\n}\n- const findSentence = str => string => string.match(new RegExp(`S*${str}S*`))\n+ const findSentence = str => string =>\n+ string.match(new RegExp(`S*${str}S*`))\n// When\nconst {container} = setup(props)\n@@ -64,3 +95,109 @@ describe('molecule/thumbnail', () => {\nexpect(findClassName(container.innerHTML)).to.be.null\n})\n})\n+\n+ describe('moleculeThumbnailRatio', () => {\n+ it('value must be an object enum', () => {\n+ // Given\n+ const library = pkg\n+\n+ // When\n+ const {moleculeThumbnailRatio: actual} = library\n+\n+ // Then\n+ expect(actual).to.be.an('object')\n+ })\n+\n+ it('value must be a defined string-key pair filled', () => {\n+ // Given\n+ const library = pkg\n+ const expected = {\n+ '1:1': '1-1',\n+ '4:3': '4-3',\n+ '16:9': '16-9'\n+ }\n+\n+ // When\n+ const {moleculeThumbnailRatio: actual} = library\n+ const {'1:1': one, '4:3': two, '16:9': three, ...others} = actual\n+\n+ // Then\n+ expect(Object.keys(others).length).to.equal(0)\n+ expect(Object.keys(actual)).to.have.members(Object.keys(expected))\n+ Object.entries(expected).forEach(([expectedKey, expectedValue]) => {\n+ expect(Object.keys(actual).includes(expectedKey)).to.be.true\n+ expect(actual[expectedKey]).to.equal(expectedValue)\n+ })\n+ })\n+ })\n+\n+ describe('moleculeThumbnailShape', () => {\n+ it('value must be an object enum', () => {\n+ // Given\n+ const library = pkg\n+\n+ // When\n+ const {moleculeThumbnailShape: actual} = library\n+\n+ // Then\n+ expect(actual).to.be.an('object')\n+ })\n+\n+ it('value must be a defined string-key pair filled', () => {\n+ // Given\n+ const library = pkg\n+ const expected = {\n+ SQUARED: 'squared',\n+ CIRCLED: 'circled'\n+ }\n+\n+ // When\n+ const {moleculeThumbnailShape: actual} = library\n+ const {SQUARED, CIRCLED, ...others} = actual\n+\n+ // Then\n+ expect(Object.keys(others).length).to.equal(0)\n+ expect(Object.keys(actual)).to.have.members(Object.keys(expected))\n+ Object.entries(expected).forEach(([expectedKey, expectedValue]) => {\n+ expect(Object.keys(actual).includes(expectedKey)).to.be.true\n+ expect(actual[expectedKey]).to.equal(expectedValue)\n+ })\n+ })\n+ })\n+\n+ describe('moleculeThumbnailSize', () => {\n+ it('value must be an object enum', () => {\n+ // Given\n+ const library = pkg\n+\n+ // When\n+ const {moleculeThumbnailSize: actual} = library\n+\n+ // Then\n+ expect(actual).to.be.an('object')\n+ })\n+\n+ it('value must be a defined string-key pair filled', () => {\n+ // Given\n+ const library = pkg\n+ const expected = {\n+ LARGE: 'large',\n+ MEDIUM: 'medium',\n+ SMALL: 'small',\n+ XSMALL: 'xsmall'\n+ }\n+\n+ // When\n+ const {moleculeThumbnailSize: actual} = library\n+ const {LARGE, MEDIUM, SMALL, XSMALL, ...others} = actual\n+\n+ // Then\n+ expect(Object.keys(others).length).to.equal(0)\n+ expect(Object.keys(actual)).to.have.members(Object.keys(expected))\n+ Object.entries(expected).forEach(([expectedKey, expectedValue]) => {\n+ expect(Object.keys(actual).includes(expectedKey)).to.be.true\n+ expect(actual[expectedKey]).to.equal(expectedValue)\n+ })\n+ })\n+ })\n+})\n"
    },
    {
        "msg": "fix(optimize): avoid `relative` preloader if external publicPath",
        "diff": "diff --git a/src/plugins/optimize-graph-plugin.js b/src/plugins/optimize-graph-plugin.js @@ -398,7 +398,9 @@ function hoistTransitiveImports(graph) {\nif (DEBUG) console.log(`Preloading JS for import(${spec}): ${js}`);\npreloads.push(\n...js.map(f => {\n- // TODO: should have `toImport(...)` somewhere here\n+ if (/^(https?:)?\\/\\//.test(graph.publicPath)) {\n+ return `import(${toImport(graph.publicPath, f)})`;\n+ }\nlet rel = posix.relative(posix.dirname('/' + fileName), posix.join(graph.publicPath, f));\nif (!rel.startsWith('.')) rel = './' + rel;\nreturn `import(${JSON.stringify(rel)})`;\n",
        "date": "07.12.2020 10:42:46",
        "repo": "preactjs/wmr",
        "type": "fix",
        "sim_msg": "feat(gatsby-graphiql-explorer): allow hiding explorer using query param",
        "sim_diff": "diff --git a/packages/gatsby-graphiql-explorer/src/app/app.js b/packages/gatsby-graphiql-explorer/src/app/app.js @@ -27,9 +27,6 @@ function locationQuery(params) {\nreturn (\n`?` +\nObject.keys(params)\n- .filter(function(key) {\n- return Boolean(params[key])\n- })\n.map(function(key) {\nreturn encodeURIComponent(key) + `=` + encodeURIComponent(params[key])\n})\n@@ -42,6 +39,7 @@ const graphqlParamNames = {\nquery: true,\nvariables: true,\noperationName: true,\n+ explorerIsOpen: true,\n}\nconst otherParams = {}\nfor (var k in parameters) {\n@@ -135,7 +133,12 @@ ${queryExample}\n`\n}\n-const storedExplorerPaneState = window.localStorage\n+const storedExplorerPaneState =\n+ typeof parameters.explorerIsOpen !== `undefined`\n+ ? parameters.explorerIsOpen === `false`\n+ ? false\n+ : true\n+ : window.localStorage\n? window.localStorage.getItem(`graphiql:graphiqlExplorerOpen`) !== `false`\n: true\n@@ -197,6 +200,8 @@ class App extends React.Component {\nnewExplorerIsOpen\n)\n}\n+ parameters.explorerIsOpen = newExplorerIsOpen\n+ updateURL()\nthis.setState({ explorerIsOpen: newExplorerIsOpen })\n}\n"
    },
    {
        "msg": "fix(razzle): fix for unreleased plugins",
        "diff": "diff --git a/packages/razzle/config/loadPlugins.js b/packages/razzle/config/loadPlugins.js @@ -12,8 +12,9 @@ function loadPlugin(plugin, paths) {\nreturn [plugin, {}];\n}\n- // Support for not released plugins\n- if (typeof plugin === 'object') {\n+ // Support for not released plugins without options\n+ // Use plugin.object if you need options\n+ if (typeof plugin === 'object' && !plugin.name && !plugin.object) {\nreturn [plugin, {}];\n}\n",
        "date": "11.11.2020 19:31:56",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "feat: add initial hook for plugin",
        "sim_diff": "diff --git a/lib/plugins/load-plugin.js b/lib/plugins/load-plugin.js @@ -60,6 +60,9 @@ module.exports = function(options, callback) {\nreturn callbackHandler();\n}\nvar execPlugin = require(options.value);\n+ if (typeof execPlugin.initial === 'function') {\n+ execPlugin.initial(options);\n+ }\nvar startServer = execPlugin.pluginServer || execPlugin.server || execPlugin;\nif (typeof startServer == 'function') {\n++count;\n"
    },
    {
        "msg": "fix(razzle): disable pnp plugin with webpack 5",
        "diff": "diff --git a/packages/razzle/config/createConfigAsync.js b/packages/razzle/config/createConfigAsync.js @@ -475,16 +475,14 @@ module.exports = (\nadditionalAliases\n),\nplugins: [\n- // TODO: Remove when using webpack 5\n- PnpWebpackPlugin,\n- ],\n+ webpackMajor !== 5 && PnpWebpackPlugin,\n+ ].filter(x => x),\n},\nresolveLoader: {\nmodules: [paths.appNodeModules, paths.ownNodeModules],\nplugins: [\n- // TODO: Remove when using webpack 5\n- PnpWebpackPlugin.moduleLoader(module),\n- ],\n+ webpackMajor !== 5 && PnpWebpackPlugin.moduleLoader(module),\n+ ].filter(x => x),\n},\nmodule: {\nstrictExportPresence: true,\n@@ -587,7 +585,7 @@ module.exports = (\n? webpackOptions.nodeExternals : [webpackOptions.nodeExternals];\n// We need to tell webpack what to bundle into our Node bundle.\n- config.externals = (!IS_SERVERLESS ? [nodeExternalsFunc] : []).concat(webpackOptions.nodeExternals);\n+ config.externals = (!IS_SERVERLESS ? [nodeExternalsFunc] : []).concat(nodeExternals);\n// Specify webpack Node.js output path and filename\nconfig.output = {\n@@ -832,7 +830,7 @@ module.exports = (\n? webpackOptions.clientExternals : [webpackOptions.clientExternals];\n// We need to tell webpack what to bundle into our client bundle.\n- config.externals = webpackOptions.clientExternals;\n+ config.externals = clientExternals;\n// Specify the client output directory and paths. Notice that we have\n// changed the publiPath to just '/' from http://localhost:3001. This is because\n",
        "date": "15.01.2021 19:52:11",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "perf: exclude bundled js modules from babel",
        "sim_diff": "diff --git a/packages/manager/tools/webpack-config/src/webpack.common.ts b/packages/manager/tools/webpack-config/src/webpack.common.ts @@ -21,7 +21,7 @@ const cacheLoader = {\n// The common webpack configuration\n-export = opts => {\n+export = (opts) => {\nconst lessLoaderOptions = {\nsourceMap: true,\nplugins: [\n@@ -38,6 +38,11 @@ export = opts => {\nset(lessLoaderOptions, 'javascriptEnabled', opts.lessJavascriptEnabled);\n}\n+ const jsExclude = [\n+ /\\/node_modules/, // vendors\n+ /\\/dist/, // bundled files\n+ ];\n+\nreturn {\nplugins: [\n// copy application assets\n@@ -79,14 +84,10 @@ export = opts => {\n],\nresolve: {\n- modules: [\n- './node_modules',\n- path.resolve('./node_modules'),\n- ],\n+ modules: ['./node_modules', path.resolve('./node_modules')],\n},\nresolveLoader: {\n-\n// webpack module resolution paths\nmodules: [\n'./node_modules', // #1 check in module's relative node_module directory\n@@ -96,7 +97,6 @@ export = opts => {\nmodule: {\nrules: [\n-\n// load HTML files as string (raw-loader)\n{\ntest: /\\.html$/,\n@@ -178,7 +178,7 @@ export = opts => {\n// load JS files\n{\ntest: /\\.js$/,\n- exclude: /node_modules(?!\\/ovh-module)/, // we don't want babel to process vendors files\n+ exclude: jsExclude,\nuse: [\ncacheLoader,\n{\n@@ -204,12 +204,15 @@ export = opts => {\n// given proper ui-router state 'translations' property\n{\ntest: /\\.js$/,\n- exclude: /node_modules(?!\\/ovh-module)/,\n+ exclude: jsExclude,\nenforce: 'pre',\nuse: [\ncacheLoader,\n{\n- loader: path.resolve(__dirname, './loaders/translation-ui-router.js'),\n+ loader: path.resolve(\n+ __dirname,\n+ './loaders/translation-ui-router.js',\n+ ),\noptions: {\nsubdirectory: 'translations',\nfiltering: false,\n@@ -221,12 +224,15 @@ export = opts => {\n// inject translation with @ngTranslationsInject comment\n{\ntest: /\\.js$/,\n- exclude: /node_modules(?!\\/ovh-module)/,\n+ exclude: jsExclude,\nenforce: 'pre',\nuse: [\ncacheLoader,\n{\n- loader: path.resolve(__dirname, './loaders/translation-inject.js'),\n+ loader: path.resolve(\n+ __dirname,\n+ './loaders/translation-inject.js',\n+ ),\noptions: {\nfiltering: false,\n},\n@@ -241,7 +247,6 @@ export = opts => {\nruntimeChunk: 'single',\n// bundle spliting configuration\nsplitChunks: {\n-\n// vendors bundle containing node_modules source code\ncacheGroups: {\nbower: {\n@@ -266,7 +271,6 @@ export = opts => {\n},\n},\n},\n-\n}, // \\optimization\n};\n};\n"
    },
    {
        "msg": "fix(editable): fix blur event only call onSubmit",
        "diff": "diff --git a/packages/chakra-ui-core/src/Editable/index.js b/packages/chakra-ui-core/src/Editable/index.js @@ -252,7 +252,6 @@ const EditableInput = {\nonKeyDown,\nvalue,\nonSubmit,\n- onCancel,\nsubmitOnBlur,\nplaceholder,\nisDisabled\n@@ -274,7 +273,7 @@ const EditableInput = {\n},\nnativeOn: {\nblur: event => {\n- submitOnBlur ? onSubmit() : onCancel()\n+ submitOnBlur && onSubmit()\nthis.$emit('blur', event)\n},\nchange: onChange,\n",
        "date": "19.03.2020 22:03:28",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "sim_msg": "fix(EditableCell): Change behavior to save cell contents when losing focus, clicking away etc.\nfix",
        "sim_diff": "diff --git a/lib/editor/components/timetable/EditableCell.js b/lib/editor/components/timetable/EditableCell.js @@ -259,6 +259,10 @@ export default class EditableCell extends Component<Props, State> {\n}\n}\n+ handleBlur = () => {\n+ this.save()\n+ }\n+\nhandleChange = (evt: SyntheticInputEvent<HTMLInputElement>) => {\nthis.setState({data: evt.target.value})\n}\n@@ -335,7 +339,7 @@ export default class EditableCell extends Component<Props, State> {\nautoFocus\ndefaultValue={renderCell(column, data)}\nclassName='cell-input'\n- onBlur={this.cancel}\n+ onBlur={this.handleBlur}\nonChange={this.handleChange}\nonFocus={this._onInputFocus}\nonKeyDown={this.handleKeyDown}\n"
    },
    {
        "msg": "fix: test more extensions in static_export",
        "diff": "diff --git a/packages/razzle/config/createConfigAsync.js b/packages/razzle/config/createConfigAsync.js @@ -170,7 +170,10 @@ module.exports = (\nlet webpackOptions = {};\n- const hasStaticExportJs = fs.existsSync(paths.appStaticExportJs + '.js');\n+ const hasStaticExportJs = fs.existsSync(paths.appStaticExportJs + '.js') ||\n+ fs.existsSync(paths.appStaticExportJs + '.jsx') ||\n+ fs.existsSync(paths.appStaticExportJs + '.ts') ||\n+ fs.existsSync(paths.appStaticExportJs + '.tsx');\nconst dotenv = getClientEnv(\ntarget,\n",
        "date": "23.09.2020 19:13:42",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "chore(refactor): store config file names in `defaultConfigFiles`",
        "sim_diff": "diff --git a/bin/convert-argv.js b/bin/convert-argv.js @@ -69,7 +69,8 @@ module.exports = function(...args) {\nconst configArgList = Array.isArray(argv.config) ? argv.config : [argv.config];\nconfigFiles = configArgList.map(mapConfigArg);\n} else {\n- const webpackConfigFileRegExp = `(webpack.config|webpackfile)(${extensions.join(\"|\")})`;\n+ const defaultConfigFiles = [\"webpack.config\", \"webpackfile\"];\n+ const webpackConfigFileRegExp = `(${defaultConfigFiles.join(\"|\")})(${extensions.join(\"|\")})`;\nconst pathToWebpackConfig = findup(webpackConfigFileRegExp);\nif (pathToWebpackConfig) {\n"
    },
    {
        "msg": "fix(scss): fix tests",
        "diff": "diff --git a/packages/razzle-plugin-scss/tests/index.test.js b/packages/razzle-plugin-scss/tests/index.test.js @@ -69,19 +69,16 @@ const nodeLoaderTests = [\nloaderFinder: cssLoaderFinder,\n},\n{\n- name: 'should not add postcss-loader',\n+ name: 'should add postcss-loader',\nloaderFinder: postCssLoaderFinder,\n- status: 'falsy',\n},\n{\n- name: 'should not add resolve-url-loader',\n+ name: 'should add resolve-url-loader',\nloaderFinder: resolveUrlLoaderFinder,\n- status: 'falsy',\n},\n{\n- name: 'should not add sass-loader',\n+ name: 'should add sass-loader',\nloaderFinder: sassLoaderFinder,\n- status: 'falsy',\n},\n];\n",
        "date": "16.04.2020 00:40:07",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "docs: fix sass-loader link",
        "sim_diff": "diff --git a/docs/config/README.md b/docs/config/README.md @@ -216,7 +216,7 @@ Options for [stylus-loader](https://github.com/shama/stylus-loader).\n- Type: `Object`\n- Default: `{}`\n-Options for [sass-loader](https://github.com/postcss/postcss-loader) to load `*.scss` files.\n+Options for [sass-loader](https://github.com/webpack-contrib/sass-loader) to load `*.scss` files.\n### sass\n"
    },
    {
        "msg": "fix(sass-plugin): bumpup mini-css-extract-plugin version",
        "diff": "diff --git a/packages/razzle-plugin-scss/package.json b/packages/razzle-plugin-scss/package.json },\n\"dependencies\": {\n\"autoprefixer\": \"^8.6.2\",\n- \"mini-css-extract-plugin\": \"^0.4.0\",\n+ \"mini-css-extract-plugin\": \"^0.9.0\",\n\"node-sass-chokidar\": \"^1.3.0\",\n\"postcss-flexbugs-fixes\": \"^3.3.1\",\n\"postcss-scss\": \"^1.0.5\",\n",
        "date": "10.04.2020 18:15:14",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "fix(app): Revert back to an old version of \"open\" package",
        "sim_diff": "diff --git a/app/package.json b/app/package.json \"minimist\": \"1.2.5\",\n\"node-loader\": \"1.0.1\",\n\"node-sass\": \"4.14.1\",\n- \"open\": \"7.2.0\",\n+ \"open\": \"7.1.0\",\n\"optimize-css-assets-webpack-plugin\": \"5.0.3\",\n\"ouch\": \"2.0.0\",\n\"postcss-loader\": \"3.0.0\",\n"
    },
    {
        "msg": "fix(Responsive): fix types in typings",
        "diff": "diff --git a/src/addons/Responsive/Responsive.d.ts b/src/addons/Responsive/Responsive.d.ts @@ -28,12 +28,12 @@ export interface ResponsiveProps {\n}\nexport interface ResponsiveOnUpdateData extends ResponsiveProps {\n- width: string;\n+ width: number;\n}\nexport interface ResponsiveWidthShorthand {\n- minWidth: number;\n- maxWidth?: number;\n+ minWidth?: number | string;\n+ maxWidth?: number | string;\n}\ndeclare class Responsive extends React.Component<ResponsiveProps, {}> {\n",
        "date": "11.03.2018 14:10:49",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "sim_msg": "fix(Search): initialize UI state from query stopped working",
        "sim_diff": "diff --git a/components/Search/index.js b/components/Search/index.js @@ -212,9 +212,8 @@ class Search extends Component {\nthis.setState({ isMobile })\n}\n}\n- }\n- componentWillReceiveProps ({ query }) {\n+ this.setStateFromQuery = (query) => {\nlet filters = DEFAULT_FILTERS\nlet newState = {}\nconst decodedQuery = !!query.q && decodeURIComponent(query.q)\n@@ -260,10 +259,18 @@ class Search extends Component {\nthis.setState(newState)\n}\n}\n+ }\n+\n+ componentWillReceiveProps ({ query }) {\n+ this.setStateFromQuery(query)\n+ }\ncomponentDidMount () {\nwindow.addEventListener('resize', this.handleResize)\nthis.handleResize()\n+ if (this.props.query) {\n+ this.setStateFromQuery(this.props.query)\n+ }\n}\ncomponentWillUnmount () {\n"
    },
    {
        "msg": "fix: reduce help output (a teeny bit)",
        "diff": "diff --git a/doc/cli/help.txt b/doc/cli/help.txt -I, --no-stdin ........... don't try to read from stdin.\n-C, --on-change-only ..... execute script on change only, not startup\n--no-colors .............. disable color output\n+ --signal <signal> ........ use specified kill signal instead of default (ex. SIGTERM)\n-d, --delay n ............ debounce restart for \"n\" seconds.\n--exitcrash .............. exit on crash, allows use of nodemon with daemon\ntools like forever.js.\n-v, --version ............ current nodemon version.\n-h, --help ............... you're looking at it.\n--help <topic> ........... help on a specific feature. Try \"--help topics\".\n- --signal <signal> ........ use specified kill signal instead of default (ex. SIGTERM)\n-- <your args> ........... to tell nodemon stop slurping arguments.\nNote: if the script is omitted, nodemon will try to read \"main\" from\nExamples:\n$ nodemon server.js\n- $ nodemon --config my/custom/nodemon.json server.js\n$ nodemon -w ../foo server.js apparg1 apparg2\n- $ PORT=8000 nodemon --debug-brk server.js\n$ nodemon --exec python app.py\n$ nodemon --exec \"make build\" -e \"styl hbs\"\n- $ nodemon app.js -- -v\n+ $ nodemon app.js -- --inspect\nFor more details see http://github.com/remy/nodemon/\n",
        "date": "04.12.2017 22:27:16",
        "repo": "remy/nodemon",
        "type": "fix",
        "sim_msg": "docs(general): update Samples section of README",
        "sim_diff": "diff --git a/README.md b/README.md @@ -14,6 +14,7 @@ This is a monorepo containing all officially maintained Cisco Spark JavaScript S\n- [Install](#install)\n- [Usage](#usage)\n+- [Samples](#samples)\n- [Contribute](#contribute)\n- [License](#license)\n@@ -84,25 +85,28 @@ the user authentication flow for you. See the guide on the\n## Samples\n-Sample code can be found in [packages/node_modules/*](./packages/node_modules). You can run them yourself with the following commands:\n+Sample code can be found in [packages/node_modules/samples](./packages/node_modules/samples). You can run them yourself with the following commands:\n-> Note: this installs all of the sdk's tooling dependencies, so you'll need libgcrypt and (possibly) graphicsmagick. On a mac, you can install these with `brew install graphicsmagick libgrcrypt`.\n+> Note: this installs all of the SDK's tooling dependencies, so you'll need `libgcrypt` and (possibly) `graphicsmagick`. On a mac, you can install these with `brew install graphicsmagick libgrcrypt`.\n```bash\ngit clone git@github.com:ciscospark/spark-js-sdk.git\ncd spark-js-sdk\nnpm install\n-npm run serve:samples\n+npm run samples:serve\n```\nYou'll be able to load the samples by visiting `https://localhost:8000/packages/node_modules/samples/<PACKAGE NAME>`.\n### Available Samples\n-- Implicit Grant Flow: [local app](`https://localhost:8000/packages/node_modules/samples/browser-auth-implicit`) | [code](./packages/node_modules/sample-browser-single-party-call)\n-- Single Party Calling: [local app](`https://localhost:8000/packages/node_modules/samples/browser-single-party-call`) | [code](./packages/node_modules/samples/browser-single-party-call)\n-- Single Party Calling with Mute: [local app](`https://localhost:8000/packages/node_modules/samples/browser-single-party-call-with-mute`) | [code](./packages/node_modules/samples/browser-single-party-call-with-mute)\n-- Multi Party Calling: [local app](`https://localhost:8000/packages/node_modules/samples/browser-multi-party-call`) | [code](./packages/node_modules/sample-browser-multi-party-call)\n+| Sample | App Link | Source |\n+| ------ | -------- | ------ |\n+| Implicit Grant Flow | [local app](https://localhost:8000/packages/node_modules/samples/browser-auth-implicit) | [code](./packages/node_modules/samples/browser-auth-implicit) |\n+| Single Party Calling | [local app](https://localhost:8000/packages/node_modules/samples/browser-single-party-call) | [code](./packages/node_modules/samples/browser-single-party-call) |\n+| Single Party Calling with Mute | [local app](https://localhost:8000/packages/node_modules/samples/browser-single-party-call-with-mute) | [code](./packages/node_modules/samples/browser-single-party-call-with-mute) |\n+| Multi Party Calling | [local app](https://localhost:8000/packages/node_modules/samples/browser-multi-party-call) | [code](./packages/node_modules/samples/browser-multi-party-call) |\n+| Call with Content Sharing | [local app](https://localhost:8000/packages/node_modules/samples/browser-call-with-screenshare) | [code](./packages/node_modules/samples/browser-call-with-screenshare) |\n## Contribute\n"
    },
    {
        "msg": "fix(Time Series): let start and end datasets be the same. Fixes",
        "diff": "diff --git a/src/features/dataset-controls/DatasetSlider.js b/src/features/dataset-controls/DatasetSlider.js @@ -68,12 +68,9 @@ class DatasetSlider extends React.Component {\nif(start){\nthis.props.setStartUuid(start.owner);\n}\n- if(end && end !== start){\n+ if(end){\nthis.props.setEndUuid(end.owner);\n}\n- if(end && end === start){\n- this.props.setEndUuid('UNSET');\n- }\n}\nformatTicks = (t) => {\n",
        "date": "06.05.2019 15:37:15",
        "repo": "iqtlabs/crviz",
        "type": "fix",
        "sim_msg": "fix: replace post link from modal",
        "sim_diff": "diff --git a/src/client/post/PostModal.js b/src/client/post/PostModal.js @@ -120,7 +120,7 @@ class PostModal extends React.Component {\n<a role=\"presentation\" onClick={this.handleHidePostModal} className=\"PostModal__action\">\n<i className=\"iconfont icon-close PostModal__icon\" />\n</a>\n- <Link to={`/@${author}/${permlink}`} className=\"PostModal__action\">\n+ <Link replace to={`/@${author}/${permlink}`} className=\"PostModal__action\">\n<i className=\"iconfont icon-send PostModal__icon\" />\n</Link>\n<a href={twitterShareURL} target=\"_blank\" className=\"PostModal__action\">\n"
    },
    {
        "msg": "fix: watch count regression\n* chore: revert package\n* fix: move to array of watched dirs\nInstead of individually listing them.\nFixes",
        "diff": "diff --git a/lib/monitor/watch.js b/lib/monitor/watch.js @@ -39,25 +39,29 @@ function watch() {\nvar promises = [];\nvar watchedFiles = [];\n- dirs.forEach(function (dir) {\n- var promise = new Promise(function (resolve) {\n- var dotFilePattern = /[/\\\\]\\./;\n+ const promise = new Promise(function (resolve) {\n+ const dotFilePattern = /[/\\\\]\\./;\nvar ignored = Array.from(rootIgnored);\n+ const addDotFile = dirs.filter(dir => dir.match(dotFilePattern));\n// don't ignore dotfiles if explicitly watched.\n- if (!dir.match(dotFilePattern)) {\n+ if (addDotFile.length === 0) {\nignored.push(dotFilePattern);\n}\n+ dirs = dirs.map(dir => {\n// if the directory is a file, it somehow causes\n// windows to lose the filename upon change\nif (fs.statSync(dir).isFile()) {\ndir = path.dirname(dir);\n}\n+ return dir;\n+ });\n+\nvar watchOptions = {\nignorePermissionErrors: true,\n- cwd: dir,\n+ cwd: process.cwd(), // dir,\nignored: ignored,\npersistent: true,\nusePolling: config.options.legacyWatch || false,\n@@ -73,7 +77,7 @@ function watch() {\n}\nvar watcher = chokidar.watch(\n- dir,\n+ dirs,\nObject.assign({}, watchOptions, config.watchOptions || {})\n);\n@@ -114,10 +118,12 @@ function watch() {\nwatchers.push(watcher);\n});\n- promises.push(promise);\n- });\n- return Promise.all(promises).then(function (res) {\n+ return promise.catch(e => {\n+ setTimeout(() => {\n+ throw e;\n+ });\n+ }).then(function (res) {\nutils.log.detail(`watching ${watchedFiles.length} file${\nwatchedFiles.length === 1 ? '' : 's'}`);\nreturn watchedFiles;\n",
        "date": "13.03.2018 21:45:50",
        "repo": "remy/nodemon",
        "type": "fix",
        "sim_msg": "refactor(watcher): refactor lib/watcher.js to ES2015",
        "sim_diff": "diff --git a/lib/watcher.js b/lib/watcher.js -var chokidar = require('chokidar')\n-var mm = require('minimatch')\n-var expandBraces = require('expand-braces')\n+'use strict'\n-var helper = require('./helper')\n-var log = require('./logger').create('watcher')\n+const chokidar = require('chokidar')\n+const mm = require('minimatch')\n+const expandBraces = require('expand-braces')\n-var DIR_SEP = require('path').sep\n+const helper = require('./helper')\n+const log = require('./logger').create('watcher')\n-// Get parent folder, that be watched (does not contain any special globbing character)\n-var baseDirFromPattern = function (pattern) {\n+const DIR_SEP = require('path').sep\n+\n+function baseDirFromPattern (pattern) {\nreturn pattern\n.replace(/[/\\\\][^/\\\\]*\\*.*$/, '') // remove parts with *\n.replace(/[/\\\\][^/\\\\]*[!+]\\(.*$/, '') // remove parts with !(...) and +(...)\n.replace(/[/\\\\][^/\\\\]*\\)\\?.*$/, '') || DIR_SEP // remove parts with (...)?\n}\n-var watchPatterns = function (patterns, watcher) {\n- // filter only unique non url patterns paths\n- var pathsToWatch = []\n- var uniqueMap = {}\n- var path\n+function watchPatterns (patterns, watcher) {\n+ let pathsToWatch = new Set()\n// expand ['a/{b,c}'] to ['a/b', 'a/c']\n- patterns = expandBraces(patterns)\n-\n- patterns.forEach(function (pattern) {\n- path = baseDirFromPattern(pattern)\n- if (!uniqueMap[path]) {\n- uniqueMap[path] = true\n- pathsToWatch.push(path)\n- }\n- })\n+ expandBraces(patterns)\n+ .forEach(path => pathsToWatch.add(baseDirFromPattern(path)))\n+ pathsToWatch = Array.from(pathsToWatch)\n// watch only common parents, no sub paths\n- pathsToWatch.forEach(function (path) {\n- if (!pathsToWatch.some(function (p) {\n- return p !== path && path.substr(0, p.length + 1) === p + DIR_SEP\n- })) {\n+ pathsToWatch.forEach(path => {\n+ if (!pathsToWatch.some(p => p !== path && path.substr(0, p.length + 1) === p + DIR_SEP)) {\nwatcher.add(path)\nlog.debug('Watching \"%s\"', path)\n}\n})\n}\n-// Function to test if a path should be ignored by chokidar.\n-var createIgnore = function (patterns, excludes) {\n+function checkAnyPathMatch (patterns, path) {\n+ return patterns.some(pattern => mm(path, pattern, {dot: true}))\n+}\n+\n+function createIgnore (patterns, excludes) {\nreturn function (path, stat) {\nif (!stat || stat.isDirectory()) {\nreturn false\n}\n- // Check if the path matches any of the watched patterns.\n- if (!patterns.some(function (pattern) {\n- return mm(path, pattern, {dot: true})\n- })) {\n- return true\n- }\n-\n- // Check if the path matches any of the exclude patterns.\n- if (excludes.some(function (pattern) {\n- return mm(path, pattern, {dot: true})\n- })) {\n- return true\n- }\n-\n- return false\n+ return !checkAnyPathMatch(patterns, path) || checkAnyPathMatch(excludes, path)\n}\n}\n-var onlyWatchedTrue = function (pattern) {\n- return pattern.watched\n+function getWatchedPatterns (patterns) {\n+ return patterns\n+ .reduce((array, pattern) => {\n+ if (pattern.watched) {\n+ array.push(pattern.pattern)\n}\n-\n-var getWatchedPatterns = function (patternObjects) {\n- return patternObjects.filter(onlyWatchedTrue).map(function (patternObject) {\n- return patternObject.pattern\n- })\n+ return array\n+ }, [])\n}\nexports.watch = function (patterns, excludes, fileList, usePolling, emitter) {\n- var watchedPatterns = getWatchedPatterns(patterns)\n- var options = {\n+ const watchedPatterns = getWatchedPatterns(patterns)\n+\n+ const watcher = new chokidar.FSWatcher({\nusePolling: usePolling,\nignorePermissionErrors: true,\nignoreInitial: true,\nignored: createIgnore(watchedPatterns, excludes)\n- }\n- var chokidarWatcher = new chokidar.FSWatcher(options)\n+ })\n- watchPatterns(watchedPatterns, chokidarWatcher)\n+ watchPatterns(watchedPatterns, watcher)\n- var bind = function (fn) {\n- return function (path) {\n- return fn.call(fileList, helper.normalizeWinPath(path))\n- }\n- }\n-\n- // register events\n- chokidarWatcher.on('add', bind(fileList.addFile))\n- .on('change', bind(fileList.changeFile))\n- .on('unlink', bind(fileList.removeFile))\n- // If we don't subscribe; unhandled errors from Chokidar will bring Karma down\n- // (see GH Issue #959)\n- .on('error', function (e) {\n- log.debug(e)\n- })\n+ watcher\n+ .on('add', path => fileList.addFile(helper.normalizeWinPath(path)))\n+ .on('change', path => fileList.changeFile(helper.normalizeWinPath(path)))\n+ .on('unlink', path => fileList.removeFile(helper.normalizeWinPath(path)))\n+ .on('error', log.debug.bind(log))\n- emitter.on('exit', function (done) {\n- chokidarWatcher.close()\n+ emitter.on('exit', done => {\n+ watcher.close()\ndone()\n})\n- return chokidarWatcher\n+ return watcher\n}\n-exports.watch.$inject = ['config.files', 'config.exclude', 'fileList', 'config.usePolling',\n- 'emitter']\n+exports.watch.$inject = [\n+ 'config.files',\n+ 'config.exclude',\n+ 'fileList',\n+ 'config.usePolling',\n+ 'emitter'\n+]\n"
    },
    {
        "msg": "fix(Responsive): fix usage of `window` for SSR",
        "diff": "diff --git a/src/addons/Responsive/Responsive.js b/src/addons/Responsive/Responsive.js @@ -7,6 +7,7 @@ import {\neventStack,\ngetElementType,\ngetUnhandledProps,\n+ isBrowser,\nMETA,\n} from '../../lib'\n@@ -55,7 +56,8 @@ export default class Responsive extends Component {\nconstructor(...args) {\nsuper(...args)\n- this.state = { width: window.innerWidth }\n+\n+ this.state = { width: isBrowser ? window.innerWidth : 0 }\n}\ncomponentDidMount() {\n",
        "date": "17.10.2017 20:43:07",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "sim_msg": "refactor(ResponsiveWebApp): Enable location focus on mobile view",
        "sim_diff": "diff --git a/lib/components/app/responsive-webapp.js b/lib/components/app/responsive-webapp.js @@ -64,6 +64,7 @@ class ResponsiveWebapp extends Component {\nmatchContentToUrl,\nquery,\nsetLocationToCurrent,\n+ setMapCenter,\ntitle\n} = this.props\ndocument.title = title\n@@ -95,10 +96,7 @@ class ResponsiveWebapp extends Component {\n// if in mobile mode and from field is not set, use current location as from and recenter map\nif (isMobile() && query.from === null) {\nsetLocationToCurrent({ locationType: 'from' }, intl)\n- // setMapCenter(pt)\n- if (initZoomOnLocate) {\n- // setMapZoom({ zoom: initZoomOnLocate })\n- }\n+ setMapCenter(map, pt, initZoomOnLocate)\n}\n}\n// If the path changes (e.g., via a back button press) check whether the\n@@ -277,6 +275,7 @@ const mapDispatchToProps = {\nparseUrlQueryString: formActions.parseUrlQueryString,\nreceivedPositionResponse: locationActions.receivedPositionResponse,\nsetLocationToCurrent: mapActions.setLocationToCurrent,\n+ setMapCenter: mapActions.setMapCenter,\nsetPopupContent: uiActions.setPopupContent\n}\n"
    },
    {
        "msg": "fix: fix release workflow",
        "diff": "diff --git a/.github/workflows/release.yml b/.github/workflows/release.yml @@ -30,7 +30,7 @@ jobs:\nls ~/.npmrc >/dev/null 2>&1 && \\\n[[ $(git describe --exact-match 2> /dev/null || :) =~ -canary ]]; \\\nthen\n- yarn run lerna publish from-git --npm-tag canary --yes\n+ yarn run lerna publish from-git --no-verify-access --npm-tag canary --yes\nelse\necho \"Did not publish canary\"\nfi\n@@ -42,7 +42,7 @@ jobs:\nls ~/.npmrc >/dev/null 2>&1 && \\\n[[ ! $(git describe --exact-match 2> /dev/null || :) =~ -canary ]]; \\\nthen\n- yarn run lerna publish from-git --yes\n+ yarn run lerna publish from-git --no-verify-access --yes\nelse\necho \"Did not publish\"\nfi\n",
        "date": "13.03.2021 15:25:03",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "chore: missing lerna ci comand",
        "sim_diff": "diff --git a/scripts/release_npm.sh b/scripts/release_npm.sh @@ -20,7 +20,7 @@ fi\n# Command to push the packages\nCMD_PREPARE=\"yarn prepare\"\n-CMD_PUBLISH_PACKAGES=\"lerna publish --exact --force-publish=* --registry='https://npm.lwcjs.org' --skip-git --yes ${CANARY} --repo-version ${PACKAGE_VERSION} --new-version ${PACKAGE_VERSION} --non-interactive\"\n+CMD_PUBLISH_PACKAGES=\"lerna publish --ci --exact --force-publish=* --registry='https://npm.lwcjs.org' --skip-git --yes ${CANARY} --repo-version ${PACKAGE_VERSION} --new-version ${PACKAGE_VERSION} --non-interactive\"\n# Run\n$CMD_PREPARE && $CMD_PUBLISH_PACKAGES;\n"
    },
    {
        "msg": "fix(persistence of notes): user doesn't have to click away to get note to work",
        "diff": "diff --git a/src/features/tooltip/Tooltip.js b/src/features/tooltip/Tooltip.js @@ -14,6 +14,10 @@ class TooltipControls extends React.Component {\nconstructor(props){\nsuper(props)\nthis.state = this.initialState;\n+ /*this.state = {\n+ ...this.state,\n+ showNote:false\n+ }*/\n}\nget initialState(){\n@@ -23,7 +27,6 @@ class TooltipControls extends React.Component {\nwidth:\"300px\",\nposition: [200,200],\ncurrentLabel:\"\",\n- showNote: false,\nnote: {\nid:'',\nnote:{\n@@ -68,7 +71,7 @@ class TooltipControls extends React.Component {\nawait this.setState({note});\nawait this.props.addNote(this.state.note);\n- this.resetBuilder()\n+ //this.resetBuilder()\n} catch(error){\nalert('No search key')\n}\n@@ -96,9 +99,6 @@ class TooltipControls extends React.Component {\ncomponentDidUpdate = (prevProps) => {\nif (prevProps.data !== this.props.data) {\n- if(this.props.data.fieldValue){\n- }\n- else{\nvar note = {...this.state.note}\nnote.id = this.props.data.CRVIZ._SEARCH_KEY\nif (note.id in this.props.notes){\n@@ -111,7 +111,6 @@ class TooltipControls extends React.Component {\n}\n}\n}\n- }\nrender() {\nconst style = {\n",
        "date": "17.07.2019 11:34:54",
        "repo": "iqtlabs/crviz",
        "type": "fix",
        "sim_msg": "feat: add ability to hide tip in tooltip",
        "sim_diff": "diff --git a/src/components/Tooltip/Tooltip.jsx b/src/components/Tooltip/Tooltip.jsx @@ -113,7 +113,8 @@ export default class Tooltip extends React.PureComponent {\nchildren,\ngetContainer,\ntheme,\n- paddingSize\n+ paddingSize,\n+ tip\n} = this.props;\nif (!children) {\n@@ -127,7 +128,7 @@ export default class Tooltip extends React.PureComponent {\nconst dialogProps = {\n...this.props,\nstartingEdge: justify,\n- tooltip: true,\n+ tooltip: tip,\ncontent,\ngetContainer: getContainer || this.getContainer,\nmoveBy,\n@@ -153,5 +154,6 @@ Tooltip.defaultProps = {\nanimationType: \"expand\",\nwithoutDialog: false,\ncontainerSelector: \"#tooltips-container\",\n- immediateShowDelay: null\n+ immediateShowDelay: null,\n+ tip: true\n};\n"
    },
    {
        "msg": "fix(types): swap `declare` order for `*.module.css` files",
        "diff": "diff --git a/types.d.ts b/types.d.ts @@ -41,18 +41,18 @@ declare interface NodeModule {\n}\ndeclare var module: NodeModule;\n-declare module '*.css' { const url: string; export default url; }\n-declare module '*.scss' { const url: string; export default url; }\n-declare module '*.sass' { const url: string; export default url; }\n-declare module '*.styl' { const url: string; export default url; }\n-\n/** Maps authored classNames to their CSS Modules -suffixed generated classNames. */\n-interface Mapping { [key: string]: string; }\n+type Mapping = Record<string, string>;\ndeclare module '*.module.css' { const mapping: Mapping; export default mapping; }\ndeclare module '*.module.scss' { const mapping: Mapping; export default mapping; }\ndeclare module '*.module.sass' { const mapping: Mapping; export default mapping; }\ndeclare module '*.module.styl' { const mapping: Mapping; export default mapping; }\n+declare module '*.css' { const url: string; export default url; }\n+declare module '*.scss' { const url: string; export default url; }\n+declare module '*.sass' { const url: string; export default url; }\n+declare module '*.styl' { const url: string; export default url; }\n+\n// Import Prefixes\ndeclare module 'json:';\ndeclare module 'css:';\n",
        "date": "02.12.2020 14:18:39",
        "repo": "preactjs/wmr",
        "type": "fix",
        "sim_msg": "chore: made condition strict",
        "sim_diff": "diff --git a/packages/utils/scaffold.ts b/packages/utils/scaffold.ts @@ -14,12 +14,13 @@ import { Node } from \"./types/NodePath\";\nfunction mergeHandler(config: Config, transformations: string[]): [Config, string[]]{\n- if(transformations.indexOf(\"topScope\") === -1)\n+ if(!config[\"topScope\"])\n{\nconfig[\"topScope\"] = [\n`const merge = require('webpack-merge')`,\n`const ${config.merge[0]} = require(${config.merge[1]})`\n];\n+ transformations.push(\"topScope\");\n} else {\nconfig.topScope.push(\n`const merge = require('webpack-merge')`,\n@@ -29,7 +30,7 @@ function mergeHandler(config: Config, transformations: string[]): [Config, strin\nconfig.merge = config.merge[0];\ntransformations.push(\"merge\", \"topScope\");\n- return [config, transformations]\n+ return [config, transformations];\n}\n"
    },
    {
        "msg": "fix: Add support for multi-level filenames",
        "diff": "diff --git a/lib/config/exec.js b/lib/config/exec.js @@ -155,7 +155,9 @@ function exec(nodemonOptions, execMap) {\n// BIG NOTE: user can't do this: nodemon -e *.js\n// because the terminal will automatically expand the glob against\n// the file system :(\n- extension = (extension.match(/[^,.\\s]+/g) || []).join(',');\n+ extension = (extension.match(/[^,*\\s]+/g) || [])\n+ .map(ext => ext.replace(/^\\./, ''))\n+ .join(',');\noptions.ext = extension;\n",
        "date": "08.10.2017 16:03:07",
        "repo": "remy/nodemon",
        "type": "fix",
        "sim_msg": "feat: read pluginsDataMap by cli option `-e jsonString`",
        "sim_diff": "diff --git a/lib/config.js b/lib/config.js @@ -514,7 +514,7 @@ exports.extend = function(newConf) {\n}\nvar extra = newConf.extra;\nif (extra && typeof extra === 'string') {\n- extra = readFileText(extra);\n+ extra = /^\\s*\\{[\\w\\W]*\\}\\s*$/.test(extra) ? extra : readFileText(extra);\ntry {\nextra = extra && JSON.parse(extra);\nif (extra && typeof extra === 'object') {\n"
    },
    {
        "msg": "fix(switch.mdx): added a slots table",
        "diff": "diff --git a/packages/chakra-ui-docs/docs/switch.mdx b/packages/chakra-ui-docs/docs/switch.mdx @@ -57,10 +57,15 @@ You can change the checked background color of the switch by passing the `color`\n| `color` | `string` | | The background color of the switch when checked. |\n| `name` | `string` | | The input name of the switch when used in a form. |\n| `value` | `string`, `boolean` | | The value of the switch. |\n-| `children` | `Vue.VNode` | | The children of the switch. |\n| `aria-label` | `string` | | The aria-label of the switch for accessibility. |\n| `aria-labelledby` | `string` | | The aria-labelledby of the switch for accessibility. |\n| `isChecked` | `boolean` | | If `true`, set the switch to the checked state. |\n| `defaultIsChecked` | `boolean` | | If `true`, the checkbox will be initially checked. |\n| `isDisabled` | `boolean` | | If `true`, set the disabled to the invalid state. |\n| `isInvalid` | `boolean` | | If `true`, set the switch to the invalid state. |\n+\n+## Slots\n+\n+| Name | Description |\n+| ------- | ---------------------------------------- |\n+| default | The children of the `CSwitch` component. |\n",
        "date": "02.05.2020 21:52:30",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "sim_msg": "refactor(switch): extend checkableinput ts props and remove redundant type definitions",
        "sim_diff": "diff --git a/src/__experimental__/components/switch/switch.d.ts b/src/__experimental__/components/switch/switch.d.ts import * as React from \"react\";\n-import { MarginSpacingProps } from '../../../utils/helpers/options-helper';\n-export interface SwitchProps extends MarginSpacingProps {\n- checked?: boolean;\n+import { MarginProps } from \"styled-system\";\n+import { CommonCheckableInputProps } from \"../../../__internal__/checkable-input\";\n+\n+export interface SwitchProps extends CommonCheckableInputProps, MarginProps {\n+ /** Breakpoint for adaptive label (inline labels change to top aligned). Enables the adaptive behaviour when set */\n+ adaptiveLabelBreakpoint?: number;\n+ /** Set the default value of the Switch if component is meant to be used as uncontrolled */\ndefaultChecked?: boolean;\n- disabled?: boolean;\n- fieldHelp?: string;\n- fieldHelpInline?: boolean;\n+ /** Overrides the default tabindex of the Help component */\n+ helpTabIndex?: number | string;\n+ /** Unique Identifier for the input. Will use a randomly generated GUID if none is provided */\nid?: string;\n- inputWidth?: number | string;\n- label?: string;\n+ /** Text alignment of the label */\n+ labelAlign?: \"left\" | \"right\";\n+ /** A message that the Help component will display */\nlabelHelp?: React.ReactNode;\n- labelAlign?: string;\n+ /** When true label is inline */\nlabelInline?: boolean;\n- labelSpacing?: 1 | 2;\n- labelWidth?: number | string;\n+ /** Triggers loading animation */\nloading?: boolean;\n- onChange?: (ev: React.ChangeEvent<HTMLInputElement>) => void;\n- onBlur?: (ev: React.ChangeEvent<HTMLInputElement>) => void;\n- reverse?: boolean;\n- size?: string;\n- value?: string;\n- /* Indicate that error has occurred\n- Pass string to display icon, tooltip and red border\n- Pass true boolean to only display red border */\n- error?: boolean | string;\n- /* Indicate that warning has occurred\n- Pass string to display icon, tooltip and orange border\n- Pass true boolean to only display orange border */\n- warning?: boolean | string;\n- /* Indicate additional information\n- Pass string to display icon, tooltip and blue border\n- Pass true boolean to only display blue border */\n- info?: boolean | string;\n- /** When true, validation icon will be placed on label instead of being placed by the input */\n- validationOnLabel?: boolean;\n- /** Override tab index on the validation and help icon */\n- helpTabIndex?: number | string;\n+ /** Margin bottom, given number will be multiplied by base spacing unit (8) */\nmb?: 0 | 1 | 2 | 3 | 4 | 5 | 7;\n- /** Breakpoint for adaptive label (inline labels change to top aligned). Enables the adaptive behaviour when set */\n- adaptiveLabelBreakpoint?: number;\n- /** Flag to configure component as mandatory */\n- required?: boolean;\n+ /** Size of the switch */\n+ size?: \"small\" | \"large\";\n+ /** When true, validation icon will be placed on label instead of being placed on the input */\n+ validationOnLabel?: boolean;\n+ /** The value of the switch, passed on form submit */\n+ value?: string;\n}\ndeclare const Switch: React.ComponentClass<SwitchProps>;\n"
    },
    {
        "msg": "fix(menu): update MenuOption defaultValue prop to inner value",
        "diff": "diff --git a/packages/chakra-ui-core/src/CMenu/CMenuOption.js b/packages/chakra-ui-core/src/CMenu/CMenuOption.js @@ -176,11 +176,11 @@ const CMenuOptionGroup = {\ntype: [String, Number],\ndefault: null\n},\n- defaultValue: [String, Number]\n+ defaultValue: [String, Number, Array]\n},\ndata () {\nreturn {\n- innerValue: []\n+ innerValue: this.defaultValue || []\n}\n},\ncomputed: {\n",
        "date": "20.07.2021 01:44:19",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "sim_msg": "feat(cmp/modal): use a consent key to use correctly uncontrolled components",
        "sim_diff": "diff --git a/components/cmp/modal/src/CmpModal/index.js b/components/cmp/modal/src/CmpModal/index.js @@ -4,6 +4,7 @@ import PropTypes from 'prop-types'\nimport {CmpModal} from './component'\nexport class CmpModalContainer extends Component {\nstate = {\n+ consentKey: 0,\nfetchingData: true,\npurposeConsents: {},\npurposes: [],\n@@ -44,7 +45,7 @@ export class CmpModalContainer extends Component {\nacc[consentId] = enabled\nreturn acc\n}, {})\n- return {[key]: consents}\n+ return {[key]: consents, consentKey: state.consentKey + 1}\n})\n}\n@@ -57,6 +58,7 @@ export class CmpModalContainer extends Component {\nrender() {\nconst {lang, logo} = this.props\nconst {\n+ consentKey,\nfetchingData,\npurposes,\npurposeConsents,\n@@ -68,6 +70,7 @@ export class CmpModalContainer extends Component {\nreturn (\n<CmpModal\n+ consentKey={consentKey}\nlang={lang}\nlogo={logo}\nonAccept={this._handleAccept}\n"
    },
    {
        "msg": "fix(razzle): fix wds served from message",
        "diff": "diff --git a/packages/razzle/config/createConfigAsync.js b/packages/razzle/config/createConfigAsync.js @@ -776,6 +776,7 @@ module.exports = (\ndisableDotRule: true,\n},\nhost: dotenv.raw.HOST,\n+ publicPath: clientPublicPath,\nhot: true,\nnoInfo: true,\noverlay: false,\n@@ -890,7 +891,6 @@ module.exports = (\nif (IS_DEV) {\nconfig.devServer.contentBase = paths.appPublic;\nconfig.devServer.watchContentBase = true;\n- config.devServer.publicPath = '/';\n}\nconfig.plugins = [\n",
        "date": "08.01.2021 16:05:12",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "fix: tailwind content sources with template source as function",
        "sim_diff": "diff --git a/src/generators/tailwindcss.js b/src/generators/tailwindcss.js @@ -60,6 +60,19 @@ module.exports = {\nconst templateSources = templateObjects.map(template => {\nconst source = get(template, 'source')\n+ if (typeof source === 'function') {\n+ const sources = source(maizzleConfig)\n+\n+ if (Array.isArray(sources)) {\n+ sources.map(s => config.content.files.push(s))\n+ } else if (typeof sources === 'string') {\n+ config.content.files.push(sources)\n+ }\n+\n+ // Must return a valid `content` entry\n+ return {raw: '', extension: 'html'}\n+ }\n+\nreturn `${source}/**/*.*`\n})\n"
    },
    {
        "msg": "fix(razzle): fix optimizaton cofig in dev buil",
        "diff": "diff --git a/packages/razzle/config/createConfigAsync.js b/packages/razzle/config/createConfigAsync.js @@ -931,6 +931,9 @@ module.exports = (\n}),\n].filter(x => x);\n+ // make sure the key exists\n+ config.optimization = {};\n+\nif (!IS_DEV_ENV) {\nconfig.optimization = {\nsplitChunks: webpackOptions.splitChunksConfig,\n",
        "date": "21.08.2021 20:03:15",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "refactor(build-config): make use of webpack 4's auto chunking",
        "sim_diff": "diff --git a/packages/build-config/configs/build.js b/packages/build-config/configs/build.js @@ -37,26 +37,8 @@ module.exports = {\ndevtool: 'source-map',\noptimization: {\nsplitChunks: {\n- cacheGroups: {\n- commons: {\n- test: function(module) {\n- if (module.resource) {\n- if (\n- module.resource.indexOf('hops-config') > -1 ||\n- module.resource.indexOf('.css') === module.resource.length - 4\n- ) {\n- return false;\n- }\n- }\n- return (\n- module.context && module.context.indexOf('node_modules') > -1\n- );\n- },\n- name: 'vendor',\nchunks: 'all',\n},\n- },\n- },\nminimizer: [\nnew UglifyJSPlugin({\ncache: true,\n"
    },
    {
        "msg": "fix: fixed an issue where we tried to resolve null as path",
        "diff": "diff --git a/lib/monitor/watch.js b/lib/monitor/watch.js @@ -142,6 +142,7 @@ function filterAndRestart(files) {\n// if there's no matches, then test to see if the changed file is the\n// running script, if so, let's allow a restart\n+ if (config.options.execOptions.script) {\nconst script = path.resolve(config.options.execOptions.script);\nif (matched.result.length === 0 && script) {\nconst length = script.length;\n@@ -155,6 +156,7 @@ function filterAndRestart(files) {\n}\n})\n}\n+ }\nutils.log.detail('changes after filters (before/after): ' +\n[files.length, matched.result.length].join('/'));\n",
        "date": "15.12.2017 14:31:17",
        "repo": "remy/nodemon",
        "type": "fix",
        "sim_msg": "fix: replace request",
        "sim_diff": "diff --git a/lib/inspectors/res.js b/lib/inspectors/res.js @@ -220,7 +220,7 @@ module.exports = function(req, res, next) {\noptions.headers = headers;\noptions.method = req.method;\noptions.rejectUnauthorized = false;\n- if (!options.isPlugin && ((!proxyOptions && req.fullUrl !== req.realUrl) || !headers.host)) {\n+ if (!options.isPlugin && (req.fullUrl !== req.realUrl || !headers.host)) {\nheaders.host = options.hostname + (options.port ? ':' + options.port : '');\n}\nif (req.disable.keepAlive) {\n"
    },
    {
        "msg": "fix(razzle-dev-utils): add missing dep",
        "diff": "diff --git a/packages/razzle-dev-utils/package.json b/packages/razzle-dev-utils/package.json \"dependencies\": {\n\"@babel/code-frame\": \"^7.8.3\",\n\"chalk\": \"3.0.0\",\n+ \"jest-message-util\": \"26.3.0\",\n\"react-dev-utils\": \"10.2.0\",\n\"react-error-overlay\": \"^6.0.7\",\n\"resolve\": \"1.17.0\",\n",
        "date": "19.09.2020 15:23:09",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "chore(deps): update chalk to v4.17.10\nUpdate Chalk to incorporate numerous upstream improvements.\nSee",
        "sim_diff": "diff --git a/package.json b/package.json \"babel-preset-stage-0\": \"^6.24.1\",\n\"babel-register\": \"^6.26.0\",\n\"browserslist\": \"^2.11.0\",\n- \"chalk\": \"^2.0.1\",\n+ \"chalk\": \"^2.4.1\",\n\"concurrently\": \"^3.5.1\",\n\"cross-env\": \"^5.2.0\",\n\"cross-spawn\": \"^6.0.5\",\n"
    },
    {
        "msg": "fix: get rid of viewbox warning",
        "diff": "diff --git a/src/features/visualization/d3-viz.js b/src/features/visualization/d3-viz.js @@ -74,7 +74,6 @@ function d3Viz(rootNode) {\nconst svg = transformRoot.append(\"svg\")\n.style(\"overflow\", \"visible\")\n.attr(\"class\", \"nodeRoot\")\n- .attr('viewBox', \"0 0 100% 100%\");\nconst tooltip = root.append(\"div\").classed(\"viz-tooltip\", true);\nconst legend = root.append(\"div\").classed(\"viz-legend\", true);\n",
        "date": "09.05.2019 13:28:52",
        "repo": "iqtlabs/crviz",
        "type": "fix",
        "sim_msg": "feat(guide): disable auto scroll when navigating the guide and add bottom padding",
        "sim_diff": "diff --git a/pages/guide/guide.js b/pages/guide/guide.js @@ -18,7 +18,7 @@ const STYLES_ROOT = css`\ncolor: ${Constants.semantic.textBlack};\n-webkit-font-smoothing: antialiased;\n-moz-osx-font-smoothing: grayscale;\n- overflow: hidden;\n+ padding-bottom: 80px;\n`;\nconst STYLES_CONTAINER = css`\n@@ -222,10 +222,10 @@ export const useGuideKeyCommands = (next, prev) => {\nswitch (e.key) {\ncase \"ArrowRight\":\n- if (next) router.replace(next);\n+ if (next) router.push(next, undefined, { scroll: false });\nbreak;\ncase \"ArrowLeft\":\n- if (prev) router.replace(prev);\n+ if (prev) router.push(prev, undefined, { scroll: false });\nbreak;\n}\n};\n@@ -266,12 +266,12 @@ export default function Guide({\n/>\n)}\n<div css={STYLES_FLEX}>\n- <Link href={prev}>\n+ <Link href={prev} scroll={false}>\n<a css={STYLES_BUTTON} style={{ marginRight: `16px` }}>\n<SVG.LeftArrow height={16} width={16} />\n</a>\n</Link>\n- <Link href={next}>\n+ <Link href={next} scroll={false}>\n<a css={STYLES_BUTTON}>\n<SVG.RightArrow height={16} width={16} />\n</a>\n"
    },
    {
        "msg": "fix(stack): filter empty slots",
        "diff": "diff --git a/packages/kiwi-core/src/Stack/index.js b/packages/kiwi-core/src/Stack/index.js @@ -53,7 +53,7 @@ const Stack = {\n_direction = 'column'\n}\n- const children = this.$slots.default\n+ const children = this.$slots.default.filter(e => e.tag)\nconst stackables = children.map((node, index) => {\nlet isLastChild = children.length === index + 1\nlet spacingProps = _isInline\n",
        "date": "19.02.2020 22:50:31",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "sim_msg": "chore: spacings inline to render span instead of div",
        "sim_diff": "diff --git a/src/components/spacings/inline/inline.js b/src/components/spacings/inline/inline.js @@ -4,9 +4,9 @@ import filterDataAttributes from '../../../utils/filter-data-attributes';\nimport getStyles from './inline.styles';\nconst Inline = props => (\n- <div css={getStyles(props)} {...filterDataAttributes(props)}>\n+ <span css={getStyles(props)} {...filterDataAttributes(props)}>\n{props.children}\n- </div>\n+ </span>\n);\nInline.displayName = 'Inline';\n"
    },
    {
        "msg": "fix: Ensures config file has been merged before deciding output directory",
        "diff": "diff --git a/packages/wmr/src/lib/normalize-options.js b/packages/wmr/src/lib/normalize-options.js @@ -49,12 +49,6 @@ export async function normalizeOptions(options, mode, configWatchFiles = []) {\n// Files in the output directory are served if no middleware overrides them:\noptions.overlayDir = options.out;\n- // Ensure the output directory exists so that writeFile() doesn't have to create it:\n- // Note: awaiting the promise later lets it run in parallel with the CWD check below.\n- const ensureOutDirPromise = fs.mkdir(options.out, { recursive: true }).catch(err => {\n- console.warn(`Warning: Failed to create output directory: ${err.message}`);\n- });\n-\noptions.public = options.public || 'public';\noptions.publicPath = options.publicPath || '/';\n@@ -81,7 +75,6 @@ export async function normalizeOptions(options, mode, configWatchFiles = []) {\n}\nlet prevPublicFolder = options.public;\n- await ensureOutDirPromise;\nconst pkgFile = resolve(options.cwd, 'package.json');\nlet pkg;\n@@ -192,6 +185,11 @@ export async function normalizeOptions(options, mode, configWatchFiles = []) {\n}\n}\n+ // Ensure the output directory exists so that writeFile() doesn't have to create it\n+ await fs.mkdir(options.out, { recursive: true }).catch(err => {\n+ console.warn(`Warning: Failed to create output directory: ${err.message}`);\n+ });\n+\nif (options.aliases && Object.keys(options.aliases).length > 0) {\ndeprecated(\n'Found \"aliases\" property in WMR\\'s configuration. It will be removed in a future version of WMR. Please switch to \"alias\" instead.'\n",
        "date": "23.01.2022 21:34:12",
        "repo": "preactjs/wmr",
        "type": "fix",
        "sim_msg": "feat(sitemap): allow function as staticUrls option",
        "sim_diff": "diff --git a/packages/plugin-sitemap/index.js b/packages/plugin-sitemap/index.js @@ -7,9 +7,27 @@ const normalize = p => p.replace(/\\/+$/, '') || '/'\nmodule.exports = function (api, options) {\nconst include = options.include.map(normalize)\nconst exclude = options.exclude.map(normalize)\n+ const staticUrls = []\nexclude.push('/404') // allways exclude /404 page\n+ if (process.env.NODE_ENV !== 'production') {\n+ return\n+ }\n+\n+ api.createPages(async ({ graphql }) => {\n+ if (typeof options.staticUrls === 'function') {\n+ const urls = await options.staticUrls({ graphql })\n+ if (Array.isArray(urls)) {\n+ staticUrls.push(...urls)\n+ } else {\n+ throw new Error('The staticUrls option must return an array.')\n+ }\n+ } else if (Array.isArray(options.staticUrls)) {\n+ staticUrls.push(...options.staticUrls)\n+ }\n+ })\n+\napi.afterBuild(async ({ queue, config }) => {\nif (!config.siteUrl) {\nthrow new Error(`Sitemap plugin is missing a required siteUrl config.`)\n@@ -22,7 +40,6 @@ module.exports = function (api, options) {\nconst filename = path.join(config.outputDir, options.output)\nconst pathPrefix = config.pathPrefix !== '/' ? config.pathPrefix : ''\n- const staticUrls = options.staticUrls || []\nlet pages = queue.filter(page => page.type ? page.type === 'static' : true)\n"
    },
    {
        "msg": "fix: windows 8 doesn't support windows-kill\nFixes",
        "diff": "diff --git a/lib/monitor/run.js b/lib/monitor/run.js @@ -16,6 +16,7 @@ var restart = null;\nvar psTree = require('pstree.remy');\nvar path = require('path');\nvar signals = require('./signals');\n+const osRelease = require('os').release();\nfunction run(options) {\nvar cmd = config.command.raw;\n@@ -312,11 +313,18 @@ function kill(child, signal, callback) {\n}\nif (utils.isWindows) {\n+ const taskKill = () => {\n+ try {\n+ exec('taskkill /pid ' + child.pid + ' /T /F');\n+ } catch (e) {\n+ utils.log.error(\"Could not shutdown sub process cleanly\");\n+ }\n+ }\n// We are handling a 'SIGKILL' POSIX signal under Windows the\n// same way it is handled on a UNIX system: We are performing\n// a hard shutdown without waiting for the process to clean-up.\n- if (signal === 'SIGKILL') {\n+ if (signal === 'SIGKILL' || osRelease < 10) {\ndebug('terminating process group by force: %s', child.pid);\n@@ -324,7 +332,7 @@ function kill(child, signal, callback) {\n// process group ('/t') of the child ('/pid') by force ('/f').\n// We need to end all sub processes, because the 'child'\n// process in this context is actually a cmd.exe wrapper.\n- exec(`taskkill /f /t /pid ${child.pid}`);\n+ taskKill();\ncallback();\nreturn;\n}\n@@ -357,9 +365,13 @@ function kill(child, signal, callback) {\n// Therefore we are using 'start' to create a new cmd.exe context.\n// The '/min' option hides the new terminal window and the '/wait'\n// option lets the process wait for the command to finish.\n+ try {\nexecSync(\n`start \"windows-kill\" /min /wait \"${windowsKill}\" -SIGINT ${processId}`\n);\n+ } catch (e) {\n+ taskKill();\n+ }\ncallback();\n} else {\n",
        "date": "08.07.2021 08:42:39",
        "repo": "remy/nodemon",
        "type": "fix",
        "sim_msg": "refactor(e2e): fix security issue when killing processes",
        "sim_diff": "diff --git a/__tests__/test-utils/utils.js b/__tests__/test-utils/utils.js -const {exec, spawn} = require('child_process')\n+const {execFile, spawn} = require('child_process')\nconst fs = require('fs')\nconst {safeDump, safeLoad} = require('js-yaml')\n@@ -40,18 +40,26 @@ function killDetachedProcess (processName, callback) {\nconst pidFilename = `${processName}.pid`\n// open pid file to get pid\n- fs.readFile(pidFilename, (err, data) => {\n+ fs.readFile(pidFilename, (err, pid) => {\nif (err) {\nconsole.error(`pid file ${pidFilename} could not be read!`)\nreturn callback(err)\n}\n+ // make absolutely sure that the pid file contains a numeric string. This\n+ // is to make sure that the file we're reading didn't somehow change and now\n+ // includes a harmful command that could be executed\n+ if (!pid.match(/^\\d*$/)) {\n+ console.error(`pid file ${pidFilename} has unexpected data!`)\n+ return callback(new Error(`pid file ${pidFilename} has unexpected data!`))\n+ }\n+\n// attempt to kill process running with pid\n- const cmd = `kill ${data}`\n+ const cmd = `kill ${pid}`\nconsole.log(cmd)\n- exec(cmd, err => {\n+ execFile('kill', [pid], err => {\nif (err) {\n- console.error(`pid ${data} (${processName}) could not be killed!`)\n+ console.error(`pid ${pid} (${processName}) could not be killed!`)\nreturn callback(err)\n}\n"
    },
    {
        "msg": "fix(environment): Fix content security policy",
        "diff": "diff --git a/config/environment.js b/config/environment.js @@ -59,7 +59,7 @@ module.exports = function(environment) {\nENV.contentSecurityPolicy = {\n\"default-src\": \"'self' *.fastly.net\",\n- \"connect-src\": \"'self' https://s3.amazonaws.com *.algolia.net *.fastly.net\",\n+ \"connect-src\": \"'self' https://s3.amazonaws.com *.algolia.net *.algolianet.com *.fastly.net\",\n\"script-src\": \"'self' unsafe-inline use.typekit.net 'sha256-36n/xkZHEzq3lo4O+0jXMYbl+dWu3C8orOFHtcAH6HU=' *.fastly.net https://www.google-analytics.com\",\n\"font-src\": \"'self' data://* https://fonts.gstatic.com *.fastly.net\",\n\"img-src\": \"'self' data://* *.fastly.net https://www.google-analytics.com\",\n",
        "date": "05.04.2017 21:11:06",
        "repo": "ember-learn/ember-api-docs",
        "type": "fix",
        "sim_msg": "style(sidebar): update sidebar link style",
        "sim_diff": "diff --git a/styleguide.config.js b/styleguide.config.js @@ -128,6 +128,7 @@ module.exports = {\nbackgroundRepeat: \"no-repeat\",\nheight: 110,\nbackgroundPosition: \"25% 50%\",\n+ backgroundSize: 235,\n}\n},\nEditorLoader: {\n@@ -142,13 +143,21 @@ module.exports = {\nitem: {\ncolor: \"#062a4e\",\n\"& > a\": {\n+ display: \"inline\",\nfontWeight: \"bold !important\",\n- textDecoration: \"none !important\"\n+ textDecoration: \"none !important\",\n}\n},\nisChild: {\n\"& > a\": {\nfontWeight: \"normal !important\",\n+ },\n+ \"& > a:hover\": {\n+ cursor: \"pointer\",\n+ backgroundImage: \"linear-gradient(#f7fdff 50%, #a7edff 50%) !important\",\n+ backgroundRepeat: \"repeat-x !important\",\n+ backgroundSize: \"8px 2px !important\",\n+ backgroundPositionY: \"1em !important\"\n}\n}\n},\n"
    },
    {
        "msg": "fix: revert stdin handling\nFixes\nFixes\nRef\nMeans that ctrl^l does not instantly clear the terminal. It requires a\nnew line directly after.",
        "diff": "diff --git a/lib/nodemon.js b/lib/nodemon.js @@ -95,48 +95,43 @@ function nodemon(settings) {\nutils.log.detail('reading config ' + file);\n});\n- // echo out notices about running state\n- if (config.options.stdin) {\n+ if (config.options.stdin && config.options.restartable) {\n+ // allow nodemon to restart when the use types 'rs\\n'\n+ process.stdin.resume();\n+ process.stdin.setEncoding('utf8');\n+ process.stdin.on('data', data => {\n+ const str = data.toString().trim().toLowerCase();\n+\n+ // if the keys entered match the restartable value, then restart!\n+ if (str === config.options.restartable) {\n+ bus.emit('restart');\n+ } else if (data.charCodeAt(0) === 12) { // ctrl+l\n+ console.clear();\n+ }\n+ });\n+ } else if (config.options.stdin) {\n// so let's make sure we don't eat the key presses\n// but also, since we're wrapping, watch out for\n// special keys, like ctrl+c x 2 or '.exit' or ctrl+d or ctrl+l\nvar ctrlC = false;\nvar buffer = '';\n- const rs = config.options.restartable;\n- process.stdin.setEncoding('utf8');\nprocess.stdin.on('data', function (data) {\ndata = data.toString();\nbuffer += data;\nconst chr = data.charCodeAt(0);\n// if restartable, echo back\n- if (rs) {\n- if (chr === 13) {\n- process.stdout.write('\\n');\n- }\n- // this intentionally prevents cursor keys from working.\n- process.stdout.write(String.fromCharCode(chr));\n- }\n-\nif (chr === 3) {\nif (ctrlC) {\nprocess.exit(0);\n}\n- // if restartable, assume ctrl+c will break immediately\n- if (rs) {\n- bus.emit('quit', 130);\n- }\nctrlC = true;\nreturn;\n- } else if (!rs && (buffer === '.exit' || chr === 4)) { // ctrl+d\n+ } else if (buffer === '.exit' || chr === 4) { // ctrl+d\nprocess.exit();\n} else if (chr === 13 || chr === 10) { // enter / carriage return\n- const input = buffer.toString().trim().toLowerCase();\n- if (input === rs) {\n- bus.emit('restart');\n- }\nbuffer = '';\n} else if (chr === 12) { // ctrl+l\nconsole.clear();\n@@ -144,7 +139,6 @@ function nodemon(settings) {\n}\nctrlC = false;\n});\n- process.stdin.resume();\nif (process.stdin.setRawMode) {\nprocess.stdin.setRawMode(true);\n}\n",
        "date": "13.07.2018 12:36:29",
        "repo": "remy/nodemon",
        "type": "fix",
        "sim_msg": "fix: pipe://plugin cannot handle binary frame issues",
        "sim_diff": "diff --git a/lib/plugins/load-plugin.js b/lib/plugins/load-plugin.js @@ -48,6 +48,9 @@ var REQ_INTERVAL = 16;\nvar pluginOpts, storage;\nvar pluginKeyMap = {};\nvar MASK_OPTIONS = { mask: true };\n+var BINARY_MASK_OPTIONS = { mask: true, binary: true };\n+var BINARY_OPTIONS = { binary: true };\n+var DEFAULT_OPTIONS = {};\n/* eslint-disable no-undef */\nvar REQ_ID_KEY = typeof Symbol === 'undefined' ? '$reqId_' + Date.now() : Symbol();\nvar SESSION_KEY = typeof Symbol === 'undefined' ? '$session_' + Date.now() : Symbol();\n@@ -782,15 +785,18 @@ function addFrameHandler(req, socket, maxWsPayload, fromClient, toServer) {\nvar emit = socket.emit;\nvar write = socket.write;\nvar end = socket.end;\n+ var lastOpts;\nvar sender = wsParser.getSender(socket, toServer);\n- var getOptions = function(opts) {\n- if (typeof opts !== 'object') {\n- opts = null;\n- } else if (opts) {\n+ var getOptions = function(opts, binary) {\n+ if (opts) {\nopts.mask = toServer;\nopts.binary = opts.binary || opts.opcode == 2;\n+ return opts;\n+ }\n+ if (toServer) {\n+ return binary ? BINARY_MASK_OPTIONS : MASK_OPTIONS;\n}\n- return opts || (toServer ? MASK_OPTIONS : '');\n+ return binary ? BINARY_OPTIONS : DEFAULT_OPTIONS;\n};\nhandleError(socket, sender, receiver);\nsocket.emit = function(type, chunk) {\n@@ -800,6 +806,10 @@ function addFrameHandler(req, socket, maxWsPayload, fromClient, toServer) {\nreturn emit.apply(this, arguments);\n};\nreceiver.onData = function(chunk, opts) {\n+ if (opts && opts.opcode == 2) {\n+ opts.binary = true;\n+ }\n+ lastOpts = opts;\nemit.call(socket, 'data', chunk, opts);\n};\nsocket.write = function(chunk, opts, cb) {\n@@ -807,7 +817,17 @@ function addFrameHandler(req, socket, maxWsPayload, fromClient, toServer) {\nif (opts === 'binary') {\nreturn write.call(this, chunk, opts, cb);\n}\n- sender.send(chunk, getOptions(opts));\n+ sender.send(chunk, getOptions(opts || lastOpts));\n+ }\n+ };\n+ socket.writeText = function(chunk) {\n+ if (chunk = toBinary(chunk)) {\n+ sender.send(chunk, getOptions());\n+ }\n+ };\n+ socket.writeBin = function(chunk) {\n+ if (chunk = toBinary(chunk)) {\n+ sender.send(chunk, getOptions(null, true));\n}\n};\nsocket.end = function(chunk) {\n"
    },
    {
        "msg": "fix(Button): fix animated prop type definition",
        "diff": "diff --git a/src/elements/Button/Button.d.ts b/src/elements/Button/Button.d.ts @@ -22,7 +22,7 @@ export interface ButtonProps {\nactive?: boolean;\n/** A button can animate to show hidden content. */\n- animated?: 'fade' | 'vertical';\n+ animated?: boolean | 'fade' | 'vertical';\n/** A button can be attached to the top or bottom of other content. */\nattached?: 'left' | 'right' | 'top' | 'bottom';\n",
        "date": "21.07.2017 21:41:00",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "sim_msg": "docs: increase button padding",
        "sim_diff": "diff --git a/website/src/components/Framework.js b/website/src/components/Framework.js @@ -122,7 +122,7 @@ export const Button = styled.button`\nwill-change: opacity;\nfont-size: 16px;\nfont-weight: 600;\n- padding: 8px 16px;\n+ padding: 10px 16px;\nborder-radius: 4px;\ntransition: background 0.2s, color 0.1s;\n"
    },
    {
        "msg": "fix: docs deps",
        "diff": "diff --git a/packages/chakra-ui-docs/package.json b/packages/chakra-ui-docs/package.json \"dev\": \"nuxt\",\n\"build\": \"nuxt generate\",\n\"start\": \"nuxt start\",\n- \"docs:build\": \"nuxt build\",\n+ \"docs:build\": \"nuxt \",\n\"lint\": \"eslint --ext .js,.vue --ignore-path .gitignore .\"\n},\n\"lint-staged\": {\n\"@chakra-ui/vue\": \"^0.3.10\",\n\"@chakra-ui/theme-vue\": \"^0.2.3\",\n\"@fortawesome/free-brands-svg-icons\": \"^5.12.0\",\n- \"@fortawesome/free-solid-svg-icons\": \"^5.11.gi2\",\n+ \"@fortawesome/free-solid-svg-icons\": \"^5.11.2\",\n\"@mdx-js/vue-loader\": \"^1.5.7\",\n\"@nuxtjs/dotenv\": \"^1.4.0\",\n\"@nuxtjs/emotion\": \"^0.0.1\",\n",
        "date": "12.04.2020 19:09:37",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "sim_msg": "feat(nuxt): add bvCSS option. resolves",
        "sim_diff": "diff --git a/nuxt/index.js b/nuxt/index.js @@ -19,15 +19,17 @@ module.exports = function nuxtBootstrapVue (moduleOptions) {\nthis.options.css.unshift('bootstrap/dist/css/bootstrap.css')\n}\n+ // Add library styles\n+ if (moduleOptions.bvCSS !== false) {\n+ this.options.css.push('bootstrap-vue/dist/bootstrap-vue.css')\n+ }\n+\n// Register plugin\nthis.addPlugin({\nsrc: resolve(__dirname, 'plugin.js'),\nfileName: 'bootstrap-vue.js',\nmoduleOptions\n})\n-\n- // Add library styles\n- this.options.css.push('bootstrap-vue/dist/bootstrap-vue.css')\n}\nmodule.exports.meta = require('../package.json')\n"
    },
    {
        "msg": "fix(create-razzle-app): allow examples with workspaces",
        "diff": "diff --git a/packages/create-razzle-app/lib/utils/install.js b/packages/create-razzle-app/lib/utils/install.js @@ -56,7 +56,7 @@ function getInstallArgs(cmd, packages, opts) {\nconst args = ['install', '--save', '--save-exact'];\nreturn args.concat(packages, ['--verbose']);\n} else if (cmd.cmd === 'yarn') {\n- const args = ['add'];\n+ const args = ['add', '-W'];\nreturn args.concat(packages,\nparseInt(cmd.version[0]) !== 2 ? ['--ignore-engines'] : []);\n}\n",
        "date": "11.03.2021 23:47:40",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "build: replace all slashes in Windows installer\nThis should fix the uninstaller not removing all files and directories.",
        "sim_diff": "diff --git a/build/tasks/configs/template.js b/build/tasks/configs/template.js /**\n* Factory function for creating a function to be called by the Windows installer template config\n- * @param {String} config\n+ * @param {string} config\n* @returns {Function}\n*/\nfunction getInstallerFiles( config ) {\nreturn function( grunt ) {\n- const dir = grunt.config( `template.${config}.options.data.dirinput` );\n-\n- function getFiles( filter ) {\n- return grunt.file.expand({\n- cwd: dir,\n- filter: filter\n- }, \"**\" )\n- .map(function( file ) {\n- return file.replace( \"/\", \"\\\\\" );\n- });\n- }\n+ const cwd = grunt.config( `template.${config}.options.data.dirinput` );\n+ const getFiles = filter => grunt.file.expand( { cwd, filter }, \"**\" )\n+ .map( path => path.replace( /\\//g, \"\\\\\" ) );\nreturn JSON.stringify({\nfiles: getFiles( \"isFile\" ),\n"
    },
    {
        "msg": "fix: allow getting string only loaders",
        "diff": "diff --git a/packages/razzle-dev-utils/makeLoaderFinder.js b/packages/razzle-dev-utils/makeLoaderFinder.js @@ -6,7 +6,7 @@ const makeLoaderFinder = loaderName => rule => {\n// Checks if there's a loader string in rule.loader matching loaderRegex.\nconst inLoaderString =\n- typeof rule.loader === 'string' && rule.loader.match(loaderRegex);\n+ typeof rule.loader === 'string' && (rule.loader.match(loaderRegex) || rule.loader === loaderName);\n// Checks if there is an object inside rule.use with loader matching loaderRegex, OR\n// Checks another condition, if rule is not an object, but pure string (ex: \"style-loader\", etc)\n@@ -15,8 +15,8 @@ const makeLoaderFinder = loaderName => rule => {\nrule.use.find(\nloader =>\n(typeof loader.loader === 'string' &&\n- loader.loader.match(loaderRegex)) ||\n- (typeof loader === 'string' && loader.match(loaderRegex))\n+ (loader.loader.match(loaderRegex)) || rule.loader === loaderName) ||\n+ (typeof loader === 'string' && (loader.match(loaderRegex) || loader === loaderName))\n);\nreturn inUseArray || inLoaderString;\n",
        "date": "17.09.2020 21:03:36",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "feat: Add object values to the context of rulesFile",
        "sim_diff": "diff --git a/lib/rules/index.js b/lib/rules/index.js @@ -136,11 +136,12 @@ exports.getProxy = getProxy;\nfunction resolveRulesFile(req, callback) {\nutil.getRuleValue(req.rules.rulesFile, function(fileRules) {\n+ var vals;\nfileRules = fileRules && fileRules.trim();\nvar execCallback = function() {\nif (fileRules) {\nreq.fileRules = fileRules;\n- req.rulesFileMgr = new Rules();\n+ req.rulesFileMgr = new Rules(vals);\nreq.rulesFileMgr.parse(fileRules);\nfileRules = req.rulesFileMgr.resolveRules(req.fullUrl);\n}\n@@ -159,6 +160,7 @@ function resolveRulesFile(req, callback) {\n};\ngetReqPayload(function(body) {\nvar ip = req.clientIp;\n+ vals = {};\nvar context = {\nurl: req.fullUrl,\nmethod: util.toUpperCase(req.method) || 'GET',\n@@ -169,7 +171,8 @@ function resolveRulesFile(req, callback) {\nip: ip,\nheaders: util.clone(req.headers),\nbody: body,\n- rules: []\n+ rules: [],\n+ values: vals\n};\nif (util.execScriptSync(fileRules, context) && Array.isArray(context.rules)) {\nfileRules = context.rules.join('\\n').trim();\n"
    },
    {
        "msg": "fix(examples): monorepo example running as expected",
        "diff": "diff --git a/examples/with-monorepo/package.json b/examples/with-monorepo/package.json \"version\": \"4.0.0-canary.16\",\n\"license\": \"MIT\",\n\"scripts\": {\n- \"start-1\": \"RAZZLE_APP_PATH=basic-1 razzle start\",\n- \"build-1\": \"RAZZLE_APP_PATH=basic-1 razzle build\",\n- \"test-1\": \"RAZZLE_APP_PATH=basic-1 razzle test --env=jsdom\",\n- \"start:prod-1\": \"RAZZLE_APP_PATH=basic-1 NODE_ENV=production node basic-1/build/server.js\",\n- \"start-2\": \"RAZZLE_APP_PATH=basic-2 razzle start\",\n- \"build-2\": \"RAZZLE_APP_PATH=basic-2 razzle build\",\n- \"test-2\": \"RAZZLE_APP_PATH=basic-2 razzle test --env=jsdom\",\n- \"start:prod-2\": \"RAZZLE_APP_PATH=basic-2 NODE_ENV=production node basic-2/build/server.js\"\n+ \"start-1\": \"cross-env RAZZLE_APP_PATH=basic-1 razzle start\",\n+ \"build-1\": \"cross-env RAZZLE_APP_PATH=basic-1 razzle build\",\n+ \"test-1\": \"cross-env RAZZLE_APP_PATH=basic-1 razzle test --env=jsdom\",\n+ \"start:prod-1\": \"cross-env RAZZLE_APP_PATH=basic-1 NODE_ENV=production node basic-1/build/server.js\",\n+ \"start-2\": \"cross-env RAZZLE_APP_PATH=basic-2 PORT=3002 razzle start\",\n+ \"build-2\": \"cross-env RAZZLE_APP_PATH=basic-2 PORT=3002 razzle build\",\n+ \"test-2\": \"cross-env RAZZLE_APP_PATH=basic-2 PORT=3002 razzle test --env=jsdom\",\n+ \"start:prod-2\": \"cross-env RAZZLE_APP_PATH=basic-2 PORT=3002 NODE_ENV=production node basic-2/build/server.js\",\n+ \"start\": \"concurrently \\\"yarn start-1\\\" \\\"yarn start-2\\\"\",\n+ \"start:prod\": \"concurrently \\\"yarn start:prod-1\\\" \\\"yarn start:prod-2\\\"\",\n+ \"build\": \"concurrently \\\"yarn build-1\\\" \\\"yarn build-2\\\"\"\n},\n\"workspaces\": [\n\"basic-1\",\n\"basic-2\"\n],\n\"devDependencies\": {\n+ \"concurrently\": \"^5.3.0\",\n+ \"cross-env\": \"^7.0.3\",\n\"razzle\": \"4.0.0-canary.8\",\n\"razzle-dev-utils\": \"4.0.0-canary.8\",\n\"mini-css-extract-plugin\": \"^0.9.0\",\n",
        "date": "11.01.2021 18:04:14",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "chore: remove and update extraneous scripts",
        "sim_diff": "diff --git a/api-server/package.json b/api-server/package.json \"develop\": \"node development-start.js\",\n\"babel-dev-server\": \"babel-node --inspect=0.0.0.0 ./server/index.js\",\n\"build\": \"babel server --out-dir lib --ignore 'node_modules /**/*','/**/*.test.js' --copy-files\",\n- \"ensure-env\": \"node ./config/ensure-env.js\",\n- \"only-once\": \"echo '/****/' && echo 'Seeding Database' && echo '/****/' && SEEDING=true node seed/index.js && echo '/****/' && echo 'Seeding Completed' && echo '/****/'\",\n- \"postonly-once\": \"gulp generate-migration-map\",\n- \"postseed\": \"node post-seed.js\",\n- \"seed\": \"node ../seed/index.js\",\n+ \"ensure-env\": \"node ../tools/scripts/build/ensure-env.js\",\n\"start\": \"DEBUG=fcc* babel-node server/index.js\",\n\"test\": \"jest\"\n},\n- \"license\": \"(BSD-3-Clause AND CC-BY-SA-4.0)\",\n+ \"license\": \"BSD-3-Clause\",\n\"dependencies\": {\n\"@freecodecamp/loopback-component-passport\": \"^1.1.0\",\n\"accepts\": \"^1.3.7\",\n"
    },
    {
        "msg": "fix(Popup): Remove hideOnScroll from window scroll",
        "diff": "diff --git a/src/modules/Popup/Popup.js b/src/modules/Popup/Popup.js @@ -306,6 +306,7 @@ export default class Popup extends Component {\nhandlePortalUnmount = (e) => {\ndebug('handlePortalUnmount()')\n+ window.removeEventListener('scroll', this.hideOnScroll)\nconst { onUnmount } = this.props\nif (onUnmount) onUnmount(e, this.props)\n}\n",
        "date": "18.09.2017 03:00:47",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "sim_msg": "fix(popup): fix close button position",
        "sim_diff": "diff --git a/src/renderer/common/popup.jsx b/src/renderer/common/popup.jsx @@ -6,6 +6,9 @@ const styles = theme => ({\nmodal: {\noverflow: 'auto'\n},\n+ closeButton: {\n+ top: '20px'\n+ },\ntitle: {\n// verticalAlign: 'middle',\n// lineHeight: '30px'\n@@ -15,7 +18,7 @@ const styles = theme => ({\nexport const Popup = withStyles(styles)(({ classes, children, closeAction, text, open = true }) => (\n<Modal open={open} className={classes.modal}>\n<ModalWrap>\n- <ModalCloseButton onClick={closeAction}>\n+ <ModalCloseButton onClick={closeAction} className={classes.closeButton}>\n<ModalCloseIcon />\n</ModalCloseButton>\n<ModalHeader>\n"
    },
    {
        "msg": "fix: git not found error\nFixes by adding git seperately",
        "diff": "diff --git a/Dockerfile.gh b/Dockerfile.gh FROM node:alpine\nLABEL maintainer=\"rashley-iqt <rashley@iqt.org>\"\n-RUN apk update\n-RUN git config --global user.email \"clewis@iqt.org\"\n-RUN git config --global user.name \"Charlie Lewis\"\n+RUN apk update && apk add git\n+RUN git config --global user.email \"rashley@iqt.org\"\n+RUN git config --global user.name \"rashley-iqt\"\nCOPY . /app\nWORKDIR /app\n",
        "date": "25.06.2018 12:07:35",
        "repo": "iqtlabs/crviz",
        "type": "fix",
        "sim_msg": "feat: bump Dockerfile to node v16",
        "sim_diff": "diff --git a/Dockerfile b/Dockerfile # ---- Base Node ----\n-FROM node:14-alpine AS base\n+FROM node:16-alpine AS base\n# set working directory\nWORKDIR /usr/src/app\n@@ -10,7 +10,7 @@ COPY package*.json ./\n# ---- Dependencies ----\nFROM base AS basedependencies\n## Install build toolchain, install node deps and compile native add-ons\n-RUN apk add --no-cache python make g++ git\n+RUN apk add --no-cache python3 make g++ git\nFROM basedependencies as dependencies\n# install node packages\n"
    },
    {
        "msg": "fix: TokenDestructible typo fron->from",
        "diff": "diff --git a/test/TokenDestructible.test.js b/test/TokenDestructible.test.js @@ -7,7 +7,10 @@ contract('TokenDestructible', function (accounts) {\nlet destructible;\nbeforeEach(async function () {\n- destructible = await TokenDestructible.new({ fron: accounts[0], value: web3.toWei('10', 'ether') });\n+ destructible = await TokenDestructible.new({\n+ from: accounts[0],\n+ value: web3.toWei('10', 'ether'),\n+ });\n});\nit('should send balance to owner after destruction', async function () {\n",
        "date": "31.12.2017 19:06:38",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "fix",
        "sim_msg": "fix: token baalnce",
        "sim_diff": "diff --git a/src/main/wallet/wallet-token-service.js b/src/main/wallet/wallet-token-service.js import { WalletToken } from './wallet-token';\nimport { getGlobalContext } from 'common/context';\n+import EthUtils from 'common/utils/eth-utils';\nexport class WalletTokenService {\nconstructor() {\n@@ -15,7 +16,9 @@ export class WalletTokenService {\n// TODO use the test ABI when in dev mode\nasync getTokenBalance(contractAddress, address) {\nconst tokenContract = new this.web3.eth.Contract(this.contractABI, contractAddress);\n- return tokenContract.methods.balanceOf(address).call();\n+ const balanceWei = await tokenContract.methods.balanceOf(address).call();\n+ const decimals = await tokenContract.methods.decimals().call();\n+ return EthUtils.getBalanceDecimal(balanceWei, decimals);\n}\n}\n"
    },
    {
        "msg": "fix(TextArea): fix typings definition",
        "diff": "diff --git a/src/addons/TextArea/TextArea.d.ts b/src/addons/TextArea/TextArea.d.ts @@ -31,7 +31,7 @@ export interface TextAreaOnChangeData extends TextAreaProps {\nvalue?: string;\n}\n-declare class TextArea extends React.Component<TextArea, {}> {\n+declare class TextArea extends React.Component<TextAreaProps, {}> {\nfocus: () => void;\n}\n",
        "date": "28.08.2017 00:54:59",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "sim_msg": "feat(Textarea): add css prop",
        "sim_diff": "diff --git a/components/system/components/Textarea.js b/components/system/components/Textarea.js @@ -45,17 +45,7 @@ const STYLES_TEXTAREA = css`\nexport class Textarea extends React.Component {\nrender() {\n- return (\n- <TextareaAutoSize\n- css={STYLES_TEXTAREA}\n- style={this.props.style}\n- onChange={this.props.onChange}\n- placeholder={this.props.placeholder}\n- name={this.props.name}\n- value={this.props.value}\n- readOnly={this.props.readOnly}\n- maxLength={this.props.maxLength}\n- />\n- );\n+ const { css, ...props } = this.props;\n+ return <TextareaAutoSize css={[STYLES_TEXTAREA, css]} {...props} />;\n}\n}\n"
    },
    {
        "msg": "fix: Catch for when mkdir errors due to existing file",
        "diff": "diff --git a/packages/create-wmr/src/index.js b/packages/create-wmr/src/index.js @@ -25,7 +25,16 @@ sade('create-wmr [dir]', true)\nprocess.exit(1);\n}\ncwd = resolve(cwd, dir || '.');\n+ try {\nawait fs.mkdir(cwd, { recursive: true });\n+ } catch {\n+ process.stderr.write(\n+ `${red(\n+ `There is already a file with the same name as the directory you specified. Please provide a different directory name`\n+ )}\\n`\n+ );\n+ process.exit(1);\n+ }\nprocess.chdir(cwd);\n}\nconst ctx = {\n",
        "date": "25.02.2021 18:19:03",
        "repo": "preactjs/wmr",
        "type": "fix",
        "sim_msg": "refactor: handle uncauth exception",
        "sim_diff": "diff --git a/lib/index.js b/lib/index.js @@ -233,8 +233,14 @@ function handleGlobalException(err){\nfs.writeFileSync(path.join(process.cwd(), config.name + '.log'), '\\r\\n' + stack + '\\r\\n', {flag: 'a'});\n/*eslint no-console: \"off\"*/\nconsole.error(stack);\n+ if (typeof process.handleUncauthtErrorMessage === 'function' &&\n+ process.handleUncauthtErrorMessage(stack, err) === false) {\n+ return;\n+ }\n}\n+ setTimeout(function() {\nprocess.exit(1);\n+ }, 360);\n}\nprocess.on('unhandledRejection', handleGlobalException);\n"
    },
    {
        "msg": "fix(storybook): refactor progress story",
        "diff": "diff --git a/packages/chakra-ui-core/src/Progress/Progress.stories.js b/packages/chakra-ui-core/src/Progress/Progress.stories.js import { storiesOf } from '@storybook/vue'\n-import { CSSReset, Progress as KProgress, Stack } from '..'\n+import { CSSReset, Progress as KProgress, Stack, Box } from '..'\nstoriesOf('UI | Progress', module)\n- .add('Default Progress', () => ({\n- components: { CSSReset, KProgress },\n+ .addDecorator(story => ({\n+ components: { CSSReset, Box, story: story() },\ntemplate: `\n- <div>\n- <CSSReset />\n- <KProgress :value=\"80\" />\n- </div>\n- `\n+ <Box w=\"full\" maxWidth=\"400px\" mx=\"auto\" mt=\"8\" p=\"3\">\n+ <CSSReset></CSSReset>\n+ <story></story>\n+ </Box>`\n+ }))\n+\n+ .add('Default Progress', () => ({\n+ components: { KProgress },\n+ template: `<KProgress :value=\"80\" />`\n}))\n.add('With stripe', () => ({\n- components: { CSSReset, KProgress },\n- template: `\n- <div>\n- <CSSReset />\n- <KProgress hasStripe :value=\"64\" />\n- </div>\n- `\n+ components: { KProgress },\n+ template: `<KProgress hasStripe :value=\"64\" />`\n}))\n.add('With sizes', () => ({\n- components: { CSSReset, KProgress, Stack },\n+ components: { KProgress, Stack },\ntemplate: `\n- <div>\n- <CSSReset />\n<Stack :spacing=\"5\">\n<KProgress rounded=\"sm\" color=\"green\" size=\"sm\" />\n<KProgress color=\"green\" size=\"md\" />\n<KProgress color=\"green\" size=\"lg\" />\n<KProgress color=\"green\" height=\"32px\" />\n- </Stack>\n- </div>\n- `\n+ </Stack>`\n}))\n.add('With color', () => ({\n- components: { CSSReset, KProgress },\n- template: `\n- <div>\n- <CSSReset />\n- <KProgress color=\"pink\" hasStripe />\n- </div>\n- `\n+ components: { KProgress },\n+ template: `<KProgress color=\"pink\" hasStripe />`\n}))\n",
        "date": "15.03.2020 15:57:01",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "sim_msg": "docs(number): remove invalid size control option\nFixes:",
        "sim_diff": "diff --git a/src/components/textbox/textbox-test.stories.mdx b/src/components/textbox/textbox-test.stories.mdx @@ -9,7 +9,7 @@ import { ICONS } from \"../icon/icon-config\";\nexport const commonTextboxArgTypes = (isNewValidation) => ({\nsize: {\n- options: [\"extra-small\", \"small\", \"medium\", \"large\"],\n+ options: [\"small\", \"medium\", \"large\"],\ncontrol: {\ntype: \"select\",\n},\n@@ -162,7 +162,12 @@ export const NewValidationStory = (args) => {\nreturn (\n<div style={{ width: \"296px\" }}>\n<CarbonProvider validationRedesignOptIn>\n- <Textbox m={2} {...getCommonTextboxArgsWithSpecialCaracters(args)} value={state} onChange={setValue} />\n+ <Textbox\n+ m={2}\n+ {...getCommonTextboxArgsWithSpecialCaracters(args)}\n+ value={state}\n+ onChange={setValue}\n+ />\n</CarbonProvider>\n</div>\n);\n@@ -173,7 +178,11 @@ export const NewValidationStory = (args) => {\n### Default\n<Canvas>\n- <Story argTypes={commonTextboxArgTypes()} name=\"default\" args={getCommonTextboxArgs()}>\n+ <Story\n+ argTypes={commonTextboxArgTypes()}\n+ name=\"default\"\n+ args={getCommonTextboxArgs()}\n+ >\n{TextboxStory.bind({})}\n</Story>\n</Canvas>\n@@ -181,7 +190,11 @@ export const NewValidationStory = (args) => {\n### Multiple\n<Canvas>\n- <Story argTypes={commonTextboxArgTypes()} name=\"multiple\" args={getCommonTextboxArgs()}>\n+ <Story\n+ argTypes={commonTextboxArgTypes()}\n+ name=\"multiple\"\n+ args={getCommonTextboxArgs()}\n+ >\n{MultipleTextboxStory.bind({})}\n</Story>\n</Canvas>\n@@ -189,7 +202,11 @@ export const NewValidationStory = (args) => {\n### New Validation\n<Canvas>\n- <Story argTypes={commonTextboxArgTypes(true)} name=\"new validation\" args={getCommonTextboxArgs(true)}>\n+ <Story\n+ argTypes={commonTextboxArgTypes(true)}\n+ name=\"new validation\"\n+ args={getCommonTextboxArgs(true)}\n+ >\n{NewValidationStory.bind({})}\n</Story>\n</Canvas>\n"
    },
    {
        "msg": "fix: :bug: no amp",
        "diff": "diff --git a/src/lib/og-image-url-build.js b/src/lib/og-image-url-build.js @@ -2,7 +2,7 @@ const objectToQueryParams = obj => {\nconst params = Object.entries(obj).map(\n([key, value]) => `${key}=${value}`\n)\n- return '?' + params.join('&amp;')\n+ return '?' + params.join('&')\n}\nexport const ogImageUrl = (author, website, title) => {\n",
        "date": "12.07.2021 06:18:01",
        "repo": "spences10/cheat-sheets",
        "type": "fix",
        "sim_msg": "fix: don't use proxy for gateway.ipfs.io URLs",
        "sim_diff": "diff --git a/src/client/helpers/image.js b/src/client/helpers/image.js @@ -8,7 +8,7 @@ export const MAXIMUM_UPLOAD_SIZE = 15728640;\nexport const MAXIMUM_UPLOAD_SIZE_HUMAN = filesize(MAXIMUM_UPLOAD_SIZE);\nexport const getProxyImageURL = (url, type) => {\n- if (url.indexOf('https://ipfs.busy.org') === 0) {\n+ if (url.indexOf('https://ipfs.busy.org') === 0 || url.indexOf('https://gateway.ipfs.io') === 0) {\nreturn url;\n} else if (type === 'preview') {\nreturn `${IMG_PROXY_PREVIEW}${url}`;\n"
    },
    {
        "msg": "fix: Correcting tsconfig `files` for `include` in template",
        "diff": "diff --git a/packages/create-wmr/tpl/tsconfig.json b/packages/create-wmr/tpl/tsconfig.json \"allowSyntheticDefaultImports\": true,\n\"downlevelIteration\": true\n},\n- \"files\": [\"./node_modules/wmr/index.d.ts\"],\n+ \"include\": [\"node_modules/wmr/index.d.ts\"],\n\"typeAcquisition\": {\n\"enable\": true\n}\n",
        "date": "27.03.2021 11:54:42",
        "repo": "preactjs/wmr",
        "type": "fix",
        "sim_msg": "chore: updated tsconfig.json",
        "sim_diff": "diff --git a/tsconfig.json b/tsconfig.json \"allowSyntheticDefaultImports\": true,\n\"forceConsistentCasingInFileNames\": true,\n\"resolveJsonModule\": true,\n- \"skipLibCheck\": true\n+ \"skipLibCheck\": true,\n+ \"strictNullChecks\": false\n},\n\"include\": [\"packages\", \"typings\"],\n\"exclude\": [\"node_modules\", \"**/__test?__\", \"**/dist\"]\n"
    },
    {
        "msg": "fix: Quote zero-length strings in arguments\nIf a zero-length string is passed, it does not get properly quoted, and then it is not properly passed to the child process",
        "diff": "diff --git a/lib/utils/index.js b/lib/utils/index.js @@ -69,7 +69,7 @@ var utils = (module.exports = {\nargs.map(function (arg) {\n// if an argument contains a space, we want to show it with quotes\n// around it to indicate that it is a single argument\n- if (arg.indexOf(' ') === -1) {\n+ if (arg.length > 0 && arg.indexOf(' ') === -1) {\nreturn arg;\n}\n// this should correctly escape nested quotes\n",
        "date": "01.05.2019 00:04:25",
        "repo": "remy/nodemon",
        "type": "fix",
        "sim_msg": "fix(index): make sure to export the named exports\nFixes\nCaused by",
        "sim_diff": "diff --git a/index.mjs b/index.mjs -export { default, domToReact, htmlToDOM, attributesToProps } from './index.js';\n+import HTMLReactParser from './index.js';\n+\n+export default HTMLReactParser;\n+export var { domToReact, htmlToDOM, attributesToProps } = HTMLReactParser;\n"
    },
    {
        "msg": "fix: don't test for jest version",
        "diff": "diff --git a/packages/razzle/config/createJestConfig.js b/packages/razzle/config/createJestConfig.js @@ -4,7 +4,6 @@ const fs = require('fs');\nconst chalk = require('chalk');\nconst jest = require('jest');\n-const jestMajorVersion = parseInt(jest.default.getVersion().split('.')[0]);\n// first search for setupTests.ts file\n// if .ts file not exists then looks for setupTests.js\nfunction getSetupTestsFilePath(paths) {\n@@ -33,7 +32,7 @@ module.exports = (\n// TODO: I don't know if it's safe or not to just use / as path separator\n// in Jest configs. We need help from somebody with Windows to determine this.\n- const config = Object.assign(\n+ const config =\n{\ncollectCoverageFrom: ['src/**/*.{js,jsx,ts,tsx}', '!src/**/*.d.ts'],\n@@ -61,15 +60,9 @@ module.exports = (\n'^react-native$': 'react-native-web',\n},\nmoduleFileExtensions: ['js', 'jsx', 'json', 'ts', 'tsx'],\n- },\n- jestMajorVersion >= 24\n- ? {\n- setupFilesAfterEnv: setupTestsFile ? [setupTestsFile] : [],\n- }\n- : {\n- setupTestFrameworkScriptFile: setupTestsFile,\n+ setupFilesAfterEnv: setupTestsFile ? [setupTestsFile] : []\n}\n- );\n+\nif (rootDir) {\nconfig.rootDir = rootDir;\n}\n@@ -95,11 +88,8 @@ module.exports = (\n'transformIgnorePatterns',\n'reporters',\n'watchPlugins',\n- ].concat(\n- jestMajorVersion >= 24\n- ? ['setupFilesAfterEnv']\n- : ['setupTestFrameworkScriptFile']\n- );\n+ 'setupFilesAfterEnv'\n+ ];\nif (overrides) {\nsupportedKeys.forEach(key => {\nif (overrides.hasOwnProperty(key)) {\n",
        "date": "21.09.2020 15:49:30",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "chore: Add banner with version and copyright to all built files",
        "sim_diff": "diff --git a/rollup.config.js b/rollup.config.js @@ -26,6 +26,7 @@ export default utils.pkgs.reduce((all, path) => {\nconst file = utils.getPackageName(path)\nconst name = file.replace(/-./g, (m) => m.slice(-1).toUpperCase())\nconst jsx = name.replace(/./, (m) => m.toUpperCase())\n+ const bannerText = `/*! @nrk/${file} v${version} - Copyright (c) 2017-${new Date().getFullYear()} NRK */`\nreturn all.concat({\ninput: `${path}/${file}.test.js`, // JS CJS (used for testing)\n@@ -33,6 +34,7 @@ export default utils.pkgs.reduce((all, path) => {\nformat: 'cjs',\nfile: `${path}/${file}.test.cjs.js`,\nexports: 'none', // Tests have no exports; set to 'auto' if this changes\n+ banner: bannerText,\nglobals\n},\ntreeshake,\n@@ -48,6 +50,7 @@ export default utils.pkgs.reduce((all, path) => {\noutput: {\nformat: 'cjs',\nfile: `${path}/${file}.cjs.js`,\n+ banner: bannerText,\nexports: 'default',\nglobals\n},\n@@ -59,7 +62,7 @@ export default utils.pkgs.reduce((all, path) => {\noutput: {\nformat: 'umd',\nfile: `${path}/${file}.min.js`,\n- banner: `/*! @nrk/${file} v${version} - Copyright (c) 2017-${new Date().getFullYear()} NRK */`,\n+ banner: bannerText,\nfooter: `window.customElements.define('${file}', ${name})`,\nsourcemap: true,\nglobals,\n@@ -73,6 +76,7 @@ export default utils.pkgs.reduce((all, path) => {\noutput: {\nformat: 'cjs',\nfile: `${path}/jsx.js`,\n+ banner: bannerText,\nexports: 'default',\nglobals\n},\n@@ -84,6 +88,7 @@ export default utils.pkgs.reduce((all, path) => {\noutput: {\nformat: 'umd',\nfile: `${path}/${file}.jsx.js`,\n+ banner: bannerText,\nname: jsx,\nsourcemap: true,\nglobals\n"
    },
    {
        "msg": "fix: Correcting route types",
        "diff": "diff --git a/packages/preact-iso/router.d.ts b/packages/preact-iso/router.d.ts @@ -12,5 +12,7 @@ interface RoutableProps {\n}\ndeclare module 'preact' {\n- export interface Attributes extends RoutableProps {}\n+ namespace JSX {\n+ interface IntrinsicAttributes extends RoutableProps {}\n+ }\n}\n",
        "date": "11.12.2020 19:27:24",
        "repo": "preactjs/wmr",
        "type": "fix",
        "sim_msg": "feat(manager-config): add container definition in Application",
        "sim_diff": "diff --git a/packages/manager/modules/config/src/application/index.ts b/packages/manager/modules/config/src/application/index.ts @@ -16,7 +16,15 @@ export type ApplicationId =\n| 'user'\n| 'web';\n+export interface Container {\n+ enabled: boolean;\n+ isDefault: boolean;\n+ path: string;\n+ containerURL: string;\n+}\n+\nexport interface Application {\nuniverse: string;\nurl: string;\n+ container?: Container; // @TODO: remove nullable when 2API applications will be prodded\n}\n"
    },
    {
        "msg": "fix(razzle): update copy plugin options to patterns",
        "diff": "diff --git a/packages/razzle/config/createConfigAsync.js b/packages/razzle/config/createConfigAsync.js @@ -896,13 +896,15 @@ module.exports = (\n}),\nwebpackMajor === 5 ? null : new webpack.HashedModuleIdsPlugin(),\nnew webpack.optimize.AggressiveMergingPlugin(),\n- new CopyPlugin([\n+ new CopyPlugin({\n+ patterns: [\n{\nfrom: paths.appPublic + '/**/*',\nto: paths.appBuild,\ncontext: paths.appPath,\n},\n- ]),\n+ ]\n+ }),\n].filter(x => x);\nconfig.optimization = {\n",
        "date": "02.10.2020 18:35:33",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "feat(Scripts): add build timestamp",
        "sim_diff": "diff --git a/packages/scripts/webapp/preset/config/webpack.config.js b/packages/scripts/webapp/preset/config/webpack.config.js @@ -122,6 +122,7 @@ module.exports = ({ getUserConfig, mode }) => {\n],\n},\nplugins: [\n+ new webpack.DefinePlugin({ BUILD_TIMESTAMP: Date.now() }),\nnew MiniCssExtractPlugin({\nfilename: '[name]-[hash].css',\n}),\n@@ -135,9 +136,7 @@ module.exports = ({ getUserConfig, mode }) => {\nloadCSSAsync: true,\nappLoaderIcon: getUserConfig(['html', 'appLoaderIcon'], DEFAULT_APP_LOADER_ICON),\n}),\n- new CopyWebpackPlugin([\n- { from: 'src/assets' },\n- ]),\n+ new CopyWebpackPlugin([{ from: 'src/assets' }]),\nnew webpack.BannerPlugin({\nbanner: LICENSE_BANNER,\n}),\n"
    },
    {
        "msg": "fix(Input): add multiple to propNames",
        "diff": "diff --git a/src/elements/Input/Input.js b/src/elements/Input/Input.js @@ -22,7 +22,7 @@ export const htmlInputPropNames = [\n'selected', 'defaultValue', 'defaultChecked',\n// LIMITED HTML PROPS\n- 'autoCapitalize', 'autoComplete', 'autoFocus', 'checked', 'form', 'max', 'maxLength', 'min',\n+ 'autoCapitalize', 'autoComplete', 'autoFocus', 'checked', 'form', 'max', 'maxLength', 'min', 'multiple',\n'name', 'pattern', 'placeholder', 'readOnly', 'required', 'step', 'type', 'value',\n// Heads Up!\n",
        "date": "07.03.2017 18:28:13",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "sim_msg": "docs: possible values for the autocomplete prop were added on Input/index.js/Input.propTypes",
        "sim_diff": "diff --git a/src/components/Input/index.js b/src/components/Input/index.js @@ -130,7 +130,13 @@ Input.propTypes = {\n/** The id of the outer element. */\nid: PropTypes.string,\n/** A string indicating the type of autocomplete functionality.\n- * If any, to allow on the input. */\n+ * If any, to allow on the input.\n+ *\n+ * Values accepted by the autocomplete prop: name, organization-title, username, new-password,\n+ * street-address, country, cc-name, transaction-currency, language, bday, sex, url, photo,\n+ * tel, email and impp\n+ *\n+ * For a detailed list, go to: https://www.w3.org/TR/WCAG21/#input-purposes */\nautoComplete: PropTypes.string,\n};\n"
    },
    {
        "msg": "fix(example): load all client assets",
        "diff": "diff --git a/examples/with-vendor-bundle/src/server.js b/examples/with-vendor-bundle/src/server.js @@ -5,13 +5,26 @@ import { renderToString } from \"react-dom/server\";\nconst assets = require(process.env.RAZZLE_ASSETS_MANIFEST);\n-const scripts = Object.keys(assets).reduce((scripts, key) => {\n- return (\n- scripts + `<script src=\"${assets[key].js}\" defer crossorigin></script>`\n- );\n-}, \"\");\n+const scripts = Object.keys(assets)\n+ .map((key) => {\n+ const script = assets[key].js;\n+\n+ if (typeof script === 'undefined' || script === null) {\n+ return null;\n+ }\n+\n+ if (Array.isArray(script)) {\n+ return script\n+ .map((item) => {\n+ return `<script src=\"${item}\"></script>`;\n+ })\n+ .join('');\n+ }\n+\n+ return `<script src=\"${script}\"></script>`;\n+ })\n+ .filter((a) => typeof a !== 'undefined' || a !== null);\n-console.log(scripts);\nconst server = express();\n@@ -28,7 +41,7 @@ server\n<meta charSet='utf-8' />\n<title>Welcome to Razzle</title>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n- ${scripts}\n+ ${scripts.join('\\n')}\n</head>\n<body>\n<div id=\"root\">${markup}</div>\n",
        "date": "28.08.2020 20:01:52",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "style(renderer/functions): stop declaring once only used `fallback404Url` const",
        "sim_diff": "diff --git a/@ecomplus/storefront-renderer/functions/index.js b/@ecomplus/storefront-renderer/functions/index.js @@ -51,11 +51,10 @@ exports.ssr = (req, res, getCacheControl) => {\nredirect(url.slice(0, -1))\n} else if (url !== '/404' && (/\\/[^/.]+$/.test(url) || /\\.x?html$/.test(url))) {\nconst encodedUrl = encodeURIComponent(url)\n- const fallback404Url = `/404?url=${encodedUrl}`\nres.set('Set-Cookie', `referrerUrl=${encodedUrl}; Max-Age=30`)\nsetStatusAndCache(404, `public, max-age=${(isLongCache ? 120 : 30)}`)\n.send('<html><head>' +\n- `<meta http-equiv=\"refresh\" content=\"0; url=${fallback404Url}\"/>` +\n+ `<meta http-equiv=\"refresh\" content=\"0; url=/404?url=${encodedUrl}\"/>` +\n'</head><body></body></html>')\n} else {\nsetStatusAndCache(404, isLongCache\n"
    },
    {
        "msg": "fix: WMR CLI commands",
        "diff": "diff --git a/packages/wmr/src/cli.js b/packages/wmr/src/cli.js @@ -15,8 +15,6 @@ function bool(v) {\n// global options\nprog\n- .option('--public', 'Your web app root directory (default: ./public)')\n- .option('--out', 'Where to store generated files (default: ./dist)')\n.option('--cwd', 'The working directory - equivalent to \"(cd FOO && wmr)\"')\n// Setting env variables isn't common knowledege for many windows users. Much\n// easier to pass a flag to our binary instead.\n@@ -24,6 +22,8 @@ prog\nprog\n.command('build', 'make a production build')\n+ .option('--public', 'Your web app root directory (default: ./public)')\n+ .option('--out', 'Where to store generated files (default: ./dist)')\n.option('--prerender', 'Pre-render the application to HTML')\n.option('--sourcemap', 'Enable Source Maps')\n.option('--visualize', 'Launch interactive bundle visualizer')\n@@ -46,6 +46,7 @@ prog\nprog\n.command('start', 'Start a development server', { default: true })\n+ .option('--public', 'Your web app root directory (default: ./public)')\n.option('--port, -p', 'HTTP port to listen on (default: $PORT or 8080)')\n.option('--host', 'HTTP host to listen on (default: localhost)')\n.option('--http2', 'Use HTTP/2 (default: false)')\n",
        "date": "09.05.2021 16:08:33",
        "repo": "preactjs/wmr",
        "type": "fix",
        "sim_msg": "build(tooling): update build command after Webpack version bump",
        "sim_diff": "diff --git a/tooling/lib/build.js b/tooling/lib/build.js @@ -54,7 +54,7 @@ exports.buildSamples = async function buildSamples() {\n// reminder: samples:build calls this script, not webpack\n// hence we must call webpack here\n- const [cmd, ...args] = `webpack --colors ${(process.env.NODE_ENV === 'development') ? '-d' : '-p'}`.split(' ');\n+ const [cmd, ...args] = `webpack --color ${(process.env.NODE_ENV === 'development') ? '--mode development' : '--mode production'}`.split(' ');\nconst webpack = spawn(cmd, args, {\nstdio: 'pipe',\n// Spawn fix for Windows\n@@ -107,7 +107,7 @@ exports.buildUMDScript = async function buildUMDScript() {\n// reminder: samples:build calls this script, not webpack\n// hence we must call webpack here\n- const [cmd, ...args] = `webpack --colors ${(process.env.NODE_ENV === 'development') ? '-d' : '-p'} --umd`.split(' ');\n+ const [cmd, ...args] = `webpack --color ${(process.env.NODE_ENV === 'development') ? '--mode development' : '--mode production'} --umd`.split(' ');\nconst webpack = spawn(cmd, args, {\nstdio: 'pipe',\n// Spawn fix for Windows\n"
    },
    {
        "msg": "fix(search): Fixes - linting issue",
        "diff": "diff --git a/src/epics/epic.test.js b/src/epics/epic.test.js @@ -4,8 +4,6 @@ import configureStore from \"../configure-store\";\nimport { createEpicMiddleware } from 'redux-observable';\nimport { of} from 'rxjs';\n-import { QueryParseError } from 'lunr';\n-\nimport rootEpic from './root-epic'\nimport { setDataset } from '../domain/dataset'\nimport { loadDataset } from \"./load-dataset-epic\"\n",
        "date": "09.07.2018 12:30:57",
        "repo": "iqtlabs/crviz",
        "type": "fix",
        "sim_msg": "refactor: add nodePub selector",
        "sim_diff": "diff --git a/renderer/reducers/info.js b/renderer/reducers/info.js @@ -159,6 +159,13 @@ infoSelectors.networksSelector = state => state.info.networks\ninfoSelectors.infoLoading = state => state.info.infoLoading\ninfoSelectors.infoLoaded = state => state.info.infoLoaded\ninfoSelectors.hasSynced = state => state.info.hasSynced\n+infoSelectors.nodePub = state => {\n+ const parseFromDataUri = () => {\n+ const uri = get(state.info, 'data.uris[0]')\n+ return uri && uri.split('@')[0]\n+ }\n+ return get(state.info, 'data.identity_pubkey') || parseFromDataUri()\n+}\ninfoSelectors.networkInfo = createSelector(\ninfoSelectors.chainSelector,\n"
    },
    {
        "msg": "fix(scss-plugin): use onlyLocals option",
        "diff": "diff --git a/packages/razzle-plugin-scss/index.js b/packages/razzle-plugin-scss/index.js @@ -126,8 +126,9 @@ module.exports = (\nuse: isServer\n? [\n{\n- loader: require.resolve('css-loader/locals'),\n+ loader: require.resolve('css-loader'),\noptions: Object.assign({}, options.css[constantEnv], {\n+ onlyLocals: true,\nmodules: true,\nlocalIdentName: '[name]__[local]___[hash:base64:5]',\n}),\n",
        "date": "23.04.2020 19:53:34",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "chore: Add scss data loader",
        "sim_diff": "diff --git a/.storybook/webpack.config.js b/.storybook/webpack.config.js @@ -33,7 +33,17 @@ module.exports = ({ config }) => {\nlocalIdentName: '[name]__[local]___[hash:base64:5]',\n},\n},\n- require.resolve('sass-loader'),\n+ {\n+ loader: require.resolve('sass-loader'),\n+\n+ options: {\n+ data: `@import '~scss/type.module.scss';\n+ @import '~scss/helpers.module.scss';\n+ @import '~scss/colors.module.scss';\n+ @import '~scss/links.module.scss';\n+ @import '~scss/breakpoints.module.scss';`,\n+ },\n+ },\n],\n})\n"
    },
    {
        "msg": "fix: heading level",
        "diff": "diff --git a/sheets/javascript.md b/sheets/javascript.md @@ -465,7 +465,7 @@ document, but could change `html` with `p`, `span` whatever.\ndocument.getElementsByTagName('html')[0].style['font-size'] = '10px'\n```\n-### Checking for `window`\n+## Checking for `window`\n[Optional chaining](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Optional_chaining) can not be used on `window`.\nIt will throw an error when used on any undeclared root object, so no escaping the `typeof window == 'undefined'` check with a clever `?.`.\n",
        "date": "23.08.2021 23:58:37",
        "repo": "spences10/cheat-sheets",
        "type": "fix",
        "sim_msg": "docs: fix typo in spec [skip ci]",
        "sim_diff": "diff --git a/ast/spec.md b/ast/spec.md @@ -863,7 +863,7 @@ interface MemberExpression <: Expression, Pattern {\n}\n```\n-A member expression. If `computed` is `true`, the node corresponds to a computed (`a[b]`) member expression and `property` is an `Expression`. If `computed` is `false`, the node corresponds to a static (`a.b`) member expression and `property` is an `Identifier`. The `optional` flags indecates that the member expression can be called even if the object is null or undefined. If this is the object value (null/undefined) should be returned.\n+A member expression. If `computed` is `true`, the node corresponds to a computed (`a[b]`) member expression and `property` is an `Expression`. If `computed` is `false`, the node corresponds to a static (`a.b`) member expression and `property` is an `Identifier`. The `optional` flags indicates that the member expression can be called even if the object is null or undefined. If this is the object value (null/undefined) should be returned.\n### BindExpression\n"
    },
    {
        "msg": "fix(razzle): use paths.appAssetsManifest in ManifestPlugin",
        "diff": "diff --git a/packages/razzle/config/createConfigAsync.js b/packages/razzle/config/createConfigAsync.js @@ -166,6 +166,8 @@ module.exports = (\nwebpackOptions.definePluginOptions = dotenv.stringified;\n+ webpackOptions.appAssetsManifestPath = paths.appAssetsManifest;\n+\nif (IS_NODE) {\nwebpackOptions.jsOutputFilename = `[name].js`;\n@@ -735,7 +737,7 @@ module.exports = (\n// Output all files in a manifest file called assets-manifest.json\n// in the build directory.\nnew ManifestPlugin({\n- fileName: path.join(paths.appBuild, 'assets.json'),\n+ fileName: webpackOptions.appAssetsManifestPath,\nwriteToFileEmit: true,\ngenerate: (seed, files) => {\nconst entrypoints = new Set();\n",
        "date": "30.03.2021 20:02:14",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "chore: update copy-webpack-plugin config",
        "sim_diff": "diff --git a/webpack.config.js b/webpack.config.js @@ -160,13 +160,14 @@ module.exports = {\nnew MiniCssExtractPlugin({\nfilename: '[name].css'\n}),\n- new CopyPlugin([\n+ new CopyPlugin({\n+ patterns: [\n{\nfrom: 'src/assets',\nto: '',\n- copyUnmodified: true,\n},\n- ]),\n+ ],\n+ }),\nnew VueLoaderPlugin(),\nnew webpack.DefinePlugin({\nVERSION: JSON.stringify(require('./src/assets/manifest.json').version)\n"
    },
    {
        "msg": "fix(Statistic): fix wrong inverted type",
        "diff": "diff --git a/src/views/Statistic/Statistic.d.ts b/src/views/Statistic/Statistic.d.ts @@ -33,7 +33,7 @@ export interface StatisticProps {\nhorizontal?: boolean;\n/** A statistic can be formatted to fit on a dark background. */\n- inverted?: string;\n+ inverted?: boolean;\n/** Label content of the Statistic. */\nlabel?: SemanticShorthandContent;\n",
        "date": "31.07.2017 23:40:58",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "sim_msg": "chore: Make calculated font size 100",
        "sim_diff": "diff --git a/src/components/common/statistic.module.scss b/src/components/common/statistic.module.scss color: $color-slate-600;\n@include margin(8, bottom);\n.label {\n- font-size: 12px; // ignore-style-rule\n+ @include type-size(100);\n}\n.calculated {\n@include padding(4, top);\n"
    },
    {
        "msg": "fix(typo): update README file",
        "diff": "diff --git a/packages/razzle/README.md b/packages/razzle/README.md @@ -275,7 +275,7 @@ import 'react-app-polyfill/ie11'; // For IE 11 support\n* `process.env.NODE_ENV`: `'development'` or `'production'`\n* `process.env.BUILD_TYPE`: `'iso'` for isomorphic/universal applications or `'spa'` for single page applications. The default is `'iso'`. This is set by CLI arguments.\n* `process.env.BUILD_TARGET`: either `'client'` or `'server'`\n-* `process.env.PUBLIC_PATH`: Only in used in `razzle build`. You can alter the `webpack.config.output.publicPath` of the client assets (bundle, css, and images). This is useful if you plan to serve your assets from a CDN. Make sure to _include_ a trailing slash (e.g. `PUBLIC_PATH=https://cdn.example.com/`). If you are using React and altering the public path, make sure to also [include the `crossorigin` attribute](https://reactjs.org/docs/cdn-links.html#why-the-crossorigin-attribute) on your `<script>` tag in `src/server.js`.\n+* `process.env.PUBLIC_PATH`: Only used in `razzle build`. You can alter the `webpack.config.output.publicPath` of the client assets (bundle, css, and images). This is useful if you plan to serve your assets from a CDN. Make sure to _include_ a trailing slash (e.g. `PUBLIC_PATH=https://cdn.example.com/`). If you are using React and altering the public path, make sure to also [include the `crossorigin` attribute](https://reactjs.org/docs/cdn-links.html#why-the-crossorigin-attribute) on your `<script>` tag in `src/server.js`.\n* `process.env.CLIENT_PUBLIC_PATH`: The `NODE_ENV=development` build's `BUILD_TARGET=client` has a different `PUBLIC_PATH` than `BUILD_TARGET=server`. Default is `http://${process.env.HOST}:${process.env.PORT + 1}/`\nYou can create your own custom environment variables that will be inlined during the build. They must start\n",
        "date": "08.04.2020 06:32:29",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "docs(preset-defaults): change browsers to be an array",
        "sim_diff": "diff --git a/packages/preset-defaults/README.md b/packages/preset-defaults/README.md @@ -40,7 +40,7 @@ This preset does not have own configuration, but here is a list of the most impo\n| `basePath` | `String` | `''` | `/my-app` | _no_ | The URL base path from which your application will be served |\n| `assetPath` | `String` | `<basePath>` | `<basePath>/assets` | _no_ | The URL base path from which the assets will be served from |\n| `buildDir` | `String` | `<rootDir>/dist` | `<rootDir>/out` | _no_ | The directory in which the build outputs will be written to |\n-| `browsers` | `String` | `defaults` | `last 1 Chrome versions` | _no_ | A browserslist query to specify targets for which to transpile/polyfill. |\n+| `browsers` | `Array<String>` | `['defaults']` | [`last 1 Chrome versions`] | _no_ | An array of browserslist queries to specify targets for which to transpile/polyfill. |\n| `node` | `String` | `current` | `8.10` | _no_ | A Node.js version identifier or `current` to specify for which target to transpile/polyfill. |\nHead over to [`@untool/express`](https://github.com/untool/untool/tree/master/packages/express#settings) and [`@untool/webpack`](https://github.com/untool/untool/tree/master/packages/webpack#settings) to read more about these configuration options.\n"
    },
    {
        "msg": "fix: Adding missing types",
        "diff": "diff --git a/packages/preact-iso/index.d.ts b/packages/preact-iso/index.d.ts import { VNode } from 'preact';\nimport { PrerenderOptions } from './prerender';\n+export { Router, LocationProvider, useLoc, useLocation } from './router';\n+export { default as lazy, ErrorBoundary } from './lazy';\n+export { default as hydrate } from './hydrate';\n+\nexport default function prerender(vnode: VNode, options?: PrerenderOptions): Promise<{ html: string, links: Set<string>}>;\n",
        "date": "16.02.2021 10:26:39",
        "repo": "preactjs/wmr",
        "type": "fix",
        "sim_msg": "feat(vue3): update utils/vm",
        "sim_diff": "diff --git a/ui/src/utils/vm.js b/ui/src/utils/vm.js -export function getVmOfNode (el) {\n- for (let node = el; node !== null; node = node.parentNode) {\n- if (node.__vueParentComponent !== void 0 && node.__vueParentComponent.proxy !== void 0) {\n- return node.__vueParentComponent.proxy\n- }\n- }\n+export function getAppVm (VueApp) {\n+ return VueApp._container._vnode.component.ctx\n}\nexport function getParentVm (vm) {\n@@ -21,7 +17,3 @@ export function getParentVm (vm) {\nvm = vm.parent\n}\n}\n-\n-export function getAppVm (VueApp) {\n- return VueApp._container._vnode.component.ctx\n-}\n"
    },
    {
        "msg": "fix: Ensures TS config files are handled first",
        "diff": "diff --git a/packages/wmr/src/lib/normalize-options.js b/packages/wmr/src/lib/normalize-options.js @@ -78,7 +78,7 @@ export async function normalizeOptions(options, mode, configWatchFiles = []) {\n// ignore error, reading aliases from package.json is an optional feature\n}\n- const EXTENSIONS = ['.js', '.ts', '.mjs'];\n+ const EXTENSIONS = ['.ts', '.js', '.mjs'];\nlet custom;\nlet initialError;\n",
        "date": "14.05.2021 01:41:50",
        "repo": "preactjs/wmr",
        "type": "fix",
        "sim_msg": "refactor: return is better when inject has no value",
        "sim_diff": "diff --git a/src/core/util/options.js b/src/core/util/options.js @@ -334,6 +334,7 @@ function validatePropObject (\n*/\nfunction normalizeInject (options: Object, vm: ?Component) {\nconst inject = options.inject\n+ if (!inject) return\nconst normalized = options.inject = {}\nif (Array.isArray(inject)) {\nfor (let i = 0; i < inject.length; i++) {\n@@ -346,7 +347,7 @@ function normalizeInject (options: Object, vm: ?Component) {\n? extend({ from: key }, val)\n: { from: val }\n}\n- } else if (process.env.NODE_ENV !== 'production' && inject) {\n+ } else if (process.env.NODE_ENV !== 'production') {\nwarn(\n`Invalid value for option \"inject\": expected an Array or an Object, ` +\n`but got ${toRawType(inject)}.`,\n"
    },
    {
        "msg": "fix(TextArea): fix autoHeight calculate wrong value on long text\nCalculate content height without taking a vertical scroll bar into\naccount.",
        "diff": "diff --git a/src/addons/TextArea/TextArea.js b/src/addons/TextArea/TextArea.js @@ -115,7 +115,9 @@ class TextArea extends Component {\n// Measure the scrollHeight and update the height to match.\nthis.ref.style.height = 'auto'\n+ this.ref.style.overflowY = 'hidden'\nthis.ref.style.height = `${Math.max(parseFloat(minHeight), Math.ceil(this.ref.scrollHeight + borderHeight))}px`\n+ this.ref.style.overflowY = ''\n}\nrender() {\n",
        "date": "18.10.2017 11:24:49",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "sim_msg": "refactor: add grow prop in textarea and resizer",
        "sim_diff": "diff --git a/src/components/Textarea/index.js b/src/components/Textarea/index.js @@ -20,7 +20,11 @@ export default class Textarea extends Component {\n}\ncomponentDidMount() {\n- autosize(this.textareaRef.current);\n+ const { grow } = this.props;\n+ if (grow) {\n+ return autosize(this.textareaRef.current);\n+ }\n+ return null;\n}\ngetContainerClassNames() {\n@@ -150,6 +154,8 @@ Textarea.propTypes = {\ncols: PropTypes.number,\n/** The number of visible text lines for the control. The value by default is 3. */\nrows: PropTypes.number,\n+ /** This make to textarea grow. This value defaults to false. */\n+ grow: PropTypes.bool,\n};\nTextarea.defaultProps = {\n@@ -167,6 +173,7 @@ Textarea.defaultProps = {\nreadOnly: false,\ncols: undefined,\nrows: 3,\n+ grow: false,\nonChange: () => {},\nonFocus: () => {},\nonBlur: () => {},\n"
    },
    {
        "msg": "fix: html-legend: use legend keydown logic",
        "diff": "diff --git a/src/charts/html-legend.js b/src/charts/html-legend.js import {select} from 'd3-selection';\n-//import {event} from 'd3-selection';\nimport {pluck, utils} from '../core/utils';\nimport {config} from '../core/config';\n@@ -209,7 +208,7 @@ export class HtmlLegend {\n.attr('tabindex', 0);\ntabElements\n- .on('keydown', d => {\n+ .on('keydown', config._d3compat.eventHandler((d, event) => {\n// trigger only if d is an object\nif (event.keyCode === 13 && typeof d === 'object') {\nd.chart.legendToggle(d)\n@@ -219,7 +218,7 @@ export class HtmlLegend {\nd.chart.legendToggle(d)\nevent.preventDefault();\n}\n- })\n+ }))\n.on('focus', d => {\nthis._parent.legendHighlight(d);\n})\n",
        "date": "06.04.2021 17:27:49",
        "repo": "dc-js/dc.js",
        "type": "fix",
        "sim_msg": "chore: Add fathom goal for disclosure",
        "sim_diff": "diff --git a/src/components/pages/race/charts/index.js b/src/components/pages/race/charts/index.js @@ -109,7 +109,13 @@ export default () => {\n<LandingPageContainer>\n<Disclosure\nopen={isCasesOpen}\n- onChange={() => setIsCasesOpen(!isCasesOpen)}\n+ onChange={() => {\n+ setIsCasesOpen(!isCasesOpen)\n+ if (typeof window.fathom === 'undefined') {\n+ return\n+ }\n+ window.fathom.trackGoal('O8WBUGRP', 0)\n+ }}\n>\n<Feature\nelement={\n@@ -159,7 +165,13 @@ export default () => {\n</Disclosure>\n<Disclosure\nopen={isDeathsOpen}\n- onChange={() => setIsDeathsOpen(!isDeathsOpen)}\n+ onChange={() => {\n+ setIsDeathsOpen(!isDeathsOpen)\n+ if (typeof window.fathom === 'undefined') {\n+ return\n+ }\n+ window.fathom.trackGoal('O8WBUGRP', 0)\n+ }}\n>\n<Feature\nelement={\n"
    },
    {
        "msg": "fix(prerender): drop `publicPath` prefix during prerender",
        "diff": "diff --git a/src/lib/prerender.js b/src/lib/prerender.js @@ -4,15 +4,16 @@ import { Worker } from 'worker_threads';\n* @param {object} options\n* @property {string} [cwd = '.']\n* @property {string} [out = '.cache']\n+ * @property {string} publicPath\n*/\n-export function prerender({ cwd = '.', out = '.cache' }) {\n+export function prerender({ cwd = '.', out = '.cache', publicPath }) {\nconst w = new Worker(\n`(${workerCode})(require('worker_threads').workerData)\n.then(r => require('worker_threads').parentPort.postMessage([1,r]))\n.catch(err => require('worker_threads').parentPort.postMessage([0,err && err.stack || err+'']))`,\n{\neval: true,\n- workerData: { cwd, out },\n+ workerData: { cwd, out, publicPath },\n// execArgv: ['--experimental-modules'],\nstderr: true\n}\n@@ -28,7 +29,7 @@ export function prerender({ cwd = '.', out = '.cache' }) {\n});\n}\n-async function workerCode({ cwd, out }) {\n+async function workerCode({ cwd, out, publicPath }) {\n/*global globalThis*/\nconst path = require('path');\n@@ -67,6 +68,7 @@ async function workerCode({ cwd, out }) {\nthrow Error(`Unable to detect <script src=\"entry.js\"> in your index.html.`);\n}\n// script = new URL(`../dist/${script.replace(/^(\\.?\\/)?/g, '')}`, selfUrl).href;\n+ script = script.replace(publicPath, '');\nscript = path.resolve(cwd, out, script.replace(/^(\\.?\\/)?/g, ''));\n// Prevent Rollup from transforming `import()` here.\n",
        "date": "03.12.2020 07:28:55",
        "repo": "preactjs/wmr",
        "type": "fix",
        "sim_msg": "refactor: disable caching if you need to modify the body",
        "sim_diff": "diff --git a/lib/inspectors/res.js b/lib/inspectors/res.js @@ -28,6 +28,18 @@ var MAX_RES_SIZE = 512 * 1024;\nvar JSON_RE = /{[\\w\\W]*}|\\[[\\w\\W]*\\]/;\nvar LIKE_JSON_RE = /^\\s*[\\{\\[]/;\nvar X_RE = /^x/;\n+var BODY_PROTOCOLS = ['attachment', 'resReplace', 'resBody', 'resPrepend', 'resAppend',\n+ 'htmlBody', 'htmlPrepend', 'htmlAppend', 'jsBody', 'jsPrepend', 'jsAppend',\n+ 'cssBody', 'cssPrepend', 'cssAppend', 'resWrite', 'resWriteRaw', 'resMerge'];\n+var BODY_PROTOCOLS_LEN = BODY_PROTOCOLS.length;\n+\n+function requireNoCache(resRules) {\n+ for (var i = 0; i < BODY_PROTOCOLS_LEN; i++) {\n+ if (resRules[BODY_PROTOCOLS[i]]) {\n+ return true;\n+ }\n+ }\n+}\nfunction showDnsError(res, err) {\nres.response(util.wrapGatewayError('DNS Lookup Failed\\r\\n' + util.getErrorStack(err)));\n@@ -834,10 +846,7 @@ module.exports = function(req, res, next) {\nreturn;\n}\n- if (resRules.attachment || resRules.resReplace || resRules.resBody || resRules.resPrepend || resRules.resAppend\n-|| resRules.html || resRules.js || resRules.css || resRules.resWrite || resRules.resWriteRaw) {\n- util.disableReqCache(req.headers);\n- }\n+ requireNoCache(resRules) && util.disableReqCache(req.headers);\nif (!req.hasError) {\nnext();\n}\n"
    },
    {
        "msg": "fix(babel-preset-razzle): remove unused deps",
        "diff": "diff --git a/packages/babel-preset-razzle/package.json b/packages/babel-preset-razzle/package.json \"@babel/plugin-syntax-bigint\": \"7.8.3\",\n\"@babel/plugin-syntax-dynamic-import\": \"^7.8.3\",\n\"@babel/plugin-transform-modules-commonjs\": \"7.10.4\",\n- \"@babel/plugin-transform-react-jsx-source\": \"^7.9.0\",\n\"@babel/plugin-transform-runtime\": \"^7.9.0\",\n\"@babel/preset-env\": \"^7.9.5\",\n\"@babel/preset-react\": \"^7.9.4\",\n\"@babel/preset-typescript\": \"^7.9.0\",\n\"@babel/runtime\": \"^7.9.2\",\n- \"babel-plugin-dynamic-import-node\": \"2.3.3\",\n\"babel-plugin-syntax-jsx\": \"^6.18.0\",\n\"babel-plugin-transform-react-remove-prop-types\": \"0.4.24\",\n\"chalk\": \"^4.1.0\"\n",
        "date": "28.02.2021 15:19:12",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "feat(babel-preset-app): pin new deps",
        "sim_diff": "diff --git a/babel-preset-app/package.json b/babel-preset-app/package.json \"@babel/plugin-transform-runtime\": \"7.4.4\",\n\"@babel/preset-env\": \"7.4.5\",\n\"@babel/runtime\": \"7.4.5\",\n- \"@babel/runtime-corejs3\": \"^7.4.5\",\n- \"babel-loader\": \"^8.0.6\",\n+ \"@babel/runtime-corejs3\": \"7.4.5\",\n+ \"babel-loader\": \"8.0.6\",\n\"babel-plugin-dynamic-import-node\": \"2.2.0\",\n\"babel-plugin-module-resolver\": \"3.2.0\",\n- \"babel-plugin-transform-imports\": \"^1.5.1\",\n+ \"babel-plugin-transform-imports\": \"1.5.1\",\n\"core-js\": \"3.1.2\"\n},\n\"keywords\": [\n"
    },
    {
        "msg": "fix(project-version): Fixes version change, keeping the correct class on the URL",
        "diff": "diff --git a/app/routes/project-version.js b/app/routes/project-version.js @@ -45,17 +45,17 @@ export default Ember.Route.extend({\nendingRoute = `classes/${className}`;\nbreak;\n}\n- case 'project-version.classes.index': {\n+ case 'project-version.classes.class.index': {\nconst className = this.modelFor('project-version.classes.class').get('name');\nendingRoute = `classes/${className}`;\nbreak;\n}\n- case 'project-version.modules.index': {\n- const moduleName = this.pasramsFor('project-version.modules.module').module;\n+ case 'project-version.modules.module.index': {\n+ const moduleName = this.paramsFor('project-version.modules.module').module;\nendingRoute = `modules/${moduleName}`;\nbreak;\n}\n- case 'project-version.namespaces.index': {\n+ case 'project-version.namespaces.namespace.index': {\nconst namespaceName = this.paramsFor('project-version.namespaces.namespace').namespace;\nendingRoute = `namespaces/${namespaceName}`;\nbreak;\n",
        "date": "18.06.2017 22:07:45",
        "repo": "ember-learn/ember-api-docs",
        "type": "fix",
        "sim_msg": "chore: migrating cropper-modal to ES6",
        "sim_diff": "diff --git a/app/components/modals/cropper-modal.js b/app/components/modals/cropper-modal.js import ModalBase from 'open-event-frontend/components/modals/modal-base';\n-\n-export default ModalBase.extend({\n+import { action } from '@ember/object';\n+export default class extends ModalBase {\nonVisible() {\nlet viewport = {};\nlet factor = 150;\n@@ -16,7 +16,7 @@ export default ModalBase.extend({\nheight: 250\n}\n});\n- },\n+ }\nonHide() {\nthis.$('img').croppie('destroy');\n@@ -24,13 +24,14 @@ export default ModalBase.extend({\nif ($img.parent().is('div.croppie')) {\n$img.unwrap();\n}\n- },\n- actions: {\n+ }\n+ @action\nresetImage() {\nthis.onHide();\nthis.onVisible();\n- },\n+ }\n+ @action\ncropImage() {\nthis.$('img').croppie('result', { type: 'base64', size: 'original', quality: 1, format: 'jpeg' }).then(result => {\nif (this.onImageCrop) {\n@@ -39,4 +40,3 @@ export default ModalBase.extend({\n});\n}\n}\n-});\n"
    },
    {
        "msg": "fix(tooltip): overlap between d3 sliding dataset and notetip",
        "diff": "diff --git a/src/features/tooltip/Tooltip.js b/src/features/tooltip/Tooltip.js @@ -146,18 +146,18 @@ class TooltipControls extends React.Component {\n<div style={style}>\n{this.props.data && !this.props.data.fieldValue &&\n<div>\n- <h4><b>UID: </b>{this.props.data.uid} </h4>\n- <h4><b>MAC: </b>{this.props.data.mac} </h4>\n- <h4><b>rDNS_host: </b>{this.props.data.rDNS_host} </h4>\n- <h4><b>Subnet: </b>{this.props.data.subnet} </h4>\n- <h4><b>IP: </b>{this.props.data.IP} </h4>\n- <h4><b>Record Source: </b>{this.props.data.record.source} </h4>\n- <h4><b>Record Timestamp: </b>{this.props.data.record.timestamp} </h4>\n- <h4><b>Role: </b>{this.props.data.role.role} </h4>\n- <h4><b>rDNS_domain: </b>{this.props.data.rDNS_domain} </h4>\n- <h4><b>OS: </b>{this.props.data.os.os} </h4>\n- <h4><b>OS Confidence: </b>{this.props.data.os.confidence} </h4>\n- <h4><b>Vendor: </b>{this.props.data.vendor} </h4>\n+ <p><b>UID: </b>{this.props.data.uid} </p>\n+ <p><b>MAC: </b>{this.props.data.mac} </p>\n+ <p><b>rDNS_host: </b>{this.props.data.rDNS_host} </p>\n+ <p><b>Subnet: </b>{this.props.data.subnet} </p>\n+ <p><b>IP: </b>{this.props.data.IP} </p>\n+ <p><b>Record Source: </b>{this.props.data.record.source} </p>\n+ <p><b>Record Timestamp: </b>{this.props.data.record.timestamp} </p>\n+ <p><b>Role: </b>{this.props.data.role.role} </p>\n+ <p><b>rDNS_domain: </b>{this.props.data.rDNS_domain} </p>\n+ <p><b>OS: </b>{this.props.data.os.os} </p>\n+ <p><b>OS Confidence: </b>{this.props.data.os.confidence} </p>\n+ <p><b>Vendor: </b>{this.props.data.vendor} </p>\n</div>\n}\n{this.props.data && this.props.data.fieldValue &&\n",
        "date": "16.07.2019 13:08:25",
        "repo": "iqtlabs/crviz",
        "type": "fix",
        "sim_msg": "test: update HeatMap snap",
        "sim_diff": "diff --git a/client/src/components/profile/components/__snapshots__/HeatMap.test.js.snap b/client/src/components/profile/components/__snapshots__/HeatMap.test.js.snap @@ -2254,7 +2254,7 @@ exports[`<HeatMap/> renders correctly 1`] = `\n/>\n</svg>\n<div\n- class=\"__react_component_tooltip place-top type-dark \"\n+ class=\"__react_component_tooltip-304517788 __react_component_tooltip place-top type-dark\"\ndata-id=\"tooltip\"\n/>\n<div\n"
    },
    {
        "msg": "fix: clickable area for saving/deleting icon",
        "diff": "diff --git a/src/features/tooltip/Tooltip.js b/src/features/tooltip/Tooltip.js @@ -164,11 +164,11 @@ class TooltipControls extends React.Component {\n<b><h1><input className={tooltipStyle.inputStyle} type=\"text\" value={this.state.note.note.title} onChange={this.handleChangeTitle} placeholder=\"Title\"/></h1></b>\n<p><textarea className={tooltipStyle.inputStyle} type=\"text\" value={this.state.note.note.content} onChange={this.handleChangeContent} placeholder=\"Take a note...\"/></p>\n<div style={{textAlign:\"center\"}}>\n- <label className=\"button circular\">\n- <FontAwesomeIcon style={{margin:\"2.5px\"}} icon={faSave} onClick={this.saveNote}/>\n+ <label className=\"button circular\" onClick={this.saveNote}>\n+ <FontAwesomeIcon style={{margin:\"2.5px\"}} icon={faSave} />\n</label>\n- <label className=\"button circular\">\n- <FontAwesomeIcon style={{margin:\"2.5px\"}} icon={faTrashAlt} onClick={this.removeNote} />\n+ <label className=\"button circular\" onClick={this.removeNote}>\n+ <FontAwesomeIcon style={{margin:\"2.5px\"}} icon={faTrashAlt} />\n</label>\n</div>\n</div>\n",
        "date": "16.08.2019 09:19:34",
        "repo": "iqtlabs/crviz",
        "type": "fix",
        "sim_msg": "feat(contentformitemtitle): new tab for tooltip link",
        "sim_diff": "diff --git a/packages/react/src/components/CardEditor/CardEditForm/CardEditFormItems/ContentFormItemTitle.jsx b/packages/react/src/components/CardEditor/CardEditForm/CardEditFormItems/ContentFormItemTitle.jsx @@ -33,7 +33,12 @@ const ContentFormItemTitle = ({ title, tooltip }) => {\ntooltipId={`card-edit-form-${title}`}\n>\n<p>\n- {tooltipText} {href && linkText ? <Link href={href}>{linkText}</Link> : null}\n+ {tooltipText}{' '}\n+ {href && linkText ? (\n+ <Link href={href} target=\"_blank\" rel=\"noopener noreferrer\">\n+ {linkText}\n+ </Link>\n+ ) : null}\n</p>\n</Tooltip>\n) : null}\n"
    },
    {
        "msg": "fix(formfield): relax label propType validator\nFixes",
        "diff": "diff --git a/src/collections/Form/FormField.js b/src/collections/Form/FormField.js @@ -143,11 +143,8 @@ FormField.propTypes = {\nPropTypes.object,\n]),\n- /** A field can show that input is mandatory. Requires a label. */\n- required: customPropTypes.every([\n- customPropTypes.demand(['label']),\n- PropTypes.bool,\n- ]),\n+ /** A field can show that input is mandatory. */\n+ required: PropTypes.bool,\n/** Passed to the control component (i.e. <input type='password' />) */\ntype: customPropTypes.every([\n",
        "date": "24.03.2017 08:23:28",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "sim_msg": "docs(form/input): update errorState docs",
        "sim_diff": "diff --git a/components/form/input/src/index.js b/components/form/input/src/index.js @@ -50,7 +50,7 @@ FormInput.propTypes = {\ndisabled: PropTypes.bool,\n/* 's' or 'm', default: 'm' */\nsize: PropTypes.oneOf(Object.values(inputSizes)),\n- /* optional: 'success' or 'error' */\n+ /* true = error, false = success, null = neutral */\nerrorState: PropTypes.bool,\n/* value of the control */\nvalue: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n"
    },
    {
        "msg": "fix(typings): inherit Radio props from Checkbox\nfix(typings): inherit Radio props from Checkbox",
        "diff": "diff --git a/src/addons/Radio/index.d.ts b/src/addons/Radio/index.d.ts import * as React from 'react';\n+import { CheckboxProps } from '../../modules/Checkbox';\n-interface RadioProps {\n+interface RadioProps extends CheckboxProps {\n[key: string]: any;\n/** Format to emphasize the current selection state. */\n",
        "date": "31.01.2017 11:35:54",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "sim_msg": "refactor: remove displayName from class component",
        "sim_diff": "diff --git a/src/components/CheckboxButton/index.js b/src/components/CheckboxButton/index.js @@ -80,7 +80,6 @@ class CheckboxButton extends Component {\nCheckboxButton.propTypes = propTypes;\nCheckboxButton.defaultProps = defaultProps;\n-CheckboxButton.displayName = 'CheckboxButton';\nexport default React.forwardRef((props, ref) => (\n/* eslint-disable-next-line react/jsx-props-no-spreading */\n"
    },
    {
        "msg": "fix(babel-preset-razzle): remove experimental babel features",
        "diff": "diff --git a/packages/babel-preset-razzle/package.json b/packages/babel-preset-razzle/package.json \"dependencies\": {\n\"@babel/core\": \"7.11.1\",\n\"@babel/plugin-proposal-class-properties\": \"^7.8.3\",\n- \"@babel/plugin-proposal-decorators\": \"^7.12.12\",\n\"@babel/plugin-proposal-nullish-coalescing-operator\": \"7.10.4\",\n\"@babel/plugin-proposal-numeric-separator\": \"7.10.4\",\n\"@babel/plugin-proposal-object-rest-spread\": \"^7.9.5\",\n\"@babel/preset-typescript\": \"^7.9.0\",\n\"@babel/runtime\": \"^7.9.2\",\n\"babel-plugin-dynamic-import-node\": \"2.3.3\",\n- \"babel-plugin-parameter-decorator\": \"^1.0.16\",\n\"babel-plugin-syntax-jsx\": \"^6.18.0\",\n\"babel-plugin-transform-react-remove-prop-types\": \"0.4.24\",\n\"chalk\": \"^4.1.0\"\n",
        "date": "04.02.2021 00:30:08",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "sim_msg": "chore(babel-jest): Upgrading to babel-jest 24.0.0",
        "sim_diff": "diff --git a/package.json b/package.json \"@babel/cli\": \"^7.2.3\",\n\"@babel/core\": \"^7.2.2\",\n\"@babel/plugin-external-helpers\": \"^7.2.0\",\n- \"@babel/plugin-proposal-class-properties\": \"^7.2.3\",\n- \"@babel/plugin-proposal-decorators\": \"^7.2.3\",\n+ \"@babel/plugin-proposal-class-properties\": \"^7.3.0\",\n+ \"@babel/plugin-proposal-decorators\": \"^7.3.0\",\n\"@babel/plugin-proposal-json-strings\": \"^7.2.0\",\n- \"@babel/plugin-proposal-object-rest-spread\": \"^7.2.0\",\n+ \"@babel/plugin-proposal-object-rest-spread\": \"^7.3.1\",\n\"@babel/plugin-syntax-dynamic-import\": \"^7.2.0\",\n\"@babel/plugin-syntax-import-meta\": \"^7.2.0\",\n\"@babel/plugin-transform-modules-commonjs\": \"^7.2.0\",\n\"@babel/plugin-transform-react-constant-elements\": \"^7.2.0\",\n\"@babel/plugin-transform-react-inline-elements\": \"^7.2.0\",\n- \"@babel/preset-env\": \"^7.2.3\",\n+ \"@babel/preset-env\": \"^7.3.1\",\n\"@babel/preset-react\": \"^7.0.0\",\n\"@bootstrap-styled/documentation\": \"^1.2.1\",\n- \"@bootstrap-styled/provider\": \"^1.4.1\",\n+ \"@bootstrap-styled/provider\": \"^1.4.2\",\n\"@rollup-umd/documentation\": \"^1.3.5\",\n\"@semantic-release/changelog\": \"^3.0.2\",\n- \"@semantic-release/git\": \"^7.0.7\",\n- \"@semantic-release/github\": \"^5.2.8\",\n- \"@semantic-release/npm\": \"^5.1.3\",\n- \"babel-core\": \"^7.0.0-bridge.0\",\n+ \"@semantic-release/git\": \"^7.0.8\",\n+ \"@semantic-release/github\": \"^5.2.10\",\n+ \"@semantic-release/npm\": \"^5.1.4\",\n\"babel-eslint\": \"^10.0.1\",\n- \"babel-jest\": \"^23.6.0\",\n- \"babel-loader\": \"^8.0.4\",\n+ \"babel-jest\": \"^24.0.0\",\n+ \"babel-loader\": \"^8.0.5\",\n\"babel-plugin-add-module-exports\": \"^1.0.0\",\n\"babel-plugin-array-includes\": \"^2.0.3\",\n\"babel-plugin-dynamic-import-node\": \"^2.2.0\",\n\"babel-plugin-react-intl\": \"^3.0.1\",\n\"babel-plugin-react-transform\": \"^3.0.0\",\n\"babel-plugin-styled-components\": \"^1.10.0\",\n- \"babel-plugin-transform-react-remove-prop-types\": \"^0.4.21\",\n+ \"babel-plugin-transform-react-remove-prop-types\": \"^0.4.23\",\n\"babel-preset-react-hmre\": \"^1.1.1\",\n\"cz-conventional-changelog\": \"^2.1.0\",\n\"enzyme\": \"^3.8.0\",\n- \"enzyme-adapter-react-16\": \"^1.7.1\",\n- \"eslint\": \"^5.11.1\",\n+ \"enzyme-adapter-react-16\": \"^1.8.0\",\n+ \"eslint\": \"^5.12.1\",\n\"eslint-config-airbnb\": \"^17.1.0\",\n- \"eslint-plugin-import\": \"^2.14.0\",\n- \"eslint-plugin-jsx-a11y\": \"^6.1.2\",\n- \"eslint-plugin-react\": \"^7.12.2\",\n+ \"eslint-plugin-import\": \"^2.16.0\",\n+ \"eslint-plugin-jsx-a11y\": \"^6.2.0\",\n+ \"eslint-plugin-react\": \"^7.12.4\",\n\"immutable\": \"^4.0.0-rc.12\",\n- \"jest-cli\": \"^23.6.0\",\n+ \"jest-cli\": \"^24.0.0\",\n\"jest-sonar-reporter\": \"^2.0.0\",\n- \"lint-staged\": \"^8.1.0\",\n+ \"lint-staged\": \"^8.1.1\",\n\"mini-html-webpack-plugin\": \"^0.2.3\",\n\"pre-commit\": \"^1.2.2\",\n\"raf\": \"^3.4.1\",\n\"react-styleguidist\": \"^8.0.6\",\n\"react-test-renderer\": \"^16.7.0\",\n\"rimraf\": \"^2.6.3\",\n- \"rollup\": \"^1.0.1\",\n- \"rollup-plugin-babel\": \"^4.2.0\",\n- \"rollup-plugin-cleanup\": \"^3.1.0\",\n+ \"rollup\": \"^1.1.2\",\n+ \"rollup-plugin-babel\": \"^4.3.2\",\n+ \"rollup-plugin-cleanup\": \"^3.1.1\",\n\"rollup-plugin-commonjs\": \"^9.2.0\",\n\"rollup-plugin-inject\": \"^2.2.0\",\n\"rollup-plugin-json\": \"^3.1.0\",\n\"rollup-plugin-node-builtins\": \"^2.1.2\",\n\"rollup-plugin-node-resolve\": \"^4.0.0\",\n\"rollup-plugin-replace\": \"^2.1.0\",\n- \"rollup-plugin-terser\": \"^4.0.1\",\n+ \"rollup-plugin-terser\": \"^4.0.3\",\n\"rollup-plugin-visualizer\": \"^0.9.2\",\n\"rollup-watch\": \"^4.3.1\",\n- \"semantic-release\": \"^15.13.2\",\n- \"sinon\": \"^7.2.2\",\n+ \"semantic-release\": \"^15.13.3\",\n+ \"sinon\": \"^7.2.3\",\n\"styled-components\": \"^4.1.3\",\n- \"stylelint\": \"^9.9.0\",\n+ \"stylelint\": \"^9.10.1\",\n\"stylelint-config-recommended\": \"^2.1.0\",\n\"stylelint-config-styled-components\": \"^0.1.1\",\n- \"stylelint-processor-styled-components\": \"^1.5.1\",\n+ \"stylelint-processor-styled-components\": \"^1.5.2\",\n\"toctoc\": \"^0.3.2\",\n- \"webpack\": \"^4.28.3\"\n+ \"webpack\": \"^4.29.0\"\n},\n\"jest\": {\n\"roots\": [\n\"raf/polyfill\"\n],\n\"testURL\": \"http://localhost/\",\n- \"setupTestFrameworkScriptFile\": \"<rootDir>/internals/testing/test-bundler.js\",\n+ \"setupFilesAfterEnv\": [\n+ \"<rootDir>/internals/testing/test-bundler.js\"\n+ ],\n\"testPathIgnorePatterns\": [\n\"<rootDir>/dist/\",\n\"<rootDir>/lib/\"\n\"map-to-css-modules\": \"^1.0.6\",\n\"prop-types\": \"^15.6.2\",\n\"react-portal\": \"^4.2.0\",\n- \"react-transition-group\": \"^2.5.2\",\n+ \"react-transition-group\": \"^2.5.3\",\n\"tether-fix\": \"^1.4.0-fix-es\"\n},\n\"peerDependencies\": {\n"
    },
    {
        "msg": "fix(cnumberinput): fix number-input ids created at build time",
        "diff": "diff --git a/packages/chakra-ui-core/src/CNumberInput/CNumberInput.js b/packages/chakra-ui-core/src/CNumberInput/CNumberInput.js @@ -58,8 +58,7 @@ const CNumberInput = {\ndefault: 'md'\n},\ninputId: {\n- type: String,\n- default: `number-input-${useId()}`\n+ type: String\n}\n},\nprovide () {\n",
        "date": "12.05.2020 20:40:13",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "sim_msg": "fix: QInput float label with value 0",
        "sim_diff": "diff --git a/src/components/input/QInput.vue b/src/components/input/QInput.vue @@ -203,7 +203,7 @@ export default {\n: this.type\n},\nlength () {\n- return this.value\n+ return this.value || (this.isNumber && this.value !== null)\n? ('' + this.value).length\n: 0\n}\n"
    },
    {
        "msg": "fix(Time series): only show comparison when there are 2 or more datasets",
        "diff": "diff --git a/src/App.js b/src/App.js @@ -328,14 +328,14 @@ class App extends Component {\n<div className={style.accordionHeader} onClick={this.toggleShowComparison}>\nComparison {!showComparison && <FontAwesomeIcon icon={faAngleDoubleDown} />}{showComparison && <FontAwesomeIcon onClick={this.toggleShowComparison} icon={faAngleDoubleUp} />}\n</div>\n- { hasDataset &&\n+ { datasetCount >= 2 &&\n<div className={ classNames({ [style.section]: true, [style.hierarchySection]: true, [style.hidden]: !showComparison }) }>\n<ComparisonSelector startUid={startUuid} endUid={endUuid} />\n</div>\n}\n- { !hasDataset &&\n+ { datasetCount < 2 &&\n<div className={ classNames({ [style.section]: true, [style.dimSection]:true, [style.hierarchySection]: true, [style.hidden]: !showComparison }) }>\n- Please select datasets to continue\n+ Please select at least 2 datasets to continue\n</div>\n}\n",
        "date": "09.05.2019 14:57:59",
        "repo": "iqtlabs/crviz",
        "type": "fix",
        "sim_msg": "feat(menu): set home URL to root if SITEURL is not\nThis is useful when you are running site locally and have set SITEURL to\nempty string.",
        "sim_diff": "diff --git a/templates/base.html b/templates/base.html <a class=\"brand\" href=\"{{ SITEURL }}/\"><span class=site-name>{{ SITENAME }}</span></a>\n<div class=\"nav-collapse collapse\">\n<ul class=\"nav pull-right top-menu\">\n- <li {% if page_name == 'index' %} class=\"active\"{% endif %}><a href=\"{{ SITEURL }}\">Home</a></li>\n+ <li {% if page_name == 'index' %} class=\"active\"{% endif %}>\n+ <a href=\n+ {% if SITEURL %}\n+ {{ SITEURL }}\n+ {% else %}\n+ \"/\"\n+ {% endif %}\n+ >Home</a>\n+ </li>\n{% if DISPLAY_PAGES_ON_MENU %}\n{% for p in pages %}\n<li {% if p == page %} class=\"active\"{% endif %}><a href=\"{{ SITEURL }}/{{ p.url }}\">{{ p.title }}</a></li>\n"
    },
    {
        "msg": "fix(docs): fix public path",
        "diff": "diff --git a/config.js b/config.js @@ -66,7 +66,7 @@ const config = {\ncompiler_hash_type: __PROD__ ? 'chunkhash' : 'hash',\ncompiler_fail_on_warning: __TEST__ || __PROD__,\ncompiler_output_path: paths.base(envConfig.dir_docs_dist),\n- compiler_public_path: __PROD__ ? '//raw.github.com/Semantic-Org/Semantic-UI-React/gh-pages/' : '/',\n+ compiler_public_path: '/',\ncompiler_stats: {\nhash: false, // the hash of the compilation\nversion: false, // webpack version info\n",
        "date": "20.08.2017 14:14:52",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "sim_msg": "build(webpack): add hash to output.filename",
        "sim_diff": "diff --git a/webpack.config.js b/webpack.config.js @@ -54,17 +54,17 @@ module.exports = (env = {}) => {\ncomponents: glob.sync('./client/components/**/!(*.spec|*.mock).js'),\nconfig: [\n`./client/app/config/all.${env.region}.js`,\n- `./client/app/config/${env.production ? 'prod' : 'dev'}.${env.region}.js`\n+ `./client/app/config/${env.production ? 'prod' : 'dev'}.${env.region}.js`,\n],\n}, bundles),\noutput: {\npath: path.resolve(__dirname, 'dist'),\n- filename: '[name].bundle.js',\n+ filename: '[name].[hash].bundle.js',\n},\nresolve: {\nalias: {\n- jquery: path.resolve(__dirname, \"node_modules/jquery\")\n- }\n- }\n+ jquery: path.resolve(__dirname, 'node_modules/jquery'),\n+ },\n+ },\n});\n};\n"
    },
    {
        "msg": "fix: support windows by using path.delimiter",
        "diff": "diff --git a/lib/monitor/run.js b/lib/monitor/run.js @@ -64,7 +64,7 @@ function run(options) {\nconst spawnOptions = {\nenv: Object.assign({}, process.env, options.execOptions.env, {\n- PATH: binPath + ':' + process.env.PATH,\n+ PATH: binPath + path.delimiter + process.env.PATH,\n}),\nstdio: stdio,\n};\n",
        "date": "23.02.2022 17:36:11",
        "repo": "remy/nodemon",
        "type": "fix",
        "sim_msg": "chore(example): accept arguments via run-script",
        "sim_diff": "diff --git a/examples/run-example.js b/examples/run-example.js const { spawn } = require('child_process');\n+const [, , ...args] = process.argv;\nconst cwd = process.env.INIT_CWD;\n-spawn('node', ['../../../bin/webpack-dev-server.js'], {\n+spawn('node', ['../../../bin/webpack-dev-server.js', ...args], {\ncwd,\nstdio: 'inherit',\n});\n"
    },
    {
        "msg": "fix: storybook build",
        "diff": "diff --git a/.storybook/components/Canvas.vue b/.storybook/components/Canvas.vue @@ -47,7 +47,7 @@ import {\nCButton,\nCBox,\nCIconButton,\n- CColorModeProvider } from '../../packages/chakra-ui-core/dist/esm'\n+ CColorModeProvider } from '../../packages/chakra-ui-core/src'\nexport default {\nname: 'Canvas',\ncomponents: {\n",
        "date": "08.05.2020 18:06:19",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "sim_msg": "chore: fix logo storybook build",
        "sim_diff": "diff --git a/packages/vue/.storybook/theme.js b/packages/vue/.storybook/theme.js import { create } from \"@storybook/theming/create\";\n+import logo from \"../public/assets/storybook/logo.png\";\nexport default create({\nbase: \"light\",\n@@ -28,5 +29,6 @@ export default create({\nbrandTitle: \"StorefrontUI\",\nbrandUrl: \"https://github.com/Divanteltd/storefront-ui\",\n- brandImage: \"/assets/storybook/logo.png\",\n+ brandImage:\n+ process.env.NODE_ENV === \"production\" ? logo : \"/assets/storybook/logo.png\",\n});\n"
    },
    {
        "msg": "perf(Modal): reduce unnecessary layout invalidations\nImprove performance especially in IE11 when a modal is used",
        "diff": "diff --git a/src/modules/Modal/Modal.js b/src/modules/Modal/Modal.js @@ -250,9 +250,10 @@ class Modal extends Component {\nsetDimmerNodeStyle = () => {\ndebug('setDimmerNodeStyle()')\n+ const { current } = this.dimmerRef\n- if (this.dimmerRef.current && this.dimmerRef.current.style) {\n- this.dimmerRef.current.style.setProperty('display', 'flex', 'important')\n+ if (current && current.style && current.style.display !== 'flex') {\n+ current.style.setProperty('display', 'flex', 'important')\n}\n}\n",
        "date": "26.05.2019 18:09:33",
        "repo": "semantic-org/semantic-ui-react",
        "type": "perf",
        "sim_msg": "refactor(modal/basic): format js with new rules",
        "sim_diff": "diff --git a/components/modal/basic/src/index.js b/components/modal/basic/src/index.js @@ -14,12 +14,17 @@ class ModalBasic extends Component {\n}\n}\n- _preventScrollIfNeeded = (e) => {\n+ _preventScrollIfNeeded = e => {\nif (this.noScroll) e.preventDefault()\n}\n_avoidOverscroll = () => {\n- const {clientHeight, offsetHeight, scrollTop, scrollHeight} = this.contentDOMEl\n+ const {\n+ clientHeight,\n+ offsetHeight,\n+ scrollTop,\n+ scrollHeight\n+ } = this.contentDOMEl\nconst currentScroll = scrollTop + offsetHeight\n// check if the content has to scroll in order to prevent the default\n// behaviour of the touchmove in case we don't need the scroll\n@@ -47,29 +52,36 @@ class ModalBasic extends Component {\nthis._closeModal()\n}\n- _handleOutsideClick = (event) => {\n+ _handleOutsideClick = event => {\nif (this.props.closeOnOutsideClick && event.target === this.wrapperDOMEl) {\nthis._closeModal()\n}\n}\n_renderHeader = () => {\n- const { header, iconClose: IconClose, textClose, textCloseHidden } = this.props\n+ const {\n+ header,\n+ iconClose: IconClose,\n+ textClose,\n+ textCloseHidden\n+ } = this.props\nreturn (\n<div\n- className='sui-ModalBasic-header'\n- onTouchMove={(e) => e.preventDefault()}>\n+ className=\"sui-ModalBasic-header\"\n+ onTouchMove={e => e.preventDefault()}\n+ >\n{header}\n<button\n- type='button'\n- className='sui-ModalBasic-close'\n+ type=\"button\"\n+ className=\"sui-ModalBasic-close\"\nonClick={this._handleCloseClick}\n>\n- <IconClose svgClass='sui-ModalBasic-closeIcon' />\n- {textCloseHidden\n- ? <span className='sui-ModalBasic-closeTextHidden'>{textClose}</span>\n- : textClose\n- }\n+ <IconClose svgClass=\"sui-ModalBasic-closeIcon\" />\n+ {textCloseHidden ? (\n+ <span className=\"sui-ModalBasic-closeTextHidden\">{textClose}</span>\n+ ) : (\n+ textClose\n+ )}\n</button>\n</div>\n)\n@@ -100,23 +112,24 @@ class ModalBasic extends Component {\nreturn (\n<div\nclassName={wrapperClassName}\n- ref={node => { this.wrapperDOMEl = node }}\n+ ref={node => {\n+ this.wrapperDOMEl = node\n+ }}\nonClick={this._handleOutsideClick}\n>\n<div className={dialogClassName}>\n{header && this._renderHeader()}\n<div\n- className='sui-ModalBasic-content'\n+ className=\"sui-ModalBasic-content\"\nonTouchStart={this._avoidOverscroll}\nonTouchMove={this._preventScrollIfNeeded}\n- ref={node => { this.contentDOMEl = node }}>\n+ ref={node => {\n+ this.contentDOMEl = node\n+ }}\n+ >\n{content}\n</div>\n- {footer &&\n- <div className='sui-ModalBasic-footer'>\n- {footer}\n- </div>\n- }\n+ {footer && <div className=\"sui-ModalBasic-footer\">{footer}</div>}\n</div>\n</div>\n)\n"
    },
    {
        "msg": "perf(isISO31661Alpha3): use a Set along with .has instead of includes",
        "diff": "diff --git a/src/lib/isISO31661Alpha3.js b/src/lib/isISO31661Alpha3.js import assertString from './util/assertString';\n-import includes from './util/includes';\n// from https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3\n-const validISO31661Alpha3CountriesCodes = [\n+const validISO31661Alpha3CountriesCodes = new Set([\n'AFG', 'ALA', 'ALB', 'DZA', 'ASM', 'AND', 'AGO', 'AIA', 'ATA', 'ATG', 'ARG', 'ARM', 'ABW', 'AUS', 'AUT', 'AZE',\n'BHS', 'BHR', 'BGD', 'BRB', 'BLR', 'BEL', 'BLZ', 'BEN', 'BMU', 'BTN', 'BOL', 'BES', 'BIH', 'BWA', 'BVT', 'BRA',\n'IOT', 'BRN', 'BGR', 'BFA', 'BDI', 'KHM', 'CMR', 'CAN', 'CPV', 'CYM', 'CAF', 'TCD', 'CHL', 'CHN', 'CXR', 'CCK',\n@@ -19,9 +18,9 @@ const validISO31661Alpha3CountriesCodes = [\n'ESP', 'LKA', 'SDN', 'SUR', 'SJM', 'SWZ', 'SWE', 'CHE', 'SYR', 'TWN', 'TJK', 'TZA', 'THA', 'TLS', 'TGO', 'TKL',\n'TON', 'TTO', 'TUN', 'TUR', 'TKM', 'TCA', 'TUV', 'UGA', 'UKR', 'ARE', 'GBR', 'USA', 'UMI', 'URY', 'UZB', 'VUT',\n'VEN', 'VNM', 'VGB', 'VIR', 'WLF', 'ESH', 'YEM', 'ZMB', 'ZWE',\n-];\n+]);\nexport default function isISO31661Alpha3(str) {\nassertString(str);\n- return includes(validISO31661Alpha3CountriesCodes, str.toUpperCase());\n+ return validISO31661Alpha3CountriesCodes.has(str.toUpperCase());\n}\n",
        "date": "26.09.2021 17:56:30",
        "repo": "validatorjs/validator.js",
        "type": "perf",
        "sim_msg": "fix(framework): openUI5 cldr support re-added",
        "sim_diff": "diff --git a/packages/base/src/asset-registries/LocaleData.js b/packages/base/src/asset-registries/LocaleData.js import { registerModuleContent } from \"../ResourceLoaderOverrides.js\";\nimport { fetchJsonOnce } from \"../util/FetchHelper.js\";\n+import { getFeature } from \"../FeaturesRegistry.js\";\n+\n+const OpenUI5Support = getFeature(\"OpenUI5Support\");\nconst supportedLocales = [\"ar\", \"ar_EG\", \"ar_SA\", \"bg\", \"ca\", \"cs\", \"da\", \"de\", \"de_AT\", \"de_CH\", \"el\", \"el_CY\", \"en\", \"en_AU\", \"en_GB\", \"en_HK\", \"en_IE\", \"en_IN\", \"en_NZ\", \"en_PG\", \"en_SG\", \"en_ZA\", \"es\", \"es_AR\", \"es_BO\", \"es_CL\", \"es_CO\", \"es_MX\", \"es_PE\", \"es_UY\", \"es_VE\", \"et\", \"fa\", \"fi\", \"fr\", \"fr_BE\", \"fr_CA\", \"fr_CH\", \"fr_LU\", \"he\", \"hi\", \"hr\", \"hu\", \"id\", \"it\", \"it_CH\", \"ja\", \"kk\", \"ko\", \"lt\", \"lv\", \"ms\", \"nb\", \"nl\", \"nl_BE\", \"pl\", \"pt\", \"pt_PT\", \"ro\", \"ru\", \"ru_UA\", \"sk\", \"sl\", \"sr\", \"sv\", \"th\", \"tr\", \"uk\", \"vi\", \"zh_CN\", \"zh_HK\", \"zh_SG\", \"zh_TW\"];\n@@ -63,9 +66,13 @@ const fetchCldr = async (language, region, script) => {\nresolveMissingMappings();\nconst localeId = calcLocale(language, region, script);\n- const cldrObj = cldrData[localeId];\n+ let cldrObj = cldrData[localeId];\nconst url = cldrUrls[localeId];\n+ if (!cldrObj && OpenUI5Support) {\n+ cldrObj = OpenUI5Support.getLocaleDataObject();\n+ }\n+\nif (cldrObj) {\n// inlined from build or fetched independently\nregisterModuleContent(`sap/ui/core/cldr/${localeId}.json`, cldrObj);\n"
    },
    {
        "msg": "perf(regl-renderer): use webgl2 as default context or enable OES_element_index_uint extension\nupdated viewer to use either webgl2 or OES_element_index_uint extension",
        "diff": "diff --git a/packages/web/src/ui/views/viewer.js b/packages/web/src/ui/views/viewer.js @@ -53,6 +53,7 @@ const viewer = (state, i18n) => {\nif (!render) {\nconst options = setup(el)\n+ if (options.error) return html`<b style=\"color:red; background:white; position:fixed; z-index:10; top:50%\">${options.error}</b>`\nviewerOptions = options.viewerOptions\ncamera = options.camera\nrender = prepareRender(viewerOptions)\n@@ -191,13 +192,32 @@ const viewer = (state, i18n) => {\nreturn el\n}\n+const createContext = (canvas, contextAttributes) => {\n+ const get = (type) => {\n+ try {\n+ return { gl: canvas.getContext(type, contextAttributes), type }\n+ } catch (e) {\n+ return null\n+ }\n+ }\n+ return (\n+ get('webgl2') ||\n+ get('webgl') ||\n+ get('experimental-webgl') ||\n+ get('webgl-experimental')\n+ )\n+}\n+\nconst setup = (element) => {\n// prepare the camera\n+ let error\nconst camera = Object.assign({}, perspectiveCamera.defaults)\ncamera.position = [150, -180, 233]\n+ const { gl, type } = createContext(element)\n+\nconst viewerOptions = {\n- glOptions: { canvas: element },\n+ glOptions: { gl },\ncamera,\ndrawCommands: {\n// draw commands bootstrap themselves the first time they are run\n@@ -209,7 +229,14 @@ const setup = (element) => {\n// data\nentities: []\n}\n- return { viewerOptions, camera }\n+ if (type === 'webgl') {\n+ if (!gl.getExtension('OES_element_index_uint')) {\n+ error = 'Your browser uses an old version of WebGL without OES_element_index_uint. Please upgrade your browser to use this application'\n+ }\n+\n+ viewerOptions.glOptions.optionalExtensions = ['oes_element_index_uint']\n+ }\n+ return { viewerOptions, camera, error }\n}\nconst resize = (viewerElement) => {\n",
        "date": "12.08.2021 18:56:19",
        "repo": "jscad/openjscad.org",
        "type": "perf",
        "sim_msg": "refactor: refactoring requestRender() method",
        "sim_diff": "diff --git a/src/renderers/vgl-renderer.js b/src/renderers/vgl-renderer.js @@ -63,12 +63,12 @@ export default {\nthis.cameraRef = camera;\nif (this.$el) {\nif (camera) setCameraSize(camera, this.$el.clientWidth, this.$el.clientHeight);\n- this.requestRender(camera && this.sceneRef ? 1 : -1);\n+ this.requestRender(camera && this.sceneRef);\n}\n},\nsetSceneRef(scene) {\nthis.sceneRef = scene;\n- if (this.$el) this.requestRender(scene && this.cameraRef ? 1 : -1);\n+ if (this.$el) this.requestRender(scene && this.cameraRef);\n},\nsetFallbackCamera(cameras) {\nconst keys = cameras.keys();\n@@ -78,10 +78,8 @@ export default {\nconst keys = scenes.keys();\nthis.setSceneRef(keys.length === 1 ? scenes.get(keys[0]) : undefined);\n},\n- requestRender(request) {\n- const prevRequest = this.reservation;\n- this.reservation = request;\n- if (!request || prevRequest) return;\n+ requestRender(...args) {\n+ if (!this.reservation) {\nthis.$nextTick(() => {\nif (this.reservation > 0) {\nthis.vglNamespace.beforeRender.forEach((fn) => fn());\n@@ -111,6 +109,8 @@ export default {\n}\nthis.reservation = 0;\n});\n+ }\n+ this.reservation = !args.length || args[0] ? 1 : -1;\n},\n},\nwatch: {\n@@ -118,7 +118,7 @@ export default {\nif (this.$el) {\ninst.setSize(this.$el.clientWidth, this.$el.clientHeight);\nthis.$el.replaceChild(inst.domElement, oldInst.domElement);\n- if (this.cameraRef && this.sceneRef) this.requestRender(1);\n+ if (this.cameraRef && this.sceneRef) this.requestRender();\n}\noldInst.dispose();\n},\n@@ -161,7 +161,7 @@ export default {\nthis.inst.setSize(this.$el.clientWidth, this.$el.clientHeight);\nthis.$el.appendChild(this.inst.domElement);\nif (this.cameraRef) setCameraSize(this.cameraRef, this.$el.clientWidth, this.$el.clientHeight);\n- this.requestRender(this.cameraRef && this.sceneRef ? 1 : -1);\n+ this.requestRender(this.cameraRef && this.sceneRef);\n},\nbeforeDestroy() {\nif (this.camera === undefined) {\n@@ -191,7 +191,7 @@ export default {\nthis.inst.setSize(this.$el.clientWidth, this.$el.clientHeight);\nif (this.cameraRef) {\nsetCameraSize(this.cameraRef, this.$el.clientWidth, this.$el.clientHeight);\n- if (this.sceneRef) this.requestRender(1);\n+ if (this.sceneRef) this.requestRender();\n}\n}, false);\n},\n"
    },
    {
        "msg": "perf(swipe-cell): avoid useless animate\nfix",
        "diff": "diff --git a/packages/swipe-cell/index.ts b/packages/swipe-cell/index.ts @@ -120,7 +120,11 @@ VantComponent({\n}\nthis.dragging = true;\n- ARRAY.filter((item) => item !== this).forEach((item) => item.close());\n+\n+ ARRAY.filter(\n+ (item) => item !== this && item.offset !== 0\n+ ).forEach((item) => item.close());\n+\nthis.setData({ catchMove: true });\nthis.swipeMove(this.startOffset + this.deltaX);\n},\n",
        "date": "31.12.2020 17:05:49",
        "repo": "youzan/vant-weapp",
        "type": "perf",
        "sim_msg": "chore(h5): swiper navigation click event stopPropagation",
        "sim_diff": "diff --git a/src/core/view/components/swiper/index.vue b/src/core/view/components/swiper/index.vue @@ -635,7 +635,9 @@ export default {\nthis.circularEnabled ? 1 : 0\n)\n},\n- _navigationClick (type) {\n+ _navigationClick ($event, type) {\n+ $event.stopPropagation()\n+\nconst swiperItemLength = this.items.length\nlet _current = this.currentSync\n@@ -783,7 +785,7 @@ export default {\n'div',\n{\non: {\n- click: () => this._navigationClick('prev'),\n+ click: (e) => this._navigationClick(e, 'prev'),\n...navigationEvent\n},\nclass: [\n@@ -801,7 +803,7 @@ export default {\n'div',\n{\non: {\n- click: () => this._navigationClick('next'),\n+ click: (e) => this._navigationClick(e, 'next'),\n...navigationEvent\n},\nclass: [\n"
    },
    {
        "msg": "perf: instantiate errors lazily",
        "diff": "diff --git a/addon/model.js b/addon/model.js @@ -78,7 +78,7 @@ export default class MegamorphicModel extends EmberObject {\nthis._topModel = this._topModel || this;\nthis._parentModel = this._parentModel || null;\n- this._errors = DS.Errors.create();\n+ this._errors = null;\nthis._init = true;\nif (!CUSTOM_MODEL_CLASS) {\nthis._internalModel = properties._internalModel;\n@@ -487,16 +487,16 @@ export default class MegamorphicModel extends EmberObject {\n_removeError(key) {\n// Remove errors for the property\n- this._errors.remove(key);\n+ this.errors.remove(key);\nif (CUSTOM_MODEL_CLASS) {\n- if (get(this._errors, 'length') === 0) {\n+ if (get(this.errors, 'length') === 0) {\nthis._clearInvalidRequestErrors();\n}\n} else {\nif (\nthis._internalModel.currentState &&\n!this._internalModel.currentState.isValid &&\n- get(this._errors, 'length') === 0\n+ get(this.errors, 'length') === 0\n) {\nthis._updateCurrentState(updatedUncommitted);\n}\n@@ -514,6 +514,9 @@ export default class MegamorphicModel extends EmberObject {\n// Errors hash that will get update,\n// upon validation errors\nget errors() {\n+ if (this._errors === null) {\n+ this._errors = DS.Errors.create();\n+ }\nreturn this._errors;\n}\n}\n",
        "date": "11.12.2019 13:28:52",
        "repo": "hjdivad/ember-m3",
        "type": "perf",
        "sim_msg": "perf(populate): dont clone whole options every time\nFix",
        "sim_diff": "diff --git a/lib/model.js b/lib/model.js @@ -3243,16 +3243,16 @@ function getModelsMapForPopulate(model, docs, options) {\nmodelNameFromQuery = options.model && options.model.modelName || options.model,\nschema, refPath, Model, currentOptions, modelNames, modelName, discriminatorKey, modelForFindSchema;\n- var originalOptions = utils.clone(options);\n+ var originalModel = options.model;\nvar isVirtual = false;\nvar isRefPathArray = false;\nschema = model._getSchema(options.path);\nvar isUnderneathDocArray = schema && schema.$isUnderneathDocArray;\nif (isUnderneathDocArray &&\n- originalOptions &&\n- originalOptions.options &&\n- originalOptions.options.sort) {\n+ options &&\n+ options.options &&\n+ options.options.sort) {\nreturn new Error('Cannot populate with `sort` on path ' + options.path +\n' because it is a subproperty of a document array');\n}\n@@ -3352,8 +3352,8 @@ function getModelsMapForPopulate(model, docs, options) {\nmodelName = modelNames[k];\nvar _doc = Array.isArray(doc) && isRefPathArray ? doc[k] : doc;\nvar _ret = Array.isArray(ret) && isRefPathArray ? ret[k] : ret;\n- Model = originalOptions.model && originalOptions.model.modelName ?\n- originalOptions.model :\n+ Model = originalModel && originalModel.modelName ?\n+ originalModel :\nmodel.db.model(modelName);\nif (!available[modelName]) {\n"
    },
    {
        "msg": "refactor(package): update deploy scripts [ci skip]",
        "diff": "diff --git a/package.json b/package.json \"build:docs-cname\": \"echo react.semantic-ui.com > docs/build/CNAME\",\n\"predeploy:docs\": \"cross-env NODE_ENV=production yarn build:docs && yarn build:docs-cname\",\n\"deploy:docs\": \"gh-pages -d docs/build -m 'deploy docs [ci skip]'\",\n+ \"postdeploy:docs\": \"github_changelog_generator && gach 'docs(changelog): update changelog [ci skip]\",\n\"lint\": \"cross-env NODE_ENV=production eslint .\",\n\"lint:fix\": \"yarn lint -- --fix\",\n\"prerelease\": \"yarn lint && yarn tsd:lint && npm test && cross-env NODE_ENV=production yarn build\",\n- \"postrelease\": \"NODE_ENV=production yarn deploy:docs\",\n- \"prerelease:major\": \"yarn prerelease\",\n- \"prerelease:minor\": \"yarn prerelease\",\n- \"prerelease:patch\": \"yarn prerelease\",\n- \"release:major\": \"ta-script npm/release major\",\n- \"release:minor\": \"ta-script npm/release minor\",\n- \"release:patch\": \"ta-script npm/release patch\",\n+ \"postrelease\": \"yarn deploy:docs\",\n+ \"release:major\": \"yarn prerelease && ta-script npm/release major && yarn postrelease\",\n+ \"release:minor\": \"yarn prerelease && ta-script npm/release minor && yarn postrelease\",\n+ \"release:patch\": \"yarn prerelease && ta-script npm/release patch && yarn postrelease\",\n\"prestart\": \"yarn satisfied -- --fix yarn\",\n\"start\": \"yarn docs\",\n\"satisfied\": \"satisfied --skip-invalid\",\n",
        "date": "24.09.2017 12:56:58",
        "repo": "semantic-org/semantic-ui-react",
        "type": "refactor",
        "sim_msg": "build(lint): adjust echint for .svg files",
        "sim_diff": "diff --git a/package.json b/package.json \"license\": \"ISC\",\n\"main\": \"dist/tds.cjs.js\",\n\"module\": \"dist/tds.es.js\",\n- \"files\": [\n- \"dist\",\n- \"src\",\n- \"CHANGELOG.md\",\n- \"CONTRIBUTING.md\",\n- \"UPGRADING.md\"\n- ],\n+ \"files\": [\"dist\", \"src\", \"CHANGELOG.md\", \"CONTRIBUTING.md\", \"UPGRADING.md\"],\n\"scripts\": {\n\"build:css\": \"postcss --use cssnano --replace dist/tds.css\",\n\"build:js\": \"rollup -c config/rollup.config.js\",\n\"dev\": \"styleguidist server --config config/styleguide.config.js\",\n\"gitbook\": \"gitbook serve guide\",\n\"gitbook:install\": \"gitbook install guide\",\n- \"lint:js\": \"eslint src config docs scripts --ext '.js,.jsx' --config config/.eslintrc.json --fix\",\n+ \"lint:js\":\n+ \"eslint src config docs scripts --ext '.js,.jsx' --config config/.eslintrc.json --fix\",\n\"lint:scss\": \"stylelint 'src/components/**/*.scss' --config config/.stylelintrc.json\",\n\"lint:ec\": \"echint\",\n\"lint\": \"yarn lint:js && yarn lint:scss && yarn lint:ec\",\n- \"precommit\": \"yarn lint && yarn test && yarn build-package && yarn build-styleguide && yarn build-gitbook\",\n+ \"precommit\":\n+ \"yarn lint && yarn test && yarn build-package && yarn build-styleguide && yarn build-gitbook\",\n\"release:changelog\": \"changelog\",\n\"release\": \"scripts/release.sh\",\n\"scaffold\": \"node scripts/scaffold.js\",\n\"**/fonts/**\",\n\"**/dist/**\",\n\"docs/components/Logo/Logo.svg\",\n+ \"**/**.svg\",\n\"**.log\",\n\"**/__snapshots__/**\",\n\"docs/elements/**\",\n"
    },
    {
        "msg": "refactor: Flipping prerender() detection to last script in HTML",
        "diff": "diff --git a/packages/wmr/src/lib/prerender.js b/packages/wmr/src/lib/prerender.js @@ -70,13 +70,13 @@ async function workerCode({ cwd, out, publicPath, customRoutes }) {\n// Grab the generated HTML file, which we'll use as a template:\nconst tpl = await fs.readFile(path.resolve(cwd, out, 'index.html'), 'utf-8');\n- // The first script in the file that is not external is assumed to have a\n+ // The last script in the file that is not external is assumed to have a\n// `prerender` export\nlet script;\nconst SCRIPT_TAG = /<script(?:\\s[^>]*?)?\\s+src=(['\"]?)([^>]*?)\\1(?:\\s[^>]*?)?>/g;\nlet match;\n- while ((match = SCRIPT_TAG.exec(tpl)) && !script) {\n+ while ((match = SCRIPT_TAG.exec(tpl))) {\n// Ignore external urls\nif (!match || /^(?:https?|file|data)/.test(match[2])) continue;\n@@ -103,7 +103,7 @@ async function workerCode({ cwd, out, publicPath, customRoutes }) {\n// const App = m.default || m[Object.keys(m)[0]];\nif (typeof doPrerender !== 'function') {\n- throw Error(`No prerender() function was exported by the first <script src=\"...\"> in your index.html.`);\n+ throw Error(`No prerender() function was exported by the last non-external <script src=\"...\"> in your index.html.`);\n}\n/**\n",
        "date": "23.01.2022 22:20:07",
        "repo": "preactjs/wmr",
        "type": "refactor",
        "sim_msg": "refactor: tweak",
        "sim_diff": "diff --git a/src/platforms/web/compiler/modules/model.js b/src/platforms/web/compiler/modules/model.js @@ -28,6 +28,7 @@ function preTransformNode (el: ASTElement, options: CompilerOptions) {\nif (map['v-model'] && (map['v-bind:type'] || map[':type'])) {\nconst typeBinding: any = getBindingAttr(el, 'type')\nconst ifCondition = getAndRemoveAttr(el, 'v-if', true)\n+ const ifConditionExtra = ifCondition ? `&&(${ifCondition})` : ``\n// 1. checkbox\nconst branch0 = cloneASTElement(el)\n// process for on the main node\n@@ -35,7 +36,7 @@ function preTransformNode (el: ASTElement, options: CompilerOptions) {\naddRawAttr(branch0, 'type', 'checkbox')\nprocessElement(branch0, options)\nbranch0.processed = true // prevent it from double-processed\n- branch0.if = `type==='checkbox'` + (ifCondition ? `&&(${ifCondition})` : ``)\n+ branch0.if = `type==='checkbox'` + ifConditionExtra\naddIfCondition(branch0, {\nexp: branch0.if,\nblock: branch0\n@@ -46,7 +47,7 @@ function preTransformNode (el: ASTElement, options: CompilerOptions) {\naddRawAttr(branch1, 'type', 'radio')\nprocessElement(branch1, options)\naddIfCondition(branch0, {\n- exp: `type==='radio'` + (ifCondition ? `&&(${ifCondition})` : ``),\n+ exp: `type==='radio'` + ifConditionExtra,\nblock: branch1\n})\n// 3. other\n"
    },
    {
        "msg": "refactor: deprecated `.avatar-rounded` and `.avatar-square`",
        "diff": "diff --git a/scss/_avatar.scss b/scss/_avatar.scss display: inline-flex;\nalign-items: center;\njustify-content: center;\n- border-radius: 50em;\n+ vertical-align: middle;\n+ @include border-radius(50em);\n@include avatar($avatar-width,$avatar-status-width);\n}\n.avatar-img {\nwidth: 100%;\nheight: auto;\n- border-radius: 50em;\n+ @include border-radius(50em);\n}\n.avatar-status {\nbottom: 0;\ndisplay: block;\nborder: 1px solid $white;\n- border-radius: 50em;\n+ @include border-radius(50em);\n// @include ltr {\n// right: 0;\nmargin-right: - ($avatar-xl-width / 2);\n}\n}\n-\n-.avatar-rounded {\n- border-radius: $border-radius;\n-}\n-\n-.avatar-square {\n- border-radius: 0;\n-}\n",
        "date": "03.01.2021 12:03:24",
        "repo": "coreui/coreui",
        "type": "refactor",
        "sim_msg": "feat: added ability to hide scroll and padding from Avatar Group overflow body(#2406)",
        "sim_diff": "diff --git a/src/avatar-group.scss b/src/avatar-group.scss @@ -93,6 +93,18 @@ $block: #{$fd-namespace}-avatar-group;\npadding: 1rem;\nwhite-space: initial;\n+ &--no-padding {\n+ padding: 0;\n+ }\n+\n+ &--no-horizontal-scroll {\n+ overflow-x: hidden;\n+ }\n+\n+ &--no-vertical-scroll {\n+ overflow-y: hidden;\n+ }\n+\n.#{$block}__item {\nmargin: 0.25rem;\n}\n"
    },
    {
        "msg": "refactor: use new handle feature for dialog",
        "diff": "diff --git a/packages/veui/src/components/Dialog.vue b/packages/veui/src/components/Dialog.vue @afterclose=\"handleAfterClose\"\n>\n<div\n- ref=\"content\"\n+ v-drag.translate=\"{\n+ disabled: !draggable,\n+ containment: '@window',\n+ handle: 'head',\n+ ready: dragReady\n+ }\"\nv-outside=\"outside\"\n:class=\"$c('dialog-content')\"\ntabindex=\"-1\"\n@keydown.esc=\"handleEscape\"\n>\n<div\n- v-drag:content.translate=\"{\n- draggable,\n- containment: '@window',\n- ready: dragReady\n- }\"\n+ ref=\"head\"\n:class=\"{\n[$c('dialog-content-head')]: true,\n[$c('dialog-draggable')]: draggable\n",
        "date": "28.06.2021 21:38:15",
        "repo": "ecomfe/veui",
        "type": "refactor",
        "sim_msg": "fix(QSelect): Use the correct user provided tabindex",
        "sim_diff": "diff --git a/ui/src/components/select/QSelect.js b/ui/src/components/select/QSelect.js @@ -195,9 +195,11 @@ export default Vue.extend({\n)\n},\n- selectedScope () {\n- const tabindex = this.focused === true ? this.tabindex : -1\n+ computedTabindex () {\n+ return this.focused === true ? this.tabindex : -1\n+ },\n+ selectedScope () {\nreturn this.innerValue.map((opt, i) => ({\nindex: i,\nopt,\n@@ -205,7 +207,7 @@ export default Vue.extend({\nselected: true,\nremoveAtIndex: this.__removeAtIndexAndFocus,\ntoggleOption: this.toggleOption,\n- tabindex\n+ tabindex: this.computedTabindex\n}))\n},\n@@ -669,15 +671,13 @@ export default Vue.extend({\n}\nif (this.useChips === true) {\n- const tabindex = this.focused === true ? this.tabindex : -1\n-\nreturn this.selectedScope.map((scope, i) => h(QChip, {\nkey: 'option-' + i,\nprops: {\nremovable: this.__isDisabled(scope.opt) !== true,\ndense: true,\ntextColor: this.color,\n- tabindex\n+ tabindex: this.computedTabindex\n},\non: {\nremove () { scope.removeAtIndex(i) }\n"
    },
    {
        "msg": "refactor: minor tweak to part fn exp",
        "diff": "diff --git a/packages/veui-theme-dls/components/NumberInput.js b/packages/veui-theme-dls/components/NumberInput.js @@ -32,12 +32,8 @@ config.defaults(\nspinner: ''\n},\nicons: {\n- increase ({ style }) {\n- return ICON_MAP[style].increase\n- },\n- decrease ({ style }) {\n- return ICON_MAP[style].decrease\n- }\n+ increase: ({ style }) => ICON_MAP[style].increase,\n+ decrease: ({ style }) => ICON_MAP[style].decrease\n}\n},\n'numberinput'\n",
        "date": "09.12.2019 17:28:33",
        "repo": "ecomfe/veui",
        "type": "refactor",
        "sim_msg": "feat: fixed QuantityInput border radius",
        "sim_diff": "diff --git a/package/src/components/QuantityInput/v1/QuantityInput.js b/package/src/components/QuantityInput/v1/QuantityInput.js @@ -22,8 +22,10 @@ const styles = () => ({\npadding: 0\n},\nquantityInput: {\n+ \"appearance\": \"none\",\n\"borderLeft\": \"1px solid #d9d9d9\",\n\"borderRight\": \"1px solid #d9d9d9\",\n+ \"borderRadius\": 0,\n\"boxSizing\": \"inherit\",\n\"color\": \"#3c3c3c\",\n\"fontSize\": \"12px\",\n"
    },
    {
        "msg": "refactor: update scrollbars styles for Windows browsers",
        "diff": "diff --git a/scss/sidebar/_sidebar-nav.scss b/scss/sidebar/_sidebar-nav.scss overflow-y: auto;\nlist-style: none;\n+ // Firefox scrollbars\n+ @-moz-document url-prefix() {\n+ scrollbar-width: thin;\n+ }\n+\n+ // Chrome, Edge scrollbars\n+\n+ /* total width */\n+ &::-webkit-scrollbar {\n+ width: 8px;\n+ background-color: transparent;\n+ }\n+\n+ /* background of the scrollbar except button or resizer */\n+ &::-webkit-scrollbar-track {\n+ background-color: transparent;\n+ }\n+\n+ /* scrollbar itself */\n+ &::-webkit-scrollbar-thumb {\n+ background-color: rgba(0, 0, 0, .375);\n+ @include border-radius(8px);\n+ }\n+\n+ /* set button(top and bottom of the scrollbar) */\n+ &::-webkit-scrollbar-button {\n+ display: none;\n+ }\n+\n.nav-title {\npadding: $sidebar-nav-title-padding-y $sidebar-nav-title-padding-x;\nmargin-top: $sidebar-nav-title-margin-top;\n",
        "date": "26.05.2021 00:27:26",
        "repo": "coreui/coreui",
        "type": "refactor",
        "sim_msg": "feat: :sparkles: contain overscrolling on lore, info, themes, and packs",
        "sim_diff": "diff --git a/public/resources/scss/index.scss b/public/resources/scss/index.scss @@ -862,6 +862,7 @@ input[type=\"search\"]::-webkit-search-cancel-button {\nz-index: 100;\nmax-height: calc(100vh - 48px - env(safe-area-inset-top, 0) - env(safe-area-inset-bottom, 0));\noverflow-y: auto;\n+ overscroll-behavior: contain;\nline-height: initial;\n.expander[aria-expanded] + & {\n@@ -940,6 +941,7 @@ input[type=\"search\"]::-webkit-search-cancel-button {\ntransition: transform 0.3s ease-in-out, visibility 0s linear 0.3s;\nz-index: 100;\noverflow-y: auto;\n+ overscroll-behavior: contain;\nline-height: initial;\nmax-height: calc(100vh - 48px - env(safe-area-inset-top, 0) - env(safe-area-inset-bottom, 0));\n@@ -1054,6 +1056,7 @@ input[type=\"search\"]::-webkit-search-cancel-button {\n.item-lore {\nmax-height: calc(100vh - 200px);\noverflow-y: auto;\n+ overscroll-behavior: contain;\nfont-size: 15px;\noverscroll-behavior-y: contain;\n"
    },
    {
        "msg": "refactor: use more semantic variable names, update changelog",
        "diff": "diff --git a/packages/veui/src/managers/rule.js b/packages/veui/src/managers/rule.js @@ -5,6 +5,7 @@ import max from './rules/max'\nimport min from './rules/min'\nimport numeric from './rules/numeric'\nimport pattern from './rules/pattern'\n+import type from './type'\nimport { isObject, isFunction } from 'lodash'\n/**\n@@ -31,15 +32,16 @@ export class Rule {\n}\n}\n- validate (val, rules, formData) {\n+ validate (val, rules, context) {\nif (!rules || !rules.length) {\nreturn true\n}\nrules = Array.isArray(rules) ? rules : [rules]\n+ let contextData = type.clone(context)\nlet results = rules.map(rule => {\nlet validator = this.ruleValidators[rule.name]\n- if (!validator.validate(val, rule.value, formData)) {\n+ if (!validator.validate(val, rule.value, contextData)) {\nlet realMessage = rule.message || validator.message\nreturn {\nname: rule.name,\n",
        "date": "14.10.2018 13:06:15",
        "repo": "ecomfe/veui",
        "type": "refactor",
        "sim_msg": "feat(netapp.order): preselect a first region\nref:",
        "sim_diff": "diff --git a/packages/manager/modules/netapp/src/order/controller.js b/packages/manager/modules/netapp/src/order/controller.js import JSURL from 'jsurl';\n-import { minBy, maxBy, uniq } from 'lodash-es';\n+import { maxBy, minBy, uniq } from 'lodash-es';\nimport { CatalogPricing } from '@ovh-ux/manager-models';\n-import { SIZE_FACTOR, SIZE_MULTIPLE, REGION_LABEL } from './constants';\n+import { REGION_LABEL, SIZE_FACTOR, SIZE_MULTIPLE } from './constants';\nconst findRegionConfiguration = (configurations) =>\nconfigurations.find(({ name }) => name === 'region')?.values;\n@@ -80,6 +80,8 @@ export default class OvhManagerNetAppOrderCtrl {\nconfigurations.find(({ name }) => name === 'region').values,\n),\n);\n+\n+ [this.selectedRegion] = this.regions;\n}\nonSizeStepFocus() {\n"
    },
    {
        "msg": "refactor: use const replace string",
        "diff": "diff --git a/src/use/emitter.js b/src/use/emitter.js import { getCurrentInstance } from 'vue'\nimport mitt from 'mitt'\n+const DISPATCH = 'dispatch'\n+const BROADCAST = 'broadcast'\n+\n+const wrapper = Symbol('wrapper')\n+\nconst emitter = mitt()\nexport function useEmitter() {\n@@ -9,11 +14,11 @@ export function useEmitter() {\nfunction on(type, handler) {\nconst handleWrapper = (e) => {\nconst { value, type, emitComponentInstance } = e\n- if (type === 'broadcast') {\n+ if (type === BROADCAST) {\nif (isChildComponent(currentComponentInstance, emitComponentInstance)) {\nhandler && handler(value)\n}\n- } else if (type === 'dispatch') {\n+ } else if (type === DISPATCH) {\nif (isChildComponent(emitComponentInstance, currentComponentInstance)) {\nhandler && handler(value)\n}\n@@ -23,13 +28,13 @@ export function useEmitter() {\n}\n// Save the real handler because the need to call off\n- handler.wrapper = handleWrapper\n+ handler[wrapper] = handleWrapper\nemitter.on(type, handleWrapper)\n}\nfunction broadcast(type, evt) {\nemitter.emit(type, {\n- type: 'broadcast',\n+ type: BROADCAST,\nemitComponentInstance: currentComponentInstance,\nvalue: evt\n})\n@@ -37,14 +42,14 @@ export function useEmitter() {\nfunction dispatch(type, evt) {\nemitter.emit(type, {\n- type: 'dispatch',\n+ type: DISPATCH,\nemitComponentInstance: currentComponentInstance,\nvalue: evt\n})\n}\nfunction off(type, handler) {\n- emitter.off(type, handler.wrapper)\n+ emitter.off(type, handler[wrapper])\n}\nfunction emit(type, evt) {\n",
        "date": "11.09.2020 20:19:55",
        "repo": "hug-sun/element3",
        "type": "refactor",
        "sim_msg": "test: make offline properties private",
        "sim_diff": "diff --git a/tests/old-unit/support/OfflineBuilder.js b/tests/old-unit/support/OfflineBuilder.js @@ -4,14 +4,19 @@ import ServerlessOffline from '../../../src/ServerlessOffline.js'\nimport { splitHandlerPathAndName } from '../../../src/utils/index.js'\nexport default class OfflineBuilder {\n+ #handlers = {}\n+\n+ #options = null\n+\n+ #serverlessBuilder = null\n+\nconstructor(serverlessBuilder, options) {\n- this.handlers = {}\n- this.options = options ?? {}\n- this.serverlessBuilder = serverlessBuilder ?? new ServerlessBuilder()\n+ this.#options = options ?? {}\n+ this.#serverlessBuilder = serverlessBuilder ?? new ServerlessBuilder()\n}\naddFunctionConfig(functionKey, functionConfig, handler) {\n- this.serverlessBuilder.addFunction(functionKey, functionConfig)\n+ this.#serverlessBuilder.addFunction(functionKey, functionConfig)\nconst [handlerPath, handlerName] = splitHandlerPathAndName(\nfunctionConfig.handler,\n@@ -19,7 +24,7 @@ export default class OfflineBuilder {\nconst _handlerPath = join('.', handlerPath)\n- this.handlers[_handlerPath] = {\n+ this.#handlers[_handlerPath] = {\n[handlerName]: handler,\n}\n@@ -27,21 +32,21 @@ export default class OfflineBuilder {\n}\naddCustom(prop, value) {\n- this.serverlessBuilder.addCustom(prop, value)\n+ this.#serverlessBuilder.addCustom(prop, value)\nreturn this\n}\naddApiKeys(keys) {\n- this.serverlessBuilder.addApiKeys(keys)\n+ this.#serverlessBuilder.addApiKeys(keys)\nreturn this\n}\nasync toObject() {\nconst serverlessOffline = new ServerlessOffline(\n- this.serverlessBuilder.toObject(),\n- this.options,\n+ this.#serverlessBuilder.toObject(),\n+ this.#options,\n)\nserverlessOffline._mergeOptions()\n"
    },
    {
        "msg": "refactor(readability): remove multline and add comma",
        "diff": "diff --git a/src/features/visualization/d3-viz.js b/src/features/visualization/d3-viz.js @@ -219,7 +219,10 @@ function d3Viz(rootNode) {\nnodeRoot.on(\"click.select\", () => {\nconst datum = select(d3Event.target).datum();\n- if(datum.data !== undefined) {props.sendData(datum.data)} //Used to send data back to parent component Visualizations.js\n+ if(datum.data !== undefined) {\n+ //Used to send data back to parent component Visualizations.js\n+ props.sendData(datum.data);\n+ };\nlet zoomToNode = datum;\nif(datum.height === 0 && datum.parent){\nzoomToNode = datum.parent;\n@@ -290,4 +293,4 @@ const findAncestor = (node, hierarchy) => {\nreturn res;\n};\n-export default d3Viz\n+export default d3Viz;\n",
        "date": "16.07.2019 10:59:19",
        "repo": "iqtlabs/crviz",
        "type": "refactor",
        "sim_msg": "fix: core.isEdgeFormat",
        "sim_diff": "diff --git a/src/lib/core.js b/src/lib/core.js @@ -1317,7 +1317,7 @@ export default function (context, pluginCallButtons, plugins, lang, options, _re\nlet result = true;\ndir = dir === 'front' ? 'previousSibling' : 'nextSibling';\nwhile (node && !util.isFormatElement(node) && !util.isWysiwygDiv(node)) {\n- if (!node[dir]) {\n+ if (!node[dir] || (util.isBreak(node[dir]) && !node[dir][dir])) {\nnode = node.parentNode;\n} else {\nresult = false;\n@@ -6081,7 +6081,7 @@ export default function (context, pluginCallButtons, plugins, lang, options, _re\n}\n// component\n- if (!selectRange && (range.startOffset === 0 || (selectionNode === formatEl ? !!formatEl.childNodes[range.startOffset] : false))) {\n+ if (!selectRange && formatEl && (range.startOffset === 0 || (selectionNode === formatEl ? !!formatEl.childNodes[range.startOffset] : false))) {\nconst sel = selectionNode === formatEl ? formatEl.childNodes[range.startOffset] : selectionNode;\nconst prev = formatEl.previousSibling;\n// select file component\n"
    },
    {
        "msg": "refactor(xhr_wrapper): use Object.assign instead of {...Object} syntax\nrefactor(xhr_wrapper): use Object.assign instead of {...Object} syntax,\nreturn catched error from fetch()",
        "diff": "diff --git a/src/common/api/utils/xhr_wrapper.js b/src/common/api/utils/xhr_wrapper.js @@ -43,12 +43,13 @@ export default function requestWrapper (method) {\ndefaults.body = data\n}\n- const paramsObj = {...defaults, headers: {...params, ...defaults.headers}}\n+ const paramsObj = Object.assign({}, defaults, {headers: params})\nreturn fetch(url, paramsObj)\n.then(checkStatus)\n.then(parseJSON)\n.catch(err => {\nconsole.error(err)\n+ return err\n})\n}\n}\n",
        "date": "14.08.2017 23:53:10",
        "repo": "metnew/suicrux",
        "type": "refactor",
        "sim_msg": "feat: auto add headers.host",
        "sim_diff": "diff --git a/lib/utils/request-wrapper.js b/lib/utils/request-wrapper.js @@ -100,11 +100,15 @@ const requestWrapper = (url, options) => {\noptions.headers.server = 'RSSHub';\ntry {\n+ const urlHandler = new URL(url);\n// referer\nif (!options.headers.referer && !options.headers.Referer) {\n- const urlHandler = new URL(url);\noptions.headers.referer = urlHandler.origin;\n}\n+ // host\n+ if (!options.headers.host && !options.headers.Host) {\n+ options.headers.host = urlHandler.host;\n+ }\n} catch (e) {\n// do nothing\n}\n"
    },
    {
        "msg": "refactor: inline `lineHeight`",
        "diff": "diff --git a/packages/vega-scenegraph/src/util/text.js b/packages/vega-scenegraph/src/util/text.js @@ -138,14 +138,13 @@ export function offset(item) {\n// perform our own font baseline calculation\n// why? not all browsers support SVG 1.1 'alignment-baseline' :(\nvar baseline = item.baseline,\n- h = fontSize(item),\n- lh = lineHeight(item);\n+ h = fontSize(item);\nreturn Math.round(\n- baseline === 'line-top' ? 0.79.h + (lh-h) / 2.0 :\n+ baseline === 'line-top' ? 0.79.h + (lineHeight(item)-h) / 2.0 :\nbaseline === 'top' ? 0.79*h :\nbaseline === 'middle' ? 0.30*h :\nbaseline === 'bottom' ? -0.21*h :\n- baseline === 'line-bottom' ? -0.21*h - (lh-h) / 2.0 : 0\n+ baseline === 'line-bottom' ? -0.21*h - (lineHeight(item)-h) / 2.0 : 0\n);\n}\n",
        "date": "01.03.2020 15:04:19",
        "repo": "vega/vega",
        "type": "refactor",
        "sim_msg": "fix: setting null for a font style on a theme",
        "sim_diff": "diff --git a/core/renderers/common/constants.js b/core/renderers/common/constants.js @@ -622,18 +622,17 @@ ConstantProvider.prototype.setDynamicProperties_ = function(theme) {\n* @protected\n*/\nConstantProvider.prototype.setFontConstants_ = function(theme) {\n- this.FIELD_TEXT_FONTFAMILY =\n- theme.fontStyle && theme.fontStyle['family'] !== undefined ?\n- theme.fontStyle['family'] :\n- this.FIELD_TEXT_FONTFAMILY;\n- this.FIELD_TEXT_FONTWEIGHT =\n- theme.fontStyle && theme.fontStyle['weight'] !== undefined ?\n- theme.fontStyle['weight'] :\n- this.FIELD_TEXT_FONTWEIGHT;\n- this.FIELD_TEXT_FONTSIZE =\n- theme.fontStyle && theme.fontStyle['size'] !== undefined ?\n- theme.fontStyle['size'] :\n- this.FIELD_TEXT_FONTSIZE;\n+ if (theme.fontStyle && theme.fontStyle['family']) {\n+ this.FIELD_TEXT_FONTFAMILY = theme.fontStyle['family'];\n+ }\n+\n+ if (theme.fontStyle && theme.fontStyle['weight']) {\n+ this.FIELD_TEXT_FONTWEIGHT = theme.fontStyle['weight'];\n+ }\n+\n+ if (theme.fontStyle && theme.fontStyle['size']) {\n+ this.FIELD_TEXT_FONTSIZE = theme.fontStyle['size'];\n+ }\nconst fontMetrics = dom.measureFontMetrics(\n'Hg', this.FIELD_TEXT_FONTSIZE + 'pt', this.FIELD_TEXT_FONTWEIGHT,\n"
    },
    {
        "msg": "refactor(replaceIncludes): streamlined code",
        "diff": "diff --git a/src/jscad/replaceIncludes.js b/src/jscad/replaceIncludes.js @@ -21,10 +21,10 @@ export function replaceIncludes (text, relpath, memFs) {\nconst withoutIncludes = replaceIncludesInAst(moduleAst)\nconst modulePromises = foundIncludes.map(function (uri, index) {\n- const promise = includeJscadSync(relpath, uri, memFs)\n- return promise.then(function (includedScript) {\n- return replaceIncludes(includedScript, relpath, memFs)\n- })\n+ return includeJscadSync(relpath, uri, memFs)\n+ .then(\n+ includedScript => replaceIncludes(includedScript, relpath, memFs),\n+ err => console.error('fail', err))\n})\nPromise.all(modulePromises).then(function (resolvedModules) {\nconst resolvedScript = resolvedModules.concat(withoutIncludes).join('\\n')\n",
        "date": "19.04.2017 00:21:41",
        "repo": "jscad/openjscad.org",
        "type": "refactor",
        "sim_msg": "fix: replaceRules",
        "sim_diff": "diff --git a/lib/config.js b/lib/config.js @@ -910,7 +910,7 @@ exports.extend = function (newConf) {\nif (newConf.replaceExistRule === false) {\nconfig.replaceExistRule = false;\n} else {\n- config.replaceExistValue = newConf.replaceRules;\n+ config.replaceExistRule = newConf.replaceRules;\n}\nif (newConf.replaceExistValue === false) {\nconfig.replaceExistValue = false;\n"
    },
    {
        "msg": "refactor: support off method",
        "diff": "diff --git a/src/use/emitter.js b/src/use/emitter.js import { getCurrentInstance } from 'vue'\n+import { capitalize } from 'element-ui/src/utils/util'\n+const EVENT_NAME_KEY = Symbol('ELEMENT_EVENTS')\nexport function useEmitter() {\nreturn {\ndispatch: dispatch(),\nbroadcast: broadcast(),\n- on: on()\n+ on: on(),\n+ off: off()\n}\n}\n@@ -12,12 +15,17 @@ function on() {\nconst instance = getCurrentInstance()\nreturn (originalEventName, callback) => {\n- const eventName = 'on' + originalEventName.charAt(0).toUpperCase() + originalEventName.slice(1)\n+ const eventName = 'on' + capitalize(originalEventName)\nif (!instance.vnode.props) {\ninstance.vnode.props = {}\n}\n+ if (!instance.vnode.props[EVENT_NAME_KEY]) {\n+ instance.vnode.props[EVENT_NAME_KEY] = new Set()\n+ }\n+ instance.vnode.props[EVENT_NAME_KEY].add(eventName)\n+\nif (!instance.vnode.props[eventName]) {\ninstance.vnode.props[eventName] = (...params) => {\nconst callbacks = instance.vnode.props[eventName]['__events']\n@@ -33,6 +41,41 @@ function on() {\n}\n}\n+function off() {\n+ const instance = getCurrentInstance()\n+\n+ return (originalEventName, callback) => {\n+ const eventNameList = instance.vnode.props && instance.vnode.props[EVENT_NAME_KEY]\n+ if (!eventNameList || !eventNameList.size) {\n+ return\n+ }\n+\n+ if (!originalEventName) {\n+ eventNameList.forEach(eventName => {\n+ delete instance.vnode.props[eventName]\n+ })\n+ eventNameList.clear()\n+ return\n+ }\n+\n+ const eventName = 'on' + capitalize(originalEventName)\n+\n+ if (!callback) {\n+ delete instance.vnode.props[eventName]\n+ eventNameList.delete(eventName)\n+ return\n+ }\n+\n+ const handlers = instance.vnode.props[eventName] && instance.vnode.props[eventName]['__events']\n+ if (handlers && handlers.length) {\n+ const index = handlers.indexOf(callback)\n+ if (index > -1) {\n+ handlers.splice(index, 1)\n+ }\n+ }\n+ }\n+}\n+\nfunction dispatch() {\nconst instance = getCurrentInstance()\n",
        "date": "18.08.2020 15:58:46",
        "repo": "hug-sun/element3",
        "type": "refactor",
        "sim_msg": "fix(QResizeObserver): protect against weird use-cases where targetEl cannot be determined",
        "sim_diff": "diff --git a/ui/src/components/resize-observer/QResizeObserver.js b/ui/src/components/resize-observer/QResizeObserver.js -import { h, defineComponent, onMounted, onBeforeUnmount, getCurrentInstance } from 'vue'\n+import { h, defineComponent, onMounted, onBeforeUnmount, getCurrentInstance, nextTick } from 'vue'\nimport useCanRender from '../../composables/private/use-can-render.js'\n@@ -9,7 +9,7 @@ const resizeProps = hasObserver === true\n? {}\n: {\nstyle: 'display:block;position:absolute;top:0;left:0;right:0;bottom:0;height:100%;width:100%;overflow:hidden;pointer-events:none;z-index:-1;',\n- url: '#blank'\n+ url: 'about:blank'\n}\nexport default defineComponent({\n@@ -41,6 +41,7 @@ export default defineComponent({\nfunction onResize () {\ntimer = void 0\n+ if (targetEl) {\nconst { offsetWidth: width, offsetHeight: height } = targetEl\nif (width !== size.width || height !== size.height) {\n@@ -48,6 +49,7 @@ export default defineComponent({\nemit('resize', size)\n}\n}\n+ }\nconst vm = getCurrentInstance()\n@@ -58,12 +60,15 @@ export default defineComponent({\nlet observer\nonMounted(() => {\n+ nextTick(() => {\ntargetEl = vm.proxy.$el.parentNode\n+ if (targetEl) {\nobserver = new ResizeObserver(trigger)\nobserver.observe(targetEl)\n-\nonResize()\n+ }\n+ })\n})\nonBeforeUnmount(() => {\n@@ -104,14 +109,15 @@ export default defineComponent({\nif (targetEl && targetEl.contentDocument) {\ncurDocView = targetEl.contentDocument.defaultView\ncurDocView.addEventListener('resize', trigger, listenOpts.passive)\n- }\n-\nonResize()\n}\n+ }\nonMounted(() => {\n+ nextTick(() => {\ntargetEl = vm.proxy.$el\n- onObjLoad()\n+ targetEl && onObjLoad()\n+ })\n})\nonBeforeUnmount(cleanup)\n"
    },
    {
        "msg": "refactor: add RTL styling for inputs",
        "diff": "diff --git a/scss/_reboot.scss b/scss/_reboot.scss @@ -554,17 +554,16 @@ legend {\n// 1. A few input types should stay LTR\n// See https://rtlstyling.com/posts/rtl-styling#form-inputs\n-// 2. RTL only output\n-// See https://rtlcss.com/learn/usage-guide/control-directives/#raw\n-/* rtl:raw:\n+*[dir=\"rtl\"] {\n[type=\"tel\"],\n[type=\"url\"],\n[type=\"email\"],\n[type=\"number\"] {\ndirection: ltr;\n}\n-*/\n+}\n+\n// Remove the inner padding in Chrome and Safari on macOS.\n",
        "date": "23.06.2021 17:06:24",
        "repo": "coreui/coreui",
        "type": "refactor",
        "sim_msg": "perf: :fire: remove unused styles\n#top_navigation doesn't exist",
        "sim_diff": "diff --git a/public/resources/scss/index.scss b/public/resources/scss/index.scss @@ -522,11 +522,6 @@ input[type=\"search\"]::-webkit-search-cancel-button {\nvertical-align: top;\n}\n-#top_navigation .tab.active {\n- background-color: rgba(0, 0, 0, 0.1);\n- cursor: default;\n-}\n-\n#packs-button,\n#themes-button {\n-webkit-appearance: none;\n"
    },
    {
        "msg": "refactor(webpack_config/config): read index.html file for SSR using DIST_PATH env variable, some style fixes, fix SSR of Root component",
        "diff": "diff --git a/src/server/ssr/index.js b/src/server/ssr/index.js import path from 'path'\nimport fs from 'fs'\n+import chalk from 'chalk'\n// React-related stuff\nimport React from 'react'\nimport {render} from 'rapscallion'\n-import Helmet from 'react-helmet'\n-import {StaticRouter} from 'react-router'\n+// import Helmet from 'react-helmet'\nimport {ServerStyleSheet, StyleSheetManager} from 'styled-components'\n// Application\n-// Do you remember that we use webpack aliases provided by cool babel plugin?\n-// (take a look at .babelrc)\nimport {configureStore, configureRootComponent} from 'common/index'\n-//\n-const language = process.env.APP_LANGUAGE || 'en'\n-const distPath = `../../../dist/${language}`\n-// read index.html and assign a variable\n-const indexPath = path.join(__dirname, `${distPath}/index.html`)\n-const indexHTMLFileContent = (function () {\n+// read index.html and assign to a variable\n+const indexPath = path.join(`${process.env.DIST_PATH}/index.html`)\n+const htmlFile = (function () {\ntry {\nreturn fs.readFileSync(indexPath, 'utf8')\n} catch (e) {\n- throw new Error(`Are you sure you have already built app? ${e}`)\n+ console.error(chalk.bgRed(`Are you sure you have already built app? ${e}`))\n+ console.log(chalk.bgCyan('Application is working without SSR'))\n+ return false\n}\n})()\n-\nexport default function (req, res) {\n+ if (!htmlFile) {\n+ // NOTE: @Metnew (29.07.2017): Here must be a requirement of ejs/jade template\n+ // app probably needs in template engine!\n+ const warning = `\n+ <h1>Do you remember that you don't have SSR?</h1>\n+ <h2>Why it happens?</h2>\n+ <h3>Probably, because of:</h3>\n+ <h4>\n+ <ul>\n+ <li>No \"index.html\" in the dist folder. e.g.: You don't have already built app.</li>\n+ <li>Path to dist folder with client app is invalid, check process.env.DIST_PATH in \"webpack_config/server/webpack.base.\"</li>\n+ <pre>process.env.path === ${process.env.DIST_PATH}</pre>\n+ <pre>URL: ${req.url}</pre>\n+ </ul>\n+ </h4>\n+ `\n+ return res.send(warning)\n+ }\n// Auth-related stuff\n// NOTE: check `server/express/index.js` for more info\nconst {user} = req\nconst {isLoggedIn, token} = user\n- const initialState = isLoggedIn\n- ? {me: {auth: {isLoggedIn, token}}}\n- : {}\n+ const initialState = isLoggedIn ? {me: {auth: {isLoggedIn, token}}} : {}\n//\nconst sheet = new ServerStyleSheet()\n+ const location = req.url\nconst context = {}\nconst store = configureStore(initialState)\n- const RootComponent = configureRootComponent(store)\n+ const RootComponent = configureRootComponent({\n+ store,\n+ SSR: {location, context}\n+ })\nconst App = (\n<StyleSheetManager sheet={sheet.instance}>\n- <StaticRouter url={req.url} context={context}>\n{RootComponent}\n- </StaticRouter>\n</StyleSheetManager>\n)\n//\n@@ -54,7 +68,7 @@ export default function(req, res) {\nfunction renderFullPage ({html, css, preloadedState}) {\n// console.log(indexHTMLFileContent)\n- const indexHTMLFileContentWithRedux = indexHTMLFileContent.replace(\n+ const htmlWithRedux = htmlFile.replace(\n'<div id=\"app\"></div>',\n`<div id=\"app\">${html}</div><script>\nwindow.__PRELOADED_STATE__ = ${JSON.stringify(preloadedState).replace(\n@@ -63,9 +77,9 @@ function renderFullPage ({html, css, preloadedState}) {\n)}\n</script><span style=\"display:none;\">Server-side rendering!</span>`\n)\n- const indexHTMLFileContentWithStylesAndRedux = indexHTMLFileContentWithRedux.replace(\n+ const styledHtmlWithRedux = htmlWithRedux.replace(\n'<meta name=\"ssr-styles\"/>',\ncss\n)\n- return indexHTMLFileContentWithStylesAndRedux\n+ return styledHtmlWithRedux\n}\n",
        "date": "04.08.2017 14:02:33",
        "repo": "metnew/suicrux",
        "type": "refactor",
        "sim_msg": "fix: prevent replacement patterns",
        "sim_diff": "diff --git a/src/server/renderers/ssrRenderer.js b/src/server/renderers/ssrRenderer.js @@ -12,7 +12,7 @@ export default function renderSsrPage(store, html, template, noindex) {\n.replace('<!--server:html-->', html)\n.replace(\n'<!--server:scripts-->',\n- `<script>\n+ () => `<script>\n// WARNING: See the following for security issues around embedding JSON in HTML:\n// http://redux.js.org/docs/recipes/ServerRendering.html#security-considerations\nwindow.__PRELOADED_STATE__ = ${JSON.stringify(preloadedState)\n"
    },
    {
        "msg": "refactor: refactor radio-button component",
        "diff": "diff --git a/packages/element3/packages/radio-button/RadioButton.vue b/packages/element3/packages/radio-button/RadioButton.vue />\n<span\nclass=\"el-radio-button__inner\"\n- :style=\"style\"\n+ :style=\"isChecked ? style : null\"\n@keydown.stop\n>\n<slot>{{ label }}</slot>\n@@ -75,7 +75,7 @@ export default {\ntabIndex,\nclasses,\nisChecked,\n- style: isChecked ? style : null\n+ style\n}\n}\n}\n",
        "date": "18.12.2020 14:41:33",
        "repo": "hug-sun/element3",
        "type": "refactor",
        "sim_msg": "fix(form-radio): extra this in template",
        "sim_diff": "diff --git a/lib/components/form-radio.vue b/lib/components/form-radio.vue <label v-for=\"(option, idx) in formOptions\"\n:class=\"buttons ? btnLabelClasses(option, idx) : labelClasses\"\n:key=\"idx\"\n- :aria-pressed=\"buttons ? (option.value === this.localValue ? 'true' : 'false') : null\"\n+ :aria-pressed=\"buttons ? (option.value === localValue ? 'true' : 'false') : null\"\n>\n<input :id=\"id ? (id + '__BV_radio_' + idx) : null\"\n:class=\"(custom && !buttons) ? 'custom-control-input' : null\"\n"
    },
    {
        "msg": "refactor: refactor invalid message slot",
        "diff": "diff --git a/packages/veui/src/components/Uploader.vue b/packages/veui/src/components/Uploader.vue <slot name=\"desc\"/>\n</span>\n<span :class=\"$c('uploader-error')\">\n- <template v-if=\"error.typeInvalid\">\n- <slot name=\"type-invalid\">\n- <veui-icon :name=\"icons.alert\"/>{{ t('fileTypeInvalid') }}\n- </slot>\n- </template>\n- <template v-if=\"error.sizeInvalid\">\n- <slot name=\"size-invalid\">\n- <veui-icon :name=\"icons.alert\"/>{{ t('fileSizeInvalid') }}\n- </slot>\n- </template>\n- <template v-if=\"error.countOverflow\">\n- <slot name=\"count-overflow\">\n- <veui-icon :name=\"icons.alert\"/>{{ t('tooManyFiles') }}\n- </slot>\n- </template>\n- <template v-if=\"error.customValidationInvalid\">\n- <slot name=\"custom-validation-invalid\">\n- <veui-icon :name=\"icons.alert\"/>{{ customValidationMessage }}\n+ <slot\n+ name=\"invalid\"\n+ :error=\"error\"\n+ >\n+ <veui-icon\n+ v-if=\"validationMessage\"\n+ :name=\"icons.alert\"\n+ />{{\n+ validationMessage\n+ }}\n</slot>\n- </template>\n</span>\n</div>\n<transition-group\nv-if=\"type === 'image'\"\n:class=\"$c('uploader-error')\"\n>\n- <template v-if=\"error.typeInvalid\">\n- <slot name=\"type-invalid\">\n- <veui-icon :name=\"icons.alert\"/>{{ t('fileTypeInvalid') }}\n- </slot>\n- </template>\n- <template v-if=\"error.sizeInvalid\">\n- <slot name=\"size-invalid\">\n- <veui-icon :name=\"icons.alert\"/>{{ t('fileSizeInvalid') }}\n- </slot>\n- </template>\n- <template v-if=\"error.countOverflow\">\n- <slot name=\"count-overflow\">\n- <veui-icon :name=\"icons.alert\"/>{{ t('tooManyFiles') }}\n- </slot>\n- </template>\n- <template v-if=\"error.customValidationInvalid\">\n- <slot name=\"custom-validation-invalid\">\n- <veui-icon :name=\"icons.alert\"/>{{ customValidationMessage }}\n+ <slot\n+ name=\"invalid\"\n+ :error=\"error\"\n+ >\n+ <veui-icon\n+ v-if=\"validationMessage\"\n+ :name=\"icons.alert\"\n+ />{{\n+ validationMessage\n+ }}\n</slot>\n- </template>\n</span>\n<iframe\nv-if=\"requestMode === 'iframe' && submitting\"\n@@ -642,6 +624,18 @@ export default {\n(file.status === 'success' || !file.status) && !file.toBeUploaded\n)\n.map(file => omit(file, ['status', 'toBeUploaded']))\n+ },\n+ validationMessage () {\n+ let messageMap = {\n+ typeInvalid: this.t('fileTypeInvalid'),\n+ sizeInvalid: this.t('fileSizeInvalid'),\n+ countOverflow: this.t('tooManyFiles'),\n+ customValidationInvalid: this.customValidationMessage\n+ }\n+ return Object.keys(this.error)\n+ .map(key => (this.error[key] ? messageMap[key] : ''))\n+ .filter(i => !!i)\n+ .join(', ')\n}\n},\nwatch: {\n",
        "date": "14.11.2019 21:22:54",
        "repo": "ecomfe/veui",
        "type": "refactor",
        "sim_msg": "feat: add auto-y placement for tooltip",
        "sim_diff": "diff --git a/src/common/ui/tooltip.vue b/src/common/ui/tooltip.vue <template>\n- <span class=\"tooltip\">\n+ <span class=\"tooltip\" :class=\"{ disabled }\" @mouseenter=\"onEnter\" @mouseleave=\"onLeave\" @click.capture=\"onClick\">\n<slot></slot>\n- <div class=\"tooltip-title\" :class=\"`tooltip-${placement} tooltip-align-${align}`\">\n+ <div v-if=\"hovered && title && !disabled\" class=\"tooltip-wrap\" :class=\"`tooltip-${adjustedPlacement} tooltip-align-${align}`\">\n<i></i>\n- <div v-text=\"title\"></div>\n+ <div><div class=\"tooltip-text\" v-text=\"title\"></div></div>\n</div>\n</span>\n</template>\n@@ -14,53 +14,79 @@ export default {\ntitle: String,\nplacement: {\ntype: String,\n- default: 'up',\n+ default: 'auto-y',\n},\nalign: {\ntype: String,\ndefault: 'center', // start | center | end\n},\n+ disabled: Boolean,\n+ },\n+ data() {\n+ return {\n+ hovered: false,\n+ adjustedPlacement: null,\n+ };\n+ },\n+ methods: {\n+ adjustPlacement() {\n+ const { placement } = this;\n+ if (placement === 'auto-y') {\n+ const rect = this.$el.getBoundingClientRect();\n+ this.adjustedPlacement = rect.bottom < document.body.clientHeight / 2 ? 'down' : 'up';\n+ } else {\n+ this.adjustedPlacement = placement;\n+ }\n+ },\n+ onEnter() {\n+ this.adjustPlacement();\n+ this.hovered = true;\n+ },\n+ onLeave() {\n+ this.hovered = false;\n+ },\n+ onClick(e) {\n+ if (this.disabled) e.stopPropagation();\n+ },\n},\n};\n</script>\n<style>\n$bg-color: rgba(0,0,0,.8);\n-$border-side: 4px solid transparent;\n+$border-side-width: 4px;\n+$border-side: $border-side-width solid transparent;\n$border-base: 6px solid $bg-color;\n$gap: 10px;\n+$max-width: 250px;\n.tooltip {\ndisplay: inline-block;\nposition: relative;\n- &-title {\n- display: none;\n+ &-wrap {\nposition: absolute;\ncolor: white;\nfont-size: 12px;\n+ line-height: 1.4;\nz-index: 100;\n- .tooltip:hover & {\n- display: block;\n- }\n> * {\nposition: absolute;\n- white-space: nowrap;\n}\n> div {\n- padding: 8px;\n- background: $bg-color;\n- border-radius: 6px;\n+ width: $max-width;\n+ height: 0;\n}\n&.tooltip-up,\n&.tooltip-down {\nleft: 50%;\n> i {\n- transform: translateX(-50%);\n+ margin-left: -$border-side-width;\n}\n&.tooltip-align-center {\n> div {\nleft: 50%;\n- transform: translateX(-50%);\n+ margin-left: calc(-$max-width / 2);\n+ text-align: center;\n}\n}\n&.tooltip-align-start {\n@@ -71,6 +97,7 @@ $gap: 10px;\n&.tooltip-align-end {\n> div {\nright: -10px;\n+ text-align: right;\n}\n}\n}\n@@ -83,8 +110,8 @@ $gap: 10px;\nborder-left: $border-side;\nborder-right: $border-side;\n}\n- > div {\n- bottom: 0;\n+ .tooltip-text {\n+ transform: translateY(-100%);\n}\n}\n&.tooltip-down {\n@@ -96,14 +123,12 @@ $gap: 10px;\nborder-right: $border-side;\nborder-bottom: $border-base;\n}\n- > div {\n- top: 0;\n- }\n}\n&.tooltip-left,\n&.tooltip-right {\ntop: 50%;\n- > * {\n+ > i,\n+ .tooltip-text {\ntransform: translateY(-50%);\n}\n> i {\n@@ -116,6 +141,7 @@ $gap: 10px;\nright: 100%;\n> div {\nright: 100%;\n+ text-align: right;\n}\n> i {\nleft: 100%;\n@@ -134,5 +160,12 @@ $gap: 10px;\n}\n}\n}\n+ &-text {\n+ display: inline-block;\n+ padding: 8px;\n+ background: $bg-color;\n+ border-radius: 6px;\n+ text-align: left;\n+ }\n}\n</style>\n"
    },
    {
        "msg": "refactor(progress): use  api",
        "diff": "diff --git a/packages/chakra-ui-core/src/CProgress/CProgress.js b/packages/chakra-ui-core/src/CProgress/CProgress.js import { css, keyframes } from 'emotion'\nimport CBox from '../CBox'\n-import { generateStripe, valueToPercent, forwardProps } from '../utils'\n-import { baseProps } from '../config/props'\n+import { generateStripe, valueToPercent, createStyledAttrsMixin } from '../utils'\nconst stripe = keyframes({\nfrom: { backgroundPosition: '1rem 0' },\n@@ -39,18 +38,20 @@ const progressbarSizes = {\n*/\nconst CProgressLabel = {\nname: 'CProgressLabel',\n- props: baseProps,\n- render (h) {\n+ functional: true,\n+ render (h, { data, slots, ...rest }) {\nreturn h(CBox, {\n+ ...rest,\nprops: {\n- textAlign: 'center',\n- width: '100%',\n- ...forwardProps(this.$props)\n+ as: data.attrs.as\n},\nattrs: {\n+ textAlign: 'center',\n+ width: '100%',\n+ ...data.attrs,\n'data-chakra-component': 'CProgressLabel'\n}\n- }, this.$slots.default)\n+ }, slots().default)\n}\n}\n@@ -64,23 +65,22 @@ const CProgressLabel = {\n*/\nconst CProgressTrack = {\nname: 'CProgressTrack',\n+ functional: true,\nprops: {\n- ...baseProps,\nsize: [String, Number, Array]\n},\n- render (h) {\n+ render (h, { props, slots, data, ...rest }) {\nreturn h(CBox, {\n- props: {\n+ ...rest,\n+ attrs: {\npos: 'relative',\n- height: progressbarSizes[this.size || 'md'],\n+ height: progressbarSizes[props.size || 'md'],\noverflow: 'hidden',\nw: '100%',\n- ...forwardProps(this.$props)\n- },\n- attrs: {\n+ ...data.attrs,\n'data-chakra-component': 'CProgressTrack'\n}\n- }, this.$slots.default)\n+ }, slots().default)\n}\n}\n@@ -93,9 +93,8 @@ const CProgressTrack = {\n* @see Docs https://vue.chakra-ui.com/progress\n*/\nconst CProgressIndicator = {\n- name: 'CProgressIndicator',\n+ mixins: [createStyledAttrsMixin('CProgressIndicator')],\nprops: {\n- ...baseProps,\nisIndeterminate: Boolean,\nmin: Number,\nmax: Number,\n@@ -104,23 +103,27 @@ const CProgressIndicator = {\ncomputed: {\npercent () {\nreturn valueToPercent(this.value, this.min, this.max)\n- }\n},\n- render (h) {\n- return h(CBox, {\n- props: {\n+ componentStyles () {\n+ return {\nheight: '100%',\ntransition: 'all 0.3s',\n- width: `${this.percent}%`,\n- ...forwardProps(this.$props)\n+ width: `${this.percent}%`\n+ }\n+ }\n},\n+ render (h) {\n+ return h(this.as || 'div', {\n+ class: [this.className],\nattrs: {\n+ ...this.computedAttrs,\n'aria-valuemax': this.max,\n'aria-valuemin': this.min,\n'aria-valuenow': this.isIndeterminate ? null : this.value,\nrole: 'progressbar',\n'data-chakra-component': 'CProgressIndicator'\n- }\n+ },\n+ on: this.computedListeners\n}, this.$slots.default)\n}\n}\n@@ -135,9 +138,9 @@ const CProgressIndicator = {\n*/\nconst CProgress = {\nname: 'CProgress',\n+ inheritAttrs: false,\ninject: ['$chakraColorMode'],\nprops: {\n- ...baseProps,\ncolor: {\ntype: String,\ndefault: 'blue'\n@@ -201,13 +204,13 @@ const CProgress = {\nreturn h(CProgressTrack, {\nprops: {\n- size: this.size,\n- bg: trackColor[this.colorMode],\n- borderRadius: _borderRadius,\n- ...forwardProps(this.$props)\n+ size: this.size\n},\nattrs: {\n- 'data-chakra-component': 'CProgress'\n+ bg: trackColor[this.colorMode],\n+ borderRadius: _borderRadius,\n+ 'data-chakra-component': 'CProgress',\n+ ...this.$attrs\n}\n}, [\nh(CProgressIndicator, {\n@@ -218,7 +221,9 @@ const CProgress = {\nprops: {\nmin: this.min,\nmax: this.max,\n- value: this.value,\n+ value: this.value\n+ },\n+ attrs: {\nbg: indicatorColor[this.colorMode],\nborderRadius: this.__borderRadius,\n...this.isIndeterminate && {\n",
        "date": "11.07.2020 18:26:59",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "refactor",
        "sim_msg": "feat(Upload/Jumper):\nadd dismiss button\nclose the jumper when submitting links/files",
        "sim_diff": "diff --git a/components/core/Upload/Jumper.js b/components/core/Upload/Jumper.js @@ -6,11 +6,14 @@ import * as Logging from \"~/common/logging\";\nimport * as Strings from \"~/common/strings\";\nimport * as Styles from \"~/common/styles\";\nimport * as Constants from \"~/common/constants\";\n+import * as SVG from \"~/common/svg\";\nimport { css } from \"@emotion/react\";\nimport { useUploadContext } from \"~/components/core/Upload/Provider\";\n+import { AnimatePresence, motion } from \"framer-motion\";\nconst STYLES_JUMPER_HEADER = css`\n+ ${Styles.HORIZONTAL_CONTAINER_CENTERED};\npadding: 17px 20px 15px;\n`;\n@@ -59,6 +62,11 @@ const STYLES_FILES_UPLOAD_WRAPPER = css`\npadding-bottom: 55px;\n`;\n+const STYLES_JUMPER_DISMISS_BUTTON = (theme) => css`\n+ ${Styles.BUTTON_RESET};\n+ color: ${theme.semantic.textGray};\n+`;\n+\nexport function UploadJumper({ data }) {\nconst [{ isUploadJumperVisible }, { upload, uploadLink, hideUploadJumper }] = useUploadContext();\n@@ -70,6 +78,7 @@ export function UploadJumper({ data }) {\nconst handleUpload = (e) => {\nconst { files } = FileUtilities.formatUploadedFiles({ files: e.target.files });\nupload({ files, slate: data });\n+ hideUploadJumper();\n};\nconst handleUploadLink = () => {\n@@ -84,8 +93,10 @@ export function UploadJumper({ data }) {\nsetState((prev) => ({ ...prev, urlError: true }));\nreturn;\n}\n+\nuploadLink({ url: state.url, slate: data });\nsetState({ url: \"\", urlError: false });\n+ hideUploadJumper();\n};\nconst handleChange = (e) => {\n@@ -94,10 +105,27 @@ export function UploadJumper({ data }) {\nreturn (\n<>\n- {isUploadJumperVisible && <div css={STYLES_JUMPER_OVERLAY} />}\n+ <AnimatePresence>\n+ {isUploadJumperVisible && (\n+ <motion.div\n+ initial={{ y: 10, opacity: 0 }}\n+ animate={{ y: 0, opacity: 1 }}\n+ exit={{ y: 10, opacity: 0 }}\n+ transition={{ duration: 0.4, ease: \"easeInOut\" }}\n+ css={STYLES_JUMPER_OVERLAY}\n+ />\n+ )}\n+ </AnimatePresence>\n<Jumper.Root isOpen={isUploadJumperVisible} onClose={hideUploadJumper}>\n<Jumper.Item css={STYLES_JUMPER_HEADER}>\n<System.H5 color=\"textBlack\">Upload</System.H5>\n+ <button\n+ style={{ marginLeft: \"auto\" }}\n+ css={STYLES_JUMPER_DISMISS_BUTTON}\n+ onClick={hideUploadJumper}\n+ >\n+ <SVG.Dismiss width={20} style={{ display: \"block\" }} />\n+ </button>\n</Jumper.Item>\n<Jumper.Divider />\n<Jumper.Item css={STYLES_LINK_UPLOAD_WRAPPER}>\n"
    },
    {
        "msg": "refactor(SentenTree): add options spec",
        "diff": "diff --git a/components/SentenTree/index.js b/components/SentenTree/index.js @@ -3,6 +3,46 @@ import { SentenTreeBuilder,\nSentenTreeVis } from 'sententree/dist/SentenTree';\nexport default class SentenTree extends VisComponent {\n+ static get options () {\n+ return [\n+ {\n+ name: 'data',\n+ description: 'The data table.',\n+ type: 'table',\n+ format: 'objectlist'\n+ },\n+ {\n+ name: 'id',\n+ description: 'The field containing the identifier of each row.',\n+ type: 'string',\n+ domain: {\n+ mode: 'field',\n+ from: 'data',\n+ fieldTypes: ['string', 'integer', 'number']\n+ }\n+ },\n+ {\n+ name: 'text',\n+ description: 'The field containing the text sample.',\n+ domain: {\n+ mode: 'field',\n+ from: 'data',\n+ fieldTypes: ['string']\n+ }\n+ },\n+ {\n+ name: 'count',\n+ description: 'The field containing the count for each text sample.',\n+ type: 'string',\n+ domain: {\n+ mode: 'field',\n+ from: 'data',\n+ fieldTypes: ['integer']\n+ }\n+ }\n+ ];\n+ }\n+\nconstructor (el, {data, graphs = 3}) {\nsuper(el);\n",
        "date": "28.04.2017 18:21:50",
        "repo": "kitware/candela",
        "type": "refactor",
        "sim_msg": "test: fix tests re: ObjectId cast refactor",
        "sim_diff": "diff --git a/lib/types/documentarray.js b/lib/types/documentarray.js * Module dependencies.\n*/\n+const Document = require('../document');\nconst MongooseArray = require('./array');\nconst ObjectId = require('./objectid');\n-const ObjectIdSchema = require('../schema/objectid');\n+const castObjectId = require('../cast/objectid');\nconst get = require('../helpers/get');\n-const internalToObjectOptions = require('../options').internalToObjectOptions;\n-const utils = require('../utils');\n-const Document = require('../document');\nconst getDiscriminatorByValue = require('../queryhelpers').getDiscriminatorByValue;\n+const internalToObjectOptions = require('../options').internalToObjectOptions;\nconst util = require('util');\n+const utils = require('../utils');\nconst documentArrayParent = require('../helpers/symbols').documentArrayParent;\n@@ -200,15 +200,12 @@ MongooseDocumentArray.mixin = {\n*/\nid: function(id) {\n- let casted,\n- sid,\n- _id;\n+ let casted;\n+ let sid;\n+ let _id;\ntry {\n- const casted_ = ObjectIdSchema.prototype.cast.call({}, id);\n- if (casted_) {\n- casted = String(casted_);\n- }\n+ casted = castObjectId(id).toString();\n} catch (e) {\ncasted = null;\n}\n"
    },
    {
        "msg": "refactor(Button): use includes replace indexOf",
        "diff": "diff --git a/packages/button/Button.vue b/packages/button/Button.vue @@ -22,18 +22,20 @@ export default {\nsize: {\ntype: String,\nvalidator(val) {\n- if (val === '') return true\n- return ['medium', 'small', 'mini'].indexOf(val) !== -1\n+ return ['medium', 'small', 'mini', ''].includes(val)\n}\n},\ntype: {\ntype: String,\nvalidator(val) {\n- return (\n- ['primary', 'success', 'warning', 'danger', 'info', 'text'].indexOf(\n- val\n- ) !== -1\n- )\n+ return [\n+ 'primary',\n+ 'success',\n+ 'warning',\n+ 'danger',\n+ 'info',\n+ 'text'\n+ ].includes(val)\n}\n},\nnativeType: {\n",
        "date": "10.12.2020 11:05:04",
        "repo": "hug-sun/element3",
        "type": "refactor",
        "sim_msg": "feat(button): set light as default variant\nb4.beta secondary is now \"grey\" this reduces breaking changes",
        "sim_diff": "diff --git a/lib/components/button.vue b/lib/components/button.vue @@ -49,7 +49,7 @@ export default {\nreturn this.block ? 'btn-block' : '';\n},\nbtnVariant() {\n- return this.variant ? `btn-${this.variant}` : `btn-secondary`;\n+ return this.variant ? `btn-${this.variant}` : `btn-light`;\n},\nbtnSize() {\nreturn this.size ? `btn-${this.size}` : '';\n"
    },
    {
        "msg": "refactor: Rewrite release_initializer with vanilla js",
        "diff": "diff --git a/src/platforms/browser/release_initializer.js b/src/platforms/browser/release_initializer.js +import Dumper from \"./dumper.js\"\n+\n//\n// release_initializer.js - read user's program and eval it (if it exists)\n//\n+\nconst execute_user_program = function() {\n- var dumper = null;\n- if ($(\"#biwascheme-debugger\")[0]) {\n- dumper = new BiwaScheme.Dumper($(\"#biwascheme-debugger\")[0]);\n+ const dumper = null;\n+ const debug_area = document.querySelector(\"#biwascheme-debugger\");\n+ if (debug_area) {\n+ dumper = new Dumper(debug_area);\n}\n// Error handler (show message to console div)\n- var onError = function(e, state){\n+ const onError = function(e, state){\nBiwaScheme.Port.current_error.put_string(e.message + \"\\n\");\nif (dumper) {\ndumper.dump(state);\n@@ -20,8 +24,8 @@ const execute_user_program = function() {\n}\n};\n- var run = function(script) {\n- var intp = new BiwaScheme.Interpreter(onError);\n+ const run = function(script) {\n+ const intp = new BiwaScheme.Interpreter(onError);\ntry{\nintp.evaluate(script, function(){});\n}\n@@ -31,15 +35,21 @@ const execute_user_program = function() {\n};\n// Start user's program (old style)\n- var script = $(\"script[src$='biwascheme.js']\").html() ||\n- $(\"script[src$='biwascheme-min.js']\").html();\n- if (script) run(script);\n+ let script = \"\";\n+ for (const s of document.querySelectorAll(\"script[src$='biwascheme.js']\")) {\n+ script += s.innerHTML;\n+ }\n+ for (const s of document.querySelectorAll(\"script[src$='biwascheme-min.js']\")) {\n+ script += s.innerHTML;\n+ }\n+\n+ if (script.length > 0) run(script);\n// Start user's program (new style)\n- $(function(){\n- $(\"script[type='text/biwascheme']\").each(function(){\n- run($(this).html());\n- });\n+ window.addEventListener('DOMContentLoaded', function(){\n+ for (const s of document.querySelectorAll(\"script[type='text/biwascheme']\")) {\n+ run(s.innerHTML);\n+ }\n});\n};\n",
        "date": "14.03.2021 10:45:15",
        "repo": "biwascheme/biwascheme",
        "type": "refactor",
        "sim_msg": "fix(debugger): fix and improve console commands",
        "sim_diff": "diff --git a/src/lib/modules/debugger/index.ts b/src/lib/modules/debugger/index.ts import DebuggerManager from \"./debugger_manager\";\n+const NO_DEBUG_SESSION = __(\"No debug session active. Activate one with `debug`\");\n+\ninterface Events {\non: any;\nrequest: any;\n@@ -249,15 +251,21 @@ class TransactionDebugger {\nreturn {\nmatch: () => (cmd === \"next\" || cmd === \"n\"),\nprocess: (cb: any) => {\n+ if (!this.cmdDebugger) {\n+ this.embark.logger.warn(NO_DEBUG_SESSION);\n+ return cb();\n+ }\nif (!this.cmdDebugger.canGoNext()) {\n- return;\n+ return cb();\n}\nif (!this.cmdDebugger.currentStep()) {\nthis.embark.logger.info(\"end of execution reached\");\n- return this.cmdDebugger.unload();\n+ this.cmdDebugger.unload();\n+ return cb();\n}\nthis.cmdDebugger.stepOverForward(true);\nthis.displayStepInfo();\n+ cb();\n},\n};\n});\n@@ -266,8 +274,12 @@ class TransactionDebugger {\nreturn {\nmatch: () => (cmd === \"previous\" || cmd === \"p\"),\nprocess: (cb: any) => {\n+ if (!this.cmdDebugger) {\n+ this.embark.logger.warn(NO_DEBUG_SESSION);\n+ return cb();\n+ }\nif (!this.cmdDebugger.canGoPrevious()) {\n- return;\n+ return cb();\n}\nif (!this.cmdDebugger.currentStep()) {\nthis.embark.logger.info(\"end of execution reached\");\n@@ -275,6 +287,7 @@ class TransactionDebugger {\n}\nthis.cmdDebugger.stepOverBack(true);\nthis.displayStepInfo();\n+ cb();\n},\n};\n});\n@@ -283,7 +296,12 @@ class TransactionDebugger {\nreturn {\nmatch: () => (cmd === \"var local\" || cmd === \"v l\" || cmd === \"vl\"),\nprocess: (cb: any) => {\n+ if (!this.cmdDebugger) {\n+ this.embark.logger.warn(NO_DEBUG_SESSION);\n+ return cb();\n+ }\nthis.cmdDebugger.displayLocals();\n+ cb();\n},\n};\n});\n@@ -292,7 +310,12 @@ class TransactionDebugger {\nreturn {\nmatch: () => (cmd === \"var global\" || cmd === \"v g\" || cmd === \"vg\"),\nprocess: (cb: any) => {\n+ if (!this.cmdDebugger) {\n+ this.embark.logger.warn(NO_DEBUG_SESSION);\n+ return cb();\n+ }\nthis.cmdDebugger.displayGlobals();\n+ cb();\n},\n};\n});\n@@ -301,9 +324,17 @@ class TransactionDebugger {\nreturn {\nmatch: () => (cmd === \"var all\" || cmd === \"v a\" || cmd === \"va\"),\nprocess: (cb: any) => {\n+ if (!this.cmdDebugger) {\n+ this.embark.logger.warn(NO_DEBUG_SESSION);\n+ return cb();\n+ }\nthis.getGlobals(this.currentCmdTxHash, (err: any, globals: any) => {\n- if (err) { return this.embark.logger.error(err); }\n+ if (err) {\n+ this.embark.logger.error(err);\n+ return cb();\n+ }\nthis.embark.logger.info(globals);\n+ cb();\n});\n},\n};\n"
    },
    {
        "msg": "refactor: :recycle: update author component",
        "diff": "diff --git a/src/lib/author.svelte b/src/lib/author.svelte <script>\n+ import { onMount } from 'svelte'\n+\nexport let author\n+ const getUserDetails = async () => {\n+ const res = await fetch(`/${author}.json`)\n+ return await res.json()\n+ }\n+ let data = {}\n+ onMount(async () => {\n+ data = await getUserDetails()\n+ })\n</script>\n-<small>{author}</small>\n+<p class=\"text-sm\">Contribution by:</p>\n+<article\n+ class=\"not-prose border border-primary shadow-lg p-4 rounded-2xl\"\n+>\n+ <div class=\"flex space-x-5 justify-evenly\">\n+ <a href={data.html_url} target=\"_blank\" rel=\"noopener\">\n+ <img\n+ class=\"w-20 h-20 p-0 m-0 rounded-full\"\n+ src={data.avatar_url}\n+ alt={data.name}\n+ />\n+ </a>\n+ <a href={data.html_url} target=\"_blank\" rel=\"noopener\">\n+ <div class=\"text-sm\">\n+ <p class=\"text-lg font-bold tracking-widest\">{data.name}</p>\n+ <p>{data.bio}</p>\n+ </div>\n+ </a>\n+ </div>\n+</article>\n",
        "date": "08.04.2022 18:46:58",
        "repo": "spences10/cheat-sheets",
        "type": "refactor",
        "sim_msg": "fix(Search): resolve <em>s",
        "sim_diff": "diff --git a/components/Search/Results.js b/components/Search/Results.js @@ -17,6 +17,7 @@ import {\nTeaserFeed,\nInteraction,\ncolors,\n+ fontFamilies,\nlinkRule\n} from '@project-r/styleguide'\n@@ -43,6 +44,17 @@ const styles = {\nborder: 'none',\ncursor: 'pointer',\npadding: 0\n+ }),\n+ highlightedTitle: css({\n+ '& em': {\n+ fontStyle: 'normal'\n+ }\n+ }),\n+ highlightedDescription: css({\n+ '& em': {\n+ fontFamily: fontFamilies.serifBold,\n+ fontStyle: 'normal'\n+ }\n})\n}\n@@ -218,8 +230,26 @@ class Results extends Component {\n{node.entity.__typename === 'Document' && (\n<TeaserFeed\n{...node.entity.meta}\n- title={titleHighlight ? titleHighlight.fragments[0] : node.entity.meta.title}\n- description={descHighlight ? descHighlight.fragments[0] : node.entity.meta.description}\n+ title={\n+ titleHighlight ? (\n+ <span\n+ {...styles.highlightedTitle}\n+ dangerouslySetInnerHTML={{ __html: titleHighlight.fragments[0] }}\n+ />\n+ ) : (\n+ node.entity.meta.title\n+ )\n+ }\n+ description={\n+ descHighlight ? (\n+ <span\n+ {...styles.highlightedDescription}\n+ dangerouslySetInnerHTML={{ __html: descHighlight.fragments[0] }}\n+ />\n+ ) : (\n+ node.entity.meta.description\n+ )\n+ }\nkind={\nnode.entity.meta.template === 'editorialNewsletter' ? (\n'meta'\n"
    },
    {
        "msg": "refactor(index): headless cms -> api-first cms",
        "diff": "diff --git a/examples/pages/template/index.tpl b/examples/pages/template/index.tpl <img width=\"35px\" src=\"~examples/assets/images/tipe.svg\" alt=\"tipe.io\">\n<div>\n<p>Sponsored by Tipe.io</p>\n- <p>Next Generation Headless CMS</p>\n+ <p>Next Generation API-first CMS</p>\n</div>\n</a>\n<div class=\"cards\">\n",
        "date": "18.12.2017 11:52:44",
        "repo": "hug-sun/element3",
        "type": "refactor",
        "sim_msg": "chore: no need for colon here",
        "sim_diff": "diff --git a/src/components/pages/data/cards/definitions-panel.js b/src/components/pages/data/cards/definitions-panel.js @@ -61,7 +61,7 @@ const Annotation = ({ key, annotation, highlighted }) => {\n))}\n</h3>\n<p>{annotation.warning}</p>\n- {annotation.lastChecked && <p>Last updated: {annotation.lastChecked}</p>}\n+ {annotation.lastChecked && <p>Last updated {annotation.lastChecked}</p>}\n</div>\n)\n}\n"
    },
    {
        "msg": "refactor(compiler): Avoid magic number",
        "diff": "diff --git a/src/system/compiler.js b/src/system/compiler.js @@ -347,15 +347,15 @@ BiwaScheme.Compiler = BiwaScheme.Class.create({\ncase BiwaScheme.Sym(\"call/cc\"):\nvar x=x.second();\n+ var arity_of_arg = 1; // Always 1. (lambda (cc) ...)\nvar c = [\"conti\",\n(this.is_tail(next) ? (e[0].size() + 1) : 0), //number of args for outer lambda\n[\"argument\",\n- [\"constant\", 1,\n+ [\"constant\", arity_of_arg,\n[\"argument\",\nthis.compile(x, e, s,f,\n- (this.is_tail(next) ? [\"shift\", 1, [\"tco_hinted_apply\"]]\n+ (this.is_tail(next) ? [\"shift\", arity_of_arg, [\"tco_hinted_apply\"]]\n: [\"apply\"]))]]]];\n- //note: proc for call/cc takes 1 argument (= [\"apply\", 1])\n// Do not push stack frame when call/cc is in a tail context\nreturn this.is_tail(next) ? c : [\"frame\", c, next];\n",
        "date": "03.01.2020 19:29:53",
        "repo": "biwascheme/biwascheme",
        "type": "refactor",
        "sim_msg": "feat: resolve MEDIA user-input urls so there's more context for connectors",
        "sim_diff": "diff --git a/src/scripting/logichook/userinput/MediaInput.js b/src/scripting/logichook/userinput/MediaInput.js const mime = require('mime-types')\n+const { URL } = require('url')\n+\n+const CONVO_DIR = 'spec/convo'\n+\n+const getResolvedUri = (uri, convoFilename) => {\n+ return new URL(uri, `file://${process.cwd()}/${CONVO_DIR}/${convoFilename}`).toString()\n+}\nmodule.exports = class MediaInput {\n- setUserInput ({ convoStep, args, meMsg }) {\n+ setUserInput ({ convoStep, args, meMsg, convo }) {\nif (!args || args.length === 0 || args.length > 1) {\nreturn Promise.reject(new Error(`${convoStep.stepTag}: MediaInput requires exactly 1 argument`))\n}\n@@ -9,7 +16,7 @@ module.exports = class MediaInput {\nmeMsg.media = []\n}\nmeMsg.media.push({\n- mediaUri: args[0],\n+ mediaUri: getResolvedUri(args[0], convo.sourceTag.filename),\nmimeType: mime.lookup(args[0])\n})\nreturn Promise.resolve()\n"
    },
    {
        "msg": "refactor: remove unnecessary ui prop def",
        "diff": "diff --git a/packages/veui-theme-one/components/AlertBox.js b/packages/veui-theme-one/components/AlertBox.js @@ -8,10 +8,5 @@ config.defaults({\nsuccess: 'check-circle-o-large',\ninfo: 'info-circle-o-large',\nerror: 'cross-circle-o-large'\n- },\n- ui: {\n- type: {\n- values: ['success', 'error', 'info']\n- }\n}\n}, 'alertbox')\n",
        "date": "28.05.2018 11:59:29",
        "repo": "ecomfe/veui",
        "type": "refactor",
        "sim_msg": "fix: bug Alerts title color is inconsistent",
        "sim_diff": "diff --git a/frontend/src/app/components/admin/alerts-pane/alerts-pane.less b/frontend/src/app/components/admin/alerts-pane/alerts-pane.less border-bottom: 1px solid @color15;\nborder-left: 4px solid transparent;\n+ &.info {\n+ color: @color7;\n+ }\n+\n&.crit > svg-icon {\nfill: @color10;\n}\n"
    },
    {
        "msg": "refactor: to optimize the createComponent method logic",
        "diff": "diff --git a/test/unit/tests/use/component.test.js b/test/unit/tests/use/component.test.js @@ -5,6 +5,7 @@ describe('component', () => {\nit('should get component instance', () => {\nconst $cf = jest.fn()\nconst Comp = {\n+ template: '<div>foo</div>',\nsetup() {\nreturn {\n$cf\n@@ -13,9 +14,10 @@ describe('component', () => {\n}\nconst instance = createComponent(Comp)\n- instance.$cf()\n+ instance.ctx.$cf()\nexpect($cf).toBeCalled()\n+ expect(instance.ctx.$el.innerHTML).toBe('foo')\n})\n})\n})\n",
        "date": "01.09.2020 14:44:29",
        "repo": "hug-sun/element3",
        "type": "refactor",
        "sim_msg": "test(vdom): add test case for",
        "sim_diff": "diff --git a/test/unit/modules/vdom/create-element.spec.js b/test/unit/modules/vdom/create-element.spec.js @@ -253,4 +253,24 @@ describe('create-element', () => {\nexpect(vm.$el.querySelector('input').value).toBe('b')\n}).then(done)\n})\n+\n+ // #7786\n+ it('creates element with vnode reference in :class or :style', () => {\n+ const vm = new Vue({\n+ components: {\n+ foo: {\n+ render (h) {\n+ return h('div', {\n+ class: {\n+ 'has-vnode': this.$vnode\n+ }\n+ }, 'foo')\n+ }\n+ }\n+ },\n+ render: h => h('foo')\n+ }).$mount()\n+ expect(vm.$el.innerHTML).toContain('foo')\n+ expect(vm.$el.classList.contains('has-vnode')).toBe(true)\n+ })\n})\n"
    },
    {
        "msg": "refactor: change notes to note",
        "diff": "diff --git a/src/features/tooltip/Tooltip.js b/src/features/tooltip/Tooltip.js import React from \"react\";\n-import { addNote, removeNote, getNotesIndexedByHash } from 'domain/notes';\n+\n//Styling\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n@@ -10,6 +10,7 @@ import tooltipStyle from './Tooltip.module.css';\n///Redux\nimport { connect } from \"react-redux\";\nimport { getPosition, getSelectedDatum } from 'domain/controls';\n+import { addNote, removeNote, getNotesIndexedByHash } from 'domain/notes';\nclass TooltipControls extends React.Component {\nconstructor(props){\n@@ -191,7 +192,7 @@ class TooltipControls extends React.Component {\n}\n{!this.props.data.fieldValue &&\n<p className={appStyle.accordionHeader} onClick={this.toggleShowNote}>\n- Notes {!showNote && <FontAwesomeIcon icon={faAngleDoubleDown} />}{showNote && <FontAwesomeIcon onClick={this.toggleShowNote} icon={faAngleDoubleUp} />}\n+ Note {!showNote && <FontAwesomeIcon icon={faAngleDoubleDown} />}{showNote && <FontAwesomeIcon onClick={this.toggleShowNote} icon={faAngleDoubleUp} />}\n</p>\n}\n",
        "date": "02.08.2019 15:38:42",
        "repo": "iqtlabs/crviz",
        "type": "refactor",
        "sim_msg": "feat(components/tooltiptrigger): expose css classes",
        "sim_diff": "diff --git a/packages/components/src/TooltipTrigger/TooltipTrigger.component.js b/packages/components/src/TooltipTrigger/TooltipTrigger.component.js @@ -102,6 +102,7 @@ const props = {\nfunction TooltipTrigger({\nchildren,\nlabel,\n+ className,\ntooltipDelay,\ntooltipPlacement = 'right',\ntooltipHeight = DEFAULT_OFFSET_Y,\n@@ -221,10 +222,18 @@ function TooltipTrigger({\n{visible &&\nReactDOM.createPortal(\n- <div className={theme['tc-tooltip-container']} style={style}>\n+ <div\n+ className={classNames(theme['tc-tooltip-container'], 'tc-tooltip-container', className)}\n+ style={style}\n+ >\n<div\nid={id}\n- className={classNames(theme['tc-tooltip-body'], theme[`tc-tooltip-${placement}`])}\n+ className={classNames(\n+ theme['tc-tooltip-body'],\n+ theme[`tc-tooltip-${placement}`],\n+ 'tc-tooltip-body',\n+ `tc-tooltip-${placement}`,\n+ )}\n>\n{label}\n</div>\n@@ -244,6 +253,7 @@ TooltipTrigger.propTypes = {\ntooltipWidth: PropTypes.number,\ntooltipDelay: PropTypes.number,\nchildren: PropTypes.element,\n+ className: PropTypes.string,\n};\nexport default TooltipTrigger;\n"
    },
    {
        "msg": "refactor(PreactConfig): Keep ESLint happy",
        "diff": "diff --git a/src/lib/webpack-config.js b/src/lib/webpack-config.js @@ -24,7 +24,6 @@ import ProgressBarPlugin from 'progress-bar-webpack-plugin';\nimport CopyWebpackPlugin from 'copy-webpack-plugin';\nimport ReplacePlugin from 'replace-bundle-webpack-plugin';\nimport SWPrecacheWebpackPlugin from 'sw-precache-webpack-plugin';\n-import createBabelConfig from './babel-config';\nimport prerender from './prerender';\nimport PushManifestPlugin from './push-manifest';\n",
        "date": "29.05.2017 15:45:31",
        "repo": "preactjs/preact-cli",
        "type": "refactor",
        "sim_msg": "chore: update copy-webpack-plugin config",
        "sim_diff": "diff --git a/webpack.config.js b/webpack.config.js @@ -160,13 +160,14 @@ module.exports = {\nnew MiniCssExtractPlugin({\nfilename: '[name].css'\n}),\n- new CopyPlugin([\n+ new CopyPlugin({\n+ patterns: [\n{\nfrom: 'src/assets',\nto: '',\n- copyUnmodified: true,\n},\n- ]),\n+ ],\n+ }),\nnew VueLoaderPlugin(),\nnew webpack.DefinePlugin({\nVERSION: JSON.stringify(require('./src/assets/manifest.json').version)\n"
    },
    {
        "msg": "refactor: change px to rem in footer, header, and sidebar; reorder transition values in sidebar",
        "diff": "diff --git a/scss/_variables.scss b/scss/_variables.scss @@ -1365,7 +1365,7 @@ $list-group-variants: (\n// Header\n// scss-docs-start header-variables\n-$header-min-height: 56px !default;\n+$header-min-height: 4rem !default;\n$header-padding-y: $spacer / 2 !default;\n$header-padding-x: $spacer / 2 !default;\n$header-brand-font-size: $font-size-lg !default;\n@@ -1405,7 +1405,7 @@ $header-divider-border-color: $header-border-color !default;\n// Subheader\n// scss-docs-start subheader-variables\n-$subheader-min-height: 48px !default;\n+$subheader-min-height: 3rem !default;\n$subheader-padding-y: $spacer / 2 !default;\n$subheader-padding-x: $spacer !default;\n$subheader-border-color: $border-color !default;\n@@ -1491,11 +1491,11 @@ $carousel-dark-control-icon-filter: invert(1) grayscale(100) !default;\n// scss-docs-end carousel-variables\n// scss-docs-start sidebar-variables\n-$sidebar-width: 256px !default;\n+$sidebar-width: 16rem !default;\n$sidebar-widths: (\n- sm: 192px,\n- lg: 320px,\n- xl: 384px\n+ sm: 12rem,\n+ lg: 20rem,\n+ xl: 24rem\n) !default;\n$sidebar-padding-y: 0 !default;\n$sidebar-padding-x: 0 !default;\n@@ -1503,7 +1503,7 @@ $sidebar-color: $high-emphasis-light !default;\n$sidebar-bg: $gray-base !default;\n$sidebar-border-width: 0 !default;\n$sidebar-border-color: transparent !default;\n-$sidebar-transition: box-shadow .075s, transform .15s, margin-left .15s, margin-right .15s, width .15s, z-index 0s ease .15s !default;\n+$sidebar-transition: margin-left .15s, margin-right .15s, box-shadow .075s, transform .15s, width .15s, z-index 0s ease .15s !default;\n$sidebar-reliant-transition: margin .15s !default;\n$sidebar-brand-height: 56px !default;\n@@ -1550,6 +1550,7 @@ $sidebar-nav-icon-font-size: $sidebar-nav-icon-height !default;\n$sidebar-nav-group-bg: rgba(0, 0, 0, .2) !default;\n$sidebar-nav-group-transition: background .15s ease-in-out !default;\n$sidebar-nav-group-items-transition: height .15s ease !default;\n+$sidebar-nav-group-toggle-show-color: $sidebar-nav-link-color !default;\n$sidebar-nav-group-indicator-color: $medium-emphasis-light !default;\n$sidebar-nav-group-indicator: str-replace(url(\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 11 14'%3E%3Cpath fill='#{$sidebar-nav-group-indicator-color}' d='M9.148 2.352l-4.148 4.148 4.148 4.148q0.148 0.148 0.148 0.352t-0.148 0.352l-1.297 1.297q-0.148 0.148-0.352 0.148t-0.352-0.148l-5.797-5.797q-0.148-0.148-0.148-0.352t0.148-0.352l5.797-5.797q0.148-0.148 0.352-0.148t0.352 0.148l1.297 1.297q0.148 0.148 0.148 0.352t-0.148 0.352z'/%3E%3C/svg%3E\"), \"#\", \"%23\") !default;\n@@ -1575,7 +1576,7 @@ $sidebar-toggler-hover-indicator: str-replace(url(\"data:image/svg+xml;c\n// Footer\n// scss-docs-start footer-variables\n-$footer-min-height: 50px !default;\n+$footer-min-height: 3rem !default;\n$footer-padding-y: $spacer / 2 !default;\n$footer-padding-x: $spacer !default;\n$footer-bg: $gray-100 !default;\n",
        "date": "12.01.2021 17:36:27",
        "repo": "coreui/coreui",
        "type": "refactor",
        "sim_msg": "feat: add transitions to section nav for extra wow effect",
        "sim_diff": "diff --git a/src/views/features/components/content-nav/content-nav-item.js b/src/views/features/components/content-nav/content-nav-item.js @@ -37,6 +37,8 @@ class ContentNavItem extends Component {\nfont-size: 18px;\npadding: 15px 0 15px 0;\ncursor: pointer;\n+ box-shadow: 0 4px 0 rgba(0, 0, 0, 0);\n+ transition: box-shadow .6s ease\n}\n.ContentNav__item :global(svg) {\n@@ -45,10 +47,6 @@ class ContentNavItem extends Component {\ntransition-duration: .25s;\n}\n- .ContentNav__item.is-active {\n- box-shadow: 0 4px 0;\n- }\n-\n.ContentNav__item-text {\nmargin-top: 15px;\ndisplay: none;\n@@ -86,10 +84,10 @@ class ContentNavItem extends Component {\nborder-image-slice: 1;\n}\n- .ContentNav__item:nth-child(1) {color: #009bac}\n- .ContentNav__item:nth-child(2) {color: #3637d1}\n- .ContentNav__item:nth-child(3) {color: #1765eb}\n- .ContentNav__item:nth-child(4) {color: #5100d0}\n+ .ContentNav__item:nth-child(1).is-active {box-shadow: 0 4px 0 rgba(0, 155, 172, 1)}\n+ .ContentNav__item:nth-child(2).is-active {box-shadow: 0 4px 0 rgba(54, 55, 209, 1)}\n+ .ContentNav__item:nth-child(3).is-active {box-shadow: 0 4px 0 rgba(23, 101, 235, 1)}\n+ .ContentNav__item:nth-child(4).is-active {box-shadow: 0 4px 0 rgba(81, 0, 208, 1)}\n:global(.sticky) .ContentNav {\nbackground-color: #fff;\n@@ -108,13 +106,11 @@ ContentNavItem.init = ({\nsection,\nsectionId,\ntext,\n- active,\nstores: {featuresPage}\n}) => ({\nsection,\nsectionId,\ntext,\n- active,\nfeaturesPage\n})\n"
    },
    {
        "msg": "refactor: remove `thead` `border-bottom-color`",
        "diff": "diff --git a/scss/_tables.scss b/scss/_tables.scss // Highlight border color between thead, tbody and tfoot.\n> :not(:last-child) > :last-child > * {\n- border-bottom-color: $table-group-separator-color;\n+ // border-bottom-color: $table-group-separator-color;\n}\n}\n",
        "date": "04.01.2021 23:29:05",
        "repo": "coreui/coreui",
        "type": "refactor",
        "sim_msg": "fix(table): added selectedable table option",
        "sim_diff": "diff --git a/scss/os/_utils.scss b/scss/os/_utils.scss }\n}\n- &.u-table-striped {\n+ .u-table__selectable {\ncursor: pointer;\n+ }\n+ &.u-table-striped {\n.u-table__row:nth-child(odd) {\nbackground-color: $table-accent-bg;\n}\n"
    },
    {
        "msg": "refactor: use vue3 to refactor tag component",
        "diff": "diff --git a/packages/tag/src/tag.vue b/packages/tag/src/tag.vue +\n<script>\n+import { h, computed, getCurrentInstance, Transition } from \"vue\";\nexport default {\n- name: 'ElTag',\n+ name: \"ElTag\",\nprops: {\ntext: String,\nclosable: Boolean,\nsize: String,\neffect: {\ntype: String,\n- default: 'light',\n+ default: \"light\",\nvalidator(val) {\n- return ['dark', 'light', 'plain'].indexOf(val) !== -1;\n- }\n- }\n- },\n- methods: {\n- handleClose(event) {\n- event.stopPropagation();\n- this.$emit('close', event);\n+ return [\"dark\", \"light\", \"plain\"].indexOf(val) !== -1;\n},\n- handleClick(event) {\n- this.$emit('click', event);\n- }\n},\n- computed: {\n- tagSize() {\n- return this.size || (this.$ELEMENT || {}).size;\n- }\n},\n- render(h) {\n- const { type, tagSize, hit, effect } = this;\n+ setup(props, { emit, slots }) {\n+ const {\n+ type,\n+ hit,\n+ effect,\n+ color,\n+ closable,\n+ disableTransitions,\n+ size,\n+ } = props;\n+\n+ const tagSize = computed(() => {\n+ return size || (getCurrentInstance().proxy.$ELEMENT || {}).size;\n+ });\n+ const handleClose = (event) => {\n+ event.stopPropagation();\n+ emit(\"close\", event);\n+ };\n+ const handleClick = (event) => {\n+ emit(\"click\", event);\n+ };\n+\nconst classes = [\n- 'el-tag',\n- type ? `el-tag--${type}` : '',\n- tagSize ? `el-tag--${tagSize}` : '',\n- effect ? `el-tag--${effect}` : '',\n- hit && 'is-hit'\n+ \"el-tag\",\n+ type ? `el-tag--${type}` : \"\",\n+ tagSize.value ? `el-tag--${tagSize.value}` : \"\",\n+ effect ? `el-tag--${effect}` : \"\",\n+ hit && \"is-hit\",\n];\nconst tagEl = (\n<span\nclass={classes}\n- style={{ backgroundColor: this.color }}\n- on-click={ this.handleClick }>\n- { this.$slots.default }\n- {\n- this.closable && <i class=\"el-tag__close el-icon-close\" on-click={ this.handleClose }></i>\n- }\n+ style={{ backgroundColor: color }}\n+ on-click={handleClick}\n+ >\n+ {slots.default && slots.default()}\n+ {closable && (\n+ <i class=\"el-tag__close el-icon-close\" on-click={handleClose}></i>\n+ )}\n</span>\n);\n-\n- return this.disableTransitions ? tagEl : <transition name=\"el-zoom-in-center\">{ tagEl }</transition>;\n- }\n+ return () =>\n+ disableTransitions ? (\n+ tagEl\n+ ) : (\n+ <Transition name=\"el-zoom-in-center\">{tagEl}</Transition>\n+ );\n+ },\n};\n</script>\n",
        "date": "05.08.2020 22:03:32",
        "repo": "hug-sun/element3",
        "type": "refactor",
        "sim_msg": "refactor(container): adds script setup syntac, removes buildClass usage",
        "sim_diff": "diff --git a/src/components/container/CdrContainer.vue b/src/components/container/CdrContainer.vue -<template>\n- <component :is=\"tag\" :class=\"mapClasses(style, baseClass, modifierClass)\">\n- <slot />\n- </component>\n-</template>\n-\n-<script>\n-import { defineComponent, useCssModule, computed } from 'vue';\n+<script setup>\n+import { useCssModule, computed } from 'vue';\nimport propValidator from '../../utils/propValidator';\n-import { buildClass } from '../../utils/buildClass';\nimport mapClasses from '../../utils/mapClasses';\n-export default defineComponent({\n- name: 'CdrContainer',\n- props: {\n+const props = defineProps({\n/** Any valid HTML tag */\ntag: {\ntype: String,\n@@ -27,19 +18,21 @@ export default defineComponent({\nfalse,\n),\n},\n- },\n- setup(props, ctx) {\n- const baseClass = 'cdr-container';\n- const modifierClass = computed(() => buildClass(baseClass, props.modifier));\n- return {\n- style: useCssModule(),\n- baseClass,\n- modifierClass,\n- mapClasses,\n- };\n- },\n});\n+\n+const baseClass = 'cdr-container';\n+const style = useCssModule();\n+\n+/************************ Computed properties *************************/\n+const modifierClass = computed(() => `${baseClass}--${props.modifier}`);\n+\n</script>\n+<template>\n+ <component :is=\"tag\" :class=\"mapClasses(style, baseClass, modifierClass)\">\n+ <slot />\n+ </component>\n+</template>\n+\n<style lang=\"scss\" module src=\"./styles/CdrContainer.module.scss\">\n</style>\n"
    },
    {
        "msg": "refactor: rename loadData to load for cascader",
        "diff": "diff --git a/packages/veui/src/components/Cascader/Cascader.vue b/packages/veui/src/components/Cascader/Cascader.vue :select-mode=\"selectMode\"\n:column-width=\"keyword ? null : columnWidth\"\n:expanded=\"realExpanded\"\n- :load-data=\"loadData && !keyword ? loadAndSaveData : null\"\n+ :load=\"load && !keyword ? loadAndSaveData : null\"\n@update:expanded=\"handlePaneUpdateExpanded\"\n@select=\"handlePaneSelect\"\n@keydown.native=\"!searchable && handleCascaderKeydown($event)\"\n@@ -240,7 +240,7 @@ export default {\nreturn ['complete', 'simple'].indexOf(val) >= 0\n}\n},\n- loadData: Function,\n+ load: Function,\ninline: Boolean,\nmax: Number\n},\n@@ -405,9 +405,12 @@ export default {\n}\n},\nmethods: {\n- loadAndSaveData (option, trigger) {\n- return Promise.resolve(this.loadData(option, trigger)).then((loaded) => {\n- this.$set(this.loadedData, getKey(option), loaded)\n+ loadAndSaveData (context) {\n+ return Promise.resolve(this.load(context)).then((loaded) => {\n+ if (loaded) {\n+ this.$set(this.loadedData, getKey(context.parent), loaded)\n+ }\n+ return loaded\n})\n},\nhandleCascaderKeydown (e) {\n",
        "date": "14.06.2022 19:48:36",
        "repo": "ecomfe/veui",
        "type": "refactor",
        "sim_msg": "feat(nvue): render-whole => append=\"tree\"",
        "sim_diff": "diff --git a/packages/vue-cli-plugin-hbuilderx/build/vue-loader.conf.js b/packages/vue-cli-plugin-hbuilderx/build/vue-loader.conf.js @@ -18,7 +18,32 @@ const TAGS = [\n'slider'\n]\n-const modules = []\n+const modules = [{\n+ // render-whole => append=\"tree\"\n+ preTransformNode (el, options) {\n+ if (!Object.hasOwnProperty.call(el.attrsMap, 'append')) {\n+ const name = 'render-whole'\n+ const value = el.attrsMap[name]\n+ if (value === true || value === 'true') {\n+ // remove\n+ delete el.attrsMap.append\n+ const index = el.attrsList.findIndex(item => item.name === name)\n+ const attr = el.attrsList[index]\n+ el.attrsList.splice(index, 1)\n+\n+ el.appendAsTree = true\n+ el.attrsMap.append = 'tree'\n+ el.attrsList.push({\n+ name: 'append',\n+ value: 'tree',\n+ bool: false,\n+ start: attr.start,\n+ end: attr.end\n+ })\n+ }\n+ }\n+ }\n+}]\nconst deprecated = {\nevents: {\n"
    },
    {
        "msg": "refactor: parseBlocks",
        "diff": "diff --git a/frontend/leaderboard/src/Types.re b/frontend/leaderboard/src/Types.re @@ -184,7 +184,6 @@ module Block = {\neach UserCommand and InternalCommand to it's associated block.\n*/\nlet parseBlocks = blocks => {\n- let blocks =\nBelt.Map.Int.(\nblocks\n|> Array.fold_left(\n@@ -234,8 +233,6 @@ module Block = {\n)\n|> valuesToArray\n);\n-\n- blocks;\n};\n};\n",
        "date": "21.12.2020 20:01:34",
        "repo": "minaprotocol/mina",
        "type": "refactor",
        "sim_msg": "fix(render): remove Defaults component import",
        "sim_diff": "diff --git a/packages/renderer/src/page/block/Block.js b/packages/renderer/src/page/block/Block.js @@ -20,7 +20,6 @@ import { ErrorBoundary, Loading } from '@lowdefy/block-tools';\nimport { get } from '@lowdefy/helpers';\nimport LoadBlock from './LoadBlock';\n-import Defaults from './Defaults';\nimport CategorySwitch from './CategorySwitch';\nimport WatchCache from './WatchCache';\n"
    },
    {
        "msg": "refactor(SimilarityGraph): empty top-level div before placing SVG",
        "diff": "diff --git a/components/SimilarityGraph/index.js b/components/SimilarityGraph/index.js @@ -8,6 +8,10 @@ export default class SimilarityGraph extends VisComponent {\nsuper(el);\nthis.data = data;\n+ // Empty the top-level div.\n+ d3.select(this.el)\n+ .selectAll('*').remove();\n+\n// Construct an SVG element inside the top-level div.\nthis.svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\nthis.svg.setAttribute('width', width);\n",
        "date": "25.04.2017 16:29:06",
        "repo": "kitware/candela",
        "type": "refactor",
        "sim_msg": "chore: removed hardcoded margins in containment graph",
        "sim_diff": "diff --git a/src/components/Main/Containment.tsx b/src/components/Main/Containment.tsx @@ -2,6 +2,7 @@ import React from 'react'\nimport ReactDOM from 'react-dom'\nimport * as d3 from 'd3'\n+import * as math from 'mathjs'\nimport ReactResizeDetector from 'react-resize-detector'\nconst ASPECT_RATIO = 16 / 9\n@@ -33,7 +34,12 @@ class Graph extends React.Component {\nthis.props.data[i].t = dates[i];\n}\n- var margin = { top: 50, right: 50, bottom: 75, left: 50 }\n+ const margin = {\n+ top: math.round(.10*height),\n+ right: math.round(.15*height),\n+ left: math.round(.15*height),\n+ bottom: math.round(.20*height),\n+ };\nvar tScale = d3\n.scaleTime()\n"
    },
    {
        "msg": "refactor: remove unnecessary spread.",
        "diff": "diff --git a/packages/chakra-ui-core/src/CInputGroup/CInputGroup.js b/packages/chakra-ui-core/src/CInputGroup/CInputGroup.js @@ -53,9 +53,7 @@ const CInputGroup = {\nconst clone = cloneVNode(vnode, h)\nreturn h(clone.componentOptions.Ctor, {\n...clone.data,\n- on: {\n- ...(clone.componentOptions.listeners || {})\n- },\n+ on: (clone.componentOptions.listeners || {}),\nprops: {\n...(clone.data.props || {}),\n...clone.componentOptions.propsData,\n",
        "date": "23.12.2021 00:35:33",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "refactor",
        "sim_msg": "test(Root): add MoleculeRadioButtonGroup",
        "sim_diff": "diff --git a/test/molecule/radioButtonGroup/index.js b/test/molecule/radioButtonGroup/index.js * */\n/* eslint react/jsx-no-undef:0 */\n+/* eslint no-undef:0 */\n-// import React from 'react'\n-// import {render} from '@testing-library/react'\n+import React from 'react'\n+import ReactDOM from 'react-dom'\nimport chai, {expect} from 'chai'\nimport chaiDOM from 'chai-dom'\n+import {render} from '@testing-library/react'\nchai.use(chaiDOM)\n+const setupBuilder = Component => props => {\n+ const container = document.createElement('div')\n+ container.setAttribute('id', 'test-container')\n+ const utils = render(<Component {...props} />, {\n+ container: document.body.appendChild(container)\n+ })\n+ return utils\n+}\n+\ndescribe('molecule/radioButtonGroup', () => {\n- it.skip('Render', () => {\n+ const Component = MoleculeRadioButtonGroup\n+ const setup = setupBuilder(Component)\n+\n+ it('should render without crashing', () => {\n+ // Given\n+ const props = {}\n+\n+ // When\n+ const component = <Component {...props} />\n+\n+ // Then\n+ const div = document.createElement('div')\n+ ReactDOM.render(component, div)\n+ ReactDOM.unmountComponentAtNode(div)\n+ })\n+\n+ it('should NOT render null', () => {\n+ // Given\n+ const props = {}\n+\n+ // When\n+ const {container} = setup(props)\n+\n+ // Then\n+ expect(container.innerHTML).to.be.a('string')\n+ expect(container.innerHTML).to.not.have.lengthOf(0)\n+ })\n+\n+ it.skip('example', () => {\n// Example TO BE DELETED!!!!\n- // const {getByRole} = render(<AtomButton>HOLA</AtomButton>)\n+\n+ // Given\n+ // const props = {}\n+\n+ // When\n+ // const {getByRole} = setup(props)\n+\n+ // Then\n// expect(getByRole('button')).to.have.text('HOLA')\nexpect(true).to.be.eql(false)\n})\n"
    },
    {
        "msg": "refactor: use optional chain",
        "diff": "diff --git a/src/use/emitter.js b/src/use/emitter.js @@ -103,7 +103,7 @@ function broadcast() {\nchildren.forEach((vnode) => {\nconst childComponent = vnode.component\n- if (childComponent && childComponent.type && childComponent.type.name === componentName) {\n+ if (childComponent?.type?.name === componentName) {\nchildComponent.emit(eventName, ...params)\n} else {\n_broadcast(childComponent)\n",
        "date": "21.08.2020 14:48:44",
        "repo": "hug-sun/element3",
        "type": "refactor",
        "sim_msg": "refactor(lib): small update in lib/emitter_wrapper",
        "sim_diff": "diff --git a/lib/emitter_wrapper.js b/lib/emitter_wrapper.js @@ -8,13 +8,8 @@ class EmitterWrapper {\naddListener (event, listener) {\nthis.emitter.addListener(event, listener)\n-\n- if (!this.listeners.hasOwnProperty(event)) {\n- this.listeners[event] = []\n- }\n-\n+ this.listeners[event] = this.listeners[event] || []\nthis.listeners[event].push(listener)\n-\nreturn this\n}\n"
    },
    {
        "msg": "refactor(src/common/api/utils/xhr_wrapper.js): some comments, fix export of localStorage stuff",
        "diff": "diff --git a/src/common/api/utils/xhr_wrapper.js b/src/common/api/utils/xhr_wrapper.js // Request utils,\n-// feel free to replace with your code\n+// Feel free to replace with your code\n// (get, post are used in ApiServices)\n-import {getLocalToken, resetLocalToken} from 'api'\n+import {getLocalToken, resetLocalToken} from 'api/LocalStorageCookiesSvc'\n-export default function requestWrapper (method) {\n+function requestWrapper (method) {\nreturn async function (url, data = null, params = {}) {\nif (method === 'GET') {\n- // Is it a GET?\n+ // It's a GET response\n// GET doesn't have data\nparams = data\ndata = null\n@@ -27,12 +27,16 @@ export default function requestWrapper (method) {\n}\n// Check that req url is relative and request was sent to our domain\n- if (url.match(/^https?:\\/\\//gi) > -1) {\n+ if (!/(http|https):\\/\\//.test(url)) {\n+ console.log(`Request ${url} was sent to our domain`)\nconst token = getLocalToken()\nif (token) {\ndefaults.headers.Authorization = `JWT ${token}`\n}\nurl = process.env.BASE_API + url\n+ } else {\n+ console.log(`Request ${url} was sent to external domain`)\n+ // Request was set to an external domain\n}\nif (data) {\n",
        "date": "10.08.2017 04:55:13",
        "repo": "metnew/suicrux",
        "type": "refactor",
        "sim_msg": "test: fix undefined url",
        "sim_diff": "diff --git a/lib/utils/request-wrapper.js b/lib/utils/request-wrapper.js @@ -84,15 +84,20 @@ const requestWrapper = (url, options) => {\n// server\noptions.headers.server = 'RSSHub';\n+ try {\n// referer\nif (!options.headers.referer && !options.headers.Referer) {\nconst urlHandler = new URL(url);\noptions.headers.referer = urlHandler.origin;\n}\n+ // host\nif (!options.headers.host && !options.headers.Host) {\nconst urlHandler = new URL(url);\noptions.headers.host = urlHandler.host;\n}\n+ } catch (e) {\n+ // do nothing\n+ }\n};\nconst httpWrap = (func) => {\n"
    },
    {
        "msg": "refactor: remove useless prop `focusClass`",
        "diff": "diff --git a/packages/veui/src/components/Autocomplete/Autocomplete.vue b/packages/veui/src/components/Autocomplete/Autocomplete.vue @@ -106,10 +106,6 @@ export default {\nmixins: [ui, input, overlay],\nprops: {\n...AutocompleteBase.props,\n- focusClass: {\n- type: String,\n- default: 'veui-autocomplete-focus'\n- },\nsuggestTrigger: {\ntype: [String, Array],\ndefault: 'input'\n",
        "date": "28.05.2019 19:33:04",
        "repo": "ecomfe/veui",
        "type": "refactor",
        "sim_msg": "fix: QAutocomplete staticData reference",
        "sim_diff": "diff --git a/src/components/autocomplete/QAutocomplete.vue b/src/components/autocomplete/QAutocomplete.vue @@ -157,7 +157,7 @@ export default {\n},\nsetValue (result) {\nconst suffix = this.__inputParent ? 'Parent' : ''\n- this[`__input${suffix}`].set(this.staticData ? result[staticData.field] : result.value)\n+ this[`__input${suffix}`].set(this.staticData ? result[this.staticData.field] : result.value)\nthis.$emit('selected', result)\nthis.__clearSearch()\n"
    },
    {
        "msg": "refactor: use useGlobalOptions get  in Button",
        "diff": "diff --git a/packages/button/Button.vue b/packages/button/Button.vue </template>\n<script>\n-import { toRefs, inject, computed, getCurrentInstance } from 'vue'\n+import { useGlobalOptions } from '../../src/use/globalConfig'\n+import { toRefs, inject, computed } from 'vue'\nexport default {\nname: 'ElButton',\nprops: {\n@@ -89,13 +90,10 @@ const useButtonDisabled = (disabled) => {\n}\nconst useButtonSize = (size) => {\n+ const globalConfig = useGlobalOptions()\nreturn computed(() => {\nconst elFormItem = inject('elFormItem', {})\n- return (\n- size?.value ||\n- elFormItem.elFormItemSize ||\n- getCurrentInstance().ctx.$ELEMENT?.size\n- )\n+ return size?.value || elFormItem.elFormItemSize || globalConfig.size\n})\n}\n</script>\n",
        "date": "28.11.2020 16:50:26",
        "repo": "hug-sun/element3",
        "type": "refactor",
        "sim_msg": "refactor: rename isSyncTracker to trackerSyncing",
        "sim_diff": "diff --git a/src/renderer/components/Preference/Advanced.vue b/src/renderer/components/Preference/Advanced.vue width=\"12\"\nheight=\"12\"\n:spin=\"true\"\n- v-if=\"isSyncTracker\"\n+ v-if=\"trackerSyncing\"\n/>\n<mo-icon name=\"sync\" width=\"12\" height=\"12\" v-else />\n</el-button>\n[ShowInFolder.name]: ShowInFolder\n},\ndata: function () {\n+ const form = initialForm(this.$store.state.preference.config)\nreturn {\n+ form,\nformLabelWidth: '23%',\n- form: initialForm(this.$store.state.preference.config),\n- isSyncTracker: false,\n+ locales: availableLanguages,\nrules: {},\n- color: '#c00',\n- locales: availableLanguages\n+ trackerSyncing: false\n}\n},\ncomputed: {\nthis.$electron.ipcRenderer.send('command', 'application:change-theme', theme)\n},\nsyncTrackerFromGitHub () {\n- this.isSyncTracker = true\n+ this.trackerSyncing = true\nthis.$store.dispatch('preference/fetchBtTracker')\n.then((data) => {\nconsole.log('syncTrackerFromGitHub data====>', data)\nthis.form.btTracker = data\n})\n.finally(() => {\n- this.isSyncTracker = false\n+ this.trackerSyncing = false\n})\n},\nonUseProxyChange (flag) {\n"
    },
    {
        "msg": "refactor(fab): remove variable references",
        "diff": "diff --git a/consumables/scss/components/fab/fab.scss b/consumables/scss/components/fab/fab.scss @import '../../global/colors/colors';\n@import '../../global/helpers';\n@import '../../global/layout/grid';\n-@import 'vars';\n@import '../../import-once';\n@include exports('fab') {\n.bx--fab__hexagon {\ntransition: fill $transition--base;\n- fill: $color__fab-hexagon;\n+ fill: $color__blue-40;\n}\n.bx--fab__plus-icon {\n@include rotate(0, $transition--base);\n- fill: $color__fab-plus-icon;\n+ fill: $color__white;\n}\n}\n.bx--fab__hexagon {\ntransition: fill $transition--base;\n- fill: $color__fab-hexagon--is-closed;\n+ fill: $color__navy-gray-5;\n}\n.bx--fab__plus-icon {\n",
        "date": "04.01.2017 16:27:07",
        "repo": "carbon-design-system/carbon",
        "type": "refactor",
        "sim_msg": "perf(link): remove bloated foundation/typography import in chevron link\nincluded the scss placeholder in chevron link css module file temporarily until we get to the text\ncomponents",
        "sim_diff": "diff --git a/src/components/Link/ChevronLink/ChevronLink.modules.scss b/src/components/Link/ChevronLink/ChevronLink.modules.scss -$tds-style-typography-html-tags: false;\n-\n@import '../../../scss/settings/colours';\n-@import '../../../scss/utility/responsive';\n-@import '../../../scss/settings/responsive-grid';\n-@import '../../../scss/settings/typography';\n-@import '../../../scss/foundation/typography';\n+@import '../../../scss/settings/variables';\n+\n+%text--medium {\n+ font-size: rem($body-medium-text-size);\n+ line-height: $body-medium-line-height;\n+ letter-spacing: -.8px;\n+}\n.link {\n@extend %text--medium;\n"
    },
    {
        "msg": "refactor: Preact CLI tests",
        "diff": "diff --git a/src/commands/create.js b/src/commands/create.js @@ -115,9 +115,9 @@ export default asyncCommand({\nawait fs.writeFile(path.resolve(target, 'package.json'), JSON.stringify(pkg, null, 2));\n+ if (argv.install) {\nspinner.text = 'Installing dev dependencies';\n- if (argv.install) {\nawait npm(target, [\n'install', '--save-dev',\n'preact-cli',\n@@ -146,9 +146,9 @@ export default asyncCommand({\n'preact-compat',\n'preact-router'\n]);\n- }\nspinner.succeed('Done!\\n');\n+ }\nreturn `\nTo get started, cd into the new directory:\n",
        "date": "12.06.2017 17:23:18",
        "repo": "preactjs/preact-cli",
        "type": "refactor",
        "sim_msg": "chore: correct release package",
        "sim_diff": "diff --git a/scripts/release.js b/scripts/release.js @@ -4,7 +4,7 @@ const inquirer = require('inquirer');\nconst fs = require('fs');\nconst path = require('path');\nconst pkg = require('../package.json');\n-const childPkg = require('../dist/package.json');\n+const childPkg = require('../src/copy/package.json');\nasync function release() {\nconst options = await inquirer.prompt([\n@@ -72,7 +72,7 @@ async function release() {\nfs.writeFileSync(path.resolve(__dirname, '../package.json'), `${JSON.stringify(pkg, null, 2)}\\n`);\nfs.writeFileSync(\n- path.resolve(__dirname, '../dist/package.json'),\n+ path.resolve(__dirname, '../src/copy/package.json'),\n`${JSON.stringify(childPkg, null, 2)}\\n`,\n);\n"
    },
    {
        "msg": "refactor: rename to ElPagination",
        "diff": "diff --git a/packages/pagination/index.js b/packages/pagination/index.js -import Pagination from './Pagination'\n+import ElPagination from './Pagination'\n/* istanbul ignore next */\n-Pagination.install = function (app) {\n- app.component(Pagination.name, Pagination)\n+ElPagination.install = function (app) {\n+ app.component(ElPagination.name, ElPagination)\n}\n-export default Pagination\n+export default ElPagination\n",
        "date": "23.10.2020 16:26:56",
        "repo": "hug-sun/element3",
        "type": "refactor",
        "sim_msg": "fix: lang - de import",
        "sim_diff": "diff --git a/src/lang/index.js b/src/lang/index.js import en from './en';\nimport ko from './ko';\n+import de from './de';\n-export { en, ko };\n-export default { en, ko };\n\\ No newline at end of file\n+export { en, ko, de };\n+export default { en, ko, de };\n\\ No newline at end of file\n"
    },
    {
        "msg": "refactor: composition-api refactor ok",
        "diff": "diff --git a/packages/input/src/use.js b/packages/input/src/use.js -import { computed, getCurrentInstance, inject, ref, unref, nextTick } from 'vue'\n+import { computed, getCurrentInstance, inject, ref, unref, nextTick, watch } from 'vue'\nimport merge from 'element-ui/src/utils/merge'\nimport { isKorean } from 'element-ui/src/utils/shared'\n@@ -21,7 +21,7 @@ export const useValidate = () => {\nreturn { validateState, validateIcon }\n}\n-export const useTextarea = (autosize, type, resize, textareaCalcStyle) => {\n+export const useTextarea = ({ autosize, type, resize, modelValue, validateEvent }, textareaCalcStyle, instance) => {\nconst textarea = ref(null)\nconst textareaStyle = computed(() => {\n@@ -46,10 +46,21 @@ export const useTextarea = (autosize, type, resize, textareaCalcStyle) => {\nmaxRows\n)\n}\n+\n+ watch(\n+ () => modelValue,\n+ (val) => {\n+ nextTick(resizeTextarea)\n+ if (unref(validateEvent)) {\n+ instance.proxy.dispatch('ElFormItem', 'el.form.change', [val])\n+ }\n+ }\n+ )\n+\nreturn { textarea, textareaStyle, resizeTextarea }\n}\n-export const useInput = (size, type, disabled, modelValue, readonly, clearable, showPassword, showWordLimit, { hovering, focused }, textarea, attrs) => {\n+export const useInput = ({ size, type, disabled, modelValue, suffixIcon, readonly, clearable, showPassword, showWordLimit }, { hovering, focused }, textarea, attrs, validateState, needStatusIcon, slots) => {\nconst input = ref(null)\nconst elFormItem = inject('elFormItem', {})\n@@ -108,7 +119,6 @@ export const useInput = (size, type, disabled, modelValue, readonly, clearable,\nunref(nativeInputValue) &&\n(unref(focused) || unref(hovering))\n)\n-\n})\nconst showPwdVisible = computed(() => {\nreturn (\n@@ -118,6 +128,16 @@ export const useInput = (size, type, disabled, modelValue, readonly, clearable,\n(!!unref(nativeInputValue) || unref(focused))\n)\n})\n+ const getSuffixVisible = () => {\n+ return (\n+ slots.suffix ||\n+ unref(suffixIcon) ||\n+ unref(showClear) ||\n+ unref(showPassword) ||\n+ unref(isWordLimitVisible) ||\n+ (unref(validateState) && unref(needStatusIcon))\n+ )\n+ }\nreturn {\ninput: input || textarea,\n@@ -129,11 +149,12 @@ export const useInput = (size, type, disabled, modelValue, readonly, clearable,\nupperLimit,\ntextLength,\nshowClear,\n- showPwdVisible\n+ showPwdVisible,\n+ getSuffixVisible\n}\n}\n-export const useInteractive = (instance, input, nativeInputValue, modelValue, { focused, isComposing, passwordVisible }, validateEvent, emit, slots) => {\n+export const useInteractive = (instance, input, { type, modelValue, validateEvent }, { focused, isComposing, passwordVisible }, nativeInputValue, emit, slots) => {\nconst focus = () => {\nunref(input).focus()\n@@ -250,6 +271,13 @@ export const useInteractive = (instance, input, nativeInputValue, modelValue, {\ncalcIconOffset('suffix')\n}\n+ watch(\n+ () => nativeInputValue,\n+ () => {\n+ setNativeInputValue()\n+ }\n+ )\n+\nreturn {\nfocus,\nblur,\n",
        "date": "07.08.2020 15:54:42",
        "repo": "hug-sun/element3",
        "type": "refactor",
        "sim_msg": "fix(QSelect): render error in certain scenarios",
        "sim_diff": "diff --git a/ui/src/components/select/QSelect.js b/ui/src/components/select/QSelect.js -import { h, defineComponent, ref, computed, watch, onBeforeUpdate, onUpdated, onBeforeMount, onBeforeUnmount, nextTick, getCurrentInstance } from 'vue'\n+import { h, defineComponent, ref, computed, watch, onBeforeUpdate, onUpdated, onBeforeUnmount, nextTick, getCurrentInstance } from 'vue'\nimport QField from '../field/QField.js'\nimport QIcon from '../icon/QIcon.js'\n@@ -142,7 +142,7 @@ export default defineComponent({\nconst dialogFieldFocused = ref(false)\nconst innerLoadingIndicator = ref(false)\n- let inputTimer, innerValueCache, optionScopeCache,\n+ let inputTimer, innerValueCache,\nhasDialog, userInputValue, filterId, defaultInputValue,\ntransitionShowComputed, searchBuffer, searchBufferExp\n@@ -309,7 +309,6 @@ export default defineComponent({\n}\nconst { from, to } = virtualScrollSliceRange.value\n- const { options, optionEls } = optionScopeCache\nreturn props.options.slice(from, to).map((opt, i) => {\nconst disable = isOptionDisabled.value(opt) === true\n@@ -341,7 +340,7 @@ export default defineComponent({\n}\n}\n- const option = {\n+ return {\nindex,\nopt,\nhtml: needsHtmlFn.value(opt),\n@@ -352,22 +351,6 @@ export default defineComponent({\nsetOptionIndex,\nitemProps\n}\n-\n- const optionWithoutEvents = {\n- ...option,\n- itemProps: {\n- ...itemProps,\n- onClick: void 0,\n- onMousemove: void 0\n- }\n- }\n-\n- if (options[ i ] === void 0 || isDeepEqual(optionWithoutEvents, options[ i ]) !== true) {\n- options[ i ] = optionWithoutEvents\n- optionEls[ i ] = void 0\n- }\n-\n- return option\n})\n})\n@@ -949,14 +932,6 @@ export default defineComponent({\n}\nfunction getAllOptions () {\n- if (\n- slots.option !== void 0\n- && optionScopeCache.optionSlot !== slots.option\n- ) {\n- optionScopeCache.optionSlot = slots.option\n- optionScopeCache.optionEls = []\n- }\n-\nconst fn = slots.option !== void 0\n? slots.option\n: scope => {\n@@ -976,17 +951,7 @@ export default defineComponent({\n})\n}\n- const { optionEls } = optionScopeCache\n-\n- let options = padVirtualScroll('div', optionScope.value.map((scope, i) => {\n- if (optionEls[ i ] === void 0) {\n- optionEls[ i ] = fn(scope)\n- }\n-\n- // rendered vnode always needs a new\n- // \"instance\" otherwise DOM diff will say nothing changed\n- return { ...optionEls[ i ] }\n- }))\n+ let options = padVirtualScroll('div', optionScope.value.map(fn))\nif (slots[ 'before-options' ] !== void 0) {\noptions = slots[ 'before-options' ]().concat(options)\n@@ -1298,10 +1263,6 @@ export default defineComponent({\n}\nfunction closeMenu () {\n- if (optionScopeCache !== void 0) {\n- optionScopeCache.optionEls = []\n- }\n-\nif (dialog.value === true) {\nreturn\n}\n@@ -1417,16 +1378,7 @@ export default defineComponent({\nupdatePreState()\n- onBeforeMount(() => {\n- optionScopeCache = {\n- optionSlot: slots.option,\n- options: [],\n- optionEls: []\n- }\n- })\n-\nonBeforeUnmount(() => {\n- optionScopeCache = void 0\nclearTimeout(inputTimer)\n})\n"
    },
    {
        "msg": "refactor(stat): use functional api",
        "diff": "diff --git a/packages/chakra-ui-core/src/CStat/CStat.js b/packages/chakra-ui-core/src/CStat/CStat.js @@ -38,17 +38,17 @@ const arrowOptions = {\n*/\nconst CStat = {\nname: 'CStat',\n- extends: CBox,\n- render (h) {\n- const children = cleanChildren(this.$slots.default)\n+ functional: true,\n+ render (h, { props, slots, data, ...rest }) {\n+ const children = cleanChildren(slots().default)\nreturn h(CBox, {\n- props: {\n+ ...rest,\n+ props: { as: props.as },\n+ attrs: {\nflex: 1,\npr: 4,\nposition: 'relative',\n- ...forwardProps(this.$props)\n- },\n- attrs: {\n+ ...(data.attrs || {}),\n'data-chakra-component': 'CStat'\n}\n}, children)\n@@ -65,17 +65,20 @@ const CStat = {\n*/\nconst CStatGroup = {\nname: 'CStatGroup',\n- extends: CFlex,\n- render (h) {\n- const children = cleanChildren(this.$slots.default)\n+ functional: true,\n+ props: CFlex.props,\n+ render (h, { props, slots, data, ...rest }) {\n+ const children = cleanChildren(slots().default)\nreturn h(CFlex, {\n+ ...rest,\nprops: {\nflexWrap: 'wrap',\njustifyContent: 'space-around',\nalignItems: 'flex-start',\n- ...forwardProps(this.$props)\n+ ...forwardProps(props)\n},\nattrs: {\n+ ...(data.attrs || {}),\n'data-chakra-component': 'CStatGroup'\n}\n}, children)\n@@ -92,23 +95,27 @@ const CStatGroup = {\n*/\nconst CStatArrow = {\nname: 'CStatArrow',\n- extends: CIcon,\n+ functional: true,\nprops: {\n+ ...CIcon.props,\ntype: {\ntype: String,\ndefault: 'increase'\n}\n},\n- render (h) {\n+ render (h, { props, slots, data, ...rest }) {\nreturn h(CIcon, {\n+ ...rest,\nprops: {\n- mr: 1,\nsize: '14px',\n- verticalAlign: 'middle',\n- ...arrowOptions[this.type],\n- ...forwardProps(this.$props)\n+ ...arrowOptions[props.type],\n+ ...forwardProps(props)\n},\nattrs: {\n+ mr: 1,\n+ verticalAlign: 'middle',\n+ ...(data.attrs || {}),\n+ color: arrowOptions[props.type].color,\n'data-chakra-component': 'CStatArrow'\n}\n})\n@@ -125,19 +132,20 @@ const CStatArrow = {\n*/\nconst CStatNumber = {\nname: 'CStatNumber',\n- extends: CText,\n- render (h) {\n+ functional: true,\n+ props: CText.props,\n+ render (h, { props, slots, data, ...rest }) {\nreturn h(CText, {\n- props: {\n+ ...rest,\n+ props: forwardProps(props),\n+ attrs: {\nfontSize: '2xl',\nverticalAlign: 'baseline',\nfontWeight: 'semibold',\n- ...forwardProps(this.$props)\n- },\n- attrs: {\n+ ...(data.attrs || {}),\n'data-chakra-component': 'CStatNumber'\n}\n- }, this.$slots.default)\n+ }, slots().default)\n}\n}\n@@ -151,16 +159,20 @@ const CStatNumber = {\n*/\nconst CStatHelperText = {\nname: 'CStatHelperText',\n- extends: CText,\n- render (h) {\n+ functional: true,\n+ props: CText.props,\n+ render (h, { props, slots, data, ...rest }) {\nreturn h(CText, {\n- props: {\n+ ...rest,\n+ props: forwardProps(props),\n+ attrs: {\nfontSize: 'sm',\nopacity: 0.8,\nmb: 2,\n- ...forwardProps(this.$props)\n+ ...(data.attrs || {}),\n+ 'data-chakra-component': 'CStatHelperText'\n}\n- }, this.$slots.default)\n+ }, slots().default)\n}\n}\n@@ -174,18 +186,19 @@ const CStatHelperText = {\n*/\nconst CStatLabel = {\nname: 'CStatLabel',\n- extends: CText,\n- render (h) {\n+ functional: true,\n+ props: CText.props,\n+ render (h, { props, slots, data, ...rest }) {\nreturn h(CText, {\n- props: {\n+ ...rest,\n+ props: forwardProps(props),\n+ attrs: {\nfontWeight: 'medium',\nfontSize: 'sm',\n- ...forwardProps(this.$props)\n- },\n- attrs: {\n+ ...(data.attrs || {}),\n'data-chakra-component': 'CStatLabel'\n}\n- }, this.$slots.default)\n+ }, slots().default)\n}\n}\n",
        "date": "12.07.2020 12:02:29",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "refactor",
        "sim_msg": "fix: broken child property observation",
        "sim_diff": "diff --git a/packages/base/src/UI5Element.js b/packages/base/src/UI5Element.js @@ -359,20 +359,22 @@ class UI5Element extends HTMLElement {\nthis._monitoredChildProps.set(slotName, { observedProps, notObservedProps });\n}\n- child.addEventListener(\"_propertyChange\", this._onChildPropertyUpdated);\n+ child.addEventListener(\"_propertyChange\", this._invalidateParentOfPropertyUpdate);\n}\n_detachChildPropertyUpdated(child) {\n- child.removeEventListener(\"_propertyChange\", this._onChildPropertyUpdated);\n+ child.removeEventListener(\"_propertyChange\", this._invalidateParentOfPropertyUpdate);\n}\n- _onChildPropertyUpdated(prop) {\n- if (!this.parentNode) {\n+ _invalidateParentOfPropertyUpdate(prop) {\n+ // The web component to be invalidated\n+ const parentNode = this.parentNode;\n+ if (!parentNode) {\nreturn;\n}\n- const slotName = this.constructor._getSlotName(this);\n- const propsMetadata = this.parentNode._monitoredChildProps.get(slotName);\n+ const slotName = parentNode.constructor._getSlotName(this);\n+ const propsMetadata = parentNode._monitoredChildProps.get(slotName);\nif (!propsMetadata) {\nreturn;\n@@ -380,7 +382,7 @@ class UI5Element extends HTMLElement {\nconst { observedProps, notObservedProps } = propsMetadata;\nif (observedProps.includes(prop.detail.name) && !notObservedProps.includes(prop.detail.name)) {\n- this.parentNode._invalidate(\"_parent_\", this);\n+ parentNode._invalidate(\"_parent_\", this);\n}\n}\n"
    },
    {
        "msg": "refactor: use computed data to see whether to use router link",
        "diff": "diff --git a/packages/veui/src/components/Link.vue b/packages/veui/src/components/Link.vue <slot/>\n</component>\n<router-link\n- v-else-if=\"$router && !native\"\n+ v-else-if=\"useRouter\"\n:class=\"klass\"\n:to=\"to\"\n:rel=\"realRel\"\n@@ -73,6 +73,9 @@ export default {\n).join(' ')\n}\nreturn this.rel\n+ },\n+ useRouter () {\n+ return this.$router && !this.native\n}\n},\nmethods: {\n",
        "date": "31.05.2019 21:16:59",
        "repo": "ecomfe/veui",
        "type": "refactor",
        "sim_msg": "chore: Update index file for /dev",
        "sim_diff": "diff --git a/dev/components/index.vue b/dev/components/index.vue <div\nclass=\"list no-border\"\nv-for=\"(category, title) in list\"\n+ :key=\"`category-${title}`\"\n>\n<h4 class=\"uppercase\">\n{{ title }}\n</h4>\n- <router-link\n+ <q-item\nv-for=\"feature in category\"\n:key=\"`${feature.route}${feature.title}`\"\n- tag=\"div\"\n- class=\"q-item q-item-link\"\n:to=\"feature.route\"\n>\n<q-item-main :label=\"feature.title\" />\n<q-item-side right icon=\"chevron_right\" />\n- </router-link>\n+ </q-item>\n</div>\n</div>\n</div>\n"
    },
    {
        "msg": "refactor(SentenTree): empty top-level element",
        "diff": "diff --git a/components/SentenTree/index.js b/components/SentenTree/index.js +import { select } from 'd3-selection';\n+\nimport VisComponent from '../../VisComponent';\nimport { SentenTreeBuilder,\nSentenTreeVis } from 'sententree/dist/SentenTree';\n@@ -53,6 +55,11 @@ export default class SentenTree extends VisComponent {\nconstructor (el, {data, id = null, text = 'text', count = 'count', graphs = 3}) {\nsuper(el);\n+ // Empty element.\n+ select(el)\n+ .selectAll('*')\n+ .remove();\n+\n// Transform input data into correct form.\nthis.data = data.map((d, i) => ({\nid: id ? d[id] : i,\n",
        "date": "04.05.2017 10:13:15",
        "repo": "kitware/candela",
        "type": "refactor",
        "sim_msg": "test(Select): custom tag show tests",
        "sim_diff": "diff --git a/test/select/index-spec.js b/test/select/index-spec.js @@ -456,6 +456,25 @@ describe('Select', () => {\nwrapper.find('i.next-icon-delete-filling').simulate('click');\n});\n+ it('should support custom content with mode=tag', done => {\n+ const value = [\n+ { label: 'xxx', value: '0' },\n+ { label: 'empty', value: 1 },\n+ { label: 'zzz', value: 1 },\n+ { label: 'yyy', value: 1 },\n+ ];\n+ wrapper.setProps({\n+ maxTagTextLength: 2,\n+ visible: true,\n+ maxTagCount: 2,\n+ mode: 'tag',\n+ value\n+ });\n+ wrapper.update();\n+ assert(wrapper.find('span.next-select div.next-tag').length === 3);\n+ done()\n+ });\n+\nit('should support onChange with mode=single ', done => {\nconst dataSource = [\n{ label: 'xxx', value: '0' },\n"
    },
    {
        "msg": "refactor(Utilities): update generator",
        "diff": "diff --git a/scss/mixins/_utilities.scss b/scss/mixins/_utilities.scss $properties: append((), $properties);\n}\n- // Use class prefix if present\n- $property-class-prefix: if(map-has-key($utility, prefix), map-get($utility, prefix), null);\n- $property-class-prefix: if($property-class-prefix == null, \"\", $property-class-prefix);\n-\n// Use custom class if present\n$property-class: if(map-has-key($utility, class), map-get($utility, class), nth($properties, 1));\n$property-class: if($property-class == null, \"\", $property-class);\n// Don't prefix if value key is null (eg. with shadow class)\n$property-class-modifier: if($key, if($property-class == \"\" and $infix == \"\", \"\", \"-\") + $key, \"\");\n- // Generate also CSS Variable\n+ // Generate CSS Variable\n$generate-vars: if(map-has-key($utility, vars), map-get($utility, vars), false);\n$generate-only-vars: if(map-has-key($utility, only-vars), map-get($utility, only-vars), false);\n// Generate RTL version\n$generate-rtl: if(map-has-key($utility, rtl), map-get($utility, rtl), false);\n+ // // Add theme prefix\n+ // $theme-prefix: if(map-has-key($utility, theme-prefix), map-get($utility, theme-prefix), false);\n+\n@if map-get($utility, rfs) {\n// Inside the media query\n@if $is-rfs-media-query {\n@if $is-rtl == false {\n/* rtl:begin:remove */\n}\n- .#{$property-class-prefix + $property-class + $infix + $property-class-modifier} {\n+\n+ .#{$property-class + $infix + $property-class-modifier} {\n@each $property in $properties {\n@if $generate-vars == true or $generate-only-vars == true {\n@if $generate-only-vars {\n",
        "date": "22.03.2021 13:52:52",
        "repo": "coreui/coreui",
        "type": "refactor",
        "sim_msg": "fix: fixing tests for css output and added new tests for versioned output",
        "sim_diff": "diff --git a/test/mix.js b/test/mix.js @@ -48,7 +48,8 @@ test('that it determines the CSS output path correctly.', t => {\n.js('js/stub.js', 'dist')\n.sass('sass/stub.scss', 'dist');\n- t.is('dist/stub.css', mix.config.cssOutput());\n+ var segments = mix.config.sass[0];\n+ t.is('dist/stub.css', segments.output.path);\n});\n@@ -82,15 +83,41 @@ test('that it calculates the output correctly', t => {\npublicPath: './'\n}, mix.config.output());\n+});\n+\n+test('that it calculates versioned output correctly', t => {\n+\n+ mix.js('js/stub.js', 'dist').sass('sass/stub.scss', 'dist');\n- // Enabling file versioning shoul dchange this output.\n- mix.version();\n+ // turn on versioning and fake production env\n+ // since versioninig only works in production\n+ mix.config.versioning = true;\n+ mix.config.inProduction = true;\nt.deepEqual({\npath: './public',\n- filename: 'dist/[name].[hash].js',\n+ filename: 'dist/[name].[chunkhash].js',\npublicPath: './'\n}, mix.config.output());\n+\n+ // Enabling Hot Reloading should change this output.\n+ mix.config.hmr = true;\n+\n+ t.deepEqual({\n+ path: '/',\n+ filename: 'dist/[name].[chunkhash].js',\n+ publicPath: 'http://localhost:8080/'\n+ }, mix.config.output());\n+\n+ mix.config.hmr = false;\n+ mix.extract(['some-lib']);\n+\n+ t.deepEqual({\n+ path: './public',\n+ filename: 'dist/[name].[chunkhash].js',\n+ publicPath: './'\n+ }, mix.config.output());\n+\n});\n"
    },
    {
        "msg": "refactor: getFiles: allPlaces -> processedPlaces",
        "diff": "diff --git a/packages/engine-processor/lib/processor.js b/packages/engine-processor/lib/processor.js @@ -102,14 +102,15 @@ async function iterate({name, rawSource, fileList, merge, processFile, processed\nasync function getFiles({name, fix, rawSource, processorRunners}) {\nconst fileList = [];\n- const allPlaces = [];\n+ const processedPlaces = [];\nlet isProcessed = false;\nlet processedSource = '';\n- let processedPlaces = [];\nlet merge = null;\nfor (const currentRunner of processorRunners) {\n+ let places = [];\n+\nconst {\nisMatch,\nbranch = stubSplit,\n@@ -127,16 +128,16 @@ async function getFiles({name, fix, rawSource, processorRunners}) {\nisProcessed = true;\nif (lint)\n- [processedSource, processedPlaces] = await lint(rawSource, {fix});\n+ [processedSource, places] = await lint(rawSource, {fix});\nelse if (fix)\nprocessedSource = await fixFind(rawSource);\nelse\n- processedPlaces = await find(rawSource);\n+ places = await find(rawSource);\nif (!processedSource)\nprocessedSource = rawSource;\n- allPlaces.push(...processedPlaces);\n+ processedPlaces.push(...places);\nconst files = await branch(processedSource);\n@@ -147,7 +148,7 @@ async function getFiles({name, fix, rawSource, processorRunners}) {\nmerge,\nisProcessed,\nprocessedSource,\n- processedPlaces: allPlaces,\n+ processedPlaces,\nfileList,\n};\n}\n",
        "date": "23.09.2022 13:27:11",
        "repo": "coderaiser/putout",
        "type": "refactor",
        "sim_msg": "chore: fix css-vars-usage-report on Windows",
        "sim_diff": "diff --git a/packages/theming/lib/generate-css-vars-usage-report/index.js b/packages/theming/lib/generate-css-vars-usage-report/index.js @@ -16,8 +16,9 @@ const processFile = async file => {\nconst generate = async () => {\nconst { globby } = await import(\"globby\");\n- const mainFiles = await globby(path.join(__dirname, \"../../../main/src/themes/**/*.css\"));\n- const fioriFiles = await globby(path.join(__dirname, \"../../../fiori/src/themes/**/*.css\"));\n+ const mainFiles = await globby(path.join(__dirname, \"../../../main/src/themes/**/*.css\").replace(/\\\\/g, \"/\"));\n+ const fioriFiles = await globby(path.join(__dirname, \"../../../fiori/src/themes/**/*.css\").replace(/\\\\/g, \"/\"));\n+\nawait Promise.all([...mainFiles.map(processFile), ...fioriFiles.map(processFile)]);\nconst collator = new Intl.Collator(undefined, {numeric: true, sensitivity: 'base'});\n"
    },
    {
        "msg": "refactor: remove unnecessary me = this",
        "diff": "diff --git a/packages/veui/src/components/FilterPanel.vue b/packages/veui/src/components/FilterPanel.vue @@ -89,8 +89,7 @@ export default {\n}\n},\ncreated () {\n- let me = this\n- this.debounceSearch = debounce(() => me.search(), 200)\n+ this.debounceSearch = debounce(() => this.search(), 200)\n},\nbeforeDestroy () {\nthis.debounceSearch.cancel()\n",
        "date": "09.02.2019 11:15:17",
        "repo": "ecomfe/veui",
        "type": "refactor",
        "sim_msg": "fix: QSearch | :after, :before not working",
        "sim_diff": "diff --git a/src/components/search/QSearch.vue b/src/components/search/QSearch.vue @blur=\"__onBlur\"\n@keyup=\"__onKeyup\"\n@keydown=\"__onKeydown\"\n+ @click=\"__onClick\"\n>\n<slot></slot>\n</q-input>\n@@ -115,10 +116,10 @@ export default {\n: this.debounce\n},\ncontrolBefore () {\n- return [{icon: this.icon, handler: this.focus}]\n+ return this.before || [{icon: this.icon, handler: this.focus}]\n},\ncontrolAfter () {\n- return [{\n+ return this.after || [{\nicon: this.inverted ? 'clear' : 'cancel',\ncontent: true,\nhandler: this.clearAndFocus\n"
    },
    {
        "msg": "refactor(colors): code structure cleanup, fixed missing export",
        "diff": "diff --git a/src/modeling/color.js b/src/modeling/color.js @@ -180,7 +180,6 @@ export function color () {\nreturn o.setColor(c)\n}\n-\n// from http://axonflux.com/handy-rgb-to-hsl-and-rgb-to-hsv-color-model-c\n/**\n* Converts an RGB color value to HSL. Conversion formula\n@@ -193,25 +192,31 @@ export function color () {\n* @param Number b The blue color value\n* @return Array The HSL representation\n*/\n-function rgb2hsl(r, g, b){\n+export function rgb2hsl (r, g, b) {\nif (r.length) { b = r[2], g = r[1], r = r[0]; }\n- var max = Math.max(r, g, b), min = Math.min(r, g, b);\n- var h, s, l = (max + min) / 2;\n+ var max = Math.max(r, g, b), min = Math.min(r, g, b)\n+ var h, s, l = (max + min) / 2\nif (max == min) {\n- h = s = 0; // achromatic\n+ h = s = 0 // achromatic\n} else {\n- var d = max - min;\n- s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n+ var d = max - min\n+ s = l > 0.5 ? d / (2 - max - min) : d / (max + min)\nswitch (max) {\n- case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n- case g: h = (b - r) / d + 2; break;\n- case b: h = (r - g) / d + 4; break;\n+ case r:\n+ h = (g - b) / d + (g < b ? 6 : 0)\n+ break\n+ case g:\n+ h = (b - r) / d + 2\n+ break\n+ case b:\n+ h = (r - g) / d + 4\n+ break\n}\n- h /= 6;\n+ h /= 6\n}\n- return [h, s, l];\n+ return [h, s, l]\n}\n/**\n@@ -227,28 +232,28 @@ function rgb2hsl(r, g, b){\n*/\nexport function hsl2rgb (h, s, l) {\nif (h.length) { l = h[2], s = h[1], h = h[0]; }\n- var r, g, b;\n+ var r, g, b\nif (s == 0) {\n- r = g = b = l; // achromatic\n+ r = g = b = l // achromatic\n} else {\nfunction hue2rgb (p, q, t) {\n- if(t < 0) t += 1;\n- if(t > 1) t -= 1;\n- if(t < 1/6) return p + (q - p) * 6 * t;\n- if(t < 1/2) return q;\n- if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;\n- return p;\n+ if (t < 0) t += 1\n+ if (t > 1) t -= 1\n+ if (t < 1 / 6) return p + (q - p) * 6 * t\n+ if (t < 1 / 2) return q\n+ if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6\n+ return p\n}\n- var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n- var p = 2 * l - q;\n- r = hue2rgb(p, q, h + 1/3);\n- g = hue2rgb(p, q, h);\n- b = hue2rgb(p, q, h - 1/3);\n+ var q = l < 0.5 ? l * (1 + s) : l + s - l * s\n+ var p = 2 * l - q\n+ r = hue2rgb(p, q, h + 1 / 3)\n+ g = hue2rgb(p, q, h)\n+ b = hue2rgb(p, q, h - 1 / 3)\n}\n- return [r, g, b];\n+ return [r, g, b]\n}\n/**\n@@ -265,24 +270,30 @@ export function hsl2rgb(h, s, l){\nexport function rgb2hsv (r, g, b) {\nif (r.length) { b = r[2], g = r[1], r = r[0]; }\n- var max = Math.max(r, g, b), min = Math.min(r, g, b);\n- var h, s, v = max;\n+ var max = Math.max(r, g, b), min = Math.min(r, g, b)\n+ var h, s, v = max\n- var d = max - min;\n- s = max == 0 ? 0 : d / max;\n+ var d = max - min\n+ s = max == 0 ? 0 : d / max\nif (max == min) {\n- h = 0; // achromatic\n+ h = 0 // achromatic\n} else {\nswitch (max) {\n- case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n- case g: h = (b - r) / d + 2; break;\n- case b: h = (r - g) / d + 4; break;\n+ case r:\n+ h = (g - b) / d + (g < b ? 6 : 0)\n+ break\n+ case g:\n+ h = (b - r) / d + 2\n+ break\n+ case b:\n+ h = (r - g) / d + 4\n+ break\n}\n- h /= 6;\n+ h /= 6\n}\n- return [h, s, v];\n+ return [h, s, v]\n}\n/**\n@@ -298,24 +309,36 @@ export function rgb2hsv(r, g, b){\n*/\nexport function hsv2rgb (h, s, v) {\nif (h.length) { v = h[2], s = h[1], h = h[0]; }\n- var r, g, b;\n+ var r, g, b\n- var i = Math.floor(h * 6);\n- var f = h * 6 - i;\n- var p = v * (1 - s);\n- var q = v * (1 - f * s);\n- var t = v * (1 - (1 - f) * s);\n+ var i = Math.floor(h * 6)\n+ var f = h * 6 - i\n+ var p = v * (1 - s)\n+ var q = v * (1 - f * s)\n+ var t = v * (1 - (1 - f) * s)\nswitch (i % 6) {\n- case 0: r = v, g = t, b = p; break;\n- case 1: r = q, g = v, b = p; break;\n- case 2: r = p, g = v, b = t; break;\n- case 3: r = p, g = q, b = v; break;\n- case 4: r = t, g = p, b = v; break;\n- case 5: r = v, g = p, b = q; break;\n+ case 0:\n+ r = v, g = t, b = p\n+ break\n+ case 1:\n+ r = q, g = v, b = p\n+ break\n+ case 2:\n+ r = p, g = v, b = t\n+ break\n+ case 3:\n+ r = p, g = q, b = v\n+ break\n+ case 4:\n+ r = t, g = p, b = v\n+ break\n+ case 5:\n+ r = v, g = p, b = q\n+ break\n}\n- return [r, g, b];\n+ return [r, g, b]\n}\n/**\n@@ -326,15 +349,15 @@ export function hsv2rgb(h, s, v){\n* - convert the HEX value into RGB values\n*/\nexport function html2rgb (s) {\n- var r = 0;\n- var g = 0;\n- var b = 0;\n+ var r = 0\n+ var g = 0\n+ var b = 0\nif (s.length == 7) {\n- r = parseInt('0x'+s.slice(1,3))/255;\n- g = parseInt('0x'+s.slice(3,5))/255;\n- b = parseInt('0x'+s.slice(5,7))/255;\n+ r = parseInt('0x' + s.slice(1, 3)) / 255\n+ g = parseInt('0x' + s.slice(3, 5)) / 255\n+ b = parseInt('0x' + s.slice(5, 7)) / 255\n}\n- return [r,g,b];\n+ return [r, g, b]\n}\n/**\n@@ -346,6 +369,6 @@ export function html2rgb(s) {\nexport function rgb2html (r, g, b) {\nif (r.length) { b = r[2], g = r[1], r = r[0]; }\nvar s = '#' +\n- Number(0x1000000+r*255*0x10000+g*255*0x100+b*255).toString(16).substring(1);\n- return s;\n+ Number(0x1000000 + r * 255 * 0x10000 + g * 255 * 0x100 + b * 255).toString(16).substring(1)\n+ return s\n}\n",
        "date": "06.01.2017 23:20:21",
        "repo": "jscad/openjscad.org",
        "type": "refactor",
        "sim_msg": "feat: Improve color utils",
        "sim_diff": "diff --git a/src/utils/colors.js b/src/utils/colors.js -export function rgbToHex (r, g, b) {\n- if (typeof r === 'string') {\n- const res = r.match(/\\b\\d{1,3}\\b/g).map(Number)\n- r = res[0]\n- g = res[1]\n- b = res[2]\n- }\n+export function rgbToHex (r, g, b, a) {\n+ const alpha = a !== void 0\nif (\ntypeof r !== 'number' ||\n@@ -12,12 +7,17 @@ export function rgbToHex (r, g, b) {\ntypeof b !== 'number' ||\nr > 255 ||\ng > 255 ||\n- b > 255\n+ b > 255 ||\n+ (alpha && (typeof a !== 'number' || a > 100))\n) {\n- throw new TypeError('Expected three numbers below 256')\n+ throw new TypeError('Expected 3 numbers below 256 (and optionally 1 below 100)')\n}\n- return ((b | g << 8 | r << 16) | 1 << 24).toString(16).slice(1)\n+ const hex = alpha\n+ ? (b | g << 8 | r << 16 | a << 24) | 1 << 32\n+ : (b | g << 8 | r << 16) | 1 << 24\n+\n+ return hex.toString(alpha ? 24 : 16).slice(1)\n}\nexport function hexToRgb (hex) {\n@@ -30,13 +30,18 @@ export function hexToRgb (hex) {\nif (hex.length === 3) {\nhex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2]\n}\n+ else if (hex.length === 4) {\n+ hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2] + hex[3] + hex[3]\n+ }\nlet num = parseInt(hex, 16)\n- return [num >> 16, num >> 8 & 255, num & 255]\n+ return hex.length > 6\n+ ? [num >> 24, num >> 16 & 255, num >> 8 & 255, (num & 255) / 255]\n+ : [num >> 16, num >> 8 & 255, num & 255]\n}\n-export function hsvToRgb (h, s, v) {\n+export function hsvToRgb (h, s, v, a) {\nlet r, g, b, i, f, p, q, t\nif (arguments.length === 1) {\n@@ -88,11 +93,12 @@ export function hsvToRgb (h, s, v) {\nreturn {\nr: Math.round(r * 255),\ng: Math.round(g * 255),\n- b: Math.round(b * 255)\n+ b: Math.round(b * 255),\n+ a\n}\n}\n-export function rgbToHsv (r, g, b) {\n+export function rgbToHsv (r, g, b, a) {\nif (arguments.length === 1) {\nr = r.r\ng = r.g\n@@ -127,6 +133,7 @@ export function rgbToHsv (r, g, b) {\nreturn {\nh: h * 360,\ns: s,\n- v: v\n+ v: v,\n+ a\n}\n}\n"
    },
    {
        "msg": "refactor: use slot/slot-scope syntax for consistency",
        "diff": "diff --git a/packages/veui/src/components/Uploader.vue b/packages/veui/src/components/Uploader.vue :expanded.sync=\"expandedControlDropdowns[index]\"\n@click=\"handleMediaAction(file, index, $event)\"\n>\n- <template v-slot:trigger=\"{ props, handlers }\">\n+ <template\n+ slot=\"trigger\"\n+ slot-scope=\"{ props, handlers }\"\n+ >\n<label\nv-if=\"control.name === 'replace'\"\n:key=\"control.name\"\ntrigger=\"hover\"\n@click=\"handleMediaAction(file, index, $event)\"\n>\n- <template v-slot:trigger=\"{ props, handlers }\">\n+ <template\n+ slot=\"trigger\"\n+ slot-scope=\"{ props, handlers }\"\n+ >\n<label\nv-if=\"control.name === 'replace'\"\n:key=\"control.name\"\n@click=\"handleMediaEntry\"\n>\n<template\n- v-slot:trigger=\"{\n+ slot=\"trigger\"\n+ slot-scope=\"{\nprops: triggerProps,\nhandlers: triggerHandlers\n}\"\n@@ -830,12 +837,14 @@ export default {\n},\nrealAccept () {\nif (this.extensions) {\n- return this.extensions.map(extension => {\n+ return this.extensions\n+ .map(extension => {\nif (extension.indexOf('.') !== 0) {\nreturn `.${extension}`\n}\nreturn extension\n- }).join(',')\n+ })\n+ .join(',')\n}\nif (this.accept) {\nreturn this.accept\n@@ -991,7 +1000,11 @@ export default {\nlet newFiles = [...files]\nlet countFiles = this.fileList.length + newFiles.length\n- if (!this.isReplacing && this.maxCount !== 1 && countFiles > this.maxCount) {\n+ if (\n+ !this.isReplacing &&\n+ this.maxCount !== 1 &&\n+ countFiles > this.maxCount\n+ ) {\ntoast.error(this.t('tooManyFiles'))\nthis.$emit('invalid', {\nerrors: [\n@@ -1145,9 +1158,11 @@ export default {\nextensions = []\n}\n- return acceptExtention === '*' &&\n+ return (\n+ acceptExtention === '*' &&\nitem.indexOf('/') > -1 &&\n(extensions.indexOf(extension) > -1 || !extensions.length)\n+ )\n})\n},\nvalidateSize (fileSize) {\n@@ -1401,7 +1416,10 @@ export default {\ndefaultControls = [\n{\nname: 'preview',\n- icon: file.type === 'image' ? this.icons.previewImage : this.icons.previewVideo,\n+ icon:\n+ file.type === 'image'\n+ ? this.icons.previewImage\n+ : this.icons.previewVideo,\ndisabled: false,\nlabel: this.t('preview')\n}\n",
        "date": "08.12.2020 11:01:57",
        "repo": "ecomfe/veui",
        "type": "refactor",
        "sim_msg": "refactor(button): remove script setup",
        "sim_diff": "diff --git a/src/components/button/CdrButton.vue b/src/components/button/CdrButton.vue -<script setup>\n-import { useCssModule, computed, useSlots } from 'vue';\n+<script>\n+import {\n+ defineComponent, useCssModule, computed,\n+} from 'vue';\n+import mapClasses from '../../utils/mapClasses';\n+import { responsiveModifyClass, buildBooleanClass } from '../../utils/buildClass';\n+import propValidator from '../../utils/propValidator';\n-import mapClasses from '../../utils/mapClasses.js';\n-import { responsiveModifyClass, buildBooleanClass } from '../../utils/buildClass.js';\n-import propValidator from '../../utils/propValidator.js';\n-\n-const slots = useSlots();\n-const props = defineProps({\n+export default defineComponent({\n+ name: 'CdrButton',\n+ props: {\ntag: {\ntype: String,\ndefault: 'button',\n@@ -52,28 +54,43 @@ withBackground: {\ntype: Boolean,\ndefault: false,\n},\n-});\n+ },\n+ setup(props, ctx) {\nconst baseClass = 'cdr-button';\n-const style = useCssModule();\n-\n-/************************ Computed properties *************************/\n-const buttonType = computed(() => props.tag === 'button' ? props.type : null);\n+ const buttonType = computed(() => (props.tag === 'button' ? props.type : null));\nconst modifierClass = computed(() => `${baseClass}--${props.modifier}`);\nconst fullWidthClass = computed(() => !props.iconOnly && props.fullWidth\n&& buildBooleanClass(baseClass, props.fullWidth, 'full-width'));\nconst sizeClass = computed(() => (!props.iconOnly\n? responsiveModifyClass(baseClass, '', props.size)\n: `cdr-button--icon-only-${props.size}`));\n-const iconLeftClass = computed(() => slots['icon-left'] && slots.default\n+ const iconLeftClass = computed(() => ctx.slots['icon-left'] && ctx.slots.default\n&& `${baseClass}--has-icon-left`);\n-const iconRightClass = computed(() => slots['icon-right'] && slots.default\n+ const iconRightClass = computed(() => ctx.slots['icon-right'] && ctx.slots.default\n&& `${baseClass}--has-icon-right`);\nconst iconOnlyClass = computed(() => props.iconOnly && `${baseClass}--icon-only`);\nconst withBackgroundClass = computed(() => props.iconOnly\n&& props.withBackground && `${baseClass}--with-background`);\n+ return {\n+ style: useCssModule(),\n+ mapClasses,\n+ baseClass,\n+ buttonType,\n+ modifierClass,\n+ fullWidthClass,\n+ sizeClass,\n+ iconLeftClass,\n+ iconRightClass,\n+ iconOnlyClass,\n+ withBackgroundClass,\n+ };\n+ },\n+});\n+\n</script>\n+\n<template>\n<component\n:is=\"tag\"\n"
    },
    {
        "msg": "refactor(src/common/routing/index.jsx): make absolute export for RouteAuth",
        "diff": "diff --git a/src/common/routing/index.jsx b/src/common/routing/index.jsx import {Route} from 'react-router-dom'\nimport {Users, Dashboard, Login} from 'containers'\n-import {RouteAuth} from 'components/addons'\n+import RouteAuth from 'components/addons/RouteAuth'\nimport {createBrowserHistory, createMemoryHistory} from 'history'\nexport const history = getHistory()\n",
        "date": "10.08.2017 04:53:59",
        "repo": "metnew/suicrux",
        "type": "refactor",
        "sim_msg": "refactor: create injectReducer",
        "sim_diff": "diff --git a/packages/frontend/src/index.js b/packages/frontend/src/index.js @@ -20,6 +20,10 @@ const history = createBrowserHistory();\nexport const store = createStore(createRootReducer(history), createMiddleware(history));\n+store.injectReducer = () => {\n+ store.replaceReducer(createRootReducer(history));\n+};\n+\nReactDOM.render(\n<GoogleReCaptchaProvider\nreCaptchaKey={RECAPTCHA_ENTERPRISE_SITE_KEY}\n"
    },
    {
        "msg": "refactor(Progress): improve syntax",
        "diff": "diff --git a/scss/_progress.scss b/scss/_progress.scss }\n.progress-group-icon {\n- margin: 0 $spacer 0 ($spacer * .25);\nfont-size: $font-size-lg;\n-\n- // @include ltr {\n- // margin: 0 $spacer 0 ($spacer * .25);\n- // }\n- // @include rtl {\n- // margin: 0 ($spacer * .25) 0 $spacer;\n- // }\n-}\n-\n-.progress-group-text {\n- font-size: $font-size-sm;\n- color: $gray-700;\n}\n.progress-group-header {\n",
        "date": "19.03.2021 12:11:01",
        "repo": "coreui/coreui",
        "type": "refactor",
        "sim_msg": "feat(subnav): restore desktop styles",
        "sim_diff": "diff --git a/src/components/layout/header/sub-navigation.module.scss b/src/components/layout/header/sub-navigation.module.scss padding-left: 0;\ntext-align: left;\n+ @media (min-width: $viewport-lg) {\n+ display: block;\n+\n+ li {\n+ display: inline-block;\n+ a {\n+ @include margin(0, (left, right));\n+ @include margin(1, (top, bottom));\n+ }\n+ &:first-child {\n+ a {\n+ @include margin(0, left);\n+ }\n+ }\n+ }\n+ }\n+\na {\ntext-decoration: none;\nfont-weight: bold;\n"
    },
    {
        "msg": "refactor(src/common/routing): use BROWSER env instead of IS_SSR",
        "diff": "diff --git a/src/common/routing/index.jsx b/src/common/routing/index.jsx @@ -19,6 +19,7 @@ export const appRouting = [\nicon: 'newspaper',\nname: 'Dashboard',\nexact: true,\n+ // lazy: true,\nsidebarVisible: true,\ntag: RouteAuth,\ncomponent: Dashboard\n@@ -91,7 +92,7 @@ export const Routing = authCheck => {\nfunction getHistory () {\nconst basename = ''\n- if (process.env.IS_SSR) {\n+ if (process.env.BROWSER !== true) {\nreturn createMemoryHistory()\n}\nreturn createBrowserHistory({basename})\n",
        "date": "04.08.2017 14:05:29",
        "repo": "metnew/suicrux",
        "type": "refactor",
        "sim_msg": "fix: changed background color of content",
        "sim_diff": "diff --git a/src/renderer/index.js b/src/renderer/index.js @@ -66,7 +66,7 @@ render(\n<Provider store={store}>\n<ConnectedRouter history={history.getHistory()}>\n<HashRouter>\n- <div style={{ backgroundColor: '#262F39' }}>\n+ <div style={{ background: 'linear-gradient(135deg, #2b3540 0%,#1e262e 100%)' }}>\n<Route exact path=\"/\" component={Home} />\n<Route path=\"/closeConfirmation\" component={CloseConfirmation} />\n<Route path=\"/createWallet\" component={CreateWallet} />\n"
    },
    {
        "msg": "refactor: remove impossible condition from sceneEqual",
        "diff": "diff --git a/packages/vega-scenegraph/src/util/equal.js b/packages/vega-scenegraph/src/util/equal.js @@ -9,7 +9,6 @@ export function sceneEqual(a, b, key) {\n: (a instanceof Date && b instanceof Date) ? +a === +b\n: (isNumber(a) && isNumber(b)) ? Math.abs(a - b) <= TOLERANCE\n: (!a || !b || !isObject(a) && !isObject(b)) ? a == b\n- : (a == null || b == null) ? false\n: objectEqual(a, b);\n}\n",
        "date": "18.08.2020 22:03:55",
        "repo": "vega/vega",
        "type": "refactor",
        "sim_msg": "fix(isDeepEqual): ignore undefined keys in objects when comparing",
        "sim_diff": "diff --git a/ui/src/utils/private/is.js b/ui/src/utils/private/is.js @@ -99,10 +99,10 @@ export function isDeepEqual (a, b) {\nreturn a.toString() === b.toString()\n}\n- const keys = Object.keys(a)\n+ const keys = Object.keys(a).filter(key => a[ key ] !== void 0)\nlength = keys.length\n- if (length !== Object.keys(b).length) {\n+ if (length !== Object.keys(b).filter(key => b[ key ] !== void 0).length) {\nreturn false\n}\n"
    },
    {
        "msg": "refactor(src/common/components/Root): fix Root component SSR, add SSR props",
        "diff": "diff --git a/src/common/components/views/Root/index.jsx b/src/common/components/views/Root/index.jsx import React, {Component} from 'react'\nimport PropTypes from 'prop-types'\nimport {Provider} from 'react-redux'\n-import {ConnectedRouter as Router} from 'react-router-redux'\nimport {APPLICATION_INIT} from 'actions'\nimport {ThemeProvider} from 'styled-components'\nimport theme from 'styles/theme'\n+const Router = process.env.BROWSER === true\n+ ? require('react-router-redux').ConnectedRouter\n+ : require('react-router').StaticRouter\n+\nexport default class Root extends Component {\nstatic propTypes = {\nstore: PropTypes.object,\n+ SSR: PropTypes.object,\nhistory: PropTypes.object,\nroutes: PropTypes.func\n}\n+ static defaultProps = {\n+ SSR: {}\n+ }\n+\ncomponentWillMount () {\nconst {store} = this.props\nstore.dispatch({type: APPLICATION_INIT})\n@@ -37,11 +45,14 @@ export default class Root extends Component {\n}\nrender () {\n- const {store, history, routes} = this.props\n+ const {SSR, store, history, routes} = this.props\n+ const routerProps = process.env.BROWSER === true\n+ ? {history}\n+ : {location: SSR.location, context: SSR.context}\n// key={Math.random()} = hack for HMR from https://github.com/webpack/webpack-dev-server/issues/395\nreturn (\n<Provider store={store} key={Math.random()}>\n- <Router history={history} key={Math.random()}>\n+ <Router {...routerProps} key={Math.random()}>\n<ThemeProvider theme={theme}>\n{routes(::this.authCheck)}\n</ThemeProvider>\n",
        "date": "04.08.2017 14:09:44",
        "repo": "metnew/suicrux",
        "type": "refactor",
        "sim_msg": "feat(challenges): Call updateSuccessMessage action\nCalled updateSuccessMessage passing it a random compliment each time the\nchallenge is mounted/updated\nCloses",
        "sim_diff": "diff --git a/common/app/routes/Challenges/Show.jsx b/common/app/routes/Challenges/Show.jsx @@ -3,7 +3,7 @@ import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\n-import { challengeMetaSelector } from './redux';\n+import { challengeMetaSelector, updateSuccessMessage } from './redux';\nimport Classic from './views/classic';\nimport Step from './views/step';\n@@ -19,6 +19,7 @@ import {\n} from '../../redux';\nimport { makeToast } from '../../Toasts/redux';\nimport { paramsSelector } from '../../Router/redux';\n+import { randomCompliment } from '../../utils/get-words';\nconst views = {\nbackend: BackEnd,\n@@ -33,7 +34,8 @@ const views = {\nconst mapDispatchToProps = {\nfetchChallenge,\nmakeToast,\n- updateTitle\n+ updateTitle,\n+ updateSuccessMessage\n};\nconst mapStateToProps = createSelector(\n@@ -66,6 +68,7 @@ const propTypes = {\nlang: PropTypes.string.isRequired\n}),\ntitle: PropTypes.string,\n+ updateSuccessMessage: PropTypes.func.isRequired,\nupdateTitle: PropTypes.func.isRequired,\nviewType: PropTypes.string\n};\n@@ -86,6 +89,7 @@ export class Show extends PureComponent {\ncomponentDidMount() {\nthis.props.updateTitle(this.props.title);\n+ this.props.updateSuccessMessage(randomCompliment());\nif (this.isNotTranslated(this.props)) {\nthis.makeTranslateToast();\n}\n@@ -96,13 +100,13 @@ export class Show extends PureComponent {\nthis.props.updateTitle(nextProps.title);\n}\nconst { params: { dashedName } } = nextProps;\n- if (\n- this.props.params.dashedName !== dashedName &&\n- this.isNotTranslated(nextProps)\n- ) {\n+ if (this.props.params.dashedName !== dashedName) {\n+ this.props.updateSuccessMessage(randomCompliment());\n+ if (this.isNotTranslated(nextProps)) {\nthis.makeTranslateToast();\n}\n}\n+ }\nrender() {\nconst { viewType } = this.props;\n"
    },
    {
        "msg": "refactor: simplify responsive behavior",
        "diff": "diff --git a/js/src/sidebar.js b/js/src/sidebar.js @@ -38,7 +38,6 @@ const DefaultType = {\nconst CLASS_NAME_BACKDROP = 'sidebar-backdrop'\nconst CLASS_NAME_FADE = 'fade'\n-// const CLASS_NAME_HIDE = 'hide'\nconst CLASS_NAME_SHOW = 'show'\nconst CLASS_NAME_SIDEBAR = 'sidebar'\nconst CLASS_NAME_SIDEBAR_NARROW = 'sidebar-narrow'\n@@ -69,7 +68,6 @@ class Sidebar extends BaseComponent {\nconstructor(element, config) {\nsuper(element)\nthis._config = this._getConfig(config)\n- // this._breakpoint = this._getBreakpoint()\nthis._show = this._isVisible()\nthis._mobile = this._isMobile()\nthis._overlaid = this._isOverlaid()\n@@ -96,10 +94,6 @@ class Sidebar extends BaseComponent {\nshow() {\nEventHandler.trigger(this._element, EVENT_SHOW)\n- // if (this._element.classList.contains(CLASS_NAME_HIDE)) {\n- // this._element.classList.remove(CLASS_NAME_HIDE)\n- // }\n-\nif (REGEXP_SIDEBAR_SELF_HIDING.test(this._element.className)) {\nthis._element.classList.add(CLASS_NAME_SHOW)\n}\n@@ -132,8 +126,6 @@ class Sidebar extends BaseComponent {\nthis._element.classList.remove(CLASS_NAME_SHOW)\n}\n- // this._element.classList.add(CLASS_NAME_HIDE)\n-\nif (this._isMobile()) {\nthis._removeBackdrop()\n}\n@@ -156,7 +148,7 @@ class Sidebar extends BaseComponent {\n}\ntoggle() {\n- if (this._show) {\n+ if (this._isVisible()) {\nthis.hide()\nreturn\n}\n@@ -240,29 +232,6 @@ class Sidebar extends BaseComponent {\nreturn Boolean(window.getComputedStyle(this._element, null).getPropertyValue('--cui-is-mobile'))\n}\n- _isIOS() {\n- const iOSDevices = [\n- 'iPad Simulator',\n- 'iPhone Simulator',\n- 'iPod Simulator',\n- 'iPad',\n- 'iPhone',\n- 'iPod'\n- ]\n-\n- const platform = Boolean(navigator.platform)\n-\n- if (platform) {\n- while (iOSDevices.length) {\n- if (navigator.platform === iOSDevices.pop()) {\n- return true\n- }\n- }\n- }\n-\n- return false\n- }\n-\n_isNarrow() {\nreturn this._element.classList.contains(CLASS_NAME_SIDEBAR_NARROW)\n}\n",
        "date": "15.04.2021 13:21:00",
        "repo": "coreui/coreui",
        "type": "refactor",
        "sim_msg": "feat: Added keyboard nav handling to BasePopover",
        "sim_diff": "diff --git a/src/components/PopoverMenu/BasePopoverMenu.js b/src/components/PopoverMenu/BasePopoverMenu.js @@ -26,6 +26,75 @@ const defaultProps = {\n};\nclass BasePopoverMenu extends PureComponent {\n+ constructor(props) {\n+ super(props);\n+ this.state = {\n+ activeMenuIndex: -1,\n+ };\n+ }\n+\n+ componentDidMount() {\n+ if (!this.props.allowKeyboardNavigation) {\n+ return;\n+ }\n+ this.setupEventHandlers();\n+ }\n+\n+ componentWillUnmount() {\n+ if (!this.props.allowKeyboardNavigation) {\n+ return;\n+ }\n+ this.cleanupEventHandlers();\n+ }\n+\n+ setupEventHandlers() {\n+ if (!document) {\n+ return;\n+ }\n+\n+ this.keyDownHandler = (keyBoardEvent) => {\n+ if (keyBoardEvent.key.startsWith('Arrow')) {\n+ this.highlightActiveMenu(keyBoardEvent.key);\n+ return;\n+ }\n+\n+ if (keyBoardEvent.key === 'Enter' && this.state.activeMenuIndex !== -1) {\n+ this.props.onItemSelected(this.props.menuItems[this.state.activeMenuIndex]);\n+ }\n+ };\n+ }\n+\n+ highlightActiveMenu(arrowKey) {\n+ let activeMenuIndex = this.state.activeMenuIndex;\n+ if (arrowKey !== 'ArrowDown' && arrowKey !== 'ArrowUp') {\n+ return;\n+ }\n+\n+ if (arrowKey === 'ArrowDown') {\n+ if (activeMenuIndex === -1 || activeMenuIndex === this.props.menuItems.length - 1) {\n+ activeMenuIndex = 0;\n+ } else {\n+ activeMenuIndex += 1;\n+ }\n+ }\n+\n+ if (arrowKey === 'ArrowUp') {\n+ if (activeMenuIndex === -1 || activeMenuIndex === 0) {\n+ activeMenuIndex = this.props.menuItems.length - 1;\n+ } else {\n+ activeMenuIndex -= 1;\n+ }\n+ }\n+ this.setState(() => ({activeMenuIndex}));\n+ }\n+\n+ cleanupEventHandlers() {\n+ if (!document) {\n+ return;\n+ }\n+ document.removeEventListener('keydown', this.keyDownHandler, true);\n+ }\n+\nrender() {\nreturn (\n<Popover\n"
    },
    {
        "msg": "refactor(tooltips): remove variable references",
        "diff": "diff --git a/consumables/scss/components/tooltips/tooltips.scss b/consumables/scss/components/tooltips/tooltips.scss @import '../../global/colors/colors';\n@import '../../global/typography/typography';\n@import '../../global/layout/grid';\n-@import 'vars';\n@import '../../import-once';\n@include exports('tooltips') {\n",
        "date": "05.01.2017 11:22:53",
        "repo": "carbon-design-system/carbon",
        "type": "refactor",
        "sim_msg": "feat: exports window.Butterfly",
        "sim_diff": "diff --git a/index.js b/index.js @@ -14,7 +14,7 @@ import Tips from './src/utils/toolTip';\nimport Layout from './src/utils/layout/layout';\nimport './src/index.less';\n-module.exports = {\n+let Butterfly = {\nCanvas,\nTreeCanvas,\nEdge,\n@@ -26,3 +26,7 @@ module.exports = {\nTips,\nLayout\n};\n+\n+window.Butterfly = Butterfly;\n+\n+module.exports = Butterfly;\n\\ No newline at end of file\n"
    },
    {
        "msg": "refactor: update component to bs5",
        "diff": "diff --git a/js/src/sidebar.js b/js/src/sidebar.js import {\ndefineJQueryPlugin,\nemulateTransitionEnd,\n- getElementFromSelector,\n- getTransitionDurationFromElement\n+ getTransitionDurationFromElement,\n+ reflow,\n+ typeCheckConfig\n} from './util/index'\nimport Data from './dom/data'\nimport EventHandler from './dom/event-handler'\n+import Manipulator from './dom/manipulator'\nimport BaseComponent from './base-component'\n/**\n@@ -76,7 +78,7 @@ const SELECTOR_SIDEBAR = '.c-sidebar'\n*/\nclass Sidebar extends BaseComponent {\nconstructor(element, config) {\n- this._element = element\n+ super(element)\nthis._config = this._getConfig(config)\nthis._open = this._isVisible()\nthis._mobile = this._isMobile()\n@@ -92,10 +94,6 @@ class Sidebar extends BaseComponent {\n// Getters\n- static get VERSION() {\n- return VERSION\n- }\n-\nstatic get Default() {\nreturn Default\n}\n@@ -112,14 +110,14 @@ class Sidebar extends BaseComponent {\nif (this._isMobile()) {\nthis._addClassName(this._firstBreakpointClassName())\nthis._showBackdrop()\n- EventHandler.one(this._element, TRANSITION_END, () => {\n+ EventHandler.one(this._element, 'transitionend', () => {\nthis._addClickOutListener()\n})\n} else if (breakpoint) {\nthis._addClassName(this._getBreakpointClassName(breakpoint))\nif (this._isOverlaid()) {\n- EventHandler.one(this._element, TRANSITION_END, () => {\n+ EventHandler.one(this._element, 'transitionend', () => {\nthis._addClickOutListener()\n})\n}\n@@ -127,7 +125,7 @@ class Sidebar extends BaseComponent {\nthis._addClassName(this._firstBreakpointClassName())\nif (this._isOverlaid()) {\n- EventHandler.one(this._element, TRANSITION_END, () => {\n+ EventHandler.one(this._element, 'transitionend', () => {\nthis._addClickOutListener()\n})\n}\n@@ -142,7 +140,7 @@ class Sidebar extends BaseComponent {\nconst transitionDuration = getTransitionDurationFromElement(this._element)\n- EventHandler.one(this._element, TRANSITION_END, complete)\n+ EventHandler.one(this._element, 'transitionend', complete)\nemulateTransitionEnd(this._element, transitionDuration)\n}\n@@ -174,7 +172,7 @@ class Sidebar extends BaseComponent {\nconst transitionDuration = getTransitionDurationFromElement(this._element)\n- EventHandler.one(this._element, TRANSITION_END, complete)\n+ EventHandler.one(this._element, 'transitionend', complete)\nemulateTransitionEnd(this._element, transitionDuration)\n}\n@@ -352,7 +350,7 @@ class Sidebar extends BaseComponent {\nreturn siblings\n}\n- _toggleDropdown(event, sidebar) {\n+ _toggleDropdown(event) {\nlet toggler = event.target\nif (!toggler.classList.contains(CLASS_NAME_NAV_DROPDOWN_TOGGLE)) {\ntoggler = toggler.closest(SELECTOR_NAV_DROPDOWN_TOGGLE)\n",
        "date": "17.12.2020 23:55:43",
        "repo": "coreui/coreui",
        "type": "refactor",
        "sim_msg": "feat(container): use double touch event handler",
        "sim_diff": "diff --git a/src/components/container/container.js b/src/components/container/container.js import Events from '../../base/events'\nimport UIObject from '../../base/ui_object'\nimport ErrorMixin from '../../base/error_mixin'\n+import { DoubleTouchEventHandler } from '../../base/utils'\nimport './public/style.scss'\n@@ -124,9 +125,7 @@ export default class Container extends UIObject {\nthis.isReady = false\nthis.mediaControlDisabled = false\nthis.plugins = [this.playback]\n- this.dblTapTimer = null\n- this.dblTapLast = 0\n- this.dblTapDelay = 500 // FIXME: could be a player option\n+ this.dblTapHandler = new DoubleTouchEventHandler(500)\nthis.clickTimer = null\nthis.clickDelay = 200 // FIXME: could be a player option\nthis.bindEvents()\n@@ -358,22 +357,10 @@ export default class Container extends UIObject {\ndblTap(evt) {\nif (!this.options.chromeless || this.options.allowUserInteraction) {\n- // Based on http://jsfiddle.net/brettwp/J4djY/\n- let currentTime = new Date().getTime()\n- let tapLength = currentTime - this.dblTapLast\n- clearTimeout(this.dblTapTimer)\n-\n- if (tapLength < this.dblTapDelay && tapLength > 0) {\n+ this.dblTapHandler.handle(evt, () => {\nthis.cancelClicked()\nthis.trigger(Events.CONTAINER_DBLCLICK, this, this.name)\n- evt.preventDefault()\n- } else {\n- this.dblTapTimer = setTimeout(() => {\n- clearTimeout(this.dblTapTimer)\n- }, this.dblTapDelay)\n- }\n-\n- this.dblTapLast = currentTime\n+ })\n}\n}\n"
    },
    {
        "msg": "refactor(group): superficial group function cleanup",
        "diff": "diff --git a/src/modeling/group.js b/src/modeling/group.js import {CAG} from '../csg'\n-\n+// FIXME : is this used anywhere ?\nexport default function group () { // experimental\nvar o\nvar i = 0\nvar a = arguments\nif (a[0].length) a = a[0]\n- if ((typeof (a[i]) == 'object') && (a[i] instanceof CAG)) {\n+ if ((typeof (a[i]) === 'object') && (a[i] instanceof CAG)) {\no = a[i].extrude({offset: [0, 0, 0.1]}) // -- convert a 2D shape to a thin solid, note: do not a[i] = a[i].extrude()\n} else {\no = a[i++]\n}\nfor (; i < a.length; i++) {\nvar obj = a[i]\n- if ((typeof (a[i]) == 'object') && (a[i] instanceof CAG)) {\n+ if ((typeof (a[i]) === 'object') && (a[i] instanceof CAG)) {\nobj = a[i].extrude({offset: [0, 0, 0.1]}) // -- convert a 2D shape to a thin solid:\n}\no = o.unionForNonIntersecting(obj)\n",
        "date": "06.01.2017 23:36:23",
        "repo": "jscad/openjscad.org",
        "type": "refactor",
        "sim_msg": "fix: holding backspace",
        "sim_diff": "diff --git a/src/lib/core.js b/src/lib/core.js @@ -4693,6 +4693,13 @@ export default function (context, pluginCallButtons, plugins, lang, options) {\n}\n}\n+ if (!util.isFormatElement(formatEl) && !context.element.wysiwyg.firstElementChild) {\n+ e.preventDefault();\n+ e.stopPropagation();\n+ core._setDefaultFormat('P');\n+ return false;\n+ }\n+\nif (!formatEl.nextElementSibling && !formatEl.previousElementSibling && (util.isWysiwygDiv(formatEl.parentNode) && util.isFormatElement(formatEl) && !util.isListCell(formatEl) &&\n(formatEl.childNodes.length <= 1 && (!formatEl.firstChild || util.onlyZeroWidthSpace(formatEl.firstChild.textContent))))) {\ne.preventDefault();\n"
    },
    {
        "msg": "refactor: remove `c-` prefix and fix icon position",
        "diff": "diff --git a/scss/_icon.scss b/scss/_icon.scss -.c-icon {\n+.icon {\ndisplay: inline-block;\ncolor: inherit;\ntext-align: center;\n+ vertical-align: -.125rem; // Fix the position of icon\nfill: currentColor;\n- &:not(.c-icon-c-s):not(.c-icon-custom-size) {\n+ &:not(.icon-c-s):not(.icon-custom-size) {\n@include icon-size($icon-size-base);\n// TODO: create variable with a range\n@for $i from 2 through 9 {\n- &.c-icon-#{$i}xl {\n+ &.icon-#{$i}xl {\n@include icon-size($i * ($icon-size-xl / 1.5));\n}\n}\n- &.c-icon-xl {\n+ &.icon-xl {\n@include icon-size($icon-size-xl);\n}\n- &.c-icon-lg {\n+ &.icon-lg {\n@include icon-size($icon-size-lg);\n}\n- &.c-icon-sm {\n+ &.icon-sm {\n@include icon-size($icon-size-sm);\n}\n}\n",
        "date": "04.01.2021 23:23:10",
        "repo": "coreui/coreui",
        "type": "refactor",
        "sim_msg": "feat(nav): added nav styles",
        "sim_diff": "diff --git a/scss/os/_utils.scss b/scss/os/_utils.scss @@ -715,3 +715,33 @@ $aspect-ratios: ((16, 9), (4, 3));\ntransform: rotate(-45deg);\n}\n}\n+\n+\n+// --------------------------------- Nav -----------------------------------//\n+.u-nav.nav {\n+ .u-nav__spacer {\n+ .nav-item {\n+ &.active:not(:first-child):not(.u-nav__no-margin) {\n+ margin-top: 1rem !important;\n+ }\n+\n+ &.active:not(.u-nav__no-margin) {\n+ margin-bottom: 1rem !important;\n+ }\n+ }\n+ }\n+\n+ .nav-item {\n+ &.active > .nav-link {\n+ color: $body-color;\n+ }\n+\n+ .nav-link {\n+ color: $text-muted;\n+\n+ &:hover {\n+ color: $body-color;\n+ }\n+ }\n+ }\n+}\n"
    },
    {
        "msg": "style(webpack_config/server): fix indent",
        "diff": "diff --git a/webpack_config/server/webpack.base.js b/webpack_config/server/webpack.base.js @@ -91,12 +91,11 @@ module.exports = {\nnew webpack.BannerPlugin({\nbanner: config.banner\n}),\n- // NOTE: Server can't process your styles/images/fonts on server-side rendering\n+ // Server can't process require of your styles/images/fonts\nnew webpack.NormalModuleReplacementPlugin(\n/\\.(css|sass|less|jpg|png|gif|scss)$/,\n'node-noop'\n)\n- // NOTE: @Metnew: If I remember correctly this plugin works similarly to NormalModuleReplacementPlugin\n// new webpack.IgnorePlugin(/\\.(css|sass|less|jpg|png|gif|scss)$/)\n],\nnode: {\n",
        "date": "07.08.2017 18:48:58",
        "repo": "metnew/suicrux",
        "type": "style",
        "sim_msg": "chore: update copy-webpack-plugin config",
        "sim_diff": "diff --git a/webpack.config.js b/webpack.config.js @@ -160,13 +160,14 @@ module.exports = {\nnew MiniCssExtractPlugin({\nfilename: '[name].css'\n}),\n- new CopyPlugin([\n+ new CopyPlugin({\n+ patterns: [\n{\nfrom: 'src/assets',\nto: '',\n- copyUnmodified: true,\n},\n- ]),\n+ ],\n+ }),\nnew VueLoaderPlugin(),\nnew webpack.DefinePlugin({\nVERSION: JSON.stringify(require('./src/assets/manifest.json').version)\n"
    },
    {
        "msg": "style(lint): linted module.js",
        "diff": "diff --git a/lib/module.js b/lib/module.js -const firebase = require('firebase')\nconst { resolve } = require('path')\n+const firebase = require('firebase')\nconst logger = require('./logger')\nconst createServerMiddleware = require('./helpers/createServerMiddleware')\n",
        "date": "18.03.2020 23:21:30",
        "repo": "nuxt-community/firebase-module",
        "type": "style",
        "sim_msg": "fix(logger-import): fix require -> import",
        "sim_diff": "diff --git a/src/main/main.js b/src/main/main.js 'use strict';\nimport configureStore from 'common/configure-store';\nimport { localeUpdate } from 'common/locale/actions';\n-const { Logger } = require('common/logger');\n+import Logger from 'common/logger';\nconst path = require('path');\nconst fs = require('fs');\n"
    },
    {
        "msg": "style(all): add missing semicolon",
        "diff": "diff --git a/packages/all/src/index.js b/packages/all/src/index.js @@ -25,7 +25,7 @@ for (let bundle of [geojs, glo, lineup, onset, sententree, similaritygraph, stat\n}\nfor (let component in vega) {\nif (vega[component] !== vega.VegaView) {\n- components[component] = vega[component]\n+ components[component] = vega[component];\n}\n}\n",
        "date": "14.05.2018 13:22:41",
        "repo": "kitware/candela",
        "type": "style",
        "sim_msg": "ci: fix missing files",
        "sim_diff": "diff --git a/packages/util/package.json b/packages/util/package.json \"exports\": \"./index.js\",\n\"types\": \"index.d.ts\",\n\"files\": [\n+ \"index.js\",\n\"index.d.ts\",\n\"codes.js\"\n],\n"
    },
    {
        "msg": "style: removed semicolons",
        "diff": "diff --git a/lib/templates/firebase-auth-sw.js b/lib/templates/firebase-auth-sw.js @@ -23,61 +23,61 @@ firebase.initializeApp(<%= serialize(options.config) %>)\nconst getIdToken = () => {\nreturn new Promise((resolve) => {\nconst unsubscribe = firebase.auth().onAuthStateChanged((user) => {\n- unsubscribe();\n+ unsubscribe()\nif (user) {\n// force token refresh as it might be used to sign in server side\nuser.getIdToken(true).then((idToken) => {\n- resolve(idToken);\n+ resolve(idToken)\n}, () => {\n- resolve(null);\n- });\n+ resolve(null)\n+ })\n} else {\n- resolve(null);\n+ resolve(null)\n+ }\n+ })\n+ })\n}\n- });\n- });\n-};\nconst fetchWithAuthorization = async (original, idToken) => {\n// Clone headers as request headers are immutable.\n- const headers = new Headers();\n+ const headers = new Headers()\nfor (let entry of original.headers.entries()) {\n- headers.append(entry[0], entry[1]);\n+ headers.append(entry[0], entry[1])\n}\n// Add ID token to header.\n- headers.append('Authorization', 'Bearer ' + idToken);\n+ headers.append('Authorization', 'Bearer ' + idToken)\n// Create authorized request\n- const { url, ...props } = original.clone();\n+ const { url, ...props } = original.clone()\nconst authorized = new Request(url, {\n...props,\nmode: 'same-origin',\nredirect: 'manual',\nheaders\n- });\n+ })\nreturn fetch(authorized)\n-};\n+}\nself.addEventListener('fetch', (event) => {\n- const url = new URL(event.request.url);\n+ const url = new URL(event.request.url)\nconst expectsHTML = event.request.headers.get('accept').includes('text/html')\n- const isSameOrigin = self.location.origin === url.origin;\n- const isHttps = (self.location.protocol === 'https:' || self.location.hostname === 'localhost');\n+ const isSameOrigin = self.location.origin === url.origin\n+ const isHttps = (self.location.protocol === 'https:' || self.location.hostname === 'localhost')\nconst isIgnored = ignorePaths.some(path => {\nif (typeof path === 'string') {\nreturn url.pathname.startsWith(path)\n}\nreturn path.test(url.pathname.slice(1))\n- });\n+ })\nif (!expectsHTML || !isSameOrigin || !isHttps || isIgnored) {\n- event.respondWith(fetch(event.request));\n+ event.respondWith(fetch(event.request))\n- return;\n+ return\n}\n// Fetch the resource after checking for the ID token.\n@@ -93,9 +93,9 @@ self.addEventListener('fetch', (event) => {\n: fetch(event.request)\n)\n)\n-});\n+})\n// In service worker script.\nself.addEventListener('activate', event => {\n- event.waitUntil(clients.claim());\n-});\n+ event.waitUntil(clients.claim())\n+})\n",
        "date": "01.06.2020 15:35:50",
        "repo": "nuxt-community/firebase-module",
        "type": "style",
        "sim_msg": "feat(plugin-authorization-browser-first-party): impliment services\nAdd service references to plugin-authorization-browser-first-party to\nallow it to authorize via the service catalog.",
        "sim_diff": "diff --git a/packages/node_modules/@webex/plugin-authorization-browser-first-party/src/authorization.js b/packages/node_modules/@webex/plugin-authorization-browser-first-party/src/authorization.js @@ -84,22 +84,20 @@ const Authorization = WebexPlugin.extend({\nif (location.query.state) {\nlocation.query.state = JSON.parse(base64.decode(location.query.state));\n}\n+ else {\n+ location.query.state = {};\n+ }\n+ const {email} = location.query.state;\nthis._verifySecurityToken(location.query);\nthis._cleanUrl(location);\n// Wait until nextTick in case `credentials` hasn't initialized yet\nprocess.nextTick(() => {\n- // if a particular CI was included in the state, use that\n- if (location.query.state && location.query.state.idbroker) {\n- this.config.idbroker.url = location.query.state.idbroker;\n- }\n- if (location.query.state && location.query.state.identity) {\n- this.config.identity.url = location.query.state.identity;\n- }\n-\n- this.requestAuthorizationCodeGrant({code})\n+ this.webex.internal.services.collectPreauthCatalog({email})\n+ .catch(() => Promise.resolve())\n+ .then(() => this.requestAuthorizationCodeGrant({code}))\n.then(() => {\nthis.ready = true;\n});\n@@ -118,13 +116,9 @@ const Authorization = WebexPlugin.extend({\n*/\ninitiateLogin(options = {}) {\noptions.state = options.state || {};\n- if (this.config.identity.url !== this.config.identity.defaultUrl) {\n- options.state = Object.assign({}, options.state, {identity: this.config.identity.url});\n- }\n- if (this.config.idbroker.url !== this.config.idbroker.defaultUrl) {\n- options.state = Object.assign({}, options.state, {idbroker: this.config.idbroker.url});\n- }\noptions.state.csrf_token = this._generateSecurityToken();\n+ options.state.email = options.email;\n+\nreturn this.initiateAuthorizationCodeGrant(options);\n},\n"
    },
    {
        "msg": "style: :lipstick: author styles",
        "diff": "diff --git a/src/lib/author.svelte b/src/lib/author.svelte class=\"not-prose border border-primary shadow-lg p-4 rounded-2xl\"\n>\n<div class=\"flex space-x-5 justify-evenly\">\n- <a href={data.html_url} target=\"_blank\" rel=\"noopener\">\n+ <a\n+ class=\"w-1/4\"\n+ href={data.html_url}\n+ target=\"_blank\"\n+ rel=\"noopener\"\n+ >\n<img\n- class=\"w-20 h-20 p-0 m-0 rounded-full\"\n+ class=\"w-20 h-20 p-0 m-0 rounded-full object-cover\"\nsrc={data.avatar_url}\nalt={data.name}\n/>\n</a>\n- <a href={data.html_url} target=\"_blank\" rel=\"noopener\">\n+ <a\n+ class=\"w-3/4\"\n+ href={data.html_url}\n+ target=\"_blank\"\n+ rel=\"noopener\"\n+ >\n<div class=\"text-sm\">\n<p class=\"text-lg font-bold tracking-widest\">{data.name}</p>\n<p>{data.bio || ``}</p>\n",
        "date": "08.05.2022 17:51:04",
        "repo": "spences10/cheat-sheets",
        "type": "style",
        "sim_msg": "docs(website): update 404 page",
        "sim_diff": "diff --git a/website/static/404.html b/website/static/404.html <link rel=\"stylesheet\" href=\"/static/index.css\">\n<link rel=\"stylesheet\" href=\"/static/404.css\">\n- <script defer src=\"https://cdn.jsdelivr.net/npm/clipboard@2.0.1/dist/clipboard.min.js\" integrity=\"sha256-hIvIxeqhGZF+VVeM55k0mJvWpQ6gTkWk3Emc+NmowYA=\" crossorigin=\"anonymous\"></script>\n<script defer src=\"/static/katex.min.js\" crossorigin=\"anonymous\"></script>\n<script defer src=\"/js/404.js\" type=\"text/javascript\"></script>\n</head>\n<p class=\"align-left\">Please try one of these links:</p>\n</div>\n<div class=\"cta\">\n- <a href=\"docs/node.html\" role=\"button\">\n+ <a href=\"/docs/node.html\" role=\"button\">\n<svg class=\"svg-inline--fa fa-download fa-w-16\" aria-hidden=\"true\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\"\nviewBox=\"0 0 512 512\">\n<path fill=\"currentColor\" d=\"M216 0h80c13.3 0 24 10.7 24 24v168h87.7c17.8 0 26.7 21.5 14.1 34.1L269.7 378.3c-7.5 7.5-19.8 7.5-27.3 0L90.1 226.1c-12.6-12.6-3.7-34.1 14.1-34.1H192V24c0-13.3 10.7-24 24-24zm296 376v112c0 13.3-10.7 24-24 24H24c-13.3 0-24-10.7-24-24V376c0-13.3 10.7-24 24-24h146.7l49 49c20.1 20.1 52.5 20.1 72.6 0l49-49H488c13.3 0 24 10.7 24 24zm-124 88c0-11-9-20-20-20s-20 9-20 20 9 20 20 20 20-9 20-20zm64 0c0-11-9-20-20-20s-20 9-20 20 9 20 20 20 20-9 20-20z\"></path>\n</svg>\nInstallation\n</a>\n- <a href=\"docs/api.html\" role=\"button\">\n+ <a href=\"/docs/api.html\" role=\"button\">\n<svg class=\"svg-inline--fa fa-book fa-w-14\" aria-hidden=\"true\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\"\nviewBox=\"0 0 448 512\">\n<path fill=\"currentColor\" d=\"M448 360V24c0-13.3-10.7-24-24-24H96C43 0 0 43 0 96v320c0 53 43 96 96 96h328c13.3 0 24-10.7 24-24v-16c0-7.5-3.5-14.3-8.9-18.7-4.2-15.4-4.2-59.3 0-74.7 5.4-4.3 8.9-11.1 8.9-18.6zM128 134c0-3.3 2.7-6 6-6h212c3.3 0 6 2.7 6 6v20c0 3.3-2.7 6-6 6H134c-3.3 0-6-2.7-6-6v-20zm0 64c0-3.3 2.7-6 6-6h212c3.3 0 6 2.7 6 6v20c0 3.3-2.7 6-6 6H134c-3.3 0-6-2.7-6-6v-20zm253.4 250H96c-17.7 0-32-14.3-32-32 0-17.6 14.4-32 32-32h285.4c-1.9 17.1-1.9 46.9 0 64z\"></path>\n"
    },
    {
        "msg": "style(Embed): update typings and propTypes usage",
        "diff": "diff --git a/src/modules/Embed/index.d.ts b/src/modules/Embed/index.d.ts import * as React from 'react';\ninterface EmbedProps {\n- /** An embed can be active. */\n- active?: boolean;\n+ [key: string]: any;\n/** An element type to render as (string or function). */\nas?: any;\n+ /** An embed can be active. */\n+ active?: boolean;\n+\n/** An embed can specify an alternative aspect ratio. */\naspectRatio?: '4:3' | '16:9' | '21:9';\n@@ -16,6 +18,9 @@ interface EmbedProps {\n/** Whether to show networks branded UI like title cards, or after video calls to action. */\nbrandedUI?: boolean;\n+ /** Primary content. */\n+ children?: React.ReactNode;\n+\n/** Additional classes. */\nclassName?: string;\n@@ -40,7 +45,7 @@ interface EmbedProps {\n* @param {SyntheticEvent} event - React's original SyntheticEvent.\n* @param {object} data - All props and proposed value.\n*/\n- onClick?: (e: React.FormEvent<HTMLVideoElement>, data: this) => void;\n+ onClick?: (event: React.MouseEvent<HTMLDivElement>, data: EmbedProps) => void;\n/** A placeholder image for embed. */\nplaceholder?: string;\n",
        "date": "24.01.2017 21:21:06",
        "repo": "semantic-org/semantic-ui-react",
        "type": "style",
        "sim_msg": "refactor(cardeditor): removed unwanted props",
        "sim_diff": "diff --git a/packages/react/src/components/CardEditor/CardEditor.jsx b/packages/react/src/components/CardEditor/CardEditor.jsx @@ -397,15 +397,11 @@ const CardEditor = ({\ndataItems={dataItems}\ngetValidDataItems={getValidDataItems}\ngetValidTimeRanges={getValidTimeRanges}\n- onValidateCardJson={onValidateCardJson}\n- onCardJsonPreview={onCardJsonPreview}\navailableDimensions={availableDimensions}\ni18n={mergedI18n}\ncurrentBreakpoint={currentBreakpoint}\ndataSeriesItemLinks={dataSeriesItemLinks}\nonFetchDynamicDemoHotspots={onFetchDynamicDemoHotspots}\n- modalJsonData={modalJsonData}\n- showJsonEditor={showJsonEditor}\n/>\n</>\n)}\n"
    },
    {
        "msg": "style(webpack_config/server): formatting\nstyle(webpack_config/server): formatting",
        "diff": "diff --git a/webpack_config/server/webpack.prod.babel.js b/webpack_config/server/webpack.prod.babel.js @@ -17,7 +17,7 @@ const plugins = [\nsourceMap: true,\ncompress: {\nwarnings: false\n- // This option removes console log in production\n+ // This option removes console.log in production\n// drop_console: true\n},\noutput: {\n",
        "date": "14.08.2017 17:12:48",
        "repo": "metnew/suicrux",
        "type": "style",
        "sim_msg": "build(webpack): keep babel config only in .babelrc",
        "sim_diff": "diff --git a/webpack.config.js b/webpack.config.js @@ -41,9 +41,6 @@ module.exports = targetProperties.map(config => ({\nuse: [\n{\nloader: 'babel-loader',\n- options: {\n- presets: ['env'],\n- },\n},\n{ loader: 'source-map-loader' },\n],\n"
    },
    {
        "msg": "style(pycandela): fix flake8 issues",
        "diff": "diff --git a/python/pycandela/pycandela/__init__.py b/python/pycandela/pycandela/__init__.py @@ -99,11 +99,13 @@ class Component(object):\ndef display(self):\ndisplay(self)\n+\ndef load(filename):\nwith open(filename) as f:\nc = json.load(f)\nreturn Component(c['name'], **c['options'])\n+\nclass ComponentAccessor(object):\ndef __dir__(self):\nreturn _component_list\n",
        "date": "16.05.2018 11:32:15",
        "repo": "kitware/candela",
        "type": "style",
        "sim_msg": "refactor: remove unused import from PriceHistoryPanel.jsx",
        "sim_diff": "diff --git a/app/components/Dashboard/PriceHistoryPanel/PriceHistoryPanel.jsx b/app/components/Dashboard/PriceHistoryPanel/PriceHistoryPanel.jsx @@ -5,7 +5,6 @@ import { keys } from 'lodash-es'\nimport PriceHistoryChart from './PriceHistoryChart'\nimport Panel from '../../Panel'\n-import BoundingBox from './BoundingBox'\nimport DropdownIcon from '../../../assets/icons/dropdown.svg'\nimport {\nASSETS,\n"
    },
    {
        "msg": "test: comply with strict mode",
        "diff": "diff --git a/test/examples/universalBrowser.test.js b/test/examples/universalBrowser.test.js @@ -9,7 +9,7 @@ describe('Rollbar loaded by snippet', function() {\ndocument.write(window.__html__['examples/universal-browser/test.html']);\n// Stub the xhr interface.\n- server = sinon.createFakeServer();\n+ window.server = sinon.createFakeServer();\n// Give the snippet time to load and init.\nsetTimeout(function() {\n@@ -18,10 +18,11 @@ describe('Rollbar loaded by snippet', function() {\n});\nafter(function () {\n- server.restore();\n+ window.server.restore();\n});\nit('should send a valid log event', function(done) {\n+ var server = window.server;\nvar rollbar = document.defaultView.Rollbar;\nserver.respondWith('POST', 'api/1/item',\n@@ -35,7 +36,7 @@ describe('Rollbar loaded by snippet', function() {\nvar ret = rollbar.info('test');\nserver.respond();\n- body = JSON.parse(server.requests[0].requestBody);\n+ var body = JSON.parse(server.requests[0].requestBody);\nexpect(body.access_token).to.eql('POST_CLIENT_ITEM_TOKEN');\nexpect(body.data.uuid).to.eql(ret.uuid);\n",
        "date": "29.03.2019 18:25:22",
        "repo": "rollbar/rollbar.js",
        "type": "test",
        "sim_msg": "test: add drain test",
        "sim_diff": "diff --git a/test/client.js b/test/client.js @@ -836,3 +836,39 @@ test('ignore request header mutations', (t) => {\nheaders.test = 'asd'\n})\n})\n+\n+test('drain when queue is empty', (t) => {\n+ t.plan(3)\n+\n+ const server = createServer((req, res) => {\n+ res.end()\n+ })\n+ t.tearDown(server.close.bind(server))\n+\n+ server.listen(0, () => {\n+ const client = new Client(`http://localhost:${server.address().port}`, {\n+ pipelining: 1\n+ })\n+ t.tearDown(client.close.bind(client))\n+\n+ client.on('drain', () => {\n+ t.strictEqual(client.size, 0)\n+ })\n+\n+ client.request({\n+ path: '/',\n+ method: 'GET'\n+ }, (err, { body }) => {\n+ t.error(err)\n+ body.resume()\n+ })\n+\n+ client.request({\n+ path: '/',\n+ method: 'GET'\n+ }, (err, { body }) => {\n+ t.error(err)\n+ body.resume()\n+ })\n+ })\n+})\n"
    },
    {
        "msg": "test(avatar-group): add check for max items",
        "diff": "diff --git a/packages/chakra-ui-core/src/AvatarGroup/tests/AvatarGroup.test.js b/packages/chakra-ui-core/src/AvatarGroup/tests/AvatarGroup.test.js @@ -32,3 +32,9 @@ it('should render correctly', () => {\nconst { asFragment } = renderComponent()\nexpect(asFragment()).toMatchSnapshot()\n})\n+\n+test('renders a number avatar showing count of truncated avatars', () => {\n+ const { getByText } = renderComponent()\n+\n+ getByText('+1')\n+})\n",
        "date": "15.03.2020 20:08:14",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "sim_msg": "test: add jest of error prop for Input",
        "sim_diff": "diff --git a/packages/input/src/presenters/InputHaloPresenter.test.js b/packages/input/src/presenters/InputHaloPresenter.test.js @@ -25,4 +25,9 @@ describe(\"InputHaloPresenter\", () => {\nrenderer.create(<InputHaloPresenter isDisabled />).toJSON()\n).toMatchSnapshot();\n});\n+ it(\"renders when error\", () => {\n+ expect(\n+ renderer.create(<InputHaloPresenter error />).toJSON()\n+ ).toMatchSnapshot();\n+ });\n});\n"
    },
    {
        "msg": "test: Remove use of underscore",
        "diff": "diff --git a/test/unit.js b/test/unit.js @@ -2133,7 +2133,7 @@ describe('js interface', {\nthis.foo = obj[\"foo\"];\n};\nvar tmp = scm_eval('(js-new \"BiwaScheme.TestForJSNew\" \\'foo (lambda () 4))');\n- expect(_.isFunction(tmp.foo)).should_be(true);\n+ expect(typeof(tmp.foo)).should_be('function');\n},\n'js-null?' : function(){\nev('(js-null? (js-eval \"null\"))').should_be(true);\n",
        "date": "23.06.2020 22:16:31",
        "repo": "biwascheme/biwascheme",
        "type": "test",
        "sim_msg": "test: The Buffer() and new Buffer() constructors are deprecated",
        "sim_diff": "diff --git a/test/expect.js b/test/expect.js @@ -1400,10 +1400,10 @@ describe('expect', function () {\nif ('undefined' !== typeof Buffer) {\nit('Buffer eql()', function () {\n- expect(new Buffer([ 1 ])).to.eql(new Buffer([ 1 ]));\n+ expect(Buffer.from([ 1 ])).to.eql(Buffer.from([ 1 ]));\nerr(function () {\n- expect(new Buffer([ 0 ])).to.eql(new Buffer([ 1 ]));\n+ expect(Buffer.from([ 0 ])).to.eql(Buffer.from([ 1 ]));\n}, 'expected <Buffer 00> to deeply equal <Buffer 01>');\n});\n}\n"
    },
    {
        "msg": "test(DynamicLinechart): use new update() API",
        "diff": "diff --git a/app/examples/dynamic-linechart/index.js b/app/examples/dynamic-linechart/index.js @@ -12,18 +12,6 @@ class DynamicLineChart extends LineChart {\nsuper.render();\nthis.emit('render');\n}\n-\n- data (data) {\n- this.options.data = data;\n-\n- this.chart.then(chart => {\n- let data = chart.data('data');\n- data.remove(() => true);\n- data.insert(this.options.data);\n-\n- chart.update();\n- });\n- }\n}\nlet data = [];\n@@ -58,7 +46,7 @@ window.onload = () => {\ncounter++;\n- vis.data(data);\n+ vis.update({data});\nvis.render();\n}, 1000);\n",
        "date": "18.05.2017 15:54:35",
        "repo": "kitware/candela",
        "type": "test",
        "sim_msg": "feat: Better labels on chart",
        "sim_diff": "diff --git a/src/components/layout/hero.module.scss b/src/components/layout/hero.module.scss position: absolute;\n}\n}\n+\n+.chart-bar {\n+ margin: 0 1px;\n+}\n+\n+.chart-line {\n+ stroke: #5667ad;\n+ stroke-width: 1.5px;\n+}\n+\n+.chart-legend {\n+ color: white;\n+ font-size: 14px;\n+ overflow: visible !important;\n+ text-anchor: end;\n+ text {\n+ color: white;\n+ }\n+}\n"
    },
    {
        "msg": "test(button-group): refactor use screen",
        "diff": "diff --git a/packages/chakra-ui-core/src/CButtonGroup/tests/CButtonGroup.test.js b/packages/chakra-ui-core/src/CButtonGroup/tests/CButtonGroup.test.js import { CButton, CButtonGroup } from '../..'\n-import { render } from '@/tests/test-utils'\n+import { render, screen } from '@/tests/test-utils'\nconst renderComponent = (props) => {\nconst base = {\n@@ -23,7 +23,7 @@ it('should render correctly', () => {\n})\nit('should attach buttons when `is-attached` is passed', () => {\n- const { asFragment, getByText } = renderComponent({\n+ const { asFragment } = renderComponent({\ntemplate: `\n<CButtonGroup isAttached>\n<CButton>Button1</CButton>\n@@ -31,13 +31,13 @@ it('should attach buttons when `is-attached` is passed', () => {\n</CButtonGroup>`\n})\n- const button = getByText('Button1')\n+ const button = screen.getByText('Button1')\nexpect(button).toHaveStyle('border-top-right-radius: 0; border-bottom-right-radius: 0;')\nexpect(asFragment()).toMatchSnapshot()\n})\nit('should display children', () => {\n- const { getByText } = renderComponent()\n- expect(getByText('Button1')).toBeInTheDocument()\n- expect(getByText('Button2')).toBeInTheDocument()\n+ renderComponent()\n+ expect(screen.getByText('Button1')).toBeInTheDocument()\n+ expect(screen.getByText('Button2')).toBeInTheDocument()\n})\n",
        "date": "12.07.2020 16:09:03",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "sim_msg": "test(components/molecule/drawer): refactor",
        "sim_diff": "diff --git a/components/molecule/drawer/test/index.test.js b/components/molecule/drawer/test/index.test.js @@ -11,12 +11,46 @@ import chai, {expect} from 'chai'\nimport chaiDOM from 'chai-dom'\nimport {render} from '@testing-library/react'\n+import * as pkg from '../src/index.js'\n+\n+import json from '../package.json'\n+\nchai.use(chaiDOM)\n-describe('MoleculeDrawer', () => {\n- const Component = MoleculeDrawer\n+describe(json.name, () => {\n+ const {default: Component} = pkg\nconst setup = setupEnvironment(Component)\n+ it('library should include defined exported elements', () => {\n+ // Given\n+ const library = pkg\n+ const libraryExportedMembers = [\n+ 'MoleculeDrawer',\n+ 'MoleculeDrawerOverlay',\n+ 'moleculeDrawerPlacements',\n+ 'moleculeDrawerSizes',\n+ 'moleculeDrawerAnimationDuration',\n+ 'default'\n+ ]\n+\n+ // When\n+ const {\n+ MoleculeDrawerOverlay,\n+ moleculeDrawerPlacements,\n+ moleculeDrawerSizes,\n+ moleculeDrawerAnimationDuration,\n+ MoleculeDrawer,\n+ default: MoleculeDrawerDefault,\n+ ...others\n+ } = library\n+\n+ // Then\n+ expect(Object.keys(library).length).to.equal(libraryExportedMembers.length)\n+ expect(Object.keys(library)).to.have.members(libraryExportedMembers)\n+ expect(Object.keys(others).length).to.equal(0)\n+ })\n+\n+ describe(Component.displayName, () => {\nit('should render without crashing', () => {\n// Given\nconst props = {}\n@@ -48,7 +82,8 @@ describe('MoleculeDrawer', () => {\nconst props = {\nclassName: 'extended-classNames'\n}\n- const findSentence = str => string => string.match(new RegExp(`S*${str}S*`))\n+ const findSentence = str => string =>\n+ string.match(new RegExp(`S*${str}S*`))\n// When\nconst {container} = setup(props)\n@@ -58,3 +93,111 @@ describe('MoleculeDrawer', () => {\nexpect(findClassName(container.innerHTML)).to.be.null\n})\n})\n+\n+ describe('moleculeDrawerPlacements', () => {\n+ it('value must be an object enum', () => {\n+ // Given\n+ const library = pkg\n+\n+ // When\n+ const {moleculeDrawerPlacements: actual} = library\n+\n+ // Then\n+ expect(actual).to.be.an('object')\n+ })\n+\n+ it('value must be a defined string-key pair filled', () => {\n+ // Given\n+ const library = pkg\n+ const expected = {\n+ TOP: 'top',\n+ RIGHT: 'right',\n+ BOTTOM: 'bottom',\n+ LEFT: 'left'\n+ }\n+\n+ // When\n+ const {moleculeDrawerPlacements: actual} = library\n+ const {TOP, RIGHT, BOTTOM, LEFT, ...others} = actual\n+\n+ // Then\n+ expect(Object.keys(others).length).to.equal(0)\n+ expect(Object.keys(actual)).to.have.members(Object.keys(expected))\n+ Object.entries(expected).forEach(([expectedKey, expectedValue]) => {\n+ expect(Object.keys(actual).includes(expectedKey)).to.be.true\n+ expect(actual[expectedKey]).to.equal(expectedValue)\n+ })\n+ })\n+ })\n+\n+ describe('moleculeDrawerSizes', () => {\n+ it('value must be an object enum', () => {\n+ // Given\n+ const library = pkg\n+\n+ // When\n+ const {moleculeDrawerSizes: actual} = library\n+\n+ // Then\n+ expect(actual).to.be.an('object')\n+ })\n+\n+ it('value must be a defined string-key pair filled', () => {\n+ // Given\n+ const library = pkg\n+ const expected = {\n+ AUTO: 'auto',\n+ M: 'm',\n+ FILL: 'fill'\n+ }\n+\n+ // When\n+ const {moleculeDrawerSizes: actual} = library\n+ const {AUTO, M, FILL, ...others} = actual\n+\n+ // Then\n+ expect(Object.keys(others).length).to.equal(0)\n+ expect(Object.keys(actual)).to.have.members(Object.keys(expected))\n+ Object.entries(expected).forEach(([expectedKey, expectedValue]) => {\n+ expect(Object.keys(actual).includes(expectedKey)).to.be.true\n+ expect(actual[expectedKey]).to.equal(expectedValue)\n+ })\n+ })\n+ })\n+\n+ describe('moleculeDrawerAnimationDuration', () => {\n+ it('value must be an object enum', () => {\n+ // Given\n+ const library = pkg\n+\n+ // When\n+ const {moleculeDrawerAnimationDuration: actual} = library\n+\n+ // Then\n+ expect(actual).to.be.an('object')\n+ })\n+\n+ it('value must be a defined string-key pair filled', () => {\n+ // Given\n+ const library = pkg\n+ const expected = {\n+ NONE: 'none', // 0\n+ FAST: 'fast', // 100ms\n+ NORMAL: 'normal', // 300ms\n+ SLOW: 'slow' // 500ms\n+ }\n+\n+ // When\n+ const {moleculeDrawerAnimationDuration: actual} = library\n+ const {NONE, FAST, NORMAL, SLOW, ...others} = actual\n+\n+ // Then\n+ expect(Object.keys(others).length).to.equal(0)\n+ expect(Object.keys(actual)).to.have.members(Object.keys(expected))\n+ Object.entries(expected).forEach(([expectedKey, expectedValue]) => {\n+ expect(Object.keys(actual).includes(expectedKey)).to.be.true\n+ expect(actual[expectedKey]).to.equal(expectedValue)\n+ })\n+ })\n+ })\n+})\n"
    },
    {
        "msg": "test: Add link to Webkit bug to tests",
        "diff": "diff --git a/test/trickle.js b/test/trickle.js @@ -14,7 +14,8 @@ test('get config', function (t) {\ntest('disable trickle', function (t) {\nif (bowser.safari || bowser.ios) {\n- t.pass('Skip on Safari and iOS which do not support this reliably, it seems')\n+ // Note: Webkit bug filed here: https://bugs.webkit.org/show_bug.cgi?id=182906\n+ t.pass('Skip on Safari and iOS which do not support this reliably')\nt.end()\nreturn\n}\n@@ -64,7 +65,8 @@ test('disable trickle', function (t) {\ntest('disable trickle (only initiator)', function (t) {\nif (bowser.safari || bowser.ios) {\n- t.pass('Skip on Safari and iOS which do not support this reliably, it seems')\n+ // Note: Webkit bug filed here: https://bugs.webkit.org/show_bug.cgi?id=182906\n+ t.pass('Skip on Safari and iOS which do not support this reliably')\nt.end()\nreturn\n}\n@@ -114,7 +116,8 @@ test('disable trickle (only initiator)', function (t) {\ntest('disable trickle (only receiver)', function (t) {\nif (bowser.safari || bowser.ios) {\n- t.pass('Skip on Safari and iOS which do not support this reliably, it seems')\n+ // Note: Webkit bug filed here: https://bugs.webkit.org/show_bug.cgi?id=182906\n+ t.pass('Skip on Safari and iOS which do not support this reliably')\nt.end()\nreturn\n}\n",
        "date": "19.02.2018 15:04:02",
        "repo": "feross/simple-peer",
        "type": "test",
        "sim_msg": "feat: delegate configurations in app",
        "sim_diff": "diff --git a/test/lib/application.test.js b/test/lib/application.test.js const Application = require('../../lib/application');\nconst path = require('path');\nconst utils = require('../utils');\n+const assert = require('assert');\ndescribe('test/lib/application.test.js', () => {\nlet app;\n@@ -71,6 +72,26 @@ describe('test/lib/application.test.js', () => {\n});\n});\n+ describe('env', () => {\n+ afterEach(() => app.close());\n+\n+ it('should return app.config.env', function* () {\n+ app = createApplication();\n+ yield app.ready();\n+ assert(app.env === app.config.env);\n+ });\n+ });\n+\n+ describe('proxy', () => {\n+ afterEach(() => app.close());\n+\n+ it('should delegate app.config.proxy', function* () {\n+ app = createApplication();\n+ yield app.ready();\n+ assert(app.proxy === app.config.proxy);\n+ });\n+ });\n+\ndescribe('close()', () => {\nafterEach(() => app.close());\nit('should close all listeners', function* () {\n"
    },
    {
        "msg": "test: add autocomplete highlight-first-item\nadd unit test for",
        "diff": "diff --git a/test/unit/specs/autocomplete.spec.js b/test/unit/specs/autocomplete.spec.js @@ -570,4 +570,54 @@ describe('Autocomplete', () => {\ndone();\n});\n});\n+ it('can highlight first item', done => {\n+ vm = createVue({\n+ template: `\n+ <el-autocomplete\n+ ref=\"autocomplete\"\n+ v-model=\"state\"\n+ :fetch-suggestions=\"querySearch\"\n+ highlight-first-item\n+ ></el-autocomplete>\n+ `,\n+ data() {\n+ return {\n+ restaurants: [],\n+ state: ''\n+ };\n+ },\n+ methods: {\n+ querySearch(queryString, cb) {\n+ const opts = [\n+ { 'value': '1' },\n+ { 'value': '11' },\n+ { 'value': '2' },\n+ { 'value': '22' }\n+ ];\n+ cb(\n+ queryString\n+ ? opts.filter(opt => opt.value.indexOf(queryString) >= 0)\n+ : opts\n+ );\n+ }\n+ }\n+ }, true);\n+ let elm = vm.$el;\n+ let inputElm = elm.querySelector('input');\n+ inputElm.focus();\n+\n+ const autocomplete = vm.$refs.autocomplete;\n+ const input = autocomplete.$refs.input;\n+ input.$emit('input', '1');\n+\n+ setTimeout(_ => {\n+ const suggestions = vm.$refs.autocomplete.$refs.suggestions.$el;\n+ const items = suggestions.querySelectorAll('.el-autocomplete-suggestion__list li');\n+\n+ expect(items.length).to.equal(2);\n+ expect(items[0].classList.contains('highlighted')).to.be.true;\n+\n+ done();\n+ }, 500);\n+ });\n});\n",
        "date": "14.02.2019 20:30:57",
        "repo": "hug-sun/element3",
        "type": "test",
        "sim_msg": "feat(blocks-antd): Fix autocomplete bugs.",
        "sim_diff": "diff --git a/packages/plugins/blocks/blocks-antd/src/blocks/AutoComplete/AutoComplete.js b/packages/plugins/blocks/blocks-antd/src/blocks/AutoComplete/AutoComplete.js @@ -20,7 +20,6 @@ import { blockDefaultProps, renderHtml } from '@lowdefy/block-utils';\nimport { type } from '@lowdefy/helpers';\nimport Label from '../Label/Label.js';\n-import getUniqueValues from '../../getUniqueValues.js';\nconst Option = AutoComplete.Option;\n@@ -35,7 +34,6 @@ const AutoCompleteInput = ({\nvalidation,\nvalue,\n}) => {\n- const uniqueValueOptions = getUniqueValues(properties.options || []);\nreturn (\n<Label\nblockId={blockId}\n@@ -51,7 +49,7 @@ const AutoCompleteInput = ({\nautoFocus={properties.autoFocus}\nbackfill={properties.backfill}\nbordered={properties.bordered}\n- className={methods.makeCssClass(properties.inputStyle)}\n+ className={methods.makeCssClass([{ width: '100%' }, properties.inputStyle])}\ndefaultOpen={properties.defaultOpen}\ndisabled={properties.disabled || loading}\nplaceholder={properties.placeholder || 'Type or select item'}\n@@ -63,45 +61,24 @@ const AutoCompleteInput = ({\n.indexOf(input.toLowerCase()) >= 0\n}\nonChange={(newVal) => {\n- let val = type.isPrimitive(uniqueValueOptions[newVal])\n- ? uniqueValueOptions[newVal]\n- : uniqueValueOptions[newVal].value;\n- if (type.isNone(val)) {\n- val = newVal;\n- }\n- methods.setValue(val);\n+ methods.setValue(newVal);\nmethods.triggerEvent({ name: 'onChange' });\n}}\nonSearch={(newVal) => {\nmethods.triggerEvent({ name: 'onSearch', event: { value: newVal } });\n}}\n- value={type.isNone(value) ? undefined : value}\n+ value={type.isNone(value) ? undefined : `${value}`}\n>\n- {(properties.options || []).map((opt, i) =>\n- type.isPrimitive(opt) ? (\n+ {(properties.options || []).map((opt, i) => (\n<Option\nclassName={methods.makeCssClass(properties.optionsStyle)}\nid={`${blockId}_${i}`}\nkey={i}\n- value={`${i}`}\n+ value={`${opt}`}\n>\n{renderHtml({ html: `${opt}`, methods })}\n</Option>\n- ) : (\n- <Option\n- className={methods.makeCssClass([properties.optionsStyle, opt.style])}\n- disabled={opt.disabled}\n- filterstring={opt.filterString}\n- id={`${blockId}_${i}`}\n- key={i}\n- value={`${i}`}\n- >\n- {type.isNone(opt.label)\n- ? renderHtml({ html: `${opt.value}`, methods })\n- : renderHtml({ html: opt.label, methods })}\n- </Option>\n- )\n- )}\n+ ))}\n</AutoComplete>\n),\n}}\n"
    },
    {
        "msg": "test(stat): refactor use screen",
        "diff": "diff --git a/packages/chakra-ui-core/src/CStat/tests/CStat.test.js b/packages/chakra-ui-core/src/CStat/tests/CStat.test.js import { CStat, CStatLabel, CStatNumber, CStatHelperText, CStatArrow } from '..'\n-import { render } from '@/tests/test-utils'\n+import { render, screen } from '@/tests/test-utils'\nconst renderComponent = (props) => {\nconst base = {\n@@ -22,8 +22,8 @@ it('should render correctly', () => {\n})\nit('should render children in DOM', () => {\n- const { getByText } = renderComponent()\n- expect(getByText('Collected Fees')).toBeInTheDocument()\n+ renderComponent()\n+ expect(screen.getByText('Collected Fees')).toBeInTheDocument()\n})\ntest('\"CStatArrow\" should display corresponding icon for \"type\" prop', () => {\n",
        "date": "12.07.2020 16:50:53",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "sim_msg": "refactor(doc-link): apply `useToken` for `boxShadow` color",
        "sim_diff": "diff --git a/src/components/DocLink.tsx b/src/components/DocLink.tsx import React from \"react\"\n-import { Icon, Box, Text, Flex, LinkBox, LinkOverlay } from \"@chakra-ui/react\"\n+import {\n+ Icon,\n+ Box,\n+ Text,\n+ Flex,\n+ LinkBox,\n+ LinkOverlay,\n+ useToken,\n+} from \"@chakra-ui/react\"\nimport { AiOutlineArrowRight } from \"react-icons/ai\"\nimport Emoji from \"./Emoji\"\nimport Link from \"./Link\"\n@@ -11,6 +19,8 @@ export interface IProps {\n}\nconst DocLink: React.FC<IProps> = ({ to, children, isExternal = false }) => {\n+ const linkBoxShadowColor = useToken(\"colors\", \"primary\")\n+\nreturn (\n<LinkBox\npadding={4}\n@@ -22,7 +32,7 @@ const DocLink: React.FC<IProps> = ({ to, children, isExternal = false }) => {\n_hover={{\nbackground: \"tableBackgroundHover\",\nborderRadius: \"base\",\n- boxShadow: \"0 0 1px var(--eth-colors-primary)\",\n+ boxShadow: `0 0 1px ${linkBoxShadowColor}`,\n}}\n>\n<Flex\n"
    },
    {
        "msg": "test(tag): refactor use screen",
        "diff": "diff --git a/packages/chakra-ui-core/src/CTag/tests/CTag.test.js b/packages/chakra-ui-core/src/CTag/tests/CTag.test.js import { CBox, CTag, CTagLabel, CTagIcon, CTagCloseButton, CAvatar } from '../..'\n-import { render } from '@/tests/test-utils'\n+import { render, screen } from '@/tests/test-utils'\nconst renderComponent = (props) => {\nconst base = {\n@@ -22,9 +22,9 @@ it('should render correctly', () => {\n})\nit('should display children', () => {\n- const { getByText } = renderComponent()\n+ renderComponent()\n- expect(getByText('Green')).toBeInTheDocument()\n+ expect(screen.getByText('Green')).toBeInTheDocument()\n})\nit('should display tag with right icon', () => {\n@@ -35,8 +35,7 @@ it('should display tag with right icon', () => {\n<CTagLabel>Green</CTagLabel>\n<CTagIcon icon=\"add\" size=\"12px\" />\n</CTag>\n- </CBox>\n- `\n+ </CBox>`\n})\nexpect(asFragment()).toMatchSnapshot()\n})\n@@ -52,8 +51,7 @@ it('should display tag with custom element', () => {\n/>\n<CTagLabel>Mesut</CTagLabel>\n</CTag>\n- </CBox>\n- `\n+ </CBox>`\n})\nexpect(asFragment()).toMatchSnapshot()\n})\n",
        "date": "12.07.2020 17:04:43",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "sim_msg": "fix(renderer): add moduleFederation to meta in LoadBlock",
        "sim_diff": "diff --git a/packages/renderer/src/page/block/LoadBlock.js b/packages/renderer/src/page/block/LoadBlock.js @@ -24,9 +24,9 @@ import loadComponent from '../../utils/loadComponent';\nconst Components = {};\nconst LoadBlock = ({ meta, render }) => {\n- const typeId = `${meta.scope}:${meta.module}`;\n+ const typeId = `${meta.moduleFederation.scope}:${meta.moduleFederation.module}`;\nconst { ready, failed } = useDynamicScript({\n- url: meta.url,\n+ url: meta.moduleFederation.remoteEntryUrl,\n});\nif (!Components[typeId]) {\nif (!ready) {\n@@ -36,9 +36,11 @@ const LoadBlock = ({ meta, render }) => {\n}\nif (failed) {\n// TODO\n- return <h2>Failed to load dynamic script: {meta.url}</h2>;\n+ return <h2>Failed to load dynamic script: {meta.moduleFederation.remoteEntryUrl}</h2>;\n}\n- Components[typeId] = lazy(loadComponent(meta.scope, meta.module));\n+ Components[typeId] = lazy(\n+ loadComponent(meta.moduleFederation.scope, meta.moduleFederation.module)\n+ );\n}\nreturn render(Components[typeId]);\n};\n"
    },
    {
        "msg": "test(alert): add a11y test to alert component",
        "diff": "diff --git a/packages/chakra-ui-core/src/Alert/tests/Alert.test.js b/packages/chakra-ui-core/src/Alert/tests/Alert.test.js @@ -43,3 +43,14 @@ it('should override icon if set explicitly', () => {\nexpect(asFragment()).toMatchSnapshot()\n})\n+\n+it('should have role=alert', () => {\n+ const { getByRole } = renderComponent({\n+ template: `\n+ <Alert status=\"error\">\n+ <AlertIcon name=\"add\" />\n+ </Alert>`\n+ })\n+\n+ getByRole('alert')\n+})\n",
        "date": "15.03.2020 20:07:02",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "sim_msg": "test: add jest of error prop for Input",
        "sim_diff": "diff --git a/packages/input/src/presenters/InputHaloPresenter.test.js b/packages/input/src/presenters/InputHaloPresenter.test.js @@ -25,4 +25,9 @@ describe(\"InputHaloPresenter\", () => {\nrenderer.create(<InputHaloPresenter isDisabled />).toJSON()\n).toMatchSnapshot();\n});\n+ it(\"renders when error\", () => {\n+ expect(\n+ renderer.create(<InputHaloPresenter error />).toJSON()\n+ ).toMatchSnapshot();\n+ });\n});\n"
    },
    {
        "msg": "test(code): refactor to screen",
        "diff": "diff --git a/packages/chakra-ui-core/src/CCode/tests/CCode.test.js b/packages/chakra-ui-core/src/CCode/tests/CCode.test.js import CCode from '..'\n-import { render } from '@/tests/test-utils'\n+import { render, screen } from '@/tests/test-utils'\nconst renderComponent = (props) => {\nconst base = {\n@@ -16,7 +16,7 @@ it('should render correctly', () => {\n})\nit('should display children', () => {\n- const { getByText } = renderComponent()\n+ renderComponent()\n- expect(getByText('content')).toBeInTheDocument()\n+ expect(screen.getByText('content')).toBeInTheDocument()\n})\n",
        "date": "06.07.2020 23:32:35",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "sim_msg": "test: unit testing on tabset utils",
        "sim_diff": "diff --git a/src/components/Tabset/__test__/utils.spec.js b/src/components/Tabset/__test__/utils.spec.js @@ -2,6 +2,10 @@ import {\ninsertChildOrderly,\ngetChildTabNodes,\ngetActiveTabIndex,\n+ getChildrenTotalWidth,\n+ getChildrenTotalWidthUpToClickedTab,\n+ isNotSameChildren,\n+ getUpdatedTabsetChildren,\n} from './../utils';\ndescribe('<Tabset/> utils', () => {\n@@ -38,8 +42,6 @@ describe('<Tabset/> utils', () => {\nexpect(getChildTabNodes()).toEqual([]);\n});\n});\n-\n-\ndescribe('getActiveTabIndex', () => {\nit('should return the right index', () => {\nconst tabChildren = [\n@@ -56,4 +58,103 @@ describe('<Tabset/> utils', () => {\n});\n});\n});\n+ describe('getChildrenTotalWidth', () => {\n+ it('should return 0 when any children in tabset has width', () => {\n+ const tabsetChildren = [\n+ { name: 'pizza', ref: { offsetWidth: 0 } },\n+ { name: 'onion', ref: { offsetWidth: 0 } },\n+ { name: 'tomato', ref: { offsetWidth: 0 } },\n+ ];\n+ expect(getChildrenTotalWidth(tabsetChildren)).toBe(0);\n+ });\n+ it('should return 0 when tasbset has any children', () => {\n+ const tabsetChildren = [];\n+ expect(getChildrenTotalWidth(tabsetChildren)).toBe(0);\n+ });\n+ it('should return the right total children width in tabset', () => {\n+ const tabsetChildren = [\n+ { name: 'pizza', ref: { offsetWidth: 1 } },\n+ { name: 'onion', ref: { offsetWidth: 2 } },\n+ { name: 'tomato', ref: { offsetWidth: 3 } },\n+ ];\n+ expect(getChildrenTotalWidth(tabsetChildren)).toBe(6);\n+ });\n+ });\n+ describe('getChildrenTotalWidthUpToClickedTab', () => {\n+ it('should return the right total children width in tabset when click the second tab', () => {\n+ const tabIndex = 1;\n+ const tabsetChildren = [\n+ { name: 'pizza', ref: { offsetWidth: 1 } },\n+ { name: 'onion', ref: { offsetWidth: 2 } },\n+ { name: 'tomato', ref: { offsetWidth: 3 } },\n+ ];\n+ expect(getChildrenTotalWidthUpToClickedTab(tabsetChildren, tabIndex)).toBe(1);\n+ });\n+ it('should return 0 when click the first tab', () => {\n+ const tabIndex = 0;\n+ const tabsetChildren = [\n+ { name: 'pizza', ref: { offsetWidth: 1 } },\n+ { name: 'onion', ref: { offsetWidth: 2 } },\n+ { name: 'tomato', ref: { offsetWidth: 3 } },\n+ ];\n+ expect(getChildrenTotalWidthUpToClickedTab(tabsetChildren, tabIndex)).toBe(0);\n+ });\n+ });\n+ describe('isNotSameChildren', () => {\n+ it('should return true when a children in the tabset was changed in the same position', () => {\n+ const tabsetChildren = [\n+ { props: { name: 'pizza' } },\n+ { props: { name: 'onion' } },\n+ { props: { name: 'tomato' } },\n+ ];\n+ const prevTabsetChildren = [\n+ { props: { name: 'pizza' } },\n+ { props: { name: 'onion' } },\n+ { props: { name: 'mushroom' } },\n+ ];\n+ expect(isNotSameChildren(tabsetChildren, prevTabsetChildren)).toBe(true);\n+ });\n+ it('should return false when any children in tabset was changed in the same position', () => {\n+ const tabsetChildren = [\n+ { props: { name: 'tomato' } },\n+ { props: { name: 'pizza' } },\n+ { props: { name: 'apple' } },\n+ ];\n+ const prevTabsetChildren = [\n+ { props: { name: 'tomato' } },\n+ { props: { name: 'pizza' } },\n+ { props: { name: 'apple' } },\n+ ];\n+ expect(isNotSameChildren(tabsetChildren, prevTabsetChildren)).toBe(false);\n+ });\n+ });\n+ describe('getUpdatedTabsetChildren', () => {\n+ it('should return an updated tabset with the changed tab when a name to update exist in the tabset children', () => {\n+ const tab = { name: 'mushroom', ref: {} };\n+ const nameToUpdate = 'tomato';\n+ const tabsetChildren = [\n+ { name: 'pizza', ref: {} },\n+ { name: 'onion', ref: {} },\n+ { name: 'tomato', ref: {} },\n+ ];\n+ const newTabsetChildren = [\n+ { name: 'pizza', ref: {} },\n+ { name: 'onion', ref: {} },\n+ { name: 'mushroom', ref: {} },\n+ ];\n+ expect(getUpdatedTabsetChildren(tabsetChildren, tab, nameToUpdate))\n+ .toEqual(newTabsetChildren);\n+ });\n+ it('should return the same tabset when a name to update do not exist in the tabset children', () => {\n+ const tab = { name: 'mushroom', ref: {} };\n+ const nameToUpdate = 'mushroom';\n+ const tabsetChildren = [\n+ { name: 'pizza', ref: {} },\n+ { name: 'onion', ref: {} },\n+ { name: 'tomato', ref: {} },\n+ ];\n+ expect(getUpdatedTabsetChildren(tabsetChildren, tab, nameToUpdate))\n+ .toEqual(tabsetChildren);\n+ });\n+ });\n});\n"
    },
    {
        "msg": "test(cli): Added CLI unit test for --global-var option handling",
        "diff": "diff --git a/test/unit/cli.test.js b/test/unit/cli.test.js @@ -142,6 +142,24 @@ describe('cli parser', function () {\n});\n});\n+ describe('--global-var', function () {\n+ it('should throw an error for missing --global-var values', function (done) {\n+ cli.rawOptions('run myCollection.json --global-var'.split(' '), 'newmantests', function (err) {\n+ expect(err.code).to.equal('ARGError');\n+\n+ done();\n+ });\n+ });\n+\n+ it('should throw an error for --global-var values without an `=`', function (done) {\n+ cli.rawOptions('run myCollection.json --global-var foo'.split(' '), 'newmantests', function (err) {\n+ expect(err.code).to.equal('ARGError');\n+\n+ done();\n+ });\n+ });\n+ });\n+\nit('should load all arguments (except reporters)', function (done) {\ncli.rawOptions(('run ' +\n'myCollection.json ' +\n@@ -154,6 +172,7 @@ describe('cli parser', function () {\n'--reporter-cli-no-summary ' +\n'--iteration-count 23 ' +\n'--reporters json,html ' +\n+ '--global-var foo=bar --global-var alpha==beta= ' +\n'--no-color ' +\n'--delay-request 12000 ' +\n'--timeout-request 5000 ' +\n@@ -183,6 +202,11 @@ describe('cli parser', function () {\nexpect(opts.reporters).to.contain('html');\nexpect(opts.reporters).to.not.contain('junit');\n+ expect(opts.globalVar).to.eql([\n+ { key: 'foo', value: 'bar' },\n+ { key: 'alpha', value: '=beta=' }\n+ ]);\n+\nexpect(opts.bail).to.be(true);\nexpect(opts.suppressExitCode).to.be(true);\n@@ -208,6 +232,7 @@ describe('cli parser', function () {\n'--timeout-request 5000 ' +\n'--ignore-redirects ' +\n'-k ' +\n+ '--global-var foo=bar --global-var alpha==beta= ' +\n'--reporter-json-output ./omg.txt ' +\n'--reporter-html-output report.html ' +\n'--reporter-html-template ./mytemplate.html ' +\n@@ -231,6 +256,11 @@ describe('cli parser', function () {\nexpect(opts.ignoreRedirects).to.be(true);\nexpect(opts.insecure).to.be(true);\n+ expect(opts.globalVar).to.eql([\n+ { key: 'foo', value: 'bar' },\n+ { key: 'alpha', value: '=beta=' }\n+ ]);\n+\nexpect(opts.noColor).to.be(true);\nexpect(opts.reporters).to.contain('json');\n",
        "date": "24.07.2017 14:35:30",
        "repo": "postmanlabs/newman",
        "type": "test",
        "sim_msg": "test: /api/v1/report/_unlink API endpoint",
        "sim_diff": "diff --git a/test/backend/lib.api.v1.report-controller.test.js b/test/backend/lib.api.v1.report-controller.test.js @@ -258,5 +258,85 @@ describe('Report controller', function() {\n});\n});\n+ describe('PATCH api/v1/report/_unlink', function() {\n+ beforeEach(function(done) {\n+ async.series([loadUser, createReports, loadReports, createIncidents, loadIncidents], done);\n+ });\n+\n+ it('should unlink 2 reports from specific Incident', function(done) {\n+ request(reportController)\n+ .patch('/api/v1/report/_link')\n+ .send({ ids: [reports[0]._id, reports[1]._id], incident: incidents[0]._id })\n+ .expect(200)\n+ .end(function(err) {\n+ if (err) return done(err);\n+\n+ request(reportController)\n+ .patch('/api/v1/report/_unlink')\n+ .send({ ids: [reports[0]._id, reports[1]._id] })\n+ .expect(200)\n+ .end(function(err, res) {\n+ if (err) return done(err);\n+\n+ request(reportController)\n+ .get('/api/v1/report/' + reports[0]._id)\n+ .expect(200)\n+ .end(function(err, res) {\n+ if (err) return done(err);\n+ expect(res.body).to.have.property('_incident');\n+ expect(res.body._incident).to.equal(null);\n+\n+ request(reportController)\n+ .get('/api/v1/report/' + reports[1]._id)\n+ .expect(200)\n+ .end(function(err, res) {\n+ if (err) return done(err);\n+ expect(res.body).to.have.property('_incident');\n+ expect(res.body._incident).to.equal(null);\n+ done();\n+ });\n+ });\n+ });\n+ });\n+ });\n+\n+ it('should update the totalReports field in incident', function(done) {\n+ var incidentChanges = new utils.EventCounter(Incident.schema,\n+ 'incident:update');\n+ async.waterfall([\n+ function(callback) {\n+ request(reportController)\n+ .patch('/api/v1/report/_link')\n+ .send({ ids: [reports[0]._id, reports[1]._id], incident: incidents[0]._id })\n+ .expect(200)\n+ .end(callback);\n+ },\n+ function(res, callback) {\n+ // Wait for incident to be updated in the database\n+ incidentChanges.waitForEvents(2, callback);\n+ },\n+ function(callback) {\n+ request(reportController)\n+ .patch('/api/v1/report/_unlink')\n+ .send({ ids: [reports[0]._id, reports[1]._id] })\n+ .expect(200)\n+ .end(callback);\n+ },\n+ function(res, callback) {\n+ // Wait for incident to be updated in the database\n+ incidentChanges.waitForEvents(2, callback);\n+ },\n+ function(callback) {\n+ Incident.findById(incidents[0]._id, callback);\n+ },\n+ function(incident, callback) {\n+ expect(incident.totalReports).to.equal(0);\n+ setImmediate(callback);\n+ incidentChanges.kill();\n+ },\n+ ], done);\n+ });\n+ });\n+\nafter(utils.expectModelsEmpty);\n});\n"
    },
    {
        "msg": "test: Add a test for strict mode with `Collapse`",
        "diff": "diff --git a/src/__tests__/Collapse.spec.js b/src/__tests__/Collapse.spec.js @@ -32,6 +32,13 @@ describe('Collapse', () => {\nexpect(wrapper.find('p').text()).toBe('hello');\n});\n+ it('works with strict mode', () => {\n+ const spy = jest.spyOn(console, 'error');\n+ wrapper = mount(<React.StrictMode><Collapse/></React.StrictMode>);\n+ expect(wrapper.instance()).toBeTruthy();\n+ expect(spy).not.toHaveBeenCalled();\n+ })\n+\nit('should have default isOpen value', () => {\nwrapper = shallow(<Collapse />);\nexpect(wrapper.instance().props.isOpen).toEqual(false);\n",
        "date": "21.10.2020 15:55:12",
        "repo": "reactstrap/reactstrap",
        "type": "test",
        "sim_msg": "test(select-input): add default value for `maxMenuHeight`",
        "sim_diff": "diff --git a/inputs/select-input/select-input.spec.js b/inputs/select-input/select-input.spec.js @@ -16,6 +16,17 @@ const createTestProps = custom => ({\nintl: { formatMessage: jest.fn(message => message.id) },\n...custom,\n});\n+describe('defaultProps', () => {\n+ let wrapper;\n+ let props;\n+ beforeEach(() => {\n+ props = createTestProps();\n+ wrapper = shallow(<SelectInput {...props} />);\n+ });\n+ it('should default `maxMenuHeight` to `200`', () => {\n+ expect(wrapper.find(Select)).toHaveProp('maxMenuHeight', 200);\n+ });\n+});\ndescribe('overwritten props', () => {\ndescribe('when in single-value mode', () => {\n"
    },
    {
        "msg": "test: fix repeatClick path",
        "diff": "diff --git a/test/unit/tests/directives/repeatClick.test.js b/test/unit/tests/directives/repeatClick.test.js import { mount } from '@vue/test-utils'\n-import repeatClick from '../../../../src/directives/new-repeat-click'\n+import repeatClick from '../../../../src/directives/repeatClick'\ndescribe('directives: repeat-click', () => {\ntest('should called repeat click callback when emitted mousedown event ', (done) => {\nconst handleRepeatClick = jest.fn()\n",
        "date": "08.08.2020 20:58:14",
        "repo": "hug-sun/element3",
        "type": "test",
        "sim_msg": "fix(b-dropdown): close when clicking on nested elements inside items with `to` prop\nFixes 3474",
        "sim_diff": "diff --git a/src/components/link/link.js b/src/components/link/link.js @@ -121,11 +121,11 @@ const clickHandlerFactory = ({ disabled, tag, href, suppliedHandler, parent }) =\n// Needed to prevent vue-router for doing its thing\nevt.stopImmediatePropagation()\n} else {\n- if (isRouterLink(tag) && evt.target.__vue__) {\n+ if (isRouterLink(tag) && evt.currentTarget.__vue__) {\n// Router links do not emit instance 'click' events, so we\n// add in an $emit('click', evt) on it's vue instance\n/* istanbul ignore next: difficult to test, but we know it works */\n- evt.target.__vue__.$emit('click', evt)\n+ evt.currentTarget.__vue__.$emit('click', evt)\n}\n// Call the suppliedHandler(s), if any provided\nconcat(suppliedHandler)\n"
    },
    {
        "msg": "test: update description for test package",
        "diff": "diff --git a/tests/package.json b/tests/package.json {\n\"name\": \"tests\",\n\"version\": \"0.0.0\",\n- \"description\": \"Candela unit tests\",\n+ \"description\": \"Candela unit/coverage/image tests\",\n\"scripts\": {\n\"build:unit\": \"webpack\",\n\"build:coverage\": \"webpack --config webpack-coverage.config.js\",\n",
        "date": "06.06.2017 17:41:25",
        "repo": "kitware/candela",
        "type": "test",
        "sim_msg": "feat: avoid languages by now",
        "sim_diff": "diff --git a/package.json b/package.json \"testURL\": \"http://localhost/\",\n\"collectCoverage\": true,\n\"collectCoverageFrom\": [\n- \"**/src/**/**.js\"\n+ \"**/src/**/**.js\",\n+ \"!./packages/lang-**/**\"\n],\n\"coverageDirectory\": \"coverage\",\n\"testEnvironment\": \"node\"\n"
    },
    {
        "msg": "test(stack): refactor use screen",
        "diff": "diff --git a/packages/chakra-ui-core/src/CStack/tests/CStack.test.js b/packages/chakra-ui-core/src/CStack/tests/CStack.test.js import { CStack, CBox, CHeading, CText } from '../..'\n-import { render, getTagName } from '@/tests/test-utils'\n+import { render, getTagName, screen } from '@/tests/test-utils'\nconst renderComponent = (props) => {\nconst inlineAttrs = (props && props.inlineAttrs) || ''\n@@ -27,22 +27,22 @@ it('should render correctly', () => {\n})\nit('should default to vertical stack', () => {\n- const { getByTestId } = renderComponent()\n- const stack = getByTestId('stack')\n+ renderComponent()\n+ const stack = screen.getByTestId('stack')\nexpect(stack).toHaveStyle('display: flex')\nexpect(stack).toHaveStyle('flex-direction: column')\n})\nit('should not space last child', () => {\n- const { getByTestId } = renderComponent()\n- const stack = getByTestId('stack')\n+ renderComponent()\n+ const stack = screen.getByTestId('stack')\nexpect(stack).not.toHaveStyle('margin-bottom: 0.5rem')\n})\nit('should should stack horizontally if isInline', () => {\nconst inlineAttrs = 'is-inline'\n- const { getByTestId } = renderComponent({ inlineAttrs })\n- const stack = getByTestId('stack')\n+ renderComponent({ inlineAttrs })\n+ const stack = screen.getByTestId('stack')\nexpect(stack).toHaveStyle('display: flex')\nexpect(stack).toHaveStyle('flex-direction: row')\n})\n@@ -58,8 +58,8 @@ it.each`\n'should render CStack with element as $as',\n({ as }) => {\nconst inlineAttrs = `as=\"${as}\"`\n- const { asFragment, getByTestId } = renderComponent({ inlineAttrs })\n- const stack = getByTestId('stack')\n+ const { asFragment } = renderComponent({ inlineAttrs })\n+ const stack = screen.getByTestId('stack')\nexpect(getTagName(stack)).toEqual(as)\nexpect(asFragment()).toMatchSnapshot()\n}\n",
        "date": "12.07.2020 16:49:35",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "sim_msg": "test(spec_helper): update spacing util to handle for subset of props",
        "sim_diff": "diff --git a/src/__spec_helper__/test-utils.js b/src/__spec_helper__/test-utils.js @@ -116,7 +116,7 @@ const carbonThemesJestTable = carbonThemeList.map((theme) => [\ntheme,\n]);\n-const spacingProps = [\n+const marginProps = [\n[\"m\", \"margin\"],\n[\"ml\", \"marginLeft\"],\n[\"mr\", \"marginRight\"],\n@@ -126,6 +126,9 @@ const spacingProps = [\n[\"mx\", \"marginRight\"],\n[\"my\", \"marginTop\"],\n[\"my\", \"marginBottom\"],\n+];\n+\n+const paddingProps = [\n[\"p\", \"padding\"],\n[\"pl\", \"paddingLeft\"],\n[\"pr\", \"paddingRight\"],\n@@ -181,7 +184,7 @@ const getDefaultValue = (value) => {\nreturn value;\n};\n-const testStyledSystemSpacing = (\n+const testStyledSystemMargin = (\ncomponent,\ndefaults,\nstyleContainer,\n@@ -226,6 +229,38 @@ const testStyledSystemSpacing = (\nexpect(StyleElement).not.toHaveStyleRule(\"margin\");\n}\n});\n+ });\n+\n+ describe.each(marginProps)(\n+ 'when a custom spacing is specified using the \"%s\" styled system props',\n+ (styledSystemProp, propName) => {\n+ it(`then that ${propName} should have been set correctly`, () => {\n+ let wrapper = mount(component());\n+\n+ const props = { [styledSystemProp]: 2 };\n+ wrapper = mount(component({ ...props }));\n+\n+ expect(\n+ assertStyleMatch(\n+ { [propName]: \"16px\" },\n+ styleContainer ? styleContainer(wrapper) : wrapper,\n+ assertOpts\n+ )\n+ );\n+ });\n+ }\n+ );\n+};\n+\n+const testStyledSystemPadding = (\n+ component,\n+ defaults,\n+ styleContainer,\n+ assertOpts\n+) => {\n+ describe(\"default props\", () => {\n+ const wrapper = mount(component());\n+ const StyleElement = styleContainer ? styleContainer(wrapper) : wrapper;\nit(\"should set the correct paddings\", () => {\nlet padding;\n@@ -266,7 +301,7 @@ const testStyledSystemSpacing = (\n});\n});\n- describe.each(spacingProps)(\n+ describe.each(paddingProps)(\n'when a custom spacing is specified using the \"%s\" styled system props',\n(styledSystemProp, propName) => {\nit(`then that ${propName} should have been set correctly`, () => {\n@@ -287,6 +322,16 @@ const testStyledSystemSpacing = (\n);\n};\n+const testStyledSystemSpacing = (\n+ component,\n+ defaults,\n+ styleContainer,\n+ assertOpts\n+) => {\n+ testStyledSystemMargin(component, defaults, styleContainer, assertOpts);\n+ testStyledSystemPadding(component, defaults, styleContainer, assertOpts);\n+};\n+\nconst testStyledSystemColor = (component, styleContainer) => {\ndescribe.each(colorProps)(\n'when a prop is specified using the \"%s\" styled system props',\n@@ -364,6 +409,8 @@ export {\ncarbonThemesJestTable,\nmockMatchMedia,\ntestStyledSystemSpacing,\n+ testStyledSystemMargin,\n+ testStyledSystemPadding,\ntestStyledSystemColor,\ntestStyledSystemLayout,\ntestStyledSystemFlexBox,\n"
    },
    {
        "msg": "test(button): remove unnecessary mock",
        "diff": "diff --git a/packages/chakra-ui-core/src/CButton/tests/CButton.test.js b/packages/chakra-ui-core/src/CButton/tests/CButton.test.js import { CButton } from '../..'\nimport { render, defaultProviders } from '@/tests/test-utils'\n-// mocks\n-jest.mock('breadstick/dist/components/Alert/styles.css', () => ({})) // jest tries to import styles and fails...\n-\nconst renderComponent = (props) => {\nconst base = {\ncomponents: {\n",
        "date": "19.04.2020 20:20:50",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "sim_msg": "test(Root): add MoleculeBreadcrum tests",
        "sim_diff": "diff --git a/test/molecule/breadcrumb/index.js b/test/molecule/breadcrumb/index.js * */\n/* eslint react/jsx-no-undef:0 */\n+/* eslint no-undef:0 */\n-// import React from 'react'\n-// import {render} from '@testing-library/react'\n+import React from 'react'\n+import ReactDOM from 'react-dom'\nimport chai, {expect} from 'chai'\nimport chaiDOM from 'chai-dom'\n+import {render} from '@testing-library/react'\n+import BreadcrumbBasic from '../../../components/molecule/breadcrumb/src'\nchai.use(chaiDOM)\n+const setupBuilder = Component => props => {\n+ const container = document.createElement('div')\n+ container.setAttribute('id', 'test-container')\n+ const utils = render(<Component {...props} />, {\n+ container: document.body.appendChild(container)\n+ })\n+ return utils\n+}\n+\ndescribe('molecule/breadcrumb', () => {\n- it.skip('Render', () => {\n+ const Component = BreadcrumbBasic\n+ const setup = setupBuilder(Component)\n+\n+ it('should render without crashing', () => {\n+ // Given\n+ const props = {\n+ items: [\n+ {\n+ label: 'item 0'\n+ },\n+ {\n+ label: 'item 1'\n+ }\n+ ]\n+ }\n+\n+ // When\n+ const component = <Component {...props} />\n+\n+ // Then\n+ const div = document.createElement('div')\n+ ReactDOM.render(component, div)\n+ ReactDOM.unmountComponentAtNode(div)\n+ })\n+\n+ it('should NOT render null', () => {\n+ // Given\n+ const props = {\n+ items: [\n+ {\n+ label: 'item 0'\n+ },\n+ {\n+ label: 'item 1'\n+ }\n+ ]\n+ }\n+\n+ // When\n+ const {container} = setup(props)\n+\n+ // Then\n+ expect(container.innerHTML).to.be.a('string')\n+ expect(container.innerHTML).to.not.have.lengthOf(0)\n+ })\n+\n+ it.skip('example', () => {\n// Example TO BE DELETED!!!!\n- // const {getByRole} = render(<AtomButton>HOLA</AtomButton>)\n+\n+ // Given\n+ // const props = {}\n+\n+ // When\n+ // const {getByRole} = setup(props)\n+\n+ // Then\n// expect(getByRole('button')).to.have.text('HOLA')\nexpect(true).to.be.eql(false)\n})\n"
    },
    {
        "msg": "test(stack): update snapshots",
        "diff": "diff --git a/packages/chakra-ui-core/src/CStack/tests/__snapshots__/CStack.test.js.snap b/packages/chakra-ui-core/src/CStack/tests/__snapshots__/CStack.test.js.snap exports[`should render CStack with element as nav 1`] = `\n<DocumentFragment>\n<nav\n- class=\"css-j7qwjs css-k008qs css-1lp2as9\"\n+ class=\"css-j7qwjs css-0\"\ndata-chakra-component=\"CStack\"\ndata-testid=\"stack\"\n>\n<div\n- class=\"css-1ipbp6k\"\n+ class=\"css-dtyjrz\"\ndata-chakra-component=\"CBox\"\ndata-testid=\"stack-child-1\"\n>\n@@ -26,7 +26,6 @@ exports[`should render CStack with element as nav 1`] = `\nThe future can be even brighter but a goal without a plan is just a wish\n</p>\n</div>\n-\n<div\nclass=\"css-1ipbp6k\"\ndata-chakra-component=\"CBox\"\n@@ -53,12 +52,12 @@ exports[`should render CStack with element as nav 1`] = `\nexports[`should render CStack with element as section 1`] = `\n<DocumentFragment>\n<section\n- class=\"css-j7qwjs css-k008qs css-1lp2as9\"\n+ class=\"css-j7qwjs css-0\"\ndata-chakra-component=\"CStack\"\ndata-testid=\"stack\"\n>\n<div\n- class=\"css-1ipbp6k\"\n+ class=\"css-dtyjrz\"\ndata-chakra-component=\"CBox\"\ndata-testid=\"stack-child-1\"\n>\n@@ -76,7 +75,6 @@ exports[`should render CStack with element as section 1`] = `\nThe future can be even brighter but a goal without a plan is just a wish\n</p>\n</div>\n-\n<div\nclass=\"css-1ipbp6k\"\ndata-chakra-component=\"CBox\"\n@@ -103,12 +101,12 @@ exports[`should render CStack with element as section 1`] = `\nexports[`should render correctly 1`] = `\n<DocumentFragment>\n<div\n- class=\"css-j7qwjs css-k008qs css-1lp2as9\"\n+ class=\"css-j7qwjs css-0\"\ndata-chakra-component=\"CStack\"\ndata-testid=\"stack\"\n>\n<div\n- class=\"css-1ipbp6k\"\n+ class=\"css-dtyjrz\"\ndata-chakra-component=\"CBox\"\ndata-testid=\"stack-child-1\"\n>\n@@ -126,7 +124,6 @@ exports[`should render correctly 1`] = `\nThe future can be even brighter but a goal without a plan is just a wish\n</p>\n</div>\n-\n<div\nclass=\"css-1ipbp6k\"\ndata-chakra-component=\"CBox\"\n@@ -153,29 +150,36 @@ exports[`should render correctly 1`] = `\nexports[`should should stack native html elements 1`] = `\n<DocumentFragment>\n<div\n- class=\"css-j7qwjs css-k008qs css-1lp2as9\"\n+ class=\"css-j7qwjs css-0\"\ndata-chakra-component=\"CStack\"\ndata-testid=\"stack\"\n>\n<p\n- class=\"css-18iq2bq\"\n+ class=\"css-16ec2e8\"\ndata-chakra-component=\"CText\"\n>\nThe future can be even brighter but a goal without a plan is just a wish\n</p>\n-\n+ <div\n+ class=\"css-cet0rr\"\n+ data-chakra-component=\"CBox\"\n+ >\n<p\ndata-testid=\"stacked-p\"\n>\nI am a happy paragraph element\n</p>\n-\n+ </div>\n+ <div\n+ class=\"css-cet0rr\"\n+ data-chakra-component=\"CBox\"\n+ >\n<h3\ndata-testid=\"stacked-h3\"\n>\nI am a jolly heading element\n</h3>\n-\n+ </div>\n<p\nclass=\"css-18iq2bq\"\ndata-chakra-component=\"CText\"\n",
        "date": "26.09.2020 21:50:33",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "sim_msg": "feat(cc-button): use aria-disabled attribute instead of disabled attribute when cc-button is disabled\nAlso make sure that button is not focusable with the keyboard when in skeleton mode.\nFixes",
        "sim_diff": "diff --git a/src/components/cc-button/cc-button.js b/src/components/cc-button/cc-button.js @@ -123,6 +123,11 @@ export class CcButton extends LitElement {\ne.stopPropagation();\n+ // we need to check that because we use aria-disabled which doesn't prevent the onclick event to be fired.\n+ if (this.disabled) {\n+ return;\n+ }\n+\n// delay=0 is needed in some situations where you want the button to have the same width\n// as buttons with delay > 0 but without any delay\nif (this.delay == null || this.delay === 0 || this.link) {\n@@ -182,11 +187,14 @@ export class CcButton extends LitElement {\n? (this.textContent ?? '')\n: undefined;\n+ const tabIndex = this.skeleton ? -1 : null;\n+\nreturn html`\n<button\ntype=\"button\"\n+ tabindex=\"${ifDefined(tabIndex)}\"\nclass=${classMap(modes)}\n- ?disabled=${this.disabled || this.skeleton || this.waiting}\n+ aria-disabled=\"${this.disabled || this.skeleton || this.waiting}\"\n@click=${this._onClick}\ntitle=\"${ifDefined(imageOnlyText)}\"\naria-label=\"${ifDefined(imageOnlyText)}\"\n@@ -315,21 +323,21 @@ export class CcButton extends LitElement {\n}\n/* STATES */\n- .btn:enabled:focus {\n+ .btn:not([aria-disabled = \"true\"]):focus {\nbox-shadow: 0 0 0 .2em rgba(50, 115, 220, .25);\noutline: 0;\n}\n- .btn:enabled:hover {\n+ .btn:not([aria-disabled = \"true\"]):hover {\nbox-shadow: 0 1px 3px rgba(0, 0, 0, 0.4);\n}\n- .btn:enabled:active {\n+ .btn:not([aria-disabled = \"true\"]):active {\nbox-shadow: none;\noutline: 0;\n}\n- button:disabled {\n+ button[aria-disabled = \"true\"] {\ncursor: inherit;\nopacity: .5;\n}\n"
    },
    {
        "msg": "test: update error message for travis chrome",
        "diff": "diff --git a/test/examples/webpack.test.js b/test/examples/webpack.test.js @@ -68,8 +68,9 @@ describe('webpack app', function() {\n// This has become necessary because Travis switched their Chrome stable\n// version _down_ from 76 to 62, which handles this test case differently.\n+ // 2020-05-06: Travis Chrome 62 is now returning the original message.\nvar version = parseInt(window.navigator.userAgent.match(new RegExp('^.*HeadlessChrome/([0-9]*).*$'))[1]);\n- var message = version > 62 ? 'webpack test error' : 'Script error.';\n+ var message = version >= 62 ? 'webpack test error' : 'Script error.';\nexpect(body.data.body.trace.exception.message).to.eql(message);\n",
        "date": "06.05.2020 17:14:16",
        "repo": "rollbar/rollbar.js",
        "type": "test",
        "sim_msg": "ci: change travis.ci config",
        "sim_diff": "diff --git a/.travis.yml b/.travis.yml +sudo: false\nlanguage: node_js\nnode_js:\n- '8'\n+cache:\n+ directories:\n+ - node_modules\nbefore_script:\n- export CHROME_BIN=chromium-browser\n- export DISPLAY=:99.0\n- sh -e /etc/init.d/xvfb start\n- - npm run test\n-branches:\n- only:\n- - master\n+script:\n+ - npm run test:coverage\n+notifications:\n+ email:\n+ on_success: never\n+ on_failure: always\n\\ No newline at end of file\n"
    },
    {
        "msg": "test(Dropdown): fix multiple search text assertion",
        "diff": "diff --git a/test/specs/modules/Dropdown/Dropdown-test.js b/test/specs/modules/Dropdown/Dropdown-test.js @@ -973,7 +973,7 @@ describe('Dropdown', () => {\n{ value: 0, text: 'foo' },\n{ value: 1, text: 'foe' },\n]\n- wrapperMount(<Dropdown options={searchOptions} selection />)\n+ wrapperMount(<Dropdown options={searchOptions} search selection />)\n// open and simulate search\nwrapper\n@@ -984,13 +984,10 @@ describe('Dropdown', () => {\ndomEvent.keyDown(document, { key: 'ArrowDown' })\ndomEvent.keyDown(document, { key: 'Enter' })\n- const item = wrapper\n- .find('.selected')\n-\n// text updated\nwrapper\n.find('div.text')\n- .should.contain.text(item.text())\n+ .should.contain.text('foe')\n})\nit('displays if value is 0', () => {\nconst text = faker.hacker.noun()\n",
        "date": "15.10.2017 22:49:20",
        "repo": "semantic-org/semantic-ui-react",
        "type": "test",
        "sim_msg": "refactor(doc): adjusting propTypes on Dropdown doc component",
        "sim_diff": "diff --git a/packages/doc/src/components/Dropdown/Dropdown.jsx b/packages/doc/src/components/Dropdown/Dropdown.jsx @@ -82,7 +82,7 @@ const Dropdown = ({ label, value, options, onSelect }) => {\n<Wrapper>\n<Selector onClick={() => toggleOptions()}>\n<Label>{label}</Label>\n- <span>{value}</span>\n+ <Label>{value}</Label>\n<ArrowDropdown open={isOpen} />\n</Selector>\n{isOpen && (\n@@ -100,14 +100,13 @@ const Dropdown = ({ label, value, options, onSelect }) => {\n};\nDropdown.propTypes = {\n+ label: PropTypes.string.isRequired,\nvalue: PropTypes.string.isRequired,\noptions: PropTypes.arrayOf(PropTypes.any).isRequired,\nonSelect: PropTypes.func,\n};\nDropdown.defaultProps = {\n- value: '',\n- options: [],\nonSelect: () => {},\n};\n"
    },
    {
        "msg": "test: fix rtc config url",
        "diff": "diff --git a/test/common.js b/test/common.js @@ -4,7 +4,7 @@ var thunky = require('thunky')\nexports.getConfig = thunky(function (cb) {\n// Includes TURN -- needed for tests to pass on Sauce Labs\n// https://github.com/feross/simple-peer/issues/41\n- get.concat('https://instant.io/rtcConfig', function (err, res, data) {\n+ get.concat('https://instant.io/_rtcConfig', function (err, res, data) {\nif (err) return cb(err)\ndata = data.toString()\ntry {\n",
        "date": "05.01.2017 01:17:17",
        "repo": "feross/simple-peer",
        "type": "test",
        "sim_msg": "chore(tooling): add debugging to karma config",
        "sim_diff": "diff --git a/karma-ng.conf.js b/karma-ng.conf.js @@ -97,7 +97,12 @@ module.exports = function(config) {\n'mocha'\n],\n- singleRun: !process.env.KARMA_DEBUG\n+ singleRun: !process.env.KARMA_DEBUG,\n+\n+ // video and screenshots add on the request of sauce labs support to help\n+ // diagnose test user creation timeouts\n+ recordVideo: true,\n+ recordScreenshots: true\n};\nif (process.env.COVERAGE && process.env.COVERAGE !== 'undefined') {\n"
    },
    {
        "msg": "test: add test for direct call to onerror",
        "diff": "diff --git a/test/browser.rollbar.test.js b/test/browser.rollbar.test.js @@ -595,6 +595,52 @@ describe('log', function() {\ndone();\n})\n});\n+\n+// Test direct call to onerror, as used in verification of browser js install.\n+describe('onerror', function() {\n+ before(function (done) {\n+ window.server = sinon.createFakeServer();\n+ done();\n+ });\n+\n+ after(function () {\n+ window.server.restore();\n+ });\n+\n+ function stubResponse(server) {\n+ server.respondWith('POST', 'api/1/item',\n+ [\n+ 200,\n+ { 'Content-Type': 'application/json' },\n+ '{\"err\": 0, \"result\":{ \"uuid\": \"d4c7acef55bf4c9ea95e4fe9428a8287\"}}'\n+ ]\n+ );\n+ }\n+\n+ it('should send message when calling onerror directly', function(done) {\n+ var server = window.server;\n+ stubResponse(server);\n+ server.requests.length = 0;\n+\n+ var options = {\n+ accessToken: 'POST_CLIENT_ITEM_TOKEN',\n+ captureUncaught: true\n+ };\n+ new Rollbar(options);\n+\n+ window.onerror(\"TestRollbarError: testing window.onerror\", window.location.href);\n+\n+ server.respond();\n+\n+ var body = JSON.parse(server.requests[0].requestBody);\n+\n+ expect(body.access_token).to.eql('POST_CLIENT_ITEM_TOKEN');\n+ expect(body.data.body.trace.exception.message).to.eql('testing window.onerror');\n+\n+ done();\n+ })\n+});\n+\ndescribe('captureEvent', function() {\nit('should handle missing/default type and level', function(done) {\nvar options = {};\n",
        "date": "31.07.2019 13:22:48",
        "repo": "rollbar/rollbar.js",
        "type": "test",
        "sim_msg": "test(plugins): test all public plugins methods",
        "sim_diff": "diff --git a/client/src/remote/__tests__/PluginsSpec.js b/client/src/remote/__tests__/PluginsSpec.js import Plugins from '../Plugins';\n-const stub = sinon.stub;\n-const noop = () => {};\n+describe('plugins', function() {\n+ describe('#loadAll', function() {\n-describe('Plugins', function() {\n-\n- let plugins;\n+ let headStub;\nbeforeEach(function() {\n- delete window.plugins;\n+ headStub = sinon.stub(document.head, 'appendChild')\n+ .callsFake(({ onload }) => onload && onload());\n+ });\n- plugins = new Plugins({\n- plugins: {\n- getAll() {\n- return {\n+\n+ afterEach(function() {\n+ headStub && headStub.restore();\n+ });\n+\n+\n+ it('should load all plugins', async function() {\n+ // given\n+ const mockPlugins = {\nfoo: {\nname: 'foo',\n- script: 'foo.js'\n+ script: 'bar',\n+ style: 'baz'\n},\nbar: {\nname: 'bar',\n- script: 'bar.js'\n- },\n- baz: {\n- name: 'baz',\n- style: 'baz.css'\n+ script: 'foo',\n+ style: 'baz'\n}\n};\n+\n+ const plugins = new Plugins({\n+ plugins: {\n+ getAll() {\n+ return mockPlugins;\n}\n}\n});\n- stub(plugins, '_loadStylePlugin').callsFake(noop);\n- stub(plugins, '_loadScriptPlugin').callsFake(({ name }) => {\n- if (!window.plugins) {\n- window.plugins = [];\n- }\n+ // when\n+ await plugins.loadAll();\n- window.plugins.push({\n- type: name,\n- plugin: {\n- __init__: [ name ],\n- [ name ]: [ 'type', noop ]\n- }\n- });\n+ // then\n+ const calls = headStub.getCalls();\n+\n+ expect(calls).to.have.lengthOf(4);\n+\n+ const args = calls.reduce((args, call) => [ ...args, ...call.args ], []);\n- Promise.resolve();\n+ expect(args.filter(({ tagName }) => tagName === 'LINK')).to.have.lengthOf(2);\n+ expect(args.filter(({ tagName }) => tagName === 'SCRIPT')).to.have.lengthOf(2);\n});\n+\n});\n+\n+ describe('#get', function() {\n+\nafterEach(function() {\ndelete window.plugins;\n});\n- it('should load plugins', async function() {\n-\n- // when\n- await plugins.loadAll();\n+ it('should get registered plugin', function() {\n+ // given\n+ const mockPlugin = {};\n+ const mockType = 'foo';\n- // then\n- expect(plugins._getAll()).to.eql([{\n- type: 'foo',\n- plugin: {\n- __init__: [ 'foo' ],\n- foo: [ 'type', noop ]\n- }\n- }, {\n- type: 'bar',\n- plugin: {\n- __init__: [ 'bar' ],\n- bar: [ 'type', noop ]\n+ window.plugins = [\n+ {\n+ type: mockType,\n+ plugin: mockPlugin\n}\n- }]);\n- });\n+ ];\n+ const plugins = new Plugins();\n- it('should get loaded plugins (type=foo)', async function() {\n-\n- // given\n- await plugins.loadAll();\n+ // when\n+ const registeredPlugins = plugins.get(mockType);\n// then\n- expect(plugins.get('foo')).to.eql([{\n- __init__: [ 'foo' ],\n- foo: [ 'type', noop ]\n- }]);\n+ expect(registeredPlugins).to.be.an('Array').and.have.lengthOf(1);\n+ expect(registeredPlugins[0]).to.be.eql(mockPlugin);\n+ });\n+\n});\n});\n\\ No newline at end of file\n"
    },
    {
        "msg": "test: set unit test concurrency to 1",
        "diff": "diff --git a/package.json b/package.json \"examples\": \"cd packages/examples && npm run serve\",\n\"build:test\": \"lerna run build:test\",\n\"build:coverage\": \"COVERAGE=1 npm run build:test\",\n- \"test:unit\": \"lerna run test --ignore @candela/examples\",\n+ \"test:unit\": \"lerna run test --ignore @candela/examples --concurrency 1\",\n\"test:image\": \"cd packages/examples && npm test\",\n\"test:coverage\": \"COVERAGE=1 npm run test:unit\",\n\"coverage:report\": \"http-server build/coverage/html -p ${PORT-3000}\",\n",
        "date": "20.06.2018 16:43:31",
        "repo": "kitware/candela",
        "type": "test",
        "sim_msg": "build: Fix lerna exec ignore",
        "sim_diff": "diff --git a/package.json b/package.json \"lerna\": \"lerna\",\n\"lint\": \"npm run lerna run lint\",\n\"prepublishOnly\": \"npm run lint && npm run test && npm run build\",\n- \"publish\": \"lerna exec 'npm publish' --ignore web-compare\",\n+ \"publish\": \"lerna exec 'npm publish' --ignore @bundle-stats/web-compare\",\n\"test\": \"npm run lerna run test\"\n},\n\"repository\": {\n"
    },
    {
        "msg": "test: add tests specifically for isLuhnValid",
        "diff": "diff --git a/test/validators.js b/test/validators.js @@ -4931,6 +4931,34 @@ describe('Validators', () => {\n});\n});\n+ it('should validate luhn numbers', () => {\n+ test({\n+ validator: 'isLuhnValid',\n+ valid: [\n+ '0',\n+ '5421',\n+ '01234567897',\n+ '0123456789012345678906',\n+ '0123456789012345678901234567891',\n+ '123456789012345678906',\n+ '375556917985515',\n+ '36050234196908',\n+ '4716461583322103',\n+ '4716-2210-5188-5662',\n+ '4929 7226 5379 7141',\n+ ],\n+ invalid: [\n+ '',\n+ '1',\n+ '5422',\n+ 'foo',\n+ 'prefix6234917882863855',\n+ '623491788middle2863855',\n+ '6234917882863855suffix',\n+ ],\n+ });\n+ });\n+\nit('should validate credit cards', () => {\ntest({\nvalidator: 'isCreditCard',\n",
        "date": "23.05.2022 16:12:38",
        "repo": "validatorjs/validator.js",
        "type": "test",
        "sim_msg": "feat: uses plain strings comparison for statusCode validation\nCloses\nBREAKING CHANGE: Gavel doesn't return text diff data on status code comparison anymore.",
        "sim_diff": "diff --git a/lib/next/units/validateStatusCode.js b/lib/next/units/validateStatusCode.js -const { TextDiff } = require('../../validators/text-diff');\n-\nconst APIARY_STATUS_CODE_TYPE = 'text/vnd.apiary.status-code';\n/**\n@@ -8,25 +6,24 @@ const APIARY_STATUS_CODE_TYPE = 'text/vnd.apiary.status-code';\n* @param {number} expected\n*/\nfunction validateStatusCode(real, expected) {\n- const validator = new TextDiff(real.statusCode, expected.statusCode);\n- const rawData = validator.validate();\n- const results = validator.evaluateOutputToResults();\n+ const results = [];\n+ const isValid = real.statusCode === expected.statusCode;\n+\n+ if (!isValid) {\n+ results.push({\n+ message: `Status code is '${real.statusCode}' instead of '${\n+ expected.statusCode\n+ }'`,\n+ severity: 'error'\n+ });\n+ }\nreturn {\nvalidator: 'TextDiff',\nrealType: APIARY_STATUS_CODE_TYPE,\nexpectedType: APIARY_STATUS_CODE_TYPE,\n- rawData,\n- results: results.map((result) =>\n- Object.assign({}, result, {\n- message:\n- result.message === 'Real and expected data does not match.'\n- ? `Status code is '${real.statusCode}' instead of '${\n- expected.statusCode\n- }'`\n- : result.message\n- })\n- )\n+ rawData: '',\n+ results\n};\n}\n"
    },
    {
        "msg": "test(icon-button): refactor use screen",
        "diff": "diff --git a/packages/chakra-ui-core/src/CIconButton/tests/CIconButton.test.js b/packages/chakra-ui-core/src/CIconButton/tests/CIconButton.test.js import CIconButton from '..'\n-import { render } from '@/tests/test-utils'\n+import { render, screen } from '@/tests/test-utils'\nconst renderComponent = (props) => {\nconst inlineAttrs = (props && props.inlineAttrs) || ''\n@@ -19,15 +19,15 @@ it('should render correctly', () => {\nit('should display spinner and hide the icon', () => {\nconst inlineAttrs = 'isLoading'\n- const { container, getByTestId } = renderComponent({ inlineAttrs })\n+ const { container } = renderComponent({ inlineAttrs })\n- const button = getByTestId('btn')\n+ const button = screen.getByTestId('btn')\nexpect(button).toHaveAttribute('disabled')\nexpect(button).toHaveAttribute('aria-disabled', 'true')\n// TODO: find a way to easily grab the spinner element\n- // Maybe? expect(getByTestId('Spinner')).toBeInTheDocument()\n+ // Maybe? expect(screen.getByTestId('Spinner')).toBeInTheDocument()\nexpect(button).toHaveStyle('opacity: 0.4')\nexpect(container.querySelector('button > div')).toBeInTheDocument()\n})\n",
        "date": "07.07.2020 00:59:33",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "sim_msg": "test(Root): add AtomSpinner tests",
        "sim_diff": "diff --git a/test/atom/spinner/index.js b/test/atom/spinner/index.js * */\n/* eslint react/jsx-no-undef:0 */\n+/* eslint no-undef:0 */\n-// import React from 'react'\n-// import {render} from '@testing-library/react'\n+import React from 'react'\n+import ReactDOM from 'react-dom'\nimport chai, {expect} from 'chai'\nimport chaiDOM from 'chai-dom'\n+import {render} from '@testing-library/react'\nchai.use(chaiDOM)\n+const setupBuilder = Component => props => {\n+ const container = document.createElement('div')\n+ container.setAttribute('id', 'test-container')\n+ const utils = render(<Component {...props} />, {\n+ container: document.body.appendChild(container)\n+ })\n+ return utils\n+}\n+\ndescribe('atom/spinner', () => {\n- it.skip('Render', () => {\n+ const Component = AtomSpinner\n+ const setup = setupBuilder(Component)\n+\n+ it('should render without crashing', () => {\n+ // Given\n+ const props = {}\n+\n+ // When\n+ const component = <Component {...props} />\n+\n+ // Then\n+ const div = document.createElement('div')\n+ ReactDOM.render(component, div)\n+ ReactDOM.unmountComponentAtNode(div)\n+ })\n+\n+ it('should NOT render null', () => {\n+ // Given\n+ const props = {}\n+\n+ // When\n+ const {container} = setup(props)\n+\n+ // Then\n+ expect(container.innerHTML).to.be.a('string')\n+ expect(container.innerHTML).to.not.have.lengthOf(0)\n+ })\n+\n+ it.skip('example', () => {\n// Example TO BE DELETED!!!!\n- // const {getByRole} = render(<AtomButton>HOLA</AtomButton>)\n+\n+ // Given\n+ // const props = {}\n+\n+ // When\n+ // const {getByRole} = setup(props)\n+\n+ // Then\n// expect(getByRole('button')).to.have.text('HOLA')\nexpect(true).to.be.eql(false)\n})\n"
    },
    {
        "msg": "test(accordion): add shift+tab tests for accordion",
        "diff": "diff --git a/packages/chakra-ui-core/src/CAccordion/tests/CAccordion.test.js b/packages/chakra-ui-core/src/CAccordion/tests/CAccordion.test.js @@ -144,7 +144,6 @@ it('has the proper aria attributes', () => {\nexpect(panel).toHaveAttribute('aria-labelledby')\n})\n-// test that tab moves focus to the next focusable element\nit('tab moves focus to the next focusable element', async () => {\nrenderComponent({\ntemplate: `\n@@ -178,7 +177,43 @@ it('tab moves focus to the next focusable element', async () => {\nexpect(last).toHaveFocus()\n})\n-// test that aria-contols for button is same as id for panel\n+\n+it('shift+tab moves focus to the previous focusable element', async () => {\n+ renderComponent({\n+ template: `\n+ <CAccordion>\n+ <CAccordionItem>\n+ <CAccordionHeader>First section</CAccordionHeader>\n+ <CAccordionPanel>Panel 1</CAccordionPanel>\n+ </CAccordionItem>\n+ <CAccordionItem>\n+ <CAccordionHeader>Second section</CAccordionHeader>\n+ <CAccordionPanel>Panel 2</CAccordionPanel>\n+ </CAccordionItem>\n+ <CAccordionItem>\n+ <CAccordionHeader>Last section</CAccordionHeader>\n+ <CAccordionPanel>Panel 3</CAccordionPanel>\n+ </CAccordionItem>\n+ </CAccordion>`\n+ })\n+\n+ const first = screen.getByText('First section')\n+ const second = screen.getByText('Second section')\n+ const last = screen.getByText('Last section')\n+\n+ await userEvent.tab()\n+ expect(first).toHaveFocus()\n+\n+ await userEvent.tab()\n+ expect(second).toHaveFocus()\n+\n+ await userEvent.tab()\n+ expect(last).toHaveFocus()\n+\n+ await userEvent.tab({shift: true}) // shift+tab\n+ expect(second).toHaveFocus()\n+})\n+\nit('aria-contols for button is same as id for panel', () => {\nrenderComponent({\ntemplate: `\n@@ -195,7 +230,6 @@ it('aria-contols for button is same as id for panel', () => {\nexpect(button.getAttribute('aria-controls')).toEqual(panel.getAttribute('id'))\n})\n-// test that aria-expanded is true/false when accordion is open/closed\nit('aria-expanded is true/false when accordion is open/closed', () => {\nrenderComponent({\ntemplate: `\n@@ -215,7 +249,6 @@ it('aria-expanded is true/false when accordion is open/closed', () => {\nexpect(button).toHaveAttribute('aria-expanded', 'true')\n})\n-// test that panel has role=region and aria-labelledby\nit('panel has role=region and aria-labelledby', () => {\nrenderComponent({\ntemplate: `\n@@ -231,29 +264,3 @@ it('panel has role=region and aria-labelledby', () => {\nexpect(panel).toHaveAttribute('aria-labelledby')\nexpect(panel).toHaveAttribute('role', 'region')\n})\n\\ No newline at end of file\n-\n-// eslint-disable-next-line no-undef\n-xit('arrow up & down moves focus to next/previous accordion', async () => {\n- renderComponent({\n- template: `\n- <CAccordion>\n- <CAccordionItem>\n- <CAccordionHeader>Section 1 title</CAccordionHeader>\n- <CAccordionPanel>Panel 1</CAccordionPanel>\n- </CAccordionItem>\n- <CAccordionItem>\n- <CAccordionHeader>Section 2 title</CAccordionHeader>\n- <CAccordionPanel>Panel 2</CAccordionPanel>\n- </CAccordionItem>\n- </CAccordion>`\n- })\n-\n- const first = screen.getByText('Section 1 title')\n- const second = screen.getByText('Section 2 title')\n-\n- await fireEvent.keyDown(first, { key: 'ArrowDown', keyCode: 40 })\n- expect(second).toHaveFocus()\n-\n- await fireEvent.keyDown(second, { key: 'ArrowUp', keyCode: 38 })\n- expect(first).toHaveFocus()\n-})\n",
        "date": "04.07.2020 15:53:35",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "sim_msg": "test(dashboardeditor): add testcases for the render icons",
        "sim_diff": "diff --git a/packages/react/src/components/DashboardEditor/DashboardEditor.test.jsx b/packages/react/src/components/DashboardEditor/DashboardEditor.test.jsx @@ -17,6 +17,14 @@ describe('DashboardEditor', () => {\ndataSourceId: 'key1',\nunit: '%',\nlabel: 'Key 1',\n+ thresholds: [\n+ {\n+ comparison: '>=',\n+ value: 30,\n+ color: 'red',\n+ icon: 'User',\n+ },\n+ ],\n},\n{\ndataSourceId: 'key2',\n@@ -25,6 +33,7 @@ describe('DashboardEditor', () => {\n},\n],\n},\n+ values: { key1: 35 },\n};\nconst mockOnImport = jest.fn();\nconst mockOnExport = jest.fn();\n@@ -54,6 +63,29 @@ describe('DashboardEditor', () => {\n],\n};\n+ it('verify icon renders in editor', () => {\n+ render(<DashboardEditor {...commonProps} initialValue={{ cards: [mockValueCard] }} />);\n+ // no card should be selected, meaning the gallery should be open\n+ const galleryTitle = screen.getByText('Gallery');\n+ expect(galleryTitle).toBeInTheDocument();\n+ // first find and click the the card\n+ const cardTitle = screen.getByTitle(mockValueCard.title);\n+ // Verify that the threshold icon renders\n+ expect(screen.getByTitle('User')).toBeInTheDocument();\n+ expect(cardTitle).toBeInTheDocument();\n+ });\n+ it('verify custom renderIconByName is called with threshold', () => {\n+ const mockRenderIconByName = jest.fn();\n+ render(\n+ <DashboardEditor\n+ {...commonProps}\n+ renderIconByName={mockRenderIconByName}\n+ initialValue={{ cards: [mockValueCard] }}\n+ />\n+ );\n+ // no card should be selected, meaning the gallery should be open\n+ expect(mockRenderIconByName).toHaveBeenCalled();\n+ });\nit('clicking card should select the card and close gallery', () => {\nrender(<DashboardEditor {...commonProps} initialValue={{ cards: [mockValueCard] }} />);\n// no card should be selected, meaning the gallery should be open\n"
    },
    {
        "msg": "test: Fixing test case",
        "diff": "diff --git a/packages/wmr/test/fixtures/prerender-data/index.js b/packages/wmr/test/fixtures/prerender-data/index.js export function prerender() {\n- return { html: '<h1>it works</h1>', links: ['/'], data: { hello: 'world' } };\n+ return { html: '<h1>it works</h1><script type=\"isodata\"></script>', links: ['/'], data: { hello: 'world' } };\n}\n",
        "date": "15.11.2021 10:04:51",
        "repo": "preactjs/wmr",
        "type": "test",
        "sim_msg": "test(cdr-input test): change selector from classname to element",
        "sim_diff": "diff --git a/src/components/input/__tests__/CdrInput.spec.js b/src/components/input/__tests__/CdrInput.spec.js @@ -17,7 +17,7 @@ describe('CdrInput', () => {\nlet input;\nbeforeEach(() => {\nwrapper = mount(CdrInput, { ...baseComponentPattern });\n- input = wrapper.find('.cdr-input');\n+ input = wrapper.find('input');\n});\nit('renders correctly', () => {\n"
    },
    {
        "msg": "test: fix typo in before_install",
        "diff": "diff --git a/.travis.yml b/.travis.yml @@ -9,8 +9,7 @@ node_js:\n- '8'\n- '6'\nbefore_install:\n- - if [ \"$TRAVIS_BRANCH\" = \"master\" ]; then\n- echo \"//registry.npmjs.org/:_authToken=\\${NPM_TOKEN}\" > .npmrc; fi\n+ - if [ \"$TRAVIS_BRANCH\" == \"master\" ]; then echo \"//registry.npmjs.org/:_authToken=\\${NPM_TOKEN}\" > .npmrc; fi\nafter_success:\n- npm run semantic-release\nbranches:\n",
        "date": "06.12.2017 19:13:06",
        "repo": "remy/nodemon",
        "type": "test",
        "sim_msg": "chore(monorepo): fix how travis creates npm login",
        "sim_diff": "diff --git a/.travis.yml b/.travis.yml @@ -30,7 +30,7 @@ after_success:\nnpm run coverage:upload;\nfi\nif [[ $TRAVIS_BRANCH == 'master' || $TRAVIS_BRANCH == 'next' ]] && [[ $TRAVIS_PULL_REQUEST == 'false' ]]; then\n- echo \"//registry.npmjs.org/:_authToken=\\${NPM_TOKEN}\" > .npmrc\n+ printf \"//registry.npmjs.org/:_authToken=$NPM_TOKEN\\n\" > ~/.npmrc\nnpm run release -- --publish\nfi\nbranches:\n"
    },
    {
        "msg": "test(badge): remove unnecessary mock",
        "diff": "diff --git a/packages/chakra-ui-core/src/CBadge/tests/CBadge.test.js b/packages/chakra-ui-core/src/CBadge/tests/CBadge.test.js import { CBadge, CStack } from '../..'\nimport { render } from '@/tests/test-utils'\n-// mocks\n-jest.mock('breadstick/dist/components/Alert/styles.css', () => ({})) // jest tries to import styles and fails...\n-\nconst renderComponent = (props) => {\nconst base = {\ncomponents: { CBadge, CStack },\n",
        "date": "19.04.2020 20:19:01",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "sim_msg": "test(Root): add MoleculeBreadcrum tests",
        "sim_diff": "diff --git a/test/molecule/breadcrumb/index.js b/test/molecule/breadcrumb/index.js * */\n/* eslint react/jsx-no-undef:0 */\n+/* eslint no-undef:0 */\n-// import React from 'react'\n-// import {render} from '@testing-library/react'\n+import React from 'react'\n+import ReactDOM from 'react-dom'\nimport chai, {expect} from 'chai'\nimport chaiDOM from 'chai-dom'\n+import {render} from '@testing-library/react'\n+import BreadcrumbBasic from '../../../components/molecule/breadcrumb/src'\nchai.use(chaiDOM)\n+const setupBuilder = Component => props => {\n+ const container = document.createElement('div')\n+ container.setAttribute('id', 'test-container')\n+ const utils = render(<Component {...props} />, {\n+ container: document.body.appendChild(container)\n+ })\n+ return utils\n+}\n+\ndescribe('molecule/breadcrumb', () => {\n- it.skip('Render', () => {\n+ const Component = BreadcrumbBasic\n+ const setup = setupBuilder(Component)\n+\n+ it('should render without crashing', () => {\n+ // Given\n+ const props = {\n+ items: [\n+ {\n+ label: 'item 0'\n+ },\n+ {\n+ label: 'item 1'\n+ }\n+ ]\n+ }\n+\n+ // When\n+ const component = <Component {...props} />\n+\n+ // Then\n+ const div = document.createElement('div')\n+ ReactDOM.render(component, div)\n+ ReactDOM.unmountComponentAtNode(div)\n+ })\n+\n+ it('should NOT render null', () => {\n+ // Given\n+ const props = {\n+ items: [\n+ {\n+ label: 'item 0'\n+ },\n+ {\n+ label: 'item 1'\n+ }\n+ ]\n+ }\n+\n+ // When\n+ const {container} = setup(props)\n+\n+ // Then\n+ expect(container.innerHTML).to.be.a('string')\n+ expect(container.innerHTML).to.not.have.lengthOf(0)\n+ })\n+\n+ it.skip('example', () => {\n// Example TO BE DELETED!!!!\n- // const {getByRole} = render(<AtomButton>HOLA</AtomButton>)\n+\n+ // Given\n+ // const props = {}\n+\n+ // When\n+ // const {getByRole} = setup(props)\n+\n+ // Then\n// expect(getByRole('button')).to.have.text('HOLA')\nexpect(true).to.be.eql(false)\n})\n"
    },
    {
        "msg": "test: add a couple more regex tests for ignoredMessages",
        "diff": "diff --git a/test/predicates.test.js b/test/predicates.test.js @@ -378,6 +378,19 @@ describe('messageIsIgnored', function() {\nexpect(p.messageIsIgnored(logger)(item, settings)).to.not.be.ok();\n});\nit('false if ignoredMessages regex match', function() {\n+ var item = {\n+ level: 'critical',\n+ body: {\n+ message: {body: 'This is an ignored message'}\n+ }\n+ };\n+ var settings = {\n+ reportLevel: 'debug',\n+ ignoredMessages: ['^This is an .{7} message$']\n+ };\n+ expect(p.messageIsIgnored(logger)(item, settings)).to.not.be.ok();\n+ });\n+ it('false if ignoredMessages literal match', function() {\nvar item = {\nlevel: 'critical',\nbody: {\n@@ -390,6 +403,19 @@ describe('messageIsIgnored', function() {\n};\nexpect(p.messageIsIgnored(logger)(item, settings)).to.not.be.ok();\n});\n+ it('false if ignoredMessages more literal regex matches', function() {\n+ var item = {\n+ level: 'critical',\n+ body: {\n+ message: {body: 'Match these characters: (*+?)'}\n+ }\n+ };\n+ var settings = {\n+ reportLevel: 'debug',\n+ ignoredMessages: ['\\\\(\\\\*\\\\+\\\\?\\\\)']\n+ };\n+ expect(p.messageIsIgnored(logger)(item, settings)).to.not.be.ok();\n+ });\nit('true if both trace and body message but ignoredMessages only match body', function() {\nvar item = {\nlevel: 'critical',\n",
        "date": "28.02.2020 13:28:32",
        "repo": "rollbar/rollbar.js",
        "type": "test",
        "sim_msg": "test: adds JsonSchema test case for \"validateBody\"",
        "sim_diff": "diff --git a/lib/api/test/unit/units/validateBody.test.js b/lib/api/test/unit/units/validateBody.test.js @@ -277,8 +277,74 @@ describe('validateBody', () => {\n});\n});\n- describe.skip('application/schema+json', () => {\n- // ...\n+ describe('application/schema+json', () => {\n+ describe('with matching bodies', () => {\n+ const res = validateBody(\n+ { body: '{ \"foo\": \"bar\" }' },\n+ {\n+ bodySchema: {\n+ required: ['foo']\n+ }\n+ }\n+ );\n+\n+ it('has \"JsonSchema\" validator', () => {\n+ assert.propertyVal(res, 'validator', 'JsonSchema');\n+ });\n+\n+ it('has \"application/json\" real type', () => {\n+ assert.propertyVal(res, 'realType', 'application/json');\n+ });\n+\n+ it('has \"application/schema+json\" expected type', () => {\n+ assert.propertyVal(res, 'expectedType', 'application/schema+json');\n+ });\n+\n+ it('has no errors', () => {\n+ assert.lengthOf(res.results, 0);\n+ });\n+ });\n+\n+ describe('with non-matching bodies', () => {\n+ const res = validateBody(\n+ { body: '{ \"oneTwoThree\": \"bar\" }' },\n+ {\n+ bodySchema: {\n+ required: ['doe']\n+ }\n+ }\n+ );\n+\n+ it('has \"JsonSchema\" validator', () => {\n+ assert.propertyVal(res, 'validator', 'JsonSchema');\n+ });\n+\n+ it('has \"application/json\" real type', () => {\n+ assert.propertyVal(res, 'realType', 'application/json');\n+ });\n+\n+ it('has \"application/schema+json\" expected type', () => {\n+ assert.propertyVal(res, 'expectedType', 'application/schema+json');\n+ });\n+\n+ describe('produces an error', () => {\n+ it('exactly one error', () => {\n+ assert.lengthOf(res.results, 1);\n+ });\n+\n+ it('has \"error\" severity', () => {\n+ assert.propertyVal(res.results[0], 'severity', 'error');\n+ });\n+\n+ it('has explanatory message', () => {\n+ assert.propertyVal(\n+ res.results[0],\n+ 'message',\n+ `At '/doe' Missing required property: doe`\n+ );\n+ });\n+ });\n+ });\n});\n});\n});\n"
    },
    {
        "msg": "test(edtiable): remove breadstick mock",
        "diff": "diff --git a/packages/chakra-ui-core/src/CEditable/tests/CEditable.test.js b/packages/chakra-ui-core/src/CEditable/tests/CEditable.test.js @@ -3,7 +3,6 @@ import { render, defaultProviders, userEvent, fireEvent } from '@/tests/test-uti\nimport { useId } from '../../utils'\n// mocks\n-jest.mock('@/packages/chakra-ui-core/src/CToast/index.js', () => {})\njest.mock('@/packages/chakra-ui-core/src/utils/generators.js')\nconst renderComponent = (props) => {\n",
        "date": "19.04.2020 21:00:22",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "sim_msg": "test(components/molecule/select): fix flaky onblur test",
        "sim_diff": "diff --git a/components/molecule/select/test/index.test.js b/components/molecule/select/test/index.test.js @@ -11,7 +11,7 @@ import chai, {expect} from 'chai'\nimport chaiDOM from 'chai-dom'\nimport sinon from 'sinon'\n-import userEvents from '@testing-library/user-event'\n+import {fireEvent} from '@testing-library/react'\nimport json from '../package.json'\nimport * as pkg from '../src/index.js'\n@@ -100,11 +100,11 @@ describe(json.name, () => {\nconst {getByRole} = setup(props)\nconst textBox = getByRole('textbox')\n- userEvents.click(textBox)\n- userEvents.tab()\n+ fireEvent.focusIn(textBox)\n+ fireEvent.focusOut(textBox)\n// Then\n- sinon.assert.calledOnce(spy)\n+ sinon.assert.called(spy)\n})\n})\n"
    },
    {
        "msg": "test: use a more standard format for webpack config",
        "diff": "diff --git a/tests/webpack.config.js b/tests/webpack.config.js -// var webpack = require('webpack');\nvar candelaWebpack = require('../webpack');\n-var config = {};\n-\n-config.entry = {\n- 'tests': './tests.js'\n-};\n-\n-config.devtool = 'inline-source-map';\n-\n-config.node = {\n+module.exports = candelaWebpack({\n+ entry: {\n+ tests: './tests.js'\n+ },\n+ devtool: 'inline-source-map',\n+ node: {\nfs: 'empty'\n-};\n-\n-config.output = {\n+ },\n+ output: {\npath: 'build',\nfilename: 'tests.js'\n-};\n-config.module = {\n+ },\n+ module: {\nloaders: [\n{\ntest: /\\.css/,\n@@ -25,9 +20,5 @@ config.module = {\ninclude: /node_modules\\/nvd3/,\n},\n]\n-};\n-delete config.plugins;\n-\n-var final = candelaWebpack(config);\n-\n-module.exports = final;\n+ }\n+});\n",
        "date": "05.06.2017 14:57:01",
        "repo": "kitware/candela",
        "type": "test",
        "sim_msg": "build: Pack with style-loader",
        "sim_diff": "diff --git a/build/webpack/config.js b/build/webpack/config.js @@ -54,6 +54,11 @@ module.exports = {\n},\n{\ntest: /\\.css/,\n+ use: [\n+ {\n+ loader: 'style-loader',\n+ },\n+ {\nloader: 'css-loader',\noptions: {\nmodules: true,\n@@ -61,6 +66,8 @@ module.exports = {\n},\n],\n},\n+ ],\n+ },\ndevtool: 'source-map',\nplugins: [\nnew StatsPlugin('../artifacts/webpack-stats.json', {\n"
    },
    {
        "msg": "test(stat): remove provider",
        "diff": "diff --git a/packages/chakra-ui-core/src/CStat/tests/CStat.test.js b/packages/chakra-ui-core/src/CStat/tests/CStat.test.js import { CStat, CStatLabel, CStatNumber, CStatHelperText, CStatArrow } from '..'\n-import { render, defaultProviders } from '@/tests/test-utils'\n-import icons from '../../lib/internal-icons.js'\n+import { render } from '@/tests/test-utils'\nconst renderComponent = (props) => {\nconst base = {\ncomponents: { CStat, CStatLabel, CStatNumber, CStatHelperText, CStatArrow },\n- provide: () => defaultProviders({ $chakraIcons: { 'triangle-up': icons['triangle-up'], 'triangle-down': icons['triangle-down'] } }),\ntemplate: `\n<CStat>\n<CStatLabel>Collected Fees</CStatLabel>\n",
        "date": "19.04.2020 23:59:17",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "sim_msg": "chore: Add definitions to tables",
        "sim_diff": "diff --git a/src/templates/state/tests.js b/src/templates/state/tests.js -import React from 'react'\n+import React, { useState } from 'react'\nimport { graphql } from 'gatsby'\nimport TableResponsive from '~components/common/table-responsive'\nimport { FormatDate, FormatNumber } from '~components/utils/format'\n-import StateDataDefinitions from '~components/pages/state/data-definitions'\n+import { DefinitionPanel } from '~components/common/cards/definitions-panel'\n+import { DefinitionLink } from '~components/common/statistic'\nimport Layout from '~components/layout'\nconst formatNumber = number => <FormatNumber number={number} />\nexport default ({ pageContext, path, data }) => {\nconst state = pageContext\n+ const [highlightedDefinition, setHighlightedDefinition] = useState(false)\n+\nreturn (\n<Layout\ntitle={`${state.name}: Testing`}\n@@ -17,9 +20,13 @@ export default ({ pageContext, path, data }) => {\npath={path}\n>\n<p>Testing</p>\n- <StateDataDefinitions\n+ {highlightedDefinition && (\n+ <DefinitionPanel\ndefinitions={data.allContentfulDataDefinition.nodes}\n+ highlightedDefinition={highlightedDefinition}\n+ onHide={() => setHighlightedDefinition(false)}\n/>\n+ )}\n<TableResponsive\nlabels={[\n{\n@@ -39,7 +46,18 @@ export default ({ pageContext, path, data }) => {\n},\n{\nfield: 'negative',\n- label: 'Negative (cumulative)',\n+ label: (\n+ <>\n+ Negative (cumulative){' '}\n+ <DefinitionLink\n+ onDefinitionsToggle={() => {\n+ setHighlightedDefinition('negative')\n+ }}\n+ >\n+ Definition\n+ </DefinitionLink>{' '}\n+ </>\n+ ),\nformat: formatNumber,\n},\n{\n@@ -54,7 +72,18 @@ export default ({ pageContext, path, data }) => {\n},\n{\nfield: 'positive',\n- label: 'Positive (cumulative)',\n+ label: (\n+ <>\n+ Positive (cumulative){' '}\n+ <DefinitionLink\n+ onDefinitionsToggle={() => {\n+ setHighlightedDefinition('positive')\n+ }}\n+ >\n+ Definition\n+ </DefinitionLink>{' '}\n+ </>\n+ ),\nformat: formatNumber,\n},\n{\n@@ -64,7 +93,18 @@ export default ({ pageContext, path, data }) => {\n},\n{\nfield: 'positiveCasesViral',\n- label: 'Viral case positive (increase)',\n+ label: (\n+ <>\n+ Viral case positive (increase){' '}\n+ <DefinitionLink\n+ onDefinitionsToggle={() => {\n+ setHighlightedDefinition('positiveCasesViral')\n+ }}\n+ >\n+ Definition\n+ </DefinitionLink>{' '}\n+ </>\n+ ),\nformat: formatNumber,\n},\n{\n"
    },
    {
        "msg": "test: disable flaky node tests",
        "diff": "diff --git a/package.json b/package.json \"build\": \"browserify -s SimplePeer -r . | minify > simplepeer.min.js\",\n\"size\": \"npm run build && cat simplepeer.min.js | gzip | wc -c\",\n\"// test\": \"standard && npm run test-node && npm run test-browser\",\n- \"test\": \"standard && npm run test-node\",\n+ \"test\": \"standard && npm run test-browser\",\n\"test-browser\": \"airtap --coverage -- test/*.js\",\n\"test-browser-local\": \"airtap --coverage --local -- test/*.js\",\n\"test-node\": \"WRTC=wrtc tape test/*.js\",\n",
        "date": "21.04.2021 17:14:19",
        "repo": "feross/simple-peer",
        "type": "test",
        "sim_msg": "build(release): adds standard version",
        "sim_diff": "diff --git a/package.json b/package.json \"lint:fix\": \"eslint \\\"src/**/*.{js,jsx,ts,tsx}\\\" \\\"test/**/*.{js,jsx,ts,tsx}\\\" --fix\",\n\"test\": \"cross-env TS_NODE_PROJECT=./test/tsconfig.json tap test/**/*.ts\",\n\"test:ci\": \"cross-env TS_NODE_PROJECT=./test/tsconfig.json tap --coverage-report=text-lcov test/**/*.ts | coveralls\",\n+ \"release\": \"standard-version\",\n\"lint-staged\": \"lint-staged\",\n\"commitlint\": \"commitlint\"\n},\n"
    },
    {
        "msg": "test(controls.test.js): add position testing to contro",
        "diff": "diff --git a/src/domain/controls.test.js b/src/domain/controls.test.js @@ -27,6 +27,7 @@ describe(\"Controls reducer\", () => {\n'start': 't0',\n'end': 'tn',\n'showBusy': true,\n+ 'position': [0,0]\n}\nconst action = setControls(controls);\n@@ -70,6 +71,7 @@ describe(\"Controls reducer\", () => {\n'start': null,\n'end': null,\n'showBusy': false,\n+ 'position': [0,0]\n});\ndone();\n",
        "date": "25.06.2019 10:51:23",
        "repo": "iqtlabs/crviz",
        "type": "test",
        "sim_msg": "fix(renderer): Load and remove lowdefy.imports.",
        "sim_diff": "diff --git a/packages/renderer/src/Renderer.js b/packages/renderer/src/Renderer.js @@ -31,19 +31,22 @@ import parseJwt from './utils/auth/parseJwt';\nconst lowdefy = {\ncontexts: {},\n- customActions: window.lowdefy.customActions,\ndisplayMessage: () => () => undefined,\ndocument,\n+ imports: {\n+ jsActions: window.lowdefy.imports.jsActions,\n+ jsOperators: window.lowdefy.imports.jsOperators,\n+ },\ninputs: {},\n- jsOperators: window.lowdefy.jsOperators,\nlink: () => {},\nlocalStorage,\n- registerCustomAction: window.lowdefy.registerCustomAction,\n+ registerJsAction: window.lowdefy.registerJsAction,\nregisterJsOperator: window.lowdefy.registerJsOperator,\nupdaters: {},\nwindow,\n};\n+delete window.lowdefy.imports;\nif (window.location.origin.includes('http://localhost')) {\nwindow.lowdefy = lowdefy;\n}\n"
    },
    {
        "msg": "test(PopperContent): remove debug statement\ntest(PopperContent): remove debug statement",
        "diff": "diff --git a/src/__tests__/PopperContent.spec.js b/src/__tests__/PopperContent.spec.js @@ -117,8 +117,6 @@ describe('PopperContent', () => {\nit('should have x-placement of auto by default', () => {\nconst wrapper = mount(<PopperContent target=\"target\" isOpen container=\"inline\">Yo!</PopperContent>);\n- console.log(wrapper.debug());\n-\nexpect(wrapper.find('div[x-placement=\"auto\"]').exists()).toBe(true);\n});\n",
        "date": "18.10.2019 18:40:11",
        "repo": "reactstrap/reactstrap",
        "type": "test",
        "sim_msg": "docs(common-tips): fix syntax error\nAdd missing `expect` in assertion",
        "sim_diff": "diff --git a/docs/guides/common-tips.md b/docs/guides/common-tips.md @@ -56,9 +56,9 @@ it('updates text', async () => {\nit('render text', done => {\nconst wrapper = mount(TestComponent)\nwrapper.trigger('click').then(() => {\n- wrapper.text().toContain('updated')\n+ expect(wrapper.text()).toContain('updated')\nwrapper.trigger('click').then(() => {\n- wrapper.text().toContain('some different text')\n+ expect(wrapper.text()).toContain('some different text')\ndone()\n})\n})\n"
    },
    {
        "msg": "chore: add note about providing a reference in PR template\ncloses",
        "diff": "diff --git a/.github/pull_request_template.md b/.github/pull_request_template.md @@ -5,8 +5,11 @@ feat(validatorName): brief title of what has been done\n<!--- briefly describe what you have done in this PR --->\n+<!--- provide some (credible) references showing the structure of the data to be validated, if applicable --->\n+\n## Checklist\n- [ ] PR contains only changes related; no stray files, etc.\n- [ ] README updated (where applicable)\n- [ ] Tests written (where applicable)\n+- [ ] References provided in PR (where applicable)\n",
        "date": "08.02.2023 06:57:58",
        "repo": "validatorjs/validator.js",
        "type": "chore",
        "sim_msg": "chore: remove &nbsp; from PR template",
        "sim_diff": "diff --git a/.github/pull_request_template.md b/.github/pull_request_template.md ## **Summary of Changes**\n-\nFixes # _(if applicable - add the number of issue this PR addresses)_\n-&nbsp;\n-\n## **Test Data or Screenshots**\n-&nbsp;\n-\n###### _By submitting this pull request, you are confirming the following:_\n- I have reviewed the [Contribution Guidelines](https://github.com/web3swift-team/web3swift/blob/develop/CONTRIBUTION.md).\n"
    },
    {
        "msg": "chore(demo): skip unnecessary sleep(1500) during prerendering",
        "diff": "diff --git a/examples/demo/public/index.tsx b/examples/demo/public/index.tsx @@ -7,10 +7,12 @@ import Header from './header.tsx';\nconst sleep = t => new Promise(r => setTimeout(r, t));\n+const IS_CLIENT = typeof window !== 'undefined';\n+\nconst About = lazy(() => import('./pages/about/index.js'));\n-const LazyAndLate = lazy(async () => (await sleep(1500), import('./pages/about/index.js')));\n+const LazyAndLate = lazy(async () => (IS_CLIENT && (await sleep(1500)), import('./pages/about/index.js')));\nconst CompatPage = lazy(() => import('./pages/compat.js'));\n-const ClassFields = lazy(async () => (await sleep(1500), import('./pages/class-fields.js')));\n+const ClassFields = lazy(async () => (IS_CLIENT && (await sleep(1500)), import('./pages/class-fields.js')));\nconst Files = lazy(() => import('./pages/files/index.js'));\nconst Environment = lazy(async () => (await import('./pages/environment/index.js')).Environment);\nconst JSONView = lazy(async () => (await import('./pages/json.js')).JSONView);\n",
        "date": "10.05.2021 14:33:11",
        "repo": "preactjs/wmr",
        "type": "chore",
        "sim_msg": "refactor: group role routing",
        "sim_diff": "diff --git a/botfront/imports/ui/components/index.jsx b/botfront/imports/ui/components/index.jsx @@ -18,6 +18,9 @@ class Index extends React.Component {\n}\nroleRouting = (pId) => {\n+ if (can('projects:r')) {\n+ return '/admin/users';\n+ }\nif (can('users:r', { anyScope: true })) {\nreturn '/admin/users';\n}\n@@ -50,17 +53,13 @@ class Index extends React.Component {\nif (Meteor.userId()) {\nTracker.autorun(() => {\nif (Meteor.user() && areScopeReady() && projectsReady) {\n- if (can('global-admin', undefined, Meteor.userId())\n- || can('projects:r', undefined, Meteor.userId())\n- ) router.push('/admin/projects');\n- else {\n+ // if (can('global-admin', undefined, Meteor.userId())\n+ // || can('projects:r', undefined, Meteor.userId())\n+ // ) router.push('/admin/projects');\n+ // else {\nconst projects = getScopesForUser(Meteor.userId(), '');\n- if (projects.length === 0) {\n- router.push('/404');\n- } else {\nrouter.push(this.roleRouting(projects[0]));\n- }\n- }\n+ // }\n}\n});\n} else {\n"
    },
    {
        "msg": "chore: undo change to spawn code",
        "diff": "diff --git a/lib/monitor/run.js b/lib/monitor/run.js @@ -99,8 +99,6 @@ function run(options) {\nif (shouldFork) {\nvar forkArgs = cmd.args.slice(1);\nvar env = utils.merge(options.execOptions.env, process.env);\n- stdio.pop();\n- stdio.push(process.stderr);\nstdio.push('ipc');\nchild = fork(options.execOptions.script, forkArgs, {\nenv: env,\n",
        "date": "04.12.2019 16:09:33",
        "repo": "remy/nodemon",
        "type": "chore",
        "sim_msg": "test: exit non-zero for any failing test file",
        "sim_diff": "diff --git a/test/test.js b/test/test.js @@ -9,10 +9,12 @@ for (const filename of files) {\nif (filename.startsWith('test-')) {\nconst path = join(__dirname, filename);\nconsole.log(`> Running ${filename} ...`);\n- spawnSync(`${process.argv0} ${path}`, {\n+ const result = spawnSync(`${process.argv0} ${path}`, {\nshell: true,\nstdio: 'inherit',\nwindowsHide: true\n});\n+ if (result.status !== 0)\n+ process.exitCode = 1;\n}\n}\n"
    },
    {
        "msg": "chore(webpack): update config",
        "diff": "diff --git a/html/webpack.config.js b/html/webpack.config.js @@ -42,12 +42,9 @@ module.exports = {\n},\n{\ntest: /\\.(eot|png|svg|ttf|woff)/,\n- use: {\n- loader: 'url-loader',\n- options: {\n- limit: false,\n- name: 'assets/[name].[ext]'\n- }\n+ type: 'asset',\n+ generator: {\n+ filename: 'assets/[name][ext]'\n}\n}\n]\n",
        "date": "19.07.2021 18:09:57",
        "repo": "pypy-vrc/vrcx",
        "type": "chore",
        "sim_msg": "feat(Scripts): add images and svg loaders",
        "sim_diff": "diff --git a/packages/scripts/webapp/preset/config/webpack.config.js b/packages/scripts/webapp/preset/config/webpack.config.js @@ -119,6 +119,24 @@ module.exports = ({ getUserConfig, mode }) => {\nmimetype: 'application/font-woff',\n},\n},\n+ {\n+ test: /\\.svg$/,\n+ loader: 'url-loader',\n+ options: {\n+ name: 'assets/svg/[name].[ext]',\n+ limit: 10000,\n+ mimetype: 'image/svg+xml',\n+ },\n+ },\n+ {\n+ test: /\\.(png|jpg|jpeg|gif)$/,\n+ loader: 'url-loader',\n+ options: {\n+ name: 'assets/img/[name].[ext]',\n+ limit: 10000,\n+ mimetype: 'image/png',\n+ },\n+ },\n],\n},\nplugins: [\n"
    },
    {
        "msg": "chore(docs): update components list",
        "diff": "diff --git a/packages/kiwi-core/docs/components/components.js b/packages/kiwi-core/docs/components/components.js -// Dear maintainers, please arrange components alphabetically. Thanks :)\n+/**\n+ * NOTE:\n+ *\n+ * Dear maintainers,\n+ * Components listed in this file should be listed alphabetically. Thanks :)\n+ */\nconst components = [\n'Accordion',\n",
        "date": "02.03.2020 15:42:15",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "feat: add application to the index file",
        "sim_diff": "diff --git a/index.js b/index.js import Accordion from './Accordion';\nimport AccordionSection from './AccordionSection';\n+import Application from './Application';\nimport Avatar from './Avatar';\nimport AvatarMenu from './AvatarMenu';\nimport Badge from './Badge';\n@@ -49,6 +50,7 @@ import VerticalSectionOverflow from './VerticalSectionOverflow';\nexport {\nAccordion,\nAccordionSection,\n+ Application,\nAvatar,\nAvatarMenu,\nBadge,\n"
    },
    {
        "msg": "chore: add email to docs\nTo prove ownership my email must be added to the docs.",
        "diff": "diff --git a/docs/lib/app.js b/docs/lib/app.js @@ -87,6 +87,7 @@ export default (locals, callback) => {\ndebug: false // Set debug to true if you want to inspect the dropdown\n});\n</script>\n+ <!-- avangate: Evan@lostonia.com -->\n</body>\n</html>`;\ncallback(null, markup);\n",
        "date": "08.11.2018 19:12:26",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "sim_msg": "fix(landing): opening auth link in a new tab",
        "sim_diff": "diff --git a/pages/index.js b/pages/index.js @@ -896,7 +896,7 @@ export default function IndexPage() {\nreturn errors;\n},\nonSubmit: async ({ email }) => {\n- window.open(`/_/auth?tab=signup&email=${email}`);\n+ window.open(`/_/auth?tab=signup&email=${email}`, \"_self\");\n},\n});\n"
    },
    {
        "msg": "chore(divider): update divider a11y",
        "diff": "diff --git a/packages/chakra-ui-core/src/CDivider/CDivider.js b/packages/chakra-ui-core/src/CDivider/CDivider.js *\n* @see Docs https://vue.chakra-ui.com/divider\n* @see Source https://github.com/chakra-ui/chakra-ui-vue/blob/master/packages/chakra-ui-core/src/CDivider/CDivider.js\n+ * @see A11y https://github.com/chakra-ui/chakra-ui-vue/blob/master/packages/chakra-ui-core/src/CDivider/accessibility.md\n*/\nimport CBox from '../CBox'\n@@ -45,7 +46,8 @@ const CDivider = {\n...forwardProps(this.$props)\n},\nattrs: {\n- 'aria-orientation': this.orientation\n+ 'aria-orientation': this.orientation,\n+ 'data-chakra-component': 'CDivider'\n}\n})\n}\n",
        "date": "16.04.2020 23:43:19",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "refactor(cdr-tooltip): remove unused variable",
        "sim_diff": "diff --git a/src/components/tooltip/CdrTooltip.vue b/src/components/tooltip/CdrTooltip.vue <script>\n-import { useCssModule, defineComponent, defineEmits, useSlots, ref, onMounted, watch } from 'vue';\n+import { useCssModule, defineComponent, useSlots, ref, onMounted, watch } from 'vue';\nimport mapClasses from '../../utils/mapClasses.js';\nimport CdrPopup from '../popup/CdrPopup.vue';\nimport propValidator from '../../utils/propValidator.js';\n"
    },
    {
        "msg": "chore: add option to build fro production",
        "diff": "diff --git a/website/nuxt.config.js b/website/nuxt.config.js @@ -97,6 +97,7 @@ export default {\n},\nbabel: {\nplugins: [\n+ ['@babel/plugin-proposal-private-property-in-object', { loose: true }],\n'@babel/plugin-proposal-optional-chaining'\n]\n}\n",
        "date": "26.08.2021 03:46:03",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "refactor: disable useBuiltIns babel setting",
        "sim_diff": "diff --git a/babel.config.js b/babel.config.js @@ -10,7 +10,6 @@ module.exports = {\n[\n'@babel/preset-env',\n{\n- useBuiltIns: 'usage',\ninclude: ['proposal-object-rest-spread', 'transform-classes', 'transform-destructuring'],\n},\n],\n"
    },
    {
        "msg": "chore(pycandela): version 0.4.0",
        "diff": "diff --git a/python/pycandela/setup.py b/python/pycandela/setup.py @@ -2,7 +2,7 @@ from distutils.core import setup\nsetup(\nname='pycandela',\n- version='0.3.0',\n+ version='0.4.0',\ndescription='Jupyter interface for Candela visualization components',\nauthor='Kitware, Inc.',\nauthor_email='kitware@kitware.com',\n",
        "date": "16.05.2018 15:29:38",
        "repo": "kitware/candela",
        "type": "chore",
        "sim_msg": "feat: update to Downshift 6.0.0",
        "sim_diff": "diff --git a/packages/dropdown/package.json b/packages/dropdown/package.json \"@hig/icons\": \"^4.1.0\",\n\"@hig/input\": \"^2.1.0\",\n\"@hig/multi-downshift\": \"^2.1.0\",\n- \"downshift\": \"^3.2.0\",\n+ \"downshift\": \"^6.0.0\",\n\"emotion\": \"^10.0.0\",\n\"prop-types\": \"^15.7.1\"\n},\n"
    },
    {
        "msg": "chore: update changesets config",
        "diff": "diff --git a/.changeset/config.json b/.changeset/config.json \"access\": \"public\",\n\"baseBranch\": \"master\",\n\"ignore\": [],\n-\n- \"changelog\": \"@changesets/cli/changelog\"\n+ \"changelog\": [\"@changesets/changelog-github\", { \"repo\": \"jaredpalmer/razzle\" }]\n}\n\\ No newline at end of file\n",
        "date": "01.03.2022 19:04:14",
        "repo": "jaredpalmer/razzle",
        "type": "chore",
        "sim_msg": "chore: Ignore integration tests for changesets",
        "sim_diff": "diff --git a/.changeset/config.json b/.changeset/config.json \"access\": \"public\",\n\"baseBranch\": \"master\",\n\"updateInternalDependencies\": \"patch\",\n- \"ignore\": [],\n+ \"ignore\": [\"integration-tests-api\", \"integration-tests-plugins\"],\n\"snapshot\": {\n\"useCalculatedVersion\": true\n}\n"
    },
    {
        "msg": "chore(docs): change Modal transition time for better understanding\nincreased the transition timings for better understanding of difference between modalTransition and backdropTransition\nCloses",
        "diff": "diff --git a/docs/lib/examples/ModalCustomTimeout.js b/docs/lib/examples/ModalCustomTimeout.js @@ -23,7 +23,7 @@ class ModalExample extends React.Component {\nreturn (\n<div>\n<Button color=\"danger\" onClick={this.toggle}>{this.props.buttonLabel}</Button>\n- <Modal isOpen={this.state.modal} modalTransition={{ timeout: 20 }} backdropTransition={{ timeout: 10 }}\n+ <Modal isOpen={this.state.modal} modalTransition={{ timeout: 700 }} backdropTransition={{ timeout: 1300 }}\ntoggle={this.toggle} className={this.props.className}>\n<ModalHeader toggle={this.toggle}>Modal title</ModalHeader>\n<ModalBody>\n",
        "date": "29.05.2018 22:58:44",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "sim_msg": "chore(a11y): Fixed dismiss",
        "sim_diff": "diff --git a/src/components/common/modal.js b/src/components/common/modal.js @@ -3,7 +3,11 @@ import { DialogOverlay, DialogContent } from '@reach/dialog'\nimport modalStyles from './modal.module.scss'\nconst Modal = ({ children, isOpen, onClose }) => (\n- <DialogOverlay className={modalStyles.overlay} isOpen={isOpen}>\n+ <DialogOverlay\n+ className={modalStyles.overlay}\n+ isOpen={isOpen}\n+ onDismiss={onClose}\n+ >\n<DialogContent className={modalStyles.content}>\n<button\ntype=\"button\"\n"
    },
    {
        "msg": "chore: 86 - Add Docker build to Travis\ncloses - added docker build instructions to travis config.",
        "diff": "diff --git a/.travis.yml b/.travis.yml +sudo: required\n+\n+services:\n+ - docker\n+\nlanguage: node_js\nnode_js:\n- '8'\n@@ -14,3 +19,5 @@ script:\n- npm install --no-optional\n- npm run test\n- npm run build\n+- docker build -t crviz -f Dockerfile .\n+- docker build -t crviz-gh -f Dockerfile.gh .\n\\ No newline at end of file\n",
        "date": "26.06.2018 10:03:25",
        "repo": "iqtlabs/crviz",
        "type": "chore",
        "sim_msg": "ci: use default osx_image in .travis.yml",
        "sim_diff": "diff --git a/.travis.yml b/.travis.yml -sudo: required\n-dist: trusty\n-group: travis_latest\n-\n-services:\n- - docker\n-\nlanguage: node_js\nos:\n- linux\n- osx\n-osx_image: xcode8.3\n+#osx_image: xcode11.6\nnode_js:\n- \"10\"\n@@ -61,7 +54,7 @@ before_install:\n- npm install -g npm\n- npm --version\n-install: travis_wait 40 npm install\n+install: npm install\nbefore_script:\n- COMMIT_LOG=`git log -1 --format='%ci %H %s'`\n"
    },
    {
        "msg": "chore(test): fix browser config",
        "diff": "diff --git a/karma.conf.babel.js b/karma.conf.babel.js @@ -29,7 +29,7 @@ const formatError = (msg) => {\nexport default (karmaConfig) => {\nkarmaConfig.set({\nbasePath: process.cwd(),\n- browsers: ['ChromeHeadless'],\n+ browsers: ['puppeteer'],\nclient: {\nmocha: {\nreporter: 'html', // change Karma's debug.html to mocha web reporter\n@@ -47,6 +47,8 @@ export default (karmaConfig) => {\npuppeteer: {\nbase: 'ChromeHeadless',\nflags: [\n+ '--disable-setuid-sandbox',\n+ '--no-sandbox',\n// Avoid \"Maximum call stack size exceeded\" errors on CircleCI\n'--stack-trace-limit 50000',\n],\n",
        "date": "29.10.2017 16:57:17",
        "repo": "semantic-org/semantic-ui-react",
        "type": "chore",
        "sim_msg": "build: fix chrome headless on CI",
        "sim_diff": "diff --git a/test/unit/karma.cover.config.js b/test/unit/karma.cover.config.js @@ -4,7 +4,13 @@ process.env.CHROME_BIN = require('puppeteer').executablePath()\nmodule.exports = function (config) {\nconst options = Object.assign(base, {\n- browsers: ['ChromeHeadless'],\n+ browsers: ['ChromeHeadlessCI'],\n+ customLaunchers: {\n+ 'ChromeHeadlessCI': {\n+ base: 'ChromeHeadless',\n+ flags: ['--no-sandbox']\n+ }\n+ },\nreporters: ['mocha', 'coverage'],\ncoverageReporter: {\nreporters: [\n"
    },
    {
        "msg": "chore(switch): cleared jest cache and spy works now",
        "diff": "diff --git a/packages/kiwi-core/src/Switch/tests/switch.test.js b/packages/kiwi-core/src/Switch/tests/switch.test.js @@ -32,12 +32,11 @@ it('should switch', async () => {\n})\nit('should emit a change event', async () => {\n- const events = []\n- const eventsHandler = jest.fn(evt => events.push(evt.type))\n+ const spy = jest.fn()\nconst { getByTestId } = renderComponent(\n{\nmethods: {\n- handleChange: eventsHandler\n+ handleChange: spy\n},\ntemplate: `<Toggle data-testid=\"label\" @change=\"handleChange\" /> `\n}\n@@ -45,5 +44,6 @@ it('should emit a change event', async () => {\nconst label = getByTestId('label')\nuserEvent.click(label)\n- expect(events).toEqual(['change'])\n+\n+ expect(spy).toHaveBeenCalledTimes(1)\n})\n",
        "date": "01.03.2020 03:12:13",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "test(build): Fix testSchema tests.",
        "sim_diff": "diff --git a/packages/build/src/build/testSchema.test.js b/packages/build/src/build/testSchema.test.js @@ -31,15 +31,15 @@ beforeEach(() => {\ntest('empty components', async () => {\nconst components = {\n- version: '1.0.0',\n+ lowdefy: '1.0.0',\n};\nawait testSchema({ components, context });\n- expect().toBe();\n+ expect(mockLogWarn.mock.calls).toEqual([]);\n});\ntest('page auth config', async () => {\nconst components = {\n- version: '1.0.0',\n+ lowdefy: '1.0.0',\nconfig: {\nauth: {\npages: {\n@@ -50,12 +50,12 @@ test('page auth config', async () => {\n},\n};\nawait testSchema({ components, context });\n- expect().toBe();\n+ expect(mockLogWarn.mock.calls).toEqual([]);\n});\ntest('app schema', async () => {\nconst components = {\n- version: '1.0.0',\n+ lowdefy: '1.0.0',\nconnections: [\n{\nid: 'postman',\n@@ -86,7 +86,7 @@ test('app schema', async () => {\n],\n};\ntestSchema({ components, context });\n- expect().toBe();\n+ expect(mockLogWarn.mock.calls).toEqual([]);\n});\ntest('invalid schema', async () => {\n"
    },
    {
        "msg": "chore(package): remove changelog deploy scripts",
        "diff": "diff --git a/package.json b/package.json \"build:docs-toc\": \"doctoc ./.github/CONTRIBUTING.md --github --maxlevel 4\",\n\"build:docs-cname\": \"echo react.semantic-ui.com > docs/build/CNAME\",\n\"build:changelog\": \"github_changelog_generator --no-issues --no-unreleased --release-branch master --since-tag $(git describe --abbrev=0 --tags $(git rev-parse HEAD~400))\",\n- \"deploy:changelog\": \"git add CHANGELOG.md && git commit -m 'docs(changelog): update changelog [ci skip]' && git push\",\n\"predeploy:docs\": \"cross-env NODE_ENV=production yarn build:docs && yarn build:docs-cname\",\n\"deploy:docs\": \"gh-pages -d docs/build -m 'deploy docs [ci skip]'\",\n- \"postdeploy:docs\": \"yarn build:changelog && yarn deploy:changelog\",\n\"lint\": \"cross-env NODE_ENV=production eslint .\",\n\"lint:fix\": \"yarn lint --fix\",\n\"prerelease\": \"yarn lint && yarn tsd:lint && yarn tsd:test && yarn test && cross-env NODE_ENV=production yarn build\",\n",
        "date": "25.03.2018 10:21:17",
        "repo": "semantic-org/semantic-ui-react",
        "type": "chore",
        "sim_msg": "chore(deps): updates devdependencies",
        "sim_diff": "diff --git a/package.json b/package.json \"@semantic-release/release-notes-generator\": \"^7.3.0\",\n\"@types/node\": \"^12.7.4\",\n\"@types/qs\": \"^6.5.3\",\n- \"@typescript-eslint/parser\": \"2.3.3\",\n- \"@typescript-eslint/eslint-plugin\": \"2.3.3\",\n+ \"@typescript-eslint/eslint-plugin\": \"2.4.0\",\n+ \"@typescript-eslint/parser\": \"2.4.0\",\n\"commitizen\": \"^4.0.3\",\n\"commitlint-config-cz\": \"^0.12.1\",\n\"cz-conventional-changelog\": \"^3.0.2\",\n\"prettier\": \"^1.18.2\",\n\"rimraf\": \"^3.0.0\",\n\"semantic-release\": \"^15.13.24\",\n- \"tap\": \"^14.6.1\",\n+ \"tap\": \"^14.7.0\",\n\"tap-mocha-reporter\": \"^5.0.0\",\n\"ts-node\": \"^8.3.0\",\n\"typescript\": \"~3.6.2\"\n"
    },
    {
        "msg": "chore(release): 6.0.0",
        "diff": "diff --git a/package.json b/package.json {\n\"name\": \"@nuxtjs/firebase\",\n- \"version\": \"5.2.0\",\n+ \"version\": \"6.0.0\",\n\"description\": \"Intergrate Firebase into your Nuxt project.\",\n\"keywords\": [\n\"firebase\",\n",
        "date": "07.06.2020 21:08:34",
        "repo": "nuxt-community/firebase-module",
        "type": "chore",
        "sim_msg": "chore: package add lint-staged to package files",
        "sim_diff": "diff --git a/package.json b/package.json \"npm run format:js\",\n\"git add\"\n],\n+ \"packages/**/*.js\": [\n+ \"npm run fix:eslint\",\n+ \"npm run format:js\",\n+ \"git add\"\n+ ],\n\"packages/**/*.ts\": [\n\"npm run format:ts\",\n\"git add\"\n"
    },
    {
        "msg": "chore(search-input): Only show public methods",
        "diff": "diff --git a/app/components/search-input.js b/app/components/search-input.js @@ -51,7 +51,8 @@ export default Component.extend({\n'hierarchy.lvl1',\n'hierarchy.lvl2'\n],\n- tagFilters: [`version:${projectVersion}`]\n+ tagFilters: [`version:${projectVersion}`],\n+ facetFilters: ['access:public']\n};\nconst searchObj = {\n",
        "date": "27.01.2018 14:32:10",
        "repo": "ember-learn/ember-api-docs",
        "type": "chore",
        "sim_msg": "fix(Search): export default filter",
        "sim_diff": "diff --git a/components/Search/index.js b/components/Search/index.js @@ -19,7 +19,7 @@ const styles = {\n})\n}\n-const DEFAULT_FILTER = {key: 'template', value: 'front', not: true}\n+export const DEFAULT_FILTER = {key: 'template', value: 'front', not: true}\nclass Search extends Component {\nconstructor (props, ...args) {\n"
    },
    {
        "msg": "chore(issueTemplate): update demo link",
        "diff": "diff --git a/ISSUE_TEMPLATE.md b/ISSUE_TEMPLATE.md - components: `name`\n- reactstrap version `#x.x.x`\n-- import method `umd/csj/es` (if umd, are you using the \"full\" version (only for v5+)?)\n+- import method `umd/csj/es` <!-- (if umd, are you using the \"full\" version (only for v5+)?) -->\n- react version `#x.x.x`\n- bootstrap version `#x.x.x`\n@@ -29,9 +29,8 @@ paste error message with stacktrack here\n### Code\n<!--\n-Fork a link (for the corresponding version) and update it to demonstrate your issue.\n- - v4 (with react 15): issue http://codepen.io/eddywashere/pen/ZOjmkm\n- - v5 (with react 16): issue https://codepen.io/TheSharpieOne/pen/GMMPEZ\n+Fork the link and update it to demonstrate your issue.\n+https://stackblitz.com/edit/reactstrap?file=Example.js\nand/or add the code which causes the issue directly here\n-->\n",
        "date": "04.05.2018 12:07:08",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "sim_msg": "docs: fixed import paths of component context example",
        "sim_diff": "diff --git a/styleguide/src/sections/InstallingandImporting.md b/styleguide/src/sections/InstallingandImporting.md @@ -29,25 +29,25 @@ Check out the [@reactioncommerce/components-context](https://github.com/reaction\n```jsx static\nimport React from \"react\";\nimport styled from \"styled-components\";\n-import AddressForm from \"../../package/src/components/AddressForm/v1\";\n-import Button from \"../../package/src/components/Button/v1\";\n-import CartItem from \"../../package/src/components/CartItem/v1\";\n-import CartItemDetail from \"../../package/src/components/CartItemDetail/v1\";\n-import CartItems from \"../../package/src/components/CartItems/v1\";\n-import CartSummary from \"../../package/src/components/CartSummary/v1\";\n-import CheckoutAction from \"../../package/src/components/CheckoutAction/v1\";\n-import CheckoutActionComplete from \"../../package/src/components/CheckoutActionComplete/v1\";\n-import CheckoutActionIncomplete from \"../../package/src/components/CheckoutActionIncomplete/v1\";\n-import ErrorsBlock from \"../../package/src/components/ErrorsBlock/v1\";\n-import Field from \"../../package/src/components/Field/v1\";\n-import MiniCartSummary from \"../../package/src/components/MiniCartSummary/v1\";\n-import PhoneNumberInput from \"../../package/src/components/PhoneNumberInput/v1\";\n-import Price from \"../../package/src/components/Price/v1\";\n-import QuantityInput from \"../../package/src/components/QuantityInput/v1\";\n-import Select from \"../../package/src/components/Select/v1\";\n-import StockWarning from \"../../package/src/components/StockWarning/v1\";\n+import AddressForm from \"@reactioncommerce/components/AddressForm/v1\";\n+import Button from \"@reactioncommerce/components/Button/v1\";\n+import CartItem from \"@reactioncommerce/components/CartItem/v1\";\n+import CartItemDetail from \"@reactioncommerce/components/CartItemDetail/v1\";\n+import CartItems from \"@reactioncommerce/components/CartItems/v1\";\n+import CartSummary from \"@reactioncommerce/components/CartSummary/v1\";\n+import CheckoutAction from \"@reactioncommerce/components/CheckoutAction/v1\";\n+import CheckoutActionComplete from \"@reactioncommerce/components/CheckoutActionComplete/v1\";\n+import CheckoutActionIncomplete from \"@reactioncommerce/components/CheckoutActionIncomplete/v1\";\n+import ErrorsBlock from \"@reactioncommerce/components/ErrorsBlock/v1\";\n+import Field from \"@reactioncommerce/components/Field/v1\";\n+import MiniCartSummary from \"@reactioncommerce/components/MiniCartSummary/v1\";\n+import PhoneNumberInput from \"@reactioncommerce/components/PhoneNumberInput/v1\";\n+import Price from \"@reactioncommerce/components/Price/v1\";\n+import QuantityInput from \"@reactioncommerce/components/QuantityInput/v1\";\n+import Select from \"@reactioncommerce/components/Select/v1\";\n+import StockWarning from \"@reactioncommerce/components/StockWarning/v1\";\nimport spinner from \"../../package/src/utils/spinner\";\n-import TextInput from \"../../package/src/components/TextInput/v1\";\n+import TextInput from \"@reactioncommerce/components/TextInput/v1\";\n/* eslint-disable max-len */\n"
    },
    {
        "msg": "chore(xhr_wrapper): add comment\nchore(xhr_wrapper): add comment",
        "diff": "diff --git a/src/common/api/utils/xhr_wrapper.js b/src/common/api/utils/xhr_wrapper.js @@ -53,6 +53,7 @@ const requestWrapper = (\n*/\nasync function parseJSON (res: Response): Object {\nlet json: Object\n+ // status response field in return object\ntry {\njson = await res.json()\n} catch (e) {\n",
        "date": "06.09.2017 12:19:47",
        "repo": "metnew/suicrux",
        "type": "chore",
        "sim_msg": "chore: Clean return on build function",
        "sim_diff": "diff --git a/functions/api-build/api-build.js b/functions/api-build/api-build.js @@ -20,8 +20,9 @@ exports.handler = async (event, context) => {\n},\n},\n).then(response => {\n- return { statusCode: 200, body: 'Done' }\n+ return response.text()\n})\n+ return { statusCode: 200, body: 'Done' }\n} catch (err) {\nreturn { statusCode: 500, body: err.toString() }\n}\n"
    },
    {
        "msg": "chore: bump package version",
        "diff": "diff --git a/packages/chakra-ui-core/CHANGELOG.md b/packages/chakra-ui-core/CHANGELOG.md # Change Log\n+## 0.6.3\n+\n+### Patch Changes\n+\n+- fix: includes missing style props for border-radius and flex-grow style declarations\"\n+\n## 0.6.2\n### Patch Changes\n",
        "date": "15.09.2020 20:20:31",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "style(button icon): change to radii.circle on border-radius",
        "sim_diff": "diff --git a/packages/yoga/src/Button/native/Icon.jsx b/packages/yoga/src/Button/native/Icon.jsx @@ -24,7 +24,7 @@ const ButtonContainer = styled.View`\nalign-items: center;\njustify-content: center;\n- border-radius: ${large ? 24 : 12}px;\n+ border-radius: ${button.border.radius}px;\nbackground-color: ${\nbutton.types.contained.backgroundColor[state].default\n"
    },
    {
        "msg": "chore: update oliver\n[skip ci]",
        "diff": "diff --git a/.github/oliver.yml b/.github/oliver.yml # Number of days the issue was closed in before the bot should reply.\n# If the issue was closed in more days than this, the bot won't reply.\n# Use `daysClosedIn: false` to *always* reply.\n-daysClosedIn: false\n+daysClosedIn: 100\n# Labels to look for on issues the bot can reply to\nlabels:\n",
        "date": "01.02.2018 18:58:26",
        "repo": "remy/nodemon",
        "type": "chore",
        "sim_msg": "feat(stale): add hint to upvote issue",
        "sim_diff": "diff --git a/.github/stale.yml b/.github/stale.yml @@ -12,7 +12,7 @@ staleLabel: stale\nmarkComment: >\nThis issue has been automatically marked as stale because it has not had\nrecent activity. The core team will be inclined to provide an update soon.\n- If there is no activity after a few months, this issue will be closed.\n+ If this issue impacts you, feel free to subscribe and upvote the first comment.\nThank you for your contributions.\n# Comment to post when closing a stale issue. Set to `false` to disable\ncloseComment: false\n"
    },
    {
        "msg": "chore: Add CARD_TYPES constant for Type sorts",
        "diff": "diff --git a/src/utils/Sort.js b/src/utils/Sort.js @@ -55,6 +55,22 @@ const ALL_CMCS = Array.from(Array(33).keys())\n.map((x) => (x / 2).toString())\n.concat(['1000000']);\n+const CARD_TYPES = [\n+ 'Creature',\n+ 'Planeswalker',\n+ 'Instant',\n+ 'Sorcery',\n+ 'Artifact',\n+ 'Enchantment',\n+ 'Conspiracy',\n+ 'Contraption',\n+ 'Phenomenon',\n+ 'Plane',\n+ 'Scheme',\n+ 'Vanguard',\n+ 'Land',\n+];\n+\nconst SINGLE_COLOR = ['White', 'Blue', 'Black', 'Red', 'Green'];\nconst GUILDS = ['Azorius', 'Dimir', 'Rakdos', 'Gruul', 'Selesnya', 'Orzhov', 'Izzet', 'Golgari', 'Boros', 'Simic'];\nconst SHARDS_AND_WEDGES = ['Bant', 'Esper', 'Grixis', 'Jund', 'Naya', 'Mardu', 'Temur', 'Abzan', 'Jeskai', 'Sultai'];\n",
        "date": "09.03.2021 21:19:32",
        "repo": "dekkerglen/cubecobra",
        "type": "chore",
        "sim_msg": "test(schema): fix tests on node v4 and v5",
        "sim_diff": "diff --git a/test/schema.test.js b/test/schema.test.js @@ -2141,7 +2141,7 @@ describe('schema', function() {\nconst keys = Object.keys(SchemaStringOptions.prototype).\nfilter(key => key !== 'constructor');\nconst functions = Object.keys(Schema.Types.String.prototype).\n- filter(key => !['constructor', 'cast', 'castForQuery', 'checkRequired'].includes(key));\n+ filter(key => ['constructor', 'cast', 'castForQuery', 'checkRequired'].indexOf(key) === -1);\nassert.deepEqual(keys.sort(), functions.sort());\n});\n});\n"
    },
    {
        "msg": "chore: update circular progress jsdo",
        "diff": "diff --git a/packages/chakra-ui-core/src/CCircularProgress/CCircularProgress.js b/packages/chakra-ui-core/src/CCircularProgress/CCircularProgress.js +/**\n+ * Hey! Welcome to @chakra-ui/vue CircularProgress\n+ *\n+ * The Circular Progress component is used to indicates the progress for both determinate and indeterminate processes.\n+ *\n+ * @see Docs https://vue.chakra-ui.com/circularprogress\n+ * @see Source https://github.com/chakra-ui/chakra-ui-vue/blob/master/packages/chakra-ui-core/src/CCircularProgress/CCircularProgress.js\n+ * @see A11y https://github.com/chakra-ui/chakra-ui-vue/blob/master/packages/chakra-ui-core/src/CCircularProgress/accessibility.md\n+ */\n+\n+\nimport { baseProps } from '../config/props'\nimport { forwardProps } from '../utils'\nimport { getComputedProps } from './utils/circularprogress.styles'\nimport CBox from '../CBox'\n+/**\n+ * CCircularProgress component\n+ *\n+ * The test label that displays the progress percentage in the `CCircularProgress`\n+ *\n+ * @extends CBox\n+ * @see Docs https://vue.chakra-ui.com/circularprogress\n+ */\nconst CCircularProgressLabel = {\nname: 'CCircularProgressLabel',\nprops: baseProps,\n@@ -25,6 +44,14 @@ const CCircularProgressLabel = {\n}\n}\n+/**\n+ * CCircularProgressLabel component\n+ *\n+ * Indicates the progress for both determinate and indeterminate processes.\n+ *\n+ * @extends CBox\n+ * @see Docs https://vue.chakra-ui.com/circularprogress\n+ */\nconst CCircularProgress = {\nname: 'CCircularProgress',\ninject: ['$chakraColorMode'],\n",
        "date": "16.04.2020 21:53:12",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "test(components/molecule/progressSteps): add compressed and uncompressed tests",
        "sim_diff": "diff --git a/components/molecule/progressSteps/test/index.test.js b/components/molecule/progressSteps/test/index.test.js @@ -13,6 +13,7 @@ import chaiDOM from 'chai-dom'\nimport * as pkg from '../src'\nimport json from '../package.json'\n+import {MoleculeProgressStep} from '../src'\nchai.use(chaiDOM)\n@@ -93,6 +94,99 @@ describe(json.name, () => {\n// Then\nexpect(findClassName(container.innerHTML)).to.be.null\n})\n+\n+ it('should render all children contents', () => {\n+ // Given\n+ const childrenPropsArray = [\n+ {\n+ label: 'label1',\n+ content: 'content1',\n+ status: pkg.moleculeProgressStepsStatuses.VISITED\n+ },\n+ {\n+ label: 'label2',\n+ content: 'content2',\n+ status: pkg.moleculeProgressStepsStatuses.ACTIVE\n+ },\n+ {\n+ label: 'label3',\n+ content: 'content3',\n+ status: pkg.moleculeProgressStepsStatuses.NORMAL\n+ }\n+ ]\n+ const props = {\n+ iconStepDone: <svg />,\n+ children: childrenPropsArray.map(\n+ ({label, content, status, icon = <svg />}, index) => (\n+ <MoleculeProgressStep\n+ key={index}\n+ label={label}\n+ status={status}\n+ icon={icon}\n+ >\n+ {content}\n+ </MoleculeProgressStep>\n+ )\n+ )\n+ }\n+\n+ // When\n+ const {container, getByText} = setup(props)\n+\n+ // Then\n+ expect(container.innerHTML).to.be.a('string')\n+ expect(container.innerHTML).to.not.have.lengthOf(0)\n+ childrenPropsArray.forEach(child => {\n+ expect(getByText(child.content).innerHTML).to.equal(child.content)\n+ })\n+ })\n+\n+ it('should render all children contents in compressed mode', () => {\n+ // Given\n+ const childrenPropsArray = [\n+ {\n+ label: 'label1',\n+ content: 'content1',\n+ status: pkg.moleculeProgressStepsStatuses.VISITED\n+ },\n+ {\n+ label: 'label2',\n+ content: 'content2',\n+ status: pkg.moleculeProgressStepsStatuses.ACTIVE\n+ },\n+ {\n+ label: 'label3',\n+ content: 'content3',\n+ status: pkg.moleculeProgressStepsStatuses.NORMAL\n+ }\n+ ]\n+ const props = {\n+ iconStepDone: <svg />,\n+ compressed: true,\n+ children: childrenPropsArray.map(\n+ ({label, content, status, icon = <svg />}, index) => (\n+ <MoleculeProgressStep\n+ key={index}\n+ label={label}\n+ status={status}\n+ icon={icon}\n+ >\n+ {content}\n+ </MoleculeProgressStep>\n+ )\n+ )\n+ }\n+\n+ // When\n+ const {container, getByText} = setup(props)\n+\n+ // Then\n+ expect(container.innerHTML).to.be.a('string')\n+ expect(container.innerHTML).to.not.have.lengthOf(0)\n+ childrenPropsArray.forEach(child => {\n+ expect(getByText(child.content).innerHTML).to.equal(child.content)\n+ })\n+ })\n})\ndescribe('MoleculeProgressSteps.MoleculeProgressStep', () => {\n"
    },
    {
        "msg": "chore(docs): render spaces around \".clearfix\"",
        "diff": "diff --git a/docs/lib/Utilities/ClearfixPage.js b/docs/lib/Utilities/ClearfixPage.js @@ -12,7 +12,7 @@ export default function ClearfixPage() {\n<PageTitle title=\"Clearfix\" />\n<p>\nEasily clear <code className=\"highlighter-rouge\">float</code>s by adding\n- <code className=\"highlighter-rouge\">.clearfix</code>\n+ {' '}<code className=\"highlighter-rouge\">.clearfix</code>{' '}\n<strong>to the parent element</strong>.\nUtilizes <a href=\"http://nicolasgallagher.com/micro-clearfix-hack/\">\nthe micro clearfix</a> as popularized by Nicolas Gallagher.\n",
        "date": "04.10.2018 05:23:51",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "sim_msg": "fix: fix issue with highlight code scrolling causing console error\nRefs",
        "sim_diff": "diff --git a/src/core/components/highlight-code.jsx b/src/core/components/highlight-code.jsx @@ -39,6 +39,16 @@ export default class HighlightCode extends Component {\n}\n}\n+ componentDidMount() {\n+ [this.syntaxHighlighter, this.pre]\n+ .map(element => element?.addEventListener(\"mousewheel\", this.preventYScrollingBeyondElement, { passive: false }))\n+ }\n+\n+ componentWillUnmount() {\n+ [this.syntaxHighlighter, this.pre]\n+ .map(element => element?.removeEventListener(\"mousewheel\", this.preventYScrollingBeyondElement))\n+ }\n+\nrender () {\nlet { value, className, downloadable, getConfigs, canCopy, language } = this.props\n@@ -48,14 +58,14 @@ export default class HighlightCode extends Component {\nconst codeBlock = get(config, \"syntaxHighlight.activated\")\n? <SyntaxHighlighter\n+ ref={elem => this.syntaxHighlighter = elem}\nlanguage={language}\nclassName={className + \" microlight\"}\n- onWheel={this.preventYScrollingBeyondElement}\nstyle={getStyle(get(config, \"syntaxHighlight.theme\"))}\n>\n{value}\n</SyntaxHighlighter>\n- : <pre onWheel={this.preventYScrollingBeyondElement} className={className + \" microlight\"}>{value}</pre>\n+ : <pre ref={elem => this.pre = elem} className={className + \" microlight\"}>{value}</pre>\nreturn (\n<div className=\"highlight-code\">\n"
    },
    {
        "msg": "chore(PR): fix typos in the pull request template\nFix the typos in the pull request template",
        "diff": "diff --git a/PULL_REQUEST_TEMPLATE.md b/PULL_REQUEST_TEMPLATE.md <!---\nWhat types of changes does your code introduce? Put an `x` in all the boxes that apply:\n-->\n+\n- [ ] Bug fix <!-- (change which fixes an issue) -->\n- [ ] New feature <!-- (change which adds functionality) -->\n-- [ ] Chore <!-- (change which doesn't affect the usage of the package (such as a documentation, build process, or project setup change)) -->\n+- [ ] Chore <!-- (change which doesn't affect the usage of the package (such as documentation, build process, or project setup changes)) -->\n- [ ] Breaking change <!-- (fix or feature that would cause existing functionality to change) -->\n- [ ] There is an open issue which this change addresses\n- [ ] I have read the **[CONTRIBUTING](./CONTRIBUTING.md)** document.\n@@ -16,8 +17,7 @@ What types of changes does your code introduce? Put an `x` in all the boxes that\n<!-- Put any other information you believe would be useful to know when reviewing this PR below -->\n-\n<!---\nIf there is an issue this PR addresses, please make sure it is in the commit message per the Git Commit Guidelines above\n-**AND** put the issue number below, indicating that is closes or fixes the issue.\n+**AND** put the issue number below, indicating that it closes or fixes the issue.\n-->\n",
        "date": "31.10.2020 20:37:00",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "sim_msg": "chore(github): tidy comments in `PULL_REQUEST_TEMPLATE.md`",
        "sim_diff": "diff --git a/.github/PULL_REQUEST_TEMPLATE.md b/.github/PULL_REQUEST_TEMPLATE.md -<!-- Filling out the information below can facilitate the review/merge of the PR. -->\n+<!--\n+Filling out the information below can facilitate the review/merge of the pull request (PR).\n+-->\n## What is the motivation for this pull request?\n-<!-- Is this a feature, bug fix, docs, etc.? -->\n+<!-- Is this a feature, bug fix, documentation, etc.? -->\n## What is the current behavior?\n<!--\nFeel free to remove any item that is irrelevant to your changes.\n-To check an item, place an \"x\" in the box like so:\n-- [x] Tests\n+To check an item, place an \"x\" in the box like so: `- [x] Tests`\n-->\n- [ ] Tests\n- [ ] Documentation\n<!--\n-Do you have any additional comments?\n-Thanks for contributing!\n+Any other comments? Thank you for contributing!\n-->\n"
    },
    {
        "msg": "chore: :wrench: update fs allow",
        "diff": "diff --git a/svelte.config.js b/svelte.config.js @@ -16,6 +16,16 @@ const config = {\n// hydrate the <div id=\"svelte\"> element in src/app.html\ntarget: '#svelte',\nadapter: adapter(),\n+ vite: {\n+ // https://vitejs.dev/config/#server-fs-allow\n+ server: {\n+ fs: {\n+ // Allow serving files from one level up to the project root\n+ // posts, copy\n+ allow: ['..'],\n+ },\n+ },\n+ },\n},\n}\n",
        "date": "26.11.2021 18:11:16",
        "repo": "spences10/cheat-sheets",
        "type": "chore",
        "sim_msg": "build(vue): update template entry file (app/test.html)",
        "sim_diff": "diff --git a/vue.config.js b/vue.config.js @@ -21,7 +21,7 @@ if (process.argv.indexOf('--target') === process.argv.indexOf('lib') - 1) {\nconfig\n.plugin('html')\n.tap(args => {\n- args[0].template = path.join(templatePath, 'app/index.html')\n+ args[0].template = path.join(templatePath, 'app/test.html')\nreturn args\n})\n}\n"
    },
    {
        "msg": "chore(docs): Remove reference to `onExit` for CollapsePage\nShould have been written as `onExited` as `onExit` is not an event.",
        "diff": "diff --git a/docs/lib/Components/CollapsePage.js b/docs/lib/Components/CollapsePage.js @@ -44,7 +44,7 @@ export default class CollapsePage extends React.Component {\n<SectionTitle>Events</SectionTitle>\n<p>\n- Use the <code>onEnter</code>, onEntering, onEntered, onExit, onExiting and onExited props for callbacks when the\n+ Use the <code>onEnter</code>, onEntering, onEntered, onExiting and onExited props for callbacks when the\nCollapse has finished opening (entering) or closing (exiting).\n</p>\n<div className=\"docs-example\">\n",
        "date": "23.04.2018 17:03:19",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "sim_msg": "refactor(collapsible-panel): update to restore functionality with new bootstrap version",
        "sim_diff": "diff --git a/lib/manager/components/CollapsiblePanel.js b/lib/manager/components/CollapsiblePanel.js @@ -82,7 +82,7 @@ export default class CollapsiblePanel extends Component<Props> {\ndefaultExpanded={defaultExpanded}\nonEnter={this._onEnter}\n>\n- <Panel.Heading><h5 style={{width: '100%', cursor: 'pointer'}}>{title}</h5></Panel.Heading>\n+ <Panel.Heading><Panel.Title toggle style={{width: '100%', cursor: 'pointer'}}>{title}</Panel.Title></Panel.Heading>\n<Panel.Collapse>\n<Panel.Body>\n<Form>\n"
    },
    {
        "msg": "chore: package: v27.10.0",
        "diff": "diff --git a/packages/putout/ChangeLog b/packages/putout/ChangeLog +2022.09.20, v27.10.0\n+\n+feature:\n+- putout: *.md: typescript/remove-unused-types: off\n+\n2022.09.20, v27.9.0\nfeature:\n",
        "date": "20.09.2022 16:36:35",
        "repo": "coderaiser/putout",
        "type": "chore",
        "sim_msg": "feat: Release 3.7.4",
        "sim_diff": "diff --git a/CHANGELOG.md b/CHANGELOG.md All notable changes to this project will be documented in this file. See [standard-version](https://github.com/conventional-changelog/standard-version) for commit guidelines.\n+## [3.7.4](https://github.com/serverless/components/compare/v3.7.3...v3.7.4) (2021-03-16)\n+\n+- sls registry info improve with translation\n+- sls component search support keyword search\n+\n## [3.7.3](https://github.com/serverless/components/compare/v3.7.2...v3.7.3) (2021-03-10)\n- Improve non-nodejs debug experience (avoid close before start dev)\n"
    },
    {
        "msg": "chore: -> __c -> __f",
        "diff": "diff --git a/packages/plugin-remove-iife/lib/remove-iife.js b/packages/plugin-remove-iife/lib/remove-iife.js @@ -25,7 +25,7 @@ module.exports.filter = (path) => {\n};\nmodule.exports.replace = () => ({\n- '((__args__a) => __c(__args__a))(__args__b)': '__c(__args__b)',\n+ '((__args__a) => __f(__args__a))(__args__b)': '__f(__args__b)',\n'(() => __body)()': '__body',\n'(function() {})()': (vars, path) => {\nconst {body} = path.node.callee.body;\n",
        "date": "14.09.2022 17:04:09",
        "repo": "coderaiser/putout",
        "type": "chore",
        "sim_msg": "chore: dont use .find() for ES5 compat",
        "sim_diff": "diff --git a/lib/schema.js b/lib/schema.js @@ -1115,10 +1115,13 @@ Schema.prototype.plugin = function(fn, opts) {\n}\nif (opts &&\n- opts.deduplicate &&\n- this.plugins.find(function(p) { return p.fn === fn; })) {\n+ opts.deduplicate) {\n+ for (var i = 0; i < this.plugins.length; ++i) {\n+ if (this.plugins[i].fn === fn) {\nreturn this;\n}\n+ }\n+ }\nthis.plugins.push({ fn: fn, opts: opts });\nfn(this, opts);\n"
    },
    {
        "msg": "chore(actions/utils): update comment on Awral\nchore(actions/utils): update comment on Awral",
        "diff": "diff --git a/src/common/actions/utils/index.js b/src/common/actions/utils/index.js @@ -14,8 +14,10 @@ const beforeCheck = a => a\nconst afterCheck = a => a.data\n/**\nCreate default Awral\n- Awral is my own tool.\n- It's not well known, but it can make your work with actions even more simpler.\n+ Awral is not recommended for production usage now\n+ But it can make your work with actions even simpler.\n+ NOTE:I strongly recommend you check Awral sources!\n+ Awral is 880B gzipped!\n{@link https://github.com/Metnew/awral}\n*/\nexport const awral = Awral.of({check, beforeCheck, afterCheck})\n",
        "date": "16.10.2017 18:26:41",
        "repo": "metnew/suicrux",
        "type": "chore",
        "sim_msg": "fix: disable apple pay",
        "sim_diff": "diff --git a/src/store/modules/app/actions.js b/src/store/modules/app/actions.js @@ -94,7 +94,7 @@ export const actions = {\nopenTransakWidgetTab: ({ dispatch }, { chain, asset, address }) => {\nconst widgetUrl = process.env.VUE_APP_TRANSAK_WIDGET_URL\nconst apiKey = process.env.VUE_APP_TRANSAK_API_KEY\n- let url = `${widgetUrl}?apiKey=${apiKey}`\n+ let url = `${widgetUrl}?apiKey=${apiKey}&disablePaymentMethods=apple_pay`\nif (asset) {\nurl = `${url}&cryptoCurrencyCode=${asset}`\n}\n"
    },
    {
        "msg": "chore: bump `sirv` version",
        "diff": "diff --git a/package.json b/package.json \"rollup-plugin-preserve-shebang\": \"^1.0.0\",\n\"sade\": \"^1.7.3\",\n\"semver\": \"^7.3.2\",\n- \"sirv\": \"^0.4.6\",\n+ \"sirv\": \"^1.0.0\",\n\"tar-stream\": \"^2.1.2\",\n\"terser\": \"^4.7.0\",\n\"tiny-glob\": \"^0.2.6\",\n",
        "date": "10.06.2020 16:54:35",
        "repo": "preactjs/wmr",
        "type": "chore",
        "sim_msg": "chore(dependencies): revert rollup-umd-scripts to latest public version",
        "sim_diff": "diff --git a/package.json b/package.json \"rollup-plugin-replace\": \"^2.1.0\",\n\"rollup-plugin-terser\": \"^4.0.1\",\n\"rollup-plugin-visualizer\": \"^0.9.2\",\n- \"rollup-umd-scripts\": \"^0.14.2\",\n+ \"rollup-umd-scripts\": \"^0.13.0\",\n\"rollup-watch\": \"^4.3.1\",\n\"semantic-release\": \"^15.13.2\",\n\"sinon\": \"^7.2.2\",\n"
    },
    {
        "msg": "chore: point installs to yarn registry",
        "diff": "diff --git a/yarn.lock b/yarn.lock \"@fortawesome/fontawesome-common-types@^0.2.28\":\nversion \"0.2.28\"\n- resolved \"https://npm.fontawesome.com/@fortawesome/fontawesome-common-types/-/0.2.28/fontawesome-common-types-0.2.28.tgz#1091bdfe63b3f139441e9cba27aa022bff97d8b2\"\n+ resolved \"https://registry.yarnpkg.com/@fortawesome/fontawesome-common-types/-/0.2.28/fontawesome-common-types-0.2.28.tgz#1091bdfe63b3f139441e9cba27aa022bff97d8b2\"\nintegrity sha512-gtis2/5yLdfI6n0ia0jH7NJs5i/Z/8M/ZbQL6jXQhCthEOe5Cr5NcQPhgTvFxNOtURE03/ZqUcEskdn2M+QaBg==\n\"@fortawesome/free-brands-svg-icons@^5.12.0\":\nversion \"5.13.0\"\n- resolved \"https://npm.fontawesome.com/@fortawesome/free-brands-svg-icons/-/5.13.0/free-brands-svg-icons-5.13.0.tgz#e79de73ba6555055204828dca9c0691e7ce5242b\"\n+ resolved \"https://registry.yarnpkg.com/@fortawesome/free-brands-svg-icons/-/5.13.0/free-brands-svg-icons-5.13.0.tgz#e79de73ba6555055204828dca9c0691e7ce5242b\"\nintegrity sha512-/6xXiJFCMEQxqxXbL0FPJpwq5Cv6MRrjsbJEmH/t5vOvB4dILDpnY0f7zZSlA8+TG7jwlt12miF/yZpZkykucA==\ndependencies:\n\"@fortawesome/fontawesome-common-types\" \"^0.2.28\"\n\"@fortawesome/free-solid-svg-icons@^5.11.2\":\nversion \"5.13.0\"\n- resolved \"https://npm.fontawesome.com/@fortawesome/free-solid-svg-icons/-/5.13.0/free-solid-svg-icons-5.13.0.tgz#44d9118668ad96b4fd5c9434a43efc5903525739\"\n+ resolved \"https://registry.yarnpkg.com/@fortawesome/free-solid-svg-icons/-/5.13.0/free-solid-svg-icons-5.13.0.tgz#44d9118668ad96b4fd5c9434a43efc5903525739\"\nintegrity sha512-IHUgDJdomv6YtG4p3zl1B5wWf9ffinHIvebqQOmV3U+3SLw4fC+LUCCgwfETkbTtjy5/Qws2VoVf6z/ETQpFpg==\ndependencies:\n\"@fortawesome/fontawesome-common-types\" \"^0.2.28\"\n",
        "date": "22.12.2020 17:59:43",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "feat(client): add icon in setting page button",
        "sim_diff": "diff --git a/client/src/components/solution-display-widget/index.tsx b/client/src/components/solution-display-widget/index.tsx +import { faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons';\n+import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\nButton,\nDropdownButton,\n@@ -71,7 +73,7 @@ export function SolutionDisplayWidget({\nid={`btn-for-${id}`}\nonClick={showUserCode}\n>\n- {viewText}\n+ {viewText} <FontAwesomeIcon icon={faExternalLinkAlt} />\n</Button>\n);\nconst ShowMultifileProjectSolution = (\n@@ -131,7 +133,7 @@ export function SolutionDisplayWidget({\nrel='noopener noreferrer'\ntarget='_blank'\n>\n- {viewText}\n+ {viewText} <FontAwesomeIcon icon={faExternalLinkAlt} />\n</Button>\n);\nconst MissingSolutionComponent =\n"
    },
    {
        "msg": "chore(testing): example of testing with supplied args",
        "diff": "diff --git a/src/features/dataset-controls/DatasetSelector.test.js b/src/features/dataset-controls/DatasetSelector.test.js @@ -17,7 +17,7 @@ const empty = {name: \"None\", url:\" \"};\nconst change = (target) => {\n}\n-const event = {\"target\": {\"name\": \"ds3\", \"url\":\"test3.url\"}};\n+const event = {\"target\": {value:\"test3.url\"}};\ndescribe('DatasetSelector', () => {\nit('renders the control', () => {\nconst selector = mount(<DatasetSelector\n@@ -31,15 +31,18 @@ describe('DatasetSelector', () => {\n});\nit('changes the selection', () => {\n- const onChange = sinon.stub()\n+ const fakeOnChange = (evt) =>{\n+\n+ }\n+ const onChangeSpy = sinon.spy(fakeOnChange);\nconst selector = mount(<DatasetSelector\nclassName={style.selector}\nselected={empty}\n- onChange={onChange}\n+ onChange={onChangeSpy}\ndatasets={datasets}\n/>);\n- selector.find('select').first().simulate(\"change\", event);\n- expect(onChange.calledOnce).to.equal(true);\n+ selector.find('select').first().simulate('change', event);\n+ expect(onChangeSpy.calledWith(datasets[2])).to.equal(true);\n});\n});\n\\ No newline at end of file\n",
        "date": "10.07.2018 15:44:43",
        "repo": "iqtlabs/crviz",
        "type": "chore",
        "sim_msg": "docs(META): add remove draft feature to PTA playground",
        "sim_diff": "diff --git a/demo/form/pta/playground b/demo/form/pta/playground @@ -2,8 +2,37 @@ const formUrl = 'https://webformbuilderpre.scmspain.com/cochesnet.html'\nconst redirectOnErrorUrl = 'http://pre.coches.net'\nconst redirectOnSuccessUrl = 'http://pre.coches.net'\n-return (<FormPta\n+\n+class MyFormPta extends React.Component {\n+ constructor(props) {\n+ super(props)\n+\n+ this.ptaRef = null\n+ this.setPtaRef = element => this.ptaRef = element\n+ this.handleRemoveDraft = this.handleRemoveDraft.bind(this)\n+ }\n+\n+ handleRemoveDraft (event) {\n+ event.preventDefault()\n+ this.ptaRef.removeDraft()\n+ }\n+\n+ render () {\n+ return (\n+ <div>\n+ <button onClick={this.handleRemoveDraft.bind(this)}>Remove draft</button>\n+\n+ <FormPta\n+ ref={this.setPtaRef}\nformUrl={formUrl}\n+ enableDraft\n+ draftId=\"suicomponentsTestDraftId\"\nredirectOnErrorUrl={redirectOnErrorUrl}\nredirectOnSuccessUrl={redirectOnSuccessUrl}\n-/>)\n+ />\n+ </div>\n+ )\n+ }\n+}\n+\n+return (<MyFormPta />)\n\\ No newline at end of file\n"
    },
    {
        "msg": "chore(actions/utils): add comment about Awral\nchore(actions/utils): add comment about Awral",
        "diff": "diff --git a/src/common/actions/utils/index.js b/src/common/actions/utils/index.js @@ -12,5 +12,10 @@ import Awral from 'awral'\nconst check = (result: Object = {ok: false}): boolean => result.ok\nconst beforeCheck = a => a\nconst afterCheck = a => a.data\n-// Create default Awral\n+/**\n+ Create default Awral\n+ Awral is my own tool.\n+ It's not well known, but it can make your work with actions even more simpler.\n+ {@link https://github.com/Metnew/awral}\n+*/\nexport const awral = Awral.of({check, beforeCheck, afterCheck})\n",
        "date": "13.10.2017 16:52:31",
        "repo": "metnew/suicrux",
        "type": "chore",
        "sim_msg": "docs: add react template Varsarr",
        "sim_diff": "diff --git a/README.md b/README.md @@ -165,6 +165,7 @@ Use the \"Table of Contents\" menu on the top-left corner to explore the list.\n- [VRTTV](https://github.com/Drumpy/vrttv-boilerplate) - React + TypeScript + TailwindCSS + ESLint + Prettier + Husky + Conventional Commits + Gitmoji + GitHub Actions + Vercel Deploy.\n- [React Starter Kit](https://github.com/kriasoft/react-starter-kit) - Jamstack, React, React Router, Material UI, Firebase Auth, TypeScript, ESLint, Prettier, Jest, GitHub Actions.\n- [vite-mern-template](https://github.com/apicgg/vite-mern-template) - React 18 + TypeScript + Vite + Redux Toolkit + ESLint + React Router DOM + Axios + React Icons + React Toastify + Express + Mongoose.\n+- [Varsarr](https://github.com/altmshfkgudtjr/varsarr) - React, Typescript, Styled-Components, Recoil, React-Query, Axios, Absolute imports.\n#### Svelte\n"
    },
    {
        "msg": "chore: fix typo in image mark docs",
        "diff": "diff --git a/docs/docs/marks/image.md b/docs/docs/marks/image.md @@ -17,7 +17,7 @@ permalink: /docs/marks/image/index.html\n| url | {% include type t=\"URL\" %} | The URL of the image file. |\n| image | [Canvas](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas) \\| [Image](https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement/Image) | The image instance to show. This property can be used to include dynamically generated images. This property is ignored if _url_ is specified. {% include tag ver=\"5.8\" %} |\n| aspect | {% include type t=\"Boolean\" %} | A boolean flag (default `true`) indicating if the image aspect ratio should be preserved across sizes. If `true` and only one of the dimensional (*width* or *height*) properties are defined, the other dimensional property will be calculated to match the aspect ratio of the loaded image file. |\n-| smooth | {% include type t=\"Boolean\" %} | A boolean flag (default `true`) indicating if the image should be smoothed when resized. If `false`, indvidual pixels should be scaled directly rather than interpolated with smoothing. For SVG rendering, this option may not work in some browsers due to lack of standardization. {% include tag ver=\"5.8\" %} |\n+| smooth | {% include type t=\"Boolean\" %} | A boolean flag (default `true`) indicating if the image should be smoothed when resized. If `false`, individual pixels should be scaled directly rather than interpolated with smoothing. For SVG rendering, this option may not work in some browsers due to lack of standardization. {% include tag ver=\"5.8\" %} |\n| align | {% include type t=\"String\" %} | The horizontal alignment of the image. One of `left`, `center`, or `right`. The default value is `left`. |\n| baseline | {% include type t=\"String\" %} | The vertical alignment of the image. One of `top`, `middle`, or `bottom`. The default value is `top`. |\n",
        "date": "13.09.2020 15:30:54",
        "repo": "vega/vega",
        "type": "chore",
        "sim_msg": "test: add some image creation and clone tests",
        "sim_diff": "diff --git a/src/image/__tests__/load.js b/src/image/__tests__/load.js @@ -2,15 +2,15 @@ import {Image, load} from 'test/common';\nimport Canvas from 'canvas';\nimport 'should';\n-describe('Image core', function () {\n- it('constructor defaults', function () {\n+describe('Image core', () => {\n+ it('constructor defaults', () => {\nlet img = new Image();\nimg.width.should.equal(1);\nimg.height.should.equal(1);\nimg.data.length.should.equal(4);\n});\n- it('invalid constructor use', function () {\n+ it('invalid constructor use', () => {\n(function () {\nnew Image(0, 0);\n}).should.throw(/width must be greater than 0/);\n@@ -22,7 +22,26 @@ describe('Image core', function () {\n}).should.throw(/invalid image kind: BLABLA/);\n});\n- it('create from Canvas', function () {\n+ it('construct with a kind', () => {\n+ const img = new Image(1, 1, {kind: 'RGB'});\n+ expect(img.data.length).toBe(3);\n+ });\n+\n+ it('construct a 32bit image', () => {\n+ const img = new Image(1, 1, {bitDepth: 32});\n+ expect(img.bitDepth).toBe(32);\n+ expect(img.data).toBeInstanceOf(Float32Array);\n+ expect(img.maxValue).toBe(Number.MAX_VALUE);\n+ });\n+\n+ it('wrong array passed to setData', () => {\n+ const img = new Image(1, 1);\n+ expect(() => {\n+ img.setData([1])\n+ }).toThrow('incorrect data size. Should be 4 and found 1');\n+ });\n+\n+ it('create from Canvas', () => {\nlet canvas = new Canvas(2, 2);\nlet ctx = canvas.getContext('2d');\nctx.fillStyle = 'red';\n@@ -51,13 +70,22 @@ describe('Image core', function () {\n});\n});\n- it('should clone', function () {\n- return load('format/rgba32.png').then(function (img) {\n- let clone = img.clone();\n+ it('should clone', async () => {\n+ const img = await load('format/rgba32.png');\n+ const clone = img.clone();\nclone.should.be.an.instanceOf(Image);\nclone.should.not.be.equal(img);\n+ clone.data.should.not.equal(img.data);\nclone.toDataURL().should.equal(img.toDataURL());\n});\n+\n+ it('should clone and keep same data', async () => {\n+ const img = await load('format/rgba32.png');\n+ const clone = img.clone({copyData: false});\n+ clone.should.be.an.instanceOf(Image);\n+ clone.should.not.be.equal(img);\n+ clone.data.should.equal(img.data);\n+ clone.toDataURL().should.equal(img.toDataURL());\n});\nit('isImage', function () {\n"
    },
    {
        "msg": "chore: publish command",
        "diff": "diff --git a/package.json b/package.json \"test:core\": \"jest\",\n\"test:module\": \"yarn workspace @chakra-ui/nuxt test\",\n\"test\": \"yarn test:core && yarn test:module\",\n- \"release\": \"changeset publish\",\n+ \"release\": \"yarn changeset publish\",\n\"clean\": \"lerna run clean\",\n\"storybook\": \"cross-env STORYBOOK_VUE_DEV_TOOLS=1 start-storybook -p 9000\",\n\"storybook:devtools\": \"vue-devtools\",\n",
        "date": "31.12.2020 15:35:20",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "chore: try to fix release process (ref",
        "sim_diff": "diff --git a/package.json b/package.json \"scripts\": {\n\"build\": \"lerna run build\",\n\"test\": \"lerna run test\",\n- \"postversion\": \"yarn build\",\n- \"release\": \"yarn test && lerna publish\",\n+ \"postversion\": \"lerna run build\",\n+ \"release\": \"lerna run test && lerna publish\",\n\"start\": \"lerna exec --scope=simplebar yarn start\",\n\"dev\": \"lerna exec --scope=simplebar yarn dev\"\n},\n"
    },
    {
        "msg": "chore: update link",
        "diff": "diff --git a/README.md b/README.md @@ -145,7 +145,7 @@ export default {\nYou can also view all developed components in **[Storybook](https://chakra-ui-vue.netlify.com)!**\n### Development for Contributing:\n-Interested in contributing? See our [open issues](/issues)! Remember to take a look at our [CONTRIBUTORS](../../.github/CONTRIBUTING.md) guide.\n+Interested in contributing? See our [open issues](https://github.com/chakra-ui/chakra-ui-vue/issues)! Remember to take a look at our [CONTRIBUTORS](../../.github/CONTRIBUTING.md) guide.\n```bash\nyarn install\n",
        "date": "17.03.2020 12:44:04",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "docs: give documentation a higher priority",
        "sim_diff": "diff --git a/README.md b/README.md yarn add vuepress -D\n```\n+## Documentation\n+\n+Check out our docs at https://vuepress.vuejs.org/.\n+\n## Showcase\n- [Awesome VuePress](https://github.com/ulivz/awesome-vuepress)\n- [vuepress.gallery](https://vuepress.gallery) (by [@vicbergquist](https://twitter.com/vicbergquist))\n- [vuepress.tools](https://vuepress.tools/) (By [Ahmad Mostafa](https://ahmadmostafa.com))\n-## Documentation\n-\n-Check out our docs at https://vuepress.vuejs.org/.\n-\n## Contribution\nWant to contribute? Check our [issues for beginners](https://github.com/vuejs/vuepress/issues?q=is%3Aopen+is%3Aissue+label%3A%22good+first+issue%22)!\n"
    },
    {
        "msg": "chore: add supporters",
        "diff": "diff --git a/website/index.html b/website/index.html href='https://inkedin.com/free-spins-no-deposit/'><img src='https://logo.clearbit.com/inkedin.com'\nstyle='object-fit: contain; float: left; margin:12px' height='120' width='120'></a><a\nhref='https://www.newcasinosaustralia.com/'><img src='https://logo.clearbit.com/newcasinosaustralia.com'\n+ style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a><a\n+ href='https://casinostranieri.net/'><img\n+ src='https://opencollective-production.s3.us-west-1.amazonaws.com/7aae8900-0c02-11ed-9aa8-2bd811fd6f10.png'\n+ style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a><a\n+ href='https://goread.io/buy-instagram-followers'><img\n+ src='https://opencollective-production.s3.us-west-1.amazonaws.com/7d1302a0-0f33-11ed-a094-3dca78aec7cd.png'\nstyle='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>\n</div>\n</div>\n",
        "date": "29.07.2022 13:12:15",
        "repo": "remy/nodemon",
        "type": "chore",
        "sim_msg": "fix: sample index",
        "sim_diff": "diff --git a/sample/index.html b/sample/index.html </ul>\n<p><br></p>\n</textarea>\n- </>\n+ </div>\n<div id=\"inline\" class=\"tabcontent\">\n<div class=\"inline-margin\"></div>\n<div class=\"se-component se-image-container __se__float-right\" contenteditable=\"false\"><figure style=\"margin: auto;\"><img src=\"http://suneditor.com/docs/cat2.jpg\" data-align=\"right\" alt=\"Sunset image\" data-rotate=\"\" data-proportion=\"false\" data-rotatex=\"\" data-rotatey=\"\" origin-size=\"640,959\" data-origin=\"640,959\" style=\"width: 640px; max-width: 100%;\"><figcaption contenteditable=\"true\" style=\"margin-top: 0px;\"><p>Insert description</p></figcaption></figure></div>\n<p><br></p>\n</textarea>\n- </Supports>\n+ </div>\n- < id=\"balloon\" class=\"tabcontent\">\n+ <div id=\"balloon\" class=\"tabcontent\">\n<div class=\"inline-margin\"></div>\n<textarea id=\"editor_balloon\" style=\"display:none;\">\n<p><br></p>\n"
    },
    {
        "msg": "chore(package): remove -- arg separator",
        "diff": "diff --git a/package.json b/package.json \"deploy:docs\": \"gh-pages -d docs/build -m 'deploy docs [ci skip]'\",\n\"postdeploy:docs\": \"yarn build:changelog && yarn deploy:changelog\",\n\"lint\": \"cross-env NODE_ENV=production eslint .\",\n- \"lint:fix\": \"yarn lint -- --fix\",\n+ \"lint:fix\": \"yarn lint --fix\",\n\"prerelease\": \"yarn lint && yarn tsd:lint && yarn tsd:test && yarn test && cross-env NODE_ENV=production yarn build\",\n\"postrelease\": \"yarn deploy:docs\",\n\"release:major\": \"yarn prerelease && ta-script npm/release major && yarn postrelease\",\n\"release:minor\": \"yarn prerelease && ta-script npm/release minor && yarn postrelease\",\n\"release:patch\": \"yarn prerelease && ta-script npm/release patch && yarn postrelease\",\n- \"prestart\": \"yarn satisfied -- --fix yarn\",\n+ \"prestart\": \"yarn satisfied --fix yarn\",\n\"start\": \"yarn docs\",\n\"satisfied\": \"satisfied --skip-invalid\",\n\"pretest\": \"yarn satisfied && yarn build:dll\",\n\"test\": \"cross-env NODE_ENV=test node -r babel-register ./node_modules/karma/bin/karma start karma.conf.babel.js\",\n- \"test:watch\": \"yarn test -- --no-single-run\",\n+ \"test:watch\": \"yarn test --no-single-run\",\n\"tsd\": \"gulp tsd\",\n\"tsd:lint\": \"tslint './index.d.ts' './src/**/*.d.ts' './src/**/*.tsx' './test/**/*.d.ts' './test/**/*.tsx'\",\n- \"tsd:lint:fix\": \"yarn tsd:lint -- --fix\",\n+ \"tsd:lint:fix\": \"yarn tsd:lint --fix\",\n\"tsd:test\": \"yarn tsd && tsc -p ./ && rm test/typings.js\"\n},\n\"repository\": {\n",
        "date": "19.10.2017 18:04:47",
        "repo": "semantic-org/semantic-ui-react",
        "type": "chore",
        "sim_msg": "chore(repo): remove the headless flag",
        "sim_diff": "diff --git a/packages/react/package.json b/packages/react/package.json \"lint\": \"yarn lint:javascript && yarn lint:stylelint\",\n\"lint:javascript\": \"eslint --ext .jsx --ext .js .\",\n\"lint:stylelint\": \"stylelint './src/**/*.scss' --syntax scss --ignorePath .gitignore --custom-formatter ./config/stylelint/sassMsgFormatter.js\",\n- \"pre-commit\": \"yarn svg-convert && yarn lint-staged && yarn test:base && yarn test:e2e && yarn reports\",\n+ \"pre-commit\": \"yarn svg-convert && yarn lint-staged && yarn reports:clean && yarn test:base && yarn test:e2e && yarn reports\",\n\"postinstall\": \"carbon-telemetry collect --install\",\n\"start\": \"yarn test:engines && yarn storybook\",\n\"storybook\": \"yarn test:engines && start-storybook -p 3000 -s public/development\",\n\"test:engines\": \"check-node-version --node $(cat ../../.nvmrc) --yarn 1.x\",\n\"test:ci\": \"yarn test --ci --logHeapUsage --coverage\",\n\"test:e2e:update\": \"cypress-image-diff -u\",\n- \"test:e2e\": \"cross-env BABEL_ENV='e2e' NODE_ENV='e2e' cypress run-ct --browser chrome --headless --config video=false,screenshotOnRunFailure=false\",\n+ \"test:e2e\": \"cross-env BABEL_ENV='e2e' NODE_ENV='e2e' cypress run-ct --browser chrome --config video=false,screenshotOnRunFailure=false\",\n\"test:e2e:interactive\": \"cross-env BABEL_ENV='e2e' NODE_ENV='e2e' cypress open-ct --browser chrome --config video=false,screenshotOnRunFailure=false\",\n\"test:e2e:ci\": \"cross-env BABEL_ENV='e2e' NODE_ENV='e2e' cypress run-ct --browser chrome --headless --config --record video=false,screenshotOnRunFailure=false\",\n\"reports:clean\": \"rimraf .nyc_output reports coverage\",\n"
    },
    {
        "msg": "chore: update to WHATWG url api",
        "diff": "diff --git a/lib/util.js b/lib/util.js var fs = require('fs'),\n- url = require('url'),\n+ { URL } = require('url'),\n_ = require('lodash'),\nchardet = require('chardet'),\n@@ -191,7 +191,7 @@ util = {\nresource = 'resource';\nif (response.statusCode !== 200) {\n- urlObj = url.parse(location);\n+ urlObj = new URL(location);\n(urlObj.hostname === POSTMAN_API_HOST) &&\n(resource = _(urlObj.path).split('/').get(1).slice(0, -1) || resource);\n",
        "date": "23.03.2021 12:22:42",
        "repo": "postmanlabs/newman",
        "type": "chore",
        "sim_msg": "fix: The req.headers dose not have host field",
        "sim_diff": "diff --git a/lib/util/index.js b/lib/util/index.js @@ -359,10 +359,14 @@ exports.toRegExp = function toRegExp(regExp) {\n};\nfunction getFullUrl(req) {\n+ var host = req.headers.host;\nif (hasProtocol(req.url)) {\n- req.url = url.parse(req.url).path;\n+ var options = url.parse(req.url);\n+ req.url = options.path;\n+ if (!host) {\n+ host = req.headers.host = options.host;\n+ }\n}\n- var host = req.headers.host;\nif (host) {\nhost = req.isHttps ? host.replace(/:443$/, '') : host.replace(/:80$/, '');\n}\n"
    },
    {
        "msg": "chore: use travis CI's new conditional 'if' to check for tag",
        "diff": "diff --git a/.travis.yml b/.travis.yml @@ -24,16 +24,13 @@ branches:\njobs:\ninclude:\n- stage: deploy\n+ if: tag IS present\nnode_js: 12\nbefore_script:\n- chmod +x scripts/docs\nscript: echo \"Deploying ...\"\nafter_success:\n- scripts/docs\n- branches:\n- only:\n- - master\n- - \"/^\\\\d+\\\\.\\\\d+(\\\\.\\\\d+)?(-\\\\S*)?$/\"\nbefore_deploy:\n- echo 'Preparing to publish'\n- npm run build\n",
        "date": "15.01.2020 20:32:33",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "sim_msg": "ci(travis): fix travis releasing on wrong branch",
        "sim_diff": "diff --git a/.travis.yml b/.travis.yml @@ -57,7 +57,7 @@ jobs:\n# Job: Release\n- stage: release\n- if: branch = master\n+ if: branch = master AND type = push AND fork = false\nnode_js:\n- 'lts/*'\nskip_cleanup: true\n@@ -66,7 +66,7 @@ jobs:\n# Job: Page\n- stage: deploy\n- if: branch = master\n+ if: branch = master AND type = push AND fork = false\nnode_js:\n- 'lts/*'\nscript:\n"
    },
    {
        "msg": "chore: add default app in the e2e script",
        "diff": "diff --git a/package.json b/package.json \"deploy:alpha:soft\": \"npm run test && npm run deploy-prepare && npm run git-commit-tag && npx lerna publish from-package --dist-tag alpha --yes\",\n\"deploy:feat\": \"npm run test && npm run deploy-prepare && npm run git-commit-tag && npx lerna publish from-package --dist-tag feat --yes && git push origin HEAD\",\n\"deploy:prod\": \"npm run deploy-all && npx lerna publish from-package --yes && git push origin HEAD\",\n- \"e2e-hello-world-ios\": \"cd packages/renative-template-hello-world && npx rnv build -p ios -s test && yarn e2e:ios\",\n- \"e2e-hello-world-android\": \"cd packages/renative-template-hello-world && npx rnv build -p android -s test && yarn e2e:android\",\n- \"e2e-hello-world-tvos\": \"cd packages/renative-template-hello-world && npx rnv build -p tvos -s test && yarn e2e:tvos\",\n- \"e2e-hello-world-androidtv\": \"cd packages/renative-template-hello-world && npx rnv build -p androidtv -s test && yarn e2e:androidtv\",\n- \"e2e-hello-world-macos\": \"cd packages/renative-template-hello-world && npx rnv build -p macos -s test && yarn e2e:macos\",\n- \"e2e-hello-world-web\": \"cd packages/renative-template-hello-world && npx rnv start -p web -s test & sleep 60 && cd packages/renative-template-hello-world && yarn e2e:web && kill $(lsof -t -i:8080)\",\n+ \"e2e-hello-world-ios\": \"cd packages/renative-template-hello-world && npx rnv build -p ios -s test -c template && yarn e2e:ios\",\n+ \"e2e-hello-world-android\": \"cd packages/renative-template-hello-world && npx rnv build -p android -s test -c template && yarn e2e:android\",\n+ \"e2e-hello-world-tvos\": \"cd packages/renative-template-hello-world && npx rnv build -p tvos -s test -c template && yarn e2e:tvos\",\n+ \"e2e-hello-world-androidtv\": \"cd packages/renative-template-hello-world && npx rnv build -p androidtv -s test -c template && yarn e2e:androidtv\",\n+ \"e2e-hello-world-macos\": \"cd packages/renative-template-hello-world && npx rnv build -p macos -s test -c template && yarn e2e:macos\",\n+ \"e2e-hello-world-web\": \"cd packages/renative-template-hello-world && npx rnv start -p web -s test -c template & sleep 60 && cd packages/renative-template-hello-world && yarn e2e:web && kill $(lsof -t -i:8080)\",\n\"git-commit\": \"rnv hooks run -x gitCommit -r\",\n\"git-commit-tag\": \"rnv hooks run -x gitCommitAndTag -r\",\n\"git-tag\": \"rnv hooks run -x gitTag -r\",\n",
        "date": "01.03.2022 18:04:55",
        "repo": "pavjacko/renative",
        "type": "chore",
        "sim_msg": "chore: add dist-tag to beta releases",
        "sim_diff": "diff --git a/package.json b/package.json \"publish:push-git\": \"git push --follow-tags\",\n\"publish:from-git\": \"lerna publish from-git\",\n\"publish:dry-run\": \"run-s \\\"publish:version --no-git-tag-version\\\"\",\n- \"publish:beta\": \"run-s publish:beta:before-manual-version publish:after-manual-version\",\n+ \"publish:beta\": \"run-s publish:beta:before-manual-version publish:beta:after-manual-version\",\n\"publish:beta:before-manual-version\": \"run-s bootstrap test publish:beta:version\",\n+ \"publish:beta:after-manual-version\": \"run-s publish:prepare publish:beta:push\",\n\"publish:beta:version\": \"lerna version prepatch --preid alpha --no-push\",\n+ \"publish:beta:push\": \"run-s publish:push-git \\\"publish:from-git -- --dist-tag next\\\"\",\n\"publish:beta:dry-run\": \"run-s \\\"publish:beta:version --no-git-tag-version\\\"\",\n\"format\": \"run-s \\\"lint:css -- --fix --quiet\\\" \\\"lint:js -- --fix --quiet\\\" \\\"format:prettier -- --write\\\"\",\n\"format:prettier\": \"prettier \\\"{{packages,scripts,website}/**/,}*.{js,css}\\\"\",\n"
    },
    {
        "msg": "chore(optimize): always stringify `toImport` output",
        "diff": "diff --git a/src/plugins/optimize-graph-plugin.js b/src/plugins/optimize-graph-plugin.js @@ -176,7 +176,7 @@ class ChunkGraph {\nlet rep = typeof newUrl === 'function' ? newUrl(url, fn, quote) : newUrl;\nif (rep === false) return 'null';\nif (typeof rep === 'string') {\n- rep = JSON.stringify(publicPath ? toImport(publicPath, rep) : rep);\n+ rep = publicPath ? toImport(publicPath, rep) : JSON.stringify(rep);\n}\nreturn `${fn}(${rep})`;\n}\n@@ -187,9 +187,8 @@ class ChunkGraph {\n/**\n* @param {string} publicPath\n* @param {string} filename\n- * @param {boolean} [toJSON]\n*/\n-function toImport(publicPath, filename, toJSON) {\n+function toImport(publicPath, filename) {\nlet value = posix.join(publicPath, filename);\nif (/^(https?:)?\\/\\//.test(publicPath)) {\n@@ -198,7 +197,7 @@ function toImport(publicPath, filename, toJSON) {\nvalue = new URL(filename, root).href.substring(isFull ? 0 : 6);\n}\n- return toJSON ? JSON.stringify(value) : value;\n+ return JSON.stringify(value);\n}\n/**\n@@ -285,7 +284,7 @@ function hoistEntryCss(graph) {\n} else {\n// @TODO: this branch is actually unreachable\nif (DEBUG) console.log(`Hoisting CSS \"${f}\" imported by ${id} into parent HTML.`);\n- const url = toImport(graph.publicPath, f, true);\n+ const url = toImport(graph.publicPath, f);\nasset.source = getAssetSource(asset).replace(/<\\/head>/, `<link rel=\"stylesheet\" href=${url}></head>`);\n}\n}\n@@ -348,7 +347,7 @@ function hoistCascadedCss(graph, { cssMinSize }) {\nparentChunk.code += '\\n' + DEFAULT_STYLE_LOAD_IMPL;\n}\n- const url = toImport(graph.publicPath, fileName, true);\n+ const url = toImport(graph.publicPath, fileName);\nparentChunk.code += `\\n${meta.styleLoadFn}(${url});`;\n}\nbreak;\n@@ -390,7 +389,7 @@ function hoistTransitiveImports(graph) {\nappendCode += '\\n' + DEFAULT_STYLE_LOAD_IMPL;\n}\nif (DEBUG) console.log(`Preloading CSS for import(${spec}): ${css}`);\n- preloads.push(...css.map(f => `${meta.styleLoadFn}(${toImport(graph.publicPath, f, true)})`));\n+ preloads.push(...css.map(f => `${meta.styleLoadFn}(${toImport(graph.publicPath, f)})`));\n}\nconst js = deps.js.get(spec);\n",
        "date": "07.12.2020 10:43:15",
        "repo": "preactjs/wmr",
        "type": "chore",
        "sim_msg": "fix: use jwt when persisted operation doc",
        "sim_diff": "diff --git a/src/commands/graph/graph-edit.js b/src/commands/graph/graph-edit.js // @ts-check\nconst gitRepoInfo = require('git-repo-info')\n-const { OneGraphClient } = require('netlify-onegraph-internal')\nconst { OneGraphCliClient, ensureCLISession, upsertMergeCLISessionMetadata } = require('../../lib/one-graph/cli-client')\nconst {\n@@ -40,6 +39,7 @@ const graphEdit = async (options, command) => {\n}\nconst netlifyToken = await command.authenticate()\n+ const { jwt } = await OneGraphCliClient.getGraphJwtForSite({ siteId, nfToken: netlifyToken })\nawait ensureAppForSite(netlifyToken, siteId)\n@@ -62,8 +62,7 @@ const graphEdit = async (options, command) => {\ntags: ['netlify-cli', `session:${oneGraphSessionId}`, `git-branch:${branch}`],\n},\n{\n- accessToken: netlifyToken,\n-\n+ accessToken: jwt,\nsiteId,\n},\n)\n@@ -76,7 +75,6 @@ const graphEdit = async (options, command) => {\nconst newMetadata = { docId: persistedDoc.id }\n- const { jwt } = await OneGraphClient.getGraphJwtForSite({ siteId, nfToken: netlifyToken })\nawait upsertMergeCLISessionMetadata({\nconfig,\njwt,\n"
    },
    {
        "msg": "chore(UncontrolledNavDropdown): simplify logic\nThis simplifies the deprecated component to just return the preferred component (UncontrolledDropdown) with the nav prop\nThis removes the logic from the deprecated component.",
        "diff": "diff --git a/src/UncontrolledNavDropdown.js b/src/UncontrolledNavDropdown.js -import React, { Component } from 'react';\n+import React from 'react';\nimport { warnOnce } from './utils';\n-import NavDropdown from './NavDropdown';\n+import UncontrolledDropdown from './UncontrolledDropdown';\n-export default class UncontrolledNavDropdown extends Component {\n- constructor(props) {\n- super(props);\n-\n- this.state = { isOpen: false };\n- this.toggle = this.toggle.bind(this);\n- }\n-\n- toggle() {\n- this.setState({ isOpen: !this.state.isOpen });\n- }\n-\n- render() {\n+const UncontrolledNavDropdown = () => {\nwarnOnce('The \"UncontrolledNavDropdown\" component has been deprecated.\\nPlease use component \"UncontrolledDropdown\" with nav prop.');\n- return <NavDropdown isOpen={this.state.isOpen} toggle={this.toggle} {...this.props} />;\n- }\n-}\n+ return <UncontrolledDropdown nav {...this.props} />;\n+};\n+\n+export default UncontrolledNavDropdown;\n",
        "date": "02.02.2018 14:17:43",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "sim_msg": "fix(Dropdown): fix arrow color",
        "sim_diff": "diff --git a/packages/yoga/src/Dropdown/web/Dropdown.jsx b/packages/yoga/src/Dropdown/web/Dropdown.jsx @@ -245,13 +245,15 @@ const ArrowIcon = styled(({ isOpen, selected, ...props }) => (\n${({\nisOpen,\nselected,\n+ disabled,\ntheme: {\nyoga: {\ncomponents: { dropdown },\n},\n},\n}) => `\n- fill: ${dropdown.disabled.arrow.fill};\n+ fill: ${dropdown.arrow.fill};\n+ ${disabled ? `fill: ${dropdown.disabled.arrow.fill};` : ''};\n${selected ? `fill: ${dropdown.selected.arrow.fill};` : ''};\ntransform: rotate(${isOpen ? '180deg' : '0'});\n`}\n@@ -296,7 +298,11 @@ const Dropdown = ({ label, disabled, full, options, onChange, ...rest }) => (\ndisabled={disabled}\n{...getToggleButtonProps()}\n>\n- <ArrowIcon isOpen={isOpen} selected={selectedItem !== null} />\n+ <ArrowIcon\n+ isOpen={isOpen}\n+ selected={selectedItem !== null}\n+ disabled={disabled}\n+ />\n</Button>\n</Selector>\n"
    },
    {
        "msg": "chore: push versions",
        "diff": "diff --git a/website/package.json b/website/package.json },\n\"dependencies\": {\n\"@chakra-ui/theme-vue\": \"^0.2.7\",\n- \"@chakra-ui/vue\": \"^0.7.0-next.0\",\n+ \"@chakra-ui/vue\": \"^0.7.0-next.2\",\n\"@emotion/css\": \"^11.0.0\",\n\"@mdx-js/vue-loader\": \"^1.6.1\",\n\"@nuxtjs/dotenv\": \"^1.4.0\",\n",
        "date": "23.12.2020 15:38:06",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "feat(app): upgrade vue-loader (has our fix in regards to HMR with vue-class-component)",
        "sim_diff": "diff --git a/app/package.json b/app/package.json \"typescript\": \"4.4.2\",\n\"url-loader\": \"4.1.1\",\n\"vue\": \"3.2.21\",\n- \"vue-loader\": \"16.8.2\",\n+ \"vue-loader\": \"16.8.3\",\n\"vue-router\": \"4.0.12\",\n\"vue-style-loader\": \"4.1.3\",\n\"webpack\": \"^5.58.1\",\n"
    },
    {
        "msg": "chore: update format script",
        "diff": "diff --git a/package.json b/package.json \"test:packages\": \"lerna run test --stream --scope razzle-* --ignore razzle-examples-* -- --passWithNoTests --verbose --no-cache\",\n\"test:e2e\": \"jest --config ./test/jest.config.json --verbose --no-cache \",\n\"clean\": \"lerna clean --yes\",\n- \"format\": \"prettier --trailing-comma es5 --single-quote --write 'packages/*/*.+(js|jsx|json|yml|yaml|css|less|scss|ts|tsx|md|mdx)' 'packages/*/!(node_modules)/**/*.js'\",\n+ \"format\": \"prettier --write 'packages/*/*.+(js|jsx|json|yml|yaml|css|less|scss|ts|tsx|md|mdx)' 'packages/*/!(node_modules)/**/*.js'\",\n\"publish-canary\": \"lerna version prerelease --preid canary --force-publish && release --pre\",\n\"publish-stable\": \"lerna version --force-publish && release && node ./scripts/release-notes.js\",\n\"build-docs\": \"node ./scripts/build-docs.js\",\n},\n\"lint-staged\": {\n\"*.{js|jsx|json|yml|yaml|css|less|scss|ts|tsx|md|mdx}\": [\n- \"prettier --trailing-comma es5 --single-quote --write\"\n+ \"yarn format\"\n]\n},\n\"dependencies\": {},\n",
        "date": "08.07.2020 23:05:11",
        "repo": "jaredpalmer/razzle",
        "type": "chore",
        "sim_msg": "chore(lerna): make repository commitizen friendly\nAdd commitizen config and adapter for conventional changelog. Switch on conventional changelog\nsupport in Lerna.",
        "sim_diff": "diff --git a/package.json b/package.json \"start\": \"cd packages/template-react; yarn start\",\n\"test\": \"lerna run test --stream\",\n\"lint\": \"eslint \\\"packages/**/*.js\\\"\",\n- \"release\": \"lerna publish --exact\",\n+ \"release\": \"lerna publish --exact --conventional-commits\",\n\"update\": \"yarn upgrade-interactive --latest && yarn\",\n\"postupdate\": \"lerna clean --yes && lerna bootstrap\"\n},\n\"**/spec/mock/**\"\n],\n\"devDependencies\": {\n+ \"cz-conventional-changelog\": \"^2.0.0\",\n\"eslint\": \"^4.8.0\",\n\"eslint-config-semistandard\": \"^11.0.0\",\n\"eslint-config-standard\": \"^10.2.1\",\n\"eslint-plugin-react\": \"^7.4.0\",\n\"eslint-plugin-standard\": \"^3.0.1\",\n\"lerna\": \"^2.4.0\"\n+ },\n+ \"config\": {\n+ \"commitizen\": {\n+ \"path\": \"./node_modules/cz-conventional-changelog\"\n+ }\n}\n}\n"
    },
    {
        "msg": "chore: remove test from postinstall script",
        "diff": "diff --git a/package.json b/package.json ]\n},\n\"scripts\": {\n- \"postinstall\": \"yarn test && yarn build:dev && yarn theme:dev && lerna link\",\n+ \"postinstall\": \"yarn build:dev && yarn theme:dev && lerna link\",\n\"build:dev\": \"yarn workspace @chakra-ui/vue run rollup --config rollup.dev.config.js\",\n\"build\": \"yarn workspace @chakra-ui/vue build\",\n\"dev\": \"yarn workspace @chakra-ui/vue dev\",\n",
        "date": "16.05.2020 20:39:32",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "chore: add prepublish",
        "sim_diff": "diff --git a/package.json b/package.json \"lint:es\": \"eslint {packages,storybook}/**/*.{js,vue}\",\n\"lint:style\": \"vue-cli-service lint:style\",\n\"prepare\": \"lerna bootstrap\",\n+ \"prepublishOnly\": \"yarn build\",\n\"start\": \"lerna exec yarn start --scope storybook\",\n\"test\": \"vue-cli-service test:unit\",\n\"reinstall\": \"find . -name node_modules -type d -prune -exec echo Removing {} ';' -exec rm -rf {} ';' && echo Clearing yarn cache && yarn cache clean && echo Removing yarn offline mirror && rm -rf \\\"./.yarn-offline-mirror\\\" && yarn install\"\n"
    },
    {
        "msg": "chore(tests): remove unnecessary template",
        "diff": "diff --git a/packages/kiwi-core/src/CloseButton/tests/CloseButton.test.js b/packages/kiwi-core/src/CloseButton/tests/CloseButton.test.js @@ -10,9 +10,7 @@ const renderComponent = (props) => {\nreturn render(base)\n}\nit('should render correctly', () => {\n- const { asFragment } = renderComponent({\n- template: `<CloseButton />`\n- })\n+ const { asFragment } = renderComponent()\nexpect(asFragment()).toMatchSnapshot()\n})\nit('should allow setting a custom aria-label for the button', () => {\n",
        "date": "01.03.2020 15:04:41",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "feat(docs): allow labels on switch to be reversed",
        "sim_diff": "diff --git a/docs/src/components/Switch.tsx b/docs/src/components/Switch.tsx import React from \"react\";\nimport styled from \"styled-components\";\n-import Inline from \"@kiwicom/orbit-components/lib/Inline\";\n+import Stack from \"@kiwicom/orbit-components/lib/Stack\";\nconst StyledLabel = styled.label`\nposition: relative;\n@@ -66,6 +66,7 @@ interface Props {\nonKeyPress?: () => any;\nchecked?: boolean;\nariaLabelledby?: string;\n+ reverseLabel?: boolean;\n}\nconst InputSwitch = ({\n@@ -76,9 +77,10 @@ const InputSwitch = ({\nchecked,\nariaLabelledby,\nonKeyPress,\n+ reverseLabel,\n}: Props) => {\nreturn (\n- <Inline align=\"center\" spacing=\"medium\">\n+ <Stack direction={reverseLabel ? \"row-reverse\" : \"row\"} align=\"center\" spacing=\"medium\">\n<StyledLabel>\n<StyledInput\ntype=\"checkbox\"\n@@ -93,7 +95,7 @@ const InputSwitch = ({\n<StyledCircle />\n</StyledLabel>\n{children && <StyledContent>{children}</StyledContent>}\n- </Inline>\n+ </Stack>\n);\n};\n"
    },
    {
        "msg": "chore: fix linting issues",
        "diff": "diff --git a/lib/monitor/signals.js b/lib/monitor/signals.js module.exports = {\n- \"SIGHUP\": \"1\",\n- \"SIGINT\": \"2\",\n- \"SIGQUIT\": \"3\",\n- \"SIGILL\": \"4\",\n- \"SIGTRAP\": \"5\",\n- \"SIGABRT\": \"6\",\n- \"SIGBUS\": \"7\",\n- \"SIGFPE\": \"8\",\n- \"SIGKILL\": \"9\",\n- \"SIGUSR1\": \"10\",\n- \"SIGSEGV\": \"11\",\n- \"SIGUSR2\": \"12\",\n- \"SIGPIPE\": \"13\",\n- \"SIGALRM\": \"14\",\n- \"SIGTERM\": \"15\",\n- \"SIGSTKFLT\": \"16\",\n- \"SIGCHLD\": \"17\",\n- \"SIGCONT\": \"18\",\n- \"SIGSTOP\": \"19\",\n- \"SIGTSTP\": \"20\",\n- \"SIGTTIN\": \"21\",\n- \"SIGTTOU\": \"22\",\n- \"SIGURG\": \"23\",\n- \"SIGXCPU\": \"24\",\n- \"SIGXFSZ\": \"25\",\n- \"SIGVTALRM\": \"26\",\n- \"SIGPROF\": \"27\",\n- \"SIGWINCH\": \"28\",\n- \"SIGIO\": \"29\",\n- \"SIGPWR\": \"30\",\n- \"SIGSYS\": \"31\",\n- \"SIGRTMIN\": \"35\"\n+ SIGHUP: 1,\n+ SIGINT: 2,\n+ SIGQUIT: 3,\n+ SIGILL: 4,\n+ SIGTRAP: 5,\n+ SIGABRT: 6,\n+ SIGBUS: 7,\n+ SIGFPE: 8,\n+ SIGKILL: 9,\n+ SIGUSR1: 10,\n+ SIGSEGV: 11,\n+ SIGUSR2: 12,\n+ SIGPIPE: 13,\n+ SIGALRM: 14,\n+ SIGTERM: 15,\n+ SIGSTKFLT: 16,\n+ SIGCHLD: 17,\n+ SIGCONT: 18,\n+ SIGSTOP: 19,\n+ SIGTSTP: 20,\n+ SIGTTIN: 21,\n+ SIGTTOU: 22,\n+ SIGURG: 23,\n+ SIGXCPU: 24,\n+ SIGXFSZ: 25,\n+ SIGVTALRM: 26,\n+ SIGPROF: 27,\n+ SIGWINCH: 28,\n+ SIGIO: 29,\n+ SIGPWR: 30,\n+ SIGSYS: 31,\n+ SIGRTMIN: 35,\n}\n",
        "date": "15.12.2017 15:20:01",
        "repo": "remy/nodemon",
        "type": "chore",
        "sim_msg": "fix: package-lock for travis",
        "sim_diff": "diff --git a/package-lock.json b/package-lock.json },\n\"balanced-match\": {\n\"version\": \"1.0.0\",\n- \"bundled\": true\n+ \"bundled\": true,\n+ \"optional\": true\n},\n\"brace-expansion\": {\n\"version\": \"1.1.11\",\n\"bundled\": true,\n+ \"optional\": true,\n\"requires\": {\n\"balanced-match\": \"^1.0.0\",\n\"concat-map\": \"0.0.1\"\n},\n\"code-point-at\": {\n\"version\": \"1.1.0\",\n- \"bundled\": true\n+ \"bundled\": true,\n+ \"optional\": true\n},\n\"concat-map\": {\n\"version\": \"0.0.1\",\n- \"bundled\": true\n+ \"bundled\": true,\n+ \"optional\": true\n},\n\"console-control-strings\": {\n\"version\": \"1.1.0\",\n- \"bundled\": true\n+ \"bundled\": true,\n+ \"optional\": true\n},\n\"core-util-is\": {\n\"version\": \"1.0.2\",\n},\n\"inherits\": {\n\"version\": \"2.0.3\",\n- \"bundled\": true\n+ \"bundled\": true,\n+ \"optional\": true\n},\n\"ini\": {\n\"version\": \"1.3.5\",\n\"is-fullwidth-code-point\": {\n\"version\": \"1.0.0\",\n\"bundled\": true,\n+ \"optional\": true,\n\"requires\": {\n\"number-is-nan\": \"^1.0.0\"\n}\n\"minimatch\": {\n\"version\": \"3.0.4\",\n\"bundled\": true,\n+ \"optional\": true,\n\"requires\": {\n\"brace-expansion\": \"^1.1.7\"\n}\n},\n\"number-is-nan\": {\n\"version\": \"1.0.1\",\n- \"bundled\": true\n+ \"bundled\": true,\n+ \"optional\": true\n},\n\"object-assign\": {\n\"version\": \"4.1.1\",\n\"string-width\": {\n\"version\": \"1.0.2\",\n\"bundled\": true,\n+ \"optional\": true,\n\"requires\": {\n\"code-point-at\": \"^1.0.0\",\n\"is-fullwidth-code-point\": \"^1.0.0\",\n\"integrity\": \"sha512-8p6ZLv+1JYa5Vs8oBn33Nn3VGFBbF+wVfO+b78RJS1Qf1uIOzjFVDk3XwYDD7rlz9G5BKpxhaQw+6EGQ7L02aw==\",\n\"requires\": {\n\"underscore\": \"1.8.3\",\n- \"web3-core-helpers\": \"1.0.0-beta.37\"\n+ \"web3-core-helpers\": \"1.0.0-beta.37\",\n+ \"websocket\": \"git://github.com/frozeman/WebSocket-Node.git#6c72925e3f8aaaea8dc8450f97627e85263999f2\"\n},\n\"dependencies\": {\n\"debug\": {\n},\n\"websocket\": {\n\"version\": \"git://github.com/frozeman/WebSocket-Node.git#6c72925e3f8aaaea8dc8450f97627e85263999f2\",\n- \"from\": \"git://github.com/frozeman/WebSocket-Node.git#6c72925e3f8aaaea8dc8450f97627e85263999f2\",\n+ \"from\": \"git://github.com/frozeman/WebSocket-Node.git#browserifyCompatible\",\n\"requires\": {\n\"debug\": \"^2.2.0\",\n\"nan\": \"^2.3.3\",\n"
    },
    {
        "msg": "chore: add dark theme ability",
        "diff": "diff --git a/src/features/note-selector/NoteSelector.module.css b/src/features/note-selector/NoteSelector.module.css .tag:hover::after {\nborder-left-color: rgb(65, 65, 65);\n}\n+\n+:global(.darkTheme) .tag {\n+ color: white;\n+ background-color: rgb(130, 129, 129);\n+}\n+\n+:global(.darkTheme) .tag:hover {\n+ /*background-color: #cc0000;*/\n+ background-color: white;\n+ color: black;\n+}\n\\ No newline at end of file\n",
        "date": "14.08.2019 09:44:39",
        "repo": "iqtlabs/crviz",
        "type": "chore",
        "sim_msg": "refactor: changed secondary text link ref",
        "sim_diff": "diff --git a/packages/theme-data/src/baseTheme/components/textLink.js b/packages/theme-data/src/baseTheme/components/textLink.js @@ -38,25 +38,25 @@ export default {\n\"textLink.secondary.default.fontColor\": {\ntype: COLOR,\nvalue: {\n- ref: \"basics.colors.textLink.secondary.againstLight\"\n+ ref: \"colorScheme.text.default\"\n}\n},\n\"textLink.secondary.hover.fontColor\": {\ntype: COLOR,\nvalue: {\n- ref: \"basics.colors.textLink.secondary.againstLight\"\n+ ref: \"colorScheme.text.default\"\n}\n},\n\"textLink.secondary.focus.fontColor\": {\ntype: COLOR,\nvalue: {\n- ref: \"basics.colors.textLink.secondary.againstLight\"\n+ ref: \"colorScheme.text.default\"\n}\n},\n\"textLink.secondary.hover.underlineColor\": {\ntype: COLOR,\nvalue: {\n- ref: \"basics.colors.textLink.secondary.againstLight\"\n+ ref: \"colorScheme.text.default\"\n}\n},\n/**\n"
    },
    {
        "msg": "chore(package.json): remove dev:exp command\nchore(package.json): remove dev:exp command",
        "diff": "diff --git a/package.json b/package.json \"scripts\": {\n\"build\": \"npm run frontend_build && npm run server_build\",\n\"dev\": \"NODE_ENV=development babel-node ./src/server/index.dev\",\n- \"dev:exp\": \"NODE_ENV=development babel-node -- --expose-http2 ./src/server/index.dev\",\n\"server_build\": \"NODE_ENV=production webpack --config webpack_config/server/webpack.prod.babel.js\",\n\"frontend_build\": \"NODE_ENV=production webpack --config webpack_config/client/webpack.prod.babel.js\",\n\"test\": \"NODE_ENV=test jest --config=jest_config/jest.config.json --coverage --forceExit || true\",\n",
        "date": "14.09.2017 01:10:28",
        "repo": "metnew/suicrux",
        "type": "chore",
        "sim_msg": "feat: ensure NODE_ENV is set correctly for prod builds",
        "sim_diff": "diff --git a/package.json b/package.json \"license\": \"GPL-3.0\",\n\"scripts\": {\n\"dev\": \"NODE_ENV=development node ./src/server.js\",\n- \"build\": \"yarn run build-clean && yarn run build-transpile && yarn run build-sync && next build src && cp -R src/.next build/app\",\n+ \"build\": \"yarn run build-clean && yarn run build-transpile && yarn run build-sync && NODE_ENV=production next build src && cp -R src/.next build/app\",\n\"build-transpile\": \"NODE_ENV=production babel src -d build/app --ignore '**/*.test.js','**/*__mocks__','**/*__snapshots__'\",\n\"build-sync\": \"cp -R src/static build/app/static && rsync -av --prune-empty-dirs --include='*/' --include='*.gql' --exclude='*' src/* build/app\",\n\"build-clean\": \"rimraf build/app\",\n"
    },
    {
        "msg": "chore(package): add react-test-renderer",
        "diff": "diff --git a/package.json b/package.json \"doctoc\": \"^1.2.0\",\n\"doctrine\": \"^2.0.0\",\n\"empty\": \"^0.10.1\",\n- \"enzyme\": \"^2.7.1\",\n+ \"enzyme\": \"^2.8.2\",\n\"eslint-config-ta\": \"^5.2.0\",\n\"eslint-plugin-jsx-a11y\": \"^4.0.0\",\n\"express\": \"^4.13.4\",\n\"react-dom\": \"15.5.4\",\n\"react-router\": \"^4.0.0\",\n\"react-router-dom\": \"^4.0.0\",\n+ \"react-test-renderer\": \"^15.5.4\",\n\"require-dir\": \"^0.3.0\",\n\"rimraf\": \"^2.5.2\",\n\"satisfied\": \"^1.1.0\",\n",
        "date": "22.04.2017 09:34:48",
        "repo": "semantic-org/semantic-ui-react",
        "type": "chore",
        "sim_msg": "chore(package): update eslint to version 5.16.0\nCloses",
        "sim_diff": "diff --git a/package.json b/package.json \"coveralls\": \"^3.0.2\",\n\"enzyme\": \"^3.6.0\",\n\"enzyme-adapter-react-16\": \"^1.5.0\",\n- \"eslint\": \"5.15.1\",\n+ \"eslint\": \"5.16.0\",\n\"eslint-plugin-import\": \"^2.14.0\",\n\"eslint-plugin-jsx-a11y\": \"^6.1.1\",\n\"eslint-plugin-react\": \"7.11.1\",\n"
    },
    {
        "msg": "chore: Code clean up in View.",
        "diff": "diff --git a/packages/vega-view/src/View.js b/packages/vega-view/src/View.js @@ -74,12 +74,10 @@ export default function View(spec, options) {\nconst ctx = runtime(view, spec, options.functions);\nview._runtime = ctx;\nview._signals = ctx.signals;\n- view._bind = (spec.bindings || []).map(function(_) {\n- return {\n+ view._bind = (spec.bindings || []).map(_ => ({\nstate: null,\nparam: extend({}, _)\n- };\n- });\n+ }));\n// initialize scenegraph\nif (ctx.root) ctx.root.set(root);\n@@ -303,18 +301,15 @@ prototype.removeResizeListener = function(handler) {\n};\nfunction findOperatorHandler(op, handler) {\n- var t = op._targets || [],\n- h = t.filter(function(op) {\n- var u = op._update;\n- return u && u.handler === handler;\n- });\n+ const h = (op._targets || [])\n+ .filter(op => op._update && op._update.handler === handler);\nreturn h.length ? h[0] : null;\n}\nfunction addOperatorListener(view, name, op, handler) {\nvar h = findOperatorHandler(op, handler);\nif (!h) {\n- h = trap(view, function() { handler(name, op.value); });\n+ h = trap(view, () => handler(name, op.value));\nh.handler = handler;\nview.on(op, null, h);\n}\n",
        "date": "16.05.2020 18:33:47",
        "repo": "vega/vega",
        "type": "chore",
        "sim_msg": "fix(Tasks): Fixes an issue where you can't add additional equipment to a probe task template. Closes",
        "sim_diff": "diff --git a/src/components/views/Tasks/core/inputs/ProbeEquipment.js b/src/components/views/Tasks/core/inputs/ProbeEquipment.js @@ -17,6 +17,10 @@ const PROBES_QUERY = gql`\n}\n`;\nconst ProbeEquipment = ({simulatorId, onChange, value}) => {\n+ const sensorArrayCount = Object.keys(value).reduce(\n+ (prev, next) => (next.includes(\"Sensors Array\") ? prev + 1 : prev),\n+ 0,\n+ );\nreturn (\n<Query query={PROBES_QUERY} variables={{simulatorId}} skip={!simulatorId}>\n{({loading, data}) =>\n@@ -73,7 +77,9 @@ const ProbeEquipment = ({simulatorId, onChange, value}) => {\n...value,\n[data\n? randomFromList(data.probes[0].equipment.map(e => e.id))\n- : \"Sensors Array\"]: Math.ceil(Math.random() + 1),\n+ : `Sensors Array${\n+ sensorArrayCount > 0 ? ` (${sensorArrayCount})` : \"\"\n+ }`]: Math.ceil(Math.random() + 1),\n})\n}\n>\n"
    },
    {
        "msg": "chore(docs): update inline form spacing\nCloses",
        "diff": "diff --git a/docs/lib/examples/FormInline.js b/docs/lib/examples/FormInline.js @@ -5,16 +5,14 @@ export default class Example extends React.Component {\nrender() {\nreturn (\n<Form inline>\n- <FormGroup>\n- <Label for=\"exampleEmail\">Email</Label>{' '}\n+ <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\n+ <Label for=\"exampleEmail\" className=\"mr-sm-2\">Email</Label>\n<Input type=\"email\" name=\"email\" id=\"exampleEmail\" placeholder=\"something@idk.cool\" />\n</FormGroup>\n- {' '}\n- <FormGroup>\n- <Label for=\"examplePassword\">Password</Label>{' '}\n+ <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\n+ <Label for=\"examplePassword\" className=\"mr-sm-2\">Password</Label>\n<Input type=\"password\" name=\"password\" id=\"examplePassword\" placeholder=\"don't tell!\" />\n</FormGroup>\n- {' '}\n<Button>Submit</Button>\n</Form>\n);\n",
        "date": "21.11.2017 05:18:34",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "sim_msg": "docs(*): update form validate",
        "sim_diff": "diff --git a/docs/form/demo/base.md b/docs/form/demo/base.md @@ -44,6 +44,15 @@ class Demo extends React.Component {\n<FormItem label=\"Password\" required requiredMessage=\"Please input your password!\">\n<Input.Password name=\"basePass\" placeholder=\"Please Enter Password\"/>\n</FormItem>\n+ <FormItem label=\"Email\" format=\"email\" requiredMessage=\"Please input your email!\">\n+ <Input name=\"email\" placeholder=\"Please Enter Email\"/>\n+ </FormItem>\n+ <FormItem label=\"Phone Number\" format=\"tel\">\n+ <Input name=\"phone\" placeholder=\"Please Enter phone number\"/>\n+ </FormItem>\n+ <FormItem label=\"Homepage\" format=\"url\">\n+ <Input name=\"homepage\" defaultValue=\"https://\" placeholder=\"e.g. https://www.taobao.com\"/>\n+ </FormItem>\n<FormItem label=\" \" colon={false}>\n<Checkbox name=\"agreement\" defaultChecked>Agree</Checkbox>\n</FormItem>\n"
    },
    {
        "msg": "chore: improve travis build?",
        "diff": "diff --git a/.travis.yml b/.travis.yml sudo: false\ndist: trusty\nlanguage: node_js\n-node_js:\n-- 10\n-- 11\n-- 12\ncache:\ndirectories:\n- node_modules\n-script:\n-- npm run lint\n-- npm run cover -- --runInBand\n-after_script:\n-- npm run report-coverage\nenv:\nglobal:\nsecure: Jb9Q9+XnCh+n5uNJuqUmLmPG6mUUv7iTi5bNeK6TpLdrVKk+2mLdobV3iRUy/DEqNLwt2lxwzp1oq4YI/lZ0vlUam7HpFWpSf4PAI8ckGRqFdus7K45o+zxHLJ2zBQwXacsZB204qtO8RDdXaNb9PjRGNFdKm3ZuqZTv6PkO+hS05EFxmcW95HiSHpV/qPxKjEsDdCpoTNEA3MP0dNtSKygeht2nFQVr7WkOhkjDvUtU9EypkGbJeBCd0AckqXM0Qvmdi++csyz5VRQhhUwI/2BKSjbBVUZ6Q3m8sX2p4G/wFEbhXl5eKTzAYLuf+9kT9Jg+gKdT30PoChx2NPKHv0XS8BOrKQScs6KIwOVH2/CNCKqAxh3HkCMSONmqEQRqBK1V/gSCZ4zDX9PgrfyE23FLN/GM4YtBlkVCMLh8Y/hiapXUaDobxh/o2tfOoQkeoZWZeoeIydhwULTDSG2R3PKV7rkGYas0VQ+qtU+i8VG+PzjPT4DRf4xIKzNzJbFIq9oTNYBTasWi6+OKzNw0uH3ydmRzf+GxaTwOIdR3nRQMQN60dH+6qeJkrIvpfrGAB5gqTutXPfe0xf2rMrW6dyipnSgGlk1JOgA+cU4CPyHql1OA+ox/kIQ4I3PIJBu5YYE3amFmKLu3vnDHELSzM1CYeOs0sDasRyiDkKE79l0=\n-branches:\n- only:\n- - master\n- - \"/^\\\\d+\\\\.\\\\d+(\\\\.\\\\d+)?(-\\\\S*)?$/\"\n+\n+stages:\n+ - lint\n+ - test\n+ - deploy\njobs:\ninclude:\n+ - stage: lint\n+ node_js: 12\n+ script: npm run lint\n+ - stage: test\n+ node_js:\n+ - 10\n+ - 11\n+ - 12\n+ script: npm run cover -- --runInBand\n+ after_script: npm run report-coverage\n- stage: deploy\nif: tag IS present\nnode_js: 12\n",
        "date": "15.01.2020 20:56:06",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "sim_msg": "chore: fix invalid npm token",
        "sim_diff": "diff --git a/.travis.yml b/.travis.yml sudo: false\n+dist: \"trusty\"\nlanguage: \"node_js\"\nnode_js:\n- \"6\"\n@@ -14,7 +15,7 @@ env:\nglobal:\n- \"CXX=g++-4.8\"\n# GH_TOKEN and NPM_TOKEN encrypted by 'travis encrypt' utility\n- - secure: \"LWRVV2vXBEMPdLGmcOe25t2iE/k7CuONnNsmyCUCSusybVwh/wDwKNOYT+TqEegD34u5dkhfPuMy+sEn1IKUgTBIxjI6cXSbyLEmVBJuoEKySZaPUaXFeqylLgy8Q/vjPv0m9WQGPx94KIT0uPPB0KS1+ApRssksBeSp1TgQ7zXxssR9+5Ym0wdQSmHjajqjIEGJ3+L7IUANZinOfzh76V5d3MtDxHjKA570nGat0bXJ54Sy9G/a23c4HB+qNgneQPAkwbrK19LsMNeOUVLzCTt4RHuqOtg/EBgcR88HGfzzWYiuqXNqO+tqacV00cZZ6qIsvTw8zidE1YSpPvoIMfiEf1887+RQjPGSEnFssv8a0G9JjAN478OmpBWFTMsiaOyd8cckgb2ZApMXxZQch5l35Qr23zIa1JKgEWeoz25G5dGGJPfVyjWfyZhLDRtNPuq1TSBoQT9nGH35NEOYCSCWcwgFWn9aYeSNdxSMrb62GpLspPJIO8QXD3mTtn69TBa5Mn3o3MvP+NJ9l1uyv14WtF+Um4IMH8BDwdWLxjG1dwrK5kOskfo0ioSfK1u2lE3YaW9ARDTbOf2FAluqCCdld9XZStH7pIW8SBJtIwQYA0P+CyVYnvBQqxw3rbW2Sn1VwYw7hzoAHpzlI68tKEhjgIybsCZNFbaU3NNcjr4=\"\n+ - secure: \"wvzBndJSj08eo4AJWS7SyiPz1yG8PprxwaFbS4VNvd7cbnZvPAEsaAYvjt7ubn4KtcSXPpslUV12EO4xNPghaJUAsnJjRxf6+HSz+0M0BQBOpCwtg2BwXxll3FSRW+KZ/27bJXPl0F2nRDrsyBLbQ3+KQ9CF/QnenE6YvUfSPKrcg/OgZIQ6QeFMOgmP9Z/lP6zOkyigapsaMiRr2/8H9kx21Z6Wgd0lB+LMsKmPmNAUadN5TSJY6t4+aS5UrNsW8DMeYUDbcGk9XWh+YE86MqrP7FZCQoUfyP72ZEnUKrRJO+osDBGNJbxoIDVPQfPlIAx6gdsw+KAoyzT8/roc1MQBrlfhRAFlNyKjXqd0TUqg3I7ji4ZIababoCI4Qz4GGh6ZEJ2rQCYDnBw9cT2OzzoSx8QyiEnRu/qfKitIF7CcNCzclzp0EILXTZijgUaqK8g6rjwcLTnbN9S3KdpUTp3KN/NPgZm/lupxKVaPRqQH7MOWATYEzzw5wYx1H4ihNyKKasu5MHPJJelCW8X3qecYFahNQXaiI+ifZpG3jyH2s12Oi/tLxtYLPt8R+ScXdrGrs0FgX3azZn6YB3phWIV4OD+1jBGDJiym8Wk45Vm0EsneyOZaitFO2EDawWgyt1hQzbmvKUXVL70OG6tdaT8ztABYDz9jNjGhg80LYmQ=\"\nmatrix:\n- \"DRAFTER=JS\"\n- \"DRAFTER=CPP\"\n@@ -22,7 +23,7 @@ cache:\ndirectories:\n- \"node_modules\"\nbefore_install:\n- - \"npm -g install npm@latest\"\n+ - \"npm -g install npm@6\"\ninstall: \"if [[ $DRAFTER = JS ]]; then npm install --no-optional; else npm install; fi\"\nscript:\n- \"npm run lint && npm run test:coverage\"\n"
    },
    {
        "msg": "chore(webpack_config): add comment about Preact\nchore(webpack_config): add comment about Preact",
        "diff": "diff --git a/webpack_config/client/webpack.base.js b/webpack_config/client/webpack.base.js @@ -51,10 +51,11 @@ const baseBuild = {\nresolve: {\nalias: {\n...isomorphicWebpackConfig.resolve.alias\n+ // NOTE: Preact + preact-compat can save you 148Kb parsed or 14kb gzipped\n+ // Preact may breaks your React app, starter by default doesn't aim to support Preact\n// react: 'preact-compat',\n// 'react-dom': 'preact-compat',\n- // 'preact-compat': 'preact-compat/dist/preact-compat',\n- // 'react-redux': 'preact-redux'\n+ // 'preact-compat': 'preact-compat/dist/preact-compat'\n},\nmodules: isomorphicWebpackConfig.resolve.modules,\nextensions: isomorphicWebpackConfig.resolve.extensions.concat([\n",
        "date": "17.09.2017 21:44:12",
        "repo": "metnew/suicrux",
        "type": "chore",
        "sim_msg": "build: do not add image-webpack-loader at all in development",
        "sim_diff": "diff --git a/webpack.config.js b/webpack.config.js @@ -136,8 +136,8 @@ const base = {\ntest: /\\.(gif|jpe?g|png|svg)$/,\nuse: [\n{ loader: 'file-loader', query: { name: 'static/[name]_[hash:7].[ext]' } },\n- { loader: 'image-webpack-loader', query: { bypassOnDebug: true } },\n- ],\n+ nodeEnv !== 'development' && { loader: 'image-webpack-loader' },\n+ ].filter(Boolean),\n},\n{\n"
    },
    {
        "msg": "chore: fix lint errs",
        "diff": "diff --git a/packages/chakra-ui-core/src/CAspectRatioBox/tests/CAspectRatioBox.test.js b/packages/chakra-ui-core/src/CAspectRatioBox/tests/CAspectRatioBox.test.js @@ -23,12 +23,12 @@ const renderComponent = (props) => {\nfunction getElementStyles (selector) {\nselector = new RegExp(selector)\nlet styles = []\n- let i; let j; let sel = selector\n+ let i; let j; const sel = selector\nfor (i = 0; i < document.styleSheets.length; ++i) {\nfor (j = 0; j < document.styleSheets[i].cssRules.length; ++j) {\nif (sel.test(document.styleSheets[i].cssRules[j].selectorText)) {\n// let selectorText = document.styleSheets[i].cssRules[j].selectorText\n- let cssText = document.styleSheets[i].cssRules[j].style.cssText\n+ const cssText = document.styleSheets[i].cssRules[j].style.cssText\nstyles += cssText\n}\n}\n@@ -49,8 +49,8 @@ it('should render correctly', () => {\n`.trim())\n})\n-it('should have correct styles', async () => {\n- const inlineAttrs = `:ratio=\"2\"`\n+it('should have correct styles', () => {\n+ const inlineAttrs = ':ratio=\"2\"'\nrenderComponent({ inlineAttrs })\nconst image = screen.getByTestId('image')\nconst aspectRatioBox = screen.getByTestId('aspectRatioBox')\n",
        "date": "13.06.2020 16:20:37",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "fix(vite-plugin): auto-import -> correctly match and replace comp & directives",
        "sim_diff": "diff --git a/vite-plugin/src/vue-transform.js b/vite-plugin/src/vue-transform.js @@ -12,6 +12,7 @@ const compRegex = {\n}\nconst dirRegex = new RegExp(`_resolveDirective\\\\(\"${autoImportData.regex.directives.replace(/v-/g, '')}\"\\\\)`, 'g')\n+const lengthSortFn = (a, b) => b.length - a.length\nexport function vueTransform (content, autoImportComponentCase) {\nconst importList = []\n@@ -74,14 +75,14 @@ export function vueTransform (content, autoImportComponentCase) {\n}\nif (compList.length > 0) {\n- const list = compList.join('|')\n+ const list = compList.sort(lengthSortFn).join('|')\ncode = code\n.replace(new RegExp(`const _component_(${list}) = `, 'g'), '')\n.replace(new RegExp(`_component_(${list})`, 'g'), (_, match) => reverseMap[match])\n}\nif (dirList.length > 0) {\n- const list = dirList.join('|')\n+ const list = dirList.sort(lengthSortFn).join('|')\ncode = code\n.replace(new RegExp(`const _directive_(${list}) = `, 'g'), '')\n.replace(new RegExp(`_directive_(${list})`, 'g'), (_, match) => reverseMap[match])\n"
    },
    {
        "msg": "chore: update test envs",
        "diff": "diff --git a/.travis.yml b/.travis.yml @@ -6,13 +6,10 @@ language: node_js\nnotifications:\nemail: false\nnode_js:\n+ - 8\n+ - 7\n- 6\n- - 5\n- 4\n- # - iojs-v3\n- # - iojs-v2\n- # - iojs-v1\n- - '0.10'\nbefore_install:\n- npm i -g npm@^2.0.0\nbefore_script:\n",
        "date": "04.09.2017 20:14:18",
        "repo": "remy/nodemon",
        "type": "chore",
        "sim_msg": "chore: reorder node order to run latest to oldest",
        "sim_diff": "diff --git a/.travis.yml b/.travis.yml @@ -6,12 +6,12 @@ cache:\nnotifications:\nemail: false\nnode_js:\n- - \"8.9.0\"\n- - \"8.16.0\"\n- - \"9.11.2\"\n- - \"10.16.0\"\n- - \"lts/*\"\n- node\n+ - \"lts/*\"\n+ - \"10.16.0\"\n+ - \"9.11.2\"\n+ - \"8.16.0\"\n+ - \"8.9.0\"\ninstall: npm install\n"
    },
    {
        "msg": "chore(Footer): use light color for footer\nchore(Footer): use light color for footer",
        "diff": "diff --git a/src/common/components/parts/Footer/style.jsx b/src/common/components/parts/Footer/style.jsx @@ -5,7 +5,7 @@ export const StyledFooter = styled.footer`\nwidth: 100%;\ndisplay: flex;\nalign-items: center;\n- background-color: ${props => props.theme.primaryColor};\n+ background-color: ${props => props.theme.primaryColorLight};\ncolor: ${props => props.theme.primaryTextColor};\nheight: 90px;\nbox-shadow: inset 0 0 0 0 ${props => props.theme.primaryColorDark},\n",
        "date": "17.09.2017 15:07:40",
        "repo": "metnew/suicrux",
        "type": "chore",
        "sim_msg": "refactor: use spacing unit",
        "sim_diff": "diff --git a/src/components/Footer/Footer.js b/src/components/Footer/Footer.js @@ -5,12 +5,12 @@ import Typography from \"material-ui/Typography\";\nconst date = new Date();\n-const styles = () => ({\n+const styles = (theme) => ({\nfooter: {\nalignItems: \"center\",\ndisplay: \"flex\",\njustifyContent: \"center\",\n- marginBottom: \"1.5rem\"\n+ marginBottom: theme.spacing.unit * 2\n}\n});\n"
    },
    {
        "msg": "chore: docs service worker update",
        "diff": "diff --git a/packages/chakra-ui-docs/static/sw.js b/packages/chakra-ui-docs/static/sw.js -importScripts('https://cdn.jsdelivr.net/npm/workbox-cdn@4.3.1/workbox/workbox-sw.js')\n-\n-// --------------------------------------------------\n-// Configure\n-// --------------------------------------------------\n-\n-// Set workbox config\n-workbox.setConfig({\n- 'debug': false\n-})\n-\n-// Start controlling any existing clients as soon as it activates\n-workbox.core.clientsClaim()\n-\n-// Skip over the SW waiting lifecycle stage\n-workbox.core.skipWaiting()\n-\n-workbox.precaching.cleanupOutdatedCaches()\n-\n-// --------------------------------------------------\n-// Precaches\n-// --------------------------------------------------\n-\n-// Precache assets\n-\n-// --------------------------------------------------\n-// Runtime Caching\n-// --------------------------------------------------\n-\n-// Register route handlers for runtimeCaching\n-workbox.routing.registerRoute(new RegExp('/_nuxt/'), new workbox.strategies.CacheFirst({}), 'GET')\n-workbox.routing.registerRoute(new RegExp('/'), new workbox.strategies.NetworkFirst({}), 'GET')\n+// THIS FILE SHOULD NOT BE VERSION CONTROLLED\n",
        "date": "18.04.2020 23:33:30",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "docs(pwa): Document themeColor and msTileColor",
        "sim_diff": "diff --git a/packages/@vue/cli-plugin-pwa/README.md b/packages/@vue/cli-plugin-pwa/README.md @@ -36,14 +36,17 @@ file, or the `\"vue\"` field in `package.json`.\nmodule.exports = {\n// ...other vue-cli plugin options...\npwa: {\n+ name: 'My App', // used for apple-mobile-web-app-title\n+ themeColor: '#4DBA87',\n+ msTileColor: '#000000',\nworkboxPluginMode: 'InjectManifest',\nworkboxOptions: {\n// swSrc is required in InjectManifest mode.\nswSrc: 'dev/sw.js',\n// ...other Workbox options...\n- },\n- },\n-};\n+ }\n+ }\n+}\n```\n## Installing in an Already Created Project\n"
    },
    {
        "msg": "chore: :wrench: update tailwind config",
        "diff": "diff --git a/tailwind.config.cjs b/tailwind.config.cjs -module.exports = {\n+const config = {\nmode: 'jit',\npurge: ['./src/**/*.{html,js,svelte,ts}'],\ntheme: {\n@@ -6,3 +6,5 @@ module.exports = {\n},\nplugins: [require('@tailwindcss/typography'), require('daisyui')],\n}\n+\n+module.exports = config\n",
        "date": "23.08.2021 18:10:20",
        "repo": "spences10/cheat-sheets",
        "type": "chore",
        "sim_msg": "fix: tailwindcss content sources",
        "sim_diff": "diff --git a/src/generators/tailwindcss.js b/src/generators/tailwindcss.js @@ -35,7 +35,8 @@ module.exports = {\nimportant: true,\ncontent: {\nfiles: [\n- './src/**/*.*',\n+ './src/components/**.html',\n+ './src/layouts/**.html',\n{raw: html, extension: 'html'}\n]\n}\n@@ -46,7 +47,6 @@ module.exports = {\nconfig.content = {\nfiles: [\n...config.content,\n- './src/**/*.*',\n{raw: html, extension: 'html'}\n]\n}\n"
    },
    {
        "msg": "chore: Removes duplicated dev deps in CLI",
        "diff": "diff --git a/packages/cli/package.json b/packages/cli/package.json \"bugs\": \"https://github.com/preactjs/preact-cli/issues\",\n\"homepage\": \"https://github.com/preactjs/preact-cli\",\n\"devDependencies\": {\n- \"eslint\": \"^7.12.1\",\n\"html-looks-like\": \"^1.0.2\",\n\"jest\": \"^26.0.1\",\n- \"lerna\": \"^3.16.4\",\n- \"lint-staged\": \"^10.5.0\",\n\"mkdirp\": \"^1.0.3\",\n\"ncp\": \"^2.0.0\",\n\"node-sass\": \"^4.12.0\",\n",
        "date": "03.02.2021 04:33:16",
        "repo": "preactjs/preact-cli",
        "type": "chore",
        "sim_msg": "build(dev-deps): remove rollup-plugins",
        "sim_diff": "diff --git a/package.json b/package.json \"jest\": \"^24.9.0\",\n\"lint-staged\": \"^9.4.2\",\n\"prettier\": \"^1.18.2\",\n- \"rimraf\": \"^3.0.0\",\n- \"rollup-plugin-commonjs\": \"^10.1.0\",\n- \"rollup-plugin-node-resolve\": \"^5.2.0\",\n- \"rollup-plugin-terser\": \"^5.1.1\",\n- \"rollup-plugin-uglify\": \"^6.0.3\"\n+ \"rimraf\": \"^3.0.0\"\n}\n}\n"
    },
    {
        "msg": "chore: remove defaultIsChecked from story",
        "diff": "diff --git a/packages/chakra-ui-core/src/CRadio/CRadio.stories.js b/packages/chakra-ui-core/src/CRadio/CRadio.stories.js @@ -6,7 +6,7 @@ storiesOf('UI | Radio', module)\ncomponents: { CFragment, CRadio },\ntemplate: `\n<div>\n- <CRadio value=\"male\" v-model=\"maleChecked\" defaultIsChecked name=\"bee\">\n+ <CRadio value=\"male\" v-model=\"maleChecked\" name=\"bee\">\nMale\n</CRadio>\n<CRadio ml=\"3\" value=\"female\" name=\"bee\">\n",
        "date": "24.04.2020 11:51:37",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "feat: update radiobutton story",
        "sim_diff": "diff --git a/src/components/RadioButton/__stories__/radioButton.stories.js b/src/components/RadioButton/__stories__/radioButton.stories.js @@ -94,8 +94,6 @@ const renderRadioButtons = (count, options = {}) => {\nfor (let i = 0; i < count; i++) {\nradioButtons.push(\n<RadioButton\n- defaultChecked={!i}\n- checked={i === 2}\nvalue={includeKnobs ? text(`Value${i}`, `${i}`) : i}\ntext={includeKnobs ? text(`Text${i}`, `Option ${i}`) : `Option ${i}`}\nname={includeKnobs ? text(`Name${i}`, \"radios\") : name}\n"
    },
    {
        "msg": "chore(readme): updated readme",
        "diff": "diff --git a/README.md b/README.md @@ -16,12 +16,12 @@ You can also view all developed components in Storybook!\n#### Project TODO:\n- [x] Setup Storybook for components UI\n- [x] Theme Provider\n+- [x] Develop styling scheme for components with styled components\n- [x] Setup Vue.js plugin system\n- [x] Provide Theme\n- - [ ] Observe theme and set it dynamically in javascript with ease.\n+ - [x] Observe theme and set it dynamically in javascript with ease.\n- [ ] Provide icons API for icons component\n-- [ ] Develop styling scheme for components with styled components\n+- [ ] Accessibility (Focus) Styling\n- [ ] Setup NPM distribution\n- [ ] Set up type system for components with Typescript\n-- [ ] Accessibility (Focus) Styling\n",
        "date": "21.10.2019 03:50:03",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "chore: update `vue/en/simple-component.md`",
        "sim_diff": "diff --git a/content/intro-to-storybook/vue/en/simple-component.md b/content/intro-to-storybook/vue/en/simple-component.md @@ -145,7 +145,7 @@ Another nice thing about bundling the `actionsData` that a component needs is th\n## Config\n-We'll need to make a couple of changes to Storybook's configuration files, so it notices not only our recently created stories and allow us to use the application's CSS file (located in `src/index.css`).\n+We'll need to make a couple of changes to Storybook's configuration files, so it notices our recently created stories and allows us to use the application's CSS file (located in `src/index.css`).\nStart by changing your Storybook configuration file (`.storybook/main.js`) to the following:\n"
    },
    {
        "msg": "chore(docs): button group spacing\nThis removes `{' '}` which was added to the doc in but has not effects on `Button`s inside `ButtonGroup`.",
        "diff": "diff --git a/docs/lib/examples/ButtonGroup.js b/docs/lib/examples/ButtonGroup.js @@ -5,8 +5,8 @@ export default class Example extends React.Component {\nrender() {\nreturn (\n<ButtonGroup>\n- <Button>Left</Button>{' '}\n- <Button>Middle</Button>{' '}\n+ <Button>Left</Button>\n+ <Button>Middle</Button>\n<Button>Right</Button>\n</ButtonGroup>\n);\n",
        "date": "24.03.2018 02:45:50",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "sim_msg": "fix(react): silence react warning about onDeselect prop",
        "sim_diff": "diff --git a/lib/common/components/OptionButton.js b/lib/common/components/OptionButton.js @@ -23,7 +23,7 @@ export default class OptionButton extends React.Component<Props> {\n}\nrender () {\n- const {children, tooltip, ...other} = this.props\n+ const {children, tooltip, onDeselect, ...other} = this.props\nconst button = (\n<Button\n{...other}\n"
    },
    {
        "msg": "chore: add circularprogress component sig",
        "diff": "diff --git a/packages/chakra-ui-core/src/CCircularProgress/CCircularProgress.js b/packages/chakra-ui-core/src/CCircularProgress/CCircularProgress.js * @see A11y https://github.com/chakra-ui/chakra-ui-vue/blob/master/packages/chakra-ui-core/src/CCircularProgress/accessibility.md\n*/\n-\nimport { baseProps } from '../config/props'\nimport { forwardProps } from '../utils'\nimport { getComputedProps } from './utils/circularprogress.styles'\n@@ -39,6 +38,9 @@ const CCircularProgressLabel = {\ntransform: 'translate(-50%, -50%)',\nfontSize: '0.25em',\n...forwardProps(this.$props)\n+ },\n+ attrs: {\n+ 'data-chakra-component': 'CCircularProgressLabel'\n}\n}, this.$slots.default)\n}\n@@ -126,7 +128,10 @@ const CCircularProgress = {\n...rootData.props,\n...forwardProps(this.$props)\n},\n- attrs: rootData.attrs\n+ attrs: {\n+ ...rootData.attrs,\n+ 'data-chakra-component': 'CCircularProgress'\n+ }\n}, [\nh(CBox, {\nprops: svgData.props,\n",
        "date": "16.04.2020 21:55:06",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "refactor(translation-chart-image): replace `useColorMode` with `useColorModeValue`",
        "sim_diff": "diff --git a/src/components/TranslationChartImage.tsx b/src/components/TranslationChartImage.tsx import React from \"react\"\n-import { Flex, Image } from \"@chakra-ui/react\"\n-import { useColorMode } from \"@chakra-ui/react\"\n+import { Image, useColorModeValue } from \"@chakra-ui/react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\nimport { getImage } from \"../utils/image\"\n@@ -8,9 +7,6 @@ import { getImage } from \"../utils/image\"\nexport interface IProps {}\nconst TranslationChartImage: React.FC<IProps> = () => {\n- const { colorMode } = useColorMode()\n- const isDarkTheme = colorMode === \"dark\"\n-\nconst data = useStaticQuery(graphql`\n{\npageviewsLight: file(\n@@ -40,7 +36,7 @@ const TranslationChartImage: React.FC<IProps> = () => {\n}\n`)\n- const ethImage = isDarkTheme ? data.pageviewsDark : data.pageviewsLight\n+ const ethImage = useColorModeValue(data.pageviewsLight, data.pageviewsDark)\nreturn (\n<Flex justifyContent=\"center\" objectFit=\"contain\">\n"
    },
    {
        "msg": "chore(docs): updated App.js example",
        "diff": "diff --git a/docs/lib/Home/index.js b/docs/lib/Home/index.js @@ -80,7 +80,7 @@ npm install --save reactstrap react react-dom`}\n{`import { Button } from 'reactstrap';`}\n</PrismCode>\n</pre>\n- <p>Now you are ready to use the imported reactstrap components within your component hierarchy defined in the render method. Here is an example <a href=\"https://gist.github.com/eddywashere/e13033c0e655ab7cda995f8bc77ce40d\" target=\"_blank\"><code>App.js</code></a> redone using reactstrap.</p>\n+ <p>Now you are ready to use the imported reactstrap components within your component hierarchy defined in the render method. Here is an example <a href=\"https://gist.github.com/Thomas-Smyth/006fd507a7295f17a8473451938f9935\" target=\"_blank\"><code>App.js</code></a> redone using reactstrap.</p>\n<h2 className=\"mt-5\">CDN</h2>\n<p>Reactstrap can be included directly in your application's bundle or excluded during compilation and linked directly to a CDN.</p>\n<pre>\n",
        "date": "01.05.2018 21:53:14",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "sim_msg": "docs(MenuButton): modify text",
        "sim_diff": "diff --git a/docs/menu-button/theme/index.jsx b/docs/menu-button/theme/index.jsx @@ -99,17 +99,17 @@ function render(locale, lang) {\nreturn ReactDOM.render((<ConfigProvider>\n<div className=\"demo-container\">\n<Demo title={locale.menuButton}>\n- {renderButton('normal', locale)}\n- {renderButton('primary', locale)}\n- {renderButton('secondary', locale)}\n+ {renderButton('Normal', locale)}\n+ {renderButton('Primary', locale)}\n+ {renderButton('Secondary', locale)}\n</Demo>\n<Demo title={locale.textMenuButton}>\n- {renderButton('normal', locale, { text: true })}\n- {renderButton('primary', locale, { text: true })}\n+ {renderButton('Normal', locale, { text: true })}\n+ {renderButton('Primary', locale, { text: true })}\n</Demo>\n<Demo title={locale.ghostMenuButton}>\n- {renderButton('normal', locale, { ghost: 'light' })}\n- {renderButton('normal', locale, { ghost: 'dark' })}\n+ {renderButton('Normal', locale, { ghost: 'light' })}\n+ {renderButton('Normal', locale, { ghost: 'dark' })}\n</Demo>\n</div></ConfigProvider>\n), document.getElementById('container'));\n"
    },
    {
        "msg": "chore(maintainers): update list of maintainers",
        "diff": "diff --git a/README.md b/README.md @@ -227,6 +227,8 @@ $ npm test\n- [chriso](https://github.com/chriso) - **Chris O'Hara** (author)\n- [profnandaa](https://github.com/profnandaa) - **Anthony Nandaa**\n+- [ezkemboi](https://github.com/ezkemboi) - **Ezrqn Kemboi**\n+- [tux-tn](https://github.com/tux-tn) - **Sarhan Aissi**\n## Reading\n",
        "date": "17.02.2022 09:02:32",
        "repo": "validatorjs/validator.js",
        "type": "chore",
        "sim_msg": "docs: add dnlup to collaborators",
        "sim_diff": "diff --git a/README.md b/README.md @@ -726,6 +726,7 @@ Refs: https://tools.ietf.org/html/rfc7230#section-6.3.2\n## Collaborators\n+* [__Daniele Belardi__](https://github.com/dnlup), <https://www.npmjs.com/~dnlup>\n* [__Matteo Collina__](https://github.com/mcollina), <https://www.npmjs.com/~matteo.collina>\n* [__Robert Nagy__](https://github.com/ronag), <https://www.npmjs.com/~ronag>\n"
    },
    {
        "msg": "chore: package: v28.16.0",
        "diff": "diff --git a/packages/putout/ChangeLog b/packages/putout/ChangeLog +2023.02.04, v28.16.0\n+\n+fix:\n+- @putout/plugin-regexp: remove-useless-group: report after transform\n+\n+feature:\n+- @putout/plugin-apply-maybe: add\n+- @putout/plugin-regexp: apply-literal-notation: report: message\n+- @putout/plugin-regexp: apply-literal-notation: improve support of @putout/plugin-remove-useless-escape\n+- @putout/plugin-regexp: remove-useless-group: improve support of apply-literal-notation\n+\n2023.02.03, v28.15.0\nfeature:\n",
        "date": "04.02.2023 22:42:10",
        "repo": "coderaiser/putout",
        "type": "chore",
        "sim_msg": "test(map): add coverage for update validators\nRe:",
        "sim_diff": "diff --git a/test/types.map.test.js b/test/types.map.test.js @@ -172,6 +172,21 @@ describe('Map', function() {\nassert.ok(err.errors['ratings.github']);\n}\nassert.ok(threw);\n+\n+ doc.ratings.set('github', 8);\n+ // Shouldn't throw\n+ yield doc.save();\n+\n+ threw = false;\n+ try {\n+ yield Test.updateOne({}, { $set: { 'ratings.github': 11 } }, {\n+ runValidators: true\n+ });\n+ } catch (err) {\n+ threw = true;\n+ assert.ok(err.errors['ratings.github']);\n+ }\n+ assert.ok(threw);\n});\n});\n"
    },
    {
        "msg": "chore: bootstrap ci",
        "diff": "diff --git a/.github/workflows/nodejs.yml b/.github/workflows/nodejs.yml @@ -24,7 +24,8 @@ jobs:\nuses: actions/setup-node@v1\nwith:\nnode-version: ${{ matrix.node-version }}\n- - run: yarn bootstrap --frozen-lockfile\n+ - run: yarn install --frozen-lockfile\n+ - run: yarn bootstrap\n- run: yarn build --if-present\n- run: yarn test\nenv:\n",
        "date": "09.05.2020 18:35:53",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "ci: update to yarn instead of npm",
        "sim_diff": "diff --git a/.github/workflows/node.js.yml b/.github/workflows/node.js.yml @@ -25,6 +25,6 @@ jobs:\nuses: actions/setup-node@v1\nwith:\nnode-version: ${{ matrix.node-version }}\n- - run: npm ci\n- - run: npm run build --if-present\n- - run: npm test\n+ - run: yarn install --frozen-lockfile\n+ - run: yarn run build --if-present\n+ - run: yarn test\n"
    },
    {
        "msg": "chore: remove unused screen",
        "diff": "diff --git a/packages/chakra-ui-core/src/CButtonGroup/tests/CButtonGroup.test.js b/packages/chakra-ui-core/src/CButtonGroup/tests/CButtonGroup.test.js import { CButton, CButtonGroup } from '../..'\n-import { render, screen } from '@/tests/test-utils'\n+import { render } from '@/tests/test-utils'\nconst renderComponent = (props) => {\nconst base = {\n",
        "date": "04.07.2020 16:16:25",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "chore(perf): remove redundant linebreak filter",
        "sim_diff": "diff --git a/lib/ui/renderer.js b/lib/ui/renderer.js @@ -82,7 +82,7 @@ class CLIRenderer {\nbuildText(task) {\nif (!task.hasSubtasks()) {\nif (task.output && typeof task.output === 'string') {\n- const data = task.output.trim().split('\\n').filter(Boolean).pop();\n+ const data = task.output.trim().split('\\n').pop();\nreturn `${task.title} ${this.constructor.separator} ${chalk.gray(data)}`;\n}\n"
    },
    {
        "msg": "chore: package: v6.2.0",
        "diff": "diff --git a/packages/engine-processor/package.json b/packages/engine-processor/package.json {\n\"name\": \"@putout/engine-processor\",\n- \"version\": \"6.1.0\",\n+ \"version\": \"6.2.0\",\n\"type\": \"commonjs\",\n\"author\": \"coderaiser <mnemonic.enemy@gmail.com> (https://github.com/coderaiser)\",\n\"description\": \"run processors\",\n",
        "date": "20.09.2022 17:40:25",
        "repo": "coderaiser/putout",
        "type": "chore",
        "sim_msg": "chore(package): update jasmine-core to version 3.2.1\nCloses",
        "sim_diff": "diff --git a/package.json b/package.json \"codeclimate-test-reporter\": \"^0.5.0\",\n\"diff\": \"3.5.0\",\n\"docdash\": \"1.0.0\",\n- \"jasmine-core\": \"2.99.1\",\n+ \"jasmine-core\": \"3.2.1\",\n\"js-yaml\": \"3.12.0\",\n\"jsdoc\": \"3.5.5\",\n\"karma\": \"3.0.0\",\n"
    },
    {
        "msg": "chore: auto publish",
        "diff": "diff --git a/.github/workflows/release.yml b/.github/workflows/release.yml @@ -24,7 +24,11 @@ jobs:\n- name: Install Dependencies\nrun: yarn\n- - name: Create Release Pull Request\n+ - name: Create Release Pull Request or Publish to npm\nuses: changesets/action@master\n+ with:\n+ # This expects you to have a script called release which does a build for your packages and calls changeset publish\n+ publish: yarn release\nenv:\nGITHUB_TOKEN: ${{ secrets.REPO_SCOPED_TOKEN }}\n+ NPM_TOKEN: ${{ secrets.PREACT_NPM_TOKEN }}\n",
        "date": "26.05.2021 03:35:33",
        "repo": "preactjs/preact-cli",
        "type": "chore",
        "sim_msg": "chore: use latest changesets/action for release workflows",
        "sim_diff": "diff --git a/.github/workflows/release.yml b/.github/workflows/release.yml @@ -33,7 +33,7 @@ jobs:\n- name: Create Release Pull Request or Publish to npm\nid: changesets\n- uses: changesets/action@master\n+ uses: changesets/action@v1\nwith:\n# This expects you to have a script called release which does a build for your packages and calls changeset publish\npublish: yarn release\n"
    },
    {
        "msg": "chore: Update CI workflow.",
        "diff": "diff --git a/.github/workflows/test.yml b/.github/workflows/test.yml @@ -19,6 +19,9 @@ jobs:\nsteps:\n- uses: actions/checkout@v3\n+ - name: Ensure apt-get is updated\n+ run: sudo apt-get update\n+\n- name: Install Canvas and XML dependencies\nrun: sudo apt-get install -y libxml2-utils\n",
        "date": "25.03.2022 09:05:16",
        "repo": "vega/vega",
        "type": "chore",
        "sim_msg": "ci: enable node 13 and macOS in CI",
        "sim_diff": "diff --git a/.github/workflows/test.yml b/.github/workflows/test.yml @@ -35,9 +35,12 @@ jobs:\n- 10\n- 12.0.0\n- 12\n+ - 13.0.0\n+ - 13\nos:\n- ubuntu-latest\n- windows-latest\n+ - macOS-latest\nsteps:\n- uses: actions/checkout@master\n- uses: actions/setup-node@v1\n"
    },
    {
        "msg": "chore(RoutingWrapper): remove stage-0 syntax, fix types import path\nchore(RoutingWrapper): remove stage-0 syntax, fix types import path",
        "diff": "diff --git a/src/common/components/addons/RoutingWrapper/index.jsx b/src/common/components/addons/RoutingWrapper/index.jsx @@ -5,7 +5,7 @@ import React, {Component} from 'react'\nimport {Switch, Redirect} from 'react-router-dom'\nimport LazyLoad from 'components/addons/LazyLoad'\nimport {getAuthState} from 'selectors'\n-import type {RouteItem} from 'routing'\n+import type {RouteItem} from 'types'\ntype Props = {\nroutes: RouteItem[],\n@@ -52,7 +52,7 @@ export default class RoutingWrapper extends Component {\nconst {path, exact, strict, component, lazy} = a\n// can visitor access this route?\n// this function determinates is user allowed to visit route\n- const canAccess = ::this.authCheck\n+ const canAccess = this.authCheck.bind(this)\n// select only props that we need\nconst b = {path, exact, strict, canAccess}\n",
        "date": "17.09.2017 14:28:32",
        "repo": "metnew/suicrux",
        "type": "chore",
        "sim_msg": "test(lint): remove unused import",
        "sim_diff": "diff --git a/lib/common/components/Sidebar.js b/lib/common/components/Sidebar.js @@ -3,7 +3,6 @@ import React, {PropTypes} from 'react'\nimport {Navbar, Checkbox} from 'react-bootstrap'\nimport {Link} from 'react-router'\n-import auth0 from '../user/Auth0Manager'\nimport SidebarNavItem from './SidebarNavItem'\nimport SidebarPopover from './SidebarPopover'\nimport JobMonitor from './JobMonitor'\n"
    },
    {
        "msg": "chore: package: v1.3.0",
        "diff": "diff --git a/.nycrc.json b/.nycrc.json \"**/.*.*\",\n\"packages/*/coverage\",\n\"packages/*/bin\",\n- \"packages/*/test\"\n+ \"packages/*/test\",\n+ \"**/eslint.config.js\"\n],\n\"branches\": 100,\n\"lines\": 100,\n",
        "date": "30.08.2022 22:47:06",
        "repo": "coderaiser/putout",
        "type": "chore",
        "sim_msg": "test: remove test folder from code coverage result",
        "sim_diff": "diff --git a/jest.config.js b/jest.config.js @@ -10,6 +10,7 @@ module.exports = {\ncollectCoverage: true,\ncoverageDirectory: '.nyc_output',\ncoverageReporters: ['json'],\n+ coveragePathIgnorePatterns: ['<rootDir>/test/'],\ntransform: {\n'^.+\\\\.(ts)?$': 'ts-jest',\n},\n"
    },
    {
        "msg": "chore(divider): review divider",
        "diff": "diff --git a/packages/chakra-ui-core/src/CDivider/CDivider.js b/packages/chakra-ui-core/src/CDivider/CDivider.js +/**\n+ * Hey! Welcome to @chakra-ui/vue Divider\n+ *\n+ * Dividers are used to display a thin horizontal or vertical line.\n+ *\n+ * @see Docs https://vue.chakra-ui.com/divider\n+ * @see Source https://github.com/chakra-ui/chakra-ui-vue/blob/master/packages/chakra-ui-core/src/CDivider/CDivider.js\n+ */\n+\nimport CBox from '../CBox'\nimport { baseProps } from '../config/props'\nimport { forwardProps } from '../utils'\n+/**\n+ * CDivider component\n+ *\n+ * Creates a horizontal or vertical dividing rule between sibling\n+ * elements\n+ *\n+ * @extends CBox\n+ * @see Docs https://vue.chakra-ui.com/divider\n+ */\nconst CDivider = {\nname: 'CDivider',\nprops: {\n",
        "date": "16.04.2020 23:38:25",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "refactor: Inline Chakra UI's Divider component",
        "sim_diff": "diff --git a/src/components/BugBountyCards.tsx b/src/components/BugBountyCards.tsx @@ -5,7 +5,7 @@ import {\nFlex,\nHeading,\nText as ChakraText,\n- Divider as ChakraDivider,\n+ Divider,\nBox,\n} from \"@chakra-ui/react\"\n@@ -126,10 +126,6 @@ const Description = ({ children }) => {\n)\n}\n-const Divider = () => {\n- return <ChakraDivider opacity=\"1\" />\n-}\n-\nconst SubHeader = ({ children }) => {\nreturn (\n<ChakraText\n@@ -261,7 +257,7 @@ export const BugBountyCards: React.FC<IProps> = () => (\n<SubHeader>\n<Translation id={card.subDescriptionTranslationId} />\n</SubHeader>\n- <Divider />\n+ <Divider opacity=\"1\" />\n<SubHeader>\n<Translation id={card.subHeader1TranslationId} />\n</SubHeader>\n@@ -274,7 +270,7 @@ export const BugBountyCards: React.FC<IProps> = () => (\n))}\n</ul>\n</Text>\n- <Divider />\n+ <Divider opacity=\"1\" />\n<SubHeader>\n<Translation id={card.subHeader2TranslationId} />\n</SubHeader>\n"
    },
    {
        "msg": "chore: error handling for routr guards",
        "diff": "diff --git a/packages/chakra-ui-docs/plugins/analytics.js b/packages/chakra-ui-docs/plugins/analytics.js import Vue from 'vue'\nimport mixpanel from 'mixpanel-browser'\n-const MIXPANEL_TOKEN = process.env.MIXPANEL_TOKEN\n-\n-mixpanel.init(MIXPANEL_TOKEN)\n-\n-export default ({ app }) => {\n+export default ({ app, env }) => {\n+ try {\n+ mixpanel.init(env.MIXPANEL_TOKEN)\nVue.prototype.$mixpanel = mixpanel\n+ } catch (error) {\n+ console.error('Error initializing docs analytics', error)\n+ }\napp.router.afterEach(to => {\ntry {\n",
        "date": "10.05.2020 21:27:59",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "feat: allow mixpanel options to be specified",
        "sim_diff": "diff --git a/packages/analytics-plugin-mixpanel/src/browser.js b/packages/analytics-plugin-mixpanel/src/browser.js * @link https://getanalytics.io/plugins/mixpanel/\n* @param {object} pluginConfig - Plugin settings\n* @param {string} pluginConfig.token - The mixpanel token associated to a mixpanel project\n+ * @param {object} [pluginConfig.options] - The mixpanel init options https://github.com/mixpanel/mixpanel-js/blob/8b2e1f7b/src/mixpanel-core.js#L87-L110\n* @param {string} [pluginConfig.pageEvent] - Event name to use for page() events (default to page path)\n* @param {string} [pluginConfig.customScriptSrc] - Load mixpanel script from custom source\n* @return {object} Analytics plugin\n@@ -18,7 +19,7 @@ function mixpanelPlugin(pluginConfig = {}) {\nconfig: pluginConfig,\n/* https://developer.mixpanel.com/docs/javascript-full-api-reference#mixpanelinit */\ninitialize: ({ config }) => {\n- const { token, customScriptSrc } = config;\n+ const { token, customScriptSrc, options = {} } = config;\nif (!token) {\nthrow new Error(\"No mixpanel token defined\");\n}\n@@ -119,7 +120,7 @@ function mixpanelPlugin(pluginConfig = {}) {\n}\n})(document, window.mixpanel || []);\n- mixpanel.init(config.token, { batch_requests: true });\n+ mixpanel.init(config.token, { batch_requests: true, ...options });\n},\n/**\n* Identify a visitor in mixpanel\n"
    },
    {
        "msg": "chore(locals): fix locals\nchore(locals): fix locals",
        "diff": "diff --git a/locals/en.json b/locals/en.json \"Dashboard.h1\": \"Noir.\",\n\"Dashboard.h2-1\": \"Intro\",\n\"Dashboard.h2-2\": \"How it works?\",\n- \"Dashboard.h3-1\": \"Hello, this is Noir.\",\n- \"Dashboard.h3-2\": \"Hello, this is Noir.\",\n- \"Dashboard.p-1\": \"How it works?\",\n- \"Dashboard.p-2\": \"Hello, this is Noir.\"\n+ \"Dashboard.h3-1\": \"Noir.\",\n+ \"Dashboard.h3-2\": \"Noir.\",\n+ \"Dashboard.p-1\": \"In progress.\",\n+ \"Dashboard.p-2\": \"In progress.\"\n}\n",
        "date": "16.10.2017 17:15:32",
        "repo": "metnew/suicrux",
        "type": "chore",
        "sim_msg": "feat: Redirect API calls to newer endpoints",
        "sim_diff": "diff --git a/static/_redirects b/static/_redirects +/api/states /api/v1/states/current.json\n+/api/states/daily /api/v1/states/daily.json\n+/api/states/info /api/v1/states/info.json\n+/api/us /api/v1/us/current.json\n+/api/us/daily /api/v1/us/daily.json\n+\n+/api/us/daily date=:date /api/v1/us/:date.json\n+/api/states state:state /api/v1/states/:state/current.json\n+/api/states/daily state=:state /api/v1/states/:state/daily.json\n+/api/states/daily state=:state date=:date /api/v1/states/:state/:date.json\n+\n/api/* https://covid.cape.io/:splat 200\n/charts/dash http://35.212.27.3:8050/\n/graphql /api/graphql\n"
    },
    {
        "msg": "chore: change test targets\nNo longer testing in node@8 as of\nAdding node@14 and dropping non-LTS targets (odd versions).",
        "diff": "diff --git a/.travis.yml b/.travis.yml @@ -5,10 +5,9 @@ cache:\nnotifications:\nemail: false\nnode_js:\n+ - '14'\n- '12'\n- - '11'\n- '10'\n- - '8'\nbefore_install:\n- if [ \"$TRAVIS_PULL_REQUEST_BRANCH\" == \"\" ]; then echo \"//registry.npmjs.org/:_authToken=\\${NPM_TOKEN}\" >> .npmrc; fi\nafter_success:\n",
        "date": "19.10.2020 19:20:22",
        "repo": "remy/nodemon",
        "type": "chore",
        "sim_msg": "chore(monorepo): fix how travis creates npm login",
        "sim_diff": "diff --git a/.travis.yml b/.travis.yml @@ -30,7 +30,7 @@ after_success:\nnpm run coverage:upload;\nfi\nif [[ $TRAVIS_BRANCH == 'master' || $TRAVIS_BRANCH == 'next' ]] && [[ $TRAVIS_PULL_REQUEST == 'false' ]]; then\n- echo \"//registry.npmjs.org/:_authToken=\\${NPM_TOKEN}\" > .npmrc\n+ printf \"//registry.npmjs.org/:_authToken=$NPM_TOKEN\\n\" > ~/.npmrc\nnpm run release -- --publish\nfi\nbranches:\n"
    },
    {
        "msg": "chore: updated components list",
        "diff": "diff --git a/packages/chakra-ui-docs/components/components.js b/packages/chakra-ui-docs/components/components.js @@ -23,7 +23,7 @@ const components = [\n'ControlBox',\n'Divider',\n'Drawer',\n- // 'Editable',\n+ 'Editable',\n'Flex',\n'FormControl',\n'Grid',\n@@ -45,7 +45,7 @@ const components = [\n'Select',\n'Slider',\n'Spinner',\n- // 'Stat',\n+ 'Stat',\n'Stack',\n'Switch',\n'Tabs',\n",
        "date": "01.04.2020 00:58:14",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "feat(card): exporting Card Component in yoga package",
        "sim_diff": "diff --git a/packages/yoga/src/index.js b/packages/yoga/src/index.js @@ -2,5 +2,6 @@ import ThemeProvider, { themes } from './ThemeProvider';\nimport Button from './Button';\nimport List from './List';\nimport Checkbox from './Checkbox';\n+import Card from './Card';\n-export { ThemeProvider, themes, Button, List, Checkbox };\n+export { ThemeProvider, themes, Button, List, Checkbox, Card };\n"
    },
    {
        "msg": "chore(firebase-auth-sw): fixed regression introduced in last commit for firebase-auth-sw",
        "diff": "diff --git a/lib/sw-templates/firebase-auth-sw.js b/lib/sw-templates/firebase-auth-sw.js const ignorePaths = <%= serialize(options.ignorePaths) %>\n-<% if (options.onFirebaseHosting) { %>\n+<% if (options.loadFromFirebaseHosting) { %>\n// Only works on Firebase hosting!\nimportScripts('/__/firebase/<%= options.firebaseVersion %>/firebase-app.js')\nimportScripts('/__/firebase/<%= options.firebaseVersion %>/firebase-auth.js')\n",
        "date": "22.12.2020 23:03:08",
        "repo": "nuxt-community/firebase-module",
        "type": "chore",
        "sim_msg": "fix(webpack): alias to gridsome app",
        "sim_diff": "diff --git a/gridsome/lib/webpack/createBaseConfig.js b/gridsome/lib/webpack/createBaseConfig.js @@ -28,6 +28,7 @@ module.exports = (context, options, { isProd, isServer }) => {\n.alias\n.set('~', resolve('src', context))\n.set('@', resolve('src', context))\n+ .set('gridsome$', path.resolve(options.appPath, 'index.js'))\n.end()\n.extensions\n.merge(['.js', '.vue', '.json'])\n"
    },
    {
        "msg": "chore: fix linting issue",
        "diff": "diff --git a/lib/monitor/match.js b/lib/monitor/match.js @@ -90,7 +90,9 @@ function rulesToMonitor(watch, ignore, config) {\nrule.slice(-1) === '*' &&\nrule.indexOf('*.') === -1) {\n- if (rule.slice(-2) !== '**') rule += '*/*';\n+ if (rule.slice(-2) !== '**') {\n+ rule += '*/*';\n+ }\n}\n",
        "date": "06.01.2018 23:53:59",
        "repo": "remy/nodemon",
        "type": "chore",
        "sim_msg": "fix: filter ***/path/to",
        "sim_diff": "diff --git a/lib/rules/rules.js b/lib/rules/rules.js @@ -1048,7 +1048,7 @@ function resolveFilterPattern(matcher) {\nreturn {\nnot: not,\nisInclude: isInclude,\n- filter: '^[a-z]+://[^/?]+/' + path\n+ filter: '^[a-z]+://' + (wildcard.length > 3 ? '[^?]' : '[^/?]') + '+/' + path\n};\n}\nvar result = isRegUrl('^' + filter);\n"
    },
    {
        "msg": "chore(nuxt): fix internal icons registration",
        "diff": "diff --git a/packages/chakra-ui-nuxt/lib/module.js b/packages/chakra-ui-nuxt/lib/module.js @@ -39,7 +39,7 @@ module.exports = function (moduleOptions) {\n// Icons\nconst icons = {\n- ...internalIcons.default,\n+ ...internalIcons,\n...packIcons,\n...(options.icons && options.icons.extend)\n}\n",
        "date": "31.12.2020 14:14:45",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "feat(components): New `designs` icon. Closes",
        "sim_diff": "diff --git a/packages/components/src/Icon/icons.js b/packages/components/src/Icon/icons.js @@ -39,7 +39,7 @@ const withBreasts =\nconst withoutBreasts =\n'M 6.2021092,6.7988281 C 5.0433189,10.972649 5.2215488,13.211802 5.2215488,16.798828 h 5.8983122 l 0.143133,-1.21128 c 0.331559,-1.834081 0.655671,-2.543616 1.078829,0.07477 l 0.134587,1.136509 h 5.896176 c 0,-3.587026 0.180363,-5.826179 -0.978425,-9.9999999 z'\n-const designs = 'M 45.47317,1.7975677e-4 C 41.26883,0.01048976 34.91087,0.38220476 30.13561,2.5013188 22.36395,5.9501498 8.31064,18.328616 1.87893,31.96567 l 18.56735,16.733864 5.77951,-3.926377 c 0,0 4.77451,13.774607 5.68285,45.319717 0.25027,8.69169 -1.19459,22.564756 -2.05311,34.639736 h 77.31363 c -0.85842,-12.07498 -2.30288,-25.948046 -2.05259,-34.639736 0.90834,-31.54511 5.68233,-45.319717 5.68233,-45.319717 l 5.7795,3.926892 18.56735,-16.734379 C 128.71415,18.328574 114.66126,5.9501588 106.88957,2.5013188 102.11434,0.38220476 95.75585,0.01048776 91.55149,1.7975677e-4 90.8881,-0.00142024 90.14467,0.00817976 89.40434,0.02084976 89.13193,7.6078498 85.48205,12.226049 81.18056,14.875241 c -4.47214,2.754281 -9.60461,3.445267 -12.52172,3.445267 -2.91132,0 -8.11768,-0.640747 -12.66383,-3.369303 C 51.6202,12.325479 47.8931,7.7032998 47.61827,0.02084976 c -0.73959,-0.01264 -1.48235,-0.0223 -2.1451,-0.0206700032 z M 48.61975,0.03893976 C 48.89174,7.3855928 52.36932,11.60825 56.51074,14.093896 c 4.31416,2.589313 9.38691,3.226676 12.1481,3.226676 2.7554,0 7.75375,-0.684159 11.99616,-3.296956 4.07037,-2.506844 7.4785,-6.7304132 7.74837,-13.98415924 -1.01513,0.0224 -1.93569,0.04886 -2.47994,0.06511 C 85.92343,7.3410168 80.378,14.660708 68.51208,14.768271 56.64652,14.660496 51.10125,7.3409098 51.10125,0.10456676 c -0.5447,-0.01627 -1.46534,-0.04322 -2.4815,-0.06563 z M 1.44176,32.919104 C 0.89312,34.156693 0.40849,35.40315 0,36.652724 l 16.41035,14.78928 3.18482,-2.163691 z m 134.14116,5.29e-4 -18.15291,16.358693 3.18432,2.163691 16.41036,-14.78928 c -0.40841,-1.249378 -0.89326,-2.495706 -1.44177,-3.733104 z M 29.78576,125.73256 c -0.0817,1.18621 -0.15918,2.35987 -0.22583,3.50005 h 35.17667 6.4611 36.26705 c -0.0666,-1.14018 -0.14417,-2.31384 -0.22582,-3.50005 z'\n+const designs = 'M 11.974745,2.9104165 c -1.528527,0 -2.784485,1.256277 -2.784485,2.7848068 0,0.7494035 0.300482,1.4388587 0.786371,1.9393863 a 0.79436575,0.79436575 0 0 0 0.0084,0.00839 c 0.38087,0.3808653 0.745407,0.6251708 0.94538,0.8248328 0.19998,0.1996612 0.25013,0.2644989 0.25013,0.519072 V 9.6465486 L 2.0590674,14.913054 c -0.284779,0.164416 -0.836034,0.466125 -1.31649616,0.961104 -0.4804697,0.494981 -0.92450835,1.339947 -0.6668386,2.258534 0.2202611,0.785239 0.7746008,1.348564 1.34156666,1.587845 0.5669735,0.23928 1.0981677,0.23415 1.4684955,0.23415 h 6.2292502 5.582178 6.22925 c 0.370328,0 0.901583,0.0051 1.468557,-0.23415 0.566974,-0.239281 1.121495,-0.802606 1.341756,-1.587845 0.25767,-0.918587 -0.18662,-1.763553 -0.667089,-2.258534 C 22.589235,15.379179 22.03823,15.07747 21.753452,14.913054 L 12.76908,9.7258014 V 8.9869116 c 0,-0.7037243 -0.35623,-1.2837462 -0.716532,-1.6434766 C 11.69477,6.9862306 11.349385,6.7584045 11.114868,6.5255482 10.906224,6.3095381 10.778796,6.0225704 10.778796,5.6952216 c 0,-0.6700011 0.525949,-1.1962032 1.195949,-1.1962032 0.670007,0 1.196206,0.5262021 1.196206,1.1962032 a 0.79428633,0.79428633 0 0 0 0.794335,0.7942692 0.79428633,0.79428633 0 0 0 0.794268,-0.7942692 c 0,-1.5285296 -1.256276,-2.7848051 -2.784809,-2.7848051 z m -0.06859,8.2926595 8.991884,5.191357 c 0.289472,0.167124 0.693472,0.413355 0.943933,0.671385 0.250463,0.258029 0.313011,0.371405 0.247537,0.604827 -0.102886,0.366772 -0.190028,0.402129 -0.359686,0.473732 -0.169667,0.07161 -0.470133,0.09952 -0.803363,0.09952 H 14.697212 9.115034 2.8857834 c -0.3332299,0 -0.6336968,-0.02792 -0.8033621,-0.09952 -0.1696653,-0.07161 -0.2567452,-0.10696 -0.3596267,-0.473732 -0.06548,-0.233422 -0.00303,-0.346798 0.2474764,-0.604827 0.2504623,-0.25803 0.6547126,-0.504259 0.9441829,-0.671385 z'\nexport default {\ndesigns,\n"
    },
    {
        "msg": "chore: fix imports order",
        "diff": "diff --git a/packages/chakra-ui-core/src/CThemeProvider/tests/CThemeProvider.test.js b/packages/chakra-ui-core/src/CThemeProvider/tests/CThemeProvider.test.js import { toCSSVar } from '@chakra-ui/styled-system'\nimport { mount, shallowMount } from '@vue/test-utils'\nimport theme from '@chakra-ui/theme-vue'\n-import { getElementStyles } from '@/tests/test-utils'\n-\nimport CThemeProvider from '..'\n+import { getElementStyles } from '@/tests/test-utils'\ndescribe('CThemeProvider', () => {\nconst ChildComponent = {\n",
        "date": "26.08.2021 02:21:27",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "feat(ActionRequirement): add testId",
        "sim_diff": "diff --git a/packages/yoga/src/ActionRequirement/web/ActionRequirement.jsx b/packages/yoga/src/ActionRequirement/web/ActionRequirement.jsx @@ -49,7 +49,7 @@ function isChildFromComponent(child, component) {\nreturn child.type.displayName === component.displayName;\n}\n-function ActionRequirement(props) {\n+function ActionRequirement({ testId, ...props }) {\nconst { title, description, children, checkable, illustration, list } = props;\nlet primaryButton;\n@@ -64,7 +64,7 @@ function ActionRequirement(props) {\ndefineCompoundComponents();\nreturn (\n- <StyledActionRequirement {...props}>\n+ <StyledActionRequirement data-testid={testId} {...props}>\n{illustration && <BoxIllustration>{illustration}</BoxIllustration>}\n<Content>\n@@ -94,6 +94,7 @@ ActionRequirement.propTypes = {\ncheckable: oneOfType([arrayOf(node), node]),\nillustration: oneOfType([arrayOf(node), node]),\nlist: oneOfType([arrayOf(node), node]),\n+ testId: string,\n};\nActionRequirement.defaultProps = {\n@@ -101,6 +102,7 @@ ActionRequirement.defaultProps = {\ncheckable: undefined,\nillustration: undefined,\nlist: undefined,\n+ testId: undefined,\n};\nexport default ActionRequirement;\n"
    },
    {
        "msg": "chore: don't show perf warnings for test scripts",
        "diff": "diff --git a/karma.conf.js b/karma.conf.js @@ -70,6 +70,7 @@ module.exports = function (config) {\nwebpack: {\nplugins: [defaultsPlugin],\ndevtool: 'inline-source-map',\n+ performance: { hints: false },\nmodule: {\nrules: [\n{\n",
        "date": "09.08.2019 15:57:59",
        "repo": "rollbar/rollbar.js",
        "type": "chore",
        "sim_msg": "ci: bump transition unit test duration",
        "sim_diff": "diff --git a/test/unit/karma.base.config.js b/test/unit/karma.base.config.js @@ -19,7 +19,7 @@ var webpackConfig = {\n__WEEX__: false,\n'process.env': {\nNODE_ENV: '\"development\"',\n- TRANSITION_DURATION: 50,\n+ TRANSITION_DURATION: process.env.CI ? 100 : 50,\nTRANSITION_BUFFER: 10\n}\n})\n"
    },
    {
        "msg": "chore(docs): rephrase sentence for grammatical correctness\nChange Text from \"Passing anything other than a string is an error.\" to \"Passing anything other than a string will result in an error.\"",
        "diff": "diff --git a/README.md b/README.md @@ -14,7 +14,7 @@ A library of string validators and sanitizers.\n**This library validates and sanitizes strings only.**\nIf you're not sure if your input is a string, coerce it using `input + ''`.\n-Passing anything other than a string is an error.\n+Passing anything other than a string will result in an error.\n## Installation and Usage\n",
        "date": "03.03.2021 16:11:59",
        "repo": "validatorjs/validator.js",
        "type": "chore",
        "sim_msg": "docs: update formating README",
        "sim_diff": "diff --git a/README.md b/README.md @@ -113,7 +113,7 @@ Please don't create GitHub issues for security issues. Instead, please send an e\n### Contributing\n-Please follow [these steps](CONTRIBUTING.md) to contribute.\n+#### [Please follow these steps to contribute.](CONTRIBUTING.md)\n### License\n"
    },
    {
        "msg": "chore: downgrade jsdom to v19 to support node 12",
        "diff": "diff --git a/package.json b/package.json \"holderjs\": \"^2.9.3\",\n\"jest\": \"28.1.3\",\n\"jest-environment-jsdom\": \"28.1.3\",\n- \"jsdom\": \"^20.0.2\",\n+ \"jsdom\": \"^19.0.0\",\n\"json-loader\": \"^0.5.7\",\n\"microbundle\": \"^0.13.3\",\n\"prettier\": \"2.7.1\",\n",
        "date": "14.11.2022 11:03:02",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "sim_msg": "chore(deps): lock localforage version",
        "sim_diff": "diff --git a/package.json b/package.json \"in-publish\": \"^2.0.0\",\n\"is-function\": \"^1.0.1\",\n\"jsonwebtoken\": \"^7.3.0\",\n- \"localforage\": \"^1.4.3\",\n+ \"localforage\": \"~1.4.3\",\n\"lodash\": \"^4.17.4\",\n\"lodash.assign\": \"^3.1.0\",\n\"lodash.bindall\": \"^3.1.0\",\n"
    },
    {
        "msg": "chore(config): remove unused options",
        "diff": "diff --git a/config.js b/config.js @@ -42,12 +42,6 @@ const config = {\n...envConfig,\npaths,\n- // ----------------------------------\n- // Server Configuration\n- // ----------------------------------\n- server_host: 'localhost',\n- server_port: process.env.PORT || 8080,\n-\n// ----------------------------------\n// Compiler Configuration\n// ----------------------------------\n",
        "date": "13.08.2018 10:41:13",
        "repo": "semantic-org/semantic-ui-react",
        "type": "chore",
        "sim_msg": "fix: correct version display",
        "sim_diff": "diff --git a/src/config/config.js b/src/config/config.js @@ -2,7 +2,7 @@ const publicUrl = process.env.REACT_APP_PUBLIC_URL || (window && window.location\nconst Config = {\nenv: process.env.REACT_APP_ENV || 'development',\n- version: '2' || process.env.VERSION || 'v0',\n+ version: process.env.VERSION || 'v0',\nnewVersionUrl: process.env.REACT_APP_NEW_VERSION_URL || 'https://gdlr.info/newversion',\nmnemonicToSeed: process.env.REACT_APP_MNEMONIC_TO_SEED || true,\nlogLevel: process.env.REACT_APP_LOG_LEVEL || 'debug',\n"
    },
    {
        "msg": "chore: add chakra to deps",
        "diff": "diff --git a/package.json b/package.json \"website\"\n],\n\"nohoist\": [\n- \"core-js\"\n+ \"core-js\",\n+ \"@chakra-ui/vue\"\n]\n},\n\"scripts\": {\n\"evalbundle\": \"bundlesize\"\n},\n\"dependencies\": {\n+ \"@chakra-ui/vue\": \"^0.7.0-next.2\",\n\"@babel/core\": \"^7.9.0\",\n\"@babel/plugin-proposal-object-rest-spread\": \"^7.7.4\",\n\"@babel/plugin-transform-modules-commonjs\": \"^7.7.4\",\n",
        "date": "23.12.2020 15:46:25",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "chore(deps): updates Vue peerDependency to 3.0.0",
        "sim_diff": "diff --git a/packages/casl-vue/package.json b/packages/casl-vue/package.json \"license\": \"MIT\",\n\"peerDependencies\": {\n\"@casl/ability\": \"^2.0.0 || ^3.0.0 || ^4.0.0 || ^5.1.0\",\n- \"vue\": \"^2.0.0\"\n+ \"vue\": \"^3.0.0\"\n},\n\"devDependencies\": {\n\"@babel/core\": \"^7.8.4\",\n"
    },
    {
        "msg": "chore(styles/theme): random color theme\nchore(styles/theme): random color theme",
        "diff": "diff --git a/src/common/styles/theme.jsx b/src/common/styles/theme.jsx * {@link https://www.materialpalette.com/}\n*/\nexport default {\n- primaryColorDark: '#00796B',\n- primaryColor: '#009688',\n- primaryColorLight: '#B2DFDB',\n+ primaryColorDark: '#0e1319',\n+ primaryColor: '#1b1e2f',\n+ primaryColorLight: '#303747',\nprimaryColorText: '#F7F7F7',\n- accentColor: '#00BCD4',\n+ accentColor: '#e2c7c0',\nprimaryTextColor: '#212121',\nsecondaryTextColor: '#757575',\ndividerColor: '#BDBDBD'\n",
        "date": "17.09.2017 14:50:28",
        "repo": "metnew/suicrux",
        "type": "chore",
        "sim_msg": "refactor(theme): replace values on primary to secondary",
        "sim_diff": "diff --git a/packages/doc/src/components/Theme/Colors.jsx b/packages/doc/src/components/Theme/Colors.jsx @@ -113,11 +113,11 @@ const Colors = ({ theme }) => {\n<Wrapper>\n<BackgroundColor theme={theme} color=\"primary\">\n<span>primary</span>\n- <span>#231B22</span>\n+ <span>#D8385E</span>\n</BackgroundColor>\n<BackgroundColor theme={theme} color=\"secondary\">\n<span>secondary</span>\n- <span>#D8385E </span>\n+ <span>#231B22</span>\n</BackgroundColor>\n<FeedbackColors theme={theme} color=\"success\" token={0}>\n<span> feedback.success.light </span>\n"
    },
    {
        "msg": "chore: remove vue-template-computer from devDeps",
        "diff": "diff --git a/package.json b/package.json \"styled-system\": \"^5.1.2\",\n\"v-scroll-lock\": \"^1.1.0\",\n\"vue-loader\": \"^15.7.1\",\n- \"vue-lorem-ipsum\": \"^0.0.1\",\n- \"vue-template-compiler\": \"^2.6.10\"\n+ \"vue-lorem-ipsum\": \"^0.0.1\"\n}\n}\n",
        "date": "09.03.2020 09:14:43",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "sim_msg": "feat(app): Upgrade vue-loader to v16.4.1",
        "sim_diff": "diff --git a/app/package.json b/app/package.json \"typescript\": \"4.2.2\",\n\"url-loader\": \"4.1.1\",\n\"vue\": \"3.1.5\",\n- \"vue-loader\": \"16.3.1\",\n+ \"vue-loader\": \"16.4.1\",\n\"vue-router\": \"4.0.10\",\n\"vue-style-loader\": \"4.1.3\",\n\"webpack\": \"^5.35.0\",\n"
    },
    {
        "msg": "chore(carbonads): update script src",
        "diff": "diff --git a/docs/app/Components/CarbonAd/CarbonAd.js b/docs/app/Components/CarbonAd/CarbonAd.js @@ -11,7 +11,7 @@ class CarbonAd extends Component {\nscript.async = true\nscript.id = '_carbonads_js'\nscript.type = 'text/javascript'\n- script.src = '//cdn.carbonads.com/carbon.js?zoneid=1673&serve=C6AILKT&placement=reactsemanticuicom'\n+ script.src = '//cdn.carbonads.com/carbon.js?serve=CK7DT23J&placement=reactsemanticuicom'\nthis.ifRef(ref => ref.appendChild(script))\n}\n",
        "date": "24.05.2018 23:14:54",
        "repo": "semantic-org/semantic-ui-react",
        "type": "chore",
        "sim_msg": "refactor(cmp/modal): remove commented code",
        "sim_diff": "diff --git a/components/cmp/modal/src/index.js b/components/cmp/modal/src/index.js @@ -4,36 +4,6 @@ import PropTypes from 'prop-types'\nimport {CmpModalContainer} from './CmpModal'\nimport CmpServices from '../../services/src/index'\n-/*\n-<div className={CLASS}>\n- <div className={`${CLASS}-content`}>\n- <header className={`${CLASS}-header`}>\n- <img\n- alt=\"Schibsted Spain logo\"\n- className={`${CLASS}-logo`}\n- src={this.props.logo}\n- />\n- </header>\n-\n- <section className={`${CLASS}-body`}>\n- <h3 className={`${CLASS}-title`}>{i18n.title}</h3>\n- <p className={`${CLASS}-message`}>{i18n.body}</p>\n- <FeaturesConsents />\n- <VendorsConsents />\n- </section>\n-\n- <footer className={`${CLASS}-footer`}>\n- <Button type=\"tertiary\" onClick={() => {}} size=\"small\">\n- {i18n.cancel}\n- </Button>\n- <Button onClick={() => {}} size=\"large\">\n- {i18n.saveAndExit}\n- </Button>\n- </footer>\n- </div>\n- </div>\n- )}\n- */\nclass CmpModal extends Component {\nrender() {\nreturn (\n"
    }
]