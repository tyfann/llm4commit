Add emotion as a peer dependency in kiwi-core package.json
Refactor rollup configuration to include a capitalize function and update banner text.
Refactor package.json dependencies and scripts for better organization and efficiency.
chore(lerna): update package.json scripts for better release process
Add Chakra UI Vue v0.4.2 with new dependencies and update @cnakazawa/watch to v1.0.4
Add MIXPANEL_TOKEN environment variable to now.json for tracking analytics.
Update "@chakra-ui/vue" to version 0.5.3 in package.json
Refactor build process and update dependencies for Chakra UI docs.
Update Jupyter dependencies and fix installation issues.
Refactor conventional-changelog command in release script
Refactor rollup.config.js to remove unnecessary code and streamline configuration.
Add react-transition-group package to dependencies.
Refactor Travis CI configuration, update secure API keys, and remove unnecessary deployment steps.
Update package.json version to 5.1.0 and update husky to ^4.2.5
Refactor Dockerfile.build to remove compile.sh after execution
Refactor Dockerfile to optimize package installation and directory structure
Fix regex pattern to correctly identify versioned Go modules.
Refactor Makefile for better readability and maintainability
Refactor CircleCI configuration to simplify test_node_app steps and update npm test command
Refactor Dockerfile to use python3 instead of python for gyp in build stages
Refactor Dockerfiles to use python3 instead of python for gyp dependency.
Update base branch to use the current GitHub reference in extract_strings.yml workflow.
Update message files: Removed unnecessary base parameter in create-pull-request action
Update Alpine base image to version 3.15 and update maintainer label in Dockerfile.
Add fonts-freefont-ttf to Dockerfile.node for additional font support.
Fix docker build command in CircleCI config to include tag for image\n\nThis commit fixes the docker build command in the CircleCI config by including the tag for the image being built. This change ensures that the correct image is tagged and pushed to the repository.
Refactor Docker build command to specify Dockerfile path in CircleCI config
Update xgo base image to go-1.19.5 version
chore(package.json): Update package dependencies and add new packages
Refactor webpack configuration to exclude existing loaders from affecting node_modules/candela. This prevents double application of loaders and improves build performance.
Refactor webpack configuration to exclude base paths from existing loaders and append Candela include paths to loader exclude properties.
Update UpSet dependency to latest commit hash aa6fcbf9573823ce5dae948e48d7a154deacad62
Refactor docs script in package.json to remove unnecessary build step.
Remove outdated version of d3 library from package.json
Update package.json dependencies: \n- Add "UpSet" from https://github.com/ronichoudhury-work/upset#aa6fcbf9573823ce5dae948e48d7a154deacad62\n- Update "onset" to https://github.com/Kitware/setvis#b2b8e7cfdef335a4ee4b2af871e14d203ef3e754\n- Remove "onset" from https://github.com/Kitware/setvis#b2b8e7cfdef335a4ee4b2af871e14d203ef3e754
Refactor package.json to ignore specific directories and update build folder naming.
Update d3 version from 4.8.0 to 3.5.17
Add webpack to build process in package.json
Add configuration files and examples, update ignore list.
Add npm caching to Node.js workflow.
Update Node.js setup to v2 with npm caching for improved performance.
Refactor GitHub workflow to simplify commands and improve linting for wmr and preact-iso packages.
Add environment configuration and Sauce Labs credentials for CI workflow.
Refactor GitHub Actions workflow to rename it to "Release" and update trigger to run on push events.
Refactor GitHub Actions workflow to improve readability and organization.
Refactor release workflow to improve dependency installation and update CI Git user email.
Update Changesets config to use schema version 1.4.0 and add GitHub changelog for Chakra UI Vue repository.
Refactor GitHub workflow to separate dependency installation and bootstrap process
"chore(release): version packages"
Refactor GitHub workflow to run tests with Lerna and add linting step
Add support for running tests on external pull requests.
Refactor GitHub workflow to remove unnecessary steps and improve efficiency
Refactor GitHub workflow to only run tests on push to master branch and pull requests from external repositories.
Update MySQL Docker image version to 5.7.32 in CircleCI config.
Add support for deprecated Docker builds and tag root image accordingly
Refactor CircleCI configuration to use browser-tools orb and remove manual Chrome installation
Update docker orb version to 2.1.4 in CircleCI config.
Update Docker images for PostgreSQL and MySQL to newer versions.
Remove MINIO_STORAGE environment variable from CircleCI config.
Add condition-circle plugin for release verification.
Refactor build process in circle.yml for Candela and examples.
Refactor build process in circle.yml to remove unnecessary installation of Candela as a node module.
Update semantic-release command to include debug flag for pre and post steps.
Add Lerna global installation, update build and test scripts, and change deployment to use Lerna publish.
Refactor CircleCI configuration to remove unnecessary use of sudo and update Lerna installation method.
Refactor build and test scripts to use bash instead of sh for consistency.
Build Candela and the examples in the compile step. Remove separate build step for examples. Build unit test and coverage test bundles.
Refactor build:coverage script to use npm run build:test instead of bash script.
Build the big bundle in addition to examples and test bundles.
Refactor build scripts for production deployment.
ci: Update caching strategy for gittar and yarn to actions/cache@v3
Refactor GitHub Actions workflow to include paths filter for CLI tests.
Update Node.js version to 8 and 9, remove unnecessary server_dev script, and fix npm install command in Travis CI configuration.
Add linting and pre-deploy test steps to GitHub Actions workflow.
Refactor GitHub workflow to separate linting, unit testing, and pre-build tasks
Refactor build scripts for better development and deployment processes
Refactor npm commands in GitHub Actions workflow for consistency
- Added validation for commit message format\n- Updated steps for generating meaningful commit messages
Merge branch: Updated verifyCommit.js to include Merge branch in mergeRE regex.
Refactor GitHub Actions workflow to run on master branch, update npm commands, and add separate job for unit tests.
Refactor test script to run tests once instead of linting and add missing newline at end of file
Refactor GitHub workflow to include separate unit test and type check steps.
Refactor azure-pipelines.yml to update NodeTool task and npm test command.
refactor: Update postinstall script in package.json to include --no-ci flag\n\nThis commit updates the postinstall script in package.json to include the --no-ci flag when running lerna bootstrap. This change ensures that the bootstrap process does not run in continuous integration mode.
Add libgconf-2-4 dependency for Ubuntu 16+, cache npm and Cypress binary folders.
Refactor CI workflow to remove redundant npm installation steps.
Fix typo in ERC1155 README.adoc and clarify implementation of optional extension.
Refactor import statement in erc1155.adoc to use updated path for ERC1155Holder.
Add design principles and update FAQ in README.md
Fix legacyWatch option typo and clarify usage in networked environments
Add solution for nodemon watch errors in faq
Update README.md to include using `npx nodemon` for local installation of nodemon.
Refactor faq.md to provide specific instructions for fixing nodemon watch errors on Mac
Update README.md to include sponsor link with target="_blank" attribute.
Update nodemon watch error troubleshooting instructions for Mac and Linux in faq.md
Add sponsor link to README.md and remove duplicate sponsor link
Refactor code formatting in faq.md for better readability and consistency
Update commit message format link to point to DEVELOPERS.md instead of CONTRIBUTING.md.
Fix issue with nodemon on Fedora by adding workaround for node binary name discrepancy.
Remove sponsor link from README.md
Refactor README.md for better readability and consistency with code snippets.
Fix broken link to Mixmax logo in README.md
Refactor nodemon.json to include multiple file extensions for monitoring
Fix typos and improve readability in README.md
Add workaround for "Port in use" issue with --inspect flag and docker, and workaround for nodemon restarting without changes on Windows.
Refactor README.md to provide more detailed information about nodemon functionality and usage.
Fix typo in faq.md regarding filesystem process utilities in Node.js Docker images. Update 'filtesystem' to 'filesystem' for clarity and consistency.
Add feature to clear console on restart using nodemon's existing architecture
Add instructions to explicitly watch .env file in nodemon configuration
Add gracefully reloading and controlling shutdown features in nodemon
Fix clearing screen on Windows in nodemon.json configuration
Refactor README.md for better grammar and readability
Refactor README.md to clarify instructions for using nodemon
Refactor nodemon README.md to clarify usage of package.json main property
Add links to different casino websites in index.html.
Remove unnecessary sponsor logos from README.md
Refactor nodemonConfig delay value to be a number instead of a string
Update README.md with instructions for installing nodemon globally and locally using npm or yarn. Clarify that with a local installation, nodemon will not be available in the system path and must be run from within an npm script or using npx nodemon.
Fix typo in package name for Fedora and Ubuntu installation
Fix typo in faq.md regarding legacy flag usage
Add instructions on how to watch all file types in a folder using nodemon
Add example `nodemon.json` file to documentation
Fix typo in bug report template - Versions section
Update number of projects depending on Nodemon to about 3 million.
Update nodemon configuration to support unix globbing for directory watching. The globbing pattern must be quoted.
Refactor ignore patterns in config files to use double asterisks for glob matching and update documentation.
Add link to Nodemon website in README.md center image
Add workaround for --inspect flag issue causing process restarts before old process finishes
Add preact/compat alias for React compatibility and suggest using preact-iso for prerendering during production builds.
Add packages table to README.md and update contributing guidelines.
Refactor package descriptions in README.md
Refactor main.js to install Kiwi plugin and provide theme using render function
Refactor: Add parseFAIcons function to parse all Font Awesome Icons in iconSet
Enable List, Tabs, and Textarea components in components.js
Refactor project TODOs and update yarn command in README.md
Update README with correct link to open issues.
Add file-contributors and node-sass dependencies, update sass-loader version
Add default $colorMode value of 'light' to ThemeProvider.
Refactor blockquote styles in default layout to include rounded corners and hidden overflow
Add Vue components for Button, ButtonGroup, and PseudoBox, update Button documentation with usage examples, sizes, variants, icons, loading state, accessibility, composition, custom button, and props.
Add Vue components for Alert, AlertIcon, AlertTitle, AlertDescription, CloseButton, and Stack in Alert documentation.
Add accordion components and documentation to enhance user experience and accessibility.
Add Gridsome Starter to README.md for Chakra UI demos.
Refactor AlertDialog component to use CModal instead of Modal and update initialFocusRef to match CModal structure
Add Vue components for Box documentation, including LiveEditor, CodeBlock, and SEO components. Update Box documentation with usage examples and composition with CBox component. Include information on the 'as' prop and link to Style Props page for all CBox props.
Add Vue components for Tooltip feature, update documentation with usage examples, props, and events.
Refactor Vue imports and components in AlertDialog component and update code blocks in documentation
Refactor CloseButton import to use CCloseButton in Chakra UI Vue package
Add SEO component and update Tag component documentation with usage examples and props table.
Add SEO component and update Spinner documentation with usage examples and props.
Add SEO component and update Stat component documentation with usage examples and props information.
Add SEO component and update content for Switch component documentation. \n\nThis commit adds the SEO component to the Switch component documentation file and updates the content to provide more detailed information about the component, its usage, sizes, switch background color customization, and available props. The changes aim to improve the documentation and provide a better understanding of the Switch component for users.
Add SEO component and update Stack documentation with usage examples and props information.
Add SEO component and update SimpleGrid documentation with usage examples and props description.
Add SEO component and update Select component documentation with usage examples, props, and slots.
Add SEO component and update Slider documentation in slider.mdx\n\nThis commit adds the SEO component to improve search engine optimization and updates the Slider documentation in slider.mdx to provide more detailed information on usage, props, events, and slots for the Slider component. These changes enhance the documentation and user understanding of the Slider component in Chakra UI.
Add SEO component and update Textarea documentation with import, usage examples, props, and events.
Refactor tabs component to use CTab and CTabPanel elements for better clarity and consistency.
Add installation instructions for Chakra UI with Vue CLI plugin and update theme object in getting started guide.
Refactor accessibility documentation to provide summarized descriptions for all authored components
Add Contributors link to footer in all-routes.js
Update "@chakra-ui/vue" to version 0.5.4 in package.json
Add Chakra UI React link to Navbar component
Fix typo in Hero component for Chakra UI docs
Add ability to stack HTML elements using CStack component
Add feGithub icon to Chakra UI plugin configuration
Update @nuxtjs/emotion to version 0.1.0
Fix missing comma in import statement for CColorModeProvider in main.js
Refactor layout wrapper and add instructions for using Chakra components in custom components and markdown pages. Add links to Vuepress Codesandbox starters and Storybook components.
Add role attribute to CButtonGroup component for better accessibility.
Refactor layout in default.vue to center content and set max width to 1440px
Add theme config options for global settings and provide ability to override specific properties using extendTheme function.
Add responsive syntax examples and custom breakpoints configuration in responsive-styles.mdx
Refactor target check from 'server' to 'node' for consistency across codebase.
Add configuration for a more complex setup behind a reverse nginx proxy in the README and code example.
Refactor devServer configuration in Razzle for better proxy handling
Add link to full configuration in typescript example project
Add options for customization in Razzle configuration with default values.
Add Now v2 configuration and set NODE_ENV to production in README.md
Refactor: Update description of webpackOptions in customization.md
Refactor debugging commands in getting-started.mdx page
Deprecate `modify` in Razzle 3.3 and replace with `modifyWebpackConfig` in Razzle 4.0
Update link to babel preset file in customization.md to point to the correct branch (finch) instead of next.
Add support for experimental features in Razzle 4.0 release
Update README.md with revised badge order and formatting.
Add Spectrum community badge to README.md for community engagement.
Add support for aliased paths/modules in Jest test runner configuration. Now you can import modules using aliased paths like '@extra/components/Button'.
Add instructions for installing razzle peer dependencies and choosing webpack version, and suggest adding specific package versions to resolutions in `package.json`.
Refactor debugging commands in getting-started page to include yarn support
Add Razzle config, create web.config, zip Razzle project, enable zip deploy in Azure web app deployment.
Add AWS CDK dependencies and update file paths for Razzle deployment on AWS.
Refactor Azure deployment script for better readability and maintainability
Add instructions for deploying Razzle on Plesk with Node.js support
Refactor Razzle deployment on AWS: \n- Added dependencies for AWS CDK and Razzle project\n- Initialized CDK app and added necessary configurations\n- Updated file paths and names for Razzle CDK stack\n- Bootstrapped and deployed the project with CDK
Refactor webpack configuration for AWS deployment options
Update CONTRIBUTING.md with new commands and instructions for adding examples and using add-dependencies.
Refactor CONTRIBUTING.md: Use examples/basic as template and update instructions for adding examples
Update CONTRIBUTING.md: Fix formatting for 'Use `examples/basic` as template' section
Add instructions for setting up static export in npm export command
Refactor contributing.md: Update commands and workflow for working on razzle core with examples
Add options for non-interactive build and custom env file in getting-started guide
Fix postcss resolution issue by adding specific version to resolutions in package.json.
Fix broken link in console message about css issues\n\nThis commit fixes a broken link in the console message regarding css issues by updating the URL to point to the correct resource. This change improves the user experience by providing accurate information for troubleshooting css problems.
Add examples section to README.md and include link to Razzle examples repository.
Update Razzle core dependencies and peerDependencies
Fix common issues with css and node module resolution. Add instructions to prevent node from using css files as modules. Update razzle.config.js to handle externalization of modules with css. Add information about resolutions in package.json for npm users.
Add postcss 8.2.4 to resolutions in package.json for npm.
Refactor webpackOptions to exclude react-images-upload from node externals
Remove outdated information and update debugging instructions in getting-started page.
Update buildType options in customization.md to include 'serveronly', 'iso-serverless', and 'serveronly-serverless' for more flexibility.
Update TypeScript example project link in README.md to point to the correct location.
Add htmlWebpackPlugin tags for head and body in single-page-applications.md
Add link to Razzle 3 docs and update index page heading
Fix devserver not starting and no errors showing up, make razzle more verbose. Add option in razzle.config.js for verbose output. Enable debugging with Inspector using `npm start -- --inspect=[host:port]` or `yarn start --inspect=[host:port]`.
Add transpilation of external modules and absolute imports configuration in customization.md
Refactor webpack configuration to include specific modules for web target.
Refactor SCSS configuration for development and production environments
Refactor babelRule to include specific modules instead of externalizing them
Refactor winget.md: Updated commands for upgrading packages, listing installed packages, and updating specific packages.
Update git.md with changes related to Git version 2.28, including setting init.defaultBranch and updating remote repositories for cloning and pushing to GitHub.
Fix typo in DropdownExampleOpenOnFocus component.
Add section on using propTypes in CONTRIBUTING.md
Refactor Popup component propTypes for clarity and consistency
Fix broken links in README.md to point to the correct URL.
Fix typo in Grid.js propType description
Refactor Accordion.Title component to include 'as' prop for dynamic accordion titles. Fix Typings issue for setting typical html element props.
docs(changelog): update changelog
Add new product link to README.md
Fix broken links in README.md and update URL to http://react.semantic-ui.com/
Add Lifebot website to the list of great products built on Semantic-UI-React.
Add examples and tutorials section to README.md with a listing of example projects and guides for integrating Semantic-UI-React. Includes a modified react-redux Todo List example using Semantic UI components.
Add instructions for including Semantic UI minified CSS file in index.js
Fix typo in Container component prop documentation.
Add Netflix's Edge Developer Experience team's internal apps link to README.md
Add production-ready, performance-first, optimized, robust, fully-featured boilerplate/example for Progressive Web App in README.md
Fix typo in Introduction.js affecting the passing of extra props to rendered components.
Refactor ButtonExampleGroupVertical to remove unnecessary 'attached' prop and improve code readability.
Update max rating in RatingHTML to 5 for consistency with Rating component.
Refactor IconSearch component to focus on the whole input field instead of just the input element.
Refactor ItemExampleFloated component to use Image instead of ImageComponent
Refactor TableExampleSortable component to use ternary operator for sorting direction in Table.HeaderCell
Add href attribute to Home link in Introduction.js View
Refactor ComponentProps.js to use lodash's _.includes method for filtering object properties.
Add https://sublimefund.org to the list of great products built on Semantic UI React in README.md
Refactor IconSearch component layout and add information about icon set.
Update ComponentExample.js to set width to 100% when showCode is true.
Add client-side redirect to HTTPS for react.semantic-ui.com to ensure secure connection.
Add https://appfollow.io to the list of great products built on Semantic UI React.
Fix broken link to CircleCI in README.md
Refactor StickyLayout component to include sticky menu and overlay menu functionality
Add new website according.to.localsourc.es to the list of great products built on Semantic UI React.
Update README.md with new dependency status badge and remove Gemnasium badge.
Refactor handleSearchChange method in DropdownExampleSearchQuery to destructure searchQuery parameter for better readability and maintainability.
Refactor handleSearchChange method in DropdownExampleRemote to correctly update searchQuery state.
Update README.md with new product website seeuletter.com
Refactor PortalExampleControlled component to simplify state initialization and Portal component usage.
Update README.md: \n- Change "Good First Contribution" to "Good First Issue" for consistency\n- Update the link for "good first issue" label to point to the correct URL
Refactor ButtonExampleGroupLabeledIcon to use vertical layout and add icons
Fix typo in label for last name input in FormExampleSubcomponentId
Refactor script tags for prop-types and react-dom based on production environment.
Fix incorrect label in AccordionExampleForm for Last Name input
Update link for building CSS with Meteor in README.md
Add new platform URL to list of great products built on Semantic UI React.
Refactor package installation instructions to use Yarn instead of NPM
Refactor AdvertisementExampleBannerTop component to update test attribute from 'Vertical Banner' to 'Top Banner'
Refactor README.md: Updated project name and description for SUIcrux universal starter with Semantic-UI-React.
Add bandwidth-hero project to list of great products built on Semantic UI React.
Refactor description in HeaderContentExamples component to clarify usage of subheader prop.
Add new website to list of great products built on Semantic UI React.
Fix incorrect prop name in StepExampleEvenlyDivided component
Add moneytracker.cc to the list of great products built on Semantic UI React.
Add tax.cryptact.com to the list of great products built on Semantic UI React.
Add siblingRange prop to PaginationExampleCustomization component
Refactor pagination icons in TableExamplePagination component
Refactor ComponentExample.js to improve handling of default exports
Fix typo in StickyLayout component regarding adding styles when attaching the top menu.
Fix typo in ResponsiveExampleFireOnMount.js affecting breakpoints.
Adjust CarbonAd component minHeight to 199px for better ad display.
Refactor text in GridLayout.js for clarity and consistency
Refactor description in ListContentVariations component to correct typo
Refactor ExampleSection title in ListVariations component to 'Variations' for clarity.
Add documentation for the new "Releasing" section in CONTRIBUTING.md and update the commit message guidelines.
Refactor README.md: Update "Built With" section and add "Accessible" feature.
Fix icon name in ModalExampleScrollingContent component
Fix typo in Form.Group widths prop declaration and update documentation message.
Refactor: Correct casing for LayoutsLayout and LayoutsRoot components
Update Semantic UI React version requirements in Usage.js\n\n- Update version requirements for SUI 2.2 to 0.80.2 and below, and for SUI 2.3 to 0.81.0 and higher\n- Update required semantic-ui-react version to 0.81.2 or higher\n\nThese changes ensure compatibility with the specified versions of Semantic UI React and maintain functionality.
Refactor ButtonExampleAnimated to use 'arrow right' icon instead of 'right arrow' icon.
Refactor responsive design in HomepageLayout for better tablet and mobile support
Refactor IconExampleIconGroup to use 'circle outline' icon instead of 'thin circle' icon
Refactor IconExampleLoadingGroup to use 'circle notch' icon instead of 'sun' icon for loading state.
Refactor IconExampleFitted to demonstrate fitted and non-fitted icons.
Refactor ComponentExample layout in ComponentExample.js for better structure and readability
Update CircleCI badge URL to use 'github' instead of 'project' for consistency.
Add gender selection field to FormExampleFieldControlId.js
Fix description in GridVariationsExamples component to accurately reflect the functionality of stretching elements based on height.
Update external script and stylesheet URLs to use HTTPS instead of HTTP.
Add reference to CSS setup in README.md.
Add SearchExampleStandard and SearchExampleCategory components to ComponentExampleRenderSource for Search module.
Update Semantic UI CSS package link to use cdn.jsdelivr.net for better reliability.
Add informational message in TextAreaTypesExamples component about wrapping TextArea with Form component for proper styling.
Refactor FixedMenuLayout to remove unnecessary Grid.Row and update List size in footer.
Refactor code to conditionally load prettier plugins based on browser environment
Refactor formatCode function to handle browser and non-browser environments
Fix Checkbox onClick to onChange event in ComponentProps component.
Refactor PlaceholderExampleLineLengthWithHeader component by removing unnecessary div element
Refactor ResponsiveExampleMaxWidth to include lower width limit for maxWidth of 2569px
Refactor build script to include correct git command for generating changelog.
Refactor ModalDescription component to clarify its purpose and update its functionality.
Refactor DropdownExampleFloating to use className 'button icon' instead of 'as' prop for Button styling. This change improves code readability and maintains consistency in styling.
Refactor DropdownExampleRemote component to use class properties and arrow functions for better code readability and maintainability.
Refactor ComponentDoc to use static getDerivedStateFromProps for better performance and readability
Refactor ComponentProps to use static getDerivedStateFromProps for better performance and readability
Fix typo in DropdownUsageExamples component message.
Fix tabindex attribute to tabIndex in BootstrapMigrationLayout.js
Fix typo in Usage.mdx file - corrected 'create-app-react' to 'create-react-app' for compatibility with Semantic UI React. This change ensures accurate setup instructions for users.
Update URL in EmbedExampleCustom to use HTTPS protocol.
Refactor: Update installation instructions and configuration for LESS support with @craco/craco and @semantic-ui-react/craco-less
Refactor handleItemClick function in MenuExampleHeaderVertical to include event parameter and destructure name from it. This change improves the handling of menu item clicks in the component.
Update CONTRIBUTING.md to recommend using yarn for contributions and provide a link to yarnpkg.com.
Fix typo in label for wireframe visibility checkbox
Refactor README.md to use consistent code formatting for custom Icons
Update README.md with development guidelines and installation instructions
Refactor LabelExampleImageColored.js to update names in image labels
Refactor TableExampleSortable component to use React hooks and reducer for sorting functionality
Refactor Tab component PropTypes to specify Grid usage for vertical menus.
Refactor SearchExampleStandard to use functional components and hooks
Refactor SearchExampleStandard component to use functional components and hooks for state management and search functionality.
Fix typo in Placeholder.js - corrected a spelling mistake in the comment to improve code clarity.
Add visual testing section to CONTRIBUTING.md
Fix sorting functionality in TableExampleSortable.js to prevent mutating original data array.
Fix bug in Image component loading attribute, update TableExampleSortable documentation, and support React 17 in peerDependencies.
Refactor Introduction.js to use ModernAutoControlledComponent instead of AutoControlledComponent
Add alt attribute to logo image in MenuExampleStackable component
Fix typo in TextAreaUsageExamples component regarding autoHeight support.
Fix typo in Confirm modal description
Refactor CONTRIBUTING.md for clarity and consistency
Add support for specifying global variables via command line arguments. Allows users to define global variables in a key=value format using `--global-var`, with the ability to add multiple global variables by using the flag multiple times.
Update README.md to clarify usage of global variables in newman.run command.
Add timeoutScript option to specify script execution time in milliseconds.
Add support for passing global environment variables as an array of key-value pairs in options.globalVar and environment variables in options.envVar. This allows for reading and overwriting global and environment variables respectively.
Update README.md to specify JSON or CSV data source file for iteration. \n\nThis commit changes the README.md file to specify that a JSON or CSV data source file can be used for iteration, instead of just a CSV file. This update provides more flexibility for users when specifying data sources for iteration.
Update README-dev.md to include recursive submodule update command.
Add basic at rules support and alternative syntax for space and comma separated values in JSS syntax documentation.
Fix style-loader options attribute typo in csp.md
Refactor: Rename button class to label class for consistency in styling.
Refactor async functions conversion to generators in babel-preset-react-app
Update jest-enzyme installation in README.md to remove version restriction
Update Flow links to use the correct URL and fix the link to Flow documentation.
Fix build command in deployment.md for staging environment
Add tip for adding accessible title to imported SVG React Component
Remove plugin `@putout/plugin-remove-empty-pattern` from list of plugins.
Refactor 'remove-duplicate-extensions' rule to use require instead of direct import
Refactor lint function in ESLint README to accept source instead of code.
Remove unused `removeDebugger` import in eslint README.md.
Add createPlugin function for ESLint plugin creation.
Refactor `__args` template value to handle linked arguments in putout-script.md
Add linked template value `__a` and linked args `__args__a` to abstract away `Identifiers`, `Expressions`, and `Literals` in the putout script documentation.
Refactor template values in putout-script.md for clarity and consistency
Refactor documentation for better readability and consistency
Refactor console.log statement in traverse function to output pathStore instead of listStore. This change improves the accuracy of the output in the engine-runner package.
Refactor code to export `lint` function using eslint in engine-processor package.
Update README.md to include information about external processors and how to enable them.
Refactor code to use `await import` for `fs/promises` in Node.js environment
Fix typo in README.md and update code snippet for skipping declaration.
Update README with guidelines on when not to use nested destructuring.
Add note about magic properties not being available within `x-data` in README.md
Update x-on directive documentation with event reference link.
Fix typo in Components index.js for 'Breadscrumbs' to 'Breadcrumbs'
Add CoreUI-Free-Bootstrap-Admin-Template to the list of organizations and projects using `reactstrap` in the README.md file.
Fix typo in Layout.js for variable width content.
Fix missing semicolon in ButtonOutlineSource import
Refactor TablesPage component to use Table.propTypes instead of Card.propTypes for better clarity and consistency.
Refactor AlertDismiss component to bind onDismiss function and update state properly
Fix typo in ButtonDropdownPage component for danger color.
Update README.md with CDN usage information and shields for NPM version and license. Add information on including Reactstrap via CDN and required dependencies.
Include reactstrap CDN link and dependencies in documentation
Fix npm install command in Home/index.js and import Bootstrap CSS in src/index.js
Add PropTypes for Input component in FormPage component
Add PropTypes for DropdownItem component in DropdownsPage.js
Update react-popper version to 0.7.4 for compatibility with Reactstrap 5.0.0-alpha.3
Add closeAll functionality to ModalNested component
Add unique IDs to carousel items and update styling for custom tag.
Refactor ProgressPage component PropTypes to use 'striped' instead of 'stripped' for clarity.
Refactor README.md to update example App.js link to Thomas-Smyth's gist.
Add InputGroupText component to InputGroupAddon.js for better text styling in InputGroup components.
Update Bootstrap CSS import to use minified version in index.js file.
Update Reactstrap CDN links to version 5.0.0 and React-Popper to version 0.8.3
Add size prop to ModalsPage component for specifying modal size.
Refactor Dropdown component to use prevState in setState for toggle method
Update Bootstrap and reactstrap versions in README.md and import Bootstrap CSS in src/index.js
Add UncontrolledCollapseExample component to CollapsePage for demonstrating uncontrolled collapse behavior.
Fix PropTypes declaration in CarouselPage component
Update create-react-app instructions link in README.md to point to the correct location.
Refactor PropTypes in FormPage component and related components in FormPage.js
Add reference to Transition component in CollapsePage propTypes and provide link to Transition documentation.
Update README.md with simplified npm install commands and import instructions for Bootstrap CSS.
Refactor BreadcrumbNoList.js to use a div for listTag instead of nav for better styling flexibility.
Fix typo in PropTypes comment in ModalsPage component
Refactor Input component PropTypes and code formatting
Fix typo in AlertsPage component - disable fade instead of disbaled
Add new PropTypes and defaultProps to Button component
Add fade prop to AlertsPage componentPropTypes to control alert fading transition.
Add min and max attributes to Input component in InputGroupOverview example
Refactor Content component to sort items by name before rendering.
Refactor DropdownItem styles to use '100px' for maxHeight instead of 100
Refactor InputGroupOverview.js to use InputGroupText instead of text content in InputGroupAddon.
Add new prop 'returnFocusAfterClose' to ModalsPage componentPropTypes to control whether the element that triggered the modal to open should be focused after the modal closes. This change enhances the accessibility and user experience of the modal functionality.
Add reactstrap-scrollspy to the list of organizations and projects using `reactstrap` in the README.md file.
Fix image path in CardGroups.js example
Refactor Collapse component to use isOpen state instead of collapse for better readability and consistency.
Refactor DropdownToggle in CustomDropdown.js to remove redundant onClick event handler.
Refactor InputGroupOverview.js to use InputGroupText component instead of directly adding text inside InputGroupAddon.
Update deployment condition to check for Travis tag instead of branch.
Add options to select inputs in FormGrid.js for better user experience
Refactor DropdownItem styles to use '100px' for maxHeight instead of 100
Update default hide delay in TooltipsPage component to 50ms
Refactor npm install commands and update Bootstrap CSS import in src/index.js
Refactor ButtonDropdownPage.js to use split DropdownToggle instead of caret for better UI design.
Refactor UncontrolledCollapse component to include defaultOpen prop for controlling initial state.
Add className prop to Dropdown componentPropTypes to allow custom styling.
Refactor inline checkboxes in InlineCheckboxes.js for better accessibility and structure
Refactor Alert component to remove unnecessary dismiss prop and set isOpen by default.
Add feature to use cssModule to customize component CSS class names and set global custom classes with setGlobalCssModule.
Add instructions for installing Nuxt and Firebase dependencies in README.md
Add settings option to Firestore configuration for Firebase initialization. This allows for custom settings such as `host` or `ssl`. See more [here](https://firebase.google.com/docs/reference/js/firebase.firestore.Settings).
Add note about Firestore settings only working in SPA mode due to issue in Universal mode.
Add local persistence for auth service in README.md
Update README.md for Firebase client SDK login and session persistence\n\n- Change badge type from "error" to "warning" for server side Firebase client SDK login\n- Add warning message for session persistence and provide code snippet for proper initialization outside of server request callback\n- Add danger message advising against using this feature for high traffic sites\n\nThis commit updates the README.md file to provide clearer instructions and warnings for using Firebase client SDK login and session persistence.
Fix session persistence issue by including @nuxtjs/firebase module in external server implementation. Initialize nuxt build outside of server request callback for proper session management.
Add Algolia search integration to the themeConfig in Vuepress config.
Add loginDelay option to serverLogin feature
Refactor README.md: Fix typo in disclaimer section
Fix typo in README.md for Firebase Analytics and Firebase Remote Config initialization.
Add idToken to server user object and update nuxtServerInit to handle the new token parameter
Fix issue with using settings() in Universal mode and provide workaround in nuxt.config.js
Add option to enable collection for messaging in Firebase Analytics.
Refactor experimental-alert component to use custom alert component for displaying info message.
Refactor: Remove disclaimer section from index.md
Add Algolia search integration to settings.json
Add note about Firebase authentication limitations on the server side in auth.md
Add support for using namespaces in vuex store actions/mutations for authUser handling in onAuthStateChanged() listener.
Add Firebase polyfill setup and SSR mode integration with Strapi in FAQ section
Fix issue with `defaultConfig` option in RemoteConfig (#281)
chore: Update CHANGELOG.md for version 7.0.0 with added features, bug fixes, and improvements.
Ignore unnecessary files and directories, add logs and runtime data, and update coverage settings.
Postfix branch name with issue number for open issues, rebase pull requests to master branch before merging, and generate meaningful commit message following specific steps.
Refactor parentName mixin to include three levels of route hierarchy
Update ALGOLIA_APP_ID and ALGOLIA_API_KEY values in environment.js
Update ALGOLIA_APP_ID and ALGOLIA_API_KEY values in environment.js
Refactor stdin handling for nodemon.js to improve restart functionality and prevent key press interference.
Add event listener for message passing when forking a child process.
Add feature: Remove output directory before building\n\nThis commit adds a feature to remove the output directory before building to ensure a clean build each time. This change impacts the build process by ensuring that any existing output files are removed before generating new ones.
Add support for using Yarn as the package manager in create-wmr script
Refactor processGlobalPlugin to include browser flag and update processObj structure
Enable parsing of 'await' outside of functions in acorn-traverse createContext function.
Remove console log statement in onRefresh method
Refactored TooltipControls component to include a note object with id, title, and content properties, and updated handleChangeTitle and handleChangeContent methods to reflect the changes. Updated saveNote method to handle saving notes with an id if available.
Refactor Tooltip component to include cloned data in h function arguments
Add arrow to Tooltip in App.vue for better visual indication
Refactor keydown event handling in MenuOption and MenuOptionGroup components
Add event emitters for 'close', 'open', and 'toggle' in Popover component.
Add Icon component to Customized Slider in UI | Slider story.
Refactor storybook configuration to load stories from kiwi-core package in addition to stories folder
Add storySort option to Storybook theme in .storybook/config.js
Refactor asFragment method in test-utils.js to accept innerHTML parameter for improved flexibility.
Add closeOnEsc prop to Drawer component for controlling whether the drawer closes on ESC key press.
Add Vue support to Drawer component in Storybook
Add waitMs function to test-utils.js for handling asynchronous delays.
Add documentation for AlertDialog component and accessibility features
Refactor CAvatar component to remove unnecessary attrs and improve accessibility
Refactor CBox component documentation and add @chakra-ui/vue Box introduction
Add breadcrumb components for navigation in Chakra UI Vue.
Refactor CBreadcrumb component by importing baseProps and utility functions from config and utils respectively.
Add documentation and accessibility links to CCheckbox component
Refactor CReset component lifecycle hook from mounted to created
Refactor CSS class names in CCircularProgress component tests
Refactor CControlBox component for accessibility and keyboard navigation
Add @chakra-ui/vue Editable components with context and state management.
Add CInputElement, CInputLeftElement, and CInputRightElement components for adding icons or buttons inside the input component.
Refactor CInputGroup component to include CInputElement and update data attribute naming
Add support for customizing the element type in CMenuItem component
chore: Update package.json scripts for storybook with cross-env for better compatibility
Add srcset attribute to CImage component for better image handling.
Add ChakraIcons type, update Vue and Provides interfaces, and export Provides from CColorModeProvider and CThemeProvider.
Refactor devServerPort logic to allow custom port configuration
Refactor postcssLoadConfig import, add missing semicolons, and improve code readability.
Refactor file and chunk naming to use contenthash instead of hash for better caching efficiency.
Add manifest file generation for all files in build directory\n\nThis commit adds a new feature to output all files in a manifest file called assets-manifest.json in the build directory. This manifest file includes all files, including entrypoints and non-chunk files, categorized by file type. This change enhances the build process by providing a comprehensive overview of all files generated during the build.
Refactor util.js to include functions for managing workspace packages and examples, and update setupStage function to use new utility functions.
Refactored Single Page Applications documentation and updated template in Razzle.
Add SSR logic and data fetching support to static export functionality
Update ESLint configuration to include TypeScript files and enforce linting for .ts and .tsx files.
Refactor ESLint configuration in razzle-plugin-eslint
Refactor paths.js to allow custom app path configuration
Refactor webpack watchIgnorePaths configuration for consistency in createConfigAsync module
Support for not released plugins and handling object type plugins.
Refactor webpack configuration to customize output filenames and paths
Refactor nodeExternalsFunc to include context parameter in notNodeExternalResMatch call
Refactor webpack configuration to optimize server bundle and add TerserPlugin for production build.
Add debug logging for webpack options and config in createConfigAsync.js
Refactor babel-loader configuration to include support for static ESM files.
Add option to disable node CSS handling in webpack configuration.
Refactor build script to check for RAZZLE_NONINTERACTIVE environment variable in production mode
Refactor build script to include CI environment check
Refactor install function to use verbose option for stdio configuration
Refactor webpack configuration to include IS_DEV_ENV for development environment detection.
Add onMount hook to dynamically generate table of contents for headings in [slug].svelte file
Add external script for analytics tracking.
Refactor optional chaining explanation and add credit to Nicky Meuleman
Add functionality to display enums for PropTypes in ComponentProps component
Add autoCapitalize prop to htmlInputPropNames in Input.js
Refactor htmlInputPropsUtils.js to update htmlInputAttrs with corrected attribute names.
Add generics export in index.d.ts
Refactor Portal component to use Ref component for handling DOM node reference.
Refactor customPropTypes.js to include PropTypes.symbol in the 'as' function for rendering component as a given prop value.
Add StrictTextAreaProps to TextArea component in addons\n\nThis commit adds the StrictTextAreaProps type to the TextArea component in the addons, providing stricter typing for TextAreaProps.
Add support for parsing `=` separated key-value pairs into Postman variable list like arrays via `--global-var` CLI option. This allows users to specify global variables in a `key=value` format.
Refactor logo styling and add router link to homepage in App.vue
Refactor search functionality in RecipeFind.vue to improve ingredient and keyword filtering and sorting.
Refactor Favorites.spec.js to include tests for both populated and empty states
Add WHERE clause to filter results by height in Postgres query
Add functionality to exclude specific public keys from metrics calculation.
Refactor code to handle ties in leaderboard ranking and log index and metric values for debugging purposes.
Refactor print statements in commands.ml to use eprintf instead of printf
Refactor TSTypes.ts to update type declarations and add keypair type.
Refactor code to use nullish coalescing operator (??) for memo field in payment and stake delegation methods
Refactor MinaSDK.ts for improved readability and consistency in handling payment and stake delegation signatures.
Refactor Mina Signer SDK to support signing strings, payments, and delegations using Mina's key pairs for various networks
Refactor MinaSigner.ts to ensure network is stored in lowercase for consistency
Validate specified network in Client constructor
Add support for public key serialization in base58 format\n\nThis commit adds support for serializing public keys in base58 format in the fields_derivers_snapps module. It introduces a new function to handle public key serialization and deserialization, enabling the representation of public keys in base58 format. This change enhances the functionality of the codebase by allowing the serialization of public keys in a more user-friendly format.
Add 'text-decoration-thickness' default unit to support text decoration thickness styling.
Refactor cube_samplepack.pug to add new pack button and adjust alignment
Add `to_set` method to BiwaScheme.nil object.
Fix potential issue with null value in dump_closure function
Refactor parser.js: \n- Added imports for necessary modules and classes \n- Replaced BiwaScheme references with local references \n- Updated error handling to use BiwaError instead of BiwaScheme.Error \n- Updated object creation to use local Pair and Sym classes \n- Improved character handling and error messages \n\nThis commit refactors the parser.js file by updating imports, error handling, and object creation for better code organization and functionality.
Refactored build process by removing unnecessary files and using rollup for bundling. Updated Makefile accordingly.
Add version information to the banner and update terser plugin configuration in rollup.config.js
Refactor REPL script to use main-browser.js module and expose bs_eval function to window
Refactor code to use ES6 modules and update global variables for better organization and encapsulation.
Refactor error.js to include form information in error message
Add mapList method to Pair class for mapping elements in a list.
Add forEach method to Pair class for iterating over car values in the list. This change enhances the functionality of Pair class by providing a convenient way to iterate over car values. The addition of this method improves the usability and flexibility of the Pair class.
Refactor CSS styling in tracer.html and add a new left div for better layout organization.
Add keyboard shortcuts for moving through the dump history in tracer.html
Refactor Pair class methods to handle error cases and improve code readability
Update icons in pagination and refresh buttons to use Font Awesome icons with new names.
Refactor TypeScript interfaces and export necessary types for better code organization and reusability.
Add new URL for testing page in sitemap and update last modified date\n\nCommit message: "Add new URL for testing page in sitemap and update last modified date"
Refactor precommit script to add generated sitemap file to git staging area
Refactor MultiStepForm to pass stepNumber and totalSteps props to CurrentStep component
Refactor test file for ${componentName} to remove redundant snapshot tests and improve readability
Refactor SocialLoginGroup Github button styles to include white and black themes.
Add partner types to partners data for better categorization.
Refactor SponsorsSection component to use Container, Heading, and separate Paid and In-Kind sponsors sections
Refactor donation form to use Virtuous software for improved functionality
Add a way for developers to access tab scope and control over available tabs in the tab component
Add $el property to saferEval context for component initialization.
Refactor Modal component to handle toggle function more efficiently
Add warning utility functions for deprecation messages.
Refactor Modal component to pass event object to toggle function
Add "sideEffects": false to package.json to optimize tree-shaking and improve performance.
Add constructor to Input component for managing refs and focus functionality
Refactor Form component to use class syntax and add methods for getting a reference and submitting the form.
Refactor code for better readability and maintainability
Fix issue with focusing on triggering element in Modal component
Add innerRef prop to Badge component for better control over DOM reference.
Add innerRef prop to CardBody component for better control over DOM element references. This change allows users to pass a ref to the underlying DOM element, enhancing flexibility and customization options.
Refactor PopperContent component to include outOfBoundaries prop in render output
Add Firestore settings configuration and enable persistence in main plugin.
Add idToken to user object in ssrAuth.js
Add support for Firebase Analytics initialization on client side and browser compatibility.
Add support for startAngle, endAngle, innerRadius, and outerRadius in arc marks configuration.
Refactor caption.js to include isTemporal check and update time formatting for better accessibility.
refactor: Update RangeConfig types to use Color type for color schemes
Add new view configuration options, dataflow and rendering methods, signals, event handling, image export, data and scales manipulation, and undocumented features.
Refactor View class constructor and introduce ViewOptions interface for better code organization and readability.
Add optional opacity, fillOpacity, stroke, strokeWidth, strokeOpacity, and cornerRadius properties to SceneRect and SceneSymbol interfaces.
Refactor Tizen platform tools to use default certificate names and security profile names.
Add error handling for when a suitable task cannot be found in findSuitableTask function
Refactor xcodeParser.js to handle excludedArchs with object values
Add support for react-native-carplay plugin with version 2.0.0, including iOS configurations for CarPlay integration.
Refactor buildLightningProject to include target option in lng dist command
Refactor project configuration in SDK Lightning to include platform-specific injects and clean file writing.
Refactor code to include CLI constants and improve logging in buildLightningProject function
Refactor import order in sdk-electron/index.js and update electron-builder command with platform flag
Add required xcodebuildArgs parameter for passing custom xcodebuild arguments.
Fix compatibility issue with -arch and -destination params in buildXcodeProject function
Add support for parsing integers in plistParser.
Refactor Glo component to add new methods for node and edge manipulation.
Refactor VisComponent class to include abstract methods for render, update, and destroy operations
Refactor VegaChart update method and add destroy method for better data handling and cleanup.
Add support for custom x and y scales in ScatterPlot component
Add support for custom x and y axis configurations in ScatterPlot.
Add npm token injection to environment in circle.yml
Refactor build process to filter out specific plugins and add support for prerendering.
Refactor webpack build scripts to improve error handling and display, and strip babel loader prefix from module names
Refactor webpack base config to add alias for 'preact-compat' based on compatibility setting.
Add VR status localization strings for timer, players, CPU, online, and devices.
Refactor isJWT regex pattern to support JWT tokens with optional padding
Refactor display name validation in isEmail.js and add a new function validateDisplayName.
Update isAlpha and isAlphanumeric methods to include 'he' locale in the list of supported locales.
Update isAlpha and isAlphanumeric methods to include 'vi-VN' locale and update default locale to 'en-US'.
Update isAlpha and isAlphanumeric methods to include additional locale options.
Fix symbolRegex to include '@' symbol in isStrongPassword validation.
Refactor isAlpha and isAlphanumeric methods to include 'ja-JP' locale option.
Refactor isAlpha and isAlphanumeric methods to include additional locales and update default locale to ko-KR.
Add RollbarProxy integration for sending JSON payloads in _makeRequest function
Update defaultOptions in rollbar.js to set wrapGlobalEventHandlers to false.
Refactor start script and add prepush message in package.json
Refactor webpack production configuration:\n- Added UglifyJSPlugin for minification\n- Re-enabled ShakePlugin for optimization\n- Updated banner information\n- Fixed prefix for FaviconsWebpackPlugin\n- Temporarily commented BabiliPlugin due to build issues on Linux Alpine\n- Added PreloadWebpackPlugin for script preloading\n- Enabled Subresource Integrity for production environment
Refactor build scripts and server start commands for better organization and production deployment.
Refactor webpack configuration to include static and images directories, update file-loader options, and remove unnecessary plugins.
Set default values for BASE_API and PORT environment variables
Refactor server.js to use environment variables for port and base API, add API route and SSR handler, and update server start message.
Refactor express middleware to include authentication check
Refactor authentication-related code and update imports in SSR index.js
Add proxy for API requests using http-proxy
Refactor Babel configuration for development environment
Update .eslintrc.json to include new global variables Raven and ga.
Add JWT token generation and logging in auth API endpoint
Refactor global objects and dependencies in server/index.js
Refactor server.js to use chalk for colored console output and update API and SSR handling.
Add console logs for lazy loading and component readiness in RouteAuth component
Refactor webpack configuration for production build, optimize CSS assets processing, and update banner plugin configuration.
Refactor dev script to use concurrently with color-coded output and process names
Refactor webpack base config to use destructured process.env variables
Fix whyDidYouUpdate package issue and enable it conditionally in development environment.
Enable ModuleConcatenationPlugin in production webpack config.
Refactor webpack.prod.babel.js to remove OfflinePlugin and update file removal logic
Refactor webpack.prod.babel.js to include static analyzer mode in BundleAnalyzerPlugin
Refactor webpack configuration to include url-loader for images and img-loader for optimization.
Refactor OfflinePlugin configuration for better caching and offline functionality
Add webpack plugin to replace CSS module loading with 'node-noop' to improve build performance.
Refactor App component to use routes passed as props in `Root` component
Refactor Root component to pass routes as props to App component
Add support for .sass files in webpack resolve extensions.
Refactor lazy loading logic in routing to support different loading modes based on environment
Add webpack alias plugin configuration for development and test environments.
Update ESLint configuration to include jsx-a11y plugin and adjust rules for better code quality.
Refactor webpack config to use destructuring and default values for environment variables
Refactor webpack configuration by removing unused plugins and updating devtool option
Refactor Babel configuration for development and test environments, removing webpack alias plugin and adding module resolver for better code organization and maintainability.
Add test case for handling LOCATION_CHANGE to own path in posts reducer
Refactor webpack configuration and server setup for improved development experience and code organization.
Refactor auth action tests to use 'test' instead of 'it', handle server response error in LOGIN_AUTH_SUCCESS test, add LOGIN_AUTH_FAIL test.
Refactor webpack configuration to add WriteFilePlugin and update entry point for hot reloading.
Refactor webpack config to update variable names and add isProduction flag
Refactor webpack server configuration and hot reloading functionality\n\n- Removed 'use strict' directive and added file documentation\n- Updated LogPlugin instantiation with config.PORT parameter\n- Modified webpackHotFullStack call to target server compiler\n- Simplified export function signature by removing unused wss parameter\n\nThese changes improve code readability and maintainability while enhancing hot reloading functionality for the server.
Refactor XHR wrapper function to improve readability and maintainability
Add Flow preset, update lodash plugin configuration, and adjust react-hot-loader plugin for development environment.
Add Flowtype plugin to ESLint configuration for type checking support
Refactor client index.jsx: Update imports, handle initial state, and configure app for rendering.
Refactor Users component to use Flow types and update lifecycle method
Refactor RoutingWrapper component to use flow types and update PropTypes, add RouteItem type, and optimize authCheck function.
Refactor RouteAuth component to use flow types and functional component.
Add flow types and define RouteItem type in routing index.jsx
Refactor server setup and start process in index.js
Refactor server.js to modularize middleware, API, and SSR handling
chore: Update package.json with new dependencies and script changes
Add type annotation for count variable in normalizeArrayOfItems function
Add flow types for AuthState, LayoutState, EntitiesPostsState, and EntitiesUsersState in reducers/index.js. Define GlobalState type to include layout, auth, posts, and users states.
Add i18n alias to webpack config for easier access to internationalization files.
Add webpack assets and favicons stats aliases to base webpack config
Refactor server-side rendering code to improve readability and maintainability
Refactor webpack configuration to include AssetsPlugin and FaviconsWebpackPlugin, update path configurations, and utilize manifest data for WebpackAssetsManifest.
Refactor webpack production configuration by removing deprecated plugins and optimizing build process.
Refactor Root component to include flow types, update imports, and dispatch innerWidth in APPLICATION_INIT action.
Refactor Root component to use react-intl for internationalization.
Add internationalization to Header component for dynamic content display.
Refactor SSR server code to improve readability and performance
Add styles and images directories to babelrc configuration.
Refactor webpack configuration for better readability and ES6 syntax usage
Add file and style mock mappings to Jest config, ignore coverage for specific files.
Add snapshot test for Header component with props for Dashboard on non-mobile screen
Add unit test for Footer component snapshot functionality
Add unit test for Sidebar component on mobile screen with open state
Refactor lazy loading of components in routing configuration
Refactor GET_POSTS action to accept userId parameter and pass it to getPostsAPI
Refactor RouteAuth component tests and update routing import
Add translation object to IndexHTMLComponent props\n\nThis commit adds the translation object to the props of IndexHTMLComponent in order to pass it to the client-side for internationalization purposes.
Add language setting to user object in auth middleware
Add translation support based on user's language preference
Refactor Sidebar component to use Logo component and remove unnecessary code
Refactor auth API to include language support and default to English
Refactor webpack configuration to include SSL configuration path
Refactor IndexHTMLComponent to use i18n instead of translation and update lang attribute in HTML tag.
Refactor login function to include user's language in payload
Refactor configureRootComponent to destructure props and enable Webpack hot module replacement for reducers.
Refactor API route to use environment variable for base path
Add raven and reselect packages, update nock package version.
Add HTTP server for development environment\n\n- Added http module for creating an HTTP server in addition to the existing HTTPS server\n- Updated server configuration to listen on separate ports for HTTP and HTTPS\n- Improved server startup messages for clarity and distinction between HTTP and HTTPS servers\n\nThis commit adds an HTTP server to the development environment for improved functionality and clarity during development.
Refactor lazy loading configuration in routes.js
Refactor SSR index.js: \n- Removed unused imports and code related to translations\n- Added chalk for console logging\n- Added isMobile check and logging\n- Updated initialState and i18n data handling\n- Updated RootComponent type declaration
Add useragent middleware to extract user agent information.
Add function to extract information from JWT token
Refactor App component to use React$Node instead of Node for children prop and call handleWindowResize on window resize event.
Refactor xhr_wrapper.js to import isomorphic-fetch and lodash for better code organization.
Refactor Header component styles to improve responsiveness and readability
Refactor auth reducer to remove token handling and update isLoggedIn logic
Refactor layout reducer to improve handling of UI_WINDOW_RESIZE action and compute mobile statuses efficiently
Refactor serialization in HtmlComponent to use serialize-javascript instead of JSON.stringify
Add Flow type annotations and update function signature in i18n index.js
Add i18nConfigObject type definition to handle internationalization configuration.
Refactor Babel configuration by removing unnecessary plugins and presets, and adding babel-plugin-styled-components for styled-components support.
Refactor SUI CSS imports, update type annotations, and comment out broken devtools package
Refactor Root component to improve i18n handling and remove unnecessary code
Add Google Analytics initialization using ReactGA.
Refactor Header component to use Dropdown for language selection and Headroom for sticky behavior
Add ANALYZE_BUNDLE to webpack config for bundle analysis.
Refactor SSR rendering to use rapscallion library and update language variable naming.
Refactor SSR HtmlComponent to use rapscallion template for generating HTML structure and assets tags.
Refactor server setup to include both HTTP and HTTPS servers
Enable polyfill in Babel configuration for better compatibility with older browsers.
Refactor SSR rendering to use renderToNodeStream and renderToStaticNodeStream from react-dom/server
Refactor HtmlComponent to sort assets in the right order and update HTML structure.
Refactor Header component by removing language dropdown and updating layout for mobile view
Refactor auth middleware to include user language in JWT token
Update Dashboard.Text to display "Hello HELLOOOO" in en.json
Refactor webpack config to include separate HTTP and HTTPS ports
Refactor localization strings for Dashboard page.
Refactor: Removed 'item.css' and added 'list.css' for better styling consistency.
Refactor SSR index.js to remove unused imports and add a div wrapper for the app content
Refactor i18n module to dynamically load translations and watch for changes in development mode
Refactor SSL configuration to allow for quick prototyping with pseudossl in development mode and use own SSL certs in production.
Refactor types in index.js: Replace PostItem and UserItem with LinkItem and update RouteItem.
Refactor styled components in base.jsx and remove unused Hidden component
Refactor media template function and add comments for clarity
Refactor routing configuration to separate sidebar routes and app routes, add Dashboard, Links, and Login components, update icons and paths.
Refactor reducers to include links instead of posts and users
Refactor Dashboard component to remove unnecessary props and simplify rendering.
Refactor DashboardComponent to use semantic-ui-react Grid and Header components, and add internationalization support with react-intl FormattedMessage.
Refactor API links.json for improved clarity and consistency
Add enzyme configuration for React 16 adapter and update jest setup.
Refactor Header component to use functional component and remove shouldComponentUpdate for performance optimization.
Refactor RouteAuth component tests to use React Router components\n\nThis commit refactors the RouteAuth component tests to use React Router components like <Route> and <Redirect> instead of shallow rendering. The purpose of this change is to improve the accuracy of the tests and ensure that the correct components are rendered based on user access. This change enhances the reliability of the tests and ensures that the RouteAuth component functions correctly in different access scenarios.
Refactor LocalStorageCookiesSvc to use Cookies instead of store2 for token management
Add nock for API mocking in auth action tests
Refactor links actions test file for clarity and consistency
Refactor Awral import and add options to disable certain actions
Update awral dependency to version 1.2.0
Refactor lazy loading of routes in SSR index.js
Add Raven error handling middleware and configuration\n\nThis commit adds Raven error handling middleware and configuration to the server middleware. This change ensures that errors are properly handled and reported using Raven.
Refactor routes to use lazy loading for Dashboard and Login components
Refactor RoutingWrapper component to remove LazyLoad usage and simplify route rendering.
Refactor lazy loading of components using asyncComponent in routes.js
Add form-data package for handling form data in HTTP requests.
Refactor routing import in configure_app.js to use getRoutes function
Refactor RoutingWrapper component to simplify route rendering and improve code readability
Add count property to links reducer state and update it on GET_LINKS_SUCCESS action. This change enhances the functionality by keeping track of the number of entities in the state.
Refactor MainLayout and MainContent styles for better responsiveness and layout consistency
Refactor routing functions and add Loader components for async loading.
Add isLinksLoaded prop and check if links are already loaded before fetching them in Links component. Update mapStateToProps to include isLinksLoaded prop.
Refactor client index.jsx to use AsyncComponentProvider for async state management and asyncBootstrapper for initialization.
Style: Update global styles for body and .pushable\n\nThis commit updates the global styles for the body element to set margin, padding, overflow, min-width, background, font-family, font-size, line-height, and color. It also adds styles for the .pushable class to set height, overflow-x, padding, and transform properties. These changes improve the overall styling and layout of the application.
Refactor SSR server code to include async bootstrapping and handle 404 status code for unmatched URLs
Refactor SSR index.js to load assets asynchronously
Refactor file caching logic and introduce file watching for changes
Refactor Links component to use async/await for fetching links and update mapDispatchToProps to return a promise for getLinks action.
Update BASE_API to use localhost for development environment.
Refactor API prefix in server.js to use environment variable API_PREFIX
Refactor selectors and add new selector for layout mobile statuses
Refactor Links component to use async/await for fetching data and update UI rendering with Grid and List components.
Refactor auth action to include meta in success callback
Refactor sidebar actions to use toggle functionality
Refactor Header component to use TOGGLE_SIDEBAR action and getLayoutMobileStatuses selector
Refactor SSR server code to use renderToString and getRouterRoutes for improved performance and readability
Refactor API utils to use fetch instead of xhr_wrapper and add requestWrapper function for GET and POST methods
Refactor Root component to dispatch APPLICATION_INIT only once during initialization.
Add 'exact' and 'strict' properties to meta function in routingFnCreator
Add Helmet component to SSR rendering for SEO optimization. This change includes rendering Helmet component in the server-side rendering process to improve SEO by managing document head elements.
Refactor NotFound page layout and content\n\nThis commit refactors the NotFound page layout by changing the icon to a warning sign and updating the header content. The link text is also modified for a more playful message. These changes enhance the visual appeal and user experience of the NotFound page.
Refactor webpack configuration to include CopyWebpackPlugin for static assets copying
Refactor popup manager to handle key events and focus management
Refactor menu component to update active index based on defaultActive prop and add watch for items to update active index.
Refactor Jest configuration to use single quotes and add moduleNameMapper
Add useResizeEvent hook for managing resize event listeners.
Add unmountComponent function to component test and test component destruction\n\nThis commit adds the unmountComponent function to the component test file and includes a test case to verify that the specified component is properly destroyed. This change enhances the testing coverage for component lifecycle management.
Add new build script for releasing and update dependencies\n\nThis commit adds a new build script for releasing called "release" and updates dependencies including adding "chalk", "enquirer", "execa", and "minimist". These changes enhance the build process and introduce new functionality to the codebase.
Refactor Dropdown.spec.js to use @testing-library/jest-dom, @vue/test-utils, and jest timers
Refactor emitter.js to accept multiple arguments in handler functions and event values
Refactor once function in useEmitter to pass arguments to handler
Refactor emitter.js: Removed unused emit function and reorganized exports
Add ElBacktop component to the list of components in entry.js
Refactor setupGlobalOptions function to handle global properties setup in install method
Refactor message box functions to use '$' prefix for clarity
Refactor icon component to use interface IIcon instead of class ElIcon
Add ElButtonGroup component to the list of imported and exported components in entry.js
Add test case for handleClick event in Switch component
Refactor Table component to use composition API and improve code structure
Add href prop to Link component and conditionally set href attribute based on disabled prop.
refactor: Updated ButtonProps interface and useClasses function in Button.vue\n\nThis commit refactors the ButtonProps interface in Button.vue to change the type of the 'round' property from ButtonRound to boolean and adds a new 'plain' property. The useClasses function in Button.vue has been updated to handle the new 'plain' property.
Add button disabled, button icon, and button autofocus functionality in button component unit tests.
Fix casing in import statement for ElButton component
Update $table-dark-color to $white in _variables.scss
Add $hr-margin-y variable to _variables.scss for consistent spacing in HR elements.
Refactor grid.scss to include row-cols based on grid-row-columns variable.
Fix bug in _assert-starts-at-zero mixin to ensure the min-width of the lowest breakpoint starts at 0.
Add $min-contrast-ratio parameter to color-contrast function
Update $dark theme color to $gray-900 in _variables.scss
Add new function `breakpoint-before` to retrieve the name of the previous breakpoint or null for the first breakpoint.
Add border color and width utilities for all sides of the element.
Add support for generating CSS variables in utilities mixin
Update color variables and font weights for improved styling and readability.
Refactor font-size mixin to use CSS variables in body styling
Add new font-weight and color utility classes and enable the use of variables in utilities map.
Refactor SCSS utilities to use CSS variables for border color customization.
Add contrast ratio correction function to handle color contrast issues.
Refactor SCSS mixins to handle class prefixes and generate only CSS variables when specified.
Refactor form validation state selector mixin to include ng state class for better compatibility.
Add support for "top up" payment type in paymentTypeParser function
Refactor Schedule component to improve keyboard accessibility and focus management
Refactor Tree component to pass item object instead of option for better clarity and consistency.
Refactor Toast component to include role="alert" for accessibility
Refactor resize directive to include new lodash functions and leading option
Fix typo in StandardToken.sol implementation\n\nCorrected a typo in the comment section of the StandardToken.sol file to improve code readability and consistency.
Fix issue with missing mnemonic in infuraProvider function
Refactor RBAC contract to change visibility of roles mapping to private.
Fix typo in TokenDestructible.test.js and correctly initialize contract with 'from' parameter.
Refactor solium configuration: add arg-overflow rule and remove quotes rule
Update connect-src in contentSecurityPolicy to include *.algolianet.com.
Refactor code to use Ember Inflector for pluralization and improve readability
Refactor route definitions for classes, modules, and namespaces in project-version.js
Refactor search input component to improve user experience and simplify placeholder text.
Fix issue with search input focus when no query is present
Refactor dropdown.js to remove unnecessary capitalize function usage
Update link to Ember.js codebase in README.md
Refactor datagrid.e2e-spec.js for improved readability and maintainability
Fix bug where close button inside search field wrapper was not tabbable.
Add alignment for large searchfield search icon in header component
Remove TLS_SECRET from environment variables in CI workflow.
Refactor event handling in HtmlLegend to use config._d3compat.eventHandler for better compatibility with d3.
Refactor d3.js compatibility layer in config.js
Fix issue with 'isRequired' function in electron.js engine
Set process.stdout to blocking mode when displaying help message\n\nThis commit sets process.stdout to blocking mode when displaying the help message to address an issue with non-blocking output. This change ensures that the help message is displayed correctly.
Add process exit on config parsing failure to prevent further execution.
Refactor: Remove unnecessary quoting of executable in run function
Refactor extension handling in exec function
Add support for specifying kill signal with --signal option.
Update Node version requirement to >=6 and update update-notifier to ^2.3.0
Add new option --signal <signal> to specify kill signal instead of default (ex. SIGTERM) and update examples accordingly.
Refactor Travis CI configuration to use environment variable for npm authentication.
Refactor run.js to check for Node version greater than 4 before forking process
Refactor run.js to avoid forking when a node argument is passed
Refactor run.js to check for node argument before forking
Add conditional check to allow restart if changed file is the running script
Refactor path resolution in match function to use cwd variable and improve handling of file paths.
Refactor code to handle stdin option in monitor run function
Refactor update-notifier initialization in nodemon.js
Refactor run.js to avoid forking if node argument is being passed
Fix issue with stdin error handling in run.js
Refactor legacy ignore file loading to include config parameter and prevent re-parsing of the same config file
Fix postinstall script to handle errors gracefully
Add option to ignore permission errors in file watching functionality.
Add version check for node.js in run.js\n\nThis commit adds a version check for node.js in the run.js file. If the version is unsupported, an error message is logged, recommending an upgrade to LTS for nodemon to work as expected. This change ensures better compatibility and functionality for users running nodemon.
Refactor code to handle forward slashes in executable path for Windows compatibility.
Refactor variable declarations in run.js for better flexibility and consistency
Refactor watch function to handle dotfiles and file directories properly.
Refactor code to ensure options.args is initialized as an empty array if not provided.
Refactor code in lib/utils/index.js to simplify conditional check for parent filename.
Refactor stdin handling to allow nodemon to restart on user input and handle special keys like ctrl+c and ctrl+l.
Refactor argument handling in utils to correctly handle empty arguments
Refactor condition for forking process to exclude node exec args in run.js
Refactor: Emit 'exit' event with signal in run function
Refactor watching directory paths in nodemon.js
Refactor logging in nodemon.js to use info level for watching extensions and dump options.
Refactor code to wait for subprocesses to finish before sending kill signal
Add funding information for opencollective to package.json
Add CI check to postinstall script to skip support messages during CI runs.
Fix stdout blocking issue when displaying help message
Refactor path for windows-kill executable in kill function
Add handling for different versions of Windows in process termination\n\nThis commit adds handling for different versions of Windows in the process termination logic. It introduces a check for the Windows OS release version and adjusts the process termination method accordingly. This change ensures proper termination of processes on different versions of Windows.
Refactor: Parse and store major version of OS release in run.js
Refactor spawnCommand function to handle Windows compatibility and improve environment variable handling.
Refactor signal handling in run.js to include 'SIGUSR2' and 'SIGUSR1' for Windows compatibility.
Refactor: Update PATH concatenation in spawnOptions to use path.delimiter instead of ':'
Refactor server.js to use @polka/url for URL parsing and remove unnecessary dependencies.
Refactor server.js to improve SPA navigation fallback and ignore '@npm' directory
Refactor CSS module mappings and add support for regular CSS, SCSS, SASS, and Stylus files.
Fix import path in prerender workerCode function
Refactor resolveFileUrl in public-path-plugin to handle absolute publicPath URLs
Add publicPath option to prerender function and workerCode to handle script path adjustments.
Refactor publicPathPlugin to handle full URLs properly
Refactor code to use a new 'toImport' function for handling publicPath and filename concatenation. This change improves code readability and maintainability by centralizing the logic for generating import URLs.
Refactor code to use `toImport` function for generating URLs and improve readability
Remove minify option from build command to simplify configuration.
Fix typo in test case for `config.publicPath` value in production environment. This change corrects the spelling of 'publicPath' to 'publicpath' to ensure the test runs correctly.
Refactor import handling in optimize-graph-plugin to support absolute URLs.
Refactor router.d.ts to use JSX namespace for IntrinsicAttributes.
Add type module, peer dependencies, and dev dependencies for preact and preact-render-to-string.
Add router, lazy loading, and hydrate functionality to preact-iso package
Refactor error handling in create-wmr to prevent overwriting directories
Fix error handling when creating directory with existing file.
Fix TypeScript configuration to include wmr index.d.ts file
Update tsconfig.json to include types.d.ts and enable type acquisition.
Refactor package.json parsing to include 'type' field.
Fix: Ignore .d.ts files in copyAssetsPlugin readdirRecursive function\n\nThis commit fixes an issue where .d.ts files were not being ignored in the readdirRecursive function of the copyAssetsPlugin. By adding a check for .d.ts files in the ignore list, the function now correctly skips these files during the recursive directory traversal.
Refactor CLI options for build and start commands
Fix conditional check for pkg type in normalizeOptions function
Reorder file extensions in normalizeOptions for better compatibility.
Refactor optimize-graph-plugin.js to initialize DEBUG variable before use
Fix issue with response status code not being set in compression function
Remove debug service worker installed by Preact-CLI if active
Refactor acorn-traverse.js to handle whitespace characters in JSXText nodes more efficiently.
Fix issue with script tag matching in prerender workerCode function
Refactor: Remove redundant output directory creation and improve error handling
Add custom fetch implementation for SSR in prerender.js
Refactor: Added error handling for fs.rmdir in production test\n\nThis commit refactors the production test by adding error handling for fs.rmdir to prevent potential errors during cleanup.
Refactor Dockerfile for improved efficiency and consistency
Refactor epic.test.js by removing unnecessary import of QueryParseError from lunr
Refactor DatasetControls.js to update the port and url variables for improved functionality.
Update default port to '80' in DatasetControls.js
Add height: 100% to App and darkTheme controls for better layout consistency.
Fix issue with setting refreshInterval to null when interval is not provided
Refactor DatasetControls component to manage hierarchyConfig and configHasChanged props efficiently
Refactor index-dataset-epic.js to use 'CRVIZ_SEARCH_REF' as the reference key and update field names for better clarity.
Add disabled attribute to Ok button when no file is selected
Refactor font scaling and text trimming logic for better visualization and readability.
Refactor animation durations and keyframes in Visualization module CSS
Add conditional check for selected file before uploading dataset\n\nThis commit adds a conditional check to ensure that a file is selected before uploading the dataset. This change improves the user experience by preventing unnecessary uploads when no file is selected.
Refactor setupAnnotations to handle childGlyphs for added, changed, and removed elements.
Refactor animation properties in Visualization module CSS files to include animation delay.
Fix typo in package.json script "snyk-protect"
Refactor DatasetSlider.js to simplify setting endUuid and remove redundant condition
Remove unnecessary viewBox attribute from SVG element in d3Viz function
Refactor conditional rendering logic for dataset comparison in App component
Add dark theme support for ring menu in Visualization module.
Add 'datum' property to controls object in reducer for better data handling.
Refactor TooltipControls to use <p> tags instead of <h4> for displaying data fields
Refactor TooltipControls component to remove unnecessary code and add showNote state variable.
Add setNoteHovered action and getNoteHoveredId selector to notes domain.
Refactor TooltipControls button labels to include onClick event handlers
Refactor error messages in addTrack and replaceTrack methods
Refactor Badge component test to use ThemeProvider for theme and colorMode settings
Refactor rollup.dev.config.js to remove unnecessary code and improve readability
Refactor Accordion component to filter out non-tag elements before cloning.
Refactor PopoverTrigger to filter out non-element children
Refactor ButtonGroup component to filter out non-element nodes from default slot.
Refactor MenuOption.js to filter out non-element nodes from default slots
Refactor Stack component to filter out non-element nodes from children array
Refactor Breadcrumb component to filter out non-element nodes from default slot items
Refactor AvatarGroup component to filter out non-element nodes from default slot for better accuracy in counting children.
Refactor InputGroup component to filter out non-element nodes from default slot.
Add support for test files in 'tests' directory in ESLint configuration.
Refactor Switch component in stories to use action from addon-actions
Add color mode observer for theme and icons in Toast component.
Refactor storybook config to load stories from chakra-ui-core instead of kiwi-core
Refactor Progress component stories to use Box component for layout and update component structure.
Refactor RadioButtonGroup component to use cleanChildren utility function for handling default slot children.
Remove defaultIsChecked prop from Radio component props.
Refactor Chakra UI imports to use '@chakra-ui/vue' for Vue compatibility
Add event listener removal for keydown on modal close to prevent memory leaks
Refactor EditableInput blur event handling to always submit instead of cancel
Refactor EditableInput event handlers for consistency and clarity
Fix typo in aria-disabled attribute in EditableInput component
Add Switch component with customizable sizes and styles.
Add scroll behavior to reset position to top when navigating between routes
Add code styling to list items in colorMode in default layout
Refactor CAvatar component to allow overriding alt attribute and use fallback name if alt is not provided
Refactor tooltip documentation for better clarity and consistency
Fix typo in docs:build script and update version of @fortawesome/free-solid-svg-icons.
Refactor CDivider component to remove unnecessary comma in props spread.
Add 'aria-describedby' attribute to tooltip anchor when tooltip is open
Add story for CImage component with fallback src.
Refactor Stat component to compose CText instead of Text and CIcon instead of icon.
Refactor Stat component names to use CStat prefix for consistency
Update switch component documentation to specify children prop type as Vue.VNode
docs: Update switch component documentation with slot information
Remove unnecessary Slot section in text.mdx documentation.
Refactor Tabs component to use CTabs, CTabList, CTabPanels, CTab, and CTabPanel for consistency and clarity. Update documentation to reflect these changes and add information about Tabs events.
Refactor Tabs Events table in tabs.mdx to use @change event instead of onChange event.
Refactor CPopper and CPopperArrow components to add 'data-chakra-component' attribute and rotate arrow by 45deg if present.
Refactor import path for CColorModeProvider in Canvas.vue
Refactor CPopover component to use computedId for popoverId and update headerId and bodyId accordingly.
Fix typo in CCollapse startingHeight parameter in CCollapse.stories.js
Update easing prop in Collapse component to accept easing props from animejs.
Refactor analytics plugin to use environment variables and pass router as a parameter
Refactor ColorPalette component props to use boxProps instead of baseProps
Refactor CNumberInput component to remove default value for inputId prop
Remove outdated dependencies and update package versions.
Fix import statement in CAlertDialog.js to correctly import baseProps from config/props. This change ensures that the codebase is properly structured and eliminates any potential errors related to the import.
Refactor lint script to target specific package in Chakra UI Vue.
Refactor CButton.test.js to remove .only from test case.
Fix typo in select component container tag
Refactor icon component to use currentColor for color styling
Refactor CList and CListItem components to use createStyledAttrsMixin and update spacing attribute handling.
Refactor import path for MDXCodeBlock in playground.stories.js
Refactor iconPack parsing in module.js
Refactor CPopper component to include a new function mergeModifiers for merging Modifiers arrays with corresponding items from a source array. This change enhances the functionality of the component by allowing for more flexible and dynamic modifier merging.
Refactor CBox component in CBox.stories.js to add new styling and content
Add 'unstyled' as a valid button variant in buttonProps.
Refactor CMenuOptionGroup to support defaultValue as an Array
Refactor theme configuration for consistency and readability
Refactor CTextarea stories to include Basic Usage with Event and handle textarea content change.
Refactor icons.js to include a new function parseFontAwesomeIcon for parsing FontAwesome icons and update parseIcons to use this function for FontAwesome icons.
Refactor icon creation and parsing functions to use prefix instead of pack. This change improves code readability and maintainability.
Refactor CInputGroup component to handle listeners more consistently
Refactor breakpoints to use object notation for better readability and add '2xl' breakpoint size.
Refactor Canvas.vue component to improve layout and styling, adding responsive behavior and transition effects.
Refactor circularprogress.mdx: Update import statements and fix accessibility report link.
Add openMenu method to CMenu component.
Add error editor handler in webpackHotDevClient.js
Refactor file-loader options to conditionally emit files based on IS_WEB flag
Refactor error handling in server.js to log error details and send a structured response.
Update yarn install command to ignore engines in CircleCI config.
Fix yarn install command to ignore engines in nodejs.yml workflow
Refactor package.json to update repository and bugs URLs.
Fix typo in README.md related to the usage of `PUBLIC_PATH` in `razzle build`
Update mini-css-extract-plugin to version 0.9.0 in razzle-plugin-scss package.
Refactor SCSS loader configuration to include postcss-loader, resolve-url-loader, and sass-loader.
Refactor css-loader in razzle-plugin-scss to use onlyLocals option
Refactor import path for logger in modules.js
Refactor razzle-plugin-typescript to recommend using Razzle's built-in TypeScript support instead.
Refactor path resolution in SCSS options to use forward slashes for better cross-platform compatibility
Refactor Jest configuration to use setupTestsFile instead of paths.testsSetup
Fix strokeWidth attribute in search overlay component
Update favicon link in index.html to use process.env.PUBLIC_PATH variable.
Add unique cache identifier for Babel options to ensure consistency and compatibility with razzle-dev-utils and babel-preset-razzle versions.
Refactor plugin and modify function calls in createConfigAsync.js
Refactor razzle-start-spa.test.js to remove unnecessary console.log statements and improve code readability.
Refactor package version logic in create-razzle-app to use 'canary' branch if specified.
Add check to exclude @babel/plugin-transform-runtime helpers from externalization in createConfigAsync module.
Refactor build script to include check for existence of public directory before copying, improving robustness.
Refactor script generation in server.js to handle multiple scripts and filter out undefined/null values. This change improves the robustness of script handling in the codebase.
Refactor CopyPlugin configuration to include all files in appPublic directory in paths.appBuild in createConfigAsync module.
Refactor webpack configuration by removing unnecessary CopyPlugin options
Refactor index.js to update branch and razzlePkg dynamically
Update razzle package.json to use local bin script instead of global canary version.
Increase network timeout for yarn install to 1000000 ms
Refactor GitHub Actions workflow to exclude Node.js version 8.x from testing.
Refactor setPorts.js to return a Promise for better async handling
Add `verbose: false` option to StartServerPlugin to suppress console errors and improve logging.
Fix conditional check for server-side HMR Enabled! message and exclude outputTest condition to prevent unnecessary sleep in razzle-start.test.js
Fix loaderFinder to include loaderName in rule.loader and rule.use.
Add jest-message-util dependency for improved testing capabilities.
Refactor Jest configuration setup and remove deprecated Jest version check
Refactor webpack config to conditionally set externals based on build type
Refactor razzleDevUtilsPkg variable to include 'razzle-dev-utils' and update its usage in the codebase.
Refactor babel configuration in createConfigAsync module
Refactor: Update file existence check in createConfigAsync.js for various file extensions
Refactor: Update file existence check in createConfigAsync.js for various file extensions
Refactor createJestConfig.js to use let instead of const for config variable
Refactor createJestConfig.js to use let instead of const for config variable. This change does not impact the functionality but improves code readability.
Add razzle-babel-loader to webpack config for handling js, jsx, mjs, ts, and tsx files. This loader includes options for server-side rendering, development mode, and React refresh.
Refactor webpack configuration to use CopyPlugin patterns for better file copying efficiency.
Fix path separator in CopyPlugin to ensure compatibility with Windows file paths.
Refactor SSR logic and data handling for static export functionality
Update babel-preset-razzle to use the latest version.
Refactor server.js to extract CSS and JS asset generation functions
Refactor path generation in getClientEnvironment function
Add razzle-start-server-webpack-plugin 4.0.0-canary.4 to dependencies
Refactor StartServerPlugin to use razzleOptions.verbose instead of hardcoding false
Refactor loadPlugins.js to support not released plugins without options
Fix typo in webpackOptions.fileLoaderExclude variable and update usage in the codebase.
Refactor code to remove unnecessary error handling in server listen function
Refactor paths.js to resolve appDirectory correctly
Refactor compile function to accept a verbose parameter for better logging and error handling
Update sass package to version ^1.29.0 and remove node-sass-chokidar from dependencies.
Refactor node_modules externalization logic in createConfigAsync.js
Refactor modifyWebpackConfig to modifyWebpackOptions in razzle.config.js, stringify HTTPS credentials for node target in dev environment.
Refactor webpack configuration to support HTTPS with devcert in development mode
Refactor start script to toggle quiet mode based on verbosity
Refactor devcert HTTPS configuration in razzle.config.js for better organization and consistency.
Refactor setupEnvironment function call in loadRazzleConfig module
Update devServer configuration to use clientPublicPath and remove unnecessary publicPath assignment.
Refactor build scripts, add cross-env and concurrently for better environment management and parallel execution.
Refactor webpack configuration to enable HtmlWebpackPlugin and add localIdentName option for CSS modules.
Fix typo in localIdentName in createConfigAsync.js
Refactor babel-loader config to remove unnecessary pluginOptions and improve readability
Refactor babelTransform.js to conditionally set presets based on the existence of .babelrc
Refactor webpack configuration for compatibility with webpack 5 and remove unnecessary PnpWebpackPlugin references.
Fix conditional logic in getClientEnvironment function to correctly handle environment variables for production builds.
Refactor loadPlugins.js to handle plugins with '/' in their name
Refactor StartServerPlugin to handle SIGINT signal and exit gracefully
Add signal handlers to close clientDevServer on SIGINT and SIGTERM signals
Refactor postcssOptions assignment in razzle-plugin-scss to simplify code and improve readability
Refactor postcssOptions assignment in razzle-plugin-less to simplify code structure
Refactor file type handling in createConfigAsync.js
Refactor error handling in createRazzleApp function
Update dependencies and peer dependencies in package.json for Razzle project.
Update webpack and webpackbar versions to be compatible with both webpack 4 and 5.
Update tsconfig.json to enable decorator metadata and disable strict mode.
Add support for TypeScript metadata in Babel configuration
Fix typo in variable name 'opions' to 'options' in StartServerPlugin.js
Refactor babel-loader configuration by removing supportsStaticESM option.
Refactor webpack context to use current app's directory instead of command's directory.
Refactor: Add passthrough for --inspect and --inspect-brk flags to node in createConfigAsync module
Refactor Babel preset configuration to include TypeScript support and fix class properties handling
Refactor error message in loadPlugins.js to display all missing plugins
Remove "@babel/plugin-proposal-decorators" from dependencies.
Refactor commonjs plugin to accept api, options, and dirname as parameters
Refactor: Update check for scoped plugins in loadPlugins.js
Fix error handling in build script to correctly display compilation errors.
Add CssMinimizerPlugin for CSS minification with source map support.
Refactor: Removed unnecessary sourceMapContents option in razzle-plugin-less configuration
Refactor build script to include watch mode option and remove unnecessary comments.
Refactor webpackHotDevClient.js to import formatWebpackMessages from local file.
Update dependencies in create-razzle-app package.json
Remove unused babel plugin and update babel presets and plugins versions
Add option to copy dot files in copyDir function
Update commander package to version 5.0.0
Refactor package installation to include workspace flag in yarn command
Add verbose option to installWithMessageFactory function
Fix lerna publish command to include --no-verify-access flag
Update html-webpack-plugin to version 4.5.2
Refactor start.js to handle verbose logging in SIGINT signal handling and webpack configuration.
Refactor debug logging in createConfigAsync.js to print config object instead of webpackConfig
Add appAssetsManifestPath to webpackOptions and use it as the fileName in ManifestPlugin for assets manifest generation.
Refactor webpack configuration to disable webpackbar based on razzleOptions.
Refactor env.js to conditionally include local dotenv file based on NODE_ENV, improving environment setup.
Refactor paths.js to declare packageJson variable before assignment
Update @loadable/babel-plugin to version 5.13.2 in devDependencies
Add check to ensure key exists in config.optimization to prevent errors.
Add optimization key to config object to ensure it exists before setting values.
Refactor RAZZLE_ASSETS_MANIFEST path in getClientEnvironment function
Refactor import statements for StaticRouter in server.tsx
Refactor DefinePlugin configuration in razzle-plugin-manifest to simplify setting RAZZLE_CHUNKS_MANIFEST variable.
Fix installation message factory function call in createRazzleApp lib index
Refactor server.js to import StaticRouter from 'react-router-dom' instead of 'react-router-dom/server'
Refactor routing in App component to use Switch instead of Routes
Refactor Route component in App.js to use component prop instead of element prop
Add webpack configuration to replace context for 'ejs' module in serverless build.
Refactor build script to include noninteractive flag in package.json
Refactor styling and component in [slug].svelte for better readability and layout.
Fix: Use &amp; instead of & in og-image-url-build.js for proper query parameter formatting
Fix URL encoding issue in og-image-url-build.js
Refactor code to change heading level for 'Checking for `window`' section in javascript.md
Fix optional typing for dimmer prop in Image component.
Add support for custom input in Search component
Fix typo in Modal component prop name 'mountnode' to 'mountNode'
Refactor babel configuration presets in ComponentExample.js
Add 'item' prop to DropdownProps interface for formatting as a Menu item.
fix: Make tabIndex optional in ButtonProps interface
Refactor Icon component to rename Content to Group for clarity and consistency
Refactor setTimeout arrow function to regular function in removeDimmer function
Fix optional `sorted` prop in TableHeaderCellProps interface
Add floated prop to GroupProps interface in Button component.
Refactor Editor.js to use handledProps instead of propTypes for component props.
Extend RadioProps interface to include CheckboxProps for better code reusability.
Fix PropTypes definition in Popup component.
Add link prop to Card component.
Add 'multiple' prop to htmlInputPropNames in Input.js
Refactor Search component props to make onBlur, onFocus, onMouseDown, onResultSelect, onSearchChange, and input optional.
Refactor Portal component to properly handle portal node creation and event listeners
Refactor FormField propTypes to simplify required field validation
Refactor Dropdown component props for better type consistency and readability
Refactor MenuExampleNameProp component to use lowercase names for comparison
Refactor AutoControlledComponent prop validation to use _.isUndefined for clarity
Fix typo in confirmation message for resetting source code in ComponentExample
Refactor MenuExampleText component to fix activeItem comparison for mostComments and mostPopular items
Refactor scrollToAnchor function to use custom mathSign function for cross-browser compatibility
Add check to prevent blur event when clicking inside Dropdown component. Fixes issue #1315.
Update htmlInputPropsUtils.js to include 'minLength' attribute in htmlInputAttrs.
Refactor Search.js to prevent default on Enter key press and notify onResultSelect prop.
Refactor Accordion component to use boolean type for inverted prop.
Refactor Dropdown component to improve search query display efficiency
Fix credit attribution in README.md for TechnologyAdvice by levithomason.
Refactor Input component to use React.ComponentClass instead of React.StatelessComponent
Refactor TabPane propTypes to accept any node type for children.
Refactor ButtonProps interface to allow for boolean value in addition to 'fade' and 'vertical' for animated prop.
refactor: Change type of inverted prop in Progress component to boolean
fix: Correct type of inverted prop in Statistic component
Fix typo in StepGroup component causing unnecessary comma in 'unstackable' prop.
Refactor TabPane component to remove loading prop for cleaner codebase.
Refactor compiler_public_path in config.js to use a relative path.
Refactor TextArea component to correctly type TextAreaProps in TypeScript
Refactor Image component propTypes to simplify wrapped prop validation.
Fix issue with Popup not hiding on scroll by removing event listener.
Refactor PropTypes in Visibility.js to correctly handle array of numbers or strings.
Refactor release scripts and update dependencies.
docs(changelog): Update build and deploy scripts for changelog generation and deployment.
Refactor Dropdown.js to handle undefined options in getMenuOptions() and prevent infinite loop
Refactor AccordionAccordion.d.ts to use React.ComponentClass for better typing accuracy
Refactor Responsive component to handle server-side rendering by initializing width to 0 if not in browser context
Fix issue with TextArea height calculation and overflow styling
Refactor Modal component event handling methods to use _.invoke for better code readability and consistency.
Refactor prop-types script to include '.min' only in production mode
Refactor event handling in Portal component to use eventPool for better organization and management.
Refactor Responsive component to safely update state and handle component mounting and unmounting.
Refactor AccordionTitle component to accept index as a string or number to improve flexibility and type safety.
Refactor AccordionAccordionProps onTitleClick parameter to accept AccordionTitleProps data instead of index.
Fix issue with ComponentPropsComponents returning undefined when components length is 1
Refactor Responsive component props to accept width as a number and minWidth/maxWidth as number or string for better flexibility and compatibility.
Refactor mobile container sidebar functionality and update sign up button in HomepageLayout.
Refactor htmlInputAttrs in htmlPropsUtils.js to include 'accept' attribute.
Refactor error message in createShorthand function to be more descriptive
Refactor Modal component to improve dimmer node style handling
Refactor isISO31661Alpha3 to use Set for valid country codes.
Fix regex pattern in getExtname function to match script tags with attributes.
Refactor encodeVersion function in Metadata.mm to assign iosVersion variable before returning.
Refactor WebSocketPlus class to improve URL handling and WebSocket creation
Add error handling for WebGL context creation and display error message if OES_element_index_uint extension is not supported.
Refactor bounding box measurement functions and transform logic in modeling package
Refactor toEdges function to use an object for vertices storage and map sides directly to unique vertices
Refactor worker creation and termination logic in WebWorkify initialization
Refactor loading spinner in PlexLibrary.vue
Refactor base64url encoding and decoding for better compatibility and efficiency.
Refactor error handling in MegamorphicModel class
Refactor uploader delete button styles for better positioning and appearance
Refactor uploader delete button styles and icon positioning
Refactor sticky component to update data only if there are changes in index.ts
Refactor swipe-cell to close other items with non-zero offset when dragging to prevent overlapping issues.
Refactor toolbar.wxml to simplify code structure and improve readability.
Refactor data massaging in dropdown component
Refactor code to remove duplicate variable declaration and assignment in exec function
Refactor postinstall.js to use a constant message for supporting nodemon project via open collective.
Refactor build process to remove output directory before bundling.
Update preact and wmr dependencies to latest versions.
Refactor build script to clear output folder without deleting it
Fix finding the last non-external script with `prerender` export in prerender.js
Refactor controls.test.js to simplify assertion for hierarchyConfig in Controls reducer test
Refactor setupTooltip function and remove unnecessary code.
Refactor d3-viz.js to improve code readability and add missing semicolon.
Refactor Tooltip component to display singular "Note" instead of plural "Notes" and update FontAwesomeIcon accordingly.
Refactor Badge component test to use provide instead of propsData
Refactor modal to use AlertDialog component for better user experience
Refactor Tooltip component to remove unnecessary check for server-side environment and improve tooltipAnchor assignment.
Refactor CButton component by removing inheritAttrs option
Refactor CProgress component to use functional components and mixins, update props and render functions, and improve code structure.
Refactor CStat, CStatGroup, CStatArrow, CStatNumber, CStatHelperText, and CStatLabel components to use functional components and improve code readability.
Remove carbon-ad and c-image, update contributors.vue layout.
Refactor CInputGroup component to simplify event listener assignment
Add user details fetching and display in author component
Add alias for '$lib' to resolve path in Svelte config
Add import statement for Author component and fix syntax issues in JavaScript sheet
Refactor author component to handle empty bio field in data
Refactor [slug].svelte to use $page.url and update Head component
docs(changelog): update changelog and deploy docs after release
Refactor parseBlocks function in Types module to remove redundant variable assignment.
Refactor Types.re to update blockchainState in Block module.
Refactor stack manipulation in interpreter.js for better indexing and handling of arguments.
Refactor stack manipulation in interpreter.js for better readability and efficiency
Refactor continuation function to capture_continuation for clarity and consistency in interpreter.js
Refactor compiler.js to use a constant for the arity of the argument in call/cc.
Fix issue with pushing the continuation closure onto the stack in compiler.js
Refactor _writer.js to use a new truncate function for string truncation.
Refactor release_initializer.js to improve code structure and readability
Refactor input and output handling in default_ports.js
Refactor core.js by reordering and adding expanders for `begin`, `call/cc`, `define`, `if`, `lambda`, `quote`, and `set!` functions. This reorganization improves code readability and maintainability.
Refactor code to remove unnecessary semver.coerce() call and update templatesVersionMinimum for better compatibility.
Refactor ProgressIndicator component to remove unnecessary percentage display in progress bar
Refactor getFiles function to improve variable naming and clarity
Refactor lifecycle.js to remove unused nextTick import and optimize code structure
Refactor Carousel component to use getDerivedStateFromProps for updating state based on props and componentDidUpdate for setting interval.
Refactor config validation in nuxtFire function
Refactor createServerMiddleware to use require for firebase-admin and logger modules
Refactor service initialization logic in main.js for better readability and consistency
Refactor: Update firebase import to use compat version for compatibility with new Firebase SDK versions.
Refactor baseline calculation in text.js for better readability and consistency.
Refactor config.js to export standard configuration defaults for Vega specification parsing. This change allows users to provide their own default values by passing in a config object to the parse method.
Refactor Force.js: \n- Changed variable declarations to use const instead of var for ForceMap and Forces. \n- Updated prototype methods to use ES6 syntax. \n- Replaced var with let in for loops for improved scoping. \n- Simplified arrow functions for better readability.
Refactor Label.js to use ES6 class syntax and simplify the transform method.
Refactor Voronoi.js by removing prototype inheritance and updating transform method definition.
Refactor Wordcloud.js to use ES6 syntax and improve readability.
Refactor util.js to use const instead of var and fix date setting in localDate and utcDate functions
Refactor code to use const instead of var, update projectionProperties to use const, and update projections object to use const in projections.js
Refactor variable declarations in number.js for better code readability
Refactor variable declarations in event-selector.js to use let and const instead of var
Refactor equal.js to improve comparison logic and remove redundant null check.
Refactor: Update condition to ensure baseURL ends with a slash before appending uri
Update react-native-windows and remove react-native-community/cli dependency
Refactor SimilarityGraph component to use 'size' instead of 'nodeRadius' for node dimensions.
Refactor SimilarityGraph component to add 'size' and 'threshold' parameters with default values.
Refactor: Empty top-level div before constructing SVG element in SimilarityGraph component.
Refactor SimilarityGraph to use getBoundingClientRect() for better accuracy.
Refactor D3 import and merge D3 selections in SimilarityGraph component.
Refactor code to use d3-selection for element selection and update element size handling in parseChart function
Refactor d3 imports and update scale functions in TreeHeatmap component
Refactor TreeHeatmap component initialization to include scale option
Add options for data, id, text, and count fields in SentenTree component.
Refactor: Remove all elements from the element before rendering to improve performance.
Add type 'string' to the 'text' field in SentenTree component.
Refactor code to convert string to number using unary plus operator
Refactor: Removed all components from export in index.js
Update output path in webpack config to '../build/examples' for better organization of build files.
Refactor BoxPlot component to update encoding structure and fix mark definition
Remove createBabelConfig import from webpack-config.js
Fix devServer.https condition in run-webpack.js
Fix installation of dev dependencies in create command
Refactor proxy-loader to store and swap loader options for future calls\n\nThis commit refactors the proxy-loader to store and swap loader options for future calls. It removes proxy-loader specific options and makes the query act as the requested loader query. This change improves the maintainability and clarity of the codebase.
Refactor file system operations in render-html-plugin.js for better performance
Refactor assertString function for improved readability and error messaging
Refactor isIP function to simplify IPv4 and IPv6 validation.
Refactor webpack config to define paths in one file and use them across the app, update manifest.json with correct image paths.
Refactor webpack configuration paths and update proxy request handling\n\nThis commit refactors the webpack configuration paths to point to the correct directory and updates the proxy request handling to include the BASE_API path. These changes improve the organization of the codebase and ensure that API requests are properly proxied to the specified endpoint.
Refactor SSR index.js for better error handling and readability
Refactor Express server setup, update dependencies, and implement JWT authentication
Refactor routing index.jsx to use process.env.BROWSER for history creation
Refactor SidebarComponent to improve readability and maintainability
Refactor Router component to dynamically select between ConnectedRouter and StaticRouter based on environment, and update Root component to handle server-side rendering.
Add i18n module and update webpack config paths.
Refactor Root component to include App container and RoutingWrapper component for better code organization and separation of concerns. This change updates the PropTypes for routes to expect an array instead of a function.
Refactor routing import in index.jsx for clarity and consistency
Refactor routing configuration in index.jsx\n\n- Removed unnecessary imports and reorganized imports for clarity.\n- Renamed appRouting to routes for better naming consistency.\n- Updated component name from 'UsersItem' to 'UserItem'.\n- Removed the Routing function as it was redundant and not used.\n\nThis commit refactors the routing configuration in index.jsx for better organization and readability.
Refactor routing imports and methods in App component
Refactor webpack.prod.babel.js by removing unnecessary code related to ServiceWorkers and OfflinePlugin.
Refactor webpack production config to disable console log removal in compress options
Remove SENTRY_PUBLIC_DSN from definePluginArgs in webpack.base.js
Refactor webpack_config/config.js to use ES6 imports, add i18n and manifest imports, and define environment variables for both server and frontend.
Refactor routing index.jsx to import RouteAuth component directly from addons folder
Refactor xhr_wrapper.js: Update requestWrapper function and add domain check for requests
Refactor layout reducer to remove duplication and improve code readability
Refactor webpack configuration for server build, update child_process import, change entry point to 'server.js', and add AutoDllPlugin for vendor dependencies.
Refactor Jest configuration by removing unnecessary moduleNameMapper entries
Refactor xhr_wrapper.js to simplify object creation and error handling
Refactor initGlobalMiddlewares to accept 'app' parameter and update middleware usage.
Refactor Login component to use functional component and update login prop to accept data object
Refactor UsersComponent to use functional component and remove PureComponent class.
Refactor UI_WINDOW_RESIZE case in layout reducer to directly spread computeMobileStatuses result
Refactor LazyLoad component to use async/await for loading component and remove componentWillMount lifecycle method.
Refactor CLI logic to simplify handling of save and production flags
Refactor: Remove tilda resolution in create function
Update index.tpl to change the description of Tipe.io from "Headless CMS" to "API-first CMS"
Refactor ElLink component to use Composition API and simplify slot usage
Refactor alert component props and remove unnecessary properties
Refactor tag component to use Composition API and improve code readability
Add watch functionality to update textarea size and dispatch validation event on modelValue change in useTextarea. Refactor useInput to accept destructured props and add getSuffixVisible function. Update useInteractive to watch nativeInputValue changes and setNativeInputValue accordingly.
Refactor carousel component naming for clarity and consistency
Refactor Backtop component to use Composition API and improve readability
Refactor emitter.js to improve readability and maintainability
Refactor useEmitter to add off method and use Symbol for event name key
Refactor radio.spec.js by removing unnecessary semicolon
Refactor code in emitter.js to use optional chaining for improved readability and maintainability.
Add template to component and update test to check innerHTML of $el
Refactor Header.vue to use Composition API with toRefs for props access
Refactor Popconfirm.spec.js to simplify event testing and improve readability
Refactor event handling in useEmitter function and introduce mitt library for event management
Refactor event handling in emitter.js for better readability and maintainability
Refactor collapse-item.vue to use Composition API and improve code readability
Remove unused import of Submenu in Menu.vue
Refactor Pagination component to use ElPagination for better naming consistency and clarity. This change updates the component name and installation method.
Refactor Avatar component to use ElAvatar naming convention and update installation method
Refactor Badge component to use ElBadge naming convention and update installation method
Refactor TabPane component to use ElTabPane for better naming consistency and clarity.
Refactor import paths for usePopup and useEmitter in Dialog.vue
Refactor Tooltip component to use ElTooltip for better naming consistency and clarity.
Refactor card component to use ElCard for better naming consistency and clarity
Refactor import path for useResizeEvent in Carousel.vue
Refactor import path for resize-event utility in Cascader.vue
Refactor imports in main.js for better organization and maintainability
Refactor import paths for date-util.js
Refactor upload component and dialog in Chinese documentation\n\n- Refactored the upload component in the Chinese documentation to use the latest syntax and best practices.\n- Updated the dialog component to use v-model for visibility and improved image styling.\n- Improved code readability and maintainability.\n\nCommit message: Refactor upload component and dialog in Chinese documentation
Refactor button component to use global configuration for size option
Refactor Message component to use MessageInfo service and update imports
Refactor validation logic in Divider.vue to use Array.includes() method.
Refactor validation for button size and type props in Button.vue
Refactor Tag.vue component to improve readability and maintainability
Refactor Avatar component to use size for styling.
Refactor Button.vue to use defineComponent and update props definition.
Refactor RadioButton.vue to conditionally apply style based on isChecked status
Refactor code to support multiple component paths and improve CSS generation efficiency
Fix issue with inputExceed value check in useClass function
Refactor Input component class logic to remove unnecessary class assignment
Refactor: Update import path for ElProgress component in upload-list.vue\n\nThis commit updates the import path for the ElProgress component in upload-list.vue to use the correct path './components/Progress'. This change improves code organization and ensures proper component import.
Refactor: Update import path for ElProgress component in upload-list.vue
Refactor Sidebar class in sidebar.js: \n- Added reflow, typeCheckConfig, and Manipulator imports\n- Changed constructor to use super(element)\n- Updated event listener for 'transitionend'\n- Removed unused static get VERSION method\n- Updated _toggleDropdown method signature
Refactor avatar styles to use mixin for border-radius and add vertical-align for alignment.
Refactor SCSS _header.scss to fix stylelint issue and improve cursor styling.
Refactor icon styles to use generic class names and adjust positioning.
Refactor scss/_tables.scss to comment out border-bottom-color for :not(:last-child) > :last-child > * to highlight border color between thead, tbody, and tfoot.
Refactor shortcode to find and print CSS Variables in docs
Refactor button modifiers and button outline modifiers to use CSS custom properties for better maintainability and flexibility.
Refactor header, subheader, and sidebar variables for better consistency and readability. Update dimensions and transitions for improved styling. Update footer minimum height for consistency with other sections.
Refactor avatar styles to improve spacing and responsiveness
Add close functionality to sidebar by handling click event on data-coreui-close attribute.
Add min-height styling for subheader in header component.
Refactor Sidebar class to use camelCase naming convention for static method sidebarInterface
Refactor table styles to use CSS variables for color and border color.
Refactor SCSS alert styles to use correct variable names.
Disable RTL support and add primary color variables in _variables.scss.
Refactor progress group styles in _progress.scss
Refactor SCSS mixins to remove unnecessary class prefix and add support for generating CSS variables and RTL versions.
Refactor Dropdown class to handle menu item selection with keyboard navigation
Refactor sidebar.js to comment out unused hide class and related code
Refactor color-scheme mixin to support custom color schemes
Refactor sidebar.js by removing unused code and optimizing class methods
Refactor color variables and disable contrast ratio warnings.
Add variables for file input in form styles.
Refactor sidebar.js by simplifying Default and DefaultType objects and updating _getConfig method.
Add custom scrollbar styles for Firefox and Chrome/Edge browsers in sidebar navigation styling.
Fix input types to stay LTR and remove inner padding in Chrome and Safari on macOS
Refactor sidebar.js by removing unused code and optimizing event handling.
Refactor sidebar styles for mobile breakpoints and add support for fixed sidebar positioning.
Refactor table border color highlighting in _tables.scss
Refactor: Update DATA_KEY in focustrap.js to 'coreui.focustrap'
Refactor component dismissal trigger to use data-coreui-dismiss attribute
Refactor visibility check in index.js to handle details element visibility accurately
Refactor reflect function and ltr-rtl mixin to improve string handling and support for right-to-left languages.
Refactor SCSS variables in offcanvas styles for better customization options.
Refactor AlertBox component by removing redundant UI type values.
Refactor progress component styles by renaming state to status for clarity
Refactor handleRedirect method in Pagination.vue to emit 'redirect' event with page and event parameters.
Refactor uploader component styles for improved layout and transitions
Refactor parseParams and refresh functions in outside directive
Refactor validate method in Rule class to accept formData parameter for validation purposes
Refactor validate method in Rule class to use context instead of formData and add type import for context data manipulation.
Refactor UI mixin to use constant for unknown key
Refactor Uploader.vue to use parse and format functions from bytes module for size conversion.
Refactor debounceSearch function in FilterPanel.vue to use arrow function directly in created hook.
Refactor Link.vue to use useRouter computed property for better readability and maintainability
Refactor Autocomplete component by removing focusClass prop and adjusting suggestTrigger prop.
Refactor NumberInput component to use arrow functions for increase and decrease icons.
Refactor Fieldset.vue to remove unnecessary template elements and improve code readability.
Refactor error handling in Uploader component to use a unified slot for displaying validation messages.
Refactor Span component to use functional rendering and prefixify class names
refactor(Anchor): Update test case for handling scroll when container is window or falsy
Refactor TableBody component to use realExpanded array for expanded items detection
Refactor NumberInput.spec.js to handle decimalPlace prop correctly and make prop value fully controlled.
Refactor key-select mixin to simplify closing behavior
Refactor uploader.less: Remove unnecessary styles for preview dialog and media, update helper text font color.
Add SHADOW_WIDTH constant and refactor mixins in Table component. Fix shadowOffset calculation and improve readability in Table component. Fix logic in handleSelect method in Table component.
Refactor Uploader.vue component for improved readability and maintainability
Refactor autoupload logic in Uploader component
Refactor sharedProps computed function to use arrow function in upload mixin
Refactor Dialog component to enable draggable functionality and handle drag events.
Refactor updateMeasurer method in Textarea component to improve readability and handle edge cases.
Refactor CheckButtonGroup.vue to add stable style to simple UI and update props usage.
Refactor Pagination component default page size to 20 and update available page sizes.
Refactor getScrollportOffset to getScrollContainerOffset for clarity and consistency in naming conventions. This change impacts the function responsible for obtaining the offset of the scroll container, improving code readability.
Refactor code for better readability and consistency in veui-loader/src/index.js
refactor: Update wait times in Drawer.spec.js for faster testing execution
Refactor Cascader component to use 'load' instead of 'loadData' prop for data loading and saving.
Refactor generator-nitro to update options and ignore specific files/directories on project update.
Refactor user agent spoofing and request interception for Google accounts
Refactor ExtVectorTypeInstance to handle double3 vectors differently for x86_64 and armv8 platforms. This change ensures proper handling of vector sizes and alignment, impacting the way vectors are passed and stored in memory.
Refactor setStackTrace function to improve readability and formatting.
Refactor logging messages and error handling in TNSEnableRemoteInspector function
Refactor conversation test by removing unnecessary code for bwang0 event handling
Refactor code in connection.js to use lodash values function instead of Object.values for better code readability.
Refactor browserFilter in filters.js to use nullish coalescing operator
Refactor 2D primitives functions for better readability and consistency
Refactor color.js to export rgb2hsl, rgb2hsv, hsl2rgb, hsv2rgb, html2rgb, and rgb2html functions
Refactor code formatting and style in meta.js file
Refactor clone function to improve type checking and object comparison
Refactor group.js to use strict equality comparison and add a comment questioning the usage of the function.
Remove unnecessary console.log and eval statements in includeJscadSync function
Refactor include handling in replaceIncludes.js for better error handling and readability
Refactor replaceIncludes function to accept 'source' parameter instead of 'text' for better clarity and consistency in the codebase.
Refactor convertToBlob.js: Update STL BINARY conversion and remove fixTJunctions() call for X3D conversion.
Refactor output format handlers in prepareOutput function
Refactor file type deserialization in conversionWorker.js
Refactor binary file reading to convert to text in walkFileTree.js
Refactor code to track progress based on index in serializeBinary function
Refactor generateOutputData to remove unnecessary params in conversionTable[inputFormat] call
Refactor fab.scss to update colors and transitions for hexagon and plus icon components.
Refactor tooltips.scss to remove unnecessary import of 'vars' and update dependencies.
Refactor inline-left-nav styles to use updated color variables
Refactor dark theme styles for visualization change icon container.
Refactor setup-annotations.js for better positioning and readability
Add dark theme styles for visualization labels and change icon container.
Add fadein animation for ring menu in Visualization module CSS.
Refactor _onInterval method to use 'self' variable for better readability
Refactor post list styling and add hover effects in index.svelte
Refactor table of contents list height to use max-h-72 instead of h-72
Refactored search results layout to display in a grid format with updated styling.
Refactor author component to improve layout and styling
Refactor Embed component props and event types for better clarity and consistency.
Fix typo in Form/Shorthand index.js - Use any component from any library, or your own.
Fix typo in comment for modules that need manual transpilation for IE11 compatibility
Add cursor pointer to ClearButton and adjust padding in SearchInput
Refactor R6RS Base library import statements in r6rs_lib.js
Refactor Badge component to use 'Tag' instead of 'Component' prop for better clarity and consistency.
Refactor module.js to import logger and createServerMiddleware for better organization
Refactor Firebase Realtime DB to Firebase Performance in main.js for better performance tracking.
Refactor code in firebase-auth-sw.js for better readability and consistency
Fix bug in SimilarityGraph component where the y2 attribute was not being set correctly, causing incorrect rendering of edges.
Refactor code in TreeHeatmap component for better readability and maintainability
Refactor TreeHeatmap test file to remove unnecessary code and improve readability
Refactor SVG formatting in TreeHeatmap component tests
Add UpSet library with no-global-vars option and tap-spec devDependency, remove duplicate tap-spec and UpSet dependencies.
Refactor code to assign the result of showComponent to a variable in treeheatmap/index.js
Fix missing semicolon in components assignment in index.js
Refactor code to add a new method 'load' in Component class and update ComponentAccessor class in __init__.py
Refactor BoxPlot component by removing unnecessary comma in mark property.
Refactor .esdoc.json to include additional excluded directories for better documentation generation.
Refactor webpack config file for better readability and documentation
Refactor webpack configuration to prevent server-side processing of styles/images/fonts
Refactor: Corrected comment typo in webpack.prod.babel.js to remove console.log in production.
Refactor LOGIN_AUTH function to handle potential null result in error response
Refactor file paths for ReentrancyMock and ReentrancyAttack in ReentrancyGuard.test.js
Refactor testem.js to only include Chrome browser for local testing.
Commented out the 'quit' test in complete.test.js to temporarily disable it.
Refactor Travis CI configuration to conditionally set NPM token based on branch.
Fix conditional statement in .travis.yml for setting NPM auth token.
Update Travis CI configuration to only set NPM auth token for non-pull request branches.
Refactor afterEach hook in match.test.js to handle asynchronous operations and fix hanging test for matching dotfolder explicitly.
Refactor test case in parse.test.js to remove .only flag and ensure proper execution of nodemon slurping functionality.
Fix: Update platform check in run-mac-only.test.js\n\nUpdated the platform check in run-mac-only.test.js to only run on macOS. This change ensures that the test is only executed on macOS environments.
Add script tag to prerendered HTML for isodata processing
Add 'position' property to controls in reducer for better tracking of position in the UI.
Fix typo in URL for fetching RTC configuration data
Fix skip messages for Safari and iOS due to unreliable support, add Webkit bug reference.
Add warning message for non-public endpoint in getConfig function
Add test case to detect error when RTCPeerConstructor throws
Skip local IP test on Chrome and Edge due to mDNS hiding - Refactored test to skip on Chrome and Edge browsers as they hide local IPs with mDNS, ensuring accurate test results.
Refactor test script to run tests in browser and node environments
Refactor Breadcrumb.test.js to remove CompositionApi dependency
Add test to ensure Alert component has role=alert
Add test for rendering a number avatar showing count of truncated avatars
Add test for proper aria-attributes in Breadcrumb component
Refactor AlertDialog test snapshot to update data-testid attribute and add input field inside content.
Fix role attribute in AlertDialog component to use 'alertdialog' role instead of 'dialog' role
Add $colorMode injection to ChildComponent in ThemeProvider test\n\nThis commit adds the $colorMode injection to the ChildComponent in the ThemeProvider test, impacting the test coverage and functionality related to color modes.
Refactor CAlert.test.js by removing unnecessary mock for Alert styles
Remove import of Alert styles in CAvatarGroup.test.js
Remove unnecessary mock for 'breadstick/dist/components/Alert/styles.css' in CBadge.test.js
Remove unnecessary mock for 'breadstick/dist/components/Alert/styles.css' in CButton.test.js
Remove unnecessary mock for 'breadstick/dist/components/Alert/styles.css' in CFormControl.test.js
Refactor CAlertDialog.test.js: Remove unused imports and mock functions
Refactor CDrawer.test.js: Remove unused wrapEvent import and mock dependencies.
Refactor CEditable.test.js by removing unnecessary mock for CToast and updating imports.
Refactor test setup in CModal.test.js to mock specific dependencies
Refactor CStat component to use icons from internal-icons.js in CStat.test.js
Refactor CTag.test.js by removing defaultProviders and $chakraIcons from provide.
Refactor CIcon.test.js to remove unnecessary imports and update renderComponent function.
Refactored CStat.test.js by removing unnecessary imports and updating render function.
Remove '@nuxtjs/emotion' module from nuxt.config.js configuration
Refactor tests for CAspectRatioBox component to include new utility function getElementStyles, update test cases to check pseudo element styles, and improve readability.
Refactor CAlertDialog test file to use screen and wait utility functions
refactor: Update test file to use screen instead of getBy* methods\n\nThis commit refactors the CBreadcrumb.test.js file to use the screen object from testing-library/react instead of the getBy* methods for better readability and consistency. This change does not impact the functionality of the codebase but improves the testing approach.
Refactor CButton.test.js to use screen instead of getByText and container for better testing clarity
Refactor CButtonGroup test file to include screen object for better testing coverage
Refactor CAvatar.test.js to remove redundant data-testid attribute and improve readability
Refactor CBadge component styles for different variants and update rendering in CStack component.
Refactor focus navigation in CAccordion component tests
Refactor CBadge.test.js by removing redundant test for displaying children and ensuring variant styles are applied correctly.
refactor: Update test file to use screen instead of getByTestId\n\nThis commit refactors the test file for CBox component to use screen instead of getByTestId for better readability and consistency. This change does not impact the functionality of the codebase.
Refactor CCheckboxGroup test file for better readability and use of screen utility functions
refactor: Updated CCircularProgress test to use screen instead of query methods
refactor: Update CloseButton test to use screen utility and improve readability
Refactor CCode.test.js to use screen instead of getByText for better testing clarity
Refactor CControlBox.test.js to use screen utility for querying elements and improve readability
Refactor CDrawer test file for better readability and maintainability
Refactor CFlex.test.js to use screen instead of getByTestId for better testing clarity
Refactor test file for CIconButton component to use screen utility for better readability and consistency
Refactor CButtonGroup test to use screen utility for better readability and consistency
Refactor CDivider.test.js to use screen instead of getByTestId for better testing practices
Refactor CFormControl.test.js to use screen instead of getByTestId for better testing readability and consistency
Refactor CModal.test.js for better readability and maintainability\n\n- Added `screen` and `wait` imports for better testing utilities\n- Replaced `Vue.nextTick()` with `waitMs()` for rendering\n- Updated event handling in tests for better clarity and consistency\n- Improved focus testing with `waitMs()` and `toHaveFocus()`\n- Enhanced aria attributes testing for accessibility\n\nThese changes improve the testing code for CModal component.
Refactor CProgress.test.js to use screen from test-utils and update query functions
Refactor CPseudoBox.test.js to use screen instead of getByTestId
Refactor CRadio.test.js to use screen utility and improve readability
Refactor CRadioButtonGroup test file to use screen instead of getByText and getByTestId
Refactor CStack.test.js to use screen instead of getByTestId and remove unnecessary variables
Refactor CStat.test.js to use screen instead of getByText for better readability and consistency
Refactor CTag.test.js to use screen instead of getByText and update snapshot structure
Refactor CText.test.js to use screen instead of getByTestId and update render function in Chakra UI Core.
Refactor CAvatar test to render Default Avatar if src fails
Refactor CStack component to use simplified CSS classes and update child elements styling
Add tests for development build and invalid custom config in razzle build tests
Refactor makeProps function to use hardcoded values for testing purposes
Refactor: Add index comparison in componentProps loop for better validation
Refactor Dropdown component to include search functionality and update text display in tests.
Refactor Checkbox component event handling and controlled component for better readability and maintainability.
Add test case for handling multiple responses in Newman run options
Add test case for handling invalid collection URLs in CLI run options
Add test case for handling invalid collection URLs in Newman run options
Add tests for handling --global-var options with missing values and values without '=' in cli parser\n\nThis commit adds tests to ensure that the cli parser correctly handles --global-var options with missing values and values without '='. This helps improve the robustness of the parser and ensures proper error handling for these scenarios.
Add test case for global variable overrides in CLI run options
Add test case to verify overriding exported globals with --global-var in `newman run` command
Refactor loader_development function to load main.js as a module and register tests
Refactor unit test for js interface to use typeof operator for function check
Refactored script tag in spec.html to include loading jQuery dependency before main-browser.js for development loader.
Refactor test/node_functions.js to use for...in loop for iterating over tests object and call functions by name.
Add GitHub login button to SocialLoginButtons component
Add test for replacing JSX attribute in engine-runner test suite.
Fix bug in test/bind.spec.js where multiple classes were incorrectly removed instead of added by object syntax.
Add tests for ride prop in UncontrolledCarousel based on autoPlay value
Add tests for Utils.getTarget and Utils.setGlobalCssModule functions in utils.spec.js
Add test case for rendering down when direction is unknown on the context in DropdownMenu.spec.js
Add InputGroupText component and update InputGroupAddon tests to include rendering children and string provided in child InputGroupText.
Add focus management tests for Modal component.
Refactor PopperContent.spec.js test by removing console.log and improving readability
Add test for strict mode compatibility in Collapse component
Fix width signal in bind-external.html to correctly reference barWidth variable
Refactor Events mixin for VisComponent test to properly handle event emission and end test execution.
Refactor DynamicLineChart class to separate data update logic from render method
Refactor webpack configuration for tests entry point and loaders
Refactor webpack configuration to move devtool and node settings within output block
Update description in package.json for Candela unit/coverage/image tests.
Refactor test scripts to target plugins directory for image tests
Refactor lineup.js test file: Replace jQuery with vanilla JavaScript for element creation and manipulation. Use document.createElement instead of jQuery to create a div element with specified width and height. Update LineUp initialization to use the created div element.
Refactor structureTests function in exports.js to correctly handle default export presence.
Refactor BarChart test to update element count and element type.
Refactor test script to handle failure gracefully and set result variable.
Refactor styling in TreeHeatmap component for better readability and consistency.
Add babel-loader for JS files in webpack test config.
Add data rows rendering test in LineUp component
Refactor Histogram component test to dynamically count classes for bin marks.
Refactor test:unit script to run with concurrency 1
Increase timeout for preact build test to 45 seconds
Refactor error handling in loadPage function to log a message instead of throwing an error when page load timeout is reached.
Add validation for Luhn numbers in validators.js
Refactor notifier.test.js to use a defined error variable in addTransform callback.
Add rule "no-use-before-define" to ESLint configuration
Refactor karma.conf.js to include all subdirectories in test folder for webpack preprocessing
Refactor sinon server variable scope in universalBrowser.test.js
Refactor Angular2 test suite for improved performance and error reporting
Add test for direct call to onerror in browser.rollbar.test.js
Fix test case for webpack app due to Chrome version change in Travis.
Add exitOnUncaughtException option to rollbar configuration
Add telemetry events for xhr and fetch calls in autoInstrument network tests.
Add test case for ignoredMessages regex match in messageIsIgnored function
Add additional test cases for messageIsIgnored function to cover ignoredMessages regex and literal matches.
Fix webpack test error message for Travis Chrome 62.
Refactor config set and delete commands to use 'foo' instead of 'autosave' and update corresponding tests.
Refactor logger.warn calls in cli.spec.js to use logger.warn.calls.allArgs() and update error messages to include Node.js version information.
Refactor default value handling in DatePicker component
Refactor event handling in DatePicker component for better code organization and readability
Refactor event:change in InputNumber component to use sinon spy for testing and add delay for asynchronous operations.
Fix issue with date picker highlighting rows incorrectly
Add feature: highlight first item in autocomplete suggestions\n\nThis commit adds a new test case to the autocomplete component to ensure that the first item in the suggestions list is highlighted when the 'highlight-first-item' prop is enabled. This feature enhances the user experience by providing visual feedback on the selected item in the autocomplete dropdown.
Fix import path for repeatClick directive in repeatClick.test.js
Add additional roots to jest config and include new test match pattern\n\nCommit message: "Add additional roots to jest config and include new test match pattern"
Add tests for the 'off' method in the useEmitter hook to ensure proper event handling and removal.
Refactor Image component tests to improve slot testing and error handling
Refactor Message.vue to remove currentElement only if it exists in handleAfterLeave
Refactor ImageViewer.spec.js to use constants for image URLs and update tests accordingly
Refactor Image component mount function and update tests in Image.spec.js
Refactor Image component tests and add error handling for Image.vue
Refactor Image component tests and error handling\n\n- Removed unnecessary code in Image.spec.js\n- Added TODO comments for pending tests\n- Updated error handling in the error event test\n- These changes improve code readability and maintainability.
Update vue-jest dependency to use official repository URL.
refactor: Change showClose prop default value to false in Dialog component test\n\nThis commit updates the showClose prop default value from true to false in the Dialog component test. This change ensures that the close button is not shown by default, impacting the test case for the Dialog component.
Add facet filter for public access in search input component
Update font URLs to use HTTPS and fix SVG URL protocol.
Remove outdated information about using io.js with nodemon and mention using gulp-nodemon plugin in README.md.
Update Node.js versions in Travis configuration.
Refactor code structure and improve readability in lib/utils/index.js
Refactor signals.js to use object literal notation for signal constants
Fix npmrc file generation in Travis CI configuration.
Refactor code in rulesToMonitor function to properly append '*/*' when rule does not end with '**'.
Refactor daysClosedIn setting to allow bot to always reply if issue is closed, impacting bot behavior.
Update oliver.yml to set daysClosedIn to 100.
Reduce daysUntilStale from 60 to 14 for quicker issue handling.
Update stale.yml configuration to use 'stale' label instead of 'wontfix' and update corresponding comment message.
Update pstree.remy to version 1.1.2 in package.json
Add 'not-stale' label to exemptLabels in stale.yml configuration.
Update GitHub Sponsors-enabled username in FUNDING.yml
Refactor code in run.js to remove unnecessary stdio.pop() and stdio.push(process.stderr) calls, improving code readability and maintainability.
Update Node.js version to 14 in Travis CI configuration.
Update semantic-release version to 17.4.4 in package.json
Update stale.yml configuration to mark and close stale issues and pull requests automatically after a longer period of inactivity, with customized messages and exempt labels.
Refactor exempt-issue-labels in stale.yml to simplify list of labels.
Update Node.js version to 14 in release workflow.
Add static contributor logo to website index page.
Add new affiliate links and images to index.html
Add new sponsor logos for Casinosicuri.info and Correct Casinos Australia.
Refactor server.js to use custom compression module instead of built-in compression.
Update sirv package to version 1.0.0
Refactor middleware handling in serve mode to use config object instead of options
Refactor configuration file to export a default config function and individual config functions for start, build, and serve commands.
Refactor bundler.js to set minify property default value to true and simplify plugins array.
Refactor code in optimize-graph-plugin.js to simplify preloads.push logic
Refactor code to improve handling of publicPath in ChunkGraph functions
Refactor cache path generation to use a more structured format for npm modules.
Refactor CLI options and error handling in wmr CLI
Refactor lazy loading to only occur on the client side and add check for window object.
Remove .only from polkompress test suite
Refactor moduleGraph initialization in wmr-middleware
Update eslintIgnore in package.json to include all files in test/fixtures directory.
Add support for ignoring old data in BROWSERSLIST and fix typo in comments
Add release notes for version v0.1.2 on June 23, 2018.
Add Docker support for building and testing the project.
Refactor bug report template for better readability and consistency.
Update feature request template in .github/ISSUE_TEMPLATE/feature_request.md to improve clarity and consistency.
Refactor DatasetSelector test to use sinon spy for onChange function and update event object to match value property.
Add link to Cyber Reboot website in Header component and update logo alt text.
Add setSelectedDatum action and selector for controls to manage selected data point.
Add dark theme styles for tags in NoteSelector module.
Refactor styling scheme for components with styled components and add accessibility (Focus) Styling.
Add build-vsc script for building Vue Styled Components in package.json
Refactor Mortezas button in Button component story
Refactor Portal component to remove unnecessary console log
Refactor BreadcrumbItem setup to use cloneVNodes and fix handling of children in BreadcrumbSeparator
Add FormHelperText and FormErrorMessage components to FormControl stories for better user experience.
Add Avatar, Badge, and Box components to Popover stories; update Hover Trigger to use Button instead of Anchor.
Add Icon component to Menu component for better UI consistency and functionality. Fix MenuButton component usage by removing 'as' prop.
Refactor Radio component to filter out empty slots before rendering.
Refactor event handling in Switch component test to use a spy instead of an array
Refactor CloseButton.test.js to remove unnecessary template prop in renderComponent function
Refactor: Update components.js to list components alphabetically
Remove "body-scroll-lock" package from dependencies.
Remove outdated Vue dependency and update related packages.
Remove unnecessary dependency "vue-template-compiler" from package.json
Refactor RadioGroup component in RadioGroup.stories.js by removing unnecessary Button and @change event listener, and updating RadioButtonGroup component.
Update Chakra UI Vue dependency to version 0.2.6
Update link to open issues in README.md
Refactor aria attributes in Editable component tests
Refactor Input stories to use variant "Filled" with custom focus and error border colors
Enable Editable and Stat components in components.js
Refactor CAccordion components to extend CBox and CIcon for better consistency and functionality.
Remove flexShrink from baseProps in props.js
Refactor CButton.stories.js to reduce loading time from 60 seconds to 3 seconds.
Refactor CAlertDialog components to include explicit names for better clarity and consistency.
Add support for MDX in Chakra UI docs
Add documentation and update component descriptions for CCircularProgress and CCircularProgressLabel components.
Add data-chakra-component attribute to CCircularProgressLabel and CCircularProgress for accessibility and component identification.
Refactor CControlBox.js to preserve accessibility for custom controls
Add documentation and update component description for CDivider component
Add accessibility attributes and data attribute to CDivider component
Remove workbox configuration and precaching from service worker script
Refactor CRadio component in CRadio.stories.js to remove defaultIsChecked prop and update Male radio button styling.
Add vue-lorem-ipsum package to enhance Vue components with placeholder text.
Add Chakra UI Vue theme module mapping to Jest config
Update Vuesax link in README.md
Fix yarn command in nodejs workflow to properly install dependencies and bootstrap project.
Remove unnecessary router.afterEach hook in createRouter function.
Refactor analytics plugin to use environment variable for Mixpanel token and handle initialization errors
Remove console.log statement in watch method for route path change in default layout. This change improves code cleanliness and does not impact functionality.
Refactor: Uncomment FileContributors component in DefaultLayout.vue
Update "@chakra-ui/vue" to version "^0.5.2" in package.json
Refactor test script in package.json to only run Jest.
Refactor imports and remove redundant import of VScrollLock and merge in Chakra index.js
Refactored postinstall script to exclude yarn test and updated build scripts for @chakra-ui/vue package.
Add CFlex and CIcon components to CStack.stories.js and add a new story for nesting Flex in stack.
Refactor module.spec.js to remove outdated comments and improve test reliability
Refactor CAspectRatioBox.test.js to use const instead of let and update test case for correct styles
Refactor test file to remove unused import and update render function.
Refactor CAccordion.test.js to remove unnecessary imports and code for better readability.
Fix test case for rendering correctly in CAspectRatioBox component
Refactor CImage component by removing commented out code and updating imageProps assignment.
Add indent rule and disable template-curly-spacing rule in ESLint configuration.
refactor: Updated size validator in buttonProps to include 'xs' size option
Refactor CFlex component in CFlex.stories.js to use specific width and flex-grow values for child elements.
Fix missing style props for border-radius and flex-grow declarations in version 0.6.3
Update Chakra UI Vue to version 0.6.5 in package.json
Remove "known-css-properties" dependency from package.json
Remove known-css-properties@0.20.0 from yarn.lock
Refactor CReset component to remove unnecessary fontFamily property and adjust destructuring in created method
Refactor font styles in Chakra theme to remove Comic Sans MS usage
Update Chakra UI Vue dependency to version 0.6.6
Fix: Update package registry URLs for Font Awesome dependencies\n\nThis commit updates the package registry URLs for Font Awesome dependencies to use the official Yarn registry instead of the Font Awesome private registry. This change ensures that the dependencies are resolved correctly and improves the overall stability of the project.
Update "@chakra-ui/vue" dependency to version "^0.7.0-next.2"
Add @chakra-ui/vue to nohoist and update to version ^0.7.0-next.2
Update Chakra UI Vue dependency to latest version in package.json
Refactor publishing script to use changeset for better version management
Refactor module.js to include internalIcons directly and extend with packIcons and custom icons.
Refactor release script to use yarn command in package.json
Add test for srcset attribute in CImage component
Refactor CThemeProvider.test.js to import getElementStyles from test-utils
Add chakra-ui-theme package to ci.json configuration
Update dependencies in package.json: remove vue "^2.6.12" and add vue-error-boundary "^1.0.3", vue-live "1.5.1", and vue-lorem-ipsum "^0.0.1"
Add support for private properties in objects in Babel configuration
Refactor icon parsing functions and add support for different icon packs
Add @change event listener to CTextarea component for handling input changes
Enable silent mode in shell configuration for razzle-start tests.
Update allowed branches for publishing to include "next" branch.
Refactor prettier configuration and lint-staged script to use 'yarn format' command.
Refactor lint-staged configuration in package.json to remove unnecessary git add command
Update changelog configuration to use @changesets/changelog-github for the jaredpalmer/razzle repository.
Update webpack config to include specific directories for babel-loader and disable babelrc.
Add cSpell configuration with custom words.
Update dependencies for "@babel/code-frame", "caniuse-lite", "@types/node", "escape-string-regexp", and "tailwindcss" packages.
Refactor layout structure to improve readability and maintainability
Update GitHub edit link to point to main branch instead of production branch
Refactor tailwind.config.cjs to use const for configuration object
Add workaround for Tailwind JIT problem in SvelteKit
Refactor mdsvex.config.js: Remove smartypants configuration and add text preview plugin.
Refactor onMount function in __layout.svelte to remove async and update themeChange; integrate Fathom analytics configuration.
Add new technical terms to cSpell.words for spell checking.
Add Vite server configuration to allow serving files from one level up in the project root
Remove babel-plugin-transform-react-constant-elements from package.json
Refactor prerelease script to include tsd:lint before testing and building.
Add ESLint rules for accessibility improvements.
Refactor build:docs-toc script to remove README.md reference.
Update babel-plugin-transform-react-handled-props to version 0.2.3
Update Faker library CDN to use jsDelivr for better performance.
Update "satisfied" package version to "^1.1.0"
Update enzyme version to 2.8.2 and add react-test-renderer version 15.5.4
Refactor webpack.dll.js output library name to use config.compiler_hash_type.
Refactor webpack.dll.js output configuration for cleaner filenames and library names.
Update compiler_public_path to use raw.github.com instead of cdn.rawgit.com.
Fix webpack.umd.config import in UMD build task
Refactor prerelease script to include tsd:test and update release scripts.
Update Puppeteer Dependencies: Fix typo in job name and update Puppeteer dependencies to resolve missing dependencies on Debian.
Refactor linting scripts and fix linting issues.
Update Karma configuration to use Puppeteer as the browser and add flags to prevent errors on CircleCI.
Refactor preset-env.js to conditionally set modules option based on env
Refactor deployment scripts and remove unnecessary changelog deployment step
docs(changelog): update changelog and deploy after docs deployment
Update CarbonAd script source URL to use a different serve and placement values
Update CircleCI configuration to use circleci/node:8-browsers image and remove unnecessary Puppeteer dependencies installation.
Refactor deploy:docs task to use relative path for gh-pages deployment
Refactor 'clean:dist' task to delete all files inside dist directory
Refactor CircleCI configuration to use v2 cache for yarn.lock file.
docs: Update postdeploy script to use yarn for deploying changelog
Refactor server configuration in config.js by removing server_host and server_port variables
Refactor Sidebar component to use EventStack for handling document click events.
Refactor build:changelog script to include project details and adjust since-tag parameter.
Add minimal mocha reporter for better test output clarity.
Refactor Modal component to use createRef for better performance and readability\n\nThis commit refactors the Modal component to use createRef instead of direct assignment for ref handling. This change improves performance and readability of the codebase.
Refactor Button component to use createRef for ref handling and fix aria-pressed attribute assignment
Update package.json to include unpkg field for UMD build distribution.
Add post-commit hook to run 'git update-index --again' after committing changes.
Refactor Visibility component lifecycle methods for better handling of prop changes and cleanup
Refactor Sticky component to use state for 'active' property and update listeners based on state changes.
refactor: Remove unused build:changelog and deploy:changelog scripts
Remove git add from lint-staged for js, jsx, ts, tsx files and mdx files
Refactor help message in newman.js to use angle brackets for command parameter.
Refactor util.js to use URL constructor instead of url module for better compatibility and performance.
Refactor package-lock.json by removing unnecessary dependencies and updating versions.
Refactor code comments for consistency and clarity
Refactor parsePath function to return a fully parsed path object
Add new card types to Sort.js.
Refactor Sort.js to simplify type labels generation and include additional card types.
Update deployment link in printHostingInstructions.js to point to create-react-app documentation.
Update README link in CONTRIBUTING.md to point to the test folder.
Add progress indicator to UpdateProfileForm for tracking completion status.
Refactor SocialLoginGroup.css to update Github button styling and image URL.
Add Rust toolchain and cargo action, install typos-cli, and run typos check in CI workflow.
fix: Update @putout/plugin-madrun description and add new features to logical expressions plugins
fix: Fix exit codes in putout package
Bump version to 14.0.1 in engine-runner package.json
Fix typos installation command in nodejs workflow.
Add @putout/eslint package v1.0.0 for linting functionality.
Add eslint configuration file to exclude eslint config files from coverage analysis.
Refactor IIFE function calls in remove-iife plugin to use __f instead of __c
Add feature to disable unused typescript types check for *.md files.
Bump version to 6.2.0 in engine-processor package.
Bump version to 6.3.0 in engine-processor package.
Bump version to 6.4.0 in engine-processor package.json
Add support for yarn files in putout ignore list, enhance processorRunners in @putout/test and @putout/engine-runner.
Add .git to ignore in putout feature.
Bump version to 6.4.1 in engine-processor package.
Add new math-related features and update dependencies.
Bump version to 2.0.0 and update description in package.json
Fix: Update __children to __jsx_children and add various improvements and new features\n\nThis commit updates the variable name from __children to __jsx_children and introduces several improvements and new features across different packages, including dropping support for node < 16, changing the return signature of "match()" function, adding support for sparse arrays, improving support for JSX elements and expressions, adding support for JSXText, and updating various plugins and packages for better functionality.
Bump version to 7.1.2 in engine-loader package.
Bump version to 6.4.2 for @putout/engine-processor package.
Add support for OptionalChaining in @putout/plugin-logical-expressions, IfStatement test in @putout/plugin-extract-sequence-expressions, and SequenceExpressions in @putout/plugin-remove-unused-variables for nano-memoize v2.0.0. (#126)
Add @putout/plugin-apply-is-array description and @putout/plugin-apply-flat-map feature, update cosmiconfig to v8.0.0.
Fix: Remove useless group report after transform, add apply-maybe feature, improve support for apply-literal-notation and remove-useless-escape in @putout/plugin-regexp.
Refactor compiler.js to simplify resolve and locals assignment
Add call for maintainers and update documentation links in README.md
Add context prop to shallow rendering in DropdownMenu.spec.js
Update dependencies for React, React Helmet, React Prism, React Test Renderer, Rollup, and Rollup plugins.
Refactor: Update main entry point in package.json to "lib/index.js" for better organization and consistency.
Update dependencies and import Bootstrap CSS in src/index.js
Refactor build and test scripts to use cross-env for cross-platform compatibility
Update copyright notice to include Evan Sharp.
Refactor ModalNested.js to fix conditional statement in onClosed prop of Modal component
Refactor FormInline component to improve form layout and styling
Refactor UncontrolledNavDropdown to use UncontrolledDropdown component with nav prop
Refactor ButtonGroup component layout in Example to remove unnecessary whitespace and improve readability.
Add Admin dashboard example app built with reactstrap to the list of organizations and projects using `reactstrap` in the README.md file.
Refactor Navbar color in Navbar.js to fix styling issue
Fix issue with missing closing parenthesis in conditional statement in DropdownMenu component. Add 'persist' prop to props destructuring.
Add DevExtreme React Grid to list of organizations and projects using `reactstrap`
Refactor CollapsePage component to remove unnecessary onExit prop and update documentation.
Refactor npm install commands to remove unnecessary version specification
Refactor button labels in Home component
Fix typo in GitHub link in Nav component
Updated the link to the example App.js file in the reactstrap documentation.
Add 'esnext' entry to package.json and include 'src' directory in project structure.
Refactor ISSUE_TEMPLATE.md for better readability and clarity
Refactor Tooltip event listeners to directly call show and hide functions on focusin and focusout events.
Update modal and backdrop transition timeouts for better user experience.
Add invalid checkbox handling in FormFeedback component
Refactor regular expression in .travis.yml for better readability and consistency.
Add create-react-app instructions to README.md
Refactor ClearfixPage to improve readability and add clarification on clearfix implementation.
Refactor layout classes in Layout.js for better readability and consistency
Add avangate email address to the footer in app.js
Refactor Components index.js: Reorder items and add Collapse component.
Update peer dependencies for react and react-dom to version 16.3.0
Bump version to 8.0.0 in package.json
Bump version to 8.0.1 in package.json
Fix link to components page in NotFound component
Bump version to 8.1.0 in package.json
Update Travis CI configuration to use encrypted email and API key for deployment.
Bump version to 8.3.0 in package.json
Refactor Travis CI configuration to include a deploy stage for documentation updates.
Refactor Travis CI configuration to deploy only when a tag is present and update Node.js version to 12.
Refactor Travis CI configuration to include linting, testing, and deployment stages.
Update Node.js versions, adjust script and after_script in Travis CI configuration.
docs(travis): publish documentation for $TRAVIS_TAG ($TRAVIS_COMMIT) - Successfully published documentation for the specified tag and commit.
Bump version to 8.5.0 in package.json
Update peerDependencies for react and react-dom to be greater than or equal to version 16.3.0.
Refactor PULL_REQUEST_TEMPLATE.md to correct typo and improve clarity
Add PIXINVENT creator and Vuexy product to PremiumThemes list
Add support for listbox or menu role in Dropdown component (#2077)
docs(Github Actions): Update git push commands in documentation script
docs(Github Actions): Remove unnecessary tagging in documentation publishing script
docs(Github Actions): remove old origin and add new origin for publishing documentation
docs(Github Actions): Set user name and email before publishing documentation
Update GITHUB_TOKEN in docs workflow to use REACTSTRAP_DOCS_GITHUB_TOKEN secret.
Refactor publishing workflow to use REACTSTRAP_DOCS_GITHUB_TOKEN for authentication.
Remove references to `reactstrap` in README.md
Fix issue with prerelease tags on first run of release-please workflow
Refactor GitHub Actions workflow to fix prerelease tag bug and update npm registry URL.
Bump version to 8.10.1 in package.json
Refactor PopoverUncontrolled component to use named function and export it for better readability and maintainability.
Add new features including `flush` and `stayOpen` support for accordion, Offcanvas for Bootstrap 5, Bootstrap 5 updates for carousel, horizontal collapse for collapse, ListGroupNumbered for ListGroup, and Placeholder component.
Update README.md to mention support for Bootstrap 5 and provide link to Reactstrap v8 for Bootstrap 4 users.
Fix broken link to Reactstrap v8 in Index.stories.mdx
Refactor Dropdown component to use getToggle method for getMenuCtrl retrieval
Refactor Collapse component to use props.innerRef if available, otherwise use React.createRef()
Update jsdom version to 19.0.0 in package.json
chore: Update package.json with new package name, version, description, keywords, dependencies, devDependencies, scripts, and configurations.
Update Firebase version to 7.11.0 in module.js
Fix typo in ISSUE_TEMPLATE/question.md
Bump version to 6.0.0 in package.json
Add optional properties `legacyMode`, `injectModule`, and `lazy` to `FirebaseModuleConfiguration` interface.
Add support for Firebase v7+ in Vue and Nuxt apps
Refactor Vue and Nuxt configurations to use NuxtFireInstance interface for Firebase module integration.
Add new options `subscribeManually`, `emulatorPort`, `emulatorHost`, and `memoryOnly` to respective service configurations.
Refactor: Changed option name from 'onFirebaseHosting' to 'loadFromFirebaseHosting' in firebase-auth-sw.js
Fix missing semicolon in validateConfigKeys function declaration
Fix broken link in error message for missing 'services' option in validateOptions function
Refactor code in View.js for improved readability and efficiency
Refactor rollup.config.js to include d3-array, d3-scale, and d3-delaunay dependencies.
Refactor image.md: Correct typo in description of smooth property
Update copyright year to 2021
Refactor package.json: Update devDependencies and workspaces configuration
Refactor exports in vega/index.js to improve code readability
Update GitHub Actions workflow to ensure apt-get is updated before installing dependencies.
Add @lightningjs/cli to nohoist list in workspaces configuration
Fix electron-builder command in exportElectron function
Update platform versions and bundle IDs for iOS, tvOS, Android, and macOS capabilities in wdio.conf.js
Add e2e web reporting functionality to package.json
Refactor e2e scripts in package.json for consistency and clarity.
Refactor navigation setup and import statements, update components and dependencies.
Refactor code in configureProject function to remove unnecessary console.log statements and improve readability.
Remove glibc and git from buildInputs in shell.nix
Refactor webpack.js to remove unnecessary 'tag' property from the loaders configuration.
Refactor webpack.js to use path module for resolving gloPath and handle undefined basePath.
Refactored webpack configuration to support Webpack 2 and added new loaders for various file types.
Remove resize table and resize matrix examples from index.json
Bump version to 0.4.0 in setup.py
Update sw-precache-webpack-plugin to version 0.11.2
Add before_script to .travis.yml to set LIGHTHOUSE_CHROMIUM_PATH variable for Lighthouse testing.
Refactor chrome.js to handle chrome launch errors and log them
Update test script in package.json to run tests in stream mode.
Update devDependencies in package.json for preact-cli.
Refactor release workflow to include option to publish to npm
Refactor CI workflow by removing PnPTest job and updating ci-success job dependencies.
Add development and production scripts for easier build process management
Refactor webpack configuration to use 'asset' module type for handling font and image files
Add linting step to GitHub Actions workflow.
Update CefSharp packages to version 92.0.260 and DiscordRichPresence to version 1.0.175.
Update json5 package to version 1.0.2 and its dependencies in package-lock.json
Update CefSharp packages to version 110.0.250 and DiscordRichPresence to version 1.1.3.18.
Refactor isCurrency validation function to clarify the description of digits_after_decimal array.
Add invalid postal codes for Brazil and New Zealand validators
Add new and improved locales for `isMobilePhone`, `isPostalCode`, `isAlpha`, `isAlphanumeric`, `isBAN`, and `isIdentityCard` functions. Updated locales include `az-AZ`, `uz-Uz`, `de-DE`, `en-PH`, `es-ES`, `bs-BA`, `zh-CN`, `AZ`, `ES`, `IL`, `fa-AF`, `fa-IR`, `vi-VN`, `EG`, `SV`, and `IT`. (#1357)
Fix naming conventions and update workflow to run tests on different Node.js versions.
Refactor error message for non-string inputs in README.md
Add Gitter badge to README.md
Refactor pull request template to clarify description section
Add contributors Ezrqn Kemboi and Sarhan Aissi to README.md
feat(validatorName): brief title of what has been done\n\nProvide references showing the structure of the data to be validated\n- Added references to show the structure of the data being validated in the PR\n\n## Checklist\n- [ ] PR contains only changes related; no stray files, etc.\n- [ ] README updated (where applicable)\n- [ ] Tests written (where applicable)\n- [ ] References provided in PR (where applicable)
Add wait method to Rollbar class for asynchronous operations.
Add performance optimization configuration in webpack for better code performance.
Refactor webpack configuration by removing unused code and i18n plugin, and updating DefinePlugin arguments.
Add sponsor link to README.md
Refactor UserItem component by removing console.log statements
Update project name, short name, and description in manifest.json to reflect new project name "Noir" and corresponding GitHub repository.
Refactor users reducer to remove unnecessary console.log and improve code readability
Add status response field in return object for parseJSON function
Refactor import order in configure_app.js for better readability and maintainability
Refactor auth middleware to use JWT_SECRET from process.env
Refactor webpack config by removing unused i18n and manifest imports
Refactor RouteAuth component tests to include both access scenarios
Refactor logging statements in xhr_wrapper.js for better code readability
Add optional language field to LoginDataType in AuthSvc API
Add pseudossl import for quick SSL prototyping in server config.
Refactor webpack config to set CLIENT_DIST_PATH correctly
Refactor dev script in package.json
Refactor LoginDataType in AuthSvc API by removing optional language field
Refactor authCheck binding in RoutingWrapper component to use bind method for better readability
Remove unnecessary comments about Semantic styles scrollbars in global styles.
Refactor types/index.js to use React$Node instead of Node for tag and component properties
Refactor theme colors to update primary and accent colors for a new design scheme.
style: Update background color in Footer component to use lighter primary color
Remove unused dependencies and update optional dependencies in package.json
Refactor webpack base config to include Preact and preact-compat aliases for potential size optimization and note on compatibility with React.
Add global variables i18n, Raven, and ga to ESLint configuration\n\nThis commit adds global variables i18n, Raven, and ga to the ESLint configuration to ensure they are recognized and not flagged as undefined.
Refactor SidebarComponent to improve readability and maintainability
Refactor componentWillReceiveProps method to specify Props type and remove unnecessary comments
Refactor UsersItemComponent to update label for User ID statistic.
chore: Update package dependencies for bug fixes and version upgrades
Add documentation for Awral in utils/index.js
Refactor Dashboard content in en.json for consistency and clarity.
Refactor auth middleware to handle JWT token decoding errors and update user language in token
Refactor links in API to point to updated documentation URLs
Add lazy loading for Links component in routes configuration
Update dependencies versions in package.json for react-ga, autodll-webpack-plugin, file-loader, flow-bin, style-loader, uglifyjs-webpack-plugin, and url-loader.
Add ADD_STYLES_TO_ELEMENT action to layout actions
Refactor layout reducer to remove commented out code and improve code readability
Remove version 0.1.1 from CHANGELOG.md and update version 0.1.0 details.
Refactor Awral usage in actions utils and update documentation
Refactor authCheck method in RoutingWrapper to be static and suggest storing logic in a plain function instead of a method. See src/common/components/addons/RouteAuth/index.jsx for reference.
Refactor routes.js to lazy load Links component
Add Polyfill for IE 11 to address compatibility issues with Promise in the codebase.
