[
    {
        "msg": "build: improve build output",
        "diff": "diff --git a/packages/kiwi-core/package.json b/packages/kiwi-core/package.json ],\n\"dependencies\": {\n\"color\": \"^3.1.2\",\n- \"emotion\": \"^10.0.27\",\n\"focus-trap\": \"^5.1.0\",\n\"focus-trap-vue\": \"^0.0.4\",\n\"lodash-es\": \"^4.17.15\"\n},\n\"peerDependencies\": {\n\"breadstick\": \"^0.1.21\",\n+ \"emotion\": \"^10.0.27\",\n\"vue\": \"^2.6.10\",\n\"vue-styled-components\": \"git+https://github.com/codebender828/vsc.git\"\n},\n",
        "date": "24.01.2020 03:26:14",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "build",
        "chatgpt_zeroshot": "Add emotion as a peer dependency and remove emotion as a regular dependency."
    },
    {
        "msg": "build: added image to core",
        "diff": "diff --git a/packages/kiwi-core/rollup.config.js b/packages/kiwi-core/rollup.config.js @@ -66,14 +66,14 @@ const commons = {\n]\n}\n-// const bannerTxt = `/*! Chakra-Vui v${pkg.version} | MIT License | github.com/codebender828/kiwi-ui */`\n+const bannerTxt = `/*! Chakra-Vui v${pkg.version} | MIT License | github.com/codebender828/kiwi-ui */`\nconst baseFolder = './src/'\n-// const capitalize = (s) => {\n-// if (typeof s !== 'string') return ''\n-// return s.charAt(0).toUpperCase() + s.slice(1)\n-// }\n+const capitalize = (s) => {\n+ if (typeof s !== 'string') return ''\n+ return s.charAt(0).toUpperCase() + s.slice(1)\n+}\nconst components = fs.readdirSync(baseFolder)\n.filter((f) => fs.statSync(path.join(baseFolder, f)).isDirectory())\n@@ -90,23 +90,23 @@ const entries = {\n* Configurations\n*/\nexport default () => {\n- // const mapComponent = (name) => {\n- // return [{\n- // input: baseFolder + `${name}/index.js`,\n- // external: externals,\n- // output: {\n- // format: 'umd',\n- // name: capitalize(name),\n- // file: `dist/components/${name}/index.js`,\n- // banner: bannerTxt,\n- // exports: 'named',\n- // globals: {\n- // vue: 'Vue'\n- // }\n- // },\n- // ...commons\n- // }]\n- // }\n+ const mapComponent = (name) => {\n+ return [{\n+ input: baseFolder + `${name}/index.js`,\n+ external: externals,\n+ output: {\n+ format: 'umd',\n+ name: capitalize(name),\n+ file: `dist/components/${name}/index.js`,\n+ banner: bannerTxt,\n+ exports: 'named',\n+ globals: {\n+ vue: 'Vue'\n+ }\n+ },\n+ ...commons\n+ }]\n+ }\nlet config = [{\ninput: entries,\n@@ -115,62 +115,62 @@ export default () => {\nformat: 'esm'\n},\n...commons\n+ },\n+ {\n+ input: entries,\n+ output: {\n+ dir: `dist/es/`,\n+ format: 'es'\n+ },\n+ ...commons\n+ },\n+ {\n+ input: entries,\n+ output: {\n+ dir: `dist/cjs/`,\n+ format: 'cjs',\n+ exports: 'named'\n+ },\n+ ...commons\n+ },\n+ {\n+ input: './src/index.js',\n+ output: {\n+ file: `dist/umd/index.js/`,\n+ name: capitalize('chakra'),\n+ format: 'umd',\n+ exports: 'named',\n+ banner: bannerTxt,\n+ globals: {\n+ vue: 'Vue'\n}\n- // {\n- // input: entries,\n- // output: {\n- // dir: `dist/es/`,\n- // format: 'es'\n- // },\n- // ...commons\n- // },\n- // {\n- // input: entries,\n- // output: {\n- // dir: `dist/cjs/`,\n- // format: 'cjs',\n- // exports: 'named'\n- // },\n- // ...commons\n- // },\n- // {\n- // input: './src/index.js',\n- // output: {\n- // file: `dist/umd/index.js/`,\n- // name: capitalize('chakra'),\n- // format: 'umd',\n- // exports: 'named',\n- // banner: bannerTxt,\n- // globals: {\n- // vue: 'Vue'\n- // }\n- // },\n- // ...commons\n- // },\n- // {\n- // input: './src/index.js',\n- // output: {\n- // file: 'dist/chakra-vui.esm.js',\n- // name: capitalize('chakra'),\n- // format: 'esm',\n- // exports: 'named',\n- // banner: bannerTxt\n- // },\n- // ...commons\n- // }\n+ },\n+ ...commons\n+ },\n+ {\n+ input: './src/index.js',\n+ output: {\n+ file: 'dist/chakra-vui.esm.js',\n+ name: capitalize('chakra'),\n+ format: 'esm',\n+ exports: 'named',\n+ banner: bannerTxt\n+ },\n+ ...commons\n+ },\n// Individual components\n- // ...components.map((f) => mapComponent(f)).reduce((r, a) => r.concat(a), [])\n+ ...components.map((f) => mapComponent(f)).reduce((r, a) => r.concat(a), [])\n]\n- // if (process.env.MINIFY === 'true') {\n- // config = config.filter((c) => !!c.output.file)\n- // config.forEach((c) => {\n- // c.output.file = c.output.file.replace(/\\.js/g, '.min.js')\n- // c.plugins.push(terser({\n- // output: {\n- // comments: '/^!/'\n- // }\n- // }))\n- // })\n- // }\n+ if (process.env.MINIFY === 'true') {\n+ config = config.filter((c) => !!c.output.file)\n+ config.forEach((c) => {\n+ c.output.file = c.output.file.replace(/\\.js/g, '.min.js')\n+ c.plugins.push(terser({\n+ output: {\n+ comments: '/^!/'\n+ }\n+ }))\n+ })\n+ }\nreturn config\n}\n",
        "date": "16.02.2020 01:07:01",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "build",
        "chatgpt_zeroshot": "Refactor rollup configuration and add minification support"
    },
    {
        "msg": "build: add deps to package.json",
        "diff": "diff --git a/package.json b/package.json \"deploy-storybook\": \"storybook-to-ghpages -- --out=.out\",\n\"now-build-storybook\": \"build-storybook -o dist/storybook\"\n},\n- \"devDependencies\": {\n+ \"dependencies\": {\n\"@babel/core\": \"^7.7.4\",\n\"@babel/plugin-proposal-object-rest-spread\": \"^7.7.4\",\n\"@babel/plugin-transform-modules-commonjs\": \"^7.7.4\",\n\"vue-lorem-ipsum\": \"^0.0.1\",\n\"vue-template-compiler\": \"^2.6.10\",\n\"vuepress\": \"^1.2.0\"\n- },\n- \"dependencies\": {}\n+ }\n}\n",
        "date": "20.02.2020 02:14:29",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "build",
        "chatgpt_zeroshot": "Update dependencies in package.json"
    },
    {
        "msg": "build: improve release config",
        "diff": "diff --git a/package.json b/package.json \"lerna:build\": \"lerna run build\",\n\"test\": \"jest\",\n\"clean\": \"lerna run clean\",\n- \"release\": \"lerna publish\",\n- \"patch\": \"lerna version patch\",\n+ \"release\": \"lerna version patch && lerna publish from-package\",\n+ \"prepublish\": \"yarn test && yarn build\",\n\"push\": \"git add -A && git commit -m \\\"chore(lerna): publishing package \\\" && lerna version --conventional-commits\",\n\"storybook\": \"start-storybook -p 9000\",\n\"build-storybook\": \"build-storybook --quiet\",\n",
        "date": "17.04.2020 01:05:05",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "build",
        "chatgpt_zeroshot": "chore(package.json): update release script and add prepublish script"
    },
    {
        "msg": "build: updated lockfile",
        "diff": "diff --git a/yarn.lock b/yarn.lock resolved \"https://registry.yarnpkg.com/@bcoe/v8-coverage/-/v8-coverage-0.2.3.tgz#75a2e8b51cb758a7553d6804a5932d7aace75c39\"\nintegrity sha512-0hYQ8SB4Db5zvZB4axdMHGwEaQjkZzFjQiN9LVYvIFB2nSUHW9tYpxWriPrWDASIxiaXax83REcLxuSdnGPZtw==\n+\"@chakra-ui/vue@^0.4.1\":\n+ version \"0.4.2\"\n+ resolved \"https://registry.yarnpkg.com/@chakra-ui/vue/-/vue-0.4.2.tgz#5a6dc8ab19cad1b59039632037e6a32360378a71\"\n+ integrity sha512-wQ53rlbrG4+AsyAUFuaboF2R3kHfwHFD9jUqL51UsVkc5cUecweyXvavNF/YRMBkAI1ni6BzPM/3q/9LqqHE7w==\n+ dependencies:\n+ \"@popperjs/core\" \"^2.4.0\"\n+ \"@styled-system/css\" \"^5.0.23\"\n+ animejs \"^3.1.0\"\n+ aria-hidden \"^1.1.1\"\n+ breadstick \"^0.2.14\"\n+ color \"^3.1.2\"\n+ focus-trap \"^5.1.0\"\n+ focus-trap-vue \"^0.0.4\"\n+ lodash-es \"^4.17.15\"\n+ portal-vue \"^2.1.6\"\n+ styled-system \"^5.1.2\"\n+ v-scroll-lock \"^1.1.0\"\n+\n\"@cnakazawa/watch@^1.0.3\":\nversion \"1.0.4\"\nresolved \"https://registry.yarnpkg.com/@cnakazawa/watch/-/watch-1.0.4.tgz#f864ae85004d0fcab6f50be9141c4da368d1656a\"\n",
        "date": "09.05.2020 18:24:45",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "build",
        "chatgpt_zeroshot": "Update Chakra UI Vue to version 0.4.2 and add new dependencies."
    },
    {
        "msg": "build: include vars in docs build",
        "diff": "diff --git a/packages/chakra-ui-docs/now.json b/packages/chakra-ui-docs/now.json {\n- \"version\": 2\n+ \"version\": 2,\n+ \"env\": {\n+ \"MIXPANEL_TOKEN\": \"91ec73fd1b8e164d6cfbae6bf1a3e7d1\"\n+ },\n+ \"build\": {\n+ \"env\": {\n+ \"MIXPANEL_TOKEN\": \"91ec73fd1b8e164d6cfbae6bf1a3e7d1\"\n+ }\n+ }\n}\n",
        "date": "10.05.2020 22:42:53",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "build",
        "chatgpt_zeroshot": "Add MIXPANEL_TOKEN to now.json for tracking purposes"
    },
    {
        "msg": "build: resolve chakra ui dep version",
        "diff": "diff --git a/package.json b/package.json \"@babel/plugin-transform-modules-commonjs\": \"^7.7.4\",\n\"@babel/plugin-transform-parameters\": \"^7.7.4\",\n\"@babel/preset-env\": \"^7.9.5\",\n- \"@chakra-ui/vue\": \"^0.5.2\",\n+ \"@chakra-ui/vue\": \"^0.5.3\",\n\"@commitlint/cli\": \"^8.2.0\",\n\"@commitlint/config-conventional\": \"^8.2.0\",\n\"@fortawesome/free-brands-svg-icons\": \"^5.12.0\",\n",
        "date": "16.05.2020 20:36:35",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "build",
        "chatgpt_zeroshot": "Update Chakra UI Vue to version 0.5.3 in package.json"
    },
    {
        "msg": "build(docs): update build command fo full static",
        "diff": "diff --git a/packages/chakra-ui-docs/package.json b/packages/chakra-ui-docs/package.json \"private\": true,\n\"scripts\": {\n\"dev\": \"nuxt\",\n- \"build\": \"nuxt generate\",\n+ \"build\": \"yarn build-static && yarn export\",\n\"build-static\": \"nuxt build --target static\",\n\"export\": \"nuxt export\",\n\"start\": \"nuxt start --max_old_space_size=8000\",\n\"devDependencies\": {\n\"@nuxtjs/eslint-config\": \"^2.0.0\",\n\"@nuxtjs/eslint-module\": \"^1.0.0\",\n- \"babel-eslint\": \"^10.0.1\",\n+ \"babel-eslint\": \"^10.1.0\",\n\"eslint\": \"^6.1.0\",\n\"eslint-config-prettier\": \"^6.10.0\",\n\"eslint-plugin-nuxt\": \">=0.4.2\",\n",
        "date": "14.07.2020 02:25:36",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "build",
        "chatgpt_zeroshot": "Update build script and babel-eslint version in package.json"
    },
    {
        "msg": "build: related with\nremove source extension installation due to overshaded problem\nset ipywidgets<8 due to incompatibility with voila.",
        "diff": "diff --git a/modules/sandbox/script/init_jupyter.sh b/modules/sandbox/script/init_jupyter.sh @@ -15,8 +15,8 @@ apt-get install -y libzmq3-dev\nR -e \"pacman::p_load('IRkernel')\"\nR -e \"IRkernel::installspec(user = FALSE)\"\n-/usr/bin/python3 -m pip install ipywidgets\n/usr/bin/python3 -m pip install jupyterlab\n+/usr/bin/python3 -m pip install ipywidgets==7.7.2 # https://github.com/voila-dashboards/voila/issues/1202#issuecomment-1255040572 until we wait.\n/usr/bin/python3 -m pip install jupyterlab-language-pack-fr-FR\n/usr/bin/python3 -m pip install jupyterlab-language-pack-es-ES\n/usr/bin/python3 -m pip install folium\n@@ -40,6 +40,5 @@ npm install -g --unsafe-perm ijavascript\nnpm install -g js-beautify\n/usr/bin/ijsinstall --install=global\n-/usr/bin/python3 /usr/local/bin/jupyter labextension install @jupyter-widgets/jupyterlab-manager\n-/usr/bin/python3 /usr/local/bin/jupyter labextension install jupyter-leaflet\n+\n/usr/bin/python3 /usr/local/bin/jupyter lab build\n\\ No newline at end of file\n",
        "date": "17.10.2022 13:41:10",
        "repo": "openforis/sepal",
        "type": "build",
        "chatgpt_zeroshot": "Update ipywidgets version and remove unnecessary jupyter lab extensions installation."
    },
    {
        "msg": "build(changelog): fix changelog by not appending",
        "diff": "diff --git a/scripts/release b/scripts/release @@ -44,7 +44,7 @@ echo \"==> Bumping version\"\nVERSION=\"$(npm version --no-git-tag-version $BUMP_TYPE | sed 's/v//g')\"\necho \"==> Updating Changelog\"\n-node_modules/.bin/conventional-changelog -a -i CHANGELOG.md -o CHANGELOG.md -p angular\n+node_modules/.bin/conventional-changelog -i CHANGELOG.md -o CHANGELOG.md -p angular\necho \"==> Cleaning Build directory\"\nrm -rf ./dist\n",
        "date": "28.01.2017 15:19:44",
        "repo": "reactstrap/reactstrap",
        "type": "build",
        "chatgpt_zeroshot": "Remove unnecessary flag from conventional-changelog command"
    },
    {
        "msg": "build(rollup): Remove unused options from rollup config",
        "diff": "diff --git a/rollup.config.js b/rollup.config.js @@ -4,9 +4,7 @@ import babel from 'rollup-plugin-babel';\nimport babili from 'rollup-plugin-babili';\nconst config = {\n- moduleName: 'ReactStrap',\nentry: 'src/index.js',\n- exports: 'named',\nplugins: [\nnodeResolve(),\ncommonjs(),\n@@ -20,13 +18,6 @@ const config = {\n'react-addons-css-transition-group',\n'react-addons-transition-group',\n],\n- // Used for the UMD bundles\n- globals: {\n- react: 'React',\n- 'react-dom': 'ReactDOM',\n- 'react-addons-css-transition-group': 'CSSTransitionGroup',\n- 'react-addons-transition-group': 'TransitionGroup',\n- },\ntargets: [\n{ dest: 'dist/reactstrap.cjs.js', format: 'cjs' },\n{ dest: 'dist/reactstrap.es.js', format: 'es' },\n",
        "date": "30.03.2017 17:21:24",
        "repo": "reactstrap/reactstrap",
        "type": "build",
        "chatgpt_zeroshot": "Remove unnecessary configuration options and globals from rollup.config.js"
    },
    {
        "msg": "build(react-transition-group): add missing dev dependency",
        "diff": "diff --git a/package.json b/package.json \"react-router\": \"^2.6.1\",\n\"react-test-renderer\": \"^15.5.4\",\n\"react-scripts\": \"^0.9.5\",\n+ \"react-transition-group\": \"^1.1.2\",\n\"rollup\": \"^0.41.5\",\n\"rollup-plugin-babel\": \"^2.7.1\",\n\"rollup-plugin-babili\": \"^2.0.0\",\n",
        "date": "14.05.2017 16:20:24",
        "repo": "reactstrap/reactstrap",
        "type": "build",
        "chatgpt_zeroshot": "Add react-transition-group dependency to package.json"
    },
    {
        "msg": "build(travis): update secrets",
        "diff": "diff --git a/.travis.yml b/.travis.yml @@ -17,19 +17,8 @@ after_success:\n- scripts/docs\nenv:\nglobal:\n- secure: GKu1vrkY7RWrrp0VOyxBjGSyTOGdU9jNT+oYR7P12PbCX4yzZ2mbsPpxWWs7Uh8ZXm5VEEfkrF80v/ccUEMvf1MD/q95nqLcQRoN/31yDhiJ66uW+mZk0C6OqUUZJlcSt1Ta6oLmLVmkJUu2euOo4ZTGQ1iwV9EOS+auPYUjXF7df8JE9sTof4YM3jUiQ+3ABIG8cOcsf81AyS9TOcpH6xPEs71Hz0uXta3TAAYpLgJSuuCciQn5Sr/9UIh9w10zAasSZBy27+A5mTf0C0xk3vN95cHfyS25r5x/zC3++YS//6MQASruT05Hf7STpF9Dy/6mdg6tMfGr+85zDqpMaF1dP5Rm9f8KHqZzYD52PtwLEkHpWwi/gqHY5vc+wHla5FEXiqawtBTRMj/hlvkvdN55qZnnFmsVEPrhHAIm1a8ECngzkZhG9QblszGgc55RtAtgGSlVsS5VWStsj29xLs2VJb6gYj69cMDSIND4e5VYzmrnaO/qRbzvRWJUIWFo/nmpSnAQbq5yV8K1+VukbxX/hF7+mE55ieeVww8tnC2bkxuQF1CbzTul5kPgAD7Hf8YdsSczvdZpSRHtN6OXGCotw4DRAiXZRb5TLFvEQFvbrNGciN5/Z1rXxlMr8WWwckAFxVW1EQd+kKg8abjCOLE+YY04a+h3W/+XOgDPUlA=\n+ secure: Jb9Q9+XnCh+n5uNJuqUmLmPG6mUUv7iTi5bNeK6TpLdrVKk+2mLdobV3iRUy/DEqNLwt2lxwzp1oq4YI/lZ0vlUam7HpFWpSf4PAI8ckGRqFdus7K45o+zxHLJ2zBQwXacsZB204qtO8RDdXaNb9PjRGNFdKm3ZuqZTv6PkO+hS05EFxmcW95HiSHpV/qPxKjEsDdCpoTNEA3MP0dNtSKygeht2nFQVr7WkOhkjDvUtU9EypkGbJeBCd0AckqXM0Qvmdi++csyz5VRQhhUwI/2BKSjbBVUZ6Q3m8sX2p4G/wFEbhXl5eKTzAYLuf+9kT9Jg+gKdT30PoChx2NPKHv0XS8BOrKQScs6KIwOVH2/CNCKqAxh3HkCMSONmqEQRqBK1V/gSCZ4zDX9PgrfyE23FLN/GM4YtBlkVCMLh8Y/hiapXUaDobxh/o2tfOoQkeoZWZeoeIydhwULTDSG2R3PKV7rkGYas0VQ+qtU+i8VG+PzjPT4DRf4xIKzNzJbFIq9oTNYBTasWi6+OKzNw0uH3ydmRzf+GxaTwOIdR3nRQMQN60dH+6qeJkrIvpfrGAB5gqTutXPfe0xf2rMrW6dyipnSgGlk1JOgA+cU4CPyHql1OA+ox/kIQ4I3PIJBu5YYE3amFmKLu3vnDHELSzM1CYeOs0sDasRyiDkKE79l0=\nbranches:\nonly:\n- master\n- v4\n-before_deploy:\n- - npm run build\n-deploy:\n- skip_cleanup: true\n- provider: npm\n- email: edward.d.hernandez@gmail.com\n- api_key:\n- secure: FFlZtXFtzHE0mnYlYPnv5g7CE3IYj4DdO28qxSLV1sa1UC/FJOAY6no5iiQ62aL0CH66B9sgXjvOvRDYoSfIWjOxYS49OcYQ1U6cW4x3azI34FTVCkjfsmoOrnsiBkNjYkKbz+XW7rsdN/u4CA9womdqHq4v4dNroB8mgrHKli5/CK7PhodRf9JYq758cc/cwZjnIQ3ioZ9vcsgsBcYO+705kh0x6HNEYQyhDMm++DMEupa7OtzZTeZbeDFxDCVlFWCxMJCbwkjqK4tqxXJglBbr2SPZ+LKi2EMHaILUoYwFsMimBFy+rYjCCe55zYnuYw2z+6lPeqbJ7pvhodTYcf/kUVpHzUKBMrCW4oJXlQ7MjaX9gaiiD8K+pnP7IF3N+j7iiroxsRa7floYTjDLstxNwrawfrIajL1C0wRTZ9g7CUX/Pbxjs818zOAloHqzlVQewIt3Jcj0CyXeVgZSQvcHvU1ROSJkN9qYyBXbb9rou4j+mgYvLLy+aql91dvmSjQIuDGqG9x+Acyz5Zl5N36JNjNAwJxF1NV1E/Vks8TPdgU3O6zylP+tg9HAzu7jG9gnIAusC7vkE/9RZ1TFQPAMTVrL+sqHmliDBHWBmMRibbkEsTl2vvV2ZSriHqQGqRFqv7jhON96RdzU6uxDtoRJb4ZGZrqEmt7l8n5USAU=\n- on:\n- tags: true\n- repo: reactstrap/reactstrap\n",
        "date": "27.06.2017 21:18:27",
        "repo": "reactstrap/reactstrap",
        "type": "build",
        "chatgpt_zeroshot": "Refactor Travis CI configuration and update npm deployment API key."
    },
    {
        "msg": "build(npm): updated version to 5.1.0",
        "diff": "diff --git a/package.json b/package.json {\n\"name\": \"@nuxtjs/firebase\",\n- \"version\": \"5.0.7\",\n+ \"version\": \"5.1.0\",\n\"description\": \"Intergrate Firebase into your Nuxt project.\",\n\"keywords\": [\n\"firebase\",\n\"cz-conventional-changelog\": \"latest\",\n\"eslint\": \"latest\",\n\"firebase\": \"^7.14.2\",\n- \"husky\": \"latest\",\n+ \"husky\": \"^4.2.5\",\n\"jest\": \"^25.5.3\",\n\"standard-version\": \"latest\",\n\"vuepress\": \"^1.4.1\",\n",
        "date": "01.05.2020 21:11:47",
        "repo": "nuxt-community/firebase-module",
        "type": "build",
        "chatgpt_zeroshot": "Bump version to 5.1.0 and update husky to version 4.2.5"
    },
    {
        "msg": "build: stop accidentally including compile script in tarball",
        "diff": "diff --git a/build/Dockerfile.build b/build/Dockerfile.build @@ -132,6 +132,6 @@ ENV GOPATH /go\nWORKDIR /build\nCOPY ./build/compile.sh .\n-RUN chmod +x ./compile.sh && ./compile.sh\n+RUN chmod +x ./compile.sh && ./compile.sh && rm ./compile.sh\nCOPY --from=notice /code/NOTICE ./\n",
        "date": "12.03.2021 12:59:02",
        "repo": "offen/offen",
        "type": "build",
        "chatgpt_zeroshot": "Add cleanup step in Dockerfile build process"
    },
    {
        "msg": "build: remove duplicate copy step",
        "diff": "diff --git a/build/Dockerfile.messages b/build/Dockerfile.messages @@ -58,7 +58,6 @@ RUN apk add git\nRUN apk add --no-cache --virtual .gyp python make g++\nCOPY ./packages/package.json ./packages/package-lock.json /code/deps/\n-COPY ./packages /code/packages\nWORKDIR /code/deps\nENV ADBLOCK true\nENV DISABLE_OPENCOLLECTIVE true\n",
        "date": "28.04.2021 13:19:55",
        "repo": "offen/offen",
        "type": "build",
        "chatgpt_zeroshot": "Remove unnecessary COPY command in Dockerfile"
    },
    {
        "msg": "build: allow multi-digit version numbers in go modules\nright now v10 would not be recognized as a version number",
        "diff": "diff --git a/create_notice.py b/create_notice.py @@ -16,7 +16,7 @@ dependencies) and `license_finder` (for Go modules) [1] is supported.\ndef normalize_row(row):\n- is_versioned_go_module = re.compile(r\".*/v\\d$\")\n+ is_versioned_go_module = re.compile(r\".*/v\\d+$\")\nresult = {}\ntry:\nresult[\"name\"] = row[\"module name\"]\n",
        "date": "30.04.2021 13:02:37",
        "repo": "offen/offen",
        "type": "build",
        "chatgpt_zeroshot": "Fix regex pattern in normalize_row function in create_notice.py"
    },
    {
        "msg": "build: tame very long lines in makefile",
        "diff": "diff --git a/Makefile b/Makefile @@ -55,7 +55,10 @@ test:\n.PHONY: integration\nintegration: # @HELP Run integration tests\nintegration:\n- @docker-compose -p offen_integration -f docker-compose.integration.yml run --rm integration npm t\n+ @docker-compose \\\n+ -p offen_integration \\\n+ -f docker-compose.integration.yml run --rm \\\n+ integration npm t\n.PHONY: dev-build\ndev-build: # @HELP Build the Docker images for local development\n@@ -89,7 +92,11 @@ OFFEN_GIT_REVISION ?= none\n.PHONY: build\nbuild: # @HELP Build the application binary\nbuild:\n- @docker build --build-arg ldflags=${LDFLAGS} --build-arg targets=${TARGETS} --build-arg rev=${OFFEN_GIT_REVISION} -t offen/build -f build/Dockerfile.build .\n+ @docker build \\\n+ --build-arg ldflags=${LDFLAGS} \\\n+ --build-arg targets=${TARGETS} \\\n+ --build-arg rev=${OFFEN_GIT_REVISION} \\\n+ -t offen/build -f build/Dockerfile.build .\n@mkdir -p bin\n@docker create --entrypoint=bash -it --name binary offen/build\n@docker cp binary:/build/. ./bin\n@@ -107,8 +114,10 @@ build-docker:\nsetup-docs: # @HELP Setup the development environment for working on the docs site\nsetup-docs:\n@docker-compose -p offen_docs -f docker-compose.docs.yml build\n- @docker-compose -p offen_docs -f docker-compose.docs.yml run --rm docs_jekyll bundle install\n- @docker-compose -p offen_docs -f docker-compose.docs.yml run --rm docs_jekyll bundle exec just-the-docs rake search:init\n+ @docker-compose -p offen_docs -f docker-compose.docs.yml run --rm \\\n+ docs_jekyll bundle install\n+ @docker-compose -p offen_docs -f docker-compose.docs.yml run --rm \\\n+ docs_jekyll bundle exec just-the-docs rake search:init\n.PHONY: docs\ndocs: # @HELP Run the development environment for the docs site\n@@ -116,7 +125,7 @@ docs:\n@docker-compose -p offen_docs -f docker-compose.docs.yml up\n.PHONY: build-docs\n-build-docs: # @HELP Build the static asstes for the docs site\n+build-docs: # @HELP Build the static assets for the docs site\nbuild-docs:\n@docker build -t offen/docs -f build/Dockerfile.docs .\n@rm -rf docs-site && mkdir docs-site\n",
        "date": "20.05.2021 09:24:24",
        "repo": "offen/offen",
        "type": "build",
        "chatgpt_zeroshot": "Refactor Makefile commands for better readability and consistency"
    },
    {
        "msg": "build: remove unused caching of node_modules in ci",
        "diff": "diff --git a/.circleci/config.yml b/.circleci/config.yml @@ -28,29 +28,25 @@ jobs:\nexecutor: node\nworking_directory: ~/offen/vault\nsteps:\n- - test_node_app:\n- app: vault\n+ - test_node_app\nscript:\nexecutor: node\nworking_directory: ~/offen/script\nsteps:\n- - test_node_app:\n- app: script\n+ - test_node_app\nauditorium:\nexecutor: node\nworking_directory: ~/offen/auditorium\nsteps:\n- - test_node_app:\n- app: auditorium\n+ - test_node_app\npackages:\nexecutor: node\nworking_directory: ~/offen/packages\nsteps:\n- - test_node_app:\n- app: packages\n+ - test_node_app\nreuse:\nexecutor: python\n@@ -379,28 +375,18 @@ commands:\ntest_node_app:\ndescription: Run unit tests for a Node.js based subapp\nparameters:\n- app:\n- type: string\ncheckout:\ntype: string\ndefault: ~/offen\nsteps:\n- checkout:\npath: << parameters.checkout >>\n- - restore_cache:\n- key: offen-<< parameters.app >>-{{ checksum \"package.json\" }}\n- run:\nname: Install dependencies\n- command: |\n- sudo apt-get install libxss1\n- npm ci\n- - save_cache:\n- paths:\n- - ~/offen/<< parameters.app >>/node_modules\n- key: offen-<< parameters.app >>-{{ checksum \"package.json\" }}\n+ command: npm ci\n- run:\nname: Run tests\n- command: npm test\n+ command: npm t\ninstall_mc:\ndescription: Install MinIO client\n",
        "date": "26.05.2021 08:51:33",
        "repo": "offen/offen",
        "type": "build",
        "chatgpt_zeroshot": "Refactor CircleCI configuration to simplify test_node_app job configurations"
    },
    {
        "msg": "build: explicitly install python3",
        "diff": "diff --git a/build/Dockerfile.build b/build/Dockerfile.build FROM node:14-alpine as auditorium\nRUN apk add git\n-RUN apk add --no-cache --virtual .gyp python make g++\n+RUN apk add --no-cache --virtual .gyp python3 make g++\nCOPY ./auditorium/package.json ./auditorium/package-lock.json /code/deps/\nCOPY ./packages /code/packages\n@@ -23,7 +23,7 @@ RUN npm run licenses\nFROM node:14-alpine as script\nRUN apk add git\n-RUN apk add --no-cache --virtual .gyp python make g++\n+RUN apk add --no-cache --virtual .gyp python3 make g++\nCOPY ./script/package.json ./script/package-lock.json /code/deps/\nCOPY ./packages /code/packages\n@@ -43,7 +43,7 @@ RUN npm run licenses\nFROM node:14-alpine as vault\nRUN apk add git\n-RUN apk add --no-cache --virtual .gyp python make g++\n+RUN apk add --no-cache --virtual .gyp python3 make g++\nCOPY ./vault/package.json ./vault/package-lock.json /code/deps/\nCOPY ./packages /code/packages\n@@ -64,7 +64,7 @@ RUN npm run licenses\n# packages does not have a build step but we need to derive license information\nFROM node:14-alpine as packages\nRUN apk add git\n-RUN apk add --no-cache --virtual .gyp python make g++\n+RUN apk add --no-cache --virtual .gyp python3 make g++\nCOPY ./packages/package.json ./packages/package-lock.json /code/deps/\nCOPY ./packages /code/packages\n",
        "date": "16.11.2021 21:15:52",
        "repo": "offen/offen",
        "type": "build",
        "chatgpt_zeroshot": "Update Dockerfile to use python3 instead of python for building dependencies."
    },
    {
        "msg": "build: explicitly install python3 package when extracting strings",
        "diff": "diff --git a/build/Dockerfile.messages b/build/Dockerfile.messages FROM node:14-alpine as auditorium\nRUN apk add git\n-RUN apk add --no-cache --virtual .gyp python make g++\n+RUN apk add --no-cache --virtual .gyp python3 make g++\nCOPY ./auditorium/package.json ./auditorium/package-lock.json /code/deps/\nCOPY ./packages /code/packages\n@@ -19,7 +19,7 @@ RUN npm run --silent extract-strings > auditorium.po\nFROM node:14-alpine as script\nRUN apk add git\n-RUN apk add --no-cache --virtual .gyp python make g++\n+RUN apk add --no-cache --virtual .gyp python3 make g++\nCOPY ./script/package.json ./script/package-lock.json /code/deps/\nCOPY ./packages /code/packages\n@@ -37,7 +37,7 @@ RUN npm run --silent extract-strings > script.po\nFROM node:14-alpine as vault\nRUN apk add git\n-RUN apk add --no-cache --virtual .gyp python make g++\n+RUN apk add --no-cache --virtual .gyp python3 make g++\nCOPY ./vault/package.json ./vault/package-lock.json /code/deps/\nCOPY ./packages /code/packages\n@@ -55,7 +55,7 @@ RUN npm run --silent extract-strings > vault.po\nFROM node:14-alpine as packages\nRUN apk add git\n-RUN apk add --no-cache --virtual .gyp python make g++\n+RUN apk add --no-cache --virtual .gyp python3 make g++\nCOPY ./packages/package.json ./packages/package-lock.json /code/deps/\nWORKDIR /code/deps\n",
        "date": "06.01.2022 14:01:40",
        "repo": "offen/offen",
        "type": "build",
        "chatgpt_zeroshot": "Update Dockerfile to use python3 instead of python for building dependencies."
    },
    {
        "msg": "build: open extract-strings PR against source branch",
        "diff": "diff --git a/.github/workflows/extract_strings.yml b/.github/workflows/extract_strings.yml @@ -18,7 +18,7 @@ jobs:\nid: cpr\nuses: peter-evans/create-pull-request@v3\nwith:\n- base: development\n+ base: ${{ github.ref }}\ntoken: ${{ secrets.PERSONAL_TOKEN }}\ncommit-message: Update message files\ncommitter: Offen Bot <hioffen@posteo.de>\n",
        "date": "06.01.2022 14:32:24",
        "repo": "offen/offen",
        "type": "build",
        "chatgpt_zeroshot": "Update base branch to use the current GitHub reference in create-pull-request action"
    },
    {
        "msg": "build: remove hard coded base branch",
        "diff": "diff --git a/.github/workflows/extract_strings.yml b/.github/workflows/extract_strings.yml @@ -18,7 +18,6 @@ jobs:\nid: cpr\nuses: peter-evans/create-pull-request@v3\nwith:\n- base: ${{ github.ref }}\ntoken: ${{ secrets.PERSONAL_TOKEN }}\ncommit-message: Update message files\ncommitter: Offen Bot <hioffen@posteo.de>\n",
        "date": "06.01.2022 14:44:12",
        "repo": "offen/offen",
        "type": "build",
        "chatgpt_zeroshot": "Update create-pull-request action configuration in workflow file"
    },
    {
        "msg": "build: update base docker image to alpine 3.15",
        "diff": "diff --git a/build/Dockerfile b/build/Dockerfile # Copyright 2021 - Offen Authors <hioffen@posteo.de>\n# SPDX-License-Identifier: Apache-2.0\n-FROM alpine:3.14\n+FROM alpine:3.15\nLABEL maintainer=\"offen <hioffen@posteo.de>\"\nRUN addgroup -g 10001 -S offen \\\n",
        "date": "27.01.2022 14:35:20",
        "repo": "offen/offen",
        "type": "build",
        "chatgpt_zeroshot": "Update Alpine base image version to 3.15 and update maintainer label in Dockerfile"
    },
    {
        "msg": "build: install correct freefont package",
        "diff": "diff --git a/Dockerfile.node b/Dockerfile.node @@ -57,6 +57,7 @@ RUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key\nfonts-kacst \\\nfonts-thai-tlwg \\\nfonts-wqy-zenhei \\\n+ fonts-freefont-ttf \\\ngoogle-chrome-unstable \\\n--no-install-recommends \\\n&& rm -rf /var/lib/apt/lists/*\n",
        "date": "03.02.2022 16:07:09",
        "repo": "offen/offen",
        "type": "build",
        "chatgpt_zeroshot": "Add fonts-freefont-ttf to Dockerfile.node"
    },
    {
        "msg": "build: add missing tag flag when running buildx",
        "diff": "diff --git a/.circleci/config.yml b/.circleci/config.yml @@ -201,7 +201,7 @@ jobs:\ndocker buildx create docker-offen --name docker-offen --use\ndocker buildx inspect --bootstrap\nfor tag in \"${DOCKER_IMAGE_TAGS[@]}\"; do\n- docker buildx build --platform linux/amd64,linux/arm64,linux/arm/v7 offen/offen:$tag . --push\n+ docker buildx build --platform linux/amd64,linux/arm64,linux/arm/v7 -t offen/offen:$tag . --push\ndone\n- store_artifacts:\npath: /tmp/artifacts\n",
        "date": "15.02.2022 20:27:11",
        "repo": "offen/offen",
        "type": "build",
        "chatgpt_zeroshot": "Fix docker build command in CircleCI config"
    },
    {
        "msg": "build: provide custom Dockerfile location",
        "diff": "diff --git a/.circleci/config.yml b/.circleci/config.yml @@ -201,7 +201,7 @@ jobs:\ndocker buildx create docker-offen --name docker-offen --use\ndocker buildx inspect --bootstrap\nfor tag in \"${DOCKER_IMAGE_TAGS[@]}\"; do\n- docker buildx build --platform linux/amd64,linux/arm64,linux/arm/v7 -t offen/offen:$tag . --push\n+ docker buildx build --platform linux/amd64,linux/arm64,linux/arm/v7 -f ./build/Dockerfile -t offen/offen:$tag . --push\ndone\n- store_artifacts:\npath: /tmp/artifacts\n",
        "date": "15.02.2022 20:51:36",
        "repo": "offen/offen",
        "type": "build",
        "chatgpt_zeroshot": "Add Dockerfile path to build command in CircleCI config"
    },
    {
        "msg": "build: xgo does not need to be locked anymore",
        "diff": "diff --git a/build/Dockerfile.build b/build/Dockerfile.build @@ -98,7 +98,7 @@ RUN python ./create_notice.py \\\n--client auditorium.csv \\\n--server server.csv >> NOTICE\n-FROM techknowlogick/xgo:go-1.19.2 as compiler\n+FROM techknowlogick/xgo:go-1.19.5 as compiler\nARG rev\nENV GIT_REVISION=$rev\n",
        "date": "10.01.2023 21:34:46",
        "repo": "offen/offen",
        "type": "build",
        "chatgpt_zeroshot": "Update xgo base image to go-1.19.5版本."
    },
    {
        "msg": "build(npm): Move substantive dependencies to dependencies object\nThis also removes font-awesome from the dependencies list; it doesn't seem to be necessary.",
        "diff": "diff --git a/package.json b/package.json \"commitizen\": \"^2.8.6\",\n\"conventional-commit-types\": \"^2.1.0\",\n\"copy-webpack-plugin\": \"^1.1.1\",\n- \"css-loader\": \"^0.23.1\",\n\"cz-conventional-changelog\": \"^1.2.0\",\n\"eslint\": \"^1.10.3\",\n\"eslint-config-standard\": \"^4.4.0\",\n\"expose-loader\": \"^0.7.1\",\n\"extract-text-webpack-plugin\": \"^1.0.1\",\n\"file-loader\": \"^0.8.5\",\n- \"geojs\": \"^0.9.1\",\n\"grunt\": \"^1.0.1\",\n- \"html-loader\": \"^0.4.3\",\n\"html-webpack-plugin\": \"^2.9.0\",\n\"http-server\": \"^0.9.0\",\n\"husky\": \"^0.11.8\",\n\"imports-loader\": \"^0.6.5\",\n- \"jade\": \"^1.11.0\",\n- \"jade-loader\": \"^0.8.0\",\n\"javascript-detect-element-resize\": \"^0.5.3\",\n\"json-loader\": \"^0.5.4\",\n\"karma\": \"^0.13.22\",\n\"karma-tap\": \"^1.0.4\",\n\"karma-webpack\": \"^1.7.0\",\n\"legacy-loader\": \"0.0.2\",\n- \"less\": \"^2.3.1\",\n- \"md5\": \"^2.2.1\",\n\"nightmare\": \"^2.3.1\",\n\"node-resemble\": \"^1.1.3\",\n- \"node-sass\": \"^3.4.2\",\n- \"nvd3\": \"^1.8.4\",\n\"pegjs\": \"^0.9.0\",\n\"pegjs-loader\": \"^0.4.0\",\n\"phantomjs-prebuilt\": \"^2.1.5\",\n\"raw-loader\": \"^0.5.1\",\n- \"sass-loader\": \"^3.2.0\",\n\"sass-variable-loader\": \"0.0.4\",\n- \"script-loader\": \"^0.6.1\",\n\"semantic-release\": \"^4.3.5\",\n\"semistandard\": \"^7.0.5\",\n\"snazzy\": \"^4.0.0\",\n- \"strip-json-comments\": \"^2.0.1\",\n- \"strip-json-comments-loader\": \"0.0.2\",\n- \"style-loader\": \"^0.13.0\",\n\"stylus\": \"^0.54.5\",\n\"stylus-loader\": \"^2.0.0\",\n\"tap-spec\": \"^4.1.1\",\n\"tape\": \"^4.5.1\",\n\"tape-catch\": \"^1.0.6\",\n- \"telegraph-events\": \"^1.0.3\",\n\"url-loader\": \"^0.5.7\",\n\"validate-commit-msg\": \"^2.8.2\",\n\"webpack\": \"^1.12.12\"\n\"UpSet\": \"git+https://github.com/VCG/upset#6e8b7a172443dd6b4f4324d1a3368287e9e9c089\",\n\"onset\": \"git+https://github.com/Kitware/setvis#506bfccff63b0c8f5c39a81d299ed310e5e8fbff\",\n\"brace\": \"^0.7.0\",\n+ \"css-loader\": \"^0.23.1\",\n\"d3\": \"^3.5.14\",\n\"datalib\": \"^1.7.3\",\n- \"font-awesome\": \"^4.4.0\",\n- \"font-awesome-webpack\": \"^0.0.4\",\n+ \"geojs\": \"^0.9.1\",\n+ \"html-loader\": \"^0.4.3\",\n\"is_js\": \"^0.9.0\",\n+ \"jade\": \"^1.11.0\",\n+ \"jade-loader\": \"^0.8.0\",\n\"jquery\": \"^2.2.0\",\n\"jquery-deparam\": \"^0.5.2\",\n+ \"less\": \"^2.3.1\",\n+ \"md5\": \"^2.2.1\",\n+ \"node-sass\": \"^3.4.2\",\n+ \"nvd3\": \"^1.8.4\",\n+ \"sass-loader\": \"^3.2.0\",\n+ \"script-loader\": \"^0.6.1\",\n+ \"strip-json-comments\": \"^2.0.1\",\n+ \"strip-json-comments-loader\": \"0.0.2\",\n+ \"style-loader\": \"^0.13.0\",\n+ \"telegraph-events\": \"^1.0.3\",\n\"underscore\": \"^1.8.3\",\n\"vega\": \"^2.4.2\"\n},\n",
        "date": "22.12.2016 17:26:37",
        "repo": "kitware/candela",
        "type": "build",
        "chatgpt_zeroshot": "Update package.json dependencies and add new loaders for CSS, HTML, Jade, Less, MD5, Node-sass, Nvd3, Sass, Script, Strip-json-comments, Style, and Telegraph-events."
    },
    {
        "msg": "build(webpack): exclude existing loaders from affecting node_modules/candela",
        "diff": "diff --git a/webpack.js b/webpack.js @@ -28,13 +28,29 @@ function addNMPath(packages, paths) {\n}).concat(paths);\n}\n-module.exports = function (config, basePath) {\n+module.exports = function (config, basePath, options) {\nvar includePaths = _includePaths(basePath);\n+ options = options || {};\n+\n+ // By default, exclude the existing loaders from affecting\n+ // node_modules/candela. This prevents double application of loaders if they\n+ // are specified in the client project without any include or exclude\n+ // directives.\n+ var exclude = options.excludeCandelaNM === undefined || options.excludeCandelaNM;\n+\n// Install empty module and module.loaders entries if missing.\nconfig.module = config.module || {};\nconfig.module.loaders = config.module.loaders || [];\n+ // Exclude the base paths from having existing loaders applied to them.\n+ if (exclude) {\n+ config.modules.loaders = config.modules.loaders || [];\n+ config.modules.loaders.forEach(function (loader) {\n+ loader.exclude = (loader.exclude || []).concat(includePaths);\n+ });\n+ }\n+\n// Prepend the Candela loaders.\nconfig.module.loaders = [\n{\n",
        "date": "03.01.2017 16:57:35",
        "repo": "kitware/candela",
        "type": "build",
        "chatgpt_zeroshot": "Add options parameter to webpack module export and exclude existing loaders from affecting node_modules/candela"
    },
    {
        "msg": "build(webpack): wrap existing loaders' `exclude` property in list if not already",
        "diff": "diff --git a/webpack.js b/webpack.js @@ -39,15 +39,24 @@ module.exports = function (config, basePath, options) {\n// directives.\nvar exclude = options.excludeCandelaNM === undefined || options.excludeCandelaNM;\n+ // Exclude the base paths from having existing loaders applied to them.\n+ if (exclude) {\n// Install empty module and module.loaders entries if missing.\nconfig.module = config.module || {};\nconfig.module.loaders = config.module.loaders || [];\n- // Exclude the base paths from having existing loaders applied to them.\n- if (exclude) {\n- config.modules.loaders = config.modules.loaders || [];\n- config.modules.loaders.forEach(function (loader) {\n- loader.exclude = (loader.exclude || []).concat(includePaths);\n+ // For each loader, append the Candela include paths to its `exclude`\n+ // property.\n+ config.module.loaders.forEach(function (loader) {\n+ // Install an empty list if there is no `exclude` property.\n+ loader.exclude = loader.exclude || [];\n+\n+ // If the `exclude` propertry is a non-list singleton, wrap it in a list.\n+ if (!Array.isArray(loader.exclude)) {\n+ loader.exclude = [loader.exclude];\n+ }\n+\n+ loader.exclude = loader.exclude.concat(includePaths);\n});\n}\n",
        "date": "05.01.2017 13:28:30",
        "repo": "kitware/candela",
        "type": "build",
        "chatgpt_zeroshot": "Fix exclusion of base paths from existing loaders in webpack configuration"
    },
    {
        "msg": "build(UpSet): use UpSet version with modernized loader usage",
        "diff": "diff --git a/package.json b/package.json \"webpack\": \"^1.12.12\"\n},\n\"dependencies\": {\n- \"UpSet\": \"git+https://github.com/ronichoudhury-work/upset#7f3c307769490f389ef79b31f68f2558ffa7b2f8\",\n+ \"UpSet\": \"git+https://github.com/ronichoudhury-work/upset#aa6fcbf9573823ce5dae948e48d7a154deacad62\",\n\"onset\": \"git+https://github.com/Kitware/setvis#b2b8e7cfdef335a4ee4b2af871e14d203ef3e754\",\n\"brace\": \"^0.7.0\",\n\"css-loader\": \"^0.23.1\",\n",
        "date": "13.03.2017 10:15:16",
        "repo": "kitware/candela",
        "type": "build",
        "chatgpt_zeroshot": "Update UpSet dependency to latest commit hash."
    },
    {
        "msg": "build(package.json): remove doc build from doc server script",
        "diff": "diff --git a/package.json b/package.json \"cover:report\": \"http-server coverage/html -p ${PORT-3000}\",\n\"codecov\": \"cat coverage/lcov/lcov.info | codecov\",\n\"examples\": \"http-server build -p ${PORT-3000}\",\n- \"docs\": \"npm run build:docs && http-server build/docs -p ${PORT-3000}\",\n+ \"docs\": \"http-server build/docs -p ${PORT-3000}\",\n\"commit\": \"git-cz\",\n\"semantic-release\": \"semantic-release pre && npm publish && semantic-release post\",\n\"commitmsg\": \"validate-commit-msg\"\n",
        "date": "21.04.2017 11:30:14",
        "repo": "kitware/candela",
        "type": "build",
        "chatgpt_zeroshot": "Refactor docs script in package.json"
    },
    {
        "msg": "build: remove d3 from devDependencies\nd3 is already in dependencies, which is sufficient",
        "diff": "diff --git a/package.json b/package.json \"conventional-commit-types\": \"^2.1.0\",\n\"copy-webpack-plugin\": \"^1.1.1\",\n\"cz-conventional-changelog\": \"^1.2.0\",\n- \"d3\": \"^3.5.17\",\n\"eslint\": \"^1.10.3\",\n\"eslint-config-standard\": \"^4.4.0\",\n\"eslint-plugin-promise\": \"^1.0.8\",\n",
        "date": "26.04.2017 09:28:55",
        "repo": "kitware/candela",
        "type": "build",
        "chatgpt_zeroshot": "Remove d3 dependency from package.json"
    },
    {
        "msg": "build: realphabetize package.json dependencies",
        "diff": "diff --git a/package.json b/package.json },\n\"dependencies\": {\n\"UpSet\": \"git+https://github.com/ronichoudhury-work/upset#aa6fcbf9573823ce5dae948e48d7a154deacad62\",\n- \"onset\": \"git+https://github.com/Kitware/setvis#b2b8e7cfdef335a4ee4b2af871e14d203ef3e754\",\n\"brace\": \"^0.7.0\",\n\"css-loader\": \"^0.23.1\",\n\"d3\": \"^3.5.14\",\n\"md5\": \"^2.2.1\",\n\"node-sass\": \"^3.4.2\",\n\"nvd3\": \"^1.8.4\",\n+ \"onset\": \"git+https://github.com/Kitware/setvis#b2b8e7cfdef335a4ee4b2af871e14d203ef3e754\",\n\"sass-loader\": \"^3.2.0\",\n\"script-loader\": \"^0.6.1\",\n\"strip-json-comments\": \"^2.0.1\",\n",
        "date": "26.04.2017 16:00:34",
        "repo": "kitware/candela",
        "type": "build",
        "chatgpt_zeroshot": "Update dependencies in package.json"
    },
    {
        "msg": "build(package.json): fix typo in semistandard ignore list",
        "diff": "diff --git a/package.json b/package.json \"semistandard\": {\n\"ignore\": [\n\"config\",\n- \"src/external\",\n- \"app/resonantlab/gaTemplate.js\",\n- \"app/resonantlab/ga.js\",\n- \"app/resonantlab/web_client/lib\",\n+ \"app/resonantlab\",\n\"dist\",\n- \"built\",\n+ \"build\",\n\"R/candela/inst/htmlwidgets/lib\"\n]\n},\n",
        "date": "17.05.2017 16:21:22",
        "repo": "kitware/candela",
        "type": "build",
        "chatgpt_zeroshot": "Update semistandard ignore paths in package.json"
    },
    {
        "msg": "build(TrackerDash): revert to d3v3",
        "diff": "diff --git a/package.json b/package.json \"UpSet\": \"git+https://github.com/jeffbaumes/upset#no-global-vars\",\n\"brace\": \"^0.7.0\",\n\"css-loader\": \"^0.23.1\",\n- \"d3\": \"^4.8.0\",\n+ \"d3\": \"^3.5.17\",\n\"datalib\": \"^1.7.3\",\n\"geojs\": \"^0.9.1\",\n\"glo\": \"github:ronichoudhury-work/glo#dist\",\n",
        "date": "31.05.2017 11:42:33",
        "repo": "kitware/candela",
        "type": "build",
        "chatgpt_zeroshot": "Downgrade d3 version from 4.8.0 to 3.5.17"
    },
    {
        "msg": "build(examples): add build script",
        "diff": "diff --git a/examples/package.json b/examples/package.json \"telegraph-events\": \"^1.0.3\",\n\"underscore\": \"^1.8.3\",\n\"url-loader\": \"^0.5.8\",\n- \"vega\": \"^2.4.2\"\n+ \"vega\": \"^2.4.2\",\n+ \"webpack\": \"^1.15.0\"\n+ },\n+ \"scripts\": {\n+ \"build\": \"webpack\"\n}\n}\n",
        "date": "02.06.2017 10:29:41",
        "repo": "kitware/candela",
        "type": "build",
        "chatgpt_zeroshot": "Add webpack to dependencies and create build script"
    },
    {
        "msg": "build: update .npmignore file to reflect build process changes",
        "diff": "diff --git a/.npmignore b/.npmignore -app\nbuild\n-config\n+circle.yml\nCONTRIBUTING.md\n-coverage\ndocs\n+examples\npython\nR\nrequirements-dev.txt\nscript\n-tests.bundle.js\n+shell.nix\n+tests\n+**/test/\n+webpack.config.js\n+.babelrc\n+.npmignore\n+.server.pid\n+.server.log\n",
        "date": "13.06.2017 18:01:23",
        "repo": "kitware/candela",
        "type": "build",
        "chatgpt_zeroshot": "Add new files and directories to the project configuration."
    },
    {
        "msg": "ci(node.js): workflow uses 'npm' cache\n[skip ci]",
        "diff": "diff --git a/.github/workflows/node.js.yml b/.github/workflows/node.js.yml @@ -24,6 +24,7 @@ jobs:\n- name: Use Node.js ${{ matrix.node-version }}\nuses: actions/setup-node@v2\nwith:\n+ cache: npm\nnode-version: ${{ matrix.node-version }}\n- run: npm ci\n- run: npm run build --if-present\n",
        "date": "18.11.2021 11:50:13",
        "repo": "remy/nodemon",
        "type": "ci",
        "chatgpt_zeroshot": "Add npm caching to Node.js workflow"
    },
    {
        "msg": "ci(release): workflow uses 'npm' cache\n[skip ci]",
        "diff": "diff --git a/.github/workflows/release.yml b/.github/workflows/release.yml @@ -16,8 +16,9 @@ jobs:\n- name: Checkout\nuses: actions/checkout@v1\n- name: Setup Node.js\n- uses: actions/setup-node@v1\n+ uses: actions/setup-node@v2\nwith:\n+ cache: npm\nnode-version: 14\n- name: Install dependencies\nrun: npm ci\n",
        "date": "18.11.2021 11:50:31",
        "repo": "remy/nodemon",
        "type": "ci",
        "chatgpt_zeroshot": "Update Node.js setup to version 2 and add npm caching in release workflow."
    },
    {
        "msg": "ci: Updating workflows",
        "diff": "diff --git a/.github/workflows/main.yml b/.github/workflows/main.yml @@ -45,16 +45,16 @@ jobs:\nrun: yarn --frozen-lockfile\n- name: Build\nif: ${{ needs.changes.outputs.wmr == 'true' }}\n- run: yarn workspace wmr build\n+ run: yarn wmr build\n- name: Test wmr\nif: ${{ needs.changes.outputs.wmr == 'true' }}\n- run: yarn workspace wmr test\n+ run: yarn eslint packages/wmr && yarn wmr test\n- name: Test wmr (production build)\nif: ${{ needs.changes.outputs.wmr == 'true' }}\n- run: yarn workspace wmr test-prod\n+ run: yarn wmr test-prod\n- name: Test preact-iso\nif: ${{ needs.changes.outputs.preact-iso == 'true' }}\n- run: yarn workspace preact-iso test\n+ run: yarn eslint packages/preact-iso && yarn iso test\nlhci:\nneeds: changes\n",
        "date": "03.06.2021 18:32:12",
        "repo": "preactjs/wmr",
        "type": "ci",
        "chatgpt_zeroshot": "Refactor GitHub workflow to simplify build and test commands for wmr and preact-iso packages"
    },
    {
        "msg": "ci: use airtap credentials",
        "diff": "diff --git a/.github/workflows/ci.yml b/.github/workflows/ci.yml @@ -6,6 +6,7 @@ jobs:\ntest:\nname: Node ${{ matrix.node }} / ${{ matrix.os }}\nruns-on: ${{ matrix.os }}\n+ environment: ci\nstrategy:\nfail-fast: false\nmatrix:\n@@ -20,4 +21,8 @@ jobs:\nnode-version: ${{ matrix.node }}\n- run: npm install\n- run: npm run build --if-present\n+ - run: echo \"127.0.0.1 airtap.local\" | sudo tee -a /etc/hosts\n- run: npm test\n+ env:\n+ SAUCE_USERNAME: ${{ secrets.SAUCE_USERNAME }}\n+ SAUCE_ACCESS_KEY: ${{ secrets.SAUCE_ACCESS_KEY }}\n",
        "date": "21.04.2021 17:19:35",
        "repo": "feross/simple-peer",
        "type": "ci",
        "chatgpt_zeroshot": "Add environment setup and Sauce Labs credentials for CI workflow."
    },
    {
        "msg": "ci: more work on github actions",
        "diff": "diff --git a/.github/workflows/release.yml b/.github/workflows/release.yml # This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node\n# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions\n-name: Build & Test Components\n+name: Release\non:\npush:\n",
        "date": "24.12.2020 20:01:05",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "ci",
        "chatgpt_zeroshot": "Update workflow name to \"Release\" and remove unnecessary trigger conditions."
    },
    {
        "msg": "ci: improve workflow",
        "diff": "diff --git a/.github/workflows/test.yml b/.github/workflows/test.yml # This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node\n# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions\n-name: Build & Test Components\n+name: PR Workflow\non:\n- # Trigger the workflow on push or pull request,\n- # but only for the master branch\n- push:\n+ pull_request:\nbranches:\n+ - master\n- develop\n- pull_request:\n+ push:\nbranches:\n- develop\n@@ -20,15 +19,24 @@ jobs:\nmatrix:\nnode-version: [12.x]\nsteps:\n- - uses: actions/checkout@v2\n+ - name: Checkout\n+ uses: actions/checkout@v2\n+\n- name: Use Node.js ${{ matrix.node-version }}\nuses: actions/setup-node@v1\nwith:\nnode-version: ${{ matrix.node-version }}\n- - run: yarn\n- - run: yarn bootstrap\n- - run: yarn lint\n- - run: yarn build --if-present\n- - run: yarn test\n+\n+ - name: Install dependencies\n+ run: yarn install --frozen-lockfile && yarn bootstrap\n+\n+ - name: Lint types and code\n+ run: yarn lint\n+\n+ - name: Build packages\n+ run: yarn build\n+\n+ - name: Run tests\n+ run: yarn test\nenv:\nCI: true\n\\ No newline at end of file\n",
        "date": "31.12.2020 15:11:47",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "ci",
        "chatgpt_zeroshot": "Refactor workflow to include PR trigger and update job steps."
    },
    {
        "msg": "ci(release): improve release workflow",
        "diff": "diff --git a/.github/workflows/release.yml b/.github/workflows/release.yml @@ -5,10 +5,10 @@ name: Release\non:\npush:\n- branches:\n- - master\npaths:\n- \"packages/**\"\n+ branches:\n+ - master\njobs:\nrelease:\n@@ -28,10 +28,8 @@ jobs:\nnode-version: 12.x\n- name: Install dependencies\n- run: yarn\n+ run: yarn install --frozen-lockfile && yarn bootstrap\n- - name: Bootstrap\n- run: yarn bootstrap\n- name: Linting\nrun: yarn lint\n@@ -46,8 +44,8 @@ jobs:\n- name: Setup CI Git User\nrun: |\n- git config --global user.email \"jbakebwa@gmail.com\"\ngit config --global user.name \"codebender828\"\n+ git config --global user.email \"jbakebwa@163.com\"\n- name: Publish packages\nuses: changesets/action@master\n",
        "date": "31.12.2020 15:17:51",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "ci",
        "chatgpt_zeroshot": "Refactor release workflow to include frozen lockfile installation and update CI Git user email."
    },
    {
        "msg": "ci(release): update changest schema",
        "diff": "diff --git a/.changeset/config.json b/.changeset/config.json {\n- \"$schema\": \"https://unpkg.com/@changesets/config@1.1.0/schema.json\",\n- \"changelog\": \"@changesets/cli/changelog\",\n+ \"$schema\": \"https://unpkg.com/@changesets/config@1.4.0/schema.json\",\n+ \"changelog\": [\n+ \"@changesets/changelog-github\",\n+ { \"repo\": \"chakra-ui/chakra-ui-vue\" }\n+ ],\n\"commit\": false,\n\"linked\": [],\n\"access\": \"restricted\",\n",
        "date": "31.12.2020 15:31:08",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "ci",
        "chatgpt_zeroshot": "Update changeset config to use latest schema and add GitHub changelog for chakra-ui-vue repository"
    },
    {
        "msg": "ci(release): bootstrap packages",
        "diff": "diff --git a/.github/workflows/release.yml b/.github/workflows/release.yml @@ -28,8 +28,10 @@ jobs:\nnode-version: 12.x\n- name: Install dependencies\n- run: yarn install --frozen-lockfile && yarn bootstrap\n+ run: yarn install\n+ - name: Bootstrap\n+ run: yarn bootstrap\n- name: Linting\nrun: yarn lint\n",
        "date": "31.12.2020 15:59:41",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "ci",
        "chatgpt_zeroshot": "Refactor workflow to separate yarn install and yarn bootstrap steps"
    },
    {
        "msg": "ci: update changesets/action PR title",
        "diff": "diff --git a/.github/workflows/release.yml b/.github/workflows/release.yml @@ -51,6 +51,7 @@ jobs:\nuses: changesets/action@master\nwith:\npublish: yarn release\n+ title: \"chore(release): version packages\"\ncommit: \"chore(release): version packages\"\nenv:\nNPM_TOKEN: ${{ secrets.NPM_TOKEN }}\n",
        "date": "06.01.2021 14:19:12",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "ci",
        "chatgpt_zeroshot": "chore(release): version packages"
    },
    {
        "msg": "ci: split test and lint commands",
        "diff": "diff --git a/.github/workflows/test.yml b/.github/workflows/test.yml @@ -38,4 +38,8 @@ jobs:\n- name: Install Node dependencies\nrun: yarn --frozen-lockfile\n- - run: yarn test\n+ - name: Run tests\n+ run: yarn lerna run test\n+\n+ - name: Lint\n+ run: yarn lint\n",
        "date": "17.05.2020 13:55:06",
        "repo": "vega/vega",
        "type": "ci",
        "chatgpt_zeroshot": "Add separate jobs for running tests and linting in GitHub Actions workflow"
    },
    {
        "msg": "ci: run ci on pull requests from forks",
        "diff": "diff --git a/.github/workflows/test.yml b/.github/workflows/test.yml name: Test\n-on: [push]\n+on: [push, pull_request]\njobs:\ntest:\n@@ -12,6 +12,10 @@ jobs:\nname: Node ${{ matrix.node }}\n+ # We want to run on external PRs, but not on our own internal PRs as they'll be run\n+ # by the push to the branch.\n+ if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository\n+\nsteps:\n- uses: actions/checkout@v2\n",
        "date": "22.08.2020 14:27:57",
        "repo": "vega/vega",
        "type": "ci",
        "chatgpt_zeroshot": "Add support for running tests on external pull requests"
    },
    {
        "msg": "ci: remove caching",
        "diff": "diff --git a/.github/workflows/test.yml b/.github/workflows/test.yml @@ -22,18 +22,6 @@ jobs:\n- name: Install Canvas and XML dependencies\nrun: sudo apt-get install -y libcairo2-dev libpango1.0-dev libxml2-utils\n- - name: Get Yarn cache directory path\n- id: yarn-cache-dir-path\n- run: echo \"::set-output name=dir::$(yarn cache dir)\"\n-\n- - uses: actions/cache@v1\n- id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)\n- with:\n- path: ${{ steps.yarn-cache-dir-path.outputs.dir }}\n- key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}\n- restore-keys: |\n- ${{ runner.os }}-yarn-\n-\n- name: Setup Node ${{ matrix.node }}\nuses: actions/setup-node@v1\nwith:\n",
        "date": "09.10.2020 17:10:28",
        "repo": "vega/vega",
        "type": "ci",
        "chatgpt_zeroshot": "Remove yarn caching in test workflow"
    },
    {
        "msg": "ci: trigger on push to master or pr",
        "diff": "diff --git a/.github/workflows/test.yml b/.github/workflows/test.yml name: Test\n-on: [push, pull_request]\n+on:\n+ push:\n+ branches:\n+ - master\n+ pull_request:\njobs:\ntest:\n@@ -12,10 +16,6 @@ jobs:\nname: Node ${{ matrix.node }}\n- # We want to run on external PRs, but not on our own internal PRs as they'll be run\n- # by the push to the branch.\n- if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository\n-\nsteps:\n- uses: actions/checkout@v2\n",
        "date": "16.03.2021 14:30:26",
        "repo": "vega/vega",
        "type": "ci",
        "chatgpt_zeroshot": "Restrict workflow to run only on push events for the master branch."
    },
    {
        "msg": "ci: pin mysql image version to work around broken update",
        "diff": "diff --git a/.circleci/config.yml b/.circleci/config.yml @@ -429,7 +429,7 @@ executors:\ndocker:\n- image: circleci/node:14-browsers\nauth: *docker-pull-creds\n- - image: circleci/mysql:5.7\n+ - image: circleci/mysql:5.7.32\nauth: *docker-pull-creds\nenvironment:\nMYSQL_DATABASE: circle_test\n",
        "date": "18.03.2021 09:27:50",
        "repo": "offen/offen",
        "type": "ci",
        "chatgpt_zeroshot": "Update MySQL image version to 5.7.32 in CircleCI config"
    },
    {
        "msg": "ci: only build -root image for production release",
        "diff": "diff --git a/.circleci/config.yml b/.circleci/config.yml @@ -166,6 +166,7 @@ jobs:\nfi\nelse\necho 'export DOCKER_IMAGE_TAGS=($CIRCLE_TAG latest)' >> $BASH_ENV\n+ echo 'export DOCKER_BUILD_DEPRECATED=\"true\"' >> $BASH_ENV\nfi\n- run:\nname: Download and import signing key\n@@ -205,7 +206,9 @@ jobs:\nfor tag in \"${DOCKER_IMAGE_TAGS[@]}\"; do\ndocker tag offen/offen:local offen/offen:$tag\n+ if [ ! -z \"$DOCKER_BUILD_DEPRECATED\" ]; then\ndocker tag offen/offen:root offen/offen:$tag-root\n+ fi\ndone\n- run:\nname: Push offen/offen to Docker Hub\n@@ -213,7 +216,9 @@ jobs:\necho \"$DOCKER_ACCESSTOKEN\" | docker login --username $DOCKER_LOGIN --password-stdin\nfor tag in \"${DOCKER_IMAGE_TAGS[@]}\"; do\ndocker push offen/offen:$tag\n+ if [ ! -z \"$DOCKER_BUILD_DEPRECATED\" ]; then\ndocker push offen/offen:$tag-root\n+ fi\ndone\n- store_artifacts:\npath: /tmp/artifacts\n",
        "date": "18.03.2021 15:23:55",
        "repo": "offen/offen",
        "type": "ci",
        "chatgpt_zeroshot": "Add support for deprecated Docker builds"
    },
    {
        "msg": "ci: use browser tools orb to install chrome",
        "diff": "diff --git a/.circleci/config.yml b/.circleci/config.yml @@ -327,15 +327,10 @@ commands:\ndescription: The version of Cypress to use\ndefault: '4.5.0'\nsteps:\n+ - browser-tools/install-browser-tools\n- checkout\n- attach_workspace:\nat: ~/offen\n- - run:\n- name: Install Chrome\n- command: |\n- wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -\n- sudo sh -c 'echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google.list'\n- sudo apt-get update && sudo apt-get install -y google-chrome-unstable\n- run:\nname: Setup application\ncommand: |\n@@ -409,6 +404,7 @@ commands:\norbs:\ndocker: circleci/docker@1.0.1\n+ browser-tools: circleci/browser-tools@1.1.0\nx-docker-pull-creds: &docker-pull-creds\nusername: offen\n",
        "date": "25.09.2021 10:56:15",
        "repo": "offen/offen",
        "type": "ci",
        "chatgpt_zeroshot": "Update CircleCI configuration to use browser-tools orb version 1.1.0"
    },
    {
        "msg": "ci: update docker orb",
        "diff": "diff --git a/.circleci/config.yml b/.circleci/config.yml @@ -397,7 +397,7 @@ commands:\ncommand: sudo npm i -g npm@6\norbs:\n- docker: circleci/docker@1.0.1\n+ docker: circleci/docker@2.1.4\nbrowser-tools: circleci/browser-tools@1.1.0\nx-docker-pull-creds: &docker-pull-creds\n",
        "date": "13.10.2022 09:08:13",
        "repo": "offen/offen",
        "type": "ci",
        "chatgpt_zeroshot": "Update docker orb version to 2.1.4 in CircleCI config."
    },
    {
        "msg": "ci: use cimg convenience images for postgres and mysql",
        "diff": "diff --git a/.circleci/config.yml b/.circleci/config.yml @@ -417,7 +417,7 @@ executors:\ndocker:\n- image: cimg/node:16.13-browsers\nauth: *docker-pull-creds\n- - image: circleci/postgres:11.2-alpine\n+ - image: cimg/postgres:15.0\nauth: *docker-pull-creds\nenvironment:\nPOSTGRES_USER: circle\n@@ -426,7 +426,7 @@ executors:\ndocker:\n- image: cimg/node:16.13-browsers\nauth: *docker-pull-creds\n- - image: circleci/mysql:5.7.32\n+ - image: cimg/mysql:5.7.38\nauth: *docker-pull-creds\nenvironment:\nMYSQL_DATABASE: circle_test\n",
        "date": "01.12.2022 15:04:43",
        "repo": "offen/offen",
        "type": "ci",
        "chatgpt_zeroshot": "Update Docker images for PostgreSQL and MySQL versions in CircleCI configuration."
    },
    {
        "msg": "ci: storage endpoint in env is never used",
        "diff": "diff --git a/.circleci/config.yml b/.circleci/config.yml @@ -147,7 +147,6 @@ jobs:\nDOCKER_LOGIN: offen\nDOCKER_BUILDKIT: '1'\nDOCKER_CLI_EXPERIMENTAL: enabled\n- MINIO_STORAGE: https://storage.offen.dev\nworking_directory: ~/offen\nsteps:\n- checkout\n",
        "date": "06.01.2023 08:42:17",
        "repo": "offen/offen",
        "type": "ci",
        "chatgpt_zeroshot": "Remove MINIO_STORAGE environment variable from CircleCI config"
    },
    {
        "msg": "ci(circle): set up condition-circle to enable semantic-release on CircleCI builds",
        "diff": "diff --git a/package.json b/package.json \"clean-webpack-plugin\": \"^0.1.7\",\n\"codecov.io\": \"^0.1.6\",\n\"commitizen\": \"^2.8.6\",\n+ \"condition-circle\": \"^1.5.0\",\n\"conventional-commit-types\": \"^2.1.0\",\n\"copy-webpack-plugin\": \"^1.1.1\",\n\"cz-conventional-changelog\": \"^1.2.0\",\n\"validate-commit-msg\": {\n\"helpMessage\": \"This project is commitizen-friendly.\\nLearn more at https://commitizen.github.io/cz-cli/https://commitizen.github.io/cz-cli/\\nTo try again, you can say \\\"git commit -t .git/COMMIT_EDITMSG\\\".\\nOr, you can use git-cz to make your commits.\"\n}\n+ },\n+ \"release\": {\n+ \"verifyConditions\": \"condition-circle\"\n}\n}\n",
        "date": "28.04.2017 15:52:27",
        "repo": "kitware/candela",
        "type": "ci",
        "chatgpt_zeroshot": "Add condition-circle as a release verification condition."
    },
    {
        "msg": "ci: force reinstall of candela package on each build",
        "diff": "diff --git a/circle.yml b/circle.yml @@ -16,8 +16,15 @@ dependencies:\ncompile:\noverride:\n+ # Build Candela and \"install\" it as a node module.\n- npm run build\n+ - rm -rf node_modules/candela\n+ - npm install\n+\n+ # Build the examples.\n- npm run build:examples\n+\n+ # Build the unit test and coverage test bundles.\n- npm run build:test:unit\n- npm run build:test:coverage\n",
        "date": "13.06.2017 09:40:07",
        "repo": "kitware/candela",
        "type": "ci",
        "chatgpt_zeroshot": "Build Candela, examples, and test bundles in circle.yml"
    },
    {
        "msg": "ci: update circle.yml to reflect changes in build process",
        "diff": "diff --git a/circle.yml b/circle.yml @@ -16,10 +16,8 @@ dependencies:\ncompile:\noverride:\n- # Build Candela and \"install\" it as a node module.\n+ # Build Candela.\n- npm run build\n- - rm -rf node_modules/candela\n- - npm install\n# Build the examples.\n- npm run build:examples\n",
        "date": "30.06.2017 14:56:44",
        "repo": "kitware/candela",
        "type": "ci",
        "chatgpt_zeroshot": "Remove unnecessary steps in building Candela."
    },
    {
        "msg": "ci: add --debug flags to semantic-release invocations",
        "diff": "diff --git a/package.json b/package.json \"lint:pycandela\": \"flake8 --config python/pycandela/flake8.cfg python/pycandela\",\n\"docs\": \"http-server build/docs -p ${PORT-3000}\",\n\"commit\": \"git-cz\",\n- \"semantic-release\": \"semantic-release pre && npm publish && semantic-release post\",\n+ \"semantic-release\": \"semantic-release pre --debug && npm publish && semantic-release post --debug \",\n\"commitmsg\": \"validate-commit-msg\"\n},\n\"semistandard\": {\n",
        "date": "15.02.2018 11:26:10",
        "repo": "kitware/candela",
        "type": "ci",
        "chatgpt_zeroshot": "Update semantic-release command in package.json"
    },
    {
        "msg": "ci: update circle.yml to build properly",
        "diff": "diff --git a/circle.yml b/circle.yml @@ -11,12 +11,12 @@ dependencies:\n# Install flake8 for Python linting.\n- sudo pip install flake8\n+ # Install Lerna globally.\n+ - sudo npm install -g lerna@2.10.2\n+\n# Inject npm token into environment.\n- echo \"//registry.npmjs.org/:_authToken=$NPM_TOKEN\" >>~/.npmrc\n- cache_directories:\n- - node_modules\n-\ncompile:\noverride:\n# Build Candela.\n@@ -26,8 +26,8 @@ compile:\n- npm run build:examples\n# Build the unit test and coverage test bundles.\n- - npm run build:test:unit\n- - npm run build:test:coverage\n+ - npm run build:test\n+ - npm run build:coverage\ntest:\noverride:\n@@ -45,19 +45,18 @@ test:\n# Coverage tests.\n- npm run test:coverage\n- - npm run test:coverage:codecov\npost:\n# Gather up the testing images as build artifacts.\n- mkdir $CIRCLE_ARTIFACTS/test_images\n- - find plugins -name '*.png' | xargs -I xxx cp xxx $CIRCLE_ARTIFACTS/test_images\n+ - find packages/examples/test -name '*.png' | xargs -I xxx cp xxx $CIRCLE_ARTIFACTS/test_images\n# Copy the html coverage report to the artifacts directory as well.\n- mkdir $CIRCLE_ARTIFACTS/coverage\n- cp -r build/coverage/html $CIRCLE_ARTIFACTS/coverage\ndeployment:\n- semantic-release:\n+ lerna-publish:\nbranch: master\ncommands:\n- - DEBUG=condition npm run semantic-release\n+ - lerna publish --conventional-commits --yes\n",
        "date": "03.05.2018 16:52:30",
        "repo": "kitware/candela",
        "type": "ci",
        "chatgpt_zeroshot": "Add Lerna global installation and update build and test scripts."
    },
    {
        "msg": "ci: don't use sudo to install global npm package",
        "diff": "diff --git a/circle.yml b/circle.yml @@ -12,7 +12,7 @@ dependencies:\n- sudo pip install flake8\n# Install Lerna globally.\n- - sudo npm install -g lerna@2.10.2\n+ - npm install -g lerna@2.10.2\n# Inject npm token into environment.\n- echo \"//registry.npmjs.org/:_authToken=$NPM_TOKEN\" >>~/.npmrc\n",
        "date": "03.05.2018 17:10:18",
        "repo": "kitware/candela",
        "type": "ci",
        "chatgpt_zeroshot": "Remove unnecessary use of sudo in npm install command in circle.yml"
    },
    {
        "msg": "ci: use bash instead of sh",
        "diff": "diff --git a/package.json b/package.json \"scripts\": {\n\"install\": \"lerna bootstrap --hoist\",\n\"clean:lerna\": \"lerna clean\",\n- \"clean:dist\": \"sh scripts/clean-all\",\n- \"build\": \"sh scripts/build-all\",\n+ \"clean:dist\": \"bash scripts/clean-all\",\n+ \"build\": \"bash scripts/build-all\",\n\"build:examples\": \"cd packages/examples && npm run build\",\n\"examples\": \"cd packages/examples && npm run serve\",\n- \"build:test\": \"sh scripts/build-test\",\n- \"build:coverage\": \"COVERAGE=1 sh scripts/build-test\",\n- \"test:unit\": \"sh scripts/run-test\",\n+ \"build:test\": \"bash scripts/build-test\",\n+ \"build:coverage\": \"COVERAGE=1 bash scripts/build-test\",\n+ \"test:unit\": \"bash scripts/run-test\",\n\"test:image\": \"cd packages/examples && npm test\",\n- \"test:coverage\": \"COVERAGE=1 sh scripts/run-test\",\n+ \"test:coverage\": \"COVERAGE=1 bash scripts/run-test\",\n\"coverage:report\": \"http-server build/coverage/html -p ${PORT-3000}\",\n\"build:docs\": \"sphinx-build -a -b html docs/ build/docs/\",\n- \"lint\": \"sh scripts/run-lint\",\n+ \"lint\": \"bash scripts/run-lint\",\n\"lint:pycandela\": \"flake8 --config python/pycandela/flake8.cfg python/pycandela\",\n\"docs\": \"http-server build/docs -p ${PORT-3000}\",\n\"commit\": \"git-cz\",\n",
        "date": "03.05.2018 17:42:59",
        "repo": "kitware/candela",
        "type": "ci",
        "chatgpt_zeroshot": "Refactor scripts to use bash instead of sh for consistency."
    },
    {
        "msg": "ci: remove extra build step",
        "diff": "diff --git a/circle.yml b/circle.yml @@ -19,12 +19,9 @@ dependencies:\ncompile:\noverride:\n- # Build Candela.\n+ # Build Candela and the examples.\n- npm run build\n- # Build the examples.\n- - npm run build:examples\n-\n# Build the unit test and coverage test bundles.\n- npm run build:test\n- npm run build:coverage\n",
        "date": "11.05.2018 13:26:55",
        "repo": "kitware/candela",
        "type": "ci",
        "chatgpt_zeroshot": "Update build process to include building Candela and examples"
    },
    {
        "msg": "ci: point coverage build step to test build step",
        "diff": "diff --git a/package.json b/package.json \"build\": \"lerna run build\",\n\"examples\": \"cd packages/examples && npm run serve\",\n\"build:test\": \"lerna run build:test\",\n- \"build:coverage\": \"COVERAGE=1 bash scripts/build-test\",\n+ \"build:coverage\": \"COVERAGE=1 npm run build:test\",\n\"test:unit\": \"lerna run test --ignore @candela/examples\",\n\"test:image\": \"cd packages/examples && npm test\",\n\"test:coverage\": \"COVERAGE=1 npm run test:unit\",\n",
        "date": "11.05.2018 13:44:59",
        "repo": "kitware/candela",
        "type": "ci",
        "chatgpt_zeroshot": "Refactor build:coverage script to use npm run command instead of bash script"
    },
    {
        "msg": "ci: build the \"all\" bundle so it can be published",
        "diff": "diff --git a/circle.yml b/circle.yml @@ -25,6 +25,9 @@ compile:\n# Build the examples package.\n- npm run build:examples\n+ # Build the big bundle.\n+ - npm run build:bundle\n+\n# Build the unit test and coverage test bundles.\n- npm run build:test\n- npm run build:coverage\n",
        "date": "14.05.2018 12:12:47",
        "repo": "kitware/candela",
        "type": "ci",
        "chatgpt_zeroshot": "Add build command for big bundle in circle.yml"
    },
    {
        "msg": "ci: build production versions of libraries for publishing",
        "diff": "diff --git a/circle.yml b/circle.yml @@ -20,13 +20,13 @@ dependencies:\ncompile:\noverride:\n# Build Candela.\n- - npm run build\n+ - npm run build:prod\n# Build the examples package.\n- npm run build:examples\n# Build the big bundle.\n- - npm run build:bundle\n+ - npm run build:bundle:prod\n# Build the JupyterLab extension (which depends on @candela/all from the\n# previous step).\n",
        "date": "11.06.2018 13:55:39",
        "repo": "kitware/candela",
        "type": "ci",
        "chatgpt_zeroshot": "Update build scripts to use production builds for Candela and bundle."
    },
    {
        "msg": "ci: Cache repos fetched by gittar",
        "diff": "diff --git a/.github/workflows/ci.yml b/.github/workflows/ci.yml @@ -20,23 +20,33 @@ jobs:\nstrategy:\nmatrix:\nnode-version: [12.x, 14.x]\n+\nsteps:\n- uses: actions/checkout@v2\nwith:\nfetch-depth: 1\n+\n- name: Use Node.js ${{ matrix.node-version }}\nuses: actions/setup-node@v1\nwith:\nnode-version: ${{ matrix.node-version }}\n+\n+ - uses: actions/cache@v3\n+ id: gittar-cache\n+ with:\n+ path: ~/.gittar\n+ key: ${{ runner.os }}-gittar\n+\n- name: Get yarn cache directory path\nid: yarn-cache-dir-path\nrun: echo \"::set-output name=dir::$(yarn cache dir)\"\n- - uses: actions/cache@v1\n- id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)\n+ - uses: actions/cache@v3\n+ id: yarn-cache\nwith:\npath: ${{ steps.yarn-cache-dir-path.outputs.dir }}\nkey: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}\nrestore-keys: ${{ runner.os }}-yarn-\n+\n- run: yarn install --frozen-lockfile\n- name: test\nenv:\n",
        "date": "02.02.2023 07:07:05",
        "repo": "preactjs/preact-cli",
        "type": "ci",
        "chatgpt_zeroshot": "Update GitHub Actions workflow to use actions/cache@v3 for caching yarn and gittar dependencies."
    },
    {
        "msg": "ci: Reduce runs",
        "diff": "diff --git a/.github/workflows/ci.yml b/.github/workflows/ci.yml @@ -5,8 +5,6 @@ on:\nbranches:\n- master\n- next\n- - staging\n- - trying\npull_request:\nbranches:\n- master\n@@ -31,6 +29,13 @@ jobs:\nwith:\nnode-version: ${{ matrix.node-version }}\n+ - uses: dorny/paths-filter@v2\n+ id: filter\n+ with:\n+ filters: |\n+ cli:\n+ - 'packages/cli/**'\n+\n- uses: actions/cache@v3\nid: gittar-cache\nwith:\n@@ -48,19 +53,11 @@ jobs:\nrestore-keys: ${{ runner.os }}-yarn-\n- run: yarn install --frozen-lockfile\n- - name: test\n+\n+ - name: test:cli\n+ if: steps.filter.outputs.cli == 'true'\nenv:\nCI: true\nWITH_LOG: true\nLIGHTHOUSE_CHROMIUM_PATH: 'which google-chrome-stable'\n- run: npm run test\n-\n- ci-success:\n- name: ci\n- if: ${{ success() }}\n- needs:\n- - test\n- runs-on: ubuntu-latest\n- steps:\n- - name: CI succeeded\n- run: exit 0\n+ run: yarn test:cli\n",
        "date": "02.02.2023 07:13:05",
        "repo": "preactjs/preact-cli",
        "type": "ci",
        "chatgpt_zeroshot": "Refactor CI workflow to include paths filter for CLI tests."
    },
    {
        "msg": "ci(.travis.yml): run on node 8/9, fix \"script\"\nci(.travis.yml): run on node 8/9, fix \"script\"",
        "diff": "diff --git a/.travis.yml b/.travis.yml language: node_js\nnode_js:\n- - \"7\"\n+ - \"8\"\n+ - \"9\"\ninstall:\n- npm install -g codecov\n- - \"npm install\"\n+ - npm install\nscript:\n- - \"npm run server_dev & npm run test\"\n+ - npm run test\nafter_script:\n- codecov\n",
        "date": "07.11.2017 03:17:47",
        "repo": "metnew/suicrux",
        "type": "ci",
        "chatgpt_zeroshot": "Update Node.js versions and streamline npm install and script commands"
    },
    {
        "msg": "ci: add deploy test and lint",
        "diff": "diff --git a/.github/workflows/main.yml b/.github/workflows/main.yml @@ -22,6 +22,9 @@ jobs:\n- uses: actions/checkout@v2\n- name: Install modules\nrun: yarn\n+ - name: Run Lint\n+ run: yarn lint\n- name: Run tests\nrun: yarn test:unit\n-\n+ - name: Pre Deploy test\n+ run: yarn deploy:build\n",
        "date": "25.08.2020 10:18:04",
        "repo": "hug-sun/element3",
        "type": "ci",
        "chatgpt_zeroshot": "Add linting and pre-deploy test steps to the workflow."
    },
    {
        "msg": "ci: spread jobs",
        "diff": "diff --git a/.github/workflows/main.yml b/.github/workflows/main.yml @@ -13,10 +13,9 @@ on:\n# A workflow run is made up of one or more jobs that can run sequentially or in parallel\njobs:\n# This workflow contains a single job called \"build\"\n- build:\n+ Lint:\n# The type of runner that the job will run on\nruns-on: ubuntu-latest\n-\n# Steps represent a sequence of tasks that will be executed as part of the job\nsteps:\n- uses: actions/checkout@v2\n@@ -24,7 +23,23 @@ jobs:\nrun: yarn\n- name: Run Lint\nrun: yarn lint\n+ UnitTest:\n+ # The type of runner that the job will run on\n+ runs-on: ubuntu-latest\n+ # Steps represent a sequence of tasks that will be executed as part of the job\n+ steps:\n+ - uses: actions/checkout@v2\n+ - name: Install modules\n+ run: yarn\n- name: Run tests\nrun: yarn test:unit\n+ PreBuild:\n+ # The type of runner that the job will run on\n+ runs-on: ubuntu-latest\n+ # Steps represent a sequence of tasks that will be executed as part of the job\n+ steps:\n+ - uses: actions/checkout@v2\n+ - name: Install modules\n+ run: yarn\n- name: Pre Deploy test\nrun: yarn build:ci\n\\ No newline at end of file\n",
        "date": "25.08.2020 10:31:05",
        "repo": "hug-sun/element3",
        "type": "ci",
        "chatgpt_zeroshot": "Refactor GitHub Actions workflow to include linting, unit testing, and pre-build steps."
    },
    {
        "msg": "ci: fix ci bug",
        "diff": "diff --git a/package.json b/package.json \"build:theme\": \"node build/bin/gen-cssfile && gulp build --gulpfile packages/theme-chalk/gulpfile.js && cp-cli packages/theme-chalk/lib lib/theme-chalk\",\n\"build:utils\": \"cross-env BABEL_ENV=utils babel src --out-dir lib --ignore src/index.js\",\n\"build:umd\": \"node build/bin/build-locale.js\",\n- \"build:ci\":\"npm run build:file && cross-env NODE_ENV=development webpack-dev-server --config build/webpack.demo.js\",\n+ \"build:ci\":\"npm run build:file && cross-env NODE_ENV=development webpack --config build/webpack.demo.js\",\n\"clean\": \"rimraf lib && rimraf packages/*/lib && rimraf test/**/coverage\",\n\"deploy:build\": \"npm run build:file && cross-env NODE_ENV=production webpack --config build/webpack.demo.js && echo element.eleme.io>>examples/element-ui/CNAME\",\n\"deploy:extension\": \"cross-env NODE_ENV=production webpack --config build/webpack.extension.js\",\n",
        "date": "25.08.2020 10:48:15",
        "repo": "hug-sun/element3",
        "type": "ci",
        "chatgpt_zeroshot": "Refactor build:ci script to use webpack instead of webpack-dev-server"
    },
    {
        "msg": "ci: update action",
        "diff": "diff --git a/.github/workflows/main.yml b/.github/workflows/main.yml @@ -40,6 +40,6 @@ jobs:\nsteps:\n- uses: actions/checkout@v2\n- name: Install modules\n- run: yarn\n+ run: npm i\n- name: Pre Deploy test\n- run: yarn build:docs\n\\ No newline at end of file\n+ run: npm run build:docs\n",
        "date": "12.09.2020 23:15:29",
        "repo": "hug-sun/element3",
        "type": "ci",
        "chatgpt_zeroshot": "Update package manager from yarn to npm in workflow file"
    },
    {
        "msg": "ci: add msg log in commit",
        "diff": "diff --git a/scripts/verifyCommit.js b/scripts/verifyCommit.js @@ -8,6 +8,7 @@ const commitRE = /^(revert: )?(feat|fix|docs|dx|style|refactor|perf|test|workflo\nconst mergeRE = /^Merge pull request/\nif (!commitRE.test(msg)) {\nif (!mergeRE.test(msg)) {\n+ console.log(msg)\nconsole.error(\n` ${chalk.bgRed.white(' ERROR ')} ${chalk.red(\n`invalid commit message format.`\n",
        "date": "15.10.2020 07:09:27",
        "repo": "hug-sun/element3",
        "type": "ci",
        "chatgpt_zeroshot": "Add console log for invalid commit message format."
    },
    {
        "msg": "ci: verify log",
        "diff": "diff --git a/scripts/verifyCommit.js b/scripts/verifyCommit.js @@ -5,9 +5,10 @@ const msgPath = process.env.GIT_PARAMS\nconst msg = require('fs').readFileSync(msgPath, 'utf-8').trim()\nconst commitRE = /^(revert: )?(feat|fix|docs|dx|style|refactor|perf|test|workflow|build|ci|chore|types|wip|release)(\\(.+\\))?(.{1,10})?: .{1,50}/\n-const mergeRE = /^Merge pull request/\n+const mergeRe = /^(Merge pull request|Merge branch)/\n+\nif (!commitRE.test(msg)) {\n- if (!mergeRE.test(msg)) {\n+ if (!mergeRe.test(msg)) {\nconsole.log(msg)\nconsole.error(\n` ${chalk.bgRed.white(' ERROR ')} ${chalk.red(\n",
        "date": "15.10.2020 14:35:55",
        "repo": "hug-sun/element3",
        "type": "ci",
        "chatgpt_zeroshot": "Fix regex pattern for merge commits in verifyCommit.js"
    },
    {
        "msg": "ci: reset main.yml",
        "diff": "diff --git a/.github/workflows/main.yml b/.github/workflows/main.yml name: CI\n# Controls when the action will run. Triggers the workflow on push or pull request\n-# events but only for the next branch\n+# events but only for the master branch\non:\npush:\nbranches: [next]\n@@ -13,21 +13,23 @@ on:\n# A workflow run is made up of one or more jobs that can run sequentially or in parallel\njobs:\n# This workflow contains a single job called \"build\"\n-\n-\nLint:\n# The type of runner that the job will run on\nruns-on: ubuntu-latest\n# Steps represent a sequence of tasks that will be executed as part of the job\nsteps:\n- - name: Install pnpm\n- uses: pnpm/action-setup@v2.0.1\n- id: pnpm-install\n- with:\n- version: 7\n+ - uses: actions/checkout@v2\n- name: Install modules\n- run: pnpm i\n+ run: npm i\n- name: Run Lint\n- run: pnpm run lint\n- - name: Unit Test\n- run: pnpm run test:once\n+ run: npm run lint\n+ UnitTest:\n+ # The type of runner that the job will run on\n+ runs-on: ubuntu-latest\n+ # Steps represent a sequence of tasks that will be executed as part of the job\n+ steps:\n+ - uses: actions/checkout@v2\n+ - name: Install modules\n+ run: npm i\n+ - name: Run tests\n+ run: npm run test:lint\n\\ No newline at end of file\n",
        "date": "19.06.2022 00:51:48",
        "repo": "hug-sun/element3",
        "type": "ci",
        "chatgpt_zeroshot": "Update CI workflow to run only on the master branch and adjust job steps for linting and unit testing."
    },
    {
        "msg": "ci: action test run once",
        "diff": "diff --git a/.github/workflows/main.yml b/.github/workflows/main.yml @@ -32,4 +32,4 @@ jobs:\n- name: Install modules\nrun: npm i\n- name: Run tests\n- run: npm run test:lint\n\\ No newline at end of file\n+ run: npm run test:once\n\\ No newline at end of file\n",
        "date": "19.06.2022 00:54:08",
        "repo": "hug-sun/element3",
        "type": "ci",
        "chatgpt_zeroshot": "Update test command in GitHub Actions workflow to run tests once instead of linting only."
    },
    {
        "msg": "ci: update action config add typecheck",
        "diff": "diff --git a/.github/workflows/main.yml b/.github/workflows/main.yml @@ -23,13 +23,7 @@ jobs:\nrun: npm i\n- name: Run Lint\nrun: npm run lint\n- UnitTest:\n- # The type of runner that the job will run on\n- runs-on: ubuntu-latest\n- # Steps represent a sequence of tasks that will be executed as part of the job\n- steps:\n- - uses: actions/checkout@v2\n- - name: Install modules\n- run: npm i\n- - name: Run tests\n+ - name: unittest\nrun: npm run test:once\n+ - name: typecheck\n+ run: npm run typecheck\n",
        "date": "21.06.2022 22:44:47",
        "repo": "hug-sun/element3",
        "type": "ci",
        "chatgpt_zeroshot": "Refactor GitHub Actions workflow to include separate steps for unit testing and type checking."
    },
    {
        "msg": "ci: try to fix azure pipline",
        "diff": "diff --git a/azure-pipelines.yml b/azure-pipelines.yml @@ -16,10 +16,10 @@ strategy:\nsteps:\n- task: NodeTool@0\ninputs:\n- version: $(node_version)\n+ versionSpec: $(node_version)\ndisplayName: 'Install Node.js'\n- script: |\nnpm install\n- npm run test\n+ npm test\ndisplayName: 'npm install and test'\n",
        "date": "01.10.2018 19:03:48",
        "repo": "namics/generator-nitro",
        "type": "ci",
        "chatgpt_zeroshot": "Refactor npm test script and update NodeTool version specification in azure-pipelines.yml"
    },
    {
        "msg": "ci: disable npm ci mode",
        "diff": "diff --git a/package.json b/package.json \"clean:lock\": \"rimraf **/package-lock.json\",\n\"clean:modules\": \"npx rimraf node_modules\",\n\"commit\": \"git-cz\",\n- \"postinstall\": \"lerna bootstrap --hoist\",\n+ \"postinstall\": \"lerna bootstrap --no-ci --hoist\",\n\"test\": \"lerna run test --parallel\",\n\"lint\": \"lerna run lint --parallel\",\n\"lint:md\": \"markdownlint ./readme.md ./.github\"\n",
        "date": "22.11.2018 10:14:37",
        "repo": "namics/generator-nitro",
        "type": "ci",
        "chatgpt_zeroshot": "Update postinstall script in package.json to use --no-ci flag for lerna bootstrap command"
    },
    {
        "msg": "ci: add libgconf for ubuntu 16+ to fix travis build",
        "diff": "diff --git a/.travis.yml b/.travis.yml @@ -3,15 +3,22 @@ sudo: false\nnode_js:\n- '8'\n- '10'\n+addons:\n+ apt:\n+ packages:\n+ # Ubuntu 16+ does not install this dependency by default, so we need to install it ourselves\n+ - libgconf-2-4\nservices:\n- docker\n## Prevent from verbose install log caused by cypress installation\nenv:\n- CI=true\n-## Cache NPM folder and cypress binary\ncache:\n+ # Caches $HOME/.npm when npm ci is default script command\n+ # Caches node_modules in all other cases\n+ npm: true\ndirectories:\n- - ~/.npm\n+ # we also need to cache folder with Cypress binary\n- ~/.cache\ninstall:\n- npm ci\n",
        "date": "11.10.2019 16:25:00",
        "repo": "namics/generator-nitro",
        "type": "ci",
        "chatgpt_zeroshot": "Add libgconf-2-4 dependency for Ubuntu 16+, update npm cache settings"
    },
    {
        "msg": "ci: use standard npm version in github actions",
        "diff": "diff --git a/.github/workflows/ci.yml b/.github/workflows/ci.yml @@ -27,14 +27,6 @@ jobs:\nwith:\nnode-version: ${{ matrix.node-version }}\n- - name: Use latest NPM on ubuntu/macos\n- if: matrix.platform == 'ubuntu-latest' || matrix.platform == 'macos-latest'\n- run: sudo npm i -g npm\n-\n- - name: Use latest NPM on windows\n- if: matrix.platform == 'windows-latest'\n- run: npm i -g npm\n-\n- name: Install dependencies\nrun: npm ci\n",
        "date": "10.02.2021 21:16:42",
        "repo": "namics/generator-nitro",
        "type": "ci",
        "chatgpt_zeroshot": "Remove redundant steps for installing latest NPM versions"
    },
    {
        "msg": "docs: minor - spelling, grammar",
        "diff": "diff --git a/contracts/token/ERC1155/README.adoc b/contracts/token/ERC1155/README.adoc @@ -4,7 +4,7 @@ This set of interfaces and contracts are all related to the https://eips.ethereu\nThe EIP consists of three interfaces which fulfill different roles, found here as `IERC1155`, `IERC1155MetadataURI` and `IERC1155Receiver`.\n-`ERC1155` implement the mandatory `IERC1155` interface, as well as the optional extension `IERC1155MetadataURI` by relying on the substition mechanism to use the same URI for all token types, dramatically reducing gas costs.\n+`ERC1155` implements the mandatory `IERC1155` interface, as well as the optional extension `IERC1155MetadataURI`, by relying on the substitution mechanism to use the same URI for all token types, dramatically reducing gas costs.\n`ERC1155Holder` implements the `IERC1155Receiver` interface for contracts that can receive (and hold) ERC1155 tokens.\n",
        "date": "10.06.2020 00:18:38",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "docs",
        "chatgpt_zeroshot": "Fix typo and clarify implementation in ERC1155README."
    },
    {
        "msg": "docs(erc1155): correct ERC1155Holder.sol import",
        "diff": "diff --git a/docs/modules/ROOT/pages/erc1155.adoc b/docs/modules/ROOT/pages/erc1155.adoc @@ -136,7 +136,7 @@ In order for our contract to receive ERC1155 tokens we can inherit from the conv\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n-import \"@openzeppelin/contracts/token/ERC1155/ERC1155Holder.sol\";\n+import \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\";\ncontract MyContract is ERC1155Holder {\n}\n",
        "date": "09.03.2022 15:32:46",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "docs",
        "chatgpt_zeroshot": "Update import path for ERC1155Holder in MyContract"
    },
    {
        "msg": "docs: add design principle",
        "diff": "diff --git a/README.md b/README.md @@ -270,6 +270,17 @@ Well...I've been asked this many times before. I like that I've been asked this\nThe answer is simple, but possibly frustrating. I'm not saying (how I pronounce it). It's up to you to call it as you like. All answers are correct :)\n+## Design principles\n+\n+- Less flags is better\n+- Works across all platforms\n+- Less features\n+- Let individuals build on top of nodemon\n+- Offer all CLI functionality as an API\n+- Contributions must have and pass tests\n+\n+Nodemon is not perfect, and CLI arguments has sprawled beyond where I'm completely happy, but perhaps it can be pulled back a little.\n+\n## FAQ\nSee the [FAQ](https://github.com/remy/nodemon/blob/master/faq.md) and please add your own questions if you think they would help others.\n",
        "date": "31.03.2017 10:02:39",
        "repo": "remy/nodemon",
        "type": "docs",
        "chatgpt_zeroshot": "Refactor design principles and update FAQ in README"
    },
    {
        "msg": "docs: typo\ntypo",
        "diff": "diff --git a/README.md b/README.md @@ -162,7 +162,7 @@ Note that by default, nodemon will ignore the `.git`, `node_modules`, `bower_com\n## Application isn't restarting\n-In some networked environments (such as a container running nodemon reading across a mounted drive), you will need to use the `legacyWatch: true` which enabled Chokidar's polling.\n+In some networked environments (such as a container running nodemon reading across a mounted drive), you will need to use the `legacyWatch: true` which enables Chokidar's polling.\nVia the CLI, use either `--legacy-watch` or `-L` for short:\n",
        "date": "05.09.2017 04:20:59",
        "repo": "remy/nodemon",
        "type": "docs",
        "chatgpt_zeroshot": "Fix typo in README.md and update instructions for using legacyWatch option"
    },
    {
        "msg": "docs: updated an error condition in FAQ",
        "diff": "diff --git a/faq.md b/faq.md @@ -195,3 +195,7 @@ Note that if you have a `nodemon.json` in your `$HOME` path, then this will also\nOn Ubuntu globally installed node applications have been found to have no output when they're run. This *seems* to be an issue with node not being correctly installed (possibly linked to the binary having to be called `nodejs`).\nThe solution (that's worked in the past) is to install [nvm](https://github.com/creationix/nvm) first and using it to install node, *rather* than using `apt-get` (or similar tools) to install node directly.\n+\n+## If nodemon is facing the watch errors\n+execute 'echo fs.inotify.max_user_watches=582222 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p' command on terminal\n+\n",
        "date": "04.09.2017 23:49:36",
        "repo": "remy/nodemon",
        "type": "docs",
        "chatgpt_zeroshot": "Fix nodemon watch errors by increasing max_user_watches limit"
    },
    {
        "msg": "docs: npx to run dev dependencies",
        "diff": "diff --git a/README.md b/README.md @@ -25,7 +25,7 @@ It is also possible to install locally:\nnpm install --save-dev nodemon\n-With a local installation, nodemon will not be available in your system path. Instead, the local installation of nodemon can be run by calling it from within an npm script (such as `npm start`). Additionally, the `npm bin` command can be used to obtain the path to the project's local `.bin` directory.\n+With a local installation, nodemon will not be available in your system path. Instead, the local installation of nodemon can be run by calling it from within an npm script (such as `npm start`) or using `npx nodemon`.\n# Usage\n",
        "date": "04.09.2017 11:33:28",
        "repo": "remy/nodemon",
        "type": "docs",
        "chatgpt_zeroshot": "Add npx nodemon as an alternative for running locally installed nodemon"
    },
    {
        "msg": "docs: update small formatting issue",
        "diff": "diff --git a/faq.md b/faq.md @@ -196,6 +196,11 @@ On Ubuntu globally installed node applications have been found to have no output\nThe solution (that's worked in the past) is to install [nvm](https://github.com/creationix/nvm) first and using it to install node, *rather* than using `apt-get` (or similar tools) to install node directly.\n-## If nodemon is facing the watch errors\n-execute 'echo fs.inotify.max_user_watches=582222 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p' command on terminal\n+## If nodemon is facing the watch errors (mac)\n+\n+Try the following command on terminal:\n+\n+```bash\n+echo fs.inotify.max_user_watches=582222 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p\n+```\n",
        "date": "04.09.2017 19:32:59",
        "repo": "remy/nodemon",
        "type": "docs",
        "chatgpt_zeroshot": "Fix nodemon watch errors on mac by updating fs.inotify.max_user_watches value"
    },
    {
        "msg": "docs: Reposition Code Sponsor\nBy having the sponsor embed code at the bottom, it ends up being more effective to help fund the project.",
        "diff": "diff --git a/README.md b/README.md # nodemon\n-<a href=\"https://app.codesponsor.io/link/wnz2te8CdfKZ8wMjGUpi8EZG/remy/nodemon\" rel=\"nofollow\"><img src=\"https://app.codesponsor.io/embed/wnz2te8CdfKZ8wMjGUpi8EZG/remy/nodemon.svg\" style=\"width: 888px; height: 68px;\" alt=\"Sponsor\" /></a>\n-\nFor use during development of a node.js based application.\nnodemon will watch the files in the directory in which nodemon was started, and if any files change, nodemon will automatically restart your node application.\n@@ -291,3 +289,5 @@ See the [FAQ](https://github.com/remy/nodemon/blob/master/faq.md) and please add\n# License\nMIT [http://rem.mit-license.org](http://rem.mit-license.org)\n+\n+<a href=\"https://app.codesponsor.io/link/wnz2te8CdfKZ8wMjGUpi8EZG/remy/nodemon\" rel=\"nofollow\" target=\"_blank\"><img src=\"https://app.codesponsor.io/embed/wnz2te8CdfKZ8wMjGUpi8EZG/remy/nodemon.svg\" style=\"width: 888px; height: 68px;\" alt=\"Sponsor\" /></a>\n",
        "date": "15.09.2017 05:28:19",
        "repo": "remy/nodemon",
        "type": "docs",
        "chatgpt_zeroshot": "Remove duplicate sponsor link in README.md"
    },
    {
        "msg": "docs: update FAQ with added platform documentation\nThe changes i proposed isworks fine with linux and mac",
        "diff": "diff --git a/faq.md b/faq.md @@ -196,7 +196,7 @@ On Ubuntu globally installed node applications have been found to have no output\nThe solution (that's worked in the past) is to install [nvm](https://github.com/creationix/nvm) first and using it to install node, *rather* than using `apt-get` (or similar tools) to install node directly.\n-## If nodemon is facing the watch errors (mac)\n+## If nodemon is facing the watch errors (Mac & Linux)\nTry the following command on terminal:\n",
        "date": "20.09.2017 14:06:15",
        "repo": "remy/nodemon",
        "type": "docs",
        "chatgpt_zeroshot": "Update nodemon watch error troubleshooting instructions for Mac and Linux"
    },
    {
        "msg": "docs: trying a new position\nWill track over the next 30-60 days.",
        "diff": "diff --git a/README.md b/README.md @@ -11,6 +11,8 @@ nodemon does **not** require *any* changes to your code or method of development\n[![NPM version](https://badge.fury.io/js/nodemon.svg)](https://npmjs.org/package/nodemon)\n[![Travis Status](https://travis-ci.org/remy/nodemon.svg?branch=master)](https://travis-ci.org/remy/nodemon)\n+<a href=\"https://app.codesponsor.io/link/wnz2te8CdfKZ8wMjGUpi8EZG/remy/nodemon\" rel=\"nofollow\" target=\"_blank\"><img src=\"https://app.codesponsor.io/embed/wnz2te8CdfKZ8wMjGUpi8EZG/remy/nodemon.svg\" style=\"width: 888px; height: 68px;\" alt=\"Sponsor\" /></a>\n+\n# Installation\nEither through cloning with git or by using [npm](http://npmjs.org) (the recommended way):\n@@ -289,5 +291,3 @@ See the [FAQ](https://github.com/remy/nodemon/blob/master/faq.md) and please add\n# License\nMIT [http://rem.mit-license.org](http://rem.mit-license.org)\n-\n-<a href=\"https://app.codesponsor.io/link/wnz2te8CdfKZ8wMjGUpi8EZG/remy/nodemon\" rel=\"nofollow\" target=\"_blank\"><img src=\"https://app.codesponsor.io/embed/wnz2te8CdfKZ8wMjGUpi8EZG/remy/nodemon.svg\" style=\"width: 888px; height: 68px;\" alt=\"Sponsor\" /></a>\n",
        "date": "03.11.2017 16:35:53",
        "repo": "remy/nodemon",
        "type": "docs",
        "chatgpt_zeroshot": "Add sponsor link to README.md"
    },
    {
        "msg": "docs: update faq on issue",
        "diff": "diff --git a/faq.md b/faq.md @@ -71,7 +71,7 @@ If you see nodemon trying to run two scripts, like:\n9 Dec 23:52:58 - [nodemon] starting `node ./app.js fixtures/sigint.js`\n```\n-This is because the main script argument (`fixtures/sigint.js` in this case) wasn't found, and a `package.json`'s main file *was* found. ie. to solve, double check the path to your script is correct.\n+This is because the main script argument (`fixtures/sigint.js` in this case) wasn't found, and a `package.json`'s main file _was_ found. ie. to solve, double check the path to your script is correct.\n## What has precedence, ignore or watch?\n@@ -106,10 +106,10 @@ sudo ln -s /usr/bin/nodejs /usr/local/bin/node\nFedora and Ubuntu pakage node as nodejs, because node.dpkg is\n> Description-en: Amateur Packet Radio Node program\n- The node program accepts TCP/IP and packet radio network connections and\n- presents users with an interface that allows them to make gateway connections\n- to remote hosts using a variety of amateur radio protocols.\n-They make the binary is nodejs, rather than node. So long as you're not using that Packet Radio Node Program mentioned above the workaround will work.\n+> The node program accepts TCP/IP and packet radio network connections and\n+> presents users with an interface that allows them to make gateway connections\n+> to remote hosts using a variety of amateur radio protocols.\n+> They make the binary is nodejs, rather than node. So long as you're not using that Packet Radio Node Program mentioned above the workaround will work.\nThank you [@EvanCarroll](https://github.com/remy/nodemon/issues/68#issuecomment-13672509)\n@@ -138,7 +138,7 @@ forever stop foo\nThis will stop both nodemon and the node process it was monitoring.\n-Note that I *would not* recommend using nodemon in a production environment - but that's because I wouldn't want it restart without my explicit instruction.\n+Note that I _would not_ recommend using nodemon in a production environment - but that's because I wouldn't want it restart without my explicit instruction.\n## What does \"verbose\" give me?\n@@ -146,10 +146,10 @@ The `--verbose` (or `-V`) puts nodemon in verbose mode which adds some detail to\nAdditional restart information:\n-- Which nodemon configs are loaded (local and global if found)\n-- Which ignore rules are being applied\n-- Which file extensions are being watch\n-- The process ID of your application (the `child pid`)\n+* Which nodemon configs are loaded (local and global if found)\n+* Which ignore rules are being applied\n+* Which file extensions are being watch\n+* The process ID of your application (the `child pid`)\nFor example:\n@@ -166,10 +166,10 @@ For example:\nWhen nodemon detects a change, the following addition information is shown:\n-- Which file(s) triggered the check\n-- Which (if any) rules the file matched to cause a subsequent restart\n-- How many rules were matched and out of those rules, how many cause a restart\n-- A list of all the files that *successfully* caused a restart\n+* Which file(s) triggered the check\n+* Which (if any) rules the file matched to cause a subsequent restart\n+* How many rules were matched and out of those rules, how many cause a restart\n+* A list of all the files that _successfully_ caused a restart\nFor example, on `lib/app.js` being changed:\n@@ -192,9 +192,9 @@ Note that if you have a `nodemon.json` in your `$HOME` path, then this will also\n## nodemon does nothing\n-On Ubuntu globally installed node applications have been found to have no output when they're run. This *seems* to be an issue with node not being correctly installed (possibly linked to the binary having to be called `nodejs`).\n+On Ubuntu globally installed node applications have been found to have no output when they're run. This _seems_ to be an issue with node not being correctly installed (possibly linked to the binary having to be called `nodejs`).\n-The solution (that's worked in the past) is to install [nvm](https://github.com/creationix/nvm) first and using it to install node, *rather* than using `apt-get` (or similar tools) to install node directly.\n+The solution (that's worked in the past) is to install [nvm](https://github.com/creationix/nvm) first and using it to install node, _rather_ than using `apt-get` (or similar tools) to install node directly.\n## If nodemon is facing the watch errors (Mac & Linux)\n@@ -204,3 +204,15 @@ Try the following command on terminal:\necho fs.inotify.max_user_watches=582222 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p\n```\n+## Error: Cannot find module 'internal/util/types'\n+\n+If you see the error `Cannot find module 'internal/util/types'`, the error is solved with a clean npm cache and trying to reinstall the dependency you're working with.\n+\n+A start is to use the following commands:\n+\n+```\n+sudo npm cache clean --force\n+sudo npm i -g npm\n+```\n+\n+Otherwise see [issue #1124](https://github.com/remy/nodemon/issues/1124) for further suggestions.\n",
        "date": "12.12.2017 18:06:49",
        "repo": "remy/nodemon",
        "type": "docs",
        "chatgpt_zeroshot": "Fix formatting and typos in faq.md"
    },
    {
        "msg": "docs: fix outdated link",
        "diff": "diff --git a/.github/CONTRIBUTING.md b/.github/CONTRIBUTING.md ## Commit messages\n-Commit messages must follow the [Angular-style](https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format) commit format (but excluding the scope).\n+Commit messages must follow the [Angular-style](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits) commit format (but excluding the scope).\ni.e:\n",
        "date": "18.12.2017 10:22:02",
        "repo": "remy/nodemon",
        "type": "docs",
        "chatgpt_zeroshot": "Update commit message format link in CONTRIBUTING.md"
    },
    {
        "msg": "docs: update nodejs vs node workaround text\nThere are days when nothing is simple or 101.",
        "diff": "diff --git a/faq.md b/faq.md @@ -97,12 +97,14 @@ Now when ignoring `public`, the ignore rule results in `['.git', 'public']`, and\nFedora is looking for `nodejs` rather than `node` which is the binary that nodemon kicks off.\n-The solution is a simple workaround, Linux 101:\n+A workaround is to make sure that `node` binary exists in the `PATH`:\n```bash\nsudo ln -s /usr/bin/nodejs /usr/local/bin/node\n```\n+Alternatively the `--exec nodejs` option can be used.\n+\nFedora and Ubuntu pakage node as nodejs, because node.dpkg is\n> Description-en: Amateur Packet Radio Node program\n",
        "date": "18.12.2017 10:41:09",
        "repo": "remy/nodemon",
        "type": "docs",
        "chatgpt_zeroshot": "Update faq.md with workaround for Fedora using nodejs instead of node"
    },
    {
        "msg": "docs: remove duff link\n[skip ci]",
        "diff": "diff --git a/README.md b/README.md @@ -11,8 +11,6 @@ nodemon does **not** require *any* changes to your code or method of development\n[![NPM version](https://badge.fury.io/js/nodemon.svg)](https://npmjs.org/package/nodemon)\n[![Travis Status](https://travis-ci.org/remy/nodemon.svg?branch=master)](https://travis-ci.org/remy/nodemon) [![Backers on Open Collective](https://opencollective.com/nodemon/backers/badge.svg)](#backers) [![Sponsors on Open Collective](https://opencollective.com/nodemon/sponsors/badge.svg)](#sponsors)\n-<a href=\"https://app.codesponsor.io/link/wnz2te8CdfKZ8wMjGUpi8EZG/remy/nodemon\" rel=\"nofollow\" target=\"_blank\"><img src=\"https://app.codesponsor.io/embed/wnz2te8CdfKZ8wMjGUpi8EZG/remy/nodemon.svg\" style=\"width: 888px; height: 68px;\" alt=\"Sponsor\" /></a>\n-\n# Installation\nEither through cloning with git or by using [npm](http://npmjs.org) (the recommended way):\n",
        "date": "22.12.2017 22:52:48",
        "repo": "remy/nodemon",
        "type": "docs",
        "chatgpt_zeroshot": "Remove sponsor link from README.md"
    },
    {
        "msg": "docs: add context to fences",
        "diff": "diff --git a/README.md b/README.md @@ -15,7 +15,7 @@ nodemon does **not** require *any* changes to your code or method of development\nEither through cloning with git or by using [npm](http://npmjs.org) (the recommended way):\n-```\n+```bash\nnpm install -g nodemon\n```\n@@ -23,7 +23,7 @@ And nodemon will be installed globally to your system path.\nYou can also install nodemon as a developement dependency:\n-```\n+```bash\nnpm install --save-dev nodemon\n```\n@@ -33,19 +33,19 @@ With a local installation, nodemon will not be available in your system path. In\nnodemon wraps your application, so you can pass all the arguments you would normally pass to your app:\n-```\n+```bash\nnodemon [your node app]\n```\nFor CLI options, use the `-h` (or `--help`) argument:\n-```\n+```bash\nnodemon -h\n```\nUsing nodemon is simple, if my application accepted a host and port as the arguments, I would start it as so:\n-```\n+```bash\nnodemon ./server.js localhost 8080\n```\n@@ -55,7 +55,7 @@ If no script is given, nodemon will test for a `package.json` file and if found,\nYou can also pass the `inspect` flag to node through the command line as you would normally:\n-```\n+```bash\nnodemon --inspect ./server.js 80\n```\n@@ -129,7 +129,7 @@ Please see [doc/requireable.md](doc/requireable.md)\nnodemon can also be used to execute and monitor other programs. nodemon will read the file extension of the script being run and monitor that extension instead of .js if there's no `nodemon.json`:\n-```\n+```bash\nnodemon --exec \"python -v\" ./app.py\n```\n@@ -151,7 +151,7 @@ To add support for nodemon to know about the .pl extension (for Perl), the nodem\nNow running the following, nodemon will know to use `perl` as the executable:\n-```\n+```bash\nnodemon script.pl\n```\n@@ -161,7 +161,7 @@ It's generally recommended to use the global `nodemon.json` to add your own `exe\nBy default nodemon monitors the current working directory. If you want to take control of that option, use the `--watch` option to add specific paths:\n-```\n+```bash\nnodemon --watch app --watch libs app/server.js\n```\n@@ -173,7 +173,7 @@ Don't use unix globbing to pass multiple directories, e.g `--watch ./lib/*`, it\nBy default, nodemon looks for files with the `.js`, `.mjs`, `.coffee`, `.litcoffee`, and `.json` extensions. If you use the `--exec` option and monitor `app.py` nodemon will monitor files with the extension of `.py`. However, you can specify your own list with the `-e` (or `--ext`) switch like so:\n-```\n+```bash\nnodemon -e js,jade\n```\n@@ -185,19 +185,19 @@ By default, nodemon will only restart when a `.js` JavaScript file changes. In s\nThis can be done via the command line:\n-```\n+```bash\nnodemon --ignore lib/ --ignore tests/\n```\nOr specific files can be ignored:\n-```\n+```bash\nnodemon --ignore lib/app.js\n```\nPatterns can also be ignored (but be sure to quote the arguments):\n-```\n+```bash\nnodemon --ignore 'lib/*.js'\n```\n@@ -209,7 +209,7 @@ In some networked environments (such as a container running nodemon reading acro\nVia the CLI, use either `--legacy-watch` or `-L` for short:\n-```\n+```bash\nnodemon -L\n```\n@@ -221,19 +221,19 @@ In some situations, you may want to wait until a number of files have changed. T\nTo add an extra throttle, or delay restarting, use the `--delay` command:\n-```\n+```bash\nnodemon --delay 10 server.js\n```\nFor more precision, milliseconds can be specified. Either as a float:\n-```\n+```bash\nnodemon --delay 2.5 server.js\n```\nOr using the time specifier (ms):\n-```\n+```bash\nnodemon --delay 2500ms server.js\n```\n@@ -241,7 +241,7 @@ The delay figure is number of seconds (or milliseconds, if specified) to delay b\nIf you are setting this value in `nodemon.json`, the value will always be interpretted in milliseconds. E.g., the following are equivalent:\n-```\n+```bash\nnodemon --delay 2.5\n{\n",
        "date": "09.01.2018 18:14:16",
        "repo": "remy/nodemon",
        "type": "docs",
        "chatgpt_zeroshot": "Update README.md with code block language specifier for bash commands"
    },
    {
        "msg": "docs: typo\n[skip ci]",
        "diff": "diff --git a/README.md b/README.md @@ -336,7 +336,7 @@ Support this project by becoming a sponsor. Your logo will show up here with a l\n[<img src=\"https://nodemon.io/sparkpost.svg\" width=\"200\">](https://sparkpo.st/nodemon)\n-[<img src=\"https://nodemon.io/minmax.png\" width=\"200\">](https://https://mixmax.com)\n+[<img src=\"https://nodemon.io/mixmax.png\" width=\"200\">](https://https://mixmax.com)\n# License\n",
        "date": "02.02.2018 11:36:39",
        "repo": "remy/nodemon",
        "type": "docs",
        "chatgpt_zeroshot": "Fix broken link to Mixmax logo in README"
    },
    {
        "msg": "docs: use consistent ext example\n[skip ci]\nRef",
        "diff": "diff --git a/doc/sample-nodemon.md b/doc/sample-nodemon.md @@ -22,7 +22,7 @@ Here is an example (of a contrived) `nodemon.json` file:\n\"env\": {\n\"NODE_ENV\": \"development\"\n},\n- \"ext\": \"js json\"\n+ \"ext\": \"js,json\"\n}\nNote that the `ignore` used is nodemon's default ignore rule. The complete defaults can be seen here: [defaults.js](https://github.com/remy/nodemon/blob/master/lib/config/defaults.js).\n",
        "date": "04.04.2018 09:15:08",
        "repo": "remy/nodemon",
        "type": "docs",
        "chatgpt_zeroshot": "Update nodemon.json to include comma in ext field"
    },
    {
        "msg": "docs: typo on string &\n[skip ci]",
        "diff": "diff --git a/README.md b/README.md @@ -21,7 +21,7 @@ npm install -g nodemon\nAnd nodemon will be installed globally to your system path.\n-You can also install nodemon as a developement dependency:\n+You can also install nodemon as a development dependency:\n```bash\nnpm install --save-dev nodemon\n@@ -131,7 +131,7 @@ Please see [doc/events.md](doc/events.md#Using_nodemon_as_child_process)\n## Running non-node scripts\n-nodemon can also be used to execute and monitor other programs. nodemon will read the file extension of the script being run and monitor that extension instead of .js if there's no `nodemon.json`:\n+nodemon can also be used to execute and monitor other programs. nodemon will read the file extension of the script being run and monitor that extension instead of `.js` if there's no `nodemon.json`:\n```bash\nnodemon --exec \"python -v\" ./app.py\n@@ -143,7 +143,7 @@ Now nodemon will run `app.py` with python in verbose mode (note that if you're n\nUsing the `nodemon.json` config file, you can define your own default executables using the `execMap` property. This is particularly useful if you're working with a language that isn't supported by default by nodemon.\n-To add support for nodemon to know about the .pl extension (for Perl), the nodemon.json file would add:\n+To add support for nodemon to know about the `.pl` extension (for Perl), the `nodemon.json` file would add:\n```json\n{\n@@ -181,7 +181,7 @@ By default, nodemon looks for files with the `.js`, `.mjs`, `.coffee`, `.litcoff\nnodemon -e js,jade\n```\n-Now nodemon will restart on any changes to files in the directory (or subdirectories) with the extensions .js, .jade.\n+Now nodemon will restart on any changes to files in the directory (or subdirectories) with the extensions `.js`, `.jade`.\n## Ignoring files\n@@ -243,7 +243,7 @@ nodemon --delay 2500ms server.js\nThe delay figure is number of seconds (or milliseconds, if specified) to delay before restarting. So nodemon will only restart your app the given number of seconds after the *last* file change.\n-If you are setting this value in `nodemon.json`, the value will always be interpretted in milliseconds. E.g., the following are equivalent:\n+If you are setting this value in `nodemon.json`, the value will always be interpreted in milliseconds. E.g., the following are equivalent:\n```bash\nnodemon --delay 2.5\n",
        "date": "01.07.2018 03:27:45",
        "repo": "remy/nodemon",
        "type": "docs",
        "chatgpt_zeroshot": "Fix typos and update code examples in README.md"
    },
    {
        "msg": "docs: add to faq\nRef\nRef\n[skip ci]",
        "diff": "diff --git a/faq.md b/faq.md @@ -226,6 +226,28 @@ Try the following command on terminal:\necho fs.inotify.max_user_watches=582222 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p\n```\n+## \"Port in use\" with --inspect flag and docker\n+\n+The workaround is to use [kill-port](https://github.com/tiaanduplessis/kill-port) to close off the debugger port, used similarly to:\n+\n+```bash\n+nodemon --delay 80ms --exec 'kill-port -k 9228/tcp; node --inspect=0.0.0.0:9228 ./app/http.js'\n+```\n+\n+[Original suggestion here](https://github.com/remy/nodemon/issues/1050#issuecomment-323680697) and [addition information here](https://github.com/remy/nodemon/issues/1346#issuecomment-401218386).\n+\n+## Windows: nodemon keeps restarting without changes\n+\n+This _might_ be related to a Microsoft Windows release pertaining to the OS and breaking `fsevents` module (which is used by [chokidar](https://github.com/paulmillr/chokidar) - the underlying watch package).\n+\n+The workaround is to run the following command:\n+\n+```bash\n+fsutil behavior set disablelastaccess 1\n+```\n+\n+[Futher reading thread](https://github.com/remy/nodemon/issues/1354)\n+\n## Error: Cannot find module 'internal/util/types'\nIf you see the error `Cannot find module 'internal/util/types'`, the error is solved with a clean npm cache and trying to reinstall the dependency you're working with.\n",
        "date": "10.07.2018 18:37:59",
        "repo": "remy/nodemon",
        "type": "docs",
        "chatgpt_zeroshot": "Add workarounds for \"Port in use\" issue with --inspect flag and docker, and Windows nodemon restarting without changes."
    },
    {
        "msg": "docs: change README.md to make the intro more concise\nchange README.md intro to clarify and remove redundant text\n[skip ci]",
        "diff": "diff --git a/README.md b/README.md # nodemon\n-For use during development of a node.js based application.\n+nodemon is a tool that helps develop node.js based applications by automatically restarting the node application when file changes in the directory are detected.\n-nodemon will watch the files in the directory in which nodemon was started, and if any files change, nodemon will automatically restart your node application.\n-\n-nodemon does **not** require *any* changes to your code or method of development. nodemon wraps your node application and keeps an eye on any files that have changed. Remember that nodemon is a replacement wrapper for `node`, think of it as replacing the word \"node\" on the command line when you run your script.\n+nodemon does **not** require *any* additional changes to your code or method of development. nodemon is a replacement wrapper for `node`, to use `nodemon` replace the word `node` on the command line when executing your script.\n[![NPM version](https://badge.fury.io/js/nodemon.svg)](https://npmjs.org/package/nodemon)\n[![Travis Status](https://travis-ci.org/remy/nodemon.svg?branch=master)](https://travis-ci.org/remy/nodemon) [![Backers on Open Collective](https://opencollective.com/nodemon/backers/badge.svg)](#backers) [![Sponsors on Open Collective](https://opencollective.com/nodemon/sponsors/badge.svg)](#sponsors)\n",
        "date": "10.07.2018 10:47:15",
        "repo": "remy/nodemon",
        "type": "docs",
        "chatgpt_zeroshot": "Update nodemon description and usage instructions"
    },
    {
        "msg": "docs: faq typo fix",
        "diff": "diff --git a/faq.md b/faq.md @@ -265,7 +265,7 @@ Otherwise see [issue #1124](https://github.com/remy/nodemon/issues/1124) for fur\n## No automatic restart when using Docker volumes [issue #419](https://github.com/remy/nodemon/issues/419#issuecomment-391244911)\n-Some Node.js Docker images do not seem to have the full suite of filtesystem process utilities that allow `nodemon` to restart automatically when the code in a mounted volume changes. To handle this, and enable automatic restarts without using legacy mode, you can install the [procps](http://procps.sourceforge.net) package.\n+Some Node.js Docker images do not seem to have the full suite of filesystem process utilities that allow `nodemon` to restart automatically when the code in a mounted volume changes. To handle this, and enable automatic restarts without using legacy mode, you can install the [procps](http://procps.sourceforge.net) package.\nHere's an example snippet of a Dockerfile:\n",
        "date": "11.07.2018 14:47:05",
        "repo": "remy/nodemon",
        "type": "docs",
        "chatgpt_zeroshot": "Fix typo in faq.md and update Docker volumes explanation"
    },
    {
        "msg": "docs: add how to clear the console\nSince it's repeatedly asked about.\n[skip ci]",
        "diff": "diff --git a/faq.md b/faq.md @@ -4,6 +4,20 @@ This is being added to as common issues occur on the [issues](http://github.com/\nThis is a working document, and if it makes sense, I'll take pull requests to help make it better.\n+# How to clear the console on restart\n+\n+Rather than being a(nother) feature in nodemon, and as per the [design principles](https://github.com/remy/nodemon#design-principles) you can clear the console using nodemon's existing architecture.\n+\n+In your `nodemon.json` (or in your `package.json`) you can include the follow event handler to always clear the console when nodemon starts:\n+\n+```json\n+{\n+ \"events\": {\n+ \"start\": \"node -e console.clear()\"\n+ }\n+}\n+```\n+\n# nodemon doesn't work with my REPL\nCreate an nodemon.json file with the setting:\n",
        "date": "22.11.2018 11:43:14",
        "repo": "remy/nodemon",
        "type": "docs",
        "chatgpt_zeroshot": "Add instructions on how to clear the console on restart using nodemon's existing architecture"
    },
    {
        "msg": "docs: how to watch .env files\n[skip ci]",
        "diff": "diff --git a/faq.md b/faq.md @@ -18,6 +18,18 @@ In your `nodemon.json` (or in your `package.json`) you can include the follow ev\n}\n```\n+# nodemon doesn't restart on .env change\n+\n+This is an edge case with how nodemon watches files. This is because nodemon doesn't know if `.env` is a hidden file with no extension or a `*.env` without a filename.\n+\n+Nonetheless, to trigger a change on `.env` (or similar files like `.bash_profile`), you need to explicitly tell nodemon to watch the file.\n+\n+However, now nodemon will *only* watch the `.env` file, so you need to add to what nodemon is watching, i.e. tell nodemon to _also_ watch the current working directory:\n+\n+```bash\n+$ nodemon --watch .env --watch app app/index.js\n+```\n+\n# nodemon doesn't work with my REPL\nCreate an nodemon.json file with the setting:\n",
        "date": "28.11.2018 09:31:44",
        "repo": "remy/nodemon",
        "type": "docs",
        "chatgpt_zeroshot": "Fix nodemon not restarting on .env change"
    },
    {
        "msg": "docs: Example of how to allow a graceful reload\n[skip ci]",
        "diff": "diff --git a/README.md b/README.md @@ -251,6 +251,38 @@ nodemon --delay 2.5\n}\n```\n+## Gracefully reloading down your script\n+\n+It is possible to have nodemon send any signal that you specify to your application.\n+\n+```bash\n+nodemon --signal SIGHUP server.js\n+```\n+\n+Your application can handle the signal as follows.\n+\n+```js\n+process.once(\"SIGHUP\", function () {\n+ reloadSomeConfiguration();\n+})\n+```\n+\n+Please note that nodemon will send this signal to every process in the process tree.\n+\n+If you are using `cluster`, then each workers (as well as the master) will receive the signal. If you wish to terminate all workers on receiving a `SIGHUP`, a common pattern is to catch the `SIGHUP` in the master, and forward `SIGTERM` to all workers, while ensuring that all workers ignore `SIGHUP`.\n+\n+```js\n+if (cluster.isMaster) {\n+ process.on(\"SIGHUP\", function () {\n+ for (const worker of Object.values(cluster.workers)) {\n+ worker.process.kill(\"SIGTERM\");\n+ }\n+ });\n+} else {\n+ process.on(\"SIGHUP\", function() {})\n+}\n+```\n+\n## Controlling shutdown of your script\nnodemon sends a kill signal to your application when it sees a file update. If you need to clean up on shutdown inside your script you can capture the kill signal and handle it yourself.\n",
        "date": "04.12.2018 19:40:32",
        "repo": "remy/nodemon",
        "type": "docs",
        "chatgpt_zeroshot": "Add instructions for gracefully reloading script and controlling shutdown"
    },
    {
        "msg": "docs: update clear console advice\n[skip ci]",
        "diff": "diff --git a/faq.md b/faq.md @@ -13,11 +13,13 @@ In your `nodemon.json` (or in your `package.json`) you can include the follow ev\n```json\n{\n\"events\": {\n- \"start\": \"node -e 'console.clear()'\"\n+ \"start\": \"cls || clear\"\n}\n}\n```\n+Note that on Windows, this will clear the scroll buffer too. If you try to use node to clear the screen, you may have a race condition between the boot time of your process and the start event. This method should be the fastest.\n+\n# nodemon doesn't restart on .env change\nThis is an edge case with how nodemon watches files. This is because nodemon doesn't know if `.env` is a hidden file with no extension or a `*.env` without a filename.\n",
        "date": "06.02.2019 15:13:00",
        "repo": "remy/nodemon",
        "type": "docs",
        "chatgpt_zeroshot": "Update start event command in nodemon.json to clear screen buffer on Windows"
    },
    {
        "msg": "docs: README Grammar\n`less` is used for singular mass nouns\n`fewer` when discussing countable things",
        "diff": "diff --git a/README.md b/README.md @@ -347,9 +347,9 @@ The answer is simple, but possibly frustrating. I'm not saying (how I pronounce\n## Design principles\n-- Less flags is better\n+- Fewer flags is better\n- Works across all platforms\n-- Less features\n+- Fewer features\n- Let individuals build on top of nodemon\n- Offer all CLI functionality as an API\n- Contributions must have and pass tests\n",
        "date": "03.09.2019 11:53:51",
        "repo": "remy/nodemon",
        "type": "docs",
        "chatgpt_zeroshot": "Refactor README.md to use \"Fewer\" instead of \"Less\" for consistency."
    },
    {
        "msg": "docs: Fix run-on sentence",
        "diff": "diff --git a/README.md b/README.md nodemon is a tool that helps develop node.js based applications by automatically restarting the node application when file changes in the directory are detected.\n-nodemon does **not** require *any* additional changes to your code or method of development. nodemon is a replacement wrapper for `node`, to use `nodemon` replace the word `node` on the command line when executing your script.\n+nodemon does **not** require *any* additional changes to your code or method of development. nodemon is a replacement wrapper for `node`. To use `nodemon`, replace the word `node` on the command line when executing your script.\n[![NPM version](https://badge.fury.io/js/nodemon.svg)](https://npmjs.org/package/nodemon)\n[![Travis Status](https://travis-ci.org/remy/nodemon.svg?branch=master)](https://travis-ci.org/remy/nodemon) [![Backers on Open Collective](https://opencollective.com/nodemon/backers/badge.svg)](#backers) [![Sponsors on Open Collective](https://opencollective.com/nodemon/sponsors/badge.svg)](#sponsors)\n",
        "date": "02.05.2020 20:01:36",
        "repo": "remy/nodemon",
        "type": "docs",
        "chatgpt_zeroshot": "Update README.md to clarify how to use nodemon"
    },
    {
        "msg": "docs: Remove duplicate info about using the `main`",
        "diff": "diff --git a/README.md b/README.md @@ -51,15 +51,13 @@ nodemon ./server.js localhost 8080\nAny output from this script is prefixed with `[nodemon]`, otherwise all output from your application, errors included, will be echoed out as expected.\n-If no script is given, nodemon will test for a `package.json` file and if found, will run the file associated with the *main* property ([ref](https://github.com/remy/nodemon/issues/14)).\n-\nYou can also pass the `inspect` flag to node through the command line as you would normally:\n```bash\nnodemon --inspect ./server.js 80\n```\n-If you have a `package.json` file for your app, you can omit the main script entirely and nodemon will read the `package.json` for the `main` property and use that value as the app.\n+If you have a `package.json` file for your app, you can omit the main script entirely and nodemon will read the `package.json` for the `main` property and use that value as the app ([ref](https://github.com/remy/nodemon/issues/14)).\nnodemon will also search for the `scripts.start` property in `package.json` (as of nodemon 1.1.x).\n",
        "date": "11.01.2021 13:07:06",
        "repo": "remy/nodemon",
        "type": "docs",
        "chatgpt_zeroshot": "Refactor nodemon script handling in README.md"
    },
    {
        "msg": "docs: new sponsors\n[skip ci]",
        "diff": "diff --git a/website/index.html b/website/index.html <p><a href=\"https://www.casinoenvivo.com/blackjack\"><img\nsrc=\"https://images.opencollective.com/casino-en-vivo/1340a53/logo/256.png\" style=\"margin-top:20px\"\nwidth=\"120\"></a></p>\n+\n+ <p><a href=\"https://kasynohex.com/\"><img\n+ src=\"https://images.opencollective.com/kasynohex-com/b25daf6/logo/256.png\" style=\"margin-top:20px\"\n+ width=\"120\"></a></p>\n+\n+ <p><a href=\"https://netticasinohex.com/\"><img\n+ src=\"https://images.opencollective.com/netticasinohex-com/71d7417/logo/256.png\" style=\"margin-top:20px\"\n+ width=\"120\"></a></p>\n+\n+ <p><a href=\"https://aussiecasinohex.com/\"><img\n+ src=\"https://images.opencollective.com/aussiecasinohex/923df37/logo/256.png\" style=\"margin-top:20px\"\n+ width=\"120\"></a></p>\n</div>\n</div>\n</main>\n",
        "date": "09.03.2021 17:25:10",
        "repo": "remy/nodemon",
        "type": "docs",
        "chatgpt_zeroshot": "Add logos and links for new casino websites."
    },
    {
        "msg": "docs: readme dance",
        "diff": "diff --git a/README.md b/README.md @@ -374,20 +374,15 @@ Support this project by becoming a sponsor. Your logo will show up here with a l\n<a href=\"https://www.najlepszeplatformyforex.pl/blog/broker-xtb/\"><img style=\"margin: 12px; float: left\" src=\"https://user-images.githubusercontent.com/13700/106011732-a72b2580-60b2-11eb-9d6a-24bf958de95d.png\" width=\"120\"></a>\n<a href=\"https://www.auscasinos.com/new\"><img style=\"margin: 12px; float: left\" src=\"https://images.opencollective.com/auscasinos/8df0f47/logo/256.png\" style=\"margin: 12px; margin-top:20px\" width=\"120\"></a>\n<a href=\"https://www.casinoenvivo.com/blackjack\"><img style=\"margin: 12px; float: left\" src=\"https://images.opencollective.com/casino-en-vivo/1340a53/logo/256.png\" style=\"margin: 12px; margin-top:20px\" width=\"120\"></a>\n-\n-\n<a href=\"https://kasynohex.com/\"><img\nsrc=\"https://images.opencollective.com/kasynohex-com/b25daf6/logo/256.png\" style=\"float: left; margin:12px\"\nwidth=\"120\"></a>\n-\n<a href=\"https://netticasinohex.com/\"><img\nsrc=\"https://images.opencollective.com/netticasinohex-com/71d7417/logo/256.png\" style=\"float: left; margin:12px\"\nwidth=\"120\"></a>\n-\n<a href=\"https://aussiecasinohex.com/\"><img\nsrc=\"https://images.opencollective.com/aussiecasinohex/923df37/logo/256.png\" style=\"float: left; margin:12px\"\nwidth=\"120\"></a>\n-\n</div>\n# License\n",
        "date": "09.03.2021 17:43:03",
        "repo": "remy/nodemon",
        "type": "docs",
        "chatgpt_zeroshot": "Remove sponsor logos from README.md"
    },
    {
        "msg": "docs: delay option as number instead of string, in readme\n[skip ci]",
        "diff": "diff --git a/README.md b/README.md @@ -110,7 +110,7 @@ Specify the config in the same format as you would for a config file but under `\n\"...\": \"... other standard package.json values\",\n\"nodemonConfig\": {\n\"ignore\": [\"test/*\", \"docs/*\"],\n- \"delay\": \"2500\"\n+ \"delay\": 2500\n}\n}\n```\n@@ -247,7 +247,7 @@ If you are setting this value in `nodemon.json`, the value will always be interp\nnodemon --delay 2.5\n{\n- \"delay\": \"2500\"\n+ \"delay\": 2500\n}\n```\n",
        "date": "31.03.2021 11:39:58",
        "repo": "remy/nodemon",
        "type": "docs",
        "chatgpt_zeroshot": "Refactor delay value in nodemonConfig to be a number instead of a string"
    },
    {
        "msg": "docs(installation): Minor Improvements",
        "diff": "diff --git a/README.md b/README.md @@ -16,7 +16,7 @@ nodemon does **not** require *any* additional changes to your code or method of\nEither through cloning with git or by using [npm](http://npmjs.org) (the recommended way):\n```bash\n-npm install -g nodemon\n+npm install -g nodemon # or using yarn: yarn global add nodemon\n```\nAnd nodemon will be installed globally to your system path.\n@@ -24,10 +24,10 @@ And nodemon will be installed globally to your system path.\nYou can also install nodemon as a development dependency:\n```bash\n-npm install --save-dev nodemon\n+npm install --save-dev nodemon # or using yarn: yarn add nodemon -D\n```\n-With a local installation, nodemon will not be available in your system path. Instead, the local installation of nodemon can be run by calling it from within an npm script (such as `npm start`) or using `npx nodemon`.\n+With a local installation, nodemon will not be available in your system path or you can't use it directly from the command line. Instead, the local installation of nodemon can be run by calling it from within an npm script (such as `npm start`) or using `npx nodemon`.\n# Usage\n",
        "date": "12.08.2021 08:50:49",
        "repo": "remy/nodemon",
        "type": "docs",
        "chatgpt_zeroshot": "Update README.md with instructions for local installation of nodemon"
    },
    {
        "msg": "docs: Fix typo in faq.md\nOnly fixed a small typo (pa**c**kage) in the `faq.md` file.",
        "diff": "diff --git a/faq.md b/faq.md @@ -153,7 +153,7 @@ sudo ln -s /usr/bin/nodejs /usr/local/bin/node\nAlternatively the `--exec nodejs` option can be used.\n-Fedora and Ubuntu pakage node as nodejs, because node.dpkg is\n+Fedora and Ubuntu package node as nodejs, because node.dpkg is\n> Description-en: Amateur Packet Radio Node program\n> The node program accepts TCP/IP and packet radio network connections and\n",
        "date": "17.10.2021 15:15:33",
        "repo": "remy/nodemon",
        "type": "docs",
        "chatgpt_zeroshot": "Fix typo in package name for Fedora and Ubuntu"
    },
    {
        "msg": "docs: Fix typo in faq.md\n[skip ci]",
        "diff": "diff --git a/faq.md b/faq.md @@ -96,7 +96,7 @@ nodemon (from 1.4.2 onwards) uses [Chokidar](https://www.npmjs.com/package/choki\nIf you find your files aren't being monitored, either nodemon isn't restarting, or it reports that zero files are being watched, then you may need the polling mode.\n-To enable polling use the the legacy flag either via the terminal:\n+To enable polling use the legacy flag either via the terminal:\n```shell\n$ nodemon --legacy-watch\n",
        "date": "18.11.2021 13:49:45",
        "repo": "remy/nodemon",
        "type": "docs",
        "chatgpt_zeroshot": "Fix typo in faq.md regarding legacy flag usage"
    },
    {
        "msg": "docs: add note to faq with example showing how to watch any file extension\n[skip ci]",
        "diff": "diff --git a/faq.md b/faq.md @@ -323,3 +323,11 @@ It's a security restriction of the Windows PowerShell.\n1. Open up a powershell command window (open it as administrator)\n2. To check out current restrictions type \"Get-ExecutionPolicy\"\n3. Enable powershell by typing \"Set-ExecutionPolicy remotesigned\"\n+\n+## How can I watch all file types in a folder?\n+\n+To watch all file types, use `'*'`:\n+\n+```bash\n+nodemon --ext '*' --watch public --exec 'python -m SimpleHTTPServer'\n+```\n",
        "date": "29.04.2022 12:04:38",
        "repo": "remy/nodemon",
        "type": "docs",
        "chatgpt_zeroshot": "Add instructions for watching all file types in a folder"
    },
    {
        "msg": "docs: add syntax highlighting to sample-nodemon.md\n[skip ci]",
        "diff": "diff --git a/doc/sample-nodemon.md b/doc/sample-nodemon.md Here is an example (of a contrived) `nodemon.json` file:\n+```json\n{\n\"restartable\": \"rs\",\n\"ignore\": [\n@@ -24,5 +25,6 @@ Here is an example (of a contrived) `nodemon.json` file:\n},\n\"ext\": \"js,json\"\n}\n+```\nNote that the `ignore` used is nodemon's default ignore rule. The complete defaults can be seen here: [defaults.js](https://github.com/remy/nodemon/blob/master/lib/config/defaults.js).\n",
        "date": "29.04.2022 11:07:43",
        "repo": "remy/nodemon",
        "type": "docs",
        "chatgpt_zeroshot": "Add example `nodemon.json` file to documentation"
    },
    {
        "msg": "docs: fix bug_report.md\nRemove backslash which throws an error (tested on OSX fish and CentOS bash)",
        "diff": "diff --git a/.github/ISSUE_TEMPLATE/bug_report.md b/.github/ISSUE_TEMPLATE/bug_report.md @@ -14,7 +14,7 @@ assignees: ''\ngulp, grunt, webpack, etc. Thank you so much <3\n-->\n-- Versions: <!-- run this: node -e 'console.log(`node@${process.version}, ${process.platform}@${require(\\\"os\\\").release()}`)' -->\n+- Versions: <!-- run this: node -e 'console.log(`node@${process.version}, ${process.platform}@${require(\"os\").release()}`)' -->\n- `nodemon -v`:\n- Operating system/terminal environment (powershell, gitshell, etc):\n- Using Docker? What image:\n",
        "date": "23.06.2022 17:47:34",
        "repo": "remy/nodemon",
        "type": "docs",
        "chatgpt_zeroshot": "Fix typo in bug report template"
    },
    {
        "msg": "docs: Update index.html",
        "diff": "diff --git a/website/index.html b/website/index.html </header>\n<main>\n- <p>Nodemon is a utility <strong>depended on by over 1.5 million projects</strong>, that will monitor for any\n+ <p>Nodemon is a utility <strong>depended on about 3 million projects</strong>, that will monitor for any\nchanges in your source and automatically restart your server.\nPerfect for development.</p>\n",
        "date": "12.07.2022 08:45:52",
        "repo": "remy/nodemon",
        "type": "docs",
        "chatgpt_zeroshot": "Update number of projects depending on Nodemon to about 3 million."
    },
    {
        "msg": "docs: Update documentation about support for unix globbing\n[skip ci]",
        "diff": "diff --git a/README.md b/README.md @@ -169,7 +169,7 @@ nodemon --watch app --watch libs app/server.js\nNow nodemon will only restart if there are changes in the `./app` or `./libs` directory. By default nodemon will traverse sub-directories, so there's no need in explicitly including sub-directories.\n-Don't use unix globbing to pass multiple directories, e.g `--watch ./lib/*`, it won't work. You need a `--watch` flag per directory watched.\n+Nodemon also supports unix globbing, e.g `--watch './lib/*'`. The globbing pattern must be quoted.\n## Specifying extension watch list\n",
        "date": "12.07.2022 08:52:14",
        "repo": "remy/nodemon",
        "type": "docs",
        "chatgpt_zeroshot": "Improve nodemon watch functionality and support unix globbing"
    },
    {
        "msg": "docs: add important note about ignore rules\nFixes",
        "diff": "diff --git a/README.md b/README.md @@ -86,7 +86,7 @@ A config file can take any of the command line arguments as JSON key values, for\n```json\n{\n\"verbose\": true,\n- \"ignore\": [\"*.test.js\", \"fixtures/*\"],\n+ \"ignore\": [\"*.test.js\", \"**/fixtures/**\"],\n\"execMap\": {\n\"rb\": \"ruby\",\n\"pde\": \"processing --sketch={{pwd}} --run\"\n@@ -109,7 +109,7 @@ Specify the config in the same format as you would for a config file but under `\n\"homepage\": \"http://nodemon.io\",\n\"...\": \"... other standard package.json values\",\n\"nodemonConfig\": {\n- \"ignore\": [\"test/*\", \"docs/*\"],\n+ \"ignore\": [\"**/test/**\", \"**/docs/**\"],\n\"delay\": 2500\n}\n}\n@@ -203,6 +203,8 @@ Patterns can also be ignored (but be sure to quote the arguments):\nnodemon --ignore 'lib/*.js'\n```\n+**Important** the ignore rules are patterns matched to the full absolute path, and this determines how many files are monitored. If using a wild card glob pattern, it needs to be used as `**` or omitted entirely. For example, `nodemon --ignore '**/test/**'` will work, whereas `--ignore '*/test/*'` will not.\n+\nNote that by default, nodemon will ignore the `.git`, `node_modules`, `bower_components`, `.nyc_output`, `coverage` and `.sass-cache` directories and *add* your ignored patterns to the list. If you want to indeed watch a directory like `node_modules`, you need to [override the underlying default ignore rules](https://github.com/remy/nodemon/blob/master/faq.md#overriding-the-underlying-default-ignore-rules).\n## Application isn't restarting\n",
        "date": "16.08.2022 09:20:43",
        "repo": "remy/nodemon",
        "type": "docs",
        "chatgpt_zeroshot": "Update ignore patterns in config files and add important note about using wild card glob patterns."
    },
    {
        "msg": "docs: added link on banner\n[skip ci]",
        "diff": "diff --git a/README.md b/README.md <p align=\"center\">\n- <img src=\"https://user-images.githubusercontent.com/13700/35731649-652807e8-080e-11e8-88fd-1b2f6d553b2d.png\" alt=\"Nodemon Logo\">\n+ <a href=\"https://nodemon.io/\"><img src=\"https://user-images.githubusercontent.com/13700/35731649-652807e8-080e-11e8-88fd-1b2f6d553b2d.png\" alt=\"Nodemon Logo\"></a>\n</p>\n# nodemon\n",
        "date": "16.08.2022 13:53:22",
        "repo": "remy/nodemon",
        "type": "docs",
        "chatgpt_zeroshot": "Add link to Nodemon website in README.md"
    },
    {
        "msg": "docs: add workaround for inspect problem to faq.md\n[skip ci]",
        "diff": "diff --git a/faq.md b/faq.md @@ -331,3 +331,45 @@ To watch all file types, use `'*'`:\n```bash\nnodemon --ext '*' --watch public --exec 'python -m SimpleHTTPServer'\n```\n+\n+## Workaround for when --inspect flag is passed and the old process doesn't finish before starting a new process\n+\n+Based on [this issue](https://github.com/remy/nodemon/issues/2056).\n+\n+Sometimes when using the `--inspect` flag, nodemon will try to start the a process before the old process is finished.\n+\n+This will cause an error trying to up the new process because of the debugger service:\n+\n+```\n+[0] [nodemon] restarting due to changes...\n+[0] [nodemon] starting `node --inspect ./main/index.js`\n+[0] Starting inspector on 127.0.0.1:9229 failed: address already in use\n+```\n+\n+Your application will likely be running the old version code if you see that message, and you will need to stop the app and manually start it again to run the app with the newer code version.\n+\n+A common cause for this is when graceful shutdowns are doing async tasks, i.e:\n+\n+```\n+process.once('SIGUSR2', async () => {\n+ await db.disconnect()\n+})\n+```\n+\n+Simply removing the `await` keyword would likely fix the issue.\n+\n+If even after that you still running into that problem, there's a workaround to force kill the debugger whenever nodemon triggers a restart.\n+\n+You can create a `nodemon.json` file at the project root and add the following config:\n+\n+```\n+{\n+ \"events\": {\n+ \"restart\": \"sh -c 'lsof -i :${PORT:-9229} -t | xargs kill'\"\n+ }\n+}\n+```\n+\n+This will run a shell command to kill the process running on the PORT 9229 (default node debug port) whenever nodemon triggers a restart.\n+\n+It may fail sometimes, but it makes the hot reload works partially.\n",
        "date": "16.09.2022 15:25:49",
        "repo": "remy/nodemon",
        "type": "docs",
        "chatgpt_zeroshot": "Fix issue with nodemon --inspect flag causing new process to start before old process finishes"
    },
    {
        "msg": "docs: Adding preact/compat note to the README",
        "diff": "diff --git a/README.md b/README.md @@ -95,6 +95,17 @@ render(<App />, document.body);\n}\n```\n+`preact/compat` is our compatibility layer that allows you to leverage the many libraries of the React ecosystem and use them with Preact. If this is something you'd like to use with WMR you can add an `alias` section as well to your `package.json`:\n+\n+```json\n+{\n+ \"alias\": {\n+ \"react\": \"preact/compat\",\n+ \"react-dom\": \"preact/compat\"\n+ }\n+}\n+```\n+\n**5.** You're all set! As an extra step, if you'd like WMR to prerender your application to static HTML during production builds, replace `render()` with [preact-iso](https://www.npmjs.com/package/preact-iso):\n```diff\n",
        "date": "22.12.2020 02:21:18",
        "repo": "preactjs/wmr",
        "type": "docs",
        "chatgpt_zeroshot": "Add preact/compat compatibility layer and alias configuration for WMR."
    },
    {
        "msg": "docs: Adding table of packages to root readme",
        "diff": "diff --git a/README.md b/README.md @@ -40,6 +40,17 @@ or\n[Check out the docs to learn more](packages/wmr/README.md)\n+## Packages\n+\n+| Package | Version |\n+| ---------------------------------------------------------- | :--------------------------------------------------------------------------------------------------------------------------------------------------- |\n+| [wmr](packages/wmr) | [![wmr npm](https://img.shields.io/npm/v/wmr.svg)](https://npm.im/wmr) |\n+| [create-wmr](packages/create-wmr) | [![create-wmr npm](https://img.shields.io/npm/v/create-wmr.svg)](https://npm.im/create-wmr) |\n+| [@wmr-plugins/directory-import](packages/directory-plugin) | [![@wmr-plugins/directory-import npm](https://img.shields.io/npm/v/@wmr-plugins/directory-import.svg)](https://npm.im/@wmr-plugins/directory-import) |\n+| [@wmr-plugins/nomodule](packages/nomodule-plugin) | [![@wmr-plugins/nomodule npm](https://img.shields.io/npm/v/@wmr-plugins/nomodule.svg)](https://npm.im/@wmr-plugins/nomodule) |\n+| [@wmr-plugins/service-worker](packages/sw-plugin) | [![@wmr-plugins/service-worker npm](https://img.shields.io/npm/v/@wmr-plugins/service-worker.svg)](https://npm.im/@wmr-plugins/service-worker) |\n+| [preact-iso](packages/preact-iso) | [![preact-iso npm](https://img.shields.io/npm/v/preact-iso.svg)](https://npm.im/preact-iso) |\n+\n## Contributing\n```sh\n",
        "date": "25.02.2021 17:39:24",
        "repo": "preactjs/wmr",
        "type": "docs",
        "chatgpt_zeroshot": "Add package information to README.md"
    },
    {
        "msg": "docs: Adding descriptions to packages listed in root readme",
        "diff": "diff --git a/README.md b/README.md @@ -42,14 +42,14 @@ or\n## Packages\n-| Package | Version |\n-| ---------------------------------------------------------- | :--------------------------------------------------------------------------------------------------------------------------------------------------- |\n-| [wmr](packages/wmr) | [![wmr npm](https://img.shields.io/npm/v/wmr.svg)](https://npm.im/wmr) |\n-| [create-wmr](packages/create-wmr) | [![create-wmr npm](https://img.shields.io/npm/v/create-wmr.svg)](https://npm.im/create-wmr) |\n-| [@wmr-plugins/directory-import](packages/directory-plugin) | [![@wmr-plugins/directory-import npm](https://img.shields.io/npm/v/@wmr-plugins/directory-import.svg)](https://npm.im/@wmr-plugins/directory-import) |\n-| [@wmr-plugins/nomodule](packages/nomodule-plugin) | [![@wmr-plugins/nomodule npm](https://img.shields.io/npm/v/@wmr-plugins/nomodule.svg)](https://npm.im/@wmr-plugins/nomodule) |\n-| [@wmr-plugins/service-worker](packages/sw-plugin) | [![@wmr-plugins/service-worker npm](https://img.shields.io/npm/v/@wmr-plugins/service-worker.svg)](https://npm.im/@wmr-plugins/service-worker) |\n-| [preact-iso](packages/preact-iso) | [![preact-iso npm](https://img.shields.io/npm/v/preact-iso.svg)](https://npm.im/preact-iso) |\n+| Package | Description | Version |\n+| ---------------------------------------------------------- | :---------------------------------------------------------------- | :--------------------------------------------------------------------------------------------------------------------------------------------------- |\n+| [wmr](packages/wmr) | The tiny all-in-one development tool for modern web apps | [![wmr npm](https://img.shields.io/npm/v/wmr.svg)](https://npm.im/wmr) |\n+| [create-wmr](packages/create-wmr) | Create a new WMR project in seconds | [![create-wmr npm](https://img.shields.io/npm/v/create-wmr.svg)](https://npm.im/create-wmr) |\n+| [@wmr-plugins/directory-import](packages/directory-plugin) | Allows you to import multiple files in a single statement | [![@wmr-plugins/directory-import npm](https://img.shields.io/npm/v/@wmr-plugins/directory-import.svg)](https://npm.im/@wmr-plugins/directory-import) |\n+| [@wmr-plugins/nomodule](packages/nomodule-plugin) | Allows you to create legacy bundles alongside WMR's modern output | [![@wmr-plugins/nomodule npm](https://img.shields.io/npm/v/@wmr-plugins/nomodule.svg)](https://npm.im/@wmr-plugins/nomodule) |\n+| [@wmr-plugins/service-worker](packages/sw-plugin) | Allows you to add a service worker | [![@wmr-plugins/service-worker npm](https://img.shields.io/npm/v/@wmr-plugins/service-worker.svg)](https://npm.im/@wmr-plugins/service-worker) |\n+| [preact-iso](packages/preact-iso) | Isomorphic async tools for Preact | [![preact-iso npm](https://img.shields.io/npm/v/preact-iso.svg)](https://npm.im/preact-iso) |\n## Contributing\n",
        "date": "25.02.2021 19:39:31",
        "repo": "preactjs/wmr",
        "type": "docs",
        "chatgpt_zeroshot": "Update package descriptions in README.md"
    },
    {
        "msg": "docs: how to provide theme with ThemePRovider",
        "diff": "diff --git a/src/main.js b/src/main.js import Vue from 'vue'\nimport App from './App.vue'\nimport './registerServiceWorker'\n-// import { provideTheme } from '@/lib/utils'\nimport Kiwi from './lib/plugin'\nVue.config.productionTip = false\n+// Install Kiwi plugin\nVue.use(Kiwi)\nnew Vue({\n+ // Alternative way to provide theme would be to import { provideTheme } from utils and provide it with render function\n// Provide theme to the root of the application\n// render: h => provideTheme(h, App)\nrender: h => h(App)\n",
        "date": "12.10.2019 18:43:12",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "chatgpt_zeroshot": "\"Install Kiwi plugin and provide theme to the root of the application\""
    },
    {
        "msg": "docs(icon): documented parseFAIcons utils",
        "diff": "diff --git a/src/lib/utils/icons.js b/src/lib/utils/icons.js import merge from 'lodash-es/merge'\n+/**\n+ * @description Parse all Font Awesome Icons\n+ * @param {Object} iconSet - Registered Icons object\n+ * @returns {Object} - All Font awesome icons parsed.\n+ */\nconst parseFAIcons = (iconSet) => {\nconst parseFAIcon = (iconObject) => {\nconst { icon } = iconObject\n@@ -15,7 +20,6 @@ const parseFAIcons = (iconSet) => {\n.map(value => parseFAIcon(value))\n.reduce((target, source) => merge(target, source), {})\n- console.log({ result })\nreturn result\n}\n",
        "date": "28.10.2019 03:28:59",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "chatgpt_zeroshot": "Add function to parse all Font Awesome Icons in icons.js"
    },
    {
        "msg": "docs: updated components list",
        "diff": "diff --git a/packages/docs/components/components.js b/packages/docs/components/components.js @@ -33,7 +33,7 @@ const components = [\n'Image',\n'Input',\n'Link',\n- // 'List',\n+ 'List',\n'Menu',\n'Modal',\n'NumberInput',\n@@ -48,10 +48,10 @@ const components = [\n// 'Stat',\n'Stack',\n'Switch',\n- // 'Tabs',\n+ 'Tabs',\n'Tag',\n'Text',\n- // 'Textarea',\n+ 'Textarea',\n'Toast',\n'Tooltip'\n]\n",
        "date": "03.03.2020 02:33:42",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "chatgpt_zeroshot": "Enable List, Tabs, and Textarea components in components.js"
    },
    {
        "msg": "docs: updated docs and package meta",
        "diff": "diff --git a/README.md b/README.md @@ -123,21 +123,11 @@ You can also view all developed components in Storybook!\n```bash\nyarn install\nyarn bootstrap\n-yarn serve\n+yarn dev\n```\n-\n-\n-#### Project TODO:\n-- [x] Setup Storybook for components UI\n-- [x] Theme Provider\n-- [x] Develop styling scheme for components with styled system\n-- [x] Setup Vue.js plugin system\n- - [x] Provide Theme\n- - [x] Observe theme and set it dynamically in javascript plugin.\n-- [x] Provide icons API for icons component\n-- [x] Accessibility and WIA-ARIA standard implementation\n-- [ ] Setup NPM distribution\n+#### Project TODOs:\n+- [ ] Documentation site (Ongoing)\n- [ ] Set up type system for plugin & components export with Typescript\n",
        "date": "15.03.2020 02:33:56",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "chatgpt_zeroshot": "Refactor project TODOs and update yarn command in README"
    },
    {
        "msg": "docs: add link to open issues",
        "diff": "diff --git a/README.md b/README.md @@ -145,7 +145,7 @@ export default {\nYou can also view all developed components in **[Storybook](https://chakra-ui-vue.netlify.com)!**\n### Development for Contributing:\n-Interested in contributing? See our open issues! Remember to take a look at our [CONTRIBUTORS](../../.github/CONTRIBUTING.md) guide.\n+Interested in contributing? See our [open issues](/issues)! Remember to take a look at our [CONTRIBUTORS](../../.github/CONTRIBUTING.md) guide.\n```bash\nyarn install\n",
        "date": "17.03.2020 12:43:07",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "chatgpt_zeroshot": "Update link to open issues in README.md"
    },
    {
        "msg": "docs: docs dependencies",
        "diff": "diff --git a/packages/chakra-ui-docs/package.json b/packages/chakra-ui-docs/package.json \"core-js\": \"2\",\n\"dotenv-defaults\": \"^1.1.1\",\n\"emotion\": \"^10.0.27\",\n+ \"file-contributors\": \"^1.0.2\",\n+ \"node-sass\": \"^4.13.1\",\n\"nuxt\": \"^2.0.0\",\n\"prismjs\": \"^1.19.0\",\n+ \"sass-loader\": \"^8.0.2\",\n\"vue\": \"^2.6.11\",\n\"vue-live\": \"^1.5.1\",\n\"vue-prism-editor\": \"^0.5.1\",\n",
        "date": "21.03.2020 22:39:36",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "chatgpt_zeroshot": "Add file-contributors and node-sass dependencies, update sass-loader version"
    },
    {
        "msg": "docs: added colorMode docs",
        "diff": "diff --git a/packages/chakra-ui-core/src/ThemeProvider/index.js b/packages/chakra-ui-core/src/ThemeProvider/index.js @@ -6,6 +6,11 @@ const ThemeProvider = {\nreturn {\n$theme: () => this.theme,\n$icons: this.icons,\n+ /**\n+ * By default the ThemeProvider exposes a colorMode value of light\n+ * If no `ColorModeProvider` is provided in children/ consumer app, all chakra\n+ * components will consume the $colorMode from here.\n+ */\n$colorMode: () => 'light'\n}\n},\n",
        "date": "22.03.2020 03:04:25",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "chatgpt_zeroshot": "Add default colorMode value to ThemeProvider"
    },
    {
        "msg": "docs(getting-started): updated getting started, principles pages",
        "diff": "diff --git a/packages/chakra-ui-docs/layouts/default.vue b/packages/chakra-ui-docs/layouts/default.vue @@ -98,7 +98,11 @@ export default {\n'.preview-panel': {\nborderColor: this.thBg[colorMode]\n},\n- 'blockquote': this.callout[colorMode],\n+ 'blockquote': {\n+ ...this.callout[colorMode],\n+ rounded: 'md',\n+ overflow: 'hidden'\n+ },\n'table, p': {\n'code': this.code[colorMode]\n}\n",
        "date": "25.03.2020 02:18:28",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "chatgpt_zeroshot": "Add styling to blockquote in default layout"
    },
    {
        "msg": "docs: added documentation for Button component",
        "diff": "diff --git a/packages/chakra-ui-docs/docs/button.mdx b/packages/chakra-ui-docs/docs/button.mdx +import Vue from 'vue'\n+import LiveEditor from '../components/LiveEditor'\n+import { Button, ButtonGroup, PseudoBox } from '@chakra-ui/vue'\n+import Code from '../components/CodeBlock'\n+Vue.component('Button', Button)\n+Vue.component('ButtonGroup', ButtonGroup)\n+Vue.component('PseudoBox', PseudoBox)\n+\n# Button\n+<br />\n+Button component is used to trigger an action or event, such as submitting a form, opening a dialog, canceling an action, or performing a delete operation.\n+\n+### Import\n+\n+<Code lang=\"javascript\" code={`import {Button} from \"chakra-ui/vue\"`}/>\n+\n+### Usage\n+<LiveEditor>\n+ {`\n+ <Button variantColor=\"green\">Button</Button>\n+ `}\n+</LiveEditor>\n+\n+### Button Sizes\n+\n+Use the `size` prop to change the size of the button. You can set the value to `xs`, `sm`, `md` or `lg`.\n+\n+<LiveEditor>\n+ {`\n+ <ButtonGroup :spacing=\"4\">\n+ <Button variantColor=\"green\" size=\"xs\">\n+ Button\n+ </Button>\n+ <Button variantColor=\"blue\" size=\"sm\">\n+ Button\n+ </Button>\n+ <Button variantColor=\"red\" size=\"md\">\n+ Button\n+ </Button>\n+ <Button variantColor=\"orange\" size=\"lg\">\n+ Button\n+ </Button>\n+ </ButtonGroup>\n+ `}\n+</LiveEditor>\n+\n+### Button Variant\n+\n+Use the `variant` prop to change the visual style of the Button. You can set the value to `solid`, `ghost`, `outline`, or `link`.\n+\n+<LiveEditor>{`\n+ <ButtonGroup :spacing=\"4\">\n+ <Button variantColor=\"red\" variant=\"solid\">\n+ Button\n+ </Button>\n+ <Button variantColor=\"orange\" variant=\"outline\">\n+ Button\n+ </Button>\n+ <Button variantColor=\"yellow\" variant=\"ghost\">\n+ Button\n+ </Button>\n+ <Button variantColor=\"green\" variant=\"link\">\n+ Button\n+ </Button>\n+</ButtonGroup>\n+`}</LiveEditor>\n+\n+\n+### Button with Icon\n+\n+You can add left and right icons to the Button component. See how to [add icons](#/icons) to your project.\n+\n+<LiveEditor>{`\n+ <ButtonGroup :spacing=\"4\">\n+ <Button leftIcon=\"email\" variantColor=\"green\" variant=\"solid\">\n+ Email\n+ </Button>\n+ <Button rightIcon=\"arrow-forward\" variantColor=\"blue\" variant=\"outline\">\n+ Call us\n+ </Button>\n+ </ButtonGroup>\n+`}</LiveEditor>\n+\n+### Button loading state\n+\n+Pass `isLoading` prop to the Button component to show it's loading state. You can optionally pass `loadingText` prop, if you do, the button will show a spinner and the loading text. Otherwise, the button will take the width of the text label and show only the spinner.\n+\n+<LiveEditor>{`\n+ <ButtonGroup :spacing=\"4\">\n+ <Button isLoading variantColor=\"green\" variant=\"solid\">\n+ Email\n+ </Button>\n+ <Button\n+ isLoading\n+ loadingText=\"Submitting\"\n+ variantColor=\"blue\"\n+ variant=\"outline\"\n+ >\n+ Submit\n+ </Button>\n+ </ButtonGroup>\n+`}</LiveEditor>\n+\n+### Accessibility\n+\n+- Button has `role` button. `isLoading`\n+- When Button has focus, `space` and `enter` activates it\n+\n+### Composition\n+\n+Button composes [Pseudobox](#) and all props (variant, variantColor, etc.) are converted to style props. This means you can override any style of the Button via props.\n+\n+<LiveEditor>{`\n+ // The size prop affects the height of the button\n+ // but I can still override it by passing a custom height\n+ <Button\n+ size=\"md\"\n+ height=\"50px\"\n+ width=\"250px\"\n+ border=\"2px\"\n+ borderColor=\"green.500\"\n+ >\n+ Button\n+ </Button>\n+`}</LiveEditor>\n+\n+### Custom Button\n+\n+In event you need to make your own custom button, you can leverage the `PseudoBox` component. It provides the `hover`, `focus`, `active` and `disabled` style props to style the button.\n+\n+<LiveEditor>{`\n+ <PseudoBox\n+ as=\"button\"\n+ height=\"24px\"\n+ lineHeight=\"1.2\"\n+ transition=\"all 0.2s cubic-bezier(.08,.52,.52,1)\"\n+ border=\"1px\"\n+ px=\"8px\"\n+ rounded=\"2px\"\n+ fontSize=\"14px\"\n+ fontWeight=\"semibold\"\n+ bg=\"#f5f6f7\"\n+ borderColor=\"#ccd0d5\"\n+ color=\"#4b4f56\"\n+ >\n+ Join Group\n+ </PseudoBox>\n+`}</LiveEditor>\n+\n+### props\n+\n+The Button composes the `PseudoBox` component so you can pass props for `PseudoBox`. These are props related to the Button component.\n+\n+| Name | Type | Default | Description |\n+| --------------------- | ------------------------------------------------ | --------| ------------------------------------------------------------------------------------------------------- |\n+| `aria-label` | `string` | | The label of the button |\n+| `variant ` | `string` | | The color of the button. Use a color key passed in `theme.colors`. |\n+| `variantColor` | `outline`, `ghost`, `unstyled` , `link` , `solid`| `solid` | The color of the button. Use a color key passed in `theme.colors`. |\n+| `isDisabled` | `boolean` | | If `true`, the button will be disabled. |\n+| `isLoading` | `boolean` | | If `true`, the button will show a spinner |\n+| `loadingText` | `string` | | The label to show in the button when isLoading is true. If no text is passed, it only shows the spinner |\n+| `size` | `xs`, `sm`,`md`, `lg` | `md` | The size of the button |\n+\n",
        "date": "25.03.2020 00:44:21",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "chatgpt_zeroshot": "Add Vue components for Button, ButtonGroup, and PseudoBox with usage examples and props documentation."
    },
    {
        "msg": "docs: documentation for Alert component",
        "diff": "diff --git a/packages/chakra-ui-docs/docs/alert.mdx b/packages/chakra-ui-docs/docs/alert.mdx +import Vue from 'vue'\n+import LiveEditor from '../components/LiveEditor'\n+import { Alert, AlertIcon, AlertTitle, AlertDescription, CloseButton, Stack } from '@chakra-ui/vue'\n+import Code from '../components/CodeBlock'\n+Vue.component('Alert', Alert)\n+Vue.component('AlertIcon', AlertIcon)\n+Vue.component('AlertTitle', AlertTitle)\n+Vue.component('AlertDescription', AlertDescription)\n+Vue.component('CloseButton', CloseButton)\n+Vue.component('Stack', Stack)\n+\n+\n# Alert\n+\n+Alerts are used to communicate a state that affects a system, feature or page.\n+\n+## Import\n+\n+Chakra UI Vue exports 4 alert related components.\n+\n+- `Alert`: The wrapper for alert components.\n+- `AlertIcon`: The visual icon for the alert that changes based on the `status` prop.\n+- `AlertTitle`: The title of the alert to be announced by screen readers.\n+- `AlertDescription`: The description of the alert to be announced by screen readers.\n+\n+<Code lang=\"javascript\" code={`\n+import {\n+ Alert,\n+ AlertIcon,\n+ AlertTitle,\n+ AlertDescription,\n+} from \"@chakra-ui/vue\";\n+`} />\n+\n+## Usage\n+\n+<br />\n+\n+<LiveEditor>\n+{`\n+ <Alert status=\"error\">\n+ <AlertIcon />\n+ <AlertTitle :mr=\"2\">Your browser is outdated!</AlertTitle>\n+ <AlertDescription>Your Chakra experience may be degraded.</AlertDescription>\n+ <CloseButton position=\"absolute\" right=\"8px\" top=\"8px\" />\n+ </Alert>\n+`}\n+</LiveEditor>\n+\n+### Status\n+\n+Change the status of the alerts by passing the `status` prop. This affects the\n+color scheme and icon used. Alert supports `error`, `success`, `warning`, and\n+`info` statuses.\n+\n+\n+<br />\n+\n+<LiveEditor>\n+{`\n+ <Stack>\n+ <Alert status=\"error\">\n+ <AlertIcon />\n+ There was an error processing your request\n+ </Alert>\n+ <Alert status=\"success\">\n+ <AlertIcon />\n+ Data uploaded to the server. Fire on!\n+ </Alert>\n+ <Alert status=\"warning\">\n+ <AlertIcon />\n+ Seems your account is about to expire, upgrade now!\n+ </Alert>\n+ <Alert status=\"info\">\n+ <AlertIcon />\n+ Chakra is going live on August 30th. Get ready!\n+ </Alert>\n+ </Stack>\n+`}\n+</LiveEditor>\n+\n+### Variant\n+\n+Alert has 4 variant styles you can use. Pass the `variant` prop and use either\n+`subtle`, `solid`, `left-accent` or `top-accent`.\n+\n+\n+<LiveEditor>\n+{`\n+ <Stack>\n+ <Alert status=\"success\" variant=\"subtle\">\n+ <AlertIcon />\n+ Data uploaded to the server. Fire on!\n+ </Alert>\n+ <Alert status=\"success\" variant=\"solid\">\n+ <AlertIcon />\n+ Data uploaded to the server. Fire on!\n+ </Alert>\n+ <Alert status=\"success\" variant=\"left-accent\">\n+ <AlertIcon />\n+ Data uploaded to the server. Fire on!\n+ </Alert>\n+ <Alert status=\"success\" variant=\"top-accent\">\n+ <AlertIcon />\n+ Data uploaded to the server. Fire on!\n+ </Alert>\n+ </Stack>\n+`}\n+</LiveEditor>\n+\n+### Composition\n+\n+Alert ships with smaller component to allow for flexibility and make it easy to\n+create all kinds of layout. Here's an example of custom alert style and layout.\n+\n+<LiveEditor>\n+{`\n+ <Alert\n+ status=\"success\"\n+ variant=\"subtle\"\n+ flexDirection=\"column\"\n+ justifyContent=\"center\"\n+ textAlign=\"center\"\n+ height=\"200px\"\n+ >\n+ <AlertIcon size=\"40px\" :mr=\"0\" />\n+ <AlertTitle :mt=\"4\" :mb=\"1\" fontSize=\"lg\">\n+ Application submitted!\n+ </AlertTitle>\n+ <AlertDescription maxWidth=\"sm\">\n+ Thanks for submitting your application. Our team will get back to you soon.\n+ </AlertDescription>\n+ </Alert>\n+`}\n+</LiveEditor>\n+\n+## Props\n+\n+### Alert Props\n+\n+Alert is the wrapper for alert component. It composes the `Flex` component.\n+\n+| Name | Type | Default | Description |\n+|---------|------------------------------------------------|----------|----------------------------------------|\n+| status | `error`, `success`, `warning`, `info` | `info` | The status of the alert |\n+| variant | `subtle`, `solid`, `left-accent`, `top-accent` | `subtle` | The variant of the alert style to use. |\n+\n+### AlertIcon Props\n+\n+AlertIcon composes `Icon` and changes the icon based on the `status` prop.\n+\n+### AlertTitle Props\n+\n+AlertTitle composes the `Box` component.\n+\n+### AlertDescription Props\n+\n+AlertDescription composes the `Box` component.\n\\ No newline at end of file\n",
        "date": "25.03.2020 04:13:01",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "chatgpt_zeroshot": "Add Vue components for Alert, AlertIcon, AlertTitle, AlertDescription, CloseButton, and Stack in Chakra UI Vue."
    },
    {
        "msg": "docs(accordion): add jsdocs to component",
        "diff": "diff --git a/packages/chakra-ui-core/src/CAccordion/CAccordion.js b/packages/chakra-ui-core/src/CAccordion/CAccordion.js +/**\n+ * Hey! Welcome to @chakra-ui/vue Accordion\n+ *\n+ * Accordions display a list of high-level\n+ * options that can expand/collapse to reveal\n+ * more information.\n+ *\n+ * An accordion is a vertically stacked set\n+ * of interactive headings that each contain\n+ * a title, content snippet, or thumbnail\n+ * representing a section of content.\n+ * The headings function as controls that enable\n+ * users to reveal or hide their associated sections\n+ * of content. Accordions are commonly used to\n+ * reduce the need to scroll when presenting\n+ * multiple sections of content on a single page.\n+ *\n+ * @see Docs https://vue.chakra-ui.com/accordion\n+ * @see Source link to source\n+ * @see WAI-ARIA https://www.w3.org/TR/wai-aria-practices-1.2/#accordion\n+ */\n+\nimport { baseProps } from '../config'\nimport { forwardProps, cloneVNodes, useId, isDef } from '../utils'\nimport styleProps from '../config/props'\n@@ -8,6 +30,16 @@ import CPseudoBox from '../CPseudoBox'\nimport CCollapse from '../CCollapse'\nimport CIcon from '../CIcon'\n+/**\n+ * CAccordion component\n+ *\n+ * The wrapper that clones it's children\n+ * to pass it's prop to the `CAccordionItem`.\n+ *\n+ * @extends CBox\n+ * @see Docs https://vue.chakra-ui.com/accordion\n+ */\n+\nconst CAccordion = {\nname: 'CAccordion',\nprops: {\n@@ -116,6 +148,15 @@ const CAccordion = {\n}\n}\n+/**\n+ * CAccordionItem component\n+ *\n+ * A single accordion item\n+ *\n+ * @extends CPseudoBox\n+ * @see Docs https://vue.chakra-ui.com/accordion\n+ */\n+\nconst CAccordionItem = {\nname: 'CAccordionItem',\nprops: {\n@@ -202,6 +243,15 @@ const CAccordionItem = {\n}\n}\n+/**\n+ * CAccordionHeader component\n+ *\n+ * The button that toggles the expand/collapse\n+ * state of the accordion item.\n+ *\n+ * @extends CPseudoBox\n+ * @see Docs https://vue.chakra-ui.com/accordion\n+ */\nconst CAccordionHeader = {\nname: 'CAccordionHeader',\ninject: ['$AccordionContext'],\n@@ -246,6 +296,15 @@ const CAccordionHeader = {\n}\n}\n+/**\n+ * CAccordionPanel component\n+ *\n+ * The container for the accordion item\n+ * details to be revealed.\n+ *\n+ * @extends CPseudoBox\n+ * @see Docs https://vue.chakra-ui.com/accordion\n+ */\nconst CAccordionPanel = {\nname: 'CAccordionPanel',\ninject: ['$AccordionContext'],\n@@ -277,6 +336,15 @@ const CAccordionPanel = {\n}\n}\n+/**\n+ * CAccordionIcon component\n+ *\n+ * A chevron-down icon that rotates based on the\n+ * expanded/collapsed state.\n+ *\n+ * @extends CPseudoBox\n+ * @see Docs https://vue.chakra-ui.com/accordion\n+ */\nconst CAccordionIcon = {\nname: 'CAccordionIcon',\ninject: ['$AccordionContext'],\n",
        "date": "01.04.2020 01:57:00",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "chatgpt_zeroshot": "Add Accordion components and documentation links."
    },
    {
        "msg": "docs: add gridsome example",
        "diff": "diff --git a/README.md b/README.md @@ -150,6 +150,7 @@ If you'd like to toggle your app between dark and light mode, you can also wrap\n- [Vue Starter](https://codesandbox.io/s/chakra-ui-vue-starter-2sy0g)\n- [Nuxt Starter](https://codesandbox.io/s/chakra-ui-nuxt-demo-f8tq4)\n+- [Gridsome Starter](https://codesandbox.io/s/chakra-ui-gridsome-demo-038c9)\n### Storybook Components\n",
        "date": "02.04.2020 21:15:41",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "chatgpt_zeroshot": "Add Gridsome Starter to README.md"
    },
    {
        "msg": "docs(aspectratiobox): added docs",
        "diff": "diff --git a/packages/chakra-ui-docs/docs/alertdialog.mdx b/packages/chakra-ui-docs/docs/alertdialog.mdx @@ -120,9 +120,9 @@ export default {\n## Props\n-AlertDialog and it's components composes the `Modal` component, the only\n+AlertDialog and it's components composes the `CModal` component, the only\nexception is that it requires a `leastDestructiveRef` which is similar to the\n-`initialFocusRef` in `Modal`\n+`initialFocusRef` in `CModal`\n| Name | Type | Default | Description |\n| ------------------------------ | --------------------------------- | ------- | ------------------------------------------------------------- |\n",
        "date": "05.04.2020 10:30:11",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "chatgpt_zeroshot": "Update AlertDialog component to use CModal instead of Modal"
    },
    {
        "msg": "docs(box): added box docs",
        "diff": "diff --git a/packages/chakra-ui-docs/docs/box.mdx b/packages/chakra-ui-docs/docs/box.mdx +import Vue from 'vue'\n+import LiveEditor from '../components/LiveEditor'\n+import Code from '../components/CodeBlock'\n+import SEO from '../components/SEO'\n+import { CBox, CImage, CBadge, CIcon } from '@chakra-ui/vue'\n+Vue.component('CBox', CBox)\n+Vue.component('CImage', CImage)\n+Vue.component('CBadge', CBadge)\n+Vue.component('CIcon', CIcon)\n+\n+<SEO\n+ title=\"Box\"\n+ description=\"Box is the most abstract component on top of which all other @chakra-ui/vue components are built. By default, it renders a `div` element\"\n+/>\n+\n+\n# Box\n+\n+`CBox` is the most abstract component on top of which all other `@chakra-ui/vue` components are built. By default, it renders a `div` element.\n+\n+<br />\n+\n+**The `CBox` component is useful because it helps with 3 common use cases:**\n+- Creation of responsive layouts with ease.\n+- Provides a shorthand way to pass styles via props (`bg` instead of `backgroundColor`).\n+- Composition of new components by providing for overrides by using the `as` prop.\n+\n+## Import\n+\n+<Code lang=\"javascript\" code={`import { CBox } from \"@chakra-ui/vue\";`} />\n+\n+## Usage\n+\n+<LiveEditor>\n+{`\n+<c-box bg=\"tomato\" w=\"100%\" p=\"4\" color=\"white\">\n+ This is the Box\n+</c-box>\n+`}\n+</LiveEditor>\n+\n+## Composition with `CBox`\n+\n+<LiveEditor>\n+{`\n+<template>\n+ <c-box maxW=\"sm\" border-width=\"1px\" rounded=\"lg\" overflow=\"hidden\">\n+ <c-image :src=\"property.imageUrl\" :alt=\"property.imageAlt\" />\n+ <c-box p=\"6\">\n+ <c-box d=\"flex\" align-items=\"baseline\">\n+ <c-badge rounded=\"full\" px=\"2\" variant-color=\"green\">\n+ New\n+ </c-badge>\n+ <c-box\n+ color=\"gray.500\"\n+ font-weight=\"semibold\"\n+ letter-spacing=\"wide\"\n+ font-size=\"xs\"\n+ text-sransform=\"uppercase\"\n+ ml=\"2\"\n+ >\n+ {{ property.beds }} beds &bull; {{ property.baths }} baths\n+ </c-box>\n+ </c-box>\n+ <c-box\n+ mt=\"1\"\n+ font-weight=\"semibold\"\n+ as=\"h4\"\n+ line-height=\"tight\"\n+ is-truncated\n+ >\n+ {{ property.title }}\n+ </c-box>\n+ <c-box>\n+ {{ property.formattedPrice }}\n+ <c-box as=\"span\" color=\"gray.600\" fontSize=\"sm\">\n+ / wk\n+ </c-box>\n+ </c-box>\n+ <c-box d=\"flex\" mt=\"2\" align-items=\"center\">\n+ <c-icon\n+ v-for=\"(_, i) in Array(5).fill('')\"\n+ name=\"star\"\n+ :key=\"i\"\n+ :color=\"i < property.rating ? 'green.500' : 'gray.300'\"\n+ />\n+ <c-box as=\"span\" ml=\"2\" color=\"gray.600\" font-size=\"sm\">\n+ {{ property.reviewCount }} reviews\n+ </c-box>\n+ </c-box>\n+ </c-box>\n+ </c-box>\n+</template>\\n\n+<script>\n+ export default {\n+ name: 'Example',\n+ data () {\n+ return {\n+ property: {\n+ imageUrl: \"https://bit.ly/2Z4KKcF\",\n+ imageAlt: \"Rear view of modern home with pool\",\n+ beds: 3,\n+ baths: 2,\n+ title: \"Modern home in city center in the heart of historic Los Angeles\",\n+ formattedPrice: \"$1,900.00\",\n+ reviewCount: 34,\n+ rating: 4,\n+ }\n+ }\n+ }\n+ }\n+</script>\n+`}\n+</LiveEditor>\n+\n+### `as` prop\n+\n+You can use the `as` prop to change the element render, just like the `tag` prop on Vue's global dynamic component.\n+\n+<LiveEditor>\n+{`\n+<c-box as=\"button\" rounded=\"md\" bg=\"tomato\" color=\"white\" px=\"4\" h=\"8\">\n+ Button\n+</c-box>\n+`}\n+</LiveEditor>\n+\n+## Props\n+See all `CBox` props in the <nuxt-link to=\"style-props\">Style Props page</nuxt-link>\n\\ No newline at end of file\n",
        "date": "08.04.2020 02:45:34",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "chatgpt_zeroshot": "Add Vue components for Box, Image, Badge, and Icon, and update Box documentation with usage examples and props information."
    },
    {
        "msg": "docs: added documentation for CTooltip component",
        "diff": "diff --git a/packages/chakra-ui-docs/docs/tooltip.mdx b/packages/chakra-ui-docs/docs/tooltip.mdx +import Vue from 'vue'\n+import LiveEditor from '../components/LiveEditor'\n+import Code from '../components/CodeBlock'\n+import SEO from '../components/SEO'\n+\n+import { CTooltip, CIcon, CButton, CStack } from '@chakra-ui/vue'\n+Vue.component('CTooltip', CTooltip)\n+Vue.component('CIcon', CIcon)\n+Vue.component('CButton', CButton)\n+Vue.component('CStack', CStack)\n+\n+<SEO\n+ title=\"Tooltip\"\n+ description=\"A tooltip is a brief, informative message that appears when a user interacts with an element. Tooltips are usually initiated in one of two ways: through a mouse-hover gesture or through a keyboard-hover gesture.\"\n+/>\n+\n# Tooltip\n+\n+A tooltip is a brief, informative message that appears when a user interacts with an element. Tooltips are usually initiated in one of two ways: through a mouse-hover gesture or through a keyboard-hover gesture.\n+\n+The Tooltip component follows the [WAI-ARIA](https://www.w3.org/TR/wai-aria-practices/#tooltip) Tooltip Pattern.\n+\n+## Import\n+\n+<br />\n+<Code\n+lang=\"js\"\n+code={`import { CTooltip } from \"@chakra-ui/vue\";\n+`}\n+/>\n+\n+## Usage\n+\n+If the children of `CTooltip` is a string, we wrap with in a `span` with `tab-index` set to 0, to ensure it meets the accessibility requirements.\n+\n+<LiveEditor>\n+ {`\n+ <c-tooltip label=\"Chakra UI rocks\">Psst! Hover Me</c-tooltip>\n+`}\n+</LiveEditor>\n+\n+### With an icon\n+\n+<LiveEditor>\n+ {`\n+<c-tooltip label=\"Welcome home\" placement=\"bottom\">\n+ <c-icon name=\"phone\" />\n+</c-tooltip>\n+`}\n+</LiveEditor>\n+\n+### With arrow\n+\n+<LiveEditor>\n+ {`\n+<c-tooltip has-arrow label=\"Add new component\" placement=\"right\">\n+ <c-icon name=\"add\" />\n+</c-tooltip>\n+`}\n+</LiveEditor>\n+\n+### Tooltip with focusable content\n+\n+If the children of CTooltip is a focusable element, the tooltip will show when you focus or hover on the element, and will hide when you blur or moves cursor out of the element.\n+\n+<LiveEditor>\n+ {`\n+<c-tooltip has-arrow label=\"Sends your order to Delivery hero\" placement=\"top\" bg=\"blue.600\">\n+ <c-button>Place Order</c-button>\n+</c-tooltip>\n+`}\n+</LiveEditor>\n+\n+### Placement\n+\n+Using the `placement` prop you can adjust where your tooltip will be displayed.\n+\n+<LiveEditor>\n+ {`\n+<c-stack should-wrap-children>\n+ <c-tooltip has-arrow label=\"left\" placement=\"left\">\n+ <c-button variant=\"outline\">Left</c-button>\n+ </c-tooltip>\n+ <c-tooltip has-arrow label=\"top\" placement=\"top\">\n+ <c-button variant=\"outline\">Top</c-button>\n+ </c-tooltip>\n+ <c-tooltip has-arrow label=\"right\" placement=\"right\">\n+ <c-button variant=\"outline\">Right</c-button>\n+ </c-tooltip>\n+ <c-tooltip has-arrow label=\"bottom\" placement=\"bottom\">\n+ <c-button variant=\"outline\">Bottom</c-button>\n+ </c-tooltip>\n+</c-stack>\n+`}\n+</LiveEditor>\n+\n+### Props\n+\n+| Name | Type | Default | Description |\n+| -------------------- | -------------------- | -------- | ------------------------------------------------------------------------------------- |\n+| `isOpen` | `boolean` | | If `true`, the tooltip is shown. |\n+| `defaultIsOpen` | `boolean` | | If `true`, the tooltip is initially shown. |\n+| `label` | `string` | | The label of the tooltip. |\n+| `aria-label` | `string` | | An alternate label for screen readers. |\n+| `placement` | `PopperJS.Placement` | `bottom` | Position the tooltip relative to the trigger element as well as surrounding elements. |\n+| `children` | `Vue.VNode` | | The `VNode` to be used as the trigger of the tooltip. |\n+| `hasArrow` | `boolean` | | If `true` display an arrow tip on the tooltip. |\n+| `showDelay` | `number` | | The delay in `ms` for the tooltip to show |\n+| `hideDelay` | `number` | | The delay in `ms` for the tooltip to hide |\n+| `closeOnClick` | `boolean` | | If `true` hide the tooltip, when the trigger is clicked. |\n+| `shouldWrapChildren` | `boolean` | | If `true`, the tooltip will wrap the children in a `span` with `tabIndex=0` |\n+\n+### Events\n+\n+| Name | Type | Default | Description |\n+| -------- | ---------- | ------- | --------------------------------------- |\n+| `@open` | `function` | | Function called when the tooltip shows. |\n+| `@close` | `function` | | Function called when the tooltip hides. |\n",
        "date": "08.04.2020 11:07:08",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "chatgpt_zeroshot": "Add Vue components for Tooltip feature and update documentation."
    },
    {
        "msg": "docs: update alertdialog",
        "diff": "diff --git a/packages/chakra-ui-docs/docs/alertdialog.mdx b/packages/chakra-ui-docs/docs/alertdialog.mdx -import Vue from 'vue'\n-import LiveEditor from '../components/LiveEditor'\n-import Code from '../components/CodeBlock'\nimport SEO from '../components/SEO'\n-import { CButton, CAlertDialog, CAlertDialogContent, CAlertDialogOverlay, CAlertDialogBody, CAlertDialogHeader, CAlertDialogFooter, CAlertDialogCloseButton } from '@chakra-ui/vue'\n-Vue.component('CButton', CButton)\n-Vue.component('CAlertDialog', CAlertDialog)\n-Vue.component('CAlertDialogContent', CAlertDialogContent)\n-Vue.component('CAlertDialogOverlay', CAlertDialogOverlay)\n-Vue.component('CAlertDialogBody', CAlertDialogBody)\n-Vue.component('CAlertDialogHeader', CAlertDialogHeader)\n-Vue.component('CAlertDialogFooter', CAlertDialogFooter)\n-Vue.component('CAlertDialogCloseButton', CAlertDialogCloseButton)\n<SEO\ntitle=\"Alert Dialog\"\n@@ -38,7 +26,8 @@ Chakra UI exports 7 alert dialog related components.\n<br />\n-<Code lang=\"javascript\" code={`import {\n+```js\n+import {\nCAlertDialog,\nCAlertDialogHeader,\nCAlertDialogBody,\n@@ -47,7 +36,7 @@ Chakra UI exports 7 alert dialog related components.\nCAlertDialogContent,\nCAlertDialogCloseButton\n} from \"@chakra-ui/vue\";\n-`} />\n+```\n## Usage\n@@ -55,12 +44,11 @@ Chakra UI exports 7 alert dialog related components.\nVue ref to a focusable element or component in your alert dialog. The `leastDestructiveRef` prop also accepts\na function that returns a ref.\n-Based on <a href=\"https://www.w3.org/TR/wai-aria-practices/#alertdialog\" target=\"_blank\">WAI-ARIA specifications for alert dialogs</a>,\n+Based on [WAI-ARIA specifications for alert dialogs](https://www.w3.org/TR/wai-aria-practices/#alertdialog)\nwhen the dialog opens, focus should be placed on the least destructive element\nto prevent users from accidentally confirming the destructive action.\n-<LiveEditor>\n-{`\n+```vue live=true\n<template>\n<div>\n<c-alert-dialog\n@@ -72,10 +60,10 @@ to prevent users from accidentally confirming the destructive action.\n<c-alert-dialog-content>\n<c-alert-dialog-header font-size=\"lg\" font-weight=\"bold\">\nDelete Customer\n- </c-alert-dialog-header>\\n\n+ </c-alert-dialog-header>\n<c-alert-dialog-body>\nAre you sure? You can't undo this action afterwards.\n- </c-alert-dialog-body>\\n\n+ </c-alert-dialog-body>\n<c-alert-dialog-footer>\n<c-button ref=\"cancelRef\" @click=\"closeDialog\">\nCancel\n@@ -90,7 +78,7 @@ to prevent users from accidentally confirming the destructive action.\nDelete Customer\n</c-button>\n</div>\n-</template>\\n\n+</template>\n<script>\nexport default {\ndata () {\n@@ -107,9 +95,8 @@ export default {\n}\n}\n}\n-<\\/script>\n-`}\n-</LiveEditor>\n+</script>\n+```\n## Accessibility\n",
        "date": "12.04.2020 13:18:27",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "chatgpt_zeroshot": "Refactor alert dialog component imports and code formatting"
    },
    {
        "msg": "docs: added collapse docs",
        "diff": "diff --git a/packages/chakra-ui-docs/docs/closebutton.mdx b/packages/chakra-ui-docs/docs/closebutton.mdx @@ -11,7 +11,7 @@ close functionality in feedback and overlay components like [Alerts](/alert),\n## Import\n```js\n-import { CloseButton } from '@chakra-ui/vue';\n+import { CCloseButton } from '@chakra-ui/vue';\n```\n",
        "date": "14.04.2020 01:00:01",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "chatgpt_zeroshot": "Refactor CloseButton import to use CCloseButton in Vue components"
    },
    {
        "msg": "docs: documentation for tag component",
        "diff": "diff --git a/packages/chakra-ui-docs/docs/tag.mdx b/packages/chakra-ui-docs/docs/tag.mdx +import SEO from '../components/SEO'\n+\n+<SEO\n+ title=\"Tag\"\n+ description=\"Tag component is used for items that need to be labeled, categorized, or organized using keywords that describe them.\"\n+/>\n+\n# Tag\n+\n+Tag component is used for items that need to be labeled, categorized, or organized using keywords that describe them.\n+\n+## Import\n+\n+Chakra UI Vue exports 4 Tag related components:\n+\n+- **CTag**: The wrapper for all the tag elements\n+- **CTagLabel**: The label for tag's text content.\n+- **CTagIcon**: The icon for the tag\n+- **CTagCloseButton**: The close button for the tag.\n+\n+```js\n+import { CTag, CTagIcon, CTagLabel, CTagCloseButton } from '@chakra-ui/vue'\n+```\n+\n+## usage\n+\n+```vue live=true\n+<c-tag>Awesome Tag</c-tag>\n+```\n+\n+```vue live=true\n+<template>\n+ <c-stack :spacing=\"4\" is-inline>\n+ <c-tag v-for=\"size in sizes\" :size=\"size\" :key=\"size\" variantColor=\"vue\">\n+ Vue {{ size }}\n+ </c-tag>\n+ </c-stack>\n+</template>\n+<script>\n+export default {\n+ data() {\n+ return {\n+ sizes: ['sm', 'md', 'lg']\n+ }\n+ }\n+}\n+</script>\n+```\n+\n+## With left icon\n+\n+```vue live=true\n+<template>\n+ <c-stack :spacing=\"4\" is-inline>\n+ <c-tag v-for=\"size in sizes\" :size=\"size\" :key=\"size\" variant-color=\"cyan\">\n+ <c-tag-icon icon=\"add\" size=\"12px\" />\n+ <c-tag-label>New {{ size }}</c-tag-label>\n+ </c-tag>\n+ </c-stack>\n+</template>\n+<script>\n+export default {\n+ data() {\n+ return {\n+ sizes: ['sm', 'md', 'lg']\n+ }\n+ }\n+}\n+</script>\n+```\n+\n+## With right icon\n+\n+```vue live=true\n+<c-stack :spacing=\"4\" is-inline>\n+ <c-tag variant-color=\"cyan\">\n+ <c-tag-label>Cyan</c-tag-label>\n+ <c-tag-icon icon=\"check\" size=\"12px\" />\n+ </c-tag>\n+</c-stack>\n+```\n+\n+## With close button\n+\n+```vue live=true\n+<template>\n+ <c-stack :spacing=\"4\" is-inline>\n+ <c-tag\n+ v-for=\"size in sizes\"\n+ :size=\"size\"\n+ :key=\"size\"\n+ variant=\"solid\"\n+ variant-color=\"cyan\"\n+ >\n+ <c-tag-label>Close {{ size }}</c-tag-label>\n+ <c-tag-close-button />\n+ </c-tag>\n+ </c-stack>\n+</template>\n+<script>\n+export default {\n+ data() {\n+ return {\n+ sizes: ['sm', 'md', 'lg']\n+ }\n+ }\n+}\n+</script>\n+```\n+\n+## With custom element\n+\n+```vue live=true\n+<c-tag variant-color=\"red\" rounded=\"full\">\n+ <c-avatar\n+ src=\"https://bit.ly/sage-adebayo\"\n+ size=\"xs\"\n+ name=\"Segun Adebayo\"\n+ :ml=\"-1\"\n+ :mr=\"2\"\n+ />\n+ <c-tag-label>Segun</c-tag-label>\n+</c-tag>\n+```\n+\n+## Props\n+\n+| Name | Type | Default | Description |\n+| -------------- | ---------------------------- | -------- | --------------------------------------- |\n+| `variant` | `solid`, `subtle`, `outline` | `subtle` | The variant style of the tag component. |\n+| `size` | `sm`, `md`, `lg` | `lg` | The size of the tag component. |\n+| `variantColor` | `string` | `gray` | The color scheme of the tag variant. |\n",
        "date": "26.04.2020 20:48:30",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "chatgpt_zeroshot": "Add SEO component and update Tag component documentation"
    },
    {
        "msg": "docs: documentation for spinner component",
        "diff": "diff --git a/packages/chakra-ui-docs/docs/spinner.mdx b/packages/chakra-ui-docs/docs/spinner.mdx +import SEO from '../components/SEO'\n+\n+<SEO\n+ title=\"Spinner\"\n+ description=\"Spinners provide a visual cue that an action is processing awaiting a course of change or a result.\"\n+/>\n+\n# Spinner\n+\n+Spinners provide a visual cue that an action is processing awaiting a course of change or a result.\n+\n+## Import\n+\n+```js\n+import { CSpinner } from '@chakra-ui/vue'\n+```\n+\n+## Usage\n+\n+```vue live=true\n+<c-spinner />\n+```\n+\n+### Spinner with Color\n+\n+```vue live=true\n+<c-spinner color=\"blue.500\" />\n+```\n+\n+### Spinner with different size\n+\n+```vue live=true\n+<c-stack is-inline :spacing=\"4\">\n+ <c-spinner size=\"xs\" />\n+ <c-spinner size=\"sm\" />\n+ <c-spinner size=\"md\" />\n+ <c-spinner size=\"lg\" />\n+ <c-spinner size=\"xl\" />\n+</c-stack>\n+```\n+\n+### Spinner with empty area color\n+\n+```vue live=true\n+<c-spinner\n+ thickness=\"4px\"\n+ speed=\"0.65s\"\n+ empty-color=\"green.200\"\n+ color=\"vue.500\"\n+ size=\"xl\"\n+/>\n+```\n+\n+## Props\n+\n+| Name | Type | Default | Description |\n+| ---------- | ------------------------ | ------------- | --------------------------------------------------------------- |\n+| size | `xl`,`lg`,`md`,`sm`,`xs` | `md` | The size of the spinner. |\n+| thickness | `string` | `2px` | The thickness of the spinner. |\n+| speed | `string` | `0.45s` | The speed of the spinner. |\n+| label | `string` | `Loading...` | An accessible label for the spinner (Useful for screen readers) |\n+| color | `string` | | The color of the spinner. |\n+| emptyColor | `string` | `transparent` | The color of the empty areas in the spinner. |\n",
        "date": "26.04.2020 21:06:57",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "chatgpt_zeroshot": "Add SEO component and update Spinner documentation in spinner.mdx"
    },
    {
        "msg": "docs: documentation for the stat component",
        "diff": "diff --git a/packages/chakra-ui-docs/docs/stat.mdx b/packages/chakra-ui-docs/docs/stat.mdx +import SEO from '../components/SEO'\n+\n+<SEO\n+ title=\"Stat\"\n+ description=\"The Stat component is used to display a single statistic.\"\n+/>\n+\n# Stat\n+\n+The Stat component is used to display a single statistic.\n+\n+## Import\n+\n+```js\n+import {\n+ CStat,\n+ CStatLabel,\n+ CStatNumber,\n+ CStatHelpText,\n+ CStatArrow,\n+ CStatGroup\n+} from '@chakra-ui/vue'\n+```\n+\n+## Usage\n+\n+```vue live=true\n+<c-stat>\n+ <c-stat-label>Collected Fees</c-stat-label>\n+ <c-stat-number>$500.00</c-stat-number>\n+ <c-stat-helper-text>Feb 12 - Feb 28</c-stat-helper-text>\n+</c-stat>\n+```\n+\n+### Stat with Indicator\n+\n+```vue live=true\n+<c-stat-group>\n+ <c-stat>\n+ <c-stat-label>Sent</c-stat-label>\n+ <c-stat-number>380,610</c-stat-number>\n+ <c-stat-helper-text>\n+ <c-stat-arrow type=\"increase\" />\n+ 30.60%\n+ </c-stat-helper-text>\n+ </c-stat>\n+ <c-stat>\n+ <c-stat-label>Clicked</c-stat-label>\n+ <c-stat-number>45</c-stat-number>\n+ <c-stat-helper-text>\n+ <c-stat-arrow type=\"decrease\" />\n+ -5.20%\n+ </c-stat-helper-text>\n+ </c-stat>\n+</c-stat-group>\n+```\n+\n+## Props\n+\n+- StatLabel, StatHelpText, StatNumber composes [Text](/text) component\n+- StatArrow composes [CIcon](/icon) component\n+- Stat, StatGroup composes [CBox](/box) component\n",
        "date": "26.04.2020 21:28:23",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "chatgpt_zeroshot": "Add SEO component and update Stat component documentation"
    },
    {
        "msg": "docs: documentation for the Switch component",
        "diff": "diff --git a/packages/chakra-ui-docs/docs/switch.mdx b/packages/chakra-ui-docs/docs/switch.mdx +import SEO from '../components/SEO'\n+\n+<SEO\n+ title=\"Switch\"\n+ description=\"The Switch component is used as an alternative for the Checkbox component, switch between enabled or disabled states.\"\n+/>\n+\n# Switch\n+\n+The Switch component is used as an alternative for the [Checkbox](/checkbox) component, switch between enabled or disabled states.\n+\n+Switch must always be accompanied by a label, and follows the same keyboard workflow as a checkbox.\n+\n+## Import\n+\n+```js\n+import { CSwitch } from '@chakra-ui/vue'\n+```\n+\n+## Usage\n+\n+```vue live=true\n+<c-form-control>\n+ <c-form-label html-for=\"email-alerts\">Enable email alerts?</c-form-label>\n+ <c-switch id=\"email-alerts\" />\n+</c-form-control>\n+```\n+\n+## Sizes\n+\n+Pass the size prop to change the `size` of the switch.\n+\n+```vue live=true\n+<c-stack align=\"center\" is-inline>\n+ <c-switch size=\"sm\" />\n+ <c-switch size=\"md\" />\n+ <c-switch size=\"lg\" />\n+</c-stack>\n+```\n+\n+## Switch background color\n+\n+You can change the checked background color of the switch by passing the `color` prop.\n+\n+```vue live=true\n+<c-stack is-inline>\n+ <c-switch color=\"vue\" />\n+ <c-switch color=\"red\" size=\"lg\" />\n+</c-stack>\n+```\n+\n+## Props\n+\n+| Name | Type | Default | Description |\n+| ------------------ | ------------------- | ------- | ---------------------------------------------------- |\n+| `size` | `sm`, `md`, `lg` | | The size of the switch. |\n+| `color` | `string` | | The background color of the switch when checked. |\n+| `name` | `string` | | The input name of the switch when used in a form. |\n+| `value` | `string`, `boolean` | | The value of the switch. |\n+| `children` | `React.ReactNode` | | The children of the switch. |\n+| `aria-label` | `string` | | The aria-label of the switch for accessibility. |\n+| `aria-labelledby` | `string` | | The aria-labelledby of the switch for accessibility. |\n+| `isChecked` | `boolean` | | If `true`, set the switch to the checked state. |\n+| `defaultIsChecked` | `boolean` | | If `true`, the checkbox will be initially checked. |\n+| `isDisabled` | `boolean` | | If `true`, set the disabled to the invalid state. |\n+| `isInvalid` | `boolean` | | If `true`, set the switch to the invalid state. |\n",
        "date": "02.05.2020 16:25:16",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "chatgpt_zeroshot": "Add SEO component and update Switch documentation in switch.mdx"
    },
    {
        "msg": "docs(stack.mdx): documentation for the Stack component",
        "diff": "diff --git a/packages/chakra-ui-docs/docs/stack.mdx b/packages/chakra-ui-docs/docs/stack.mdx +import SEO from '../components/SEO'\n+\n+<SEO\n+ title=\"Stack\"\n+ description=\"Stack is a layout utility component that makes it easy to stack elements together and apply a space between them.\"\n+/>\n+\n# Stack\n+\n+Stack is a layout utility component that makes it easy to stack elements together and apply a space between them. It composes the [Flex](/flex) component.\n+\n+## Import\n+\n+```js\n+import { CStack } from '@chakra-ui/vue'\n+```\n+\n+By default, each item is stacked vertically. Stack clones it's children and passes the spacing to them using `margin-bottom` or `margin-right`.\n+\n+## Usage\n+\n+```vue live=true\n+<c-stack :spacing=\"5\">\n+ <c-box :p=\"5\" shadow=\"md\" border-width=\"1px\">\n+ <c-heading>See the Vue</c-heading>\n+ <c-text :mt=\"4\">Vue makes front-end development a breeze.</c-text>\n+ </c-box>\n+ <c-box :p=\"5\" shadow=\"md\" border-width=\"1px\">\n+ <c-heading>Go Nuxt!</c-heading>\n+ <c-text :mt=\"4\">Nuxt makes writing Vue even easier.</c-text>\n+ </c-box>\n+</c-stack>\n+```\n+\n+## Stack items horizontally\n+\n+To stack `CStack` children horizontally, pass the `isInline` prop or `direction` and set it to row.\n+\n+Optionally, you can use align and justify to adjust the alignment and distribution of the items.\n+\n+```vue live=true\n+<c-stack :spacing=\"5\" is-inline>\n+ <c-box :p=\"5\" shadow=\"md\" border-width=\"1px\">\n+ <c-heading>See the Vue</c-heading>\n+ <c-text :mt=\"4\">Vue makes front-end development a breeze.</c-text>\n+ </c-box>\n+ <c-box :p=\"5\" shadow=\"md\" border-width=\"1px\">\n+ <c-heading>Go Nuxt!</c-heading>\n+ <c-text :mt=\"4\">Nuxt makes writing Vue even easier.</c-text>\n+ </c-box>\n+</c-stack>\n+```\n+\n+## Reverse display order of items\n+\n+Pass the `isReversed` prop or set `direction` to `row-reverse` or `column-reverse`.\n+\n+```vue live=true\n+<c-stack :spacing=\"5\" is-reversed>\n+ <c-box :p=\"5\" shadow=\"md\" border-width=\"1px\">\n+ <c-heading>See the Vue</c-heading>\n+ <c-text :mt=\"4\">Vue makes front-end development a breeze.</c-text>\n+ </c-box>\n+ <c-box :p=\"5\" shadow=\"md\" border-width=\"1px\">\n+ <c-heading>Go Nuxt!</c-heading>\n+ <c-text :mt=\"4\">Nuxt makes writing Vue even easier.</c-text>\n+ </c-box>\n+</c-stack>\n+```\n+\n+## Props\n+\n+| Name | Type | Default | Description |\n+| -------------------- | ----------------------------- | ------- | ------------------------------------------------------------------------------------------------------------------------ |\n+| `isInline` | `boolean` | false | If `true` the items will be stacked horizontally. |\n+| `isReversed` | `boolean` | false | If `true` the items will be displayed in reverse order. |\n+| `direction` | `FlexProps[\"flexDirection\"]` | | The direction to stack the items. |\n+| `spacing` | `StyledSystem.MarginProps` | | The space between each stack item |\n+| `align` | `FlexProps[\"alignItems\"]` | | The alignment of the stack item. Similar to `align-items` |\n+| `justify` | `FlexProps[\"justifyContent\"]` | | The distribution of the stack item. Similar to `justify-content` |\n+| `shouldWrapChildren` | `boolean` | | If `true`, the children will be wrapped in a `Box` with `display: inline-block`, and the Box will take the spacing props |\n+\n+## Slots\n+\n+| Name | Description |\n+| ------- | ------------------------ |\n+| default | The content of the stack |\n",
        "date": "02.05.2020 22:27:16",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "chatgpt_zeroshot": "Add SEO component to Stack documentation and update usage instructions"
    },
    {
        "msg": "docs(simplegrid.mdx): documentation for SimpleGrid component",
        "diff": "diff --git a/packages/chakra-ui-docs/docs/simplegrid.mdx b/packages/chakra-ui-docs/docs/simplegrid.mdx +import SEO from '../components/SEO'\n+\n+<SEO\n+ title=\"SimpleGrid\"\n+ description=\"SimpleGrid provides a friendly interface to create responsive grid layouts with ease. It renders a div element with display: grid.\"\n+/>\n+\n# SimpleGrid\n+\n+SimpleGrid provides a friendly interface to create responsive grid layouts with ease. It renders a div element with display: grid.\n+\n+## Import\n+\n+```js\n+import { CSimpleGrid } from '@chakra-ui/vue'\n+```\n+\n+## Usage\n+\n+Specifying the number of columns for the grid layout.\n+\n+```vue live=true\n+<CSimpleGrid :columns=\"2\" :spacing=\"10\">\n+ <c-box background=\"green\" height=\"80px\"></c-box>\n+ <c-box background=\"green\" height=\"80px\"></c-box>\n+ <c-box background=\"green\" height=\"80px\"></c-box>\n+ <c-box background=\"green\" height=\"80px\"></c-box>\n+ <c-box background=\"green\" height=\"80px\"></c-box>\n+</CSimpleGrid>\n+```\n+\n+You can also make it responsive by passing array or object values into the\n+`columns` prop.\n+\n+```vue live=true\n+<c-simple-grid :columns=\"[2, null, 3]\" spacing=\"40px\">\n+ <c-box background=\"green\" height=\"80px\"></c-box>\n+ <c-box background=\"green\" height=\"80px\"></c-box>\n+ <c-box background=\"green\" height=\"80px\"></c-box>\n+ <c-box background=\"green\" height=\"80px\"></c-box>\n+ <c-box background=\"green\" height=\"80px\"></c-box>\n+</c-simple-grid>\n+```\n+\n+### Auto-responsive grid\n+\n+To make the grid responsive adjust automatically without passing `columns`,\n+simply pass the `minChildWidth` prop to specify the `min-width` a child should\n+have before adjusting the layout.\n+\n+This uses css grid `auto-fit` and `minmax()` internally.\n+\n+```vue live=true\n+<c-simple-grid min-child-width=\"120px\" spacing=\"40px\">\n+ <c-box background=\"green\" height=\"80px\"></c-box>\n+ <c-box background=\"green\" height=\"80px\"></c-box>\n+ <c-box background=\"green\" height=\"80px\"></c-box>\n+ <c-box background=\"green\" height=\"80px\"></c-box>\n+ <c-box background=\"green\" height=\"80px\"></c-box>\n+ <c-box background=\"green\" height=\"80px\"></c-box>\n+</c-simple-grid>\n+```\n+\n+### Changing the spacing for columns and rows\n+\n+Simply pass the `spacing` prop to change the row and column spacing between the\n+grid items. `SimpleGrid` also allows you pass `spacingX` and `spacingY` to\n+define the space between columns and rows respectively.\n+\n+```vue live=true\n+<c-simple-grid :columns=\"2\" spacing-x=\"40px\" spacing-y=\"20px\">\n+ <c-box background=\"green\" height=\"80px\"></c-box>\n+ <c-box background=\"green\" height=\"80px\"></c-box>\n+ <c-box background=\"green\" height=\"80px\"></c-box>\n+ <c-box background=\"green\" height=\"80px\"></c-box>\n+ <c-box background=\"green\" height=\"80px\"></c-box>\n+</c-simple-grid>\n+```\n+\n+## Props\n+\n+SimpleGrid composes `Box` so you can pass all the `Box` props and css grid props\n+with addition of these:\n+\n+| Name | Type | Default | Description |\n+| --------------- | --------------------------- | ------- | ------------------------------------------------------------------------------------------------------------------------------------- |\n+| `columns` | `number` | | The number of columns |\n+| `spacing` | `GridProps[\"gridGap\"]` | | The gap between the grid items |\n+| `spacingX` | `GridProps[\"gridGap\"]` | | The column gap between the grid items |\n+| `spacingY` | `GridProps[\"gridGap\"]` | | The row gap between the grid items |\n+| `minChildWidth` | `CSSProperties[\"minWidth\"]` | | The width at which child elements will break into columns. Pass a number for pixel values or a string for any other valid CSS length. |\n",
        "date": "02.05.2020 23:01:34",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "chatgpt_zeroshot": "Add SEO component and update SimpleGrid documentation"
    },
    {
        "msg": "docs(select.mdx): documentation for the Select component",
        "diff": "diff --git a/packages/chakra-ui-docs/docs/select.mdx b/packages/chakra-ui-docs/docs/select.mdx +import SEO from '../components/SEO'\n+\n+<SEO\n+ title=\"Select\"\n+ description=\"Select component is a component that allows users pick a value from predefined options. Ideally, it should be used when there are more than 5 options, otherwise you might consider using a radio group instead.\"\n+/>\n+\n# Select\n+\n+Select component is a component that allows users pick a value from predefined options. Ideally, it should be used when there are more than 5 options, otherwise you might consider using a radio group instead.\n+\n+## Import\n+\n+```js\n+import { CSelect } from '@chakra-ui/vue'\n+```\n+\n+## Usage\n+\n+## Usage\n+\n+Here's a basic usage of the Select component.\n+\n+```vue live=true\n+<template>\n+ <c-box mb=\"3\" w=\"300px\">\n+ <c-select v-model=\"burgerType\" placeholder=\"Select Burger\">\n+ <option value=\"grilled\">Grilled Backyard Burger</option>\n+ <option value=\"pub-style\">The Pub-Style Burger</option>\n+ <option value=\"jucy-lucy\">The Jucy Lucy</option>\n+ </c-select>\n+ </c-box>\n+</template>\n+<script>\n+export default {\n+ data() {\n+ return {\n+ burgerType: ''\n+ }\n+ }\n+}\n+</script>\n+```\n+\n+### Changing the size of the Select\n+\n+There are three sizes of select : large (48px), default (40px) and small (32px).\n+\n+```vue live=true\n+<c-stack :spacing=\"3\">\n+ <c-select placeholder=\"large size\" size=\"lg\" />\n+ <c-select placeholder=\"default size\" size=\"md\" />\n+ <c-select placeholder=\"small size\" size=\"sm\" />\n+</c-sack>\n+```\n+\n+### Changing the appearance of the Select\n+\n+Just like the input component, select comes in 3 variants, `outline`, `unstyled`\n+, `flushed` , and `filled`. Pass the `variant` prop and set it to either of\n+these values.\n+\n+```vue live=true\n+<c-stack :spacing=\"3\">\n+ <c-select variant=\"outline\" placeholder=\"Outline\" />\n+ <c-select variant=\"filled\" placeholder=\"Filled\" />\n+ <c-select variant=\"flushed\" placeholder=\"Flushed\" />\n+ <c-select variant=\"unstyled\" placeholder=\"Unstyled\" />\n+</c-stack>\n+```\n+\n+### Overriding the styles of the Select\n+\n+Even though the select comes with predefined styles, you can override pretty\n+much any property. Here's we'll override the background color.\n+\n+```vue live=true\n+<c-select\n+ backgroundColor=\"tomato\"\n+ borderColor=\"tomato\"\n+ color=\"white\"\n+ placeholder=\"Woohoo! A new background color!\"\n+/>\n+```\n+\n+## Props\n+\n+The Select component composes [PseudoBox](/pseudoBox) so you can pass all `PseudoBox` props.\n+\n+| Name | Type | Default | Description |\n+| ------------------ | ------------------------------------------ | -------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n+| `size` | `sm`, `md`, `lg` | `md` | The visual size of the `select` element. |\n+| `icon` | `string` | `chevron-down` | The icon to use in place if the `chevron-down` |\n+| `iconSize` | `BoxProps['size']` | `20px` | The visual size of the icon |\n+| `variant` | `outline`, `unstyled`, `flushed`, `filled` | `outline` | The variant of the select style to use. |\n+| `focusBorderColor` | `string` | | The border color when the select is focused. |\n+| `errorBorderColor` | `string` | | The border color when `isInvalid` is set to `true`. |\n+| `isDisabled` | `boolean` | `false` | If `true`, the select will be disabled. This sets `aria-disabled=true` and you can style this state by passing `_disabled` prop. |\n+| `isInvalid` | `boolean` | `false` | If `true`, the `select` will indicate an error. This sets `aria-invalid=true` and you can style this state by passing `_invalid` prop. |\n+| `isRequired` | `boolean` | `false` | If `true`, the select element will be required. |\n+| `isReadOnly` | `boolean` | `false` | If `true`, prevents the value of the select from being edited. |\n+| `rootProps` | `BoxProps` | | The props to pass to the wrapper of the select. The select is wrapped in a `Box` to help align the icon, if you want to pass some props to that wrapper, use this prop |\n+\n+## Slots\n+\n+| Name | Description |\n+| ------- | -------------------------------------------------------- |\n+| default | contains the `<option>` element as children of `CSelect` |\n",
        "date": "03.05.2020 19:31:31",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "chatgpt_zeroshot": "Add SEO component and update Select component documentation"
    },
    {
        "msg": "docs(slider.mdx): documentation of the Slider component",
        "diff": "diff --git a/packages/chakra-ui-docs/docs/slider.mdx b/packages/chakra-ui-docs/docs/slider.mdx +import SEO from '../components/SEO'\n+\n+<SEO\n+ title=\"Slider\"\n+ description=\"The Slider is used to allow users to make selections from a range of values.\"\n+/>\n+\n# Slider\n+\n+The Slider is used to allow users to make selections from a range of values.\n+\n+Sliders reflect a range of values along a bar, from which users may select a\n+single value. They are ideal for adjusting settings such as volume, brightness,\n+or applying image filters.\n+\n+## Import\n+\n+```js\n+import {\n+ CSlider,\n+ CSliderTrack,\n+ CSliderFilledTrack,\n+ CSliderThumb\n+} from '@chakra-ui/vue'\n+```\n+\n+## Usage\n+\n+```vue live=true\n+<c-slider default-value=\"56\">\n+ <c-slider-track />\n+ <c-slider-filled-track />\n+ <c-slider-thumb />\n+</c-slider>\n+```\n+\n+### Changing the slider color\n+\n+```vue live=true\n+<c-slider color=\"pink\" default-value=\"24\">\n+ <c-slider-track />\n+ <c-slider-filled-track />\n+ <c-slider-thumb />\n+</c-slider>\n+```\n+\n+## Props\n+\n+### Slider Props\n+\n+The `Slider` component wraps all it's children in the [Box](/box) component, so\n+you can pass all `Box` props to change it's style.\n+\n+| Name | Type | Default | Description |\n+| ------------------ | -------------------------- | ------- | ------------------------------------------------------------------------- |\n+| `value` | `number` | | The value of the slider. |\n+| `defaultValue` | `number` | | The initial value of the slider. |\n+| `max` | `number` | | Standard `input` max attribute. |\n+| `min` | `number` | | Standard `input` min attribute. |\n+| `step` | `number` | | Standard `input` step attribute. |\n+| `aria-label` | `string` | | The accessible label. |\n+| `aria-labelledby` | `string` | | The `id` of the element that labels the sliders |\n+| `aria-valuetext` | `string` | | The aria-valuetext of the switch for accessibility. |\n+| `orientation` | `string` | | The orientation of the slider, only `horizontal` is supported for now. |\n+| `getAriaValueText` | `(value: number ): string` | | The callback to format the `aria-valuetext`. |\n+| `size` | `sm`, `md`, `lg` | | The size of the slider. |\n+| `color` | `string` | | The color scheme to use for the slider. Use a color key in `theme.colors` |\n+| `name` | `string` | | The name of the slider component when used in a form. |\n+| `id` | `string` | | The id of the slider component when used in a form. |\n+\n+## Slider Events\n+\n+| Name | Description |\n+| ----------- | --------------------------------------------------------------- |\n+| `change` | Callback fired when the value of the slider changes. |\n+| `onFocus` | Callback fired when the thumb receives focus |\n+| `blur` | Callback fired when the thumb is blurred |\n+| `mouseDown` | Callback fired when the you mousedown on any part of the slider |\n+| `keyDown` | Callback fired when the you keydown on any part of the slider |\n+\n+## Slots\n+\n+| Name | Description |\n+| ------- | ------------------------------------ |\n+| default | Slot for the children of the slider. |\n+\n+### SliderThumb Props\n+\n+SliderThumb composes [PseudoBox](/pseudobox) so you can pass all PseudoBox props\n+to change it's style.\n+\n+### SliderFilledTrack Props\n+\n+SliderFilledTrack composes [PseudoBox](/pseudobox) so you can pass all PseudoBox\n+props to change it's style.\n+\n+### SliderTrack Props\n+\n+SliderTrack composes [Box](/box) so you can pass all Box props to change it's\n+style.\n",
        "date": "03.05.2020 21:56:16",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "chatgpt_zeroshot": "Add SEO component and update Slider documentation in slider.mdx"
    },
    {
        "msg": "docs(textarea.mdx): documentation of the Textarea component",
        "diff": "diff --git a/packages/chakra-ui-docs/docs/textarea.mdx b/packages/chakra-ui-docs/docs/textarea.mdx +import SEO from '../components/SEO'\n+\n+<SEO\n+ title=\"Textarea\"\n+ description=\"The Textarea component allows you to easily create multi-line text inputs.\"\n+/>\n+\n# Textarea\n+\n+The Textarea component allows you to easily create multi-line text inputs.\n+\n+## Import\n+\n+```js\n+import { CTextarea } from '@chakra-ui/vue'\n+```\n+\n+## Usage\n+\n+```vue live=true\n+<c-textarea placeholder=\"Here is a sample placeholder\" />\n+```\n+\n+## Disabled Textarea\n+\n+```vue live=true\n+<c-textarea is-disabled placeholder=\"Here is a sample placeholder\" />\n+```\n+\n+## Invalid Textarea\n+\n+```vue live=true\n+<c-textarea is-invalid placeholder=\"Here is a sample placeholder\" />\n+```\n+\n+## Props\n+\n+The Textarea composes the [Input](/input) component\n+\n+## Event\n+\n+| Name | Description |\n+| ------ | ------------------------------------------------------------- |\n+| change | Handles what happens when the content of the textarea changes |\n",
        "date": "03.05.2020 23:41:51",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "chatgpt_zeroshot": "Add SEO component and update Textarea documentation in textarea.mdx"
    },
    {
        "msg": "docs: added the C prefix",
        "diff": "diff --git a/packages/chakra-ui-docs/docs/tabs.mdx b/packages/chakra-ui-docs/docs/tabs.mdx @@ -9,7 +9,7 @@ import SEO from '../components/SEO'\nAn accessible tabs component.\n-The `Tab` and `TabPanel` elements are associated by their order in the tree.\n+The `CTab` and `CTabPanel` elements are associated by their order in the tree.\nNone of the components are empty wrappers, each is associated with a real DOM\nelement in the document, giving you maximum control over styling and\ncomposition.\n",
        "date": "08.05.2020 22:11:49",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "chatgpt_zeroshot": "Refactor tabs component to use CTab and CTabPanel elements"
    },
    {
        "msg": "docs: added docs for using Chakra UI Vue CLI plugin",
        "diff": "diff --git a/packages/chakra-ui-docs/docs/getting-started.mdx b/packages/chakra-ui-docs/docs/getting-started.mdx # Getting Started\nInstall Chakra UI and it's peer dependency, `emotion`\n+\n<br />\n```bash\nyarn add @chakra-ui/vue emotion\n```\n+\nor (with npm)\n```bash\nnpm install @chakra-ui/vue emotion --save\n```\n+### With Vue CLI plugin\n+\n+If you are using Vue CLI 3, then you can install Chakra UI and get a base setup using the Chakra UI [plugin](https://www.npmjs.com/package/vue-cli-plugin-chakra-ui).\n+\n+```bash\n+vue add chakra-ui\n+```\n+\n### With Nuxt.js\n-If you're using Nuxt, you need to install `@nuxtjs/emotion` package as well to server-side render your styles.\n+If you're using Nuxt, you need to install `@nuxtjs/emotion` package as well to server-side render your styles.\n```bash\nyarn add @chakra-ui/vue emotion @nuxtjs/emotion\n@@ -22,39 +32,37 @@ yarn add @chakra-ui/vue emotion @nuxtjs/emotion\nCreate a theme object to include custom color, typography, and layout values. Chakra UI comes with a default theme, so this step is optional.\n-\n-\n```js\n// example theme.js\nexport default {\n- breakpoints: [\"30em\", \"48em\", \"62em\", \"80em\"],\n+ breakpoints: ['30em', '48em', '62em', '80em'],\nfonts: {\nheading: '\"Avenir Next\", sans-serif',\n- body: \"system-ui, sans-serif\",\n- mono: \"Menlo, monospace\",\n+ body: 'system-ui, sans-serif',\n+ mono: 'Menlo, monospace'\n},\nfontSizes: {\n- xs: \"0.75rem\",\n- sm: \"0.875rem\",\n- md: \"1rem\",\n- lg: \"1.125rem\",\n- xl: \"1.25rem\",\n- \"2xl\": \"1.5rem\",\n- \"3xl\": \"1.875rem\",\n- \"4xl\": \"2.25rem\",\n- \"5xl\": \"3rem\",\n- \"6xl\": \"4rem\",\n- },\n-};\n+ xs: '0.75rem',\n+ sm: '0.875rem',\n+ md: '1rem',\n+ lg: '1.125rem',\n+ xl: '1.25rem',\n+ '2xl': '1.5rem',\n+ '3xl': '1.875rem',\n+ '4xl': '2.25rem',\n+ '5xl': '3rem',\n+ '6xl': '4rem'\n+ }\n+}\n```\n## Usage\n+\n**1. Import the Chakra UI plugin in your `main.js` file.**\nIn order to use Chakra, you need to wrap your main application inside the Chakra `CThemeProvider` component.\nYou can do so as shown below.\n-\n```js\nimport Vue from 'vue'\nimport Chakra, { CThemeProvider } from '@chakra-ui/vue'\n@@ -64,14 +72,12 @@ Vue.use(Chakra)\nnew Vue({\nel: '#app',\n- render: (h) => h(CThemeProvider, [\n- h(App)\n- ])\n+ render: (h) => h(CThemeProvider, [h(App)])\n}).$mount()\n```\n-\nIf you'd like to add extend the Chakra theme with custom brand colors you can do so as shown below. This is also optional.\n+\n<br />\n```js\n@@ -84,24 +90,22 @@ Vue.use(Chakra, {\ncolors: {\n...defaultTheme.colors,\nbrand: {\n- 900: \"#1a365d\",\n- 800: \"#153e75\",\n- 700: \"#2a69ac\",\n- },\n+ 900: '#1a365d',\n+ 800: '#153e75',\n+ 700: '#2a69ac'\n+ }\n}\n}\n})\nnew Vue({\nel: '#app',\n- render: (h) => h(CThemeProvider, [\n- h(App)\n- ])\n+ render: (h) => h(CThemeProvider, [h(App)])\n}).$mount()\n```\n-\n## Injecting Global Styles.\n+\nSometimes you may need to apply css reset styles to your application.\nChakra UI exports a `CReset` that'll remove browser default styles. It's heavily inspired by [Tailwind's preflight](https://unpkg.com/tailwindcss@1.1.2/dist/base.css)\n@@ -116,10 +120,7 @@ Vue.use(Chakra)\nnew Vue({\nel: '#app',\n- render: (h) => h(CThemeProvider, [\n- h(CReset),\n- h(App)\n- ])\n+ render: (h) => h(CThemeProvider, [h(CReset), h(App)])\n}).$mount()\n```\n@@ -150,10 +151,11 @@ export default {\n```\n### Codesandbox starters\n+\n- [Vue Starter](https://codesandbox.io/s/chakra-ui-vue-starter-2sy0g)\n- [Nuxt Starter](https://codesandbox.io/s/chakra-ui-nuxt-demo-f8tq4)\n- [Gridsome Starter](https://codesandbox.io/s/chakra-ui-gridsome-demo-038c9)\n-\n### Storybook Components\n+\nYou can also view all developed components in [Storybook](https://chakra-ui-vue.netlify.com)!\n",
        "date": "08.05.2020 22:25:19",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "chatgpt_zeroshot": "Add installation instructions for Chakra UI with Vue CLI plugin and update theme object in getting started guide."
    },
    {
        "msg": "docs: fixed typo in accessibility.mdx",
        "diff": "diff --git a/packages/chakra-ui-docs/docs/accessibility.mdx b/packages/chakra-ui-docs/docs/accessibility.mdx @@ -5,7 +5,7 @@ heavy-lifting for you in order to allow you to focus on building your applicati\nAll authored components are compliant with the WAI-ARIA standards for authored components.\n-We've written the time to write summarized description of the accessibility support for\n+We've taken the time to write summarized description of the accessibility support for\nall authored components in @chakra-ui/vue. We called this document an accessibility report\nand can be found in the `accessibility.md` file in the respective component's source directory.\n",
        "date": "08.05.2020 22:36:52",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "chatgpt_zeroshot": "Refactor accessibility documentation for @chakra-ui/vue components"
    },
    {
        "msg": "docs: fix broken contributors link",
        "diff": "diff --git a/packages/chakra-ui-docs/utils/all-routes.js b/packages/chakra-ui-docs/utils/all-routes.js @@ -78,8 +78,13 @@ export const aboutNavLinks = [\n'Contributing'\n]\n+export const footerLinks = [\n+ 'Contributors'\n+]\n+\nexport default [\n...topNavLinks,\n...aboutNavLinks,\n+ ...footerLinks,\n...components\n]\n",
        "date": "11.05.2020 03:11:10",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "chatgpt_zeroshot": "Add Contributors link to footer links in all-routes.js"
    },
    {
        "msg": "docs: updated installed version",
        "diff": "diff --git a/package.json b/package.json \"@babel/plugin-transform-modules-commonjs\": \"^7.7.4\",\n\"@babel/plugin-transform-parameters\": \"^7.7.4\",\n\"@babel/preset-env\": \"^7.9.5\",\n- \"@chakra-ui/vue\": \"^0.5.3\",\n+ \"@chakra-ui/vue\": \"^0.5.4\",\n\"@commitlint/cli\": \"^8.2.0\",\n\"@commitlint/config-conventional\": \"^8.2.0\",\n\"@fortawesome/free-brands-svg-icons\": \"^5.12.0\",\n",
        "date": "16.05.2020 21:05:46",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "chatgpt_zeroshot": "Update Chakra UI Vue to version 0.5.4 in package.json"
    },
    {
        "msg": "docs: add link to react website",
        "diff": "diff --git a/packages/chakra-ui-docs/components/Navbar.vue b/packages/chakra-ui-docs/components/Navbar.vue list-style-type=\"none\"\nml=\"auto\"\n>\n+ <CBox as=\"li\" mr=\"4\">\n+ <CLink color=\"gray.600\" :_hover=\"{ color : 'vue.400' }\" is-external href=\"https://chakra-ui.com/\">\n+ Chakra UI React\n+ </CLink>\n+ </CBox>\n<CBox as=\"li\" mr=\"4\">\n<CLink color=\"gray.500\" :_hover=\"{ color : 'vue.400' }\" is-external href=\"https://github.com/chakra-ui/chakra-ui-vue\">\n<CIcon name=\"github\" size=\"20px\" />\n",
        "date": "04.06.2020 18:15:00",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "chatgpt_zeroshot": "Add Chakra UI React link to Navbar component"
    },
    {
        "msg": "docs: fix typo on the front page",
        "diff": "diff --git a/packages/chakra-ui-docs/components/Hero.vue b/packages/chakra-ui-docs/components/Hero.vue is-external\nhref=\"https://chakra-ui.com/\"\n>\n- Looking for React.js verison?\n+ Looking for React.js version?\n</CLink>\n</CFlex>\n</CFlex>\n",
        "date": "09.06.2020 08:22:25",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "chatgpt_zeroshot": "Fix typo in Hero.vue component - changed \"verison\" to \"version\""
    },
    {
        "msg": "docs(stack): add stacking of html elements",
        "diff": "diff --git a/website/pages/stack.mdx b/website/pages/stack.mdx @@ -68,6 +68,19 @@ Pass the `isReversed` prop or set `direction` to `row-reverse` or `column-revers\n</c-stack>\n```\n+## Stacking HTML elements\n+The `CStack` element is able also to stack HTML elements. Internally it wraps HTML elements inside a `CBox` primitive\n+component and spaces it like it would any other Chakra component.\n+\n+```vue live=true\n+<c-stack :spacing=\"4\">\n+ <c-text>Chakra component 1</c-text>\n+ <p>HTML paragraph element</p>\n+ <h3>HTML heading element</h3>\n+ <c-text>Chakra component 2</c-text>\n+</c-stack>\n+```\n+\n## Props\n| Name | Type | Default | Description |\n",
        "date": "26.09.2020 22:28:20",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "chatgpt_zeroshot": "Add ability to stack HTML elements in CStack component"
    },
    {
        "msg": "docs(home): use github icon on landing page",
        "diff": "diff --git a/website/plugins/chakra-ui.js b/website/plugins/chakra-ui.js @@ -8,6 +8,7 @@ import {\nfePlay,\nfeExternalLink,\nfeGlobe,\n+ feGithub,\nfeMenu,\nfeLinkedin,\nfeSearch,\n@@ -49,7 +50,8 @@ Vue.use(Chakra.default, {\nfeEdit,\nfeSettings,\nfeTwitter,\n- feCoffee\n+ feCoffee,\n+ feGithub\n},\nextend: {\nstorybook: {\n",
        "date": "24.12.2020 14:55:06",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "chatgpt_zeroshot": "Add feGithub icon to Chakra UI plugin configuration"
    },
    {
        "msg": "docs: update nuxtjs/emotion version",
        "diff": "diff --git a/website/package.json b/website/package.json \"@emotion/css\": \"^11.0.0\",\n\"@mdx-js/vue-loader\": \"^1.6.1\",\n\"@nuxtjs/dotenv\": \"^1.4.0\",\n- \"@nuxtjs/emotion\": \"^0.0.1\",\n+ \"@nuxtjs/emotion\": \"^0.1.0\",\n\"@nuxtjs/now-builder\": \"^0.17.0\",\n\"@nuxtjs/google-analytics\": \"^2.4.0\",\n\"@nuxtjs/pwa\": \"^3.0.0-0\",\n",
        "date": "25.12.2020 16:49:50",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "chatgpt_zeroshot": "Update \"@nuxtjs/emotion\" to version 0.1.0"
    },
    {
        "msg": "docs(*): add missing comma in colormode import",
        "diff": "diff --git a/website/pages/color-mode.mdx b/website/pages/color-mode.mdx @@ -18,7 +18,7 @@ Below is an example of how to use the above variables:\nIn your main.js\n```js\nimport Vue from 'vue'\n-import Chakra, { CThemeProvider, CColorModeProvider CReset } from '@chakra-ui/vue'\n+import Chakra, { CThemeProvider, CColorModeProvider, CReset } from '@chakra-ui/vue'\nimport App from './App.vue'\nVue.use(Chakra)\n",
        "date": "05.02.2021 09:28:39",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "chatgpt_zeroshot": "Fix typo in import statement in color-mode.mdx"
    },
    {
        "msg": "docs: update vuepress docs with codesandbox starter",
        "diff": "diff --git a/website/pages/with-vuepress.mdx b/website/pages/with-vuepress.mdx @@ -74,7 +74,7 @@ export default ({\n}\n}\n})\n-})\n+}\n```\nNow you can wrap your main application inside the Chakra `CThemeProvider` component by creating a layout wrapper in `theme/layouts/Layout.vue`.\n@@ -105,7 +105,11 @@ export default {\n## Using Chakra components\n-_In your `App.vue` file._\n+You can now use Chakra in your custom components for your theme in either your `theme/components` folder (available to other theme components),\n+or your `theme/global-components` folder (available to your markdown pages as well as other components).\n+Learn more about theme inheritance in the [Vuepress documentation](https://vuepress.vuejs.org/theme/inheritance.html#inheritance-strategy)\n+\n+_In your `my-component.vue` file._\n```vue\n<template>\n@@ -120,7 +124,7 @@ _In your `App.vue` file._\nimport { CBox, CButton } from '@chakra-ui/vue'\nexport default {\n- name: 'App',\n+ name: 'MyComponent',\ncomponents: {\nCBox,\nCButton\n@@ -128,3 +132,13 @@ export default {\n}\n</script>\n```\n+\n+### Vuepress Codesandbox Starters\n+\n+Here's a link to sample component starter with Nuxt.js\n+\n+- [Vuepress Starter](https://codesandbox.io/s/chakra-ui-vuepress-starter-qx4up)\n+\n+### Storybook Components\n+\n+You can also view all developed components in [Storybook](https://chakra-ui-vue.netlify.com)!\n",
        "date": "16.03.2021 11:45:13",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "chatgpt_zeroshot": "Refactor Chakra UI integration and add component starter links"
    },
    {
        "msg": "docs(a11y): add  accessiblity report",
        "diff": "diff --git a/packages/chakra-ui-core/src/CButtonGroup/CButtonGroup.js b/packages/chakra-ui-core/src/CButtonGroup/CButtonGroup.js @@ -73,6 +73,7 @@ const CButtonGroup = {\nattrs: {\nd: 'inline-block',\n...data.attrs,\n+ role: 'group',\n'data-chakra-component': 'CButtonGroup'\n},\non: listeners\n",
        "date": "13.08.2021 14:26:00",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "chatgpt_zeroshot": "Add role attribute to CButtonGroup component"
    },
    {
        "msg": "docs: add margin to docs pages",
        "diff": "diff --git a/website/layouts/default.vue b/website/layouts/default.vue >\n<CReset />\n<Navbar />\n- <CFlex max-h=\"calc(100vh - 60px)\">\n+ <CFlex\n+ max-h=\"calc(100vh - 60px)\"\n+ max-w=\"1440px\"\n+ mx=\"auto\"\n+ >\n<Sidebar />\n<CBox\nid=\"main-content\"\n",
        "date": "17.08.2021 16:07:41",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "chatgpt_zeroshot": "Add max width and center align main content in default layout"
    },
    {
        "msg": "docs(theme): add config info to docs",
        "diff": "diff --git a/website/pages/theme.mdx b/website/pages/theme.mdx @@ -253,3 +253,25 @@ export default {\n},\n};\n```\n+\n+## Config\n+\n+The theme's config is to provide global settings that are used by different\n+parts of the Chakra UI system.\n+\n+| Property | Description | Default |\n+| ------------------------- | ----------------------------------------------------------------------------------------------------------- | -------- |\n+| `cssVarPrefix` | The prefix to use for the generated CSS custom properties | `chakra` |\n+| `initialColorMode` | The initial color mode your application should start with. <br reset/> Can be either `light` or `dark` mode | `light` |\n+| `useSystemColorMode` | If `true`, the chakra system will update color mode <br reset/> based on your system preferences | `false` |\n+\n+You can leverage the `extendTheme` function to override a specific theme config\n+property.\n+\n+```js\n+export default {\n+ config: {\n+ cssVarPrefix: \"ck\",\n+ },\n+};\n+```\n\\ No newline at end of file\n",
        "date": "21.09.2021 15:15:43",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "chatgpt_zeroshot": "Add theme config settings and update cssVarPrefix to \"ck\""
    },
    {
        "msg": "docs: update responsive-styles docs",
        "diff": "diff --git a/website/pages/responsive-styles.mdx b/website/pages/responsive-styles.mdx @@ -17,6 +17,26 @@ you provide array values to add mobile-first responsive styles.\n> We use the `@media(min-width)` media queries to ensure values are\n> mobile-first.\n+Responsive syntax relies on the breakpoints defined in the theme object. Chakra\n+UI provides default breakpoints, here's what it looks like:\n+\n+```js\n+const breakpoints = {\n+ sm: '30em', // 480px upwards\n+ md: '48em', // 768px upwards\n+ lg: '62em', // 992px upwards\n+ xl: '80em', // 1280px upwards\n+ '2xl': '96em' // 1536px upwards\n+}\n+```\n+\n+To make styles responsive, you can use either the array or object syntax.\n+\n+## The Array syntax\n+\n+All style props accept arrays as values for mobile-first responsive styles. This\n+is the recommended method.\n+\n```vue\n<template>\n<c-box\n@@ -76,28 +96,103 @@ It'll generate a CSS that looks like this\n}\n```\n-\n___NOTE___: In the shortcut example `'100%'` is used instead of `1` because in the default Chakra UI Vue theme, `theme.sizes[1] = 0.25rem`. This means that using a prop like `:width=\"1\"` will render a width of 4px and not `'100%'`\n-The equivalent of this style if you passed it as an object.\n+To interpret array responsive values, Chakra UI converts the values defined in `theme.breakpoints`\n+and sorts them in ascending order. Afterward, we map the\n+values defined in the array to the breakpoints\n```js\n-// First, create an alias for breakpoints\n-const breakpoints = [\"30em\", \"48em\", \"62em\", \"80em\"];\n-// aliases\n-breakpoints.sm = breakpoints[0];\n-breakpoints.md = breakpoints[1];\n-breakpoints.lg = breakpoints[2];\n-breakpoints.xl = breakpoints[3];\n+// This is the default breakpoint\n+const breakpoints = {\n+ sm: '30em',\n+ md: '48em',\n+ lg: '62em',\n+ xl: '80em',\n+ '2xl': '96em'\n+}\n+\n+// Internally, we transform to this\n+const breakpoints = ['0em', '30em', '48em', '62em', '80em', '96em']\n```\n+Here's how to interpret this syntax:\n-then\n+- `300px`: From `0em` upwards\n+- `400px`: From `30em` upwards\n+- `500px`: From `48em` upwards\n-```vue\n-<c-box :width=\"{ base: 1, sm: 1 / 2, md: 1 / 4 }\" />\n+> To skip certain breakpoints, you can pass `null` to any position in the array\n+> to avoid generating unnecessary CSS.\n+\n+## The Object syntax\n+\n+You can also define responsive values with breakpoint aliases in an object. Any\n+undefined alias key will define the base, non-responsive value.\n+\n+Let's say you have a `CText` that looks like this:\n+\n+```vue live=false\n+<c-text font-size='40px'>This is a text</c-text>\n+```\n+\n+To make the `fontSize` responsive using the object syntax, here's what you need\n+to do:\n+\n+```vue live=false\n+<c-text :font-size=\"{ base: '24px', md: '40px', lg: '56px' }\">\n+ This is responsive text\n+</c-text>\n+```\n+\n+> **Remember, Chakra UI uses the min-width media query for responsive design**.\n+> The breakpoints are: `sm = 30em`, `md = 48em`, `lg = 62em`, `xl = 80em`\n+\n+Here's how to interpret this syntax:\n+\n+- `base`: From `0em` upwards\n+- `md`: From `48em` upwards\n+- `lg`: From `62em` upwards\n+\n+## Customizing Breakpoints\n+\n+In some scenarios, you might need to define custom breakpoints for your\n+application. We recommended using common aliases like `sm`, `md`, `lg`, and\n+`xl`.\n+\n+To define custom breakpoints, pass them as an object containing the aliases.\n+\n+> Note: Ensure the css unit of your breakpoints are the same. Use all `px` or\n+> all `em`, don't mix them.\n+\n+```js\n+// 1. Import the utilities\n+import { extendTheme } from '@chakra-ui/vue'\n+\n+// 2. Update the breakpoints as key-value pairs\n+const customBreakpoints = {\n+ sm: '320px',\n+ md: '768px',\n+ lg: '960px',\n+ xl: '1200px',\n+ '2xl': '1536px'\n+}\n+\n+// 3. Extend the theme\n+Vue.use(Chakra, {\n+ extendTheme: {\n+ breakpoints: customBreakpoints\n+ ...\n+ }\n+}\n+\n+// 4. Now you can use the custom breakpoints\n+<c-box :width={ base: '100%', sm: '50%', md: '25%' } />\n```\n+> Note: If you're using **pixels** as breakpoint values make sure to **always**\n+> provide a value for the `2xl` breakpoint, which by its default pixels value is\n+> **\"1536px\"**.\n## Demo\n",
        "date": "30.12.2021 19:05:42",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "docs",
        "chatgpt_zeroshot": "Add responsive syntax and breakpoints documentation"
    },
    {
        "msg": "docs: change target in example code",
        "diff": "diff --git a/website/pages/docs/customization.md b/website/pages/docs/customization.md @@ -39,7 +39,7 @@ module.exports = function myRazzlePlugin(config, env, webpack, options) {\n// client only\n}\n- if (target === 'server') {\n+ if (target === 'node') {\n// server only\n}\n@@ -69,7 +69,7 @@ module.exports = function myRazzlePlugin(webpackConfig, env, webpack, options) {\n// client only\n}\n- if (target === 'server') {\n+ if (target === 'node') {\n// server only\n}\n@@ -148,7 +148,7 @@ module.exports = {\n// client only\n}\n- if (target === 'server') {\n+ if (target === 'node') {\n// server only\n}\n",
        "date": "22.07.2020 15:24:47",
        "repo": "jaredpalmer/razzle",
        "type": "docs",
        "chatgpt_zeroshot": "Update target check from 'server' to 'node' in customization.md"
    },
    {
        "msg": "docs: improve example readme",
        "diff": "diff --git a/examples/with-single-exposed-port/README.md b/examples/with-single-exposed-port/README.md @@ -55,3 +55,52 @@ module.exports = {\n},\n};\n```\n+\n+A bit more complex on a subpath behind a reverse nginx proxy:\n+\n+```nginxconf\n+http {\n+\n+ server {\n+ listen 8080; # or 80 or 443\n+ server_name _;\n+ location /razzle-dev { # no /, no regex\n+ return 302 /razzle-dev/; # a /\n+ }\n+ location /razzle-dev/ { # no regex\n+ proxy_pass http://127.0.0.1:3001/; # a /\n+ proxy_http_version 1.1;\n+ proxy_set_header Upgrade \\$http_upgrade;\n+ proxy_set_header Connection \"upgrade\";\n+ }\n+ location /razzle-dev/sockjs-node/ { # no regex\n+ proxy_pass http://127.0.0.1:3001; # no /\n+ proxy_http_version 1.1;\n+ proxy_set_header Upgrade \\$http_upgrade;\n+ proxy_set_header Connection \"upgrade\";\n+ }\n+ }\n+}\n+```\n+\n+```js\n+'use strict';\n+\n+module.exports = {\n+ modify(config, { target, dev }, webpack) {\n+ const appConfig = config; // stay immutable here\n+\n+ if (target === 'web' && dev) {\n+ appConfig.devServer.public = 'localhost:8080' // or 80 or 443\n+ appConfig.devServer.proxy = {\n+ context: () => true,\n+ target: 'http://localhost:3000'\n+ };\n+ appConfig.devServer.sockPath = '/razzle-dev/sockjs-node';\n+ }\n+\n+ return appConfig;\n+ },\n+};\n+\n+```\n",
        "date": "11.08.2020 01:16:31",
        "repo": "jaredpalmer/razzle",
        "type": "docs",
        "chatgpt_zeroshot": "Add configuration for a subpath behind a reverse nginx proxy"
    },
    {
        "msg": "docs: better order of instructions",
        "diff": "diff --git a/examples/with-single-exposed-port/README.md b/examples/with-single-exposed-port/README.md @@ -58,6 +58,33 @@ module.exports = {\nA bit more complex on a subpath behind a reverse nginx proxy:\n+\n+```js\n+'use strict';\n+\n+module.exports = {\n+ modify(config, { target, dev }, webpack) {\n+ const appConfig = config; // stay immutable here\n+\n+ if (target === 'web' && dev) {\n+ appConfig.devServer.public = 'localhost:8080' // or 80 or 443\n+ appConfig.devServer.proxy = {\n+ context: () => true,\n+ target: 'http://localhost:3000'\n+ };\n+ appConfig.devServer.sockPath = '/razzle-dev/sockjs-node';\n+ }\n+\n+ return appConfig;\n+ },\n+};\n+\n+```\n+\n+```bash\n+CLIENT_PUBLIC_PATH=http://localhost:8080/razzle-dev/ yarn start\n+```\n+\n```nginxconf\nhttp {\n@@ -82,25 +109,3 @@ http {\n}\n}\n```\n-\n-```js\n-'use strict';\n-\n-module.exports = {\n- modify(config, { target, dev }, webpack) {\n- const appConfig = config; // stay immutable here\n-\n- if (target === 'web' && dev) {\n- appConfig.devServer.public = 'localhost:8080' // or 80 or 443\n- appConfig.devServer.proxy = {\n- context: () => true,\n- target: 'http://localhost:3000'\n- };\n- appConfig.devServer.sockPath = '/razzle-dev/sockjs-node';\n- }\n-\n- return appConfig;\n- },\n-};\n-\n-```\n",
        "date": "11.08.2020 01:19:02",
        "repo": "jaredpalmer/razzle",
        "type": "docs",
        "chatgpt_zeroshot": "Refactor devServer configuration in README.md examples"
    },
    {
        "msg": "docs(plugin-typescript): add link to example",
        "diff": "diff --git a/packages/razzle-plugin-typescript/README.md b/packages/razzle-plugin-typescript/README.md @@ -22,6 +22,8 @@ module.exports = {\n};\n```\n+See full configuration in the [typescript example project](https://github.com/jaredpalmer/razzle/tree/master/examples/with-typescript).\n+\n### With custom options:\n```js\n",
        "date": "24.08.2020 11:54:53",
        "repo": "jaredpalmer/razzle",
        "type": "docs",
        "chatgpt_zeroshot": "Add link to full configuration in TypeScript example project in README"
    },
    {
        "msg": "docs: add info about options",
        "diff": "diff --git a/website/pages/docs/customization.md b/website/pages/docs/customization.md # Customization\n+## Options\n+\n+As of Razzle 3.2, you can modify some parts of Razzle with options.\n+\n+We show the default options here:\n+\n+```js\n+//./razzle.config.js\n+module.exports = {\n+ options: {\n+ cssPrefix: 'static/css',\n+ jsPrefix: 'static/js',\n+ mediaPrefix: 'static/media',\n+ },\n+};\n+```\n+\n+More options will be added in the future, some options now in experimental will be moved here.\n+\n## Plugins\nAs of Razzle 2.0, you can add your plugins to modify your setup.\n",
        "date": "28.08.2020 17:13:27",
        "repo": "jaredpalmer/razzle",
        "type": "docs",
        "chatgpt_zeroshot": "Add options for customization in Razzle 3.2"
    },
    {
        "msg": "docs(example): add now,json to docs for example",
        "diff": "diff --git a/examples/with-now-v2/README.md b/examples/with-now-v2/README.md @@ -44,6 +44,34 @@ Open the link written in the console.\nTake a look at `now.json`. We are uploading the result of the razzle build, and setting up the routes for the app entry point and all static resources.\n+```json\n+{\n+ \"version\": 2,\n+ \"name\": \"example\",\n+ \"builds\": [\n+ {\n+ \"src\": \"build/public/**\",\n+ \"use\": \"@now/static\"\n+ },\n+ {\n+ \"src\": \"build/server.js\",\n+ \"use\": \"@now/node-server\"\n+ }\n+ ],\n+ \"routes\": [\n+ { \"src\": \"/assets.json\", \"dest\": \"build/assets.json\" },\n+ { \"src\": \"/favicon.ico\", \"dest\": \"build/public/favicon.ico\" },\n+ { \"src\": \"/robots.txt\", \"dest\": \"build/public/robots.txt\" },\n+ { \"src\": \"/static/(.*)\", \"dest\": \"build/public/static/$1\" },\n+ { \"src\": \"/(.*)\", \"dest\": \"build/server.js\" }\n+\n+ ],\n+ \"env\": {\n+ \"NODE_ENV\": \"production\"\n+ }\n+}\n+```\n+\nWe are also setting the `NODE_ENV` environment variable. Most likely, your app will use other environment variables, beware you should not commit secrets like api keys and others into your repository. Take a look at now's documentation to understand what you should do in such cases.\n## Documentation\n",
        "date": "28.08.2020 17:21:50",
        "repo": "jaredpalmer/razzle",
        "type": "docs",
        "chatgpt_zeroshot": "Add now.json configuration for deployment and environment variables"
    },
    {
        "msg": "docs: was used",
        "diff": "diff --git a/website/pages/docs/customization.md b/website/pages/docs/customization.md @@ -129,7 +129,7 @@ module.exports = {\noptions: {\npluginOptions, // the options passed to the plugin ({ name:'pluginname', options: { key: 'value'}})\nrazzleOptions, // the modified options passed to Razzle in the `options` key in `razzle.config.js` (options: { key: 'value'})\n- webpackOptions // the modified options that will be used to configure webpack/ webpack loaders and plugins\n+ webpackOptions // the modified options that was used to configure webpack/ webpack loaders and plugins\n},\npaths // the modified paths that will be used by Razzle.\n}) {\n",
        "date": "28.08.2020 17:41:20",
        "repo": "jaredpalmer/razzle",
        "type": "docs",
        "chatgpt_zeroshot": "Update webpackOptions description in customization.md"
    },
    {
        "msg": "docs: no -- needed here",
        "diff": "diff --git a/website/pages/getting-started.mdx b/website/pages/getting-started.mdx @@ -65,6 +65,6 @@ If your application is running, and you need to manually restart your server, yo\n## Debugging with Inspector\n-- `npm start -- --inspect=[host:port]` This will start the node server and enable the inspector agent. The `=[host:port]` is optional and defaults to `=127.0.0.1:9229`. For more information, see [this](https://nodejs.org/en/docs/guides/debugging-getting-started/).\n+- `npm start --inspect=[host:port]` This will start the node server and enable the inspector agent. The `=[host:port]` is optional and defaults to `=127.0.0.1:9229`. For more information, see [this](https://nodejs.org/en/docs/guides/debugging-getting-started/).\n-- `npm start -- --inspect-brk=[host:port]` This is the same as `--inspect`, but will also break before user code starts. (to give a debugger time to attach before early code runs) For more information, see [this](https://nodejs.org/en/docs/guides/debugging-getting-started/).\n+- `npm start --inspect-brk=[host:port]` This is the same as `--inspect`, but will also break before user code starts. (to give a debugger time to attach before early code runs) For more information, see [this](https://nodejs.org/en/docs/guides/debugging-getting-started/).\n",
        "date": "22.09.2020 22:05:44",
        "repo": "jaredpalmer/razzle",
        "type": "docs",
        "chatgpt_zeroshot": "Update debugging commands in getting-started.mdx"
    },
    {
        "msg": "docs: document deprecation",
        "diff": "diff --git a/website/pages/docs/customization.md b/website/pages/docs/customization.md @@ -271,6 +271,8 @@ You can also extend the underlying webpack config. Create a file called `razzle.\nAll the hook functions supported in plugins is also supported here. We show only one function here for brevity.\n+In Razzle 3.3 `modify` was deprecated. In Razzle 4.0 it was replaced with `modifyWebpackConfig`.\n+\n```js\n// razzle.config.js\n",
        "date": "23.09.2020 15:45:03",
        "repo": "jaredpalmer/razzle",
        "type": "docs",
        "chatgpt_zeroshot": "Replace deprecated `modify` with `modifyWebpackConfig` in Razzle 4.0"
    },
    {
        "msg": "docs: fix link to babel preset",
        "diff": "diff --git a/website/pages/docs/customization.md b/website/pages/docs/customization.md @@ -238,7 +238,7 @@ Here's an example `.babelrc` file:\n}\n```\n-You can [take a look at this file](https://github.com/jaredpalmer/razzle/blob/next/packages/babel-preset-razzle/index.js) to learn about the presets included by `razzle/babel`.\n+You can [take a look at this file](https://github.com/jaredpalmer/razzle/blob/finch/packages/babel-preset-razzle/index.js) to learn about the presets included by `razzle/babel`.\nTo add presets/plugins **without configuring them**, you can do it this way:\n",
        "date": "24.09.2020 19:22:08",
        "repo": "jaredpalmer/razzle",
        "type": "docs",
        "chatgpt_zeroshot": "Update link to babel-preset-razzle file in customization.md"
    },
    {
        "msg": "docs: document 4.0 migration tips",
        "diff": "diff --git a/website/pages/docs/customization.md b/website/pages/docs/customization.md @@ -376,6 +376,24 @@ Razzle has support for some experimental features. Currently razzle has experime\nMore features may be added in the future and may become fully supported features.\n+### Razzle 4.0\n+\n+If you want to be ready for the Razzle 4.0 release you can enble some experimental features to be sure you build will work on 4.0.\n+\n+```js\n+// razzle.config.js\n+\n+module.exports = {\n+ experimental: {\n+ newBabel: true,\n+ newExternals: true,\n+ newSplitChunks: true,\n+ newContentHash: true,\n+ newMainFields: true,\n+ }\n+};\n+```\n+\n### To enable react refresh:\n```js\n",
        "date": "25.09.2020 16:42:59",
        "repo": "jaredpalmer/razzle",
        "type": "docs",
        "chatgpt_zeroshot": "Add support for experimental features in preparation for Razzle 4.0 release"
    },
    {
        "msg": "docs: reorder badges",
        "diff": "diff --git a/packages/razzle/README.md b/packages/razzle/README.md ![repo-banner](https://user-images.githubusercontent.com/4060187/28923990-050a32d4-782e-11e7-9da7-574ce5a8b455.png)\n-[![CircleCI](https://circleci.com/gh/jaredpalmer/razzle/tree/master.svg?style=shield)](https://circleci.com/gh/jaredpalmer/razzle/tree/master) [![npm](https://img.shields.io/npm/dm/razzle)](https://www.npmjs.com/package/razzle) [![Known Vulnerabilities](https://snyk.io/test/github/jaredpalmer/razzle/badge.svg?targetFile=package.json)](https://snyk.io/test/github/jaredpalmer/razzle?targetFile=package.json) ![Node CI](https://github.com/jaredpalmer/razzle/workflows/Node%20CI/badge.svg) [![GitHub version](https://badge.fury.io/gh/jaredpalmer%2Frazzle.svg)](https://badge.fury.io/gh/jaredpalmer%2Frazzle) ![Razzle-status](https://david-dm.org/jaredpalmer/razzle.svg?path=packages/razzle) [![license](https://badgen.now.sh/badge/license/MIT)](./LICENSE)\n+[![GitHub version](https://badge.fury.io/gh/jaredpalmer%2Frazzle.svg)](https://badge.fury.io/gh/jaredpalmer%2Frazzle) [![npm](https://img.shields.io/npm/dm/razzle)](https://www.npmjs.com/package/razzle) ![Node CI](https://github.com/jaredpalmer/razzle/workflows/Node%20CI/badge.svg) [![CircleCI](https://circleci.com/gh/jaredpalmer/razzle/tree/master.svg?style=shield)](https://circleci.com/gh/jaredpalmer/razzle/tree/master) [![Known Vulnerabilities](https://snyk.io/test/github/jaredpalmer/razzle/badge.svg?targetFile=package.json)](https://snyk.io/test/github/jaredpalmer/razzle?targetFile=package.json) ![Razzle-status](https://david-dm.org/jaredpalmer/razzle.svg?path=packages/razzle) [![license](https://badgen.now.sh/badge/license/MIT)](./LICENSE)\nUniversal JavaScript applications are tough to setup. Either you buy into a framework like [Next.js](https://github.com/zeit/next.js) or [react-server](https://github.com/redfin/react-server), fork a boilerplate, or set things up yourself. Aiming to fill this void, Razzle is a tool that abstracts all complex configuration needed for SSR into a single dependency--giving you the awesome developer experience of [create-react-app](https://github.com/facebookincubator/create-react-app), but then leaving the rest of your app's architectural decisions about frameworks, routing, and data fetching up to you. With this approach, Razzle not only works with React, but also Reason, Elm, Vue, Angular, and most importantly......whatever comes next.\n",
        "date": "05.10.2020 13:37:40",
        "repo": "jaredpalmer/razzle",
        "type": "docs",
        "chatgpt_zeroshot": "Update GitHub version badge in README.md"
    },
    {
        "msg": "docs: add back spectrum",
        "diff": "diff --git a/packages/razzle/README.md b/packages/razzle/README.md ![repo-banner](https://user-images.githubusercontent.com/4060187/28923990-050a32d4-782e-11e7-9da7-574ce5a8b455.png)\n-[![GitHub version](https://badge.fury.io/gh/jaredpalmer%2Frazzle.svg)](https://badge.fury.io/gh/jaredpalmer%2Frazzle) [![npm](https://img.shields.io/npm/dm/razzle)](https://www.npmjs.com/package/razzle) ![Node CI](https://github.com/jaredpalmer/razzle/workflows/Node%20CI/badge.svg) [![CircleCI](https://circleci.com/gh/jaredpalmer/razzle/tree/master.svg?style=shield)](https://circleci.com/gh/jaredpalmer/razzle/tree/master) [![Known Vulnerabilities](https://snyk.io/test/github/jaredpalmer/razzle/badge.svg?targetFile=package.json)](https://snyk.io/test/github/jaredpalmer/razzle?targetFile=package.json) ![Razzle-status](https://david-dm.org/jaredpalmer/razzle.svg?path=packages/razzle) [![license](https://badgen.now.sh/badge/license/MIT)](./LICENSE)\n+[![GitHub version](https://badge.fury.io/gh/jaredpalmer%2Frazzle.svg)](https://badge.fury.io/gh/jaredpalmer%2Frazzle) [![npm](https://img.shields.io/npm/dm/razzle)](https://www.npmjs.com/package/razzle) ![Node CI](https://github.com/jaredpalmer/razzle/workflows/Node%20CI/badge.svg) [![CircleCI](https://circleci.com/gh/jaredpalmer/razzle/tree/master.svg?style=shield)](https://circleci.com/gh/jaredpalmer/razzle/tree/master) [![Known Vulnerabilities](https://snyk.io/test/github/jaredpalmer/razzle/badge.svg?targetFile=package.json)](https://snyk.io/test/github/jaredpalmer/razzle?targetFile=package.json) ![Razzle-status](https://david-dm.org/jaredpalmer/razzle.svg?path=packages/razzle) [![license](https://badgen.now.sh/badge/license/MIT)](./LICENSE) [![Join the community on Spectrum](https://withspectrum.github.io/badge/badge.svg)](https://spectrum.chat/palmer)\nUniversal JavaScript applications are tough to setup. Either you buy into a framework like [Next.js](https://github.com/zeit/next.js) or [react-server](https://github.com/redfin/react-server), fork a boilerplate, or set things up yourself. Aiming to fill this void, Razzle is a tool that abstracts all complex configuration needed for SSR into a single dependency--giving you the awesome developer experience of [create-react-app](https://github.com/facebookincubator/create-react-app), but then leaving the rest of your app's architectural decisions about frameworks, routing, and data fetching up to you. With this approach, Razzle not only works with React, but also Reason, Elm, Vue, Angular, and most importantly......whatever comes next.\n",
        "date": "05.10.2020 17:27:27",
        "repo": "jaredpalmer/razzle",
        "type": "docs",
        "chatgpt_zeroshot": "Add Spectrum community badge to README.md"
    },
    {
        "msg": "docs: document compilerOptions.paths in ts/jsconfig",
        "diff": "diff --git a/website/pages/docs/customization.md b/website/pages/docs/customization.md @@ -414,10 +414,32 @@ To make the Jest test runner work with absolute imports, you'll need to add a `j\n```\nNow that you've configured your project to support absolute imports, if you want to import a module located at src/components/Button.js, you can import the module like so:\n+\n```js\nimport Button from 'components/Button';\n```\n+## Aliased Paths/ Modules\n+\n+You can configure your application to support importing modules using aliased paths. This can be done by configuring a jsconfig.json or tsconfig.json file in the root of your project. If you're using TypeScript in your project, you will already have a tsconfig.json file.\n+\n+```json\n+{\n+ \"compilerOptions\": {\n+ \"baseUrl\": \"src\",\n+ \"paths\": {\n+ \"@extra/*\": [\"../extra/*\"]\n+ }\n+ }\n+}\n+```\n+\n+Now that you've configured your project to support aliased imports, if you want to import a module located at extra/components/Button.js, you can import the module like so:\n+\n+```js\n+import Button from '@extra/components/Button';\n+```\n+\n## Experimental\nRazzle has support for some experimental features. Coming soon.\n",
        "date": "15.01.2021 13:46:21",
        "repo": "jaredpalmer/razzle",
        "type": "docs",
        "chatgpt_zeroshot": "Add support for aliased paths/modules in Jest test runner"
    },
    {
        "msg": "docs: document peerdependencies",
        "diff": "diff --git a/website/pages/getting-started.mdx b/website/pages/getting-started.mdx @@ -63,6 +63,24 @@ If your application is running, and you need to manually restart your server, yo\nalt=\"Razzle Hot Restart\"\n/>\n+## Dependencies\n+\n+To make sure razzle is installed properly make sure razzle peerdependencies are installed, run:\n+\n+```bash\n+yarn add razzle razzle-dev-utils babel-preset-razzle webpack-dev-server@3.11.0 mini-css-extract-plugin@0.9.0 --dev\n+```\n+\n+Choose your webpack version\n+\n+```bash\n+yarn add webpack@5.16.0 --dev\n+# or\n+yarn add webpack@4.46.0 --dev\n+```\n+\n+Also if there are issues, try adding specific package versions to resolutions in `package.json`.\n+\n## Debugging with Inspector\n- `npm start --inspect=[host:port]` This will start the node server and enable the inspector agent. The `=[host:port]` is optional and defaults to `=127.0.0.1:9229`. For more information, see [this](https://nodejs.org/en/docs/guides/debugging-getting-started/).\n",
        "date": "20.01.2021 18:31:04",
        "repo": "jaredpalmer/razzle",
        "type": "docs",
        "chatgpt_zeroshot": "Add instructions for installing razzle peerdependencies and choosing webpack version"
    },
    {
        "msg": "docs: document difference on -- with npm",
        "diff": "diff --git a/website/pages/getting-started.mdx b/website/pages/getting-started.mdx @@ -83,6 +83,6 @@ Also if there are issues, try adding specific package versions to resolutions in\n## Debugging with Inspector\n-- `npm start --inspect=[host:port]` This will start the node server and enable the inspector agent. The `=[host:port]` is optional and defaults to `=127.0.0.1:9229`. For more information, see [this](https://nodejs.org/en/docs/guides/debugging-getting-started/).\n+- `npm start -- --inspect=[host:port]` or `yarn start --inspect=[host:port]` This will start the node server and enable the inspector agent. The `=[host:port]` is optional and defaults to `=127.0.0.1:9229`. For more information, see [this](https://nodejs.org/en/docs/guides/debugging-getting-started/).\n-- `npm start --inspect-brk=[host:port]` This is the same as `--inspect`, but will also break before user code starts. (to give a debugger time to attach before early code runs) For more information, see [this](https://nodejs.org/en/docs/guides/debugging-getting-started/).\n+- `npm start -- --inspect-brk=[host:port]` or `yarn start --inspect-brk=[host:port]` This is the same as `--inspect`, but will also break before user code starts. (to give a debugger time to attach before early code runs) For more information, see [this](https://nodejs.org/en/docs/guides/debugging-getting-started/).\n",
        "date": "20.01.2021 19:31:54",
        "repo": "jaredpalmer/razzle",
        "type": "docs",
        "chatgpt_zeroshot": "Update start scripts to include double dash before inspector options"
    },
    {
        "msg": "docs: working azure deployment",
        "diff": "diff --git a/website/pages/deployment-options/azure.md b/website/pages/deployment-options/azure.md [Install the Azure CLI](https://docs.microsoft.com/en-us/cli/azure/install-azure-cli)\n+Add razzle config\n+\n+```js\n+// razzle.config.js\n+'use strict';\n+\n+module.exports = {\n+ options: {\n+ forceRuntimeEnvVars: ['HOST', 'PORT']\n+ }\n+};\n+```\n+\nCreate web.config\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<!--\n+ web.config\nThis configuration file is required if iisnode is used to run node processes behind\nIIS or IIS Express. For more information, visit:\nhttps://github.com/tjanczuk/iisnode/blob/master/src/samples/configuration/web.config\n@@ -66,10 +80,10 @@ Create web.config\n</configuration>\n```\n-Build the Razzle project\n+Zip the Razzle project\n```bash\n-yarn build\n+zip -r site.zip * -x \"build/*\" \"node_modules/*\"\n```\nLogin to Azure\n@@ -87,18 +101,21 @@ webappname=myRazzle$RANDOM\naz group create --location westeurope --name myResourceGroup\n# Create an App Service plan in `FREE` tier.\n-az appservice plan create --name myAppServicePlan --resource-group myResourceGroup --sku FREE\n+az appservice plan create --name myAppServicePlan --resource-group myResourceGroup --sku FREE --is-linux\n# Create a web app.\n-az webapp create --name $webappname --resource-group myResourceGroup --plan myAppServicePlan\n+az webapp create --name $webappname --resource-group myResourceGroup --plan myAppServicePlan --runtime \"node|12-lts\"\n+\n+# Enable building with zip deploy\n+az webapp config appsettings set --name $webappname --resource-group myResourceGroup --settings SCM_DO_BUILD_DURING_DEPLOYMENT=true\n# Get FTP publishing profile and query for publish URL and credentials\ncreds=($(az webapp deployment list-publishing-profiles --name $webappname --resource-group myResourceGroup \\\n---query \"[?contains(publishMethod, 'FTP')].[publishUrl,userName,userPWD]\" --output tsv))\n+--query \"[?contains(publishMethod, 'ZipDeploy')].[publishUrl,userName,userPWD]\" --output tsv))\n# Use cURL to perform FTP upload. You can use any FTP tool to do this instead.\n-curl -T index.html -u ${creds[1]}:${creds[2]} ${creds[0]}/\n+curl -X POST -u ${creds[1]}:${creds[2]} --data-binary @\"site.zip\" https://${creds[0]}/api/zipdeploy\n# Copy the result of the following command into a browser to see the static HTML site.\n-echo http://$webappname.azurewebsites.net\n+echo https://$webappname.azurewebsites.net\n```\n",
        "date": "24.01.2021 19:23:52",
        "repo": "jaredpalmer/razzle",
        "type": "docs",
        "chatgpt_zeroshot": "Add Razzle configuration and enable zip deployment for Azure deployment."
    },
    {
        "msg": "docs: work on aws deployment docs",
        "diff": "diff --git a/website/pages/deployment-options/aws.md b/website/pages/deployment-options/aws.md # Deploy Razzle on AWS\n+Add dependencies\n+\n+```bash\n+yarn add ts-node typescript @types/node aws-cdk @aws-cdk/core @aws-cdk/aws-s3 @aws-cdk/aws-s3-deployment @aws-cdk/aws-lambda @aws-cdk/aws-apigateway @aws-cdk/aws-ssm @aws-cdk/aws-secretsmanager --dev\n+```\n+\n+```jsonc\n+// cdk.json\n+{\n+ \"app\": \"npx ts-node --prefer-ts-exts bin/cdk.ts\",\n+ \"context\": {\n+ \"@aws-cdk/core:enableStackNameDuplicates\": \"true\",\n+ \"aws-cdk:enableDiffNoFail\": \"true\",\n+ \"@aws-cdk/core:stackRelativeExports\": \"true\",\n+ \"@aws-cdk/aws-ecr-assets:dockerIgnoreSupport\": true,\n+ \"@aws-cdk/aws-secretsmanager:parseOwnedSecretName\": true,\n+ \"@aws-cdk/aws-kms:defaultKeyPolicies\": true,\n+ \"@aws-cdk/aws-s3:grantWriteWithoutAcl\": true\n+ }\n+}\n+```\n+\n+\n+```typescript\n+// bin/cdk.ts\n+#!/usr/bin/env node\n+import 'source-map-support/register';\n+import * as cdk from '@aws-cdk/core';\n+import { RazzleStack } from '../lib/RazzleStack';\n+\n+const app = new cdk.App();\n+new RazzleStack(app, 'RazzleStack', {name:'basic'});\n+```\n+\n```typescript\n-// helpers.ts\n+// lib/helpers.ts\nimport * as SSM from '@aws-cdk/aws-ssm';\nimport * as CDK from '@aws-cdk/core';\n@@ -16,7 +50,7 @@ export interface ConfigProps extends CDK.StackProps {\nexport class ModeStack extends CDK.Stack {\npublic readonly mode: string = this.node.tryGetContext('mode') || 'development';\npublic readonly Mode: string =\n- this.node.tryGetContext('mode').replace(/^\\w/, (c: string) => c.toUpperCase()) || 'Development';\n+ this.mode.replace(/^\\w/, (c: string) => c.toUpperCase());\nconstructor(scope: CDK.Construct, id: string, props?: ConfigProps) {\nsuper(scope, id, props);\n@@ -25,7 +59,7 @@ export class ModeStack extends CDK.Stack {\n```\n```typescript\n-// RazzleStack.ts\n+// lib/RazzleStack.ts\nimport * as CDK from '@aws-cdk/core';\nimport * as S3 from '@aws-cdk/aws-s3';\nimport * as S3Deployment from '@aws-cdk/aws-s3-deployment';\n",
        "date": "24.01.2021 20:53:52",
        "repo": "jaredpalmer/razzle",
        "type": "docs",
        "chatgpt_zeroshot": "Add dependencies and update file paths for AWS deployment options"
    },
    {
        "msg": "docs: multi-line commands",
        "diff": "diff --git a/website/pages/deployment-options/azure.md b/website/pages/deployment-options/azure.md @@ -98,23 +98,41 @@ Deploy the Razzle project to Azure\nwebappname=myRazzle$RANDOM\n# Create a resource group.\n-az group create --location westeurope --name myResourceGroup\n+az group create \\\n+ --location westeurope \\\n+ --name myResourceGroup\n# Create an App Service plan in `FREE` tier.\n-az appservice plan create --name myAppServicePlan --resource-group myResourceGroup --sku FREE --is-linux\n+az appservice plan create --name myAppServicePlan \\\n+ --resource-group myResourceGroup \\\n+ --sku FREE \\\n+ --is-linux\n# Create a web app.\n-az webapp create --name $webappname --resource-group myResourceGroup --plan myAppServicePlan --runtime \"node|12-lts\"\n+az webapp create \\\n+ --name $webappname \\\n+ --resource-group myResourceGroup \\\n+ --plan myAppServicePlan \\\n+ --runtime \"node|12-lts\"\n# Enable building with zip deploy\n-az webapp config appsettings set --name $webappname --resource-group myResourceGroup --settings SCM_DO_BUILD_DURING_DEPLOYMENT=true\n-\n-# Get FTP publishing profile and query for publish URL and credentials\n-creds=($(az webapp deployment list-publishing-profiles --name $webappname --resource-group myResourceGroup \\\n---query \"[?contains(publishMethod, 'ZipDeploy')].[publishUrl,userName,userPWD]\" --output tsv))\n+az webapp config appsettings set \\\n+ --name $webappname \\\n+ --resource-group myResourceGroup \\\n+ --settings SCM_DO_BUILD_DURING_DEPLOYMENT=true\n+\n+# Get ZipDeploy publishing profile and query for publish URL and credentials\n+creds=($(az webapp deployment list-publishing-profiles \\\n+ --name $webappname \\\n+ --resource-group myResourceGroup \\\n+ --query \"[?contains(publishMethod, 'ZipDeploy')].[publishUrl,userName,userPWD]\" \\\n+ --output tsv))\n# Use cURL to perform http zip upload. You can use any http tool to do this instead.\n-curl -X POST -u ${creds[1]}:${creds[2]} --data-binary @\"site.zip\" https://${creds[0]}/api/zipdeploy\n+curl -X POST \\\n+ -u ${creds[1]}:${creds[2]} \\\n+ --data-binary @\"site.zip\" \\\n+ https://${creds[0]}/api/zipdeploy\n# Copy the result of the following command into a browser to see the static HTML site.\necho https://$webappname.azurewebsites.net\n",
        "date": "24.01.2021 21:42:13",
        "repo": "jaredpalmer/razzle",
        "type": "docs",
        "chatgpt_zeroshot": "Refactor Azure deployment script for better readability and maintainability"
    },
    {
        "msg": "docs: add plesk deployment info",
        "diff": "diff --git a/website/pages/deployment-options/plesk.md b/website/pages/deployment-options/plesk.md # Deploy Razzle on Plesk\n+\n+First make sure your Plesk install supports Node.js\n+\n+Go into the domain manager for your domain. Look on the icons below next to `Hosting Settings` there should be a green icon with `Node.js`.\n+\n+If this is not the case it may be disabled for you or not installed. Ask your host to enable it or install it like so:\n+\n+Under home click `Add or Remove Components`.\n+\n+Then click `Add/Remove Components` - Under `Web hosting` set `NodeJS support` and\n+`Phusion Passenger server` to `install` and click continue.\n+\n+After you made sure your Plesk supports Node.js add razzle config.\n+\n+```js\n+// razzle.config.js\n+'use strict';\n+\n+module.exports = {\n+ options: {\n+ forceRuntimeEnvVars: ['HOST', 'PORT']\n+ }\n+};\n+```\n+\n+Create `handler.js` in the app root\n+\n+```js\n+// handler.js\n+module.exports = require('./build/server.js');\n+```\n+\n+Build the Razzle project and make a tar archive\n+\n+```bash\n+yarn build\n+tar czvf site.tar.gz build package.json handler.js\n+```\n+\n+Go into `File Manager` for your domain on Plesk.\n+\n+Create a `site` directory in the `Home directory` upload the site.tar.gz here and extract it.\n+\n+Go into the domain manager for your domain. Click the `Node.js` icon.\n+\n+Set `Document Root` to `/site/build/public`, `Application Root` to `/site` and `Application Startup File` to `handler.js`.\n+\n+Then click `Enable Node.js` followed by `NPM Install` at the top.\n+\n+Go into the domain manager for your domain. Click `Open in web`.\n",
        "date": "24.01.2021 23:06:34",
        "repo": "jaredpalmer/razzle",
        "type": "docs",
        "chatgpt_zeroshot": "Add instructions for deploying Razzle on Plesk"
    },
    {
        "msg": "docs: better aws deploy",
        "diff": "diff --git a/website/pages/deployment-options/aws.md b/website/pages/deployment-options/aws.md # Deploy Razzle on AWS\n-Add dependencies\n-\n-```bash\n-yarn add ts-node typescript @types/node aws-cdk @aws-cdk/core @aws-cdk/aws-s3 @aws-cdk/aws-s3-deployment @aws-cdk/aws-lambda @aws-cdk/aws-apigateway @aws-cdk/aws-ssm @aws-cdk/aws-secretsmanager --dev\n-```\nAdd razzle config.\n@@ -25,77 +20,41 @@ Add this to `src/index.js`\nexport const handler = app;\n```\n-Add this to `package.json`\n+Build the Razzle project\n-```json\n-{\n- \"scripts\": {\n- \"cdk\": \"cdk\"\n- }\n-}\n+```bash\n+yarn build\n```\n-Add `cdk.json`\n+Init cdk app\n-```jsonc\n-// cdk.json\n-{\n- \"app\": \"npx ts-node --prefer-ts-exts bin/cdk.ts\",\n- \"context\": {\n- \"@aws-cdk/core:enableStackNameDuplicates\": \"true\",\n- \"aws-cdk:enableDiffNoFail\": \"true\",\n- \"@aws-cdk/core:stackRelativeExports\": \"true\",\n- \"@aws-cdk/aws-ecr-assets:dockerIgnoreSupport\": true,\n- \"@aws-cdk/aws-secretsmanager:parseOwnedSecretName\": true,\n- \"@aws-cdk/aws-kms:defaultKeyPolicies\": true,\n- \"@aws-cdk/aws-s3:grantWriteWithoutAcl\": true\n- }\n-}\n+```bash\n+mkdir razzle-cdk\n+cd razzle-cdk\n+\n+cdk init app --language typescript\n```\n-Add `tsconfig.json`\n+Add dependencies\n-```jsonc\n-// tsconfig.json\n-{\n- \"compilerOptions\": {\n- \"target\": \"ES2018\",\n- \"module\": \"commonjs\",\n- \"lib\": [\"es2018\"],\n- \"declaration\": true,\n- \"strict\": true,\n- \"noImplicitAny\": true,\n- \"strictNullChecks\": true,\n- \"noImplicitThis\": true,\n- \"alwaysStrict\": true,\n- \"noUnusedLocals\": false,\n- \"noUnusedParameters\": false,\n- \"noImplicitReturns\": true,\n- \"noFallthroughCasesInSwitch\": false,\n- \"inlineSourceMap\": true,\n- \"inlineSources\": true,\n- \"experimentalDecorators\": true,\n- \"strictPropertyInitialization\": false,\n- \"typeRoots\": [\"./node_modules/@types\"]\n- },\n- \"exclude\": [\"cdk.out\"]\n-}\n+```bash\n+yarn add @aws-cdk/aws-s3 @aws-cdk/aws-s3-deployment @aws-cdk/aws-lambda @aws-cdk/aws-apigateway @aws-cdk/aws-ssm @aws-cdk/aws-secretsmanager --dev\n```\n-Add `bin/cdk.ts`\n+Add `razzle-cdk/bin/razzle-cdk.ts`\n```typescript\n// bin/cdk.ts\n#!/usr/bin/env node\nimport 'source-map-support/register';\nimport * as cdk from '@aws-cdk/core';\n-import { RazzleStack } from '../lib/RazzleStack';\n+import { RazzleCdkStack } from '../lib/razzle-cdk-stack';\nconst app = new cdk.App();\n-new RazzleStack(app, 'RazzleStack', {name:'basic'});\n+new RazzleCdkStack(app, 'RazzleCdkStack', {name:'basic'});\n```\n-Add `lib/helpers.ts`\n+Add `razzle-cdk/lib/helpers.ts`\n```typescript\n// lib/helpers.ts\n@@ -121,7 +80,7 @@ export class ModeStack extends CDK.Stack {\n}\n```\n-Add `lib/RazzleStack.ts`\n+Add `razzle-cdk/lib/razzle-cdk-stack.ts`\n```typescript\n// lib/RazzleStack.ts\n@@ -135,7 +94,7 @@ import * as SecretsManager from '@aws-cdk/aws-secretsmanager';\nimport { ConfigProps, getParam, ModeStack } from './helpers';\n-export class RazzleStack extends ModeStack {\n+export class RazzleCdkStack extends ModeStack {\nconstructor(app: CDK.App, id: string, props: ConfigProps) {\nsuper(app, id, props);\n@@ -170,7 +129,7 @@ export class RazzleStack extends ModeStack {\n* Deploy public folder of build to `my-razzle-app-bucket-public-files-${this.mode}` bucket\n*/\nnew S3Deployment.BucketDeployment(this, `${publicBucketName}-deploy`, {\n- sources: [S3Deployment.Source.asset('./build/public')],\n+ sources: [S3Deployment.Source.asset('../build/public')],\ndestinationBucket: bucketPublicFiles,\n});\n@@ -203,7 +162,7 @@ export class RazzleStack extends ModeStack {\n*/\nconst myRazzleAppSsrFunction = new Lambda.Function(this, `MyRazzleAppSSRFunction${this.Mode}`, {\ndescription: `Lambda Function that runs My Razzle App SSR on ${this.Mode}`,\n- code: Lambda.Code.fromAsset('./build', {\n+ code: Lambda.Code.fromAsset('../build', {\nexclude: ['public', 'static', '*.json'],\n}),\nhandler: 'server.handler',\n@@ -244,3 +203,10 @@ export class RazzleStack extends ModeStack {\n}\n}\n```\n+\n+Bootstrap and deploy\n+\n+```bash\n+yarn cdk bootstrap\n+yarn cdk deploy\n+```\n",
        "date": "25.01.2021 01:08:52",
        "repo": "jaredpalmer/razzle",
        "type": "docs",
        "chatgpt_zeroshot": "Add Razzle deployment on AWS with CDK integration."
    },
    {
        "msg": "docs: better config modification",
        "diff": "diff --git a/website/pages/deployment-options/aws.md b/website/pages/deployment-options/aws.md @@ -12,17 +12,26 @@ module.exports = {\nbuildType: 'serverless'\n},\nmodifyPaths({\n- webpackObject,\n- options: {\n- razzleOptions,\n+ paths,\n+ }) {\n+ paths.prodAppServerIndexJs = path.join(paths.appSrc, 'index.prod');\n+ return paths;\n},\n+ modifyWebpackConfig({\n+ env: {\n+ target,\n+ dev,\n+ },\n+ webpackConfig,\npaths,\n}) {\n- if (process.env.NODE_ENV === 'production') {\n- paths.appServerIndexJs = path.join(paths.appSrc, 'index.prod');\n+ if (target === 'node') {\n+ if (!dev) {\n+ webpackConfig.entry.server = [paths.prodAppServerIndexJs];\n}\n- return paths;\n}\n+ return webpackConfig;\n+ },\n};\n```\n",
        "date": "25.01.2021 23:47:07",
        "repo": "jaredpalmer/razzle",
        "type": "docs",
        "chatgpt_zeroshot": "\"Update AWS deployment options for serverless build type and modify webpack configuration for server-side rendering\""
    },
    {
        "msg": "docs: update contributing",
        "diff": "diff --git a/.github/CONTRIBUTING.md b/.github/CONTRIBUTING.md @@ -41,20 +41,26 @@ git clone https://github.com/<YOUR_GITHUB_USERNAME>/razzle.git\ncd razzle\ngit checkout -B <my-branch>\nNODE_ENV=development yarn install ---ignore-engines\n+# optionally install add-dependencies\n+sudo npm install add-dependencies -g\n```\nThis will install all `node_modules` in all the packages and all the examples and symlink\ninter-dependencies. Thus when you make local changes in any of the packages you can try them\n-immediately in all the examples.\n+immediately in all the examples. `add-dependencies` can be used to just add packages to `package.json`.\n### Commands\n-- `yarn run clean`: Clean up all `node_modules` and remove all symlinks from packages and examples.\n-- `yarn run bootstrap`: Run `yarn` on all examples and packages. Automatically symlinks inter-dependent modules.\n-- `yarn run test`: Runs all tests\n-- `yarn run test:packages`: Runs tests for packages\n-- `yarn run test:e2e`: Runs end-to-end tests\n-- `yarn run build-docs`: Builds docs/ updates doc TOC\n+- `yarn clean`: Clean up all `node_modules` and remove all symlinks from packages and examples.\n+- `yarn bootstrap`: Run `yarn` on all packages. Automatically symlinks inter-dependent modules.\n+- `yarn test`: Runs all tests\n+- `yarn test:packages`: Runs tests for packages\n+- `yarn test:e2e`: Runs end-to-end tests\n+- `yarn build-docs`: Builds docs/ updates doc TOC\n+- `yarn bootstrap-examples`: Run `yarn` with specific examples as workspaces. Automatically symlinks inter-dependent modules. Run `yarn restrap` in the example to reinstall.\n+- `yarn new-example`: Creates a new example from another example. `yarn new-example basic new-example`.\n+- `yarn publish-all-stable`: Does a a stable release\n+- `yarn publish-all-canary`: Does a `razzle@canary` release.\n### Updating your fork\n@@ -68,7 +74,7 @@ git pull origin master\n## Adding examples\n### Use `examples/basic` as template\n-If you'd like to add an example, I suggest you duplicate the `examples/basic` folder and use that as kind of base template. Before you start adding stuff, go ahead and change the name of the package in the your new example's `package.json`. Then go back to the project root and run `yarn bootstrap`. This will make sure that your new example is using your local version of all the `packages`.\n+If you'd like to add an example, I suggest you duplicate the `examples/basic` folder `yarn new-example basic your-example`and use that as kind of base template. Before you start adding stuff, go ahead and change the name of the package in the your new example's `package.json`. Then go back to the project root and run `yarn bootstrap-examples your-example`. This will make sure that your new example is using your local version of all the `packages`.\n### Naming examples\n",
        "date": "28.01.2021 00:15:38",
        "repo": "jaredpalmer/razzle",
        "type": "docs",
        "chatgpt_zeroshot": "Update CONTRIBUTING.md with new yarn commands and instructions for adding examples"
    },
    {
        "msg": "docs: fix contributing",
        "diff": "diff --git a/.github/CONTRIBUTING.md b/.github/CONTRIBUTING.md @@ -73,7 +73,7 @@ git pull origin master\n## Adding examples\n-### Use `examples/basic` as template\n+### Use examples/basic as template\nIf you'd like to add an example, I suggest you duplicate the `examples/basic` folder `yarn new-example basic your-example`and use that as kind of base template. Before you start adding stuff, go ahead and change the name of the package in the your new example's `package.json`. Then go back to the project root and run `yarn bootstrap-examples your-example`. This will make sure that your new example is using your local version of all the `packages`.\n### Naming examples\n",
        "date": "28.01.2021 00:30:41",
        "repo": "jaredpalmer/razzle",
        "type": "docs",
        "chatgpt_zeroshot": "Fix formatting in CONTRIBUTING.md for consistency"
    },
    {
        "msg": "docs: fix toc",
        "diff": "diff --git a/.github/CONTRIBUTING.md b/.github/CONTRIBUTING.md @@ -11,7 +11,7 @@ Hi there! Thanks for your interest in Razzle. This guide will help you get start\n- [Commands](#commands)\n- [Updating your fork](#updating-your-fork)\n- [Adding examples](#adding-examples)\n- - [Use `examples/basic` as template](#use-examplesbasic-as-template)\n+ - [Use `examples/basic` as template](#use-examples-basic-as-template)\n- [Naming examples](#naming-examples)\n- [How to get your example merged](#how-to-get-your-example-merged)\n- [Guidelines](#guidelines)\n",
        "date": "28.01.2021 00:32:04",
        "repo": "jaredpalmer/razzle",
        "type": "docs",
        "chatgpt_zeroshot": "Fix formatting in CONTRIBUTING.md"
    },
    {
        "msg": "docs: add more info in export command",
        "diff": "diff --git a/website/pages/getting-started.mdx b/website/pages/getting-started.mdx @@ -51,7 +51,7 @@ By default, runs tests related to files changed since the last commit.\n### npm export\n-Exports a static version of the application in production mode.\n+Exports a static version of the application in production mode. Must add the `export` command to `package.json`'s scripts along with a `static_export.js` file in the `src` directory. See [Static Site Generation](https://razzlejs.org/docs/static-export/) for more details.\n### rs\n",
        "date": "01.02.2021 15:16:59",
        "repo": "jaredpalmer/razzle",
        "type": "docs",
        "chatgpt_zeroshot": "Add instructions for setting up static export in npm script"
    },
    {
        "msg": "docs: update contributing with workflow",
        "diff": "diff --git a/.github/CONTRIBUTING.md b/.github/CONTRIBUTING.md @@ -56,10 +56,62 @@ immediately in all the examples. `add-dependencies` can be used to just add pack\n- `yarn test:packages`: Runs tests for packages\n- `yarn test:e2e`: Runs end-to-end tests\n- `yarn build-docs`: Builds docs/ updates doc TOC\n-- `yarn bootstrap-examples`: Run `yarn` with specific examples as workspaces. Automatically symlinks inter-dependent modules. Run `yarn restrap` in the example to reinstall.\n-- `yarn new-example`: Creates a new example from another example. `yarn new-example basic new-example`.\n-- `yarn publish-all-stable`: Does a a stable release\n- `yarn publish-all-canary`: Does a `razzle@canary` release.\n+- `yarn publish-all-stable`: Does a a stable release(uses the npm version released of the packages)\n+- `yarn new-example`: Creates a new example from another example. `yarn new-example basic new-example`.\n+- `yarn bootstrap-examples`: Run `yarn` with specific examples as workspaces. Automatically symlinks inter-dependent modules. Run `yarn restrap` in the example to reinstall.\n+- `yarn test:examples:simple`: Runs tests for all simple examples (uses the npm version released of the packages)\n+- `yarn test:examples:complex`: Runs tests for all complex examples (uses the npm version released of the packages)\n+- `yarn test:examples`: Runs tests for all examples (uses the npm version released of the packages)\n+\n+### Workflow for working on razzle core with examples\n+\n+```bash\n+\n+git clone https://github.com/<YOUR_GITHUB_USERNAME>/razzle.git\n+cd razzle\n+git checkout <my-branch>\n+NODE_ENV=development yarn install ---ignore-engines\n+\n+sudo npm install add-dependencies -g\n+\n+pwd\n+# /home/oyvind/Documents/GitHub/razzle/\n+\n+yarn install\n+\n+# to make sure tests pass\n+yarn test --runInBand\n+\n+# to add a new example\n+yarn new-example existingexample with-somefeature\n+\n+# to work on a example\n+cd examples/basic\n+example=\"$(basename $PWD)\"\n+pushd ../..\n+\n+# if it is a example with webpack5 you need to do\n+yarn add -W webpack@5.16.0\n+\n+# switch back to webpack4 later to work with webpack4\n+yarn add -W webpack@4.46.0\n+\n+# then\n+yarn bootstrap-examples $example\n+popd\n+yarn build\n+\n+# if you want to add dependencies to the example\n+add-dependencies somedependency\n+yarn restrap\n+\n+# if you make changes to startserver plugin\n+pushd ../..\n+cd packages/razzle-start-server-webpack-plugin\n+yarn build\n+popd\n+```\n### Updating your fork\n",
        "date": "13.02.2021 19:27:59",
        "repo": "jaredpalmer/razzle",
        "type": "docs",
        "chatgpt_zeroshot": "Update yarn commands and workflow for working on razzle core with examples"
    },
    {
        "msg": "docs: document new build functionality",
        "diff": "diff --git a/website/pages/getting-started.mdx b/website/pages/getting-started.mdx @@ -42,6 +42,12 @@ Builds the app for production to the build folder.\nThe build is minified and the filenames include the hashes.\nYour app is ready to be deployed!\n+By default this uses NODE_ENV=production and asks if you want to run it.\n+\n+If you nont want the confirmation add --noninteractive to your build command.\n+\n+If you want to use a different env file e.g. .env.something-staging file you can add --node-env=something-staging\n+\n### npm run start:prod\nRuns the compiled app in production.\n",
        "date": "22.02.2021 00:35:49",
        "repo": "jaredpalmer/razzle",
        "type": "docs",
        "chatgpt_zeroshot": "Add options for non-interactive build and custom env file usage"
    },
    {
        "msg": "docs: add common problems",
        "diff": "diff --git a/website/pages/getting-started.mdx b/website/pages/getting-started.mdx @@ -91,6 +91,20 @@ yarn add webpack@4.46.0 --dev\nAlso if there are issues, try adding specific package versions to resolutions in `package.json`.\n+## Common problems\n+\n+If you have issues with css this might be related to postcss being resolved wrong.\n+\n+To fix this add:\n+\n+```json\n+{\n+ \"postcss\": \"8.2.4\"\n+}\n+```\n+\n+To resolutions in your package.json. For npm see [here]( https://stackoverflow.com/questions/52416312/npm-equivalent-of-yarn-resolutions).\n+\n## Debugging with Inspector\n- `npm start -- --inspect=[host:port]` or `yarn start --inspect=[host:port]` This will start the node server and enable the inspector agent. The `=[host:port]` is optional and defaults to `=127.0.0.1:9229`. For more information, see [this](https://nodejs.org/en/docs/guides/debugging-getting-started/).\n",
        "date": "22.02.2021 00:43:53",
        "repo": "jaredpalmer/razzle",
        "type": "docs",
        "chatgpt_zeroshot": "Add resolution for postcss in package.json to fix css issues"
    },
    {
        "msg": "docs: add link to common problems",
        "diff": "diff --git a/packages/razzle/config/loadRazzleConfig.js b/packages/razzle/config/loadRazzleConfig.js @@ -11,7 +11,7 @@ const loadPlugins = require('./loadPlugins');\nmodule.exports = (webpackObject, razzleConfig, packageJsonIn) => {\nreturn new Promise(async resolve => {\nconsole.info(\"If you have issues with css make sure postcss resolves to v8.2.4.\");\n- console.info(\"See: \\n\");\n+ console.info(\"See: https://razzlejs.org/getting-started#common-problems\\n\");\nconsole.warn(\"CssMinimizerPlugin currently uses clean-css,\\nwe will switch to cssnano once it supports postcss v8.2.4.\\n\");\nlet razzle = razzleConfig || {};\n",
        "date": "22.02.2021 00:48:01",
        "repo": "jaredpalmer/razzle",
        "type": "docs",
        "chatgpt_zeroshot": "Update console.info message with link to common problems in loadRazzleConfig.js"
    },
    {
        "msg": "docs: add examples to readme",
        "diff": "diff --git a/packages/razzle/README.md b/packages/razzle/README.md @@ -8,6 +8,12 @@ Universal JavaScript applications are tough to setup. Either you buy into a fram\nVisit <a aria-label=\"razzle getting started\" href=\"https://razzle-git-canary.jared.vercel.app/getting-started\">https://razzle-git-canary.jared.vercel.app/getting-started</a> to get started with Razzle.\n+## Examples\n+\n+Razzle has many examples, we might have one that fits your needs\n+\n+See: [The examples](https://github.com/jaredpalmer/razzle/tree/master/examples)\n+\n## Documentation\nVisit <a aria-label=\"razzle docs\" href=\"https://razzle-git-canary.jared.vercel.app/\">https://razzle-git-canary.jared.vercel.app/</a> to view the documentation.\n",
        "date": "22.02.2021 15:28:31",
        "repo": "jaredpalmer/razzle",
        "type": "docs",
        "chatgpt_zeroshot": "Add examples section to README.md"
    },
    {
        "msg": "docs: fix error in docs",
        "diff": "diff --git a/website/pages/docs/upgrade-guide.md b/website/pages/docs/upgrade-guide.md @@ -6,11 +6,13 @@ Update/add razzle core dependencies\n```bash\nyarn add --dev \\\n- webpack-dev-server@3.11.0 \\\n- mini-css-extract-plugin@0.9.0 \\\n- postcss@8.2.4\n+ razzle \\\n+ razzle-dev-utils \\\n+ babel-preset-razzle\n```\n+... and Razzle peerDependencies\n+\nUpdate/add razzle peerdependencies\n```bash\n",
        "date": "02.03.2021 18:48:37",
        "repo": "jaredpalmer/razzle",
        "type": "docs",
        "chatgpt_zeroshot": "Update Razzle core dependencies and peerDependencies"
    },
    {
        "msg": "docs: document externals and css imports",
        "diff": "diff --git a/website/pages/getting-started.mdx b/website/pages/getting-started.mdx @@ -103,7 +103,7 @@ yarn add --dev webpack@4.46.0 html-webpack-plugin@4.5.2\nAlso if there are issues, try adding specific package versions to resolutions in `package.json`.\n-## Common problems\n+## Common issues\nIf you have issues with css this might be related to postcss being resolved wrong.\n@@ -115,6 +115,42 @@ To fix this add:\n}\n```\n+If you get a error like this:\n+\n+```\n+node_modules/react-images-upload/index.css:1\n+.fileUploader {\n+^\n+\n+SyntaxError: Unexpected token '.'\n+ at wrapSafe (internal/modules/cjs/loader.js:1072:16)\n+```\n+\n+It means node tries to use `index.css` as a node module.\n+\n+To fix this make sure the module with the css is not externalized.\n+\n+```js\n+// razzle.config.js\n+'use strict';\n+\n+module.exports = {\n+ modifyWebpackOptions({\n+ options: {\n+ webpackOptions, // the modified options that was used to configure webpack/ webpack loaders and plugins\n+ }\n+ }) {\n+\n+ // If you use experimental.newExternals\n+ webpackOptions.notNodeExternalResMatch = (request, context) => {\n+ return /react-images-upload/.test(request)\n+ };\n+\n+ return webpackOptions;\n+ },\n+};\n+```\n+\nTo resolutions in your package.json. For npm see [here](https://stackoverflow.com/questions/52416312/npm-equivalent-of-yarn-resolutions).\n## Debugging with Inspector\n",
        "date": "13.03.2021 15:17:49",
        "repo": "jaredpalmer/razzle",
        "type": "docs",
        "chatgpt_zeroshot": "Fix common issues with css and node module resolution"
    },
    {
        "msg": "docs: add back lost line",
        "diff": "diff --git a/website/pages/getting-started.mdx b/website/pages/getting-started.mdx @@ -114,6 +114,7 @@ To fix this add:\n\"postcss\": \"8.2.4\"\n}\n```\n+To resolutions in your package.json. For npm see [here](https://stackoverflow.com/questions/52416312/npm-equivalent-of-yarn-resolutions).\nIf you get a error like this:\n",
        "date": "13.03.2021 15:22:45",
        "repo": "jaredpalmer/razzle",
        "type": "docs",
        "chatgpt_zeroshot": "Add resolutions to package.json to fix postcss version issue"
    },
    {
        "msg": "docs: remove comment",
        "diff": "diff --git a/website/pages/getting-started.mdx b/website/pages/getting-started.mdx @@ -142,7 +142,6 @@ module.exports = {\n}\n}) {\n- // If you use experimental.newExternals\nwebpackOptions.notNodeExternalResMatch = (request, context) => {\nreturn /react-images-upload/.test(request)\n};\n",
        "date": "13.03.2021 16:01:32",
        "repo": "jaredpalmer/razzle",
        "type": "docs",
        "chatgpt_zeroshot": "Remove experimental.newExternals configuration for webpackOptions"
    },
    {
        "msg": "docs: remove stray line",
        "diff": "diff --git a/website/pages/getting-started.mdx b/website/pages/getting-started.mdx @@ -151,8 +151,6 @@ module.exports = {\n};\n```\n-To resolutions in your package.json. For npm see [here](https://stackoverflow.com/questions/52416312/npm-equivalent-of-yarn-resolutions).\n-\n## Debugging with Inspector\n- `npm start -- --inspect=[host:port]` or `yarn start --inspect=[host:port]` This will start the node server and enable the inspector agent. The `=[host:port]` is optional and defaults to `=127.0.0.1:9229`. For more information, see [this](https://nodejs.org/en/docs/guides/debugging-getting-started/).\n",
        "date": "15.03.2021 17:39:19",
        "repo": "jaredpalmer/razzle",
        "type": "docs",
        "chatgpt_zeroshot": "Remove outdated information about npm resolutions and update debugging instructions"
    },
    {
        "msg": "docs: document possible buildtypes",
        "diff": "diff --git a/website/pages/docs/customization.md b/website/pages/docs/customization.md @@ -12,7 +12,7 @@ module.exports = {\noptions: {\nverbose: false, // set to true to get more info/error output\ndebug: {}, // debug flags\n- buildType: 'iso', // or 'spa' and 'serverless'\n+ buildType: 'iso', // or 'spa', 'serveronly', 'iso-serverless' and 'serveronly-serverless'\ncssPrefix: 'static/css',\njsPrefix: 'static/js',\nmediaPrefix: 'static/media',\n",
        "date": "15.03.2021 19:23:49",
        "repo": "jaredpalmer/razzle",
        "type": "docs",
        "chatgpt_zeroshot": "Update buildType options in customization.md"
    },
    {
        "msg": "docs: fix url in with-typescript-plugin readme",
        "diff": "diff --git a/packages/razzle-plugin-typescript/README.md b/packages/razzle-plugin-typescript/README.md @@ -4,7 +4,7 @@ This package contains a plugin for using TypeScript with Razzle\nRazzle now has support for typescript using babel. Unless you specifically need this plugin we recommend using the builtin support\n-Use [with-typescript example](https://github.com/jaredpalmer/razzle/tree/next/examples/with-typescript) instead.\n+Use [with-typescript example](https://github.com/jaredpalmer/razzle/tree/master/examples/with-typescript) instead.\n## Usage in Razzle Projects\n@@ -22,7 +22,7 @@ module.exports = {\n};\n```\n-See full configuration in the [typescript example project](https://github.com/jaredpalmer/razzle/tree/master/examples/with-typescript).\n+See full configuration in the [typescript example project](https://github.com/jaredpalmer/razzle/tree/master/examples/with-typescript-plugin).\n### With custom options:\n",
        "date": "18.03.2021 22:01:38",
        "repo": "jaredpalmer/razzle",
        "type": "docs",
        "chatgpt_zeroshot": "Update TypeScript example project link in razzle-plugin-typescript README"
    },
    {
        "msg": "docs: fix spa template",
        "diff": "diff --git a/website/pages/docs/single-page-applications.md b/website/pages/docs/single-page-applications.md @@ -10,6 +10,7 @@ In addition to universal/isomorphic applications, Razzle can build single page (\n<link rel=\"icon\" href=\"<%= process.env.PUBLIC_PATH %>favicon.ico\" />\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\" />\n<meta name=\"theme-color\" content=\"#000000\" />\n+ <%= htmlWebpackPlugin.tags.headTags %>\n<!--\nNotice the use of <%= process.env.PUBLIC_PATH %> in the tags above.\nIt will be replaced with the URL of the `public` folder during the build.\n@@ -31,6 +32,7 @@ In addition to universal/isomorphic applications, Razzle can build single page (\nTo begin the development, run `npm start` or `yarn start`.\nTo create a production bundle, use `npm run build` or `yarn build`.\n-->\n+ <%= htmlWebpackPlugin.tags.bodyTags %>\n</body>\n</html>\n```\n",
        "date": "19.03.2021 12:01:47",
        "repo": "jaredpalmer/razzle",
        "type": "docs",
        "chatgpt_zeroshot": "Add htmlWebpackPlugin tags to single-page-applications.md"
    },
    {
        "msg": "docs: link to razzle 3 docs",
        "diff": "diff --git a/website/pages/index.mdx b/website/pages/index.mdx @@ -16,6 +16,10 @@ JavaScript applications are tough to setup. Either you buy into a framework, for\n- [Jest](https://github.com/facebook/jest) test runner setup with sensible defaults via `razzle test`\n- SPA mode, build client side apps with razzle\n+## Not ready for Razzle 4.0?\n+\n+[Razzle 3 docs](https://razzle-git-three-jared.vercel.app/)\n+\n## Getting help\nIf you get stuck, check out Razzle's [GitHub Discussions](https://github.com/jaredpalmer/razzle/discussions). In addition, #razzle-afterjs on [Formium Community Discord Server](https://discord.gg/pJSg287) is a great way to get help quickly too.\n",
        "date": "24.03.2021 23:46:50",
        "repo": "jaredpalmer/razzle",
        "type": "docs",
        "chatgpt_zeroshot": "Add link to Razzle 3 docs in index page"
    },
    {
        "msg": "docs: update common issues",
        "diff": "diff --git a/website/pages/getting-started.mdx b/website/pages/getting-started.mdx @@ -151,6 +151,21 @@ module.exports = {\n};\n```\n+Devserver not starting and no errors show up\n+\n+Make razzle more verbose:\n+\n+```js\n+// razzle.config.js\n+'use strict';\n+\n+module.exports = {\n+ options: {\n+ verbose: true\n+ }\n+};\n+```\n+\n## Debugging with Inspector\n- `npm start -- --inspect=[host:port]` or `yarn start --inspect=[host:port]` This will start the node server and enable the inspector agent. The `=[host:port]` is optional and defaults to `=127.0.0.1:9229`. For more information, see [this](https://nodejs.org/en/docs/guides/debugging-getting-started/).\n",
        "date": "26.03.2021 15:46:36",
        "repo": "jaredpalmer/razzle",
        "type": "docs",
        "chatgpt_zeroshot": "Fix devserver not starting issue and make razzle more verbose"
    },
    {
        "msg": "docs: add transpilation of external modules",
        "diff": "diff --git a/website/pages/docs/customization.md b/website/pages/docs/customization.md @@ -407,6 +407,34 @@ import 'react-app-polyfill/ie9'; // For IE 9-11 support\nimport 'react-app-polyfill/ie11'; // For IE 11 support\n```\n+## Transpilation of external modules\n+\n+If you need to transpile external modules with arrow functions etc.\n+\n+Make sure the modules are added to the babelRule.\n+\n+```js\n+// razzle.config.js\n+'use strict';\n+\n+module.exports = {\n+ modifyWebpackOptions({\n+ env: {\n+ target, // the target 'node' or 'web'\n+ dev, // is this a development build? true or false\n+ }\n+ options: {\n+ webpackOptions, // the default options that will be used to configure webpack/ webpack loaders and plugins\n+ }\n+ }) {\n+ if (target === 'web') {\n+ webpackOptions.babelRule.include = webpackOptions.babelRule.include.concat([/themodule/,/anothermodule/])\n+ }\n+ return webpackOptions;\n+ }\n+};\n+```\n+\n## Absolute Imports\nYou can configure your application to support importing modules using absolute paths. This can be done by configuring a jsconfig.json or tsconfig.json file in the root of your project. If you're using TypeScript in your project, you will already have a tsconfig.json file.\n",
        "date": "23.04.2021 14:30:00",
        "repo": "jaredpalmer/razzle",
        "type": "docs",
        "chatgpt_zeroshot": "Add transpilation of external modules and update webpack configuration for absolute imports"
    },
    {
        "msg": "docs: better indentation",
        "diff": "diff --git a/website/pages/docs/customization.md b/website/pages/docs/customization.md @@ -428,7 +428,10 @@ module.exports = {\n}\n}) {\nif (target === 'web') {\n- webpackOptions.babelRule.include = webpackOptions.babelRule.include.concat([/themodule/,/anothermodule/])\n+ webpackOptions.babelRule.include = webpackOptions.babelRule.include.concat([\n+ /themodule/,\n+ /anothermodule/\n+ ])\n}\nreturn webpackOptions;\n}\n",
        "date": "23.04.2021 15:21:37",
        "repo": "jaredpalmer/razzle",
        "type": "docs",
        "chatgpt_zeroshot": "Update webpack configuration to include specific modules in babel rule include list"
    },
    {
        "msg": "docs(razzle-plugin-scss): Fix incorrect default values\nAlso removes `sassModules` which seems to not exist anymore.",
        "diff": "diff --git a/packages/razzle-plugin-scss/README.md b/packages/razzle-plugin-scss/README.md @@ -94,40 +94,19 @@ default\n```js\n{\ndev: {\n+ sassOptions: {\nsourceMap: true,\nincludePaths: [paths.appNodeModules],\n},\n- prod: {\n- sourceMap: false,\n- includePaths: [paths.appNodeModules],\n},\n-}\n-```\n-\n-Set `dev` to add config to postcss in `development`.\n-Set `prod` to add config to postcss in `production`.\n-\n-See [node-sass options](https://github.com/sass/node-sass#options) to override configs.\n-\n----\n-\n-### sassModules\n-\n-default\n-\n-```js\n-{\n- dev: {\n+ prod: {\n+ sassOptions: {\nsourceMap: true,\n+ sourceMapContents: false,\nincludePaths: [paths.appNodeModules],\n- modules: true\n},\n- prod: {\n- sourceMap: false,\n- includePaths: [paths.appNodeModules],\n- modules: true\n},\n-}\n+},\n```\nSet `dev` to add config to postcss in `development`.\n@@ -146,15 +125,20 @@ default\ndev: {\nsourceMap: true,\nimportLoaders: 1,\n- modules: false,\n+ modules: {\n+ auto: true,\n+ localIdentName: '[name]__[local]___[hash:base64:5]',\n+ },\n},\nprod: {\n- sourceMap: false,\n+ sourceMap: razzleOptions.enableSourceMaps,\nimportLoaders: 1,\n- modules: false,\n- minimize: true,\n+ modules: {\n+ auto: true,\n+ localIdentName: '[name]__[local]___[hash:base64:5]',\n+ },\n+ },\n},\n-}\n```\nSet `dev` to add config to postcss in `development`.\n",
        "date": "07.05.2021 17:13:04",
        "repo": "jaredpalmer/razzle",
        "type": "docs",
        "chatgpt_zeroshot": "Refactor sassOptions and modules configuration in razzle-plugin-scss"
    },
    {
        "msg": "docs: transpilation of external modules",
        "diff": "diff --git a/website/pages/docs/customization.md b/website/pages/docs/customization.md @@ -411,7 +411,7 @@ import 'react-app-polyfill/ie11'; // For IE 11 support\nIf you need to transpile external modules with arrow functions etc.\n-Make sure the modules are added to the babelRule.\n+Make sure the modules are not externalized and are added to the babelRule include.\n```js\n// razzle.config.js\n@@ -427,12 +427,13 @@ module.exports = {\nwebpackOptions, // the default options that will be used to configure webpack/ webpack loaders and plugins\n}\n}) {\n- if (target === 'web') {\n+ webpackOptions.notNodeExternalResMatch = (request, context) => {\n+ return /themodule|anothermodule/.test(request)\n+ };\nwebpackOptions.babelRule.include = webpackOptions.babelRule.include.concat([\n/themodule/,\n/anothermodule/\n- ])\n- }\n+ ]);\nreturn webpackOptions;\n}\n};\n",
        "date": "12.05.2021 00:32:40",
        "repo": "jaredpalmer/razzle",
        "type": "docs",
        "chatgpt_zeroshot": "Update babelRule to include specific modules and prevent externalization."
    },
    {
        "msg": "docs: :memo: more winget stuff",
        "diff": "diff --git a/sheets/winget.md b/sheets/winget.md @@ -6,10 +6,26 @@ published: true\nslug: winget\n---\n-## Upgrade All Apps\n+## Upgrade all packages\n-The `--all` option allows you to upgrade all apps:\n+The `--all` option allows you to upgrade all packages:\n```bash\nwinget upgrade --all\n```\n+\n+## List installed packages\n+\n+Listing installed packages will also detail which ones can be updated.\n+\n+```bash\n+winget list\n+```\n+\n+## Update specific package\n+\n+To update a specific package add the package `--id`\n+\n+```bash\n+winget upgrade --id VideoLAN.VLC\n+```\n",
        "date": "26.10.2021 07:19:29",
        "repo": "spences10/cheat-sheets",
        "type": "docs",
        "chatgpt_zeroshot": "Refactor winget.md to clarify upgrade options and add instructions for listing installed packages and updating specific packages"
    },
    {
        "msg": "docs: :memo: add rawkode add-remote example",
        "diff": "diff --git a/sheets/git.md b/sheets/git.md @@ -39,10 +39,13 @@ git config --global init.templateDir ~/.config/git/template/\n```\nSince version `2.28` of `Git` this can be done using this command:\n+\n```bash\ngit config --global init.defaultBranch main\n```\n-For more info: [Highlights from Git 2.28](https://github.blog/2020-07-27-highlights-from-git-2-28/#introducing-init-defaultbranch)\n+\n+For more info:\n+[Highlights from Git 2.28](https://github.blog/2020-07-27-highlights-from-git-2-28/#introducing-init-defaultbranch)\n## Add a repo from your machine to GitHub\n@@ -315,40 +318,39 @@ git update-index --no-assume-unchanged <file>\n## Cloning a repo from someone else's GitHub and pushing it to a repo on my GitHub\n-So you make a clone, make some changes then realise that you need to\n-add it to your GitHub account before making a pull\n+<Author author=\"rawkode\" />\n-```bash\n-git remote -v\n-origin https://github.com/OtherUser/other-username/other-repo (fetch)\n-origin https://github.com/OtherUser/other-username/other-repo (push)\n-```\n-\n-You just need to set the `origin` to yours then add the `upstream` as\n-the original `origin` make sense?\n-\n-So change `origin` to yours:\n+So you make a clone of a repo that sin't yours, make some changes then\n+realise that you need to add it to your GitHub account to make a PR.\n```bash\n-git remote set-url origin http://github.com/your-username/your-repo\n+git remote -v\n+origin https://github.com/other-user/other-username/other-repo (fetch)\n+origin https://github.com/other-user/other-username/other-repo (push)\n```\n-Then add `upsrtream` as theirs:\n+You just need to set the clone your working on as the downstream repo.\n```bash\n-git remote add upstream https://github.com/other-username/other-repo\n+# add as downstream\n+git remote add downstream https://github.com/your-username/your-repo\n+# or as your username\n+git remote add your-username https://github.com/your-username/your-repo\n```\nNow it should look something like this:\n```bash\ngit remote -v\n-origin http://github.com/your-username/your-repo (fetch)\n-origin http://github.com/your-username/your-repo (push)\n-upstream https://github.com/other-username/other-repo (fetch)\n-upstream https://github.com/other-username/other-repo (push)\n+origin https://github.com/other-username/other-repo (fetch)\n+origin https://github.com/other-username/other-repo (push)\n+downstream http://github.com/your-username/your-repo (fetch)\n+downstream http://github.com/your-username/your-repo (push)\n```\n+You can then push your changes to the downstream repo and make a PR\n+via GitHub.\n+\n## Remove an `upstream` repository\nIf you no longer need a reference to a forked repository then remove\n",
        "date": "08.05.2022 10:07:24",
        "repo": "spences10/cheat-sheets",
        "type": "docs",
        "chatgpt_zeroshot": "Add instructions for pushing changes to a downstream repo and making a PR via GitHub"
    },
    {
        "msg": "docs(DropdownExampleOpenOnFocus): fix grammar",
        "diff": "diff --git a/docs/app/Examples/modules/Dropdown/Usage/DropdownExampleOpenOnFocus.js b/docs/app/Examples/modules/Dropdown/Usage/DropdownExampleOpenOnFocus.js @@ -6,7 +6,7 @@ const DropdownExampleOpenOnFocus = () => (\n<div>\n<Dropdown placeholder='I open on focus' openOnFocus selection options={friendOptions} />\n{' '}\n- <Dropdown placeholder='I do not open on focussed' openOnFocus={false} selection options={friendOptions} />\n+ <Dropdown placeholder='I do not open on focus' openOnFocus={false} selection options={friendOptions} />\n</div>\n)\n",
        "date": "11.01.2017 12:25:19",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Fix typo in DropdownExampleOpenOnFocus component"
    },
    {
        "msg": "docs(CONTRIBUTING): update toc",
        "diff": "diff --git a/.github/CONTRIBUTING.md b/.github/CONTRIBUTING.md @@ -12,6 +12,7 @@ CONTRIBUTING\n- [Workflow](#workflow)\n- [Create a Component](#create-a-component)\n- [Define _meta](#define-_meta)\n+ - [Using propTypes](#using-proptypes)\n- [Conformance Test](#conformance-test)\n- [Open A PR](#open-a-pr)\n- [Spec out the API](#spec-out-the-api)\n",
        "date": "12.01.2017 23:59:43",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Add section on using propTypes in CONTRIBUTING.md"
    },
    {
        "msg": "docs(Popup): Changed description of \"hideOnScroll\" prop\n* Changed description of \"hideOnScroll\" prop\nFixes\n* docs(Popup): update prop descriptions",
        "diff": "diff --git a/src/modules/Popup/Popup.js b/src/modules/Popup/Popup.js @@ -42,10 +42,10 @@ const _meta = {\n*/\nexport default class Popup extends Component {\nstatic propTypes = {\n- /** Display the popup without the pointing arrow */\n+ /** Display the popup without the pointing arrow. */\nbasic: PropTypes.bool,\n- /** You may pass a content as children of the Popup */\n+ /** You may pass a content as children of the Popup. */\nchildren: PropTypes.node,\n/** Classes to add to the Popup className. */\n@@ -54,33 +54,33 @@ export default class Popup extends Component {\n/** Simple text content for the popover */\ncontent: PropTypes.node,\n- /** A Flowing popup have no maximum width and continue to flow to fit its content */\n+ /** A flowing Popup has no maximum width and continues to flow to fit its content. */\nflowing: PropTypes.bool,\n- /** Takes up the entire width of its offset container */\n+ /** Takes up the entire width of its offset container. */\n// TODO: implement the Popup fluid layout\n// fluid: PropTypes.bool,\n- /** Header displayed above the content in bold */\n+ /** Header displayed above the content in bold. */\nheader: PropTypes.string,\n- /** Whether the popup should not close on hover */\n+ /** Whether the popup should not close on hover. */\nhoverable: PropTypes.bool,\n- /** Invert the colors of the popup */\n+ /** Invert the colors of the Popup. */\ninverted: PropTypes.bool,\n- /** The node where the popup should mount.. */\n+ /** Hide the Popup when scrolling the window. */\nhideOnScroll: PropTypes.bool,\n- /** Horizontal offset in pixels to be applied to the popup */\n+ /** Horizontal offset in pixels to be applied to the Popup. */\noffset: PropTypes.number,\n/** Event triggering the popup */\non: PropTypes.oneOf(_meta.props.on),\n/**\n- * Called when a close event happens\n+ * Called when a close event happens.\n*\n* @param {SyntheticEvent} event - React's original SyntheticEvent.\n* @param {object} data - All props.\n@@ -88,7 +88,7 @@ export default class Popup extends Component {\nonClose: PropTypes.func,\n/**\n- * Called when the portal is mounted on the DOM\n+ * Called when the portal is mounted on the DOM.\n*\n* @param {null}\n* @param {object} data - All props.\n@@ -96,7 +96,7 @@ export default class Popup extends Component {\nonMount: PropTypes.func,\n/**\n- * Called when an open event happens\n+ * Called when an open event happens.\n*\n* @param {SyntheticEvent} event - React's original SyntheticEvent.\n* @param {object} data - All props.\n@@ -104,7 +104,7 @@ export default class Popup extends Component {\nonOpen: PropTypes.func,\n/**\n- * Called when the portal is unmounted from the DOM\n+ * Called when the portal is unmounted from the DOM.\n*\n* @param {null}\n* @param {object} data - All props.\n@@ -114,16 +114,16 @@ export default class Popup extends Component {\n/** Positioning for the popover */\npositioning: PropTypes.oneOf(_meta.props.positioning),\n- /** Popup size */\n+ /** Popup size. */\nsize: PropTypes.oneOf(_meta.props.size),\n- /** custom popup style */\n+ /** Custom Popup style. */\nstyle: PropTypes.object,\n/** Element to be rendered in-place where the popup is defined. */\ntrigger: PropTypes.node,\n- /** Popup width */\n+ /** Popup width. */\nwide: PropTypes.oneOf(_meta.props.wide),\n}\n",
        "date": "20.01.2017 17:07:39",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Update Popup component propTypes comments to include punctuation and capitalization."
    },
    {
        "msg": "docs(readme): fix https -> http links",
        "diff": "diff --git a/README.md b/README.md <!-- Name -->\n<h1 align=\"center\">\n- <a href=\"https://react.semantic-ui.com/\">Semantic UI React</a>\n+ <a href=\"http://react.semantic-ui.com/\">Semantic UI React</a>\n</h1>\n<!-- Badges -->\n@@ -149,7 +149,7 @@ Big thanks to our [contributors][20], especially:\n- @layershifter for bringing momentum and continual support\n[1]: https://github.com/Semantic-Org/Semantic-UI-React/blob/master/.github/CONTRIBUTING.md\n-[2]: https://react.semantic-ui.com/\n+[2]: http://react.semantic-ui.com/\n[3]: https://facebook.github.io/react/\n[4]: https://github.com/Semantic-Org/Semantic-UI-React/labels/help%20wanted\n[5]: http://semantic-ui.com/\n",
        "date": "01.02.2017 12:52:50",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Update README.md with corrected URL for Semantic UI React website."
    },
    {
        "msg": "docs(Grid): fix a typo",
        "diff": "diff --git a/src/collections/Grid/Grid.js b/src/collections/Grid/Grid.js @@ -93,7 +93,7 @@ Grid.propTypes = {\n/** Represents column count per row in Grid. */\ncolumns: PropTypes.oneOf([...SUI.WIDTHS, 'equal']),\n- /** A grid can be combined with a container to use avaiable layout and alignment. */\n+ /** A grid can be combined with a container to use the available layout and alignment. */\ncontainer: PropTypes.bool,\n/** A grid can have dividers between its columns. */\n",
        "date": "14.02.2017 11:07:46",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Fix typo in Grid component PropTypes comment"
    },
    {
        "msg": "docs(changelog): manually correct unreleased",
        "diff": "diff --git a/CHANGELOG.md b/CHANGELOG.md # Change Log\n-## [Unreleased](https://github.com/Semantic-Org/Semantic-UI-React/tree/HEAD)\n-\n-[Full Changelog](https://github.com/Semantic-Org/Semantic-UI-React/compare/v0.66.0...HEAD)\n-\n-**Implemented enhancements:**\n-\n-- Accordion.Title - 'as' prop in dynamic accordion titles [\\#1144](https://github.com/Semantic-Org/Semantic-UI-React/issues/1144)\n-\n## [v0.66.0](https://github.com/Semantic-Org/Semantic-UI-React/tree/v0.66.0) (2017-02-22)\n[Full Changelog](https://github.com/Semantic-Org/Semantic-UI-React/compare/v0.65.0...v0.66.0)\n- Add missing MenuItem `disabled` prop [\\#1363](https://github.com/Semantic-Org/Semantic-UI-React/issues/1363)\n- Remove Form `onSubmit` prop and serializer [\\#1362](https://github.com/Semantic-Org/Semantic-UI-React/issues/1362)\n- Add `link` prop to Card [\\#1350](https://github.com/Semantic-Org/Semantic-UI-React/issues/1350)\n+- Accordion.Title - 'as' prop in dynamic accordion titles [\\#1144](https://github.com/Semantic-Org/Semantic-UI-React/issues/1144)\n- Typings: unable to set many typical html element props [\\#1072](https://github.com/Semantic-Org/Semantic-UI-React/issues/1072)\n**Fixed bugs:**\n",
        "date": "21.02.2017 20:45:10",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Add missing MenuItem `disabled` prop, Remove Form `onSubmit` prop and serializer, Add `link` prop to Card, and fix Accordion.Title 'as' prop in dynamic accordion titles."
    },
    {
        "msg": "docs(README): fix release instructions'",
        "diff": "diff --git a/README.md b/README.md @@ -135,7 +135,6 @@ npm run deploy:docs\nUpdate the changelog (requires [github_changelog_generator][15]):\n```sh\n-npm run deploy:docs\ngithub_changelog_generator\ngit add CHANGELOG.md\ngit commit -m 'docs(changelog): update changelog [ci skip]'\n",
        "date": "28.02.2017 03:25:03",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "docs(changelog): remove duplicate command from README"
    },
    {
        "msg": "docs(README): add brewhousesolutions.com",
        "diff": "diff --git a/README.md b/README.md @@ -50,6 +50,7 @@ These great products are built on Semantic-UI-React. Add yours [here][22].\n- https://roadmap.space\n- https://edabit.com\n- https://blackship.com\n+- http://www.brewhousesolutions.com\n## Voice Your Opinion :speech_balloon:\n",
        "date": "28.02.2017 12:23:49",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Add new product website to list in README.md"
    },
    {
        "msg": "docs(readme): remove temporary doc warning",
        "diff": "diff --git a/README.md b/README.md -# :warning: Doc Site Interruptions :warning:\n-Our doc site DNS and CDN providers are having issues at the moment.\n-\n-**Please use https://semantic-org.github.io/Semantic-UI-React as a short-term fix.**\n-Images will not load with this link, however, the majority of the docs will be usable.\n-\n-Thanks for your patience and help while we resolve these issues:\n-- [CDN Issue #1404](https://github.com/Semantic-Org/Semantic-UI-React/issues/1404)\n-- [DNS Issue #1429](https://github.com/Semantic-Org/Semantic-UI-React/issues/1429)\n-\n-***\n<!-- Logo -->\n<p align=\"center\">\n<a href=\"http://react.semantic-ui.com\">\n@@ -18,7 +7,7 @@ Thanks for your patience and help while we resolve these issues:\n<!-- Name -->\n<h1 align=\"center\">\n- <a href=\"https://semantic-org.github.io/Semantic-UI-React\">Semantic UI React</a>\n+ <a href=\"http://react.semantic-ui.com/\">Semantic UI React</a>\n</h1>\n<!-- Badges -->\n@@ -164,7 +153,7 @@ Big thanks to our [contributors][20], especially:\n- @layershifter for bringing momentum and continual support\n[1]: https://github.com/Semantic-Org/Semantic-UI-React/blob/master/.github/CONTRIBUTING.md\n-[2]: https://semantic-org.github.io/Semantic-UI-React\n+[2]: http://react.semantic-ui.com/\n[3]: https://facebook.github.io/react/\n[4]: https://github.com/Semantic-Org/Semantic-UI-React/labels/help%20wanted\n[5]: http://semantic-ui.com/\n",
        "date": "11.03.2017 11:26:40",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Update doc site URL to http://react.semantic-ui.com/"
    },
    {
        "msg": "docs(readme): restore lifebot.fr built with entry",
        "diff": "diff --git a/README.md b/README.md @@ -51,6 +51,7 @@ These great products are built on Semantic-UI-React. Add yours [here][22].\n- https://edabit.com\n- https://blackship.com\n- http://www.brewhousesolutions.com\n+- https://www.lifebot.fr\n## Voice Your Opinion :speech_balloon:\n",
        "date": "13.03.2017 09:17:58",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Add new product website: https://www.lifebot.fr"
    },
    {
        "msg": "docs(readme): add Examples & Tutorials\ndocs(readme): add Examples & Tutorials",
        "diff": "diff --git a/README.md b/README.md @@ -42,6 +42,14 @@ See the [Documentation][2] for an introduction, usage information, and extensive\n## [Documentation][2] :blue_book:\n+\n+## Examples & Tutorials\n+\n+This is a listing of example projects and guides that will help you integrate Semantic-UI-React into your new or existing projects.\n+\n+- [semantic-ui-react-todos](https://github.com/wyc/semantic-ui-react-todos): This example modifies the well-known [react-redux Todo List](https://github.com/reactjs/redux/tree/master/examples/todos) to use Semantic UI components. There is also a write-up on the process in the project README.\n+\n+\n## Built With Semantic-UI-React\nThese great products are built on Semantic-UI-React. Add yours [here][22].\n",
        "date": "15.03.2017 23:49:05",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Add examples and tutorials section to README.md"
    },
    {
        "msg": "docs(Usage): add instructions for semantic-ui-css\ndocs(Usage): add instructions for semantic-ui-css",
        "diff": "diff --git a/docs/app/Views/Usage.js b/docs/app/Views/Usage.js @@ -102,6 +102,15 @@ const Usage = () => (\n$ npm install semantic-ui-css --save\n</pre>\n</Segment>\n+ <p>\n+ After install, you'll need to include the minified CSS file\n+ in your <em>index.js</em> file:\n+ </p>\n+ <Segment>\n+ <pre>\n+ import 'semantic-ui-css/semantic.min.css';\n+ </pre>\n+ </Segment>\n{/* ----------------------------------------\n* Semantic-UI package\n",
        "date": "07.04.2017 19:35:43",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Add instructions for including Semantic-UI CSS file in index.js"
    },
    {
        "msg": "docs(Container): Fix a typo",
        "diff": "diff --git a/src/elements/Container/Container.js b/src/elements/Container/Container.js @@ -52,7 +52,7 @@ Container.propTypes = {\n/** Additional classes. */\nclassName: PropTypes.string,\n- /** Container has no maximum with. */\n+ /** Container has no maximum width. */\nfluid: PropTypes.bool,\n/** Reduce maximum width to more naturally accommodate text. */\n",
        "date": "17.04.2017 23:41:14",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Update Container component to fix typo in prop description"
    },
    {
        "msg": "docs(readme): Add Netflix EDX as a user",
        "diff": "diff --git a/README.md b/README.md @@ -68,6 +68,7 @@ Here are some helpful links:\nThese great products are built on Semantic UI React. Add yours [here][22].\n+- Netflix's Edge Developer Experience team's numerous [internal apps](https://github.com/Semantic-Org/Semantic-UI-React/issues/1604)\n- http://stoplight.io\n- https://roadmap.space\n- https://edabit.com\n",
        "date": "21.04.2017 13:39:08",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Add Netflix's Edge Developer Experience team's internal apps to helpful links"
    },
    {
        "msg": "docs(README): add React-Semantic.UI-Starter",
        "diff": "diff --git a/README.md b/README.md @@ -44,6 +44,9 @@ See the [Documentation][2] for an introduction, usage information, and extensive\nThis is a listing of example projects and guides that will help you integrate Semantic UI React into your new or existing projects.\n+### [react-semantic.ui-starter][102]\n+Production-ready, performance-first, optimized, robust, fully-featured boilerplate/example for your new Progressive Web App.\n+\n### [semantic-ui-react-todos][100]\nThis example modifies the well-known [react-redux Todo List][101] to use Semantic UI components. There is also a write-up on the process in the project README.\n@@ -206,3 +209,4 @@ Big thanks to our [contributors][20], especially:\n<!-- Examples -->\n[100]: https://github.com/wyc/semantic-ui-react-todos\n[101]: https://github.com/reactjs/redux/tree/master/examples/todos\n+[102]: https://github.com/Metnew/react-semantic.ui-starter\n",
        "date": "28.04.2017 08:06:26",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Add production-ready boilerplate/example for Progressive Web App."
    },
    {
        "msg": "docs(Introduction): fix typo\nCorrect a misspelled word",
        "diff": "diff --git a/docs/app/Views/Introduction.js b/docs/app/Views/Introduction.js @@ -206,7 +206,7 @@ const Introduction = () => (\n<Header as='h2' dividing>Augmentation</Header>\n<p>\nControl the rendered HTML tag, or render one component <code>as</code> another component.\n- Extra props are passed to the component you are rending <code>as</code>.\n+ Extra props are passed to the component you are rendering <code>as</code>.\n</p>\n<p>\n",
        "date": "18.05.2017 08:31:36",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Fix typo in Introduction.js - rendering instead of rending"
    },
    {
        "msg": "docs(Button): remove redundant prop in Vertical Group example",
        "diff": "diff --git a/docs/app/Examples/elements/Button/GroupVariations/ButtonExampleGroupVertical.js b/docs/app/Examples/elements/Button/GroupVariations/ButtonExampleGroupVertical.js @@ -2,7 +2,7 @@ import React from 'react'\nimport { Button } from 'semantic-ui-react'\nconst ButtonExampleGroupVertical = () => (\n- <Button.Group attached='top' vertical>\n+ <Button.Group vertical>\n<Button>Feed</Button>\n<Button>Messages</Button>\n<Button>Events</Button>\n",
        "date": "25.05.2017 01:02:20",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Refactor ButtonExampleGroupVertical component to remove unnecessary 'attached' prop."
    },
    {
        "msg": "docs(Introduction): fix declarative example",
        "diff": "diff --git a/docs/app/Views/Introduction.js b/docs/app/Views/Introduction.js @@ -59,7 +59,7 @@ const RatingJSX = '<Rating rating={1} maxRating={5} />'\nconst RatingHTML = `<div\nclass=\"ui rating\"\ndata-rating=\"1\"\n- data-max-rating=\"3\"\n+ data-max-rating=\"5\"\n></div>`\nconst MessageIconJSX = `<Message\n",
        "date": "25.05.2017 10:07:31",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Update max rating value in RatingHTML to 5"
    },
    {
        "msg": "docs(Icon): fix selector for input",
        "diff": "diff --git a/docs/app/Components/IconSearch/IconSearch.js b/docs/app/Components/IconSearch/IconSearch.js @@ -57,7 +57,7 @@ export default class IconSearch extends Component {\nstate = { search: '', includeSimilar: true }\ncomponentDidMount() {\n- const input = document.querySelector('#docs-icon-set-input input')\n+ const input = document.querySelector('#docs-icon-set-input')\ninput.focus()\n}\n",
        "date": "01.06.2017 08:34:03",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Fix input selection in IconSearch component"
    },
    {
        "msg": "docs(ItemExampleFloated): your description\nFixes error in docs. \"AS\" is not being recognized.",
        "diff": "diff --git a/docs/app/Examples/views/Item/Variations/ItemExampleFloated.js b/docs/app/Examples/views/Item/Variations/ItemExampleFloated.js import React from 'react'\n-import { Button, Image as ImageComponent, Item } from 'semantic-ui-react'\n+import { Button, Image, Item } from 'semantic-ui-react'\n-const paragraph = <ImageComponent src='/assets/images/wireframe/short-paragraph.png' />\n+const paragraph = <Image src='/assets/images/wireframe/short-paragraph.png' />\nconst ItemExampleFloated = () => (\n<Item.Group relaxed>\n",
        "date": "01.06.2017 07:40:53",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Refactor Image component import in ItemExampleFloated.js"
    },
    {
        "msg": "docs(TableExampleSortable): pass in null when that column shouldn't be sorted",
        "diff": "diff --git a/docs/app/Examples/collections/Table/Variations/TableExampleSortable.js b/docs/app/Examples/collections/Table/Variations/TableExampleSortable.js @@ -42,13 +42,13 @@ export default class TableExampleSortable extends Component {\n<Table sortable celled fixed>\n<Table.Header>\n<Table.Row>\n- <Table.HeaderCell sorted={column === 'name' && direction} onClick={this.handleSort('name')}>\n+ <Table.HeaderCell sorted={column === 'name' ? direction : null} onClick={this.handleSort('name')}>\nName\n</Table.HeaderCell>\n- <Table.HeaderCell sorted={column === 'age' && direction} onClick={this.handleSort('age')}>\n+ <Table.HeaderCell sorted={column === 'age' ? direction : null} onClick={this.handleSort('age')}>\nAge\n</Table.HeaderCell>\n- <Table.HeaderCell sorted={column === 'gender' && direction} onClick={this.handleSort('gender')}>\n+ <Table.HeaderCell sorted={column === 'gender' ? direction : null} onClick={this.handleSort('gender')}>\nGender\n</Table.HeaderCell>\n</Table.Row>\n",
        "date": "05.06.2017 18:05:02",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Refactor sorting logic in TableExampleSortable component"
    },
    {
        "msg": "docs(Introduction): fix declarative example\nfix declarative example in introduction\nfix declarative example in introduction",
        "diff": "diff --git a/docs/app/Views/Introduction.js b/docs/app/Views/Introduction.js @@ -110,7 +110,7 @@ const MenuItemLinkAugmentationJSX = `import { Link } from 'react-router-dom'\n</Menu.Item>\n</Menu>`\nconst MenuItemLinkAugmentationHTML = `<div class=\"ui menu\">\n- <a class=\"item\">\n+ <a class=\"item\" href=\"/home\">\nHome\n</a>\n</div>`\n",
        "date": "21.06.2017 18:01:08",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Add href attribute to MenuItemLinkAugmentationHTML in Introduction.js"
    },
    {
        "msg": "docs(ComponentProps): fix compatibility with IE",
        "diff": "diff --git a/docs/app/Components/ComponentDoc/ComponentProps.js b/docs/app/Components/ComponentDoc/ComponentProps.js @@ -88,7 +88,7 @@ export default class ComponentProps extends Component {\nconst paramSignature = params\n.map(param => `${param.name}: ${getTagType(param)}`)\n// prevent object properties from showing as individual params\n- .filter(p => !p.includes('.'))\n+ .filter(p => !_.includes(p, '.'))\n.join(', ')\nconst tagDescriptionRows = _.compact([...params, returns]).map(tag => {\n",
        "date": "24.06.2017 21:57:52",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Refactor param filtering to use lodash includes function"
    },
    {
        "msg": "docs(readme): add Sublime Fund to the built with list",
        "diff": "diff --git a/README.md b/README.md @@ -79,6 +79,7 @@ These great products are built on Semantic UI React. Add yours [here][22].\n- http://www.brewhousesolutions.com\n- https://www.lifebot.fr\n- https://www.stackforge.co\n+- https://sublimefund.org\n## Voice Your Opinion\n",
        "date": "06.07.2017 11:35:05",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Add new product website: https://sublimefund.org"
    },
    {
        "msg": "docs(Icon): add FontAwesome attribution",
        "diff": "diff --git a/docs/app/Components/IconSearch/IconSearch.js b/docs/app/Components/IconSearch/IconSearch.js @@ -144,8 +144,19 @@ export default class IconSearch extends Component {\nrender() {\nconst { includeSimilar } = this.state\nreturn (\n- <Grid columns={1} padded textAlign='center' style={gridStyle}>\n+ <Grid columns={1} padded style={gridStyle}>\n<Grid.Column>\n+ <Header as='h2'>Icon Set</Header>\n+ <p>An icon set contains an arbitrary number of glyphs.</p>\n+\n+ <Message>\n+ Semantic includes a complete port of{' '}\n+ <a href='http://fontawesome.io/whats-new/' rel='noopener noreferrer' target='_blank'>Font Awesome 4.7.0</a>\n+ {' '}designed by{' '}\n+ <a href='http://www.twitter.com/davegandy' rel='noopener noreferrer'>Dave Gandy</a> for its standard icon\n+ set.\n+ </Message>\n+\n<Form>\n<Form.Group inline>\n<Form.Input\n@@ -163,7 +174,7 @@ export default class IconSearch extends Component {\n</Form.Group>\n</Form>\n</Grid.Column>\n- <Grid.Column>\n+ <Grid.Column textAlign='center'>\n{this.renderIcons()}\n</Grid.Column>\n</Grid>\n",
        "date": "10.08.2017 23:28:13",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Add icon set information and Font Awesome attribution to IconSearch component"
    },
    {
        "msg": "docs(ComponentExample): fix width in Firefox",
        "diff": "diff --git a/docs/app/Components/ComponentDoc/ComponentExample.js b/docs/app/Components/ComponentDoc/ComponentExample.js @@ -346,7 +346,7 @@ class ComponentExample extends Component {\nconst { error, showCode, sourceCode } = this.state\nif (!showCode) return\n- const style = {}\n+ const style = { width: '100%' }\nif (error) {\nstyle.boxShadow = `inset 0 0 0 1em ${errorStyle.background}`\n}\n",
        "date": "10.08.2017 23:39:29",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Update style to set width to 100% in ComponentExample"
    },
    {
        "msg": "docs(index): redirect to https",
        "diff": "diff --git a/docs/app/index.ejs b/docs/app/index.ejs href=\"//cdnjs.cloudflare.com/ajax/libs/semantic-ui/<%= htmlWebpackPlugin.options.versions.sui %>/semantic.min.css\">\n<title>Semantic UI React</title>\n<script>\n+ // Redirect to HTTPs\n+ // We need poor-mans client side redirects because we persist app router urls in localStorage\n+ if (location.hostname === 'react.semantic-ui.com' && location.protocol !== 'https:') {\n+ location.href = location.href.replace('http:', 'https:')\n+ }\n// Apply gh-pages SPA redirect that was applied in 404.html\n// ----------------------------------------\n(function() {\n",
        "date": "20.08.2017 10:29:21",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Add client-side redirect to HTTPS for react.semantic-ui.com"
    },
    {
        "msg": "docs(readme): add appfollow  to built with",
        "diff": "diff --git a/README.md b/README.md @@ -81,6 +81,7 @@ These great products are built on Semantic UI React. Add yours [here][22].\n- https://www.stackforge.co\n- https://sublimefund.org\n- https://thefaithcircle.com\n+- https://appfollow.io\n## Voice Your Opinion\n",
        "date": "31.08.2017 17:37:38",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Add appfollow.io to the list of great products built on Semantic UI React."
    },
    {
        "msg": "docs(README): fix circleci badge href",
        "diff": "diff --git a/README.md b/README.md <a href=\"https://gitter.im/Semantic-Org/Semantic-UI-React\">\n<img alt=\"Gitter\" src=\"https://img.shields.io/badge/gitter-join_chat-1dce73.svg?logo=data%3Aimage%2Fsvg%2Bxml%3Bbase64%2CPD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxzdmcgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj48cmVjdCB4PSIwIiB5PSI1IiBmaWxsPSIjZmZmIiB3aWR0aD0iMSIgaGVpZ2h0PSI1Ii8%2BPHJlY3QgeD0iMiIgeT0iNiIgZmlsbD0iI2ZmZiIgd2lkdGg9IjEiIGhlaWdodD0iNyIvPjxyZWN0IHg9IjQiIHk9IjYiIGZpbGw9IiNmZmYiIHdpZHRoPSIxIiBoZWlnaHQ9IjciLz48cmVjdCB4PSI2IiB5PSI2IiBmaWxsPSIjZmZmIiB3aWR0aD0iMSIgaGVpZ2h0PSI0Ii8%2BPC9zdmc%2B&logoWidth=8&style=flat-square&maxAge=2592000\" />\n</a>\n- <a href=\"ttps://circleci.com/gh/Semantic-Org/Semantic-UI-React/tree/master\">\n+ <a href=\"https://circleci.com/gh/Semantic-Org/Semantic-UI-React/tree/master\">\n<img alt=\"Circle\" src=\"https://img.shields.io/circleci/project/Semantic-Org/Semantic-UI-React/master.svg?style=flat-square\" />\n</a>\n<a href=\"https://codecov.io/gh/Semantic-Org/Semantic-UI-React\">\n",
        "date": "04.09.2017 18:13:09",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Fix broken link in README.md"
    },
    {
        "msg": "docs(Layouts): make StickyLayout fully functional",
        "diff": "diff --git a/docs/app/Layouts/StickyLayout.js b/docs/app/Layouts/StickyLayout.js import _ from 'lodash'\n-import React from 'react'\n-import { Container, Divider, Dropdown, Grid, Header, Icon, Image, List, Menu, Segment } from 'semantic-ui-react'\n+import React, { Component } from 'react'\n+import {\n+ Container, Divider, Dropdown, Grid, Header, Icon, Image, List, Menu, Segment, Visibility,\n+} from 'semantic-ui-react'\n+\n+const menuStyle = {\n+ border: 'none',\n+ borderRadius: 0,\n+ boxShadow: 'none',\n+ marginBottom: '1em',\n+ marginTop: '4em',\n+ transition: 'box-shadow 0.5s ease, padding 0.5s ease',\n+}\n+\n+const fixedMenuStyle = {\n+ backgroundColor: '#fff',\n+ border: '1px solid #ddd',\n+ boxShadow: '0px 3px 5px rgba(0, 0, 0, 0.2)',\n+}\n+\n+const overlayStyle = {\n+ float: 'left',\n+ margin: '0em 3em 1em 0em',\n+}\n+\n+const fixedOverlayStyle = {\n+ ...overlayStyle,\n+ position: 'fixed',\n+ top: '80px',\n+ zIndex: 10,\n+}\n+\n+const overlayMenuStyle = {\n+ position: 'relative',\n+ left: 0,\n+ transition: 'left 0.5s ease',\n+}\n+\n+const fixedOverlayMenuStyle = {\n+ ...overlayMenuStyle,\n+ left: '800px',\n+}\nconst LeftImage = () => (\n<Image\n@@ -35,21 +75,57 @@ const Paragraph = () => (\n</p>\n)\n-const StickyLayout = () => (\n+export default class StickyLayout extends Component {\n+ state = {\n+ menuFixed: false,\n+ overlayFixed: false,\n+ }\n+\n+ handleOverlayRef = (c) => {\n+ const { overlayRect } = this.state\n+\n+ if (!overlayRect) this.setState({ overlayRect: _.pick(c.getBoundingClientRect(), 'height', 'width') })\n+ }\n+\n+ stickOverlay = () => this.setState({ overlayFixed: true })\n+\n+ stickTopMenu = () => this.setState({ menuFixed: true })\n+\n+ unStickOverlay = () => this.setState({ overlayFixed: false })\n+\n+ unStickTopMenu = () => this.setState({ menuFixed: false })\n+\n+ render() {\n+ const { menuFixed, overlayFixed, overlayRect } = this.state\n+\n+ return (\n<div>\n+ {/* Heads up, style below isn't necessary for correct work of example, simply our docs defines other\n+ background color.\n+ */}\n+ <style>{`\n+ html, body {\n+ background: #fff;\n+ }\n+ `}</style>\n+\n<Container text style={{ marginTop: '2em' }}>\n<Header as='h1'>Sticky Example</Header>\n<p>This example shows how to use lazy loaded images, a sticky menu, and a simple text container</p>\n</Container>\n- <Menu style={{\n- background: '#f7f7f7',\n- border: 'none',\n- borderRadius: 0,\n- boxShadow: 'none',\n- marginTop: '4em',\n- transition: 'box-shadow 0.5s ease, padding 0.5s ease',\n- }}\n+ {/* Attaching the top menu is a simple operation, we only switch `fixed` prop add add another styles if it has\n+ gone beyond the scope of visibility\n+ */}\n+ <Visibility\n+ onBottomPassed={this.stickTopMenu}\n+ onBottomVisible={this.unStickTopMenu}\n+ once={false}\n+ >\n+ <Menu\n+ borderless\n+ fixed={menuFixed && 'top'}\n+ style={menuFixed ? fixedMenuStyle : menuStyle}\n>\n<Container text>\n<Menu.Item>\n@@ -80,12 +156,34 @@ const StickyLayout = () => (\n</Menu.Menu>\n</Container>\n</Menu>\n+ </Visibility>\n<Container text>\n{ _.times(3, i => <Paragraph key={i} />) }\n- <div style={{ float: 'left', margin: '0em 3em 1em 0em' }}>\n- <Menu icon='labeled' vertical>\n+ {/* Example with overlay menu is more complex, SUI simply clones all elements inside, but we should use a\n+ different approach.\n+\n+ An empty Visibility element controls the need to change the fixing of element below, it also uses height\n+ and width params received from its ref for correct display.\n+ */}\n+ <Visibility\n+ offset={80}\n+ once={false}\n+ onTopPassed={this.stickOverlay}\n+ onTopVisible={this.unStickOverlay}\n+ style={overlayFixed ? { ...overlayStyle, ...overlayRect } : {}}\n+ />\n+\n+ <div\n+ ref={this.handleOverlayRef}\n+ style={overlayFixed ? fixedOverlayStyle : overlayStyle}\n+ >\n+ <Menu\n+ icon='labeled'\n+ style={overlayFixed ? fixedOverlayMenuStyle : overlayMenuStyle}\n+ vertical\n+ >\n<Menu.Item>\n<Icon name='twitter' />\nTwitter\n@@ -93,7 +191,7 @@ const StickyLayout = () => (\n<Menu.Item >\n<Icon name='facebook' />\n- Facebook\n+ Share\n</Menu.Item>\n<Menu.Item>\n@@ -171,5 +269,5 @@ const StickyLayout = () => (\n</Segment>\n</div>\n)\n-\n-export default StickyLayout\n+ }\n+}\n",
        "date": "11.09.2017 06:35:40",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Refactor StickyLayout component to use class component and add sticky menu functionality"
    },
    {
        "msg": "docs(readme): add according.to.localsourc.es\ndocs(readme): add according.to.localsourc.es",
        "diff": "diff --git a/README.md b/README.md @@ -82,6 +82,8 @@ These great products are built on Semantic UI React. Add yours [here][22].\n- https://sublimefund.org\n- https://thefaithcircle.com\n- https://appfollow.io\n+- http://according.to.localsourc.es\n+\n## Voice Your Opinion\n",
        "date": "11.09.2017 05:45:21",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Add new website to list of great products built on Semantic UI React"
    },
    {
        "msg": "docs(README): replace gemnasium with david-dm [ci skip]",
        "diff": "diff --git a/README.md b/README.md <a href=\"https://codecov.io/gh/Semantic-Org/Semantic-UI-React\">\n<img alt=\"Codecov\" src=\"https://img.shields.io/codecov/c/github/Semantic-Org/Semantic-UI-React/master.svg?style=flat-square\" />\n</a>\n- <a href=\"https://gemnasium.com/Semantic-Org/Semantic-UI-React\">\n- <img alt=\"Gemnasium\" src=\"https://img.shields.io/gemnasium/Semantic-Org/Semantic-UI-React.svg?style=flat-square\" />\n+ <a href=\"https://david-dm.org/Semantic-Org/Semantic-UI-React\">\n+ <img alt=\"David\" src=\"https://img.shields.io/david/Semantic-Org/Semantic-UI-React.svg?style=flat-square\" />\n</a>\n<a href=\"https://www.npmjs.com/package/semantic-ui-react\">\n<img alt=\"npm\" src=\"https://img.shields.io/npm/v/semantic-ui-react.svg?style=flat-square\" />\n",
        "date": "17.09.2017 18:07:47",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Update dependency status badge to use David instead of Gemnasium."
    },
    {
        "msg": "docs(Dropdown): fix searchQuery example",
        "diff": "diff --git a/docs/app/Examples/modules/Dropdown/Usage/DropdownExampleSearchQuery.js b/docs/app/Examples/modules/Dropdown/Usage/DropdownExampleSearchQuery.js @@ -12,7 +12,7 @@ export default class DropdownExampleSearchQuery extends Component {\nsearchQuery: '',\n})\n- handleSearchChange = (e, searchQuery) => this.setState({ searchQuery })\n+ handleSearchChange = (e, { searchQuery }) => this.setState({ searchQuery })\nrender() {\nconst { searchQuery, value } = this.state\n",
        "date": "23.09.2017 21:07:41",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Fix handleSearchChange function parameter in DropdownExampleSearchQuery"
    },
    {
        "msg": "docs(Dropdown): fix DropdownRemoteExample",
        "diff": "diff --git a/docs/app/Examples/modules/Dropdown/Usage/DropdownExampleRemote.js b/docs/app/Examples/modules/Dropdown/Usage/DropdownExampleRemote.js @@ -21,7 +21,7 @@ class DropdownExampleRemote extends Component {\n}\nhandleChange = (e, { value }) => this.setState({ value })\n- handleSearchChange = (e, value) => this.setState({ searchQuery: value })\n+ handleSearchChange = (e, { searchQuery }) => this.setState({ searchQuery })\nfetchOptions = () => {\nthis.setState({ isFetching: true })\n",
        "date": "27.09.2017 00:38:15",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Refactor handleSearchChange method in DropdownExampleRemote class"
    },
    {
        "msg": "docs(readme): url update in built with",
        "diff": "diff --git a/README.md b/README.md @@ -78,7 +78,7 @@ These great products are built on Semantic UI React. Add yours [here][22].\n- https://edabit.com\n- https://blackship.com\n- http://www.brewhousesolutions.com\n-- https://www.lifebot.fr\n+- https://www.seeuletter.com\n- https://www.stackforge.co\n- https://sublimefund.org\n- https://thefaithcircle.com\n",
        "date": "28.09.2017 09:15:47",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Update README.md with new website link."
    },
    {
        "msg": "docs(Portal): remove useless props in PortalExampleControlled",
        "diff": "diff --git a/docs/app/Examples/addons/Portal/Types/PortalExampleControlled.js b/docs/app/Examples/addons/Portal/Types/PortalExampleControlled.js @@ -2,9 +2,7 @@ import React, { Component } from 'react'\nimport { Button, Grid, Header, Segment, Portal } from 'semantic-ui-react'\nexport default class PortalExampleControlled extends Component {\n- state = {\n- open: false,\n- }\n+ state = { open: false }\nhandleClick = () => this.setState({ open: !this.state.open })\n@@ -23,12 +21,7 @@ export default class PortalExampleControlled extends Component {\nonClick={this.handleClick}\n/>\n- <Portal\n- closeOnTriggerClick\n- openOnTriggerClick\n- onClose={this.handleClose}\n- open={open}\n- >\n+ <Portal onClose={this.handleClose} open={open}>\n<Segment style={{ left: '40%', position: 'fixed', top: '50%', zIndex: 1000 }}>\n<Header>This is a controlled portal</Header>\n<p>Portals have tons of great callback functions to hook into.</p>\n",
        "date": "03.10.2017 19:00:57",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Refactor PortalExampleControlled component to simplify state initialization and Portal component usage"
    },
    {
        "msg": "docs(readme): use official good first issue label",
        "diff": "diff --git a/README.md b/README.md @@ -94,9 +94,9 @@ Help shape this library by weighing in on our [RFC (request for comments)][19] i\nOur [CONTRIBUTING.md][1] is a step-by-step setup and development guide. It is meant to be read from top to bottom. Once you're up to speed, each issue here includes more information on how you can help:\n-### [Good First Contribution][21]\n+### [Good First Issue][21]\n-Issues labeled [`good first contribution`][21] are a great way to ease into development on this project.\n+Issues labeled [`good first issue`][21] are a great way to ease into development on this project.\n### [Missing Components][17]\n@@ -193,7 +193,7 @@ Big thanks to our [contributors][20], especially:\n[18]: https://github.com/Semantic-Org/Semantic-UI-React/blob/master/CHANGELOG.md\n[19]: https://github.com/Semantic-Org/Semantic-UI-React/issues?q=is%3Aopen+RFC+label%3ARFC\n[20]: https://github.com/Semantic-Org/Semantic-UI-React/graphs/contributors\n-[21]: https://github.com/Semantic-Org/Semantic-UI-React/labels/good%20first%20contribution\n+[21]: https://github.com/Semantic-Org/Semantic-UI-React/labels/good%20first%20issue\n[22]: https://github.com/Semantic-Org/Semantic-UI-React/edit/master/README.md\n[23]: https://react.semantic-ui.com/usage#css\n[24]: https://github.com/Semantic-Org/Semantic-UI-React/issues/802#issuecomment-258990274\n",
        "date": "12.10.2017 13:16:26",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Update label from \"good first contribution\" to \"good first issue\" in README.md"
    },
    {
        "msg": "docs(button): Add vertical and icon props to example group",
        "diff": "diff --git a/docs/app/Examples/elements/Button/GroupVariations/ButtonExampleGroupLabeledIcon.js b/docs/app/Examples/elements/Button/GroupVariations/ButtonExampleGroupLabeledIcon.js @@ -2,7 +2,7 @@ import React from 'react'\nimport { Button } from 'semantic-ui-react'\nconst ButtonExampleGroupLabeledIcon = () => (\n- <Button.Group labeled>\n+ <Button.Group vertical labeled icon>\n<Button icon='play' content='Play' />\n<Button icon='pause' content='Pause' />\n<Button icon='shuffle' content='Shuffle' />\n",
        "date": "16.10.2017 03:46:13",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Add vertical orientation to Button.Group and include icons in ButtonExampleGroupLabeledIcon"
    },
    {
        "msg": "docs(Form): fix typo in label",
        "diff": "diff --git a/docs/app/Examples/collections/Form/Shorthand/FormExampleSubcomponentId.js b/docs/app/Examples/collections/Form/Shorthand/FormExampleSubcomponentId.js @@ -5,7 +5,7 @@ const FormExampleSubcomponentId = () => (\n<Form>\n<Form.Group widths='equal'>\n<Form.Input id='form-subcomponent-shorthand-input-first-name' label='First name' placeholder='First name' />\n- <Form.Input id='form-subcomponent-shorthand-input-last-name' label='First name' placeholder='First name' />\n+ <Form.Input id='form-subcomponent-shorthand-input-last-name' label='Last name' placeholder='Last name' />\n</Form.Group>\n</Form>\n)\n",
        "date": "17.10.2017 20:25:23",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Fix typo in FormExampleSubcomponentId.js"
    },
    {
        "msg": "docs(index): don't use prod libs in dev",
        "diff": "diff --git a/docs/app/index.ejs b/docs/app/index.ejs <script src=\"//cdn.jsdelivr.net/faker.js/<%= htmlWebpackPlugin.options.versions.faker %>/faker.min.js\"></script>\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/js-beautify/<%= htmlWebpackPlugin.options.versions.jsBeautify %>/beautify-html.min.js\"></script>\n<!-- Use unminified React when not in production so we get errors and warnings -->\n- <script src=\"//cdnjs.cloudflare.com/ajax/libs/prop-types/<%= htmlWebpackPlugin.options.versions.propTypes %>/prop-types.min.js\"></script>\n+ <script src=\"//cdnjs.cloudflare.com/ajax/libs/prop-types/<%= htmlWebpackPlugin.options.versions.propTypes %>/prop-types<%= __PROD__ ? 'min' : '' %>.js\"></script>\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/react/<%= htmlWebpackPlugin.options.versions.react %>/umd/react<%= __PROD__ ? '.production.min' : '.development' %>.js\"></script>\n- <script src=\"https://cdnjs.cloudflare.com/ajax/libs/react-dom/<%= htmlWebpackPlugin.options.versions.reactDOM %>/umd/react-dom.production.min.js\"></script>\n- <script src=\"//cdnjs.cloudflare.com/ajax/libs/react-dom/<%= htmlWebpackPlugin.options.versions.reactDOM %>/umd/react-dom-server.browser.production.min.js\"></script>\n+ <script src=\"https://cdnjs.cloudflare.com/ajax/libs/react-dom/<%= htmlWebpackPlugin.options.versions.reactDOM %>/umd/react-dom<%= __PROD__ ? '.production.min' : '.development' %>.js\"></script>\n+ <script src=\"//cdnjs.cloudflare.com/ajax/libs/react-dom/<%= htmlWebpackPlugin.options.versions.reactDOM %>/umd/react-dom-server.browser<%= __PROD__ ? '.production.min' : '.development' %>.js\"></script>\n<script src=\"//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js\"></script>\n<style>\nhtml, body {\n",
        "date": "18.10.2017 23:01:07",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Update prop-types and react-dom scripts to use minified versions in production."
    },
    {
        "msg": "docs(Accordion): fix typo in AccordionExampleForm",
        "diff": "diff --git a/docs/app/Examples/modules/Accordion/Advanced/AccordionExampleForm.js b/docs/app/Examples/modules/Accordion/Advanced/AccordionExampleForm.js @@ -18,7 +18,7 @@ const AccordionExampleForm = () => (\n<Form>\n<Form.Group widths={2}>\n<Form.Input label='First Name' placeholder='First Name' />\n- <Form.Input label='First Name' placeholder='Last Name' />\n+ <Form.Input label='Last Name' placeholder='Last Name' />\n</Form.Group>\n<Accordion as={Form.Field} panels={panels} />\n",
        "date": "23.10.2017 20:01:08",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Fix placeholder text in AccordionExampleForm"
    },
    {
        "msg": "docs(README): fix URL collision between [levithomason](https://github.com/levithomason) and [Semantic-UI-Meteor](https://github.com/Semantic-Org/Semantic-UI-Meteor)",
        "diff": "diff --git a/README.md b/README.md @@ -97,7 +97,7 @@ Yes. Semantic UI React includes components that render valid Semantic UI HTML,\nHere are some helpful links:\n- [Building CSS with Webpack][24]\n-- [Building CSS with Meteor][26]\n+- [Building CSS with Meteor][30]\n- [Creating a standalone theme][25]\n## Voice Your Opinion\n@@ -197,11 +197,11 @@ Big thanks to our [contributors][20], especially:\n[23]: https://react.semantic-ui.com/usage#css\n[24]: https://github.com/Semantic-Org/Semantic-UI-React/issues/802#issuecomment-258990274\n[25]: http://learnsemantic.com/themes/creating.html\n-[26]: https://github.com/Semantic-Org/Semantic-UI-Meteor\n[26]: https://github.com/levithomason\n[27]: https://github.com/layershifter\n[28]: https://github.com/Semantic-Org/Semantic-UI-React/tree/master/examples/webpack1\n[29]: https://github.com/Semantic-Org/Semantic-UI-React/tree/master/examples/webpack2\n+[30]: https://github.com/Semantic-Org/Semantic-UI-Meteor\n<!-- Examples -->\n[100]: https://github.com/wyc/semantic-ui-react-todos\n",
        "date": "26.10.2017 20:12:40",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Update link for building CSS with Meteor in README.md"
    },
    {
        "msg": "docs(README): add ForecastCycles to built-with list",
        "diff": "diff --git a/README.md b/README.md @@ -66,6 +66,7 @@ These great products are built on Semantic UI React. Add yours [here][22].\n- http://www.aircip.ir\n- http://platform.nazarbazaar.ir\n- https://build.games\n+- https://platform.forecastcycles.com\n## Example Projects\n",
        "date": "26.10.2017 20:13:19",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Add new product website to list in README.md"
    },
    {
        "msg": "docs(Usage): switch from NPM to yarn",
        "diff": "diff --git a/docs/app/Views/Usage.js b/docs/app/Views/Usage.js @@ -30,11 +30,10 @@ const Usage = () => (\n<Segment basic padded>\n<Header as='h2' dividing>JavaScript</Header>\n<p>\n- The Semantic UI React package can be installed via NPM:\n+ The Semantic UI React package can be installed via Yarn:\n</p>\n<Segment>\n<pre>$ yarn add {pkg.name}</pre>\n- <pre>$ npm install {pkg.name} --save</pre>\n</Segment>\n<p>\nInstalling Semantic UI React provides the JavaScript for your components.\n@@ -98,12 +97,12 @@ const Usage = () => (\nmain Semantic UI repository to provide a lightweight CSS only version of Semantic UI.\n</p>\n<p>\n- Semantic UI CSS can be installed as a package in your project using NPM. You won't be able to\n+ Semantic UI CSS can be installed as a package in your project using Yarn. You won't be able to\nuse custom themes with this method.\n</p>\n<Segment>\n<pre>\n- $ npm install semantic-ui-css --save\n+ $ yarn add semantic-ui-css\n</pre>\n</Segment>\n<p>\n@@ -133,7 +132,6 @@ const Usage = () => (\n</p>\n<Segment>\n<pre>$ yarn add semantic-ui --dev</pre>\n- <pre>$ npm install semantic-ui --save-dev</pre>\n</Segment>\n<p>\nAfter building the project with Gulp, you'll need to include the minified CSS file\n",
        "date": "29.10.2017 07:16:50",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Switch package installation instructions from NPM to Yarn"
    },
    {
        "msg": "docs(Advertisement): fix AdvertisementExampleBannerTop example\nmodified the Ad's `test` prop",
        "diff": "diff --git a/docs/app/Examples/views/Advertisement/Types/AdvertisementExampleBannerTop.js b/docs/app/Examples/views/Advertisement/Types/AdvertisementExampleBannerTop.js @@ -2,7 +2,7 @@ import React from 'react'\nimport { Advertisement } from 'semantic-ui-react'\nconst AdvertisementExampleBannerTop = () => (\n- <Advertisement unit='top banner' test='Vertical Banner' />\n+ <Advertisement unit='top banner' test='Top Banner' />\n)\nexport default AdvertisementExampleBannerTop\n",
        "date": "01.11.2017 13:39:37",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Update test attribute in AdvertisementExampleBannerTop component"
    },
    {
        "msg": "docs(readme): update link and desc of `react-semantic.ui-starter`\n`react-semantic.ui-starter` was updated and renamed to [`suicrux`](https://github.com/Metnew/suicrux).",
        "diff": "diff --git a/README.md b/README.md @@ -80,8 +80,8 @@ Our example project right [here][28] in this repo.\n### [webpack2][29]\nOur example project right [here][29] in this repo.\n-### [react-semantic.ui-starter][102]\n-Production-ready, performance-first, optimized, robust, fully-featured boilerplate/example for your new Progressive Web App.\n+### [SUIcrux][102]\n+Advanced universal starter with Semantic-UI-React. React/Redux/Lazy-loading/SSR/PWA.\n### [semantic-ui-react-todos][100]\nThis example modifies the well-known [react-redux Todo List][101] to use Semantic UI components. There is also a write-up on the process in the project README.\n",
        "date": "05.11.2017 01:36:41",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Update project name and description for SUIcrux starter."
    },
    {
        "msg": "docs(readme): add Bandwidth Hero to built with\ndocs(readme): add Bandwidth Hero to built with",
        "diff": "diff --git a/README.md b/README.md @@ -69,6 +69,7 @@ These great products are built on Semantic UI React. Add yours [here][22].\n- https://build.games\n- https://platform.forecastcycles.com\n- https://www.findlectures.com\n+- https://github.com/ayastreb/bandwidth-hero\n## Example Projects\n",
        "date": "05.11.2017 08:37:58",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Add bandwidth-hero project to list of great products built on Semantic UI React"
    },
    {
        "msg": "docs(Header): fix typo in component example description",
        "diff": "diff --git a/docs/app/Examples/elements/Header/Content/index.js b/docs/app/Examples/elements/Header/Content/index.js @@ -31,7 +31,7 @@ const HeaderContentExamples = () => (\nexamplePath='elements/Header/Content/HeaderExampleSubheader'\n/>\n<ComponentExample\n- description='You can pass an Subheader content to the Header subheader prop.'\n+ description='You can pass any Subheader content to the Header subheader prop.'\nexamplePath='elements/Header/Content/HeaderExampleSubheaderProp'\n/>\n</ExampleSection>\n",
        "date": "25.11.2017 09:25:52",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Update description for Header subheader prop in HeaderContentExamples"
    },
    {
        "msg": "docs(README.md): add bailfacile.fr to list of websites using Semantic UI React\nAdd website using Semantic UI React to list",
        "diff": "diff --git a/README.md b/README.md @@ -65,6 +65,7 @@ These great products are built on Semantic UI React. Add yours [here][22].\n- https://appfollow.io\n- http://according.to.localsourc.es\n- http://www.aircip.ir\n+- https://www.bailfacile.fr\n- http://platform.nazarbazaar.ir\n- https://build.games\n- https://platform.forecastcycles.com\n",
        "date": "06.12.2017 21:59:16",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Add new website to the list in README.md"
    },
    {
        "msg": "docs(Step): fix display of an icon in StepExampleEvenlyDivided",
        "diff": "diff --git a/docs/app/Examples/elements/Step/Variations/StepExampleEvenlyDivided.js b/docs/app/Examples/elements/Step/Variations/StepExampleEvenlyDivided.js @@ -4,7 +4,7 @@ import { Icon, Step } from 'semantic-ui-react'\nconst StepExampleEvenlyDivided = () => (\n<Step.Group widths={3}>\n<Step>\n- <Icon icon='truck' />\n+ <Icon name='truck' />\n<Step.Content>\n<Step.Title>Shipping</Step.Title>\n</Step.Content>\n",
        "date": "10.12.2017 13:04:44",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Fix icon prop in StepExampleEvenlyDivided component"
    },
    {
        "msg": "docs(README): Add moneytracker.cc to built with list",
        "diff": "diff --git a/README.md b/README.md @@ -72,6 +72,7 @@ These great products are built on Semantic UI React. Add yours [here][22].\n- https://www.findlectures.com\n- https://github.com/ayastreb/bandwidth-hero\n- https://re.yomeshgupta.com\n+- https://moneytracker.cc\n## Example Projects\n",
        "date": "17.12.2017 16:20:54",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Add moneytracker.cc to the list of great products built on Semantic UI React"
    },
    {
        "msg": "docs(README): add Cryptact to the built with list\ndocs(README): add Cryptact to the built with list",
        "diff": "diff --git a/README.md b/README.md @@ -73,6 +73,7 @@ These great products are built on Semantic UI React. Add yours [here][22].\n- https://github.com/ayastreb/bandwidth-hero\n- https://re.yomeshgupta.com\n- https://moneytracker.cc\n+- https://tax.cryptact.com\n## Example Projects\n",
        "date": "09.01.2018 03:46:21",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Add new project to list of great products built on Semantic UI React"
    },
    {
        "msg": "docs(Pagination): add missing prop in PaginationExampleOptions\n* docs(PaginationExampleOptions): props missing\nAdd the missing 'siblingRange' props of Pagination\n* Update PaginationExampleOptions.js",
        "diff": "diff --git a/docs/app/Examples/addons/Pagination/Usage/PaginationExampleOptions.js b/docs/app/Examples/addons/Pagination/Usage/PaginationExampleOptions.js @@ -37,6 +37,7 @@ export default class PaginationExampleCustomization extends Component {\nboundaryRange={boundaryRange}\nonPageChange={this.handlePaginationChange}\nsize='mini'\n+ siblingRange={siblingRange}\ntotalPages={totalPages}\n// Heads up! All items are powered by shorthands, if you want to hide one of them, just pass `null` as value\nellipsisItem={showEllipsis ? undefined : null}\n",
        "date": "12.02.2018 04:55:03",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Add siblingRange prop to PaginationExampleCustomization component"
    },
    {
        "msg": "docs(TableExamplePagination): order icon names per docs\nAccording to `chevron left` and `chevron right` should be used.",
        "diff": "diff --git a/docs/app/Examples/collections/Table/Types/TableExamplePagination.js b/docs/app/Examples/collections/Table/Types/TableExamplePagination.js @@ -36,14 +36,14 @@ const TableExamplePagination = () => (\n<Table.HeaderCell colSpan='3'>\n<Menu floated='right' pagination>\n<Menu.Item as='a' icon>\n- <Icon name='left chevron' />\n+ <Icon name='chevron left' />\n</Menu.Item>\n<Menu.Item as='a'>1</Menu.Item>\n<Menu.Item as='a'>2</Menu.Item>\n<Menu.Item as='a'>3</Menu.Item>\n<Menu.Item as='a'>4</Menu.Item>\n<Menu.Item as='a' icon>\n- <Icon name='right chevron' />\n+ <Icon name='chevron right' />\n</Menu.Item>\n</Menu>\n</Table.HeaderCell>\n",
        "date": "18.02.2018 16:09:31",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Update pagination icons in TableExamplePagination component"
    },
    {
        "msg": "docs(ComponentExample): fix code editor body regex\ndocs(ComponentExample): fix code editor body regex",
        "diff": "diff --git a/docs/app/Components/ComponentDoc/ComponentExample/ComponentExample.js b/docs/app/Components/ComponentDoc/ComponentExample/ComponentExample.js @@ -233,9 +233,7 @@ class ComponentExample extends Component {\n// capture the default export so we can return it from the IIFE\nconst defaultExport = _.get(/export\\s+default\\s+(?:class|function)?(?:\\s+)?(\\w+)/.exec(sourceCode), '[1]')\n- // consider everything after the imports to be the body\n- // remove `export` statements except `export default class|function`\n- const body = _.get(/import[\\s\\S]*from.*\\n([\\s\\S]*)/.exec(sourceCode), '[1]', '')\n+ const body = _.get(/(export\\sdefault\\sclass|const|class\\s\\S*\\sextends)[\\s\\S]*/.exec(sourceCode), '[0]', '')\n.replace(/export\\s+default\\s+(?!class|function)\\w+([\\s\\n]+)?/, '') // remove `export default Foo` statements\n.replace(/export\\s+default\\s+/, '') // remove `export default ...`\n",
        "date": "25.02.2018 12:51:14",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Refactor ComponentExample.js to improve code readability and remove unnecessary export statements."
    },
    {
        "msg": "docs(Layouts): fix typo in StickyLayout\ndocs(Layouts): fix typo in StickyLayout",
        "diff": "diff --git a/docs/app/Layouts/StickyLayout.js b/docs/app/Layouts/StickyLayout.js @@ -114,7 +114,7 @@ export default class StickyLayout extends Component {\n<p>This example shows how to use lazy loaded images, a sticky menu, and a simple text container</p>\n</Container>\n- {/* Attaching the top menu is a simple operation, we only switch `fixed` prop add add another styles if it has\n+ {/* Attaching the top menu is a simple operation, we only switch `fixed` prop and add another style if it has\ngone beyond the scope of visibility\n*/}\n<Visibility\n",
        "date": "11.03.2018 07:18:25",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Fix typo and add missing style in StickyLayout top menu attachment"
    },
    {
        "msg": "docs(Responsive): fix spelling\ndocs(Responsive): fix spelling",
        "diff": "diff --git a/docs/app/Examples/addons/Responsive/Usage/ResponsiveExampleFireOnMount.js b/docs/app/Examples/addons/Responsive/Usage/ResponsiveExampleFireOnMount.js @@ -20,7 +20,7 @@ export default class ResponsiveExampleFireOnMount extends Component {\n<Grid.Column textAlign={textAlign}>\n<Segment>\nThis grid has responsive align of the text. It will be right aligned on computer and left aligned on other\n- breakpoins.\n+ breakpoints.\n</Segment>\n</Grid.Column>\n</Responsive>\n",
        "date": "16.03.2018 16:30:31",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Fix typo in ResponsiveExampleFireOnMount.js"
    },
    {
        "msg": "docs(ads): prevent height jitter",
        "diff": "diff --git a/docs/app/Components/CarbonAd/CarbonAd.js b/docs/app/Components/CarbonAd/CarbonAd.js @@ -129,7 +129,7 @@ class CarbonAd extends Component {\nconst style = {\ntransition: `opacity ${TRANSITION_TIME}ms`,\n- minHeight: 173,\n+ minHeight: 199,\nbackground: '#000',\nopacity: isBlockingAds ? 1 : opacity,\n}\n",
        "date": "25.03.2018 10:33:29",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Increase minimum height of CarbonAd component to 199 pixels"
    },
    {
        "msg": "docs(layouts): fix typo in GridLayout\ndocs(layouts): fix typo in GridLayout",
        "diff": "diff --git a/docs/app/Layouts/GridLayout.js b/docs/app/Layouts/GridLayout.js @@ -82,7 +82,7 @@ const GridLayout = () => (\n<Header as='h3'>Text Container</Header>\n<p>\nSometimes you just need to put a single column of centered text on a page. A <code>text container</code> is\n- a special type of container optimized for a single flowing column of text, like this instructions on this page.\n+ a special type of container optimized for a single flowing column of text, like these instructions on this page.\n</p>\n<p>Text containers <b>do not need to use grids</b> and help simplify basic page layouts.</p>\n",
        "date": "01.04.2018 19:39:50",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Update text in GridLayout.js to correct grammar error."
    },
    {
        "msg": "docs(List): fix typo",
        "diff": "diff --git a/docs/app/Examples/elements/List/ContentVariations/index.js b/docs/app/Examples/elements/List/ContentVariations/index.js @@ -13,7 +13,7 @@ const ListContentVariations = () => (\n<ComponentExample\ntitle='Floated'\n- description='An list, or an element inside a list can be floated left or right'\n+ description='A list, or an element inside a list can be floated left or right'\nexamplePath='elements/List/ContentVariations/ListExampleFloated'\n/>\n<ComponentExample examplePath='elements/List/ContentVariations/ListExampleFloatedHorizontal' />\n",
        "date": "03.04.2018 11:21:51",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Fix typo in description of floated list items"
    },
    {
        "msg": "docs(List): fix duplicate Types sections",
        "diff": "diff --git a/docs/app/Examples/elements/List/Variations/index.js b/docs/app/Examples/elements/List/Variations/index.js @@ -5,7 +5,7 @@ import ComponentExample from 'docs/app/Components/ComponentDoc/ComponentExample'\nimport ExampleSection from 'docs/app/Components/ComponentDoc/ExampleSection'\nconst ListVariations = () => (\n- <ExampleSection title='Types'>\n+ <ExampleSection title='Variations'>\n<ComponentExample\ntitle='Horizontal'\ndescription='A list can be formatted to have items appear horizontally'\n",
        "date": "17.04.2018 10:25:55",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Update title of ExampleSection component in List Variations page"
    },
    {
        "msg": "docs(readme): simplify and focus content",
        "diff": "diff --git a/.github/CONTRIBUTING.md b/.github/CONTRIBUTING.md @@ -37,6 +37,7 @@ CONTRIBUTING\n- [Components](#components)\n- [Props](#props)\n- [Examples](#examples)\n+- [Releasing](#releasing)\n<!-- END doctoc generated TOC please keep comment here to allow auto update -->\n@@ -557,6 +558,17 @@ Usage examples for a component live in `docs/app/Examples`. The examples follow\nAdding documentation for new components is a bit tedious. The best way to do this (for now) is to copy an existing component's and update them.\n+## Releasing\n+\n+On the latest clean `master`:\n+\n+```sh\n+npm run release:<major|minor|patch>\n+```\n+> :warning: `npm` must be used. At the time of writing`yarn` does not properly handle the credentials.\n+\n+Releasing will update the changelog which requires [github_changelog_generator][15].\n+\n[1]: https://github.com/Semantic-Org/Semantic-UI-React/blob/master/test/specs/commonTests.js\n[2]: https://facebook.github.io/react/docs/forms.html#controlled-components\n[3]: https://facebook.github.io/react/docs/forms.html#uncontrolled-components\n",
        "date": "17.05.2018 17:24:44",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Add documentation for releasing process"
    },
    {
        "msg": "docs(readme): add accessible, simplify built with",
        "diff": "diff --git a/README.md b/README.md See the [**Documentation**][2] for an introduction, usage information, and examples.\n-## Built With Semantic UI React\n+## Built With\n<img align=\"left\" height=\"50\" src=\"https://github.com/Semantic-Org/Semantic-UI-React/raw/master/docs/app/amazon-logo.png\" />\n<img align=\"left\" height=\"50\" src=\"https://github.com/Semantic-Org/Semantic-UI-React/raw/master/docs/app/netflix-logo.png\" />\n@@ -160,6 +160,7 @@ Any other issue labeled [`help wanted`][4] is ready for a PR.\n- Complete SUI component definition support\n- Completely documented\n- Completely tested\n+- Accessible\n## Credit\n",
        "date": "17.05.2018 17:28:11",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Remove reference to Semantic UI React and add accessibility support."
    },
    {
        "msg": "docs(ModalExampleScrollingContent): your description\nTo conform with typescript definition files",
        "diff": "diff --git a/docs/app/Examples/modules/Modal/Variations/ModalExampleScrollingContent.js b/docs/app/Examples/modules/Modal/Variations/ModalExampleScrollingContent.js @@ -27,7 +27,7 @@ const ModalExampleScrollingContent = () => (\n</Modal.Content>\n<Modal.Actions>\n<Button primary>\n- Proceed <Icon name='right chevron' />\n+ Proceed <Icon name='chevron right' />\n</Button>\n</Modal.Actions>\n</Modal>\n",
        "date": "22.05.2018 00:40:06",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Update icon name in ModalExampleScrollingContent to 'chevron right'"
    },
    {
        "msg": "docs(Form): fix group variations typo\ndocs(Form): fix group variations typo",
        "diff": "diff --git a/docs/app/Examples/collections/Form/GroupVariations/index.js b/docs/app/Examples/collections/Form/GroupVariations/index.js @@ -12,7 +12,7 @@ const FormGroupVariationsExamples = () => (\nexamplePath='collections/Form/GroupVariations/FormExampleEvenlyDividedGroup'\n>\n<Message info>\n- When using the <code>widths='even'</code> prop declaration on a <code>Form.Group</code>,\n+ When using the <code>widths='equal'</code> prop declaration on a <code>Form.Group</code>,\nall child <code>Form.Dropdown</code>, <code>Form.Input</code>, <code>Form.Select</code>\ncomponents must be rendered with a <code>fluid</code> prop to work correctly.\n</Message>\n",
        "date": "24.05.2018 15:35:27",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Update Form.Group widths prop to 'equal' for correct rendering of child components"
    },
    {
        "msg": "docs(routes): fix layout component imports",
        "diff": "diff --git a/docs/src/routes.js b/docs/src/routes.js @@ -4,8 +4,8 @@ import { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom'\nimport ExternalExampleLayout from './components/ExternalExampleLayout'\nimport DocsLayout from './components/DocsLayout'\nimport DocsRoot from './components/DocsRoot'\n-import LayoutsLayout from './components/layoutsLayout'\n-import LayoutsRoot from './components/layoutsRoot'\n+import LayoutsLayout from './components/LayoutsLayout'\n+import LayoutsRoot from './components/LayoutsRoot'\nimport Introduction from './views/Introduction'\nimport Layouts from './views/layouts'\n",
        "date": "02.06.2018 20:02:08",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Fix capitalization of component file names in routes.js"
    },
    {
        "msg": "docs(Usage): fix version of SUIR",
        "diff": "diff --git a/docs/src/views/Usage.js b/docs/src/views/Usage.js @@ -68,8 +68,8 @@ const Usage = () => (\nshould use corresponding version of Semantic UI React:\n</p>\n<Message.List>\n- <Message.Item>for SUI 2.2 use 0.79.1 and below</Message.Item>\n- <Message.Item>for SUI 2.3 use 0.80.0 and higher</Message.Item>\n+ <Message.Item>for SUI 2.2 use 0.80.2 and below</Message.Item>\n+ <Message.Item>for SUI 2.3 use 0.81.0 and higher</Message.Item>\n</Message.List>\n</Message>\n@@ -247,7 +247,7 @@ const Usage = () => (\n</p>\n<p>\n- Please ensure that you're using <code>semantic-ui-react@0.82.0</code> or higher because we\n+ Please ensure that you're using <code>semantic-ui-react@0.81.2</code> or higher because we\nadded the{' '}\n<a\nhref='https://webpack.js.org/guides/tree-shaking/#mark-the-file-as-side-effect-free'\n",
        "date": "04.07.2018 17:36:43",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Update Semantic UI React version requirements in Usage.js"
    },
    {
        "msg": "docs(Button): update ButtonExampleAnimated to match SemanticICONS type\ndocs(Button): update ButtonExampleAnimated to match SemanticICONS type",
        "diff": "diff --git a/docs/src/examples/elements/Button/Types/ButtonExampleAnimated.js b/docs/src/examples/elements/Button/Types/ButtonExampleAnimated.js @@ -6,7 +6,7 @@ const ButtonExampleAnimated = () => (\n<Button animated>\n<Button.Content visible>Next</Button.Content>\n<Button.Content hidden>\n- <Icon name='right arrow' />\n+ <Icon name='arrow right' />\n</Button.Content>\n</Button>\n<Button animated='vertical'>\n",
        "date": "16.07.2018 23:06:59",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Update icon name in ButtonExampleAnimated to 'arrow right'"
    },
    {
        "msg": "docs(Layouts): fix size variables in HomepageLayout\ndocs(Layouts): fix size variables in HomepageLayout",
        "diff": "diff --git a/docs/src/layouts/HomepageLayout.js b/docs/src/layouts/HomepageLayout.js @@ -69,7 +69,7 @@ class DesktopContainer extends Component {\nconst { fixed } = this.state\nreturn (\n- <Responsive {...Responsive.onlyComputer}>\n+ <Responsive minWidth={Responsive.onlyTablet.minWidth}>\n<Visibility\nonce={false}\nonBottomPassed={this.showFixedMenu}\n@@ -135,7 +135,7 @@ class MobileContainer extends Component {\nconst { sidebarOpened } = this.state\nreturn (\n- <Responsive {...Responsive.onlyMobile}>\n+ <Responsive maxWidth={Responsive.onlyMobile.maxWidth}>\n<Sidebar.Pushable>\n<Sidebar as={Menu} animation='uncover' inverted vertical visible={sidebarOpened}>\n<Menu.Item as='a' active>\n",
        "date": "17.07.2018 11:13:03",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Refactor layout responsiveness for tablet and mobile devices"
    },
    {
        "msg": "docs(IconExampleIconGroup): fix circle outline",
        "diff": "diff --git a/docs/src/examples/elements/Icon/Groups/IconExampleIconGroup.js b/docs/src/examples/elements/Icon/Groups/IconExampleIconGroup.js @@ -3,7 +3,7 @@ import { Icon } from 'semantic-ui-react'\nconst IconExampleIconGroup = () => (\n<Icon.Group size='huge'>\n- <Icon size='big' name='thin circle' />\n+ <Icon size='big' name='circle outline' />\n<Icon name='user' />\n</Icon.Group>\n)\n",
        "date": "20.07.2018 07:22:30",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Update Icon name in IconExampleIconGroup to 'circle outline'"
    },
    {
        "msg": "docs(IconExampleLoadingGroup): fix sun icon",
        "diff": "diff --git a/docs/src/examples/elements/Icon/Groups/IconExampleLoadingGroup.js b/docs/src/examples/elements/Icon/Groups/IconExampleLoadingGroup.js @@ -8,7 +8,7 @@ const IconExampleLoadingGroup = () => (\n<Icon color='black' name='user' />\n</Icon.Group>\n<Icon.Group size='huge'>\n- <Icon loading size='big' name='sun' />\n+ <Icon loading size='big' name='circle notch' />\n<Icon name='user' />\n</Icon.Group>\n</div>\n",
        "date": "20.07.2018 07:23:45",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Update loading icon in IconExampleLoadingGroup"
    },
    {
        "msg": "docs(IconExampleFitted): better demonstrate fitted",
        "diff": "diff --git a/docs/src/examples/elements/Icon/Variations/IconExampleFitted.js b/docs/src/examples/elements/Icon/Variations/IconExampleFitted.js @@ -3,9 +3,9 @@ import { Icon } from 'semantic-ui-react'\nconst IconExampleFitted = () => (\n<div>\n- <p>Tight spacing</p>\n- <Icon fitted name='help' />\n- <p>Tight spacing</p>\n+ This icon<Icon fitted name='help' />is fitted.\n+ <br />\n+ This icon<Icon name='help' />is not.\n</div>\n)\n",
        "date": "05.08.2018 01:26:04",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Refactor IconExampleFitted to demonstrate fitted and non-fitted icons."
    },
    {
        "msg": "docs(ComponentExample): fix children display",
        "diff": "diff --git a/docs/src/components/ComponentDoc/ComponentExample/ComponentExample.js b/docs/src/components/ComponentDoc/ComponentExample/ComponentExample.js @@ -15,6 +15,7 @@ import ComponentExampleRenderSource from './ComponentExampleRenderSource'\nimport ComponentExampleTitle from './ComponentExampleTitle'\nconst childrenStyle = {\n+ paddingBottom: 0,\npaddingTop: 0,\nmaxWidth: '50rem',\n}\n@@ -224,12 +225,12 @@ class ComponentExample extends PureComponent {\n<div id={this.anchorName} style={{ paddingTop: '1rem' }}>\n<Grid\nclassName='docs-example'\n- columns='equal'\npadded='vertically'\nonMouseLeave={handleMouseLeave}\nonMouseMove={handleMouseMove}\nstyle={exampleStyle}\n>\n+ <Grid.Row columns='equal'>\n<Grid.Column>\n<ComponentExampleTitle\ndescription={description}\n@@ -248,11 +249,12 @@ class ComponentExample extends PureComponent {\nshowHTML={showHTML}\n/>\n</Grid.Column>\n+ </Grid.Row>\n{children && (\n- <Grid.Column width={16} style={childrenStyle}>\n- {children}\n- </Grid.Column>\n+ <Grid.Row columns={1} style={childrenStyle}>\n+ <Grid.Column>{children}</Grid.Column>\n+ </Grid.Row>\n)}\n<Grid.Column\n",
        "date": "13.08.2018 16:30:46",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Refactor ComponentExample layout to use Grid.Row and Grid.Column for better structure"
    },
    {
        "msg": "docs(README): fix CircleCI image",
        "diff": "diff --git a/README.md b/README.md <img alt=\"Gitter\" src=\"https://img.shields.io/badge/gitter-join_chat-1dce73.svg?logo=data%3Aimage%2Fsvg%2Bxml%3Bbase64%2CPD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxzdmcgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj48cmVjdCB4PSIwIiB5PSI1IiBmaWxsPSIjZmZmIiB3aWR0aD0iMSIgaGVpZ2h0PSI1Ii8%2BPHJlY3QgeD0iMiIgeT0iNiIgZmlsbD0iI2ZmZiIgd2lkdGg9IjEiIGhlaWdodD0iNyIvPjxyZWN0IHg9IjQiIHk9IjYiIGZpbGw9IiNmZmYiIHdpZHRoPSIxIiBoZWlnaHQ9IjciLz48cmVjdCB4PSI2IiB5PSI2IiBmaWxsPSIjZmZmIiB3aWR0aD0iMSIgaGVpZ2h0PSI0Ii8%2BPC9zdmc%2B&logoWidth=8&style=flat-square&maxAge=2592000\" />\n</a>\n<a href=\"https://circleci.com/gh/Semantic-Org/Semantic-UI-React/tree/master\">\n- <img alt=\"Circle\" src=\"https://img.shields.io/circleci/project/Semantic-Org/Semantic-UI-React/master.svg?style=flat-square\" />\n+ <img alt=\"Circle\" src=\"https://img.shields.io/circleci/project/github/Semantic-Org/Semantic-UI-React/master.svg?style=flat-square\" />\n</a>\n<a href=\"https://codecov.io/gh/Semantic-Org/Semantic-UI-React\">\n<img alt=\"Codecov\" src=\"https://img.shields.io/codecov/c/github/Semantic-Org/Semantic-UI-React/master.svg?style=flat-square\" />\n",
        "date": "05.09.2018 10:38:56",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Update badge URLs to use GitHub for CircleCI and Codecov."
    },
    {
        "msg": "docs(Form): add an example of accessible Form.Select\ndocs(Form): add an example of accessible Form.Select",
        "diff": "diff --git a/docs/src/examples/collections/Form/Shorthand/FormExampleFieldControlId.js b/docs/src/examples/collections/Form/Shorthand/FormExampleFieldControlId.js import React from 'react'\n-import { Form, Input, TextArea, Button } from 'semantic-ui-react'\n+import { Form, Input, TextArea, Button, Select } from 'semantic-ui-react'\n+\n+const genderOptions = [\n+ { key: 'm', text: 'Male', value: 'male' },\n+ { key: 'f', text: 'Female', value: 'female' },\n+]\nconst FormExampleFieldControlId = () => (\n<Form>\n@@ -16,6 +21,14 @@ const FormExampleFieldControlId = () => (\nlabel='Last name'\nplaceholder='Last name'\n/>\n+ <Form.Field\n+ control={Select}\n+ options={genderOptions}\n+ label={{ children: 'Gender', htmlFor: 'form-select-control-gender' }}\n+ placeholder='Gender'\n+ search\n+ searchInput={{ id: 'form-select-control-gender' }}\n+ />\n</Form.Group>\n<Form.Field\nid='form-textarea-control-opinion'\n",
        "date": "17.09.2018 06:40:28",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Add Select dropdown for gender in FormExampleFieldControlId"
    },
    {
        "msg": "docs(Grid): fix typo in GridExampleStretched example description\nThe description of the `stretched` property of a grid row mentioned 'width', but should have mentioned 'height'.",
        "diff": "diff --git a/docs/src/examples/collections/Grid/Variations/index.js b/docs/src/examples/collections/Grid/Variations/index.js @@ -32,7 +32,7 @@ const GridVariationsExamples = () => (\n<ComponentExample\ntitle='Stretched'\n- description='A row can automatically resize all elements to split the available width evenly.'\n+ description='A row can automatically resize all elements to split the available height evenly.'\nexamplePath='collections/Grid/Variations/GridExampleStretched'\n/>\n<ComponentExample examplePath='collections/Grid/Variations/GridExampleStretchedEqual' />\n",
        "date": "24.09.2018 11:42:20",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Update description for GridVariationsExamples component to mention available height instead of width."
    },
    {
        "msg": "docs(Document): use only https sources",
        "diff": "diff --git a/docs/src/components/Document.js b/docs/src/components/Document.js @@ -13,42 +13,49 @@ const Document = ({ Body, children, Head, Html, siteData: { dev, versions } }) =\n<link rel='stylesheet' href='/style.css' />\n<link\nrel='stylesheet'\n- href={`//cdnjs.cloudflare.com/ajax/libs/semantic-ui/${versions.sui}/semantic.min.css`}\n+ href={`https://cdnjs.cloudflare.com/ajax/libs/semantic-ui/${versions.sui}/semantic.min.css`}\n/>\n- <script src={`//cdnjs.cloudflare.com/ajax/libs/anchor-js/${versions.anchor}/anchor.min.js`} />\n<script\n- src={`//cdn.jsdelivr.net/npm/@babel/standalone@${versions.babel.standalone}/babel.min.js`}\n+ src={`https://cdnjs.cloudflare.com/ajax/libs/anchor-js/${versions.anchor}/anchor.min.js`}\n/>\n<script\n- src={`//cdn.jsdelivr.net/npm/@babel/preset-env-standalone@${\n+ src={`https://cdn.jsdelivr.net/npm/@babel/standalone@${\n+ versions.babel.standalone\n+ }/babel.min.js`}\n+ />\n+ <script\n+ src={`https://cdn.jsdelivr.net/npm/@babel/preset-env-standalone@${\nversions.babel.standalone\n}/babel-preset-env.min.js`}\n/>\n- <script src={`//cdn.jsdelivr.net/faker.js/${versions.faker}/faker.min.js`} />\n+ <script src={`https://cdn.jsdelivr.net/faker.js/${versions.faker}/faker.min.js`} />\n- <script crossOrigin='true' src={`//unpkg.com/prettier@${versions.prettier}/standalone.js`} />\n<script\ncrossOrigin='true'\n- src={`//unpkg.com/prettier@${versions.prettier}/parser-babylon.js`}\n+ src={`https://unpkg.com/prettier@${versions.prettier}/standalone.js`}\n+ />\n+ <script\n+ crossOrigin='true'\n+ src={`https://unpkg.com/prettier@${versions.prettier}/parser-babylon.js`}\n/>\n<script\n- src={`//cdnjs.cloudflare.com/ajax/libs/prop-types/${versions.propTypes}/prop-types${\n+ src={`https://cdnjs.cloudflare.com/ajax/libs/prop-types/${versions.propTypes}/prop-types${\nsiteData.dev ? '' : '.min'\n}.js`}\n/>\n<script\n- src={`//cdnjs.cloudflare.com/ajax/libs/react/${versions.react}/umd/react${\n+ src={`https://cdnjs.cloudflare.com/ajax/libs/react/${versions.react}/umd/react${\ndev ? '.development' : '.production.min'\n}.js`}\n/>\n<script\n- src={`//cdnjs.cloudflare.com/ajax/libs/react-dom/${versions.react}/umd/react-dom${\n+ src={`https://cdnjs.cloudflare.com/ajax/libs/react-dom/${versions.react}/umd/react-dom${\ndev ? '.development' : '.production.min'\n}.js`}\n/>\n<script\n- src={`//cdnjs.cloudflare.com/ajax/libs/react-dom/${\n+ src={`https://cdnjs.cloudflare.com/ajax/libs/react-dom/${\nversions.react\n}/umd/react-dom-server.browser${dev ? '.development' : '.production.min'}.js`}\n/>\n",
        "date": "29.09.2018 13:13:49",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Update CDN links to use HTTPS protocol and fix prettier standalone script URL."
    },
    {
        "msg": "docs(README): fix link to CSS Usage page",
        "diff": "diff --git a/README.md b/README.md @@ -112,6 +112,7 @@ This is a listing of example projects and guides that will help you integrate Se\n<details>\n<summary><b>How do I setup CSS?</b></summary>\n+\nThere are several options. Refer to our doc on [CSS Usage][23].\n</details>\n",
        "date": "12.10.2018 11:08:46",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Add information on setting up CSS in README.md"
    },
    {
        "msg": "docs(Search): fix resolver imports",
        "diff": "diff --git a/docs/src/components/ComponentDoc/ComponentExample/ComponentExampleRenderSource.js b/docs/src/components/ComponentDoc/ComponentExample/ComponentExampleRenderSource.js @@ -9,6 +9,8 @@ import { updateForKeys } from 'docs/src/hoc'\nimport * as selectCommon from 'docs/src/examples/addons/Select/common'\nimport Wireframe from 'docs/src/examples/behaviors/Visibility/Wireframe'\nimport * as dropdownCommon from 'docs/src/examples/modules/Dropdown/common'\n+import SearchExampleStandard from 'docs/src/examples/modules/Search/Types/SearchExampleStandard'\n+import SearchExampleCategory from 'docs/src/examples/modules/Search/Types/SearchExampleCategory'\nconst babelConfig = {\npresets: [\n@@ -39,7 +41,10 @@ const commons = {\nconst resolver = (importPath, { displayName }) => {\nif (externals[importPath]) return externals[importPath]\nif (commons[displayName] && _.endsWith(importPath, '/common')) return commons[displayName]\n+\nif (_.endsWith(importPath, '/Wireframe')) return Wireframe\n+ if (_.endsWith(importPath, '/SearchExampleCategory')) return SearchExampleCategory\n+ if (_.endsWith(importPath, '/SearchExampleStandard')) return SearchExampleStandard\nthrow new Error(\n[\n",
        "date": "12.10.2018 15:05:48",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Add SearchExampleStandard and SearchExampleCategory imports in ComponentExampleRenderSource"
    },
    {
        "msg": "docs(Usage): fix link to Semantic UI CSS",
        "diff": "diff --git a/docs/src/pages/Usage.mdx b/docs/src/pages/Usage.mdx @@ -59,7 +59,7 @@ custom themes with this method.\n<CodeSnippet\nmode='html'\n- value={`<link rel=\"stylesheet\" href=\"//cdnjs.cloudflare.com/ajax/libs/semantic-ui/${props.versions.sui}/semantic.min.css\"></link>`}\n+ value={`<link rel=\"stylesheet\" href=\"//cdn.jsdelivr.net/npm/semantic-ui@${props.versions.sui}/dist/semantic.min.css\"></link>`}\n/>\n### Semantic UI CSS package\n",
        "date": "23.10.2018 17:00:41",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Update Semantic UI CSS package CDN link to use jsDelivr instead of Cloudflare."
    },
    {
        "msg": "docs(Textarea): add notice about form",
        "diff": "diff --git a/docs/src/examples/addons/TextArea/Types/index.js b/docs/src/examples/addons/TextArea/Types/index.js import React from 'react'\n+import { Message } from 'semantic-ui-react'\nimport ComponentExample from 'docs/src/components/ComponentDoc/ComponentExample'\nimport ExampleSection from 'docs/src/components/ComponentDoc/ExampleSection'\n@@ -9,7 +10,12 @@ const TextAreaTypesExamples = () => (\ntitle='TextArea'\ndescription='A default TextArea.'\nexamplePath='addons/TextArea/Types/TextAreaExampleTextArea'\n- />\n+ >\n+ <Message info>\n+ You should always wrap a <code>Textarea</code> with a <code>Form</code> component to get\n+ styles applied because Semantic UI applies styles for <code>.ui.form textarea</code>.\n+ </Message>\n+ </ComponentExample>\n</ExampleSection>\n)\n",
        "date": "10.11.2018 09:49:41",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Add informational message about wrapping TextArea component with Form component"
    },
    {
        "msg": "docs(Layouts): update FixedMenuLayout\n* Update FixedMenuLayout.js\nKeep maximum compatibility with\n* fix style",
        "diff": "diff --git a/docs/src/layouts/FixedMenuLayout.js b/docs/src/layouts/FixedMenuLayout.js @@ -60,7 +60,6 @@ const FixedMenuLayout = () => (\n<Segment inverted vertical style={{ margin: '5em 0em 0em', padding: '5em 0em' }}>\n<Container textAlign='center'>\n<Grid divided inverted stackable>\n- <Grid.Row>\n<Grid.Column width={3}>\n<Header inverted as='h4' content='Group 1' />\n<List link inverted>\n@@ -94,12 +93,11 @@ const FixedMenuLayout = () => (\nExtra space for a call to action inside the footer that could help re-engage users.\n</p>\n</Grid.Column>\n- </Grid.Row>\n</Grid>\n<Divider inverted section />\n<Image centered size='mini' src='/logo.png' />\n- <List horizontal inverted divided link>\n+ <List horizontal inverted divided link size='small'>\n<List.Item as='a' href='#'>\nSite Map\n</List.Item>\n",
        "date": "04.12.2018 16:18:58",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Remove unnecessary grid row in FixedMenuLayout and update list size in footer."
    },
    {
        "msg": "docs(formatCode): make SSR compatible",
        "diff": "diff --git a/docs/src/utils/formatCode.js b/docs/src/utils/formatCode.js import prettier from 'prettier/standalone'\nimport prettierConfig from '../../../.prettierrc.json'\n+import isBrowser from '../../../src/lib/isBrowser'\nconst { printWidth } = prettierConfig.overrides.find(\n({ files }) => files === 'docs/src/examples/**/*.js',\n@@ -19,7 +20,7 @@ const formatCode = (code, parser = 'babylon') => {\n...prettierConfig,\nprintWidth,\nparser,\n- plugins: window.prettierPlugins,\n+ plugins: isBrowser() ? window.prettierPlugins : undefined,\n})\nreturn formatted.replace(/^;</, '<') // remove beginning comma in JSX/HTML\n",
        "date": "09.12.2018 15:24:55",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Refactor formatCode.js to conditionally load prettierPlugins based on whether the code is running in a browser."
    },
    {
        "msg": "docs(formatCode): make noop in SSR",
        "diff": "diff --git a/docs/src/utils/formatCode.js b/docs/src/utils/formatCode.js @@ -13,17 +13,19 @@ delete prettierConfig.overrides\n// Please use this function directly and don't reexport it in utils.\n// https://github.com/prettier/prettier/issues/4959\n-const formatCode = (code, parser = 'babylon') => {\n+const formatCode = isBrowser()\n+ ? (code, parser = 'babylon') => {\nif (!code) return ''\nconst formatted = prettier.format(code, {\n...prettierConfig,\nprintWidth,\nparser,\n- plugins: isBrowser() ? window.prettierPlugins : undefined,\n+ plugins: window.prettierPlugins,\n})\n- return formatted.replace(/^;</, '<') // remove beginning comma in JSX/HTML\n+ return formatted.replace(/^;</, '<') // remove beginning semi in JSX/HTML\n}\n+ : x => x\nexport default formatCode\n",
        "date": "09.12.2018 16:14:12",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Refactor formatCode function to conditionally include prettier plugins based on environment"
    },
    {
        "msg": "docs(Props): fix \"Props\" checkbox",
        "diff": "diff --git a/docs/src/components/ComponentDoc/ComponentProps/ComponentProps.js b/docs/src/components/ComponentDoc/ComponentProps/ComponentProps.js @@ -50,7 +50,7 @@ export default class ComponentProps extends Component {\nreturn (\n<div>\n- <Checkbox slider checked={!!activeDisplayName} label='Props' onClick={this.handleToggle} />\n+ <Checkbox slider checked={!!activeDisplayName} label='Props' onChange={this.handleToggle} />\n<ComponentPropsComponents\nactiveDisplayName={activeDisplayName}\ndisplayNames={displayNames}\n",
        "date": "10.12.2018 10:29:15",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Fix onChange event handler in ComponentProps component"
    },
    {
        "msg": "docs(Placeholder): remove extra HTML and classes",
        "diff": "diff --git a/docs/src/examples/elements/Placeholder/Variations/PlaceholderExampleLineLengthWithHeader.js b/docs/src/examples/elements/Placeholder/Variations/PlaceholderExampleLineLengthWithHeader.js @@ -3,7 +3,6 @@ import { Placeholder } from 'semantic-ui-react'\nconst PlaceholderExampleLineLengthWithHeader = () => (\n<Placeholder>\n- <div className='ui placeholder'>\n<Placeholder.Header image>\n<Placeholder.Line length='medium' />\n<Placeholder.Line length='full' />\n@@ -12,7 +11,6 @@ const PlaceholderExampleLineLengthWithHeader = () => (\n<Placeholder.Line length='full' />\n<Placeholder.Line length='medium' />\n</Placeholder.Paragraph>\n- </div>\n</Placeholder>\n)\n",
        "date": "19.12.2018 09:18:02",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Remove unnecessary div element from PlaceholderExampleLineLengthWithHeader component"
    },
    {
        "msg": "docs(Responsive): update ResponsiveExampleMaxWidth.js (added two words to clarify)\nAdded \"and lower\" to the 2569px width example, because that's what it does and the wording was confusing on first sight.",
        "diff": "diff --git a/docs/src/examples/addons/Responsive/Types/ResponsiveExampleMaxWidth.js b/docs/src/examples/addons/Responsive/Types/ResponsiveExampleMaxWidth.js @@ -7,7 +7,7 @@ const ResponsiveExampleMaxWidth = () => (\nVisible only if display has <code>767px</code> width and lower\n</Responsive>\n<Responsive as={Segment} maxWidth={2569}>\n- Visible only if display has <code>2569px</code> width\n+ Visible only if display has <code>2569px</code> width and lower\n</Responsive>\n</Segment.Group>\n)\n",
        "date": "02.01.2019 12:34:44",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Update ResponsiveExampleMaxWidth to include lower width limit for maxWidth prop"
    },
    {
        "msg": "docs(github_changelog_generator): update script",
        "diff": "diff --git a/package.json b/package.json \"sideEffects\": false,\n\"scripts\": {\n\"build\": \"cross-env NODE_ENV=production gulp build\",\n- \"build:changelog\": \"github_changelog_generator --user Semantic-Org --project Semantic-UI-React --no-issues --no-unreleased --release-branch master --breaking-labels breaking-change --since-tag $(git describe --abbrev=0 --tags $(git rev-parse HEAD~250))\",\n+ \"build:changelog\": \"github_changelog_generator --user Semantic-Org --project Semantic-UI-React --no-issues --no-unreleased --release-branch master --since-tag $(git describe --abbrev=0 --tags $(git rev-parse HEAD~250))\",\n\"build:docs\": \"cross-env NODE_ENV=production gulp build:docs\",\n\"build:docs:staging\": \"cross-env STAGING=true yarn build:docs && yarn serve docs/dist\",\n\"build:dist\": \"gulp --series build:dist\",\n",
        "date": "04.02.2019 10:33:28",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Update build:changelog script in package.json"
    },
    {
        "msg": "docs(Modal): fix Modal.Description description\ndocs(Modal): fix Modal.Description description",
        "diff": "diff --git a/src/modules/Modal/ModalDescription.js b/src/modules/Modal/ModalDescription.js @@ -5,7 +5,7 @@ import React from 'react'\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps } from '../../lib'\n/**\n- * A modal can have a header.\n+ * A modal can contain a description with one or more paragraphs.\n*/\nfunction ModalDescription(props) {\nconst { children, className, content } = props\n",
        "date": "22.02.2019 11:33:11",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Refactor ModalDescription to contain a description with one or more paragraphs."
    },
    {
        "msg": "docs(Dropdown): fix floating example in FF",
        "diff": "diff --git a/docs/src/examples/modules/Dropdown/Types/DropdownExampleFloating.js b/docs/src/examples/modules/Dropdown/Types/DropdownExampleFloating.js @@ -11,8 +11,7 @@ const DropdownExampleFloating = () => (\n<Button.Group color='teal'>\n<Button>Save</Button>\n<Dropdown\n- as={Button}\n- className='icon'\n+ className='button icon'\nfloating\noptions={options}\ntrigger={<React.Fragment />}\n",
        "date": "20.03.2019 10:52:41",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Refactor DropdownExampleFloating component to use className 'button icon' instead of 'icon' for styling consistency."
    },
    {
        "msg": "docs(Dropdown): remove deprecated lifecycle method from DropdownExampleRemote\n* docs(Dropdown): Remove deprecated lifecycle method.\nCommit includes automatic formatting changes by lint.\n* Update DropdownExampleRemote.js\n* Update DropdownExampleRemote.js",
        "diff": "diff --git a/docs/src/examples/modules/Dropdown/Usage/DropdownExampleRemote.js b/docs/src/examples/modules/Dropdown/Usage/DropdownExampleRemote.js @@ -10,15 +10,13 @@ const getOptions = () =>\n})\nclass DropdownExampleRemote extends Component {\n- componentWillMount() {\n- this.setState({\n+ state = {\nisFetching: false,\nmultiple: true,\nsearch: true,\nsearchQuery: null,\nvalue: [],\noptions: getOptions(),\n- })\n}\nhandleChange = (e, { value }) => this.setState({ value })\n@@ -39,7 +37,7 @@ class DropdownExampleRemote extends Component {\nthis.setState({ value: multiple ? [value] : value })\n}\n- toggleSearch = e => this.setState({ search: e.target.checked })\n+ toggleSearch = (e) => this.setState({ search: e.target.checked })\ntoggleMultiple = (e) => {\nconst { value } = this.state\n@@ -61,10 +59,20 @@ class DropdownExampleRemote extends Component {\nRandom\n</Button>\n<label>\n- <input type='checkbox' checked={search} onChange={this.toggleSearch} /> Search\n+ <input\n+ type='checkbox'\n+ checked={search}\n+ onChange={this.toggleSearch}\n+ />{' '}\n+ Search\n</label>{' '}\n<label>\n- <input type='checkbox' checked={multiple} onChange={this.toggleMultiple} /> Multiple\n+ <input\n+ type='checkbox'\n+ checked={multiple}\n+ onChange={this.toggleMultiple}\n+ />{' '}\n+ Multiple\n</label>\n</p>\n<Dropdown\n",
        "date": "21.03.2019 08:23:44",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Refactor DropdownExampleRemote component to use class properties and arrow functions for event handlers."
    },
    {
        "msg": "docs(ComponentDoc): replace deprecated lifecycle methods\n* docs(ComponentDoc): replace deprecated lifecycle methods\nReplace componentWillReceiveProps by getDerivedStateFromProps.\n* Update ComponentDoc.js",
        "diff": "diff --git a/docs/src/components/ComponentDoc/ComponentDoc.js b/docs/src/components/ComponentDoc/ComponentDoc.js @@ -34,15 +34,16 @@ class ComponentDoc extends Component {\nstate = {}\nexamplesRef = createRef()\n- getChildContext() {\n+ static getDerivedStateFromProps(props, state) {\nreturn {\n- onPassed: this.handleExamplePassed,\n+ displayName: props.displayName,\n+ activePath: props.displayName === state.displayName ? state.activePath : undefined,\n}\n}\n- componentWillReceiveProps({ displayName }) {\n- if (displayName !== this.props.displayName) {\n- this.setState({ activePath: undefined })\n+ getChildContext() {\n+ return {\n+ onPassed: this.handleExamplePassed,\n}\n}\n",
        "date": "28.03.2019 08:39:13",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Refactor ComponentDoc to use getDerivedStateFromProps instead of componentWillReceiveProps"
    },
    {
        "msg": "docs(ComponentProps): replace deprecated lifecycle methods",
        "diff": "diff --git a/docs/src/components/ComponentDoc/ComponentProps/ComponentProps.js b/docs/src/components/ComponentDoc/ComponentProps/ComponentProps.js @@ -16,16 +16,12 @@ export default class ComponentProps extends Component {\ndisplayName: PropTypes.string.isRequired,\n}\n- state = {\n- activeDisplayName: null,\n- }\n-\n- componentWillReceiveProps(nextProps) {\n- const currentName = this.props.displayName\n- const nextName = nextProps.displayName\n+ state = {}\n- if (currentName.displayName !== nextName) {\n- this.setState({ activeDisplayName: null })\n+ static getDerivedStateFromProps(props, state) {\n+ return {\n+ displayName: props.displayName,\n+ activeDisplayName: props.displayName === state.displayName ? state.activeDisplayName : null,\n}\n}\n",
        "date": "08.04.2019 01:42:16",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Refactor ComponentProps to use static getDerivedStateFromProps instead of componentWillReceiveProps"
    },
    {
        "msg": "docs(Dropdown): fix typo in message",
        "diff": "diff --git a/docs/src/examples/modules/Dropdown/Usage/index.js b/docs/src/examples/modules/Dropdown/Usage/index.js @@ -98,7 +98,7 @@ const DropdownUsageExamples = () => (\nexamplePath='modules/Dropdown/Usage/DropdownExampleSearchQuery'\n>\n<Message info>\n- This example also shows how to override default bevahiour of the search query and keep\n+ This example also shows how to override default behaviour of the search query and keep\nentered value after selection.\n</Message>\n</ComponentExample>\n",
        "date": "24.04.2019 20:43:49",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Fix typo in DropdownUsageExamples component message"
    },
    {
        "msg": "docs(layouts): fix incorrectly cased tabIndex in Bootstrap layout\nThe tabIndex prop was passed as tabindex (non camel-cased).\nSimple and quick change :)",
        "diff": "diff --git a/docs/src/layouts/BootstrapMigrationLayout.js b/docs/src/layouts/BootstrapMigrationLayout.js @@ -41,19 +41,19 @@ const BootstrapMigrationLayout = () => (\n<Grid.Row>\n<Grid.Column>\n<Header as='h1'>Buttons</Header>\n- <Button as='a' tabindex='0'>\n+ <Button as='a' tabIndex='0'>\nDefault\n</Button>\n- <Button as='a' primary tabindex='0'>\n+ <Button as='a' primary tabIndex='0'>\nPrimary\n</Button>\n- <Button as='a' basic tabindex='0'>\n+ <Button as='a' basic tabIndex='0'>\nBasic\n</Button>\n- <Button as='a' positive tabindex='0'>\n+ <Button as='a' positive tabIndex='0'>\nSuccess\n</Button>\n- <Button as='a' negative tabindex='0'>\n+ <Button as='a' negative tabIndex='0'>\nError\n</Button>\n</Grid.Column>\n",
        "date": "17.06.2019 16:39:25",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Fix tabindex attribute to tabIndex in BootstrapMigrationLayout.js"
    },
    {
        "msg": "docs(Usage): fix typo in CRA naming\nFixes",
        "diff": "diff --git a/docs/src/pages/Usage.mdx b/docs/src/pages/Usage.mdx @@ -100,7 +100,7 @@ example recipes with some of them. You can use these as a starting point for you\nrender: () => (\n<Tab.Pane style={{ fontSize: 'inherit' }}>\n<p>\n- Semantic UI React is fully compatible with <code>create-app-react</code> and works out\n+ Semantic UI React is fully compatible with <code>create-react-app</code> and works out\nthe box. Setup of custom theme is covered in <Link to='/theming'>Theming guide</Link>.\n</p>\n</Tab.Pane>\n",
        "date": "18.06.2019 22:24:00",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Fix typo in Usage.mdx file"
    },
    {
        "msg": "docs(Embed): fix example with custom URL",
        "diff": "diff --git a/docs/src/examples/modules/Embed/Types/EmbedExampleCustom.js b/docs/src/examples/modules/Embed/Types/EmbedExampleCustom.js @@ -5,7 +5,7 @@ const EmbedExampleCustom = () => (\n<Embed\nicon='right circle arrow'\nplaceholder='/images/image-16by9.png'\n- url='http://www.myfav.es/jack'\n+ url='https://www.myfav.es/jack'\n/>\n)\n",
        "date": "26.08.2019 15:50:29",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Update URL in EmbedExampleCustom to use HTTPS protocol"
    },
    {
        "msg": "docs(Theming): use plugin",
        "diff": "diff --git a/docs/src/pages/Theming.mdx b/docs/src/pages/Theming.mdx @@ -80,14 +80,14 @@ yarn remove semantic-ui semantic-ui-css\n### Install required dependencies\n-Create React App does not support LESS out of the box, we and propose to use [`@craco/craco`](https://www.npmjs.com/package/@craco/craco) to add it and avoid `eject`. You have to install required packages:\n+Create React App does not support LESS out of the box, we and propose to use [`@craco/craco`](https://www.npmjs.com/package/@craco/craco) to add its support and avoid `eject`. You have to install required packages:\n```bash\n-npm install @craco/craco craco-less semantic-ui-less --save-dev\n+npm install @craco/craco @semantic-ui-react/craco-less semantic-ui-less --save-dev\n```\n```bash\n-yarn add @craco/craco craco-less semantic-ui-less --dev\n+yarn add @craco/craco @semantic-ui-react/craco-less semantic-ui-less --dev\n```\nAnd then update your `package.json` and create `craco.config.js`:\n@@ -104,39 +104,8 @@ And then update your `package.json` and create `craco.config.js`:\n```\n```jsx label=craco.config.js\n-const { getLoader, loaderByName, throwUnexpectedConfigError } = require('@craco/craco')\n-\nmodule.exports = {\n- webpack: {\n- alias: {\n- '../../theme.config$': require('path').join(__dirname, '/src/semantic-ui/theme.config'),\n- },\n- },\n- plugins: [\n- { plugin: require('craco-less') },\n- {\n- plugin: {\n- overrideWebpackConfig: ({ context, webpackConfig }) => {\n- const { isFound, match: fileLoaderMatch } = getLoader(\n- webpackConfig,\n- loaderByName('file-loader'),\n- )\n-\n- if (!isFound) {\n- throwUnexpectedConfigError({\n- message: `Can't find file-loader in the ${context.env} webpack config!`,\n- })\n- }\n-\n- fileLoaderMatch.loader.exclude.push(/theme.config$/)\n- fileLoaderMatch.loader.exclude.push(/\\.variables$/)\n- fileLoaderMatch.loader.exclude.push(/\\.overrides$/)\n-\n- return webpackConfig\n- },\n- },\n- },\n- ],\n+ plugins: [{ plugin: require('@semantic-ui-react/craco-less') }],\n}\n```\n",
        "date": "29.08.2019 15:47:10",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Add support for LESS in Create React App using @semantic-ui-react/craco-less plugin"
    },
    {
        "msg": "docs(MenuExampleHeaderVertical): fix onClick handler\nhandleItemClick = (e, { name }) => this.setState({ activeItem: name });",
        "diff": "diff --git a/docs/src/examples/collections/Menu/Content/MenuExampleHeaderVertical.js b/docs/src/examples/collections/Menu/Content/MenuExampleHeaderVertical.js @@ -3,7 +3,7 @@ import { Menu } from 'semantic-ui-react'\nexport default class MenuExampleHeaderVertical extends Component {\nstate = {}\n- handleItemClick = (name) => this.setState({ activeItem: name })\n+ handleItemClick = (e, { name }) => this.setState({ activeItem: name });\nrender() {\nconst { activeItem } = this.state\n",
        "date": "08.12.2019 23:22:16",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Refactor handleItemClick function to include event parameter"
    },
    {
        "msg": "docs: update warning about using yarn",
        "diff": "diff --git a/.github/CONTRIBUTING.md b/.github/CONTRIBUTING.md @@ -60,7 +60,7 @@ cd Semantic-UI-React\nyarn\n```\n->Note, we use `yarn` because `npm` has unfortunately become unreliable. Get it [here][16].\n+>Note: we use `yarn` and advise you do too while contributing. Get it [here](https://yarnpkg.com/). You can use `npm install / npm ci` but we don't include a `package-lock.json` in the repository, so you may end up with slightly out of sync dependencies.\nAdd our repo as a git remote so you can pull/rebase your fork with our latest updates:\n",
        "date": "08.12.2019 17:35:33",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Update CONTRIBUTING.md to recommend using yarn for contributing."
    },
    {
        "msg": "docs(VisibilityExampleUpdateOn): your description",
        "diff": "diff --git a/docs/src/examples/behaviors/Visibility/Settings/VisibilityExampleUpdateOn.js b/docs/src/examples/behaviors/Visibility/Settings/VisibilityExampleUpdateOn.js @@ -77,7 +77,7 @@ export default class VisibilityExampleUpdateOn extends Component {\n<Segment>\n<Checkbox\nchecked={showWireframe}\n- label='Show Wifeframe'\n+ label='Show Wireframe'\nonChange={this.handleWireframe}\ntoggle\n/>\n",
        "date": "23.06.2020 08:24:59",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Fix typo in label for wireframe checkbox"
    },
    {
        "msg": "docs(README.md): fix formatting",
        "diff": "diff --git a/README.md b/README.md @@ -107,7 +107,7 @@ This is a listing of example projects and guides that will help you integrate Se\n<details>\n<summary><b>Can I use custom Icons?</b></summary>\n- Yes. Just use <code>&lt;Icon className='my-icon' /&gt;</code> instead of `&lt;Icon name='my-icon' /&gt;`. See https://github.com/Semantic-Org/Semantic-UI-React/issues/931#issuecomment-263643210 for detailed info and examples.\n+ Yes. Just use <code>&lt;Icon className='my-icon' /&gt;</code> instead of <code>&lt;Icon name='my-icon' /&gt;</code>. See https://github.com/Semantic-Org/Semantic-UI-React/issues/931#issuecomment-263643210 for detailed info and examples.\n</details>\n<details>\n",
        "date": "17.07.2020 10:17:47",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Fix typo in README.md regarding custom Icons usage"
    },
    {
        "msg": "docs: remove development warning from readme [ci skip]",
        "diff": "diff --git a/README.md b/README.md </a>\n</p>\n->Hey, we're in development. Prior to reaching [v1.0.0][6]:\n->\n->1. **MINOR** versions represent **breaking changes**\n->1. **PATCH** versions represent **fixes _and_ features**\n->1. There are **no deprecation warnings** between releases\n->1. You should consult the [**CHANGELOG**][18] and related issues/PRs for more information\n-\n## Installation & Usage\nSee the [**Documentation**][2] for an introduction, usage information, and examples.\n",
        "date": "21.07.2020 09:33:20",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Update README.md with versioning guidelines and installation instructions"
    },
    {
        "msg": "docs(LabelExampleImageColored): Update example\nReplace Veronika with jenny due to image name",
        "diff": "diff --git a/docs/src/examples/elements/Label/Types/LabelExampleImageColored.js b/docs/src/examples/elements/Label/Types/LabelExampleImageColored.js @@ -10,12 +10,12 @@ const LabelExampleImage = () => (\n</Label>\n<Label as='a' color='teal' image>\n<img src='/images/avatar/small/jenny.jpg' />\n- Veronika\n+ Jenny\n<Label.Detail>Friend</Label.Detail>\n</Label>\n<Label as='a' color='yellow' image>\n<img src='/images/avatar/small/christian.jpg' />\n- Helen\n+ Christian\n<Label.Detail>Co-worker</Label.Detail>\n</Label>\n</div>\n",
        "date": "24.07.2020 14:13:02",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Update names in LabelExampleImageColored.js"
    },
    {
        "msg": "docs(TableExampleSortable): your description\n* docs(TableExampleSortable): your description\nUpdated for react hooks\n* Update TableExampleSortable.js",
        "diff": "diff --git a/docs/src/examples/collections/Table/Variations/TableExampleSortable.js b/docs/src/examples/collections/Table/Variations/TableExampleSortable.js import _ from 'lodash'\n-import React, { Component } from 'react'\n+import React from 'react'\nimport { Table } from 'semantic-ui-react'\nconst tableData = [\n@@ -9,34 +9,35 @@ const tableData = [\n{ name: 'Ben', age: 70, gender: 'Male' },\n]\n-export default class TableExampleSortable extends Component {\n- state = {\n- column: null,\n- data: tableData,\n- direction: null,\n+function exampleReducer(state, action) {\n+ switch (action.type) {\n+ case 'CHANGE_SORT':\n+ if (state.column === action.column) {\n+ return {\n+ ...state,\n+ data: state.data.reverse(),\n+ direction:\n+ state.direction === 'ascending' ? 'descending' : 'ascending',\n+ }\n}\n- handleSort = (clickedColumn) => () => {\n- const { column, data, direction } = this.state\n-\n- if (column !== clickedColumn) {\n- this.setState({\n- column: clickedColumn,\n- data: _.sortBy(data, [clickedColumn]),\n+ return {\n+ column: action.column,\n+ data: _.sortBy(state.data, [action.column]),\ndirection: 'ascending',\n- })\n-\n- return\n}\n-\n- this.setState({\n- data: data.reverse(),\n- direction: direction === 'ascending' ? 'descending' : 'ascending',\n- })\n+ default:\n+ throw new Error()\n+ }\n}\n- render() {\n- const { column, data, direction } = this.state\n+function TableExampleSortable() {\n+ const [state, dispatch] = React.useReducer(exampleReducer, {\n+ column: null,\n+ data: tableData,\n+ direction: null,\n+ })\n+ const { column, data, direction } = state\nreturn (\n<Table sortable celled fixed>\n@@ -44,26 +45,26 @@ export default class TableExampleSortable extends Component {\n<Table.Row>\n<Table.HeaderCell\nsorted={column === 'name' ? direction : null}\n- onClick={this.handleSort('name')}\n+ onClick={() => dispatch({ type: 'CHANGE_SORT', column: 'name' })}\n>\nName\n</Table.HeaderCell>\n<Table.HeaderCell\nsorted={column === 'age' ? direction : null}\n- onClick={this.handleSort('age')}\n+ onClick={() => dispatch({ type: 'CHANGE_SORT', column: 'age' })}\n>\nAge\n</Table.HeaderCell>\n<Table.HeaderCell\nsorted={column === 'gender' ? direction : null}\n- onClick={this.handleSort('gender')}\n+ onClick={() => dispatch({ type: 'CHANGE_SORT', column: 'gender' })}\n>\nGender\n</Table.HeaderCell>\n</Table.Row>\n</Table.Header>\n<Table.Body>\n- {_.map(data, ({ age, gender, name }) => (\n+ {data.map(({ age, gender, name }) => (\n<Table.Row key={name}>\n<Table.Cell>{name}</Table.Cell>\n<Table.Cell>{age}</Table.Cell>\n@@ -74,4 +75,5 @@ export default class TableExampleSortable extends Component {\n</Table>\n)\n}\n-}\n+\n+export default TableExampleSortable\n",
        "date": "28.07.2020 09:21:02",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Refactor TableExampleSortable component to use React hooks and reducer for state management"
    },
    {
        "msg": "docs(Tab): add note that `grid` prop only applies to vertical menu",
        "diff": "diff --git a/src/modules/Tab/Tab.js b/src/modules/Tab/Tab.js @@ -122,7 +122,7 @@ Tab.propTypes = {\n/** Align vertical menu */\nmenuPosition: PropTypes.oneOf(['left', 'right']),\n- /** Shorthand props for the Grid. */\n+ /** Shorthand props for the Grid. Only applicable to vertical menus. */\ngrid: PropTypes.object,\n/**\n",
        "date": "28.07.2020 12:37:40",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Update Tab component propTypes for Grid shorthand props"
    },
    {
        "msg": "docs(SearchExampleStandardCustom): use React hooks\n* docs(SearchExampleStandardCustom): functional component\nConverted into a functional component\n* Update SearchExampleStandardCustom.js\n* Update SearchExampleStandardCustom.js\n* final adjustments",
        "diff": "diff --git a/docs/src/examples/modules/Search/Types/SearchExampleStandardCustom.js b/docs/src/examples/modules/Search/Types/SearchExampleStandardCustom.js -import PropTypes from 'prop-types'\nimport _ from 'lodash'\nimport faker from 'faker'\n-import React, { Component } from 'react'\n+import React from 'react'\nimport { Search, Grid, Header, Segment, Label } from 'semantic-ui-react'\nconst source = _.times(5, () => ({\n@@ -11,58 +10,80 @@ const source = _.times(5, () => ({\nprice: faker.finance.amount(0, 100, 2, '$'),\n}))\n-const resultRenderer = ({ title }) => <Label content={title} />\n-\n-resultRenderer.propTypes = {\n- title: PropTypes.string,\n- description: PropTypes.string,\n+const initialState = {\n+ loading: false,\n+ results: [],\n+ value: '',\n}\n-const initialState = { isLoading: false, results: [], value: '' }\n+function exampleReducer(state, action) {\n+ switch (action.type) {\n+ case 'CLEAN_QUERY':\n+ return initialState\n+ case 'START_SEARCH':\n+ return { ...state, loading: true, value: action.query }\n+ case 'FINISH_SEARCH':\n+ return { ...state, loading: false, results: action.results }\n+ case 'UPDATE_SELECTION':\n+ return { ...state, value: action.selection }\n-export default class SearchExampleStandard extends Component {\n- state = initialState\n+ default:\n+ throw new Error()\n+ }\n+}\n- handleResultSelect = (e, { result }) => this.setState({ value: result.title })\n+const resultRenderer = ({ title }) => <Label content={title} />\n+\n+function SearchExampleStandardCustom() {\n+ const [state, dispatch] = React.useReducer(exampleReducer, initialState)\n+ const { loading, results, value } = state\n- handleSearchChange = (e, { value }) => {\n- this.setState({ isLoading: true, value })\n+ const timeoutRef = React.useRef()\n+ const handleSearchChange = React.useCallback((e, data) => {\n+ clearTimeout(timeoutRef.current)\n+ dispatch({ type: 'START_SEARCH', query: data.value })\n- setTimeout(() => {\n- if (this.state.value.length < 1) return this.setState(initialState)\n+ timeoutRef.current = setTimeout(() => {\n+ if (data.value.length === 0) {\n+ dispatch({ type: 'CLEAN_QUERY' })\n+ return\n+ }\n- const re = new RegExp(_.escapeRegExp(this.state.value), 'i')\n+ const re = new RegExp(_.escapeRegExp(data.value), 'i')\nconst isMatch = (result) => re.test(result.title)\n- this.setState({\n- isLoading: false,\n+ dispatch({\n+ type: 'FINISH_SEARCH',\nresults: _.filter(source, isMatch),\n})\n}, 300)\n+ }, [])\n+ React.useEffect(() => {\n+ return () => {\n+ clearTimeout(timeoutRef.current)\n}\n-\n- render() {\n- const { isLoading, value, results } = this.state\n+ }, [])\nreturn (\n<Grid>\n<Grid.Column width={6}>\n<Search\n- loading={isLoading}\n- onResultSelect={this.handleResultSelect}\n- onSearchChange={_.debounce(this.handleSearchChange, 500, {\n- leading: true,\n- })}\n+ loading={loading}\n+ onResultSelect={(e, data) =>\n+ dispatch({ type: 'UPDATE_SELECTION', selection: data.result.title })\n+ }\n+ onSearchChange={handleSearchChange}\n+ resultRenderer={resultRenderer}\nresults={results}\nvalue={value}\n- resultRenderer={resultRenderer}\n/>\n</Grid.Column>\n+\n<Grid.Column width={10}>\n<Segment>\n<Header>State</Header>\n<pre style={{ overflowX: 'auto' }}>\n- {JSON.stringify(this.state, null, 2)}\n+ {JSON.stringify({ loading, results, value }, null, 2)}\n</pre>\n<Header>Options</Header>\n<pre style={{ overflowX: 'auto' }}>\n@@ -73,4 +94,5 @@ export default class SearchExampleStandard extends Component {\n</Grid>\n)\n}\n-}\n+\n+export default SearchExampleStandardCustom\n",
        "date": "04.08.2020 04:10:05",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Refactor SearchExampleStandard to use functional components and hooks"
    },
    {
        "msg": "docs(SearchExampleStandard): use React hooks\n* docs(SearchExampleStandard): your description\nConverted into Functional functional component\n* moved source out of function\n* Update SearchExampleStandard.js\n* Update SearchExampleStandard.js\n* Update SearchExampleStandard.js",
        "diff": "diff --git a/docs/src/examples/modules/Search/Types/SearchExampleStandard.js b/docs/src/examples/modules/Search/Types/SearchExampleStandard.js import _ from 'lodash'\nimport faker from 'faker'\n-import React, { Component } from 'react'\n+import React from 'react'\nimport { Search, Grid, Header, Segment } from 'semantic-ui-react'\n-const initialState = { isLoading: false, results: [], value: '' }\n-\nconst source = _.times(5, () => ({\ntitle: faker.company.companyName(),\ndescription: faker.company.catchPhrase(),\n@@ -12,48 +10,77 @@ const source = _.times(5, () => ({\nprice: faker.finance.amount(0, 100, 2, '$'),\n}))\n-export default class SearchExampleStandard extends Component {\n- state = initialState\n+const initialState = {\n+ loading: false,\n+ results: [],\n+ value: '',\n+}\n+\n+function exampleReducer(state, action) {\n+ switch (action.type) {\n+ case 'CLEAN_QUERY':\n+ return initialState\n+ case 'START_SEARCH':\n+ return { ...state, loading: true, value: action.query }\n+ case 'FINISH_SEARCH':\n+ return { ...state, loading: false, results: action.results }\n+ case 'UPDATE_SELECTION':\n+ return { ...state, value: action.selection }\n+\n+ default:\n+ throw new Error()\n+ }\n+}\n- handleResultSelect = (e, { result }) => this.setState({ value: result.title })\n+function SearchExampleStandard() {\n+ const [state, dispatch] = React.useReducer(exampleReducer, initialState)\n+ const { loading, results, value } = state\n- handleSearchChange = (e, { value }) => {\n- this.setState({ isLoading: true, value })\n+ const timeoutRef = React.useRef()\n+ const handleSearchChange = React.useCallback((e, data) => {\n+ clearTimeout(timeoutRef.current)\n+ dispatch({ type: 'START_SEARCH', query: data.value })\n- setTimeout(() => {\n- if (this.state.value.length < 1) return this.setState(initialState)\n+ timeoutRef.current = setTimeout(() => {\n+ if (data.value.length === 0) {\n+ dispatch({ type: 'CLEAN_QUERY' })\n+ return\n+ }\n- const re = new RegExp(_.escapeRegExp(this.state.value), 'i')\n+ const re = new RegExp(_.escapeRegExp(data.value), 'i')\nconst isMatch = (result) => re.test(result.title)\n- this.setState({\n- isLoading: false,\n+ dispatch({\n+ type: 'FINISH_SEARCH',\nresults: _.filter(source, isMatch),\n})\n}, 300)\n+ }, [])\n+ React.useEffect(() => {\n+ return () => {\n+ clearTimeout(timeoutRef.current)\n}\n-\n- render() {\n- const { isLoading, value, results } = this.state\n+ }, [])\nreturn (\n<Grid>\n<Grid.Column width={6}>\n<Search\n- loading={isLoading}\n- onResultSelect={this.handleResultSelect}\n- onSearchChange={_.debounce(this.handleSearchChange, 500, {\n- leading: true,\n- })}\n+ loading={loading}\n+ onResultSelect={(e, data) =>\n+ dispatch({ type: 'UPDATE_SELECTION', selection: data.result.title })\n+ }\n+ onSearchChange={handleSearchChange}\nresults={results}\nvalue={value}\n/>\n</Grid.Column>\n+\n<Grid.Column width={10}>\n<Segment>\n<Header>State</Header>\n<pre style={{ overflowX: 'auto' }}>\n- {JSON.stringify(this.state, null, 2)}\n+ {JSON.stringify({ loading, results, value }, null, 2)}\n</pre>\n<Header>Options</Header>\n<pre style={{ overflowX: 'auto' }}>\n@@ -64,4 +91,5 @@ export default class SearchExampleStandard extends Component {\n</Grid>\n)\n}\n-}\n+\n+export default SearchExampleStandard\n",
        "date": "04.08.2020 05:09:55",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Refactor SearchExampleStandard component to use functional components and hooks"
    },
    {
        "msg": "docs(Placeholder): fix description of the component\nFixed typo - space instead of splace",
        "diff": "diff --git a/src/elements/Placeholder/Placeholder.js b/src/elements/Placeholder/Placeholder.js @@ -15,7 +15,7 @@ import PlaceholderLine from './PlaceholderLine'\nimport PlaceholderParagraph from './PlaceholderParagraph'\n/**\n- * A placeholder is used to reserve splace for content that soon will appear in a layout.\n+ * A placeholder is used to reserve space for content that soon will appear in a layout.\n*/\nfunction Placeholder(props) {\nconst { children, className, content, fluid, inverted } = props\n",
        "date": "18.08.2020 03:35:18",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Fix typo in Placeholder.js - splace to space"
    },
    {
        "msg": "docs: add visual testing to contributing toc [ci skip]",
        "diff": "diff --git a/.github/CONTRIBUTING.md b/.github/CONTRIBUTING.md @@ -29,6 +29,7 @@ CONTRIBUTING\n- [Common Tests](#common-tests)\n- [Usage](#usage)\n- [isConformant (required)](#isconformant-required)\n+ - [Visual testing](#visual-testing)\n- [State](#state)\n- [AutoControlledComponent](#autocontrolledcomponent)\n- [Documentation](#documentation)\n",
        "date": "26.10.2020 09:43:14",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Add section for visual testing in CONTRIBUTING.md"
    },
    {
        "msg": "docs(Table): fix sort issue in TableExampleSortable",
        "diff": "diff --git a/docs/src/examples/collections/Table/Variations/TableExampleSortable.js b/docs/src/examples/collections/Table/Variations/TableExampleSortable.js @@ -15,7 +15,7 @@ function exampleReducer(state, action) {\nif (state.column === action.column) {\nreturn {\n...state,\n- data: state.data.reverse(),\n+ data: state.data.slice().reverse(),\ndirection:\nstate.direction === 'ascending' ? 'descending' : 'ascending',\n}\n",
        "date": "24.11.2020 12:31:28",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Fix data mutation issue in TableExampleSortable.js"
    },
    {
        "msg": "docs(CHANGELOG): update CHANGELOG.md [ci skip]",
        "diff": "diff --git a/CHANGELOG.md b/CHANGELOG.md # Change Log\n+## v2.0.2 (2021-01-13)\n+\n+#### :bug: Bug Fix\n+* [#4116](https://github.com/Semantic-Org/Semantic-UI-React/pull/4116) fix(Image): pass `loading` attribute to an `img` element ([@noinkling](https://github.com/noinkling))\n+\n+#### :memo: Documentation\n+* [#4097](https://github.com/Semantic-Org/Semantic-UI-React/pull/4097) docs(Table): fix sort issue in TableExampleSortable ([@Mental1993](https://github.com/Mental1993))\n+\n+#### :house: Internal\n+* [#4138](https://github.com/Semantic-Org/Semantic-UI-React/pull/4138) chore: bump dependencies to allow React 17 in peerDependencies ([@layershifter](https://github.com/layershifter))\n+* [#4031](https://github.com/Semantic-Org/Semantic-UI-React/pull/4031) chore: support React 17 ([@layershifter](https://github.com/layershifter))\n+\n+#### Committers: 3\n+- Malcolm ([@noinkling](https://github.com/noinkling))\n+- Oleksandr Fediashov ([@layershifter](https://github.com/layershifter))\n+- Pechlivanis Dimitrios ([@Mental1993](https://github.com/Mental1993))\n+\n## [v2.0.1](https://github.com/Semantic-Org/Semantic-UI-React/tree/v2.0.1) (2020-10-26)\n#### :bug: Bug Fix\n",
        "date": "14.01.2021 14:00:27",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Fix bug with Image loading attribute, update documentation for Table sort issue, and bump dependencies for React 17 support."
    },
    {
        "msg": "docs(Introduction): Update broken link for renamed component AutoControlledComponent\nIts name was changed at some point:\nAutoControlledComponent --> ModernAutoControlledComponent",
        "diff": "diff --git a/docs/src/pages/Introduction.js b/docs/src/pages/Introduction.js @@ -303,9 +303,9 @@ const Introduction = ({ pkg, title }) => (\n</p>\n<p>\nTake a look at our\n- <a href={`${repoURL}/blob/master/src/lib/AutoControlledComponent.js`}>\n+ <a href={`${repoURL}/blob/master/src/lib/ModernAutoControlledComponent.js`}>\n&nbsp;\n- <code>AutoControlledComponent</code>\n+ <code>ModernAutoControlledComponent</code>\n&nbsp;\n</a>\nto see how this was done. See the docs try it out live.\n",
        "date": "26.07.2021 09:03:23",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Update component name in Introduction.js to ModernAutoControlledComponent"
    },
    {
        "msg": "docs(MenuExampleStackable): Adding alt for logo\n`img` elements must have an `alt prop`, either with meaningful text, or an empty string for decorative images =>  `jsx-a11y/alt-text`",
        "diff": "diff --git a/docs/src/examples/collections/Menu/Variations/MenuExampleStackable.js b/docs/src/examples/collections/Menu/Variations/MenuExampleStackable.js @@ -12,7 +12,7 @@ export default class MenuExampleStackable extends Component {\nreturn (\n<Menu stackable>\n<Menu.Item>\n- <img src='/logo.png' />\n+ <img alt=\"logo\" src='/logo.png' />\n</Menu.Item>\n<Menu.Item\n",
        "date": "14.01.2022 16:50:04",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Add alt attribute to logo image in MenuExampleStackable"
    },
    {
        "msg": "docs(TextArea): fix verbiage in TextArea docs\nChange the phrase  \"don't support more\" to \"don't support anymore\" in the TextArea docs source, for proper English grammar",
        "diff": "diff --git a/docs/src/examples/addons/TextArea/Usage/index.js b/docs/src/examples/addons/TextArea/Usage/index.js @@ -9,7 +9,7 @@ const TextAreaUsageExamples = () => (\n<Segment>\n<Message warning>\n<Message.Header>Auto height</Message.Header>\n- We don't support `autoHeight` more. If you need this feature you can use{' '}\n+ We don't support `autoHeight` anymore. If you need this feature you can use{' '}\n<a\nhref='https://www.npmjs.com/package/react-textarea-autosize'\nrel='noopener noreferrer'\n",
        "date": "16.01.2022 04:24:59",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Fix typo in commit message"
    },
    {
        "msg": "docs(Modal): fix minor confirm modal typo\nChange a '/' to a '.' in docs for the confirm modal",
        "diff": "diff --git a/src/addons/Confirm/Confirm.js b/src/addons/Confirm/Confirm.js @@ -7,7 +7,7 @@ import Button from '../../elements/Button'\nimport Modal from '../../modules/Modal'\n/**\n- * A Confirm modal gives the user a choice to confirm or cancel an action/\n+ * A Confirm modal gives the user a choice to confirm or cancel an action.\n* @see Modal\n*/\nclass Confirm extends Component {\n",
        "date": "19.01.2022 06:10:04",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Fix typo in Confirm modal description"
    },
    {
        "msg": "docs: updates to contribution.md\nCorrected some words, added links. In the case of `hand written` this\nshould be spelled as `hand-written` or `handwritten`. [See](https://ell.stackexchange.com/questions/128289/how-to-spell-correctly-hand-written-or-handwritten#:~:text=Handwritten%20and%20hand%2Dwritten%20are,but%20lost%20that%20in%20years.)",
        "diff": "diff --git a/.github/CONTRIBUTING.md b/.github/CONTRIBUTING.md @@ -390,7 +390,7 @@ describe('Menu', () => {\n})\n```\n-The last argument to a common test is always `options`. You can configure the test here. Example, if your component requires certain props to render, you can pass in `requiredProps`:\n+The last argument to a common test is always `options`. You can configure the test here. For example, if your component requires certain props to render, you can pass in `requiredProps`:\n```js\nimport * as common from 'test/specs/commonTests'\n@@ -419,7 +419,7 @@ This is the only required test. It ensures a consistent baseline for the framew\n### Visual testing\n-We are using [Percy](https://percy.io/) and Cypress to perform visual testing of our components. To create a new visual\n+We are using [Percy](https://percy.io/) and [Cypress](https://www.cypress.io/) to perform visual testing of our components. To create a new visual\ntest there should an example in our docs that can be served by Cypress and a corresponding Cypress test, for example:\n- `cypress/integration/Popup/Popup.visual.js` contains visual tests\n- `docs/src/examples/modules/Popup/Visual/PopupVisualInsideModal.js` contains an example that will be used for visual\n@@ -437,7 +437,7 @@ function MyComponent(props) {\n}\n```\n-If you're component requires event handlers, it is a stateful class component. Want to know [why][15]?\n+If your component requires event handlers, it is a stateful class component. Want to know [why][15]?\n```js\nclass MyComponent extends Component {\n@@ -464,7 +464,7 @@ TODO\n- [Props](#props)\n- [Examples](#examples)\n-Our docs are generated from docblock comments, `propTypes`, and hand written examples.\n+Our docs are generated from docblock comments, `propTypes`, and hand-written examples.\n### Website\n",
        "date": "27.09.2022 16:25:57",
        "repo": "semantic-org/semantic-ui-react",
        "type": "docs",
        "chatgpt_zeroshot": "Update CONTRIBUTING.md with minor text improvements"
    },
    {
        "msg": "docs(cli): Documented `--global-var` usage in README.md :scroll:",
        "diff": "diff --git a/README.md b/README.md @@ -154,6 +154,10 @@ newman.run({\nSpecify whether or not to force the unicode disable option. When supplied, all symbols in the output will be replaced\nby their plain text equivalents.\n+- `--global-var <key>=<value>`<br />\n+ Allows the specification of global variables via the command line, in a key=value format. Multiple CLI global variables\n+ can be added by using `--global-var` multiple times, like so: `--global-var foo=bar --global-var alpha=beta`.\n+\n#### Configuring Reporters\nReporters provide information about the current collection run in a format that is easy to both: disseminate and assimilate.\n",
        "date": "24.07.2017 14:37:29",
        "repo": "postmanlabs/newman",
        "type": "docs",
        "chatgpt_zeroshot": "Add support for specifying global variables via command line"
    },
    {
        "msg": "docs(cli): Updated --global-var usage documentation",
        "diff": "diff --git a/README.md b/README.md @@ -154,9 +154,9 @@ newman.run({\nSpecify whether or not to force the unicode disable option. When supplied, all symbols in the output will be replaced\nby their plain text equivalents.\n-- `--global-var <key>=<value>`<br />\n+- `--global-var \"<global-variable-name>=<global-variable-value>\"`<br />\nAllows the specification of global variables via the command line, in a key=value format. Multiple CLI global variables\n- can be added by using `--global-var` multiple times, like so: `--global-var foo=bar --global-var alpha=beta`.\n+ can be added by using `--global-var` multiple times, like so: `--global-var \"foo=bar\" --global-var \"alpha=beta\"`.\n#### Configuring Reporters\n",
        "date": "24.07.2017 15:36:54",
        "repo": "postmanlabs/newman",
        "type": "docs",
        "chatgpt_zeroshot": "Update global variable format in README.md"
    },
    {
        "msg": "docs(options): Documented script timeout :scroll:",
        "diff": "diff --git a/README.md b/README.md @@ -127,6 +127,9 @@ newman.run({\n- `--timeout-request <ms>`<br />\nSpecify the time (in milliseconds) to wait for requests to return a response.\n+- `--timeout-script <ms>`<br />\n+ Specify the time (in milliseconds) to wait for scripts to complete execution.\n+\n- `-k`, `--insecure`<br />\nDisables SSL verification checks and allows self-signed SSL certificates.\n@@ -304,6 +307,7 @@ return of the `newman.run` function is a run instance, which emits run events th\n| options.iterationData | Path to the JSON or CSV file or URL to be used as data source when running multiple iterations on a collection.<br /><br />_Optional_<br />Type: `string` |\n| options.folder | The name or ID of the folder (ItemGroup) in the collection which would be run instead of the entire collection.<br /><br />_Optional_<br />Type: `string` |\n| options.timeoutRequest | Specify the time (in milliseconds) to wait for requests to return a response.<br /><br />_Optional_<br />Type: `number`, Default value: `Infinity` |\n+| options.timeoutScript | Specify the time (in milliseconds) to wait for scripts to return a response.<br /><br />_Optional_<br />Type: `number` |\n| options.delayRequest | Specify the time (in milliseconds) to wait for between subsequent requests.<br /><br />_Optional_<br />Type: `number`, Default value: `0` |\n| options.ignoreRedirects | This specifies whether newman would automatically follow 3xx responses from servers.<br /><br />_Optional_<br />Type: `boolean`, Default value: `false` |\n| options.insecure | Disables SSL verification checks and allows self-signed SSL certificates.<br /><br />_Optional_<br />Type: `boolean`, Default value: `false` |\n",
        "date": "02.10.2017 17:13:25",
        "repo": "postmanlabs/newman",
        "type": "docs",
        "chatgpt_zeroshot": "Add timeoutScript option to specify script execution time."
    },
    {
        "msg": "docs: include `envVar`",
        "diff": "diff --git a/README.md b/README.md @@ -271,7 +271,9 @@ return of the `newman.run` function is a run instance, which emits run events th\n| options | This is a required argument and it contains all information pertaining to running a collection.<br /><br />_Required_<br />Type: `object` |\n| options.collection | The collection is a required property of the `options` argument. It accepts an object representation of a Postman Collection which should resemble the schema mentioned at [https://schema.getpostman.com/](https://schema.getpostman.com/). The value of this property could also be an instance of Collection Object from the [Postman Collection SDK](https://github.com/postmanlabs/postman-collection).<br /><br />As `string`, one can provide a URL where the Collection JSON can be found (e.g. [Postman Cloud API](https://api.getpostman.com/) service) or path to a local JSON file.<br /><br />_Required_<br />Type: `object\\|string` [PostmanCollection](https://github.com/postmanlabs/postman-collection/wiki#Collection) |\n| options.environment | One can optionally pass an environment file path or URL as `string` to this property and that will be used to read Postman Environment Variables from. This property also accepts environment variables as an `object`. Environment files exported from Postman App can be directly used here.<br /><br />_Optional_<br />Type: `object\\|string` |\n+| options.envVar | One can optionally pass environment variables as an array of key-value string object pairs. It will be used to read Postman Environment Variables as well as overwrite environment variables from `options.environments`. <br /><br />_Optional_<br />Type: `array\\|object` |\n| options.globals | Postman Global Variables can be optionally passed on to a collection run in form of path to a file or URL. It also accepts variables as an `object`.<br /><br />_Optional_<br />Type: `object\\|string` |\n+| options.globalVar | One can optionally pass global environment variables as an array of key-value string object pairs. It will be used to read Postman Global Environment Variables as well as overwrite global environment variables from `options.globals`. <br /><br />_Optional_<br />Type: `array\\|object` |\n| options.iterationCount | Specify the number of iterations to run on the collection. This is usually accompanied by providing a data file reference as `options.iterationData`.<br /><br />_Optional_<br />Type: `number`, Default value: `1` |\n| options.iterationData | Path to the JSON or CSV file or URL to be used as data source when running multiple iterations on a collection.<br /><br />_Optional_<br />Type: `string` |\n| options.folder | The name or ID of the folder/folders (ItemGroup) in the collection which would be run instead of the entire collection.<br /><br />_Optional_<br />Type: `string\\|array` |\n@@ -338,6 +340,10 @@ newman.run({\n\"_postman_exported_at\": \"2016-10-17T14:31:26.200Z\",\n\"_postman_exported_using\": \"Postman/4.8.0\"\n},\n+ globalVar: [\n+ { \"key\":\"glboalSecret\", \"value\":\"globalSecretValue\" },\n+ { \"key\":\"globalAnotherSecret\", \"value\":`${process.env.GLOBAL_ANOTHER_SECRET}`}\n+ ],\nenvironment: {\n\"id\": \"4454509f-00c3-fd32-d56c-ac1537f31415\",\n\"name\": \"test-env\",\n@@ -353,7 +359,11 @@ newman.run({\n\"_postman_variable_scope\": \"environment\",\n\"_postman_exported_at\": \"2016-10-17T14:26:34.940Z\",\n\"_postman_exported_using\": \"Postman/4.8.0\"\n- }\n+ },\n+ envVar: [\n+ { \"key\":\"secret\", \"value\":\"secretValue\" },\n+ { \"key\":\"anotherSecret\", \"value\":`${process.env.ANOTHER_SECRET}`}\n+ ],\n}).on('start', function (err, args) { // on start of run, log to console\nconsole.log('running a collection...');\n}).on('done', function (err, summary) {\n",
        "date": "29.08.2020 08:02:39",
        "repo": "postmanlabs/newman",
        "type": "docs",
        "chatgpt_zeroshot": "Add support for passing environment and global variables as arrays of key-value pairs."
    },
    {
        "msg": "docs: add JSON to the -d description",
        "diff": "diff --git a/README.md b/README.md @@ -139,7 +139,7 @@ For more details on [Reporters](#reporters) and writing your own [External Repor\nprecedence and can be overridden by environment variables having the same name.\n- `-d <source>`, `--iteration-data <source>`<br />\n- Specify a data source file (CSV) to be used for iteration as a path to a file or as a URL.\n+ Specify a data source file (JSON or CSV) to be used for iteration as a path to a file or as a URL.\n[Read More](https://learning.postman.com/docs/postman/collection-runs/working-with-data-files/)\n- `-n <number>`, `--iteration-count <number>`<br />\n",
        "date": "29.08.2020 07:04:34",
        "repo": "postmanlabs/newman",
        "type": "docs",
        "chatgpt_zeroshot": "Update README.md to specify that JSON files can also be used as data source for iteration."
    },
    {
        "msg": "docs: update submodules recursively",
        "diff": "diff --git a/README-dev.md b/README-dev.md @@ -22,7 +22,7 @@ The short version:\n1. Start with Ubuntu 18 or run it in a [virtual machine](https://www.osboxes.org/ubuntu/)\n2. Set github repos to pull and push over ssh: `git config --global url.ssh://git@github.com/.insteadOf https://github.com/`\n- To push branches to repos in the MinaProtocol or o1-labs organisations, you must complete this step. These repositories do not accept the password authentication used by the https URLs.\n-3. Pull in our submodules: `git submodule update --init`\n+3. Pull in our submodules: `git submodule update --init --recursive`\n- This might fail with `git@github.com: Permission denied (publickey).`. If that happens it means\nyou need to [set up SSH keys on your machine](https://help.github.com/en/articles/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent).\n4. Run `git config --local --add submodule.recurse true`\n",
        "date": "14.06.2021 20:25:54",
        "repo": "minaprotocol/mina",
        "type": "docs",
        "chatgpt_zeroshot": "Update git submodule command to include recursive flag"
    },
    {
        "msg": "docs: example for and",
        "diff": "diff --git a/docs/jss-syntax.md b/docs/jss-syntax.md @@ -210,6 +210,24 @@ Compiles to:\n}\n```\n+## Basic at rules\n+\n+```javascript\n+const styles = {\n+ '@charset': '\"utf-8\"',\n+ '@import': 'url(http://mysite.com/custom.css)',\n+ '@namespace': 'url(http://mysite.com/xhtml)'\n+}\n+```\n+\n+Compiles to:\n+\n+```css\n+@charset \"utf-8\";\n+@import url(http://mysite.com/custom.css);\n+@namespace url(http://mysite.com/xhtml);\n+```\n+\n## Alternative syntax for space and comma separated values\nTo describe space or comma separated CSS values in a JavaScript way, we introduced an array based syntax.\n",
        "date": "22.08.2020 03:25:36",
        "repo": "cssinjs/jss",
        "type": "docs",
        "chatgpt_zeroshot": "Add basic at rules to JSS syntax documentation"
    },
    {
        "msg": "docs(csp): update style-loader config\nBased on the new API, `attrs` has been changed to `attributes`",
        "diff": "diff --git a/docs/csp.md b/docs/csp.md @@ -99,7 +99,7 @@ const config = {\nuse: [\n{\nloader: 'style-loader',\n- options: {attrs: {nonce: '{{ styleNonce }}'}}\n+ options: {attributes: {nonce: '{{ styleNonce }}'}}\n},\n'css-loader'\n]\n@@ -109,7 +109,7 @@ const config = {\nuse: [\n{\nloader: 'style-loader',\n- options: {attrs: {nonce: '{{ styleNonce }}'}}\n+ options: {attributes: {nonce: '{{ styleNonce }}'}}\n},\n'css-loader',\n'sass-loader'\n",
        "date": "05.09.2020 04:14:07",
        "repo": "cssinjs/jss",
        "type": "docs",
        "chatgpt_zeroshot": "Fix attribute key typo in style-loader options"
    },
    {
        "msg": "docs(react-jss): fix a mistake about use wrong class name",
        "diff": "diff --git a/docs/react-jss.md b/docs/react-jss.md @@ -563,7 +563,7 @@ const useButtonStyles = createUseStyles({\n// Will render styles first.\nconst Label = ({children}) => {\nconst classes = useLabelStyles()\n- return <label className={classes.button}>{children}</label>\n+ return <label className={classes.label}>{children}</label>\n}\nconst Button = () => {\n",
        "date": "01.11.2021 13:21:21",
        "repo": "cssinjs/jss",
        "type": "docs",
        "chatgpt_zeroshot": "Fix class name in Label component"
    },
    {
        "msg": "docs(babel-preset): Update comment info about babel-preset-env.",
        "diff": "diff --git a/packages/babel-preset-react-app/index.js b/packages/babel-preset-react-app/index.js @@ -120,7 +120,7 @@ if (env === 'test') {\n[\nrequire.resolve('babel-plugin-transform-regenerator'),\n{\n- // Async functions are converted to generators by babel-preset-latest\n+ // Async functions are converted to generators by babel-preset-env\nasync: false,\n},\n],\n",
        "date": "10.03.2017 10:06:44",
        "repo": "react-workspaces/create-react-app",
        "type": "docs",
        "chatgpt_zeroshot": "Update babel-preset-react-app to use babel-preset-env for converting async functions to generators"
    },
    {
        "msg": "docs: update `jest-enzyme` section\nsince CRA now use the latest version of Jest under the hood,\n`jest-enzyme` v3.2.0 is now working perfectly fine",
        "diff": "diff --git a/packages/react-scripts/template/README.md b/packages/react-scripts/template/README.md @@ -1171,10 +1171,10 @@ Additionally, you might find [jest-enzyme](https://github.com/blainekasten/enzym\nexpect(wrapper).toContainReact(welcome)\n```\n-To setup jest-enzyme with Create React App, follow the instructions for [initializing your test environment](#initializing-test-environment) to import `jest-enzyme`. **Note that currently only version 2.x is compatible with Create React App.**\n+To setup jest-enzyme with Create React App, follow the instructions for [initializing your test environment](#initializing-test-environment) to import `jest-enzyme`.\n```sh\n-npm install --save-dev jest-enzyme@2.x\n+npm install --save-dev jest-enzyme\n```\n```js\n",
        "date": "30.05.2017 01:50:32",
        "repo": "react-workspaces/create-react-app",
        "type": "docs",
        "chatgpt_zeroshot": "Remove version restriction for jest-enzyme installation in README"
    },
    {
        "msg": "docs: flowtype.org -> flow.org",
        "diff": "diff --git a/packages/react-scripts/template/README.md b/packages/react-scripts/template/README.md @@ -218,7 +218,7 @@ In addition to [ES6](https://github.com/lukehoban/es6features) syntax features,\n* [Object Rest/Spread Properties](https://github.com/tc39/proposal-object-rest-spread) (ES2018).\n* [Dynamic import()](https://github.com/tc39/proposal-dynamic-import) (stage 3 proposal)\n* [Class Fields and Static Properties](https://github.com/tc39/proposal-class-public-fields) (part of stage 3 proposal).\n-* [JSX](https://facebook.github.io/react/docs/introducing-jsx.html) and [Flow](https://flowtype.org/) syntax.\n+* [JSX](https://facebook.github.io/react/docs/introducing-jsx.html) and [Flow](https://flow.org/) syntax.\nLearn more about [different proposal stages](https://babeljs.io/docs/plugins/#presets-stage-x-experimental-presets-).\n@@ -886,20 +886,20 @@ Here is an example of adding a [customized Bootstrap](https://medium.com/@tacoma\nFlow is a static type checker that helps you write code with fewer bugs. Check out this [introduction to using static types in JavaScript](https://medium.com/@preethikasireddy/why-use-static-types-in-javascript-part-1-8382da1e0adb) if you are new to this concept.\n-Recent versions of [Flow](http://flowtype.org/) work with Create React App projects out of the box.\n+Recent versions of [Flow](https://flow.org/) work with Create React App projects out of the box.\nTo add Flow to a Create React App project, follow these steps:\n1. Run `npm install --save flow-bin` (or `yarn add flow-bin`).\n2. Add `\"flow\": \"flow\"` to the `scripts` section of your `package.json`.\n-3. Run `npm run flow init` (or `yarn flow init`) to create a [`.flowconfig` file](https://flowtype.org/docs/advanced-configuration.html) in the root directory.\n+3. Run `npm run flow init` (or `yarn flow init`) to create a [`.flowconfig` file](https://flow.org/en/docs/config/) in the root directory.\n4. Add `// @flow` to any files you want to type check (for example, to `src/App.js`).\nNow you can run `npm run flow` (or `yarn flow`) to check the files for type errors.\nYou can optionally use an IDE like [Nuclide](https://nuclide.io/docs/languages/flow/) for a better integrated experience.\nIn the future we plan to integrate it into Create React App even more closely.\n-To learn more about Flow, check out [its documentation](https://flowtype.org/).\n+To learn more about Flow, check out [its documentation](https://flow.org/).\n## Adding a Router\n",
        "date": "18.09.2018 02:50:55",
        "repo": "react-workspaces/create-react-app",
        "type": "docs",
        "chatgpt_zeroshot": "Update Flow documentation link to correct URL"
    },
    {
        "msg": "docs: fix env-cmd example in deployment section",
        "diff": "diff --git a/docusaurus/docs/deployment.md b/docusaurus/docs/deployment.md @@ -150,7 +150,7 @@ For example, to create a build environment for a staging environment:\n```json\n{\n\"scripts\": {\n- \"build:staging\": \"env-cmd .env.staging npm run build\"\n+ \"build:staging\": \"env-cmd -f .env.staging npm run build\"\n}\n}\n```\n",
        "date": "14.05.2019 20:17:45",
        "repo": "react-workspaces/create-react-app",
        "type": "docs",
        "chatgpt_zeroshot": "Update build script to use env-cmd flag for specifying environment file"
    },
    {
        "msg": "docs(svg): add tip for title props accessibility",
        "diff": "diff --git a/docusaurus/docs/adding-images-fonts-and-files.md b/docusaurus/docs/adding-images-fonts-and-files.md @@ -59,3 +59,5 @@ const App = () => (\n```\nThis is handy if you don't want to load SVG as a separate file. Don't forget the curly braces in the import! The `ReactComponent` import name is special and tells Create React App that you want a React component that renders an SVG, rather than its filename.\n+\n+> **Tip:** The imported SVG React Component accepts a `title` prop along with other props that a `svg` element accepts. Use this prop to add an accessbile title to your svg component.\n",
        "date": "16.07.2019 00:03:25",
        "repo": "react-workspaces/create-react-app",
        "type": "docs",
        "chatgpt_zeroshot": "Add tip for adding accessible title to SVG React Component"
    },
    {
        "msg": "docs: readme: plugins: rm remove-empty-pattern: part of remove-empty",
        "diff": "diff --git a/README.md b/README.md @@ -1911,7 +1911,6 @@ It has a lot plugins divided by groups:\n| [`@putout/plugin-remove-unreachable-code`](/packages/plugin-remove-unreachable-code#readme) | [![npm](https://img.shields.io/npm/v/@putout/plugin-remove-unreachable-code.svg?maxAge=86400)](https://www.npmjs.com/package/@putout/plugin-remove-unreachable-code) |\n| [`@putout/plugin-remove-console`](/packages/plugin-remove-console#readme) | [![npm](https://img.shields.io/npm/v/@putout/plugin-remove-console.svg?maxAge=86400)](https://www.npmjs.com/package/@putout/plugin-remove-console) |\n| [`@putout/plugin-remove-empty`](/packages/plugin-remove-empty#readme) | [![npm](https://img.shields.io/npm/v/@putout/plugin-remove-empty.svg?maxAge=86400)](https://www.npmjs.com/package/@putout/plugin-remove-empty) |\n-| [`@putout/plugin-remove-empty-pattern`](/packages/plugin-remove-empty-pattern#readme) | [![npm](https://img.shields.io/npm/v/@putout/plugin-remove-empty-pattern.svg?maxAge=86400)](https://www.npmjs.com/package/@putout/plugin-remove-empty-pattern) |\n| [`@putout/plugin-remove-constant-conditions`](/packages/plugin-remove-constant-conditions#readme) | [![npm](https://img.shields.io/npm/v/@putout/plugin-remove-constant-conditions.svg?maxAge=86400)](https://www.npmjs.com/package/@putout/plugin-remove-constant-conditions) |\n| [`@putout/plugin-remove-boolean-from-assertions`](/packages/plugin-remove-boolean-from-assertions#readme) | [![npm](https://img.shields.io/npm/v/@putout/plugin-remove-boolean-from-assertions.svg?maxAge=86400)](https://www.npmjs.com/package/@putout/plugin-remove-boolean-from-assertions) |\n| [`@putout/plugin-remove-nested-blocks`](/packages/plugin-remove-nested-blocks#readme) | [![npm](https://img.shields.io/npm/v/@putout/plugin-remove-nested-blocks.svg?maxAge=86400)](https://www.npmjs.com/package/@putout/plugin-remove-nested-blocks) |\n",
        "date": "26.08.2022 12:06:25",
        "repo": "coderaiser/putout",
        "type": "docs",
        "chatgpt_zeroshot": "Remove @putout/plugin-remove-empty-pattern from list of plugins"
    },
    {
        "msg": "docs: createPlugin: add require to example",
        "diff": "diff --git a/packages/eslint/README.md b/packages/eslint/README.md @@ -135,7 +135,7 @@ Or just:\nconst {createPlugin} = require('@putout/eslint/create-plugin');\nmodule.exports.rules = {\n- 'remove-duplicate-extensions': createPlugin('remove-duplicate-extensions'),\n+ 'remove-duplicate-extensions': createPlugin(require('./remove-duplicate-extensions')),\n};\n```\n",
        "date": "29.08.2022 16:54:08",
        "repo": "coderaiser/putout",
        "type": "docs",
        "chatgpt_zeroshot": "Refactor rule creation to use require statement in ESLint plugin configuration"
    },
    {
        "msg": "docs: lint: add description",
        "diff": "diff --git a/packages/eslint/README.md b/packages/eslint/README.md @@ -145,7 +145,9 @@ module.exports.rules = {\n};\n```\n-### `lint(code, {fix, plugins})`\n+### `lint(source, {fix, plugins})`\n+\n+When you need to run **ESLint** with one plugin (*rule*), just use `lint` it will do the thing.\n```js\nconst lint = require('@putout/eslint/lint');\n",
        "date": "29.08.2022 20:49:33",
        "repo": "coderaiser/putout",
        "type": "docs",
        "chatgpt_zeroshot": "Refactor lint function parameter name to improve clarity"
    },
    {
        "msg": "docs: lint: example",
        "diff": "diff --git a/packages/eslint/README.md b/packages/eslint/README.md @@ -165,7 +165,6 @@ When you want to skip plugins, and just provide `options` and `filename` you can\n```js\nconst lint = require('@putout/eslint/lint');\n-const removeDebugger = require('./remove-debugger');\nconst [code, places] = lint('debugger', {\nfilename: 'index.js',\n",
        "date": "30.08.2022 23:12:37",
        "repo": "coderaiser/putout",
        "type": "docs",
        "chatgpt_zeroshot": "Remove removeDebugger function from linting process"
    },
    {
        "msg": "docs: lint",
        "diff": "diff --git a/packages/eslint/README.md b/packages/eslint/README.md @@ -153,6 +153,7 @@ When you need to run **ESLint** with one plugin (*rule*), just use `lint` it wil\n```js\nconst lint = require('@putout/eslint/lint');\n+const {createPlugin} = require('@putout/eslint/create-plugin');\nconst removeDebugger = require('./remove-debugger');\nconst [code, places] = lint('debugger', {\n",
        "date": "31.08.2022 23:00:17",
        "repo": "coderaiser/putout",
        "type": "docs",
        "chatgpt_zeroshot": "Add createPlugin function to eslint package"
    },
    {
        "msg": "docs: readme: linked __args",
        "diff": "diff --git a/docs/putout-script.md b/docs/putout-script.md @@ -34,7 +34,23 @@ The double low dush template value (`__`) abstracts away `Identifiers`, `Express\n## `__args` template value\n-The `__args` template value abstracts away a sequence of zero or more arguments.\n+The `__args` template value abstracts away a sequence of zero or more arguments, for `(__args) => __a`:\n+\n+```js\n+(a, b, c) => a + b + c\n+```\n+\n+`__args` can be linked. For example, the rule `((__args__a) => __c(__args__a))(__args__b)` will find:\n+\n+```js\n+((a) => fn(a))(value)\n+```\n+\n+But not:\n+\n+```js\n+((a) => fn(42))(value)\n+```\n## Function calls\n",
        "date": "14.09.2022 13:38:38",
        "repo": "coderaiser/putout",
        "type": "docs",
        "chatgpt_zeroshot": "Refactor __args template value to handle sequence of arguments"
    },
    {
        "msg": "docs: readme: update linked args",
        "diff": "diff --git a/docs/putout-script.md b/docs/putout-script.md @@ -32,6 +32,10 @@ const when = () => {\nThe double low dush template value (`__`) abstracts away `Identifiers`, `Expressions` and `Literals`.\n+## `__a`\n+\n+**Linked template value** (`__a`) abstracts away `Identifiers`, `Expressions` and `Literals`.\n+\n## `__args` template value\nThe `__args` template value abstracts away a sequence of zero or more arguments, for `(__args) => __a`:\n@@ -40,7 +44,9 @@ The `__args` template value abstracts away a sequence of zero or more arguments,\n(a, b, c) => a + b + c;\n```\n-`__args` can be linked. For example, the rule `((__args__a) => __c(__args__a))(__args__b)` will find:\n+## `__args__a`\n+\n+`__args` can be linked. **Linked args** can be used to link to values with the same `Expressions`, `Identifiers` or `Literals`): `((__args__a) => __c(__args__a))(__args__b)` will find:\n```js\nfn(value);\n",
        "date": "14.09.2022 17:13:53",
        "repo": "coderaiser/putout",
        "type": "docs",
        "chatgpt_zeroshot": "Add linked template value __a and linked args __args__a in putout-script.md"
    },
    {
        "msg": "docs: readme: update",
        "diff": "diff --git a/docs/putout-script.md b/docs/putout-script.md @@ -28,17 +28,17 @@ const when = () => {\n};\n```\n-## `__` template value\n+## `__`\nThe double low dush template value (`__`) abstracts away `Identifiers`, `Expressions` and `Literals`.\n## `__a`\n-**Linked template value** (`__a`) abstracts away `Identifiers`, `Expressions` and `Literals`.\n+**Linked Value** (`__a`) abstracts away `Identifiers`, `Expressions` and `Literals`.\n-## `__args` template value\n+## `__args`\n-The `__args` template value abstracts away a sequence of zero or more arguments, for `(__args) => __a`:\n+The `__args` value abstracts away a sequence of zero or more arguments, for `(__args) => __a`:\n```js\n(a, b, c) => a + b + c;\n",
        "date": "14.09.2022 17:26:29",
        "repo": "coderaiser/putout",
        "type": "docs",
        "chatgpt_zeroshot": "Refactor template values in putout-script documentation"
    },
    {
        "msg": "docs: The Book of AST: capitalize",
        "diff": "diff --git a/docs/the-book-of-ast.md b/docs/the-book-of-ast.md -# The book of AST\n+# The Book of AST\nWhen I started dealing with **AST** I had a lot of problems in understanding basic parts. I read [**ESTree**](https://github.com/estree/estree#readme) standard, I read [**Babel**](https://babeljs.io/docs/en/babel-types#) standard. They are very good! Anyways they put the information in a very hurd to understand for novice way.\n",
        "date": "14.09.2022 18:11:34",
        "repo": "coderaiser/putout",
        "type": "docs",
        "chatgpt_zeroshot": "Fix capitalization in title of AST book"
    },
    {
        "msg": "docs: listStore -> pathStore",
        "diff": "diff --git a/packages/engine-runner/README.md b/packages/engine-runner/README.md @@ -308,7 +308,7 @@ module.exports.traverse = ({pathStore}) => ({\nProgram: {\nexit() {\n- console.log(listStore());\n+ console.log(pathStore());\n// returns\n[];\n},\n",
        "date": "15.09.2022 02:17:01",
        "repo": "coderaiser/putout",
        "type": "docs",
        "chatgpt_zeroshot": "Update console.log statement in exit method to use pathStore instead of listStore"
    },
    {
        "msg": "docs: lint example",
        "diff": "diff --git a/packages/engine-processor/README.md b/packages/engine-processor/README.md @@ -70,9 +70,11 @@ export const merge = (source, list) => {\n};\n```\n-Instead of `find` and `fix` you can use `lint`:\n+Instead of `find` and `fix` you can export `lint`:\n```js\n+import eslint from '@putout/eslint';\n+\nexport const files = [\n'*.js',\n];\n",
        "date": "20.09.2022 17:43:42",
        "repo": "coderaiser/putout",
        "type": "docs",
        "chatgpt_zeroshot": "Add eslint to export lint function in engine-processor package"
    },
    {
        "msg": "docs: readme: processors: add putout-processor-typos",
        "diff": "diff --git a/README.md b/README.md @@ -454,15 +454,22 @@ You can disable any of them with:\n}\n```\n-And not bundled processors:\n+Not bundled processors:\n| Package | Version |\n|--------|-------|\n-| [`@putout/processor-typescript`](/packages/processor-typescript#readme) | [![npm](https://img.shields.io/npm/v/@putout/processor-typescript.svg?maxAge=86400)](https://www.npmjs.com/package/@putout/processor-typescript#readme) |\n-| [`@putout/processor-html`](/packages/processor-html#readme) | [![npm](https://img.shields.io/npm/v/@putout/processor-html.svg?maxAge=86400)](https://www.npmjs.com/package/@putout/processor-html#readme) |\n+| [`@putout/processor-typescript`](/packages/processor-typescript#readme) | [![npm](https://img.shields.io/npm/v/@putout/processor-typescript.svg?maxAge=86400)](https://www.npmjs.com/package/@putout/processor-typescript) |\n+| [`@putout/processor-html`](/packages/processor-html#readme) | [![npm](https://img.shields.io/npm/v/@putout/processor-html.svg?maxAge=86400)](https://www.npmjs.com/package/@putout/processor-html) |\n| [`@putout/processor-wasm`](/packages/processor-wasm#readme) | [![npm](https://img.shields.io/npm/v/@putout/processor-wasm.svg?maxAge=86400)](https://www.npmjs.com/package/@putout/processor-wasm) |\n-To enable it use:\n+External processors:\n+\n+| Package | Version |\n+|--------|-------|\n+| [`putout-processor-typos`](https://github.com/putoutjs/putout-processor-typos) | [![npm](https://img.shields.io/npm/v/putout-processor-typos.svg?maxAge=86400)](https://www.npmjs.com/package/putout-processor-typos) |\n+\n+\n+To enable, install and use:\n```json\n{\n",
        "date": "22.09.2022 15:57:08",
        "repo": "coderaiser/putout",
        "type": "docs",
        "chatgpt_zeroshot": "Update README.md to include new external processors and correct links."
    },
    {
        "msg": "docs: readme: built-ins: move apply-await-import to promises",
        "diff": "diff --git a/README.md b/README.md @@ -1283,15 +1283,6 @@ function world(a) {\n</details>\n-<details><summary>apply <code>await import</code></summary>\n-\n-```diff\n--const {readFile} = import('fs/promises');\n-+const {readFile} = await import('fs/promises');\n-```\n-\n-</details>\n-\n<details><summary>apply <code>if condition</code></summary>\n```diff\n@@ -1660,6 +1651,15 @@ async () => {\n</details>\n+<details><summary>apply <code>await import</code></summary>\n+\n+```diff\n+-const {readFile} = import('fs/promises');\n++const {readFile} = await import('fs/promises');\n+```\n+\n+</details>\n+\n### Node.js\n<details><summary>convert <code>fs.promises</code> to <code>fs/promises</code> for <a href=https://nodejs.org/dist/latest-v15.x/docs/api/fs.html#fs_fs_promises_api>node.js</a></summary>\n",
        "date": "13.10.2022 23:12:08",
        "repo": "coderaiser/putout",
        "type": "docs",
        "chatgpt_zeroshot": "Apply await import for fs/promises in README.md"
    },
    {
        "msg": "docs: ot -> to",
        "diff": "diff --git a/packages/plugin-nodejs/README.md b/packages/plugin-nodejs/README.md @@ -195,7 +195,7 @@ import {readFile} from 'fs/promises';\nawait readFile('hello.txt', 'utf8');\n```\n-When you want ot skip some declaration use `dismiss`:\n+When you want to skip some declaration use `dismiss`:\n```json\n{\n",
        "date": "20.12.2022 13:17:37",
        "repo": "coderaiser/putout",
        "type": "docs",
        "chatgpt_zeroshot": "Fix typo in README.md - change \"ot\" to \"to\""
    },
    {
        "msg": "docs: add backticks",
        "diff": "diff --git a/packages/plugin-split-nested-destructuring/README.md b/packages/plugin-split-nested-destructuring/README.md [NPMIMGURL]: https://img.shields.io/npm/v/@putout/plugin-split-nested-destructuring.svg?style=flat&longCache=true\n[NPMURL]: https://npmjs.org/package/@putout/plugin-split-nested-destructuring \"npm\"\n-> - Don't use nested destructuring on data that comes from any external data sources (such as REST APIs, GraphQL endpoints or files).\n+> - Don't use nested destructuring on data that comes from any external data sources (such as `REST API`s, `GraphQL` endpoints or files).\n> - Don't use nested destructuring on function arguments that have long or complicated signatures.\n>\n> (c) [Destructuring in JavaScript: the not so good parts](https://goodguydaniel.com/blog/destructuring-not-so-good-parts)\n",
        "date": "02.02.2023 16:03:00",
        "repo": "coderaiser/putout",
        "type": "docs",
        "chatgpt_zeroshot": "Update README with guidelines for using nested destructuring"
    },
    {
        "msg": "docs: mention usage of magic properties in x-data",
        "diff": "diff --git a/README.md b/README.md @@ -504,6 +504,8 @@ These behave exactly like VueJs's transition directives, except they have differ\n### Magic Properties\n+> With the exception of `$el`, magic properties are **not available within `x-data`** as the component isn't initialized yet.\n+\n---\n### `$el`\n",
        "date": "12.05.2020 22:51:16",
        "repo": "alpinejs/alpine",
        "type": "docs",
        "chatgpt_zeroshot": "Add note about magic properties not being available within `x-data`"
    },
    {
        "msg": "docs: add link to MDN \"Event\" on `x-on`",
        "diff": "diff --git a/README.md b/README.md @@ -312,7 +312,7 @@ The `camel` modifier will bind to the camel case equivalent of the attribute nam\n**Structure:** `<button x-on:[event]=\"[expression]\"></button>`\n-`x-on` attaches an event listener to the element it's declared on. When that event is emitted, the JavaScript expression set as its value is executed.\n+`x-on` attaches an event listener to the element it's declared on. When that event is emitted, the JavaScript expression set as its value is executed. You can use `x-on` with any event available for the element you're adding the directive on, for a full list of events, see [the Event reference on MDN](https://developer.mozilla.org/en-US/docs/Web/Events) for a list of possible values.\nIf any data is modified in the expression, other element attributes \"bound\" to this data, will be updated.\n",
        "date": "12.11.2020 14:30:03",
        "repo": "alpinejs/alpine",
        "type": "docs",
        "chatgpt_zeroshot": "Add event reference link to x-on directive in README.md"
    },
    {
        "msg": "docs(url): fixing typo in Breadcrumbs\nBreadscrumbs > Breadcrumbs",
        "diff": "diff --git a/docs/lib/Components/index.js b/docs/lib/Components/index.js @@ -30,7 +30,7 @@ class Components extends React.Component {\nto: '/components/badge/'\n},\n{\n- name: 'Breadscrumbs',\n+ name: 'Breadcrumbs',\nto: '/components/breadcrumbs/'\n},\n{\n",
        "date": "10.01.2017 17:01:09",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "chatgpt_zeroshot": "Fix typo in Components index.js - changed 'Breadscrumbs' to 'Breadcrumbs'"
    },
    {
        "msg": "docs(readme): add coreui project",
        "diff": "diff --git a/README.md b/README.md @@ -125,6 +125,7 @@ Organizations and projects using `reactstrap`\n- [availity-reactstrap-validation](https://availity.github.io/availity-reactstrap-validation/)\n- [component-template](https://reactstrap.github.io/component-template/)\n- [video-react](https://video-react.github.io/)\n+- [CoreUI-Free-Bootstrap-Admin-Template](https://github.com/mrholek/CoreUI-Free-Bootstrap-Admin-Template) - [demo](http://coreui.io/demo/React_Demo/#/)\nSubmit a PR to add to this list!\n",
        "date": "29.01.2017 15:42:23",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "chatgpt_zeroshot": "Add CoreUI-Free-Bootstrap-Admin-Template to list of organizations and projects using `reactstrap`"
    },
    {
        "msg": "docs(layout): Fix typo in layout example",
        "diff": "diff --git a/docs/lib/examples/Layout.js b/docs/lib/examples/Layout.js @@ -16,7 +16,7 @@ export default class Example extends React.Component {\n</Row>\n<Row>\n<Col xs=\"3\">.col-3</Col>\n- <Col xs=\"auto\">.col-auto - variabe width content</Col>\n+ <Col xs=\"auto\">.col-auto - variable width content</Col>\n<Col xs=\"3\">.col-3</Col>\n</Row>\n<Row>\n",
        "date": "14.02.2017 10:46:47",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "chatgpt_zeroshot": "Fix typo in variable width content description in Layout.js"
    },
    {
        "msg": "docs(ButtonsPage): add missing semicolon",
        "diff": "diff --git a/docs/lib/Components/ButtonsPage.js b/docs/lib/Components/ButtonsPage.js @@ -7,7 +7,7 @@ import ButtonExample from '../examples/Button';\nconst ButtonExampleSource = require('!!raw!../examples/Button');\nimport ButtonOutline from '../examples/ButtonOutline';\n-const ButtonOutlineSource = require('!!raw!../examples/ButtonOutline')\n+const ButtonOutlineSource = require('!!raw!../examples/ButtonOutline');\nimport ButtonStateful from '../examples/ButtonStateful';\nconst ButtonStatefulSource = require('!!raw!../examples/ButtonStateful');\n",
        "date": "14.03.2017 16:39:03",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "chatgpt_zeroshot": "Fix missing semicolon in ButtonOutlineSource import"
    },
    {
        "msg": "docs(TablesPage): Fix typo in docs",
        "diff": "diff --git a/docs/lib/Components/TablesPage.js b/docs/lib/Components/TablesPage.js @@ -39,7 +39,7 @@ export default class TablesPage extends React.Component {\n<h4>Properties</h4>\n<pre>\n<PrismCode className=\"language-jsx\">\n-{`Card.propTypes = {\n+{`Table.propTypes = {\n// Pass in a Component to override default element\ntag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\nsize: PropTypes.string,\n",
        "date": "30.03.2017 23:52:25",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "chatgpt_zeroshot": "Update PropTypes in TablesPage component from Card to Table"
    },
    {
        "msg": "docs(Alert): fancy syntax in docs example",
        "diff": "diff --git a/docs/lib/examples/AlertDismiss.js b/docs/lib/examples/AlertDismiss.js @@ -7,10 +7,12 @@ class AlertExample extends React.Component {\nthis.state = {\nvisible: true\n- }\n+ };\n+\n+ this.onDismiss = this.onDismiss.bind(this);\n}\n- onDismiss = () => {\n+ onDismiss() {\nthis.setState({ visible: false });\n}\n",
        "date": "30.03.2017 09:53:39",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "chatgpt_zeroshot": "Refactor AlertDismiss component to use class method for onDismiss function"
    },
    {
        "msg": "docs(ButtonDropdown): fix typo in Button Dropdown docs\nThis change fixes a typo in the button dropdown docs where \"danger\" was misspelled.",
        "diff": "diff --git a/docs/lib/Components/ButtonDropdownPage.js b/docs/lib/Components/ButtonDropdownPage.js @@ -73,7 +73,7 @@ DropdownToggle.propTypes = {\n<Example color=\"success\" text=\"Success\" />\n<Example color=\"info\" text=\"Info\" />\n<Example color=\"warning\" text=\"Warning\" />\n- <Example color=\"danger\" text=\"Darning\" />\n+ <Example color=\"danger\" text=\"Danger\" />\n</div>\n</div>\n<pre>\n@@ -100,7 +100,7 @@ DropdownToggle.propTypes = {\n<ExampleSplit color=\"success\" text=\"Success\" />\n<ExampleSplit color=\"info\" text=\"Info\" />\n<ExampleSplit color=\"warning\" text=\"Warning\" />\n- <ExampleSplit color=\"danger\" text=\"Darning\" />\n+ <ExampleSplit color=\"danger\" text=\"Danger\" />\n</div>\n</div>\n<pre>\n",
        "date": "27.06.2017 11:48:32",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "chatgpt_zeroshot": "Fix typo in ButtonDropdownPage component"
    },
    {
        "msg": "docs(readme): add badges for CDN, NPM, and license + CDN info.",
        "diff": "diff --git a/README.md b/README.md [![reactstrap](https://cloud.githubusercontent.com/assets/399776/13906899/1de62f0c-ee9f-11e5-95c0-c515fee8e918.png)](https://reactstrap.github.io)\n-[![Build Status](https://travis-ci.org/reactstrap/reactstrap.svg?branch=master)](https://travis-ci.org/reactstrap/reactstrap) [![Coverage Status](https://coveralls.io/repos/github/reactstrap/reactstrap/badge.svg?branch=master)](https://coveralls.io/github/reactstrap/reactstrap?branch=master)\n+[![CDNJS](https://img.shields.io/cdnjs/v/reactstrap.svg)](https://cdnjs.com/libraries/reactstrap) [![NPM Version](https://img.shields.io/npm/v/reactstrap.svg?branch=master)](https://www.npmjs.com/package/reactstrap) [![Build Status](https://travis-ci.org/reactstrap/reactstrap.svg?branch=master)](https://travis-ci.org/reactstrap/reactstrap) [![Coverage Status](https://coveralls.io/repos/github/reactstrap/reactstrap/badge.svg?branch=master)](https://coveralls.io/github/reactstrap/reactstrap?branch=master) [![License](https://img.shields.io/npm/l/reactstrap.svg)](https://github.com/reactstrap/reactstrap/blob/master/LICENSE)\n# reactstrap\n@@ -45,6 +45,19 @@ import { Button } from 'reactstrap';\nNow you are ready to use the imported reactstrap components within your component hierarchy defined in the render method. Here is an example [`App.js`](https://gist.github.com/eddywashere/e13033c0e655ab7cda995f8bc77ce40d) redone using reactstrap.\n+### CDN\n+\n+Reactstrap can be included directly in your application's bundle or excluded during compilation and linked directly to a CDN.\n+\n+```html\n+https://cdnjs.cloudflare.com/ajax/libs/reactstrap/4.8.0/reactstrap.min.js\n+```\n+\n+> Note: When using the external CDN library, be sure to include the required dependencies as necessary **prior** to the Reactstrap library:\n+> * [React](https://cdnjs.com/libraries/react)\n+> * [ReactTransitionGroup](https://unpkg.com/react-transition-group/dist/react-transition-group.min.js)\n+\n+\n## About the Project\nThis library contains React Bootstrap 4 components that favor composition and control. The library does not depend on jQuery or Bootstrap javascript. However, [Tether](http://tether.io/) is relied upon for advanced positioning of content like Tooltips, Popovers, and auto-flipping Dropdowns.\n",
        "date": "01.07.2017 11:06:55",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "chatgpt_zeroshot": "Update README.md with CDN information and dependencies for external library inclusion"
    },
    {
        "msg": "docs(Home): add improved CDN information",
        "diff": "diff --git a/docs/lib/Home/index.js b/docs/lib/Home/index.js @@ -82,11 +82,21 @@ npm install --save reactstrap react-addons-transition-group react-addons-css-tra\n</pre>\n<p>Now you are ready to use the imported reactstrap components within your component hierarchy defined in the render method. Here is an example <a href=\"https://gist.github.com/eddywashere/e13033c0e655ab7cda995f8bc77ce40d\" target=\"_blank\"><code>App.js</code></a> redone using reactstrap.</p>\n<h2 className=\"mt-5\">CDN</h2>\n+ <p>Reactstrap can be included directly in your application's bundle or excluded during compilation and linked directly to a CDN.</p>\n<pre>\n<PrismCode className=\"language-jsx\">\n- https://unpkg.com/reactstrap/dist/reactstrap.min.js\n+ https://cdnjs.cloudflare.com/ajax/libs/reactstrap/4.8.0/reactstrap.min.js\n</PrismCode>\n</pre>\n+ <blockquote className=\"blockquote\">\n+ <p>\n+ <strong>Note</strong>: When using the external CDN library, be sure to include the required dependencies as necessary <strong>prior</strong> to the Reactstrap library:\n+ </p>\n+ <ul>\n+ <li><a href=\"//cdnjs.com/libraries/react\" target=\"_blank\">React</a></li>\n+ <li><a href=\"//unpkg.com/react-transition-group/dist/react-transition-group.min.js\" target=\"_blank\">ReactTransitionGroup</a></li>\n+ </ul>\n+ </blockquote>\n<p>Check out the demo <a href=\"http://output.jsbin.com/dimive/latest\">here</a></p>\n<h2 className=\"mt-5\">About the Project</h2>\n<hr />\n",
        "date": "01.07.2017 15:40:37",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "chatgpt_zeroshot": "Add CDN support for Reactstrap library"
    },
    {
        "msg": "docs(install): remove react-addons-css-transition-group",
        "diff": "diff --git a/docs/lib/Home/index.js b/docs/lib/Home/index.js @@ -67,7 +67,7 @@ npm start`}\n<pre>\n<PrismCode className=\"language-bash\">\n{`npm install bootstrap@4.0.0-alpha.6 --save\n-npm install --save reactstrap react-addons-transition-group react-addons-css-transition-group react react-dom`}\n+npm install --save reactstrap react-addons-transition-group react react-dom`}\n</PrismCode>\n</pre>\n<p>Import Bootstrap CSS in the <code>src/index.js</code> file:</p>\n",
        "date": "01.10.2017 19:27:18",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "chatgpt_zeroshot": "Remove unnecessary installation of react-addons-css-transition-group and update Bootstrap installation in Home index.js"
    },
    {
        "msg": "docs(FormGroup): Wrap FromGroup-properties in block",
        "diff": "diff --git a/docs/lib/Components/FormPage.js b/docs/lib/Components/FormPage.js @@ -42,6 +42,9 @@ export default class FormPage extends React.Component {\n</PrismCode>\n</pre>\n+ <h3>Properties</h3>\n+ <pre>\n+ <PrismCode className=\"language-jsx\">\n{`Input.propTypes = {\nchildren: PropTypes.node,\n// type can be things like text, password, (typical input types) as well as select and textarea, providing children as you normally would to those.\n@@ -58,6 +61,8 @@ export default class FormPage extends React.Component {\nclassName: PropTypes.string,\ncssModule: PropTypes.object,\n};`}\n+ </PrismCode>\n+ </pre>\n<h3>Form Grid</h3>\n<div className=\"docs-example\">\n",
        "date": "06.10.2017 20:22:21",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "chatgpt_zeroshot": "Add PropTypes for Input component in FormPage."
    },
    {
        "msg": "docs(DropdownItem): add DropItem props section\nCloses",
        "diff": "diff --git a/docs/lib/Components/DropdownsPage.js b/docs/lib/Components/DropdownsPage.js @@ -82,6 +82,19 @@ DropdownMenu.propTypes = {\nflip: PropTypes.bool, // default: true,\nclassName: PropTypes.string,\ncssModule: PropTypes.object,\n+};\n+\n+DropdownItem.propTypes = {\n+ children: PropTypes.node,\n+ active: PropTypes.bool,\n+ disabled: PropTypes.bool,\n+ divider: PropTypes.bool,\n+ tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n+ header: PropTypes.bool,\n+ onClick: PropTypes.func,\n+ className: PropTypes.string,\n+ cssModule: PropTypes.object,\n+ toggle: PropTypes.bool // default: true\n};`}\n</PrismCode>\n</pre>\n",
        "date": "14.10.2017 16:42:36",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "chatgpt_zeroshot": "Add PropTypes for DropdownItem component"
    },
    {
        "msg": "docs(Readme): Update react-popper reference to use CDNJS\nfor consistency with other deps",
        "diff": "diff --git a/README.md b/README.md @@ -128,7 +128,7 @@ Reactstrap has two primary distribution versions:\n<script type=\"text/javascript\" src=\"//cdnjs.cloudflare.com/ajax/libs/react-dom/16.0.0/umd/react-dom.production.min.js\"></script>\n<!-- Optional dependencies -->\n<script type=\"text/javascript\" src=\"//cdnjs.cloudflare.com/ajax/libs/react-transition-group/2.2.1/react-transition-group.min.js\"></script>\n- <script type=\"text/javascript\" src=\"//unpkg.com/react-popper@0.7.3/dist/react-popper.min.js\"></script>\n+ <script type=\"text/javascript\" src=\"//cdnjs.cloudflare.com/ajax/libs/react-popper/0.7.4/react-popper.min.js\"></script>\n<!-- Reactstrap -->\n<script type=\"text/javascript\" src=\"//cdnjs.cloudflare.com/ajax/libs/reactstrap/5.0.0-alpha.3/reactstrap.min.js\"></script>\n<!-- Lastly, include your app's bundle -->\n",
        "date": "31.10.2017 08:26:49",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "chatgpt_zeroshot": "Update react-popper version to 0.7.4"
    },
    {
        "msg": "docs(Modal): fix nested modal closing\nCloses",
        "diff": "diff --git a/docs/lib/examples/ModalNested.js b/docs/lib/examples/ModalNested.js @@ -9,10 +9,12 @@ class ModalExample extends React.Component {\nthis.state = {\nmodal: false,\nnestedModal: false,\n+ closeAll: false\n};\nthis.toggle = this.toggle.bind(this);\nthis.toggleNested = this.toggleNested.bind(this);\n+ this.toggleAll = this.toggleAll.bind(this);\n}\ntoggle() {\n@@ -23,7 +25,15 @@ class ModalExample extends React.Component {\ntoggleNested() {\nthis.setState({\n- nestedModal: !this.state.nestedModal\n+ nestedModal: !this.state.nestedModal,\n+ closeAll: false\n+ });\n+ }\n+\n+ toggleAll() {\n+ this.setState({\n+ nestedModal: !this.state.nestedModal,\n+ closeAll: true\n});\n}\n@@ -37,12 +47,12 @@ class ModalExample extends React.Component {\nLorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n<br />\n<Button color=\"success\" onClick={this.toggleNested}>Show Nested Model</Button>\n- <Modal isOpen={this.state.nestedModal} toggle={this.toggleNested}>\n+ <Modal isOpen={this.state.nestedModal} toggle={this.toggleNested} onClosed={this.state.closeAll && this.toggle}>\n<ModalHeader>Nested Modal title</ModalHeader>\n<ModalBody>Stuff and things</ModalBody>\n<ModalFooter>\n<Button color=\"primary\" onClick={this.toggleNested}>Done</Button>{' '}\n- <Button color=\"secondary\" onClick={this.toggle}>All Done</Button>\n+ <Button color=\"secondary\" onClick={this.toggleAll}>All Done</Button>\n</ModalFooter>\n</Modal>\n</ModalBody>\n",
        "date": "15.11.2017 05:59:56",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "chatgpt_zeroshot": "Add functionality to close all modals in ModalNested.js"
    },
    {
        "msg": "docs(Carousel): fix unique key warning and remove trailing spaces\nCloses",
        "diff": "diff --git a/docs/lib/examples/CarouselCustomTag.js b/docs/lib/examples/CarouselCustomTag.js @@ -9,14 +9,17 @@ import {\nconst items = [\n{\n+ id: 1,\naltText: 'Slide 1',\ncaption: 'Slide 1'\n},\n{\n+ id: 2,\naltText: 'Slide 2',\ncaption: 'Slide 2'\n},\n{\n+ id: 3,\naltText: 'Slide 3',\ncaption: 'Slide 3'\n}\n@@ -66,6 +69,7 @@ class Example extends Component {\n<CarouselItem\nclassName=\"custom-tag\"\ntag=\"div\"\n+ key={item.id}\nonExiting={this.onExiting}\nonExited={this.onExited}\n>\n@@ -76,13 +80,15 @@ class Example extends Component {\nreturn (\n<div>\n- <style>{`\n- .custom-tag {\n+ <style>\n+ {\n+ `.custom-tag {\nmax-width: 100%;\nheight: 500px;\nbackground: black;\n+ }`\n}\n- `}</style>\n+ </style>\n<Carousel\nactiveIndex={activeIndex}\nnext={this.next}\n",
        "date": "21.11.2017 11:02:18",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "chatgpt_zeroshot": "Add unique IDs to carousel items and update custom tag styling"
    },
    {
        "msg": "docs(Progress): typo stripped -> striped",
        "diff": "diff --git a/docs/lib/Components/ProgressPage.js b/docs/lib/Components/ProgressPage.js @@ -48,7 +48,7 @@ export default class ProgressPage extends React.Component {\nPropTypes.number,\n]),\nanimated: PropTypes.bool,\n- stripped: PropTypes.bool,\n+ striped: PropTypes.bool,\ncolor: PropTypes.string,\nclassName: PropTypes.string,\nbarClassName: PropTypes.string // used to add class to the inner progress-bar element\n",
        "date": "14.12.2017 23:50:44",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "chatgpt_zeroshot": "Fix typo in ProgressPage component PropTypes definition"
    },
    {
        "msg": "docs(README): Updated example App.js Gist",
        "diff": "diff --git a/README.md b/README.md @@ -44,7 +44,7 @@ import { Button } from 'reactstrap';\n```\nNow you are ready to use the imported reactstrap components within your component hierarchy defined in the render\n-method. Here is an example [`App.js`](https://gist.github.com/eddywashere/e13033c0e655ab7cda995f8bc77ce40d) redone\n+method. Here is an example [`App.js`](https://gist.github.com/Thomas-Smyth/006fd507a7295f17a8473451938f9935) redone\nusing reactstrap.\n### Dependencies\n",
        "date": "16.01.2018 15:03:37",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "chatgpt_zeroshot": "Update link to example `App.js` in README.md"
    },
    {
        "msg": "docs(InputGroup): fix InputGroup page is broken",
        "diff": "diff --git a/docs/lib/examples/InputGroupAddon.js b/docs/lib/examples/InputGroupAddon.js import React from 'react';\n-import { InputGroup, InputGroupAddon, Input } from 'reactstrap';\n+import { InputGroup, InputGroupText, InputGroupAddon, Input } from 'reactstrap';\nconst Example = (props) => {\nreturn (\n",
        "date": "23.02.2018 10:16:32",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "chatgpt_zeroshot": "Add InputGroupText component to InputGroupAddon.js"
    },
    {
        "msg": "docs(install): Use the minified version of Bootstrap CSS\ndocs(install): Use the minified version of Bootstrap CSS",
        "diff": "diff --git a/docs/lib/Home/index.js b/docs/lib/Home/index.js @@ -72,7 +72,7 @@ npm install --save reactstrap@next react react-dom`}\n</pre>\n<p>Import Bootstrap CSS in the <code>src/index.js</code> file:</p>\n<pre>\n- <PrismCode className=\"language-bash\">import 'bootstrap/dist/css/bootstrap.css';</PrismCode>\n+ <PrismCode className=\"language-bash\">import 'bootstrap/dist/css/bootstrap.min.css';</PrismCode>\n</pre>\n<p>Import required reactstrap components within <code>src/App.js</code> file or your custom component files:</p>\n<pre>\n",
        "date": "12.03.2018 01:36:35",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "chatgpt_zeroshot": "Update Bootstrap CSS import to use minified version"
    },
    {
        "msg": "docs(Readme): Update Readme with latest stable Reactstrap versions.",
        "diff": "diff --git a/README.md b/README.md @@ -73,22 +73,22 @@ If you prefer to include Reactstrap globally by marking `reactstrap` as external\n* [**cdnjs**](https://cdnjs.com/libraries/reactstrap)\n```html\n<!-- Main version -->\n-<script src=\"https://cdnjs.cloudflare.com/ajax/libs/reactstrap/5.0.0-alpha.3/reactstrap.min.js\"></script>\n+<script src=\"https://cdnjs.cloudflare.com/ajax/libs/reactstrap/5.0.0/reactstrap.min.js\"></script>\n<!-- All optional dependencies version -->\n-<script src=\"https://cdnjs.cloudflare.com/ajax/libs/reactstrap/5.0.0-alpha.3/reactstrap.full.min.js\"></script>\n+<script src=\"https://cdnjs.cloudflare.com/ajax/libs/reactstrap/5.0.0/reactstrap.full.min.js\"></script>\n```\n* [**unpkg**](https://unpkg.com/reactstrap/)\n```html\n<!-- Main version -->\n-<script src=\"https://unpkg.com/reactstrap@5.0.0-alpha.3/reactstrap.min.js\"></script>\n+<script src=\"https://unpkg.com/reactstrap@5.0.0/dist/reactstrap.min.js\"></script>\n<!-- All optional dependencies version -->\n-<script src=\"https://unpkg.com/reactstrap@5.0.0-alpha.3/reactstrap.full.min.js\"></script>\n+<script src=\"https://unpkg.com/reactstrap@5.0.0/dist/reactstrap.full.min.js\"></script>\n```\n-> **Note**: To load a specific version of Reactstrap replace `5.0.0-alpha.3` with the version number.\n+> **Note**: To load a specific version of Reactstrap replace `5.0.0` with the version number.\n#### Versions\n@@ -128,9 +128,9 @@ Reactstrap has two primary distribution versions:\n<script type=\"text/javascript\" src=\"//cdnjs.cloudflare.com/ajax/libs/react-dom/16.0.0/umd/react-dom.production.min.js\"></script>\n<!-- Optional dependencies -->\n<script type=\"text/javascript\" src=\"//cdnjs.cloudflare.com/ajax/libs/react-transition-group/2.2.1/react-transition-group.min.js\"></script>\n- <script type=\"text/javascript\" src=\"//cdnjs.cloudflare.com/ajax/libs/react-popper/0.7.4/react-popper.min.js\"></script>\n+ <script type=\"text/javascript\" src=\"//cdnjs.cloudflare.com/ajax/libs/react-popper/0.8.3/react-popper.min.js\"></script>\n<!-- Reactstrap -->\n- <script type=\"text/javascript\" src=\"//cdnjs.cloudflare.com/ajax/libs/reactstrap/5.0.0-alpha.3/reactstrap.min.js\"></script>\n+ <script type=\"text/javascript\" src=\"//cdnjs.cloudflare.com/ajax/libs/reactstrap/5.0.0/reactstrap.min.js\"></script>\n<!-- Lastly, include your app's bundle -->\n<script type=\"text/javascript\" src=\"/assets/bundle.js\"></script>\n</head>\n",
        "date": "26.03.2018 06:34:40",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "chatgpt_zeroshot": "Update Reactstrap version to 5.0.0 and react-popper version to 0.8.3"
    },
    {
        "msg": "docs(Modal): added verbiage on size prop",
        "diff": "diff --git a/docs/lib/Components/ModalsPage.js b/docs/lib/Components/ModalsPage.js @@ -54,6 +54,7 @@ export default class ModalsPage extends React.Component {\nautoFocus: PropTypes.bool,\n// if modal should be centered vertically in viewport\ncentered: PropTypes.bool,\n+ // corresponds to bootstrap's modal sizes, ie. 'lg' or 'sm'\nsize: PropTypes.string,\n// callback for toggling isOpen in the controlling component\ntoggle: PropTypes.func,\n",
        "date": "13.04.2018 10:37:03",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "chatgpt_zeroshot": "Add size prop to ModalsPage componentPropTypes"
    },
    {
        "msg": "docs(*): change toggle from using this.setState to use prevState",
        "diff": "diff --git a/docs/lib/examples/Dropdown.js b/docs/lib/examples/Dropdown.js @@ -12,9 +12,9 @@ export default class Example extends React.Component {\n}\ntoggle() {\n- this.setState({\n- dropdownOpen: !this.state.dropdownOpen\n- });\n+ this.setState(prevState => ({\n+ dropdownOpen: !prevState.dropdownOpen\n+ }));\n}\nrender() {\n",
        "date": "21.04.2018 17:36:49",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "chatgpt_zeroshot": "Refactor Dropdown component to use prevState in setState"
    },
    {
        "msg": "docs(Readme): Update dependency versions\ndocs(Readme): Update dependency versions",
        "diff": "diff --git a/README.md b/README.md @@ -27,8 +27,8 @@ Then open [http://localhost:3000/](http://localhost:3000/) to see your app. The\nInstall reactstrap and Bootstrap from NPM. Reactstrap does not include Bootstrap CSS so this needs to be installed as well:\n```\n-npm install --save bootstrap@4.0.0\n-npm install --save reactstrap@next react@^16.0.0 react-dom@^16.0.0\n+npm install --save bootstrap@4.1.1\n+npm install --save reactstrap react@^16.3.2 react-dom@^16.3.2\n```\nImport Bootstrap CSS in the ```src/index.js``` file:\n",
        "date": "03.05.2018 15:00:33",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "chatgpt_zeroshot": "Update Bootstrap and reactstrap versions in README.md"
    },
    {
        "msg": "docs(UncontrolledCollapse): include example",
        "diff": "diff --git a/docs/lib/Components/CollapsePage.js b/docs/lib/Components/CollapsePage.js @@ -5,12 +5,15 @@ import PageTitle from '../UI/PageTitle';\nimport SectionTitle from '../UI/SectionTitle';\nimport CollapseExample from '../examples/Collapse';\n+import UncontrolledCollapseExample from '../examples/CollapseUncontrolled';\nimport CollapseEventsExample from '../examples/CollapseEvents';\nconst CollapseExampleSource = require('!!raw!../examples/Collapse');\nconst CollapseEventsExampleSource = require('!!raw!../examples/CollapseEvents');\n+const UncontrolledCollapseExampleSource = require('!!raw!../examples/CollapseUncontrolled');\n+\nexport default class CollapsePage extends React.Component {\nrender() {\nreturn (\n@@ -60,6 +63,12 @@ export default class CollapsePage extends React.Component {\npass a <code>toggler</code> prop. The <code>toggler</code> prop is a string which will run\nquerySelectorAll to find dom elements which will trigger toggle.\n</p>\n+ <div className=\"docs-example\">\n+ <UncontrolledCollapseExample />\n+ </div>\n+ <pre>\n+ <PrismCode className=\"language-jsx\">{UncontrolledCollapseExampleSource}</PrismCode>\n+ </pre>\n</div>\n);\n}\n",
        "date": "14.05.2018 10:40:21",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "chatgpt_zeroshot": "Add UncontrolledCollapseExample component and source code to CollapsePage"
    },
    {
        "msg": "docs(Carousel): fix typo in prop types configuration",
        "diff": "diff --git a/docs/lib/Components/CarouselPage.js b/docs/lib/Components/CarouselPage.js @@ -130,7 +130,7 @@ export default class CarouselPage extends React.Component {\n<pre>\n<PrismCode className=\"language-jsx\">\n{`UncontrolledCarousel.propTypes = {\n- items: PropTypes.array,isRequired,\n+ items: PropTypes.array.isRequired,\nindicators: PropTypes.bool, // default: true\ncontrols: PropTypes.bool, // default: true\nautoPlay: PropTypes.bool, // default: true\n",
        "date": "17.07.2018 17:10:58",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "chatgpt_zeroshot": "Fix PropTypes declaration in CarouselPage component"
    },
    {
        "msg": "docs(readme): update link to create-react-app guide",
        "diff": "diff --git a/README.md b/README.md @@ -8,7 +8,7 @@ Stateless React Components for Bootstrap 4.\n## Getting Started\n-Follow the [create-react-app instructions](https://github.com/facebookincubator/create-react-app#getting-started) up to the `Adding Bootstrap` section and instead follow the reactstrap version of [adding bootstrap](#adding-bootstrap).\n+Follow the [create-react-app instructions](https://github.com/facebook/create-react-app/blob/master/packages/react-scripts/template/README.md) **up to** the `Adding Bootstrap` section and instead follow the reactstrap version of [adding bootstrap](#adding-bootstrap).\n### tl;dr\n",
        "date": "23.07.2018 20:15:31",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "chatgpt_zeroshot": "Update create-react-app instructions link in README.md"
    },
    {
        "msg": "docs(Form,FormFeedback,FormGroup,FormText): add props section\nCloses",
        "diff": "diff --git a/docs/lib/Components/FormPage.js b/docs/lib/Components/FormPage.js @@ -68,15 +68,16 @@ export default class FormPage extends React.Component {\naddon: PropTypes.bool,\nclassName: PropTypes.string,\ncssModule: PropTypes.object,\n-};`}\n-{`CustomInput.propTypes = {\n+};\n+\n+CustomInput.propTypes = {\nclassName: PropTypes.string,\nid: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\ntype: PropTypes.string.isRequired, // radio, checkbox, select, range.\nlabel: PropTypes.string, // used for checkbox and radios\ninline: PropTypes.bool,\n- valid: PropTypes.bool, // applied the is-invalid class when true, does nothing when false\n- invalid: PropTypes.bool, // applied the is-valid class when true, does nothing when false\n+ valid: PropTypes.bool, // applied the is-valid class when true, does nothing when false\n+ invalid: PropTypes.bool, // applied the is-invalid class when true, does nothing when false\nbsSize: PropTypes.string,\ncssModule: PropTypes.object,\nchildren: PropTypes.oneOfType([PropTypes.node, PropTypes.array, PropTypes.func]), // for type=\"select\"\n@@ -86,6 +87,51 @@ export default class FormPage extends React.Component {\nPropTypes.string,\nPropTypes.func,\n])\n+};\n+\n+Form.propTypes = {\n+ children: PropTypes.node,\n+ inline: PropTypes.bool,\n+ // Pass in a Component to override default element\n+ tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]), // default: 'form'\n+ innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n+ className: PropTypes.string,\n+ cssModule: PropTypes.object,\n+};\n+\n+FormFeedback.propTypes = {\n+ children: PropTypes.node,\n+ // Pass in a Component to override default element\n+ tag: PropTypes.string, // default: 'div'\n+ className: PropTypes.string,\n+ cssModule: PropTypes.object,\n+ valid: PropTypes.bool, // default: undefined\n+ tooltip: PropTypes.bool\n+};\n+\n+FormGroup.propTypes = {\n+ children: PropTypes.node,\n+ // Applied the row class when true, does nothing when false\n+ row: PropTypes.bool,\n+ // Applied the form-check class when true, form-group when false\n+ check: PropTypes.bool,\n+ inline: PropTypes.bool,\n+ // Applied the disabled class when the check and disabled props are true, does nothing when false\n+ disabled: PropTypes.bool,\n+ // Pass in a Component to override default element\n+ tag: PropTypes.string, // default: 'div'\n+ className: PropTypes.string,\n+ cssModule: PropTypes.object,\n+};\n+\n+FormText.propTypes = {\n+ children: PropTypes.node,\n+ inline: PropTypes.bool,\n+ // Pass in a Component to override default element\n+ tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]), // default: 'small'\n+ color: PropTypes.string, // default: 'muted'\n+ className: PropTypes.string,\n+ cssModule: PropTypes.object,\n};`}\n</PrismCode>\n</pre>\n",
        "date": "09.09.2018 21:28:10",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "chatgpt_zeroshot": "Update PropTypes in FormPage component and related components."
    },
    {
        "msg": "docs(Collapse): Transition.propTypes\nCloses",
        "diff": "diff --git a/docs/lib/Components/CollapsePage.js b/docs/lib/Components/CollapsePage.js @@ -30,7 +30,7 @@ export default class CollapsePage extends React.Component {\n<pre>\n<PrismCode className=\"language-jsx\">\n{`Collapse.propTypes = {\n- ...Transition.propTypes,\n+ ...Transition.propTypes, // see note below\nisOpen: PropTypes.bool,\nchildren: PropTypes.oneOfType([\nPropTypes.arrayOf(PropTypes.node),\n@@ -44,6 +44,12 @@ export default class CollapsePage extends React.Component {\n};`}\n</PrismCode>\n</pre>\n+ <p>\n+ Collapse is wrapped in a <code>Transition</code> component\n+ from <code>react-transition-group/transition</code>. Transition props are passed through to\n+ this wrapper. Refer to the <code>Transition</code> documentation for details: <a href=\"http://reactcommunity.org/react-transition-group/transition/\">\n+ http://reactcommunity.org/react-transition-group/transition/</a>.\n+ </p>\n<SectionTitle>Events</SectionTitle>\n<p>\n",
        "date": "13.09.2018 07:31:15",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "chatgpt_zeroshot": "Add note about Transition component in CollapsePage documentation"
    },
    {
        "msg": "docs(README): Update reactstrap install command",
        "diff": "diff --git a/README.md b/README.md @@ -34,8 +34,8 @@ Then open [http://localhost:3000/](http://localhost:3000/) to see your app. The\nInstall reactstrap and Bootstrap from NPM. Reactstrap does not include Bootstrap CSS so this needs to be installed as well:\n```\n-npm install --save bootstrap@4.1.3\n-npm install --save reactstrap react@^16.3.2 react-dom@^16.3.2\n+npm install --save bootstrap\n+npm install --save reactstrap react react-dom\n```\nImport Bootstrap CSS in the ```src/index.js``` file:\n",
        "date": "24.10.2018 15:15:22",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "chatgpt_zeroshot": "Update npm packages for reactstrap and Bootstrap"
    },
    {
        "msg": "docs(Breadcrumb): fix bug in no list example",
        "diff": "diff --git a/docs/lib/examples/BreadcrumbNoList.js b/docs/lib/examples/BreadcrumbNoList.js @@ -4,7 +4,7 @@ import { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nconst Example = (props) => {\nreturn (\n<div>\n- <Breadcrumb tag=\"nav\">\n+ <Breadcrumb tag=\"nav\" listTag=\"div\">\n<BreadcrumbItem tag=\"a\" href=\"#\">Home</BreadcrumbItem>\n<BreadcrumbItem tag=\"a\" href=\"#\">Library</BreadcrumbItem>\n<BreadcrumbItem tag=\"a\" href=\"#\">Data</BreadcrumbItem>\n",
        "date": "21.11.2018 19:39:13",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "chatgpt_zeroshot": "Update Breadcrumb component to use a div for listTag instead of default ul"
    },
    {
        "msg": "docs(typo): Fix misspelling in documentation (Modals)\nFix of a minor misspelling in the Modal section of the documentation.",
        "diff": "diff --git a/docs/lib/Components/ModalsPage.js b/docs/lib/Components/ModalsPage.js @@ -65,7 +65,7 @@ const ModalsPage = () => {\nPropTypes.bool,\nPropTypes.oneOf(['static'])\n]),\n- // allows for a node/componet to exist next to the modal (outside of it). Useful for external close buttons\n+ // allows for a node/component to exist next to the modal (outside of it). Useful for external close buttons\n// external: PropTypes.node,\n// called on componentDidMount\nonEnter: PropTypes.func,\n",
        "date": "26.11.2018 19:38:11",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "chatgpt_zeroshot": "Update PropTypes comment in ModalsPage.js"
    },
    {
        "msg": "docs(Input): static input error",
        "diff": "diff --git a/src/Input.js b/src/Input.js @@ -10,20 +10,27 @@ const propTypes = {\ntype: PropTypes.string,\nsize: PropTypes.string,\nbsSize: PropTypes.string,\n- state: deprecated(PropTypes.string, 'Please use the props \"valid\" and \"invalid\" to indicate the state.'),\n+ state: deprecated(\n+ PropTypes.string,\n+ 'Please use the props \"valid\" and \"invalid\" to indicate the state.'\n+ ),\nvalid: PropTypes.bool,\ninvalid: PropTypes.bool,\ntag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n- innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n+ innerRef: PropTypes.oneOfType([\n+ PropTypes.object,\n+ PropTypes.func,\n+ PropTypes.string\n+ ]),\nstatic: deprecated(PropTypes.bool, 'Please use the prop \"plaintext\"'),\nplaintext: PropTypes.bool,\naddon: PropTypes.bool,\nclassName: PropTypes.string,\n- cssModule: PropTypes.object,\n+ cssModule: PropTypes.object\n};\nconst defaultProps = {\n- type: 'text',\n+ type: 'text'\n};\nclass Input extends React.Component {\n@@ -69,7 +76,7 @@ class Input extends React.Component {\nconst fileInput = type === 'file';\nconst textareaInput = type === 'textarea';\nconst selectInput = type === 'select';\n- let Tag = tag || ((selectInput || textareaInput) ? type : 'input');\n+ let Tag = tag || (selectInput || textareaInput ? type : 'input');\nlet formControlClass = 'form-control';\n@@ -86,7 +93,11 @@ class Input extends React.Component {\n}\n}\n- if (state && typeof valid === 'undefined' && typeof invalid === 'undefined') {\n+ if (\n+ state &&\n+ typeof valid === 'undefined' &&\n+ typeof invalid === 'undefined'\n+ ) {\nif (state === 'danger') {\ninvalid = true;\n} else if (state === 'success') {\n@@ -95,31 +106,45 @@ class Input extends React.Component {\n}\nif (attributes.size && isNotaNumber.test(attributes.size)) {\n- warnOnce('Please use the prop \"bsSize\" instead of the \"size\" to bootstrap\\'s input sizing.');\n+ warnOnce(\n+ 'Please use the prop \"bsSize\" instead of the \"size\" to bootstrap\\'s input sizing.'\n+ );\nbsSize = attributes.size;\ndelete attributes.size;\n}\n- const classes = mapToCssModules(classNames(\n+ const classes = mapToCssModules(\n+ classNames(\nclassName,\ninvalid && 'is-invalid',\nvalid && 'is-valid',\nbsSize ? `form-control-${bsSize}` : false,\nformControlClass\n- ), cssModule);\n+ ),\n+ cssModule\n+ );\nif (Tag === 'input' || (tag && typeof tag === 'function')) {\nattributes.type = type;\n}\n- if (attributes.children && !(plaintext || staticInput || type === 'select' || typeof Tag !== 'string' || Tag === 'select')) {\n- warnOnce(`Input with a type of \"${type}\" cannot have children. Please use \"value\"/\"defaultValue\" instead.`);\n+ if (\n+ attributes.children &&\n+ !(\n+ plaintext ||\n+ staticInput ||\n+ type === 'select' ||\n+ typeof Tag !== 'string' ||\n+ Tag === 'select'\n+ )\n+ ) {\n+ warnOnce(\n+ `Input with a type of \"${type}\" cannot have children. Please use \"value\"/\"defaultValue\" instead.`\n+ );\ndelete attributes.children;\n}\n- return (\n- <Tag {...attributes} ref={innerRef} className={classes} />\n- );\n+ return <Tag {...attributes} ref={innerRef} className={classes} />;\n}\n}\n",
        "date": "28.12.2018 22:32:48",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "chatgpt_zeroshot": "Refactor Input component to use updated prop types and improve code readability"
    },
    {
        "msg": "docs(typo): Fix misspelling in documentation (Alerts)",
        "diff": "diff --git a/docs/lib/Components/AlertsPage.js b/docs/lib/Components/AlertsPage.js @@ -99,7 +99,7 @@ export default class AlertsPage extends React.Component {\n<SectionTitle>Alerts without fade</SectionTitle>\n<p>\n- Fade can be disbaled using <code>fade=false</code>.\n+ Fade can be disabled using <code>fade=false</code>.\n</p>\n<div className=\"docs-example\">\n<AlertFadelessExample />\n",
        "date": "29.12.2018 13:35:15",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "chatgpt_zeroshot": "Fix typo in AlertsPage component - changed \"disbaled\" to \"disabled\""
    },
    {
        "msg": "docs(Button): Update PropTypes and added DefaultProps",
        "diff": "diff --git a/docs/lib/Components/ButtonsPage.js b/docs/lib/Components/ButtonsPage.js @@ -34,23 +34,42 @@ export default class ButtonsPage extends React.Component {\n<PrismCode className=\"language-jsx\">\n{`Button.propTypes = {\nactive: PropTypes.bool,\n+ 'aria-label': PropTypes.string,\nblock: PropTypes.bool,\ncolor: PropTypes.string, // default: 'secondary'\ndisabled: PropTypes.bool,\n+ outline: PropTypes.bool,\n// Pass in a Component to override default button element\n// example: react-router Link\n// default: 'button'\n- tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n+ tag: PropTypes.oneOfType([\n+ PropTypes.func,\n+ PropTypes.string,\n+ PropTypes.shape({ $$typeof: PropTypes.symbol, render: PropTypes.func }),\n+ PropTypes.arrayOf(PropTypes.oneOfType([\n+ PropTypes.func,\n+ PropTypes.string,\n+ PropTypes.shape({ $$typeof: PropTypes.symbol, render: PropTypes.func }),\n+ ]))\n+ ]),\n// ref will only get you a reference to the Button component, use innerRef to get a reference to the DOM element (for things like focus management).\n- innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n+ innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\nonClick: PropTypes.func,\nsize: PropTypes.string,\n+ children: PropTypes.node,\n+ className: PropTypes.string,\n+ cssModule: PropTypes.object,\n// use close prop for BS4 close icon utility\nclose: PropTypes.bool,\n+}\n+\n+Button.defaultProps = {\n+ color: 'secondary',\n+ tag: 'button',\n}`}\n</PrismCode>\n</pre>\n",
        "date": "24.01.2019 15:39:21",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "chatgpt_zeroshot": "Add new propTypes and defaultProps to Button component"
    },
    {
        "msg": "docs(Alert): add fade prop to props list\nAdd the fade prop to the props list for the Alert component docs.",
        "diff": "diff --git a/docs/lib/Components/AlertsPage.js b/docs/lib/Components/AlertsPage.js @@ -47,6 +47,7 @@ export default class AlertsPage extends React.Component {\nisOpen: PropTypes.bool, // default: true\ntoggle: PropTypes.func,\ntag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n+ fade: PropTypes.bool, // default: true\n// Controls the transition of the alert fading in and out\n// See [Fade](/components/fade/) for more details\ntransition: PropTypes.shape(Fade.propTypes),\n",
        "date": "05.02.2019 09:18:47",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "chatgpt_zeroshot": "Add fade prop to AlertsPage componentPropTypes"
    },
    {
        "msg": "docs(Input): add min and max to number input",
        "diff": "diff --git a/docs/lib/examples/InputGroupOverview.js b/docs/lib/examples/InputGroupOverview.js @@ -37,7 +37,7 @@ const Example = (props) => {\n<br />\n<InputGroup>\n<InputGroupAddon addonType=\"prepend\">$</InputGroupAddon>\n- <Input placeholder=\"Amount\" type=\"number\" step=\"1\" />\n+ <Input placeholder=\"Amount\" min={0} max={100} type=\"number\" step=\"1\" />\n<InputGroupAddon addonType=\"append\">.00</InputGroupAddon>\n</InputGroup>\n</div>\n",
        "date": "03.04.2019 20:54:50",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "chatgpt_zeroshot": "Add min and max attributes to Input element in InputGroupOverview"
    },
    {
        "msg": "docs: sort components alphabetically",
        "diff": "diff --git a/docs/lib/UI/Content.js b/docs/lib/UI/Content.js @@ -17,7 +17,7 @@ function Content({ items, children, title }) {\n<div className=\"docs-sidebar mb-3\">\n<h1 className=\"h5\">{title}</h1>\n<Nav className=\"flex-column\">\n- {items.map(item => (\n+ {items.sort((a, b) => a.name.localeCompare(b.name)).map(item => (\n<NavItem key={item.to}>\n<NavLink tag={Link} to={item.to} activeClassName=\"active\">\n{item.name}\n",
        "date": "23.04.2019 15:30:40",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "chatgpt_zeroshot": "Sort items alphabetically in Content component"
    },
    {
        "msg": "docs(DropdownsPage): Use correct typing for styles.maxHeight",
        "diff": "diff --git a/docs/lib/Components/DropdownsPage.js b/docs/lib/Components/DropdownsPage.js @@ -323,7 +323,7 @@ DropdownItem.propTypes = {\nstyles: {\n...data.styles,\noverflow: 'auto',\n- maxHeight: 100,\n+ maxHeight: '100px',\n},\n};\n},\n",
        "date": "29.04.2019 09:18:41",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "chatgpt_zeroshot": "Update maxHeight style property to use '100px' instead of 100 in DropdownItem component"
    },
    {
        "msg": "docs: add missing InputGroupText in InputGroupOverview example",
        "diff": "diff --git a/docs/lib/examples/InputGroupOverview.js b/docs/lib/examples/InputGroupOverview.js @@ -20,7 +20,9 @@ const Example = (props) => {\n<br />\n<InputGroup>\n<Input placeholder=\"username\" />\n- <InputGroupAddon addonType=\"append\">@example.com</InputGroupAddon>\n+ <InputGroupAddon addonType=\"append\">\n+ <InputGroupText>@example.com</InputGroupText>\n+ </InputGroupAddon>\n</InputGroup>\n<br />\n<InputGroup>\n",
        "date": "28.06.2019 16:50:29",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "chatgpt_zeroshot": "Refactor InputGroupAddon to use InputGroupText in InputGroupOverview.js"
    },
    {
        "msg": "docs(Modal): returnFocusAfterClose to props list",
        "diff": "diff --git a/docs/lib/Components/ModalsPage.js b/docs/lib/Components/ModalsPage.js @@ -104,7 +104,9 @@ const ModalsPage = () => {\nmodalTransition: PropTypes.shape(Fade.propTypes),\ninnerRef: PropTypes.object,\n// if modal should be destructed/removed from DOM after closing\n- unmountOnClose: PropTypes.bool // defaults to true\n+ unmountOnClose: PropTypes.bool, // defaults to true\n+ // if the element which triggered the modal to open should focused after the modal closes (see example somewhere below)\n+ returnFocusAfterClose: PropTypes.bool // defaults to true\n}`}\n</PrismCode>\n</pre>\n",
        "date": "09.09.2019 12:30:42",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "chatgpt_zeroshot": "Add returnFocusAfterClose prop to ModalsPage component"
    },
    {
        "msg": "docs: add reactstrap-scrollspy to the in the wild section",
        "diff": "diff --git a/README.md b/README.md @@ -264,6 +264,7 @@ Organizations and projects using `reactstrap`\n- [Admin dashboard example app built with reactstrap](https://github.com/reduction-admin/react-reduction) - [demo](https://reduction-admin.firebaseapp.com/)\n- [DevExtreme React Grid](https://devexpress.github.io/devextreme-reactive/react/grid/) - It's a stateless data grid built on top of `reactstrap` with paging, sorting, filtering, grouping, selection, editing and virtual scrolling features.\n- [DevExtreme React Chart](https://devexpress.github.io/devextreme-reactive/react/chart/) - A chart built on top of `reactstrap` that visualizes data using a variety of series types, including bar, line, area, scatter, pie, and more.\n+- [reactstrap-scrollspy](https://github.com/keidrun/reactstrap-scrollspy/) - [demo](https://keidrun.github.io/reactstrap-scrollspy/)\nSubmit a PR to add to this list!\n",
        "date": "12.09.2019 21:58:05",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "chatgpt_zeroshot": "Add reactstrap-scrollspy to list of organizations and projects using `reactstrap`"
    },
    {
        "msg": "docs(Cards): fix broken link",
        "diff": "diff --git a/docs/lib/examples/CardGroups.js b/docs/lib/examples/CardGroups.js @@ -25,7 +25,7 @@ const Example = (props) => {\n</CardBody>\n</Card>\n<Card>\n- <CardImg top width=\"100%\" src=\"/assets/static318x180.svg\" alt=\"Card image cap\" />\n+ <CardImg top width=\"100%\" src=\"/assets/318x180.svg\" alt=\"Card image cap\" />\n<CardBody>\n<CardTitle>Card title</CardTitle>\n<CardSubtitle>Card subtitle</CardSubtitle>\n",
        "date": "03.10.2019 18:02:21",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "chatgpt_zeroshot": "Fix image path in CardGroups.js example"
    },
    {
        "msg": "docs(Collapse): make example more clear\n`isOpen={collapse}` is a contradiction, because if `collapse` is `true` then it's not collapsed and if it's `false` it is collapsed.",
        "diff": "diff --git a/docs/lib/examples/Collapse.js b/docs/lib/examples/Collapse.js @@ -2,14 +2,14 @@ import React, { useState } from 'react';\nimport { Collapse, Button, CardBody, Card } from 'reactstrap';\nconst Example = (props) => {\n- const [collapse, setCollapse] = useState(false);\n+ const [isOpen, setIsOpen] = useState(false);\n- const toggle = () => setCollapse(!collapse);\n+ const toggle = () => setIsOpen(!isOpen);\nreturn (\n<div>\n<Button color=\"primary\" onClick={toggle} style={{ marginBottom: '1rem' }}>Toggle</Button>\n- <Collapse isOpen={collapse}>\n+ <Collapse isOpen={isOpen}>\n<Card>\n<CardBody>\nAnim pariatur cliche reprehenderit,\n",
        "date": "01.11.2019 17:02:09",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "chatgpt_zeroshot": "Refactor Collapse component to use isOpen state variable"
    },
    {
        "msg": "docs(Dropdown): Fix double toggle in CustomDropdown example\nFixes",
        "diff": "diff --git a/docs/lib/examples/CustomDropdown.js b/docs/lib/examples/CustomDropdown.js @@ -10,7 +10,6 @@ const Example = () => {\n<Dropdown isOpen={dropdownOpen} toggle={toggle}>\n<DropdownToggle\ntag=\"span\"\n- onClick={toggle}\ndata-toggle=\"dropdown\"\naria-expanded={dropdownOpen}\n>\n",
        "date": "09.11.2019 03:42:09",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "chatgpt_zeroshot": "Remove unnecessary onClick event from DropdownToggle in CustomDropdown example"
    },
    {
        "msg": "docs(InputGroupOverview): add missing InputGroupText",
        "diff": "diff --git a/docs/lib/examples/InputGroupOverview.js b/docs/lib/examples/InputGroupOverview.js @@ -5,7 +5,9 @@ const Example = (props) => {\nreturn (\n<div>\n<InputGroup>\n- <InputGroupAddon addonType=\"prepend\">@</InputGroupAddon>\n+ <InputGroupAddon addonType=\"prepend\">\n+ <InputGroupText>@</InputGroupText>\n+ </InputGroupAddon>\n<Input placeholder=\"username\" />\n</InputGroup>\n<br />\n",
        "date": "11.11.2019 16:04:10",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "chatgpt_zeroshot": "Refactor InputGroupAddon to use InputGroupText in InputGroupOverview.js"
    },
    {
        "msg": "docs: only build and publish docs on tag",
        "diff": "diff --git a/scripts/docs b/scripts/docs @@ -15,7 +15,7 @@ error() {\necho -e \"\\033[31;1m$1\u001b\"\n}\n-if [ \"$TRAVIS_BRANCH\" == \"master\" ] && [ \"$TRAVIS_PULL_REQUEST\" == \"false\" ]; then\n+if [ \"$TRAVIS_BRANCH\" == \"$TRAVIS_TAG\" ] && [ \"$TRAVIS_PULL_REQUEST\" == \"false\" ]; then\necho \"Deploying documentation\"\nelse\nsuccess \"Not building master branch. Skipping deploy.\"\n",
        "date": "19.11.2019 15:16:19",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "chatgpt_zeroshot": "Update deployment condition to check for Travis tag instead of branch."
    },
    {
        "msg": "docs: fix form example showing multiselect",
        "diff": "diff --git a/docs/lib/examples/FormGrid.js b/docs/lib/examples/FormGrid.js @@ -19,13 +19,25 @@ const Example = (props) => {\n<FormGroup row>\n<Label for=\"exampleSelect\" sm={2}>Select</Label>\n<Col sm={10}>\n- <Input type=\"select\" name=\"select\" id=\"exampleSelect\" />\n+ <Input type=\"select\" name=\"select\" id=\"exampleSelect\">\n+ <option>1</option>\n+ <option>2</option>\n+ <option>3</option>\n+ <option>4</option>\n+ <option>5</option>\n+ </Input>\n</Col>\n</FormGroup>\n<FormGroup row>\n<Label for=\"exampleSelectMulti\" sm={2}>Select Multiple</Label>\n<Col sm={10}>\n- <Input type=\"select\" name=\"selectMulti\" id=\"exampleSelectMulti\" multiple />\n+ <Input type=\"select\" name=\"selectMulti\" id=\"exampleSelectMulti\" multiple>\n+ <option>1</option>\n+ <option>2</option>\n+ <option>3</option>\n+ <option>4</option>\n+ <option>5</option>\n+ </Input>\n</Col>\n</FormGroup>\n<FormGroup row>\n",
        "date": "02.01.2020 23:21:52",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "chatgpt_zeroshot": "Add options to select dropdowns in FormGrid.js"
    },
    {
        "msg": "docs: change maxHeight from int to string in Dropdowndocs\nFixes",
        "diff": "diff --git a/docs/lib/Components/DropdownsPage.js b/docs/lib/Components/DropdownsPage.js @@ -365,7 +365,7 @@ DropdownItem.propTypes = {\nstyles: {\n...data.styles,\noverflow: 'auto',\n- maxHeight: 100,\n+ maxHeight: '100px',\n},\n};\n},\n",
        "date": "27.01.2020 10:44:59",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "chatgpt_zeroshot": "Update DropdownItem styles to use '100px' for maxHeight instead of 100."
    },
    {
        "msg": "docs(Tooltip): Update documented default value",
        "diff": "diff --git a/docs/lib/Components/TooltipsPage.js b/docs/lib/Components/TooltipsPage.js @@ -47,7 +47,7 @@ export default class TooltipsPage extends React.Component {\n]).isRequired,\n// Where to inject the popper DOM node, default to body\ncontainer: PropTypes.oneOfType([PropTypes.string, PropTypes.func, DOMElement]),\n- // optionally override show/hide delays - default { show: 0, hide: 250 }\n+ // optionally override show/hide delays - default { show: 0, hide: 50 }\ndelay: PropTypes.oneOfType([\nPropTypes.shape({ show: PropTypes.number, hide: PropTypes.number }),\nPropTypes.number\n",
        "date": "25.02.2020 12:43:32",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "chatgpt_zeroshot": "Update show/hide delay in tooltips to 50ms"
    },
    {
        "msg": "docs: npm --save no longer needed",
        "diff": "diff --git a/README.md b/README.md @@ -34,8 +34,8 @@ Then open [http://localhost:3000/](http://localhost:3000/) to see your app. The\nInstall reactstrap and Bootstrap from NPM. Reactstrap does not include Bootstrap CSS so this needs to be installed as well:\n```\n-npm install --save bootstrap\n-npm install --save reactstrap react react-dom\n+npm i bootstrap\n+npm i reactstrap react react-dom\n```\nImport Bootstrap CSS in the ```src/index.js``` file:\n",
        "date": "22.06.2020 21:54:28",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "chatgpt_zeroshot": "Update npm install commands for reactstrap and Bootstrap"
    },
    {
        "msg": "docs: Fix code example for split button dropdowns",
        "diff": "diff --git a/docs/lib/Components/ButtonDropdownPage.js b/docs/lib/Components/ButtonDropdownPage.js @@ -107,7 +107,7 @@ DropdownToggle.propTypes = {\n<PrismCode className=\"language-jsx\">\n{`<ButtonDropdown isOpen={isOpen} toggle={toggle}>\n<Button id=\"caret\" color=\"primary\">{this.props.text}</Button>\n- <DropdownToggle caret color=\"primary\" />\n+ <DropdownToggle split color=\"primary\" />\n<DropdownMenu>\n<DropdownItem header>Header</DropdownItem>\n<DropdownItem disabled>Action</DropdownItem>\n",
        "date": "07.10.2020 21:56:10",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "chatgpt_zeroshot": "Update ButtonDropdownPage.js to use split DropdownToggle instead of caret."
    },
    {
        "msg": "docs(Collapse): Document the defaultOpen prop\nAdds a sentence to describe the defaultOpen prop.",
        "diff": "diff --git a/docs/lib/Components/CollapsePage.js b/docs/lib/Components/CollapsePage.js @@ -68,7 +68,8 @@ export default class CollapsePage extends React.Component {\nwanted without the need to manage/control the state of the component.{' '}\n<code>UncontrolledCollapse</code> does not require an <code>isOpen</code> prop. Instead\npass a <code>toggler</code> prop. The <code>toggler</code> prop is a string which will run\n- querySelectorAll to find dom elements which will trigger toggle.\n+ querySelectorAll to find dom elements which will trigger toggle. The <code>defaultOpen</code>\n+ prop controls the initial state.\n</p>\n<div className=\"docs-example\">\n<UncontrolledCollapseExample />\n",
        "date": "07.10.2020 22:06:43",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "chatgpt_zeroshot": "Add defaultOpen prop to UncontrolledCollapse component"
    },
    {
        "msg": "docs: Improve dropdown page\n+ Add missing className prop of Dropdown component to docs\n+ Fix ident issue in an example",
        "diff": "diff --git a/docs/lib/Components/DropdownsPage.js b/docs/lib/Components/DropdownsPage.js @@ -60,6 +60,7 @@ export default class DropdownPage extends React.Component {\n<PrismCode className=\"language-jsx\">\n{`Dropdown.propTypes = {\na11y: PropTypes.bool, // defaults to true. Set to false to enable more bootstrap like tabbing behavior\n+ className: PropTypes.string,\ndisabled: PropTypes.bool,\ndirection: PropTypes.oneOf(['up', 'down', 'left', 'right']),\ngroup: PropTypes.bool,\n",
        "date": "10.01.2021 19:55:16",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "chatgpt_zeroshot": "Add className prop to Dropdown componentPropTypes"
    },
    {
        "msg": "docs: update radio/checkbox examples to follow docs\n<input> and <label> should be siblings\n<input> should before after <label>",
        "diff": "diff --git a/docs/lib/examples/InlineCheckboxes.js b/docs/lib/examples/InlineCheckboxes.js @@ -5,13 +5,15 @@ const Example = (props) => {\nreturn (\n<Form>\n<FormGroup check inline>\n- <Label check>\n- <Input type=\"checkbox\" /> Some input\n+ <Input id=\"InlineCheckboxes-checkbox-1\" type=\"checkbox\" />\n+ <Label for=\"InlineCheckboxes-checkbox-1\" check>\n+ Some input\n</Label>\n</FormGroup>\n<FormGroup check inline>\n- <Label check>\n- <Input type=\"checkbox\" /> Some other input\n+ <Input id=\"InlineCheckboxes-checkbox-2\" type=\"checkbox\" />\n+ <Label for=\"InlineCheckboxes-checkbox-2\" check>\n+ Some other input\n</Label>\n</FormGroup>\n</Form>\n@@ -19,4 +21,3 @@ const Example = (props) => {\n}\nexport default Example;\n-\n\\ No newline at end of file\n",
        "date": "11.12.2020 15:41:19",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "chatgpt_zeroshot": "Refactor inline checkboxes in InlineCheckboxes.js"
    },
    {
        "msg": "docs(Alert): remove incorrect prop in example",
        "diff": "diff --git a/stories/examples/Alert/Alert.js b/stories/examples/Alert/Alert.js @@ -3,7 +3,7 @@ import { Alert } from 'reactstrap';\nimport { colors } from '../options';\nfunction Example(args) {\n- return <Alert {...args} dismiss={() => {}} isOpen />;\n+ return <Alert {...args} isOpen />;\n}\nExample.args = {\n",
        "date": "27.07.2022 21:29:21",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "chatgpt_zeroshot": "Remove dismiss function from Alert component in Example function"
    },
    {
        "msg": "docs(#2607): add docs on css module",
        "diff": "diff --git a/stories/Index.stories.mdx b/stories/Index.stories.mdx @@ -102,3 +102,28 @@ import { Modal, ModalBody, ModalHeader } from 'reactstrap';\n</Modal>\n```\n+\n+#### CSSModule\n+\n+You can use `cssModule` to change the underlying component's default CSS className. This is an escape hatch\n+if you do not want to use the default bootstrap class.\n+\n+For example Button renders with a default class `.btn`. You can use\n+\n+```jsx\n+<Button color=\"primary\" cssModule={{ btn: 'hyperspeed-btn' }}>\n+ primary\n+</Button>\n+```\n+\n+so that Button renders with `.hyperspeed-btn` instead of `.btn`.\n+\n+You can use `setGlobalCssModule` function to set custom classes globally.\n+\n+```jsx\n+import { Util } from 'reactstrap';\n+\n+Util.setGlobalCssModule({\n+ btn: 'hyperspeed-btn',\n+});\n+```\n",
        "date": "27.08.2022 08:15:49",
        "repo": "reactstrap/reactstrap",
        "type": "docs",
        "chatgpt_zeroshot": "Add documentation for using cssModule and setGlobalCssModule in Index.stories.mdx"
    },
    {
        "msg": "docs: added requirements to README",
        "diff": "diff --git a/README.md b/README.md ## Quick Setup\n+Make sure you have the newest versions of Nuxt and Firebase installed and setup in your project.\n+\n+```bash\n+yarn add nuxt # OR npm i nuxt\n+yarn add firebase # OR npm i firebase\n+```\n+\nInstall the module via NPM or Yarn:\n```bash\n",
        "date": "07.03.2020 18:22:08",
        "repo": "nuxt-community/firebase-module",
        "type": "docs",
        "chatgpt_zeroshot": "Add instructions for setting up Nuxt and Firebase in the project."
    },
    {
        "msg": "docs: added firestore.settings config",
        "diff": "diff --git a/docs/guide/options/README.md b/docs/guide/options/README.md @@ -237,10 +237,18 @@ firestore: {\nstatic: false, // default\npreload: false, // default\nchunkName: process.env.NODE_ENV !== 'production' ? 'firebase-auth' : '[id]', // default\n- enablePersistence: true\n+ enablePersistence: true,\n+ settings: {\n+ // Firestore Settings\n+ }\n}\n```\n+#### settings\n+\n+Adds settings to your Firebase initialization, e.g. `host` or `ssl`.\n+See more [here](https://firebase.google.com/docs/reference/js/firebase.firestore.Settings).\n+\n#### enablePersistence\nEnables persistence in web apps.\n",
        "date": "10.03.2020 17:36:17",
        "repo": "nuxt-community/firebase-module",
        "type": "docs",
        "chatgpt_zeroshot": "Add settings option to Firestore configuration"
    },
    {
        "msg": "docs: added warning that settings currently don't work in universal mode",
        "diff": "diff --git a/docs/guide/options/README.md b/docs/guide/options/README.md @@ -239,7 +239,7 @@ firestore: {\nchunkName: process.env.NODE_ENV !== 'production' ? 'firebase-auth' : '[id]', // default\nenablePersistence: true,\nsettings: {\n- // Firestore Settings\n+ // Firestore Settings - currently only works in SPA mode\n}\n}\n```\n@@ -249,6 +249,11 @@ firestore: {\nAdds settings to your Firebase initialization, e.g. `host` or `ssl`.\nSee more [here](https://firebase.google.com/docs/reference/js/firebase.firestore.Settings).\n+::: danger\n+There seems to be an issue when using settings() in Universal mode (see [this issue](https://github.com/firebase/firebase-js-sdk/issues/2733)). Therefore, settings currently only work in SPA mode.\n+:::\n+\n+\n#### enablePersistence\nEnables persistence in web apps.\n",
        "date": "12.03.2020 09:05:45",
        "repo": "nuxt-community/firebase-module",
        "type": "docs",
        "chatgpt_zeroshot": "Add note about Firestore settings only working in SPA mode"
    },
    {
        "msg": "docs: added persistence to auth in \"Full Configuration\"",
        "diff": "diff --git a/docs/guide/getting-started/README.md b/docs/guide/getting-started/README.md @@ -85,6 +85,7 @@ modules: [\nonFirebaseHosting: false,\nservices: {\nauth: {\n+ persistence: 'local',\ninitialize: {\nonAuthStateChangedMutation: \"SET_AUTH_USER\",\nonAuthStateChangedAction: null,\n",
        "date": "15.03.2020 22:45:10",
        "repo": "nuxt-community/firebase-module",
        "type": "docs",
        "chatgpt_zeroshot": "Add local persistence to auth service configuration"
    },
    {
        "msg": "docs(auth): add server implementation tipp",
        "diff": "diff --git a/docs/guide/options/README.md b/docs/guide/options/README.md @@ -290,7 +290,7 @@ auth: {\n}\n```\n-##### Server side Firebase client SDK login <Badge text=\"EXPERIMENTAL\" type=\"error\"/>\n+##### Server side Firebase client SDK login <Badge text=\"EXPERIMENTAL\" type=\"warning\"/>\nOnce you have [properly setup the admin sdk](#firebase-admin-authorization) you can enable server side login to use firebase services on the server, e.g. to perform store hydration on page load.\n@@ -316,6 +316,32 @@ auth: {\n}\n```\n+::: warning Session persistence\n+\n+Make sure to initialize the nuxt build outside of the server request callback for session management to work properly:\n+\n+```js\n+import express from 'express'\n+import { Nuxt } from 'nuxt'\n+\n+const server = express()\n+\n+// do this outside of the server callback so the nuxt build is kept in memory\n+const nuxt = new Nuxt({\n+ dev: false,\n+ buildDir: '.nuxt'\n+})\n+\n+server.use(async (req, res, next) => {\n+ // this will resolve immediately after the first render\n+ await nuxt.ready()\n+\n+ nuxt.render(req, res, next)\n+})\n+```\n+\n+:::\n+\n::: danger Do not use this feature for high traffic sites\nThis module provides this feature to facilitate data hydration in SSR calls.\n",
        "date": "25.04.2020 00:20:09",
        "repo": "nuxt-community/firebase-module",
        "type": "docs",
        "chatgpt_zeroshot": "Update badge type and add session persistence warning in options guide"
    },
    {
        "msg": "docs(auth): mention of package requirement for server implementation",
        "diff": "diff --git a/docs/guide/options/README.md b/docs/guide/options/README.md @@ -316,9 +316,12 @@ auth: {\n}\n```\n-::: warning Session persistence\n+::: warning Programmatic server implementation\n-Make sure to initialize the nuxt build outside of the server request callback for session management to work properly:\n+If you are using an external server implementation to start nuxt programmatically:\n+\n+- The `@nuxtjs/firebase` module has to be included in your server package (`yarn add @nuxtjs/firebase`).\n+- Make sure to initialize the nuxt build outside of the server request callback for session management to work properly:\n```js\nimport express from 'express'\n",
        "date": "25.04.2020 12:46:32",
        "repo": "nuxt-community/firebase-module",
        "type": "docs",
        "chatgpt_zeroshot": "refactor: Update README.md to include instructions for programmatic server implementation"
    },
    {
        "msg": "docs(docs): added Algolia search",
        "diff": "diff --git a/docs/.vuepress/config.js b/docs/.vuepress/config.js @@ -11,6 +11,10 @@ module.exports = {\n],\ntheme: 'carbon',\nthemeConfig: {\n+ algolia: {\n+ apiKey: '26073a7590724b3efc377b3b7608f3e0',\n+ indexName:'nuxtjs_firebase'\n+ },\ncarbonAds: {\nserve: \"CE7D62JL\",\nplacement: \"packagesdeveoio\"\n",
        "date": "25.04.2020 17:14:18",
        "repo": "nuxt-community/firebase-module",
        "type": "docs",
        "chatgpt_zeroshot": "Add Algolia search integration in theme configuration"
    },
    {
        "msg": "docs(auth): add loginDelay option to configuration example",
        "diff": "diff --git a/docs/guide/getting-started/README.md b/docs/guide/getting-started/README.md @@ -99,7 +99,8 @@ modules: [\n],\n// Experimental Feature, use with caution.\nserverLogin: {\n- sessionLifetime: 60 * 60 * 1000 // one hour\n+ sessionLifetime: 60 * 60 * 1000, // one hour\n+ loginDelay: 50 // minimal recommended delay\n}\n}\n},\n",
        "date": "29.04.2020 01:17:26",
        "repo": "nuxt-community/firebase-module",
        "type": "docs",
        "chatgpt_zeroshot": "Add minimal recommended login delay in serverLogin configuration"
    },
    {
        "msg": "docs(guide/introduction): fix typo",
        "diff": "diff --git a/docs/guide/introduction/README.md b/docs/guide/introduction/README.md @@ -23,4 +23,4 @@ The module adds a plugin to your Nuxt.js application that handles the initializa\n## Disclaimer\n-This module is meant for easy and quick set-up of Firebase in a Nuxt project. Due to the nature of this module, it is possibly not optimal for websites that need to be super performant and/or SEO friendly, since the module adds the Firebase services to the global scope. If you wan't your website to be more performant, you'd probably be better off by importing the services only in the files where you need them (i.e. by NOT using this module). That being said, the difference might be marginal depending on your project.\n+This module is meant for easy and quick set-up of Firebase in a Nuxt project. Due to the nature of this module, it is possibly not optimal for websites that need to be super performant and/or SEO friendly, since the module adds the Firebase services to the global scope. If you want your website to be more performant, you'd probably be better off by importing the services only in the files where you need them (i.e. by NOT using this module). That being said, the difference might be marginal depending on your project.\n",
        "date": "03.05.2020 23:52:37",
        "repo": "nuxt-community/firebase-module",
        "type": "docs",
        "chatgpt_zeroshot": "Update README.md to fix typo in word \"wan't\" to \"want\""
    },
    {
        "msg": "docs(options): analytics and remote config description\nAnalytics and Remote Config options descriptions were referencing Storage.",
        "diff": "diff --git a/docs/guide/options/README.md b/docs/guide/options/README.md @@ -556,7 +556,7 @@ performance: true\n### analytics\n-Initializes Firebase Storage and makes it available via `$fireAnalytics` and `$fireAnalyticsObj`.\n+Initializes Firebase Analytics and makes it available via `$fireAnalytics` and `$fireAnalyticsObj`.\n- Type: `Boolean` or `Object`\n- Default: `false`\n@@ -567,7 +567,7 @@ analytics: true\n### remoteConfig\n-Initializes Firebase Storage and makes it available via `$fireConfig` and `$fireConfigObj`.\n+Initializes Firebase Remote Config and makes it available via `$fireConfig` and `$fireConfigObj`.\n- Type: `Boolean` or `Object`\n- Default: `false`\n",
        "date": "10.05.2020 22:07:50",
        "repo": "nuxt-community/firebase-module",
        "type": "docs",
        "chatgpt_zeroshot": "Update Firebase service names in options guide"
    },
    {
        "msg": "docs(auth): add idToken to res.locals.user property",
        "diff": "diff --git a/docs/tutorials/ssr/README.md b/docs/tutorials/ssr/README.md @@ -114,6 +114,7 @@ The server user object is not a full `firebase.User`, since it is reproduced fro\n- `emailVerified`: If the email was verified\n- `displayName`: The users display name\n- `allClaims`: All claims from the [admin.auth.DecodedIdToken](https://firebase.google.com/docs/reference/admin/node/admin.auth.DecodedIdToken)\n+- `idToken`: The current idToken\n:::\n@@ -121,16 +122,17 @@ The server user object is not a full `firebase.User`, since it is reproduced fro\n// Store action called nuxtServerInit:\nasync nuxtServerInit({ dispatch, commit }, { res }) {\nif (res && res.locals && res.locals.user) {\n- const { allClaims: claims, ...authUser } = res.locals.user\n+ const { allClaims: claims, idToken: token, ...authUser } = res.locals.user\nawait dispatch('onAuthStateChangedAction', {\nauthUser,\n- claims\n+ claims,\n+ token\n})\n// or\n- commit('ON_AUTH_STATE_CHANGED_MUTATION', { authUser, claims })\n+ commit('ON_AUTH_STATE_CHANGED_MUTATION', { authUser, claims, token })\n}\n}\n```\n",
        "date": "11.05.2020 21:01:36",
        "repo": "nuxt-community/firebase-module",
        "type": "docs",
        "chatgpt_zeroshot": "Add idToken to server user object and update nuxtServerInit function to handle idToken."
    },
    {
        "msg": "docs(docs): changed \"important\" info in Firestore settings()",
        "diff": "diff --git a/docs/guide/options/README.md b/docs/guide/options/README.md @@ -450,8 +450,17 @@ More information [here](https://firebase.google.com/docs/firestore/manage-data/e\nAdds settings to your Firebase initialization, e.g. `host` or `ssl`.\nSee more [here](https://firebase.google.com/docs/reference/js/firebase.firestore.Settings).\n-::: danger\n-There seems to be an issue when using settings() in Universal mode (see [this issue](https://github.com/firebase/firebase-js-sdk/issues/2733)). Therefore, settings currently only work in SPA mode.\n+::: warning Important\n+When using settings() in Universal mode (see [this issue](https://github.com/nuxt-community/firebase-module/issues/116)), you need to set `runInNewContext` to `false` in your nuxt.config.js like so:\n+\n+```js\n+// Add this to your nuxt.config.js\n+render: {\n+ bundleRenderer: {\n+ runInNewContext: false\n+ }\n+ },\n+```\n:::\n### functions\n",
        "date": "07.06.2020 20:50:02",
        "repo": "nuxt-community/firebase-module",
        "type": "docs",
        "chatgpt_zeroshot": "Add warning about using settings() in Universal mode and provide solution in nuxt.config.js."
    },
    {
        "msg": "docs(messaging): added messaing object example for collectionEnabled",
        "diff": "diff --git a/docs/guide/options/README.md b/docs/guide/options/README.md @@ -608,6 +608,12 @@ Initializes Firebase Analytics and makes it available via `$fireAnalytics` and `\n```js\nanalytics: true\n+\n+// or\n+\n+messaging: {\n+ collectionEnabled: true, // default\n+}\n```\n#### collectionEnabled\n",
        "date": "29.06.2020 23:49:57",
        "repo": "nuxt-community/firebase-module",
        "type": "docs",
        "chatgpt_zeroshot": "Add support for enabling collection in Firebase Messaging"
    },
    {
        "msg": "docs(fix): use <alert> for experimental-alert",
        "diff": "diff --git a/docs/components/global/experimental-alert.vue b/docs/components/global/experimental-alert.vue <template>\n- <div>\n- <div data-v-70167bf8=\"\" class=\"bg-teal-100 border-teal-500 border-l-4 p-4 mb-4 mt-4\">\n- <div class=\"flex items-start\">\n- <div class=\"flex-shrink-0\">\n- <svg class=\"fill-current h-6 w-6 text-teal-500 mt-px\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\"><path d=\"M2.93 17.07A10 10 0 1 1 17.07 2.93 10 10 0 0 1 2.93 17.07zm12.73-1.41A8 8 0 1 0 4.34 4.34a8 8 0 0 0 11.32 11.32zM9 11V9h2v6H9v-4zm0-6h2v2H9V5z\" /></svg>\n- </div>\n- <div class=\"flex-grow ml-2 overflow-auto alert-content\">\n+ <alert type=\"info\">\n<b>Experimental Feature:</b> Can be buggy, do not use in production!\n- </div>\n- </div>\n- </div>\n- </div>\n+ </alert>\n</template>\n<script>\n",
        "date": "27.09.2020 10:01:44",
        "repo": "nuxt-community/firebase-module",
        "type": "docs",
        "chatgpt_zeroshot": "Refactor experimental-alert component to use custom alert component"
    },
    {
        "msg": "docs(disclaimer): removed disclaimer",
        "diff": "diff --git a/docs/content/en/index.md b/docs/content/en/index.md @@ -38,7 +38,3 @@ The module additionally adds other perks such as a plugin that automated the set\n## How does it work?\nThe module adds a plugin to your Nuxt.js application that handles the initialization of each Firebase service (Authentication, Firestore, etc.). It then injects these services into the global context which makes them easily available throughout your application.\n-\n-## Disclaimer\n-\n-This module is meant for easy and quick set-up of Firebase in a Nuxt project. Due to the nature of this module, it is possibly not optimal for websites that need to be super performant and/or SEO friendly, since the module adds the Firebase services to the global scope. If you want your website to be more performant, you'd probably be better off by importing the services only in the files where you need them (i.e. by NOT using this module). That being said, the difference might be marginal depending on your project.\n",
        "date": "11.10.2020 21:47:54",
        "repo": "nuxt-community/firebase-module",
        "type": "docs",
        "chatgpt_zeroshot": "Remove disclaimer section from index.md"
    },
    {
        "msg": "docs(docsearch): added docsearch to docs",
        "diff": "diff --git a/docs/content/settings.json b/docs/content/settings.json \"dark\": \"/logo-dark.svg\"\n},\n\"github\": \"nuxt-community/firebase-module\",\n- \"twitter\": \"nuxt_js\"\n+ \"twitter\": \"nuxt_js\",\n+ \"algolia\": {\n+ \"apiKey\": \"26073a7590724b3efc377b3b7608f3e0\",\n+ \"indexName\": \"nuxtjs_firebase\",\n+ \"langAttribute\": \"lang\"\n+}\n}\n",
        "date": "15.10.2020 22:00:37",
        "repo": "nuxt-community/firebase-module",
        "type": "docs",
        "chatgpt_zeroshot": "Add Algolia configuration to settings.json"
    },
    {
        "msg": "docs(auth): added info to ssr: true auth, that user is not logged in on server-side",
        "diff": "diff --git a/docs/content/en/service-options/auth.md b/docs/content/en/service-options/auth.md @@ -118,6 +118,14 @@ The injected user can be used by context aware life cycle hooks on the server si\nA tutorial on how to set this up can be found [here](/tutorials/ssr).\n+<alert type=\"info\">\n+<p><b>Please Note:</b></p>\n+<p>This <u>does not authenticate the Firebase instance on the server</u>. While you will be able to know if a user is logged in or not and have access to its simplified properties, you <u>won't be able to do authenticated calls</u> on server-side.</p><br>\n+<p>This means that all calls on server-side (e.g. fetching data via Firestore in fetch-hooks), which are protected by security rules, will still fail with <i>insufficient privileges.</i></p>\n+<br>\n+<p>Reason for this is that the Firebase JS SDK is a client-side library that is not built for authenticating multiple users. See the <nuxt-link to=\"/service-options/auth#serverlogin\">serverLogin</nuxt-link> option for an <b>experimental</b> approach to solve this issue.</p>\n+</alert>\n+\n### ignorePaths\nThe service worker session automatically ignores external resources, static files and HMR calls.\n",
        "date": "15.10.2020 23:33:06",
        "repo": "nuxt-community/firebase-module",
        "type": "docs",
        "chatgpt_zeroshot": "Add note about Firebase authentication limitations on the server-side"
    },
    {
        "msg": "docs(auth-init): added namespace info to vuex actions/mutations",
        "diff": "diff --git a/docs/content/en/service-options/auth.md b/docs/content/en/service-options/auth.md @@ -31,6 +31,8 @@ This sets up an `onAuthStateChanged()` listener and hooks it up to the vuex stor\nJust add a mutation/action to your vuex store ([as seen below](#onauthstatechangedmutation)) that handles what to do with the authUser object (e.g. save it to the state or get user data from FireStore) and then define the name of the action/mutation in the `firebase.services.auth.initialize` configuration as above.\n+<alert type=\"info\">You can also use namespaces for your store actions/mutations like so: `onAuthStateChangedAction: 'namespaceName/actionName'`.</alert>\n+\nWhen onAuthStateChanged() gets triggered by Firebase, the defined mutation/action will be called with the `authUser` and `claims` attributes as [as seen below](#onauthstatechangedmutation)\nTo unsubscribe from the listener simply call the `$fireAuthUnsubscribe()` function which is provided as a [combined inject](https://nuxtjs.org/guide/plugins#combined-inject).\n",
        "date": "16.10.2020 00:00:22",
        "repo": "nuxt-community/firebase-module",
        "type": "docs",
        "chatgpt_zeroshot": "Add support for using namespaces in vuex store actions/mutations"
    },
    {
        "msg": "docs(polyfill+strapi): added Polyfill + Strapi FAQ's",
        "diff": "diff --git a/docs/content/en/community/faq.md b/docs/content/en/community/faq.md @@ -5,4 +5,46 @@ position: 99\ncategory: Community\n---\n-No FAQ's yet. Create an [issue](https://github.com/nuxt-community/firebase-module/issues) if you have a question and we might add it to the FAQ.\n\\ No newline at end of file\n+Create an [issue](https://github.com/nuxt-community/firebase-module/issues) if you have a question and we might add it to the FAQ.\n+\n+## How to add Firebase Polyfills?\n+\n+If you want to add Firebase polyfills, you need to ceate a plugin and import the required polyfills like so:\n+\n+1. Creating `/plugins/polyfills.js` containing:\n+ ```js\n+ // Import all polyfills\n+ import '@firebase/polyfill';\n+\n+ // Import specific polyfills:\n+ import '@firebase/polyfill/node_modules/core-js/features/object/values';\n+ ```\n+\n+2. Add to your nuxt.config.js:\n+\n+ ```js\n+ plugins: [\n+ { src: '~plugins/polyfills', mode: 'client' },\n+ ],\n+ ```\n+\n+> References:\n+> [Issue #292](https://github.com/nuxt-community/firebase-module/issues/292)\n+> [Stack Overflow Question](https://stackoverflow.com/questions/62308061/nuxt-firebase-ie-11-object-doesnt-support-property-or-method-values/64062207#64062207)\n+\n+\n+## How to use this module in SSR mode together with Strapi?\n+\n+For Strapi to work together with this module, you need to ignore the Strapi API routes by adding them to the [ignorePaths](https://firebase.nuxtjs.org/service-options/auth#ignorepaths) config like so:\n+\n+```js\n+auth: {\n+ ssr: {\n+ // ...\n+ ignorePaths: [ '/api/'] // or /^api\\//\n+ }\n+}\n+```\n+\n+> References:\n+> [Issue #292](https://github.com/nuxt-community/firebase-module/issues/292)\n\\ No newline at end of file\n",
        "date": "28.10.2020 23:54:15",
        "repo": "nuxt-community/firebase-module",
        "type": "docs",
        "chatgpt_zeroshot": "Add Firebase polyfill and SSR mode with Strapi integration to FAQ."
    },
    {
        "msg": "docs(migrate): added defaultConfig to migration notes",
        "diff": "diff --git a/docs/content/en/community/migrate.md b/docs/content/en/community/migrate.md @@ -72,3 +72,11 @@ services: {\nThe helper function `movePluginBeforeAuthHelper` has been removed.\nIf you need to run certain plugins AFTER Firebase has been initialized but BEFORE the `onAuthStateChanged()` listener is set up, you can now use the `subscribeManually: true` config and then manually subscribe the `onAuthStateChanged()` listener after your other plugins are initialized, as described [here](/service-options/auth#subscribemanually).\n+\n+### 6 - Fixed `defaultConfig` option in RemoteConfig\n+\n+Before v7.0.0, the [defaultConfig](/service-options/remote-config) option did not work if implemented as documented and needed to be set as a child of the `settings` object.\n+\n+This has been fixed and the `defaultConfig` now needs to be defined as documented as a child of the `remote-config` object.\n+\n+See [issue 281](https://github.com/nuxt-community/firebase-module/issues/281).\n\\ No newline at end of file\n",
        "date": "29.10.2020 00:10:35",
        "repo": "nuxt-community/firebase-module",
        "type": "docs",
        "chatgpt_zeroshot": "Fix issue with defaultConfig option in RemoteConfig"
    },
    {
        "msg": "docs: added v7.0.0 changelog & changed link to changelog in README",
        "diff": "diff --git a/CHANGELOG.md b/CHANGELOG.md All notable changes to this project will be documented in this file. See [standard-version](https://github.com/conventional-changelog/standard-version) for commit guidelines.\n+## [7.0.0](https://github.com/nuxt-community/firebase-module/compare/v6.1.1...v7.0.0) (2020-10-31)\n+\n+\n+### Features\n+\n+* **analytics.issupported:** added check whether browser supports Firebase Analytics before init ([52ec6ef](https://github.com/nuxt-community/firebase-module/commit/52ec6efa6c1cfbd0ddaac4a73676f948da4d807e))\n+* **auth:** added initialize.subscribeManually and removed \"helper\" function ([91ad279](https://github.com/nuxt-community/firebase-module/commit/91ad2792f142f7fcf22f0775242dc7330e485230))\n+* **firebase-v8:** updated code to work with Firebase v8+ ([4ae48b5](https://github.com/nuxt-community/firebase-module/commit/4ae48b51bc35f007c89bcc46febeded30f288893))\n+* **functions:** added emulatorHost option to Firebase Functions ([08db302](https://github.com/nuxt-community/firebase-module/commit/08db302013fdac1213e783f6cd860ca62cc15cbe))\n+* add support for lazy service loading ([4e96d28](https://github.com/nuxt-community/firebase-module/commit/4e96d28a43014c85a01a0c4c953f756bd2ec0812))\n+\n+\n+### Bug Fixes\n+\n+* **analytics:** Fixed service naming issue ([addd317](https://github.com/nuxt-community/firebase-module/commit/addd317c7abf4ea9d70bd17943411f11cdaefac4))\n+* **auth:** Fixed initialize ([c4b203d](https://github.com/nuxt-community/firebase-module/commit/c4b203d5a6d1aea521e70097a47c1b104b02c044))\n+* **auth-credential:** fixed auth-credential import (require) ([faeed48](https://github.com/nuxt-community/firebase-module/commit/faeed4803908d7a262ac73759b1608ad91a6ef95))\n+* **auth-serverlogin:** fixed serverLogin issue (ctx.res missing) ([edd1a75](https://github.com/nuxt-community/firebase-module/commit/edd1a755401fcd25886644554325dcaf6778e89d))\n+* **fireObj:** fireObj was not injected in non-lazy + non-legacy mode ([dc66991](https://github.com/nuxt-community/firebase-module/commit/dc6699171c1e35552f7a02f093adb4ac329b9f46))\n+* **initauth:** async import of initAuth within auth plugin ([36eb8f4](https://github.com/nuxt-community/firebase-module/commit/36eb8f490797f9cc7a03216f18806c1a93cd8700))\n+* **initAuth:** Fixed mmissing options in initAuth & small lazy mode fix ([8e54384](https://github.com/nuxt-community/firebase-module/commit/8e54384dd1109439a0c33f358b1c30a009a27002))\n+* **legacymodeinfo:** fixed error 'Cannot use 'in' operator to search for 'legacyMode' in undefined ' ([0684e64](https://github.com/nuxt-community/firebase-module/commit/0684e64bb708a2b4fdee23b2c3a6d8f73f117a68))\n+* **loggerinfo:** added module name to legyMode info log because it's not clear on multi-line log ([cb85c29](https://github.com/nuxt-community/firebase-module/commit/cb85c291dec1508068b34b5d363bde601cdd1318))\n+* **naming:** Improved readability by consistanly naming services constants ([0d62e76](https://github.com/nuxt-community/firebase-module/commit/0d62e7618df69bb63fca01b7f3a3a214ed32d280))\n+* **netlify:** updated netlify.toml ([26f5aa9](https://github.com/nuxt-community/firebase-module/commit/26f5aa9aaa0ad1ff4dc6903178547acc1904097c))\n+* **packageejson:** missing comma ([a6669fc](https://github.com/nuxt-community/firebase-module/commit/a6669fc872751077b3b089648e76276ac20f1512))\n+* **remoteconfig:** fixed 'defaultConfig' being child of 'settings' instead of main obj ([7e1020c](https://github.com/nuxt-community/firebase-module/commit/7e1020c3c024c2b938f8a339a38d700036f46605))\n+* **static:** fixed static=true also dynamically importing the modules ([cf61833](https://github.com/nuxt-community/firebase-module/commit/cf61833da715799cf88914d45b8eed62993d6933))\n+* **ts:** Added ready() to $fire and added missing 'storage' ([bb78d3a](https://github.com/nuxt-community/firebase-module/commit/bb78d3a6e3348430201a0c8cf5220b981e6603db))\n+* **ts:** Fixed $fire.database ([6bd9df9](https://github.com/nuxt-community/firebase-module/commit/6bd9df9560436d3db59afaa8a88391a779024520))\n+* make initAuth work again ([db8a467](https://github.com/nuxt-community/firebase-module/commit/db8a467db2e865c4ea0c570cce276bf635400368))\n+* review comments ([f5265ae](https://github.com/nuxt-community/firebase-module/commit/f5265aecf210978ce333d6bd7621676a4ad12719))\n+* use existing injection name ([a6971ac](https://github.com/nuxt-community/firebase-module/commit/a6971acc0d440b3553975e40a09d819d0d8c1077))\n+* use service mapping ([33489a1](https://github.com/nuxt-community/firebase-module/commit/33489a17a1f35d95680f79ac98d31a16c1412df5))\n+* use service mapping ([bd16287](https://github.com/nuxt-community/firebase-module/commit/bd1628735f333b448562b9eda5cc5a9d3e9d9e06))\n+\n### [6.1.1](https://github.com/nuxt-community/firebase-module/compare/v6.1.0...v6.1.1) (2020-07-25)\n",
        "date": "31.10.2020 18:41:47",
        "repo": "nuxt-community/firebase-module",
        "type": "docs",
        "chatgpt_zeroshot": "fix: Fixed various bugs and added new features for Firebase module version 7.0.0"
    },
    {
        "msg": "feat: more comprehensive gitignore",
        "diff": "diff --git a/.gitignore b/.gitignore *.swp\n*.swo\n-node_modules/\n-build/\n-.DS_Store/\n-/coverage\n-coverage.json\n+\n+# Logs\n+logs\n+*.log\n+\n+# Runtime data\n+pids\n+*.pid\n+*.seed\nallFiredEvents\nscTopics\n+\n+# Coverage directory used by tools like istanbul\n+coverage\n+coverage.json\n+\n+# node-waf configuration\n+.lock-wscript\n+\n+# Dependency directory\n+node_modules\n+\n+# Debug log from npm\n+npm-debug.log\n+\n+# local env variables\n+.env\n+\n+# truffle build directory\n+build/\n+\n+# lol macs\n+.DS_Store/\n",
        "date": "24.11.2017 13:03:52",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "feat",
        "chatgpt_zeroshot": "Update .gitignore file to ignore logs, runtime data, coverage directory, node-waf configuration, dependency directory, debug log, local env variables, and truffle build directory."
    },
    {
        "msg": "feat: implement issue and pr templates",
        "diff": "diff --git a/CONTRIBUTING.md b/CONTRIBUTING.md @@ -80,6 +80,8 @@ git checkout -b fix/some-bug\ngit checkout -b remove/some-file\n```\n+If your branch is planned to fix an open issue, postfix your branch name with the issue number like `fix/some-bug-#123`.\n+\nWe expect pull requests to be rebased to the master branch before merging:\n```sh\ngit remote add zep git@github.com:OpenZeppelin/zeppelin-solidity.git\n",
        "date": "04.01.2018 13:42:22",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "feat",
        "chatgpt_zeroshot": "Add instructions for naming branches related to open issues"
    },
    {
        "msg": "feat(parent-name): Update detection of parentName",
        "diff": "diff --git a/app/mixins/parent-name.js b/app/mixins/parent-name.js @@ -9,6 +9,6 @@ export default Mixin.create({\nparentName: computed('routeName', function() {\nconst routeName = this.get('routeName');\nconst routes = routeName.split('.');\n- return routes.slice(0, 2).join('.');\n+ return routes.slice(0, 3).join('.');\n})\n});\n",
        "date": "31.05.2017 22:13:48",
        "repo": "ember-learn/ember-api-docs",
        "type": "feat",
        "chatgpt_zeroshot": "Update parentName mixin to include three levels of route hierarchy"
    },
    {
        "msg": "feat(config): Change to temporary credentials",
        "diff": "diff --git a/config/environment.js b/config/environment.js /* eslint-env node */\nmodule.exports = function(environment) {\n- let ALGOLIA_APP_ID = process.env.ALGOLIA_APP_ID || 'BH4D9OD16A';\n- let ALGOLIA_API_KEY = process.env.ALGOLIA_API_KEY || '92d3556bc9a494d48e7054fbb4c4ce6f';\n+ let ALGOLIA_APP_ID = process.env.ALGOLIA_APP_ID || 'N4SO04CV0R';\n+ let ALGOLIA_API_KEY = process.env.ALGOLIA_API_KEY || '0b28a7a3adf986fa5d402567d9d8b850';\nlet ENV = {\nmodulePrefix: 'ember-api-docs',\n",
        "date": "16.08.2017 22:17:51",
        "repo": "ember-learn/ember-api-docs",
        "type": "feat",
        "chatgpt_zeroshot": "Update Algolia credentials in environment.js"
    },
    {
        "msg": "feat(environment): Updates config for algolia",
        "diff": "diff --git a/config/environment.js b/config/environment.js /* eslint-env node */\nmodule.exports = function(environment) {\n- let ALGOLIA_APP_ID = process.env.ALGOLIA_APP_ID || 'N4SO04CV0R';\n- let ALGOLIA_API_KEY = process.env.ALGOLIA_API_KEY || '0b28a7a3adf986fa5d402567d9d8b850';\n+ let ALGOLIA_APP_ID = process.env.ALGOLIA_APP_ID || 'Y1OMR4C7MF';\n+ let ALGOLIA_API_KEY = process.env.ALGOLIA_API_KEY || 'c35425b69b31be1bb4786f0a72146306';\nlet ENV = {\nmodulePrefix: 'ember-api-docs',\n",
        "date": "14.12.2017 17:44:54",
        "repo": "ember-learn/ember-api-docs",
        "type": "feat",
        "chatgpt_zeroshot": "Update Algolia credentials in environment.js"
    },
    {
        "msg": "feat: support ctrl+l to clear\nAnd refactor the stdin handling",
        "diff": "diff --git a/lib/nodemon.js b/lib/nodemon.js @@ -96,45 +96,54 @@ function nodemon(settings) {\n});\n// echo out notices about running state\n- if (config.options.stdin && config.options.restartable) {\n- // allow nodemon to restart when the use types 'rs\\n'\n- process.stdin.resume();\n- process.stdin.setEncoding('utf8');\n- process.stdin.on('data', function (data) {\n- data = (data + '').trim().toLowerCase();\n-\n- // if the keys entered match the restartable value, then restart!\n- if (data === config.options.restartable) {\n- bus.emit('restart');\n- }\n- });\n- } else if (config.options.stdin) {\n- // if 'restartable' is disabled (via a nodemon.json)\n- // then it's possible we're being used with a REPL\n+ if (config.options.stdin) {\n// so let's make sure we don't eat the key presses\n// but also, since we're wrapping, watch out for\n- // special keys, like ctrl+c x 2 or '.exit' or ctrl+d\n+ // special keys, like ctrl+c x 2 or '.exit' or ctrl+d or ctrl+l\nvar ctrlC = false;\nvar buffer = '';\n+ const rs = config.options.restartable;\n+ process.stdin.setEncoding('utf8');\nprocess.stdin.on('data', function (data) {\n- buffer += data;\ndata = data.toString();\n- var chr = data.charCodeAt(0);\n+ buffer += data;\n+ const chr = data.charCodeAt(0);\n+\n+ // if restartable, echo back\n+ if (rs) {\n+ if (chr === 13) {\n+ process.stdout.write('\\n');\n+ }\n+ // this prevents cursor keys from working.\n+ process.stdout.write(String.fromCharCode(chr));\n+ }\n+\nif (chr === 3) {\n- if (ctrlC) {\n- process.exit();\n+ // if restartable, assume ctrl+c will break immediately\n+ if (ctrlC || rs) {\n+ process.exit(rs ? 1 : 0);\n}\nctrlC = true;\n- } else if (buffer === '.exit' || chr === 4) {\n+ return;\n+ } else if (buffer === '.exit' || chr === 4) { // ctrl+d\nprocess.exit();\n- } else if (ctrlC || chr === 10) {\n- ctrlC = false;\n+ } else if (chr === 13 || chr === 10) { // enter / carriage return\n+ const input = buffer.toString().trim().toLowerCase();\n+ if (input === rs) {\n+ bus.emit('restart');\n+ }\n+ buffer = '';\n+ } else if (chr === 12) { // ctrl+l\n+ console.clear();\nbuffer = '';\n}\n+ ctrlC = false;\n});\n+ if (process.stdin.setRawMode) {\nprocess.stdin.setRawMode(true);\n}\n+ }\nif (config.options.restartable) {\nutils.log.info('to restart at any time, enter `' +\n",
        "date": "10.07.2018 18:41:45",
        "repo": "remy/nodemon",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor stdin handling and add support for restartable option"
    },
    {
        "msg": "feat: add message event\nadd event to listen to messages coming from the child's ipc events, partially implementing",
        "diff": "diff --git a/lib/monitor/run.js b/lib/monitor/run.js @@ -133,6 +133,12 @@ function run(options) {\nbus.stdout = child.stdout;\nbus.stderr = child.stderr;\n}\n+\n+ if (shouldFork) {\n+ child.on('message', function (message, sendHandle) {\n+ bus.emit('message', message, sendHandle);\n+ });\n+ }\n}\nbus.emit('start');\n",
        "date": "23.04.2019 12:49:54",
        "repo": "remy/nodemon",
        "type": "feat",
        "chatgpt_zeroshot": "Add event listener for child process messages when forking."
    },
    {
        "msg": "feat: Clean output prior to production build",
        "diff": "diff --git a/src/build.js b/src/build.js +import { promises as fs } from 'fs';\nimport * as kl from 'kolorist';\nimport { bundleProd } from './bundler.js';\nimport { bundleStats } from './lib/output-utils.js';\n@@ -11,6 +12,8 @@ import { setCwd } from './plugins/npm-plugin/registry.js';\nexport default async function build(options = {}) {\noptions.out = options.out || 'dist';\n+ await fs.rmdir(options.out, { recursive: true });\n+\n// @todo remove this hack once registry.js is instantiable\nsetCwd(options.cwd);\n",
        "date": "03.12.2020 19:06:51",
        "repo": "preactjs/wmr",
        "type": "feat",
        "chatgpt_zeroshot": "Add code to remove existing output directory before building."
    },
    {
        "msg": "feat: Adding support for yarn in create-wmr",
        "diff": "diff --git a/packages/create-wmr/src/index.js b/packages/create-wmr/src/index.js @@ -7,10 +7,11 @@ import ora from 'ora';\nimport kleur from 'kleur';\nimport pkgInstall from 'pkg-install';\nconst { getPackageManager, install } = pkgInstall;\n-const { dim, bold, cyan } = kleur;\n+const { dim, bold, cyan, red } = kleur;\nsade('create-wmr [dir]', true)\n.option('--eslint', 'Set up the Preact ESLint configuration (takes a lot longer)', false)\n+ .option('--yarn', 'Set up WMR using Yarn instead of NPM as the package manager', false)\n.describe('Initialize a WMR project')\n.example('npm init wmr ./some-directory')\n.action(async (dir, opts) => {\n@@ -32,14 +33,18 @@ sade('create-wmr [dir]', true)\ncolor: 'yellow',\ntext: 'installing WMR...'\n}).start();\n+ const packageManager = opts.yarn ? 'yarn' : 'npm';\n// @ts-ignore-next\n- await getPackageManager({ prefer: 'npm', cwd, dev: true, verbose: false });\n- await install(['wmr', 'preact-iso'], { cwd });\n+ await getPackageManager({ prefer: packageManager }).catch(() => {\n+ process.stderr.write(`\\n${red(`${packageManager} cannot be found`)}\\n`);\n+ process.exit(1);\n+ });\n+ await install(['wmr', 'preact-iso'], { prefer: packageManager, cwd });\nspinner.succeed('installed WMR.');\nif (opts.eslint) {\nspinner.start('installing eslint configuration...');\n- await install(['eslint', 'eslint-config-preact'], { cwd });\n+ await install(['eslint', 'eslint-config-preact'], { prefer: packageManager, cwd });\nspinner.succeed('installed eslint.');\n}\n@@ -55,18 +60,20 @@ sade('create-wmr [dir]', true)\n}\nconst result = `\nStart the development server:\n- ${dim('$')} ${cyan('npm start')}\n+ ${dim('$')} ${cyan(`${packageManager} start`)}\nCreate a production build:\n- ${dim('$')} ${cyan('npm run build')}\n+ ${dim('$')} ${cyan(`${packageManager === 'npm' ? 'npm run' : 'yarn'} build`)}\nServe the app in production mode:\n- ${dim('$ PORT=8080')} ${cyan('npm run serve')}\n+ ${dim('$ PORT=8080')} ${cyan(`${packageManager === 'npm' ? 'npm run' : 'yarn'} serve`)}\n`;\nconsole.log('\\n' + result.trim().replace(/^\\t\\t\\t/gm, '') + '\\n');\nif (!opts.eslint) {\nconsole.log(\n- `\\n${bold('To enable ESLint:')} (optional)\\n${dim('$')} ${cyan('npm i eslint eslint-config-preact')}\\n`\n+ `\\n${bold('To enable ESLint:')} (optional)\\n${dim('$')} ${cyan(\n+ `${packageManager === 'npm' ? 'npm i' : 'yarn add'} eslint eslint-config-preact`\n+ )}\\n`\n);\n}\n})\n",
        "date": "05.12.2020 17:54:43",
        "repo": "preactjs/wmr",
        "type": "feat",
        "chatgpt_zeroshot": "Add support for using Yarn as the package manager in create-wmr command"
    },
    {
        "msg": "feat: add `process.browser` for compatibility",
        "diff": "diff --git a/src/plugins/process-global-plugin.js b/src/plugins/process-global-plugin.js * @returns {import('rollup').Plugin}\n*/\nexport default function processGlobalPlugin({ NODE_ENV = 'development', env = {} } = {}) {\n- const processObj = `{env:${JSON.stringify({ ...env, NODE_ENV })}}`;\n+ const processObj = JSON.stringify({ browser: true, env: { ...env, NODE_ENV } });\nreturn {\nname: 'process-global',\n",
        "date": "15.01.2021 20:26:37",
        "repo": "preactjs/wmr",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor processGlobalPlugin to include browser flag in process object"
    },
    {
        "msg": "feat: Allow top-level await in dev",
        "diff": "diff --git a/packages/wmr/src/lib/acorn-traverse.js b/packages/wmr/src/lib/acorn-traverse.js @@ -1182,6 +1182,7 @@ function createContext({ code, out, parse, generatorOpts, filename }) {\n}\nreturn Array.prototype.push.call(this, comment);\n};\n+ opts.allowAwaitOutsideFunction = true;\nisInitialParse = false;\n}\nreturn parse(code, opts);\n",
        "date": "23.04.2022 04:49:41",
        "repo": "preactjs/wmr",
        "type": "feat",
        "chatgpt_zeroshot": "Enable await outside of functions in acorn parser"
    },
    {
        "msg": "feat(Time Series): - removed debug code",
        "diff": "diff --git a/src/features/dataset-controls/DatasetControls.js b/src/features/dataset-controls/DatasetControls.js @@ -184,7 +184,6 @@ class DatasetControls extends React.Component {\n}\nonRefresh = () =>{\n- console.log(\"On Refresh for \" + this.props.uuid)\nconst url = this.state.selected.url;\nconst dataset = this.state.selected;\nthis.fetchAndSetDataset(url, dataset, this.state.username, this.state.password, this.state.token);\n",
        "date": "17.09.2018 10:20:52",
        "repo": "iqtlabs/crviz",
        "type": "feat",
        "chatgpt_zeroshot": "Remove console log statement in onRefresh method"
    },
    {
        "msg": "feat(add notes to store!): add notes with id to store",
        "diff": "diff --git a/src/features/tooltip/Tooltip.js b/src/features/tooltip/Tooltip.js @@ -14,11 +14,12 @@ class TooltipControls extends React.Component {\nconstructor(props){\nsuper(props)\nthis.state = {\n- title: \"Title\",\nlabel:\"Labels\",\nheight:\"200px\",\nwidth:\"300px\",\nposition: [200,200],\n+ note: {\n+ id:'',\nnote:{\ntitle: '',\nlabels: [],\n@@ -26,21 +27,32 @@ class TooltipControls extends React.Component {\n}\n}\n}\n+ }\nhandleChangeTitle = (event) => {\nvar note = {...this.state.note}\n- note.title = event.target.value\n+ note.note.title = event.target.value\nthis.setState({note});\n}\nhandleChangeContent = (event) => {\nvar note = {...this.state.note}\n- note.content = event.target.value\n+ note.note.content = event.target.value\nthis.setState({note});\n}\n- saveNote = () => {\n- console.log(this.state.note)\n+ saveNote = async () => {\n+ if(typeof (this.props.data.CRVIZ._SEARCH_KEY) !== 'undefined'){\n+ var note = {...this.state.note}\n+ note.id = await this.props.data.CRVIZ._SEARCH_KEY\n+ this.setState({note});\n+\n+ this.props.addNote(this.state.note);\n+ console.log(this.props.notes)\n+ }\n+ else{\n+ console.log('else')\n+ }\n}\ncomponentDidUpdate(prevProps) {\n@@ -105,10 +117,10 @@ class TooltipControls extends React.Component {\n}\n<div>\n<div>\n- <b><h1><input style={inputStyle} type=\"text\" value={this.state.note.title} onChange={this.handleChangeTitle} placeholder=\"Title\"/></h1></b>\n+ <b><h1><input style={inputStyle} type=\"text\" value={this.state.note.note.title} onChange={this.handleChangeTitle} placeholder=\"Title\"/></h1></b>\n<h6>{this.state.label}</h6>\n</div>\n- <p><input style={inputStyle} type=\"text\" value={this.state.note.content} onChange={this.handleChangeContent} placeholder=\"Take a note...\"/></p>\n+ <p><input style={inputStyle} type=\"text\" value={this.state.note.note.content} onChange={this.handleChangeContent} placeholder=\"Take a note...\"/></p>\n<div >\n<FontAwesomeIcon style={{margin:\"10px\"}} icon={faTags} />\n<FontAwesomeIcon style={{color:\"#47cf38\", margin:\"10px\"}} icon={faSave} onClick={this.saveNote}/>\n",
        "date": "01.07.2019 15:30:43",
        "repo": "iqtlabs/crviz",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor TooltipControls component to save note with id and update state accordingly"
    },
    {
        "msg": "feat(tooltip): extract cloned vnode data",
        "diff": "diff --git a/packages/kiwi-core/src/Tooltip/index.js b/packages/kiwi-core/src/Tooltip/index.js @@ -132,6 +132,7 @@ const Tooltip = {\nconst cloned = cloneVNode(children[0], h)\nif (cloned.componentOptions) {\nclone = h(cloned.componentOptions.Ctor, {\n+ ...cloned.data,\nprops: cloned.componentOptions.propsData,\nattrs: {\nid: `__wrapper-${this.tooltipId}`\n",
        "date": "22.01.2020 22:14:30",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "feat",
        "chatgpt_zeroshot": "Add spread operator to clone data in Tooltip component"
    },
    {
        "msg": "feat(tooltip): add arrows for tooltip",
        "diff": "diff --git a/src/App.vue b/src/App.vue </Anchor>\n<div class=\"wrapper\">\n- <Tooltip placement=\"top\" label=\"Abort\">\n+ <Tooltip hasArrow placement=\"top\" label=\"Abort\">\n<Button m=\"3\" variant=\"ghost\" variant-color=\"gray\">Cancel</Button>\n</Tooltip>\n",
        "date": "22.01.2020 22:59:51",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "feat",
        "chatgpt_zeroshot": "Add arrow to tooltip in App.vue"
    },
    {
        "msg": "feat(menu): option event handling",
        "diff": "diff --git a/packages/kiwi-core/src/Menu/MenuOption.js b/packages/kiwi-core/src/Menu/MenuOption.js @@ -62,7 +62,7 @@ const MenuItemOption = {\nif (this.isDisabled) return\nif (['Enter', ' '].includes(event.key)) {\nevent.preventDefault()\n- this.handleSelect()\n+ this.handleSelect(event)\n}\nthis.$emit('keydown', event)\n@@ -239,6 +239,12 @@ const MenuOptionGroup = {\nnativeOn: {\nclick: (event) => {\nthis.handleChange(cloned.componentOptions.propsData['value'])\n+ },\n+ keydown: (event) => {\n+ if (['Enter', ' '].includes(event.key)) {\n+ event.preventDefault()\n+ this.handleChange(cloned.componentOptions.propsData['value'])\n+ }\n}\n}\n}, cloned.componentOptions.children)\n@@ -257,6 +263,12 @@ const MenuOptionGroup = {\nnativeOn: {\nclick: (event) => {\nthis.handleChange(cloned.componentOptions.propsData['value'])\n+ },\n+ keydown: (event) => {\n+ if (['Enter', ' '].includes(event.key)) {\n+ event.preventDefault()\n+ this.handleChange(cloned.componentOptions.propsData['value'])\n+ }\n}\n}\n}, cloned.componentOptions.children)\n",
        "date": "30.01.2020 20:14:04",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "feat",
        "chatgpt_zeroshot": "Fix handling of keydown event in MenuOptionGroup"
    },
    {
        "msg": "feat(popover): events emission on  by Popover component",
        "diff": "diff --git a/packages/kiwi-core/src/Popover/index.js b/packages/kiwi-core/src/Popover/index.js @@ -52,12 +52,15 @@ const Popover = {\nmethods: {\nclosePopover () {\nthis._isOpen = false\n+ this.$emit('close')\n},\nopenPopover () {\nthis._isOpen = true\n+ this.$emit('open')\n},\ntoggleOpen () {\nthis._isOpen = !this._isOpen\n+ this.$emit('toggle', this._isOpen)\n},\n/**\n* Sets the trigger node value to reactive context\n",
        "date": "09.02.2020 16:11:49",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "feat",
        "chatgpt_zeroshot": "Add event emitters for close, open, and toggle actions in Popover component"
    },
    {
        "msg": "feat(slider): added slider stories",
        "diff": "diff --git a/stories/50-Slider.stories.js b/stories/50-Slider.stories.js import { storiesOf } from '@storybook/vue'\n-import { Box, Slider, SliderTrack, SliderFilledTrack, SliderThumb } from '../packages/kiwi-core/src'\n+import { Box, Slider, SliderTrack, SliderFilledTrack, SliderThumb, Icon } from '../packages/kiwi-core/src'\nstoriesOf('UI | Slider', module)\n.add('Basic Usage', () => ({\n@@ -14,3 +14,17 @@ storiesOf('UI | Slider', module)\n</Box>\n`\n}))\n+ .add('Customized Slider', () => ({\n+ components: { Box, Icon, Slider, SliderTrack, SliderFilledTrack, SliderThumb },\n+ template: `\n+ <Box w=\"300px\">\n+ <Slider :defaultValue=\"30\">\n+ <SliderTrack bg=\"red.100\" />\n+ <SliderFilledTrack bg=\"tomato\" />\n+ <SliderThumb p=\"3\" d=\"flex\" alignItems=\"center\" justifyContent=\"center\">\n+ <Icon name=\"coffee\" color=\"tomato\" />\n+ </SliderThumb>\n+ </Slider>\n+ </Box>\n+ `\n+ }))\n",
        "date": "01.03.2020 17:26:39",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "feat",
        "chatgpt_zeroshot": "Add Icon component to Customized Slider in Slider stories."
    },
    {
        "msg": "feat(storybook): change load stories path",
        "diff": "diff --git a/.storybook/config.js b/.storybook/config.js @@ -73,5 +73,10 @@ addDecorator(() => ({\ncomponents: { ThemeProvider, ColorModeProvider, CSSReset, Canvas }\n}));\n-// automatically import all files ending in *.stories.js\n-configure(require.context('../stories', true, /\\.stories\\.js$/), module);\n+\n+function loadStories() {\n+ const req = require.context('../packages/kiwi-core/src', true, /\\.stories\\.(js|mdx)$/);\n+ req.keys().forEach(filename => req(filename));\n+}\n+\n+configure(loadStories, module);\n",
        "date": "09.03.2020 22:21:59",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor storybook configuration to load stories from kiwi-core package."
    },
    {
        "msg": "feat(storybook): sort stories a to z",
        "diff": "diff --git a/.storybook/config.js b/.storybook/config.js @@ -55,7 +55,9 @@ Vue.use(Kiwi, {\naddParameters({\noptions: {\n- theme: storyBookTheme\n+ theme: storyBookTheme,\n+ storySort: (a, b) =>\n+ a[1].kind === b[1].kind ? 0 : a[1].id.localeCompare(b[1].id, undefined, { numeric: true }),\n}\n})\n",
        "date": "09.03.2020 22:24:58",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "feat",
        "chatgpt_zeroshot": "Add storySort option to Storybook config"
    },
    {
        "msg": "feat(test): add custom html param to asFragment",
        "diff": "diff --git a/tests/test-utils/test-utils.js b/tests/test-utils/test-utils.js @@ -17,15 +17,15 @@ const customRender = (component, ...rest) => {\nconst utils = render({ ...defaults, ...component }, ...rest)\nreturn {\n...utils,\n- asFragment: () => {\n+ asFragment: (innerHTML = utils.container.innerHTML) => {\nif (typeof document.createRange === 'function') {\nreturn document\n.createRange()\n- .createContextualFragment(utils.container.innerHTML)\n+ .createContextualFragment(innerHTML)\n}\nconst template = document.createElement('template')\n- template.innerHTML = utils.container.innerHTML\n+ template.innerHTML = innerHTML\nreturn template.content\n}\n}\n",
        "date": "16.03.2020 00:18:51",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor asFragment method in test-utils.js to accept innerHTML parameter"
    },
    {
        "msg": "feat(drawer): add closeOnEsc support for drawer",
        "diff": "diff --git a/packages/chakra-ui-core/src/Drawer/index.js b/packages/chakra-ui-core/src/Drawer/index.js @@ -13,6 +13,10 @@ const Drawer = {\ntype: Function,\ndefault: () => null\n},\n+ closeOnEsc: {\n+ type: Boolean,\n+ default: true\n+ },\nisFullHeight: {\ntype: Boolean,\ndefault: true\n@@ -55,6 +59,7 @@ const Drawer = {\nprops: {\nisOpen: this.isOpen,\nonClose: this.onClose,\n+ closeOnEsc: this.closeOnEsc,\ninitialFocusRef: this.initialFocusRef,\nfinalFocusRef: this.finalFocusRef,\nformatIds: (id) => ({\n",
        "date": "17.03.2020 22:31:40",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "feat",
        "chatgpt_zeroshot": "Add closeOnEsc prop to Drawer component"
    },
    {
        "msg": "feat(drawer): add stories for Drawer component",
        "diff": "diff --git a/packages/chakra-ui-core/src/Drawer/Drawer.stories.js b/packages/chakra-ui-core/src/Drawer/Drawer.stories.js +import { storiesOf } from '@storybook/vue'\n+import { Fragment, Input, Button, Drawer, DrawerBody, DrawerFooter, DrawerHeader, DrawerOverlay, DrawerContent, DrawerCloseButton } from '..'\n+\n+storiesOf('UI | Drawer', module)\n+ .add('Drawer', () => ({\n+ components: { Fragment, Input, Button, Drawer, DrawerBody, DrawerFooter, DrawerHeader, DrawerOverlay, DrawerContent, DrawerCloseButton },\n+ data: () => ({ isOpen: false }),\n+ methods: {\n+ close () {\n+ this.isOpen = false\n+ }\n+ },\n+ template: `\n+ <Fragment>\n+ <Button ref=\"btnRef\" @click=\"isOpen =true\">Open Drawer</Button>\n+\n+ <Drawer :isOpen=\"isOpen\" placement=\"right\" :on-close=\"close\" :initialFocusRef=\"()=>$refs.inputInsideModal\">\n+ <DrawerOverlay />\n+ <DrawerContent>\n+ <DrawerCloseButton />\n+ <DrawerHeader>Create your account</DrawerHeader>\n+\n+ <DrawerBody>\n+ <Input ref=\"inputInsideModal\" placeholder=\"Type here...\" />\n+ </DrawerBody>\n+\n+ <DrawerFooter>\n+ <Button variant=\"outline\" mr=\"3\" @click=\"isOpen = false\">Cancel</Button>\n+ <Button color=\"blue\">Save</Button>\n+ </DrawerFooter>\n+ </DrawerContent>\n+ </Drawer>\n+ </Fragment>\n+ `\n+ }))\n",
        "date": "17.03.2020 22:34:36",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "feat",
        "chatgpt_zeroshot": "Add Vue support for Drawer component in Storybook"
    },
    {
        "msg": "feat(test-utils): add async wait function to test utils",
        "diff": "diff --git a/tests/test-utils/test-utils.js b/tests/test-utils/test-utils.js @@ -31,6 +31,10 @@ const customRender = (component, ...rest) => {\n}\n}\n+export function waitMs (ms = 0) {\n+ return new Promise(resolve => setTimeout(resolve, ms))\n+}\n+\nexport { default as userEvent } from '@testing-library/user-event'\nexport { fireEvent } from '@testing-library/vue'\nexport {\n",
        "date": "17.03.2020 23:47:55",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "feat",
        "chatgpt_zeroshot": "Add waitMs function to test-utils"
    },
    {
        "msg": "feat(alertdialog): added accessibility.md",
        "diff": "diff --git a/packages/chakra-ui-core/src/CAlertDialog/CAlertDialog.js b/packages/chakra-ui-core/src/CAlertDialog/CAlertDialog.js +/**\n+ * Hey! Welcome to @chakra-ui/vue AlertDialog\n+ *\n+ * AlertDialog component is used interrupt the user with\n+ * a mandatory confirmation or action.\n+ *\n+ * An alert dialog is a modal dialog that interrupts the user's\n+ * workflow to communicate an important message and acquire a response.\n+ * Examples include action confirmation prompts and error message confirmations.\n+ * The `alertdialog` role enables assistive technologies and browsers to\n+ * distinguish alert dialogs from other dialogs so they have the option\n+ * of giving alert dialogs special treatment, such as playing a system alert sound.\n+ *\n+ * @see Docs https://vue.chakra-ui.com/alertdialog\n+ * @see Source link to source\n+ * @see A11y https://github.com/chakra-ui/chakra-ui-vue/blob/master/packages/chakra-ui-core/src/CAlertDialog/accessibility.md\n+ * @see WAI-ARIA https://www.w3.org/TR/wai-aria-practices-1.2/#alertdialog\n+ */\n+\n+\n+\nimport baseProps from '../config/props'\nimport { forwardProps, HTMLElement } from '../utils'\n",
        "date": "03.04.2020 01:31:24",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "feat",
        "chatgpt_zeroshot": "Add documentation and import statements for AlertDialog component"
    },
    {
        "msg": "feat(avatar): docs",
        "diff": "diff --git a/packages/chakra-ui-core/src/CAvatar/CAvatar.js b/packages/chakra-ui-core/src/CAvatar/CAvatar.js @@ -54,9 +54,6 @@ export const CAvatarBadge = {\nborderColor: borderColorStyle[this.colorMode],\nrounded: 'full',\n...forwardProps(this.$props)\n- },\n- attrs: {\n- 'data-chakra-component': 'CAvatarBadge'\n}\n})\n}\n@@ -83,8 +80,7 @@ const CAvatarName = {\n...forwardProps(this.$props)\n},\nattrs: {\n- 'aria-label': this.name,\n- 'data-chakra-component': 'CAvatarName'\n+ 'aria-label': this.name\n}\n}, [this.name && getInitials(this.name)])\n}\n@@ -107,9 +103,6 @@ const CDefaultAvatar = {\nlineHeight: '1rem',\n...forwardProps(this.$props)\n},\n- attrs: {\n- 'data-chakra-component': 'CDefaultAvatar'\n- },\ndomProps: {\ninnerHTML: `\n<svg fill=\"#fff\" viewBox=\"0 0 128 128\" role=\"img\">\n@@ -211,10 +204,10 @@ export const CAvatar = {\nw: '100%',\nh: '100%',\nrounded: 'full',\n- objectFit: 'cover'\n+ objectFit: 'cover',\n+ alt: this.name\n},\nattrs: {\n- alt: this.name,\nsrc: this.src\n}\n})\n@@ -225,16 +218,11 @@ export const CAvatar = {\nreturn h(CAvatarName, {\nprops: {\nname: this.name,\n- w: _size,\n- h: _size\n+ size: _size\n}\n})\n} else {\nreturn h(CDefaultAvatar, {\n- props: {\n- w: '100%',\n- h: '100%'\n- },\nattrs: {\n'aria-label': this.name\n}\n@@ -243,20 +231,12 @@ export const CAvatar = {\n}\n}\n- const { size, ...avatarStyles } = avatarStyleProps\n-\nreturn h(CBox, {\nprops: {\nfontSize: fontSize,\nlineHeight: _size,\n- verticalAlign: 'top',\n- w: size,\n- h: size,\n- ...avatarStyles,\n+ ...avatarStyleProps,\n...forwardProps(this.$props)\n- },\n- attrs: {\n- 'data-chakra-component': 'CAvatar'\n}\n}, [\nrenderChildren(),\n",
        "date": "05.04.2020 17:41:01",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor CAvatar component props and attributes"
    },
    {
        "msg": "feat(box): add jsdocs for box",
        "diff": "diff --git a/packages/chakra-ui-core/src/CBox/CBox.js b/packages/chakra-ui-core/src/CBox/CBox.js +/**\n+ * Hey! Welcome to @chakra-ui/vue Box\n+ *\n+ * Box is the most abstract component on top of which all\n+ * other @chakra-ui/vue components are built. By default, it renders a `div` element\n+ *\n+ * @see Docs https://vue.chakra-ui.com/box\n+ * @see Source https://github.com/chakra-ui/chakra-ui-vue/blob/master/packages/chakra-ui-core/src/CBox/CBox.js\n+ */\nimport { css } from 'emotion'\nimport { background, border, color, borderRadius, flexbox, grid, layout, position, shadow, space, typography, compose } from 'styled-system'\n@@ -62,6 +71,13 @@ export const systemProps = compose(\nclamp\n)\n+/**\n+ * CBox component\n+ *\n+ * Abstract component on top of which all other Chakra components are built.\n+ *\n+ * @see Docs https://vue.chakra-ui.com/box\n+ */\nconst CBox = {\nname: 'CBox',\ninject: ['$chakraTheme'],\n",
        "date": "08.04.2020 00:21:08",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor CBox component and add documentation comments"
    },
    {
        "msg": "feat(breadcrumb): add jsdocs",
        "diff": "diff --git a/packages/chakra-ui-core/src/CBreadcrumb/CBreadcrumb.js b/packages/chakra-ui-core/src/CBreadcrumb/CBreadcrumb.js +/**\n+ * Hey! Welcome to @chakra-ui/vue Breadcrumb\n+ *\n+ * Breadcrumbs, or a breadcrumb navigation, can help to enhance\n+ * how users navigate to previous page levels of a website,\n+ * especially if that website has many pages or products.\n+ *\n+ * A breadcrumb trail consists of a list of links to the parent pages\n+ * of the current page in hierarchical order. It helps users find their\n+ * place within a website or web application. Breadcrumbs are often\n+ * placed horizontally before a page's main content.\n+ *\n+ * @see Docs https://vue.chakra-ui.com/breadcrumb\n+ * @see Source https://github.com/chakra-ui/chakra-ui-vue/blob/master/packages/chakra-ui-core/src/CBreadcrumb/CBreadcrumb.js\n+ */\n+\n+\nimport { baseProps } from '../config/props'\nimport { forwardProps, cloneVNodeElement, cleanChildren } from '../utils'\nimport CBox from '../CBox'\nimport CLink from '../CLink'\n+/**\n+* CBreadcrumbSeparator component\n+*\n+* The visual separator between each breadcrumb link\n+*\n+* @see Docs https://vue.chakra-ui.com/breadcrumb\n+*/\nconst CBreadcrumbSeparator = {\nname: 'CBreadcrumbSeparator',\nprops: {\n@@ -25,6 +49,13 @@ const CBreadcrumbSeparator = {\n}\n}\n+/**\n+* Span component\n+*\n+* Wrapper for text breadcrumbs\n+*\n+* @see Docs https://vue.chakra-ui.com/breadcrumb\n+*/\nconst Span = {\nname: 'Span',\nprops: {\n@@ -40,6 +71,13 @@ const Span = {\n}\n}\n+/**\n+* CBreadcrumbLink component\n+*\n+* The breadcrumb link\n+*\n+* @see Docs https://vue.chakra-ui.com/breadcrumb\n+*/\nconst CBreadcrumbLink = {\nname: 'CBreadcrumbLink',\nprops: {\n@@ -58,6 +96,13 @@ const CBreadcrumbLink = {\n}\n}\n+/**\n+* CBreadcrumbItem component\n+*\n+* Individual breadcrumb element containing a link and a divider.\n+*\n+* @see Docs https://vue.chakra-ui.com/breadcrumb\n+*/\nconst CBreadcrumbItem = {\nname: 'BreadcrumbItem',\nprops: {\n@@ -109,6 +154,13 @@ const CBreadcrumbItem = {\n}\n}\n+/**\n+* CBreadcrumb component\n+*\n+* The wrapper container for all breadcrumbs\n+*\n+* @see Docs https://vue.chakra-ui.com/breadcrumb\n+*/\nconst CBreadcrumb = {\nname: 'Breadcrumb',\nprops: {\n",
        "date": "08.04.2020 00:28:27",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "feat",
        "chatgpt_zeroshot": "Add Breadcrumb component with related components and documentation links."
    },
    {
        "msg": "feat(breadcrumb): add accessibility.md",
        "diff": "diff --git a/packages/chakra-ui-core/src/CBreadcrumb/CBreadcrumb.js b/packages/chakra-ui-core/src/CBreadcrumb/CBreadcrumb.js * @see Source https://github.com/chakra-ui/chakra-ui-vue/blob/master/packages/chakra-ui-core/src/CBreadcrumb/CBreadcrumb.js\n*/\n-\nimport { baseProps } from '../config/props'\nimport { forwardProps, cloneVNodeElement, cleanChildren } from '../utils'\n",
        "date": "08.04.2020 00:34:37",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor CBreadcrumb component to use baseProps and clean up imports"
    },
    {
        "msg": "feat: added checkbox ally",
        "diff": "diff --git a/packages/chakra-ui-core/src/CCheckbox/CCheckbox.js b/packages/chakra-ui-core/src/CCheckbox/CCheckbox.js +/**\n+ * Hey! Welcome to @chakra-ui/vue Checkbox\n+ *\n+ * CCheckbox component is used in forms when a user needs to select multiple values from several options.\n+ *\n+ * @see Docs https://vue.chakra-ui.com/checkbox\n+ * @see Source https://github.com/chakra-ui/chakra-ui-vue/blob/master/packages/chakra-ui-core/src/CCheckbox/CCheckbox.js\n+ * @see A11y https://github.com/chakra-ui/chakra-ui-vue/blob/master/packages/chakra-ui-core/src/CCheckbox/accessibility.md\n+ * @see WAI-ARIA https://www.w3.org/TR/wai-aria-practices-1.2/#button\n+ */\n+\nimport { StringNumber, StringArray } from '../config/props/props.types'\nimport { baseProps } from '../config'\nimport { useVariantColorWarning, useId } from '../utils'\n",
        "date": "08.04.2020 01:15:05",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "feat",
        "chatgpt_zeroshot": "Add documentation and imports for CCheckbox component"
    },
    {
        "msg": "feat(creset): reset styles on server using created hook",
        "diff": "diff --git a/packages/chakra-ui-core/src/CReset/CReset.js b/packages/chakra-ui-core/src/CReset/CReset.js @@ -36,7 +36,7 @@ const CReset = {\nprops: {\nconfig: Object\n},\n- mounted () {\n+ created () {\nconst { color, bg, borderColor, placeholderColor } = this.styleConfig[this.colorMode]\nuseTailwindPreflight(this.theme)\ninjectGlobal({\n",
        "date": "11.04.2020 22:27:05",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor CReset component to use created lifecycle hook instead of mounted"
    },
    {
        "msg": "feat: add circular progress ally report",
        "diff": "diff --git a/packages/chakra-ui-core/src/CCircularProgress/tests/__snapshots__/CCircularProgress.test.js.snap b/packages/chakra-ui-core/src/CCircularProgress/tests/__snapshots__/CCircularProgress.test.js.snap @@ -6,7 +6,7 @@ exports[`should render correctly 1`] = `\naria-valuemax=\"100\"\naria-valuemin=\"0\"\naria-valuenow=\"40\"\n- class=\"css-xqz7ss\"\n+ class=\"css-12d21aj\"\ndata-chakra-component=\"CBox\"\ndata-testid=\"CircularProgress\"\nrole=\"progressbar\"\n@@ -27,7 +27,7 @@ exports[`should render correctly 1`] = `\nstroke-width=\"11.111111111111112\"\n/>\n<circle\n- class=\"css-1h10kks\"\n+ class=\"css-19r75gt\"\ncx=\"111.11111111111111\"\ncy=\"111.11111111111111\"\ndata-chakra-component=\"CBox\"\n",
        "date": "16.04.2020 21:50:37",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "feat",
        "chatgpt_zeroshot": "Update CircularProgress test snapshot with new CSS class names."
    },
    {
        "msg": "feat(controlbox): update controlbox jsdoc strategy",
        "diff": "diff --git a/packages/chakra-ui-core/src/CControlBox/CControlBox.js b/packages/chakra-ui-core/src/CControlBox/CControlBox.js *\n* > For this component to work, it should have a sibling input and be contained in a label\n*\n- * @see Docs https://vue.chakra-ui.com/closebutton\n- * @see Source https://github.com/chakra-ui/chakra-ui-vue/blob/master/packages/chakra-ui-core/src/CCloseButton/CCloseButton.js\n- * @see A11y https://github.com/chakra-ui/chakra-ui-vue/blob/master/packages/chakra-ui-core/src/CCloseButton/accessibility.md\n+ * @see Docs https://vue.chakra-ui.com/controlbox\n+ * @see Strategy https://dev.to/lkopacz/create-custom-keyboard-accessible-checkboxes-2036\n*/\nimport { css } from 'emotion'\n",
        "date": "16.04.2020 23:33:51",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "feat",
        "chatgpt_zeroshot": "Update control box component documentation and add strategy for creating custom keyboard accessible checkboxes."
    },
    {
        "msg": "feat(editbale): add editable props",
        "diff": "diff --git a/packages/chakra-ui-core/src/CEditable/CEditable.js b/packages/chakra-ui-core/src/CEditable/CEditable.js +/**\n+ * Hey! Welcome to @chakra-ui/vue Editable\n+ *\n+ * EditableText is used for inline renaming of some text.\n+ *\n+ * It appears as normal UI text but transforms into a text\n+ * input field when the user clicks or focuses on it.\n+ *\n+ * The text input inherits all font styling from its parent,\n+ * to make the edit and read view transition seamless.\n+ *\n+ * @see Docs https://vue.chakra-ui.com/editable\n+ * @see Source https://github.com/chakra-ui/chakra-ui-vue/blob/master/packages/chakra-ui-core/src/CEditable/CEditable.js\n+ */\n+\nimport styleProps, { baseProps } from '../config/props'\nimport { isDef, getElement, useId, forwardProps } from '../utils'\n@@ -15,6 +30,14 @@ const sharedEditableProps = {\nmx: '-3px'\n}\n+/**\n+ * CEditable component\n+ *\n+ * The wrapper for `CEditable` components. It provides context and state for the Editable components.\n+ *\n+ * @extends CBox\n+ * @see Docs https://vue.chakra-ui.com/editable\n+ */\nconst CEditable = {\nname: 'CEditable',\nprops: {\n@@ -165,7 +188,10 @@ const CEditable = {\n},\nrender (h) {\nreturn h(CBox, {\n- props: forwardProps(this.$props)\n+ props: forwardProps(this.$props),\n+ attrs: {\n+ 'data-chakra-component': 'CEditable'\n+ }\n}, [\nthis.$scopedSlots.default({\nisEditing: this.isEditing,\n@@ -177,6 +203,14 @@ const CEditable = {\n}\n}\n+/**\n+ * CEditablePreview component\n+ *\n+ * The read-only view of the component.\n+ *\n+ * @extends CPseudoBox\n+ * @see Docs https://vue.chakra-ui.com/editable\n+ */\nconst CEditablePreview = {\nname: 'CEditablePreview',\ninject: ['$EditableContext'],\n@@ -218,7 +252,8 @@ const CEditablePreview = {\n},\nattrs: {\n'aria-disabled': isDisabled,\n- tabIndex: this.tabIndex\n+ tabIndex: this.tabIndex,\n+ 'data-chakra-component': 'CEditablePreview'\n},\nnativeOn: {\nfocus: onRequestEdit\n@@ -227,6 +262,14 @@ const CEditablePreview = {\n}\n}\n+/**\n+ * CEditableInput component\n+ *\n+ * The edit view of the component. It shows when you click or focus on the text.\n+ *\n+ * @extends CPseudoBox\n+ * @see Docs https://vue.chakra-ui.com/editable\n+ */\nconst CEditableInput = {\nname: 'CEditableInput',\ninject: ['$EditableContext'],\n@@ -285,7 +328,8 @@ const CEditableInput = {\ndisabled: isDisabled,\n'aria-disabled': isDisabled,\nvalue,\n- placeholder\n+ placeholder,\n+ 'data-chakra-component': 'CEditableInput'\n}\n}, this.$slots.default)\n}\n",
        "date": "17.04.2020 01:58:50",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "feat",
        "chatgpt_zeroshot": "Add CEditable, CEditablePreview, and CEditableInput components for inline text editing功能"
    },
    {
        "msg": "feat(cinputelement): added review",
        "diff": "diff --git a/packages/chakra-ui-core/src/CInputElement/CInputElement.js b/packages/chakra-ui-core/src/CInputElement/CInputElement.js +/**\n+ * Hey! Welcome to @chakra-ui/vue CInputElement\n+ *\n+ * InputElement allows addition of add an icon or button inside the input component\n+ *\n+ * @see Docs https://vue.chakra-ui.com/input\n+ * @see Source https://github.com/chakra-ui/chakra-ui-vue/blob/master/packages/chakra-ui-core/src/CInputElement/CInputElement.js\n+ */\n+\nimport { baseProps } from '../config'\nimport { inputSizes } from '../CInput/utils/input.styles'\nimport CBox from '../CBox'\n@@ -13,6 +22,14 @@ const props = {\ndisablePointerEvents: Boolean\n}\n+/**\n+ * CInputElement component\n+ *\n+ * allows addition of an icon or button inside the input component\n+ *\n+ * @extends CBox\n+ * @see Docs https://vue.chakra-ui.com/input\n+ */\nconst CInputElement = {\nname: 'CInputElement',\nprops,\n@@ -35,11 +52,22 @@ const CInputElement = {\nzIndex: 2,\n...(this.disablePointerEvents && { pointerEvents: 'none' }),\n...placementProp\n+ },\n+ attrs: {\n+ 'data-chakra-component': 'CInputElement'\n}\n}, this.$slots.default)\n}\n}\n+/**\n+ * CInputLeftElement component\n+ *\n+ * allows addition of an icon or button inside left of the input component\n+ *\n+ * @extends CInputElement\n+ * @see Docs https://vue.chakra-ui.com/input\n+ */\nconst CInputLeftElement = {\nname: 'CInputLeftElement',\nprops,\n@@ -48,11 +76,22 @@ const CInputLeftElement = {\nprops: {\n...forwardProps(this.$props),\nplacement: 'left'\n+ },\n+ attrs: {\n+ 'data-chakra-component': 'CInputLeftElement'\n}\n}, this.$slots.default)\n}\n}\n+/**\n+ * CInputRightElement component\n+ *\n+ * allows addition of an icon or button inside right of the input component\n+ *\n+ * @extends CInputElement\n+ * @see Docs https://vue.chakra-ui.com/input\n+ */\nconst CInputRightElement = {\nname: 'CInputRightElement',\nprops,\n@@ -61,6 +100,9 @@ const CInputRightElement = {\nprops: {\n...forwardProps(this.$props),\nplacement: 'right'\n+ },\n+ attrs: {\n+ 'data-chakra-component': 'CInputRightElement'\n}\n}, this.$slots.default)\n}\n",
        "date": "06.05.2020 23:24:32",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "feat",
        "chatgpt_zeroshot": "Add CInputElement, CInputLeftElement, and CInputRightElement components for adding icons or buttons inside input components."
    },
    {
        "msg": "feat(cinputgroup): added review",
        "diff": "diff --git a/packages/chakra-ui-core/src/CInputGroup/CInputGroup.js b/packages/chakra-ui-core/src/CInputGroup/CInputGroup.js +/**\n+ * Hey! Welcome to @chakra-ui/vue CInputGroup\n+ *\n+ * CInputGroup allows grouping of input elements\n+ *\n+ * @see Docs https://vue.chakra-ui.com/input\n+ * @see Source https://github.com/chakra-ui/chakra-ui-vue/blob/master/packages/chakra-ui-core/src/CInputGroup/CInputGroup.js\n+ */\n+\nimport { StringArray } from '../config/props/props.types'\nimport { baseProps } from '../config'\nimport { inputSizes } from '../CInput/utils/input.styles'\n-import CBox from '../CBox'\nimport { cloneVNode, forwardProps, kebabify } from '../utils'\n+import CBox from '../CBox'\n+\n+/**\n+ * CInputElement component\n+ *\n+ * allows grouping of input elements\n+ *\n+ * @extends CBox\n+ * @see Docs https://vue.chakra-ui.com/input\n+ */\nconst CInputGroup = {\nname: 'CInputGroup',\ninject: ['$chakraTheme'],\n@@ -67,7 +85,7 @@ const CInputGroup = {\nposition: 'relative'\n},\nattrs: {\n- 'data-chakra-input-group': ''\n+ 'data-chakra-component': 'CInputGroup'\n}\n}, clones)\n}\n",
        "date": "06.05.2020 23:26:01",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "feat",
        "chatgpt_zeroshot": "Add CInputElement component for grouping input elements"
    },
    {
        "msg": "feat(menulistitem): allow menu list item to use as polymorphic prop",
        "diff": "diff --git a/packages/chakra-ui-core/src/CMenu/CMenu.js b/packages/chakra-ui-core/src/CMenu/CMenu.js @@ -446,6 +446,10 @@ const CMenuItem = {\nrole: {\ntype: String,\ndefault: 'menuitem'\n+ },\n+ as: {\n+ type: [String, Object],\n+ default: 'button'\n}\n},\ncomputed: {\n@@ -466,7 +470,7 @@ const CMenuItem = {\nconst { focusableItems, focusAtIndex, closeOnSelect, closeMenu } = this.context\nreturn h(CPseudoBox, {\nprops: {\n- as: 'button'\n+ as: this.as\n},\nattrs: {\ndisplay: 'flex',\n",
        "date": "02.08.2020 21:06:36",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "feat",
        "chatgpt_zeroshot": "Add 'as' prop to CMenuItem component with default value 'button'"
    },
    {
        "msg": "feat: Add cross-env to accomodate Windows machines",
        "diff": "diff --git a/package.json b/package.json \"release\": \"lerna version patch && lerna publish from-package\",\n\"push\": \"git add -A && git commit -m \\\"chore(lerna): publishing package \\\" && lerna version --conventional-commits\",\n\"clean\": \"lerna run clean\",\n- \"storybook\": \"STORYBOOK_VUE_DEV_TOOLS=1 start-storybook -p 9000\",\n+ \"storybook\": \"cross-env STORYBOOK_VUE_DEV_TOOLS=1 start-storybook -p 9000\",\n\"storybook:devtools\": \"vue-devtools\",\n\"build-storybook\": \"build-storybook --quiet\",\n\"deploy-storybook\": \"storybook-to-ghpages -- --out=.out\",\n",
        "date": "15.08.2020 20:14:02",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "feat",
        "chatgpt_zeroshot": "chore(package.json): Update start-storybook script to use cross-env"
    },
    {
        "msg": "feat(image): added srcset to the imageProps",
        "diff": "diff --git a/packages/chakra-ui-core/src/CImage/CImage.js b/packages/chakra-ui-core/src/CImage/CImage.js @@ -72,9 +72,9 @@ const CImage = {\nrender (h) {\nlet imageProps\nif (this.ignoreFallback) {\n- imageProps = { src: this.src }\n+ imageProps = { src: this.src, srcset: this.srcset }\n} else {\n- imageProps = { src: this.hasLoaded ? this.src : this.fallbackSrc }\n+ imageProps = { src: this.hasLoaded ? this.src : this.fallbackSrc, srcset: this.srcset }\n}\nreturn h(CNoSsr, [\nh('img', {\n",
        "date": "05.05.2021 10:47:46",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "feat",
        "chatgpt_zeroshot": "Add srcset attribute to CImage component for responsive images"
    },
    {
        "msg": "feat(types): add type exports for color mode & theme providers",
        "diff": "diff --git a/packages/chakra-ui-core/types/index.d.ts b/packages/chakra-ui-core/types/index.d.ts @@ -3,18 +3,36 @@ import { Theme } from \"../../chakra-ui-theme/types\"\nimport useToast from \"../src/CToast\"\nimport { ToastFactory } from '../src/CToast/CToast'\n+type ChakraIcons = { [name: string]: Icon };\n+\ndeclare module 'vue/types/vue' {\nexport interface Vue {\n$toast: ToastFactory\n$chakra: {\ntheme: Theme\n- icons: { [name: string]: Icon }\n+ icons: ChakraIcons\n+ }\n+ }\n+}\n+\n+declare module '../src/CColorModeProvider' {\n+ export interface Provides {\n+ $chakraColorMode: () => 'light' | 'dark'\n+ $toggleColorMode: () => void\n+ }\n}\n- chakraColorMode: string\n- chakraToggleColorMode: string\n+\n+declare module '../src/CThemeProvider' {\n+ export interface Provides {\n+ $chakraTheme: Theme\n+ $chakraIcons: ChakraIcons\n+ $chakraColorMode: () => 'light'\n}\n}\n+export { Provides as CColorModeProvides } from '../src/CColorModeProvider'\n+export { Provides as CThemeProvides } from '../src/CThemeProvider'\n+\nexport const useToast: typeof useToast\nexport const defaultTheme: Theme\nexport * from './component'\n",
        "date": "04.10.2021 00:12:00",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "feat",
        "chatgpt_zeroshot": "Add ChakraIcons type and update module declarations for color mode and theme provides."
    },
    {
        "msg": "feat: allow dev port config",
        "diff": "diff --git a/packages/razzle/config/createConfig.js b/packages/razzle/config/createConfig.js @@ -107,6 +107,7 @@ module.exports = (\nconst portOffset = clientOnly ? 0 : 1;\nconst devServerPort =\n+ (process.env.PORT_DEV && parseInt(process.env.PORT_DEV)) ||\n(process.env.PORT && parseInt(process.env.PORT) + portOffset) ||\n3000 + portOffset;\n",
        "date": "05.06.2020 21:21:47",
        "repo": "jaredpalmer/razzle",
        "type": "feat",
        "chatgpt_zeroshot": "Add support for custom development server port via environment variable"
    },
    {
        "msg": "feat(razzle): save chunk id to chunks.json",
        "diff": "diff --git a/packages/razzle/config/createConfig.js b/packages/razzle/config/createConfig.js @@ -18,7 +18,7 @@ const errorOverlayMiddleware = require('react-dev-utils/errorOverlayMiddleware')\nconst WebpackBar = require('webpackbar');\nconst ManifestPlugin = require('webpack-manifest-plugin');\nconst modules = require('./modules');\n-const postcssLoadConfig = require('postcss-load-config')\n+const postcssLoadConfig = require('postcss-load-config');\nconst logger = require('razzle-dev-utils/logger');\nconst defaultPostCssOptions = {\n@@ -36,13 +36,13 @@ const defaultPostCssOptions = {\nconst hasPostCssConfig = () => {\ntry {\n- return !!postcssLoadConfig.sync()\n+ return !!postcssLoadConfig.sync();\n} catch (_error) {\n- return false\n- }\n+ return false;\n}\n+};\n-const postCssOptions = hasPostCssConfig() ? undefined : defaultPostCssOptions\n+const postCssOptions = hasPostCssConfig() ? undefined : defaultPostCssOptions;\nconst webpackDevClientEntry = require.resolve(\n'razzle-dev-utils/webpackHotDevClient'\n@@ -58,12 +58,12 @@ module.exports = (\nport = 3000,\nmodify = null,\nmodifyBabelOptions = null,\n- experimental = {}\n+ experimental = {},\n},\nwebpackObject,\nclientOnly = false,\npaths,\n- plugins = [],\n+ plugins = []\n) => {\nreturn new Promise(async resolve => {\n// Define some useful shorthands.\n@@ -73,7 +73,6 @@ module.exports = (\nconst IS_DEV = env === 'dev';\nprocess.env.NODE_ENV = IS_PROD ? 'production' : 'development';\n-\nconst shouldUseReactRefresh = experimental.reactRefresh ? true : false;\n// First we check to see if the user has a custom .babelrc file, otherwise\n@@ -83,13 +82,13 @@ module.exports = (\nbabelrc: true,\ncacheDirectory: true,\npresets: [],\n- plugins: []\n+ plugins: [],\n};\nif (!hasBabelRc) {\nmainBabelOptions.presets.push(require.resolve('../babel'));\nif (IS_DEV && IS_WEB && shouldUseReactRefresh) {\n- mainBabelOptions.plugins.push(require.resolve('react-refresh/babel'))\n+ mainBabelOptions.plugins.push(require.resolve('react-refresh/babel'));\n}\n}\n@@ -102,7 +101,11 @@ module.exports = (\nconsole.log('Using .babelrc defined in your app root');\n}\n- const dotenv = getClientEnv(target, { clearConsole, host, port, shouldUseReactRefresh }, paths);\n+ const dotenv = getClientEnv(\n+ target,\n+ { clearConsole, host, port, shouldUseReactRefresh },\n+ paths\n+ );\nconst portOffset = clientOnly ? 0 : 1;\n@@ -138,13 +141,16 @@ module.exports = (\nadditionalModulePaths\n),\nextensions: ['.mjs', '.js', '.jsx', '.json', '.ts', '.tsx'],\n- alias: Object.assign({\n+ alias: Object.assign(\n+ {\n// This is required so symlinks work during development.\n'webpack/hot/poll': require.resolve('webpack/hot/poll'),\n// Support React Native Web\n// https://www.smashingmagazine.com/2016/08/a-glimpse-into-the-future-with-react-native-for-web/\n'react-native': 'react-native-web',\n- }, additionalAliases),\n+ },\n+ additionalAliases\n+ ),\n},\nresolveLoader: {\nmodules: [paths.appNodeModules, paths.ownNodeModules],\n@@ -168,8 +174,8 @@ module.exports = (\n{\nloader: require.resolve('babel-loader'),\noptions: babelOptions,\n- }\n- ]\n+ },\n+ ],\n},\n{\nexclude: [\n@@ -375,6 +381,10 @@ module.exports = (\n)\n.filter(Boolean);\n+ const chunkIds = [].concat(\n+ ...(entry.chunks || []).map(chunk => chunk.ids)\n+ );\n+\nconst cssFiles = files\n.map(item => (item.indexOf('.css') !== -1 ? item : null))\n.filter(Boolean);\n@@ -389,6 +399,7 @@ module.exports = (\n[name]: {\ncss: cssFiles,\njs: jsFiles,\n+ chunks: chunkIds,\n},\n}\n: acc;\n@@ -453,14 +464,13 @@ module.exports = (\n// set this true will break HtmlWebpackPlugin\nmultiStep: !clientOnly,\n}),\n- shouldUseReactRefresh ?\n- new ReactRefreshWebpackPlugin({\n+ shouldUseReactRefresh\n+ ? new ReactRefreshWebpackPlugin({\noverlay: {\nentry: webpackDevClientEntry,\n},\n})\n- : null\n- ,\n+ : null,\nnew webpack.DefinePlugin(dotenv.stringified),\n].filter(x => x);\n@@ -613,24 +623,27 @@ module.exports = (\n];\n}\n-\nfor (const [plugin, options] of plugins) {\n// Check if plugin is a function.\n// If it is, call it on the configs we created.\nif (typeof plugin === 'function') {\n- config = await Promise.resolve(runPlugin(\n+ config = await Promise.resolve(\n+ runPlugin(\nplugin,\nconfig,\n{ target, dev: IS_DEV },\nwebpackObject,\noptions\n- ));\n+ )\n+ );\n}\n}\n// Check if razzle.config.js has a modify function.\n// If it does, call it on the configs we created.\nif (modify) {\n- config = await Promise.resolve(modify(config, { target, dev: IS_DEV }, webpackObject));\n+ config = await Promise.resolve(\n+ modify(config, { target, dev: IS_DEV }, webpackObject)\n+ );\n}\nresolve(config);\n",
        "date": "08.07.2020 23:05:59",
        "repo": "jaredpalmer/razzle",
        "type": "feat",
        "chatgpt_zeroshot": "Fix missing semicolons in createConfig.js file"
    },
    {
        "msg": "feat: use contenthash instead of chunkhash and hash",
        "diff": "diff --git a/packages/razzle/config/createConfigAsync.js b/packages/razzle/config/createConfigAsync.js @@ -532,7 +532,7 @@ module.exports = (\nexclude: webpackOptions.fileLoaderExlude,\nloader: require.resolve('file-loader'),\noptions: {\n- name: `${razzleOptions.mediaPrefix}/[name].[hash:8].[ext]`,\n+ name: `${razzleOptions.mediaPrefix}/[name].[contenthash:8].[ext]`,\nemitFile: IS_WEB,\n},\n},\n@@ -544,7 +544,7 @@ module.exports = (\nloader: require.resolve('url-loader'),\noptions: {\nlimit: 10000,\n- name: `${razzleOptions.mediaPrefix}/[name].[hash:8].[ext]`,\n+ name: `${razzleOptions.mediaPrefix}/[name].[contenthash:8].[ext]`,\nemitFile: IS_WEB,\n},\n},\n@@ -844,8 +844,8 @@ module.exports = (\nconfig.output = {\npath: paths.appBuildPublic,\npublicPath: dotenv.raw.PUBLIC_PATH || '/',\n- filename: `${razzleOptions.jsPrefix}/bundle.[chunkhash:8].js`,\n- chunkFilename: `${razzleOptions.jsPrefix}/[name].[chunkhash:8].chunk.js`,\n+ filename: `${razzleOptions.jsPrefix}/bundle.[contenthash:8].js`,\n+ chunkFilename: `${razzleOptions.jsPrefix}/[name].[contenthash:8].chunk.js`,\nlibraryTarget: 'var',\n};\n",
        "date": "23.08.2020 17:44:58",
        "repo": "jaredpalmer/razzle",
        "type": "feat",
        "chatgpt_zeroshot": "Update file and chunk naming conventions to use contenthash instead of hash."
    },
    {
        "msg": "feat(razzle): add assets-manifest",
        "diff": "diff --git a/packages/razzle/config/createConfigAsync.js b/packages/razzle/config/createConfigAsync.js @@ -725,6 +725,59 @@ module.exports = (\npath: paths.appBuild,\nfilename: 'assets.json',\n}),\n+ // Output all files in a manifest file called assets-manifest.json\n+ // in the build directory.\n+ new ManifestPlugin({\n+ fileName: path.join(paths.appBuild, 'assets-manifest.json'),\n+ writeToFileEmit: true,\n+ generate: (seed, files) => {\n+ const entrypoints = new Set();\n+ const noChunkFiles = new Set();\n+ files.forEach(file => {\n+ if (file.isChunk) {\n+ const groups = ((file.chunk || {})._groups || [])\n+ .forEach(group => entrypoints.add(group));\n+ } else {\n+ noChunkFiles.add(file);\n+ }\n+ });\n+ const entries = [...entrypoints];\n+ const entryArrayManifest = entries.reduce((acc, entry) => {\n+ const name =\n+ (entry.options || {}).name ||\n+ (entry.runtimeChunk || {}).name ||\n+ entry.id;\n+ const files = []\n+ .concat(\n+ ...(entry.chunks || []).map(chunk =>\n+ chunk.files.map(path => config.output.publicPath + path)\n+ )\n+ )\n+ .filter(Boolean);\n+\n+ const filesByType = files.reduce((types, file) => {\n+ const fileType = file.slice(file.lastIndexOf('.')+1);\n+ types[fileType] = types[fileType] || [];\n+ types[fileType].push(file)\n+ return types;\n+ }, {});\n+\n+ return name\n+ ? {\n+ ...acc,\n+ [name]: filesByType,\n+ }\n+ : acc;\n+ }, seed);\n+ entryArrayManifest['noentry'] = [...noChunkFiles].map(file=>file.path).reduce((types, file) => {\n+ const fileType = file.slice(file.lastIndexOf('.')+1);\n+ types[fileType] = types[fileType] || [];\n+ types[fileType].push(file)\n+ return types;\n+ }, {});\n+ return entryArrayManifest;\n+ },\n+ }),\n// Output our JS and CSS files in a manifest file called chunks.json\n// in the build directory.\n// based on https://github.com/danethurber/webpack-manifest-plugin/issues/181#issuecomment-467907737\n",
        "date": "30.08.2020 16:28:38",
        "repo": "jaredpalmer/razzle",
        "type": "feat",
        "chatgpt_zeroshot": "Add manifest plugin to output all files in assets-manifest.json and chunks.json"
    },
    {
        "msg": "feat: add utils to test using yalc",
        "diff": "diff --git a/test/fixtures/util.js b/test/fixtures/util.js const shell = require('shelljs');\nconst path = require('path');\n-const rootDir = process.cwd();\n+const glob = require('glob');\n+\n+const rootDir = path.join(path.resolve(__dirname), '..', '..');\n+\nconst fs = require('fs-extra');\nconst silent = true;\n+const getWorkspaceDirs = (absolute = false) => {\n+ const rootJson = JSON.parse(fs.readFileSync(path.join(rootDir, 'package.json')));\n+ const workspaceDirs = rootJson.workspaces.map(item =>\n+ glob.sync(item, {cwd: rootDir, absolute: absolute})\n+ ).flat();\n+ return workspaceDirs;\n+};\n+\n+const getWorkspacePackages = () => {\n+ const packages = getWorkspaceDirs(true)\n+ .map(item => JSON.parse(fs.readFileSync(path.join(item, 'package.json'))).name);\n+ return packages;\n+};\n+\n+const removeWorkspacePackages = (fromPath) => {\n+ const stagePath = fromPath || process.cwd();\n+ const workspacePackages = getWorkspacePackages();\n+ const packageJson = path.join(stagePath, 'package.json');\n+\n+ if (fs.existsSync(packageJson)) {\n+ const packageJsonData = JSON.parse(fs.readFileSync(packageJson));\n+\n+ const newPackageJsonData = [\"dependencies\", \"devDependencies\"].reduce((acc, depType) => {\n+ if (acc[depType]) {\n+ acc[depType] = Object.keys(acc[depType]).reduce((depsAcc, dep) => {\n+ if (workspacePackages.includes(dep)) {\n+ delete depsAcc[dep];\n+ }\n+ return depsAcc;\n+ }, acc[depType]);\n+ }\n+ return acc;\n+ }, packageJsonData);\n+\n+ return fs.writeFileSync(packageJson, JSON.stringify(newPackageJsonData, null, ' '));\n+ }\n+};\n+\n+const copyExample = (exampleName, stageName) => {\n+ const stagePath = path.join(process.cwd(), stageName);\n+ fs.copySync(path.join(rootDir, 'examples', exampleName), stagePath);\n+ return stagePath;\n+};\n+\n+const yalcPublishAll = () => {\n+ return getWorkspaceDirs().map(dir=>shell.exec(`yalc publish ${dir}`))\n+};\n+\n+const yalcAddAll = () => {\n+ return getWorkspacePackages().map(pkg=>shell.exec(`yalc add ${pkg}`))\n+};\n+\nmodule.exports = {\n+ getWorkspaceDirs: getWorkspaceDirs,\n+\n+ getWorkspacePackages: getWorkspacePackages,\n+\n+ removeWorkspacePackages: removeWorkspacePackages,\n+\n+ yalcPublishAll: yalcPublishAll,\n+\n+ yalcAddAll: yalcAddAll,\n+\n+ yalcSetupStageWithExample: (\n+ stageName,\n+ exampleName\n+ ) => {\n+\n+ let silentState = shell.config.silent; // save old silent state\n+ let verboseState = shell.config.verbose; // save old silent state\n+\n+ shell.config.verbose = !silent;\n+ shell.config.silent = silent;\n+\n+ const stagePath = copyExample(exampleName, stageName);\n+ removeWorkspacePackages(stagePath);\n+\n+ shell.cd(stagePath);\n+\n+ shell.exec(\"yarn install\", { env: Object.assign(process.env, {NODE_ENV:\"development\"}) });\n+\n+ yalcAddAll();\n+\n+ shell.config.verbose = verboseState;\n+ shell.config.silent = silentState;\n+\n+ return stagePath;\n+ },\n+\n+ copyExample: copyExample,\n+\nsetupStage: (stageName) => {\nconst stagePath = path.join(rootDir, stageName);\nfs.ensureDirSync(stagePath);\n@@ -39,7 +132,7 @@ module.exports = {\ninstall=false,\ntest=false\n) => {\n- const stagePath = path.join(rootDir, stageName);\n+ const stagePath = path.join(process.cwd(), stageName);\nconst packagesPath = path.join(rootDir, 'packages');\nlet silentState = shell.config.silent; // save old silent state\n@@ -48,10 +141,11 @@ module.exports = {\nshell.config.verbose = !silent;\nshell.config.silent = silent;\n- fs.copySync(path.join(rootDir, 'examples', exampleName), stagePath);\n+ copyExample(exampleName, stageName);\n+\nshell.cd(stagePath);\nif (install) {\n- shell.exec(\"NODE_ENV=development yarn install\");\n+ shell.exec(\"yarn install\", { env: Object.assign(process.env, {NODE_ENV:\"development\"}) });\n}\nif (symlink) {\nfs.ensureSymlinkSync(\n@@ -76,7 +170,7 @@ module.exports = {\n}\n}\nif (test) {\n- shell.exec(\"CI=true yarn run test\");\n+ shell.exec(\"yarn run test\", { env: Object.assign(process.env, {CI:\"true\"}) });\n}\nshell.config.verbose = verboseState;\n",
        "date": "18.09.2020 23:34:20",
        "repo": "jaredpalmer/razzle",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor util.js to include functions for managing workspace packages and examples"
    },
    {
        "msg": "feat: update Single Page Applications section",
        "diff": "diff --git a/website/pages/docs/single-page-applications.md b/website/pages/docs/single-page-applications.md -# [Single Page Applications](https://github.com/jaredpalmer/razzle/blob/master/examples/basic-spa/)\n+# Single Page Applications\nIn addition to universal/isomorphic applications, Razzle can build single page (or client-only) applications. To do this, remove `index.js` and `server.js` from the src folder, and create an `index.html` file inside the public folder with the following template:\n-```\n+```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n",
        "date": "06.10.2020 01:58:08",
        "repo": "jaredpalmer/razzle",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor single page applications documentation and update template in index.html"
    },
    {
        "msg": "feat: add examples to static export",
        "diff": "diff --git a/website/pages/static-export.mdx b/website/pages/static-export.mdx @@ -48,18 +48,58 @@ Razzle not only works with React, but also Reason, Elm, Vue, Angular, Svelte, an\n#### render()\nbehind the scenes razzle calls `render` function that exposed from `static_export` module and saves `html` string that you pass to `res.json()` into a html file. for `req` object there is only one property that is `url` which contains the url that we are going to render and save it's result to the html file.\n+html file destination is relative to the `req.url`, for example if the url is `/product/A` html is going to get saved at `/build/product/A/index.html`.\n+\n+you should call `renderToString()` (or what ever your framework gives you to do SSR) in this function send resonse to `res.json()`\n+\n+```js\n+export const render = (req, res) => {\n+ const html = ReactDOMServer.renderToString(\n+ <StaticRouter location={req.url}>\n+ <App />\n+ </StaticRouter>\n+ );\n+\n+ res.json({ html });\n+};\n+```\n+\n+(you can re-export your ssr logic from server.js file and use it `static_export`)\n#### routes()\nyou should also export a function called `routes` that returns an array of strings or a promise that will resolve array of strings. razzle will take the urls one by one and pass them one by one to `render`.\n+you should get all paths that your app has from your CMS in this method and return it at the end:\n-html file destination is relative to the `req.url`, for example if the url is `/product/A` html is going to get saved at `/build/product/A/index.html`.\n+```js\n+export const routes = async () => {\n+ // data should be an array of strings [\"/\", \"/product/A\", \"/blog/1\", \"/blog/2\"]\n+ const { data } = await getAppPaths();\n+ return data;\n+};\n+```\n#### page data\nyou may also need to save the data that your page uses to rehydrate the app on the client side.\nyou can also pass the `data` along the `html` to `res.json({ html, data })` and contents of data object will go inside the `page-data.json` file next to the html file.\n+```js\n+export const render = async (req, res) => {\n+ const data = await getDataForRoute(req.url);\n+\n+ const html = ReactDOMServer.renderToString(\n+ <StaticRouter location={req.url}>\n+ <App />\n+ </StaticRouter>\n+ );\n+\n+ res.json({ html, data });\n+};\n+```\n+\n+(you should also change how your app fetches data on client-side, so it reads data from `page-data.json`)\n+\n## TypeScript Support\nStatic export comes with typescript support out of the box, in order to use typescript rename `static_export.js` to `static_export.ts` and you are good to go!\n",
        "date": "06.10.2020 02:46:12",
        "repo": "jaredpalmer/razzle",
        "type": "feat",
        "chatgpt_zeroshot": "Add SSR logic to render HTML and data for static export"
    },
    {
        "msg": "feat(eslint): add typescript to test regex",
        "diff": "diff --git a/packages/razzle-plugin-eslint/index.js b/packages/razzle-plugin-eslint/index.js @@ -25,7 +25,7 @@ module.exports = {\nconfig.module.rules = [\n{\n- test: /\\.(js|jsx|mjs)$/,\n+ test: /\\.(js|mjs|jsx|ts|tsx)$/,\nenforce: 'pre',\nloader: require.resolve('eslint-loader'),\noptions: mainEslintOptions,\n",
        "date": "18.10.2020 19:51:54",
        "repo": "jaredpalmer/razzle",
        "type": "feat",
        "chatgpt_zeroshot": "Update eslint loader test to include typescript files"
    },
    {
        "msg": "feat: update eslint plugin config",
        "diff": "diff --git a/packages/razzle-plugin-eslint/index.js b/packages/razzle-plugin-eslint/index.js @@ -9,13 +9,6 @@ module.exports = {\nconst mainEslintOptions = {\nbaseConfig: {\nextends: [require.resolve('eslint-config-react-app')],\n- // This setting can be removed once this commit is released:\n- // https://github.com/facebook/create-react-app/commit/005ee5b9525d476d2eb2dfb5b8afcd15b65dd5d2\n- settings: {\n- react: {\n- version: 'detect',\n- },\n- },\n},\nformatter: eslintFormatter,\neslintPath: require.resolve('eslint'),\n@@ -33,7 +26,6 @@ module.exports = {\n},\n...config.module.rules,\n];\n-\nreturn config;\n},\n};\n",
        "date": "18.10.2020 20:15:58",
        "repo": "jaredpalmer/razzle",
        "type": "feat",
        "chatgpt_zeroshot": "Remove unnecessary eslint setting for detecting React version"
    },
    {
        "msg": "feat(razzle): make appDirectory configurable via ENV configuration",
        "diff": "diff --git a/packages/razzle/config/paths.js b/packages/razzle/config/paths.js @@ -6,7 +6,7 @@ const url = require('url');\n// Make sure any symlinks in the project folder are resolved:\n// https://github.com/facebookincubator/create-react-app/issues/637\n-const appDirectory = fs.realpathSync(process.cwd());\n+const appDirectory = fs.realpathSync(process.env.RAZZLE_APP_PATH || process.cwd());\nconst resolveApp = relativePath => path.resolve(appDirectory, relativePath);\nconst envPublicUrl = process.env.PUBLIC_URL;\n",
        "date": "24.10.2020 00:46:15",
        "repo": "jaredpalmer/razzle",
        "type": "feat",
        "chatgpt_zeroshot": "Update appDirectory to use RAZZLE_APP_PATH environment variable if available"
    },
    {
        "msg": "feat(razzle): make WatchIgnore plugin paths overridable",
        "diff": "diff --git a/packages/razzle/config/createConfigAsync.js b/packages/razzle/config/createConfigAsync.js @@ -392,6 +392,8 @@ module.exports = (\n]\n};\n+ webpackOptions.watchIgnorePaths = [paths.appAssetsManifest, paths.appChunksManifest];\n+\nfor (const [plugin, pluginOptions] of plugins) {\n// Check if .modifyWebpackConfig is a function.\n// If it is, call it on the configs we created.\n@@ -658,8 +660,8 @@ module.exports = (\n// Ignore assets.json and chunks.json to avoid infinite recompile bug\nnew webpack.WatchIgnorePlugin(\nwebpackMajor === 5\n- ? { paths: [paths.appAssetsManifest, paths.appChunksManifest] }\n- : [paths.appAssetsManifest, paths.appChunksManifest]\n+ ? { paths: webpackOptions.watchIgnorePaths }\n+ : webpackOptions.watchIgnorePaths\n),\n].filter(x => x);\n}\n",
        "date": "25.10.2020 16:28:32",
        "repo": "jaredpalmer/razzle",
        "type": "feat",
        "chatgpt_zeroshot": "Add watchIgnorePaths to webpackOptions"
    },
    {
        "msg": "feat(razzle): Support for not released plugins in razzle.config.js",
        "diff": "diff --git a/packages/razzle/config/loadPlugins.js b/packages/razzle/config/loadPlugins.js @@ -12,6 +12,11 @@ function loadPlugin(plugin, paths) {\nreturn [plugin, {}];\n}\n+ // Support for not released plugins\n+ if (typeof plugin === 'object') {\n+ return [plugin, {}];\n+ }\n+\nif (typeof plugin.func === 'function') {\n// Used for writing plugin tests\nreturn [plugin.func, plugin.options];\n",
        "date": "10.11.2020 16:12:41",
        "repo": "jaredpalmer/razzle",
        "type": "feat",
        "chatgpt_zeroshot": "Add support for not released plugins in loadPlugins.js"
    },
    {
        "msg": "feat(razzle): add more webpackOptions, remove cacheable",
        "diff": "diff --git a/packages/razzle/config/createConfigAsync.js b/packages/razzle/config/createConfigAsync.js @@ -228,18 +228,43 @@ module.exports = (\nwebpackOptions.urlLoaderTest = [/\\.bmp$/, /\\.gif$/, /\\.jpe?g$/, /\\.png$/];\n+ webpackOptions.fileLoaderOutputName = `${razzleOptions.mediaPrefix}/[name].[contenthash:8].[ext]`;\n+\n+ webpackOptions.urlLoaderOutputName = `${razzleOptions.mediaPrefix}/[name].[contenthash:8].[ext]`;\n+\n+ webpackOptions.cssTest = [/\\.css(\\.map)?$/];\n+\n+ webpackOptions.cssOutputFilename = `${razzleOptions.cssPrefix}/[name].[contenthash:8].css`;\n+\n+ webpackOptions.cssOutputChunkFilename = `${razzleOptions.cssPrefix}/[name].[contenthash:8].chunk.css`;\n+\n+ webpackOptions.jsTest = [/\\.js(\\.map)?$/];\n+\nwebpackOptions.definePluginOptions = dotenv.stringified;\nif (IS_NODE) {\n+\n+ webpackOptions.jsOutputFilename = `[name].js`;\n+ webpackOptions.jsOutputChunkFilename = `[name].chunk.js`;\n+\nif (IS_DEV) {\n} else {\n}\n}\nif (IS_WEB) {\n+\nif (IS_DEV) {\n+\n+ webpackOptions.jsOutputFilename = `${razzleOptions.jsPrefix}/[name].js`;\n+ webpackOptions.jsOutputChunkFilename = `${razzleOptions.jsPrefix}/[name].chunk.js`;\n+\nwebpackOptions.splitChunksConfig = splitChunksConfigs.dev;\n} else {\n+\n+ webpackOptions.jsOutputFilename = `${razzleOptions.jsPrefix}/[name].[contenthash:8].js`;\n+ webpackOptions.jsOutputChunkFilename = `${razzleOptions.jsPrefix}/[name].[contenthash:8].chunk.js`;\n+\nwebpackOptions.splitChunksConfig = splitChunksConfigs.prod;\nwebpackOptions.terserPluginOptions = {\nterserOptions: {\n@@ -444,7 +469,7 @@ module.exports = (\nexclude: webpackOptions.fileLoaderExclude,\nloader: require.resolve('file-loader'),\noptions: {\n- name: `${razzleOptions.mediaPrefix}/[name].[contenthash:8].[ext]`,\n+ name: webpackOptions.fileLoaderOutputName,\nemitFile: IS_WEB,\n},\n},\n@@ -456,7 +481,7 @@ module.exports = (\nloader: require.resolve('url-loader'),\noptions: {\nlimit: 10000,\n- name: `${razzleOptions.mediaPrefix}/[name].[contenthash:8].[ext]`,\n+ name: webpackOptions.urlLoaderOutputName,\nemitFile: IS_WEB,\n},\n},\n@@ -539,7 +564,8 @@ module.exports = (\nconfig.output = {\npath: paths.appBuild,\npublicPath: clientPublicPath,\n- filename: '[name].js',\n+ filename: webpackOptions.jsOutputFilename,\n+ chunkFilename: webpackOptions.jsOutputChunkFilename,\nlibraryTarget: 'commonjs2',\n};\n@@ -627,7 +653,6 @@ module.exports = (\ngenerate: (seed, files) => {\nconst entrypoints = new Set();\nconst noChunkFiles = new Set();\n- const noLongTermCacheFiles = new Set();\nfiles.forEach(file => {\nif (file.isChunk) {\nconst groups = (\n@@ -636,10 +661,6 @@ module.exports = (\n} else {\nnoChunkFiles.add(file);\n}\n- console.log(file)\n- if (file.path.indexOf(file.name) !== -1) {\n- noLongTermCacheFiles.add(file);\n- }\n});\nconst entries = [...entrypoints];\nconst entryArrayManifest = entries.reduce((acc, entry) => {\n@@ -681,8 +702,6 @@ module.exports = (\ntypes[fileType].push(file);\nreturn types;\n}, {});\n- entryArrayManifest['nocache'] = [...noLongTermCacheFiles]\n- .map(file => file.path);\nreturn entryArrayManifest;\n},\n})\n@@ -704,8 +723,8 @@ module.exports = (\npublicPath: clientPublicPath,\npathinfo: true,\nlibraryTarget: 'var',\n- filename: `${razzleOptions.jsPrefix}/[name].js`,\n- chunkFilename: `${razzleOptions.jsPrefix}/[name].chunk.js`,\n+ filename: webpackOptions.jsOutputFilename,\n+ chunkFilename: webpackOptions.jsOutputChunkFilename,\ndevtoolModuleFilenameTemplate: info =>\npath.resolve(info.resourcePath).replace(/\\\\/g, '/'),\n};\n@@ -776,8 +795,8 @@ module.exports = (\nconfig.output = {\npath: paths.appBuildPublic,\npublicPath: dotenv.raw.PUBLIC_PATH || '/',\n- filename: `${razzleOptions.jsPrefix}/[name].[contenthash:8].js`,\n- chunkFilename: `${razzleOptions.jsPrefix}/[name].[contenthash:8].chunk.js`,\n+ filename: webpackOptions.jsOutputFilename,\n+ chunkFilename: webpackOptions.jsOutputChunkFilename,\nlibraryTarget: 'var',\n};\n",
        "date": "10.12.2020 20:51:49",
        "repo": "jaredpalmer/razzle",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor webpack configuration for improved file output naming and organization."
    },
    {
        "msg": "feat(razzle): pass context to notNodeExternalResMatch",
        "diff": "diff --git a/packages/razzle/config/createConfigAsync.js b/packages/razzle/config/createConfigAsync.js @@ -331,7 +331,7 @@ module.exports = (\nconst nodeExternalsFunc = (context, request, callback) => {\nif (webpackOptions.notNodeExternalResMatch &&\n- webpackOptions.notNodeExternalResMatch(request)\n+ webpackOptions.notNodeExternalResMatch(request, context)\n) {\nif (debugNodeExternals) {\nconsole.log(`Not externalizing ${request} (using notNodeExternalResMatch)`);\n",
        "date": "02.01.2021 23:00:03",
        "repo": "jaredpalmer/razzle",
        "type": "feat",
        "chatgpt_zeroshot": "Update notNodeExternalResMatch function to accept context parameter"
    },
    {
        "msg": "feat(razzle): add webpackOptions.terserPluginOptions in node production",
        "diff": "diff --git a/packages/razzle/config/createConfigAsync.js b/packages/razzle/config/createConfigAsync.js @@ -172,6 +172,7 @@ module.exports = (\nif (IS_DEV) {\n} else {\n+ webpackOptions.terserPluginOptions = {};\n}\n}\n@@ -608,21 +609,26 @@ module.exports = (\n// We define environment variables that can be accessed globally in our\nnew webpack.DefinePlugin(webpackOptions.definePluginOptions),\n];\n- // in dev mode emitting one huge server file on every save is very slow\n+\n+ config.entry = {\n+ server: [paths.appServerIndexJs],\n+ };\n+\nif (IS_PROD) {\n// Prevent creating multiple chunks for the server\n+ // in dev mode emitting one huge server file on every save is very slow\n+\nconfig.plugins.push(\nnew webpack.optimize.LimitChunkCountPlugin({\nmaxChunks: 1,\n})\n);\n+ config.optimization = {\n+ minimize: true,\n+ minimizer: [\n+ new TerserPlugin(webpackOptions.terserPluginOptions)\n+ ],\n}\n-\n- config.entry = {\n- server: [paths.appServerIndexJs],\n- };\n-\n- if (IS_PROD) {\nif (hasStaticExportJs) {\nconfig.entry.static_export = [paths.appStaticExportJs];\n}\n",
        "date": "14.01.2021 23:30:02",
        "repo": "jaredpalmer/razzle",
        "type": "feat",
        "chatgpt_zeroshot": "Optimize server build by adding TerserPlugin and minimizing chunks"
    },
    {
        "msg": "feat(razzle): add config debug flags",
        "diff": "diff --git a/packages/razzle/config/createConfigAsync.js b/packages/razzle/config/createConfigAsync.js @@ -4,6 +4,7 @@ const fs = require('fs-extra');\nconst path = require('path');\nconst webpack = require('webpack');\nconst crypto = require('crypto');\n+const util = require('util');\nconst TerserPlugin = require('terser-webpack-plugin');\nconst HtmlWebpackPlugin = require('html-webpack-plugin');\nconst StartServerPlugin = require('razzle-start-server-webpack-plugin');\n@@ -337,6 +338,11 @@ module.exports = (\n});\n}\n+ if (razzleOptions.debug.options) {\n+ console.log(`Printing webpack options for ${target} target`);\n+ console.log(util.inspect(webpackOptions, {depth: null}));\n+ }\n+\nconst debugNodeExternals = razzleOptions.debug.nodeExternals;\nconst nodeExternalsFunc = (context, request, callback) => {\n@@ -950,7 +956,10 @@ module.exports = (\npaths,\n});\n}\n-\n+ if (razzleOptions.debug.config) {\n+ console.log(`Printing webpack config for ${target} target`);\n+ console.log(util.inspect(webpackConfig, {depth: null}));\n+ }\nresolve(config);\n});\n};\n",
        "date": "01.02.2021 16:41:49",
        "repo": "jaredpalmer/razzle",
        "type": "feat",
        "chatgpt_zeroshot": "Add debug logging for webpack options and config in createConfigAsync module"
    },
    {
        "msg": "feat(babel-loader): add supportsStaticESM option",
        "diff": "diff --git a/packages/razzle/config/babel-loader/razzle-babel-loader.js b/packages/razzle/config/babel-loader/razzle-babel-loader.js @@ -64,6 +64,7 @@ module.exports = babelLoader.custom(function(babel) {\nisServer: opts.isServer,\nisModern: opts.isModern,\nhasModern: opts.hasModern,\n+ supportsStaticESM: opts.supportsStaticESM,\ndevelopment: opts.development,\nshouldUseReactRefresh: opts.shouldUseReactRefresh,\n};\n@@ -101,6 +102,7 @@ module.exports = babelLoader.custom(function(babel) {\ndelete loader.distDir;\ndelete loader.isModern;\ndelete loader.hasModern;\n+ delete loader.supportsStaticESM;\ndelete loader.development;\ndelete loader.shouldUseReactRefresh;\nreturn { loader, custom };\n@@ -112,6 +114,7 @@ module.exports = babelLoader.custom(function(babel) {\nconst isServer = customOptions.isServer;\nconst isModern = customOptions.isModern;\nconst hasModern = customOptions.hasModern;\n+ const supportsStaticESM = customOptions.supportsStaticESM;\nconst development = customOptions.development;\nconst shouldUseReactRefresh = customOptions.shouldUseReactRefresh;\n@@ -134,6 +137,7 @@ module.exports = babelLoader.custom(function(babel) {\npresetOptions.caller.isServer = isServer;\npresetOptions.caller.isModern = isModern;\npresetOptions.caller.isDev = development;\n+ presetOptions.caller.supportsStaticESM = supportsStaticESM;\nconst emitWarning = this.emitWarning.bind(this);\nObject.defineProperty(presetOptions.caller, 'onWarning', {\n",
        "date": "01.02.2021 18:29:11",
        "repo": "jaredpalmer/razzle",
        "type": "feat",
        "chatgpt_zeroshot": "Add support for static ESM in babel loader configuration"
    },
    {
        "msg": "feat(razzle): allow toggling usage of null loader for node target",
        "diff": "diff --git a/packages/razzle/config/createConfigAsync.js b/packages/razzle/config/createConfigAsync.js @@ -322,6 +322,8 @@ module.exports = (\n],\n};\n+ webpackOptions.nullNodeCss = false;\n+\nfor (const [plugin, pluginOptions] of plugins) {\n// Check if .modifyWebpackConfig is a function.\n// If it is, call it on the configs we created.\n@@ -532,7 +534,9 @@ module.exports = (\n? // Style-loader does not work in Node.js without some crazy\n// magic. Luckily we just need css-loader.\n[\n- {\n+ webpackOptions.nullNodeCss ? {\n+ loader: require.resolve('null-loader')\n+ } : {\nloader: require.resolve('css-loader'),\noptions: {\nimportLoaders: 1,\n",
        "date": "13.02.2021 00:22:55",
        "repo": "jaredpalmer/razzle",
        "type": "feat",
        "chatgpt_zeroshot": "Add option to disable nullNodeCss in webpack config"
    },
    {
        "msg": "feat(razzle): add noninteractive env var",
        "diff": "diff --git a/packages/razzle/scripts/build.js b/packages/razzle/scripts/build.js @@ -39,7 +39,7 @@ loadRazzleConfig(webpack).then(\nasync ({ razzle, razzleOptions, webpackObject, plugins, paths }) => {\nconst verbose = razzleOptions.verbose;\n- if (process.env.NODE_ENV === \"production\" && !cliArgs['noninteractive']) {\n+ if (process.env.NODE_ENV === \"production\" && (process.env.RAZZLE_NONINTERACTIVE !== \"true\" && !cliArgs['noninteractive'])) {\nawait inquirer.prompt([\n{\ntype: 'confirm',\n",
        "date": "22.02.2021 01:06:38",
        "repo": "jaredpalmer/razzle",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor build script to use RAZZLE_NONINTERACTIVE environment variable"
    },
    {
        "msg": "feat(razzle): disable prompt on CI",
        "diff": "diff --git a/packages/razzle/scripts/build.js b/packages/razzle/scripts/build.js @@ -39,7 +39,7 @@ loadRazzleConfig(webpack).then(\nasync ({ razzle, razzleOptions, webpackObject, plugins, paths }) => {\nconst verbose = razzleOptions.verbose;\n- if (process.env.NODE_ENV === \"production\" && (process.env.RAZZLE_NONINTERACTIVE !== \"true\" && !cliArgs['noninteractive'])) {\n+ if (!process.env.CI && process.env.NODE_ENV === \"production\" && (process.env.RAZZLE_NONINTERACTIVE !== \"true\" && !cliArgs['noninteractive'])) {\nawait inquirer.prompt([\n{\ntype: 'confirm',\n",
        "date": "22.02.2021 10:58:07",
        "repo": "jaredpalmer/razzle",
        "type": "feat",
        "chatgpt_zeroshot": "Fix conditional check for CI environment in build script"
    },
    {
        "msg": "feat(create-razzle-app): make verbose show install",
        "diff": "diff --git a/packages/create-razzle-app/lib/utils/install.js b/packages/create-razzle-app/lib/utils/install.js @@ -22,7 +22,7 @@ module.exports = function install(opts) {\nconsole.log(messages.installing(packages));\nprocess.chdir(projectPath);\n- const stdio = 'pipe';\n+ const stdio = opts.verbose ? 'inherit' : 'pipe';\nreturn new Promise(function(resolve, reject) {\nconst stopInstallSpinner = output.wait('Installing modules');\n",
        "date": "06.03.2021 20:10:59",
        "repo": "jaredpalmer/razzle",
        "type": "feat",
        "chatgpt_zeroshot": "Update install.js to use verbose option for stdio output"
    },
    {
        "msg": "feat: add support for dev build",
        "diff": "diff --git a/packages/razzle/config/createConfigAsync.js b/packages/razzle/config/createConfigAsync.js @@ -78,6 +78,7 @@ module.exports = (\nconst IS_SERVERLESS = /serverless/.test(razzleOptions.buildType);\nconst IS_PROD = env === 'prod';\nconst IS_DEV = env === 'dev';\n+ const IS_DEV_ENV = process.env.NODE_ENV === 'development';\n// Contains various versions of the Webpack SplitChunksPlugin used in different build types\nconst splitChunksConfigs = {\n@@ -465,13 +466,13 @@ module.exports = (\n// This is our base webpack config.\nlet config = {\n// Set webpack mode:\n- mode: IS_DEV ? 'development' : 'production',\n+ mode: IS_DEV || IS_DEV_ENV ? 'development' : 'production',\n// Set webpack context to the current apps directory\ncontext: paths.appPath,\n// Specify target (either 'node' or 'web')\ntarget: target,\n// Controversially, decide on sourcemaps.\n- devtool: IS_DEV ? 'cheap-module-source-map' : razzleOptions.enableSourceMaps ? 'source-map' : false,\n+ devtool: IS_DEV || IS_DEV_ENV ? 'cheap-module-source-map' : razzleOptions.enableSourceMaps ? 'source-map' : false,\n// We need to tell webpack how to resolve both Razzle's node_modules and\n// the users', so we use resolve and resolveLoader.\nresolve: {\n@@ -674,7 +675,7 @@ module.exports = (\nif (IS_PROD) {\n// Prevent creating multiple chunks for the server\n// in dev mode emitting one huge server file on every save is very slow\n-\n+ if (!IS_DEV_ENV) {\nconfig.plugins.push(\nnew webpack.optimize.LimitChunkCountPlugin({\nmaxChunks: 1,\n@@ -686,6 +687,7 @@ module.exports = (\nnew TerserPlugin(webpackOptions.terserPluginOptions)\n],\n}\n+ }\nif (webpackMajor === 5) {\nconfig.optimization.emitOnErrors = razzleOptions.emitOnErrors;\n} else {\n@@ -913,8 +915,8 @@ module.exports = (\n// Define production environment vars\nnew webpack.DefinePlugin(webpackOptions.definePluginOptions),\nminiCssExtractPlugin,\n- webpackMajor === 5 ? null : new webpack.HashedModuleIdsPlugin(),\n- new webpack.optimize.AggressiveMergingPlugin(),\n+ IS_DEV_ENV || webpackMajor === 5 ? null : new webpack.HashedModuleIdsPlugin(),\n+ IS_DEV_ENV ? null : new webpack.optimize.AggressiveMergingPlugin(),\nhasPublicDir && new CopyPlugin({\npatterns: [\n{\n@@ -929,6 +931,7 @@ module.exports = (\n}),\n].filter(x => x);\n+ if (!IS_DEV_ENV) {\nconfig.optimization = {\nsplitChunks: webpackOptions.splitChunksConfig,\nmoduleIds: webpackMajor === 5 ? 'deterministic' : 'hashed',\n@@ -961,6 +964,7 @@ module.exports = (\n})\n],\n}\n+ }\nif (webpackMajor === 5) {\nconfig.optimization.emitOnErrors = razzleOptions.emitOnErrors;\n} else {\n",
        "date": "21.08.2021 18:32:39",
        "repo": "jaredpalmer/razzle",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor webpack config to include IS_DEV_ENV flag for development environment detection"
    },
    {
        "msg": "feat: :sparkles: extract headings from page",
        "diff": "diff --git a/src/routes/[slug].svelte b/src/routes/[slug].svelte <script>\nimport { format } from 'date-fns'\n+ import { onMount } from 'svelte'\nexport let Post, metadata\nlet created = format(new Date(metadata.createdDate), 'yyy MMM do')\nlet updated = format(new Date(metadata.updatedDate), 'yyy MMM do')\n+\n+ onMount(() => {\n+ let headingNodeList\n+ let headings\n+ headingNodeList = document.querySelectorAll('h2')\n+\n+ headings = Array.from(headingNodeList).map(h2 => {\n+ return {\n+ label: h2.innerText,\n+ href: `#${h2.id}`,\n+ }\n+ })\n+ })\n</script>\n<h1 class=\"font-medium text-5xl\">\n",
        "date": "11.07.2021 15:04:02",
        "repo": "spences10/cheat-sheets",
        "type": "feat",
        "chatgpt_zeroshot": "Add onMount hook to dynamically generate table of contents for headings in post page"
    },
    {
        "msg": "feat: :sparkles: add Fathom tracking",
        "diff": "diff --git a/src/app.html b/src/app.html name=\"viewport\"\ncontent=\"width=device-width, initial-scale=1\"\n/>\n+ <script\n+ src=\"https://4pvafmq.cheatsheets.xyz/script.js\"\n+ data-site=\"WERPEKMT\"\n+ defer\n+ ></script>\n%svelte.head%\n</head>\n<body>\n",
        "date": "12.07.2021 08:42:23",
        "repo": "spences10/cheat-sheets",
        "type": "feat",
        "chatgpt_zeroshot": "Add external script for analytics tracking."
    },
    {
        "msg": "feat: :memo: credit Nicky for contribution",
        "diff": "diff --git a/sheets/javascript.md b/sheets/javascript.md @@ -467,6 +467,14 @@ document.getElementsByTagName('html')[0].style['font-size'] = '10px'\n## Checking for `window`\n-[Optional chaining](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Optional_chaining) can not be used on `window`.\n-It will throw an error when used on any undeclared root object, so no escaping the `typeof window == 'undefined'` check with a clever `?.`.\n+Thanks to [Nicky Meuleman] for this one.\n+[Optional chaining] can not be used on `window`. It will throw an\n+error when used on any undeclared root object, so no escaping the\n+`typeof window == 'undefined'` check with a clever `?.`.\n+\n+<!-- Links -->\n+\n+[nicky meuleman]: https://twitter.com/NMeuleman\n+[optional chaining]:\n+ https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Optional_chaining\n",
        "date": "24.08.2021 18:34:41",
        "repo": "spences10/cheat-sheets",
        "type": "feat",
        "chatgpt_zeroshot": "Add note about using optional chaining with window object"
    },
    {
        "msg": "feat(docs): restore enum expansion on docs page",
        "diff": "diff --git a/docs/app/Components/ComponentDoc/ComponentProps.js b/docs/app/Components/ComponentDoc/ComponentProps.js @@ -2,6 +2,12 @@ import _ from 'lodash'\nimport React, { Component, PropTypes } from 'react'\nimport { Label, Table } from 'src'\n+import { SUI } from 'src/lib'\n+\n+const descriptionExtraStyle = {\n+ fontSize: '0.95em',\n+ color: '#777',\n+}\n/**\n* Displays a table of a Component's PropTypes.\n@@ -20,6 +26,19 @@ export default class ComponentProps extends Component {\nmeta: PropTypes.object,\n}\n+ state = {\n+ showEnumsFor: {},\n+ }\n+\n+ toggleEnumsFor = (prop) => () => {\n+ this.setState({\n+ showEnumsFor: {\n+ ...this.state.showEnumsFor,\n+ [prop]: !this.state.showEnumsFor[prop],\n+ },\n+ })\n+ }\n+\nrenderName = item => <code>{item.name}</code>\nrequiredRenderer = item => item.required && <Label size='mini' color='red' circular>required</Label>\n@@ -65,6 +84,61 @@ export default class ComponentProps extends Component {\n)\n}\n+ expandEnums = (value) => {\n+ const parts = value.split('.')\n+ if (parts[0] === 'SUI') {\n+ return SUI[parts[1]]\n+ }\n+ return value\n+ }\n+\n+ renderEnums = (item) => {\n+ if (item.type !== '{enum}') return\n+\n+ const { showEnumsFor } = this.state\n+ const truncateAt = 30\n+\n+ if (!item.value) return null\n+\n+ const values = [].concat(item.value).reduce((accumulator, v) =>\n+ accumulator.concat(this.expandEnums(_.trim(v.value || v, '.\\''))),\n+ [])\n+\n+ // show all if there are few\n+ if (values.length < truncateAt) {\n+ return (\n+ <p style={descriptionExtraStyle}>\n+ <strong>Enums: </strong>\n+ {values.join(', ')}\n+ </p>\n+ )\n+ }\n+\n+ // add button to show more when there are many values and it is not toggled\n+ if (!showEnumsFor[item.name]) {\n+ return (\n+ <p style={descriptionExtraStyle}>\n+ <strong>Enums: </strong>\n+ <a style={{ cursor: 'pointer' }} onClick={this.toggleEnumsFor(item.name)}>\n+ Show all {values.length}\n+ </a>\n+ <div>{values.slice(0, truncateAt - 1).join(', ')}...</div>\n+ </p>\n+ )\n+ }\n+\n+ // add \"show more\" button when there are many\n+ return (\n+ <p style={descriptionExtraStyle}>\n+ <strong>Enums: </strong>\n+ <a style={{ cursor: 'pointer' }} onClick={this.toggleEnumsFor(item.name)}>\n+ Show less\n+ </a>\n+ <div>{values.join(', ')}</div>\n+ </p>\n+ )\n+ }\n+\nrender() {\nconst { props: propsDefinition } = this.props\nconst content = _.sortBy(_.map(propsDefinition, (config, name) => {\n@@ -109,6 +183,7 @@ export default class ComponentProps extends Component {\n<Table.Cell>\n{item.description && <p>{item.description}</p>}\n{this.renderFunctionSignature(item)}\n+ {this.renderEnums(item)}\n</Table.Cell>\n</Table.Row>\n))}\n",
        "date": "02.02.2017 04:02:18",
        "repo": "semantic-org/semantic-ui-react",
        "type": "feat",
        "chatgpt_zeroshot": "Add functionality to display enums for component props"
    },
    {
        "msg": "feat(Input): add `autoCapitalize` to html input props\nfeat(Input): add `autoCapitalize` to html input props",
        "diff": "diff --git a/src/elements/Input/Input.js b/src/elements/Input/Input.js @@ -22,7 +22,7 @@ export const htmlInputPropNames = [\n'selected', 'defaultValue', 'defaultChecked',\n// LIMITED HTML PROPS\n- 'autoComplete', 'autoFocus', 'checked', 'form', 'max', 'maxLength', 'min',\n+ 'autoCapitalize', 'autoComplete', 'autoFocus', 'checked', 'form', 'max', 'maxLength', 'min',\n'name', 'pattern', 'placeholder', 'readOnly', 'required', 'step', 'type', 'value',\n// Heads Up!\n",
        "date": "13.02.2017 19:27:33",
        "repo": "semantic-org/semantic-ui-react",
        "type": "feat",
        "chatgpt_zeroshot": "Add 'autoCapitalize' prop to htmlInputPropNames list"
    },
    {
        "msg": "feat(Input): add autoCorrect to Input props",
        "diff": "diff --git a/src/lib/htmlInputPropsUtils.js b/src/lib/htmlInputPropsUtils.js @@ -5,8 +5,8 @@ export const htmlInputAttrs = [\n'selected', 'defaultValue', 'defaultChecked',\n// LIMITED HTML PROPS\n- 'autoCapitalize', 'autoComplete', 'autoFocus', 'checked', 'form', 'max', 'maxLength', 'min', 'multiple',\n- 'name', 'pattern', 'placeholder', 'readOnly', 'required', 'step', 'type', 'value',\n+ 'autoCapitalize', 'autoComplete', 'autoCorrect', 'autoFocus', 'checked', 'form', 'max', 'maxLength', 'min',\n+ 'multiple', 'name', 'pattern', 'placeholder', 'readOnly', 'required', 'step', 'type', 'value',\n// Heads Up!\n// Do not pass disabled, it duplicates the SUI CSS opacity rule.\n",
        "date": "13.04.2017 23:09:07",
        "repo": "semantic-org/semantic-ui-react",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor htmlInputPropsUtils.js to include 'autoCorrect' prop in htmlInputAttrs list"
    },
    {
        "msg": "feat(typescript): Export generics types",
        "diff": "diff --git a/index.d.ts b/index.d.ts @@ -111,6 +111,9 @@ export { default as StepDescription, StepDescriptionProps } from './dist/commonj\nexport { default as StepGroup, StepGroupProps } from './dist/commonjs/elements/Step/StepGroup';\nexport { default as StepTitle, StepTitleProps } from './dist/commonjs/elements/Step/StepTitle';\n+// Generics\n+export * from './dist/commonjs';\n+\n// Modules\nexport { default as Accordion, AccordionProps } from './dist/commonjs/modules/Accordion/Accordion';\nexport { default as AccordionContent, AccordionContentProps } from './dist/commonjs/modules/Accordion/AccordionContent';\n",
        "date": "25.05.2017 00:04:22",
        "repo": "semantic-org/semantic-ui-react",
        "type": "feat",
        "chatgpt_zeroshot": "Add generics export in index.d.ts"
    },
    {
        "msg": "feat(Portal): use Ref for handling trigger refs",
        "diff": "diff --git a/src/addons/Portal/Portal.js b/src/addons/Portal/Portal.js import _ from 'lodash'\nimport PropTypes from 'prop-types'\n-import { Children, cloneElement } from 'react'\n+import React, { Children, cloneElement } from 'react'\nimport ReactDOM from 'react-dom'\nimport {\n@@ -11,6 +11,7 @@ import {\nmakeDebugger,\nMETA,\n} from '../../lib'\n+import Ref from '../Ref'\nconst debug = makeDebugger('portal')\n@@ -414,24 +415,23 @@ class Portal extends Component {\n_.invoke(this.props, 'onUnmount', null, this.props)\n}\n- handleRef = (c) => {\n- // TODO: Replace findDOMNode with Ref component when it will be merged\n- this.triggerNode = ReactDOM.findDOMNode(c) // eslint-disable-line react/no-find-dom-node\n- }\n+ handleRef = c => (this.triggerNode = c)\nrender() {\nconst { trigger } = this.props\nif (!trigger) return null\n-\n- return cloneElement(trigger, {\n- ref: this.handleRef,\n+ return (\n+ <Ref innerRef={this.handleRef}>\n+ {cloneElement(trigger, {\nonBlur: this.handleTriggerBlur,\nonClick: this.handleTriggerClick,\nonFocus: this.handleTriggerFocus,\nonMouseLeave: this.handleTriggerMouseLeave,\nonMouseEnter: this.handleTriggerMouseEnter,\n- })\n+ })}\n+ </Ref>\n+ )\n}\n}\n",
        "date": "20.10.2017 03:33:11",
        "repo": "semantic-org/semantic-ui-react",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor Portal component to use Ref component for handling DOM nodes"
    },
    {
        "msg": "feat(customPropTypes): allow to pass Symbol to `as`",
        "diff": "diff --git a/src/lib/customPropTypes.js b/src/lib/customPropTypes.js @@ -8,11 +8,11 @@ const typeOf = (...args) => Object.prototype.toString.call(...args)\n* Ensure a component can render as a give prop value.\n*/\nexport const as = (...args) => PropTypes.oneOfType([\n- PropTypes.string,\nPropTypes.func,\n+ PropTypes.string,\n+ PropTypes.symbol,\n])(...args)\n-\n/**\n* Similar to PropTypes.oneOf but shows closest matches.\n* Word order is ignored allowing `left chevron` to match `chevron left`.\n",
        "date": "10.01.2018 06:38:50",
        "repo": "semantic-org/semantic-ui-react",
        "type": "feat",
        "chatgpt_zeroshot": "Add support for PropTypes.symbol in customPropTypes as function."
    },
    {
        "msg": "feat(TextArea): export StrictTextAreaProps typing",
        "diff": "diff --git a/index.d.ts b/index.d.ts @@ -38,7 +38,7 @@ export {\nStrictResponsiveProps,\n} from './dist/commonjs/addons/Responsive'\nexport { default as Select, SelectProps } from './dist/commonjs/addons/Select'\n-export { default as TextArea, TextAreaProps } from './dist/commonjs/addons/TextArea'\n+export { default as TextArea, TextAreaProps, StrictTextAreaProps } from './dist/commonjs/addons/TextArea'\nexport {\ndefault as TransitionablePortal,\nTransitionablePortalProps,\n",
        "date": "08.12.2019 13:39:53",
        "repo": "semantic-org/semantic-ui-react",
        "type": "feat",
        "chatgpt_zeroshot": "Add StrictTextAreaProps to TextArea export"
    },
    {
        "msg": "feat(cli): Added CLI support for the --global-var option :tada:",
        "diff": "diff --git a/lib/cli/index.js b/lib/cli/index.js @@ -314,7 +314,24 @@ var _ = require('lodash'),\nvar runParser = new argparse.ArgumentParser({\ndebug: true,\naddHelp: false\n- });\n+ }),\n+\n+ /**\n+ * Parses `=` separated key-value pairs into Postman variable list like arrays. `=` characters in values are\n+ * also supported.\n+ *\n+ * @param {String} arg - The argument provided to `--global-var`.\n+ * @returns {{key, value}} - The object representation of the current CLI variable.\n+ * @throws {Error} - An error is thrown for arguments that are not in the form foo=bar.\n+ */\n+ cliVar = function (arg) {\n+ var eqIndex = arg.indexOf('=');\n+\n+ if (eqIndex === -1) { throw new Error('CLI global vars must be specified in a `key=value` format'); }\n+\n+ // This is done instead of splitting by `=` to avoid chopping off `=` that could be present in the value\n+ return { key: arg.slice(0, eqIndex), value: arg.slice(eqIndex + 1) };\n+ };\nrunParser.addArgument('collection', {\nhelp: 'URL or path to a Postman Collection'\n@@ -398,6 +415,12 @@ var _ = require('lodash'),\ndefaultValue: false\n});\n+ runParser.addArgument(['--global-var'], {\n+ help: 'Allows the specification of global variables via the command line, in a key=value format',\n+ type: cliVar,\n+ action: 'append'\n+ });\n+\nreturn runParser;\n},\n",
        "date": "24.07.2017 14:33:45",
        "repo": "postmanlabs/newman",
        "type": "feat",
        "chatgpt_zeroshot": "Add support for parsing key-value pairs into Postman variable list arrays via CLI global variables."
    },
    {
        "msg": "feat: logo and header link to home page",
        "diff": "diff --git a/src/App.vue b/src/App.vue <div class=\"container mb-4 mt-4\">\n<div class=\"mb-4\">\n<h1 class=\"logo\">\n- <img alt=\"Logo\" src=\"./assets/logo.png\" width=\"50\">\n+ <router-link to=\"/\">\n+ <img alt=\"Logo\" src=\"./assets/logo.png\" width=\"50\" />\nOpen Drinks\n+ </router-link>\n</h1>\n</div>\n<footer class=\"container mt-4 text-center\">\n<hr />\n- <div>View the source or contribute a drink recipe on <a href=\"https://github.com/alfg/opendrinks\">GitHub</a>!</div>\n+ <div>\n+ View the source or contribute a drink recipe on\n+ <a\n+ href=\"https://github.com/alfg/opendrinks\"\n+ >GitHub</a>!\n+ </div>\n<a href=\"https://www.netlify.com\">\n<img src=\"https://www.netlify.com/img/global/badges/netlify-light.svg\" alt=\"Netlify\" />\n</a>\n<style>\n#app {\n- font-family: 'Avenir', Helvetica, Arial, sans-serif;\n+ font-family: \"Avenir\", Helvetica, Arial, sans-serif;\n-webkit-font-smoothing: antialiased;\n-moz-osx-font-smoothing: grayscale;\ncolor: #2c3e50;\n}\n.logo {\n- font-family: 'Pacifico', 'cursive';\n+ font-family: \"Pacifico\", \"cursive\";\n+}\n+.logo a {\n+ text-decoration: none;\n+ color: inherit;\n}\n</style>\n",
        "date": "01.10.2019 10:15:23",
        "repo": "alfg/opendrinks",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor logo and footer styling in App.vue"
    },
    {
        "msg": "feat: exclusive search && alphabetical order",
        "diff": "diff --git a/src/components/RecipeFind.vue b/src/components/RecipeFind.vue @@ -60,21 +60,33 @@ export default {\n}\nif (isIngredientsEnabled) {\n- filtered = this.data\n- .filter(recipe => recipe.ingredients\n- .some(i => searchParts.includes(i.ingredient.toLowerCase())));\n+ filtered = this.data.filter(recipe =>\n+ searchParts.every(s =>\n+ recipe.ingredients.some(i =>\n+ i.ingredient.toLowerCase().includes(s.toLowerCase())\n+ )\n+ )\n+ );\n}\nif (isKeywordsEnabled) {\n- filtered = this.data\n- .filter(recipe => recipe.keywords && recipe.keywords\n- .some(i => searchParts.includes(i.toLowerCase())));\n+ filtered = this.data.filter(recipe =>\n+ searchParts.every(\n+ s =>\n+ recipe.keywords &&\n+ recipe.keywords.some(k =>\n+ k.toLowerCase().includes(s.toLowerCase())\n+ )\n+ )\n+ );\n}\n// Sort the results.\nfiltered = filtered.sort((recipeA, recipeB) => {\n// Name-matches to the top if the user wanted to find a drink based on the name\nconst hasName = recipeB.name.toLowerCase().indexOf(this.search.toLowerCase()) > -1 ? 1 : -1;\n+ const alphabetical =\n+ recipeB.name.toLowerCase() > recipeB.name.toLowerCase() ? -1 : 1;\nreturn !isNameEnabled ? 0 : hasName;\n});\n",
        "date": "06.10.2019 23:01:52",
        "repo": "alfg/opendrinks",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor search functionality in RecipeFind.vue to improve filtering and sorting."
    },
    {
        "msg": "feat: added new empty favorites test",
        "diff": "diff --git a/tests/unit/views/Favorites.spec.js b/tests/unit/views/Favorites.spec.js @@ -7,7 +7,7 @@ import Favorites from '@/views/Favorites.vue';\nconst localVue = createLocalVue();\nlocalVue.use(BootstrapVue);\n-describe('Favorites', () => {\n+describe('Favorites (Populated)', () => {\nlet wrapper;\nbeforeEach(() => {\n@@ -34,3 +34,23 @@ describe('Favorites', () => {\nexpect(favs.length === 1).toBe(true);\n});\n});\n+\n+describe('Favorites (Empty)', () => {\n+ let wrapper;\n+\n+ beforeEach(() => {\n+ wrapper = mount(Favorites, {\n+ localVue,\n+ router,\n+ });\n+ });\n+\n+ test('show correct empty state', () => {\n+ localStorage.setItem('favorites', JSON.stringify([]));\n+ wrapper = mount(Favorites, {\n+ localVue,\n+ router,\n+ });\n+ expect(wrapper.find('.alert-info').html()).toContain(\"You don't have any favorite drinks\");\n+ });\n+});\n",
        "date": "29.10.2019 20:35:06",
        "repo": "alfg/opendrinks",
        "type": "feat",
        "chatgpt_zeroshot": "Add tests for empty state in Favorites view"
    },
    {
        "msg": "feat: query blocks with a height greater than 335",
        "diff": "diff --git a/frontend/leaderboard/src/Postgres.re b/frontend/leaderboard/src/Postgres.re @@ -15,7 +15,9 @@ LEFT JOIN user_commands AS uc ON uc.id = buc.user_command_id\nLEFT JOIN public_keys AS pk2 ON ic.receiver_id = pk2.id\nLEFT JOIN public_keys AS pk3 ON uc.fee_payer_id = pk3.id\nLEFT JOIN public_keys AS pk4 ON uc.source_id = pk4.id\n-LEFT JOIN public_keys AS pk5 ON uc.receiver_id = pk5.id\";\n+LEFT JOIN public_keys AS pk5 ON uc.receiver_id = pk5.id\n+\n+WHERE height >= 335\";\nlet createPool = pgConn => {\nmakePool({connectionString: pgConn, connectionTimeoutMillis: 5000});\n",
        "date": "18.11.2020 14:35:41",
        "repo": "minaprotocol/mina",
        "type": "feat",
        "chatgpt_zeroshot": "Add height condition to SQL query in Postgres.re"
    },
    {
        "msg": "feat: Can filter based on public key",
        "diff": "diff --git a/frontend/leaderboard/src/Metrics.re b/frontend/leaderboard/src/Metrics.re @@ -238,6 +238,9 @@ let calculateAllUsers = metrics => {\nlet echoBotPublicKeys = [\n\"B62qndJi5mnRoBZ8SAYDM1oR2SgAk5WpZC8hGpJUZ4e64kDHGbFMeLJ\",\n];\n+\n+let excludePublicKeys = [];\n+\nlet calculateMetrics = blocks => {\nlet blocksCreated = getBlocksCreatedByUser(blocks);\nlet transactionSent = getTransactionSentByUser(blocks);\n@@ -257,6 +260,7 @@ let calculateMetrics = blocks => {\nthrowAwayValues(coinbaseReceiverChallenge),\nthrowAwayValues(createAndSendToken),\n])\n+ |> StringMap.filter((key, _) => {!List.mem(key, excludePublicKeys)})\n|> StringMap.mapi((key, _) =>\n{\nTypes.Metrics.blocksCreated: StringMap.find_opt(key, blocksCreated),\n",
        "date": "29.12.2020 17:15:41",
        "repo": "minaprotocol/mina",
        "type": "feat",
        "chatgpt_zeroshot": "Add functionality to exclude specific public keys from metrics calculation"
    },
    {
        "msg": "feat: Added ties to top N points",
        "diff": "diff --git a/frontend/leaderboard/src/Points.re b/frontend/leaderboard/src/Points.re @@ -40,19 +40,32 @@ let applyTopNPoints =\nArray.sort(f, metricsArray);\nBelt.Array.reverseInPlace(metricsArray);\n- metricsArray |> Array.iter(Js.log);\n+ metricsArray\n+ |> Array.iteri((index, metric) => {\n+ Js.log(\"index: \" ++ string_of_int(index));\n+ Js.log(\"metric: \");\n+ Js.log(metric);\n+ Js.log(\"\\n\");\n+ });\nlet counter = ref(0);\nlet topNArrayWithPoints =\nmetricsArray\n- |> Array.mapi((i, (username, _)) =>\n+ |> Array.mapi((i, (username, metric)) =>\nif (counter^ >= Array.length(threshholdPointsList)) {\n(username, 0);\n} else {\nlet (place, points) = threshholdPointsList[counter^];\n- if (place == i) {\n+ if (i < Array.length(metricsArray) - 1) {\n+ let challengeMetric = getMetricValue(metric);\n+ let (_, nextMetric) = metricsArray[i + 1];\n+ let nextChallengeMetric = getMetricValue(nextMetric);\n+\n+ // handle ties by comparing to the next metric\n+ if (challengeMetric !== nextChallengeMetric && i >= place) {\ncounter := counter^ + 1;\n};\n+ };\n(username, points);\n}\n);\n",
        "date": "30.01.2021 12:50:55",
        "repo": "minaprotocol/mina",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor applyTopNPoints function to handle ties and log index and metric values."
    },
    {
        "msg": "feat: moves \"Using password from...\" to stderr",
        "diff": "diff --git a/src/lib/cli_lib/commands.ml b/src/lib/cli_lib/commands.ml @@ -7,7 +7,7 @@ let generate_keypair =\n(let open Command.Let_syntax in\nlet env = Secrets.Keypair.env in\nif Option.is_some (Sys.getenv env) then\n- printf \"Using password from environment variable %s\\n\" env ;\n+ eprintf \"Using password from environment variable %s\\n\" env ;\nlet%map_open privkey_path = Flag.privkey_write_path in\nExceptions.handle_nicely\n@@ fun () ->\n@@ -150,7 +150,7 @@ module Vrf = struct\n(let open Command.Let_syntax in\nlet env = Secrets.Keypair.env in\nif Option.is_some (Sys.getenv env) then\n- printf \"Using password from environment variable %s\\n\" env ;\n+ eprintf \"Using password from environment variable %s\\n\" env ;\nlet%map_open privkey_path = Flag.privkey_write_path\nand global_slot =\nflag \"--global-slot\" ~doc:\"NUM Global slot to evaluate the VRF for\"\n@@ -241,7 +241,7 @@ module Vrf = struct\n(let open Command.Let_syntax in\nlet env = Secrets.Keypair.env in\nif Option.is_some (Sys.getenv env) then\n- printf \"Using password from environment variable %s\\n\" env ;\n+ eprintf \"Using password from environment variable %s\\n\" env ;\nlet%map_open privkey_path = Flag.privkey_write_path in\nExceptions.handle_nicely\n@@ fun () ->\n",
        "date": "19.08.2021 10:26:03",
        "repo": "minaprotocol/mina",
        "type": "feat",
        "chatgpt_zeroshot": "Update printf to eprintf for better error handling in keypair generation and VRF evaluation."
    },
    {
        "msg": "feat: Remove unused declares",
        "diff": "diff --git a/frontend/mina-signer/src/TSTypes.ts b/frontend/mina-signer/src/TSTypes.ts export type uint32 = number | bigint | string;\nexport type uint64 = number | bigint | string;\n-export declare type publicKey = string;\n-export declare type privateKey = string;\n-export declare type network = \"mainnet\" | \"testnet\";\n-export declare type signableData = message | stakeDelegation | payment;\n+export type publicKey = string;\n+export type privateKey = string;\n+export type network = \"mainnet\" | \"testnet\";\n+export type signableData = message | stakeDelegation | payment;\n-export declare type keypair = {\n+export type keypair = {\nreadonly privateKey: privateKey;\nreadonly publicKey: publicKey;\n};\n-export declare type message = {\n+export type message = {\npublicKey: publicKey;\nmessage: string;\n};\n-export declare type signature = {\n+export type signature = {\nreadonly field: string;\nreadonly scalar: string;\n};\n-export declare type signed<signableData> = {\n+export type signed<signableData> = {\nreadonly signature: signature;\nreadonly data: signableData;\n};\n-export declare type stakeDelegation = {\n+export type stakeDelegation = {\nreadonly to: publicKey;\nreadonly from: publicKey;\nreadonly fee: uint64;\n@@ -35,7 +35,7 @@ export declare type stakeDelegation = {\nreadonly validUntil?: uint32;\n};\n-export declare type payment = {\n+export type payment = {\nreadonly to: publicKey;\nreadonly from: publicKey;\nreadonly fee: uint64;\n",
        "date": "24.11.2021 08:19:18",
        "repo": "minaprotocol/mina",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor types and add keypair type"
    },
    {
        "msg": "feat: replace ternary with nullish coalescing for memo field",
        "diff": "diff --git a/frontend/mina-signer/src/MinaSDK.ts b/frontend/mina-signer/src/MinaSDK.ts @@ -104,7 +104,7 @@ class Client {\npayment: payment,\nprivateKey: privateKey\n): signed<payment> {\n- const memo = payment.memo ? payment.memo : \"\";\n+ const memo = payment.memo ?? \"\";\nconst fee = String(payment.fee);\nconst nonce = String(payment.nonce);\nconst amount = String(payment.amount);\n@@ -146,7 +146,7 @@ class Client {\n*/\npublic verifyPayment(signedPayment: signed<payment>): boolean {\nconst payload = signedPayment.data;\n- const memo = payload.memo ? payload.memo : \"\";\n+ const memo = payload.memo ?? \"\";\nconst fee = String(payload.fee);\nconst amount = String(payload.amount);\nconst nonce = String(payload.nonce);\n@@ -189,7 +189,7 @@ class Client {\nstakeDelegation: stakeDelegation,\nprivateKey: privateKey\n): signed<stakeDelegation> {\n- const memo = stakeDelegation.memo ? stakeDelegation.memo : \"\";\n+ const memo = stakeDelegation.memo ?? \"\";\nconst fee = String(stakeDelegation.fee);\nconst nonce = String(stakeDelegation.nonce);\nconst validUntil = String(\n@@ -232,7 +232,7 @@ class Client {\nsignedStakeDelegation: signed<stakeDelegation>\n): boolean {\nconst payload = signedStakeDelegation.data;\n- const memo = payload.memo ? payload.memo : \"\";\n+ const memo = payload.memo ?? \"\";\nconst fee = String(payload.fee);\nconst nonce = String(payload.nonce);\nconst validUntil = String(\n@@ -265,7 +265,7 @@ class Client {\n*/\npublic hashPayment(signedPayment: signed<payment>): string {\nconst payload = signedPayment.data;\n- const memo = payload.memo ? payload.memo : \"\";\n+ const memo = payload.memo ?? \"\";\nconst fee = String(payload.fee);\nconst amount = String(payload.amount);\nconst nonce = String(payload.nonce);\n@@ -302,7 +302,7 @@ class Client {\nsignedStakeDelegation: signed<stakeDelegation>\n): string {\nconst payload = signedStakeDelegation.data;\n- const memo = payload.memo ? payload.memo : \"\";\n+ const memo = payload.memo ?? \"\";\nconst fee = String(payload.fee);\nconst nonce = String(payload.nonce);\nconst validUntil = String(\n",
        "date": "24.11.2021 08:23:15",
        "repo": "minaprotocol/mina",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor memo assignment using nullish coalescing operator"
    },
    {
        "msg": "feat: add nullish coalescing for validUntil and simplify function objects",
        "diff": "diff --git a/frontend/mina-signer/src/MinaSDK.ts b/frontend/mina-signer/src/MinaSDK.ts \"use strict\";\n-\nconst JSOfOCaml_SDK = require(\"./client_sdk.bc.js\");\nconst minaSDK = JSOfOCaml_SDK.minaSDK;\n@@ -108,32 +107,30 @@ class Client {\nconst fee = String(payment.fee);\nconst nonce = String(payment.nonce);\nconst amount = String(payment.amount);\n- const validUntil = String(\n- payment.validUntil ? payment.validUntil : defaultValidUntil\n- );\n+ const validUntil = String(payment.validUntil ?? defaultValidUntil);\nreturn {\nsignature: minaSDK.signPayment(this.network, privateKey, {\ncommon: {\n- fee: fee,\n+ fee,\nfeePayer: payment.from,\n- nonce: nonce,\n- validUntil: validUntil,\n- memo: memo,\n+ nonce,\n+ validUntil,\n+ memo,\n},\npaymentPayload: {\nsource: payment.from,\nreceiver: payment.to,\n- amount: amount,\n+ amount,\n},\n}).signature,\ndata: {\nto: payment.to,\nfrom: payment.from,\n- fee: fee,\n- amount: amount,\n- nonce: nonce,\n- memo: memo,\n- validUntil: validUntil,\n+ fee,\n+ amount,\n+ nonce,\n+ memo,\n+ validUntil,\n},\n};\n}\n@@ -150,24 +147,22 @@ class Client {\nconst fee = String(payload.fee);\nconst amount = String(payload.amount);\nconst nonce = String(payload.nonce);\n- const validUntil = String(\n- payload.validUntil ? payload.validUntil : defaultValidUntil\n- );\n+ const validUntil = String(payload.validUntil ?? defaultValidUntil);\nreturn minaSDK.verifyPaymentSignature(this.network, {\nsender: signedPayment.data.from,\nsignature: signedPayment.signature,\npayment: {\ncommon: {\n- fee: fee,\n+ fee,\nfeePayer: payload.from,\n- nonce: nonce,\n- validUntil: validUntil,\n- memo: memo,\n+ nonce,\n+ validUntil,\n+ memo,\n},\npaymentPayload: {\nsource: payload.from,\nreceiver: payload.to,\n- amount: amount,\n+ amount,\n},\n},\n});\n@@ -192,19 +187,15 @@ class Client {\nconst memo = stakeDelegation.memo ?? \"\";\nconst fee = String(stakeDelegation.fee);\nconst nonce = String(stakeDelegation.nonce);\n- const validUntil = String(\n- stakeDelegation.validUntil\n- ? stakeDelegation.validUntil\n- : defaultValidUntil\n- );\n+ const validUntil = String(stakeDelegation.validUntil ?? defaultValidUntil);\nreturn {\nsignature: minaSDK.signStakeDelegation(this.network, privateKey, {\ncommon: {\n- fee: fee,\n+ fee,\nfeePayer: stakeDelegation.from,\n- nonce: nonce,\n- validUntil: validUntil,\n- memo: memo,\n+ nonce,\n+ validUntil,\n+ memo,\n},\ndelegationPayload: {\nnewDelegate: stakeDelegation.to,\n@@ -214,10 +205,10 @@ class Client {\ndata: {\nto: stakeDelegation.to,\nfrom: stakeDelegation.from,\n- fee: fee,\n- nonce: nonce,\n- memo: memo,\n- validUntil: validUntil,\n+ fee,\n+ nonce,\n+ memo,\n+ validUntil,\n},\n};\n}\n@@ -235,19 +226,17 @@ class Client {\nconst memo = payload.memo ?? \"\";\nconst fee = String(payload.fee);\nconst nonce = String(payload.nonce);\n- const validUntil = String(\n- payload.validUntil ? payload.validUntil : defaultValidUntil\n- );\n+ const validUntil = String(payload.validUntil ?? defaultValidUntil);\nreturn minaSDK.verifyStakeDelegationSignature(this.network, {\nsender: signedStakeDelegation.data.from,\nsignature: signedStakeDelegation.signature,\nstakeDelegation: {\ncommon: {\n- fee: fee,\n+ fee,\nfeePayer: payload.from,\n- nonce: nonce,\n- validUntil: validUntil,\n- memo: memo,\n+ nonce,\n+ validUntil,\n+ memo,\n},\ndelegationPayload: {\nnewDelegate: payload.to,\n@@ -269,9 +258,7 @@ class Client {\nconst fee = String(payload.fee);\nconst amount = String(payload.amount);\nconst nonce = String(payload.nonce);\n- const validUntil = String(\n- payload.validUntil ? payload.validUntil : defaultValidUntil\n- );\n+ const validUntil = String(payload.validUntil ?? defaultValidUntil);\nreturn minaSDK.hashPayment({\nsender: signedPayment.data.from,\nsignature: signedPayment.signature,\n@@ -279,14 +266,14 @@ class Client {\ncommon: {\nfee: fee,\nfeePayer: payload.from,\n- nonce: nonce,\n- validUntil: validUntil,\n- memo: memo,\n+ nonce,\n+ validUntil,\n+ memo,\n},\npaymentPayload: {\nsource: payload.from,\nreceiver: payload.to,\n- amount: amount,\n+ amount,\n},\n},\n});\n@@ -305,19 +292,17 @@ class Client {\nconst memo = payload.memo ?? \"\";\nconst fee = String(payload.fee);\nconst nonce = String(payload.nonce);\n- const validUntil = String(\n- payload.validUntil ? payload.validUntil : defaultValidUntil\n- );\n+ const validUntil = String(payload.validUntil ?? defaultValidUntil);\nreturn minaSDK.hashStakeDelegation({\nsender: signedStakeDelegation.data.from,\nsignature: signedStakeDelegation.signature,\nstakeDelegation: {\ncommon: {\n- fee: fee,\n+ fee,\nfeePayer: payload.from,\n- nonce: nonce,\n- validUntil: validUntil,\n- memo: memo,\n+ nonce,\n+ validUntil,\n+ memo,\n},\ndelegationPayload: {\nnewDelegate: payload.to,\n",
        "date": "24.11.2021 11:59:43",
        "repo": "minaprotocol/mina",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor code to use nullish coalescing operator in MinaSDK.ts"
    },
    {
        "msg": "feat: Update README description and API usage content",
        "diff": "diff --git a/frontend/mina-signer/README.md b/frontend/mina-signer/README.md -# Mina Signer SDK\n+# Mina Signer\n-This is a NodeJS client SDK that allows you to sign transactions and strings using Mina's keypairs for various specified networks.\n+This is a NodeJS SDK that allows you to sign strings, payments, and delegations using Mina's key pairs for various specified networks.\n# Install\n@@ -12,53 +12,45 @@ npm install --save mina-signer\n# Usage\n-Typescript:\n-\n-```typescript\n+```js\nimport Client from \"mina-signer\";\nconst client = new Client({ network: \"mainnet\" });\n-let keys = client.genKeys();\n-let signed = client.signMessage(\"hello\", keys);\n+\n+// Generate keys\n+let keypair = client.genKeys();\n+\n+// Sign and verify message\n+let signed = client.signMessage(\"hello\", keypair);\nif (client.verifyMessage(signed)) {\nconsole.log(\"Message was verified successfully\");\n}\n+// Sign and verify a payment\nlet signedPayment = client.signPayment(\n{\n- to: keys.publicKey,\n- from: keys.publicKey,\n+ to: keypair.publicKey,\n+ from: keypair.publicKey,\namount: 1,\nfee: 1,\nnonce: 0,\n},\n- keys.privateKey\n+ keypair.privateKey\n);\n-```\n-\n-NodeJS:\n-\n-```javascript\n-const Client = require(\"mina-signer\");\n-const client = new Client({ network: \"mainnet\" });\n-let keys = client.genKeys();\n-let signed = client.signMessage(\"hello\", keys);\n-if (client.verifyMessage(signed)) {\n- console.log(\"Message was verified successfully\");\n+if (client.verifyPayment(signedPayment)) {\n+ console.log(\"Payment was verified successfully\");\n}\n-let signedPayment = client.signPayment(\n+// Sign and verify a stake delegation\n+const signedDelegation = client.signStakeDelegation(\n{\n- to: keys.publicKey,\n- from: keys.publicKey,\n- amount: 1,\n- fee: 1,\n- nonce: 0,\n+ to: keypair.publicKey,\n+ from: keypair.publicKey,\n+ fee: \"1\",\n+ nonce: \"0\",\n},\n- keys.privateKey\n+ keypair.privateKey\n);\n+if (client.verifyStakeDelegation(signedDelegation)) {\n+ console.log(\"Delegation was verified successfully\");\n+}\n```\n-\n-# API Reference\n-\n-- [Main API](src/MinaSDK.d.ts)\n-- [Types](src/TSTypes.ts)\n",
        "date": "24.11.2021 12:07:19",
        "repo": "minaprotocol/mina",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor Mina Signer SDK to support signing payments and delegations"
    },
    {
        "msg": "feat: normalize network input to allow mixed-case input",
        "diff": "diff --git a/frontend/mina-signer/src/MinaSigner.ts b/frontend/mina-signer/src/MinaSigner.ts @@ -19,10 +19,11 @@ class Client {\nprivate network: network;\nconstructor(options: { network: network }) {\n- if (options.network !== \"mainnet\" && options.network !== \"testnet\") {\n+ const specifiedNetwork = options.network.toLowerCase();\n+ if (specifiedNetwork !== \"mainnet\" && specifiedNetwork !== \"testnet\") {\nthrow \"Invalid Specified Network\";\n}\n- this.network = options.network;\n+ this.network = specifiedNetwork;\n}\n/**\n",
        "date": "24.11.2021 12:29:17",
        "repo": "minaprotocol/mina",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor network validation in MinaSigner constructor"
    },
    {
        "msg": "feat: add check to MinaSigner constructor for null network property",
        "diff": "diff --git a/frontend/mina-signer/src/MinaSigner.ts b/frontend/mina-signer/src/MinaSigner.ts @@ -19,6 +19,9 @@ class Client {\nprivate network: network;\nconstructor(options: { network: network }) {\n+ if (!options?.network) {\n+ throw \"Invalid Specified Network\";\n+ }\nconst specifiedNetwork = options.network.toLowerCase();\nif (specifiedNetwork !== \"mainnet\" && specifiedNetwork !== \"testnet\") {\nthrow \"Invalid Specified Network\";\n",
        "date": "24.11.2021 12:40:31",
        "repo": "minaprotocol/mina",
        "type": "feat",
        "chatgpt_zeroshot": "Add validation for specified network in constructor"
    },
    {
        "msg": "feat: publickey deriver",
        "diff": "diff --git a/src/lib/fields_derivers_snapps/fields_derivers_snapps.ml b/src/lib/fields_derivers_snapps/fields_derivers_snapps.ml @@ -96,6 +96,12 @@ module Derivers = struct\niso_string obj ~name:\"Field\" ~doc:\"String representing an Fp Field element\"\n~to_string:Field.to_string ~of_string:Field.of_string\n+ let public_key obj : _ Unified_input.t =\n+ iso_string obj ~name:\"Field\"\n+ ~doc:\"String representing a public key in base58\"\n+ ~to_string:Signature_lib.Public_key.Compressed.to_string\n+ ~of_string:Signature_lib.Public_key.Compressed.of_base58_check_exn\n+\nlet int obj : _ Unified_input.t =\nlet _a = Fields_derivers_graphql.Graphql_fields.int obj in\nlet _b = Fields_derivers_json.To_yojson.int obj in\n@@ -153,6 +159,7 @@ include Derivers\nlet%test_module \"Test\" =\n( module struct\nmodule Field = Pickles.Impls.Step.Field.Constant\n+ module Public_key = Signature_lib.Public_key.Compressed\nmodule Or_ignore_test = struct\ntype 'a t = Check of 'a | Ignore [@@deriving compare, sexp, equal]\n@@ -225,4 +232,31 @@ let%test_module \"Test\" =\nlet%test_unit \"roundtrip json'\" =\nlet open Derivers in\n[%test_eq: V2.t] (of_json v2 (to_json v2 V2.v)) V2.v\n+\n+ module V3 = struct\n+ type t = { public_key : Public_key.t }\n+ [@@deriving compare, sexp, equal, fields]\n+\n+ let v =\n+ { public_key =\n+ Public_key.of_base58_check_exn\n+ \"B62qoTqMG41DFgkyQmY2Pos1x671Gfzs9k8NKqUdSg7wQasEV6qnXQP\"\n+ }\n+\n+ let derivers obj =\n+ let open Derivers in\n+ Fields.make_creator obj ~public_key:!.public_key |> finish ~name:\"V3\"\n+ end\n+\n+ let v3 = V3.derivers @@ Derivers.o ()\n+\n+ let%test_unit \"to_json'\" =\n+ let open Derivers in\n+ [%test_eq: string]\n+ (Yojson.Safe.to_string (to_json v3 V3.v))\n+ {|{\"publicKey\":\"B62qoTqMG41DFgkyQmY2Pos1x671Gfzs9k8NKqUdSg7wQasEV6qnXQP\"}|}\n+\n+ let%test_unit \"roundtrip json'\" =\n+ let open Derivers in\n+ [%test_eq: V3.t] (of_json v3 (to_json v3 V3.v)) V3.v\nend )\n",
        "date": "04.02.2022 10:33:23",
        "repo": "minaprotocol/mina",
        "type": "feat",
        "chatgpt_zeroshot": "Add public key field deriver for base58 representation in fields_derivers_snapps"
    },
    {
        "msg": "feat: add px as default unit for text-decoration-thickness property",
        "diff": "diff --git a/packages/jss-plugin-default-unit/src/defaultUnits.js b/packages/jss-plugin-default-unit/src/defaultUnits.js @@ -121,6 +121,7 @@ export default {\n'font-size': px,\n'font-size-delta': px,\n'letter-spacing': px,\n+ 'text-decoration-thickness': px,\n'text-indent': px,\n'text-stroke': px,\n'text-stroke-width': px,\n",
        "date": "04.01.2021 14:04:33",
        "repo": "cssinjs/jss",
        "type": "feat",
        "chatgpt_zeroshot": "Add support for 'text-decoration-thickness' unit in defaultUnits.js"
    },
    {
        "msg": "feat(views): [Fixes add button for new sample pack",
        "diff": "diff --git a/views/cube/cube_samplepack.pug b/views/cube/cube_samplepack.pug @@ -9,8 +9,9 @@ block cube_content\n.row\n.col-md-6\nh5.card-title Sample Pack\n- .col-md-6\n- a.float-right(href=`/cube/samplepackimage/${cube_id}/${seed}`) Get Image\n+ .col-md-6.text-right\n+ a.btn.btn-success.mr-2(href=`/cube/samplepack/${cube_id}`) New Pack\n+ a.btn.btn-success(href=`/cube/samplepackimage/${cube_id}/${seed}`) Get Image\n.card-body\n.samplepack.row\nif pack\n",
        "date": "27.10.2019 22:53:40",
        "repo": "dekkerglen/cubecobra",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor cube_samplepack.pug to update button styles and functionality"
    },
    {
        "msg": "feat: Add nil.to_set",
        "diff": "diff --git a/src/header.js b/src/header.js @@ -16,6 +16,7 @@ BiwaScheme.nil = {\ntoString: function() { return \"nil\"; },\nto_write: function() { return \"()\"; },\nto_array: function() { return []; },\n+ to_set: function() { return new BiwaScheme.Set(); },\nlength: function() { return 0; }\n};\n",
        "date": "03.01.2020 19:21:57",
        "repo": "biwascheme/biwascheme",
        "type": "feat",
        "chatgpt_zeroshot": "Add to_set method to BiwaScheme.nil object"
    },
    {
        "msg": "feat(dumper): More robust",
        "diff": "diff --git a/src/platforms/browser/dumper.js b/src/platforms/browser/dumper.js @@ -115,6 +115,7 @@ BiwaScheme.Dumper = BiwaScheme.Class.create({\n},\ndump_closure: function(cls){\n+ if(!cls) return \"**BROKEN**\";\nif(cls.length == 0) return \"[]\";\nvar cls_num = null;\n@@ -127,7 +128,7 @@ BiwaScheme.Dumper = BiwaScheme.Class.create({\n}\nvar c = _.clone(cls);\n- var body = c.shift();\n+ var body = c.shift && c.shift();\nreturn [\n\"c\", cls_num, \" <span class='dump_closure'>free vars :</span> \",\nthis.dump_obj(c), \" <span class='dump_closure'>body :</span> \",\n",
        "date": "03.01.2020 19:27:33",
        "repo": "biwascheme/biwascheme",
        "type": "feat",
        "chatgpt_zeroshot": "Fix issue with null closure in dumper.js"
    },
    {
        "msg": "feat(parser): esmfy",
        "diff": "diff --git a/src/system/parser.js b/src/system/parser.js +import _ from \"../deps/underscore-1.10.2-esm.js\"\n+import { nil } from \"../header.js\"\n+import { inspect } from \"./_writer.js\"\n+import Char from \"./char.js\"\nimport Class from \"./class.js\"\n+import { BiwaError } from \"./error.js\"\nimport { Pair } from \"./pair.js\"\n-import _ from \"../deps/underscore-1.10.2-esm.js\"\n+import { Sym } from \"./symbol.js\"\n//\n// Parser\n@@ -16,7 +21,7 @@ const Parser = Class.create({\nreturn [\n\"#<Parser:\",\nthis.i, \"/\", this.tokens.length, \" \",\n- BiwaScheme.inspect(this.tokens),\n+ inspect(this.tokens),\n\">\"\n].join(\"\");\n},\n@@ -39,7 +44,7 @@ const Parser = Class.create({\nif ( /(.*\\|#)/.test(t) ) {\nin_srfi_30_comment--;\nif (in_srfi_30_comment < 0) {\n- throw new BiwaScheme.Error(\"Found an extra comment terminator: `|#'\")\n+ throw new BiwaError(\"Found an extra comment terminator: `|#'\")\n}\n// Push back the rest substring to input stream.\nreturn t.substring(RegExp.$1.length, t.length);\n@@ -65,15 +70,15 @@ const Parser = Class.create({\nreturn r;\nr = this.getObject();\n- if (r == BiwaScheme.Parser.EOS)\n- throw new BiwaScheme.Error(\"Readable object not found after S exression comment\");\n+ if (r == Parser.EOS)\n+ throw new BiwaError(\"Readable object not found after S exression comment\");\nr = this.getObject();\nreturn r;\n},\ngetList: function( close ) {\n- var list = BiwaScheme.nil, prev = list;\n+ var list = nil, prev = list;\nwhile( this.i < this.tokens.length ) {\nthis.eatObjectsInSexpComment(\"Input stream terminated unexpectedly(in list)\");\n@@ -85,12 +90,12 @@ const Parser = Class.create({\nif( this.tokens[ this.i ] == '.' ) {\nthis.i++;\nvar o = this.getObject();\n- if( o != BiwaScheme.Parser.EOS && list != BiwaScheme.nil ) {\n+ if( o != Parser.EOS && list != nil ) {\nprev.cdr = o;\n}\n} else {\n- var cur = new BiwaScheme.Pair( this.getObject(), BiwaScheme.nil);\n- if( list == BiwaScheme.nil ) list = cur;\n+ var cur = new Pair( this.getObject(), nil);\n+ if( list == nil ) list = cur;\nelse prev.cdr = cur;\nprev = cur;\n}\n@@ -115,14 +120,14 @@ const Parser = Class.create({\neatObjectsInSexpComment: function(err_msg) {\nwhile( this.tokens[ this.i ] == '#;' ) {\nthis.i++;\n- if ((this.getObject() == BiwaScheme.Parser.EOS) || (this.i >= this.tokens.length))\n- throw new BiwaScheme.Error(err_msg);\n+ if ((this.getObject() == Parser.EOS) || (this.i >= this.tokens.length))\n+ throw new BiwaError(err_msg);\n}\n},\ngetObject0: function() {\nif( this.i >= this.tokens.length )\n- return BiwaScheme.Parser.EOS;\n+ return Parser.EOS;\nvar t = this.tokens[ this.i++ ];\n// if( t == ')' ) return null;\n@@ -136,7 +141,7 @@ const Parser = Class.create({\nt == \",@\" ? 'unquote-splicing' : false;\nif( s || t == '(' || t == '#(' || t == '[' || t == '#[' || t == '{' || t == '#{' ) {\n- return s ? new BiwaScheme.Pair( BiwaScheme.Sym(s), new BiwaScheme.Pair( this.getObject(), BiwaScheme.nil ))\n+ return s ? new Pair(Sym(s), new Pair( this.getObject(), nil ))\n: (t=='(' || t=='[' || t=='{') ? this.getList(t) : this.getVector(t);\n}\nelse {\n@@ -164,32 +169,32 @@ const Parser = Class.create({\n} else if( t == '#t' || t == '#T' ) {\nreturn true;\n} else if( t.toLowerCase() == '#\\\\newline' ) {\n- return BiwaScheme.Char.get('\\n');\n+ return Char.get('\\n');\n} else if( t.toLowerCase() == '#\\\\space' ) {\n- return BiwaScheme.Char.get(' ');\n+ return Char.get(' ');\n} else if( t.toLowerCase() == '#\\\\tab' ) {\n- return BiwaScheme.Char.get('\\t');\n+ return Char.get('\\t');\n} else if( /^#\\\\.$/.test(t) ) {\n- return BiwaScheme.Char.get( t.charAt(2) );\n+ return Char.get( t.charAt(2) );\n} else if( /^#\\\\x[a-zA-Z0-9]+$/.test(t) ) {\nvar scalar = parseInt(t.slice(3), 16);\n// R6RS 11.11 (surrogate codepoints)\nif (scalar >= 0xD800 && scalar <= 0xDFFF) {\n- throw new BiwaScheme.Error(\"Character in Unicode excluded range.\");\n+ throw new BiwaError(\"Character in Unicode excluded range.\");\n}\n// ECMA-262 4.3.16 -- Basically, strings are sequences of 16-bit\n// unsigned integers, so anything greater than 0xFFFF won't fit.\n// NOTE: This violates R6RS which requires the full Unicode range!\nelse if (scalar > 0xFFFF) {\n- throw new BiwaScheme.Error(\"Character literal out of range.\");\n+ throw new BiwaError(\"Character literal out of range.\");\n} else {\n- return BiwaScheme.Char.get(String.fromCharCode(scalar));\n+ return Char.get(String.fromCharCode(scalar));\n}\n} else if( /^\\\"(\\\\(.|$)|[^\\\"\\\\])*\\\"?$/.test(t) ) {\nreturn t.replace(/(\\r?\\n|\\\\n)/g, \"\\n\").replace( /^\\\"|\\\\(.|$)|\\\"$/g, function($0,$1) {\nreturn $1 ? $1 : '';\n} );\n- } else return BiwaScheme.Sym(t); // 2Do: validate !!\n+ } else return Sym(t); // 2Do: validate !!\n}\n}\n});\n",
        "date": "09.05.2020 20:30:57",
        "repo": "biwascheme/biwascheme",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor parser.js to use local imports and fix error handling."
    },
    {
        "msg": "feat: Update Makefile",
        "diff": "diff --git a/Makefile b/Makefile @@ -45,46 +45,26 @@ PLAIN_FILES = \\\nsrc/platforms/browser/release_initializer.js\nBROWSER_FILES = \\\n- src/deps/jquery.js \\\n- src/deps/underscore.js \\\n- src/deps/underscore.string.js \\\n+# src/deps/jquery.js \\\n+# src/deps/underscore.js \\\n+# src/deps/underscore.string.js \\\n$(PLAIN_FILES)\nall: build\n-build: release/biwascheme.js release/console_biwascheme.js release/node_biwascheme.js release/biwascheme-min.js release/biwascheme-plain.js release/biwascheme-plain-min.js\n+build: release/biwascheme.js release/node_biwascheme.js release/biwascheme-min.js\n$(VERSION_FILE): $(VERSION_FILE_IN) $(BROWSER_FILES) VERSION Makefile\ncat $< | sed -e \"s/@GIT_COMMIT@/`git log -1 --pretty=format:%H`/\" | sed -e \"s/@VERSION@/`cat VERSION`/\" > $@\nrelease/biwascheme.js: $(VERSION_FILE) $(BROWSER_FILES) Makefile\n- cat $(VERSION_FILE) > $@\n- cat $(BROWSER_FILES) >> $@\n- @echo \"Wrote \" $@\n+ rollup -c\nrelease/biwascheme-min.js: release/biwascheme.js\n- npx --no-install uglifyjs -o $@ release/biwascheme.js --comments\n- @echo \"Wrote \" $@\n-\n-release/biwascheme-plain.js: $(VERSION_FILE) $(PLAIN_FILES) Makefile\n- cat $(VERSION_FILE) > $@\n- cat $(PLAIN_FILES) >> $@\n- @echo \"Wrote \" $@\n-\n-release/biwascheme-plain-min.js: release/biwascheme-plain.js\n- npx --no-install uglifyjs -o $@ release/biwascheme-plain.js --comments\n- @echo \"Wrote \" $@\n-\n-release/console_biwascheme.js: $(VERSION_FILE) $(CONSOLE_FILES) Makefile\n- cat $(VERSION_FILE) > $@\n- cat $(CONSOLE_FILES) >> $@\n- @echo \"Wrote \" $@\n+ rollup -c\nrelease/node_biwascheme.js: src/platforms/node/module_preamble.js release/console_biwascheme.js src/platforms/node/module_postamble.js\n- cat src/platforms/node/module_preamble.js > $@\n- cat release/console_biwascheme.js >> $@\n- cat src/platforms/node/module_postamble.js >> $@\n- @echo \"Wrote \" $@\n+ rollup -c rollup-node.config.js\n#\n# Test\n",
        "date": "23.06.2020 23:17:32",
        "repo": "biwascheme/biwascheme",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor build process and remove unnecessary files from browser build"
    },
    {
        "msg": "feat: Add banner",
        "diff": "diff --git a/rollup.config.js b/rollup.config.js import { terser } from \"rollup-plugin-terser\"\n+import { VERSION } from \"./src/version.js\";\n+\n+const banner = `/*\n+ * BiwaScheme ${VERSION} - R6RS/R7RS Scheme in JavaScript\n+ *\n+ * Copyright (c) 2007-${(new Date).getFullYear()} Yutaka HARA (http://www.biwascheme.org/)\n+ * Licensed under the MIT license.\n+ */`\nexport default {\n- plugins: [\n- terser({ output: { comments: /@license/i } }),\n- ],\ninput: \"src/main-browser.js\",\noutput: [\n{\n@@ -11,13 +16,15 @@ export default {\nformat: \"iife\",\nname: \"BiwaScheme\",\nstrict: false,\n+ banner: banner,\n},\n{\nfile: \"release/biwascheme-min.js\",\nformat: \"iife\",\nname: \"BiwaScheme\",\nstrict: false,\n- plugins: [terser()],\n+ banner: banner,\n+ plugins: [terser({output: {comments: /Copyright/}})],\n},\n]\n}\n",
        "date": "26.06.2020 00:15:43",
        "repo": "biwascheme/biwascheme",
        "type": "feat",
        "chatgpt_zeroshot": "Add version information and copyright banner to rollup configuration"
    },
    {
        "msg": "feat: Esmfy repl.html",
        "diff": "diff --git a/demo/repl.html b/demo/repl.html </td></tr></table>\n</div>\n-<script type=\"text/javascript\" src=\"../src/development_initializer.js\"></script>\n-<script type=\"text/javascript\">\n+<script type=\"module\" src=\"../src/main-browser.js\"></script>\n+<script type=\"module\">\nvar on_error = function(e){\nBiwaScheme.Port.current_error.put_string(e.message);\nthrow(e);\n};\nvar biwascheme = new BiwaScheme.Interpreter(on_error);\n-function bs_eval(){\n+window.bs_eval = function(){\n$(\"#bs-console\").empty();\nvar str = $(\"#bs-input\").val();\n",
        "date": "25.07.2020 15:08:07",
        "repo": "biwascheme/biwascheme",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor REPL initialization and evaluation scripts to use ES6 modules."
    },
    {
        "msg": "feat: Esmfy tracer.html",
        "diff": "diff --git a/test/tracer.html b/test/tracer.html <script type=\"text/javascript\" src=\"ace/ace.js\" charset=\"utf-8\"></script>\n<script type=\"text/javascript\" src=\"ace/theme-dawn.js\" charset=\"utf-8\"></script>\n<script type=\"text/javascript\" src=\"ace/mode-clojure.js\" charset=\"utf-8\"></script>\n- <script type=\"text/javascript\" src=\"../src/development_initializer.js\" charset=\"utf-8\"></script>\n- <script type=\"text/javascript\">\n- var eval_it, dumper;\n-\n-\n+ <script type=\"module\" src=\"../src/main-browser.js\" charset=\"utf-8\"></script>\n+ <script type=\"module\">\n$(function(){\n$(\"#biwa_ver\").append(\"(\"+BiwaScheme.VERSION+\")\");\nvar ClojureMode = require(\"ace/mode/clojure\").Mode;\neditor.getSession().setMode(new ClojureMode());\n- eval_it = function(){\n+ window.eval_it = function(){\nvar show_error = function(e){\n- Console.puts(\"Error: \"+e.message);\n+ BiwaScheme.Console.puts(\"Error: \"+e.message);\nthrow e;\n};\n- dumper.reset();\n+ window.dumper.reset();\n$(\"#bs-console\").html(\"\");\nvar src = editor.getSession().getValue();\nvar intp = new BiwaScheme.Interpreter(show_error);\ntry{\nvar ret = intp.evaluate(src);\n- Console.puts(\";=> \" + BiwaScheme.to_write(ret));\n+ BiwaScheme.Console.puts(\";=> \" + BiwaScheme.to_write(ret));\n}\ncatch(e){\nconsole.error(e);\n}\n- dumper.dump_move(1);\n+ window.dumper.dump_move(1);\n}\n- dumper = new BiwaScheme.Dumper();\n- BiwaScheme.Interpreter.dumper = dumper;\n+ window.dumper = new BiwaScheme.Dumper();\n+ BiwaScheme.Interpreter.dumper = window.dumper;\n- eval_it();\n+ window.eval_it();\n});\n</script>\n",
        "date": "25.07.2020 15:13:29",
        "repo": "biwascheme/biwascheme",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor code to use main-browser.js and update global variables."
    },
    {
        "msg": "feat: Add optional form to BiwaError",
        "diff": "diff --git a/src/system/error.js b/src/system/error.js -import Class from \"./class.js\"\nimport * as _ from \"../deps/underscore-1.10.2-esm.js\"\n+import { to_write } from \"./_writer.js\"\n+import Class from \"./class.js\"\n//\n// Errors\n//\nconst BiwaError = Class.create({\n- initialize: function(msg){\n- this.message = \"Error: \"+msg;\n+ initialize: function(msg, form=null){\n+ const info = (form === null ? \"\" : `: ${to_write(form)}`);\n+ this.message = `Error: ${msg}${info}`;\n+ this.form = form;\n},\ntoString: function(){\nreturn this.message;\n",
        "date": "14.08.2020 00:06:24",
        "repo": "biwascheme/biwascheme",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor error handling to include form information in error message"
    },
    {
        "msg": "feat: Pair.prototype.mapList",
        "diff": "diff --git a/src/system/pair.js b/src/system/pair.js @@ -83,6 +83,11 @@ const Pair = Class.create({\nreturn ary;\n},\n+ // Returns a new list made by applying `func` to each element\n+ mapList: function(func) {\n+ return array_to_list(this.map(func));\n+ },\n+\n// Destructively concat the given list to the receiver.\n// The receiver must be a proper list.\n// Returns the receiver.\n",
        "date": "14.08.2020 00:06:41",
        "repo": "biwascheme/biwascheme",
        "type": "feat",
        "chatgpt_zeroshot": "Add mapList method to Pair class"
    },
    {
        "msg": "feat: Pair.prototype.forEach",
        "diff": "diff --git a/src/system/pair.js b/src/system/pair.js @@ -64,6 +64,14 @@ const Pair = Class.create({\n// calls the given func passing each car of list\n// returns cdr of last Pair\n+ forEach: function(func){\n+ for(var o = this; o instanceof Pair; o=o.cdr){\n+ func(o.car);\n+ }\n+ return o;\n+ },\n+\n+ // Alias of `forEach` (for backward compatibility)\nforeach: function(func){\nfor(var o = this; o instanceof Pair; o=o.cdr){\nfunc(o.car);\n",
        "date": "14.08.2020 00:07:18",
        "repo": "biwascheme/biwascheme",
        "type": "feat",
        "chatgpt_zeroshot": "Add forEach method to Pair class and alias foreach for backward compatibility"
    },
    {
        "msg": "feat: Change layout",
        "diff": "diff --git a/test/tracer.html b/test/tracer.html position: relative;\nwidth: 500px;\nheight: 400px;\n- float: left;\n+ }\n+ #left {\n+ float: left\n}\ndiv#bs-console{ border:1px solid black }\n</style>\n</head>\n<body>\n+ <div id=\"left\">\n<h1>\n<a href='../index.html'>BiwaScheme</a> tracer\n<small id=\"biwa_ver\"></small>\n<input type=button value=\"eval\" onclick=\"eval_it()\">\n<div id='bs-console'></div>\n+</div>\n<input type=button value=\"&lt;&lt;\" onclick=\"dumper.dump_move_to(0)\">\n<input type=button value=\"&lt;\" onclick=\"dumper.dump_move(-1)\">\n",
        "date": "17.10.2020 01:46:57",
        "repo": "biwascheme/biwascheme",
        "type": "feat",
        "chatgpt_zeroshot": "Add left float to div element in tracer.html"
    },
    {
        "msg": "feat: Paging with keys",
        "diff": "diff --git a/test/tracer.html b/test/tracer.html BiwaScheme.Interpreter.dumper = window.dumper;\nwindow.eval_it();\n- });\n+ document.addEventListener('keydown', (e) => {\n+ switch (e.key) {\n+ case 'j': window.dumper.dump_move(+1); break;\n+ case 'k': window.dumper.dump_move(-1); break;\n+ }\n+ });\n+ })\n</script>\n</body>\n</html>\n",
        "date": "17.10.2020 01:47:16",
        "repo": "biwascheme/biwascheme",
        "type": "feat",
        "chatgpt_zeroshot": "Add keyboard shortcuts for moving through the dump in tracer.html"
    },
    {
        "msg": "feat: Add optional argument to cxxr",
        "diff": "diff --git a/src/system/pair.js b/src/system/pair.js @@ -14,10 +14,23 @@ class Pair {\nthis.cdr = cdr;\n}\n- caar(){ return this.car.car; }\n- cadr(){ return this.cdr.car; }\n- cdar(){ return this.cdr.car; }\n- cddr(){ return this.cdr.cdr; }\n+ // Returns `this.car.car`. If `err` is given and `this.car` is not a pair,\n+ // throws `err`.\n+ caar(err){ return this._get([\"car\", \"car\"], err) }\n+ cadr(err){ return this._get([\"cdr\", \"car\"], err) }\n+ cdar(err){ return this._get([\"cdr\", \"car\"], err) }\n+ cddr(err){ return this._get([\"cdr\", \"cdr\"], err) }\n+ _get(props, err) {\n+ let x = this;\n+ props.forEach(p => {\n+ if (x.hasOwnProperty(p)) {\n+ return x[p];\n+ } else if (err) {\n+ throw err;\n+ }\n+ });\n+ return x;\n+ }\nfirst(){ return this.car; }\nsecond(){ return this.cdr.car; }\n",
        "date": "16.01.2022 13:06:19",
        "repo": "biwascheme/biwascheme",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor Pair class methods to handle error cases and improve code readability"
    },
    {
        "msg": "feat(js): fix icons update to font-awesome 5",
        "diff": "diff --git a/src/bootstrap-table.js b/src/bootstrap-table.js 4: {\niconsPrefix: 'fa',\nicons: {\n- paginationSwitchDown: 'fa-caret-square-o-down',\n- paginationSwitchUp: 'fa-caret-square-o-up',\n- refresh: 'fa-refresh',\n+ paginationSwitchDown: 'fa-caret-square-down',\n+ paginationSwitchUp: 'fa-caret-square-up',\n+ refresh: 'fa-sync',\ntoggleOff: 'fa-toggle-off',\ntoggleOn: 'fa-toggle-on',\ncolumns: 'fa-th-list',\n",
        "date": "30.12.2018 23:41:39",
        "repo": "wenzhixin/bootstrap-table",
        "type": "feat",
        "chatgpt_zeroshot": "Update icons in bootstrap-table.js to use new Font Awesome icons."
    },
    {
        "msg": "feat: Export TypeScript types",
        "diff": "diff --git a/index.d.ts b/index.d.ts /// <reference types=\"jquery\" />\n-interface BootstrapTableHtml{\n- searchInput: string;\n- searchButton: string;\n- pagination: string[];\n- pageDropdown: string[];\n- inputGroup: string;\n- toolbarDropdown: string[];\n- icon: string;\n- pageDropdownItem: string;\n- paginationItem: string;\n- toolbarDropdownSeparator: string;\n- dropdownCaret: string;\n- searchClearButton: string;\n- toolbarDropdownItem: string\n-}\n-\ninterface BootstrapTableIcons {\ntoggleOff: string;\nclearSearch: string;\n@@ -62,7 +46,7 @@ interface BootstrapTableEvents{\n'scroll-body.bs.table': string\n}\n-interface BootstrapTableColumn{\n+export interface BootstrapTableColumn {\nsortName?: any;\nwidthUnit?: string;\nsorter?: any;\n@@ -98,7 +82,7 @@ interface BootstrapTableColumn{\ncardVisible?: boolean\n}\n-interface BootstrapTableLocale{\n+export interface BootstrapTableLocale {\nformatPaginationSwitchDown?: () => string;\nformatColumns?: () => string;\n@@ -141,7 +125,7 @@ interface BootstrapTableLocale{\nformatRecordsPerPage(pageNumber: number): string\n}\n-interface BootstrapAjaxParams{\n+export interface BootstrapAjaxParams {\ncache: boolean;\ndata: {\nsearch: string;\n@@ -157,7 +141,7 @@ interface BootstrapAjaxParams{\nsuccess: (results: any, textStatus?: string, jqXHR?: JQueryXHR) => any;\n}\n-interface BootstrapTableOptions{\n+export interface BootstrapTableOptions {\nonCheck?: (row: any, $element: JQuery<HTMLElement>) => boolean | undefined;\nloadingFontSize?: string;\nonDblClickCell?: (field: string, value: any, row: any, $element: JQuery<HTMLElement>) => boolean | undefined;\n",
        "date": "29.04.2022 17:01:58",
        "repo": "wenzhixin/bootstrap-table",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor BootstrapTable interfaces and export necessary types"
    },
    {
        "msg": "feat(sitemap): testing sitemap generator code\nsitemap generator code\nCloses",
        "diff": "diff --git a/static/sitemap_test.xml b/static/sitemap_test.xml <lastmod>Tue Jul 09 2019 23:14:50 GMT+0530 (India Standard Time)</lastmod>\n<priority>0.80</priority>\n</url>\n+ <url>\n+ <loc>https://www.operationcode.org/testing</loc>\n+ <lastmod>Sun Jul 14 2019 15:45:12 GMT+0530 (India Standard Time)</lastmod>\n+ <priority>0.80</priority>\n+ </url>\n<url>\n<loc>https://www.operationcode.org/who_we_serve</loc>\n<lastmod>Tue Jul 09 2019 23:14:50 GMT+0530 (India Standard Time)</lastmod>\n",
        "date": "14.07.2019 15:33:52",
        "repo": "operationcode/front-end",
        "type": "feat",
        "chatgpt_zeroshot": "Add new URL for testing page in sitemap."
    },
    {
        "msg": "feat(refactoring): prehook command update\nsitemap prehook command update\nCloses",
        "diff": "diff --git a/package.json b/package.json \"lint\": \"yarn lint:scripts && yarn lint:styles && yarn format:md\",\n\"lint:scripts\": \"eslint --fix \\\"**/*.js\\\"\",\n\"lint:styles\": \"stylelint --fix \\\"**/*.css\\\"\",\n- \"precommit\": \"lint-staged && yarn test:changes && node generate-sitemap.js && git add .\",\n+ \"precommit\": \"lint-staged && yarn test:changes && node generate-sitemap.js && git add static/sitemap_test.xml\",\n\"start\": \"next start\",\n\"storybook\": \"start-storybook -s ./static -p 9001 -c .storybook\",\n\"storybook:build\": \"build-storybook -s ./static -c .storybook -o .storybook-dist\",\n",
        "date": "14.07.2019 15:45:20",
        "repo": "operationcode/front-end",
        "type": "feat",
        "chatgpt_zeroshot": "Update precommit script to include generating sitemap_test.xml file"
    },
    {
        "msg": "feat: passing the right props\nMultiStepForm will pass each step the current stepNumber and the totalSteps",
        "diff": "diff --git a/components/Form/MultiStepForm.js b/components/Form/MultiStepForm.js @@ -112,7 +112,7 @@ export class MultiStepForm extends React.Component {\nonSubmit={this.handleSubmit}\nrender={formikBag => (\n<Form className={styles.MultiStepForm} onSubmit={formikBag.handleSubmit}>\n- <CurrentStep {...formikBag} />\n+ <CurrentStep {...formikBag} stepNumber={stepNumber} totalSteps={steps.length} />\n<div className={styles.errorMessage}>\n{errorMessage && <Alert type=\"error\">{errorMessage}</Alert>}\n",
        "date": "09.10.2019 23:24:05",
        "repo": "operationcode/front-end",
        "type": "feat",
        "chatgpt_zeroshot": "Add stepNumber and totalSteps props to CurrentStep component in MultiStepForm"
    },
    {
        "msg": "feat: removing snapshop testing",
        "diff": "diff --git a/scripts/createComponent/builders.js b/scripts/createComponent/builders.js @@ -54,24 +54,11 @@ storiesOf('${componentName}', module)\n// Output generated for component's test file\nbuildTestJs: componentName =>\n`import React from 'react';\n-import createSnapshotTest from 'test-utils/createSnapshotTest';\nimport { render, act } from '@testing-library/react';\nimport ${componentName} from '../${componentName}';\ndescribe('${componentName}', () => {\n- it('should render with required props', () => {\n- createSnapshotTest(<${componentName}>Test</${componentName}>);\n- });\n-\n- it('should render with many props assigned', () => {\n- createSnapshotTest(\n- <${componentName} className=\"test-class\">\n- Test\n- </${componentName}>,\n- );\n- });\n-\nit('should not render', () => {\nconst { container } = render(<${componentName} />);\n",
        "date": "15.10.2019 17:39:44",
        "repo": "operationcode/front-end",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor test file for better readability and maintainability"
    },
    {
        "msg": "feat: added css for github button",
        "diff": "diff --git a/components/SocialLoginGroup/SocialLoginGroup.css b/components/SocialLoginGroup/SocialLoginGroup.css }\n/* Github */\n-.githubButton {\n+\n+/* WHITE */\n+\n+/* .githubButton {\ncolor: #24292e;\nbackground: #eff3f6;\ntransition: opacity 0.15s linear;\n.githubButton::before {\nborder-right: #1b1f23 1px solid;\n- background: url(\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/14082/icon_github.png\") 6px 6px\n+ background-color: #eff3f6;\n+ background-image: url(\"http://localhost:3000/static/images/icons/github_logo_black.svg\");\n+ background-repeat: no-repeat;\n+}\n+\n+.githubButton:active,\n+.githubButton:hover,\n+.githubButton:focus {\n+ opacity: 0.8;\n+ cursor: pointer;\n+} */\n+\n+/* .githubButton {\n+ color: #24292e;\n+ background: #eff3f6;\n+ transition: opacity 0.15s linear;\n+ border: 1px solid #1b1f23;\n+}\n+\n+.githubButton::before {\n+ content: url(\"http://localhost:3000/static/images/icons/github_logo_black.svg\");\n+ border-right: #1b1f23 1px solid;\n+ /* background-color: #eff3f6;\n+ background-image: url(\"http://localhost:3000/static/images/icons/github_logo.svg\");\n+ background-repeat: no-repeat;\n+}\n+\n+.githubButton:active,\n+.githubButton:hover,\n+.githubButton:focus {\n+ opacity: 0.8;\n+ cursor: pointer;\n+} */\n+\n+/* BLACK */\n+.githubButton {\n+ color: #eff3f6;\n+ background: #24292e;\n+ transition: opacity 0.15s linear;\n+ border: 1px solid #1b1f23;\n+}\n+\n+.githubButton::before {\n+ border-right: #b0b0b0 1px solid;\n+ background: url(\"http://localhost:3000/static/images/icons/github_octocat_logo.svg\") 4px 4px\nno-repeat;\n}\n",
        "date": "16.10.2019 12:32:51",
        "repo": "operationcode/front-end",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor Github button styles in SocialLoginGroup component"
    },
    {
        "msg": "feat: adding partner type to the list of partners",
        "diff": "diff --git a/common/constants/partners.js b/common/constants/partners.js import { s3 } from 'common/constants/urls';\n+export const PARTNER_TYPES = {\n+ PAID: 'PAID',\n+ KIND: 'IN-KIND',\n+};\n+\nconst partners = [\n{\nname: 'APEX Systems',\nlogoSource: `${s3}partnerLogos/apex_systems.png`,\nurl: 'https://apexsystems.com',\n+ type: PARTNER_TYPES.KIND,\n},\n{\nname: 'GitHub',\nlogoSource: `${s3}partnerLogos/github.png`,\nurl: 'https://github.com',\n+ type: PARTNER_TYPES.KIND,\n},\n{\nname: 'Slack',\nlogoSource: `${s3}partnerLogos/slack.png`,\nurl: 'https://slack.com/',\n+ type: PARTNER_TYPES.PAID,\n},\n{\nname: 'Heroku',\nlogoSource: `${s3}partnerLogos/heroku.png`,\nurl: 'https://heroku.com/',\n+ type: PARTNER_TYPES.KIND,\n},\n{\nname: '1Password',\nlogoSource: `${s3}partnerLogos/1password.png`,\nurl: 'https://1password.com/',\n+ type: PARTNER_TYPES.KIND,\n},\n{\nname: 'US Bank',\nlogoSource: `${s3}partnerLogos/usbank.png`,\nurl: 'https://usbank.com/index.html',\n+ type: PARTNER_TYPES.PAID,\n},\n{\nname: 'Threat Stack',\nlogoSource: `${s3}partnerLogos/threat_stack.png`,\nurl: 'https://threatstack.com',\n+ type: PARTNER_TYPES.PAID,\n},\n{\nname: \"O'Reilly Media\",\nlogoSource: `${s3}partnerLogos/oreilly.png`,\nurl: 'https://oreilly.com',\n+ type: PARTNER_TYPES.KIND,\n},\n{\nname: 'HackerRank',\nlogoSource: `${s3}partnerLogos/hackerrank.png`,\nurl: 'https://hackerrank.com',\n+ type: PARTNER_TYPES.KIND,\n},\n{\nname: 'Zapier',\nlogoSource: `${s3}partnerLogos/zapier.png`,\nurl: 'https://zapier.com',\n+ type: PARTNER_TYPES.KIND,\n},\n{\nname: 'LogRocket',\nlogoSource: `${s3}partnerLogos/logrocket.png`,\nurl: 'https://logrocket.com/',\n+ type: PARTNER_TYPES.KIND,\n},\n];\n",
        "date": "16.10.2019 13:22:30",
        "repo": "operationcode/front-end",
        "type": "feat",
        "chatgpt_zeroshot": "Add partner types to partners.js"
    },
    {
        "msg": "feat: finally updating sponsor section to separate sponsors",
        "diff": "diff --git a/components/ReusableSections/SponsorsSection/SponsorsSection.js b/components/ReusableSections/SponsorsSection/SponsorsSection.js import React from 'react';\n-import Content from 'components/Content/Content';\n+import Container from 'components/Container/Container';\n+import Heading from 'components/Heading/Heading';\nimport PartnerLogoLink from 'components/PartnerLogoLink/PartnerLogoLink';\n-import partners from 'common/constants/partners';\n+import partners, { PARTNER_TYPES } from 'common/constants/partners';\n+import styles from './SponsorsSection.css';\n+\n+const isPaidSponsor = partner => partner.type === PARTNER_TYPES.PAID;\nconst SponsorsSection = () => (\n- <Content\n- title=\"Sponsors\"\n- theme=\"gray\"\n- hasTitleUnderline\n- columns={partners.map(partner => (\n+ <Container theme=\"gray\">\n+ <Heading text=\"Sponsors\" hasTitleUnderline headingLevel={3} />\n+\n+ <Heading text=\"Paid Sponsors\" headingLevel={4} />\n+ <p>\n+ These sponsors have donated cash to help keep the mission going here at Operation Code. They\n+ may or may not have also donated to our cause via others means.\n+ </p>\n+ <div className={styles.columnsContainer}>\n+ {partners\n+ .filter(x => isPaidSponsor(x))\n+ .map(partner => (\n+ <PartnerLogoLink key={partner.name} {...partner} size=\"large\" />\n+ ))}\n+ </div>\n+\n+ <Heading text=\"In-Kind Sponsors\" headingLevel={4} />\n+ <p>\n+ The following organizations have helped Operation Code through services, products,\n+ advertisements, scholarships, or sponsorships. We thank them for their contributions.\n+ </p>\n+ <div className={styles.columnsContainer}>\n+ {partners\n+ .filter(x => !isPaidSponsor(x))\n+ .map(partner => (\n<PartnerLogoLink key={partner.name} {...partner} />\n))}\n- />\n+ </div>\n+ </Container>\n);\nexport default SponsorsSection;\n",
        "date": "16.10.2019 13:23:14",
        "repo": "operationcode/front-end",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor SponsorsSection component to use Container and Heading components, and categorize sponsors by paid and in-kind contributions."
    },
    {
        "msg": "feat: updating donation form to version from Virtuous CRM",
        "diff": "diff --git a/pages/donate.js b/pages/donate.js @@ -44,15 +44,13 @@ function DonatePage() {\n<br />\n</div>\n<br />\n- <iframe\n- title=\"Donation Form\"\n- src=\"https://secure.lglforms.com/form_engine/s/BRtP7QUKyHOyEYsZROsRew\"\n- height=\"1500px\"\n- width=\"100%\"\n- style={{\n- border: '1px solid transparent',\n- outline: '1px solid transparent',\n- }}\n+ <script\n+ src=\"https://cdn.virtuoussoftware.com/virtuous.embed.min.js\"\n+ data-vform=\"48246BDA-5B32-4206-BA2B-E518574E4669\"\n+ data-orgId=\"3423\"\n+ data-isGiving=\"true\"\n+ data-merchantType=\"Virtuous\"\n+ data-dependencies=\"[]\"\n/>\n</Container>\n</>\n",
        "date": "29.11.2022 03:11:55",
        "repo": "operationcode/front-end",
        "type": "feat",
        "chatgpt_zeroshot": "Update donation form to use Virtuous software integration"
    },
    {
        "msg": "feat(tabs): access controller scope\nUpdating tabs to allow for access to the controller scope if needed.",
        "diff": "diff --git a/src/tab/tab.js b/src/tab/tab.js @@ -10,6 +10,13 @@ angular.module('mgcrea.ngStrap.tab', [])\nnavClass: 'nav-tabs',\nactiveClass: 'active'\n};\n+ var _tabsHash = {};\n+\n+ var _addTabControl = function(key, control)\n+ {\n+ if (!_tabsHash[key])\n+ _tabsHash[key] = control;\n+ }\nvar controller = this.controller = function ($scope, $element, $attrs) {\nvar self = this;\n@@ -91,6 +98,8 @@ angular.module('mgcrea.ngStrap.tab', [])\nvar $tab = {};\n$tab.defaults = defaults;\n$tab.controller = controller;\n+ $tab.addTabControl = _addTabControl;\n+ $tab.tabsHash = _tabsHash;\nreturn $tab;\n};\n@@ -113,6 +122,12 @@ angular.module('mgcrea.ngStrap.tab', [])\nvar ngModelCtrl = controllers[0];\nvar bsTabsCtrl = controllers[1];\n+ //Add a way for developers to access tab scope if needed. This allows for more fine grained control over what\n+ //tabs are available in the tab component\n+ if (attrs.tabKey != '' && attrs.tabKey != undefined){\n+ $tab.addTabControl(attrs.tabKey, bsTabsCtrl);\n+ }\n+\n// 'ngModel' does interfere with form validation\n// and status, use `bsActivePane` instead to avoid it\nif (ngModelCtrl) {\n",
        "date": "21.07.2016 14:53:14",
        "repo": "mgcrea/angular-strap",
        "type": "feat",
        "chatgpt_zeroshot": "Add ability to access tab scope for more fine-grained control"
    },
    {
        "msg": "feat: expose $el while evaluating data expression",
        "diff": "diff --git a/src/component.js b/src/component.js @@ -17,7 +17,7 @@ export default class Component {\nconst dataExpression = dataAttr === '' ? '{}' : dataAttr\nconst initExpression = this.$el.getAttribute('x-init')\n- this.unobservedData = seedDataForCloning ? seedDataForCloning : saferEval(dataExpression, {})\n+ this.unobservedData = seedDataForCloning ? seedDataForCloning : saferEval(dataExpression, { $el: this.$el })\n/* IE11-ONLY:START */\n// For IE11, add our magic properties to the original data for access.\n",
        "date": "12.05.2020 09:11:16",
        "repo": "alpinejs/alpine",
        "type": "feat",
        "chatgpt_zeroshot": "Add $el property to saferEval data object"
    },
    {
        "msg": "feat(Modal): Make toggle prop optional\n* Make toggle prop optional on Modal\nre\n* Check toggle prop for null",
        "diff": "diff --git a/src/Modal.js b/src/Modal.js @@ -14,7 +14,7 @@ import {\nconst propTypes = {\nisOpen: PropTypes.bool,\nsize: PropTypes.string,\n- toggle: PropTypes.func.isRequired,\n+ toggle: PropTypes.func,\nkeyboard: PropTypes.bool,\nbackdrop: PropTypes.oneOfType([\nPropTypes.bool,\n@@ -90,7 +90,7 @@ class Modal extends React.Component {\n}\nhandleEscape(e) {\n- if (this.props.keyboard && e.keyCode === 27) {\n+ if (this.props.keyboard && e.keyCode === 27 && this.props.toggle) {\nthis.props.toggle();\n}\n}\n@@ -100,7 +100,7 @@ class Modal extends React.Component {\nconst container = this._dialog;\n- if (e.target && !container.contains(e.target)) {\n+ if (e.target && !container.contains(e.target) && this.props.toggle) {\nthis.props.toggle();\n}\n}\n",
        "date": "14.02.2017 08:55:27",
        "repo": "reactstrap/reactstrap",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor Modal component to handle toggle function more efficiently"
    },
    {
        "msg": "feat(util): add warnOnce and deprecated fns\nAdd deprected util to mark prop-types as deprected\nAdd warnOnce to display a message in the console, never the same message twice",
        "diff": "diff --git a/src/utils.js b/src/utils.js @@ -167,3 +167,24 @@ export function omit(obj, omitKeys) {\n});\nreturn result;\n}\n+\n+let warned = {};\n+\n+export function warnOnce(message) {\n+ if (!warned[message]) {\n+ if (typeof console !== 'undefined') {\n+ console.error(message); // eslint-disable-line no-console\n+ }\n+ warned[message] = true;\n+ }\n+}\n+\n+export function deprecated(propType, explanation) {\n+ return function validate(props, propName, componentName, ...rest) {\n+ if (props[propName] !== null && typeof props[propName] !== 'undefined') {\n+ warnOnce(`\"${propName}\" property of \"${componentName}\" has been deprecated.\\n${explanation}`);\n+ }\n+\n+ return propType(props, propName, componentName, ...rest);\n+ };\n+}\n",
        "date": "16.08.2017 13:08:09",
        "repo": "reactstrap/reactstrap",
        "type": "feat",
        "chatgpt_zeroshot": "Add warnOnce and deprecated functions in utils.js"
    },
    {
        "msg": "feat(Modal): pass event object to toggle prop",
        "diff": "diff --git a/src/Modal.js b/src/Modal.js @@ -163,13 +163,13 @@ class Modal extends React.Component {\nconst container = this._dialog;\nif (e.target && !container.contains(e.target) && this.props.toggle) {\n- this.props.toggle();\n+ this.props.toggle(e);\n}\n}\nhandleEscape(e) {\nif (this.props.isOpen && this.props.keyboard && e.keyCode === 27 && this.props.toggle) {\n- this.props.toggle();\n+ this.props.toggle(e);\n}\n}\n",
        "date": "16.03.2018 15:03:47",
        "repo": "reactstrap/reactstrap",
        "type": "feat",
        "chatgpt_zeroshot": "Pass event object to toggle function in Modal component"
    },
    {
        "msg": "feat(exports): mark reactstrap as sideEffects free",
        "diff": "diff --git a/package.json b/package.json \"unpkg\": \"dist/reactstrap.min.js\",\n\"cdn\": \"dist/reactstrap.min.js\",\n\"esnext\": \"src\",\n+ \"sideEffects\": false,\n\"scripts\": {\n\"report-coverage\": \"coveralls < ./coverage/lcov.info\",\n\"test\": \"cross-env BABEL_ENV=test react-scripts test --env=jsdom\",\n",
        "date": "04.05.2018 18:09:12",
        "repo": "reactstrap/reactstrap",
        "type": "feat",
        "chatgpt_zeroshot": "Add sideEffects flag to package.json"
    },
    {
        "msg": "feat(Input): make it easier to focus\nThis adds .focus() directly on the component so a 'standard'  is good enough to call .focus() on",
        "diff": "diff --git a/src/Input.js b/src/Input.js @@ -27,6 +27,25 @@ const defaultProps = {\n};\nclass Input extends React.Component {\n+ constructor(props) {\n+ super(props);\n+ this.getRef = this.getRef.bind(this);\n+ this.focus = this.focus.bind(this);\n+ }\n+\n+ getRef(ref) {\n+ if (this.props.innerRef) {\n+ this.props.innerRef(ref);\n+ }\n+ this.ref = ref;\n+ }\n+\n+ focus() {\n+ if (this.ref) {\n+ this.ref.focus();\n+ }\n+ }\n+\nrender() {\nlet {\nclassName,\n",
        "date": "07.05.2018 16:20:37",
        "repo": "reactstrap/reactstrap",
        "type": "feat",
        "chatgpt_zeroshot": "Add constructor and methods for getting and focusing on input reference"
    },
    {
        "msg": "feat(Form): add submit to component\nThis makes it easier to use submit as if the component was a raw form (via 'standard' )",
        "diff": "diff --git a/src/Form.js b/src/Form.js -import React from 'react';\n+import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules } from './utils';\n@@ -15,8 +15,27 @@ const propTypes = {\nconst defaultProps = {\ntag: 'form',\n};\n+class Form extends Component {\n+ constructor(props) {\n+ super(props);\n+ this.getRef = this.getRef.bind(this);\n+ this.submit = this.submit.bind(this);\n+ }\n-const Form = (props) => {\n+ getRef(ref) {\n+ if (this.props.innerRef) {\n+ this.props.innerRef(ref);\n+ }\n+ this.ref = ref;\n+ }\n+\n+ submit() {\n+ if (this.ref) {\n+ this.ref.submit();\n+ }\n+ }\n+\n+ render() {\nconst {\nclassName,\ncssModule,\n@@ -24,7 +43,7 @@ const Form = (props) => {\ntag: Tag,\ninnerRef,\n...attributes\n- } = props;\n+ } = this.props;\nconst classes = mapToCssModules(classNames(\nclassName,\n@@ -34,7 +53,8 @@ const Form = (props) => {\nreturn (\n<Tag {...attributes} ref={innerRef} className={classes} />\n);\n-};\n+ }\n+}\nForm.propTypes = propTypes;\nForm.defaultProps = defaultProps;\n",
        "date": "07.05.2018 16:25:02",
        "repo": "reactstrap/reactstrap",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor Form component to use class syntax and add submit method"
    },
    {
        "msg": "feat(addMultipleEventListeners): handle singles\nAllow addMultipleEventListeners to handle single values for element and events",
        "diff": "diff --git a/src/utils.js b/src/utils.js @@ -35,7 +35,9 @@ export function conditionallyUpdateScrollbar() {\nconst fixedContent = document.querySelectorAll(\n'.fixed-top, .fixed-bottom, .is-fixed, .sticky-top'\n)[0];\n- const bodyPadding = fixedContent ? parseInt(fixedContent.style.paddingRight || 0, 10) : 0;\n+ const bodyPadding = fixedContent\n+ ? parseInt(fixedContent.style.paddingRight || 0, 10)\n+ : 0;\nif (isBodyOverflowing()) {\nsetScrollbarWidth(bodyPadding + scrollbarWidth);\n@@ -50,7 +52,10 @@ export function setGlobalCssModule(cssModule) {\nexport function mapToCssModules(className = '', cssModule = globalCssModule) {\nif (!cssModule) return className;\n- return className.split(' ').map(c => cssModule[c] || c).join(' ');\n+ return className\n+ .split(' ')\n+ .map(c => cssModule[c] || c)\n+ .join(' ');\n}\n/**\n@@ -98,7 +103,9 @@ export function warnOnce(message) {\nexport function deprecated(propType, explanation) {\nreturn function validate(props, propName, componentName, ...rest) {\nif (props[propName] !== null && typeof props[propName] !== 'undefined') {\n- warnOnce(`\"${propName}\" property of \"${componentName}\" has been deprecated.\\n${explanation}`);\n+ warnOnce(\n+ `\"${propName}\" property of \"${componentName}\" has been deprecated.\\n${explanation}`\n+ );\n}\nreturn propType(props, propName, componentName, ...rest);\n@@ -108,7 +115,10 @@ export function deprecated(propType, explanation) {\nexport function DOMElement(props, propName, componentName) {\nif (!(props[propName] instanceof Element)) {\nreturn new Error(\n- 'Invalid prop `' + propName + '` supplied to `' + componentName +\n+ 'Invalid prop `' +\n+ propName +\n+ '` supplied to `' +\n+ componentName +\n'`. Expected prop to be an instance of Element. Validation failed.'\n);\n}\n@@ -121,7 +131,7 @@ export const TransitionTimeouts = {\nFade: 150, // $transition-fade\nCollapse: 350, // $transition-collapse\nModal: 300, // $modal-transition\n- Carousel: 600, // $carousel-transition\n+ Carousel: 600 // $carousel-transition\n};\n// Duplicated Transition.propType keys to ensure that Reactstrap builds\n@@ -140,14 +150,14 @@ export const TransitionPropTypeKeys = [\n'onEntered',\n'onExit',\n'onExiting',\n- 'onExited',\n+ 'onExited'\n];\nexport const TransitionStatuses = {\nENTERING: 'entering',\nENTERED: 'entered',\nEXITING: 'exiting',\n- EXITED: 'exited',\n+ EXITED: 'exited'\n};\nexport const keyCodes = {\n@@ -155,7 +165,7 @@ export const keyCodes = {\nspace: 32,\ntab: 9,\nup: 38,\n- down: 40,\n+ down: 40\n};\nexport const PopperPlacements = [\n@@ -173,7 +183,7 @@ export const PopperPlacements = [\n'bottom-start',\n'left-end',\n'left',\n- 'left-start',\n+ 'left-start'\n];\nexport const canUseDOM = !!(\n@@ -192,7 +202,9 @@ export function findDOMElements(target) {\nselection = document.querySelectorAll(`#${target}`);\n}\nif (!selection.length) {\n- throw new Error(`The target '${target}' could not be identified in the dom, tip: check spelling`);\n+ throw new Error(\n+ `The target '${target}' could not be identified in the dom, tip: check spelling`\n+ );\n}\nreturn selection;\n}\n@@ -213,16 +225,26 @@ export function getTarget(target) {\nexport const defaultToggleEvents = ['touchstart', 'click'];\n-export function addMultipleEventListeners(els, handler, events) {\n+export function addMultipleEventListeners(_els, handler, _events) {\n+ let els = _els;\n+ if (!isArrayOrNodeList(els)) {\n+ els = [els];\n+ }\n+\n+ let events = _events;\n+ if (typeof events === 'string') {\n+ events = events.split(/\\s+/);\n+ }\n+\nif (\n!isArrayOrNodeList(els) ||\ntypeof handler !== 'function' ||\n!Array.isArray(events)\n) {\nthrow new Error(`\n- The first argument of this function must be an array or NodeList.\n+ The first argument of this function must be DOM node or an array on DOM nodes or NodeList.\nThe second must be a function.\n- The third is an array of strings that represents DOM events\n+ The third is a string or an array of strings that represents DOM events\n`);\n}\nevents.forEach((event) => {\n",
        "date": "14.05.2018 11:38:17",
        "repo": "reactstrap/reactstrap",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor code formatting for better readability"
    },
    {
        "msg": "feat(Modal): return focus after modal closes\nCloses",
        "diff": "diff --git a/src/Modal.js b/src/Modal.js @@ -235,6 +235,11 @@ class Modal extends React.Component {\n}\ninit() {\n+ try {\n+ this._triggeringElement = document.activeElement;\n+ } catch (err) {\n+ this._triggeringElement = null;\n+ }\nthis._element = document.createElement('div');\nthis._element.setAttribute('tabindex', '-1');\nthis._element.style.position = 'relative';\n@@ -259,6 +264,11 @@ class Modal extends React.Component {\nthis._element = null;\n}\n+ if (this._triggeringElement) {\n+ this._triggeringElement.focus();\n+ this._triggeringElement = null;\n+ }\n+\nif (this.bodyClassAdded) {\nconst modalOpenClassName = mapToCssModules('modal-open', this.props.cssModule);\n// Use regex to prevent matching `modal-open` as part of a different class, e.g. `my-modal-opened`\n",
        "date": "16.08.2018 19:55:37",
        "repo": "reactstrap/reactstrap",
        "type": "feat",
        "chatgpt_zeroshot": "Fix issue with focus when closing modal"
    },
    {
        "msg": "feat(Badge): allow innerRef",
        "diff": "diff --git a/src/Badge.js b/src/Badge.js @@ -7,6 +7,7 @@ const propTypes = {\ncolor: PropTypes.string,\npill: PropTypes.bool,\ntag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n+ innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\nchildren: PropTypes.node,\nclassName: PropTypes.string,\ncssModule: PropTypes.object,\n@@ -23,6 +24,7 @@ const Badge = (props) => {\nclassName,\ncssModule,\ncolor,\n+ innerRef,\npill,\ntag: Tag,\n...attributes\n@@ -40,7 +42,7 @@ const Badge = (props) => {\n}\nreturn (\n- <Tag {...attributes} className={classes} />\n+ <Tag {...attributes} className={classes} ref={innerRef} />\n);\n};\n",
        "date": "17.10.2018 02:03:41",
        "repo": "reactstrap/reactstrap",
        "type": "feat",
        "chatgpt_zeroshot": "Add innerRef prop to Badge component for better control over DOM element reference"
    },
    {
        "msg": "feat(CardBody): add innerRef to CardBody\nFixes",
        "diff": "diff --git a/src/CardBody.js b/src/CardBody.js @@ -7,6 +7,11 @@ const propTypes = {\ntag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\nclassName: PropTypes.string,\ncssModule: PropTypes.object,\n+ innerRef: PropTypes.oneOfType([\n+ PropTypes.object,\n+ PropTypes.string,\n+ PropTypes.func,\n+ ]),\n};\nconst defaultProps = {\n@@ -17,6 +22,7 @@ const CardBody = (props) => {\nconst {\nclassName,\ncssModule,\n+ innerRef,\ntag: Tag,\n...attributes\n} = props;\n@@ -26,7 +32,7 @@ const CardBody = (props) => {\n), cssModule);\nreturn (\n- <Tag {...attributes} className={classes} />\n+ <Tag {...attributes} className={classes} ref={innerRef} />\n);\n};\n",
        "date": "12.12.2018 05:49:16",
        "repo": "reactstrap/reactstrap",
        "type": "feat",
        "chatgpt_zeroshot": "Add innerRef prop to CardBody component"
    },
    {
        "msg": "feat(PopoverContent): add x-out-of-boundaries attribute\nCloses",
        "diff": "diff --git a/src/PopperContent.js b/src/PopperContent.js @@ -151,8 +151,8 @@ class PopperContent extends React.Component {\nmodifiers={extendedModifiers}\nplacement={placement}\n>\n- {({ ref, style, placement, arrowProps }) => (\n- <div ref={ref} style={style} className={popperClassName} x-placement={placement}>\n+ {({ ref, style, placement, outOfBoundaries, arrowProps }) => (\n+ <div ref={ref} style={style} className={popperClassName} x-placement={placement} x-out-of-boundaries={outOfBoundaries ? 'true' : undefined}>\n{children}\n{!hideArrow && <span ref={arrowProps.ref} className={arrowClassName} style={arrowProps.style} />}\n</div>\n",
        "date": "12.05.2020 20:14:43",
        "repo": "reactstrap/reactstrap",
        "type": "feat",
        "chatgpt_zeroshot": "Add outOfBoundaries prop to PopperContent component"
    },
    {
        "msg": "feat: add option to add fireStore.settings() in nuxt.config.js",
        "diff": "diff --git a/lib/plugins/main.js b/lib/plugins/main.js @@ -110,6 +110,11 @@ export default async (ctx, inject) => {\ninject('fireStore', fireStore)\ninject('fireStoreObj', fireStoreObj)\n+ const settings = options.services.firestore.settings\n+ if (settings) {\n+ fireStore.settings(settings)\n+ }\n+\nconst enablePersistence = options.services.firestore.enablePersistence\nif (enablePersistence && process.client) {\ntry {\n",
        "date": "10.03.2020 17:34:00",
        "repo": "nuxt-community/firebase-module",
        "type": "feat",
        "chatgpt_zeroshot": "Add settings configuration for Firestore in main.js"
    },
    {
        "msg": "feat(auth): add idToken to user's payload\nfeat",
        "diff": "diff --git a/lib/plugins/ssrAuth.js b/lib/plugins/ssrAuth.js @@ -55,7 +55,8 @@ export default async ({ req, res }) => {\n...res.locals,\nuser: {\n...authUser,\n- allClaims: decodedToken\n+ allClaims: decodedToken,\n+ idToken,\n}\n}\n}\n",
        "date": "11.05.2020 20:52:09",
        "repo": "nuxt-community/firebase-module",
        "type": "feat",
        "chatgpt_zeroshot": "Add idToken to user object in ssrAuth plugin"
    },
    {
        "msg": "feat(analytics.issupported): added check whether browser supports Firebase Analytics before init",
        "diff": "diff --git a/lib/plugins/services/analytics.js b/lib/plugins/services/analytics.js <% const { serviceMapping, serviceOptions, writeImportStatement, writeInjections } = options %>\n-export default async function (session) {\n+export default async function (session, firebase) {\n// Firebase Analytics can only be initiated on client side\nif (!process.client) {\nreturn\n@@ -10,6 +10,13 @@ export default async function (session) {\n<%= writeImportStatement(options) %>\n<% } %>\n+ // Only initialize it if the Browser supports it\n+ const isSupported = await firebase.analytics.isSupported()\n+ if (!isSupported) {\n+ console.info('[@nuxtjs/firebase]: Firebase Analytics was not initialized because it is not supported on this browser.')\n+ return\n+ }\n+\nconst analyticsService = session.<%= serviceMapping.id %>()\n<% if ('collectionEnabled' in serviceOptions) { %>\n",
        "date": "29.10.2020 00:49:09",
        "repo": "nuxt-community/firebase-module",
        "type": "feat",
        "chatgpt_zeroshot": "Add firebase parameter to analytics service function and check browser support before initializing Firebase Analytics"
    },
    {
        "msg": "feat(vega-typings): add missing start/endAngle, inner/outerRadius",
        "diff": "diff --git a/packages/vega-typings/types/spec/config.d.ts b/packages/vega-typings/types/spec/config.d.ts @@ -251,6 +251,32 @@ export interface MarkConfig {\n*/\nangle?: number | SignalRef;\n+ /**\n+ * The start angle in radians for arc marks.\n+ */\n+ startAngle?: number | SignalRef;\n+\n+ /**\n+ * The start angle in radians for arc marks.\n+ */\n+ endAngle?: number | SignalRef;\n+\n+ /**\n+ * The inner radius in pixels of arc marks.\n+ *\n+ * @minimum 0\n+ * __Default value:__ `0`\n+ */\n+ innerRadius?: number | SignalRef;\n+\n+ /**\n+ * The outer radius in pixels of arc marks.\n+ *\n+ * @minimum 0\n+ * __Default value:__ `0`\n+ */\n+ outerRadius?: number | SignalRef;\n+\n/**\n* The vertical alignment of the text. One of `\"top\"`, `\"bottom\"`, `\"middle\"`, `\"alphabetic\"`.\n*\n",
        "date": "29.03.2020 19:56:38",
        "repo": "vega/vega",
        "type": "feat",
        "chatgpt_zeroshot": "Add startAngle, endAngle, innerRadius, and outerRadius properties to MarkConfig interface"
    },
    {
        "msg": "feat: Adjust default time/utc value caption formats.",
        "diff": "diff --git a/packages/vega-scale/src/caption.js b/packages/vega-scale/src/caption.js import {labelFormat, labelValues} from './labels';\nimport {Time, UTC} from './scales/types';\n-import {isDiscrete, isDiscretizing} from './scales';\n+import {isDiscrete, isDiscretizing, isTemporal} from './scales';\n+import {timeFormat, utcFormat} from 'vega-time';\nimport {isString, peek} from 'vega-util';\nfunction format(scale, specifier, formatType) {\nconst type = formatType || scale.type;\n// replace abbreviated time specifiers to improve screen reader experience\n- if (isString(specifier) && (type === Time || type === UTC)) {\n+ if (isString(specifier) && isTemporal(type)) {\nspecifier = specifier.replace(/%a/g, '%A').replace(/%b/g, '%B');\n}\n- return !specifier && type === Time ? d => new Date(d).toLocaleString()\n- : !specifier && type === UTC ? d => new Date(d).toUTCString()\n+\n+ return !specifier && type === Time ? timeFormat('%A, %d %B %Y, %X')\n+ : !specifier && type === UTC ? utcFormat('%A, %d %B %Y, %X UTC')\n: labelFormat(scale, 5, null, specifier, formatType, true);\n}\n",
        "date": "26.04.2020 17:46:32",
        "repo": "vega/vega",
        "type": "feat",
        "chatgpt_zeroshot": "Add isTemporal function and update time formatting in caption.js"
    },
    {
        "msg": "feat: more precise type for range config",
        "diff": "diff --git a/packages/vega-typings/types/spec/config.d.ts b/packages/vega-typings/types/spec/config.d.ts @@ -625,23 +625,23 @@ export type RangeConfig = {\n/**\n* Default [color scheme](https://vega.github.io/vega/docs/schemes/) for categorical data.\n*/\n- category?: RangeScheme | string[];\n+ category?: RangeScheme | Color[];\n/**\n* Default [color scheme](https://vega.github.io/vega/docs/schemes/) for diverging quantitative ramps.\n*/\n- diverging?: RangeScheme | string[];\n+ diverging?: RangeScheme | Color[];\n/**\n* Default [color scheme](https://vega.github.io/vega/docs/schemes/) for quantitative heatmaps.\n*/\n- heatmap?: RangeScheme | string[];\n+ heatmap?: RangeScheme | Color[];\n/**\n* Default [color scheme](https://vega.github.io/vega/docs/schemes/) for rank-ordered data.\n*/\n- ordinal?: RangeScheme | string[];\n+ ordinal?: RangeScheme | Color[];\n/**\n* Default [color scheme](https://vega.github.io/vega/docs/schemes/) for sequential quantitative ramps.\n*/\n- ramp?: RangeScheme | string[];\n+ ramp?: RangeScheme | Color[];\n/**\n* Array of [symbol](https://vega.github.io/vega/docs/marks/symbol/) names or paths for the default shape palette.\n*/\n",
        "date": "09.06.2020 10:26:11",
        "repo": "vega/vega",
        "type": "feat",
        "chatgpt_zeroshot": "refactor: Update RangeConfig types to use Color type instead of string[] for color schemes"
    },
    {
        "msg": "feat: update view typings",
        "diff": "diff --git a/packages/vega-typings/types/runtime/index.d.ts b/packages/vega-typings/types/runtime/index.d.ts @@ -73,66 +73,64 @@ export class View {\n},\n);\n+ // View Configuration\n+\ninitialize(container?: Element | string, bindContainer?: Element | string): this;\n+\nfinalize(): this;\n+ loader(loader: Loader): this;\n+ loader(): Loader;\n+\nlogLevel(level: number): this;\nlogLevel(): number;\n+\nlogger(logger: LoggerInterface): this;\nlogger(): LoggerInterface;\nrenderer(renderer: Renderers): this;\nrenderer(): Renderers;\n- loader(loader: Loader): this;\n- loader(): Loader;\n-\n- locale(locale: LocaleFormatters): this;\n- locale(): LocaleFormatters;\n+ tooltip(handler: TooltipHandler): this;\nhover(hoverSet?: EncodeEntryName, leaveSet?: EncodeEntryName): this;\n- run(encode?: string): this;\n- runAfter(callback: (view: this) => void, enqueue?: boolean, priority?: number): this;\n- runAsync(): Promise<View>;\n- insert(name: string, tuples: any): this;\n- remove(name: string, tuples: any): this;\n- change(name: string, changeset: Changeset): this;\n- changeset(): any;\n- data(name: string): any[];\n- data(name: string, tuples: any): this;\ndescription(s: string): this;\ndescription(): string;\n+ background(s: Color): this;\n+ background(): Color;\n+\nwidth(w: number): this;\nwidth(): number;\nheight(h: number): this;\nheight(): number;\n- origin(): [number, number];\n-\npadding(p: Padding): this;\npadding(): Padding;\nresize(): this;\n- toImageURL(type: string, scaleFactor?: number): Promise<string>;\n- toSVG(scaleFactor?: number): Promise<string>;\n- toCanvas(scaleFactor?: number, options?: ToCanvasOptions): Promise<HTMLCanvasElement>;\n+ // Dataflow and Rendering\n+\n+ runAsync(): Promise<View>;\n+\n+ run(encode?: string): this;\n+\n+ runAfter(callback: (view: this) => void, enqueue?: boolean, priority?: number): this;\n+\n+ dirty(item: any): void;\n- signal(name: string, value: SignalValue): this;\n- signal(name: string): SignalValue;\ncontainer(): HTMLElement | null;\n+\nscenegraph(): Scene;\n- addEventListener(type: string, handler: EventListenerHandler): this;\n- removeEventListener(type: string, handler: EventListenerHandler): this;\n- addSignalListener(name: string, handler: SignalListenerHandler): this;\n- removeSignalListener(name: string, handler: SignalListenerHandler): this;\n- addDataListener(name: string, handler: DataListenerHandler): this;\n- removeDataListener(name: string, handler: DataListenerHandler): this;\n- addResizeListener(handler: ResizeHandler): this;\n- removeResizeListener(handler: ResizeHandler): this;\n- tooltip(handler: TooltipHandler): this;\n+\n+ origin(): [number, number];\n+\n+ // Signals\n+\n+ signal(name: string, value: SignalValue): this;\n+ signal(name: string): SignalValue;\ngetState(options?: {\nsignals?: (name?: string, operator?: any) => boolean;\n@@ -140,6 +138,49 @@ export class View {\nrecurse?: boolean;\n}): { signals?: any; data?: any };\nsetState(state: { signals?: any; data?: any }): this;\n+\n+ addSignalListener(name: string, handler: SignalListenerHandler): this;\n+ removeSignalListener(name: string, handler: SignalListenerHandler): this;\n+\n+ // Event Handling\n+\n+ events(source: any, type: any, filter?: (_: any) => boolean): any;\n+\n+ addEventListener(type: string, handler: EventListenerHandler): this;\n+ removeEventListener(type: string, handler: EventListenerHandler): this;\n+\n+ addResizeListener(handler: ResizeHandler): this;\n+ removeResizeListener(handler: ResizeHandler): this;\n+\n+ globalCursor(flag: boolean): any;\n+\n+ preventDefault(flag: boolean): void;\n+\n+ // Image Export\n+\n+ toCanvas(scaleFactor?: number, options?: ToCanvasOptions): Promise<HTMLCanvasElement>;\n+ toSVG(scaleFactor?: number): Promise<string>;\n+ toImageURL(type: string, scaleFactor?: number): Promise<string>;\n+\n+ // Data and Scales\n+ scale(name: string): any;\n+\n+ data(name: string): any[];\n+ data(name: string, tuples: any): this;\n+\n+ addDataListener(name: string, handler: DataListenerHandler): this;\n+ removeDataListener(name: string, handler: DataListenerHandler): this;\n+\n+ change(name: string, changeset: Changeset): this;\n+ insert(name: string, tuples: any): this;\n+ remove(name: string, tuples: any): this;\n+\n+ // Undocumented (https://github.com/vega/vega/issues/2844, https://github.com/vega/vega/issues/2845)\n+\n+ locale(locale: LocaleFormatters): this;\n+ locale(): LocaleFormatters;\n+\n+ changeset(): Changeset;\n}\nexport type ScenegraphEvent = MouseEvent | TouchEvent | KeyboardEvent;\n",
        "date": "31.08.2020 09:04:04",
        "repo": "vega/vega",
        "type": "feat",
        "chatgpt_zeroshot": "Add new methods for view configuration, dataflow, rendering, signals, event handling, image export, data and scales, and undocumented features."
    },
    {
        "msg": "feat: declare ViewOptions in vega-typings",
        "diff": "diff --git a/packages/vega-typings/types/runtime/index.d.ts b/packages/vega-typings/types/runtime/index.d.ts @@ -55,10 +55,7 @@ export interface ToCanvasOptions {\nexternalContext?: any;\n}\n-export class View {\n- constructor(\n- runtime: Runtime,\n- opt?: {\n+export interface ViewOptions {\nbackground?: Color;\nbind?: Element | string;\ncontainer?: Element | string;\n@@ -70,8 +67,10 @@ export class View {\ntooltip?: TooltipHandler;\nlocale?: LocaleFormatters;\nexpr?: any;\n- },\n- );\n+}\n+\n+export class View {\n+ constructor(runtime: Runtime, opt?: ViewOptions);\n// View Configuration\n",
        "date": "11.11.2020 20:37:04",
        "repo": "vega/vega",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor View class constructor and options handling"
    },
    {
        "msg": "feat: add stroke, fill, and opacity to various SceneItem types",
        "diff": "diff --git a/packages/vega-typings/types/runtime/scene.d.ts b/packages/vega-typings/types/runtime/scene.d.ts @@ -50,6 +50,7 @@ export interface SceneItem {\n};\nx: number;\ny: number;\n+ opacity?: number;\n}\nexport type SceneAxis = SceneItem & {\n@@ -58,12 +59,16 @@ export type SceneAxis = SceneItem & {\nexport type SceneRect = SceneItem & {\nfill: string;\n+ fillOpacity?: number;\n+ stroke?: string;\n+ strokeWidth?: number;\n+ strokeOpacity?: number;\nheight: number;\nwidth: number;\n+ cornerRadius?: number;\n};\nexport type SceneLine = SceneItem & {\n- opacity: number;\nstroke: string;\nstrokeWidth: number;\nx2: number;\n@@ -84,9 +89,12 @@ export type SceneGroup = SceneItem & {\nexport type SceneSymbol = SceneItem & {\nfill: string;\n+ fillOpacity?: number;\nshape: string;\nsize: number;\n- strokeWidth: number;\n+ stroke?: string;\n+ strokeWidth?: number;\n+ strokeOpacity?: number;\n};\nexport type SceneTextBaseline = 'top' | 'middle' | 'bottom';\n",
        "date": "11.04.2022 22:50:52",
        "repo": "vega/vega",
        "type": "feat",
        "chatgpt_zeroshot": "Add optional opacity, fillOpacity, stroke, strokeWidth, strokeOpacity, and cornerRadius properties to SceneRect and SceneSymbol."
    },
    {
        "msg": "feat(platform-tizen): add custom security profile",
        "diff": "diff --git a/packages/rnv/src/platformTools/tizen/index.js b/packages/rnv/src/platformTools/tizen/index.js @@ -61,20 +61,21 @@ const formatXMLObject = (obj) => {\nreturn {};\n};\n+const DEFAULT_SECURITY_PROFILE_NAME = 'RNVanillaCert';\n+const DEFAULT_CERTIFICATE_NAME = 'tizen_author';\n+const DEFAULT_CERTIFICATE_NAME_WITH_EXTENSION = `${DEFAULT_CERTIFICATE_NAME}.p12`;\n+\nexport const configureTizenGlobal = c => new Promise((resolve, reject) => {\nlogTask('configureTizenGlobal');\n// Check Tizen Cert\n// if (isPlatformActive(c, TIZEN) || isPlatformActive(c, TIZEN_WATCH)) {\n- const tizenAuthorCert = path.join(\n- c.paths.workspace.dir,\n- 'tizen_author.p12'\n- );\n+ const tizenAuthorCert = path.join(c.paths.workspace.dir, DEFAULT_CERTIFICATE_NAME_WITH_EXTENSION);\nif (fs.existsSync(tizenAuthorCert)) {\n- logDebug('tizen_author.p12 file exists!');\n+ logDebug(`${DEFAULT_CERTIFICATE_NAME_WITH_EXTENSION} file exists!`);\nresolve();\n} else {\nlogWarning(\n- 'tizen_author.p12 file missing! Creating one for you...'\n+ `${DEFAULT_CERTIFICATE_NAME_WITH_EXTENSION} file missing! Creating one for you...`\n);\ncreateDevelopTizenCertificate(c)\n.then(() => resolve())\n@@ -109,12 +110,20 @@ export const listTizenTargets = async (c, name) => {\nexport const createDevelopTizenCertificate = c => new Promise((resolve, reject) => {\nlogTask('createDevelopTizenCertificate');\n+ const certDirPath = c.paths.workspace.dir;\n+ const certFilename = DEFAULT_CERTIFICATE_NAME;\n+ const certPassword = '1234';\n+\nexecCLI(\nc,\nCLI_TIZEN,\n- `certificate -- ${c.paths.workspace.dir} -a rnv -f tizen_author -p 1234`\n+ `certificate -- ${certDirPath} -a rnv -f ${certFilename} -p ${certPassword}`,\n)\n- .then(() => addDevelopTizenCertificate(c))\n+ .then(() => addDevelopTizenCertificate(c, {\n+ profileName: DEFAULT_SECURITY_PROFILE_NAME,\n+ certPath: path.join(certDirPath, `${certFilename}.p12`),\n+ certPassword,\n+ }))\n.then(() => resolve())\n.catch((e) => {\nlogError(e);\n@@ -122,16 +131,14 @@ export const createDevelopTizenCertificate = c => new Promise((resolve, reject)\n});\n});\n-export const addDevelopTizenCertificate = c => new Promise((resolve) => {\n+export const addDevelopTizenCertificate = (c, secureProfileConfig) => new Promise((resolve) => {\nlogTask('addDevelopTizenCertificate');\n+ const { profileName, certPath, certPassword } = secureProfileConfig || {};\nexecCLI(\nc,\nCLI_TIZEN,\n- `security-profiles add -n RNVanillaCert -a ${path.join(\n- c.paths.workspace.dir,\n- 'tizen_author.p12'\n- )} -p 1234`\n+ `security-profiles add -n ${profileName} -a ${certPath} -p ${certPassword}`,\n)\n.then(() => resolve())\n.catch((e) => {\n@@ -285,7 +292,7 @@ export const runTizen = async (c, platform, target) => {\nconst tOut = path.join(tDir, 'output');\nconst tId = platformConfig.id;\nconst wgt = `${platformConfig.appName}.wgt`;\n- const certProfile = platformConfig.certificateProfile ?? 'RNVanillaCert';\n+ const certProfile = platformConfig.certificateProfile ?? DEFAULT_SECURITY_PROFILE_NAME;\nlet deviceID;\n@@ -472,7 +479,7 @@ export const buildTizenProject = async (c, platform) => {\nif (!c.program.hosted) {\nconst tOut = path.join(tDir, 'output');\nconst tBuild = path.join(tDir, 'build');\n- const certProfile = platformConfig.certificateProfile ?? 'RNVanillaCert';\n+ const certProfile = platformConfig.certificateProfile ?? DEFAULT_SECURITY_PROFILE_NAME;\nawait execCLI(c, CLI_TIZEN, `build-web -- ${tDir} -out ${tBuild}`);\nawait execCLI(\n",
        "date": "15.06.2020 08:21:30",
        "repo": "pavjacko/renative",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor Tizen configuration to use default certificate names and profiles"
    },
    {
        "msg": "feat: autocomplete",
        "diff": "diff --git a/packages/rnv/src/core/engineManager/index.js b/packages/rnv/src/core/engineManager/index.js -import { logDebug, logTask, logInitTask, logExitTask, chalk, logInfo } from '../systemManager/logger';\n+import { logDebug, logTask, logInitTask, logExitTask, chalk, logInfo, logError } from '../systemManager/logger';\nimport { getConfigProp } from '../common';\nimport Analytics from '../systemManager/analytics';\n-import {\n- executePipe\n-} from '../projectManager/buildHooks';\n+import { executePipe } from '../projectManager/buildHooks';\nimport { inquirerPrompt } from '../../cli/prompt';\nconst REGISTERED_ENGINES = [];\n@@ -131,6 +129,7 @@ export const findSuitableTask = async (c) => {\n};\n});\n});\n+\nconst taskInstances = Object.values(suitableTaskInstances);\nlet tasks;\nlet defaultCmd = 'new';\n@@ -161,34 +160,76 @@ export const findSuitableTask = async (c) => {\nif (c.subCommand) task += ` ${c.subCommand}`;\nlet suitableEngines = REGISTERED_ENGINES.filter(engine => engine.hasTask(task));\n+ const isAutoComplete = !suitableEngines.length && !!c.command;\n+ const message = isAutoComplete ? `Autocomplete action for \"${c.command}\"` : `Pick a subCommand for ${c.command}`;\nif (!suitableEngines.length) {\n- const supportedSubtasks = {};\n+ // Get all supported tasks\n+ const supportedSubtasksArr = [];\nREGISTERED_ENGINES.forEach((engine) => {\nengine.getSubTasks(task).forEach((taskInstance) => {\n- const taskKey = taskInstance.task.replace(task, '').trim();\n- const desc = taskInstance.description ? `(${taskInstance.description})` : '';\n- const key = `${taskKey} ${chalk().grey(desc)}`;\n- supportedSubtasks[key] = {\n+ const taskKey = isAutoComplete ? taskInstance.task : taskInstance.task.split(' ')[1];\n+\n+ supportedSubtasksArr.push({\n+ desc: taskInstance.description?.toLowerCase?.(),\ntaskKey\n- };\n});\n});\n+ });\n+ const supportedSubtasks = {};\n+ // Normalize task options\n+ const supportedSubtasksFilter = {};\n+ supportedSubtasksArr.forEach((tsk) => {\n+ const mergedTask = supportedSubtasksFilter[tsk.taskKey];\n+ if (!mergedTask) {\n+ supportedSubtasksFilter[tsk.taskKey] = tsk;\n+ } else if (!mergedTask.desc.includes(tsk.desc)) {\n+ mergedTask.desc += `, ${tsk.desc}`;\n+ }\n+ });\n+ // Generate final list object\n+ Object.values(supportedSubtasksFilter).forEach((v) => {\n+ const desc = v.desc ? `(${v.desc})` : '';\n+ const key = `${v.taskKey} ${chalk().grey(desc)}`;\n+ supportedSubtasks[key] = {\n+ taskKey: v.taskKey\n+ };\n+ });\n+\nconst subTasks = Object.keys(supportedSubtasks);\nif (subTasks.length) {\nconst { subCommand } = await inquirerPrompt({\ntype: 'list',\nname: 'subCommand',\n- message: `Pick a subCommand for ${c.command}`,\n+ message,\nchoices: subTasks,\n});\n-\n+ if (isAutoComplete) {\n+ task = supportedSubtasks[subCommand].taskKey;\n+ c.command = task.split(' ')[0];\n+ c.subCommand = task.split(' ')[1];\n+ if (c.subCommand) {\n+ task = `${c.command} ${c.subCommand}`;\n+ } else {\n+ task = `${c.command}`;\n+ }\n+ } else {\nc.subCommand = supportedSubtasks[subCommand].taskKey;\ntask = `${c.command} ${c.subCommand}`;\n+ }\n+\n+\nsuitableEngines = REGISTERED_ENGINES.filter(engine => engine.hasTask(task));\n}\n}\n+ if (!suitableEngines.length) {\n+ logError(`could not find suitable task for ${chalk().white(c.command)}`);\n+ c.command = null;\n+ c.subCommand = null;\n+ return findSuitableTask(c);\n+ }\n+\nif (!c.platform) {\nconst supportedPlatforms = {};\nsuitableEngines.forEach((engine) => {\n",
        "date": "28.07.2020 08:19:48",
        "repo": "pavjacko/renative",
        "type": "feat",
        "chatgpt_zeroshot": "Add logError to handle cases where suitable task is not found"
    },
    {
        "msg": "feat(xcode): Added EXCLUDED_ARCHS support for specific build targets",
        "diff": "diff --git a/packages/rnv-engine-rn/src/sdks/sdk-xcode/xcodeParser.js b/packages/rnv-engine-rn/src/sdks/sdk-xcode/xcodeParser.js @@ -168,11 +168,29 @@ const _parseXcodeProject = (c, platform) => new Promise((resolve) => {\n}\nif (excludedArchs) {\n+ const tempExcludedArchs = [];\n+\n+ if (typeof excludedArchs.forEach === 'function') {\n+ excludedArchs.forEach((arch) => {\n+ if (typeof arch === 'string') tempExcludedArchs.push(arch);\n+ if (typeof arch === 'object') {\n+ Object.keys(arch).forEach((key) => {\n+ xcodeProj.updateBuildProperty(\n+ `\"EXCLUDED_ARCHS[${key}]\"`,\n+ `\"${arch[key]}\"`\n+ );\n+ });\n+ }\n+ });\n+ }\n+\n+ if (tempExcludedArchs.length) {\nxcodeProj.updateBuildProperty(\n'EXCLUDED_ARCHS',\n- `\"${excludedArchs.join(' ')}\"`\n+ `\"${tempExcludedArchs.join(' ')}\"`\n);\n}\n+ }\nxcodeProj.updateBuildProperty(\n",
        "date": "27.02.2021 17:13:22",
        "repo": "pavjacko/renative",
        "type": "feat",
        "chatgpt_zeroshot": "\"Refactor xcodeParser.js to handle excludedArchs with object values\""
    },
    {
        "msg": "feat(CarPlay): Add CarPlay plugin to the list of possible plugins",
        "diff": "diff --git a/packages/rnv/pluginTemplates/renative.plugins.json b/packages/rnv/pluginTemplates/renative.plugins.json },\n\"@lightningjs/sdk\": {\n\"version\": \"3.0.0\"\n+ },\n+ \"react-native-carplay\": {\n+ \"version\": \"2.0.0\",\n+ \"ios\": {\n+ \"path\": \"node_modules/react-native-carplay\",\n+ \"podName\": \"react-native-carplay\",\n+ \"appDelegateImports\": [\"CarPlay\", \"react_native_carplay\"],\n+ \"appDelegateExtensions\": [\"CPApplicationDelegate\"],\n+ \"appDelegateMethods\": {\n+ \"application\": {\n+ \"didConnectCarInterfaceController\": [\n+ \"RNCarPlay.connect(with: interfaceController, window: window)\"\n+ ],\n+ \"didDisconnectCarInterfaceController\": [\"RNCarPlay.disconnect()\"]\n+ }\n+ }\n+ }\n}\n}\n}\n",
        "date": "15.06.2021 14:00:16",
        "repo": "pavjacko/renative",
        "type": "feat",
        "chatgpt_zeroshot": "Add react-native-carplay plugin to renative.plugins.json"
    },
    {
        "msg": "feat(Lightning): allow specifying build target in renative config",
        "diff": "diff --git a/packages/rnv-engine-lightning/src/sdks/sdk-lightning/index.js b/packages/rnv-engine-lightning/src/sdks/sdk-lightning/index.js @@ -24,10 +24,12 @@ export const runLightningProject = async (c, target) => {\n};\nexport const buildLightningProject = async (c) => {\n+ const { platform } = c;\nlogTask('buildLightningProject');\nconst entryFile = getConfigProp(c, c.platform, 'entryFile');\n+ const target = getConfigProp(c, platform, 'target', 'es6');\n- await executeAsync(c, 'lng dist', {\n+ await executeAsync(c, `lng dist --${target}`, {\nstdio: 'inherit',\nsilent: false,\nenv: {\n",
        "date": "21.06.2021 17:03:53",
        "repo": "pavjacko/renative",
        "type": "feat",
        "chatgpt_zeroshot": "Add target parameter to buildLightningProject function"
    },
    {
        "msg": "feat(Lightning): add configure task",
        "diff": "diff --git a/packages/rnv-engine-lightning/src/sdks/sdk-lightning/index.js b/packages/rnv-engine-lightning/src/sdks/sdk-lightning/index.js -import { Common, EngineManager, Exec, Logger } from 'rnv';\n+import path from 'path';\n+import { Common, Constants, EngineManager, Exec, FileUtils, Logger, PlatformManager, ProjectManager, SDKManager } from 'rnv';\n+import semver from 'semver';\n+const { TIZEN } = Constants;\n+const { isPlatformActive } = PlatformManager;\nconst { logTask } = Logger;\nconst { executeAsync } = Exec;\n-const { getPlatformBuildDir, getConfigProp } = Common;\n+const {\n+ getPlatformBuildDir, getConfigProp, addSystemInjects, getAppVersion, getPlatformProjectDir, getAppTitle, getAppId, getAppDescription\n+} = Common;\nconst { generateEnvVars } = EngineManager;\n+const { copyAssetsFolder, copyBuildsFolder } = ProjectManager;\n+const { writeCleanFile } = FileUtils;\nexport const runLightningProject = async (c, target) => {\nlogTask('runLightningProject', `target:${target}`);\n@@ -41,7 +49,47 @@ export const buildLightningProject = async (c) => {\nreturn true;\n};\n-\n-export const configureLightningProject = async () => {\n+export const configureLightningProject = async (c) => {\nlogTask('configureLightningProject');\n+ const { platform } = c;\n+ c.runtime.platformBuildsProjectPath = `${getPlatformBuildDir(c)}`;\n+ if (!isPlatformActive(c, platform)) {\n+ return;\n+ }\n+ await copyAssetsFolder(c, platform);\n+ await _configureProject(c);\n+ return copyBuildsFolder(c, platform);\n};\n+\n+const _configureProject = c => new Promise((resolve) => {\n+ logTask('_configureProject');\n+ const { platform } = c;\n+ const p = c.buildConfig.platforms[platform];\n+\n+ const injects = platform === TIZEN ? [\n+ { pattern: '{{PACKAGE}}', override: p.package },\n+ { pattern: '{{ID}}', override: p.id },\n+ { pattern: '{{APP_NAME}}', override: p.appName },\n+ { pattern: '{{APP_VERSION}}', override: semver.coerce(getAppVersion(c, platform)) }\n+ ] : [\n+ { pattern: '{{APPLICATION_ID}}', override: getAppId(c, platform).toLowerCase() },\n+ { pattern: '{{APP_TITLE}}', override: getAppTitle(c, platform) },\n+ { pattern: '{{APP_VERSION}}', override: semver.coerce(getAppVersion(c, platform)) },\n+ { pattern: '{{APP_DESCRIPTION}}', override: getAppDescription(c, platform) },\n+ { pattern: '{{APP_BG_COLOR}}', override: getConfigProp(c, platform, 'bgColor', '#fff') },\n+ { pattern: '{{APP_ICON_COLOR}}', override: getConfigProp(c, platform, 'iconColor', '#000') },\n+ { pattern: '{{APP_VENDOR}}', override: getConfigProp(c, platform, 'vendor', 'Pavel Jacko') }\n+ ];\n+\n+ addSystemInjects(c, injects);\n+\n+ const configFile = platform === TIZEN ? 'config.xml' : 'appinfo.json';\n+ const file = path.join(getPlatformProjectDir(c), configFile);\n+ writeCleanFile(\n+ file,\n+ file,\n+ injects, null, c\n+ );\n+\n+ resolve();\n+});\n",
        "date": "25.06.2021 17:21:14",
        "repo": "pavjacko/renative",
        "type": "feat",
        "chatgpt_zeroshot": "refactor: Update SDK imports and configure project function in Lightning engine"
    },
    {
        "msg": "feat: package lightning apps using rnv build",
        "diff": "diff --git a/packages/rnv-engine-lightning/src/sdks/sdk-lightning/index.js b/packages/rnv-engine-lightning/src/sdks/sdk-lightning/index.js @@ -3,10 +3,10 @@ import path from 'path';\nimport { Common, Constants, EngineManager, Exec, FileUtils, Logger, PlatformManager, ProjectManager, SDKManager } from 'rnv';\nimport semver from 'semver';\n-const { TIZEN } = Constants;\n+const { TIZEN, CLI_TIZEN, CLI_WEBOS_ARES_PACKAGE } = Constants;\nconst { isPlatformActive } = PlatformManager;\n-const { logTask } = Logger;\n-const { executeAsync } = Exec;\n+const { chalk, logTask, logSuccess } = Logger;\n+const { executeAsync, execCLI } = Exec;\nconst {\ngetPlatformBuildDir, getConfigProp, addSystemInjects, getAppVersion, getPlatformProjectDir, getAppTitle, getAppId, getAppDescription\n} = Common;\n@@ -14,6 +14,8 @@ const { generateEnvVars } = EngineManager;\nconst { copyAssetsFolder, copyBuildsFolder } = ProjectManager;\nconst { writeCleanFile } = FileUtils;\n+const { DEFAULT_SECURITY_PROFILE_NAME } = SDKManager.Tizen;\n+\nexport const runLightningProject = async (c, target) => {\nlogTask('runLightningProject', `target:${target}`);\nconst entryFile = getConfigProp(c, c.platform, 'entryFile');\n@@ -32,10 +34,17 @@ export const runLightningProject = async (c, target) => {\n};\nexport const buildLightningProject = async (c) => {\n- const { platform } = c;\nlogTask('buildLightningProject');\n+\n+ const { platform } = c;\n+ const platformConfig = c.buildConfig.platforms[platform];\n+\nconst entryFile = getConfigProp(c, c.platform, 'entryFile');\nconst target = getConfigProp(c, platform, 'target', 'es6');\n+ const tBuild = getPlatformProjectDir(c);\n+\n+ const tOut = path.join(tBuild, 'output');\n+ const certProfile = platformConfig.certificateProfile ?? DEFAULT_SECURITY_PROFILE_NAME;\nawait executeAsync(c, `lng dist --${target}`, {\nstdio: 'inherit',\n@@ -46,6 +55,25 @@ export const buildLightningProject = async (c) => {\n...generateEnvVars(c),\n}\n});\n+\n+ if (platform === TIZEN) {\n+ await execCLI(\n+ c,\n+ CLI_TIZEN,\n+ `package -- ${tBuild} -s ${certProfile} -t wgt -o ${tOut}`\n+ );\n+\n+ logSuccess(\n+ `Your WGT package is located in ${chalk().cyan(tOut)} .`\n+ );\n+ } else {\n+ await execCLI(c, CLI_WEBOS_ARES_PACKAGE, `-o ${tOut} ${tBuild} -n`);\n+\n+ logSuccess(\n+ `Your IPK package is located in ${chalk().cyan(tOut)} .`\n+ );\n+ }\n+\nreturn true;\n};\n",
        "date": "28.06.2021 15:23:37",
        "repo": "pavjacko/renative",
        "type": "feat",
        "chatgpt_zeroshot": "Add CLI constants and update build process for Tizen and WebOS platforms"
    },
    {
        "msg": "feat: explicit electron export target",
        "diff": "diff --git a/packages/rnv-engine-rn-electron/src/sdks/sdk-electron/index.js b/packages/rnv-engine-rn-electron/src/sdks/sdk-electron/index.js -import path from 'path';\nimport { spawn } from 'child_process';\n-import { Exec, WebpackUtils, FileUtils, Common, Logger, Constants, Resolver, PlatformManager, ProjectManager } from 'rnv';\n+import path from 'path';\n+import { Common, Constants, Exec, FileUtils, Logger, PlatformManager, ProjectManager, Resolver, WebpackUtils } from 'rnv';\nconst { createPlatformBuild, isPlatformActive } = PlatformManager;\nconst { executeAsync } = Exec;\n@@ -247,7 +247,7 @@ const exportElectron = async (c) => {\n`npx electron-builder --config ${path.join(\nplatformBuildDir,\n'electronConfig.json'\n- )}`\n+ )} -${c.platform[0]}`\n);\nlogSuccess(\n",
        "date": "02.12.2021 16:54:59",
        "repo": "pavjacko/renative",
        "type": "feat",
        "chatgpt_zeroshot": "Reorder imports and add platform flag to electron-builder command"
    },
    {
        "msg": "feat: Add xcodebuildArgs to CLI constants",
        "diff": "diff --git a/packages/rnv/src/core/constants.ts b/packages/rnv/src/core/constants.ts @@ -439,6 +439,11 @@ export const PARAM_KEYS: any = {\nanalyzer: {\ndescription: 'Enable real-time bundle analyzer'\n},\n+ xcodebuildArgs: {\n+ value: 'value',\n+ isRequired: true,\n+ description: 'pass down custom xcodebuild arguments'\n+ },\nxcodebuildArchiveArgs: {\nvalue: 'value',\nisRequired: true,\n",
        "date": "03.08.2022 14:40:00",
        "repo": "pavjacko/renative",
        "type": "feat",
        "chatgpt_zeroshot": "Add xcodebuildArgs parameter to PARAM_KEYS in constants.ts"
    },
    {
        "msg": "feat(sdk-apple): don't provide default -destination argument is -arch is set in xcodebuildArgs, as they are not compatible",
        "diff": "diff --git a/packages/sdk-apple/src/index.js b/packages/sdk-apple/src/index.js @@ -653,7 +653,8 @@ export const buildXcodeProject = async (c) => {\np.push('-derivedDataPath');\np.push(buildPath);\n}\n- if (!ps.includes('-destination')) {\n+ // -arch / -sdk params are not compatible with -destination\n+ if (!ps.includes('-destination') && !ps.includes('-arch')) {\np.push('-destination');\nif (platform === MACOS) {\np.push(`platform=${destinationPlatform}`);\n",
        "date": "03.08.2022 14:41:30",
        "repo": "pavjacko/renative",
        "type": "feat",
        "chatgpt_zeroshot": "Fix issue with incompatible parameters in buildXcodeProject function"
    },
    {
        "msg": "feat(Info.plist): Allow integer values to be inserted into Info.plist file",
        "diff": "diff --git a/packages/sdk-apple/src/plistParser.js b/packages/sdk-apple/src/plistParser.js @@ -6,7 +6,8 @@ const {\nisObject,\nisArray,\nisBool,\n- isString\n+ isString,\n+ isNumber\n} = ObjectUtils;\nconst {\ngetAppFolder,\n@@ -207,8 +208,11 @@ const _parseObject = (obj, level) => {\noutput += `${space}</dict>\\n`;\n} else if (isString(obj)) {\noutput += `${space}<string>${obj}</string>\\n`;\n+ } else if(isNumber(obj) && Number.isInteger(obj)){\n+ output += `${space}<integer>${obj}</integer>\\n`;\n}\n+\nreturn output;\n};\n",
        "date": "08.09.2022 11:22:01",
        "repo": "pavjacko/renative",
        "type": "feat",
        "chatgpt_zeroshot": "Add support for parsing integers in plistParser"
    },
    {
        "msg": "feat(Glo): add Glo component",
        "diff": "diff --git a/components/Glo/index.js b/components/Glo/index.js -import 'glo/js/namespace';\n-import 'glo/js/coordinates.js';\n-import 'glo/js/node_group.js';\n-import 'glo/js/canvas.js';\n-import 'glo/js/node_generation.js';\n-import 'glo/js/edge_generation.js';\n-import 'glo/js/helpers.js';\n-import 'glo/js/glo.js';\n-import 'glo/js/api.js';\n-import 'glo/js/techniques.js';\n-import 'glo/js/figures.js';\n-\n-import * as d3 from 'd3';\n+import d3 from 'glo/node_modules/d3';\n+import GLO from 'glo';\nimport VisComponent from '../../VisComponent';\n+const colorNodes = (glo, field, type) => {\n+ glo.glo.node_attr({\n+ [field]: type\n+ });\n+\n+ glo.glo.color_nodes_by(field);\n+};\n+\nexport default class Glo extends VisComponent {\n- constructor (el, {nodes, edges, width = 960, height = 540}) {\n+ constructor (el, {nodes, edges, nodeAttr, edgeAttr, width = 960, height = 540}) {\nsuper(el);\n// Empty the top-level div.\n@@ -32,15 +29,85 @@ export default class Glo extends VisComponent {\n// Construct a GLO object.\nthis.glo = new GLO.GLO(d3.select(this.svg))\n.nodes(nodes)\n- .edges(edges)\n- .draw();\n-\n- console.log('Glo.constructor()');\n- console.log('this.glo', this.glo);\n+ .edges(edges);\n}\nrender () {\n- console.log('Glo.render()');\n- console.log('GLO object', GLO);\n+ this.glo.draw();\n+ }\n+\n+ colorNodesDiscrete (field) {\n+ colorNodes(this, field, 'discrete');\n+ }\n+\n+ colorNodesContinuous(field) {\n+ colorNodes(this, field, 'continuous');\n+ }\n+\n+ colorNodesDefault () {\n+ this.glo.color_nodes_by_constant();\n+ }\n+\n+ sizeNodes (field) {\n+ this.glo.node_attr({\n+ [field]: 'continuous'\n+ });\n+\n+ this.glo.size_nodes_by(field);\n+ }\n+\n+ sizeNodesDefault () {\n+ this.glo.size_nodes_by_constant();\n+ }\n+\n+ distributeNodes(axis, attr = null) {\n+ if (attr === null) {\n+ this.glo.evenly_distribute_nodes_on(axis);\n+ } else {\n+ this.glo.evenly_distribute_nodes_on(axis, {\n+ by: attr\n+ });\n+ }\n+ }\n+\n+ positionNodes(axis, value) {\n+ this.glo.node_attr({\n+ [value]: 'continuous'\n+ });\n+\n+ this.glo.position_nodes_on(axis, value);\n+ }\n+\n+ forceDirected () {\n+ this.glo.apply_force_directed_algorithm_to_nodes();\n+ }\n+\n+ showEdges () {\n+ this.glo.show_all_edges();\n+ }\n+\n+ hideEdges () {\n+ this.glo.hide_edges();\n+ }\n+\n+ fadeEdges () {\n+ this.glo.show_edges_as_faded();\n+ }\n+\n+ solidEdges () {\n+ this.hideEdges();\n+ this.showEdges();\n+ }\n+\n+ incidentEdges () {\n+ this.glo.show_incident_edges();\n+ }\n+\n+ curvedEdges () {\n+ this.glo.display_edges_as_curved_lines();\n+ }\n+\n+ straightEdges () {\n+ this.glo.display_edges_as_straight_lines();\n}\n}\n",
        "date": "04.05.2017 16:30:57",
        "repo": "kitware/candela",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor Glo component and add new methods for node and edge manipulation"
    },
    {
        "msg": "feat(VisComponent): add update() and destroy() methods to VisComponent API",
        "diff": "diff --git a/VisComponent/index.js b/VisComponent/index.js @@ -9,16 +9,24 @@ export default class VisComponent {\nthis.el = el;\n}\n+ render () {\n+ throw new Error('\"render() is pure abstract\"');\n+ }\n+\n+ update () {\n+ throw new Error('\"update() is pure abstract\"');\n+ }\n+\n+ destroy () {\n+ throw new Error('\"destroy()\" is pure abstract\"');\n+ }\n+\nempty () {\nselect(this.el)\n.selectAll('*')\n.remove();\n}\n- render () {\n- throw new Error('\"render() is pure abstract\"');\n- }\n-\nget serializationFormats () {\nreturn [];\n}\n",
        "date": "18.05.2017 15:42:44",
        "repo": "kitware/candela",
        "type": "feat",
        "chatgpt_zeroshot": "Add abstract methods for render, update, and destroy in VisComponent class"
    },
    {
        "msg": "feat(VegaChart): implement update() and destroy() API",
        "diff": "diff --git a/VisComponent/mixin/VegaChart.js b/VisComponent/mixin/VegaChart.js @@ -21,6 +21,35 @@ let VegaChart = (Base, spec) => class extends Base {\n});\n}\n+ update (options) {\n+ let promise = this.chart;\n+\n+ Object.assign(this.options, options);\n+\n+ if (this.options.data) {\n+ promise = promise.then(chart => {\n+ chart.data('data')\n+ .remove(() => true)\n+ .insert(this.options.data);\n+ });\n+ }\n+\n+ if (this.options.width) {\n+ this.width = this.options.width;\n+ }\n+\n+ if (this.options.height) {\n+ this.height = this.options.height;\n+ }\n+\n+ return promise;\n+ }\n+\n+ destroy () {\n+ this.empty();\n+ delete this.chart;\n+ }\n+\nget serializationFormats () {\nreturn ['png', 'svg'];\n}\n",
        "date": "18.05.2017 15:54:01",
        "repo": "kitware/candela",
        "type": "feat",
        "chatgpt_zeroshot": "Add update and destroy methods to VegaChart mixin"
    },
    {
        "msg": "feat(ScatterPlot): allow \"nice\" and \"zero\" options to be set on x and y scales",
        "diff": "diff --git a/plugins/vega/ScatterPlot/index.js b/plugins/vega/ScatterPlot/index.js @@ -146,6 +146,14 @@ export default class ScatterPlot extends VegaView(VisComponent) {\n}\n}\n+ if (this.options.xScale) {\n+ spec.encoding.x.scale = this.options.xScale;\n+ }\n+\n+ if (this.options.yScale) {\n+ spec.encoding.y.scale = this.options.yScale;\n+ }\n+\nreturn spec;\n}\n}\n",
        "date": "21.08.2017 10:40:20",
        "repo": "kitware/candela",
        "type": "feat",
        "chatgpt_zeroshot": "Add support for custom x and y scales in ScatterPlot."
    },
    {
        "msg": "feat(ScatterPlot): accept `xAxis` and `yAxis` options (matching axis options in VegaLite)",
        "diff": "diff --git a/plugins/vega/ScatterPlot/index.js b/plugins/vega/ScatterPlot/index.js @@ -154,6 +154,14 @@ export default class ScatterPlot extends VegaView(VisComponent) {\nspec.encoding.y.scale = this.options.yScale;\n}\n+ if (this.options.xAxis) {\n+ spec.encoding.x.axis = this.options.xAxis;\n+ }\n+\n+ if (this.options.yAxis) {\n+ spec.encoding.y.axis = this.options.yAxis;\n+ }\n+\nreturn spec;\n}\n}\n",
        "date": "18.10.2017 17:02:38",
        "repo": "kitware/candela",
        "type": "feat",
        "chatgpt_zeroshot": "Add support for custom x and y axis configurations in ScatterPlot"
    },
    {
        "msg": "feat: full support for npm token use in semantic-release",
        "diff": "diff --git a/circle.yml b/circle.yml @@ -11,6 +11,9 @@ dependencies:\n# Install flake8 for Python linting.\n- sudo pip install flake8\n+ # Inject npm token into environment.\n+ - echo \"//registry.npmjs.org/:_authToken=$NPM_TOKEN\" >>~/.npmrc\n+\ncache_directories:\n- node_modules\n",
        "date": "30.01.2018 13:14:25",
        "repo": "kitware/candela",
        "type": "feat",
        "chatgpt_zeroshot": "Add npm token injection to circle.yml for authentication."
    },
    {
        "msg": "feat(WebpackSSR): Single webpack compiler pass",
        "diff": "diff --git a/src/lib/run-webpack.js b/src/lib/run-webpack.js @@ -36,11 +36,13 @@ const devBuild = (config, onprogress) => {\nconst prodBuild = (env, config) => {\nlet ssrOutputPath = path.resolve(__dirname, 'ssr-build/');\n+ let pluginNameFilter = (plugin, name) => plugin.constructor && plugin.constructor.name === name;\nlet ssrConfig = (config) => {\nlet newConfig = Object.assign({}, config, {\ntarget: 'node',\nentry: path.resolve(env.cwd, env.src || 'src', 'index.js'),\n- plugins: config.plugins.filter(c => !(c.constructor && c.constructor.name === 'HtmlWebpackPlugin')),\n+ plugins: config.plugins.filter(p => !pluginNameFilter(p, 'HtmlWebpackPlugin'))\n+ .filter(p => !pluginNameFilter(p, 'SWPrecacheWebpackPlugin')),\n});\nnewConfig.output.path = ssrOutputPath;\n@@ -56,9 +58,10 @@ const prodBuild = (env, config) => {\nreturn newConfig;\n};\n- let compiler = webpack(config);\n- let runCompiler = () => new Promise((resolve, reject) => {\n- console.log('Running production build...');\n+\n+ let compiler = env.prerender ? webpack([config, ssrConfig(config)]) : webpack(config);\n+\n+ return new Promise((resolve, reject) => {\ncompiler.run((err, stats) => {\nif (err) reject(err);\nelse {\n@@ -67,19 +70,6 @@ const prodBuild = (env, config) => {\n}\n});\n});\n-\n- let ssrCompiler = webpack(ssrConfig(config));\n- let runSsrCompiler = () => new Promise((resolve, reject) => {\n- console.log('Running SSR build...');\n- rimraf.sync(ssrOutputPath);\n- ssrCompiler.run((err) => {\n- if (err) return reject(err);\n- // Timeout for plugins that work on `after-emit` event of webpack\n- setTimeout(()=> resolve(), 20);\n- });\n- });\n-\n- return env.prerender ? runSsrCompiler().then(runCompiler) : runCompiler();\n};\nexport function showStats(stats) {\n",
        "date": "30.05.2017 18:22:47",
        "repo": "preactjs/preact-cli",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor production build to filter out specific plugins and add prerender option."
    },
    {
        "msg": "feat(build, watch): Less verbose error output",
        "diff": "diff --git a/src/lib/webpack/run-webpack.js b/src/lib/webpack/run-webpack.js @@ -38,7 +38,12 @@ const devBuild = async (env, onprogress) => {\nlet serverAddr = `${protocol}://${host}:${chalk.bold(port)}`;\nlet localIpAddr = `${protocol}://${ip.address()}:${chalk.bold(port)}`;\n- process.stdout.write(chalk.green('\\nCompiled successfully!!\\n\\n'));\n+ if (stats.hasErrors()) {\n+ process.stdout.write(chalk.red('\\Build failed!\\n\\n'));\n+ } else {\n+ process.stdout.write(chalk.green('\\nCompiled successfully!\\n\\n'));\n+ }\n+\nif (userPort !== port) {\nprocess.stdout.write(`Port ${chalk.bold(userPort)} is in use, using ${chalk.bold(port)} instead\\n\\n`);\n}\n@@ -71,7 +76,8 @@ const prodBuild = async (env) => {\nreturn await new Promise((resolve, reject) => {\ncompiler.run((err, stats) => {\nif (err || stats.hasErrors()) {\n- reject(err || stats.toJson().errors.join('\\n'));\n+ showStats(stats);\n+ reject(chalk.red('Build failed!'));\n}\nelse {\n// Timeout for plugins that work on `after-emit` event of webpack\n@@ -82,16 +88,16 @@ const prodBuild = async (env) => {\n};\nexport function showStats(stats) {\n- let info = stats.toJson();\n+ let info = stats.toJson(\"errors-only\");\nif (stats.hasErrors()) {\n- info.errors.forEach( message => {\n- process.stderr.write(message+'\\n');\n+ info.errors.map(stripBabelLoaderPrefix).forEach( message => {\n+ process.stderr.write(chalk.red(message)+'\\n');\n});\n}\nif (stats.hasWarnings()) {\n- info.warnings.forEach( message => {\n+ info.warnings.map(stripBabelLoaderPrefix).forEach( message => {\nprocess.stderr.write(chalk.yellow(message)+'\\n');\n});\n}\n@@ -109,8 +115,8 @@ export function writeJsonStats(stats) {\njsonStats = (jsonStats.children && jsonStats.children[0]) || jsonStats;\n- jsonStats.modules.forEach(normalizeModule);\n- jsonStats.chunks.forEach(c => c.modules.forEach(normalizeModule));\n+ jsonStats.modules.forEach(stripBabelLoaderFromModuleNames);\n+ jsonStats.chunks.forEach(c => c.modules.forEach(stripBabelLoaderFromModuleNames));\nreturn fs.writeFile(outputPath, JSON.stringify(jsonStats))\n.then(() => {\n@@ -121,20 +127,20 @@ export function writeJsonStats(stats) {\n});\n}\n-const normalizeModule = m => {\n+const stripBabelLoaderFromModuleNames = m => {\nconst keysToNormalize = ['identifier', 'name', 'module', 'moduleName', 'moduleIdentifier'];\nkeysToNormalize.forEach(key => {\nif (key in m) {\n- m[key] = normalizeName(m[key]);\n+ m[key] = stripBabelLoaderPrefix(m[key]);\n}\n});\nif (m.reasons) {\n- m.reasons.forEach(normalizeModule);\n+ m.reasons.forEach(stripBabelLoaderFromModuleNames);\n}\nreturn m;\n};\n-const normalizeName = p => p.substr(p.lastIndexOf('!') + 1);\n+const stripBabelLoaderPrefix = log => log.replace(/@?\\s*(\\.\\/~\\/babel-loader\\/lib\\?{[\\s\\S]*?}!)/g, '');\n",
        "date": "08.07.2017 11:27:49",
        "repo": "preactjs/preact-cli",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor build process to display error messages in red and improve module name normalization."
    },
    {
        "msg": "feat: alias compat for preact X",
        "diff": "diff --git a/packages/cli/lib/lib/webpack/webpack-base-config.js b/packages/cli/lib/lib/webpack/webpack-base-config.js @@ -122,7 +122,8 @@ module.exports = function(env) {\n'.css',\n'.wasm',\n],\n- alias: {\n+ alias: Object.assign(\n+ {\nstyle: source('style'),\n'preact-cli-entrypoint': source('index'),\n// preact-compat aliases for supporting React dependencies:\n@@ -133,6 +134,8 @@ module.exports = function(env) {\n'@preact/async-loader/async'\n),\n},\n+ compat !== 'preact-compat' ? { 'preact-compat': compat } : {}\n+ ),\n},\nresolveLoader: {\n",
        "date": "29.09.2019 15:06:27",
        "repo": "preactjs/preact-cli",
        "type": "feat",
        "chatgpt_zeroshot": "Add alias for 'preact-compat' based on compatibility setting"
    },
    {
        "msg": "feat(localization): add vr.pug",
        "diff": "diff --git a/html/src/localization/strings/en.json b/html/src/localization/strings/en.json \"count\": \"Count\",\n\"action\": \"Action\"\n}\n+ },\n+ \"vr\": {\n+ \"status\": {\n+ \"timer\": \"Timer:\",\n+ \"players\": \"Players:\",\n+ \"cpu\": \"CPU:\",\n+ \"online\": \"Online:\",\n+ \"devices\": {\n+ \"left\": \"L:\",\n+ \"right\": \"R:\"\n+ }\n+ }\n}\n}\n",
        "date": "31.12.2022 19:10:52",
        "repo": "pypy-vrc/vrcx",
        "type": "feat",
        "chatgpt_zeroshot": "Add VR status localization strings in en.json"
    },
    {
        "msg": "feat(isJWT): signature is not required",
        "diff": "diff --git a/src/lib/isJWT.js b/src/lib/isJWT.js import assertString from './util/assertString';\n-const jwt = /^[a-zA-Z0-9\\-_]+\\.[a-zA-Z0-9\\-_]+\\.[a-zA-Z0-9\\-_]+$/;\n+const jwt = /^([A-Za-z0-9\\-_~+\\/]+[=]{0,2})\\.([A-Za-z0-9\\-_~+\\/]+[=]{0,2})(?:\\.([A-Za-z0-9\\-_~+\\/]+[=]{0,2}))?$/;\nexport default function isJWT(str) {\nassertString(str);\n",
        "date": "10.10.2018 22:04:39",
        "repo": "validatorjs/validator.js",
        "type": "feat",
        "chatgpt_zeroshot": "Improve regex pattern for JWT validation in isJWT.js"
    },
    {
        "msg": "feat(isEmail): validate display name according to RFC2822",
        "diff": "diff --git a/src/lib/isEmail.js b/src/lib/isEmail.js @@ -14,7 +14,7 @@ const default_email_options = {\n/* eslint-disable max-len */\n/* eslint-disable no-control-regex */\n-const displayName = /^[a-z\\d!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~\\.\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+[a-z\\d!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~\\,\\.\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF\\s]*<(.+)>$/i;\n+const splitNameAddress = /^([^\\x00-\\x1F\\x7F-\\x9F\\cX]+)<(.+)>$/i;\nconst emailUserPart = /^[a-z\\d!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]+$/i;\nconst gmailUserPart = /^[a-z\\d]+$/;\nconst quotedEmailUser = /^([\\s\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f\\x21\\x23-\\x5b\\x5d-\\x7e]|(\\\\[\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]))*$/i;\n@@ -23,14 +23,60 @@ const quotedEmailUserUtf8 = /^([\\s\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f\\x21\\x23-\\x5b\\x5\n/* eslint-enable max-len */\n/* eslint-enable no-control-regex */\n+/**\n+ * Validate display name according to the RFC2822: https://tools.ietf.org/html/rfc2822#appendix-A.1.2\n+ * @param {String} display_name\n+ */\n+function validateDisplayName(display_name) {\n+ const trim_quotes = display_name.match(/^\"(.+)\"$/i);\n+ const display_name_without_quotes = trim_quotes ? trim_quotes[1] : display_name;\n+\n+ // display name with only spaces is not valid\n+ if (!display_name_without_quotes.trim()) {\n+ return false;\n+ }\n+\n+ // check whether display name contains illegal character\n+ const contains_illegal = /[\\.\";<>]/.test(display_name_without_quotes);\n+ if (contains_illegal) {\n+ // if contains illegal characters,\n+ // must to be enclosed in double-quotes, otherwise it's not a valid display name\n+ if (!trim_quotes) {\n+ return false;\n+ }\n+\n+ // the quotes in display name must start with character symbol \\\n+ const all_start_with_back_slash =\n+ display_name_without_quotes.split('\"').length === display_name_without_quotes.split('\\\\\"').length;\n+ if (!all_start_with_back_slash) {\n+ return false;\n+ }\n+ }\n+\n+ return true;\n+}\n+\n+\nexport default function isEmail(str, options) {\nassertString(str);\noptions = merge(options, default_email_options);\nif (options.require_display_name || options.allow_display_name) {\n- const display_email = str.match(displayName);\n+ const display_email = str.match(splitNameAddress);\nif (display_email) {\n- str = display_email[1];\n+ let display_name;\n+ [, display_name, str] = display_email;\n+ // sometimes need to trim the last space to get the display name\n+ // because there may be a space between display name and email address\n+ // eg. myname <address@gmail.com>\n+ // the display name is `myname` instead of `myname `, so need to trim the last space\n+ if (display_name.endsWith(' ')) {\n+ display_name = display_name.substr(0, display_name.length - 1);\n+ }\n+\n+ if (!validateDisplayName(display_name)) {\n+ return false;\n+ }\n} else if (options.require_display_name) {\nreturn false;\n}\n",
        "date": "23.05.2019 17:43:32",
        "repo": "validatorjs/validator.js",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor display name validation in isEmail function"
    },
    {
        "msg": "feat: add hebrew support to isAlpha and isAlphanumeric",
        "diff": "diff --git a/README.md b/README.md @@ -77,8 +77,8 @@ Validator | Description\n***contains(str, seed)*** | check if the string contains the seed.\n**equals(str, comparison)** | check if the string matches the comparison.\n**isAfter(str [, date])** | check if the string is a date that's after the specified date (defaults to now).\n-**isAlpha(str [, locale])** | check if the string contains only letters (a-zA-Z).<br/><br/>Locale is one of `['ar', 'ar-AE', 'ar-BH', 'ar-DZ', 'ar-EG', 'ar-IQ', 'ar-JO', 'ar-KW', 'ar-LB', 'ar-LY', 'ar-MA', 'ar-QA', 'ar-QM', 'ar-SA', 'ar-SD', 'ar-SY', 'ar-TN', 'ar-YE', 'bg-BG', 'cs-CZ', 'da-DK', 'de-DE', 'el-GR', 'en-AU', 'en-GB', 'en-HK', 'en-IN', 'en-NZ', 'en-US', 'en-ZA', 'en-ZM', 'es-ES', 'fr-FR', 'hu-HU', 'it-IT', 'ku-IQ', 'nb-NO', 'nl-NL', 'nn-NO', 'pl-PL', 'pt-BR', 'pt-PT', 'ru-RU', 'sl-SI', 'sk-SK', 'sr-RS', 'sr-RS@latin', 'sv-SE', 'tr-TR', 'uk-UA']`) and defaults to `en-US`. Locale list is `validator.isAlphaLocales`.\n-**isAlphanumeric(str [, locale])** | check if the string contains only letters and numbers.<br/><br/>Locale is one of `['ar', 'ar-AE', 'ar-BH', 'ar-DZ', 'ar-EG', 'ar-IQ', 'ar-JO', 'ar-KW', 'ar-LB', 'ar-LY', 'ar-MA', 'ar-QA', 'ar-QM', 'ar-SA', 'ar-SD', 'ar-SY', 'ar-TN', 'ar-YE', 'bg-BG', 'cs-CZ', 'da-DK', 'de-DE', 'el-GR', 'en-AU', 'en-GB', 'en-HK', 'en-IN', 'en-NZ', 'en-US', 'en-ZA', 'en-ZM', 'es-ES', 'fr-FR', 'hu-HU', 'it-IT', 'ku-IQ', 'nb-NO', 'nl-NL', 'nn-NO', 'pl-PL', 'pt-BR', 'pt-PT', 'ru-RU', 'sl-SI', 'sk-SK', 'sr-RS', 'sr-RS@latin', 'sv-SE', 'tr-TR', 'uk-UA']`) and defaults to `en-US`. Locale list is `validator.isAlphanumericLocales`.\n+**isAlpha(str [, locale])** | check if the string contains only letters (a-zA-Z).<br/><br/>Locale is one of `['ar', 'ar-AE', 'ar-BH', 'ar-DZ', 'ar-EG', 'ar-IQ', 'ar-JO', 'ar-KW', 'ar-LB', 'ar-LY', 'ar-MA', 'ar-QA', 'ar-QM', 'ar-SA', 'ar-SD', 'ar-SY', 'ar-TN', 'ar-YE', 'bg-BG', 'cs-CZ', 'da-DK', 'de-DE', 'el-GR', 'en-AU', 'en-GB', 'en-HK', 'en-IN', 'en-NZ', 'en-US', 'en-ZA', 'en-ZM', 'es-ES', 'fr-FR', 'he', 'hu-HU', 'it-IT', 'ku-IQ', 'nb-NO', 'nl-NL', 'nn-NO', 'pl-PL', 'pt-BR', 'pt-PT', 'ru-RU', 'sl-SI', 'sk-SK', 'sr-RS', 'sr-RS@latin', 'sv-SE', 'tr-TR', 'uk-UA']`) and defaults to `en-US`. Locale list is `validator.isAlphaLocales`.\n+**isAlphanumeric(str [, locale])** | check if the string contains only letters and numbers.<br/><br/>Locale is one of `['ar', 'ar-AE', 'ar-BH', 'ar-DZ', 'ar-EG', 'ar-IQ', 'ar-JO', 'ar-KW', 'ar-LB', 'ar-LY', 'ar-MA', 'ar-QA', 'ar-QM', 'ar-SA', 'ar-SD', 'ar-SY', 'ar-TN', 'ar-YE', 'bg-BG', 'cs-CZ', 'da-DK', 'de-DE', 'el-GR', 'en-AU', 'en-GB', 'en-HK', 'en-IN', 'en-NZ', 'en-US', 'en-ZA', 'en-ZM', 'es-ES', 'fr-FR', 'he', 'hu-HU', 'it-IT', 'ku-IQ', 'nb-NO', 'nl-NL', 'nn-NO', 'pl-PL', 'pt-BR', 'pt-PT', 'ru-RU', 'sl-SI', 'sk-SK', 'sr-RS', 'sr-RS@latin', 'sv-SE', 'tr-TR', 'uk-UA']`) and defaults to `en-US`. Locale list is `validator.isAlphanumericLocales`.\n**isAscii(str)** | check if the string contains ASCII chars only.\n**isBase32(str)** | check if a string is base32 encoded.\n**isBase64(str)** | check if a string is base64 encoded.\n",
        "date": "05.10.2019 16:18:57",
        "repo": "validatorjs/validator.js",
        "type": "feat",
        "chatgpt_zeroshot": "Update isAlpha and isAlphanumeric functions with additional locale options."
    },
    {
        "msg": "feat: add isalpha and isalphanumeic for vietnam",
        "diff": "diff --git a/README.md b/README.md @@ -84,8 +84,8 @@ Validator | Description\n**contains(str, seed [, options ])** | check if the string contains the seed.<br/><br/>`options` is an object that defaults to `{ ignoreCase: false}`.<br/>`ignoreCase` specified whether the case of the substring be same or not.\n**equals(str, comparison)** | check if the string matches the comparison.\n**isAfter(str [, date])** | check if the string is a date that's after the specified date (defaults to now).\n-**isAlpha(str [, locale])** | check if the string contains only letters (a-zA-Z).<br/><br/>Locale is one of `['ar', 'ar-AE', 'ar-BH', 'ar-DZ', 'ar-EG', 'ar-IQ', 'ar-JO', 'ar-KW', 'ar-LB', 'ar-LY', 'ar-MA', 'ar-QA', 'ar-QM', 'ar-SA', 'ar-SD', 'ar-SY', 'ar-TN', 'ar-YE', 'bg-BG', 'cs-CZ', 'da-DK', 'de-DE', 'el-GR', 'en-AU', 'en-GB', 'en-HK', 'en-IN', 'en-NZ', 'en-US', 'en-ZA', 'en-ZM', 'es-ES', 'fr-FR', 'fa-IR', 'he', 'hu-HU', 'it-IT', 'ku-IQ', 'nb-NO', 'nl-NL', 'nn-NO', 'pl-PL', 'pt-BR', 'pt-PT', 'ru-RU', 'sl-SI', 'sk-SK', 'sr-RS', 'sr-RS@latin', 'sv-SE', 'tr-TR', 'uk-UA']`) and defaults to `en-US`. Locale list is `validator.isAlphaLocales`.\n-**isAlphanumeric(str [, locale])** | check if the string contains only letters and numbers.<br/><br/>Locale is one of `['ar', 'ar-AE', 'ar-BH', 'ar-DZ', 'ar-EG', 'ar-IQ', 'ar-JO', 'ar-KW', 'ar-LB', 'ar-LY', 'ar-MA', 'ar-QA', 'ar-QM', 'ar-SA', 'ar-SD', 'ar-SY', 'ar-TN', 'ar-YE', 'bg-BG', 'cs-CZ', 'da-DK', 'de-DE', 'el-GR', 'en-AU', 'en-GB', 'en-HK', 'en-IN', 'en-NZ', 'en-US', 'en-ZA', 'en-ZM', 'es-ES', 'fr-FR', 'fa-IR', 'he', 'hu-HU', 'it-IT', 'ku-IQ', 'nb-NO', 'nl-NL', 'nn-NO', 'pl-PL', 'pt-BR', 'pt-PT', 'ru-RU', 'sl-SI', 'sk-SK', 'sr-RS', 'sr-RS@latin', 'sv-SE', 'tr-TR', 'uk-UA']`) and defaults to `en-US`. Locale list is `validator.isAlphanumericLocales`.\n+**isAlpha(str [, locale])** | check if the string contains only letters (a-zA-Z).<br/><br/>Locale is one of `['ar', 'ar-AE', 'ar-BH', 'ar-DZ', 'ar-EG', 'ar-IQ', 'ar-JO', 'ar-KW', 'ar-LB', 'ar-LY', 'ar-MA', 'ar-QA', 'ar-QM', 'ar-SA', 'ar-SD', 'ar-SY', 'ar-TN', 'ar-YE', 'bg-BG', 'cs-CZ', 'da-DK', 'de-DE', 'el-GR', 'en-AU', 'en-GB', 'en-HK', 'en-IN', 'en-NZ', 'en-US', 'en-ZA', 'en-ZM', 'es-ES', 'fr-FR', 'fa-IR', 'he', 'hu-HU', 'it-IT', 'ku-IQ', 'nb-NO', 'nl-NL', 'nn-NO', 'pl-PL', 'pt-BR', 'pt-PT', 'ru-RU', 'sl-SI', 'sk-SK', 'sr-RS', 'sr-RS@latin', 'sv-SE', 'tr-TR', 'uk-UA', 'vi-VN']`) and defaults to `en-US`. Locale list is `validator.isAlphaLocales`.\n+**isAlphanumeric(str [, locale])** | check if the string contains only letters and numbers.<br/><br/>Locale is one of `['ar', 'ar-AE', 'ar-BH', 'ar-DZ', 'ar-EG', 'ar-IQ', 'ar-JO', 'ar-KW', 'ar-LB', 'ar-LY', 'ar-MA', 'ar-QA', 'ar-QM', 'ar-SA', 'ar-SD', 'ar-SY', 'ar-TN', 'ar-YE', 'bg-BG', 'cs-CZ', 'da-DK', 'de-DE', 'el-GR', 'en-AU', 'en-GB', 'en-HK', 'en-IN', 'en-NZ', 'en-US', 'en-ZA', 'en-ZM', 'es-ES', 'fr-FR', 'fa-IR', 'he', 'hu-HU', 'it-IT', 'ku-IQ', 'nb-NO', 'nl-NL', 'nn-NO', 'pl-PL', 'pt-BR', 'pt-PT', 'ru-RU', 'sl-SI', 'sk-SK', 'sr-RS', 'sr-RS@latin', 'sv-SE', 'tr-TR', 'uk-UA', 'vi-VN']`) and defaults to `en-US`. Locale list is `validator.isAlphanumericLocales`.\n**isAscii(str)** | check if the string contains ASCII chars only.\n**isBase32(str)** | check if a string is base32 encoded.\n**isBase64(str [, options])** | check if a string is base64 encoded. options is optional and defaults to `{urlSafe: false}`<br/> when `urlSafe` is true it tests the given base64 encoded string is [url safe](https://base64.guru/standards/base64url)\n",
        "date": "02.07.2020 22:32:33",
        "repo": "validatorjs/validator.js",
        "type": "feat",
        "chatgpt_zeroshot": "Add 'vi-VN' locale to isAlpha and isAlphanumeric functions."
    },
    {
        "msg": "feat: added support for Azerbaijani (az-AZ) locale in isAlpha and isAlphaNumeric",
        "diff": "diff --git a/README.md b/README.md @@ -84,8 +84,8 @@ Validator | Description\n**contains(str, seed [, options ])** | check if the string contains the seed.<br/><br/>`options` is an object that defaults to `{ ignoreCase: false}`.<br/>`ignoreCase` specified whether the case of the substring be same or not.\n**equals(str, comparison)** | check if the string matches the comparison.\n**isAfter(str [, date])** | check if the string is a date that's after the specified date (defaults to now).\n-**isAlpha(str [, locale])** | check if the string contains only letters (a-zA-Z).<br/><br/>Locale is one of `['ar', 'ar-AE', 'ar-BH', 'ar-DZ', 'ar-EG', 'ar-IQ', 'ar-JO', 'ar-KW', 'ar-LB', 'ar-LY', 'ar-MA', 'ar-QA', 'ar-QM', 'ar-SA', 'ar-SD', 'ar-SY', 'ar-TN', 'ar-YE', 'bg-BG', 'cs-CZ', 'da-DK', 'de-DE', 'el-GR', 'en-AU', 'en-GB', 'en-HK', 'en-IN', 'en-NZ', 'en-US', 'en-ZA', 'en-ZM', 'es-ES', 'fr-FR', 'fa', 'fa-AF', 'fa-IR', 'he', 'hu-HU', 'it-IT', 'ku-IQ', 'nb-NO', 'nl-NL', 'nn-NO', 'pl-PL', 'pt-BR', 'pt-PT', 'ru-RU', 'sl-SI', 'sk-SK', 'sr-RS', 'sr-RS@latin', 'sv-SE', 'tr-TR', 'uk-UA', 'vi-VN']`) and defaults to `en-US`. Locale list is `validator.isAlphaLocales`.\n-**isAlphanumeric(str [, locale])** | check if the string contains only letters and numbers.<br/><br/>Locale is one of `['ar', 'ar-AE', 'ar-BH', 'ar-DZ', 'ar-EG', 'ar-IQ', 'ar-JO', 'ar-KW', 'ar-LB', 'ar-LY', 'ar-MA', 'ar-QA', 'ar-QM', 'ar-SA', 'ar-SD', 'ar-SY', 'ar-TN', 'ar-YE', 'bg-BG', 'cs-CZ', 'da-DK', 'de-DE', 'el-GR', 'en-AU', 'en-GB', 'en-HK', 'en-IN', 'en-NZ', 'en-US', 'en-ZA', 'en-ZM', 'es-ES', 'fr-FR', 'fa', 'fa-AF', 'fa-IR', 'he', 'hu-HU', 'it-IT', 'ku-IQ', 'nb-NO', 'nl-NL', 'nn-NO', 'pl-PL', 'pt-BR', 'pt-PT', 'ru-RU', 'sl-SI', 'sk-SK', 'sr-RS', 'sr-RS@latin', 'sv-SE', 'tr-TR', 'uk-UA', 'vi-VN']`) and defaults to `en-US`. Locale list is `validator.isAlphanumericLocales`.\n+**isAlpha(str [, locale])** | check if the string contains only letters (a-zA-Z).<br/><br/>Locale is one of `['ar', 'ar-AE', 'ar-BH', 'ar-DZ', 'ar-EG', 'ar-IQ', 'ar-JO', 'ar-KW', 'ar-LB', 'ar-LY', 'ar-MA', 'ar-QA', 'ar-QM', 'ar-SA', 'ar-SD', 'ar-SY', 'ar-TN', 'ar-YE', 'az-AZ', 'bg-BG', 'cs-CZ', 'da-DK', 'de-DE', 'el-GR', 'en-AU', 'en-GB', 'en-HK', 'en-IN', 'en-NZ', 'en-US', 'en-ZA', 'en-ZM', 'es-ES', 'fr-FR', 'fa', 'fa-AF', 'fa-IR', 'he', 'hu-HU', 'it-IT', 'ku-IQ', 'nb-NO', 'nl-NL', 'nn-NO', 'pl-PL', 'pt-BR', 'pt-PT', 'ru-RU', 'sl-SI', 'sk-SK', 'sr-RS', 'sr-RS@latin', 'sv-SE', 'tr-TR', 'uk-UA', 'vi-VN']`) and defaults to `en-US`. Locale list is `validator.isAlphaLocales`.\n+**isAlphanumeric(str [, locale])** | check if the string contains only letters and numbers.<br/><br/>Locale is one of `['ar', 'ar-AE', 'ar-BH', 'ar-DZ', 'ar-EG', 'ar-IQ', 'ar-JO', 'ar-KW', 'ar-LB', 'ar-LY', 'ar-MA', 'ar-QA', 'ar-QM', 'ar-SA', 'ar-SD', 'ar-SY', 'ar-TN', 'ar-YE', 'az-AZ', 'bg-BG', 'cs-CZ', 'da-DK', 'de-DE', 'el-GR', 'en-AU', 'en-GB', 'en-HK', 'en-IN', 'en-NZ', 'en-US', 'en-ZA', 'en-ZM', 'es-ES', 'fr-FR', 'fa', 'fa-AF', 'fa-IR', 'he', 'hu-HU', 'it-IT', 'ku-IQ', 'nb-NO', 'nl-NL', 'nn-NO', 'pl-PL', 'pt-BR', 'pt-PT', 'ru-RU', 'sl-SI', 'sk-SK', 'sr-RS', 'sr-RS@latin', 'sv-SE', 'tr-TR', 'uk-UA', 'vi-VN']`) and defaults to `en-US`. Locale list is `validator.isAlphanumericLocales`.\n**isAscii(str)** | check if the string contains ASCII chars only.\n**isBase32(str)** | check if a string is base32 encoded.\n**isBase64(str [, options])** | check if a string is base64 encoded. options is optional and defaults to `{urlSafe: false}`<br/> when `urlSafe` is true it tests the given base64 encoded string is [url safe](https://base64.guru/standards/base64url)\n",
        "date": "25.09.2020 23:22:58",
        "repo": "validatorjs/validator.js",
        "type": "feat",
        "chatgpt_zeroshot": "Update isAlpha and isAlphanumeric methods to include additional locales."
    },
    {
        "msg": "feat(isStrongPassword): add `@` as valid symbol",
        "diff": "diff --git a/src/lib/isStrongPassword.js b/src/lib/isStrongPassword.js @@ -4,7 +4,7 @@ import assertString from './util/assertString';\nconst upperCaseRegex = /^[A-Z]$/;\nconst lowerCaseRegex = /^[a-z]$/;\nconst numberRegex = /^[0-9]$/;\n-const symbolRegex = /^[-#!$%^&*()_+|~=`{}\\[\\]:\";'<>?,.\\/ ]$/;\n+const symbolRegex = /^[-#!$@%^&*()_+|~=`{}\\[\\]:\";'<>?,.\\/ ]$/;\nconst defaultOptions = {\nminLength: 8,\n",
        "date": "15.02.2021 05:20:42",
        "repo": "validatorjs/validator.js",
        "type": "feat",
        "chatgpt_zeroshot": "Update symbolRegex in isStrongPassword.js"
    },
    {
        "msg": "feat(isAlpha, isAlphanumeric): add japanese locale, ja-JP",
        "diff": "diff --git a/README.md b/README.md @@ -92,8 +92,8 @@ Validator | Description\n**contains(str, seed [, options ])** | check if the string contains the seed.<br/><br/>`options` is an object that defaults to `{ ignoreCase: false, minOccurrences: 1 }`.<br />Options: <br/> `ignoreCase`: Ignore case when doing comparison, default false<br/>`minOccurences`: Minimum number of occurrences for the seed in the string. Defaults to 1.\n**equals(str, comparison)** | check if the string matches the comparison.\n**isAfter(str [, date])** | check if the string is a date that's after the specified date (defaults to now).\n-**isAlpha(str [, locale, options])** | check if the string contains only letters (a-zA-Z).<br/><br/>Locale is one of `['ar', 'ar-AE', 'ar-BH', 'ar-DZ', 'ar-EG', 'ar-IQ', 'ar-JO', 'ar-KW', 'ar-LB', 'ar-LY', 'ar-MA', 'ar-QA', 'ar-QM', 'ar-SA', 'ar-SD', 'ar-SY', 'ar-TN', 'ar-YE', 'bg-BG', 'bn', 'cs-CZ', 'da-DK', 'de-DE', 'el-GR', 'en-AU', 'en-GB', 'en-HK', 'en-IN', 'en-NZ', 'en-US', 'en-ZA', 'en-ZM', 'es-ES', 'fa-IR', 'fi-FI', 'fr-CA', 'fr-FR', 'he', 'hi-IN', 'hu-HU', 'it-IT', 'ku-IQ', 'nb-NO', 'nl-NL', 'nn-NO', 'pl-PL', 'pt-BR', 'pt-PT', 'ru-RU', 'si-LK', 'sl-SI', 'sk-SK', 'sr-RS', 'sr-RS@latin', 'sv-SE', 'tr-TR', 'uk-UA']`) and defaults to `en-US`. Locale list is `validator.isAlphaLocales`. options is an optional object that can be supplied with the following key(s): ignore which can either be a String or RegExp of characters to be ignored e.g. \" -\" will ignore spaces and -'s.\n-**isAlphanumeric(str [, locale, options])** | check if the string contains only letters and numbers (a-zA-Z0-9).<br/><br/>Locale is one of `['ar', 'ar-AE', 'ar-BH', 'ar-DZ', 'ar-EG', 'ar-IQ', 'ar-JO', 'ar-KW', 'ar-LB', 'ar-LY', 'ar-MA', 'ar-QA', 'ar-QM', 'ar-SA', 'ar-SD', 'ar-SY', 'ar-TN', 'ar-YE', 'bn', 'bg-BG', 'cs-CZ', 'da-DK', 'de-DE', 'el-GR', 'en-AU', 'en-GB', 'en-HK', 'en-IN', 'en-NZ', 'en-US', 'en-ZA', 'en-ZM', 'es-ES', 'fa-IR', 'fi-FI', 'fr-CA', 'fr-FR', 'he', 'hi-IN', 'hu-HU', 'it-IT', 'ku-IQ', 'nb-NO', 'nl-NL', 'nn-NO', 'pl-PL', 'pt-BR', 'pt-PT', 'ru-RU', 'si-LK', 'sl-SI', 'sk-SK', 'sr-RS', 'sr-RS@latin', 'sv-SE', 'tr-TR', 'uk-UA']`) and defaults to `en-US`. Locale list is `validator.isAlphanumericLocales`. options is an optional object that can be supplied with the following key(s): ignore which can either be a String or RegExp of characters to be ignored e.g. \" -\" will ignore spaces and -'s.\n+**isAlpha(str [, locale, options])** | check if the string contains only letters (a-zA-Z).<br/><br/>Locale is one of `['ar', 'ar-AE', 'ar-BH', 'ar-DZ', 'ar-EG', 'ar-IQ', 'ar-JO', 'ar-KW', 'ar-LB', 'ar-LY', 'ar-MA', 'ar-QA', 'ar-QM', 'ar-SA', 'ar-SD', 'ar-SY', 'ar-TN', 'ar-YE', 'bg-BG', 'bn', 'cs-CZ', 'da-DK', 'de-DE', 'el-GR', 'en-AU', 'en-GB', 'en-HK', 'en-IN', 'en-NZ', 'en-US', 'en-ZA', 'en-ZM', 'es-ES', 'fa-IR', 'fi-FI', 'fr-CA', 'fr-FR', 'he', 'hi-IN', 'hu-HU', 'it-IT', 'ja-JP', 'ku-IQ', 'nb-NO', 'nl-NL', 'nn-NO', 'pl-PL', 'pt-BR', 'pt-PT', 'ru-RU', 'si-LK', 'sl-SI', 'sk-SK', 'sr-RS', 'sr-RS@latin', 'sv-SE', 'tr-TR', 'uk-UA']`) and defaults to `en-US`. Locale list is `validator.isAlphaLocales`. options is an optional object that can be supplied with the following key(s): ignore which can either be a String or RegExp of characters to be ignored e.g. \" -\" will ignore spaces and -'s.\n+**isAlphanumeric(str [, locale, options])** | check if the string contains only letters and numbers (a-zA-Z0-9).<br/><br/>Locale is one of `['ar', 'ar-AE', 'ar-BH', 'ar-DZ', 'ar-EG', 'ar-IQ', 'ar-JO', 'ar-KW', 'ar-LB', 'ar-LY', 'ar-MA', 'ar-QA', 'ar-QM', 'ar-SA', 'ar-SD', 'ar-SY', 'ar-TN', 'ar-YE', 'bn', 'bg-BG', 'cs-CZ', 'da-DK', 'de-DE', 'el-GR', 'en-AU', 'en-GB', 'en-HK', 'en-IN', 'en-NZ', 'en-US', 'en-ZA', 'en-ZM', 'es-ES', 'fa-IR', 'fi-FI', 'fr-CA', 'fr-FR', 'he', 'hi-IN', 'hu-HU', 'it-IT', 'ja-JP','ku-IQ', 'nb-NO', 'nl-NL', 'nn-NO', 'pl-PL', 'pt-BR', 'pt-PT', 'ru-RU', 'si-LK', 'sl-SI', 'sk-SK', 'sr-RS', 'sr-RS@latin', 'sv-SE', 'tr-TR', 'uk-UA']`) and defaults to `en-US`. Locale list is `validator.isAlphanumericLocales`. options is an optional object that can be supplied with the following key(s): ignore which can either be a String or RegExp of characters to be ignored e.g. \" -\" will ignore spaces and -'s.\n**isAscii(str)** | check if the string contains ASCII chars only.\n**isBase32(str [, options])** | check if a string is base32 encoded. `options` is optional and defaults to `{crockford: false}`.<br/> When `crockford` is true it tests the given base32 encoded string using [Crockford's base32 alternative](http://www.crockford.com/base32.html).\n**isBase58(str)** | check if a string is base58 encoded.\n",
        "date": "17.10.2022 13:42:20",
        "repo": "validatorjs/validator.js",
        "type": "feat",
        "chatgpt_zeroshot": "Update isAlpha and isAlphanumeric functions with additional locale options."
    },
    {
        "msg": "feat(isAlpha, isAlphanumeric): add ko-KR locale",
        "diff": "diff --git a/README.md b/README.md @@ -92,8 +92,8 @@ Validator | Description\n**contains(str, seed [, options ])** | check if the string contains the seed.<br/><br/>`options` is an object that defaults to `{ ignoreCase: false, minOccurrences: 1 }`.<br />Options: <br/> `ignoreCase`: Ignore case when doing comparison, default false<br/>`minOccurences`: Minimum number of occurrences for the seed in the string. Defaults to 1.\n**equals(str, comparison)** | check if the string matches the comparison.\n**isAfter(str [, date])** | check if the string is a date that's after the specified date (defaults to now).\n-**isAlpha(str [, locale, options])** | check if the string contains only letters (a-zA-Z).<br/><br/>Locale is one of `['ar', 'ar-AE', 'ar-BH', 'ar-DZ', 'ar-EG', 'ar-IQ', 'ar-JO', 'ar-KW', 'ar-LB', 'ar-LY', 'ar-MA', 'ar-QA', 'ar-QM', 'ar-SA', 'ar-SD', 'ar-SY', 'ar-TN', 'ar-YE', 'bg-BG', 'bn', 'cs-CZ', 'da-DK', 'de-DE', 'el-GR', 'en-AU', 'en-GB', 'en-HK', 'en-IN', 'en-NZ', 'en-US', 'en-ZA', 'en-ZM', 'es-ES', 'fa-IR', 'fi-FI', 'fr-CA', 'fr-FR', 'he', 'hi-IN', 'hu-HU', 'it-IT', 'ja-JP', 'ku-IQ', 'nb-NO', 'nl-NL', 'nn-NO', 'pl-PL', 'pt-BR', 'pt-PT', 'ru-RU', 'si-LK', 'sl-SI', 'sk-SK', 'sr-RS', 'sr-RS@latin', 'sv-SE', 'tr-TR', 'uk-UA']`) and defaults to `en-US`. Locale list is `validator.isAlphaLocales`. options is an optional object that can be supplied with the following key(s): ignore which can either be a String or RegExp of characters to be ignored e.g. \" -\" will ignore spaces and -'s.\n-**isAlphanumeric(str [, locale, options])** | check if the string contains only letters and numbers (a-zA-Z0-9).<br/><br/>Locale is one of `['ar', 'ar-AE', 'ar-BH', 'ar-DZ', 'ar-EG', 'ar-IQ', 'ar-JO', 'ar-KW', 'ar-LB', 'ar-LY', 'ar-MA', 'ar-QA', 'ar-QM', 'ar-SA', 'ar-SD', 'ar-SY', 'ar-TN', 'ar-YE', 'bn', 'bg-BG', 'cs-CZ', 'da-DK', 'de-DE', 'el-GR', 'en-AU', 'en-GB', 'en-HK', 'en-IN', 'en-NZ', 'en-US', 'en-ZA', 'en-ZM', 'es-ES', 'fa-IR', 'fi-FI', 'fr-CA', 'fr-FR', 'he', 'hi-IN', 'hu-HU', 'it-IT', 'ja-JP','ku-IQ', 'nb-NO', 'nl-NL', 'nn-NO', 'pl-PL', 'pt-BR', 'pt-PT', 'ru-RU', 'si-LK', 'sl-SI', 'sk-SK', 'sr-RS', 'sr-RS@latin', 'sv-SE', 'tr-TR', 'uk-UA']`) and defaults to `en-US`. Locale list is `validator.isAlphanumericLocales`. options is an optional object that can be supplied with the following key(s): ignore which can either be a String or RegExp of characters to be ignored e.g. \" -\" will ignore spaces and -'s.\n+**isAlpha(str [, locale, options])** | check if the string contains only letters (a-zA-Z).<br/><br/>Locale is one of `['ar', 'ar-AE', 'ar-BH', 'ar-DZ', 'ar-EG', 'ar-IQ', 'ar-JO', 'ar-KW', 'ar-LB', 'ar-LY', 'ar-MA', 'ar-QA', 'ar-QM', 'ar-SA', 'ar-SD', 'ar-SY', 'ar-TN', 'ar-YE', 'bg-BG', 'bn', 'cs-CZ', 'da-DK', 'de-DE', 'el-GR', 'en-AU', 'en-GB', 'en-HK', 'en-IN', 'en-NZ', 'en-US', 'en-ZA', 'en-ZM', 'es-ES', 'fa-IR', 'fi-FI', 'fr-CA', 'fr-FR', 'he', 'hi-IN', 'hu-HU', 'it-IT', 'ko-KR', 'ja-JP', 'ku-IQ', 'nb-NO', 'nl-NL', 'nn-NO', 'pl-PL', 'pt-BR', 'pt-PT', 'ru-RU', 'si-LK', 'sl-SI', 'sk-SK', 'sr-RS', 'sr-RS@latin', 'sv-SE', 'tr-TR', 'uk-UA']`) and defaults to `en-US`. Locale list is `validator.isAlphaLocales`. options is an optional object that can be supplied with the following key(s): ignore which can either be a String or RegExp of characters to be ignored e.g. \" -\" will ignore spaces and -'s.\n+**isAlphanumeric(str [, locale, options])** | check if the string contains only letters and numbers (a-zA-Z0-9).<br/><br/>Locale is one of `['ar', 'ar-AE', 'ar-BH', 'ar-DZ', 'ar-EG', 'ar-IQ', 'ar-JO', 'ar-KW', 'ar-LB', 'ar-LY', 'ar-MA', 'ar-QA', 'ar-QM', 'ar-SA', 'ar-SD', 'ar-SY', 'ar-TN', 'ar-YE', 'bn', 'bg-BG', 'cs-CZ', 'da-DK', 'de-DE', 'el-GR', 'en-AU', 'en-GB', 'en-HK', 'en-IN', 'en-NZ', 'en-US', 'en-ZA', 'en-ZM', 'es-ES', 'fa-IR', 'fi-FI', 'fr-CA', 'fr-FR', 'he', 'hi-IN', 'hu-HU', 'it-IT', 'ko-KR', 'ja-JP','ku-IQ', 'nb-NO', 'nl-NL', 'nn-NO', 'pl-PL', 'pt-BR', 'pt-PT', 'ru-RU', 'si-LK', 'sl-SI', 'sk-SK', 'sr-RS', 'sr-RS@latin', 'sv-SE', 'tr-TR', 'uk-UA']`) and defaults to `en-US`. Locale list is `validator.isAlphanumericLocales`. options is an optional object that can be supplied with the following key(s): ignore which can either be a String or RegExp of characters to be ignored e.g. \" -\" will ignore spaces and -'s.\n**isAscii(str)** | check if the string contains ASCII chars only.\n**isBase32(str [, options])** | check if a string is base32 encoded. `options` is optional and defaults to `{crockford: false}`.<br/> When `crockford` is true it tests the given base32 encoded string using [Crockford's base32 alternative](http://www.crockford.com/base32.html).\n**isBase58(str)** | check if a string is base58 encoded.\n",
        "date": "18.10.2022 02:16:00",
        "repo": "validatorjs/validator.js",
        "type": "feat",
        "chatgpt_zeroshot": "Update isAlpha and isAlphanumeric functions with additional locale options."
    },
    {
        "msg": "feat: if RollbarProxy is defined, use the proxy to send all Rollbar events",
        "diff": "diff --git a/src/browser/transport.js b/src/browser/transport.js @@ -71,7 +71,23 @@ function _makeZoneRequest(accessToken, url, method, data, callback, requestFacto\n}\n}\n+/* global RollbarProxy */\n+function _proxyRequest(json, callback) {\n+ var rollbarProxy = new RollbarProxy();\n+ rollbarProxy.sendJsonPayload(\n+ json,\n+ function(_msg) { /* do nothing */ }, // eslint-disable-line no-unused-vars\n+ function(err) {\n+ callback(new Error(err));\n+ }\n+ );\n+}\n+\nfunction _makeRequest(accessToken, url, method, data, callback, requestFactory) {\n+ if (typeof RollbarProxy !== 'undefined') {\n+ return _proxyRequest(data, callback);\n+ }\n+\nvar request;\nif (requestFactory) {\nrequest = requestFactory();\n",
        "date": "11.04.2019 15:14:42",
        "repo": "rollbar/rollbar.js",
        "type": "feat",
        "chatgpt_zeroshot": "Add RollbarProxy integration for sending JSON payloads in _makeRequest function"
    },
    {
        "msg": "feat: change default for wrapGlobalEventHandlers",
        "diff": "diff --git a/src/browser/rollbar.js b/src/browser/rollbar.js @@ -537,7 +537,7 @@ var defaultOptions = {\ncaptureIp: true,\ninspectAnonymousErrors: true,\nignoreDuplicateErrors: true,\n- wrapGlobalEventHandlers: true\n+ wrapGlobalEventHandlers: false\n};\nmodule.exports = Rollbar;\n",
        "date": "13.08.2019 12:59:05",
        "repo": "rollbar/rollbar.js",
        "type": "feat",
        "chatgpt_zeroshot": "Update defaultOptions to disable wrapping of global event handlers"
    },
    {
        "msg": "feat(package.json): add npm start command that is equal to npm run dev",
        "diff": "diff --git a/package.json b/package.json \"build:demo\": \"BUILD_DEMO=true APP_LANGUAGE=en webpack --config webpack_config/webpack.prod.demo.remove.me.please.js\",\n\"test\": \"jest --config=jest_config/jest.config.json --coverage --forceExit || true\",\n\"dev\": \"node webpack_config/server.js\",\n+ \"start\": \"npm run dev\",\n\"ssr\": \"nodemon --exec BABEL_ENV=ssr babel-node ./src/server\",\n\"precommit\": \"npm run test\",\n\"prepush\": \"echo \\\"$(tput bold)$(tput setaf 5)Hello, my name is React-Semantic-UI-Starter, and I am happy to see that you use this project :) $(tput sgr 0)\\\"\",\n",
        "date": "10.07.2017 13:42:19",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Add start script to package.json"
    },
    {
        "msg": "feat(webpack.prod.js): add webpack-sri, replace babili-webpack with uglifyjs, uncomment preloadWebpackPlugin, add ShakePlugin",
        "diff": "diff --git a/webpack_config/webpack.prod.js b/webpack_config/webpack.prod.js process.env.NODE_ENV = 'production'\n+\nconst exec = require('child_process').execSync\nconst webpack = require('webpack')\nconst ExtractTextPlugin = require('extract-text-webpack-plugin')\n@@ -7,14 +8,14 @@ const SriPlugin = require('webpack-subresource-integrity')\nconst I18nPlugin = require('i18n-webpack-plugin')\nconst CompressionPlugin = require('compression-webpack-plugin')\nconst OptimizeCssAssetsPlugin = require('optimize-css-assets-webpack-plugin')\n-const BabiliPlugin = require('babili-webpack-plugin')\n+// const BabiliPlugin = require('babili-webpack-plugin')\nconst ProgressPlugin = require('webpack/lib/ProgressPlugin')\nconst ManifestPlugin = require('webpack-manifest-plugin')\nconst OfflinePlugin = require('offline-plugin')\nconst PreloadWebpackPlugin = require('preload-webpack-plugin')\nconst FaviconsWebpackPlugin = require('favicons-webpack-plugin')\n-// See comments about ShakePlugin below:\n-// const ShakePlugin = require('webpack-common-shake').Plugin\n+const UglifyJSPlugin = require('uglifyjs-webpack-plugin')\n+const ShakePlugin = require('webpack-common-shake').Plugin\n// const git = require('git-rev-sync')\nlet languages = require('../i18n')\n@@ -34,6 +35,7 @@ exec('rm -rf dist/')\n// use hash filename to support long-term caching\nbase.output.filename = '[name].[chunkhash:8].js'\n+base.output.crossOriginLoading = 'anonymous'\nbase.devtool = 'cheap-source-map'\nbase.module.rules.push(\n{\n@@ -77,11 +79,7 @@ base.plugins.push(\nallChunks: true\n}),\nnew webpack.optimize.ModuleConcatenationPlugin(),\n- //\n- // FIXME: I'm getting error from this issue https://github.com/indutny/webpack-common-shake/issues/7\n- // Probably. it's a problem of a plugin, so it's temporarily commented\n- // new ShakePlugin(),\n- //\n+ new ShakePlugin(),\nnew OptimizeCssAssetsPlugin(),\n// NOTE: Prepack currently in alpha, be carefull with it\n// new PrepackWebpackPlugin(),\n@@ -105,8 +103,7 @@ base.plugins.push(\nname: 'manifest'\n}),\nnew webpack.BannerPlugin({\n- banner:\n- 'hash:[hash], chunkhash:[chunkhash], name:[name], filebase:[filebase], query:[query], file:[file]'\n+ banner: 'React-Semantic.UI-Starter. MIT License. Copyright (c) 2017 Copyright Vladimir Metnew. All Rights Reserved. https://github.com/Metnew/react-semantic.ui-starter'\n}),\n// XXX: this plugin is cool, but there is a one big issue:\n// It sets invalid url to browserconfig.xml and manifest.json in index.html.\n@@ -115,7 +112,7 @@ base.plugins.push(\nnew FaviconsWebpackPlugin({\n// add theme-color property\nbackground: config.manifest.theme,\n- prefix: `icons`,\n+ prefix: `icons/`,\nlogo: path.resolve(__dirname, '../static/images/logo.png'),\ntitle: config.title,\n// Inject the html into the html-webpack-plugin\n@@ -134,32 +131,24 @@ base.plugins.push(\nwindows: true\n}\n}),\n- new BabiliPlugin(),\n- // XXX: https://github.com/webpack-contrib/uglifyjs-webpack-plugin\n- // XXX: uglify-js 3.* doesn't working with es6 currently!\n- // new UglifyJsPlugin({\n- // sourceMap: true,\n- // compress: {\n- // warnings: false\n- // },\n- // output: {\n- // comments: false\n- // }\n- // }),\n- //\n- //\n- // NOTE: you can uncomment this option.\n- // I think it's unnecessary for small app, because it slows page finish loading.\n- // new PreloadWebpackPlugin({\n- // rel: 'preload',\n- // as: 'script',\n- // include: 'asyncChunks'\n- // }),\n- //\n- //\n+ // NOTE: temporarily comment babiliplugin, because it breaks build on Linux Alpine\n+ // new BabiliPlugin(),\n+ new UglifyJSPlugin({\n+ sourceMap: true,\n+ compress: {\n+ warnings: false\n+ },\n+ output: {\n+ comments: false\n+ }\n+ }),\n+ new PreloadWebpackPlugin({\n+ rel: 'preload',\n+ as: 'script',\n+ include: 'asyncChunks'\n+ }),\n// create manifest.json\nnew ManifestPlugin({fileName: 'manifest.json', cache: config.manifest}),\n- //\n// AppCache + ServiceWorkers\nnew OfflinePlugin({\nsafeToUseOptionalCaches: true,\n@@ -177,13 +166,13 @@ base.plugins.push(\n}),\nnew CompressionPlugin({\nalgorithm: 'gzip'\n- })\n+ }),\n// https://caniuse.com/#feat=subresource-integrity\n// NOTE: please, read about SRI before using it!\n- // new SriPlugin({\n- // hashFuncNames: ['sha256', 'sha384'],\n- // enabled: process.env.NODE_ENV === 'production'\n- // })\n+ new SriPlugin({\n+ hashFuncNames: ['sha256', 'sha384'],\n+ enabled: process.env.NODE_ENV === 'production'\n+ })\n)\n// minimize webpack output\n",
        "date": "12.07.2017 01:45:55",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Update webpack configuration for production build, including changes to plugins and output settings."
    },
    {
        "msg": "feat(package.json): add build_server script, remove BABEL_ENV, add IS_SSR, fix build script",
        "diff": "diff --git a/package.json b/package.json \"scripts\": {\n\"db\": \"nodemon ./db\",\n\"docs\": \"esdoc && serve ./esdoc\",\n- \"build\": \"webpack --config webpack_config/webpack.prod.js\",\n+ \"build\": \"npm run build_client && npm run build_server\",\n+ \"build_client\": \"webpack --config webpack_config/webpack.prod.js\",\n+ \"build_server\": \"babel src/server -d src/server_build\",\n\"test\": \"jest --config=jest_config/jest.config.json --coverage --forceExit || true\",\n\"dev\": \"node webpack_config/server.js\",\n- \"start\": \"BABEL_ENV=ssr babel-node ./src/server\",\n- \"ssr\": \"nodemon --exec BABEL_ENV=ssr babel-node ./src/server\",\n+ \"start\": \"NODE_ENV=production IS_SSR=true node ./src/server_build\",\n+ \"ssr\": \"nodemon --exec IS_SSR=true node ./src/server\",\n\"precommit\": \"npm run test\",\n\"prepush\": \"echo \\\"$(tput bold)$(tput setaf 5)Hello, my name is React-Semantic-UI-Starter, and I am happy to see that you use this project :) $(tput sgr 0)\\\"\",\n\"lint:styles\": \"stylelint ./src/common/**/*.scss -s scss --config ./.stylelintrc --fix\",\n",
        "date": "13.07.2017 16:56:50",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor build script to separate client and server builds, update start script for production environment."
    },
    {
        "msg": "feat(webpack_config/webpack.base.js): use url-loader, add img-loader, remove copywebpackplugin, add aliases for static dirs\nuse url-loader, add img-loader, remove copywebpackplugin, add aliases\nfor static dirs",
        "diff": "diff --git a/webpack_config/webpack.base.js b/webpack_config/webpack.base.js 'use strict'\nconst path = require('path')\nconst webpack = require('webpack')\n-const CopyWebpackPlugin = require('copy-webpack-plugin')\nconst languages = require('../i18n')\nconst config = require('./config')\n@@ -40,7 +39,9 @@ module.exports = {\ncontainers: `${config.srcCommonPath}/containers/`,\nreducers: `${config.srcCommonPath}/reducers/`,\nrouting: `${config.srcCommonPath}/routing/`,\n- styles: `${config.srcCommonPath}/styles/`\n+ styles: `${config.srcCommonPath}/styles/`,\n+ static: path.join(__dirname, '../static'),\n+ images: path.join(__dirname, '../static/images')\n},\nmodules: [\n// places where to search for required modules\n@@ -70,33 +71,39 @@ module.exports = {\n},\n{\ntest: /\\.(ico|eot|otf|webp|ttf|woff|woff2)$/i,\n- use: `file-loader?limit=100000&name=assets/[name].[hash].[ext]`\n+ use: `file-loader?limit=100000&name=assets/[name].[hash:8].[ext]`\n},\n{\n- test: /\\.(jpe?g|png|gif|svg)$/i,\n+ test: /\\.(jpe?g|png|gif|svg)$/,\nuse: [\n- `file-loader?limit=100000&name=assets/[name].[hash].[ext]`\n- // NOTE: it looks like there is an issue using img-loader in some environments\n+ {\n+ loader: 'url-loader',\n+ options: {\n+ limit: 8192,\n+ // path: '/images',\n+ name: 'images/[name].[hash:8].[ext]'\n+ }\n+ },\n+ 'img-loader'\n+ ]\n+ }\n+ // NOTE: LQIP loader doesn't work with file-loader and url-loader :(\n+ // `npm i --save-dev lqip-loader`\n+ // {\n+ // test: /\\.(jpe?g|png)$/i,\n+ // enforce: 'pre',\n+ // loaders: [\n// {\n- // loader: 'img-loader',\n+ // loader: 'lqip-loader',\n// options: {\n- // enabled: true,\n- // optipng: true\n+ // path: '/images-lqip', // your image going to be in media folder in the output dir\n+ // name: '[name]-lqip.[hash:8].[ext]' // you can use [hash].[ext] too if you wish\n// }\n// }\n- ]\n- }\n+ // ]\n+ // }\n]\n},\n- plugins: [\n- new webpack.DefinePlugin(definePluginArgs),\n- new CopyWebpackPlugin([\n- {\n- from: path.join(__dirname, '../static'),\n- // Fix path for demo\n- to: './'\n- }\n- ])\n- ],\n+ plugins: [new webpack.DefinePlugin(definePluginArgs)],\ntarget: 'web'\n}\n",
        "date": "15.07.2017 19:01:57",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor webpack configuration to include new static and images paths, update file-loader options for better hashing, and remove unnecessary plugins."
    },
    {
        "msg": "feat(src/server/index): use process env vars BASE_API and PORT for server",
        "diff": "diff --git a/src/server/index.js b/src/server/index.js @@ -5,6 +5,9 @@ require('babel-core/register')\nglobal.window = {\naddEventListener: () => {}\n}\n+const {BASE_API, PORT} = process.env\n+process.env.BASE_API = BASE_API ? BASE_API : '/api/v1'\n+process.env.PORT = PORT ? PORT : 4000\nglobal.i18n = () => {}\nglobal.fetch = require('node-fetch')\nrequire('./server')\n",
        "date": "16.07.2017 00:27:25",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Set default values for BASE_API and PORT in server index file"
    },
    {
        "msg": "feat(src/server/server): server use env vars PORT and BASE_API",
        "diff": "diff --git a/src/server/server.js b/src/server/server.js import app from './express'\nimport API from './api'\nimport useSSR from './ssr'\n-\n-const httpPort = process.env.PORT || 3000\n-\n-// add handler for non-static requests\n-app.use('/api/v1', API)\n-// SSR\n+// see src/server/index.js\n+const {PORT, BASE_API} = process.env\n+// Add API route\n+app.use(BASE_API, API)\n+// Add SSR handler\napp.get('*', useSSR)\n-\n-app.listen(httpPort, () => {\n+// Start server\n+app.listen(PORT, () => {\nconsole.log(`SSR ON PORT ${httpPort}! SSR!`)\n})\n",
        "date": "16.07.2017 00:31:00",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor server.js to use environment variables for port and base API, add API route and SSR handler. Start server on specified port."
    },
    {
        "msg": "feat(server/express/index): add auth middleware, add morgan",
        "diff": "diff --git a/src/server/express/index.js b/src/server/express/index.js -// Express stuff\n+// Express-related stuff\nimport express from 'express'\nimport expressHelmet from 'helmet'\nimport compression from 'compression'\nimport path from 'path'\nimport fs from 'fs'\nimport cookieParser from 'cookie-parser'\n+import morgan from 'morgan'\n+// Application-related stuff\n+// Do you remember that we use webpack aliases provided by cool babel plugin in .babelrc\n+import {JWT_TOKEN} from 'common/api'\n//\nconst language = process.env.APP_LANGUAGE || 'en'\nconst distPath = `../../../dist/${language}`\nconst app = express()\n// add express stuff\napp.use(compression())\n+app.use(morgan('dev'))\napp.use(cookieParser())\napp.use(\nexpress.static(path.join(__dirname, distPath), {\n@@ -21,4 +26,18 @@ app.use(\napp.disable('x-powered-by')\napp.use(expressHelmet())\n+// Auth-related middleware, check that user is logged in and token is valid\n+app.use((req, res, next) => {\n+ // Of course, you can make auth with jwt or cookies or session only\n+ // It's a starter project and I implemented a hardcoded solution\n+ const token = req.cookies[JWT_TOKEN]\n+ const isLoggedIn = token === 'nothing'\n+ console.log(`USER IS LOGGED IN: ${isLoggedIn ? 'YES': 'NO'}`)\n+ req.user = {\n+ token,\n+ isLoggedIn\n+ }\n+ next()\n+})\n+\nexport default app\n",
        "date": "16.07.2017 00:33:18",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Add morgan logging and auth-related middleware"
    },
    {
        "msg": "feat(src/server/ssr): use auth middleware, some comments",
        "diff": "diff --git a/src/server/ssr/index.js b/src/server/ssr/index.js import path from 'path'\nimport fs from 'fs'\n-// React stuff\n+// React-related stuff\nimport React from 'react'\nimport {render} from 'rapscallion'\nimport Helmet from 'react-helmet'\nimport {StaticRouter} from 'react-router'\nimport {ServerStyleSheet, StyleSheetManager} from 'styled-components'\n// Application\n-import {configureStore, configureRootComponent} from 'common'\n-import {JWT_TOKEN} from 'api'\n+// Do you remember that we use webpack aliases provided by cool babel plugin?\n+// (take a look at .babelrc)\n+import {configureStore, configureRootComponent} from 'common/index'\n//\nconst language = process.env.APP_LANGUAGE || 'en'\nconst distPath = `../../../dist/${language}`\n@@ -24,17 +25,12 @@ const indexHTMLFileContent = (function () {\nexport default function(req, res) {\n- // Auth stuff\n- const {cookies} = req\n- const token = cookies[JWT_TOKEN]\n- //\n- //\n- // HERE SHOULD BE CHECK THAT TOKEN IS VALID\n- //\n- //\n- const isTokenValid = true\n- const initialState = isTokenValid\n- ? {me: {auth: {token, isLoggedIn: true}}}\n+ // Auth-related stuff\n+ // NOTE: check `server/express/index.js` for more info\n+ const {user} = req\n+ const {isLoggedIn, token} = user\n+ const initialState = isLoggedIn\n+ ? {me: {auth: {isLoggedIn, token}}}\n: {}\n//\nconst sheet = new ServerStyleSheet()\n",
        "date": "16.07.2017 00:34:00",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor authentication logic and update imports in SSR index file"
    },
    {
        "msg": "feat(webpack_config/server): add http-proxy to proxy request to server",
        "diff": "diff --git a/webpack_config/server.js b/webpack_config/server.js 'use strict'\nconst path = require('path')\nconst express = require('express')\n+const httpProxy = require('http-proxy')\nconst webpack = require('webpack')\nconst webpackConfig = require('./webpack.dev')\nconst config = require('./config')\n@@ -8,6 +9,7 @@ const LogPlugin = require('./log-plugin')\nconst open = require('open')\nconst app = express()\n+const apiProxy = httpProxy.createProxyServer()\nconst port = config.port\nwebpackConfig.entry.client = [\n@@ -38,6 +40,7 @@ const devMiddleWare = require('webpack-dev-middleware')(compiler, {\n'Access-Control-Allow-Headers': '*'\n}\n})\n+\napp.use(devMiddleWare)\napp.use(\nrequire('webpack-hot-middleware')(compiler, {\n@@ -57,6 +60,17 @@ app.get('*', (req, res) => {\n})\n})\n+// Proxy api requests\n+app.use(process.env.BASE_API, function (req, res) {\n+ req.url = req.baseUrl\n+ apiProxy.web(req, res, {\n+ target: {\n+ port: 4000,\n+ host: 'localhost'\n+ }\n+ })\n+})\n+\napp.listen(port)\nopen(`http://localhost:${port}`)\n",
        "date": "16.07.2017 00:34:48",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Add proxy for API requests in webpack server configuration"
    },
    {
        "msg": "feat(.babelrc): remove babel-plugin-webpack-alias, remove dynamic-import node, use react-hot-loader only in development\nfeat(.babelrc): remove babel-plugin-webpack-alias, remove\ndynamic-import node, use react-hot-loader only in development",
        "diff": "diff --git a/.babelrc b/.babelrc \"moduleName\": \"babel-runtime\"\n}\n],\n- \"react-hot-loader/babel\",\n- \"syntax-dynamic-import\",\n- [\n- \"babel-plugin-webpack-alias\",\n- {\n- \"config\": \"./webpack_config/webpack.base.js\",\n- \"findConfig\": true\n- }\n- ],\n- \"dynamic-import-node\"\n+ \"syntax-dynamic-import\"\n],\n\"presets\": [\"es2015\", \"react\", \"stage-0\"],\n\"env\": {\n\"production\": {\n\"presets\": [\"react-optimize\"]\n+ },\n+ \"development\": {\n+ \"plugins\": [\n+ \"react-hot-loader/babel\"\n+ ]\n}\n}\n}\n",
        "date": "04.08.2017 13:53:45",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Remove unnecessary babel plugins and update development environment configuration"
    },
    {
        "msg": "feat(.eslintrc.json): add Raven and ga to globals",
        "diff": "diff --git a/.eslintrc.json b/.eslintrc.json {\n\"extends\": [\"plugin:react/recommended\", \"standard\"],\n\"parser\": \"babel-eslint\",\n- \"plugins\": [\n- \"react\",\n- \"babel\"\n- ],\n+ \"plugins\": [\"react\", \"babel\"],\n\"parserOptions\": {\n\"ecmaFeatures\": {\n\"jsx\": true,\n\"no-tabs\": 0\n},\n\"globals\": {\n- \"i18n\": true\n+ \"i18n\": true,\n+ \"Raven\": true,\n+ \"ga\": true\n}\n}\n",
        "date": "04.08.2017 13:54:12",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Add Raven and ga to global variables in eslint config"
    },
    {
        "msg": "feat(src/server/api/auth): add auth route for server",
        "diff": "diff --git a/src/server/api/auth/index.js b/src/server/api/auth/index.js import {Router} from 'express'\n+import jwt from 'jsonwebtoken'\n+import chalk from 'chalk'\n+// import validator from 'validator'\n+// {isLength, trim, isAlphanumeric, escape}\nconst router = Router()\n// define the home page route\nrouter.post('/', (req, res) => {\n- res.json({token: 'nothing'})\n+ // const {username, password} = req.body\n+ // const usernameValidated = validator.isLength(0, 36).is\n+ // const passwordValidated =\n+ const data = {username: 'cool_username_for_testing'}\n+ jwt.sign(data, process.env.JWT_SECRET, (err, token) => {\n+ if (err) {\n+ throw new Error(\n+ `Cant create JWT token based on input data: ${JSON.stringify(data)}`,\n+ err\n+ )\n+ }\n+ console.log(chalk.yellow(`Generated token for user: ${data.username}`))\n+ res.json({token})\n+ })\n})\nexport default router\n",
        "date": "04.08.2017 13:55:47",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Add jwt and chalk packages, implement JWT token generation in auth endpoint"
    },
    {
        "msg": "feat(src/server): remove env vars defaults, remove global.window patch, remove babel-core/register",
        "diff": "diff --git a/src/server/index.js b/src/server/index.js -require('babel-core/register')\n-// NOTE: uncomment these lines below if you use scss/sass!\n-// require.extensions['.scss'] = () => {}\n-// require.extensions['.css'] = () => {}\n-global.window = {\n- addEventListener: () => {}\n-}\n-const {BASE_API, PORT} = process.env\n-process.env.BASE_API = BASE_API ? BASE_API : '/api/v1'\n-process.env.PORT = PORT ? PORT : 4000\n-global.i18n = () => {}\n-global.fetch = require('node-fetch')\n+global.i18n = str => str\n+global.fetch = require('isomorphic-fetch')\n+\n+// import app\nrequire('./server')\n",
        "date": "04.08.2017 13:56:39",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor server index.js file to update global i18n function and fetch module."
    },
    {
        "msg": "feat(src/server/server): add chalk, fix SSR express's handling",
        "diff": "diff --git a/src/server/server.js b/src/server/server.js import app from './express'\nimport API from './api'\nimport useSSR from './ssr'\n-// see src/server/index.js\n-const {PORT, BASE_API} = process.env\n+import chalk from 'chalk'\n+\n+const {BASE_API, PORT} = process.env\n// Add API route\napp.use(BASE_API, API)\n// Add SSR handler\n-app.get('*', useSSR)\n+app.use(useSSR)\n// Start server\napp.listen(PORT, () => {\n- console.log(`Server is running on ${PORT} port!`)\n+ console.log(chalk.green(`\\nServer is running on ${PORT} port!\\n`))\n})\n",
        "date": "04.08.2017 13:57:13",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor server.js to use chalk for colored console output"
    },
    {
        "msg": "feat(common/components/addons/RouteAuth): add logging",
        "diff": "diff --git a/src/common/components/addons/RouteAuth/index.jsx b/src/common/components/addons/RouteAuth/index.jsx @@ -24,6 +24,7 @@ class RouteAuth extends Component {\ncomponentWillMount () {\nconst {lazy, component} = this.props\nif (lazy) {\n+ console.log('Component is lazy, loading...')\nthis.load()\n} else {\nthis.setState({componentLoaded: true, componentToRender: component})\n@@ -49,6 +50,9 @@ class RouteAuth extends Component {\ncomponent: componentToRender || null\n}\n+ console.log(`User has access to \"${path}\" path: ${canAccess(path) ? 'YES' : 'NO'}`)\n+ console.log(`Route's component loaded and ready to be mounted: ${componentLoaded ? 'YES' : 'NO'}`)\n+\nif (componentLoaded) {\nreturn canAccess(path)\n? <Route {...routeProps} />\n",
        "date": "04.08.2017 14:13:50",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Add console logs for lazy loading and component readiness in RouteAuth component"
    },
    {
        "msg": "feat(webpac_config/client/prod): remove comments from css files",
        "diff": "diff --git a/webpack_config/client/webpack.prod.babel.js b/webpack_config/client/webpack.prod.babel.js @@ -76,7 +76,14 @@ base.plugins.push(\nfilename: '[name].[chunkhash:8].css',\nallChunks: true\n}),\n- new OptimizeCssAssetsPlugin(),\n+ new OptimizeCssAssetsPlugin({\n+ cssProcessorOptions: {\n+ safe: true,\n+ discardComments: {\n+ removeAll: true\n+ }\n+ }\n+ }),\n// NOTE: ModuleConcatenationPlugin doesn't work on linux alpine,\n// I got an error trying to deploy this app to zeit's `now` when i use this plugin\n// new webpack.optimize.ModuleConcatenationPlugin(),\n@@ -114,17 +121,15 @@ base.plugins.push(\nname: 'manifest'\n}),\nnew webpack.BannerPlugin({\n- banner:\n- 'React-Semantic.UI-Starter. MIT License. Copyright (c) 2017 Copyright Vladimir Metnew. All Rights Reserved. https://github.com/Metnew/react-semantic.ui-starter'\n+ banner: config.banner\n}),\n- // XXX: this plugin seems cool, but there are few big issues:\n+ // XXX: this plugin looks cool, but there are few big issues:\n// 1. It sets invalid url to browserconfig.xml and manifest.json in index.html.\n// E.g: in generated index.html you can see:\n// <meta name=\"msapplication-config\" content=\"browserconfig.xml\">\n// 2. It looks like generated images aren't minified.(not sure)\n+ // 3. plugin is deprecated (at least look like it's deprecated)!\n// NOTE: It would be better to generate favicons without this plugin.\n- //\n- //\nnew FaviconsWebpackPlugin({\n// add theme-color property\nbackground: config.manifest.theme,\n",
        "date": "05.08.2017 12:11:04",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor webpack.prod.babel.js to optimize CSS assets and update banner plugin configuration. Fix issues with FaviconsWebpackPlugin and remove deprecated plugin."
    },
    {
        "msg": "feat(package.json): add styles for \"concurrently\" in npm run dev",
        "diff": "diff --git a/package.json b/package.json \"scripts\": {\n\"docs\": \"esdoc && serve ./esdoc\",\n\"build\": \"npm run frontend_build && npm run server_build\",\n- \"dev\": \"concurrently \\\"npm run server_dev\\\" \\\"npm run frontend_dev\\\"\",\n+ \"dev\": \"concurrently -p \\\"[{name}]\\\" -n \\\"SERVER,FRONTEND\\\" -c \\\"cyan.bold,magenta.bold\\\" \\\"npm run server_dev\\\" \\\"npm run frontend_dev\\\"\",\n\"server_dev\": \"webpack --config webpack_config/server/webpack.dev.babel.js\",\n\"server_build\": \"NODE_ENV=production webpack --config webpack_config/server/webpack.prod.babel.js\",\n\"test\": \"jest --config=jest_config/jest.config.json --coverage --forceExit || true\",\n",
        "date": "05.08.2017 12:36:34",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Update dev script to use concurrently with custom names and colors"
    },
    {
        "msg": "feat(webpack_config/client/webpack.base): add GA_ID to env vars",
        "diff": "diff --git a/webpack_config/client/webpack.base.js b/webpack_config/client/webpack.base.js @@ -3,12 +3,13 @@ const path = require('path')\nconst webpack = require('webpack')\nconst config = require('../config')\n-process.env.BASE_API = process.env.BASE_API || '/api/v1'\n+const {BASE_API, NODE_ENV, GA_ID, SENTRY_PUBLIC_DSN} = process.ENV\nlet definePluginArgs = {\n- 'process.env.NODE_ENV': JSON.stringify(process.env.NODE_ENV),\n- 'process.env.BASE_API': JSON.stringify(process.env.BASE_API),\n- 'process.env.SENTRY_PUBLIC_DSN': JSON.stringify(process.env.SENTRY_PUBLIC_DSN),\n+ 'process.env.NODE_ENV': JSON.stringify(NODE_ENV),\n+ 'process.env.BASE_API': JSON.stringify(BASE_API || '/api/v1'),\n+ 'process.env.GA_ID': JSON.stringify(GA_ID),\n+ 'process.env.SENTRY_PUBLIC_DSN': JSON.stringify(SENTRY_PUBLIC_DSN),\n'process.env.BROWSER': JSON.stringify(true)\n}\n",
        "date": "05.08.2017 19:08:39",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor webpack base configuration to use destructured process.ENV variables"
    },
    {
        "msg": "feat(src/client/index): allow to run whyDidYouUpdate",
        "diff": "diff --git a/src/client/index.jsx b/src/client/index.jsx @@ -12,9 +12,22 @@ if (process.env.NODE_ENV === 'production') {\nrequire('common/pwa')\n} else if (process.env.NODE_ENV === 'development') {\n// Devtools\n- // whyDidYouUpdate package is temporary broken, waiting for a patch\n- // const {whyDidYouUpdate} = require('why-did-you-update')\n- // whyDidYouUpdate(React)\n+ // NOTE: whyDidYouUpdate package is temporary broken, waiting for a patch.\n+\n+ /*eslint-disable */\n+ // XXX: But if you really want to run `why-did-you-update`\n+ // You can uncomment this block:\n+ /*\n+ Object.defineProperty(React, 'createClass', {\n+ set: nextCreateClass => {\n+ createClass = nextCreateClass\n+ }\n+ })\n+\n+ const {whyDidYouUpdate} = require('why-did-you-update')\n+ whyDidYouUpdate(React)\n+ */\n+ /*eslint-enable */\nwindow.Perf = require('react-addons-perf')\n}\n",
        "date": "05.08.2017 19:28:28",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Add temporary workaround for whyDidYouUpdate package bug"
    },
    {
        "msg": "feat(webpack_config/client): uncomment moduleconcatenationplugin",
        "diff": "diff --git a/webpack_config/client/webpack.prod.babel.js b/webpack_config/client/webpack.prod.babel.js @@ -88,7 +88,7 @@ base.plugins.push(\n// NOTE: ModuleConcatenationPlugin doesn't work on linux alpine,\n// I got an error trying to deploy this app to zeit's `now` when i use this plugin\n// Maybe, I got this error because of certain memory limit in `now` instance\n- // new webpack.optimize.ModuleConcatenationPlugin(),\n+ new webpack.optimize.ModuleConcatenationPlugin(),\nnew ShakePlugin(),\n// NOTE: you can use BabiliPlugin as an alternative to UglifyJSPlugin\n// new BabiliPlugin(),\n",
        "date": "05.08.2017 22:16:33",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Enable ModuleConcatenationPlugin in webpack.prod configuration"
    },
    {
        "msg": "feat(webpack_config/client/webpack.prod): clean only dist/client/<languageName> dir, not all dist/client",
        "diff": "diff --git a/webpack_config/client/webpack.prod.babel.js b/webpack_config/client/webpack.prod.babel.js @@ -28,7 +28,7 @@ const config = require('../config')\nlet languages = config.i18n\nconst languageName = APP_LANGUAGE || 'en'\n-exec('rm -rf dist/client')\n+exec(`rm -rf ${config.distPath}/client/${languageName}`)\n// NOTE: you can track versions with gitHash and store your build\n// in dist folder with path like: /dist/<gitHash>/{yourFilesHere}\n// const gitHash = git.short() //\n@@ -178,20 +178,16 @@ base.plugins.push(\ntemplate: path.resolve(config.srcCommonPath, 'index.ejs'),\nfilename: path.resolve(base.output.path, 'index.html'),\nchunksSortMode: 'dependency'\n- }),\n- new OfflinePlugin({\n+ })\n+ // new OfflinePlugin({\n// responseStrategy: 'network-first',\n// safeToUseOptionalCaches: false,\n// caches: {\n// main: ['vendor.*.css', 'vendor.*.js']\n// },\n// excludes: ['.htaccess'],\n- AppCache: false,\n- // ServiceWorker: {\n- // navigateFallbackURL: '/?offline=true',\n- // events: true\n- // }\n- })\n+ // AppCache: false\n+ // })\n)\n// minimize webpack output\n",
        "date": "07.08.2017 18:50:40",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor webpack.prod.babel.js to remove unnecessary code and update file deletion path"
    },
    {
        "msg": "feat(webpack_config/client): use {analyzerMode: 'static'} for BundleAnalyzerPlugin",
        "diff": "diff --git a/webpack_config/client/webpack.prod.babel.js b/webpack_config/client/webpack.prod.babel.js @@ -57,7 +57,7 @@ base.module.rules.push(\n// Do you want to use bundle analyzer?\nif (ANALYZE_BUNDLE) {\n- base.plugins.push(new BundleAnalyzerPlugin())\n+ base.plugins.push(new BundleAnalyzerPlugin({analyzerMode: 'static'}))\n}\n// NOTE: if language was set, then build only this language\n",
        "date": "08.08.2017 02:54:35",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Add analyzerMode option to BundleAnalyzerPlugin in webpack.prod configuration"
    },
    {
        "msg": "feat(webpack_config/server/webpack.base): add code for lqip-loader, add url-loader, remove replacement plugin",
        "diff": "diff --git a/webpack_config/server/webpack.base.js b/webpack_config/server/webpack.base.js @@ -83,6 +83,34 @@ module.exports = {\ntest: /\\.(js|jsx)$/,\nuse: 'babel-loader',\nexclude: [/node_modules/]\n+ },\n+ // NOTE: LQIP loader doesn't work with file-loader and url-loader :(\n+ // `npm i --save-dev lqip-loader`\n+ // {\n+ // test: /\\.(jpe?g|png)$/i,\n+ // enforce: 'pre',\n+ // loaders: [\n+ // {\n+ // loader: 'lqip-loader',\n+ // options: {\n+ // path: '/images-lqip', // your image going to be in media folder in the output dir\n+ // name: '[name]-lqip.[hash:8].[ext]' // you can use [hash].[ext] too if you wish\n+ // }\n+ // }\n+ // ]\n+ // }\n+ {\n+ test: /\\.(jpe?g|png|gif|svg)$/,\n+ use: [\n+ {\n+ loader: 'url-loader',\n+ options: {\n+ limit: 25000,\n+ name: 'images/[name].[hash:8].[ext]'\n+ }\n+ },\n+ 'img-loader'\n+ ]\n}\n]\n},\n@@ -91,13 +119,7 @@ module.exports = {\nnew webpack.NamedModulesPlugin(),\nnew webpack.BannerPlugin({\nbanner: config.banner\n- }),\n- // Server can't process require of your styles/images/fonts\n- new webpack.NormalModuleReplacementPlugin(\n- /\\.(css|sass|less|jpg|png|gif|scss)$/,\n- 'node-noop'\n- )\n- // new webpack.IgnorePlugin(/\\.(css|sass|less|jpg|png|gif|scss)$/)\n+ })\n],\nnode: {\n__dirname: true,\n",
        "date": "08.08.2017 19:17:42",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor webpack configuration to include url-loader for image files and remove NormalModuleReplacementPlugin for styles and images."
    },
    {
        "msg": "feat(webpack_config/client/webpack.prod): add optimized OfflinePlugin config",
        "diff": "diff --git a/webpack_config/client/webpack.prod.babel.js b/webpack_config/client/webpack.prod.babel.js @@ -30,7 +30,7 @@ const languageName = APP_LANGUAGE || 'en'\nexec(`rm -rf ${config.distPath}/client/${languageName}`)\n// NOTE: you can track versions with gitHash and store your build\n-// in dist folder with path like: /dist/<gitHash>/{yourFilesHere}\n+// in dist folder with path like: /dist/client/<gitHash>/<languageName>/{yourFilesHere}\n// const gitHash = git.short() //\n// use hash filename to support long-term caching\n@@ -182,15 +182,17 @@ base.plugins.push(\nnew OfflinePlugin({\npublicPath: '/',\ncaches: {\n- main: ['vendor.*.js', 'vendor.*.css', 'manifest.*.js', 'client.*.js']\n- },\n- excludes: ['/', ''],\n- externals: ['/auth'],\n- rewrites: () => {\n- return ''\n+ main: ['vendor.*.js', 'vendor.*.css', 'manifest.*.js', 'client.*.js', 'assets/icons.*.*']\n},\n+ excludes: ['**/.*', '**/*.map'],\n+ externals: [\n+ '/',\n+ '/auth',\n+ 'https://fonts.googleapis.com/css?family=Lato:400,700,400italic,700italic&subset=latin'\n+ ],\nServiceWorker: {\n- navigateFallbackURL: '/auth',\n+ events: true,\n+ navigateFallbackURL: '/auth?offline=true',\nnavigateFallbackForRedirects: false\n},\nAppCache: false\n",
        "date": "08.08.2017 19:19:21",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Update webpack production configuration to include new assets and improve caching strategy"
    },
    {
        "msg": "feat(webpack_config/server): add NormalModuleReplacementPlugin to server",
        "diff": "diff --git a/webpack_config/server/webpack.base.js b/webpack_config/server/webpack.base.js @@ -89,6 +89,10 @@ const baseWebpackConfig = {\n])\n},\nplugins: isomorphicWebpackConfig.plugins.concat([\n+ new webpack.NormalModuleReplacementPlugin(\n+ /\\.(css|sass|less|scss)$/,\n+ 'node-noop'\n+ ),\nnew webpack.DefinePlugin(definePluginArgs)\n]),\nnode: {\n",
        "date": "09.08.2017 23:03:16",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Add NormalModuleReplacementPlugin for CSS/SASS/LESS/SCSS files"
    },
    {
        "msg": "feat(common/containers/App/index.jsx): App gets routes from props",
        "diff": "diff --git a/src/common/containers/App/index.jsx b/src/common/containers/App/index.jsx @@ -8,7 +8,6 @@ import Footer from 'components/views/Footer'\nimport Header from 'components/views/Header'\nimport {CLOSE_SIDEBAR, OPEN_SIDEBAR, WINDOW_RESIZE} from 'actions/layout'\nimport {LOGOUT_AUTH} from 'actions/auth'\n-import {routes} from 'routing'\nimport {\nPageLayout,\nMainLayout,\n@@ -22,6 +21,8 @@ import {\nclass App extends Component {\nstatic propTypes = {\nchildren: PropTypes.node.isRequired,\n+ // Routes of app passed as props in `Root`\n+ routes: PropTypes.array.isRequired,\n// React-router `withRouter` props\nlocation: PropTypes.object,\nhistory: PropTypes.object,\n@@ -118,7 +119,7 @@ class App extends Component {\n* @return {Array} array of routes that will be rendered in sidebar menu\n*/\ngetSidebarRouting () {\n- const sidebarRouting = routes.filter(a => a.sidebarVisible).map(a => {\n+ const sidebarRouting = this.props.routes.filter(a => a.sidebarVisible).map(a => {\nconst {path, name, icon, external, strict, exact} = a\nconst b = {path, name, icon, external, strict, exact}\nreturn b\n@@ -132,7 +133,7 @@ class App extends Component {\n* @return {String} page title\n*/\ngetPageTitle (pathname) {\n- const matchedRoutes = routes.filter(a => matchPath(pathname, a))\n+ const matchedRoutes = this.props.routes.filter(a => matchPath(pathname, a))\nconst currentRoute = matchedRoutes[0] || {}\nconst title = currentRoute.name || '404'\nreturn title\n",
        "date": "10.08.2017 04:53:33",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor App component to use routes passed as props in Root component"
    },
    {
        "msg": "feat(src/common/components/views/Root): pass routes as prop to <App>",
        "diff": "diff --git a/src/common/components/views/Root/index.jsx b/src/common/components/views/Root/index.jsx @@ -40,7 +40,7 @@ export default class Root extends Component {\n<Provider store={store} key={Math.random()}>\n<ThemeProvider theme={theme}>\n<Router {...routerProps} key={Math.random()}>\n- <App>\n+ <App routes={routes}>\n<RoutingWrapper store={store} routes={routes} />\n</App>\n</Router>\n",
        "date": "10.08.2017 04:54:26",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Pass routes prop to App component in Root view"
    },
    {
        "msg": "feat(webpack_config/client/webpack.base.js): add more style extension to resolve",
        "diff": "diff --git a/webpack_config/client/webpack.base.js b/webpack_config/client/webpack.base.js @@ -37,7 +37,7 @@ const baseBuild = {\nresolve: {\nalias: isomorphicWebpackConfig.resolve.alias,\nmodules: isomorphicWebpackConfig.resolve.modules,\n- extensions: isomorphicWebpackConfig.resolve.extensions.concat(['.css', '.scss'])\n+ extensions: isomorphicWebpackConfig.resolve.extensions.concat(['.css', '.scss', '.sass'])\n},\nmodule: {\nrules: isomorphicWebpackConfig.module.rules.concat([\n",
        "date": "10.08.2017 06:17:36",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Add .sass extension to resolve.extensions in webpack config"
    },
    {
        "msg": "feat(src/common/routing/index.jsx): use  /* webpackMode: \"eager\" for server-side code",
        "diff": "diff --git a/src/common/routing/index.jsx b/src/common/routing/index.jsx @@ -7,7 +7,12 @@ export const history = getHistory()\nconst loadLazyComponent = url => {\nreturn async cb => {\n- const loadComponent = await import(/* webpackMode: \"lazy-once\", webpackChunkName: \"lazy-containers\" */ `containers/${url}/index.jsx`)\n+ const str = `containers/${url}/index.jsx`\n+ if (process.env.BROWSER) {\n+ const loadComponent = await import(/* webpackMode: \"lazy-once\", webpackChunkName: \"lazy-containers\" */ str)\n+ return loadComponent\n+ }\n+ const loadComponent = await import(/* webpackMode: \"eager\", webpackChunkName: \"lazy-containers\" */ str)\nreturn loadComponent\n}\n}\n",
        "date": "10.08.2017 06:18:33",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor lazy loading logic in routing index file"
    },
    {
        "msg": "feat(.babelrc): add babel-plugin-webpack-alias in test and development\nadd babel-plugin-webpack-alias in test and development",
        "diff": "diff --git a/.babelrc b/.babelrc },\n\"development\": {\n\"plugins\": [\n- \"react-hot-loader/babel\"\n+ \"react-hot-loader/babel\",\n+ [\n+ \"babel-plugin-webpack-alias\",\n+ {\n+ \"config\": \"./webpack_config/client/webpack.base.js\",\n+ \"findConfig\": true\n+ }\n+ ]\n+ ]\n+ },\n+ \"test\": {\n+ \"plugins\": [\n+ [\n+ \"babel-plugin-webpack-alias\",\n+ {\n+ \"config\": \"./webpack_config/webpack.isomorphic.js\",\n+ \"findConfig\": true\n+ }\n+ ]\n]\n}\n}\n",
        "date": "14.08.2017 16:59:06",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Add webpack alias plugin configuration for development and test environments"
    },
    {
        "msg": "feat(.eslintrc): add react-a11y plugin for eslint\nadd react-a11y plugin for eslint",
        "diff": "diff --git a/.eslintrc.json b/.eslintrc.json {\n- \"extends\": [\"plugin:react/recommended\", \"standard\"],\n+ \"extends\": [\n+ \"plugin:react/recommended\",\n+ \"plugin:jsx-a11y/recommended\",\n+ \"standard\"\n+ ],\n\"parser\": \"babel-eslint\",\n- \"plugins\": [\"react\", \"babel\"],\n+ \"plugins\": [\"react\", \"babel\", \"jsx-a11y\"],\n\"parserOptions\": {\n\"ecmaFeatures\": {\n\"jsx\": true,\n\"node\": true\n},\n\"rules\": {\n- \"no-unused-vars\": 1,\n+ \"no-unused-vars\": 0,\n\"no-tabs\": 0,\n\"indent\": [2, \"tab\"]\n},\n",
        "date": "14.08.2017 16:59:55",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Add jsx-a11y plugin to eslint configuration"
    },
    {
        "msg": "feat(webpack_config/config): add vendor and polyfills arrays for AutoDLLPlugin, style fixes\nfeat(webpack_config/config): add vendor and polyfills arrays for\nAutoDLLPlugin, style fixes",
        "diff": "diff --git a/webpack_config/config.js b/webpack_config/config.js @@ -6,18 +6,24 @@ import path from 'path'\nimport i18n from '../i18n'\nimport manifest from './assets/manifest'\n-function ternary (a, b) {\n- return a ? a : b\n-}\n+let {\n+ BASE_API,\n+ APP_LANGUAGE,\n+ NODE_ENV,\n+ SENTRY_DSN_PUBLIC,\n+ GA_ID,\n+ JWT_SECRET,\n+ DIST_PATH,\n+ SENTRY_DSN,\n+ PORT\n+} = process.env\n// Vars for both server and frontend\n-const BASE_API = ternary(process.env.BASE_API, '/api/v1')\n-const APP_LANGUAGE = ternary(process.env.APP_LANGUAGE, 'en')\n-const NODE_ENV = ternary(process.env.NODE_ENV, 'development')\n+BASE_API = BASE_API || '/api/v1'\n+APP_LANGUAGE = APP_LANGUAGE || 'en'\n+NODE_ENV = NODE_ENV || 'development'\n// Vars for frontend only\n-const SENTRY_DSN_PUBLIC = ternary(process.env.SENTRY_DSN_PUBLIC)\n-const GA_ID = ternary(process.env.GA_ID)\n// Paths\nconst rootPath = path.join(__dirname, '../') // = \"/\"\n@@ -26,11 +32,9 @@ const srcPath = path.join(rootPath, './src') // = \"/src\"\nconst srcCommonPath = path.join(srcPath, './common') // = \"/src/common\"\n// Vars for server only\n-const DIST_PATH = ternary(process.env.DIST_PATH, path.join(distPath, './client', APP_LANGUAGE))\n-const JWT_SECRET = ternary(process.env.JWT_SECRET, 'secret')\n-const SENTRY_DSN = ternary(process.env.SENTRY_DSN)\n-const PORT = ternary(process.env.PORT, 4000)\n-\n+DIST_PATH = DIST_PATH || path.join(distPath, './client', APP_LANGUAGE)\n+JWT_SECRET = JWT_SECRET || 'secret'\n+PORT = PORT || 4000\nexport default {\ntitle: 'React-Semantic.UI-Starter',\n@@ -57,5 +61,24 @@ export default {\nbanner:\n'MIT License. Copyright (c) 2017 Vladimir Metnew All Rights Reserved. Repo: https://github.com/Metnew/react-semantic.ui-starter',\n// your manifest.json\n- manifest\n+ manifest,\n+ vendor: [\n+ 'react',\n+ 'react-dom',\n+ 'redux',\n+ 'history',\n+ 'react-router',\n+ 'react-router-dom',\n+ 'react-router-redux',\n+ 'semantic-ui-react',\n+ 'redux-thunk',\n+ 'react-helmet',\n+ 'lodash',\n+ 'normalizr',\n+ 'js-cookie',\n+ 'prop-types',\n+ 'store2',\n+ 'styled-components'\n+ ],\n+ polyfills: ['promise-polyfill', 'isomorphic-fetch']\n}\n",
        "date": "14.08.2017 17:11:35",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor webpack config to use ES6 destructuring and default values for environment variables"
    },
    {
        "msg": "feat(webpack_config/server): remove plugins from development config\nfeat(webpack_config/server): remove WebpackShellPlugin,\nFriendlyErrorsPlugin, webpack.NoEmitOnErrorsPlugin from webpack.dev",
        "diff": "diff --git a/webpack_config/server/webpack.dev.babel.js b/webpack_config/server/webpack.dev.babel.js import path from 'path'\nimport webpack from 'webpack'\n-// import _ from 'lodash'\nimport config from '../config'\nimport baseWebpackConfig from './webpack.base'\nimport WebpackShellPlugin from 'webpack-shell-plugin'\nimport FriendlyErrors from 'friendly-errors-webpack-plugin'\n-const plugins = [\n- new WebpackShellPlugin({\n- onBuildEnd: [`nodemon ${path.join(config.distPath, '/server', config.APP_LANGUAGE)}`]\n- }),\n- // new webpack.HotModuleReplacementPlugin(),\n- new webpack.NoEmitOnErrorsPlugin(),\n- new FriendlyErrors()\n-]\n+const plugins = []\nconst build = Object.assign({}, baseWebpackConfig, {\n- // entry: config.entry.concat(['webpack/hot/poll?1000']),\ndevtool: 'eval-source-map',\nwatch: true,\nplugins: baseWebpackConfig.plugins.concat(plugins)\n",
        "date": "14.08.2017 17:15:38",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Remove unnecessary plugins and update webpack configuration for development server"
    },
    {
        "msg": "feat(.babelrc): remove plugin-webpack-alias from dev, add module-resolver for test\nfeat(.babelrc): remove plugin-webpack-alias from env.development, add\nmodule-resolver and \"dynamic-import-node\" for env.test",
        "diff": "diff --git a/.babelrc b/.babelrc },\n\"development\": {\n\"plugins\": [\n- \"react-hot-loader/babel\",\n- [\n- \"babel-plugin-webpack-alias\",\n- {\n- \"config\": \"./webpack_config/client/webpack.base.js\",\n- \"findConfig\": true\n- }\n- ]\n+ \"react-hot-loader/babel\"\n]\n},\n\"test\": {\n\"plugins\": [\n+ \"dynamic-import-node\",\n[\n- \"babel-plugin-webpack-alias\",\n+ \"module-resolver\",\n{\n- \"config\": \"./webpack_config/webpack.isomorphic.js\",\n- \"findConfig\": true\n+ \"root\": [\"./\"],\n+ \"alias\": {\n+ \"actions\": \"./src/common/actions\",\n+ \"api\": \"./src/common/api\",\n+ \"components\": \"./src/common/components\",\n+ \"containers\": \"./src/common/containers\",\n+ \"reducers\": \"./src/common/reducers\",\n+ \"routing\": \"./src/common/routing\"\n+ },\n+ \"extensions\": [\".js\", \".jsx\", \".json\"]\n}\n]\n]\n",
        "date": "14.08.2017 23:41:18",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor babelrc configuration for development and test environments"
    },
    {
        "msg": "feat(reducers/posts/test): add test to handle location change to own path\nfeat(reducers/posts/test): add test to handle location change to own\npath",
        "diff": "diff --git a/src/common/reducers/posts/index.test.js b/src/common/reducers/posts/index.test.js @@ -27,6 +27,13 @@ const LOCATION_CHANGE_TO_INBOX = {\n}\n}\n+const LOCATION_CHANGE_TO_ITSELF = {\n+ type: actions.LOCATION_CHANGE,\n+ payload: {\n+ pathname: '/'\n+ }\n+}\n+\ndescribe('POSTS REDUCER', () => {\nit('should return the initial state', () => {\nexpect(reducer(undefined, {x: 'string'})).toEqual(initialState)\n@@ -72,8 +79,16 @@ describe('POSTS REDUCER', () => {\nit('should handle LOCATION_CHANGE to other paths', () => {\nconst customState = {\n...initialState,\n- lol: 3\n+ hello: 'world'\n}\nexpect(reducer(customState, LOCATION_CHANGE_TO_INBOX)).toEqual(initialState)\n})\n+\n+ it('should handle LOCATION_CHANGE to own path', () => {\n+ const customState = {\n+ ...initialState,\n+ hello: 'world'\n+ }\n+ expect(reducer(customState, LOCATION_CHANGE_TO_ITSELF)).toEqual(customState)\n+ })\n})\n",
        "date": "14.08.2017 23:54:07",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Add test case for handling LOCATION_CHANGE to own path in posts reducer"
    },
    {
        "msg": "feat(webpack_config/server): add webpackHotMiddleware\nfeat(webpack_config/server): add webpackHotFullstackMiddleware\nAdd callback for webpackHotFullstackMiddleware, add comments",
        "diff": "diff --git a/webpack_config/server.js b/webpack_config/server.js 'use strict'\nimport path from 'path'\nimport express from 'express'\n-import httpProxy from 'http-proxy'\nimport webpack from 'webpack'\n-import webpackConfig from './client/webpack.dev.babel'\n-import config from './config'\n-import LogPlugin from './log-plugin'\n-import open from 'open'\n-\n-const apiProxy = httpProxy.createProxyServer()\n-const app = express()\n-const port = 3000\n-\n-webpackConfig.entry.client = [\n- 'react-hot-loader/patch',\n- 'webpack-hot-middleware/client?reload=true',\n- webpackConfig.entry.client\n-]\n-\n-webpackConfig.plugins.push(new LogPlugin(port))\n+import webpackDevMiddleware from 'webpack-dev-middleware'\n+import webpackHotMiddleware from 'webpack-hot-middleware'\n+import webpackHotFullStack from 'webpack-hot-fullstack-middleware'\n+import WriteFilePlugin from 'write-file-webpack-plugin'\n+import client from './client/webpack.dev.babel'\n+import server from './server/webpack.dev.babel'\n+// Webpack plugins\n+import LogPlugin from './assets/log-plugin'\n+import FriendlyErrors from 'friendly-errors-webpack-plugin'\n+// Configs for MultiCompiler\n+const webpackConfig = [client, server]\n+// Get MultiCompiler\n+const compiler = webpack(webpackConfig)\n+// Apply some commonly used plugins\n+compiler.apply(new FriendlyErrors())\n+compiler.apply(new LogPlugin())\n+compiler.apply(new webpack.NoEmitOnErrorsPlugin())\n+// Create devMiddleWare\n+const devMiddleWare = webpackDevMiddleware(compiler, {\n+ serverRenderer: true,\n+ publicPath: webpackConfig[0].output.publicPath,\n+ quiet: false,\n+ noInfo: true\n+})\n-let compiler\n+// NOTE: Every time we apply our compiled code to development server\n+// We add new middlewares from new code, but don't remove old middlewares from old code\n-try {\n- compiler = webpack(webpackConfig)\n-} catch (err) {\n- console.log(err.message)\n- process.exit(1)\n+// Number of middlewares that our app should has\n+let prevSize = null\n+/**\n+ * @desc Adds dev middlewares + your code to the instance of express server\n+ * @param {Function} app - Express dev server to which compiled code will be applied\n+ * @param {Function} wss - WebSocket server, allow you send event to client to re-render the page\n+ */\n+export default function (app, wss) {\n+ /**\n+ * @desc Function that executes after your server-side code compiles\n+ * @param {Function} serverSideCode - compiled server-side code\n+ */\n+ const done = serverSideCode => {\n+ // Get current stack of the app (e.g. applied middlewares)\n+ const {stack} = app._router\n+ const {length} = stack\n+ prevSize = prevSize || length\n+ if (length > prevSize) {\n+ // Remove old compiled code\n+ app._router.stack = stack.slice(0, prevSize)\n}\n-\n-const devMiddleWare = require('webpack-dev-middleware')(compiler, {\n- publicPath: webpackConfig.output.publicPath,\n- // @Metnew: personally I prefer `quite: \"true\"`\n- quiet: false,\n- hot: true,\n- inline: true,\n- headers: {\n- 'Access-Control-Allow-Origin': '*',\n- 'Access-Control-Allow-Methods': '*',\n- 'Access-Control-Allow-Headers': '*'\n+ // Apply newly compiled code\n+ serverSideCode(app)\n+ // wss.on('connection', (ws, req) => {\n+ // console.log('FIRE', req.url)\n+ // ws.send('reload')\n+ // })\n}\n-})\napp.use(devMiddleWare)\napp.use(\n- require('webpack-hot-middleware')(compiler, {\n+ webpackHotMiddleware(\n+ compiler.compilers.find(compiler => compiler.name === 'client'),\n+ {\nlog: console.log\n- })\n+ }\n)\n-\n-const mfs = devMiddleWare.fileSystem\n-const file = path.join(webpackConfig.output.path, 'index.html')\n-\n-devMiddleWare.waitUntilValid()\n-\n-app.get('*', (req, res) => {\n- devMiddleWare.waitUntilValid(() => {\n- const html = mfs.readFileSync(file)\n- res.end(html)\n- })\n-})\n-\n-// Proxy api requests to BASE_API\n-app.use(config.BASE_API, function (req, res) {\n- /**\n- * // req.baseUrl - The URL path on which a router instance was mounted.\n- * {@link https://expressjs.com/ru/4x/api.html#req.baseUrl}\n- */\n- req.url = req.baseUrl + req.url\n- apiProxy.web(req, res, {\n- target: {\n- port: 4000,\n- host: 'localhost'\n+ )\n+ webpackHotFullStack({compiler, done})\n}\n- })\n-})\n-\n-app.listen(port)\n-\n-open(`http://localhost:${port}`)\n",
        "date": "15.08.2017 00:26:46",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor webpack configuration and add new middleware for hot reloading."
    },
    {
        "msg": "feat(actions/auth): add test to handle LOGIN_AUTH_FAIL, fix LOGIN_AUTH_SUCCESS test\nfeat(actions/auth): add test to handle LOGIN_AUTH_FAIL. Test that\nhandles LOGIN_AUTH_SUCCESS now is passed even if no local server is\nfound",
        "diff": "diff --git a/src/common/actions/auth/index.test.js b/src/common/actions/auth/index.test.js @@ -16,7 +16,7 @@ describe('Auth actions', () => {\n* @arg {Function} done - is a callback that you need to execute,\n* If your action performing async task (e.g. request to API)\n*/\n- it('creates LOGIN_AUTH_SUCCESS when LOGIN_AUTH was successful', done => {\n+ test('creates LOGIN_AUTH_SUCCESS when LOGIN_AUTH was successful', function (done) {\n// Create expected output of your action\nconst expectedActions = {\ntype: actions.LOGIN_AUTH_SUCCESS,\n@@ -26,12 +26,45 @@ describe('Auth actions', () => {\n}\n// Create store for testing\nconst store = mockStore({})\n+ // try {\n// Dispatch action\n- return store.dispatch(actions.LOGIN_AUTH).then(res => {\n+ store\n+ .dispatch(actions.LOGIN_AUTH)\n+ .then(res => {\n+ // That means that there is no server that can respond to the request\n+ // NOTE:\n+ if (!res.errors) {\n+ console.error(`There is no server that can respond to the '/auth' request!`)\n+ expect(true).toEqual(true)\n+ return done()\n+ }\n// Compare expected and real outputs\nexpect(res).toEqual(expectedActions)\n// Call `done()` callback, because action is async\ndone()\n})\n})\n+\n+ test('creates LOGIN_AUTH_FAIL when LOGIN_AUTH was unsuccessful', function (done) {\n+ // Create expected output of your action\n+ const expectedActions = {\n+ type: actions.LOGIN_AUTH_FAIL,\n+ result: {\n+ errors: {}\n+ }\n+ }\n+ // Create store for testing\n+ const store = mockStore({})\n+ // try {\n+ // Dispatch action\n+ store\n+ .dispatch(actions.LOGIN_AUTH)\n+ .then(res => {\n+\n+ // Compare expected and real outputs\n+ expect(res.type).toEqual(expectedActions.type)\n+ // Call `done()` callback, because action is async\n+ done()\n+ })\n+ })\n})\n",
        "date": "15.08.2017 01:03:48",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor auth actions test to use 'test' instead of 'it' and add test for LOGIN_AUTH_FAIL case"
    },
    {
        "msg": "feat(webpack_config/client): remove unused plugins, add WriteFilePlugin\nfeat(webpack_config/client): remove unused plugins, add\nWriteFilePlugin, remove devtool re-assignment\nRemoved plugins:\nHtmlWebpackPlugin\nwebpack.NoEmitOnErrorsPlugin\nFriendlyErrors",
        "diff": "diff --git a/webpack_config/client/webpack.dev.babel.js b/webpack_config/client/webpack.dev.babel.js import path from 'path'\nimport webpack from 'webpack'\n-import HtmlWebpackPlugin from 'html-webpack-plugin'\nimport baseWebpackConfig from './webpack.base'\n-import FriendlyErrors from 'friendly-errors-webpack-plugin'\n+import WriteFilePlugin from 'write-file-webpack-plugin'\n+// import AutoDllPlugin from 'autodll-webpack-plugin'\nimport config from '../config'\nimport _ from 'lodash'\n@@ -19,7 +19,6 @@ const loaders = {\nsass: {loader: 'sass-loader', options: {sourceMap: true}}\n}\n-baseWebpackConfig.devtool = 'eval-source-map'\nbaseWebpackConfig.module.rules.push(\n{\ntest: /\\.css$/,\n@@ -37,16 +36,16 @@ baseWebpackConfig.module.rules.push(\n}\n)\n+baseWebpackConfig.entry.client = [\n+ 'react-hot-loader/patch',\n+ 'webpack-hot-middleware/client?reload=true',\n+ baseWebpackConfig.entry.client\n+]\n+\n// add dev plugins\nbaseWebpackConfig.plugins.push(\n- // add index.html\n- new HtmlWebpackPlugin({\n- title: config.title,\n- template: path.resolve(config.rootPath, 'webpack_config', 'assets', 'index.ejs')\n- }),\nnew webpack.HotModuleReplacementPlugin(),\n- new webpack.NoEmitOnErrorsPlugin(),\n- new FriendlyErrors()\n+ new WriteFilePlugin()\n)\nexport default baseWebpackConfig\n",
        "date": "15.08.2017 01:05:52",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "\"Add WriteFilePlugin and update entry.client in webpack config\""
    },
    {
        "msg": "feat(webpack_config/config): compute isProduction inside config.js\ncompute isProduction inside config.js",
        "diff": "diff --git a/webpack_config/config.js b/webpack_config/config.js @@ -8,19 +8,17 @@ import manifest from './assets/manifest'\nlet {\nBASE_API,\n- APP_LANGUAGE,\nNODE_ENV,\nSENTRY_DSN_PUBLIC,\nGA_ID,\nJWT_SECRET,\n- DIST_PATH,\n+ CLIENT_DIST_PATH,\nSENTRY_DSN,\nPORT\n} = process.env\n// Vars for both server and frontend\nBASE_API = BASE_API || '/api/v1'\n-APP_LANGUAGE = APP_LANGUAGE || 'en'\nNODE_ENV = NODE_ENV || 'development'\n// Vars for frontend only\n@@ -32,22 +30,25 @@ const srcPath = path.join(rootPath, './src') // = \"/src\"\nconst srcCommonPath = path.join(srcPath, './common') // = \"/src/common\"\n// Vars for server only\n-DIST_PATH = DIST_PATH || path.join(distPath, './client', APP_LANGUAGE)\n+CLIENT_DIST_PATH = CLIENT_DIST_PATH || path.join(distPath, './client')\nJWT_SECRET = JWT_SECRET || 'secret'\nPORT = PORT || 4000\n+// compute isProduction based on NODE_ENV\n+const isProduction = process.env.NODE_ENV === 'production'\n+\nexport default {\ntitle: 'React-Semantic.UI-Starter',\npublicPath: '/',\n// i18n object\ni18n,\n+ isProduction,\n// Env vars\nBASE_API,\n- APP_LANGUAGE,\nNODE_ENV,\nSENTRY_DSN_PUBLIC,\nGA_ID,\n- DIST_PATH,\n+ CLIENT_DIST_PATH,\nJWT_SECRET,\nSENTRY_DSN,\nPORT,\n",
        "date": "23.08.2017 18:28:04",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor webpack config to use CLIENT_DIST_PATH instead of DIST_PATH and add isProduction flag based on NODE_ENV."
    },
    {
        "msg": "feat(webpack_config/server): add experimental ssr in development\nadd experimental ssr in development",
        "diff": "diff --git a/webpack_config/server.js b/webpack_config/server.js -'use strict'\n+/**\n+ * @file\n+ */\nimport path from 'path'\nimport express from 'express'\nimport webpack from 'webpack'\nimport webpackDevMiddleware from 'webpack-dev-middleware'\nimport webpackHotMiddleware from 'webpack-hot-middleware'\n-import webpackHotFullStack from 'webpack-hot-fullstack-middleware'\n+import webpackHotFullStack from 'webpack-get-code-on-done'\nimport WriteFilePlugin from 'write-file-webpack-plugin'\n+import config from './config'\nimport client from './client/webpack.dev.babel'\nimport server from './server/webpack.dev.babel'\n// Webpack plugins\n@@ -17,7 +20,7 @@ const webpackConfig = [client, server]\nconst compiler = webpack(webpackConfig)\n// Apply some commonly used plugins\ncompiler.apply(new FriendlyErrors())\n-compiler.apply(new LogPlugin())\n+compiler.apply(new LogPlugin(config.PORT))\ncompiler.apply(new webpack.NoEmitOnErrorsPlugin())\n// Create devMiddleWare\nconst devMiddleWare = webpackDevMiddleware(compiler, {\n@@ -33,11 +36,10 @@ const devMiddleWare = webpackDevMiddleware(compiler, {\n// Number of middlewares that our app should has\nlet prevSize = null\n/**\n- * @desc Adds dev middlewares + your code to the instance of express server\n- * @param {Function} app - Express dev server to which compiled code will be applied\n- * @param {Function} wss - WebSocket server, allow you send event to client to re-render the page\n+ * @desc Adds dev middlewares + your code to an express server instance\n+ * @param {ExpressServer} app - Express dev server to which compiled code will be applied\n*/\n-export default function (app, wss) {\n+export default function (app) {\n/**\n* @desc Function that executes after your server-side code compiles\n* @param {Function} serverSideCode - compiled server-side code\n@@ -53,10 +55,6 @@ export default function (app, wss) {\n}\n// Apply newly compiled code\nserverSideCode(app)\n- // wss.on('connection', (ws, req) => {\n- // console.log('FIRE', req.url)\n- // ws.send('reload')\n- // })\n}\napp.use(devMiddleWare)\n@@ -68,5 +66,6 @@ export default function (app, wss) {\n}\n)\n)\n- webpackHotFullStack({compiler, done})\n+ const serverCompiler = compiler.compilers.find(compiler => compiler.name === 'server')\n+ webpackHotFullStack(serverCompiler, done)\n}\n",
        "date": "23.08.2017 18:28:45",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor webpack server configuration and update LogPlugin usage"
    },
    {
        "msg": "feat(xhr_wrapper): rewrite xhr_wrapper, add more comments\nrewrite xhr_wrapper, add more comments",
        "diff": "diff --git a/src/common/api/utils/xhr_wrapper.js b/src/common/api/utils/xhr_wrapper.js import {getLocalToken, resetLocalToken} from 'api/LocalStorageCookiesSvc'\n-export default function requestWrapper (method) {\n- return async function (url, data = null, params = {}) {\n- if (method === 'GET') {\n- // It's a GET response\n- // GET doesn't have data\n- params = data\n- data = null\n- } else if (data === Object(data)) {\n- // (data === Object(data)) === _.isObject(data)\n- data = JSON.stringify(data)\n- } else {\n- throw new Error(`XHR invalid, check ${method} on ${url}`)\n+/**\n+ * Create request wrapper for certain method\n+ * @param {String} method - Request method\n+ * @return {Function}\n+ */\n+export default function (method) {\n+ /**\n+ * Creates request to `url` with `data`\n+ * @param {String} url Request URL\n+ * @param {Object} [data= null] Data for Request\n+ * @return {Object} Request response\n+ */\n+ return async (url, data = null) => {\n+ // get decorated url and request params\n+ const {URL, request} = decorateRequest({method, url, data})\n+ // create request!\n+ return fetch(URL, request).then(checkStatus).then(parseJSON).catch(err => {\n+ console.error(err)\n+ return err\n+ })\n}\n-\n+}\n+/**\n+ * Create\n+ * @param {String} method - Request method\n+ * @param {String} url - Request URL\n+ * @param {Object} [data= null] - Data for Request\n+ * @return {Object} - Decorated request params\n+ */\n+function decorateRequest ({method, url, data}) {\n// Default params for fetch = method + (Content-Type)\nconst defaults = {\nmethod,\n@@ -25,41 +41,44 @@ export default function requestWrapper (method) {\n'Content-Type': 'application/json; charset=UTF-8'\n}\n}\n-\n- // Check that req url is relative and request was sent to our domain\n- if (!/(http|https):\\/\\//.test(url)) {\n- console.log(`Request ${url} was sent to our domain`)\nconst token = getLocalToken()\n- if (token) {\n- defaults.headers.Authorization = `JWT ${token}`\n- }\n- url = process.env.BASE_API + url\n- } else {\n- console.log(`Request ${url} was sent to external domain`)\n- // Request was set to an external domain\n- }\n+ const isRequestToExternalResource = /(http|https):\\/\\//.test(url)\n+ const URL = isRequestToExternalResource ? url : process.env.BASE_API + url\n+\n+ const requestAuthDecoration =\n+ !isRequestToExternalResource && token\n+ ? {headers: {Authorization: `JWT ${getLocalToken()}`}}\n+ : {}\n- if (data) {\n- defaults.body = data\n+ const requesDataDecoration = data ? {body: JSON.stringify(data)} : {}\n+ const request = Object.assign(\n+ {},\n+ defaults,\n+ requestAuthDecoration,\n+ requesDataDecoration\n+ )\n+\n+ if (!isRequestToExternalResource) {\n+ console.log(`Request ${url} was sent to our domain`, request)\n+ } else {\n+ console.log(`Request ${url} was sent to external domain`, request)\n}\n- const paramsObj = Object.assign({}, defaults, {headers: params})\n- return fetch(url, paramsObj)\n- .then(checkStatus)\n- .then(parseJSON)\n- .catch(err => {\n- console.error(err)\n- return err\n- })\n+ return {\n+ request,\n+ URL\n}\n}\n-// Checks response status in production env\n+/**\n+ * Checks response status\n+ * @param {Object} response - Response\n+ * @return {Object} - Response\n+ */\nfunction checkStatus (response) {\nconst {status} = response\nif (status >= 200 && status < 300) {\n// Everything is ok\n- return response\n} else if (status >= 300 && status < 400) {\n// 300 Multiple Choices\n// 301 - Moved Permanently,\n@@ -68,7 +87,6 @@ function checkStatus (response) {\n// 307 - Temporary Redirect\n} else if (status === 400) {\n// Probably is a validation error\n- return response\n} else if (status === 403 || status === 401) {\n// 401 - Forbidden\n// 403 - Unauthorized\n@@ -76,19 +94,18 @@ function checkStatus (response) {\nresetLocalToken()\n} else if (status === 404) {\n// Not Found\n- return response\n} else if (status >= 500) {\n// Server error\n- return response\n}\n+ return response\n}\n/**\n- // middlewares\n+ * middlewares\n* 1. parse response\n* 2. add \"ok\" property to result\n* 3. return request result\n- * @param {Object} res - response from server\n+ * @param {Object} res - Response from resource\n* @return {Object} response result with \"ok\" property\n*/\nasync function parseJSON (res) {\n@@ -99,7 +116,7 @@ async function parseJSON (res) {\nreturn {data: {}, ok: false}\n}\n- // Simplest validation ever, ahah :)\n+ // Simplest validation ever\nif (!res.ok) {\nreturn {data: json, ok: false}\n}\n",
        "date": "23.08.2017 18:31:55",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor XHR wrapper function and add request decoration functionality"
    },
    {
        "msg": "feat(.babelrc): add \"flow\" preset\nadd \"flow\" preset",
        "diff": "diff --git a/.babelrc b/.babelrc {\n\"plugins\": [\n- \"lodash\",\n+ [\"lodash\", {\"id\": [\"lodash\", \"semantic-ui-react\"]}],\n[\n\"transform-runtime\",\n{\n\"moduleName\": \"babel-runtime\"\n}\n],\n- \"transform-decorators-legacy\",\n\"syntax-dynamic-import\"\n],\n- \"presets\": [\"es2015\", \"react\", \"stage-0\"],\n+ \"presets\": [\"es2015\", \"react\", \"stage-0\", \"flow\"],\n\"env\": {\n\"production\": {\n\"presets\": [\"react-optimize\"]\n},\n\"development\": {\n- \"plugins\": [\n- \"react-hot-loader/babel\"\n- ]\n+ \"plugins\": [\"react-hot-loader/babel\"]\n},\n\"test\": {\n\"plugins\": [\n",
        "date": "23.08.2017 18:32:53",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Add flow preset and update react-hot-loader plugin in .babelrc"
    },
    {
        "msg": "feat(.eslintrc.json): add flow plugin for eslnit\nadd flow plugin for eslnit",
        "diff": "diff --git a/.eslintrc.json b/.eslintrc.json {\n\"extends\": [\n+ \"plugin:flowtype/recommended\",\n\"plugin:react/recommended\",\n\"plugin:jsx-a11y/recommended\",\n\"standard\"\n],\n\"parser\": \"babel-eslint\",\n- \"plugins\": [\"react\", \"babel\", \"jsx-a11y\"],\n+ \"plugins\": [\"react\", \"babel\", \"jsx-a11y\", \"flowtype\"],\n\"parserOptions\": {\n\"ecmaFeatures\": {\n\"jsx\": true,\n\"i18n\": true,\n\"Raven\": true,\n\"ga\": true\n+ },\n+ \"settings\": {\n+ \"flowtype\": {\n+ \"onlyFilesWithFlowAnnotation\": false\n+ }\n}\n}\n",
        "date": "23.08.2017 18:37:46",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Add Flowtype plugin to ESLint configuration"
    },
    {
        "msg": "feat(src/client): add react-a11y, fix export of main configuration scripts(configureRoot, configureA\nadd react-a11y, fix export of main configuration scripts(configureRoot, configureApp)",
        "diff": "diff --git a/src/client/index.jsx b/src/client/index.jsx // Styles\nimport 'semantic-ui-css/semantic.css'\n-import 'styles/global'\n// Fetch and promise polyfill\nimport 'promise-polyfill'\n-import 'whatwg-fetch'\n+import 'isomorphic-fetch'\n// Application\n-import {render} from 'react-dom'\n-import {configureStore, configureRootComponent} from 'common/index.jsx'\n+import React from 'react'\n+import ReactDOM, {render} from 'react-dom'\n+import {configureApp, configureRootComponent} from 'common/app'\nif (process.env.NODE_ENV === 'production') {\nrequire('common/pwa')\n@@ -29,13 +29,21 @@ if (process.env.NODE_ENV === 'production') {\n*/\n/*eslint-enable */\nwindow.Perf = require('react-addons-perf')\n-}\n-const preloadedState = window.__PRELOADED_STATE__ || {}\n-delete window.__PRELOADED_STATE__\n+ // NOTE: a11y doesnt work with SSR and React throws warnings like:\n+ // \"React attempted to reuse markup in a container but the checksum was invalid\"\n+ // a11y adds \"id\" attribute to the root container (#app) of your app and triggers re-rendering\n+ //\n+ /** {@link https://github.com/reactjs/react-a11y } */\n+ // const a11y = require('react-a11y')\n+ // a11y(React, {ReactDOM})\n+}\n-const store = configureStore(preloadedState)\n-const RootComponent = configureRootComponent({store})\n+const initialState = window.__INITIAL_STATE__ || {}\n+// NOTE: V8 doesn't optimize `delete`\n+// delete window.__INITIAL_STATE__\n+const propsForRoot = configureApp({initialState})\n+const RootComponent = configureRootComponent(propsForRoot)\nrender(RootComponent, document.getElementById('app'))\nif (module.hot) {\n",
        "date": "23.08.2017 18:42:17",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor code to use isomorphic-fetch and update configuration for app initialization. Fix issue with a11y and React warnings. Update initial state handling for improved performance."
    },
    {
        "msg": "feat(containers/Users): use componentDidMount, add flow types\nfeat(containers/Users): use componentDidMount, add flow types",
        "diff": "diff --git a/src/common/containers/Users/index.jsx b/src/common/containers/Users/index.jsx +/**\n+ * @flow\n+ */\nimport React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport PropTypes from 'prop-types'\n@@ -6,16 +9,18 @@ import {Loader} from 'semantic-ui-react'\nimport {GET_USERS} from 'actions/users'\nimport UsersComponent from './components'\n-class Users extends Component {\n- static propTypes = {\n- users: PropTypes.object.isRequired,\n- getUsers: PropTypes.func.isRequired,\n- isUsersLoaded: PropTypes.bool.isRequired,\n- isUsersLoading: PropTypes.bool.isRequired,\n- usersCount: PropTypes.number.isRequired\n- }\n+type DefaultProps = any\n+type Props = {\n+ users: any,\n+ getUsers: () => void,\n+ isUsersLoaded: boolean,\n+ isUsersLoading: boolean,\n+ usersCount: number\n+}\n+type State = any\n- componentWillMount () {\n+class Users extends Component<DefaultProps, Props, State> {\n+ componentDidMount () {\nthis.props.getUsers()\n}\n",
        "date": "23.08.2017 19:12:40",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor Users component to use flow types and update lifecycle method"
    },
    {
        "msg": "feat(components/RoutingWrapper): add flow types",
        "diff": "diff --git a/src/common/components/addons/RoutingWrapper/index.jsx b/src/common/components/addons/RoutingWrapper/index.jsx -import React, {Component} from 'react'\n+/**\n+ * @flow\n+ */\n+import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport {Switch, Redirect} from 'react-router-dom'\n+import type {RouteItem} from 'routing'\nimport LazyLoad from 'components/addons/LazyLoad'\n+type DefaultProps = any\n+type Props = {\n+ routes: RouteItem[],\n+ store: Object\n+}\n+\n/**\n* Returns application routing with protected by AuthCheck func routes\n* @desc This function returns JSX, so we can think about it as \"stateless component\"\n* @param {Function} authCheck checks is user logged in\n*/\n-export default class RoutingWrapper extends Component {\n- static propTypes = {\n- routes: PropTypes.array,\n- store: PropTypes.object\n- }\n-\n+export default class RoutingWrapper extends React.Component<DefaultProps, Props> {\n/**\n* Checks Auth logic. Is user allowed to visit certain path?\n* @param {String} path next path to visit\n* @return {Bool} is user allowed to visit next location?\n* check RouteAuth component.\n*/\n- authCheck (path) {\n+ authCheck (path: string): boolean {\nconst {store} = this.props\nconst {isLoggedIn} = store.getState().me.auth\nconst authPath = '/auth'\n",
        "date": "23.08.2017 19:13:50",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor RoutingWrapper component to use flow types and update PropTypes"
    },
    {
        "msg": "feat(components/RouteAuth): use functional component, add flow types\nfeat(components/RouteAuth): use functional component, add flow types",
        "diff": "diff --git a/src/common/components/addons/RouteAuth/index.jsx b/src/common/components/addons/RouteAuth/index.jsx -import React, {Component} from 'react'\n-import PropTypes from 'prop-types'\n+/**\n+ * @flow\n+ */\n+import * as React from 'react'\nimport {Route, Redirect} from 'react-router-dom'\n/**\n* Component that protects route from unauthorized users.\n*/\n-class RouteAuth extends Component {\n- static propTypes = {\n- canAccess: PropTypes.func,\n- path: PropTypes.string\n- }\n- render () {\n- const {canAccess, path} = this.props\n-\n- console.log(\n- `User has access to \"${path}\" path: ${canAccess(path) ? 'YES' : 'NO'}`\n- )\n-\n- return canAccess(path) ? <Route {...this.props} /> : <Redirect to=\"/auth\" />\n+type Props = {\n+ canAccess: (string) => boolean,\n+ path: string\n}\n+\n+const RouteAuth = (props: Props) => {\n+ const {canAccess, path} = props\n+ return canAccess(path) ? <Route {...props} /> : <Redirect to=\"/auth\" />\n}\nexport default RouteAuth\n",
        "date": "23.08.2017 19:14:26",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor RouteAuth component to use functional component and add flow types"
    },
    {
        "msg": "feat(routing): add RouteItem type\nfeat(routing): add RouteItem type",
        "diff": "diff --git a/src/common/routing/index.jsx b/src/common/routing/index.jsx +/**\n+ * @flow\n+ */\n+import * as React from 'react'\nimport {Route} from 'react-router-dom'\nimport {Users, Dashboard, Login} from 'containers'\nimport RouteAuth from 'components/addons/RouteAuth'\n@@ -18,6 +22,17 @@ const loadLazyComponent = url => {\n}\n}\n+export type RouteItem = {\n+ path: string,\n+ exact?: boolean,\n+ strict?: boolean,\n+ icon?: string,\n+ name?: string,\n+ sidebarVisible?: boolean,\n+ tag?: React.Node,\n+ component?: React.Node\n+}\n+\nexport const routes = [\n{\npath: '/',\n",
        "date": "23.08.2017 19:15:20",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Add flow types and RouteItem type definition in routing index file"
    },
    {
        "msg": "feat(server): add server entry file\nfeat(server): add server entry file",
        "diff": "diff --git a/src/server/index.js b/src/server/index.js -global.i18n = str => str\n-global.fetch = require('node-fetch')\n+/**\n+ * @flow\n+ * @file\n+ */\n+import express from 'express'\n+import chalk from 'chalk'\n+// import serverDecorator from './server'\n+const app: any = express()\n+const PORT: number = process.env.PORT || 3000\n+const serverModulePath =\n+ process.env.NODE_ENV === 'production'\n+ ? './server' // Decorate server with all middlewares/routes for production\n+ : '../../webpack_config/server' // Mount our server-side code to dev server\n-// Import app\n-require('./server')\n+const createServer: Function = require(serverModulePath).default\n+createServer(app)\n+\n+// Start server\n+app.listen(PORT, () => {\n+ console.log(chalk.green(`SERVER IS LISTENING ON ${PORT}`))\n+})\n",
        "date": "23.08.2017 19:21:38",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor server setup and start logic in index.js"
    },
    {
        "msg": "feat(src/server): add `server.js` which mounts middlewares, ssr, api\nfeat(src/server): add `server.js` which returns function that decorate\nserver with global middlewares, ssr, API",
        "diff": "diff --git a/src/server/server.js b/src/server/server.js -import app from './express'\n+/*\n+ * @flow\n+ */\n+import addMiddlewares from './middlewares'\nimport API from './api'\n-import useSSR from './ssr'\n-import chalk from 'chalk'\n+import SSR from './ssr'\n+import fetch from 'isomorphic-fetch'\n-const {BASE_API, PORT} = process.env\n-// Add API route\n-app.use(BASE_API, API)\n-// Add SSR handler\n-app.use(useSSR)\n-// Start server\n-app.listen(PORT, () => {\n- console.log(chalk.magenta(`\\nServer is running on ${PORT} port!\\n`))\n-})\n+global.fetch = fetch\n+\n+/**\n+ * Mount API, SSR and middlewares to app.\n+ * @param {Object} app - Express server instance\n+ * @return {Object} - Decorated server instance\n+ */\n+export default (app: Object): Object => {\n+ // Add global middlewares\n+ addMiddlewares(app)\n+ // Add API\n+ app.use('/api/v1', API)\n+ // Add SSR\n+ app.use(SSR)\n+ return app\n+}\n",
        "date": "23.08.2017 19:25:48",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor server.js to add global middlewares and mount API and SSR handlers."
    },
    {
        "msg": "feat(package.json): install new deps, remove unused\nfeat(package.json): new deps, remove unused\nInstalled: pug, pug-loader, optimize-js-plugin, query-string\nRemoved: decorators-legacy, concurrently, esdoc, glob, flow-runtime",
        "diff": "diff --git a/package.json b/package.json \"offline-plugin\": \"^4.8.3\",\n\"promise-polyfill\": \"6.0.2\",\n\"prop-types\": \"^15.5.10\",\n+ \"query-string\": \"^5.0.0\",\n\"rapscallion\": \"^2.1.13\",\n\"react\": \"^15.6.1\",\n\"react-dom\": \"^15.6.1\",\n\"babel-plugin-lodash\": \"^3.2.11\",\n\"babel-plugin-module-resolver\": \"^2.7.1\",\n\"babel-plugin-syntax-dynamic-import\": \"^6.18.0\",\n- \"babel-plugin-transform-decorators-legacy\": \"^1.3.4\",\n\"babel-plugin-transform-react-jsx\": \"^6.24.1\",\n\"babel-plugin-transform-regenerator\": \"^6.24.1\",\n\"babel-plugin-transform-runtime\": \"^6.23.0\",\n\"circular-dependency-plugin\": \"^3.0.0\",\n\"commitizen\": \"^2.9.6\",\n\"compression-webpack-plugin\": \"^1.0.0\",\n- \"concurrently\": \"^3.5.0\",\n\"css-loader\": \"^0.28.4\",\n\"enzyme\": \"^2.9.1\",\n\"eslint\": \"^4.4.1\",\n\"node-sass\": \"^4.5.3\",\n\"open\": \"0.0.5\",\n\"optimize-css-assets-webpack-plugin\": \"^3.0.0\",\n+ \"optimize-js-plugin\": \"0.0.4\",\n\"postcss\": \"^6.0.9\",\n\"postcss-browser-reporter\": \"^0.5.0\",\n\"postcss-cssnext\": \"^3.0.2\",\n\"postcss-loader\": \"^2.0.6\",\n\"postcss-reporter\": \"^5.0.0\",\n\"preload-webpack-plugin\": \"^1.2.3\",\n+ \"pug\": \"^2.0.0-rc.3\",\n+ \"pug-loader\": \"^2.3.0\",\n\"react-a11y\": \"^0.3.4\",\n\"react-addons-perf\": \"^15.4.2\",\n\"react-addons-test-utils\": \"^15.6.0\",\n},\n\"optionalDependencies\": {\n\"babili-webpack-plugin\": \"^0.1.2\",\n- \"esdoc\": \"^1.0.1\",\n\"purify-css\": \"^1.2.5\",\n\"purifycss-webpack\": \"^0.7.0\",\n\"prepack-webpack-plugin\": \"^1.1.0\",\n\"webpack-shell-plugin\": \"^0.5.0\",\n- \"git-rev-sync\": \"^1.9.1\",\n- \"glob\": \"^7.1.2\",\n- \"flow-runtime\": \"^0.14.0\",\n- \"babel-plugin-flow-runtime\": \"^0.11.1\"\n+ \"git-rev-sync\": \"^1.9.1\"\n},\n\"scripts\": {\n\"build\": \"npm run frontend_build && npm run server_build\",\n\"frontend_build\": \"NODE_ENV=production webpack --config webpack_config/client/webpack.prod.babel.js\",\n\"test\": \"NODE_ENV=test jest --config=jest_config/jest.config.json --coverage --forceExit || true\",\n\"start\": \"node ./dist/server/${APP_LANGUAGE:=en}\",\n- \"precommit\": \"echo \\\"$(tput bold)$(tput setaf 5) It'd be better to run tests before commit. $(tput sgr 0)\\\"t\",\n- \"prepush\": \"echo \\\"$(tput bold)$(tput setaf 5) I hope you tested app. $(tput sgr 0)\\\"\",\n\"lint:styles\": \"stylelint ./src/common/**/*.scss -s scss --config ./.stylelintrc --fix\",\n\"lint:scripts\": \"eslint -c ./.eslintrc.json ./src ./webpack_config --ignore-pattern dist\",\n\"flow\": \"flow\",\n\"cz\": \"git-cz\",\n\"release\": \"standard-version\",\n+ \"precommit\": \"echo \\\"$(tput bold)$(tput setaf 5) It'd be better to run tests before commit. $(tput sgr 0)\\\"t\",\n+ \"prepush\": \"echo \\\"$(tput bold)$(tput setaf 5) I hope you tested app. $(tput sgr 0)\\\"\",\n\"commitmsg\": \"validate-commit-msg\"\n},\n\"engines\": {\n",
        "date": "04.09.2017 15:51:15",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Add query-string, optimize-js-plugin, pug, and pug-loader dependencies, update precommit and prepush scripts."
    },
    {
        "msg": "feat(utils/normalize): add flow\nfeat(utils/normalize): add flow",
        "diff": "diff --git a/src/common/api/utils/normalize.js b/src/common/api/utils/normalize.js +// @flow\nimport {normalize, schema} from 'normalizr'\nimport _ from 'lodash'\n@@ -11,7 +12,7 @@ import _ from 'lodash'\n// XXX: normalization is recommended, but not a must\n// you styill can write a bunch of custom code in your reducers to normalize every reqests\n-export const normalizeArrayOfItems = array => {\n+export const normalizeArrayOfItems = (array: Array<any>) => {\n// Flat array, if it had 2 levels of depth\nconst flatArray = _.flatten(array)\n// Create schema for field, e.g field is `data`\n@@ -22,6 +23,6 @@ export const normalizeArrayOfItems = array => {\nconst normalizedData = normalize(flatArray, dataListSchema)\n// Get `data` entities\nconst entities = normalizedData.entities.data\n- const count = normalizedData.result.length\n+ const count: number = normalizedData.result.length\nreturn {entities, count}\n}\n",
        "date": "04.09.2017 15:52:15",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Add type annotation to count variable in normalizeArrayOfItems function"
    },
    {
        "msg": "feat(reducers): create GlobalState type\nfeat(reducers): create GlobalState type using types of reducers",
        "diff": "diff --git a/src/common/reducers/index.js b/src/common/reducers/index.js +// @flow\nimport {combineReducers} from 'redux'\nimport {routerReducer} from 'react-router-redux'\n+import type {State as AuthState} from 'reducers/auth'\n+import type {State as LayoutState} from 'reducers/layout'\n+import type {State as EntitiesPostsState} from 'reducers/posts'\n+import type {State as EntitiesUsersState} from 'reducers/users'\n+\nimport {layout} from './layout'\nimport {posts} from './posts'\nimport {users} from './users'\n@@ -16,3 +22,7 @@ export default combineReducers({\n}),\nrouting: routerReducer\n})\n+\n+export type GlobalState = {layout: LayoutState} & {me: {auth: AuthState}} & {\n+ entities: {posts: EntitiesPostsState, users: EntitiesUsersState}\n+ }\n",
        "date": "04.09.2017 16:00:28",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Add flow types for global state in reducers index file"
    },
    {
        "msg": "feat(webpack.isomorphic): add i18n folder to aliases\nfeat(webpack.isomorphic): add i18n folder to aliases",
        "diff": "diff --git a/webpack_config/webpack.isomorphic.js b/webpack_config/webpack.isomorphic.js @@ -25,6 +25,7 @@ export default {\n// Aliases that both server and client use\n// Probably, it's a bad example, because here we defined only client's aliases.\nalias: {\n+ i18n: `${srcCommonPath}/i18n/`,\nactions: `${srcCommonPath}/actions/`,\napi: `${srcCommonPath}/api/`,\ncomponents: `${srcCommonPath}/components/`,\n",
        "date": "06.09.2017 12:14:23",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Add i18n alias to webpack configuration"
    },
    {
        "msg": "feat(server/webpack.base): add 'webpack-assets' and 'favicons-assets' to aliases\nfeat(server/webpack.base): add 'webpack-assets' and 'favicons-assets'\nto aliases",
        "diff": "diff --git a/webpack_config/server/webpack.base.js b/webpack_config/server/webpack.base.js @@ -65,7 +65,9 @@ const baseWebpackConfig = {\nextensions: isomorphicWebpackConfig.resolve.extensions,\nmodules: isomorphicWebpackConfig.resolve.modules,\nalias: {\n- ...isomorphicWebpackConfig.resolve.alias\n+ ...isomorphicWebpackConfig.resolve.alias,\n+ 'webpack-assets': `${CLIENT_DIST_PATH}/webpack-assets.json`,\n+ 'favicons-assets': `${CLIENT_DIST_PATH}/favicons-stats.json`\n// create_server: createServerAliasPath\n}\n},\n",
        "date": "06.09.2017 12:14:52",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Add webpack-assets and favicons-assets aliases to base webpack config"
    },
    {
        "msg": "feat(server/ssr): rewrite ssr, add HTML component, use stats instead of hadrcoded html\nfeat(server/ssr): rewrite ssr, add HTML component, use stats instead of\nhadrcoded html",
        "diff": "diff --git a/src/server/ssr/index.js b/src/server/ssr/index.js * @flow\n* @desc\n*/\n-import * as React from 'react'\n+import React, {type Node} from 'react'\nimport fs from 'fs'\nimport {renderToString} from 'react-dom/server'\nimport Helmet from 'react-helmet'\nimport createHistory from 'history/createMemoryHistory'\nimport {ServerStyleSheet, StyleSheetManager} from 'styled-components'\nimport {configureApp, configureRootComponent} from 'common/app'\n-\n-const DLLScripts =\n- process.env.NODE_ENV === 'production'\n- ? ''\n- : `\n- <script src=\"/polyfills.js\"></script>\n- <script src=\"/vendor.js\"></script>\n-`\n-// This function makes server rendering of asset references consistent with different webpack chunk/entry confiugrations\n-function normalizeAssets (assets) {\n- return Array.isArray(assets) ? assets : [assets]\n-}\n+import IndexHTMLComponent from './IndexHTMLComponent'\n+import assets from 'webpack-assets'\n+import faviconsAssets from 'favicons-assets'\nexport default (req: Object, res: Object, next: () => void) => {\n- const stats = fs.readFileSync(\n- `${process.env.CLIENT_DIST_PATH}/stats.json`,\n- 'utf8'\n- )\nconst {isLoggedIn, token} = req.user\nconst initialState: Object = isLoggedIn\n? {me: {auth: {isLoggedIn, token}}}\n@@ -34,74 +21,27 @@ export default (req: Object, res: Object, next: () => void) => {\nconst sheet = new ServerStyleSheet()\nconst location: string = req.url\nconst context = {}\n- const {store, history, routes} = configureApp({initialState})\n- const RootComponent: React.Node = configureRootComponent({\n+ const {store, history, routes} = configureApp(initialState)\n+ const RootComponent: Node = configureRootComponent({\nstore,\nhistory,\nroutes,\nSSR: {location, context}\n})\n- const App: React.Node = (\n+ const App: Node = (\n<StyleSheetManager sheet={sheet.instance}>\n{RootComponent}\n</StyleSheetManager>\n)\nconst css = sheet.getStyleTags()\nconst preloadedState: Object = store.getState()\n- console.log(preloadedState)\n- const app: string = renderToString(App)\n- const {assetsByChunkName}: Object = JSON.parse(stats)\n- const html = getHtml({\n- app,\n+ const props = {\ncss,\n+ assets,\n+ faviconsAssets,\ninitialState: preloadedState,\n- assetsByChunkName\n- })\n- res.send(html)\n+ App\n}\n-\n-/**\n- * Get html\n- * @param {[type]} app [description]\n- * @param {[type]} css [description]\n- * @param {[type]} initialState [description]\n- * @param {[type]} assetsByChunkName [description]\n- * @return {String} [description]\n- */\n-const getHtml = ({app, css, initialState, assetsByChunkName}) => {\n- const stringifiedState: string = JSON.stringify(initialState)\n- const safeStringifiedState: string = stringifiedState.replace(/</g, '\\\\u003c')\n- return `\n- <!doctype html>\n- <html>\n- <head>\n- <meta charset=\"utf-8\">\n- <title>Noir</title>\n- <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n- <meta name=\"description\" content=\"Production-ready, performance-first, template built with React/Redux/React-Semantic-UI\">\n- <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n- <base href=\"/\" />\n- <meta name=\"theme-color\" content=\"<%=htmlWebpackPlugin.options.theme_color%>\"/>\n- <meta name=\"msapplication-tap-highlight\" content=\"no\">\n- <link rel=\"manifest\" href=\"manifest.json\">\n- ${css}\n- ${normalizeAssets(assetsByChunkName.client)\n- .filter(path => path.endsWith('.css'))\n- .map(path => `<link rel=\"stylesheet\" href=\"${path}\" />`)\n- .join('\\n')}\n- </head>\n- <body>\n- <div id=\"app\">${app}</div>\n- <script>window.__INITIAL_STATE__ = ${safeStringifiedState}</script>\n- ${DLLScripts}\n- ${normalizeAssets(assetsByChunkName.client)\n- .filter(path => path.endsWith('.js'))\n- .map(path => `<script src=\"${path}\"></script>`)\n- .join('\\n')}\n- <noscript>\n- You are using outdated browser. You can install modern browser here: <a href=\"http://outdatedbrowser.com/\" >http://outdatedbrowser.com</a>.\n- </noscript>\n- </body>\n- </html>\n- `\n+ const html: string = renderToString(<IndexHTMLComponent {...props} />)\n+ res.send(html)\n}\n",
        "date": "06.09.2017 12:16:46",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor server-side rendering code to improve performance and readability"
    },
    {
        "msg": "feat(client/webpack.base): use favicons and assets plugin in base mode",
        "diff": "diff --git a/webpack_config/client/webpack.base.js b/webpack_config/client/webpack.base.js @@ -3,22 +3,25 @@ import childProcess from 'child_process'\nimport webpack from 'webpack'\nimport config from '../config'\nimport isomorphicWebpackConfig from '../webpack.isomorphic'\n-import {StatsWriterPlugin} from 'webpack-stats-plugin'\n// import ManifestPlugin from 'webpack-manifest-plugin'\n+import AssetsPlugin from 'assets-webpack-plugin'\n+import FaviconsWebpackPlugin from 'favicons-webpack-plugin'\nimport WebpackAssetsManifest from 'webpack-assets-manifest'\n-\nconst {\nGA_ID,\nSENTRY_PUBLIC_DSN,\n+ CLIENT_DIST_PATH,\nNODE_ENV,\nsrcPath,\ndistPath,\npublicPath,\n- isProduction\n+ isProduction,\n+ title,\n+ manifest\n} = config\nconst exec = childProcess.execSync\n-exec(`rm -rf ${config.distPath}/client`)\n+exec(`rm -rf ${CLIENT_DIST_PATH}`)\nconst definePluginArgs = {\n'process.env.GA_ID': JSON.stringify(GA_ID),\n@@ -40,7 +43,7 @@ const baseBuild = {\noutput: {\nfilename,\npublicPath,\n- path: path.join(distPath, './client'),\n+ path: CLIENT_DIST_PATH,\nchunkFilename: '[name].[chunkhash:6].js',\ncrossOriginLoading: 'anonymous'\n},\n@@ -95,10 +98,42 @@ const baseBuild = {\n},\nplugins: isomorphicWebpackConfig.plugins.concat([\nnew webpack.DefinePlugin(definePluginArgs),\n- new StatsWriterPlugin({\n- filename: 'stats.json' // Default\n+ new AssetsPlugin({\n+ path: CLIENT_DIST_PATH\n+ }),\n+ // NOTE: this plugin is good, but there are few big issues:\n+ // 1. It sets invalid url to browserconfig.xml and manifest.json in index.html.\n+ // E.g: in generated index.html you can see:\n+ // <meta name=\"msapplication-config\" content=\"browserconfig.xml\">\n+ // 2. It looks like generated images aren't minified.(not sure)\n+ // NOTE: It would be better to generate favicons without this plugin.\n+ new FaviconsWebpackPlugin({\n+ // add theme-color property\n+ background: manifest.theme,\n+ prefix: `favicons/`,\n+ logo: path.resolve(config.rootPath, './static/images/logo.png'),\n+ title,\n+ emitStats: true,\n+ statsFilename: 'favicons-stats.json',\n+ // Inject the html into the html-webpack-plugin\n+ inject: false,\n+ // which icons should be generated (see https://github.com/haydenbleasel/favicons#usage)\n+ icons: {\n+ android: true,\n+ appleIcon: true,\n+ appleStartup: true,\n+ coast: false,\n+ favicons: true,\n+ firefox: true,\n+ opengraph: false,\n+ twitter: true,\n+ yandex: false,\n+ windows: true\n+ }\n}),\n- new WebpackAssetsManifest({writeToDisk: true})\n+ new WebpackAssetsManifest({\n+ assets: config.manifest\n+ })\n]),\ntarget: 'web'\n}\n",
        "date": "06.09.2017 12:17:53",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Add AssetsPlugin and FaviconsWebpackPlugin, update path configurations"
    },
    {
        "msg": "feat(client/prod): remove favicons/preload/babili/sri/html plugins\nfeat(client/prod): remove favicons/preload/babili/sri/html plugins",
        "diff": "diff --git a/webpack_config/client/webpack.prod.babel.js b/webpack_config/client/webpack.prod.babel.js import webpack from 'webpack'\nimport ExtractTextPlugin from 'extract-text-webpack-plugin'\n-import HtmlWebpackPlugin from 'html-webpack-plugin'\n-import SriPlugin from 'webpack-subresource-integrity'\nimport CompressionPlugin from 'compression-webpack-plugin'\nimport OptimizeCssAssetsPlugin from 'optimize-css-assets-webpack-plugin'\n-// import BabiliPlugin = require('babili-webpack-plugin'\nimport AutoDllPlugin from 'autodll-webpack-plugin'\nimport ProgressPlugin from 'webpack/lib/ProgressPlugin'\nimport OfflinePlugin from 'offline-plugin'\n-import PreloadWebpackPlugin from 'preload-webpack-plugin'\n-import FaviconsWebpackPlugin from 'favicons-webpack-plugin'\nimport UglifyJSPlugin from 'uglifyjs-webpack-plugin'\nimport {Plugin as ShakePlugin} from 'webpack-common-shake'\nimport OptimizeJsPlugin from 'optimize-js-plugin'\n@@ -21,15 +16,13 @@ import path from 'path'\nimport {BundleAnalyzerPlugin} from 'webpack-bundle-analyzer'\nimport base from './webpack.base'\nimport config from '../config'\n-//\n-const {ANALYZE_BUNDLE} = config\n// NOTE: you can track versions with gitHash and store your build\n// in dist folder with path like: /dist/client/<gitHash>/{yourFilesHere}\n// const gitHash = git.short()\n// Do you want to use bundle analyzer?\n-if (ANALYZE_BUNDLE) {\n+if (config.ANALYZE_BUNDLE) {\nbase.plugins.push(new BundleAnalyzerPlugin({analyzerMode: 'static'}))\n}\n@@ -118,48 +111,6 @@ base.plugins.push(\nnew webpack.optimize.CommonsChunkPlugin({\nname: 'manifest'\n}),\n- // NOTE: this plugin is good, but there are few big issues:\n- // 1. It sets invalid url to browserconfig.xml and manifest.json in index.html.\n- // E.g: in generated index.html you can see:\n- // <meta name=\"msapplication-config\" content=\"browserconfig.xml\">\n- // 2. It looks like generated images aren't minified.(not sure)\n- // 3. plugin is deprecated (at least look like it's deprecated)!\n- // NOTE: It would be better to generate favicons without this plugin.\n- new FaviconsWebpackPlugin({\n- // add theme-color property\n- background: config.manifest.theme,\n- prefix: `favicons/`,\n- logo: path.resolve(config.rootPath, './static/images/logo.png'),\n- title: config.title,\n- // Inject the html into the html-webpack-plugin\n- inject: false,\n- // which icons should be generated (see https://github.com/haydenbleasel/favicons#usage)\n- icons: {\n- android: true,\n- appleIcon: true,\n- appleStartup: true,\n- coast: false,\n- favicons: true,\n- firefox: true,\n- opengraph: false,\n- twitter: true,\n- yandex: false,\n- windows: true\n- }\n- }),\n- //\n- // generate <link rel=\"preload\"> tags for async chunks\n- new PreloadWebpackPlugin({\n- rel: 'preload',\n- as: 'script',\n- include: 'asyncChunks'\n- }),\n- // https://caniuse.com/#feat=subresource-integrity\n- // NOTE: please, read about SRI before using it!\n- new SriPlugin({\n- hashFuncNames: ['sha256', 'sha384'],\n- enabled: true\n- }),\nnew CompressionPlugin({\nalgorithm: 'gzip'\n}),\n",
        "date": "06.09.2017 12:18:19",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Remove deprecated plugins and optimize webpack configuration"
    },
    {
        "msg": "feat(parts/Root): add getWindowInnerWidth, RouteItem type\nfeat(parts/Root): add getWindowInnerWidth, RouteItem type\nadd i18nextProvider (commented)",
        "diff": "diff --git a/src/common/components/parts/Root/index.jsx b/src/common/components/parts/Root/index.jsx +// @flow\nimport React, {Component} from 'react'\n-import PropTypes from 'prop-types'\nimport {Provider} from 'react-redux'\n-import {APPLICATION_INIT} from 'actions'\n+// import {I18nextProvider} from 'react-i18next' // as we build ourself via webpack\n+import {APPLICATION_INIT} from 'actions/common'\nimport {ThemeProvider} from 'styled-components'\nimport theme from 'styles/theme'\nimport App from 'containers/App'\nimport RoutingWrapper from 'components/addons/RoutingWrapper'\n+import {getWindowInnerWidth} from 'const'\n+import type {RouteItem} from 'types'\n-const Router =\n- process.env.BROWSER === true\n+const Router = process.env.BROWSER\n? require('react-router-redux').ConnectedRouter\n: require('react-router').StaticRouter\n-export default class Root extends Component {\n- static propTypes = {\n- store: PropTypes.object,\n- SSR: PropTypes.object,\n- history: PropTypes.object,\n- routes: PropTypes.array\n+type Props = {\n+ store: Object,\n+ SSR: {\n+ location?: Object,\n+ context?: Object\n+ },\n+ history: any,\n+ routes: Array<RouteItem>\n}\n+export default class Root extends Component {\n+ props: Props\n+\nstatic defaultProps = {\nSSR: {}\n}\ncomponentWillMount () {\nconst {store} = this.props\n- store.dispatch({type: APPLICATION_INIT})\n+ const innerWidth: number = getWindowInnerWidth(window)\n+ store.dispatch({type: APPLICATION_INIT, payload: {innerWidth}})\n}\nrender () {\n@@ -37,6 +45,7 @@ export default class Root extends Component {\n: {location: SSR.location, context: SSR.context}\n// key={Math.random()} = hack for HMR from https://github.com/webpack/webpack-dev-server/issues/395\nreturn (\n+ // <I18nextProvider i18n={{}}>\n<Provider store={store} key={Math.random()}>\n<ThemeProvider theme={theme}>\n<Router {...routerProps} key={Math.random()}>\n@@ -46,6 +55,7 @@ export default class Root extends Component {\n</Router>\n</ThemeProvider>\n</Provider>\n+ // </I18nextProvider>\n)\n}\n}\n",
        "date": "06.09.2017 12:19:13",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor Root component to include innerWidth in APPLICATION_INIT payload and update dependencies."
    },
    {
        "msg": "feat(parts/Root): add IntlProvider\nfeat(parts/Root): add IntlProvider",
        "diff": "diff --git a/src/common/components/parts/Root/index.jsx b/src/common/components/parts/Root/index.jsx // @flow\nimport React, {Component} from 'react'\nimport {Provider} from 'react-redux'\n-// import {I18nextProvider} from 'react-i18next' // as we build ourself via webpack\n+import {IntlProvider} from 'react-intl' // as we build ourself via webpack\nimport {APPLICATION_INIT} from 'actions/common'\nimport {ThemeProvider} from 'styled-components'\nimport theme from 'styles/theme'\n@@ -39,13 +39,13 @@ export default class Root extends Component {\nrender () {\nconst {SSR, store, history, routes} = this.props\n- const routerProps =\n- process.env.BROWSER === true\n+ const routerProps = process.env.BROWSER\n? {history}\n: {location: SSR.location, context: SSR.context}\n// key={Math.random()} = hack for HMR from https://github.com/webpack/webpack-dev-server/issues/395\n+\nreturn (\n- // <I18nextProvider i18n={{}}>\n+ <IntlProvider locale=\"en-US\" messages={{}}>\n<Provider store={store} key={Math.random()}>\n<ThemeProvider theme={theme}>\n<Router {...routerProps} key={Math.random()}>\n@@ -55,7 +55,7 @@ export default class Root extends Component {\n</Router>\n</ThemeProvider>\n</Provider>\n- // </I18nextProvider>\n+ </IntlProvider>\n)\n}\n}\n",
        "date": "09.09.2017 18:02:12",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Replace react-i18next with react-intl in Root component"
    },
    {
        "msg": "feat(Header): add FormattedMessage\nfeat(Header): add FormattedMessage",
        "diff": "diff --git a/src/common/components/parts/Header/index.jsx b/src/common/components/parts/Header/index.jsx import React from 'react'\nimport PropTypes from 'prop-types'\nimport {Icon, Popup} from 'semantic-ui-react'\n+import {FormattedMessage, FormattedDate} from 'react-intl'\n+\nimport {isEqual} from 'lodash'\nimport {\nStyledHeader,\n@@ -56,7 +58,16 @@ class Header extends React.Component {\n<Icon name=\"github\" size=\"large\" link fitted />\n</HeaderButton>\n}\n- content={`RSUIS on @Github`}\n+ content={\n+ <FormattedMessage\n+ id=\"Header.Popup.HeaderButton\"\n+ defaultMessage={`Hello {name}, today is {today, date}`}\n+ values={{\n+ name: <b>user</b>,\n+ today: Date.now()\n+ }}\n+ />\n+ }\ninverted\n/>\n</HeaderInner>\n",
        "date": "09.09.2017 18:02:34",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Add react-intl for internationalization in Header component"
    },
    {
        "msg": "feat(ssr): add translations for ssr\nfeat(ssr): add translations for ssr",
        "diff": "diff --git a/src/server/ssr/index.js b/src/server/ssr/index.js * @flow\n* @desc\n*/\n-import React, {type Node} from 'react'\n-import fs from 'fs'\n+import React from 'react'\n+import {readFileSync} from 'fs'\n+import path from 'path'\n+import {sync as globSync} from 'glob'\nimport {renderToString} from 'react-dom/server'\nimport Helmet from 'react-helmet'\nimport createHistory from 'history/createMemoryHistory'\nimport {ServerStyleSheet, StyleSheetManager} from 'styled-components'\n-import {configureApp, configureRootComponent} from 'common/app'\n+import {configureRootComponent, configureApp} from 'common/app'\nimport IndexHTMLComponent from './IndexHTMLComponent'\n+import type {Node} from 'react'\nimport assets from 'webpack-assets'\nimport faviconsAssets from 'favicons-assets'\n+const translations = globSync('locals/*.json')\n+ .map(filename => [\n+ path.basename(filename, '.json'),\n+ readFileSync(filename, 'utf8')\n+ ])\n+ .map(([locale, file]) => [locale, JSON.parse(file)])\n+ .reduce((collection, [locale, messages]) => {\n+ collection[locale] = messages\n+ return collection\n+ }, {})\nexport default (req: Object, res: Object, next: () => void) => {\nconst {isLoggedIn, token} = req.user\nconst initialState: Object = isLoggedIn\n@@ -28,12 +41,12 @@ export default (req: Object, res: Object, next: () => void) => {\nroutes,\nSSR: {location, context}\n})\n- const App: Node = (\n+ const App: string = renderToString(\n<StyleSheetManager sheet={sheet.instance}>\n{RootComponent}\n</StyleSheetManager>\n)\n- const css = sheet.getStyleTags()\n+ const css: string = sheet.getStyleTags()\nconst preloadedState: Object = store.getState()\nconst props = {\ncss,\n@@ -42,6 +55,6 @@ export default (req: Object, res: Object, next: () => void) => {\ninitialState: preloadedState,\nApp\n}\n- const html: string = renderToString(<IndexHTMLComponent {...props} />)\n+ const html: string = IndexHTMLComponent(props)\nres.send(html)\n}\n",
        "date": "09.09.2017 18:06:03",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor SSR server code to improve performance and readability"
    },
    {
        "msg": "feat(.babelrc): add styles and images alias in test env\nfeat(.babelrc): add styles and images alias in test env",
        "diff": "diff --git a/.babelrc b/.babelrc \"components\": \"./src/common/components\",\n\"containers\": \"./src/common/containers\",\n\"reducers\": \"./src/common/reducers\",\n- \"routing\": \"./src/common/routing\"\n+ \"routing\": \"./src/common/routing\",\n+ \"styles\": \"./src/common/styles\",\n+ \"images\": \"./static/images\"\n},\n\"extensions\": [\".js\", \".jsx\", \".json\"]\n}\n",
        "date": "09.09.2017 20:37:34",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Add styles and images directories to babelrc配置"
    },
    {
        "msg": "feat(webpack_config/server): add locals dir to alias\nfeat(webpack_config/server): add locals dir to alias",
        "diff": "diff --git a/webpack_config/server/webpack.base.js b/webpack_config/server/webpack.base.js @@ -34,10 +34,10 @@ const entry = isProduction\nlet nodeModules = {}\nfs\n.readdirSync('node_modules')\n- .filter(function (x) {\n+ .filter(x => {\nreturn ['.bin'].indexOf(x) === -1\n})\n- .forEach(function (mod) {\n+ .forEach(mod => {\nnodeModules[mod] = 'commonjs ' + mod\n})\n@@ -67,8 +67,8 @@ const baseWebpackConfig = {\nalias: {\n...isomorphicWebpackConfig.resolve.alias,\n'webpack-assets': `${CLIENT_DIST_PATH}/webpack-assets.json`,\n- 'favicons-assets': `${CLIENT_DIST_PATH}/favicons-stats.json`\n- // create_server: createServerAliasPath\n+ 'favicons-assets': `${CLIENT_DIST_PATH}/favicons-stats.json`,\n+ locals: `${config.rootPath}/locals`\n}\n},\nmodule: {\n",
        "date": "09.09.2017 23:56:47",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor webpack configuration and add 'locals' alias path."
    },
    {
        "msg": "feat(jest_config): add mocks and disable coverage of styles\nfeat(jest_config): add mocks and disable coverage of styles",
        "diff": "diff --git a/jest_config/jest.config.json b/jest_config/jest.config.json \"rootDir\": \"../\",\n\"setupFiles\": [\"<rootDir>/jest_config/setupJest.js\"],\n\"automock\": false,\n- \"moduleNameMapper\": {}\n+ \"moduleNameMapper\": {\n+ \"\\\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$\": \"<rootDir>/jest_config/__mocks__/fileMock.js\",\n+ \"\\\\.(css|less)$\": \"<rootDir>/jest_config/__mocks__/styleMock.js\"\n+ },\n+ \"coveragePathIgnorePatterns\": [\"style.jsx\", \"/styles\"]\n}\n",
        "date": "10.09.2017 00:12:29",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Add module name mappers and coverage path ignore patterns to jest config"
    },
    {
        "msg": "feat(Header): add basic test\nfeat(Header): add basic test",
        "diff": "diff --git a/src/common/components/parts/Header/index.test.jsx b/src/common/components/parts/Header/index.test.jsx +import React from 'react'\n+import Header from 'components/parts/Header'\n+import {shallow} from 'enzyme'\n+import toJson from 'enzyme-to-json'\n+\n+const props = {\n+ title: 'Dashboard',\n+ toggleSidebar: () => ({}),\n+ isLoggedIn: true,\n+ isMobile: false\n+}\n+\n+describe('Header component', () => {\n+ it('same snapshot at Dashboard on non-mobile screen', () => {\n+ const component = shallow(<Header {...props} />)\n+ expect(toJson(component)).toMatchSnapshot()\n+ })\n+})\n",
        "date": "10.09.2017 13:54:58",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Add test for Header component snapshot with props"
    },
    {
        "msg": "feat(Footer): add basic test\nfeat(Footer): add basic test",
        "diff": "diff --git a/src/common/components/parts/Footer/index.test.jsx b/src/common/components/parts/Footer/index.test.jsx +import React from 'react'\n+import Footer from 'components/parts/Footer'\n+import {shallow} from 'enzyme'\n+import toJson from 'enzyme-to-json'\n+\n+describe('Footer component', () => {\n+ it('same snapshot', () => {\n+ const component = shallow(<Footer />)\n+ expect(toJson(component)).toMatchSnapshot()\n+ })\n+})\n",
        "date": "10.09.2017 13:55:08",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Add unit test for Footer component"
    },
    {
        "msg": "feat(Sidebar): add basic test\nfeat(Sidebar): add basic test",
        "diff": "diff --git a/src/common/components/parts/Sidebar/index.test.jsx b/src/common/components/parts/Sidebar/index.test.jsx +import React from 'react'\n+import Sidebar from 'components/parts/Sidebar'\n+import {shallow} from 'enzyme'\n+import toJson from 'enzyme-to-json'\n+import {routes as routing} from 'routing'\n+\n+const props = {\n+ isMobile: true,\n+ logout: () => ({}),\n+ routing,\n+ open: true\n+}\n+\n+describe('Sidebar component', () => {\n+ it('same snapshot if Sidebar is open and it is on mobile screen', () => {\n+ const component = shallow(<Sidebar {...props} />)\n+ expect(toJson(component)).toMatchSnapshot()\n+ })\n+})\n",
        "date": "10.09.2017 13:58:29",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Add test for Sidebar component snapshot with open state on mobile screen"
    },
    {
        "msg": "feat(routing): make all containers lazy, simplify code\nfeat(routing): make all containers lazy, simplify code",
        "diff": "diff --git a/src/common/routing/index.jsx b/src/common/routing/index.jsx */\nimport React from 'react'\nimport {Route} from 'react-router-dom'\n-import Dashboard from 'containers/Dashboard'\n-import Login from 'containers/Login'\n-import Users from 'containers/Users'\n-\nimport RouteAuth from 'components/addons/RouteAuth'\nimport {createBrowserHistory, createMemoryHistory} from 'history'\nimport type {RouteItem} from 'types'\n+const getHistory = () => {\n+ if (process.env.BROWSER) {\n+ return createMemoryHistory()\n+ }\n+ return createBrowserHistory()\n+}\n+\nexport const history = getHistory()\n-const loadLazyComponent = (url: string) => {\n- return async (cb: Function) => {\n+const loadLazyComponent = (url: string) => async () => {\n// NOTE: there isn't any duplication here\n// Read Webpack docs about code-splitting for more info.\nif (process.env.BROWSER) {\n@@ -24,26 +26,27 @@ const loadLazyComponent = (url: string) => {\nconst loadComponent = await import(/* webpackMode: \"eager\", webpackChunkName: \"lazy-containers\" */ `containers/${url}/index.jsx`)\nreturn loadComponent\n}\n-}\nexport const routes: Array<RouteItem> = [\n{\npath: '/',\nexact: true,\n+ lazy: true,\nicon: 'newspaper',\nname: 'Dashboard',\nsidebarVisible: true,\ntag: RouteAuth,\n- component: Dashboard\n+ component: loadLazyComponent('Dashboard')\n},\n{\npath: '/users',\nname: 'Users',\nexact: true,\n+ lazy: true,\nicon: 'users',\nsidebarVisible: true,\ntag: RouteAuth,\n- component: Users\n+ component: loadLazyComponent('Users')\n},\n{\nexternal: true,\n@@ -55,8 +58,9 @@ export const routes: Array<RouteItem> = [\n{\npath: '/auth',\nname: 'Auth',\n+ lazy: true,\ntag: Route,\n- component: Login\n+ component: loadLazyComponent('Login')\n},\n{\npath: '/users/:id',\n@@ -67,11 +71,3 @@ export const routes: Array<RouteItem> = [\ncomponent: loadLazyComponent('UserItem')\n}\n]\n-\n-function getHistory () {\n- const basename = ''\n- if (process.env.BROWSER !== true) {\n- return createMemoryHistory()\n- }\n- return createBrowserHistory({basename})\n-}\n",
        "date": "10.09.2017 14:34:54",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor routing to implement lazy loading of components"
    },
    {
        "msg": "feat(actions/posts): add userId as param to GET_POSTS",
        "diff": "diff --git a/src/common/actions/posts/index.js b/src/common/actions/posts/index.js @@ -23,9 +23,9 @@ export type GET_POSTS_FAIL_TYPE = {\n}\n}\n-export const GET_POSTS = () => async dispatch => {\n+export const GET_POSTS = (userId: number) => async dispatch => {\ndispatch({type: GET_POSTS_PENDING})\n- const result = await getPostsAPI()\n+ const result = await getPostsAPI(userId)\nif (resultOK(result)) {\ndispatch({type: GET_POSTS_SUCCESS, payload: result.data})\n} else {\n",
        "date": "10.09.2017 17:22:01",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Add userId parameter to GET_POSTS action and pass it to getPostsAPI"
    },
    {
        "msg": "feat(addons/RouteAuth): add tests for RouteAuth\nfeat(addons/RouteAuth): add tests for RouteAuth",
        "diff": "diff --git a/src/common/components/addons/RouteAuth/index.test.jsx b/src/common/components/addons/RouteAuth/index.test.jsx @@ -2,14 +2,8 @@ import React from 'react'\nimport RouteAuth from 'components/addons/RouteAuth'\nimport {shallow} from 'enzyme'\nimport toJson from 'enzyme-to-json'\n+import {routes as routing} from 'routing'\n-const props = {\n- path: '/',\n- canAccess: () => ({})\n-}\n-\n-const notInboxPath = '/auth'\n-const inboxPath = '/inbox'\nconst accessToInboxOnly = path => {\nreturn path === '/inbox'\n}\n@@ -17,17 +11,27 @@ const accessExceptInbox = path => {\nreturn path !== '/inbox'\n}\n-describe('RouteAuth component', () => {\n- it('creates <Redirect /> if user dont have access', done => {\n-\n- })\n+const sampleRouteItem = routing.filter(a => a.component && a.tag)[0]\n- it('creates component if user have access', done => {\n-\n- })\n- const gotRedirect = {\n- path: inboxPath,\n- canAccess: accessExceptInbox\n- }\n- const component = shallow(<RouteAuth {...gotRedirect} />)\n+describe('RouteAuth component', () => {\n+ // it('creates <Redirect /> if user dont have access', done => {\n+ // const gotRedirect = {\n+ // ...sampleRouteItem,\n+ // canAccess: accessExceptInbox,\n+ // path: '/inbox'\n+ // }\n+ // const component = shallow(<RouteAuth {...gotRedirect} />)\n+ // done()\n+ // })\n+ //\n+ // it('creates component if user have access', done => {\n+ // const gotComponent = {\n+ // ...sampleRouteItem,\n+ // canAccess: accessToInboxOnly,\n+ // path: '/inbox'\n+ // }\n+ // const component = shallow(<RouteAuth {...gotComponent} />)\n+ // console.log(component)\n+ // done()\n+ // })\n})\n",
        "date": "10.09.2017 17:22:56",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor RouteAuth component tests and update routing logic"
    },
    {
        "msg": "feat(ssr): add translation from server in SSR\nfeat(ssr): add translation from server in SSR",
        "diff": "diff --git a/src/server/ssr/IndexHTMLComponent.jsx b/src/server/ssr/IndexHTMLComponent.jsx @@ -4,7 +4,8 @@ type args = {\nApp: string,\ninitialState: Object,\nassets: Object,\n- faviconsAssets: Object\n+ faviconsAssets: Object,\n+ translation: Object\n}\n// renderToString\nconst DLLScripts =\n@@ -20,16 +21,18 @@ const IndexHTMLComponent = ({\nApp,\ninitialState,\nassets,\n- faviconsAssets\n+ faviconsAssets,\n+ translation\n}: args) => {\nconst stringifiedState: string = JSON.stringify(initialState)\n+ const stringifiedTranslation: string = JSON.stringify(translation)\nconst safeStringifiedState: string = stringifiedState.replace(/</g, '\\\\u003c')\nconst createBody = () => {\nconst html = `\n<div id=\"app\">${App}</div>\n<script>window.__INITIAL_STATE__ = ${safeStringifiedState}</script>\n- <script>window.__I18N__ = ${safeStringifiedState}</script>\n+ <script>window.__I18N__ = ${stringifiedTranslation}</script>\n${DLLScripts}\n${Object.keys(assets)\n.filter(bundleName => assets[bundleName].js)\n",
        "date": "10.09.2017 17:27:25",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Add translation object to IndexHTMLComponent props"
    },
    {
        "msg": "feat(server/middlewares/auth): add default language\nfeat(server/middlewares/auth): add default language for req.user",
        "diff": "diff --git a/src/server/middlewares/auth.js b/src/server/middlewares/auth.js @@ -14,6 +14,7 @@ import {JWT_TOKEN} from 'common/api/LocalStorageCookiesSvc'\nexport default (req: Object, res: Object, next: () => void) => {\nreq.user = {\ntoken: null,\n+ lang: 'en',\nisLoggedIn: false\n}\n",
        "date": "10.09.2017 17:33:32",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Add language field to user object in auth middleware"
    },
    {
        "msg": "feat(server/ssr): add translation in SSR\nfeat(server/ssr): add translation in SSR",
        "diff": "diff --git a/src/server/ssr/index.js b/src/server/ssr/index.js @@ -26,8 +26,9 @@ const translations = globSync('locals/*.json')\ncollection[locale] = messages\nreturn collection\n}, {})\n+\nexport default (req: Object, res: Object, next: () => void) => {\n- const {isLoggedIn, token} = req.user\n+ const {isLoggedIn, token, lang} = req.user\nconst initialState: Object = isLoggedIn\n? {me: {auth: {isLoggedIn, token}}}\n: {}\n@@ -53,6 +54,7 @@ export default (req: Object, res: Object, next: () => void) => {\nassets,\nfaviconsAssets,\ninitialState: preloadedState,\n+ translation: translations[lang],\nApp\n}\nconst html: string = IndexHTMLComponent(props)\n",
        "date": "10.09.2017 18:47:27",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Add language translation support for SSR endpoint"
    },
    {
        "msg": "feat(Sidebar): use SidebarLogo based on Logo component\nfeat(Sidebar): use SidebarLogo based on Logo component",
        "diff": "diff --git a/src/common/components/parts/Sidebar/index.jsx b/src/common/components/parts/Sidebar/index.jsx import React, {Component} from 'react'\nimport {Menu, Icon} from 'semantic-ui-react'\nimport {NavLink} from 'react-router-dom'\n+import Logo from 'components/elements/Logo'\nimport {\nStyledSidebar,\nSidebarLogo,\n@@ -10,9 +11,7 @@ import {\nSidebarLogoutItem\n} from './style'\nimport {Spacer} from 'styles/base'\n-\nimport type {RouteItem} from 'types'\n-// require('./index.scss')\ntype Props = {\nopen: boolean,\n@@ -71,12 +70,11 @@ export default class SidebarComponent extends Component {\n// ? require('images/logo.png')\n// : require('images/logo.png').preSrc\n//\n- const logoImg = require('images/logo.png')\nreturn (\n<StyledSidebar {...sidebarProps}>\n<SidebarLogoContainer href=\"https://github.com/Metnew/react-semantic.ui-starter\">\n- <SidebarLogo src={logoImg} alt=\"logo\" shape=\"circular\" centered />\n+ <SidebarLogo alt=\"logo\" shape=\"circular\" centered />\n</SidebarLogoContainer>\n{routes}\n<Spacer />\n",
        "date": "10.09.2017 18:49:29",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor Sidebar component to use Logo component instead of directly importing logo image"
    },
    {
        "msg": "feat(server/api/auth): get lang from req, add lang to jwt\nfeat(server/api/auth): get lang from req, add lang to jwt",
        "diff": "diff --git a/src/server/api/auth/index.js b/src/server/api/auth/index.js @@ -7,8 +7,8 @@ const router = Router()\n// Define the home page route\nrouter.post('/', (req, res) => {\n- // Const {username, password} = req.body\n- const data = {username: 'cool_username_for_testing'}\n+ const lang = req.body.lang || 'en'\n+ const data = {username: 'cool_username_for_testing', lang}\njwt.sign(data, process.env.JWT_SECRET, {expiresIn: '7d'}, (err, token) => {\nif (err) {\nthrow new Error(\n",
        "date": "10.09.2017 18:50:26",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Add language support to auth endpoint"
    },
    {
        "msg": "feat(webpack_config/server): add ssl alias",
        "diff": "diff --git a/webpack_config/server/webpack.base.js b/webpack_config/server/webpack.base.js @@ -41,12 +41,6 @@ fs\nnodeModules[mod] = 'commonjs ' + mod\n})\n-// const createServerAlias = !isProduction\n-// ? '../../webpack_config/server'\n-// : './server'\n-//\n-// const createServerAliasPath = path.join(config.srcPath, './server', createServerAlias)\n-\nconst baseWebpackConfig = {\nname: 'server',\nentry,\n@@ -68,7 +62,8 @@ const baseWebpackConfig = {\n...isomorphicWebpackConfig.resolve.alias,\n'webpack-assets': `${CLIENT_DIST_PATH}/webpack-assets.json`,\n'favicons-assets': `${CLIENT_DIST_PATH}/favicons-stats.json`,\n- locals: `${config.rootPath}/locals`\n+ locals: `${config.rootPath}/locals`,\n+ ssl: `${config.srcPath}/server/config/ssl`\n}\n},\nmodule: {\n",
        "date": "11.09.2017 14:30:23",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor webpack base config to include SSL configuration path"
    },
    {
        "msg": "feat(indexHTMLComponent): add i18n stuff\nfeat(indexHTMLComponent): add i18n stuff",
        "diff": "diff --git a/src/server/ssr/IndexHTMLComponent.jsx b/src/server/ssr/IndexHTMLComponent.jsx @@ -5,7 +5,7 @@ type args = {\ninitialState: Object,\nassets: Object,\nfaviconsAssets: Object,\n- translation: Object\n+ i18n: Object\n}\n// renderToString\nconst DLLScripts =\n@@ -22,22 +22,21 @@ const IndexHTMLComponent = ({\ninitialState,\nassets,\nfaviconsAssets,\n- translation\n+ i18n\n}: args) => {\nconst stringifiedState: string = JSON.stringify(initialState)\n- const stringifiedTranslation: string = JSON.stringify(translation)\n+ const stringifiedI18N: string = JSON.stringify(i18n)\nconst safeStringifiedState: string = stringifiedState.replace(/</g, '\\\\u003c')\nconst createBody = () => {\nconst html = `\n<div id=\"app\">${App}</div>\n<script>window.__INITIAL_STATE__ = ${safeStringifiedState}</script>\n- <script>window.__I18N__ = ${stringifiedTranslation}</script>\n+ <script>window.__I18N__ = ${stringifiedI18N}</script>\n${DLLScripts}\n${Object.keys(assets)\n.filter(bundleName => assets[bundleName].js)\n.map(bundleName => {\n- console.log(bundleName)\nconst path = assets[bundleName].js\nreturn `<script src=\"${path}\" type=\"text/javascript\"></script>`\n})\n@@ -74,7 +73,7 @@ const IndexHTMLComponent = ({\nreturn html\n}\n- return `<html lang=\"en\">\n+ return `<html lang=\"${i18n.lang}\">\n<head>${createHead()}<head>\n<body>\n${createBody()}\n",
        "date": "12.09.2017 00:51:31",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor translation to i18n in IndexHTMLComponent"
    },
    {
        "msg": "feat(Login): use navigator language as lang in auth request\nfeat(Login): use navigator language as lang in auth request",
        "diff": "diff --git a/src/common/containers/Login/index.jsx b/src/common/containers/Login/index.jsx @@ -25,7 +25,9 @@ function mapStateToProps (state: GlobalState) {\nconst mapDispatchToProps = dispatch => ({\nlogin (data) {\n- dispatch(LOGIN_AUTH(data))\n+ const language = navigator && navigator.language\n+ const payload = {...data, lang: language}\n+ dispatch(LOGIN_AUTH(payload))\n}\n})\n",
        "date": "12.09.2017 00:53:10",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Add language detection to login payload"
    },
    {
        "msg": "feat(configure_root): add i18n as props for Root\nfeat(configure_root): add i18n as props for Root",
        "diff": "diff --git a/src/common/app/configure_root.jsx b/src/common/app/configure_root.jsx @@ -10,6 +10,7 @@ import Root from 'components/parts/Root'\nimport 'styles/global'\ntype Props = {\n+ i18n: Object,\nstore: Object, // unconfigured store\nSSR: {\n// SSR options, see `/server` for more info\n@@ -24,9 +25,9 @@ type Props = {\n* Configure Root component.\n*/\n-const configureRootComponent = ({store, SSR, history, routes}: Props) => {\n- const props = {store, SSR, history, routes}\n+const configureRootComponent = (props: Props) => {\nif (module.hot) {\n+ const {store} = props\n// Enable Webpack hot module replacement for reducers\nmodule.hot.accept('reducers', () => {\nconst nextRootReducer = require('reducers').default\n",
        "date": "12.09.2017 00:54:19",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor configureRootComponent function and add i18n prop."
    },
    {
        "msg": "feat(server): use process.env.BASE_API instead of /api/v1 for API\nfeat(server): use process.env.BASE_API instead of /api/v1 for API",
        "diff": "diff --git a/src/server/server.js b/src/server/server.js @@ -18,7 +18,7 @@ export default (app: Object): Object => {\n// Add global middlewares\naddMiddlewares(app)\n// Add API\n- app.use('/api/v1', API)\n+ app.use(process.env.BASE_API, API)\n// Add SSR\napp.use(SSR)\nreturn app\n",
        "date": "12.09.2017 17:57:26",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Update API base path to use environment variable"
    },
    {
        "msg": "feat(package.json): add raven, reselect, nock\nfeat(package.json): add raven, reselect, nock",
        "diff": "diff --git a/package.json b/package.json \"prop-types\": \"^15.5.10\",\n\"query-string\": \"^5.0.0\",\n\"rapscallion\": \"^2.1.13\",\n+ \"raven\": \"^2.1.2\",\n\"react\": \"^15.6.1\",\n\"react-dom\": \"^15.6.1\",\n\"react-helmet\": \"^5.2.0\",\n\"redux\": \"^3.7.2\",\n\"redux-persist\": \"^4.9.1\",\n\"redux-thunk\": \"^2.2.0\",\n+ \"reselect\": \"^3.0.1\",\n\"semantic-ui-css\": \"^2.2.12\",\n\"semantic-ui-react\": \"^0.73.0\",\n\"spdy\": \"^3.4.7\",\n\"i18n-webpack-plugin\": \"^1.0.0\",\n\"img-loader\": \"^2.0.0\",\n\"jest\": \"^21.0.2\",\n+ \"nock\": \"^9.0.14\",\n\"node-sass\": \"^4.5.3\",\n\"open\": \"0.0.5\",\n\"optimize-css-assets-webpack-plugin\": \"^3.1.1\",\n",
        "date": "13.09.2017 21:23:00",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Add raven and reselect dependencies, update nock dependency"
    },
    {
        "msg": "feat(server): add both https and http server in dev mode\nfeat(server): add both https and http server in dev mode",
        "diff": "diff --git a/src/server/index.dev.js b/src/server/index.dev.js * @file\n*/\nimport express from 'express'\n+import http from 'http'\nimport spdy from 'spdy'\nimport chalk from 'chalk'\n// Mount our server-side code to dev server\n-import server from '../../webpack_config/server'\n+import server from '../../webpack_config/devServer'\nimport {serverOptions as options} from './config/index.dev'\nconst app: express$Application = express()\n-const PORT: number = +process.env.PORT || 3000\n+const httpsPORT: number = +process.env.PORT || 3000\n+const httpPort: number = +process.env.PORT || 3000 - 443\nserver(app)\n-spdy.createServer(options, app).listen(PORT, () => {\n- console.log(chalk.green(`SERVER IS LISTENING ON ${PORT}`))\n+spdy.createServer(options, app).listen(httpsPORT, () => {\n+ console.log(\n+ chalk.red(`HTTPS SERVER IS LISTENING ON https://127.0.0.1:${httpsPORT}`)\n+ )\n+})\n+\n+http.createServer(app).listen(httpPort, () => {\n+ console.log(\n+ chalk.green(`HTTP SERVER IS LISTENING ON http://localhost:${httpPort}`)\n+ )\n})\n",
        "date": "14.09.2017 01:04:40",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Update server configuration to support both HTTP and HTTPS protocols"
    },
    {
        "msg": "feat(routing): use \"lazy\" instead of \"lazy-once\" for lazy loading in browser env\nfeat(routing): use \"lazy\" instead of \"lazy-once\" for lazy loading in\nbrowser env",
        "diff": "diff --git a/src/common/routing/routes.js b/src/common/routing/routes.js @@ -7,10 +7,10 @@ const loadLazyComponentFnConstructor = (url: string) => async () => {\n// NOTE: there isn't any duplication here\n// Read Webpack docs about code-splitting for more info.\nif (process.env.BROWSER) {\n- const loadComponent = await import(/* webpackMode: \"lazy-once\", webpackChunkName: \"lazy-containers\" */ `containers/${url}/index.jsx`)\n+ const loadComponent = await import(/* webpackMode: \"lazy\", webpackChunkName: \"[request].lazy\" */ `containers/${url}/index.jsx`)\nreturn loadComponent\n}\n- const loadComponent = await import(/* webpackMode: \"eager\", webpackChunkName: \"lazy-containers\" */ `containers/${url}/index.jsx`)\n+ const loadComponent = await import(/* webpackMode: \"eager\" */ `containers/${url}/index.jsx`)\nreturn loadComponent\n}\n",
        "date": "14.09.2017 05:55:54",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor lazy loading configuration in routes.js"
    },
    {
        "msg": "feat(server/ssr): move i18n stuff to i18n, fix state creation\nfeat(server/ssr): construct state using req.useragent, remove\nlocaleData requiring, remove translations creation",
        "diff": "diff --git a/src/server/ssr/index.js b/src/server/ssr/index.js * @desc\n*/\nimport React from 'react'\n-import {readFileSync} from 'fs' // readFile\n-import path from 'path'\n+import chalk from 'chalk'\n// import _ from 'lodash'\n-import {sync as globSync} from 'glob'\nimport {renderToString} from 'react-dom/server'\nimport {ServerStyleSheet, StyleSheetManager} from 'styled-components'\nimport {configureRootComponent, configureApp} from 'common/app'\n// import {addLocaleData} from 'react-intl'\nimport HtmlComponent from './HtmlComponent'\n+// $FlowFixMe\nimport assets from 'webpack-assets'\n+// $FlowFixMe\nimport faviconsAssets from 'favicons-assets'\n-import type {Node} from 'react'\n-\n-const translations = globSync('locals/*.json')\n- .map(filename => [\n- path.basename(filename, '.json'),\n- readFileSync(filename, 'utf8')\n- ])\n- .map(([locale, file]) => [locale, JSON.parse(file)])\n- .reduce((collection, [locale, messages]) => {\n- collection[locale] = messages\n- return collection\n- }, {})\n+import getI18nData from 'server/i18n'\nexport default (req: express$Request, res: express$Response) => {\n- const {isLoggedIn, token, lang} = req.user\n+ const {isLoggedIn, lang} = req.user\n+ const {isMobile} = req.useragent\n+ console.log(chalk.cyan(`MOBILE DEVICE: ${isMobile}`, JSON.stringify(req.useragent), lang))\n+ const meState = {auth: {isLoggedIn}}\n+ const layoutState = {isMobile}\nconst initialState: Object = isLoggedIn\n- ? {me: {auth: {isLoggedIn, token}}}\n- : {}\n- const localeData = require('react-intl/locale-data/' + (lang || 'en'))\n- const i18n = {\n- lang,\n- localeData,\n- locale: lang,\n- messages: translations[lang]\n- }\n- //\n+ ? {me: meState, layout: layoutState}\n+ : {layout: layoutState}\n+ const i18n = getI18nData(lang)\nconst sheet = new ServerStyleSheet()\nconst location: string = req.url\nconst context = {}\nconst {store, history, routes} = configureApp(initialState)\n- const RootComponent: Node = configureRootComponent({\n+ const RootComponent: React$Node = configureRootComponent({\nstore,\nhistory,\nroutes,\n",
        "date": "17.09.2017 14:25:22",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor SSR index.js file, update dependencies and improve code readability"
    },
    {
        "msg": "feat(server): add useragent middleware\nfeat(server): add useragent middleware",
        "diff": "diff --git a/src/server/middlewares/index.js b/src/server/middlewares/index.js @@ -8,6 +8,7 @@ import compression from 'compression'\nimport cookieParser from 'cookie-parser'\nimport bodyParser from 'body-parser'\nimport morgan from 'morgan'\n+import useragent from 'express-useragent'\nimport authMiddleware from './auth'\nexport default (app: express$Application): express$Application => {\n@@ -22,6 +23,7 @@ export default (app: express$Application): express$Application => {\n})\n)\napp.use(bodyParser.json())\n+ app.use(useragent.express())\napp.use(authMiddleware)\nreturn app\n",
        "date": "17.09.2017 14:26:26",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Add useragent middleware to server middlewares"
    },
    {
        "msg": "feat(LocalStorageCookiesSvc): add `getInfoFromJWT `\nfeat(LocalStorageCookiesSvc): add `getInfoFromJWT ` (jwt decode)",
        "diff": "diff --git a/src/common/api/LocalStorageCookiesSvc/index.js b/src/common/api/LocalStorageCookiesSvc/index.js // @flow\nimport * as store from 'store2'\nimport Cookies from 'js-cookie'\n+import decodeJWT from 'jwt-decode'\nexport const JWT_TOKEN = 'JWT_TOKEN'\n@@ -18,4 +19,9 @@ export function setLocalToken (token: string) {\nCookies.set(JWT_TOKEN, token, {expires: 365})\n}\n+export function getInfoFromJWT () {\n+ const token = getLocalToken()\n+ return decodeJWT(token)\n+}\n+\nexport const isLoggedIn = () => !!getLocalToken()\n",
        "date": "17.09.2017 14:27:23",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Add function to decode JWT token from local storage"
    },
    {
        "msg": "feat(App): init handleWindowResize on App willMount\nfeat(App): init handleWindowResize on App willMount",
        "diff": "diff --git a/src/common/containers/App/index.jsx b/src/common/containers/App/index.jsx @@ -27,10 +27,9 @@ import {\n} from './style'\nimport type {RouteItem} from 'types'\nimport type {GlobalState} from 'reducers'\n-import type {Node} from 'react'\ntype Props = {\n- children: Node,\n+ children: React$Node,\n// Routes of app passed as props in `Root`\nroutes: Array<RouteItem>,\n// React-router `withRouter` props\n@@ -57,6 +56,7 @@ class App extends Component {\nconst {isLoggedIn} = this.props\nif (process.env.BROWSER) {\nconst {handleWindowResize} = this.props\n+ handleWindowResize()\nwindow.addEventListener('resize', handleWindowResize)\n}\nthis.checkAppAuthLogic(isLoggedIn)\n",
        "date": "17.09.2017 14:29:46",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Update children prop type to use React$Node and call handleWindowResize on window resize event in App component"
    },
    {
        "msg": "feat(api/utils/xhr_wrapper): move to ponyfill from polyfill\nfeat(api/utils/xhr_wrapper): move to ponyfill from polyfill",
        "diff": "diff --git a/src/common/api/utils/xhr_wrapper.js b/src/common/api/utils/xhr_wrapper.js * @flow\n*/\n-import {\n- getLocalToken,\n- resetLocalToken\n-} from 'api/LocalStorageCookiesSvc'\n+import {getLocalToken, resetLocalToken} from 'api/LocalStorageCookiesSvc'\n+import fetch from 'isomorphic-fetch'\nimport _ from 'lodash'\n/**\n",
        "date": "17.09.2017 14:52:04",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor xhr_wrapper.js to import isomorphic-fetch and lodash in a more concise way"
    },
    {
        "msg": "feat(parts/Header/style): remove position:fixed from Header\nfeat(parts/Header/style): remove position:fixed from Header, remove\nuseless comment",
        "diff": "diff --git a/src/common/components/parts/Header/style.jsx b/src/common/components/parts/Header/style.jsx import styled from 'styled-components'\nimport {media} from 'styles/utils'\nimport {Button} from 'semantic-ui-react'\n-\nexport const StyledHeader = styled.header`\nbackground: ${props => props.theme.primaryColor};\nborder-bottom: 1px solid ${props => props.theme.primaryColorDark};\n@@ -12,11 +11,8 @@ export const StyledHeader = styled.header`\njustify-content: center;\nflex-direction: column;\nwidth: 100%;\n- position: fixed;\nz-index: 444;\n- ${media.md`\nheight: 65px;\n- `};\n${media.lg`\nheight: 72px;\n`};\n@@ -24,7 +20,6 @@ export const StyledHeader = styled.header`\nexport const HeaderInner = styled.div`\ndisplay: flex;\npadding: 0 15px;\n- ${'XXX: maybe it\\'s better to use `em`s?'}\n`\nexport const PageTitle = styled.span`\n",
        "date": "17.09.2017 14:53:10",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor Header component styles and remove unnecessary fixed positioning."
    },
    {
        "msg": "feat(reducers/auth): remove jwt token from state.me.auth\nfeat(reducers/auth): remove jwt token from state.me.auth",
        "diff": "diff --git a/src/common/reducers/auth/index.js b/src/common/reducers/auth/index.js // @flow\n-import {\n- isLoggedIn as hasLocalToken,\n- getLocalToken\n-} from 'api/LocalStorageCookiesSvc'\n+import {isLoggedIn as hasLocalToken} from 'api/LocalStorageCookiesSvc'\nimport {\nLOGIN_AUTH_FAIL,\nLOGIN_AUTH_PENDING,\n@@ -23,7 +20,6 @@ export type State = {\nisLoading: boolean,\nisLoaded: boolean,\nisLoggedIn: boolean,\n- token: string | null,\nerrors: Object\n}\n@@ -38,7 +34,6 @@ export const initialState: State = {\nisLoading: false,\nisLoaded: false,\nisLoggedIn: hasLocalToken(),\n- token: getLocalToken(),\nerrors: {}\n}\n@@ -52,7 +47,6 @@ export function auth (state: State = initialState, action: Action): State {\nisLoading: false,\nisLoaded: true,\nisLoggedIn: false,\n- token: null,\nerrors: {}\n}\n}\n@@ -63,18 +57,15 @@ export function auth (state: State = initialState, action: Action): State {\nisLoading: false,\nisLoaded: true,\nisLoggedIn: false,\n- token: null,\nerrors\n}\n}\ncase LOGIN_AUTH_SUCCESS: {\n- const {token} = action.payload\nreturn {\n...state,\nisLoading: false,\nisLoaded: true,\n- isLoggedIn: true,\n- token\n+ isLoggedIn: true\n}\n}\ncase LOGIN_AUTH_PENDING: {\n",
        "date": "17.09.2017 14:55:40",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor auth reducer to remove unnecessary token handling"
    },
    {
        "msg": "feat(reducers/layout): remove APPLICATION_INIT handling\nfeat(reducers/layout): remove APPLICATION_INIT handling",
        "diff": "diff --git a/src/common/reducers/layout/index.js b/src/common/reducers/layout/index.js @@ -4,7 +4,7 @@ import {\nUI_CLOSE_SIDEBAR,\nUI_WINDOW_RESIZE\n} from 'actions/layout'\n-import {LOCATION_CHANGE, APPLICATION_INIT} from 'actions/common'\n+import {LOCATION_CHANGE} from 'actions/common'\n//\nimport type {LOCATION_CHANGE_TYPE, APPLICATION_INIT_TYPE} from 'actions/common'\nimport type {\n@@ -42,11 +42,13 @@ export function layout (state: State = initialState, action: Action): State {\nreturn {isMobileSM, isMobileXS, isMobile}\n}\nswitch (action.type) {\n- case APPLICATION_INIT:\n- case UI_WINDOW_RESIZE:\n+ case UI_WINDOW_RESIZE: {\n+ const {innerWidth} = action.payload\n+ const mobileStates = computeMobileStatuses(innerWidth)\nreturn {\n...state,\n- ...computeMobileStatuses(action.payload.innerWidth)\n+ ...mobileStates\n+ }\n}\ncase UI_OPEN_SIDEBAR:\nreturn {\n",
        "date": "17.09.2017 14:56:05",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor layout reducer to remove unused action type APPLICATION_INIT and update UI_WINDOW_RESIZE to correctly compute mobile status."
    },
    {
        "msg": "feat(ssr/HtmlComponent): use serialize-javascript instead of JSON.stringify\nfeat(ssr/HtmlComponent): use serialize-javascript instead of\nJSON.stringify",
        "diff": "diff --git a/src/server/ssr/HtmlComponent.jsx b/src/server/ssr/HtmlComponent.jsx // @flow\n+import serealize from 'serialize-javascript'\n+\ntype args = {\ncss: string,\nApp: string,\n@@ -24,8 +26,8 @@ const HtmlComponent = ({\nfaviconsAssets,\ni18n\n}: args) => {\n- const stringifiedState: string = JSON.stringify(initialState)\n- const stringifiedI18N: string = JSON.stringify(i18n)\n+ const stringifiedState: string = serealize(initialState)\n+ const stringifiedI18N: string = serealize(i18n)\nconst safeStringifiedState: string = stringifiedState.replace(/</g, '\\\\u003c')\nconst createBody = () => {\n",
        "date": "17.09.2017 14:57:02",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Use serialize-javascript for serializing state and i18n objects"
    },
    {
        "msg": "feat(server/i18n): add flow types (i18nConfigObject)\nfeat(server/i18n): add flow types",
        "diff": "diff --git a/src/server/i18n/index.js b/src/server/i18n/index.js +// @flow\nimport {readFileSync} from 'fs' // readFile\nimport path from 'path'\nimport {sync as globSync} from 'glob'\n// import {addLocaleData} from 'react-intl'\nimport enLocaleData from 'react-intl/locale-data/en'\nimport ruLocaleData from 'react-intl/locale-data/ru'\n+import type {i18nConfigObject} from 'types'\nconst translations = globSync('locals/*.json')\n- .map(filename => [\n+ .map((filename: string) => [\npath.basename(filename, '.json'),\nreadFileSync(filename, 'utf8')\n])\n@@ -24,7 +26,7 @@ const summaryLocaleData = {\nexport const defaultLanguage = 'en'\nexport const supportedLanguages = ['en', 'ru']\n-export default lang => {\n+export default (lang: string): i18nConfigObject => {\nconsole.log(lang)\nreturn {\nlang,\n",
        "date": "17.09.2017 15:03:59",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Add flow types to i18n index.js and update default export signature"
    },
    {
        "msg": "feat(types): add i18nConfigObject\nfeat(types): add i18nConfigObject",
        "diff": "diff --git a/src/common/types/index.js b/src/common/types/index.js @@ -42,3 +42,10 @@ export type RouteItem = {\ntag?: React$Node | Function,\ncomponent?: React$Node | Function\n}\n+\n+export type i18nConfigObject = {\n+ messages: Object,\n+ localeData: Object,\n+ locale: string,\n+ lang?: string\n+}\n",
        "date": "17.09.2017 15:04:11",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Add i18nConfigObject type definition to index.js"
    },
    {
        "msg": "feat(.babelrc): add env preset, remove SUIR from lodash plugin\nfeat(.babelrc): add env preset. remove SUIR from lodash plugin, because\nof tree-shaking (native import modules vs cjs)",
        "diff": "diff --git a/.babelrc b/.babelrc {\n\"plugins\": [\n- [\"lodash\", {\"id\": [\"lodash\", \"semantic-ui-react\"]}],\n+ [\"lodash\", {\"id\": [\"lodash\"]}],\n[\n\"transform-runtime\",\n{\n\"moduleName\": \"babel-runtime\"\n}\n],\n- \"syntax-dynamic-import\"\n+ \"syntax-dynamic-import\",\n+ [\n+ \"babel-plugin-styled-components\",\n+ {\n+ \"preprocess\": true,\n+ \"ssr\": true\n+ }\n+ ]\n+ ],\n+ \"presets\": [\n+ [\n+ \"env\",\n+ {\n+ \"targets\": {\n+ \"browsers\": [\"last 2 versions\", \"> 1%\"]\n+ }\n+ }\n+ ],\n+ \"es2015\",\n+ \"stage-1\",\n+ \"react\",\n+ \"flow\"\n],\n- \"presets\": [\"es2015\", \"react\", \"stage-0\", \"flow\"],\n\"env\": {\n\"production\": {\n\"presets\": [\"react-optimize\"]\n",
        "date": "17.09.2017 15:06:37",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor Babel configuration to optimize plugins and presets"
    },
    {
        "msg": "feat(client/index): use direct imports for SUI css, add\nfeat(client/index): use direct imports for SUI css, add",
        "diff": "diff --git a/src/client/index.jsx b/src/client/index.jsx +// @flow\n// Styles\n-import 'semantic-ui-css/semantic.css'\n-// Fetch and promise polyfill\n+// If you want full SUI CSS:\n+// import 'semantic-ui-css/semantic.css'\n+// If you want only some components from SUI:\n+import 'semantic-ui-css/components/button.css'\n+import 'semantic-ui-css/components/card.css'\n+import 'semantic-ui-css/components/container.css'\n+import 'semantic-ui-css/components/dimmer.css'\n+import 'semantic-ui-css/components/divider.css'\n+import 'semantic-ui-css/components/dropdown.css'\n+import 'semantic-ui-css/components/grid.css'\n+import 'semantic-ui-css/components/header.css'\n+import 'semantic-ui-css/components/flag.css'\n+import 'semantic-ui-css/components/form.css'\n+import 'semantic-ui-css/components/item.css'\n+import 'semantic-ui-css/components/icon.css'\n+import 'semantic-ui-css/components/image.css'\n+import 'semantic-ui-css/components/input.css'\n+import 'semantic-ui-css/components/menu.css'\n+import 'semantic-ui-css/components/label.css'\n+import 'semantic-ui-css/components/loader.css'\n+import 'semantic-ui-css/components/reset.css'\n+import 'semantic-ui-css/components/sidebar.css'\n+import 'semantic-ui-css/components/site.css'\n+import 'semantic-ui-css/components/statistic.css'\n+// promise polyfill\nimport 'promise-polyfill'\n-import 'isomorphic-fetch'\n// Application\nimport {render} from 'react-dom'\nimport {configureApp, configureRootComponent} from 'common/app'\nimport {persistStore} from 'redux-persist'\n+import type {GlobalState} from 'reducers'\n+import type {i18nConfigObject} from 'types'\nif (process.env.NODE_ENV === 'production') {\nrequire('common/pwa')\n} else if (process.env.NODE_ENV === 'development') {\n// Devtools\n- // NOTE: whyDidYouUpdate package is temporary broken, waiting for a patch.\n-\n+ // NOTE: whyDidYouUpdate package is temporarily broken, waiting for a patch.\n/*eslint-disable */\n// NOTE: But if you really want to run `why-did-you-update`\n// You can uncomment this block:\n@@ -28,8 +52,7 @@ if (process.env.NODE_ENV === 'production') {\nwhyDidYouUpdate(React)\n*/\n/*eslint-enable */\n- window.Perf = require('react-addons-perf')\n-\n+ // window.Perf = require('react-addons-perf')\n// NOTE: a11y doesnt work with SSR and React throws warnings like:\n// \"React attempted to reuse markup in a container but the checksum was invalid\"\n// a11y adds \"id\" attribute to the root container (#app) of your app and triggers re-rendering\n@@ -39,8 +62,8 @@ if (process.env.NODE_ENV === 'production') {\n// a11y(React, {ReactDOM})\n}\n-const initialState = window.__INITIAL_STATE__ || {}\n-const i18n = window.__I18N__ || {}\n+const initialState: GlobalState = window.__INITIAL_STATE__ || {}\n+const i18n: i18nConfigObject = window.__I18N__ || {}\n// NOTE: V8 doesn't optimize `delete`\n// delete window.__INITIAL_STATE__\nconst {store, routes, history} = configureApp(initialState)\n",
        "date": "17.09.2017 15:07:14",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Update SUI CSS imports and type annotations in index.jsx"
    },
    {
        "msg": "feat(Root): add more flow typesm fix APP_INIT dispatch\nfix Application_init dispatch (remove innerWidth from payload)\nuse Date.now instead of Math.randow for react-redux <Provider>\nadd i18nConfigObject type",
        "diff": "diff --git a/src/common/components/parts/Root/index.jsx b/src/common/components/parts/Root/index.jsx // @flow\nimport React, {Component} from 'react'\nimport {Provider} from 'react-redux'\n-import {IntlProvider, defineMessages, addLocaleData} from 'react-intl' // as we build ourself via webpack\n+import {IntlProvider, defineMessages, addLocaleData} from 'react-intl'\nimport {APPLICATION_INIT} from 'actions/common'\nimport {ThemeProvider} from 'styled-components'\nimport theme from 'styles/theme'\nimport App from 'containers/App'\nimport RoutingWrapper from 'components/addons/RoutingWrapper'\n-import {getWindowInnerWidth} from 'const'\n-import type {RouteItem} from 'types'\n+import type {RouteItem, i18nConfigObject} from 'types'\nconst Router = process.env.BROWSER\n? require('react-router-redux').ConnectedRouter\n@@ -16,10 +15,7 @@ const Router = process.env.BROWSER\ntype Props = {\nstore: Object,\n- i18n: {\n- messages: Object,\n- locale: string\n- },\n+ i18n: i18nConfigObject,\nSSR: {\nlocation?: Object,\ncontext?: Object\n@@ -37,9 +33,8 @@ export default class Root extends Component {\ncomponentWillMount () {\nconst {store, i18n} = this.props\n- const innerWidth: number = getWindowInnerWidth(window)\n- store.dispatch({type: APPLICATION_INIT, payload: {innerWidth}})\n- addLocaleData([...i18n.localeData])\n+ store.dispatch({type: APPLICATION_INIT})\n+ addLocaleData(i18n.localeData)\n}\nrender () {\n@@ -55,9 +50,9 @@ export default class Root extends Component {\nlocale={i18n.locale}\nmessages={defineMessages(i18n.messages)}\n>\n- <Provider store={store} key={Math.random()}>\n+ <Provider store={store} key={Date.now()}>\n<ThemeProvider theme={theme}>\n- <Router {...routerProps} key={Math.random()}>\n+ <Router {...routerProps}>\n<App routes={routes}>\n<RoutingWrapper store={store} routes={routes} />\n</App>\n",
        "date": "17.09.2017 15:10:17",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor Root component to remove unnecessary code and improve i18n handling"
    },
    {
        "msg": "feat(containers/App): replace custom GA with react-ga\nfeat(containers/App): replace custom GA with react-ga",
        "diff": "diff --git a/src/common/containers/App/index.jsx b/src/common/containers/App/index.jsx @@ -15,6 +15,7 @@ import {CLOSE_SIDEBAR, OPEN_SIDEBAR, WINDOW_RESIZE} from 'actions/layout'\nimport {LOGOUT_AUTH} from 'actions/auth'\nimport {getAuthState, getLayoutState} from 'selectors'\nimport {getWindowInnerWidth} from 'const'\n+import ReactGA from 'react-ga'\n// Import styled components\nimport {\nPageLayout,\n@@ -85,24 +86,9 @@ class App extends Component {\n// }\n//\n// NOTE: uncomment if you use Google Analytics\n- // if (process.env.GA_ID) {\n- // const script = document.createElement('script')\n- // script.type = 'text/javascript'\n- // script.async = true\n- // script.crossorigin = 'anonymous'\n- // script.onload = () => {\n- // window.ga =\n- // window.ga ||\n- // function () {\n- // ;(ga.q = ga.q || []).push(arguments)\n- // }\n- // ga.l = Number(new Date())\n- // ga('create', process.env.GA_ID, 'auto')\n- // ga('send', 'pageview')\n- // }\n- // script.src = 'https://www.google-analytics.com/analytics.js'\n- // document.body.appendChild(script)\n- // }\n+ if (process.env.GA_ID) {\n+ ReactGA.initialize(process.env.GA_ID)\n+ }\n}\n/**\n",
        "date": "17.09.2017 19:39:54",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Initialize Google Analytics using ReactGA in App component"
    },
    {
        "msg": "feat(components/Header): add react-headroom, add i18n menu\nfeat(components/Header): add react-headroom, add i18n menu",
        "diff": "diff --git a/src/common/components/parts/Header/index.jsx b/src/common/components/parts/Header/index.jsx /**\n* @flow\n*/\n-import React from 'react'\n-import {Icon, Popup} from 'semantic-ui-react'\n-\n+import React, {Component} from 'react'\n+import {Icon, Dropdown, Flag} from 'semantic-ui-react'\nimport {isEqual} from 'lodash'\n+// import {FormattedMessage} from 'react-intl'\nimport {\nStyledHeader,\nHeaderInner,\n@@ -13,6 +13,7 @@ import {\nHeaderButton\n} from './style'\nimport {Spacer} from 'styles/base'\n+import Headroom from 'react-headroom'\ntype Props = {\ntitle: string,\n@@ -21,7 +22,7 @@ type Props = {\nisMobile: boolean\n}\n-class Header extends React.Component {\n+class Header extends Component {\nprops: Props\nshouldComponentUpdate (nextProps: Props) {\nreturn !isEqual(nextProps, this.props)\n@@ -29,8 +30,14 @@ class Header extends React.Component {\nrender () {\nconst {title, toggleSidebar, isLoggedIn, isMobile} = this.props\n+ const options = [{key: 1, text: 'EN'}, {key: 2, text: 'RU'}]\n+ const selectedLanguage = {\n+ text: 'ru',\n+ icon: 'ru'\n+ }\nreturn (\n+ <Headroom>\n<StyledHeader>\n<HeaderInner>\n{isLoggedIn &&\n@@ -42,27 +49,25 @@ class Header extends React.Component {\n{title}\n</PageTitle>\n<Spacer />\n- <Popup\n- trigger={\n- <HeaderButton\n- id=\"header-button\"\n- icon\n- as={'a'}\n- aria-label=\"github-header-link-button\"\n- href=\"https://github.com/Metnew/noir\"\n- basic\n- circular\n+ <Dropdown\n+ text={selectedLanguage.text}\n+ icon={<Flag name=\"ru\" />}\n+ floating\n+ labeled\n+ button\n+ className=\"icon\"\n>\n- <Icon name=\"github\" size=\"large\" link fitted />\n- </HeaderButton>\n- }\n- content={\n- `Star this project!`\n- }\n- inverted\n- />\n+ <Dropdown.Menu>\n+ <Dropdown.Header icon=\"globe\" content=\"Select Language\" />\n+ <Dropdown.Divider />\n+ <Dropdown.Item flag=\"us\" text=\"EN\" />\n+ <Dropdown.Item flag=\"ru\" text=\"RU\" />\n+ </Dropdown.Menu>\n+ </Dropdown>\n+ {/* <Flag name=\"\" /> */}\n</HeaderInner>\n</StyledHeader>\n+ </Headroom>\n)\n}\n}\n",
        "date": "17.09.2017 19:40:24",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor Header component to use Dropdown for language selection and add Headroom for sticky behavior."
    },
    {
        "msg": "feat(webpack_config): add ANALYZE_BUNDLE to main config file\nfeat(webpack_config): add ANALYZE_BUNDLE to main config file",
        "diff": "diff --git a/webpack_config/config.js b/webpack_config/config.js @@ -11,6 +11,7 @@ let {\nSENTRY_DSN_PUBLIC,\nGA_ID,\nJWT_SECRET,\n+ ANALYZE_BUNDLE,\nSENTRY_DSN,\nPORT\n} = process.env\n@@ -42,6 +43,7 @@ export default {\nBASE_API,\nNODE_ENV,\nSENTRY_DSN_PUBLIC,\n+ ANALYZE_BUNDLE,\nGA_ID,\nCLIENT_DIST_PATH,\nJWT_SECRET,\n",
        "date": "17.09.2017 21:43:10",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Add ANALYZE_BUNDLE to webpack config"
    },
    {
        "msg": "feat(server/ssr): add rapscallion instead of react-dom/server renderToString\nfeat(server/ssr): add rapscallion instead of react-dom/server\nrenderToString",
        "diff": "diff --git a/src/server/ssr/index.js b/src/server/ssr/index.js import React from 'react'\nimport chalk from 'chalk'\n// import _ from 'lodash'\n-import {renderToString} from 'react-dom/server'\n+import {render as renderToString} from 'rapscallion'\nimport {ServerStyleSheet, StyleSheetManager} from 'styled-components'\nimport {configureRootComponent, configureApp} from 'common/app'\n// import {addLocaleData} from 'react-intl'\n@@ -16,16 +16,16 @@ import assets from 'webpack-assets'\nimport faviconsAssets from 'favicons-assets'\nimport getI18nData from 'server/i18n'\n-export default (req: express$Request, res: express$Response) => {\n- const {isLoggedIn, lang} = req.user\n+export default async (req: express$Request, res: express$Response) => {\n+ const {isLoggedIn, language} = req.user\nconst {isMobile} = req.useragent\n- console.log(chalk.cyan(`MOBILE DEVICE: ${isMobile}`, JSON.stringify(req.useragent), lang))\n+ console.log(chalk.cyan(`MOBILE DEVICE: ${isMobile}`))\nconst meState = {auth: {isLoggedIn}}\nconst layoutState = {isMobile}\nconst initialState: Object = isLoggedIn\n? {me: meState, layout: layoutState}\n: {layout: layoutState}\n- const i18n = getI18nData(lang)\n+ const i18n = getI18nData(language)\nconst sheet = new ServerStyleSheet()\nconst location: string = req.url\nconst context = {}\n@@ -37,11 +37,11 @@ export default (req: express$Request, res: express$Response) => {\ni18n,\nSSR: {location, context}\n})\n- const App: string = renderToString(\n+ const App: string = await renderToString(\n<StyleSheetManager sheet={sheet.instance}>\n{RootComponent}\n</StyleSheetManager>\n- )\n+ ).toPromise()\nconst css: string = sheet.getStyleTags()\nconst preloadedState: Object = store.getState()\nconst props = {\n@@ -53,6 +53,9 @@ export default (req: express$Request, res: express$Response) => {\nApp\n}\n- const html: string = HtmlComponent(props)\n- res.send(html)\n+ res.writeHead(200, {\n+ 'Content-Type': 'text/html'\n+ })\n+\n+ HtmlComponent(props).toStream().pipe(res)\n}\n",
        "date": "19.09.2017 17:41:56",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor SSR rendering to use rapscallion for improved performance and async rendering. Update language variable and simplify logging of mobile device detection."
    },
    {
        "msg": "feat(server/ssr): use `template` func from rapscallion in HtmlComponen\nfeat(server/ssr): use `template` func from rapscallion in HtmlComponen",
        "diff": "diff --git a/src/server/ssr/HtmlComponent.jsx b/src/server/ssr/HtmlComponent.jsx // @flow\nimport serealize from 'serialize-javascript'\n-\n+import {template} from 'rapscallion'\ntype args = {\ncss: string,\nApp: string,\n@@ -29,29 +29,28 @@ const HtmlComponent = ({\nconst stringifiedState: string = serealize(initialState)\nconst stringifiedI18N: string = serealize(i18n)\nconst safeStringifiedState: string = stringifiedState.replace(/</g, '\\\\u003c')\n-\n- const createBody = () => {\n- const html = `\n- <div id=\"app\">${App}</div>\n- <script>window.__INITIAL_STATE__ = ${safeStringifiedState}</script>\n- <script>window.__I18N__ = ${stringifiedI18N}</script>\n- ${DLLScripts}\n- ${Object.keys(assets)\n- .filter(bundleName => assets[bundleName].js)\n+ const wrapFuncs = {\n+ css: ({path}) => `<link rel=\"stylesheet\" href=\"${path}\" />`,\n+ js: ({path}) => `<script src=\"${path}\" type=\"text/javascript\"></script>`\n+ }\n+ const getTags = assets => funcs => ext => {\n+ const assetsOrdered = ['manifest', 'vendor', 'client']\n+ return Object.keys(assets)\n+ .filter(bundleName => assets[bundleName][ext])\n+ .sort((a, b) => assetsOrdered.indexOf(a) > assetsOrdered.indexOf(b))\n.map(bundleName => {\n- const path = assets[bundleName].js\n- return `<script src=\"${path}\" type=\"text/javascript\"></script>`\n+ const path = assets[bundleName][ext]\n+ return funcs[ext]({path})\n})\n- .join('')}\n- <noscript>\n- You are using outdated browser. You can install modern browser here:{' '}\n- <a href=\"http://outdatedbrowser.com/\">http://outdatedbrowser.com</a>.\n- </noscript>`\n- return html\n+ .join('')\n}\n+ const getTagsFromAssets = getTags(assets)(wrapFuncs)\n+ const cssTags = getTagsFromAssets('css')\n+ const jsTags = getTagsFromAssets('js')\n- const createHead = () => {\n- const html = `\n+ return template`\n+ <html lang=\"${i18n.lang}\">\n+ <head>\n<meta charset=\"utf-8\" />\n<title>Noir</title>\n<meta httpEquiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n@@ -63,22 +62,20 @@ const HtmlComponent = ({\n<base href=\"/\" />\n<meta name=\"msapplication-tap-highlight\" content=\"no\" />\n<link rel=\"manifest\" href=\"manifest.json\" />\n- ${faviconsAssets.html && faviconsAssets.html.join('')}\n+ ${faviconsAssets && faviconsAssets.html && faviconsAssets.html.join('')}\n${css}\n- ${Object.keys(assets)\n- .filter(bundleName => assets[bundleName].css)\n- .map(bundleName => {\n- const path = assets[bundleName].css\n- return `<link rel=\"stylesheet\" href=\"${path}\" />`\n- })\n- .join('')}`\n- return html\n- }\n-\n- return `<html lang=\"${i18n.lang}\">\n- <head>${createHead()}<head>\n+ ${cssTags}\n+ <head>\n<body>\n- ${createBody()}\n+ <div id=\"app\">${App}</div>\n+ <script>window.__INITIAL_STATE__ = ${safeStringifiedState}</script>\n+ <script>window.__I18N__ = ${stringifiedI18N}</script>\n+ ${DLLScripts}\n+ ${jsTags}\n+ <noscript>\n+ You are using outdated browser. You can install modern browser here:\n+ <a href=\"http://outdatedbrowser.com/\">http://outdatedbrowser.com</a>.\n+ </noscript>\n</body>\n</html>`\n}\n",
        "date": "19.09.2017 17:42:39",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor HtmlComponent to dynamically generate CSS and JS tags from assets"
    },
    {
        "msg": "feat(server/index.dev): add both http and https servers in prod\nfeat(server/index.dev): add both http and https servers in prod",
        "diff": "diff --git a/src/server/index.js b/src/server/index.js * @file\n*/\nimport express from 'express'\n+import http from 'http'\nimport spdy from 'spdy'\nimport chalk from 'chalk'\n-//\n+// Mount our server-side code to server\nimport server from './server'\nimport {serverOptions as options} from './config'\n+\nconst app: express$Application = express()\n-const PORT: number = +process.env.PORT || 3000\n+const httpsPORT: number = +process.env.PORT || 3030\n+const httpPORT: number = +process.env.PORT || 3000\n+\n+server(app)\n-const decoratedProductionServer = server(app)\n+spdy.createServer(options, app).listen(httpsPORT, () => {\n+ console.log(\n+ chalk.red(`HTTPS SERVER IS LISTENING ON https://127.0.0.1:${httpsPORT}`)\n+ )\n+})\n-spdy.createServer(options, decoratedProductionServer).listen(PORT, () => {\n- console.log(chalk.green(`SERVER IS LISTENING ON ${PORT}`))\n+http.createServer(app).listen(httpPORT, () => {\n+ console.log(\n+ chalk.green(`HTTP SERVER IS LISTENING ON http://localhost:${httpPORT}`)\n+ )\n})\n",
        "date": "19.09.2017 17:43:38",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "\"Add support for both HTTP and HTTPS servers\""
    },
    {
        "msg": "feat(.babelrc): remove es2015 preset, add babel-polyfill: true\nfeat(.babelrc): remove es2015 preset, add babel-polyfill: true",
        "diff": "diff --git a/.babelrc b/.babelrc \"transform-runtime\",\n{\n\"helpers\": false,\n- \"polyfill\": false,\n+ \"polyfill\": true,\n\"regenerator\": true,\n\"moduleName\": \"babel-runtime\"\n}\n}\n}\n],\n- \"es2015\",\n\"stage-1\",\n\"react\",\n\"flow\"\n",
        "date": "21.09.2017 16:10:45",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Enable polyfill in Babel configuration"
    },
    {
        "msg": "feat(server/ssr): React 16 streaming\nfeat(server/ssr): React 16 streaming",
        "diff": "diff --git a/src/server/ssr/index.js b/src/server/ssr/index.js import React from 'react'\nimport chalk from 'chalk'\n// import _ from 'lodash'\n-import {render as renderToString} from 'rapscallion'\n+import {renderToNodeStream, renderToStaticNodeStream} from 'react-dom/server'\nimport {ServerStyleSheet, StyleSheetManager} from 'styled-components'\nimport {configureRootComponent, configureApp} from 'common/app'\n// import {addLocaleData} from 'react-intl'\n@@ -37,11 +37,12 @@ export default async (req: express$Request, res: express$Response) => {\ni18n,\nSSR: {location, context}\n})\n- const App: string = await renderToString(\n+ const stream = renderToNodeStream(\n<StyleSheetManager sheet={sheet.instance}>\n{RootComponent}\n</StyleSheetManager>\n- ).toPromise()\n+ )\n+\nconst css: string = sheet.getStyleTags()\nconst preloadedState: Object = store.getState()\nconst props = {\n@@ -49,13 +50,18 @@ export default async (req: express$Request, res: express$Response) => {\nassets,\nfaviconsAssets,\ninitialState: preloadedState,\n- i18n,\n- App\n+ i18n\n}\n+ const {beforeAppTag, afterAppTag} = HtmlComponent(props)\nres.writeHead(200, {\n'Content-Type': 'text/html'\n})\n+ res.write(beforeAppTag)\n+ stream.pipe(res, {end: false})\n- HtmlComponent(props).toStream().pipe(res)\n+ stream.on('end', () => {\n+ res.write(afterAppTag)\n+ res.end()\n+ })\n}\n",
        "date": "28.09.2017 19:26:13",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor SSR rendering to use renderToNodeStream and renderToStaticNodeStream from react-dom/server"
    },
    {
        "msg": "feat(server/ssr): React 16 streaming, remove rapscallion\nfeat(server/ssr): React 16 streaming, remove rapscallion",
        "diff": "diff --git a/src/server/ssr/HtmlComponent.jsx b/src/server/ssr/HtmlComponent.jsx // @flow\nimport serealize from 'serialize-javascript'\n-import {template} from 'rapscallion'\ntype args = {\ncss: string,\n- App: string,\ninitialState: Object,\nassets: Object,\nfaviconsAssets: Object,\n@@ -20,7 +18,6 @@ const DLLScripts =\nconst HtmlComponent = ({\ncss,\n- App,\ninitialState,\nassets,\nfaviconsAssets,\n@@ -34,10 +31,11 @@ const HtmlComponent = ({\njs: ({path}) => `<script src=\"${path}\" type=\"text/javascript\"></script>`\n}\nconst getTags = assets => funcs => ext => {\n+ // sort assets to be injected in right order\nconst assetsOrdered = ['manifest', 'vendor', 'client']\nreturn Object.keys(assets)\n.filter(bundleName => assets[bundleName][ext])\n- .sort((a, b) => assetsOrdered.indexOf(a) > assetsOrdered.indexOf(b))\n+ .sort((a, b) => assetsOrdered.indexOf(a) - assetsOrdered.indexOf(b))\n.map(bundleName => {\nconst path = assets[bundleName][ext]\nreturn funcs[ext]({path})\n@@ -48,8 +46,8 @@ const HtmlComponent = ({\nconst cssTags = getTagsFromAssets('css')\nconst jsTags = getTagsFromAssets('js')\n- return template`\n- <html lang=\"${i18n.lang}\">\n+ return {\n+ beforeAppTag: `<html lang=\"${i18n.lang}\">\n<head>\n<meta charset=\"utf-8\" />\n<title>Noir</title>\n@@ -66,8 +64,8 @@ const HtmlComponent = ({\n${css}\n${cssTags}\n<head>\n- <body>\n- <div id=\"app\">${App}</div>\n+ <body>`,\n+ afterAppTag: `\n<script>window.__INITIAL_STATE__ = ${safeStringifiedState}</script>\n<script>window.__I18N__ = ${stringifiedI18N}</script>\n${DLLScripts}\n@@ -79,5 +77,6 @@ const HtmlComponent = ({\n</body>\n</html>`\n}\n+}\nexport default HtmlComponent\n",
        "date": "28.09.2017 19:26:37",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor HtmlComponent to sort assets in the right order and update template structure"
    },
    {
        "msg": "feat(Header): remove language selection button\nfeat(Header): remove language selection button",
        "diff": "diff --git a/src/common/components/parts/Header/index.jsx b/src/common/components/parts/Header/index.jsx * @flow\n*/\nimport React, {Component} from 'react'\n-import {Icon, Dropdown, Flag} from 'semantic-ui-react'\n+import {Icon} from 'semantic-ui-react'\nimport {isEqual} from 'lodash'\n// import {FormattedMessage} from 'react-intl'\nimport {\n@@ -30,41 +30,19 @@ class Header extends Component {\nrender () {\nconst {title, toggleSidebar, isLoggedIn, isMobile} = this.props\n- const options = [{key: 1, text: 'EN'}, {key: 2, text: 'RU'}]\n- const selectedLanguage = {\n- text: 'ru',\n- icon: 'ru'\n- }\nreturn (\n<Headroom>\n<StyledHeader>\n<HeaderInner>\n{isLoggedIn &&\n- isMobile &&\n+ isMobile && (\n<Navicon onClick={toggleSidebar}>\n<Icon name=\"content\" />\n- </Navicon>}\n- <PageTitle>\n- {title}\n- </PageTitle>\n+ </Navicon>\n+ )}\n+ <PageTitle>{title}</PageTitle>\n<Spacer />\n- <Dropdown\n- text={selectedLanguage.text}\n- icon={<Flag name=\"ru\" />}\n- floating\n- labeled\n- button\n- className=\"icon\"\n- >\n- <Dropdown.Menu>\n- <Dropdown.Header icon=\"globe\" content=\"Select Language\" />\n- <Dropdown.Divider />\n- <Dropdown.Item flag=\"us\" text=\"EN\" />\n- <Dropdown.Item flag=\"ru\" text=\"RU\" />\n- </Dropdown.Menu>\n- </Dropdown>\n- {/* <Flag name=\"\" /> */}\n</HeaderInner>\n</StyledHeader>\n</Headroom>\n",
        "date": "28.09.2017 19:27:50",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Remove language dropdown from Header component and update icon imports."
    },
    {
        "msg": "feat(server/middlewares): add i18n stuff to auth middleware\nfeat(server/middlewares): add i18n stuff to auth middleware",
        "diff": "diff --git a/src/server/middlewares/auth.js b/src/server/middlewares/auth.js */\nimport chalk from 'chalk'\nimport jwt from 'jsonwebtoken'\n+import {supportedLanguages, defaultLanguage} from '../i18n'\nimport {JWT_TOKEN} from 'common/api/LocalStorageCookiesSvc'\n/**\n* Auth-related middleware.\n@@ -11,10 +12,15 @@ import {JWT_TOKEN} from 'common/api/LocalStorageCookiesSvc'\n* @param {Response} res\n* @param {Function} next\n*/\n-export default (req: express$Request, res: express$Response, next: () => void) => {\n+export default (\n+ req: express$Request,\n+ res: express$Response,\n+ next: () => void\n+) => {\n+ const language: string = req.acceptsLanguages(supportedLanguages) || defaultLanguage\nreq.user = {\ntoken: null,\n- lang: 'en',\n+ language,\nisLoggedIn: false\n}\n@@ -23,15 +29,17 @@ export default (req: express$Request, res: express$Response, next: () => void) =\nreturn next()\n}\n- console.log(chalk.blue('USER HAS TOKEN'))\n+ console.log(chalk.blue('USER HAS JWT TOKEN'))\njwt.verify(token, process.env.JWT_SECRET, (err, decoded) => {\nif (err) {\nconsole.log(chalk.red('CANT DECODE JWT TOKEN!', err))\n} else {\nconsole.log(chalk.magenta('TOKEN SUCCESSFULLY DECODED'))\n+ // NOTE: set user language in jwt token that may helps handling i18n efficiently\n+ const {username} = decoded\nreq.user = {\n- ...decoded,\ntoken,\n+ username,\nisLoggedIn: true\n}\n}\n",
        "date": "28.09.2017 19:36:36",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor auth middleware to include user language in JWT token."
    },
    {
        "msg": "feat(locals): add basic text for dashboard\nfeat(locals): add basic text for dashboard",
        "diff": "diff --git a/locals/en.json b/locals/en.json {\n- \"Header.Popup.HeaderButton\": \"Hello {name}\"\n+ \"Dashboard.Text\": \"Hello HELLOOOO\"\n}\n",
        "date": "29.09.2017 20:51:38",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Update greeting text in Dashboard to say \"Hello HELLOOOO\""
    },
    {
        "msg": "feat(webpack_config): use HTTPS/HTTP ports instead of PORT\nfeat(webpack_config): use HTTPS/HTTP ports instead of PORT",
        "diff": "diff --git a/webpack_config/config.js b/webpack_config/config.js @@ -13,7 +13,8 @@ let {\nJWT_SECRET,\nANALYZE_BUNDLE,\nSENTRY_DSN,\n- PORT\n+ HTTP_PORT,\n+ HTTPS_PORT\n} = process.env\n// Vars for both server and frontend\n@@ -29,7 +30,8 @@ const srcCommonPath = path.join(srcPath, './common') // = \"/src/common\"\n// Vars for server only\nconst CLIENT_DIST_PATH = path.join(distPath, './client') // = \"/dist/client\"\nJWT_SECRET = JWT_SECRET || 'secret'\n-PORT = PORT || 3000\n+HTTP_PORT = HTTP_PORT || 3000\n+HTTPS_PORT = HTTPS_PORT || 3030\n// compute isProduction based on NODE_ENV\nconst isProduction = process.env.NODE_ENV === 'production'\n@@ -48,7 +50,8 @@ export default {\nCLIENT_DIST_PATH,\nJWT_SECRET,\nSENTRY_DSN,\n- PORT,\n+ HTTPS_PORT,\n+ HTTP_PORT,\n// It's better to define pathes in one file\n// and then use everywhere across app\nsrcPath,\n@@ -76,7 +79,8 @@ export default {\n'js-cookie',\n'prop-types',\n'store2',\n- 'styled-components'\n+ 'styled-components',\n+ 'react-headroom'\n],\npolyfills: ['promise-polyfill', 'isomorphic-fetch']\n}\n",
        "date": "30.09.2017 14:19:28",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Update webpack config to include separate HTTP and HTTPS ports."
    },
    {
        "msg": "feat(locals): add basic locals\nfeat(locals): add basic locals",
        "diff": "diff --git a/locals/en.json b/locals/en.json {\n- \"Dashboard.Text\": \"Hello HELLOOOO\"\n+ \"Dashboard.h1\": \"Noir.\",\n+ \"Dashboard.h2-1\": \"Intro\",\n+ \"Dashboard.h2-2\": \"How it works?\",\n+ \"Dashboard.h3-1\": \"Hello, this is Noir.\",\n+ \"Dashboard.h3-2\": \"Hello, this is Noir.\",\n+ \"Dashboard.p-1\": \"How it works?\",\n+ \"Dashboard.p-2\": \"Hello, this is Noir.\"\n}\n",
        "date": "30.09.2017 14:19:51",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Update Dashboard text and headings in en.json"
    },
    {
        "msg": "feat(client): remove item.css, add list.css\nfeat(client): remove item.css, add list.css",
        "diff": "diff --git a/src/client/index.jsx b/src/client/index.jsx @@ -11,12 +11,12 @@ import 'semantic-ui-css/components/divider.css'\nimport 'semantic-ui-css/components/grid.css'\nimport 'semantic-ui-css/components/header.css'\nimport 'semantic-ui-css/components/form.css'\n-import 'semantic-ui-css/components/item.css'\nimport 'semantic-ui-css/components/icon.css'\nimport 'semantic-ui-css/components/image.css'\nimport 'semantic-ui-css/components/input.css'\nimport 'semantic-ui-css/components/menu.css'\nimport 'semantic-ui-css/components/label.css'\n+import 'semantic-ui-css/components/list.css'\nimport 'semantic-ui-css/components/loader.css'\nimport 'semantic-ui-css/components/reset.css'\nimport 'semantic-ui-css/components/sidebar.css'\n",
        "date": "30.09.2017 14:20:23",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Remove item.css and add list.css to index.jsx"
    },
    {
        "msg": "feat(server/ssr): move to react 16\nfeat(server/ssr): move to react 16",
        "diff": "diff --git a/src/server/ssr/index.js b/src/server/ssr/index.js */\nimport React from 'react'\nimport chalk from 'chalk'\n-// import _ from 'lodash'\n-import {renderToNodeStream, renderToStaticNodeStream} from 'react-dom/server'\n+import {renderToNodeStream} from 'react-dom/server'\nimport {ServerStyleSheet, StyleSheetManager} from 'styled-components'\nimport {configureRootComponent, configureApp} from 'common/app'\n-// import {addLocaleData} from 'react-intl'\nimport HtmlComponent from './HtmlComponent'\n// $FlowFixMe\nimport assets from 'webpack-assets'\n@@ -58,9 +56,11 @@ export default async (req: express$Request, res: express$Response) => {\n'Content-Type': 'text/html'\n})\nres.write(beforeAppTag)\n+ res.write(`<div id=\"app\">`)\nstream.pipe(res, {end: false})\nstream.on('end', () => {\n+ res.write('</div>')\nres.write(afterAppTag)\nres.end()\n})\n",
        "date": "30.09.2017 14:22:54",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor SSR index.js to remove unused imports and add missing div tag"
    },
    {
        "msg": "feat(server/i18n): watch locals dir for updates in development\nfeat(server/i18n): watch locals dir for updates in development",
        "diff": "diff --git a/src/server/i18n/index.js b/src/server/i18n/index.js import {readFileSync} from 'fs' // readFile\nimport path from 'path'\nimport {sync as globSync} from 'glob'\n+import chokidar from 'chokidar'\n// import {addLocaleData} from 'react-intl'\nimport enLocaleData from 'react-intl/locale-data/en'\nimport ruLocaleData from 'react-intl/locale-data/ru'\nimport type {i18nConfigObject} from 'types'\n-const translations = globSync('locals/*.json')\n+const getTranslations = () => {\n+ return globSync('locals/*.json')\n.map((filename: string) => [\npath.basename(filename, '.json'),\nreadFileSync(filename, 'utf8')\n@@ -17,6 +19,17 @@ const translations = globSync('locals/*.json')\nacc[locale] = messages\nreturn acc\n}, {})\n+}\n+\n+let translations = getTranslations()\n+if (process.env.NODE_ENV === 'development') {\n+ // re-update locals if they were changed (in development)\n+ const watcher = chokidar.watch('locals/*.json')\n+\n+ watcher.on('all', () => {\n+ translations = getTranslations()\n+ })\n+}\nexport const defaultLanguage = 'en'\nexport const supportedLanguages = ['en', 'ru']\n",
        "date": "30.09.2017 14:23:40",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor i18n index.js to dynamically update translations in development mode"
    },
    {
        "msg": "feat(server/config): add default ssl\nfeat(server/config): add default ssl",
        "diff": "diff --git a/src/server/config/index.js b/src/server/config/index.js import path from 'path'\nimport {readFileSync} from 'fs'\n// If you want quick SSL for prototyping:\n-// import pseudossl from 'pseudossl'\n+// NOTE: you should use own SSL certs in production!\n+let key = ''\n+let cert = ''\n+\n+\n+if (process.env.NODE_ENV === 'development') {\n+ // REMOVE THESE LINES IF YOU HAVE VALID CERT AND KEY FOR DEVELOPMENT\n+ const pseudossl = require('pseudossl')\n+ key = pseudossl.key\n+ cert = pseudossl.cert\n+} else {\n+ key = readFileSync(path.join(__dirname, './ssl/server.key'))\n+ cert = readFileSync(path.join(__dirname, './ssl/server.crt'))\n+}\nexport const serverOptions = {\n- key: readFileSync(path.join(__dirname, './ssl/server.key')),\n- cert: readFileSync(path.join(__dirname, './ssl/server.crt'))\n+ key,\n+ cert\n}\n",
        "date": "30.09.2017 14:24:04",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor SSL certificate handling in server config"
    },
    {
        "msg": "feat(types): add LinkItem type, remove old types\nfeat(types): add LinkItem type, remove old types",
        "diff": "diff --git a/src/common/types/index.js b/src/common/types/index.js // @flow\n-export type PostItem = {\n- title: string,\n- body: string,\n- userId: number,\n- id: number\n-}\n-\n-export type UserItem = {\n- id: number,\n- name: string,\n- username: string,\n- email: string,\n- address: {\n- street: string,\n- suite: string,\n- city: string,\n- zipcode: string,\n- geo: {\n- lat: string,\n- lng: string\n- }\n- },\n- phone: string,\n- website: string,\n- company: {\n- name: string,\n- catchPhrase: string,\n- bs: string\n- }\n+export type LinkItem = {\n+ link: string,\n+ header: string,\n+ desc: string,\n+ icon: string\n}\nexport type RouteItem = {\n",
        "date": "30.09.2017 14:24:25",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Add LinkItem type and remove PostItem and UserItem types"
    },
    {
        "msg": "feat(styles): remove unused styled-components\nfeat(styles): remove unused styled-components",
        "diff": "diff --git a/src/common/styles/base.jsx b/src/common/styles/base.jsx import styled from 'styled-components'\n-export const TextCenter = styled.div`text-align: center;`\n-\n-export const Hidden = elem => {\n- return styled(elem)`\n- display: none;\n- `\n-}\n-\nexport const Spacer = styled.span`flex-grow: 1;`\n",
        "date": "30.09.2017 14:24:40",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Remove unnecessary styled components and add Spacer component"
    },
    {
        "msg": "feat(styles): add more comments in /utils.jsx\nfeat(styles): add more comments in /utils.jsx",
        "diff": "diff --git a/src/common/styles/utils.jsx b/src/common/styles/utils.jsx @@ -6,6 +6,9 @@ const pxToEm = px => {\n}\nconst iWantToUseEm = true\n+// NOTE: This grid don't match SUI's grid.\n+// NOTE: RSUI has <Responsive> element!\n+// You might don't need media template function for styled-components\nconst sizes = _.mapValues(\n{\nxs: 0, // Extra small screen / phone\n@@ -15,13 +18,13 @@ const sizes = _.mapValues(\nxl: 1200 // Extra large screen / wide desktop\n},\n(value, key) => {\n- // NOTE: Please, read more about `em`, before switching to it\n+ // NOTE: Please, read more about `em` before switching\n// https://stackoverflow.com/questions/22228568/switching-to-em-based-media-queries\nreturn iWantToUseEm ? pxToEm(value) : value + 'px'\n}\n)\n-// FIXME: @Metnew: dirty-hardcode version of media template!\n+// FIXME: @Metnew: this block may be rewritten more elegant (like the code below, from off docs)\nexport const media = {\nxs: (...args) => css`\n@media only screen and (max-width: ${sizes.sm}) {\n@@ -66,6 +69,7 @@ export const media = {\n}\n// NOTE: from official docs, but it looks like a black-voodoo-magic\n+// ####\n// // iterate through the sizes and create a media template\n// export const media = Object.keys(sizes).reduce((accumulator, label, i) => {\n// console.log(accumulator, label)\n",
        "date": "30.09.2017 14:25:05",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor media template function and add notes about grid compatibility and <Responsive> element usage."
    },
    {
        "msg": "feat(routing): temporarily remove lazy loading\nfeat(routing): temporarily remove lazy loading",
        "diff": "diff --git a/src/common/routing/routes.js b/src/common/routing/routes.js // @flow\nimport {Route} from 'react-router-dom'\nimport RouteAuth from 'components/addons/RouteAuth'\n+import Dashboard from 'containers/Dashboard'\n+import Links from 'containers/Links'\n+import Login from 'containers/Login'\nimport type {RouteItem} from 'types'\nconst loadLazyComponentFnConstructor = (url: string) => async () => {\n@@ -14,26 +17,25 @@ const loadLazyComponentFnConstructor = (url: string) => async () => {\nreturn loadComponent\n}\n+// FIXME: sidebar routes and app routes should be separated!\nconst routes: Array<RouteItem> = [\n{\npath: '/',\nexact: true,\n- lazy: true,\nicon: 'newspaper',\nname: 'Dashboard',\nsidebarVisible: true,\ntag: RouteAuth,\n- component: loadLazyComponentFnConstructor('Dashboard')\n+ component: Dashboard\n},\n{\n- path: '/users',\n- name: 'Users',\n+ path: '/links',\n+ name: 'Links',\nexact: true,\n- lazy: true,\n- icon: 'users',\n+ icon: 'bookmark',\nsidebarVisible: true,\ntag: RouteAuth,\n- component: loadLazyComponentFnConstructor('Users')\n+ component: Links\n},\n{\nexternal: true,\n@@ -45,17 +47,8 @@ const routes: Array<RouteItem> = [\n{\npath: '/auth',\nname: 'Auth',\n- lazy: true,\ntag: Route,\n- component: loadLazyComponentFnConstructor('Login')\n- },\n- {\n- path: '/users/:id',\n- name: 'User',\n- lazy: true,\n- exact: true,\n- tag: RouteAuth,\n- component: loadLazyComponentFnConstructor('UserItem')\n+ component: Login\n}\n]\n",
        "date": "30.09.2017 14:25:48",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Separate sidebar routes and app routes, add Dashboard, Links, and Login components."
    },
    {
        "msg": "feat(reducers): remove posts, users reducers from `combineReducers`\nfeat(reducers): remove posts, users reducers from `combineReducers`",
        "diff": "diff --git a/src/common/reducers/index.js b/src/common/reducers/index.js @@ -4,12 +4,10 @@ import {routerReducer} from 'react-router-redux'\nimport type {State as AuthState} from 'reducers/auth'\nimport type {State as LayoutState} from 'reducers/layout'\n-import type {State as EntitiesPostsState} from 'reducers/posts'\n-import type {State as EntitiesUsersState} from 'reducers/users'\n+import type {State as EntitiesLinksState} from 'reducers/links'\nimport {layout} from './layout'\n-import {posts} from './posts'\n-import {users} from './users'\n+import {links} from './links'\nimport {auth} from './auth'\n// Root reducer\n@@ -17,12 +15,11 @@ export default combineReducers({\nlayout,\nme: combineReducers({auth}),\nentities: combineReducers({\n- posts,\n- users\n+ links\n}),\nrouting: routerReducer\n})\nexport type GlobalState = {layout: LayoutState} & {me: {auth: AuthState}} & {\n- entities: {posts: EntitiesPostsState, users: EntitiesUsersState}\n+ entities: {links: EntitiesLinksState}\n}\n",
        "date": "30.09.2017 14:32:00",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor reducers to include links instead of posts and users"
    },
    {
        "msg": "feat(Dashboard): remove old redux stuff from Dashboard container\nfeat(Dashboard): remove old redux stuff from Dashboard container",
        "diff": "diff --git a/src/common/containers/Dashboard/index.jsx b/src/common/containers/Dashboard/index.jsx // @flow\nimport React, {Component} from 'react'\nimport {connect} from 'react-redux'\n-import {Loader} from 'semantic-ui-react'\nimport {Helmet} from 'react-helmet'\n-//\nimport DashboardComponent from './components'\n-import {GET_POSTS} from 'actions/posts'\n-import {getEntitiesPostsState} from 'selectors'\n+\nimport type {GlobalState} from 'reducers'\n-type Props = {\n- posts: Object,\n- postsLoaded: boolean,\n- postsLoading: boolean,\n- count: number,\n- getPosts: () => void\n-}\n+type Props = any\nclass Dashboard extends Component {\nprops: Props\n- componentDidMount () {\n- this.props.getPosts()\n- }\n-\nrender () {\n- const {posts, postsLoaded, postsLoading, count} = this.props\nreturn (\n<div>\n<Helmet>\n<title>Noir:Dashboard</title>\n</Helmet>\n- {postsLoaded\n- ? <DashboardComponent\n- {...{posts, postsLoaded, postsLoading, count}}\n- />\n- : <Loader active>Loading...</Loader>}\n+ <DashboardComponent />\n</div>\n)\n}\n}\nfunction mapStateToProps (state: GlobalState) {\n- const postsState = getEntitiesPostsState(state)\n- const postsLoaded = postsState.isLoaded\n- const postsLoading = postsState.isLoading\n- const posts = postsState.entities\n- const {count} = postsState\n- return {\n- posts,\n- postsLoading,\n- postsLoaded,\n- count\n- }\n+ return {}\n}\nfunction mapDispatchToProps (dispatch) {\n- return {\n- getPosts () {\n- dispatch(GET_POSTS())\n- }\n- }\n+ return {}\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard)\n",
        "date": "30.09.2017 14:35:18",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor Dashboard component and remove unnecessary props and actions"
    },
    {
        "msg": "feat(containers/Dashboard): add i18n for Dashboard component\nfeat(containers/Dashboard): add i18n for Dashboard component",
        "diff": "diff --git a/src/common/containers/Dashboard/components/index.jsx b/src/common/containers/Dashboard/components/index.jsx // @flow\nimport React, {Component} from 'react'\n-import {Card, Grid} from 'semantic-ui-react'\n-import _ from 'lodash'\n-import DashboardCardComponent from './DashboardCardComponent'\n-import type {PostItem} from 'types'\n-\n-type Props = {\n- posts: Object,\n- postsLoaded: boolean,\n- postsLoading: boolean,\n- count: number\n-}\n+import {Grid, Header} from 'semantic-ui-react'\n+import {FormattedMessage} from 'react-intl'\nexport default class DashboardComponent extends Component {\n- props: Props\n-\n- shouldComponentUpdate (nextProps: Props) {\n- const {posts} = this.props\n- const nextPosts = nextProps.posts\n- return !_.isEqual(posts, nextPosts)\n- }\n-\nrender () {\n- const {posts, postsLoaded} = this.props\n-\nreturn (\n<Grid columns={1}>\n<Grid.Row centered>\n<Grid.Column width={16}>\n- {postsLoaded &&\n- <Card.Group itemsPerRow={3} doubling stackable>\n- {_.map(posts, (post: PostItem, i) =>\n- <DashboardCardComponent {...post} key={i} />\n- )}\n- </Card.Group>}\n+ <Header as=\"h1\">\n+ <FormattedMessage id=\"Dashboard.h1\" />\n+ </Header>\n+ <Header as=\"h2\">\n+ <FormattedMessage id=\"Dashboard.h2-1\" />\n+ </Header>\n+ <p>\n+ <FormattedMessage id=\"Dashboard.p-1\" />\n+ </p>\n+ <Header as=\"h2\">\n+ <FormattedMessage id=\"Dashboard.h2-2\" />\n+ </Header>\n+ <p>\n+ <FormattedMessage id=\"Dashboard.p-2\" />\n+ </p>\n</Grid.Column>\n</Grid.Row>\n</Grid>\n",
        "date": "30.09.2017 14:39:27",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor DashboardComponent to use semantic-ui-react Grid and Header components, and add internationalization support."
    },
    {
        "msg": "feat(api/links.json): fix links desc\nfeat(api/links.json): fix links desc",
        "diff": "diff --git a/src/server/api/links.json b/src/server/api/links.json \"icon\": \"github\",\n\"header\": \"SSR + Webpack (in development)\",\n\"desc\":\n- \"Step by step guide with working example of hot-reloaded server and client with SSR with Webpack in development.\"\n+ \"Step by step guide with working example of server and client with hot-reloading and SSR with Webpack (in development).\"\n},\n{\n- \"link\": \"https://github.com/Metnew/tiny-universal-example\",\n+ \"link\": \"https://github.com/Metnew/noir\",\n\"icon\": \"bug\",\n- \"header\": \"How to test actions and reducers?\",\n- \"desc\": \"How to test actions and reducers?\"\n+ \"header\": \"Testing\",\n+ \"desc\": \"How to test actions, reducers, components?\"\n},\n{\n\"link\": \"https://github.com/Metnew/noir\",\n\"icon\": \"paint brush\",\n- \"header\": \"Why semantic-ui-react?\"\n+ \"header\": \"Why semantic-ui-react?\",\n+ \"desc\": \"Notes about SUI. Why SUIR is a good (or bad) choise.\"\n},\n{\n\"link\": \"\",\n\"icon\": \"globe\",\n\"header\": \"How i18n works?\",\n- \"desc\": \"i18n configuration and how to customize it in own project\"\n+ \"desc\": \"How i18n is implemented and how to customize it.\"\n},\n{\n\"header\": \"How Webpack is configured?\",\n\"icon\": \"code\",\n\"link\": \"\",\n\"desc\":\n- \"Webpack configuration for server/client in production and development\"\n+ \"Webpack configuration for server/client in production and development.\"\n},\n{\n\"link\": \"\",\n\"icon\": \"terminal\",\n- \"header\": \"npm scripts\",\n- \"desc\": \"npm scripts under the hood and ENV vars\"\n+ \"header\": \"npm scripts and ENV vars\",\n+ \"desc\": \"Docs about every npm script and ENV variable.\"\n},\n{\n\"link\": \"\",\n\"icon\": \"folder\",\n\"header\": \"Folder structure\",\n- \"desc\": \"Why this folder structure and how to adapt it for own project\"\n+ \"desc\": \"Why this folder structure and how to adapt it in own project.\"\n}\n]\n",
        "date": "13.10.2017 16:51:17",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor API links.json for improved clarity and consistency"
    },
    {
        "msg": "feat(jest_config): add enzyme adapter configuration\nfeat(jest_config): add enzyme adapter configuration",
        "diff": "diff --git a/jest_config/setupJest.js b/jest_config/setupJest.js -import 'jest-styled-components'\n+import {configure} from 'enzyme'\n+import Adapter from 'enzyme-adapter-react-16'\nglobal.fetch = require('isomorphic-fetch')\nprocess.env.BASE_API = process.env.BASE_API || 'http://localhost:4000/api/v1'\nprocess.env.BROWSER = false\n+\n+const adapter = new Adapter()\n+configure({adapter})\n",
        "date": "16.10.2017 18:24:46",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Add enzyme configuration and set base API URL"
    },
    {
        "msg": "feat(components/Header): make Header stateless\nfeat(components/Header): make Header stateless",
        "diff": "diff --git a/src/common/components/parts/Header/index.jsx b/src/common/components/parts/Header/index.jsx /**\n* @flow\n*/\n-import React, {Component} from 'react'\n+import React from 'react'\nimport {Icon} from 'semantic-ui-react'\n-import {isEqual} from 'lodash'\n// import {FormattedMessage} from 'react-intl'\nimport {\nStyledHeader,\n@@ -22,15 +21,7 @@ type Props = {\nisMobile: boolean\n}\n-class Header extends Component {\n- props: Props\n- shouldComponentUpdate (nextProps: Props) {\n- return !isEqual(nextProps, this.props)\n- }\n-\n- render () {\n- const {title, toggleSidebar, isLoggedIn, isMobile} = this.props\n-\n+const Header = ({title, toggleSidebar, isLoggedIn, isMobile}: Props) => {\nreturn (\n<Headroom>\n<StyledHeader>\n@@ -48,6 +39,5 @@ class Header extends Component {\n</Headroom>\n)\n}\n-}\nexport default Header\n",
        "date": "18.10.2017 23:40:51",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor Header component to functional component"
    },
    {
        "msg": "feat(components/RouteAuth): add RouteAuth tests\nfeat(components/RouteAuth): add RouteAuth tests",
        "diff": "diff --git a/src/common/components/addons/RouteAuth/index.test.jsx b/src/common/components/addons/RouteAuth/index.test.jsx import React from 'react'\n+import {Route, Redirect} from 'react-router-dom'\nimport RouteAuth from 'components/addons/RouteAuth'\nimport {shallow} from 'enzyme'\n-import toJson from 'enzyme-to-json'\nimport {routes as routing} from 'routing'\nconst accessToInboxOnly = path => {\n@@ -13,25 +13,24 @@ const accessExceptInbox = path => {\nconst sampleRouteItem = routing.filter(a => a.component && a.tag)[0]\n-xdescribe('RouteAuth component', () => {\n- it('creates <Redirect /> if user dont have access', done => {\n+describe('RouteAuth component', () => {\n+ it('creates <Redirect /> if user doesn\\'t have access', () => {\nconst gotRedirect = {\n...sampleRouteItem,\ncanAccess: accessExceptInbox,\npath: '/inbox'\n}\nconst component = shallow(<RouteAuth {...gotRedirect} />)\n- done()\n+ expect(component.equals(<Redirect to=\"/auth\" />)).toBe(true)\n})\n- it('creates component if user have access', done => {\n+ it('creates <Route /> if user has access', () => {\nconst gotComponent = {\n...sampleRouteItem,\ncanAccess: accessToInboxOnly,\npath: '/inbox'\n}\nconst component = shallow(<RouteAuth {...gotComponent} />)\n- console.log(component)\n- done()\n+ expect(component.equals(<Route {...gotComponent} />)).toBe(true)\n})\n})\n",
        "date": "18.10.2017 23:41:45",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor RouteAuth component tests and update access check messages"
    },
    {
        "msg": "feat(api/LocalStorateCookiesSvc): remove store2, add comments\nfeat(api/LocalStorateCookiesSvc): remove store2 from core functions and\ncomment import of store2, add comments",
        "diff": "diff --git a/src/common/api/LocalStorageCookiesSvc/index.js b/src/common/api/LocalStorageCookiesSvc/index.js // @flow\n-import * as store from 'store2'\nimport Cookies from 'js-cookie'\n+// By default, we don't use localStorage, but store2 is already installed\n+// But we use redux-persist (syncs localStorage with redux state)\n+// import store from 'store2'\nimport decodeJWT from 'jwt-decode'\nexport const JWT_TOKEN = 'JWT_TOKEN'\nexport function getLocalToken (): string | null {\n- return store.get(JWT_TOKEN) || Cookies.get(JWT_TOKEN)\n+ return Cookies.get(JWT_TOKEN)\n}\nexport function resetLocalToken () {\n- store.remove(JWT_TOKEN)\nCookies.remove(JWT_TOKEN)\n}\nexport function setLocalToken (token: string) {\n- store.set(JWT_TOKEN, token)\nCookies.set(JWT_TOKEN, token, {expires: 365})\n}\n",
        "date": "18.10.2017 23:48:25",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor LocalStorageCookiesSvc to use Cookies instead of store2"
    },
    {
        "msg": "feat(actons/auth): add nock in tests\nfeat(actons/auth): add nock in tests",
        "diff": "diff --git a/src/common/actions/auth/index.test.js b/src/common/actions/auth/index.test.js import configureMockStore from 'redux-mock-store'\nimport thunk from 'redux-thunk'\n+import nock from 'nock'\n// Import all redux actions\nimport {\nLOGIN_AUTH_SUCCESS,\n@@ -17,6 +18,7 @@ const middlewares = [thunk]\nconst mockStore = configureMockStore(middlewares)\nconst loginPending = {\n+ meta: null,\ntype: LOGIN_AUTH_PENDING\n}\n@@ -25,15 +27,20 @@ describe('Auth actions', () => {\n* @arg {Function} done - is a callback that you need to execute,\n* If your action performing async task (e.g. request to API)\n*/\n- xtest('creates LOGIN_AUTH_SUCCESS when LOGIN_AUTH was successful', done => {\n+ test('creates LOGIN_AUTH_SUCCESS when LOGIN_AUTH was successful', done => {\n+ const successPayload = {\n+ token: 'nothing'\n+ }\n+\n+ nock('http://localhost:3000/api/v1')\n+ .post('/auth')\n+ .reply(200, successPayload)\n// Create expected output of your action\nconst expectedActions = [\nloginPending,\n{\ntype: LOGIN_AUTH_SUCCESS,\n- payload: {\n- token: 'nothing'\n- }\n+ payload: successPayload\n}\n]\n// Create store for testing\n@@ -47,17 +54,25 @@ describe('Auth actions', () => {\n})\n})\n- xtest('creates LOGIN_AUTH_FAIL when LOGIN_AUTH was unsuccessful', done => {\n+ test('creates LOGIN_AUTH_FAIL when LOGIN_AUTH was unsuccessful', done => {\n// Create expected output of your action\n+ const errorPayload = {\n+ errors: {}\n+ }\n+\nconst expectedActions = [\nloginPending,\n{\ntype: LOGIN_AUTH_FAIL,\n- payload: {\n- errors: {}\n- }\n+ error: true,\n+ meta: null,\n+ payload: errorPayload\n}\n]\n+\n+ nock('http://localhost:3000/api/v1')\n+ .post('/auth')\n+ .reply(400, errorPayload)\n// Create store for testing\nconst store = mockStore({})\n// Dispatch action\n",
        "date": "18.10.2017 23:49:50",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Add nock for API mocking in auth action tests"
    },
    {
        "msg": "feat(actons/auth): add nock in tests, fix tests\nfeat(actons/auth): add nock in tests, fix tests",
        "diff": "diff --git a/src/common/actions/links/index.test.js b/src/common/actions/links/index.test.js @@ -12,11 +12,12 @@ const middlewares = [thunk]\nconst mockStore = configureMockStore(middlewares)\nconst pending = {\n+ meta: null,\ntype: GET_LINKS_PENDING\n}\n-describe('USERS actions', () => {\n- it('creates GET_LINKS_SUCCESS when GET_LINKS was successful', async done => {\n+describe('Links actions', () => {\n+ it('creates GET_LINKS_SUCCESS when GET_LINKS was successful', done => {\nconst store = mockStore({})\nconst samplePayload = [\n{\n@@ -24,30 +25,38 @@ describe('USERS actions', () => {\nheader: 'string'\n}\n]\n- nock('https://github.com/Metnew')\n- .get('/noir/*')\n+ nock('http://localhost:3000/api/v1')\n+ .get('/links')\n.reply(200, samplePayload)\nreturn store.dispatch(GET_LINKS()).then(res => {\nconst actions = store.getActions()\nconst success = {\n+ meta: null,\ntype: GET_LINKS_SUCCESS,\npayload: samplePayload\n}\nconst expectedActions = [pending, success]\n- expect(actions).toMatchObject(expectedActions)\n+ expect(actions).toEqual(expectedActions)\ndone()\n})\n})\n- xit('creates GET_LINKS_FAIL when GET_LINKS was unsuccessful', done => {\n+ it('creates GET_LINKS_FAIL when GET_LINKS was unsuccessful', async done => {\n+ const errorPayload = {errors: {}}\n+ nock('http://localhost:3000/api/v1')\n+ .get('/links')\n+ .reply(400, errorPayload)\n+\nconst store = mockStore({})\n- return store.dispatch(GET_LINKS(1)).then(res => {\n+ await store.dispatch(GET_LINKS())\nconst actions = store.getActions()\nconst fail = {\n+ meta: null,\ntype: GET_LINKS_FAIL,\n- payload: {}\n+ error: true,\n+ payload: errorPayload\n}\nconst expectedActions = [pending, fail]\n@@ -55,4 +64,3 @@ describe('USERS actions', () => {\ndone()\n})\n})\n-})\n",
        "date": "18.10.2017 23:50:09",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor links actions and update test cases for GET_LINKS_SUCCESS and GET_LINKS_FAIL scenarios"
    },
    {
        "msg": "feat(actons/utils): disable \"FINALLY\", \"BEFORE_PENDING\" in awral\nfeat(actons/utils): disable \"FINALLY\", \"BEFORE_PENDING\" in awral",
        "diff": "diff --git a/src/common/actions/utils/index.js b/src/common/actions/utils/index.js // @flow\n-import Awral from 'awral'\n+import Awral from './awral'\n/**\n* `parseJSON()` adds property \"ok\"\n* that identicates that response is OK\n@@ -12,6 +12,11 @@ import Awral from 'awral'\nconst check = (result: Object = {ok: false}): boolean => result.ok\nconst beforeCheck = a => a\nconst afterCheck = a => a.data\n+// disable dispatch of GET_LINKS_FINALLY\n+const finallyAction = null\n+// disable dispatch of GET_LINKS_BEFORE_PENDING\n+const beforePending = null\n+\n/**\nCreate default Awral\nAwral is not recommended for production usage now\n@@ -20,4 +25,4 @@ const afterCheck = a => a.data\nAwral is 880B gzipped!\n{@link https://github.com/Metnew/awral}\n*/\n-export const awral = Awral.of({check, beforeCheck, afterCheck})\n+export const awral = Awral.of({check, beforeCheck, afterCheck, finally: finallyAction, beforePending})\n",
        "date": "18.10.2017 23:50:57",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Disable dispatch of GET_LINKS_FINALLY and GET_LINKS_BEFORE_PENDING in awral creation."
    },
    {
        "msg": "feat(package.json): install\ninstall",
        "diff": "diff --git a/package.json b/package.json \"main\": \"src/client/index.jsx\",\n\"description\": \"Advanced universal React starter built with a scale in mind.\",\n\"dependencies\": {\n- \"awral\": \"^1.1.2\",\n+ \"awral\": \"^1.2.0\",\n\"body-parser\": \"^1.18.2\",\n\"chalk\": \"^2.2.0\",\n\"chokidar\": \"^1.7.0\",\n",
        "date": "19.10.2017 00:20:46",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Update awral dependency to version 1.2.0"
    },
    {
        "msg": "feat(server/ssr): add Lazy loading with SSR\nfeat(server/ssr): add lazy loading with SSR",
        "diff": "diff --git a/src/server/ssr/index.js b/src/server/ssr/index.js @@ -13,6 +13,7 @@ import assets from 'webpack-assets'\n// $FlowFixMe\nimport faviconsAssets from 'favicons-assets'\nimport getI18nData from 'server/i18n'\n+import {matchPath} from 'react-router'\nexport default async (req: express$Request, res: express$Response) => {\nconst {isLoggedIn, language} = req.user\n@@ -50,6 +51,18 @@ export default async (req: express$Request, res: express$Response) => {\ninitialState: preloadedState,\ni18n\n}\n+\n+ // FIXME: how to replace `let` and `for`?\n+ let lazyRoutes = routes.filter(a => a.lazy)\n+ for (var i = 0; i < lazyRoutes.length; i++) {\n+ let route = routes[i]\n+ if (matchPath(req.url, route)) {\n+ route.component = await routes[i].component().default\n+ route.lazy = false\n+ break\n+ }\n+ }\n+\nconst {beforeAppTag, afterAppTag} = HtmlComponent(props)\nres.writeHead(200, {\n",
        "date": "30.10.2017 00:37:17",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Fix lazy loading of routes in SSR index.js"
    },
    {
        "msg": "feat(server): add Raven, disable x-powered-by",
        "diff": "diff --git a/src/server/middlewares/index.js b/src/server/middlewares/index.js @@ -9,9 +9,16 @@ import cookieParser from 'cookie-parser'\nimport bodyParser from 'body-parser'\nimport morgan from 'morgan'\nimport useragent from 'express-useragent'\n+import Raven from 'raven'\nimport authMiddleware from './auth'\nexport default (app: express$Application): express$Application => {\n+ // Must configure Raven before doing anything else with it\n+ Raven.config(process.env.SENTRY_DSN).install()\n+ // The request handler must be the first middleware on the app\n+ app.use(Raven.requestHandler())\n+ // remove x-powered-by\n+ app.disable('x-powered-by')\n// Add express stuff\napp.use(helmet())\napp.use(compression())\n@@ -25,6 +32,23 @@ export default (app: express$Application): express$Application => {\napp.use(bodyParser.json())\napp.use(useragent.express())\napp.use(authMiddleware)\n+ // The error handler must be before any other error middleware\n+ app.use(Raven.errorHandler())\n+ // Optional fallthrough error handler\n+ // eslint-disable-next-line\n+ app.use(function onError(\n+ err,\n+ req: express$Request,\n+ res: express$Response,\n+ next: express$NextFunction\n+ ) {\n+ // NOTE: @Metnew: line disabled by ESlint, because err is already handled by sentry\n+ //\n+ // The error id is attached to `res.sentry` to be returned\n+ // and optionally displayed to the user for support.\n+ res.statusCode = 500\n+ res.end(res.sentry + '\\n')\n+ })\nreturn app\n}\n",
        "date": "30.10.2017 00:37:59",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Add Raven error monitoring middleware and error handling in server middlewares"
    },
    {
        "msg": "feat(routing): make all routes lazy\nfeat(routing): make all routes lazy",
        "diff": "diff --git a/src/common/routing/routes.js b/src/common/routing/routes.js // @flow\nimport {Route} from 'react-router-dom'\nimport RouteAuth from 'components/addons/RouteAuth'\n-import Dashboard from 'containers/Dashboard'\n-import Login from 'containers/Login'\n+// import Dashboard from 'containers/Dashboard'\n+// import Login from 'containers/Login'\nimport type {RouteItem} from 'types'\nconst loadLazyComponentFnConstructor = (url: string) => async () => {\n@@ -24,8 +24,9 @@ const routes: Array<RouteItem> = [\nicon: 'newspaper',\nname: 'Dashboard',\nsidebarVisible: true,\n+ lazy: true,\ntag: RouteAuth,\n- component: Dashboard\n+ component: loadLazyComponentFnConstructor('Dashboard')\n},\n{\npath: '/links',\n@@ -47,8 +48,9 @@ const routes: Array<RouteItem> = [\n{\npath: '/auth',\nname: 'Auth',\n+ lazy: true,\ntag: Route,\n- component: Login\n+ component: loadLazyComponentFnConstructor('Login')\n}\n]\n",
        "date": "30.10.2017 02:15:31",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor routes to lazy load Dashboard and Login components."
    },
    {
        "msg": "feat(addons/RoutingWrapper): remove mentions about `lazy`\nfeat(addons/RoutingWrapper): remove mentions about `lazy`",
        "diff": "diff --git a/src/common/components/addons/RoutingWrapper/index.jsx b/src/common/components/addons/RoutingWrapper/index.jsx */\nimport React, {Component} from 'react'\nimport {Switch, Redirect} from 'react-router-dom'\n-import LazyLoad from 'components/addons/LazyLoad'\nimport {getAuthState} from 'selectors'\nimport type {RouteItem} from 'types'\n@@ -44,30 +43,19 @@ export default class RoutingWrapper extends Component {\nrender () {\nconst {routes} = this.props\nconst onlyRoutes = routes.filter(\n- a => a.tag || a.component || a.lazy || !a.external\n+ a => a.tag || a.component || !a.external\n)\n// render components that are inside Switch (main view)\nconst routesRendered = onlyRoutes.map((a: RouteItem, i) => {\n// get tag for Route.\n- // is it \"RouteAuth\" `protected route` or \"Route\"?\n+ // is it \"RouteAuth\" (e.g. `protected route`) or \"Route\"?\nconst Tag = a.tag\n- const {path, exact, strict, component, lazy} = a\n- // can visitor access this route?\n- // this function determinates is user allowed to visit route\n+ const {path, exact, strict, component} = a\n+ // Determinates is user allowed to visit certain route\nconst canAccess = this.authCheck.bind(this)\n- // select only props that we need\n- const b = {path, exact, strict, canAccess}\n+ // Select only props that we need\n+ const b = {canAccess, path, exact, strict, component}\n- if (lazy) {\n- const routeToRenderLazy = (\n- <Tag {...b} key={i}>\n- <LazyLoad component={component} />\n- </Tag>\n- )\n- return routeToRenderLazy\n- }\n-\n- // it can be Route or RouteAuth\nreturn <Tag key={i} {...b} component={component} />\n})\n",
        "date": "03.11.2017 08:51:58",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor RoutingWrapper component to remove LazyLoad functionality and simplify route rendering."
    },
    {
        "msg": "feat(routing): add `asyncComponent` from `react-async-component`\nfeat(routing): add `asyncComponent` from `react-async-component`",
        "diff": "diff --git a/src/common/routing/routes.js b/src/common/routing/routes.js // @flow\n+import React from 'react'\nimport {Route} from 'react-router-dom'\nimport RouteAuth from 'components/addons/RouteAuth'\n-// import Dashboard from 'containers/Dashboard'\n-// import Login from 'containers/Login'\n+import {asyncComponent} from 'react-async-component'\n+import {Loader} from 'semantic-ui-react'\nimport type {RouteItem} from 'types'\n-const loadLazyComponentFnConstructor = (url: string) => async () => {\n+const importCreator = (url: string) => async () => {\n// NOTE: there isn't any duplication here\n// Read Webpack docs about code-splitting for more info.\nif (process.env.BROWSER) {\n- const loadComponent = await import(/* webpackMode: \"lazy\", webpackChunkName: \"[request].lazy\" */ `containers/${url}/index.jsx`)\n- return loadComponent\n+ const resolve = import(/* webpackMode: \"lazy\", webpackChunkName: \"[request].lazy\" */ `containers/${url}/index.jsx`)\n+ return resolve\n}\n- const loadComponent = await import(/* webpackMode: \"eager\" */ `containers/${url}/index.jsx`)\n- return loadComponent\n+ const resolve = import(/* webpackMode: \"eager\" */ `containers/${url}/index.jsx`)\n+ return resolve\n+}\n+\n+const asyncComponentCreator = url => {\n+ const resolve = importCreator(url)\n+ return asyncComponent({\n+ resolve,\n+ LoadingComponent () {\n+ return <Loader>Loading...</Loader>\n+ }\n+ })\n}\n// FIXME: sidebar routes and app routes should be separated!\n@@ -24,19 +35,17 @@ const routes: Array<RouteItem> = [\nicon: 'newspaper',\nname: 'Dashboard',\nsidebarVisible: true,\n- lazy: true,\ntag: RouteAuth,\n- component: loadLazyComponentFnConstructor('Dashboard')\n+ component: asyncComponentCreator('Dashboard')\n},\n{\npath: '/links',\nname: 'Links',\nexact: true,\n- lazy: true,\nicon: 'bookmark',\nsidebarVisible: true,\ntag: RouteAuth,\n- component: loadLazyComponentFnConstructor('Links')\n+ component: asyncComponentCreator('Links')\n},\n{\nexternal: true,\n@@ -48,9 +57,8 @@ const routes: Array<RouteItem> = [\n{\npath: '/auth',\nname: 'Auth',\n- lazy: true,\ntag: Route,\n- component: loadLazyComponentFnConstructor('Login')\n+ component: asyncComponentCreator('Login')\n}\n]\n",
        "date": "03.11.2017 08:52:53",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor routes.js to use asyncComponent for lazy loading components and improve code readability."
    },
    {
        "msg": "feat(package): install form-data\nfeat(package): install form-data",
        "diff": "diff --git a/package.json b/package.json \"favicons-webpack-plugin\": \"0.0.7\",\n\"file-loader\": \"^1.1.5\",\n\"flow-bin\": \"^0.57.3\",\n+ \"form-data\": \"^2.3.1\",\n\"friendly-errors-webpack-plugin\": \"^1.6.1\",\n\"html-webpack-plugin\": \"^2.30.1\",\n\"husky\": \"^0.14.3\",\n",
        "date": "03.11.2017 16:24:43",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Add form-data package to dependencies"
    },
    {
        "msg": "feat(app): use `getRoutes()` instead of `routes`\nfeat(app): use `getRoutes()` instead of `routes`",
        "diff": "diff --git a/src/common/app/configure_app.js b/src/common/app/configure_app.js @@ -5,7 +5,7 @@ import {createStore, applyMiddleware, compose} from 'redux'\nimport {routerMiddleware} from 'react-router-redux'\n// // Application\nimport rootReducer from 'reducers'\n-import {history, routes} from 'routing'\n+import {history, getRoutes} from 'routing'\n//\n/**\n* Configure application store\n@@ -36,6 +36,7 @@ const configureStore = (initialState: Object) => {\n* @return {Object} Object containting configured store, routes, history\n*/\nexport default (initialState: Object) => {\n+ const routes = getRoutes()\nconst store = configureStore(initialState)\nreturn {\nstore,\n",
        "date": "03.11.2017 16:25:09",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor routing import in configure_app.js"
    },
    {
        "msg": "feat(RoutingWrapper): use `getRouterRoutes()` instead of routes\nfeat(RoutingWrapper): use `getRouterRoutes()` instead of routes",
        "diff": "diff --git a/src/common/components/addons/RoutingWrapper/index.jsx b/src/common/components/addons/RoutingWrapper/index.jsx @@ -42,27 +42,22 @@ export default class RoutingWrapper extends Component {\nrender () {\nconst {routes} = this.props\n- const onlyRoutes = routes.filter(\n- a => a.tag || a.component || !a.external\n- )\n// render components that are inside Switch (main view)\n- const routesRendered = onlyRoutes.map((a: RouteItem, i) => {\n- // get tag for Route.\n- // is it \"RouteAuth\" (e.g. `protected route`) or \"Route\"?\n+ const routesRendered = routes.map((a: RouteItem, i) => {\n+ // Get tag for Route.\n+ // Is it \"RouteAuth\" (e.g. `protected route`) or \"Route\"?\nconst Tag = a.tag\n- const {path, exact, strict, component} = a\n// Determinates is user allowed to visit certain route\nconst canAccess = this.authCheck.bind(this)\n// Select only props that we need\n- const b = {canAccess, path, exact, strict, component}\n+ const b = {canAccess, ...a}\n- return <Tag key={i} {...b} component={component} />\n+ return <Tag key={i} {...b} />\n})\nreturn (\n<Switch>\n{routesRendered}\n- <Redirect to=\"/\" />\n</Switch>\n)\n}\n",
        "date": "03.11.2017 16:26:46",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor RoutingWrapper component to simplify route rendering and props passing."
    },
    {
        "msg": "feat(reducers/links): add count property\nfeat(reducers/links): add count property",
        "diff": "diff --git a/src/common/reducers/links/index.js b/src/common/reducers/links/index.js @@ -23,7 +23,8 @@ export const initialState: State = {\nentities: [],\nerrors: {},\nisLoading: false,\n- isLoaded: false\n+ isLoaded: false,\n+ count: 0\n}\nexport function links (state: State = initialState, action: Action): State {\n@@ -38,11 +39,13 @@ export function links (state: State = initialState, action: Action): State {\n}\ncase GET_LINKS_SUCCESS: {\nconst entities = action.payload\n+ const count = entities.length\nreturn {\n...state,\nisLoaded: true,\nisLoading: false,\n- entities\n+ entities,\n+ count\n}\n}\ncase GET_LINKS_FAIL: {\n@@ -51,7 +54,9 @@ export function links (state: State = initialState, action: Action): State {\n...state,\nerrors,\nisLoaded: true,\n- isLoading: false\n+ isLoading: false,\n+ entities: [],\n+ count: 0\n}\n}\ndefault:\n",
        "date": "03.11.2017 16:32:11",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Add count property to links reducer state and update state accordingly"
    },
    {
        "msg": "feat(App): add `max-height: 100% - 72px` for MainLayout\nfeat(App): add `max-height: 100% - 72px` for MainLayout",
        "diff": "diff --git a/src/common/containers/App/style.jsx b/src/common/containers/App/style.jsx @@ -7,15 +7,15 @@ export const PageLayout = styled.div`height: 100%;`\nexport const MainLayout = styled.div`\ndisplay: flex;\nflex-direction: column;\n- min-height: calc(100% - 65px);\ncolor: ${props => props.theme.primaryTextColor};\nbackground-color: ${props => props.theme.primaryColorText};\n- ${media.lg`\n- min-height: calc(100% - 72px);\n- `};\n+ ${'100% - Header height - Footer height'};\n+ height: 100%;\n+ max-height: calc(100% - 72px);\n`\nexport const MainContent = styled.main`\n+ height: 100%;\ndisplay: flex;\nflex-grow: 1;\npadding-left: 1rem;\n@@ -25,6 +25,7 @@ export const MainContent = styled.main`\n// ${'' /* height: 100%; */}\nexport const SidebarSemanticPusherStyled = styled(Sidebar.Pusher)`\n-webkit-overflow-scrolling: touch;\n+ ${''}\n::-webkit-scrollbar {\nwidth: 0px!important;\n@@ -40,6 +41,7 @@ export const SidebarSemanticPushableStyled = styled(Sidebar.Pushable)`\n// Margin - just to fill empty space\nexport const MainContainer = styled(Container)`\n+ height: 100%;\nmargin-top: 2em;\nmargin-bottom: 1em;\n",
        "date": "03.11.2017 16:33:22",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor MainLayout and MainContainer styles to adjust height and max-height properties."
    },
    {
        "msg": "feat(routing): add asyncComponent, routingFnCreator,\nfeat(routing): add asyncComponent, routingFnCreator,",
        "diff": "diff --git a/src/common/routing/routes.js b/src/common/routing/routes.js @@ -3,11 +3,12 @@ import React from 'react'\nimport {Route} from 'react-router-dom'\nimport RouteAuth from 'components/addons/RouteAuth'\nimport {asyncComponent} from 'react-async-component'\n-import {Loader} from 'semantic-ui-react'\n+import {Loader, Dimmer, Header, Icon} from 'semantic-ui-react'\n+import _ from 'lodash'\nimport type {RouteItem} from 'types'\n+function asyncComponentCreator (url) {\nconst importCreator = (url: string) => async () => {\n- // NOTE: there isn't any duplication here\n// Read Webpack docs about code-splitting for more info.\nif (process.env.BROWSER) {\nconst resolve = import(/* webpackMode: \"lazy\", webpackChunkName: \"[request].lazy\" */ `containers/${url}/index.jsx`)\n@@ -17,17 +18,35 @@ const importCreator = (url: string) => async () => {\nreturn resolve\n}\n-const asyncComponentCreator = url => {\n- const resolve = importCreator(url)\nreturn asyncComponent({\n- resolve,\n+ resolve: importCreator(url),\nLoadingComponent () {\n- return <Loader>Loading...</Loader>\n- }\n+ return (\n+ <Dimmer active>\n+ <Loader size=\"large\" active>\n+ Loading page...\n+ </Loader>\n+ </Dimmer>\n+ )\n+ },\n+ ErrorComponent () {\n+ return (\n+ <Dimmer active>\n+ <Header inverted as=\"h2\" icon textAlign=\"center\">\n+ <Icon name=\"refresh\" />\n+ Refresh\n+ <Header.Subheader>Got error while loading page.</Header.Subheader>\n+ </Header>\n+ </Dimmer>\n+ )\n+ },\n+ autoResolveES2015Default: true,\n+ env: process.env.BROWSER ? 'browser' : 'node',\n+ serverMode: 'resolve'\n})\n}\n-// FIXME: sidebar routes and app routes should be separated!\n+function routingFnCreator (useFor: 'sidebar' | 'routing' | 'all' = 'all') {\nconst routes: Array<RouteItem> = [\n{\npath: '/',\n@@ -57,9 +76,41 @@ const routes: Array<RouteItem> = [\n{\npath: '/auth',\nname: 'Auth',\n+ exact: true,\ntag: Route,\ncomponent: asyncComponentCreator('Login')\n}\n+ // find the way to add/remove routes conditionally\n+ // {\n+ // name: '404',\n+ // tag: RouteAuth,\n+ // component: asyncComponentCreator('NotFound')\n+ // }\n]\n-export default routes\n+ const fns = {\n+ // Returns routing for sidebar menu\n+ sidebar (x: Array<RouteItem> = routes) {\n+ return x\n+ .filter(a => a.sidebarVisible)\n+ .map(a =>\n+ _.pick(a, ['path', 'name', 'icon', 'external', 'strict', 'exact'])\n+ )\n+ },\n+ // Returns routing for React-Router\n+ routing (x: Array<RouteItem> = routes) {\n+ return x\n+ .filter(a => !a.sidebarVisible)\n+ .map(a => _.pick(a, ['path', 'name', 'strict', 'exact', 'component', 'tag']))\n+ },\n+ all () {\n+ return routes\n+ }\n+ }\n+\n+ return fns[useFor]\n+}\n+\n+export const getRoutes = routingFnCreator()\n+export const getSidebarRoutes = routingFnCreator('sidebar')\n+export const getRouterRoutes = routingFnCreator('routing')\n",
        "date": "03.11.2017 16:34:02",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor routes.js to include additional components and functions for dynamic routing."
    },
    {
        "msg": "feat(Links): add isLinksLoaded, get links only if links aren't loaded\nfeat(Links): add isLinksLoaded, get links only if links aren't loaded",
        "diff": "diff --git a/src/common/containers/Links/index.jsx b/src/common/containers/Links/index.jsx @@ -13,14 +13,19 @@ import type {GlobalState} from 'reducers'\ntype Props = {\nlinks: Object,\ngetLinks: () => void,\n- isLinksLoading: boolean\n+ isLinksLoading: boolean,\n+ isLinksLoaded: boolean\n}\nclass Links extends Component {\nprops: Props\n+\ncomponentDidMount () {\n+ const {isLinksLoaded} = this.props\n+ if (!isLinksLoaded) {\nthis.getLinks()\n}\n+ }\ngetLinks () {\nthis.props.getLinks()\n@@ -34,7 +39,7 @@ class Links extends Component {\n<title>Noir:Links</title>\n</Helmet>\n{isLinksLoading ? (\n- <Loader active>Loading...</Loader>\n+ <Loader active>Loading data...</Loader>\n) : (\n<LinksComponent links={links} />\n)}\n@@ -47,8 +52,8 @@ function mapStateToProps (state: GlobalState) {\nconst linksState = getEntitiesLinksState(state)\nconst links = linksState.entities\nconst isLinksLoading = linksState.isLoading\n-\n- return {links, isLinksLoading}\n+ const isLinksLoaded = linksState.isLoaded\n+ return {links, isLinksLoading, isLinksLoaded}\n}\nconst mapDispatchToProps = dispatch => ({\n",
        "date": "03.11.2017 16:36:40",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Add isLinksLoaded prop and check if links are already loaded before fetching them. Update Loader message."
    },
    {
        "msg": "feat(client): add async-component and async-bootstrapper\nfeat(client): add async-component and async-bootstrapper",
        "diff": "diff --git a/src/client/index.jsx b/src/client/index.jsx @@ -27,7 +27,10 @@ import 'semantic-ui-css/components/statistic.css'\nimport 'promise-polyfill'\nimport 'isomorphic-fetch'\n// Application\n+import React from 'react'\nimport {hydrate} from 'react-dom'\n+import {AsyncComponentProvider} from 'react-async-component'\n+import asyncBootstrapper from 'react-async-bootstrapper'\nimport {configureApp, configureRootComponent} from 'common/app'\nimport type {GlobalState} from 'reducers'\nimport type {i18nConfigObject} from 'types'\n@@ -39,7 +42,8 @@ if (process.env.NODE_ENV === 'production') {\nconst initialState: GlobalState = window.__INITIAL_STATE__ || {}\nconst i18n: i18nConfigObject = window.__I18N__ || {}\n-// NOTE: V8 doesn't optimize code with `delete`\n+const asyncState: Object = window.__ASYNC_STATE__ || {}\n+// NOTE: V8 doesn't optimize `delete`\n// delete window.__INITIAL_STATE__\nconst {store, routes, history} = configureApp(initialState)\nconst RootComponent = configureRootComponent({\n@@ -49,7 +53,16 @@ const RootComponent = configureRootComponent({\ni18n\n})\n-hydrate(RootComponent, document.getElementById('app'))\n+const app = (\n+ <AsyncComponentProvider rehydrateState={asyncState}>\n+ {RootComponent}\n+ </AsyncComponentProvider>\n+)\n+\n+asyncBootstrapper(app).then(() => {\n+ console.log('FROM SERVER:', document.getElementById('app').innerHTML)\n+ hydrate(app, document.getElementById('app'))\n+})\nif (module.hot) {\nmodule.hot.accept()\n",
        "date": "03.11.2017 16:37:44",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor client index.jsx to use AsyncComponentProvider and asyncBootstrapper for server-side rendering."
    },
    {
        "msg": "feat(styles): duplicate some styles to make SSR result nicer\nfeat(styles): duplicate some styles to make SSR result nicer",
        "diff": "diff --git a/src/common/styles/global.jsx b/src/common/styles/global.jsx @@ -5,6 +5,26 @@ injectGlobal`\nbox-sizing: border-box;\n}\n+ body {\n+ margin: 0;\n+ padding: 0;\n+ overflow-x: hidden;\n+ min-width: 320px;\n+ background: white;\n+ font-family: 'Lato', 'Helvetica Neue', Arial, Helvetica, sans-serif;\n+ font-size: 14px;\n+ line-height: 1.4285em;\n+ color: rgba(0, 0, 0, 0.87);\n+ }\n+\n+ .pushable {\n+ height: 100%;\n+ overflow-x: hidden;\n+ padding: 0em !important;\n+ -webkit-transform: translate3d(0, 0, 0);\n+ transform: translate3d(0, 0, 0);\n+ }\n+\n${''/* body ::-webkit-scrollbar {\nwidth: 0;\n}\n",
        "date": "03.11.2017 16:38:10",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Update global styles for body and pushable elements"
    },
    {
        "msg": "feat(server/ssr): add async-component, async-bootstrapper\nfeat(server/ssr): add async-component, async-bootstrapper",
        "diff": "diff --git a/src/server/ssr/index.js b/src/server/ssr/index.js */\nimport React from 'react'\nimport chalk from 'chalk'\n+import _ from 'lodash'\nimport {renderToNodeStream} from 'react-dom/server'\nimport {ServerStyleSheet, StyleSheetManager} from 'styled-components'\nimport {configureRootComponent, configureApp} from 'common/app'\n+import asyncBootstrapper from 'react-async-bootstrapper'\n+import {AsyncComponentProvider, createAsyncContext} from 'react-async-component'\nimport HtmlComponent from './HtmlComponent'\n// $FlowFixMe\nimport assets from 'webpack-assets'\n@@ -36,45 +39,48 @@ export default async (req: express$Request, res: express$Response) => {\ni18n,\nSSR: {location, context}\n})\n- const stream = renderToNodeStream(\n+ const asyncContext = createAsyncContext()\n+\n+ const app = (\n+ <AsyncComponentProvider asyncContext={asyncContext}>\n<StyleSheetManager sheet={sheet.instance}>\n{RootComponent}\n</StyleSheetManager>\n+ </AsyncComponentProvider>\n)\n+ // console.log(_.find(routes, a => matchPath(req.url, a)))\n+ const noRequestURLMatch = !!_.find(routes, a => matchPath(req.url, a))\n+\n+ asyncBootstrapper(app).then(() => {\n+ const appStream = renderToNodeStream(app)\nconst css: string = sheet.getStyleTags()\nconst preloadedState: Object = store.getState()\n+\n+ const asyncState = asyncContext.getState()\nconst props = {\ncss,\nassets,\nfaviconsAssets,\n+ asyncState,\ninitialState: preloadedState,\ni18n\n}\n- // FIXME: how to replace `let` and `for`?\n- let lazyRoutes = routes.filter(a => a.lazy)\n- for (var i = 0; i < lazyRoutes.length; i++) {\n- let route = routes[i]\n- if (matchPath(req.url, route)) {\n- route.component = await routes[i].component().default\n- route.lazy = false\n- break\n- }\n- }\n-\nconst {beforeAppTag, afterAppTag} = HtmlComponent(props)\n+ const responseStatusCode = noRequestURLMatch ? 404 : 200\n- res.writeHead(200, {\n+ res.writeHead(responseStatusCode, {\n'Content-Type': 'text/html'\n})\nres.write(beforeAppTag)\nres.write(`<div id=\"app\">`)\n- stream.pipe(res, {end: false})\n+ appStream.pipe(res, {end: false})\n- stream.on('end', () => {\n+ appStream.on('end', () => {\nres.write('</div>')\nres.write(afterAppTag)\nres.end()\n})\n+ })\n}\n",
        "date": "03.11.2017 16:50:33",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Add async bootstrapper and async component provider for SSR rendering"
    },
    {
        "msg": "feat(server): resolve assets and faviconsAssets async using `getStats()`\nfeat(server): resolve assets and faviconsAssets async using `getStats()`",
        "diff": "diff --git a/src/server/ssr/index.js b/src/server/ssr/index.js @@ -11,12 +11,16 @@ import {configureRootComponent, configureApp} from 'common/app'\nimport asyncBootstrapper from 'react-async-bootstrapper'\nimport {AsyncComponentProvider, createAsyncContext} from 'react-async-component'\nimport HTMLComponent from './HTMLComponent'\n-// $FlowFixMe\n-import assets from 'webpack-assets'\n-// $FlowFixMe\n-import faviconsAssets from 'favicons-assets'\nimport getI18nData from 'server/i18n'\nimport {matchPath} from 'react-router'\n+import getStats from './stats'\n+\n+// it's better to define these objs in global scope (less memory consumption)\n+let {assets, faviconsAssets} = {}\n+getStats().then(result => {\n+ assets = result.assets\n+ faviconsAssets = result.faviconsAssets\n+})\nexport default async (req: express$Request, res: express$Response) => {\nconst {isLoggedIn, language} = req.user\n",
        "date": "06.11.2017 22:03:03",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor SSR index.js to define assets and faviconsAssets in global scope for better memory consumption"
    },
    {
        "msg": "feat(server/ssr): wait for stats file before reading it using chokidar\nfeat(server/ssr): wait for stats file before reading it using chokidar",
        "diff": "diff --git a/src/server/ssr/stats.js b/src/server/ssr/stats.js // @flow\nimport fs from 'fs'\n+import chokidar from 'chokidar'\nlet cache = {}\nasync function getFile (path) {\n// Cache file forever\nif (cache[path]) {\n- console.log('from cache')\nreturn Promise.resolve(cache[path])\n}\nreturn new Promise((resolve, reject) => {\n- // Give Webpack some time on first stats generation\n- setTimeout(() => {\n+ // This `readFile` func is looking like it escaped from procedure programming\n+ const readFile = () => {\nfs.readFile(path, 'utf8', (err, data) => {\nif (err) {\nthrow err\n@@ -21,7 +21,17 @@ async function getFile (path) {\ncache[path] = json\nresolve(json)\n})\n- }, 4000)\n+ }\n+ // does file exist?\n+ fs.access(path, fs.constants.R_OK, err => {\n+ if (err) {\n+ // No. Watch for changes, resolve on `add`.\n+ chokidar.watch(path).on('add', readFile)\n+ } else {\n+ // Yes. resolve!\n+ readFile()\n+ }\n+ })\n})\n}\n",
        "date": "06.11.2017 23:47:38",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor file caching and add file watching functionality"
    },
    {
        "msg": "feat(containers): add data fetching in Links\nfeat(containers): add data fetching in Links",
        "diff": "diff --git a/src/common/containers/Links/index.jsx b/src/common/containers/Links/index.jsx @@ -20,15 +20,19 @@ type Props = {\nclass Links extends Component {\nprops: Props\n- componentDidMount () {\n- const {isLinksLoaded} = this.props\n+ async asyncBootstrap () {\n+ const {isLinksLoaded, getLinks} = this.props\nif (!isLinksLoaded) {\n- this.getLinks()\n+ await getLinks()\n}\n+ return true\n}\n- getLinks () {\n- this.props.getLinks()\n+ componentDidMount () {\n+ const {isLinksLoaded, getLinks} = this.props\n+ if (!isLinksLoaded) {\n+ getLinks()\n+ }\n}\nrender () {\n@@ -57,8 +61,8 @@ function mapStateToProps (state: GlobalState) {\n}\nconst mapDispatchToProps = dispatch => ({\n- getLinks () {\n- dispatch(GET_LINKS())\n+ async getLinks () {\n+ return dispatch(GET_LINKS())\n}\n})\n",
        "date": "03.12.2017 07:11:52",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor Links component to use async/await for fetching links data."
    },
    {
        "msg": "feat(webpack_config): default BASE_API is not relative\nfeat(webpack_config): default BASE_API is not relative",
        "diff": "diff --git a/webpack_config/config.js b/webpack_config/config.js @@ -6,7 +6,7 @@ import path from 'path'\nimport manifest from '../static/manifest'\nconst {\n- BASE_API = '/api/v1',\n+ BASE_API = 'http://localhost:3000/api/v1',\nNODE_ENV = 'development',\nSENTRY_PUBLIC_DSN,\nGA_ID,\n",
        "date": "03.12.2017 07:12:20",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Update BASE_API to use localhost URL"
    },
    {
        "msg": "feat(server): use API_PREFIX env var for api prefix\nfeat(server): use API_PREFIX env var for api prefix",
        "diff": "diff --git a/src/server/server.js b/src/server/server.js @@ -20,7 +20,7 @@ export default (app: express$Application): express$Application => {\n// Add global middlewares\naddMiddlewares(app)\n// Add API\n- app.use(process.env.BASE_API, API)\n+ app.use(process.env.API_PREFIX, API)\n// Add SSR\napp.use(SSR)\nreturn app\n",
        "date": "05.12.2017 04:54:39",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor API base path to use environment variable API_PREFIX"
    },
    {
        "msg": "feat(selectors): fix getAuthState, add getLayoutMobileStatuses selector\nfeat(selectors): fix getAuthState, add getLayoutMobileStatuses selector",
        "diff": "diff --git a/src/common/selectors/index.js b/src/common/selectors/index.js // @flow\n+import {createSelector} from 'reselect'\nimport type {State as AuthState} from 'reducers/auth'\nimport type {State as LayoutState} from 'reducers/layout'\nimport type {State as EntitiesLinksState} from 'reducers/links'\nimport type {GlobalState} from 'reducers'\n-export const getAuthState = (state: GlobalState): AuthState => state.me.auth\n+export const getAuthState = (state: GlobalState): AuthState => state.auth\nexport const getLayoutState = (state: GlobalState): LayoutState => state.layout\n-export const getEntitiesLinksState = (state: GlobalState): EntitiesLinksState => state.entities.links\n+export const getEntitiesLinksState = (state: GlobalState): EntitiesLinksState =>\n+ state.entities.links\n-const defaultWindowInnerWidth = 1025\nexport const getWindowInnerWidth = (window: Object): number => {\n+ const defaultWindowInnerWidth = 1025\nreturn window && window.innerWidth\n? window.innerWidth\n: defaultWindowInnerWidth\n}\n+\n+export const getLayoutMobileStatuses = createSelector(\n+ getLayoutState,\n+ ({innerWidth}) => {\n+ const isMobile: boolean = innerWidth < 1025 // 1024px - breakpoint\n+ const isMobileXS: boolean = innerWidth < 481\n+ const isMobileSM: boolean = innerWidth > 480 && innerWidth < 767\n+ return {isMobileSM, isMobileXS, isMobile}\n+ }\n+)\n",
        "date": "05.12.2017 04:56:25",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor selectors and add new selector for layout mobile statuses"
    },
    {
        "msg": "feat(containers): simplify Links container, add data fetching\nfeat(containers): simplify Links container, add data fetching",
        "diff": "diff --git a/src/common/containers/Links/index.jsx b/src/common/containers/Links/index.jsx import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport Helmet from 'react-helmet'\n-import {Loader} from 'semantic-ui-react'\n+import {Loader, Grid, List} from 'semantic-ui-react'\nimport {GET_LINKS} from 'actions/links'\n-import LinksComponent from './components'\n+import LinkItem from './components/LinkItem'\nimport {getEntitiesLinksState} from 'selectors'\n+import _ from 'lodash'\nimport type {GlobalState} from 'reducers'\ntype Props = {\n@@ -17,16 +18,22 @@ type Props = {\nisLinksLoaded: boolean\n}\n-class Links extends Component <Props> {\n- componentDidMount () {\n- const {isLinksLoaded} = this.props\n+class Links extends Component {\n+ props: Props\n+\n+ async asyncBootstrap () {\n+ const {isLinksLoaded, getLinks} = this.props\nif (!isLinksLoaded) {\n- this.getLinks()\n+ await getLinks()\n}\n+ return true\n}\n- getLinks () {\n- this.props.getLinks()\n+ componentDidMount () {\n+ const {isLinksLoaded, getLinks} = this.props\n+ if (!isLinksLoaded) {\n+ getLinks()\n+ }\n}\nrender () {\n@@ -39,7 +46,15 @@ class Links extends Component <Props> {\n{isLinksLoading ? (\n<Loader active>Loading data...</Loader>\n) : (\n- <LinksComponent links={links} />\n+ <Grid stackable>\n+ <Grid.Column width={16}>\n+ <List relaxed divided animated>\n+ {_.map(links, (link: LinkItem, i) => {\n+ return <LinkItem key={i} item={link} />\n+ })}\n+ </List>\n+ </Grid.Column>\n+ </Grid>\n)}\n</div>\n)\n@@ -49,14 +64,14 @@ class Links extends Component <Props> {\nfunction mapStateToProps (state: GlobalState) {\nconst linksState = getEntitiesLinksState(state)\nconst links = linksState.entities\n- const isLinksLoading = linksState.isLoading\n- const isLinksLoaded = linksState.isLoaded\n+ const isLinksLoading = linksState.fetchStatus === 'loading'\n+ const isLinksLoaded = linksState.fetchStatus === 'loaded'\nreturn {links, isLinksLoading, isLinksLoaded}\n}\nconst mapDispatchToProps = dispatch => ({\n- getLinks () {\n- dispatch(GET_LINKS())\n+ async getLinks () {\n+ return dispatch(GET_LINKS())\n}\n})\n",
        "date": "05.12.2017 04:56:58",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor Links container component to use LinkItem component and update loading state handling"
    },
    {
        "msg": "feat(actions): pass `meta` to LOGIN_AUTH_SUCCESS\nfeat(actions): pass `meta` to LOGIN_AUTH_SUCCESS",
        "diff": "diff --git a/src/common/actions/auth/index.js b/src/common/actions/auth/index.js @@ -28,9 +28,9 @@ export type LOGOUT_AUTH_SUCCESS_TYPE = {type: 'LOGOUT_AUTH_SUCCESS'}\n{@link https://github.com/Metnew/awral}\n*/\nconst awralLogin = awral.of({\n- success ({payload, dispatch}) {\n+ success ({payload, dispatch, meta}) {\nsetLocalToken(payload.token)\n- dispatch({type: LOGIN_AUTH_SUCCESS, payload})\n+ dispatch({type: LOGIN_AUTH_SUCCESS, payload, meta})\n}\n})\n",
        "date": "05.12.2017 05:00:19",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Add meta parameter to success function in awralLogin"
    },
    {
        "msg": "feat(actions): layout - OPEN/CLOSE_SIDEBAR -> TOGGLE_SIDEBAR\nfeat(actions): layout - OPEN/CLOSE_SIDEBAR -> TOGGLE_SIDEBAR",
        "diff": "diff --git a/src/common/actions/layout/index.js b/src/common/actions/layout/index.js // @flow\n-export const UI_OPEN_SIDEBAR = 'UI_OPEN_SIDEBAR'\n-export const UI_CLOSE_SIDEBAR = 'UI_CLOSE_SIDEBAR'\n+export const UI_TOGGLE_SIDEBAR = 'UI_TOGGLE_SIDEBAR'\nexport const UI_WINDOW_RESIZE = 'UI_WINDOW_RESIZE'\n-export const CLOSE_SIDEBAR = () => ({\n- type: UI_CLOSE_SIDEBAR\n-})\n-\n-export const OPEN_SIDEBAR = () => ({\n- type: UI_OPEN_SIDEBAR\n+export const TOGGLE_SIDEBAR = () => ({\n+ type: UI_TOGGLE_SIDEBAR\n})\nexport const WINDOW_RESIZE = (innerWidth: number) => ({\n@@ -18,8 +13,7 @@ export const WINDOW_RESIZE = (innerWidth: number) => ({\n}\n})\n-export type UI_OPEN_SIDEBAR_TYPE = {type: 'UI_OPEN_SIDEBAR'}\n-export type UI_CLOSE_SIDEBAR_TYPE = {type: 'UI_CLOSE_SIDEBAR'}\n+export type UI_TOGGLE_SIDEBAR_TYPE = {type: 'UI_TOGGLE_SIDEBAR'}\nexport type UI_WINDOW_RESIZE_TYPE = {\ntype: 'UI_WINDOW_RESIZE',\npayload: {innerWidth: number}\n",
        "date": "05.12.2017 05:00:53",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor sidebar actions to use a single toggle action instead of separate open and close actions"
    },
    {
        "msg": "feat(components): in header add getLayoutMobileStatuses\nfeat(components): in header add getLayoutMobileStatuses",
        "diff": "diff --git a/src/common/components/parts/Header/index.jsx b/src/common/components/parts/Header/index.jsx @@ -6,17 +6,16 @@ import {connect} from 'react-redux'\nimport {Icon} from 'semantic-ui-react'\nimport {withRouter, matchPath} from 'react-router'\nimport _ from 'lodash'\n-import {OPEN_SIDEBAR} from 'actions/layout'\n+import {TOGGLE_SIDEBAR} from 'actions/layout'\nimport {\nStyledHeader,\nHeaderInner,\nNavicon,\nPageTitle\n- // HeaderButton\n} from './style'\nimport {Spacer} from 'styles/base'\nimport {getMetaRoutes} from 'routing'\n-import {getAuthState, getLayoutState} from 'selectors'\n+import {getAuthState, getLayoutMobileStatuses} from 'selectors'\nimport Headroom from 'react-headroom'\ntype Props = {\n@@ -46,13 +45,11 @@ const Header = ({title, toggleSidebar, isLoggedIn, isMobile}: Props) => {\n}\nconst mapStateToProps = (state, props) => {\n- console.log(props)\nconst {location: {pathname}} = props\nconst currentRoute = _.find(getMetaRoutes(), a => matchPath(pathname, a)) || {}\n- console.log(currentRoute)\nconst title = currentRoute.meta.name\nconst {isLoggedIn} = getAuthState(state)\n- const {isMobile} = getLayoutState(state)\n+ const {isMobile} = getLayoutMobileStatuses(state)\nreturn {\ntitle,\nisLoggedIn,\n@@ -62,7 +59,7 @@ const mapStateToProps = (state, props) => {\nconst mapDispatchToProps = dispatch => ({\ntoggleSidebar () {\n- dispatch(OPEN_SIDEBAR())\n+ dispatch(TOGGLE_SIDEBAR())\n}\n})\n",
        "date": "05.12.2017 05:02:54",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor Header component to use TOGGLE_SIDEBAR action and getLayoutMobileStatuses selector."
    },
    {
        "msg": "feat(ssr): renderToString instead of renderToStream\nfeat(ssr): renderToString instead of renderToStream",
        "diff": "diff --git a/src/server/ssr/index.js b/src/server/ssr/index.js */\nimport React from 'react'\nimport _ from 'lodash'\n-import {renderToNodeStream} from 'react-dom/server'\n+import {renderToString} from 'react-dom/server'\nimport {ServerStyleSheet, StyleSheetManager} from 'styled-components'\nimport {configureRootComponent, configureApp} from 'common/app'\nimport asyncBootstrapper from 'react-async-bootstrapper'\n@@ -12,23 +12,21 @@ import {AsyncComponentProvider, createAsyncContext} from 'react-async-component'\nimport HTMLComponent from './HTMLComponent'\nimport getI18nData from 'server/i18n'\nimport {matchPath} from 'react-router'\n-import getStats from './stats'\n+import {getRouterRoutes} from 'routing'\n+import getAssets from './stats'\nexport default async (req: express$Request, res: express$Response) => {\n- // probably, it'd better to define these objs in global scope\n- const {assets, faviconsAssets} = await getStats()\n- const {isLoggedIn, language} = req.user\n- const meState = {auth: {isLoggedIn}}\n- const initialState: Object = {me: meState}\n+ const assets = await getAssets()\n+ const {language} = req.user\n+ const initialState: Object = {}\nconst i18n = getI18nData(language)\nconst sheet = new ServerStyleSheet()\nconst location: string = req.url\nconst context = {}\n- const {store, history, routes} = configureApp(initialState)\n+ const {store, history} = configureApp(initialState)\nconst RootComponent: React$Node = configureRootComponent({\nstore,\nhistory,\n- routes,\ni18n,\nSSR: {location, context}\n})\n@@ -42,37 +40,25 @@ export default async (req: express$Request, res: express$Response) => {\n</AsyncComponentProvider>\n)\n+ const routes = getRouterRoutes()\n// if true - > throw 404, if match found -> 200\nconst noRequestURLMatch = !_.find(routes, a => matchPath(req.url, a.path))\nasyncBootstrapper(app).then(() => {\n- const appStream = renderToNodeStream(app)\n+ const renderedApp = renderToString(app)\nconst css: string = sheet.getStyleTags()\nconst preloadedState: Object = store.getState()\n+ const responseStatusCode = noRequestURLMatch ? 404 : 200\nconst asyncState = asyncContext.getState()\nconst props = {\ncss,\nassets,\n- faviconsAssets,\nasyncState,\ninitialState: preloadedState,\n+ app: renderedApp,\ni18n\n}\n- const {beforeAppTag, afterAppTag} = HTMLComponent(props)\n- const responseStatusCode = noRequestURLMatch ? 404 : 200\n-\n- res.writeHead(responseStatusCode, {\n- 'Content-Type': 'text/html'\n- })\n- res.write(beforeAppTag)\n- res.write(`<div id=\"app\">`)\n- appStream.pipe(res, {end: false})\n-\n- appStream.on('end', () => {\n- res.write('</div>')\n- res.write(afterAppTag)\n- res.end()\n- })\n+ res.status(responseStatusCode).send(HTMLComponent(props))\n})\n}\n",
        "date": "18.02.2018 15:46:24",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor SSR rendering to use renderToString instead of renderToNodeStream"
    },
    {
        "msg": "feat(api-utils): make xhr wrapper less complex\nfeat(api-utils): make xhr wrapper less complex",
        "diff": "diff --git a/src/common/api/utils/index.js b/src/common/api/utils/index.js -// @flow\n-export {get, post} from './xhr_wrapper'\n+/**\n+ * @flow\n+ * @file Simple fetch wrapper\n+ */\n+import fetch from 'isomorphic-fetch'\n+\n+// USAGE:\n+export const get = requestWrapper('GET')\n+// get('https://www.google.com', options)\n+export const post = requestWrapper('POST')\n+// post('https://www.google.com', data)\n+\n+// Create request wrapper for certain method\n+function requestWrapper (method: 'GET' | 'POST' | 'DELETE' | 'PUT' | 'PATCH') {\n+ // Creates request to `url` with `data`\n+ return async (url: string, data: any = null) => {\n+ const body = data ? {body: JSON.stringify(data)} : {}\n+\n+ const request = {\n+ method,\n+ headers: {},\n+ mode: process.env.NODE_ENV === 'development' ? 'cors' : 'same-origin',\n+ ...body\n+ }\n+\n+ return fetch(url, request)\n+ .then(checkStatus)\n+ .then(parseJSON)\n+ .catch((err: any) => err)\n+ }\n+}\n+\n+async function parseJSON (res: Response): Object {\n+ let json: Object\n+ const {status} = res\n+ // status response field in return object\n+ try {\n+ json = await res.json()\n+ } catch (e) {\n+ if (res.status === 204) {\n+ return {ok: true, data: {}, status}\n+ }\n+ return {ok: false, status}\n+ }\n+ if (!res.ok) {\n+ return {data: json, ok: false, status}\n+ }\n+ return {data: json, ok: true, status}\n+}\n+\n+function checkStatus (response: Response): Response {\n+ const {status} = response\n+ if (status >= 200 && status < 300) {\n+ // Everything is ok\n+ } else if (status >= 300 && status < 400) {\n+ // 300 - Multiple Choices\n+ // 301 - Moved Permanently,\n+ // 302 - Found, Moved Temporarily\n+ // 304 - not modified\n+ // 307 - Temporary Redirect\n+ } else if (status === 400) {\n+ // Probably is a validation error\n+ } else if (status === 403 || status === 401) {\n+ // 401 - Forbidden\n+ // 403 - Unauthorized\n+ } else if (status === 404) {\n+ // Not Found\n+ } else if (status >= 500) {\n+ // Server error\n+ }\n+ return response\n+}\n",
        "date": "18.02.2018 15:58:11",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor API utils to use fetch instead of xhr_wrapper"
    },
    {
        "msg": "feat(root): dispatch APP_INIT and render <Root> only once\nfeat(root): dispatch APP_INIT and render <Root> only once",
        "diff": "diff --git a/src/common/components/Root/index.jsx b/src/common/components/Root/index.jsx @@ -22,18 +22,31 @@ const Router = process.env.BROWSER\n? require('react-router-redux').ConnectedRouter\n: require('react-router').StaticRouter\n-export default class Root extends Component<Props> {\n+let initAlready = false\n+// react-async-bootstrapper renders <Root /> twice, because it's based on react-tree-walker\n+// react-tree-walker walks in React node tree and resolves promises.\n+// This behaviour allow apps to make server-side data fetching.\n+// But this approach has 2 drawbacks:\n+// Root rendered twice + APPLICATION_INIT dispatched twice\n+// `initAlready` ensures that `APPLICATION_INIT` was dispatched only once.\n+class Root extends Component<Props> {\nstatic defaultProps = {\nSSR: {}\n}\ncomponentWillMount () {\nconst {store, i18n} = this.props\n+ if (!initAlready) {\nstore.dispatch({type: APPLICATION_INIT})\naddLocaleData(i18n.localeData)\n}\n+ initAlready = true\n+ }\nrender () {\n+ if (!initAlready) {\n+ return null\n+ }\nconst {SSR, store, history, i18n} = this.props\nconst routerProps = process.env.BROWSER\n? {history}\n@@ -59,3 +72,5 @@ export default class Root extends Component<Props> {\n)\n}\n}\n+\n+export default Root\n",
        "date": "19.02.2018 01:39:39",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Fix double dispatch of APPLICATION_INIT in Root component"
    },
    {
        "msg": "feat(routing): add `exact` and `strict` in `getMetaRoutes` selector\nfeat(routing): add `exact` and `strict` in `getMetaRoutes` selector",
        "diff": "diff --git a/src/common/routing/index.jsx b/src/common/routing/index.jsx @@ -76,7 +76,7 @@ function routingFnCreator (useFor) {\n// Returns `name` + `path`. used in Header\nmeta () {\nreturn routes\n- .map(a => _.pick(a, ['path', 'name']))\n+ .map(a => _.pick(a, ['path', 'name', 'exact', 'strict']))\n}\n}\n",
        "date": "19.02.2018 02:42:09",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Add 'exact' and 'strict' properties to meta function in routingFnCreator"
    },
    {
        "msg": "feat(ssr): render Helmet on server",
        "diff": "diff --git a/src/server/ssr/index.js b/src/server/ssr/index.js * @desc\n*/\nimport React from 'react'\n+import Helmet from 'react-helmet'\nimport {renderToString} from 'react-dom/server'\nimport {ServerStyleSheet, StyleSheetManager} from 'styled-components'\nimport {configureRootComponent, configureApp} from 'common/app'\n@@ -33,9 +34,7 @@ export default async (req: express$Request, res: express$Response) => {\nconst app = (\n<AsyncComponentProvider asyncContext={asyncContext}>\n- <StyleSheetManager sheet={sheet.instance}>\n- {RootComponent}\n- </StyleSheetManager>\n+ <StyleSheetManager sheet={sheet.instance}>{RootComponent}</StyleSheetManager>\n</AsyncComponentProvider>\n)\n@@ -45,6 +44,7 @@ export default async (req: express$Request, res: express$Response) => {\nasyncBootstrapper(app).then(() => {\nconst renderedApp = renderToString(app)\n+ const helmet = Helmet.renderStatic()\nconst css: string = sheet.getStyleTags()\nconst preloadedState: Object = store.getState()\nconst responseStatusCode = noRequestURLMatch ? 404 : 200\n@@ -55,7 +55,8 @@ export default async (req: express$Request, res: express$Response) => {\nasyncState,\ninitialState: preloadedState,\napp: renderedApp,\n- i18n\n+ i18n,\n+ helmet\n}\nres.status(responseStatusCode).send(HTMLComponent(props))\n",
        "date": "19.02.2018 18:18:55",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Add Helmet component to SSR rendering and include it in the response data"
    },
    {
        "msg": "feat(404-page): update NotFound container\nfeat(404-page): update NotFound container",
        "diff": "diff --git a/src/common/containers/NotFound/index.jsx b/src/common/containers/NotFound/index.jsx @@ -8,10 +8,10 @@ const NotFound = () => {\nreturn (\n<NotFoundLayout>\n<Header as=\"h2\" icon textAlign=\"center\">\n- <Icon name=\"users\" circular />\n- <Header.Content>404</Header.Content>\n+ <Icon name=\"warning sign\" circular />\n+ <Header.Content>Thank you Mario!</Header.Content>\n<Header.Subheader>\n- <Link to=\"/\">Dashboard lives here</Link>\n+ <Link to=\"/\">But our princess is in another castle.</Link>\n</Header.Subheader>\n</Header>\n</NotFoundLayout>\n",
        "date": "19.02.2018 18:50:28",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Update NotFound page content and styling"
    },
    {
        "msg": "feat(webpack): add copy-webpack-plugin",
        "diff": "diff --git a/webpack_config/client/webpack.base.js b/webpack_config/client/webpack.base.js @@ -5,7 +5,19 @@ import config from '../config'\nimport isomorphicWebpackConfig from '../webpack.isomorphic'\nimport AssetsPlugin from 'assets-webpack-plugin'\nimport WebpackAssetsManifest from 'webpack-assets-manifest'\n-const {GA_ID, SENTRY_PUBLIC_DSN, CLIENT_STATIC_PATH, srcPath, publicPath, isProduction, manifest, distPath} = config\n+import CopyWebpackPlugin from 'copy-webpack-plugin'\n+\n+const {\n+ GA_ID,\n+ SENTRY_PUBLIC_DSN,\n+ CLIENT_STATIC_PATH,\n+ srcPath,\n+ publicPath,\n+ rootPath,\n+ isProduction,\n+ manifest,\n+ distPath\n+} = config\nrimraf(`${distPath}/client`, {}, () => {})\n@@ -58,7 +70,13 @@ const baseBuild = {\n}),\nnew WebpackAssetsManifest({\nassets: manifest\n- })\n+ }),\n+ new CopyWebpackPlugin([\n+ {\n+ from: `${rootPath}/static/public`,\n+ to: './'\n+ }\n+ ])\n]),\ntarget: 'web'\n}\n",
        "date": "19.02.2018 21:31:58",
        "repo": "metnew/suicrux",
        "type": "feat",
        "chatgpt_zeroshot": "Add CopyWebpackPlugin for static assets in webpack config"
    },
    {
        "msg": "feat: keep focusing inside the popup by `tab` key",
        "diff": "diff --git a/src/utils/popup/popup-manager.js b/src/utils/popup/popup-manager.js @@ -149,19 +149,41 @@ const PopupManager = {\n}\n}\n};\n-!Vue.prototype.$isServer && window.addEventListener('keydown', function(event) {\n- if (event.keyCode === 27) { // ESC\n+\n+const getTopPopup = function() {\n+ if (Vue.prototype.$isServer) return;\nif (PopupManager.modalStack.length > 0) {\n- const topItem = PopupManager.modalStack[PopupManager.modalStack.length - 1];\n- if (!topItem) return;\n- const instance = PopupManager.getInstance(topItem.id);\n- if (instance.closeOnPressEscape) {\n- instance.handleClose\n- ? instance.handleClose()\n- : (instance.handleAction ? instance.handleAction('cancel') : instance.close());\n+ const topPopup = PopupManager.modalStack[PopupManager.modalStack.length - 1];\n+ if (!topPopup) return;\n+ const instance = PopupManager.getInstance(topPopup.id);\n+\n+ return instance;\n}\n+};\n+\n+if (!Vue.prototype.$isServer) {\n+ // handle `esc` key when the popup is shown\n+ window.addEventListener('keydown', function(event) {\n+ if (event.keyCode === 27) {\n+ const topPopup = getTopPopup();\n+\n+ if (topPopup && topPopup.closeOnPressEscape) {\n+ topPopup.handleClose\n+ ? topPopup.handleClose()\n+ : (topPopup.handleAction ? topPopup.handleAction('cancel') : topPopup.close());\n}\n}\n});\n+ // keep focusing inside the popup by `tab` key\n+ document.addEventListener('focusin', function(event) {\n+ const topPopup = getTopPopup();\n+\n+ if (topPopup && !topPopup.$el.contains(event.target)) {\n+ event.stopPropagation();\n+ topPopup.$el.focus();\n+ }\n+ });\n+}\n+\nexport default PopupManager;\n",
        "date": "10.05.2017 17:04:41",
        "repo": "hug-sun/element3",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor popup manager to handle key events and focus inside popup."
    },
    {
        "msg": "feat(Menu): rerender activeIndex when menus changed, fixed",
        "diff": "diff --git a/packages/menu/src/menu.vue b/packages/menu/src/menu.vue }\n},\nwatch: {\n- defaultActive(value) {\n- const item = this.items[value];\n- if (item) {\n- this.activeIndex = item.index;\n- this.initOpenedMenu();\n- } else {\n- this.activeIndex = '';\n- }\n+ defaultActive: 'updateActiveIndex',\n- },\ndefaultOpeneds(value) {\nif (!this.collapse) {\nthis.openedMenus = value;\n}\n},\n+\ncollapse(value) {\nif (value) this.openedMenus = [];\n}\n},\nmethods: {\n+ updateActiveIndex() {\n+ const item = this.items[this.defaultActive];\n+ if (item) {\n+ this.activeIndex = item.index;\n+ this.initOpenedMenu();\n+ } else {\n+ this.activeIndex = null;\n+ }\n+ },\n+\ngetMigratingConfig() {\nreturn {\nprops: {\nif (this.mode === 'horizontal') {\nnew Menubar(this.$el); // eslint-disable-line\n}\n+ this.$watch('items', this.updateActiveIndex);\n}\n};\n</script>\n",
        "date": "02.01.2018 18:47:45",
        "repo": "hug-sun/element3",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor defaultActive method to updateActiveIndex and add watch for items."
    },
    {
        "msg": "feat: add jest moduleNameMapper for element-ui&main",
        "diff": "diff --git a/jest.config.js b/jest.config.js module.exports = {\n- testEnvironment: \"jsdom\",\n+ testEnvironment: 'jsdom',\ntransform: {\n- \"^.+\\\\.vue$\": \"vue-jest\",\n- \"^.+\\\\js$\": \"babel-jest\",\n+ '^.+\\\\.vue$': 'vue-jest',\n+ '^.+\\\\js$': 'babel-jest'\n},\n- moduleFileExtensions: [\"vue\", \"js\", \"json\", \"jsx\", \"ts\", \"tsx\", \"node\"],\n- testMatch: [\"**/tests/?(*.)+(test).[jt]s?(x)\"],\n-};\n+ moduleFileExtensions: ['vue', 'js', 'json', 'jsx', 'ts', 'tsx', 'node'],\n+ testMatch: ['**/tests/?(*.)+(test).[jt]s?(x)'],\n+ moduleNameMapper: {\n+ '^element-ui(.*)$': '<rootDir>$1',\n+ '^main(.*)$': '<rootDir>/src$1'\n+ }\n+}\n",
        "date": "05.08.2020 15:54:52",
        "repo": "hug-sun/element3",
        "type": "feat",
        "chatgpt_zeroshot": "Update Jest configuration to use single quotes and add moduleNameMapper."
    },
    {
        "msg": "feat: add implementation based on vue3 for resize-event.js",
        "diff": "diff --git a/src/utils/resize-event.js b/src/utils/resize-event.js +import { onMounted, getCurrentInstance } from 'vue'\nimport ResizeObserver from 'resize-observer-polyfill'\nconst isServer = typeof window === 'undefined'\n@@ -14,6 +15,36 @@ const resizeHandler = function(entries) {\n}\n}\n+export const useResizeEvent = () => {\n+ let element = null\n+\n+ const addResizeListener = (fn) => {\n+ element.__resizeListeners__.push(fn)\n+ }\n+\n+ const removeResizeListener = (fn) => {\n+ if (!element || !element.__resizeListeners__) return\n+ element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(fn), 1)\n+ if (!element.__resizeListeners__.length) {\n+ element.__ro__.disconnect()\n+ }\n+ }\n+ onMounted(() => {\n+ element = getCurrentInstance().vnode.el\n+ if (isServer) return\n+ if (!element.__resizeListeners__) {\n+ element.__resizeListeners__ = []\n+ element.__ro__ = new ResizeObserver(resizeHandler)\n+ element.__ro__.observe(element)\n+ }\n+ })\n+\n+ return {\n+ addResizeListener,\n+ removeResizeListener\n+ }\n+}\n+\n/* istanbul ignore next */\nexport const addResizeListener = function(element, fn) {\nif (isServer) return\n",
        "date": "08.08.2020 16:24:23",
        "repo": "hug-sun/element3",
        "type": "feat",
        "chatgpt_zeroshot": "Add useResizeEvent hook for handling resize events"
    },
    {
        "msg": "feat: added a method by named `unmountComponent` in `/src/use/component.js`",
        "diff": "diff --git a/test/unit/tests/use/component.test.js b/test/unit/tests/use/component.test.js -import { createComponent } from 'main/use/component.js'\n+import { createComponent, unmountComponent } from 'main/use/component.js'\ndescribe('component', () => {\ndescribe('createComponent', () => {\n@@ -19,5 +19,16 @@ describe('component', () => {\nexpect($cf).toBeCalled()\nexpect(instance.ctx.$el.innerHTML).toBe('foo')\n})\n+\n+ it('the specified component should be destroyed', () => {\n+ const Comp = {\n+ template: '<div>foo</div>'\n+ }\n+\n+ const instance = createComponent(Comp)\n+ expect(instance.isMounted).toBe(true)\n+ unmountComponent(instance)\n+ expect(instance.isUnmounted).toBe(true)\n+ })\n})\n})\n",
        "date": "01.09.2020 17:43:53",
        "repo": "hug-sun/element3",
        "type": "feat",
        "chatgpt_zeroshot": "Add unmountComponent function and test for component destruction"
    },
    {
        "msg": "feat: add release script for release",
        "diff": "diff --git a/package.json b/package.json \"test\": \"npm run lint && npm run build:theme && cross-env CI_ENV=/dev/ BABEL_ENV=test karma start test/unit/karma.conf.js --single-run\",\n\"test:watch\": \"npm run build:theme && cross-env BABEL_ENV=test karma start test/unit/karma.conf.js\",\n\"test:unit\": \"jest\",\n- \"build:next\": \"rollup -c\"\n+ \"build:next\": \"rollup -c\",\n+ \"release\": \"node scripts/release.js\"\n},\n\"faas\": [\n{\n\"babel-preset-stage-2\": \"^6.24.1\",\n\"babel-regenerator-runtime\": \"^6.5.0\",\n\"chai\": \"^4.2.0\",\n+ \"chalk\": \"^4.1.0\",\n\"chokidar\": \"^1.7.0\",\n\"copy-webpack-plugin\": \"^5.0.0\",\n\"coveralls\": \"^3.0.3\",\n\"cp-cli\": \"^1.0.2\",\n\"cross-env\": \"^3.1.3\",\n\"css-loader\": \"^2.1.0\",\n+ \"enquirer\": \"^2.3.6\",\n\"es6-promise\": \"^4.0.5\",\n\"eslint\": \"^7.7.0\",\n\"eslint-config-prettier\": \"^6.11.0\",\n\"eslint-plugin-promise\": \"^4.2.1\",\n\"eslint-plugin-standard\": \"^4.0.1\",\n\"eslint-plugin-vue\": \"^6.2.2\",\n+ \"execa\": \"^4.0.3\",\n\"file-loader\": \"^1.1.11\",\n\"file-save\": \"^0.2.0\",\n\"gulp\": \"^4.0.0\",\n\"markdown-it-chain\": \"^1.3.0\",\n\"markdown-it-container\": \"^2.0.0\",\n\"mini-css-extract-plugin\": \"^0.4.1\",\n+ \"minimist\": \"^1.2.5\",\n\"mitt\": \"^2.1.0\",\n\"mocha\": \"^6.0.2\",\n\"node-sass\": \"^4.11.0\",\n",
        "date": "06.09.2020 19:34:26",
        "repo": "hug-sun/element3",
        "type": "feat",
        "chatgpt_zeroshot": "Add new build script and update dependencies"
    },
    {
        "msg": "feat: use jest fake timer",
        "diff": "diff --git a/packages/dropdown/src/__tests__/Dropdown.spec.js b/packages/dropdown/src/__tests__/Dropdown.spec.js -import Dropdown from '../dropdown.vue'\n-import DropdownMenu from '../dropdown-menu.vue'\n-import DropdownItem from '../dropdown-item.vue'\n-\n+import '@testing-library/jest-dom'\nimport { mount } from '@vue/test-utils'\nimport { nextTick, ref } from 'vue'\nimport sinon from 'sinon'\n+import Dropdown from '../dropdown.vue'\n+import DropdownMenu from '../dropdown-menu.vue'\n+import DropdownItem from '../dropdown-item.vue'\n+\nconst components = {\nElDropdown: Dropdown,\nElDropdownMenu: DropdownMenu,\nElDropdownItem: DropdownItem\n}\n+jest.useFakeTimers()\n+\nconst wait = (time = 300) => {\n- return new Promise((resolve) => {\n- setTimeout(resolve, time)\n- })\n+ jest.runAllTimers()\n}\ndescribe('Dropdown', () => {\n",
        "date": "12.09.2020 16:32:29",
        "repo": "hug-sun/element3",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor Dropdown.spec.js to improve testing setup"
    },
    {
        "msg": "feat: emitter support multi-parameter",
        "diff": "diff --git a/src/use/emitter.js b/src/use/emitter.js @@ -16,14 +16,14 @@ export function useEmitter() {\nconst { value, type, emitComponentInstance } = e\nif (type === BROADCAST) {\nif (isChildComponent(currentComponentInstance, emitComponentInstance)) {\n- handler && handler(value)\n+ handler && handler(...value)\n}\n} else if (type === DISPATCH) {\nif (isChildComponent(emitComponentInstance, currentComponentInstance)) {\n- handler && handler(value)\n+ handler && handler(...value)\n}\n} else {\n- handler && handler(value)\n+ handler && handler(...value)\n}\n}\n@@ -32,19 +32,19 @@ export function useEmitter() {\nemitter.on(type, handleWrapper)\n}\n- function broadcast(type, evt) {\n+ function broadcast(type, ...args) {\nemitter.emit(type, {\ntype: BROADCAST,\nemitComponentInstance: currentComponentInstance,\n- value: evt\n+ value: args\n})\n}\n- function dispatch(type, evt) {\n+ function dispatch(type, ...args) {\nemitter.emit(type, {\ntype: DISPATCH,\nemitComponentInstance: currentComponentInstance,\n- value: evt\n+ value: args\n})\n}\n@@ -52,9 +52,9 @@ export function useEmitter() {\nemitter.off(type, handler[wrapper])\n}\n- function emit(type, evt) {\n+ function emit(type, ...args) {\nemitter.emit(type, {\n- value: evt\n+ value: args\n})\n}\n",
        "date": "14.09.2020 16:00:38",
        "repo": "hug-sun/element3",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor emitter.js to accept multiple arguments in handler functions"
    },
    {
        "msg": "feat: once support multi-parameter",
        "diff": "diff --git a/src/use/emitter.js b/src/use/emitter.js @@ -59,8 +59,8 @@ export function useEmitter() {\n}\nfunction once(type, handler) {\n- const handleOn = () => {\n- handler && handler()\n+ const handleOn = (...args) => {\n+ handler && handler(...args)\noff(type, handleOn)\n}\non(type, handleOn)\n",
        "date": "14.09.2020 17:35:49",
        "repo": "hug-sun/element3",
        "type": "feat",
        "chatgpt_zeroshot": "Fix handler function in once method to accept arguments"
    },
    {
        "msg": "feat: delete emit logic on emitter",
        "diff": "diff --git a/src/use/emitter.js b/src/use/emitter.js @@ -52,12 +52,6 @@ export function useEmitter() {\nemitter.off(type, handler[wrapper])\n}\n- function emit(type, ...args) {\n- emitter.emit(type, {\n- value: args\n- })\n- }\n-\nfunction once(type, handler) {\nconst handleOn = (...args) => {\nhandler && handler(...args)\n@@ -71,7 +65,6 @@ export function useEmitter() {\nbroadcast,\ndispatch,\noff,\n- emit,\nonce\n}\n}\n",
        "date": "16.09.2020 11:16:52",
        "repo": "hug-sun/element3",
        "type": "feat",
        "chatgpt_zeroshot": "Remove emit function from useEmitter module"
    },
    {
        "msg": "feat: export the backtop component",
        "diff": "diff --git a/src/entry.js b/src/entry.js @@ -8,6 +8,7 @@ import ElLink from '../packages/link'\nimport ElIcon from '../packages/icon'\nimport ElBreadcrumb from '../packages/breadcrumb'\nimport ElBreadcrumbItem from '../packages/breadcrumb-item'\n+import ElBacktop from '../packages/backtop'\nimport { version } from '../package.json'\nconst components = [\n@@ -19,7 +20,8 @@ const components = [\nElLink,\nElIcon,\nElBreadcrumb,\n- ElBreadcrumbItem\n+ ElBreadcrumbItem,\n+ ElBacktop\n]\nconst install = (app) => {\n@@ -42,7 +44,8 @@ export {\nElLink,\nElIcon,\nElBreadcrumb,\n- ElBreadcrumbItem\n+ ElBreadcrumbItem,\n+ ElBacktop\n}\nexport default elementUI\n",
        "date": "06.10.2020 23:04:06",
        "repo": "hug-sun/element3",
        "type": "feat",
        "chatgpt_zeroshot": "Add ElBacktop component to the list of components in entry.js"
    },
    {
        "msg": "feat: add setupGlobalOptions api for set global options",
        "diff": "diff --git a/src/entry.js b/src/entry.js @@ -174,16 +174,22 @@ const components = [\n]\nconst install = (app, opts = {}) => {\n- app.config.globalProperties.$ELEMENT = {\n- size: opts.size || '',\n- zIndex: opts.zIndex || 2000\n- }\n+ app.use(setupGlobalOptions(opts))\ncomponents.forEach((component) => {\napp.use(component)\n})\n}\n+const setupGlobalOptions = (opts = {}) => {\n+ return (app) => {\n+ app.config.globalProperties.$ELEMENT = {\n+ size: opts.size || '',\n+ zIndex: opts.zIndex || 2000\n+ }\n+ }\n+}\n+\nconst elementUI = {\nversion,\ninstall\n@@ -271,7 +277,8 @@ export {\nusePrompt,\nuseConfirm,\nuseNotify,\n- install\n+ install,\n+ setupGlobalOptions\n}\nexport default elementUI\n",
        "date": "08.11.2020 18:16:10",
        "repo": "hug-sun/element3",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor global options setup in install method"
    },
    {
        "msg": "feat: messageBox api add $ prefix",
        "diff": "diff --git a/packages/message-box/index.js b/packages/message-box/index.js @@ -3,10 +3,10 @@ import MessageBoxComponent from './src/MessageBox.vue'\nexport function useMsgbox() {\nreturn {\n- msgbox: MessageBox,\n- alert: MessageBox.alert,\n- confirm: MessageBox.confirm,\n- prompt: MessageBox.prompt\n+ $msgbox: MessageBox,\n+ $alert: MessageBox.alert,\n+ $confirm: MessageBox.confirm,\n+ $prompt: MessageBox.prompt\n}\n}\n",
        "date": "10.11.2020 14:54:27",
        "repo": "hug-sun/element3",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor message box functions to use dollar sign prefix for consistency."
    },
    {
        "msg": "feat(icon.d.ts): check icon docs",
        "diff": "diff --git a/types/icon.d.ts b/types/icon.d.ts import { ElementUIComponent } from './component'\n+export const ElIcon: IIcon\n/** Icon Component */\n-export declare class ElIcon extends ElementUIComponent {\n+export interface IIcon extends ElementUIComponent {\n/** Icon name */\nname: string\n}\n",
        "date": "13.11.2020 07:13:14",
        "repo": "hug-sun/element3",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor icon component to use interface instead of class"
    },
    {
        "msg": "feat: export button-group compnoent",
        "diff": "diff --git a/src/entry.js b/src/entry.js @@ -9,6 +9,7 @@ import ElAside from '../packages/aside'\nimport ElMain from '../packages/main'\nimport ElIcon from '../packages/icon'\nimport ElButton from '../packages/button'\n+import ElButtonGroup from '../packages/button-group'\nimport ElLink from '../packages/link'\n// Form\nimport ElRadio from '../packages/radio'\n@@ -102,6 +103,7 @@ const components = [\nElAlert,\nElContainer,\nElButton,\n+ ElButtonGroup,\nElSwitch,\nElProgress,\nElLink,\n@@ -205,6 +207,7 @@ export {\nElMain,\nElAlert,\nElButton,\n+ ElButtonGroup,\nElSwitch,\nElProgress,\nElLink,\n",
        "date": "23.11.2020 14:33:24",
        "repo": "hug-sun/element3",
        "type": "feat",
        "chatgpt_zeroshot": "Add ElButtonGroup component to entry.js and components list"
    },
    {
        "msg": "feat(Switch): test",
        "diff": "diff --git a/packages/element3/packages/switch/__tests__/Switch.spec.js b/packages/element3/packages/switch/__tests__/Switch.spec.js @@ -162,4 +162,17 @@ describe('Switch', () => {\nexpect(wrapper.emitted('update:modelValue')).toEqual([['3']])\n})\n+ it('handleClick', async () => {\n+ const wrapper = mount(Switch, {\n+ props: {\n+ isChecked: true,\n+ disabled: false,\n+ activeValue: '2',\n+ inactiveValue: '3'\n+ }\n+ })\n+ await wrapper.find('.el-switch').trigger('click')\n+ expect(wrapper.emitted('update:modelValue')).toEqual([['3'], ['2']])\n+ expect(wrapper.emitted('update:change')).toEqual([['2']])\n+ })\n})\n",
        "date": "15.12.2020 12:10:38",
        "repo": "hug-sun/element3",
        "type": "feat",
        "chatgpt_zeroshot": "Add test case for handleClick event in Switch component"
    },
    {
        "msg": "feat(element3): Table add Basis function",
        "diff": "diff --git a/packages/element3/src/components/Table/src/Table.vue b/packages/element3/src/components/Table/src/Table.vue <table>\n<thead>\n<tr>\n- <template v-for=\"(column, index) in columns\" :key=\"index\">\n+ <template v-for=\"(column, index) in tableHeads\" :key=\"index\">\n<th>{{ column.label }}</th>\n</template>\n</tr>\n</tr>\n</template>\n</tbody>\n+ <slot></slot>\n</table>\n</template>\n-\n<script>\n-import { computed, defineComponent, unref } from 'vue'\n+import {\n+ computed,\n+ defineComponent,\n+ ref,\n+ provide,\n+ getCurrentInstance,\n+ toRefs\n+} from 'vue'\nexport default defineComponent({\nname: 'ElNewTable',\nprops: ['data'],\n- setup(props, { slots }) {\n- const columns = computed(() => {\n- const tableColumns = slots.default()\n+ setup(props) {\n+ const { data } = toRefs(props)\n+\n+ useProvide()\n+\n+ const { columns, registryColumn } = useColumns()\n+ const { tableHeads } = useTableHeads(columns)\n+ const { rows } = useRows(data, tableHeads)\n+\n+ return {\n+ registryColumn,\n+ tableHeads,\n+ rows\n+ }\n+ }\n+})\n+\n+function useProvide() {\n+ const instance = getCurrentInstance()\n+\n+ provide('table', instance.proxy)\n+}\n+\n+function useColumns() {\n+ const columns = ref([])\n+ function registryColumn(column) {\n+ columns.value.push(column)\n+ }\n- return tableColumns.map((columnsVnode) => {\n- const { prop, label } = columnsVnode.props\n+ return {\n+ columns,\n+ registryColumn\n+ }\n+}\n+\n+function useTableHeads(columns) {\n+ const tableHeads = computed(() => {\n+ return columns.value.map((columnVM) => {\n+ const { prop, label } = columnVM.props\nreturn {\nprop,\nlabel\n@@ -35,22 +75,25 @@ export default defineComponent({\n})\n})\n- function createRows(columns) {\n- return computed(() => {\n- return props.data.map((item) => {\n- return columns.reduce((result, { prop: key }) => {\n+ return {\n+ tableHeads\n+ }\n+}\n+\n+function useRows(data, tableHeads) {\n+ const rows = computed(() => {\n+ return data.value.map((item) => {\n+ return tableHeads.value.reduce((result, { prop: key }) => {\nresult[key] = item[key]\nreturn result\n}, {})\n})\n})\n- }\n-\n- const rows = createRows(unref(columns))\n- return { columns, rows }\n+ return {\n+ rows\n+ }\n}\n-})\n</script>\n<style></style>\n",
        "date": "26.01.2021 15:49:54",
        "repo": "hug-sun/element3",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor Table component to use composition API and provide slots for customization"
    },
    {
        "msg": "feat: support link component set href attribute",
        "diff": "diff --git a/src/components/link/Link.vue b/src/components/link/Link.vue @@ -6,6 +6,7 @@ interface LinkProps {\ntype?: LinkType\nunderline?: boolean\ndisabled?: boolean\n+ href?: string\n}\nconst props = withDefaults(defineProps<LinkProps>(), {\n@@ -27,7 +28,11 @@ const classes = useClasses(props)\n</script>\n<template>\n- <a class=\"el-link\" :class=\"classes\">\n+ <a\n+ class=\"el-link\"\n+ :class=\"classes\"\n+ :href=\"disabled ? null : href\"\n+ >\n<span v-if=\"$slots.default\" class=\"el-link--inner\">\n<slot />\n</span>\n",
        "date": "19.06.2022 22:37:17",
        "repo": "hug-sun/element3",
        "type": "feat",
        "chatgpt_zeroshot": "Add href prop to Link component and conditionally set href attribute based on disabled prop"
    },
    {
        "msg": "feat: add plain props",
        "diff": "diff --git a/src/components/button/Button.vue b/src/components/button/Button.vue @@ -5,12 +5,11 @@ import { computed } from 'vue'\ntype buttonType = 'primary' | 'success' | 'warning' | 'danger' | 'info' | 'text'\ntype buttonSize = 'medium' | 'small' | 'mini'\n-type ButtonRound = true | false\n-\ninterface ButtonProps {\ntype?: buttonType\nsize?: buttonSize\n- round?: ButtonRound\n+ round?: boolean\n+ plain?: boolean\n}\nconst props = defineProps<ButtonProps>()\n@@ -20,7 +19,10 @@ function useClasses(props) {\nreturn [\nprops.type ? `el-button--${props.type}` : '',\nprops.size ? `el-button--${props.size}` : '',\n- props.round ? 'is-round' : '',\n+ {\n+ 'is-round': props.round,\n+ 'is-plain': props.plain,\n+ },\n]\n})\n}\n",
        "date": "20.06.2022 11:30:28",
        "repo": "hug-sun/element3",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor Button component props and classes"
    },
    {
        "msg": "feat: add icon,loading props",
        "diff": "diff --git a/src/components/button/__test__/button.spec.ts b/src/components/button/__test__/button.spec.ts @@ -78,6 +78,60 @@ describe('Button.vue', () => {\nexpect(getByRole('button')).not.toHaveClass('is-circle')\n})\n+ describe('set button disabled', () => {\n+ it('by props.disabled', async () => {\n+ const { getByRole, rerender } = render(Button, {\n+ props: {\n+ disabled: true,\n+ },\n+ })\n+\n+ const buttonElement = getByRole('button')\n+\n+ expect(buttonElement).toHaveClass('is-disabled')\n+ expect(buttonElement).toHaveAttribute('disabled')\n+\n+ await rerender({\n+ disabled: false,\n+ })\n+ expect(getByRole('button')).not.toHaveClass('is-disabled')\n+ expect(getByRole('button')).not.toHaveAttribute('disabled')\n+ })\n+ })\n+\n+ describe('set button icon', () => {\n+ it('set props icon', () => {\n+ const { getByTestId } = render(Button, {\n+ props: {\n+ icon: 'el-icon-edit',\n+ },\n+ })\n+ expect(getByTestId('icon')).toBeInTheDocument()\n+ })\n+\n+ it('if loading is true, the icon will not be displayed', () => {\n+ const { getByTestId, queryByTestId } = render(Button, {\n+ props: {\n+ loading: true,\n+ icon: 'el-icon-edit',\n+ },\n+ })\n+ expect(queryByTestId('icon')).not.toBeInTheDocument()\n+ expect(getByTestId('loadingIcon')).toBeInTheDocument()\n+ })\n+ })\n+\n+ // button autofocus\n+ it('set button autofocus', () => {\n+ const { getByRole } = render(Button, {\n+ props: {\n+ autofocus: true,\n+ },\n+ })\n+\n+ expect(getByRole('button')).toHaveAttribute('autofocus')\n+ })\n+\n// native type: button | reset | submit\nit('set button native type', () => {\nconst { getByRole } = render(Button, {\n",
        "date": "20.06.2022 17:00:06",
        "repo": "hug-sun/element3",
        "type": "feat",
        "chatgpt_zeroshot": "Add functionality to set button disabled, set button icon, and set button autofocus in Button component."
    },
    {
        "msg": "feat(button): import components path modify",
        "diff": "diff --git a/src/index.ts b/src/index.ts @@ -4,7 +4,7 @@ import { ElAvatar } from './components/avatar'\nimport { ElLink } from './components/link/'\nimport { ElIcon } from './components/icon/'\nimport { ElBadge } from './components/badge/'\n-import { ElButton } from './components/Button/'\n+import { ElButton } from './components/button/'\nimport '/theme/src/icon.scss'\nconst components = [\n",
        "date": "20.06.2022 18:20:24",
        "repo": "hug-sun/element3",
        "type": "feat",
        "chatgpt_zeroshot": "Fix casing issue in Button import statement"
    },
    {
        "msg": "feat: keep contrast on `.table-dark`\nIn case we set `$body-bg` to a dark color, we have to keep table contrast relevant.",
        "diff": "diff --git a/scss/_variables.scss b/scss/_variables.scss @@ -343,7 +343,7 @@ $table-dark-bg: $gray-900 !default;\n$table-dark-accent-bg: rgba($white, .05) !default;\n$table-dark-hover-bg: rgba($white, .075) !default;\n$table-dark-border-color: lighten($gray-900, 7.5%) !default;\n-$table-dark-color: $body-bg !default;\n+$table-dark-color: $white !default;\n$table-striped-order: odd !default;\n",
        "date": "16.09.2018 11:06:53",
        "repo": "coreui/coreui",
        "type": "feat",
        "chatgpt_zeroshot": "Update $table-dark-color to $white in _variables.scss"
    },
    {
        "msg": "feat(css): groups hr element",
        "diff": "diff --git a/scss/_variables.scss b/scss/_variables.scss @@ -428,6 +428,7 @@ $blockquote-small-color: $gray-600 !default;\n$blockquote-small-font-size: $small-font-size !default;\n$blockquote-font-size: $font-size-base * 1.25 !default;\n+$hr-margin-y: $spacer !default;\n$hr-color: inherit !default;\n$hr-height: $border-width !default;\n$hr-opacity: .25 !default;\n@@ -446,8 +447,6 @@ $list-inline-padding: .5rem !default;\n$mark-bg: #fcf8e3 !default;\n-$hr-margin-y: $spacer !default;\n-\n// Tables\n//\n",
        "date": "14.03.2020 10:41:38",
        "repo": "coreui/coreui",
        "type": "feat",
        "chatgpt_zeroshot": "Add $hr-margin-y variable and remove duplicate declaration"
    },
    {
        "msg": "feat: checks for `$grid-row-columns`",
        "diff": "diff --git a/scss/mixins/_grid.scss b/scss/mixins/_grid.scss @include make-col-auto();\n}\n+ @if $grid-row-columns > 0 {\n@for $i from 1 through $grid-row-columns {\n.row-cols#{$infix}-#{$i} {\n@include row-cols($i);\n}\n}\n+ }\n.col#{$infix}-auto {\n@include make-col-auto();\n",
        "date": "16.04.2020 20:15:51",
        "repo": "coreui/coreui",
        "type": "feat",
        "chatgpt_zeroshot": "Add conditional check for grid row columns in grid mixin"
    },
    {
        "msg": "feat: checks for `$grid-breakpoints` map list",
        "diff": "diff --git a/scss/_functions.scss b/scss/_functions.scss // Starts at zero\n// Used to ensure the min-width of the lowest breakpoint starts at 0.\n@mixin _assert-starts-at-zero($map, $map-name: \"$grid-breakpoints\") {\n+ @if length($map) > 0 {\n$values: map-values($map);\n$first-value: nth($values, 1);\n@if $first-value != 0 {\n@warn \"First breakpoint in #{$map-name} must start at 0, but starts at #{$first-value}.\";\n}\n}\n+}\n// Internal Bootstrap function to turn maps into its negative variant.\n// It prefixes the keys with `n` and makes the value negative.\n",
        "date": "17.04.2020 20:18:51",
        "repo": "coreui/coreui",
        "type": "feat",
        "chatgpt_zeroshot": "Fix issue with first breakpoint not starting at 0 in _assert-starts-at-zero mixin"
    },
    {
        "msg": "feat(color-contrast): set min-contrast-ratio as an argument",
        "diff": "diff --git a/scss/_functions.scss b/scss/_functions.scss // stylelint-disable-next-line scss/dollar-variable-default, scss/dollar-variable-pattern\n$_luminance-list: .0008 .001 .0011 .0013 .0015 .0017 .002 .0022 .0025 .0027 .003 .0033 .0037 .004 .0044 .0048 .0052 .0056 .006 .0065 .007 .0075 .008 .0086 .0091 .0097 .0103 .011 .0116 .0123 .013 .0137 .0144 .0152 .016 .0168 .0176 .0185 .0194 .0203 .0212 .0222 .0232 .0242 .0252 .0262 .0273 .0284 .0296 .0307 .0319 .0331 .0343 .0356 .0369 .0382 .0395 .0409 .0423 .0437 .0452 .0467 .0482 .0497 .0513 .0529 .0545 .0561 .0578 .0595 .0612 .063 .0648 .0666 .0685 .0704 .0723 .0742 .0762 .0782 .0802 .0823 .0844 .0865 .0887 .0908 .0931 .0953 .0976 .0999 .1022 .1046 .107 .1095 .1119 .1144 .117 .1195 .1221 .1248 .1274 .1301 .1329 .1356 .1384 .1413 .1441 .147 .15 .1529 .1559 .159 .162 .1651 .1683 .1714 .1746 .1779 .1812 .1845 .1878 .1912 .1946 .1981 .2016 .2051 .2086 .2122 .2159 .2195 .2232 .227 .2307 .2346 .2384 .2423 .2462 .2502 .2542 .2582 .2623 .2664 .2705 .2747 .2789 .2831 .2874 .2918 .2961 .3005 .305 .3095 .314 .3185 .3231 .3278 .3325 .3372 .3419 .3467 .3515 .3564 .3613 .3663 .3712 .3763 .3813 .3864 .3916 .3968 .402 .4072 .4125 .4179 .4233 .4287 .4342 .4397 .4452 .4508 .4564 .4621 .4678 .4735 .4793 .4851 .491 .4969 .5029 .5089 .5149 .521 .5271 .5333 .5395 .5457 .552 .5583 .5647 .5711 .5776 .5841 .5906 .5972 .6038 .6105 .6172 .624 .6308 .6376 .6445 .6514 .6584 .6654 .6724 .6795 .6867 .6939 .7011 .7084 .7157 .7231 .7305 .7379 .7454 .7529 .7605 .7682 .7758 .7835 .7913 .7991 .807 .8148 .8228 .8308 .8388 .8469 .855 .8632 .8714 .8796 .8879 .8963 .9047 .9131 .9216 .9301 .9387 .9473 .956 .9647 .9734 .9823 .9911 1;\n-@function color-contrast($background, $color-contrast-dark: $color-contrast-dark, $color-contrast-light: $color-contrast-light) {\n+@function color-contrast($background, $color-contrast-dark: $color-contrast-dark, $color-contrast-light: $color-contrast-light, $min-contrast-ratio: $min-contrast-ratio) {\n$foregrounds: $color-contrast-light, $color-contrast-dark, $white, $black;\n$contrast-ratios: ();\n",
        "date": "09.04.2020 16:51:50",
        "repo": "coreui/coreui",
        "type": "feat",
        "chatgpt_zeroshot": "Add $min-contrast-ratio parameter to color-contrast function"
    },
    {
        "msg": "feat(colors): bump dark to gray-900",
        "diff": "diff --git a/scss/_variables.scss b/scss/_variables.scss @@ -67,7 +67,7 @@ $info: $cyan !default;\n$warning: $yellow !default;\n$danger: $red !default;\n$light: $gray-100 !default;\n-$dark: $gray-800 !default;\n+$dark: $gray-900 !default;\n// scss-docs-start theme-colors-map\n$theme-colors: (\n",
        "date": "29.09.2020 21:09:38",
        "repo": "coreui/coreui",
        "type": "feat",
        "chatgpt_zeroshot": "Update $dark theme color to $gray-900 in _variables.scss"
    },
    {
        "msg": "feat: add breakpoint-before function",
        "diff": "diff --git a/scss/mixins/_breakpoints.scss b/scss/mixins/_breakpoints.scss @return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n+// Name of the previous breakpoint, or null for the first breakpoint.\n+//\n+// >> breakpoint-before(lg)\n+// md\n+// >> breakpoint-next(lg, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n+// md\n+// >> breakpoint-next(lg, $breakpoint-names: (xs sm md lg xl))\n+// md\n+@function breakpoint-before($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n+ $n: index($breakpoint-names, $name);\n+ @return if($n != null and $n < length($breakpoint-names), nth($breakpoint-names, $n - 1), null);\n+}\n+\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n// >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n",
        "date": "28.12.2020 14:50:29",
        "repo": "coreui/coreui",
        "type": "feat",
        "chatgpt_zeroshot": "Add function to get name of the previous breakpoint."
    },
    {
        "msg": "feat: add `border-{top | right | bottom | left}-color` and `border-{top | right | bottom | left}-width` utilities",
        "diff": "diff --git a/scss/_utilities.scss b/scss/_utilities.scss @@ -112,11 +112,51 @@ $utilities: map-merge(\nclass: border,\nvalues: map-merge($theme-colors, (\"white\": $white))\n),\n+ \"border-top-color\": (\n+ property: border-top-color,\n+ class: border-top,\n+ values: map-merge($theme-colors, (\"white\": $white))\n+ ),\n+ \"border-right-color\": (\n+ property: border-right-color,\n+ class: border-right,\n+ values: map-merge($theme-colors, (\"white\": $white))\n+ ),\n+ \"border-bottom-color\": (\n+ property: border-bottom-color,\n+ class: border-bottom,\n+ values: map-merge($theme-colors, (\"white\": $white))\n+ ),\n+ \"border-left-color\": (\n+ property: border-right-color,\n+ class: border-left,\n+ values: map-merge($theme-colors, (\"white\": $white))\n+ ),\n\"border-width\": (\nproperty: border-width,\nclass: border,\nvalues: $border-widths\n),\n+ \"border-top-width\": (\n+ property: border-top-width,\n+ class: border-top,\n+ values: $border-widths\n+ ),\n+ \"border-right-width\": (\n+ property: border-right-width,\n+ class: border-right,\n+ values: $border-widths\n+ ),\n+ \"border-bottom-width\": (\n+ property: border-bottom-width,\n+ class: border-bottom,\n+ values: $border-widths\n+ ),\n+ \"border-left-width\": (\n+ property: border-left-width,\n+ class: border-left,\n+ values: $border-widths\n+ ),\n// Sizing utilities\n\"width\": (\nproperty: width,\n",
        "date": "03.01.2021 12:15:46",
        "repo": "coreui/coreui",
        "type": "feat",
        "chatgpt_zeroshot": "Add border color and width utility classes for all sides"
    },
    {
        "msg": "feat: CSS Variables support",
        "diff": "diff --git a/scss/mixins/_utilities.scss b/scss/mixins/_utilities.scss // Don't prefix if value key is null (eg. with shadow class)\n$property-class-modifier: if($key, if($property-class == \"\" and $infix == \"\", \"\", \"-\") + $key, \"\");\n+ // Generate also CSS Variable\n+ $generate-vars: if(map-has-key($utility, vars), map-get($utility, vars), \"false\");\n+\n@if map-get($utility, rfs) {\n// Inside the media query\n@if $is-rfs-media-query {\n}\n.#{$property-class + $infix + $property-class-modifier} {\n@each $property in $properties {\n+ @if $generate-vars == true {\n#{$property}: var(--#{$variable-prefix}#{$property-class + $infix + $property-class-modifier}, $value) if($enable-important-utilities, !important, null);\n}\n+ @else {\n+ #{$property}: $value if($enable-important-utilities, !important, null);\n+ }\n+ }\n}\n@each $pseudo in $state {\n",
        "date": "04.01.2021 15:06:26",
        "repo": "coreui/coreui",
        "type": "feat",
        "chatgpt_zeroshot": "Add generation of CSS variables for utilities with vars property."
    },
    {
        "msg": "feat: add font weight medium and semibold;\nrefactor: update colors;\nfix: change null to unset to properly generate CSS Variables;",
        "diff": "diff --git a/scss/_variables.scss b/scss/_variables.scss @@ -67,7 +67,7 @@ $primary-50: #988fed !default;\n$primary-25: #ccc7f6 !default;\n$secondary-dark: #212233 !default;\n-$secondary: #3c4b64 !default;\n+$secondary: #9da5b1 !default;\n$secondary-50: #9da5b1 !default;\n$secondary-25: #ced2d8 !default;\n@@ -115,9 +115,9 @@ $theme-colors: (\n// scss-docs-end theme-colors-map\n// Text colors\n-$high-emphasis-dark: rgba($black, .87) !default;\n-$medium-emphasis-dark: rgba($black, .6) !default;\n-$disabled-dark: rgba($black, .38) !default;\n+$high-emphasis-dark: rgba(shift-color($gray-base, +26), .87) !default;\n+$medium-emphasis-dark: rgba(shift-color($gray-base, +26), .6) !default;\n+$disabled-dark: rgba(shift-color($gray-base, +26), .38) !default;\n$high-emphasis-light: rgba($white, .87) !default;\n$medium-emphasis-light: rgba($white, .6) !default;\n@@ -399,7 +399,7 @@ $border-widths: (\n5: 5px\n) !default;\n-$border-color: $gray-300 !default;\n+$border-color: $gray-200 !default;\n$border-radius: .25rem !default;\n$border-radius-sm: .2rem !default;\n@@ -454,6 +454,8 @@ $font-size-lg: $font-size-base * 1.25 !default;\n$font-weight-lighter: lighter !default;\n$font-weight-light: 300 !default;\n$font-weight-normal: 400 !default;\n+$font-weight-medium: 500 !default;\n+$font-weight-semibold: 600 !default;\n$font-weight-bold: 700 !default;\n$font-weight-bolder: bolder !default;\n@@ -486,7 +488,7 @@ $headings-font-family: null !default;\n$headings-font-style: null !default;\n$headings-font-weight: 500 !default;\n$headings-line-height: 1.2 !default;\n-$headings-color: null !default;\n+$headings-color: unset !default;\n// scss-docs-start display-headings\n$display-font-sizes: (\n@@ -750,7 +752,7 @@ $form-check-input-width: 1em !default;\n$form-check-min-height: $font-size-base * $line-height-base !default;\n$form-check-padding-start: $form-check-input-width + .5em !default;\n$form-check-margin-bottom: .125rem !default;\n-$form-check-label-color: null !default;\n+$form-check-label-color: unset !default;\n$form-check-label-cursor: null !default;\n$form-check-transition: background-color .15s ease-in-out, background-position .15s ease-in-out, border-color .15s ease-in-out, box-shadow .15s ease-in-out !default;\n@@ -1074,9 +1076,9 @@ $card-inner-border-radius: subtract($card-border-radius, $card-border-w\n$card-cap-padding-y: $card-spacer-y / 2 !default;\n$card-cap-padding-x: $card-spacer-x !default;\n$card-cap-bg: rgba($black, .03) !default;\n-$card-cap-color: null !default;\n+$card-cap-color: unset !default;\n$card-height: null !default;\n-$card-color: null !default;\n+$card-color: unset !default;\n$card-bg: $white !default;\n$card-img-overlay-padding: $spacer !default;\n@@ -1179,7 +1181,7 @@ $toast-max-width: 350px !default;\n$toast-padding-x: .75rem !default;\n$toast-padding-y: .5rem !default;\n$toast-font-size: .875rem !default;\n-$toast-color: null !default;\n+$toast-color: unset !default;\n$toast-background-color: rgba($white, .85) !default;\n$toast-border-width: 1px !default;\n$toast-border-color: rgba(0, 0, 0, .1) !default;\n@@ -1217,7 +1219,7 @@ $modal-dialog-margin-y-sm-up: 1.75rem !default;\n$modal-title-line-height: $line-height-base !default;\n-$modal-content-color: null !default;\n+$modal-content-color: unset !default;\n$modal-content-bg: $white !default;\n$modal-content-border-color: rgba($black, .2) !default;\n$modal-content-border-width: $border-width !default;\n@@ -1308,7 +1310,7 @@ $progress-bar-transition: width .6s ease !default;\n// List group\n// scss-docs-start list-group-variables\n-$list-group-color: null !default;\n+$list-group-color: unset !default;\n$list-group-bg: $white !default;\n$list-group-border-color: rgba($black, .125) !default;\n$list-group-border-width: $border-width !default;\n@@ -1430,7 +1432,7 @@ $breadcrumb-padding-y: 0 !default;\n$breadcrumb-padding-x: 0 !default;\n$breadcrumb-item-padding-x: .5rem !default;\n$breadcrumb-margin-bottom: 1rem !default;\n-$breadcrumb-bg: null !default;\n+$breadcrumb-bg: unset !default;\n$breadcrumb-divider-color: $gray-600 !default;\n$breadcrumb-active-color: $gray-600 !default;\n$breadcrumb-divider: quote(\"/\") !default;\n@@ -1605,4 +1607,4 @@ $kbd-font-size: $code-font-size !default;\n$kbd-color: $high-emphasis-light !default;\n$kbd-bg: $gray-900 !default;\n-$pre-color: null !default;\n+$pre-color: unset !default;\n",
        "date": "04.01.2021 15:10:43",
        "repo": "coreui/coreui",
        "type": "feat",
        "chatgpt_zeroshot": "Update color variables and font weights in _variables.scss"
    },
    {
        "msg": "feat: add `--cui-font-size-base` variable",
        "diff": "diff --git a/scss/_reboot.scss b/scss/_reboot.scss body {\nmargin: 0; // 1\nfont-family: $font-family-base;\n- @include font-size($font-size-base);\n+ @include font-size(var(--#{$variable-prefix}font-size-base, $font-size-base));\nfont-weight: $font-weight-base;\nline-height: $line-height-base;\ncolor: var(--#{$variable-prefix}body-color, $body-color);\n",
        "date": "04.01.2021 23:27:24",
        "repo": "coreui/coreui",
        "type": "feat",
        "chatgpt_zeroshot": "Update font-size mixin to use CSS variables"
    },
    {
        "msg": "feat: add new text utilities",
        "diff": "diff --git a/scss/_utilities.scss b/scss/_utilities.scss @@ -461,6 +461,8 @@ $utilities: map-merge(\nlight: $font-weight-light,\nlighter: $font-weight-lighter,\nnormal: $font-weight-normal,\n+ medium: $font-weight-medium,\n+ semibold: $font-weight-semibold,\nbold: $font-weight-bold,\nbolder: $font-weight-bolder\n)\n@@ -492,8 +494,15 @@ $utilities: map-merge(\n\"black-50\": rgba($black, .5),\n\"white-50\": rgba($white, .5),\n\"reset\": inherit,\n+ \"high-emphasis-light\": $high-emphasis-light,\n+ \"medium-emphasis-light\": $medium-emphasis-light,\n+ \"disabled-light\": $disabled-light,\n+ \"high-emphasis-dark\": $high-emphasis-dark,\n+ \"medium-emphasis-dark\": $medium-emphasis-dark,\n+ \"disabled-dark\": $disabled-dark\n)\n- )\n+ ),\n+ vars: true\n),\n\"line-height\": (\nproperty: line-height,\n@@ -515,7 +524,8 @@ $utilities: map-merge(\n\"white\": $white,\n\"transparent\": transparent\n)\n- )\n+ ),\n+ vars: true\n),\n\"gradient\": (\nproperty: background-image,\n",
        "date": "04.01.2021 23:28:12",
        "repo": "coreui/coreui",
        "type": "feat",
        "chatgpt_zeroshot": "Add new font weights and color variables to utilities map"
    },
    {
        "msg": "feat: add CSS Vars to border utilities",
        "diff": "diff --git a/scss/_utilities.scss b/scss/_utilities.scss @@ -88,14 +88,14 @@ $utilities: map-merge(\n\"border\": (\nproperty: border,\nvalues: (\n- null: $border-width solid $border-color,\n+ null: $border-width solid $var(--#{$variable-prefix}border-color, $border-color),\n0: 0,\n)\n),\n\"border-top\": (\nproperty: border-top,\nvalues: (\n- null: $border-width solid $border-color,\n+ null: $border-width solid $var(--#{$variable-prefix}border-color, $border-color),\n0: 0,\n)\n),\n@@ -103,14 +103,14 @@ $utilities: map-merge(\nproperty: border-right,\nclass: border-end,\nvalues: (\n- null: $border-width solid $border-color,\n+ null: $border-width solid $var(--#{$variable-prefix}border-color, $border-color),\n0: 0,\n)\n),\n\"border-bottom\": (\nproperty: border-bottom,\nvalues: (\n- null: $border-width solid $border-color,\n+ null: $border-width solid $var(--#{$variable-prefix}border-color, $border-color),\n0: 0,\n)\n),\n@@ -118,12 +118,12 @@ $utilities: map-merge(\nproperty: border-left,\nclass: border-start,\nvalues: (\n- null: $border-width solid $border-color,\n+ null: $border-width solid $var(--#{$variable-prefix}border-color, $border-color),\n0: 0,\n)\n),\n- \"border-color\": (\n- property: border-color,\n+ \"var(--#{$variable-prefix}border-color, $border-color)\": (\n+ property: var(--#{$variable-prefix}border-color, $border-color),\nclass: border,\nvalues: map-merge($theme-colors, (\"white\": $white))\n),\n",
        "date": "09.03.2021 00:14:25",
        "repo": "coreui/coreui",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor border utility classes to use variable for border color."
    },
    {
        "msg": "feat: add `contrast-ratio-correction` function",
        "diff": "diff --git a/scss/_functions.scss b/scss/_functions.scss @@ -126,6 +126,19 @@ $_luminance-list: .0008 .001 .0011 .0013 .0015 .0017 .002 .0022 .0025 .0027 .003\n@return if($l1 > $l2, ($l1 + .05) / ($l2 + .05), ($l2 + .05) / ($l1 + .05));\n}\n+@function contrast-ratio-correction($color, $background, $scale, $state) {\n+ @if ($enable-contrast-ratio-correction) {\n+ $contrast-ratio: contrast-ratio($background, $color);\n+ @if $contrast-ratio < $min-contrast-ratio {\n+ @if $enable-contrast-ratio-warnings {\n+ @warn \"#{$state} contrast ratio #{$contrast-ratio}.\";\n+ }\n+ @return mix($color, color-contrast($background), abs($scale));\n+ }\n+ }\n+ @return $color;\n+}\n+\n// Return WCAG2.0 relative luminance\n// See https://www.w3.org/WAI/GL/wiki/Relative_luminance\n// See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n",
        "date": "11.03.2021 17:43:10",
        "repo": "coreui/coreui",
        "type": "feat",
        "chatgpt_zeroshot": "Add contrast ratio correction function for color contrast adjustments."
    },
    {
        "msg": "feat: allow to generate CSS Variables without callbacks",
        "diff": "diff --git a/scss/mixins/_utilities.scss b/scss/mixins/_utilities.scss $properties: append((), $properties);\n}\n+ // Use class prefix if present\n+ $property-class-prefix: if(map-has-key($utility, prefix), map-get($utility, prefix), null);\n+ $property-class-prefix: if($property-class-prefix == null, \"\", $property-class-prefix);\n+\n// Use custom class if present\n$property-class: if(map-has-key($utility, class), map-get($utility, class), nth($properties, 1));\n$property-class: if($property-class == null, \"\", $property-class);\n$property-class-modifier: if($key, if($property-class == \"\" and $infix == \"\", \"\", \"-\") + $key, \"\");\n// Generate also CSS Variable\n- $generate-vars: if(map-has-key($utility, vars), map-get($utility, vars), \"false\");\n- $generate-rtl: if(map-has-key($utility, rtl), map-get($utility, rtl), \"false\");\n+ $generate-vars: if(map-has-key($utility, vars), map-get($utility, vars), false);\n+ $generate-only-vars: if(map-has-key($utility, only-vars), map-get($utility, only-vars), false);\n+\n+ // Generate RTL version\n+ $generate-rtl: if(map-has-key($utility, rtl), map-get($utility, rtl), false);\n@if map-get($utility, rfs) {\n// Inside the media query\n@if $is-rtl == false {\n/* rtl:begin:remove */\n}\n- .#{$property-class + $infix + $property-class-modifier} {\n+ .#{$property-class-prefix + $property-class + $infix + $property-class-modifier} {\n@each $property in $properties {\n- @if $generate-vars == true {\n+ @if $generate-vars == true or $generate-only-vars == true {\n+ @if $generate-only-vars {\n+ #{$property}: var(--#{$variable-prefix}#{$key}) if($enable-important-utilities, !important, null);\n+ }\n+ @else {\n#{$property}: var(--#{$variable-prefix}#{$key}, $value) if($enable-important-utilities, !important, null);\n}\n+ }\n@else {\n@if $generate-rtl == true {\n@include ltr-rtl($property, $value, null, null, if($enable-important-utilities, !important, null));\n",
        "date": "21.03.2021 00:42:36",
        "repo": "coreui/coreui",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor utility mixin to support class prefixes and generate only CSS variables when specified."
    },
    {
        "msg": "feat(forms): angular validation classes",
        "diff": "diff --git a/scss/mixins/_forms.scss b/scss/mixins/_forms.scss @mixin form-validation-state-selector($state) {\n@if ($state == \"valid\" or $state == \"invalid\") {\n.was-validated #{if(&, \"&\", \"\")}:#{$state},\n- #{if(&, \"&\", \"\")}.is-#{$state} {\n+ #{if(&, \"&\", \"\")}.is-#{$state}, #{if(&, \"&\", \"\")}.ng-#{$state} {\n@content;\n}\n} @else {\n- #{if(&, \"&\", \"\")}.is-#{$state} {\n+ #{if(&, \"&\", \"\")}.is-#{$state}, #{if(&, \"&\", \"\")}.ng-#{$state} {\n@content;\n}\n}\n",
        "date": "26.04.2022 17:35:52",
        "repo": "coreui/coreui",
        "type": "feat",
        "chatgpt_zeroshot": "Add ng- prefix to form validation state selectors"
    },
    {
        "msg": "feat: support CHECKOUT_MERCHANT payment labels",
        "diff": "diff --git a/src/react/Functions/EventStatusTexts.js b/src/react/Functions/EventStatusTexts.js @@ -87,6 +87,8 @@ export const paymentTypeParser = (paymentType, t) => {\nreturn \"SEPA credit transfer\";\ncase \"EBA_SDD\":\nreturn \"SEPA direct debit\";\n+ case \"CHECKOUT_MERCHANT\":\n+ return \"top up\";\n}\nreturn paymentType;\n};\n",
        "date": "03.02.2020 22:50:25",
        "repo": "bunqcommunity/bunqdesktop",
        "type": "feat",
        "chatgpt_zeroshot": "Add support for CHECKOUT_MERCHANT payment type in EventStatusTexts."
    },
    {
        "msg": "feat: add keyboard navigation for Schedule",
        "diff": "diff --git a/packages/veui/src/components/Schedule.vue b/packages/veui/src/components/Schedule.vue <td v-for=\"(hour, j) in day\" :key=\"j\" :class=\"{ 'veui-schedule-selected': hour.isSelected }\">\n<button type=\"button\" :disabled=\"realDisabled || hour.isDisabled\"\n:class=\"mergeClass({ 'veui-schedule-selected': hour.isSelected }, week[i], j)\"\n- :ref=\"`${week[i]}-${j}`\"\n+ :ref=\"`hour-${week[i]}-${j}`\"\n@mousedown=\"handleMousedown(i, j)\"\n@mouseenter=\"handleHover(i, j)\"\n- @mouseup=\"pick()\"><slot name=\"hour\" :day=\"week[i]\" :hour=\"j\"/></button>\n+ @mouseup=\"pick\"\n+ @keydown.space.enter=\"handleMousedown(i, j)\"\n+ @keyup.space.enter=\"pick\"\n+ @keydown.up.prevent=\"moveFocus((i + 6) % 7, j)\"\n+ @keydown.right.prevent=\"moveFocus(i, (j + 25) % 24)\"\n+ @keydown.down.prevent=\"moveFocus((i + 1) % 7, j)\"\n+ @keydown.left.prevent=\"moveFocus(i, (j + 23) % 24)\"><slot name=\"hour\" :day=\"week[i]\" :hour=\"j\"/></button>\n</td>\n</tr>\n</table>\n@@ -239,7 +245,7 @@ export default {\nif (!current) {\nreturn null\n}\n- return `${current.day}-${current.hour}`\n+ return `hour-${current.day}-${current.hour}`\n},\ncurrentLabel () {\nlet current = this.current\n@@ -366,6 +372,15 @@ export default {\nthis.$delete(this.localSelected, day)\n}\nthis.$emit('select', this.localSelected)\n+ },\n+ moveFocus (dayIndex, hour) {\n+ let day = this.week[dayIndex]\n+ this.handleHover(dayIndex, hour)\n+\n+ let el = (this.$refs[`hour-${day}-${hour}`] || [])[0]\n+ if (el && typeof el.focus === 'function') {\n+ el.focus()\n+ }\n}\n}\n}\n",
        "date": "11.06.2018 15:35:37",
        "repo": "ecomfe/veui",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor Schedule component to improve keyboard accessibility and focus management"
    },
    {
        "msg": "feat: rename `options`/`option` to `items`/`item`.",
        "diff": "diff --git a/packages/veui/src/components/Tree/_TreeNode.vue b/packages/veui/src/components/Tree/_TreeNode.vue <div class=\"veui-tree-item\"\n:class=\"{'veui-tree-item-expanded': option.expanded}\"\n@click=\"click(option, [], index, depth)\">\n- <slot name=\"item\" :option=\"option\" :index=\"index\" :depth=\"depth\">\n+ <slot name=\"item\" :item=\"option\" :index=\"index\" :depth=\"depth\">\n<span class=\"veui-tree-item-expand-switcher\"\nv-if=\"option.children && option.children.length\"\n@click.stop=\"toggle(option, index, depth)\">\n<veui-icon :name=\"icons.collapsed\"/>\n</span>\n<div class=\"veui-tree-item-label\">\n- <slot name=\"item-label\" :option=\"option\" :index=\"index\" :depth=\"depth\">{{ option.label }}</slot>\n+ <slot name=\"item-label\" :item=\"option\" :index=\"index\" :depth=\"depth\">{{ option.label }}</slot>\n</div>\n</slot>\n</div>\n<template slot=\"item\" slot-scope=\"props\">\n<slot name=\"item\" v-bind=\"props\">\n<span class=\"veui-tree-item-expand-switcher\"\n- v-if=\"props.option.children && props.option.children.length\"\n- @click.stop=\"toggle(props.option, props.index, depth + 1)\">\n+ v-if=\"props.item.children && props.item.children.length\"\n+ @click.stop=\"toggle(props.item, props.index, depth + 1)\">\n<veui-icon :name=\"icons.collapsed\"/>\n</span>\n<div class=\"veui-tree-item-label\">\n- <slot name=\"item-label\" v-bind=\"props\">{{ props.option.label }}</slot>\n+ <slot name=\"item-label\" v-bind=\"props\">{{ props.item.label }}</slot>\n</div>\n</slot>\n</template>\n",
        "date": "17.06.2018 18:30:14",
        "repo": "ecomfe/veui",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor Tree component to pass item object instead of option object to slots"
    },
    {
        "msg": "feat: add role for Toast",
        "diff": "diff --git a/packages/veui/src/components/Toast.vue b/packages/veui/src/components/Toast.vue <template>\n<transition name=\"veui-toast\">\n- <div :ui=\"ui\" class=\"veui-toast\" :class=\"`veui-toast-${type}`\">\n+ <div\n+ :ui=\"ui\"\n+ class=\"veui-toast\"\n+ :class=\"`veui-toast-${type}`\"\n+ role=\"alert\">\n<veui-icon class=\"veui-toast-icon\" :name=\"icons[type]\"/>\n<span class=\"veui-toast-message\">{{ message }}</span>\n</div>\n",
        "date": "15.06.2018 16:18:32",
        "repo": "ecomfe/veui",
        "type": "feat",
        "chatgpt_zeroshot": "Add role=\"alert\" to Toast component for accessibility"
    },
    {
        "msg": "feat: add leading modifier for resize directive",
        "diff": "diff --git a/packages/veui/src/directives/resize.js b/packages/veui/src/directives/resize.js import { addListener, removeListener } from 'resize-detector'\n-import { debounce, throttle, isObject, assign } from 'lodash'\n+import { debounce, throttle, isObject, assign, isEqual, find } from 'lodash'\nconst modeMap = {\ndebounce,\n@@ -7,35 +7,36 @@ const modeMap = {\n}\nfunction attach (el, { value, oldValue, arg = 150, modifiers }) {\n+ let mode = find(Object.keys(modeMap), mode => modifiers[mode])\nlet options = {\ndelay: arg,\n- mode: Object.keys(modifiers)[0],\n- handler: value\n+ mode,\n+ handler: value,\n+ leading: modifiers.leading\n}\nif (isObject(value)) {\nassign(options, value)\n}\nlet fn = modeMap[options.mode]\n- let cb = fn ? fn(options.handler, options.delay) : options.handler\n+ let cb = fn ? fn(options.handler, options.delay, options.leading) : options.handler\nif (!oldValue) {\nel.__veui_resize_handler__ = cb\naddListener(el, cb)\n} else {\nlet oldOptions = {\n- delay: 150,\n- mode: null,\n- handler: oldValue\n+ delay: arg,\n+ mode,\n+ handler: oldValue,\n+ leading: modifiers.leading\n}\nif (isObject(oldValue)) {\nassign(oldOptions, oldValue)\n}\n- let changed = oldValue.delay !== options.delay ||\n- oldValue.mode !== options.mode ||\n- oldValue.handler !== options.handler\n+ let changed = isEqual(oldValue, options)\nif (changed) {\nlet oldCb = el.__veui_resize_handler__\n",
        "date": "26.06.2018 15:09:38",
        "repo": "ecomfe/veui",
        "type": "feat",
        "chatgpt_zeroshot": "Refactor resize directive to include isEqual and find lodash functions"
    },
    {
        "msg": "fix(token): typo in documentation\nImplemantation -> Implementation",
        "diff": "diff --git a/contracts/token/StandardToken.sol b/contracts/token/StandardToken.sol @@ -8,7 +8,7 @@ import './ERC20.sol';\n/**\n* @title Standard ERC20 token\n*\n- * @dev Implemantation of the basic standard token.\n+ * @dev Implementation of the basic standard token.\n* @dev https://github.com/ethereum/EIPs/issues/20\n* @dev Based on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\n*/\n",
        "date": "30.06.2017 14:40:15",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "fix",
        "chatgpt_zeroshot": "Fix typo in comment in StandardToken.sol"
    },
    {
        "msg": "fix: default to empty string for mnemonic",
        "diff": "diff --git a/truffle-config.js b/truffle-config.js @@ -8,7 +8,7 @@ const providerWithMnemonic = (mnemonic, rpcEndpoint) =>\nnew HDWalletProvider(mnemonic, rpcEndpoint);\nconst infuraProvider = network => providerWithMnemonic(\n- process.env.MNEMONIC,\n+ process.env.MNEMONIC || '',\n`https://${network}.infura.io/${process.env.INFURA_API_KEY}`\n);\n",
        "date": "01.12.2017 13:43:25",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "fix",
        "chatgpt_zeroshot": "Fix issue with missing default value for MNEMONIC in truffle-config.js"
    },
    {
        "msg": "fix: make roles private",
        "diff": "diff --git a/contracts/ownership/rbac/RBAC.sol b/contracts/ownership/rbac/RBAC.sol @@ -15,7 +15,7 @@ import './Roles.sol';\ncontract RBAC {\nusing Roles for Roles.Role;\n- mapping (string => Roles.Role) internal roles;\n+ mapping (string => Roles.Role) private roles;\nevent LogRoleAdded(address addr, string roleName);\nevent LogRoleRemoved(address addr, string roleName);\n",
        "date": "01.12.2017 17:53:24",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "fix",
        "chatgpt_zeroshot": "Change roles mapping visibility to private in RBAC contract"
    },
    {
        "msg": "fix: TokenDestructible typo fron->from",
        "diff": "diff --git a/test/TokenDestructible.test.js b/test/TokenDestructible.test.js @@ -7,7 +7,10 @@ contract('TokenDestructible', function (accounts) {\nlet destructible;\nbeforeEach(async function () {\n- destructible = await TokenDestructible.new({ fron: accounts[0], value: web3.toWei('10', 'ether') });\n+ destructible = await TokenDestructible.new({\n+ from: accounts[0],\n+ value: web3.toWei('10', 'ether'),\n+ });\n});\nit('should send balance to owner after destruction', async function () {\n",
        "date": "31.12.2017 19:06:38",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "fix",
        "chatgpt_zeroshot": "Fix typo in TokenDestructible contract initialization"
    },
    {
        "msg": "fix: remove warning on timestamp usage",
        "diff": "diff --git a/.soliumrc.json b/.soliumrc.json \"extends\": \"solium:all\",\n\"plugins\": [\"security\"],\n\"rules\": {\n- \"indentation\": [\"error\", 2],\n\"quotes\": [\"error\", \"double\"],\n- \"security/enforce-explicit-visibility\": [\"error\"],\n- \"security/no-block-members\": [\"warning\", [\"timestamp\"]]\n+ \"indentation\": [\"error\", 2],\n+ \"arg-overflow\": [\"warning\", 3],\n+ \"security/enforce-explicit-visibility\": [\"error\"]\n}\n}\n",
        "date": "15.01.2018 14:52:05",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "fix",
        "chatgpt_zeroshot": "Add arg-overflow rule and update quotes in soliumrc.json"
    },
    {
        "msg": "fix(environment): Fix content security policy",
        "diff": "diff --git a/config/environment.js b/config/environment.js @@ -59,7 +59,7 @@ module.exports = function(environment) {\nENV.contentSecurityPolicy = {\n\"default-src\": \"'self' *.fastly.net\",\n- \"connect-src\": \"'self' https://s3.amazonaws.com *.algolia.net *.fastly.net\",\n+ \"connect-src\": \"'self' https://s3.amazonaws.com *.algolia.net *.algolianet.com *.fastly.net\",\n\"script-src\": \"'self' unsafe-inline use.typekit.net 'sha256-36n/xkZHEzq3lo4O+0jXMYbl+dWu3C8orOFHtcAH6HU=' *.fastly.net https://www.google-analytics.com\",\n\"font-src\": \"'self' data://* https://fonts.gstatic.com *.fastly.net\",\n\"img-src\": \"'self' data://* *.fastly.net https://www.google-analytics.com\",\n",
        "date": "05.04.2017 21:11:06",
        "repo": "ember-learn/ember-api-docs",
        "type": "fix",
        "chatgpt_zeroshot": "Update connect-src in contentSecurityPolicy to include *.algolianet.com"
    },
    {
        "msg": "fix(classes): Fix classes redirection",
        "diff": "diff --git a/app/routes/project-version/classes/class.js b/app/routes/project-version/classes/class.js import Ember from 'ember';\nimport getLastVersion from '../../../utils/get-last-version';\n+const { Inflector: { inflector }} = Ember;\n+\nexport default Ember.Route.extend({\nmodel(params) {\n@@ -10,8 +12,8 @@ export default Ember.Route.extend({\nlet lastVersion = getLastVersion(versions);\nlet className = params['class'].substr(0, params['class'].lastIndexOf('.'));\n//peel off the .html\n- console.log('params', params, className);\nlet id = `ember-${lastVersion}-${className}`;\n+\nreturn Ember.RSVP.hash({\nproject: Ember.RSVP.resolve(project),\nversion: Ember.RSVP.resolve(lastVersion),\n@@ -23,12 +25,12 @@ export default Ember.Route.extend({\n};\n})\n.catch(() => {\n- // return this.store.find('namespace', id).then((classData) => {\n- // return {\n- // type: 'namespace',\n- // data: classData\n- // };\n- // });\n+ return this.store.find('namespace', id).then((classData) => {\n+ return {\n+ type: 'namespace',\n+ data: classData\n+ };\n+ });\n})\n.catch((e) => {\nreturn this.transitionTo('project-version');\n@@ -41,7 +43,7 @@ export default Ember.Route.extend({\n},\nredirect(model) {\n- return this.transitionTo(`project-version.${model.classData.type}`, model.project.id, model.version, model.classData.data.get('name'));\n+ return this.transitionTo(`project-version.${inflector.pluralize(model.classData.type)}.${model.classData.type}`, model.project.id, model.version, model.classData.data.get('name'));\n},\nserialize(model) {\n",
        "date": "07.06.2017 22:44:02",
        "repo": "ember-learn/ember-api-docs",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor route to use Inflector for pluralization and fix console log statement."
    },
    {
        "msg": "fix(project-version): Fixes version change, keeping the correct class on the URL",
        "diff": "diff --git a/app/routes/project-version.js b/app/routes/project-version.js @@ -45,17 +45,17 @@ export default Ember.Route.extend({\nendingRoute = `classes/${className}`;\nbreak;\n}\n- case 'project-version.classes.index': {\n+ case 'project-version.classes.class.index': {\nconst className = this.modelFor('project-version.classes.class').get('name');\nendingRoute = `classes/${className}`;\nbreak;\n}\n- case 'project-version.modules.index': {\n- const moduleName = this.pasramsFor('project-version.modules.module').module;\n+ case 'project-version.modules.module.index': {\n+ const moduleName = this.paramsFor('project-version.modules.module').module;\nendingRoute = `modules/${moduleName}`;\nbreak;\n}\n- case 'project-version.namespaces.index': {\n+ case 'project-version.namespaces.namespace.index': {\nconst namespaceName = this.paramsFor('project-version.namespaces.namespace').namespace;\nendingRoute = `namespaces/${namespaceName}`;\nbreak;\n",
        "date": "18.06.2017 22:07:45",
        "repo": "ember-learn/ember-api-docs",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor route names in project-version.js"
    },
    {
        "msg": "fix(search-input): Rename placeholder",
        "diff": "diff --git a/app/templates/components/search-input.hbs b/app/templates/components/search-input.hbs oninput={{perform search value='target.value'}}\nonfocus={{action 'onfocus'}}\nonblur={{action 'onblur'}}\n- placeholder=\"Search the guides\"\n+ placeholder=\"Search\"\n>\n{{!-- Search results dropdown --}}\n",
        "date": "16.08.2017 21:47:13",
        "repo": "ember-learn/ember-api-docs",
        "type": "fix",
        "chatgpt_zeroshot": "Update search input placeholder text"
    },
    {
        "msg": "fix(search-input): Fix empty search input",
        "diff": "diff --git a/app/components/search-input.js b/app/components/search-input.js @@ -37,9 +37,9 @@ export default Component.extend({\nconst projectVersion = get(this, '_projectVersion');\n// Hide and don't run query if there's no search query\n- // if (!query) {\n- // return set(this, '_focused', false);\n- // }\n+ if (!query) {\n+ return set(this, '_focused', false);\n+ }\nconst params = {\nhitsPerPage: 15,\n",
        "date": "16.08.2017 22:34:58",
        "repo": "ember-learn/ember-api-docs",
        "type": "fix",
        "chatgpt_zeroshot": "Fix issue with search input focus when there is no query."
    },
    {
        "msg": "fix(dropdown): Remove capital case",
        "diff": "diff --git a/app/components/search-input/dropdown.js b/app/components/search-input/dropdown.js -import { capitalize } from '@ember/string';\nimport Component from '@ember/component';\nimport { get, computed } from '@ember/object';\nimport { A } from '@ember/array';\n@@ -30,7 +29,7 @@ export default Component.extend({\nconst lvl0Group = get(this, 'results').reduce((previous, current) => {\n// Remap all lowercase usages of 'guides' to 'Guides'\n- let lvl0 = capitalize(get(current, 'hierarchy.lvl0'));\n+ let lvl0 = get(current, 'hierarchy.lvl0');\n// If lvl0 doesn't exist in the resulting object, create the array\nif (!previous[lvl0]) {\nprevious[lvl0] = A();\n",
        "date": "29.01.2018 20:13:19",
        "repo": "ember-learn/ember-api-docs",
        "type": "fix",
        "chatgpt_zeroshot": "Remove capitalize function from lvl0 variable in dropdown.js"
    },
    {
        "msg": "fix(docs): update ember.js codebase link\nIt was broken",
        "diff": "diff --git a/README.md b/README.md @@ -8,7 +8,7 @@ There are four pieces that together create the Ember API docs:\n- The app in this repository, which fetches and displays the API docs data. It is what you see at\n[https://emberjs.com/api](https://emberjs.com/api)\n- The YUIdoc code comments found in the\n-[Ember.js codebase](https://github.com/ember.js), where the informational content of the API documentation can be edited\n+[Ember.js codebase](https://github.com/emberjs/ember.js), where the informational content of the API documentation can be edited\n- The data generator that serializes code comments into JSONAPI and\ndeploys the result,\n[ember-jsonapi-docs](https://github.com/ember-learn/ember-jsonapi-docs)\n",
        "date": "13.06.2018 10:03:12",
        "repo": "ember-learn/ember-api-docs",
        "type": "fix",
        "chatgpt_zeroshot": "Update link to Ember.js codebase in README.md"
    },
    {
        "msg": "fix: presenceOf protractor tests required check of element e.g. $(...)",
        "diff": "diff --git a/test/components/datagrid/datagrid.e2e-spec.js b/test/components/datagrid/datagrid.e2e-spec.js @@ -28,7 +28,7 @@ const S = {\nreturn (\n`#datagrid .datagrid-wrapper tbody tr:nth-child(${row}) ` +\n`td:nth-child(${column}) ` +\n- `[role=\"checkbox\"]${checkedState}`\n+ `${checkedState}`\n);\n},\nremoveRowButton: () => '#remove-btn'\n@@ -1285,7 +1285,7 @@ describe('Datagrid mixed selection tests', () => {\n}\n});\n-fdescribe('Datagrid multiselect tests', () => {\n+describe('Datagrid multiselect tests', () => {\nbeforeEach(async () => {\nawait utils.setPage('/components/datagrid/example-multiselect.html?theme=classic&layout=nofrills');\n@@ -1363,27 +1363,24 @@ fdescribe('Datagrid multiselect tests', () => {\nawait browser.wait(until.presenceOf($(S.gridColumn({ row: 1, column: 2 }))));\nawait $(S.gridColumn({ row: 1, column: 2 })).click();\nawait browser.wait(until.presenceOf($(S.gridRowCheckbox({ row: 1, checked: true }))));\n-\n// select row 2\nawait browser.wait(until.presenceOf($(S.gridColumn({ row: 2, column: 2 }))));\nawait $(S.gridColumn({ row: 2, column: 2 })).click();\nawait browser.wait(until.presenceOf($(S.gridRowCheckbox({ row: 2, checked: true }))));\n-\nexpect(await element(by.css('.selection-count')).getText()).toEqual('2 Selected');\n-\n// sort ascending\nawait browser.wait(\n- until.presenceOf('#datagrid .datagrid-header th.is-sortable:nth-child(2) .datagrid-header-text')\n+ until.presenceOf($('#datagrid .datagrid-header th.is-sortable:nth-child(2) .datagrid-header-text'))\n);\nawait element(by.css('#datagrid .datagrid-header th.is-sortable:nth-child(2) .datagrid-header-text')).click();\n// sort descending\nawait browser.wait(\n- until.presenceOf('#datagrid .datagrid-header th.is-sorted-asc:nth-child(2) .datagrid-header-text')\n+ until.presenceOf($('#datagrid .datagrid-header th.is-sorted-asc:nth-child(2) .datagrid-header-text'))\n);\nawait element(by.css('#datagrid .datagrid-header th.is-sorted-asc:nth-child(2) .datagrid-header-text')).click();\nawait browser.wait(\n- until.presenceOf('#datagrid .datagrid-header th.is-sorted-desc:nth-child(2) .datagrid-header-text')\n+ until.presenceOf($('#datagrid .datagrid-header th.is-sorted-desc:nth-child(2) .datagrid-header-text'))\n);\n// select another row now that sort is flipped\n",
        "date": "19.04.2021 12:13:11",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor datagrid.e2e-spec.js for multiselect functionality and sorting."
    },
    {
        "msg": "fix: root issue/\"active\" class was toggling on button.close keyboard nav from inverted boolean check on searchfield",
        "diff": "diff --git a/src/components/searchfield/searchfield.js b/src/components/searchfield/searchfield.js @@ -936,7 +936,7 @@ SearchField.prototype = {\nconst wrapperElem = this.wrapper[0];\nif (this.settings.tabbable && wrapperElem.contains(active) && $(active).is('button.close')) {\n- return false;\n+ return true;\n}\n// If another element inside the Searchfield Wrapper is focused, the entire component\n",
        "date": "30.04.2021 18:39:32",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Fix bug in SearchField component where close button was not tabbable."
    },
    {
        "msg": "fix: large searchfield icon alignment (not related to",
        "diff": "diff --git a/src/components/searchfield/_searchfield.scss b/src/components/searchfield/_searchfield.scss @@ -574,3 +574,14 @@ html[dir='rtl'] {\ntop: 0;\n}\n}\n+\n+/**\n+ * align large searchfield search icon\n+ */\n+.header > .full-searchfield-container .searchfield-wrapper {\n+ & > svg.icon:nth-child(1) {\n+ height: 100%;\n+ top: 50%;\n+ transform: translateY(-50%);\n+ }\n+}\n",
        "date": "30.04.2021 18:45:59",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "\"Align large searchfield search icon vertically\""
    },
    {
        "msg": "fix: remove tls secret env var",
        "diff": "diff --git a/.github/workflows/ci.yml b/.github/workflows/ci.yml @@ -111,7 +111,6 @@ jobs:\n${repo_owner}/${repo_name}\nenv:\nAWF_AUTH_TOKEN: ${{ secrets.AWF_AUTH_TOKEN }}\n- TLS_SECRET: ${{ secrets.TLS_SECRET }}\nshell: bash\n- name: Dump GitHub context\n",
        "date": "19.08.2022 01:18:38",
        "repo": "infor-design/enterprise",
        "type": "fix",
        "chatgpt_zeroshot": "Remove TLS_SECRET from workflow configuration"
    },
    {
        "msg": "fix: html-legend: use legend keydown logic",
        "diff": "diff --git a/src/charts/html-legend.js b/src/charts/html-legend.js import {select} from 'd3-selection';\n-//import {event} from 'd3-selection';\nimport {pluck, utils} from '../core/utils';\nimport {config} from '../core/config';\n@@ -209,7 +208,7 @@ export class HtmlLegend {\n.attr('tabindex', 0);\ntabElements\n- .on('keydown', d => {\n+ .on('keydown', config._d3compat.eventHandler((d, event) => {\n// trigger only if d is an object\nif (event.keyCode === 13 && typeof d === 'object') {\nd.chart.legendToggle(d)\n@@ -219,7 +218,7 @@ export class HtmlLegend {\nd.chart.legendToggle(d)\nevent.preventDefault();\n}\n- })\n+ }))\n.on('focus', d => {\nthis._parent.legendHighlight(d);\n})\n",
        "date": "06.04.2021 17:27:49",
        "repo": "dc-js/dc.js",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor event handling in HtmlLegend class"
    },
    {
        "msg": "fix: move boilerplate compat layer methods",
        "diff": "diff --git a/src/core/config.js b/src/core/config.js @@ -18,17 +18,6 @@ export class Config {\nthis._renderlet = null;\n- this._d3compat = {\n- eventHandler: handler => function eventHandler (a, b) {\n- console.warn('No d3.js compatbility event handler registered, defaulting to v6 behavior.');\n- handler.call(this, b, a);\n- },\n- nester: ({key, sortKeys, sortValues, entries}) => {\n- throw new Error('No d3.js compatbility nester registered, load v5 or v6 compability layer.');\n- },\n- pointer: () => { throw new Error('No d3.js compatbility pointer registered, load v5 or v6 compability layer.'); }\n- };\n-\n/**\n* If this boolean is set truthy, all transitions will be disabled, and changes to the charts will happen\n* immediately.\n@@ -84,4 +73,13 @@ export const config = new Config();\n/**\n* d3.js compatiblity layer\n*/\n-export const d3compat = {};\n+export const d3compat = {\n+ eventHandler: handler => function eventHandler (a, b) {\n+ console.warn('No d3.js compatbility event handler registered, defaulting to v6 behavior.');\n+ handler.call(this, b, a);\n+ },\n+ nester: ({key, sortKeys, sortValues, entries}) => {\n+ throw new Error('No d3.js compatbility nester registered, load v5 or v6 compability layer.');\n+ },\n+ pointer: () => { throw new Error('No d3.js compatbility pointer registered, load v5 or v6 compability layer.'); }\n+};\n",
        "date": "06.04.2021 21:22:28",
        "repo": "dc-js/dc.js",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor d3.js compatibility layer in config.js"
    },
    {
        "msg": "fix: catch module.parent.filename === undefined\nIt happened with electron.js. Maybe some wrapper module has a native nature",
        "diff": "diff --git a/lib/utils/index.js b/lib/utils/index.js @@ -17,6 +17,10 @@ var utils = module.exports = {\nisRequired: (function () {\nvar p = module.parent;\nwhile (p) {\n+ // in electron.js engine it happens\n+ if (p.filename === undefined) {\n+ return true;\n+ }\nif (p.filename.indexOf('bin' + path.sep + 'nodemon.js') !== -1) {\nreturn false;\n}\n",
        "date": "04.09.2017 21:27:34",
        "repo": "remy/nodemon",
        "type": "fix",
        "chatgpt_zeroshot": "Fix issue with electron.js engine in isRequired function"
    },
    {
        "msg": "fix: help truncation on node 6.2",
        "diff": "diff --git a/lib/nodemon.js b/lib/nodemon.js @@ -37,6 +37,7 @@ function nodemon(settings) {\n}\nif (settings.help) {\n+ process.stdout._handle.setBlocking(true); // nodejs/node#6456\nconsole.log(help(settings.help));\nif (!config.required) {\nprocess.exit(0);\n",
        "date": "05.09.2017 04:36:06",
        "repo": "remy/nodemon",
        "type": "fix",
        "chatgpt_zeroshot": "Set process.stdout to blocking mode for help message output"
    },
    {
        "msg": "fix: exit when fail to parse the config file\nFixes",
        "diff": "diff --git a/lib/config/load.js b/lib/config/load.js @@ -182,6 +182,7 @@ function loadFile(options, config, dir, ready) {\n} catch (e) {\nconsole.error(e);\nutils.log.fail('Failed to parse config ' + filename);\n+ process.exit(1);\n}\n// options values will overwrite settings\n",
        "date": "04.09.2017 12:22:21",
        "repo": "remy/nodemon",
        "type": "fix",
        "chatgpt_zeroshot": "Add process exit on config parse failure"
    },
    {
        "msg": "fix: crash when passing argument to node (windows)\nFixes",
        "diff": "diff --git a/lib/monitor/run.js b/lib/monitor/run.js @@ -66,9 +66,6 @@ function run(options) {\n&& executable[executable.length - 1] !== '\\\"') {\n// remove all quotes from executable (possible backward compat hacks)\nexecutable = executable.replace (/\\\"/g, '');\n-\n- // add quotes to beginning and end of executable\n- executable = '\\\"' + executable + '\\\"';\n}\n}\n",
        "date": "15.09.2017 08:40:25",
        "repo": "remy/nodemon",
        "type": "fix",
        "chatgpt_zeroshot": "Remove unnecessary quotes from executable variable"
    },
    {
        "msg": "fix: Add support for multi-level filenames",
        "diff": "diff --git a/lib/config/exec.js b/lib/config/exec.js @@ -155,7 +155,9 @@ function exec(nodemonOptions, execMap) {\n// BIG NOTE: user can't do this: nodemon -e *.js\n// because the terminal will automatically expand the glob against\n// the file system :(\n- extension = (extension.match(/[^,.\\s]+/g) || []).join(',');\n+ extension = (extension.match(/[^,*\\s]+/g) || [])\n+ .map(ext => ext.replace(/^\\./, ''))\n+ .join(',');\noptions.ext = extension;\n",
        "date": "08.10.2017 16:03:07",
        "repo": "remy/nodemon",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor extension handling in exec function"
    },
    {
        "msg": "fix: sync help.txt to available options",
        "diff": "diff --git a/doc/cli/help.txt b/doc/cli/help.txt -v, --version ............ current nodemon version.\n-h, --help ............... you're looking at it.\n--help <topic> ........... help on a specific feature. Try \"--help topics\".\n+ --signal <signal> ........ use specified kill signal instead of default (ex. SIGTERM)\n-- <your args> ........... to tell nodemon stop slurping arguments.\nNote: if the script is omitted, nodemon will try to read \"main\" from\n",
        "date": "04.12.2017 15:54:36",
        "repo": "remy/nodemon",
        "type": "fix",
        "chatgpt_zeroshot": "Add support for specifying custom kill signal with --signal option"
    },
    {
        "msg": "fix: require node 6 or above in engines",
        "diff": "diff --git a/package.json b/package.json \"nodemon\": \"./bin/nodemon.js\"\n},\n\"engines\": {\n- \"node\": \">=0.8\"\n+ \"node\": \">=6\"\n},\n\"repository\": {\n\"type\": \"git\",\n\"ps-tree\": \"^1.1.0\",\n\"touch\": \"^3.1.0\",\n\"undefsafe\": \"0.0.3\",\n- \"update-notifier\": \"^2.2.0\"\n+ \"update-notifier\": \"^2.3.0\"\n},\n\"version\": \"0.0.0-development\"\n}\n",
        "date": "04.12.2017 22:15:21",
        "repo": "remy/nodemon",
        "type": "fix",
        "chatgpt_zeroshot": "Update Node version requirement and update update-notifier package version."
    },
    {
        "msg": "fix: reduce help output (a teeny bit)",
        "diff": "diff --git a/doc/cli/help.txt b/doc/cli/help.txt -I, --no-stdin ........... don't try to read from stdin.\n-C, --on-change-only ..... execute script on change only, not startup\n--no-colors .............. disable color output\n+ --signal <signal> ........ use specified kill signal instead of default (ex. SIGTERM)\n-d, --delay n ............ debounce restart for \"n\" seconds.\n--exitcrash .............. exit on crash, allows use of nodemon with daemon\ntools like forever.js.\n-v, --version ............ current nodemon version.\n-h, --help ............... you're looking at it.\n--help <topic> ........... help on a specific feature. Try \"--help topics\".\n- --signal <signal> ........ use specified kill signal instead of default (ex. SIGTERM)\n-- <your args> ........... to tell nodemon stop slurping arguments.\nNote: if the script is omitted, nodemon will try to read \"main\" from\nExamples:\n$ nodemon server.js\n- $ nodemon --config my/custom/nodemon.json server.js\n$ nodemon -w ../foo server.js apparg1 apparg2\n- $ PORT=8000 nodemon --debug-brk server.js\n$ nodemon --exec python app.py\n$ nodemon --exec \"make build\" -e \"styl hbs\"\n- $ nodemon app.js -- -v\n+ $ nodemon app.js -- --inspect\nFor more details see http://github.com/remy/nodemon/\n",
        "date": "04.12.2017 22:27:16",
        "repo": "remy/nodemon",
        "type": "fix",
        "chatgpt_zeroshot": "Add support for specifying kill signal in nodemon."
    },
    {
        "msg": "fix: travis CI build before-install",
        "diff": "diff --git a/.travis.yml b/.travis.yml @@ -9,7 +9,7 @@ node_js:\n- '8'\n- '6'\nbefore_install:\n- - if [ \"$TRAVIS_BRANCH\" == \"master\" ]; then echo \"//registry.npmjs.org/:_authToken=\\${NPM_TOKEN}\" > .npmrc; fi\n+ - if [ \"$TRAVIS_BRANCH\" == \"master\" ]; then export _authToken=$NPM_TOKEN; fi\nafter_success:\n- npm run semantic-release\nbranches:\n",
        "date": "06.12.2017 13:25:47",
        "repo": "remy/nodemon",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor authentication token handling in Travis CI configuration"
    },
    {
        "msg": "fix: only use fork if node>4",
        "diff": "diff --git a/lib/monitor/run.js b/lib/monitor/run.js @@ -83,7 +83,7 @@ function run(options) {\n});\n}\n- if (executable === 'node') {\n+ if (executable === 'node' && utils.version.major > 4) {\nvar forkArgs = cmd.args.slice(1);\nvar env = utils.merge(options.execOptions.env, process.env);\nstdio.push('ipc');\n",
        "date": "13.12.2017 13:08:05",
        "repo": "remy/nodemon",
        "type": "fix",
        "chatgpt_zeroshot": "Update run.js to only fork process if node version is greater than 4"
    },
    {
        "msg": "fix: support node arguments again\nIf node is being passed any arguments (before the script) then use\nspawn instead of fork.\nFixes",
        "diff": "diff --git a/lib/monitor/run.js b/lib/monitor/run.js @@ -83,7 +83,13 @@ function run(options) {\n});\n}\n- if (executable === 'node' && utils.version.major > 4) {\n+ if (\n+ // this is a hack to avoid forking if there's a node argument being passed\n+ // it's a short term fix, and I'm not 100% sure that `fork` is the right way\n+ cmd.args[0].indexOf('-') === -1 &&\n+ executable === 'node' &&\n+ utils.version.major > 4\n+ ) {\nvar forkArgs = cmd.args.slice(1);\nvar env = utils.merge(options.execOptions.env, process.env);\nstdio.push('ipc');\n",
        "date": "13.12.2017 21:08:33",
        "repo": "remy/nodemon",
        "type": "fix",
        "chatgpt_zeroshot": "Fix issue with forking in run.js"
    },
    {
        "msg": "fix: defensive check on accessing cmd.args",
        "diff": "diff --git a/lib/monitor/run.js b/lib/monitor/run.js @@ -86,7 +86,7 @@ function run(options) {\nif (\n// this is a hack to avoid forking if there's a node argument being passed\n// it's a short term fix, and I'm not 100% sure that `fork` is the right way\n- cmd.args[0].indexOf('-') === -1 &&\n+ (cmd.args[0] || '').indexOf('-') === -1 &&\nexecutable === 'node' &&\nutils.version.major > 4\n) {\n",
        "date": "13.12.2017 22:17:13",
        "repo": "remy/nodemon",
        "type": "fix",
        "chatgpt_zeroshot": "Fix issue with checking for node argument in run.js"
    },
    {
        "msg": "fix: fixed an issue where we tried to resolve null as path",
        "diff": "diff --git a/lib/monitor/watch.js b/lib/monitor/watch.js @@ -142,6 +142,7 @@ function filterAndRestart(files) {\n// if there's no matches, then test to see if the changed file is the\n// running script, if so, let's allow a restart\n+ if (config.options.execOptions.script) {\nconst script = path.resolve(config.options.execOptions.script);\nif (matched.result.length === 0 && script) {\nconst length = script.length;\n@@ -155,6 +156,7 @@ function filterAndRestart(files) {\n}\n})\n}\n+ }\nutils.log.detail('changes after filters (before/after): ' +\n[files.length, matched.result.length].join('/'));\n",
        "date": "15.12.2017 14:31:17",
        "repo": "remy/nodemon",
        "type": "fix",
        "chatgpt_zeroshot": "Add condition to check if the changed file is the running script before allowing a restart"
    },
    {
        "msg": "fix: defined diretory watching",
        "diff": "diff --git a/lib/monitor/match.js b/lib/monitor/match.js @@ -129,6 +129,7 @@ function match(files, monitor, ext) {\n// sort the rules by highest specificity (based on number of slashes)\n// ignore rules (!) get sorted highest as they take precedent\n// TODO actually check separator rules work on windows\n+ const cwd = process.cwd();\nvar rules = monitor.sort(function (a, b) {\nvar r = b.split(path.sep).length - a.split(path.sep).length;\nvar aIsIgnore = a.slice(0, 1) === '!';\n@@ -154,8 +155,13 @@ function match(files, monitor, ext) {\n}\nif (s.slice(0, 2) === '..') {\n- return path.resolve(process.cwd(), s);\n+ return path.resolve(cwd, s);\n}\n+\n+ if (s.indexOf(cwd) === 0) {\n+ return s;\n+ }\n+\nreturn '**' + (prefix !== path.sep ? path.sep : '') + s;\n});\n@@ -172,6 +178,8 @@ function match(files, monitor, ext) {\n}\nfiles.forEach(function (file) {\n+ file = path.resolve(cwd, file);\n+\nvar matched = false;\nfor (var i = 0; i < rules.length; i++) {\nif (rules[i].slice(0, 1) === '!') {\n@@ -205,6 +213,8 @@ function match(files, monitor, ext) {\n}\nmatched = true;\nbreak;\n+ } else {\n+ // utils.log.detail('no match: ' + rules[i], file);\n}\n}\n}\n",
        "date": "15.12.2017 16:53:49",
        "repo": "remy/nodemon",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor path resolution in match function"
    },
    {
        "msg": "fix: pass stdin to child process on -I\nFixes - the no-stdin wasn't passing the process.stdin to the\nchild.",
        "diff": "diff --git a/lib/monitor/run.js b/lib/monitor/run.js @@ -32,9 +32,11 @@ function run(options) {\nvar stdio = ['pipe', 'pipe', 'pipe'];\nif (config.options.stdout) {\n- stdio = ['pipe',\n- process.stdout,\n- process.stderr,];\n+ stdio = ['pipe', process.stdout, process.stderr];\n+ }\n+\n+ if (config.options.stdin === false) {\n+ stdio = [process.stdin, process.stdout, process.stderr];\n}\nvar sh = 'sh';\n",
        "date": "20.12.2017 19:51:32",
        "repo": "remy/nodemon",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor run.js to handle stdin option in monitor script"
    },
    {
        "msg": "fix: stop saying there's another update required!",
        "diff": "diff --git a/bin/nodemon.js b/bin/nodemon.js @@ -11,6 +11,6 @@ var fs = require('fs');\n// checks for available update and returns an instance\nvar pkg = JSON.parse(fs.readFileSync(__dirname + '/../package.json'));\n-require('update-notifier')({\n- pkg: Object.assign(pkg, { version: '0.0.0' }),\n-}).notify();\n+if (pkg.version.indexOf('0.0.0') !== 0) {\n+ require('update-notifier')({ pkg }).notify();\n+}\n",
        "date": "22.12.2017 15:36:36",
        "repo": "remy/nodemon",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor update notifier to only notify if version is not '0.0.0'"
    },
    {
        "msg": "fix: don't use fork with `node inspect`\nFixes:",
        "diff": "diff --git a/lib/monitor/run.js b/lib/monitor/run.js @@ -78,10 +78,13 @@ function run(options) {\n});\n}\n+ const firstArg = cmd.args[0] || '';\n+\nif (\n// this is a hack to avoid forking if there's a node argument being passed\n// it's a short term fix, and I'm not 100% sure that `fork` is the right way\n- (cmd.args[0] || '').indexOf('-') === -1 &&\n+ firstArg.indexOf('-') === -1 &&\n+ firstArg !== 'inspect' &&\nexecutable === 'node' &&\nutils.version.major > 4\n) {\n",
        "date": "28.12.2017 20:16:30",
        "repo": "remy/nodemon",
        "type": "fix",
        "chatgpt_zeroshot": "Avoid forking if node argument is being passed"
    },
    {
        "msg": "fix: swallow child.stdin err\nThis is a weird case where stdin isn't fully connected and throws in\nubuntu 16.04 (replicated in a Docker image).\nFixes",
        "diff": "diff --git a/lib/monitor/run.js b/lib/monitor/run.js @@ -67,7 +67,6 @@ function run(options) {\nvar args = runCmd ? utils.stringify(executable, cmd.args) : ':';\nvar spawnArgs = [sh, [shFlag, args]];\n- debug('spawning', args);\nif (utils.version.major === 0 && utils.version.minor < 8) {\n// use the old spawn args :-\\\n@@ -95,10 +94,15 @@ function run(options) {\nenv: env,\nstdio: stdio,\n});\n+ utils.log.detail('forking');\n+ debug(forkArgs);\n} else {\n+ utils.log.detail('spawning');\nchild = spawn.apply(null, spawnArgs);\n+ debug(spawnArgs);\n}\n+\nif (config.required) {\nvar emit = {\nstdout: function (data) {\n@@ -257,6 +261,10 @@ function run(options) {\nprocess.stdin.resume();\n// FIXME decide whether or not we need to decide the encoding\n// process.stdin.setEncoding('utf8');\n+\n+ // swallow the stdin error if it happens\n+ // ref: https://github.com/remy/nodemon/issues/1195\n+ child.stdin.on('error', () => {});\nprocess.stdin.pipe(child.stdin);\nbus.once('exit', function () {\n",
        "date": "31.12.2017 16:23:07",
        "repo": "remy/nodemon",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor spawning logic and handle stdin error in child process"
    },
    {
        "msg": "fix: clarify which config files are actually used\nFixes",
        "diff": "diff --git a/lib/config/load.js b/lib/config/load.js @@ -93,8 +93,7 @@ function load(settings, options, config, callback) {\n// if we didn't pick up a nodemon.json file & there's no cli ignores\n// then try loading an old style .nodemonignore file\nif (config.loaded.length === 0) {\n- // TODO decide whether this is just confusing...\n- var legacy = loadLegacyIgnore.bind(null, options, ready);\n+ var legacy = loadLegacyIgnore.bind(null, options, config, ready);\n// first try .nodemonignore, if that doesn't exist, try nodemon-ignore\nreturn legacy('.nodemonignore', function () {\n@@ -118,11 +117,12 @@ function load(settings, options, config, callback) {\n* @param {String} filename ignore file (.nodemonignore or nodemon-ignore)\n* @param {Function} fail (optional) failure callback\n*/\n-function loadLegacyIgnore(options, success, filename, fail) {\n+function loadLegacyIgnore(options, config, success, filename, fail) {\nvar ignoreFile = path.join(process.cwd(), filename);\nexists(ignoreFile, function (exists) {\nif (exists) {\n+ config.loaded.push(ignoreFile);\nreturn parse(ignoreFile, function (error, rules) {\noptions.ignore = rules.raw;\nsuccess(options);\n@@ -172,6 +172,12 @@ function loadFile(options, config, dir, ready) {\n}\nvar filename = options.configFile || path.join(dir, 'nodemon.json');\n+\n+ if (config.loaded.indexOf(filename) !== -1) {\n+ // don't bother re-parsing the same config file\n+ return callback({});\n+ }\n+\nfs.readFile(filename, 'utf8', function (err, data) {\nif (err) {\nif (err.code === 'ENOENT') {\n@@ -188,7 +194,9 @@ function loadFile(options, config, dir, ready) {\ntry {\nsettings = JSON.parse(data.toString('utf8').replace(/^\\uFEFF/, ''));\n+ if (!filename.endsWith('package.json') || settings.nodemonConfig) {\nconfig.loaded.push(filename);\n+ }\n} catch (e) {\nconsole.error(e);\nutils.log.fail('Failed to parse config ' + filename);\n",
        "date": "03.01.2018 17:09:57",
        "repo": "remy/nodemon",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor loadLegacyIgnore function and prevent re-parsing of the same config file"
    },
    {
        "msg": "fix: fail gracefully if postinstall fails",
        "diff": "diff --git a/package.json b/package.json \"web\": \"node web\",\n\"semantic-release\": \"semantic-release pre && npm publish && semantic-release post\",\n\"prepush\": \"npm run lint\",\n- \"postinstall\": \"node -e \\\"console.log('\\\\u001b[32mLove nodemon? You can now support the project via the open collective:\\\\u001b[22m\\\\u001b[39m\\\\n > \\\\u001b[96m\\\\u001b[1mhttps://opencollective.com/nodemon/donate\\\\u001b[0m\\\\n')\\\"\"\n+ \"postinstall\": \"node -e \\\"console.log('\\\\u001b[32mLove nodemon? You can now support the project via the open collective:\\\\u001b[22m\\\\u001b[39m\\\\n > \\\\u001b[96m\\\\u001b[1mhttps://opencollective.com/nodemon/donate\\\\u001b[0m\\\\n')\\\" || exit 0\"\n},\n\"devDependencies\": {\n\"@commitlint/cli\": \"^3.1.3\",\n",
        "date": "05.01.2018 12:44:01",
        "repo": "remy/nodemon",
        "type": "fix",
        "chatgpt_zeroshot": "Fix postinstall script to exit with code 0 if successful"
    },
    {
        "msg": "fix: ignorePermissionErrors in chokidar\nMake any permission errors silent, since it the most likely case we don't need them at all.\nFixes:",
        "diff": "diff --git a/lib/monitor/watch.js b/lib/monitor/watch.js @@ -49,6 +49,7 @@ function watch() {\n}\nvar watchOptions = {\n+ ignorePermissionErrors: true,\ncwd: process.cwd(), // use cwd for relative path ignore\nignored: ignored,\npersistent: true,\n",
        "date": "08.01.2018 12:35:06",
        "repo": "remy/nodemon",
        "type": "fix",
        "chatgpt_zeroshot": "Add option to ignore permission errors in watch function"
    },
    {
        "msg": "fix: sniff for child.stdout before using it\nThis fixes but it's a hack, so I'm going to emit a message\nsaying that non-LTS is not supported.",
        "diff": "diff --git a/lib/monitor/run.js b/lib/monitor/run.js @@ -260,7 +260,12 @@ function run(options) {\nchild.stdin.on('error', () => { });\nprocess.stdin.pipe(child.stdin);\n} else {\n+ if (child.stdout) {\nchild.stdout.pipe(process.stdout);\n+ } else {\n+ utils.log.error(`running an unsupported version of node ${process.version}`);\n+ utils.log.error('nodemon may not work as expected - please consider upgrading to LTS');\n+ }\n}\nbus.once('exit', function () {\n",
        "date": "01.02.2018 18:19:56",
        "repo": "remy/nodemon",
        "type": "fix",
        "chatgpt_zeroshot": "Handle unsupported node version in monitor run script"
    },
    {
        "msg": "fix: windows exec resolution\nFixes",
        "diff": "diff --git a/lib/monitor/run.js b/lib/monitor/run.js @@ -48,14 +48,26 @@ function run(options) {\nstdio: stdio,\n}\n+ var executable = cmd.executable;\n+\nif (utils.isWindows) {\n+ // if the exec includes a forward slash, reverse it for windows compat\n+ // but *only* apply to the first command, and none of the arguments.\n+ // ref #1251 and #1236\n+ if (executable.indexOf('/') !== -1) {\n+ executable = executable.split(' ').map((e, i) => {\n+ if (i === 0) {\n+ return path.normalize(e);\n+ }\n+ return e;\n+ }).join(' ');\n+ }\n// taken from npm's cli: https://git.io/vNFD4\nsh = process.env.comspec || 'cmd';\nshFlag = '/d /s /c';\nspawnOptions.windowsVerbatimArguments = true;\n}\n- var executable = cmd.executable;\nvar args = runCmd ? utils.stringify(executable, cmd.args) : ':';\nvar spawnArgs = [sh, [shFlag, args], spawnOptions];\n",
        "date": "27.02.2018 16:43:20",
        "repo": "remy/nodemon",
        "type": "fix",
        "chatgpt_zeroshot": "Normalize executable path for Windows compatibility"
    },
    {
        "msg": "fix: throwing exeception on run\nFixes\nDue to const being used.",
        "diff": "diff --git a/lib/monitor/run.js b/lib/monitor/run.js @@ -40,8 +40,8 @@ function run(options) {\nstdio = [process.stdin, process.stdout, process.stderr];\n}\n- const sh = 'sh';\n- const shFlag = '-c';\n+ var sh = 'sh';\n+ var shFlag = '-c';\nconst binPath = process.cwd() + '/node_modules/.bin';\n",
        "date": "27.02.2018 17:34:28",
        "repo": "remy/nodemon",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor variable declarations in run.js"
    },
    {
        "msg": "fix: watch count regression\n* chore: revert package\n* fix: move to array of watched dirs\nInstead of individually listing them.\nFixes",
        "diff": "diff --git a/lib/monitor/watch.js b/lib/monitor/watch.js @@ -39,25 +39,29 @@ function watch() {\nvar promises = [];\nvar watchedFiles = [];\n- dirs.forEach(function (dir) {\n- var promise = new Promise(function (resolve) {\n- var dotFilePattern = /[/\\\\]\\./;\n+ const promise = new Promise(function (resolve) {\n+ const dotFilePattern = /[/\\\\]\\./;\nvar ignored = Array.from(rootIgnored);\n+ const addDotFile = dirs.filter(dir => dir.match(dotFilePattern));\n// don't ignore dotfiles if explicitly watched.\n- if (!dir.match(dotFilePattern)) {\n+ if (addDotFile.length === 0) {\nignored.push(dotFilePattern);\n}\n+ dirs = dirs.map(dir => {\n// if the directory is a file, it somehow causes\n// windows to lose the filename upon change\nif (fs.statSync(dir).isFile()) {\ndir = path.dirname(dir);\n}\n+ return dir;\n+ });\n+\nvar watchOptions = {\nignorePermissionErrors: true,\n- cwd: dir,\n+ cwd: process.cwd(), // dir,\nignored: ignored,\npersistent: true,\nusePolling: config.options.legacyWatch || false,\n@@ -73,7 +77,7 @@ function watch() {\n}\nvar watcher = chokidar.watch(\n- dir,\n+ dirs,\nObject.assign({}, watchOptions, config.watchOptions || {})\n);\n@@ -114,10 +118,12 @@ function watch() {\nwatchers.push(watcher);\n});\n- promises.push(promise);\n- });\n- return Promise.all(promises).then(function (res) {\n+ return promise.catch(e => {\n+ setTimeout(() => {\n+ throw e;\n+ });\n+ }).then(function (res) {\nutils.log.detail(`watching ${watchedFiles.length} file${\nwatchedFiles.length === 1 ? '' : 's'}`);\nreturn watchedFiles;\n",
        "date": "13.03.2018 21:45:50",
        "repo": "remy/nodemon",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor watch function to handle dotfiles and file directories properly"
    },
    {
        "msg": "fix: prevent throw when args missing\nFixes",
        "diff": "diff --git a/lib/config/load.js b/lib/config/load.js @@ -69,6 +69,9 @@ function load(settings, options, config, callback) {\nif (!options.script && !options.exec) {\nvar found = findAppScript();\nif (found) {\n+ if (!options.args) {\n+ options.args = [];\n+ }\n// if the script is found as a result of not being on the command\n// line, then we move any of the pre double-dash args in execArgs\nconst n = options.scriptPosition || options.args.length;\n",
        "date": "13.03.2018 21:46:20",
        "repo": "remy/nodemon",
        "type": "fix",
        "chatgpt_zeroshot": "Add default empty array for options.args if not provided"
    },
    {
        "msg": "fix: don't throw when required in the repl\nFixes",
        "diff": "diff --git a/lib/utils/index.js b/lib/utils/index.js @@ -21,7 +21,7 @@ var utils = (module.exports = {\nvar p = module.parent;\nwhile (p) {\n// in electron.js engine it happens\n- if (p.filename === undefined) {\n+ if (!p.filename) {\nreturn true;\n}\nif (p.filename.indexOf('bin' + path.sep + 'nodemon.js') !== -1) {\n",
        "date": "31.03.2018 08:40:08",
        "repo": "remy/nodemon",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor conditional statement in index.js for better readability"
    },
    {
        "msg": "fix: revert stdin handling\nFixes\nFixes\nRef\nMeans that ctrl^l does not instantly clear the terminal. It requires a\nnew line directly after.",
        "diff": "diff --git a/lib/nodemon.js b/lib/nodemon.js @@ -95,48 +95,43 @@ function nodemon(settings) {\nutils.log.detail('reading config ' + file);\n});\n- // echo out notices about running state\n- if (config.options.stdin) {\n+ if (config.options.stdin && config.options.restartable) {\n+ // allow nodemon to restart when the use types 'rs\\n'\n+ process.stdin.resume();\n+ process.stdin.setEncoding('utf8');\n+ process.stdin.on('data', data => {\n+ const str = data.toString().trim().toLowerCase();\n+\n+ // if the keys entered match the restartable value, then restart!\n+ if (str === config.options.restartable) {\n+ bus.emit('restart');\n+ } else if (data.charCodeAt(0) === 12) { // ctrl+l\n+ console.clear();\n+ }\n+ });\n+ } else if (config.options.stdin) {\n// so let's make sure we don't eat the key presses\n// but also, since we're wrapping, watch out for\n// special keys, like ctrl+c x 2 or '.exit' or ctrl+d or ctrl+l\nvar ctrlC = false;\nvar buffer = '';\n- const rs = config.options.restartable;\n- process.stdin.setEncoding('utf8');\nprocess.stdin.on('data', function (data) {\ndata = data.toString();\nbuffer += data;\nconst chr = data.charCodeAt(0);\n// if restartable, echo back\n- if (rs) {\n- if (chr === 13) {\n- process.stdout.write('\\n');\n- }\n- // this intentionally prevents cursor keys from working.\n- process.stdout.write(String.fromCharCode(chr));\n- }\n-\nif (chr === 3) {\nif (ctrlC) {\nprocess.exit(0);\n}\n- // if restartable, assume ctrl+c will break immediately\n- if (rs) {\n- bus.emit('quit', 130);\n- }\nctrlC = true;\nreturn;\n- } else if (!rs && (buffer === '.exit' || chr === 4)) { // ctrl+d\n+ } else if (buffer === '.exit' || chr === 4) { // ctrl+d\nprocess.exit();\n} else if (chr === 13 || chr === 10) { // enter / carriage return\n- const input = buffer.toString().trim().toLowerCase();\n- if (input === rs) {\n- bus.emit('restart');\n- }\nbuffer = '';\n} else if (chr === 12) { // ctrl+l\nconsole.clear();\n@@ -144,7 +139,6 @@ function nodemon(settings) {\n}\nctrlC = false;\n});\n- process.stdin.resume();\nif (process.stdin.setRawMode) {\nprocess.stdin.setRawMode(true);\n}\n",
        "date": "13.07.2018 12:36:29",
        "repo": "remy/nodemon",
        "type": "fix",
        "chatgpt_zeroshot": "Add support for restarting nodemon using 'rs' command via stdin"
    },
    {
        "msg": "fix: Quote zero-length strings in arguments\nIf a zero-length string is passed, it does not get properly quoted, and then it is not properly passed to the child process",
        "diff": "diff --git a/lib/utils/index.js b/lib/utils/index.js @@ -69,7 +69,7 @@ var utils = (module.exports = {\nargs.map(function (arg) {\n// if an argument contains a space, we want to show it with quotes\n// around it to indicate that it is a single argument\n- if (arg.indexOf(' ') === -1) {\n+ if (arg.length > 0 && arg.indexOf(' ') === -1) {\nreturn arg;\n}\n// this should correctly escape nested quotes\n",
        "date": "01.05.2019 00:04:25",
        "repo": "remy/nodemon",
        "type": "fix",
        "chatgpt_zeroshot": "Add condition to check if argument length is greater than 0 before checking for space in index."
    },
    {
        "msg": "fix: disable fork only if string starts with dash\nfixes",
        "diff": "diff --git a/lib/monitor/run.js b/lib/monitor/run.js @@ -91,7 +91,7 @@ function run(options) {\nconst shouldFork =\n!config.options.spawn &&\n!inBinPath &&\n- firstArg.indexOf('-') === -1 && // don't fork if there's a node exec arg\n+ !(firstArg.indexOf('-') === 0) && // don't fork if there's a node exec arg\nfirstArg !== 'inspect' && // don't fork it's `inspect` debugger\nexecutable === 'node' && // only fork if node\nutils.version.major > 4 // only fork if node version > 4\n",
        "date": "23.04.2019 12:38:28",
        "repo": "remy/nodemon",
        "type": "fix",
        "chatgpt_zeroshot": "Fix condition for forking process based on node exec arg"
    },
    {
        "msg": "fix: ensure signal is sent to exit event",
        "diff": "diff --git a/lib/monitor/run.js b/lib/monitor/run.js @@ -195,7 +195,7 @@ function run(options) {\nif (signal === config.signal || code === 0) {\n// this was a clean exit, so emit exit, rather than crash\ndebug('bus.emit(exit) via ' + config.signal);\n- bus.emit('exit');\n+ bus.emit('exit', signal);\n// exit the monitor, but do it gracefully\nif (signal === config.signal) {\n",
        "date": "08.05.2019 15:01:50",
        "repo": "remy/nodemon",
        "type": "fix",
        "chatgpt_zeroshot": "Update bus.emit('exit') to include signal parameter"
    },
    {
        "msg": "fix: langauge around \"watching\"\nref:\nIt was unclear whether it was listing files being watched when in fact\nit was the list of directories (plus, make it cleaner)",
        "diff": "diff --git a/lib/nodemon.js b/lib/nodemon.js @@ -180,8 +180,16 @@ function nodemon(settings) {\n}).filter(Boolean).join(' ');\nif (ignoring) utils.log.detail('ignoring: ' + ignoring);\n- utils.log.info('watching: ' + config.options.monitor.map(function (rule) {\n- return rule.slice(0, 1) !== '!' ? rule : false;\n+ utils.log.info('watching dir(s): ' + config.options.monitor.map(function (rule) {\n+ if (rule.slice(0, 1) !== '!') {\n+ try {\n+ rule = path.relative(process.cwd(), rule);\n+ } catch (e) {}\n+\n+ return rule;\n+ }\n+\n+ return false;\n}).filter(Boolean).join(' '));\nutils.log.detail('watching extensions: ' + (config.options.execOptions.ext || '(all)'));\n",
        "date": "03.09.2019 11:54:44",
        "repo": "remy/nodemon",
        "type": "fix",
        "chatgpt_zeroshot": "Update log message to display watched directories with relative paths"
    },
    {
        "msg": "fix: to avoid confusion like in always report used extension",
        "diff": "diff --git a/lib/nodemon.js b/lib/nodemon.js @@ -192,7 +192,7 @@ function nodemon(settings) {\nreturn false;\n}).filter(Boolean).join(' '));\n- utils.log.detail('watching extensions: ' + (config.options.execOptions.ext || '(all)'));\n+ utils.log.info('watching extensions: ' + (config.options.execOptions.ext || '(all)'));\nif (config.options.dump) {\nutils.log._log('log', '--------------');\n",
        "date": "06.03.2019 17:24:41",
        "repo": "remy/nodemon",
        "type": "fix",
        "chatgpt_zeroshot": "Update log level for watching extensions in nodemon.js"
    },
    {
        "msg": "fix: wait for all subprocesses to terminate (fixes issue",
        "diff": "diff --git a/lib/monitor/run.js b/lib/monitor/run.js @@ -16,6 +16,28 @@ var psTree = require('pstree.remy');\nvar path = require('path');\nvar signals = require('./signals');\n+function waitForSubprocesses(subprocesses, callback) {\n+ if (Array.isArray(subprocesses) && subprocesses.length > 0) {\n+ // check if all old subprocesses have been terminated\n+ exec('kill -0 ' + subprocesses.join(' '), (error) => {\n+ const returnCode = error ? error.code : 0;\n+ if (returnCode < 126) { // ignore command not found error\n+ const stillRunning = subprocesses.length - returnCode;\n+ if (stillRunning > 0) {\n+ utils.log.status('still waiting for ' + stillRunning +\n+ ' subprocess(es) to finish...');\n+ setTimeout(waitForSubprocesses.bind(this, subprocesses, callback),\n+ 100);\n+ return;\n+ }\n+ }\n+ callback();\n+ });\n+ } else {\n+ callback();\n+ }\n+}\n+\nfunction run(options) {\nvar cmd = config.command.raw;\n@@ -341,17 +363,24 @@ function kill(child, signal, callback) {\n// configured signal (default: SIGUSR2) signal, which fixes #335\n// note that psTree also works if `ps` is missing by looking in /proc\nconst sig = signal.replace('SIG', '');\n- psTree(child.pid, function (err, kids) {\n+ psTree(child.pid, function (err, subprocesses) {\nif (psTree.hasPS) {\n- spawn('kill', ['-s', sig, child.pid].concat(kids))\n+ spawn('kill', ['-s', sig].concat(subprocesses))\n+ .on('close', waitForSubprocesses.bind(this, subprocesses,\n+ function () {\n+ spawn('kill', ['-s', sig, child.pid])\n.on('close', callback);\n+ }));\n} else {\n// make sure we kill from smallest to largest\n- const pids = kids.concat(child.pid).sort();\n+ const pids = subprocesses.slice().sort();\npids.forEach(pid => {\nexec('kill -' + signals[signal] + ' ' + pid, () => { });\n});\n+ waitForSubprocesses(subprocesses, function () {\n+ exec('kill -' + signals[signal] + ' ' + child.pid, () => { });\ncallback();\n+ })\n}\n});\n",
        "date": "07.06.2019 16:40:32",
        "repo": "remy/nodemon",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor subprocess handling in monitor run script"
    },
    {
        "msg": "fix: add funding in package\nI'd be prepared to bet the house that npm 7's postinstall block and funding support pretty much kills support. Ah well.",
        "diff": "diff --git a/package.json b/package.json \"undefsafe\": \"^2.0.2\",\n\"update-notifier\": \"^4.0.0\"\n},\n- \"version\": \"0.0.0-development\"\n+ \"version\": \"0.0.0-development\",\n+ \"funding\": {\n+ \"type\": \"opencollective\",\n+ \"url\": \"https://opencollective.com/nodemon\"\n+ }\n}\n",
        "date": "14.05.2020 12:23:08",
        "repo": "remy/nodemon",
        "type": "fix",
        "chatgpt_zeroshot": "Add funding information to package.json"
    },
    {
        "msg": "fix: postinstall hide message in CI",
        "diff": "diff --git a/bin/postinstall.js b/bin/postinstall.js #!/usr/bin/env node\nfunction main() {\n- if (process.env.SUPPRESS_SUPPORT || process.env.OPENCOLLECTIVE_HIDE) {\n+ if (process.env.SUPPRESS_SUPPORT || process.env.OPENCOLLECTIVE_HIDE || process.env.CI) {\nreturn;\n}\n",
        "date": "24.11.2020 21:27:23",
        "repo": "remy/nodemon",
        "type": "fix",
        "chatgpt_zeroshot": "Add CI environment variable check in postinstall script"
    },
    {
        "msg": "fix: redirect help\nFixes:\nAllows for nodemon --help > help.txt",
        "diff": "diff --git a/lib/nodemon.js b/lib/nodemon.js @@ -39,7 +39,9 @@ function nodemon(settings) {\n}\nif (settings.help) {\n+ if (process.stdout.isTTY) {\nprocess.stdout._handle.setBlocking(true); // nodejs/node#6456\n+ }\nconsole.log(help(settings.help));\nif (!config.required) {\nprocess.exit(0);\n",
        "date": "06.01.2021 14:59:30",
        "repo": "remy/nodemon",
        "type": "fix",
        "chatgpt_zeroshot": "Fix help message output for TTY terminals"
    },
    {
        "msg": "fix: allow windows users to install globally again\nFixes:",
        "diff": "diff --git a/lib/monitor/run.js b/lib/monitor/run.js @@ -347,7 +347,7 @@ function kill(child, signal, callback) {\n// We are using the standalone 'windows-kill' executable to send the\n// standard POSIX signal 'SIGINT' to the node process. This fixes #1720.\nconst windowsKill = path.normalize(\n- `${process.cwd()}/node_modules/nodemon/bin/windows-kill.exe`\n+ `${__dirname}/../../bin/windows-kill.exe`\n);\n// We have to detach the 'windows-kill' execution completely from this\n",
        "date": "30.06.2021 13:57:24",
        "repo": "remy/nodemon",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor path for windows-kill executable in monitor run script"
    },
    {
        "msg": "fix: windows 8 doesn't support windows-kill\nFixes",
        "diff": "diff --git a/lib/monitor/run.js b/lib/monitor/run.js @@ -16,6 +16,7 @@ var restart = null;\nvar psTree = require('pstree.remy');\nvar path = require('path');\nvar signals = require('./signals');\n+const osRelease = require('os').release();\nfunction run(options) {\nvar cmd = config.command.raw;\n@@ -312,11 +313,18 @@ function kill(child, signal, callback) {\n}\nif (utils.isWindows) {\n+ const taskKill = () => {\n+ try {\n+ exec('taskkill /pid ' + child.pid + ' /T /F');\n+ } catch (e) {\n+ utils.log.error(\"Could not shutdown sub process cleanly\");\n+ }\n+ }\n// We are handling a 'SIGKILL' POSIX signal under Windows the\n// same way it is handled on a UNIX system: We are performing\n// a hard shutdown without waiting for the process to clean-up.\n- if (signal === 'SIGKILL') {\n+ if (signal === 'SIGKILL' || osRelease < 10) {\ndebug('terminating process group by force: %s', child.pid);\n@@ -324,7 +332,7 @@ function kill(child, signal, callback) {\n// process group ('/t') of the child ('/pid') by force ('/f').\n// We need to end all sub processes, because the 'child'\n// process in this context is actually a cmd.exe wrapper.\n- exec(`taskkill /f /t /pid ${child.pid}`);\n+ taskKill();\ncallback();\nreturn;\n}\n@@ -357,9 +365,13 @@ function kill(child, signal, callback) {\n// Therefore we are using 'start' to create a new cmd.exe context.\n// The '/min' option hides the new terminal window and the '/wait'\n// option lets the process wait for the command to finish.\n+ try {\nexecSync(\n`start \"windows-kill\" /min /wait \"${windowsKill}\" -SIGINT ${processId}`\n);\n+ } catch (e) {\n+ taskKill();\n+ }\ncallback();\n} else {\n",
        "date": "08.07.2021 08:42:39",
        "repo": "remy/nodemon",
        "type": "fix",
        "chatgpt_zeroshot": "Add osRelease check for taskKill in kill function"
    },
    {
        "msg": "fix: ensure numerical OS version check",
        "diff": "diff --git a/lib/monitor/run.js b/lib/monitor/run.js @@ -16,7 +16,7 @@ var restart = null;\nvar psTree = require('pstree.remy');\nvar path = require('path');\nvar signals = require('./signals');\n-const osRelease = require('os').release();\n+const osRelease = parseInt(require('os').release().split(\".\")[0], 10);\nfunction run(options) {\nvar cmd = config.command.raw;\n",
        "date": "09.07.2021 17:19:02",
        "repo": "remy/nodemon",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor osRelease to parse major version from os.release()"
    },
    {
        "msg": "fix(windows): properly handle quoted args in event\nFixes:\nThis mirrors the command parsing from run.js into the separate parser\nfor launching event driven shells.",
        "diff": "diff --git a/lib/spawn.js b/lib/spawn.js +const path = require('path');\nconst utils = require('./utils');\nconst merge = utils.merge;\nconst bus = utils.bus;\n@@ -10,26 +11,43 @@ module.exports = function spawnCommand(command, config, eventArgs) {\nstdio = ['pipe', process.stdout, process.stderr];\n}\n+ const env = merge(process.env, { FILENAME: eventArgs[0] });\n+\nvar sh = 'sh';\nvar shFlag = '-c';\n-\n- if (utils.isWindows) {\n- sh = 'cmd';\n- shFlag = '/c';\n- }\n-\n+ var spawnOptions = {\n+ env: merge(config.options.execOptions.env, env),\n+ stdio: stdio,\n+ };\nif (!Array.isArray(command)) {\ncommand = [command];\n}\n- const args = command.join(' ');\n+ if (utils.isWindows) {\n+ // if the exec includes a forward slash, reverse it for windows compat\n+ // but *only* apply to the first command, and none of the arguments.\n+ // ref #1251 and #1236\n+ command = command.map(executable => {\n+ if (executable.indexOf('/') === -1) {\n+ return executable;\n+ }\n- const env = merge(process.env, { FILENAME: eventArgs[0] });\n- const child = spawn(sh, [shFlag, args], {\n- env: merge(config.options.execOptions.env, env),\n- stdio: stdio,\n+ return executable.split(' ').map((e, i) => {\n+ if (i === 0) {\n+ return path.normalize(e);\n+ }\n+ return e;\n+ }).join(' ');\n});\n+ // taken from npm's cli: https://git.io/vNFD4\n+ sh = process.env.comspec || 'cmd';\n+ shFlag = '/d /s /c';\n+ spawnOptions.windowsVerbatimArguments = true;\n+ }\n+\n+ const args = command.join(' ');\n+ const child = spawn(sh, [shFlag, args], spawnOptions);\nif (config.required) {\nvar emit = {\n",
        "date": "10.07.2021 16:02:51",
        "repo": "remy/nodemon",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor spawnCommand function to handle Windows compatibility and improve argument handling"
    },
    {
        "msg": "fix: add windows signals SIGUSR2 & SIGUSR1 to terminate the process\nAuthored-by: mohamed\nFixes:",
        "diff": "diff --git a/lib/monitor/run.js b/lib/monitor/run.js @@ -333,10 +333,10 @@ function kill(child, signal, callback) {\n}\n};\n- // We are handling a 'SIGKILL' POSIX signal under Windows the\n+ // We are handling a 'SIGKILL' , 'SIGUSR2' and 'SIGUSR1' POSIX signal under Windows the\n// same way it is handled on a UNIX system: We are performing\n// a hard shutdown without waiting for the process to clean-up.\n- if (signal === 'SIGKILL' || osRelease < 10) {\n+ if (signal === 'SIGKILL' || osRelease < 10 || signal === 'SIGUSR2' || signal===\"SIGUSR1\" ) {\ndebug('terminating process group by force: %s', child.pid);\n// We are using the taskkill utility to terminate the whole\n",
        "date": "19.10.2021 16:29:36",
        "repo": "remy/nodemon",
        "type": "fix",
        "chatgpt_zeroshot": "Handle 'SIGUSR2' and 'SIGUSR1' signals in Windows shutdown process"
    },
    {
        "msg": "fix: support windows by using path.delimiter",
        "diff": "diff --git a/lib/monitor/run.js b/lib/monitor/run.js @@ -64,7 +64,7 @@ function run(options) {\nconst spawnOptions = {\nenv: Object.assign({}, process.env, options.execOptions.env, {\n- PATH: binPath + ':' + process.env.PATH,\n+ PATH: binPath + path.delimiter + process.env.PATH,\n}),\nstdio: stdio,\n};\n",
        "date": "23.02.2022 17:36:11",
        "repo": "remy/nodemon",
        "type": "fix",
        "chatgpt_zeroshot": "Update PATH environment variable to use path.delimiter instead of ':' in monitor run script"
    },
    {
        "msg": "fix: reuse `polka/url` dep",
        "diff": "diff --git a/src/server.js b/src/server.js import { createServer } from 'http';\n-import { parse as parseUrl } from 'url';\nimport ws from 'ws';\n-import polka from 'polka';\nimport sirv from 'sirv';\n+import polka from 'polka';\n+import parse from '@polka/url';\nimport compression from './lib/polkompress.js';\n/**\n@@ -32,7 +32,7 @@ export default function server({ cwd, out, compress = true } = {}) {\n};\napp.server.on('upgrade', (req, socket, head) => {\n- const pathname = parseUrl(req.url).pathname;\n+ const pathname = parse(req).pathname;\nif (pathname == '/_hmr') {\napp.ws.handleUpgrade(req, socket, head, ws => {\nws.emit('connection', ws, req);\n",
        "date": "03.06.2020 12:21:45",
        "repo": "preactjs/wmr",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor server.js to use @polka/url for URL parsing and remove unnecessary imports."
    },
    {
        "msg": "fix(server): use `single` & `ignores` options",
        "diff": "diff --git a/src/server.js b/src/server.js @@ -51,15 +51,14 @@ export default function server({ cwd, overlayDir, middleware, compress = true }\napp.use(sirv(overlayDir, { dev: true }));\n}\n- const servePublic = sirv(cwd || '', { dev: true });\n- app.use(servePublic);\n// SPA nav fallback\n- app.use((req, res, next) => {\n- if (!/text\\/html/.test(req.headers.accept)) return next();\n- // @ts-ignore\n- req.path = '/';\n- servePublic(req, res, next);\n- });\n+ app.use(\n+ sirv(cwd || '', {\n+ ignores: ['@npm'],\n+ single: true,\n+ dev: true\n+ })\n+ );\nreturn app;\n}\n",
        "date": "10.06.2020 16:55:06",
        "repo": "preactjs/wmr",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor server.js to improve SPA navigation fallback and add ignores option to sirv."
    },
    {
        "msg": "fix(types): swap `declare` order for `*.module.css` files",
        "diff": "diff --git a/types.d.ts b/types.d.ts @@ -41,18 +41,18 @@ declare interface NodeModule {\n}\ndeclare var module: NodeModule;\n-declare module '*.css' { const url: string; export default url; }\n-declare module '*.scss' { const url: string; export default url; }\n-declare module '*.sass' { const url: string; export default url; }\n-declare module '*.styl' { const url: string; export default url; }\n-\n/** Maps authored classNames to their CSS Modules -suffixed generated classNames. */\n-interface Mapping { [key: string]: string; }\n+type Mapping = Record<string, string>;\ndeclare module '*.module.css' { const mapping: Mapping; export default mapping; }\ndeclare module '*.module.scss' { const mapping: Mapping; export default mapping; }\ndeclare module '*.module.sass' { const mapping: Mapping; export default mapping; }\ndeclare module '*.module.styl' { const mapping: Mapping; export default mapping; }\n+declare module '*.css' { const url: string; export default url; }\n+declare module '*.scss' { const url: string; export default url; }\n+declare module '*.sass' { const url: string; export default url; }\n+declare module '*.styl' { const url: string; export default url; }\n+\n// Import Prefixes\ndeclare module 'json:';\ndeclare module 'css:';\n",
        "date": "02.12.2020 14:18:39",
        "repo": "preactjs/wmr",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor CSS module mappings and add support for regular CSS, SCSS, SASS, and Stylus files."
    },
    {
        "msg": "fix(prerender): force `file:///` protocol + resolve",
        "diff": "diff --git a/src/lib/prerender.js b/src/lib/prerender.js @@ -71,7 +71,7 @@ async function workerCode({ cwd, out }) {\n// Prevent Rollup from transforming `import()` here.\nconst $import = new Function('s', 'return import(s)');\n- const m = await $import(script);\n+ const m = await $import('file:///' + script);\nconst doPrerender = m.prerender;\n// const App = m.default || m[Object.keys(m)[0]];\n",
        "date": "03.12.2020 05:13:30",
        "repo": "preactjs/wmr",
        "type": "fix",
        "chatgpt_zeroshot": "Fix import path in prerender.js file"
    },
    {
        "msg": "fix(plugin): do not posixify external `publicPath`s",
        "diff": "diff --git a/src/plugins/public-path-plugin.js b/src/plugins/public-path-plugin.js @@ -11,8 +11,13 @@ export default function publicPathPlugin({ publicPath, filter } = {}) {\nname: 'public-path',\nresolveFileUrl(assetInfo) {\nif (!publicPath || (filter && !filter(assetInfo))) return null;\n- const { fileName } = assetInfo;\n- return JSON.stringify(posix.join(publicPath, fileName));\n+\n+ let output = posix.join(publicPath, assetInfo.fileName);\n+ if (/^(https?:)?\\/\\//.test(publicPath)) {\n+ output = new URL(assetInfo.fileName, publicPath).href;\n+ }\n+\n+ return JSON.stringify(output);\n}\n};\n}\n",
        "date": "03.12.2020 07:28:05",
        "repo": "preactjs/wmr",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor resolveFileUrl in public-path-plugin to handle absolute public paths"
    },
    {
        "msg": "fix(prerender): drop `publicPath` prefix during prerender",
        "diff": "diff --git a/src/lib/prerender.js b/src/lib/prerender.js @@ -4,15 +4,16 @@ import { Worker } from 'worker_threads';\n* @param {object} options\n* @property {string} [cwd = '.']\n* @property {string} [out = '.cache']\n+ * @property {string} publicPath\n*/\n-export function prerender({ cwd = '.', out = '.cache' }) {\n+export function prerender({ cwd = '.', out = '.cache', publicPath }) {\nconst w = new Worker(\n`(${workerCode})(require('worker_threads').workerData)\n.then(r => require('worker_threads').parentPort.postMessage([1,r]))\n.catch(err => require('worker_threads').parentPort.postMessage([0,err && err.stack || err+'']))`,\n{\neval: true,\n- workerData: { cwd, out },\n+ workerData: { cwd, out, publicPath },\n// execArgv: ['--experimental-modules'],\nstderr: true\n}\n@@ -28,7 +29,7 @@ export function prerender({ cwd = '.', out = '.cache' }) {\n});\n}\n-async function workerCode({ cwd, out }) {\n+async function workerCode({ cwd, out, publicPath }) {\n/*global globalThis*/\nconst path = require('path');\n@@ -67,6 +68,7 @@ async function workerCode({ cwd, out }) {\nthrow Error(`Unable to detect <script src=\"entry.js\"> in your index.html.`);\n}\n// script = new URL(`../dist/${script.replace(/^(\\.?\\/)?/g, '')}`, selfUrl).href;\n+ script = script.replace(publicPath, '');\nscript = path.resolve(cwd, out, script.replace(/^(\\.?\\/)?/g, ''));\n// Prevent Rollup from transforming `import()` here.\n",
        "date": "03.12.2020 07:28:55",
        "repo": "preactjs/wmr",
        "type": "fix",
        "chatgpt_zeroshot": "Add publicPath option to prerender function"
    },
    {
        "msg": "fix: ensure `new URL` sees full protocol",
        "diff": "diff --git a/src/plugins/public-path-plugin.js b/src/plugins/public-path-plugin.js @@ -14,7 +14,9 @@ export default function publicPathPlugin({ publicPath, filter } = {}) {\nlet output = posix.join(publicPath, assetInfo.fileName);\nif (/^(https?:)?\\/\\//.test(publicPath)) {\n- output = new URL(assetInfo.fileName, publicPath).href;\n+ const isFull = /^https:\\/\\//.test(publicPath);\n+ const root = isFull ? publicPath : 'https:' + publicPath;\n+ output = new URL(assetInfo.fileName, root).href.substring(isFull ? 0 : 6);\n}\nreturn JSON.stringify(output);\n",
        "date": "03.12.2020 08:40:04",
        "repo": "preactjs/wmr",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor publicPathPlugin to handle full URLs as publicPath"
    },
    {
        "msg": "fix(optimize): ensure CSS links + preloads retain `publicPath` value",
        "diff": "diff --git a/src/plugins/optimize-graph-plugin.js b/src/plugins/optimize-graph-plugin.js @@ -176,8 +176,7 @@ class ChunkGraph {\nlet rep = typeof newUrl === 'function' ? newUrl(url, fn, quote) : newUrl;\nif (rep === false) return 'null';\nif (typeof rep === 'string') {\n- if (publicPath) rep = posix.join(publicPath, rep);\n- rep = JSON.stringify(rep);\n+ rep = publicPath ? toImport(publicPath, rep, true) : JSON.stringify(rep);\n}\nreturn `${fn}(${rep})`;\n}\n@@ -185,6 +184,23 @@ class ChunkGraph {\n}\n}\n+/**\n+ * @param {string} publicPath\n+ * @param {string} filename\n+ * @param {boolean} [toJSON]\n+ */\n+function toImport(publicPath, filename, toJSON) {\n+ let value = posix.join(publicPath, filename);\n+\n+ if (/^(https?:)?\\/\\//.test(publicPath)) {\n+ const isFull = /^https:\\/\\//.test(publicPath);\n+ const root = isFull ? publicPath : 'https:' + publicPath;\n+ value = new URL(filename, root).href.substring(isFull ? 0 : 6);\n+ }\n+\n+ return toJSON ? JSON.stringify(value) : value;\n+}\n+\n/**\n* Merge together CSS assets that are only used by the same parent chunk\n* @param {ChunkGraph} graph\n@@ -331,6 +347,7 @@ function hoistCascadedCss(graph, { cssMinSize }) {\nmeta.styleLoadFn = DEFAULT_STYLE_LOAD_FN;\nparentChunk.code += '\\n' + DEFAULT_STYLE_LOAD_IMPL;\n}\n+\nconst url = JSON.stringify(posix.join(graph.publicPath, fileName));\nparentChunk.code += `\\n${meta.styleLoadFn}(${url});`;\n}\n@@ -373,7 +390,9 @@ function hoistTransitiveImports(graph) {\nappendCode += '\\n' + DEFAULT_STYLE_LOAD_IMPL;\n}\nif (DEBUG) console.log(`Preloading CSS for import(${spec}): ${css}`);\n- preloads.push(...css.map(f => `${meta.styleLoadFn}(${JSON.stringify(posix.join(graph.publicPath, f))})`));\n+ preloads.push(\n+ ...css.map(f => `${meta.styleLoadFn}(${toImport(graph.publicPath, f, true)})`)\n+ );\n}\nconst js = deps.js.get(spec);\n",
        "date": "03.12.2020 08:41:06",
        "repo": "preactjs/wmr",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor publicPath handling in optimize-graph-plugin"
    },
    {
        "msg": "fix: add missing `toImport` cases",
        "diff": "diff --git a/src/plugins/optimize-graph-plugin.js b/src/plugins/optimize-graph-plugin.js @@ -285,7 +285,7 @@ function hoistEntryCss(graph) {\n} else {\n// @TODO: this branch is actually unreachable\nif (DEBUG) console.log(`Hoisting CSS \"${f}\" imported by ${id} into parent HTML.`);\n- const url = JSON.stringify(posix.join(graph.publicPath, f));\n+ const url = toImport(graph.publicPath, f, true);\nasset.source = getAssetSource(asset).replace(/<\\/head>/, `<link rel=\"stylesheet\" href=${url}></head>`);\n}\n}\n@@ -348,7 +348,7 @@ function hoistCascadedCss(graph, { cssMinSize }) {\nparentChunk.code += '\\n' + DEFAULT_STYLE_LOAD_IMPL;\n}\n- const url = JSON.stringify(posix.join(graph.publicPath, fileName));\n+ const url = toImport(graph.publicPath, fileName, true);\nparentChunk.code += `\\n${meta.styleLoadFn}(${url});`;\n}\nbreak;\n@@ -400,6 +400,7 @@ function hoistTransitiveImports(graph) {\nif (DEBUG) console.log(`Preloading JS for import(${spec}): ${js}`);\npreloads.push(\n...js.map(f => {\n+ // TODO: should have `toImport(...)` somewhere here\nlet rel = posix.relative(posix.dirname('/' + fileName), posix.join(graph.publicPath, f));\nif (!rel.startsWith('.')) rel = './' + rel;\nreturn `import(${JSON.stringify(rel)})`;\n",
        "date": "03.12.2020 08:49:21",
        "repo": "preactjs/wmr",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor CSS hoisting and add missing import function"
    },
    {
        "msg": "fix(cli): hide `--minify` from CLI help text",
        "diff": "diff --git a/src/cli.js b/src/cli.js @@ -14,7 +14,6 @@ prog\n.option('--cwd', 'The working directory - equivalent to \"(cd FOO && wmr)\"')\n.command('build', 'make a production build')\n.option('--prerender', 'Pre-render the application to HTML')\n- .option('--minify', 'Minify built assets (default: enabled)')\n.action(opts => {\nopts.minify = opts.minify !== false && !/false|0/.test(opts.minify);\nrun(build(opts));\n",
        "date": "03.12.2020 14:28:26",
        "repo": "preactjs/wmr",
        "type": "fix",
        "chatgpt_zeroshot": "Remove minify option from build command in cli.js"
    },
    {
        "msg": "fix: fixture name for case sensitive filesystems",
        "diff": "diff --git a/test/production.test.js b/test/production.test.js @@ -187,7 +187,7 @@ describe('production', () => {\ndescribe('config.publicPath', () => {\nit('should respect `config.publicPath` value', async () => {\n- await loadFixture('publicPath', env);\n+ await loadFixture('publicpath', env);\ninstance = await runWmr(env.tmp.path, 'build');\nconst code = await instance.done;\nconsole.info(instance.output.join('\\n'));\n",
        "date": "05.12.2020 09:28:12",
        "repo": "preactjs/wmr",
        "type": "fix",
        "chatgpt_zeroshot": "Fix typo in loadFixture function call"
    },
    {
        "msg": "fix(optimize): avoid `relative` preloader if external publicPath",
        "diff": "diff --git a/src/plugins/optimize-graph-plugin.js b/src/plugins/optimize-graph-plugin.js @@ -398,7 +398,9 @@ function hoistTransitiveImports(graph) {\nif (DEBUG) console.log(`Preloading JS for import(${spec}): ${js}`);\npreloads.push(\n...js.map(f => {\n- // TODO: should have `toImport(...)` somewhere here\n+ if (/^(https?:)?\\/\\//.test(graph.publicPath)) {\n+ return `import(${toImport(graph.publicPath, f)})`;\n+ }\nlet rel = posix.relative(posix.dirname('/' + fileName), posix.join(graph.publicPath, f));\nif (!rel.startsWith('.')) rel = './' + rel;\nreturn `import(${JSON.stringify(rel)})`;\n",
        "date": "07.12.2020 10:42:46",
        "repo": "preactjs/wmr",
        "type": "fix",
        "chatgpt_zeroshot": "Add conditional check for importing external URLs in optimize-graph-plugin"
    },
    {
        "msg": "fix: Correcting route types",
        "diff": "diff --git a/packages/preact-iso/router.d.ts b/packages/preact-iso/router.d.ts @@ -12,5 +12,7 @@ interface RoutableProps {\n}\ndeclare module 'preact' {\n- export interface Attributes extends RoutableProps {}\n+ namespace JSX {\n+ interface IntrinsicAttributes extends RoutableProps {}\n+ }\n}\n",
        "date": "11.12.2020 19:27:24",
        "repo": "preactjs/wmr",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor router.d.ts to use JSX namespace for IntrinsicAttributes."
    },
    {
        "msg": "fix: Adding peerDeps & correcting module type",
        "diff": "diff --git a/packages/preact-iso/package.json b/packages/preact-iso/package.json \"main\": \"./index.js\",\n\"module\": \"./index.js\",\n\"types\": \"./index.d.ts\",\n+ \"type\": \"module\",\n\"exports\": {\n\".\": \"./index.js\",\n\"./router\": \"./router.js\",\n\"devDependencies\": {\n\"preact\": \"^10.5.7\",\n\"preact-render-to-string\": \"^5.1.12\"\n+ },\n+ \"peerDependencies\": {\n+ \"preact\": \">=10\",\n+ \"preact-render-to-string\": \">=5\"\n}\n}\n\\ No newline at end of file\n",
        "date": "05.02.2021 10:51:12",
        "repo": "preactjs/wmr",
        "type": "fix",
        "chatgpt_zeroshot": "Add type module and peer dependencies for preact and preact-render-to-string"
    },
    {
        "msg": "fix: Adding missing types",
        "diff": "diff --git a/packages/preact-iso/index.d.ts b/packages/preact-iso/index.d.ts import { VNode } from 'preact';\nimport { PrerenderOptions } from './prerender';\n+export { Router, LocationProvider, useLoc, useLocation } from './router';\n+export { default as lazy, ErrorBoundary } from './lazy';\n+export { default as hydrate } from './hydrate';\n+\nexport default function prerender(vnode: VNode, options?: PrerenderOptions): Promise<{ html: string, links: Set<string>}>;\n",
        "date": "16.02.2021 10:26:39",
        "repo": "preactjs/wmr",
        "type": "fix",
        "chatgpt_zeroshot": "Add new exports and reorganize code in preact-iso package"
    },
    {
        "msg": "fix: Uncaught fs.stat() throw",
        "diff": "diff --git a/packages/create-wmr/src/index.js b/packages/create-wmr/src/index.js @@ -18,12 +18,17 @@ sade('create-wmr [dir]', true)\nconst origCwd = process.cwd();\nlet cwd = process.cwd();\nif (dir) {\n- if ((await fs.stat(dir)).isDirectory() && !opts.force) {\n+ try {\n+ (await fs.stat(dir)).isDirectory();\n+ if (!opts.force) {\nprocess.stderr.write(\n- `${red(`Refusing to overwrite directory! Please specify a different directory or use the '--force' flag`)}\\n`\n+ `${red(\n+ `Refusing to overwrite directory! Please specify a different directory or use the '--force' flag`\n+ )}\\n`\n);\nprocess.exit(1);\n}\n+ } catch {}\ncwd = resolve(cwd, dir || '.');\nawait fs.mkdir(cwd, { recursive: true });\nprocess.chdir(cwd);\n",
        "date": "25.02.2021 17:56:18",
        "repo": "preactjs/wmr",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor directory overwrite check in create-wmr script"
    },
    {
        "msg": "fix: Catch for when mkdir errors due to existing file",
        "diff": "diff --git a/packages/create-wmr/src/index.js b/packages/create-wmr/src/index.js @@ -25,7 +25,16 @@ sade('create-wmr [dir]', true)\nprocess.exit(1);\n}\ncwd = resolve(cwd, dir || '.');\n+ try {\nawait fs.mkdir(cwd, { recursive: true });\n+ } catch {\n+ process.stderr.write(\n+ `${red(\n+ `There is already a file with the same name as the directory you specified. Please provide a different directory name`\n+ )}\\n`\n+ );\n+ process.exit(1);\n+ }\nprocess.chdir(cwd);\n}\nconst ctx = {\n",
        "date": "25.02.2021 18:19:03",
        "repo": "preactjs/wmr",
        "type": "fix",
        "chatgpt_zeroshot": "Handle existing file with same name as directory in create-wmr script"
    },
    {
        "msg": "fix: Correcting tsconfig `files` for `include` in template",
        "diff": "diff --git a/packages/create-wmr/tpl/tsconfig.json b/packages/create-wmr/tpl/tsconfig.json \"allowSyntheticDefaultImports\": true,\n\"downlevelIteration\": true\n},\n- \"files\": [\"./node_modules/wmr/index.d.ts\"],\n+ \"include\": [\"node_modules/wmr/index.d.ts\"],\n\"typeAcquisition\": {\n\"enable\": true\n}\n",
        "date": "27.03.2021 11:54:42",
        "repo": "preactjs/wmr",
        "type": "fix",
        "chatgpt_zeroshot": "Update tsconfig.json to include wmr index.d.ts file and enable type acquisition"
    },
    {
        "msg": "fix: Wrong file name for including WMR's types in template",
        "diff": "diff --git a/packages/create-wmr/tpl/tsconfig.json b/packages/create-wmr/tpl/tsconfig.json \"allowSyntheticDefaultImports\": true,\n\"downlevelIteration\": true\n},\n- \"include\": [\"node_modules/wmr/index.d.ts\"],\n+ \"include\": [\"node_modules/wmr/types.d.ts\"],\n\"typeAcquisition\": {\n\"enable\": true\n}\n",
        "date": "01.04.2021 10:55:37",
        "repo": "preactjs/wmr",
        "type": "fix",
        "chatgpt_zeroshot": "Update tsconfig.json to include types.d.ts and enable type acquisition"
    },
    {
        "msg": "fix: Including module type in published package.json",
        "diff": "diff --git a/packages/wmr/src/lib/~publish.js b/packages/wmr/src/lib/~publish.js @@ -7,11 +7,12 @@ const copy = dry ? (f, t) => console.info(`copy ${f} to ${t}`) : copyFileSync;\nconst pkg = JSON.parse(read('package.json'));\ncopy('package.json', '.package.json');\n-const { name, version, bin, author, contributors, repository, dependencies, types, files, engines, main } = pkg;\n+const { name, version, bin, type, author, contributors, repository, dependencies, types, files, engines, main } = pkg;\nconst normalized = {\nname,\nversion,\nbin,\n+ type,\nmain,\nauthor,\ncontributors,\n",
        "date": "06.05.2021 00:49:59",
        "repo": "preactjs/wmr",
        "type": "fix",
        "chatgpt_zeroshot": "fix: Add type field to normalized package data"
    },
    {
        "msg": "fix: Ensuring .d.ts files aren't copied to build output",
        "diff": "diff --git a/packages/wmr/src/plugins/copy-assets-plugin.js b/packages/wmr/src/plugins/copy-assets-plugin.js @@ -3,6 +3,7 @@ import { promises as fs } from 'fs';\nconst IGNORE_FILES = [\n'.',\n+ '.d.ts',\n'node_modules',\n'package.json',\n'package-lock.json',\n@@ -72,12 +73,19 @@ export default function copyAssetsPlugin({ cwd = '.' } = {}) {\nasync function readdirRecursive(rootDir, ignore = []) {\nconst files = [];\nconst noDotFiles = ignore.includes('.');\n+ const noDeclarationFiles = ignore.includes('.d.ts');\nconst r = async dir => {\nconst p = [];\nconst wdir = join(rootDir, dir);\nfor (const f of await fs.readdir(wdir, { withFileTypes: true })) {\nconst name = join(dir, f.name);\n- if ((noDotFiles && f.name[0] === '.') || ignore.includes(f.name) || ignore.includes('/' + name)) continue;\n+ if (\n+ (noDotFiles && f.name[0] === '.') ||\n+ (noDeclarationFiles && /\\.d\\.ts$/.test(f.name)) ||\n+ ignore.includes(f.name) ||\n+ ignore.includes('/' + name)\n+ )\n+ continue;\nif (f.isFile()) files.push(name);\nelse if (f.isDirectory()) p.push(r(name));\n}\n",
        "date": "06.05.2021 19:17:19",
        "repo": "preactjs/wmr",
        "type": "fix",
        "chatgpt_zeroshot": "Add support for ignoring .d.ts files in copyAssetsPlugin"
    },
    {
        "msg": "fix: WMR CLI commands",
        "diff": "diff --git a/packages/wmr/src/cli.js b/packages/wmr/src/cli.js @@ -15,8 +15,6 @@ function bool(v) {\n// global options\nprog\n- .option('--public', 'Your web app root directory (default: ./public)')\n- .option('--out', 'Where to store generated files (default: ./dist)')\n.option('--cwd', 'The working directory - equivalent to \"(cd FOO && wmr)\"')\n// Setting env variables isn't common knowledege for many windows users. Much\n// easier to pass a flag to our binary instead.\n@@ -24,6 +22,8 @@ prog\nprog\n.command('build', 'make a production build')\n+ .option('--public', 'Your web app root directory (default: ./public)')\n+ .option('--out', 'Where to store generated files (default: ./dist)')\n.option('--prerender', 'Pre-render the application to HTML')\n.option('--sourcemap', 'Enable Source Maps')\n.option('--visualize', 'Launch interactive bundle visualizer')\n@@ -46,6 +46,7 @@ prog\nprog\n.command('start', 'Start a development server', { default: true })\n+ .option('--public', 'Your web app root directory (default: ./public)')\n.option('--port, -p', 'HTTP port to listen on (default: $PORT or 8080)')\n.option('--host', 'HTTP host to listen on (default: localhost)')\n.option('--http2', 'Use HTTP/2 (default: false)')\n",
        "date": "09.05.2021 16:08:33",
        "repo": "preactjs/wmr",
        "type": "fix",
        "chatgpt_zeroshot": "Add public and out options to build and start commands"
    },
    {
        "msg": "fix: Removing optional chaining",
        "diff": "diff --git a/packages/wmr/src/lib/normalize-options.js b/packages/wmr/src/lib/normalize-options.js @@ -98,7 +98,7 @@ export async function normalizeOptions(options, mode, configWatchFiles = []) {\nout: resolve('.'),\nhmr: false,\nrewriteNodeImports: false,\n- format: pkg?.type === 'module' ? 'es' : 'commonjs'\n+ format: pkg && pkg.type === 'module' ? 'es' : 'commonjs'\n});\n}\n",
        "date": "14.05.2021 00:30:51",
        "repo": "preactjs/wmr",
        "type": "fix",
        "chatgpt_zeroshot": "Fix conditional check in normalizeOptions.js for determining format based on pkg type"
    },
    {
        "msg": "fix: Ensures TS config files are handled first",
        "diff": "diff --git a/packages/wmr/src/lib/normalize-options.js b/packages/wmr/src/lib/normalize-options.js @@ -78,7 +78,7 @@ export async function normalizeOptions(options, mode, configWatchFiles = []) {\n// ignore error, reading aliases from package.json is an optional feature\n}\n- const EXTENSIONS = ['.js', '.ts', '.mjs'];\n+ const EXTENSIONS = ['.ts', '.js', '.mjs'];\nlet custom;\nlet initialError;\n",
        "date": "14.05.2021 01:41:50",
        "repo": "preactjs/wmr",
        "type": "fix",
        "chatgpt_zeroshot": "Reorder file extensions in normalizeOptions.js"
    },
    {
        "msg": "fix: Debug flag in optimize-graph-plugin",
        "diff": "diff --git a/packages/wmr/src/plugins/optimize-graph-plugin.js b/packages/wmr/src/plugins/optimize-graph-plugin.js @@ -7,7 +7,7 @@ import { injectHead } from '../lib/transform-html.js';\n/** @typedef {import('rollup').OutputAsset} Asset */\n/** @typedef {Asset & { referencedFiles?: string[], importedIds?: string[] }} ExtendedAsset */\n-const DEBUG = hasDebugFlag();\n+let DEBUG;\nconst DEFAULT_STYLE_LOAD_FN = '$w_s$';\nconst DEFAULT_STYLE_LOAD_IMPL = `function $w_s$(e,t){typeof document=='undefined'?wmr.ssr.head.elements.add({type:'link',props:{rel:'stylesheet',href:e}}):document.querySelector('link[rel=stylesheet][href=\"'+e+'\"]')||((t=document.createElement(\"link\")).rel=\"stylesheet\",t.href=e,document.head.appendChild(t))}`;\n@@ -24,6 +24,7 @@ const DEFAULT_STYLE_LOAD_IMPL = `function $w_s$(e,t){typeof document=='undefined\n* @returns {import('rollup').Plugin}\n*/\nexport default function optimizeGraphPlugin({ publicPath = '', cssMinSize = 1000 } = {}) {\n+ DEBUG = hasDebugFlag();\nreturn {\nname: 'optimize-graph',\nasync generateBundle(_, bundle) {\n",
        "date": "20.05.2021 22:39:14",
        "repo": "preactjs/wmr",
        "type": "fix",
        "chatgpt_zeroshot": "Fix DEBUG initialization in optimize-graph-plugin"
    },
    {
        "msg": "fix(polkompress): always call `writeHead` step",
        "diff": "diff --git a/packages/wmr/src/lib/polkompress.js b/packages/wmr/src/lib/polkompress.js @@ -67,7 +67,7 @@ export default function compression({ threshold = 1024, level = -1, brotli = fal\nlisteners.forEach(p => on.apply(res, p));\n}\n- if (pendingStatus) writeHead.call(res, pendingStatus);\n+ writeHead.call(res, pendingStatus || res.statusCode);\n}\nconst { end, write, on, writeHead } = res;\n",
        "date": "26.05.2021 21:25:42",
        "repo": "preactjs/wmr",
        "type": "fix",
        "chatgpt_zeroshot": "Fix issue with response status code not being set in compression middleware"
    },
    {
        "msg": "fix: Unregister preact-cli's service worker if active",
        "diff": "diff --git a/packages/wmr/src/plugins/wmr/client.js b/packages/wmr/src/plugins/wmr/client.js @@ -412,3 +412,18 @@ function createErrorOverlay(data) {\ndocument.body.appendChild(iframe);\nreturn iframe;\n}\n+\n+/**\n+ * Removes the debug SW installed by Preact-CLI if it is active.\n+ * Overlap between WMR and Preact-CLI users shows this is a semi-common\n+ * and recurring issue.\n+ */\n+if ('serviceWorker' in navigator) {\n+ navigator.serviceWorker.getRegistrations().then(registrations => {\n+ for (const registration of registrations) {\n+ if (registration.active?.scriptURL.endsWith('/sw-debug.js')) {\n+ registration.unregister();\n+ }\n+ }\n+ });\n+}\n",
        "date": "25.08.2021 20:18:56",
        "repo": "preactjs/wmr",
        "type": "fix",
        "chatgpt_zeroshot": "Remove debug service worker installed by Preact-CLI if active"
    },
    {
        "msg": "fix: Leading newline in text node no longer results in whitespace",
        "diff": "diff --git a/packages/wmr/src/lib/acorn-traverse.js b/packages/wmr/src/lib/acorn-traverse.js @@ -890,8 +890,12 @@ const TYPES = {\n// We can drop the whole matched string if it only contains\n// whitespace characters, because that means we're at the\n// beginning or at the end of the JSXText node\n- const replacement = /[^\\s]/.test(value) ? ' ' : '';\n- value = value.replace(/\\s*\\n+\\s*/g, replacement);\n+ if (/[^\\s]/.test(value)) {\n+ value = value.replace(/(^\\s*\\n\\s*|\\s*\\n\\s*$)/g, '');\n+ value = value.replace(/\\s*\\n+\\s*/g, ' ');\n+ } else {\n+ value = value.replace(/\\s*\\n+\\s*/g, '');\n+ }\n}\nchildren.push(TYPES.stringLiteral(value));\n}\n",
        "date": "08.01.2022 04:56:29",
        "repo": "preactjs/wmr",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor whitespace handling in acorn-traverse to improve JSXText node processing"
    },
    {
        "msg": "fix: First, not last, non-external script in HTML should have prerender()",
        "diff": "diff --git a/packages/wmr/src/lib/prerender.js b/packages/wmr/src/lib/prerender.js @@ -76,7 +76,7 @@ async function workerCode({ cwd, out, publicPath, customRoutes }) {\nconst SCRIPT_TAG = /<script(?:\\s[^>]*?)?\\s+src=(['\"]?)([^>]*?)\\1(?:\\s[^>]*?)?>/g;\nlet match;\n- while ((match = SCRIPT_TAG.exec(tpl))) {\n+ while ((match = SCRIPT_TAG.exec(tpl)) && !script) {\n// Ignore external urls\nif (!match || /^(?:https?|file|data)/.test(match[2])) continue;\n",
        "date": "23.01.2022 21:51:02",
        "repo": "preactjs/wmr",
        "type": "fix",
        "chatgpt_zeroshot": "Fix issue with script tag matching in prerender.js"
    },
    {
        "msg": "fix: Ensures config file has been merged before deciding output directory",
        "diff": "diff --git a/packages/wmr/src/lib/normalize-options.js b/packages/wmr/src/lib/normalize-options.js @@ -49,12 +49,6 @@ export async function normalizeOptions(options, mode, configWatchFiles = []) {\n// Files in the output directory are served if no middleware overrides them:\noptions.overlayDir = options.out;\n- // Ensure the output directory exists so that writeFile() doesn't have to create it:\n- // Note: awaiting the promise later lets it run in parallel with the CWD check below.\n- const ensureOutDirPromise = fs.mkdir(options.out, { recursive: true }).catch(err => {\n- console.warn(`Warning: Failed to create output directory: ${err.message}`);\n- });\n-\noptions.public = options.public || 'public';\noptions.publicPath = options.publicPath || '/';\n@@ -81,7 +75,6 @@ export async function normalizeOptions(options, mode, configWatchFiles = []) {\n}\nlet prevPublicFolder = options.public;\n- await ensureOutDirPromise;\nconst pkgFile = resolve(options.cwd, 'package.json');\nlet pkg;\n@@ -192,6 +185,11 @@ export async function normalizeOptions(options, mode, configWatchFiles = []) {\n}\n}\n+ // Ensure the output directory exists so that writeFile() doesn't have to create it\n+ await fs.mkdir(options.out, { recursive: true }).catch(err => {\n+ console.warn(`Warning: Failed to create output directory: ${err.message}`);\n+ });\n+\nif (options.aliases && Object.keys(options.aliases).length > 0) {\ndeprecated(\n'Found \"aliases\" property in WMR\\'s configuration. It will be removed in a future version of WMR. Please switch to \"alias\" instead.'\n",
        "date": "23.01.2022 21:34:12",
        "repo": "preactjs/wmr",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor output directory creation in normalizeOptions"
    },
    {
        "msg": "fix: move prerender to wmr",
        "diff": "diff --git a/packages/wmr/src/lib/prerender.js b/packages/wmr/src/lib/prerender.js @@ -96,6 +96,12 @@ async function workerCode({ cwd, out, publicPath, customRoutes }) {\nlet head = { lang: '', title: '', elements: new Set() };\nglobalThis.wmr = { ssr: { head } };\n+ // @ts-ignore\n+ globalThis.fetch = async url => {\n+ const text = () => fs.readFile(`${out}/${String(url).replace(/^\\//, '')}`, 'utf-8');\n+ return { text, json: () => text().then(JSON.parse) };\n+ };\n+\n// Prevent Rollup from transforming `import()` here.\nconst $import = new Function('s', 'return import(s)');\nconst m = await $import('file:///' + script);\n",
        "date": "14.08.2022 12:12:08",
        "repo": "preactjs/wmr",
        "type": "fix",
        "chatgpt_zeroshot": "Add custom fetch implementation for SSR in prerender.js"
    },
    {
        "msg": "fix: As of Node 16, fs.rmdir throws if path does not exist",
        "diff": "diff --git a/packages/wmr/test/production.test.js b/packages/wmr/test/production.test.js @@ -471,7 +471,9 @@ describe('production', () => {\nit('should serve the demo app', async () => {\nawait loadFixture('../../../../examples/demo', env);\nfor (const d of ['dist', 'node_modules', '.cache']) {\n+ try {\nawait fs.rmdir(path.join(env.tmp.path, d), { recursive: true });\n+ } catch {}\n}\ninstance = await runWmr(env.tmp.path, 'build', '--prerender');\nconst code = await instance.done;\n",
        "date": "23.09.2022 20:16:33",
        "repo": "preactjs/wmr",
        "type": "fix",
        "chatgpt_zeroshot": "Remove unnecessary directories before building in production test"
    },
    {
        "msg": "fix: git not found error\nFixes by adding git seperately",
        "diff": "diff --git a/Dockerfile.gh b/Dockerfile.gh FROM node:alpine\nLABEL maintainer=\"rashley-iqt <rashley@iqt.org>\"\n-RUN apk update\n-RUN git config --global user.email \"clewis@iqt.org\"\n-RUN git config --global user.name \"Charlie Lewis\"\n+RUN apk update && apk add git\n+RUN git config --global user.email \"rashley@iqt.org\"\n+RUN git config --global user.name \"rashley-iqt\"\nCOPY . /app\nWORKDIR /app\n",
        "date": "25.06.2018 12:07:35",
        "repo": "iqtlabs/crviz",
        "type": "fix",
        "chatgpt_zeroshot": "Update Dockerfile to install git and set correct user email and name"
    },
    {
        "msg": "fix(search): Fixes - linting issue",
        "diff": "diff --git a/src/epics/epic.test.js b/src/epics/epic.test.js @@ -4,8 +4,6 @@ import configureStore from \"../configure-store\";\nimport { createEpicMiddleware } from 'redux-observable';\nimport { of} from 'rxjs';\n-import { QueryParseError } from 'lunr';\n-\nimport rootEpic from './root-epic'\nimport { setDataset } from '../domain/dataset'\nimport { loadDataset } from \"./load-dataset-epic\"\n",
        "date": "09.07.2018 12:30:57",
        "repo": "iqtlabs/crviz",
        "type": "fix",
        "chatgpt_zeroshot": "Remove unused import QueryParseError from epic.test.js"
    },
    {
        "msg": "fix: - corrected mechanism of supplying url to autorefresh function",
        "diff": "diff --git a/src/features/dataset-controls/DatasetControls.js b/src/features/dataset-controls/DatasetControls.js @@ -34,7 +34,7 @@ const authTypes = [\nvar host = window.location.host;\nvar hostname = window.location.hostname;\n-var port = '80';\n+var port = '32795';\nconst radix = 10;\nif (host.indexOf(':') > -1) {\nport = String(parseInt(host.split(\":\")[1], radix)-1);\n@@ -183,7 +183,7 @@ class DatasetControls extends React.Component {\nrefreshTimerRunning: true\n});\nconst authHeader = buildAuthHeader(this.state.username, this.state.password, this.state.token);\n- const url = this.state.url;\n+ const url = this.state.selected.url;\nconst interval = this.state.refreshInterval;\nthis.props.startRefresh({'url': url, 'header': authHeader, 'interval': interval});\n}\n",
        "date": "23.08.2018 13:04:23",
        "repo": "iqtlabs/crviz",
        "type": "fix",
        "chatgpt_zeroshot": "Update port number and url variable in DatasetControls.js"
    },
    {
        "msg": "fix: - fixed port number",
        "diff": "diff --git a/src/features/dataset-controls/DatasetControls.js b/src/features/dataset-controls/DatasetControls.js @@ -34,7 +34,7 @@ const authTypes = [\nvar host = window.location.host;\nvar hostname = window.location.hostname;\n-var port = '32795';\n+var port = '80';\nconst radix = 10;\nif (host.indexOf(':') > -1) {\nport = String(parseInt(host.split(\":\")[1], radix)-1);\n",
        "date": "23.08.2018 13:39:53",
        "repo": "iqtlabs/crviz",
        "type": "fix",
        "chatgpt_zeroshot": "Update port number in DatasetControls.js to use default port 80."
    },
    {
        "msg": "fix: Closes - sets App Canvas to 100% height of parent element",
        "diff": "diff --git a/src/App.module.css b/src/App.module.css transform: translateZ(0);\ndisplay: flex;\nflex-direction: column;\n+ height: 100%\n}\n:global(.darkTheme) .controls {\nflex: 1 1;\ntransition: transform 0.25s;\ntransform: translateZ(0);\n+ height: 100%\n}\ninput[name=hideControls] {\n",
        "date": "07.11.2018 14:51:59",
        "repo": "iqtlabs/crviz",
        "type": "fix",
        "chatgpt_zeroshot": "Add height property to App.module.css for better layout styling"
    },
    {
        "msg": "fix: closes - refresh interval validation handles empty string correctly",
        "diff": "diff --git a/src/features/dataset-controls/DatasetControls.js b/src/features/dataset-controls/DatasetControls.js @@ -214,6 +214,11 @@ class DatasetControls extends React.Component {\nrefreshInterval: numInt,\n});\n}\n+ else if(!interval){\n+ this.setState({\n+ refreshInterval: null,\n+ });\n+ }\n}\nrender() {\n",
        "date": "08.11.2018 21:38:44",
        "repo": "iqtlabs/crviz",
        "type": "fix",
        "chatgpt_zeroshot": "Add condition to set refreshInterval to null if interval is not provided"
    },
    {
        "msg": "fix: fixes - don't reset hierarchyConfig on dataset select",
        "diff": "diff --git a/src/features/dataset-controls/DatasetControls.js b/src/features/dataset-controls/DatasetControls.js @@ -101,9 +101,6 @@ class DatasetControls extends React.Component {\nthis.props.removeDataset({owner: this.props.uuid});\nthis.props.removeSearchIndex({owner: this.props.uuid});\n- this.props.setHierarchyConfig([]);\n- this.props.colorBy(null);\n- this.props.showNodes(true);\nthis.props.stopRefresh();\nconst showUrlEntry = dataset === CUSTOM_DATASET;\n@@ -125,8 +122,6 @@ class DatasetControls extends React.Component {\n}\nonUpload = (file) => {\n- this.props.setHierarchyConfig([]);\n- this.props.colorBy(null);\nthis.props.uploadDataset({ 'owner': this.props.uuid, 'file': file });\nthis.props.stopRefresh();\nthis.setState({\n@@ -363,8 +358,11 @@ DatasetControls.defaultProps = {\nuuid: uuidv4(),\ndatasets: [],\ndataset: null,\n+ hierarchyConfig: [],\n+ configHasChanged: false,\nisFetching: false,\nlastUpdated: new Date(),\n+\n};\nDatasetControls.propTypes = {\n@@ -386,6 +384,8 @@ DatasetControls.propTypes = {\nisFetching: PropTypes.bool,\nlastUpdated: PropTypes.instanceOf(Date),\nsetError: PropTypes.func.isRequired,\n+ hierarchyConfig: PropTypes.array,\n+ configHasChanged: PropTypes.bool\n};\nconst mapStateToProps = (state, ownProps) => {\n",
        "date": "04.02.2019 15:44:17",
        "repo": "iqtlabs/crviz",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor DatasetControls component and update propTypes"
    },
    {
        "msg": "fix: For creates CRVIZ_SEARCH_REF property to use as ref for indexing",
        "diff": "diff --git a/src/epics/index-dataset-epic.js b/src/epics/index-dataset-epic.js @@ -69,7 +69,7 @@ const flattenDataset = (ds, cfg) => {\nreturn flattened;\nfor(var key in ds){\n- var item = {'id':key};\n+ var item = {'CRVIZ_SEARCH_REF':key};\nfor(var f in cfg.fields){\nvar field = cfg.fields[f];\n@@ -88,13 +88,14 @@ const generateIndex = (payload) => {\n? payload.configuration : configurationFor(dataset);\nvar flat = flattenDataset(dataset, configuration);\nconst idx = lunr(function () {\n- this.ref('id');\n+ this.ref('CRVIZ_SEARCH_REF');\nif(configuration && configuration.fields){\nconst filteredFields = configuration.fields.filter(f => !f.displayName.includes(\"/\"))\nfilteredFields.map((field) => { return this.field(field.displayName.toLowerCase()); })\n}\nflat.map((item) => { return this.add(item); })\n});\n+\nreturn { owner: owner, index: idx };\n};\n",
        "date": "05.03.2019 12:32:26",
        "repo": "iqtlabs/crviz",
        "type": "fix",
        "chatgpt_zeroshot": "Update index-dataset-epic.js to use 'CRVIZ_SEARCH_REF' as reference key in flattenDataset and generateIndex functions"
    },
    {
        "msg": "fix: Disable file import OK button until a file is selected\nfixes",
        "diff": "diff --git a/src/App.js b/src/App.js @@ -417,7 +417,9 @@ class App extends Component {\n<div>\n<span className={ style.centerSpan }>\n{options.action === IMPORT &&\n- <div className=\"button circular\" title=\"Ok\" onClick={this.processOptions}>\n+ <div className=\"button circular\" title=\"Ok\"\n+ disabled={options.action === IMPORT && !this.state.selectedFile}\n+ onClick={this.processOptions}>\n<FontAwesomeIcon icon={faCheck} />\n</div>\n}\n",
        "date": "01.04.2019 18:07:44",
        "repo": "iqtlabs/crviz",
        "type": "fix",
        "chatgpt_zeroshot": "Add disabled attribute to Ok button when no file is selected"
    },
    {
        "msg": "fix: cleaned up wonkiness of label text",
        "diff": "diff --git a/src/features/visualization/d3-viz/append-circles.js b/src/features/visualization/d3-viz/append-circles.js @@ -106,7 +106,7 @@ const scaleAndTrimToLabelWidth = (node, datum, initialFontScale) => {\nconst maxTextWidth = 0.80 * getLabelWidth(datum);\nconst maxTextHeight = 0.80 * datum.labelSize;\nconst minFontScale = 10;\n- const maxFontScale = 75;\n+ const maxFontScale = 125;\nlet boxWidth = node.getBBox().width;\nlet boxHeight = node.getBBox().height;\n@@ -115,9 +115,20 @@ const scaleAndTrimToLabelWidth = (node, datum, initialFontScale) => {\n//scale to height\nif ((boxHeight > maxTextHeight)){\n- const heightScale = Math.abs((boxHeight - maxTextHeight)/maxTextHeight);\n- const widthScale = Math.abs((boxWidth -maxTextWidth)/maxTextWidth);\n- fontScale = Math.max(minFontScale, Math.min(heightScale * initialFontScale, widthScale *initialFontScale, maxFontScale));\n+ const heightScale = 1-Math.abs((boxHeight - maxTextHeight)/boxHeight);\n+ fontScale = Math.max(minFontScale, heightScale * initialFontScale);\n+ if (datum.data.fieldValue === \"File server\"){\n+ console.log(\"boxHeight: %o\", boxHeight);\n+ console.log(\"maxTextHeight: %o\", maxTextHeight);\n+ console.log(\"initialFontScale: %o\", initialFontScale);\n+ console.log(\"fontScale: %o\", fontScale);\n+ }\n+ select(node)\n+ .style('font-size', (d, i, nodes) => fontScale + \"%\")\n+ .text(labelText);\n+ } else if(boxHeight < 0.75 * maxTextHeight){\n+ const heightScale = 1 + Math.abs((boxHeight - maxTextHeight)/maxTextHeight);\n+ fontScale = Math.min(maxFontScale, heightScale * initialFontScale);\nselect(node)\n.style('font-size', (d, i, nodes) => fontScale + \"%\")\n.text(labelText);\n@@ -127,15 +138,11 @@ const scaleAndTrimToLabelWidth = (node, datum, initialFontScale) => {\n//trim to width\nif(boxWidth > maxTextWidth)\n{\n- const lengthToTrimTo = Math.trunc(((boxWidth -maxTextWidth)/maxTextWidth) * labelText.length) - 3;\n- if(lengthToTrimTo > 0){\n- labelText = labelText.substr(0, lengthToTrimTo) + \"...\";\n- }\n- else{\n- labelText = \"...\";\n- }\n-\n+ const lengthToTrimTo = Math.trunc(0.75*labelText.length);\n+ labelText = labelText.substr(0, lengthToTrimTo) + \"...\"\nselect(node)\n+ .attr('textLength', maxTextWidth)\n+ .attr('lengthAdjust', \"spacingAndGlyphs\")\n.text(labelText);\n}\n}\n",
        "date": "03.04.2019 15:20:48",
        "repo": "iqtlabs/crviz",
        "type": "fix",
        "chatgpt_zeroshot": "Adjust font scaling and text trimming in d3 visualization append-circles script"
    },
    {
        "msg": "fix: improved blink timing",
        "diff": "diff --git a/src/features/visualization/Visualization.module.css b/src/features/visualization/Visualization.module.css -webkit-animation-name: delta;\n-webkit-animation-duration: 2s;\n-webkit-animation-iteration-count: infinite;\n- animation: delta 5s infinite;\n+ animation: delta 2s infinite;\n}\n@keyframes delta {\n- 0% {\n+ 50% {\n-webkit-clip-path: polygon(50% 0%, 0% 100%, 100% 100%);\nclip-path: polygon(50% 0%, 0% 100%, 100% 100%);\n},\n- 100% {\n+ 0%, 100% {\n}\n}\n-webkit-animation-name: plus;\n-webkit-animation-duration: 2s;\n-webkit-animation-iteration-count: infinite;\n- animation: plus 5s infinite;\n+ animation: plus 2s infinite;\n}\n@keyframes plus {\n- 0% {\n+ 50% {\n-webkit-clip-path: polygon(0% 33%, 33% 33%, 33% 0%, 66% 0%, 66% 33%, 100% 33%, 100% 66%, 66% 66%, 66% 100%, 33% 100%, 33% 66%, 0% 66%, 0% 33%);\nclip-path: polygon(0% 33%, 33% 33%, 33% 0%, 66% 0%, 66% 33%, 100% 33%, 100% 66%, 66% 66%, 66% 100%, 33% 100%, 33% 66%, 0% 66%, 0% 33%);\n},\n- 100% {\n+ 0%, 100% {\n}\n}\n-webkit-animation-name: minus;\n-webkit-animation-duration: 2s;\n-webkit-animation-iteration-count: infinite;\n- animation: minus 5s infinite;\n+ animation: minus 2s infinite;\n}\n@keyframes minus {\n- 0% {\n+ 50% {\n-webkit-clip-path: polygon(0% 33%, 100% 33%, 100% 66%, 0% 66%);\nclip-path: polygon(0% 33%, 100% 33%, 100% 66%, 0% 66%);\n},\n- 100% {\n+ 0%, 100% {\n}\n}\n",
        "date": "03.04.2019 15:29:37",
        "repo": "iqtlabs/crviz",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor animation durations in Visualization module CSS"
    },
    {
        "msg": "fix: corrects bug where app crashes on import if no file is selected",
        "diff": "diff --git a/src/App.js b/src/App.js @@ -160,12 +160,14 @@ class App extends Component {\nprocessOptions = () => {\nif(this.state.options.action === IMPORT)\n{\n+ if(this.state.selectedFile){\nthis.props.uploadDataset({\n'owner': uuidv4(),\n'file': this.state.selectedFile,\n'includeData': this.state.options.data,\n'includeControls': this.state.options.controls,\n});\n+ }\nthis.setState({showOptions: false})\n}\n}\n",
        "date": "10.04.2019 14:42:31",
        "repo": "iqtlabs/crviz",
        "type": "fix",
        "chatgpt_zeroshot": "Add condition to check if a file is selected before uploading dataset"
    },
    {
        "msg": "fix(Time Series): correctly styling child glyphs on click events",
        "diff": "diff --git a/src/features/visualization/d3-viz/setup-annotations.js b/src/features/visualization/d3-viz/setup-annotations.js @@ -184,6 +184,12 @@ const setupAnnotations = ({packedData, annotationRoot}) =>{\n.select(`g.${className(\"isAdded-fixed\")}`)\nconst showHide = glyph.classed(className(\"ringMenuExcluded\"));\n+ const childGlyphs = selectAll(`g.${className(\"isAdded-fixed\")}`)\n+ .filter((e) =>{\n+ const ancestors = e.ancestors();\n+ return ancestors.findIndex( a => datumKey(a) === dk) !== -1;\n+ });\n+\nconst added = selectAll(`g.${className(\"isAdded\")}`)\n.filter((e) =>{\nconst ancestors = e.ancestors();\n@@ -192,6 +198,7 @@ const setupAnnotations = ({packedData, annotationRoot}) =>{\nif(!added.empty()){\nglyph.classed(className(\"ringMenuExcluded\"), !showHide);\n+ childGlyphs.classed(className(\"ringMenuExcluded\"), !showHide);\nadded.classed(className(\"ringMenuExcluded\"), !showHide);\n}\n}\n@@ -231,6 +238,12 @@ const setupAnnotations = ({packedData, annotationRoot}) =>{\n.select(`g.${className(\"isChanged-fixed\")}`)\nconst showHide = glyph.classed(className(\"ringMenuExcluded\"));\n+ const childGlyphs = selectAll(`g.${className(\"isChanged-fixed\")}`)\n+ .filter((e) =>{\n+ const ancestors = e.ancestors();\n+ return ancestors.findIndex( a => datumKey(a) === dk) !== -1;\n+ });\n+\nconst changed = selectAll(`g.${className(\"isChanged\")}`)\n.filter((e) =>{\nconst ancestors = e.ancestors();\n@@ -239,6 +252,7 @@ const setupAnnotations = ({packedData, annotationRoot}) =>{\nif(!changed.empty()){\nglyph.classed(className(\"ringMenuExcluded\"), !showHide);\n+ childGlyphs.classed(className(\"ringMenuExcluded\"), !showHide);\nchanged.classed(className(\"ringMenuExcluded\"), !showHide);\n}\n}\n@@ -278,6 +292,12 @@ const setupAnnotations = ({packedData, annotationRoot}) =>{\n.select(`g.${className(\"isRemoved-fixed\")}`)\nconst showHide = glyph.classed(className(\"ringMenuExcluded\"));\n+ const childGlyphs = selectAll(`g.${className(\"isRemoved-fixed\")}`)\n+ .filter((e) =>{\n+ const ancestors = e.ancestors();\n+ return ancestors.findIndex( a => datumKey(a) === dk) !== -1;\n+ });\n+\nconst removed = selectAll(`g.${className(\"isRemoved\")}`)\n.filter((e) =>{\nconst ancestors = e.ancestors();\n@@ -286,6 +306,7 @@ const setupAnnotations = ({packedData, annotationRoot}) =>{\nif(!removed.empty()){\nglyph.classed(className(\"ringMenuExcluded\"), !showHide);\n+ childGlyphs.classed(className(\"ringMenuExcluded\"), !showHide);\nremoved.classed(className(\"ringMenuExcluded\"), !showHide);\n}\n}\n",
        "date": "12.04.2019 16:06:30",
        "repo": "iqtlabs/crviz",
        "type": "fix",
        "chatgpt_zeroshot": "Add logic to handle child glyphs in setupAnnotations"
    },
    {
        "msg": "fix(Time Series): Adds delay to animations to sync them. Closes",
        "diff": "diff --git a/src/features/visualization/Visualization.module.css b/src/features/visualization/Visualization.module.css -webkit-animation-duration: 2s;\n-webkit-animation-iteration-count: infinite;\nanimation: delta 2s infinite;\n+ animation-delay: 250ms;\n}\n@keyframes delta {\n-webkit-animation-duration: 2s;\n-webkit-animation-iteration-count: infinite;\nanimation: plus 2s infinite;\n+ animation-delay: 250ms;\n}\n@keyframes plus {\n-webkit-animation-duration: 2s;\n-webkit-animation-iteration-count: infinite;\nanimation: minus 2s infinite;\n+ animation-delay: 250ms;\n}\n@keyframes minus {\n",
        "date": "15.04.2019 14:29:20",
        "repo": "iqtlabs/crviz",
        "type": "fix",
        "chatgpt_zeroshot": "Add animation-delay to keyframes in Visualization module CSS"
    },
    {
        "msg": "fix: temporarily disable snyk due to tree size issue pt 2",
        "diff": "diff --git a/package.json b/package.json \"deploy-experimental\": \"gh-pages -r https://github.com/rashley-iqt/CRviz -d build\",\n\"lint\": \"eslint --ext=js --ext=jsx .\",\n\"release\": \"standard-version\",\n- \"snyk-protect\": \"snyk protect\",\n+ \"snyk-protect\": \"snyk protect\"\n},\n\"pre-commit\": {\n\"run\": [\n",
        "date": "02.05.2019 13:53:20",
        "repo": "iqtlabs/crviz",
        "type": "fix",
        "chatgpt_zeroshot": "Fix typo in snyk-protect script in package.json"
    },
    {
        "msg": "fix(Time Series): let start and end datasets be the same. Fixes",
        "diff": "diff --git a/src/features/dataset-controls/DatasetSlider.js b/src/features/dataset-controls/DatasetSlider.js @@ -68,12 +68,9 @@ class DatasetSlider extends React.Component {\nif(start){\nthis.props.setStartUuid(start.owner);\n}\n- if(end && end !== start){\n+ if(end){\nthis.props.setEndUuid(end.owner);\n}\n- if(end && end === start){\n- this.props.setEndUuid('UNSET');\n- }\n}\nformatTicks = (t) => {\n",
        "date": "06.05.2019 15:37:15",
        "repo": "iqtlabs/crviz",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor DatasetSlider.js to simplify logic for setting endUuid"
    },
    {
        "msg": "fix: get rid of viewbox warning",
        "diff": "diff --git a/src/features/visualization/d3-viz.js b/src/features/visualization/d3-viz.js @@ -74,7 +74,6 @@ function d3Viz(rootNode) {\nconst svg = transformRoot.append(\"svg\")\n.style(\"overflow\", \"visible\")\n.attr(\"class\", \"nodeRoot\")\n- .attr('viewBox', \"0 0 100% 100%\");\nconst tooltip = root.append(\"div\").classed(\"viz-tooltip\", true);\nconst legend = root.append(\"div\").classed(\"viz-legend\", true);\n",
        "date": "09.05.2019 13:28:52",
        "repo": "iqtlabs/crviz",
        "type": "fix",
        "chatgpt_zeroshot": "Remove viewBox attribute from d3Viz component"
    },
    {
        "msg": "fix(Time series): only show comparison when there are 2 or more datasets",
        "diff": "diff --git a/src/App.js b/src/App.js @@ -328,14 +328,14 @@ class App extends Component {\n<div className={style.accordionHeader} onClick={this.toggleShowComparison}>\nComparison {!showComparison && <FontAwesomeIcon icon={faAngleDoubleDown} />}{showComparison && <FontAwesomeIcon onClick={this.toggleShowComparison} icon={faAngleDoubleUp} />}\n</div>\n- { hasDataset &&\n+ { datasetCount >= 2 &&\n<div className={ classNames({ [style.section]: true, [style.hierarchySection]: true, [style.hidden]: !showComparison }) }>\n<ComparisonSelector startUid={startUuid} endUid={endUuid} />\n</div>\n}\n- { !hasDataset &&\n+ { datasetCount < 2 &&\n<div className={ classNames({ [style.section]: true, [style.dimSection]:true, [style.hierarchySection]: true, [style.hidden]: !showComparison }) }>\n- Please select datasets to continue\n+ Please select at least 2 datasets to continue\n</div>\n}\n",
        "date": "09.05.2019 14:57:59",
        "repo": "iqtlabs/crviz",
        "type": "fix",
        "chatgpt_zeroshot": "Update dataset selection message to require at least 2 datasets."
    },
    {
        "msg": "fix(dark theme exit icon): switch color to white when going into dark theme",
        "diff": "diff --git a/src/features/visualization/Visualization.module.css b/src/features/visualization/Visualization.module.css animation: fadein 1s;\n}\n+:global(.darkTheme) .viz :global(.viz-ring-menu){\n+ fill: white !important;\n+}\n+\n+\n.viz :global(circle.viz-bg-circle){\nstroke: transparent;\nfill: white !important;\n",
        "date": "10.06.2019 15:58:19",
        "repo": "iqtlabs/crviz",
        "type": "fix",
        "chatgpt_zeroshot": "Add styling for dark theme in visualization module CSS"
    },
    {
        "msg": "fix(controls.test): add tests for position and datum",
        "diff": "diff --git a/src/domain/controls.test.js b/src/domain/controls.test.js @@ -27,7 +27,8 @@ describe(\"Controls reducer\", () => {\n'start': 't0',\n'end': 'tn',\n'showBusy': true,\n- 'position': [0,0]\n+ 'position': [0,0],\n+ 'datum': null\n}\nconst action = setControls(controls);\n@@ -71,7 +72,8 @@ describe(\"Controls reducer\", () => {\n'start': null,\n'end': null,\n'showBusy': false,\n- 'position': [0,0]\n+ 'position': [0,0],\n+ 'datum': null //\n});\ndone();\n",
        "date": "26.06.2019 13:42:13",
        "repo": "iqtlabs/crviz",
        "type": "fix",
        "chatgpt_zeroshot": "Add 'datum' property to controls object in reducer"
    },
    {
        "msg": "fix(tooltip): overlap between d3 sliding dataset and notetip",
        "diff": "diff --git a/src/features/tooltip/Tooltip.js b/src/features/tooltip/Tooltip.js @@ -146,18 +146,18 @@ class TooltipControls extends React.Component {\n<div style={style}>\n{this.props.data && !this.props.data.fieldValue &&\n<div>\n- <h4><b>UID: </b>{this.props.data.uid} </h4>\n- <h4><b>MAC: </b>{this.props.data.mac} </h4>\n- <h4><b>rDNS_host: </b>{this.props.data.rDNS_host} </h4>\n- <h4><b>Subnet: </b>{this.props.data.subnet} </h4>\n- <h4><b>IP: </b>{this.props.data.IP} </h4>\n- <h4><b>Record Source: </b>{this.props.data.record.source} </h4>\n- <h4><b>Record Timestamp: </b>{this.props.data.record.timestamp} </h4>\n- <h4><b>Role: </b>{this.props.data.role.role} </h4>\n- <h4><b>rDNS_domain: </b>{this.props.data.rDNS_domain} </h4>\n- <h4><b>OS: </b>{this.props.data.os.os} </h4>\n- <h4><b>OS Confidence: </b>{this.props.data.os.confidence} </h4>\n- <h4><b>Vendor: </b>{this.props.data.vendor} </h4>\n+ <p><b>UID: </b>{this.props.data.uid} </p>\n+ <p><b>MAC: </b>{this.props.data.mac} </p>\n+ <p><b>rDNS_host: </b>{this.props.data.rDNS_host} </p>\n+ <p><b>Subnet: </b>{this.props.data.subnet} </p>\n+ <p><b>IP: </b>{this.props.data.IP} </p>\n+ <p><b>Record Source: </b>{this.props.data.record.source} </p>\n+ <p><b>Record Timestamp: </b>{this.props.data.record.timestamp} </p>\n+ <p><b>Role: </b>{this.props.data.role.role} </p>\n+ <p><b>rDNS_domain: </b>{this.props.data.rDNS_domain} </p>\n+ <p><b>OS: </b>{this.props.data.os.os} </p>\n+ <p><b>OS Confidence: </b>{this.props.data.os.confidence} </p>\n+ <p><b>Vendor: </b>{this.props.data.vendor} </p>\n</div>\n}\n{this.props.data && this.props.data.fieldValue &&\n",
        "date": "16.07.2019 13:08:25",
        "repo": "iqtlabs/crviz",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor tooltip content to use <p> tags instead of <h4> tags"
    },
    {
        "msg": "fix(persistence of notes): user doesn't have to click away to get note to work",
        "diff": "diff --git a/src/features/tooltip/Tooltip.js b/src/features/tooltip/Tooltip.js @@ -14,6 +14,10 @@ class TooltipControls extends React.Component {\nconstructor(props){\nsuper(props)\nthis.state = this.initialState;\n+ /*this.state = {\n+ ...this.state,\n+ showNote:false\n+ }*/\n}\nget initialState(){\n@@ -23,7 +27,6 @@ class TooltipControls extends React.Component {\nwidth:\"300px\",\nposition: [200,200],\ncurrentLabel:\"\",\n- showNote: false,\nnote: {\nid:'',\nnote:{\n@@ -68,7 +71,7 @@ class TooltipControls extends React.Component {\nawait this.setState({note});\nawait this.props.addNote(this.state.note);\n- this.resetBuilder()\n+ //this.resetBuilder()\n} catch(error){\nalert('No search key')\n}\n@@ -96,9 +99,6 @@ class TooltipControls extends React.Component {\ncomponentDidUpdate = (prevProps) => {\nif (prevProps.data !== this.props.data) {\n- if(this.props.data.fieldValue){\n- }\n- else{\nvar note = {...this.state.note}\nnote.id = this.props.data.CRVIZ._SEARCH_KEY\nif (note.id in this.props.notes){\n@@ -111,7 +111,6 @@ class TooltipControls extends React.Component {\n}\n}\n}\n- }\nrender() {\nconst style = {\n",
        "date": "17.07.2019 11:34:54",
        "repo": "iqtlabs/crviz",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor TooltipControls component and remove unnecessary code"
    },
    {
        "msg": "fix: update tests to reflect new changes to state",
        "diff": "diff --git a/src/domain/notes.js b/src/domain/notes.js @@ -4,7 +4,8 @@ const defaultState = {\nbyId:[],\nbyHash: {\n},\n- hoverStatus:false\n+ hoverStatus:false,\n+ hoveredNoteId:''\n};\n// ACTIONS\n@@ -12,6 +13,7 @@ const addNote = createAction(\"ADD_NOTE\");\nconst setNotes = createAction(\"SET_NOTE\");\nconst removeNote = createAction(\"REMOVE_NOTE\");\nconst toggleNotesHover = createAction(\"TOGGLE_NOTES_HOVER\");\n+const setNoteHovered = createAction(\"SET_HOVERED_NOTED\");\n// REDUCERS\nconst reducer = handleActions(\n@@ -53,6 +55,14 @@ const reducer = handleActions(\nhoverStatus: hoverStatus,\n}\n},\n+ [setNoteHovered]: (state, { payload }) => {\n+ const hoveredNoteId = payload;\n+ //alert(`${hoveredNoteId}`);\n+ return {\n+ ...state,\n+ hoveredNoteId: hoveredNoteId,\n+ }\n+ },\n},\ndefaultState\n);\n@@ -61,8 +71,9 @@ const reducer = handleActions(\nconst getNotesIndexedByHash = (state) => state.notes.byHash;\nconst getAllNotes = (state) => state.notes;\nconst getNotesHoverStatus = (state) => state.notes.hoverStatus;\n+const getNoteHoveredId = (state) => state.notes.hoveredNoteId;\nexport default reducer;\n-export { addNote,setNotes,removeNote, getNotesIndexedByHash, getAllNotes, toggleNotesHover, getNotesHoverStatus};\n\\ No newline at end of file\n+export { addNote,setNotes,removeNote, getNotesIndexedByHash, getAllNotes, toggleNotesHover, getNotesHoverStatus, setNoteHovered, getNoteHoveredId};\n\\ No newline at end of file\n",
        "date": "14.08.2019 04:54:46",
        "repo": "iqtlabs/crviz",
        "type": "fix",
        "chatgpt_zeroshot": "Add functionality to set and retrieve the hovered note ID in notes.js"
    },
    {
        "msg": "fix: clickable area for saving/deleting icon",
        "diff": "diff --git a/src/features/tooltip/Tooltip.js b/src/features/tooltip/Tooltip.js @@ -164,11 +164,11 @@ class TooltipControls extends React.Component {\n<b><h1><input className={tooltipStyle.inputStyle} type=\"text\" value={this.state.note.note.title} onChange={this.handleChangeTitle} placeholder=\"Title\"/></h1></b>\n<p><textarea className={tooltipStyle.inputStyle} type=\"text\" value={this.state.note.note.content} onChange={this.handleChangeContent} placeholder=\"Take a note...\"/></p>\n<div style={{textAlign:\"center\"}}>\n- <label className=\"button circular\">\n- <FontAwesomeIcon style={{margin:\"2.5px\"}} icon={faSave} onClick={this.saveNote}/>\n+ <label className=\"button circular\" onClick={this.saveNote}>\n+ <FontAwesomeIcon style={{margin:\"2.5px\"}} icon={faSave} />\n</label>\n- <label className=\"button circular\">\n- <FontAwesomeIcon style={{margin:\"2.5px\"}} icon={faTrashAlt} onClick={this.removeNote} />\n+ <label className=\"button circular\" onClick={this.removeNote}>\n+ <FontAwesomeIcon style={{margin:\"2.5px\"}} icon={faTrashAlt} />\n</label>\n</div>\n</div>\n",
        "date": "16.08.2019 09:19:34",
        "repo": "iqtlabs/crviz",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor save and remove note buttons in TooltipControls"
    },
    {
        "msg": "fix: make error the second argument should be error code",
        "diff": "diff --git a/index.js b/index.js @@ -295,9 +295,9 @@ Peer.prototype.addTrack = function (track, stream) {\nself._senderMap.set(track, submap)\nself._needsNegotiation()\n} else if (sender.removed) {\n- self.destroy(makeError('Track has been removed. You should enable/disable tracks that you want to re-add.'), 'ERR_SENDER_REMOVED')\n+ self.destroy(makeError('Track has been removed. You should enable/disable tracks that you want to re-add.', 'ERR_SENDER_REMOVED'))\n} else {\n- self.destroy(makeError('Track has already been added to that stream.'), 'ERR_SENDER_ALREADY_ADDED')\n+ self.destroy(makeError('Track has already been added to that stream.', 'ERR_SENDER_ALREADY_ADDED'))\n}\n}\n@@ -315,7 +315,7 @@ Peer.prototype.replaceTrack = function (oldTrack, newTrack, stream) {\nvar submap = self._senderMap.get(oldTrack)\nvar sender = submap ? submap.get(stream) : null\nif (!sender) {\n- self.destroy(makeError('Cannot replace track that was never added.'), 'ERR_TRACK_NOT_ADDED')\n+ self.destroy(makeError('Cannot replace track that was never added.', 'ERR_TRACK_NOT_ADDED'))\n}\nif (newTrack) self._senderMap.set(newTrack, submap)\n",
        "date": "19.07.2019 00:43:07",
        "repo": "feross/simple-peer",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor error messages in addTrack and replaceTrack methods"
    },
    {
        "msg": "fix(badge): updated badge tests",
        "diff": "diff --git a/src/components/Badge/badge.test.js b/src/components/Badge/badge.test.js import { shallowMount } from '@vue/test-utils'\n-import Badge from './index.vue'\n+import Badge from './'\n+import ThemeProvider from '../ThemeProvider'\n+import theme from '../../lib/theme'\ndescribe('===== Badge Component =====', () => {\n- let badge\ndescribe('Instance TEsts', () => {\nit('should be a Vue instance', () => {\n- badge = shallowMount(Badge)\n- expect(badge.isVueInstance()).toBeTruthy()\n+ const wrapper = shallowMount(ThemeProvider, {\n+ propsData: {\n+ theme,\n+ colorMode: 'light'\n+ },\n+ slots: {\n+ default: [Badge]\n+ }\n+ })\n+ expect(wrapper.isVueInstance()).toBeTruthy()\n+ expect(wrapper.find(Badge).vm.$theme()).toBe(theme)\n+ expect(wrapper.find(Badge).vm.$colorMode).toBe('light')\n})\n})\n})\n",
        "date": "09.11.2019 02:05:21",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor Badge component test to use ThemeProvider and update imports"
    },
    {
        "msg": "fix: dev rollup config",
        "diff": "diff --git a/packages/kiwi-core/rollup.dev.config.js b/packages/kiwi-core/rollup.dev.config.js @@ -66,15 +66,8 @@ const commons = {\n]\n}\n-// const bannerTxt = `/*! Chakra-Vui v${pkg.version} | MIT License | github.com/codebender828/kiwi-ui */`\n-\nconst baseFolder = './src/'\n-// const capitalize = (s) => {\n-// if (typeof s !== 'string') return ''\n-// return s.charAt(0).toUpperCase() + s.slice(1)\n-// }\n-\nconst components = fs.readdirSync(baseFolder)\n.filter((f) => fs.statSync(path.join(baseFolder, f)).isDirectory())\n@@ -86,30 +79,10 @@ const entries = {\n}, {})\n}\n-console.log('entries', entries)\n-\n/**\n* Configurations\n*/\nexport default () => {\n- // const mapComponent = (name) => {\n- // return [{\n- // input: baseFolder + `${name}/index.js`,\n- // external: externals,\n- // output: {\n- // format: 'umd',\n- // name: capitalize(name),\n- // file: `dist/components/${name}/index.js`,\n- // banner: bannerTxt,\n- // exports: 'named',\n- // globals: {\n- // vue: 'Vue'\n- // }\n- // },\n- // ...commons\n- // }]\n- // }\n-\nlet config = [{\ninput: entries,\noutput: {\n@@ -118,61 +91,6 @@ export default () => {\n},\n...commons\n}\n- // {\n- // input: entries,\n- // output: {\n- // dir: `dist/es/`,\n- // format: 'es'\n- // },\n- // ...commons\n- // },\n- // {\n- // input: entries,\n- // output: {\n- // dir: `dist/cjs/`,\n- // format: 'cjs',\n- // exports: 'named'\n- // },\n- // ...commons\n- // },\n- // {\n- // input: './src/index.js',\n- // output: {\n- // file: `dist/umd/index.js/`,\n- // name: capitalize('chakra'),\n- // format: 'umd',\n- // exports: 'named',\n- // banner: bannerTxt,\n- // globals: {\n- // vue: 'Vue'\n- // }\n- // },\n- // ...commons\n- // }\n- // {\n- // input: './src/index.js',\n- // output: {\n- // file: 'dist/chakra-vui.esm.js',\n- // name: capitalize('chakra'),\n- // format: 'esm',\n- // exports: 'named',\n- // banner: bannerTxt\n- // },\n- // ...commons\n- // }\n- // Individual components\n- // ...components.map((f) => mapComponent(f)).reduce((r, a) => r.concat(a), [])\n]\n- if (process.env.MINIFY === 'true') {\n- config = config.filter((c) => !!c.output.file)\n- config.forEach((c) => {\n- c.output.file = c.output.file.replace(/\\.js/g, '.min.js')\n- c.plugins.push(terser({\n- output: {\n- comments: '/^!/'\n- }\n- }))\n- })\n- }\nreturn config\n}\n",
        "date": "20.02.2020 03:22:31",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor rollup.dev.config.js and remove unnecessary code"
    },
    {
        "msg": "fix(accordion): filter empty slots",
        "diff": "diff --git a/packages/kiwi-core/src/Accordion/index.js b/packages/kiwi-core/src/Accordion/index.js @@ -56,7 +56,8 @@ const Accordion = {\n}\n},\nrender (h) {\n- const cloned = cloneVNodes(this.$slots.default, h)\n+ const children = this.$slots.default.filter(e => e.tag)\n+ const cloned = cloneVNodes(children, h)\nconst clones = cloned.map((vnode, index) => {\nconst clone = h(vnode.componentOptions.Ctor, {\n...vnode.data,\n",
        "date": "19.02.2020 22:41:02",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor Accordion component to filter out non-element nodes before cloning."
    },
    {
        "msg": "fix(popover): filter empty slots",
        "diff": "diff --git a/packages/kiwi-core/src/Popover/index.js b/packages/kiwi-core/src/Popover/index.js @@ -304,7 +304,7 @@ const PopoverTrigger = {\n},\nrender (h) {\nlet clone\n- const children = this.$slots.default\n+ const children = this.$slots.default.filter(e => e.tag)\nif (!children) return console.error('[Chakra-ui]: Popover Trigger expects at least one child')\nif (children.length && children.length > 1) return console.error('[Chakra-ui]: Popover Trigger can only have a single child element')\nconst cloned = cloneVNode(children[0], h)\n",
        "date": "19.02.2020 22:42:00",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor PopoverTrigger to only render child elements with a tag."
    },
    {
        "msg": "fix(buttongroup): filter empty slots",
        "diff": "diff --git a/packages/kiwi-core/src/ButtonGroup/index.js b/packages/kiwi-core/src/ButtonGroup/index.js @@ -16,7 +16,7 @@ const ButtonGroup = {\n...baseProps\n},\nrender (h) {\n- const children = this.$slots.default\n+ const children = this.$slots.default.filter(e => e.tag)\nconst count = children.length\nconst clones = children.map((node, index) => {\n",
        "date": "19.02.2020 22:46:54",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "chatgpt_zeroshot": "Filter out non-element nodes in ButtonGroup component's render method"
    },
    {
        "msg": "fix(menuoption): filter empty slots",
        "diff": "diff --git a/packages/kiwi-core/src/Menu/MenuOption.js b/packages/kiwi-core/src/Menu/MenuOption.js @@ -218,7 +218,7 @@ const MenuOptionGroup = {\n}\n}\n- const children = this.$slots.default\n+ const children = this.$slots.default.filter(e => e.tag)\nconst clonedChildNodes = children.map(vnode => {\nlet result\n",
        "date": "19.02.2020 22:47:36",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "chatgpt_zeroshot": "Filter out non-element nodes in MenuOption children"
    },
    {
        "msg": "fix(stack): filter empty slots",
        "diff": "diff --git a/packages/kiwi-core/src/Stack/index.js b/packages/kiwi-core/src/Stack/index.js @@ -53,7 +53,7 @@ const Stack = {\n_direction = 'column'\n}\n- const children = this.$slots.default\n+ const children = this.$slots.default.filter(e => e.tag)\nconst stackables = children.map((node, index) => {\nlet isLastChild = children.length === index + 1\nlet spacingProps = _isInline\n",
        "date": "19.02.2020 22:50:31",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "chatgpt_zeroshot": "Filter out non-element nodes in Stack component's children"
    },
    {
        "msg": "fix(breadcrumb): filter empty slots",
        "diff": "diff --git a/packages/kiwi-core/src/Breadcrumb/index.js b/packages/kiwi-core/src/Breadcrumb/index.js @@ -86,7 +86,7 @@ const BreadcrumbItem = {\n},\nsetup (props, context) {\nreturn () => {\n- const children = context.slots.default()\n+ const children = context.slots.default().filter(e => e.tag)\nconst clones = cloneVNodes(children, h).map((clone) => {\nif (clone.componentOptions.tag === BreadcrumbLink.name) {\nconst { propsData } = clone.componentOptions\n@@ -142,7 +142,7 @@ const Breadcrumb = {\n},\nsetup (props, context) {\nreturn () => {\n- const children = context.slots.default()\n+ const children = context.slots.default().filter(e => e.tag)\nconst clones = cloneVNodes(children, h)\n.map((node, index, array) => {\nconst { propsData } = node.componentOptions\n",
        "date": "19.02.2020 22:51:07",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor Breadcrumb component to filter out non-element nodes"
    },
    {
        "msg": "fix(avatargroup): filter empty slots",
        "diff": "diff --git a/packages/kiwi-core/src/AvatarGroup/index.js b/packages/kiwi-core/src/AvatarGroup/index.js @@ -58,7 +58,7 @@ const AvatarGroup = {\n},\nrender (h) {\n// Get the number of slot nodes inside AvatarGroup\n- const children = this.$slots.default\n+ const children = this.$slots.default.filter(e => e.tag)\nconst count = children.length\nconst max = parseInt(this.max, 10)\n",
        "date": "19.02.2020 22:52:20",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "chatgpt_zeroshot": "Filter out non-element nodes in AvatarGroup render function"
    },
    {
        "msg": "fix(inputgroup): filter empty slots",
        "diff": "diff --git a/packages/kiwi-core/src/InputGroup/index.js b/packages/kiwi-core/src/InputGroup/index.js @@ -26,7 +26,7 @@ const InputGroup = {\nlet pl = null\nlet pr = null\nconst height = inputSizes[this.size] && inputSizes[this.size]['height']\n- const children = this.$slots.default\n+ const children = this.$slots.default.filter(e => e.tag)\nconst clones = children\n.map((vnode) => {\nif (vnode.tag.includes(InputLeftElement.name)) {\n",
        "date": "19.02.2020 22:53:54",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "chatgpt_zeroshot": "Filter out non-element nodes in InputGroup component."
    },
    {
        "msg": "fix(tests): add eslint support for jest",
        "diff": "diff --git a/.eslintrc.js b/.eslintrc.js @@ -26,7 +26,8 @@ module.exports = {\noverrides: [\n{\nfiles: [\n- '**/__tests__/*.{j,t}s?(x)'\n+ '**/__tests__/*.{j,t}s?(x)',\n+ '**/tests/*.{j,t}s?(x)'\n],\nenv: {\njest: true\n",
        "date": "01.03.2020 02:07:00",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "chatgpt_zeroshot": "Add additional test file patterns to ESLint configuration"
    },
    {
        "msg": "fix(switch): add change action to story",
        "diff": "diff --git a/stories/46-Switch.stories.js b/stories/46-Switch.stories.js +import { action } from '@storybook/addon-actions'\nimport { storiesOf } from '@storybook/vue'\nimport { Box, Switch } from '../packages/kiwi-core/src'\n@@ -8,21 +9,22 @@ storiesOf('UI | Switch', module)\n<Box mb=\"3\">\n<Toggle\nsize=\"sm\"\n- @change=\"handleChange\"\n+ @change=\"action\"\ncolor=\"green\"\nmr=\"3\"\n/>\n<Toggle\nsize=\"md\"\n- @change=\"handleChange\"\n+ @change=\"action\"\ncolor=\"blue\"\nmr=\"3\"\n/>\n<Toggle\nsize=\"lg\"\n- @change=\"handleChange\"\n+ @change=\"action\"\ncolor=\"cyan\"\n/>\n</Box>\n- `\n+ `,\n+ methods: { action: action('@change(event)') }\n}))\n",
        "date": "01.03.2020 02:34:01",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor Switch component to use action method for change event handling"
    },
    {
        "msg": "fix(storybook): fix toast issue in storybook",
        "diff": "diff --git a/stories/10-Toast.stories.js b/stories/10-Toast.stories.js import { storiesOf } from '@storybook/vue'\nimport { Button } from '../packages/kiwi-core/src'\n+import { colorModeObserver } from '../packages/kiwi-core/src/utils/color-mode-observer'\n+\n+const watch = {\n+ $theme: {\n+ immediate: true,\n+ handler (theme) {\n+ colorModeObserver.theme = theme()\n+ }\n+ },\n+ $icons: {\n+ immediate: true,\n+ handler (icons) {\n+ colorModeObserver.icons = icons\n+ }\n+ }\n+}\nstoriesOf('UI | Toast', module)\n.add('Simple Toast', () => ({\ncomponents: { Button },\n+ watch,\ninject: ['$theme', '$icons'],\nmethods: {\nshowToast () {\n@@ -24,6 +41,7 @@ storiesOf('UI | Toast', module)\n}))\n.add('With status', () => ({\ncomponents: { Button },\n+ watch,\ninject: ['$theme', '$icons'],\nmethods: {\ninfoToast () {\n@@ -78,6 +96,7 @@ storiesOf('UI | Toast', module)\n}))\n.add('With variant', () => ({\ncomponents: { Button },\n+ watch,\ninject: ['$theme', '$icons'],\nmethods: {\nsuccessToast (variant = 'solid') {\n",
        "date": "03.03.2020 02:04:43",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "chatgpt_zeroshot": "Add color mode observer for theme and icons in Toast component."
    },
    {
        "msg": "fix: update storybook url",
        "diff": "diff --git a/.storybook/config.js b/.storybook/config.js @@ -77,7 +77,7 @@ addDecorator(() => ({\nfunction loadStories() {\n- const req = require.context('../packages/kiwi-core/src', true, /\\.stories\\.(js|mdx)$/);\n+ const req = require.context('../packages/chakra-ui-core/src', true, /\\.stories\\.(js|mdx)$/);\nreq.keys().forEach(filename => req(filename));\n}\n",
        "date": "14.03.2020 22:05:38",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "chatgpt_zeroshot": "Update storybook config to load stories from chakra-ui-core package instead of kiwi-core package"
    },
    {
        "msg": "fix(storybook): refactor progress story",
        "diff": "diff --git a/packages/chakra-ui-core/src/Progress/Progress.stories.js b/packages/chakra-ui-core/src/Progress/Progress.stories.js import { storiesOf } from '@storybook/vue'\n-import { CSSReset, Progress as KProgress, Stack } from '..'\n+import { CSSReset, Progress as KProgress, Stack, Box } from '..'\nstoriesOf('UI | Progress', module)\n- .add('Default Progress', () => ({\n- components: { CSSReset, KProgress },\n+ .addDecorator(story => ({\n+ components: { CSSReset, Box, story: story() },\ntemplate: `\n- <div>\n- <CSSReset />\n- <KProgress :value=\"80\" />\n- </div>\n- `\n+ <Box w=\"full\" maxWidth=\"400px\" mx=\"auto\" mt=\"8\" p=\"3\">\n+ <CSSReset></CSSReset>\n+ <story></story>\n+ </Box>`\n+ }))\n+\n+ .add('Default Progress', () => ({\n+ components: { KProgress },\n+ template: `<KProgress :value=\"80\" />`\n}))\n.add('With stripe', () => ({\n- components: { CSSReset, KProgress },\n- template: `\n- <div>\n- <CSSReset />\n- <KProgress hasStripe :value=\"64\" />\n- </div>\n- `\n+ components: { KProgress },\n+ template: `<KProgress hasStripe :value=\"64\" />`\n}))\n.add('With sizes', () => ({\n- components: { CSSReset, KProgress, Stack },\n+ components: { KProgress, Stack },\ntemplate: `\n- <div>\n- <CSSReset />\n<Stack :spacing=\"5\">\n<KProgress rounded=\"sm\" color=\"green\" size=\"sm\" />\n<KProgress color=\"green\" size=\"md\" />\n<KProgress color=\"green\" size=\"lg\" />\n<KProgress color=\"green\" height=\"32px\" />\n- </Stack>\n- </div>\n- `\n+ </Stack>`\n}))\n.add('With color', () => ({\n- components: { CSSReset, KProgress },\n- template: `\n- <div>\n- <CSSReset />\n- <KProgress color=\"pink\" hasStripe />\n- </div>\n- `\n+ components: { KProgress },\n+ template: `<KProgress color=\"pink\" hasStripe />`\n}))\n",
        "date": "15.03.2020 15:57:01",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor Progress stories to use Box component and addDecorator for styling. Update Default Progress story to use new structure."
    },
    {
        "msg": "fix(radio-button-group): clean RadioButtonGroup children",
        "diff": "diff --git a/packages/chakra-ui-core/src/RadioButtonGroup/index.js b/packages/chakra-ui-core/src/RadioButtonGroup/index.js import Box from '../Box'\nimport { baseProps } from '../config'\nimport { StringNumber, SNA } from '../config/props/props.types'\n-import { isDef, useId, cloneVNodeElement, forwardProps } from '../utils'\n+import { isDef, useId, cloneVNodeElement, forwardProps, cleanChildren } from '../utils'\nconst RadioButtonGroup = {\nname: 'RadioButtonGroup',\n@@ -43,7 +43,7 @@ const RadioButtonGroup = {\n}\n},\nmounted () {\n- const children = this.$slots.default\n+ const children = cleanChildren(this.$slots.default)\nthis.focusableValues = children.map(child => child.componentOptions.propsData.isDisabled === true\n? null\n: child.componentOptions.propsData.value)\n",
        "date": "15.03.2020 19:11:12",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "chatgpt_zeroshot": "Add cleanChildren function to clean up children in RadioButtonGroup component"
    },
    {
        "msg": "fix(radio): remove defaultchecked from attrs",
        "diff": "diff --git a/packages/chakra-ui-core/src/Radio/index.js b/packages/chakra-ui-core/src/Radio/index.js @@ -78,7 +78,6 @@ const Radio = {\nname: this.name,\nvalue: this.value,\n'aria-invalid': this.isInvalid,\n- defaultChecked: this.defaultIsChecked,\ndisabled: this.isDisabled,\n'aria-disabled': this.isDisabled\n},\n",
        "date": "16.03.2020 21:44:45",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "chatgpt_zeroshot": "Remove defaultIsChecked prop from Radio component"
    },
    {
        "msg": "fix(readme): changed to",
        "diff": "diff --git a/README.md b/README.md @@ -99,7 +99,7 @@ _In your `App.vue` file._\n</template>\n<script>\n- import { ThemeProvider, CSSReset } from '@chakra-ui/core'\n+ import { ThemeProvider, CSSReset } from '@chakra-ui/vue'\nexport default {\nname: 'App',\n@@ -130,7 +130,7 @@ If you'd like to toggle your app between dark and light mode, you can also wrap\n</template>\n<script>\n- import { ThemeProvider, CSSReset, Button } from '@chakra-ui/core'\n+ import { ThemeProvider, CSSReset, Button } from '@chakra-ui/vue'\nexport default {\nname: 'App',\n",
        "date": "17.03.2020 19:16:41",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "chatgpt_zeroshot": "Update Chakra UI import to use Vue version in App.vue"
    },
    {
        "msg": "fix(modal): add removeeventhandler for potential memory leak",
        "diff": "diff --git a/packages/chakra-ui-core/src/Modal/index.js b/packages/chakra-ui-core/src/Modal/index.js @@ -100,6 +100,12 @@ const Modal = {\n}\n})\n+ this.$watch('isOpen', () => {\n+ if (!this.isOpen) {\n+ document.removeEventListener('keydown', handler)\n+ }\n+ })\n+\nlet undoAriaHidden = null\nthis.$watch(vm => [vm.isOpen, vm.useInert], () => {\nlet mountNode = this.mountNode\n",
        "date": "17.03.2020 22:30:52",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "chatgpt_zeroshot": "Add event listener to remove keydown event when modal is closed"
    },
    {
        "msg": "fix(editable): fix blur event only call onSubmit",
        "diff": "diff --git a/packages/chakra-ui-core/src/Editable/index.js b/packages/chakra-ui-core/src/Editable/index.js @@ -252,7 +252,6 @@ const EditableInput = {\nonKeyDown,\nvalue,\nonSubmit,\n- onCancel,\nsubmitOnBlur,\nplaceholder,\nisDisabled\n@@ -274,7 +273,7 @@ const EditableInput = {\n},\nnativeOn: {\nblur: event => {\n- submitOnBlur ? onSubmit() : onCancel()\n+ submitOnBlur && onSubmit()\nthis.$emit('blur', event)\n},\nchange: onChange,\n",
        "date": "19.03.2020 22:03:28",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor EditableInput blur event handling to only submit on blur if submitOnBlur is true."
    },
    {
        "msg": "fix(editable): change event handler for native input",
        "diff": "diff --git a/packages/chakra-ui-core/src/Editable/index.js b/packages/chakra-ui-core/src/Editable/index.js @@ -276,7 +276,7 @@ const EditableInput = {\nsubmitOnBlur && onSubmit()\nthis.$emit('blur', event)\n},\n- change: onChange,\n+ input: onChange,\nkeydown: onKeyDown\n},\nattrs: {\n",
        "date": "21.03.2020 02:00:41",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor EditableInput event handler to use 'input' instead of 'change'"
    },
    {
        "msg": "fix(editable): fix aria-disabled typo",
        "diff": "diff --git a/packages/chakra-ui-core/src/Editable/index.js b/packages/chakra-ui-core/src/Editable/index.js @@ -282,7 +282,7 @@ const EditableInput = {\nattrs: {\nid: editableId,\ndisabled: isDisabled,\n- 'aria-diabled': isDisabled,\n+ 'aria-disabled': isDisabled,\nvalue,\nplaceholder\n}\n",
        "date": "21.03.2020 02:26:01",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "chatgpt_zeroshot": "Fix typo in aria-disabled attribute in EditableInput component"
    },
    {
        "msg": "fix: resolve Switch imports",
        "diff": "diff --git a/packages/chakra-ui-core/src/Switch/Switch.js b/packages/chakra-ui-core/src/Switch/Switch.js +import Box from '../Box'\n+import styleProps from '../config/props'\n+import { forwardProps } from '../utils'\n+import VisuallyHidden from '../VisuallyHidden'\n+import ControlBox from '../ControlBox'\n+\n+const switchSizes = {\n+ sm: {\n+ width: '1.375rem',\n+ height: '0.75rem'\n+ },\n+ md: {\n+ width: '1.875rem',\n+ height: '1rem'\n+ },\n+ lg: {\n+ width: '2.875rem',\n+ height: '1.5rem'\n+ }\n+}\n+\n+const Switch = {\n+ name: 'CSwitch',\n+ model: {\n+ prop: 'isChecked',\n+ event: 'change'\n+ },\n+ inject: ['$colorMode'],\n+ props: {\n+ ...styleProps,\n+ id: String,\n+ name: String,\n+ value: Boolean,\n+ _ariaLabel: String,\n+ _ariaLabelledBy: String,\n+ color: {\n+ type: String,\n+ default: 'blue'\n+ },\n+ defaultIsChecked: Boolean,\n+ isChecked: Boolean,\n+ size: {\n+ type: String,\n+ default: 'md'\n+ },\n+ isDisabled: Boolean,\n+ isInvalid: Boolean\n+ },\n+ computed: {\n+ colorMode () {\n+ return this.$colorMode()\n+ },\n+ _width () {\n+ return switchSizes[this.size] && switchSizes[this.size]['width']\n+ },\n+ _height () {\n+ return switchSizes[this.size] && switchSizes[this.size]['height']\n+ },\n+ styleProps () {\n+ return {\n+ rounded: 'full',\n+ justifyContent: 'flex-start',\n+ width: this._width,\n+ height: this._height,\n+ bg: this.colorMode === 'dark' ? 'whiteAlpha.400' : 'gray.300',\n+ boxSizing: 'content-box',\n+ p: '2px',\n+ _checked: {\n+ bg: `${this.color}.500`\n+ },\n+ _child: {\n+ transform: `translateX(0)`\n+ },\n+ _checkedAndChild: {\n+ transform: `translateX(calc(${this._width} - ${this._height}))`\n+ },\n+ _focus: {\n+ boxShadow: 'outline'\n+ },\n+ _hover: {\n+ cursor: 'pointer'\n+ },\n+ _checkedAndHover: {\n+ cursor: 'pointer'\n+ },\n+ _disabled: {\n+ opacity: 0.4,\n+ cursor: 'not-allowed'\n+ }\n+ }\n+ }\n+ },\n+ render (h) {\n+ return h(Box, {\n+ props: {\n+ ...forwardProps(this.$props),\n+ as: 'label',\n+ display: 'inline-block',\n+ verticalAlign: 'middle'\n+ }\n+ }, [\n+ h(VisuallyHidden, {\n+ props: {\n+ as: 'input'\n+ },\n+ attrs: {\n+ type: 'checkbox',\n+ 'aria-label': this._ariaLabel,\n+ 'aria-labelledby': this._ariaLabelledBy,\n+ id: this.id,\n+ name: this.name,\n+ value: this.value,\n+ 'aria-invalid': this.isInvalid,\n+ defaultChecked: this.defaultIsChecked,\n+ checked: this.isChecked,\n+ disabled: this.isDisabled\n+ },\n+ nativeOn: {\n+ change: (e) => this.$emit('change', !this.isChecked, e)\n+ }\n+ }),\n+ h(ControlBox, {\n+ props: this.styleProps\n+ }, [\n+ h(Box, {\n+ props: {\n+ bg: 'white',\n+ transition: 'transform 250ms',\n+ rounded: 'full',\n+ h: this._height,\n+ w: this._height\n+ }\n+ })\n+ ])\n+ ])\n+ }\n+}\n+\n+export default Switch\n",
        "date": "23.03.2020 17:12:26",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "chatgpt_zeroshot": "Add Switch component with customizable sizes and styles"
    },
    {
        "msg": "fix: made sure pages always starts from top when navigating",
        "diff": "diff --git a/packages/chakra-ui-docs/router.js b/packages/chakra-ui-docs/router.js @@ -34,6 +34,9 @@ export function createRouter () {\nconst router = new Router({\nmode: 'history',\n+ scrollBehavior (to, from, savedPosition) {\n+ return { x: 0, y: 0 }\n+ },\nroutes\n})\n",
        "date": "24.03.2020 23:06:06",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "chatgpt_zeroshot": "Add scroll behavior to reset position to top when navigating to a new route"
    },
    {
        "msg": "fix: added style rule for code element in li",
        "diff": "diff --git a/packages/chakra-ui-docs/layouts/default.vue b/packages/chakra-ui-docs/layouts/default.vue @@ -105,6 +105,9 @@ export default {\n},\n'table, p': {\n'code': this.code[colorMode]\n+ },\n+ li: {\n+ code: this.code[colorMode]\n}\n})(this.$chakra.theme))\n},\n",
        "date": "25.03.2020 00:18:55",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "chatgpt_zeroshot": "Add code styling to list items in default layout"
    },
    {
        "msg": "fix(avatar): add avatar alt overwrite",
        "diff": "diff --git a/packages/chakra-ui-core/src/CAvatar/CAvatar.js b/packages/chakra-ui-core/src/CAvatar/CAvatar.js * initials or fallback icon.\n*\n* @see Docs https://vue.chakra-ui.com/avatar\n+ * @ally Avatar The CAvatar component by default applies the `alt` attribute from the `src` prop. It also can be overwritten by passing the `alt` attribute\n* @see Source https://github.com/chakra-ui/chakra-ui-vue/blob/master/packages/chakra-ui-core/src/CAvatar/CAvatar.js\n*/\n-\nimport { baseProps } from '../config/props'\nimport { forwardProps, canUseDOM } from '../utils'\nimport useAvatarStyles, { avatarSizes } from './utils/avatar.styles'\n@@ -238,9 +238,9 @@ const CAvatar = {\nh: '100%',\nrounded: 'full',\nobjectFit: 'cover',\n- alt: this.name\n},\nattrs: {\n+ alt: this.$attrs.alt || this.name,\nsrc: this.src\n}\n})\n",
        "date": "05.04.2020 14:24:29",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "chatgpt_zeroshot": "Update CAvatar component to allow for custom alt attribute or fallback to name."
    },
    {
        "msg": "fix: applied changes suggested via code review",
        "diff": "diff --git a/packages/chakra-ui-docs/docs/tooltip.mdx b/packages/chakra-ui-docs/docs/tooltip.mdx @@ -31,7 +31,7 @@ code={`import { CTooltip } from \"@chakra-ui/vue\";\n## Usage\n-If the children of `CTooltip` is a string, we wrap with in a `span` with `tab-index` set to 0, to ensure it meets the accessibility requirements.\n+If the child of `CTooltip` is a string, we wrap it inside a span and set the `tab-index` attribute to `0` to ensure it meets the accessibility requirements.\n<LiveEditor>\n{`\n@@ -103,16 +103,21 @@ Using the `placement` prop you can adjust where your tooltip will be displayed.\n| `label` | `string` | | The label of the tooltip. |\n| `aria-label` | `string` | | An alternate label for screen readers. |\n| `placement` | `PopperJS.Placement` | `bottom` | Position the tooltip relative to the trigger element as well as surrounding elements. |\n-| `children` | `Vue.VNode` | | The `VNode` to be used as the trigger of the tooltip. |\n| `hasArrow` | `boolean` | | If `true` display an arrow tip on the tooltip. |\n| `showDelay` | `number` | | The delay in `ms` for the tooltip to show |\n| `hideDelay` | `number` | | The delay in `ms` for the tooltip to hide |\n| `closeOnClick` | `boolean` | | If `true` hide the tooltip, when the trigger is clicked. |\n| `shouldWrapChildren` | `boolean` | | If `true`, the tooltip will wrap the children in a `span` with `tabIndex=0` |\n+### Slots\n+\n+| Name | Description |\n+| ------- | --------------------------------------- |\n+| default | Vue.VNode to be rendered inside tooltip |\n+\n### Events\n-| Name | Type | Default | Description |\n-| -------- | ---------- | ------- | --------------------------------------- |\n-| `@open` | `function` | | Function called when the tooltip shows. |\n-| `@close` | `function` | | Function called when the tooltip hides. |\n+| Name | Payload | Description |\n+| -------- | ------- | --------------------------------------- |\n+| `@open` | - | Function called when the tooltip shows. |\n+| `@close` | - | Function called when the tooltip hides. |\n",
        "date": "08.04.2020 12:10:40",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor tooltip component to wrap child in span with tab-index attribute"
    },
    {
        "msg": "fix: docs deps",
        "diff": "diff --git a/packages/chakra-ui-docs/package.json b/packages/chakra-ui-docs/package.json \"dev\": \"nuxt\",\n\"build\": \"nuxt generate\",\n\"start\": \"nuxt start\",\n- \"docs:build\": \"nuxt build\",\n+ \"docs:build\": \"nuxt \",\n\"lint\": \"eslint --ext .js,.vue --ignore-path .gitignore .\"\n},\n\"lint-staged\": {\n\"@chakra-ui/vue\": \"^0.3.10\",\n\"@chakra-ui/theme-vue\": \"^0.2.3\",\n\"@fortawesome/free-brands-svg-icons\": \"^5.12.0\",\n- \"@fortawesome/free-solid-svg-icons\": \"^5.11.gi2\",\n+ \"@fortawesome/free-solid-svg-icons\": \"^5.11.2\",\n\"@mdx-js/vue-loader\": \"^1.5.7\",\n\"@nuxtjs/dotenv\": \"^1.4.0\",\n\"@nuxtjs/emotion\": \"^0.0.1\",\n",
        "date": "12.04.2020 19:09:37",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "chatgpt_zeroshot": "Fix typo in docs:build script and update fontawesome version"
    },
    {
        "msg": "fix(divider): fix border color",
        "diff": "diff --git a/packages/chakra-ui-core/src/CDivider/CDivider.js b/packages/chakra-ui-core/src/CDivider/CDivider.js @@ -24,7 +24,7 @@ const CDivider = {\nborder: 0,\nopacity: 0.6,\nborderColor: 'inherit',\n- ...forwardProps(this.$props),\n+ ...forwardProps(this.$props)\n},\nattrs: {\n'aria-orientation': this.orientation\n",
        "date": "16.04.2020 21:35:37",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "chatgpt_zeroshot": "Remove trailing comma in CDivider component props."
    },
    {
        "msg": "fix(tooltip): assign aria-describedby on mouseover",
        "diff": "diff --git a/packages/chakra-ui-core/src/CTooltip/CTooltip.js b/packages/chakra-ui-core/src/CTooltip/CTooltip.js @@ -188,6 +188,7 @@ const CTooltip = {\n},\nattrs: {\n...cloned.data.attrs,\n+ ...(this.isOpen && { 'aria-describedby': this.tooltipId }),\n'x-tooltip-anchor': `${this.tooltipId}`\n},\non: cloned.componentOptions.listeners,\n",
        "date": "17.04.2020 00:48:40",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "chatgpt_zeroshot": "Add aria-describedby attribute when tooltip is open"
    },
    {
        "msg": "fix(image): fix fallback source",
        "diff": "diff --git a/packages/chakra-ui-core/src/CImage/CImage.stories.js b/packages/chakra-ui-core/src/CImage/CImage.stories.js @@ -23,3 +23,12 @@ storiesOf('UI | Image', module)\n/>\n`\n}))\n+ .add('With fallback src', () => ({\n+ components: { CImage },\n+ template: `\n+ <CImage\n+ src=\"gibberish.png\"\n+ fallback-src=\"https://via.placeholder.com/150\"\n+ />\n+ `\n+ }))\n",
        "date": "24.04.2020 10:48:07",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "chatgpt_zeroshot": "Add story for CImage component with fallback src option"
    },
    {
        "msg": "fix: renamed Text to CText",
        "diff": "diff --git a/packages/chakra-ui-docs/docs/stat.mdx b/packages/chakra-ui-docs/docs/stat.mdx @@ -57,6 +57,6 @@ import {\n## Props\n-- StatLabel, StatHelpText, StatNumber composes [Text](/text) component\n+- StatLabel, StatHelpText, StatNumber composes [CText](/text) component\n- StatArrow composes [CIcon](/icon) component\n- Stat, StatGroup composes [CBox](/box) component\n",
        "date": "26.04.2020 21:30:53",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "chatgpt_zeroshot": "Update Stat component to compose CText instead of Text component"
    },
    {
        "msg": "fix: prefix components with 'C'",
        "diff": "diff --git a/packages/chakra-ui-docs/docs/stat.mdx b/packages/chakra-ui-docs/docs/stat.mdx @@ -57,6 +57,6 @@ import {\n## Props\n-- StatLabel, StatHelpText, StatNumber composes [CText](/text) component\n-- StatArrow composes [CIcon](/icon) component\n-- Stat, StatGroup composes [CBox](/box) component\n+- CStatLabel, CStatHelperText, CStatNumber composes [CText](/text) component\n+- CStatArrow composes [CIcon](/icon) component\n+- CStat, CStatGroup composes [CBox](/box) component\n",
        "date": "26.04.2020 21:37:05",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor Stat component names to be more descriptive"
    },
    {
        "msg": "fix: removed reference to ReactNode in Switch docs",
        "diff": "diff --git a/packages/chakra-ui-docs/docs/switch.mdx b/packages/chakra-ui-docs/docs/switch.mdx @@ -57,7 +57,7 @@ You can change the checked background color of the switch by passing the `color`\n| `color` | `string` | | The background color of the switch when checked. |\n| `name` | `string` | | The input name of the switch when used in a form. |\n| `value` | `string`, `boolean` | | The value of the switch. |\n-| `children` | `React.ReactNode` | | The children of the switch. |\n+| `children` | `Vue.VNode` | | The children of the switch. |\n| `aria-label` | `string` | | The aria-label of the switch for accessibility. |\n| `aria-labelledby` | `string` | | The aria-labelledby of the switch for accessibility. |\n| `isChecked` | `boolean` | | If `true`, set the switch to the checked state. |\n",
        "date": "02.05.2020 16:27:40",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "chatgpt_zeroshot": "Update switch component to use Vue.VNode for children prop"
    },
    {
        "msg": "fix(switch.mdx): added a slots table",
        "diff": "diff --git a/packages/chakra-ui-docs/docs/switch.mdx b/packages/chakra-ui-docs/docs/switch.mdx @@ -57,10 +57,15 @@ You can change the checked background color of the switch by passing the `color`\n| `color` | `string` | | The background color of the switch when checked. |\n| `name` | `string` | | The input name of the switch when used in a form. |\n| `value` | `string`, `boolean` | | The value of the switch. |\n-| `children` | `Vue.VNode` | | The children of the switch. |\n| `aria-label` | `string` | | The aria-label of the switch for accessibility. |\n| `aria-labelledby` | `string` | | The aria-labelledby of the switch for accessibility. |\n| `isChecked` | `boolean` | | If `true`, set the switch to the checked state. |\n| `defaultIsChecked` | `boolean` | | If `true`, the checkbox will be initially checked. |\n| `isDisabled` | `boolean` | | If `true`, set the disabled to the invalid state. |\n| `isInvalid` | `boolean` | | If `true`, set the switch to the invalid state. |\n+\n+## Slots\n+\n+| Name | Description |\n+| ------- | ---------------------------------------- |\n+| default | The children of the `CSwitch` component. |\n",
        "date": "02.05.2020 21:52:30",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "chatgpt_zeroshot": "Add slot documentation for CSwitch component"
    },
    {
        "msg": "fix(text.mdx): removed duplicate titles",
        "diff": "diff --git a/packages/chakra-ui-docs/docs/text.mdx b/packages/chakra-ui-docs/docs/text.mdx @@ -96,8 +96,6 @@ You can change the entire style of the text via props. For example, to change th\nText composes the [CBox](/box) component, so you can pass all Box style props.\n-## Slot\n-\n## Slots\n| Name | Description |\n",
        "date": "03.05.2020 18:36:20",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "chatgpt_zeroshot": "Remove unnecessary heading in text.mdx"
    },
    {
        "msg": "fix(tabs.mdx): prefixed component names with C and moved",
        "diff": "diff --git a/packages/chakra-ui-docs/docs/tabs.mdx b/packages/chakra-ui-docs/docs/tabs.mdx @@ -22,10 +22,10 @@ import { CTabs, CTabList, CTabPanels, CTab, CTabPanel } from '@chakra-ui/vue'\n## Usage\n-You can render any element within `Tabs`, but `TabList` should only have `Tab`\n-as children, and `TabPanels` should have `TabPanel` as children.\n+You can render any element within `CTabs`, but `CTabList` should only have `CTab`\n+as children, and `CTabPanels` should have `CTabPanel` as children.\n-Tabs expects `TabList` and `TabPanels` as children. The order doesn't matter,\n+Tabs expects `CTabList` and `CTabPanels` as children. The order doesn't matter,\nyou can have tabs at the top, at the bottom, or both.\n```vue live=true\n@@ -243,10 +243,10 @@ Stretch the tab list to fit the container by passing `isFitted` prop.\n## Manually Activated Tabs\n-By default, `Tabs` are activated automatically. This means when you use the\n+By default, `CTabs` are activated automatically. This means when you use the\narrow keys to change tabs, the tab is activated and focused.\n-> The content of a `TabPanel` should ideally be preloaded. However, if switching\n+> The content of a `CTabPanel` should ideally be preloaded. However, if switching\n> to a tab panel causes a network request and possibly a page refresh, there\n> might be some notable latency and this might affect the experience for\n> keyboard and screen reader users.\n@@ -311,7 +311,6 @@ Tabs composes `Box` so you call pass all `Box` related props.\n| Name | Type | Default | Description |\n| -------------- | --------------------------------------------------------------------------------- | ------------ | ------------------------------------------------------------------------------------------------------------------------------- |\n-| `onChange` | `(index: number) => void` | | The callback to update the active tab index. |\n| `index` | `number` | | The controlled index of the tabs. |\n| `defaultIndex` | `number` | | The index of the initial active tab. |\n| `isManual` | `boolean` | | If `true`, keyboard navigation changes focus between tabs but doens't activate it. User will have to press `Enter` to active it |\n@@ -321,6 +320,12 @@ Tabs composes `Box` so you call pass all `Box` related props.\n| `orientation` | `horizontal`, `vertical` | `horizontal` | The orientation of the tabs |\n| `isFitted` | `boolean` | | If `true`, the tabs will stretch to fill the available space |\n+### Tabs Events\n+\n+| Name | Description |\n+| ---------- | ------------------------ |\n+| `onChange` | Emits the @change event. |\n+\n### Tabs Slot\n| Name | Description |\n",
        "date": "06.05.2020 07:10:54",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor Tabs component to use CTabs, CTabList, and CTabPanels for consistency. Add onChange event to Tabs component."
    },
    {
        "msg": "fix: added a better description for the event table",
        "diff": "diff --git a/packages/chakra-ui-docs/docs/tabs.mdx b/packages/chakra-ui-docs/docs/tabs.mdx @@ -323,8 +323,8 @@ Tabs composes `Box` so you call pass all `Box` related props.\n### Tabs Events\n| Name | Description |\n-| ---------- | ------------------------ |\n-| `onChange` | Emits the @change event. |\n+| --------- | ------------------------------------------ |\n+| `@change` | Event emitted when the active tab changes. |\n### Tabs Slot\n",
        "date": "06.05.2020 16:37:00",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor Tabs Events section in tabs.mdx to clarify the event emitted when the active tab changes."
    },
    {
        "msg": "fix(popper): checks for arrow",
        "diff": "diff --git a/packages/chakra-ui-core/src/CPopper/CPopper.js b/packages/chakra-ui-core/src/CPopper/CPopper.js @@ -174,8 +174,10 @@ const CPopper = {\n.then(() => {\nif (this.hasArrow) {\nconst arrow = this.reference.querySelector(['[data-popper-arrow]'])\n+ if (arrow) {\narrow.style.transform += 'rotate(45deg)'\n}\n+ }\n})\n} else {\nthis.popper = createPopper(this.anchor, this.reference, {\n@@ -199,8 +201,10 @@ const CPopper = {\n.then(() => {\nif (this.hasArrow) {\nconst arrow = this.reference.querySelector(['[data-popper-arrow]'])\n+ if (arrow) {\narrow.style.transform += 'rotate(45deg)'\n}\n+ }\n})\n}\n},\n@@ -300,14 +304,12 @@ const CPopperArrow = {\nattrs: {\n'x-arrow': true,\n'data-popper-arrow': true,\n- role: 'presentation'\n+ role: 'presentation',\n+ 'data-chakra-component': 'CPopperArrow'\n},\nprops: {\nbg: 'inherit',\n...forwardProps(this.$props)\n- },\n- on: {\n- click: (e) => this.$emit('cheese', e)\n}\n})\n}\n",
        "date": "07.05.2020 11:06:20",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "chatgpt_zeroshot": "Add rotation to arrow in CPopper component and add data-chakra-component attribute to CPopperArrow component"
    },
    {
        "msg": "fix: storybook build",
        "diff": "diff --git a/.storybook/components/Canvas.vue b/.storybook/components/Canvas.vue @@ -47,7 +47,7 @@ import {\nCButton,\nCBox,\nCIconButton,\n- CColorModeProvider } from '../../packages/chakra-ui-core/dist/esm'\n+ CColorModeProvider } from '../../packages/chakra-ui-core/src'\nexport default {\nname: 'Canvas',\ncomponents: {\n",
        "date": "08.05.2020 18:06:19",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor import path for CColorModeProvider in Canvas.vue"
    },
    {
        "msg": "fix(popover): add dynamic compoennt ids",
        "diff": "diff --git a/packages/chakra-ui-core/src/CPopover/CPopover.js b/packages/chakra-ui-core/src/CPopover/CPopover.js @@ -15,10 +15,7 @@ const CPopover = {\n}\n},\nprops: {\n- id: {\n- type: String,\n- default: `popover-id-${useId()}`\n- },\n+ id: String,\ndefaultIsOpen: Boolean,\nisOpen: Boolean,\nreturnFocusOnClose: {\n@@ -55,7 +52,7 @@ const CPopover = {\ntriggerNode: this.triggerNode,\ncontentNode: this.contentNode,\nsetTriggerNode: this.setTriggerNode,\n- popoverId: this.id,\n+ popoverId: this.computedId,\ntrigger: this.trigger,\nisHovering: this.isHovering,\nhandleBlur: this.handleBlur,\n@@ -83,10 +80,13 @@ const CPopover = {\n: this.getNode(this.initialFocusRef)\n},\nheaderId () {\n- return `${this.id}-header`\n+ return `${this.computedId}-header`\n},\nbodyId () {\n- return `${this.id}-body`\n+ return `${this.computedId}-body`\n+ },\n+ computedId () {\n+ return this.id || `popover-id-${useId()}`\n}\n},\ndata () {\n",
        "date": "08.05.2020 20:49:34",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor CPopover component to use computedId for popoverId and default id value."
    },
    {
        "msg": "fix(docs-ccolapse): fix typo",
        "diff": "diff --git a/packages/chakra-ui-core/src/CCollapse/CCollapse.stories.js b/packages/chakra-ui-core/src/CCollapse/CCollapse.stories.js @@ -20,7 +20,7 @@ storiesOf('UI | Collapse', module)\n}\n}\n}))\n- .add('Changing the startingHeigh', () => ({\n+ .add('Changing the startingHeight', () => ({\ncomponents: { CButton, CCollapse, CBox },\ntemplate: `\n<div>\n",
        "date": "08.05.2020 14:56:46",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "chatgpt_zeroshot": "Fix typo in startingHeight in CCollapse.stories.js"
    },
    {
        "msg": "fix(docs): add full stop",
        "diff": "diff --git a/packages/chakra-ui-docs/docs/collapse.mdx b/packages/chakra-ui-docs/docs/collapse.mdx @@ -87,7 +87,7 @@ This component doesn't have any custom props.\n| duration | `number` | The animation duration as it expands |\n| startingHeight | `number` | The height you want the content in it's collapsed state. Set to `0` by default |\n| endingHeight | `number` | The height you want the content in it's expanded state. Set to `auto` by default |\n-| easing | `string` | Add easing function for entering and leaving state. Accepts easing props from [animejs](https://animejs.com/documentation/#linearEasing) Set to `easeInOutSine` by default. |\n+| easing | `string` | Add easing function for entering and leaving state. Accepts easing props from [animejs](https://animejs.com/documentation/#linearEasing). Set to `easeInOutSine` by default. |\n## Events\n",
        "date": "08.05.2020 15:30:46",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "chatgpt_zeroshot": "Update easing prop in Collapse component to include link to animejs documentation."
    },
    {
        "msg": "fix: use env context",
        "diff": "diff --git a/packages/chakra-ui-docs/plugins/analytics.js b/packages/chakra-ui-docs/plugins/analytics.js import Vue from 'vue'\nimport VueMultianalytics from 'vue-multianalytics/dist/vue-multianalytics'\n+export default ({ env, router }) => {\nlet mixpanelConfig = {\n- token: process.env.MIXPANEL_TOKEN\n+ token: env.MIXPANEL_TOKEN\n}\n-export default ({ app, router }) => {\ntry {\nVue.use(VueMultianalytics, {\nmodules: {\n",
        "date": "09.05.2020 23:10:59",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor analytics.js to use environment variables for Mixpanel token"
    },
    {
        "msg": "fix: colorpalette import fix",
        "diff": "diff --git a/packages/chakra-ui-docs/components/ColorPalette.js b/packages/chakra-ui-docs/components/ColorPalette.js -import { CBox, CFlex, CGrid } from '@chakra-ui/vue'\n-import { baseProps } from '@chakra-ui/vue/dist/cjs/index-5433bb49'\n+import { CBox, CFlex, CGrid, boxProps } from '@chakra-ui/vue'\nexport const ColorPalette = {\nprops: {\n- ...baseProps,\n+ ...boxProps,\ncolor: String,\nname: String\n},\n",
        "date": "12.05.2020 20:36:48",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor ColorPalette component props to use boxProps instead of baseProps"
    },
    {
        "msg": "fix(cnumberinput): fix number-input ids created at build time",
        "diff": "diff --git a/packages/chakra-ui-core/src/CNumberInput/CNumberInput.js b/packages/chakra-ui-core/src/CNumberInput/CNumberInput.js @@ -58,8 +58,7 @@ const CNumberInput = {\ndefault: 'md'\n},\ninputId: {\n- type: String,\n- default: `number-input-${useId()}`\n+ type: String\n}\n},\nprovide () {\n",
        "date": "12.05.2020 20:40:13",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "chatgpt_zeroshot": "Remove default value for inputId in CNumberInput"
    },
    {
        "msg": "fix(with-nuxt.mdx): fix typo in with-nuxt.mdx",
        "diff": "diff --git a/yarn.lock b/yarn.lock resolved \"https://registry.yarnpkg.com/@bcoe/v8-coverage/-/v8-coverage-0.2.3.tgz#75a2e8b51cb758a7553d6804a5932d7aace75c39\"\nintegrity sha512-0hYQ8SB4Db5zvZB4axdMHGwEaQjkZzFjQiN9LVYvIFB2nSUHW9tYpxWriPrWDASIxiaXax83REcLxuSdnGPZtw==\n-\"@chakra-ui/vue@^0.4.1\":\n- version \"0.4.2\"\n- resolved \"https://registry.yarnpkg.com/@chakra-ui/vue/-/vue-0.4.2.tgz#5a6dc8ab19cad1b59039632037e6a32360378a71\"\n- integrity sha512-wQ53rlbrG4+AsyAUFuaboF2R3kHfwHFD9jUqL51UsVkc5cUecweyXvavNF/YRMBkAI1ni6BzPM/3q/9LqqHE7w==\n- dependencies:\n- \"@popperjs/core\" \"^2.4.0\"\n- \"@styled-system/css\" \"^5.0.23\"\n- animejs \"^3.1.0\"\n- aria-hidden \"^1.1.1\"\n- breadstick \"^0.2.14\"\n- color \"^3.1.2\"\n- focus-trap \"^5.1.0\"\n- focus-trap-vue \"^0.0.4\"\n- lodash-es \"^4.17.15\"\n- portal-vue \"^2.1.6\"\n- styled-system \"^5.1.2\"\n- v-scroll-lock \"^1.1.0\"\n-\n\"@cnakazawa/watch@^1.0.3\":\nversion \"1.0.4\"\nresolved \"https://registry.yarnpkg.com/@cnakazawa/watch/-/watch-1.0.4.tgz#f864ae85004d0fcab6f50be9141c4da368d1656a\"\n@@ -20411,11 +20393,6 @@ vue-meta@^2.3.3:\ndependencies:\ndeepmerge \"^4.2.2\"\n-vue-multianalytics@^1.11.7:\n- version \"1.11.7\"\n- resolved \"https://registry.yarnpkg.com/vue-multianalytics/-/vue-multianalytics-1.11.7.tgz#e3d10c6952935610317729990f5f604774c86796\"\n- integrity sha512-VSVFSlCwbDTloodDainKUjKArebgwpPN77I8Bi6FhYq9fvBQYX5Qkur4zuLUbB8M3EkJLjyWTz4jztrarZ6pMQ==\n-\nvue-no-ssr@^1.1.1:\nversion \"1.1.1\"\nresolved \"https://registry.yarnpkg.com/vue-no-ssr/-/vue-no-ssr-1.1.1.tgz#875f3be6fb0ae41568a837f3ac1a80eaa137b998\"\n",
        "date": "14.05.2020 12:40:16",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "chatgpt_zeroshot": "Remove outdated dependencies and update vue-multianalytics to version 1.11.7"
    },
    {
        "msg": "fix(alert-dialog): fix baseprops",
        "diff": "diff --git a/packages/chakra-ui-core/src/CAlertDialog/CAlertDialog.js b/packages/chakra-ui-core/src/CAlertDialog/CAlertDialog.js * @see WAI-ARIA https://www.w3.org/TR/wai-aria-practices-1.2/#alertdialog\n*/\n-import baseProps from '../config/props'\n+import { baseProps } from '../config/props'\nimport { forwardProps, HTMLElement } from '../utils'\nimport {\n",
        "date": "24.05.2020 00:09:35",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "chatgpt_zeroshot": "Fix import statement for baseProps in CAlertDialog.js"
    },
    {
        "msg": "fix: fix linting script",
        "diff": "diff --git a/package.json b/package.json \"build:dev\": \"yarn workspace @chakra-ui/vue run rollup --config rollup.dev.config.js\",\n\"build\": \"yarn workspace @chakra-ui/vue build\",\n\"dev\": \"yarn workspace @chakra-ui/vue dev\",\n- \"lint\": \"vue-cli-service lint\",\n+ \"lint\": \"vue-cli-service lint packages/chakra-ui-core\",\n\"lerna:build\": \"lerna run build\",\n\"test:core\": \"jest\",\n\"test:module\": \"yarn workspace @chakra-ui/nuxt test\",\n",
        "date": "24.05.2020 00:16:17",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "chatgpt_zeroshot": "Update lint script to target specific package in Chakra UI Core."
    },
    {
        "msg": "fix: remive only from button tests",
        "diff": "diff --git a/packages/chakra-ui-core/src/CButton/tests/CButton.test.js b/packages/chakra-ui-core/src/CButton/tests/CButton.test.js @@ -60,7 +60,7 @@ it('should display a disabled button', () => {\nexpect(getByText('Button')).toHaveAttribute('disabled')\n})\n-it.only('should emit \"click\" event', () => {\n+it('should emit \"click\" event', () => {\nconst handleClick = jest.fn()\nconst { getByTestId } = renderComponent({\ntemplate: '<CButton @click=\"handleClick\" data-testid=\"btn\"></CButton>',\n",
        "date": "04.07.2020 12:48:40",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "chatgpt_zeroshot": "fix: Removed .only from test case to allow all tests to run"
    },
    {
        "msg": "fix(select): stacke example typp",
        "diff": "diff --git a/packages/chakra-ui-docs/pages/select.mdx b/packages/chakra-ui-docs/pages/select.mdx @@ -51,7 +51,7 @@ There are three sizes of select : large (48px), default (40px) and small (32px).\n<c-select placeholder=\"large size\" size=\"lg\" />\n<c-select placeholder=\"default size\" size=\"md\" />\n<c-select placeholder=\"small size\" size=\"sm\" />\n-</c-sack>\n+</c-stack>\n```\n### Changing the appearance of the Select\n",
        "date": "17.07.2020 02:19:41",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "chatgpt_zeroshot": "Fix typo and change the appearance of the Select component"
    },
    {
        "msg": "fix(docs): icon darkmode font color",
        "diff": "diff --git a/packages/chakra-ui-docs/pages/icon.mdx b/packages/chakra-ui-docs/pages/icon.mdx @@ -56,7 +56,7 @@ Here's a list of the default icons Chakra UI comes with and their respective\nalign=\"center\"\njustify=\"center\"\n>\n- <CIcon color=\"gray.700\" name={icon} size=\"1.25em\" />\n+ <CIcon color=\"currentColor\" name={icon} size=\"1.25em\" />\n<CText mt={2} fontSize=\"sm\" textAlign=\"center\">\n{icon}\n</CText>\n",
        "date": "17.07.2020 02:31:43",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor icon color to use currentColor variable"
    },
    {
        "msg": "fix: list item props forwarding",
        "diff": "diff --git a/packages/chakra-ui-core/src/CList/CList.js b/packages/chakra-ui-core/src/CList/CList.js import { cleanChildren, isDef, cloneVNodeElement, createStyledAttrsMixin } from '../utils'\nimport { SNA } from '../config/props/props.types'\n-import CPseudoBox from '../CPseudoBox'\nimport CIcon from '../CIcon'\n/**\n@@ -23,7 +22,7 @@ import CIcon from '../CIcon'\n*/\nconst CList = {\nname: 'CList',\n- mixins: [createStyledAttrsMixin('CList')],\n+ mixins: [createStyledAttrsMixin('CList', true)],\nprops: {\nstyleType: {\ntype: String,\n@@ -57,11 +56,12 @@ const CList = {\nreturn vnode\n}\n- return cloneVNodeElement(vnode, {\n- props: {\n- spacing: this.spacing\n+ const clone = cloneVNodeElement(vnode, {\n+ attrs: {\n+ mb: this.spacing\n}\n}, h)\n+ return clone\n})\nreturn h('ul', {\n@@ -82,23 +82,22 @@ const CList = {\n*/\nconst CListItem = {\nname: 'CListItem',\n- functional: true,\n+ mixins: [createStyledAttrsMixin('CListItem')],\nprops: {\nspacing: SNA\n},\n- render (h, { props, slots, data, ...rest }) {\n- return h(CPseudoBox, {\n- ...rest,\n- props: {\n- as: 'li',\n- ...props\n- },\n- attrs: {\n- mb: props.spacing,\n- ...data.attrs,\n- 'data-chakra-component': 'CListItem'\n+ computed: {\n+ componentStyles () {\n+ return {\n+ mb: this.spacing\n+ }\n}\n- }, slots().default)\n+ },\n+ render (h) {\n+ return h('li', {\n+ class: [this.className],\n+ attrs: this.computedAttrs\n+ }, this.$slots.default)\n}\n}\n",
        "date": "17.07.2020 03:04:46",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor CList and CListItem components to use createStyledAttrsMixin and update spacing attribute handling."
    },
    {
        "msg": "fix: correcting broken storybook import path",
        "diff": "diff --git a/packages/chakra-ui-core/src/utils/playground.stories.js b/packages/chakra-ui-core/src/utils/playground.stories.js /* eslint import/namespace: [2, { allowComputed: true }] */\nimport { storiesOf } from '@storybook/vue'\nimport Vue from 'vue'\n-import { MDXCodeBlock } from '../../../../website/components/code-block'\n+import { MDXCodeBlock } from '../../../../website/components/code'\nimport * as ChakraComponents from '..'\nObject.keys(ChakraComponents).forEach((key) => {\n",
        "date": "16.10.2020 00:55:56",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "chatgpt_zeroshot": "Fix import path for MDXCodeBlock in playground.stories.js"
    },
    {
        "msg": "fix(nuxt): fix params for pasePackIcons function",
        "diff": "diff --git a/packages/chakra-ui-nuxt/lib/module.js b/packages/chakra-ui-nuxt/lib/module.js @@ -20,7 +20,7 @@ module.exports = function (moduleOptions) {\n// Resolve icons\nlet packIcons = {}\nif (options.icons && options.icons.iconPack) {\n- packIcons = parsePackIcons(options.icons.iconPack, options.icons.iconSet)\n+ packIcons = parsePackIcons(options.icons.iconSet)\n}\n// Transpile lodash-es\n",
        "date": "05.01.2021 11:52:11",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor icon pack parsing in module.js"
    },
    {
        "msg": "fix: make CPopper's modifiers to be correctly merged",
        "diff": "diff --git a/packages/chakra-ui-core/src/CPopper/CPopper.js b/packages/chakra-ui-core/src/CPopper/CPopper.js @@ -42,6 +42,27 @@ function flipPlacement (placement) {\n}\n}\n+/**\n+ * Call _.merge() for each item of `object` array with the corresponding\n+ * item of `source` array\n+ * @param {*} object The destination Modifiers array.\n+ * @param {*} source The source array.\n+ * @returns Returns merged `array`\n+ */\n+function mergeModifiers (object, source) {\n+ if (!Array.isArray(object)) throw new Error('`object` must be an array')\n+\n+ const _source = Array.isArray(source) ? source : [source]\n+\n+ object.forEach((o) => {\n+ const { name } = o\n+ const _s = _source.find(s => s.name === name)\n+ if (_s) merge(o, _s)\n+ })\n+\n+ return object\n+}\n+\n/**\n* CPopper component\n*\n@@ -153,7 +174,7 @@ const CPopper = {\nreturn ref\n},\ncomputedModifiers () {\n- return merge([\n+ return mergeModifiers([\nthis.usePortal && {\nname: 'preventOverflow',\noptions: {\n",
        "date": "29.04.2021 16:27:05",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor merge function in CPopper component"
    },
    {
        "msg": "fix: update CBox storybook",
        "diff": "diff --git a/packages/chakra-ui-core/src/CBox/CBox.stories.js b/packages/chakra-ui-core/src/CBox/CBox.stories.js import { storiesOf } from '@storybook/vue'\n-import { CBox } from '..'\n+import CBox from '../CBox'\nstoriesOf('UI | Box', module)\n.add('Box', () => ({\n@@ -28,13 +28,26 @@ storiesOf('UI | Box', module)\ntemplate: `\n<div>\n<CBox\n+ position=\"relative\"\nw=\"300px\"\nh=\"200px\"\n+ overflow=\"hidden\"\n+ rounded=\"20px\"\n+ >\n+ <CBox\n+ as=\"img\"\nfont-family=\"body\"\nobjectFit=\"contain\"\n- bgImg=\"url(https://lh3.googleusercontent.com/proxy/vG0O53R9-vPA2WpuC5lXWCHIVuIQiQ1R7bpQ1UcDsHnHVlz2BJMeSeJx1I1n4huq_SeB39iegxgQl1zXcnNqpq2IJfCgQwwWXpdRG9pNdA)\"\n- >\n- <CBox h=\"full\" bg=\"red.200\" :w=\"1/2\" />\n+ src=\"https://images.unsplash.com/photo-1600002415506-dd06090d3480?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1650&q=80\"\n+ />\n+ <CBox px=\"5\" display=\"flex\" flex-direction=\"column\" justify-content=\"center\" py=\"3\" h=\"full\" pos=\"absolute\" top=\"0\" left=\"0\" bg=\"pink.200\" w=\"50%\">\n+ <CBox as=\"h1\" font-size=\"xl\" font-weight=\"bold\">\n+ Tempations\n+ </CBox>\n+ <CBox as=\"p\" font-size=\"md\">\n+ Spacial cakes for special moments.\n+ </CBox>\n+ </CBox>\n</CBox>\n</div>\n`\n",
        "date": "12.06.2021 10:38:15",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "chatgpt_zeroshot": "Add position, overflow, and styling to CBox component in Box story"
    },
    {
        "msg": "fix: add an unstyled variant to the c-button validators",
        "diff": "diff --git a/packages/chakra-ui-core/src/CButton/utils/button.props.js b/packages/chakra-ui-core/src/CButton/utils/button.props.js @@ -12,7 +12,7 @@ export const buttonProps = {\ntype: String,\ndefault: 'solid',\nvalidator: value =>\n- value.match(/^(solid|outline|ghost|flat|link)$/)\n+ value.match(/^(solid|outline|ghost|flat|link|unstyled)$/)\n},\nvariantColor: {\ntype: [String, Array],\n",
        "date": "12.07.2021 22:49:19",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "chatgpt_zeroshot": "Add 'unstyled' as a valid button variant in buttonProps"
    },
    {
        "msg": "fix(menu): update MenuOption defaultValue prop to inner value",
        "diff": "diff --git a/packages/chakra-ui-core/src/CMenu/CMenuOption.js b/packages/chakra-ui-core/src/CMenu/CMenuOption.js @@ -176,11 +176,11 @@ const CMenuOptionGroup = {\ntype: [String, Number],\ndefault: null\n},\n- defaultValue: [String, Number]\n+ defaultValue: [String, Number, Array]\n},\ndata () {\nreturn {\n- innerValue: []\n+ innerValue: this.defaultValue || []\n}\n},\ncomputed: {\n",
        "date": "20.07.2021 01:44:19",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "chatgpt_zeroshot": "Update defaultValue prop in CMenuOptionGroup to accept Array type"
    },
    {
        "msg": "fix(theme): fix lint",
        "diff": "diff --git a/packages/chakra-ui-theme/src/theme/index.js b/packages/chakra-ui-theme/src/theme/index.js @@ -12,8 +12,8 @@ const space = baseSizes\nconst config = {\nuseSystemColorMode: false,\n- initialColorMode: \"light\",\n- cssVarPrefix: \"chakra\",\n+ initialColorMode: 'light',\n+ cssVarPrefix: 'chakra'\n}\nconst theme = {\n",
        "date": "19.09.2021 13:40:14",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "chatgpt_zeroshot": "Fix initialColorMode and cssVarPrefix values in theme config"
    },
    {
        "msg": "fix(textarea): add storybook example with event listener",
        "diff": "diff --git a/packages/chakra-ui-core/src/CTextarea/CTextarea.stories.js b/packages/chakra-ui-core/src/CTextarea/CTextarea.stories.js @@ -2,7 +2,8 @@ import { storiesOf } from '@storybook/vue'\nimport { action } from '@storybook/addon-actions'\nimport { CBox, CTextarea } from '..'\n-storiesOf('UI | Textarea', module).add('Basic Usage', () => ({\n+storiesOf('UI | Textarea', module)\n+ .add('Basic Usage', () => ({\ncomponents: { CBox, CTextarea },\ntemplate: `\n<CBox w=\"300px\">\n@@ -26,3 +27,31 @@ storiesOf('UI | Textarea', module).add('Basic Usage', () => ({\naction: action()\n}\n}))\n+ .add('Basic Usage with Event', () => ({\n+ components: { CBox, CTextarea },\n+ template: `\n+ <CBox w=\"300px\">\n+ <CTextarea\n+ v-model=\"textareaContent\"\n+ maxWidth=\"sm\"\n+ mx=\"auto\"\n+ mt=\"2\"\n+ placeholder=\"Here is a sample placeholder\"\n+ size=\"md\"\n+ :value=\"textareaContent\"\n+ @change=\"handleChange\"\n+ />\n+ </CBox>\n+ `,\n+ data () {\n+ return {\n+ textareaContent: 'Jonathan Bakebwa is awesome'\n+ }\n+ },\n+ methods: {\n+ action: action(),\n+ handleChange (e) {\n+ this.textareaContent = 'You are beautiful :)'\n+ }\n+ }\n+ }))\n",
        "date": "29.09.2021 01:50:40",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "chatgpt_zeroshot": "Add Basic Usage with Event in CTextarea stories"
    },
    {
        "msg": "fix: support multiple paths in icons\nFontAwesome duotone icons require multiple path elements, as well as className defs, and a default style def for the opacity of fa-secondary.",
        "diff": "diff --git a/packages/chakra-ui-core/src/utils/icons.js b/packages/chakra-ui-core/src/utils/icons.js import { merge } from 'lodash-es'\n+/**\n+ * @description Parse FontAwesome icon path\n+ * @param {String|Array} path a single svg path, or array of paths\n+ * @returns {String}\n+ */\n+const parseFontAwesomeIcon = (path) => {\n+ // duotone icon\n+ if (Array.isArray(path) && path.length === 2) {\n+ const paths = path.map((d, idx) =>\n+ `<path d=\"${d}\" fill=\"currentColor\" class=\"${idx ? 'fa-primary' : 'fa-secondary'}\" />`\n+ )\n+\n+ return `<defs><style>.fa-secondary{opacity:.4}</style></defs><g class=\"fa-group\">${paths.join('')}</g>`\n+ }\n+\n+ return `<path d=\"${path}\" fill=\"currentColor\" />`\n+}\n+\n/**\n* @description Custom parse all Icons provided by user\n* @param {Object} iconSet - Registered Icons object\n@@ -14,7 +32,7 @@ const parseIcons = (iconSet = {}) => {\nreturn {\n[`${iconObject.iconName}`]: {\npath: iconObject.prefix.startsWith('fa')\n- ? `<path d=\"${path}\" fill=\"currentColor\" />`\n+ ? parseFontAwesomeIcon(path)\n: iconObject.prefix.startsWith('fe')\n? content\n: svg,\n",
        "date": "24.10.2021 14:05:26",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "chatgpt_zeroshot": "Add function to parse FontAwesome icon paths"
    },
    {
        "msg": "fix: don't use `options.iconPack`, yet",
        "diff": "diff --git a/packages/chakra-ui-core/src/utils/icons.js b/packages/chakra-ui-core/src/utils/icons.js import { merge } from 'lodash-es'\n/**\n- * @param {String} pack\n- * @param {Array} icon\n+ * @param {String} prefix - prefix for the icon pack\n+ * @param {Array} icon - icon definition\n* @returns {{path: string, viewBox: string, attrs: *}}\n*/\n-const createIcon = (pack, icon) => {\n+const createIcon = (prefix, icon) => {\nconst [w, h, content, svg, data, , attrs] = icon\nlet path\n@@ -21,12 +21,12 @@ const createIcon = (pack, icon) => {\nreturn `<g fill=\"currentColor\" class=\"${prefix}-group\">${paths.join('')}</g>`\n}\n- if (pack === 'fa') {\n+ if (prefix.startsWith('fa')) {\npath = Array.isArray(data)\n- ? createGroupedPath(data, pack)\n+ ? createGroupedPath(data, prefix.substr(0, 2))\n: createPath(data)\n} else {\n- path = pack.startsWith('fe') ? content : svg\n+ path = prefix.startsWith('fe') ? content : svg\n}\nreturn {\n@@ -38,17 +38,16 @@ const createIcon = (pack, icon) => {\n/**\n* @description Custom parse all Icons provided by user\n- * @param {String} pack - the name of the icon pack being used (fe, fa, mdi, etc)\n* @param {Object} iconSet - Registered Icons object\n* @returns {Object}\n*/\n-const parseIcons = (pack, iconSet = {}) => {\n+const parseIcons = (iconSet = {}) => {\nconst parseIcon = (iconObject) => {\n- const { icon, iconName } = iconObject\n+ const { icon, prefix, iconName } = iconObject\n// Is library icon\nif (icon) {\nreturn {\n- [`${iconName}`]: createIcon(pack, icon)\n+ [`${iconName}`]: createIcon(prefix, icon)\n}\n} else {\nreturn {}\n@@ -62,13 +61,12 @@ const parseIcons = (pack, iconSet = {}) => {\n/**\n* @description Parse Icon packs\n- * @param {String} pack - the name of the icon pack being used (fe, fa, mdi, etc)\n* @param {Object} iconSet Registered Icon set\n* @returns {Object} Parsed pack icons object\n*/\n-export const parsePackIcons = (pack, iconSet) => {\n+export const parsePackIcons = (iconSet) => {\n// TODO: Add support for other icon libraries\n// - Material Icons: these are string constants, and need lots of work\n// - Tailwind Icons (Hero icons)\n- return parseIcons(pack, iconSet)\n+ return parseIcons(iconSet)\n}\n",
        "date": "25.10.2021 14:39:05",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor icon creation function to use prefix instead of pack name"
    },
    {
        "msg": "fix: emit CInput events from inside a CInputGroup",
        "diff": "diff --git a/packages/chakra-ui-core/src/CInputGroup/CInputGroup.js b/packages/chakra-ui-core/src/CInputGroup/CInputGroup.js @@ -53,7 +53,9 @@ const CInputGroup = {\nconst clone = cloneVNode(vnode, h)\nreturn h(clone.componentOptions.Ctor, {\n...clone.data,\n- ...(clone.componentOptions.listeners || {}),\n+ on: {\n+ ...(clone.componentOptions.listeners || {})\n+ },\nprops: {\n...(clone.data.props || {}),\n...clone.componentOptions.propsData,\n",
        "date": "11.12.2021 15:45:46",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor event listeners in CInputGroup component"
    },
    {
        "msg": "fix(theme): change _breakpoints to object without array",
        "diff": "diff --git a/packages/chakra-ui-theme/src/theme/breakpoints.js b/packages/chakra-ui-theme/src/theme/breakpoints.js * @description These breakpoint styles were adapted from [@chakra-ui](https://chakra-ui.com/)\n*/\n-const _breakpoints = ['30em', '48em', '62em', '80em']\n-\n-_breakpoints.sm = _breakpoints[0]\n-_breakpoints.md = _breakpoints[1]\n-_breakpoints.lg = _breakpoints[2]\n-_breakpoints.xl = _breakpoints[3]\n+const _breakpoints = {\n+ sm: '30em',\n+ md: '48em',\n+ lg: '62em',\n+ xl: '80em',\n+ '2xl': '96em'\n+}\nexport const createBreakpoints = (\nconfig = {}\n",
        "date": "29.12.2021 21:18:45",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor breakpoints to use object syntax"
    },
    {
        "msg": "fix(canvas): update storybook preview layout",
        "diff": "diff --git a/.storybook/components/Canvas.vue b/.storybook/components/Canvas.vue :bg=\"colorMode === 'light' ? 'white' : 'gray.800'\"\n:color=\"colorMode === 'light' ? 'gray.800' : 'gray.50'\"\nclass=\"root\"\n+ width=\"100vw\"\n+ height=\"100vh\"\n+ transition=\"all 0.2s ease-in-out\"\n>\n- <CHeading mb=\"50px\" pos=\"absolute\" top=\"3\" left=\"50%\" transform=\"translateX(-50%)\" as=\"h4\">@chakra-ui/vue</CHeading>\n+ <CFlex justify-content=\"space-between\" padding=\"4\">\n+ <CHeading mb=\"50px\" as=\"h4\">@chakra-ui/vue</CHeading>\n<CReset />\n<CButton\nas=\"a\"\ntarget=\"_blank\"\nhref=\"https://github.com/chakra-ui/chakra-ui-vue\"\n- position=\"fixed\"\n- top=\"3\"\n- left=\"3\"\nshadow=\"sm\"\nleft-icon=\"github\"\n+ order=\"-1\"\n>\nGithub\n</CButton>\n<CIconButton\n- position=\"fixed\"\n- top=\"3\"\n- right=\"3\"\n- :aria-label=\"`Switch to ${colorMode === 'light' ? 'dark' : 'light'} mode`\"\n- variant=\"ghost\"\n+ :aria-label=\"\n+ `Switch to ${colorMode === 'light' ? 'dark' : 'light'} mode`\n+ \"\n+ variant=\"solid\"\n:icon=\"colorMode === 'light' ? 'sun' : 'moon'\"\n@click=\"toggleColorMode\"\n>\n</CIconButton>\n- <div class=\"wrapper\">\n+ </CFlex>\n+ <CFlex\n+ class=\"wrapper\"\n+ flex-direction=\"column\"\n+ justify-content=\"center\"\n+ align-items=\"center\"\n+ >\n<slot />\n- </div>\n+ </CFlex>\n</CBox>\n</CColorModeProvider>\n</CThemeProvider>\n@@ -46,8 +53,10 @@ import {\nCReset,\nCButton,\nCBox,\n+ CFlex,\nCIconButton,\n- CColorModeProvider } from '../../packages/chakra-ui-core/src'\n+ CColorModeProvider\n+} from '../../packages/chakra-ui-core/src'\nexport default {\nname: 'Canvas',\n@@ -57,32 +66,9 @@ export default {\nCReset,\nCButton,\nCBox,\n+ CFlex,\nCIconButton,\nCColorModeProvider\n}\n}\n</script>\n-\n-<style lang=\"scss\" scoped>\n-html,\n-body {\n- margin: 0\n-}\n-.root {\n- height: 100vh;\n- width: 100vw;\n- display: flex;\n- flex-direction: column;\n- justify-content: center;\n- align-items: center;\n- transition: all 0.2s ease-in-out;\n- .wrapper {\n- display: flex;\n- flex-direction: column;\n- justify-content: center;\n- align-items: center;\n- width: 100%;\n- height: 100%\n- }\n-}\n-</style>\n\\ No newline at end of file\n",
        "date": "20.04.2022 19:17:30",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor Canvas.vue component styling and layout, add responsive width and height, and update button styles."
    },
    {
        "msg": "fix(docs): fix typo in link",
        "diff": "diff --git a/website/pages/circularprogress.mdx b/website/pages/circularprogress.mdx -import SEO from \"../components/SEO\";\n-\n-<SEO title=\"Circular Progress\" description=\"Circular Progress is used to indicates the progress for determinate and indeterminate processes.\" />\n-\n-\n+import SEO from '../components/SEO'\n+<SEO\n+ title=\"Circular Progress\"\n+ description=\"Circular Progress is used to indicates the progress for determinate and indeterminate processes.\"\n+/>\n# Circular Progress\n+\nThe Circular Progress component is used to indicates the progress for both determinate and indeterminate processes.\n- Determinate progress fills the circular track with color, as the indicator\n@@ -13,33 +14,28 @@ The Circular Progress component is used to indicates the progress for both deter\n- Indeterminate progress grows and shrinks the indicator while moving along the\ncircular track.\n-\n-See `CCircularProgress`'s <a target=\"_blank\" href=\"https://github.com/chakra-ui/chakra-ui-vue/blob/master/packages/chakra-ui-core/src/CCircularProgress/accesibility.md\">accessibility report</a>\n-\n+See `CCircularProgress`'s <a target=\"_blank\" href=\"https://github.com/chakra-ui/chakra-ui-vue/blob/master/packages/chakra-ui-core/src/CCircularProgress/accessibility.md\">accessibility report</a>\n<carbon-ad />\n## Import\n```js\n-import { CCircularProgress, CCircularProgressLabel } from \"@chakra-ui/vue\";\n+import { CCircularProgress, CCircularProgressLabel } from '@chakra-ui/vue'\n```\n-\n## Usage\n```vue live=true\n<c-circular-progress :value=\"80\" />\n```\n-\n### Changing the size\nYou can add `size` prop to the progress bar to add a custom size.\n```vue live=true\n-// Change the size to 120px\n-<c-circular-progress :value=\"30\" size=\"120px\" />\n+// Change the size to 120px <c-circular-progress :value=\"30\" size=\"120px\" />\n```\n### Changing the thickness\n@@ -91,7 +87,7 @@ Setting the progress to indeterminate means you're not able to determine the\n## Props\n| Name | Type | Default | Description |\n-| --------------- | ----------------- | ------- | ---------------------------------------------------------------------------------------------------------------- |\n+| --------------- | --------- | ------- | ------------------------------------------------------------------------------------- |\n| size | `string` | `48px` | The size of the circular progress in CSS units |\n| max | `number` | `100` | Maximum value defining 100% progress made (must be higher than 'min') |\n| min | `number` | `0` | Minimum value defining 'no progress' (must be lower than 'max') |\n@@ -103,6 +99,7 @@ Setting the progress to indeterminate means you're not able to determine the\n| color | `string` | `blue` | The color of the progress indicator. Use a color key in the theme object |\n## Slots\n+\n| Name | Description |\n-| ---------- | --------------------------------------------------------------------------------- |\n+| ------- | -------------------------------------------------------------------------------- |\n| default | Used for the `CCircularProgressLabel` to display the current progress percentage |\n",
        "date": "30.05.2022 09:08:44",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor Circular Progress component and update SEO metadata"
    },
    {
        "msg": "fix: not working autoSelect in CMenu",
        "diff": "diff --git a/packages/chakra-ui-core/src/CMenu/CMenu.js b/packages/chakra-ui-core/src/CMenu/CMenu.js @@ -93,6 +93,7 @@ const CMenu = {\nfocusAtIndex: this.focusAtIndex,\nfocusOnLastItem: this.focusOnLastItem,\nfocusOnFirstItem: this.focusOnFirstItem,\n+ openMenu: this.openMenu,\ncloseMenu: this.closeMenu,\nautoSelect: this.autoSelect,\ncloseOnSelect: this.closeOnSelect,\n",
        "date": "01.10.2022 23:06:09",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "fix",
        "chatgpt_zeroshot": "Add openMenu method to CMenu component"
    },
    {
        "msg": "fix: launchEditorEndpoint warning",
        "diff": "diff --git a/packages/razzle-dev-utils/webpackHotDevClient.js b/packages/razzle-dev-utils/webpackHotDevClient.js @@ -16,6 +16,26 @@ var launchEditorEndpoint = require('react-dev-utils/launchEditorEndpoint');\nvar formatWebpackMessages = require('react-dev-utils/formatWebpackMessages');\nvar ErrorOverlay = require('react-error-overlay');\n+ErrorOverlay.setEditorHandler(function editorHandler(errorLocation) {\n+ // Keep this sync with errorOverlayMiddleware.js\n+ fetch(\n+ url.format({\n+ protocol: window.location.protocol,\n+ hostname: window.location.hostname,\n+ port: parseInt(process.env.PORT || window.location.port, 10) + 1,\n+ pathname: launchEditorEndpoint,\n+ search:\n+ '?fileName=' +\n+ window.encodeURIComponent(errorLocation.fileName) +\n+ '&lineNumber=' +\n+ window.encodeURIComponent(errorLocation.lineNumber || 1) +\n+ '&colNumber=' +\n+ window.encodeURIComponent(errorLocation.colNumber || 1),\n+ }),\n+ { mode: 'no-cors' }\n+ );\n+});\n+\n// We need to keep track of if there has been a runtime error.\n// Essentially, we cannot guarantee application state was not corrupted by the\n// runtime error. To prevent confusing behavior, we forcibly reload the entire\n@@ -24,12 +44,6 @@ var ErrorOverlay = require('react-error-overlay');\n// See https://github.com/facebookincubator/create-react-app/issues/3096\nvar hadRuntimeError = false;\nErrorOverlay.startReportingRuntimeErrors({\n- launchEditorEndpoint: url.format({\n- protocol: window.location.protocol,\n- hostname: window.location.hostname,\n- port: parseInt(process.env.PORT || window.location.port, 10) + 1,\n- pathname: launchEditorEndpoint,\n- }),\nonError: function() {\nhadRuntimeError = true;\n},\n",
        "date": "07.01.2019 02:22:36",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Add custom editor handler for error overlay and remove redundant code"
    },
    {
        "msg": "fix: prevent emiting files in server-side",
        "diff": "diff --git a/packages/razzle/config/createConfig.js b/packages/razzle/config/createConfig.js @@ -150,7 +150,7 @@ module.exports = (\nloader: require.resolve('file-loader'),\noptions: {\nname: 'static/media/[name].[hash:8].[ext]',\n- emitFile: true,\n+ emitFile: IS_WEB,\n},\n},\n// \"url\" loader works like \"file\" loader except that it embeds assets\n@@ -162,7 +162,7 @@ module.exports = (\noptions: {\nlimit: 10000,\nname: 'static/media/[name].[hash:8].[ext]',\n- emitFile: true,\n+ emitFile: IS_WEB,\n},\n},\n",
        "date": "17.04.2019 00:42:52",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "refactor: update emitFile option to use IS_WEB variable"
    },
    {
        "msg": "fix(with-afterjs): update catch block",
        "diff": "diff --git a/examples/with-afterjs/src/server.js b/examples/with-afterjs/src/server.js @@ -22,7 +22,8 @@ server\n});\nres.send(html);\n} catch (error) {\n- res.json(error);\n+ console.error(error);\n+ res.json({ message: error.message, stack: error.stack });\n}\n});\n",
        "date": "29.02.2020 00:28:17",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor error handling in server.js to log error details before sending response."
    },
    {
        "msg": "fix(circle-ci): add --ignore-engines to install command",
        "diff": "diff --git a/.circleci/config.yml b/.circleci/config.yml @@ -15,7 +15,7 @@ defaults: &defaults\n- run:\nname: Install and bootstrap packages\n- command: yarn install --frozen-lockfile\n+ command: yarn install --frozen-lockfile --ignore-engines\n- run:\nname: Run tests\n",
        "date": "15.03.2020 18:48:31",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Update yarn install command to ignore engines in CircleCI config"
    },
    {
        "msg": "fix(github-ci): add --ignore-engines to github ci",
        "diff": "diff --git a/.github/workflows/nodejs.yml b/.github/workflows/nodejs.yml @@ -25,7 +25,7 @@ jobs:\nrun: yarn global add elm\n- name: Install and bootstrap packages\n- run: yarn install --frozen-lockfile\n+ run: yarn install --frozen-lockfile --ignore-engines\n- name: Run tests\nrun: yarn e2e --runInBand --coverage\n",
        "date": "15.03.2020 19:02:25",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Update yarn install command to ignore engines in nodejs.yml workflow"
    },
    {
        "msg": "fix(npm-link): update npm links",
        "diff": "diff --git a/package.json b/package.json {\n\"private\": true,\n- \"bugs\": \"https://github.com/jaredpalmer/razzle/issues\",\n\"homepage\": \"https://github.com/jaredpalmer/razzle#readme\",\n+ \"repository\": {\n+ \"type\": \"git\",\n+ \"url\": \"git+https://github.com/jaredpalmer/razzle.git\"\n+ },\n+ \"bugs\": {\n+ \"url\": \"https://github.com/jaredpalmer/razzle/issues\"\n+ },\n\"devDependencies\": {\n\"eslint\": \"^6.8.0\",\n\"husky\": \"^4.2.3\",\n",
        "date": "08.04.2020 03:56:44",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Update repository and bugs URLs in package.json"
    },
    {
        "msg": "fix(typo): update README file",
        "diff": "diff --git a/packages/razzle/README.md b/packages/razzle/README.md @@ -275,7 +275,7 @@ import 'react-app-polyfill/ie11'; // For IE 11 support\n* `process.env.NODE_ENV`: `'development'` or `'production'`\n* `process.env.BUILD_TYPE`: `'iso'` for isomorphic/universal applications or `'spa'` for single page applications. The default is `'iso'`. This is set by CLI arguments.\n* `process.env.BUILD_TARGET`: either `'client'` or `'server'`\n-* `process.env.PUBLIC_PATH`: Only in used in `razzle build`. You can alter the `webpack.config.output.publicPath` of the client assets (bundle, css, and images). This is useful if you plan to serve your assets from a CDN. Make sure to _include_ a trailing slash (e.g. `PUBLIC_PATH=https://cdn.example.com/`). If you are using React and altering the public path, make sure to also [include the `crossorigin` attribute](https://reactjs.org/docs/cdn-links.html#why-the-crossorigin-attribute) on your `<script>` tag in `src/server.js`.\n+* `process.env.PUBLIC_PATH`: Only used in `razzle build`. You can alter the `webpack.config.output.publicPath` of the client assets (bundle, css, and images). This is useful if you plan to serve your assets from a CDN. Make sure to _include_ a trailing slash (e.g. `PUBLIC_PATH=https://cdn.example.com/`). If you are using React and altering the public path, make sure to also [include the `crossorigin` attribute](https://reactjs.org/docs/cdn-links.html#why-the-crossorigin-attribute) on your `<script>` tag in `src/server.js`.\n* `process.env.CLIENT_PUBLIC_PATH`: The `NODE_ENV=development` build's `BUILD_TARGET=client` has a different `PUBLIC_PATH` than `BUILD_TARGET=server`. Default is `http://${process.env.HOST}:${process.env.PORT + 1}/`\nYou can create your own custom environment variables that will be inlined during the build. They must start\n",
        "date": "08.04.2020 06:32:29",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Fix typo in README.md regarding the usage of PUBLIC_PATH in razzle build"
    },
    {
        "msg": "fix(sass-plugin): bumpup mini-css-extract-plugin version",
        "diff": "diff --git a/packages/razzle-plugin-scss/package.json b/packages/razzle-plugin-scss/package.json },\n\"dependencies\": {\n\"autoprefixer\": \"^8.6.2\",\n- \"mini-css-extract-plugin\": \"^0.4.0\",\n+ \"mini-css-extract-plugin\": \"^0.9.0\",\n\"node-sass-chokidar\": \"^1.3.0\",\n\"postcss-flexbugs-fixes\": \"^3.3.1\",\n\"postcss-scss\": \"^1.0.5\",\n",
        "date": "10.04.2020 18:15:14",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Update mini-css-extract-plugin to version 0.9.0"
    },
    {
        "msg": "fix(scss): fix tests",
        "diff": "diff --git a/packages/razzle-plugin-scss/tests/index.test.js b/packages/razzle-plugin-scss/tests/index.test.js @@ -69,19 +69,16 @@ const nodeLoaderTests = [\nloaderFinder: cssLoaderFinder,\n},\n{\n- name: 'should not add postcss-loader',\n+ name: 'should add postcss-loader',\nloaderFinder: postCssLoaderFinder,\n- status: 'falsy',\n},\n{\n- name: 'should not add resolve-url-loader',\n+ name: 'should add resolve-url-loader',\nloaderFinder: resolveUrlLoaderFinder,\n- status: 'falsy',\n},\n{\n- name: 'should not add sass-loader',\n+ name: 'should add sass-loader',\nloaderFinder: sassLoaderFinder,\n- status: 'falsy',\n},\n];\n",
        "date": "16.04.2020 00:40:07",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor loader configuration to add necessary loaders for SCSS processing"
    },
    {
        "msg": "fix(scss-plugin): use onlyLocals option",
        "diff": "diff --git a/packages/razzle-plugin-scss/index.js b/packages/razzle-plugin-scss/index.js @@ -126,8 +126,9 @@ module.exports = (\nuse: isServer\n? [\n{\n- loader: require.resolve('css-loader/locals'),\n+ loader: require.resolve('css-loader'),\noptions: Object.assign({}, options.css[constantEnv], {\n+ onlyLocals: true,\nmodules: true,\nlocalIdentName: '[name]__[local]___[hash:base64:5]',\n}),\n",
        "date": "23.04.2020 19:53:34",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Fix css-loader configuration for server-side rendering"
    },
    {
        "msg": "fix(razzle): logger import",
        "diff": "diff --git a/packages/razzle/config/modules.js b/packages/razzle/config/modules.js const fs = require('fs');\nconst path = require('path');\nconst paths = require('./paths');\n-const logger = require('../../razzle-dev-utils/logger');\n+const logger = require('razzle-dev-utils/logger');\nconst resolve = require('resolve');\nconst nodePath = require('./env').nodePath;\n",
        "date": "13.05.2020 13:21:51",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Update logger import in modules.js"
    },
    {
        "msg": "fix(typescript): remove deprecation doc",
        "diff": "diff --git a/packages/razzle-plugin-typescript/README.md b/packages/razzle-plugin-typescript/README.md -# DEPRECATED.\n-\n-This is no longer supported, Razzle now has support for typescript ining babel.\n-\n-Use [with-typescript example](https://github.com/jaredpalmer/razzle/tree/next/examples/with-typescript) instead.\n-\n## razzle-plugin-typescript\nThis package contains a plugin for using TypeScript with Razzle\n+Razzle now has support for typescript using babel. Unless you specifically need this plugin we recommend using the builtin support\n+\n+Use [with-typescript example](https://github.com/jaredpalmer/razzle/tree/next/examples/with-typescript) instead.\n+\n## Usage in Razzle Projects\n```\n",
        "date": "03.06.2020 18:33:41",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Remove deprecated razzle-plugin-typescript and recommend using built-in TypeScript support"
    },
    {
        "msg": "fix(example): fix windows paths",
        "diff": "diff --git a/examples/with-scss-options/razzle.config.js b/examples/with-scss-options/razzle.config.js @@ -9,10 +9,10 @@ module.exports = {\noptions: {\nsass: {\ndev: {\n- data: `@import \"${path.resolve(__dirname, './src/prepend.scss')}\";`,\n+ data: `@import \"${path.resolve(__dirname, './src/prepend.scss').replace(/\\\\/g, '/')}\";`,\n},\nprod: {\n- data: `@import \"${path.resolve(__dirname, './src/prepend.scss')}\";`,\n+ data: `@import \"${path.resolve(__dirname, './src/prepend.scss').replace(/\\\\/g, '/')}\";`,\n},\n},\n},\n",
        "date": "03.06.2020 19:04:13",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Fix path resolution for SCSS import in razzle.config.js"
    },
    {
        "msg": "fix(razzle): add back line lost in merge",
        "diff": "diff --git a/packages/razzle/config/createJestConfig.js b/packages/razzle/config/createJestConfig.js @@ -26,6 +26,7 @@ module.exports = (\nreturn new Promise(async resolveConfig => {\n// Use this instead of `paths.testsSetup` to avoid putting\n// an absolute filename into configuration after ejecting.\n+ const setupTestsFile = getSetupTestsFilePath(paths);\n// TODO: I don't know if it's safe or not to just use / as path separator\n// in Jest configs. We need help from somebody with Windows to determine this.\n",
        "date": "04.06.2020 18:33:23",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Add setupTestsFile variable to Jest configuration"
    },
    {
        "msg": "fix(website): Wrong HTML attributes on <Search />",
        "diff": "diff --git a/website/.nextra/search.js b/website/.nextra/search.js @@ -100,12 +100,12 @@ const Search = ({ directories }) => {\n{renderList && (\n<div className=\"search-overlay z-1\" onClick={() => setShow(false)} />\n)}\n- <div class=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n+ <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n<svg\nfill=\"none\"\nstrokeLinecap=\"round\"\nstrokeLinejoin=\"round\"\n- stroke-width=\"2\"\n+ strokeWidth=\"2\"\nviewBox=\"0 0 24 24\"\nstroke=\"currentColor\"\nclassName=\"h-4 w-4 text-gray-400\"\n",
        "date": "10.07.2020 02:48:56",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Fix styling issue in search component"
    },
    {
        "msg": "fix: updated spa example with working env var",
        "diff": "diff --git a/examples/basic-spa/public/index.html b/examples/basic-spa/public/index.html <head>\n<meta charset=\"utf-8\" />\n+ <link rel=\"icon\" href=\"<%= process.env.PUBLIC_PATH %>favicon.ico\" />\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\" />\n<meta name=\"theme-color\" content=\"#000000\" />\n<!--\n- Notice the use of %PUBLIC_URL% in the tags above.\n+ Notice the use of <%= process.env.PUBLIC_PATH %> in the tags above.\nIt will be replaced with the URL of the `public` folder during the build.\nOnly files inside the `public` folder can be referenced from the HTML.\n- Unlike \"/favicon.ico\" or \"favicon.ico\", \"%PUBLIC_URL%/favicon.ico\" will\n+ Unlike \"/favicon.ico\" or \"favicon.ico\", \"<%= process.env.PUBLIC_PATH %>/favicon.ico\" will\nwork correctly both with client-side routing and a non-root public URL.\nLearn how to configure a non-root public URL by running `npm run build`.\n-->\n",
        "date": "16.07.2020 09:23:18",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Update favicon link in index.html to use process.env.PUBLIC_PATH"
    },
    {
        "msg": "fix(razzle/babel): use cacheIdentifier so babel cache does not mix up builds",
        "diff": "diff --git a/packages/razzle/config/createConfigAsync.js b/packages/razzle/config/createConfigAsync.js @@ -21,6 +21,7 @@ const modules = require('./modules');\nconst postcssLoadConfig = require('postcss-load-config');\nconst logger = require('razzle-dev-utils/logger');\nconst razzlePaths = require('razzle/config/paths');\n+const getCacheIdentifier = require('react-dev-utils/getCacheIdentifier');\nconst defaultPostCssOptions = {\nident: 'postcss',\n@@ -89,6 +90,25 @@ module.exports = (\nif (!hasBabelRc) {\nmainBabelOptions.presets.push(require.resolve('../babel'));\n+ // Make sure we have a unique cache identifier, erring on the\n+ // side of caution.\n+ // We remove this when the user ejects because the default\n+ // is sane and uses Babel options. Instead of options, we use\n+ // the razzle-dev-utils and babel-preset-razzle versions.\n+ mainBabelOptions.cacheIdentifier = getCacheIdentifier(\n+ (IS_PROD\n+ ? 'production'\n+ : IS_DEV && 'development')\n+ + '_'\n+ + (IS_NODE\n+ ? 'nodebuild'\n+ : IS_WEB && 'webbuild'),\n+ [\n+ 'babel-preset-razzle',\n+ 'react-dev-utils',\n+ 'razzle-dev-utils',\n+ ]\n+ );\nif (IS_DEV && IS_WEB && shouldUseReactRefresh) {\nmainBabelOptions.plugins.push(require.resolve('react-refresh/babel'));\n}\n",
        "date": "24.07.2020 17:40:32",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Add unique cache identifier for Babel options"
    },
    {
        "msg": "fix(razzle): no need for Promise.resolve here",
        "diff": "diff --git a/packages/razzle/config/createConfigAsync.js b/packages/razzle/config/createConfigAsync.js @@ -655,23 +655,19 @@ module.exports = (\n// Check if plugin is a function.\n// If it is, call it on the configs we created.\nif (typeof plugin === 'function') {\n- config = await Promise.resolve(\n- runPlugin(\n+ config = await runPlugin(\nplugin,\nconfig,\n{ target, dev: IS_DEV },\nwebpackObject,\noptions\n- )\n);\n}\n}\n// Check if razzle.config.js has a modify function.\n// If it does, call it on the configs we created.\nif (modify) {\n- config = await Promise.resolve(\n- modify(config, { target, dev: IS_DEV }, webpackObject)\n- );\n+ config = await modify(config, { target, dev: IS_DEV }, webpackObject);\n}\nresolve(config);\n",
        "date": "25.07.2020 17:32:51",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor plugin and modify function calls in createConfigAsync.js"
    },
    {
        "msg": "fix: remove lines that snuk in during testing",
        "diff": "diff --git a/test/tests/razzle-start-spa.test.js b/test/tests/razzle-start-spa.test.js @@ -33,7 +33,6 @@ describe('razzle start', () => {\n}\n);\nchild.stdout.on('data', data => {\n- console.log(data);\nif (data.includes('> SPA Started on port 3000')) {\nshell.exec('sleep 5');\nconst devServerOutput = shell.exec(\n@@ -43,10 +42,6 @@ describe('razzle start', () => {\nkill(child.pid);\n}\n});\n- child.stderr.on('data', data => {\n- console.log(data);\n- kill(child.pid);\n- });\n});\nreturn run.then((test) => expect(test).toBeTruthy());\n});\n",
        "date": "26.07.2020 20:22:42",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Remove unnecessary console.log statements and error handling in razzle-start-spa.test.js"
    },
    {
        "msg": "fix(create-razzle-app): reverse the logic for razzle version tag",
        "diff": "diff --git a/packages/create-razzle-app/lib/index.js b/packages/create-razzle-app/lib/index.js @@ -20,7 +20,7 @@ const officialExamplesApiUrl =\n'https://api.github.com/repos/jaredpalmer/razzle/contents/examples';\nconst branch = 'next-awesome'; // this line auto updates when yarn update-examples is run\n-const razzlePkg = `razzle${branch == 'master' ? '' : '@' + branch}`;\n+const razzlePkg = `razzle${branch == 'canary' ? '@' + branch : '' }`;\nconst getOfficialExamples = () => {\nif (typeof process.env.CI === 'undefined') {\n",
        "date": "09.08.2020 20:22:53",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Update razzle package version based on branch in create-razzle-app"
    },
    {
        "msg": "fix: bundle babel runtime",
        "diff": "diff --git a/packages/razzle/config/createConfigAsync.js b/packages/razzle/config/createConfigAsync.js @@ -300,6 +300,12 @@ module.exports = (\nif (baseRes !== res) {\nreturn callback()\n}\n+\n+ // This is the @babel/plugin-transform-runtime \"helpers: true\" option\n+ if (res.match(/node_modules[/\\\\]@babel[/\\\\]runtime[/\\\\]/)) {\n+ return callback()\n+ }\n+\n// Anything else that is standard JavaScript within `node_modules`\n// can be externalized.\nif (res.match(/node_modules[/\\\\].*\\.js$/)) {\n",
        "date": "25.08.2020 22:49:40",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Exclude @babel/plugin-transform-runtime helpers from externalization in createConfigAsync"
    },
    {
        "msg": "fix(razzle): make `paths.appPublic` optional",
        "diff": "diff --git a/packages/razzle/scripts/build.js b/packages/razzle/scripts/build.js @@ -201,11 +201,13 @@ loadRazzleConfig(webpack).then(\n// Helper function to copy public directory to build/public\nfunction copyPublicFolder() {\n+ if (fs.existsSync(paths.appPublic)) {\nfs.copySync(paths.appPublic, paths.appBuildPublic, {\ndereference: true,\nfilter: file => file !== paths.appHtml,\n});\n}\n+ }\n// Wrap webpackcompile in a try catch.\nfunction compile(config, cb) {\n",
        "date": "28.08.2020 19:22:23",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Add check for existence of public directory before copying to build/public"
    },
    {
        "msg": "fix(example): load all client assets",
        "diff": "diff --git a/examples/with-vendor-bundle/src/server.js b/examples/with-vendor-bundle/src/server.js @@ -5,13 +5,26 @@ import { renderToString } from \"react-dom/server\";\nconst assets = require(process.env.RAZZLE_ASSETS_MANIFEST);\n-const scripts = Object.keys(assets).reduce((scripts, key) => {\n- return (\n- scripts + `<script src=\"${assets[key].js}\" defer crossorigin></script>`\n- );\n-}, \"\");\n+const scripts = Object.keys(assets)\n+ .map((key) => {\n+ const script = assets[key].js;\n+\n+ if (typeof script === 'undefined' || script === null) {\n+ return null;\n+ }\n+\n+ if (Array.isArray(script)) {\n+ return script\n+ .map((item) => {\n+ return `<script src=\"${item}\"></script>`;\n+ })\n+ .join('');\n+ }\n+\n+ return `<script src=\"${script}\"></script>`;\n+ })\n+ .filter((a) => typeof a !== 'undefined' || a !== null);\n-console.log(scripts);\nconst server = express();\n@@ -28,7 +41,7 @@ server\n<meta charSet='utf-8' />\n<title>Welcome to Razzle</title>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n- ${scripts}\n+ ${scripts.join('\\n')}\n</head>\n<body>\n<div id=\"root\">${markup}</div>\n",
        "date": "28.08.2020 20:01:52",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor script generation in server.js to handle multiple script entries and filter out undefined/null values."
    },
    {
        "msg": "fix(razzle): use paths",
        "diff": "diff --git a/packages/razzle/config/createConfigAsync.js b/packages/razzle/config/createConfigAsync.js @@ -902,7 +902,12 @@ module.exports = (\nnew webpack.optimize.AggressiveMergingPlugin(),\nnew CopyPlugin({\npatterns: [\n- { from: 'public/*.*', to: paths.appBuild, noErrorOnMissing: true, context: paths.appPath },\n+ {\n+ from: paths.appPublic + '/**/*',\n+ to: paths.appBuild,\n+ context: paths.appPath,\n+ noErrorOnMissing: true\n+ },\n],\n}),\n];\n",
        "date": "29.08.2020 22:17:58",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor file copy pattern in createConfigAsync.js"
    },
    {
        "msg": "fix(razzle): use correct options for older plugin",
        "diff": "diff --git a/packages/razzle/config/createConfigAsync.js b/packages/razzle/config/createConfigAsync.js @@ -900,16 +900,14 @@ module.exports = (\n}),\nnew webpack.HashedModuleIdsPlugin(),\nnew webpack.optimize.AggressiveMergingPlugin(),\n- new CopyPlugin({\n- patterns: [\n+ new CopyPlugin([\n{\nfrom: paths.appPublic + '/**/*',\nto: paths.appBuild,\n- context: paths.appPath,\n- noErrorOnMissing: true\n+ context: paths.appPath\n},\n],\n- }),\n+ ),\n];\nconfig.optimization = Object.assign(\n",
        "date": "29.08.2020 23:04:58",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor webpack plugins and remove unnecessary options"
    },
    {
        "msg": "fix(create-razzle-app): fixed a merge conflict",
        "diff": "diff --git a/packages/create-razzle-app/lib/index.js b/packages/create-razzle-app/lib/index.js @@ -21,9 +21,6 @@ const razzlePkg = `razzle${branch == 'master' ? '' : '@' + branch}`;\nconst officialExamplesApiUrl =\n`https://api.github.com/repos/jaredpalmer/razzle/contents/examples${branch == 'master' ? '' : '?ref=' + branch}`;\n-const branch = 'next-awesome'; // this line auto updates when yarn update-examples is run\n-const razzlePkg = `razzle${branch == 'canary' ? '@' + branch : ''}`;\n-\nconst getOfficialExamples = () => {\nif (typeof process.env.CI === 'undefined') {\nreturn axios\n",
        "date": "30.08.2020 18:33:15",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Remove redundant code and update branch variable in create-razzle-app lib index"
    },
    {
        "msg": "fix: undo replacement that went bad in dev scripts",
        "diff": "diff --git a/packages/razzle/package.json b/packages/razzle/package.json \"repository\": \"git@github.com:jaredpalmer/razzle.git\",\n\"version\": \"3.3.0-canary.2\",\n\"bin\": {\n- \"razzle\": \"canary\"\n+ \"razzle\": \"./bin/razzle.js\"\n},\n\"files\": [\n\"babel.js\",\n",
        "date": "30.08.2020 23:54:06",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Update razzle bin path to use ./bin/razzle.js"
    },
    {
        "msg": "fix: longer timeout for macos",
        "diff": "diff --git a/.github/workflows/nodejs.yml b/.github/workflows/nodejs.yml @@ -33,7 +33,7 @@ jobs:\nkey: ${{ matrix.os }}-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}\n- name: Install and bootstrap packages\n- run: yarn install --frozen-lockfile --ignore-engines --network-timeout 30000\n+ run: yarn install --frozen-lockfile --ignore-engines --network-timeout 1000000\n- name: Set webpack version output\nid: set-webpack\n",
        "date": "31.08.2020 17:15:40",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Increase network timeout for yarn install to 1000000"
    },
    {
        "msg": "fix: no 8.x or 9x node",
        "diff": "diff --git a/.github/workflows/nodejs.yml b/.github/workflows/nodejs.yml @@ -9,7 +9,7 @@ jobs:\nstrategy:\nmatrix:\n- node-version: [8.x, 10.x, 12.x, 13.x, 14.x]\n+ node-version: [10.x, 12.x, 13.x, 14.x]\nos: [ubuntu-latest, windows-latest, macOS-latest]\nname: Test on node ${{ matrix.node-version }} and ${{ matrix.os }}\n",
        "date": "01.09.2020 22:47:00",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Update node version matrix in GitHub Actions workflow"
    },
    {
        "msg": "fix(razzle-dev-utils): setPorts did not set port in async",
        "diff": "diff --git a/packages/razzle-dev-utils/setPorts.js b/packages/razzle-dev-utils/setPorts.js const { choosePort } = require('react-dev-utils/WebpackDevServerUtils');\n// Checks if PORT and PORT_DEV are available and suggests alternatives if not\n-module.exports = async clientOnly => {\n+module.exports = clientOnly => {\n+ return new Promise(async resolve => {\n+\nconst port = (process.env.PORT && parseInt(process.env.PORT)) || 3000;\nconst portDev =\n(process.env.PORT_DEV && parseInt(process.env.PORT_DEV)) ||\n@@ -13,4 +15,9 @@ module.exports = async clientOnly => {\nprocess.env.PORT = actualPort;\nprocess.env.PORT_DEV = actualPortDev;\n+\n+ resolve();\n+\n+ })\n+\n};\n",
        "date": "02.09.2020 02:26:19",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor setPorts.js to use synchronous Promise resolution"
    },
    {
        "msg": "fix(razzle): silence startserverplugin",
        "diff": "diff --git a/packages/razzle/config/createConfigAsync.js b/packages/razzle/config/createConfigAsync.js @@ -677,6 +677,7 @@ module.exports = (\n// Supress errors to console (we use our own logger)\n!disableStartServer &&\nnew StartServerPlugin({\n+ verbose: false,\nname: 'server.js',\nentryName: 'server',\nnodeArgs,\n",
        "date": "17.09.2020 02:48:38",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Update StartServerPlugin options to suppress verbose output"
    },
    {
        "msg": "fix: try making tests pass",
        "diff": "diff --git a/test/tests/razzle-start.test.js b/test/tests/razzle-start.test.js @@ -33,7 +33,7 @@ describe('razzle start', () => {\n});\nchild.stdout.on('data', data => {\nif (!silent) console.log(data);\n- if (data.includes('Server-side HMR Enabled!')) {\n+ if (data.includes('Server-side HMR Enabled!') && !outputTest) {\nshell.exec('sleep 5');\nconst devServerOutput = shell.exec(\n'curl -sb -o \"\" localhost:3001/static/js/bundle.js'\n@@ -61,7 +61,7 @@ describe('razzle start', () => {\n});\nchild.stdout.on('data', data => {\nif (!silent) console.log(data);\n- if (data.includes('Server-side HMR Enabled!')) {\n+ if (data.includes('Server-side HMR Enabled!') && !outputTest) {\nshell.exec('sleep 5');\nconst devServerOutput = shell.exec(\n'curl -sb -o \"\" localhost:3002/static/js/bundle.js'\n",
        "date": "17.09.2020 03:11:04",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Fix conditional statement to prevent output during test execution"
    },
    {
        "msg": "fix: allow getting string only loaders",
        "diff": "diff --git a/packages/razzle-dev-utils/makeLoaderFinder.js b/packages/razzle-dev-utils/makeLoaderFinder.js @@ -6,7 +6,7 @@ const makeLoaderFinder = loaderName => rule => {\n// Checks if there's a loader string in rule.loader matching loaderRegex.\nconst inLoaderString =\n- typeof rule.loader === 'string' && rule.loader.match(loaderRegex);\n+ typeof rule.loader === 'string' && (rule.loader.match(loaderRegex) || rule.loader === loaderName);\n// Checks if there is an object inside rule.use with loader matching loaderRegex, OR\n// Checks another condition, if rule is not an object, but pure string (ex: \"style-loader\", etc)\n@@ -15,8 +15,8 @@ const makeLoaderFinder = loaderName => rule => {\nrule.use.find(\nloader =>\n(typeof loader.loader === 'string' &&\n- loader.loader.match(loaderRegex)) ||\n- (typeof loader === 'string' && loader.match(loaderRegex))\n+ (loader.loader.match(loaderRegex)) || rule.loader === loaderName) ||\n+ (typeof loader === 'string' && (loader.match(loaderRegex) || loader === loaderName))\n);\nreturn inUseArray || inLoaderString;\n",
        "date": "17.09.2020 21:03:36",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Add loaderName check to makeLoaderFinder function"
    },
    {
        "msg": "fix(razzle-dev-utils): add missing dep",
        "diff": "diff --git a/packages/razzle-dev-utils/package.json b/packages/razzle-dev-utils/package.json \"dependencies\": {\n\"@babel/code-frame\": \"^7.8.3\",\n\"chalk\": \"3.0.0\",\n+ \"jest-message-util\": \"26.3.0\",\n\"react-dev-utils\": \"10.2.0\",\n\"react-error-overlay\": \"^6.0.7\",\n\"resolve\": \"1.17.0\",\n",
        "date": "19.09.2020 15:23:09",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Add jest-message-util dependency"
    },
    {
        "msg": "fix: don't test for jest version",
        "diff": "diff --git a/packages/razzle/config/createJestConfig.js b/packages/razzle/config/createJestConfig.js @@ -4,7 +4,6 @@ const fs = require('fs');\nconst chalk = require('chalk');\nconst jest = require('jest');\n-const jestMajorVersion = parseInt(jest.default.getVersion().split('.')[0]);\n// first search for setupTests.ts file\n// if .ts file not exists then looks for setupTests.js\nfunction getSetupTestsFilePath(paths) {\n@@ -33,7 +32,7 @@ module.exports = (\n// TODO: I don't know if it's safe or not to just use / as path separator\n// in Jest configs. We need help from somebody with Windows to determine this.\n- const config = Object.assign(\n+ const config =\n{\ncollectCoverageFrom: ['src/**/*.{js,jsx,ts,tsx}', '!src/**/*.d.ts'],\n@@ -61,15 +60,9 @@ module.exports = (\n'^react-native$': 'react-native-web',\n},\nmoduleFileExtensions: ['js', 'jsx', 'json', 'ts', 'tsx'],\n- },\n- jestMajorVersion >= 24\n- ? {\n- setupFilesAfterEnv: setupTestsFile ? [setupTestsFile] : [],\n- }\n- : {\n- setupTestFrameworkScriptFile: setupTestsFile,\n+ setupFilesAfterEnv: setupTestsFile ? [setupTestsFile] : []\n}\n- );\n+\nif (rootDir) {\nconfig.rootDir = rootDir;\n}\n@@ -95,11 +88,8 @@ module.exports = (\n'transformIgnorePatterns',\n'reporters',\n'watchPlugins',\n- ].concat(\n- jestMajorVersion >= 24\n- ? ['setupFilesAfterEnv']\n- : ['setupTestFrameworkScriptFile']\n- );\n+ 'setupFilesAfterEnv'\n+ ];\nif (overrides) {\nsupportedKeys.forEach(key => {\nif (overrides.hasOwnProperty(key)) {\n",
        "date": "21.09.2020 15:49:30",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor Jest configuration and remove deprecated setupTestFrameworkScriptFile usage"
    },
    {
        "msg": "fix: bundle everything with serverless buildType",
        "diff": "diff --git a/packages/razzle/config/createConfigAsync.js b/packages/razzle/config/createConfigAsync.js @@ -576,7 +576,7 @@ module.exports = (\n};\n// We need to tell webpack what to bundle into our Node bundle.\n- config.externals = !razzleOptions.serverLess ? [nodeExternalsFunc] : [];\n+ config.externals = razzleOptions.buildType !== 'serverless' ? [nodeExternalsFunc] : [];\n// Specify webpack Node.js output path and filename\nconfig.output = {\n",
        "date": "21.09.2020 16:46:26",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor externals configuration based on build type"
    },
    {
        "msg": "fix(create-razzlee-app): use razzle-dev-utils",
        "diff": "diff --git a/packages/create-razzle-app/lib/index.js b/packages/create-razzle-app/lib/index.js @@ -18,7 +18,7 @@ const prop = key => obj => obj[key];\nconst branch = 'finch'; // this line auto updates when yarn update-examples is run\nconst razzlePkg = `razzle${branch == 'master' ? '' : '@' + branch}`;\n-const razzleDevUtilsPkg = `razzle${branch == 'master' ? '' : '@' + branch}`;\n+const razzleDevUtilsPkg = `razzle-dev-utils${branch == 'master' ? '' : '@' + branch}`;\nconst officialExamplesApiUrl = `https://api.github.com/repos/jaredpalmer/razzle/contents/examples${\nbranch == 'master' ? '' : '?ref=' + branch\n",
        "date": "21.09.2020 20:57:17",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Update razzleDevUtils package name in create-razzle-app lib index"
    },
    {
        "msg": "fix: no defaults, just use plugins to modify",
        "diff": "diff --git a/packages/razzle/config/createConfigAsync.js b/packages/razzle/config/createConfigAsync.js @@ -382,8 +382,8 @@ module.exports = (\nisServer: IS_NODE,\ncwd: paths.appPath,\ncache: true,\n- babelPresetPlugins: razzleOptions.babelPresetPlugins || [],\n- hasModern: !!razzleOptions.modern,\n+ babelPresetPlugins: [],\n+ hasModern: false,\ndevelopment: IS_DEV,\nhasReactRefresh: shouldUseReactRefresh,\n},\n",
        "date": "22.09.2020 22:53:58",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor babel preset plugins and modern flag in createConfigAsync"
    },
    {
        "msg": "fix: test more extensions for static export.",
        "diff": "diff --git a/packages/razzle/config/createConfigAsync.js b/packages/razzle/config/createConfigAsync.js @@ -224,7 +224,10 @@ module.exports = (\nconsole.log('Using .babelrc defined in your app root');\n}\n- const hasStaticExportJs = fs.existsSync(paths.appStaticExportJs + '.js');\n+ const hasStaticExportJs = fs.existsSync(paths.appStaticExportJs + '.js') ||\n+ fs.existsSync(paths.appStaticExportJs + '.jsx') ||\n+ fs.existsSync(paths.appStaticExportJs + '.ts') ||\n+ fs.existsSync(paths.appStaticExportJs + '.tsx');\nconst dotenv = getClientEnv(\ntarget,\n",
        "date": "23.09.2020 19:11:37",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Add support for multiple file extensions in checking for static export file."
    },
    {
        "msg": "fix: test more extensions in static_export",
        "diff": "diff --git a/packages/razzle/config/createConfigAsync.js b/packages/razzle/config/createConfigAsync.js @@ -170,7 +170,10 @@ module.exports = (\nlet webpackOptions = {};\n- const hasStaticExportJs = fs.existsSync(paths.appStaticExportJs + '.js');\n+ const hasStaticExportJs = fs.existsSync(paths.appStaticExportJs + '.js') ||\n+ fs.existsSync(paths.appStaticExportJs + '.jsx') ||\n+ fs.existsSync(paths.appStaticExportJs + '.ts') ||\n+ fs.existsSync(paths.appStaticExportJs + '.tsx');\nconst dotenv = getClientEnv(\ntarget,\n",
        "date": "23.09.2020 19:13:42",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Add support for multiple file extensions in checking for static export file."
    },
    {
        "msg": "fix(razzle): use let so we can redefine config",
        "diff": "diff --git a/packages/razzle/config/createJestConfig.js b/packages/razzle/config/createJestConfig.js @@ -32,7 +32,7 @@ module.exports = (\n// TODO: I don't know if it's safe or not to just use / as path separator\n// in Jest configs. We need help from somebody with Windows to determine this.\n- const config =\n+ let config =\n{\ncollectCoverageFrom: ['src/**/*.{js,jsx,ts,tsx}', '!src/**/*.d.ts'],\n",
        "date": "23.09.2020 19:56:23",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor Jest config to use let instead of const for flexibility"
    },
    {
        "msg": "fix(razzle): use let so config can be redefined",
        "diff": "diff --git a/packages/razzle/config/createJestConfig.js b/packages/razzle/config/createJestConfig.js @@ -33,7 +33,7 @@ module.exports = (\n// TODO: I don't know if it's safe or not to just use / as path separator\n// in Jest configs. We need help from somebody with Windows to determine this.\n- const config = Object.assign(\n+ let config = Object.assign(\n{\ncollectCoverageFrom: ['src/**/*.{js,jsx,ts,tsx}', '!src/**/*.d.ts'],\n",
        "date": "23.09.2020 20:01:41",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor Jest config variable declaration to use let instead of const"
    },
    {
        "msg": "fix(razzle): use \"use\" in newBabel rule",
        "diff": "diff --git a/packages/razzle/config/createConfigAsync.js b/packages/razzle/config/createConfigAsync.js @@ -520,6 +520,7 @@ module.exports = (\n{\ntest: /\\.(js|jsx|mjs|ts|tsx)$/,\ninclude: [paths.appSrc].concat(additionalIncludes),\n+ use: [{\nloader: require.resolve('./babel-loader/razzle-babel-loader'),\noptions: {\nisServer: IS_NODE,\n@@ -531,6 +532,7 @@ module.exports = (\ndevelopment: IS_DEV,\nhasReactRefresh: shouldUseReactRefresh,\n},\n+ }]\n},\n]\n: [\n",
        "date": "02.10.2020 14:41:13",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Add custom babel loader configuration for razzle."
    },
    {
        "msg": "fix(razzle): update copy plugin options to patterns",
        "diff": "diff --git a/packages/razzle/config/createConfigAsync.js b/packages/razzle/config/createConfigAsync.js @@ -896,13 +896,15 @@ module.exports = (\n}),\nwebpackMajor === 5 ? null : new webpack.HashedModuleIdsPlugin(),\nnew webpack.optimize.AggressiveMergingPlugin(),\n- new CopyPlugin([\n+ new CopyPlugin({\n+ patterns: [\n{\nfrom: paths.appPublic + '/**/*',\nto: paths.appBuild,\ncontext: paths.appPath,\n},\n- ]),\n+ ]\n+ }),\n].filter(x => x);\nconfig.optimization = {\n",
        "date": "02.10.2020 18:35:33",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor CopyPlugin configuration in createConfigAsync.js"
    },
    {
        "msg": "fix(razzle): replace backslashes with forward slashes so glob works on windows",
        "diff": "diff --git a/packages/razzle/config/createConfigAsync.js b/packages/razzle/config/createConfigAsync.js @@ -899,7 +899,7 @@ module.exports = (\nnew CopyPlugin({\npatterns: [\n{\n- from: paths.appPublic + '/**/*',\n+ from: paths.appPublic.replace(/\\\\/g, '/') + '/**/*',\nto: paths.appBuild,\ncontext: paths.appPath,\n},\n",
        "date": "02.10.2020 19:45:53",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Fix path separator in CopyPlugin configuration"
    },
    {
        "msg": "fix: grammar issues",
        "diff": "diff --git a/website/pages/static-export.mdx b/website/pages/static-export.mdx @@ -50,7 +50,7 @@ Razzle not only works with React, but also Reason, Elm, Vue, Angular, Svelte, an\nbehind the scenes razzle calls `render` function that exposed from `static_export` module and saves `html` string that you pass to `res.json()` into a html file. for `req` object there is only one property that is `url` which contains the url that we are going to render and save it's result to the html file.\nhtml file destination is relative to the `req.url`, for example if the url is `/product/A` html is going to get saved at `/build/product/A/index.html`.\n-you should call `renderToString()` (or what ever your framework gives you to do SSR) in this function send resonse to `res.json()`\n+you should call `renderToString()` (or what ever your framework gives you to do SSR) in this function and then send result to `res.json()`\n```js\nexport const render = (req, res) => {\n@@ -64,12 +64,12 @@ export const render = (req, res) => {\n};\n```\n-(you can re-export your ssr logic from server.js file and use it `static_export`)\n+(you can re-export your SRR logic from server.js file and use it `static_export`)\n#### routes()\n-you should also export a function called `routes` that returns an array of strings or a promise that will resolve array of strings. razzle will take the urls one by one and pass them one by one to `render`.\n-you should get all paths that your app has from your CMS in this method and return it at the end:\n+you should also export a function called `routes` that returns an array of strings or a promise that will resolve array of strings. razzle will take the urls and will pass them one by one to `render`.\n+you should get all paths that your app has from your CMS in this method and then return it:\n```js\nexport const routes = async () => {\n@@ -81,8 +81,8 @@ export const routes = async () => {\n#### page data\n-you may also need to save the data that your page uses to rehydrate the app on the client side.\n-you can also pass the `data` along the `html` to `res.json({ html, data })` and contents of data object will go inside the `page-data.json` file next to the html file.\n+you may also need to save the data that your page uses to re-hydrate the app on the client side.\n+you can pass the `data` along the `html` to `res.json({ html, data })` and contents of `data` object will get saved in the `page-data.json` next to the related `index.html` file.\n```js\nexport const render = async (req, res) => {\n@@ -98,7 +98,7 @@ export const render = async (req, res) => {\n};\n```\n-(you should also change how your app fetches data on client-side, so it reads data from `page-data.json`)\n+(NOTE: you should change how your app fetches data on client-side, to read data from `page-data.json`)\n## TypeScript Support\n",
        "date": "06.10.2020 03:05:47",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor SSR logic and improve data handling for static export pages"
    },
    {
        "msg": "fix(razzle): use correct dependencies",
        "diff": "diff --git a/packages/razzle/package.json b/packages/razzle/package.json ],\n\"dependencies\": {\n\"@babel/core\": \"7.11.1\",\n- \"@babel/plugin-syntax-bigint\": \"7.8.3\",\n\"@pmmmwh/react-refresh-webpack-plugin\": \"0.3.0\",\n\"assets-webpack-plugin\": \"3.9.12\",\n\"babel-core\": \"^7.0.0-bridge.0\",\n\"babel-loader\": \"^8.0.6\",\n\"babel-plugin-syntax-jsx\": \"6.18.0\",\n\"babel-plugin-transform-define\": \"2.0.0\",\n- \"babel-preset-razzle\": \"canary\",\n+ \"babel-preset-razzle\": \"latest\",\n\"chalk\": \"^3.0.0\",\n\"copy-webpack-plugin\": \"5.1.2\",\n\"css-loader\": \"3.5.3\",\n",
        "date": "06.10.2020 13:13:40",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Update babel-preset-razzle to latest version"
    },
    {
        "msg": "fix(example): use new assets manifest",
        "diff": "diff --git a/examples/basic/src/server.js b/examples/basic/src/server.js @@ -5,6 +5,20 @@ import { renderToString } from 'react-dom/server';\nconst assets = require(process.env.RAZZLE_ASSETS_MANIFEST);\n+const cssLinksFromAssets = (assets, entrypoint) => {\n+ return assets.entrypoints[entrypoint] ? assets.entrypoints[entrypoint].css ?\n+ assets.entrypoints[entrypoint].css.map(asset=>\n+ `<link rel=\"stylesheet\" href=\"${asset}\">`\n+ ).join('') : '' : '';\n+};\n+};\n+const jsScriptTagsFromAssets = (assets, entrypoint, extra = '') => {\n+ return assets.entrypoints[entrypoint] ? assets.entrypoints[entrypoint].js ?\n+ assets.entrypoints[entrypoint].js.map(asset=>\n+ `<script src=\"${asset}\"${extra}></script>`\n+ ).join('') : '' : '';\n+};\n+\nexport const renderApp = (req, res) => {\nconst markup = renderToString(<App />);\n@@ -17,15 +31,11 @@ export const renderApp = (req, res) => {\n<meta charSet='utf-8' />\n<title>Welcome to Razzle</title>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n- ${\n- assets.client.css\n- ? `<link rel=\"stylesheet\" href=\"${assets.client.css}\">`\n- : ''\n- }\n+ ${cssLinksFromAssets(assets, 'client')}\n</head>\n<body>\n<div id=\"root\">${markup}</div>\n- <script src=\"${assets.client.js}\" defer crossorigin></script>\n+ ${jsScriptTagsFromAssets(assets, 'client', ' defer crossorigin')}\n</body>\n</html>`;\n",
        "date": "12.10.2020 18:57:39",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor server.js to extract functions for generating CSS links and JS script tags from assets."
    },
    {
        "msg": "fix(razzle): make RAZZLE_PUBLIC_DIR a relative path in build",
        "diff": "diff --git a/packages/razzle/config/env.js b/packages/razzle/config/env.js @@ -64,7 +64,7 @@ function getClientEnvironment(target, options, paths) {\n// variable available to users.\nRAZZLE_PUBLIC_DIR:\nprocess.env.NODE_ENV === 'production'\n- ? paths.appBuildPublic\n+ ? path.relative(paths.appPath, paths.appBuildPublic)\n: paths.appPublic,\n// Whether or not react-refresh is enabled.\n// react-refresh is not 100% stable at this time,\n",
        "date": "16.10.2020 16:37:22",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor RAZZLE_PUBLIC_DIR path in getClientEnvironment"
    },
    {
        "msg": "fix: make start-server direct dependency",
        "diff": "diff --git a/packages/razzle/package.json b/packages/razzle/package.json \"dependencies\": {\n\"@babel/core\": \"7.11.1\",\n\"@pmmmwh/react-refresh-webpack-plugin\": \"0.3.0\",\n+ \"razzle-start-server-webpack-plugin\": \"4.0.0-canary.4\",\n\"babel-jest\": \"26.3.0\",\n\"babel-loader\": \"^8.0.6\",\n\"babel-plugin-syntax-jsx\": \"6.18.0\",\n\"babel-preset-razzle\": \"4.0.0-canary.4\",\n\"mini-css-extract-plugin\": \"^0.9.0\",\n\"razzle-dev-utils\": \"4.0.0-canary.4\",\n- \"razzle-start-server-webpack-plugin\": \"4.0.0-canary.4\",\n\"webpack-dev-server\": \"^3.11.0\"\n},\n\"keywords\": [\n",
        "date": "24.10.2020 21:41:53",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Add razzle-start-server-webpack-plugin 4.0.0-canary.4 to dependencies"
    },
    {
        "msg": "fix: use razzleOptions.verbose for start-server",
        "diff": "diff --git a/packages/razzle/config/createConfigAsync.js b/packages/razzle/config/createConfigAsync.js @@ -650,7 +650,7 @@ module.exports = (\n// Supress errors to console (we use our own logger)\n!disableStartServer &&\nnew StartServerPlugin({\n- verbose: false,\n+ verbose: razzleOptions.verbose,\nname: 'server.js',\nentryName: 'server',\nnodeArgs,\n",
        "date": "25.10.2020 00:08:18",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor StartServerPlugin verbose option to use razzleOptions.verbose"
    },
    {
        "msg": "fix(razzle): fix for unreleased plugins",
        "diff": "diff --git a/packages/razzle/config/loadPlugins.js b/packages/razzle/config/loadPlugins.js @@ -12,8 +12,9 @@ function loadPlugin(plugin, paths) {\nreturn [plugin, {}];\n}\n- // Support for not released plugins\n- if (typeof plugin === 'object') {\n+ // Support for not released plugins without options\n+ // Use plugin.object if you need options\n+ if (typeof plugin === 'object' && !plugin.name && !plugin.object) {\nreturn [plugin, {}];\n}\n",
        "date": "11.11.2020 19:31:56",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor loadPlugins.js to support not released plugins without options"
    },
    {
        "msg": "fix(razzle): fix typo",
        "diff": "diff --git a/packages/razzle/config/createConfigAsync.js b/packages/razzle/config/createConfigAsync.js @@ -346,7 +346,7 @@ module.exports = (\n].filter(x => x),\n});\n- webpackOptions.fileLoaderExlude = [\n+ webpackOptions.fileLoaderExclude = [\n/\\.html$/,\n/\\.(js|jsx|mjs)$/,\n/\\.(ts|tsx)$/,\n@@ -563,7 +563,7 @@ module.exports = (\n]\n).concat([\n{\n- exclude: webpackOptions.fileLoaderExlude,\n+ exclude: webpackOptions.fileLoaderExclude,\nloader: require.resolve('file-loader'),\noptions: {\nname: `${razzleOptions.mediaPrefix}/[name].[${\n",
        "date": "08.12.2020 18:44:43",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Fix typo in fileLoaderExclude variable name"
    },
    {
        "msg": "fix(examples): fix with-typescript example",
        "diff": "diff --git a/examples/with-typescript/src/index.ts b/examples/with-typescript/src/index.ts @@ -18,10 +18,6 @@ const port = process.env.PORT ? parseInt(process.env.PORT, 10) : 3000;\nexport default express()\n.use((req, res) => app.handle(req, res))\n- .listen(port, (err: Error) => {\n- if (err) {\n- console.error(err);\n- return;\n- }\n+ .listen(port, () => {\nconsole.log(`> App started http://localhost:${port}`)\n});\n",
        "date": "16.12.2020 18:53:32",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor server startup code in index.ts"
    },
    {
        "msg": "fix(razzle): join paths in appDirectory",
        "diff": "diff --git a/packages/razzle/config/paths.js b/packages/razzle/config/paths.js @@ -6,7 +6,7 @@ const url = require('url');\n// Make sure any symlinks in the project folder are resolved:\n// https://github.com/facebookincubator/create-react-app/issues/637\n-const appDirectory = fs.realpathSync(process.env.RAZZLE_APP_PATH || process.cwd());\n+const appDirectory = fs.realpathSync(path.join(process.cwd(), process.env.RAZZLE_APP_PATH || ''));\nconst resolveApp = relativePath => path.resolve(appDirectory, relativePath);\nconst envPublicUrl = process.env.PUBLIC_URL;\n",
        "date": "21.12.2020 17:27:54",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Fix issue with resolving app directory path"
    },
    {
        "msg": "fix(razzle): pass verbose down to compile",
        "diff": "diff --git a/packages/razzle/scripts/start.js b/packages/razzle/scripts/start.js @@ -64,7 +64,7 @@ function main() {\n// Delete assets.json to always have a manifest up to date\nfs.removeSync(paths.appAssetsManifest);\n- const clientCompiler = compile(clientConfig);\n+ const clientCompiler = compile(clientConfig, verbose);\nlet serverCompiler;\nlet serverConfig;\n@@ -79,7 +79,7 @@ function main() {\nplugins,\nrazzleOptions\n);\n- serverCompiler = compile(serverConfig);\n+ serverCompiler = compile(serverConfig, verbose);\n}\nconst port = razzle.port || clientConfig.devServer.port;\n@@ -143,7 +143,7 @@ function main() {\n}\n// Webpack compile in a try-catch\n-function compile(config) {\n+function compile(config, verbose) {\nlet compiler;\ntry {\ncompiler = webpack(config);\n",
        "date": "22.12.2020 13:08:07",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Add verbose option to compile function"
    },
    {
        "msg": "fix(razzle-plugins): use Dart sass instead of deprecated node-sass\nWebpack sass-loader recommends this, node-sass doesn't work with PnP\neither",
        "diff": "diff --git a/packages/razzle-plugin-scss/package.json b/packages/razzle-plugin-scss/package.json \"autoprefixer\": \"10.0.1\",\n\"css-loader\": \"5.0.0\",\n\"deepmerge\": \"4.2.2\",\n- \"node-sass-chokidar\": \"1.5.0\",\n\"postcss-flexbugs-fixes\": \"4.2.1\",\n\"postcss-load-config\": \"3.0.0\",\n\"postcss-loader\": \"4.0.4\",\n\"postcss-scss\": \"3.0.2\",\n\"resolve-url-loader\": \"3.1.2\",\n+ \"sass\": \"^1.29.0\",\n\"sass-loader\": \"10.0.3\"\n},\n\"devDependencies\": {\n",
        "date": "16.12.2020 19:18:23",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Update sass package to version 1.29.0"
    },
    {
        "msg": "fix(razzle): Use 'request' when externalizing modules for node externals.",
        "diff": "diff --git a/packages/razzle/config/createConfigAsync.js b/packages/razzle/config/createConfigAsync.js @@ -410,17 +410,10 @@ module.exports = (\n// Anything else that is standard JavaScript within `node_modules`\n// can be externalized.\nif (res.match(/node_modules[/\\\\].*\\.js$/)) {\n- const externalRequest = path.posix.join(\n- paths.appPath,\n- path\n- .relative(paths.appPath, res)\n- // Windows path normalization\n- .replace(/\\\\/g, '/')\n- );\nif (debugNodeExternals) {\n- console.log(`Externalizing ${request} as ${externalRequest}`);\n+ console.log(`Externalizing ${request} (node_modules)`);\n}\n- return callback(undefined, `commonjs ${externalRequest}`);\n+ return callback(undefined, `commonjs ${request}`);\n}\nif (debugNodeExternals) {\n",
        "date": "02.01.2021 21:04:05",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor externalization of node_modules in createConfigAsync"
    },
    {
        "msg": "fix(examples): fix with-devcert-https example",
        "diff": "diff --git a/examples/with-devcert-https/razzle.config.js b/examples/with-devcert-https/razzle.config.js 'use strict';\nmodule.exports = {\n- modifyWebpackConfig(opts) {\n+ modifyWebpackOptions(opts) {\nconst options = opts.webpackOptions;\n-\nreturn new Promise(async (resolve) => {\nconst httpsCredentials = await devcert.certificateFor('localhost');\n+ const stringHttpsCredentials = {\n+ key: httpsCredentials.key.toString(),\n+ cert: httpsCredentials.cert.toString()\n+ };\nif (opts.env.target === 'node' && opts.env.dev) {\n- options.definePluginOptions.HTTPS_CREDENTIALS = JSON.stringify(httpsCredentials);\n+ options.definePluginOptions.HTTPS_CREDENTIALS = JSON.stringify(stringHttpsCredentials);\n}\nif (opts.env.target === 'web' && opts.env.dev) {\noptions.HTTPS_CREDENTIALS = httpsCredentials;\n",
        "date": "07.01.2021 12:59:07",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor modifyWebpackConfig to modifyWebpackOptions and update HTTPS credentials format"
    },
    {
        "msg": "fix(examples): fix with-devcert-https readme",
        "diff": "diff --git a/examples/with-devcert-https/README.md b/examples/with-devcert-https/README.md @@ -9,9 +9,9 @@ This is the canary release documentation for this example\nCreate and start the example:\n```bash\n-npx create-razzle-app@canary --example with-promise-config with-promise-config\n+npx create-razzle-app@canary --example with-devcert-https with-devcert-https\n-cd with-promise-config\n+cd with-devcert-https\nyarn start\n```\n<!-- END install generated instructions please keep comment here to allow auto update -->\n@@ -29,18 +29,30 @@ Node.js-compatible JavaScript.\n'use strict';\nmodule.exports = {\n+ modifyWebpackOptions(opts) {\n+ const options = opts.webpackOptions;\n+ return new Promise(async (resolve) => {\n+ const httpsCredentials = await devcert.certificateFor('localhost');\n+ const stringHttpsCredentials = {\n+ key: httpsCredentials.key.toString(),\n+ cert: httpsCredentials.cert.toString()\n+ };\n+ if (opts.env.target === 'node' && opts.env.dev) {\n+ options.definePluginOptions.HTTPS_CREDENTIALS = JSON.stringify(stringHttpsCredentials);\n+ }\n+ if (opts.env.target === 'web' && opts.env.dev) {\n+ options.HTTPS_CREDENTIALS = httpsCredentials;\n+ }\n+ resolve(options);\n+ });\n+ },\nmodifyWebpackConfig(opts) {\nconst config = opts.webpackConfig;\n-\n- return new Promise((resolve) => {\n- setTimeout(() => {\n- // Change the name of the server output file in production\n- if (opts.env.target === 'node' && !opts.env.dev) {\n- config.output.filename = 'custom.js';\n+ const options = opts.webpackOptions;\n+ if (opts.env.target === 'web' && opts.env.dev) {\n+ config.devServer.https = options.HTTPS_CREDENTIALS;\n}\n- resolve(config);\n- }, 10);\n- });\n+ return config;\n},\n};\n",
        "date": "07.01.2021 13:04:08",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Update README.md with changes to use devcert-https in the example"
    },
    {
        "msg": "fix(razzle): don't quiet server compiler if verbose",
        "diff": "diff --git a/packages/razzle/scripts/start.js b/packages/razzle/scripts/start.js @@ -105,7 +105,7 @@ function main() {\n// Otherwise, create a new watcher for our server code.\nwatching = serverCompiler.watch(\n{\n- quiet: true,\n+ quiet: !verbose,\nstats: 'none',\n},\n/* eslint-disable no-unused-vars */\n",
        "date": "07.01.2021 16:05:28",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Update server compiler options to use verbose flag in start script"
    },
    {
        "msg": "fix(examples): use more hooks and correct options",
        "diff": "diff --git a/examples/with-devcert-https/razzle.config.js b/examples/with-devcert-https/razzle.config.js 'use strict';\nmodule.exports = {\n- modifyWebpackOptions(opts) {\n- const options = opts.webpackOptions;\n+ modifyOptions(opts) { // use modifyOptions so certificateFor is called once\n+ const options = opts.options.razzleOptions;\nreturn new Promise(async (resolve) => {\nconst httpsCredentials = await devcert.certificateFor('localhost');\nconst stringHttpsCredentials = {\nkey: httpsCredentials.key.toString(),\ncert: httpsCredentials.cert.toString()\n};\n- if (opts.env.target === 'node' && opts.env.dev) {\n- options.definePluginOptions.HTTPS_CREDENTIALS = JSON.stringify(stringHttpsCredentials);\n- }\n- if (opts.env.target === 'web' && opts.env.dev) {\n- options.HTTPS_CREDENTIALS = httpsCredentials;\n- }\n+ options.HTTPS_CREDENTIALS = stringHttpsCredentials;\nresolve(options);\n});\n},\n+ modifyWebpackOptions(opts) {\n+ const options = opts.options.razzleOptions;\n+ if (opts.env.target === 'node' && opts.env.dev) {\n+ options.definePluginOptions.HTTPS_CREDENTIALS = JSON.stringify(options.HTTPS_CREDENTIALS);\n+ }\n+ return options;\n+ },\nmodifyWebpackConfig(opts) {\n- const config = opts.webpackConfig;\n- const options = opts.webpackOptions;\n+ const config = opts.options.webpackConfig;\n+ const options = opts.options.razzleOptions;\nif (opts.env.target === 'web' && opts.env.dev) {\nconfig.devServer.https = options.HTTPS_CREDENTIALS;\n}\n",
        "date": "07.01.2021 16:10:41",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor modifyWebpackOptions to use modifyOptions for calling certificateFor once"
    },
    {
        "msg": "fix(razzle): run setupEnvironment before modifyOptioms",
        "diff": "diff --git a/packages/razzle/config/loadRazzleConfig.js b/packages/razzle/config/loadRazzleConfig.js @@ -33,6 +33,8 @@ module.exports = (webpackObject, razzleConfig, packageJsonIn) => {\n}\n}\n+ setupEnvironment(paths);\n+\nlet razzleOptions = merge(defaultRazzleOptions, razzle.options || {});\nif (packageJson.browserslist) {\n@@ -91,8 +93,6 @@ module.exports = (webpackObject, razzleConfig, packageJsonIn) => {\n});\n}\n- setupEnvironment(paths);\n-\nresolve({\nrazzle,\nrazzleOptions,\n",
        "date": "08.01.2021 13:49:07",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor setupEnvironment function and merge razzleOptions in loadRazzleConfig"
    },
    {
        "msg": "fix(razzle): fix wds served from message",
        "diff": "diff --git a/packages/razzle/config/createConfigAsync.js b/packages/razzle/config/createConfigAsync.js @@ -776,6 +776,7 @@ module.exports = (\ndisableDotRule: true,\n},\nhost: dotenv.raw.HOST,\n+ publicPath: clientPublicPath,\nhot: true,\nnoInfo: true,\noverlay: false,\n@@ -890,7 +891,6 @@ module.exports = (\nif (IS_DEV) {\nconfig.devServer.contentBase = paths.appPublic;\nconfig.devServer.watchContentBase = true;\n- config.devServer.publicPath = '/';\n}\nconfig.plugins = [\n",
        "date": "08.01.2021 16:05:12",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Add clientPublicPath to devServer config and remove publicPath assignment in devServer config"
    },
    {
        "msg": "fix(examples): monorepo example running as expected",
        "diff": "diff --git a/examples/with-monorepo/package.json b/examples/with-monorepo/package.json \"version\": \"4.0.0-canary.16\",\n\"license\": \"MIT\",\n\"scripts\": {\n- \"start-1\": \"RAZZLE_APP_PATH=basic-1 razzle start\",\n- \"build-1\": \"RAZZLE_APP_PATH=basic-1 razzle build\",\n- \"test-1\": \"RAZZLE_APP_PATH=basic-1 razzle test --env=jsdom\",\n- \"start:prod-1\": \"RAZZLE_APP_PATH=basic-1 NODE_ENV=production node basic-1/build/server.js\",\n- \"start-2\": \"RAZZLE_APP_PATH=basic-2 razzle start\",\n- \"build-2\": \"RAZZLE_APP_PATH=basic-2 razzle build\",\n- \"test-2\": \"RAZZLE_APP_PATH=basic-2 razzle test --env=jsdom\",\n- \"start:prod-2\": \"RAZZLE_APP_PATH=basic-2 NODE_ENV=production node basic-2/build/server.js\"\n+ \"start-1\": \"cross-env RAZZLE_APP_PATH=basic-1 razzle start\",\n+ \"build-1\": \"cross-env RAZZLE_APP_PATH=basic-1 razzle build\",\n+ \"test-1\": \"cross-env RAZZLE_APP_PATH=basic-1 razzle test --env=jsdom\",\n+ \"start:prod-1\": \"cross-env RAZZLE_APP_PATH=basic-1 NODE_ENV=production node basic-1/build/server.js\",\n+ \"start-2\": \"cross-env RAZZLE_APP_PATH=basic-2 PORT=3002 razzle start\",\n+ \"build-2\": \"cross-env RAZZLE_APP_PATH=basic-2 PORT=3002 razzle build\",\n+ \"test-2\": \"cross-env RAZZLE_APP_PATH=basic-2 PORT=3002 razzle test --env=jsdom\",\n+ \"start:prod-2\": \"cross-env RAZZLE_APP_PATH=basic-2 PORT=3002 NODE_ENV=production node basic-2/build/server.js\",\n+ \"start\": \"concurrently \\\"yarn start-1\\\" \\\"yarn start-2\\\"\",\n+ \"start:prod\": \"concurrently \\\"yarn start:prod-1\\\" \\\"yarn start:prod-2\\\"\",\n+ \"build\": \"concurrently \\\"yarn build-1\\\" \\\"yarn build-2\\\"\"\n},\n\"workspaces\": [\n\"basic-1\",\n\"basic-2\"\n],\n\"devDependencies\": {\n+ \"concurrently\": \"^5.3.0\",\n+ \"cross-env\": \"^7.0.3\",\n\"razzle\": \"4.0.0-canary.8\",\n\"razzle-dev-utils\": \"4.0.0-canary.8\",\n\"mini-css-extract-plugin\": \"^0.9.0\",\n",
        "date": "11.01.2021 18:04:14",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Add cross-env, concurrently, and update start scripts for basic-1 and basic-2 applications"
    },
    {
        "msg": "fix(razzle): allow toggling htmlWebpack plugin",
        "diff": "diff --git a/packages/razzle/config/createConfigAsync.js b/packages/razzle/config/createConfigAsync.js @@ -230,7 +230,8 @@ module.exports = (\n}\n}\n- if (clientOnly) {\n+ webpackOptions.enableHtmlWebpackPlugin = clientOnly;\n+\nwebpackOptions.htmlWebpackPluginOptions = Object.assign(\n{},\n{\n@@ -254,7 +255,6 @@ module.exports = (\n}\n: {}\n);\n- }\nwebpackOptions.browserslist = razzleOptions.browserslist;\n@@ -529,7 +529,8 @@ module.exports = (\nimportLoaders: 1,\nmodules: {\nauto: true,\n- exportOnlyLocals: true\n+ exportOnlyLocals: true,\n+ localIdentName: '[name]__[local]___[hash:base64:5]',\n},\n},\n},\n@@ -892,7 +893,9 @@ module.exports = (\nconfig.devServer.contentBase = paths.appPublic;\nconfig.devServer.watchContentBase = true;\n}\n+ }\n+ if (webpackOptions.enableHtmlWebpackPlugin) {\nconfig.plugins = [\n...config.plugins,\n// Generates an `index.html` file with the <script> injected.\n",
        "date": "11.01.2021 20:17:31",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Add support for HtmlWebpackPlugin and localIdentName in CSS modules"
    },
    {
        "msg": "fix(razzle): fix localIdentName for css modules in server",
        "diff": "diff --git a/packages/razzle/config/createConfigAsync.js b/packages/razzle/config/createConfigAsync.js @@ -530,7 +530,7 @@ module.exports = (\nmodules: {\nauto: true,\nexportOnlyLocals: true,\n- localIdentName: '[name]__[local]___[hash:base64:5]',\n+ localIdentName: '[name]__[local]___[hash:base64:5]'\n},\n},\n},\n",
        "date": "11.01.2021 20:22:25",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Remove trailing comma in localIdentName configuration in createConfigAsync.js"
    },
    {
        "msg": "fix(razzle): fix modifyBabelPreset",
        "diff": "diff --git a/packages/razzle/config/babel-loader/razzle-babel-loader.js b/packages/razzle/config/babel-loader/razzle-babel-loader.js @@ -232,7 +232,7 @@ module.exports = babelLoader.custom(function(babel) {\nif (razzleContext.modifyBabelPreset) {\npresetOptions = razzleContext.modifyBabelPreset(\nmerge(razzleContext.configContext, {\n- options: { pluginOptions, presetOptions }\n+ options: { presetOptions }\n})\n);\n}\n",
        "date": "12.01.2021 00:51:08",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor babel preset options in razzle-babel-loader"
    },
    {
        "msg": "fix(razzle): babel-jest with babelrc file\ncreateTransformer used to be able to accept `presets: false`\nbut now it now requires null or undefined",
        "diff": "diff --git a/packages/razzle/config/jest/babelTransform.js b/packages/razzle/config/jest/babelTransform.js @@ -7,7 +7,7 @@ const fs = require('fs-extra');\nconst hasBabelRc = fs.existsSync(paths.appBabelRc);\nconst config = {\n- presets: !hasBabelRc && [require.resolve('babel-preset-razzle')],\n+ presets: !hasBabelRc ? [require.resolve('babel-preset-razzle')] : [],\nbabelrc: !!hasBabelRc,\n};\n",
        "date": "11.01.2021 19:26:54",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Fix babelTransform.js presets configuration to handle cases where babelrc is not present"
    },
    {
        "msg": "fix(razzle): disable pnp plugin with webpack 5",
        "diff": "diff --git a/packages/razzle/config/createConfigAsync.js b/packages/razzle/config/createConfigAsync.js @@ -475,16 +475,14 @@ module.exports = (\nadditionalAliases\n),\nplugins: [\n- // TODO: Remove when using webpack 5\n- PnpWebpackPlugin,\n- ],\n+ webpackMajor !== 5 && PnpWebpackPlugin,\n+ ].filter(x => x),\n},\nresolveLoader: {\nmodules: [paths.appNodeModules, paths.ownNodeModules],\nplugins: [\n- // TODO: Remove when using webpack 5\n- PnpWebpackPlugin.moduleLoader(module),\n- ],\n+ webpackMajor !== 5 && PnpWebpackPlugin.moduleLoader(module),\n+ ].filter(x => x),\n},\nmodule: {\nstrictExportPresence: true,\n@@ -587,7 +585,7 @@ module.exports = (\n? webpackOptions.nodeExternals : [webpackOptions.nodeExternals];\n// We need to tell webpack what to bundle into our Node bundle.\n- config.externals = (!IS_SERVERLESS ? [nodeExternalsFunc] : []).concat(webpackOptions.nodeExternals);\n+ config.externals = (!IS_SERVERLESS ? [nodeExternalsFunc] : []).concat(nodeExternals);\n// Specify webpack Node.js output path and filename\nconfig.output = {\n@@ -832,7 +830,7 @@ module.exports = (\n? webpackOptions.clientExternals : [webpackOptions.clientExternals];\n// We need to tell webpack what to bundle into our client bundle.\n- config.externals = webpackOptions.clientExternals;\n+ config.externals = clientExternals;\n// Specify the client output directory and paths. Notice that we have\n// changed the publiPath to just '/' from http://localhost:3001. This is because\n",
        "date": "15.01.2021 19:52:11",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor webpack configuration for compatibility with webpack 5"
    },
    {
        "msg": "fix(razzle): fix a logic error with forceRuntimeEnvVars",
        "diff": "diff --git a/packages/razzle/config/env.js b/packages/razzle/config/env.js @@ -74,7 +74,7 @@ function getClientEnvironment(target, is_dev, options, paths) {\n);\n// Stringify all values so we can feed into Webpack DefinePlugin\nconst stringified = Object.keys(raw).reduce((env, key) => {\n- if (!is_dev && !options.forceRuntimeEnvVars.includes(key)) {\n+ if (!options.forceRuntimeEnvVars.includes(key) || is_dev) {\nenv[`process.env.${key}`] = JSON.stringify(raw[key]);\n}\nreturn env;\n",
        "date": "20.01.2021 19:18:12",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Fix conditional logic for defining environment variables in Webpack DefinePlugin"
    },
    {
        "msg": "fix(razzle): allow adding plugins as",
        "diff": "diff --git a/packages/razzle/config/loadPlugins.js b/packages/razzle/config/loadPlugins.js @@ -28,7 +28,11 @@ function loadPlugin(plugin, paths) {\nreturn [plugin.object, plugin.options];\n}\n- const completePluginNames = [`razzle-plugin-${plugin.name}`, `${plugin.name}/razzle-plugin`];\n+ const completePluginNames = [\n+ `razzle-plugin-${plugin.name}`,\n+ `${plugin.name}/razzle-plugin`,\n+ plugin.name.includes('/') && plugin.name\n+ ].filter(Boolean);\n// Try to find the plugin in node_modules\nlet razzlePlugin = null;\n",
        "date": "22.01.2021 16:51:21",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor plugin name handling in loadPlugins.js"
    },
    {
        "msg": "fix(razzle-start-server-webpack-plugin): handle SIGINT by passing it down to worker",
        "diff": "diff --git a/packages/razzle-start-server-webpack-plugin/dist/StartServerPlugin.js b/packages/razzle-start-server-webpack-plugin/dist/StartServerPlugin.js @@ -62,6 +62,7 @@ class StartServerPlugin {\nthis._handleChildError = this._handleChildError.bind(this);\nthis._handleChildExit = this._handleChildExit.bind(this);\nthis._handleChildMessage = this._handleChildMessage.bind(this);\n+ this._handleWebpackExit = this._handleWebpackExit.bind(this);\nthis.worker = null;\nif (this.options.restartable && !options.once) {\n@@ -141,9 +142,14 @@ class StartServerPlugin {\n_handleChildExit(code, signal) {\nif (code) this._error('script exited with code', code);\n- if (signal && signal !== 'SIGTERM') this._error('script exited after signal', signal);\nthis.worker = null;\n+ if (signal && signal !== 'SIGTERM') {\n+ this._error('script exited after signal', signal);\n+\n+ return;\n+ }\n+\nif (!this.workerLoaded) {\nthis._error('Script did not load, or HMR failed; not restarting');\n@@ -161,6 +167,12 @@ class StartServerPlugin {\nthis._runWorker();\n}\n+ _handleWebpackExit() {\n+ if (this.worker) {\n+ process.kill(this.worker.pid, 'SIGINT');\n+ }\n+ }\n+\n_handleChildError(err) {\nthis.worker = null;\n}\n@@ -206,11 +218,12 @@ class StartServerPlugin {\n})\n});\n- worker.once('exit', this._handleChildExit);\n- worker.once('error', this._handleChildError);\n+ worker.on('exit', this._handleChildExit);\n+ worker.on('error', this._handleChildError);\nworker.on('message', this._handleChildMessage);\nworker.stdout.on('data', this._worker_info);\nworker.stderr.on('data', this._worker_error);\n+ process.on('SIGINT', this._handleWebpackExit);\nthis.worker = worker;\nif (callback) callback();\n}\n",
        "date": "22.01.2021 17:38:52",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Add handling for webpack exit signal in StartServerPlugin"
    },
    {
        "msg": "fix(razzle): make sure client dev server closes",
        "diff": "diff --git a/packages/razzle/scripts/start.js b/packages/razzle/scripts/start.js @@ -133,6 +133,13 @@ function main() {\nlogger.error(err);\n}\n});\n+\n+ ['SIGINT', 'SIGTERM'].forEach(sig => {\n+ process.on(sig, () => {\n+ clientDevServer.close();\n+ });\n+ });\n+\nresolve();\n}\n);\n",
        "date": "22.01.2021 19:07:02",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Add signal handlers to close clientDevServer on SIGINT and SIGTERM signals"
    },
    {
        "msg": "fix(razzle-plugins): postcss options not applied by razzle-plugin-scss",
        "diff": "diff --git a/packages/razzle-plugin-scss/index.js b/packages/razzle-plugin-scss/index.js @@ -113,7 +113,7 @@ module.exports = {\noptions: hasPostCssConfig()\n? undefined\n: { postcssOptions: Object.assign({}, options.postcss[constantEnv], {\n- plugins: () => options.postcss.plugins,\n+ plugins: options.postcss.plugins,\n})},\n};\n",
        "date": "23.01.2021 10:45:41",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor postcssOptions assignment in razzle-plugin-scss index.js"
    },
    {
        "msg": "fix(razzle-plugin-less): fix postcss plugin options",
        "diff": "diff --git a/packages/razzle-plugin-less/index.js b/packages/razzle-plugin-less/index.js @@ -109,7 +109,7 @@ module.exports = {\noptions: hasPostCssConfig()\n? undefined\n: { postcssOptions: Object.assign({}, options.postcss[constantEnv], {\n- plugins: () => options.postcss.plugins,\n+ plugins: options.postcss.plugins,\n})},\n};\n",
        "date": "25.01.2021 18:57:25",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor postcssOptions assignment in razzle-plugin-less index.js"
    },
    {
        "msg": "fix(razzle): remove debug logging",
        "diff": "diff --git a/packages/razzle/config/createConfigAsync.js b/packages/razzle/config/createConfigAsync.js @@ -724,7 +724,6 @@ module.exports = (\n.map(file => !file.path.includes('/.') && file.path)\n.filter(Boolean)\n.reduce((types, file) => {\n- console.log(file);\nconst fileType = file.slice(file.lastIndexOf('.') + 1);\ntypes[fileType] = types[fileType] || [];\ntypes[fileType].push(file);\n",
        "date": "25.01.2021 23:43:42",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Remove console.log statement and refactor file type handling in createConfigAsync module"
    },
    {
        "msg": "fix(razzle): try fixing yarn create",
        "diff": "diff --git a/packages/create-razzle-app/lib/index.js b/packages/create-razzle-app/lib/index.js @@ -54,12 +54,18 @@ module.exports = function createRazzleApp(opts) {\nloadGitHubExample({\nprojectName: projectName,\nexample: opts.example,\n- }).then(installWithMessageFactory(opts, true));\n+ }).then(installWithMessageFactory(opts, true))\n+ .catch(function(err) {\n+ throw err;\n+ });\n} else if (/^git\\+/.test(opts.example)) {\nloadGitExample({\nprojectName: projectName,\nexample: opts.example,\n- }).then(installWithMessageFactory(opts, true));\n+ }).then(installWithMessageFactory(opts, true))\n+ .catch(function(err) {\n+ throw err;\n+ });\n} else if (/^file:/.test(opts.example)) {\nconst examplePath = path.resolve(\npath.join(process.cwd(), opts.example.slice(5))\n@@ -69,19 +75,28 @@ module.exports = function createRazzleApp(opts) {\ntemplatePath: examplePath,\nprojectPath: projectPath,\nprojectName: projectName,\n- }).then(installWithMessageFactory(opts, true));\n+ }).then(installWithMessageFactory(opts, true))\n+ .catch(function(err) {\n+ throw err;\n+ });\n} else {\ngetOfficialExamples().then(officialExamples => {\nif (officialExamples.includes(opts.example)) {\nloadExample({\nprojectName: projectName,\nexample: opts.example,\n- }).then(installWithMessageFactory(opts, true));\n+ }).then(installWithMessageFactory(opts, true))\n+ .catch(function(err) {\n+ throw err;\n+ });\n} else {\nloadNpmExample({\nprojectName: projectName,\nexample: opts.example,\n- }).then(installWithMessageFactory(opts, true));\n+ }).then(installWithMessageFactory(opts, true))\n+ .catch(function(err) {\n+ throw err;\n+ });\n}\n});\n}\n",
        "date": "28.01.2021 16:12:22",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Fix error handling in createRazzleApp function"
    },
    {
        "msg": "fix(razzle): add missing transitive dep",
        "diff": "diff --git a/packages/razzle/package.json b/packages/razzle/package.json ],\n\"dependencies\": {\n\"@babel/core\": \"7.11.1\",\n+ \"@babel/plugin-transform-modules-commonjs\": \"^7.12.1\",\n\"@pmmmwh/react-refresh-webpack-plugin\": \"0.4.3\",\n\"babel-jest\": \"26.3.0\",\n\"babel-loader\": \"^8.0.6\",\n\"terser-webpack-plugin\": \"^2.3.5\",\n\"tiny-async-pool\": \"^1.1.0\",\n\"url-loader\": \"^2.3.0\",\n+ \"webpack\": \"^5.18.0\",\n\"webpack-manifest-plugin\": \"3.0.0-rc.0\",\n- \"webpackbar\": \"^4.0.0\"\n+ \"webpackbar\": \"^5.0.0-3\"\n},\n\"peerDependencies\": {\n\"babel-preset-razzle\": \"4.0.0-canary.25\",\n\"mini-css-extract-plugin\": \"^0.9.0\",\n\"razzle-dev-utils\": \"4.0.0-canary.25\",\n+ \"webpack\": \"4 || 5\",\n\"webpack-dev-server\": \"^3.11.0\"\n},\n\"keywords\": [\n",
        "date": "29.01.2021 01:49:15",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Update webpack and webpackbar versions in package.json"
    },
    {
        "msg": "fix(razzle): more relaxed deps",
        "diff": "diff --git a/packages/razzle/package.json b/packages/razzle/package.json \"terser-webpack-plugin\": \"^2.3.5\",\n\"tiny-async-pool\": \"^1.1.0\",\n\"url-loader\": \"^2.3.0\",\n- \"webpack\": \"^5.18.0\",\n+ \"webpack\": \"4 || 5\",\n\"webpack-manifest-plugin\": \"3.0.0-rc.0\",\n- \"webpackbar\": \"^5.0.0-3\"\n+ \"webpackbar\": \"4 || 5\"\n},\n\"peerDependencies\": {\n\"babel-preset-razzle\": \"4.0.0-canary.25\",\n",
        "date": "29.01.2021 01:51:45",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Update webpack and webpackbar versions in package.json"
    },
    {
        "msg": "fix(example): remove noemit and strict, add emitDecoratorMetaData",
        "diff": "diff --git a/examples/with-typeorm-graphql/tsconfig.json b/examples/with-typeorm-graphql/tsconfig.json \"esModuleInterop\": true,\n\"allowSyntheticDefaultImports\": true,\n\"experimentalDecorators\": true,\n- \"strict\": true,\n+ \"emitDecoratorMetadata\": true,\n+ \"strict\": false,\n\"forceConsistentCasingInFileNames\": true,\n\"module\": \"esnext\",\n\"moduleResolution\": \"node\",\n\"resolveJsonModule\": true,\n\"isolatedModules\": true,\n- \"noEmit\": true,\n\"jsx\": \"react\"\n},\n\"include\": [\"src\"]\n",
        "date": "31.01.2021 19:24:42",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Update tsconfig.json to enable decorator metadata and disable strict mode"
    },
    {
        "msg": "fix(example): add typescript metadate in preset options",
        "diff": "diff --git a/examples/with-typeorm-graphql/babel.config.json b/examples/with-typeorm-graphql/babel.config.json \"preset-typescript\": { \"onlyRemoveTypeImports\": true },\n\"decorators\": { \"legacy\": true },\n\"parameter-decorator\": true,\n+ \"typescript-metadata\": true,\n\"class-properties\": { \"loose\": true },\n}]\n]\n",
        "date": "31.01.2021 20:09:43",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Add support for TypeScript metadata in babel configuration"
    },
    {
        "msg": "fix(razzle-start-server-webpack-plugin): forgot to build it again",
        "diff": "diff --git a/packages/razzle-start-server-webpack-plugin/dist/StartServerPlugin.js b/packages/razzle-start-server-webpack-plugin/dist/StartServerPlugin.js @@ -317,7 +317,7 @@ class StartServerPlugin {\n}\napply(compiler) {\n- const inject = this.opions.inject; // webpack v4+\n+ const inject = this.options.inject; // webpack v4+\nif (webpackMajorVersion >= 4) {\nconst plugin = {\n",
        "date": "01.02.2021 18:06:26",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Fix typo in options variable name"
    },
    {
        "msg": "fix(babel-loader): supportsStaticESM should come from bundler",
        "diff": "diff --git a/packages/razzle/config/babel-loader/razzle-babel-loader.js b/packages/razzle/config/babel-loader/razzle-babel-loader.js @@ -64,7 +64,6 @@ module.exports = babelLoader.custom(function(babel) {\nisServer: opts.isServer,\nisModern: opts.isModern,\nhasModern: opts.hasModern,\n- supportsStaticESM: opts.supportsStaticESM,\ndevelopment: opts.development,\nshouldUseReactRefresh: opts.shouldUseReactRefresh,\n};\n@@ -102,7 +101,6 @@ module.exports = babelLoader.custom(function(babel) {\ndelete loader.distDir;\ndelete loader.isModern;\ndelete loader.hasModern;\n- delete loader.supportsStaticESM;\ndelete loader.development;\ndelete loader.shouldUseReactRefresh;\nreturn { loader, custom };\n@@ -114,7 +112,6 @@ module.exports = babelLoader.custom(function(babel) {\nconst isServer = customOptions.isServer;\nconst isModern = customOptions.isModern;\nconst hasModern = customOptions.hasModern;\n- const supportsStaticESM = customOptions.supportsStaticESM;\nconst development = customOptions.development;\nconst shouldUseReactRefresh = customOptions.shouldUseReactRefresh;\n@@ -137,7 +134,6 @@ module.exports = babelLoader.custom(function(babel) {\npresetOptions.caller.isServer = isServer;\npresetOptions.caller.isModern = isModern;\npresetOptions.caller.isDev = development;\n- presetOptions.caller.supportsStaticESM = supportsStaticESM;\nconst emitWarning = this.emitWarning.bind(this);\nObject.defineProperty(presetOptions.caller, 'onWarning', {\n",
        "date": "01.02.2021 20:51:33",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Remove supportsStaticESM option from babel loader configuration"
    },
    {
        "msg": "fix(razzle): make webpack context paths.appPath",
        "diff": "diff --git a/packages/razzle/config/createConfigAsync.js b/packages/razzle/config/createConfigAsync.js @@ -454,8 +454,8 @@ module.exports = (\nlet config = {\n// Set webpack mode:\nmode: IS_DEV ? 'development' : 'production',\n- // Set webpack context to the current command's directory\n- context: process.cwd(),\n+ // Set webpack context to the current apps directory\n+ context: paths.appPath,\n// Specify target (either 'node' or 'web')\ntarget: target,\n// Controversially, decide on sourcemaps.\n",
        "date": "01.02.2021 23:34:44",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Set webpack context to the current apps directory"
    },
    {
        "msg": "fix(razzle): fixed a bug wgit inspect args to startserver",
        "diff": "diff --git a/packages/razzle/config/createConfigAsync.js b/packages/razzle/config/createConfigAsync.js @@ -175,6 +175,14 @@ module.exports = (\nif (IS_DEV) {\nconst nodeArgs = ['-r', require.resolve('source-map-support/register')];\n+\n+ // Passthrough --inspect and --inspect-brk flags (with optional [host:port] value) to node\n+ if (process.env.INSPECT_BRK) {\n+ nodeArgs.push(process.env.INSPECT_BRK);\n+ } else if (process.env.INSPECT) {\n+ nodeArgs.push(process.env.INSPECT);\n+ }\n+\nwebpackOptions.startServerOptions = {\nverbose: razzleOptions.verbose,\nname: 'server.js',\n@@ -650,14 +658,6 @@ module.exports = (\nrequire.resolve('razzle-dev-utils/prettyNodeErrors')\n);\n- // Passthrough --inspect and --inspect-brk flags (with optional [host:port] value) to node\n- if (process.env.INSPECT_BRK) {\n- nodeArgs.push(process.env.INSPECT_BRK);\n- } else if (process.env.INSPECT) {\n- nodeArgs.push(process.env.INSPECT);\n- }\n-\n-\nconfig.plugins = [\n...config.plugins,\n// Add hot module replacement\n",
        "date": "02.02.2021 11:49:43",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "\"Add passthrough for --inspect and --inspect-brk flags in createConfigAsync.js\""
    },
    {
        "msg": "fix(babel-preset-razzle): allow disabling typescript preset",
        "diff": "diff --git a/packages/babel-preset-razzle/index.js b/packages/babel-preset-razzle/index.js @@ -78,14 +78,14 @@ module.exports = function(api, options) {\noptions['preset-react'] || {}\n),\n],\n- [\n+ options['preset-typescript'] !== false && [\nrequire('@babel/preset-typescript'),\nObject.assign(\n{ allowNamespaces: true },\noptions['preset-typescript'] || {}\n),\n],\n- ],\n+ ].filter(Boolean),\nplugins: [\n(options['preset-env'] || {}).runtime !== 'automatic' && [\nrequire('./babel-plugins/jsx-pragma'),\n@@ -111,12 +111,12 @@ module.exports = function(api, options) {\nrequire('@babel/plugin-proposal-decorators'),\noptions['decorators']\n],\n- options['parameter-decorator'] &&\n- require('babel-plugin-parameter-decorator'),\n[\nrequire('@babel/plugin-proposal-class-properties'),\noptions['class-properties'] || {},\n],\n+ options['parameter-decorator'] &&\n+ require('babel-plugin-parameter-decorator'),\n[\nrequire('@babel/plugin-proposal-object-rest-spread'),\n{\n",
        "date": "02.02.2021 12:24:01",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Add support for TypeScript preset and parameter decorator plugin"
    },
    {
        "msg": "fix(razzle): report tested plugin imports",
        "diff": "diff --git a/packages/razzle/config/loadPlugins.js b/packages/razzle/config/loadPlugins.js @@ -42,9 +42,9 @@ function loadPlugin(plugin, paths) {\nbreak;\n}\n}\n-\nif (!razzlePlugin) {\n- throw new Error(`Unable to find '${completePluginName[0]}' or '${completePluginName[1]}'`);\n+ const last = completePluginNames.pop();\n+ throw new Error(`Unable to find '${completePluginNames.join(\"', '\")}' or ${last}'`);\n}\nreturn [razzlePlugin, plugin.options];\n",
        "date": "03.02.2021 23:51:22",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor error message in loadPlugins.js to display all missing plugins"
    },
    {
        "msg": "fix(babel-preset-razzle): remove experimental babel features",
        "diff": "diff --git a/packages/babel-preset-razzle/package.json b/packages/babel-preset-razzle/package.json \"dependencies\": {\n\"@babel/core\": \"7.11.1\",\n\"@babel/plugin-proposal-class-properties\": \"^7.8.3\",\n- \"@babel/plugin-proposal-decorators\": \"^7.12.12\",\n\"@babel/plugin-proposal-nullish-coalescing-operator\": \"7.10.4\",\n\"@babel/plugin-proposal-numeric-separator\": \"7.10.4\",\n\"@babel/plugin-proposal-object-rest-spread\": \"^7.9.5\",\n\"@babel/preset-typescript\": \"^7.9.0\",\n\"@babel/runtime\": \"^7.9.2\",\n\"babel-plugin-dynamic-import-node\": \"2.3.3\",\n- \"babel-plugin-parameter-decorator\": \"^1.0.16\",\n\"babel-plugin-syntax-jsx\": \"^6.18.0\",\n\"babel-plugin-transform-react-remove-prop-types\": \"0.4.24\",\n\"chalk\": \"^4.1.0\"\n",
        "date": "04.02.2021 00:30:08",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Remove deprecated babel plugin \"@babel/plugin-proposal-decorators\" and \"babel-plugin-parameter-decorator\" from dependencies"
    },
    {
        "msg": "fix(babel-preset-razzle): make commonjs wrapper plugin receive the correct args",
        "diff": "diff --git a/packages/babel-preset-razzle/babel-plugins/commonjs.js b/packages/babel-preset-razzle/babel-plugins/commonjs.js const commonjsPlugin = require('@babel/plugin-transform-modules-commonjs');\n-module.exports = function() {\n+module.exports = function(api, options, dirname) {\nconst commonjs = commonjsPlugin.default(api, options, dirname);\nreturn {\nvisitor: {\n",
        "date": "04.02.2021 12:39:55",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Add dirname parameter to commonjs plugin module export"
    },
    {
        "msg": "fix(razzle): add additional check for @ for scoped packages",
        "diff": "diff --git a/packages/razzle/config/loadPlugins.js b/packages/razzle/config/loadPlugins.js @@ -28,7 +28,7 @@ function loadPlugin(plugin, paths) {\nreturn [plugin.object, plugin.options];\n}\n- const isScopedPlugin = plugin.name.includes('/');\n+ const isScopedPlugin = plugin.name.startsWith('@') && plugin.name.includes('/');\nlet scope;\nlet scopedPluginName;\nif (isScopedPlugin) {\n",
        "date": "07.02.2021 15:03:25",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Fix issue with detecting scoped plugins in loadPlugins.js"
    },
    {
        "msg": "fix(razzle): pass array to printerrors",
        "diff": "diff --git a/packages/razzle/scripts/build.js b/packages/razzle/scripts/build.js @@ -72,7 +72,7 @@ loadRazzleConfig(webpack).then(\nconsole.log();\n},\nerr => {\n- printErrors('Failed to compile.', err, verbose);\n+ printErrors('Failed to compile.', [err], verbose);\nprocess.exit(1);\n}\n);\n",
        "date": "07.02.2021 17:13:49",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Fix error handling in build script"
    },
    {
        "msg": "fix(razzle): add back css minimizer",
        "diff": "diff --git a/packages/razzle/config/createConfigAsync.js b/packages/razzle/config/createConfigAsync.js @@ -877,7 +877,27 @@ module.exports = (\nminimize: true,\nminimizer: [\nnew TerserPlugin(webpackOptions.terserPluginOptions),\n+ new CssMinimizerPlugin({\n+ sourceMap: true,\n+ minify: async (data, inputMap) => {\n+ // eslint-disable-next-line global-require\n+ const CleanCSS = require('clean-css');\n+\n+ const [[filename, input]] = Object.entries(data);\n+ const minifiedCss = await new CleanCSS({ sourceMap: true }).minify({\n+ [filename]: {\n+ styles: input,\n+ sourceMap: inputMap,\n+ },\n+ });\n+ return {\n+ css: minifiedCss.styles,\n+ map: minifiedCss.sourceMap.toJSON(),\n+ warnings: minifiedCss.warnings,\n+ };\n+ },\n+ })\n],\n}\n}\n",
        "date": "07.02.2021 22:01:38",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Add CssMinimizerPlugin for minifying CSS with source map support"
    },
    {
        "msg": "fix(less-plugin): remove another old option",
        "diff": "diff --git a/packages/razzle-plugin-less/index.js b/packages/razzle-plugin-less/index.js @@ -55,7 +55,6 @@ module.exports = {\n// XXX Source maps are required for the resolve-url-loader to properly\n// function. Disable them in later stages if you do not want source maps.\nsourceMap: true,\n- sourceMapContents: false,\nlessOptions: {\nincludePaths: [paths.appNodeModules],\n},\n",
        "date": "10.02.2021 23:32:14",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Disable sourceMapContents in lessOptions"
    },
    {
        "msg": "fix(razzle): remove wrong comment",
        "diff": "diff --git a/packages/razzle/scripts/build.js b/packages/razzle/scripts/build.js @@ -14,6 +14,7 @@ const argv = process.argv.slice(2);\nconst cliArgs = mri(argv);\nconst nodeEnv = cliArgs['node-env']||'production';\n+const mode = cliArgs['--watch'] ? 'watch' : 'run';\n// Do this as the first thing so that any code reading it knows the right env.\nprocess.env.NODE_ENV = /production|staging$/.test(nodeEnv) ? nodeEnv : 'production';\n@@ -216,9 +217,7 @@ loadRazzleConfig(webpack).then(\n);\nconsole.log(`Compiling server ${buildName} build...\\n`);\n- // First compile the server. We need it to properly output assets.json (asset\n- // manifest) and chunks.json (chunk manifest) files with the correct hashes on file names BEFORE we can start\n- // the server compiler.\n+\ncompile(serverConfig, (err, serverStats) => {\nif (err) {\nreturn reject(err);\n",
        "date": "25.02.2021 13:30:25",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Add mode flag to build script and remove unnecessary comments"
    },
    {
        "msg": "fix(razzle-dev-utils): use relative require",
        "diff": "diff --git a/packages/razzle-dev-utils/webpackHotDevClient.js b/packages/razzle-dev-utils/webpackHotDevClient.js @@ -14,7 +14,7 @@ var stripAnsi = require('strip-ansi');\nvar url = require('url');\nvar createSocketUrl = require('webpack-dev-server/client/utils/createSocketUrl');\nvar launchEditorEndpoint = require('react-dev-utils/launchEditorEndpoint');\n-var formatWebpackMessages = require('razzle-dev-utils/formatWebpackMessages');\n+var formatWebpackMessages = require('./formatWebpackMessages');\nvar ErrorOverlay = require('react-error-overlay');\nvar socketUrl = createSocketUrl();\n",
        "date": "28.02.2021 15:14:31",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Fix import path for formatWebpackMessages in webpackHotDevClient"
    },
    {
        "msg": "fix(create-razzle-app): remove unused deps",
        "diff": "diff --git a/packages/create-razzle-app/package.json b/packages/create-razzle-app/package.json \"ansi-escapes\": \"^4.3.1\",\n\"axios\": \"^0.19.2\",\n\"chalk\": \"^3.0.0\",\n- \"commander\": \"^5.0.0\",\n- \"cross-spawn\": \"^7.0.1\",\n\"execa\": \"5.0.0\",\n\"fs-extra\": \"9.1.0\",\n- \"mkdirp-then\": \"^1.2.0\",\n\"ms\": \"^2.1.2\",\n- \"mz\": \"^2.7.0\",\n\"ora\": \"^4.0.3\",\n\"pacote\": \"^11.1.8\",\n\"promise\": \"^8.1.0\",\n",
        "date": "28.02.2021 15:16:50",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Remove unused dependencies and update existing dependencies in package.json"
    },
    {
        "msg": "fix(babel-preset-razzle): remove unused deps",
        "diff": "diff --git a/packages/babel-preset-razzle/package.json b/packages/babel-preset-razzle/package.json \"@babel/plugin-syntax-bigint\": \"7.8.3\",\n\"@babel/plugin-syntax-dynamic-import\": \"^7.8.3\",\n\"@babel/plugin-transform-modules-commonjs\": \"7.10.4\",\n- \"@babel/plugin-transform-react-jsx-source\": \"^7.9.0\",\n\"@babel/plugin-transform-runtime\": \"^7.9.0\",\n\"@babel/preset-env\": \"^7.9.5\",\n\"@babel/preset-react\": \"^7.9.4\",\n\"@babel/preset-typescript\": \"^7.9.0\",\n\"@babel/runtime\": \"^7.9.2\",\n- \"babel-plugin-dynamic-import-node\": \"2.3.3\",\n\"babel-plugin-syntax-jsx\": \"^6.18.0\",\n\"babel-plugin-transform-react-remove-prop-types\": \"0.4.24\",\n\"chalk\": \"^4.1.0\"\n",
        "date": "28.02.2021 15:19:12",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Remove \"@babel/plugin-transform-react-jsx-source\" and \"babel-plugin-dynamic-import-node\" from babel-preset-razzle package.json"
    },
    {
        "msg": "fix(create-razzle-app): copy dot files",
        "diff": "diff --git a/packages/create-razzle-app/lib/utils/copy-dir.js b/packages/create-razzle-app/lib/utils/copy-dir.js @@ -18,7 +18,7 @@ module.exports = function copyDir(opts) {\nreturn new Promise(function(resolve, reject) {\nconst stopCopySpinner = output.wait('Copying files');\n- copy(templatePath, projectPath)\n+ copy(templatePath, projectPath, { dot: true })\n.then(function() {\nreturn fs\n.pathExists(path.resolve(projectPath, './gitignore'))\n",
        "date": "02.03.2021 20:47:55",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Add option to copy dot files in copyDir function"
    },
    {
        "msg": "fix(create-razzle-app): use correct commander version",
        "diff": "diff --git a/packages/create-razzle-app/package.json b/packages/create-razzle-app/package.json \"ansi-escapes\": \"^4.3.1\",\n\"axios\": \"^0.19.2\",\n\"chalk\": \"^3.0.0\",\n- \"commander\": \"^7.1.0\",\n+ \"commander\": \"5.0.0\",\n\"execa\": \"5.0.0\",\n\"fs-extra\": \"9.1.0\",\n\"ms\": \"^2.1.2\",\n",
        "date": "03.03.2021 00:16:43",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Update commander package to version 5.0.0"
    },
    {
        "msg": "fix(create-razzle-app): allow examples with workspaces",
        "diff": "diff --git a/packages/create-razzle-app/lib/utils/install.js b/packages/create-razzle-app/lib/utils/install.js @@ -56,7 +56,7 @@ function getInstallArgs(cmd, packages, opts) {\nconst args = ['install', '--save', '--save-exact'];\nreturn args.concat(packages, ['--verbose']);\n} else if (cmd.cmd === 'yarn') {\n- const args = ['add'];\n+ const args = ['add', '-W'];\nreturn args.concat(packages,\nparseInt(cmd.version[0]) !== 2 ? ['--ignore-engines'] : []);\n}\n",
        "date": "11.03.2021 23:47:40",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Add workspace flag to yarn add command"
    },
    {
        "msg": "fix(create-razzle-app): pass down verbose",
        "diff": "diff --git a/packages/create-razzle-app/lib/index.js b/packages/create-razzle-app/lib/index.js @@ -160,6 +160,7 @@ function installWithMessageFactory(opts, isExample = false) {\nreturn install({\nnpm: opts.npm,\nyarn: opts.yarn,\n+ verbose: opts.verbose,\nprojectName: projectName,\nprojectPath: projectPath,\npackages: isExample\n",
        "date": "12.03.2021 00:28:48",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Add verbose option to install function in create-razzle-app"
    },
    {
        "msg": "fix: fix release workflow",
        "diff": "diff --git a/.github/workflows/release.yml b/.github/workflows/release.yml @@ -30,7 +30,7 @@ jobs:\nls ~/.npmrc >/dev/null 2>&1 && \\\n[[ $(git describe --exact-match 2> /dev/null || :) =~ -canary ]]; \\\nthen\n- yarn run lerna publish from-git --npm-tag canary --yes\n+ yarn run lerna publish from-git --no-verify-access --npm-tag canary --yes\nelse\necho \"Did not publish canary\"\nfi\n@@ -42,7 +42,7 @@ jobs:\nls ~/.npmrc >/dev/null 2>&1 && \\\n[[ ! $(git describe --exact-match 2> /dev/null || :) =~ -canary ]]; \\\nthen\n- yarn run lerna publish from-git --yes\n+ yarn run lerna publish from-git --no-verify-access --yes\nelse\necho \"Did not publish\"\nfi\n",
        "date": "13.03.2021 15:25:03",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Update lerna publish command to include --no-verify-access flag"
    },
    {
        "msg": "fix(razzle): add missing dep in default cra",
        "diff": "diff --git a/packages/create-razzle-app/templates/default/package.json b/packages/create-razzle-app/templates/default/package.json \"razzle\": \"4.0.1\",\n\"babel-preset-razzle\": \"4.0.1\",\n\"razzle-dev-utils\": \"4.0.1\",\n+ \"html-webpack-plugin\": \"^4.5.2\",\n\"webpack\": \"^4.44.1\",\n\"mini-css-extract-plugin\": \"^0.9.0\",\n\"webpack-dev-server\": \"^3.11.2\"\n",
        "date": "17.03.2021 13:51:07",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Update html-webpack-plugin to version 4.5.2"
    },
    {
        "msg": "fix(razzle): only print signal handling on verbose",
        "diff": "diff --git a/packages/razzle/scripts/start.js b/packages/razzle/scripts/start.js @@ -15,10 +15,16 @@ const setPorts = require('razzle-dev-utils/setPorts');\nconst chalk = require('chalk');\nconst terminate = require('terminate');\n+let verbose = false;\n+\nprocess.once('SIGINT', () => {\n+ if (verbose) {\nconsole.error(chalk.bgRedBright(' SIGINT '), chalk.redBright('exiting...'));\n+ }\nterminate(process.pid, 'SIGINT', { timeout: 1000 }, () => {\n+ if (verbose) {\nconsole.error(chalk.bgGreen(' Goodbye '));\n+ }\nterminate(process.pid);\n});\n});\n@@ -37,7 +43,7 @@ function main() {\nloadRazzleConfig(webpack)\n.then(\nasync ({ razzle, razzleOptions, webpackObject, plugins, paths }) => {\n- const verbose = razzleOptions.verbose;\n+ verbose = razzleOptions.verbose;\nif (!verbose) {\nprocess.removeAllListeners('warning');\n}\n",
        "date": "19.03.2021 13:58:19",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor start.js to include verbose logging during SIGINT signal handling."
    },
    {
        "msg": "fix(razzle): webpackConfig undefined\nwebpackConfig undefined, i should be config",
        "diff": "diff --git a/packages/razzle/config/createConfigAsync.js b/packages/razzle/config/createConfigAsync.js @@ -1022,7 +1022,7 @@ module.exports = (\n}\nif (razzleOptions.debug.config) {\nconsole.log(`Printing webpack config for ${target} target`);\n- console.log(util.inspect(webpackConfig, {depth: null}));\n+ console.log(util.inspect(config, {depth: null}));\n}\nresolve(config);\n});\n",
        "date": "19.03.2021 19:35:29",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Update console log to print config instead of webpackConfig"
    },
    {
        "msg": "fix(razzle): use paths.appAssetsManifest in ManifestPlugin",
        "diff": "diff --git a/packages/razzle/config/createConfigAsync.js b/packages/razzle/config/createConfigAsync.js @@ -166,6 +166,8 @@ module.exports = (\nwebpackOptions.definePluginOptions = dotenv.stringified;\n+ webpackOptions.appAssetsManifestPath = paths.appAssetsManifest;\n+\nif (IS_NODE) {\nwebpackOptions.jsOutputFilename = `[name].js`;\n@@ -735,7 +737,7 @@ module.exports = (\n// Output all files in a manifest file called assets-manifest.json\n// in the build directory.\nnew ManifestPlugin({\n- fileName: path.join(paths.appBuild, 'assets.json'),\n+ fileName: webpackOptions.appAssetsManifestPath,\nwriteToFileEmit: true,\ngenerate: (seed, files) => {\nconst entrypoints = new Set();\n",
        "date": "30.03.2021 20:02:14",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Add appAssetsManifestPath to webpackOptions and use it for assets manifest file name."
    },
    {
        "msg": "fix(razzle): disableWebpackbar logic",
        "diff": "diff --git a/packages/razzle/config/createConfigAsync.js b/packages/razzle/config/createConfigAsync.js @@ -102,8 +102,8 @@ module.exports = (\nconst shouldUseReactRefresh =\nIS_WEB && IS_DEV && razzleOptions.enableReactRefresh ? true : false;\n- const shouldUseWebpackbar =\n- !razzleOptions.disableWebpackbar || razzleOptions.disableWebpackbar !== target;\n+ const shouldDisableWebpackbar =\n+ razzleOptions.disableWebpackbar === true || razzleOptions.disableWebpackbar === target;\nlet webpackOptions = {};\n@@ -984,7 +984,7 @@ module.exports = (\n}\n}\n- if (IS_DEV && shouldUseWebpackbar) {\n+ if (IS_DEV && !shouldDisableWebpackbar) {\nconfig.plugins = [\n...config.plugins,\nnew WebpackBar({\n",
        "date": "19.04.2021 13:09:25",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor webpackbar configuration in createConfigAsync module"
    },
    {
        "msg": "fix(razzle): Ignore .env.local when running tests\nFixes",
        "diff": "diff --git a/packages/razzle/config/env.js b/packages/razzle/config/env.js @@ -15,9 +15,9 @@ function setupEnvironment(paths) {\nvar dotenvFiles = [\n`${paths.dotenv}.${NODE_ENV}.local`,\n`${paths.dotenv}.${NODE_ENV}`,\n- `${paths.dotenv}.local`,\n+ NODE_ENV !== 'test' && `${paths.dotenv}.local`,\npaths.dotenv,\n- ];\n+ ].filter(Boolean);\n// Load environment variables from .env* files. Suppress warnings using silent\n// if this file is missing. dotenv will never modify any environment variables\n// that have already been set. Variable expansion is supported in .env files.\n",
        "date": "27.04.2021 18:28:49",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor dotenvFiles array to only include .local file if NODE_ENV is not 'test'"
    },
    {
        "msg": "fix(razzle): Undefined error in getPublicUrl\nIntroduced in",
        "diff": "diff --git a/packages/razzle/config/paths.js b/packages/razzle/config/paths.js @@ -31,7 +31,7 @@ const getPublicUrl = appPackageJson => {\nif (fs.existsSync(appPackageJson)) {\ntry {\n- packageJson = require(appPackageJson)\n+ const packageJson = require(appPackageJson)\nreturn packageJson.homepage;\n} catch (e) {\nclearConsole();\n",
        "date": "06.05.2021 11:26:48",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor paths.js to use const for packageJson declaration"
    },
    {
        "msg": "fix(examples): use a valid version",
        "diff": "diff --git a/examples/with-loadable-components/package.json b/examples/with-loadable-components/package.json },\n\"devDependencies\": {\n\"@babel/core\": \"^7.12.10\",\n- \"@loadable/babel-plugin\": \"^5.15.0\",\n+ \"@loadable/babel-plugin\": \"^5.13.2\",\n\"@loadable/webpack-plugin\": \"^5.15.0\",\n\"babel-preset-razzle\": \"4.0.4\",\n\"mini-css-extract-plugin\": \"^0.9.0\",\n",
        "date": "21.06.2021 20:39:42",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Update @loadable/babel-plugin to version 5.13.2"
    },
    {
        "msg": "fix(razzle): fix optimizaton cofig in dev buil",
        "diff": "diff --git a/packages/razzle/config/createConfigAsync.js b/packages/razzle/config/createConfigAsync.js @@ -931,6 +931,9 @@ module.exports = (\n}),\n].filter(x => x);\n+ // make sure the key exists\n+ config.optimization = {};\n+\nif (!IS_DEV_ENV) {\nconfig.optimization = {\nsplitChunks: webpackOptions.splitChunksConfig,\n",
        "date": "21.08.2021 20:03:15",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Add optimization key to config object"
    },
    {
        "msg": "fix(razzle): fix the optimization in both places",
        "diff": "diff --git a/packages/razzle/config/createConfigAsync.js b/packages/razzle/config/createConfigAsync.js @@ -672,6 +672,9 @@ module.exports = (\nserver: [paths.appServerIndexJs],\n};\n+ // make sure the key exists\n+ config.optimization = {};\n+\nif (IS_PROD) {\n// Prevent creating multiple chunks for the server\n// in dev mode emitting one huge server file on every save is very slow\n",
        "date": "21.08.2021 20:56:02",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Add optimization key to config object"
    },
    {
        "msg": "fix(razzle): make manifest path relative in builds",
        "diff": "diff --git a/packages/razzle/config/env.js b/packages/razzle/config/env.js @@ -52,7 +52,9 @@ function getClientEnvironment(target, is_dev, options, paths) {\nPORT: process.env.PORT || options.port || 3000,\nVERBOSE: !!process.env.VERBOSE,\nHOST: process.env.HOST || options.host || 'localhost',\n- RAZZLE_ASSETS_MANIFEST: paths.appAssetsManifest,\n+ RAZZLE_ASSETS_MANIFEST: !is_dev\n+ ? path.relative(paths.appPath, paths.appAssetsManifest)\n+ : paths.appAssetsManifest,\nBUILD_TARGET: target === 'web' ? 'client' : 'server',\n// only for production builds. Useful if you need to serve from a CDN\nPUBLIC_PATH: process.env.PUBLIC_PATH || '/',\n",
        "date": "22.08.2021 16:43:16",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Update RAZZLE_ASSETS_MANIFEST path based on development environment"
    },
    {
        "msg": "fix: StaticRouterContext should be imported from \"react-router\"",
        "diff": "diff --git a/examples/with-typescript/src/server.tsx b/examples/with-typescript/src/server.tsx import express from 'express';\nimport React from 'react';\nimport { renderToString } from 'react-dom/server';\n-import { StaticRouter, StaticRouterContext } from 'react-router-dom';\n+import { StaticRouterContext } from \"react-router\";\n+import { StaticRouter } from 'react-router-dom';\nimport App from './App';\n",
        "date": "22.09.2021 10:18:38",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Fix import order for StaticRouter in server.tsx"
    },
    {
        "msg": "fix: process.env won't be overwritten by razzle-plugin-manifest",
        "diff": "diff --git a/packages/razzle-plugin-manifest/index.js b/packages/razzle-plugin-manifest/index.js @@ -76,9 +76,7 @@ module.exports = {\nwebpackConfig.plugins.push(\nnew webpackObject.DefinePlugin({\n- 'process.env': {\n- RAZZLE_CHUNKS_MANIFEST: JSON.stringify(pluginOptions.fileName),\n- },\n+ 'process.env.RAZZLE_CHUNKS_MANIFEST': JSON.stringify(pluginOptions.fileName),\n})\n);\n",
        "date": "09.11.2021 20:42:41",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor DefinePlugin to set RAZZLE_CHUNKS_MANIFEST directly in process.env"
    },
    {
        "msg": "fix: respect pinning in default cra template",
        "diff": "diff --git a/packages/create-razzle-app/lib/index.js b/packages/create-razzle-app/lib/index.js @@ -135,7 +135,7 @@ module.exports = async function createRazzleApp(opts) {\nprojectPath: projectPath,\nprojectName: projectName,\n})\n- .then(installWithMessageFactory(opts))\n+ .then(installWithMessageFactory(opts, true))\n.catch(function(err) {\nconsole.error(`Failed loading official default example`);\nif (opts.verbose) {\n",
        "date": "20.12.2021 15:57:18",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Update installWithMessageFactory to include a boolean parameter"
    },
    {
        "msg": "fix: fix import for staticrouter in default template",
        "diff": "diff --git a/packages/create-razzle-app/templates/default/src/server.js b/packages/create-razzle-app/templates/default/src/server.js import App from './App';\nimport React from 'react';\n-import { StaticRouter } from 'react-router-dom/server';\n+import { StaticRouter } from 'react-router-dom';\nimport express from 'express';\nimport { renderToString } from 'react-dom/server';\n",
        "date": "20.12.2021 16:43:11",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Fix import path for StaticRouter in server.js"
    },
    {
        "msg": "fix: use switch not routes",
        "diff": "diff --git a/packages/create-razzle-app/templates/default/src/App.js b/packages/create-razzle-app/templates/default/src/App.js import React from 'react';\n-import { Route, Routes } from 'react-router-dom';\n+import { Route, Switch } from 'react-router-dom';\nimport Home from './Home';\nimport './App.css';\nconst App = () => (\n- <Routes>\n+ <Switch>\n<Route path=\"/\" element={<Home/>} />\n- </Routes>\n+ </Switch>\n);\nexport default App;\n",
        "date": "20.12.2021 16:57:44",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor routing in App component to use Switch instead of Routes"
    },
    {
        "msg": "fix: fix default route in default template",
        "diff": "diff --git a/packages/create-razzle-app/templates/default/src/App.js b/packages/create-razzle-app/templates/default/src/App.js @@ -5,7 +5,7 @@ import './App.css';\nconst App = () => (\n<Switch>\n- <Route path=\"/\" element={<Home/>} />\n+ <Route exact={true} path=\"/\" component={Home} />\n</Switch>\n);\n",
        "date": "20.12.2021 17:47:08",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor Route component in App.js to use component prop instead of element prop"
    },
    {
        "msg": "fix: make express bundling work",
        "diff": "diff --git a/examples/basic-serverless/razzle.config.js b/examples/basic-serverless/razzle.config.js module.exports = {\noptions: {\nbuildType: 'iso-serverless',\n+ modifyWebpackConfig(opts) {\n+ const config = opts.webpackConfig;\n+\n+ if (opts.env.target === 'node') {\n+ config.plugins.push(\n+ new opts.webpackObject.ContextReplacementPlugin(\n+ // we want to replace context\n+ /express\\/lib/, // and replace all searches in\n+ // express/lib/*\n+ resolve('node_modules'), // to look in folder 'node_modules'\n+ { // and return a map\n+ 'ejs': 'ejs' // which resolves request for 'ejs'\n+ } // to module 'ejs'\n+ ) // __webpack_require__(...)(mod)\n+ // we set `mod = 'ejs'`\n+ )\n+ }\n+\n+ return config;\n+ },\n}\n};\n",
        "date": "20.12.2021 19:05:18",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Add webpack configuration to replace context in express/lib for node target"
    },
    {
        "msg": "fix(examples-with-heroku): adjust package build scripts",
        "diff": "diff --git a/examples/with-heroku/package.json b/examples/with-heroku/package.json \"license\": \"MIT\",\n\"scripts\": {\n\"start\": \"razzle start\",\n- \"build\": \"razzle build\",\n+ \"build\": \"razzle build --noninteractive\",\n\"test\": \"razzle test --env=jsdom\",\n- \"prestart:prod\": \"yarn build\",\n\"start:prod\": \"NODE_ENV=production node build/server.js\",\n\"deploy\": \"git push heroku master\"\n},\n",
        "date": "14.02.2022 16:54:08",
        "repo": "jaredpalmer/razzle",
        "type": "fix",
        "chatgpt_zeroshot": "Add --noninteractive flag to build script and remove prestart:prod script"
    },
    {
        "msg": "fix: :bug: svelte component",
        "diff": "diff --git a/src/routes/[slug].svelte b/src/routes/[slug].svelte let updated = format(new Date(metadata.updatedDate), 'yyy MMM do')\n</script>\n-<h1 class=\"font-medium text-4xl\">\n+<h1 class=\"font-medium text-5xl\">\n{metadata.title}\n</h1>\n-<div class=\"my-3 opacity-75\">\n+<div class=\"my-3 mb-11 opacity-75\">\n<p class=\"font-semibold text-xs\">Created: {created}</p>\n<p class=\"font-semibold text-xs\">Updated: {updated}</p>\n<a\n- class=\"font-semibold text-xs underline hover:no-underline hover:text-purple-600\"\n+ class=\"font-semibold text-xs underline hover:no-underline\"\nhref={`https://github.com/spences10/cheat-sheets/edit/production/sheets/${metadata.slug}.md`}\n>Edit this page on GitHub</a\n>\n</div>\n<article class=\"mb-16 prose md:prose-lg lg:prose-xl\">\n- <Post />\n+ <svelte:component this={Post} />\n</article>\n",
        "date": "10.07.2021 21:36:38",
        "repo": "spences10/cheat-sheets",
        "type": "fix",
        "chatgpt_zeroshot": "Increase font size and add margin-bottom to title, remove unnecessary class from edit link, and update Post component usage."
    },
    {
        "msg": "fix: :bug: and amp",
        "diff": "diff --git a/src/lib/og-image-url-build.js b/src/lib/og-image-url-build.js @@ -2,7 +2,7 @@ const objectToQueryParams = obj => {\nconst params = Object.entries(obj).map(\n([key, value]) => `${key}=${value}`\n)\n- return '?' + params.join('&')\n+ return '?' + params.join('&amp;')\n}\nexport const ogImageUrl = (author, website, title) => {\n",
        "date": "11.07.2021 21:07:20",
        "repo": "spences10/cheat-sheets",
        "type": "fix",
        "chatgpt_zeroshot": "Fixing query parameter separator in og-image-url-build.js"
    },
    {
        "msg": "fix: :bug: no amp",
        "diff": "diff --git a/src/lib/og-image-url-build.js b/src/lib/og-image-url-build.js @@ -2,7 +2,7 @@ const objectToQueryParams = obj => {\nconst params = Object.entries(obj).map(\n([key, value]) => `${key}=${value}`\n)\n- return '?' + params.join('&amp;')\n+ return '?' + params.join('&')\n}\nexport const ogImageUrl = (author, website, title) => {\n",
        "date": "12.07.2021 06:18:01",
        "repo": "spences10/cheat-sheets",
        "type": "fix",
        "chatgpt_zeroshot": "Fixing issue with generating og image URL by replacing '&amp;' with '&' in og-image-url-build.js"
    },
    {
        "msg": "fix: heading level",
        "diff": "diff --git a/sheets/javascript.md b/sheets/javascript.md @@ -465,7 +465,7 @@ document, but could change `html` with `p`, `span` whatever.\ndocument.getElementsByTagName('html')[0].style['font-size'] = '10px'\n```\n-### Checking for `window`\n+## Checking for `window`\n[Optional chaining](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Optional_chaining) can not be used on `window`.\nIt will throw an error when used on any undeclared root object, so no escaping the `typeof window == 'undefined'` check with a clever `?.`.\n",
        "date": "23.08.2021 23:58:37",
        "repo": "spences10/cheat-sheets",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor code to use explicit check for `window` instead of optional chaining."
    },
    {
        "msg": "fix(typings): make dimmer in ImageProps optional",
        "diff": "diff --git a/typings/index.d.ts b/typings/index.d.ts @@ -508,7 +508,7 @@ interface ImageProps extends ReactMouseEvents<any> {\ndisabled?: boolean;\n/** Shorthand for Dimmer. */\n- dimmer:any;\n+ dimmer?: any;\n/** An image can sit to the left or right of other content. */\nfloated?: SemanticFLOATS;\n",
        "date": "04.01.2017 01:25:37",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "chatgpt_zeroshot": "Fix optional prop type for dimmer in ImageProps interface"
    },
    {
        "msg": "fix(Search): Search input can be made fluid\nfix(Search): Search input can be made fluid",
        "diff": "diff --git a/src/modules/Search/Search.js b/src/modules/Search/Search.js @@ -166,6 +166,9 @@ export default class Search extends Component {\n/** A search can have its results take up the width of its container. */\nfluid: PropTypes.bool,\n+ /** A search input can take up the width of its container. */\n+ input: customPropTypes.itemShorthand,\n+\nsize: PropTypes.oneOf(_meta.props.size),\nloading: PropTypes.bool,\n@@ -176,6 +179,7 @@ export default class Search extends Component {\nminCharacters: 1,\nnoResultsMessage: 'No results found.',\nshowNoResults: true,\n+ input: 'text',\n}\nstatic autoControlledProps = [\n@@ -508,20 +512,20 @@ export default class Search extends Component {\n// ----------------------------------------\nrenderSearchInput = () => {\n- const { icon, placeholder } = this.props\n+ const { icon, placeholder, input } = this.props\nconst { value } = this.state\nreturn (\n- <Input\n- value={value}\n- placeholder={placeholder}\n- onBlur={this.handleBlur}\n- onChange={this.handleSearchChange}\n- onFocus={this.handleFocus}\n- onClick={this.handleInputClick}\n- input={{ className: 'prompt', tabIndex: '0', autoComplete: 'off' }}\n- icon={icon}\n- />\n+ Input.create(input, {\n+ value,\n+ placeholder,\n+ onBlur: this.handleBlur,\n+ onChange: this.handleSearchChange,\n+ onFocus: this.handleFocus,\n+ onClick: this.handleInputClick,\n+ input: { className: 'prompt', tabIndex: '0', autoComplete: 'off' },\n+ icon,\n+ })\n)\n}\n",
        "date": "11.01.2017 23:17:40",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "chatgpt_zeroshot": "Add customPropTypes for search input width in Search component"
    },
    {
        "msg": "fix(typings): fix Modal mountnode -> mountNode",
        "diff": "diff --git a/src/modules/Modal/index.d.ts b/src/modules/Modal/index.d.ts @@ -59,7 +59,7 @@ interface ModalProps {\nopen?: boolean;\n/** The node where the modal should mount.. */\n- mountnode?: any;\n+ mountNode?: any;\n/** A modal can vary in size */\nsize?: SemanticSIZES;\n",
        "date": "12.01.2017 21:10:27",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "chatgpt_zeroshot": "Fix typo in mountNode prop in Modal component declaration"
    },
    {
        "msg": "fix(ComponentExample): use explicit babel presets",
        "diff": "diff --git a/docs/app/Components/ComponentDoc/ComponentExample.js b/docs/app/Components/ComponentDoc/ComponentExample.js @@ -8,10 +8,9 @@ import copyToClipboard from 'copy-to-clipboard'\nimport { exampleContext, repoURL } from 'docs/app/utils'\nimport { Divider, Grid, Icon, Header, Menu } from 'src'\nimport Editor from 'docs/app/Components/Editor/Editor'\n-import babelrc from '.babelrc'\nconst babelConfig = {\n- presets: [...babelrc.presets],\n+ presets: ['es2015', 'react', 'stage-1'],\n}\nconst showCodeStyle = {\n",
        "date": "24.01.2017 12:30:07",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "chatgpt_zeroshot": "Update babel presets in ComponentExample.js"
    },
    {
        "msg": "fix(typings): add item prop to the DropdownProps\nfixes",
        "diff": "diff --git a/src/modules/Dropdown/index.d.ts b/src/modules/Dropdown/index.d.ts @@ -65,6 +65,9 @@ export interface DropdownProps extends ReactMouseEvents<HTMLElement>, ReactFocus\n/** Shorthand for Icon. */\nicon?: any;\n+ /** A dropdown can be formatted as a Menu item. */\n+ item?: boolean;\n+\n/** A dropdown can be formatted to appear inline in other content. */\ninline?: boolean;\n",
        "date": "26.01.2017 01:15:58",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "chatgpt_zeroshot": "Add support for formatting dropdown as a Menu item."
    },
    {
        "msg": "fix(Button): fix `tabIndex` in typings",
        "diff": "diff --git a/src/elements/Button/index.d.ts b/src/elements/Button/index.d.ts @@ -89,7 +89,7 @@ export interface ButtonProps {\nsize?: SemanticSIZES;\n/** A button can receive focus. */\n- tabIndex: number | string;\n+ tabIndex?: number | string;\n/** A button can be formatted to toggle on and off. */\ntoggle?: boolean;\n",
        "date": "25.01.2017 18:26:56",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "chatgpt_zeroshot": "Fix optional tabIndex prop in Button component"
    },
    {
        "msg": "fix(Icon): Incorrect definition in typings",
        "diff": "diff --git a/src/elements/Icon/index.d.ts b/src/elements/Icon/index.d.ts @@ -53,7 +53,7 @@ interface IconProps {\n}\ninterface IconComponent extends React.StatelessComponent<IconProps> {\n- Content: typeof IconGroup;\n+ Group: typeof IconGroup;\n}\nexport const Icon: IconComponent;\n",
        "date": "25.01.2017 18:54:05",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "chatgpt_zeroshot": "Update Icon component to use Group instead of Content"
    },
    {
        "msg": "fix(docs): fix usage of arrow function",
        "diff": "diff --git a/docs/app/index.ejs b/docs/app/index.ejs function removeDimmer() {\ndimmer.style.opacity = '0'\n- setTimeout(() => {\n+ setTimeout(function() {\nvar dimmer = document.querySelector('#docs-loading-dimmer')\ndocument.body.removeChild(dimmer)\n",
        "date": "26.01.2017 01:22:38",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor setTimeout arrow function to regular function in removeDimmer function"
    },
    {
        "msg": "fix(typings): make TableHeaderCell `sorted` optional\nfix(typings): make TableHeaderCell `sorted` optional",
        "diff": "diff --git a/src/collections/Table/index.d.ts b/src/collections/Table/index.d.ts @@ -199,7 +199,7 @@ interface TableHeaderProps {\nexport const TableHeader: React.StatelessComponent<TableHeaderProps>;\ninterface TableHeaderCellProps extends TableCellProps {\n- sorted: 'ascending' | 'descending';\n+ sorted?: 'ascending' | 'descending';\n}\nexport const TableHeaderCell: React.StatelessComponent<TableHeaderCellProps>;\n",
        "date": "27.01.2017 14:42:27",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "chatgpt_zeroshot": "Make sorted prop optional in TableHeaderCellProps"
    },
    {
        "msg": "fix(Button): add `floated` to typings of ButtonGroup",
        "diff": "diff --git a/src/elements/Button/index.d.ts b/src/elements/Button/index.d.ts @@ -148,6 +148,9 @@ interface GroupProps {\n/** Groups can reduce their padding to fit into tighter spaces. */\ncompact?: boolean;\n+ /** Groups can be aligned to the left or right of its container. */\n+ floated?: SemanticFLOATS;\n+\n/** Groups can take the width of their container. */\nfluid?: boolean;\n",
        "date": "29.01.2017 21:19:06",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "chatgpt_zeroshot": "Add floated prop to GroupProps interface"
    },
    {
        "msg": "fix(Editor): use handledProps instead of propTypes",
        "diff": "diff --git a/docs/app/Components/Editor/Editor.js b/docs/app/Components/Editor/Editor.js @@ -22,8 +22,8 @@ const semanticUIReactCompleter = {\n// Component\ncompletions.push({ caption: name, value: name, meta: 'Component' })\n- // Its props\n- _.each(component.propTypes, (val, propName) => {\n+ // Its props (propTypes do not exist in prod, use handledProps added by babel)\n+ _.each(component.handledProps, (propName) => {\n// don't add duplicate prop completions\nif (_.find(completions, { value: propName })) return\n",
        "date": "30.01.2017 17:10:26",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor prop completion logic to use handledProps instead of propTypes"
    },
    {
        "msg": "fix(typings): inherit Radio props from Checkbox\nfix(typings): inherit Radio props from Checkbox",
        "diff": "diff --git a/src/addons/Radio/index.d.ts b/src/addons/Radio/index.d.ts import * as React from 'react';\n+import { CheckboxProps } from '../../modules/Checkbox';\n-interface RadioProps {\n+interface RadioProps extends CheckboxProps {\n[key: string]: any;\n/** Format to emphasize the current selection state. */\n",
        "date": "31.01.2017 11:35:54",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "chatgpt_zeroshot": "Extend RadioProps interface to include CheckboxProps"
    },
    {
        "msg": "fix(Popup): fix in propTypes\nFixes",
        "diff": "diff --git a/src/modules/Popup/Popup.js b/src/modules/Popup/Popup.js @@ -117,10 +117,10 @@ export default class Popup extends Component {\ntrigger: PropTypes.node,\n/** Popup width. */\n- wide: PropTypes.oneOfType(\n+ wide: PropTypes.oneOfType([\nPropTypes.bool,\nPropTypes.oneOf(['very']),\n- ),\n+ ]),\n}\nstatic defaultProps = {\n",
        "date": "21.02.2017 02:08:40",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "chatgpt_zeroshot": "Fix PropTypes declaration in Popup component"
    },
    {
        "msg": "fix(Card): add link prop to typings",
        "diff": "diff --git a/src/views/Card/index.d.ts b/src/views/Card/index.d.ts @@ -37,6 +37,9 @@ interface CardProps {\n/** A card can contain an Image component. */\nimage?: any;\n+ /** A card can be formatted to link to other content. */\n+ link?: boolean;\n+\n/** Shorthand for CardMeta. */\nmeta?: any;\n",
        "date": "23.02.2017 00:34:35",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "chatgpt_zeroshot": "Add link prop to Card component."
    },
    {
        "msg": "fix(Input): add multiple to propNames",
        "diff": "diff --git a/src/elements/Input/Input.js b/src/elements/Input/Input.js @@ -22,7 +22,7 @@ export const htmlInputPropNames = [\n'selected', 'defaultValue', 'defaultChecked',\n// LIMITED HTML PROPS\n- 'autoCapitalize', 'autoComplete', 'autoFocus', 'checked', 'form', 'max', 'maxLength', 'min',\n+ 'autoCapitalize', 'autoComplete', 'autoFocus', 'checked', 'form', 'max', 'maxLength', 'min', 'multiple',\n'name', 'pattern', 'placeholder', 'readOnly', 'required', 'step', 'type', 'value',\n// Heads Up!\n",
        "date": "07.03.2017 18:28:13",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "chatgpt_zeroshot": "Add 'multiple' prop to htmlInputPropNames list"
    },
    {
        "msg": "fix(typings): Make optional props of Search, optional in the typing definition.",
        "diff": "diff --git a/src/modules/Search/Search.d.ts b/src/modules/Search/Search.d.ts @@ -80,7 +80,7 @@ interface SearchProps {\n* @param {SyntheticEvent} event - React's original SyntheticEvent.\n* @param {object} data - All props.\n*/\n- onBlur: (event: React.MouseEvent<HTMLElement>, data: SearchProps) => void;\n+ onBlur?: (event: React.MouseEvent<HTMLElement>, data: SearchProps) => void;\n/**\n* Called on focus.\n@@ -88,7 +88,7 @@ interface SearchProps {\n* @param {SyntheticEvent} event - React's original SyntheticEvent.\n* @param {object} data - All props.\n*/\n- onFocus: (event: React.MouseEvent<HTMLElement>, data: SearchProps) => void;\n+ onFocus?: (event: React.MouseEvent<HTMLElement>, data: SearchProps) => void;\n/**\n* Called on mousedown.\n@@ -96,7 +96,7 @@ interface SearchProps {\n* @param {SyntheticEvent} event - React's original SyntheticEvent.\n* @param {object} data - All props.\n*/\n- onMouseDown: (event: React.MouseEvent<HTMLElement>, data: SearchProps) => void;\n+ onMouseDown?: (event: React.MouseEvent<HTMLElement>, data: SearchProps) => void;\n/**\n* Called when a result is selected.\n@@ -104,7 +104,7 @@ interface SearchProps {\n* @param {SyntheticEvent} event - React's original SyntheticEvent.\n* @param {object} data - All props.\n*/\n- onResultSelect: (event: React.MouseEvent<HTMLDivElement>, data: SearchResultProps) => void;\n+ onResultSelect?: (event: React.MouseEvent<HTMLDivElement>, data: SearchResultProps) => void;\n/**\n* Called on search input change.\n@@ -112,7 +112,7 @@ interface SearchProps {\n* @param {SyntheticEvent} event - React's original SyntheticEvent.\n* @param {string} value - Current value of search input.\n*/\n- onSearchChange: (event: React.MouseEvent<HTMLElement>, value: string) => void;\n+ onSearchChange?: (event: React.MouseEvent<HTMLElement>, value: string) => void;\n// ------------------------------------\n// Style\n@@ -131,7 +131,7 @@ interface SearchProps {\nfluid?: boolean;\n/** A search input can take up the width of its container. */\n- input: any;\n+ input?: any;\n/** A search can show a loading indicator. */\nloading?: boolean;\n",
        "date": "07.03.2017 17:29:51",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "chatgpt_zeroshot": "Make onBlur, onFocus, onMouseDown, onResultSelect, and onSearchChange optional in SearchProps."
    },
    {
        "msg": "fix(Portal): make compatible with React Fiber\nfix(Portal): make compatible with React Fiber",
        "diff": "diff --git a/src/addons/Portal/Portal.js b/src/addons/Portal/Portal.js @@ -356,14 +356,15 @@ class Portal extends Component {\nReactDOM.unstable_renderSubtreeIntoContainer(\nthis,\nChildren.only(children),\n- this.rootNode\n- )\n-\n+ this.rootNode,\n+ () => {\nthis.portalNode = this.rootNode.firstElementChild\nthis.portalNode.addEventListener('mouseleave', this.handlePortalMouseLeave)\nthis.portalNode.addEventListener('mouseenter', this.handlePortalMouseEnter)\n}\n+ )\n+ }\nmountPortal = () => {\nif (!isBrowser || this.rootNode) return\n",
        "date": "16.03.2017 14:16:13",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor Portal component to properly handle portal node creation and event listeners"
    },
    {
        "msg": "fix(formfield): relax label propType validator\nFixes",
        "diff": "diff --git a/src/collections/Form/FormField.js b/src/collections/Form/FormField.js @@ -143,11 +143,8 @@ FormField.propTypes = {\nPropTypes.object,\n]),\n- /** A field can show that input is mandatory. Requires a label. */\n- required: customPropTypes.every([\n- customPropTypes.demand(['label']),\n- PropTypes.bool,\n- ]),\n+ /** A field can show that input is mandatory. */\n+ required: PropTypes.bool,\n/** Passed to the control component (i.e. <input type='password' />) */\ntype: customPropTypes.every([\n",
        "date": "24.03.2017 08:23:28",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor FormField propTypes for required field to show input is mandatory"
    },
    {
        "msg": "fix(Dropdown): simplify typings validation for renderLabel",
        "diff": "diff --git a/src/modules/Dropdown/Dropdown.d.ts b/src/modules/Dropdown/Dropdown.d.ts @@ -201,7 +201,7 @@ export interface DropdownProps {\n* @param {object} defaultLabelProps - The default props for an active item Label.\n* @returns {*} Shorthand for a Label.\n*/\n- renderLabel?: (item: DropdownItemProps, index: number, defaultLabelProps: LabelProps) => React.ReactElement<any>;\n+ renderLabel?: (item: DropdownItemProps, index: number, defaultLabelProps: LabelProps) => any;\n/** A dropdown can have its menu scroll. */\nscrolling?: boolean;\n@@ -225,7 +225,7 @@ export interface DropdownProps {\ntabIndex?: number | string;\n/** The text displayed in the dropdown, usually for the active item. */\n- text?: string|React.ReactNode;\n+ text?: string;\n/** Custom element to trigger the menu to become visible. Takes place of 'text'. */\ntrigger?: React.ReactNode;\n",
        "date": "13.04.2017 23:11:53",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor renderLabel prop to return any type and update text prop to only accept string."
    },
    {
        "msg": "fix(MenuExampleNameProp): fix activeItem logic",
        "diff": "diff --git a/docs/app/Examples/collections/Menu/Types/MenuExampleNameProp.js b/docs/app/Examples/collections/Menu/Types/MenuExampleNameProp.js @@ -13,12 +13,12 @@ export default class MenuExampleNameProp extends Component {\n<Menu>\n<Menu.Item\nname='editorials'\n- active={activeItem === 'Editorials'}\n+ active={activeItem === 'editorials'}\nonClick={this.handleItemClick}\n/>\n<Menu.Item\nname='reviews'\n- active={activeItem === 'Reviews'}\n+ active={activeItem === 'reviews'}\nonClick={this.handleItemClick}\n/>\n<Menu.Item\n",
        "date": "16.04.2017 10:01:55",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "chatgpt_zeroshot": "Fix casing of menu item names in MenuExampleNameProp"
    },
    {
        "msg": "fix(acc): fix default prop dev warning",
        "diff": "diff --git a/src/lib/AutoControlledComponent.js b/src/lib/AutoControlledComponent.js @@ -136,7 +136,7 @@ export default class AutoControlledComponent extends Component {\nconst defaultPropName = getDefaultPropName(prop)\nconst { name } = this.constructor\n// prevent defaultFoo={} along side foo={}\n- if (defaultPropName in this.props && prop in this.props) {\n+ if (!_.isUndefined(this.props[defaultPropName]) && !_.isUndefined(this.props[prop])) {\nconsole.error(\n`${name} prop \"${prop}\" is auto controlled. Specify either ${defaultPropName} or ${prop}, but not both.`\n)\n",
        "date": "24.04.2017 09:12:20",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor prop validation logic in AutoControlledComponent"
    },
    {
        "msg": "fix(ComponentExample): typo \"loose\" to \"lose\"\nfix(ComponentExample): typo \"loose\" to \"lose\"",
        "diff": "diff --git a/docs/app/Components/ComponentDoc/ComponentExample.js b/docs/app/Components/ComponentDoc/ComponentExample.js @@ -138,7 +138,7 @@ class ComponentExample extends Component {\nresetJSX = () => {\nconst { sourceCode } = this.state\nconst original = this.getOriginalSourceCode()\n- if (sourceCode !== original && confirm('Loose your changes?')) { // eslint-disable-line no-alert\n+ if (sourceCode !== original && confirm('Lose your changes?')) { // eslint-disable-line no-alert\nthis.setState({ sourceCode: original })\nthis.renderSourceCode()\n}\n",
        "date": "28.04.2017 14:39:13",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "chatgpt_zeroshot": "Fix typo in confirm message in ComponentExample.js"
    },
    {
        "msg": "fix(MenuExampleText): activeItem logic",
        "diff": "diff --git a/docs/app/Examples/collections/Menu/Types/MenuExampleText.js b/docs/app/Examples/collections/Menu/Types/MenuExampleText.js @@ -13,8 +13,8 @@ export default class MenuExampleText extends Component {\n<Menu text>\n<Menu.Item header>Sort By</Menu.Item>\n<Menu.Item name='closest' active={activeItem === 'closest'} onClick={this.handleItemClick} />\n- <Menu.Item name='mostComments' active={activeItem === 'comments'} onClick={this.handleItemClick} />\n- <Menu.Item name='mostPopular' active={activeItem === 'popular'} onClick={this.handleItemClick} />\n+ <Menu.Item name='mostComments' active={activeItem === 'mostComments'} onClick={this.handleItemClick} />\n+ <Menu.Item name='mostPopular' active={activeItem === 'mostPopular'} onClick={this.handleItemClick} />\n</Menu>\n)\n}\n",
        "date": "27.04.2017 21:55:31",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "chatgpt_zeroshot": "Fix activeItem values in MenuExampleText component"
    },
    {
        "msg": "fix(docs): fix compatibility with IE",
        "diff": "diff --git a/docs/app/utils.js b/docs/app/utils.js @@ -15,6 +15,14 @@ export const parentComponents = _.flow(\n_.sortBy('_meta.name')\n)(semanticUIReact)\n+const mathSign = Math.sign || function (x) {\n+ x = +x\n+ if (x === 0 || isNaN(x)) {\n+ return x\n+ }\n+ return x > 0 ? 1 : -1\n+}\n+\n/**\n* Get the Webpack Context for all doc site examples.\n*/\n@@ -27,6 +35,7 @@ export const semanticUICSSRepoURL = 'https://github.com/Semantic-Org/Semantic-UI\nexport const scrollToAnchor = () => {\nconst anchor = location.hash && document.querySelector(location.hash)\n+ const offsetY = window.scrollY || window.pageYOffset\n// no scroll to target, stop\nif (!anchor) return\n@@ -37,9 +46,9 @@ export const scrollToAnchor = () => {\nif (elementTop === 0) return\n// hit max scroll boundaries, stop\n- const isScrolledToTop = scrollY === 0\n- const isScrolledToBottom = scrollY + document.body.clientHeight === document.body.scrollHeight\n- const scrollStep = Math.ceil((Math.abs(elementTop / 8))) * Math.sign(elementTop)\n+ const isScrolledToTop = offsetY === 0\n+ const isScrolledToBottom = offsetY + document.body.clientHeight === document.body.scrollHeight\n+ const scrollStep = Math.ceil((Math.abs(elementTop / 8))) * mathSign(elementTop)\nif (isScrolledToBottom && scrollStep > 0 || isScrolledToTop && scrollStep < 0) return\n",
        "date": "09.05.2017 02:18:16",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "chatgpt_zeroshot": "Add custom mathSign function and update scrollToAnchor function to use it."
    },
    {
        "msg": "fix(Dropdown): fix compatibility with IE",
        "diff": "diff --git a/src/modules/Dropdown/Dropdown.js b/src/modules/Dropdown/Dropdown.js @@ -686,6 +686,12 @@ export default class Dropdown extends Component {\nhandleBlur = (e) => {\ndebug('handleBlur()')\n+\n+ // Heads up! Don't remove this.\n+ // https://github.com/Semantic-Org/Semantic-UI-React/issues/1315\n+ const currentTarget = _.get(e, 'currentTarget')\n+ if (currentTarget && currentTarget.contains(document.activeElement)) return\n+\nconst { closeOnBlur, multiple, onBlur, selectOnBlur } = this.props\n// do not \"blur\" when the mouse is down inside of the Dropdown\nif (this.isMouseDown) return\n",
        "date": "13.05.2017 21:55:15",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "chatgpt_zeroshot": "Fix issue with dropdown not closing on blur when clicking inside the dropdown."
    },
    {
        "msg": "fix(Input): add missing minLength prop",
        "diff": "diff --git a/src/lib/htmlInputPropsUtils.js b/src/lib/htmlInputPropsUtils.js @@ -6,7 +6,7 @@ export const htmlInputAttrs = [\n// LIMITED HTML PROPS\n'autoCapitalize', 'autoComplete', 'autoCorrect', 'autoFocus', 'checked', 'disabled', 'form', 'id', 'max', 'maxLength',\n- 'min', 'multiple', 'name', 'pattern', 'placeholder', 'readOnly', 'required', 'step', 'type', 'value',\n+ 'min', 'minLength', 'multiple', 'name', 'pattern', 'placeholder', 'readOnly', 'required', 'step', 'type', 'value',\n]\nexport const htmlInputEvents = [\n",
        "date": "06.06.2017 01:50:08",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "chatgpt_zeroshot": "Update htmlInputPropsUtils.js to include minLength attribute in htmlInputAttrs."
    },
    {
        "msg": "fix(Search): Allow default action if there is no selected result",
        "diff": "diff --git a/src/modules/Search/Search.js b/src/modules/Search/Search.js @@ -317,13 +317,14 @@ export default class Search extends Component {\ndebug('selectItemOnEnter()')\ndebug(keyboardKey.getName(e))\nif (keyboardKey.getCode(e) !== keyboardKey.Enter) return\n- e.preventDefault()\nconst result = this.getSelectedResult()\n// prevent selecting null if there was no selected item value\nif (!result) return\n+ e.preventDefault()\n+\n// notify the onResultSelect prop that the user is trying to change value\nthis.setValue(result.title)\nthis.handleResultSelect(e, result)\n",
        "date": "08.06.2017 22:40:39",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "chatgpt_zeroshot": "Fix issue with selecting item on Enter key press in Search component"
    },
    {
        "msg": "fix(Accordion): typings inverted to boolean\nTiny fix for typings, inverted type incorrectly set to string.",
        "diff": "diff --git a/src/modules/Accordion/Accordion.d.ts b/src/modules/Accordion/Accordion.d.ts @@ -28,7 +28,7 @@ export interface AccordionProps {\nfluid?: boolean;\n/** Format for dark backgrounds. */\n- inverted?: string;\n+ inverted?: boolean;\n/**\n* Called when a panel title is clicked.\n",
        "date": "13.06.2017 02:44:08",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "chatgpt_zeroshot": "Fix type of inverted prop in Accordion component"
    },
    {
        "msg": "fix(Dropdown): Sizer rendering incorrectly; Fixes\nSetting the attribute to 'none' instead of using removeProperty.",
        "diff": "diff --git a/src/modules/Dropdown/Dropdown.js b/src/modules/Dropdown/Dropdown.js @@ -1073,7 +1073,7 @@ export default class Dropdown extends Component {\nthis.sizerRef.style.display = 'inline'\nthis.sizerRef.textContent = searchQuery\nsearchWidth = Math.ceil(this.sizerRef.getBoundingClientRect().width)\n- this.sizerRef.style.removeProperty('display')\n+ this.sizerRef.style.display = 'none'\n}\nreturn (\n",
        "date": "22.06.2017 02:25:03",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "chatgpt_zeroshot": "Fix display issue with search sizer in Dropdown component"
    },
    {
        "msg": "fix(readme): fix grammar",
        "diff": "diff --git a/README.md b/README.md @@ -172,7 +172,7 @@ git push\n## Credit\n-Originally made [@TechnologyAdvice][9] by [@levithomason][26].\n+Originally made for [@TechnologyAdvice][9] by [@levithomason][26].\nBig thanks to our [contributors][20], especially:\n",
        "date": "24.06.2017 09:17:36",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "chatgpt_zeroshot": "Fix credit attribution in README.md"
    },
    {
        "msg": "fix(Input): add typings update",
        "diff": "diff --git a/src/elements/Input/Input.d.ts b/src/elements/Input/Input.d.ts @@ -77,6 +77,6 @@ export interface InputOnChangeData extends InputProps {\nvalue: string;\n}\n-declare const Input: React.StatelessComponent<InputProps>;\n+declare const Input: React.ComponentClass<InputProps>;\nexport default Input;\n",
        "date": "30.06.2017 19:33:03",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "chatgpt_zeroshot": "Update Input component to use React.ComponentClass instead of React.StatelessComponent"
    },
    {
        "msg": "fix(Tab): fix children propType",
        "diff": "diff --git a/src/modules/Tab/TabPane.js b/src/modules/Tab/TabPane.js @@ -53,7 +53,7 @@ TabPane.propTypes = {\nas: customPropTypes.as,\n/** Primary content. */\n- children: PropTypes.string,\n+ children: PropTypes.node,\n/** Additional classes. */\nclassName: PropTypes.string,\n",
        "date": "30.06.2017 19:33:46",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "chatgpt_zeroshot": "Update TabPane propTypes for children to allow any node type."
    },
    {
        "msg": "fix(Button): fix animated prop type definition",
        "diff": "diff --git a/src/elements/Button/Button.d.ts b/src/elements/Button/Button.d.ts @@ -22,7 +22,7 @@ export interface ButtonProps {\nactive?: boolean;\n/** A button can animate to show hidden content. */\n- animated?: 'fade' | 'vertical';\n+ animated?: boolean | 'fade' | 'vertical';\n/** A button can be attached to the top or bottom of other content. */\nattached?: 'left' | 'right' | 'top' | 'bottom';\n",
        "date": "21.07.2017 21:41:00",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor ButtonProps interface to allow for boolean value in animated prop"
    },
    {
        "msg": "fix(Progress): fix wrong inverted type\nfix(Progress): fix wrong inverted type",
        "diff": "diff --git a/src/modules/Progress/Progress.d.ts b/src/modules/Progress/Progress.d.ts @@ -39,7 +39,7 @@ export interface ProgressProps {\nindicating?: boolean;\n/** A progress bar can have its colors inverted. */\n- inverted?: string;\n+ inverted?: boolean;\n/** Can be set to either to display progress as percent or ratio. */\nlabel?: SemanticShorthandItem<HtmlLabelProps>;\n",
        "date": "28.07.2017 01:56:47",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "chatgpt_zeroshot": "Fix type of inverted prop in Progress component"
    },
    {
        "msg": "fix(Statistic): fix wrong inverted type",
        "diff": "diff --git a/src/views/Statistic/Statistic.d.ts b/src/views/Statistic/Statistic.d.ts @@ -33,7 +33,7 @@ export interface StatisticProps {\nhorizontal?: boolean;\n/** A statistic can be formatted to fit on a dark background. */\n- inverted?: string;\n+ inverted?: boolean;\n/** Label content of the Statistic. */\nlabel?: SemanticShorthandContent;\n",
        "date": "31.07.2017 23:40:58",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "chatgpt_zeroshot": "Fix type of inverted prop in Statistic component"
    },
    {
        "msg": "fix(Step): fixed typo in Step.Group className\nfixed typo of invalid comma for the generated class unstackable",
        "diff": "diff --git a/src/elements/Step/StepGroup.js b/src/elements/Step/StepGroup.js @@ -35,7 +35,7 @@ function StepGroup(props) {\nsize,\nuseKeyOnly(fluid, 'fluid'),\nuseKeyOnly(ordered, 'ordered'),\n- useKeyOnly(unstackable, 'unstackable,'),\n+ useKeyOnly(unstackable, 'unstackable'),\nuseKeyOnly(vertical, 'vertical'),\nuseValueAndKey(stackable, 'stackable'),\n'steps',\n",
        "date": "11.08.2017 02:28:06",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "chatgpt_zeroshot": "Remove unnecessary comma in useKeyOnly function for unstackable prop in StepGroup component"
    },
    {
        "msg": "fix(TabPane): remove extra loading prop",
        "diff": "diff --git a/src/modules/Tab/TabPane.js b/src/modules/Tab/TabPane.js @@ -32,7 +32,7 @@ function TabPane(props) {\n}\nreturn (\n- <ElementType {...calculatedDefaultProps} {...rest} className={classes} loading={loading}>\n+ <ElementType {...calculatedDefaultProps} {...rest} className={classes}>\n{children}\n</ElementType>\n)\n",
        "date": "11.08.2017 08:52:46",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "chatgpt_zeroshot": "Remove loading prop from TabPane component"
    },
    {
        "msg": "fix(docs): fix public path",
        "diff": "diff --git a/config.js b/config.js @@ -66,7 +66,7 @@ const config = {\ncompiler_hash_type: __PROD__ ? 'chunkhash' : 'hash',\ncompiler_fail_on_warning: __TEST__ || __PROD__,\ncompiler_output_path: paths.base(envConfig.dir_docs_dist),\n- compiler_public_path: __PROD__ ? '//raw.github.com/Semantic-Org/Semantic-UI-React/gh-pages/' : '/',\n+ compiler_public_path: '/',\ncompiler_stats: {\nhash: false, // the hash of the compilation\nversion: false, // webpack version info\n",
        "date": "20.08.2017 14:14:52",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "chatgpt_zeroshot": "Update compiler_public_path in config.js"
    },
    {
        "msg": "fix(TextArea): fix typings definition",
        "diff": "diff --git a/src/addons/TextArea/TextArea.d.ts b/src/addons/TextArea/TextArea.d.ts @@ -31,7 +31,7 @@ export interface TextAreaOnChangeData extends TextAreaProps {\nvalue?: string;\n}\n-declare class TextArea extends React.Component<TextArea, {}> {\n+declare class TextArea extends React.Component<TextAreaProps, {}> {\nfocus: () => void;\n}\n",
        "date": "28.08.2017 00:54:59",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "chatgpt_zeroshot": "Fix type error in TextArea component declaration"
    },
    {
        "msg": "fix(Image): relax `wrapped` propType",
        "diff": "diff --git a/src/elements/Image/Image.js b/src/elements/Image/Image.js @@ -182,11 +182,7 @@ Image.propTypes = {\n]),\n/** An image can render wrapped in a `div.ui.image` as alternative HTML markup. */\n- wrapped: customPropTypes.every([\n- PropTypes.bool,\n- // these props wrap the image in an a tag already\n- customPropTypes.disallow(['href']),\n- ]),\n+ wrapped: PropTypes.bool,\n}\nImage.defaultProps = {\n",
        "date": "11.09.2017 06:40:55",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor Image component propTypes for wrapped prop"
    },
    {
        "msg": "fix(Popup): Remove hideOnScroll from window scroll",
        "diff": "diff --git a/src/modules/Popup/Popup.js b/src/modules/Popup/Popup.js @@ -306,6 +306,7 @@ export default class Popup extends Component {\nhandlePortalUnmount = (e) => {\ndebug('handlePortalUnmount()')\n+ window.removeEventListener('scroll', this.hideOnScroll)\nconst { onUnmount } = this.props\nif (onUnmount) onUnmount(e, this.props)\n}\n",
        "date": "18.09.2017 03:00:47",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "chatgpt_zeroshot": "Add event listener for window scroll in Popup component"
    },
    {
        "msg": "fix(Visibility): offset propType arrayOf value",
        "diff": "diff --git a/src/behaviors/Visibility/Visibility.js b/src/behaviors/Visibility/Visibility.js @@ -74,10 +74,10 @@ export default class Visibility extends Component {\noffset: PropTypes.oneOfType([\nPropTypes.number,\nPropTypes.string,\n- PropTypes.arrayOf([\n+ PropTypes.arrayOf(PropTypes.oneOfType([\nPropTypes.number,\nPropTypes.string,\n- ]),\n+ ])),\n]),\n/** When set to false a callback will occur each time an element passes the threshold for a condition. */\n",
        "date": "24.09.2017 12:45:22",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor PropTypes in Visibility component"
    },
    {
        "msg": "fix(package): separate prerelease scripts",
        "diff": "diff --git a/package.json b/package.json \"lint:fix\": \"yarn lint -- --fix\",\n\"prerelease\": \"yarn lint && yarn tsd:lint && npm test && cross-env NODE_ENV=production yarn build\",\n\"postrelease\": \"NODE_ENV=production yarn deploy:docs\",\n- \"release:major\": \"yarn prerelease && ta-script npm/release.sh major\",\n- \"release:minor\": \"yarn prerelease && ta-script npm/release.sh minor\",\n- \"release:patch\": \"yarn prerelease && ta-script npm/release.sh patch\",\n+ \"prerelease:major\": \"yarn prerelease\",\n+ \"prerelease:minor\": \"yarn prerelease\",\n+ \"prerelease:patch\": \"yarn prerelease\",\n+ \"release:major\": \"ta-script npm/release major\",\n+ \"release:minor\": \"ta-script npm/release minor\",\n+ \"release:patch\": \"ta-script npm/release patch\",\n\"prestart\": \"yarn satisfied -- --fix yarn\",\n\"start\": \"yarn docs\",\n\"satisfied\": \"satisfied --skip-invalid\",\n",
        "date": "24.09.2017 12:49:47",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor release scripts and update dependencies in package.json"
    },
    {
        "msg": "fix(package): update changelog scripts [ci skip]",
        "diff": "diff --git a/package.json b/package.json \"build:umd\": \"cross-env NODE_ENV=build gulp umd\",\n\"build:docs-toc\": \"doctoc ./.github/CONTRIBUTING.md --github --maxlevel 4\",\n\"build:docs-cname\": \"echo react.semantic-ui.com > docs/build/CNAME\",\n+ \"build:changelog\": \"github_changelog_generator --max-issues 1000\",\n+ \"deploy:changelog\": \"git add CHANGELOG.md && git commit -m 'docs(changelog): update changelog [ci skip]' && git push\",\n\"predeploy:docs\": \"cross-env NODE_ENV=production yarn build:docs && yarn build:docs-cname\",\n\"deploy:docs\": \"gh-pages -d docs/build -m 'deploy docs [ci skip]'\",\n- \"postdeploy:docs\": \"github_changelog_generator && gach 'docs(changelog): update changelog [ci skip]\",\n+ \"postdeploy:docs\": \"yarn build:changelog && yarn deploy:changelog\",\n\"lint\": \"cross-env NODE_ENV=production eslint .\",\n\"lint:fix\": \"yarn lint -- --fix\",\n\"prerelease\": \"yarn lint && yarn tsd:lint && npm test && cross-env NODE_ENV=production yarn build\",\n",
        "date": "24.09.2017 13:11:08",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "chatgpt_zeroshot": "build: Add changelog generation and deployment functionality"
    },
    {
        "msg": "fix(Dropdown): omit `moveSelectionBy()` when `options` aren't defined",
        "diff": "diff --git a/src/modules/Dropdown/Dropdown.js b/src/modules/Dropdown/Dropdown.js @@ -975,11 +975,12 @@ export default class Dropdown extends Component {\ndebug(`offset: ${offset}`)\nconst options = this.getMenuOptions()\n- const lastIndex = options.length - 1\n// Prevent infinite loop\n- if (_.every(options, 'disabled')) return\n+ // TODO: remove left part of condition after children API will be removed\n+ if (options === undefined || _.every(options, 'disabled')) return\n+ const lastIndex = options.length - 1\n// next is after last, wrap to beginning\n// next is before first, wrap to end\nlet nextIndex = startIndex + offset\n",
        "date": "25.09.2017 17:55:44",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "chatgpt_zeroshot": "Fix condition to prevent infinite loop in Dropdown component"
    },
    {
        "msg": "fix(typings): fix definition for Accordion.Accordion\nTS2604:JSX element type 'Accordion.Accordion' does not have any construct or call signatures.",
        "diff": "diff --git a/src/modules/Accordion/AccordionAccordion.d.ts b/src/modules/Accordion/AccordionAccordion.d.ts @@ -42,6 +42,6 @@ export interface AccordionPanelProps {\ntitle: SemanticShorthandItem<AccordionTitleProps>;\n}\n-declare const AccordionAccordion: AccordionAccordionProps;\n+declare const AccordionAccordion: React.ComponentClass<AccordionAccordionProps>;\nexport default AccordionAccordion;\n",
        "date": "09.10.2017 20:17:22",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "chatgpt_zeroshot": "Update AccordionAccordion type declaration to use React.ComponentClass"
    },
    {
        "msg": "fix(Responsive): fix usage of `window` for SSR",
        "diff": "diff --git a/src/addons/Responsive/Responsive.js b/src/addons/Responsive/Responsive.js @@ -7,6 +7,7 @@ import {\neventStack,\ngetElementType,\ngetUnhandledProps,\n+ isBrowser,\nMETA,\n} from '../../lib'\n@@ -55,7 +56,8 @@ export default class Responsive extends Component {\nconstructor(...args) {\nsuper(...args)\n- this.state = { width: window.innerWidth }\n+\n+ this.state = { width: isBrowser ? window.innerWidth : 0 }\n}\ncomponentDidMount() {\n",
        "date": "17.10.2017 20:43:07",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "chatgpt_zeroshot": "Update Responsive component to handle server-side rendering"
    },
    {
        "msg": "fix(TextArea): fix autoHeight calculate wrong value on long text\nCalculate content height without taking a vertical scroll bar into\naccount.",
        "diff": "diff --git a/src/addons/TextArea/TextArea.js b/src/addons/TextArea/TextArea.js @@ -115,7 +115,9 @@ class TextArea extends Component {\n// Measure the scrollHeight and update the height to match.\nthis.ref.style.height = 'auto'\n+ this.ref.style.overflowY = 'hidden'\nthis.ref.style.height = `${Math.max(parseFloat(minHeight), Math.ceil(this.ref.scrollHeight + borderHeight))}px`\n+ this.ref.style.overflowY = ''\n}\nrender() {\n",
        "date": "18.10.2017 11:24:49",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "chatgpt_zeroshot": "Fix issue with TextArea height calculation"
    },
    {
        "msg": "fix(Modal): fix state update after close",
        "diff": "diff --git a/src/modules/Modal/Modal.js b/src/modules/Modal/Modal.js @@ -175,10 +175,8 @@ class Modal extends Component {\nhandleClose = (e) => {\ndebug('close()')\n- const { onClose } = this.props\n- if (onClose) onClose(e, this.props)\n-\n- this.trySetState({ open: false }, { scrolling: false })\n+ _.invoke(this.props, 'onClose', e, this.props)\n+ this.trySetState({ open: false })\n}\nhandleIconOverrides = predefinedProps => ({\n@@ -191,19 +189,17 @@ class Modal extends Component {\nhandleOpen = (e) => {\ndebug('open()')\n- const { onOpen } = this.props\n- if (onOpen) onOpen(e, this.props)\n-\n+ _.invoke(this.props, 'onOpen', e, this.props)\nthis.trySetState({ open: true })\n}\nhandlePortalMount = (e) => {\ndebug('handlePortalMount()')\n+ this.setState({ scrolling: false })\nthis.setPositionAndClassNames()\n- const { onMount } = this.props\n- if (onMount) onMount(e, this.props)\n+ _.invoke(this.props, 'onMount', e, this.props)\n}\nhandlePortalUnmount = (e) => {\n@@ -221,9 +217,7 @@ class Modal extends Component {\nmountNode.classList.remove('scrolling')\ncancelAnimationFrame(this.animationRequestId)\n-\n- const { onUnmount } = this.props\n- if (onUnmount) onUnmount(e, this.props)\n+ _.invoke(this.props, 'onUnmount', e, this.props)\n}\nhandleRef = c => (this.ref = c)\n",
        "date": "29.10.2017 08:08:10",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor Modal component event handling methods"
    },
    {
        "msg": "fix(docs): add missing period to script URL\nFixes issue",
        "diff": "diff --git a/docs/app/index.ejs b/docs/app/index.ejs <script src=\"//cdn.jsdelivr.net/faker.js/<%= htmlWebpackPlugin.options.versions.faker %>/faker.min.js\"></script>\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/js-beautify/<%= htmlWebpackPlugin.options.versions.jsBeautify %>/beautify-html.min.js\"></script>\n<!-- Use unminified React when not in production so we get errors and warnings -->\n- <script src=\"//cdnjs.cloudflare.com/ajax/libs/prop-types/<%= htmlWebpackPlugin.options.versions.propTypes %>/prop-types<%= __PROD__ ? 'min' : '' %>.js\"></script>\n+ <script src=\"//cdnjs.cloudflare.com/ajax/libs/prop-types/<%= htmlWebpackPlugin.options.versions.propTypes %>/prop-types<%= __PROD__ ? '.min' : '' %>.js\"></script>\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/react/<%= htmlWebpackPlugin.options.versions.react %>/umd/react<%= __PROD__ ? '.production.min' : '.development' %>.js\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/react-dom/<%= htmlWebpackPlugin.options.versions.reactDOM %>/umd/react-dom<%= __PROD__ ? '.production.min' : '.development' %>.js\"></script>\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/react-dom/<%= htmlWebpackPlugin.options.versions.reactDOM %>/umd/react-dom-server.browser<%= __PROD__ ? '.production.min' : '.development' %>.js\"></script>\n",
        "date": "05.11.2017 01:23:08",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "chatgpt_zeroshot": "Fix typo in prop-types script tag"
    },
    {
        "msg": "fix(Portal): fix usage of eventPool",
        "diff": "diff --git a/src/addons/Portal/Portal.js b/src/addons/Portal/Portal.js @@ -343,7 +343,7 @@ class Portal extends Component {\nif (!this.state.open) return\ndebug('renderPortal()')\n- const { children, className } = this.props\n+ const { children, className, eventPool } = this.props\nthis.mountPortal()\n@@ -354,8 +354,8 @@ class Portal extends Component {\n// when re-rendering, first remove listeners before re-adding them to the new node\nif (this.portalNode) {\n- eventStack.unsub('mouseleave', this.handlePortalMouseLeave, { target: this.portalNode })\n- eventStack.unsub('mouseenter', this.handlePortalMouseEnter, { target: this.portalNode })\n+ eventStack.unsub('mouseleave', this.handlePortalMouseLeave, { pool: eventPool, target: this.portalNode })\n+ eventStack.unsub('mouseenter', this.handlePortalMouseEnter, { pool: eventPool, target: this.portalNode })\n}\nReactDOM.unstable_renderSubtreeIntoContainer(\n@@ -365,8 +365,8 @@ class Portal extends Component {\n() => {\nthis.portalNode = this.rootNode.firstElementChild\n- eventStack.sub('mouseleave', this.handlePortalMouseLeave, { target: this.portalNode })\n- eventStack.sub('mouseenter', this.handlePortalMouseEnter, { target: this.portalNode })\n+ eventStack.sub('mouseleave', this.handlePortalMouseLeave, { pool: eventPool, target: this.portalNode })\n+ eventStack.sub('mouseenter', this.handlePortalMouseEnter, { pool: eventPool, target: this.portalNode })\n},\n)\n}\n@@ -390,8 +390,8 @@ class Portal extends Component {\nmountNode.appendChild(this.rootNode)\n}\n- eventStack.sub('click', this.handleDocumentClick, eventPool)\n- eventStack.sub('keydown', this.handleEscape, eventPool)\n+ eventStack.sub('click', this.handleDocumentClick, { pool: eventPool })\n+ eventStack.sub('keydown', this.handleEscape, { pool: eventPool })\n_.invoke(this.props, 'onMount', null, this.props)\n}\n@@ -404,14 +404,14 @@ class Portal extends Component {\nReactDOM.unmountComponentAtNode(this.rootNode)\nthis.rootNode.parentNode.removeChild(this.rootNode)\n- eventStack.unsub('mouseleave', this.handlePortalMouseLeave, { target: this.portalNode })\n- eventStack.unsub('mouseenter', this.handlePortalMouseEnter, { target: this.portalNode })\n+ eventStack.unsub('mouseleave', this.handlePortalMouseLeave, { pool: eventPool, target: this.portalNode })\n+ eventStack.unsub('mouseenter', this.handlePortalMouseEnter, { pool: eventPool, target: this.portalNode })\nthis.rootNode = null\nthis.portalNode = null\n- eventStack.unsub('click', this.handleDocumentClick, eventPool)\n- eventStack.unsub('keydown', this.handleEscape, eventPool)\n+ eventStack.unsub('click', this.handleDocumentClick, { pool: eventPool })\n+ eventStack.unsub('keydown', this.handleEscape, { pool: eventPool })\n_.invoke(this.props, 'onUnmount', null, this.props)\n}\n",
        "date": "18.11.2017 21:17:41",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor event handling in Portal component to use eventPool parameter"
    },
    {
        "msg": "fix(Responsive): use setState() safely",
        "diff": "diff --git a/src/addons/Responsive/Responsive.js b/src/addons/Responsive/Responsive.js @@ -66,11 +66,14 @@ export default class Responsive extends Component {\ncomponentDidMount() {\nconst { fireOnMount } = this.props\n+ this.mounted = true\n+\neventStack.sub('resize', this.handleResize, { target: 'window' })\nif (fireOnMount) this.handleUpdate()\n}\ncomponentWillUnmount() {\n+ this.mounted = false\neventStack.unsub('resize', this.handleResize, { target: 'window' })\n}\n@@ -92,6 +95,8 @@ export default class Responsive extends Component {\nreturn _.isNil(minWidth) ? true : width >= minWidth\n}\n+ setSafeState = (...args) => this.mounted && this.setState(...args)\n+\nisVisible = () => this.fitsMinWidth() && this.fitsMaxWidth()\n// ----------------------------------------\n@@ -109,7 +114,7 @@ export default class Responsive extends Component {\nthis.ticking = false\nconst width = window.innerWidth\n- this.setState({ width })\n+ this.setSafeState({ width })\n_.invoke(this.props, 'onUpdate', e, { ...this.props, width })\n}\n",
        "date": "11.01.2018 02:59:34",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "chatgpt_zeroshot": "Add mounted flag to prevent state updates after unmounting component"
    },
    {
        "msg": "fix(AccordionTitle): allow strings in index PropType\nfix(AccordionTitle): allow strings in index PropType",
        "diff": "diff --git a/src/modules/Accordion/AccordionTitle.js b/src/modules/Accordion/AccordionTitle.js @@ -34,7 +34,10 @@ export default class AccordionTitle extends Component {\ncontent: customPropTypes.contentShorthand,\n/** AccordionTitle index inside Accordion. */\n- index: PropTypes.number,\n+ index: PropTypes.oneOfType([\n+ PropTypes.string,\n+ PropTypes.number,\n+ ]),\n/**\n* Called on click.\n",
        "date": "04.02.2018 23:30:18",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "chatgpt_zeroshot": "Update AccordionTitle index prop to accept string or number values"
    },
    {
        "msg": "fix(Accordion): update signature of `onTitleClick` in typings",
        "diff": "diff --git a/src/modules/Accordion/AccordionAccordion.d.ts b/src/modules/Accordion/AccordionAccordion.d.ts @@ -29,9 +29,9 @@ export interface AccordionAccordionProps {\n* Called when a panel title is clicked.\n*\n* @param {SyntheticEvent} event - React's original SyntheticEvent.\n- * @param {number} index - The index of the clicked panel.\n+ * @param {AccordionTitleProps} data - All item props.\n*/\n- onTitleClick?: (event: React.MouseEvent<HTMLDivElement>, index: number | number[]) => void;\n+ onTitleClick?: (event: React.MouseEvent<HTMLDivElement>, data: AccordionTitleProps) => void;\n/** Shorthand array of props for Accordion. */\npanels?: SemanticShorthandCollection<AccordionPanelProps>;\n",
        "date": "25.02.2018 23:00:30",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor onTitleClick prop in AccordionAccordionProps to accept AccordionTitleProps data instead of index."
    },
    {
        "msg": "fix(docs): fix return agrument in ComponentPropsComponents",
        "diff": "diff --git a/docs/app/Components/ComponentDoc/ComponentProps/ComponentPropsComponents.js b/docs/app/Components/ComponentDoc/ComponentProps/ComponentPropsComponents.js @@ -7,7 +7,7 @@ import { updateForKeys } from 'docs/app/HOC'\nimport ComponentPropsComponent from './ComponentPropsComponent'\nconst ComponentPropsComponents = ({ activeName, components, onItemClick, parent }) => {\n- if (components.length === 1) return\n+ if (components.length === 1) return null\nreturn (\n<Menu color='green' compact size='small' secondary>\n",
        "date": "26.02.2018 14:56:25",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "chatgpt_zeroshot": "Fix return statement in ComponentPropsComponents to return null when components length is 1"
    },
    {
        "msg": "fix(Responsive): fix types in typings",
        "diff": "diff --git a/src/addons/Responsive/Responsive.d.ts b/src/addons/Responsive/Responsive.d.ts @@ -28,12 +28,12 @@ export interface ResponsiveProps {\n}\nexport interface ResponsiveOnUpdateData extends ResponsiveProps {\n- width: string;\n+ width: number;\n}\nexport interface ResponsiveWidthShorthand {\n- minWidth: number;\n- maxWidth?: number;\n+ minWidth?: number | string;\n+ maxWidth?: number | string;\n}\ndeclare class Responsive extends React.Component<ResponsiveProps, {}> {\n",
        "date": "11.03.2018 14:10:49",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "chatgpt_zeroshot": "Update ResponsiveOnUpdateData interface to use number type for width and allow string type for minWidth and maxWidth in ResponsiveWidthShorthand interface."
    },
    {
        "msg": "fix(Layouts): fix behaviour of Sidebar in mobile view",
        "diff": "diff --git a/docs/app/Layouts/HomepageLayout.js b/docs/app/Layouts/HomepageLayout.js @@ -107,6 +107,12 @@ DesktopContainer.propTypes = {\nclass MobileContainer extends Component {\nstate = {}\n+ handlePusherClick = () => {\n+ const { sidebarOpened } = this.state\n+\n+ if (sidebarOpened) this.setState({ sidebarOpened: false })\n+ }\n+\nhandleToggle = () => this.setState({ sidebarOpened: !this.state.sidebarOpened })\nrender() {\n@@ -122,10 +128,10 @@ class MobileContainer extends Component {\n<Menu.Item as='a'>Company</Menu.Item>\n<Menu.Item as='a'>Careers</Menu.Item>\n<Menu.Item as='a'>Log in</Menu.Item>\n- <Menu.Item as='a' primary>Sign Up</Menu.Item>\n+ <Menu.Item as='a'>Sign Up</Menu.Item>\n</Sidebar>\n- <Sidebar.Pusher dimmed={sidebarOpened} onClick={this.handleToggle} style={{ minHeight: '100vh' }}>\n+ <Sidebar.Pusher dimmed={sidebarOpened} onClick={this.handlePusherClick} style={{ minHeight: '100vh' }}>\n<Segment inverted textAlign='center' style={{ minHeight: 350, padding: '1em 0em' }} vertical>\n<Container>\n<Menu inverted pointing secondary size='large'>\n",
        "date": "11.03.2018 14:46:03",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor mobile container component to handle sidebar click event"
    },
    {
        "msg": "fix(Input): add missing accept prop",
        "diff": "diff --git a/src/lib/htmlPropsUtils.js b/src/lib/htmlPropsUtils.js @@ -5,8 +5,8 @@ export const htmlInputAttrs = [\n'selected', 'defaultValue', 'defaultChecked',\n// LIMITED HTML PROPS\n- 'autoCapitalize', 'autoComplete', 'autoCorrect', 'autoFocus', 'checked', 'disabled', 'form', 'id', 'list', 'max',\n- 'maxLength', 'min', 'minLength', 'multiple', 'name', 'pattern', 'placeholder', 'readOnly', 'required', 'step',\n+ 'accept', 'autoCapitalize', 'autoComplete', 'autoCorrect', 'autoFocus', 'checked', 'disabled', 'form', 'id', 'list',\n+ 'max', 'maxLength', 'min', 'minLength', 'multiple', 'name', 'pattern', 'placeholder', 'readOnly', 'required', 'step',\n'type', 'value',\n]\n",
        "date": "15.03.2018 21:03:37",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "chatgpt_zeroshot": "Update htmlInputAttrs with new attribute 'accept'"
    },
    {
        "msg": "fix(factories): fix typo in exception",
        "diff": "diff --git a/src/lib/factories.js b/src/lib/factories.js @@ -19,7 +19,7 @@ import React, { cloneElement, isValidElement } from 'react'\n*/\nexport function createShorthand(Component, mapValueToProps, val, options = {}) {\nif (typeof Component !== 'function' && typeof Component !== 'string') {\n- throw new Error('createShorthandFactory() Component must be a string or function.')\n+ throw new Error('createShorthand() Component must be a string or function.')\n}\n// short circuit noop values\nif (_.isNil(val) || _.isBoolean(val)) return null\n",
        "date": "16.03.2018 11:35:30",
        "repo": "semantic-org/semantic-ui-react",
        "type": "fix",
        "chatgpt_zeroshot": "Refactor error message in createShorthand function"
    },
    {
        "msg": "perf(Modal): reduce unnecessary layout invalidations\nImprove performance especially in IE11 when a modal is used",
        "diff": "diff --git a/src/modules/Modal/Modal.js b/src/modules/Modal/Modal.js @@ -250,9 +250,10 @@ class Modal extends Component {\nsetDimmerNodeStyle = () => {\ndebug('setDimmerNodeStyle()')\n+ const { current } = this.dimmerRef\n- if (this.dimmerRef.current && this.dimmerRef.current.style) {\n- this.dimmerRef.current.style.setProperty('display', 'flex', 'important')\n+ if (current && current.style && current.style.display !== 'flex') {\n+ current.style.setProperty('display', 'flex', 'important')\n}\n}\n",
        "date": "26.05.2019 18:09:33",
        "repo": "semantic-org/semantic-ui-react",
        "type": "perf",
        "chatgpt_zeroshot": "Refactor setDimmerNodeStyle method in Modal component"
    },
    {
        "msg": "perf(isISO31661Alpha3): use a Set along with .has instead of includes",
        "diff": "diff --git a/src/lib/isISO31661Alpha3.js b/src/lib/isISO31661Alpha3.js import assertString from './util/assertString';\n-import includes from './util/includes';\n// from https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3\n-const validISO31661Alpha3CountriesCodes = [\n+const validISO31661Alpha3CountriesCodes = new Set([\n'AFG', 'ALA', 'ALB', 'DZA', 'ASM', 'AND', 'AGO', 'AIA', 'ATA', 'ATG', 'ARG', 'ARM', 'ABW', 'AUS', 'AUT', 'AZE',\n'BHS', 'BHR', 'BGD', 'BRB', 'BLR', 'BEL', 'BLZ', 'BEN', 'BMU', 'BTN', 'BOL', 'BES', 'BIH', 'BWA', 'BVT', 'BRA',\n'IOT', 'BRN', 'BGR', 'BFA', 'BDI', 'KHM', 'CMR', 'CAN', 'CPV', 'CYM', 'CAF', 'TCD', 'CHL', 'CHN', 'CXR', 'CCK',\n@@ -19,9 +18,9 @@ const validISO31661Alpha3CountriesCodes = [\n'ESP', 'LKA', 'SDN', 'SUR', 'SJM', 'SWZ', 'SWE', 'CHE', 'SYR', 'TWN', 'TJK', 'TZA', 'THA', 'TLS', 'TGO', 'TKL',\n'TON', 'TTO', 'TUN', 'TUR', 'TKM', 'TCA', 'TUV', 'UGA', 'UKR', 'ARE', 'GBR', 'USA', 'UMI', 'URY', 'UZB', 'VUT',\n'VEN', 'VNM', 'VGB', 'VIR', 'WLF', 'ESH', 'YEM', 'ZMB', 'ZWE',\n-];\n+]);\nexport default function isISO31661Alpha3(str) {\nassertString(str);\n- return includes(validISO31661Alpha3CountriesCodes, str.toUpperCase());\n+ return validISO31661Alpha3CountriesCodes.has(str.toUpperCase());\n}\n",
        "date": "26.09.2021 17:56:30",
        "repo": "validatorjs/validator.js",
        "type": "perf",
        "chatgpt_zeroshot": "Refactor isISO31661Alpha3.js to use Set for validISO31661Alpha3CountriesCodes"
    },
    {
        "msg": "perf: improve regex perf",
        "diff": "diff --git a/packages/veui-loader/src/index.js b/packages/veui-loader/src/index.js @@ -240,7 +240,7 @@ function getExtname (file) {\nreturn path.extname(file).replace(/\\./g, '').toLowerCase()\n}\n-const RE_SCRIPT = /<script(?:\\s[^>]*)?>/i\n+const RE_SCRIPT = /<script(?:\\s[^<>]*)?>/i\n/**\n* Patch file content according to a given type.\n",
        "date": "11.11.2022 09:50:43",
        "repo": "ecomfe/veui",
        "type": "perf",
        "chatgpt_zeroshot": "Fix regex pattern in getExtname function"
    },
    {
        "msg": "perf: Cache result in getSystemVersion()\nThis caching has been broken with commit",
        "diff": "diff --git a/src/NativeScript/Metadata/Metadata.mm b/src/NativeScript/Metadata/Metadata.mm @@ -29,7 +29,7 @@ static UInt8 getSystemVersion() {\nUInt8 majorVersion = (UInt8)[versionTokens[0] intValue];\nUInt8 minorVersion = (UInt8)[versionTokens[1] intValue];\n- return encodeVersion(majorVersion, minorVersion);\n+ return iosVersion = encodeVersion(majorVersion, minorVersion);\n}\nstd::unordered_map<std::string, MembersCollection> getMetasByJSNames(MembersCollection members) {\nstd::unordered_map<std::string, MembersCollection> result;\n",
        "date": "21.05.2019 13:12:21",
        "repo": "nativescript/ios-runtime",
        "type": "perf",
        "chatgpt_zeroshot": "Refactor encodeVersion function to store iOS version in iosVersion variable"
    },
    {
        "msg": "perf(webscoket): switch to another endpoint when reconnecting\nThis makes reconenction faster when a server is privated.",
        "diff": "diff --git a/src/websocket-plus.js b/src/websocket-plus.js @@ -41,14 +41,14 @@ class WebSocketPlus extends EventEmitter {\n);\n}\nsuper();\n- if (typeof getUrls !== 'function') {\n- this._getUrls = () => Promise.resolve(getUrls);\n- } else {\n- this._getUrls = getUrls;\n- }\n- this._protocol = protocol;\nthis.init();\n- this._createWs(this._getUrls, this._protocol)\n+ this._protocol = protocol;\n+ Promise.resolve(typeof getUrls === 'function' ? getUrls() : getUrls)\n+ .then(ensureArray)\n+ .then(urls => {\n+ this._urls = urls;\n+ return this._open();\n+ })\n.then(() => {\nthis.__postponeTimeoutTimer = this._postponeTimeoutTimer.bind(this);\nif (global.addEventListener) {\n@@ -62,14 +62,19 @@ class WebSocketPlus extends EventEmitter {\n.catch(this.throw.bind(this));\n}\n- _createWs(getUrls, protocol) {\n- return getUrls().then(urls =>\n- tryAll(\n- ensureArray(urls).map(url => (resolve, reject) => {\n+ _open() {\n+ return this._createWs(this._urls, this._protocol).then(ws => {\n+ const [first, ...reset] = this._urls;\n+ this._urls = [...reset, first];\n+ return ws;\n+ });\n+ }\n+\n+ _createWs(urls, protocol) {\n+ return tryAll(\n+ urls.map(url => (resolve, reject) => {\ndebug(`connect [${url}] ${protocol}`);\n- const ws = protocol\n- ? new WebSocket(url, protocol)\n- : new WebSocket(url);\n+ const ws = protocol ? new WebSocket(url, protocol) : new WebSocket(url);\nws.binaryType = this.binaryType || 'arraybuffer';\nws.onopen = () => resolve(ws);\nws.onclose = error => {\n@@ -86,8 +91,7 @@ class WebSocketPlus extends EventEmitter {\nthis._ws.onclose = this._handleClose.bind(this);\nthis._ws.onmessage = this._handleMessage.bind(this);\nreturn ws;\n- })\n- );\n+ });\n}\n_destroyWs() {\nconst ws = this._ws;\n@@ -141,7 +145,7 @@ class WebSocketPlus extends EventEmitter {\n}\nonretry(event, from, to, attempt = 0) {\nthis.emit(RETRY, attempt);\n- this._createWs(this._getUrls, this._protocol).then(\n+ this._open().then(\n() => (this.can('reconnect') ? this.reconnect() : this._destroyWs()),\n() => this.can('fail') && this.fail(attempt + 1)\n);\n",
        "date": "26.04.2018 17:34:01",
        "repo": "leancloud/js-realtime-sdk",
        "type": "perf",
        "chatgpt_zeroshot": "Refactor WebSocketPlus class to improve URL handling and connection logic"
    },
    {
        "msg": "perf(regl-renderer): use webgl2 as default context or enable OES_element_index_uint extension\nupdated viewer to use either webgl2 or OES_element_index_uint extension",
        "diff": "diff --git a/packages/web/src/ui/views/viewer.js b/packages/web/src/ui/views/viewer.js @@ -53,6 +53,7 @@ const viewer = (state, i18n) => {\nif (!render) {\nconst options = setup(el)\n+ if (options.error) return html`<b style=\"color:red; background:white; position:fixed; z-index:10; top:50%\">${options.error}</b>`\nviewerOptions = options.viewerOptions\ncamera = options.camera\nrender = prepareRender(viewerOptions)\n@@ -191,13 +192,32 @@ const viewer = (state, i18n) => {\nreturn el\n}\n+const createContext = (canvas, contextAttributes) => {\n+ const get = (type) => {\n+ try {\n+ return { gl: canvas.getContext(type, contextAttributes), type }\n+ } catch (e) {\n+ return null\n+ }\n+ }\n+ return (\n+ get('webgl2') ||\n+ get('webgl') ||\n+ get('experimental-webgl') ||\n+ get('webgl-experimental')\n+ )\n+}\n+\nconst setup = (element) => {\n// prepare the camera\n+ let error\nconst camera = Object.assign({}, perspectiveCamera.defaults)\ncamera.position = [150, -180, 233]\n+ const { gl, type } = createContext(element)\n+\nconst viewerOptions = {\n- glOptions: { canvas: element },\n+ glOptions: { gl },\ncamera,\ndrawCommands: {\n// draw commands bootstrap themselves the first time they are run\n@@ -209,7 +229,14 @@ const setup = (element) => {\n// data\nentities: []\n}\n- return { viewerOptions, camera }\n+ if (type === 'webgl') {\n+ if (!gl.getExtension('OES_element_index_uint')) {\n+ error = 'Your browser uses an old version of WebGL without OES_element_index_uint. Please upgrade your browser to use this application'\n+ }\n+\n+ viewerOptions.glOptions.optionalExtensions = ['oes_element_index_uint']\n+ }\n+ return { viewerOptions, camera, error }\n}\nconst resize = (viewerElement) => {\n",
        "date": "12.08.2021 18:56:19",
        "repo": "jscad/openjscad.org",
        "type": "perf",
        "chatgpt_zeroshot": "Add error handling for WebGL context creation in viewer setup"
    },
    {
        "msg": "perf(modeling): improved measureBoundingBox by eliminating allocations",
        "diff": "diff --git a/packages/modeling/src/measurements/measureBoundingBox.js b/packages/modeling/src/measurements/measureBoundingBox.js @@ -31,10 +31,9 @@ const measureBoundingBoxOfPath2Points = (points) => {\nvec2.min(minpoint, minpoint, point)\nvec2.max(maxpoint, maxpoint, point)\n})\n-\nboundingBox = [[minpoint[0], minpoint[1], 0], [maxpoint[0], maxpoint[1], 0]]\n- cache.set(points, boundingBox)\n+ cache.set(points, boundingBox)\nreturn boundingBox\n}\n@@ -55,7 +54,6 @@ const measureBoundingBoxOfPath2 = (geometry) => {\n}\ncache.set(geometry, boundingBox)\n-\nreturn boundingBox\n}\n@@ -65,6 +63,7 @@ const measureBoundingBoxOfPath2 = (geometry) => {\n*/\nconst measureBoundingBoxOfGeom2Points = ({ points, sides }) => {\nconst cacheKey = points || sides\n+\nlet boundingBox = cache.get(cacheKey)\nif (boundingBox) return boundingBox\n@@ -96,11 +95,9 @@ const measureBoundingBoxOfGeom2Points = ({ points, sides }) => {\nvec2.max(maxpoint, maxpoint, side[0])\n})\n}\n-\nboundingBox = [[minpoint[0], minpoint[1], 0], [maxpoint[0], maxpoint[1], 0]]\ncache.set(cacheKey, boundingBox)\n-\nreturn boundingBox\n}\n@@ -121,7 +118,6 @@ const measureBoundingBoxOfGeom2 = (geometry) => {\n}\ncache.set(geometry, boundingBox)\n-\nreturn boundingBox\n}\n@@ -150,7 +146,6 @@ const measureBoundingBoxOfGeom3Polygons = (polygons) => {\nboundingBox = [[minpoint[0], minpoint[1], minpoint[2]], [maxpoint[0], maxpoint[1], maxpoint[2]]]\ncache.set(polygons, boundingBox)\n-\nreturn boundingBox\n}\n@@ -171,13 +166,13 @@ const measureBoundingBoxOfGeom3 = (geometry) => {\n}\ncache.set(geometry, boundingBox)\n-\nreturn boundingBox\n}\n-/* swap values if specific axis value in the second vector has lower value than the axis value in first vector */\n+/*\n+ * swap values if specific axis value in the second vector has lower value than the axis value in first vector\n+ */\nconst fixBound = (i, v1, v2) => {\n- // this function will likely be inlined by the JS optimization compiler\nif (v1[i] > v2[i]) {\nconst tmp = v1[i]\nv1[i] = v2[i]\n@@ -185,18 +180,21 @@ const fixBound = (i, v1, v2) => {\n}\n}\n+/*\n+ * Transform the given bounding box\n+ */\nconst transformBoundingBox = (boundingBox, transforms) => {\n- if (transforms && !mat4.isIdentity(transforms)) {\n- const out = [vec3.transform(vec3.create(), boundingBox[0], transforms), vec3.transform(vec3.create(), boundingBox[1], transforms)]\n+ if (!mat4.isIdentity(transforms)) {\n+ vec3.transform(boundingBox[0], boundingBox[0], transforms),\n+ vec3.transform(boundingBox[1], boundingBox[1], transforms)\n// we now have a new 2 vectors: [v1,v2] => [ [x1,y1,z1], [x2,y2,z2] ]\n// transform can move bounding box corner in such way that it is no longer true that\n// - v1 = [min(x1,x2),min(y1,y2),min(z1,z2)]\n// - v2 = [max(x1,x2),max(y1,y2),max(z1,z2)]\n- fixBound(0, ...out)// swap x, if higher value is in first vector\n- fixBound(1, ...out)// swap y, if higher value is in first vector\n- fixBound(2, ...out)// swap z, if higher value is in first vector\n- return out\n+ fixBound(0, ...boundingBox) // swap x, if higher value is in first vector\n+ fixBound(1, ...boundingBox) // swap y, if higher value is in first vector\n+ fixBound(2, ...boundingBox) // swap z, if higher value is in first vector\n}\nreturn boundingBox\n}\n@@ -223,15 +221,4 @@ const measureBoundingBox = (...geometries) => {\nreturn results.length === 1 ? results[0] : results\n}\n-/**\n- * Shortcut for geometries that are complex but have a fast way to calculate bounding box.\n- * Ellipsoid, or cylinder can provide boundingBox that pre-calculated based on parameters without traversing points.\n- *\n- * Another option is to calculate boundingBox durint toPoints (so the boundingBox could be calculated during transform)\n- *\n- * NOTE: It seems that measureBoundingBox is used all over the place, and it would be wise to allow\n- * shortcuts for calculating it, as default implementation goes through all points in geometry which is bound to be slow.\n-*/\n-measureBoundingBox.setCache = (geometry, boundingBox) => cache.set(geometry, boundingBox)\n-\nmodule.exports = measureBoundingBox\n",
        "date": "04.12.2021 12:43:19",
        "repo": "jscad/openjscad.org",
        "type": "perf",
        "chatgpt_zeroshot": "Refactor bounding box measurement functions and optimize transformBoundingBox."
    },
    {
        "msg": "perf(modeling): changed geom2.toOutlines to use a map when creating unique edges",
        "diff": "diff --git a/packages/modeling/src/geometries/geom2/toOutlines.js b/packages/modeling/src/geometries/geom2/toOutlines.js @@ -7,21 +7,16 @@ const toSides = require('./toSides')\n* This allows the edges to be traversed in order.\n*/\nconst toEdges = (sides) => {\n- const uniquevertices = []\n+ const vertices = {}\nconst getUniqueVertex = (vertex) => {\n- const i = uniquevertices.findIndex((v) => vec2.equals(v, vertex))\n- if (i < 0) {\n- uniquevertices.push(vertex)\n- return vertex\n+ const key = vertex.toString()\n+ if (!vertices[key]) {\n+ vertices[key] = vertex\n}\n- return uniquevertices[i]\n+ return vertices[key]\n}\n- const edges = []\n- sides.forEach((side) => {\n- edges.push([getUniqueVertex(side[0]), getUniqueVertex(side[1])])\n- })\n- return edges\n+ return sides.map((side) => side.map(getUniqueVertex))\n}\n/**\n",
        "date": "18.02.2022 21:02:13",
        "repo": "jscad/openjscad.org",
        "type": "perf",
        "chatgpt_zeroshot": "Refactor toEdges function to use object for vertices storage"
    },
    {
        "msg": "perf(web): changed to retain webworker process",
        "diff": "diff --git a/packages/web/src/sideEffects/worker/index.js b/packages/web/src/sideEffects/worker/index.js @@ -5,25 +5,24 @@ const callBackToStream = require('../../most-utils/callbackToObservable')\nconst makeWorkerEffect = (workerPath) => {\nconst workerEventsCb = callBackToStream()\n- let _worker = WebWorkify(workerPath)\n+ let _worker = WebWorkify(workerPath, {})\n_worker.onerror = (error) => workerEventsCb.callback({ error })\n_worker.onmessage = (message) => workerEventsCb.callback(message)\nconst workerSink = (outToWorker$) => {\n// cancel whatever is going on in the worker by terminating it\noutToWorker$.filter(({ cmd }) => cmd === 'cancel')\n- .forEach((_) => _worker.terminate())\n-\n- // send other messages to the worker\n- outToWorker$\n- .filter(({ cmd }) => cmd !== 'cancel')\n.forEach((task) => {\n- // FIXME: sub optimal ! worker recreation is SLOW and should not be systematic\n_worker.terminate()\n_worker = WebWorkify(workerPath)\n_worker.onerror = (error) => workerEventsCb.callback({ error })\n_worker.onmessage = (message) => workerEventsCb.callback(message)\n- // do the task\n+ })\n+\n+ // send other messages to the worker\n+ outToWorker$\n+ .filter(({ cmd }) => cmd !== 'cancel')\n+ .forEach((task) => {\n_worker.postMessage(task)\n})\n}\n",
        "date": "14.06.2022 06:30:36",
        "repo": "jscad/openjscad.org",
        "type": "perf",
        "chatgpt_zeroshot": "Refactor worker creation and termination logic in makeWorkerEffect"
    },
    {
        "msg": "perf(library): remove loading circle to decrease cpu load",
        "diff": "diff --git a/src/views/PlexLibrary.vue b/src/views/PlexLibrary.vue <v-row\nv-if=\"!stopNewContent\"\n- justify=\"center\"\n- align=\"start\"\n- >\n- <v-col\nv-intersect=\"onIntersect\"\n- cols=\"12\"\n- style=\"position: relative;\"\n- >\n- <v-progress-circular\n- style=\"left: 50%; top: 50%;\"\n- :size=\"60\"\n- indeterminate\n- class=\"amber--text\"\n/>\n- </v-col>\n- </v-row>\n</v-container>\n</template>\n",
        "date": "12.09.2020 18:01:15",
        "repo": "synclounge/synclounge",
        "type": "perf",
        "chatgpt_zeroshot": "Remove progress circular from PlexLibrary.vue"
    },
    {
        "msg": "perf: use 'base64url' encoding when available in Node.js runtime",
        "diff": "diff --git a/src/runtime/node/base64url.ts b/src/runtime/node/base64url.ts import { decoder } from '../../lib/buffer_utils.js'\n-export const encode = (input: Uint8Array | string) =>\n- Buffer.from(input).toString('base64').replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_')\n+let encodeImpl: (input: Uint8Array | string) => string\n-export const decode = (input: Uint8Array | string) => {\n+function normalize(input: string | Uint8Array) {\nlet encoded = input\nif (encoded instanceof Uint8Array) {\nencoded = decoder.decode(encoded)\n}\n- return new Uint8Array(Buffer.from(encoded, 'base64'))\n+ return encoded\n}\n+\n+if (Buffer.isEncoding('base64url')) {\n+ encodeImpl = (input) => Buffer.from(input).toString(<BufferEncoding>'base64url')\n+} else {\n+ encodeImpl = (input) =>\n+ Buffer.from(input).toString('base64').replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_')\n+}\n+\n+export const encode = encodeImpl\n+export const decode = (input: Uint8Array | string) => Buffer.from(normalize(input), 'base64')\n",
        "date": "18.01.2021 13:22:46",
        "repo": "panva/jose",
        "type": "perf",
        "chatgpt_zeroshot": "Refactor base64url encoding and decoding functions"
    },
    {
        "msg": "perf: instantiate errors lazily",
        "diff": "diff --git a/addon/model.js b/addon/model.js @@ -78,7 +78,7 @@ export default class MegamorphicModel extends EmberObject {\nthis._topModel = this._topModel || this;\nthis._parentModel = this._parentModel || null;\n- this._errors = DS.Errors.create();\n+ this._errors = null;\nthis._init = true;\nif (!CUSTOM_MODEL_CLASS) {\nthis._internalModel = properties._internalModel;\n@@ -487,16 +487,16 @@ export default class MegamorphicModel extends EmberObject {\n_removeError(key) {\n// Remove errors for the property\n- this._errors.remove(key);\n+ this.errors.remove(key);\nif (CUSTOM_MODEL_CLASS) {\n- if (get(this._errors, 'length') === 0) {\n+ if (get(this.errors, 'length') === 0) {\nthis._clearInvalidRequestErrors();\n}\n} else {\nif (\nthis._internalModel.currentState &&\n!this._internalModel.currentState.isValid &&\n- get(this._errors, 'length') === 0\n+ get(this.errors, 'length') === 0\n) {\nthis._updateCurrentState(updatedUncommitted);\n}\n@@ -514,6 +514,9 @@ export default class MegamorphicModel extends EmberObject {\n// Errors hash that will get update,\n// upon validation errors\nget errors() {\n+ if (this._errors === null) {\n+ this._errors = DS.Errors.create();\n+ }\nreturn this._errors;\n}\n}\n",
        "date": "11.12.2019 13:28:52",
        "repo": "hjdivad/ember-m3",
        "type": "perf",
        "chatgpt_zeroshot": "Refactor error handling in MegamorphicModel"
    },
    {
        "msg": "perf(uploader): expand delete area\nfix",
        "diff": "diff --git a/packages/uploader/index.less b/packages/uploader/index.less &-delete {\nposition: absolute;\n- top: -8px;\n- right: -8px;\n+ top: 0;\n+ right: 0;\n+ z-index: 1;\n+ display: flex;\n+ padding: 10px;\n+ border-radius: 50%;\n+ transform: translate(50%, -50%);\n+\n+ &__icon {\ncolor: @uploader-delete-color;\nfont-size: @uploader-delete-icon-size;\nbackground-color: @uploader-delete-background-color;\n- border-radius: 100%;\n+ border-radius: 50%;\n+ }\n}\n}\n",
        "date": "09.06.2020 21:23:43",
        "repo": "youzan/vant-weapp",
        "type": "perf",
        "chatgpt_zeroshot": "Refactor uploader delete button styling and positioning"
    },
    {
        "msg": "perf(uploader): expand delete button area\nfix",
        "diff": "diff --git a/packages/uploader/index.less b/packages/uploader/index.less }\n&-delete {\n+ position: absolute;\n+ top: 0;\n+ right: 0;\n+ width: @uploader-delete-icon-size;\n+ height: @uploader-delete-icon-size;\n+ padding: 0 0 @padding-xs @padding-xs;\n+\n+ &::after {\nposition: absolute;\ntop: 0;\nright: 0;\nwidth: @uploader-delete-icon-size;\nheight: @uploader-delete-icon-size;\nbackground-color: @uploader-delete-background-color;\n- border-radius: 0 0 0 12px;\n+ border-radius: 0 0 0 @uploader-delete-icon-size - 2px;\n+ content: '';\n+ }\n&-icon {\nposition: absolute;\ntop: -2px;\nright: -2px;\n- color: #fff;\n+ z-index: 1;\ncolor: @uploader-delete-color;\nfont-size: 16px;\ntransform: scale(0.5);\n",
        "date": "22.09.2020 21:04:09",
        "repo": "youzan/vant-weapp",
        "type": "perf",
        "chatgpt_zeroshot": "Refactor uploader delete icon styles and positioning"
    },
    {
        "msg": "perf(sticky): avoid set data if nothing change",
        "diff": "diff --git a/packages/sticky/index.ts b/packages/sticky/index.ts @@ -108,7 +108,9 @@ VantComponent({\nreturn prev;\n}, {});\n+ if (Object.keys(diff).length > 0) {\nthis.setData(diff);\n+ }\nthis.$emit('scroll', {\nscrollTop: this.scrollTop,\n",
        "date": "18.12.2020 16:10:11",
        "repo": "youzan/vant-weapp",
        "type": "perf",
        "chatgpt_zeroshot": "Add logic to update data only if there are changes in the sticky component."
    },
    {
        "msg": "perf(swipe-cell): avoid useless animate\nfix",
        "diff": "diff --git a/packages/swipe-cell/index.ts b/packages/swipe-cell/index.ts @@ -120,7 +120,11 @@ VantComponent({\n}\nthis.dragging = true;\n- ARRAY.filter((item) => item !== this).forEach((item) => item.close());\n+\n+ ARRAY.filter(\n+ (item) => item !== this && item.offset !== 0\n+ ).forEach((item) => item.close());\n+\nthis.setData({ catchMove: true });\nthis.swipeMove(this.startOffset + this.deltaX);\n},\n",
        "date": "31.12.2020 17:05:49",
        "repo": "youzan/vant-weapp",
        "type": "perf",
        "chatgpt_zeroshot": "Refactor swipe-cell close logic to only close items with non-zero offset"
    },
    {
        "msg": "perf(picker): shorten template code",
        "diff": "diff --git a/packages/picker/toolbar.wxml b/packages/picker/toolbar.wxml -<template name=\"toolbar\">\n- <view\n- wx:if=\"{{ showToolbar }}\"\n- class=\"van-picker__toolbar toolbar-class\"\n- >\n+<view wx:if=\"{{ showToolbar }}\" class=\"van-picker__toolbar toolbar-class\">\n<view\nclass=\"van-picker__cancel\"\nhover-class=\"van-picker__cancel--hover\"\n{{ confirmButtonText }}\n</view>\n</view>\n-</template>\n",
        "date": "19.01.2021 11:09:40",
        "repo": "youzan/vant-weapp",
        "type": "perf",
        "chatgpt_zeroshot": "Refactor toolbar.wxml to simplify code and improve readability"
    },
    {
        "msg": "refactor(search-input): Remove empty line to test build pipeline",
        "diff": "diff --git a/app/components/search-input/dropdown.js b/app/components/search-input/dropdown.js @@ -14,7 +14,6 @@ export default Component.extend({\nclassNames: ['ds-dropdown-menu','ds-with-1'],\nattributeBindings: ['role'],\n-\n// Massage data to make it easier for displaying on the template\n// Returned object:\n/**\n",
        "date": "18.07.2017 09:54:37",
        "repo": "ember-learn/ember-api-docs",
        "type": "refactor",
        "chatgpt_zeroshot": "Remove unnecessary attributeBindings in dropdown.js"
    },
    {
        "msg": "refactor: fix scoping issue in node@4",
        "diff": "diff --git a/lib/config/exec.js b/lib/config/exec.js @@ -74,10 +74,11 @@ function exec(nodemonOptions, execMap) {\n}\nvar options = utils.clone(nodemonOptions || {});\n+ var script;\n// if there's no script passed, try to get it from the first argument\nif (!options.script && (options.args || []).length) {\n- const script = expandScript(options.args[0],\n+ script = expandScript(options.args[0],\noptions.ext && ('.' + (options.ext || 'js').split(',')[0]));\n// if the script was found, shift it off our args\n@@ -108,7 +109,7 @@ function exec(nodemonOptions, execMap) {\n}\n// var options = utils.clone(nodemonOptions || {});\n- var script = path.basename(options.script || '');\n+ script = path.basename(options.script || '');\nvar scriptExt = path.extname(script).slice(1);\n",
        "date": "29.12.2017 10:29:27",
        "repo": "remy/nodemon",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor script variable declaration in exec function"
    },
    {
        "msg": "refactor: define the message in one place\n[skip ci]",
        "diff": "diff --git a/bin/postinstall.js b/bin/postinstall.js @@ -5,6 +5,8 @@ function main() {\nreturn;\n}\n+ const message = '\\u001b[32mLove nodemon? You can now support the project via the open collective:\\u001b[22m\\u001b[39m\\n > \\u001b[96m\\u001b[1mhttps://opencollective.com/nodemon/donate\\u001b[0m\\n';\n+\ntry {\nconst Configstore = require('configstore');\nconst pkg = require(__dirname + '/../package.json');\n@@ -18,11 +20,11 @@ function main() {\nconst last = conf.get('lastCheck');\nif (!last || now - week > last) {\n- console.log('\\u001b[32mLove nodemon? You can now support the project via the open collective:\\u001b[22m\\u001b[39m\\n > \\u001b[96m\\u001b[1mhttps://opencollective.com/nodemon/donate\\u001b[0m\\n');\n+ console.log(message);\nconf.set('lastCheck', now);\n}\n} catch (e) {\n- console.log('\\u001b[32mLove nodemon? You can now support the project via the open collective:\\u001b[22m\\u001b[39m\\n > \\u001b[96m\\u001b[1mhttps://opencollective.com/nodemon/donate\\u001b[0m\\n');\n+ console.log(message);\n}\n}\n",
        "date": "31.03.2021 05:39:09",
        "repo": "remy/nodemon",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor postinstall.js to use a constant message for supporting nodemon project via open collective."
    },
    {
        "msg": "refactor: Fixing according to PR comments",
        "diff": "diff --git a/src/build.js b/src/build.js @@ -12,13 +12,13 @@ import { setCwd } from './plugins/npm-plugin/registry.js';\nexport default async function build(options = {}) {\noptions.out = options.out || 'dist';\n- await premove(options.out, { cwd: options.cwd });\n-\n// @todo remove this hack once registry.js is instantiable\nsetCwd(options.cwd);\noptions = await normalizeOptions(options, 'build');\n+ await premove(options.out);\n+\nconst bundleOutput = await bundleProd(options);\nconst stats = bundleStats(bundleOutput);\n",
        "date": "03.12.2020 22:20:01",
        "repo": "preactjs/wmr",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor build script to remove unnecessary premove call and update options handling"
    },
    {
        "msg": "refactor: Swapping hard-coded dep versions for `latest`",
        "diff": "diff --git a/packages/create-wmr/tpl/package.json b/packages/create-wmr/tpl/package.json \"react-dom\": \"preact/compat\"\n},\n\"dependencies\": {\n- \"preact\": \"^10.5.12\",\n- \"preact-iso\": \"^0.2.0\"\n+ \"preact\": \"latest\",\n+ \"preact-iso\": \"latest\"\n},\n\"devDependencies\": {\n- \"wmr\": \"^1.0.0\"\n+ \"wmr\": \"latest\"\n}\n}\n",
        "date": "01.02.2021 18:17:39",
        "repo": "preactjs/wmr",
        "type": "refactor",
        "chatgpt_zeroshot": "Update preact and wmr dependencies to latest versions"
    },
    {
        "msg": "refactor: Output directory will be cleared without deleting the directory itself",
        "diff": "diff --git a/packages/wmr/src/build.js b/packages/wmr/src/build.js @@ -18,7 +18,13 @@ export default async function build(options = {}) {\noptions = await normalizeOptions(options, 'build');\n- await fs.rmdir(options.out, { recursive: true });\n+ // Clears out the output folder without deleting it -- useful\n+ // when mounted with Docker and the like\n+ (await fs.readdir(options.out)).forEach(async item => {\n+ item = path.join(options.out, item);\n+ if ((await fs.stat(item)).isFile()) await fs.unlink(item);\n+ else await fs.rmdir(item, { recursive: true });\n+ });\nconst bundleOutput = await bundleProd(options);\n",
        "date": "03.05.2021 01:40:05",
        "repo": "preactjs/wmr",
        "type": "refactor",
        "chatgpt_zeroshot": "Clear out output folder without deleting it completely"
    },
    {
        "msg": "refactor: Flipping prerender() detection to last script in HTML",
        "diff": "diff --git a/packages/wmr/src/lib/prerender.js b/packages/wmr/src/lib/prerender.js @@ -70,13 +70,13 @@ async function workerCode({ cwd, out, publicPath, customRoutes }) {\n// Grab the generated HTML file, which we'll use as a template:\nconst tpl = await fs.readFile(path.resolve(cwd, out, 'index.html'), 'utf-8');\n- // The first script in the file that is not external is assumed to have a\n+ // The last script in the file that is not external is assumed to have a\n// `prerender` export\nlet script;\nconst SCRIPT_TAG = /<script(?:\\s[^>]*?)?\\s+src=(['\"]?)([^>]*?)\\1(?:\\s[^>]*?)?>/g;\nlet match;\n- while ((match = SCRIPT_TAG.exec(tpl)) && !script) {\n+ while ((match = SCRIPT_TAG.exec(tpl))) {\n// Ignore external urls\nif (!match || /^(?:https?|file|data)/.test(match[2])) continue;\n@@ -103,7 +103,7 @@ async function workerCode({ cwd, out, publicPath, customRoutes }) {\n// const App = m.default || m[Object.keys(m)[0]];\nif (typeof doPrerender !== 'function') {\n- throw Error(`No prerender() function was exported by the first <script src=\"...\"> in your index.html.`);\n+ throw Error(`No prerender() function was exported by the last non-external <script src=\"...\"> in your index.html.`);\n}\n/**\n",
        "date": "23.01.2022 22:20:07",
        "repo": "preactjs/wmr",
        "type": "refactor",
        "chatgpt_zeroshot": "Fix logic to find last non-external script for prerender export"
    },
    {
        "msg": "refactor(controls.test.js): refactor test so that changes to controls state doesn't fail test",
        "diff": "diff --git a/src/domain/controls.test.js b/src/domain/controls.test.js @@ -64,17 +64,7 @@ describe(\"Controls reducer\", () => {\nconst action = setHierarchyConfig(hierarchyConfig);\nconst result = reducer({}, action);\n- expect(selectControls(result)).to.deep.equal({\n- hierarchyConfig: hierarchyConfig,\n- shouldShowNodes: true,\n- darkTheme: false,\n- colorBy: null,\n- 'start': null,\n- 'end': null,\n- 'showBusy': false,\n- 'position': [0,0],\n- 'datum': null //\n- });\n+ expect(selectControls(result).hierarchyConfig).to.deep.equal(hierarchyConfig);\ndone();\n});\n",
        "date": "28.06.2019 16:48:45",
        "repo": "iqtlabs/crviz",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor controls reducer test to only check hierarchyConfig in selectControls"
    },
    {
        "msg": "refactor(commenting): remove non-executed code",
        "diff": "diff --git a/src/features/visualization/d3-viz/setup-tooltip.js b/src/features/visualization/d3-viz/setup-tooltip.js -/*\n-* REFACTOR\n-* Effectively remove this Tooltip\n-*\n-*/\n-//import { map, join, path } from \"ramda\";\n-//import { select } from \"d3-selection\";\n-\n-\nconst setupTooltip = ({ nodeRoot, tooltip, fields }) => {\ntooltip\n.style(\"display\", \"block\")\n@@ -14,62 +5,11 @@ const setupTooltip = ({ nodeRoot, tooltip, fields }) => {\n.style(\"transform\", null)\n.style(\"top\", \"0px\")\n.style(\"left\", \"0px\");\n-\n- //const boundingRect = tooltip.node().getBoundingClientRect();\n-\n- //const offsetLeft = -boundingRect.left + 5;\n- //const offsetTop = -boundingRect.top + 5;\n-\n// Measurements need to be taken before hiding the tooltip, otherwise they are\n// not accurate.\ntooltip.style(\"display\", \"none\")\n-\n- /*nodeRoot.on(\"mousemove\", () => {\n- const event = d3Event;\n- showTooltip(event, fields, offsetTop, offsetLeft, tooltip);\n- });*/\n-\n};\n-/*\n-const showTooltip = (event, fields, offsetTop, offsetLeft, tooltip) => {\n- const target = select(event.target);\n- const datum = target.datum();\n- const text = content(datum, fields);\n- let transformX = event.x + offsetLeft + 1\n- let transformY = event.y + offsetTop + 1\n- if (text) {\n- tooltip.node().innerHTML = text;\n- tooltip\n- .style(\"display\", \"block\")\n- .style(\"transform\", `translate3d(${ transformX }px, ${ transformY }px, 0)`)\n- //console.log(transformX,transformY)\n- } else {\n- tooltip.style(\"display\", \"none\");\n- }\n-\n-\n-};\n-\n-const content = (datum, fields) => {\n- if (datum.depth > 0 && datum.height > 0) {\n- let cont = `${ datum.data.fieldValue } (${datum.value})`;\n- if(datum.data.CRVIZ._searchResultCount > 0){\n- cont += `<br/><span>${datum.data.CRVIZ._searchResultCount} search results</span>`\n- }\n- return cont;\n- } else if (datum.height === 0) {\n- const pairs = map(\n- (field) => [`<strong>${ field.displayName }</strong>`, path(field.path, datum.data)],\n- fields\n- );\n-\n- return map(join(\": \"), pairs).join(\"<br />\");\n- } else {\n- return null;\n- }\n-};\n-*/\nexport default setupTooltip;\n",
        "date": "16.07.2019 10:57:37",
        "repo": "iqtlabs/crviz",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor setupTooltip function and remove unnecessary code."
    },
    {
        "msg": "refactor(readability): remove multline and add comma",
        "diff": "diff --git a/src/features/visualization/d3-viz.js b/src/features/visualization/d3-viz.js @@ -219,7 +219,10 @@ function d3Viz(rootNode) {\nnodeRoot.on(\"click.select\", () => {\nconst datum = select(d3Event.target).datum();\n- if(datum.data !== undefined) {props.sendData(datum.data)} //Used to send data back to parent component Visualizations.js\n+ if(datum.data !== undefined) {\n+ //Used to send data back to parent component Visualizations.js\n+ props.sendData(datum.data);\n+ };\nlet zoomToNode = datum;\nif(datum.height === 0 && datum.parent){\nzoomToNode = datum.parent;\n@@ -290,4 +293,4 @@ const findAncestor = (node, hierarchy) => {\nreturn res;\n};\n-export default d3Viz\n+export default d3Viz;\n",
        "date": "16.07.2019 10:59:19",
        "repo": "iqtlabs/crviz",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor sendData function in d3-viz.js and update export statement"
    },
    {
        "msg": "refactor: change notes to note",
        "diff": "diff --git a/src/features/tooltip/Tooltip.js b/src/features/tooltip/Tooltip.js import React from \"react\";\n-import { addNote, removeNote, getNotesIndexedByHash } from 'domain/notes';\n+\n//Styling\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n@@ -10,6 +10,7 @@ import tooltipStyle from './Tooltip.module.css';\n///Redux\nimport { connect } from \"react-redux\";\nimport { getPosition, getSelectedDatum } from 'domain/controls';\n+import { addNote, removeNote, getNotesIndexedByHash } from 'domain/notes';\nclass TooltipControls extends React.Component {\nconstructor(props){\n@@ -191,7 +192,7 @@ class TooltipControls extends React.Component {\n}\n{!this.props.data.fieldValue &&\n<p className={appStyle.accordionHeader} onClick={this.toggleShowNote}>\n- Notes {!showNote && <FontAwesomeIcon icon={faAngleDoubleDown} />}{showNote && <FontAwesomeIcon onClick={this.toggleShowNote} icon={faAngleDoubleUp} />}\n+ Note {!showNote && <FontAwesomeIcon icon={faAngleDoubleDown} />}{showNote && <FontAwesomeIcon onClick={this.toggleShowNote} icon={faAngleDoubleUp} />}\n</p>\n}\n",
        "date": "02.08.2019 15:38:42",
        "repo": "iqtlabs/crviz",
        "type": "refactor",
        "chatgpt_zeroshot": "Fix typo in tooltip control message"
    },
    {
        "msg": "refactor(badge): provide injects on shallowmount",
        "diff": "diff --git a/src/components/Badge/badge.test.js b/src/components/Badge/badge.test.js import { shallowMount } from '@vue/test-utils'\nimport Badge from './'\n-import ThemeProvider from '../ThemeProvider'\nimport theme from '../../lib/theme'\ndescribe('===== Badge Component =====', () => {\ndescribe('Instance TEsts', () => {\nit('should be a Vue instance', () => {\n- const wrapper = shallowMount(ThemeProvider, {\n- propsData: {\n- theme,\n- colorMode: 'light'\n- },\n- slots: {\n- default: [Badge]\n+ const badge = shallowMount(Badge, {\n+ provide () {\n+ return {\n+ $theme: () => theme,\n+ $colorMode: 'light'\n+ }\n}\n})\n- expect(wrapper.isVueInstance()).toBeTruthy()\n- expect(wrapper.find(Badge).vm.$theme()).toBe(theme)\n- expect(wrapper.find(Badge).vm.$colorMode).toBe('light')\n+ expect(badge.isVueInstance()).toBeTruthy()\n+ expect(badge.vm.$theme()).toBe(theme)\n+ expect(badge.vm.$colorMode).toBe('light')\n})\n})\n})\n",
        "date": "09.11.2019 02:08:07",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor Badge component test to remove ThemeProvider dependency"
    },
    {
        "msg": "refactor(alertdialog): update darkmode styles",
        "diff": "diff --git a/src/App.vue b/src/App.vue <template>\n- <Box w=\"300px\">\n- <Button @click=\"isOpen = true\">Open Modal</Button>\n- <Modal :isOpen=\"isOpen\">\n- <ModalContent>\n- <ModalHeader>\n- <h3>Modal Header</h3>\n- </ModalHeader>\n- <ModalBody>\n- <Lorem add=\"2s\" />\n- </ModalBody>\n- <ModalFooter>\n- <Button mr=\"3\">Cancel</Button>\n- <Button id=\"delete\" variantColor=\"red\">Delete Account</Button>\n- </ModalFooter>\n- <ModalCloseButton @click=\"isOpen = false\" />\n- </ModalContent>\n- <ModalOverlay />\n- </Modal>\n+ <Box>\n+ <AlertDialog\n+ :is-open=\"isOpen\"\n+ :least-destructive-ref=\"$refs.cancelRef\"\n+ :on-close=\"close\"\n+ >\n+ <AlertDialogOverlay />\n+ <AlertDialogContent>\n+ <AlertDialogHeader font-size=\"lg\" font-weight=\"bold\">\n+ Delete Customer\n+ </AlertDialogHeader>\n+\n+ <AlertDialogBody>\n+ Are you sure? You can't undo this action afterwards.\n+ </AlertDialogBody>\n+\n+ <AlertDialogFooter>\n+ <Button ref=\"cancelRef\" @click=\"close\">\n+ Cancel\n+ </Button>\n+ <Button variantColor=\"red\" @click=\"close\" ml=\"3\">\n+ Delete\n+ </Button>\n+ </AlertDialogFooter>\n+ </AlertDialogContent>\n+ </AlertDialog>\n+ <Button variant-color=\"red\" @click=\"open\">\n+ Delete Customer\n+ </Button>\n</Box>\n</template>\nimport {\nBox,\nButton,\n- Modal,\n- ModalOverlay,\n- ModalContent,\n- ModalHeader,\n- ModalFooter,\n- ModalBody,\n- ModalCloseButton } from '../packages/kiwi-core/dist/esm'\n-import Lorem from 'vue-lorem-ipsum'\n+ AlertDialog,\n+ AlertDialogContent,\n+ AlertDialogBody,\n+ AlertDialogFooter,\n+ AlertDialogOverlay,\n+ AlertDialogHeader } from '../packages/kiwi-core/dist/esm'\nexport default {\nname: 'App',\n@@ -39,14 +48,12 @@ export default {\ncomponents: {\nBox,\nButton,\n- Modal,\n- ModalOverlay,\n- ModalContent,\n- ModalHeader,\n- ModalFooter,\n- ModalBody,\n- ModalCloseButton,\n- Lorem\n+ AlertDialog,\n+ AlertDialogContent,\n+ AlertDialogBody,\n+ AlertDialogFooter,\n+ AlertDialogOverlay,\n+ AlertDialogHeader\n},\ndata () {\nreturn {\n@@ -67,6 +74,12 @@ export default {\nhandleChange: (value) => console.log(value),\nfocusRadioGroup () {\nthis.$refs.rg.focus()\n+ },\n+ open () {\n+ this.isOpen = true\n+ },\n+ close () {\n+ this.isOpen = false\n}\n}\n}\n",
        "date": "02.03.2020 13:23:52",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor modal to use AlertDialog component for better user experience"
    },
    {
        "msg": "refactor: moved node query to mounted hook",
        "diff": "diff --git a/packages/kiwi-core/src/Tooltip/index.js b/packages/kiwi-core/src/Tooltip/index.js import Fragment from '../Fragment'\nimport VisuallyHidden from '../VisuallyHidden'\nimport { Popper, PopperArrow } from '../Popper'\n-import { cloneVNode, useId, forwardProps, wrapEvent, canUseDOM } from '../utils'\n+import { cloneVNode, useId, forwardProps, wrapEvent } from '../utils'\nimport { baseProps } from '../config/props'\nimport Box from '../Box'\n@@ -91,6 +91,7 @@ const Tooltip = {\n// Attached immediately.\nthis.$nextTick(() => {\nthis.noop++\n+ this.tooltipAnchor = document.querySelector(`[x-tooltip-anchor=${this.tooltipId}]`)\n})\n},\nrender (h) {\n@@ -164,12 +165,6 @@ const Tooltip = {\n}\n}\n- // If current environment is server-side we return the clone child\n- if (!canUseDOM) {\n- return clone\n- }\n-\n- this.tooltipAnchor = document.querySelector(`[x-tooltip-anchor=${this.tooltipId}]`)\nreturn h(Fragment, [\nclone,\nh(Popper, {\n",
        "date": "05.03.2020 02:28:04",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "refactor",
        "chatgpt_zeroshot": "Remove canUseDOM check and set tooltipAnchor in $nextTick instead."
    },
    {
        "msg": "refactor(button): remove old inheritAttrs",
        "diff": "diff --git a/packages/chakra-ui-core/src/CButton/CButton.js b/packages/chakra-ui-core/src/CButton/CButton.js @@ -80,7 +80,6 @@ const CButtonIcon = {\n*/\nconst CButton = {\nname: 'CButton',\n- inheritAttrs: false,\ninject: ['$chakraTheme', '$chakraColorMode'],\nprops: buttonProps,\ncomputed: {\n",
        "date": "01.07.2020 21:47:27",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "refactor",
        "chatgpt_zeroshot": "Remove inheritAttrs property from CButton component"
    },
    {
        "msg": "refactor(progress): use  api",
        "diff": "diff --git a/packages/chakra-ui-core/src/CProgress/CProgress.js b/packages/chakra-ui-core/src/CProgress/CProgress.js import { css, keyframes } from 'emotion'\nimport CBox from '../CBox'\n-import { generateStripe, valueToPercent, forwardProps } from '../utils'\n-import { baseProps } from '../config/props'\n+import { generateStripe, valueToPercent, createStyledAttrsMixin } from '../utils'\nconst stripe = keyframes({\nfrom: { backgroundPosition: '1rem 0' },\n@@ -39,18 +38,20 @@ const progressbarSizes = {\n*/\nconst CProgressLabel = {\nname: 'CProgressLabel',\n- props: baseProps,\n- render (h) {\n+ functional: true,\n+ render (h, { data, slots, ...rest }) {\nreturn h(CBox, {\n+ ...rest,\nprops: {\n- textAlign: 'center',\n- width: '100%',\n- ...forwardProps(this.$props)\n+ as: data.attrs.as\n},\nattrs: {\n+ textAlign: 'center',\n+ width: '100%',\n+ ...data.attrs,\n'data-chakra-component': 'CProgressLabel'\n}\n- }, this.$slots.default)\n+ }, slots().default)\n}\n}\n@@ -64,23 +65,22 @@ const CProgressLabel = {\n*/\nconst CProgressTrack = {\nname: 'CProgressTrack',\n+ functional: true,\nprops: {\n- ...baseProps,\nsize: [String, Number, Array]\n},\n- render (h) {\n+ render (h, { props, slots, data, ...rest }) {\nreturn h(CBox, {\n- props: {\n+ ...rest,\n+ attrs: {\npos: 'relative',\n- height: progressbarSizes[this.size || 'md'],\n+ height: progressbarSizes[props.size || 'md'],\noverflow: 'hidden',\nw: '100%',\n- ...forwardProps(this.$props)\n- },\n- attrs: {\n+ ...data.attrs,\n'data-chakra-component': 'CProgressTrack'\n}\n- }, this.$slots.default)\n+ }, slots().default)\n}\n}\n@@ -93,9 +93,8 @@ const CProgressTrack = {\n* @see Docs https://vue.chakra-ui.com/progress\n*/\nconst CProgressIndicator = {\n- name: 'CProgressIndicator',\n+ mixins: [createStyledAttrsMixin('CProgressIndicator')],\nprops: {\n- ...baseProps,\nisIndeterminate: Boolean,\nmin: Number,\nmax: Number,\n@@ -104,23 +103,27 @@ const CProgressIndicator = {\ncomputed: {\npercent () {\nreturn valueToPercent(this.value, this.min, this.max)\n- }\n},\n- render (h) {\n- return h(CBox, {\n- props: {\n+ componentStyles () {\n+ return {\nheight: '100%',\ntransition: 'all 0.3s',\n- width: `${this.percent}%`,\n- ...forwardProps(this.$props)\n+ width: `${this.percent}%`\n+ }\n+ }\n},\n+ render (h) {\n+ return h(this.as || 'div', {\n+ class: [this.className],\nattrs: {\n+ ...this.computedAttrs,\n'aria-valuemax': this.max,\n'aria-valuemin': this.min,\n'aria-valuenow': this.isIndeterminate ? null : this.value,\nrole: 'progressbar',\n'data-chakra-component': 'CProgressIndicator'\n- }\n+ },\n+ on: this.computedListeners\n}, this.$slots.default)\n}\n}\n@@ -135,9 +138,9 @@ const CProgressIndicator = {\n*/\nconst CProgress = {\nname: 'CProgress',\n+ inheritAttrs: false,\ninject: ['$chakraColorMode'],\nprops: {\n- ...baseProps,\ncolor: {\ntype: String,\ndefault: 'blue'\n@@ -201,13 +204,13 @@ const CProgress = {\nreturn h(CProgressTrack, {\nprops: {\n- size: this.size,\n- bg: trackColor[this.colorMode],\n- borderRadius: _borderRadius,\n- ...forwardProps(this.$props)\n+ size: this.size\n},\nattrs: {\n- 'data-chakra-component': 'CProgress'\n+ bg: trackColor[this.colorMode],\n+ borderRadius: _borderRadius,\n+ 'data-chakra-component': 'CProgress',\n+ ...this.$attrs\n}\n}, [\nh(CProgressIndicator, {\n@@ -218,7 +221,9 @@ const CProgress = {\nprops: {\nmin: this.min,\nmax: this.max,\n- value: this.value,\n+ value: this.value\n+ },\n+ attrs: {\nbg: indicatorColor[this.colorMode],\nborderRadius: this.__borderRadius,\n...this.isIndeterminate && {\n",
        "date": "11.07.2020 18:26:59",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor CProgress component and update CProgressLabel and CProgressTrack to use functional components and render props. Update CProgressIndicator to use mixins for styled attributes. Fix props and attributes in CProgress component."
    },
    {
        "msg": "refactor(stat): use functional api",
        "diff": "diff --git a/packages/chakra-ui-core/src/CStat/CStat.js b/packages/chakra-ui-core/src/CStat/CStat.js @@ -38,17 +38,17 @@ const arrowOptions = {\n*/\nconst CStat = {\nname: 'CStat',\n- extends: CBox,\n- render (h) {\n- const children = cleanChildren(this.$slots.default)\n+ functional: true,\n+ render (h, { props, slots, data, ...rest }) {\n+ const children = cleanChildren(slots().default)\nreturn h(CBox, {\n- props: {\n+ ...rest,\n+ props: { as: props.as },\n+ attrs: {\nflex: 1,\npr: 4,\nposition: 'relative',\n- ...forwardProps(this.$props)\n- },\n- attrs: {\n+ ...(data.attrs || {}),\n'data-chakra-component': 'CStat'\n}\n}, children)\n@@ -65,17 +65,20 @@ const CStat = {\n*/\nconst CStatGroup = {\nname: 'CStatGroup',\n- extends: CFlex,\n- render (h) {\n- const children = cleanChildren(this.$slots.default)\n+ functional: true,\n+ props: CFlex.props,\n+ render (h, { props, slots, data, ...rest }) {\n+ const children = cleanChildren(slots().default)\nreturn h(CFlex, {\n+ ...rest,\nprops: {\nflexWrap: 'wrap',\njustifyContent: 'space-around',\nalignItems: 'flex-start',\n- ...forwardProps(this.$props)\n+ ...forwardProps(props)\n},\nattrs: {\n+ ...(data.attrs || {}),\n'data-chakra-component': 'CStatGroup'\n}\n}, children)\n@@ -92,23 +95,27 @@ const CStatGroup = {\n*/\nconst CStatArrow = {\nname: 'CStatArrow',\n- extends: CIcon,\n+ functional: true,\nprops: {\n+ ...CIcon.props,\ntype: {\ntype: String,\ndefault: 'increase'\n}\n},\n- render (h) {\n+ render (h, { props, slots, data, ...rest }) {\nreturn h(CIcon, {\n+ ...rest,\nprops: {\n- mr: 1,\nsize: '14px',\n- verticalAlign: 'middle',\n- ...arrowOptions[this.type],\n- ...forwardProps(this.$props)\n+ ...arrowOptions[props.type],\n+ ...forwardProps(props)\n},\nattrs: {\n+ mr: 1,\n+ verticalAlign: 'middle',\n+ ...(data.attrs || {}),\n+ color: arrowOptions[props.type].color,\n'data-chakra-component': 'CStatArrow'\n}\n})\n@@ -125,19 +132,20 @@ const CStatArrow = {\n*/\nconst CStatNumber = {\nname: 'CStatNumber',\n- extends: CText,\n- render (h) {\n+ functional: true,\n+ props: CText.props,\n+ render (h, { props, slots, data, ...rest }) {\nreturn h(CText, {\n- props: {\n+ ...rest,\n+ props: forwardProps(props),\n+ attrs: {\nfontSize: '2xl',\nverticalAlign: 'baseline',\nfontWeight: 'semibold',\n- ...forwardProps(this.$props)\n- },\n- attrs: {\n+ ...(data.attrs || {}),\n'data-chakra-component': 'CStatNumber'\n}\n- }, this.$slots.default)\n+ }, slots().default)\n}\n}\n@@ -151,16 +159,20 @@ const CStatNumber = {\n*/\nconst CStatHelperText = {\nname: 'CStatHelperText',\n- extends: CText,\n- render (h) {\n+ functional: true,\n+ props: CText.props,\n+ render (h, { props, slots, data, ...rest }) {\nreturn h(CText, {\n- props: {\n+ ...rest,\n+ props: forwardProps(props),\n+ attrs: {\nfontSize: 'sm',\nopacity: 0.8,\nmb: 2,\n- ...forwardProps(this.$props)\n+ ...(data.attrs || {}),\n+ 'data-chakra-component': 'CStatHelperText'\n}\n- }, this.$slots.default)\n+ }, slots().default)\n}\n}\n@@ -174,18 +186,19 @@ const CStatHelperText = {\n*/\nconst CStatLabel = {\nname: 'CStatLabel',\n- extends: CText,\n- render (h) {\n+ functional: true,\n+ props: CText.props,\n+ render (h, { props, slots, data, ...rest }) {\nreturn h(CText, {\n- props: {\n+ ...rest,\n+ props: forwardProps(props),\n+ attrs: {\nfontWeight: 'medium',\nfontSize: 'sm',\n- ...forwardProps(this.$props)\n- },\n- attrs: {\n+ ...(data.attrs || {}),\n'data-chakra-component': 'CStatLabel'\n}\n- }, this.$slots.default)\n+ }, slots().default)\n}\n}\n",
        "date": "12.07.2020 12:02:29",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor CStat components to use functional components and improve prop handling"
    },
    {
        "msg": "refactor: cleanup test code",
        "diff": "diff --git a/website/pages/contributors.vue b/website/pages/contributors.vue <carbon-ad />\n- <c-image :src=\"require('@/assets/logo/chakra-ui-vue-blue@2x.png')\" />\n-\n<c-box>\n<c-box v-for=\"(person, _i) in contributors\" :key=\"_i\" bb=\"1px solid\" border-color=\"gray.200\" p=\"3\">\n<c-text font-weight=\"bold\" mt=\"3\" font-size=\"1.3rem\">\n",
        "date": "14.06.2021 15:29:56",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "refactor",
        "chatgpt_zeroshot": "Remove carbon-ad and c-image from contributors page"
    },
    {
        "msg": "refactor: remove unnecessary spread.",
        "diff": "diff --git a/packages/chakra-ui-core/src/CInputGroup/CInputGroup.js b/packages/chakra-ui-core/src/CInputGroup/CInputGroup.js @@ -53,9 +53,7 @@ const CInputGroup = {\nconst clone = cloneVNode(vnode, h)\nreturn h(clone.componentOptions.Ctor, {\n...clone.data,\n- on: {\n- ...(clone.componentOptions.listeners || {})\n- },\n+ on: (clone.componentOptions.listeners || {}),\nprops: {\n...(clone.data.props || {}),\n...clone.componentOptions.propsData,\n",
        "date": "23.12.2021 00:35:33",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor event listeners in CInputGroup component"
    },
    {
        "msg": "refactor: :recycle: update author component",
        "diff": "diff --git a/src/lib/author.svelte b/src/lib/author.svelte <script>\n+ import { onMount } from 'svelte'\n+\nexport let author\n+ const getUserDetails = async () => {\n+ const res = await fetch(`/${author}.json`)\n+ return await res.json()\n+ }\n+ let data = {}\n+ onMount(async () => {\n+ data = await getUserDetails()\n+ })\n</script>\n-<small>{author}</small>\n+<p class=\"text-sm\">Contribution by:</p>\n+<article\n+ class=\"not-prose border border-primary shadow-lg p-4 rounded-2xl\"\n+>\n+ <div class=\"flex space-x-5 justify-evenly\">\n+ <a href={data.html_url} target=\"_blank\" rel=\"noopener\">\n+ <img\n+ class=\"w-20 h-20 p-0 m-0 rounded-full\"\n+ src={data.avatar_url}\n+ alt={data.name}\n+ />\n+ </a>\n+ <a href={data.html_url} target=\"_blank\" rel=\"noopener\">\n+ <div class=\"text-sm\">\n+ <p class=\"text-lg font-bold tracking-widest\">{data.name}</p>\n+ <p>{data.bio}</p>\n+ </div>\n+ </a>\n+ </div>\n+</article>\n",
        "date": "08.04.2022 18:46:58",
        "repo": "spences10/cheat-sheets",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor author component to display user details and contribution information"
    },
    {
        "msg": "refactor: :recycle: add alias",
        "diff": "diff --git a/svelte.config.js b/svelte.config.js import adapter from '@sveltejs/adapter-vercel'\nimport { mdsvex } from 'mdsvex'\n+import path from 'path'\nimport preprocess from 'svelte-preprocess'\nimport mdsvexConfig from './mdsvex.config.js'\n@@ -17,6 +18,11 @@ const config = {\nallow: ['..'],\n},\n},\n+ resolve: {\n+ alias: {\n+ '$lib': path.resolve('./src/lib'),\n+ },\n+ },\n},\n},\n",
        "date": "08.04.2022 18:47:17",
        "repo": "spences10/cheat-sheets",
        "type": "refactor",
        "chatgpt_zeroshot": "Add path alias for '$lib' in svelte.config.js"
    },
    {
        "msg": "refactor: :recycle: add author component",
        "diff": "diff --git a/sheets/javascript.md b/sheets/javascript.md @@ -6,6 +6,10 @@ published: true\nslug: javascript\n---\n+<script>\n+ import Author from '$lib/author.svelte'\n+</script>\n+\n## Document Design Mode\nEdit a web page, set the design mode to on.\n@@ -475,20 +479,22 @@ error when used on any undeclared root object, so no escaping the\n## Unique Array of Values with Set and Spread Operator [ES6]\n+<Author author=\"anniebombanie\" />\n+\nThanks to [Annie Liew] for this one.\n-In ES6, Set objects are collections of values.\n-Set uses strict equality (`===`) to check values & each value may only occur once.\n-We use the spread operator to convert the Set object into an array.\n+In ES6, Set objects are collections of values. Set uses strict\n+equality (`===`) to check values & each value may only occur once. We\n+use the spread operator to convert the Set object into an array.\n```js\n-const numArr = [1, 1, 1, 2, 3];\n+const numArr = [1, 1, 1, 2, 3]\n// (5) [1, 1, 1, 2, 3]\n-const uniqueNumSet = new Set(numArr);\n+const uniqueNumSet = new Set(numArr)\n// Set(3) {1, 2, 3}\n-const uniqueNumArr = [...new Set(numArr)];\n+const uniqueNumArr = [...new Set(numArr)]\n// (3) [1, 2, 3]\n```\n@@ -496,17 +502,24 @@ If you prefer something a bit more explicit, you can do this instead:\n`const uniqueNumArr = Array.from(uniqueNumSet)`\n## Convert an array of objects into a single object\n-If you have an array of objects, you can convert that list of objects into a single object by using [`Object.assign()`][Object.assign] and [spread syntax][spread syntax]. The `Object.assign()` method copies all enumerable own properties from one or more source objects to a target object and it returns the modified target object. We use spread syntax `...` on the array `items` so that each object in the array can be \"expanded\" in places where key-value pairs exists.\n+\n+If you have an array of objects, you can convert that list of objects\n+into a single object by using [`Object.assign()`][object.assign] and\n+[spread syntax][spread syntax]. The `Object.assign()` method copies\n+all enumerable own properties from one or more source objects to a\n+target object and it returns the modified target object. We use spread\n+syntax `...` on the array `items` so that each object in the array can\n+be \"expanded\" in places where key-value pairs exists.\n```js\nconst items = [\n{ address: '123 ABC street' },\n{ isLeased: false },\n- { hasPool: true }\n+ { hasPool: true },\n]\n-const obj = Object.assign({}, ...items);\n-console.log(obj);\n+const obj = Object.assign({}, ...items)\n+console.log(obj)\n// { \"address\": \"123 ABC street\", \"isLeased\": false, \"hasPool\": true }\n```\n@@ -515,6 +528,8 @@ console.log(obj);\n[nicky meuleman]: https://twitter.com/NMeuleman\n[optional chaining]:\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Optional_chaining\n-[Object.assign]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n-[spread syntax]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax\n+[object.assign]:\n+ https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n+[spread syntax]:\n+ https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax\n[annie liew]: https://twitter.com/anniebombanie_\n",
        "date": "08.04.2022 18:47:38",
        "repo": "spences10/cheat-sheets",
        "type": "refactor",
        "chatgpt_zeroshot": "Add Author component and fix syntax in JavaScript sheet"
    },
    {
        "msg": "refactor: :recycle: empty string for no bio",
        "diff": "diff --git a/src/lib/author.svelte b/src/lib/author.svelte <a href={data.html_url} target=\"_blank\" rel=\"noopener\">\n<div class=\"text-sm\">\n<p class=\"text-lg font-bold tracking-widest\">{data.name}</p>\n- <p>{data.bio}</p>\n+ <p>{data.bio || ``}</p>\n</div>\n</a>\n</div>\n",
        "date": "08.04.2022 18:59:24",
        "repo": "spences10/cheat-sheets",
        "type": "refactor",
        "chatgpt_zeroshot": "Fix displaying empty bio in author component"
    },
    {
        "msg": "refactor: :recycle: use page store for url",
        "diff": "diff --git a/src/routes/[slug].svelte b/src/routes/[slug].svelte </script>\n<script>\n- import { Head } from 'svead'\n- import { description, website } from '$lib/info'\n+ import { page } from '$app/stores'\nimport { ogImageUrl } from '$lib/og-image-url-build'\nimport TableOfContents from '$lib/table-of-contents.svelte'\nimport { format } from 'date-fns'\n+ import { Head } from 'svead'\nimport { onMount } from 'svelte'\nexport let Post, metadata\n}\n})\n})\n+ let url = $page.url.toString()\n</script>\n<Head\n'cheatsheets.xyz',\nmetadata.title\n)}\n- url={`${website}/${metadata.slug}`}\n+ {url}\n/>\n{#await getHeadings()}\n",
        "date": "12.06.2022 19:13:13",
        "repo": "spences10/cheat-sheets",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor [slug].svelte to use $page.url and fix import issue with Head component"
    },
    {
        "msg": "refactor(package): update deploy scripts [ci skip]",
        "diff": "diff --git a/package.json b/package.json \"build:docs-cname\": \"echo react.semantic-ui.com > docs/build/CNAME\",\n\"predeploy:docs\": \"cross-env NODE_ENV=production yarn build:docs && yarn build:docs-cname\",\n\"deploy:docs\": \"gh-pages -d docs/build -m 'deploy docs [ci skip]'\",\n+ \"postdeploy:docs\": \"github_changelog_generator && gach 'docs(changelog): update changelog [ci skip]\",\n\"lint\": \"cross-env NODE_ENV=production eslint .\",\n\"lint:fix\": \"yarn lint -- --fix\",\n\"prerelease\": \"yarn lint && yarn tsd:lint && npm test && cross-env NODE_ENV=production yarn build\",\n- \"postrelease\": \"NODE_ENV=production yarn deploy:docs\",\n- \"prerelease:major\": \"yarn prerelease\",\n- \"prerelease:minor\": \"yarn prerelease\",\n- \"prerelease:patch\": \"yarn prerelease\",\n- \"release:major\": \"ta-script npm/release major\",\n- \"release:minor\": \"ta-script npm/release minor\",\n- \"release:patch\": \"ta-script npm/release patch\",\n+ \"postrelease\": \"yarn deploy:docs\",\n+ \"release:major\": \"yarn prerelease && ta-script npm/release major && yarn postrelease\",\n+ \"release:minor\": \"yarn prerelease && ta-script npm/release minor && yarn postrelease\",\n+ \"release:patch\": \"yarn prerelease && ta-script npm/release patch && yarn postrelease\",\n\"prestart\": \"yarn satisfied -- --fix yarn\",\n\"start\": \"yarn docs\",\n\"satisfied\": \"satisfied --skip-invalid\",\n",
        "date": "24.09.2017 12:56:58",
        "repo": "semantic-org/semantic-ui-react",
        "type": "refactor",
        "chatgpt_zeroshot": "refactor: Update release scripts and add changelog generation for docs deployment"
    },
    {
        "msg": "refactor: parseBlocks",
        "diff": "diff --git a/frontend/leaderboard/src/Types.re b/frontend/leaderboard/src/Types.re @@ -184,7 +184,6 @@ module Block = {\neach UserCommand and InternalCommand to it's associated block.\n*/\nlet parseBlocks = blocks => {\n- let blocks =\nBelt.Map.Int.(\nblocks\n|> Array.fold_left(\n@@ -234,8 +233,6 @@ module Block = {\n)\n|> valuesToArray\n);\n-\n- blocks;\n};\n};\n",
        "date": "21.12.2020 20:01:34",
        "repo": "minaprotocol/mina",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor parseBlocks function to remove redundant variable assignment."
    },
    {
        "msg": "refactor: small return refactor in Types.re",
        "diff": "diff --git a/frontend/leaderboard/src/Types.re b/frontend/leaderboard/src/Types.re @@ -170,8 +170,7 @@ module Block = {\n...block.blockchainState,\ncoinbaseReceiver,\n};\n- let updatedBlock = {...block, blockchainState: updatedBlockchainState};\n- updatedBlock;\n+ {...block, blockchainState: updatedBlockchainState};\n| None => block\n};\n};\n",
        "date": "23.12.2020 14:32:26",
        "repo": "minaprotocol/mina",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor Block module to update blockchainState directly in object creation"
    },
    {
        "msg": "refactor: index() should take the offset from the stack top\nImprovement for\nrefs",
        "diff": "diff --git a/src/system/interpreter.js b/src/system/interpreter.js @@ -104,13 +104,13 @@ BiwaScheme.Interpreter = BiwaScheme.Class.create({\n// s: stack pointer (= index of stack top + 1)\nshift_args: function(n, m, s){\nfor(var i = n-1; i >= -1; i--){\n- this.index_set(s, i+m+1, this.index(s, i));\n+ this.index_set(s, i+m+1, this.index(s, i+1));\n}\nreturn s-m-1;\n},\nindex: function(s, i){\n- return this.stack[s-i-2];\n+ return this.stack[(s-1)-i];\n},\n// private\n@@ -124,7 +124,7 @@ BiwaScheme.Interpreter = BiwaScheme.Class.create({\nvar v = []; //(make-vector n+1+1)\nv[0] = body;\nfor(var i=0; i<n; i++)\n- v[i+1] = this.index(s, i-1);\n+ v[i+1] = this.index(s, i);\nv[n+1] = dotpos;\nif(dotpos == -1)\n@@ -174,7 +174,7 @@ BiwaScheme.Interpreter = BiwaScheme.Class.create({\nreturn a;\ncase \"refer-local\":\nvar n=x[1], x=x[2];\n- a = this.index(f, n);\n+ a = this.index(f, n+1);\nthis.last_refer = \"(anon)\";\nbreak;\ncase \"refer-free\":\n@@ -211,7 +211,7 @@ BiwaScheme.Interpreter = BiwaScheme.Class.create({\nbreak;\ncase \"box\":\nvar n=x[1], x=x[2];\n- this.index_set(s, n, [this.index(s, n)]); //boxing\n+ this.index_set(s, n, [this.index(s, n+1)]); //boxing\nbreak;\ncase \"test\":\nvar thenc=x[1], elsec=x[2];\n@@ -228,7 +228,7 @@ BiwaScheme.Interpreter = BiwaScheme.Class.create({\nbreak;\ncase \"assign-local\":\nvar n=x[1], x=x[2];\n- var box = this.index(f, n);\n+ var box = this.index(f, n+1);\nbox[0] = a;\na = BiwaScheme.undef;\nbreak;\n@@ -260,7 +260,7 @@ BiwaScheme.Interpreter = BiwaScheme.Class.create({\nvar n=x[1], x=x[2];\n// the number of arguments in the last call\n- var n_args = this.index(s, n);\n+ var n_args = this.index(s, n+1);\ns = this.shift_args(n, n_args, s);\nbreak;\n@@ -283,7 +283,7 @@ BiwaScheme.Interpreter = BiwaScheme.Class.create({\n// the number of arguments in the last call is\n// pushed to the stack.\n- var n_args = this.index(s, -1);\n+ var n_args = this.index(s, 0);\nif(BiwaScheme.isClosure(func)){\na = func;\nx = func[0];\n@@ -297,7 +297,7 @@ BiwaScheme.Interpreter = BiwaScheme.Class.create({\n// => Process the &rest args: packing the rest args into a list.\nvar ls = BiwaScheme.nil;\nfor (var i=n_args; --i>=dotpos; ) {\n- ls = new BiwaScheme.Pair(this.index(s, i), ls);\n+ ls = new BiwaScheme.Pair(this.index(s, i+1), ls);\n}\nif (dotpos >= n_args) {\n// No rest argument is passed to this closure.\n@@ -306,11 +306,11 @@ BiwaScheme.Interpreter = BiwaScheme.Class.create({\n// --------------------------------------------------------------\n// => We extend the stack to put the empty list.\nfor(var i = -1; i < n_args; i++){\n- this.index_set(s, i-1, this.index(s, i));\n+ this.index_set(s, i-1, this.index(s, i+1));\n}\ns++;\n// => Update the number of arguments\n- this.index_set(s, -1, this.index(s, -1) + 1);\n+ this.index_set(s, -1, this.index(s, 0) + 1);\n}\nthis.index_set(s, dotpos, ls);\n}\n@@ -331,7 +331,7 @@ BiwaScheme.Interpreter = BiwaScheme.Class.create({\n// load arguments from stack\nvar args = [];\nfor(var i=0; i<n_args; i++)\n- args.push(this.index(s, i));\n+ args.push(this.index(s, i+1));\n// invoke the function\nvar result = func(args, this);\n@@ -389,11 +389,11 @@ BiwaScheme.Interpreter = BiwaScheme.Class.create({\nbreak;\ncase \"return\":\n// Pop stack frame\n- var n=this.index(s, -1);\n+ var n=this.index(s, 0);\nvar ss=s-n;\n- x = this.index(ss, 0),\n- f = this.index(ss, 1),\n- c = this.index(ss, 2),\n+ x = this.index(ss, 1),\n+ f = this.index(ss, 2),\n+ c = this.index(ss, 3),\ns = ss-3-1;\n// Pop stack trace (> 1 times if tail calls are done)\n",
        "date": "01.01.2020 23:08:21",
        "repo": "biwascheme/biwascheme",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor index references in interpreter.js"
    },
    {
        "msg": "refactor: index_set should take the offset from the stack top\nrefs",
        "diff": "diff --git a/src/system/interpreter.js b/src/system/interpreter.js @@ -103,8 +103,8 @@ BiwaScheme.Interpreter = BiwaScheme.Class.create({\n// m: number of items to shift\n// s: stack pointer (= index of stack top + 1)\nshift_args: function(n, m, s){\n- for(var i = n-1; i >= -1; i--){\n- this.index_set(s, i+m+1, this.index(s, i+1));\n+ for(var i = n; i >= 0; i--){\n+ this.index_set(s, i+m+1, this.index(s, i));\n}\nreturn s-m-1;\n},\n@@ -115,7 +115,7 @@ BiwaScheme.Interpreter = BiwaScheme.Class.create({\n// private\nindex_set: function(s, i, v){\n- this.stack[s-i-2] = v;\n+ this.stack[(s-1)-i] = v;\n},\n// private\n@@ -211,7 +211,7 @@ BiwaScheme.Interpreter = BiwaScheme.Class.create({\nbreak;\ncase \"box\":\nvar n=x[1], x=x[2];\n- this.index_set(s, n, [this.index(s, n+1)]); //boxing\n+ this.index_set(s, n+1, [this.index(s, n+1)]); //boxing\nbreak;\ncase \"test\":\nvar thenc=x[1], elsec=x[2];\n@@ -305,14 +305,14 @@ BiwaScheme.Interpreter = BiwaScheme.Class.create({\n// In such case this VM prepares an empty list as the rest argument.\n// --------------------------------------------------------------\n// => We extend the stack to put the empty list.\n- for(var i = -1; i < n_args; i++){\n- this.index_set(s, i-1, this.index(s, i+1));\n+ for(var i = 0; i < n_args+1; i++){\n+ this.index_set(s, i-1, this.index(s, i));\n}\ns++;\n// => Update the number of arguments\n- this.index_set(s, -1, this.index(s, 0) + 1);\n+ this.index_set(s, 0, this.index(s, 0) + 1);\n}\n- this.index_set(s, dotpos, ls);\n+ this.index_set(s, dotpos+1, ls);\n}\nelse {\n// the dot is not found\n",
        "date": "01.01.2020 23:20:28",
        "repo": "biwascheme/biwascheme",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor stack manipulation and argument shifting in interpreter"
    },
    {
        "msg": "refactor(interpreter): Better name",
        "diff": "diff --git a/src/system/interpreter.js b/src/system/interpreter.js @@ -85,7 +85,7 @@ BiwaScheme.Interpreter = BiwaScheme.Class.create({\n//s: depth of stack to save\n//n: number of args(for outer lambda) to remove (= 0 unless tail position)\n//ret: closure array\n- continuation: function(s, n){\n+ capture_continuation: function(s, n){\n// note: implementation of this function for final version doesn't exist in 3imp.pdf..\nvar ss = this.push(n, s);\nreturn this.closure([\"refer-local\", 0,\n@@ -240,7 +240,7 @@ BiwaScheme.Interpreter = BiwaScheme.Class.create({\nbreak;\ncase \"conti\":\nvar n=x[1], x=x[2];\n- a = this.continuation(s, n);\n+ a = this.capture_continuation(s, n);\nbreak;\ncase \"nuate\":\nvar stack=x[1], x=x[2];\n",
        "date": "03.01.2020 19:28:00",
        "repo": "biwascheme/biwascheme",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor continuation function to capture_continuation in interpreter.js"
    },
    {
        "msg": "refactor(compiler): Avoid magic number",
        "diff": "diff --git a/src/system/compiler.js b/src/system/compiler.js @@ -347,15 +347,15 @@ BiwaScheme.Compiler = BiwaScheme.Class.create({\ncase BiwaScheme.Sym(\"call/cc\"):\nvar x=x.second();\n+ var arity_of_arg = 1; // Always 1. (lambda (cc) ...)\nvar c = [\"conti\",\n(this.is_tail(next) ? (e[0].size() + 1) : 0), //number of args for outer lambda\n[\"argument\",\n- [\"constant\", 1,\n+ [\"constant\", arity_of_arg,\n[\"argument\",\nthis.compile(x, e, s,f,\n- (this.is_tail(next) ? [\"shift\", 1, [\"tco_hinted_apply\"]]\n+ (this.is_tail(next) ? [\"shift\", arity_of_arg, [\"tco_hinted_apply\"]]\n: [\"apply\"]))]]]];\n- //note: proc for call/cc takes 1 argument (= [\"apply\", 1])\n// Do not push stack frame when call/cc is in a tail context\nreturn this.is_tail(next) ? c : [\"frame\", c, next];\n",
        "date": "03.01.2020 19:29:53",
        "repo": "biwascheme/biwascheme",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor call/cc implementation in compiler"
    },
    {
        "msg": "refactor(compiler): Add comment",
        "diff": "diff --git a/src/system/compiler.js b/src/system/compiler.js @@ -350,7 +350,7 @@ BiwaScheme.Compiler = BiwaScheme.Class.create({\nvar arity_of_arg = 1; // Always 1. (lambda (cc) ...)\nvar c = [\"conti\",\n(this.is_tail(next) ? (e[0].size() + 1) : 0), //number of args for outer lambda\n- [\"argument\",\n+ [\"argument\", // Push the continuaion closure onto the stack\n[\"constant\", arity_of_arg,\n[\"argument\",\nthis.compile(x, e, s,f,\n",
        "date": "03.01.2020 19:31:34",
        "repo": "biwascheme/biwascheme",
        "type": "refactor",
        "chatgpt_zeroshot": "Addition of pushing the continuation closure onto the stack in compiler.js"
    },
    {
        "msg": "refactor: Remove dependency on underscore.string",
        "diff": "diff --git a/src/system/_writer.js b/src/system/_writer.js @@ -13,6 +13,11 @@ import { Pair } from \"./pair.js\"\n// write\n//\n+const truncate = function(str, length) {\n+ const truncateStr = '...';\n+ return str.length > length ? str.slice(0, length) + truncateStr : str;\n+};\n+\nconst to_write = function(obj){\nif(obj === undefined)\nreturn \"undefined\";\n@@ -20,7 +25,7 @@ const to_write = function(obj){\nreturn \"null\";\nelse if(_.isFunction(obj))\nreturn \"#<Function \"+(obj.fname ? obj.fname :\n- obj.toSource ? _.str.truncate(obj.toSource(), 40) :\n+ obj.toSource ? truncate(obj.toSource(), 40) :\n\"\")+\">\";\nelse if(_.isString(obj))\nreturn '\"' +\n",
        "date": "23.06.2020 23:41:27",
        "repo": "biwascheme/biwascheme",
        "type": "refactor",
        "chatgpt_zeroshot": "Add truncate function to handle long strings in to_write function"
    },
    {
        "msg": "refactor: Rewrite release_initializer with vanilla js",
        "diff": "diff --git a/src/platforms/browser/release_initializer.js b/src/platforms/browser/release_initializer.js +import Dumper from \"./dumper.js\"\n+\n//\n// release_initializer.js - read user's program and eval it (if it exists)\n//\n+\nconst execute_user_program = function() {\n- var dumper = null;\n- if ($(\"#biwascheme-debugger\")[0]) {\n- dumper = new BiwaScheme.Dumper($(\"#biwascheme-debugger\")[0]);\n+ const dumper = null;\n+ const debug_area = document.querySelector(\"#biwascheme-debugger\");\n+ if (debug_area) {\n+ dumper = new Dumper(debug_area);\n}\n// Error handler (show message to console div)\n- var onError = function(e, state){\n+ const onError = function(e, state){\nBiwaScheme.Port.current_error.put_string(e.message + \"\\n\");\nif (dumper) {\ndumper.dump(state);\n@@ -20,8 +24,8 @@ const execute_user_program = function() {\n}\n};\n- var run = function(script) {\n- var intp = new BiwaScheme.Interpreter(onError);\n+ const run = function(script) {\n+ const intp = new BiwaScheme.Interpreter(onError);\ntry{\nintp.evaluate(script, function(){});\n}\n@@ -31,15 +35,21 @@ const execute_user_program = function() {\n};\n// Start user's program (old style)\n- var script = $(\"script[src$='biwascheme.js']\").html() ||\n- $(\"script[src$='biwascheme-min.js']\").html();\n- if (script) run(script);\n+ let script = \"\";\n+ for (const s of document.querySelectorAll(\"script[src$='biwascheme.js']\")) {\n+ script += s.innerHTML;\n+ }\n+ for (const s of document.querySelectorAll(\"script[src$='biwascheme-min.js']\")) {\n+ script += s.innerHTML;\n+ }\n+\n+ if (script.length > 0) run(script);\n// Start user's program (new style)\n- $(function(){\n- $(\"script[type='text/biwascheme']\").each(function(){\n- run($(this).html());\n- });\n+ window.addEventListener('DOMContentLoaded', function(){\n+ for (const s of document.querySelectorAll(\"script[type='text/biwascheme']\")) {\n+ run(s.innerHTML);\n+ }\n});\n};\n",
        "date": "14.03.2021 10:45:15",
        "repo": "biwascheme/biwascheme",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor release_initializer.js to use ES6 syntax and improve code readability"
    },
    {
        "msg": "refactor: Rewrite with vanilla js",
        "diff": "diff --git a/src/platforms/browser/default_ports.js b/src/platforms/browser/default_ports.js @@ -3,11 +3,12 @@ import { Port } from \"../../system/port.js\"\nconst current_input = new Port.CustomInput(\nfunction (callback) {\n- var form = $(\"<form/>\");\n- form.html(\"<input id='webscheme-read-line' type='text'><input type='submit' value='ok'>\");\n- $(\"#bs-console\").append(form);\n- form.submit(function(){\n- var input = $(\"#webscheme-read-line\").val();\n+ const out = document.querySelector(\"#bs-console\");\n+ const form = document.createElement(\"form\");\n+ form.innerHTML = \"<input id='webscheme-read-line' type='text'><input type='submit' value='ok'>\";\n+ out.appendChild(form);\n+ form.addEventListener(\"submit\", function(){\n+ const input = document.querySelector(\"#webscheme-read-line\").value;\nform.remove();\ncallback(input);\nreturn false;\n@@ -17,15 +18,13 @@ const current_input = new Port.CustomInput(\nconst current_output = new Port.CustomOutput(\nfunction (str) {\n- var console;\n- var text;\n- console = $(\"#bs-console\");\n- if (console[0]) {\n- text = _.escape(str);\n- var span = $(\"<span>\");\n- span.html(text.replace(/\\n/g,\"<br>\").replace(/ /g,\"&nbsp;\"));\n- console.append(span);\n- }\n+ const out = document.querySelector(\"#bs-console\");\n+ if (!out) return;\n+ const span = document.createElement(\"span\");\n+ span.innerHTML = _.escape(str)\n+ .replace(/\\n/g,\"<br>\")\n+ .replace(/ /g,\"&nbsp;\");\n+ out.appendChild(span);\n}\n);\n",
        "date": "14.03.2021 22:02:40",
        "repo": "biwascheme/biwascheme",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor default_ports.js to use vanilla JavaScript instead of jQuery for DOM manipulation."
    },
    {
        "msg": "refactor: Sort by alphabetic order",
        "diff": "diff --git a/src/system/expander/core.js b/src/system/expander/core.js @@ -5,22 +5,44 @@ import { List, Cons, isPair, isList } from \"../pair.js\"\nimport { Sym } from \"../symbol.js\"\nimport { isIdentifier, unwrapSyntax } from \"./syntactic_closure.js\"\n-const expandLambda = async ([form, xp]) => {\n- const err = new BiwaError(\"malformed lambda\", form);\n- const l = form.to_array();\n- if (l.length < 3) throw err;\n- const formals = form.cadr(err);\n- if (!isPair(formals)) throw err;\n- const body = form.cddr(err);\n-\n- const newEnv = env.extend(formal-list);\n+// `begin`\n+const expandBegin = async ([form, xp]) => {\n+ const body = await form.cdr.mapAsync(item => xp.expand(item));\n+ return Cons(Sym(\"begin\"), body);\n+};\n- // TODO\n+// `call/cc`\n+const expandCallCc = async ([form, xp]) => {\n+ const l = form.to_array();\n+ switch (l.length) {\n+ case 2:\n+ return List(Sym(\"call/cc\"), await xp.expand(l[1]));\n+ default:\n+ throw new BiwaError(\"malformed call/cc\", form);\n+ }\n+};\n- return Cons(Sym(\"lambda\"),\n- Cons(newFormals, newBody));\n+// `define`\n+// Destructively modifies `env`\n+const expandDefine = async ([form, xp, env]) => {\n+ const l = form.to_array();\n+ switch (l.length) {\n+ case 3:\n+ const [_, formal, expr] = l;\n+ if (!isIdentifier(formal)) {\n+ throw new BiwaError(\"malformed define\", form);\n+ }\n+ env.extend(formal);\n+ const id = await xp.expand(formal);\n+ const body = env.isToplevel() ? (await xp.expand(expr))\n+ : expr; // Expand later on\n+ return List(Sym(\"define\"), id, body);\n+ default:\n+ throw new BiwaError(\"malformed define\", form);\n+ }\n};\n+// `if`\nconst expandIf = async ([form, xp]) => {\nconst l = form.to_array();\nswitch (l.length) {\n@@ -33,6 +55,24 @@ const expandIf = async ([form, xp]) => {\n}\n};\n+// `lambda`\n+const expandLambda = async ([form, xp]) => {\n+ const err = new BiwaError(\"malformed lambda\", form);\n+ const l = form.to_array();\n+ if (l.length < 3) throw err;\n+ const formals = form.cadr(err);\n+ if (!isPair(formals)) throw err;\n+ const body = form.cddr(err);\n+\n+ const newEnv = env.extend(formal-list);\n+\n+ // TODO\n+\n+ return Cons(Sym(\"lambda\"),\n+ Cons(newFormals, newBody));\n+};\n+\n+// `quote`\nconst expandQuote = async ([form, xp]) => {\nconst l = form.to_array();\nswitch (l.length) {\n@@ -43,6 +83,7 @@ const expandQuote = async ([form, xp]) => {\n}\n};\n+// `set!`\nconst expandSet = async ([form, xp]) => {\nconst l = form.to_array();\nswitch (l.length) {\n@@ -53,40 +94,6 @@ const expandSet = async ([form, xp]) => {\n}\n};\n-const expandCallCc = async ([form, xp]) => {\n- const l = form.to_array();\n- switch (l.length) {\n- case 2:\n- return List(Sym(\"call/cc\"), await xp.expand(l[1]));\n- default:\n- throw new BiwaError(\"malformed call/cc\", form);\n- }\n-};\n-\n-const expandBegin = async ([form, xp]) => {\n- const body = await form.cdr.mapAsync(item => xp.expand(item));\n- return Cons(Sym(\"begin\"), body);\n-};\n-\n-// Destructively modifies `env`\n-const expandDefine = async ([form, xp, env]) => {\n- const l = form.to_array();\n- switch (l.length) {\n- case 3:\n- const [_, formal, expr] = l;\n- if (!isIdentifier(formal)) {\n- throw new BiwaError(\"malformed define\", form);\n- }\n- env.extend(formal);\n- const id = await xp.expand(formal);\n- const body = env.isToplevel() ? (await xp.expand(expr))\n- : expr; // Expand later on\n- return List(Sym(\"define\"), id, body);\n- default:\n- throw new BiwaError(\"malformed define\", form);\n- }\n-};\n-\n// TODO\n// const expandDefineRecordType\n// const expandParameterize\n@@ -101,12 +108,12 @@ const expandDefine = async ([form, xp, env]) => {\n// Install core expanders into `lib`\nconst installCore = (lib) => {\n- lib.exportMacro(Sym(\"lambda\"), expandLambda);\n+ lib.exportMacro(Sym(\"begin\"), expandBegin);\n+ lib.exportMacro(Sym(\"call/cc\"), expandCallCc);\n+ lib.exportMacro(Sym(\"define\"), expandDefine);\nlib.exportMacro(Sym(\"if\"), expandIf);\n+ lib.exportMacro(Sym(\"lambda\"), expandLambda);\nlib.exportMacro(Sym(\"quote\"), expandQuote);\nlib.exportMacro(Sym(\"set!\"), expandSet);\n- lib.exportMacro(Sym(\"call/cc\"), expandCallCc);\n- lib.exportMacro(Sym(\"begin\"), expandBegin);\n- lib.exportMacro(Sym(\"define\"), expandDefine);\n};\nexport { installCore };\n",
        "date": "24.05.2022 11:06:42",
        "repo": "biwascheme/biwascheme",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor core.js to add expanders for `begin`, `call/cc`, `define`, `if`, `lambda`, `quote`, and `set!` functions."
    },
    {
        "msg": "refactor: remove double coerce",
        "diff": "diff --git a/packages/create-react-app/createReactApp.js b/packages/create-react-app/createReactApp.js @@ -443,6 +443,8 @@ function run(\n)\n.then(({ isOnline, packageInfo, templateInfo }) => {\nlet packageVersion = semver.coerce(packageInfo.version);\n+\n+ // This environment variable can be removed post-release.\nconst templatesVersionMinimum = process.env.CRA_INTERNAL_TEST\n? '3.2.0'\n: '3.3.0';\n@@ -454,7 +456,7 @@ function run(\n// Only support templates when used alongside new react-scripts versions.\nconst supportsTemplates = semver.gte(\n- semver.coerce(packageVersion),\n+ packageVersion,\ntemplatesVersionMinimum\n);\nif (supportsTemplates) {\n",
        "date": "27.10.2019 06:01:56",
        "repo": "react-workspaces/create-react-app",
        "type": "refactor",
        "chatgpt_zeroshot": "Remove unnecessary semver.coerce() function call and update templatesVersionMinimum value."
    },
    {
        "msg": "refactor: removed empty spaces",
        "diff": "diff --git a/components/ProgressIndicator/ProgressIndicator.js b/components/ProgressIndicator/ProgressIndicator.js @@ -28,8 +28,7 @@ export default function ProgressIndicator({ stepNumber, totalSteps }) {\n{currentStep}/{totalSteps} Complete\n</label>\n<progress id=\"steps-indicator\" max={totalSteps} value={currentStep}>\n- {' '}\n- {percentageCompleted}%{' '}\n+ {percentageCompleted}%\n</progress>\n</div>\n);\n",
        "date": "10.10.2019 15:59:11",
        "repo": "operationcode/front-end",
        "type": "refactor",
        "chatgpt_zeroshot": "Remove unnecessary space and percentage sign in ProgressIndicator component."
    },
    {
        "msg": "refactor: getFiles: allPlaces -> processedPlaces",
        "diff": "diff --git a/packages/engine-processor/lib/processor.js b/packages/engine-processor/lib/processor.js @@ -102,14 +102,15 @@ async function iterate({name, rawSource, fileList, merge, processFile, processed\nasync function getFiles({name, fix, rawSource, processorRunners}) {\nconst fileList = [];\n- const allPlaces = [];\n+ const processedPlaces = [];\nlet isProcessed = false;\nlet processedSource = '';\n- let processedPlaces = [];\nlet merge = null;\nfor (const currentRunner of processorRunners) {\n+ let places = [];\n+\nconst {\nisMatch,\nbranch = stubSplit,\n@@ -127,16 +128,16 @@ async function getFiles({name, fix, rawSource, processorRunners}) {\nisProcessed = true;\nif (lint)\n- [processedSource, processedPlaces] = await lint(rawSource, {fix});\n+ [processedSource, places] = await lint(rawSource, {fix});\nelse if (fix)\nprocessedSource = await fixFind(rawSource);\nelse\n- processedPlaces = await find(rawSource);\n+ places = await find(rawSource);\nif (!processedSource)\nprocessedSource = rawSource;\n- allPlaces.push(...processedPlaces);\n+ processedPlaces.push(...places);\nconst files = await branch(processedSource);\n@@ -147,7 +148,7 @@ async function getFiles({name, fix, rawSource, processorRunners}) {\nmerge,\nisProcessed,\nprocessedSource,\n- processedPlaces: allPlaces,\n+ processedPlaces,\nfileList,\n};\n}\n",
        "date": "23.09.2022 13:27:11",
        "repo": "coderaiser/putout",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor getFiles function to improve variable naming and readability"
    },
    {
        "msg": "refactor: remove next tick import",
        "diff": "diff --git a/packages/alpinejs/src/lifecycle.js b/packages/alpinejs/src/lifecycle.js import { startObservingMutations, onAttributesAdded, onElAdded, onElRemoved, cleanupAttributes } from \"./mutation\"\nimport { deferHandlingDirectives, directives } from \"./directives\"\nimport { dispatch } from './utils/dispatch'\n-import { nextTick } from \"./nextTick\"\nimport { walk } from \"./utils/walk\"\nimport { warn } from './utils/warn'\n",
        "date": "23.11.2022 20:13:34",
        "repo": "alpinejs/alpine",
        "type": "refactor",
        "chatgpt_zeroshot": "Remove unused nextTick import and update dependencies."
    },
    {
        "msg": "refactor(Carousel): replace deprecated lifecycle\nreplace the deprecated `UNSAFE_componentWillReceiveProps` with the new\n`getDerivedStateFromProps` to update `state` from newly passed `props`.\nCloses",
        "diff": "diff --git a/src/Carousel.js b/src/Carousel.js @@ -12,6 +12,7 @@ class Carousel extends React.Component {\nthis.hoverStart = this.hoverStart.bind(this);\nthis.hoverEnd = this.hoverEnd.bind(this);\nthis.state = {\n+ activeIndex: this.props.activeIndex,\ndirection: 'right',\nindicatorClicked: false,\n};\n@@ -31,19 +32,35 @@ class Carousel extends React.Component {\ndocument.addEventListener('keyup', this.handleKeyPress);\n}\n- UNSAFE_componentWillReceiveProps(nextProps) {\n- this.setInterval(nextProps);\n+ static getDerivedStateFromProps(nextProps, prevState) {\n+ let newState = null;\n+ let { activeIndex, direction, indicatorClicked } = prevState;\n+\n+ if (nextProps.activeIndex !== activeIndex) {\n// Calculate the direction to turn\n- if (this.props.activeIndex + 1 === nextProps.activeIndex) {\n- this.setState({ direction: 'right' });\n- } else if (this.props.activeIndex - 1 === nextProps.activeIndex) {\n- this.setState({ direction: 'left' });\n- } else if (this.props.activeIndex > nextProps.activeIndex) {\n- this.setState({ direction: this.state.indicatorClicked ? 'left' : 'right' });\n- } else if (this.props.activeIndex !== nextProps.activeIndex) {\n- this.setState({ direction: this.state.indicatorClicked ? 'right' : 'left' });\n+ if (nextProps.activeIndex === activeIndex + 1) {\n+ direction = 'right';\n+ } else if (nextProps.activeIndex === activeIndex -1) {\n+ direction = 'left';\n+ } else if (nextProps.activeIndex < activeIndex) {\n+ direction = indicatorClicked ? 'left' : 'right';\n+ } else if (nextProps.activeIndex !== activeIndex) {\n+ direction = indicatorClicked ? 'right' : 'left';\n+ }\n+\n+ newState = {\n+ activeIndex: nextProps.activeIndex,\n+ direction,\n+ indicatorClicked: false,\n+ }\n}\n- this.setState({ indicatorClicked: false });\n+\n+ return newState;\n+ }\n+\n+ componentDidUpdate(prevProps, prevState) {\n+ if (prevState.activeIndex === this.state.activeIndex) return;\n+ this.setInterval(this.props);\n}\ncomponentWillUnmount() {\n@@ -98,7 +115,7 @@ class Carousel extends React.Component {\nreturn (\n<div className={className}>\n{carouselItems.map((item, index) => {\n- const isIn = (index === this.props.activeIndex);\n+ const isIn = (index === this.state.activeIndex);\nreturn React.cloneElement(item, {\nin: isIn,\nslide: slide,\n",
        "date": "18.10.2019 18:57:56",
        "repo": "reactstrap/reactstrap",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor Carousel component to use getDerivedStateFromProps and componentDidUpdate"
    },
    {
        "msg": "refactor: config key presence check",
        "diff": "diff --git a/index.js b/index.js @@ -20,15 +20,11 @@ export default function nuxtFire(moduleOptions) {\n}\n// Check if needed config is correctly set\n- if (\n- !options.config[currentEnv] ||\n- !options.config[currentEnv].apiKey ||\n- !options.config[currentEnv].authDomain ||\n- !options.config[currentEnv].databaseURL ||\n- !options.config[currentEnv].projectId ||\n- !options.config[currentEnv].storageBucket ||\n- !options.config[currentEnv].messagingSenderId\n- ) {\n+ const configKeys = Object.keys(options.config[currentEnv] || false)\n+\n+ const requiredKeys = ['apiKey', 'authDomain', 'databaseURL', 'projectId', 'storageBucket', 'messagingSenderId']\n+\n+ if (requiredKeys.some(k => !configKeys.includes(k))) {\n//TODO: Replace with @nuxtjs/plugin-utils error\nconsole.error(\n'\\x1b[31m',\n",
        "date": "21.11.2018 10:48:09",
        "repo": "nuxt-community/firebase-module",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor config validation to use array of required keys"
    },
    {
        "msg": "refactor(auth): use commonjs syntax for createServerMiddleware helper",
        "diff": "diff --git a/lib/helpers/createServerMiddleware.js b/lib/helpers/createServerMiddleware.js -import admin from 'firebase-admin'\n-import logger from '../logger'\n+const admin = require('firebase-admin')\n+const logger = require('../logger')\n-export default function createServerMiddleware (options) {\n+module.exports = function (options) {\nreturn async (req, res, next) => {\nif (!req.headers.authorization) { return next() }\n",
        "date": "13.03.2020 13:56:24",
        "repo": "nuxt-community/firebase-module",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor createServerMiddleware to use require instead of import"
    },
    {
        "msg": "refactor: remove serviceReady vars, check service directly",
        "diff": "diff --git a/lib/plugins/main.js b/lib/plugins/main.js @@ -56,13 +56,11 @@ export default async (ctx, inject) => {\n<% for (service of serverServices) { %>\n<% const serviceName = serviceNames[service] %>\n- let <%= serviceName %>Ready = false\nfire.<%= serviceName %> = null\nfire.<%= serviceName %>Ready = async () => {\n- if (!<%= serviceName %>Ready) {\n+ if (!fire.<%= serviceName %>) {\nawait fire.appReady()\nfire.<%= serviceName %> = await <%= `${service}Service(session, firebase)` %>\n- <%= serviceName %>Ready = true\n}\nreturn fire.<%= serviceName %>\n@@ -72,13 +70,11 @@ export default async (ctx, inject) => {\nif (process.client) {\n<% for (service of clientServices) { %>\n<% const serviceName = serviceNames[service] %>\n- let <%= serviceName %>Ready = false\nfire.<%= serviceName %> = null\nfire.<%= serviceName %>Ready = async () => {\n- if (!<%= serviceName %>Ready) {\n+ if (!fire.<%= serviceName %>) {\nawait fire.appReady()\nfire.<%= serviceName %> = await <%= `${service}Service(session, firebase)` %>\n- <%= serviceName %>Ready = true\n}\nreturn fire.<%= serviceName %>\n",
        "date": "18.07.2020 18:40:54",
        "repo": "nuxt-community/firebase-module",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor service initialization logic in main.js"
    },
    {
        "msg": "refactor: type declaration import to firebase/compat",
        "diff": "diff --git a/types/index.d.ts b/types/index.d.ts @@ -4,7 +4,7 @@ import { NuxtAppOptions, Configuration } from '@nuxt/types'\nimport { NuxtConfiguration } from '@nuxt/vue-app'\nimport { ServiceAccount } from 'firebase-admin'\n-import firebase from 'firebase'\n+import firebase from 'firebase/compat'\nimport { auth } from 'firebase-admin'\n/***********************************\n",
        "date": "02.12.2021 13:27:28",
        "repo": "nuxt-community/firebase-module",
        "type": "refactor",
        "chatgpt_zeroshot": "Update firebase import to use compat version"
    },
    {
        "msg": "refactor: inline `lineHeight`",
        "diff": "diff --git a/packages/vega-scenegraph/src/util/text.js b/packages/vega-scenegraph/src/util/text.js @@ -138,14 +138,13 @@ export function offset(item) {\n// perform our own font baseline calculation\n// why? not all browsers support SVG 1.1 'alignment-baseline' :(\nvar baseline = item.baseline,\n- h = fontSize(item),\n- lh = lineHeight(item);\n+ h = fontSize(item);\nreturn Math.round(\n- baseline === 'line-top' ? 0.79.h + (lh-h) / 2.0 :\n+ baseline === 'line-top' ? 0.79.h + (lineHeight(item)-h) / 2.0 :\nbaseline === 'top' ? 0.79*h :\nbaseline === 'middle' ? 0.30*h :\nbaseline === 'bottom' ? -0.21*h :\n- baseline === 'line-bottom' ? -0.21*h - (lh-h) / 2.0 : 0\n+ baseline === 'line-bottom' ? -0.21*h - (lineHeight(item)-h) / 2.0 : 0\n);\n}\n",
        "date": "01.03.2020 15:04:19",
        "repo": "vega/vega",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor font baseline calculation in text utility function"
    },
    {
        "msg": "refactor: Update config constants.",
        "diff": "diff --git a/packages/vega-parser/src/config.js b/packages/vega-parser/src/config.js -var defaultFont = 'sans-serif',\n+/**\n+ * Standard configuration defaults for Vega specification parsing.\n+ * Users can provide their own (sub-)set of these default values\n+ * by passing in a config object to the top-level parse method.\n+ */\n+export default function() {\n+ const defaultFont = 'sans-serif',\ndefaultSymbolSize = 30,\ndefaultStrokeWidth = 2,\ndefaultColor = '#4c78a8',\n@@ -6,12 +12,6 @@ var defaultFont = 'sans-serif',\ngray = '#888',\nlightGray = '#ddd';\n-/**\n- * Standard configuration defaults for Vega specification parsing.\n- * Users can provide their own (sub-)set of these default values\n- * by passing in a config object to the top-level parse method.\n- */\n-export default function() {\nreturn {\n// default visualization description\ndescription: 'Vega visualization',\n",
        "date": "17.05.2020 22:11:55",
        "repo": "vega/vega",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor default configuration settings in config.js"
    },
    {
        "msg": "refactor(vega-force): Use leaner syntax.",
        "diff": "diff --git a/packages/vega-force/src/Force.js b/packages/vega-force/src/Force.js @@ -8,7 +8,7 @@ import {\nforceManyBody, forceSimulation, forceX, forceY\n} from 'd3-force';\n-var ForceMap = {\n+const ForceMap = {\ncenter: forceCenter,\ncollide: forceCollide,\nnbody: forceManyBody,\n@@ -17,7 +17,7 @@ var ForceMap = {\ny: forceY\n};\n-var Forces = 'forces',\n+const Forces = 'forces',\nForceParams = [\n'alpha', 'alphaMin', 'alphaTarget',\n'velocityDecay', 'forces'\n@@ -104,9 +104,8 @@ Force.Definition = {\n]\n};\n-var prototype = inherits(Force, Transform);\n-\n-prototype.transform = function(_, pulse) {\n+inherits(Force, Transform, {\n+ transform(_, pulse) {\nvar sim = this.value,\nchange = pulse.changed(pulse.ADD_REM),\nparams = _.modified(ForceParams),\n@@ -147,13 +146,13 @@ prototype.transform = function(_, pulse) {\n}\nreturn this.finish(_, pulse);\n-};\n+ },\n-prototype.finish = function(_, pulse) {\n- var dataflow = pulse.dataflow;\n+ finish(_, pulse) {\n+ const dataflow = pulse.dataflow;\n// inspect dependencies, touch link source data\n- for (var args=this._argops, j=0, m=args.length, arg; j<m; ++j) {\n+ for (let args=this._argops, j=0, m=args.length, arg; j<m; ++j) {\narg = args[j];\nif (arg.name !== Forces || arg.op._argval.force !== 'link') {\ncontinue;\n@@ -168,31 +167,24 @@ prototype.finish = function(_, pulse) {\n// reflow all nodes\nreturn pulse.reflow(_.modified()).modifies(ForceOutput);\n-};\n+ }\n+});\nfunction rerun(df, op) {\n- return function() { df.touch(op).run(); };\n+ return () => df.touch(op).run();\n}\nfunction simulation(nodes, _) {\n- var sim = forceSimulation(nodes),\n- stopped = false,\n+ const sim = forceSimulation(nodes),\nstop = sim.stop,\nrestart = sim.restart;\n+ let stopped = false;\n- sim.stopped = function() {\n- return stopped;\n- };\n- sim.restart = function() {\n- stopped = false;\n- return restart();\n- };\n- sim.stop = function() {\n- stopped = true;\n- return stop();\n- };\n+ sim.stopped = () => stopped;\n+ sim.restart = () => (stopped = false, restart());\n+ sim.stop = () => (stopped = true, stop());\n- return setup(sim, _, true).on('end', function() { stopped = true; });\n+ return setup(sim, _, true).on('end', () => stopped = true);\n}\nfunction setup(sim, _, init, pulse) {\n@@ -244,5 +236,5 @@ function getForce(_) {\n}\nfunction setForceParam(f, v, _) {\n- f(isFunction(v) ? function(d) { return v(d, _); } : v);\n+ f(isFunction(v) ? d => v(d, _) : v);\n}\n",
        "date": "31.05.2020 14:38:19",
        "repo": "vega/vega",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor Force.js to use const and arrow functions, improve code readability"
    },
    {
        "msg": "refactor(vega-label): Use leaner syntax.",
        "diff": "diff --git a/packages/vega-label/src/Label.js b/packages/vega-label/src/Label.js @@ -69,9 +69,8 @@ Label.Definition = {\n]\n};\n-const prototype = inherits(Label, Transform);\n-\n-prototype.transform = function (_, pulse) {\n+inherits(Label, Transform, {\n+ transform(_, pulse) {\nfunction modp(param) {\nconst p = _[param];\nreturn isFunction(p) && pulse.modified(p.fields);\n@@ -109,4 +108,5 @@ prototype.transform = function (_, pulse) {\n});\nreturn pulse.reflow(mod).modifies(as);\n-};\n+ }\n+});\n",
        "date": "31.05.2020 14:39:10",
        "repo": "vega/vega",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor Label.js to use ES6 class syntax and arrow functions"
    },
    {
        "msg": "refactor(vega-voronoi): Use leaner syntax.",
        "diff": "diff --git a/packages/vega-voronoi/src/Voronoi.js b/packages/vega-voronoi/src/Voronoi.js @@ -20,11 +20,10 @@ Voronoi.Definition = {\n]\n};\n-const prototype = inherits(Voronoi, Transform);\n-\nconst defaultExtent = [-1e5, -1e5, 1e5, 1e5];\n-prototype.transform = function(_, pulse) {\n+inherits(Voronoi, Transform, {\n+ transform(_, pulse) {\nconst as = _.as || 'path',\ndata = pulse.source;\n@@ -46,7 +45,8 @@ prototype.transform = function(_, pulse) {\n}\nreturn pulse.reflow(_.modified()).modifies(as);\n-};\n+ }\n+});\n// suppress duplicated end point vertices\nfunction toPathString(p) {\n",
        "date": "31.05.2020 14:41:10",
        "repo": "vega/vega",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor Voronoi transform method and update prototype inheritance."
    },
    {
        "msg": "refactor(vega-wordcloud): Use leaner syntax.",
        "diff": "diff --git a/packages/vega-wordcloud/src/Wordcloud.js b/packages/vega-wordcloud/src/Wordcloud.js @@ -30,9 +30,8 @@ Wordcloud.Definition = {\n]\n};\n-var prototype = inherits(Wordcloud, Transform);\n-\n-prototype.transform = function(_, pulse) {\n+inherits(Wordcloud, Transform, {\n+ transform(_, pulse) {\nif (_.size && !(_.size[0] && _.size[1])) {\nerror('Wordcloud size dimensions must be non-zero.');\n}\n@@ -42,13 +41,14 @@ prototype.transform = function(_, pulse) {\nreturn isFunction(p) && pulse.modified(p.fields);\n}\n- var mod = _.modified();\n+ const mod = _.modified();\nif (!(mod || pulse.changed(pulse.ADD_REM) || Params.some(modp))) return;\n- var data = pulse.materialize(pulse.SOURCE).source,\n+ const data = pulse.materialize(pulse.SOURCE).source,\nlayout = this.value,\n- as = _.as || Output,\n- fontSize = _.fontSize || 14,\n+ as = _.as || Output;\n+\n+ let fontSize = _.fontSize || 14,\nrange;\nisFunction(fontSize)\n@@ -57,21 +57,21 @@ prototype.transform = function(_, pulse) {\n// create font size scaling function as needed\nif (range) {\n- var fsize = fontSize,\n+ const fsize = fontSize,\nsizeScale = scale('sqrt')()\n.domain(extent(data, fsize))\n.range(range);\n- fontSize = function(x) { return sizeScale(fsize(x)); };\n+ fontSize = x => sizeScale(fsize(x));\n}\n- data.forEach(function(t) {\n+ data.forEach(t => {\nt[as[0]] = NaN;\nt[as[1]] = NaN;\nt[as[3]] = 0;\n});\n// configure layout\n- var words = layout\n+ const words = layout\n.words(data)\n.text(_.text)\n.size(_.size || [500, 500])\n@@ -85,14 +85,12 @@ prototype.transform = function(_, pulse) {\n.random(random)\n.layout();\n- var size = layout.size(),\n+ const size = layout.size(),\ndx = size[0] >> 1,\ndy = size[1] >> 1,\n- i = 0,\n- n = words.length,\n- w, t;\n+ n = words.length;\n- for (; i<n; ++i) {\n+ for (let i = 0, w, t; i<n; ++i) {\nw = words[i];\nt = w.datum;\nt[as[0]] = w.x + dx;\n@@ -105,4 +103,5 @@ prototype.transform = function(_, pulse) {\n}\nreturn pulse.reflow(mod).modifies(as);\n-};\n+ }\n+});\n\\ No newline at end of file\n",
        "date": "31.05.2020 14:41:25",
        "repo": "vega/vega",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor Wordcloud.js to use ES6 syntax and improve code readability"
    },
    {
        "msg": "refactor(vega-time): Use leaner syntax.",
        "diff": "diff --git a/packages/vega-time/src/util.js b/packages/vega-time/src/util.js @@ -32,7 +32,7 @@ export function localFirst(y) {\nexport function localDate(y, m, d, H, M, S, L) {\nif (0 <= y && y < 100) {\n- var date = new Date(-1, m, d, H, M, S, L);\n+ const date = new Date(-1, m, d, H, M, S, L);\ndate.setFullYear(y);\nreturn date;\n}\n@@ -64,7 +64,7 @@ export function utcFirst(y) {\nexport function utcDate(y, m, d, H, M, S, L) {\nif (0 <= y && y < 100) {\n- var date = new Date(Date.UTC(-1, m, d, H, M, S, L));\n+ const date = new Date(Date.UTC(-1, m, d, H, M, S, L));\ndate.setUTCFullYear(d.y);\nreturn date;\n}\n",
        "date": "02.06.2020 13:54:47",
        "repo": "vega/vega",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor date creation in localDate and utcDate functions to use const instead of var."
    },
    {
        "msg": "refactor(vega-projection): Use leaner syntax.",
        "diff": "diff --git a/packages/vega-projection/src/projections.js b/packages/vega-projection/src/projections.js @@ -22,9 +22,9 @@ import {\ngeoMollweide\n} from 'd3-geo-projection';\n-var defaultPath = geoPath();\n+const defaultPath = geoPath();\n-export var projectionProperties = [\n+export const projectionProperties = [\n// standard properties in d3-geo\n'clipAngle',\n'clipExtent',\n@@ -54,14 +54,14 @@ export var projectionProperties = [\n*/\nfunction create(type, constructor) {\nreturn function projection() {\n- var p = constructor();\n+ const p = constructor();\np.type = type;\np.path = geoPath().projection(p);\np.copy = p.copy || function() {\n- var c = projection();\n+ const c = projection();\nprojectionProperties.forEach(function(prop) {\nif (p[prop]) c[prop](p[prop]());\n});\n@@ -90,7 +90,7 @@ export function getProjectionPath(proj) {\nreturn (proj && proj.path) || defaultPath;\n}\n-var projections = {\n+const projections = {\n// base d3-geo projection types\nalbers: geoAlbers,\nalbersusa: geoAlbersUsa,\n@@ -111,6 +111,6 @@ var projections = {\ntransversemercator: geoTransverseMercator\n};\n-for (var key in projections) {\n+for (const key in projections) {\nprojection(key, projections[key]);\n}\n",
        "date": "02.06.2020 13:55:33",
        "repo": "vega/vega",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor code to use const instead of var and update variable declarations to be more consistent."
    },
    {
        "msg": "refactor(vega-format): Use leaner syntax.",
        "diff": "diff --git a/packages/vega-format/src/number.js b/packages/vega-format/src/number.js @@ -12,7 +12,7 @@ import {\nfunction trimZeroes(numberFormat, decimalChar) {\nreturn x => {\n- var str = numberFormat(x),\n+ let str = numberFormat(x),\ndec = str.indexOf(decimalChar),\nidx, end;\n@@ -27,7 +27,7 @@ function trimZeroes(numberFormat, decimalChar) {\n}\nfunction rightmostDigit(str, dec) {\n- var i = str.lastIndexOf('e'), c;\n+ let i = str.lastIndexOf('e'), c;\nif (i > 0) return i;\nfor (i=str.length; --i > dec;) {\nc = str.charCodeAt(i);\n@@ -43,7 +43,7 @@ function numberLocale(locale) {\nformat,\nformatPrefix,\nformatFloat(spec) {\n- var s = formatSpecifier(spec || ',');\n+ const s = formatSpecifier(spec || ',');\nif (s.precision == null) {\ns.precision = 12;\nswitch (s.type) {\n",
        "date": "02.06.2020 13:56:31",
        "repo": "vega/vega",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor number.js to use let and const instead of var"
    },
    {
        "msg": "refactor(vega-event-selector): Use leaner syntax.",
        "diff": "diff --git a/packages/vega-event-selector/src/event-selector.js b/packages/vega-event-selector/src/event-selector.js @@ -8,7 +8,7 @@ export default function(selector, source, marks) {\nreturn parseMerge(selector.trim()).map(parseSelector);\n}\n-var VIEW = 'view',\n+let VIEW = 'view',\nLBRACK = '[',\nRBRACK = ']',\nLBRACE = '{',\n@@ -41,7 +41,7 @@ function isMarkType(type) {\n}\nfunction find(s, i, endChar, pushChar, popChar) {\n- var count = 0,\n+ let count = 0,\nn = s.length,\nc;\nfor (; i<n; ++i) {\n@@ -54,7 +54,7 @@ function find(s, i, endChar, pushChar, popChar) {\n}\nfunction parseMerge(s) {\n- var output = [],\n+ let output = [],\nstart = 0,\nn = s.length,\ni = 0;\n@@ -78,7 +78,7 @@ function parseSelector(s) {\n}\nfunction parseBetween(s) {\n- var n = s.length,\n+ let n = s.length,\ni = 1,\nb, stream;\n@@ -113,7 +113,7 @@ function parseBetween(s) {\n}\nfunction parseStream(s) {\n- var stream = {source: DEFAULT_SOURCE},\n+ let stream = {source: DEFAULT_SOURCE},\nsource = [],\nthrottle = [0, 0],\nmarkname = 0,\n@@ -198,10 +198,10 @@ function parseStream(s) {\n}\nfunction parseThrottle(s) {\n- var a = s.split(COMMA);\n+ const a = s.split(COMMA);\nif (!s.length || a.length > 2) throw s;\nreturn a.map(function(_) {\n- var x = +_;\n+ const x = +_;\nif (x !== x) throw s;\nreturn x;\n});\n",
        "date": "02.06.2020 13:56:56",
        "repo": "vega/vega",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor code to use let and const instead of var in event-selector.js"
    },
    {
        "msg": "refactor: remove impossible condition from sceneEqual",
        "diff": "diff --git a/packages/vega-scenegraph/src/util/equal.js b/packages/vega-scenegraph/src/util/equal.js @@ -9,7 +9,6 @@ export function sceneEqual(a, b, key) {\n: (a instanceof Date && b instanceof Date) ? +a === +b\n: (isNumber(a) && isNumber(b)) ? Math.abs(a - b) <= TOLERANCE\n: (!a || !b || !isObject(a) && !isObject(b)) ? a == b\n- : (a == null || b == null) ? false\n: objectEqual(a, b);\n}\n",
        "date": "18.08.2020 22:03:55",
        "repo": "vega/vega",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor sceneEqual function to remove unnecessary null check."
    },
    {
        "msg": "refactor: use endsWith",
        "diff": "diff --git a/packages/vega-loader/src/loader.js b/packages/vega-loader/src/loader.js @@ -82,7 +82,7 @@ async function sanitize(uri, options) {\n// if relative url (no protocol/host), prepend baseURL\nif ((base = options.baseURL) && !hasProtocol) {\n// Ensure that there is a slash between the baseURL (e.g. hostname) and url\n- if (!uri.startsWith('/') && base[base.length-1] !== '/') {\n+ if (!uri.startsWith('/') && !base.endsWith('/')) {\nuri = '/' + uri;\n}\nuri = base + uri;\n",
        "date": "07.04.2021 23:06:53",
        "repo": "vega/vega",
        "type": "refactor",
        "chatgpt_zeroshot": "Fix baseURL concatenation logic in sanitize function"
    },
    {
        "msg": "refactor(RN Windows): Remove newer react native cli dependency, because it was needed for rn 0.64",
        "diff": "diff --git a/packages/rnv-engine-rn-windows/renative.engine.json b/packages/rnv-engine-rn-windows/renative.engine.json \"version\": \"0.63.4\"\n},\n\"react-native-windows\": \"source:rnv\",\n- \"@react-native-community/cli\": {\n- \"version\": \"5.0.1\"\n- },\n\"@react-native-windows/cli\": \"source:rnv\"\n},\n\"platforms\": {\n",
        "date": "03.09.2021 13:17:21",
        "repo": "pavjacko/renative",
        "type": "refactor",
        "chatgpt_zeroshot": "Update react-native-windows and remove react-native-community/cli version 5.0.1"
    },
    {
        "msg": "refactor(SimilarityGraph): rename \"nodeRadius\" to \"size\"",
        "diff": "diff --git a/components/SimilarityGraph/index.js b/components/SimilarityGraph/index.js @@ -4,7 +4,7 @@ import d3 from 'd3';\nimport cola from 'webcola';\nexport default class SimilarityGraph extends VisComponent {\n- constructor (el, {data, threshold = 0, linkDistance = 100, nodeRadius = 10}) {\n+ constructor (el, {data, threshold = 0, linkDistance = 100, size = 10}) {\nsuper(el);\nthis.data = data;\n@@ -24,8 +24,8 @@ export default class SimilarityGraph extends VisComponent {\nconst nodes = this.nodes = this.data.map(d => ({\nid: d.id,\ncolor: d.color,\n- width: 2 * nodeRadius,\n- height: 2 * nodeRadius\n+ width: 2 * size,\n+ height: 2 * size\n}));\n// Construct an index map into the nodes list.\n@@ -67,7 +67,7 @@ export default class SimilarityGraph extends VisComponent {\nthis.nodeSelection.enter()\n.append('circle')\n.classed('node', true)\n- .attr('r', nodeRadius)\n+ .attr('r', size)\n.style('stroke', 'black')\n.style('fill', d => colormap(d.color))\n.style('cursor', 'crosshair')\n",
        "date": "20.04.2017 16:08:37",
        "repo": "kitware/candela",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor node size parameter in SimilarityGraph component"
    },
    {
        "msg": "refactor(SimilarityGraph): update how \"static\" options are expressed",
        "diff": "diff --git a/components/SimilarityGraph/index.js b/components/SimilarityGraph/index.js @@ -164,9 +164,14 @@ export default class SimilarityGraph extends VisComponent {\n{\nname: 'size',\ntype: 'number',\n- domain: {\n- mode: 'value'\n- }\n+ format: 'number'\n+ default: 10\n+ },\n+ {\n+ name: 'threshold',\n+ type: 'number',\n+ format: 'number',\n+ default: 0\n}\n];\n}\n",
        "date": "24.04.2017 16:41:20",
        "repo": "kitware/candela",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor SimilarityGraph component to update size and threshold properties."
    },
    {
        "msg": "refactor(SimilarityGraph): empty top-level div before placing SVG",
        "diff": "diff --git a/components/SimilarityGraph/index.js b/components/SimilarityGraph/index.js @@ -8,6 +8,10 @@ export default class SimilarityGraph extends VisComponent {\nsuper(el);\nthis.data = data;\n+ // Empty the top-level div.\n+ d3.select(this.el)\n+ .selectAll('*').remove();\n+\n// Construct an SVG element inside the top-level div.\nthis.svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\nthis.svg.setAttribute('width', width);\n",
        "date": "25.04.2017 16:29:06",
        "repo": "kitware/candela",
        "type": "refactor",
        "chatgpt_zeroshot": "\"Clear top-level div before constructing SVG element\""
    },
    {
        "msg": "refactor(SimilarityGraph): use the correct bounding box function",
        "diff": "diff --git a/components/SimilarityGraph/index.js b/components/SimilarityGraph/index.js @@ -29,7 +29,7 @@ export default class SimilarityGraph extends VisComponent {\n// Get the width and height of the SVG element. This is necessary here in\n// case non-pixel measures like '100%' were passed to the component.\n- const bbox = this.svg.getBBox();\n+ const bbox = this.svg.getBoundingClientRect();\nconst w = bbox.width;\nconst h = bbox.height;\n",
        "date": "25.04.2017 16:53:24",
        "repo": "kitware/candela",
        "type": "refactor",
        "chatgpt_zeroshot": "Update method to get bounding box dimensions using getBoundingClientRect() instead of getBBox()"
    },
    {
        "msg": "refactor(SimilarityGraph): update to use d3 v4",
        "diff": "diff --git a/components/SimilarityGraph/index.js b/components/SimilarityGraph/index.js import VisComponent from '../../VisComponent';\n-import d3 from 'd3';\n+import * as d3 from 'd3';\nimport cola from 'webcola';\nexport default class SimilarityGraph extends VisComponent {\n@@ -36,7 +36,8 @@ export default class SimilarityGraph extends VisComponent {\nconst h = bbox.height;\n// Initialize the cola object.\n- this.cola = cola.d3adaptor()\n+ console.log(d3);\n+ this.cola = cola.d3adaptor(d3)\n.linkDistance(linkDistance)\n.size([w, h]);\n@@ -73,11 +74,12 @@ export default class SimilarityGraph extends VisComponent {\n.selectAll('line.link')\n.data(this.links);\n- this.linkSelection.enter()\n+ this.linkSelection = this.linkSelection.enter()\n.append('line')\n.classed('link', true)\n.attr('stroke-width', 1)\n- .attr('stroke', 'gray');\n+ .attr('stroke', 'gray')\n+ .merge(this.linkSelection);\n// Create a D3 selection for the nodes, and initialize it with some circle\n// elements.\n@@ -85,14 +87,15 @@ export default class SimilarityGraph extends VisComponent {\n.selectAll('circle.node')\n.data(this.nodes);\n- this.nodeSelection.enter()\n+ this.nodeSelection = this.nodeSelection.enter()\n.append('circle')\n.classed('node', true)\n.attr('r', d => d.size)\n.style('stroke', 'black')\n.style('fill', d => d.color)\n.style('cursor', 'crosshair')\n- .call(this.cola.drag);\n+ .call(this.cola.drag)\n+ .merge(this.nodeSelection);\n// Create a D3 selection for node labels.\nthis.labelSelection = d3.select(this.svg)\n@@ -100,7 +103,7 @@ export default class SimilarityGraph extends VisComponent {\n.data(this.nodes);\nconst that = this;\n- this.labelSelection.enter()\n+ this.labelSelection = this.labelSelection.enter()\n.append('text')\n.classed('label', true)\n.text(d => d.id)\n@@ -109,7 +112,8 @@ export default class SimilarityGraph extends VisComponent {\nthat.nodes[i].height += bbox.height;\n})\n.style('cursor', 'crosshair')\n- .call(this.cola.drag);\n+ .call(this.cola.drag)\n+ .merge(this.labelSelection);\nthis.cola.on('tick', (...args) => {\nthis.nodeSelection\n",
        "date": "26.04.2017 17:47:16",
        "repo": "kitware/candela",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor code to use d3 library with webcola for graph visualization."
    },
    {
        "msg": "refactor: bring vega util function up to spec for d3 v4",
        "diff": "diff --git a/util/vega/index.js b/util/vega/index.js -import d3 from 'd3';\n+import { select } from 'd3-selection';\nimport vg from 'vega';\nimport { isArray, isString, read } from 'datalib';\nimport axisTemplate from './axis.json';\n@@ -386,7 +386,7 @@ let merge = function (defaults, options) {\nlet parseChart = function (spec, element, options) {\n// Use element size to set size, unless size explicitly specified or\n// element size is zero.\n- let el = d3.select(element)[0][0];\n+ let el = select(element).node();\nlet sizeOptions = {};\nconst size = getElementSize(el);\n",
        "date": "26.04.2017 18:07:42",
        "repo": "kitware/candela",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor code to use d3-selection for element selection"
    },
    {
        "msg": "refactor(TreeHeatmap): Upgrade to D3 version 4",
        "diff": "diff --git a/components/TreeHeatmap/index.js b/components/TreeHeatmap/index.js import VisComponent from '../../VisComponent';\n-import d3 from 'd3';\n+import * as d3 from 'd3';\nimport { getElementSize } from '../../util';\nexport default class TreeHeatmap extends VisComponent {\n@@ -258,8 +258,8 @@ export default class TreeHeatmap extends VisComponent {\nlet distance = d => d.distance;\n- let xScale = d3.scale.linear().domain([0, content[0].length]).range([xStart, xStart + colSize]);\n- let yScale = d3.scale.linear().domain([0, content.length]).range([yStart, yStart + rowSize]);\n+ let xScale = d3.scaleLinear().domain([0, content[0].length]).range([xStart, xStart + colSize]);\n+ let yScale = d3.scaleLinear().domain([0, content.length]).range([yStart, yStart + rowSize]);\nlet tree = function (orientation, links, leaves, x, y, width, height, duration) {\nlet numLeaves = leaves.length;\n@@ -292,8 +292,8 @@ export default class TreeHeatmap extends VisComponent {\n}\n}\nlet distanceExtent = [0, distance(finalCluster)];\n- let distanceScale = d3.scale.linear().domain(distanceExtent).range([y + height, y]);\n- let treeScale = d3.scale.linear().domain([0, numLeaves]).range([x, x + width]);\n+ let distanceScale = d3.scaleLinear().domain(distanceExtent).range([y + height, y]);\n+ let treeScale = d3.scaleLinear().domain([0, numLeaves]).range([x, x + width]);\nlet axis1 = 'y';\nlet axis2 = 'x';\nif (orientation === 'vertical') {\n@@ -321,7 +321,7 @@ export default class TreeHeatmap extends VisComponent {\nlet reverseLinks = links.slice().reverse();\n- let line = d3.svg.line();\n+ let line = d3.line();\nif (orientation === 'horizontal') {\nline.x(d => d[1]).y(d => d[0]);\n}\n@@ -414,19 +414,19 @@ export default class TreeHeatmap extends VisComponent {\nlet colColor = [];\nfor (let col = 0; col < content[0].length; col += 1) {\n- colColor[columns[col].offset] = d3.scale.linear().domain(d3.extent(content, d => d[col])).range(['white', 'steelblue']);\n+ colColor[columns[col].offset] = d3.scaleLinear().domain(d3.extent(content, d => d[col])).range(['white', 'steelblue']);\n}\nlet rowColor = [];\nfor (let row = 0; row < content.length; row += 1) {\n- rowColor[rows[row].offset] = d3.scale.linear().domain(d3.extent(content[row])).range(['white', 'steelblue']);\n+ rowColor[rows[row].offset] = d3.scaleLinear().domain(d3.extent(content[row])).range(['white', 'steelblue']);\n}\nlet globalMin = d3.min(content, d => d3.min(d));\nlet globalMax = d3.max(content, d => d3.max(d));\n- let globalColor = d3.scale.linear().domain([globalMin, globalMax]).range(['white', 'steelblue']);\n+ let globalColor = d3.scaleLinear().domain([globalMin, globalMax]).range(['white', 'steelblue']);\n- let corrColor = d3.scale.linear().domain([-1, 0, 1]).range(['red', 'white', 'green']);\n+ let corrColor = d3.scaleLinear().domain([-1, 0, 1]).range(['red', 'white', 'green']);\nlet color = d => globalColor(d.value);\nif (this.scale === 'row') {\n",
        "date": "03.05.2017 10:03:05",
        "repo": "kitware/candela",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor d3 imports and scale functions in TreeHeatmap component"
    },
    {
        "msg": "refactor(TreeHeatmap): Update to new showComponent API",
        "diff": "diff --git a/app/examples/tree-heatmap/index.js b/app/examples/tree-heatmap/index.js @@ -3,7 +3,8 @@ import showComponent from '../util/showComponent';\nimport TreeHeatmap from '../../../components/TreeHeatmap';\nwindow.onload = () => {\n- showComponent(TreeHeatmap, 'div', {\n- data: heatmap\n+ showComponent(TreeHeatmap, {\n+ data: heatmap,\n+ scale: 'column'\n});\n};\n",
        "date": "03.05.2017 12:03:43",
        "repo": "kitware/candela",
        "type": "refactor",
        "chatgpt_zeroshot": "Update TreeHeatmap component to include column scale option"
    },
    {
        "msg": "refactor(SentenTree): add options spec",
        "diff": "diff --git a/components/SentenTree/index.js b/components/SentenTree/index.js @@ -3,6 +3,46 @@ import { SentenTreeBuilder,\nSentenTreeVis } from 'sententree/dist/SentenTree';\nexport default class SentenTree extends VisComponent {\n+ static get options () {\n+ return [\n+ {\n+ name: 'data',\n+ description: 'The data table.',\n+ type: 'table',\n+ format: 'objectlist'\n+ },\n+ {\n+ name: 'id',\n+ description: 'The field containing the identifier of each row.',\n+ type: 'string',\n+ domain: {\n+ mode: 'field',\n+ from: 'data',\n+ fieldTypes: ['string', 'integer', 'number']\n+ }\n+ },\n+ {\n+ name: 'text',\n+ description: 'The field containing the text sample.',\n+ domain: {\n+ mode: 'field',\n+ from: 'data',\n+ fieldTypes: ['string']\n+ }\n+ },\n+ {\n+ name: 'count',\n+ description: 'The field containing the count for each text sample.',\n+ type: 'string',\n+ domain: {\n+ mode: 'field',\n+ from: 'data',\n+ fieldTypes: ['integer']\n+ }\n+ }\n+ ];\n+ }\n+\nconstructor (el, {data, graphs = 3}) {\nsuper(el);\n",
        "date": "28.04.2017 18:21:50",
        "repo": "kitware/candela",
        "type": "refactor",
        "chatgpt_zeroshot": "Add options to SentenTree component for data table configuration."
    },
    {
        "msg": "refactor(SentenTree): empty top-level element",
        "diff": "diff --git a/components/SentenTree/index.js b/components/SentenTree/index.js +import { select } from 'd3-selection';\n+\nimport VisComponent from '../../VisComponent';\nimport { SentenTreeBuilder,\nSentenTreeVis } from 'sententree/dist/SentenTree';\n@@ -53,6 +55,11 @@ export default class SentenTree extends VisComponent {\nconstructor (el, {data, id = null, text = 'text', count = 'count', graphs = 3}) {\nsuper(el);\n+ // Empty element.\n+ select(el)\n+ .selectAll('*')\n+ .remove();\n+\n// Transform input data into correct form.\nthis.data = data.map((d, i) => ({\nid: id ? d[id] : i,\n",
        "date": "04.05.2017 10:13:15",
        "repo": "kitware/candela",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor SentenTree component to remove existing elements before rendering."
    },
    {
        "msg": "refactor(SentenTree): add missing type field",
        "diff": "diff --git a/components/SentenTree/index.js b/components/SentenTree/index.js @@ -26,6 +26,7 @@ export default class SentenTree extends VisComponent {\n{\nname: 'text',\ndescription: 'The field containing the text sample.',\n+ type: 'string',\ndomain: {\nmode: 'field',\nfrom: 'data',\n",
        "date": "04.05.2017 10:42:57",
        "repo": "kitware/candela",
        "type": "refactor",
        "chatgpt_zeroshot": "Add type 'string' to the 'text' field in SentenTree component."
    },
    {
        "msg": "refactor(TreeHeatmap): Revert casts (+ is more efficient)",
        "diff": "diff --git a/components/TreeHeatmap/index.js b/components/TreeHeatmap/index.js @@ -136,7 +136,7 @@ export default class TreeHeatmap extends VisComponent {\nlet rows = [];\nlet reachedMetadata = false;\nthis.data.forEach(row => {\n- let id = String(row[idColumn]);\n+ let id = '' + row[idColumn];\nif (id === '_child1') {\nreachedMetadata = true;\n}\n@@ -159,7 +159,7 @@ export default class TreeHeatmap extends VisComponent {\nlet originalDataRows = {};\nreachedMetadata = false;\nthis.data.forEach(row => {\n- let id = String(row[idColumn]);\n+ let id = '' + row[idColumn];\nif (id === '_child1') {\nreachedMetadata = true;\n}\n@@ -170,14 +170,14 @@ export default class TreeHeatmap extends VisComponent {\noriginalDataRows[id] = row;\nreturn;\n}\n- content.push(columns.map(col => Number(row[col.name])));\n- if (clusterRows && Number(row._cluster) >= 0) {\n+ content.push(columns.map(col => +row[col.name]));\n+ if (clusterRows && +row._cluster >= 0) {\nrowLinks.push({\n- cluster: Number(row._cluster),\n- child1: Number(row._child1),\n- child2: Number(row._child2),\n- distance: Number(row._distance),\n- size: Number(row._size)\n+ cluster: +row._cluster,\n+ child1: +row._child1,\n+ child2: +row._child2,\n+ distance: +row._distance,\n+ size: +row._size\n});\n}\n});\n@@ -185,13 +185,13 @@ export default class TreeHeatmap extends VisComponent {\nlet colLinks = [];\nif (clusterColumns) {\ncolumns.forEach(col => {\n- if (metadataRows._cluster && Number(metadataRows._cluster[col.name]) >= 0) {\n+ if (metadataRows._cluster && +metadataRows._cluster[col.name] >= 0) {\ncolLinks.push({\n- cluster: Number(metadataRows._cluster[col.name]),\n- child1: Number(metadataRows._child1[col.name]),\n- child2: Number(metadataRows._child2[col.name]),\n- distance: Number(metadataRows._distance[col.name]),\n- size: Number(metadataRows._size[col.name])\n+ cluster: +metadataRows._cluster[col.name],\n+ child1: +metadataRows._child1[col.name],\n+ child2: +metadataRows._child2[col.name],\n+ distance: +metadataRows._distance[col.name],\n+ size: +metadataRows._size[col.name]\n});\n}\n});\n",
        "date": "17.05.2017 11:13:02",
        "repo": "kitware/candela",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor code to use unary plus operator for type conversion in TreeHeatmap component"
    },
    {
        "msg": "refactor: remove all components from candela.components\nNow, the microlibraries will be used to popular candela.components\none-by-one as needed by a particular client application.",
        "diff": "diff --git a/components/index.js b/components/index.js -import BarChart from './BarChart';\n-import BoxPlot from './BoxPlot';\n-import BulletChart from './BulletChart';\n-import GanttChart from './GanttChart';\n-import Geo from './Geo';\n-import GeoDots from './GeoDots';\n-import Glo from './Glo';\n-import Heatmap from './Heatmap';\n-import Histogram from './Histogram';\n-import LineChart from './LineChart';\n-import LineUp from './LineUp';\n-import OnSet from './OnSet';\n-import ScatterPlot from './ScatterPlot';\n-import ScatterPlotMatrix from './ScatterPlotMatrix';\n-import SentenTree from './SentenTree';\n-import SimilarityGraph from './SimilarityGraph';\n-import SurvivalPlot from './SurvivalPlot';\n-import TrackerDash from './TrackerDash';\n-import TreeHeatmap from './TreeHeatmap';\n-import UpSet from './UpSet';\n-\n-export default {\n- BarChart,\n- BoxPlot,\n- BulletChart,\n- GanttChart,\n- Geo,\n- GeoDots,\n- Glo,\n- Heatmap,\n- Histogram,\n- LineChart,\n- LineUp,\n- OnSet,\n- ScatterPlot,\n- ScatterPlotMatrix,\n- SentenTree,\n- SimilarityGraph,\n- SurvivalPlot,\n- TrackerDash,\n- TreeHeatmap,\n- UpSet\n-};\n+export default {};\n",
        "date": "29.05.2017 18:33:12",
        "repo": "kitware/candela",
        "type": "refactor",
        "chatgpt_zeroshot": "Remove all components from index.js"
    },
    {
        "msg": "refactor(examples): build examples in top-level build directory",
        "diff": "diff --git a/examples/webpack.config.js b/examples/webpack.config.js @@ -29,7 +29,7 @@ var htmlPlugins = examples.map(function (ex) {\nmodule.exports = candelaLoaders({\nentry: entry,\noutput: {\n- path: 'build',\n+ path: '../build/examples',\nfilename: '[name]/index.js'\n},\nplugins: htmlPlugins.concat([\n",
        "date": "02.06.2017 11:48:11",
        "repo": "kitware/candela",
        "type": "refactor",
        "chatgpt_zeroshot": "Update output path in webpack config to build examples in a separate directory"
    },
    {
        "msg": "refactor(BoxPlot): embed encoding values into main spec",
        "diff": "diff --git a/packages/vega/src/component/BoxPlot/index.js b/packages/vega/src/component/BoxPlot/index.js @@ -83,29 +83,27 @@ export default class BoxPlot extends VegaView(VisComponent) {\n},\nwidth: this.getWidth(200),\nheight: this.getHeight(200),\n- mark: 'box-plot'\n- };\n-\n- spec.encoding.y = {\n+ mark: 'box-plot',\n+ encoding: {\n+ y: {\nfield: '__value',\ntype: 'quantitative',\naxis: {title: ''}\n- };\n-\n- spec.encoding.column = {\n+ },\n+ column: {\nfield: '__field',\ntype: 'nominal',\nheader: {title: ''}\n- };\n-\n- spec.encoding.x = {\n+ },\n+ x: {\nfield: this.options.x || '',\ntype: this.options.xType || 'nominal'\n- };\n-\n- spec.encoding.color = {\n+ },\n+ color: {\nfield: this.options.color || '',\ntype: this.options.colorType || 'nominal'\n+ }\n+ }\n};\nreturn spec;\n",
        "date": "04.06.2018 12:03:59",
        "repo": "kitware/candela",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor BoxPlot component to update encoding properties"
    },
    {
        "msg": "refactor(PreactConfig): Keep ESLint happy",
        "diff": "diff --git a/src/lib/webpack-config.js b/src/lib/webpack-config.js @@ -24,7 +24,6 @@ import ProgressBarPlugin from 'progress-bar-webpack-plugin';\nimport CopyWebpackPlugin from 'copy-webpack-plugin';\nimport ReplacePlugin from 'replace-bundle-webpack-plugin';\nimport SWPrecacheWebpackPlugin from 'sw-precache-webpack-plugin';\n-import createBabelConfig from './babel-config';\nimport prerender from './prerender';\nimport PushManifestPlugin from './push-manifest';\n",
        "date": "29.05.2017 15:45:31",
        "repo": "preactjs/preact-cli",
        "type": "refactor",
        "chatgpt_zeroshot": "Remove createBabelConfig import from webpack-config"
    },
    {
        "msg": "refactor: Merge commit refactor",
        "diff": "diff --git a/src/lib/run-webpack.js b/src/lib/run-webpack.js @@ -23,7 +23,7 @@ export default (watch=false, config, onprogress) => new Promise( (resolve, rejec\nif (first) {\nfirst = false;\nlet devServer = config.devServer;\n- let serverAddr = `${devServer.https===true?'https':'http'}://${process.env.HOST || devServer.host || 'localhost'}:${process.env.PORT || devServer.port || 8080}`;\n+ let serverAddr = `${devServer.https?'https':'http'}://${process.env.HOST || devServer.host || 'localhost'}:${process.env.PORT || devServer.port || 8080}`;\nprocess.stdout.write(` \\u001b[32m> Development server started at ${serverAddr}\\u001b[39m\\n`);\n}\nif (onprogress) onprogress(stats);\n",
        "date": "01.06.2017 15:12:34",
        "repo": "preactjs/preact-cli",
        "type": "refactor",
        "chatgpt_zeroshot": "Fix serverAddr logic in run-webpack.js"
    },
    {
        "msg": "refactor: Preact CLI tests",
        "diff": "diff --git a/src/commands/create.js b/src/commands/create.js @@ -115,9 +115,9 @@ export default asyncCommand({\nawait fs.writeFile(path.resolve(target, 'package.json'), JSON.stringify(pkg, null, 2));\n+ if (argv.install) {\nspinner.text = 'Installing dev dependencies';\n- if (argv.install) {\nawait npm(target, [\n'install', '--save-dev',\n'preact-cli',\n@@ -146,9 +146,9 @@ export default asyncCommand({\n'preact-compat',\n'preact-router'\n]);\n- }\nspinner.succeed('Done!\\n');\n+ }\nreturn `\nTo get started, cd into the new directory:\n",
        "date": "12.06.2017 17:23:18",
        "repo": "preactjs/preact-cli",
        "type": "refactor",
        "chatgpt_zeroshot": "Add conditional check for installing dev dependencies"
    },
    {
        "msg": "refactor: Proxy Loader",
        "diff": "diff --git a/src/lib/webpack/proxy-loader.js b/src/lib/webpack/proxy-loader.js @@ -4,14 +4,15 @@ var requireRelative = require('require-relative');\nfunction proxyLader(source, map) {\nvar options = utils.getOptions(this);\n- // First loader run store passed options & remove proxy-loader specific\n+ // First run proxy-loader run\nif (!this.query.__proxy_loader__) {\n+ // Store passed options for future calls to proxy-loader with same loaderContext (this)\n+ // e.g. calls via 'this.addDependency' from actual loader\nthis.query.__proxy_loader__ = { loader: options.loader, cwd: options.cwd };\n- // remove proxy-loader options and make this.query act as requested loader query\n- swapOptions(this, options);\n+ // Remove proxy-loader options and make this.query act as requested loader query\n+ swapOptions(this, options.options);\n}\n- // Save it for future calls that use this loader (via this.addDependency)\nvar proxyOptions = this.query.__proxy_loader__;\nvar loader;\n@@ -21,22 +22,24 @@ function proxyLader(source, map) {\nloader = require(proxyOptions.loader);\n}\n- // run loader\n- return loader.bind(this)(source, map);\n+ // Run actual loader\n+ return loader.call(this, source, map);\n}\nfunction swapOptions(loaderContext, newOptions) {\nvar copy = {};\nvar key = '';\n- for (key in loaderContext.options) {\n+ for (key in newOptions) {\ncopy[key] = newOptions[key];\n}\n+ // Delete all existing loader options\ndelete loaderContext.query.options;\ndelete loaderContext.query.loader;\ndelete loaderContext.query.cwd;\n+ // Add new options\nfor (key in copy) {\nloaderContext.query[key] = copy[key];\n}\n",
        "date": "18.07.2017 08:07:20",
        "repo": "preactjs/preact-cli",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor proxy-loader to store and use passed options efficiently"
    },
    {
        "msg": "refactor: Better tmp dir generation",
        "diff": "diff --git a/packages/cli/src/lib/webpack/render-html-plugin.js b/packages/cli/src/lib/webpack/render-html-plugin.js const { resolve, join } = require('path');\nconst os = require('os');\n-const { existsSync, readFileSync, writeFileSync, mkdirSync } = require('fs');\n+const { existsSync, mkdtempSync, readFileSync, writeFileSync } = require('fs');\nconst HtmlWebpackExcludeAssetsPlugin = require('html-webpack-exclude-assets-plugin');\nconst HtmlWebpackPlugin = require('html-webpack-plugin');\nconst prerender = require('./prerender');\n@@ -45,13 +45,7 @@ module.exports = async function (config) {\n// Unfortunately html-webpack-plugin expects a true file,\n// so we'll create a temporary one.\n- const tmpDir = join(\n- os.tmpdir(),\n- `preact-cli-${Math.floor(Math.random() * 100000)}`\n- );\n- if (!existsSync(tmpDir)) {\n- mkdirSync(tmpDir);\n- }\n+ const tmpDir = mkdtempSync(join(os.tmpdir(), 'preact-cli-'));\ntemplate = resolve(tmpDir, 'template.tmp.ejs');\nwriteFileSync(template, content);\n}\n",
        "date": "07.01.2023 21:35:40",
        "repo": "preactjs/preact-cli",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor render-html-plugin to use mkdtempSync for creating temporary directory"
    },
    {
        "msg": "refactor: refactor assertString fn",
        "diff": "diff --git a/src/lib/util/assertString.js b/src/lib/util/assertString.js export default function assertString(input) {\n- const isString = (typeof input === 'string' || input instanceof String);\n+ const isString = typeof input === 'string' || input instanceof String;\nif (!isString) {\n- let invalidType;\n- if (input === null) {\n- invalidType = 'null';\n- } else {\n- invalidType = typeof input;\n- if (invalidType === 'object' && input.constructor && input.constructor.hasOwnProperty('name')) {\n- invalidType = input.constructor.name;\n- } else {\n- invalidType = `a ${invalidType}`;\n- }\n- }\n- throw new TypeError(`Expected string but received ${invalidType}.`);\n+ let invalidType = typeof input;\n+ if (input === null) invalidType = 'null';\n+ else if (invalidType === 'object') invalidType = input.constructor.name;\n+\n+ throw new TypeError(`Expected a string but received a ${invalidType}`);\n}\n}\n",
        "date": "16.11.2020 04:04:44",
        "repo": "validatorjs/validator.js",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor assertString function to simplify type checking and error message generation"
    },
    {
        "msg": "refactor(isIP): removed redundant check for IPv4 addresses\nrefactor(isIP): removed redundant !!\nCloses",
        "diff": "diff --git a/src/lib/isIP.js b/src/lib/isIP.js @@ -51,14 +51,10 @@ export default function isIP(str, version = '') {\nreturn isIP(str, 4) || isIP(str, 6);\n}\nif (version === '4') {\n- if (!IPv4AddressRegExp.test(str)) {\n- return false;\n- }\n- const parts = str.split('.').sort((a, b) => a - b);\n- return parts[3] <= 255;\n+ return IPv4AddressRegExp.test(str);\n}\nif (version === '6') {\n- return !!IPv6AddressRegExp.test(str);\n+ return IPv6AddressRegExp.test(str);\n}\nreturn false;\n}\n",
        "date": "17.05.2022 05:35:50",
        "repo": "validatorjs/validator.js",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor isIP function to simplify IPv4 validation."
    },
    {
        "msg": "refactor(webpack_config/config): compute main app pathes in config.js file, add banner text to config",
        "diff": "diff --git a/webpack_config/config.js b/webpack_config/config.js 'use strict'\nconst path = require('path')\n+const rootPath = path.join(__dirname, '../') // = \"/\"\n+const distPath = path.join(rootPath, './dist') // = \"/dist\"\n+const srcPath = path.join(rootPath, './src') // = \"/src\"\n+const srcCommonPath = path.join(srcPath, './common') // = \"/src/common\"\nmodule.exports = {\nport: process.env.PORT || 3000,\ntitle: 'React-Semantic.UI-Starter',\npublicPath: '/',\n- srcPath: path.join(__dirname, '../src'),\n- srcCommonPath: path.join(__dirname, '../src/common'),\n- distPath: path.join(__dirname, '../dist'),\n- // your app's manifest.json\n+ // It's better to define pathes in one file\n+ // and then use everywhere across app\n+ srcPath,\n+ srcCommonPath,\n+ distPath,\n+ rootPath,\n+ // base places where server and client both search for modules\n+ modules: [],\n+ // aliases that both server and client use\n+ alias: {\n+ actions: `${srcCommonPath}/actions/`,\n+ api: `${srcCommonPath}/api/`,\n+ components: `${srcCommonPath}/components/`,\n+ containers: `${srcCommonPath}/containers/`,\n+ reducers: `${srcCommonPath}/reducers/`,\n+ routing: `${srcCommonPath}/routing/`,\n+ styles: `${srcCommonPath}/styles/`,\n+ static: `${rootPath}/static`,\n+ images: `${rootPath}/static/images`\n+ },\n+ // text for WebpackBannerPlugin,\n+ // this plugin just adds text banner to the beginning of your file\n+ banner: 'MIT License. Copyright (c) 2017 Vladimir Metnew All Rights Reserved. Repo: https://github.com/Metnew/react-semantic.ui-starter',\n+ // your manifest.json\nmanifest: {\nname: 'React-Semantic.UI-Starter',\nshort_name: 'RSUIS',\ndescription: 'https://github.com/Metnew/react-semantic.ui-starter',\nicons: [\n{\n- \"src\": \"icons/android-chrome-36x36.png\",\n- \"sizes\": \"36x36\",\n- \"type\": \"image/png\"\n+ src: 'icons/android-chrome-36x36.png',\n+ sizes: '36x36',\n+ type: 'image/png'\n},\n{\n- \"src\": \"icons/android-chrome-48x48.png\",\n- \"sizes\": \"48x48\",\n- \"type\": \"image/png\"\n+ src: 'icons/android-chrome-48x48.png',\n+ sizes: '48x48',\n+ type: 'image/png'\n},\n{\n- \"src\": \"icons/android-chrome-72x72.png\",\n- \"sizes\": \"72x72\",\n- \"type\": \"image/png\"\n+ src: 'icons/android-chrome-72x72.png',\n+ sizes: '72x72',\n+ type: 'image/png'\n},\n{\n- \"src\": \"icons/android-chrome-96x96.png\",\n- \"sizes\": \"96x96\",\n- \"type\": \"image/png\"\n+ src: 'icons/android-chrome-96x96.png',\n+ sizes: '96x96',\n+ type: 'image/png'\n},\n{\n- \"src\": \"icons/android-chrome-144x144.png\",\n- \"sizes\": \"144x144\",\n- \"type\": \"image/png\"\n+ src: 'icons/android-chrome-144x144.png',\n+ sizes: '144x144',\n+ type: 'image/png'\n},\n{\n- \"src\": \"icons/android-chrome-192x192.png\",\n- \"sizes\": \"192x192\",\n- \"type\": \"image/png\"\n+ src: 'icons/android-chrome-192x192.png',\n+ sizes: '192x192',\n+ type: 'image/png'\n},\n{\n- \"src\": \"icons/android-chrome-256x256.png\",\n- \"sizes\": \"256x256\",\n- \"type\": \"image/png\"\n+ src: 'icons/android-chrome-256x256.png',\n+ sizes: '256x256',\n+ type: 'image/png'\n},\n{\n- \"src\": \"icons/android-chrome-384x384.png\",\n- \"sizes\": \"384x384\",\n- \"type\": \"image/png\"\n+ src: 'icons/android-chrome-384x384.png',\n+ sizes: '384x384',\n+ type: 'image/png'\n},\n{\n- \"src\": \"icons/android-chrome-512x512.png\",\n- \"sizes\": \"512x512\",\n- \"type\": \"image/png\"\n+ src: 'icons/android-chrome-512x512.png',\n+ sizes: '512x512',\n+ type: 'image/png'\n}\n],\nstart_url: '.',\n",
        "date": "04.08.2017 14:01:01",
        "repo": "metnew/suicrux",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor webpack config to define paths and aliases centrally"
    },
    {
        "msg": "refactor(webpack_config/config): fix import path for client webpack.base, some style fixes",
        "diff": "diff --git a/webpack_config/server.js b/webpack_config/server.js @@ -3,15 +3,14 @@ const path = require('path')\nconst express = require('express')\nconst httpProxy = require('http-proxy')\nconst webpack = require('webpack')\n-const webpackConfig = require('./webpack.dev')\n+const webpackConfig = require('./client/webpack.dev')\nconst config = require('./config')\nconst LogPlugin = require('./log-plugin')\nconst open = require('open')\n-const app = express()\nconst apiProxy = httpProxy.createProxyServer()\n-\n-const port = config.port\n+const app = express()\n+const {port} = config\nwebpackConfig.entry.client = [\n'react-hot-loader/patch',\n'webpack-hot-middleware/client?reload=true',\n@@ -31,6 +30,7 @@ try {\nconst devMiddleWare = require('webpack-dev-middleware')(compiler, {\npublicPath: webpackConfig.output.publicPath,\n+ // @Metnew: personally I prefer `quite: \"true\"`\nquiet: false,\nhot: true,\ninline: true,\n@@ -60,9 +60,13 @@ app.get('*', (req, res) => {\n})\n})\n-// Proxy api requests\n+// Proxy api requests to BASE_API\napp.use(process.env.BASE_API, function (req, res) {\n- req.url = req.baseUrl\n+ /**\n+ * // req.baseUrl - The URL path on which a router instance was mounted.\n+ * {@link https://expressjs.com/ru/4x/api.html#req.baseUrl}\n+ */\n+ req.url = req.baseUrl + req.url\napiProxy.web(req, res, {\ntarget: {\nport: 4000,\n",
        "date": "04.08.2017 14:01:46",
        "repo": "metnew/suicrux",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor webpack configuration and update proxy API request handling"
    },
    {
        "msg": "refactor(webpack_config/config): read index.html file for SSR using DIST_PATH env variable, some style fixes, fix SSR of Root component",
        "diff": "diff --git a/src/server/ssr/index.js b/src/server/ssr/index.js import path from 'path'\nimport fs from 'fs'\n+import chalk from 'chalk'\n// React-related stuff\nimport React from 'react'\nimport {render} from 'rapscallion'\n-import Helmet from 'react-helmet'\n-import {StaticRouter} from 'react-router'\n+// import Helmet from 'react-helmet'\nimport {ServerStyleSheet, StyleSheetManager} from 'styled-components'\n// Application\n-// Do you remember that we use webpack aliases provided by cool babel plugin?\n-// (take a look at .babelrc)\nimport {configureStore, configureRootComponent} from 'common/index'\n-//\n-const language = process.env.APP_LANGUAGE || 'en'\n-const distPath = `../../../dist/${language}`\n-// read index.html and assign a variable\n-const indexPath = path.join(__dirname, `${distPath}/index.html`)\n-const indexHTMLFileContent = (function () {\n+// read index.html and assign to a variable\n+const indexPath = path.join(`${process.env.DIST_PATH}/index.html`)\n+const htmlFile = (function () {\ntry {\nreturn fs.readFileSync(indexPath, 'utf8')\n} catch (e) {\n- throw new Error(`Are you sure you have already built app? ${e}`)\n+ console.error(chalk.bgRed(`Are you sure you have already built app? ${e}`))\n+ console.log(chalk.bgCyan('Application is working without SSR'))\n+ return false\n}\n})()\n-\nexport default function (req, res) {\n+ if (!htmlFile) {\n+ // NOTE: @Metnew (29.07.2017): Here must be a requirement of ejs/jade template\n+ // app probably needs in template engine!\n+ const warning = `\n+ <h1>Do you remember that you don't have SSR?</h1>\n+ <h2>Why it happens?</h2>\n+ <h3>Probably, because of:</h3>\n+ <h4>\n+ <ul>\n+ <li>No \"index.html\" in the dist folder. e.g.: You don't have already built app.</li>\n+ <li>Path to dist folder with client app is invalid, check process.env.DIST_PATH in \"webpack_config/server/webpack.base.\"</li>\n+ <pre>process.env.path === ${process.env.DIST_PATH}</pre>\n+ <pre>URL: ${req.url}</pre>\n+ </ul>\n+ </h4>\n+ `\n+ return res.send(warning)\n+ }\n// Auth-related stuff\n// NOTE: check `server/express/index.js` for more info\nconst {user} = req\nconst {isLoggedIn, token} = user\n- const initialState = isLoggedIn\n- ? {me: {auth: {isLoggedIn, token}}}\n- : {}\n+ const initialState = isLoggedIn ? {me: {auth: {isLoggedIn, token}}} : {}\n//\nconst sheet = new ServerStyleSheet()\n+ const location = req.url\nconst context = {}\nconst store = configureStore(initialState)\n- const RootComponent = configureRootComponent(store)\n+ const RootComponent = configureRootComponent({\n+ store,\n+ SSR: {location, context}\n+ })\nconst App = (\n<StyleSheetManager sheet={sheet.instance}>\n- <StaticRouter url={req.url} context={context}>\n{RootComponent}\n- </StaticRouter>\n</StyleSheetManager>\n)\n//\n@@ -54,7 +68,7 @@ export default function(req, res) {\nfunction renderFullPage ({html, css, preloadedState}) {\n// console.log(indexHTMLFileContent)\n- const indexHTMLFileContentWithRedux = indexHTMLFileContent.replace(\n+ const htmlWithRedux = htmlFile.replace(\n'<div id=\"app\"></div>',\n`<div id=\"app\">${html}</div><script>\nwindow.__PRELOADED_STATE__ = ${JSON.stringify(preloadedState).replace(\n@@ -63,9 +77,9 @@ function renderFullPage ({html, css, preloadedState}) {\n)}\n</script><span style=\"display:none;\">Server-side rendering!</span>`\n)\n- const indexHTMLFileContentWithStylesAndRedux = indexHTMLFileContentWithRedux.replace(\n+ const styledHtmlWithRedux = htmlWithRedux.replace(\n'<meta name=\"ssr-styles\"/>',\ncss\n)\n- return indexHTMLFileContentWithStylesAndRedux\n+ return styledHtmlWithRedux\n}\n",
        "date": "04.08.2017 14:02:33",
        "repo": "metnew/suicrux",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor SSR index.js file, add chalk for error handling and improve SSR warning message"
    },
    {
        "msg": "refactor(webpack_config/config): add auth middleware, style fixes, get path for serveStatic from DIST_PATH env var",
        "diff": "diff --git a/src/server/express/index.js b/src/server/express/index.js // Express-related stuff\nimport express from 'express'\n-import expressHelmet from 'helmet'\n+import helmet from 'helmet'\nimport compression from 'compression'\n-import path from 'path'\n-import fs from 'fs'\nimport cookieParser from 'cookie-parser'\nimport morgan from 'morgan'\n+import jwt from 'jsonwebtoken'\n+import chalk from 'chalk'\n// Application-related stuff\n-// Do you remember that we use webpack aliases provided by cool babel plugin in .babelrc\nimport {JWT_TOKEN} from 'common/api'\n-//\n-const language = process.env.APP_LANGUAGE || 'en'\n-const distPath = `../../../dist/${language}`\n+\nconst app = express()\n// add express stuff\n+app.use(helmet())\napp.use(compression())\napp.use(morgan('dev'))\napp.use(cookieParser())\napp.use(\n- express.static(path.join(__dirname, distPath), {\n+ express.static(process.env.DIST_PATH, {\n// don't use index.html inside /dist dir\nindex: false\n})\n)\napp.disable('x-powered-by')\n-app.use(expressHelmet())\n// Auth-related middleware, check that user is logged in and token is valid\napp.use((req, res, next) => {\n- // Of course, you can make auth with jwt or cookies or session only\n- // It's a starter project and I implemented a hardcoded solution\n+ req.user = {}\nconst token = req.cookies[JWT_TOKEN]\n- const isLoggedIn = token === 'nothing'\n- console.log(`USER IS LOGGED IN: ${isLoggedIn ? 'YES': 'NO'}`)\n+ if (!token) {\n+ return next()\n+ }\n+\n+ jwt.verify(token, process.env.JWT_SECRET, (err, decoded) => {\n+ if (err) {\n+ console.log(chalk.red('CANT DECODE JWT TOKEN!', err))\n+ } else {\nreq.user = {\n+ ...decoded,\ntoken,\n- isLoggedIn\n+ isLoggedIn: true\n}\n+ }\n+ console.log(\n+ chalk.blue(`USER IS LOGGED IN: ${req.user.isLoggedIn ? 'YES' : 'NO'}`)\n+ )\nnext()\n})\n+})\nexport default app\n",
        "date": "04.08.2017 14:03:26",
        "repo": "metnew/suicrux",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor express middleware and add JWT authentication."
    },
    {
        "msg": "refactor(src/common/routing): use BROWSER env instead of IS_SSR",
        "diff": "diff --git a/src/common/routing/index.jsx b/src/common/routing/index.jsx @@ -19,6 +19,7 @@ export const appRouting = [\nicon: 'newspaper',\nname: 'Dashboard',\nexact: true,\n+ // lazy: true,\nsidebarVisible: true,\ntag: RouteAuth,\ncomponent: Dashboard\n@@ -91,7 +92,7 @@ export const Routing = authCheck => {\nfunction getHistory () {\nconst basename = ''\n- if (process.env.IS_SSR) {\n+ if (process.env.BROWSER !== true) {\nreturn createMemoryHistory()\n}\nreturn createBrowserHistory({basename})\n",
        "date": "04.08.2017 14:05:29",
        "repo": "metnew/suicrux",
        "type": "refactor",
        "chatgpt_zeroshot": "Update routing configuration and history creation logic"
    },
    {
        "msg": "refactor(src/common/components/Sidebar): some style fixes",
        "diff": "diff --git a/src/common/components/views/Sidebar/index.jsx b/src/common/components/views/Sidebar/index.jsx @@ -33,19 +33,26 @@ export default class SidebarComponent extends Component {\nconst routes = routing.map((route, i) => {\nconst {external, path, icon, name, strict, exact} = route\n- let propsMenuItem = {\n+ // props that are applicable for both \"plain link, i.e. <a>\" and \"RR Link\"\n+ const basicProps = {\nas: external ? 'a' : NavLink,\nlink: true,\n[external ? 'href' : 'to']: path\n}\n- if (!external) {\n- propsMenuItem = {\n- ...propsMenuItem,\n+ // is it's RR Link, then it has more props\n+ const externalProps = external\n+ ? {}\n+ : {\nstrict,\nexact,\nactiveClassName: 'active'\n}\n+\n+ // summarize\n+ const propsMenuItem = {\n+ ...externalProps,\n+ ...basicProps\n}\nreturn (\n",
        "date": "04.08.2017 14:09:02",
        "repo": "metnew/suicrux",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor SidebarComponent to improve readability and maintainability"
    },
    {
        "msg": "refactor(src/common/components/Root): fix Root component SSR, add SSR props",
        "diff": "diff --git a/src/common/components/views/Root/index.jsx b/src/common/components/views/Root/index.jsx import React, {Component} from 'react'\nimport PropTypes from 'prop-types'\nimport {Provider} from 'react-redux'\n-import {ConnectedRouter as Router} from 'react-router-redux'\nimport {APPLICATION_INIT} from 'actions'\nimport {ThemeProvider} from 'styled-components'\nimport theme from 'styles/theme'\n+const Router = process.env.BROWSER === true\n+ ? require('react-router-redux').ConnectedRouter\n+ : require('react-router').StaticRouter\n+\nexport default class Root extends Component {\nstatic propTypes = {\nstore: PropTypes.object,\n+ SSR: PropTypes.object,\nhistory: PropTypes.object,\nroutes: PropTypes.func\n}\n+ static defaultProps = {\n+ SSR: {}\n+ }\n+\ncomponentWillMount () {\nconst {store} = this.props\nstore.dispatch({type: APPLICATION_INIT})\n@@ -37,11 +45,14 @@ export default class Root extends Component {\n}\nrender () {\n- const {store, history, routes} = this.props\n+ const {SSR, store, history, routes} = this.props\n+ const routerProps = process.env.BROWSER === true\n+ ? {history}\n+ : {location: SSR.location, context: SSR.context}\n// key={Math.random()} = hack for HMR from https://github.com/webpack/webpack-dev-server/issues/395\nreturn (\n<Provider store={store} key={Math.random()}>\n- <Router history={history} key={Math.random()}>\n+ <Router {...routerProps} key={Math.random()}>\n<ThemeProvider theme={theme}>\n{routes(::this.authCheck)}\n</ThemeProvider>\n",
        "date": "04.08.2017 14:09:44",
        "repo": "metnew/suicrux",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor Router component to support server-side rendering"
    },
    {
        "msg": "refactor(webpack_config/config): add i18n to config obj",
        "diff": "diff --git a/webpack_config/config.js b/webpack_config/config.js @@ -4,11 +4,12 @@ const rootPath = path.join(__dirname, '../') // = \"/\"\nconst distPath = path.join(rootPath, './dist') // = \"/dist\"\nconst srcPath = path.join(rootPath, './src') // = \"/src\"\nconst srcCommonPath = path.join(srcPath, './common') // = \"/src/common\"\n-\n+const i18n = require('../i18n')\nmodule.exports = {\nport: process.env.PORT || 3000,\ntitle: 'React-Semantic.UI-Starter',\npublicPath: '/',\n+ i18n,\n// It's better to define pathes in one file\n// and then use everywhere across app\nsrcPath,\n",
        "date": "05.08.2017 02:20:48",
        "repo": "metnew/suicrux",
        "type": "refactor",
        "chatgpt_zeroshot": "Add i18n module to webpack config"
    },
    {
        "msg": "refactor(common/components/views/Root): render App in Root, use RoutingWrapper component",
        "diff": "diff --git a/src/common/components/views/Root/index.jsx b/src/common/components/views/Root/index.jsx @@ -4,6 +4,8 @@ import {Provider} from 'react-redux'\nimport {APPLICATION_INIT} from 'actions'\nimport {ThemeProvider} from 'styled-components'\nimport theme from 'styles/theme'\n+import App from 'containers/App'\n+import RoutingWrapper from 'components/addons/RoutingWrapper'\nconst Router = process.env.BROWSER === true\n? require('react-router-redux').ConnectedRouter\n@@ -14,7 +16,7 @@ export default class Root extends Component {\nstore: PropTypes.object,\nSSR: PropTypes.object,\nhistory: PropTypes.object,\n- routes: PropTypes.func\n+ routes: PropTypes.array\n}\nstatic defaultProps = {\n@@ -54,7 +56,9 @@ export default class Root extends Component {\n<Provider store={store} key={Math.random()}>\n<Router {...routerProps} key={Math.random()}>\n<ThemeProvider theme={theme}>\n- {routes(::this.authCheck)}\n+ <App>\n+ <RoutingWrapper routes={routes} authCheck={::this.authCheck}/>\n+ </App>\n</ThemeProvider>\n</Router>\n</Provider>\n",
        "date": "05.08.2017 18:46:24",
        "repo": "metnew/suicrux",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor Root component to use App container and RoutingWrapper component for routing. Update PropTypes for routes to expect an array instead of a function."
    },
    {
        "msg": "refactor(src/common/index): fix export of routes",
        "diff": "diff --git a/src/common/index.jsx b/src/common/index.jsx @@ -6,7 +6,7 @@ import {routerMiddleware} from 'react-router-redux'\n// Application\nimport rootReducer from 'reducers'\nimport {Root} from 'components'\n-import {Routing, history} from 'routing'\n+import {routes, history} from 'routing'\n/**\n* Configure application store with middlewares.\n@@ -33,7 +33,7 @@ export const configureRootComponent = ({store, SSR}) => {\n// stupid eslint thinks that if function returns JSX, than it's a component\n// \"Eslint, I don't want a component, I want a function!\"\nconst propsRoot = {\n- routes: Routing,\n+ routes,\nhistory,\nstore,\nSSR\n",
        "date": "05.08.2017 18:46:53",
        "repo": "metnew/suicrux",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor routing import in index.jsx"
    },
    {
        "msg": "refactor(src/common/routing): remove Routing stateless component, fix exports",
        "diff": "diff --git a/src/common/routing/index.jsx b/src/common/routing/index.jsx -import React from 'react'\n-import {Route, Redirect, Switch} from 'react-router-dom'\n-import {App, Users, Dashboard, Login} from 'containers'\n-import {RouteAuth} from 'components'\n+import {Route} from 'react-router-dom'\n+import {Users, Dashboard, Login} from 'containers'\n+import {RouteAuth} from 'components/addons'\nimport {createBrowserHistory, createMemoryHistory} from 'history'\nexport const history = getHistory()\n@@ -13,13 +12,12 @@ const loadLazyComponent = url => {\n}\n}\n-export const appRouting = [\n+export const routes = [\n{\npath: '/',\n+ exact: true,\nicon: 'newspaper',\nname: 'Dashboard',\n- exact: true,\n- // lazy: true,\nsidebarVisible: true,\ntag: RouteAuth,\ncomponent: Dashboard\n@@ -53,43 +51,10 @@ export const appRouting = [\nexact: true,\nstrict: true,\ntag: RouteAuth,\n- component: loadLazyComponent('UsersItem')\n+ component: loadLazyComponent('UserItem')\n}\n]\n-/**\n- * Returns application routing with protected by AuthCheck func routes\n- * @param {Function} authCheck checks is user logged in\n- */\n-export const Routing = authCheck => {\n- // remove components that aren't application routes, (e.g. github link in sidebar)\n- const routes = appRouting.filter(\n- a => a.tag || a.component || a.lazy || !a.external\n- )\n- // render components that are inside Switch (main view)\n- const routesRendered = routes.map((a, i) => {\n- // get tag for Route.\n- // is it \"RouteAuth\" `protected route` or \"Route\"?\n- const Tag = a.tag\n- const {path, exact, strict, component, lazy} = a\n- // can visitor access this route?\n- const canAccess = authCheck\n- // select only props that we need\n- const b = {path, exact, strict, component, canAccess, lazy}\n-\n- return <Tag key={i} {...b} />\n- })\n-\n- return (\n- <App>\n- <Switch>\n- {routesRendered}\n- <Redirect to=\"/\" />\n- </Switch>\n- </App>\n- )\n-}\n-\nfunction getHistory () {\nconst basename = ''\nif (process.env.BROWSER !== true) {\n",
        "date": "05.08.2017 18:47:51",
        "repo": "metnew/suicrux",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor routing setup and component imports in index.jsx"
    },
    {
        "msg": "refactor(src/common/containers/App): fix \"routes\" variable name",
        "diff": "diff --git a/src/common/containers/App/index.jsx b/src/common/containers/App/index.jsx @@ -6,7 +6,7 @@ import {push} from 'react-router-redux'\nimport {Header, Sidebar, Footer} from 'components'\nimport {CLOSE_SIDEBAR, OPEN_SIDEBAR, WINDOW_RESIZE} from 'actions/layout'\nimport {LOGOUT_AUTH} from 'actions/auth'\n-import {appRouting} from 'routing'\n+import {routes} from 'routing'\nimport {\nPageLayout,\nMainLayout,\n@@ -117,7 +117,7 @@ class App extends Component {\n* @return {Array} array of routes that will be rendered in sidebar menu\n*/\ngetSidebarRouting () {\n- const sidebarRouting = appRouting.filter(a => a.sidebarVisible).map(a => {\n+ const sidebarRouting = routes.filter(a => a.sidebarVisible).map(a => {\nconst {path, name, icon, external, strict, exact} = a\nconst b = {path, name, icon, external, strict, exact}\nreturn b\n@@ -131,7 +131,7 @@ class App extends Component {\n* @return {String} page title\n*/\ngetPageTitle (pathname) {\n- const matchedRoutes = appRouting.filter(a => matchPath(pathname, a))\n+ const matchedRoutes = routes.filter(a => matchPath(pathname, a))\nconst currentRoute = matchedRoutes[0] || {}\nconst title = currentRoute.name || '404'\nreturn title\n",
        "date": "05.08.2017 18:48:35",
        "repo": "metnew/suicrux",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor routing variable name in App component"
    },
    {
        "msg": "refactor(wepback_config/client/webpack.prod.babel): set OfflinePlugin config to default without AppCache",
        "diff": "diff --git a/webpack_config/client/webpack.prod.babel.js b/webpack_config/client/webpack.prod.babel.js @@ -155,8 +155,6 @@ base.plugins.push(\n}\n}),\n//\n- //\n- //\n// create manifest.json\nnew ManifestPlugin({fileName: 'manifest.json', cache: config.manifest}),\n// generate <link rel=\"preload\"> tags for async chunks\n@@ -184,19 +182,8 @@ base.plugins.push(\nfilename: path.resolve(base.output.path, 'index.html'),\nchunksSortMode: 'dependency'\n}),\n- // ServiceWorkers\nnew OfflinePlugin({\n- responseStrategy: 'network-first',\n- safeToUseOptionalCaches: false,\n- caches: {\n- main: ['vendor.*.css', 'vendor.*.js']\n- },\n- // excludes: ['.htaccess'],\n- AppCache: false,\n- ServiceWorker: {\n- navigateFallbackURL: '/?offline=true',\n- events: true\n- }\n+ AppCache: false\n})\n)\n",
        "date": "06.08.2017 01:38:25",
        "repo": "metnew/suicrux",
        "type": "refactor",
        "chatgpt_zeroshot": "Remove unnecessary code and update OfflinePlugin configuration in webpack.prod.babel.js"
    },
    {
        "msg": "refactor(webpack_config/server/webpack.prod): don't drop console in production for server",
        "diff": "diff --git a/webpack_config/server/webpack.prod.babel.js b/webpack_config/server/webpack.prod.babel.js @@ -15,7 +15,7 @@ const plugins = [\ncompress: {\nwarnings: false,\n// This option removes console log in production\n- drop_console: true\n+ // drop_console: true\n},\noutput: {\ncomments: false\n",
        "date": "06.08.2017 08:44:43",
        "repo": "metnew/suicrux",
        "type": "refactor",
        "chatgpt_zeroshot": "Remove drop_console option in webpack.prod.babel.js configuration"
    },
    {
        "msg": "refactor(webpack_config/server): remove SENTRY_PUBLIC_DSN from definePlugins",
        "diff": "diff --git a/webpack_config/server/webpack.base.js b/webpack_config/server/webpack.base.js @@ -10,7 +10,6 @@ exec(`rm -rf ${config.distPath}/server`)\nconst {\nBASE_API,\nSENTRY_DSN,\n- SENTRY_PUBLIC_DSN,\nNODE_ENV,\nDIST_PATH,\nAPP_LANGUAGE,\n@@ -27,7 +26,6 @@ const definePluginArgs = {\n'process.env.APP_LANGUAGE': JSON.stringify(language),\n'process.env.NODE_ENV': JSON.stringify(NODE_ENV || 'development'),\n'process.env.BASE_API': JSON.stringify(BASE_API || '/api/v1'),\n- 'process.env.SENTRY_PUBLIC_DSN': JSON.stringify(SENTRY_PUBLIC_DSN),\n'process.env.SENTRY_DSN': JSON.stringify(SENTRY_DSN),\n'process.env.DIST_PATH': JSON.stringify(\nDIST_PATH || path.join(config.distPath, './client', language)\n",
        "date": "09.08.2017 04:29:59",
        "repo": "metnew/suicrux",
        "type": "refactor",
        "chatgpt_zeroshot": "Remove SENTRY_PUBLIC_DSN from definePluginArgs"
    },
    {
        "msg": "refactor(webpack_config/config): assign process.env with fallbacks to config.js, rewrite in es6",
        "diff": "diff --git a/webpack_config/config.js b/webpack_config/config.js * @file for config stuff that's used for webpack configuration, but isn't passed to webpack compiler\n*/\n-const path = require('path')\n+import path from 'path'\n+import i18n from '../i18n'\n+import manifest from './assets/manifest'\n+\n+function ternary (a, b) {\n+ return a ? a : b\n+}\n+\n+// Vars for both server and frontend\n+const BASE_API = ternary(process.env.BASE_API, '/api/v1')\n+const APP_LANGUAGE = ternary(process.env.APP_LANGUAGE, 'en')\n+const NODE_ENV = ternary(process.env.NODE_ENV, 'development')\n+\n+// Vars for frontend only\n+const SENTRY_DSN_PUBLIC = ternary(process.env.SENTRY_DSN_PUBLIC)\n+const GA_ID = ternary(process.env.GA_ID)\n+\n+// Paths\nconst rootPath = path.join(__dirname, '../') // = \"/\"\nconst distPath = path.join(rootPath, './dist') // = \"/dist\"\nconst srcPath = path.join(rootPath, './src') // = \"/src\"\nconst srcCommonPath = path.join(srcPath, './common') // = \"/src/common\"\n-const i18n = require('../i18n')\n-module.exports = {\n- port: process.env.PORT || 3000,\n+\n+// Vars for server only\n+const DIST_PATH = ternary(process.env.DIST_PATH, path.join(distPath, './client', APP_LANGUAGE))\n+const JWT_SECRET = ternary(process.env.JWT_SECRET, 'secret')\n+const SENTRY_DSN = ternary(process.env.SENTRY_DSN)\n+const PORT = ternary(process.env.PORT, 4000)\n+\n+\n+export default {\ntitle: 'React-Semantic.UI-Starter',\npublicPath: '/',\n+ // i18n object\ni18n,\n+ // Env vars\n+ BASE_API,\n+ APP_LANGUAGE,\n+ NODE_ENV,\n+ SENTRY_DSN_PUBLIC,\n+ GA_ID,\n+ DIST_PATH,\n+ JWT_SECRET,\n+ SENTRY_DSN,\n+ PORT,\n// It's better to define pathes in one file\n// and then use everywhere across app\nsrcPath,\nsrcCommonPath,\ndistPath,\nrootPath,\n- // base places where server and client both search for modules\n- modules: [],\n- // aliases that both server and client use\n- alias: {\n- actions: `${srcCommonPath}/actions/`,\n- api: `${srcCommonPath}/api/`,\n- components: `${srcCommonPath}/components/`,\n- containers: `${srcCommonPath}/containers/`,\n- reducers: `${srcCommonPath}/reducers/`,\n- routing: `${srcCommonPath}/routing/`,\n- styles: `${srcCommonPath}/styles/`,\n- static: `${rootPath}/static`,\n- images: `${rootPath}/static/images`\n- },\n- // text for WebpackBannerPlugin,\n- // this plugin just adds text banner to the beginning of your file\n+ // text for WebpackBannerPlugin\nbanner:\n'MIT License. Copyright (c) 2017 Vladimir Metnew All Rights Reserved. Repo: https://github.com/Metnew/react-semantic.ui-starter',\n// your manifest.json\n- manifest: {\n- name: 'React-Semantic.UI-Starter',\n- short_name: 'RSUIS',\n- description: 'https://github.com/Metnew/react-semantic.ui-starter',\n- icons: [\n- {\n- src: 'favicons/android-chrome-36x36.png',\n- sizes: '36x36',\n- type: 'image/png'\n- },\n- {\n- src: 'favicons/android-chrome-48x48.png',\n- sizes: '48x48',\n- type: 'image/png'\n- },\n- {\n- src: 'favicons/android-chrome-72x72.png',\n- sizes: '72x72',\n- type: 'image/png'\n- },\n- {\n- src: 'favicons/android-chrome-96x96.png',\n- sizes: '96x96',\n- type: 'image/png'\n- },\n- {\n- src: 'favicons/android-chrome-144x144.png',\n- sizes: '144x144',\n- type: 'image/png'\n- },\n- {\n- src: 'favicons/android-chrome-192x192.png',\n- sizes: '192x192',\n- type: 'image/png'\n- },\n- {\n- src: 'favicons/android-chrome-256x256.png',\n- sizes: '256x256',\n- type: 'image/png'\n- },\n- {\n- src: 'favicons/android-chrome-384x384.png',\n- sizes: '384x384',\n- type: 'image/png'\n- },\n- {\n- src: 'favicons/android-chrome-512x512.png',\n- sizes: '512x512',\n- type: 'image/png'\n- }\n- ],\n- start_url: '.',\n- display: 'standalone',\n- background_color: '#f7f7f7',\n- theme_color: '#009688'\n- }\n+ manifest\n}\n",
        "date": "09.08.2017 19:22:28",
        "repo": "metnew/suicrux",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor webpack config to use ES6 imports and add new variables and paths."
    },
    {
        "msg": "refactor(src/common/routing/index.jsx): make absolute export for RouteAuth",
        "diff": "diff --git a/src/common/routing/index.jsx b/src/common/routing/index.jsx import {Route} from 'react-router-dom'\nimport {Users, Dashboard, Login} from 'containers'\n-import {RouteAuth} from 'components/addons'\n+import RouteAuth from 'components/addons/RouteAuth'\nimport {createBrowserHistory, createMemoryHistory} from 'history'\nexport const history = getHistory()\n",
        "date": "10.08.2017 04:53:59",
        "repo": "metnew/suicrux",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor routing index.jsx to import RouteAuth from correct path"
    },
    {
        "msg": "refactor(src/common/api/utils/xhr_wrapper.js): some comments, fix export of localStorage stuff",
        "diff": "diff --git a/src/common/api/utils/xhr_wrapper.js b/src/common/api/utils/xhr_wrapper.js // Request utils,\n-// feel free to replace with your code\n+// Feel free to replace with your code\n// (get, post are used in ApiServices)\n-import {getLocalToken, resetLocalToken} from 'api'\n+import {getLocalToken, resetLocalToken} from 'api/LocalStorageCookiesSvc'\n-export default function requestWrapper (method) {\n+function requestWrapper (method) {\nreturn async function (url, data = null, params = {}) {\nif (method === 'GET') {\n- // Is it a GET?\n+ // It's a GET response\n// GET doesn't have data\nparams = data\ndata = null\n@@ -27,12 +27,16 @@ export default function requestWrapper (method) {\n}\n// Check that req url is relative and request was sent to our domain\n- if (url.match(/^https?:\\/\\//gi) > -1) {\n+ if (!/(http|https):\\/\\//.test(url)) {\n+ console.log(`Request ${url} was sent to our domain`)\nconst token = getLocalToken()\nif (token) {\ndefaults.headers.Authorization = `JWT ${token}`\n}\nurl = process.env.BASE_API + url\n+ } else {\n+ console.log(`Request ${url} was sent to external domain`)\n+ // Request was set to an external domain\n}\nif (data) {\n",
        "date": "10.08.2017 04:55:13",
        "repo": "metnew/suicrux",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor xhr_wrapper.js to include new LocalStorageCookiesSvc for token management"
    },
    {
        "msg": "refactor(src/common/reducers/layout/index.js): remove duplication\nDRY: Remove duplication in layout reducer",
        "diff": "diff --git a/src/common/reducers/layout/index.js b/src/common/reducers/layout/index.js @@ -22,16 +22,7 @@ export function layout (state = initialState, action) {\nreturn {isMobileSM, isMobileXS, isMobile}\n}\nswitch (action.type) {\n- // FIXME: remove this duplication\n- case APPLICATION_INIT: {\n- const {isMobile, isMobileSM, isMobileXS} = computeMobileStatuses()\n- return {\n- ...state,\n- isMobile,\n- isMobileSM,\n- isMobileXS\n- }\n- }\n+ case APPLICATION_INIT:\ncase UI_WINDOW_RESIZE: {\nconst {isMobile, isMobileSM, isMobileXS} = computeMobileStatuses()\nreturn {\n@@ -46,17 +37,12 @@ export function layout (state = initialState, action) {\n...state,\nsidebarOpened: true\n}\n+ case LOCATION_CHANGE:\ncase UI_CLOSE_SIDEBAR:\nreturn {\n...state,\nsidebarOpened: false\n}\n- case LOCATION_CHANGE: {\n- return {\n- ...state,\n- sidebarOpened: false\n- }\n- }\ndefault:\nreturn state\n}\n",
        "date": "10.08.2017 15:39:34",
        "repo": "metnew/suicrux",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor layout reducer to remove duplication and improve code readability"
    },
    {
        "msg": "refactor(webpack_config/server): add output library target, add config name, fix entry path, add com\nadd output library target, add config name, fix entry path, add commented AutoDLLPlugin\nBreaks all :)",
        "diff": "diff --git a/webpack_config/server/webpack.base.js b/webpack_config/server/webpack.base.js @@ -3,11 +3,12 @@ import fs from 'fs'\nimport webpack from 'webpack'\nimport config from '../config'\nimport isomorphicWebpackConfig from '../webpack.isomorphic'\n-import child_process from 'child_process'\n+import childProcess from 'child_process'\nimport _ from 'lodash'\n+// import AutoDllPlugin from 'autodll-webpack-plugin'\nimport I18nPlugin from 'i18n-webpack-plugin'\n-const exec = child_process.execSync\n+const exec = childProcess.execSync\nconst {\nSENTRY_DSN,\nDIST_PATH,\n@@ -39,11 +40,13 @@ fs\n})\nconst baseWebpackConfig = {\n- entry: [path.join(config.srcPath, './server/index')],\n+ name: 'server',\n+ entry: path.join(config.srcPath, './server'),\ntarget: 'node',\noutput: {\npath: path.join(config.distPath, './server', APP_LANGUAGE),\n- filename: 'index.js'\n+ filename: 'server.js',\n+ libraryTarget: 'commonjs2'\n},\nexternals: nodeModules,\nperformance: {\n@@ -92,6 +95,24 @@ const baseWebpackConfig = {\n'node-noop'\n),\nnew webpack.DefinePlugin(definePluginArgs)\n+ new AutoDllPlugin({\n+ // debug: true,\n+ // context: config.rootPath,\n+ // filename: 'server.js',\n+ // entry: {\n+ // vendor: config.vendor.concat([\n+ // 'express',\n+ // 'helmet',\n+ // 'cookie-parser',\n+ // 'body-parser',\n+ // 'jsonwebtoken',\n+ // 'morgan',\n+ // 'compression',\n+ // 'chalk'\n+ // ]),\n+ // polyfills: config.polyfills\n+ // }\n+ // })\n]),\nnode: {\n__dirname: true,\n",
        "date": "14.08.2017 17:18:48",
        "repo": "metnew/suicrux",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor webpack configuration for server build and update AutoDllPlugin configuration."
    },
    {
        "msg": "refactor(jest): remove moduleNameMapper property from config\nrefactor(jest): remove moduleNameMapper property from config, because\nwe already use module-resolver",
        "diff": "diff --git a/jest_config/jest.config.json b/jest_config/jest.config.json \"rootDir\": \"../\",\n\"setupFiles\": [\"<rootDir>/jest_config/setupJest.js\"],\n\"automock\": false,\n- \"moduleNameMapper\": {\n- \"^actions$\": \"<rootDir>/src/common/actions\",\n- \"^actions/auth$\": \"<rootDir>/src/common/actions/auth\",\n- \"^actions/common$\": \"<rootDir>/src/common/actions/common\",\n- \"^actions/layout$\": \"<rootDir>/src/common/actions/layout\",\n- \"^actions/posts$\": \"<rootDir>/src/common/actions/posts\",\n- \"^actions/users$\": \"<rootDir>/src/common/actions/users\",\n-\n- \"^api\": \"<rootDir>/src/common/api\",\n-\n- \"^reducers$\": \"<rootDir>/src/common/reducers\",\n- \"^reducers/auth$\": \"<rootDir>/src/common/reducers/auth\",\n- \"^reducers/layout$\": \"<rootDir>/src/common/reducers/layout\",\n- \"^reducers/posts$\": \"<rootDir>/src/common/reducers/posts\",\n- \"^reducers/users$\": \"<rootDir>/src/common/reducers/users\",\n-\n- \"^routing$\": \"<rootDir>/src/common/routing\",\n- \"^components$\": \"<rootDir>/src/common/components\",\n- \"^containers$\": \"<rootDir>/src/common/containers\"\n- }\n+ \"moduleNameMapper\": {}\n}\n",
        "date": "14.08.2017 23:42:02",
        "repo": "metnew/suicrux",
        "type": "refactor",
        "chatgpt_zeroshot": "Remove unnecessary moduleNameMapper configurations"
    },
    {
        "msg": "refactor(xhr_wrapper): use Object.assign instead of {...Object} syntax\nrefactor(xhr_wrapper): use Object.assign instead of {...Object} syntax,\nreturn catched error from fetch()",
        "diff": "diff --git a/src/common/api/utils/xhr_wrapper.js b/src/common/api/utils/xhr_wrapper.js @@ -43,12 +43,13 @@ export default function requestWrapper (method) {\ndefaults.body = data\n}\n- const paramsObj = {...defaults, headers: {...params, ...defaults.headers}}\n+ const paramsObj = Object.assign({}, defaults, {headers: params})\nreturn fetch(url, paramsObj)\n.then(checkStatus)\n.then(parseJSON)\n.catch(err => {\nconsole.error(err)\n+ return err\n})\n}\n}\n",
        "date": "14.08.2017 23:53:10",
        "repo": "metnew/suicrux",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor xhr_wrapper.js to use Object.assign for setting headers"
    },
    {
        "msg": "refactor(server/middleware): use `app` arg instead of `this`",
        "diff": "diff --git a/src/server/middlewares/index.js b/src/server/middlewares/index.js @@ -10,19 +10,19 @@ import chalk from 'chalk'\nimport path from 'path'\nimport authMiddleware from './auth'\n-export default function initGlobalMiddlewares () {\n+export default function initGlobalMiddlewares (app) {\nconst {DIST_PATH} = process.env\n// Add express stuff\n- this.use(helmet())\n- this.use(compression())\n- this.use(morgan('dev'))\n- this.use(cookieParser())\n- this.use(\n+ app.use(helmet())\n+ app.use(compression())\n+ app.use(morgan('dev'))\n+ app.use(cookieParser())\n+ app.use(\nexpress.static(DIST_PATH, {\n// Don't use index.html inside /dist dir\nindex: false\n})\n)\n- this.use(bodyParser.json())\n- this.use(authMiddleware)\n+ app.use(bodyParser.json())\n+ app.use(authMiddleware)\n}\n",
        "date": "15.08.2017 00:10:30",
        "repo": "metnew/suicrux",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor initGlobalMiddlewares to accept app parameter"
    },
    {
        "msg": "refactor(Login): rewrite container using func components\nrefactor(Login): rewrite container using func components",
        "diff": "diff --git a/src/common/containers/Login/index.jsx b/src/common/containers/Login/index.jsx @@ -7,17 +7,12 @@ import {getAuthState} from 'selectors'\nimport type {GlobalState} from 'reducers'\ntype Props = {\n- login: () => void,\n+ login: (data: Object) => void,\nerrors: Object\n}\n-class Login extends Component {\n- props: Props\n- render () {\n- const {login, errors} = this.props\n- const props = {login, errors}\n- return <LoginComponent {...props} />\n- }\n+const Login = ({login, errors}: Props) => {\n+ return <LoginComponent login={login} errors={errors} />\n}\nfunction mapStateToProps (state: GlobalState) {\n",
        "date": "09.09.2017 18:03:19",
        "repo": "metnew/suicrux",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor login function to accept data object as parameter"
    },
    {
        "msg": "refactor(Users): use func component instead of PureComponent\nrefactor(Users): use func component instead of PureComponent",
        "diff": "diff --git a/src/common/containers/Users/components/index.jsx b/src/common/containers/Users/components/index.jsx // @flow\n-import React, {PureComponent} from 'react'\n+import React, {Component} from 'react'\nimport PropTypes from 'prop-types'\nimport {Item, Grid} from 'semantic-ui-react'\nimport _ from 'lodash'\n@@ -12,19 +12,9 @@ type Props = {\nisUsersLoaded: boolean,\nusersCount: number\n}\n-\n-class UsersComponent extends PureComponent {\n- props: Props\n-\n- // ShouldComponentUpdate (nextProps) {\n- // const {users} = this.props\n- // const nextUsers = nextProps.users\n- // return !_.isEqual(users, nextUsers)\n- // }\n-\n- render () {\n+// <FormattedMessage\n+const UsersComponent = ({users, isUsersLoaded, usersCount}: Props) => {\n// IsUsersLoading\n- const {users, isUsersLoaded, usersCount} = this.props\nconst noUsers = isUsersLoaded && usersCount === 0\nreturn (\n@@ -41,6 +31,5 @@ class UsersComponent extends PureComponent {\n</Grid>\n)\n}\n-}\nexport default UsersComponent\n",
        "date": "10.09.2017 00:15:36",
        "repo": "metnew/suicrux",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor UsersComponent to use functional component and remove unnecessary PureComponent class."
    },
    {
        "msg": "refactor(reducers/layout): one-line UI_WINDOW_RESIZE\nrefactor(reducers/layout): one-line UI_WINDOW_RESIZE",
        "diff": "diff --git a/src/common/reducers/layout/index.js b/src/common/reducers/layout/index.js @@ -43,17 +43,10 @@ export function layout (state: State = initialState, action: Action): State {\n}\nswitch (action.type) {\ncase APPLICATION_INIT:\n- case UI_WINDOW_RESIZE: {\n- const {innerWidth} = action.payload\n- const {isMobile, isMobileSM, isMobileXS} = computeMobileStatuses(\n- innerWidth\n- )\n+ case UI_WINDOW_RESIZE:\nreturn {\n...state,\n- isMobile,\n- isMobileSM,\n- isMobileXS\n- }\n+ ...computeMobileStatuses(action.payload.innerWidth)\n}\ncase UI_OPEN_SIDEBAR:\nreturn {\n",
        "date": "10.09.2017 14:35:41",
        "repo": "metnew/suicrux",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor layout reducer to use computeMobileStatuses directly in UI_WINDOW_RESIZE case"
    },
    {
        "msg": "refactor(LazyLoad): move component loading outside of willMount\nrefactor(LazyLoad): move component loading outside of willMount",
        "diff": "diff --git a/src/common/components/addons/LazyLoad/index.jsx b/src/common/components/addons/LazyLoad/index.jsx @@ -23,15 +23,18 @@ class LazyLoad extends Component {\ncomponentToRender: null\n}\n- async componentWillMount () {\n- const {component} = this.props\n- const componentToRender = await component()\n+ async load () {\n+ const componentToRender = await this.props.component()\nthis.setState({\ncomponentLoaded: true,\ncomponentToRender: componentToRender.default\n})\n}\n+ componentWillMount () {\n+ this.load()\n+ }\n+\nrender () {\nconst {componentLoaded} = this.state\n@@ -41,6 +44,8 @@ class LazyLoad extends Component {\n: 'NO'}`\n)\n+ // console.log(this.state.componentToRender)\n+\nif (componentLoaded) {\nconst props = _.omit(this.props, ['component'])\nconst LoadedComponent = this.state.componentToRender\n",
        "date": "17.09.2017 19:37:50",
        "repo": "metnew/suicrux",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor componentWillMount to use a separate load function in LazyLoad component"
    },
    {
        "msg": "refactor: remove dead code & simplify\nThis refactoring exposes that the `autosave` and `production` settings\nin Cordova's config are actually always ignored.",
        "diff": "diff --git a/src/cli.js b/src/cli.js @@ -439,31 +439,13 @@ function cli (inputArgs) {\n});\n}\n- if (args.nosave) {\n- args.save = false;\n- } else {\n- args.save = true;\n- }\n-\n- if (args.noprod) {\n- args.production = false;\n- } else {\n- args.production = true;\n- }\n+ args.save = !args.nosave;\n+ args.production = !args.noprod;\n- if (args.save === undefined) {\n- // User explicitly did not pass in save\n- args.save = conf.get('autosave');\n- }\nif (args.searchpath === undefined) {\n// User explicitly did not pass in searchpath\nargs.searchpath = conf.get('searchpath');\n}\n- if (args.production === undefined) {\n- // User explicitly did not pass in noprod\n- args.production = conf.get('production');\n- }\n-\nif (args['save-exact'] === undefined) {\n// User explicitly did not pass in save-exact\nargs['save-exact'] = conf.get('save-exact');\n",
        "date": "11.11.2019 12:48:37",
        "repo": "apache/cordova-cli",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor save and production flag handling in cli.js"
    },
    {
        "msg": "refactor(create): do not expand ~ to $HOME anymore\nExpanding ~ is a shell feature and should not be done by us.",
        "diff": "diff --git a/src/cli.js b/src/cli.js @@ -481,10 +481,6 @@ function create ([_, dir, id, name], args) {\n);\n}\n- // Resolve tilda\n- // TODO: move to create and use sindresorhus/untildify\n- if (customWww.substr(0, 1) === '~') { customWww = path.join(process.env.HOME, customWww.substr(1)); }\n-\n// Template config\ncfg.lib = {};\ncfg.lib.www = {\n",
        "date": "11.11.2019 13:09:59",
        "repo": "apache/cordova-cli",
        "type": "refactor",
        "chatgpt_zeroshot": "Remove tilda resolution in create function"
    },
    {
        "msg": "refactor(index): headless cms -> api-first cms",
        "diff": "diff --git a/examples/pages/template/index.tpl b/examples/pages/template/index.tpl <img width=\"35px\" src=\"~examples/assets/images/tipe.svg\" alt=\"tipe.io\">\n<div>\n<p>Sponsored by Tipe.io</p>\n- <p>Next Generation Headless CMS</p>\n+ <p>Next Generation API-first CMS</p>\n</div>\n</a>\n<div class=\"cards\">\n",
        "date": "18.12.2017 11:52:44",
        "repo": "hug-sun/element3",
        "type": "refactor",
        "chatgpt_zeroshot": "Update Tipe.io sponsorship message in index.tpl"
    },
    {
        "msg": "refactor: use composition api refactoring Link",
        "diff": "diff --git a/packages/link/src/main.vue b/packages/link/src/main.vue v-bind=\"$attrs\"\n@click=\"handleClick\"\n>\n-\n<i :class=\"icon\" v-if=\"icon\"></i>\n<span v-if=\"$slots.default\" class=\"el-link--inner\">\n<slot></slot>\n</span>\n- <template v-if=\"$slots.icon\"><slot v-if=\"$slots.icon\" name=\"icon\"></slot></template>\n+ <slot v-if=\"$slots.icon\" name=\"icon\"></slot>\n</a>\n</template>\n<script>\n-\nexport default {\n- name: 'ElLink',\n+ name: \"ElLink\",\nprops: {\ntype: {\ntype: String,\n- default: 'default'\n+ default: \"default\",\n},\nunderline: {\ntype: Boolean,\n- default: true\n+ default: true,\n},\ndisabled: Boolean,\nhref: String,\n- icon: String\n+ icon: String,\n},\n- methods: {\n- handleClick(event) {\n- if (!this.disabled) {\n- if (!this.href) {\n- this.$emit('click', event);\n- }\n- }\n- }\n- }\n+ setup(props, { emit }) {\n+ const handleClick = (evt) => {\n+ if (props.disabled) return;\n+ if (props.href) return;\n+\n+ emit(\"click\", evt);\n+ };\n+\n+ return {\n+ handleClick,\n+ };\n+ },\n};\n</script>\n",
        "date": "31.07.2020 15:45:34",
        "repo": "hug-sun/element3",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor ElLink component to use Composition API and update prop default values"
    },
    {
        "msg": "refactor: remove no-used ref",
        "diff": "diff --git a/packages/alert/src/main.vue b/packages/alert/src/main.vue const {\ntitle,\ndescription,\n- type,\n- closable,\n- closeText,\n- showIcon,\n- center,\n- effect\n+ type\n} = toRefs(props)\nconst visible = ref(true)\ntitle,\ndescription,\ntype,\n- closable,\n- closeText,\n- showIcon,\n- center,\n- effect,\nvisible,\ntypeClass,\niconClass,\n",
        "date": "05.08.2020 18:25:13",
        "repo": "hug-sun/element3",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor alert component props and remove unnecessary props."
    },
    {
        "msg": "refactor: use vue3 to refactor tag component",
        "diff": "diff --git a/packages/tag/src/tag.vue b/packages/tag/src/tag.vue +\n<script>\n+import { h, computed, getCurrentInstance, Transition } from \"vue\";\nexport default {\n- name: 'ElTag',\n+ name: \"ElTag\",\nprops: {\ntext: String,\nclosable: Boolean,\nsize: String,\neffect: {\ntype: String,\n- default: 'light',\n+ default: \"light\",\nvalidator(val) {\n- return ['dark', 'light', 'plain'].indexOf(val) !== -1;\n- }\n- }\n- },\n- methods: {\n- handleClose(event) {\n- event.stopPropagation();\n- this.$emit('close', event);\n+ return [\"dark\", \"light\", \"plain\"].indexOf(val) !== -1;\n},\n- handleClick(event) {\n- this.$emit('click', event);\n- }\n},\n- computed: {\n- tagSize() {\n- return this.size || (this.$ELEMENT || {}).size;\n- }\n},\n- render(h) {\n- const { type, tagSize, hit, effect } = this;\n+ setup(props, { emit, slots }) {\n+ const {\n+ type,\n+ hit,\n+ effect,\n+ color,\n+ closable,\n+ disableTransitions,\n+ size,\n+ } = props;\n+\n+ const tagSize = computed(() => {\n+ return size || (getCurrentInstance().proxy.$ELEMENT || {}).size;\n+ });\n+ const handleClose = (event) => {\n+ event.stopPropagation();\n+ emit(\"close\", event);\n+ };\n+ const handleClick = (event) => {\n+ emit(\"click\", event);\n+ };\n+\nconst classes = [\n- 'el-tag',\n- type ? `el-tag--${type}` : '',\n- tagSize ? `el-tag--${tagSize}` : '',\n- effect ? `el-tag--${effect}` : '',\n- hit && 'is-hit'\n+ \"el-tag\",\n+ type ? `el-tag--${type}` : \"\",\n+ tagSize.value ? `el-tag--${tagSize.value}` : \"\",\n+ effect ? `el-tag--${effect}` : \"\",\n+ hit && \"is-hit\",\n];\nconst tagEl = (\n<span\nclass={classes}\n- style={{ backgroundColor: this.color }}\n- on-click={ this.handleClick }>\n- { this.$slots.default }\n- {\n- this.closable && <i class=\"el-tag__close el-icon-close\" on-click={ this.handleClose }></i>\n- }\n+ style={{ backgroundColor: color }}\n+ on-click={handleClick}\n+ >\n+ {slots.default && slots.default()}\n+ {closable && (\n+ <i class=\"el-tag__close el-icon-close\" on-click={handleClose}></i>\n+ )}\n</span>\n);\n-\n- return this.disableTransitions ? tagEl : <transition name=\"el-zoom-in-center\">{ tagEl }</transition>;\n- }\n+ return () =>\n+ disableTransitions ? (\n+ tagEl\n+ ) : (\n+ <Transition name=\"el-zoom-in-center\">{tagEl}</Transition>\n+ );\n+ },\n};\n</script>\n",
        "date": "05.08.2020 22:03:32",
        "repo": "hug-sun/element3",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor tag component to use Composition API and improve code readability"
    },
    {
        "msg": "refactor: composition-api refactor ok",
        "diff": "diff --git a/packages/input/src/use.js b/packages/input/src/use.js -import { computed, getCurrentInstance, inject, ref, unref, nextTick } from 'vue'\n+import { computed, getCurrentInstance, inject, ref, unref, nextTick, watch } from 'vue'\nimport merge from 'element-ui/src/utils/merge'\nimport { isKorean } from 'element-ui/src/utils/shared'\n@@ -21,7 +21,7 @@ export const useValidate = () => {\nreturn { validateState, validateIcon }\n}\n-export const useTextarea = (autosize, type, resize, textareaCalcStyle) => {\n+export const useTextarea = ({ autosize, type, resize, modelValue, validateEvent }, textareaCalcStyle, instance) => {\nconst textarea = ref(null)\nconst textareaStyle = computed(() => {\n@@ -46,10 +46,21 @@ export const useTextarea = (autosize, type, resize, textareaCalcStyle) => {\nmaxRows\n)\n}\n+\n+ watch(\n+ () => modelValue,\n+ (val) => {\n+ nextTick(resizeTextarea)\n+ if (unref(validateEvent)) {\n+ instance.proxy.dispatch('ElFormItem', 'el.form.change', [val])\n+ }\n+ }\n+ )\n+\nreturn { textarea, textareaStyle, resizeTextarea }\n}\n-export const useInput = (size, type, disabled, modelValue, readonly, clearable, showPassword, showWordLimit, { hovering, focused }, textarea, attrs) => {\n+export const useInput = ({ size, type, disabled, modelValue, suffixIcon, readonly, clearable, showPassword, showWordLimit }, { hovering, focused }, textarea, attrs, validateState, needStatusIcon, slots) => {\nconst input = ref(null)\nconst elFormItem = inject('elFormItem', {})\n@@ -108,7 +119,6 @@ export const useInput = (size, type, disabled, modelValue, readonly, clearable,\nunref(nativeInputValue) &&\n(unref(focused) || unref(hovering))\n)\n-\n})\nconst showPwdVisible = computed(() => {\nreturn (\n@@ -118,6 +128,16 @@ export const useInput = (size, type, disabled, modelValue, readonly, clearable,\n(!!unref(nativeInputValue) || unref(focused))\n)\n})\n+ const getSuffixVisible = () => {\n+ return (\n+ slots.suffix ||\n+ unref(suffixIcon) ||\n+ unref(showClear) ||\n+ unref(showPassword) ||\n+ unref(isWordLimitVisible) ||\n+ (unref(validateState) && unref(needStatusIcon))\n+ )\n+ }\nreturn {\ninput: input || textarea,\n@@ -129,11 +149,12 @@ export const useInput = (size, type, disabled, modelValue, readonly, clearable,\nupperLimit,\ntextLength,\nshowClear,\n- showPwdVisible\n+ showPwdVisible,\n+ getSuffixVisible\n}\n}\n-export const useInteractive = (instance, input, nativeInputValue, modelValue, { focused, isComposing, passwordVisible }, validateEvent, emit, slots) => {\n+export const useInteractive = (instance, input, { type, modelValue, validateEvent }, { focused, isComposing, passwordVisible }, nativeInputValue, emit, slots) => {\nconst focus = () => {\nunref(input).focus()\n@@ -250,6 +271,13 @@ export const useInteractive = (instance, input, nativeInputValue, modelValue, {\ncalcIconOffset('suffix')\n}\n+ watch(\n+ () => nativeInputValue,\n+ () => {\n+ setNativeInputValue()\n+ }\n+ )\n+\nreturn {\nfocus,\nblur,\n",
        "date": "07.08.2020 15:54:42",
        "repo": "hug-sun/element3",
        "type": "refactor",
        "chatgpt_zeroshot": "Add watch functionality for modelValue in useTextarea and useInput functions"
    },
    {
        "msg": "refactor: use composition api refactoring Carousel component",
        "diff": "diff --git a/packages/carousel/index.js b/packages/carousel/index.js -import Carousel from './src/main'\n+import ElCarousel from './src/main'\n/* istanbul ignore next */\n-Carousel.install = function(app) {\n- app.component(Carousel.name, Carousel)\n+ElCarousel.install = function(app) {\n+ app.component(ElCarousel.name, ElCarousel)\n}\n-export default Carousel\n+export default ElCarousel\n",
        "date": "08.08.2020 16:26:13",
        "repo": "hug-sun/element3",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor carousel component to use ElCarousel naming convention"
    },
    {
        "msg": "refactor: use vue3 refactoring backtop",
        "diff": "diff --git a/packages/backtop/src/main.vue b/packages/backtop/src/main.vue </template>\n<script>\n+ import {ref, toRefs, computed, onMounted, onUnmounted} from 'vue';\nimport throttle from 'throttle-debounce/throttle';\nconst cubic = value => Math.pow(value, 3);\n@@ -31,7 +32,10 @@ export default {\ntype: Number,\ndefault: 200\n},\n- target: [String],\n+ target: {\n+ type: String,\n+ default: null\n+ },\nright: {\ntype: Number,\ndefault: 40\n@@ -42,69 +46,77 @@ export default {\n}\n},\n- data() {\n- return {\n- el: null,\n- container: null,\n- visible: false\n- };\n- },\n+ setup (props, {emit}) {\n+ const el = ref(null);\n+ const container = ref(null);\n+ const visible = ref(null);\n+ let throttledScrollHandler;\n- computed: {\n- styleBottom() {\n- return `${this.bottom}px`;\n- },\n- styleRight() {\n- return `${this.right}px`;\n- }\n- },\n+ const {\n+ visibilityHeight,\n+ target,\n+ right,\n+ bottom\n+ } = toRefs(props);\n- mounted() {\n- this.init();\n- this.throttledScrollHandler = throttle(300, this.onScroll);\n- this.container.addEventListener('scroll', this.throttledScrollHandler);\n- },\n+ const styleBottom = computed(() => `${bottom.value}px`);\n+ const styleRight = computed(() => `${right.value}px`);\n- methods: {\n- init() {\n- this.container = document;\n- this.el = document.documentElement;\n- if (this.target) {\n- this.el = document.querySelector(this.target);\n- if (!this.el) {\n- throw new Error(`target is not existed: ${this.target}`);\n+ const init = () => {\n+ container.value = document;\n+ el.value = document.documentElement;\n+ if (target.value) {\n+ el.value = document.querySelector(target.value);\n+ if (!el.value) {\n+ throw new Error(`target is not existed: ${target.value}`);\n}\n- this.container = this.el;\n+ container.value = el.value;\n}\n- },\n- onScroll() {\n- const scrollTop = this.el.scrollTop;\n- this.visible = scrollTop >= this.visibilityHeight;\n- },\n- handleClick(e) {\n- this.scrollToTop();\n- this.$emit('click', e);\n- },\n- scrollToTop() {\n- const el = this.el;\n+ }\n+\n+ const onScroll = () => {\n+ const scrollTop = el.value.scrollTop;\n+ visible.value = scrollTop >= visibilityHeight.value;\n+ }\n+\n+ const handleClick = (e) => {\n+ scrollToTop();\n+ emit('click', e);\n+ }\n+\n+ const scrollToTop = () => {\n+ const element = el.value;\nconst beginTime = Date.now();\n- const beginValue = el.scrollTop;\n+ const beginValue = element.scrollTop;\nconst rAF = window.requestAnimationFrame || (func => setTimeout(func, 16));\nconst frameFunc = () => {\nconst progress = (Date.now() - beginTime) / 500;\nif (progress < 1) {\n- el.scrollTop = beginValue * (1 - easeInOutCubic(progress));\n+ element.scrollTop = beginValue * (1 - easeInOutCubic(progress));\nrAF(frameFunc);\n} else {\n- el.scrollTop = 0;\n+ element.scrollTop = 0;\n+ }\n}\n- };\nrAF(frameFunc);\n}\n- },\n- beforeDestroy() {\n- this.container.removeEventListener('scroll', this.throttledScrollHandler);\n+ onMounted(() => {\n+ init();\n+ throttledScrollHandler = throttle(300, onScroll);\n+ container.value.addEventListener('scroll', throttledScrollHandler);\n+ });\n+\n+ onUnmounted(() => {\n+ container.value.removeEventListener('scroll', throttledScrollHandler);\n+ });\n+\n+ return {\n+ visible,\n+ styleBottom,\n+ styleRight,\n+ handleClick\n}\n+ },\n};\n</script>\n",
        "date": "09.08.2020 22:36:54",
        "repo": "hug-sun/element3",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor backtop component to use Composition API"
    },
    {
        "msg": "refactor: extract repeat logic",
        "diff": "diff --git a/src/use/emitter.js b/src/use/emitter.js @@ -20,10 +20,11 @@ export function useBroadcast(componentName, eventName, params) {\nconst children = componentInstance.subTree.children\nif (children) {\nchildren.forEach((vnode) => {\n- if (vnode.component.type.name === componentName) {\n- vnode.component.emit(eventName, ...params)\n+ const childComponent = vnode.component\n+ if (childComponent.type.name === componentName) {\n+ childComponent.emit(eventName, ...params)\n} else {\n- broadcast(vnode.component)\n+ broadcast(childComponent)\n}\n})\n}\n",
        "date": "10.08.2020 15:45:42",
        "repo": "hug-sun/element3",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor useBroadcast function to improve readability and consistency"
    },
    {
        "msg": "refactor: support off method",
        "diff": "diff --git a/src/use/emitter.js b/src/use/emitter.js import { getCurrentInstance } from 'vue'\n+import { capitalize } from 'element-ui/src/utils/util'\n+const EVENT_NAME_KEY = Symbol('ELEMENT_EVENTS')\nexport function useEmitter() {\nreturn {\ndispatch: dispatch(),\nbroadcast: broadcast(),\n- on: on()\n+ on: on(),\n+ off: off()\n}\n}\n@@ -12,12 +15,17 @@ function on() {\nconst instance = getCurrentInstance()\nreturn (originalEventName, callback) => {\n- const eventName = 'on' + originalEventName.charAt(0).toUpperCase() + originalEventName.slice(1)\n+ const eventName = 'on' + capitalize(originalEventName)\nif (!instance.vnode.props) {\ninstance.vnode.props = {}\n}\n+ if (!instance.vnode.props[EVENT_NAME_KEY]) {\n+ instance.vnode.props[EVENT_NAME_KEY] = new Set()\n+ }\n+ instance.vnode.props[EVENT_NAME_KEY].add(eventName)\n+\nif (!instance.vnode.props[eventName]) {\ninstance.vnode.props[eventName] = (...params) => {\nconst callbacks = instance.vnode.props[eventName]['__events']\n@@ -33,6 +41,41 @@ function on() {\n}\n}\n+function off() {\n+ const instance = getCurrentInstance()\n+\n+ return (originalEventName, callback) => {\n+ const eventNameList = instance.vnode.props && instance.vnode.props[EVENT_NAME_KEY]\n+ if (!eventNameList || !eventNameList.size) {\n+ return\n+ }\n+\n+ if (!originalEventName) {\n+ eventNameList.forEach(eventName => {\n+ delete instance.vnode.props[eventName]\n+ })\n+ eventNameList.clear()\n+ return\n+ }\n+\n+ const eventName = 'on' + capitalize(originalEventName)\n+\n+ if (!callback) {\n+ delete instance.vnode.props[eventName]\n+ eventNameList.delete(eventName)\n+ return\n+ }\n+\n+ const handlers = instance.vnode.props[eventName] && instance.vnode.props[eventName]['__events']\n+ if (handlers && handlers.length) {\n+ const index = handlers.indexOf(callback)\n+ if (index > -1) {\n+ handlers.splice(index, 1)\n+ }\n+ }\n+ }\n+}\n+\nfunction dispatch() {\nconst instance = getCurrentInstance()\n",
        "date": "18.08.2020 15:58:46",
        "repo": "hug-sun/element3",
        "type": "refactor",
        "chatgpt_zeroshot": "Add off method to useEmitter for event unsubscription"
    },
    {
        "msg": "refactor: rate",
        "diff": "diff --git a/packages/radio/__tests__/radio.spec.js b/packages/radio/__tests__/radio.spec.js @@ -152,7 +152,7 @@ describe('Radio Group', () => {\nexpect(radio.value).toEqual(3)\nawait wrapper.findComponent(Radio).trigger('keydown', {keyCode: 37})\nexpect(radio.value).toEqual(3)\n- });\n+ })\n})\n})\n",
        "date": "18.08.2020 19:13:07",
        "repo": "hug-sun/element3",
        "type": "refactor",
        "chatgpt_zeroshot": "Remove unnecessary semicolon in radio.spec.js test case"
    },
    {
        "msg": "refactor: use optional chain",
        "diff": "diff --git a/src/use/emitter.js b/src/use/emitter.js @@ -103,7 +103,7 @@ function broadcast() {\nchildren.forEach((vnode) => {\nconst childComponent = vnode.component\n- if (childComponent && childComponent.type && childComponent.type.name === componentName) {\n+ if (childComponent?.type?.name === componentName) {\nchildComponent.emit(eventName, ...params)\n} else {\n_broadcast(childComponent)\n",
        "date": "21.08.2020 14:48:44",
        "repo": "hug-sun/element3",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor conditional statement in broadcast function"
    },
    {
        "msg": "refactor: to optimize the createComponent method logic",
        "diff": "diff --git a/test/unit/tests/use/component.test.js b/test/unit/tests/use/component.test.js @@ -5,6 +5,7 @@ describe('component', () => {\nit('should get component instance', () => {\nconst $cf = jest.fn()\nconst Comp = {\n+ template: '<div>foo</div>',\nsetup() {\nreturn {\n$cf\n@@ -13,9 +14,10 @@ describe('component', () => {\n}\nconst instance = createComponent(Comp)\n- instance.$cf()\n+ instance.ctx.$cf()\nexpect($cf).toBeCalled()\n+ expect(instance.ctx.$el.innerHTML).toBe('foo')\n})\n})\n})\n",
        "date": "01.09.2020 14:44:29",
        "repo": "hug-sun/element3",
        "type": "refactor",
        "chatgpt_zeroshot": "Add template to component and test component instance properties"
    },
    {
        "msg": "refactor: refactor with composition api and added test to header",
        "diff": "diff --git a/packages/header/Header.vue b/packages/header/Header.vue </template>\n<script>\n+import { toRefs } from 'vue'\n+\nexport default {\nname: 'ElHeader',\n- componentName: 'ElHeader',\n-\nprops: {\nheight: {\ntype: String,\ndefault: '60px'\n}\n+ },\n+\n+ setup(props) {\n+ const { height } = toRefs(props)\n+\n+ return { height }\n}\n}\n</script>\n",
        "date": "02.09.2020 11:00:24",
        "repo": "hug-sun/element3",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor Header component to use Composition API"
    },
    {
        "msg": "refactor: improve test of Popconfirm",
        "diff": "diff --git a/packages/popconfirm/__tests__/Popconfirm.spec.js b/packages/popconfirm/__tests__/Popconfirm.spec.js @@ -57,26 +57,14 @@ describe('Popconfirm', () => {\n})\nit('Events:confirm event', async () => {\n- const wrapper = mount(Popconfirm, {\n- slots: {\n- reference:\n- '<el-button class=\"reference-slot\">reference slot</el-button>'\n- }\n- })\n- await wrapper.find('.reference-slot').trigger('click')\n+ const wrapper = mount(Popconfirm)\nconst confirmBtn = wrapper.find('.el-popconfirm__action>button:last-child')\nawait confirmBtn.trigger('click')\nexpect(wrapper.emitted('onConfirm')).toBeTruthy()\n})\nit('Events:cancel event', async () => {\n- const wrapper = mount(Popconfirm, {\n- slots: {\n- reference:\n- '<el-button class=\"reference-slot\">reference slot</el-button>'\n- }\n- })\n- await wrapper.find('.reference-slot').trigger('click')\n+ const wrapper = mount(Popconfirm)\nconst cancelBtn = wrapper.find('.el-popconfirm__action>button:first-child')\nawait cancelBtn.trigger('click')\nexpect(wrapper.emitted('onCancel')).toBeTruthy()\n",
        "date": "04.09.2020 14:14:06",
        "repo": "hug-sun/element3",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor Popconfirm.spec.js to simplify event testing code"
    },
    {
        "msg": "refactor: again implementation emitter logic",
        "diff": "diff --git a/src/use/emitter.js b/src/use/emitter.js import { getCurrentInstance } from 'vue'\n-import { capitalize } from 'element-ui/src/utils/util'\n-const EVENT_NAME_KEY = Symbol('ELEMENT_EVENTS')\n+import mitt from 'mitt'\n-export function useEmitter(instance = getCurrentInstance()) {\n- return {\n- dispatch: dispatch(instance),\n- broadcast: broadcast(instance),\n- on: on(instance),\n- once: once(instance),\n- off: off(instance)\n- }\n-}\n-\n-function on(instance) {\n- return (originalEventName, callback) => {\n- const eventName = 'on' + capitalize(originalEventName)\n+const emitter = mitt()\n- if (!instance.vnode.props) {\n- instance.vnode.props = {}\n- }\n-\n- if (!instance.vnode.props[EVENT_NAME_KEY]) {\n- instance.vnode.props[EVENT_NAME_KEY] = new Set()\n- }\n- instance.vnode.props[EVENT_NAME_KEY].add(eventName)\n+export function useEmitter() {\n+ const currentComponentInstance = getCurrentInstance()\n- if (!instance.vnode.props[eventName]) {\n- instance.vnode.props[eventName] = (...params) => {\n- const callbacks = instance.vnode.props[eventName].__events\n- if (callbacks) {\n- callbacks.forEach((cf) => {\n- cf(...params)\n- })\n- }\n- }\n- instance.vnode.props[eventName].__events = []\n- }\n- instance.vnode.props[eventName].__events.push(callback)\n+ function on(type, handler) {\n+ const handleWrapper = (e) => {\n+ const { value, type, emitComponentInstance } = e\n+ if (type === 'broadcast') {\n+ if (isChildComponent(currentComponentInstance, emitComponentInstance)) {\n+ handler && handler(value)\n}\n+ } else if (type === 'dispatch') {\n+ if (isChildComponent(emitComponentInstance, currentComponentInstance)) {\n+ handler && handler(value)\n}\n-function once(instance) {\n- const $off = off(instance)\n- const $on = on(instance)\n- return (originalEventName, handle) => {\n- const _on = (...params) => {\n- $off(originalEventName, _on)\n- handle(...params)\n- }\n- $on(originalEventName, _on)\n+ } else {\n+ handler && handler(value)\n}\n}\n-function off(instance) {\n- return (originalEventName, callback) => {\n- const eventNameList =\n- instance.vnode.props && instance.vnode.props[EVENT_NAME_KEY]\n- if (!eventNameList || !eventNameList.size) {\n- return\n+ // Save the real handler because the need to call off\n+ handler.wrapper = handleWrapper\n+ emitter.on(type, handleWrapper)\n}\n- if (!originalEventName) {\n- eventNameList.forEach((eventName) => {\n- delete instance.vnode.props[eventName]\n+ function broadcast(type, evt) {\n+ emitter.emit(type, {\n+ type: 'broadcast',\n+ emitComponentInstance: currentComponentInstance,\n+ value: evt\n})\n- eventNameList.clear()\n- return\n}\n- const eventName = 'on' + capitalize(originalEventName)\n-\n- if (!callback) {\n- delete instance.vnode.props[eventName]\n- eventNameList.delete(eventName)\n- return\n+ function dispatch(type, evt) {\n+ emitter.emit(type, {\n+ type: 'dispatch',\n+ emitComponentInstance: currentComponentInstance,\n+ value: evt\n+ })\n}\n- const handlers =\n- instance.vnode.props[eventName] &&\n- instance.vnode.props[eventName].__events\n- if (handlers && handlers.length) {\n- const index = handlers.indexOf(callback)\n- if (index > -1) {\n- handlers.splice(index, 1)\n- }\n- }\n- }\n+ function off(type, handler) {\n+ emitter.off(type, handler.wrapper)\n}\n-function dispatch(instance) {\n- return (componentName, eventName, ...params) => {\n- let parent = instance.parent\n- while (parent && parent.type.name !== componentName) {\n- parent = parent.parent\n+ function emit(type, evt) {\n+ emitter.emit(type, {\n+ value: evt\n+ })\n}\n- if (parent) {\n- parent.emit(eventName, ...params)\n- }\n+ return {\n+ on,\n+ broadcast,\n+ dispatch,\n+ off,\n+ emit\n}\n}\n-function broadcast(instance) {\n- return (componentName, eventName, ...params) => {\n- const _broadcast = (componentInstance) => {\n- if (!componentInstance) return\n+/**\n+ * check componentChild is componentParent child components\n+ * @param {*} componentChild\n+ * @param {*} componentParent\n+ */\n+function isChildComponent(componentChild, componentParent) {\n+ const parentUId = componentParent.uid\n- const children = componentInstance.subTree.children\n- if (children) {\n- children.forEach((vnode) => {\n- const childComponent = vnode.component\n-\n- if (childComponent?.type?.name === componentName) {\n- childComponent.emit(eventName, ...params)\n- } else {\n- _broadcast(childComponent)\n- }\n- })\n- }\n+ while (componentChild && componentChild?.parent?.uid !== parentUId) {\n+ componentChild = componentChild.parent\n}\n- _broadcast(instance)\n- }\n+ return Boolean(componentChild)\n}\n",
        "date": "10.09.2020 18:19:52",
        "repo": "hug-sun/element3",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor emitter.js to use mitt for event handling"
    },
    {
        "msg": "refactor: use const replace string",
        "diff": "diff --git a/src/use/emitter.js b/src/use/emitter.js import { getCurrentInstance } from 'vue'\nimport mitt from 'mitt'\n+const DISPATCH = 'dispatch'\n+const BROADCAST = 'broadcast'\n+\n+const wrapper = Symbol('wrapper')\n+\nconst emitter = mitt()\nexport function useEmitter() {\n@@ -9,11 +14,11 @@ export function useEmitter() {\nfunction on(type, handler) {\nconst handleWrapper = (e) => {\nconst { value, type, emitComponentInstance } = e\n- if (type === 'broadcast') {\n+ if (type === BROADCAST) {\nif (isChildComponent(currentComponentInstance, emitComponentInstance)) {\nhandler && handler(value)\n}\n- } else if (type === 'dispatch') {\n+ } else if (type === DISPATCH) {\nif (isChildComponent(emitComponentInstance, currentComponentInstance)) {\nhandler && handler(value)\n}\n@@ -23,13 +28,13 @@ export function useEmitter() {\n}\n// Save the real handler because the need to call off\n- handler.wrapper = handleWrapper\n+ handler[wrapper] = handleWrapper\nemitter.on(type, handleWrapper)\n}\nfunction broadcast(type, evt) {\nemitter.emit(type, {\n- type: 'broadcast',\n+ type: BROADCAST,\nemitComponentInstance: currentComponentInstance,\nvalue: evt\n})\n@@ -37,14 +42,14 @@ export function useEmitter() {\nfunction dispatch(type, evt) {\nemitter.emit(type, {\n- type: 'dispatch',\n+ type: DISPATCH,\nemitComponentInstance: currentComponentInstance,\nvalue: evt\n})\n}\nfunction off(type, handler) {\n- emitter.off(type, handler.wrapper)\n+ emitter.off(type, handler[wrapper])\n}\nfunction emit(type, evt) {\n",
        "date": "11.09.2020 20:19:55",
        "repo": "hug-sun/element3",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor emitter.js to use constants and symbols for event types and handler wrappers"
    },
    {
        "msg": "refactor: refactor collapse collapse-item and add test",
        "diff": "diff --git a/packages/collapse/src/collapse-item.vue b/packages/collapse/src/collapse-item.vue </div>\n</template>\n<script>\n+import { computed, getCurrentInstance, inject, reactive, toRefs } from 'vue'\nimport ElCollapseTransition from 'element-ui/src/transitions/collapse-transition'\n-import Emitter from 'element-ui/src/mixins/emitter'\nimport { generateId } from 'element-ui/src/utils/util'\n+import { useEmitter } from 'element-ui/src/use/emitter'\n+\nexport default {\nname: 'ElCollapseItem',\ncomponentName: 'ElCollapseItem',\n- mixins: [Emitter],\n-\ncomponents: { ElCollapseTransition },\n- data() {\n- return {\n- contentWrapStyle: {\n- height: 'auto',\n- display: 'block'\n- },\n- contentHeight: 0,\n- focusing: false,\n- isClick: false,\n- id: generateId()\n- }\n- },\n-\n- inject: ['collapse'],\n-\nprops: {\ntitle: String,\nname: {\ntype: [String, Number],\ndefault() {\n- return this._uid\n+ return ''\n}\n},\ndisabled: Boolean\n},\n- computed: {\n- isActive() {\n- return this.collapse.activeNames.indexOf(this.name) > -1\n- }\n+ setup(props) {\n+ const state = reactive({\n+ contentWrapStyle: {\n+ height: 'auto',\n+ display: 'block'\n},\n+ contentHeight: 0,\n+ focusing: false,\n+ isClick: false,\n+ id: generateId()\n+ })\n+\n+ const instance = getCurrentInstance()\n+ const collapse = inject('collapse')\n+\n+ const { dispatch } = useEmitter()\n+ const isActive = computed(() => {\n+ const name = props.name || props.name === 0 ? props.name : instance.uid\n+ return collapse.ctx.activeNames.indexOf(name) > -1\n+ })\n- methods: {\n- handleFocus() {\n+ function handleFocus() {\nsetTimeout(() => {\n- if (!this.isClick) {\n- this.focusing = true\n+ if (!state.isClick) {\n+ state.focusing = true\n} else {\n- this.isClick = false\n+ state.isClick = false\n}\n}, 50)\n- },\n- handleHeaderClick() {\n- if (this.disabled) return\n- this.dispatch('item-click', this)\n- this.focusing = false\n- this.isClick = true\n- },\n- handleEnterClick() {\n- this.dispatch('item-click', this)\n+ }\n+\n+ function handleHeaderClick() {\n+ if (props.disabled) return\n+ const name = props.name || props.name === 0 ? props.name : instance.uid\n+ dispatch('item-click', { name })\n+ state.focusing = false\n+ state.isClick = true\n+ }\n+\n+ function handleEnterClick() {\n+ const name = props.name || props.name === 0 ? props.name : instance.uid\n+ dispatch('item-click', { name })\n+ }\n+ return {\n+ ...toRefs(state),\n+ isActive,\n+ handleFocus,\n+ handleHeaderClick,\n+ handleEnterClick\n}\n}\n}\n",
        "date": "21.09.2020 15:18:08",
        "repo": "hug-sun/element3",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor collapse-item.vue to use composition API and custom emitter utility"
    },
    {
        "msg": "refactor: NavMenu",
        "diff": "diff --git a/packages/menu/Menu.vue b/packages/menu/Menu.vue @@ -4,7 +4,6 @@ import { addClass, removeClass, hasClass } from 'element-ui/src/utils/dom';\nimport { computed, getCurrentInstance, onMounted, provide, ref, toRefs, watch, h , Transition } from 'vue';\nimport {useEmitter} from 'element-ui/src/use/emitter';\nimport {useItems} from \"./src/menu-use\";\n-import { Submenu } from '../../types';\nexport default {\nname: 'ElMenu',\ncomponentName: 'ElMenu',\n",
        "date": "25.09.2020 22:46:16",
        "repo": "hug-sun/element3",
        "type": "refactor",
        "chatgpt_zeroshot": "Remove unused import of Submenu in Menu.vue"
    },
    {
        "msg": "refactor: rename to ElPagination",
        "diff": "diff --git a/packages/pagination/index.js b/packages/pagination/index.js -import Pagination from './Pagination'\n+import ElPagination from './Pagination'\n/* istanbul ignore next */\n-Pagination.install = function (app) {\n- app.component(Pagination.name, Pagination)\n+ElPagination.install = function (app) {\n+ app.component(ElPagination.name, ElPagination)\n}\n-export default Pagination\n+export default ElPagination\n",
        "date": "23.10.2020 16:26:56",
        "repo": "hug-sun/element3",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor Pagination component to use ElPagination naming convention"
    },
    {
        "msg": "refactor: rename avatar component",
        "diff": "diff --git a/packages/avatar/index.js b/packages/avatar/index.js -import Avatar from './Avatar.vue'\n+import ElAvatar from './Avatar.vue'\n/* istanbul ignore next */\n-Avatar.install = function (app) {\n- app.component(Avatar.name, Avatar)\n+ElAvatar.install = function (app) {\n+ app.component(ElAvatar.name, ElAvatar)\n}\n-export default Avatar\n+export default ElAvatar\n",
        "date": "25.10.2020 22:14:59",
        "repo": "hug-sun/element3",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor Avatar component to use ElAvatar naming convention"
    },
    {
        "msg": "refactor: rename badge component",
        "diff": "diff --git a/packages/badge/index.js b/packages/badge/index.js -import Badge from './Badge.vue'\n+import ElBadge from './Badge.vue'\n/* istanbul ignore next */\n-Badge.install = function (app) {\n- app.component(Badge.name, Badge)\n+ElBadge.install = function (app) {\n+ app.component(ElBadge.name, ElBadge)\n}\n-export default Badge\n+export default ElBadge\n",
        "date": "25.10.2020 22:15:14",
        "repo": "hug-sun/element3",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor badge component to use ElBadge naming convention"
    },
    {
        "msg": "refactor: rename for tap-pane",
        "diff": "diff --git a/packages/tab-pane/index.js b/packages/tab-pane/index.js -import TabPane from './TabPane'\n+import ElTabPane from './TabPane'\n/* istanbul ignore next */\n-TabPane.install = function (app) {\n- app.component(TabPane.name, TabPane)\n+ElTabPane.install = function (app) {\n+ app.component(ElTabPane.name, ElTabPane)\n}\n-export default TabPane\n+export default ElTabPane\n",
        "date": "26.10.2020 16:19:50",
        "repo": "hug-sun/element3",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor TabPane component to use ElTabPane naming convention"
    },
    {
        "msg": "refactor: change path for dialog",
        "diff": "diff --git a/packages/dialog/Dialog.vue b/packages/dialog/Dialog.vue </template>\n<script>\n-import { popupProps, usePopup } from 'element-ui/src/use/popup'\n-import { useEmitter } from 'element-ui/src/use/emitter'\n+import { popupProps, usePopup } from '../../src/use/popup'\n+import { useEmitter } from '../../src/use/emitter'\nimport {\ntoRefs,\nref,\n",
        "date": "28.10.2020 22:54:32",
        "repo": "hug-sun/element3",
        "type": "refactor",
        "chatgpt_zeroshot": "Fix import paths for usePopup and useEmitter in Dialog.vue"
    },
    {
        "msg": "refactor: rename  for tooltip",
        "diff": "diff --git a/packages/tooltip/index.js b/packages/tooltip/index.js -import Tooltip from './Tooltip'\n+import ElTooltip from './Tooltip'\n/* istanbul ignore next */\n-Tooltip.install = function (app) {\n- app.component(Tooltip.name, Tooltip)\n+ElTooltip.install = function (app) {\n+ app.component(ElTooltip.name, ElTooltip)\n}\n-export default Tooltip\n+export default ElTooltip\n",
        "date": "28.10.2020 22:57:47",
        "repo": "hug-sun/element3",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor Tooltip component to use ElTooltip naming convention"
    },
    {
        "msg": "refactor: rename for card",
        "diff": "diff --git a/packages/card/index.js b/packages/card/index.js -import Card from './Card'\n+import ElCard from './Card'\n/* istanbul ignore next */\n-Card.install = function (app) {\n- app.component(Card.name, Card)\n+ElCard.install = function (app) {\n+ app.component(ElCard.name, ElCard)\n}\n-export default Card\n+export default ElCard\n",
        "date": "28.10.2020 23:11:54",
        "repo": "hug-sun/element3",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor Card component to use ElCard naming convention"
    },
    {
        "msg": "refactor: change path for carousel",
        "diff": "diff --git a/packages/carousel/Carousel.vue b/packages/carousel/Carousel.vue @@ -68,7 +68,7 @@ import {\nonUnmounted\n} from 'vue'\nimport { throttle } from 'throttle-debounce'\n-import { useResizeEvent } from 'element-ui/src/utils/resize-event'\n+import { useResizeEvent } from '../../src/utils/resize-event'\nexport default {\nname: 'ElCarousel',\n",
        "date": "31.10.2020 17:13:01",
        "repo": "hug-sun/element3",
        "type": "refactor",
        "chatgpt_zeroshot": "Fix import path for useResizeEvent in Carousel.vue"
    },
    {
        "msg": "refactor: change path for cascader",
        "diff": "diff --git a/packages/cascader/Cascader.vue b/packages/cascader/Cascader.vue @@ -150,7 +150,7 @@ import { useLocale } from 'element-ui/src/use/locale'\nimport {\naddResizeListener,\nremoveResizeListener\n-} from 'element-ui/src/utils/resize-event'\n+} from '../../src/utils/resize-event'\nimport { debounce } from 'throttle-debounce'\nconst { keys: KeyCode } = AriaUtils\n",
        "date": "31.10.2020 17:13:14",
        "repo": "hug-sun/element3",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor import path for resize-event utility in Cascader.vue"
    },
    {
        "msg": "refactor: change path for infinite-scroll",
        "diff": "diff --git a/packages/infinite-scroll/src/main.js b/packages/infinite-scroll/src/main.js import { throttle } from 'throttle-debounce'\n-import {\n- isHtmlElement,\n- isFunction,\n- isDefined\n-} from 'element-ui/src/utils/types'\n-import { getScrollContainer } from 'element-ui/src/utils/dom'\n+import { isHtmlElement, isFunction, isDefined } from '../../../src/utils/types'\n+import { getScrollContainer } from '../../../src/utils/dom'\nconst getStyleComputedProperty = (element, property) => {\nif (element === window) {\n",
        "date": "31.10.2020 17:13:47",
        "repo": "hug-sun/element3",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor imports in main.js"
    },
    {
        "msg": "refactor: change path to relative paths",
        "diff": "diff --git a/src/utils/date-util.js b/src/utils/date-util.js -import fecha from 'element-ui/src/utils/date'\n-import { t } from 'element-ui/src/locale'\n+import fecha from '../../src/utils/date'\n+import { t } from '../../src/locale'\nconst weeks = ['sun', 'mon', 'tue', 'wed', 'thu', 'fri', 'sat']\nconst months = [\n",
        "date": "31.10.2020 17:15:09",
        "repo": "hug-sun/element3",
        "type": "refactor",
        "chatgpt_zeroshot": "Fix import paths for date-util.js"
    },
    {
        "msg": "refactor: upload.md fourth case\nfor details, see:",
        "diff": "diff --git a/examples/docs/zh-CN/upload.md b/examples/docs/zh-CN/upload.md :::demo\n```html\n<el-upload\n- action=\"#\"\n+ action=\"https://jsonplaceholder.typicode.com/posts/\"\nlist-type=\"picture-card\"\n+ ref=\"uploadRef\"\n:auto-upload=\"false\">\n- <template v-slot:default>\n+ <template #default>\n<i class=\"el-icon-plus\"></i>\n</template>\n- <template v-slot:file=\"{file}\">\n- <img\n- class=\"el-upload-list__item-thumbnail\"\n- :src=\"file.url\" alt=\"\"\n- >\n+ <template #file=\"{file}\">\n+ <img class=\"el-upload-list__item-thumbnail\" :src=\"file.url\" alt=\"\">\n<span class=\"el-upload-list__item-actions\">\n- <span\n- class=\"el-upload-list__item-preview\"\n- @click=\"handlePictureCardPreview(file)\"\n- >\n+ <span class=\"el-upload-list__item-preview\" @click=\"handlePictureCardPreview(file)\">\n<i class=\"el-icon-zoom-in\"></i>\n</span>\n- <span\n- v-if=\"!disabled\"\n- class=\"el-upload-list__item-delete\"\n- @click=\"handleDownload(file)\"\n- >\n+ <span class=\"el-upload-list__item-delete\" @click=\"handleDownload(file)\">\n<i class=\"el-icon-download\"></i>\n</span>\n- <span\n- v-if=\"!disabled\"\n- class=\"el-upload-list__item-delete\"\n- @click=\"handleRemove(file)\"\n- >\n+ <span class=\"el-upload-list__item-delete\" @click=\"handleRemove(file)\">\n<i class=\"el-icon-delete\"></i>\n</span>\n</span>\n-\n</template>\n</el-upload>\n-<el-dialog :visible.sync=\"dialogVisible\">\n- <img width=\"100%\" :src=\"dialogImageUrl\" alt=\"\">\n+ <el-dialog :visible.sync=\"dialogVisible\" v-model:visible=\"dialogVisible\">\n+ <img width=\"100%\" :src=\"dialogImageUrl\" style=\"width: 100%\">\n</el-dialog>\n<script>\n- import { ref , getCurrentInstance } from 'vue';\n+import { ref, unref } from 'vue'\n+\nexport default {\nsetup() {\n- const dialogImageUrl = ref('');\n- const dialogVisible = ref(false);\n- const disables = ref(false);\n+ const dialogImageUrl = ref('')\n+ const dialogVisible = ref(false)\n+ const uploadRef = ref(null)\n- const self = getCurrentInstance().ctx;\nconst handleRemove = (file) => {\n- console.log(file);\n+ console.log('remove')\n+ uploadRef.value.handleRemove(file)\n}\n+\nconst handlePictureCardPreview = (file) => {\n- self.dialogImageUrl = file.url;\n- self.dialogVisible = true;\n+ dialogImageUrl.value = unref(file).url\n+ dialogVisible.value = true\n}\n+\nconst handleDownload = (file) => {\n- console.log(file);\n+ console.log('DownLoad')\n}\nreturn {\ndialogImageUrl,\ndialogVisible,\n- disables,\n+ uploadRef,\nhandleRemove,\nhandlePictureCardPreview,\nhandleDownload\n",
        "date": "21.11.2020 16:22:02",
        "repo": "hug-sun/element3",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor upload component and add new features"
    },
    {
        "msg": "refactor: use useGlobalOptions get  in Button",
        "diff": "diff --git a/packages/button/Button.vue b/packages/button/Button.vue </template>\n<script>\n-import { toRefs, inject, computed, getCurrentInstance } from 'vue'\n+import { useGlobalOptions } from '../../src/use/globalConfig'\n+import { toRefs, inject, computed } from 'vue'\nexport default {\nname: 'ElButton',\nprops: {\n@@ -89,13 +90,10 @@ const useButtonDisabled = (disabled) => {\n}\nconst useButtonSize = (size) => {\n+ const globalConfig = useGlobalOptions()\nreturn computed(() => {\nconst elFormItem = inject('elFormItem', {})\n- return (\n- size?.value ||\n- elFormItem.elFormItemSize ||\n- getCurrentInstance().ctx.$ELEMENT?.size\n- )\n+ return size?.value || elFormItem.elFormItemSize || globalConfig.size\n})\n}\n</script>\n",
        "date": "28.11.2020 16:50:26",
        "repo": "hug-sun/element3",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor button component to use global configuration for size option"
    },
    {
        "msg": "refactor: adjustment to get the message",
        "diff": "diff --git a/packages/message/__tests__/Message.spec.js b/packages/message/__tests__/Message.spec.js import '@testing-library/jest-dom'\nimport { nextTick } from 'vue'\nimport Utils from 'main/utils/aria-utils'\n-import Message from '../index.js'\n+import MessageInfo from '../index.js'\n+const Message = MessageInfo.service\njest.useFakeTimers()\n",
        "date": "28.11.2020 20:23:07",
        "repo": "hug-sun/element3",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor Message component to use MessageInfo service"
    },
    {
        "msg": "refactor: change indexOf to includes in Divider.vue",
        "diff": "diff --git a/packages/divider/Divider.vue b/packages/divider/Divider.vue @@ -17,14 +17,14 @@ export default {\ntype: String,\ndefault: 'horizontal',\nvalidator(val) {\n- return ['horizontal', 'vertical'].indexOf(val) !== -1\n+ return ['horizontal', 'vertical'].includes(val)\n}\n},\ncontentPosition: {\ntype: String,\ndefault: 'center',\nvalidator(val) {\n- return ['left', 'center', 'right'].indexOf(val) !== -1\n+ return ['left', 'center', 'right'].includes(val)\n}\n}\n}\n",
        "date": "08.12.2020 15:08:59",
        "repo": "hug-sun/element3",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor validation logic for divider orientation and content position"
    },
    {
        "msg": "refactor(Button): use includes replace indexOf",
        "diff": "diff --git a/packages/button/Button.vue b/packages/button/Button.vue @@ -22,18 +22,20 @@ export default {\nsize: {\ntype: String,\nvalidator(val) {\n- if (val === '') return true\n- return ['medium', 'small', 'mini'].indexOf(val) !== -1\n+ return ['medium', 'small', 'mini', ''].includes(val)\n}\n},\ntype: {\ntype: String,\nvalidator(val) {\n- return (\n- ['primary', 'success', 'warning', 'danger', 'info', 'text'].indexOf(\n- val\n- ) !== -1\n- )\n+ return [\n+ 'primary',\n+ 'success',\n+ 'warning',\n+ 'danger',\n+ 'info',\n+ 'text'\n+ ].includes(val)\n}\n},\nnativeType: {\n",
        "date": "10.12.2020 11:05:04",
        "repo": "hug-sun/element3",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor size and type validators in Button.vue"
    },
    {
        "msg": "refactor(tag): delete unuseful notes in setup return in tag.vue",
        "diff": "diff --git a/packages/tag/Tag.vue b/packages/tag/Tag.vue @@ -47,7 +47,9 @@ export default {\nemits: ['close', 'click'],\nsetup(props, { emit }) {\nconst $ELEMENT = useGlobalOptions()\n+\nconst { type, hit, size, effect } = toRefs(props)\n+\nconst tagSize = computed(() => {\nreturn size?.value || $ELEMENT.size\n})\n@@ -58,13 +60,12 @@ export default {\n`el-tag--${effect.value}`,\nhit.value && 'is-hit'\n])\n+\nconst { show, handleClose } = useShow(emit)\n+\nreturn {\n- // data\nshow,\n- // computed\nclasses,\n- // methods\nhandleClose\n}\n},\n",
        "date": "10.12.2020 11:39:07",
        "repo": "hug-sun/element3",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor Tag.vue component setup function and useShow hook"
    },
    {
        "msg": "refactor(avatar): refacotr avatar",
        "diff": "diff --git a/packages/avatar/Avatar.vue b/packages/avatar/Avatar.vue @@ -25,7 +25,7 @@ export default defineComponent({\nsetup(props) {\nconst { size, shape, icon, error } = toRefs(props)\n- const style = useStyle(props)\n+ const style = useStyle(size)\nconst isShow = ref(true)\n",
        "date": "10.12.2020 16:46:02",
        "repo": "hug-sun/element3",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor useStyle function to only use size prop"
    },
    {
        "msg": "refactor(element3): use defineComponent refactor button",
        "diff": "diff --git a/packages/element3/packages/button/Button.vue b/packages/element3/packages/button/Button.vue <script>\nimport { useGlobalOptions } from '../../src/use/globalConfig'\n-import { toRefs, inject, computed } from 'vue'\n-export default {\n+import { toRefs, inject, computed, defineComponent } from 'vue'\n+export default defineComponent({\nname: 'ElButton',\nprops: {\nsize: {\n@@ -65,7 +65,7 @@ export default {\nclasses\n}\n}\n-}\n+})\nconst useClasses = ({ props, size, disabled }) => {\nreturn computed(() => {\n",
        "date": "16.12.2020 12:41:37",
        "repo": "hug-sun/element3",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor Button.vue to use defineComponent from Vue 3"
    },
    {
        "msg": "refactor: refactor radio-button component",
        "diff": "diff --git a/packages/element3/packages/radio-button/RadioButton.vue b/packages/element3/packages/radio-button/RadioButton.vue />\n<span\nclass=\"el-radio-button__inner\"\n- :style=\"style\"\n+ :style=\"isChecked ? style : null\"\n@keydown.stop\n>\n<slot>{{ label }}</slot>\n@@ -75,7 +75,7 @@ export default {\ntabIndex,\nclasses,\nisChecked,\n- style: isChecked ? style : null\n+ style\n}\n}\n}\n",
        "date": "18.12.2020 14:41:33",
        "repo": "hug-sun/element3",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor RadioButton component to only apply style when isChecked is true"
    },
    {
        "msg": "refactor: support multiple component entry path",
        "diff": "diff --git a/packages/element3/scripts/generateCssFile.js b/packages/element3/scripts/generateCssFile.js const fs = require('fs')\nconst path = require('path')\nconst blacklist = ['icon', 'option', 'option-group', 'theme-chalk']\n-const componentPath = path.resolve(__dirname, '../packages')\n-const themePath = path.resolve(componentPath, 'theme-chalk/src')\n+const componentPaths = [\n+ path.resolve(__dirname, '../packages'),\n+ path.resolve(__dirname, '../src/components')\n+]\n+const themePath = path.resolve(__dirname, '../packages', 'theme-chalk/src')\nconst fileSuffix = '.scss'\nconst indexFileName = 'index' + fileSuffix\nconst outputIndexFilePath = path.resolve(themePath, indexFileName)\n;(function main() {\n- save(genCssCode())\n+ save(genCssCode(getAllComponentName()))\n})()\n-function genCssCode() {\n- var indexContent = '@import \"./base.scss\";\\n'\n- return getComponentNameList().reduce((context, filePath) => {\n- return (context += '@import \"./' + filePath + '\";\\n')\n- }, indexContent)\n+function getAllComponentName() {\n+ return componentPaths\n+ .map((componentPath) => {\n+ return getComponentNameList(componentPath)\n+ })\n+ .reduce((total, components) => {\n+ return [...total, ...components]\n+ })\n}\n-function getComponentNameList() {\n+function getComponentNameList(componentPath) {\nreturn fs\n.readdirSync(componentPath)\n.filter((name) => {\n@@ -29,6 +35,14 @@ function getComponentNameList() {\n})\n}\n+function genCssCode(componentNameList) {\n+ var indexContent = '@import \"./base.scss\";\\n'\n+\n+ return componentNameList.reduce((context, filePath) => {\n+ return (context += '@import \"./' + filePath + '\";\\n')\n+ }, indexContent)\n+}\n+\nfunction save(cssCode) {\nfs.writeFileSync(outputIndexFilePath, cssCode)\n}\n",
        "date": "18.12.2020 18:39:23",
        "repo": "hug-sun/element3",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor generateCssFile.js to support multiple component paths and improve code readability"
    },
    {
        "msg": "refactor(input): update styles",
        "diff": "diff --git a/packages/element3/src/components/Input/src/use.js b/packages/element3/src/components/Input/src/use.js @@ -12,7 +12,7 @@ export const useClass = (inputSize, inputExceed, props, attrs, slots) => {\nclasses.push('is-disabled')\n}\n- if (inputExceed) {\n+ if (inputExceed.value) {\nclasses.push('is-exceed')\n}\n",
        "date": "25.12.2020 16:53:22",
        "repo": "hug-sun/element3",
        "type": "refactor",
        "chatgpt_zeroshot": "Fix inputExceed condition in useClass function"
    },
    {
        "msg": "refactor(input): update style",
        "diff": "diff --git a/packages/element3/src/components/Input/src/use.js b/packages/element3/src/components/Input/src/use.js @@ -4,7 +4,7 @@ import calcTextareaHeight from './calcTextareaHeight'\nexport const useClass = (inputSize, inputExceed, props, attrs, slots) => {\nreturn computed(() => {\nconst classes = [\n- inputSize.value ? 'el-input--' + inputSize.value : 'el-input',\n+ inputSize.value ? 'el-input--' + inputSize.value : '',\nprops.type === 'textarea' ? 'el-textarea' : 'el-input'\n]\n",
        "date": "25.12.2020 22:08:30",
        "repo": "hug-sun/element3",
        "type": "refactor",
        "chatgpt_zeroshot": "Remove unnecessary class in useClass function"
    },
    {
        "msg": "refactor(Progress): Replace upload-list depend to new Progress",
        "diff": "diff --git a/packages/element3/packages/upload/src/upload-list.vue b/packages/element3/packages/upload/src/upload-list.vue </template>\n<script>\nimport Locale from '../../../src/mixins/locale'\n-import ElProgress from '../../progress'\n+import { ElProgress } from './components/Progress'\nimport { ref } from 'vue'\nexport default {\n",
        "date": "30.12.2020 14:02:55",
        "repo": "hug-sun/element3",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor import of ElProgress component to use relative path in upload-list.vue"
    },
    {
        "msg": "refactor(Progress): Fix the import path error",
        "diff": "diff --git a/packages/element3/packages/upload/src/upload-list.vue b/packages/element3/packages/upload/src/upload-list.vue </template>\n<script>\nimport Locale from '../../../src/mixins/locale'\n-import { ElProgress } from './components/Progress'\n+import { ElProgress } from '../../../src/components/Progress'\nimport { ref } from 'vue'\nexport default {\n",
        "date": "30.12.2020 14:11:47",
        "repo": "hug-sun/element3",
        "type": "refactor",
        "chatgpt_zeroshot": "Fix import path for ElProgress component in upload-list.vue"
    },
    {
        "msg": "refactor: update component to bs5",
        "diff": "diff --git a/js/src/sidebar.js b/js/src/sidebar.js import {\ndefineJQueryPlugin,\nemulateTransitionEnd,\n- getElementFromSelector,\n- getTransitionDurationFromElement\n+ getTransitionDurationFromElement,\n+ reflow,\n+ typeCheckConfig\n} from './util/index'\nimport Data from './dom/data'\nimport EventHandler from './dom/event-handler'\n+import Manipulator from './dom/manipulator'\nimport BaseComponent from './base-component'\n/**\n@@ -76,7 +78,7 @@ const SELECTOR_SIDEBAR = '.c-sidebar'\n*/\nclass Sidebar extends BaseComponent {\nconstructor(element, config) {\n- this._element = element\n+ super(element)\nthis._config = this._getConfig(config)\nthis._open = this._isVisible()\nthis._mobile = this._isMobile()\n@@ -92,10 +94,6 @@ class Sidebar extends BaseComponent {\n// Getters\n- static get VERSION() {\n- return VERSION\n- }\n-\nstatic get Default() {\nreturn Default\n}\n@@ -112,14 +110,14 @@ class Sidebar extends BaseComponent {\nif (this._isMobile()) {\nthis._addClassName(this._firstBreakpointClassName())\nthis._showBackdrop()\n- EventHandler.one(this._element, TRANSITION_END, () => {\n+ EventHandler.one(this._element, 'transitionend', () => {\nthis._addClickOutListener()\n})\n} else if (breakpoint) {\nthis._addClassName(this._getBreakpointClassName(breakpoint))\nif (this._isOverlaid()) {\n- EventHandler.one(this._element, TRANSITION_END, () => {\n+ EventHandler.one(this._element, 'transitionend', () => {\nthis._addClickOutListener()\n})\n}\n@@ -127,7 +125,7 @@ class Sidebar extends BaseComponent {\nthis._addClassName(this._firstBreakpointClassName())\nif (this._isOverlaid()) {\n- EventHandler.one(this._element, TRANSITION_END, () => {\n+ EventHandler.one(this._element, 'transitionend', () => {\nthis._addClickOutListener()\n})\n}\n@@ -142,7 +140,7 @@ class Sidebar extends BaseComponent {\nconst transitionDuration = getTransitionDurationFromElement(this._element)\n- EventHandler.one(this._element, TRANSITION_END, complete)\n+ EventHandler.one(this._element, 'transitionend', complete)\nemulateTransitionEnd(this._element, transitionDuration)\n}\n@@ -174,7 +172,7 @@ class Sidebar extends BaseComponent {\nconst transitionDuration = getTransitionDurationFromElement(this._element)\n- EventHandler.one(this._element, TRANSITION_END, complete)\n+ EventHandler.one(this._element, 'transitionend', complete)\nemulateTransitionEnd(this._element, transitionDuration)\n}\n@@ -352,7 +350,7 @@ class Sidebar extends BaseComponent {\nreturn siblings\n}\n- _toggleDropdown(event, sidebar) {\n+ _toggleDropdown(event) {\nlet toggler = event.target\nif (!toggler.classList.contains(CLASS_NAME_NAV_DROPDOWN_TOGGLE)) {\ntoggler = toggler.closest(SELECTOR_NAV_DROPDOWN_TOGGLE)\n",
        "date": "17.12.2020 23:55:43",
        "repo": "coreui/coreui",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor Sidebar class to use inheritance and add new methods"
    },
    {
        "msg": "refactor: deprecated `.avatar-rounded` and `.avatar-square`",
        "diff": "diff --git a/scss/_avatar.scss b/scss/_avatar.scss display: inline-flex;\nalign-items: center;\njustify-content: center;\n- border-radius: 50em;\n+ vertical-align: middle;\n+ @include border-radius(50em);\n@include avatar($avatar-width,$avatar-status-width);\n}\n.avatar-img {\nwidth: 100%;\nheight: auto;\n- border-radius: 50em;\n+ @include border-radius(50em);\n}\n.avatar-status {\nbottom: 0;\ndisplay: block;\nborder: 1px solid $white;\n- border-radius: 50em;\n+ @include border-radius(50em);\n// @include ltr {\n// right: 0;\nmargin-right: - ($avatar-xl-width / 2);\n}\n}\n-\n-.avatar-rounded {\n- border-radius: $border-radius;\n-}\n-\n-.avatar-square {\n- border-radius: 0;\n-}\n",
        "date": "03.01.2021 12:03:24",
        "repo": "coreui/coreui",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor avatar styles to use border-radius mixin and add vertical-align property"
    },
    {
        "msg": "refactor: change divider with to 100% of parent",
        "diff": "diff --git a/scss/_header.scss b/scss/_header.scss }\n.header-divider {\n- // stylelint-disable-next-line function-disallowed-list\n- flex-basis: calc(100% + #{2 * $header-padding-x});\n+ flex-basis: calc(100% + #{2 * $header-padding-x}); // stylelint-disable-line function-disallowed-list\nheight: 0;\nmargin: $header-padding-y (- $header-padding-x);\nborder-top: var(--#{$variable-prefix}header-divider-border-width, $header-divider-border-width) solid var(--#{$variable-prefix}header-divider-border-color, $header-divider-border-color);\n}\n// Opinionated: add \"hand\" cursor to non-disabled .navbar-toggler elements\n- &:not(:disabled):not(.c-disabled) {\n+ &:not(:disabled) {\ncursor: pointer;\n}\n}\n",
        "date": "04.01.2021 23:21:48",
        "repo": "coreui/coreui",
        "type": "refactor",
        "chatgpt_zeroshot": "Fix stylelint-disable-line placement in header divider styling"
    },
    {
        "msg": "refactor: remove `c-` prefix and fix icon position",
        "diff": "diff --git a/scss/_icon.scss b/scss/_icon.scss -.c-icon {\n+.icon {\ndisplay: inline-block;\ncolor: inherit;\ntext-align: center;\n+ vertical-align: -.125rem; // Fix the position of icon\nfill: currentColor;\n- &:not(.c-icon-c-s):not(.c-icon-custom-size) {\n+ &:not(.icon-c-s):not(.icon-custom-size) {\n@include icon-size($icon-size-base);\n// TODO: create variable with a range\n@for $i from 2 through 9 {\n- &.c-icon-#{$i}xl {\n+ &.icon-#{$i}xl {\n@include icon-size($i * ($icon-size-xl / 1.5));\n}\n}\n- &.c-icon-xl {\n+ &.icon-xl {\n@include icon-size($icon-size-xl);\n}\n- &.c-icon-lg {\n+ &.icon-lg {\n@include icon-size($icon-size-lg);\n}\n- &.c-icon-sm {\n+ &.icon-sm {\n@include icon-size($icon-size-sm);\n}\n}\n",
        "date": "04.01.2021 23:23:10",
        "repo": "coreui/coreui",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor icon class names and fix position of icon in _icon.scss"
    },
    {
        "msg": "refactor: remove `thead` `border-bottom-color`",
        "diff": "diff --git a/scss/_tables.scss b/scss/_tables.scss // Highlight border color between thead, tbody and tfoot.\n> :not(:last-child) > :last-child > * {\n- border-bottom-color: $table-group-separator-color;\n+ // border-bottom-color: $table-group-separator-color;\n}\n}\n",
        "date": "04.01.2021 23:29:05",
        "repo": "coreui/coreui",
        "type": "refactor",
        "chatgpt_zeroshot": "\"Update border color between thead, tbody, and tfoot in tables\""
    },
    {
        "msg": "refactor: clean-up",
        "diff": "diff --git a/site/layouts/shortcodes/css-vars-docs.html b/site/layouts/shortcodes/css-vars-docs.html {{- /*\n- Usage: `scss-docs name=\"name\" file=\"file/_location.scss\"`\n+ Usage: `css-vars-docs file=\"file/_location.scss\"`\n- Prints everything between `// scss-docs-start \"name\"` and `// scss-docs-end \"name\"`\n- comments in the docs.\n-\n- Optional parameters:\n- strip-default: Remove the ` !default` flag from variable assignments - default: `true`\n+ Find all CSS Variables and print them in the docs.\n*/ -}}\n-{{- $name := .Get \"name\" -}}\n{{- $file := .Get \"file\" -}}\n{{- $strip_default := .Get \"strip-default\" | default \"true\" -}}\n-{{- $start := printf \"// scss-docs-start %s\\n\" $name -}}\n-{{- $end := printf \"\\n// scss-docs-end %s\" $name -}}\n-{{- $regex := printf \"%s(.|\\n)*%s\" $start $end -}}\n-\n-{{- $regex2 := printf \"(--#{\\\\$variable-prefix}[^,]*)\" -}}\n+{{- $regex := printf \"(--#{\\\\$variable-prefix}[^,|)|:]*)\" -}}\n{{- $css := readFile $file -}}\n-{{- $match := (findRE $regex2 $css) | uniq | sort -}}\n+{{- $match := (findRE $regex $css) | uniq | sort -}}\n{{- if (eq (len $match) 0) -}}\n- {{- errorf \"Got no matches for %q in %q! (called in %q)\" $name $file $.Page.Path -}}\n+ {{- errorf \"Got no matches for %q in %q! (called in %q)\" $file $.Page.Path -}}\n{{- end -}}\n-{{- $remove_start := replace (index $match 0) $start \"\" -}}\n{{- $result := delimit $match \"\\n\" -}}\n{{- if (ne $strip_default \"false\") -}}\n",
        "date": "07.01.2021 00:08:18",
        "repo": "coreui/coreui",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor CSS vars shortcode to find and print all CSS variables in the docs."
    },
    {
        "msg": "refactor: consolidated variables in variants",
        "diff": "diff --git a/scss/_buttons.scss b/scss/_buttons.scss // scss-docs-start button-modifiers\n@each $state, $map in $button-variants {\n- $background: var(--#{$variable-prefix}btn-#{$state}-background, map-get($map, \"background\"));\n- $border: var(--#{$variable-prefix}btn-#{$state}-border-color, map-get($map, \"border\"));\n- $color: var(--#{$variable-prefix}btn-#{$state}-color, map-get($map, \"color\"));\n- $hover-background: var(--#{$variable-prefix}btn-#{$state}-hover-background, map-get($map, \"hover-background\"));\n- $hover-border: var(--#{$variable-prefix}btn-#{$state}-hover-border, map-get($map, \"hover-border\"));\n- $hover-color: var(--#{$variable-prefix}btn-#{$state}-hover-color, map-get($map, \"hover-color\"));\n- $active-background: var(--#{$variable-prefix}btn-#{$state}-active-background, map-get($map, \"active-background\"));\n- $active-border: var(--#{$variable-prefix}btn-#{$state}-active-border, map-get($map, \"active-border\"));\n- $active-color: var(--#{$variable-prefix}btn-#{$state}-active-color, map-get($map, \"active-color\"));\n- $disabled-background: var(--#{$variable-prefix}btn-#{$state}-disabled-background, map-get($map, \"disabled-background\"));\n- $disabled-border: var(--#{$variable-prefix}btn-#{$state}-disabled-border, map-get($map, \"disabled-border\"));\n- $disabled-color: var(--#{$variable-prefix}btn-#{$state}-disabled-color, map-get($map, \"disabled-color\"));\n- $shadow: var(--#{$variable-prefix}btn-#{$state}-shadow, map-get($map, \"shadow\"));\n-\n.btn-#{$state} {\n@include button-variant(\n- $background,\n- $border,\n- $color,\n- $hover-background,\n- $hover-border,\n- $hover-color,\n- $active-background,\n- $active-border,\n- $active-color,\n- $disabled-background,\n- $disabled-border,\n- $disabled-color,\n- $shadow\n+ $background: var(--#{$variable-prefix}btn-#{$state}-background, map-get($map, \"background\")),\n+ $border: var(--#{$variable-prefix}btn-#{$state}-border-color, map-get($map, \"border\")),\n+ $color: var(--#{$variable-prefix}btn-#{$state}-color, map-get($map, \"color\")),\n+ $hover-background: var(--#{$variable-prefix}btn-#{$state}-hover-background, map-get($map, \"hover-background\")),\n+ $hover-border: var(--#{$variable-prefix}btn-#{$state}-hover-border, map-get($map, \"hover-border\")),\n+ $hover-color: var(--#{$variable-prefix}btn-#{$state}-hover-color, map-get($map, \"hover-color\")),\n+ $active-background: var(--#{$variable-prefix}btn-#{$state}-active-background, map-get($map, \"active-background\")),\n+ $active-border: var(--#{$variable-prefix}btn-#{$state}-active-border, map-get($map, \"active-border\")),\n+ $active-color: var(--#{$variable-prefix}btn-#{$state}-active-color, map-get($map, \"active-color\")),\n+ $disabled-background: var(--#{$variable-prefix}btn-#{$state}-disabled-background, map-get($map, \"disabled-background\")),\n+ $disabled-border: var(--#{$variable-prefix}btn-#{$state}-disabled-border, map-get($map, \"disabled-border\")),\n+ $disabled-color: var(--#{$variable-prefix}btn-#{$state}-disabled-color, map-get($map, \"disabled-color\")),\n+ $shadow: var(--#{$variable-prefix}btn-#{$state}-shadow, map-get($map, \"shadow\"))\n);\n}\n}\n// scss-docs-start button-outline-modifiers\n@each $state, $map in $button-variants {\n- $color: var(--#{$variable-prefix}btn-outline-#{$state}-color, map-get($map, \"background\"));\n- $color-hover: var(--#{$variable-prefix}btn-outline-#{$state}-hover-color, map-get($map, \"color\"));\n- $active-background: var(--#{$variable-prefix}btn-outline-#{$state}-active-background, map-get($map, \"background\"));\n- $active-border: var(--#{$variable-prefix}btn-outline-#{$state}-active-border, map-get($map, \"background\"));\n- $active-color: var(--#{$variable-prefix}btn-outline-#{$state}-active-color, map-get($map, \"active-color\"));\n- $shadow: var(--#{$variable-prefix}btn-outline-#{$state}-shadow, map-get($map, \"shadow\"));\n-\n.btn-outline-#{$state} {\n@include button-outline-variant(\n- $color,\n- $color-hover,\n- $active-background,\n- $active-border,\n- $active-color,\n- $shadow\n+ $color: var(--#{$variable-prefix}btn-outline-#{$state}-color, map-get($map, \"background\")),\n+ $color-hover: var(--#{$variable-prefix}btn-outline-#{$state}-hover-color, map-get($map, \"color\")),\n+ $active-background: var(--#{$variable-prefix}btn-outline-#{$state}-active-background, map-get($map, \"background\")),\n+ $active-border: var(--#{$variable-prefix}btn-outline-#{$state}-active-border, map-get($map, \"background\")),\n+ $active-color: var(--#{$variable-prefix}btn-outline-#{$state}-active-color, map-get($map, \"active-color\")),\n+ $shadow: var(--#{$variable-prefix}btn-outline-#{$state}-shadow, map-get($map, \"shadow\"))\n);\n}\n}\n",
        "date": "11.01.2021 15:35:39",
        "repo": "coreui/coreui",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor button modifiers and button outline modifiers in _buttons.scss"
    },
    {
        "msg": "refactor: change px to rem in footer, header, and sidebar; reorder transition values in sidebar",
        "diff": "diff --git a/scss/_variables.scss b/scss/_variables.scss @@ -1365,7 +1365,7 @@ $list-group-variants: (\n// Header\n// scss-docs-start header-variables\n-$header-min-height: 56px !default;\n+$header-min-height: 4rem !default;\n$header-padding-y: $spacer / 2 !default;\n$header-padding-x: $spacer / 2 !default;\n$header-brand-font-size: $font-size-lg !default;\n@@ -1405,7 +1405,7 @@ $header-divider-border-color: $header-border-color !default;\n// Subheader\n// scss-docs-start subheader-variables\n-$subheader-min-height: 48px !default;\n+$subheader-min-height: 3rem !default;\n$subheader-padding-y: $spacer / 2 !default;\n$subheader-padding-x: $spacer !default;\n$subheader-border-color: $border-color !default;\n@@ -1491,11 +1491,11 @@ $carousel-dark-control-icon-filter: invert(1) grayscale(100) !default;\n// scss-docs-end carousel-variables\n// scss-docs-start sidebar-variables\n-$sidebar-width: 256px !default;\n+$sidebar-width: 16rem !default;\n$sidebar-widths: (\n- sm: 192px,\n- lg: 320px,\n- xl: 384px\n+ sm: 12rem,\n+ lg: 20rem,\n+ xl: 24rem\n) !default;\n$sidebar-padding-y: 0 !default;\n$sidebar-padding-x: 0 !default;\n@@ -1503,7 +1503,7 @@ $sidebar-color: $high-emphasis-light !default;\n$sidebar-bg: $gray-base !default;\n$sidebar-border-width: 0 !default;\n$sidebar-border-color: transparent !default;\n-$sidebar-transition: box-shadow .075s, transform .15s, margin-left .15s, margin-right .15s, width .15s, z-index 0s ease .15s !default;\n+$sidebar-transition: margin-left .15s, margin-right .15s, box-shadow .075s, transform .15s, width .15s, z-index 0s ease .15s !default;\n$sidebar-reliant-transition: margin .15s !default;\n$sidebar-brand-height: 56px !default;\n@@ -1550,6 +1550,7 @@ $sidebar-nav-icon-font-size: $sidebar-nav-icon-height !default;\n$sidebar-nav-group-bg: rgba(0, 0, 0, .2) !default;\n$sidebar-nav-group-transition: background .15s ease-in-out !default;\n$sidebar-nav-group-items-transition: height .15s ease !default;\n+$sidebar-nav-group-toggle-show-color: $sidebar-nav-link-color !default;\n$sidebar-nav-group-indicator-color: $medium-emphasis-light !default;\n$sidebar-nav-group-indicator: str-replace(url(\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 11 14'%3E%3Cpath fill='#{$sidebar-nav-group-indicator-color}' d='M9.148 2.352l-4.148 4.148 4.148 4.148q0.148 0.148 0.148 0.352t-0.148 0.352l-1.297 1.297q-0.148 0.148-0.352 0.148t-0.352-0.148l-5.797-5.797q-0.148-0.148-0.148-0.352t0.148-0.352l5.797-5.797q0.148-0.148 0.352-0.148t0.352 0.148l1.297 1.297q0.148 0.148 0.148 0.352t-0.148 0.352z'/%3E%3C/svg%3E\"), \"#\", \"%23\") !default;\n@@ -1575,7 +1576,7 @@ $sidebar-toggler-hover-indicator: str-replace(url(\"data:image/svg+xml;c\n// Footer\n// scss-docs-start footer-variables\n-$footer-min-height: 50px !default;\n+$footer-min-height: 3rem !default;\n$footer-padding-y: $spacer / 2 !default;\n$footer-padding-x: $spacer !default;\n$footer-bg: $gray-100 !default;\n",
        "date": "12.01.2021 17:36:27",
        "repo": "coreui/coreui",
        "type": "refactor",
        "chatgpt_zeroshot": "Update header, subheader, sidebar, and footer variables to use rem units for better consistency and responsiveness."
    },
    {
        "msg": "refactor: change margins in stacked avatars",
        "diff": "diff --git a/scss/_avatar.scss b/scss/_avatar.scss display: flex;\n.avatar {\n- margin-right: - ($avatar-width / 2);\n+ margin-right: - ($avatar-width / 2.5);\n&:hover {\nmargin-right: 0;\n@each $width, $value in $avatar-widths {\n.avatar-#{$width} {\n- margin-right: - ($value / 2);\n+ margin-right: - ($value / 2.5);\n}\n}\n}\n",
        "date": "12.01.2021 18:23:27",
        "repo": "coreui/coreui",
        "type": "refactor",
        "chatgpt_zeroshot": "Update avatar margin-right calculation to improve spacing."
    },
    {
        "msg": "refactor: redesign close button",
        "diff": "diff --git a/js/src/sidebar.js b/js/src/sidebar.js @@ -50,6 +50,7 @@ const EVENT_SHOWN = `shown${EVENT_KEY}`\nconst EVENT_CLICK_DATA_API = `click${EVENT_KEY}${DATA_API_KEY}`\nconst EVENT_LOAD_DATA_API = `load${EVENT_KEY}${DATA_API_KEY}`\n+const SELECTOR_DATA_CLOSE = '[data-coreui-close=\"sidebar\"]'\nconst SELECTOR_SIDEBAR = '.sidebar'\nconst SELECTOR_SIDEBAR_TOGGLER = '.sidebar-toggler'\n@@ -342,6 +343,11 @@ class Sidebar extends BaseComponent {\nthis.toggleUnfoldable()\n}\n})\n+\n+ EventHandler.on(this._element, EVENT_CLICK_DATA_API, SELECTOR_DATA_CLOSE, event => {\n+ event.preventDefault()\n+ this.hide()\n+ })\n}\n// Static\n",
        "date": "16.01.2021 20:37:35",
        "repo": "coreui/coreui",
        "type": "refactor",
        "chatgpt_zeroshot": "Add close functionality to sidebar using data attribute."
    },
    {
        "msg": "refactor: update subcomponents heights",
        "diff": "diff --git a/scss/_header.scss b/scss/_header.scss min-height: $header-min-height - (2 * $header-padding-y);\n}\n+ .container:nth-child(1n+2),\n+ .container-fluid:nth-child(1n+2) {\n+ min-height: $subheader-min-height - (2 * $header-padding-y);\n+ }\n+\n&.header-sticky {\nposition: sticky;\ntop: 0;\n",
        "date": "17.01.2021 01:34:37",
        "repo": "coreui/coreui",
        "type": "refactor",
        "chatgpt_zeroshot": "Add min-height styling for subheader containers"
    },
    {
        "msg": "refactor: rename `_sidebarInterface` to `sidebarInterface`",
        "diff": "diff --git a/js/src/sidebar.js b/js/src/sidebar.js @@ -352,7 +352,7 @@ class Sidebar extends BaseComponent {\n// Static\n- static _sidebarInterface(element, config) {\n+ static sidebarInterface(element, config) {\nlet data = Data.getData(element, DATA_KEY)\nconst _config = typeof config === 'object' && config\n@@ -371,7 +371,7 @@ class Sidebar extends BaseComponent {\nstatic jQueryInterface(config) {\nreturn this.each(function () {\n- Sidebar._sidebarInterface(this, config)\n+ Sidebar.sidebarInterface(this, config)\n})\n}\n}\n@@ -385,7 +385,7 @@ class Sidebar extends BaseComponent {\nEventHandler.on(window, EVENT_LOAD_DATA_API, () => {\n// eslint-disable-next-line unicorn/prefer-spread\nArray.from(document.querySelectorAll(SELECTOR_SIDEBAR)).forEach(element => {\n- Sidebar._sidebarInterface(element)\n+ Sidebar.sidebarInterface(element)\n})\n})\n",
        "date": "20.01.2021 12:19:51",
        "repo": "coreui/coreui",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor sidebarInterface method to be static and update references in jQueryInterface and event handler."
    },
    {
        "msg": "refactor: add missing CSS Variables",
        "diff": "diff --git a/scss/_tables.scss b/scss/_tables.scss //\n.table {\n+ --#{$variable-prefix}table-color: #{$table-color};\n--#{$variable-prefix}table-bg: #{$table-bg};\n+ --#{$variable-prefix}table-border-color: #{$table-border-color};\n--#{$variable-prefix}table-striped-color: #{$table-striped-color};\n--#{$variable-prefix}table-striped-bg: #{$table-striped-bg};\n--#{$variable-prefix}table-active-color: #{$table-active-color};\nwidth: 100%;\nmargin-bottom: $spacer;\n- color: $table-color;\n+ color: var(--#{$variable-prefix}table-color);\nvertical-align: $table-cell-vertical-align;\n- border-color: $table-border-color;\n+ border-color: var(--#{$variable-prefix}table-border-color);\n// Target th & td\n// We need the child combinator to prevent styles leaking to nested tables which doesn't have a `.table` class.\n",
        "date": "08.03.2021 16:16:59",
        "repo": "coreui/coreui",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor table variables to use CSS custom properties."
    },
    {
        "msg": "refactor: change `--#{$variable-prefix}alert-bg` to `--#{$variable-prefix}alert-background`",
        "diff": "diff --git a/scss/_alert.scss b/scss/_alert.scss // Generate contextual modifier classes for colorizing the alert.\n@each $state, $map in $alert-variants {\n- $background: var(--#{$variable-prefix}alert-bg, map-get($map, \"background\"));\n+ $background: var(--#{$variable-prefix}alert-background, map-get($map, \"background\"));\n$border: var(--#{$variable-prefix}alert-border-color, map-get($map, \"border\"));\n$color: var(--#{$variable-prefix}alert-color, contrast-ratio-correction(map-get($map, \"color\"), map-get($map, \"background\"), abs($alert-color-scale), $state));\n$link-color: var(--#{$variable-prefix}alert-link-color, map-get($map, \"link-color\"));\n",
        "date": "14.03.2021 17:20:26",
        "repo": "coreui/coreui",
        "type": "refactor",
        "chatgpt_zeroshot": "Fix variable name typo in alert background color generation."
    },
    {
        "msg": "refactor: disable RTL by default",
        "diff": "diff --git a/scss/_variables.scss b/scss/_variables.scss @@ -75,6 +75,7 @@ $colors: (\n) !default;\n// scss-docs-end colors-map\n+// fusv-disable\n$primary-dark: #1f1498 !default;\n$primary: #321fdb !default;\n$primary-50: #988fed !default;\n@@ -114,6 +115,7 @@ $dark-dark: $gray-900 !default;\n$dark: $gray-900 !default;\n$dark-50: shift-color($dark, -70) !default;\n$dark-25: shift-color($dark, -80) !default;\n+// fusv-enable\n// scss-docs-start theme-color-variables\n$primary: $blue !default;\n@@ -279,7 +281,7 @@ $enable-important-utilities: true !default;\n$enable-contrast-ratio-correction: true !default;\n$enable-contrast-ratio-warnings: true !default;\n$enable-ltr: true !default;\n-$enable-rtl: true !default;\n+$enable-rtl: false !default;\n// Set mobile breakpoint\n",
        "date": "15.03.2021 15:27:01",
        "repo": "coreui/coreui",
        "type": "refactor",
        "chatgpt_zeroshot": "Disable RTL support and update primary color in variables"
    },
    {
        "msg": "refactor(Progress): improve syntax",
        "diff": "diff --git a/scss/_progress.scss b/scss/_progress.scss }\n.progress-group-icon {\n- margin: 0 $spacer 0 ($spacer * .25);\nfont-size: $font-size-lg;\n-\n- // @include ltr {\n- // margin: 0 $spacer 0 ($spacer * .25);\n- // }\n- // @include rtl {\n- // margin: 0 ($spacer * .25) 0 $spacer;\n- // }\n-}\n-\n-.progress-group-text {\n- font-size: $font-size-sm;\n- color: $gray-700;\n}\n.progress-group-header {\n",
        "date": "19.03.2021 12:11:01",
        "repo": "coreui/coreui",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor progress group styles in _progress.scss"
    },
    {
        "msg": "refactor(Utilities): update generator",
        "diff": "diff --git a/scss/mixins/_utilities.scss b/scss/mixins/_utilities.scss $properties: append((), $properties);\n}\n- // Use class prefix if present\n- $property-class-prefix: if(map-has-key($utility, prefix), map-get($utility, prefix), null);\n- $property-class-prefix: if($property-class-prefix == null, \"\", $property-class-prefix);\n-\n// Use custom class if present\n$property-class: if(map-has-key($utility, class), map-get($utility, class), nth($properties, 1));\n$property-class: if($property-class == null, \"\", $property-class);\n// Don't prefix if value key is null (eg. with shadow class)\n$property-class-modifier: if($key, if($property-class == \"\" and $infix == \"\", \"\", \"-\") + $key, \"\");\n- // Generate also CSS Variable\n+ // Generate CSS Variable\n$generate-vars: if(map-has-key($utility, vars), map-get($utility, vars), false);\n$generate-only-vars: if(map-has-key($utility, only-vars), map-get($utility, only-vars), false);\n// Generate RTL version\n$generate-rtl: if(map-has-key($utility, rtl), map-get($utility, rtl), false);\n+ // // Add theme prefix\n+ // $theme-prefix: if(map-has-key($utility, theme-prefix), map-get($utility, theme-prefix), false);\n+\n@if map-get($utility, rfs) {\n// Inside the media query\n@if $is-rfs-media-query {\n@if $is-rtl == false {\n/* rtl:begin:remove */\n}\n- .#{$property-class-prefix + $property-class + $infix + $property-class-modifier} {\n+\n+ .#{$property-class + $infix + $property-class-modifier} {\n@each $property in $properties {\n@if $generate-vars == true or $generate-only-vars == true {\n@if $generate-only-vars {\n",
        "date": "22.03.2021 13:52:52",
        "repo": "coreui/coreui",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor utility class generation and CSS variable handling"
    },
    {
        "msg": "refactor: make static `selectMenuItem` method private",
        "diff": "diff --git a/js/src/dropdown.js b/js/src/dropdown.js @@ -356,6 +356,31 @@ class Dropdown extends BaseComponent {\n}\n}\n+ _selectMenuItem(event) {\n+ const items = SelectorEngine.find(SELECTOR_VISIBLE_ITEMS, this._menu).filter(isVisible)\n+\n+ if (!items.length) {\n+ return\n+ }\n+\n+ let index = items.indexOf(event.target)\n+\n+ // Up\n+ if (event.key === ARROW_UP_KEY && index > 0) {\n+ index--\n+ }\n+\n+ // Down\n+ if (event.key === ARROW_DOWN_KEY && index < items.length - 1) {\n+ index++\n+ }\n+\n+ // index is -1 if the first keydown is an ArrowUp\n+ index = index === -1 ? 0 : index\n+\n+ items[index].focus()\n+ }\n+\n// Static\nstatic dropdownInterface(element, config) {\n@@ -449,31 +474,6 @@ class Dropdown extends BaseComponent {\n}\n}\n- static selectMenuItem(parent, event) {\n- const items = SelectorEngine.find(SELECTOR_VISIBLE_ITEMS, parent).filter(isVisible)\n-\n- if (!items.length) {\n- return\n- }\n-\n- let index = items.indexOf(event.target)\n-\n- // Up\n- if (event.key === ARROW_UP_KEY && index > 0) {\n- index--\n- }\n-\n- // Down\n- if (event.key === ARROW_DOWN_KEY && index < items.length - 1) {\n- index++\n- }\n-\n- // index is -1 if the first keydown is an ArrowUp\n- index = index === -1 ? 0 : index\n-\n- items[index].focus()\n- }\n-\nstatic getParentFromElement(element) {\nreturn getElementFromSelector(element) || element.parentNode\n}\n@@ -525,7 +525,7 @@ class Dropdown extends BaseComponent {\nreturn\n}\n- Dropdown.selectMenuItem(Dropdown.getParentFromElement(this), event)\n+ Dropdown.getInstance(getToggleButton())._selectMenuItem(event)\n}\n}\n",
        "date": "11.04.2021 17:34:46",
        "repo": "coreui/coreui",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor selectMenuItem method to be an instance method and call it from dropdownInterface."
    },
    {
        "msg": "refactor: simplify responsive behaviour",
        "diff": "diff --git a/js/src/sidebar.js b/js/src/sidebar.js @@ -38,7 +38,7 @@ const DefaultType = {\nconst CLASS_NAME_BACKDROP = 'sidebar-backdrop'\nconst CLASS_NAME_FADE = 'fade'\n-const CLASS_NAME_HIDE = 'hide'\n+// const CLASS_NAME_HIDE = 'hide'\nconst CLASS_NAME_SHOW = 'show'\nconst CLASS_NAME_SIDEBAR = 'sidebar'\nconst CLASS_NAME_SIDEBAR_NARROW = 'sidebar-narrow'\n@@ -96,9 +96,9 @@ class Sidebar extends BaseComponent {\nshow() {\nEventHandler.trigger(this._element, EVENT_SHOW)\n- if (this._element.classList.contains(CLASS_NAME_HIDE)) {\n- this._element.classList.remove(CLASS_NAME_HIDE)\n- }\n+ // if (this._element.classList.contains(CLASS_NAME_HIDE)) {\n+ // this._element.classList.remove(CLASS_NAME_HIDE)\n+ // }\nif (REGEXP_SIDEBAR_SELF_HIDING.test(this._element.className)) {\nthis._element.classList.add(CLASS_NAME_SHOW)\n@@ -132,7 +132,7 @@ class Sidebar extends BaseComponent {\nthis._element.classList.remove(CLASS_NAME_SHOW)\n}\n- this._element.classList.add(CLASS_NAME_HIDE)\n+ // this._element.classList.add(CLASS_NAME_HIDE)\nif (this._isMobile()) {\nthis._removeBackdrop()\n",
        "date": "12.04.2021 18:24:29",
        "repo": "coreui/coreui",
        "type": "refactor",
        "chatgpt_zeroshot": "Comment out code related to hiding sidebar in Sidebar class"
    },
    {
        "msg": "refactor(color-scheme): reduce complexity",
        "diff": "diff --git a/scss/mixins/_color-scheme.scss b/scss/mixins/_color-scheme.scss // scss-docs-start mixin-color-scheme\n@mixin color-scheme($name) {\n- @if $name == dark {\n- @media (prefers-color-scheme: dark) {\n- @content;\n- }\n- } @else if $name == light {\n- @media (prefers-color-scheme: light) {\n- @content;\n- }\n- } @else {\n@media (prefers-color-scheme: #{$name}) {\n@content;\n}\n}\n-}\n// scss-docs-end mixin-color-scheme\n",
        "date": "10.04.2021 21:16:45",
        "repo": "coreui/coreui",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor color-scheme mixin to support custom color schemes"
    },
    {
        "msg": "refactor: simplify responsive behavior",
        "diff": "diff --git a/js/src/sidebar.js b/js/src/sidebar.js @@ -38,7 +38,6 @@ const DefaultType = {\nconst CLASS_NAME_BACKDROP = 'sidebar-backdrop'\nconst CLASS_NAME_FADE = 'fade'\n-// const CLASS_NAME_HIDE = 'hide'\nconst CLASS_NAME_SHOW = 'show'\nconst CLASS_NAME_SIDEBAR = 'sidebar'\nconst CLASS_NAME_SIDEBAR_NARROW = 'sidebar-narrow'\n@@ -69,7 +68,6 @@ class Sidebar extends BaseComponent {\nconstructor(element, config) {\nsuper(element)\nthis._config = this._getConfig(config)\n- // this._breakpoint = this._getBreakpoint()\nthis._show = this._isVisible()\nthis._mobile = this._isMobile()\nthis._overlaid = this._isOverlaid()\n@@ -96,10 +94,6 @@ class Sidebar extends BaseComponent {\nshow() {\nEventHandler.trigger(this._element, EVENT_SHOW)\n- // if (this._element.classList.contains(CLASS_NAME_HIDE)) {\n- // this._element.classList.remove(CLASS_NAME_HIDE)\n- // }\n-\nif (REGEXP_SIDEBAR_SELF_HIDING.test(this._element.className)) {\nthis._element.classList.add(CLASS_NAME_SHOW)\n}\n@@ -132,8 +126,6 @@ class Sidebar extends BaseComponent {\nthis._element.classList.remove(CLASS_NAME_SHOW)\n}\n- // this._element.classList.add(CLASS_NAME_HIDE)\n-\nif (this._isMobile()) {\nthis._removeBackdrop()\n}\n@@ -156,7 +148,7 @@ class Sidebar extends BaseComponent {\n}\ntoggle() {\n- if (this._show) {\n+ if (this._isVisible()) {\nthis.hide()\nreturn\n}\n@@ -240,29 +232,6 @@ class Sidebar extends BaseComponent {\nreturn Boolean(window.getComputedStyle(this._element, null).getPropertyValue('--cui-is-mobile'))\n}\n- _isIOS() {\n- const iOSDevices = [\n- 'iPad Simulator',\n- 'iPhone Simulator',\n- 'iPod Simulator',\n- 'iPad',\n- 'iPhone',\n- 'iPod'\n- ]\n-\n- const platform = Boolean(navigator.platform)\n-\n- if (platform) {\n- while (iOSDevices.length) {\n- if (navigator.platform === iOSDevices.pop()) {\n- return true\n- }\n- }\n- }\n-\n- return false\n- }\n-\n_isNarrow() {\nreturn this._element.classList.contains(CLASS_NAME_SIDEBAR_NARROW)\n}\n",
        "date": "15.04.2021 13:21:00",
        "repo": "coreui/coreui",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor sidebar.js to remove unused code and improve readability"
    },
    {
        "msg": "refactor: update color variables",
        "diff": "diff --git a/scss/_variables.scss b/scss/_variables.scss @@ -77,55 +77,55 @@ $colors: (\n// fusv-disable\n$primary-dark: #1f1498 !default;\n-$primary: #321fdb !default;\n+$primary-base: #321fdb !default;\n$primary-50: #988fed !default;\n$primary-25: #ccc7f6 !default;\n$secondary-dark: #212233 !default;\n-$secondary: #9da5b1 !default;\n+$secondary-base: #9da5b1 !default;\n$secondary-50: #9da5b1 !default;\n$secondary-25: #ced2d8 !default;\n$success-dark: #1b9e3e !default;\n-$success: #2eb85c !default;\n+$success-base: #2eb85c !default;\n$success-50: #96dbad !default;\n$success-25: #cbedd6 !default;\n$info-dark: #2982cc !default;\n-$info: #39f !default;\n+$info-base: #39f !default;\n$info-50: #80c6ff !default;\n$info-25: #c0e6ff !default;\n$warning-dark: #f6960b !default;\n-$warning: #f9b115 !default;\n+$warning-base: #f9b115 !default;\n$warning-50: #fcd88a !default;\n$warning-25: #feecc5 !default;\n$danger-dark: #d93737 !default;\n-$danger: #e55353 !default;\n+$danger-base: #e55353 !default;\n$danger-50: #f2a9a9 !default;\n$danger-25: #f9d4d4 !default;\n$light-dark: $gray-100 !default;\n-$light: $gray-100 !default;\n-$light-50: shift-color($light, -70) !default;\n-$light-25: shift-color($light, -80) !default;\n+$light-base: $gray-100 !default;\n+$light-50: shift-color($light-base, -70) !default;\n+$light-25: shift-color($light-base, -80) !default;\n$dark-dark: $gray-900 !default;\n-$dark: $gray-900 !default;\n-$dark-50: shift-color($dark, -70) !default;\n-$dark-25: shift-color($dark, -80) !default;\n+$dark-base: $gray-900 !default;\n+$dark-50: shift-color($dark-base, -70) !default;\n+$dark-25: shift-color($dark-base, -80) !default;\n// fusv-enable\n// scss-docs-start theme-color-variables\n-$primary: $blue !default;\n-$secondary: $gray-600 !default;\n-$success: $green !default;\n-$info: $cyan !default;\n-$warning: $yellow !default;\n-$danger: $red !default;\n-$light: $gray-100 !default;\n-$dark: $gray-900 !default;\n+$primary: $primary-base !default;\n+$secondary: $secondary-base !default;\n+$success: $success-base !default;\n+$info: $info-base !default;\n+$warning: $warning-base !default;\n+$danger: $danger-base !default;\n+$light: $light-base !default;\n+$dark: $dark-base !default;\n// scss-docs-end theme-color-variables\n// scss-docs-start theme-colors-map\n@@ -279,7 +279,7 @@ $enable-negative-margins: false !default;\n$enable-deprecation-messages: true !default;\n$enable-important-utilities: true !default;\n$enable-contrast-ratio-correction: true !default;\n-$enable-contrast-ratio-warnings: true !default;\n+$enable-contrast-ratio-warnings: false !default;\n$enable-ltr: true !default;\n$enable-rtl: false !default;\n",
        "date": "26.04.2021 17:11:12",
        "repo": "coreui/coreui",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor color variables and update primary, secondary, success, info, warning, danger, light, and dark base colors. Disable contrast ratio warnings."
    },
    {
        "msg": "refactor(docs): Added form file input variables\nFile input belongs to this page in doc, added variables in last.",
        "diff": "diff --git a/site/content/docs/5.0/forms/form-control.md b/site/content/docs/5.0/forms/form-control.md @@ -144,3 +144,7 @@ Learn more about [support for datalist elements](https://caniuse.com/datalist).\n{{< scss-docs name=\"form-label-variables\" file=\"scss/_variables.scss\" >}}\n{{< scss-docs name=\"form-text-variables\" file=\"scss/_variables.scss\" >}}\n+\n+`$form-file-*` are for file input.\n+\n+{{< scss-docs name=\"form-file-variables\" file=\"scss/_variables.scss\" >}}\n",
        "date": "05.05.2021 20:11:49",
        "repo": "coreui/coreui",
        "type": "refactor",
        "chatgpt_zeroshot": "Add variables for file input in form control styling"
    },
    {
        "msg": "refactor: improve syntax",
        "diff": "diff --git a/js/src/sidebar.js b/js/src/sidebar.js @@ -28,13 +28,9 @@ const DATA_KEY = 'coreui.sidebar'\nconst EVENT_KEY = `.${DATA_KEY}`\nconst DATA_API_KEY = '.data-api'\n-const Default = {\n- //\n-}\n+const Default = {}\n-const DefaultType = {\n- //\n-}\n+const DefaultType = {}\nconst CLASS_NAME_BACKDROP = 'sidebar-backdrop'\nconst CLASS_NAME_FADE = 'fade'\n@@ -206,17 +202,11 @@ class Sidebar extends BaseComponent {\n_getConfig(config) {\nconfig = {\n- ...this.constructor.Default,\n+ ...Default,\n...Manipulator.getDataAttributes(this._element),\n- ...config\n+ ...(typeof config === 'object' ? config : {})\n}\n-\n- typeCheckConfig(\n- NAME,\n- config,\n- this.constructor.DefaultType\n- )\n-\n+ typeCheckConfig(NAME, config, DefaultType)\nreturn config\n}\n",
        "date": "07.05.2021 13:00:52",
        "repo": "coreui/coreui",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor sidebar.js by removing unnecessary Default and DefaultType objects and updating getConfig method."
    },
    {
        "msg": "refactor: update scrollbars styles for Windows browsers",
        "diff": "diff --git a/scss/sidebar/_sidebar-nav.scss b/scss/sidebar/_sidebar-nav.scss overflow-y: auto;\nlist-style: none;\n+ // Firefox scrollbars\n+ @-moz-document url-prefix() {\n+ scrollbar-width: thin;\n+ }\n+\n+ // Chrome, Edge scrollbars\n+\n+ /* total width */\n+ &::-webkit-scrollbar {\n+ width: 8px;\n+ background-color: transparent;\n+ }\n+\n+ /* background of the scrollbar except button or resizer */\n+ &::-webkit-scrollbar-track {\n+ background-color: transparent;\n+ }\n+\n+ /* scrollbar itself */\n+ &::-webkit-scrollbar-thumb {\n+ background-color: rgba(0, 0, 0, .375);\n+ @include border-radius(8px);\n+ }\n+\n+ /* set button(top and bottom of the scrollbar) */\n+ &::-webkit-scrollbar-button {\n+ display: none;\n+ }\n+\n.nav-title {\npadding: $sidebar-nav-title-padding-y $sidebar-nav-title-padding-x;\nmargin-top: $sidebar-nav-title-margin-top;\n",
        "date": "26.05.2021 00:27:26",
        "repo": "coreui/coreui",
        "type": "refactor",
        "chatgpt_zeroshot": "Style scrollbars for different browsers in sidebar navigation."
    },
    {
        "msg": "refactor: add RTL styling for inputs",
        "diff": "diff --git a/scss/_reboot.scss b/scss/_reboot.scss @@ -554,17 +554,16 @@ legend {\n// 1. A few input types should stay LTR\n// See https://rtlstyling.com/posts/rtl-styling#form-inputs\n-// 2. RTL only output\n-// See https://rtlcss.com/learn/usage-guide/control-directives/#raw\n-/* rtl:raw:\n+*[dir=\"rtl\"] {\n[type=\"tel\"],\n[type=\"url\"],\n[type=\"email\"],\n[type=\"number\"] {\ndirection: ltr;\n}\n-*/\n+}\n+\n// Remove the inner padding in Chrome and Safari on macOS.\n",
        "date": "23.06.2021 17:06:24",
        "repo": "coreui/coreui",
        "type": "refactor",
        "chatgpt_zeroshot": "Fix input types to stay LTR and remove inner padding in Chrome and Safari on macOS"
    },
    {
        "msg": "refactor(Sidebar): remove unused imports; remove duplicated functions",
        "diff": "diff --git a/js/src/sidebar.js b/js/src/sidebar.js import {\ndefineJQueryPlugin,\n- emulateTransitionEnd,\n- getTransitionDurationFromElement,\nreflow,\ntypeCheckConfig\n} from './util/index'\n-import Data from './dom/data'\nimport EventHandler from './dom/event-handler'\nimport Manipulator from './dom/manipulator'\nimport BaseComponent from './base-component'\n@@ -108,17 +105,6 @@ class Sidebar extends BaseComponent {\nthis._showBackdrop()\n}\n- this._queueCallback(() => {\n- if (this._isVisible() === true) {\n- this._show = true\n- if (this._isMobile() || this._isOverlaid()) {\n- this._addClickOutListener()\n- }\n-\n- EventHandler.trigger(this._element, EVENT_SHOWN)\n- }\n- })\n-\nconst complete = () => {\nif (this._isVisible() === true) {\nthis._show = true\n",
        "date": "23.06.2021 17:14:12",
        "repo": "coreui/coreui",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor sidebar.js to remove unnecessary code and improve readability"
    },
    {
        "msg": "refactor(Sidebar): update responsive clasess",
        "diff": "diff --git a/scss/sidebar/_sidebar.scss b/scss/sidebar/_sidebar.scss }\n}\n- @include media-breakpoint-up($mobile-breakpoint) {\n- &.hide {\n- &:not(.sidebar-end){\n- @include ltr-rtl(\"margin-left\", calc(-1 * var(--#{$variable-prefix}sidebar-width)));\n- ~ * {\n- --#{$variable-prefix}sidebar-occupy-start: 0;\n- }\n- }\n- &.sidebar-end {\n- @include ltr-rtl(\"margin-right\", calc(-1 * var(--#{$variable-prefix}sidebar-width)));\n- ~ * {\n- --#{$variable-prefix}sidebar-occupy-end: 0;\n- }\n- }\n- }\n- }\n-\n&[class*=\"bg-\"] {\nborder-color: rgba($black, .1);\n}\n}\n}\n+ @include media-breakpoint-up($mobile-breakpoint) {\n+ &.hide {\n+ &:not(.sidebar-end){\n+ @include ltr-rtl(\"margin-left\", calc(-1 * var(--#{$variable-prefix}sidebar-width)));\n+ ~ * {\n+ --#{$variable-prefix}sidebar-occupy-start: 0;\n+ }\n+ }\n+ &.sidebar-end {\n+ @include ltr-rtl(\"margin-right\", calc(-1 * var(--#{$variable-prefix}sidebar-width)));\n+ ~ * {\n+ --#{$variable-prefix}sidebar-occupy-end: 0;\n+ }\n+ }\n+ }\n+ }\n+\n&.sidebar-fixed {\n@include media-breakpoint-up($mobile-breakpoint) {\nposition: fixed;\n",
        "date": "13.10.2021 13:17:05",
        "repo": "coreui/coreui",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor sidebar styles for mobile breakpoints and add support for sidebar-fixed class."
    },
    {
        "msg": "refactor(Tables): update borders",
        "diff": "diff --git a/scss/_tables.scss b/scss/_tables.scss }\n// Highlight border color between thead, tbody and tfoot.\n- > :not(:first-child) {\n- border-top: (2 * $table-border-width) solid $table-group-separator-color;\n- }\n+ // > :not(:first-child) {\n+ // border-top: (2 * $table-border-width) solid $table-group-separator-color;\n+ // }\n}\n",
        "date": "28.11.2021 18:03:19",
        "repo": "coreui/coreui",
        "type": "refactor",
        "chatgpt_zeroshot": "Commented out border color highlighting between thead, tbody, and tfoot in tables."
    },
    {
        "msg": "refactor: change DATA_KEY",
        "diff": "diff --git a/js/src/util/focustrap.js b/js/src/util/focustrap.js @@ -20,7 +20,7 @@ const DefaultType = {\n}\nconst NAME = 'focustrap'\n-const DATA_KEY = 'bs.focustrap'\n+const DATA_KEY = 'coreui.focustrap'\nconst EVENT_KEY = `.${DATA_KEY}`\nconst EVENT_FOCUSIN = `focusin${EVENT_KEY}`\nconst EVENT_KEYDOWN_TAB = `keydown.tab${EVENT_KEY}`\n",
        "date": "28.11.2021 20:50:29",
        "repo": "coreui/coreui",
        "type": "refactor",
        "chatgpt_zeroshot": "Update data key in focustrap.js to 'coreui.focustrap'"
    },
    {
        "msg": "refactor: update selectors",
        "diff": "diff --git a/js/src/util/component-functions.js b/js/src/util/component-functions.js @@ -12,7 +12,7 @@ const enableDismissTrigger = (component, method = 'hide') => {\nconst clickEvent = `click.dismiss${component.EVENT_KEY}`\nconst name = component.NAME\n- EventHandler.on(document, clickEvent, `[data-bs-dismiss=\"${name}\"]`, function (event) {\n+ EventHandler.on(document, clickEvent, `[data-coreui-dismiss=\"${name}\"]`, function (event) {\nif (['A', 'AREA'].includes(this.tagName)) {\nevent.preventDefault()\n}\n",
        "date": "28.11.2021 20:50:53",
        "repo": "coreui/coreui",
        "type": "refactor",
        "chatgpt_zeroshot": "Update dismiss trigger selector to use data-coreui-dismiss instead of data-bs-dismiss"
    },
    {
        "msg": "refactor: update `isVisible` function",
        "diff": "diff --git a/js/src/util/index.js b/js/src/util/index.js @@ -146,7 +146,26 @@ const isVisible = element => {\nreturn false\n}\n- return getComputedStyle(element).getPropertyValue('visibility') === 'visible'\n+ const elementIsVisible = getComputedStyle(element).getPropertyValue('visibility') === 'visible'\n+ // Handle `details` element as its content may falsie appear visible when it is closed\n+ const closedDetails = element.closest('details:not([open])')\n+\n+ if (!closedDetails) {\n+ return elementIsVisible\n+ }\n+\n+ if (closedDetails !== element) {\n+ const summary = element.closest('summary')\n+ if (summary && summary.parentNode !== closedDetails) {\n+ return false\n+ }\n+\n+ if (summary === null) {\n+ return false\n+ }\n+ }\n+\n+ return elementIsVisible\n}\nconst isDisabled = element => {\n",
        "date": "04.03.2022 18:23:14",
        "repo": "coreui/coreui",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor isVisible function to handle details element visibility correctly"
    },
    {
        "msg": "refactor: update `reflect` function",
        "diff": "diff --git a/scss/mixins/_ltr-rtl.scss b/scss/mixins/_ltr-rtl.scss }\n@function reflect($element) {\n- @if type-of($element) == string {\n- @if str-index($element, \"left\") {\n- @return str-replace($element, \"left\", \"right\");\n- }\n- @if str-index($element, \"right\") {\n- @return str-replace($element, \"right\", \"left\");\n+ $string: #{$element};\n+ @if str-index($string, \"left\") {\n+ @return str-replace($string, \"left\", \"right\");\n}\n+ @if str-index($string, \"right\") {\n+ @return str-replace($string, \"right\", \"left\");\n}\n- @return $element;\n+ @return unquote($string);\n}\n@mixin ltr-rtl($property, $value, $property-rtl: null, $value-rtl: null, $important: null) {\n}\n}\n-@mixin ltr-rtl-value-only($property, $value, $value-rtl, $important: null) {\n+@mixin ltr-rtl-value-only($property, $value, $value-rtl: null, $important: null) {\n$value-reflected: reflect($value);\n@if $enable-ltr and $enable-rtl {\n#{$property}: $value $important;\n}\n@include rtl() {\n+ @if $value-rtl {\n#{$property}: $value-rtl $important;\n+ } @else {\n+ #{$property}: $value-reflected $important;\n+ }\n}\n}\n@else {\n@if $enable-rtl {\n+ @if $value-rtl {\n#{$property}: $value-rtl $important;\n+ } @else {\n+ #{$property}: $value-reflected $important;\n}\n- @else {\n+ } @else {\n#{$property}: $value $important;\n}\n}\n",
        "date": "10.03.2022 13:51:35",
        "repo": "coreui/coreui",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor ltr-rtl mixins to handle string values and add support for value-rtl parameter"
    },
    {
        "msg": "refactor(Offcanvas): add CSS vars support",
        "diff": "diff --git a/scss/_offcanvas.scss b/scss/_offcanvas.scss display: flex;\nflex-direction: column;\nmax-width: 100%;\n- color: $offcanvas-color;\n+ color: var(--#{$variable-prefix}offcanvas-color, $offcanvas-color);\nvisibility: hidden;\n- background-color: $offcanvas-bg-color;\n+ background-color: var(--#{$variable-prefix}offcanvas-bg-color, $offcanvas-bg-color);\nbackground-clip: padding-box;\noutline: 0;\n@include box-shadow($offcanvas-box-shadow);\n}\n.offcanvas-backdrop {\n- @include overlay-backdrop($zindex-offcanvas-backdrop, $offcanvas-backdrop-bg, $offcanvas-backdrop-opacity);\n+ @include overlay-backdrop($zindex-offcanvas-backdrop, var(--#{$variable-prefix}offcanvas-backdrop-bg, $offcanvas-backdrop-bg), $offcanvas-backdrop-opacity);\n}\n.offcanvas-header {\ntop: 0;\n@include ltr-rtl(\"left\", 0);\nwidth: $offcanvas-horizontal-width;\n- @include ltr-rtl(\"border-right\", $offcanvas-border-width solid $offcanvas-border-color);\n+ @include ltr-rtl(\"border-right\", $offcanvas-border-width solid var(--#{$variable-prefix}offcanvas-border-color, $offcanvas-border-color));\n@include ltr-rtl-value-only(\"transform\", translateX(-100%), translateX(100%));\n}\ntop: 0;\n@include ltr-rtl(\"right\", 0);\nwidth: $offcanvas-horizontal-width;\n- @include ltr-rtl(\"border-left\", $offcanvas-border-width solid $offcanvas-border-color);\n+ @include ltr-rtl(\"border-left\", $offcanvas-border-width solid var(--#{$variable-prefix}offcanvas-border-color, $offcanvas-border-color));\n@include ltr-rtl-value-only(\"transform\", translateX(100%), translateX(-100%));\n}\nleft: 0;\nheight: $offcanvas-vertical-height;\nmax-height: 100%;\n- border-bottom: $offcanvas-border-width solid $offcanvas-border-color;\n+ border-bottom: $offcanvas-border-width solid var(--#{$variable-prefix}offcanvas-border-color, $offcanvas-border-color);\ntransform: translateY(-100%);\n}\nleft: 0;\nheight: $offcanvas-vertical-height;\nmax-height: 100%;\n- border-top: $offcanvas-border-width solid $offcanvas-border-color;\n+ border-top: $offcanvas-border-width solid var(--#{$variable-prefix}offcanvas-border-color, $offcanvas-border-color);\ntransform: translateY(100%);\n}\n",
        "date": "03.04.2022 18:51:17",
        "repo": "coreui/coreui",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor offcanvas styles to use CSS variables for color and background color."
    },
    {
        "msg": "refactor: remove unnecessary ui prop def",
        "diff": "diff --git a/packages/veui-theme-one/components/AlertBox.js b/packages/veui-theme-one/components/AlertBox.js @@ -8,10 +8,5 @@ config.defaults({\nsuccess: 'check-circle-o-large',\ninfo: 'info-circle-o-large',\nerror: 'cross-circle-o-large'\n- },\n- ui: {\n- type: {\n- values: ['success', 'error', 'info']\n- }\n}\n}, 'alertbox')\n",
        "date": "28.05.2018 11:59:29",
        "repo": "ecomfe/veui",
        "type": "refactor",
        "chatgpt_zeroshot": "Remove redundant UI type values in AlertBox component configuration"
    },
    {
        "msg": "refactor: rename state to status for Progress, clamp value",
        "diff": "diff --git a/packages/veui-theme-one/components/progress.less b/packages/veui-theme-one/components/progress.less }\n}\n- &-state {\n+ &-status {\n&-complete {\ncolor: @veui-text-color-normal;\n}\n",
        "date": "29.05.2018 23:57:14",
        "repo": "ecomfe/veui",
        "type": "refactor",
        "chatgpt_zeroshot": "Rename state to status in progress component styling"
    },
    {
        "msg": "refactor: tweak event callback params for Pagination redirect and Steps",
        "diff": "diff --git a/packages/veui/src/components/Pagination.vue b/packages/veui/src/components/Pagination.vue @@ -231,7 +231,7 @@ export default {\nmethods: {\nhandleRedirect (page, event) {\nif (page !== this.page) {\n- this.$emit('redirect', {page, event})\n+ this.$emit('redirect', page, event)\n}\n},\n",
        "date": "27.06.2018 17:21:20",
        "repo": "ecomfe/veui",
        "type": "refactor",
        "chatgpt_zeroshot": "Fix emit method parameters in Pagination component"
    },
    {
        "msg": "refactor: simplify class name",
        "diff": "diff --git a/packages/veui-theme-one/components/uploader.less b/packages/veui-theme-one/components/uploader.less & &-button-remove {\nfloat: right;\n+ margin-right: 4px;\ncolor: @veui-gray-color-2;\nopacity: 0;\n.centered-line(20px);\n}\n}\n- &-list-transition-enter,\n- &-list-transition-leave-to {\n+ &-list-enter,\n+ &-list-leave-to {\nopacity: 0;\n}\n- .veui-uploader-list-transition-leave-active {\n+\n+ & &-list-leave-active {\nposition: absolute;\n}\n",
        "date": "29.06.2018 11:09:38",
        "repo": "ecomfe/veui",
        "type": "refactor",
        "chatgpt_zeroshot": "Update styles for uploader component in veui-theme-one"
    },
    {
        "msg": "refactor: remove unused variables",
        "diff": "diff --git a/packages/veui/src/directives/outside.js b/packages/veui/src/directives/outside.js @@ -61,7 +61,7 @@ function getElementsByRefs (refs, context) {\nreturn elements\n}\n-function parseParams (el, arg, modifiers, value, context) {\n+function parseParams (el, arg, modifiers, value) {\nlet refs = arg ? arg.split(',') : []\nlet handler\nlet trigger = find(TRIGGER_TYPES, triggerType => triggerType in modifiers) || 'click'\n@@ -192,7 +192,7 @@ function clear (el) {\n})\n}\n-function refresh (el, { value, arg, modifiers, oldValue }, vnode) {\n+function refresh (el, { value, arg, modifiers }, vnode) {\nconst params = parseParams(el, arg, modifiers, value, vnode.context)\nlet { trigger, refs, excludeSelf, delay } = params\nlet key = getBindingKey(trigger)\n",
        "date": "02.10.2018 23:12:10",
        "repo": "ecomfe/veui",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor parseParams and refresh functions in outside directive"
    },
    {
        "msg": "refactor: pass formData as the third argument to rule.validate",
        "diff": "diff --git a/packages/veui/src/managers/rule.js b/packages/veui/src/managers/rule.js @@ -31,7 +31,7 @@ export class Rule {\n}\n}\n- validate (val, rules) {\n+ validate (val, rules, formData) {\nif (!rules || !rules.length) {\nreturn true\n}\n@@ -39,7 +39,7 @@ export class Rule {\nrules = Array.isArray(rules) ? rules : [rules]\nlet results = rules.map(rule => {\nlet validator = this.ruleValidators[rule.name]\n- if (!validator.validate(val, rule.value)) {\n+ if (!validator.validate(val, rule.value, formData)) {\nlet realMessage = rule.message || validator.message\nreturn {\nname: rule.name,\n",
        "date": "27.09.2018 14:46:59",
        "repo": "ecomfe/veui",
        "type": "refactor",
        "chatgpt_zeroshot": "Add formData parameter to validate method in Rule manager"
    },
    {
        "msg": "refactor: use more semantic variable names, update changelog",
        "diff": "diff --git a/packages/veui/src/managers/rule.js b/packages/veui/src/managers/rule.js @@ -5,6 +5,7 @@ import max from './rules/max'\nimport min from './rules/min'\nimport numeric from './rules/numeric'\nimport pattern from './rules/pattern'\n+import type from './type'\nimport { isObject, isFunction } from 'lodash'\n/**\n@@ -31,15 +32,16 @@ export class Rule {\n}\n}\n- validate (val, rules, formData) {\n+ validate (val, rules, context) {\nif (!rules || !rules.length) {\nreturn true\n}\nrules = Array.isArray(rules) ? rules : [rules]\n+ let contextData = type.clone(context)\nlet results = rules.map(rule => {\nlet validator = this.ruleValidators[rule.name]\n- if (!validator.validate(val, rule.value, formData)) {\n+ if (!validator.validate(val, rule.value, contextData)) {\nlet realMessage = rule.message || validator.message\nreturn {\nname: rule.name,\n",
        "date": "14.10.2018 13:06:15",
        "repo": "ecomfe/veui",
        "type": "refactor",
        "chatgpt_zeroshot": "Add type validation to rule manager and update context parameter in validate method"
    },
    {
        "msg": "refactor: use const reference",
        "diff": "diff --git a/packages/veui/src/mixins/ui.js b/packages/veui/src/mixins/ui.js @@ -3,6 +3,8 @@ import warn from '../utils/warn'\nimport config from '../managers/config'\nimport { compact, uniq, find, includes, get, merge, keys, pickBy } from 'lodash'\n+const UNKNOWN_KEY = '$unknown'\n+\nexport default {\nprops: {\nui: String\n@@ -41,7 +43,7 @@ export default {\nresult[name] = token\n}\n} else {\n- result.$unknown.push(token)\n+ result[UNKNOWN_KEY].push(token)\n}\nreturn result\n},\n@@ -54,7 +56,7 @@ export default {\n}\nreturn result\n}, {\n- $unknown: []\n+ [UNKNOWN_KEY]: []\n})\n)\n},\n@@ -63,7 +65,7 @@ export default {\n},\nuiData () {\nlet { uiConfig = {}, uiProps } = this\n- return keys(uiProps).filter(name => name !== '$unknown').reduce((result, name) => {\n+ return keys(uiProps).filter(name => name !== UNKNOWN_KEY).reduce((result, name) => {\nlet data = get(uiConfig[name], ['data', uiProps[name]], {})\nmerge(result, data)\nreturn result\n@@ -92,7 +94,7 @@ export default {\n// merge ui & $parent's inheritedUi\nlet { uiProps = {} } = this\nlet overrides = pickBy(uiProps, (val, key) => {\n- return key !== '$unknown' && (val !== 'default' || val === true)\n+ return key !== UNKNOWN_KEY && (val !== 'default' || val === true)\n})\nlet { inheritedUiProps = {} } = this.$parent || {}\nlet props = { ...inheritedUiProps, ...overrides }\n@@ -104,7 +106,7 @@ export default {\nreturn props[key]\n})\n.filter(val => val !== 'default' && val !== false)\n- .concat(uiProps.$unknown)\n+ .concat(uiProps[UNKNOWN_KEY])\n.join(' ') || null\n}\n},\n",
        "date": "25.11.2018 10:49:13",
        "repo": "ecomfe/veui",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor UI mixin to use constant for unknown key"
    },
    {
        "msg": "refactor: update Uploader demo, use more specific API from `bytes`",
        "diff": "diff --git a/packages/veui/src/components/Uploader.vue b/packages/veui/src/components/Uploader.vue @@ -403,7 +403,7 @@ import focusable from '../mixins/focusable'\nimport i18n from '../mixins/i18n'\nimport config from '../managers/config'\nimport { stringifyQuery } from '../utils/helper'\n-import bytes from 'bytes'\n+import { parse, format } from 'bytes'\nimport warn from '../utils/warn'\nconfig.defaults({\n@@ -821,7 +821,7 @@ export default {\n})\n},\nvalidateFileSize (fileSize) {\n- return !this.maxSize || !fileSize || fileSize <= bytes.parse(this.maxSize)\n+ return !this.maxSize || !fileSize || fileSize <= parse(this.maxSize)\n},\nuploadFiles () {\nthis.fileList.forEach(file => {\n@@ -1008,7 +1008,7 @@ export default {\nthis.$refs.label.appendChild(this.$refs.input)\n},\nconvertSizeUnit (size) {\n- return bytes(size, {decimalPlaces: 1})\n+ return format(size, { decimalPlaces: 1 })\n},\nparseData (data) {\nif (typeof data === 'object') {\n",
        "date": "01.02.2019 15:05:24",
        "repo": "ecomfe/veui",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor Uploader component to use parse and format functions from bytes module"
    },
    {
        "msg": "refactor: remove unnecessary me = this",
        "diff": "diff --git a/packages/veui/src/components/FilterPanel.vue b/packages/veui/src/components/FilterPanel.vue @@ -89,8 +89,7 @@ export default {\n}\n},\ncreated () {\n- let me = this\n- this.debounceSearch = debounce(() => me.search(), 200)\n+ this.debounceSearch = debounce(() => this.search(), 200)\n},\nbeforeDestroy () {\nthis.debounceSearch.cancel()\n",
        "date": "09.02.2019 11:15:17",
        "repo": "ecomfe/veui",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor debounceSearch function in FilterPanel.vue"
    },
    {
        "msg": "refactor: use computed data to see whether to use router link",
        "diff": "diff --git a/packages/veui/src/components/Link.vue b/packages/veui/src/components/Link.vue <slot/>\n</component>\n<router-link\n- v-else-if=\"$router && !native\"\n+ v-else-if=\"useRouter\"\n:class=\"klass\"\n:to=\"to\"\n:rel=\"realRel\"\n@@ -73,6 +73,9 @@ export default {\n).join(' ')\n}\nreturn this.rel\n+ },\n+ useRouter () {\n+ return this.$router && !this.native\n}\n},\nmethods: {\n",
        "date": "31.05.2019 21:16:59",
        "repo": "ecomfe/veui",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor Link component to use useRouter method for conditional rendering."
    },
    {
        "msg": "refactor: remove useless prop `focusClass`",
        "diff": "diff --git a/packages/veui/src/components/Autocomplete/Autocomplete.vue b/packages/veui/src/components/Autocomplete/Autocomplete.vue @@ -106,10 +106,6 @@ export default {\nmixins: [ui, input, overlay],\nprops: {\n...AutocompleteBase.props,\n- focusClass: {\n- type: String,\n- default: 'veui-autocomplete-focus'\n- },\nsuggestTrigger: {\ntype: [String, Array],\ndefault: 'input'\n",
        "date": "28.05.2019 19:33:04",
        "repo": "ecomfe/veui",
        "type": "refactor",
        "chatgpt_zeroshot": "Remove focusClass prop and update suggestTrigger prop default value in Autocomplete.vue"
    },
    {
        "msg": "refactor: minor tweak to part fn exp",
        "diff": "diff --git a/packages/veui-theme-dls/components/NumberInput.js b/packages/veui-theme-dls/components/NumberInput.js @@ -32,12 +32,8 @@ config.defaults(\nspinner: ''\n},\nicons: {\n- increase ({ style }) {\n- return ICON_MAP[style].increase\n- },\n- decrease ({ style }) {\n- return ICON_MAP[style].decrease\n- }\n+ increase: ({ style }) => ICON_MAP[style].increase,\n+ decrease: ({ style }) => ICON_MAP[style].decrease\n}\n},\n'numberinput'\n",
        "date": "09.12.2019 17:28:33",
        "repo": "ecomfe/veui",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor NumberInput component icons to use arrow function syntax."
    },
    {
        "msg": "refactor: remove unnecessary template wrapper",
        "diff": "diff --git a/packages/veui/src/components/Form/Fieldset.vue b/packages/veui/src/components/Form/Fieldset.vue }\"\nrole=\"group\"\nv-bind=\"attrs\"\n->\n- <template\n- v-if=\"$slots.label\"\n- slot=\"label\"\n>\n<slot name=\"label\"/>\n- </template>\n<slot/>\n- <template\n- v-if=\"$slots.tip\"\n- slot=\"tip\"\n- >\n<slot name=\"tip\"/>\n- </template>\n</veui-field>\n</template>\n",
        "date": "20.12.2019 18:30:33",
        "repo": "ecomfe/veui",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor Fieldset component to remove unnecessary template elements"
    },
    {
        "msg": "refactor: refactor invalid message slot",
        "diff": "diff --git a/packages/veui/src/components/Uploader.vue b/packages/veui/src/components/Uploader.vue <slot name=\"desc\"/>\n</span>\n<span :class=\"$c('uploader-error')\">\n- <template v-if=\"error.typeInvalid\">\n- <slot name=\"type-invalid\">\n- <veui-icon :name=\"icons.alert\"/>{{ t('fileTypeInvalid') }}\n- </slot>\n- </template>\n- <template v-if=\"error.sizeInvalid\">\n- <slot name=\"size-invalid\">\n- <veui-icon :name=\"icons.alert\"/>{{ t('fileSizeInvalid') }}\n- </slot>\n- </template>\n- <template v-if=\"error.countOverflow\">\n- <slot name=\"count-overflow\">\n- <veui-icon :name=\"icons.alert\"/>{{ t('tooManyFiles') }}\n- </slot>\n- </template>\n- <template v-if=\"error.customValidationInvalid\">\n- <slot name=\"custom-validation-invalid\">\n- <veui-icon :name=\"icons.alert\"/>{{ customValidationMessage }}\n+ <slot\n+ name=\"invalid\"\n+ :error=\"error\"\n+ >\n+ <veui-icon\n+ v-if=\"validationMessage\"\n+ :name=\"icons.alert\"\n+ />{{\n+ validationMessage\n+ }}\n</slot>\n- </template>\n</span>\n</div>\n<transition-group\nv-if=\"type === 'image'\"\n:class=\"$c('uploader-error')\"\n>\n- <template v-if=\"error.typeInvalid\">\n- <slot name=\"type-invalid\">\n- <veui-icon :name=\"icons.alert\"/>{{ t('fileTypeInvalid') }}\n- </slot>\n- </template>\n- <template v-if=\"error.sizeInvalid\">\n- <slot name=\"size-invalid\">\n- <veui-icon :name=\"icons.alert\"/>{{ t('fileSizeInvalid') }}\n- </slot>\n- </template>\n- <template v-if=\"error.countOverflow\">\n- <slot name=\"count-overflow\">\n- <veui-icon :name=\"icons.alert\"/>{{ t('tooManyFiles') }}\n- </slot>\n- </template>\n- <template v-if=\"error.customValidationInvalid\">\n- <slot name=\"custom-validation-invalid\">\n- <veui-icon :name=\"icons.alert\"/>{{ customValidationMessage }}\n+ <slot\n+ name=\"invalid\"\n+ :error=\"error\"\n+ >\n+ <veui-icon\n+ v-if=\"validationMessage\"\n+ :name=\"icons.alert\"\n+ />{{\n+ validationMessage\n+ }}\n</slot>\n- </template>\n</span>\n<iframe\nv-if=\"requestMode === 'iframe' && submitting\"\n@@ -642,6 +624,18 @@ export default {\n(file.status === 'success' || !file.status) && !file.toBeUploaded\n)\n.map(file => omit(file, ['status', 'toBeUploaded']))\n+ },\n+ validationMessage () {\n+ let messageMap = {\n+ typeInvalid: this.t('fileTypeInvalid'),\n+ sizeInvalid: this.t('fileSizeInvalid'),\n+ countOverflow: this.t('tooManyFiles'),\n+ customValidationInvalid: this.customValidationMessage\n+ }\n+ return Object.keys(this.error)\n+ .map(key => (this.error[key] ? messageMap[key] : ''))\n+ .filter(i => !!i)\n+ .join(', ')\n}\n},\nwatch: {\n",
        "date": "14.11.2019 21:22:54",
        "repo": "ecomfe/veui",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor Uploader component to use a single slot for displaying validation errors."
    },
    {
        "msg": "refactor: make span component functional",
        "diff": "diff --git a/packages/veui/src/components/Span.vue b/packages/veui/src/components/Span.vue -<template>\n-<span\n- :class=\"$c('span')\"\n- :ui=\"realUi\"\n->\n- <slot/>\n-</span>\n-</template>\n-\n<script>\n-import prefix from '../mixins/prefix'\n-import ui from '../mixins/ui'\n+import { prefixify } from '../mixins/prefix'\nexport default {\nname: 'veui-span',\n- mixins: [prefix, ui]\n+ uiTypes: ['transparent'],\n+ functional: true,\n+ render (h, { data, children }) {\n+ return h(\n+ 'span',\n+ {\n+ ...data,\n+ class: {\n+ [prefixify('span')]: true\n+ }\n+ },\n+ children\n+ )\n+ }\n}\n</script>\n",
        "date": "19.05.2020 14:25:47",
        "repo": "ecomfe/veui",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor Span component to use functional rendering and add transparent UI type."
    },
    {
        "msg": "refactor: treat anchor falsy `container` as window",
        "diff": "diff --git a/packages/veui/test/unit/specs/components/Anchor.spec.js b/packages/veui/test/unit/specs/components/Anchor.spec.js @@ -63,12 +63,12 @@ describe('components/Anchor', function () {\nwrapper.destroy()\n})\n- it('should handle scroll correctly when container is window', async () => {\n+ it('should handle scroll correctly when container is window(or falsy)', async () => {\nlet wrapper = mount(\n{\n...componentOptions,\ntemplate: `<div style=\"padding-top: 50px;\">\n- <veui-anchor :items=\"coffees\" container=\"@window\"/>\n+ <veui-anchor :items=\"coffees\"/>\n<veui-anchor class=\"anchor-two\" :items=\"coffees\" :sticky=\"false\"/>\n<div style=\"height: 200vh;\"/>\n</div>`\n",
        "date": "08.07.2020 19:26:08",
        "repo": "ecomfe/veui",
        "type": "refactor",
        "chatgpt_zeroshot": "Update Anchor component test to handle scroll correctly when container is window or falsy"
    },
    {
        "msg": "refactor: table uses controllable",
        "diff": "diff --git a/packages/veui/src/components/Table/_TableBody.js b/packages/veui/src/components/Table/_TableBody.js @@ -20,7 +20,7 @@ export default {\nlet key = table.keyField\n? item[table.keyField]\n: table.realKeys[index]\n- let expanded = table.localExpanded.indexOf(key) !== -1\n+ let expanded = table.realExpanded.indexOf(key) !== -1\nlet rows = [<Row index={index} expanded={expanded} />]\nif (table.expandable && expanded) {\n",
        "date": "30.07.2020 11:18:59",
        "repo": "ecomfe/veui",
        "type": "refactor",
        "chatgpt_zeroshot": "Fix issue with expanded rows in TableBody component"
    },
    {
        "msg": "refactor: update number-input state management and use controllable",
        "diff": "diff --git a/packages/veui/test/unit/specs/components/NumberInput.spec.js b/packages/veui/test/unit/specs/components/NumberInput.spec.js @@ -139,7 +139,7 @@ describe('components/NumberInput', () => {\nexpect(input.element.value).to.equal('3')\n})\n- it('should handle decimalPlace prop correctly', async () => {\n+ it('should handle `decimalPlace` prop correctly', async () => {\nlet wrapper = mount(NumberInput, {\npropsData: {\ndecimalPlace: 2\n@@ -148,17 +148,19 @@ describe('components/NumberInput', () => {\n})\nlet input = wrapper.find('input.veui-input-input')\n- input.setValue(2.333)\n- wrapper.find('input').trigger('blur')\n+ input.setValue('2')\n+ wrapper.find('input').trigger('change')\n+ await wrapper.vm.$nextTick()\n+ expect(input.element.value).to.equal('2.00')\n+\n+ input.setValue('2.333')\n+ wrapper.find('input').trigger('change')\nawait wrapper.vm.$nextTick()\nexpect(input.element.value).to.equal('2.33')\n})\nit('should handle change event', done => {\nlet wrapper = mount(NumberInput, {\n- propsData: {\n- value: null\n- },\nsync: false\n})\n@@ -170,4 +172,22 @@ describe('components/NumberInput', () => {\nwrapper.find('button.veui-number-input-step-up').trigger('click')\n})\n+\n+ it('should make prop `value` fully controlled and violate `decimalPlace` for respecting prop `value`', async () => {\n+ let wrapper = mount(NumberInput, {\n+ propsData: {\n+ value: 2.123,\n+ decimalPlace: 2\n+ },\n+ sync: false\n+ })\n+\n+ let input = wrapper.find('input.veui-input-input')\n+ expect(input.element.value).to.equal('2.123')\n+\n+ input.setValue('2')\n+ wrapper.find('input').trigger('change')\n+ await wrapper.vm.$nextTick()\n+ expect(input.element.value).to.equal('2.123')\n+ })\n})\n",
        "date": "31.07.2020 21:19:52",
        "repo": "ecomfe/veui",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor handling of decimalPlace prop in NumberInput component"
    },
    {
        "msg": "refactor: use `expandedKey` instead of implicitly relying on `close`",
        "diff": "diff --git a/packages/veui/src/mixins/key-select.js b/packages/veui/src/mixins/key-select.js @@ -116,9 +116,7 @@ const useKeySelect = ({ useNativeFocus, handlers, expandedKey = 'expanded' }) =>\ncase 'Escape':\ncase 'Left':\ncase 'ArrowLeft':\n- if (typeof this.close === 'function') {\n- this.close()\n- }\n+ this[expandedKey] = false\nbreak\ncase 'Up':\ncase 'ArrowUp':\n",
        "date": "04.11.2020 14:23:50",
        "repo": "ecomfe/veui",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor key-select mixin to close expanded item using property assignment."
    },
    {
        "msg": "refactor: rename some methods, remove unused code",
        "diff": "diff --git a/packages/veui-theme-dls/components/uploader.less b/packages/veui-theme-dls/components/uploader.less }\n}\n}\n- &-preview-dialog {\n- &-media {\n- min-width: @dls-uploader-media-preview-min-width;\n- max-width: @dls-uploader-media-preview-max-width;\n- }\n- }\n&-desc {\ncolor: @dls-uploader-helper-text-font-color;\n",
        "date": "10.11.2020 14:21:47",
        "repo": "ecomfe/veui",
        "type": "refactor",
        "chatgpt_zeroshot": "Remove media preview styles from uploader component."
    },
    {
        "msg": "refactor: extract magic number into a const for table",
        "diff": "diff --git a/packages/veui/src/components/Table/Table.vue b/packages/veui/src/components/Table/Table.vue @@ -161,6 +161,7 @@ const FIXED_PRIORITY = {\n}\nconst DEFAULT_FIXED_COL_WIDTH = 120\n+const SHADOW_WIDTH = 20\nexport default {\nname: 'veui-table',\n@@ -175,7 +176,12 @@ export default {\ndirectives: {\nresize\n},\n- mixins: [prefix, ui, i18n, colgroup, useControllable([\n+ mixins: [\n+ prefix,\n+ ui,\n+ i18n,\n+ colgroup,\n+ useControllable([\n{\nprop: 'expanded',\nget (val) {\n@@ -194,10 +200,7 @@ export default {\nprop: 'selected',\nget (val) {\nlet ctl = this.isControlled('selected')\n- if (\n- (ctl && this.validateSelected(this.selected)) ||\n- !ctl\n- ) {\n+ if ((ctl && this.validateSelected(this.selected)) || !ctl) {\nval = normalizeArray(val)\nreturn intersection(val, this.realKeys)\n}\n@@ -216,7 +219,8 @@ export default {\n}\n}\n}\n- ])],\n+ ])\n+ ],\nprops: {\ndata: {\ntype: Array,\n@@ -404,8 +408,8 @@ export default {\nshadowOffset () {\nif (!this.supportSticky) {\nreturn {\n- left: 20,\n- right: 20\n+ left: SHADOW_WIDTH,\n+ right: SHADOW_WIDTH\n}\n}\nlet row = this.headerGrid[this.headerGrid.length - 1]\n@@ -421,13 +425,13 @@ export default {\nrow\n.slice(0, leftEnd + 1)\n.map(({ width }) => width)\n- .concat(this.offsetLeft, 20)\n+ .concat(this.offsetLeft, SHADOW_WIDTH)\n),\nright: sumWidths(\nrow\n.slice(rightStart)\n.map(({ width }) => width)\n- .concat(this.hasFixedRight ? this.gutterWidth : [], 20)\n+ .concat(this.hasFixedRight ? this.gutterWidth : [], SHADOW_WIDTH)\n)\n}\n},\n@@ -578,8 +582,11 @@ export default {\nvalue.splice(value.indexOf(key), 1)\n}\n} else {\n- if (!selected &&\n- intersection(this.realSelected, this.disabledSelectedKeys).length === this.realSelected.length) {\n+ if (\n+ !selected &&\n+ intersection(this.realSelected, this.disabledSelectedKeys).length ===\n+ this.realSelected.length\n+ ) {\nselected = true\n}\nvalue = selected\n",
        "date": "27.11.2020 14:56:59",
        "repo": "ecomfe/veui",
        "type": "refactor",
        "chatgpt_zeroshot": "Add SHADOW_WIDTH constant and refactor mixins in Table component"
    },
    {
        "msg": "refactor: use slot/slot-scope syntax for consistency",
        "diff": "diff --git a/packages/veui/src/components/Uploader.vue b/packages/veui/src/components/Uploader.vue :expanded.sync=\"expandedControlDropdowns[index]\"\n@click=\"handleMediaAction(file, index, $event)\"\n>\n- <template v-slot:trigger=\"{ props, handlers }\">\n+ <template\n+ slot=\"trigger\"\n+ slot-scope=\"{ props, handlers }\"\n+ >\n<label\nv-if=\"control.name === 'replace'\"\n:key=\"control.name\"\ntrigger=\"hover\"\n@click=\"handleMediaAction(file, index, $event)\"\n>\n- <template v-slot:trigger=\"{ props, handlers }\">\n+ <template\n+ slot=\"trigger\"\n+ slot-scope=\"{ props, handlers }\"\n+ >\n<label\nv-if=\"control.name === 'replace'\"\n:key=\"control.name\"\n@click=\"handleMediaEntry\"\n>\n<template\n- v-slot:trigger=\"{\n+ slot=\"trigger\"\n+ slot-scope=\"{\nprops: triggerProps,\nhandlers: triggerHandlers\n}\"\n@@ -830,12 +837,14 @@ export default {\n},\nrealAccept () {\nif (this.extensions) {\n- return this.extensions.map(extension => {\n+ return this.extensions\n+ .map(extension => {\nif (extension.indexOf('.') !== 0) {\nreturn `.${extension}`\n}\nreturn extension\n- }).join(',')\n+ })\n+ .join(',')\n}\nif (this.accept) {\nreturn this.accept\n@@ -991,7 +1000,11 @@ export default {\nlet newFiles = [...files]\nlet countFiles = this.fileList.length + newFiles.length\n- if (!this.isReplacing && this.maxCount !== 1 && countFiles > this.maxCount) {\n+ if (\n+ !this.isReplacing &&\n+ this.maxCount !== 1 &&\n+ countFiles > this.maxCount\n+ ) {\ntoast.error(this.t('tooManyFiles'))\nthis.$emit('invalid', {\nerrors: [\n@@ -1145,9 +1158,11 @@ export default {\nextensions = []\n}\n- return acceptExtention === '*' &&\n+ return (\n+ acceptExtention === '*' &&\nitem.indexOf('/') > -1 &&\n(extensions.indexOf(extension) > -1 || !extensions.length)\n+ )\n})\n},\nvalidateSize (fileSize) {\n@@ -1401,7 +1416,10 @@ export default {\ndefaultControls = [\n{\nname: 'preview',\n- icon: file.type === 'image' ? this.icons.previewImage : this.icons.previewVideo,\n+ icon:\n+ file.type === 'image'\n+ ? this.icons.previewImage\n+ : this.icons.previewVideo,\ndisabled: false,\nlabel: this.t('preview')\n}\n",
        "date": "08.12.2020 11:01:57",
        "repo": "ecomfe/veui",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor Uploader.vue component to improve slot usage and code readability"
    },
    {
        "msg": "refactor: improve code for uploader",
        "diff": "diff --git a/packages/veui/src/components/Uploader.vue b/packages/veui/src/components/Uploader.vue @@ -1051,12 +1051,13 @@ export default {\nreturn\n}\n- if (this.requestMode === 'iframe' && this.autoupload) {\n+ if (this.autoupload) {\n+ if (this.requestMode === 'iframe') {\nthis.submit(newFile)\n- }\n- if (this.requestMode !== 'iframe' && this.autoupload) {\n+ } else {\nthis.uploadFile(newFile)\n}\n+ }\n} else {\nthis.fileList =\nthis.realOrder === 'desc'\n@@ -1067,14 +1068,17 @@ export default {\nthis.fileList = this.fileList.slice(-1)\n}\n- if (this.requestMode === 'iframe' && this.autoupload) {\n- newFiles[0].toBeUploaded && this.submit(newFiles[0])\n+ if (this.autoupload) {\n+ if (this.requestMode === 'iframe') {\n+ if (newFiles[0].toBeUploaded) {\n+ this.submit(newFiles[0])\n}\n- if (this.requestMode !== 'iframe' && this.autoupload) {\n+ } else {\nthis.uploadFiles()\n}\n}\n}\n+ }\n)\n},\nvalidateFile (file) {\n",
        "date": "11.01.2021 23:44:50",
        "repo": "ecomfe/veui",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor autoupload logic in Uploader.vue"
    },
    {
        "msg": "refactor: avoid relying on function arguments during map",
        "diff": "diff --git a/packages/veui/src/mixins/upload.js b/packages/veui/src/mixins/upload.js @@ -13,7 +13,7 @@ export const sharedProps = [\n'requestMode'\n]\n-const computed = sharedProps.reduce(function (ret, key) {\n+const computed = sharedProps.reduce((ret, key) => {\nret[key] = function () {\nreturn this.options[key]\n}\n",
        "date": "23.06.2021 18:47:55",
        "repo": "ecomfe/veui",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor computed property function to use arrow function syntax"
    },
    {
        "msg": "refactor: use new handle feature for dialog",
        "diff": "diff --git a/packages/veui/src/components/Dialog.vue b/packages/veui/src/components/Dialog.vue @afterclose=\"handleAfterClose\"\n>\n<div\n- ref=\"content\"\n+ v-drag.translate=\"{\n+ disabled: !draggable,\n+ containment: '@window',\n+ handle: 'head',\n+ ready: dragReady\n+ }\"\nv-outside=\"outside\"\n:class=\"$c('dialog-content')\"\ntabindex=\"-1\"\n@keydown.esc=\"handleEscape\"\n>\n<div\n- v-drag:content.translate=\"{\n- draggable,\n- containment: '@window',\n- ready: dragReady\n- }\"\n+ ref=\"head\"\n:class=\"{\n[$c('dialog-content-head')]: true,\n[$c('dialog-draggable')]: draggable\n",
        "date": "28.06.2021 21:38:15",
        "repo": "ecomfe/veui",
        "type": "refactor",
        "chatgpt_zeroshot": "Add drag functionality to Dialog component"
    },
    {
        "msg": "refactor: add code guard",
        "diff": "diff --git a/packages/veui/src/components/Textarea.vue b/packages/veui/src/components/Textarea.vue @@ -280,9 +280,11 @@ export default {\n}\n},\nupdateMeasurer () {\n- if (this.$refs.input) {\n- this.measurerContentWidth = this.$refs.input.clientWidth\n+ let { input } = this.$refs\n+ if (!input) {\n+ return\n}\n+ this.measurerContentWidth = input.clientWidth\nthis.$nextTick(() => {\nif (this.realMaxlength !== null) {\n",
        "date": "27.04.2021 21:34:55",
        "repo": "ecomfe/veui",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor updateMeasurer method in Textarea.vue"
    },
    {
        "msg": "refactor: add ui `stable` for check-button-group and radio-button-group",
        "diff": "diff --git a/packages/veui/demo/cases/CheckButtonGroup.vue b/packages/veui/demo/cases/CheckButtonGroup.vue v-model=\"pickedWithSimple\"\n:items=\"dataWithExclusive\"\n:disabled=\"disabled\"\n- ui=\"simple s\"\n- :style=\"{\n- '--dls-checkbox-button-stable': 'initial'\n- }\"\n+ ui=\"simple s stable\"\n/>\n</p>\n<p>value: {{ pickedWithSimple }}</p>\n",
        "date": "08.10.2021 11:12:31",
        "repo": "ecomfe/veui",
        "type": "refactor",
        "chatgpt_zeroshot": "Update CheckButtonGroup.vue to include stable style for simple UI."
    },
    {
        "msg": "refactor: update pageSizes for pagination",
        "diff": "diff --git a/packages/veui/src/components/Pagination.vue b/packages/veui/src/components/Pagination.vue @@ -152,8 +152,8 @@ import tooltip from '../directives/tooltip'\nconfig.defaults(\n{\n- pageSize: 30,\n- pageSizes: [30, 50, 100]\n+ pageSize: 20,\n+ pageSizes: [20, 50, 100]\n},\n'pagination'\n)\n",
        "date": "19.11.2021 12:40:17",
        "repo": "ecomfe/veui",
        "type": "refactor",
        "chatgpt_zeroshot": "Update default page size to 20 and adjust available page sizes in Pagination.vue"
    },
    {
        "msg": "refactor: rename getScrollportOffset to getScrollContainerOffset",
        "diff": "diff --git a/packages/veui/src/utils/dom.js b/packages/veui/src/utils/dom.js @@ -165,7 +165,7 @@ export function isOverflow (elem) {\n)\n}\n-function getScrollportOffset (elem) {\n+function getScrollContainerOffset (elem) {\nlet container = getScrollParent(elem)\nif (!container) {\n@@ -213,7 +213,7 @@ export function scrollIntoView (elem, forceToTop) {\nreturn\n}\n- let { top } = getScrollportOffset(elem)\n+ let { top } = getScrollContainerOffset(elem)\nif (forceToTop) {\ncontainer.scrollTop = top\n",
        "date": "29.11.2021 11:06:11",
        "repo": "ecomfe/veui",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor scrollport offset function name to getScrollContainerOffset"
    },
    {
        "msg": "refactor: remove unnecessary branch",
        "diff": "diff --git a/packages/veui-loader/src/index.js b/packages/veui-loader/src/index.js @@ -35,13 +35,13 @@ export default async function (content) {\nnew MagicString(content),\ncomponent,\nloaderOptions,\n- path => {\n- return new Promise(resolve => {\n+ (path) => {\n+ return new Promise((resolve) => {\ntry {\nthis.resolve(\nthis.rootContext || this.options.context,\npath,\n- err => {\n+ (err) => {\nif (err) {\nresolve(false)\nreturn\n@@ -100,7 +100,7 @@ async function patchComponent (content, component, options, resolve) {\nlet parts = getParts(component, options)\nawait Promise.all(\n- [...parts.script, ...parts.style].map(async module => {\n+ [...parts.script, ...parts.style].map(async (module) => {\nmodule.valid = await assurePath(module.path, resolve)\n})\n)\n@@ -120,7 +120,7 @@ function patchComponentSync (content, component, options, resolveSync) {\nlet parts = getParts(component, options)\nlet modules = [...parts.script, ...parts.style]\n- modules.forEach(module => {\n+ modules.forEach((module) => {\nmodule.valid = assurePathSync(module.path, resolveSync)\n})\n@@ -158,9 +158,9 @@ function getParts (component, options) {\nif (!Array.isArray(locale)) {\nlocale = [locale]\n}\n- locale = locale.filter(l => typeof l === 'string')\n+ locale = locale.filter((l) => typeof l === 'string')\nmodules = locale\n- .map(l => {\n+ .map((l) => {\nreturn {\npackage: alias,\npath: `locale/${l}`,\n@@ -171,10 +171,10 @@ function getParts (component, options) {\n.concat(modules)\nglobal = locale\n- .map(l => {\n+ .map((l) => {\nreturn { path: `${alias}/locale/${l}/common.js` }\n})\n- .concat(global.map(path => ({ path })))\n+ .concat(global.map((path) => ({ path })))\n}\nreturn modules.reduce(\n@@ -210,7 +210,7 @@ function getParts (component, options) {\n* @returns {MagicString} Patched content\n*/\nfunction patchContent (content, parts) {\n- Object.keys(parts).forEach(type => {\n+ Object.keys(parts).forEach((type) => {\nlet paths = parts[type].filter(({ valid }) => valid).map(({ path }) => path)\nreturn patchType(content, type, paths)\n})\n@@ -225,7 +225,7 @@ function patchContent (content, parts) {\n*/\nfunction pushPart (parts, file) {\nlet ext = getExtname(file.path)\n- let type = Object.keys(EXT_TYPES).find(key => {\n+ let type = Object.keys(EXT_TYPES).find((key) => {\nreturn EXT_TYPES[key].includes(ext)\n})\nparts[type.toLowerCase()].push(file)\n@@ -237,10 +237,7 @@ function pushPart (parts, file) {\n* @returns {string} File extension\n*/\nfunction getExtname (file) {\n- return path\n- .extname(file)\n- .replace(/\\./g, '')\n- .toLowerCase()\n+ return path.extname(file).replace(/\\./g, '').toLowerCase()\n}\nconst RE_SCRIPT = /<script(?:\\s+[^>]*)?>/i\n@@ -254,10 +251,10 @@ const RE_SCRIPT = /<script(?:\\s+[^>]*)?>/i\n*/\nfunction patchType (content, type, peerPaths) {\nconst code = content.toString()\n- let normalizedPaths = peerPaths.map(path => slash(normalize(path)))\n+ let normalizedPaths = peerPaths.map((path) => slash(normalize(path)))\nswitch (type) {\ncase 'script':\n- let scriptImports = normalizedPaths.map(path => `import '${path}'\\n`)\n+ let scriptImports = normalizedPaths.map((path) => `import '${path}'\\n`)\ncode.replace(RE_SCRIPT, (match, offset) => {\nconst replacement = `${match}\\n${scriptImports.join('')}`\ncontent.overwrite(offset, offset + match.length, replacement)\n@@ -265,7 +262,7 @@ function patchType (content, type, peerPaths) {\n})\nbreak\ncase 'style':\n- let styleImports = normalizedPaths.map(path => {\n+ let styleImports = normalizedPaths.map((path) => {\nlet langStr = ''\nlet ext = getExtname(path)\nif (ext !== 'css') {\n@@ -380,8 +377,7 @@ function resolveComponent (file, options) {\n// not VEUI package\n!isVEUI ||\n// is dep but dep name isn't correct\n- (isVEUI &&\n- path.basename(path.dirname(pkg)) === 'node_modules' &&\n+ (path.basename(path.dirname(pkg)) === 'node_modules' &&\npath.basename(pkg) !== alias)\n) {\nreturn null\n",
        "date": "28.02.2022 18:23:39",
        "repo": "ecomfe/veui",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor code to use arrow functions and improve code readability"
    },
    {
        "msg": "refactor: use template for drawer, fix test case",
        "diff": "diff --git a/packages/veui/test/unit/specs/components/Drawer.spec.js b/packages/veui/test/unit/specs/components/Drawer.spec.js @@ -219,10 +219,10 @@ describe('components/Drawer', function () {\n.find('.veui-dialog-content-foot .veui-button:first-child')\n.trigger('click')\n- await wait(400)\n+ await wait(200)\nexpect(vm.open).to.equal(true)\n- await wait(500)\n+ await wait(200)\nexpect(vm.open).to.equal(false)\nwrapper.destroy()\n",
        "date": "21.05.2022 16:04:39",
        "repo": "ecomfe/veui",
        "type": "refactor",
        "chatgpt_zeroshot": "\"Reduce wait time in Drawer.spec.js tests\""
    },
    {
        "msg": "refactor: rename loadData to load for cascader",
        "diff": "diff --git a/packages/veui/src/components/Cascader/Cascader.vue b/packages/veui/src/components/Cascader/Cascader.vue :select-mode=\"selectMode\"\n:column-width=\"keyword ? null : columnWidth\"\n:expanded=\"realExpanded\"\n- :load-data=\"loadData && !keyword ? loadAndSaveData : null\"\n+ :load=\"load && !keyword ? loadAndSaveData : null\"\n@update:expanded=\"handlePaneUpdateExpanded\"\n@select=\"handlePaneSelect\"\n@keydown.native=\"!searchable && handleCascaderKeydown($event)\"\n@@ -240,7 +240,7 @@ export default {\nreturn ['complete', 'simple'].indexOf(val) >= 0\n}\n},\n- loadData: Function,\n+ load: Function,\ninline: Boolean,\nmax: Number\n},\n@@ -405,9 +405,12 @@ export default {\n}\n},\nmethods: {\n- loadAndSaveData (option, trigger) {\n- return Promise.resolve(this.loadData(option, trigger)).then((loaded) => {\n- this.$set(this.loadedData, getKey(option), loaded)\n+ loadAndSaveData (context) {\n+ return Promise.resolve(this.load(context)).then((loaded) => {\n+ if (loaded) {\n+ this.$set(this.loadedData, getKey(context.parent), loaded)\n+ }\n+ return loaded\n})\n},\nhandleCascaderKeydown (e) {\n",
        "date": "14.06.2022 19:48:36",
        "repo": "ecomfe/veui",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor Cascader component to use 'load' instead of 'loadData' for data loading. Update method signature and implementation accordingly."
    },
    {
        "msg": "refactor(generator): enhance config for ignored files on updates",
        "diff": "diff --git a/packages/generator-nitro/generators/app/index.js b/packages/generator-nitro/generators/app/index.js @@ -99,7 +99,6 @@ module.exports = class extends Generator {\n]).then((answers) => {\nthis._update = answers.update;\nthis.options.skipInstall = true;\n- this.options.exampleCode = false;\nif (!this._update) {\nreturn;\n@@ -111,6 +110,7 @@ module.exports = class extends Generator {\nthis.options.viewExt = config.viewExtension || config.templateEngine ? config.templateEngine : this.options.viewExt;\nthis.options.templateEngine = config.templateEngine || this.options.templateEngine;\nthis.options.clientTpl = typeof config.clientTemplates === 'boolean' ? config.clientTemplates : this.options.clientTpl;\n+ this.options.exampleCode = typeof config.exampleCode === 'boolean' ? config.exampleCode : this.options.exampleCode;\nthis.options.exporter = typeof config.exporter === 'boolean' ? config.exporter : this.options.exporter;\nthis.options.name = _.kebabCase(this.options.name);\n@@ -215,8 +215,16 @@ module.exports = class extends Generator {\n'.npmignore',\n];\nconst ignoresOnUpdate = [\n- // files to ignore on updating projects\n+ // files and directories to ignore on updating projects\n'config/local.js',\n+ 'project/blueprints/',\n+ 'project/routes/',\n+ 'public/',\n+ 'src/patterns/',\n+ 'src/proto/css/',\n+ 'src/proto/js/',\n+ 'src/shared/',\n+ 'src/views/',\n];\nconst clientTplFiles = [\n// files only for this.options.clientTpl===true\n@@ -291,7 +299,7 @@ module.exports = class extends Generator {\n// exclude update ignores\nif (this._update) {\n- if (_.indexOf(ignoresOnUpdate, file) !== -1) {\n+ if (ignoresOnUpdate.some((v) => file.indexOf(v) >= 0) ) {\nreturn;\n}\n}\n",
        "date": "28.03.2019 08:14:21",
        "repo": "namics/generator-nitro",
        "type": "refactor",
        "chatgpt_zeroshot": "Add example code option and update project ignores on updating projects"
    },
    {
        "msg": "refactor: only spoof UA for google accounts requests to retain old working Chrome spoofs for chromecast",
        "diff": "diff --git a/src/index.js b/src/index.js @@ -114,21 +114,19 @@ app.setAppUserModelId('com.marshallofsound.gpmdp.core');\n}\nmainWindow = new BrowserWindow(generateBrowserConfig());\n- let newUserAgent = 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:73.0) Gecko/20100101 Firefox/73.0';\n+ const signInUserAgent = Settings.get('overrideSignInUserAgent', 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:73.0) Gecko/20100101 Firefox/73.0');\n- // Spoof the user agent to bypass the sign in issue (#3545)\n+ // Spoof the user agent, this allows for future work arounds\nif (Settings.get('overrideUserAgent')) {\n- newUserAgent = Settings.get('overrideUserAgent');\n+ mainWindow.webContents.session.setUserAgent('overrideUserAgent');\n}\n- const originalUserAgent = mainWindow.webContents.session.getUserAgent();\n- mainWindow.webContents.session.setUserAgent(newUserAgent);\n-\n+ // Intercept all requests to accounts.google.com and hijack the UA\nmainWindow.webContents.session.webRequest.onBeforeSendHeaders({\n- urls: ['https://play.google.com/music/*'],\n+ urls: ['https://accounts.google.com/*'],\n}, (details, callback) => {\nconst newRequestHeaders = Object.assign({}, (details.requestHeaders || {}), {\n- 'User-Agent': originalUserAgent,\n+ 'User-Agent': signInUserAgent,\n});\ncallback({ requestHeaders: newRequestHeaders });\n});\n",
        "date": "29.12.2019 11:15:38",
        "repo": "marshallofsound/google-play-music-desktop-player-unofficial-",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor user agent spoofing and request interception"
    },
    {
        "msg": "refactor: Add comments for arch-dependent code",
        "diff": "diff --git a/src/NativeScript/Marshalling/Reference/ExtVectorTypeInstance.cpp b/src/NativeScript/Marshalling/Reference/ExtVectorTypeInstance.cpp @@ -91,24 +91,30 @@ void ExtVectorTypeInstance::finishCreation(JSC::VM& vm, JSCell* innerType, bool\nsize_t arraySize = this->_size;\n#if defined(__x86_64__)\n- if (this->_size % 2 && isStructMember) {\n- arraySize = this->_size + 1;\n- }\n+ // We need isStructMember because double3 vectors are handled\n+ // differently in x86_64. When a vector is a struct field\n+ // it is passed in memory but when not - the ST0 register is\n+ // used for the third element. In armv8 double3 vector will always\n+ // be passed in memory (as it's size > 16).\n+ if (this->_size == 3 && isStructMember) {\n#else\n- if (this->_size % 2) {\n- arraySize = this->_size + 1;\n- }\n+ // For armv8 we always need to pass the array size\n+ // as the vector would fill a whole register in order\n+ // to calculate the proper flags value.\n+ if (this->_size == 3) {\n#endif\n+ arraySize = 4;\n+ }\nffi_type* type = new ffi_type({ .size = arraySize * innerFFIType->size, .alignment = innerFFIType->alignment, .type = FFI_TYPE_EXT_VECTOR });\n- type->elements = new ffi_type*[arraySize + 1];\n+ type->elements = new ffi_type*[this->_size + 1];\n- for (size_t i = 0; i < arraySize; i++) {\n+ for (size_t i = 0; i < this->_size; i++) {\ntype->elements[i] = innerFFIType;\n}\n- type->elements[arraySize] = nullptr;\n+ type->elements[this->_size] = nullptr;\nthis->_extVectorType = type;\nthis->_ffiTypeMethodTable.ffiType = type;\nthis->_ffiTypeMethodTable.read = &read;\n",
        "date": "31.07.2018 14:17:03",
        "repo": "nativescript/ios-runtime",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor ExtVectorTypeInstance to handle double3 vectors differently on x86_64 and armv8"
    },
    {
        "msg": "refactor: improve stackTrace for readibility",
        "diff": "diff --git a/src/NativeScript/JSErrors.mm b/src/NativeScript/JSErrors.mm @@ -81,7 +81,7 @@ Boolean setStackTrace(JSC::ExecState* execState, JSC::Exception* exception) {\nstd::string nativeStackTrace = getNativeStackTrace(execState, exception);\n- return setStackTraceProperty(execState, exception, \"JS: \" + jsStackTrace + \"\\nNative:\" + nativeStackTrace);\n+ return setStackTraceProperty(execState, exception, \"JS:\\n\" + jsStackTrace + \"\\nNative:\\n\" + nativeStackTrace);\n}\nvoid reportErrorIfAny(JSC::ExecState* execState, JSC::CatchScope& scope) {\n",
        "date": "15.08.2019 11:16:14",
        "repo": "nativescript/ios-runtime",
        "type": "refactor",
        "chatgpt_zeroshot": "Fix formatting issue in setStackTrace message"
    },
    {
        "msg": "refactor: fix PR comments",
        "diff": "diff --git a/src/debugging/TNSDebugging.h b/src/debugging/TNSDebugging.h #include <sys/socket.h>\n#include <sys/types.h>\n-// {N} CLI is relying on this message in order to receive the inspector port number. Please do not change it!\n-// Parsing regex is 'NativeScript debugger has opened inspector socket on port (\\d+) for (.*)\\.'\n-// It's defined in 'ios-log-parser-service.ts'\n+// {N} CLI is relying on these messages. Please do not change them!\n#define LOG_DEBUGGER_PORT NSLog(@\"NativeScript debugger has opened inspector socket on port %d for %@.\", currentInspectorPort, [[NSBundle mainBundle] bundleIdentifier])\n-#define LOG_SUCCESSFULL_REFRESH NSLog(@\"Successfully refreshed the application with RefreshRequest.\")\n-#define LOG_FAILED_REFRESH NSLog(@\"Failed to refresh the application with RefreshRequest.\")\n+#define LOG_SUCCESSFULL_REFRESH NSLog(@\"Successfully refreshed the application with RefreshRequest.\"); notify_post(NOTIFICATION(\"AppRefreshSucceeded\"))\n+#define LOG_FAILED_REFRESH(reason) NSLog(@\"Failed to refresh the application with RefreshRequest. Reason: %@\", reason); notify_post(NOTIFICATION(\"AppRefreshFailed\"))\n// Synchronization object for serializing access to inspector variable and data socket\n@@ -435,8 +433,6 @@ static void TNSEnableRemoteInspector(int argc, char** argv,\nnotify_register_dispatch(\nNOTIFICATION(\"RefreshRequest\"), &refreshRequestSubscription,\ndispatch_get_main_queue(), ^(int token) {\n- @try\n- {\nJSGlobalContextRef context = runtime.globalContext;\nJSObjectRef globalObject = JSContextGetGlobalObject(context);\nJSStringRef liveSyncMethodName = JSStringCreateWithUTF8CString(\"__onLiveSync\");\n@@ -444,21 +440,26 @@ static void TNSEnableRemoteInspector(int argc, char** argv,\nJSStringRelease(liveSyncMethodName);\nif (JSValueIsUndefined(context, liveSyncMethod))\n{\n- LOG_FAILED_REFRESH;\n+ LOG_FAILED_REFRESH(@\"__onLiveSync method not found.\");\n+ return;\n}\n- JSValueRef result = JSObjectCallAsFunction(context, (JSObjectRef)liveSyncMethod, NULL, 0, NULL, NULL);\n- if (JSValueIsNull(context, result))\n+ JSValueRef exception = NULL;\n+ JSObjectCallAsFunction(context, (JSObjectRef)liveSyncMethod, NULL, 0, NULL, &exception);\n+ if (!JSValueIsNull(context, exception))\n{\n- LOG_FAILED_REFRESH;\n+ JSStringRef exMessage = JSValueToStringCopy(context, exception, NULL);\n+ long messageLength = JSStringGetLength(exMessage) + 1;\n+ char* buffer = (char *)calloc(messageLength, sizeof(char));\n+ JSStringGetUTF8CString(exMessage, buffer, messageLength);\n+\n+ NSString *reason = [NSString stringWithFormat:@\"__onLiveSync failed with: %s\", buffer];\n+ LOG_FAILED_REFRESH(reason);\n+ free(buffer);\n+ return;\n}\nLOG_SUCCESSFULL_REFRESH;\n- }\n- @catch (NSException *exception)\n- {\n- LOG_FAILED_REFRESH;\n- }\n});\nint attachRequestSubscription;\n",
        "date": "22.08.2019 16:57:31",
        "repo": "nativescript/ios-runtime",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor logging messages and error handling in TNSEnableRemoteInspector"
    },
    {
        "msg": "refactor(unread): filter unread events which not accutally changed\nalso emit unread event on message",
        "diff": "diff --git a/test/conversation.js b/test/conversation.js @@ -16,7 +16,7 @@ import {\nCLIENT_ID,\n} from './configs';\n-import { hold, listen, sinon } from './test-utils';\n+import { listen, sinon } from './test-utils';\ndescribe('Conversation', () => {\nlet realtime;\n@@ -414,17 +414,6 @@ describe('Conversation', () => {\n}),\n]);\n})\n- .then(() => {\n- bwangRealtime.pause();\n- bwangRealtime.resume();\n- const updateEventCallback = sinon.spy();\n- bwang0.on('unreadmessagescountupdate', updateEventCallback);\n- return listen(bwang0, 'reconnect')\n- .then(hold(1000))\n- .then(() => {\n- updateEventCallback.should.not.be.called();\n- });\n- })\n.then(() => realtime.createIMClient(bwangId))\n.then(bwang1 => listen(bwang1, 'unreadmessagescountupdate')\n.then(([[conv]]) => {\n",
        "date": "09.03.2017 11:06:01",
        "repo": "leancloud/js-realtime-sdk",
        "type": "refactor",
        "chatgpt_zeroshot": "Remove unnecessary code in conversation test suite"
    },
    {
        "msg": "refactor: iterate object values by lodash/values",
        "diff": "diff --git a/src/connection.js b/src/connection.js import d from 'debug';\n+import values from 'lodash/values';\nimport WebSocketPlus, {\nOPEN,\nDISCONNECT,\n@@ -59,7 +60,7 @@ export default class Connection extends WebSocketPlus {\nif (waitingForRespond) {\nif (isIdempotentCommand(command)) {\nbuffer = command.toArrayBuffer();\n- const duplicatedCommand = Object.values(this._commands).find(\n+ const duplicatedCommand = values(this._commands).find(\n({ buffer: targetBuffer, command: targetCommand }) =>\ntargetCommand.cmd === command.cmd &&\ntargetCommand.op === command.op &&\n",
        "date": "15.12.2020 18:25:08",
        "repo": "leancloud/js-realtime-sdk",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor code to use lodash values function instead of Object.values in connection.js"
    },
    {
        "msg": "refactor(filter): remove now obsolete filters",
        "diff": "diff --git a/lib/filters.js b/lib/filters.js @@ -113,12 +113,7 @@ export const refFilter = (data, { domain, domainOnly, raw }) => {\nreturn Object.keys(map).map(key => ({ x: key, y: map[key], w: links[key] }));\n};\n-export const browserFilter = data =>\n- data.map(({ x, y }) => ({ x: BROWSERS[x] || x, y })).filter(({ x }) => x);\n-\n-export const osFilter = data => data.filter(({ x }) => x);\n-\n-export const deviceFilter = data => data.filter(({ x }) => x);\n+export const browserFilter = data => data.map(({ x, y }) => ({ x: BROWSERS[x] ?? x, y }));\nexport const percentFilter = data => {\nconst total = data.reduce((n, { y }) => n + y, 0);\n",
        "date": "19.02.2021 09:58:58",
        "repo": "mikecao/umami",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor browserFilter to use nullish coalescing operator"
    },
    {
        "msg": "refactor(primitives2d): cleaned up 2d primitives module",
        "diff": "diff --git a/src/modeling/primitives2d.js b/src/modeling/primitives2d.js @@ -3,55 +3,63 @@ import {CAG} from '../csg'\n// -- 2D primitives (OpenSCAD like notion)\nexport function square () {\n- var v = [1,1], off; var a = arguments, p = a[0];\n- if(p&&!p.size) v = [p,p];\n- if(p&&p.length) v = a[0], p = a[1];\n- if(p&&p.size&&p.size.length) v = p.size;\n+ let v = [1, 1]\n+ let off\n+ let a = arguments\n+ let p = a[0]\n- off = [v[0]/2,v[1]/2];\n- if(p&&p.center==true) off = [0,0];\n+ if (p && !p.size) v = [p, p]\n+ if (p && p.length) v = a[0], p = a[1]\n+ if (p && p.size && p.size.length) v = p.size\n- var o = CAG.rectangle({center:off,radius:[v[0]/2,v[1]/2]});\n+ off = [v[0] / 2, v[1] / 2]\n+ if (p && p.center === true) off = [0, 0]\n- return o;\n+ var o = CAG.rectangle({center: off, radius: [v[0] / 2, v[1] / 2]})\n+\n+ return o\n}\nexport function circle () {\n- var r = 1, off, fn = 32; var a = arguments, p = a[0];\n- if(p&&p.r) r = p.r;\n- if(p&&p.fn) fn = p.fn;\n- if(p&&!p.r&&!p.fn&&!p.center) r = p;\n- off = [r,r];\n- if(p&&p.center==true) { off = [0,0]; }\n- var o = CAG.circle({center:off,radius:r,resolution:fn});\n- return o;\n+ let r = 1\n+ let off\n+ let fn = 32\n+ let a = arguments\n+ let p = a[0]\n+ if (p && p.r) r = p.r\n+ if (p && p.fn) fn = p.fn\n+ if (p && !p.r && !p.fn && !p.center) r = p\n+ off = [r, r]\n+ if (p && p.center === true) { off = [0, 0] }\n+ var o = CAG.circle({center: off, radius: r, resolution: fn})\n+ return o\n}\nexport function polygon (p) { // array of po(ints) and pa(ths)\n- var points = new Array();\n+ var points = [ ]\nif (p.paths && p.paths.length && p.paths[0].length) { // pa(th): [[0,1,2],[2,3,1]] (two paths)\nfor (var j = 0; j < p.paths.length; j++) {\nfor (var i = 0; i < p.paths[j].length; i++) {\n- points[i] = p.points[p.paths[j][i]];\n+ points[i] = p.points[p.paths[j][i]]\n}\n}\n} else if (p.paths && p.paths.length) { // pa(th): [0,1,2,3,4] (single path)\nfor (var i = 0; i < p.paths.length; i++) {\n- points[i] = p.points[p.paths[i]];\n+ points[i] = p.points[p.paths[i]]\n}\n} else { // pa(th) = po(ints)\nif (p.length) {\n- points = p;\n+ points = p\n} else {\n- points = p.points;\n+ points = p.points\n}\n}\n- return CAG.fromPoints(points);\n+ return CAG.fromPoints(points)\n}\nexport function triangle () { // -- new addition\n- var a = arguments;\n- if(a[0]&&a[0].length) a = a[0];\n- var o = CAG.fromPoints(a);\n- return o;\n+ var a = arguments\n+ if (a[0] && a[0].length) a = a[0]\n+ var o = CAG.fromPoints(a)\n+ return o\n}\n",
        "date": "01.01.2017 11:13:18",
        "repo": "jscad/openjscad.org",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor 2D primitives code for better readability and consistency"
    },
    {
        "msg": "refactor(colors): code structure cleanup, fixed missing export",
        "diff": "diff --git a/src/modeling/color.js b/src/modeling/color.js @@ -180,7 +180,6 @@ export function color () {\nreturn o.setColor(c)\n}\n-\n// from http://axonflux.com/handy-rgb-to-hsl-and-rgb-to-hsv-color-model-c\n/**\n* Converts an RGB color value to HSL. Conversion formula\n@@ -193,25 +192,31 @@ export function color () {\n* @param Number b The blue color value\n* @return Array The HSL representation\n*/\n-function rgb2hsl(r, g, b){\n+export function rgb2hsl (r, g, b) {\nif (r.length) { b = r[2], g = r[1], r = r[0]; }\n- var max = Math.max(r, g, b), min = Math.min(r, g, b);\n- var h, s, l = (max + min) / 2;\n+ var max = Math.max(r, g, b), min = Math.min(r, g, b)\n+ var h, s, l = (max + min) / 2\nif (max == min) {\n- h = s = 0; // achromatic\n+ h = s = 0 // achromatic\n} else {\n- var d = max - min;\n- s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n+ var d = max - min\n+ s = l > 0.5 ? d / (2 - max - min) : d / (max + min)\nswitch (max) {\n- case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n- case g: h = (b - r) / d + 2; break;\n- case b: h = (r - g) / d + 4; break;\n+ case r:\n+ h = (g - b) / d + (g < b ? 6 : 0)\n+ break\n+ case g:\n+ h = (b - r) / d + 2\n+ break\n+ case b:\n+ h = (r - g) / d + 4\n+ break\n}\n- h /= 6;\n+ h /= 6\n}\n- return [h, s, l];\n+ return [h, s, l]\n}\n/**\n@@ -227,28 +232,28 @@ function rgb2hsl(r, g, b){\n*/\nexport function hsl2rgb (h, s, l) {\nif (h.length) { l = h[2], s = h[1], h = h[0]; }\n- var r, g, b;\n+ var r, g, b\nif (s == 0) {\n- r = g = b = l; // achromatic\n+ r = g = b = l // achromatic\n} else {\nfunction hue2rgb (p, q, t) {\n- if(t < 0) t += 1;\n- if(t > 1) t -= 1;\n- if(t < 1/6) return p + (q - p) * 6 * t;\n- if(t < 1/2) return q;\n- if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;\n- return p;\n+ if (t < 0) t += 1\n+ if (t > 1) t -= 1\n+ if (t < 1 / 6) return p + (q - p) * 6 * t\n+ if (t < 1 / 2) return q\n+ if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6\n+ return p\n}\n- var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n- var p = 2 * l - q;\n- r = hue2rgb(p, q, h + 1/3);\n- g = hue2rgb(p, q, h);\n- b = hue2rgb(p, q, h - 1/3);\n+ var q = l < 0.5 ? l * (1 + s) : l + s - l * s\n+ var p = 2 * l - q\n+ r = hue2rgb(p, q, h + 1 / 3)\n+ g = hue2rgb(p, q, h)\n+ b = hue2rgb(p, q, h - 1 / 3)\n}\n- return [r, g, b];\n+ return [r, g, b]\n}\n/**\n@@ -265,24 +270,30 @@ export function hsl2rgb(h, s, l){\nexport function rgb2hsv (r, g, b) {\nif (r.length) { b = r[2], g = r[1], r = r[0]; }\n- var max = Math.max(r, g, b), min = Math.min(r, g, b);\n- var h, s, v = max;\n+ var max = Math.max(r, g, b), min = Math.min(r, g, b)\n+ var h, s, v = max\n- var d = max - min;\n- s = max == 0 ? 0 : d / max;\n+ var d = max - min\n+ s = max == 0 ? 0 : d / max\nif (max == min) {\n- h = 0; // achromatic\n+ h = 0 // achromatic\n} else {\nswitch (max) {\n- case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n- case g: h = (b - r) / d + 2; break;\n- case b: h = (r - g) / d + 4; break;\n+ case r:\n+ h = (g - b) / d + (g < b ? 6 : 0)\n+ break\n+ case g:\n+ h = (b - r) / d + 2\n+ break\n+ case b:\n+ h = (r - g) / d + 4\n+ break\n}\n- h /= 6;\n+ h /= 6\n}\n- return [h, s, v];\n+ return [h, s, v]\n}\n/**\n@@ -298,24 +309,36 @@ export function rgb2hsv(r, g, b){\n*/\nexport function hsv2rgb (h, s, v) {\nif (h.length) { v = h[2], s = h[1], h = h[0]; }\n- var r, g, b;\n+ var r, g, b\n- var i = Math.floor(h * 6);\n- var f = h * 6 - i;\n- var p = v * (1 - s);\n- var q = v * (1 - f * s);\n- var t = v * (1 - (1 - f) * s);\n+ var i = Math.floor(h * 6)\n+ var f = h * 6 - i\n+ var p = v * (1 - s)\n+ var q = v * (1 - f * s)\n+ var t = v * (1 - (1 - f) * s)\nswitch (i % 6) {\n- case 0: r = v, g = t, b = p; break;\n- case 1: r = q, g = v, b = p; break;\n- case 2: r = p, g = v, b = t; break;\n- case 3: r = p, g = q, b = v; break;\n- case 4: r = t, g = p, b = v; break;\n- case 5: r = v, g = p, b = q; break;\n+ case 0:\n+ r = v, g = t, b = p\n+ break\n+ case 1:\n+ r = q, g = v, b = p\n+ break\n+ case 2:\n+ r = p, g = v, b = t\n+ break\n+ case 3:\n+ r = p, g = q, b = v\n+ break\n+ case 4:\n+ r = t, g = p, b = v\n+ break\n+ case 5:\n+ r = v, g = p, b = q\n+ break\n}\n- return [r, g, b];\n+ return [r, g, b]\n}\n/**\n@@ -326,15 +349,15 @@ export function hsv2rgb(h, s, v){\n* - convert the HEX value into RGB values\n*/\nexport function html2rgb (s) {\n- var r = 0;\n- var g = 0;\n- var b = 0;\n+ var r = 0\n+ var g = 0\n+ var b = 0\nif (s.length == 7) {\n- r = parseInt('0x'+s.slice(1,3))/255;\n- g = parseInt('0x'+s.slice(3,5))/255;\n- b = parseInt('0x'+s.slice(5,7))/255;\n+ r = parseInt('0x' + s.slice(1, 3)) / 255\n+ g = parseInt('0x' + s.slice(3, 5)) / 255\n+ b = parseInt('0x' + s.slice(5, 7)) / 255\n}\n- return [r,g,b];\n+ return [r, g, b]\n}\n/**\n@@ -346,6 +369,6 @@ export function html2rgb(s) {\nexport function rgb2html (r, g, b) {\nif (r.length) { b = r[2], g = r[1], r = r[0]; }\nvar s = '#' +\n- Number(0x1000000+r*255*0x10000+g*255*0x100+b*255).toString(16).substring(1);\n- return s;\n+ Number(0x1000000 + r * 255 * 0x10000 + g * 255 * 0x100 + b * 255).toString(16).substring(1)\n+ return s\n}\n",
        "date": "06.01.2017 23:20:21",
        "repo": "jscad/openjscad.org",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor color.js to export rgb2hsl, hsl2rgb, rgb2hsv, hsv2rgb, html2rgb, and rgb2html functions"
    },
    {
        "msg": "refactor(modeling meta): cleanups & added note on usefulness",
        "diff": "diff --git a/src/modeling/meta.js b/src/modeling/meta.js +//FIXME : are ANY of these used anywhere ??\nfunction version () {\n- return [0,5,2];\n+ return [0, 5, 2]\n}\nfunction JStoMeta (src) {\n- var l = src.split(/\\n/);\n- var n = 0;\n- var m = [];\n+ var l = src.split(/\\n/)\n+ var n = 0\n+ var m = []\nfor (var i = 0; ; i++) {\nif (l[i].match(/^\\/\\/\\s*(\\S[^:]+):\\s*(\\S.*)/)) {\n- var k = RegExp.$1;\n- var v = RegExp.$2;\n- m[k] = v;\n- n++;\n+ var k = RegExp.$1\n+ var v = RegExp.$2\n+ m[k] = v\n+ n++\n} else {\n- if(i>5&&n==0)\n- break;\n+ if (i > 5 && n === 0)\n+ break\nelse if (n > 0)\n- break;\n+ break\n}\n}\n- return m;\n+ return m\n}\nfunction MetaToJS (m) {\n- var s = \"\";\n+ var s = ''\nfor (var k in m) {\n- s += \"// \"+k+\": \"+m[k]+\"\\n\";\n+ s += '// ' + k + ': ' + m[k] + '\\n'\n}\n- return s;\n+ return s\n}\n",
        "date": "06.01.2017 23:27:04",
        "repo": "jscad/openjscad.org",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor code formatting and remove unused variables in meta.js"
    },
    {
        "msg": "refactor(clone): superficial clone cleanup",
        "diff": "diff --git a/src/modeling/clone.js b/src/modeling/clone.js export function clone (obj) {\n- if (null == obj || 'object' != typeof obj) return obj\n+ if (obj === null || typeof obj !== 'object') return obj\nvar copy = obj.constructor()\nfor (var attr in obj) {\nif (obj.hasOwnProperty(attr)) copy[attr] = obj[attr]\n",
        "date": "06.01.2017 23:35:55",
        "repo": "jscad/openjscad.org",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor clone function to use strict equality and typeof comparison"
    },
    {
        "msg": "refactor(group): superficial group function cleanup",
        "diff": "diff --git a/src/modeling/group.js b/src/modeling/group.js import {CAG} from '../csg'\n-\n+// FIXME : is this used anywhere ?\nexport default function group () { // experimental\nvar o\nvar i = 0\nvar a = arguments\nif (a[0].length) a = a[0]\n- if ((typeof (a[i]) == 'object') && (a[i] instanceof CAG)) {\n+ if ((typeof (a[i]) === 'object') && (a[i] instanceof CAG)) {\no = a[i].extrude({offset: [0, 0, 0.1]}) // -- convert a 2D shape to a thin solid, note: do not a[i] = a[i].extrude()\n} else {\no = a[i++]\n}\nfor (; i < a.length; i++) {\nvar obj = a[i]\n- if ((typeof (a[i]) == 'object') && (a[i] instanceof CAG)) {\n+ if ((typeof (a[i]) === 'object') && (a[i] instanceof CAG)) {\nobj = a[i].extrude({offset: [0, 0, 0.1]}) // -- convert a 2D shape to a thin solid:\n}\no = o.unionForNonIntersecting(obj)\n",
        "date": "06.01.2017 23:36:23",
        "repo": "jscad/openjscad.org",
        "type": "refactor",
        "chatgpt_zeroshot": "Fix type comparison in group.js and remove unused import"
    },
    {
        "msg": "refactor(includeJscadSync): cleanups",
        "diff": "diff --git a/src/jscad/includeJscadSync.js b/src/jscad/includeJscadSync.js @@ -25,8 +25,6 @@ export default function includeJscadSync (relpath, fn, memFs) {\nxhr.open('GET', url, false)\nxhr.onload = function () {\nvar src = this.responseText\n- //console.log('src',src)\n- //eval(src) // UGH ???\nresolve(src)\n}\nxhr.onerror = (err) => reject(err)\n",
        "date": "03.04.2017 18:30:18",
        "repo": "jscad/openjscad.org",
        "type": "refactor",
        "chatgpt_zeroshot": "Remove unnecessary console.log and eval statements in includeJscadSync function"
    },
    {
        "msg": "refactor(replaceIncludes): streamlined code",
        "diff": "diff --git a/src/jscad/replaceIncludes.js b/src/jscad/replaceIncludes.js @@ -21,10 +21,10 @@ export function replaceIncludes (text, relpath, memFs) {\nconst withoutIncludes = replaceIncludesInAst(moduleAst)\nconst modulePromises = foundIncludes.map(function (uri, index) {\n- const promise = includeJscadSync(relpath, uri, memFs)\n- return promise.then(function (includedScript) {\n- return replaceIncludes(includedScript, relpath, memFs)\n- })\n+ return includeJscadSync(relpath, uri, memFs)\n+ .then(\n+ includedScript => replaceIncludes(includedScript, relpath, memFs),\n+ err => console.error('fail', err))\n})\nPromise.all(modulePromises).then(function (resolvedModules) {\nconst resolvedScript = resolvedModules.concat(withoutIncludes).join('\\n')\n",
        "date": "19.04.2017 00:21:41",
        "repo": "jscad/openjscad.org",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor includeJscadSync function in replaceIncludes.js"
    },
    {
        "msg": "refactor(replaceIncludes): text renamed to more clear 'source'",
        "diff": "diff --git a/src/jscad/replaceIncludes.js b/src/jscad/replaceIncludes.js @@ -8,14 +8,14 @@ const astring = require('astring')\n* inlined includes\n* this is more reliable than async xhr + eval()\n* but is still just a temporary solution until using actual modules & loaders (commonjs , es6 etc)\n- * @param {String} text the original script (with include statements)\n+ * @param {String} source the original script (with include statements)\n* @param {String} relpath relative path, for xhr resolution\n* @param {String} memFs memFs cache object\n* @returns {String} the full script, with inlined\n*/\n-export function replaceIncludes (text, relpath, memFs, includeResolver) {\n+export function replaceIncludes (source, relpath, memFs, includeResolver) {\nreturn new Promise(function (resolve, reject) {\n- const moduleAst = astFromSource(text)\n+ const moduleAst = astFromSource(source)\nconst foundIncludes = findIncludes(moduleAst).map(x => x.value)\nconst withoutIncludes = replaceIncludesInAst(moduleAst)\n",
        "date": "19.04.2017 08:54:59",
        "repo": "jscad/openjscad.org",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor replaceIncludes function to use source parameter instead of text"
    },
    {
        "msg": "refactor(convertToBlob): cleaned up useless parameters",
        "diff": "diff --git a/src/io/convertToBlob.js b/src/io/convertToBlob.js @@ -66,10 +66,10 @@ export function convertToBlob (objects, params) {\namf: (object) => CSGToAMF(object, meta), // CSG to AMF\nstl: (object) => CSGToStla(object, {version}), // CSG to STL ASCII\nstla: (object) => CSGToStla(object, {version}), // CSG to STL ASCII\n- stlb: (object) => CSGToStlb(object, {webBlob: true, version}), // CSG to STL BINARY\n+ stlb: (object) => CSGToStlb(object, {version}), // CSG to STL BINARY\ndxf: (object) => CAGToDxf(object, {version}), // CAG to DXF\nsvg: (object) => CAGToSvg(object, {version}), // CAG to SVG\n- x3d: (object) => CSGToX3D(object.fixTJunctions(), {version}),\n+ x3d: (object) => CSGToX3D(object, {version}), // .fixTJunctions()\njson: (object) => CAGToJson(object, {version}), // CSG or CAG to JSON\njs: (object) => object, // js , pass through\njscad: (object) => object, // jscad, pass through\n",
        "date": "26.04.2017 08:51:46",
        "repo": "jscad/openjscad.org",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor CSGToStlb function parameters in convertToBlob.js"
    },
    {
        "msg": "refactor(io): updated serializers to new/upcoming api & structure",
        "diff": "diff --git a/src/io/prepareOutput.js b/src/io/prepareOutput.js @@ -8,13 +8,12 @@ import CSGToX3D from '@jscad/io/writers/CSGToX3D'\nimport CAGToSvg from '@jscad/io/writers/CAGToSvg'\nimport CAGToJson from '@jscad/io/writers/CAGToJson'\nimport CAGToDxf from '@jscad/io/writers/CAGToDxf'*/\n-import {CSGToStla} from '@jscad/io'\n-import {CSGToStlb} from '@jscad/io'\n-import {CSGToAMF} from '@jscad/io'\n-import {CSGToX3D} from '@jscad/io'\n-import {CAGToSvg} from '@jscad/io'\n-import {CAGToJson} from '@jscad/io'\n-import {CAGToDxf} from '@jscad/io'\n+import {stlSerializer} from '@jscad/io'\n+import {amfSerializer} from '@jscad/io'\n+import {x3dSerializer} from '@jscad/io'\n+import {svgSerializer} from '@jscad/io'\n+import {jsonSerializer} from '@jscad/io'\n+import {dxfSerializer} from '@jscad/io'\nexport function prepareOutput (objects, params) {\nconst {format, version = '0.0.0'} = params\n@@ -34,33 +33,33 @@ export function prepareOutput (objects, params) {\nversion\n}\n- // helpers for jscad & js formats to align them with the other writers\n- const CSGToJscad = {\n- mimeType: formats['jscad'].mimetype,\n- write: object => [object] // js , pass through\n- }\n- const CSGToJs = {\n- mimeType: formats['js'].mimetype,\n- write: object => [object] // jscad , pass through\n- }\nconst outputFormatHandlers = {\n- amf: CSGToAMF, // CSG to AMF\n- stl: CSGToStla, // CSG to STL ASCII\n- stla: CSGToStla, // CSG to STL ASCII\n- stlb: CSGToStlb, // CSG to STL BINARY\n- dxf: CAGToDxf, // CAG to DXF\n- svg: CAGToSvg, // CAG to SVG\n- x3d: CSGToX3D, // CSG to X3D\n- json: CAGToJson, // CSG or CAG to JSON\n- js: CSGToJs, // js , pass through\n- jscad: CSGToJscad, // jscad, pass through\n+ amf: amfSerializer, // CSG to AMF\n+ stl: stlSerializer, // CSG to STL ASCII // NOTE: now using binary output by default !!\n+ stla: {\n+ mimeType: stlSerializer.mimeType,\n+ serialize: data => stlSerializer.serialize(data, {binary: false})\n+ }, // CSG to STL ASCII\n+ stlb: stlSerializer, // CSG to STL BINARY\n+ dxf: dxfSerializer, // CAG to DXF\n+ svg: svgSerializer, // CAG to SVG\n+ x3d: x3dSerializer, // CSG to X3D\n+ json: jsonSerializer, // CSG or CAG to JSON\n+ js: {\n+ mimeType: formats['js'].mimetype,\n+ serialize: object => [object] // jscad , pass through\n+ },\n+ jscad: {\n+ mimeType: formats['jscad'].mimetype,\n+ serialize: object => [object] // js , pass through\n+ },\nundefined: () => {\nthrow new Error('Not supported : only jscad, stl, amf, dxf, svg or json as output format')\n}\n}\n- const data = outputFormatHandlers[format].write(object, metaData)\n+ const data = outputFormatHandlers[format].serialize(object, metaData)\nconst mimeType = outputFormatHandlers[format].mimeType\nreturn {data, mimeType}\n}\n",
        "date": "29.04.2017 23:21:36",
        "repo": "jscad/openjscad.org",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor output format handlers in prepareOutput function"
    },
    {
        "msg": "refactor(io): updated parsers/deserializers to new api",
        "diff": "diff --git a/src/io/conversionWorker.js b/src/io/conversionWorker.js @@ -44,16 +44,16 @@ module.exports = function (self) {\nconst options = {version: data.version}\nswitch (e) {\ncase 'amf':\n- const parseAMF = require('@jscad/io').parseAMF\n- r.source = r.converted = parseAMF(data.source, data.filename, options)\n+ const deserializeAmf = require('@jscad/io').amfDeSerializer\n+ r.source = r.converted = deserializeAmf(data.source, data.filename, options)\nbreak\ncase 'gcode':\n- const parseGCode = require('@jscad/io').parseGCode\n- r.source = r.converted = parseGCode(data.source, data.filename, options)\n+ const deserializeGcode = require('@jscad/io').gcodeDeSerializer\n+ r.source = r.converted = deserializeGcode(data.source, data.filename, options)\nbreak\ncase 'obj':\n- const parseOBJ = require('@jscad/io').parseOBJ\n- r.source = r.converted = parseOBJ(data.source, data.filename, options)\n+ const deserializeObj = require('@jscad/io').objDeSerializer\n+ r.source = r.converted = deserializeObj(data.source, data.filename, options)\nbreak\ncase 'scad':\n// importScripts(r.baseurl + 'js/lib/csg.js', r.baseurl + 'js/openjscad.js', r.baseurl + 'js/openscad.js', r.baseurl + 'js/lib/underscore.js', r.baseurl + 'js/lib/openscad-openjscad-translator.js')\n@@ -65,8 +65,8 @@ module.exports = function (self) {\nr.converted = openscadOpenJscadParser.parse(r.source)\nbreak\ncase 'stl':\n- const parseSTL = require('@jscad/io').parseSTL\n- r.source = r.converted = parseSTL(data.source, data.filename, options)\n+ const deserializeStl = require('@jscad/io').stlDeSerializer\n+ r.source = r.converted = deserializeStl(data.source, data.filename, options)\nbreak\ncase 'js':\nr.source = r.converted = data.source\n@@ -75,12 +75,12 @@ module.exports = function (self) {\nr.source = r.converted = data.source\nbreak\ncase 'svg':\n- const parseSVG = require('@jscad/io').parseSVG\n- r.source = r.converted = parseSVG(data.source, data.filename, options)\n+ const deserializeSvg = require('@jscad/io').svgDeSerializer\n+ r.source = r.converted = deserializeSvg(data.source, data.filename, options)\nbreak\ncase 'json':\n- const parseJSON = require('@jscad/io').parseJSON\n- r.source = r.converted = parseJSON(data.source, data.filename, options)\n+ const deserializeJson = require('@jscad/io').jsonDeSerializer\n+ r.source = r.converted = deserializeJson(data.source, data.filename, options)\nbreak\ndefault:\nr.source = r.converted = '// Invalid file type in conversion (' + e + ')'\n",
        "date": "29.04.2017 23:45:03",
        "repo": "jscad/openjscad.org",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor conversionWorker.js to use deserializer functions for different file types"
    },
    {
        "msg": "refactor(walkfileTree): updated api uses",
        "diff": "diff --git a/src/ui/dragDrop/walkFileTree.js b/src/ui/dragDrop/walkFileTree.js @@ -10,15 +10,25 @@ const readFileAsync = function (file, fileMeta) {\nconst reader = new FileReader()\nreturn new Promise(function (resolve, reject) {\n- isBinaryFile ? reader.readAsBinaryString(file, 'UTF-8') : reader.readAsText(file, 'UTF-8')\n-\n+ reader.readAsArrayBuffer(file)\n// remove rootfolder since all files are within it\nconst fullpath = fileMeta && fileMeta.fullPath ? fileMeta.fullPath.split('/').slice(2).join('/') : ''\n+ // convert binary to text\n+ function convert (buffer) {\n+ let binary = ''\n+ const bytes = new Uint8Array(buffer)\n+ let length = bytes.byteLength\n+ for (let i = 0; i < length; i++) {\n+ binary += String.fromCharCode(bytes[i])\n+ }\n+ return binary\n+ }\n+\nreader.onloadend = event => {\nevent.target.readyState === FileReader.DONE\n- ? resolve({name: file.name, fullpath: fullpath, source: event.target.result})\n- : reject('Failed to load file')\n+ ? resolve({name: file.name, fullpath: fullpath, source: convert(event.target.result)})\n+ : reject(new Error('Failed to load file'))\n}\n})\n}\n@@ -86,17 +96,3 @@ function processDirectory (directory) {\nexport function walkFileTree (items) {\nreturn processItems(items)\n}\n-\n-export function afterFilesRead ({memFs, memFsCount, memFsTotal, memFsChanged}, files) {\n- memFsCount = files.length\n- memFsTotal = files.length\n-\n- // FIXME : THIRD time the SAME data is cached\n- // saveScript(memFs, file.name, file.source)\n- const mainFile = findMainFile({memFs, memFsTotal}, files)\n-\n- if (changedFiles(memFs, files).length > 0) {\n- if (!mainFile) throw new Error('No main.jscad found')\n- setCurrentFile(mainFile) // ARGH , cannot do this here\n- }\n-}\n",
        "date": "05.11.2017 08:31:04",
        "repo": "jscad/openjscad.org",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor file reading to convert binary to text before resolving"
    },
    {
        "msg": "refactor(stl-serializer): improved progress handling in CSGToStlb.js\nTiny simplification/ streamlining",
        "diff": "diff --git a/packages/io/stl-serializer/CSGToStlb.js b/packages/io/stl-serializer/CSGToStlb.js @@ -51,10 +51,10 @@ const serializeBinary = (objects, options) => {\nlet triangleUint16array = new Uint16Array(triangleBuffer, 48, 1)\nlet byteoffset = 0\n- let p = 0\n+\nobjects.forEach((object) => {\nlet polygons = geometry.geom3.toPolygons(object)\n- polygons.forEach((polygon) => {\n+ polygons.forEach((polygon,index) => {\nlet vertices = polygon.vertices\nlet numvertices = vertices.length\nlet plane = polygon.plane\n@@ -75,8 +75,8 @@ const serializeBinary = (objects, options) => {\nallTrianglesBufferAsInt8.set(triangleBufferAsInt8, byteoffset)\nbyteoffset += 50\n}\n- p += 1\n- options.statusCallback && options.statusCallback({ progress: 100 * p / numpolygons })\n+\n+ options.statusCallback && options.statusCallback({ progress: 100 * index / numpolygons })\n})\n})\noptions.statusCallback && options.statusCallback({ progress: 100 })\n",
        "date": "09.04.2020 12:15:50",
        "repo": "jscad/openjscad.org",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor CSGToStlb.js to track progress by index instead of a counter variable"
    },
    {
        "msg": "refactor(cli): removed unnecessary params option to serializer invocation",
        "diff": "diff --git a/packages/cli/src/generateOutputData.js b/packages/cli/src/generateOutputData.js @@ -48,7 +48,7 @@ const generateOutputData = (source, params, options) => {\n// convert any inputs\nconst prevsource = source\nconst deserializerOptions = Object.assign({}, params, options)\n- source = conversionTable[inputFormat]({ source, params, options: deserializerOptions })\n+ source = conversionTable[inputFormat]({ source, options: deserializerOptions })\nconst useFakeFs = (source !== prevsource) // conversion, so use a fake file system when rebuilding\nif (outputFormat === 'jscad' || outputFormat === 'js') {\n",
        "date": "04.06.2021 14:31:04",
        "repo": "jscad/openjscad.org",
        "type": "refactor",
        "chatgpt_zeroshot": "Refactor generateOutputData to remove unnecessary params in conversionTable call"
    },
    {
        "msg": "refactor(fab): remove variable references",
        "diff": "diff --git a/consumables/scss/components/fab/fab.scss b/consumables/scss/components/fab/fab.scss @import '../../global/colors/colors';\n@import '../../global/helpers';\n@import '../../global/layout/grid';\n-@import 'vars';\n@import '../../import-once';\n@include exports('fab') {\n.bx--fab__hexagon {\ntransition: fill $transition--base;\n- fill: $color__fab-hexagon;\n+ fill: $color__blue-40;\n}\n.bx--fab__plus-icon {\n@include rotate(0, $transition--base);\n- fill: $color__fab-plus-icon;\n+ fill: $color__white;\n}\n}\n.bx--fab__hexagon {\ntransition: fill $transition--base;\n- fill: $color__fab-hexagon--is-closed;\n+ fill: $color__navy-gray-5;\n}\n.bx--fab__plus-icon {\n",
        "date": "04.01.2017 16:27:07",
        "repo": "carbon-design-system/carbon",
        "type": "refactor",
        "chatgpt_zeroshot": "Update fab colors in fab.scss"
    },
    {
        "msg": "refactor(tooltips): remove variable references",
        "diff": "diff --git a/consumables/scss/components/tooltips/tooltips.scss b/consumables/scss/components/tooltips/tooltips.scss @import '../../global/colors/colors';\n@import '../../global/typography/typography';\n@import '../../global/layout/grid';\n-@import 'vars';\n@import '../../import-once';\n@include exports('tooltips') {\n",
        "date": "05.01.2017 11:22:53",
        "repo": "carbon-design-system/carbon",
        "type": "refactor",
        "chatgpt_zeroshot": "Remove unnecessary import in tooltips.scss"
    },
    {
        "msg": "refactor(inline-left-nav): update colors",
        "diff": "diff --git a/consumables/scss/components/inline-left-nav/inline-left-nav.scss b/consumables/scss/components/inline-left-nav/inline-left-nav.scss @include reset;\n@include font-size('14');\n@include light-ui {\n- color: $color__navy-gray-3;\n+ color: $color__blue-90;\n}\nbox-sizing: border-box;\n&-link {\n@include font-size('14');\n@include light-ui {\n- color: $color__navy-gray-3;\n+ color: $color__blue-90;\n}\ncolor: $color__white;\npadding: .75rem 1.35rem .75rem 4.5rem;\n@include light-ui {\ncolor: $color__blue-40;\n}\n- color: $color__blue-20;\n+ color: $color__blue-30;\n& > .bx--inline-left-nav__icon {\n@include light-ui {\nfill: $color__blue-40;\n}\n- fill: $color__blue-20;\n+ fill: $color__blue-30;\n}\n}\n",
        "date": "05.01.2017 11:24:08",
        "repo": "carbon-design-system/carbon",
        "type": "refactor",
        "chatgpt_zeroshot": "Update colors in inline left nav component to use blue shades."
    },
    {
        "msg": "style(darktheme): change to white icon when switch to dark theme",
        "diff": "diff --git a/src/features/visualization/Visualization.module.css b/src/features/visualization/Visualization.module.css fill: black;\n}\n-:global(.darkTheme) .viz-change-icon-container {\n- color: white;\n- fill: white;\n+:global(.darkTheme) .viz :global(.viz-change-icon-container) {\n+ color: white !important;\n+ fill: white !important;\n}\n\\ No newline at end of file\n",
        "date": "05.06.2019 16:31:15",
        "repo": "iqtlabs/crviz",
        "type": "style",
        "chatgpt_zeroshot": "Update icon color in dark theme for visualization module"
    },
    {
        "msg": "style(annotations): align icons",
        "diff": "diff --git a/src/features/visualization/d3-viz/setup-annotations.js b/src/features/visualization/d3-viz/setup-annotations.js @@ -40,7 +40,7 @@ const setupAnnotations = ({packedData, annotationRoot}) =>{\n.classed('svg-icon', true)\n.classed('nag', true)\n.style('font-size', (d) => (3 * d.height * fontScale) + \"%\")\n- .text('\\uf06a');\n+ .text('\\uf06a');//font-awesome\nannotations\n.select(`g.${className(\"change-icon-container\")}`)\n@@ -49,6 +49,7 @@ const setupAnnotations = ({packedData, annotationRoot}) =>{\n.attr('x', (d) => (getEdgePositionX(d.r, baseAngle(d))))\n.attr('y', (d) => (getEdgePositionY(d.r, baseAngle(d))))\n.on(\"click\", (d) => {\n+ //Brings up Ring-menu on click\nconst annotation = selectAll(`g.${className(\"annotation\")}[data-key=\"${datumKey(d)}\"]`);\nannotation\n@@ -119,7 +120,7 @@ const setupAnnotations = ({packedData, annotationRoot}) =>{\n.classed(className(\"node\"), true)\n.append('circle')\n.attr('r', (d) => 2 * d.height * leafRadius)\n- .attr('cx', (d) => (getEdgePositionX(d.r, baseAngle(d))) - 3.5*d.height*leafRadius)\n+ .attr('cx', (d) => (getEdgePositionX(d.r, baseAngle(d))) - 0*d.height*leafRadius)\n.attr('cy', (d) => (getEdgePositionY(d.r, baseAngle(d))) - 10*d.height*leafRadius);\nannotations\n@@ -155,7 +156,7 @@ const setupAnnotations = ({packedData, annotationRoot}) =>{\n.append(\"text\")\n.classed(className(\"annotation-text\"), true)\n.style('font-size', (d) => (2 * d.height * fontScale) + \"%\")\n- .attr('x', (d) => (getEdgePositionX(d.r, baseAngle(d))) + 3.5*d.height*leafRadius)\n+ .attr('x', (d) => (getEdgePositionX(d.r, baseAngle(d))) + 7*d.height*leafRadius)\n.attr('y', (d) => (getEdgePositionY(d.r, baseAngle(d))) - 10*d.height*leafRadius);\nannotations\n@@ -235,7 +236,7 @@ const setupAnnotations = ({packedData, annotationRoot}) =>{\n.classed(className(\"isChanged-fixed\"), true)\n.append('circle')\n.attr('r', (d) => 2 * d.height * leafRadius)\n- .attr('cx', (d) => (getEdgePositionX(d.r, baseAngle(d))) - 3.5 * d.height * leafRadius)\n+ .attr('cx', (d) => (getEdgePositionX(d.r, baseAngle(d))) - 0 * d.height * leafRadius)\n.attr('cy', (d) => (getEdgePositionY(d.r, baseAngle(d))) + 10 * d.height * leafRadius);\nannotations\n@@ -279,7 +280,7 @@ const setupAnnotations = ({packedData, annotationRoot}) =>{\n.append(\"text\")\n.classed(className(\"annotation-text\"), true)\n.style('font-size', (d) => (2 * d.height * fontScale) + \"%\")\n- .attr('x', (d) => (getEdgePositionX(d.r, baseAngle(d))) + d.height * leafRadius)\n+ .attr('x', (d) => (getEdgePositionX(d.r, baseAngle(d))) + 7 * d.height * leafRadius)\n.attr('y', (d) => (getEdgePositionY(d.r, baseAngle(d))) + 10 * d.height * leafRadius);\nannotations\n@@ -297,7 +298,7 @@ const setupAnnotations = ({packedData, annotationRoot}) =>{\n.classed(className(\"isRemoved-fixed\"), true)\n.append('circle')\n.attr('r', (d) => 2 * d.height * leafRadius)\n- .attr('cx', (d) => (getEdgePositionX(d.r, baseAngle(d))) + 6.5*d.height * leafRadius)\n+ .attr('cx', (d) => (getEdgePositionX(d.r, baseAngle(d))) + 7.5*d.height * leafRadius)\n.attr('cy', (d) => (getEdgePositionY(d.r, baseAngle(d))));\nannotations\n@@ -341,7 +342,7 @@ const setupAnnotations = ({packedData, annotationRoot}) =>{\n.append(\"text\")\n.classed(className(\"annotation-text\"), true)\n.style('font-size', (d) => (2 * d.height * fontScale) + \"%\")\n- .attr('x', (d) => (getEdgePositionX(d.r, baseAngle(d))) + 13*d.height * leafRadius)\n+ .attr('x', (d) => (getEdgePositionX(d.r, baseAngle(d))) + 14*d.height * leafRadius)\n.attr('y', (d) => (getEdgePositionY(d.r, baseAngle(d))));\nannotations\n",
        "date": "06.06.2019 13:15:48",
        "repo": "iqtlabs/crviz",
        "type": "style",
        "chatgpt_zeroshot": "Update annotation setup in d3-viz with font-awesome icon and improved positioning."
    },
    {
        "msg": "style(circle lable): change color to match dark theme styling",
        "diff": "diff --git a/src/features/visualization/Visualization.module.css b/src/features/visualization/Visualization.module.css dominant-baseline: alphabetical;\n}\n+:global(.darkTheme) .viz :global(.viz-label) {\n+ fill: rgba(255, 255, 255, 0.836); /* darken white to reduce contrasting*/\n+ text-anchor: middle;\n+ dominant-baseline: alphabetical;\n+}\n+\n.viz :global(.viz-labelShape) {\nfill: black;\nopacity: 0.25;\nfill: black;\n}\n+\n:global(.darkTheme) .viz :global(.viz-change-icon-container){\ncolor: white !important;\nfill: white !important;\n",
        "date": "06.06.2019 14:36:56",
        "repo": "iqtlabs/crviz",
        "type": "style",
        "chatgpt_zeroshot": "Add dark theme styles for visualization labels and icons"
    },
    {
        "msg": "style(ring-menu): animation as fadein",
        "diff": "diff --git a/src/features/visualization/Visualization.module.css b/src/features/visualization/Visualization.module.css }\n}*/\n+@keyframes fadein {\n+ from { opacity: 0; }\n+ to { opacity: 1; }\n+}\n+\n+/* Firefox < 16 */\n+@-moz-keyframes fadein {\n+ from { opacity: 0; }\n+ to { opacity: 1; }\n+}\n+\n+/* Safari, Chrome and Opera > 12.1 */\n+@-webkit-keyframes fadein {\n+ from { opacity: 0; }\n+ to { opacity: 1; }\n+}\n+\n+/* Internet Explorer */\n+@-ms-keyframes fadein {\n+ from { opacity: 0; }\n+ to { opacity: 1; }\n+}\n+\n/*Ring Menu*/\n.viz :global(.viz-ring-menu){\n- visibility: visible;\n- opacity: 1;\n- transition: opacity 5s ease-in-out;\n- -webkit-transition: opacity 5s ease-in-out;\n- -moz-transition: opacity 5s ease-in-out;\n+ -webkit-animation: fadein 1s; /* Safari, Chrome and Opera > 12.1 */\n+ -moz-animation: fadein 1s; /* Firefox < 16 */\n+ -ms-animation: fadein 1s; /* Internet Explorer */\n+ -o-animation: fadein 1s; /* Opera < 12.1 */\n+ animation: fadein 1s;\n}\n.viz :global(circle.viz-bg-circle){\n",
        "date": "06.06.2019 16:23:52",
        "repo": "iqtlabs/crviz",
        "type": "style",
        "chatgpt_zeroshot": "Add fadein animation for ring menu in Visualization module CSS"
    },
    {
        "msg": "style: always use `self`",
        "diff": "diff --git a/index.js b/index.js @@ -669,10 +669,11 @@ Peer.prototype._maybeReady = function () {\n}\nPeer.prototype._onInterval = function () {\n- if (!this._cb || !this._channel || this._channel.bufferedAmount > MAX_BUFFERED_AMOUNT) {\n+ var self = this\n+ if (!self._cb || !self._channel || self._channel.bufferedAmount > MAX_BUFFERED_AMOUNT) {\nreturn\n}\n- this._onChannelBufferedAmountLow()\n+ self._onChannelBufferedAmountLow()\n}\nPeer.prototype._onSignalingStateChange = function () {\n",
        "date": "16.02.2018 22:45:01",
        "repo": "feross/simple-peer",
        "type": "style",
        "chatgpt_zeroshot": "Refactor _onInterval method to use self instead of this"
    },
    {
        "msg": "style: :lipstick: Style index",
        "diff": "diff --git a/src/routes/index.svelte b/src/routes/index.svelte <script context=\"module\">\nexport async function load() {\nconst posts = import.meta.globEager('../sheets/*.md')\n+\n+ // for (const path in posts) {\n+ // console.log(path)\n+ // }\n+\nconst postsList = Object.values(posts)\nconst postsMeta = postsList.map(post => {\nreturn post.metadata\n<ul>\n{#each posts as post}\n{#if post.published}\n- <li>\n+ <li\n+ class=\"text-4xl font-medium my-5 hover:underline hover:text-purple-600\"\n+ >\n<a sveltekit:prefetch href={`/${post.slug}`}>{post.title}</a>\n</li>\n{/if}\n",
        "date": "03.06.2021 20:03:41",
        "repo": "spences10/cheat-sheets",
        "type": "style",
        "chatgpt_zeroshot": "Add hover effect to post titles in index page"
    },
    {
        "msg": "style: :lipstick: add max height",
        "diff": "diff --git a/src/lib/table-of-contents.svelte b/src/lib/table-of-contents.svelte <h3 class=\"font-extrabold text-lg mb-2\" id=\"table-of-contents\">\nTable of Contents\n</h3>\n- <ul class=\"h-72 overflow-auto\">\n+ <ul class=\"max-h-72 overflow-auto\">\n{#each headings as heading}\n<li class=\"mb-2\" key={`heading-${heading.href}`}>\n<a href={heading.href}>{heading.label}</a>\n",
        "date": "11.07.2021 20:03:19",
        "repo": "spences10/cheat-sheets",
        "type": "style",
        "chatgpt_zeroshot": "Refactor table of contents list height styling"
    },
    {
        "msg": "style: :lipstick: change latyout, add cards",
        "diff": "diff --git a/src/routes/index.svelte b/src/routes/index.svelte type=\"text\"\nbind:value={query}\nplaceholder=\"Search\"\n- class=\"input input-primary input-bordered text-xl\"\n+ class=\"input input-primary input-bordered text-xl mb-10\"\n/>\n</div>\n+<ul\n+ class=\"mb-10 grid gap-5 grid-cols-1 xs:grid-cols-2 md:grid-cols-3\"\n+>\n{#if results.length === 0}\n- <ul>\n{#each sheets as sheet}\n{#if sheet.published}\n- <li class=\"font-medium my-5 text-4xl\">\n+ <li\n+ class=\"font-medium text-3xl border border-primary rounded-2xl p-5\"\n+ >\n<a class=\"link\" sveltekit:prefetch href={`/${sheet.slug}`}\n>{sheet.title}</a\n>\n</li>\n{/if}\n{/each}\n- </ul>\n{:else}\n{#each results as result}\n- <ul>\n<li class=\"font-medium my-5 text-4xl\">\n<a class=\"link\" sveltekit:prefetch href={result.item.slug}>\n{result.item.title}\n</a>\n</li>\n- </ul>\n{/each}\n{/if}\n+</ul>\n",
        "date": "05.04.2022 20:41:31",
        "repo": "spences10/cheat-sheets",
        "type": "style",
        "chatgpt_zeroshot": "Add margin-bottom to search input and style search results grid."
    },
    {
        "msg": "style: :lipstick: author styles",
        "diff": "diff --git a/src/lib/author.svelte b/src/lib/author.svelte class=\"not-prose border border-primary shadow-lg p-4 rounded-2xl\"\n>\n<div class=\"flex space-x-5 justify-evenly\">\n- <a href={data.html_url} target=\"_blank\" rel=\"noopener\">\n+ <a\n+ class=\"w-1/4\"\n+ href={data.html_url}\n+ target=\"_blank\"\n+ rel=\"noopener\"\n+ >\n<img\n- class=\"w-20 h-20 p-0 m-0 rounded-full\"\n+ class=\"w-20 h-20 p-0 m-0 rounded-full object-cover\"\nsrc={data.avatar_url}\nalt={data.name}\n/>\n</a>\n- <a href={data.html_url} target=\"_blank\" rel=\"noopener\">\n+ <a\n+ class=\"w-3/4\"\n+ href={data.html_url}\n+ target=\"_blank\"\n+ rel=\"noopener\"\n+ >\n<div class=\"text-sm\">\n<p class=\"text-lg font-bold tracking-widest\">{data.name}</p>\n<p>{data.bio || ``}</p>\n",
        "date": "08.05.2022 17:51:04",
        "repo": "spences10/cheat-sheets",
        "type": "style",
        "chatgpt_zeroshot": "Style: Update author component layout and styling"
    },
    {
        "msg": "style(Embed): update typings and propTypes usage",
        "diff": "diff --git a/src/modules/Embed/index.d.ts b/src/modules/Embed/index.d.ts import * as React from 'react';\ninterface EmbedProps {\n- /** An embed can be active. */\n- active?: boolean;\n+ [key: string]: any;\n/** An element type to render as (string or function). */\nas?: any;\n+ /** An embed can be active. */\n+ active?: boolean;\n+\n/** An embed can specify an alternative aspect ratio. */\naspectRatio?: '4:3' | '16:9' | '21:9';\n@@ -16,6 +18,9 @@ interface EmbedProps {\n/** Whether to show networks branded UI like title cards, or after video calls to action. */\nbrandedUI?: boolean;\n+ /** Primary content. */\n+ children?: React.ReactNode;\n+\n/** Additional classes. */\nclassName?: string;\n@@ -40,7 +45,7 @@ interface EmbedProps {\n* @param {SyntheticEvent} event - React's original SyntheticEvent.\n* @param {object} data - All props and proposed value.\n*/\n- onClick?: (e: React.FormEvent<HTMLVideoElement>, data: this) => void;\n+ onClick?: (event: React.MouseEvent<HTMLDivElement>, data: EmbedProps) => void;\n/** A placeholder image for embed. */\nplaceholder?: string;\n",
        "date": "24.01.2017 21:21:06",
        "repo": "semantic-org/semantic-ui-react",
        "type": "style",
        "chatgpt_zeroshot": "Refactor Embed component props and event handler types"
    },
    {
        "msg": "style(Form): fix typo in examples",
        "diff": "diff --git a/docs/app/Examples/collections/Form/Shorthand/index.js b/docs/app/Examples/collections/Form/Shorthand/index.js @@ -58,7 +58,7 @@ const FormTypesExamples = () => (\ntitle='Field with Custom Control'\ndescription={[\n'Render a field containing a label and custom form control.',\n- 'Use any component form any library, or your own.',\n+ 'Use any component from any library, or your own.',\n].join(' ')}\nexamplePath='collections/Form/Shorthand/FormExampleFieldControl'\n>\n",
        "date": "09.10.2017 18:20:51",
        "repo": "semantic-org/semantic-ui-react",
        "type": "style",
        "chatgpt_zeroshot": "Fix typo in Form/Shorthand index.js file"
    },
    {
        "msg": "style(configs): code comment fix\n* Code comment fix\ntranspiled instead of transipiled\n* Update static.webpack.js\n* Update static.webpack.js",
        "diff": "diff --git a/static.webpack.js b/static.webpack.js @@ -32,7 +32,7 @@ export default (webpackConfig, { stage }) => ({\ntest: /\\.js$/,\ninclude: [\n// Heads up!\n- // There modules should be manually transipiled because they are not compatible with IE11\n+ // There modules should be manually transpiled because they are not compatible with IE11\npath.resolve(__dirname, 'node_modules/ansi-styles'),\npath.resolve(__dirname, 'node_modules/debug'),\n",
        "date": "22.04.2019 12:55:48",
        "repo": "semantic-org/semantic-ui-react",
        "type": "style",
        "chatgpt_zeroshot": "Fix typo in comment in static.webpack.js"
    },
    {
        "msg": "style: search bar closes",
        "diff": "diff --git a/src/components/layout/addons/AddonsLayout.js b/src/components/layout/addons/AddonsLayout.js @@ -94,7 +94,7 @@ const ClearButton = styled.button`\nborder-radius: 100%;\noverflow: hidden;\noutline: none;\n-\n+ cursor: pointer;\nfont-size: 10px;\nline-height: 1;\nposition: absolute;\n@@ -123,6 +123,7 @@ const SearchInput = styled(Input)`\npadding-left: 36px;\npadding-top: 10px;\npadding-bottom: 10px;\n+ padding-right: 30px;\n&::-webkit-search-cancel-button,\n&::-webkit-search-decoration {\n",
        "date": "03.10.2021 16:04:10",
        "repo": "storybookjs/frontpage",
        "type": "style",
        "chatgpt_zeroshot": "Add cursor pointer to ClearButton and adjust padding in SearchInput"
    },
    {
        "msg": "style: Fix indent",
        "diff": "diff --git a/src/library/r6rs_lib.js b/src/library/r6rs_lib.js @@ -23,10 +23,6 @@ import { Record, isRecord, assert_record, assert_record_td, assert_record_cd } f\nimport { BiwaSymbol, Sym, gensym } from \"../system/symbol.js\"\nimport Values from \"../system/values.js\"\n-//\n-// R6RS Base library\n-//\n-\n///\n/// R6RS Base library\n///\n",
        "date": "08.08.2020 11:56:06",
        "repo": "biwascheme/biwascheme",
        "type": "style",
        "chatgpt_zeroshot": "Remove unnecessary comments from R6RS Base library."
    },
    {
        "msg": "style(Badge): Standardizing tag assignment name",
        "diff": "diff --git a/src/Badge.js b/src/Badge.js @@ -23,7 +23,7 @@ const Badge = (props) => {\ncssModule,\ncolor,\npill,\n- tag: Component,\n+ tag: Tag,\n...attributes\n} = props;\n@@ -35,7 +35,7 @@ const Badge = (props) => {\n), cssModule);\nreturn (\n- <Component {...attributes} className={classes} />\n+ <Tag {...attributes} className={classes} />\n);\n};\n",
        "date": "16.03.2017 16:26:33",
        "repo": "reactstrap/reactstrap",
        "type": "style",
        "chatgpt_zeroshot": "Refactor Badge component to use 'Tag' instead of 'Component' prop"
    },
    {
        "msg": "style(lint): linted module.js",
        "diff": "diff --git a/lib/module.js b/lib/module.js -const firebase = require('firebase')\nconst { resolve } = require('path')\n+const firebase = require('firebase')\nconst logger = require('./logger')\nconst createServerMiddleware = require('./helpers/createServerMiddleware')\n",
        "date": "18.03.2020 23:21:30",
        "repo": "nuxt-community/firebase-module",
        "type": "style",
        "chatgpt_zeroshot": "Refactor module.js to import logger and createServerMiddleware from their respective files"
    },
    {
        "msg": "style(main): adjust comment for firebase performance",
        "diff": "diff --git a/lib/plugins/main.js b/lib/plugins/main.js @@ -250,7 +250,7 @@ export default async ({ res }, inject) => {\n<% if (options.services.performance) { %>\n/** --------------------------------------------------------------------------------------------- **/\n- /** ----------------------------------- FIREBASE REALTIME DB ------------------------------------ **/\n+ /** ----------------------------------- FIREBASE PERFORMANCE ------------------------------------ **/\n/** --------------------------------------------------------------------------------------------- **/\n// Firebase Performance can only be initiated on client side\n",
        "date": "24.04.2020 23:49:07",
        "repo": "nuxt-community/firebase-module",
        "type": "style",
        "chatgpt_zeroshot": "Refactor Firebase Realtime DB to Firebase Performance in main.js"
    },
    {
        "msg": "style: removed semicolons",
        "diff": "diff --git a/lib/templates/firebase-auth-sw.js b/lib/templates/firebase-auth-sw.js @@ -23,61 +23,61 @@ firebase.initializeApp(<%= serialize(options.config) %>)\nconst getIdToken = () => {\nreturn new Promise((resolve) => {\nconst unsubscribe = firebase.auth().onAuthStateChanged((user) => {\n- unsubscribe();\n+ unsubscribe()\nif (user) {\n// force token refresh as it might be used to sign in server side\nuser.getIdToken(true).then((idToken) => {\n- resolve(idToken);\n+ resolve(idToken)\n}, () => {\n- resolve(null);\n- });\n+ resolve(null)\n+ })\n} else {\n- resolve(null);\n+ resolve(null)\n+ }\n+ })\n+ })\n}\n- });\n- });\n-};\nconst fetchWithAuthorization = async (original, idToken) => {\n// Clone headers as request headers are immutable.\n- const headers = new Headers();\n+ const headers = new Headers()\nfor (let entry of original.headers.entries()) {\n- headers.append(entry[0], entry[1]);\n+ headers.append(entry[0], entry[1])\n}\n// Add ID token to header.\n- headers.append('Authorization', 'Bearer ' + idToken);\n+ headers.append('Authorization', 'Bearer ' + idToken)\n// Create authorized request\n- const { url, ...props } = original.clone();\n+ const { url, ...props } = original.clone()\nconst authorized = new Request(url, {\n...props,\nmode: 'same-origin',\nredirect: 'manual',\nheaders\n- });\n+ })\nreturn fetch(authorized)\n-};\n+}\nself.addEventListener('fetch', (event) => {\n- const url = new URL(event.request.url);\n+ const url = new URL(event.request.url)\nconst expectsHTML = event.request.headers.get('accept').includes('text/html')\n- const isSameOrigin = self.location.origin === url.origin;\n- const isHttps = (self.location.protocol === 'https:' || self.location.hostname === 'localhost');\n+ const isSameOrigin = self.location.origin === url.origin\n+ const isHttps = (self.location.protocol === 'https:' || self.location.hostname === 'localhost')\nconst isIgnored = ignorePaths.some(path => {\nif (typeof path === 'string') {\nreturn url.pathname.startsWith(path)\n}\nreturn path.test(url.pathname.slice(1))\n- });\n+ })\nif (!expectsHTML || !isSameOrigin || !isHttps || isIgnored) {\n- event.respondWith(fetch(event.request));\n+ event.respondWith(fetch(event.request))\n- return;\n+ return\n}\n// Fetch the resource after checking for the ID token.\n@@ -93,9 +93,9 @@ self.addEventListener('fetch', (event) => {\n: fetch(event.request)\n)\n)\n-});\n+})\n// In service worker script.\nself.addEventListener('activate', event => {\n- event.waitUntil(clients.claim());\n-});\n+ event.waitUntil(clients.claim())\n+})\n",
        "date": "01.06.2020 15:35:50",
        "repo": "nuxt-community/firebase-module",
        "type": "style",
        "chatgpt_zeroshot": "Refactor code in firebase-auth-sw.js file"
    },
    {
        "msg": "style: fix failing style tests",
        "diff": "diff --git a/components/SimilarityGraph/index.js b/components/SimilarityGraph/index.js @@ -109,7 +109,7 @@ export default class SimilarityGraph extends VisComponent {\n.attr('x1', d => d.source.x)\n.attr('y1', d => d.source.y)\n.attr('x2', d => d.target.x)\n- .attr('y2', d => d.target.y)\n+ .attr('y2', d => d.target.y);\n});\nthis.cola.avoidOverlaps(true)\n",
        "date": "20.04.2017 14:14:31",
        "repo": "kitware/candela",
        "type": "style",
        "chatgpt_zeroshot": "Fix bug in SimilarityGraph index.js file"
    },
    {
        "msg": "style: delint",
        "diff": "diff --git a/components/TreeHeatmap/index.js b/components/TreeHeatmap/index.js @@ -169,7 +169,7 @@ export default class TreeHeatmap extends VisComponent {\nchild1: +row._child1,\nchild2: +row._child2,\ndistance: +row._distance,\n- size: +row._size,\n+ size: +row._size\n});\n}\n});\n@@ -192,11 +192,9 @@ export default class TreeHeatmap extends VisComponent {\nlet opacity = () => 1;\nif (this.thresholdMode === 'less than') {\nopacity = d => d.value < this.threshold ? 1 : 0;\n- }\n- else if (this.thresholdMode === 'greater than') {\n+ } else if (this.thresholdMode === 'greater than') {\nopacity = d => d.value > this.threshold ? 1 : 0;\n- }\n- else if (this.thresholdMode === 'absolute value greater than') {\n+ } else if (this.thresholdMode === 'absolute value greater than') {\nopacity = d => Math.abs(d.value) > this.threshold ? 1 : 0;\n}\n@@ -312,7 +310,7 @@ export default class TreeHeatmap extends VisComponent {\nlet group = vis.append('g')\n.attr('class', orientation)\n- .attr('clip-path', 'url(#clip-' + orientation + ')')\n+ .attr('clip-path', 'url(#clip-' + orientation + ')');\ngroup.selectAll('.tree-links').data(links)\n.enter()\n@@ -347,8 +345,8 @@ export default class TreeHeatmap extends VisComponent {\n.data(reverseLinks).transition().duration(duration)\n.attr(axis1, d => distanceScale(distance(d)))\n.attr(axis2, d => treeScale(d.offset))\n- .attr(axis1 == 'x' ? 'width' : 'height', d => distanceScale(0) - distanceScale(distance(d)))\n- .attr(axis2 == 'x' ? 'width' : 'height', d => treeScale(d.offset + d.size) - treeScale(d.offset));\n+ .attr(axis1 === 'x' ? 'width' : 'height', d => distanceScale(0) - distanceScale(distance(d)))\n+ .attr(axis2 === 'x' ? 'width' : 'height', d => treeScale(d.offset + d.size) - treeScale(d.offset));\nvis.selectAll('.datum')\n.data(rectData).transition().duration(duration)\n@@ -364,7 +362,6 @@ export default class TreeHeatmap extends VisComponent {\ncolLabelGroup.selectAll('.col-label')\n.data(columns).transition().duration(duration)\n.attr('transform', d => 'translate(' + xScale(d.pos) + ',' + (yStart + rowSize) + ')');\n-\n}\ngroup.selectAll('.tree-select').data(reverseLinks).enter()\n",
        "date": "25.04.2017 11:56:05",
        "repo": "kitware/candela",
        "type": "style",
        "chatgpt_zeroshot": "Refactor TreeHeatmap component code for better readability and consistency"
    },
    {
        "msg": "style: delint blank line",
        "diff": "diff --git a/components/TreeHeatmap/test/treeheatmap.js b/components/TreeHeatmap/test/treeheatmap.js import test from 'tape-catch';\nimport TreeHeatmap from '..';\n-\ntest('TreeHeatmap component ', t => {\nlet el = document.createElement('div');\nlet vis = new TreeHeatmap(el);\n",
        "date": "16.05.2017 12:16:45",
        "repo": "kitware/candela",
        "type": "style",
        "chatgpt_zeroshot": "Refactor TreeHeatmap test file"
    },
    {
        "msg": "style: Fix eslint error about spaces in regex",
        "diff": "diff --git a/components/TreeHeatmap/test/treeheatmap.js b/components/TreeHeatmap/test/treeheatmap.js @@ -31,7 +31,7 @@ test('TreeHeatmap component', t => {\n<g clip-path=\"url(#clip-row-labels)\"><text class=\"row-label\" color=\"black\" font-size=\"10px\" alignment-baseline=\"middle\" x=\"300\" y=\"200\">0</text></g>\n<clipPath id=\"clip-col-labels\"><rect x=\"100\" y=\"300\" width=\"200\" height=\"100\"></rect></clipPath>\n<g clip-path=\"url(#clip-col-labels)\"><g transform=\"translate(200,300)\" class=\"col-label\"><text color=\"black\" font-size=\"10px\" transform=\"rotate(-90)\" text-anchor=\"end\" alignment-baseline=\"middle\">a</text></g></g>\n- </svg>`.replace(/\\n/g, '').replace(/ /g, '');\n+ </svg>`.replace(/\\n/g, '').replace(/ {2}/g, '');\nt.ok(el.isEqualNode(single), 'single row and column produce the right graphics');\n@@ -78,7 +78,7 @@ test('TreeHeatmap component', t => {\n<path class=\"tree-links\" d=\"M150,100L150,0L250,0L250,100\" style=\"fill-opacity: 0; stroke: #000000;\"></path>\n<rect class=\"tree-select\" y=\"0\" x=\"100\" height=\"100\" width=\"200\" style=\"fill: #4682b4; fill-opacity: 0;\"></rect>\n</g>\n- </svg>`.replace(/\\n/g, '').replace(/ /g, '');\n+ </svg>`.replace(/\\n/g, '').replace(/ {2}/g, '');\nt.ok(el.isEqualNode(two), 'two rows and columns produce the right graphics');\n",
        "date": "17.05.2017 11:51:53",
        "repo": "kitware/candela",
        "type": "style",
        "chatgpt_zeroshot": "Refactor code to replace multiple spaces with single space in SVG element styling."
    },
    {
        "msg": "style: alphabetize deps in package.json",
        "diff": "diff --git a/package.json b/package.json \"author\": \"Roni Choudhury\",\n\"license\": \"Apache-2.0\",\n\"devDependencies\": {\n+ \"UpSet\": \"git+https://github.com/jeffbaumes/upset#no-global-vars\",\n\"babel-cli\": \"^6.7.5\",\n\"babel-core\": \"^6.24.1\",\n\"babel-istanbul-loader\": \"^0.1.0\",\n\"style-loader\": \"^0.18.1\",\n\"stylus\": \"^0.54.5\",\n\"stylus-loader\": \"^3.0.1\",\n+ \"tap-spec\": \"^4.1.1\",\n\"tape\": \"^4.6.3\",\n\"tape-catch\": \"^1.0.6\",\n- \"tap-spec\": \"^4.1.1\",\n\"telegraph-events\": \"^1.0.3\",\n\"underscore\": \"^1.8.3\",\n- \"UpSet\": \"git+https://github.com/jeffbaumes/upset#no-global-vars\",\n\"url-loader\": \"^0.5.8\",\n\"validate-commit-msg\": \"^2.8.2\",\n\"vega\": \"^2.4.2\",\n",
        "date": "07.06.2017 11:49:28",
        "repo": "kitware/candela",
        "type": "style",
        "chatgpt_zeroshot": "Add UpSet library and tap-spec devDependency, remove tap-spec from devDependencies"
    },
    {
        "msg": "style: fix style error",
        "diff": "diff --git a/packages/examples/treeheatmap/index.js b/packages/examples/treeheatmap/index.js @@ -3,7 +3,7 @@ import { heatmap } from '../datasets';\nimport showComponent from '../util/showComponent';\nwindow.onload = () => {\n- showComponent(TreeHeatmap, {\n+ const vis = showComponent(TreeHeatmap, {\ndata: heatmap,\nscale: 'column'\n});\n",
        "date": "11.05.2018 13:07:56",
        "repo": "kitware/candela",
        "type": "style",
        "chatgpt_zeroshot": "Refactor TreeHeatmap component initialization in index.js"
    },
    {
        "msg": "style(all): add missing semicolon",
        "diff": "diff --git a/packages/all/src/index.js b/packages/all/src/index.js @@ -25,7 +25,7 @@ for (let bundle of [geojs, glo, lineup, onset, sententree, similaritygraph, stat\n}\nfor (let component in vega) {\nif (vega[component] !== vega.VegaView) {\n- components[component] = vega[component]\n+ components[component] = vega[component];\n}\n}\n",
        "date": "14.05.2018 13:22:41",
        "repo": "kitware/candela",
        "type": "style",
        "chatgpt_zeroshot": "Fix missing semicolon in vega component assignment"
    },
    {
        "msg": "style(pycandela): fix flake8 issues",
        "diff": "diff --git a/python/pycandela/pycandela/__init__.py b/python/pycandela/pycandela/__init__.py @@ -99,11 +99,13 @@ class Component(object):\ndef display(self):\ndisplay(self)\n+\ndef load(filename):\nwith open(filename) as f:\nc = json.load(f)\nreturn Component(c['name'], **c['options'])\n+\nclass ComponentAccessor(object):\ndef __dir__(self):\nreturn _component_list\n",
        "date": "16.05.2018 11:32:15",
        "repo": "kitware/candela",
        "type": "style",
        "chatgpt_zeroshot": "Add load method to Component class"
    },
    {
        "msg": "style(vega): remove trailing comma",
        "diff": "diff --git a/packages/vega/src/component/BoxPlot/index.js b/packages/vega/src/component/BoxPlot/index.js @@ -83,7 +83,7 @@ export default class BoxPlot extends VegaView(VisComponent) {\n},\nwidth: this.getWidth(200),\nheight: this.getHeight(200),\n- mark: 'box-plot',\n+ mark: 'box-plot'\n};\nspec.encoding.y = {\n",
        "date": "04.06.2018 11:56:57",
        "repo": "kitware/candela",
        "type": "style",
        "chatgpt_zeroshot": "Remove unnecessary comma after 'box-plot' mark in BoxPlot component."
    },
    {
        "msg": "style(.esdoc.json): format file",
        "diff": "diff --git a/.esdoc.json b/.esdoc.json {\n\"source\": \"./src\",\n\"destination\": \"./esdoc\",\n- \"excludes\": [\"dist\", \"db\", \"node_modules\", \"esdoc\", \"coverage\", \"jest_config\"],\n+ \"excludes\": [\n+ \"dist\",\n+ \"db\",\n+ \"node_modules\",\n+ \"esdoc\",\n+ \"coverage\",\n+ \"jest_config\"\n+ ],\n\"experimentalProposal\": {\n\"classProperties\": true,\n\"objectRestSpread\": true,\n",
        "date": "04.08.2017 13:53:00",
        "repo": "metnew/suicrux",
        "type": "style",
        "chatgpt_zeroshot": "Update .esdoc.json to exclude additional directories"
    },
    {
        "msg": "style(webpack_config): resolve eslint issues",
        "diff": "diff --git a/webpack_config/config.js b/webpack_config/config.js -'use strict'\n+/**\n+ * @file for config stuff that's used for webpack configuration, but isn't passed to webpack compiler\n+ */\n+\nconst path = require('path')\nconst rootPath = path.join(__dirname, '../') // = \"/\"\nconst distPath = path.join(rootPath, './dist') // = \"/dist\"\n@@ -32,7 +35,8 @@ module.exports = {\n},\n// text for WebpackBannerPlugin,\n// this plugin just adds text banner to the beginning of your file\n- banner: 'MIT License. Copyright (c) 2017 Vladimir Metnew All Rights Reserved. Repo: https://github.com/Metnew/react-semantic.ui-starter',\n+ banner:\n+ 'MIT License. Copyright (c) 2017 Vladimir Metnew All Rights Reserved. Repo: https://github.com/Metnew/react-semantic.ui-starter',\n// your manifest.json\nmanifest: {\nname: 'React-Semantic.UI-Starter',\n",
        "date": "06.08.2017 10:53:23",
        "repo": "metnew/suicrux",
        "type": "style",
        "chatgpt_zeroshot": "Refactor webpack config file and update banner text"
    },
    {
        "msg": "style(webpack_config/server): fix indent",
        "diff": "diff --git a/webpack_config/server/webpack.base.js b/webpack_config/server/webpack.base.js @@ -91,12 +91,11 @@ module.exports = {\nnew webpack.BannerPlugin({\nbanner: config.banner\n}),\n- // NOTE: Server can't process your styles/images/fonts on server-side rendering\n+ // Server can't process require of your styles/images/fonts\nnew webpack.NormalModuleReplacementPlugin(\n/\\.(css|sass|less|jpg|png|gif|scss)$/,\n'node-noop'\n)\n- // NOTE: @Metnew: If I remember correctly this plugin works similarly to NormalModuleReplacementPlugin\n// new webpack.IgnorePlugin(/\\.(css|sass|less|jpg|png|gif|scss)$/)\n],\nnode: {\n",
        "date": "07.08.2017 18:48:58",
        "repo": "metnew/suicrux",
        "type": "style",
        "chatgpt_zeroshot": "Refactor webpack base config to improve handling of styles, images, and fonts on the server side."
    },
    {
        "msg": "style(webpack_config/server): formatting\nstyle(webpack_config/server): formatting",
        "diff": "diff --git a/webpack_config/server/webpack.prod.babel.js b/webpack_config/server/webpack.prod.babel.js @@ -17,7 +17,7 @@ const plugins = [\nsourceMap: true,\ncompress: {\nwarnings: false\n- // This option removes console log in production\n+ // This option removes console.log in production\n// drop_console: true\n},\noutput: {\n",
        "date": "14.08.2017 17:12:48",
        "repo": "metnew/suicrux",
        "type": "style",
        "chatgpt_zeroshot": "Fix typo in comment in webpack.prod.babel.js"
    },
    {
        "msg": "style(actions/auth): formatting\nstyle(actions/auth): formatting",
        "diff": "diff --git a/src/common/actions/auth/index.js b/src/common/actions/auth/index.js -import {\n- loginAPI,\n- setLocalToken,\n- resetLocalToken,\n- resultOK\n-} from 'api'\n+import {loginAPI, setLocalToken, resetLocalToken, resultOK} from 'api'\nexport const LOGIN_AUTH_PENDING = 'LOGIN_AUTH_PENDING'\nexport const LOGIN_AUTH_SUCCESS = 'LOGIN_AUTH_SUCCESS'\n@@ -14,7 +9,7 @@ export const LOGOUT_AUTH_SUCCESS = 'LOGOUT_AUTH_SUCCESS'\nexport const LOGIN_AUTH = async data => {\nconst result = await loginAPI(data)\nif (!resultOK(result)) {\n- return {type: LOGIN_AUTH_FAIL, errors: result.data}\n+ return {type: LOGIN_AUTH_FAIL, errors: result && result.data}\n}\nsetLocalToken(result.data.token)\nreturn {type: LOGIN_AUTH_SUCCESS, result: result.data}\n",
        "date": "15.08.2017 01:01:27",
        "repo": "metnew/suicrux",
        "type": "style",
        "chatgpt_zeroshot": "Refactor loginAPI import and handle result check in LOGIN_AUTH action"
    },
    {
        "msg": "test: fix the mocks path in ReentrancyGuard test",
        "diff": "diff --git a/test/ReentrancyGuard.test.js b/test/ReentrancyGuard.test.js import expectThrow from './helpers/expectThrow';\n-const ReentrancyMock = artifacts.require('./helper/ReentrancyMock.sol');\n-const ReentrancyAttack = artifacts.require('./helper/ReentrancyAttack.sol');\n+const ReentrancyMock = artifacts.require('./mocks/ReentrancyMock.sol');\n+const ReentrancyAttack = artifacts.require('./mocks/ReentrancyAttack.sol');\ncontract('ReentrancyGuard', function (accounts) {\nlet reentrancyMock;\n",
        "date": "08.12.2017 02:57:29",
        "repo": "openzeppelin/openzeppelin-contracts",
        "type": "test",
        "chatgpt_zeroshot": "Refactor file paths for ReentrancyMock and ReentrancyAttack in ReentrancyGuard test file"
    },
    {
        "msg": "test(ci): removes firefox from list of tested browsers\nThis should fix the Heroku CI test pipeline which does not\nsupport the firefox test launcher out of the box.",
        "diff": "diff --git a/testem.js b/testem.js @@ -3,7 +3,7 @@ var isMasterBuild = process.env.TRAVIS_BRANCH === 'master';\nvar allBrowsers = [\n'Chrome', 'Firefox', 'BS_Safari_Current', 'BS_Safari_Last', 'BS_MS_Edge', 'BS_IE_11'\n];\n-var localBrowsers = ['Chrome', 'Firefox'];\n+var localBrowsers = ['Chrome'];\nvar ciBrowsers = isMasterBuild ? allBrowsers : localBrowsers;\nmodule.exports = {\n",
        "date": "22.04.2018 14:42:41",
        "repo": "ember-learn/ember-api-docs",
        "type": "test",
        "chatgpt_zeroshot": "Remove Firefox from localBrowsers array"
    },
    {
        "msg": "test: skip a test",
        "diff": "diff --git a/test/events/complete.test.js b/test/events/complete.test.js @@ -89,25 +89,25 @@ describe('events should follow normal flow on user triggered change',\n});\n});\n- it('quit', function (done) {\n- var cmd = asCLI('env.js');\n- cmd.exec = path.join('..', '..', '..', cmd.exec);\n- var p = fork(cmd.exec, cmd.args, {\n- cwd: dir,\n- silent: true,\n- detached: true,\n- });\n- p.stdout.on('data', function (m) {\n- m = m.toString().trim();\n- if (m === 'STOPPED') {\n- p.kill('SIGINT');\n- }\n- if (m === 'QUIT') {\n- assert(true, '\"quit\" event');\n- done();\n- }\n- });\n- });\n+ // it('quit', function (done) {\n+ // var cmd = asCLI('env.js');\n+ // cmd.exec = path.join('..', '..', '..', cmd.exec);\n+ // var p = fork(cmd.exec, cmd.args, {\n+ // cwd: dir,\n+ // silent: true,\n+ // detached: true,\n+ // });\n+ // p.stdout.on('data', function (m) {\n+ // m = m.toString().trim();\n+ // if (m === 'STOPPED') {\n+ // p.kill('SIGINT');\n+ // }\n+ // if (m === 'QUIT') {\n+ // assert(true, '\"quit\" event');\n+ // done();\n+ // }\n+ // });\n+ // });\nit('stdout', function (done) {\n",
        "date": "04.09.2017 20:41:47",
        "repo": "remy/nodemon",
        "type": "test",
        "chatgpt_zeroshot": "Commented out the 'quit' event test in complete.test.js"
    },
    {
        "msg": "test: only add npmrc on master",
        "diff": "diff --git a/.travis.yml b/.travis.yml @@ -9,7 +9,8 @@ node_js:\n- '8'\n- '6'\nbefore_install:\n- - echo \"//registry.npmjs.org/:_authToken=\\${NPM_TOKEN}\" > .npmrc\n+ - if [ \"$TRAVIS_BRANCH\" = \"master\" ]; then\n+ echo \"//registry.npmjs.org/:_authToken=\\${NPM_TOKEN}\" > .npmrc; fi\nafter_success:\n- npm run semantic-release\nbranches:\n",
        "date": "06.12.2017 12:36:41",
        "repo": "remy/nodemon",
        "type": "test",
        "chatgpt_zeroshot": "Only set NPM auth token for master branch"
    },
    {
        "msg": "test: fix typo in before_install",
        "diff": "diff --git a/.travis.yml b/.travis.yml @@ -9,8 +9,7 @@ node_js:\n- '8'\n- '6'\nbefore_install:\n- - if [ \"$TRAVIS_BRANCH\" = \"master\" ]; then\n- echo \"//registry.npmjs.org/:_authToken=\\${NPM_TOKEN}\" > .npmrc; fi\n+ - if [ \"$TRAVIS_BRANCH\" == \"master\" ]; then echo \"//registry.npmjs.org/:_authToken=\\${NPM_TOKEN}\" > .npmrc; fi\nafter_success:\n- npm run semantic-release\nbranches:\n",
        "date": "06.12.2017 19:13:06",
        "repo": "remy/nodemon",
        "type": "test",
        "chatgpt_zeroshot": "Fix conditional statement in .travis.yml for setting NPM auth token"
    },
    {
        "msg": "test: only use .npmrc if a non-PR",
        "diff": "diff --git a/.travis.yml b/.travis.yml @@ -9,7 +9,7 @@ node_js:\n- '8'\n- '6'\nbefore_install:\n- - if [ \"$TRAVIS_BRANCH\" == \"master\" ]; then echo \"//registry.npmjs.org/:_authToken=\\${NPM_TOKEN}\" > .npmrc; fi\n+ - if [ \"$TRAVIS_PULL_REQUEST_BRANCH\" == \"\" ]; then echo \"//registry.npmjs.org/:_authToken=\\${NPM_TOKEN}\" > .npmrc; fi\nafter_success:\n- npm run semantic-release\nbranches:\n",
        "date": "12.12.2017 15:25:20",
        "repo": "remy/nodemon",
        "type": "test",
        "chatgpt_zeroshot": "Update Travis CI configuration to only set NPM auth token for non-pull request branches"
    },
    {
        "msg": "test: fix hanging test",
        "diff": "diff --git a/test/monitor/match.test.js b/test/monitor/match.test.js @@ -342,9 +342,12 @@ describe('match rule parser', function () {\ndescribe('watcher', function () {\n- afterEach(function () {\n+ afterEach(function (done) {\nconfig.reset();\n+ setTimeout(() => {\nwatch.resetWatchers();\n+ done();\n+ }, 0)\n});\nit('should not crash if ignoreRoot is an empty array', function (done) {\n@@ -389,17 +392,16 @@ describe('watcher', function () {\n})\n});\n- /* fuck you, randomly, for no good goddamn reason, hanging test */\n- // it('should match a dotfolder if explicitly asked to', function (done) {\n- // config.load({\n- // watch: ['test/fixtures/.dotfolder']\n- // }, function (config) {\n- // return watch.watch()\n- // .then(function (files) {\n- // assert.deepEqual(files.length, 3, 'file lists should contain .dotfolder files');\n- // done();\n- // })\n- // .catch(done);\n- // })\n- // });\n+ it('should match a dotfolder if explicitly asked to', function (done) {\n+ config.load({\n+ watch: ['test/fixtures/.dotfolder']\n+ }, function (config) {\n+ return watch.watch()\n+ .then(function (files) {\n+ assert.deepEqual(files.length, 3, 'file lists should contain .dotfolder files');\n+ done();\n+ })\n+ .catch(done);\n+ })\n+ });\n});\n",
        "date": "18.12.2017 14:37:27",
        "repo": "remy/nodemon",
        "type": "test",
        "chatgpt_zeroshot": "Refactor afterEach function in match.test.js and fix hanging test for matching dotfolder files."
    },
    {
        "msg": "test: remove .only",
        "diff": "diff --git a/test/cli/parse.test.js b/test/cli/parse.test.js @@ -274,7 +274,7 @@ describe('nodemon respects custom \"ext\" and \"execMap\"', function () {\n});\n});\n-describe.only('nodemon should slurp properly', () => {\n+describe('nodemon should slurp properly', () => {\nit('should read quotes as a single entity', () => {\nconst settings = parse(asCLI('notindex.js -- -b \"hello - world\"'));\nassert(settings.execOptions.exec === 'node', 'node is exec');\n",
        "date": "23.12.2017 08:48:46",
        "repo": "remy/nodemon",
        "type": "test",
        "chatgpt_zeroshot": "Remove .only from test case for nodemon slurping functionality"
    },
    {
        "msg": "test: only run run-mac-only.test.js in darwin platform",
        "diff": "diff --git a/test/fork/run-mac-only.test.js b/test/fork/run-mac-only.test.js @@ -9,7 +9,7 @@ const filenames = [\n[__dirname + 'some\\ \\\\file', '#!/bin/sh\\necho \"OK\"'],\n];\n-if (!process.env.TRAVIS && process.platform !== 'win32') {\n+if (!process.env.TRAVIS && process.platform === 'darwin') {\ndescribe('nodemon fork (mac only)', () => {\nbefore(() => {\nfilenames.map(file => fs.writeFileSync(file[0], file[1], 'utf8'));\n",
        "date": "16.08.2018 10:31:27",
        "repo": "remy/nodemon",
        "type": "test",
        "chatgpt_zeroshot": "Fix platform check in run-mac-only test"
    },
    {
        "msg": "test: Fixing test case",
        "diff": "diff --git a/packages/wmr/test/fixtures/prerender-data/index.js b/packages/wmr/test/fixtures/prerender-data/index.js export function prerender() {\n- return { html: '<h1>it works</h1>', links: ['/'], data: { hello: 'world' } };\n+ return { html: '<h1>it works</h1><script type=\"isodata\"></script>', links: ['/'], data: { hello: 'world' } };\n}\n",
        "date": "15.11.2021 10:04:51",
        "repo": "preactjs/wmr",
        "type": "test",
        "chatgpt_zeroshot": "Add script tag for isodata in prerender function"
    },
    {
        "msg": "test(controls.test.js): add position testing to contro",
        "diff": "diff --git a/src/domain/controls.test.js b/src/domain/controls.test.js @@ -27,6 +27,7 @@ describe(\"Controls reducer\", () => {\n'start': 't0',\n'end': 'tn',\n'showBusy': true,\n+ 'position': [0,0]\n}\nconst action = setControls(controls);\n@@ -70,6 +71,7 @@ describe(\"Controls reducer\", () => {\n'start': null,\n'end': null,\n'showBusy': false,\n+ 'position': [0,0]\n});\ndone();\n",
        "date": "25.06.2019 10:51:23",
        "repo": "iqtlabs/crviz",
        "type": "test",
        "chatgpt_zeroshot": "Add position property to controls in reducer"
    },
    {
        "msg": "test: fix rtc config url",
        "diff": "diff --git a/test/common.js b/test/common.js @@ -4,7 +4,7 @@ var thunky = require('thunky')\nexports.getConfig = thunky(function (cb) {\n// Includes TURN -- needed for tests to pass on Sauce Labs\n// https://github.com/feross/simple-peer/issues/41\n- get.concat('https://instant.io/rtcConfig', function (err, res, data) {\n+ get.concat('https://instant.io/_rtcConfig', function (err, res, data) {\nif (err) return cb(err)\ndata = data.toString()\ntry {\n",
        "date": "05.01.2017 01:17:17",
        "repo": "feross/simple-peer",
        "type": "test",
        "chatgpt_zeroshot": "Fix URL in getConfig function in common.js"
    },
    {
        "msg": "test: Add link to Webkit bug to tests",
        "diff": "diff --git a/test/trickle.js b/test/trickle.js @@ -14,7 +14,8 @@ test('get config', function (t) {\ntest('disable trickle', function (t) {\nif (bowser.safari || bowser.ios) {\n- t.pass('Skip on Safari and iOS which do not support this reliably, it seems')\n+ // Note: Webkit bug filed here: https://bugs.webkit.org/show_bug.cgi?id=182906\n+ t.pass('Skip on Safari and iOS which do not support this reliably')\nt.end()\nreturn\n}\n@@ -64,7 +65,8 @@ test('disable trickle', function (t) {\ntest('disable trickle (only initiator)', function (t) {\nif (bowser.safari || bowser.ios) {\n- t.pass('Skip on Safari and iOS which do not support this reliably, it seems')\n+ // Note: Webkit bug filed here: https://bugs.webkit.org/show_bug.cgi?id=182906\n+ t.pass('Skip on Safari and iOS which do not support this reliably')\nt.end()\nreturn\n}\n@@ -114,7 +116,8 @@ test('disable trickle (only initiator)', function (t) {\ntest('disable trickle (only receiver)', function (t) {\nif (bowser.safari || bowser.ios) {\n- t.pass('Skip on Safari and iOS which do not support this reliably, it seems')\n+ // Note: Webkit bug filed here: https://bugs.webkit.org/show_bug.cgi?id=182906\n+ t.pass('Skip on Safari and iOS which do not support this reliably')\nt.end()\nreturn\n}\n",
        "date": "19.02.2018 15:04:02",
        "repo": "feross/simple-peer",
        "type": "test",
        "chatgpt_zeroshot": "Fix skip message for Safari and iOS in trickle.js tests"
    },
    {
        "msg": "test: add warning about TURN endpoint",
        "diff": "diff --git a/test/common.js b/test/common.js @@ -4,6 +4,7 @@ var thunky = require('thunky')\nexports.getConfig = thunky(function (cb) {\n// Includes TURN -- needed for tests to pass on Sauce Labs\n// https://github.com/feross/simple-peer/issues/41\n+ // WARNING: This is *NOT* a public endpoint. Do not depend on it in your app.\nget.concat('https://instant.io/__rtcConfig__', function (err, res, data) {\nif (err) return cb(err)\ndata = data.toString()\n",
        "date": "09.07.2018 15:29:30",
        "repo": "feross/simple-peer",
        "type": "test",
        "chatgpt_zeroshot": "Add warning about non-public endpoint in getConfig function"
    },
    {
        "msg": "test: can detect error when RTCPeerConstructor throws",
        "diff": "diff --git a/test/basic.js b/test/basic.js @@ -30,6 +30,16 @@ test('create peer without options', function (t) {\n}\n})\n+test('can detect error when RTCPeerConstructor throws', function (t) {\n+ t.plan(1)\n+\n+ var peer = new Peer({ wrtc: { RTCPeerConnection: null } })\n+ peer.once('error', function () {\n+ t.pass('got error event')\n+ peer.destroy()\n+ })\n+})\n+\ntest('signal event gets emitted', function (t) {\nt.plan(2)\n",
        "date": "11.07.2019 16:22:06",
        "repo": "feross/simple-peer",
        "type": "test",
        "chatgpt_zeroshot": "Add test for detecting error when RTCPeerConstructor throws"
    },
    {
        "msg": "test: skip ip tests on Edge (same as Chrome)",
        "diff": "diff --git a/test/basic.js b/test/basic.js @@ -222,8 +222,8 @@ test('ensure remote address and port are available right after connection', func\nt.end()\nreturn\n}\n- if (common.isBrowser('chrome')) {\n- t.pass('Skip on Chrome which hides local IPs with mDNS')\n+ if (common.isBrowser('chrome') || common.isBrowser('edge')) {\n+ t.pass('Skip on Chrome and Edge which hide local IPs with mDNS')\nt.end()\nreturn\n}\n",
        "date": "10.05.2020 17:30:45",
        "repo": "feross/simple-peer",
        "type": "test",
        "chatgpt_zeroshot": "Update test to skip on Chrome and Edge which hide local IPs with mDNS"
    },
    {
        "msg": "test: disable flaky node tests",
        "diff": "diff --git a/package.json b/package.json \"build\": \"browserify -s SimplePeer -r . | minify > simplepeer.min.js\",\n\"size\": \"npm run build && cat simplepeer.min.js | gzip | wc -c\",\n\"// test\": \"standard && npm run test-node && npm run test-browser\",\n- \"test\": \"standard && npm run test-node\",\n+ \"test\": \"standard && npm run test-browser\",\n\"test-browser\": \"airtap --coverage -- test/*.js\",\n\"test-browser-local\": \"airtap --coverage --local -- test/*.js\",\n\"test-node\": \"WRTC=wrtc tape test/*.js\",\n",
        "date": "21.04.2021 17:14:19",
        "repo": "feross/simple-peer",
        "type": "test",
        "chatgpt_zeroshot": "Update test script to run tests in browser as well as node"
    },
    {
        "msg": "test(breadcrumb): remove composition api",
        "diff": "diff --git a/packages/kiwi-core/src/Breadcrumb/tests/Breadcrumb.test.js b/packages/kiwi-core/src/Breadcrumb/tests/Breadcrumb.test.js import { Breadcrumb, BreadcrumbItem, BreadcrumbLink, BreadcrumbSeparator } from '../'\nimport { render } from '@/tests/test-utils'\n-import CompositionApi from '@vue/composition-api'\nconst renderComponent = (props) => {\nconst base = {\n@@ -23,9 +22,7 @@ const renderComponent = (props) => {\n`,\n...props\n}\n- return render(base, {}, vue => {\n- vue.use(CompositionApi)\n- })\n+ return render(base)\n}\nit('should render correctly', () => {\n",
        "date": "09.03.2020 00:11:57",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "chatgpt_zeroshot": "Remove CompositionApi import from Breadcrumb.test.js"
    },
    {
        "msg": "test(alert): add a11y test to alert component",
        "diff": "diff --git a/packages/chakra-ui-core/src/Alert/tests/Alert.test.js b/packages/chakra-ui-core/src/Alert/tests/Alert.test.js @@ -43,3 +43,14 @@ it('should override icon if set explicitly', () => {\nexpect(asFragment()).toMatchSnapshot()\n})\n+\n+it('should have role=alert', () => {\n+ const { getByRole } = renderComponent({\n+ template: `\n+ <Alert status=\"error\">\n+ <AlertIcon name=\"add\" />\n+ </Alert>`\n+ })\n+\n+ getByRole('alert')\n+})\n",
        "date": "15.03.2020 20:07:02",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "chatgpt_zeroshot": "Add test to ensure Alert component has role=alert"
    },
    {
        "msg": "test(avatar-group): add check for max items",
        "diff": "diff --git a/packages/chakra-ui-core/src/AvatarGroup/tests/AvatarGroup.test.js b/packages/chakra-ui-core/src/AvatarGroup/tests/AvatarGroup.test.js @@ -32,3 +32,9 @@ it('should render correctly', () => {\nconst { asFragment } = renderComponent()\nexpect(asFragment()).toMatchSnapshot()\n})\n+\n+test('renders a number avatar showing count of truncated avatars', () => {\n+ const { getByText } = renderComponent()\n+\n+ getByText('+1')\n+})\n",
        "date": "15.03.2020 20:08:14",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "chatgpt_zeroshot": "Add test for rendering a number avatar showing count of truncated avatars"
    },
    {
        "msg": "test(breadcrumb): add aria attrs check for breadcrumb component",
        "diff": "diff --git a/packages/chakra-ui-core/src/Breadcrumb/tests/Breadcrumb.test.js b/packages/chakra-ui-core/src/Breadcrumb/tests/Breadcrumb.test.js @@ -47,3 +47,30 @@ it('should display custom seperator ', () => {\n})\nexpect(asFragment()).toMatchSnapshot()\n})\n+\n+it('should have the proper aria-attributes', () => {\n+ const { getByText, getAllByRole, getByLabelText } = renderComponent({\n+ template: `\n+ <Breadcrumb>\n+ <BreadcrumbItem>\n+ <BreadcrumbLink href=\"/\">Home</BreadcrumbLink>\n+ </BreadcrumbItem>\n+ <BreadcrumbItem>\n+ <BreadcrumbLink href=\"/about\">About</BreadcrumbLink>\n+ </BreadcrumbItem>\n+ <BreadcrumbItem isCurrentPage>\n+ <BreadcrumbLink href=\"/contact\">Contact</BreadcrumbLink>\n+ </BreadcrumbItem>\n+ </Breadcrumb>`\n+ })\n+\n+ // surrounding `nav` has aria-label=\"breadcrumb\"\n+ getByLabelText('breadcrumb', { selector: 'nav' })\n+\n+ // `isCurrentPage` link has aria-current=\"page\"\n+ const currentPageLink = getByText('Contact')\n+ expect(currentPageLink).toHaveAttribute('aria-current', 'page')\n+\n+ // separator receives presentation=\"role\"\n+ expect(getAllByRole('presentation')).toHaveLength(2)\n+})\n",
        "date": "15.03.2020 20:11:25",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "chatgpt_zeroshot": "Add aria-attributes to Breadcrumb component tests"
    },
    {
        "msg": "test(alert-dialog): update Alert Dialog tests",
        "diff": "diff --git a/packages/chakra-ui-core/src/AlertDialog/tests/__snapshots__/AlertDialog.test.js.snap b/packages/chakra-ui-core/src/AlertDialog/tests/__snapshots__/AlertDialog.test.js.snap @@ -75,11 +75,10 @@ exports[`should render correctly 1`] = `\n>\n<div\nclass=\"css-l5w8ps\"\n- data-testid=\"overlay\"\n/>\n<div\nclass=\"css-aibg9d\"\n- data-testid=\"content\"\n+ data-testid=\"overlay\"\nrole=\"alertdialog\"\n>\n<section\n@@ -100,7 +99,13 @@ exports[`should render correctly 1`] = `\nclass=\"css-5m10fw\"\nid=\"alert-dialog-1-desc\"\n>\n+\nAre you sure?\n+\n+ <input\n+ data-testid=\"inputInsideDrawer\"\n+ placeholder=\"Type here...\"\n+ />\n</div>\n<footer\n",
        "date": "18.03.2020 00:11:03",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "chatgpt_zeroshot": "Refactor AlertDialog test snapshot to include input field inside the dialog."
    },
    {
        "msg": "test('alert-dialog'): add aria tests for Alert Dialog component",
        "diff": "diff --git a/packages/chakra-ui-core/src/AlertDialog/tests/__snapshots__/AlertDialog.test.js.snap b/packages/chakra-ui-core/src/AlertDialog/tests/__snapshots__/AlertDialog.test.js.snap @@ -22,7 +22,6 @@ exports[`should render correctly 1`] = `\n<div\nclass=\"css-aibg9d\"\ndata-testid=\"overlay\"\n- role=\"alertdialog\"\n>\n<section\naria-describedby=\"alert-dialog-1-desc\"\n@@ -30,7 +29,7 @@ exports[`should render correctly 1`] = `\naria-modal=\"true\"\nclass=\"css-i76yoi\"\nid=\"alert-dialog-1\"\n- role=\"dialog\"\n+ role=\"alertdialog\"\ntabindex=\"-1\"\n>\n<header\n",
        "date": "18.03.2020 23:20:51",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "chatgpt_zeroshot": "Fix role attribute in AlertDialog component test snapshot"
    },
    {
        "msg": "test(themeprovider): update themeprovider tests",
        "diff": "diff --git a/packages/chakra-ui-core/src/ThemeProvider/tests/ThemeProvider.test.js b/packages/chakra-ui-core/src/ThemeProvider/tests/ThemeProvider.test.js @@ -5,7 +5,7 @@ import theme from '../../../../chakra-ui-theme/src'\ndescribe('===== ThemeProvider Component =====', () => {\nlet themeProvider\nconst ChildComponent = {\n- inject: ['$theme'],\n+ inject: ['$theme', '$colorMode'],\nrender: h => h('div', {})\n}\n@@ -38,5 +38,6 @@ describe('===== ThemeProvider Component =====', () => {\n}\n})\nexpect(themeProvider.find(ChildComponent).vm.$theme()).toBe(theme)\n+ expect(themeProvider.find(ChildComponent).vm.$colorMode()).toBe('light')\n})\n})\n",
        "date": "22.03.2020 03:05:28",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "chatgpt_zeroshot": "Add $colorMode injection to ChildComponent in ThemeProvider test"
    },
    {
        "msg": "test(alert): remove unnecessary mock",
        "diff": "diff --git a/packages/chakra-ui-core/src/CAlert/tests/CAlert.test.js b/packages/chakra-ui-core/src/CAlert/tests/CAlert.test.js @@ -2,9 +2,6 @@ import { CAlert, CAlertIcon, CAlertTitle, CAlertDescription, CStack } from '../.\nimport { render, defaultProviders } from '@/tests/test-utils'\nimport icons from '../../lib/internal-icons'\n-// mocks\n-jest.mock('breadstick/dist/components/Alert/styles.css', () => ({})) // jest tries to import styles and fails...\n-\nconst renderComponent = (props) => {\nconst base = {\ncomponents: { CAlert, CAlertTitle, CAlertDescription, CAlertIcon, CStack },\n",
        "date": "19.04.2020 20:17:55",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "chatgpt_zeroshot": "Remove unnecessary mock for Alert styles in CAlert test file"
    },
    {
        "msg": "test(avatar-group): remove unnecessary mock",
        "diff": "diff --git a/packages/chakra-ui-core/src/CAvatarGroup/tests/CAvatarGroup.test.js b/packages/chakra-ui-core/src/CAvatarGroup/tests/CAvatarGroup.test.js import { CAvatar, CAvatarGroup } from '../..'\nimport { render } from '@/tests/test-utils'\n-// mocks\n-jest.mock('breadstick/dist/components/Alert/styles.css', () => ({})) // jest tries to import styles and fails...\n-\nconst renderComponent = (props) => {\nconst base = {\ncomponents: {\n",
        "date": "19.04.2020 20:18:11",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "chatgpt_zeroshot": "Remove jest mock for Alert styles in CAvatarGroup.test.js"
    },
    {
        "msg": "test(badge): remove unnecessary mock",
        "diff": "diff --git a/packages/chakra-ui-core/src/CBadge/tests/CBadge.test.js b/packages/chakra-ui-core/src/CBadge/tests/CBadge.test.js import { CBadge, CStack } from '../..'\nimport { render } from '@/tests/test-utils'\n-// mocks\n-jest.mock('breadstick/dist/components/Alert/styles.css', () => ({})) // jest tries to import styles and fails...\n-\nconst renderComponent = (props) => {\nconst base = {\ncomponents: { CBadge, CStack },\n",
        "date": "19.04.2020 20:19:01",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "chatgpt_zeroshot": "Remove unnecessary mock for Alert styles in CBadge.test.js"
    },
    {
        "msg": "test(button): remove unnecessary mock",
        "diff": "diff --git a/packages/chakra-ui-core/src/CButton/tests/CButton.test.js b/packages/chakra-ui-core/src/CButton/tests/CButton.test.js import { CButton } from '../..'\nimport { render, defaultProviders } from '@/tests/test-utils'\n-// mocks\n-jest.mock('breadstick/dist/components/Alert/styles.css', () => ({})) // jest tries to import styles and fails...\n-\nconst renderComponent = (props) => {\nconst base = {\ncomponents: {\n",
        "date": "19.04.2020 20:20:50",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "chatgpt_zeroshot": "Remove unnecessary mock for Alert styles in CButton.test.js"
    },
    {
        "msg": "test(form-control): remove unnecessary mock",
        "diff": "diff --git a/packages/chakra-ui-core/src/CFormControl/tests/CFormControl.test.js b/packages/chakra-ui-core/src/CFormControl/tests/CFormControl.test.js import { CFormControl, CInput, CFormLabel } from '../..'\nimport { render } from '@/tests/test-utils'\n-// mocks\n-jest.mock('breadstick/dist/components/Alert/styles.css', () => ({})) // jest tries to import styles and fails...\n-\nconst renderComponent = (props) => {\nconst inlineAttrs = (props && props.inlineAttrs) || ''\nconst base = {\n",
        "date": "19.04.2020 20:25:34",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "chatgpt_zeroshot": "Remove jest mock for breadstick Alert styles css in CFormControl.test.js"
    },
    {
        "msg": "test(alert-dialog): remove dom, breadstick mocks and v-scroll-lock mock",
        "diff": "diff --git a/packages/chakra-ui-core/src/CAlertDialog/tests/CAlertDialog.test.js b/packages/chakra-ui-core/src/CAlertDialog/tests/CAlertDialog.test.js import { CButton, CAlertDialog, CAlertDialogContent, CAlertDialogBody, CAlertDialogFooter, CAlertDialogOverlay, CAlertDialogHeader } from '../..'\nimport { render, defaultProviders, userEvent, fireEvent, waitMs } from '@/tests/test-utils'\nimport Vue from 'vue'\n-import { useId, wrapEvent } from '@/packages/chakra-ui-core/src/utils'\n+import { useId } from '@/packages/chakra-ui-core/src/utils'\n// mocks\n-jest.mock('@/packages/chakra-ui-core/src/utils/dom.js')\njest.mock('@/packages/chakra-ui-core/src/utils/generators.js')\n-jest.mock('v-scroll-lock', () => ({}))\n-jest.mock('@/packages/chakra-ui-core/src/CToast/index.js', () => {})\nconst renderComponent = (props) => {\nconst inlineAttrs = (props && props.inlineAttrs) || ''\n@@ -50,7 +47,6 @@ const renderComponent = (props) => {\nit('should render correctly', async () => {\nuseId.mockReturnValueOnce('1')\n- wrapEvent.mockImplementation(() => jest.fn())\nconst inlineAttrs = 'isOpen'\nconst { asFragment } = renderComponent({ inlineAttrs })\n",
        "date": "19.04.2020 20:55:53",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "chatgpt_zeroshot": "Remove wrapEvent mock implementation and jest.mock for v-scroll-lock and CToast. Update imports in CAlertDialog.test.js."
    },
    {
        "msg": "test(drawer): remove dom, breadstick mocks and v-scroll-lock mock",
        "diff": "diff --git a/packages/chakra-ui-core/src/CDrawer/tests/CDrawer.test.js b/packages/chakra-ui-core/src/CDrawer/tests/CDrawer.test.js import { CInput, CButton, CDrawer, CDrawerBody, CDrawerFooter, CDrawerHeader, CDrawerOverlay, CDrawerContent, CDrawerCloseButton } from '../../'\nimport { render, defaultProviders, userEvent, fireEvent, waitMs } from '@/tests/test-utils'\nimport Vue from 'vue'\n-import { useId, wrapEvent } from '@/packages/chakra-ui-core/src/utils'\n+import { useId } from '@/packages/chakra-ui-core/src/utils'\n// mocks\n-jest.mock('@/packages/chakra-ui-core/src/utils/dom.js')\njest.mock('@/packages/chakra-ui-core/src/utils/generators.js')\n-jest.mock('v-scroll-lock', () => ({}))\n-jest.mock('@/packages/chakra-ui-core/src/CToast/index.js', () => {})\nconst renderComponent = (props) => {\nconst inlineAttrs = (props && props.inlineAttrs) || ''\n@@ -50,7 +47,6 @@ const renderComponent = (props) => {\nit('should render correctly', async () => {\nuseId.mockReturnValueOnce('1')\n- wrapEvent.mockImplementation(() => jest.fn())\nconst inlineAttrs = 'isOpen'\nconst { asFragment } = renderComponent({ inlineAttrs })\n",
        "date": "19.04.2020 20:57:24",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "chatgpt_zeroshot": "Remove wrapEvent mock implementation and unused imports"
    },
    {
        "msg": "test(edtiable): remove breadstick mock",
        "diff": "diff --git a/packages/chakra-ui-core/src/CEditable/tests/CEditable.test.js b/packages/chakra-ui-core/src/CEditable/tests/CEditable.test.js @@ -3,7 +3,6 @@ import { render, defaultProviders, userEvent, fireEvent } from '@/tests/test-uti\nimport { useId } from '../../utils'\n// mocks\n-jest.mock('@/packages/chakra-ui-core/src/CToast/index.js', () => {})\njest.mock('@/packages/chakra-ui-core/src/utils/generators.js')\nconst renderComponent = (props) => {\n",
        "date": "19.04.2020 21:00:22",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "chatgpt_zeroshot": "Remove mock for CToast in CEditable.test.js"
    },
    {
        "msg": "test(modal): remove scroll and breadstick mocks",
        "diff": "diff --git a/packages/chakra-ui-core/src/CModal/tests/CModal.test.js b/packages/chakra-ui-core/src/CModal/tests/CModal.test.js @@ -4,10 +4,8 @@ import Vue from 'vue'\nimport { useId, wrapEvent } from '@/packages/chakra-ui-core/src/utils'\n// mocks\n-jest.mock('@/packages/chakra-ui-core/src/utils/dom.js')\n+jest.mock('@/packages/chakra-ui-core/src/utils/dom.js') // click\njest.mock('@/packages/chakra-ui-core/src/utils/generators.js')\n-jest.mock('v-scroll-lock', () => ({}))\n-jest.mock('@/packages/chakra-ui-core/src/CToast/index.js', () => {})\nconst renderComponent = (props) => {\nconst inlineAttrs = (props && props.inlineAttrs) || ''\n",
        "date": "19.04.2020 22:49:40",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "chatgpt_zeroshot": "Refactor CModal.test.js and update mocks"
    },
    {
        "msg": "test(stat): refactor providers",
        "diff": "diff --git a/packages/chakra-ui-core/src/CStat/tests/CStat.test.js b/packages/chakra-ui-core/src/CStat/tests/CStat.test.js import { CStat, CStatLabel, CStatNumber, CStatHelperText, CStatArrow } from '..'\nimport { render, defaultProviders } from '@/tests/test-utils'\n-import internalIcons from '../../lib/internal-icons.js'\n-\n-const { 'triangle-up': increase, 'triangle-down': decrease } = internalIcons\n+import icons from '../../lib/internal-icons.js'\nconst renderComponent = (props) => {\nconst base = {\ncomponents: { CStat, CStatLabel, CStatNumber, CStatHelperText, CStatArrow },\n- provide: () => ({\n- ...defaultProviders(),\n- $chakraIcons: {\n- 'triangle-up': increase,\n- 'triangle-down': decrease\n- }\n- }),\n+ provide: () => defaultProviders({ $chakraIcons: { 'triangle-up': icons['triangle-up'], 'triangle-down': icons['triangle-down'] } }),\ntemplate: `\n<CStat>\n<CStatLabel>Collected Fees</CStatLabel>\n",
        "date": "19.04.2020 23:23:24",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "chatgpt_zeroshot": "Refactor CStat test file to use icons directly from internal-icons module"
    },
    {
        "msg": "test(tag): refactor provider",
        "diff": "diff --git a/packages/chakra-ui-core/src/CTag/tests/CTag.test.js b/packages/chakra-ui-core/src/CTag/tests/CTag.test.js import { CBox, CTag, CTagLabel, CTagIcon, CTagCloseButton, CAvatar } from '../..'\n-import { render, defaultProviders } from '@/tests/test-utils'\n+import { render } from '@/tests/test-utils'\nconst renderComponent = (props) => {\nconst base = {\ncomponents: { CBox, CTag, CTagLabel, CTagIcon, CTagCloseButton, CAvatar },\n- provide: () => ({\n- ...defaultProviders(),\n- $chakraIcons: {\n- 'email': {\n- path: `\n- <path\n- fill=\"currentColor\"\n- d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8 0-1.85.63-3.55 1.69-4.9L16.9 18.31C15.55 19.37 13.85 20 12 20zm6.31-3.1L7.1 5.69C8.45 4.63 10.15 4 12 4c4.42 0 8 3.58 8 8 0 1.85-.63 3.55-1.69 4.9z\"\n- />\n- `\n- }\n- }\n- }),\ntemplate: `\n<CBox mb=\"3\">\n<CTag size=\"sm\" variantColor=\"green\">\n",
        "date": "19.04.2020 23:24:37",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "chatgpt_zeroshot": "Refactor CTag test file and remove unnecessary defaultProviders."
    },
    {
        "msg": "test(icon): remove provider",
        "diff": "diff --git a/packages/chakra-ui-core/src/CIcon/tests/CIcon.test.js b/packages/chakra-ui-core/src/CIcon/tests/CIcon.test.js import CIcon from '..'\n-import { render, defaultProviders } from '@/tests/test-utils'\n-import icons from '@/packages/chakra-ui-core/src/lib/internal-icons'\n+import { render } from '@/tests/test-utils'\nconst renderComponent = (props) => {\nconst base = {\ncomponents: { CIcon },\n- provide: () => defaultProviders({ $chakraIcons: { add: icons.add } }),\ntemplate: `<CIcon name=\"add\"></CIcon>`,\n...props\n}\n",
        "date": "19.04.2020 23:57:51",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "chatgpt_zeroshot": "Refactor CIcon.test.js to remove unnecessary imports and update renderComponent function."
    },
    {
        "msg": "test(stat): remove provider",
        "diff": "diff --git a/packages/chakra-ui-core/src/CStat/tests/CStat.test.js b/packages/chakra-ui-core/src/CStat/tests/CStat.test.js import { CStat, CStatLabel, CStatNumber, CStatHelperText, CStatArrow } from '..'\n-import { render, defaultProviders } from '@/tests/test-utils'\n-import icons from '../../lib/internal-icons.js'\n+import { render } from '@/tests/test-utils'\nconst renderComponent = (props) => {\nconst base = {\ncomponents: { CStat, CStatLabel, CStatNumber, CStatHelperText, CStatArrow },\n- provide: () => defaultProviders({ $chakraIcons: { 'triangle-up': icons['triangle-up'], 'triangle-down': icons['triangle-down'] } }),\ntemplate: `\n<CStat>\n<CStatLabel>Collected Fees</CStatLabel>\n",
        "date": "19.04.2020 23:59:17",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "chatgpt_zeroshot": "Refactor CStat test file and remove unnecessary import statements"
    },
    {
        "msg": "test: exclude module from teste env",
        "diff": "diff --git a/packages/nuxt-chakra/example/nuxt.config.js b/packages/nuxt-chakra/example/nuxt.config.js @@ -6,8 +6,7 @@ module.exports = {\nbuildDir: resolve(__dirname, '.nuxt'),\nsrcDir: __dirname,\nmodules: [\n- { handler: require('../') },\n- '@nuxtjs/emotion'\n+ { handler: require('../') }\n],\nbuild: {\ntranspile: [\n",
        "date": "16.05.2020 18:57:02",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "chatgpt_zeroshot": "Remove '@nuxtjs/emotion' module from nuxt.config.js"
    },
    {
        "msg": "test(aspect-ratio): add tests for padding bottom",
        "diff": "diff --git a/packages/chakra-ui-core/src/CAspectRatioBox/tests/CAspectRatioBox.test.js b/packages/chakra-ui-core/src/CAspectRatioBox/tests/CAspectRatioBox.test.js import { CAspectRatioBox, CBox } from '../..'\n-import { render } from '@/tests/test-utils'\n-\n+import { render, screen } from '@/tests/test-utils'\nconst renderComponent = (props) => {\nconst inlineAttrs = (props && props.inlineAttrs) || ''\nconst base = {\n@@ -15,17 +14,53 @@ const renderComponent = (props) => {\nreturn render(base)\n}\n+/**\n+ * Not sure if we need jest-emotion\n+ *\n+ * Get styles from document.styleSheets\n+ * @param {String} selector\n+ */\n+function getElementStyles (selector) {\n+ selector = new RegExp(selector)\n+ let styles = []\n+ let i; let j; let sel = selector\n+ for (i = 0; i < document.styleSheets.length; ++i) {\n+ for (j = 0; j < document.styleSheets[i].cssRules.length; ++j) {\n+ if (sel.test(document.styleSheets[i].cssRules[j].selectorText)) {\n+ // let selectorText = document.styleSheets[i].cssRules[j].selectorText\n+ let cssText = document.styleSheets[i].cssRules[j].style.cssText\n+ styles += cssText\n+ }\n+ }\n+ }\n+ return styles\n+}\n+\nit('should render correctly', () => {\nconst inlineAttrs = ':ratio=\"1\"'\nconst { asFragment } = renderComponent({ inlineAttrs })\nexpect(asFragment()).toMatchSnapshot()\n+\n+ const [, emotionClassName] = [...screen.getByTestId('aspectRatioBox').classList]\n+ const pseudoStyles = getElementStyles(`.${emotionClassName}:before`)\n+\n+ expect(pseudoStyles).toContain(`\n+ padding-bottom: 100%\n+ `.trim())\n})\n-it('should have correct styles', () => {\n- const inlineAttrs = ':ratio=\"2\"'\n- const { getByTestId } = renderComponent({ inlineAttrs })\n- const image = getByTestId('image')\n- const aspectRatioBox = getByTestId('aspectRatioBox')\n+it('should have correct styles', async () => {\n+ const inlineAttrs = `:ratio=\"2\"`\n+ renderComponent({ inlineAttrs })\n+ const image = screen.getByTestId('image')\n+ const aspectRatioBox = screen.getByTestId('aspectRatioBox')\n+\n+ const [, emotionClassName] = [...aspectRatioBox.classList]\n+ const pseudoStyles = getElementStyles(`.${emotionClassName}:before`)\n+\n+ expect(pseudoStyles).toContain(`\n+ padding-bottom: 50%\n+ `.trim())\nexpect(aspectRatioBox).toHaveStyle(`\nmax-width: 400px;\n@@ -40,7 +75,4 @@ it('should have correct styles', () => {\ntop: 0px;\nleft: 0px;\n`)\n-\n- // TODO: we can't test pseudo elements.. so better test styles?\n- // aspectRatioBox padding-bottom\n})\n",
        "date": "07.06.2020 23:24:40",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "chatgpt_zeroshot": "Add test-utils screen import and update test cases for CAspectRatioBox"
    },
    {
        "msg": "test(alert-dialog): refactor alert dialog tests",
        "diff": "diff --git a/packages/chakra-ui-core/src/CAlertDialog/tests/CAlertDialog.test.js b/packages/chakra-ui-core/src/CAlertDialog/tests/CAlertDialog.test.js -import Vue from 'vue'\nimport { CButton, CAlertDialog, CAlertDialogContent, CAlertDialogBody, CAlertDialogFooter, CAlertDialogOverlay, CAlertDialogHeader } from '../..'\n-import { render, userEvent, fireEvent, waitMs } from '@/tests/test-utils'\n+import { render, userEvent, fireEvent, wait, screen } from '@/tests/test-utils'\nimport { useId } from '@/packages/chakra-ui-core/src/utils'\n// mocks\n@@ -49,18 +48,19 @@ it('should render correctly', async () => {\nconst inlineAttrs = 'isOpen'\nconst { asFragment } = renderComponent({ inlineAttrs })\n- await Vue.nextTick()\n-\n+ await wait(() => {\nexpect(asFragment(document.body.innerHTML)).toMatchSnapshot()\n})\n+})\ntest('clicking the close button calls the onClose callback', async () => {\nconst onClose = jest.fn()\nconst inlineAttrs = 'isOpen :on-close=\"close\"'\n- const { getByTestId } = renderComponent({ inlineAttrs, methods: { close: onClose } })\n+ renderComponent({ inlineAttrs, methods: { close: onClose } })\n- await Vue.nextTick()\n- userEvent.click(getByTestId('close-btn'))\n+ await wait(async () => {\n+ await userEvent.click(screen.getByTestId('close-btn'))\n+ })\nexpect(onClose).toHaveBeenCalled()\n})\n@@ -68,12 +68,12 @@ test('clicking the close button calls the onClose callback', async () => {\ntest('pressing \"esc\" calls the onClose callback', async () => {\nconst onClose = jest.fn()\nconst inlineAttrs = ':isOpen=\"isOpen\" :on-close=\"close\"'\n- const { getByTestId } = renderComponent({ inlineAttrs, data: () => ({ isOpen: true }), methods: { close: onClose } })\n-\n- await Vue.nextTick()\n- const inputInside = getByTestId('inputInsideDrawer')\n+ renderComponent({ inlineAttrs, data: () => ({ isOpen: true }), methods: { close: onClose } })\n- fireEvent.keyDown(inputInside, { key: 'Escape' })\n+ await wait(async () => {\n+ const inputInside = screen.getByTestId('inputInsideDrawer')\n+ await fireEvent.keyDown(inputInside, { key: 'Escape' })\n+ })\nexpect(onClose).toHaveBeenCalled()\n})\n@@ -81,12 +81,12 @@ test('pressing \"esc\" calls the onClose callback', async () => {\ntest('clicking overlay calls the onClose callback', async () => {\nconst onClose = jest.fn()\nconst inlineAttrs = ':isOpen=\"isOpen\" :on-close=\"close\"'\n- const { getByTestId } = renderComponent({ inlineAttrs, data: () => ({ isOpen: true }), methods: { close: onClose } })\n-\n- await Vue.nextTick()\n- const overlay = getByTestId('overlay')\n+ renderComponent({ inlineAttrs, data: () => ({ isOpen: true }), methods: { close: onClose } })\n- userEvent.click(overlay)\n+ await wait(async () => {\n+ const overlay = screen.getByTestId('overlay')\n+ await userEvent.click(overlay)\n+ })\nexpect(onClose).toHaveBeenCalled()\n})\n@@ -96,11 +96,11 @@ it('should have proper aria', async () => {\nconst inlineAttrs = 'isOpen'\nrenderComponent({ inlineAttrs })\n- await Vue.nextTick()\n- const dialog = document.querySelector('section')\n- await waitMs()\n+ let dialog\n+ await wait(() => {\n+ dialog = screen.getByRole('alertdialog')\n+ })\n- expect(dialog).toHaveAttribute('role', 'alertdialog')\nexpect(dialog).toHaveAttribute('aria-modal', 'true')\nexpect(dialog).toHaveAttribute('aria-labelledby', 'alert-dialog-1-label')\nexpect(dialog).toHaveAttribute('aria-describedby', 'alert-dialog-1-desc')\n",
        "date": "01.07.2020 16:09:54",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "chatgpt_zeroshot": "Refactor CAlertDialog test file to use screen and wait utility functions"
    },
    {
        "msg": "test(bread-crumb): refactor Breadcrump tests",
        "diff": "diff --git a/packages/chakra-ui-core/src/CBreadcrumb/tests/CBreadcrumb.test.js b/packages/chakra-ui-core/src/CBreadcrumb/tests/CBreadcrumb.test.js import { CBreadcrumb, CBreadcrumbItem, CBreadcrumbLink, CBreadcrumbSeparator } from '..'\n-import { render } from '@/tests/test-utils'\n+import { render, screen } from '@/tests/test-utils'\nconst renderComponent = (props) => {\nconst base = {\n@@ -49,7 +49,7 @@ it('should display custom seperator ', () => {\n})\nit('should have the proper aria-attributes', () => {\n- const { getByText, getAllByRole, getByLabelText } = renderComponent({\n+ renderComponent({\ntemplate: `\n<CBreadcrumb>\n<CBreadcrumbItem>\n@@ -65,12 +65,12 @@ it('should have the proper aria-attributes', () => {\n})\n// surrounding `nav` has aria-label=\"breadcrumb\"\n- getByLabelText('breadcrumb', { selector: 'nav' })\n+ screen.getByLabelText('breadcrumb', { selector: 'nav' })\n// `isCurrentPage` link has aria-current=\"page\"\n- const currentPageLink = getByText('Contact')\n+ const currentPageLink = screen.getByText('Contact')\nexpect(currentPageLink).toHaveAttribute('aria-current', 'page')\n// separator receives presentation=\"role\"\n- expect(getAllByRole('presentation')).toHaveLength(2)\n+ expect(screen.getAllByRole('presentation')).toHaveLength(2)\n})\n",
        "date": "02.07.2020 19:57:04",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "chatgpt_zeroshot": "Refactor CBreadcrumb.test.js to use screen instead of getBy* methods"
    },
    {
        "msg": "test(button): refactor button tests",
        "diff": "diff --git a/packages/chakra-ui-core/src/CButton/tests/CButton.test.js b/packages/chakra-ui-core/src/CButton/tests/CButton.test.js import { CButton } from '../..'\n-import { render } from '@/tests/test-utils'\n+import { render, screen } from '@/tests/test-utils'\nconst renderComponent = (props) => {\nconst base = {\n@@ -17,26 +17,19 @@ it('should render correctly', () => {\nexpect(asFragment()).toMatchSnapshot()\n})\n-it('should display children', () => {\n- const { getByText } = renderComponent({ template: '<CButton><span>Works</span></CButton>' })\n- expect(getByText('Works')).toBeInTheDocument()\n-})\n-\nit('should display button with left icon', () => {\n- const { container, asFragment } = renderComponent({ template: '<CButton leftIcon=\"email\">Email</CButton>' })\n- expect(container.querySelector('button > svg')).toBeInTheDocument()\n+ const { asFragment } = renderComponent({ template: '<CButton leftIcon=\"email\">Email</CButton>' })\nexpect(asFragment()).toMatchSnapshot()\n})\nit('should display button with right icon', () => {\n- const { container, asFragment } = renderComponent({ template: '<CButton rightIcon=\"email\">Email</CButton>' })\n- expect(container.querySelector('button > svg')).toBeInTheDocument()\n+ const { asFragment } = renderComponent({ template: '<CButton rightIcon=\"email\">Email</CButton>' })\nexpect(asFragment()).toMatchSnapshot()\n})\nit('should display spinner and hide text', () => {\n- const { getByTestId, container } = renderComponent({ template: '<CButton isLoading data-testid=\"btn\">CButton</CButton>' })\n- const button = getByTestId('btn')\n+ const { container } = renderComponent({ template: '<CButton isLoading data-testid=\"btn\">CButton</CButton>' })\n+ const button = screen.getByTestId('btn')\nexpect(button).toHaveAttribute('disabled')\nexpect(button).toHaveAttribute('aria-disabled', 'true')\n@@ -47,15 +40,15 @@ it('should display spinner and hide text', () => {\n})\nit('should display spinner with text', () => {\n- const { getByText, container } = renderComponent({ template: '<CButton isLoading loadingText=\"Submitting\" data-testid=\"Spinner\">Button</CButton>' })\n+ const { container } = renderComponent({ template: '<CButton isLoading loadingText=\"Submitting\" data-testid=\"Spinner\">Button</CButton>' })\n- expect(getByText('Submitting')).toBeInTheDocument()\n+ expect(screen.getByText('Submitting')).toBeInTheDocument()\nconst spinner = container.querySelector('[data-chakra-component=CSpinner]')\nexpect(spinner).toBeInTheDocument()\n})\nit('should display a disabled button', () => {\n- const { getByText } = renderComponent({ template: '<CButton isDisabled>Button</CButton>' })\n+ renderComponent({ template: '<CButton isDisabled>Button</CButton>' })\n- expect(getByText('Button')).toHaveAttribute('disabled')\n+ expect(screen.getByText('Button')).toHaveAttribute('disabled')\n})\n",
        "date": "02.07.2020 20:03:42",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "chatgpt_zeroshot": "Refactor CButton.test.js to use screen instead of getByText for better testing practices"
    },
    {
        "msg": "test(button-group): remove unnecessary test in ButtonGroup",
        "diff": "diff --git a/packages/chakra-ui-core/src/CButtonGroup/tests/CButtonGroup.test.js b/packages/chakra-ui-core/src/CButtonGroup/tests/CButtonGroup.test.js import { CButton, CButtonGroup } from '../..'\n-import { render } from '@/tests/test-utils'\n+import { render, screen } from '@/tests/test-utils'\nconst renderComponent = (props) => {\nconst base = {\n@@ -21,9 +21,3 @@ it('should render correctly', () => {\nconst { asFragment } = renderComponent()\nexpect(asFragment()).toMatchSnapshot()\n})\n-\n-it('should display children', () => {\n- const { getByText } = renderComponent()\n- expect(getByText('Button1')).toBeInTheDocument()\n- expect(getByText('Button2')).toBeInTheDocument()\n-})\n",
        "date": "02.07.2020 21:27:59",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "chatgpt_zeroshot": "Add screen import to test-utils in CButtonGroup test file"
    },
    {
        "msg": "test(avatar): remove unused attrs",
        "diff": "diff --git a/packages/chakra-ui-core/src/CAvatar/tests/CAvatar.test.js b/packages/chakra-ui-core/src/CAvatar/tests/CAvatar.test.js @@ -64,7 +64,7 @@ it('renders an image', async () => {\n})\nit('renders a name avatar if no src', async () => {\n- renderComponent({ template: '<CAvatar data-testid=\"avatar\" name=\"Mesut Koca\" />' })\n+ renderComponent({ template: '<CAvatar name=\"Mesut Koca\" />' })\nawait wait(() => {\nexpect(screen.getByLabelText(/Mesut Koca/i)).toBeInTheDocument()\n@@ -73,7 +73,7 @@ it('renders a name avatar if no src', async () => {\n})\nit('renders a name avatar if src fails', async () => {\n- renderComponent({ template: '<CAvatar data-testid=\"avatar\" name=\"Mesut Koca\" src=\"LOAD_FAILURE_SRC\" />' })\n+ renderComponent({ template: '<CAvatar name=\"Mesut Koca\" src=\"LOAD_FAILURE_SRC\" />' })\nawait wait(() => {\nexpect(screen.queryByAltText(/Mesut Koca/i)).not.toBeInTheDocument()\n",
        "date": "02.07.2020 21:34:03",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "chatgpt_zeroshot": "Refactor CAvatar.test.js to simplify rendering of name avatars"
    },
    {
        "msg": "test(badge): update badge tests",
        "diff": "diff --git a/packages/chakra-ui-core/src/CBadge/tests/__snapshots__/CBadge.test.js.snap b/packages/chakra-ui-core/src/CBadge/tests/__snapshots__/CBadge.test.js.snap exports[`should apply variant styles corectly 1`] = `\n<DocumentFragment>\n+ .emotion-3 {\n+ display: -webkit-box;\n+ display: -webkit-flex;\n+ display: -ms-flexbox;\n+ display: flex;\n+ -webkit-flex-direction: row;\n+ -ms-flex-direction: row;\n+ flex-direction: row;\n+}\n+\n+.emotion-0 {\n+ display: inline-block;\n+ text-transform: uppercase;\n+ font-size: 0.75rem;\n+ font-family: -apple-system,BlinkMacSystemFont,\"Segoe UI\",Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\";\n+ padding-left: 0.25rem;\n+ padding-right: 0.25rem;\n+ border-radius: 0.125rem;\n+ font-weight: 700;\n+ white-space: nowrap;\n+ vertical-align: middle;\n+ background-color: #c2ebd4;\n+ color: #0f3921;\n+ margin-left: 0.5rem;\n+ margin-right: 0.5rem;\n+}\n+\n+.emotion-1 {\n+ display: inline-block;\n+ text-transform: uppercase;\n+ font-size: 0.75rem;\n+ font-family: -apple-system,BlinkMacSystemFont,\"Segoe UI\",Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\";\n+ padding-left: 0.25rem;\n+ padding-right: 0.25rem;\n+ border-radius: 0.125rem;\n+ font-weight: 700;\n+ white-space: nowrap;\n+ vertical-align: middle;\n+ background-color: #3ea76a;\n+ color: #fff;\n+ margin-left: 0.5rem;\n+ margin-right: 0.5rem;\n+}\n+\n+.emotion-2 {\n+ display: inline-block;\n+ text-transform: uppercase;\n+ font-size: 0.75rem;\n+ font-family: -apple-system,BlinkMacSystemFont,\"Segoe UI\",Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\";\n+ padding-left: 0.25rem;\n+ padding-right: 0.25rem;\n+ border-radius: 0.125rem;\n+ font-weight: 700;\n+ white-space: nowrap;\n+ vertical-align: middle;\n+ box-shadow: inset 0 0 0px 1px #3ea76a;\n+ color: #3ea76a;\n+ margin-left: 0.5rem;\n+ margin-right: 0.5rem;\n+}\n+\n<div\n- class=\"css-jlqe4x\"\n- data-chakra-component=\"CStack\"\n+ class=\"emotion-3\"\n+ data-chakra-component=\"CFlex\"\n>\n<div\n- class=\"css-288q6q\"\n+ class=\"emotion-0\"\ndata-chakra-component=\"CBadge\"\n>\nSubtle\n</div>\n<div\n- class=\"css-4lwleq\"\n+ class=\"emotion-1\"\ndata-chakra-component=\"CBadge\"\n>\nSolid\n</div>\n<div\n- class=\"css-n4e54f\"\n+ class=\"emotion-2\"\ndata-chakra-component=\"CBadge\"\n>\nOutline\n@@ -30,8 +91,23 @@ exports[`should apply variant styles corectly 1`] = `\nexports[`should render correctly 1`] = `\n<DocumentFragment>\n+ .emotion-0 {\n+ display: inline-block;\n+ text-transform: uppercase;\n+ font-size: 0.75rem;\n+ font-family: -apple-system,BlinkMacSystemFont,\"Segoe UI\",Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\";\n+ padding-left: 0.25rem;\n+ padding-right: 0.25rem;\n+ border-radius: 0.125rem;\n+ font-weight: 700;\n+ white-space: nowrap;\n+ vertical-align: middle;\n+ background-color: #EDF2F7;\n+ color: #1A202C;\n+}\n+\n<div\n- class=\"css-96ute0\"\n+ class=\"emotion-0\"\ndata-chakra-component=\"CBadge\"\n>\n500\n",
        "date": "04.07.2020 09:19:05",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "chatgpt_zeroshot": "Apply variant styles to CBadge component and update rendering styles."
    },
    {
        "msg": "test(accordion): add shift+tab tests for accordion",
        "diff": "diff --git a/packages/chakra-ui-core/src/CAccordion/tests/CAccordion.test.js b/packages/chakra-ui-core/src/CAccordion/tests/CAccordion.test.js @@ -144,7 +144,6 @@ it('has the proper aria attributes', () => {\nexpect(panel).toHaveAttribute('aria-labelledby')\n})\n-// test that tab moves focus to the next focusable element\nit('tab moves focus to the next focusable element', async () => {\nrenderComponent({\ntemplate: `\n@@ -178,7 +177,43 @@ it('tab moves focus to the next focusable element', async () => {\nexpect(last).toHaveFocus()\n})\n-// test that aria-contols for button is same as id for panel\n+\n+it('shift+tab moves focus to the previous focusable element', async () => {\n+ renderComponent({\n+ template: `\n+ <CAccordion>\n+ <CAccordionItem>\n+ <CAccordionHeader>First section</CAccordionHeader>\n+ <CAccordionPanel>Panel 1</CAccordionPanel>\n+ </CAccordionItem>\n+ <CAccordionItem>\n+ <CAccordionHeader>Second section</CAccordionHeader>\n+ <CAccordionPanel>Panel 2</CAccordionPanel>\n+ </CAccordionItem>\n+ <CAccordionItem>\n+ <CAccordionHeader>Last section</CAccordionHeader>\n+ <CAccordionPanel>Panel 3</CAccordionPanel>\n+ </CAccordionItem>\n+ </CAccordion>`\n+ })\n+\n+ const first = screen.getByText('First section')\n+ const second = screen.getByText('Second section')\n+ const last = screen.getByText('Last section')\n+\n+ await userEvent.tab()\n+ expect(first).toHaveFocus()\n+\n+ await userEvent.tab()\n+ expect(second).toHaveFocus()\n+\n+ await userEvent.tab()\n+ expect(last).toHaveFocus()\n+\n+ await userEvent.tab({shift: true}) // shift+tab\n+ expect(second).toHaveFocus()\n+})\n+\nit('aria-contols for button is same as id for panel', () => {\nrenderComponent({\ntemplate: `\n@@ -195,7 +230,6 @@ it('aria-contols for button is same as id for panel', () => {\nexpect(button.getAttribute('aria-controls')).toEqual(panel.getAttribute('id'))\n})\n-// test that aria-expanded is true/false when accordion is open/closed\nit('aria-expanded is true/false when accordion is open/closed', () => {\nrenderComponent({\ntemplate: `\n@@ -215,7 +249,6 @@ it('aria-expanded is true/false when accordion is open/closed', () => {\nexpect(button).toHaveAttribute('aria-expanded', 'true')\n})\n-// test that panel has role=region and aria-labelledby\nit('panel has role=region and aria-labelledby', () => {\nrenderComponent({\ntemplate: `\n@@ -231,29 +264,3 @@ it('panel has role=region and aria-labelledby', () => {\nexpect(panel).toHaveAttribute('aria-labelledby')\nexpect(panel).toHaveAttribute('role', 'region')\n})\n\\ No newline at end of file\n-\n-// eslint-disable-next-line no-undef\n-xit('arrow up & down moves focus to next/previous accordion', async () => {\n- renderComponent({\n- template: `\n- <CAccordion>\n- <CAccordionItem>\n- <CAccordionHeader>Section 1 title</CAccordionHeader>\n- <CAccordionPanel>Panel 1</CAccordionPanel>\n- </CAccordionItem>\n- <CAccordionItem>\n- <CAccordionHeader>Section 2 title</CAccordionHeader>\n- <CAccordionPanel>Panel 2</CAccordionPanel>\n- </CAccordionItem>\n- </CAccordion>`\n- })\n-\n- const first = screen.getByText('Section 1 title')\n- const second = screen.getByText('Section 2 title')\n-\n- await fireEvent.keyDown(first, { key: 'ArrowDown', keyCode: 40 })\n- expect(second).toHaveFocus()\n-\n- await fireEvent.keyDown(second, { key: 'ArrowUp', keyCode: 38 })\n- expect(first).toHaveFocus()\n-})\n",
        "date": "04.07.2020 15:53:35",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "chatgpt_zeroshot": "Add shift+tab functionality to move focus to the previous focusable element in CAccordion."
    },
    {
        "msg": "test(badge): remove unnecessary test",
        "diff": "diff --git a/packages/chakra-ui-core/src/CBadge/tests/CBadge.test.js b/packages/chakra-ui-core/src/CBadge/tests/CBadge.test.js @@ -15,12 +15,6 @@ it('should render correctly', () => {\nexpect(asFragment()).toMatchSnapshot()\n})\n-it('should display children', () => {\n- const { getByText } = renderComponent()\n-\n- expect(getByText('500')).toBeInTheDocument()\n-})\n-\nit('should apply variant styles corectly', () => {\nconst { asFragment } = renderComponent({\ntemplate: `\n",
        "date": "04.07.2020 16:01:04",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "chatgpt_zeroshot": "Remove test case for displaying children in CBadge"
    },
    {
        "msg": "test(Box): refactor box tests",
        "diff": "diff --git a/packages/chakra-ui-core/src/CBox/tests/CBox.test.js b/packages/chakra-ui-core/src/CBox/tests/CBox.test.js import CBox from '../'\n-import { render } from '@/tests/test-utils'\n+import { render, screen } from '@/tests/test-utils'\nconst renderComponent = (props) => {\nconst inlineAttrs = (props && props.inlineAttrs) || ''\n@@ -22,9 +22,9 @@ it('should change the style', () => {\nd=\"flex\" :w=\"['auto']\" px=\"5\" py=\"5\" shadow=\"lg\"\nmy=\"5\" mb=\"5\" rounded=\"sm\" font-family=\"body\"\nbackground-color=\"blue.200\" color=\"blue.700\"`\n- const { asFragment, getByTestId } = renderComponent({ inlineAttrs })\n+ const { asFragment } = renderComponent({ inlineAttrs })\n- const box = getByTestId('box')\n+ const box = screen.getByTestId('box')\nexpect(asFragment()).toMatchSnapshot()\nexpect(box).toHaveStyle('display: flex')\n",
        "date": "04.07.2020 16:13:24",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "chatgpt_zeroshot": "refactor: update test to use screen instead of getByTestId"
    },
    {
        "msg": "test(checkbox-group): refactor CheckboxGroup tests",
        "diff": "diff --git a/packages/chakra-ui-core/src/CCheckboxGroup/tests/CCheckboxGroup.test.js b/packages/chakra-ui-core/src/CCheckboxGroup/tests/CCheckboxGroup.test.js import { CBox, CCheckbox, CCheckboxGroup } from '../..'\n-import { render } from '@/tests/test-utils'\n+import { render, screen, wait } from '@/tests/test-utils'\n// mocks\nimport { useId } from '@/packages/chakra-ui-core/src/utils'\n@@ -33,20 +33,18 @@ it('should render correctly', () => {\n})\nit('should display children', () => {\n- const { getByText } = renderComponent()\n- expect(getByText('One')).toBeInTheDocument()\n- expect(getByText('Two')).toBeInTheDocument()\n- expect(getByText('Three')).toBeInTheDocument()\n+ renderComponent()\n+ expect(screen.getByText('One')).toBeInTheDocument()\n+ expect(screen.getByText('Two')).toBeInTheDocument()\n+ expect(screen.getByText('Three')).toBeInTheDocument()\n})\ntest('selectedValues prop works', () => {\n- const { getByTestId } = renderComponent()\n+ renderComponent()\n- const one = getByTestId('one').querySelector('input')\n- const two = getByTestId('two').querySelector('input')\n- const three = getByTestId('three').querySelector('input')\n-\n- expect(one).not.toBeChecked()\n- expect(two).toBeChecked()\n- expect(three).not.toBeChecked()\n+ wait(() => {\n+ expect(screen.getByLabelText('One')).not.toBeChecked()\n+ expect(screen.getByLabelText('Two')).toBeChecked()\n+ expect(screen.getByLabelText('Three')).not.toBeChecked()\n+ })\n})\n",
        "date": "06.07.2020 23:23:14",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "chatgpt_zeroshot": "Refactor CCheckboxGroup test file to use screen and wait functions"
    },
    {
        "msg": "test(circular-progress): refactor circular progress",
        "diff": "diff --git a/packages/chakra-ui-core/src/CCircularProgress/tests/CCircularProgress.test.js b/packages/chakra-ui-core/src/CCircularProgress/tests/CCircularProgress.test.js import { CCircularProgress, CCircularProgressLabel } from '../..'\n-import { render } from '@/tests/test-utils'\n+import { render, screen } from '@/tests/test-utils'\nconst renderComponent = (props) => {\nconst base = {\n@@ -20,26 +20,26 @@ it('should render correctly', () => {\n})\nit('should display a label', () => {\n- const { queryByText } = renderComponent({\n+ renderComponent({\ntemplate: `\n<CCircularProgress :value=\"40\">\n<CCircularProgressLabel>40%</CCircularProgressLabel>\n</CCircularProgress>`\n})\n- expect(queryByText('40%')).toBeInTheDocument()\n+ expect(screen.getByText('40%')).toBeInTheDocument()\n})\ntest('a11y - progress has a \"role\" set to \"progressbar\"', () => {\n- const { queryByRole } = renderComponent()\n+ renderComponent()\n- expect(queryByRole('progressbar')).toBeInTheDocument()\n+ expect(screen.queryByRole('progressbar')).toBeInTheDocument()\n})\ntest('a11y - progress has a \"aria-valuenow\" set to the percentage completion value', () => {\n- const { queryByTestId } = renderComponent()\n+ renderComponent()\n- expect(queryByTestId('CircularProgress')).toHaveAttribute(\n+ expect(screen.queryByTestId('CircularProgress')).toHaveAttribute(\n'aria-valuenow',\n'40'\n)\n",
        "date": "06.07.2020 23:25:41",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "chatgpt_zeroshot": "Refactor CCircularProgress.test.js to use screen instead of query methods"
    },
    {
        "msg": "test(close-button): refactor close button tests",
        "diff": "diff --git a/packages/chakra-ui-core/src/CCloseButton/tests/CloseButton.test.js b/packages/chakra-ui-core/src/CCloseButton/tests/CloseButton.test.js import CloseButton from '../'\n-import { render } from '@/tests/test-utils'\n+import { render, screen } from '@/tests/test-utils'\nconst renderComponent = (props) => {\nconst base = {\n@@ -14,18 +14,18 @@ it('should render correctly', () => {\nexpect(asFragment()).toMatchSnapshot()\n})\nit('should allow setting a custom aria-label for the button', () => {\n- const { container } = renderComponent({ template: '<CloseButton aria-label=\"my aria label\" />' })\n+ renderComponent({ template: '<CloseButton aria-label=\"my aria label\" />' })\n- expect(container.querySelector('button')).toHaveAttribute(\n+ expect(screen.getByLabelText('my aria label')).toHaveAttribute(\n'aria-label',\n'my aria label'\n)\n})\ntest('a11y - should have aria-label set to \"Close\"', () => {\n- const { container } = renderComponent()\n+ renderComponent()\n- expect(container.querySelector('button')).toHaveAttribute(\n+ expect(screen.getByLabelText('Close')).toHaveAttribute(\n'aria-label',\n'Close'\n)\n",
        "date": "06.07.2020 23:31:29",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "chatgpt_zeroshot": "Add screen utility function for testing in CloseButton.test.js"
    },
    {
        "msg": "test(code): refactor to screen",
        "diff": "diff --git a/packages/chakra-ui-core/src/CCode/tests/CCode.test.js b/packages/chakra-ui-core/src/CCode/tests/CCode.test.js import CCode from '..'\n-import { render } from '@/tests/test-utils'\n+import { render, screen } from '@/tests/test-utils'\nconst renderComponent = (props) => {\nconst base = {\n@@ -16,7 +16,7 @@ it('should render correctly', () => {\n})\nit('should display children', () => {\n- const { getByText } = renderComponent()\n+ renderComponent()\n- expect(getByText('content')).toBeInTheDocument()\n+ expect(screen.getByText('content')).toBeInTheDocument()\n})\n",
        "date": "06.07.2020 23:32:35",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "chatgpt_zeroshot": "Refactor CCode.test.js to use screen instead of getByText"
    },
    {
        "msg": "test(controlbox): refactor use screen",
        "diff": "diff --git a/packages/chakra-ui-core/src/CControlBox/tests/CControlBox.test.js b/packages/chakra-ui-core/src/CControlBox/tests/CControlBox.test.js import { CVisuallyHidden, CControlBox, CBox } from '../..'\n-import { render, userEvent } from '@/tests/test-utils'\n+import { render, userEvent, screen } from '@/tests/test-utils'\nconst renderComponent = (props) => {\nconst inlineAttrs = (props && props.inlineAttrs) || ''\n@@ -43,9 +43,9 @@ it('should render correctly', () => {\n})\ntest('Uncontrolled radio - should be checked always', async () => {\n- const { getByTestId } = renderComponent({ type: 'radio' })\n- const control = getByTestId('control')\n- const hiddenControl = getByTestId('hiddenControl')\n+ renderComponent({ type: 'radio' })\n+ const control = screen.getByTestId('control')\n+ const hiddenControl = screen.getByTestId('hiddenControl')\n// click the first time, it's checked\nawait userEvent.click(control)\n@@ -57,9 +57,9 @@ test('Uncontrolled radio - should be checked always', async () => {\n})\ntest('Uncontrolled checkbox - should toggle', async () => {\n- const { getByTestId } = renderComponent({ type: 'checkbox' })\n- const control = getByTestId('control')\n- const hiddenControl = getByTestId('hiddenControl')\n+ renderComponent({ type: 'checkbox' })\n+ const control = screen.getByTestId('control')\n+ const hiddenControl = screen.getByTestId('hiddenControl')\n// click the first time, it's checked\nawait userEvent.click(control)\n@@ -72,9 +72,9 @@ test('Uncontrolled checkbox - should toggle', async () => {\ntest('controlled checkbox - v-model works', async () => {\nconst inlineAttrs = ':checked=\"checked\"'\n- const { getByTestId } = renderComponent({ inlineAttrs, type: 'checkbox', data: () => ({ checked: true }) })\n- const control = getByTestId('control')\n- const hiddenControl = getByTestId('hiddenControl')\n+ renderComponent({ inlineAttrs, type: 'checkbox', data: () => ({ checked: true }) })\n+ const control = screen.getByTestId('control')\n+ const hiddenControl = screen.getByTestId('hiddenControl')\n// click the first time, it's checked\nexpect(hiddenControl).toBeChecked()\n@@ -86,9 +86,9 @@ test('controlled checkbox - v-model works', async () => {\ntest('controlled radio - v-model works', async () => {\nconst inlineAttrs = ':checked=\"checked\"'\n- const { getByTestId } = renderComponent({ inlineAttrs, type: 'radio', data: () => ({ checked: true }) })\n- const control = getByTestId('control')\n- const hiddenControl = getByTestId('hiddenControl')\n+ renderComponent({ inlineAttrs, type: 'radio', data: () => ({ checked: true }) })\n+ const control = screen.getByTestId('control')\n+ const hiddenControl = screen.getByTestId('hiddenControl')\n// click the first time, it's checked\nexpect(hiddenControl).toBeChecked()\n",
        "date": "06.07.2020 23:34:19",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "chatgpt_zeroshot": "Refactor test file to use screen instead of getByTestId"
    },
    {
        "msg": "test(drawer): refactor drawer tests",
        "diff": "diff --git a/packages/chakra-ui-core/src/CDrawer/tests/CDrawer.test.js b/packages/chakra-ui-core/src/CDrawer/tests/CDrawer.test.js -import Vue from 'vue'\nimport { CInput, CButton, CDrawer, CDrawerBody, CDrawerFooter, CDrawerHeader, CDrawerOverlay, CDrawerContent, CDrawerCloseButton } from '../../'\n-import { render, userEvent, fireEvent, waitMs } from '@/tests/test-utils'\n+import { render, userEvent, fireEvent, waitMs, wait, screen } from '@/tests/test-utils'\nimport { useId } from '@/packages/chakra-ui-core/src/utils'\n// mocks\n@@ -49,7 +48,7 @@ it('should render correctly', async () => {\nconst inlineAttrs = 'isOpen'\nconst { asFragment } = renderComponent({ inlineAttrs })\n- await Vue.nextTick()\n+ await waitMs() // render\nexpect(asFragment(document.body.innerHTML)).toMatchSnapshot()\n})\n@@ -57,10 +56,11 @@ it('should render correctly', async () => {\ntest('clicking the close button calls the onClose callback', async () => {\nconst onClose = jest.fn()\nconst inlineAttrs = 'isOpen :on-close=\"close\"'\n- const { getByTestId } = renderComponent({ inlineAttrs, methods: { close: onClose } })\n+ renderComponent({ inlineAttrs, methods: { close: onClose } })\n- await Vue.nextTick()\n- userEvent.click(getByTestId('close-btn'))\n+ await wait(() => {\n+ userEvent.click(screen.getByTestId('close-btn'))\n+ })\nexpect(onClose).toHaveBeenCalled()\n})\n@@ -68,12 +68,12 @@ test('clicking the close button calls the onClose callback', async () => {\ntest('pressing \"esc\" calls the onClose callback', async () => {\nconst onClose = jest.fn()\nconst inlineAttrs = ':isOpen=\"isOpen\" :on-close=\"close\"'\n- const { getByTestId } = renderComponent({ inlineAttrs, data: () => ({ isOpen: true }), methods: { close: onClose } })\n-\n- await Vue.nextTick()\n- const inputInside = getByTestId('inputInsideDrawer')\n+ renderComponent({ inlineAttrs, data: () => ({ isOpen: true }), methods: { close: onClose } })\n- fireEvent.keyDown(inputInside, { key: 'Escape' })\n+ await wait(async () => {\n+ const inputInside = screen.getByTestId('inputInsideDrawer')\n+ await fireEvent.keyDown(inputInside, { key: 'Escape' })\n+ })\nexpect(onClose).toHaveBeenCalled()\n})\n@@ -81,52 +81,54 @@ test('pressing \"esc\" calls the onClose callback', async () => {\ntest('clicking overlay calls the onClose callback', async () => {\nconst onClose = jest.fn()\nconst inlineAttrs = ':isOpen=\"isOpen\" :on-close=\"close\"'\n- const { getByTestId } = renderComponent({ inlineAttrs, data: () => ({ isOpen: true }), methods: { close: onClose } })\n+ renderComponent({ inlineAttrs, data: () => ({ isOpen: true }), methods: { close: onClose } })\n- await Vue.nextTick()\n- const overlay = getByTestId('overlay')\n-\n- userEvent.click(overlay)\n+ await wait(async () => {\n+ const overlay = screen.getByTestId('overlay')\n+ await fireEvent.click(overlay)\n+ })\nexpect(onClose).toHaveBeenCalled()\n})\ntest('focuses the initial focus ref when opened - initialFocusRef', async () => {\nconst inlineAttrs = 'isOpen :on-close=\"close\" :initialFocusRef=\"()=>$refs.inputInsideDrawer\"'\n- const { getByTestId } = renderComponent({ inlineAttrs })\n+ renderComponent({ inlineAttrs })\n- await Vue.nextTick()\n- const inputInside = getByTestId('inputInsideDrawer')\n+ await waitMs() // render\n- await waitMs()\n- expect(inputInside).toHaveFocus()\n+ await wait(() => {\n+ expect(screen.getByTestId('inputInsideDrawer')).toHaveFocus()\n+ })\n})\ntest('returns focus when closed - finalFocusRef', async () => {\nconst inlineAttrs = ':isOpen=\"isOpen\" :on-close=\"close\" :finalFocusRef=\"$refs.inputOutsideDrawer\"'\n- const { getByTestId } = renderComponent({ inlineAttrs, data: () => ({ isOpen: true }) })\n+ renderComponent({ inlineAttrs, data: () => ({ isOpen: true }) })\n+\n+ await waitMs() // render\n- await Vue.nextTick()\n- const inputOutside = getByTestId('inputOutsideDrawer')\n- const closeButton = getByTestId('close-btn')\n+ const inputOutside = screen.getByTestId('inputOutsideDrawer')\n+ const closeButton = screen.getByTestId('close-btn')\n- await userEvent.click(closeButton)\n- await waitMs()\n+ await fireEvent.click(closeButton)\n+ await wait(() => {\nexpect(inputOutside).toHaveFocus()\n})\n+})\nit('should have proper aria', async () => {\nuseId.mockReturnValueOnce('1')\nconst inlineAttrs = 'isOpen'\nrenderComponent({ inlineAttrs })\n- await Vue.nextTick()\n- const dialog = document.querySelector('section')\n- await waitMs()\n+ await wait(() => {\n+ const dialog = screen.getByRole('dialog')\nexpect(dialog).toHaveAttribute('role', 'dialog')\nexpect(dialog).toHaveAttribute('aria-modal', 'true')\nexpect(dialog).toHaveAttribute('aria-labelledby', 'drawer-1-header')\nexpect(dialog).toHaveAttribute('aria-describedby', 'drawer-1-body')\n})\n+})\n",
        "date": "07.07.2020 00:07:17",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "chatgpt_zeroshot": "Refactor CDrawer.test.js to use screen and wait utility functions"
    },
    {
        "msg": "test(flex): refactor use screen",
        "diff": "diff --git a/packages/chakra-ui-core/src/CFlex/tests/CFlex.test.js b/packages/chakra-ui-core/src/CFlex/tests/CFlex.test.js import CFlex from '..'\n-import { render } from '@/tests/test-utils'\n+import { render, screen } from '@/tests/test-utils'\nconst renderComponent = (props) => {\nconst inlineAttrs = (props && props.inlineAttrs) || ''\n@@ -19,11 +19,11 @@ it('should render correctly', () => {\nit('should change styles', () => {\nconst inlineAttrs = 'align=\"center\" justify=\"center\" direction=\"column\"'\n- const { asFragment, getByTestId } = renderComponent({ inlineAttrs })\n+ const { asFragment } = renderComponent({ inlineAttrs })\nexpect(asFragment()).toMatchSnapshot()\n- const flex = getByTestId('flex')\n+ const flex = screen.getByTestId('flex')\nexpect(flex).toHaveStyle('display: flex')\nexpect(flex).toHaveStyle('align-items: center')\nexpect(flex).toHaveStyle('justify-content: center')\n",
        "date": "07.07.2020 00:46:34",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "chatgpt_zeroshot": "Refactor CFlex.test.js to use screen instead of getByTestId"
    },
    {
        "msg": "test(icon-button): refactor use screen",
        "diff": "diff --git a/packages/chakra-ui-core/src/CIconButton/tests/CIconButton.test.js b/packages/chakra-ui-core/src/CIconButton/tests/CIconButton.test.js import CIconButton from '..'\n-import { render } from '@/tests/test-utils'\n+import { render, screen } from '@/tests/test-utils'\nconst renderComponent = (props) => {\nconst inlineAttrs = (props && props.inlineAttrs) || ''\n@@ -19,15 +19,15 @@ it('should render correctly', () => {\nit('should display spinner and hide the icon', () => {\nconst inlineAttrs = 'isLoading'\n- const { container, getByTestId } = renderComponent({ inlineAttrs })\n+ const { container } = renderComponent({ inlineAttrs })\n- const button = getByTestId('btn')\n+ const button = screen.getByTestId('btn')\nexpect(button).toHaveAttribute('disabled')\nexpect(button).toHaveAttribute('aria-disabled', 'true')\n// TODO: find a way to easily grab the spinner element\n- // Maybe? expect(getByTestId('Spinner')).toBeInTheDocument()\n+ // Maybe? expect(screen.getByTestId('Spinner')).toBeInTheDocument()\nexpect(button).toHaveStyle('opacity: 0.4')\nexpect(container.querySelector('button > div')).toBeInTheDocument()\n})\n",
        "date": "07.07.2020 00:59:33",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "chatgpt_zeroshot": "Refactor CIconButton test to use screen utility for better readability"
    },
    {
        "msg": "test(button-group): refactor use screen",
        "diff": "diff --git a/packages/chakra-ui-core/src/CButtonGroup/tests/CButtonGroup.test.js b/packages/chakra-ui-core/src/CButtonGroup/tests/CButtonGroup.test.js import { CButton, CButtonGroup } from '../..'\n-import { render } from '@/tests/test-utils'\n+import { render, screen } from '@/tests/test-utils'\nconst renderComponent = (props) => {\nconst base = {\n@@ -23,7 +23,7 @@ it('should render correctly', () => {\n})\nit('should attach buttons when `is-attached` is passed', () => {\n- const { asFragment, getByText } = renderComponent({\n+ const { asFragment } = renderComponent({\ntemplate: `\n<CButtonGroup isAttached>\n<CButton>Button1</CButton>\n@@ -31,13 +31,13 @@ it('should attach buttons when `is-attached` is passed', () => {\n</CButtonGroup>`\n})\n- const button = getByText('Button1')\n+ const button = screen.getByText('Button1')\nexpect(button).toHaveStyle('border-top-right-radius: 0; border-bottom-right-radius: 0;')\nexpect(asFragment()).toMatchSnapshot()\n})\nit('should display children', () => {\n- const { getByText } = renderComponent()\n- expect(getByText('Button1')).toBeInTheDocument()\n- expect(getByText('Button2')).toBeInTheDocument()\n+ renderComponent()\n+ expect(screen.getByText('Button1')).toBeInTheDocument()\n+ expect(screen.getByText('Button2')).toBeInTheDocument()\n})\n",
        "date": "12.07.2020 16:09:03",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "chatgpt_zeroshot": "Refactor CButtonGroup test to use screen instead of getByText"
    },
    {
        "msg": "test(divider): refactor use screen",
        "diff": "diff --git a/packages/chakra-ui-core/src/CDivider/tests/CDivider.test.js b/packages/chakra-ui-core/src/CDivider/tests/CDivider.test.js import CDivider from '..'\n-import { render } from '@/tests/test-utils'\n+import { render, screen } from '@/tests/test-utils'\nconst renderComponent = (props) => {\nconst inlineAttrs = (props && props.inlineAttrs) || ''\n@@ -26,9 +26,9 @@ it('should change orientation', () => {\nit('should have corresponding aria-orientation attribute', () => {\nconst inlineAttrs = 'orientation=\"horizontal\"'\n- const { asFragment, getByTestId } = renderComponent({ inlineAttrs })\n+ const { asFragment } = renderComponent({ inlineAttrs })\n- const divider = getByTestId('divider')\n+ const divider = screen.getByTestId('divider')\nexpect(divider).toHaveAttribute('aria-orientation', 'horizontal')\nexpect(asFragment()).toMatchSnapshot()\n})\n",
        "date": "12.07.2020 16:10:11",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "chatgpt_zeroshot": "Refactor CDivider.test.js to use screen instead of getByTestId"
    },
    {
        "msg": "test(form-control): refactor use screen",
        "diff": "diff --git a/packages/chakra-ui-core/src/CFormControl/tests/CFormControl.test.js b/packages/chakra-ui-core/src/CFormControl/tests/CFormControl.test.js import { CFormControl, CInput, CFormLabel } from '../..'\n-import { render } from '@/tests/test-utils'\n+import { render, screen } from '@/tests/test-utils'\nconst renderComponent = (props) => {\nconst inlineAttrs = (props && props.inlineAttrs) || ''\n@@ -22,7 +22,7 @@ it('should render correctly', () => {\n})\nit('should provide formcontrol state via scoped slot', () => {\n- const { getByTestId } = renderComponent({\n+ renderComponent({\ntemplate: `\n<CFormControl isRequired isReadOnly #default=\"props\">\n<pre data-testid=\"pre\">\n@@ -31,7 +31,7 @@ it('should provide formcontrol state via scoped slot', () => {\n</CFormControl>`\n})\n- const pre = getByTestId('pre')\n+ const pre = screen.getByTestId('pre')\nexpect(JSON.parse(pre.textContent, null, 2)).toEqual({\nisInvalid: false,\nisRequired: true,\n",
        "date": "12.07.2020 16:11:10",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "chatgpt_zeroshot": "refactor: Update render function in CFormControl.test.js to use screen instead of getByTestId"
    },
    {
        "msg": "test(modal): refactor use screen",
        "diff": "diff --git a/packages/chakra-ui-core/src/CModal/tests/CModal.test.js b/packages/chakra-ui-core/src/CModal/tests/CModal.test.js -import Vue from 'vue'\nimport { CInput, CButton, CModal, CModalOverlay, CModalContent, CModalHeader, CModalFooter, CModalBody, CModalCloseButton } from '../..'\n-import { render, userEvent, fireEvent, waitMs } from '@/tests/test-utils'\n+import { render, userEvent, fireEvent, waitMs, screen, wait } from '@/tests/test-utils'\nimport { useId, wrapEvent } from '@/packages/chakra-ui-core/src/utils'\n// mocks\n@@ -53,7 +52,7 @@ it('should render correctly', async () => {\nconst inlineAttrs = 'isOpen'\nconst { asFragment } = renderComponent({ inlineAttrs })\n- await Vue.nextTick()\n+ await waitMs() // render\nexpect(asFragment(document.body.innerHTML)).toMatchSnapshot()\n})\n@@ -61,10 +60,11 @@ it('should render correctly', async () => {\ntest('clicking the close button calls the onClose callback', async () => {\nconst onClose = jest.fn()\nconst inlineAttrs = 'isOpen :on-close=\"close\"'\n- const { getByTestId } = renderComponent({ inlineAttrs, methods: { close: onClose } })\n+ renderComponent({ inlineAttrs, methods: { close: onClose } })\n- await Vue.nextTick()\n- userEvent.click(getByTestId('close-btn'))\n+ await wait(() => {\n+ userEvent.click(screen.getByTestId('close-btn'))\n+ })\nexpect(onClose).toHaveBeenCalled()\n})\n@@ -72,12 +72,12 @@ test('clicking the close button calls the onClose callback', async () => {\ntest('pressing \"esc\" calls the onClose callback', async () => {\nconst onClose = jest.fn()\nconst inlineAttrs = ':isOpen=\"isOpen\" :on-close=\"close\"'\n- const { getByTestId } = renderComponent({ inlineAttrs, data: () => ({ isOpen: true }), methods: { close: onClose } })\n-\n- await Vue.nextTick()\n- const inputInside = getByTestId('inputInsideModal')\n+ renderComponent({ inlineAttrs, data: () => ({ isOpen: true }), methods: { close: onClose } })\n- fireEvent.keyDown(inputInside, { key: 'Escape' })\n+ await wait(async () => {\n+ const inputInside = screen.getByTestId('inputInsideModal')\n+ await fireEvent.keyDown(inputInside, { key: 'Escape' })\n+ })\nexpect(onClose).toHaveBeenCalled()\n})\n@@ -85,52 +85,54 @@ test('pressing \"esc\" calls the onClose callback', async () => {\ntest('clicking overlay calls the onClose callback', async () => {\nconst onClose = jest.fn()\nconst inlineAttrs = ':isOpen=\"isOpen\" :on-close=\"close\"'\n- const { getByTestId } = renderComponent({ inlineAttrs, data: () => ({ isOpen: true }), methods: { close: onClose } })\n+ renderComponent({ inlineAttrs, data: () => ({ isOpen: true }), methods: { close: onClose } })\n- await Vue.nextTick()\n- const overlay = getByTestId('overlay')\n-\n- userEvent.click(overlay)\n+ await wait(async () => {\n+ const overlay = screen.getByTestId('overlay')\n+ await fireEvent.click(overlay.parentElement)\n+ })\nexpect(onClose).toHaveBeenCalled()\n})\ntest('focuses the initial focus ref when opened - initialFocusRef', async () => {\nconst inlineAttrs = 'isOpen :on-close=\"close\" :initialFocusRef=\"()=>$refs.inputInsideModal\"'\n- const { getByTestId } = renderComponent({ inlineAttrs })\n+ renderComponent({ inlineAttrs })\n- await Vue.nextTick()\n- const inputInside = getByTestId('inputInsideModal')\n+ await waitMs() // render\n- await waitMs()\n- expect(inputInside).toHaveFocus()\n+ await wait(() => {\n+ expect(screen.getByTestId('inputInsideModal')).toHaveFocus()\n+ })\n})\ntest('returns focus when closed - finalFocusRef', async () => {\nconst inlineAttrs = ':isOpen=\"isOpen\" :on-close=\"close\" :finalFocusRef=\"$refs.inputOutsideModal\"'\n- const { getByTestId } = renderComponent({ inlineAttrs, data: () => ({ isOpen: true }) })\n+ renderComponent({ inlineAttrs, data: () => ({ isOpen: true }) })\n+\n+ await waitMs() // render\n- await Vue.nextTick()\n- const inputOutside = getByTestId('inputOutsideModal')\n- const closeButton = getByTestId('close-btn')\n+ const inputOutside = screen.getByTestId('inputOutsideModal')\n+ const closeButton = screen.getByTestId('close-btn')\n- await userEvent.click(closeButton)\n- await waitMs()\n+ await fireEvent.click(closeButton)\n+ await wait(() => {\nexpect(inputOutside).toHaveFocus()\n})\n+})\nit('should have proper aria', async () => {\nuseId.mockReturnValueOnce('1')\nconst inlineAttrs = 'isOpen'\nrenderComponent({ inlineAttrs })\n- await Vue.nextTick()\n- const dialog = document.querySelector('section')\n- await waitMs()\n+ await wait(() => {\n+ const dialog = screen.getByRole('dialog')\nexpect(dialog).toHaveAttribute('role', 'dialog')\nexpect(dialog).toHaveAttribute('aria-modal', 'true')\nexpect(dialog).toHaveAttribute('aria-labelledby', 'modal-1-header')\nexpect(dialog).toHaveAttribute('aria-describedby', 'modal-1-body')\n})\n+})\n",
        "date": "12.07.2020 16:21:48",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "chatgpt_zeroshot": "Refactor CModal.test.js to use screen and wait utility functions"
    },
    {
        "msg": "test(progress): refactor use screen",
        "diff": "diff --git a/packages/chakra-ui-core/src/CProgress/tests/CProgress.test.js b/packages/chakra-ui-core/src/CProgress/tests/CProgress.test.js import { CProgress, CProgressLabel } from '../..'\n-import { render } from '@/tests/test-utils'\n+import { render, screen } from '@/tests/test-utils'\nconst renderComponent = (props) => {\nconst base = {\n@@ -19,31 +19,31 @@ it('should render correctly', () => {\n})\nit('should have the correct width', () => {\n- const { queryByRole } = renderComponent()\n+ renderComponent()\n- expect(queryByRole('progressbar')).toHaveStyle('width: 40%')\n+ expect(screen.queryByRole('progressbar')).toHaveStyle('width: 40%')\n})\nit('should display a label', () => {\n- const { queryByText } = renderComponent({\n+ renderComponent({\ntemplate: `\n<CProgress :value=\"40\">\n<CProgressLabel>Label</CProgressLabel>\n</CProgress>`\n})\n- expect(queryByText('Label')).toBeInTheDocument()\n+ expect(screen.queryByText('Label')).toBeInTheDocument()\n})\ntest('a11y - progress has a \"role\" set to \"progressbar\"', () => {\n- const { queryByRole } = renderComponent()\n- expect(queryByRole('progressbar')).toBeInTheDocument()\n+ renderComponent()\n+ expect(screen.queryByRole('progressbar')).toBeInTheDocument()\n})\ntest('a11y - progress has a \"aria-valuenow\" set to the percentage completion value', () => {\n- const { queryByRole } = renderComponent()\n+ renderComponent()\n- expect(queryByRole('progressbar')).toHaveAttribute(\n+ expect(screen.queryByRole('progressbar')).toHaveAttribute(\n'aria-valuenow',\n'40'\n)\n",
        "date": "12.07.2020 16:29:55",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "chatgpt_zeroshot": "refactor: Updated CProgress test to use screen instead of query methods"
    },
    {
        "msg": "test(pseudo-box): refactor use screen",
        "diff": "diff --git a/packages/chakra-ui-core/src/CPseudoBox/tests/CPseudoBox.test.js b/packages/chakra-ui-core/src/CPseudoBox/tests/CPseudoBox.test.js import CPseudoBox from '../'\n-import { render, getTagName } from '@/tests/test-utils'\n+import { render, getTagName, screen } from '@/tests/test-utils'\nconst renderComponent = (props) => {\nconst inlineAttrs = (props && props.inlineAttrs) || ''\n@@ -21,9 +21,9 @@ it('should change the style', () => {\nd=\"flex\" :w=\"['auto']\" px=\"5\" py=\"5\" shadow=\"lg\"\nmy=\"5\" mb=\"5\" rounded=\"sm\" font-family=\"body\"\nbackground-color=\"blue.200\" color=\"blue.700\"`\n- const { asFragment, getByTestId } = renderComponent({ inlineAttrs })\n+ const { asFragment } = renderComponent({ inlineAttrs })\n- const pseudobox = getByTestId('pseudobox')\n+ const pseudobox = screen.getByTestId('pseudobox')\nexpect(asFragment()).toMatchSnapshot()\nexpect(pseudobox).toHaveStyle('display: flex')\n@@ -46,8 +46,8 @@ it.each`\n'should display Box with type as $as',\n({ as }) => {\nconst inlineAttrs = `as=${as}`\n- const { asFragment, getByTestId } = renderComponent({ inlineAttrs })\n- expect(getTagName(getByTestId('pseudobox'))).toEqual(as)\n+ const { asFragment } = renderComponent({ inlineAttrs })\n+ expect(getTagName(screen.getByTestId('pseudobox'))).toEqual(as)\nexpect(asFragment()).toMatchSnapshot()\n}\n)\n",
        "date": "12.07.2020 16:31:08",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "chatgpt_zeroshot": "Refactor CPseudoBox.test.js to use screen instead of getByTestId"
    },
    {
        "msg": "test(radio): refactor use screen",
        "diff": "diff --git a/packages/chakra-ui-core/src/CRadio/tests/CRadio.test.js b/packages/chakra-ui-core/src/CRadio/tests/CRadio.test.js import CRadio from '..'\n-import { render, userEvent } from '@/tests/test-utils'\n+import { render, userEvent, screen } from '@/tests/test-utils'\nconst renderComponent = (props) => {\nconst inlineAttrs = (props && props.inlineAttrs) || ''\n@@ -18,52 +18,50 @@ it('should render correctly', () => {\nit('should display a disabled radio', () => {\nconst inlineAttrs = 'isDisabled'\n- const { getByText, container } = renderComponent({ inlineAttrs })\n- const input = container.querySelector('input')\n+ renderComponent({ inlineAttrs })\n+ const input = screen.getByLabelText('radio')\nexpect(input).toHaveAttribute('disabled')\n- expect(getByText('radio').parentNode).toHaveStyle('cursor: not-allowed;')\n+ expect(input.parentNode).toHaveStyle('cursor: not-allowed;')\n})\nit('should display a radio with a checked state', () => {\nconst inlineAttrs = 'isChecked'\n- const { container } = renderComponent({ inlineAttrs })\n- const input = container.querySelector('input')\n+ renderComponent({ inlineAttrs })\n+ const input = screen.getByLabelText('radio')\nexpect(input).toBeChecked()\n})\nit('should display a radio with an unchecked state', () => {\nconst inlineAttrs = ':isChecked=\"false\"'\n- const { container } = renderComponent({ inlineAttrs })\n- const input = container.querySelector('input')\n+ renderComponent({ inlineAttrs })\n+ const input = screen.getByLabelText('radio')\nexpect(input).not.toBeChecked()\n})\ntest('Uncontrolled - should not check if disabled', async () => {\nconst inlineAttrs = 'isDisabled'\n- const { container, getByText } = renderComponent({ inlineAttrs })\n- const input = container.querySelector('input')\n- const radio = getByText('radio')\n+ renderComponent({ inlineAttrs })\n+ const input = screen.getByLabelText('radio')\nexpect(input).toBeDisabled()\n- await userEvent.click(radio)\n+ await userEvent.click(input)\nexpect(input).not.toBeChecked()\n})\ntest('Uncontrolled - should be checked always', async () => {\n- const { container, getByText } = renderComponent()\n- const input = container.querySelector('input')\n- const radio = getByText('radio')\n+ renderComponent()\n+ const input = screen.getByLabelText('radio')\n// click the first time, it's checked\n- await userEvent.click(radio)\n+ await userEvent.click(input)\nexpect(input).toBeChecked()\n// click the second time, it should be still checked\n- await userEvent.click(radio)\n+ await userEvent.click(input)\nexpect(input).toBeChecked()\n})\n",
        "date": "12.07.2020 16:36:54",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "chatgpt_zeroshot": "Add screen utility to test file and update tests to use screen utility"
    },
    {
        "msg": "test(radio-button-group): refactor use screen",
        "diff": "diff --git a/packages/chakra-ui-core/src/CRadioButtonGroup/tests/CRadioButtonGroup.test.js b/packages/chakra-ui-core/src/CRadioButtonGroup/tests/CRadioButtonGroup.test.js import { CButton, CRadioButtonGroup } from '../..'\n-import { render } from '@/tests/test-utils'\n+import { render, screen } from '@/tests/test-utils'\nconst CustomRadio = {\nname: 'CustomRadio',\n@@ -55,29 +55,29 @@ it('should render correctly', () => {\n})\nit('should display children', () => {\n- const { getByText } = renderComponent()\n- expect(getByText('Custom Radio 1')).toBeInTheDocument()\n- expect(getByText('Custom Radio 2')).toBeInTheDocument()\n+ renderComponent()\n+ expect(screen.getByText('Custom Radio 1')).toBeInTheDocument()\n+ expect(screen.getByText('Custom Radio 2')).toBeInTheDocument()\n})\ntest('v-model works', () => {\n- const { getByTestId } = renderComponent({\n+ renderComponent({\ndata () {\nreturn {\nselected: 'item-2'\n}\n}\n})\n- const one = getByTestId('item-1')\n- const two = getByTestId('item-2')\n+ const one = screen.getByTestId('item-1')\n+ const two = screen.getByTestId('item-2')\nexpect(one).not.toHaveAttribute('aria-checked')\nexpect(two).toHaveAttribute('aria-checked', 'true')\n})\ntest('CustomRadio isDisabled works', () => {\n- const { getByTestId } = renderComponent()\n- const last = getByTestId('item-4')\n+ renderComponent()\n+ const last = screen.getByTestId('item-4')\nexpect(last).toHaveAttribute('disabled')\n})\n",
        "date": "12.07.2020 16:47:30",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "chatgpt_zeroshot": "Refactor CRadioButtonGroup test file to use screen instead of getByText and getByTestId"
    },
    {
        "msg": "test(stack): refactor use screen",
        "diff": "diff --git a/packages/chakra-ui-core/src/CStack/tests/CStack.test.js b/packages/chakra-ui-core/src/CStack/tests/CStack.test.js import { CStack, CBox, CHeading, CText } from '../..'\n-import { render, getTagName } from '@/tests/test-utils'\n+import { render, getTagName, screen } from '@/tests/test-utils'\nconst renderComponent = (props) => {\nconst inlineAttrs = (props && props.inlineAttrs) || ''\n@@ -27,22 +27,22 @@ it('should render correctly', () => {\n})\nit('should default to vertical stack', () => {\n- const { getByTestId } = renderComponent()\n- const stack = getByTestId('stack')\n+ renderComponent()\n+ const stack = screen.getByTestId('stack')\nexpect(stack).toHaveStyle('display: flex')\nexpect(stack).toHaveStyle('flex-direction: column')\n})\nit('should not space last child', () => {\n- const { getByTestId } = renderComponent()\n- const stack = getByTestId('stack')\n+ renderComponent()\n+ const stack = screen.getByTestId('stack')\nexpect(stack).not.toHaveStyle('margin-bottom: 0.5rem')\n})\nit('should should stack horizontally if isInline', () => {\nconst inlineAttrs = 'is-inline'\n- const { getByTestId } = renderComponent({ inlineAttrs })\n- const stack = getByTestId('stack')\n+ renderComponent({ inlineAttrs })\n+ const stack = screen.getByTestId('stack')\nexpect(stack).toHaveStyle('display: flex')\nexpect(stack).toHaveStyle('flex-direction: row')\n})\n@@ -58,8 +58,8 @@ it.each`\n'should render CStack with element as $as',\n({ as }) => {\nconst inlineAttrs = `as=\"${as}\"`\n- const { asFragment, getByTestId } = renderComponent({ inlineAttrs })\n- const stack = getByTestId('stack')\n+ const { asFragment } = renderComponent({ inlineAttrs })\n+ const stack = screen.getByTestId('stack')\nexpect(getTagName(stack)).toEqual(as)\nexpect(asFragment()).toMatchSnapshot()\n}\n",
        "date": "12.07.2020 16:49:35",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "chatgpt_zeroshot": "refactor: Updated test file to use screen object for better readability"
    },
    {
        "msg": "test(stat): refactor use screen",
        "diff": "diff --git a/packages/chakra-ui-core/src/CStat/tests/CStat.test.js b/packages/chakra-ui-core/src/CStat/tests/CStat.test.js import { CStat, CStatLabel, CStatNumber, CStatHelperText, CStatArrow } from '..'\n-import { render } from '@/tests/test-utils'\n+import { render, screen } from '@/tests/test-utils'\nconst renderComponent = (props) => {\nconst base = {\n@@ -22,8 +22,8 @@ it('should render correctly', () => {\n})\nit('should render children in DOM', () => {\n- const { getByText } = renderComponent()\n- expect(getByText('Collected Fees')).toBeInTheDocument()\n+ renderComponent()\n+ expect(screen.getByText('Collected Fees')).toBeInTheDocument()\n})\ntest('\"CStatArrow\" should display corresponding icon for \"type\" prop', () => {\n",
        "date": "12.07.2020 16:50:53",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "chatgpt_zeroshot": "Add screen import to CStat.test.js and update test to use screen instead of getByText"
    },
    {
        "msg": "test(tag): refactor use screen",
        "diff": "diff --git a/packages/chakra-ui-core/src/CTag/tests/CTag.test.js b/packages/chakra-ui-core/src/CTag/tests/CTag.test.js import { CBox, CTag, CTagLabel, CTagIcon, CTagCloseButton, CAvatar } from '../..'\n-import { render } from '@/tests/test-utils'\n+import { render, screen } from '@/tests/test-utils'\nconst renderComponent = (props) => {\nconst base = {\n@@ -22,9 +22,9 @@ it('should render correctly', () => {\n})\nit('should display children', () => {\n- const { getByText } = renderComponent()\n+ renderComponent()\n- expect(getByText('Green')).toBeInTheDocument()\n+ expect(screen.getByText('Green')).toBeInTheDocument()\n})\nit('should display tag with right icon', () => {\n@@ -35,8 +35,7 @@ it('should display tag with right icon', () => {\n<CTagLabel>Green</CTagLabel>\n<CTagIcon icon=\"add\" size=\"12px\" />\n</CTag>\n- </CBox>\n- `\n+ </CBox>`\n})\nexpect(asFragment()).toMatchSnapshot()\n})\n@@ -52,8 +51,7 @@ it('should display tag with custom element', () => {\n/>\n<CTagLabel>Mesut</CTagLabel>\n</CTag>\n- </CBox>\n- `\n+ </CBox>`\n})\nexpect(asFragment()).toMatchSnapshot()\n})\n",
        "date": "12.07.2020 17:04:43",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "chatgpt_zeroshot": "Refactor CTag.test.js to use screen instead of getByText for better readability"
    },
    {
        "msg": "test(text): refactor use screen",
        "diff": "diff --git a/packages/chakra-ui-core/src/CText/tests/CText.test.js b/packages/chakra-ui-core/src/CText/tests/CText.test.js import CText from '..'\n-import { render } from '@/tests/test-utils'\n+import { render, screen } from '@/tests/test-utils'\nconst renderComponent = (props) => {\nconst inlineAttrs = (props && props.inlineAttrs) || ''\n@@ -19,9 +19,9 @@ it('should render correctly', () => {\nit('should change the style', () => {\nconst inlineAttrs = 'd=\"flex\"'\n- const { asFragment, getByTestId } = renderComponent({ inlineAttrs })\n+ const { asFragment } = renderComponent({ inlineAttrs })\n- const text = getByTestId('text')\n+ const text = screen.getByTestId('text')\nexpect(asFragment()).toMatchSnapshot()\nexpect(text).toHaveStyle('display: flex')\n@@ -44,8 +44,8 @@ it.each`\n'should display text type as $as',\n({ as }) => {\nconst inlineAttrs = `as=${as}`\n- const { getByTestId } = renderComponent({ inlineAttrs })\n- const text = getByTestId('text')\n+ renderComponent({ inlineAttrs })\n+ const text = screen.getByTestId('text')\nexpect(text.tagName.toLowerCase()).toEqual(as)\n}\n)\n",
        "date": "12.07.2020 17:05:45",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "chatgpt_zeroshot": "Refactor CText.test.js to use screen instead of getByTestId"
    },
    {
        "msg": "test(avatar): add tests for defaultavatar aria-label",
        "diff": "diff --git a/packages/chakra-ui-core/src/CAvatar/tests/CAvatar.test.js b/packages/chakra-ui-core/src/CAvatar/tests/CAvatar.test.js @@ -72,11 +72,12 @@ it('renders a name avatar if no src', async () => {\n})\n})\n-it('renders a name avatar if src fails', async () => {\n+it('renders Default Avatar if src fails', async () => {\nrenderComponent({ template: '<CAvatar name=\"Mesut Koca\" src=\"LOAD_FAILURE_SRC\" />' })\nawait wait(() => {\n- expect(screen.queryByAltText(/Mesut Koca/i)).not.toBeInTheDocument()\n+ expect(screen.queryByAltText(/Mesut Koca/i)).not.toBeInTheDocument() // img\n+ expect(screen.getByLabelText(/Mesut Koca/i)).toBeInTheDocument() // DefaultAvatar\nexpect(screen.getByText('MK')).toBeInTheDocument()\n})\n})\n",
        "date": "16.07.2020 22:49:47",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "chatgpt_zeroshot": "Update CAvatar.test.js to render Default Avatar if src fails"
    },
    {
        "msg": "test(stack): update snapshots",
        "diff": "diff --git a/packages/chakra-ui-core/src/CStack/tests/__snapshots__/CStack.test.js.snap b/packages/chakra-ui-core/src/CStack/tests/__snapshots__/CStack.test.js.snap exports[`should render CStack with element as nav 1`] = `\n<DocumentFragment>\n<nav\n- class=\"css-j7qwjs css-k008qs css-1lp2as9\"\n+ class=\"css-j7qwjs css-0\"\ndata-chakra-component=\"CStack\"\ndata-testid=\"stack\"\n>\n<div\n- class=\"css-1ipbp6k\"\n+ class=\"css-dtyjrz\"\ndata-chakra-component=\"CBox\"\ndata-testid=\"stack-child-1\"\n>\n@@ -26,7 +26,6 @@ exports[`should render CStack with element as nav 1`] = `\nThe future can be even brighter but a goal without a plan is just a wish\n</p>\n</div>\n-\n<div\nclass=\"css-1ipbp6k\"\ndata-chakra-component=\"CBox\"\n@@ -53,12 +52,12 @@ exports[`should render CStack with element as nav 1`] = `\nexports[`should render CStack with element as section 1`] = `\n<DocumentFragment>\n<section\n- class=\"css-j7qwjs css-k008qs css-1lp2as9\"\n+ class=\"css-j7qwjs css-0\"\ndata-chakra-component=\"CStack\"\ndata-testid=\"stack\"\n>\n<div\n- class=\"css-1ipbp6k\"\n+ class=\"css-dtyjrz\"\ndata-chakra-component=\"CBox\"\ndata-testid=\"stack-child-1\"\n>\n@@ -76,7 +75,6 @@ exports[`should render CStack with element as section 1`] = `\nThe future can be even brighter but a goal without a plan is just a wish\n</p>\n</div>\n-\n<div\nclass=\"css-1ipbp6k\"\ndata-chakra-component=\"CBox\"\n@@ -103,12 +101,12 @@ exports[`should render CStack with element as section 1`] = `\nexports[`should render correctly 1`] = `\n<DocumentFragment>\n<div\n- class=\"css-j7qwjs css-k008qs css-1lp2as9\"\n+ class=\"css-j7qwjs css-0\"\ndata-chakra-component=\"CStack\"\ndata-testid=\"stack\"\n>\n<div\n- class=\"css-1ipbp6k\"\n+ class=\"css-dtyjrz\"\ndata-chakra-component=\"CBox\"\ndata-testid=\"stack-child-1\"\n>\n@@ -126,7 +124,6 @@ exports[`should render correctly 1`] = `\nThe future can be even brighter but a goal without a plan is just a wish\n</p>\n</div>\n-\n<div\nclass=\"css-1ipbp6k\"\ndata-chakra-component=\"CBox\"\n@@ -153,29 +150,36 @@ exports[`should render correctly 1`] = `\nexports[`should should stack native html elements 1`] = `\n<DocumentFragment>\n<div\n- class=\"css-j7qwjs css-k008qs css-1lp2as9\"\n+ class=\"css-j7qwjs css-0\"\ndata-chakra-component=\"CStack\"\ndata-testid=\"stack\"\n>\n<p\n- class=\"css-18iq2bq\"\n+ class=\"css-16ec2e8\"\ndata-chakra-component=\"CText\"\n>\nThe future can be even brighter but a goal without a plan is just a wish\n</p>\n-\n+ <div\n+ class=\"css-cet0rr\"\n+ data-chakra-component=\"CBox\"\n+ >\n<p\ndata-testid=\"stacked-p\"\n>\nI am a happy paragraph element\n</p>\n-\n+ </div>\n+ <div\n+ class=\"css-cet0rr\"\n+ data-chakra-component=\"CBox\"\n+ >\n<h3\ndata-testid=\"stacked-h3\"\n>\nI am a jolly heading element\n</h3>\n-\n+ </div>\n<p\nclass=\"css-18iq2bq\"\ndata-chakra-component=\"CText\"\n",
        "date": "26.09.2020 21:50:33",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "test",
        "chatgpt_zeroshot": "Refactor CStack component to use simplified CSS classes and update test snapshots"
    },
    {
        "msg": "test(razzle): add test for development build",
        "diff": "diff --git a/test/e2e/razzle-build.test.js b/test/e2e/razzle-build.test.js @@ -208,6 +208,28 @@ describe('razzle build', () => {\nexpect(output.code).toBe(1);\n});\n+\n+ it('should compile with development build', () => {\n+ const stagePath = util.setupStageWithExample(stageName, 'with-development-build');\n+ const output = shell.exec('yarn build --noninteractive');\n+ // Create asset manifest\n+ expect(fileExists('build/assets.json')).toBeTruthy();\n+\n+ const assets = JSON.parse(fs.readFileSync(path.join(stagePath, 'build/assets.json')));\n+ const js = fs.readFileSync(path.join(stagePath, 'build', 'public', assets.client.js[0]));\n+\n+ expect(output.code).toBe(0);\n+ });\n+\n+ it('should exit with an error code when the custom config is invalid', () => {\n+ util.setupStageWithFixture(stageName, 'build-with-custom-config-invalid');\n+ const output = shell.exec('yarn build', {\n+ silent: true,\n+ });\n+\n+ expect(output.code).toBe(1);\n+ });\n+\nafterEach(() => {\nutil.teardownStage(stageName);\n});\n",
        "date": "21.08.2021 22:05:35",
        "repo": "jaredpalmer/razzle",
        "type": "test",
        "chatgpt_zeroshot": "Add tests for development build and invalid custom config in razzle build test suite"
    },
    {
        "msg": "test(ACC): use deterministic test props",
        "diff": "diff --git a/test/specs/lib/AutoControlledComponent-test.js b/test/specs/lib/AutoControlledComponent-test.js @@ -19,9 +19,11 @@ const createTestClass = (options = {}) => class Test extends AutoControlledCompo\nconst toDefaultName = (prop) => `default${prop.slice(0, 1).toUpperCase() + prop.slice(1)}`\n-const makeProps = () => _.transform(_.times(_.random(3, 10)), (res) => {\n- res[_.camelCase(faker.hacker.noun())] = faker.hacker.verb()\n-}, {})\n+const makeProps = () => ({\n+ computer: 'hardware',\n+ flux: 'capacitor',\n+ ion: 'belt',\n+})\nconst makeDefaultProps = (props) => _.transform(props, (res, val, key) => {\nres[toDefaultName(key)] = val\n",
        "date": "12.02.2017 13:55:13",
        "repo": "semantic-org/semantic-ui-react",
        "type": "test",
        "chatgpt_zeroshot": "Refactor makeProps function to use hardcoded values instead of random faker data"
    },
    {
        "msg": "test(typings): restore assertion for typings and propTypes order",
        "diff": "diff --git a/test/specs/commonTests/hasValidTypings.js b/test/specs/commonTests/hasValidTypings.js @@ -75,11 +75,15 @@ export default (Component, extractedInfo, options = {}) => {\nconst componentProps = _.keys(componentPropTypes)\nconst interfaceProps = _.without(_.map(props, 'name'), ...ignoredTypingsProps)\n- componentProps.forEach((propName) => {\n+ componentProps.forEach((propName, index) => {\ninterfaceProps.should.include(\npropName,\n`propTypes define \"${propName}\" but it is missing in typings`,\n)\n+ interfaceProps[index].should.equal(\n+ propName,\n+ `propTypes define \"${propName}\" but its order doesn't match typings`,\n+ )\n})\ninterfaceProps.forEach((propName) => {\n",
        "date": "10.10.2017 08:31:47",
        "repo": "semantic-org/semantic-ui-react",
        "type": "test",
        "chatgpt_zeroshot": "Add index check in componentProps.forEach loop"
    },
    {
        "msg": "test(Dropdown): fix multiple search text assertion",
        "diff": "diff --git a/test/specs/modules/Dropdown/Dropdown-test.js b/test/specs/modules/Dropdown/Dropdown-test.js @@ -973,7 +973,7 @@ describe('Dropdown', () => {\n{ value: 0, text: 'foo' },\n{ value: 1, text: 'foe' },\n]\n- wrapperMount(<Dropdown options={searchOptions} selection />)\n+ wrapperMount(<Dropdown options={searchOptions} search selection />)\n// open and simulate search\nwrapper\n@@ -984,13 +984,10 @@ describe('Dropdown', () => {\ndomEvent.keyDown(document, { key: 'ArrowDown' })\ndomEvent.keyDown(document, { key: 'Enter' })\n- const item = wrapper\n- .find('.selected')\n-\n// text updated\nwrapper\n.find('div.text')\n- .should.contain.text(item.text())\n+ .should.contain.text('foe')\n})\nit('displays if value is 0', () => {\nconst text = faker.hacker.noun()\n",
        "date": "15.10.2017 22:49:20",
        "repo": "semantic-org/semantic-ui-react",
        "type": "test",
        "chatgpt_zeroshot": "Add search functionality to Dropdown component and update text display test"
    },
    {
        "msg": "test(Checkbox): remove incorrect event combinations",
        "diff": "diff --git a/test/specs/modules/Checkbox/Checkbox-test.js b/test/specs/modules/Checkbox/Checkbox-test.js @@ -53,7 +53,7 @@ describe('Checkbox', () => {\n})\ndescribe('aria', () => {\n- ['aria-label', 'role'].forEach((propName) => {\n+ ;['aria-label', 'role'].forEach((propName) => {\nit(`passes \"${propName}\" to the <input>`, () => {\nshallow(<Checkbox {...{ [propName]: 'foo' }} />)\n.find('input')\n@@ -377,36 +377,30 @@ describe('Checkbox', () => {\ndescription: 'click on label: fires on mouse click',\nevents: {\nlabel: ['mouseup', 'click'],\n- input: ['click'],\n},\n},\n{\ndescription: 'click on input: fires on mouse click',\nevents: {\n- label: ['mouseup', 'click'],\ninput: ['click'],\n},\n},\n{\ndescription: 'key on input: fires on space key',\nevents: {\n- label: ['mouseup', 'click'],\ninput: ['click'],\n},\n},\n-\n{\ndescription: 'click on label with \"id\": fires on mouse click',\nevents: {\nlabel: ['mouseup', 'click'],\n- input: ['click'],\n},\nid: 'foo',\n},\n{\ndescription: 'click on input with \"id\": fires on mouse click',\nevents: {\n- label: ['mouseup', 'click'],\ninput: ['click'],\n},\nid: 'foo',\n@@ -435,8 +429,10 @@ describe('Checkbox', () => {\n{ attachTo },\n)\n- _.forEach(events, (event, target) => {\n- domEvent.fire(`[data-id=${dataId}] ${target}`, event)\n+ _.forEach(events, (targetEvents, target) => {\n+ _.forEach(targetEvents, (targetEvent) => {\n+ domEvent.fire(`[data-id=${dataId}] ${target}`, targetEvent)\n+ })\n})\nonClick.should.have.been.calledOnce()\n@@ -449,10 +445,10 @@ describe('Checkbox', () => {\n})\ndescribe('Controlled component', () => {\n- const getControlledCheckbox = isOnClick =>\n+ const getControlledCheckbox = (isOnClick) =>\nclass ControlledCheckbox extends React.Component {\nstate = { checked: false }\n- toggle = () => this.setState(prevState => ({ checked: !prevState.checked }))\n+ toggle = () => this.setState((prevState) => ({ checked: !prevState.checked }))\nrender() {\nconst handler = isOnClick ? { onClick: this.toggle } : { onChange: this.toggle }\n",
        "date": "07.07.2019 18:41:21",
        "repo": "semantic-org/semantic-ui-react",
        "type": "test",
        "chatgpt_zeroshot": "Refactor Checkbox-test.js for better readability and consistency"
    },
    {
        "msg": "test(run): Added test to check for response body sanity under programmatic usage",
        "diff": "diff --git a/test/library/run-options.test.js b/test/library/run-options.test.js @@ -49,4 +49,22 @@ describe('Newman run options', function () {\ndone();\n});\n});\n+\n+ it('should correctly handle a multitude of responses', function (done) {\n+ newman.run({\n+ collection: 'test/fixtures/run/response-bodies.json'\n+ }, function (err, summary) {\n+ expect(err).to.not.be.ok();\n+ expect(summary.run.failures).to.be.empty();\n+\n+ var executions = summary.run.executions;\n+\n+ expect(executions).to.have.length(3);\n+ expect(executions[0].response.json()).to.not.be.empty();\n+ expect(executions[1].response.text()).to.not.be.empty();\n+ expect(executions[2].response.text()).to.not.be.empty();\n+\n+ done();\n+ });\n+ });\n});\n",
        "date": "16.06.2017 13:17:06",
        "repo": "postmanlabs/newman",
        "type": "test",
        "chatgpt_zeroshot": "Add test case to handle multiple responses in Newman run options"
    },
    {
        "msg": "test(cli): Added CLI test for failed collection URL fetches",
        "diff": "diff --git a/test/cli/run-options.test.js b/test/cli/run-options.test.js @@ -25,4 +25,12 @@ describe('CLI run options', function () {\ndone();\n});\n});\n+\n+ it('should handle invalid collection URLs correctly', function (done) {\n+ // eslint-disable-next-line max-len\n+ exec('node ./bin/newman.js run https://api.getpostman.com/collections/my-collection-uuid?apikey=my-secret-api-key', function (code) {\n+ expect(code).be(1);\n+ done();\n+ });\n+ });\n});\n",
        "date": "06.07.2017 20:56:10",
        "repo": "postmanlabs/newman",
        "type": "test",
        "chatgpt_zeroshot": "Add test case for handling invalid collection URLs in CLI run options"
    },
    {
        "msg": "test(library): Added Library test for failed collection URL fetches",
        "diff": "diff --git a/test/library/run-options.test.js b/test/library/run-options.test.js @@ -82,4 +82,19 @@ describe('Newman run options', function () {\ndone();\n});\n});\n+\n+ it('should correctly handle invalid collection URLs', function (done) {\n+ newman.run({\n+ collection: 'https://api.getpostman.com/collections/my-collection-uuid?apikey=my-secret-api-key'\n+ }, function (err, summary) {\n+ expect(err).to.be.ok();\n+ expect(err.message).to.be('Invalid API Key. Every request requires a valid API Key to be sent.');\n+\n+ // eslint-disable-next-line max-len\n+ expect(err.help).to.be('Error fetching the collection from the Postman Pro API. Ensure that the url is valid.');\n+ expect(summary).to.not.be.ok();\n+\n+ done();\n+ });\n+ });\n});\n",
        "date": "06.07.2017 20:56:37",
        "repo": "postmanlabs/newman",
        "type": "test",
        "chatgpt_zeroshot": "Add test case for handling invalid collection URLs in Newman run options"
    },
    {
        "msg": "test(cli): Added CLI unit test for --global-var option handling",
        "diff": "diff --git a/test/unit/cli.test.js b/test/unit/cli.test.js @@ -142,6 +142,24 @@ describe('cli parser', function () {\n});\n});\n+ describe('--global-var', function () {\n+ it('should throw an error for missing --global-var values', function (done) {\n+ cli.rawOptions('run myCollection.json --global-var'.split(' '), 'newmantests', function (err) {\n+ expect(err.code).to.equal('ARGError');\n+\n+ done();\n+ });\n+ });\n+\n+ it('should throw an error for --global-var values without an `=`', function (done) {\n+ cli.rawOptions('run myCollection.json --global-var foo'.split(' '), 'newmantests', function (err) {\n+ expect(err.code).to.equal('ARGError');\n+\n+ done();\n+ });\n+ });\n+ });\n+\nit('should load all arguments (except reporters)', function (done) {\ncli.rawOptions(('run ' +\n'myCollection.json ' +\n@@ -154,6 +172,7 @@ describe('cli parser', function () {\n'--reporter-cli-no-summary ' +\n'--iteration-count 23 ' +\n'--reporters json,html ' +\n+ '--global-var foo=bar --global-var alpha==beta= ' +\n'--no-color ' +\n'--delay-request 12000 ' +\n'--timeout-request 5000 ' +\n@@ -183,6 +202,11 @@ describe('cli parser', function () {\nexpect(opts.reporters).to.contain('html');\nexpect(opts.reporters).to.not.contain('junit');\n+ expect(opts.globalVar).to.eql([\n+ { key: 'foo', value: 'bar' },\n+ { key: 'alpha', value: '=beta=' }\n+ ]);\n+\nexpect(opts.bail).to.be(true);\nexpect(opts.suppressExitCode).to.be(true);\n@@ -208,6 +232,7 @@ describe('cli parser', function () {\n'--timeout-request 5000 ' +\n'--ignore-redirects ' +\n'-k ' +\n+ '--global-var foo=bar --global-var alpha==beta= ' +\n'--reporter-json-output ./omg.txt ' +\n'--reporter-html-output report.html ' +\n'--reporter-html-template ./mytemplate.html ' +\n@@ -231,6 +256,11 @@ describe('cli parser', function () {\nexpect(opts.ignoreRedirects).to.be(true);\nexpect(opts.insecure).to.be(true);\n+ expect(opts.globalVar).to.eql([\n+ { key: 'foo', value: 'bar' },\n+ { key: 'alpha', value: '=beta=' }\n+ ]);\n+\nexpect(opts.noColor).to.be(true);\nexpect(opts.reporters).to.contain('json');\n",
        "date": "24.07.2017 14:35:30",
        "repo": "postmanlabs/newman",
        "type": "test",
        "chatgpt_zeroshot": "Add tests and functionality for handling global variables in CLI options"
    },
    {
        "msg": "test(cli): Added CLI test for --global-var option sanity",
        "diff": "diff --git a/test/cli/run-options.test.js b/test/cli/run-options.test.js @@ -33,4 +33,12 @@ describe('CLI run options', function () {\ndone();\n});\n});\n+\n+ it('should correctly work with global variable overrides passed with --global-var', function (done) {\n+ // eslint-disable-next-line max-len\n+ exec('node ./bin/newman.js run test/integration/steph/steph.postman_collection.json --global-var first=James --global-var last=Bond', function (code) {\n+ expect(code).be(0);\n+ done();\n+ });\n+ });\n});\n",
        "date": "24.07.2017 14:36:08",
        "repo": "postmanlabs/newman",
        "type": "test",
        "chatgpt_zeroshot": "Add test for global variable overrides in CLI run options"
    },
    {
        "msg": "test(cli): Added CLI unit test for interaction between --global-var and --export-globals",
        "diff": "diff --git a/test/cli/export-globals.test.js b/test/cli/export-globals.test.js @@ -51,4 +51,26 @@ describe('--export-globals', function () {\ndone();\n});\n});\n+\n+ it('`newman run` should override exported globals with those provided via --global-var', function (done) {\n+ // eslint-disable-next-line max-len\n+ exec('node ./bin/newman.js run test/fixtures/run/single-request-failing.json -g test/fixtures/run/simple-variables.json --global-var foo=bar --export-globals out/test-globals.json', function (code) {\n+ var globals;\n+\n+ try { globals = JSON.parse(fs.readFileSync(exportedGlobalsPath).toString()); }\n+ catch (e) { console.error(e); }\n+\n+ expect(code).not.be(0);\n+ expect(globals).be.ok();\n+ expect(globals).have.property('_postman_exported_at');\n+ expect(globals).have.property('values');\n+ expect(globals.values).eql([\n+ { key: 'var-1', value: 'value-1', type: 'any' },\n+ { key: 'var-2', value: 'value-2', type: 'any' },\n+ { key: 'foo', value: 'bar', type: 'any' }\n+ ]);\n+ expect(globals).have.property('_postman_variable_scope', 'globals');\n+ done();\n+ });\n+ });\n});\n",
        "date": "24.07.2017 14:37:00",
        "repo": "postmanlabs/newman",
        "type": "test",
        "chatgpt_zeroshot": "Override exported globals with --global-var values in `newman run` command"
    },
    {
        "msg": "test: Load main.js",
        "diff": "diff --git a/test/spec.html b/test/spec.html <script type=\"text/javascript\">// <![CDATA[\nvar loader_development = function(){\n- document.write(\"<script src='../src/development_initializer.js'><\\/script>\" +\n+ document.write(\"<script type='module' src='../src/main.js'><\\/script>\" +\n\"<script type='text/javascript'>\"+\n\"if(console) console.log('BiwaScheme '+BiwaScheme.VERSION);\" +\n\"BiwaScheme.register_tests();\" +\n",
        "date": "20.06.2020 15:47:58",
        "repo": "biwascheme/biwascheme",
        "type": "test",
        "chatgpt_zeroshot": "Update loader script to use main.js for development."
    },
    {
        "msg": "test: Remove use of underscore",
        "diff": "diff --git a/test/unit.js b/test/unit.js @@ -2133,7 +2133,7 @@ describe('js interface', {\nthis.foo = obj[\"foo\"];\n};\nvar tmp = scm_eval('(js-new \"BiwaScheme.TestForJSNew\" \\'foo (lambda () 4))');\n- expect(_.isFunction(tmp.foo)).should_be(true);\n+ expect(typeof(tmp.foo)).should_be('function');\n},\n'js-null?' : function(){\nev('(js-null? (js-eval \"null\"))').should_be(true);\n",
        "date": "23.06.2020 22:16:31",
        "repo": "biwascheme/biwascheme",
        "type": "test",
        "chatgpt_zeroshot": "Refactor test for js-new function in unit.js"
    },
    {
        "msg": "test: Load jquery explicitly",
        "diff": "diff --git a/test/spec.html b/test/spec.html <div id=\"div1\">div tag sample <span class=\"inner\">stuff</span></div>\n<div id=\"bs-console\"></div>\n-<script type=\"text/javascript\">// <![CDATA[\n+<script type=\"text/javascript\">\nvar loader_development = function(){\n- document.write(\"<script type='module' src='../src/main-browser.js'><\\/script>\" +\n+ document.write(\"<script type='text/javascript' src='../src/deps/jquery.js'><\\/script>\" +\n+ \"<script type='module' src='../src/main-browser.js'><\\/script>\" +\n\"<script type='module'>\"+\n\"if(console) console.log('BiwaScheme '+BiwaScheme.VERSION);\" +\n\"RegisterBiwaSchemeTests();\" +\n@@ -47,8 +48,7 @@ switch(location.hash){\nif(console) console.log(\"starting tests for src/*.js\");\nloader_development();\n}\n-\n-// ]]></script>\n+</script>\n</body>\n</html>\n<!-- vim:set ft=javascript: -->\n",
        "date": "14.03.2021 22:02:03",
        "repo": "biwascheme/biwascheme",
        "type": "test",
        "chatgpt_zeroshot": "Update script tag in spec.html to include jquery.js dependency"
    },
    {
        "msg": "test: Fix broken test",
        "diff": "diff --git a/test/node_functions.js b/test/node_functions.js //\n// $ npm run node-test\nvar BiwaScheme = require('..'),\n- _ = require('underscore'),\nassert = require('assert'),\nfs = require('fs'),\npath = require('path'),\n@@ -90,9 +89,9 @@ var tests = {\n}\n};\n-tests.forEach(function(func, name){\n+for (const name in tests) {\nputs(\"- \"+name);\n- func();\n-});\n+ tests[name]();\n+}\nputs(\"test ok\");\n",
        "date": "23.03.2022 23:25:58",
        "repo": "biwascheme/biwascheme",
        "type": "test",
        "chatgpt_zeroshot": "Refactor test iteration in node_functions.js"
    },
    {
        "msg": "test: fix test snapshot",
        "diff": "diff --git a/components/SocialLoginGroup/__tests__/__snapshots__/SocialLoginButtons.test.js.snap b/components/SocialLoginGroup/__tests__/__snapshots__/SocialLoginButtons.test.js.snap @@ -17,5 +17,11 @@ Array [\n>\nLogin with Facebook\n</button>,\n+ <button\n+ className=\"loginButton githubButton\"\n+ onClick={[Function]}\n+ >\n+ Login with GitHub\n+ </button>,\n]\n`;\n",
        "date": "14.10.2019 22:15:45",
        "repo": "operationcode/front-end",
        "type": "test",
        "chatgpt_zeroshot": "Add GitHub login button to SocialLoginButtons test snapshot"
    },
    {
        "msg": "test: replace: jsx attribute",
        "diff": "diff --git a/packages/engine-runner/test/replace.js b/packages/engine-runner/test/replace.js @@ -701,3 +701,39 @@ test('putout: runner: replace: jsx: children', (t) => {\nt.end();\n});\n+test('putout: runner: replace: jsx: attribute', (t) => {\n+ const from = montag`\n+ <Link href=\"__a\">\n+ <a>__b</a>\n+ </Link>\n+ `;\n+\n+ const plugin = {\n+ report: () => '',\n+ replace: () => ({\n+ [from]: ({__b}) => {\n+ __b.type = 'StringLiteral';\n+ return __b;\n+ },\n+ }),\n+ };\n+\n+ const source = montag`\n+ <Link href=\"/about\">\n+ <a>About</a>\n+ </Link>\n+ `;\n+\n+ const {code} = putout(source, {\n+ runPlugins,\n+ plugins: [\n+ ['plugin', plugin],\n+ ],\n+ });\n+\n+ const expected = `'About';`;\n+\n+ t.equal(code, expected);\n+ t.end();\n+});\n+\n",
        "date": "11.01.2023 21:16:01",
        "repo": "coderaiser/putout",
        "type": "test",
        "chatgpt_zeroshot": "Add test for replacing JSX attribute in engine-runner test suite"
    },
    {
        "msg": "test: fix flipped multiple classes test",
        "diff": "diff --git a/test/bind.spec.js b/test/bind.spec.js @@ -112,7 +112,7 @@ test('class attribute bindings are added by object syntax', async () => {\nexpect(document.querySelector('span').classList.contains('foo')).toBeTruthy()\n})\n-test('multiple classes are added by object syntax', async () => {\n+test('multiple classes are removed by object syntax', async () => {\ndocument.body.innerHTML = `\n<div x-data=\"{ isOn: false }\">\n<span class=\"foo bar\" x-bind:class=\"{ 'foo bar': isOn }\"></span>\n@@ -125,7 +125,7 @@ test('multiple classes are added by object syntax', async () => {\nexpect(document.querySelector('span').classList.contains('bar')).toBeFalsy()\n})\n-test('multiple classes are removed by object syntax', async () => {\n+test('multiple classes are added by object syntax', async () => {\ndocument.body.innerHTML = `\n<div x-data=\"{ isOn: true }\">\n<span x-bind:class=\"{ 'foo bar': isOn }\"></span>\n",
        "date": "26.06.2020 15:40:31",
        "repo": "alpinejs/alpine",
        "type": "test",
        "chatgpt_zeroshot": "Fix class attribute bindings in test file"
    },
    {
        "msg": "test(UncontrolledCarousel): add missing tests",
        "diff": "diff --git a/src/__tests__/UncontrolledCarousel.spec.js b/src/__tests__/UncontrolledCarousel.spec.js @@ -34,6 +34,16 @@ describe('UncontrolledCarousel', () => {\nexpect(carousel.prop('ride')).toBe('carousel');\n});\n+ it('should have ride set to undefined when autoPlay is false', () => {\n+ const carousel = shallow(<UncontrolledCarousel items={items} autoPlay={false} />);\n+ expect(carousel.prop('ride')).toBe(undefined);\n+ });\n+\n+ it('should have ride set to \"carousel\" when autoPlay is true', () => {\n+ const carousel = shallow(<UncontrolledCarousel items={items} autoPlay />);\n+ expect(carousel.prop('ride')).toBe('carousel');\n+ });\n+\nit('should increase the activeIndex when next is called', () => {\nconst carousel = shallow(<UncontrolledCarousel items={items} />);\nconst instance = carousel.instance();\n",
        "date": "12.02.2018 16:23:21",
        "repo": "reactstrap/reactstrap",
        "type": "test",
        "chatgpt_zeroshot": "Add tests for setting ride prop based on autoPlay value in UncontrolledCarousel"
    },
    {
        "msg": "test(utils): add missing tests",
        "diff": "diff --git a/src/__tests__/utils.spec.js b/src/__tests__/utils.spec.js @@ -140,6 +140,35 @@ describe('Utils', () => {\nconst target = {};\nexpect(Utils.getTarget(target)).toEqual(target);\n});\n+\n+ it('should not return an error when the target could be identified', () => {\n+ const element = document.createElement('div');\n+ element.className = 'thing';\n+ document.body.appendChild(element);\n+ jest.spyOn(document, 'querySelector');\n+ expect(() => {\n+ Utils.getTarget('.thing');\n+ }).not.toThrow();\n+ });\n+\n+ it('should return an error when the target could not be identified', () => {\n+ const target = 'not a target';\n+ expect(() => {\n+ Utils.getTarget(target);\n+ }).toThrow(`The target '${target}' could not be identified in the dom, tip: check spelling`);\n+ });\n+ });\n+\n+ describe('setGlobalCssModule', () => {\n+ it('should return the mapped classnames', () => {\n+ const globalCssModule = {\n+ btn: 'a1',\n+ 'btn-success': 'b1',\n+ 'btn-primary': 'c2',\n+ };\n+ Utils.setGlobalCssModule(globalCssModule);\n+ expect(Utils.mapToCssModules('btn btn-primary')).toBe('a1 c2');\n+ });\n});\n// TODO\n",
        "date": "23.03.2018 19:45:29",
        "repo": "reactstrap/reactstrap",
        "type": "test",
        "chatgpt_zeroshot": "Add tests for Utils.getTarget and Utils.setGlobalCssModule functions"
    },
    {
        "msg": "test(DropdownMenu): add missing test",
        "diff": "diff --git a/src/__tests__/DropdownMenu.spec.js b/src/__tests__/DropdownMenu.spec.js @@ -92,6 +92,20 @@ describe('DropdownMenu', () => {\nexpect(wrapper.find('.dropdown-menu').hostNodes().hasClass('dropdown-menu-right')).toBe(true);\n});\n+ it('should render down when direction is unknown on the context', () => {\n+ isOpen = true;\n+ direction = 'unknown';\n+ const wrapper = shallow(\n+ <DropdownMenu>Ello world</DropdownMenu>,\n+ {\n+ context: { isOpen, direction, inNavbar, popperManager },\n+ childContextTypes: { popperManager }\n+ }\n+ );\n+\n+ expect(wrapper.find(Popper).prop('placement')).toBe('bottom-start');\n+ });\n+\nit('should render down when direction is \"down\" on the context', () => {\nisOpen = true;\nconst wrapper = shallow(\n",
        "date": "10.09.2018 16:14:37",
        "repo": "reactstrap/reactstrap",
        "type": "test",
        "chatgpt_zeroshot": "Add test case for rendering down when direction is unknown on the context"
    },
    {
        "msg": "test(InputGroupAddon): add missing tests",
        "diff": "diff --git a/src/__tests__/InputGroupAddon.spec.js b/src/__tests__/InputGroupAddon.spec.js import React from 'react';\nimport { shallow } from 'enzyme';\n-import { InputGroupAddon } from '../';\n+import { InputGroupAddon, InputGroupText } from '../';\ndescribe('InputGroupAddon', () => {\nit('should render with \"div\" tag', () => {\n@@ -15,6 +15,19 @@ describe('InputGroupAddon', () => {\nexpect(wrapper.text()).toBe('<InputGroupText />');\n});\n+ it('should render children provided', () => {\n+ const wrapper = shallow(<InputGroupAddon addonType=\"append\"><button>Yo!</button></InputGroupAddon>);\n+\n+ expect(wrapper.childAt(0).type()).toBe('button');\n+ });\n+\n+ it('should render the string provided in the child InputGroupText', () => {\n+ const wrapper = shallow(<InputGroupAddon addonType=\"append\">Yo!</InputGroupAddon>);\n+\n+ expect(wrapper.childAt(0).type()).toBe(InputGroupText);\n+ expect(wrapper.childAt(0).prop('children')).toBe('Yo!');\n+ });\n+\nit('should render with \"input-group-*\" classes', () => {\nconst wrapperPrepend = shallow(<InputGroupAddon addonType=\"prepend\">Yo!</InputGroupAddon>);\nconst wrapperAppend = shallow(<InputGroupAddon addonType=\"append\">Yo!</InputGroupAddon>);\n",
        "date": "10.09.2018 16:16:04",
        "repo": "reactstrap/reactstrap",
        "type": "test",
        "chatgpt_zeroshot": "Add InputGroupText component and update tests in InputGroupAddon spec file"
    },
    {
        "msg": "test(modal): add tests for focus management",
        "diff": "diff --git a/src/__tests__/Modal.spec.js b/src/__tests__/Modal.spec.js @@ -892,4 +892,95 @@ describe('Modal', () => {\nwrapper.unmount();\n});\n+\n+ it('should return the focus to the last focused element before the modal has opened', () => {\n+ const MockComponent = ({ isOpen = false }) => (\n+ <>\n+ <button className={'focus'}>Focused</button>\n+ <Modal isOpen={isOpen}>\n+ <ModalBody>Whatever</ModalBody>\n+ </Modal>\n+ </>\n+ );\n+ const wrapper = mount(<MockComponent />);\n+ const button = wrapper\n+ .find('.focus')\n+ .hostNodes()\n+ .getDOMNode();\n+ button.focus();\n+ wrapper.setProps({ isOpen: true });\n+ wrapper.setProps({ isOpen: false });\n+ jest.runAllTimers();\n+\n+ expect(document.activeElement === button).toEqual(true);\n+ wrapper.unmount();\n+ })\n+\n+ it('should not return the focus to the last focused element before the modal has opened when \"returnFocusAfterClose\" is false', () => {\n+ const MockComponent = ({ isOpen = false }) => (\n+ <>\n+ <button className={'focus'}>Focused</button>\n+ <Modal isOpen={isOpen} returnFocusAfterClose={false} >\n+ <ModalBody>Whatever</ModalBody>\n+ </Modal>\n+ </>\n+ );\n+ const wrapper = mount(<MockComponent />);\n+ const button = wrapper\n+ .find('.focus')\n+ .hostNodes()\n+ .getDOMNode();\n+ button.focus();\n+ wrapper.setProps({ isOpen: true });\n+ wrapper.setProps({ isOpen: false });\n+ jest.runAllTimers();\n+\n+ expect(document.activeElement === button).toEqual(false);\n+ wrapper.unmount();\n+ })\n+\n+ it('should return the focus to the last focused element before the modal has opened when \"unmountOnClose\" is false', () => {\n+ const MockComponent = ({ isOpen = false }) => (\n+ <>\n+ <button className={'focus'}>Focused</button>\n+ <Modal isOpen={isOpen} unmountOnClose={false}>\n+ <ModalBody>Whatever</ModalBody>\n+ </Modal>\n+ </>\n+ );\n+ const wrapper = mount(<MockComponent />);\n+ const button = wrapper\n+ .find('.focus')\n+ .hostNodes()\n+ .getDOMNode();\n+ button.focus();\n+ wrapper.setProps({ isOpen: true });\n+ wrapper.setProps({ isOpen: false });\n+ jest.runAllTimers();\n+\n+ expect(document.activeElement === button).toEqual(true);\n+ wrapper.unmount();\n+ })\n+\n+ it('should not return the focus to the last focused element before the modal has opened when \"returnFocusAfterClose\" is false and \"unmountOnClose\" is false', () => {\n+ const MockComponent = ({ isOpen = false }) => (\n+ <>\n+ <button className={'focus'}/>\n+ <Modal isOpen={isOpen} returnFocusAfterClose={false} unmountOnClose={false}>\n+ <ModalBody>Whatever</ModalBody>\n+ </Modal>\n+ </>\n+ );\n+ const wrapper = mount(<MockComponent />);\n+ const button = wrapper\n+ .find('.focus')\n+ .hostNodes()\n+ .getDOMNode();\n+ button.focus();\n+ wrapper.setProps({ isOpen: true });\n+ wrapper.setProps({ isOpen: false });\n+ jest.runAllTimers();\n+\n+ expect(document.activeElement === button).toEqual(false);\n+ });\n});\n",
        "date": "03.04.2019 21:55:28",
        "repo": "reactstrap/reactstrap",
        "type": "test",
        "chatgpt_zeroshot": "Add focus management tests for Modal component"
    },
    {
        "msg": "test(PopperContent): remove debug statement\ntest(PopperContent): remove debug statement",
        "diff": "diff --git a/src/__tests__/PopperContent.spec.js b/src/__tests__/PopperContent.spec.js @@ -117,8 +117,6 @@ describe('PopperContent', () => {\nit('should have x-placement of auto by default', () => {\nconst wrapper = mount(<PopperContent target=\"target\" isOpen container=\"inline\">Yo!</PopperContent>);\n- console.log(wrapper.debug());\n-\nexpect(wrapper.find('div[x-placement=\"auto\"]').exists()).toBe(true);\n});\n",
        "date": "18.10.2019 18:40:11",
        "repo": "reactstrap/reactstrap",
        "type": "test",
        "chatgpt_zeroshot": "Remove console.log statement in PopperContent.spec.js test"
    },
    {
        "msg": "test: Add a test for strict mode with `Collapse`",
        "diff": "diff --git a/src/__tests__/Collapse.spec.js b/src/__tests__/Collapse.spec.js @@ -32,6 +32,13 @@ describe('Collapse', () => {\nexpect(wrapper.find('p').text()).toBe('hello');\n});\n+ it('works with strict mode', () => {\n+ const spy = jest.spyOn(console, 'error');\n+ wrapper = mount(<React.StrictMode><Collapse/></React.StrictMode>);\n+ expect(wrapper.instance()).toBeTruthy();\n+ expect(spy).not.toHaveBeenCalled();\n+ })\n+\nit('should have default isOpen value', () => {\nwrapper = shallow(<Collapse />);\nexpect(wrapper.instance().props.isOpen).toEqual(false);\n",
        "date": "21.10.2020 15:55:12",
        "repo": "reactstrap/reactstrap",
        "type": "test",
        "chatgpt_zeroshot": "Add test for strict mode in Collapse component"
    },
    {
        "msg": "test: Update bind external web test.",
        "diff": "diff --git a/packages/vega/test/web/bind-external.html b/packages/vega/test/web/bind-external.html @@ -82,7 +82,7 @@ const spec = {\n\"update\": {\n\"fill\": {\"value\": \"steelblue\"},\n\"xc\": {\"scale\": \"xscale\", \"field\": \"u\", \"band\": 0.5},\n- \"width\": {\"signal\": \"barWidth\"}\n+ \"width\": {\"signal\": \"+barWidth\"}\n},\n\"hover\": {\n\"fill\": {\"value\": \"red\"}\n",
        "date": "16.03.2021 17:17:09",
        "repo": "vega/vega",
        "type": "test",
        "chatgpt_zeroshot": "Fix width signal in bind-external.html"
    },
    {
        "msg": "test(unit): make VisComponent events tests more robust",
        "diff": "diff --git a/VisComponent/test/events.js b/VisComponent/test/events.js @@ -4,8 +4,6 @@ import VisComponent from '..';\nimport Events from '../mixin/Events';\ntest('Events mixin for VisComponent', t => {\n- t.plan(5);\n-\nlet EventedVisComponent = class extends Events(VisComponent) {\nconstructor (el, options) {\nsuper(el);\n@@ -41,6 +39,9 @@ test('Events mixin for VisComponent', t => {\nt.equal(v.value, options.value);\n// Make sure we can catch triggered events from the component.\n- v.on('foobar', value => t.equal(value, options.value, 'Event is emitted properly'));\n+ v.on('foobar', value => {\n+ t.equal(value, options.value, 'Event is emitted properly');\n+ t.end()\n+ });\nv.emitEvent();\n});\n",
        "date": "23.12.2016 15:37:20",
        "repo": "kitware/candela",
        "type": "test",
        "chatgpt_zeroshot": "Refactor Events mixin for VisComponent and update test plan"
    },
    {
        "msg": "test(DynamicLinechart): use new update() API",
        "diff": "diff --git a/app/examples/dynamic-linechart/index.js b/app/examples/dynamic-linechart/index.js @@ -12,18 +12,6 @@ class DynamicLineChart extends LineChart {\nsuper.render();\nthis.emit('render');\n}\n-\n- data (data) {\n- this.options.data = data;\n-\n- this.chart.then(chart => {\n- let data = chart.data('data');\n- data.remove(() => true);\n- data.insert(this.options.data);\n-\n- chart.update();\n- });\n- }\n}\nlet data = [];\n@@ -58,7 +46,7 @@ window.onload = () => {\ncounter++;\n- vis.data(data);\n+ vis.update({data});\nvis.render();\n}, 1000);\n",
        "date": "18.05.2017 15:54:35",
        "repo": "kitware/candela",
        "type": "test",
        "chatgpt_zeroshot": "Refactor data method in DynamicLineChart class and update usage in window.onload event handler"
    },
    {
        "msg": "test: use a more standard format for webpack config",
        "diff": "diff --git a/tests/webpack.config.js b/tests/webpack.config.js -// var webpack = require('webpack');\nvar candelaWebpack = require('../webpack');\n-var config = {};\n-\n-config.entry = {\n- 'tests': './tests.js'\n-};\n-\n-config.devtool = 'inline-source-map';\n-\n-config.node = {\n+module.exports = candelaWebpack({\n+ entry: {\n+ tests: './tests.js'\n+ },\n+ devtool: 'inline-source-map',\n+ node: {\nfs: 'empty'\n-};\n-\n-config.output = {\n+ },\n+ output: {\npath: 'build',\nfilename: 'tests.js'\n-};\n-config.module = {\n+ },\n+ module: {\nloaders: [\n{\ntest: /\\.css/,\n@@ -25,9 +20,5 @@ config.module = {\ninclude: /node_modules\\/nvd3/,\n},\n]\n-};\n-delete config.plugins;\n-\n-var final = candelaWebpack(config);\n-\n-module.exports = final;\n+ }\n+});\n",
        "date": "05.06.2017 14:57:01",
        "repo": "kitware/candela",
        "type": "test",
        "chatgpt_zeroshot": "Refactor webpack configuration for tests"
    },
    {
        "msg": "test: arrange code in webpack config better",
        "diff": "diff --git a/tests/webpack.config.js b/tests/webpack.config.js @@ -4,12 +4,12 @@ module.exports = candelaWebpack({\nentry: {\ntests: './tests.js'\n},\n- devtool: 'inline-source-map',\n- node: {\n- fs: 'empty'\n- },\noutput: {\npath: 'build',\nfilename: 'tests.js'\n+ },\n+ devtool: 'inline-source-map',\n+ node: {\n+ fs: 'empty'\n}\n});\n",
        "date": "05.06.2017 17:26:53",
        "repo": "kitware/candela",
        "type": "test",
        "chatgpt_zeroshot": "Fix webpack configuration for tests entry and node settings"
    },
    {
        "msg": "test: update description for test package",
        "diff": "diff --git a/tests/package.json b/tests/package.json {\n\"name\": \"tests\",\n\"version\": \"0.0.0\",\n- \"description\": \"Candela unit tests\",\n+ \"description\": \"Candela unit/coverage/image tests\",\n\"scripts\": {\n\"build:unit\": \"webpack\",\n\"build:coverage\": \"webpack --config webpack-coverage.config.js\",\n",
        "date": "06.06.2017 17:41:25",
        "repo": "kitware/candela",
        "type": "test",
        "chatgpt_zeroshot": "Update description in package.json to include coverage and image tests"
    },
    {
        "msg": "test: make image tests work with plugin bundles",
        "diff": "diff --git a/package.json b/package.json \"test:unit:raw\": \"cd tests; karma start\",\n\"test:unit:debug\": \"cd tests; karma start --log-level debug\",\n\"test:image\": \"npm run test:image:raw | tap-spec\",\n- \"test:image:raw\": \"result=true; npm run test:image:server:down; npm run test:image:server:up && find packages/ -name '*.image.js' | xargs -n 1 babel-node || result=false; npm run test:image:server:down; ${result}\",\n+ \"test:image:raw\": \"result=true; npm run test:image:server:down; npm run test:image:server:up && find plugins/ -name '*.image.js' | xargs -n 1 babel-node || result=false; npm run test:image:server:down; ${result}\",\n\"test:image:server:up\": \"sh script/test-server-up.sh >.server.log\",\n\"test:image:server:down\": \"sh script/test-server-down.sh\",\n\"build:test:coverage\": \"cd tests; CANDELA_COVERAGE=1 webpack\",\n",
        "date": "12.06.2017 16:12:58",
        "repo": "kitware/candela",
        "type": "test",
        "chatgpt_zeroshot": "Update test:image:raw script to search for image files in plugins directory instead of packages directory."
    },
    {
        "msg": "test: fix test corruption from use of jquery in lineup test",
        "diff": "diff --git a/plugins/lineup/LineUp/test/lineup.js b/plugins/lineup/LineUp/test/lineup.js @@ -3,15 +3,15 @@ import test from 'tape-catch';\n// needed to handle Babel's conversion of for `(x of array)`\nimport 'babel-polyfill';\n-import $ from 'jquery';\n-\nimport LineUp from '..';\ntest('LineUp component', t => {\n- $('body').append($('<div/>').attr({id: 'elem'}).css({width: 800, height: 600}));\n+ const div = document.createElement('div');\n+ div.setAttribute('style', 'width: 800px; height: 600px');\n+\nt.ok(LineUp, 'LineUp exists');\nt.ok(LineUp.options, 'LineUp options exists');\n- let lu = new LineUp(document.getElementById('elem'), {\n+ let lu = new LineUp(div, {\ndata: [\n{a: 1, b: 2, c: 'a', d: true},\n{a: 3, b: 4, c: 'b', d: false},\n",
        "date": "13.06.2017 12:07:24",
        "repo": "kitware/candela",
        "type": "test",
        "chatgpt_zeroshot": "Refactor LineUp test to use vanilla JavaScript instead of jQuery"
    },
    {
        "msg": "test: fix up \"default\" vs. \"non-default\" test conditions",
        "diff": "diff --git a/util/test/exports.js b/util/test/exports.js @@ -89,10 +89,10 @@ function structureTests (t, cd, opts) {\nlet count = 9;\nif (opts.default) {\n- t.equal(cd.default, undefined, 'candela.default does not exist');\n- } else {\nt.ok(cd.default, 'candela.default exists');\ncount += 1;\n+ } else {\n+ t.equal(cd.default, undefined, 'candela.default does not exist');\n}\nt.equal(Object.keys(cd).length, count, 'candela contains no other members');\n@@ -101,7 +101,7 @@ function structureTests (t, cd, opts) {\ntest('Structure and content of default exported Candela library object', t => {\nstructureTests(t, candela, {\nempty: true,\n- default: true\n+ default: false\n});\nt.end();\n});\n@@ -109,7 +109,7 @@ test('Structure and content of default exported Candela library object', t => {\ntest('Structure and content of non-default exported Candela library object', t => {\nstructureTests(t, candelaStar, {\nempty: true,\n- default: false\n+ default: true\n});\nt.end();\n});\n",
        "date": "30.06.2017 15:36:38",
        "repo": "kitware/candela",
        "type": "test",
        "chatgpt_zeroshot": "Fix default export assertion in structureTests function"
    },
    {
        "msg": "test(BarChart): Update DOM checks for vegalite",
        "diff": "diff --git a/plugins/vega/BarChart/test/barchart.js b/plugins/vega/BarChart/test/barchart.js @@ -4,7 +4,7 @@ import test from 'tape-catch';\nimport BarChart from '..';\ntest('BarChart component', t => {\n- t.plan(7);\n+ t.plan(5);\nconst data = [\n{id: 0, a: 1, b: 3, c: 3},\n@@ -29,14 +29,10 @@ test('BarChart component', t => {\n});\nvis.render();\n- t.equal(el.childNodes.length, 1, 'VegaCharts should have a single element under the top-level div');\n+ t.equal(el.childNodes.length, 2, 'VegaViews should have two elements under the top-level div');\n- let container = el.childNodes[0];\n- t.equal(container.nodeName, 'DIV', 'The single element should be a div');\n- t.equal(container.childNodes.length, 1, 'The div should have a single child element.');\n-\n- let svg = container.childNodes[0];\n- t.equal(svg.nodeName, 'svg', 'The single child should be an svg.');\n+ let svg = el.childNodes[0];\n+ t.equal(svg.nodeName, 'SVG', 'The first element should be an SVG');\nlet bars = select(svg)\n.select('g.mark-rect')\n@@ -45,10 +41,9 @@ test('BarChart component', t => {\nvis.update({\ndata: data.concat([{id: 8, a: 10, b: 6, c: 3}])\n- }).then(() => vis.render())\n+ })\n+ .then(() => vis.render())\n.then(() => {\n- vis.render();\n-\nbars = select(svg)\n.select('g.mark-rect')\n.selectAll('rect');\n",
        "date": "14.07.2017 12:19:56",
        "repo": "kitware/candela",
        "type": "test",
        "chatgpt_zeroshot": "Update test plan and element count in BarChart component test. Fix SVG element check in test."
    },
    {
        "msg": "test: fail image tests when an individual test fails",
        "diff": "diff --git a/packages/examples/package.json b/packages/examples/package.json \"clean\": \"rm -rf dist build\",\n\"serve\": \"http-server dist -p 28000\",\n\"lint\": \"semistandard | snazzy\",\n- \"test\": \"npm run serve >.server.log& pid=$! && babel-node test/index.js | tap-spec; kill ${pid}\"\n+ \"test\": \"result=true; npm run serve >.server.log& pid=$! && babel-node test/index.js | tap-spec; if [ ${PIPESTATUS[0]} == 1 ]; then result=false; fi; kill ${pid}; ${result}\"\n},\n\"private\": true,\n\"babel\": {\n",
        "date": "03.05.2018 18:23:00",
        "repo": "kitware/candela",
        "type": "test",
        "chatgpt_zeroshot": "Refactor test script in package.json to handle test result detection"
    },
    {
        "msg": "test: fix treeheatmap test by subbing in css colornames for hex codes",
        "diff": "diff --git a/packages/treeheatmap/src/TreeHeatmap/test/treeheatmap.spec.js b/packages/treeheatmap/src/TreeHeatmap/test/treeheatmap.spec.js @@ -68,13 +68,13 @@ test('TreeHeatmap component', t => {\n</g>\n<clipPath id=\"clip-vertical\"><rect x=\"0\" y=\"100\" width=\"100\" height=\"200\"></rect></clipPath>\n<g class=\"vertical\" clip-path=\"url(#clip-vertical)\">\n- <path class=\"tree-links\" d=\"M100,150L0,150L0,250L100,250\" style=\"fill-opacity: 0; stroke: #000000;\"></path>\n- <rect class=\"tree-select\" x=\"0\" y=\"100\" width=\"100\" height=\"200\" style=\"fill: #4682b4; fill-opacity: 0;\"></rect>\n+ <path class=\"tree-links\" d=\"M100,150L0,150L0,250L100,250\" style=\"fill-opacity: 0; stroke: black;\"></path>\n+ <rect class=\"tree-select\" x=\"0\" y=\"100\" width=\"100\" height=\"200\" style=\"fill: steelblue; fill-opacity: 0;\"></rect>\n</g>\n<clipPath id=\"clip-horizontal\"><rect x=\"100\" y=\"0\" width=\"200\" height=\"100\"></rect></clipPath>\n<g class=\"horizontal\" clip-path=\"url(#clip-horizontal)\">\n- <path class=\"tree-links\" d=\"M150,100L150,0L250,0L250,100\" style=\"fill-opacity: 0; stroke: #000000;\"></path>\n- <rect class=\"tree-select\" y=\"0\" x=\"100\" height=\"100\" width=\"200\" style=\"fill: #4682b4; fill-opacity: 0;\"></rect>\n+ <path class=\"tree-links\" d=\"M150,100L150,0L250,0L250,100\" style=\"fill-opacity: 0; stroke: black;\"></path>\n+ <rect class=\"tree-select\" y=\"0\" x=\"100\" height=\"100\" width=\"200\" style=\"fill: steelblue; fill-opacity: 0;\"></rect>\n</g>\n</svg>`.replace(/\\n/g, '').replace(/ {2}/g, '');\n",
        "date": "04.05.2018 11:39:16",
        "repo": "kitware/candela",
        "type": "test",
        "chatgpt_zeroshot": "Update TreeHeatmap styling in test file"
    },
    {
        "msg": "test: fix crashing coverage test for lineup",
        "diff": "diff --git a/packages/lineup/webpack.config.test.babel.js b/packages/lineup/webpack.config.test.babel.js @@ -33,6 +33,22 @@ if (process.env.COVERAGE) {\n],\nexclude: /\\.spec\\.js$/\n},\n+ {\n+ test: /\\.js$/,\n+ exclude: /node_modules/,\n+ use: {\n+ loader: 'babel-loader',\n+ options: {\n+ presets: [\n+ ['@babel/env', {\n+ targets: {\n+ node: 'current'\n+ }\n+ }]\n+ ]\n+ }\n+ }\n+ },\n{\ntest: /\\.styl$/,\nuse: ['style-loader', 'css-loader', 'stylus-loader']\n",
        "date": "04.05.2018 13:00:26",
        "repo": "kitware/candela",
        "type": "test",
        "chatgpt_zeroshot": "Add babel-loader for JavaScript files in webpack test configuration"
    },
    {
        "msg": "test(lineup): add a structure unit test for LineUp",
        "diff": "diff --git a/packages/lineup/src/LineUp/test/lineup.spec.js b/packages/lineup/src/LineUp/test/lineup.spec.js +import { select } from 'd3-selection';\nimport test from 'tape-catch';\n// needed to handle Babel's conversion of for `(x of array)`\n@@ -8,6 +9,7 @@ import LineUp from '..';\ntest('LineUp component', t => {\nconst div = document.createElement('div');\ndiv.setAttribute('style', 'width: 800px; height: 600px');\n+ document.body.appendChild(div);\nt.ok(LineUp, 'LineUp exists');\nt.ok(LineUp.options, 'LineUp options exists');\n@@ -18,9 +20,9 @@ test('LineUp component', t => {\n{a: -1, b: 0, c: 'c', d: false}\n],\nfields: ['d', 'a', 'c'],\n- stacked: false,\n+ stacked: true,\nhistograms: true,\n- animation: true\n+ animation: false\n});\nt.ok(lu.lineUpConfig, 'LineUp configured');\nt.equal(lu.lineUpConfig.renderingOptions.histograms, true, 'LineUp options set');\n@@ -29,5 +31,12 @@ test('LineUp component', t => {\n// still need to add tests for dragging columns and recording their weights,\n// tooltip updates, select callback, and date-based columns\n+ window.setTimeout(() => {\n+ const rows = select(lu.el)\n+ .selectAll('g.row')\n+ .nodes();\n+ t.assert(rows.length > 0, 'Plot has rendered some data rows');\n+\nt.end();\n+ }, 200);\n});\n",
        "date": "30.05.2018 10:45:55",
        "repo": "kitware/candela",
        "type": "test",
        "chatgpt_zeroshot": "Update LineUp component configuration and add test for rendering data rows."
    },
    {
        "msg": "test(vega): update test strategy for histogram",
        "diff": "diff --git a/packages/vega/src/component/Histogram/test/histogram.spec.js b/packages/vega/src/component/Histogram/test/histogram.spec.js @@ -11,6 +11,13 @@ test('Histogram component', t => {\nconst height = 400;\nconst maxBins = 10;\n+ // Count how many \"classes\" there are -- each one will be represented by a\n+ // rect mark.\n+ let classes = new Set();\n+ data.forEach(d => {\n+ classes.add(d.a);\n+ });\n+\nlet el = document.createElement('div');\nlet vis = new Histogram(el, {\ndata,\n@@ -26,7 +33,7 @@ test('Histogram component', t => {\n.select('.mark-rect.role-mark.marks')\n.selectAll('path')\n.nodes();\n- t.equal(bars.length, maxBins, 'Plot has correct number of bin marks');\n+ t.equal(bars.length, classes.size, 'Plot has correct number of bin marks');\nt.end();\n});\n",
        "date": "04.06.2018 12:27:21",
        "repo": "kitware/candela",
        "type": "test",
        "chatgpt_zeroshot": "Refactor Histogram component to dynamically calculate number of bin marks based on unique classes."
    },
    {
        "msg": "test: set unit test concurrency to 1",
        "diff": "diff --git a/package.json b/package.json \"examples\": \"cd packages/examples && npm run serve\",\n\"build:test\": \"lerna run build:test\",\n\"build:coverage\": \"COVERAGE=1 npm run build:test\",\n- \"test:unit\": \"lerna run test --ignore @candela/examples\",\n+ \"test:unit\": \"lerna run test --ignore @candela/examples --concurrency 1\",\n\"test:image\": \"cd packages/examples && npm test\",\n\"test:coverage\": \"COVERAGE=1 npm run test:unit\",\n\"coverage:report\": \"http-server build/coverage/html -p ${PORT-3000}\",\n",
        "date": "20.06.2018 16:43:31",
        "repo": "kitware/candela",
        "type": "test",
        "chatgpt_zeroshot": "Add concurrency option to unit tests in lerna run test command"
    },
    {
        "msg": "test: Preact CLI increase build timeout",
        "diff": "diff --git a/tests/build.test.js b/tests/build.test.js @@ -5,7 +5,7 @@ import lsr from './lib/lsr';\nimport { setup, clean } from './lib/output';\nimport { normalize, expectedOutputs } from './build.snapshot';\n-const options = { timeout: 30 * 1000 };\n+const options = { timeout: 45 * 1000 };\ntest('preact build - before', async () => {\nawait setup();\n",
        "date": "12.06.2017 17:33:35",
        "repo": "preactjs/preact-cli",
        "type": "test",
        "chatgpt_zeroshot": "Increase timeout for preact build test to 45 seconds."
    },
    {
        "msg": "test: Don't fail when page can't be loaded",
        "diff": "diff --git a/tests/lib/chrome.js b/tests/lib/chrome.js @@ -38,7 +38,9 @@ export const loadPage = async (chrome, url, retryCount = 10, retryInterval = 500\nconst openPage = async (chrome, url, retryCount, retryInterval) => {\nif (retryCount < 0) {\n- throw new Error('Page could not be loaded!');\n+ //eslint-disable-next-line no-console\n+ console.error('Page could not be loaded - timeout reached. Continuing without throwing error...');\n+ return;\n}\nlet result;\n@@ -87,6 +89,6 @@ const navigateToPage = (chrome, url, timeout) => new Promise(async (resolve, rej\nreject();\n}, timeout);\n- await chrome.Page.navigate({ url });\nchrome.on('Network.responseReceived', listener);\n+ await chrome.Page.navigate({ url });\n});\n",
        "date": "13.06.2017 09:53:10",
        "repo": "preactjs/preact-cli",
        "type": "test",
        "chatgpt_zeroshot": "Refactor error handling in loadPage function"
    },
    {
        "msg": "test: add tests specifically for isLuhnValid",
        "diff": "diff --git a/test/validators.js b/test/validators.js @@ -4931,6 +4931,34 @@ describe('Validators', () => {\n});\n});\n+ it('should validate luhn numbers', () => {\n+ test({\n+ validator: 'isLuhnValid',\n+ valid: [\n+ '0',\n+ '5421',\n+ '01234567897',\n+ '0123456789012345678906',\n+ '0123456789012345678901234567891',\n+ '123456789012345678906',\n+ '375556917985515',\n+ '36050234196908',\n+ '4716461583322103',\n+ '4716-2210-5188-5662',\n+ '4929 7226 5379 7141',\n+ ],\n+ invalid: [\n+ '',\n+ '1',\n+ '5422',\n+ 'foo',\n+ 'prefix6234917882863855',\n+ '623491788middle2863855',\n+ '6234917882863855suffix',\n+ ],\n+ });\n+ });\n+\nit('should validate credit cards', () => {\ntest({\nvalidator: 'isCreditCard',\n",
        "date": "23.05.2022 16:12:38",
        "repo": "validatorjs/validator.js",
        "type": "test",
        "chatgpt_zeroshot": "Add validation for Luhn numbers in validators.js"
    },
    {
        "msg": "test: newer sinon requires the same object when using calledWithExactly()",
        "diff": "diff --git a/test/notifier.test.js b/test/notifier.test.js @@ -172,8 +172,9 @@ describe('log', function() {\nvar notifier = new Notifier(queue, options);\nvar initialItem = {a: 123, b: 'a string'};\n+ var error = new Error('fizz buzz');\nnotifier.addTransform(function(i, o, cb) {\n- cb(new Error('fizz buzz'), null);\n+ cb(error, null);\n}).addTransform(function(i, o, cb) {\nexpect(false).to.be.ok(); // assert this is not called\ncb(null, {a: 42, b: i.b});\n@@ -182,7 +183,7 @@ describe('log', function() {\nnotifier.log(initialItem, spy);\nexpect(spy.called).to.be.ok();\n- expect(spy.calledWithExactly(new Error('fizz buzz'), null)).to.be.ok();\n+ expect(spy.calledWithExactly(error, null)).to.be.ok();\nexpect(queue.items.length).to.eql(0);\ndone();\n",
        "date": "22.03.2019 18:14:26",
        "repo": "rollbar/rollbar.js",
        "type": "test",
        "chatgpt_zeroshot": "Refactor error handling in notifier.test.js"
    },
    {
        "msg": "test: set eslint policy for no-use-before-define",
        "diff": "diff --git a/.eslintrc b/.eslintrc \"camelcase\": [2, {\"properties\": \"never\"}],\n\"quotes\": [2, \"single\", \"avoid-escape\"],\n\"no-underscore-dangle\": 0,\n- \"no-useless-escape\": 0\n+ \"no-useless-escape\": 0,\n+ \"no-use-before-define\": [1, { \"functions\": false }]\n}\n}\n",
        "date": "28.03.2019 13:51:12",
        "repo": "rollbar/rollbar.js",
        "type": "test",
        "chatgpt_zeroshot": "Add rule for \"no-use-before-define\" in ESLint configuration"
    },
    {
        "msg": "test: run preprocessors on test subdirs",
        "diff": "diff --git a/karma.conf.js b/karma.conf.js @@ -43,7 +43,7 @@ module.exports = function (config) {\n// run the bundle through the webpack and sourcemap plugins\npreprocessors: {\n- 'test/!(requirejs).test.js': ['webpack', 'sourcemap'],\n+ 'test/**/!(requirejs).test.js': ['webpack', 'sourcemap'],\n'**/*.html': ['html2js']\n},\n",
        "date": "29.03.2019 18:24:45",
        "repo": "rollbar/rollbar.js",
        "type": "test",
        "chatgpt_zeroshot": "Update karma.conf.js to include all subdirectories in test folder for webpack preprocessing."
    },
    {
        "msg": "test: comply with strict mode",
        "diff": "diff --git a/test/examples/universalBrowser.test.js b/test/examples/universalBrowser.test.js @@ -9,7 +9,7 @@ describe('Rollbar loaded by snippet', function() {\ndocument.write(window.__html__['examples/universal-browser/test.html']);\n// Stub the xhr interface.\n- server = sinon.createFakeServer();\n+ window.server = sinon.createFakeServer();\n// Give the snippet time to load and init.\nsetTimeout(function() {\n@@ -18,10 +18,11 @@ describe('Rollbar loaded by snippet', function() {\n});\nafter(function () {\n- server.restore();\n+ window.server.restore();\n});\nit('should send a valid log event', function(done) {\n+ var server = window.server;\nvar rollbar = document.defaultView.Rollbar;\nserver.respondWith('POST', 'api/1/item',\n@@ -35,7 +36,7 @@ describe('Rollbar loaded by snippet', function() {\nvar ret = rollbar.info('test');\nserver.respond();\n- body = JSON.parse(server.requests[0].requestBody);\n+ var body = JSON.parse(server.requests[0].requestBody);\nexpect(body.access_token).to.eql('POST_CLIENT_ITEM_TOKEN');\nexpect(body.data.uuid).to.eql(ret.uuid);\n",
        "date": "29.03.2019 18:25:22",
        "repo": "rollbar/rollbar.js",
        "type": "test",
        "chatgpt_zeroshot": "Refactor server variable to be a global window variable in universalBrowser.test.js"
    },
    {
        "msg": "test: add tests for angular2 example",
        "diff": "diff --git a/test/examples/angular2.test.js b/test/examples/angular2.test.js /* globals it */\n/* globals sinon */\n+// To make changes to the example app, see /examples/angular2/README.md.\n+\ndescribe('Angular2 app', function() {\nthis.timeout(4000);\n@@ -24,10 +26,7 @@ describe('Angular2 app', function() {\nwindow.server.restore();\n});\n- it('should send a valid log event', function(done) {\n- var server = window.server;\n- var angularComponent = window.angularAppComponent;\n-\n+ function stubResponse(server) {\nserver.respondWith('POST', 'api/1/item',\n[\n200,\n@@ -35,6 +34,14 @@ describe('Angular2 app', function() {\n'{\"err\": 0, \"result\":{ \"uuid\": \"d4c7acef55bf4c9ea95e4fe9428a8287\"}}'\n]\n);\n+ }\n+\n+ it('should send a valid log event', function(done) {\n+ var server = window.server;\n+ var angularComponent = window.angularAppComponent;\n+\n+ stubResponse(server);\n+ server.requests.length = 0;\nangularComponent.publicRollbarInfo();\nserver.respond();\n@@ -46,4 +53,44 @@ describe('Angular2 app', function() {\ndone();\n});\n+\n+ it('should minimize Angular change detection events', function(done) {\n+ var server = window.server;\n+ var angularComponent = window.angularAppComponent;\n+ var doCheckCount = angularComponent.doCheckCount;\n+\n+ stubResponse(server);\n+ server.requests.length = 0;\n+\n+ angularComponent.publicRollbarInfo();\n+ server.respond();\n+\n+ // Angular triggers change detection on all events, timers, and XHR responses.\n+ // Rollbar.js exits the Angular Zone.js zone before API requests, preventing\n+ // change detection from being triggered by Rollbar reporting, and improving\n+ // performance for some apps.\n+ //\n+ // See src/browser/transport.js: _makeZoneRequest().\n+ expect(angularComponent.doCheckCount).to.eql(doCheckCount + 1);\n+\n+ done();\n+ });\n+\n+ it('should report uncaught error', function(done) {\n+ var server = window.server;\n+\n+ stubResponse(server)\n+ server.requests.length = 0;\n+\n+ var element = document.getElementById('throw-error');\n+ element.click();\n+ server.respond();\n+\n+ var body = JSON.parse(server.requests[0].requestBody);\n+\n+ expect(body.access_token).to.eql('POST_CLIENT_ITEM_TOKEN');\n+ expect(body.data.body.trace.exception.message).to.eql('angular test error');\n+\n+ done();\n+ });\n});\n",
        "date": "01.04.2019 17:06:42",
        "repo": "rollbar/rollbar.js",
        "type": "test",
        "chatgpt_zeroshot": "Refactor Angular2 test suite and add new test cases"
    },
    {
        "msg": "test: add test for direct call to onerror",
        "diff": "diff --git a/test/browser.rollbar.test.js b/test/browser.rollbar.test.js @@ -595,6 +595,52 @@ describe('log', function() {\ndone();\n})\n});\n+\n+// Test direct call to onerror, as used in verification of browser js install.\n+describe('onerror', function() {\n+ before(function (done) {\n+ window.server = sinon.createFakeServer();\n+ done();\n+ });\n+\n+ after(function () {\n+ window.server.restore();\n+ });\n+\n+ function stubResponse(server) {\n+ server.respondWith('POST', 'api/1/item',\n+ [\n+ 200,\n+ { 'Content-Type': 'application/json' },\n+ '{\"err\": 0, \"result\":{ \"uuid\": \"d4c7acef55bf4c9ea95e4fe9428a8287\"}}'\n+ ]\n+ );\n+ }\n+\n+ it('should send message when calling onerror directly', function(done) {\n+ var server = window.server;\n+ stubResponse(server);\n+ server.requests.length = 0;\n+\n+ var options = {\n+ accessToken: 'POST_CLIENT_ITEM_TOKEN',\n+ captureUncaught: true\n+ };\n+ new Rollbar(options);\n+\n+ window.onerror(\"TestRollbarError: testing window.onerror\", window.location.href);\n+\n+ server.respond();\n+\n+ var body = JSON.parse(server.requests[0].requestBody);\n+\n+ expect(body.access_token).to.eql('POST_CLIENT_ITEM_TOKEN');\n+ expect(body.data.body.trace.exception.message).to.eql('testing window.onerror');\n+\n+ done();\n+ })\n+});\n+\ndescribe('captureEvent', function() {\nit('should handle missing/default type and level', function(done) {\nvar options = {};\n",
        "date": "31.07.2019 13:22:48",
        "repo": "rollbar/rollbar.js",
        "type": "test",
        "chatgpt_zeroshot": "Add test for direct call to onerror in browser.rollbar.test.js"
    },
    {
        "msg": "test: accommodate travis chrome at v62",
        "diff": "diff --git a/test/examples/webpack.test.js b/test/examples/webpack.test.js @@ -65,7 +65,13 @@ describe('webpack app', function() {\nvar body = JSON.parse(server.requests[0].requestBody);\nexpect(body.access_token).to.eql('POST_CLIENT_ITEM_TOKEN');\n- expect(body.data.body.trace.exception.message).to.eql('webpack test error');\n+\n+ // This has become necessary because Travis switched their Chrome stable\n+ // version _down_ from 76 to 62, which handles this test case differently.\n+ var version = parseInt(window.navigator.userAgent.match(new RegExp('^.*HeadlessChrome/([0-9]*).*$'))[1]);\n+ var message = version > 62 ? 'webpack test error' : 'Script error.';\n+\n+ expect(body.data.body.trace.exception.message).to.eql(message);\ndone();\n});\n",
        "date": "12.09.2019 13:46:38",
        "repo": "rollbar/rollbar.js",
        "type": "test",
        "chatgpt_zeroshot": "Update webpack test error message based on Chrome version handling changes"
    },
    {
        "msg": "test: update Angular TypeScript example",
        "diff": "diff --git a/examples/angular2/src/app/rollbar.ts b/examples/angular2/src/app/rollbar.ts @@ -14,7 +14,8 @@ const rollbarConfig:Rollbar.Configuration = {\ninspectAnonymousErrors: true,\nignoreDuplicateErrors: true,\nwrapGlobalEventHandlers: false,\n- scrubRequestBody: true\n+ scrubRequestBody: true,\n+ exitOnUncaughtException: false\n};\nexport const RollbarService = new InjectionToken<Rollbar>('rollbar');\n",
        "date": "03.10.2019 14:33:12",
        "repo": "rollbar/rollbar.js",
        "type": "test",
        "chatgpt_zeroshot": "Add option to not exit on uncaught exceptions in Rollbar configuration"
    },
    {
        "msg": "test: add tests for network telemetry (xhr and fetch)",
        "diff": "diff --git a/test/browser.rollbar.test.js b/test/browser.rollbar.test.js @@ -730,6 +730,133 @@ describe('options.autoInstrument.log', function() {\ndone();\n});\n+ it('should add telemetry events for xhr calls', function(done) {\n+ var server = window.server;\n+ stubResponse(server);\n+ server.requests.length = 0;\n+\n+ server.respondWith('POST', 'xhr-test',\n+ [\n+ 200,\n+ { 'Content-Type': 'application/json' },\n+ JSON.stringify({name: 'foo', password: '123456'})\n+ ]\n+ );\n+\n+ var options = {\n+ accessToken: 'POST_CLIENT_ITEM_TOKEN',\n+ autoInstrument: {\n+ log: false,\n+ network: true,\n+ networkResponseHeaders: true,\n+ networkResponseBody: true,\n+ networkRequestBody: true,\n+ networkRequestHeaders: true\n+ }\n+ };\n+ var rollbar = window.rollbar = new Rollbar(options);\n+\n+ // generate a telemetry event\n+ var xhr = new XMLHttpRequest();\n+ xhr.open('POST', 'https://example.com/xhr-test', true);\n+ xhr.setRequestHeader('Content-type', 'application/json');\n+ xhr.setRequestHeader('Secret', 'abcdef');\n+ xhr.onreadystatechange = function () {\n+ if(xhr.readyState === 4) {\n+ try {\n+ rollbar.log('test'); // generate a payload to inspect\n+\n+ expect(server.requests.length).to.eql(2);\n+ var body = JSON.parse(server.requests[1].requestBody);\n+\n+ // Sinon fake server doesn't generate response body or headers that are visible\n+ // via the XMLHttpRequest properties and methods. So we settle for verifying\n+ // the request only.\n+\n+ // Verify request capture and scrubbing\n+ expect(body.data.body.telemetry[0].body.request).to.eql('{\"name\":\"bar\",\"secret\":\"********\"}');\n+\n+ // Verify request headers capture and case-insensitive scrubbing\n+ expect(body.data.body.telemetry[0].body.request_headers).to.eql({'Content-type': 'application/json', Secret: '********'});\n+\n+ done();\n+ } catch (e) {\n+ done(e);\n+ }\n+ }\n+ };\n+ xhr.send(JSON.stringify({name: 'bar', secret: 'xhr post' }));\n+ server.respond();\n+ });\n+\n+ it('should add telemetry events for fetch calls', function(done) {\n+ var server = window.server;\n+ stubResponse(server);\n+ server.requests.length = 0;\n+\n+ window.fetchStub = sinon.stub(window, 'fetch');\n+ window.fetch.returns(Promise.resolve(new Response(\n+ JSON.stringify({name: 'foo', password: '123456'}),\n+ { status: 200, statusText: 'OK', headers: { 'content-type': 'application/json', 'password': '123456' }}\n+ )));\n+\n+ var options = {\n+ accessToken: 'POST_CLIENT_ITEM_TOKEN',\n+ autoInstrument: {\n+ log: false,\n+ network: true,\n+ networkResponseHeaders: true,\n+ networkResponseBody: true,\n+ networkRequestBody: true,\n+ networkRequestHeaders: true\n+ }\n+ };\n+ var rollbar = window.rollbar = new Rollbar(options);\n+\n+ var fetchHeaders = new Headers();\n+ fetchHeaders.append('Content-Type', 'application/json');\n+ fetchHeaders.append('Secret', '123456');\n+\n+ const fetchInit = {\n+ method: 'POST',\n+ headers: fetchHeaders,\n+ body: JSON.stringify({name: 'bar', secret: 'xhr post'})\n+ };\n+ var fetchRequest = new Request('https://example.com/xhr-test');\n+ window,fetch(fetchRequest, fetchInit)\n+ .then(function(_response) {\n+ try {\n+ rollbar.log('test'); // generate a payload to inspect\n+ server.respond();\n+\n+ expect(server.requests.length).to.eql(1);\n+ var body = JSON.parse(server.requests[0].requestBody);\n+\n+ // Verify request capture and scrubbing\n+ expect(body.data.body.telemetry[0].body.request).to.eql('{\"name\":\"bar\",\"secret\":\"********\"}');\n+\n+ // Verify request headers capture and case-insensitive scrubbing\n+ expect(body.data.body.telemetry[0].body.request_headers).to.eql({'content-type': 'application/json', secret: '********'});\n+\n+ // When using the Sinon test stub, the response body is populated in Headless Chrome 73,\n+ // but not in 77. When using the Fetch API normally, it is populated in all tested Chrome versions.\n+ // Disable here due to the Sinon limitation.\n+ //\n+ // Verify response capture and scrubbing\n+ // expect(body.data.body.telemetry[0].body.response.body).to.eql('{\"name\":\"foo\",\"password\":\"********\"}');\n+\n+ // Verify response headers capture and case-insensitive scrubbing\n+ expect(body.data.body.telemetry[0].body.response.headers).to.eql({'content-type': 'application/json', password: '********'});\n+\n+ rollbar.configure({ autoInstrument: false });\n+ window.fetch.restore();\n+ done();\n+ } catch (e) {\n+ done(e);\n+ }\n+ })\n+ });\n+\nit('should add a diagnostic message when wrapConsole fails', function(done) {\nvar server = window.server;\nstubResponse(server);\n",
        "date": "14.10.2019 09:08:16",
        "repo": "rollbar/rollbar.js",
        "type": "test",
        "chatgpt_zeroshot": "Add telemetry events for xhr and fetch calls in autoInstrument network option"
    },
    {
        "msg": "test: test ignoredMessages with regex including escaped literal",
        "diff": "diff --git a/test/predicates.test.js b/test/predicates.test.js @@ -377,6 +377,19 @@ describe('messageIsIgnored', function() {\n};\nexpect(p.messageIsIgnored(logger)(item, settings)).to.not.be.ok();\n});\n+ it('false if ignoredMessages regex match', function() {\n+ var item = {\n+ level: 'critical',\n+ body: {\n+ message: {body: '{\"data\":{\"messages\":[{\"message\":\"Unauthorized\"}]}}'}\n+ }\n+ };\n+ var settings = {\n+ reportLevel: 'debug',\n+ ignoredMessages: ['{\"data\":{\"messages\":\\\\[']\n+ };\n+ expect(p.messageIsIgnored(logger)(item, settings)).to.not.be.ok();\n+ });\nit('true if both trace and body message but ignoredMessages only match body', function() {\nvar item = {\nlevel: 'critical',\n",
        "date": "28.02.2020 12:38:10",
        "repo": "rollbar/rollbar.js",
        "type": "test",
        "chatgpt_zeroshot": "Add test case for ignoredMessages regex match in messageIsIgnored function"
    },
    {
        "msg": "test: add a couple more regex tests for ignoredMessages",
        "diff": "diff --git a/test/predicates.test.js b/test/predicates.test.js @@ -378,6 +378,19 @@ describe('messageIsIgnored', function() {\nexpect(p.messageIsIgnored(logger)(item, settings)).to.not.be.ok();\n});\nit('false if ignoredMessages regex match', function() {\n+ var item = {\n+ level: 'critical',\n+ body: {\n+ message: {body: 'This is an ignored message'}\n+ }\n+ };\n+ var settings = {\n+ reportLevel: 'debug',\n+ ignoredMessages: ['^This is an .{7} message$']\n+ };\n+ expect(p.messageIsIgnored(logger)(item, settings)).to.not.be.ok();\n+ });\n+ it('false if ignoredMessages literal match', function() {\nvar item = {\nlevel: 'critical',\nbody: {\n@@ -390,6 +403,19 @@ describe('messageIsIgnored', function() {\n};\nexpect(p.messageIsIgnored(logger)(item, settings)).to.not.be.ok();\n});\n+ it('false if ignoredMessages more literal regex matches', function() {\n+ var item = {\n+ level: 'critical',\n+ body: {\n+ message: {body: 'Match these characters: (*+?)'}\n+ }\n+ };\n+ var settings = {\n+ reportLevel: 'debug',\n+ ignoredMessages: ['\\\\(\\\\*\\\\+\\\\?\\\\)']\n+ };\n+ expect(p.messageIsIgnored(logger)(item, settings)).to.not.be.ok();\n+ });\nit('true if both trace and body message but ignoredMessages only match body', function() {\nvar item = {\nlevel: 'critical',\n",
        "date": "28.02.2020 13:28:32",
        "repo": "rollbar/rollbar.js",
        "type": "test",
        "chatgpt_zeroshot": "Add tests for ignoredMessages regex and literal matches in predicates.test.js"
    },
    {
        "msg": "test: update error message for travis chrome",
        "diff": "diff --git a/test/examples/webpack.test.js b/test/examples/webpack.test.js @@ -68,8 +68,9 @@ describe('webpack app', function() {\n// This has become necessary because Travis switched their Chrome stable\n// version _down_ from 76 to 62, which handles this test case differently.\n+ // 2020-05-06: Travis Chrome 62 is now returning the original message.\nvar version = parseInt(window.navigator.userAgent.match(new RegExp('^.*HeadlessChrome/([0-9]*).*$'))[1]);\n- var message = version > 62 ? 'webpack test error' : 'Script error.';\n+ var message = version >= 62 ? 'webpack test error' : 'Script error.';\nexpect(body.data.body.trace.exception.message).to.eql(message);\n",
        "date": "06.05.2020 17:14:16",
        "repo": "rollbar/rollbar.js",
        "type": "test",
        "chatgpt_zeroshot": "Fix webpack test error message for Travis Chrome 62"
    },
    {
        "msg": "test(config): use generic config key name\nReplaces usage of the unsupported `autosave` configuration key in the\n`cordova config` tests with a generic key `foo`.",
        "diff": "diff --git a/spec/cli.spec.js b/spec/cli.spec.js @@ -428,26 +428,26 @@ describe('cordova cli', () => {\nconfHolder = undefined;\n});\n- it('Test#042 : config set autosave is called with true', () => {\n- return cli(['node', 'cordova', 'config', 'set', 'autosave', 'true', '--silent']).then(() => {\n- expect(cordovaConfig.autosave).toBe('true');\n+ it('Test#042 : config set is called with true', () => {\n+ return cli(['node', 'cordova', 'config', 'set', 'foo', 'true', '--silent']).then(() => {\n+ expect(cordovaConfig.foo).toBe('true');\n});\n});\n- it('Test#043 : config delete autosave is called', () => {\n- return cli(['node', 'cordova', 'config', 'delete', 'autosave']).then(() => {\n- expect(cordovaConfig.autosave).toBeUndefined();\n+ it('Test#043 : config delete is called', () => {\n+ return cli(['node', 'cordova', 'config', 'delete', 'foo']).then(() => {\n+ expect(cordovaConfig.foo).toBeUndefined();\n});\n});\nit('Test#044 : config set is called even without value, defaults to true', () => {\n- return cli(['node', 'cordova', 'config', 'set', 'autosave']).then(() => {\n- expect(cordovaConfig.autosave).toBe(true);\n+ return cli(['node', 'cordova', 'config', 'set', 'foo']).then(() => {\n+ expect(cordovaConfig.foo).toBe(true);\n});\n});\nit('Test #045 : config get is called', () => {\n- return cli(['node', 'cordova', 'config', 'get', 'autosave']).then(() => {\n+ return cli(['node', 'cordova', 'config', 'get', 'foo']).then(() => {\nexpect(confHolder).toBe(true);\n});\n});\n",
        "date": "11.11.2019 12:49:24",
        "repo": "apache/cordova-cli",
        "type": "test",
        "chatgpt_zeroshot": "Refactor config set and delete methods to use generic key instead of specific key names"
    },
    {
        "msg": "test: fix node.js version check",
        "diff": "diff --git a/spec/cli.spec.js b/spec/cli.spec.js @@ -493,8 +493,8 @@ describe('cordova cli', () => {\ncli.__set__('NODE_VERSION_REQUIREMENT', '>=8');\nreturn cli(['node', 'cordova']).then(() => {\n- const errorMsg = logger.warn.calls.argsFor(1).toString();\n- expect(errorMsg).toMatch(/v6.1.0 is no longer supported./);\n+ const errorMsg = logger.warn.calls.allArgs().toString();\n+ expect(errorMsg).toMatch(/Node.js v6.1.0 is no longer supported./);\n});\n});\n@@ -504,8 +504,8 @@ describe('cordova cli', () => {\ncli.__set__('NODE_VERSION_REQUIREMENT', '>=8');\nreturn cli(['node', 'cordova']).then(() => {\n- const errorMsg = logger.warn.calls.argsFor(1).toString();\n- expect(errorMsg).toBeFalsy();\n+ const errorMsg = logger.warn.calls.allArgs().toString();\n+ expect(errorMsg).not.toMatch(/Node.js v6.1.0 is no longer supported./);\n});\n});\n@@ -515,8 +515,8 @@ describe('cordova cli', () => {\ncli.__set__('NODE_VERSION_REQUIREMENT', '>=8');\nreturn cli(['node', 'cordova']).then(() => {\n- const errorMsg = logger.warn.calls.argsFor(1).toString();\n- expect(errorMsg).toMatch(/v8.0.0 has been deprecated./);\n+ const errorMsg = logger.warn.calls.allArgs().toString();\n+ expect(errorMsg).toMatch(/Node.js v8.0.0 has been deprecated./);\n});\n});\n@@ -526,8 +526,8 @@ describe('cordova cli', () => {\ncli.__set__('NODE_VERSION_REQUIREMENT', '>=8');\nreturn cli(['node', 'cordova']).then(() => {\n- const errorMsg = logger.warn.calls.argsFor(1).toString();\n- expect(errorMsg).toBeFalsy();\n+ const errorMsg = logger.warn.calls.allArgs().toString();\n+ expect(errorMsg).not.toMatch(/Node.js v8.0.0 has been deprecated./);\n});\n});\n});\n",
        "date": "30.07.2020 12:59:56",
        "repo": "apache/cordova-cli",
        "type": "test",
        "chatgpt_zeroshot": "Update error messages in cli.spec.js to include Node.js version information."
    },
    {
        "msg": "test: fix broken date-picker default-value test",
        "diff": "diff --git a/test/unit/specs/date-picker.spec.js b/test/unit/specs/date-picker.spec.js @@ -319,23 +319,11 @@ describe('DatePicker', () => {\n});\nit('default value', done => {\n- const toDateStr = date => {\n- let d = new Date(date);\n- return `${d.getFullYear()}-${d.getMonth()}-${d.getDate()}`;\n- };\n- let today = new Date();\n- let nextMonth = new Date(today);\n- nextMonth.setDate(1);\n- if (nextMonth.getMonth() === 12) {\n- nextMonth.setFullYear(today.getFullYear + 1);\n- nextMonth.setMonth(1);\n- } else {\n- nextMonth.setMonth(today.getMonth() + 1);\n- }\n- let nextMonthStr = toDateStr(nextMonth);\n+ let defaultValue = '2000-01-01';\n+ let expectValue = new Date(2000, 0, 1);\nvm = createVue({\n- template: `<el-date-picker v-model=\"value\" ref=\"compo\" default-value=\"${nextMonthStr}\" />`,\n+ template: `<el-date-picker v-model=\"value\" ref=\"compo\" default-value=\"${defaultValue}\" />`,\ndata() {\nreturn {\nvalue: ''\n@@ -350,10 +338,10 @@ describe('DatePicker', () => {\nconst $el = vm.$refs.compo.picker.$el;\n$el.querySelector('td.current').click();\nsetTimeout(_ => {\n- expect(vm.value).to.equal(nextMonthStr);\n- });\n+ expect(+vm.value).to.equal(+expectValue);\ndone();\n- });\n+ }, 10);\n+ }, 10);\n});\ndescribe('keydown', () => {\n",
        "date": "18.09.2017 04:17:21",
        "repo": "hug-sun/element3",
        "type": "test",
        "chatgpt_zeroshot": "Refactor default value logic in date-picker.spec.js"
    },
    {
        "msg": "test: fix date-picker",
        "diff": "diff --git a/test/unit/specs/date-picker.spec.js b/test/unit/specs/date-picker.spec.js @@ -376,17 +376,17 @@ describe('DatePicker', () => {\nref=\"compo\"\nv-model=\"value\"\ntype=\"date\"\n- @change=\"handleChange\"\nvalue-format=\"dd-MM-yyyy\" />`,\ndata() {\nreturn {\n- value: '',\n- handleChange: null\n+ value: ''\n};\n}\n}, true);\n+\nconst spy = sinon.spy();\n- vm.handleChange = spy;\n+ vm.$refs.compo.$on('change', spy);\n+\nvm.$refs.compo.$el.querySelector('input').focus();\nsetTimeout(_ => {\nvm.$refs.compo.picker.$el.querySelector('.el-date-table td.available').click();\n",
        "date": "12.10.2017 00:09:57",
        "repo": "hug-sun/element3",
        "type": "test",
        "chatgpt_zeroshot": "Refactor date-picker component event handling"
    },
    {
        "msg": "test: add change event test for input-number",
        "diff": "diff --git a/test/unit/specs/input-number.spec.js b/test/unit/specs/input-number.spec.js import { createVue, triggerEvent, triggerClick, destroyVM } from '../util';\n+const DELAY = 1;\n+\ndescribe('InputNumber', () => {\nlet vm;\nafterEach(() => {\n@@ -263,30 +265,51 @@ describe('InputNumber', () => {\n});\n});\n});\n- it('event:change', done => {\n+ describe('event:change', () => {\n+ let spy;\n+\n+ beforeEach(() => {\nvm = createVue({\ntemplate: `\n- <el-input-number v-model=\"value\" ref=\"input\">\n+ <el-input-number v-model=\"value\" ref=\"compo\" :min='2' :max='3' :step='1'>\n</el-input-number>\n`,\ndata() {\nreturn {\n- value: 1.5\n+ value: 2\n};\n}\n}, true);\n+ spy = sinon.spy();\n+ vm.$refs.compo.$on('change', spy);\n+ });\n- let btnIncrease = vm.$el.querySelector('.el-input-number__increase');\n- const spy = sinon.spy();\n-\n- vm.$refs.input.$on('change', spy);\n+ it('emit on input', done => {\n+ vm.$refs.compo.handleInput('3');\n+ setTimeout(_ => {\n+ expect(spy.calledOnce).to.be.true;\n+ expect(spy.args[0][0]).to.equal(3);\n+ done();\n+ }, DELAY);\n+ });\n+ it('emit on button', done => {\n+ const btnIncrease = vm.$el.querySelector('.el-input-number__increase');\ntriggerEvent(btnIncrease, 'mousedown');\ntriggerClick(document, 'mouseup');\n+ setTimeout(_ => {\n+ expect(spy.calledOnce).to.be.true;\n+ expect(spy.args[0][0]).to.equal(3);\n+ done();\n+ }, DELAY);\n+ });\n- vm.$nextTick(_ => {\n- expect(spy.withArgs(2.5, 1.5).calledOnce).to.be.true;\n+ it('does not emit on programatic change', done => {\n+ vm.value = 3;\n+ setTimeout(_ => {\n+ expect(spy.notCalled).to.be.true;\ndone();\n+ }, DELAY);\n});\n});\nit('event:focus & blur', done => {\n",
        "date": "26.10.2017 02:23:55",
        "repo": "hug-sun/element3",
        "type": "test",
        "chatgpt_zeroshot": "Refactor event handling in InputNumber component"
    },
    {
        "msg": "test: fix unreliable date-picker/week test",
        "diff": "diff --git a/test/unit/specs/date-picker.spec.js b/test/unit/specs/date-picker.spec.js @@ -1401,7 +1401,7 @@ describe('DatePicker', () => {\nconst numberOfHighlightRows = () => pickerEl.querySelectorAll('.el-date-table__row.current').length;\nexpect(numberOfHighlightRows()).to.equal(0);\nsetTimeout(() => {\n- pickerEl.querySelector('td.available').click();\n+ pickerEl.querySelector('.el-date-table__row ~ .el-date-table__row td.available').click();\nsetTimeout(() => {\nexpect(vm.value).to.exist;\ninput.blur();\n",
        "date": "03.05.2018 12:20:46",
        "repo": "hug-sun/element3",
        "type": "test",
        "chatgpt_zeroshot": "Update date-picker.spec.js to click on the correct table cell for date selection"
    },
    {
        "msg": "test: add autocomplete highlight-first-item\nadd unit test for",
        "diff": "diff --git a/test/unit/specs/autocomplete.spec.js b/test/unit/specs/autocomplete.spec.js @@ -570,4 +570,54 @@ describe('Autocomplete', () => {\ndone();\n});\n});\n+ it('can highlight first item', done => {\n+ vm = createVue({\n+ template: `\n+ <el-autocomplete\n+ ref=\"autocomplete\"\n+ v-model=\"state\"\n+ :fetch-suggestions=\"querySearch\"\n+ highlight-first-item\n+ ></el-autocomplete>\n+ `,\n+ data() {\n+ return {\n+ restaurants: [],\n+ state: ''\n+ };\n+ },\n+ methods: {\n+ querySearch(queryString, cb) {\n+ const opts = [\n+ { 'value': '1' },\n+ { 'value': '11' },\n+ { 'value': '2' },\n+ { 'value': '22' }\n+ ];\n+ cb(\n+ queryString\n+ ? opts.filter(opt => opt.value.indexOf(queryString) >= 0)\n+ : opts\n+ );\n+ }\n+ }\n+ }, true);\n+ let elm = vm.$el;\n+ let inputElm = elm.querySelector('input');\n+ inputElm.focus();\n+\n+ const autocomplete = vm.$refs.autocomplete;\n+ const input = autocomplete.$refs.input;\n+ input.$emit('input', '1');\n+\n+ setTimeout(_ => {\n+ const suggestions = vm.$refs.autocomplete.$refs.suggestions.$el;\n+ const items = suggestions.querySelectorAll('.el-autocomplete-suggestion__list li');\n+\n+ expect(items.length).to.equal(2);\n+ expect(items[0].classList.contains('highlighted')).to.be.true;\n+\n+ done();\n+ }, 500);\n+ });\n});\n",
        "date": "14.02.2019 20:30:57",
        "repo": "hug-sun/element3",
        "type": "test",
        "chatgpt_zeroshot": "Add test case for highlighting first item in autocomplete."
    },
    {
        "msg": "test: fix repeatClick path",
        "diff": "diff --git a/test/unit/tests/directives/repeatClick.test.js b/test/unit/tests/directives/repeatClick.test.js import { mount } from '@vue/test-utils'\n-import repeatClick from '../../../../src/directives/new-repeat-click'\n+import repeatClick from '../../../../src/directives/repeatClick'\ndescribe('directives: repeat-click', () => {\ntest('should called repeat click callback when emitted mousedown event ', (done) => {\nconst handleRepeatClick = jest.fn()\n",
        "date": "08.08.2020 20:58:14",
        "repo": "hug-sun/element3",
        "type": "test",
        "chatgpt_zeroshot": "Fix import path for repeatClick directive in repeatClick.test.js"
    },
    {
        "msg": "test: change config for domain",
        "diff": "diff --git a/jest.config.js b/jest.config.js module.exports = {\ntestEnvironment: 'jsdom',\n+ roots: [\n+ '<rootDir>/src',\n+ '<rootDir>/packages',\n+ '<rootDir>/test'\n+ ],\ntransform: {\n'^.+\\\\.vue$': 'vue-jest',\n'^.+\\\\js$': 'babel-jest'\n},\nmoduleFileExtensions: ['vue', 'js', 'json', 'jsx', 'ts', 'tsx', 'node'],\n- testMatch: ['**/tests/**/?(*.)+(test).[jt]s?(x)'],\n+ testMatch: ['**/tests/**/?(*.)+(test).[jt]s?(x)', '**/__tests__/**/*.spec.js'],\nmoduleNameMapper: {\n'^element-ui(.*)$': '<rootDir>$1',\n'^main(.*)$': '<rootDir>/src$1'\n",
        "date": "11.08.2020 17:12:22",
        "repo": "hug-sun/element3",
        "type": "test",
        "chatgpt_zeroshot": "Add additional roots to Jest configuration and update testMatch pattern"
    },
    {
        "msg": "test: add test for off method",
        "diff": "diff --git a/test/unit/tests/use/emitter.test.js b/test/unit/tests/use/emitter.test.js @@ -68,6 +68,83 @@ describe('emitter', () => {\n})\n})\n+ describe('off', () => {\n+ it('off all', () => {\n+ const handleFoo = jest.fn()\n+ const handleBar = jest.fn()\n+\n+ const Foo = {\n+ template: '<div></div>',\n+ setup(props, { emit }) {\n+ const { on, off } = useEmitter()\n+ on('foo', handleFoo)\n+ on('bar', handleBar)\n+\n+ off()\n+ emit('foo')\n+ emit('bar')\n+ }\n+ }\n+\n+ mount(Foo)\n+\n+ expect(handleFoo).toBeCalledTimes(0)\n+ expect(handleBar).toBeCalledTimes(0)\n+ })\n+\n+ it('off special event', () => {\n+ const handleFoo1 = jest.fn()\n+ const handleFoo2 = jest.fn()\n+ const handleBar = jest.fn()\n+\n+ const Foo = {\n+ template: '<div></div>',\n+ setup(props, { emit }) {\n+ const { on, off } = useEmitter()\n+ on('foo', handleFoo1)\n+ on('foo', handleFoo1)\n+ on('bar', handleBar)\n+\n+ off('foo')\n+ emit('foo')\n+ emit('bar')\n+ }\n+ }\n+\n+ mount(Foo)\n+\n+ expect(handleFoo1).toBeCalledTimes(0)\n+ expect(handleFoo2).toBeCalledTimes(0)\n+ expect(handleBar).toBeCalledTimes(1)\n+ })\n+\n+ it('off special handler', () => {\n+ const handleFoo1 = jest.fn()\n+ const handleFoo2 = jest.fn()\n+ const handleBar = jest.fn()\n+\n+ const Foo = {\n+ template: '<div></div>',\n+ setup(props, { emit }) {\n+ const { on, off } = useEmitter()\n+ on('foo', handleFoo1)\n+ on('foo', handleFoo2)\n+ on('bar', handleBar)\n+\n+ off('foo', handleFoo1)\n+ emit('foo')\n+ emit('bar')\n+ }\n+ }\n+\n+ mount(Foo)\n+\n+ expect(handleFoo1).toBeCalledTimes(0)\n+ expect(handleFoo2).toBeCalledTimes(1)\n+ expect(handleBar).toBeCalledTimes(1)\n+ })\n+ })\n+\ndescribe('dispatch', () => {\nit('Parent component can capture event when Child component called dispatch', () => {\nconst Child = {\n",
        "date": "18.08.2020 15:59:23",
        "repo": "hug-sun/element3",
        "type": "test",
        "chatgpt_zeroshot": "Add tests for off method in useEmitter"
    },
    {
        "msg": "test: add image solts",
        "diff": "diff --git a/packages/image/__tests__/Image.spec.js b/packages/image/__tests__/Image.spec.js import Image from '../Image.vue'\n-import { mount as _mount } from '@vue/test-utils'\n+import { mount as $mount } from '@vue/test-utils'\n-const mount = async (Component, options) => {\n- const wrapper = _mount(Component, options)\n+const mount = async (Component, options, onInit) => {\n+ const wrapper = $mount(Component, options)\nwrapper.componentVM.$isServer = false\n+ if (onInit) {\n+ onInit(wrapper)\n+ } else {\nwrapper.componentVM.loading = false\n+ }\nreturn new Promise((resolve) => {\nsetTimeout(() => {\nresolve(wrapper)\n@@ -80,14 +84,39 @@ describe('Image.vue', () => {\n})\ndescribe('Slots', () => {\n- // Slots\n-\nit('placeholder', async () => {\n- // TODO\n+ await mount(\n+ Image,\n+ {\n+ slots: {\n+ placeholder: () => {\n+ return 'loading...'\n+ }\n+ }\n+ },\n+ (wrapper) => {\n+ expect(wrapper.find('.el-image').text()).toBe('loading...')\n+ }\n+ )\n})\nit('error', async () => {\n- // TODO\n+ const wrapper = await mount(\n+ Image,\n+ {\n+ src: 'test.jpg',\n+ slots: {\n+ error: () => {\n+ return 'bad image'\n+ }\n+ }\n+ },\n+ (wrapper) => {\n+ wrapper.componentVM.loading = false\n+ wrapper.componentVM.error = true\n+ }\n+ )\n+ expect(wrapper.find('.el-image').text()).toBe('bad image')\n})\n})\n})\n",
        "date": "01.09.2020 01:23:03",
        "repo": "hug-sun/element3",
        "type": "test",
        "chatgpt_zeroshot": "Refactor mount function in Image.spec.js and add slot tests for placeholder and error slots."
    },
    {
        "msg": "test: Add test file for message",
        "diff": "diff --git a/packages/message/Message.vue b/packages/message/Message.vue @@ -103,6 +103,7 @@ export default {\n? `el-message__icon el-icon-${typeMap[props.type]}`\n: ''\n})\n+\nconst positionStyle = computed(() => ({ top: `${props.verticalOffset}px` }))\nconst close = () => {\n@@ -136,8 +137,10 @@ export default {\n}\nconst handleAfterLeave = (currentElement) => {\n+ if (currentElement && currentElement.parentNode) {\ncurrentElement.parentNode.removeChild(currentElement)\n}\n+ }\nwatch(\n() => state.closed,\n",
        "date": "01.09.2020 06:44:19",
        "repo": "hug-sun/element3",
        "type": "test",
        "chatgpt_zeroshot": "Add conditional check in handleAfterLeave function"
    },
    {
        "msg": "test: add ImageViewer",
        "diff": "diff --git a/packages/image/__tests__/ImageViewer.spec.js b/packages/image/__tests__/ImageViewer.spec.js -import ImageViewer from '../ImageViewer.vue'\nimport { mount } from '@vue/test-utils'\n+import ImageViewer from '../ImageViewer.vue'\n+import { IMAGE_FAIL, IMAGE_SUCCESS } from './image'\ndescribe('ImageViewer.vue', () => {\ndescribe('single', () => {\nit('urlList', () => {\nconst wrapper = mount(ImageViewer, {\nprops: {\n- urlList: ['test.jpg']\n+ urlList: [IMAGE_SUCCESS]\n}\n})\nexpect(wrapper.find('.el-image-viewer__img').attributes('src')).toBe(\n- 'test.jpg'\n+ IMAGE_SUCCESS\n)\n})\n})\n@@ -17,48 +18,47 @@ describe('ImageViewer.vue', () => {\ndescribe('list', () => {\nconst wrapper = mount(ImageViewer, {\nprops: {\n- urlList: ['test.jpg', 'test2.jpg']\n+ urlList: [IMAGE_SUCCESS, IMAGE_FAIL]\n}\n})\n- const { componentVM } = wrapper\nit('init', () => {\nexpect(wrapper.find('.el-image-viewer__img').attributes('src')).toBe(\n- 'test.jpg'\n+ IMAGE_SUCCESS\n)\n- componentVM.next()\n- }, 0.01)\n+ })\n- it('next', () => {\n+ it('next', async () => {\n+ await wrapper.find('.el-image-viewer__next').trigger('click')\nexpect(wrapper.find('.el-image-viewer__img').attributes('src')).toBe(\n- 'test2.jpg'\n+ IMAGE_FAIL\n)\n- componentVM.prev()\n- }, 0.02)\n+ })\n- it('prev', () => {\n+ it('prev', async () => {\n+ await wrapper.find('.el-image-viewer__prev').trigger('click')\nexpect(wrapper.find('.el-image-viewer__img').attributes('src')).toBe(\n- 'test.jpg'\n+ IMAGE_SUCCESS\n)\n- }, 0.03)\n+ })\n})\nit('initialIndex', () => {\nconst wrapper = mount(ImageViewer, {\nprops: {\n- urlList: ['test.jpg', 'test2.jpg'],\n+ urlList: [IMAGE_SUCCESS, IMAGE_FAIL],\ninitialIndex: 1\n}\n})\nexpect(wrapper.find('.el-image-viewer__img').attributes('src')).toBe(\n- 'test2.jpg'\n+ IMAGE_FAIL\n)\n})\nit('zIndex', () => {\nconst wrapper = mount(ImageViewer, {\nprops: {\n- urlList: ['test.jpg'],\n+ urlList: [IMAGE_SUCCESS],\nzIndex: 2020\n}\n})\n@@ -67,27 +67,31 @@ describe('ImageViewer.vue', () => {\n).toContain('z-index: 2020')\n})\n- it('onSwitch', () => {\n+ it('onSwitch', async () => {\n+ let caller = false\nconst wrapper = mount(ImageViewer, {\nprops: {\n- urlList: ['test.jpg', 'test2.jpg'],\n+ urlList: [IMAGE_SUCCESS, IMAGE_FAIL],\nonSwitch(newIndex) {\n- expect(`switch to ${newIndex}`).toBe('switch to 1')\n+ caller = true\n}\n}\n})\n- wrapper.componentVM.next()\n+ await wrapper.componentVM.next()\n+ expect(caller).toBe(true)\n})\n- it('onClose', () => {\n+ it('onClose', async () => {\n+ let caller = false\nconst wrapper = mount(ImageViewer, {\nprops: {\n- urlList: ['test.jpg', 'test2.jpg'],\n+ urlList: [IMAGE_SUCCESS, IMAGE_SUCCESS],\nonClose() {\n- expect('onClose').toBe('onClose')\n+ caller = true\n}\n}\n})\n- wrapper.componentVM.hide()\n+ await wrapper.componentVM.hide()\n+ expect(caller).toBe(true)\n})\n})\n",
        "date": "02.09.2020 01:01:55",
        "repo": "hug-sun/element3",
        "type": "test",
        "chatgpt_zeroshot": "Refactor ImageViewer.spec.js to use constants for image URLs and update tests accordingly"
    },
    {
        "msg": "test: fix Image Test",
        "diff": "diff --git a/packages/image/__tests__/Image.spec.js b/packages/image/__tests__/Image.spec.js -import { mount } from '@vue/test-utils'\n+import { mount as $mount } from '@vue/test-utils'\nimport Image from '../Image.vue'\n-import { IMAGE_FAIL, IMAGE_SUCCESS as src } from './image'\n+import { IMAGE_SUCCESS as src } from './image'\n-Image.$isServer = false\n+const mount = async (Component, _options) => {\n+ const options = _options || {}\n+ options.data =\n+ options.data ||\n+ function () {\n+ return {\n+ loading: false\n+ }\n+ }\n+ const wrapper = await $mount(Component, options)\n+ return wrapper\n+}\ndescribe('Image.vue', () => {\ndescribe('Attributes', () => {\n@@ -12,37 +23,31 @@ describe('Image.vue', () => {\nsrc\n}\n})\n- setTimeout(() => {\nexpect(wrapper.find('.el-image__inner').attributes('src')).toBe(src)\n- }, 100)\n})\nit('fit', async () => {\nconst wrapper = await mount(Image, {\nprops: {\nsrc,\n- fit: 'fill',\n- load() {\n- expect(\n- wrapper.find('.el-image__inner').attributes('style')\n- ).toContain('object-fit: fill;')\n- }\n+ fit: 'fill'\n}\n})\n+ expect(wrapper.find('.el-image__inner').attributes('style')).toContain(\n+ 'object-fit: fill;'\n+ )\n})\nit('alt', async () => {\nconst wrapper = await mount(Image, {\nprops: {\nsrc,\n- alt: 'hello world!',\n- load() {\n- expect(wrapper.find('.el-image__inner').attributes('alt')).toBe(\n- 'hello world!2'\n- )\n- }\n+ alt: 'hello world!'\n}\n})\n+ expect(wrapper.find('.el-image__inner').attributes('alt')).toBe(\n+ 'hello world!'\n+ )\n})\nit('referrer-policy', async () => {\n@@ -67,35 +72,16 @@ describe('Image.vue', () => {\n})\ndescribe('Events', () => {\nit('load', async () => {\n- const wrapper = await mount(Image, {\n- props: {\n- src,\n- load() {\n- expect(wrapper.find('.el-image__inner').attributes('src')).toBe(\n- 'test.jpg'\n- )\n- }\n- }\n- })\n+ // TODO\n})\nit('error', async () => {\n- const wrapper = await mount(Image, {\n- src: IMAGE_FAIL,\n- slots: {\n- error: () => {\n- return 'bad image'\n- }\n- },\n- error() {\n- expect(wrapper.find('.el-image').text()).toBe('bad image')\n- }\n- })\n+ // TODO\n})\n})\ndescribe('Slots', () => {\nit('placeholder', async () => {\n- const wrapper = await mount(Image, {\n+ const wrapper = await $mount(Image, {\nsrc,\nslots: {\nplaceholder: () => {\n@@ -107,17 +93,7 @@ describe('Image.vue', () => {\n})\nit('error', async () => {\n- const wrapper = await mount(Image, {\n- src: IMAGE_FAIL,\n- slots: {\n- error: () => {\n- return 'bad image'\n- }\n- },\n- load() {\n- expect(wrapper.find('.el-image').text()).toBe('bad image')\n- }\n- })\n+ // TODO\n})\n})\n})\n",
        "date": "02.09.2020 02:00:45",
        "repo": "hug-sun/element3",
        "type": "test",
        "chatgpt_zeroshot": "Refactor Image component test file and update mount function"
    },
    {
        "msg": "test: Image add events error",
        "diff": "diff --git a/packages/image/__tests__/Image.spec.js b/packages/image/__tests__/Image.spec.js import { mount as $mount } from '@vue/test-utils'\nimport Image from '../Image.vue'\n-import { IMAGE_SUCCESS as src } from './image'\n+import { IMAGE_FAIL, IMAGE_SUCCESS as src } from './image'\nconst mount = async (Component, _options) => {\nconst options = _options || {}\n@@ -12,7 +12,11 @@ const mount = async (Component, _options) => {\n}\n}\nconst wrapper = await $mount(Component, options)\n- return wrapper\n+ return new Promise((resolve) => {\n+ setTimeout(() => {\n+ resolve(wrapper)\n+ }, 1)\n+ })\n}\ndescribe('Image.vue', () => {\n@@ -63,11 +67,28 @@ describe('Image.vue', () => {\n})\nit('preview-src-list', async () => {\n- // TODO\n+ const wrapper = await mount(Image, {\n+ props: {\n+ src: IMAGE_FAIL,\n+ previewSrcList: [src, IMAGE_FAIL]\n+ }\n+ })\n+\n+ await wrapper.trigger('click')\n+\n+ console.log('TODO previewSrcList')\n})\nit('z-index', async () => {\n- // TODO\n+ const wrapper = await mount(Image, {\n+ props: {\n+ src,\n+ previewSrcList: [src, IMAGE_FAIL],\n+ zIndex: 2020\n+ }\n+ })\n+ await wrapper.find('.el-image__inner').trigger('click')\n+ console.log('TODO zIndex')\n})\n})\ndescribe('Events', () => {\n@@ -93,7 +114,21 @@ describe('Image.vue', () => {\n})\nit('error', async () => {\n- // TODO\n+ const wrapper = await $mount(Image, {\n+ src,\n+ slots: {\n+ error: () => {\n+ return 'error!'\n+ }\n+ },\n+ data() {\n+ return {\n+ loading: false,\n+ error: true\n+ }\n+ }\n+ })\n+ expect(wrapper.find('.el-image').text()).toBe('error!')\n})\n})\n})\n",
        "date": "03.09.2020 00:19:09",
        "repo": "hug-sun/element3",
        "type": "test",
        "chatgpt_zeroshot": "Refactor Image component tests and add error handling for Image.vue"
    },
    {
        "msg": "test: add Image Events error",
        "diff": "diff --git a/packages/image/__tests__/Image.spec.js b/packages/image/__tests__/Image.spec.js @@ -67,28 +67,11 @@ describe('Image.vue', () => {\n})\nit('preview-src-list', async () => {\n- const wrapper = await mount(Image, {\n- props: {\n- src: IMAGE_FAIL,\n- previewSrcList: [src, IMAGE_FAIL]\n- }\n- })\n-\n- await wrapper.trigger('click')\n-\n- console.log('TODO previewSrcList')\n+ // TODO\n})\nit('z-index', async () => {\n- const wrapper = await mount(Image, {\n- props: {\n- src,\n- previewSrcList: [src, IMAGE_FAIL],\n- zIndex: 2020\n- }\n- })\n- await wrapper.find('.el-image__inner').trigger('click')\n- console.log('TODO zIndex')\n+ // TODO\n})\n})\ndescribe('Events', () => {\n@@ -115,7 +98,7 @@ describe('Image.vue', () => {\nit('error', async () => {\nconst wrapper = await $mount(Image, {\n- src,\n+ src: IMAGE_FAIL,\nslots: {\nerror: () => {\nreturn 'error!'\n",
        "date": "03.09.2020 00:21:18",
        "repo": "hug-sun/element3",
        "type": "test",
        "chatgpt_zeroshot": "Refactor Image component tests and events handling"
    },
    {
        "msg": "test: timeline test case",
        "diff": "diff --git a/package.json b/package.json \"uppercamelcase\": \"^1.1.0\",\n\"url-loader\": \"^1.0.1\",\n\"vue\": \"^3.0.0-rc.4\",\n- \"vue-jest\": \"github:vuejs/vue-jest#next\",\n+ \"vue-jest\": \"vuejs/vue-jest#next\",\n\"vue-loader\": \"^16.0.0-beta.4\",\n\"vue-router\": \"^4.0.0-beta.3\",\n\"webpack\": \"^4.14.0\",\n",
        "date": "07.09.2020 14:30:27",
        "repo": "hug-sun/element3",
        "type": "test",
        "chatgpt_zeroshot": "Update vue-jest dependency in package.json"
    },
    {
        "msg": "test: updata dialog and again",
        "diff": "diff --git a/packages/dialog/__tests__/Dialog.spec.js b/packages/dialog/__tests__/Dialog.spec.js @@ -25,11 +25,11 @@ describe('Dialog', () => {\nit('showClose', () => {\nconst wrapperTrue = mount(Dialog, {\nprops: {\n- default: true\n+ showClose: false\n}\n})\n- expect(wrapperTrue.find('.el-dialog__headerbtn').exists()).toBe(true)\n+ expect(wrapperTrue.find('.el-dialog__headerbtn').exists()).toBe(false)\n})\ntest('Dialog render', async () => {\n",
        "date": "08.09.2020 15:56:15",
        "repo": "hug-sun/element3",
        "type": "test",
        "chatgpt_zeroshot": "Fix showClose prop in Dialog component to default to false instead of true"
    },
    {
        "msg": "chore(search-input): Only show public methods",
        "diff": "diff --git a/app/components/search-input.js b/app/components/search-input.js @@ -51,7 +51,8 @@ export default Component.extend({\n'hierarchy.lvl1',\n'hierarchy.lvl2'\n],\n- tagFilters: [`version:${projectVersion}`]\n+ tagFilters: [`version:${projectVersion}`],\n+ facetFilters: ['access:public']\n};\nconst searchObj = {\n",
        "date": "27.01.2018 14:32:10",
        "repo": "ember-learn/ember-api-docs",
        "type": "chore",
        "chatgpt_zeroshot": "Add facetFilters for access control in search input component"
    },
    {
        "msg": "chore: update site to https\n[skip ci]",
        "diff": "diff --git a/web/index.html b/web/index.html font-family: 'Roboto';\nfont-style: normal;\nfont-weight: 100;\n- src: local('Roboto Thin'), local('Roboto-Thin'), url(http://themes.googleusercontent.com/static/fonts/roboto/v9/vzIUHo9z-oJ4WgkpPOtg13YhjbSpvc47ee6xR_80Hnw.woff) format('woff');\n+ src: local('Roboto Thin'), local('Roboto-Thin'), url(https://themes.googleusercontent.com/static/fonts/roboto/v9/vzIUHo9z-oJ4WgkpPOtg13YhjbSpvc47ee6xR_80Hnw.woff) format('woff');\n}\n@font-face {\nfont-family: 'Roboto';\nfont-style: normal;\nfont-weight: 300;\n- src: local('Roboto Light'), local('Roboto-Light'), url(http://themes.googleusercontent.com/static/fonts/roboto/v9/Hgo13k-tfSpn0qi1SFdUfbO3LdcAZYWl9Si6vvxL-qU.woff) format('woff');\n+ src: local('Roboto Light'), local('Roboto-Light'), url(https://themes.googleusercontent.com/static/fonts/roboto/v9/Hgo13k-tfSpn0qi1SFdUfbO3LdcAZYWl9Si6vvxL-qU.woff) format('woff');\n}\n@font-face {\nfont-family: 'Roboto';\nfont-style: normal;\nfont-weight: 500;\n- src: local('Roboto Medium'), local('Roboto-Medium'), url(http://themes.googleusercontent.com/static/fonts/roboto/v9/RxZJdnzeo3R5zSexge8UUbO3LdcAZYWl9Si6vvxL-qU.woff) format('woff');\n+ src: local('Roboto Medium'), local('Roboto-Medium'), url(https://themes.googleusercontent.com/static/fonts/roboto/v9/RxZJdnzeo3R5zSexge8UUbO3LdcAZYWl9Si6vvxL-qU.woff) format('woff');\n}\nbody, html {\n@@ -142,7 +142,7 @@ footer a {\n</head>\n<body>\n<header>\n- <svg version=\"1.1\" id=\"template\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"160\" height=\"180\"\n+ <svg version=\"1.1\" id=\"template\" xmlns=\"https://www.w3.org/2000/svg\" xmlns:xlink=\"https://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"160\" height=\"180\"\nviewBox=\"0 0 160 185\" xml:space=\"preserve\">\n<path d=\"M158.156,60.461l-5.326-3.066\nc8.189-12.08,13.084-30.242,6.947-57.395c0,0-13.82,38.733-41.602,37.449L85.645,18.73c-1.227-0.728-2.602-1.103-3.992-1.159\n@@ -160,7 +160,7 @@ footer a {\n<p>Nodemon is a utility that will monitor for any changes in your source and automatically restart your server. Perfect for development. Install it using <a href=\"https://npmjs.org/package/nodemon\">npm</a>.</p>\n- <p>Just use <code>nodemon</code> instead of <code>node</code> to run your code, and now your process will automatically restart when your code changes. To install, get <a href=\"http://nodejs.org\" target=\"_blank\">node.js</a>, then from your terminal run:</p>\n+ <p>Just use <code>nodemon</code> instead of <code>node</code> to run your code, and now your process will automatically restart when your code changes. To install, get <a href=\"https://nodejs.org\" target=\"_blank\">node.js</a>, then from your terminal run:</p>\n<pre><code>npm install -g nodemon</code></pre>\n@@ -175,10 +175,10 @@ footer a {\n<li>Watch specific directories.</li>\n<li>Works with server applications or one time run utilities and REPLs.</li>\n<li>Requirable in node apps.</li>\n- <li>Open source and available on <a href=\"http://github.com/remy/nodemon/\">github</a>.</li>\n+ <li>Open source and available on <a href=\"https://github.com/remy/nodemon/\">github</a>.</li>\n</ul>\n- <p>Read the full <a href=\"http://github.com/remy/nodemon#nodemon\">documentation</a>.</p>\n+ <p>Read the full <a href=\"https://github.com/remy/nodemon#nodemon\">documentation</a>.</p>\n<footer>\n<p><a href=\"https://github.com/remy/nodemon/issues\">issues</a> &bull; <a href=\"https://github.com/remy/nodemon/\">source code</a> &bull; <a href=\"https://twitter.com/rem\">built by @rem</a></p>\n",
        "date": "28.11.2016 20:18:15",
        "repo": "remy/nodemon",
        "type": "chore",
        "chatgpt_zeroshot": "Update font URLs to use HTTPS and fix SVG links in index.html"
    },
    {
        "msg": "chore: remove io.js references",
        "diff": "diff --git a/README.md b/README.md @@ -238,22 +238,6 @@ nodemon({\n});\n```\n-## Using io.js for nodemon\n-\n-If you *only* have io.js installed (and the default install creates a symlink from `node` to `iojs`), then nodemon will work just fine out of the box (or [should](https://github.com/remy/nodemon/issues/468)).\n-\n-If you've got *both* node and io.js installed, then it's easy! You can either edit the local `nodemon.json` file (in your working directory) or in your `$HOME` directory containing:\n-\n-```json\n-{\n- \"execMap\": {\n- \"js\": \"iojs\"\n- }\n-}\n-```\n-\n-Now you nodemon will use [io.js](https://iojs.org/) with JavaScript files instead of node.\n-\n## Using nodemon in your gulp workflow\nCheck out the [gulp-nodemon](https://github.com/JacksonGariety/gulp-nodemon) plugin to integrate nodemon with the rest of your project's gulp workflow.\n",
        "date": "04.09.2017 11:26:25",
        "repo": "remy/nodemon",
        "type": "chore",
        "chatgpt_zeroshot": "Remove instructions for using io.js with nodemon"
    },
    {
        "msg": "chore: update test envs",
        "diff": "diff --git a/.travis.yml b/.travis.yml @@ -6,13 +6,10 @@ language: node_js\nnotifications:\nemail: false\nnode_js:\n+ - 8\n+ - 7\n- 6\n- - 5\n- 4\n- # - iojs-v3\n- # - iojs-v2\n- # - iojs-v1\n- - '0.10'\nbefore_install:\n- npm i -g npm@^2.0.0\nbefore_script:\n",
        "date": "04.09.2017 20:14:18",
        "repo": "remy/nodemon",
        "type": "chore",
        "chatgpt_zeroshot": "Update Node.js versions in Travis configuration"
    },
    {
        "msg": "chore: linting errors",
        "diff": "diff --git a/lib/utils/index.js b/lib/utils/index.js @@ -2,7 +2,7 @@ var noop = function () {};\nvar path = require('path');\nvar version = process.versions.node.split('.') || [null, null, null];\n-var utils = module.exports = {\n+var utils = (module.exports = {\nversion: {\nmajor: parseInt(version[0] || 0, 10),\nminor: parseInt(version[1] || 0, 10),\n@@ -51,7 +51,8 @@ var utils = module.exports = {\nthis.debug = false;\n},\nregexpToText: function (t) {\n- return t.replace(/\\.\\*\\\\./g, '*.')\n+ return t\n+ .replace(/\\.\\*\\\\./g, '*.')\n.replace(/\\\\{2}/g, '^^')\n.replace(/\\\\/g, '')\n.replace(/\\^\\^/g, '\\\\');\n@@ -60,18 +61,23 @@ var utils = module.exports = {\n// serializes an executable string and array of arguments into a string\nargs = args || [];\n- return [exec].concat(args.map(function (arg) {\n- // if an argument contains a space, we want to show it with quotes around\n- // it to indicate that it is a single argument\n+ return [exec]\n+ .concat(\n+ args.map(function (arg) {\n+ // if an argument contains a space, we want to show it with quotes\n+ // around it to indicate that it is a single argument\nif (arg.indexOf(' ') === -1) {\nreturn arg;\n} else {\n// this should correctly escape nested quotes\nreturn JSON.stringify(arg);\n}\n- })).join(' ').trim();\n+ })\n+ )\n+ .join(' ')\n+ .trim();\n},\n-};\n+});\nutils.log = require('./log')(utils.isRequired);\n",
        "date": "04.09.2017 20:35:56",
        "repo": "remy/nodemon",
        "type": "chore",
        "chatgpt_zeroshot": "Refactor code in lib/utils/index.js for better readability and maintainability"
    },
    {
        "msg": "chore: fix linting issues",
        "diff": "diff --git a/lib/monitor/signals.js b/lib/monitor/signals.js module.exports = {\n- \"SIGHUP\": \"1\",\n- \"SIGINT\": \"2\",\n- \"SIGQUIT\": \"3\",\n- \"SIGILL\": \"4\",\n- \"SIGTRAP\": \"5\",\n- \"SIGABRT\": \"6\",\n- \"SIGBUS\": \"7\",\n- \"SIGFPE\": \"8\",\n- \"SIGKILL\": \"9\",\n- \"SIGUSR1\": \"10\",\n- \"SIGSEGV\": \"11\",\n- \"SIGUSR2\": \"12\",\n- \"SIGPIPE\": \"13\",\n- \"SIGALRM\": \"14\",\n- \"SIGTERM\": \"15\",\n- \"SIGSTKFLT\": \"16\",\n- \"SIGCHLD\": \"17\",\n- \"SIGCONT\": \"18\",\n- \"SIGSTOP\": \"19\",\n- \"SIGTSTP\": \"20\",\n- \"SIGTTIN\": \"21\",\n- \"SIGTTOU\": \"22\",\n- \"SIGURG\": \"23\",\n- \"SIGXCPU\": \"24\",\n- \"SIGXFSZ\": \"25\",\n- \"SIGVTALRM\": \"26\",\n- \"SIGPROF\": \"27\",\n- \"SIGWINCH\": \"28\",\n- \"SIGIO\": \"29\",\n- \"SIGPWR\": \"30\",\n- \"SIGSYS\": \"31\",\n- \"SIGRTMIN\": \"35\"\n+ SIGHUP: 1,\n+ SIGINT: 2,\n+ SIGQUIT: 3,\n+ SIGILL: 4,\n+ SIGTRAP: 5,\n+ SIGABRT: 6,\n+ SIGBUS: 7,\n+ SIGFPE: 8,\n+ SIGKILL: 9,\n+ SIGUSR1: 10,\n+ SIGSEGV: 11,\n+ SIGUSR2: 12,\n+ SIGPIPE: 13,\n+ SIGALRM: 14,\n+ SIGTERM: 15,\n+ SIGSTKFLT: 16,\n+ SIGCHLD: 17,\n+ SIGCONT: 18,\n+ SIGSTOP: 19,\n+ SIGTSTP: 20,\n+ SIGTTIN: 21,\n+ SIGTTOU: 22,\n+ SIGURG: 23,\n+ SIGXCPU: 24,\n+ SIGXFSZ: 25,\n+ SIGVTALRM: 26,\n+ SIGPROF: 27,\n+ SIGWINCH: 28,\n+ SIGIO: 29,\n+ SIGPWR: 30,\n+ SIGSYS: 31,\n+ SIGRTMIN: 35,\n}\n",
        "date": "15.12.2017 15:20:01",
        "repo": "remy/nodemon",
        "type": "chore",
        "chatgpt_zeroshot": "Refactor signal constants to use object notation in signals.js"
    },
    {
        "msg": "chore: append to .npmrc rather than overwrite it in travis",
        "diff": "diff --git a/.travis.yml b/.travis.yml @@ -10,7 +10,7 @@ node_js:\n- '6'\n- '4'\nbefore_install:\n- - if [ \"$TRAVIS_PULL_REQUEST_BRANCH\" == \"\" ]; then echo \"//registry.npmjs.org/:_authToken=\\${NPM_TOKEN}\" > .npmrc; fi\n+ - if [ \"$TRAVIS_PULL_REQUEST_BRANCH\" == \"\" ]; then echo \"//registry.npmjs.org/:_authToken=\\${NPM_TOKEN}\" >> .npmrc; fi\nafter_success:\n- npm run semantic-release\nbranches:\n",
        "date": "18.12.2017 15:35:53",
        "repo": "remy/nodemon",
        "type": "chore",
        "chatgpt_zeroshot": "Fix npmrc file generation in Travis CI build"
    },
    {
        "msg": "chore: fix linting issue",
        "diff": "diff --git a/lib/monitor/match.js b/lib/monitor/match.js @@ -90,7 +90,9 @@ function rulesToMonitor(watch, ignore, config) {\nrule.slice(-1) === '*' &&\nrule.indexOf('*.') === -1) {\n- if (rule.slice(-2) !== '**') rule += '*/*';\n+ if (rule.slice(-2) !== '**') {\n+ rule += '*/*';\n+ }\n}\n",
        "date": "06.01.2018 23:53:59",
        "repo": "remy/nodemon",
        "type": "chore",
        "chatgpt_zeroshot": "Refactor rulesToMonitor function to properly handle wildcard rules."
    },
    {
        "msg": "chore: tweak oliver",
        "diff": "diff --git a/.github/oliver.yml b/.github/oliver.yml # Number of days the issue was closed in before the bot should reply.\n# If the issue was closed in more days than this, the bot won't reply.\n# Use `daysClosedIn: false` to *always* reply.\n-daysClosedIn: 5\n+daysClosedIn: false\n# Labels to look for on issues the bot can reply to\nlabels:\n",
        "date": "21.01.2018 22:49:16",
        "repo": "remy/nodemon",
        "type": "chore",
        "chatgpt_zeroshot": "Update daysClosedIn value to false in oliver.yml"
    },
    {
        "msg": "chore: update oliver\n[skip ci]",
        "diff": "diff --git a/.github/oliver.yml b/.github/oliver.yml # Number of days the issue was closed in before the bot should reply.\n# If the issue was closed in more days than this, the bot won't reply.\n# Use `daysClosedIn: false` to *always* reply.\n-daysClosedIn: false\n+daysClosedIn: 100\n# Labels to look for on issues the bot can reply to\nlabels:\n",
        "date": "01.02.2018 18:58:26",
        "repo": "remy/nodemon",
        "type": "chore",
        "chatgpt_zeroshot": "Update daysClosedIn value to 100 in oliver.yml"
    },
    {
        "msg": "chore: update stalebot\n[skip ci]\nReducing from 2 months to 2 weeks. I'm on top of issues now, and I don't want idle issues hanging around if there's no response.",
        "diff": "diff --git a/.github/stale.yml b/.github/stale.yml # Number of days of inactivity before an issue becomes stale\n-daysUntilStale: 60\n+daysUntilStale: 14\n# Number of days of inactivity before a stale issue is closed\ndaysUntilClose: 7\n# Issues with these labels will never be considered stale\n",
        "date": "02.02.2018 17:16:58",
        "repo": "remy/nodemon",
        "type": "chore",
        "chatgpt_zeroshot": "Update stale.yml configuration to reduce days until an issue becomes stale from 60 to 14."
    },
    {
        "msg": "chore: update stalebot",
        "diff": "diff --git a/.github/stale.yml b/.github/stale.yml @@ -7,7 +7,7 @@ exemptLabels:\n- pinned\n- security\n# Label to use when marking an issue as stale\n-staleLabel: wontfix\n+staleLabel: stale\n# Comment to post when marking an issue as stale. Set to `false` to disable\nmarkComment: >\nThis issue has been automatically marked as idle and stale because it hasn't\n",
        "date": "07.05.2018 09:08:32",
        "repo": "remy/nodemon",
        "type": "chore",
        "chatgpt_zeroshot": "Change stale label from \"wontfix\" to \"stale\" in stale.yml configuration file"
    },
    {
        "msg": "chore: bump pstree",
        "diff": "diff --git a/package.json b/package.json \"debug\": \"^3.1.0\",\n\"ignore-by-default\": \"^1.0.1\",\n\"minimatch\": \"^3.0.4\",\n- \"pstree.remy\": \"^1.1.1\",\n+ \"pstree.remy\": \"^1.1.2\",\n\"semver\": \"^5.5.0\",\n\"supports-color\": \"^5.2.0\",\n\"touch\": \"^3.1.0\",\n",
        "date": "22.11.2018 11:20:24",
        "repo": "remy/nodemon",
        "type": "chore",
        "chatgpt_zeroshot": "Update pstree.remy to version 1.1.2 in package.json"
    },
    {
        "msg": "chore: update stalebot\n[skip ci]",
        "diff": "diff --git a/.github/stale.yml b/.github/stale.yml @@ -6,6 +6,7 @@ daysUntilClose: 7\nexemptLabels:\n- pinned\n- security\n+ - not-stale\n# Label to use when marking an issue as stale\nstaleLabel: stale\n# Comment to post when marking an issue as stale. Set to `false` to disable\n",
        "date": "08.05.2019 11:12:13",
        "repo": "remy/nodemon",
        "type": "chore",
        "chatgpt_zeroshot": "Add exemption label \"not-stale\" to stale.yml configuration"
    },
    {
        "msg": "chore: update funding\n[skip ci]",
        "diff": "diff --git a/.github/FUNDING.yml b/.github/FUNDING.yml -github: # Replace with up to 4 GitHub Sponsors-enabled usernames e.g., [user1, user2]\n+github: remy # Replace with up to 4 GitHub Sponsors-enabled usernames e.g., [user1, user2]\nopen_collective: nodemon\n",
        "date": "11.10.2019 08:04:45",
        "repo": "remy/nodemon",
        "type": "chore",
        "chatgpt_zeroshot": "Update GitHub Sponsors-enabled username in FUNDING.yml"
    },
    {
        "msg": "chore: undo change to spawn code",
        "diff": "diff --git a/lib/monitor/run.js b/lib/monitor/run.js @@ -99,8 +99,6 @@ function run(options) {\nif (shouldFork) {\nvar forkArgs = cmd.args.slice(1);\nvar env = utils.merge(options.execOptions.env, process.env);\n- stdio.pop();\n- stdio.push(process.stderr);\nstdio.push('ipc');\nchild = fork(options.execOptions.script, forkArgs, {\nenv: env,\n",
        "date": "04.12.2019 16:09:33",
        "repo": "remy/nodemon",
        "type": "chore",
        "chatgpt_zeroshot": "Remove unnecessary stdio configuration in monitor run script"
    },
    {
        "msg": "chore: change test targets\nNo longer testing in node@8 as of\nAdding node@14 and dropping non-LTS targets (odd versions).",
        "diff": "diff --git a/.travis.yml b/.travis.yml @@ -5,10 +5,9 @@ cache:\nnotifications:\nemail: false\nnode_js:\n+ - '14'\n- '12'\n- - '11'\n- '10'\n- - '8'\nbefore_install:\n- if [ \"$TRAVIS_PULL_REQUEST_BRANCH\" == \"\" ]; then echo \"//registry.npmjs.org/:_authToken=\\${NPM_TOKEN}\" >> .npmrc; fi\nafter_success:\n",
        "date": "19.10.2020 19:20:22",
        "repo": "remy/nodemon",
        "type": "chore",
        "chatgpt_zeroshot": "Update Node.js version to 14 in .travis.yml"
    },
    {
        "msg": "chore: update semver packages",
        "diff": "diff --git a/package.json b/package.json \"postspec\": \"npm run clean\",\n\"clean\": \"rm -rf test/fixtures/test*.js test/fixtures/test*.md\",\n\"web\": \"node web\",\n- \"semantic-release\": \"semantic-release pre && npm publish && semantic-release post\",\n+ \"semantic-release\": \"semantic-release\",\n\"prepush\": \"npm run lint\",\n\"killall\": \"ps auxww | grep node | grep -v grep | awk '{ print $2 }' | xargs kill -9\",\n\"postinstall\": \"node bin/postinstall || exit 0\"\n\"istanbul\": \"^0.4.5\",\n\"mocha\": \"^2.5.3\",\n\"proxyquire\": \"^1.8.0\",\n- \"semantic-release\": \"^8.2.3\",\n+ \"semantic-release\": \"^17.4.4\",\n\"should\": \"~4.0.0\"\n},\n\"dependencies\": {\n",
        "date": "29.06.2021 13:50:16",
        "repo": "remy/nodemon",
        "type": "chore",
        "chatgpt_zeroshot": "Update semantic-release version to 17.4.4"
    },
    {
        "msg": "chore: update stalebot\nThe OG stalebot seemed to crash out.",
        "diff": "diff --git a/.github/stale.yml b/.github/stale.yml -# Number of days of inactivity before an issue becomes stale\n-daysUntilStale: 14\n-# Number of days of inactivity before a stale issue is closed\n-daysUntilClose: 7\n-# Issues with these labels will never be considered stale\n-exemptLabels:\n- - pinned\n- - security\n- - not-stale\n-# Label to use when marking an issue as stale\n-staleLabel: stale\n-# Comment to post when marking an issue as stale. Set to `false` to disable\n-markComment: >\n+name: Mark stale issues and pull requests\n+\n+on:\n+ schedule:\n+ - cron: \"0 * * * *\"\n+\n+jobs:\n+ stale:\n+\n+ runs-on: ubuntu-latest\n+ permissions:\n+ issues: write\n+ pull-requests: write\n+\n+ steps:\n+ - uses: actions/stale@v3\n+ with:\n+ repo-token: ${{ secrets.GITHUB_TOKEN }}\n+ days-before-stale: 14\n+ days-before-close: 30\n+ days-before-pr-close: -1\n+ stale-issue-label: 'stale'\n+ stale-pr-label: 'stale'\n+ stale-issue-message: >\nThis issue has been automatically marked as idle and stale because it hasn't\nhad any recent activity. It will be automtically closed if no further activity\noccurs. If you think this is wrong, or the problem still persists, just pop\na reply in the comments and @remy will (try!) to follow up.\nThank you for contributing <3\n-# Comment to post when closing a stale issue. Set to `false` to disable\n-closeComment: false\n+ close-issue-message: 'Automatically closing this issue due to lack of activity'\n+ exempt-issue-labels:\n+ - not-stale\n+ - security\n+ - pinned\n",
        "date": "08.07.2021 21:38:59",
        "repo": "remy/nodemon",
        "type": "chore",
        "chatgpt_zeroshot": "Update stale.yml to mark stale issues and pull requests with new configurations."
    },
    {
        "msg": "chore: fix stale.yml\nWrong format in except labels",
        "diff": "diff --git a/.github/workflows/stale.yml b/.github/workflows/stale.yml @@ -29,7 +29,4 @@ jobs:\nThank you for contributing <3\nclose-issue-message: 'Automatically closing this issue due to lack of activity'\n- exempt-issue-labels:\n- - not-stale\n- - security\n- - pinned\n+ exempt-issue-labels: not-stale,security,pinned\n",
        "date": "09.07.2021 09:39:15",
        "repo": "remy/nodemon",
        "type": "chore",
        "chatgpt_zeroshot": "Simplify exempt-issue-labels in stale.yml"
    },
    {
        "msg": "chore: set release workflow node version",
        "diff": "diff --git a/.github/workflows/release.yml b/.github/workflows/release.yml @@ -18,7 +18,7 @@ jobs:\n- name: Setup Node.js\nuses: actions/setup-node@v1\nwith:\n- node-version: 12\n+ node-version: 14\n- name: Install dependencies\nrun: npm ci\n- name: Release\n",
        "date": "23.09.2021 21:28:47",
        "repo": "remy/nodemon",
        "type": "chore",
        "chatgpt_zeroshot": "Update Node.js version to 14 in release workflow"
    },
    {
        "msg": "chore: add supporters\n[skip ci]",
        "diff": "diff --git a/website/index.html b/website/index.html <div\nstyle=\"display: flex; flex-wrap: wrap; overflow: hidden; background: white; border-radius: 2px; padding: 20px; margin-top: 40px;\">\n+ <!-- static contributors -->\n+ <a title='padlet' data-id='padlet' href='https://padlet.com/'><img alt='null'\n+ src='https://images.opencollective.com/padlet/320fa3e/logo/256.png' style='float: left; margin:12px'\n+ width='120'></a>\n+\n<!-- https://opencollective.com/nodemon/members/all.json?limit=100&offset=0&TierId=2603 -->\n<!-- generated using https://jqterm.com/e09008bb74afe9fec8c1816252c3b9eb?query=def%20getImage%3A%0A%09.%20as%20%24_%20%7C%0A%09%7B%20%0A%20%20%20%20%20%20%22206432%22%3A%20%22https%3A%2F%2Fuser-images.githubusercontent.com%2F13700%2F127474039-8ba5ac8c-2095-4984-9309-54ff15e95340.png%22%2C%0A%09%20%20%22215800%22%3A%20%22https%3A%2F%2Fuser-images.githubusercontent.com%2F13700%2F151881982-04677f3d-e2e1-44ee-a168-258b242b1ef4.svg%22%20%0A%20%20%20%20%7D%20%7C%20%28.%5B%22%5C%28%24_.MemberId%29%22%5D%20%2F%2F%20%24_.image%29%0A%3B%0A%0Adef%20tohtml%3A%0A%22%20%20%20%20%20%20%20%20%20%20%3Ca%20title%3D%27%5C%28.name%29%27%20data-id%3D%27%5C%28.MemberId%29%27%20href%3D%27%5C%28.website%29%27%3E%3Cimg%20alt%3D%27%5C%28.description%29%27%20src%3D%27%5C%28.%20%7C%20getImage%29%27%20style%3D%27float%3A%20left%3B%20margin%3A12px%27%20width%3D%27120%27%3E%3C%2Fa%3E%22%0A%3B%0A%0Asort_by%28.createdAt%29%20%7C%20map%28select%28.isActive%20%3D%3D%20true%20and%20.image%29%20%7C%20tohtml%29%5B%5D&raw=true -->\n",
        "date": "09.02.2022 17:33:22",
        "repo": "remy/nodemon",
        "type": "chore",
        "chatgpt_zeroshot": "Add static contributor image for Padlet in index.html"
    },
    {
        "msg": "chore: add supporters",
        "diff": "diff --git a/website/index.html b/website/index.html href='https://inkedin.com/free-spins-no-deposit/'><img src='https://logo.clearbit.com/inkedin.com'\nstyle='object-fit: contain; float: left; margin:12px' height='120' width='120'></a><a\nhref='https://www.newcasinosaustralia.com/'><img src='https://logo.clearbit.com/newcasinosaustralia.com'\n+ style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a><a\n+ href='https://casinostranieri.net/'><img\n+ src='https://opencollective-production.s3.us-west-1.amazonaws.com/7aae8900-0c02-11ed-9aa8-2bd811fd6f10.png'\n+ style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a><a\n+ href='https://goread.io/buy-instagram-followers'><img\n+ src='https://opencollective-production.s3.us-west-1.amazonaws.com/7d1302a0-0f33-11ed-a094-3dca78aec7cd.png'\nstyle='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>\n</div>\n</div>\n",
        "date": "29.07.2022 13:12:15",
        "repo": "remy/nodemon",
        "type": "chore",
        "chatgpt_zeroshot": "Add new affiliate links to index.html page"
    },
    {
        "msg": "chore: update supportors",
        "diff": "diff --git a/README.md b/README.md @@ -402,7 +402,8 @@ Support this project by becoming a sponsor. Your logo will show up here with a l\n<a title='Casinostranieri.net' data-id='319480' href='https://casinostranieri.net/'><img alt='' src='https://opencollective-production.s3.us-west-1.amazonaws.com/7aae8900-0c02-11ed-9aa8-2bd811fd6f10.png' style='object-fit: contain; float: left; margin:12px' width='120'></a>\n<a title='Goread.io' data-id='320564' href='https://goread.io/buy-instagram-followers'><img alt='null' src='https://opencollective-production.s3.us-west-1.amazonaws.com/7d1302a0-0f33-11ed-a094-3dca78aec7cd.png' style='object-fit: contain; float: left; margin:12px' width='120'></a>\n<a title='SureBet' data-id='321121' href='https://www.sure.bet/casinos-not-on-gamstop/'><img alt='We are the most advanced casino guide!' src='https://logo.clearbit.com/sure.bet' style='object-fit: contain; float: left; margin:12px' width='120'></a>\n- <a title='Scommetteronline.info' data-id='321538' href='https://scommetteronline.info/bonus-scommesse-online/'><img alt='null' src='https://opencollective-production.s3.us-west-1.amazonaws.com/dfc8a530-126c-11ed-9c7b-3b6f4738893c.jpg' style='object-fit: contain; float: left; margin:12px' width='120'></a>\n+ <a title='Casinosicuri.info' data-id='321538' href='https://casinosicuri.info/'><img alt='null' src='https://opencollective-production.s3.us-west-1.amazonaws.com/6ad106d0-16ec-11ed-8a46-7b820b28a610.jpg' style='object-fit: contain; float: left; margin:12px' width='120'></a>\n+ <a title='Correct Casinos Australia' data-id='322445' href='https://www.correctcasinos.com/australian-online-casinos/'><img alt='Best Australian online casinos. Reviewed by Correct Casinos.' src='https://opencollective-production.s3.us-west-1.amazonaws.com/fef95200-1551-11ed-ba3f-410c614877c8.png' style='object-fit: contain; float: left; margin:12px' width='120'></a>\n</div>\n# License\n",
        "date": "09.08.2022 09:35:59",
        "repo": "remy/nodemon",
        "type": "chore",
        "chatgpt_zeroshot": "Add new sponsor logos to README.md"
    },
    {
        "msg": "chore: juggle :)",
        "diff": "diff --git a/src/server.js b/src/server.js -import { createServer } from 'http';\nimport ws from 'ws';\nimport sirv from 'sirv';\nimport polka from 'polka';\nimport parse from '@polka/url';\n+import { createServer } from 'http';\nimport compression from './lib/polkompress.js';\n/**\n",
        "date": "03.06.2020 12:39:34",
        "repo": "preactjs/wmr",
        "type": "chore",
        "chatgpt_zeroshot": "Fix import statement for compression module"
    },
    {
        "msg": "chore: bump `sirv` version",
        "diff": "diff --git a/package.json b/package.json \"rollup-plugin-preserve-shebang\": \"^1.0.0\",\n\"sade\": \"^1.7.3\",\n\"semver\": \"^7.3.2\",\n- \"sirv\": \"^0.4.6\",\n+ \"sirv\": \"^1.0.0\",\n\"tar-stream\": \"^2.1.2\",\n\"terser\": \"^4.7.0\",\n\"tiny-glob\": \"^0.2.6\",\n",
        "date": "10.06.2020 16:54:35",
        "repo": "preactjs/wmr",
        "type": "chore",
        "chatgpt_zeroshot": "Update sirv package to version 1.0.0"
    },
    {
        "msg": "chore: fix typo in config snippet",
        "diff": "diff --git a/README.md b/README.md @@ -123,7 +123,7 @@ export default async function (config) {\n}\nif (config.mode === 'serve') {\n- options.middleware.push(\n+ config.middleware.push(\n// add any Polka middleware:\nfunction myPolkaMiddleware(req, res, next) {\nres.setHeader('X-Foo', 'bar');\n",
        "date": "02.12.2020 14:57:10",
        "repo": "preactjs/wmr",
        "type": "chore",
        "chatgpt_zeroshot": "Refactor middleware configuration in serve mode"
    },
    {
        "msg": "chore: update readme `wmr.config.js` snippet",
        "diff": "diff --git a/README.md b/README.md @@ -117,10 +117,10 @@ function App() {\n## Configuration and plugins\nWMR supports a `wmr.config.js` (or `wmr.config.mjs`) configuration file.\n-You can export a config function, or individual config functions for each of the `start`, `build` and `serve` commands:\n+You can export a `default` config function, or individual config functions for each of the `start`, `build` and `serve` commands:\n```js\n-// wmr.config.js\n+// wmr.config.mjs\nimport someRollupPlugin from '@rollup/plugin-xyz';\n/** @param {import('wmr').Options} config */\n@@ -142,6 +142,20 @@ export default async function (config) {\n);\n}\n}\n+\n+// OR\n+\n+export async function start(config) {\n+ // equivalent to `config.mode === 'start'`\n+}\n+\n+export async function build(config) {\n+ // equivalent to `config.mode === 'build'`\n+}\n+\n+export async function serve(config) {\n+ // equivalent to `config.mode === 'serve'`\n+}\n```\nSee [the full list of options](https://github.com/preactjs/wmr/blob/master/types.d.ts).\n",
        "date": "03.12.2020 03:37:01",
        "repo": "preactjs/wmr",
        "type": "chore",
        "chatgpt_zeroshot": "Update configuration file to export default config function and individual config functions for start, build, and serve commands"
    },
    {
        "msg": "chore: fix linter",
        "diff": "diff --git a/src/bundler.js b/src/bundler.js @@ -35,7 +35,7 @@ const pathToPosix = p => p.split(sep).join(posix.sep);\n* @property {string} [publicDir = '']\n* @property {string} [out = '.cache']\n* @property {boolean} [sourcemap]\n- * @property {boolean} [minify]\n+ * @property {boolean} [minify = true]\n* @property {Record<string, string>} [aliases] module aliases\n* @property {boolean} [profile] Enable bundler performance profiling\n* @property {Record<string, string>} [env]\n@@ -138,9 +138,7 @@ export async function bundleProd({\nreturn fileName;\n},\nhoistTransitiveImports: true,\n- plugins: [\n- minify && terser({ compress: true, sourcemap })\n- ],\n+ plugins: [minify && terser({ compress: true, sourcemap })],\nsourcemap,\nsourcemapPathTransform(p, mapPath) {\nlet url = pathToPosix(relative(cwd, resolve(dirname(mapPath), p)));\n",
        "date": "03.12.2020 08:11:30",
        "repo": "preactjs/wmr",
        "type": "chore",
        "chatgpt_zeroshot": "Set minify property default value to true and remove unnecessary line breaks in bundler.js"
    },
    {
        "msg": "chore: apply linter",
        "diff": "diff --git a/src/plugins/optimize-graph-plugin.js b/src/plugins/optimize-graph-plugin.js @@ -390,9 +390,7 @@ function hoistTransitiveImports(graph) {\nappendCode += '\\n' + DEFAULT_STYLE_LOAD_IMPL;\n}\nif (DEBUG) console.log(`Preloading CSS for import(${spec}): ${css}`);\n- preloads.push(\n- ...css.map(f => `${meta.styleLoadFn}(${toImport(graph.publicPath, f, true)})`)\n- );\n+ preloads.push(...css.map(f => `${meta.styleLoadFn}(${toImport(graph.publicPath, f, true)})`));\n}\nconst js = deps.js.get(spec);\n",
        "date": "03.12.2020 08:49:32",
        "repo": "preactjs/wmr",
        "type": "chore",
        "chatgpt_zeroshot": "Refactor CSS preloading logic in optimize-graph-plugin"
    },
    {
        "msg": "chore(optimize): always stringify `toImport` output",
        "diff": "diff --git a/src/plugins/optimize-graph-plugin.js b/src/plugins/optimize-graph-plugin.js @@ -176,7 +176,7 @@ class ChunkGraph {\nlet rep = typeof newUrl === 'function' ? newUrl(url, fn, quote) : newUrl;\nif (rep === false) return 'null';\nif (typeof rep === 'string') {\n- rep = JSON.stringify(publicPath ? toImport(publicPath, rep) : rep);\n+ rep = publicPath ? toImport(publicPath, rep) : JSON.stringify(rep);\n}\nreturn `${fn}(${rep})`;\n}\n@@ -187,9 +187,8 @@ class ChunkGraph {\n/**\n* @param {string} publicPath\n* @param {string} filename\n- * @param {boolean} [toJSON]\n*/\n-function toImport(publicPath, filename, toJSON) {\n+function toImport(publicPath, filename) {\nlet value = posix.join(publicPath, filename);\nif (/^(https?:)?\\/\\//.test(publicPath)) {\n@@ -198,7 +197,7 @@ function toImport(publicPath, filename, toJSON) {\nvalue = new URL(filename, root).href.substring(isFull ? 0 : 6);\n}\n- return toJSON ? JSON.stringify(value) : value;\n+ return JSON.stringify(value);\n}\n/**\n@@ -285,7 +284,7 @@ function hoistEntryCss(graph) {\n} else {\n// @TODO: this branch is actually unreachable\nif (DEBUG) console.log(`Hoisting CSS \"${f}\" imported by ${id} into parent HTML.`);\n- const url = toImport(graph.publicPath, f, true);\n+ const url = toImport(graph.publicPath, f);\nasset.source = getAssetSource(asset).replace(/<\\/head>/, `<link rel=\"stylesheet\" href=${url}></head>`);\n}\n}\n@@ -348,7 +347,7 @@ function hoistCascadedCss(graph, { cssMinSize }) {\nparentChunk.code += '\\n' + DEFAULT_STYLE_LOAD_IMPL;\n}\n- const url = toImport(graph.publicPath, fileName, true);\n+ const url = toImport(graph.publicPath, fileName);\nparentChunk.code += `\\n${meta.styleLoadFn}(${url});`;\n}\nbreak;\n@@ -390,7 +389,7 @@ function hoistTransitiveImports(graph) {\nappendCode += '\\n' + DEFAULT_STYLE_LOAD_IMPL;\n}\nif (DEBUG) console.log(`Preloading CSS for import(${spec}): ${css}`);\n- preloads.push(...css.map(f => `${meta.styleLoadFn}(${toImport(graph.publicPath, f, true)})`));\n+ preloads.push(...css.map(f => `${meta.styleLoadFn}(${toImport(graph.publicPath, f)})`));\n}\nconst js = deps.js.get(spec);\n",
        "date": "07.12.2020 10:43:15",
        "repo": "preactjs/wmr",
        "type": "chore",
        "chatgpt_zeroshot": "Refactor toImport function and remove unnecessary parameter."
    },
    {
        "msg": "chore: change cache path to not modify `node_modules`",
        "diff": "diff --git a/src/lib/npm-middleware-cache.js b/src/lib/npm-middleware-cache.js @@ -193,5 +193,5 @@ async function fwrite(filename, data) {\n*/\nfunction getCachePath({ module, version, path }, cwd) {\nconst tfPath = (path || '').replace(/\\//g, '---');\n- return resolve(cwd || '.', `node_modules/${module}/.cache/${version}--${tfPath}.js`);\n+ return resolve(cwd || '.', `.cache/@npm/${module}@${version}/${tfPath}.js`);\n}\n",
        "date": "05.02.2021 16:01:31",
        "repo": "preactjs/wmr",
        "type": "chore",
        "chatgpt_zeroshot": "Refactor cache path structure for npm modules"
    },
    {
        "msg": "chore: make cli easier to read and add uncaught exception handler",
        "diff": "diff --git a/packages/wmr/src/cli.js b/packages/wmr/src/cli.js @@ -13,10 +13,13 @@ function bool(v) {\nreturn v !== false && !/false|0/.test(v);\n}\n+// global options\nprog\n.option('--public', 'Your web app root directory (default: ./public)')\n.option('--out', 'Where to store generated files (default: ./dist)')\n- .option('--cwd', 'The working directory - equivalent to \"(cd FOO && wmr)\"')\n+ .option('--cwd', 'The working directory - equivalent to \"(cd FOO && wmr)\"');\n+\n+prog\n.command('build', 'make a production build')\n.option('--prerender', 'Pre-render the application to HTML')\n.option('--sourcemap', 'Enable Source Maps')\n@@ -24,7 +27,9 @@ prog\n.action(opts => {\nopts.minify = opts.minify !== false && !/false|0/.test(opts.minify);\nrun(build(opts));\n- })\n+ });\n+\n+prog\n.command('serve', 'Start a production server')\n.option('--out', 'Directory to serve (default: ./dist)')\n.option('--port, -p', 'HTTP port to listen on (default: $PORT or 8080)')\n@@ -34,7 +39,9 @@ prog\n.action(opts => {\nopts.compress = bool(opts.compress);\nrun(serve(opts));\n- })\n+ });\n+\n+prog\n.command('start', 'Start a development server', { default: true })\n.option('--port, -p', 'HTTP port to listen on (default: $PORT or 8080)')\n.option('--host', 'HTTP host to listen on (default: localhost)')\n@@ -45,21 +52,25 @@ prog\n.action(opts => {\nopts.optimize = !/false|0/.test(opts.compress);\nopts.compress = bool(opts.compress);\n- if (/true/.test(process.env.PROFILE)) opts.profile = true;\n+ if (/true/.test(process.env.PROFILE || '')) opts.profile = true;\nrun(start(opts));\n});\nprog.parse(process.argv);\nfunction run(p) {\n- p.catch(err => {\n- const text = err.message || err + '';\n+ p.catch(catchException);\n+}\n+\n+function catchException(err) {\n+ const text = (err.stack && err.stack.split('\\n')[0]) || err.message || err + '';\nconst stack = errorstacks\n.parseStackTrace(err.stack)\n.map(frame => frame.raw)\n.join('\\n');\nprocess.stderr.write(`\\n${kl.red(text)}\\n${stack ? kl.dim(stack + '\\n\\n') : ''}`);\n- process.exit(p.code || 1);\n- });\n+ process.exit(1);\n}\n+\n+process.setUncaughtExceptionCaptureCallback(catchException);\n",
        "date": "27.04.2021 23:20:36",
        "repo": "preactjs/wmr",
        "type": "chore",
        "chatgpt_zeroshot": "Refactor CLI options and error handling in wmr package"
    },
    {
        "msg": "chore(demo): skip unnecessary sleep(1500) during prerendering",
        "diff": "diff --git a/examples/demo/public/index.tsx b/examples/demo/public/index.tsx @@ -7,10 +7,12 @@ import Header from './header.tsx';\nconst sleep = t => new Promise(r => setTimeout(r, t));\n+const IS_CLIENT = typeof window !== 'undefined';\n+\nconst About = lazy(() => import('./pages/about/index.js'));\n-const LazyAndLate = lazy(async () => (await sleep(1500), import('./pages/about/index.js')));\n+const LazyAndLate = lazy(async () => (IS_CLIENT && (await sleep(1500)), import('./pages/about/index.js')));\nconst CompatPage = lazy(() => import('./pages/compat.js'));\n-const ClassFields = lazy(async () => (await sleep(1500), import('./pages/class-fields.js')));\n+const ClassFields = lazy(async () => (IS_CLIENT && (await sleep(1500)), import('./pages/class-fields.js')));\nconst Files = lazy(() => import('./pages/files/index.js'));\nconst Environment = lazy(async () => (await import('./pages/environment/index.js')).Environment);\nconst JSONView = lazy(async () => (await import('./pages/json.js')).JSONView);\n",
        "date": "10.05.2021 14:33:11",
        "repo": "preactjs/wmr",
        "type": "chore",
        "chatgpt_zeroshot": "Add check for client-side rendering in lazy loaded components"
    },
    {
        "msg": "chore: linter fixes",
        "diff": "diff --git a/packages/wmr/test/lib/polkompress.test.js b/packages/wmr/test/lib/polkompress.test.js @@ -34,7 +34,7 @@ function setup(handler) {\n};\n}\n-describe.only('polkompress', () => {\n+describe('polkompress', () => {\nit('should be a function', () => {\nexpect(typeof compression).toBe('function');\n});\n",
        "date": "26.05.2021 21:47:10",
        "repo": "preactjs/wmr",
        "type": "chore",
        "chatgpt_zeroshot": "Remove .only from polkompress test suite"
    },
    {
        "msg": "chore: leftover debug message",
        "diff": "diff --git a/packages/wmr/src/wmr-middleware.js b/packages/wmr/src/wmr-middleware.js @@ -422,7 +422,6 @@ export const TRANSFORMS = {\n}\nlet graphId = importer.replace(/^\\.?\\.?\\//, '');\nif (!moduleGraph.has(graphId)) {\n- console.log('create', graphId);\nmoduleGraph.set(graphId, { dependencies: new Set(), dependents: new Set(), acceptingUpdates: false });\n}\nconst mod = moduleGraph.get(graphId);\n",
        "date": "02.06.2021 16:40:14",
        "repo": "preactjs/wmr",
        "type": "chore",
        "chatgpt_zeroshot": "Remove console.log statement from module creation in wmr-middleware"
    },
    {
        "msg": "chore: Restoring ignore on all of wmr/test/fixtures",
        "diff": "diff --git a/package.json b/package.json \"eslintIgnore\": [\n\"**/*.ts\",\n\"packages/wmr/wmr.cjs\",\n- \"packages/wmr/test/fixtures/**/*.expected.*\",\n- \"packages/wmr/test/fixtures/*/dist\",\n- \"packages/wmr/test/fixtures/*/.cache\"\n+ \"packages/wmr/test/fixtures/**\"\n],\n\"prettier\": {\n\"singleQuote\": true,\n",
        "date": "03.06.2021 19:56:32",
        "repo": "preactjs/wmr",
        "type": "chore",
        "chatgpt_zeroshot": "Update eslintIgnore in package.json to include all files in test/fixtures directory"
    },
    {
        "msg": "chore: Disables (non-actionable) browserslist warning for users",
        "diff": "diff --git a/packages/wmr/rollup.config.js b/packages/wmr/rollup.config.js @@ -67,7 +67,8 @@ const config = {\nplugins: [\nshebangPlugin(),\nreplace({\n- 'process.env.VERSION': JSON.stringify(require('./package.json').version)\n+ 'process.env.VERSION': JSON.stringify(require('./package.json').version),\n+ 'process.env.BROWSERSLIST_IGNORE_OLD_DATA': true\n}),\n{\n// This inlines some fs.promises.readFile() calls, while allowing them to run unbundled in Node.\n@@ -116,7 +117,7 @@ const config = {\n},\n{\n// This ensures the template files for rollup-plugin-visualizer are inlined\n- // rather than bundleds as fs.readFile()\n+ // rather than bundled as fs.readFile()\nname: 'fix-visualizer',\ntransform(code, id) {\nif (/rollup-plugin-visualizer[/\\\\]dist[/\\\\]plugin[/\\\\]build-stats\\.js$/.test(id)) {\n",
        "date": "18.01.2022 21:13:14",
        "repo": "preactjs/wmr",
        "type": "chore",
        "chatgpt_zeroshot": "Add process.env.BROWSERSLIST_IGNORE_OLD_DATA flag and fix typo in comment"
    },
    {
        "msg": "chore(release): null",
        "diff": "diff --git a/CHANGELOG.md b/CHANGELOG.md @@ -7,6 +7,11 @@ All notable changes to this project will be documented in this file. See [standa\n+<a name=\"\"></a>\n+# [](https://github.com/CyberReboot/CRviz/compare/v0.1.2...v) (2018-06-23)\n+\n+\n+\n<a name=\"0.1.2\"></a>\n## [0.1.2](https://github.com/CyberReboot/CRviz/compare/v0.1.1...v0.1.2) (2018-06-23)\n",
        "date": "23.06.2018 14:23:51",
        "repo": "iqtlabs/crviz",
        "type": "chore",
        "chatgpt_zeroshot": "Add new section in CHANGELOG for upcoming release."
    },
    {
        "msg": "chore: 86 - Add Docker build to Travis\ncloses - added docker build instructions to travis config.",
        "diff": "diff --git a/.travis.yml b/.travis.yml +sudo: required\n+\n+services:\n+ - docker\n+\nlanguage: node_js\nnode_js:\n- '8'\n@@ -14,3 +19,5 @@ script:\n- npm install --no-optional\n- npm run test\n- npm run build\n+- docker build -t crviz -f Dockerfile .\n+- docker build -t crviz-gh -f Dockerfile.gh .\n\\ No newline at end of file\n",
        "date": "26.06.2018 10:03:25",
        "repo": "iqtlabs/crviz",
        "type": "chore",
        "chatgpt_zeroshot": "Add Docker support to Travis CI configuration"
    },
    {
        "msg": "chore: corrected markup in bug_report.md",
        "diff": "diff --git a/.github/ISSUE_TEMPLATE/bug_report.md b/.github/ISSUE_TEMPLATE/bug_report.md @@ -4,10 +4,10 @@ about: Tell us what is broken\n---\n-###Description###\n+### Description\nDescribe your issue here.\n-###Environment###\n+### Environment\n-version of CRviz?\n-which browser and its version?\n-versions of the following (if known and/or applicable)\n@@ -16,11 +16,11 @@ Describe your issue here.\n-D3\n-Docker\n-###Steps to reproduce###\n+### Steps to reproduce\nTell us how to recreate your issue.\n-###Expected results###\n+### Expected results\nWhat did you think would happen?\n-###Actual results###\n+### Actual results\nWhat **really** happened?\n",
        "date": "26.06.2018 15:54:13",
        "repo": "iqtlabs/crviz",
        "type": "chore",
        "chatgpt_zeroshot": "Update bug report template with proper formatting and headings"
    },
    {
        "msg": "chore: fixed markup in feature_request.md",
        "diff": "diff --git a/.github/ISSUE_TEMPLATE/feature_request.md b/.github/ISSUE_TEMPLATE/feature_request.md @@ -4,14 +4,14 @@ about: Tell us what you think needs improvement\n---\n-###Describe the feature you are requesting###\n+### Describe the feature you are requesting\nA clear and concise description of the functionality you would like implemented.\n-###Describe your use case###\n+### Describe your use case\nA clear and concise explanation of the obstacle you are facing.\n-###Explain how this feature supports your use case? Other use cases?##\n+### Explain how this feature supports your use case? Other use cases?\nWhy should this be implemented in the way you are suggesting?\n-###Additional Info###\n+### Additional Info\nAdd any other information relevant to this request\n",
        "date": "26.06.2018 15:55:46",
        "repo": "iqtlabs/crviz",
        "type": "chore",
        "chatgpt_zeroshot": "Refactor feature request template to improve readability and consistency"
    },
    {
        "msg": "chore(testing): example of testing with supplied args",
        "diff": "diff --git a/src/features/dataset-controls/DatasetSelector.test.js b/src/features/dataset-controls/DatasetSelector.test.js @@ -17,7 +17,7 @@ const empty = {name: \"None\", url:\" \"};\nconst change = (target) => {\n}\n-const event = {\"target\": {\"name\": \"ds3\", \"url\":\"test3.url\"}};\n+const event = {\"target\": {value:\"test3.url\"}};\ndescribe('DatasetSelector', () => {\nit('renders the control', () => {\nconst selector = mount(<DatasetSelector\n@@ -31,15 +31,18 @@ describe('DatasetSelector', () => {\n});\nit('changes the selection', () => {\n- const onChange = sinon.stub()\n+ const fakeOnChange = (evt) =>{\n+\n+ }\n+ const onChangeSpy = sinon.spy(fakeOnChange);\nconst selector = mount(<DatasetSelector\nclassName={style.selector}\nselected={empty}\n- onChange={onChange}\n+ onChange={onChangeSpy}\ndatasets={datasets}\n/>);\n- selector.find('select').first().simulate(\"change\", event);\n- expect(onChange.calledOnce).to.equal(true);\n+ selector.find('select').first().simulate('change', event);\n+ expect(onChangeSpy.calledWith(datasets[2])).to.equal(true);\n});\n});\n\\ No newline at end of file\n",
        "date": "10.07.2018 15:44:43",
        "repo": "iqtlabs/crviz",
        "type": "chore",
        "chatgpt_zeroshot": "Refactor DatasetSelector test to use onChangeSpy instead of onChange stub"
    },
    {
        "msg": "chore: added link to CyberReboot logo",
        "diff": "diff --git a/src/features/header/Header.js b/src/features/header/Header.js @@ -28,7 +28,9 @@ class Header extends React.Component {\nrender() {\nreturn (\n<div className={ style.header }>\n- <img src={ logo } className={ style.logo } alt='' />\n+ <a href=\"http://www.cyberreboot.org/\" target=\"_blank\" rel=\"noopener noreferrer\">\n+ <img src={ logo } className={ style.logo } alt='Cyber Reboot' />\n+ </a>\n<span className={ style.appName }>CRviz</span>\n<span className={ style.infoIcon }>\n<label id=\"showInfo\" onMouseEnter={this.showTooltip} onMouseLeave={this.hideTooltip}>\n",
        "date": "01.11.2018 11:29:47",
        "repo": "iqtlabs/crviz",
        "type": "chore",
        "chatgpt_zeroshot": "Add link to Cyber Reboot website in header logo and update alt text"
    },
    {
        "msg": "chore(selectedDatum): send selected data to redux store",
        "diff": "diff --git a/src/domain/controls.js b/src/domain/controls.js @@ -8,7 +8,8 @@ const defaultState = {\nstart: null, // The uuid of the dataset to use as the starting point for comparison\nend: null, // The uuid of the dataset to use as the end point for comparison\nshowBusy: false, //display the activity icon\n- position: [0,0]\n+ position: [0,0], // The position used for a mouse click\n+ datum: null //\n};\n// ACTION CREATORS\n@@ -22,6 +23,7 @@ const useDarkTheme = createAction(\"USE_DARK_THEME\");\nconst colorBy = createAction(\"COLOR_BY\");\nconst showBusy = createAction(\"SHOW_BUSY\");\nconst setPosition = createAction(\"POSITION\");\n+const setSelectedDatum = createAction(\"SETSELECTEDDATUM\")\n// REDUCERS\n@@ -56,6 +58,7 @@ const reducer = handleActions(\n[colorBy]: (state, { payload }) => ({ ...state, colorBy: payload }),\n[showBusy]: (state, { payload }) => ({ ...state, showBusy: !!payload }),\n[setPosition]: (state, { payload }) => ({ ...state, position: payload }),\n+ [setSelectedDatum]: (state, { payload }) => ({ ...state, selectedDatum: payload }),\n},\ndefaultState\n);\n@@ -63,6 +66,7 @@ const reducer = handleActions(\n// SELECTORS\nconst selectControls = (state) => state.controls;\nconst getPosition = (state) => state.controls.position;\n+const getSelectedDatum = (state) => state.controls.selectedDatum;\nexport default reducer;\n-export { setControls, setHierarchyConfig, showNodes, colorBy, useDarkTheme, selectControls, setStartDataset, setEndDataset, showBusy, setPosition, getPosition };\n+export { setControls, setHierarchyConfig, showNodes, colorBy, useDarkTheme, selectControls, setStartDataset, setEndDataset, showBusy, setPosition, getPosition, setSelectedDatum, getSelectedDatum };\n",
        "date": "25.06.2019 15:53:34",
        "repo": "iqtlabs/crviz",
        "type": "chore",
        "chatgpt_zeroshot": "Add setSelectedDatum action and reducer for controls domain."
    },
    {
        "msg": "chore: add dark theme ability",
        "diff": "diff --git a/src/features/note-selector/NoteSelector.module.css b/src/features/note-selector/NoteSelector.module.css .tag:hover::after {\nborder-left-color: rgb(65, 65, 65);\n}\n+\n+:global(.darkTheme) .tag {\n+ color: white;\n+ background-color: rgb(130, 129, 129);\n+}\n+\n+:global(.darkTheme) .tag:hover {\n+ /*background-color: #cc0000;*/\n+ background-color: white;\n+ color: black;\n+}\n\\ No newline at end of file\n",
        "date": "14.08.2019 09:44:39",
        "repo": "iqtlabs/crviz",
        "type": "chore",
        "chatgpt_zeroshot": "Add dark theme styles to NoteSelector module CSS"
    },
    {
        "msg": "chore(readme): updated readme",
        "diff": "diff --git a/README.md b/README.md @@ -16,12 +16,12 @@ You can also view all developed components in Storybook!\n#### Project TODO:\n- [x] Setup Storybook for components UI\n- [x] Theme Provider\n+- [x] Develop styling scheme for components with styled components\n- [x] Setup Vue.js plugin system\n- [x] Provide Theme\n- - [ ] Observe theme and set it dynamically in javascript with ease.\n+ - [x] Observe theme and set it dynamically in javascript with ease.\n- [ ] Provide icons API for icons component\n-- [ ] Develop styling scheme for components with styled components\n+- [ ] Accessibility (Focus) Styling\n- [ ] Setup NPM distribution\n- [ ] Set up type system for components with Typescript\n-- [ ] Accessibility (Focus) Styling\n",
        "date": "21.10.2019 03:50:03",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "chatgpt_zeroshot": "Add focus styling for accessibility and observe theme dynamically in javascript."
    },
    {
        "msg": "chore(docs): updated dev build docs",
        "diff": "diff --git a/package.json b/package.json \"storybook\": \"start-storybook -p 6006\",\n\"build-storybook\": \"build-storybook --quiet\",\n\"docs:dev\": \"vuepress dev docs\",\n- \"docs:build\": \"vuepress build docs\"\n+ \"docs:build\": \"vuepress build docs\",\n+ \"build-vsc\": \"cd node_modules/vue-styled-components && npm install && npm run build && cd ../../\"\n},\n\"dependencies\": {\n\"@babel/preset-env\": \"^7.6.3\",\n",
        "date": "26.10.2019 12:25:30",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "chatgpt_zeroshot": "Add build-vsc script for building Vue Styled Components in package.json"
    },
    {
        "msg": "chore(button): removed unnecessary story",
        "diff": "diff --git a/stories/3-Button.stories.js b/stories/3-Button.stories.js @@ -130,28 +130,3 @@ storiesOf('UI | Button', module)\n}\n}\n}))\n- .add('Mortezas button', () => ({\n- components: { Button },\n- template: `\n- <div>\n- <Button :variant-color=\"variantColor\" variant=\"link\" right-icon=\"email\" @click=\"setLoading\" :is-loading=\"loading\"> {{ buttonText }} </Button>\n- </div>\n- `,\n- data () {\n- return {\n- loading: false,\n- buttonText: 'Send',\n- variantColor: 'blue'\n- }\n- },\n- methods: {\n- setLoading () {\n- this.loading = true\n- setTimeout(() => {\n- this.loading = false\n- this.buttonText = 'Sent'\n- this.variantColor = 'green'\n- }, 1500)\n- }\n- }\n- }))\n",
        "date": "08.11.2019 00:44:36",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "chatgpt_zeroshot": "Remove Mortezas button from Button stories."
    },
    {
        "msg": "chore: removed unwanted logs",
        "diff": "diff --git a/packages/kiwi-core/src/Portal/index.js b/packages/kiwi-core/src/Portal/index.js @@ -19,7 +19,6 @@ const Portal = {\ncreated () {\nthis.target = createPortalTarget(this.targetNode)\nthis.targetSelector = `#${this.target.id}`\n- console.log({ target: this.target })\n},\nrender (h) {\nreturn h('mounting-portal', {\n",
        "date": "11.12.2019 03:32:31",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "chatgpt_zeroshot": "Remove console.log statement from Portal component"
    },
    {
        "msg": "chore(clones): used cloneVnodes array util",
        "diff": "diff --git a/packages/kiwi-core/src/Breadcrumb/index.js b/packages/kiwi-core/src/Breadcrumb/index.js @@ -2,7 +2,7 @@ import { ref, createElement as h } from '@vue/composition-api'\nimport { baseProps } from '../config/props'\nimport Box from '../Box'\nimport Link from '../Link'\n-import { forwardProps, cloneVNode, cloneVNodes } from '../utils'\n+import { forwardProps, cloneVNodes } from '../utils'\nconst BreadcrumbSeparator = {\nname: 'BreadcrumbSeparator',\n@@ -87,20 +87,18 @@ const BreadcrumbItem = {\nsetup (props, context) {\nreturn () => {\nconst children = context.slots.default()\n- const clones = children.map((node) => {\n- if (node.componentOptions.tag === BreadcrumbLink.name) {\n- const clone = cloneVNode(node, h)\n+ const clones = cloneVNodes(children, h).map((clone) => {\n+ if (clone.componentOptions.tag === BreadcrumbLink.name) {\nconst { propsData } = clone.componentOptions\npropsData['isCurrentPage'] = props.isCurrentPage\nclone.componentOptions.propsData = propsData\nreturn clone\n}\n- if (node.componentOptions.tag === BreadcrumbSeparator.name) {\n- const clone = cloneVNode(node, h)\n+ if (clone.componentOptions.tag === BreadcrumbSeparator.name) {\nconst { propsData } = clone.componentOptions\npropsData['spacing'] = props.spacing\npropsData['separator'] = props.separator\n- clone.componentOptions.children = node.componentOptions.children || props.separator\n+ clone.componentOptions.children = clone.componentOptions.children || props.separator\nclone.componentOptions.propsData = propsData\nreturn clone\n}\n",
        "date": "29.12.2019 06:05:57",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "chatgpt_zeroshot": "Refactor Breadcrumb component to optimize cloning process"
    },
    {
        "msg": "chore(formcontrol): add form helper text stories",
        "diff": "diff --git a/stories/33-FormControl.stories.js b/stories/33-FormControl.stories.js import { storiesOf } from '@storybook/vue'\n-import { Input, FormControl, FormLabel } from '../packages/kiwi-core/src'\n+import { Input, FormControl, FormLabel, Icon, Stack, InputGroup, InputLeftElement, InputRightElement, FormHelperText, FormErrorMessage } from '../packages/kiwi-core/src'\nstoriesOf('UI | FormControl', module)\n.add('Basic Usage', () => ({\n@@ -11,3 +11,43 @@ storiesOf('UI | FormControl', module)\n</FormControl>\n`\n}))\n+ .add('With Form Helper Text', () => ({\n+ components: { Input, FormControl, Stack, Icon, InputGroup, InputLeftElement, InputRightElement, FormHelperText },\n+ template: `\n+ <div>\n+ <FormControl isInvalid id=\"test-error\">\n+ <InputGroup>\n+ <InputLeftElement color=\"gray.300\" fontSize=\"1.2em\"><Icon name=\"lock\" /></InputLeftElement>\n+ <Input :type=\"shouldShowPassword ? 'text' : 'password'\" placeholder=\"Password\" />\n+ <InputRightElement @click.native=\"shouldShowPassword = !shouldShowPassword\" ><Icon :name=\"shouldShowPassword ? 'eye-slash' : 'eye'\" color=\"gray.500\" /></InputRightElement>\n+ </InputGroup>\n+ <FormHelperText>Add your website here</FormHelperText>\n+ </FormControl>\n+ </div>\n+ `,\n+ data () {\n+ return {\n+ shouldShowPassword: false\n+ }\n+ }\n+ }))\n+ .add('With Form Validation Message', () => ({\n+ components: { Input, FormControl, Stack, Icon, InputGroup, InputLeftElement, InputRightElement, FormErrorMessage },\n+ template: `\n+ <div>\n+ <FormControl isInvalid id=\"test-error\">\n+ <InputGroup>\n+ <InputLeftElement color=\"gray.300\" fontSize=\"1.2em\"><Icon name=\"lock\" /></InputLeftElement>\n+ <Input :type=\"shouldShowPassword ? 'text' : 'password'\" placeholder=\"Password\" />\n+ <InputRightElement @click.native=\"shouldShowPassword = !shouldShowPassword\" ><Icon :name=\"shouldShowPassword ? 'eye-slash' : 'eye'\" color=\"gray.500\" /></InputRightElement>\n+ </InputGroup>\n+ <FormErrorMessage id=\"url-error\">Website is invalid</FormErrorMessage>\n+ </FormControl>\n+ </div>\n+ `,\n+ data () {\n+ return {\n+ shouldShowPassword: false\n+ }\n+ }\n+ }))\n",
        "date": "20.02.2020 01:33:02",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "chatgpt_zeroshot": "Add Form Helper Text and Form Validation Message components to FormControl story"
    },
    {
        "msg": "chore(popover): add missing components in story",
        "diff": "diff --git a/stories/27-Popover.stories.js b/stories/27-Popover.stories.js import { storiesOf } from '@storybook/vue'\n-import { Button, Popover, PopoverTrigger, PopoverContent, DarkMode, PopoverHeader, PopoverBody, PopoverArrow, PopoverCloseButton, PopoverFooter, Box, ButtonGroup, Text } from '../packages/kiwi-core/src'\n+import { Avatar, Button, Badge, Popover, PopoverTrigger, PopoverContent, DarkMode, PopoverHeader, PopoverBody, PopoverArrow, PopoverCloseButton, PopoverFooter, Box, ButtonGroup, Text } from '../packages/kiwi-core/src'\nstoriesOf('UI | Popover', module)\n.add('Basic Usage', () => ({\n@@ -82,7 +82,7 @@ storiesOf('UI | Popover', module)\n`\n}))\n.add('Accessing Internal state', () => ({\n- components: { Button, Popover, PopoverTrigger, PopoverContent, PopoverHeader, PopoverBody, PopoverArrow, PopoverCloseButton, PopoverFooter },\n+ components: { Button, Popover, PopoverTrigger, PopoverContent, PopoverHeader, PopoverBody, PopoverArrow, PopoverCloseButton, PopoverFooter, Box },\ntemplate: `\n<Popover\ninitialFocusRef=\"#initRef\"\n@@ -115,7 +115,7 @@ storiesOf('UI | Popover', module)\n`\n}))\n.add('Customizing the Popover', () => ({\n- components: { Button, Popover, PopoverTrigger, PopoverContent, PopoverHeader, PopoverBody, PopoverArrow, PopoverCloseButton, PopoverFooter },\n+ components: { Button, Popover, PopoverTrigger, PopoverContent, PopoverHeader, PopoverBody, PopoverArrow, PopoverCloseButton, PopoverFooter, Box },\ntemplate: `\n<Popover>\n<PopoverTrigger>\n@@ -143,13 +143,13 @@ storiesOf('UI | Popover', module)\n`\n}))\n.add('Hover Trigger', () => ({\n- components: { DarkMode, KText: Text, Button, Popover, PopoverTrigger, PopoverContent, PopoverHeader, PopoverBody, PopoverArrow, PopoverCloseButton, PopoverFooter },\n+ components: { DarkMode, KText: Text, Button, Popover, PopoverTrigger, PopoverContent, PopoverHeader, PopoverBody, PopoverArrow, PopoverCloseButton, PopoverFooter, Box, Avatar, Badge },\ntemplate: `\n<Popover trigger=\"hover\">\n<PopoverTrigger>\n- <Anchor href=\"#\" color=\"blue.500\">\n+ <Button color=\"blue.500\">\nHover to see @swyx profile\n- </Anchor>\n+ </Button>\n</PopoverTrigger>\n<DarkMode>\n<PopoverContent border=\"0\" zIndex=\"4\" width=\"400px\" color=\"white\">\n",
        "date": "19.02.2020 22:45:15",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "chatgpt_zeroshot": "Add Avatar, Badge, and Box components to Popover stories."
    },
    {
        "msg": "chore(menu): add missing components in story and fix 'as' prop",
        "diff": "diff --git a/stories/26-Menu.stories.js b/stories/26-Menu.stories.js import { storiesOf } from '@storybook/vue'\n-import { Menu, MenuGroup, MenuButton, MenuList, MenuOptionGroup, MenuItemOption, MenuItem, MenuDivider } from '../packages/kiwi-core/src'\n+import { Menu, MenuGroup, MenuButton, MenuList, MenuOptionGroup, MenuItemOption, MenuItem, MenuDivider, Icon } from '../packages/kiwi-core/src'\nstoriesOf('UI | Menu', module)\n.add('Default Menu', () => ({\n- components: { Menu, MenuGroup, MenuButton, MenuList, MenuItem, MenuDivider },\n+ components: { Menu, MenuGroup, MenuButton, MenuList, MenuItem, MenuDivider, Icon },\ntemplate: `\n<Menu>\n- <MenuButton as={Button} rightIcon=\"chevron-down\">\n+ <MenuButton as=\"Button\" rightIcon=\"chevron-down\">\nActions\n</MenuButton>\n<MenuList>\n@@ -43,7 +43,7 @@ storiesOf('UI | Menu', module)\n`\n}))\n.add('With letter navigation', () => ({\n- components: { Menu, MenuGroup, MenuButton, MenuList, MenuItem, MenuDivider },\n+ components: { Menu, MenuGroup, MenuButton, MenuList, MenuItem, MenuDivider, Icon },\ntemplate: `\n<Menu>\n<MenuButton\n",
        "date": "19.02.2020 22:49:48",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "chatgpt_zeroshot": "Add Icon component to Menu component and update MenuButton component usage in stories."
    },
    {
        "msg": "chore: cleaup radio",
        "diff": "diff --git a/packages/kiwi-core/src/Radio/index.js b/packages/kiwi-core/src/Radio/index.js @@ -48,7 +48,6 @@ const Radio = {\n},\nrender (h) {\nconst children = this.$slots.default.filter(e => (e.tag || e.text))\n- // const children = this.$slots.default\nreturn h(Box, {\nprops: {\n",
        "date": "25.02.2020 10:02:13",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "chatgpt_zeroshot": "Remove unnecessary code in Radio component's render method"
    },
    {
        "msg": "chore(switch): cleared jest cache and spy works now",
        "diff": "diff --git a/packages/kiwi-core/src/Switch/tests/switch.test.js b/packages/kiwi-core/src/Switch/tests/switch.test.js @@ -32,12 +32,11 @@ it('should switch', async () => {\n})\nit('should emit a change event', async () => {\n- const events = []\n- const eventsHandler = jest.fn(evt => events.push(evt.type))\n+ const spy = jest.fn()\nconst { getByTestId } = renderComponent(\n{\nmethods: {\n- handleChange: eventsHandler\n+ handleChange: spy\n},\ntemplate: `<Toggle data-testid=\"label\" @change=\"handleChange\" /> `\n}\n@@ -45,5 +44,6 @@ it('should emit a change event', async () => {\nconst label = getByTestId('label')\nuserEvent.click(label)\n- expect(events).toEqual(['change'])\n+\n+ expect(spy).toHaveBeenCalledTimes(1)\n})\n",
        "date": "01.03.2020 03:12:13",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "chatgpt_zeroshot": "Refactor event handling in switch.test.js"
    },
    {
        "msg": "chore(tests): remove unnecessary template",
        "diff": "diff --git a/packages/kiwi-core/src/CloseButton/tests/CloseButton.test.js b/packages/kiwi-core/src/CloseButton/tests/CloseButton.test.js @@ -10,9 +10,7 @@ const renderComponent = (props) => {\nreturn render(base)\n}\nit('should render correctly', () => {\n- const { asFragment } = renderComponent({\n- template: `<CloseButton />`\n- })\n+ const { asFragment } = renderComponent()\nexpect(asFragment()).toMatchSnapshot()\n})\nit('should allow setting a custom aria-label for the button', () => {\n",
        "date": "01.03.2020 15:04:41",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "chatgpt_zeroshot": "Refactor CloseButton.test.js to remove unnecessary props in renderComponent"
    },
    {
        "msg": "chore(docs): update components list",
        "diff": "diff --git a/packages/kiwi-core/docs/components/components.js b/packages/kiwi-core/docs/components/components.js -// Dear maintainers, please arrange components alphabetically. Thanks :)\n+/**\n+ * NOTE:\n+ *\n+ * Dear maintainers,\n+ * Components listed in this file should be listed alphabetically. Thanks :)\n+ */\nconst components = [\n'Accordion',\n",
        "date": "02.03.2020 15:42:15",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "chatgpt_zeroshot": "Update components.js to remind maintainers to list components alphabetically"
    },
    {
        "msg": "chore: removed unused package",
        "diff": "diff --git a/package.json b/package.json \"babel-preset-es2015\": \"^6.24.1\",\n\"babel-preset-vue\": \"^2.0.2\",\n\"babelrc-rollup\": \"^3.0.0\",\n- \"body-scroll-lock\": \"^2.6.4\",\n\"breadstick\": \"^0.1.21\",\n\"can-use-dom\": \"^0.1.0\",\n\"color\": \"^3.1.2\",\n",
        "date": "02.03.2020 21:13:35",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "chatgpt_zeroshot": "Remove body-scroll-lock from dependencies"
    },
    {
        "msg": "chore: improve dependency tree",
        "diff": "diff --git a/package.json b/package.json \"sass-loader\": \"^8.0.0\",\n\"styled-system\": \"^5.1.2\",\n\"v-scroll-lock\": \"^1.1.0\",\n- \"vue\": \"^2.6.10\",\n\"vue-loader\": \"^15.7.1\",\n\"vue-lorem-ipsum\": \"^0.0.1\",\n\"vue-template-compiler\": \"^2.6.10\"\n",
        "date": "09.03.2020 09:12:49",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "chatgpt_zeroshot": "Remove vue dependency from package.json"
    },
    {
        "msg": "chore: remove vue-template-computer from devDeps",
        "diff": "diff --git a/package.json b/package.json \"styled-system\": \"^5.1.2\",\n\"v-scroll-lock\": \"^1.1.0\",\n\"vue-loader\": \"^15.7.1\",\n- \"vue-lorem-ipsum\": \"^0.0.1\",\n- \"vue-template-compiler\": \"^2.6.10\"\n+ \"vue-lorem-ipsum\": \"^0.0.1\"\n}\n}\n",
        "date": "09.03.2020 09:14:43",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "chatgpt_zeroshot": "Remove vue-template-compiler from dependencies"
    },
    {
        "msg": "chore(radio-group): fix radio group stories",
        "diff": "diff --git a/packages/chakra-ui-core/src/RadioButtonGroup/RadioGroup.stories.js b/packages/chakra-ui-core/src/RadioButtonGroup/RadioGroup.stories.js @@ -30,13 +30,9 @@ storiesOf('UI | RadioGroup', module)\ntemplate: `\n<div>\n<Fragment>\n- <Button @click=\"focusRadioGroup\">\n- Focus RadioGroup\n- </Button>\n<RadioGroup\nsize=\"lg\"\ndefaultValue=\"male\"\n- @change=\"handleChange\"\nref=\"rg\"\n>\n<Radio variantColor=\"red\" value=\"male\">Male</Radio>\n@@ -53,7 +49,6 @@ storiesOf('UI | RadioGroup', module)\n<Fragment>\n<RadioButtonGroup\ndefaultValue=\"item-2\"\n- @change=\"handleChange\"\nisInline\n:spacing=\"4\"\n>\n",
        "date": "15.03.2020 16:41:24",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "chatgpt_zeroshot": "Remove unnecessary Button and @change event handler from RadioGroup component"
    },
    {
        "msg": "chore: update chakra-ui/vue version",
        "diff": "diff --git a/packages/chakra-ui-docs/package.json b/packages/chakra-ui-docs/package.json }\n},\n\"dependencies\": {\n- \"@chakra-ui/vue\": \"^0.2.5\",\n+ \"@chakra-ui/vue\": \"^0.2.6\",\n\"@fortawesome/free-solid-svg-icons\": \"^5.11.2\",\n\"@fortawesome/free-brands-svg-icons\": \"^5.12.0\",\n\"@mdx-js/vue-loader\": \"^1.5.7\",\n",
        "date": "17.03.2020 20:59:09",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "chatgpt_zeroshot": "Update Chakra UI Vue version to 0.2.6"
    },
    {
        "msg": "chore: update link",
        "diff": "diff --git a/README.md b/README.md @@ -145,7 +145,7 @@ export default {\nYou can also view all developed components in **[Storybook](https://chakra-ui-vue.netlify.com)!**\n### Development for Contributing:\n-Interested in contributing? See our [open issues](/issues)! Remember to take a look at our [CONTRIBUTORS](../../.github/CONTRIBUTING.md) guide.\n+Interested in contributing? See our [open issues](https://github.com/chakra-ui/chakra-ui-vue/issues)! Remember to take a look at our [CONTRIBUTORS](../../.github/CONTRIBUTING.md) guide.\n```bash\nyarn install\n",
        "date": "17.03.2020 12:44:04",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "chatgpt_zeroshot": "Update link to open issues in README.md"
    },
    {
        "msg": "chore: remove duplicated code",
        "diff": "diff --git a/packages/chakra-ui-core/src/Editable/tests/Editable.test.js b/packages/chakra-ui-core/src/Editable/tests/Editable.test.js @@ -128,20 +128,6 @@ test('has the proper aria attributes', async () => {\nexpect(input).not.toHaveAttribute('aria-disabled')\n})\n-test('has the proper aria attributes', async () => {\n- const inlineAttrs = 'defaultValue=\"\"'\n- const { getByTestId } = renderComponent({ inlineAttrs })\n-\n- const preview = getByTestId('preview')\n-\n- await userEvent.click(preview)\n- const input = getByTestId('input')\n-\n- // preview and input do not have aria-disabled when `Editable` is not disabled\n- expect(preview).not.toHaveAttribute('aria-disabled')\n- expect(input).not.toHaveAttribute('aria-disabled')\n-})\n-\ntest('has the proper aria attributes when disabled', async () => {\nconst inlineAttrs = 'isDisabled defaultValue=\"\"'\nconst { getByTestId } = renderComponent({ inlineAttrs })\n",
        "date": "21.03.2020 16:41:18",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "chatgpt_zeroshot": "Refactor aria attributes in Editable component tests"
    },
    {
        "msg": "chore: improve Input stories",
        "diff": "diff --git a/packages/chakra-ui-core/src/Input/Input.stories.js b/packages/chakra-ui-core/src/Input/Input.stories.js @@ -20,17 +20,13 @@ storiesOf('UI | Input', module)\n/>\n`\n}))\n-\n-const variantStories = storiesOf('Input/Variants', module)\n-\n-variantStories.add('Filled', () => ({\n+ .add('Filled', () => ({\ncomponents: { Input },\ntemplate: `\n<Input variant=\"filled\" placeholder=\"Text goes here\"></Input>\n`\n}))\n-\n-variantStories.add('Filled', () => ({\n+ .add('Filled w/ custom focus and error border colors', () => ({\ncomponents: { Input },\ntemplate: `\n<Input\n",
        "date": "23.03.2020 16:17:08",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "chatgpt_zeroshot": "Refactor Input stories to use chaining syntax"
    },
    {
        "msg": "chore: updated components list",
        "diff": "diff --git a/packages/chakra-ui-docs/components/components.js b/packages/chakra-ui-docs/components/components.js @@ -23,7 +23,7 @@ const components = [\n'ControlBox',\n'Divider',\n'Drawer',\n- // 'Editable',\n+ 'Editable',\n'Flex',\n'FormControl',\n'Grid',\n@@ -45,7 +45,7 @@ const components = [\n'Select',\n'Slider',\n'Spinner',\n- // 'Stat',\n+ 'Stat',\n'Stack',\n'Switch',\n'Tabs',\n",
        "date": "01.04.2020 00:58:14",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "chatgpt_zeroshot": "Enable Editable and Stat components in components.js"
    },
    {
        "msg": "chore: update extends for accordion",
        "diff": "diff --git a/packages/chakra-ui-core/src/CAccordion/CAccordion.js b/packages/chakra-ui-core/src/CAccordion/CAccordion.js @@ -302,7 +302,7 @@ const CAccordionHeader = {\n* The container for the accordion item\n* details to be revealed.\n*\n- * @extends CPseudoBox\n+ * @extends CBox\n* @see Docs https://vue.chakra-ui.com/accordion\n*/\nconst CAccordionPanel = {\n@@ -342,7 +342,7 @@ const CAccordionPanel = {\n* A chevron-down icon that rotates based on the\n* expanded/collapsed state.\n*\n- * @extends CPseudoBox\n+ * @extends CIcon\n* @see Docs https://vue.chakra-ui.com/accordion\n*/\nconst CAccordionIcon = {\n",
        "date": "01.04.2020 02:00:38",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "chatgpt_zeroshot": "Refactor CAccordion components to extend CBox and CIcon for better consistency."
    },
    {
        "msg": "chore: props'",
        "diff": "diff --git a/packages/chakra-ui-core/src/config/props/props.js b/packages/chakra-ui-core/src/config/props/props.js @@ -153,8 +153,7 @@ const baseProps = {\ngridTemplateRows: SNA,\ngridTemplateColumns: SNA,\nopacity: SNA,\n- letterSpacing: SNA,\n- flexShrink: SNA\n+ letterSpacing: SNA\n}\nexport default baseProps\n",
        "date": "05.04.2020 17:42:45",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "chatgpt_zeroshot": "Remove flexShrink from baseProps configuration"
    },
    {
        "msg": "chore: update button storybook",
        "diff": "diff --git a/packages/chakra-ui-core/src/CButton/CButton.stories.js b/packages/chakra-ui-core/src/CButton/CButton.stories.js @@ -122,9 +122,7 @@ storiesOf('UI | Button', module)\nthis.loading = true\nsetTimeout(() => {\nthis.loading = false\n- // this.buttonText = 'Sent'\n- // this.variantColor = 'green'\n- }, 60000)\n+ }, 3000)\n}\n}\n}))\n",
        "date": "08.04.2020 13:18:54",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "chatgpt_zeroshot": "Reduce loading time for button in CButton.stories.js"
    },
    {
        "msg": "chore: update component export names",
        "diff": "diff --git a/packages/chakra-ui-core/src/CAlertDialog/CAlertDialog.js b/packages/chakra-ui-core/src/CAlertDialog/CAlertDialog.js @@ -107,7 +107,7 @@ const CAlertDialogContent = {\n* @see Docs https://vue.chakra-ui.com/alertdialog\n*/\nconst CAlertDialogOverlay = CModalOverlay\n-\n+CAlertDialogOverlay.name = 'CAlertDialogOverlay'\n/**\n* CAlertDialogBody component\n*\n@@ -117,6 +117,7 @@ const CAlertDialogOverlay = CModalOverlay\n* @see Docs https://vue.chakra-ui.com/alertdialog\n*/\nconst CAlertDialogBody = CModalBody\n+CAlertDialogBody.name = 'CAlertDialogBody'\n/**\n* CAlertDialogHeader component\n@@ -127,6 +128,7 @@ const CAlertDialogBody = CModalBody\n* @see Docs https://vue.chakra-ui.com/alertdialog\n*/\nconst CAlertDialogHeader = CModalHeader\n+CAlertDialogHeader.name = 'CAlertDialogHeader'\n/**\n* CAlertDialogFooter component\n@@ -137,6 +139,7 @@ const CAlertDialogHeader = CModalHeader\n* @see Docs https://vue.chakra-ui.com/alertdialog\n*/\nconst CAlertDialogFooter = CModalFooter\n+CAlertDialogFooter.name = 'CAlertDialogFooter'\n/**\n* CAlertDialogCloseButton component\n@@ -147,6 +150,7 @@ const CAlertDialogFooter = CModalFooter\n* @see Docs https://vue.chakra-ui.com/alertdialog\n*/\nconst CAlertDialogCloseButton = CModalCloseButton\n+CAlertDialogCloseButton.name = 'CAlertDialogCloseButton'\nexport {\nCAlertDialog,\n",
        "date": "12.04.2020 13:20:02",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "chatgpt_zeroshot": "Add name property to CAlertDialog components"
    },
    {
        "msg": "chore: added deps",
        "diff": "diff --git a/packages/chakra-ui-docs/package.json b/packages/chakra-ui-docs/package.json \"dotenv-defaults\": \"^1.1.1\",\n\"emotion\": \"^10.0.27\",\n\"file-contributors\": \"^1.0.2\",\n+ \"mdx-vue\": \"^1.0.2\",\n+ \"mdx-vue-loader\": \"^1.0.2\",\n\"node-sass\": \"^4.13.1\",\n\"nuxt\": \"^2.0.0\",\n\"prismjs\": \"^1.19.0\",\n",
        "date": "12.04.2020 18:50:02",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "chatgpt_zeroshot": "Add mdx-vue and mdx-vue-loader dependencies"
    },
    {
        "msg": "chore: update circular progress jsdo",
        "diff": "diff --git a/packages/chakra-ui-core/src/CCircularProgress/CCircularProgress.js b/packages/chakra-ui-core/src/CCircularProgress/CCircularProgress.js +/**\n+ * Hey! Welcome to @chakra-ui/vue CircularProgress\n+ *\n+ * The Circular Progress component is used to indicates the progress for both determinate and indeterminate processes.\n+ *\n+ * @see Docs https://vue.chakra-ui.com/circularprogress\n+ * @see Source https://github.com/chakra-ui/chakra-ui-vue/blob/master/packages/chakra-ui-core/src/CCircularProgress/CCircularProgress.js\n+ * @see A11y https://github.com/chakra-ui/chakra-ui-vue/blob/master/packages/chakra-ui-core/src/CCircularProgress/accessibility.md\n+ */\n+\n+\nimport { baseProps } from '../config/props'\nimport { forwardProps } from '../utils'\nimport { getComputedProps } from './utils/circularprogress.styles'\nimport CBox from '../CBox'\n+/**\n+ * CCircularProgress component\n+ *\n+ * The test label that displays the progress percentage in the `CCircularProgress`\n+ *\n+ * @extends CBox\n+ * @see Docs https://vue.chakra-ui.com/circularprogress\n+ */\nconst CCircularProgressLabel = {\nname: 'CCircularProgressLabel',\nprops: baseProps,\n@@ -25,6 +44,14 @@ const CCircularProgressLabel = {\n}\n}\n+/**\n+ * CCircularProgressLabel component\n+ *\n+ * Indicates the progress for both determinate and indeterminate processes.\n+ *\n+ * @extends CBox\n+ * @see Docs https://vue.chakra-ui.com/circularprogress\n+ */\nconst CCircularProgress = {\nname: 'CCircularProgress',\ninject: ['$chakraColorMode'],\n",
        "date": "16.04.2020 21:53:12",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "chatgpt_zeroshot": "Add CCircularProgress and CCircularProgressLabel components with documentation and props."
    },
    {
        "msg": "chore: add circularprogress component sig",
        "diff": "diff --git a/packages/chakra-ui-core/src/CCircularProgress/CCircularProgress.js b/packages/chakra-ui-core/src/CCircularProgress/CCircularProgress.js * @see A11y https://github.com/chakra-ui/chakra-ui-vue/blob/master/packages/chakra-ui-core/src/CCircularProgress/accessibility.md\n*/\n-\nimport { baseProps } from '../config/props'\nimport { forwardProps } from '../utils'\nimport { getComputedProps } from './utils/circularprogress.styles'\n@@ -39,6 +38,9 @@ const CCircularProgressLabel = {\ntransform: 'translate(-50%, -50%)',\nfontSize: '0.25em',\n...forwardProps(this.$props)\n+ },\n+ attrs: {\n+ 'data-chakra-component': 'CCircularProgressLabel'\n}\n}, this.$slots.default)\n}\n@@ -126,7 +128,10 @@ const CCircularProgress = {\n...rootData.props,\n...forwardProps(this.$props)\n},\n- attrs: rootData.attrs\n+ attrs: {\n+ ...rootData.attrs,\n+ 'data-chakra-component': 'CCircularProgress'\n+ }\n}, [\nh(CBox, {\nprops: svgData.props,\n",
        "date": "16.04.2020 21:55:06",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "chatgpt_zeroshot": "Add data-chakra-component attribute to CCircularProgress and CCircularProgressLabel components"
    },
    {
        "msg": "chore(controlbox): update controlbox jsdoc strategy",
        "diff": "diff --git a/packages/chakra-ui-core/src/CControlBox/CControlBox.js b/packages/chakra-ui-core/src/CControlBox/CControlBox.js *\n* ControlBox provides style props to change it's styles based\n* on a sibling checkbox or radio input.\n- * It relies on a common [CSS technique](https://dev.to/lkopacz/create-custom-keyboard-accessible-checkboxes-2036)\n+ *\n+ * In order to keep prerve accessiblity, it relies on a common\n+ * [CSS technique](https://dev.to/lkopacz/create-custom-keyboard-accessible-checkboxes-2036)\n* for styling custom controls.\n*\n* > For this component to work, it should have a sibling input and be contained in a label\n",
        "date": "16.04.2020 23:35:18",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "chatgpt_zeroshot": "Refactor ControlBox component for improved accessibility"
    },
    {
        "msg": "chore(divider): review divider",
        "diff": "diff --git a/packages/chakra-ui-core/src/CDivider/CDivider.js b/packages/chakra-ui-core/src/CDivider/CDivider.js +/**\n+ * Hey! Welcome to @chakra-ui/vue Divider\n+ *\n+ * Dividers are used to display a thin horizontal or vertical line.\n+ *\n+ * @see Docs https://vue.chakra-ui.com/divider\n+ * @see Source https://github.com/chakra-ui/chakra-ui-vue/blob/master/packages/chakra-ui-core/src/CDivider/CDivider.js\n+ */\n+\nimport CBox from '../CBox'\nimport { baseProps } from '../config/props'\nimport { forwardProps } from '../utils'\n+/**\n+ * CDivider component\n+ *\n+ * Creates a horizontal or vertical dividing rule between sibling\n+ * elements\n+ *\n+ * @extends CBox\n+ * @see Docs https://vue.chakra-ui.com/divider\n+ */\nconst CDivider = {\nname: 'CDivider',\nprops: {\n",
        "date": "16.04.2020 23:38:25",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "chatgpt_zeroshot": "Add documentation and comments to CDivider component"
    },
    {
        "msg": "chore(divider): update divider a11y",
        "diff": "diff --git a/packages/chakra-ui-core/src/CDivider/CDivider.js b/packages/chakra-ui-core/src/CDivider/CDivider.js *\n* @see Docs https://vue.chakra-ui.com/divider\n* @see Source https://github.com/chakra-ui/chakra-ui-vue/blob/master/packages/chakra-ui-core/src/CDivider/CDivider.js\n+ * @see A11y https://github.com/chakra-ui/chakra-ui-vue/blob/master/packages/chakra-ui-core/src/CDivider/accessibility.md\n*/\nimport CBox from '../CBox'\n@@ -45,7 +46,8 @@ const CDivider = {\n...forwardProps(this.$props)\n},\nattrs: {\n- 'aria-orientation': this.orientation\n+ 'aria-orientation': this.orientation,\n+ 'data-chakra-component': 'CDivider'\n}\n})\n}\n",
        "date": "16.04.2020 23:43:19",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "chatgpt_zeroshot": "Add accessibility attributes and data-chakra-component to CDivider component"
    },
    {
        "msg": "chore: docs service worker update",
        "diff": "diff --git a/packages/chakra-ui-docs/static/sw.js b/packages/chakra-ui-docs/static/sw.js -importScripts('https://cdn.jsdelivr.net/npm/workbox-cdn@4.3.1/workbox/workbox-sw.js')\n-\n-// --------------------------------------------------\n-// Configure\n-// --------------------------------------------------\n-\n-// Set workbox config\n-workbox.setConfig({\n- 'debug': false\n-})\n-\n-// Start controlling any existing clients as soon as it activates\n-workbox.core.clientsClaim()\n-\n-// Skip over the SW waiting lifecycle stage\n-workbox.core.skipWaiting()\n-\n-workbox.precaching.cleanupOutdatedCaches()\n-\n-// --------------------------------------------------\n-// Precaches\n-// --------------------------------------------------\n-\n-// Precache assets\n-\n-// --------------------------------------------------\n-// Runtime Caching\n-// --------------------------------------------------\n-\n-// Register route handlers for runtimeCaching\n-workbox.routing.registerRoute(new RegExp('/_nuxt/'), new workbox.strategies.CacheFirst({}), 'GET')\n-workbox.routing.registerRoute(new RegExp('/'), new workbox.strategies.NetworkFirst({}), 'GET')\n+// THIS FILE SHOULD NOT BE VERSION CONTROLLED\n",
        "date": "18.04.2020 23:33:30",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "chatgpt_zeroshot": "Remove workbox configuration and precaching from service worker file"
    },
    {
        "msg": "chore: remove defaultIsChecked from story",
        "diff": "diff --git a/packages/chakra-ui-core/src/CRadio/CRadio.stories.js b/packages/chakra-ui-core/src/CRadio/CRadio.stories.js @@ -6,7 +6,7 @@ storiesOf('UI | Radio', module)\ncomponents: { CFragment, CRadio },\ntemplate: `\n<div>\n- <CRadio value=\"male\" v-model=\"maleChecked\" defaultIsChecked name=\"bee\">\n+ <CRadio value=\"male\" v-model=\"maleChecked\" name=\"bee\">\nMale\n</CRadio>\n<CRadio ml=\"3\" value=\"female\" name=\"bee\">\n",
        "date": "24.04.2020 11:51:37",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "chatgpt_zeroshot": "Remove defaultIsChecked prop from CRadio component in CRadio.stories.js"
    },
    {
        "msg": "chore: add lorem-ipsum to docs deps",
        "diff": "diff --git a/packages/chakra-ui-docs/package.json b/packages/chakra-ui-docs/package.json \"sass-loader\": \"^8.0.2\",\n\"vue\": \"^2.6.11\",\n\"vue-live\": \"^1.5.1\",\n+ \"vue-lorem-ipsum\": \"^0.0.1\",\n\"vue-meta\": \"^2.3.3\",\n\"vue-prism-editor\": \"^0.5.1\",\n\"vue-router\": \"^3.1.5\"\n",
        "date": "03.05.2020 00:26:35",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "chatgpt_zeroshot": "Add vue-lorem-ipsum package to dependencies"
    },
    {
        "msg": "chore: added source mapping",
        "diff": "diff --git a/jest.config.js b/jest.config.js @@ -15,6 +15,7 @@ module.exports = {\n],\nmoduleNameMapper: {\n'^@/(.*)$': '<rootDir>/$1',\n+ '@chakra-ui/theme-vue': require.resolve('./packages/chakra-ui-theme/src/index.js'),\n'\\\\.css$': require.resolve('./tests/test-utils/style-mock.js'),\n'breadstick': require.resolve('./tests/test-utils/module-mock.js')\n},\n",
        "date": "08.05.2020 15:08:10",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "chatgpt_zeroshot": "Add Chakra UI Vue theme to Jest module mapper"
    },
    {
        "msg": "chore: udpate readme",
        "diff": "diff --git a/packages/chakra-ui-core/README.md b/packages/chakra-ui-core/README.md @@ -176,7 +176,7 @@ yarn dev\n- [Chakra UI for React](https://github.com/chakra-ui/chakra-ui)\n- [Vuetify](https://vuetifyjs.org)\n- [Buefy](https://buefy.org)\n-- [Vuesax](https://lusaxweb.github.io/vuesax/)\n+- [Vuesax](https://lusaxweb.github.io/vuesax)\n<a id=\"contributors\"></a>\nCreated by [Jonathan Bakebwa](https://twitter.com/codebender828)\n\\ No newline at end of file\n",
        "date": "09.05.2020 18:21:08",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "chatgpt_zeroshot": "Remove trailing slash from Vuesax link in README.md"
    },
    {
        "msg": "chore: bootstrap ci",
        "diff": "diff --git a/.github/workflows/nodejs.yml b/.github/workflows/nodejs.yml @@ -24,7 +24,8 @@ jobs:\nuses: actions/setup-node@v1\nwith:\nnode-version: ${{ matrix.node-version }}\n- - run: yarn bootstrap --frozen-lockfile\n+ - run: yarn install --frozen-lockfile\n+ - run: yarn bootstrap\n- run: yarn build --if-present\n- run: yarn test\nenv:\n",
        "date": "09.05.2020 18:35:53",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "chatgpt_zeroshot": "Update yarn commands in nodejs workflow"
    },
    {
        "msg": "chore: cleanup router",
        "diff": "diff --git a/packages/chakra-ui-docs/router.js b/packages/chakra-ui-docs/router.js @@ -45,12 +45,5 @@ export function createRouter () {\nmixpanel.init(MIXPANEL_TOKEN)\nVue.prototype.$mixpanel = mixpanel\n-\n- // router.afterEach(to => {\n- // (process.env.NODE_ENV !== 'production') && console.log({ to })\n- // const { path: page, ...rest } = to\n- // mixpanel.track('Page View', { page, ...rest })\n- // })\n-\nreturn router\n}\n",
        "date": "10.05.2020 21:02:17",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "chatgpt_zeroshot": "Remove commented out code for tracking page views in router."
    },
    {
        "msg": "chore: error handling for routr guards",
        "diff": "diff --git a/packages/chakra-ui-docs/plugins/analytics.js b/packages/chakra-ui-docs/plugins/analytics.js import Vue from 'vue'\nimport mixpanel from 'mixpanel-browser'\n-const MIXPANEL_TOKEN = process.env.MIXPANEL_TOKEN\n-\n-mixpanel.init(MIXPANEL_TOKEN)\n-\n-export default ({ app }) => {\n+export default ({ app, env }) => {\n+ try {\n+ mixpanel.init(env.MIXPANEL_TOKEN)\nVue.prototype.$mixpanel = mixpanel\n+ } catch (error) {\n+ console.error('Error initializing docs analytics', error)\n+ }\napp.router.afterEach(to => {\ntry {\n",
        "date": "10.05.2020 21:27:59",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "chatgpt_zeroshot": "Initialize Mixpanel with environment variable in analytics plugin"
    },
    {
        "msg": "chore: remove logs from watcher",
        "diff": "diff --git a/packages/chakra-ui-docs/layouts/default.vue b/packages/chakra-ui-docs/layouts/default.vue @@ -167,7 +167,6 @@ export default {\nwatch: {\n'$route.path' (newVal) {\nthis.$nextTick(() => {\n- console.log(this.$refs.docContainer)\nthis.$refs.docContainer.$el.scrollTo(0, 0)\n})\n}\n",
        "date": "10.05.2020 22:10:21",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "chatgpt_zeroshot": "Remove console.log statement in watch function"
    },
    {
        "msg": "chore: defer file-contributions tasks",
        "diff": "diff --git a/packages/chakra-ui-docs/layouts/default.vue b/packages/chakra-ui-docs/layouts/default.vue <Nuxt id=\"page-content\" />\n</keep-alive>\n<Footer v-if=\"$route.path === '/'\" />\n- <!-- <FileContributors /> -->\n+ <FileContributors />\n</CBox>\n</CFlex>\n</CBox>\n@@ -52,14 +52,14 @@ import MDXComponents from '../components/MDXComponents'\nimport Navbar from '../components/Navbar'\nimport Sidebar from '../components/Sidebar'\nimport Footer from '../components/Footer'\n-// import FileContributors from '../components/FileContributors'\n+import FileContributors from '../components/FileContributors'\n// import { stringToUrl } from '../utils'\nexport default {\nname: 'DefaultLayout',\ncomponents: {\n- // FileContributors,\n+ FileContributors,\nMDXProvider,\nCThemeProvider,\nCColorModeProvider,\n",
        "date": "12.05.2020 20:11:49",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "chatgpt_zeroshot": "Enable FileContributors component in DefaultLayout"
    },
    {
        "msg": "chore: upgraded root dep",
        "diff": "diff --git a/package.json b/package.json \"@babel/plugin-transform-modules-commonjs\": \"^7.7.4\",\n\"@babel/plugin-transform-parameters\": \"^7.7.4\",\n\"@babel/preset-env\": \"^7.9.5\",\n- \"@chakra-ui/vue\": \"^0.4.1\",\n+ \"@chakra-ui/vue\": \"^0.5.2\",\n\"@commitlint/cli\": \"^8.2.0\",\n\"@commitlint/config-conventional\": \"^8.2.0\",\n\"@fortawesome/free-brands-svg-icons\": \"^5.12.0\",\n",
        "date": "12.05.2020 20:30:23",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "chatgpt_zeroshot": "Update Chakra UI Vue to version 0.5.2"
    },
    {
        "msg": "chore: update scripts for nuxt module",
        "diff": "diff --git a/packages/nuxt-chakra/package.json b/packages/nuxt-chakra/package.json \"dev\": \"nuxt example\",\n\"lint\": \"eslint --ext .js,.vue .\",\n\"release\": \"yarn test && standard-version\",\n- \"test\": \"yarn lint && jest\"\n+ \"test\": \"jest\"\n},\n\"dependencies\": {\n\"@chakra-ui/vue\": \"^0.5.3\",\n",
        "date": "16.05.2020 18:30:24",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "chatgpt_zeroshot": "Remove linting from test script in package.json"
    },
    {
        "msg": "chore: eslint doing what eslint does",
        "diff": "diff --git a/packages/chakra-ui-core/src/Chakra/index.js b/packages/chakra-ui-core/src/Chakra/index.js +import VScrollLock from 'v-scroll-lock'\n+import { merge } from 'lodash-es'\nimport { parsePackIcons } from '../utils/icons'\nimport internalIcons from '../lib/internal-icons'\nimport defaultTheme from '../../../chakra-ui-theme/src'\n-import VScrollLock from 'v-scroll-lock'\n-import { merge } from 'lodash-es'\nimport useToast from '../CToast'\n/**\n",
        "date": "16.05.2020 20:26:25",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "chatgpt_zeroshot": "Add imports for VScrollLock, merge, and parsePackIcons, and remove duplicate imports."
    },
    {
        "msg": "chore: remove test from postinstall script",
        "diff": "diff --git a/package.json b/package.json ]\n},\n\"scripts\": {\n- \"postinstall\": \"yarn test && yarn build:dev && yarn theme:dev && lerna link\",\n+ \"postinstall\": \"yarn build:dev && yarn theme:dev && lerna link\",\n\"build:dev\": \"yarn workspace @chakra-ui/vue run rollup --config rollup.dev.config.js\",\n\"build\": \"yarn workspace @chakra-ui/vue build\",\n\"dev\": \"yarn workspace @chakra-ui/vue dev\",\n",
        "date": "16.05.2020 20:39:32",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "chatgpt_zeroshot": "Remove test command from postinstall script"
    },
    {
        "msg": "chore: add story for stack nested flex",
        "diff": "diff --git a/packages/chakra-ui-core/src/CStack/CStack.stories.js b/packages/chakra-ui-core/src/CStack/CStack.stories.js import { storiesOf } from '@storybook/vue'\n-import { CHeading, CText, CStack, CBox } from '..'\n+import { CHeading, CText, CStack, CBox, CFlex, CIcon } from '..'\nstoriesOf('UI | Stack', module)\n.add('With vertical stack', () => ({\n@@ -36,3 +36,20 @@ storiesOf('UI | Stack', module)\n</div>\n`\n}))\n+ .add('Nesting Flex in stack', () => ({\n+ components: { CHeading, CText, CStack, CBox, CFlex, CIcon },\n+ template: `\n+ <div>\n+ <c-stack is-inline spacing=\"3\">\n+ <c-flex align-items=\"center\">\n+ <c-icon mr=\"3\" name=\"sun\" />\n+ <c-text>Kitchener, ON, Canada</c-text>\n+ </c-flex>\n+ <c-flex align-items=\"center\">\n+ <c-icon mr=\"3\" name=\"sun\" />\n+ <c-text>Kitchener, ON, Canada</c-text>\n+ </c-flex>\n+ </c-stack>\n+ </div>\n+ `\n+ }))\n",
        "date": "17.05.2020 14:07:15",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "chatgpt_zeroshot": "Add CFlex and CIcon components to CStack.stories.js and demonstrate nesting Flex in stack."
    },
    {
        "msg": "chore: removed comment for test",
        "diff": "diff --git a/packages/nuxt-chakra/test/module.spec.js b/packages/nuxt-chakra/test/module.spec.js const { setup, loadConfig, get } = require('@nuxtjs/module-test-utils')\nconst customTheme = require('../example/utils/theme')\n-/**\n- * nuxtjs/module-test-utils is unable\n- * to fully support some of the recent nuxtjs\n- * features like module resolving inside the\n- * nuxt module.\n- *\n- * Without this working properly\n- * it makes developing on top of the tests\n- * unreliable.\n- *\n- * I've spoken to the Nuxt team about this\n- * and I they're making some improvemtns\n- * to the @nuxtjs/module-test-utils\n- * package.\n- *\n- * Since this is still something to be\n- * improved, I hope to run these tests again.re\n- *\n- * Contributions are welcome!\n- */\n+\ndescribe('module', () => {\nlet nuxt\n",
        "date": "08.06.2020 09:10:36",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "chatgpt_zeroshot": "Fix issue with @nuxtjs/module-test-utils and update module.spec.js"
    },
    {
        "msg": "chore: fix lint errs",
        "diff": "diff --git a/packages/chakra-ui-core/src/CAspectRatioBox/tests/CAspectRatioBox.test.js b/packages/chakra-ui-core/src/CAspectRatioBox/tests/CAspectRatioBox.test.js @@ -23,12 +23,12 @@ const renderComponent = (props) => {\nfunction getElementStyles (selector) {\nselector = new RegExp(selector)\nlet styles = []\n- let i; let j; let sel = selector\n+ let i; let j; const sel = selector\nfor (i = 0; i < document.styleSheets.length; ++i) {\nfor (j = 0; j < document.styleSheets[i].cssRules.length; ++j) {\nif (sel.test(document.styleSheets[i].cssRules[j].selectorText)) {\n// let selectorText = document.styleSheets[i].cssRules[j].selectorText\n- let cssText = document.styleSheets[i].cssRules[j].style.cssText\n+ const cssText = document.styleSheets[i].cssRules[j].style.cssText\nstyles += cssText\n}\n}\n@@ -49,8 +49,8 @@ it('should render correctly', () => {\n`.trim())\n})\n-it('should have correct styles', async () => {\n- const inlineAttrs = `:ratio=\"2\"`\n+it('should have correct styles', () => {\n+ const inlineAttrs = ':ratio=\"2\"'\nrenderComponent({ inlineAttrs })\nconst image = screen.getByTestId('image')\nconst aspectRatioBox = screen.getByTestId('aspectRatioBox')\n",
        "date": "13.06.2020 16:20:37",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "chatgpt_zeroshot": "Refactor getElementStyles function and update test case in CAspectRatioBox test file"
    },
    {
        "msg": "chore: remove unused screen",
        "diff": "diff --git a/packages/chakra-ui-core/src/CButtonGroup/tests/CButtonGroup.test.js b/packages/chakra-ui-core/src/CButtonGroup/tests/CButtonGroup.test.js import { CButton, CButtonGroup } from '../..'\n-import { render, screen } from '@/tests/test-utils'\n+import { render } from '@/tests/test-utils'\nconst renderComponent = (props) => {\nconst base = {\n",
        "date": "04.07.2020 16:16:25",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "chatgpt_zeroshot": "Remove unnecessary import of screen from test-utils in CButtonGroup.test.js"
    },
    {
        "msg": "chore: fix eslint errors (husky didnt check for some reason)",
        "diff": "diff --git a/packages/chakra-ui-core/src/CAccordion/tests/CAccordion.test.js b/packages/chakra-ui-core/src/CAccordion/tests/CAccordion.test.js import { CAccordion, CAccordionItem, CAccordionHeader, CAccordionPanel, CAccordionIcon } from '..'\n-import { render, userEvent, fireEvent, screen } from '@/tests/test-utils'\n+import { render, userEvent, screen } from '@/tests/test-utils'\nconst renderComponent = (props) => {\nconst base = {\n@@ -177,7 +177,6 @@ it('tab moves focus to the next focusable element', async () => {\nexpect(last).toHaveFocus()\n})\n-\nit('shift+tab moves focus to the previous focusable element', async () => {\nrenderComponent({\ntemplate: `\n",
        "date": "04.07.2020 16:59:26",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "chatgpt_zeroshot": "Remove unnecessary import and fireEvent from CAccordion.test.js"
    },
    {
        "msg": "chore: added skipped test",
        "diff": "diff --git a/packages/chakra-ui-core/src/CAspectRatioBox/tests/CAspectRatioBox.test.js b/packages/chakra-ui-core/src/CAspectRatioBox/tests/CAspectRatioBox.test.js @@ -14,7 +14,7 @@ const renderComponent = (props) => {\nreturn render(base)\n}\n-xit('should render correctly', () => {\n+it('should render correctly', () => {\nconst inlineAttrs = ':ratio=\"1\"'\nconst { asFragment } = renderComponent({ inlineAttrs })\nexpect(asFragment()).toMatchSnapshot()\n",
        "date": "12.07.2020 18:53:50",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "chatgpt_zeroshot": "Fix test case for rendering correctly in CAspectRatioBox"
    },
    {
        "msg": "chore: removed unused comments",
        "diff": "diff --git a/packages/chakra-ui-core/src/CImage/CImage.js b/packages/chakra-ui-core/src/CImage/CImage.js @@ -76,9 +76,6 @@ const CImage = {\nreturn h(CNoSsr, [\nh('img', {\nclass: this.className,\n- // domProps: {\n- // ...imageProps\n- // },\nattrs: {\n...imageProps,\n...this.computedAttrs,\n",
        "date": "12.07.2020 19:16:21",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "chatgpt_zeroshot": "Remove commented out code in CImage component"
    },
    {
        "msg": "chore: add template literal indent rule to eslint config",
        "diff": "diff --git a/.eslintrc.js b/.eslintrc.js @@ -17,7 +17,18 @@ module.exports = {\ncurly: 'off',\n'testing-library/no-debug': 'error',\n'testing-library/prefer-screen-queries': 'error',\n- 'testing-library/await-fire-event': 'error'\n+ 'testing-library/await-fire-event': 'error',\n+ indent: [\n+ 'error',\n+ 2,\n+ {\n+ SwitchCase: 1,\n+ ignoredNodes: [\n+ 'TemplateLiteral'\n+ ]\n+ }\n+ ],\n+ 'template-curly-spacing': 0\n},\nparserOptions: {\nparser: 'babel-eslint'\n",
        "date": "15.07.2020 00:42:16",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "chatgpt_zeroshot": "Add indent rule and update template-curly-spacing rule in ESLint config"
    },
    {
        "msg": "chore: Fixes props validator issue with CBotton component, when size set to \"xs\".",
        "diff": "diff --git a/packages/chakra-ui-core/src/CButton/utils/button.props.js b/packages/chakra-ui-core/src/CButton/utils/button.props.js @@ -33,7 +33,7 @@ export const buttonProps = {\nsize: {\ntype: String,\ndefault: 'md',\n- validator: value => value.match(/^(sm|md|lg)$/)\n+ validator: value => value.match(/^(xs|sm|md|lg)$/)\n},\nloadingText: {\ntype: String,\n",
        "date": "18.07.2020 16:20:57",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "chatgpt_zeroshot": "Update button size validator to include 'xs' size option"
    },
    {
        "msg": "chore(flex-grow): add story to showcase flexgrow and border style props",
        "diff": "diff --git a/packages/chakra-ui-core/src/CFlex/CFlex.stories.js b/packages/chakra-ui-core/src/CFlex/CFlex.stories.js @@ -25,15 +25,16 @@ storiesOf('UI | Flex', module)\n.add('Flex grow', () => ({\ncomponents: { CFlex, CBox, CText },\ntemplate: `\n- <CFlex align=\"center\">\n- <CBox rounded-top=\"lg\" p=\"3\" w=\"20\" mr=\"3\" h=\"20\" bg=\"blue.100\">1</CBox>\n- <CBox rounded-right=\"lg\" p=\"3\" w=\"20\" mr=\"3\" h=\"20\" bg=\"blue.100\">2</CBox>\n- <CBox rounded-bottom=\"lg\" p=\"3\" w=\"20\" mr=\"3\" h=\"20\" bg=\"blue.100\">3</CBox>\n- <CBox rounded-right=\"lg\" p=\"3\" w=\"20\" mr=\"3\" h=\"20\" bg=\"blue.100\">4</CBox>\n- <CBox border-top-right-radius=\"lg\" p=\"3\" w=\"20\" mr=\"3\" h=\"20\" bg=\"blue.100\">5</CBox>\n- <CBox border-top-left-radius=\"lg\" p=\"3\" w=\"20\" mr=\"3\" h=\"20\" bg=\"blue.100\">6</CBox>\n- <CBox border-bottom-right-radius=\"lg\" p=\"3\" w=\"20\" mr=\"3\" h=\"20\" bg=\"blue.100\">7</CBox>\n- <CBox border-bottom-left-radius=\"lg\" p=\"3\" w=\"20\" h=\"20\" bg=\"blue.100\">8</CBox>\n+ <CFlex w=\"600px\" align=\"center\">\n+ <CBox flex-grow=\"2\" w=\"10\" mr=\"3\" h=\"10\" bg=\"blue.100\">1</CBox>\n+ <CBox rounded-top=\"lg\" w=\"10\" mr=\"3\" h=\"10\" bg=\"blue.100\">1</CBox>\n+ <CBox rounded-right=\"lg\" w=\"10\" mr=\"3\" h=\"10\" bg=\"blue.100\">2</CBox>\n+ <CBox rounded-bottom=\"lg\" w=\"10\" mr=\"3\" h=\"10\" bg=\"blue.100\">3</CBox>\n+ <CBox rounded-right=\"lg\" w=\"10\" mr=\"3\" h=\"10\" bg=\"blue.100\">4</CBox>\n+ <CBox border-top-right-radius=\"lg\" w=\"10\" mr=\"3\" h=\"10\" bg=\"blue.100\">5</CBox>\n+ <CBox border-top-left-radius=\"lg\" w=\"10\" mr=\"3\" h=\"10\" bg=\"blue.100\">6</CBox>\n+ <CBox border-bottom-right-radius=\"lg\" w=\"10\" mr=\"3\" h=\"10\" bg=\"blue.100\">7</CBox>\n+ <CBox border-bottom-left-radius=\"lg\" w=\"10\" h=\"10\" bg=\"blue.100\">8</CBox>\n</CFlex>\n`\n}))\n",
        "date": "15.09.2020 20:17:50",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "chatgpt_zeroshot": "Refactor CFlex component to use flex-grow property for better layout flexibility"
    },
    {
        "msg": "chore: bump package version",
        "diff": "diff --git a/packages/chakra-ui-core/CHANGELOG.md b/packages/chakra-ui-core/CHANGELOG.md # Change Log\n+## 0.6.3\n+\n+### Patch Changes\n+\n+- fix: includes missing style props for border-radius and flex-grow style declarations\"\n+\n## 0.6.2\n### Patch Changes\n",
        "date": "15.09.2020 20:20:31",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "chatgpt_zeroshot": "Fix missing style props for border-radius and flex-grow style declarations in version 0.6.3"
    },
    {
        "msg": "chore: bump docs version",
        "diff": "diff --git a/website/package.json b/website/package.json },\n\"dependencies\": {\n\"@chakra-ui/theme-vue\": \"^0.2.7\",\n- \"@chakra-ui/vue\": \"^0.6.4\",\n+ \"@chakra-ui/vue\": \"^0.6.5\",\n\"@fortawesome/free-brands-svg-icons\": \"^5.12.0\",\n\"@fortawesome/free-solid-svg-icons\": \"^5.11.2\",\n\"@mdx-js/vue-loader\": \"^1.6.1\",\n",
        "date": "15.09.2020 22:29:14",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "chatgpt_zeroshot": "Update Chakra UI Vue dependency to version 0.6.5"
    },
    {
        "msg": "chore: remove unused packages from core",
        "diff": "diff --git a/packages/chakra-ui-core/package.json b/packages/chakra-ui-core/package.json \"color\": \"^3.1.2\",\n\"focus-trap\": \"^5.1.0\",\n\"focus-trap-vue\": \"^0.0.4\",\n- \"known-css-properties\": \"^0.20.0\",\n\"lodash-es\": \"^4.17.15\",\n\"portal-vue\": \"^2.1.6\",\n\"styled-system\": \"^5.1.2\",\n",
        "date": "22.09.2020 00:03:09",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "chatgpt_zeroshot": "Remove known-css-properties from dependencies"
    },
    {
        "msg": "chore: cleanup lock file",
        "diff": "diff --git a/yarn.lock b/yarn.lock @@ -15691,11 +15691,6 @@ kleur@^3.0.3:\nresolved \"https://registry.yarnpkg.com/kleur/-/kleur-3.0.3.tgz#a79c9ecc86ee1ce3fa6206d1216c501f147fc07e\"\nintegrity sha512-eTIzlVOSUR+JxdDFepEYcBMtZ9Qqdef+rnzWdRZuMbOywu5tO2w2N7rqjoANZ5k9vywhL6Br1VRjUIgTQx4E8w==\n-known-css-properties@^0.20.0:\n- version \"0.20.0\"\n- resolved \"https://registry.yarnpkg.com/known-css-properties/-/known-css-properties-0.20.0.tgz#0570831661b47dd835293218381166090ff60e96\"\n- integrity sha512-URvsjaA9ypfreqJ2/ylDr5MUERhJZ+DhguoWRr2xgS5C7aGCalXo+ewL+GixgKBfhT2vuL02nbIgNGqVWgTOYw==\n-\nlast-call-webpack-plugin@^3.0.0:\nversion \"3.0.0\"\nresolved \"https://registry.yarnpkg.com/last-call-webpack-plugin/-/last-call-webpack-plugin-3.0.0.tgz#9742df0e10e3cf46e5c0381c2de90d3a7a2d7555\"\n",
        "date": "22.09.2020 00:08:03",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "chatgpt_zeroshot": "Remove known-css-properties package and update last-call-webpack-plugin to version 3.0.0"
    },
    {
        "msg": "chore: move creset changes to separate pr",
        "diff": "diff --git a/packages/chakra-ui-core/src/CReset/CReset.js b/packages/chakra-ui-core/src/CReset/CReset.js @@ -15,15 +15,13 @@ const defaultConfig = theme => ({\ncolor: theme.colors.gray[800],\nbg: undefined,\nborderColor: theme.colors.gray[200],\n- placeholderColor: theme.colors.gray[400],\n- fontFamily: theme.fonts.body\n+ placeholderColor: theme.colors.gray[400]\n},\ndark: {\ncolor: theme.colors.whiteAlpha[900],\nbg: theme.colors.gray[800],\nborderColor: theme.colors.whiteAlpha[300],\n- placeholderColor: theme.colors.whiteAlpha[400],\n- fontFamily: theme.fonts.body\n+ placeholderColor: theme.colors.whiteAlpha[400]\n}\n})\n@@ -61,14 +59,13 @@ const CReset = {\n}\n},\ncreated () {\n- const { color, bg, borderColor, placeholderColor, fontFamily } = this.styleConfig[this.colorMode]\n+ const { color, bg, borderColor, placeholderColor } = this.styleConfig[this.colorMode]\nuseTailwindPreflight(this.theme)\ninjectGlobal({\nhtml: {\nlineHeight: 1.5,\ncolor,\n- backgroundColor: bg,\n- fontFamily\n+ backgroundColor: bg\n},\n'*, *::before, *::after': {\n",
        "date": "26.09.2020 21:00:23",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "chatgpt_zeroshot": "Refactor CReset component styles to remove unnecessary fontFamily property"
    },
    {
        "msg": "chore: remove unused code from storybook",
        "diff": "diff --git a/.storybook/config.js b/.storybook/config.js @@ -37,13 +37,6 @@ import {\n} from '@fortawesome/free-brands-svg-icons'\nVue.use(Chakra, {\n- extendTheme: {\n- fonts: {\n- heading: \"'Comic Sans MS'\",\n- body: \"'Comic Sans MS'\",\n- monospace: \"'Comic Sans MS'\"\n- }\n- },\nicons: {\niconPack: 'fa',\niconSet: {\n",
        "date": "26.09.2020 21:21:10",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "chatgpt_zeroshot": "Remove custom font settings in Chakra theme"
    },
    {
        "msg": "chore: update docs version",
        "diff": "diff --git a/website/package.json b/website/package.json },\n\"dependencies\": {\n\"@chakra-ui/theme-vue\": \"^0.2.7\",\n- \"@chakra-ui/vue\": \"^0.6.5\",\n+ \"@chakra-ui/vue\": \"^0.6.6\",\n\"@fortawesome/free-brands-svg-icons\": \"^5.12.0\",\n\"@fortawesome/free-solid-svg-icons\": \"^5.11.2\",\n\"@mdx-js/vue-loader\": \"^1.6.1\",\n",
        "date": "30.09.2020 11:20:44",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "chatgpt_zeroshot": "Update Chakra UI Vue dependency to version 0.6.6"
    },
    {
        "msg": "chore: point installs to yarn registry",
        "diff": "diff --git a/yarn.lock b/yarn.lock \"@fortawesome/fontawesome-common-types@^0.2.28\":\nversion \"0.2.28\"\n- resolved \"https://npm.fontawesome.com/@fortawesome/fontawesome-common-types/-/0.2.28/fontawesome-common-types-0.2.28.tgz#1091bdfe63b3f139441e9cba27aa022bff97d8b2\"\n+ resolved \"https://registry.yarnpkg.com/@fortawesome/fontawesome-common-types/-/0.2.28/fontawesome-common-types-0.2.28.tgz#1091bdfe63b3f139441e9cba27aa022bff97d8b2\"\nintegrity sha512-gtis2/5yLdfI6n0ia0jH7NJs5i/Z/8M/ZbQL6jXQhCthEOe5Cr5NcQPhgTvFxNOtURE03/ZqUcEskdn2M+QaBg==\n\"@fortawesome/free-brands-svg-icons@^5.12.0\":\nversion \"5.13.0\"\n- resolved \"https://npm.fontawesome.com/@fortawesome/free-brands-svg-icons/-/5.13.0/free-brands-svg-icons-5.13.0.tgz#e79de73ba6555055204828dca9c0691e7ce5242b\"\n+ resolved \"https://registry.yarnpkg.com/@fortawesome/free-brands-svg-icons/-/5.13.0/free-brands-svg-icons-5.13.0.tgz#e79de73ba6555055204828dca9c0691e7ce5242b\"\nintegrity sha512-/6xXiJFCMEQxqxXbL0FPJpwq5Cv6MRrjsbJEmH/t5vOvB4dILDpnY0f7zZSlA8+TG7jwlt12miF/yZpZkykucA==\ndependencies:\n\"@fortawesome/fontawesome-common-types\" \"^0.2.28\"\n\"@fortawesome/free-solid-svg-icons@^5.11.2\":\nversion \"5.13.0\"\n- resolved \"https://npm.fontawesome.com/@fortawesome/free-solid-svg-icons/-/5.13.0/free-solid-svg-icons-5.13.0.tgz#44d9118668ad96b4fd5c9434a43efc5903525739\"\n+ resolved \"https://registry.yarnpkg.com/@fortawesome/free-solid-svg-icons/-/5.13.0/free-solid-svg-icons-5.13.0.tgz#44d9118668ad96b4fd5c9434a43efc5903525739\"\nintegrity sha512-IHUgDJdomv6YtG4p3zl1B5wWf9ffinHIvebqQOmV3U+3SLw4fC+LUCCgwfETkbTtjy5/Qws2VoVf6z/ETQpFpg==\ndependencies:\n\"@fortawesome/fontawesome-common-types\" \"^0.2.28\"\n",
        "date": "22.12.2020 17:59:43",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "chatgpt_zeroshot": "Update fontawesome package sources to use registry.yarnpkg.com instead of npm.fontawesome.com."
    },
    {
        "msg": "chore: push versions",
        "diff": "diff --git a/website/package.json b/website/package.json },\n\"dependencies\": {\n\"@chakra-ui/theme-vue\": \"^0.2.7\",\n- \"@chakra-ui/vue\": \"^0.7.0-next.0\",\n+ \"@chakra-ui/vue\": \"^0.7.0-next.2\",\n\"@emotion/css\": \"^11.0.0\",\n\"@mdx-js/vue-loader\": \"^1.6.1\",\n\"@nuxtjs/dotenv\": \"^1.4.0\",\n",
        "date": "23.12.2020 15:38:06",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "chatgpt_zeroshot": "Update Chakra UI Vue dependency to version 0.7.0-next.2"
    },
    {
        "msg": "chore: add chakra to deps",
        "diff": "diff --git a/package.json b/package.json \"website\"\n],\n\"nohoist\": [\n- \"core-js\"\n+ \"core-js\",\n+ \"@chakra-ui/vue\"\n]\n},\n\"scripts\": {\n\"evalbundle\": \"bundlesize\"\n},\n\"dependencies\": {\n+ \"@chakra-ui/vue\": \"^0.7.0-next.2\",\n\"@babel/core\": \"^7.9.0\",\n\"@babel/plugin-proposal-object-rest-spread\": \"^7.7.4\",\n\"@babel/plugin-transform-modules-commonjs\": \"^7.7.4\",\n",
        "date": "23.12.2020 15:46:25",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "chatgpt_zeroshot": "Add @chakra-ui/vue to dependencies and update version to ^0.7.0-next.2"
    },
    {
        "msg": "chore(nuxt): update core dependency",
        "diff": "diff --git a/packages/chakra-ui-nuxt/package.json b/packages/chakra-ui-nuxt/package.json \"test\": \"jest\"\n},\n\"dependencies\": {\n- \"@chakra-ui/vue\": \"^0.7.0-next.2\",\n+ \"@chakra-ui/vue\": \"latest\",\n\"chakra-loader\": \"latest\",\n\"@emotion/css\": \"^11.0.0\"\n},\n",
        "date": "24.12.2020 15:56:53",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "chatgpt_zeroshot": "Update Chakra UI Vue dependency to latest version"
    },
    {
        "msg": "chore: changeset publish",
        "diff": "diff --git a/package.json b/package.json \"test:core\": \"jest\",\n\"test:module\": \"yarn workspace @chakra-ui/nuxt test\",\n\"test\": \"yarn test:core && yarn test:module\",\n- \"publish-ci\": \"git add -A && git commit -m \\\"chore(lerna): publishing package \\\" && lerna publish from-package -y --no-verify-access\",\n+ \"publish-ci\": \"changeset publish\",\n\"clean\": \"lerna run clean\",\n\"storybook\": \"cross-env STORYBOOK_VUE_DEV_TOOLS=1 start-storybook -p 9000\",\n\"storybook:devtools\": \"vue-devtools\",\n",
        "date": "24.12.2020 18:33:51",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "chatgpt_zeroshot": "refactor: update publish-ci script to use changeset command"
    },
    {
        "msg": "chore(nuxt): fix internal icons registration",
        "diff": "diff --git a/packages/chakra-ui-nuxt/lib/module.js b/packages/chakra-ui-nuxt/lib/module.js @@ -39,7 +39,7 @@ module.exports = function (moduleOptions) {\n// Icons\nconst icons = {\n- ...internalIcons.default,\n+ ...internalIcons,\n...packIcons,\n...(options.icons && options.icons.extend)\n}\n",
        "date": "31.12.2020 14:14:45",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "chatgpt_zeroshot": "Refactor icons object in module.js to include internalIcons without default export."
    },
    {
        "msg": "chore: publish command",
        "diff": "diff --git a/package.json b/package.json \"test:core\": \"jest\",\n\"test:module\": \"yarn workspace @chakra-ui/nuxt test\",\n\"test\": \"yarn test:core && yarn test:module\",\n- \"release\": \"changeset publish\",\n+ \"release\": \"yarn changeset publish\",\n\"clean\": \"lerna run clean\",\n\"storybook\": \"cross-env STORYBOOK_VUE_DEV_TOOLS=1 start-storybook -p 9000\",\n\"storybook:devtools\": \"vue-devtools\",\n",
        "date": "31.12.2020 15:35:20",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "chatgpt_zeroshot": "Fix command in release script in package.json"
    },
    {
        "msg": "chore(tests): Added test for srcset in CImage",
        "diff": "diff --git a/packages/chakra-ui-core/src/CImage/tests/CImage.test.js b/packages/chakra-ui-core/src/CImage/tests/CImage.test.js @@ -45,3 +45,10 @@ it('fallback src works', async () => {\nexpect(screen.getByAltText(/Mesut Koca/i)).toHaveAttribute('src', 'LOAD_FALLBACK_SRC')\n})\n})\n+\n+it('srcset works', async () => {\n+ renderComponent({ template: '<CImage alt=\"My Image Description\" src=\"LOAD_SUCCESS_SRC\" srcset=\"LOAD_SUCCESS_SRC 400w\" />' })\n+ await wait(() => {\n+ expect(screen.getByAltText(/My Image Description/i)).toHaveAttribute('srcset', 'LOAD_SUCCESS_SRC 400w')\n+ })\n+})\n",
        "date": "04.05.2021 21:16:47",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "chatgpt_zeroshot": "Add test for srcset attribute in CImage component"
    },
    {
        "msg": "chore: fix imports order",
        "diff": "diff --git a/packages/chakra-ui-core/src/CThemeProvider/tests/CThemeProvider.test.js b/packages/chakra-ui-core/src/CThemeProvider/tests/CThemeProvider.test.js import { toCSSVar } from '@chakra-ui/styled-system'\nimport { mount, shallowMount } from '@vue/test-utils'\nimport theme from '@chakra-ui/theme-vue'\n-import { getElementStyles } from '@/tests/test-utils'\n-\nimport CThemeProvider from '..'\n+import { getElementStyles } from '@/tests/test-utils'\ndescribe('CThemeProvider', () => {\nconst ChildComponent = {\n",
        "date": "26.08.2021 02:21:27",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "chatgpt_zeroshot": "Fix import statement in CThemeProvider.test.js"
    },
    {
        "msg": "chore: added theme to packaes",
        "diff": "diff --git a/.codesandbox/ci.json b/.codesandbox/ci.json \"buildCommand\": \"build\",\n\"packages\": [\n\"packages/chakra-ui-core\",\n- \"packages/chakra-ui-nuxt\"\n+ \"packages/chakra-ui-nuxt\",\n+ \"packages/chakra-ui-theme\"\n],\n\"sandboxes\": [\"chakra-ui-vue-0x-starter-template-2sy0g\", \"chakra-ui-nuxt-demo-f8tq4\"],\n\"node\": \"14\"\n",
        "date": "26.08.2021 02:29:49",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "chatgpt_zeroshot": "Add chakra-ui-theme package to ci.json"
    },
    {
        "msg": "chore: update package.json version",
        "diff": "diff --git a/website/package.json b/website/package.json \"nuxt\": \"^2.15.7\",\n\"prismjs\": \"^1.19.0\",\n\"sass-loader\": \"^8.0.2\",\n- \"vue\": \"^2.6.12\",\n\"vue-error-boundary\": \"^1.0.3\",\n\"vue-live\": \"1.5.1\",\n\"vue-lorem-ipsum\": \"^0.0.1\",\n",
        "date": "26.08.2021 03:39:00",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "chatgpt_zeroshot": "Remove vue version dependency from package.json"
    },
    {
        "msg": "chore: add option to build fro production",
        "diff": "diff --git a/website/nuxt.config.js b/website/nuxt.config.js @@ -97,6 +97,7 @@ export default {\n},\nbabel: {\nplugins: [\n+ ['@babel/plugin-proposal-private-property-in-object', { loose: true }],\n'@babel/plugin-proposal-optional-chaining'\n]\n}\n",
        "date": "26.08.2021 03:46:03",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "chatgpt_zeroshot": "Add @babel/plugin-proposal-private-property-in-object plugin with loose option in babel config"
    },
    {
        "msg": "chore: make `parsePackIcons` more generic",
        "diff": "diff --git a/packages/chakra-ui-core/src/utils/icons.js b/packages/chakra-ui-core/src/utils/icons.js import { merge } from 'lodash-es'\n/**\n- * @description Parse FontAwesome icon path\n- * @param {String|Array} path a single svg path, or array of paths\n- * @returns {String}\n+ * @param {String} pack\n+ * @param {Array} icon\n+ * @returns {{path: string, viewBox: string, attrs: *}}\n*/\n-const parseFontAwesomeIcon = (path) => {\n- // duotone icon\n- if (Array.isArray(path) && path.length === 2) {\n- const paths = path.map((d, idx) =>\n- `<path d=\"${d}\" fill=\"currentColor\" class=\"${idx ? 'fa-primary' : 'fa-secondary'}\" />`\n+const createIcon = (pack, icon) => {\n+ const [w, h, content, svg, data, , attrs] = icon\n+ let path\n+\n+ const createPath = (d, attrs = {}) => `<path d=\"${d}\" ${attrs.className ? `class=\"${attrs.className}\"` : ''} fill=\"currentColor\" />`\n+\n+ const createGroupedPath = (groups, prefix) => {\n+ const paths = groups.map((d, idx) =>\n+ createPath(d, {\n+ className: idx ? `${prefix}-primary` : `${prefix}-secondary`,\n+ })\n)\n- return `<defs><style>.fa-secondary{opacity:.4}</style></defs><g class=\"fa-group\">${paths.join('')}</g>`\n+ return `<g fill=\"currentColor\" class=\"${prefix}-group\">${paths.join('')}</g>`\n}\n- return `<path d=\"${path}\" fill=\"currentColor\" />`\n+ if (pack === 'fa') {\n+ path = Array.isArray(data)\n+ ? createGroupedPath(data, pack)\n+ : createPath(data)\n+ } else {\n+ path = pack.startsWith('fe') ? content : svg\n+ }\n+\n+ return {\n+ path,\n+ viewBox: `0 0 ${w} ${h}`,\n+ attrs,\n+ }\n}\n/**\n* @description Custom parse all Icons provided by user\n+ * @param {String} pack - the name of the icon pack being used (fe, fa, mdi, etc)\n* @param {Object} iconSet - Registered Icons object\n* @returns {Object}\n*/\n-const parseIcons = (iconSet = {}) => {\n+const parseIcons = (pack, iconSet = {}) => {\nconst parseIcon = (iconObject) => {\n- const { icon } = iconObject\n+ const { icon, iconName } = iconObject\n// Is library icon\nif (icon) {\n- const [w, h, content, svg, path, , attrs] = icon\nreturn {\n- [`${iconObject.iconName}`]: {\n- path: iconObject.prefix.startsWith('fa')\n- ? parseFontAwesomeIcon(path)\n- : iconObject.prefix.startsWith('fe')\n- ? content\n- : svg,\n- viewBox: `0 0 ${w} ${h}`,\n- attrs\n- }\n+ [`${iconName}`]: createIcon(pack, icon)\n}\n} else {\nreturn {}\n}\n}\n- const result = Object.values(iconSet)\n+ return Object.values(iconSet)\n.map(value => parseIcon(value))\n.reduce((target, source) => merge(target, source), {})\n-\n- return result\n}\n/**\n* @description Parse Icon packs\n- * @param {String} pack Icon pack name\n+ * @param {String} pack - the name of the icon pack being used (fe, fa, mdi, etc)\n* @param {Object} iconSet Registered Icon set\n* @returns {Object} Parsed pack icons object\n*/\n-export const parsePackIcons = (iconSet) => {\n+export const parsePackIcons = (pack, iconSet) => {\n// TODO: Add support for other icon libraries\n- // - Material Icons\n+ // - Material Icons: these are string constants, and need lots of work\n// - Tailwind Icons (Hero icons)\n- const packIcons = parseIcons(iconSet)\n- return packIcons\n+ return parseIcons(pack, iconSet)\n}\n",
        "date": "25.10.2021 14:32:34",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "chatgpt_zeroshot": "Refactor icon parsing functions and add support for different icon packs"
    },
    {
        "msg": "chore: review textarea fix",
        "diff": "diff --git a/packages/chakra-ui-core/src/CTextarea/CTextarea.stories.js b/packages/chakra-ui-core/src/CTextarea/CTextarea.stories.js @@ -14,6 +14,7 @@ storiesOf('UI | Textarea', module)\nmt=\"2\"\nplaceholder=\"Here is a sample placeholder\"\nsize=\"md\"\n+ @change=\"handleChange\"\n:value=\"textareaContent\"\n/>\n</CBox>\n",
        "date": "20.01.2022 00:06:59",
        "repo": "chakra-ui/chakra-ui-vue",
        "type": "chore",
        "chatgpt_zeroshot": "Add change event handler to CTextarea component"
    },
    {
        "msg": "chore: remove comment in test",
        "diff": "diff --git a/test/tests/razzle-start.test.js b/test/tests/razzle-start.test.js @@ -8,7 +8,7 @@ const util = require('../fixtures/util');\nconst kill = require('../utils/psKill');\nconst path = require('path');\n-// shell.config.silent = true;\n+shell.config.silent = true;\ndescribe('razzle start', () => {\ndescribe('razzle basic example', () => {\n",
        "date": "16.04.2020 06:00:20",
        "repo": "jaredpalmer/razzle",
        "type": "chore",
        "chatgpt_zeroshot": "Enable shell silent mode in razzle-start.test.js"
    },
    {
        "msg": "chore: allow next brach on lerna release",
        "diff": "diff --git a/lerna.json b/lerna.json },\n\"publish\": {\n\"npmClient\": \"npm\",\n- \"allowBranch\": [\n- \"master\",\n- \"canary\"\n- ],\n+ \"allowBranch\": [\"master\", \"next\"],\n\"registry\": \"https://registry.npmjs.org/\"\n}\n},\n",
        "date": "25.04.2020 20:41:57",
        "repo": "jaredpalmer/razzle",
        "type": "chore",
        "chatgpt_zeroshot": "Update allowBranch in publish config to include \"next\" branch."
    },
    {
        "msg": "chore: update format script",
        "diff": "diff --git a/package.json b/package.json \"test:packages\": \"lerna run test --stream --scope razzle-* --ignore razzle-examples-* -- --passWithNoTests --verbose --no-cache\",\n\"test:e2e\": \"jest --config ./test/jest.config.json --verbose --no-cache \",\n\"clean\": \"lerna clean --yes\",\n- \"format\": \"prettier --trailing-comma es5 --single-quote --write 'packages/*/*.+(js|jsx|json|yml|yaml|css|less|scss|ts|tsx|md|mdx)' 'packages/*/!(node_modules)/**/*.js'\",\n+ \"format\": \"prettier --write 'packages/*/*.+(js|jsx|json|yml|yaml|css|less|scss|ts|tsx|md|mdx)' 'packages/*/!(node_modules)/**/*.js'\",\n\"publish-canary\": \"lerna version prerelease --preid canary --force-publish && release --pre\",\n\"publish-stable\": \"lerna version --force-publish && release && node ./scripts/release-notes.js\",\n\"build-docs\": \"node ./scripts/build-docs.js\",\n},\n\"lint-staged\": {\n\"*.{js|jsx|json|yml|yaml|css|less|scss|ts|tsx|md|mdx}\": [\n- \"prettier --trailing-comma es5 --single-quote --write\"\n+ \"yarn format\"\n]\n},\n\"dependencies\": {},\n",
        "date": "08.07.2020 23:05:11",
        "repo": "jaredpalmer/razzle",
        "type": "chore",
        "chatgpt_zeroshot": "Refactor prettier configuration in package.json"
    },
    {
        "msg": "chore: fix lint-staged pattern",
        "diff": "diff --git a/package.json b/package.json }\n},\n\"lint-staged\": {\n- \"*.{js|jsx|json|yml|yaml|css|less|scss|ts|tsx|md|mdx}\": [\n- \"prettier --trailing-comma es5 --single-quote --write\",\n- \"git add\"\n+ \"*.{js,jsx,json,yml,yaml,css,less,scss,ts,tsx,md,mdx}\": [\n+ \"prettier --trailing-comma es5 --single-quote --write\"\n]\n},\n\"dependencies\": {},\n",
        "date": "26.08.2020 12:33:47",
        "repo": "jaredpalmer/razzle",
        "type": "chore",
        "chatgpt_zeroshot": "Remove git add command from lint-staged configuration in package.json"
    },
    {
        "msg": "chore: update changesets config",
        "diff": "diff --git a/.changeset/config.json b/.changeset/config.json \"access\": \"public\",\n\"baseBranch\": \"master\",\n\"ignore\": [],\n-\n- \"changelog\": \"@changesets/cli/changelog\"\n+ \"changelog\": [\"@changesets/changelog-github\", { \"repo\": \"jaredpalmer/razzle\" }]\n}\n\\ No newline at end of file\n",
        "date": "01.03.2022 19:04:14",
        "repo": "jaredpalmer/razzle",
        "type": "chore",
        "chatgpt_zeroshot": "Update changelog configuration to use @changesets/changelog-github for the jaredpalmer/razzle repository."
    },
    {
        "msg": "chore(webpack): configure babel loader to build scratch deps\nConfigure loaders so they operate on individual modules in scratch-*\ndependencies.",
        "diff": "diff --git a/webpack.config.js b/webpack.config.js @@ -32,7 +32,20 @@ const base = {\nrules: [{\ntest: /\\.jsx?$/,\nloader: 'babel-loader',\n- include: path.resolve(__dirname, 'src')\n+ include: [path.resolve(__dirname, 'src'), /node_modules[\\\\/]scratch-[^\\\\/]+[\\\\/]src/],\n+ options: {\n+ // Explicitly disable babelrc so we don't catch various config\n+ // in much lower dependencies.\n+ babelrc: false,\n+ plugins: [\n+ 'syntax-dynamic-import',\n+ 'transform-async-to-generator',\n+ 'transform-object-rest-spread',\n+ ['react-intl', {\n+ messagesDir: './translations/messages/'\n+ }]],\n+ presets: [['env', {targets: {browsers: ['last 3 versions', 'Safari >= 8', 'iOS >= 8']}}], 'react']\n+ }\n},\n{\ntest: /\\.css$/,\n",
        "date": "30.04.2018 18:24:56",
        "repo": "wdr-data/code4maus",
        "type": "chore",
        "chatgpt_zeroshot": "Update webpack config to include additional paths and disable babelrc."
    },
    {
        "msg": "chore: :wrench: add workspace spellings",
        "diff": "diff --git a/.vscode/settings.json b/.vscode/settings.json \"titleBar.inactiveBackground\": \"#5d98bb99\",\n\"titleBar.activeForeground\": \"#15202b\",\n\"titleBar.inactiveForeground\": \"#15202b99\"\n- }\n+ },\n+ \"cSpell.words\": [\"abbr\", \"mdsvex\", \"rehype\", \"sveltejs\"]\n}\n",
        "date": "02.06.2021 20:34:14",
        "repo": "spences10/cheat-sheets",
        "type": "chore",
        "chatgpt_zeroshot": "Add cSpell words to settings.json"
    },
    {
        "msg": "chore: :wrench: update package-lock,json",
        "diff": "diff --git a/package-lock.json b/package-lock.json \"requires\": true,\n\"dependencies\": {\n\"@babel/code-frame\": {\n- \"version\": \"7.12.11\",\n- \"resolved\": \"https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.12.11.tgz\",\n- \"integrity\": \"sha512-Zt1yodBx1UcyiePMSkWnU4hPqhwq7hGi2nFL1LeA3EUl+q2LQx16MISgJ0+z7dnmgvP9QtIleuETGOiOH1RcIw==\",\n+ \"version\": \"7.12.13\",\n+ \"resolved\": \"https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.12.13.tgz\",\n+ \"integrity\": \"sha512-HV1Cm0Q3ZrpCR93tkWOYiuYIgLxZXZFVG2VgK+MBWjUqZTundupbfx2aXarXuw5Ko5aMcjtJgbSs4vUGBS5v6g==\",\n\"dev\": true,\n\"requires\": {\n- \"@babel/highlight\": \"^7.10.4\"\n+ \"@babel/highlight\": \"^7.12.13\"\n}\n},\n\"@babel/helper-validator-identifier\": {\n\"integrity\": \"sha1-p9BVi9icQveV3UIyj3QIMcpTvCU=\",\n\"dev\": true\n},\n- \"escape-string-regexp\": {\n- \"version\": \"1.0.5\",\n- \"resolved\": \"https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz\",\n- \"integrity\": \"sha1-G2HAViGQqN/2rjuyzwIAyhMLhtQ=\",\n- \"dev\": true\n- },\n\"has-flag\": {\n\"version\": \"3.0.0\",\n\"resolved\": \"https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz\",\n\"dev\": true\n},\n\"@types/node\": {\n- \"version\": \"15.6.1\",\n- \"resolved\": \"https://registry.npmjs.org/@types/node/-/node-15.6.1.tgz\",\n- \"integrity\": \"sha512-7EIraBEyRHEe7CH+Fm1XvgqU6uwZN8Q7jppJGcqjROMT29qhAuuOxYB1uEY5UMYQKEmA5D+5tBnhdaPXSsLONA==\",\n+ \"version\": \"15.6.2\",\n+ \"resolved\": \"https://registry.npmjs.org/@types/node/-/node-15.6.2.tgz\",\n+ \"integrity\": \"sha512-dxcOx8801kMo3KlU+C+/ctWrzREAH7YvoF3aoVpRdqgs+Kf7flp+PJDN/EX5bME3suDUZHsxes9hpvBmzYlWbA==\",\n\"dev\": true\n},\n\"@types/parse-json\": {\n}\n},\n\"caniuse-lite\": {\n- \"version\": \"1.0.30001232\",\n- \"resolved\": \"https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30001232.tgz\",\n- \"integrity\": \"sha512-e4Gyp7P8vqC2qV2iHA+cJNf/yqUKOShXQOJHQt81OHxlIZl/j/j3soEA0adAQi8CPUQgvOdDENyQ5kd6a6mNSg==\",\n+ \"version\": \"1.0.30001233\",\n+ \"resolved\": \"https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30001233.tgz\",\n+ \"integrity\": \"sha512-BmkbxLfStqiPA7IEzQpIk0UFZFf3A4E6fzjPJ6OR+bFC2L8ES9J8zGA/asoi47p8XDVkev+WJo2I2Nc8c/34Yg==\",\n\"dev\": true\n},\n\"chalk\": {\n\"dev\": true\n},\n\"escape-string-regexp\": {\n- \"version\": \"4.0.0\",\n- \"resolved\": \"https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-4.0.0.tgz\",\n- \"integrity\": \"sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==\",\n+ \"version\": \"1.0.5\",\n+ \"resolved\": \"https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz\",\n+ \"integrity\": \"sha1-G2HAViGQqN/2rjuyzwIAyhMLhtQ=\",\n\"dev\": true\n},\n\"eslint\": {\n\"table\": \"^6.0.9\",\n\"text-table\": \"^0.2.0\",\n\"v8-compile-cache\": \"^2.0.3\"\n+ },\n+ \"dependencies\": {\n+ \"@babel/code-frame\": {\n+ \"version\": \"7.12.11\",\n+ \"resolved\": \"https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.12.11.tgz\",\n+ \"integrity\": \"sha512-Zt1yodBx1UcyiePMSkWnU4hPqhwq7hGi2nFL1LeA3EUl+q2LQx16MISgJ0+z7dnmgvP9QtIleuETGOiOH1RcIw==\",\n+ \"dev\": true,\n+ \"requires\": {\n+ \"@babel/highlight\": \"^7.10.4\"\n+ }\n+ },\n+ \"escape-string-regexp\": {\n+ \"version\": \"4.0.0\",\n+ \"resolved\": \"https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-4.0.0.tgz\",\n+ \"integrity\": \"sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==\",\n+ \"dev\": true\n+ }\n}\n},\n\"eslint-config-prettier\": {\n\"escape-string-regexp\": \"^4.0.0\",\n\"unist-util-is\": \"^4.0.0\",\n\"unist-util-visit-parents\": \"^3.0.0\"\n+ },\n+ \"dependencies\": {\n+ \"escape-string-regexp\": {\n+ \"version\": \"4.0.0\",\n+ \"resolved\": \"https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-4.0.0.tgz\",\n+ \"integrity\": \"sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==\",\n+ \"dev\": true\n+ }\n}\n},\n\"mdast-util-to-string\": {\n\"integrity\": \"sha1-p9BVi9icQveV3UIyj3QIMcpTvCU=\",\n\"dev\": true\n},\n- \"escape-string-regexp\": {\n- \"version\": \"1.0.5\",\n- \"resolved\": \"https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz\",\n- \"integrity\": \"sha1-G2HAViGQqN/2rjuyzwIAyhMLhtQ=\",\n- \"dev\": true\n- },\n\"has-flag\": {\n\"version\": \"3.0.0\",\n\"resolved\": \"https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz\",\n}\n},\n\"tailwindcss\": {\n- \"version\": \"2.1.3\",\n- \"resolved\": \"https://registry.npmjs.org/tailwindcss/-/tailwindcss-2.1.3.tgz\",\n- \"integrity\": \"sha512-434rlH/gVSm0Qhc2pQjvsQeasrcmPWEWSxyDcF66Y+CavOURsdqx3hymqqXlozs+CVWN3z+VpFV/PE9b2wx/GA==\",\n+ \"version\": \"2.1.4\",\n+ \"resolved\": \"https://registry.npmjs.org/tailwindcss/-/tailwindcss-2.1.4.tgz\",\n+ \"integrity\": \"sha512-fh1KImDLg6se/Suaelju/5oFbqq1b0ntagmGLu0aG9LlnNPGHgO1n/4E57CbKcCtyz/VYnvVXUiWmfyfBBZQ6g==\",\n\"dev\": true,\n\"requires\": {\n\"@fullhuman/postcss-purgecss\": \"^3.1.3\",\n",
        "date": "02.06.2021 21:32:13",
        "repo": "spences10/cheat-sheets",
        "type": "chore",
        "chatgpt_zeroshot": "Update dependencies versions for @babel/code-frame, @types/node, caniuse-lite, and tailwindcss."
    },
    {
        "msg": "chore: :lipstick: move container for header",
        "diff": "diff --git a/src/routes/__layout.svelte b/src/routes/__layout.svelte import '../styles.css'\n</script>\n-<main class=\"container max-w-3xl mx-auto px-4 sm:px-6 lg:px-8\">\n+<div class=\"container max-w-3xl mx-auto px-4 sm:px-6 lg:px-8\">\n<Header />\n+ <main>\n<slot />\n</main>\n+</div>\n",
        "date": "10.07.2021 16:00:44",
        "repo": "spences10/cheat-sheets",
        "type": "chore",
        "chatgpt_zeroshot": "Refactor layout structure in __layout.svelte"
    },
    {
        "msg": "chore: :art: move to main from production",
        "diff": "diff --git a/src/routes/[slug].svelte b/src/routes/[slug].svelte <p class=\"font-semibold text-xs\">Updated: {updated}</p>\n<a\nclass=\"font-semibold text-xs underline hover:no-underline\"\n- href={`https://github.com/spences10/cheat-sheets/edit/production/sheets/${metadata.slug}.md`}\n+ href={`https://github.com/spences10/cheat-sheets/edit/main/sheets/${metadata.slug}.md`}\n>Edit this page on GitHub</a\n>\n</div>\n",
        "date": "12.07.2021 08:15:42",
        "repo": "spences10/cheat-sheets",
        "type": "chore",
        "chatgpt_zeroshot": "Update GitHub edit link to point to main branch instead of production branch"
    },
    {
        "msg": "chore: :wrench: update tailwind config",
        "diff": "diff --git a/tailwind.config.cjs b/tailwind.config.cjs -module.exports = {\n+const config = {\nmode: 'jit',\npurge: ['./src/**/*.{html,js,svelte,ts}'],\ntheme: {\n@@ -6,3 +6,5 @@ module.exports = {\n},\nplugins: [require('@tailwindcss/typography'), require('daisyui')],\n}\n+\n+module.exports = config\n",
        "date": "23.08.2021 18:10:20",
        "repo": "spences10/cheat-sheets",
        "type": "chore",
        "chatgpt_zeroshot": "Add JIT mode and purge configuration to tailwind.config"
    },
    {
        "msg": "chore: :wrench: update svelte config",
        "diff": "diff --git a/svelte.config.js b/svelte.config.js @@ -20,3 +20,7 @@ const config = {\n}\nexport default config\n+// Workaround until SvelteKit uses Vite 2.3.8 (and it's confirmed to fix the Tailwind JIT problem)\n+const mode = process.env.NODE_ENV\n+const dev = mode === 'development'\n+process.env.TAILWIND_MODE = dev ? 'watch' : 'build'\n",
        "date": "23.08.2021 18:11:28",
        "repo": "spences10/cheat-sheets",
        "type": "chore",
        "chatgpt_zeroshot": "Add workaround for Tailwind JIT problem in SvelteKit"
    },
    {
        "msg": "chore: :wrench: update mdsvex config",
        "diff": "diff --git a/mdsvex.config.js b/mdsvex.config.js @@ -8,9 +8,6 @@ import { visit } from 'unist-util-visit'\nexport default {\nextensions: ['.svx', '.md'],\n- smartypants: {\n- dashes: 'oldschool',\n- },\nremarkPlugins: [\n// Add a text preview snippet (no formatting) so we can use it in the meta description tag\npreview(\n",
        "date": "23.08.2021 18:13:31",
        "repo": "spences10/cheat-sheets",
        "type": "chore",
        "chatgpt_zeroshot": "Remove smartypants configuration from mdsvex.config.js"
    },
    {
        "msg": "chore: :wrench: remove async",
        "diff": "diff --git a/src/routes/__layout.svelte b/src/routes/__layout.svelte import '../styles.postcss'\n// https://mattjennings.io/blog/how-to-use-fathom-analytics-with-sveltekit\n- onMount(async () => {\n+ onMount(() => {\nthemeChange(false)\nFathom.load(import.meta.env.VITE_FATHOM_ID, {\nurl: import.meta.env.VITE_FATHOM_URL,\n",
        "date": "30.08.2021 19:55:16",
        "repo": "spences10/cheat-sheets",
        "type": "chore",
        "chatgpt_zeroshot": "Remove async function from onMount and update Fathom analytics configuration"
    },
    {
        "msg": "chore: :wrench: spellings",
        "diff": "diff --git a/.vscode/settings.json b/.vscode/settings.json \"titleBar.activeForeground\": \"#15202b\",\n\"titleBar.inactiveForeground\": \"#15202b99\"\n},\n- \"cSpell.words\": [\"abbr\", \"mdsvex\", \"rehype\", \"sveltejs\"]\n+ \"cSpell.words\": [\n+ \"abbr\",\n+ \"djvu\",\n+ \"EDIFACT\",\n+ \"mdsvex\",\n+ \"MHTML\",\n+ \"msvideo\",\n+ \"rehype\",\n+ \"sveltejs\",\n+ \"vercel\",\n+ \"vite\",\n+ \"webm\"\n+ ]\n}\n",
        "date": "26.11.2021 18:10:54",
        "repo": "spences10/cheat-sheets",
        "type": "chore",
        "chatgpt_zeroshot": "Add new words to cSpell dictionary"
    },
    {
        "msg": "chore: :wrench: update fs allow",
        "diff": "diff --git a/svelte.config.js b/svelte.config.js @@ -16,6 +16,16 @@ const config = {\n// hydrate the <div id=\"svelte\"> element in src/app.html\ntarget: '#svelte',\nadapter: adapter(),\n+ vite: {\n+ // https://vitejs.dev/config/#server-fs-allow\n+ server: {\n+ fs: {\n+ // Allow serving files from one level up to the project root\n+ // posts, copy\n+ allow: ['..'],\n+ },\n+ },\n+ },\n},\n}\n",
        "date": "26.11.2021 18:11:16",
        "repo": "spences10/cheat-sheets",
        "type": "chore",
        "chatgpt_zeroshot": "Add Vite server configuration to allow serving files from one level up to the project root"
    },
    {
        "msg": "chore(package): remove transform-react-constant-elements",
        "diff": "diff --git a/package.json b/package.json \"babel-plugin-__coverage__\": \"^11.0.0\",\n\"babel-plugin-lodash\": \"^3.2.10\",\n\"babel-plugin-react-transform\": \"^2.0.2\",\n- \"babel-plugin-transform-react-constant-elements\": \"^6.9.1\",\n\"babel-plugin-transform-react-handled-props\": \"^0.2.1\",\n\"babel-plugin-transform-react-remove-prop-types\": \"^0.2.10\",\n\"babel-plugin-transform-runtime\": \"^6.15.0\",\n",
        "date": "16.01.2017 18:18:44",
        "repo": "semantic-org/semantic-ui-react",
        "type": "chore",
        "chatgpt_zeroshot": "Remove babel-plugin-transform-react-constant-elements from dependencies"
    },
    {
        "msg": "chore(package): run tsd lint prerelease",
        "diff": "diff --git a/package.json b/package.json \"lint\": \"cross-env NODE_ENV=production eslint .\",\n\"lint:fix\": \"npm run lint -- --fix\",\n\"lint:watch\": \"watch 'npm run lint --silent' docs gulp src test\",\n- \"prerelease\": \"npm run lint && npm test && cross-env NODE_ENV=production npm run build\",\n+ \"prerelease\": \"npm run lint && npm run tsd:lint && npm test && cross-env NODE_ENV=production npm run build\",\n\"postrelease\": \"NODE_ENV=production npm run deploy:docs\",\n\"release:major\": \"npm run prerelease && ta-script npm/release.sh major && npm run prerelease\",\n\"release:minor\": \"npm run prerelease && ta-script npm/release.sh minor && npm run prerelease\",\n",
        "date": "02.02.2017 01:32:11",
        "repo": "semantic-org/semantic-ui-react",
        "type": "chore",
        "chatgpt_zeroshot": "Add tsd:lint script to prerelease step"
    },
    {
        "msg": "chore(eslint): disable aria rules for docs",
        "diff": "diff --git a/docs/.eslintrc b/docs/.eslintrc \"__TEST__\": false,\n\"__PATH_SEP__\": false,\n\"__PROD__\": false\n+ },\n+ \"rules\": {\n+ \"jsx-a11y/anchor-has-content\": 0,\n+ \"jsx-a11y/aria-props\": 0,\n+ \"jsx-a11y/aria-proptypes\": 0,\n+ \"jsx-a11y/aria-role\": 0,\n+ \"jsx-a11y/aria-unsupported-elements\": 0,\n+ \"jsx-a11y/click-events-have-key-events\": 0,\n+ \"jsx-a11y/heading-has-content\": 0,\n+ \"jsx-a11y/href-no-hash\": 0,\n+ \"jsx-a11y/html-has-lang\": 0,\n+ \"jsx-a11y/img-has-alt\": 0,\n+ \"jsx-a11y/img-redundant-alt\": 0,\n+ \"jsx-a11y/label-has-for\": 0,\n+ \"jsx-a11y/lang\": 0,\n+ \"jsx-a11y/mouse-events-have-key-events\": 0,\n+ \"jsx-a11y/no-access-key\": 0,\n+ \"jsx-a11y/no-marquee\": 0,\n+ \"jsx-a11y/no-onchange\": 0,\n+ \"jsx-a11y/no-static-element-interactions\": 0,\n+ \"jsx-a11y/onclick-has-focus\": 0,\n+ \"jsx-a11y/onclick-has-role\": 0,\n+ \"jsx-a11y/role-has-required-aria-props\": 0,\n+ \"jsx-a11y/role-supports-aria-props\": 0,\n+ \"jsx-a11y/scope\": 0,\n+ \"jsx-a11y/tabindex-no-positive\": 0\n}\n}\n",
        "date": "11.02.2017 08:05:28",
        "repo": "semantic-org/semantic-ui-react",
        "type": "chore",
        "chatgpt_zeroshot": "Add ESLint rules for accessibility in .eslintrc"
    },
    {
        "msg": "chore(package): remove toc from readme in build",
        "diff": "diff --git a/package.json b/package.json \"build:dll\": \"gulp dll\",\n\"build:docs\": \"gulp build:docs\",\n\"build:umd\": \"gulp umd\",\n- \"build:docs-toc\": \"doctoc README.md ./.github/CONTRIBUTING.md --github --maxlevel 4\",\n+ \"build:docs-toc\": \"doctoc ./.github/CONTRIBUTING.md --github --maxlevel 4\",\n\"build:docs-cname\": \"echo react.semantic-ui.com > docs/build/CNAME\",\n\"predeploy:docs\": \"cross-env NODE_ENV=production npm run build:docs && npm run build:docs-cname\",\n\"deploy:docs\": \"gh-pages -d docs/build -m 'deploy docs [ci skip]'\",\n",
        "date": "28.02.2017 23:32:54",
        "repo": "semantic-org/semantic-ui-react",
        "type": "chore",
        "chatgpt_zeroshot": "Refactor build:docs-toc script in package.json"
    },
    {
        "msg": "chore(package): update babel-plugin-transform-react-handled-props",
        "diff": "diff --git a/package.json b/package.json \"babel-plugin-__coverage__\": \"^11.0.0\",\n\"babel-plugin-lodash\": \"^3.2.10\",\n\"babel-plugin-react-transform\": \"^2.0.2\",\n- \"babel-plugin-transform-react-handled-props\": \"^0.2.2\",\n+ \"babel-plugin-transform-react-handled-props\": \"^0.2.3\",\n\"babel-plugin-transform-react-remove-prop-types\": \"^0.2.10\",\n\"babel-plugin-transform-runtime\": \"^6.15.0\",\n\"babel-preset-es2015\": \"^6.18.0\",\n",
        "date": "06.03.2017 21:22:49",
        "repo": "semantic-org/semantic-ui-react",
        "type": "chore",
        "chatgpt_zeroshot": "Update babel-plugin-transform-react-handled-props to version 0.2.3"
    },
    {
        "msg": "chore(view): update cdn for faker",
        "diff": "diff --git a/docs/app/index.ejs b/docs/app/index.ejs src=\"//cdnjs.cloudflare.com/ajax/libs/babel-standalone/<%= htmlWebpackPlugin.options.versions.babel %>/babel.min.js\"\ndata-presets=\"es2015,react,stage1\"\n></script>\n- <script src=\"//cdnjs.cloudflare.com/ajax/libs/Faker/<%= htmlWebpackPlugin.options.versions.faker %>/faker.min.js\"></script>\n+ <script src=\"//cdn.jsdelivr.net/faker.js/<%= htmlWebpackPlugin.options.versions.faker %>/faker.min.js\"></script>\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/js-beautify/<%= htmlWebpackPlugin.options.versions.jsBeautify %>/beautify-html.min.js\"></script>\n<!-- Use unminified React when not in production so we get errors and warnings -->\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/react/<%= htmlWebpackPlugin.options.versions.react %>/react<%= __PROD__ ? '.min' : '' %>.js\"></script>\n",
        "date": "06.04.2017 12:48:04",
        "repo": "semantic-org/semantic-ui-react",
        "type": "chore",
        "chatgpt_zeroshot": "Update Faker CDN link to use cdn.jsdelivr.net."
    },
    {
        "msg": "chore(package): update satisfied to 1.1.0",
        "diff": "diff --git a/package.json b/package.json \"react-router-dom\": \"^4.0.0\",\n\"require-dir\": \"^0.3.0\",\n\"rimraf\": \"^2.5.2\",\n- \"satisfied\": \"^1.0.0\",\n+ \"satisfied\": \"^1.1.0\",\n\"semantic-ui-css\": \"^2.2.2\",\n\"simulant\": \"^0.2.2\",\n\"sinon\": \"^2.1.0\",\n",
        "date": "22.04.2017 09:24:46",
        "repo": "semantic-org/semantic-ui-react",
        "type": "chore",
        "chatgpt_zeroshot": "Update version of \"satisfied\" package to 1.1.0"
    },
    {
        "msg": "chore(package): add react-test-renderer",
        "diff": "diff --git a/package.json b/package.json \"doctoc\": \"^1.2.0\",\n\"doctrine\": \"^2.0.0\",\n\"empty\": \"^0.10.1\",\n- \"enzyme\": \"^2.7.1\",\n+ \"enzyme\": \"^2.8.2\",\n\"eslint-config-ta\": \"^5.2.0\",\n\"eslint-plugin-jsx-a11y\": \"^4.0.0\",\n\"express\": \"^4.13.4\",\n\"react-dom\": \"15.5.4\",\n\"react-router\": \"^4.0.0\",\n\"react-router-dom\": \"^4.0.0\",\n+ \"react-test-renderer\": \"^15.5.4\",\n\"require-dir\": \"^0.3.0\",\n\"rimraf\": \"^2.5.2\",\n\"satisfied\": \"^1.1.0\",\n",
        "date": "22.04.2017 09:34:48",
        "repo": "semantic-org/semantic-ui-react",
        "type": "chore",
        "chatgpt_zeroshot": "Update enzyme and react-test-renderer versions in package.json"
    },
    {
        "msg": "chore(dll): fix dll hash type",
        "diff": "diff --git a/webpack.dll.js b/webpack.dll.js @@ -17,7 +17,7 @@ webpackDllConfig.entry = {\nwebpackDllConfig.output = {\npath: paths.dll(),\nfilename: `dll.[name].[${config.compiler_hash_type}].js`,\n- library: '[name]_[hash]',\n+ library: `[name]_[${config.compiler_hash_type}]`,\n}\n// ------------------------------------\n",
        "date": "22.04.2017 09:47:31",
        "repo": "semantic-org/semantic-ui-react",
        "type": "chore",
        "chatgpt_zeroshot": "Fix library name interpolation in webpack.dll.js"
    },
    {
        "msg": "chore(dll): remove dynamic hash type",
        "diff": "diff --git a/webpack.dll.js b/webpack.dll.js @@ -16,8 +16,8 @@ webpackDllConfig.entry = {\n// ------------------------------------\nwebpackDllConfig.output = {\npath: paths.dll(),\n- filename: `dll.[name].[${config.compiler_hash_type}].js`,\n- library: `[name]_[${config.compiler_hash_type}]`,\n+ filename: 'dll.[name].js',\n+ library: '[name]_[hash]',\n}\n// ------------------------------------\n",
        "date": "22.04.2017 09:54:25",
        "repo": "semantic-org/semantic-ui-react",
        "type": "chore",
        "chatgpt_zeroshot": "Update webpack output configuration for DLL files"
    },
    {
        "msg": "chore(webpack): switch rawgit to github",
        "diff": "diff --git a/config.js b/config.js @@ -67,7 +67,7 @@ config = Object.assign({}, config, {\ncompiler_hash_type: __PROD__ ? 'chunkhash' : 'hash',\ncompiler_fail_on_warning: __TEST__ || __PROD__,\ncompiler_output_path: paths.base(config.dir_docs_dist),\n- compiler_public_path: __PROD__ ? '//cdn.rawgit.com/Semantic-Org/Semantic-UI-React/gh-pages/' : '/',\n+ compiler_public_path: __PROD__ ? '//raw.github.com/Semantic-Org/Semantic-UI-React/gh-pages/' : '/',\ncompiler_stats: {\nhash: false, // the hash of the compilation\nversion: false, // webpack version info\n",
        "date": "13.08.2017 12:06:56",
        "repo": "semantic-org/semantic-ui-react",
        "type": "chore",
        "chatgpt_zeroshot": "Update compiler_public_path in config.js"
    },
    {
        "msg": "chore(umd): fix gulp task require default",
        "diff": "diff --git a/gulp/tasks/umd.js b/gulp/tasks/umd.js @@ -21,7 +21,7 @@ task('clean:umd', (cb) => {\n// ----------------------------------------\ntask('build:umd:webpack', (cb) => {\n- const webpackUMDConfig = require('../../webpack.umd.config')\n+ const webpackUMDConfig = require('../../webpack.umd.config').default\nconst compiler = webpack(webpackUMDConfig)\ncompiler.run((err, stats) => {\n",
        "date": "20.08.2017 13:41:25",
        "repo": "semantic-org/semantic-ui-react",
        "type": "chore",
        "chatgpt_zeroshot": "Fix import of webpack.umd.config to use default export"
    },
    {
        "msg": "chore(package): tsd test on prerelease",
        "diff": "diff --git a/package.json b/package.json \"postdeploy:docs\": \"yarn build:changelog && yarn deploy:changelog\",\n\"lint\": \"cross-env NODE_ENV=production eslint .\",\n\"lint:fix\": \"yarn lint -- --fix\",\n- \"prerelease\": \"yarn lint && yarn tsd:lint && npm test && cross-env NODE_ENV=production yarn build\",\n+ \"prerelease\": \"yarn lint && yarn tsd:lint && yarn tsd:test && yarn test && cross-env NODE_ENV=production yarn build\",\n\"postrelease\": \"yarn deploy:docs\",\n\"release:major\": \"yarn prerelease && ta-script npm/release major && yarn postrelease\",\n\"release:minor\": \"yarn prerelease && ta-script npm/release minor && yarn postrelease\",\n",
        "date": "25.09.2017 07:58:34",
        "repo": "semantic-org/semantic-ui-react",
        "type": "chore",
        "chatgpt_zeroshot": "Update prerelease script to include tsd:test command"
    },
    {
        "msg": "chore(circleci): fix typo in a step name",
        "diff": "diff --git a/.circleci/config.yml b/.circleci/config.yml @@ -12,7 +12,7 @@ jobs:\n# Chrome HeadlessBrowser is missing deps on Debian, see:\n# https://github.com/GoogleChrome/puppeteer/issues/290\n- run:\n- name: Update Pupeteer Dependencies\n+ name: Update Puppeteer Dependencies\ncommand: |\nsudo apt-get update\nsudo apt-get install --yes --quiet gconf-service libasound2 libatk1.0-0 libc6 \\\n",
        "date": "18.10.2017 00:04:37",
        "repo": "semantic-org/semantic-ui-react",
        "type": "chore",
        "chatgpt_zeroshot": "Update Puppeteer Dependencies in CircleCI config file"
    },
    {
        "msg": "chore(package): remove -- arg separator",
        "diff": "diff --git a/package.json b/package.json \"deploy:docs\": \"gh-pages -d docs/build -m 'deploy docs [ci skip]'\",\n\"postdeploy:docs\": \"yarn build:changelog && yarn deploy:changelog\",\n\"lint\": \"cross-env NODE_ENV=production eslint .\",\n- \"lint:fix\": \"yarn lint -- --fix\",\n+ \"lint:fix\": \"yarn lint --fix\",\n\"prerelease\": \"yarn lint && yarn tsd:lint && yarn tsd:test && yarn test && cross-env NODE_ENV=production yarn build\",\n\"postrelease\": \"yarn deploy:docs\",\n\"release:major\": \"yarn prerelease && ta-script npm/release major && yarn postrelease\",\n\"release:minor\": \"yarn prerelease && ta-script npm/release minor && yarn postrelease\",\n\"release:patch\": \"yarn prerelease && ta-script npm/release patch && yarn postrelease\",\n- \"prestart\": \"yarn satisfied -- --fix yarn\",\n+ \"prestart\": \"yarn satisfied --fix yarn\",\n\"start\": \"yarn docs\",\n\"satisfied\": \"satisfied --skip-invalid\",\n\"pretest\": \"yarn satisfied && yarn build:dll\",\n\"test\": \"cross-env NODE_ENV=test node -r babel-register ./node_modules/karma/bin/karma start karma.conf.babel.js\",\n- \"test:watch\": \"yarn test -- --no-single-run\",\n+ \"test:watch\": \"yarn test --no-single-run\",\n\"tsd\": \"gulp tsd\",\n\"tsd:lint\": \"tslint './index.d.ts' './src/**/*.d.ts' './src/**/*.tsx' './test/**/*.d.ts' './test/**/*.tsx'\",\n- \"tsd:lint:fix\": \"yarn tsd:lint -- --fix\",\n+ \"tsd:lint:fix\": \"yarn tsd:lint --fix\",\n\"tsd:test\": \"yarn tsd && tsc -p ./ && rm test/typings.js\"\n},\n\"repository\": {\n",
        "date": "19.10.2017 18:04:47",
        "repo": "semantic-org/semantic-ui-react",
        "type": "chore",
        "chatgpt_zeroshot": "Refactor lint and test scripts in package.json"
    },
    {
        "msg": "chore(test): fix browser config",
        "diff": "diff --git a/karma.conf.babel.js b/karma.conf.babel.js @@ -29,7 +29,7 @@ const formatError = (msg) => {\nexport default (karmaConfig) => {\nkarmaConfig.set({\nbasePath: process.cwd(),\n- browsers: ['ChromeHeadless'],\n+ browsers: ['puppeteer'],\nclient: {\nmocha: {\nreporter: 'html', // change Karma's debug.html to mocha web reporter\n@@ -47,6 +47,8 @@ export default (karmaConfig) => {\npuppeteer: {\nbase: 'ChromeHeadless',\nflags: [\n+ '--disable-setuid-sandbox',\n+ '--no-sandbox',\n// Avoid \"Maximum call stack size exceeded\" errors on CircleCI\n'--stack-trace-limit 50000',\n],\n",
        "date": "29.10.2017 16:57:17",
        "repo": "semantic-org/semantic-ui-react",
        "type": "chore",
        "chatgpt_zeroshot": "Switch browser from ChromeHeadless to puppeteer and add flags to puppeteer configuration."
    },
    {
        "msg": "chore(package): restore babel option `modules: false` for ESM builds\n* build: restore babel option `modules: false` for webpack's tree shaking\nthis closes\n* Update preset-env.js",
        "diff": "diff --git a/build/preset-env.js b/build/preset-env.js @@ -18,9 +18,12 @@ const browsers = [\n'not ie_mob <= 11',\n]\n-module.exports = {\n- presets: [['env', {\n+const envOptions = {\ntargets: { browsers },\n- }]],\n+}\n+if (env === 'build-es') envOptions.modules = false\n+\n+module.exports = {\n+ presets: [['env', envOptions]],\nplugins,\n}\n",
        "date": "19.03.2018 19:29:16",
        "repo": "semantic-org/semantic-ui-react",
        "type": "chore",
        "chatgpt_zeroshot": "Add conditional module setting for build-es environment in preset-env configuration"
    },
    {
        "msg": "chore(package): remove changelog deploy scripts",
        "diff": "diff --git a/package.json b/package.json \"build:docs-toc\": \"doctoc ./.github/CONTRIBUTING.md --github --maxlevel 4\",\n\"build:docs-cname\": \"echo react.semantic-ui.com > docs/build/CNAME\",\n\"build:changelog\": \"github_changelog_generator --no-issues --no-unreleased --release-branch master --since-tag $(git describe --abbrev=0 --tags $(git rev-parse HEAD~400))\",\n- \"deploy:changelog\": \"git add CHANGELOG.md && git commit -m 'docs(changelog): update changelog [ci skip]' && git push\",\n\"predeploy:docs\": \"cross-env NODE_ENV=production yarn build:docs && yarn build:docs-cname\",\n\"deploy:docs\": \"gh-pages -d docs/build -m 'deploy docs [ci skip]'\",\n- \"postdeploy:docs\": \"yarn build:changelog && yarn deploy:changelog\",\n\"lint\": \"cross-env NODE_ENV=production eslint .\",\n\"lint:fix\": \"yarn lint --fix\",\n\"prerelease\": \"yarn lint && yarn tsd:lint && yarn tsd:test && yarn test && cross-env NODE_ENV=production yarn build\",\n",
        "date": "25.03.2018 10:21:17",
        "repo": "semantic-org/semantic-ui-react",
        "type": "chore",
        "chatgpt_zeroshot": "refactor: remove unnecessary deploy:changelog script and postdeploy:docs script"
    },
    {
        "msg": "chore(package): restore changelog deploy scripts [ci skip]",
        "diff": "diff --git a/package.json b/package.json \"build:docs-toc\": \"doctoc ./.github/CONTRIBUTING.md --github --maxlevel 4\",\n\"build:docs-cname\": \"echo react.semantic-ui.com > docs/build/CNAME\",\n\"build:changelog\": \"github_changelog_generator --no-issues --no-unreleased --release-branch master --since-tag $(git describe --abbrev=0 --tags $(git rev-parse HEAD~400))\",\n+ \"deploy:changelog\": \"git add CHANGELOG.md && git commit -m 'docs(changelog): update changelog [ci skip]' && git push\",\n\"predeploy:docs\": \"cross-env NODE_ENV=production yarn build:docs && yarn build:docs-cname\",\n\"deploy:docs\": \"gh-pages -d docs/build -m 'deploy docs [ci skip]'\",\n+ \"postdeploy:docs\": \"yarn build:changelog && yarn deploy:changelog\",\n\"lint\": \"cross-env NODE_ENV=production eslint .\",\n\"lint:fix\": \"yarn lint --fix\",\n\"prettier\": \"prettier --list-different \\\"**/*.{js,jsx,ts,tsx}\\\"\",\n",
        "date": "05.05.2018 12:00:36",
        "repo": "semantic-org/semantic-ui-react",
        "type": "chore",
        "chatgpt_zeroshot": "feat: add deploy script for updating changelog and postdeploy action"
    },
    {
        "msg": "chore(carbonads): update script src",
        "diff": "diff --git a/docs/app/Components/CarbonAd/CarbonAd.js b/docs/app/Components/CarbonAd/CarbonAd.js @@ -11,7 +11,7 @@ class CarbonAd extends Component {\nscript.async = true\nscript.id = '_carbonads_js'\nscript.type = 'text/javascript'\n- script.src = '//cdn.carbonads.com/carbon.js?zoneid=1673&serve=C6AILKT&placement=reactsemanticuicom'\n+ script.src = '//cdn.carbonads.com/carbon.js?serve=CK7DT23J&placement=reactsemanticuicom'\nthis.ifRef(ref => ref.appendChild(script))\n}\n",
        "date": "24.05.2018 23:14:54",
        "repo": "semantic-org/semantic-ui-react",
        "type": "chore",
        "chatgpt_zeroshot": "Update CarbonAd script source URL"
    },
    {
        "msg": "chore(CI): use prebuilt image",
        "diff": "diff --git a/.circleci/config.yml b/.circleci/config.yml @@ -6,22 +6,10 @@ general:\njobs:\nbuild:\ndocker:\n- - image: circleci/node:8\n+ - image: circleci/node:8-browsers\nenvironment:\nTZ: \"/usr/share/zoneinfo/America/Los_Angeles\"\nsteps:\n- # Chrome HeadlessBrowser is missing deps on Debian, see:\n- # https://github.com/GoogleChrome/puppeteer/issues/290\n- - run:\n- name: Update Puppeteer Dependencies\n- command: |\n- sudo apt-get update\n- sudo apt-get install --yes --quiet gconf-service libasound2 libatk1.0-0 libc6 \\\n- libcairo2 libcups2 libdbus-1-3 libexpat1 libfontconfig1 libgcc1 libgconf-2-4 \\\n- libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 libpango-1.0-0 libpangocairo-1.0-0 \\\n- libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 libxdamage1 libxext6 \\\n- libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 ca-certificates fonts-liberation \\\n- libappindicator1 libnss3 lsb-release xdg-utils wget\n- run:\nname: Update yarn\ncommand: |\n",
        "date": "25.05.2018 11:47:43",
        "repo": "semantic-org/semantic-ui-react",
        "type": "chore",
        "chatgpt_zeroshot": "Update CircleCI configuration to use node:8-browsers image and remove unnecessary Puppeteer dependencies installation."
    },
    {
        "msg": "chore(gulp): fix deploy docs task path",
        "diff": "diff --git a/gulp/tasks/docs.js b/gulp/tasks/docs.js @@ -2,6 +2,7 @@ import historyApiFallback from 'connect-history-api-fallback'\nimport express from 'express'\nimport { task, src, dest, lastRun, parallel, series, watch } from 'gulp'\nimport loadPlugins from 'gulp-load-plugins'\n+import path from 'path'\nimport rimraf from 'rimraf'\nimport webpack from 'webpack'\nimport WebpackDevMiddleware from 'webpack-dev-middleware'\n@@ -165,7 +166,8 @@ task('deploy:changelog', (cb) => {\n})\ntask('deploy:docs', (cb) => {\n- sh(`gh-pages -d ${paths.docsDist()} -m \"deploy docs [ci skip]\"`, cb)\n+ const relativePath = path.relative(process.cwd(), paths.docsDist())\n+ sh(`gh-pages -d ${relativePath} -m \"deploy docs [ci skip]\"`, cb)\n})\n// ----------------------------------------\n",
        "date": "02.06.2018 20:24:53",
        "repo": "semantic-org/semantic-ui-react",
        "type": "chore",
        "chatgpt_zeroshot": "Refactor deploy:docs task to use relative path for docsDist"
    },
    {
        "msg": "chore(gulp): fix dist:clean task",
        "diff": "diff --git a/gulp/tasks/dist.js b/gulp/tasks/dist.js @@ -15,7 +15,7 @@ const { log, PluginError } = g.util\n// ----------------------------------------\ntask('clean:dist', (cb) => {\n- rimraf(config.paths.dist(), cb)\n+ rimraf(`${config.paths.dist()}/*`, cb)\n})\n// ----------------------------------------\n",
        "date": "03.06.2018 19:08:58",
        "repo": "semantic-org/semantic-ui-react",
        "type": "chore",
        "chatgpt_zeroshot": "Refactor clean:dist task to delete all files inside dist directory"
    },
    {
        "msg": "chore(circle): cycle cache keys",
        "diff": "diff --git a/.circleci/config.yml b/.circleci/config.yml @@ -26,17 +26,14 @@ jobs:\ncommand: echo 'export PATH=\"${PATH}:$(npm bin)\"' >> $BASH_ENV\n- restore_cache:\nkeys:\n- - v1-dependencies-{{ checksum \"yarn.lock\" }}\n- - v1-dependencies\n+ - v2-dependencies-{{ checksum \"yarn.lock\" }}\n- run:\nname: Install Dependencies\ncommand: yarn\n- save_cache:\n- key: v1-dependencies-{{ checksum \"yarn.lock\" }}\n+ key: v2-dependencies-{{ checksum \"yarn.lock\" }}\npaths:\n- ~/.cache/yarn\n- - .yarn-cache\n- - node_modules\n- run:\nname: Lint TypeScript\ncommand: yarn tsd:lint\n",
        "date": "05.07.2018 22:00:35",
        "repo": "semantic-org/semantic-ui-react",
        "type": "chore",
        "chatgpt_zeroshot": "Update cache key for yarn.lock in CircleCI config"
    },
    {
        "msg": "chore(package): fix postdeploy:docs script",
        "diff": "diff --git a/package.json b/package.json \"predeploy:docs\": \"cross-env NODE_ENV=production yarn build:docs && gulp build:docs:cname\",\n\"deploy:changelog\": \"git add CHANGELOG.md && git commit -m \\\"docs(changelog): update changelog [ci skip]\\\" && git push\",\n\"deploy:docs\": \"gulp deploy:docs\",\n- \"postdeploy:docs\": \"yarn build:changelog && gulp deploy:changelog\",\n+ \"postdeploy:docs\": \"yarn build:changelog && yarn deploy:changelog\",\n\"lint\": \"cross-env NODE_ENV=production eslint .\",\n\"lint:fix\": \"yarn lint --fix\",\n\"prettier\": \"prettier --list-different \\\"**/*.{js,jsx,ts,tsx}\\\"\",\n",
        "date": "05.07.2018 23:39:39",
        "repo": "semantic-org/semantic-ui-react",
        "type": "chore",
        "chatgpt_zeroshot": "Refactor deploy:docs script to use yarn instead of gulp"
    },
    {
        "msg": "chore(config): remove unused options",
        "diff": "diff --git a/config.js b/config.js @@ -42,12 +42,6 @@ const config = {\n...envConfig,\npaths,\n- // ----------------------------------\n- // Server Configuration\n- // ----------------------------------\n- server_host: 'localhost',\n- server_port: process.env.PORT || 8080,\n-\n// ----------------------------------\n// Compiler Configuration\n// ----------------------------------\n",
        "date": "13.08.2018 10:41:13",
        "repo": "semantic-org/semantic-ui-react",
        "type": "chore",
        "chatgpt_zeroshot": "Remove server configuration from config.js"
    },
    {
        "msg": "chore(Sidebar): use EventStack component\nchore(Sidebar): use EventStack component",
        "diff": "diff --git a/src/modules/Sidebar/Sidebar.js b/src/modules/Sidebar/Sidebar.js +import EventStack from '@semantic-ui-react/event-stack'\nimport cx from 'classnames'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\n@@ -8,7 +9,6 @@ import {\nchildrenUtils,\ncustomPropTypes,\ndoesNodeContainClick,\n- eventStack,\ngetUnhandledProps,\ngetElementType,\nuseKeyOnly,\n@@ -100,41 +100,15 @@ class Sidebar extends Component {\nstate = {}\n- componentDidMount() {\n- const { visible } = this.props\n-\n- if (visible) this.addListener()\n- }\n-\n- componentWillUnmount() {\n- const { visible } = this.props\n-\n- if (visible) this.removeListener()\n- clearTimeout(this.animationTimer)\n- }\n-\ncomponentDidUpdate(prevProps) {\nconst { visible: prevVisible } = prevProps\nconst { visible: currentVisible } = this.props\n- if (prevVisible === currentVisible) return\n-\n- this.handleAnimationStart()\n-\n- if (currentVisible) {\n- this.addListener()\n- return\n- }\n-\n- this.removeListener()\n+ if (prevVisible !== currentVisible) this.handleAnimationStart()\n}\n- addListener() {\n- eventStack.sub('click', this.handleDocumentClick)\n- }\n-\n- removeListener() {\n- eventStack.unsub('click', this.handleDocumentClick)\n+ componentWillUnmount() {\n+ clearTimeout(this.animationTimer)\n}\nhandleAnimationStart = () => {\n@@ -192,6 +166,7 @@ class Sidebar extends Component {\n<Ref innerRef={this.handleRef}>\n<ElementType {...rest} className={classes}>\n{childrenUtils.isNil(children) ? content : children}\n+ {visible && <EventStack name='click' on={this.handleDocumentClick} />}\n</ElementType>\n</Ref>\n)\n",
        "date": "03.10.2018 12:55:23",
        "repo": "semantic-org/semantic-ui-react",
        "type": "chore",
        "chatgpt_zeroshot": "Refactor Sidebar component to use EventStack for handling document click events"
    },
    {
        "msg": "chore(changelog): update generator version",
        "diff": "diff --git a/package.json b/package.json \"sideEffects\": false,\n\"scripts\": {\n\"build\": \"cross-env NODE_ENV=production gulp build\",\n- \"build:changelog\": \"github_changelog_generator --no-issues --no-unreleased --release-branch master --since-tag $(git describe --abbrev=0 --tags $(git rev-parse HEAD~300))\",\n+ \"build:changelog\": \"github_changelog_generator --user Semantic-Org --project Semantic-UI-React --no-issues --no-unreleased --release-branch master --breaking-labels breaking-change --since-tag $(git describe --abbrev=0 --tags $(git rev-parse HEAD~250))\",\n\"build:docs\": \"cross-env NODE_ENV=production gulp build:docs\",\n\"build:docs:staging\": \"cross-env STAGING=true yarn build:docs && yarn serve docs/dist\",\n\"build:dist\": \"gulp --series build:dist\",\n",
        "date": "09.12.2018 16:53:27",
        "repo": "semantic-org/semantic-ui-react",
        "type": "chore",
        "chatgpt_zeroshot": "Update build:changelog script in package.json"
    },
    {
        "msg": "chore(tests): make reporter more silent",
        "diff": "diff --git a/karma.conf.babel.js b/karma.conf.babel.js @@ -69,6 +69,9 @@ export default (karmaConfig) => {\n],\nformatError,\nframeworks: ['mocha'],\n+ mochaReporter: {\n+ output: 'minimal',\n+ },\n// make karma serve all files that the web server does: /* => /docs/app/*\nproxies: fs.readdirSync(paths.docsPublic()).reduce((acc, file) => {\nconst isDir = fs.statSync(paths.docsPublic(file)).isDirectory()\n",
        "date": "16.01.2019 20:31:07",
        "repo": "semantic-org/semantic-ui-react",
        "type": "chore",
        "chatgpt_zeroshot": "Add minimal output option to mocha reporter in karma configuration"
    },
    {
        "msg": "chore(Modal): use createRef() API internally",
        "diff": "diff --git a/src/modules/Modal/Modal.js b/src/modules/Modal/Modal.js import cx from 'classnames'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\n-import React, { isValidElement } from 'react'\n+import React, { createRef, Fragment, isValidElement } from 'react'\nimport {\nAutoControlledComponent as Component,\n@@ -151,6 +151,9 @@ class Modal extends Component {\nstatic Description = ModalDescription\nstatic Actions = ModalActions\n+ ref = createRef()\n+ dimmerRef = createRef()\n+\ncomponentWillUnmount() {\ndebug('componentWillUnmount()')\nthis.handlePortalUnmount()\n@@ -179,7 +182,7 @@ class Modal extends Component {\ndebug('handleDocumentClick()')\nconst { closeOnDimmerClick } = this.props\n- if (!closeOnDimmerClick || doesNodeContainClick(this.ref, e)) return\n+ if (!closeOnDimmerClick || doesNodeContainClick(this.ref.current, e)) return\n_.invoke(this.props, 'onClose', e, this.props)\nthis.trySetState({ open: false })\n@@ -206,7 +209,10 @@ class Modal extends Component {\nthis.setState({ scrolling: false })\nthis.setPositionAndClassNames()\n- eventStack.sub('click', this.handleDocumentClick, { pool: eventPool, target: this.dimmerRef })\n+ eventStack.sub('click', this.handleDocumentClick, {\n+ pool: eventPool,\n+ target: this.dimmerRef.current,\n+ })\n_.invoke(this.props, 'onMount', e, this.props)\n}\n@@ -215,19 +221,18 @@ class Modal extends Component {\ndebug('handlePortalUnmount()', { eventPool })\ncancelAnimationFrame(this.animationRequestId)\n- eventStack.unsub('click', this.handleDocumentClick, { pool: eventPool, target: this.dimmerRef })\n+ eventStack.unsub('click', this.handleDocumentClick, {\n+ pool: eventPool,\n+ target: this.dimmerRef.current,\n+ })\n_.invoke(this.props, 'onUnmount', e, this.props)\n}\n- handleRef = c => (this.ref = c)\n-\n- handleDimmerRef = c => (this.dimmerRef = c)\n-\nsetDimmerNodeStyle = () => {\ndebug('setDimmerNodeStyle()')\n- if (this.dimmerRef) {\n- this.dimmerRef.style.setProperty('display', 'flex', 'important')\n+ if (this.dimmerRef.current) {\n+ this.dimmerRef.current.style.setProperty('display', 'flex', 'important')\n}\n}\n@@ -245,8 +250,8 @@ class Modal extends Component {\nconst newState = {}\n- if (this.ref) {\n- const { height } = this.ref.getBoundingClientRect()\n+ if (this.ref.current) {\n+ const { height } = this.ref.current.getBoundingClientRect()\n// Leaving the old calculation here since we may need it as an older browser fallback\n// SEE: https://github.com/Semantic-Org/Semantic-UI/issues/6185#issuecomment-376725956\n@@ -301,30 +306,21 @@ class Modal extends Component {\nconst closeIconName = closeIcon === true ? 'close' : closeIcon\nconst closeIconJSX = Icon.create(closeIconName, { overrideProps: this.handleIconOverrides })\n- if (!childrenUtils.isNil(children)) {\n- // TODO: remove when ref with \"as\" is resolved: PR #2306\n- return (\n- <Ref innerRef={this.handleRef}>\n- <ElementType {...rest} className={classes} style={{ marginTop, ...style }}>\n- <MountNode className={mountClasses} node={mountNode} />\n-\n- {closeIconJSX}\n- {children}\n- </ElementType>\n- </Ref>\n- )\n- }\n-\n- // TODO: remove when ref with \"as\" is resolved: PR #2306\nreturn (\n- <Ref innerRef={this.handleRef}>\n+ <Ref innerRef={this.ref}>\n<ElementType {...rest} className={classes} style={{ marginTop, ...style }}>\n<MountNode className={mountClasses} node={mountNode} />\n{closeIconJSX}\n+ {childrenUtils.isNil(children) ? (\n+ <Fragment>\n{ModalHeader.create(header, { autoGenerateKey: false })}\n{ModalContent.create(content, { autoGenerateKey: false })}\n{ModalActions.create(actions, { overrideProps: this.handleActionsOverrides })}\n+ </Fragment>\n+ ) : (\n+ children\n+ )}\n</ElementType>\n</Ref>\n)\n@@ -386,7 +382,7 @@ class Modal extends Component {\nonOpen={this.handleOpen}\nonUnmount={this.handlePortalUnmount}\n>\n- <div className={dimmerClasses} ref={this.handleDimmerRef}>\n+ <div className={dimmerClasses} ref={this.dimmerRef}>\n{this.renderContent(rest)}\n</div>\n</Portal>\n",
        "date": "23.02.2019 10:40:01",
        "repo": "semantic-org/semantic-ui-react",
        "type": "chore",
        "chatgpt_zeroshot": "Refactor Modal component to use createRef for refs and update event handling logic."
    },
    {
        "msg": "chore(Button): use createRef() API internally",
        "diff": "diff --git a/src/elements/Button/Button.js b/src/elements/Button/Button.js import cx from 'classnames'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\n-import React, { Component } from 'react'\n+import React, { Component, createRef } from 'react'\nimport {\nchildrenUtils,\n@@ -155,6 +155,8 @@ class Button extends Component {\nstatic Group = ButtonGroup\nstatic Or = ButtonOr\n+ ref = createRef()\n+\ncomputeButtonAriaRole(ElementType) {\nconst { role } = this.props\n@@ -176,7 +178,7 @@ class Button extends Component {\nif (ElementType === 'div') return 0\n}\n- focus = () => _.invoke(this.ref, 'focus')\n+ focus = () => _.invoke(this.ref.current, 'focus')\nhandleClick = (e) => {\nconst { disabled } = this.props\n@@ -189,8 +191,6 @@ class Button extends Component {\n_.invoke(this.props, 'onClick', e, this.props)\n}\n- handleRef = c => (this.ref = c)\n-\nhasIconClass = () => {\nconst { labelPosition, children, content, icon } = this.props\n@@ -268,9 +268,9 @@ class Button extends Component {\n{labelPosition === 'left' && labelElement}\n<button\nclassName={buttonClasses}\n- aria-pressed={toggle ? (!!active) : undefined}\n+ aria-pressed={toggle ? !!active : undefined}\ndisabled={disabled}\n- ref={this.handleRef}\n+ ref={this.ref}\ntabIndex={tabIndex}\n>\n{Icon.create(icon, { autoGenerateKey: false })} {content}\n@@ -288,10 +288,10 @@ class Button extends Component {\n<ElementType\n{...rest}\nclassName={classes}\n- aria-pressed={toggle ? (!!active) : undefined}\n+ aria-pressed={toggle ? !!active : undefined}\ndisabled={(disabled && ElementType === 'button') || undefined}\nonClick={this.handleClick}\n- ref={this.handleRef}\n+ ref={this.ref}\nrole={role}\ntabIndex={tabIndex}\n>\n",
        "date": "23.02.2019 11:40:02",
        "repo": "semantic-org/semantic-ui-react",
        "type": "chore",
        "chatgpt_zeroshot": "Refactor Button component to use createRef for ref handling"
    },
    {
        "msg": "chore(package): remove `browser` field\n* chore(package): remove `browser` field\nReverts changes introduced in fixes\n* Update package.json",
        "diff": "diff --git a/package.json b/package.json \"jsnext:main\": \"dist/es/index.js\",\n\"main\": \"dist/commonjs/index.js\",\n\"module\": \"dist/es/index.js\",\n- \"browser\": \"dist/umd/semantic-ui-react.min.js\",\n\"types\": \"index.d.ts\",\n+ \"unpkg\": \"dist/umd/semantic-ui-react.min.js\",\n\"files\": [\n\"src\",\n\"dist\",\n",
        "date": "06.05.2019 23:13:41",
        "repo": "semantic-org/semantic-ui-react",
        "type": "chore",
        "chatgpt_zeroshot": "Update package.json to include unpkg field for UMD build of semantic-ui-react."
    },
    {
        "msg": "chore: update husky hooks",
        "diff": "diff --git a/package.json b/package.json \"lint:fix\": \"yarn lint --fix\",\n\"prettier\": \"prettier --list-different \\\"**/*.{js,jsx,ts,tsx}\\\"\",\n\"prettier:fix\": \"prettier --write \\\"**/*.{js,jsx,ts,tsx}\\\"\",\n- \"postcommit\": \"git update-index --again\",\n\"prerelease\": \"yarn lint && yarn tsd:lint && yarn tsd:test && yarn test && cross-env NODE_ENV=production yarn build\",\n\"postrelease\": \"yarn deploy:docs\",\n\"release:major\": \"yarn prerelease && ta-script npm/release major && yarn postrelease\",\n},\n\"husky\": {\n\"hooks\": {\n- \"pre-commit\": \"lint-staged\"\n+ \"pre-commit\": \"lint-staged\",\n+ \"post-commit\": \"git update-index --again\"\n}\n},\n\"lint-staged\": {\n",
        "date": "08.12.2019 14:27:59",
        "repo": "semantic-org/semantic-ui-react",
        "type": "chore",
        "chatgpt_zeroshot": "Add post-commit hook to update index again after commit"
    },
    {
        "msg": "chore(Visibility): remove usage of deprecated lifecycle methods",
        "diff": "diff --git a/src/behaviors/Visibility/Visibility.js b/src/behaviors/Visibility/Visibility.js @@ -187,22 +187,6 @@ export default class Visibility extends Component {\n// Lifecycle\n// ----------------------------------------\n- // eslint-disable-next-line camelcase\n- UNSAFE_componentWillReceiveProps({ continuous, once, context, updateOn }) {\n- const cleanHappened =\n- continuous !== this.props.continuous ||\n- once !== this.props.once ||\n- updateOn !== this.props.updateOn\n-\n- // Heads up! We should clean up array of happened callbacks, if values of these props are changed\n- if (cleanHappened) this.firedCallbacks = []\n-\n- if (context !== this.props.context || updateOn !== this.props.updateOn) {\n- this.unattachHandlers(this.props.context)\n- this.attachHandlers(context, updateOn)\n- }\n- }\n-\ncomponentDidMount() {\nthis.mounted = true\n@@ -215,6 +199,21 @@ export default class Visibility extends Component {\nif (fireOnMount) this.update()\n}\n+ componentDidUpdate(prevProps) {\n+ const cleanHappened =\n+ prevProps.continuous !== this.props.continuous ||\n+ prevProps.once !== this.props.once ||\n+ prevProps.updateOn !== this.props.updateOn\n+\n+ // Heads up! We should clean up array of happened callbacks, if values of these props are changed\n+ if (cleanHappened) this.firedCallbacks = []\n+\n+ if (prevProps.context !== this.props.context || prevProps.updateOn !== this.props.updateOn) {\n+ this.unattachHandlers(prevProps.context)\n+ this.attachHandlers(this.props.context, this.props.updateOn)\n+ }\n+ }\n+\ncomponentWillUnmount() {\nconst { context } = this.props\n",
        "date": "29.06.2020 09:26:26",
        "repo": "semantic-org/semantic-ui-react",
        "type": "chore",
        "chatgpt_zeroshot": "Refactor componentWillReceiveProps to componentDidUpdate in Visibility component"
    },
    {
        "msg": "chore(Sticky): remove usage of deprecated lifecycle methods",
        "diff": "diff --git a/src/modules/Sticky/Sticky.js b/src/modules/Sticky/Sticky.js @@ -88,6 +88,7 @@ export default class Sticky extends Component {\n}\nstate = {\n+ active: true,\nsticky: false,\n}\n@@ -96,43 +97,47 @@ export default class Sticky extends Component {\ncomponentDidMount() {\nif (!isBrowser()) return\n- const { active } = this.props\n+ const { active } = this.state\nif (active) {\nthis.handleUpdate()\n- this.addListeners(this.props)\n+ this.addListeners(this.props.scrollContext)\n}\n}\n- // eslint-disable-next-line camelcase\n- UNSAFE_componentWillReceiveProps(nextProps) {\n- const { active: current, scrollContext: currentScrollContext } = this.props\n- const { active: next, scrollContext: nextScrollContext } = nextProps\n+ static getDerivedStateFromProps(props, state) {\n+ if (state.active !== props.active && !props.active) {\n+ return { active: props.active, sticky: false }\n+ }\n- if (current === next) {\n- if (currentScrollContext !== nextScrollContext) {\n- this.removeListeners()\n- this.addListeners(nextProps)\n+ return { active: props.active }\n}\n+\n+ componentDidUpdate(prevProps, prevState) {\n+ if (prevState.active === this.state.active) {\n+ if (prevProps.scrollContext !== this.props.scrollContext) {\n+ this.removeListeners(prevProps.scrollContext)\n+ this.addListeners(this.props.scrollContext)\n+ }\n+\nreturn\n}\n- if (next) {\n+ if (this.state.active) {\nthis.handleUpdate()\n- this.addListeners(nextProps)\n+ this.addListeners(this.props.scrollContext)\nreturn\n}\n- this.removeListeners()\n- this.setState({ sticky: false })\n+ this.removeListeners(prevProps.scrollContext)\n}\ncomponentWillUnmount() {\nif (!isBrowser()) return\n- const { active } = this.props\n+ const { active } = this.state\nif (active) {\n- this.removeListeners()\n+ this.removeListeners(this.props.scrollContext)\ncancelAnimationFrame(this.frameId)\n}\n}\n@@ -141,8 +146,7 @@ export default class Sticky extends Component {\n// Events\n// ----------------------------------------\n- addListeners = (props) => {\n- const { scrollContext } = props\n+ addListeners = (scrollContext) => {\nconst scrollContextNode = isRefObject(scrollContext) ? scrollContext.current : scrollContext\nif (scrollContextNode) {\n@@ -151,8 +155,7 @@ export default class Sticky extends Component {\n}\n}\n- removeListeners = () => {\n- const { scrollContext } = this.props\n+ removeListeners = (scrollContext) => {\nconst scrollContextNode = isRefObject(scrollContext) ? scrollContext.current : scrollContext\nif (scrollContextNode) {\n",
        "date": "29.06.2020 09:43:47",
        "repo": "semantic-org/semantic-ui-react",
        "type": "chore",
        "chatgpt_zeroshot": "Refactor Sticky component to handle active state and scroll context properly"
    },
    {
        "msg": "chore: remove changelog generator [ci skip]",
        "diff": "diff --git a/package.json b/package.json \"sideEffects\": false,\n\"scripts\": {\n\"build\": \"cross-env NODE_ENV=production gulp build\",\n- \"build:changelog\": \"github_changelog_generator --user Semantic-Org --project Semantic-UI-React --no-issues --no-unreleased --release-branch master --since-tag $(git describe --abbrev=0 --tags $(git rev-parse HEAD~250))\",\n\"build:docs\": \"cross-env NODE_ENV=production gulp build:docs\",\n\"build:docs:staging\": \"cross-env STAGING=true yarn build:docs && yarn serve docs/dist\",\n\"build:dist\": \"gulp build:dist\",\n\"build:size\": \"node bundle-size/bundle.js\",\n\"ci\": \"yarn tsd:test && yarn lint && yarn test\",\n\"predeploy:docs\": \"cross-env NODE_ENV=production yarn build:docs && gulp build:docs:cname\",\n- \"deploy:changelog\": \"git add CHANGELOG.md && git commit -m \\\"docs(changelog): update changelog [ci skip]\\\" && git push\",\n\"deploy:docs\": \"gulp deploy:docs\",\n- \"postdeploy:docs\": \"yarn build:changelog && yarn deploy:changelog\",\n\"lint\": \"cross-env NODE_ENV=production eslint . --ext .js,.ts,.tsx\",\n\"lint:fix\": \"yarn lint --fix\",\n\"prettier\": \"prettier --list-different \\\"**/*.{js,jsx,ts,tsx}\\\"\",\n",
        "date": "12.08.2020 11:46:58",
        "repo": "semantic-org/semantic-ui-react",
        "type": "chore",
        "chatgpt_zeroshot": "Remove build:changelog and deploy:changelog scripts from package.json"
    },
    {
        "msg": "chore: fix lint-staged git add use [ci skip]",
        "diff": "diff --git a/package.json b/package.json \"lint-staged\": {\n\"**/*.{js,jsx,ts,tsx}\": [\n\"prettier --write\",\n- \"eslint --fix\",\n- \"git add\"\n+ \"eslint --fix\"\n],\n\"**/*.mdx\": [\n- \"prettier --parser mdx --write\",\n- \"git add\"\n+ \"prettier --parser mdx --write\"\n]\n},\n\"repository\": {\n",
        "date": "12.08.2020 11:47:44",
        "repo": "semantic-org/semantic-ui-react",
        "type": "chore",
        "chatgpt_zeroshot": "Remove git add from lint-staged configuration for js, jsx, ts, tsx files and mdx files"
    },
    {
        "msg": "chore: fix usage information",
        "diff": "diff --git a/bin/newman.js b/bin/newman.js @@ -85,7 +85,7 @@ program\nprogram.on('--help', function () {\nconsole.info('\\nTo get available options for a command:');\n- console.info(' newman [command] -h');\n+ console.info(' newman <command> -h');\n});\n// Warn on invalid command and then exits.\n",
        "date": "03.10.2019 21:33:27",
        "repo": "postmanlabs/newman",
        "type": "chore",
        "chatgpt_zeroshot": "Update help message in newman.js to use angle brackets for command placeholder"
    },
    {
        "msg": "chore: update to WHATWG url api",
        "diff": "diff --git a/lib/util.js b/lib/util.js var fs = require('fs'),\n- url = require('url'),\n+ { URL } = require('url'),\n_ = require('lodash'),\nchardet = require('chardet'),\n@@ -191,7 +191,7 @@ util = {\nresource = 'resource';\nif (response.statusCode !== 200) {\n- urlObj = url.parse(location);\n+ urlObj = new URL(location);\n(urlObj.hostname === POSTMAN_API_HOST) &&\n(resource = _(urlObj.path).split('/').get(1).slice(0, -1) || resource);\n",
        "date": "23.03.2021 12:22:42",
        "repo": "postmanlabs/newman",
        "type": "chore",
        "chatgpt_zeroshot": "Refactor util.js to use URL constructor instead of url module"
    },
    {
        "msg": "chore: npm audit fix",
        "diff": "diff --git a/package-lock.json b/package-lock.json \"integrity\": \"sha512-oWb1Z6mkHIskLzEJ/XWX0srkpkTQ7vaopMQkyaEIoq0fmtFVxOthb8cCxeT+p3ynTdkk/RZwbgG4brR5BeWECw==\",\n\"optional\": true,\n\"requires\": {\n- \"bindings\": \"^1.5.0\",\n- \"nan\": \"^2.12.1\"\n+ \"bindings\": \"^1.5.0\"\n}\n}\n}\n\"dev\": true,\n\"optional\": true,\n\"requires\": {\n- \"bindings\": \"^1.5.0\",\n- \"nan\": \"^2.12.1\"\n+ \"bindings\": \"^1.5.0\"\n}\n}\n}\n\"thenify-all\": \"^1.0.0\"\n}\n},\n- \"nan\": {\n- \"version\": \"2.15.0\",\n- \"resolved\": \"https://registry.npmjs.org/nan/-/nan-2.15.0.tgz\",\n- \"integrity\": \"sha512-8ZtvEnA2c5aYCZYd1cvgdnU6cqwixRoYg70xPLWUws5ORTa/lnw+u4amixRS/Ac5U5mQVgp9pnlSUnbNWFaWZQ==\",\n- \"optional\": true\n- },\n\"nanocolors\": {\n\"version\": \"0.1.12\",\n\"resolved\": \"https://registry.npmjs.org/nanocolors/-/nanocolors-0.1.12.tgz\",\n},\n\"glob-parent\": {\n\"version\": \"5.1.0\",\n- \"resolved\": \"https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.0.tgz\",\n- \"integrity\": \"sha512-qjtRgnIVmOfnKUE3NJAQEdk+lKrxfw8t5ke7SXtfMTHcjsBfOfWXCQfdb30zfDoZQ2IRSIiidmjtbHZPZ++Ihw==\",\n+ \"resolved\": \"\",\n\"requires\": {\n\"is-glob\": \"^4.0.1\"\n}\n",
        "date": "29.10.2021 23:10:43",
        "repo": "alfg/opendrinks",
        "type": "chore",
        "chatgpt_zeroshot": "Remove nan package and update glob-parent version in package-lock.json"
    },
    {
        "msg": "chore: update comments in MinaSigner.ts and keypair tests",
        "diff": "diff --git a/frontend/mina-signer/src/MinaSigner.ts b/frontend/mina-signer/src/MinaSigner.ts @@ -39,7 +39,7 @@ class Client {\n* the private key and additionally checking if we can use the private key to\n* sign a transaction. If the key pair is invalid, an exception is thrown.\n*\n- * @param keypair - A keypair\n+ * @param keypair A key pair\n* @returns True if the `keypair` is a verifiable key pair, otherwise throw an exception\n*/\npublic verifyKeypair(keypair: keypair): boolean {\n@@ -49,7 +49,7 @@ class Client {\n/**\n* Derives the public key of the corresponding private key\n*\n- * @param privateKey - The private key used to get the corresponding public key\n+ * @param privateKey The private key used to get the corresponding public key\n* @returns A public key\n*/\npublic derivePublicKey(privateKey: privateKey): publicKey {\n@@ -59,8 +59,8 @@ class Client {\n/**\n* Signs an arbitrary message\n*\n- * @param message - An arbitrary string message to be signed\n- * @param key- The keypair used to sign the message\n+ * @param message An arbitrary string message to be signed\n+ * @param key The key pair used to sign the message\n* @returns A signed message\n*/\npublic signMessage(message: string, key: keypair): signed<message> {\n@@ -76,7 +76,7 @@ class Client {\n/**\n* Verifies that a signature matches a message.\n*\n- * @param signedMessage - A signed message\n+ * @param signedMessage A signed message\n* @returns True if the `signedMessage` contains a valid signature matching\n* the message and publicKey.\n*/\n@@ -95,8 +95,8 @@ class Client {\n* This type of transaction allows a user to transfer funds from one account\n* to another over the network.\n*\n- * @param payment - An object describing the payment\n- * @param privateKey- The private key used to sign the transaction\n+ * @param payment An object describing the payment\n+ * @param privateKey The private key used to sign the transaction\n* @returns A signed payment transaction\n*/\npublic signPayment(\n@@ -138,7 +138,7 @@ class Client {\n/**\n* Verifies a signed payment.\n*\n- * @param signedPayment - A signed payment transaction\n+ * @param signedPayment A signed payment transaction\n* @returns True if the `signed(payment)` is a verifiable payment\n*/\npublic verifyPayment(signedPayment: signed<payment>): boolean {\n@@ -216,7 +216,7 @@ class Client {\n/**\n* Verifies a signed stake delegation.\n*\n- * @param signedStakeDelegation - A signed stake delegation\n+ * @param signedStakeDelegation A signed stake delegation\n* @returns True if the `signed(stakeDelegation)` is a verifiable stake delegation\n*/\npublic verifyStakeDelegation(\n@@ -249,7 +249,7 @@ class Client {\n/**\n* Compute the hash of a signed payment.\n*\n- * @param signedPayment - A signed payment transaction\n+ * @param signedPayment A signed payment transaction\n* @returns A transaction hash\n*/\npublic hashPayment(signedPayment: signed<payment>): string {\n@@ -282,7 +282,7 @@ class Client {\n/**\n* Compute the hash of a signed stake delegation.\n*\n- * @param signedStakeDelegation - A signed stake delegation\n+ * @param signedStakeDelegation A signed stake delegation\n* @returns A transaction hash\n*/\npublic hashStakeDelegation(\n@@ -317,7 +317,7 @@ class Client {\n* compatible with GraphQL. The JSON string is a representation of\n* a `Signed_command` which is what our GraphQL expects.\n*\n- * @param signedRosettaTxn - A signed Rosetta transaction\n+ * @param signedRosettaTxn A signed Rosetta transaction\n* @returns A string that represents the JSON conversion of a signed Rosetta transaction`.\n*/\npublic signedRosettaTransactionToSignedCommand(\n@@ -330,7 +330,7 @@ class Client {\n* Return the hex-encoded format of a valid public key. This will throw an exception if\n* the key is invalid or the conversion fails.\n*\n- * @param publicKey - A valid public key\n+ * @param publicKey A valid public key\n* @returns A string that represents the hex encoding of a public key.\n*/\npublic publicKeyToRaw(publicKey: string): string {\n",
        "date": "24.11.2021 12:25:19",
        "repo": "minaprotocol/mina",
        "type": "chore",
        "chatgpt_zeroshot": "Refactor method parameter names for consistency"
    },
    {
        "msg": "chore: type the `parsePath` function",
        "diff": "diff --git a/packages/history/index.ts b/packages/history/index.ts @@ -1043,28 +1043,28 @@ export function createPath({\n*\n* @see https://github.com/ReactTraining/history/tree/master/docs/api-reference.md#parsepath\n*/\n-export function parsePath(path: string) {\n- let partialPath: PartialPath = {\n+export function parsePath(path: string): PartialPath {\n+ let parsedPath: PartialPath = {\nsearch: ''\n};\nif (path) {\nlet hashIndex = path.indexOf('#');\nif (hashIndex >= 0) {\n- partialPath.hash = path.substr(hashIndex);\n+ parsedPath.hash = path.substr(hashIndex);\npath = path.substr(0, hashIndex);\n}\nlet searchIndex = path.indexOf('?');\nif (searchIndex >= 0) {\n- partialPath.search = path.substr(searchIndex);\n+ parsedPath.search = path.substr(searchIndex);\npath = path.substr(0, searchIndex);\n}\nif (path) {\n- partialPath.pathname = path;\n+ parsedPath.pathname = path;\n}\n}\n- return partialPath;\n+ return parsedPath;\n}\n",
        "date": "01.11.2021 14:48:27",
        "repo": "reacttraining/history",
        "type": "chore",
        "chatgpt_zeroshot": "Refactor parsePath function to use parsedPath variable instead of partialPath"
    },
    {
        "msg": "chore: Add CARD_TYPES constant for Type sorts",
        "diff": "diff --git a/src/utils/Sort.js b/src/utils/Sort.js @@ -55,6 +55,22 @@ const ALL_CMCS = Array.from(Array(33).keys())\n.map((x) => (x / 2).toString())\n.concat(['1000000']);\n+const CARD_TYPES = [\n+ 'Creature',\n+ 'Planeswalker',\n+ 'Instant',\n+ 'Sorcery',\n+ 'Artifact',\n+ 'Enchantment',\n+ 'Conspiracy',\n+ 'Contraption',\n+ 'Phenomenon',\n+ 'Plane',\n+ 'Scheme',\n+ 'Vanguard',\n+ 'Land',\n+];\n+\nconst SINGLE_COLOR = ['White', 'Blue', 'Black', 'Red', 'Green'];\nconst GUILDS = ['Azorius', 'Dimir', 'Rakdos', 'Gruul', 'Selesnya', 'Orzhov', 'Izzet', 'Golgari', 'Boros', 'Simic'];\nconst SHARDS_AND_WEDGES = ['Bant', 'Esper', 'Grixis', 'Jund', 'Naya', 'Mardu', 'Temur', 'Abzan', 'Jeskai', 'Sultai'];\n",
        "date": "09.03.2021 21:19:32",
        "repo": "dekkerglen/cubecobra",
        "type": "chore",
        "chatgpt_zeroshot": "Add new card types to Sort.js文件"
    },
    {
        "msg": "chore: Replace static Type sort labels",
        "diff": "diff --git a/src/utils/Sort.js b/src/utils/Sort.js @@ -262,22 +262,7 @@ function getLabelsRaw(cube, sort) {\nreturn ['White', 'Blue', 'Black', 'Red', 'Green', 'Colorless'];\n}\nif (sort === 'Type') {\n- return [\n- 'Creature',\n- 'Planeswalker',\n- 'Instant',\n- 'Sorcery',\n- 'Artifact',\n- 'Enchantment',\n- 'Conspiracy',\n- 'Contraption',\n- 'Phenomenon',\n- 'Plane',\n- 'Scheme',\n- 'Vanguard',\n- 'Land',\n- 'Other',\n- ];\n+ return CARD_TYPES.concat(['Other']);\n}\nif (sort === 'Supertype') {\nreturn ['Snow', 'Legendary', 'Tribal', 'Basic', 'Elite', 'Host', 'Ongoing', 'World'];\n@@ -352,48 +337,11 @@ function getLabelsRaw(cube, sort) {\nreturn [...types];\n}\nif (sort === 'Types-Multicolor') {\n- return [\n- 'Creature',\n- 'Planeswalker',\n- 'Instant',\n- 'Sorcery',\n- 'Artifact',\n- 'Enchantment',\n- 'Conspiracy',\n- 'Contraption',\n- 'Phenomenon',\n- 'Plane',\n- 'Scheme',\n- 'Vanguard',\n- 'Azorius',\n- 'Dimir',\n- 'Rakdos',\n- 'Gruul',\n- 'Selesnya',\n- 'Orzhov',\n- 'Golgari',\n- 'Simic',\n- 'Izzet',\n- 'Boros',\n- 'Bant',\n- 'Esper',\n- 'Grixis',\n- 'Jund',\n- 'Naya',\n- 'Abzan',\n- 'Jeskai',\n- 'Sultai',\n- 'Mardu',\n- 'Temur',\n- 'Non-White',\n- 'Non-Blue',\n- 'Non-Black',\n- 'Non-Red',\n- 'Non-Green',\n- 'Five Color',\n- 'Land',\n- 'Other',\n- ];\n+ return CARD_TYPES.slice(0, -1)\n+ .concat(GUILDS)\n+ .concat(SHARDS_AND_WEDGES)\n+ .concat(FOUR_AND_FIVE_COLOR)\n+ .concat(['Land', 'Other']);\n}\nif (sort === 'Legality') {\nreturn ['Standard', 'Modern', 'Legacy', 'Vintage', 'Pioneer', 'Brawl', 'Historic', 'Pauper', 'Penny', 'Commander'];\n",
        "date": "09.03.2021 21:32:19",
        "repo": "dekkerglen/cubecobra",
        "type": "chore",
        "chatgpt_zeroshot": "Refactor sorting options in Sort.js to include additional card types and categories."
    },
    {
        "msg": "chore: Fix broken link for CRA deployment",
        "diff": "diff --git a/packages/react-dev-utils/printHostingInstructions.js b/packages/react-dev-utils/printHostingInstructions.js @@ -39,7 +39,7 @@ function printHostingInstructions(\nconsole.log();\nconsole.log('Find out more about deployment here:');\nconsole.log();\n- console.log(` ${chalk.yellow('https://bit.ly/CRA-deploy')}`);\n+ console.log(` ${chalk.yellow('https://create-react-app.dev/docs/deployment')}`);\nconsole.log();\n}\n",
        "date": "29.10.2019 19:39:46",
        "repo": "react-workspaces/create-react-app",
        "type": "chore",
        "chatgpt_zeroshot": "Update deployment link in printHostingInstructions.js"
    },
    {
        "msg": "chore: Fix broken link for e2e README",
        "diff": "diff --git a/CONTRIBUTING.md b/CONTRIBUTING.md @@ -109,7 +109,7 @@ and then run `yarn start` or `yarn build`.\n**TL;DR** use the command `yarn e2e:docker` to run unit and e2e tests.\n-More detailed information are in the dedicated [README](/packages/react-scripts/fixtures/kitchensink/README.md).\n+More detailed information are in the dedicated [README](/test/README.md).\n### CI testing with private packages\n",
        "date": "29.10.2019 19:41:43",
        "repo": "react-workspaces/create-react-app",
        "type": "chore",
        "chatgpt_zeroshot": "Update README link in CONTRIBUTING.md"
    },
    {
        "msg": "chore: finally updating snapshots",
        "diff": "diff --git a/components/UpdateProfileForm/__tests__/__snapshots__/UpdateProfileForm.test.js.snap b/components/UpdateProfileForm/__tests__/__snapshots__/UpdateProfileForm.test.js.snap @@ -12,6 +12,28 @@ exports[`UpdateProfileForm should render with required props 1`] = `\n>\nProfessional Details\n</h3>\n+ <div\n+ className=\"ProgressIndicator\"\n+ >\n+ <div>\n+ 0\n+ /\n+ 3\n+ Complete\n+ </div>\n+ <div\n+ className=\"bar\"\n+ >\n+ <div\n+ className=\"progress\"\n+ style={\n+ Object {\n+ \"width\": \"0%\",\n+ }\n+ }\n+ />\n+ </div>\n+ </div>\n<div\nclassName=\"row\"\n>\n",
        "date": "09.10.2019 23:24:26",
        "repo": "operationcode/front-end",
        "type": "chore",
        "chatgpt_zeroshot": "Add progress indicator to UpdateProfileForm component"
    },
    {
        "msg": "chore: clean up and fix url",
        "diff": "diff --git a/components/SocialLoginGroup/SocialLoginGroup.css b/components/SocialLoginGroup/SocialLoginGroup.css }\n/* Github */\n-\n-/* WHITE */\n-\n-/* .githubButton {\n- color: #24292e;\n- background: #eff3f6;\n- transition: opacity 0.15s linear;\n- border: 1px solid #1b1f23;\n-}\n-\n-.githubButton::before {\n- border-right: #1b1f23 1px solid;\n- background-color: #eff3f6;\n- background-image: url(\"http://localhost:3000/static/images/icons/github_logo_black.svg\");\n- background-repeat: no-repeat;\n-}\n-\n-.githubButton:active,\n-.githubButton:hover,\n-.githubButton:focus {\n- opacity: 0.8;\n- cursor: pointer;\n-} */\n-\n-/* .githubButton {\n- color: #24292e;\n- background: #eff3f6;\n- transition: opacity 0.15s linear;\n- border: 1px solid #1b1f23;\n-}\n-\n-.githubButton::before {\n- content: url(\"http://localhost:3000/static/images/icons/github_logo_black.svg\");\n- border-right: #1b1f23 1px solid;\n- /* background-color: #eff3f6;\n- background-image: url(\"http://localhost:3000/static/images/icons/github_logo.svg\");\n- background-repeat: no-repeat;\n-}\n-\n-.githubButton:active,\n-.githubButton:hover,\n-.githubButton:focus {\n- opacity: 0.8;\n- cursor: pointer;\n-} */\n-\n-/* BLACK */\n.githubButton {\ncolor: #eff3f6;\nbackground: #24292e;\n.githubButton::before {\nborder-right: #b0b0b0 1px solid;\n- background: url(\"http://localhost:3000/static/images/icons/github_octocat_logo.svg\") 4px 4px\n- no-repeat;\n+ background: url(\"/static/images/icons/github_octocat_logo.svg\") 4px 4px no-repeat;\n}\n.githubButton:active,\n",
        "date": "16.10.2019 16:40:46",
        "repo": "operationcode/front-end",
        "type": "chore",
        "chatgpt_zeroshot": "Refactor Github button styles in SocialLoginGroup CSS"
    },
    {
        "msg": "chore: actions: add ability to auto fix typos (crate-ci/typos#358)",
        "diff": "diff --git a/.github/workflows/nodejs.yml b/.github/workflows/nodejs.yml @@ -24,6 +24,19 @@ jobs:\nrun: lerna bootstrap\n- name: Lint\nrun: redrun fix:lint\n+\n+ - uses: actions-rs/toolchain@v1\n+ with:\n+ toolchain: stable\n+\n+ - uses: actions-rs/cargo@v1\n+ with:\n+ command: install\n+ args: typos-cli\n+\n+ - name: Typos\n+ run: typos --write-changes || true\n+\n- name: Commit fixes\nuses: EndBug/add-and-commit@v7\nwith:\n@@ -34,5 +47,3 @@ jobs:\nuses: coverallsapp/github-action@master\nwith:\ngithub-token: ${{ secrets.GITHUB_TOKEN }}\n- - name: typos-action\n- uses: crate-ci/typos@v1.0.4\n",
        "date": "12.05.2022 20:14:58",
        "repo": "coderaiser/putout",
        "type": "chore",
        "chatgpt_zeroshot": "Add toolchain and cargo actions, and run typos check in nodejs workflow."
    },
    {
        "msg": "chore: package: v27.3.0",
        "diff": "diff --git a/packages/putout/ChangeLog b/packages/putout/ChangeLog +2022.08.24, v27.3.0\n+\n+fix:\n+- @putout/plugin-madrun: description\n+\n+feature:\n+- @putout/plugin-logical-expressions: add remove-duplicates\n+- @putout/plugin-logical-expressions: add\n+- (package) @putout/plugin-simplify-logical-expressions v4.0.0\n+- (@putout/plugin-simplify-logical-expressions) merge @putout/plugin-remove-duplicates-from-logical-expressions\n+\n2022.08.24, v27.2.0\nfeature:\n",
        "date": "24.08.2022 12:36:53",
        "repo": "coderaiser/putout",
        "type": "chore",
        "chatgpt_zeroshot": "Fix description in @putout/plugin-madrun and add new features in @putout/plugin-logical-expressions and @putout/plugin-simplify-logical-expressions."
    },
    {
        "msg": "chore: package: v27.3.1",
        "diff": "diff --git a/packages/putout/ChangeLog b/packages/putout/ChangeLog +2022.08.24, v27.3.1\n+\n+fix:\n+- putout: exit codes\n+\n2022.08.24, v27.3.0\nfix:\n",
        "date": "24.08.2022 13:27:59",
        "repo": "coderaiser/putout",
        "type": "chore",
        "chatgpt_zeroshot": "Fix putout exit codes"
    },
    {
        "msg": "chore: package: v14.0.1",
        "diff": "diff --git a/packages/engine-runner/package.json b/packages/engine-runner/package.json {\n\"name\": \"@putout/engine-runner\",\n- \"version\": \"14.0.0\",\n+ \"version\": \"14.0.1\",\n\"type\": \"commonjs\",\n\"author\": \"coderaiser <mnemonic.enemy@gmail.com> (https://github.com/coderaiser)\",\n\"description\": \"run putout plugins\",\n",
        "date": "27.08.2022 11:36:30",
        "repo": "coderaiser/putout",
        "type": "chore",
        "chatgpt_zeroshot": "Bump version to 14.0.1 in package.json"
    },
    {
        "msg": "chore: github actions: typos install: speed up",
        "diff": "diff --git a/.github/workflows/nodejs.yml b/.github/workflows/nodejs.yml @@ -41,7 +41,7 @@ jobs:\nkey: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}\n- name: Typos Install\n- run: cargo install typos-cli || echo 'already installed'\n+ run: which typos || cargo install typos-cli\n- name: Typos\nrun: typos --write-changes\n",
        "date": "27.08.2022 22:59:01",
        "repo": "coderaiser/putout",
        "type": "chore",
        "chatgpt_zeroshot": "Update typos installation command in GitHub Actions workflow"
    },
    {
        "msg": "chore: package: v27.7.0",
        "diff": "diff --git a/packages/putout/ChangeLog b/packages/putout/ChangeLog +2022.08.28, v27.7.0\n+\n+feature:\n+- @putout/eslint: add\n+- package: @putout/eslint v1.0.0\n+\n2022.08.27, v27.6.0\nfix:\n",
        "date": "28.08.2022 12:30:58",
        "repo": "coderaiser/putout",
        "type": "chore",
        "chatgpt_zeroshot": "Add @putout/eslint package v1.0.0 in v27.7.0"
    },
    {
        "msg": "chore: package: v1.3.0",
        "diff": "diff --git a/.nycrc.json b/.nycrc.json \"**/.*.*\",\n\"packages/*/coverage\",\n\"packages/*/bin\",\n- \"packages/*/test\"\n+ \"packages/*/test\",\n+ \"**/eslint.config.js\"\n],\n\"branches\": 100,\n\"lines\": 100,\n",
        "date": "30.08.2022 22:47:06",
        "repo": "coderaiser/putout",
        "type": "chore",
        "chatgpt_zeroshot": "Add eslint.config.js to nycrc.json ignore list"
    },
    {
        "msg": "chore: -> __c -> __f",
        "diff": "diff --git a/packages/plugin-remove-iife/lib/remove-iife.js b/packages/plugin-remove-iife/lib/remove-iife.js @@ -25,7 +25,7 @@ module.exports.filter = (path) => {\n};\nmodule.exports.replace = () => ({\n- '((__args__a) => __c(__args__a))(__args__b)': '__c(__args__b)',\n+ '((__args__a) => __f(__args__a))(__args__b)': '__f(__args__b)',\n'(() => __body)()': '__body',\n'(function() {})()': (vars, path) => {\nconst {body} = path.node.callee.body;\n",
        "date": "14.09.2022 17:04:09",
        "repo": "coderaiser/putout",
        "type": "chore",
        "chatgpt_zeroshot": "Refactor IIFE function calls in remove-iife plugin"
    },
    {
        "msg": "chore: package: v27.10.0",
        "diff": "diff --git a/packages/putout/ChangeLog b/packages/putout/ChangeLog +2022.09.20, v27.10.0\n+\n+feature:\n+- putout: *.md: typescript/remove-unused-types: off\n+\n2022.09.20, v27.9.0\nfeature:\n",
        "date": "20.09.2022 16:36:35",
        "repo": "coderaiser/putout",
        "type": "chore",
        "chatgpt_zeroshot": "Turn off typescript/remove-unused-types rule for *.md files in putout package."
    },
    {
        "msg": "chore: package: v6.2.0",
        "diff": "diff --git a/packages/engine-processor/package.json b/packages/engine-processor/package.json {\n\"name\": \"@putout/engine-processor\",\n- \"version\": \"6.1.0\",\n+ \"version\": \"6.2.0\",\n\"type\": \"commonjs\",\n\"author\": \"coderaiser <mnemonic.enemy@gmail.com> (https://github.com/coderaiser)\",\n\"description\": \"run processors\",\n",
        "date": "20.09.2022 17:40:25",
        "repo": "coderaiser/putout",
        "type": "chore",
        "chatgpt_zeroshot": "Bump version to 6.2.0 in package.json"
    },
    {
        "msg": "chore: package: v6.3.0",
        "diff": "diff --git a/packages/engine-processor/package.json b/packages/engine-processor/package.json {\n\"name\": \"@putout/engine-processor\",\n- \"version\": \"6.2.0\",\n+ \"version\": \"6.3.0\",\n\"type\": \"commonjs\",\n\"author\": \"coderaiser <mnemonic.enemy@gmail.com> (https://github.com/coderaiser)\",\n\"description\": \"run processors\",\n",
        "date": "21.09.2022 17:36:33",
        "repo": "coderaiser/putout",
        "type": "chore",
        "chatgpt_zeroshot": "Bump version to 6.3.0 in package.json"
    },
    {
        "msg": "chore: package: v6.4.0",
        "diff": "diff --git a/packages/engine-processor/package.json b/packages/engine-processor/package.json {\n\"name\": \"@putout/engine-processor\",\n- \"version\": \"6.3.0\",\n+ \"version\": \"6.4.0\",\n\"type\": \"commonjs\",\n\"author\": \"coderaiser <mnemonic.enemy@gmail.com> (https://github.com/coderaiser)\",\n\"description\": \"run processors\",\n",
        "date": "21.09.2022 19:17:41",
        "repo": "coderaiser/putout",
        "type": "chore",
        "chatgpt_zeroshot": "Bump version to 6.4.0 in package.json"
    },
    {
        "msg": "chore: package: v27.12.0",
        "diff": "diff --git a/packages/putout/ChangeLog b/packages/putout/ChangeLog +2022.09.21, v27.12.0\n+\n+feature:\n+- putout: add yarn files to ignore\n+- @putout/test: processor: add ability to pass processorRunners\n+- @putout/engine-runner: improve support of passed processorRunners\n+\n2022.09.20, v27.11.0\nfix:\n",
        "date": "21.09.2022 21:33:22",
        "repo": "coderaiser/putout",
        "type": "chore",
        "chatgpt_zeroshot": "Add support for yarn files in putout ignore list and improve processorRunners functionality."
    },
    {
        "msg": "chore: package: v27.13.0",
        "diff": "diff --git a/packages/putout/ChangeLog b/packages/putout/ChangeLog +2022.09.22, v27.13.0\n+\n+feature:\n+- putout: add .git to ignore\n+\n2022.09.21, v27.12.0\nfeature:\n",
        "date": "22.09.2022 14:35:57",
        "repo": "coderaiser/putout",
        "type": "chore",
        "chatgpt_zeroshot": "Add .git to ignore in putout package"
    },
    {
        "msg": "chore: package: v6.4.1",
        "diff": "diff --git a/packages/engine-processor/package.json b/packages/engine-processor/package.json {\n\"name\": \"@putout/engine-processor\",\n- \"version\": \"6.4.0\",\n+ \"version\": \"6.4.1\",\n\"type\": \"commonjs\",\n\"author\": \"coderaiser <mnemonic.enemy@gmail.com> (https://github.com/coderaiser)\",\n\"description\": \"run processors\",\n",
        "date": "23.09.2022 13:33:12",
        "repo": "coderaiser/putout",
        "type": "chore",
        "chatgpt_zeroshot": "Bump version to 6.4.1 in package.json"
    },
    {
        "msg": "chore: package: v28.0.0",
        "diff": "diff --git a/packages/putout/ChangeLog b/packages/putout/ChangeLog +2022.10.20, v28.0.0\n+\n+feature:\n+- @putout/plugin-math: add apply-numeric-separators\n+- @putout/plugin-math: add apply-multiplication\n+- @putout/plugin-math: add apply-exponentiation\n+- @putout/plugin-math: add convert-sqrt-to-hypot\n+- putout: add @putout/plugin-math\n+- package: lerna v6.0.1\n+- @putout/plugin-remove-empty: block: report\n+- @putout/plugin-remove-empty: add static-block\n+\n2022.09.22, v27.13.0\nfeature:\n",
        "date": "20.10.2022 16:47:49",
        "repo": "coderaiser/putout",
        "type": "chore",
        "chatgpt_zeroshot": "Add new features and plugins for @putout/plugin-math and update lerna to v6.0.1"
    },
    {
        "msg": "chore: package: v2.0.0",
        "diff": "diff --git a/packages/cli-match/package.json b/packages/cli-match/package.json {\n\"name\": \"@putout/cli-match\",\n- \"version\": \"1.0.1\",\n+ \"version\": \"2.0.0\",\n\"author\": \"coderaiser <mnemonic.enemy@gmail.com> (https://github.com/coderaiser)\",\n\"description\": \"convert \\\"rules\\\" section to \\\"match\\\" in .putout.json\",\n\"homepage\": \"https://github.com/coderaiser/putout/tree/master/packages/cli-match#readme\",\n",
        "date": "02.12.2022 19:00:59",
        "repo": "coderaiser/putout",
        "type": "chore",
        "chatgpt_zeroshot": "Bump version to 2.0.0 and update description in package.json"
    },
    {
        "msg": "chore: package: v28.1.0",
        "diff": "diff --git a/packages/putout/ChangeLog b/packages/putout/ChangeLog +2022.12.02, v28.1.0\n+\n+fix:\n+- @putout/compare: __children -> __jsx_children\n+\n+feature:\n+- package: @putout/cli-match v2.0.0\n+- @putout/cli-match: drop support of node < 16\n+- @putout/cli-match: change \"match()\" return signature: code -> {code, message}\n+- @putout/plugin-remove-useless-spread: add support of sparse arrays (#119)\n+- @putout/compare: __jsx_children: improve support\n+- @putout/compare: improve support of jsx expressions\n+- @putout/compare: improve __jsx_children support\n+- @putout/compare: add support of JSXElement (#116)\n+- @putout/engine-parser: template: add support of jsx\n+- @putout/engine-runner: replacer: add support of jsx (#116)\n+- @putout/compare: add support of JSXText (#116)\n+- @putout/operate: extract: add support of JSXText (#116)\n+- @putout/plugin-github: create-uses-fixer\n+- @putout/plugin-github: add set-add-and-commit (EndBug/add-and-commit#448)\n+- @putout/plugin-github: set-setup-node: set v3\n+- @putout/plugin-nodejs: set-checkout-version: add support of actions/checkout v3\n+\n2022.10.30, v28.0.1\nfeature:\n",
        "date": "02.12.2022 19:07:12",
        "repo": "coderaiser/putout",
        "type": "chore",
        "chatgpt_zeroshot": "Fix __children to __jsx_children and update various packages and plugins."
    },
    {
        "msg": "chore: package: v7.1.2",
        "diff": "diff --git a/packages/engine-loader/package.json b/packages/engine-loader/package.json {\n\"name\": \"@putout/engine-loader\",\n- \"version\": \"7.1.1\",\n+ \"version\": \"7.1.2\",\n\"type\": \"commonjs\",\n\"author\": \"coderaiser <mnemonic.enemy@gmail.com> (https://github.com/coderaiser)\",\n\"description\": \"load plugins and prepare them to run\",\n",
        "date": "09.12.2022 12:05:12",
        "repo": "coderaiser/putout",
        "type": "chore",
        "chatgpt_zeroshot": "Bump version to 7.1.2 in engine-loader package.json"
    },
    {
        "msg": "chore: package: v6.4.2",
        "diff": "diff --git a/packages/engine-processor/package.json b/packages/engine-processor/package.json {\n\"name\": \"@putout/engine-processor\",\n- \"version\": \"6.4.1\",\n+ \"version\": \"6.4.2\",\n\"type\": \"commonjs\",\n\"author\": \"coderaiser <mnemonic.enemy@gmail.com> (https://github.com/coderaiser)\",\n\"description\": \"run processors\",\n",
        "date": "09.12.2022 12:05:53",
        "repo": "coderaiser/putout",
        "type": "chore",
        "chatgpt_zeroshot": "Bump version to 6.4.2 in package.json"
    },
    {
        "msg": "chore: package: v28.3.0",
        "diff": "diff --git a/packages/putout/ChangeLog b/packages/putout/ChangeLog +2022.12.29, v28.3.0\n+\n+feature:\n+- package: nano-memoize v2.0.0\n+- @putout/plugin-logical-expressions: simplify: add support of OptionalChaining\n+- @putout/plugin-extract-sequence-expressions: add support of IfStatement test (#126)\n+- @putout/plugin-remove-unused-variables: add support of SequenceExpressions (#126)\n+\n2022.12.26, v28.2.0\nfeature:\n",
        "date": "29.12.2022 16:47:16",
        "repo": "coderaiser/putout",
        "type": "chore",
        "chatgpt_zeroshot": "Add support for new features and packages: nano-memoize v2.0.0, OptionalChaining in @putout/plugin-logical-expressions, IfStatement test in @putout/plugin-extract-sequence-expressions, and SequenceExpressions in @putout/plugin-remove-unused-variables (#126)"
    },
    {
        "msg": "chore: package: v28.4.0",
        "diff": "diff --git a/packages/putout/ChangeLog b/packages/putout/ChangeLog +2023.01.06, v28.4.0\n+\n+fix:\n+- @putout/plugin-apply-is-array: description\n+\n+feature:\n+- package: cosmiconfig v8.0.0\n+- @putout/plugin-apply-flat-map: add\n+\n2022.12.29, v28.3.0\nfeature:\n",
        "date": "06.01.2023 14:16:31",
        "repo": "coderaiser/putout",
        "type": "chore",
        "chatgpt_zeroshot": "Fix plugin description and add new plugin for applying flat map functionality. Update cosmiconfig package to v8.0.0."
    },
    {
        "msg": "chore: package: v28.16.0",
        "diff": "diff --git a/packages/putout/ChangeLog b/packages/putout/ChangeLog +2023.02.04, v28.16.0\n+\n+fix:\n+- @putout/plugin-regexp: remove-useless-group: report after transform\n+\n+feature:\n+- @putout/plugin-apply-maybe: add\n+- @putout/plugin-regexp: apply-literal-notation: report: message\n+- @putout/plugin-regexp: apply-literal-notation: improve support of @putout/plugin-remove-useless-escape\n+- @putout/plugin-regexp: remove-useless-group: improve support of apply-literal-notation\n+\n2023.02.03, v28.15.0\nfeature:\n",
        "date": "04.02.2023 22:42:10",
        "repo": "coderaiser/putout",
        "type": "chore",
        "chatgpt_zeroshot": "fix: Remove useless group report after transform and add new features related to regexp plugins"
    },
    {
        "msg": "chore(compiler): drop useless angular.copy (fixes",
        "diff": "diff --git a/src/helpers/compiler.js b/src/helpers/compiler.js @@ -79,8 +79,8 @@ function bsCompilerService ($q, $http, $injector, $compile, $controller, $templa\nvar template = options.template || '';\nvar controller = options.controller;\nvar controllerAs = options.controllerAs;\n- var resolve = angular.copy(options.resolve || {});\n- var locals = angular.copy(options.locals || {});\n+ var resolve = options.resolve || {};\n+ var locals = options.locals || {};\nvar transformTemplate = options.transformTemplate || angular.identity;\nvar bindToController = options.bindToController;\n",
        "date": "26.01.2017 22:39:26",
        "repo": "mgcrea/angular-strap",
        "type": "chore",
        "chatgpt_zeroshot": "Refactor compiler.js to simplify resolve and locals copying."
    },
    {
        "msg": "chore(readme): add maintainers-related disclaimer",
        "diff": "diff --git a/README.md b/README.md @@ -13,6 +13,15 @@ AngularStrap is a set of native directives that enables seamless integration of\n- If you don't want to use `ngAnimate`, you will have to include a tiny [ngAnimate mock](https://github.com/mgcrea/angular-strap/wiki/ngAnimate-mock).\n+## Looking for maintainers!\n+\n+We're currently looking for aspiring maintainers to tackle issues and pull requests!\n+\n+I (mgcrea) have not worked on any Angular.js v1 codebase for more than a year now. For me it's time to move on!\n+\n+If you have an ongoing project depending on AngularStrap, and would like to become a contributor, please chime in on [issue #2256](https://github.com/mgcrea/angular-strap/issues/2256)\n+\n+\n## Documentation and examples\n+ Check the [documentation](http://mgcrea.github.io/angular-strap) and [changelog](https://github.com/mgcrea/angular-strap/releases).\n",
        "date": "05.10.2017 00:27:53",
        "repo": "mgcrea/angular-strap",
        "type": "chore",
        "chatgpt_zeroshot": "Update README.md to announce search for maintainers and provide documentation links"
    },
    {
        "msg": "chore(test): fix DropdownMenu test\ncloses",
        "diff": "diff --git a/src/__tests__/DropdownMenu.spec.js b/src/__tests__/DropdownMenu.spec.js @@ -54,7 +54,12 @@ describe('DropdownMenu', () => {\n});\nit('should render custom tag', () => {\n- const wrapper = shallow(<DropdownMenu tag=\"main\">Yo!</DropdownMenu>);\n+ const wrapper = shallow(<DropdownMenu tag=\"main\">Yo!</DropdownMenu>,\n+ {\n+ context: {\n+ isOpen: isOpen\n+ }\n+ });\nexpect(wrapper.text()).toBe('Yo!');\nexpect(wrapper.hasClass('dropdown-menu')).toBe(true);\n",
        "date": "16.03.2017 01:25:03",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "chatgpt_zeroshot": "Add context prop to DropdownMenu component in test suite"
    },
    {
        "msg": "chore(package.json): update deps",
        "diff": "diff --git a/package.json b/package.json \"react\": \"^15.3.0\",\n\"react-addons-test-utils\": \"^15.3.0\",\n\"react-dom\": \"^15.3.0\",\n- \"react-helmet\": \"^3.0.1\",\n- \"react-prism\": \"4.0.0\",\n+ \"react-helmet\": \"^5.0.3\",\n+ \"react-prism\": \"^4.1.0\",\n\"react-router\": \"^2.6.1\",\n- \"react-test-renderer\": \"^15.5.4\",\n\"react-scripts\": \"^0.9.5\",\n+ \"react-test-renderer\": \"^15.5.4\",\n\"react-transition-group\": \"^1.1.2\",\n\"rollup\": \"^0.41.5\",\n\"rollup-plugin-babel\": \"^2.7.1\",\n- \"rollup-plugin-babili\": \"^2.0.0\",\n+ \"rollup-plugin-babili\": \"^3.0.0\",\n\"rollup-plugin-commonjs\": \"^8.0.2\",\n- \"rollup-plugin-node-resolve\": \"^2.0.0\",\n+ \"rollup-plugin-node-resolve\": \"^3.0.0\",\n\"static-site-generator-webpack-plugin\": \"^2.0.1\",\n\"style-loader\": \"^0.13.1\",\n\"webpack\": \"^1.12.13\",\n",
        "date": "14.05.2017 17:06:12",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "chatgpt_zeroshot": "Update dependencies for react-helmet, react-prism, rollup-plugin-babili, and rollup-plugin-node-resolve."
    },
    {
        "msg": "chore(dist): fix release",
        "diff": "diff --git a/package.json b/package.json \"name\": \"reactstrap\",\n\"version\": \"4.6.1\",\n\"description\": \"React Bootstrap 4 components\",\n- \"main\": \"dist/reactstrap.min.js\",\n+ \"main\": \"lib/index.js\",\n\"jsnext:main\": \"dist/reactstrap.es.js\",\n\"module\": \"dist/reactstrap.es.js\",\n\"scripts\": {\n",
        "date": "16.05.2017 11:59:06",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "chatgpt_zeroshot": "Update main file path in package.json to lib/index.js"
    },
    {
        "msg": "chore(readme): add version to install instructions\ncloses",
        "diff": "diff --git a/README.md b/README.md @@ -27,8 +27,8 @@ Then open [http://localhost:3000/](http://localhost:3000/) to see your app. The\nInstall reactstrap and Bootstrap from NPM. Reactstrap does not include Bootstrap CSS so this needs to be installed as well:\n```\n-npm install bootstrap@4.0.0-alpha.6 --save\n-npm install --save reactstrap react-transition-group react react-dom\n+npm install --save bootstrap@4.0.0-alpha.6\n+npm install --save reactstrap react-transition-group@^1.1.2 react@^15.3.0 react-dom@^15.3.0\n```\nImport Bootstrap CSS in the ```src/index.js``` file:\n",
        "date": "11.07.2017 14:18:44",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "chatgpt_zeroshot": "Update npm package versions for reactstrap and react-transition-group"
    },
    {
        "msg": "chore(build): use cross-env for all npm scripts\nAllows all NPM scripts to be run cross-platform",
        "diff": "diff --git a/package.json b/package.json \"module\": \"dist/reactstrap.es.js\",\n\"scripts\": {\n\"report-coverage\": \"coveralls < ./coverage/lcov.info\",\n- \"test\": \"BABEL_ENV=test react-scripts test --env=jsdom\",\n+ \"test\": \"cross-env BABEL_ENV=test react-scripts test --env=jsdom\",\n\"cover\": \"npm test -- --coverage\",\n- \"start\": \"BABEL_ENV=webpack webpack-dev-server --config ./webpack.dev.config.js --watch\",\n+ \"start\": \"cross-env BABEL_ENV=webpack webpack-dev-server --config ./webpack.dev.config.js --watch\",\n\"build-docs\": \"cross-env WEBPACK_BUILD=production webpack --config ./webpack.dev.config.js --progress --colors\",\n\"build\": \"rollup -c\",\n- \"prebuild\": \"BABEL_ENV=lib-dir babel src --out-dir lib --ignore src/__tests__/\",\n+ \"prebuild\": \"cross-env BABEL_ENV=lib-dir babel src --out-dir lib --ignore src/__tests__/\",\n\"create-release\": \"npm test && sh ./scripts/release\",\n\"publish-release\": \"npm test && sh ./scripts/publish\",\n\"lint\": \"eslint src\"\n",
        "date": "29.08.2017 16:28:47",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "chatgpt_zeroshot": "Add cross-env to test and start scripts in package.json"
    },
    {
        "msg": "chore(license): Update year to include present",
        "diff": "diff --git a/LICENSE b/LICENSE The MIT License (MIT)\n-Copyright (c) 2016 Eddy Hernandez, Chris Burrell\n+Copyright (c) 2016-Present Eddy Hernandez, Chris Burrell, Evan Sharp\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\n",
        "date": "21.10.2017 13:05:30",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "chatgpt_zeroshot": "Update LICENSE file to include Evan Sharp as a copyright holder"
    },
    {
        "msg": "chore(Docs): fix nested modal onClose",
        "diff": "diff --git a/docs/lib/examples/ModalNested.js b/docs/lib/examples/ModalNested.js @@ -47,7 +47,7 @@ class ModalExample extends React.Component {\nLorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n<br />\n<Button color=\"success\" onClick={this.toggleNested}>Show Nested Model</Button>\n- <Modal isOpen={this.state.nestedModal} toggle={this.toggleNested} onClosed={this.state.closeAll && this.toggle}>\n+ <Modal isOpen={this.state.nestedModal} toggle={this.toggleNested} onClosed={this.state.closeAll ? this.toggle : undefined}>\n<ModalHeader>Nested Modal title</ModalHeader>\n<ModalBody>Stuff and things</ModalBody>\n<ModalFooter>\n",
        "date": "21.11.2017 05:08:26",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "chatgpt_zeroshot": "Refactor ModalNested.js to fix ternary operator bug"
    },
    {
        "msg": "chore(docs): update inline form spacing\nCloses",
        "diff": "diff --git a/docs/lib/examples/FormInline.js b/docs/lib/examples/FormInline.js @@ -5,16 +5,14 @@ export default class Example extends React.Component {\nrender() {\nreturn (\n<Form inline>\n- <FormGroup>\n- <Label for=\"exampleEmail\">Email</Label>{' '}\n+ <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\n+ <Label for=\"exampleEmail\" className=\"mr-sm-2\">Email</Label>\n<Input type=\"email\" name=\"email\" id=\"exampleEmail\" placeholder=\"something@idk.cool\" />\n</FormGroup>\n- {' '}\n- <FormGroup>\n- <Label for=\"examplePassword\">Password</Label>{' '}\n+ <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\n+ <Label for=\"examplePassword\" className=\"mr-sm-2\">Password</Label>\n<Input type=\"password\" name=\"password\" id=\"examplePassword\" placeholder=\"don't tell!\" />\n</FormGroup>\n- {' '}\n<Button>Submit</Button>\n</Form>\n);\n",
        "date": "21.11.2017 05:18:34",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "chatgpt_zeroshot": "Refactor FormInline component to improve styling and readability"
    },
    {
        "msg": "chore(UncontrolledNavDropdown): simplify logic\nThis simplifies the deprecated component to just return the preferred component (UncontrolledDropdown) with the nav prop\nThis removes the logic from the deprecated component.",
        "diff": "diff --git a/src/UncontrolledNavDropdown.js b/src/UncontrolledNavDropdown.js -import React, { Component } from 'react';\n+import React from 'react';\nimport { warnOnce } from './utils';\n-import NavDropdown from './NavDropdown';\n+import UncontrolledDropdown from './UncontrolledDropdown';\n-export default class UncontrolledNavDropdown extends Component {\n- constructor(props) {\n- super(props);\n-\n- this.state = { isOpen: false };\n- this.toggle = this.toggle.bind(this);\n- }\n-\n- toggle() {\n- this.setState({ isOpen: !this.state.isOpen });\n- }\n-\n- render() {\n+const UncontrolledNavDropdown = () => {\nwarnOnce('The \"UncontrolledNavDropdown\" component has been deprecated.\\nPlease use component \"UncontrolledDropdown\" with nav prop.');\n- return <NavDropdown isOpen={this.state.isOpen} toggle={this.toggle} {...this.props} />;\n- }\n-}\n+ return <UncontrolledDropdown nav {...this.props} />;\n+};\n+\n+export default UncontrolledNavDropdown;\n",
        "date": "02.02.2018 14:17:43",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "chatgpt_zeroshot": "Refactor UncontrolledNavDropdown to use UncontrolledDropdown with nav prop"
    },
    {
        "msg": "chore(docs): button group spacing\nThis removes `{' '}` which was added to the doc in but has not effects on `Button`s inside `ButtonGroup`.",
        "diff": "diff --git a/docs/lib/examples/ButtonGroup.js b/docs/lib/examples/ButtonGroup.js @@ -5,8 +5,8 @@ export default class Example extends React.Component {\nrender() {\nreturn (\n<ButtonGroup>\n- <Button>Left</Button>{' '}\n- <Button>Middle</Button>{' '}\n+ <Button>Left</Button>\n+ <Button>Middle</Button>\n<Button>Right</Button>\n</ButtonGroup>\n);\n",
        "date": "24.03.2018 02:45:50",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "chatgpt_zeroshot": "Remove extra space between buttons in ButtonGroup component"
    },
    {
        "msg": "chore(readme): add react-reduction link to \"in the wild\"",
        "diff": "diff --git a/README.md b/README.md @@ -247,6 +247,7 @@ Organizations and projects using `reactstrap`\n- [component-template](https://reactstrap.github.io/component-template/)\n- [video-react](https://video-react.github.io/)\n- [CoreUI-Free-Bootstrap-Admin-Template](https://github.com/mrholek/CoreUI-Free-Bootstrap-Admin-Template) - [demo](http://coreui.io/demo/React_Demo/#/)\n+- [Admin dashboard example app built with reactstrap](https://github.com/reduction-admin/react-reduction) - [demo](https://reduction-admin.firebaseapp.com/)\nSubmit a PR to add to this list!\n",
        "date": "24.03.2018 03:53:10",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "chatgpt_zeroshot": "Add admin dashboard example app built with reactstrap to the list of organizations and projects using `reactstrap` in README."
    },
    {
        "msg": "chore(docs): Update Navbar example background color\nBackground colors have changed in Bootstrap. The `faded` color doesn't exist anymore so the Navbar example should use `light` instead.\nSee Bootstrap documentation:",
        "diff": "diff --git a/docs/lib/examples/Navbar.js b/docs/lib/examples/Navbar.js @@ -29,7 +29,7 @@ export default class Example extends React.Component {\nrender() {\nreturn (\n<div>\n- <Navbar color=\"faded\" light expand=\"md\">\n+ <Navbar color=\"light\" light expand=\"md\">\n<NavbarBrand href=\"/\">reactstrap</NavbarBrand>\n<NavbarToggler onClick={this.toggle} />\n<Collapse isOpen={this.state.isOpen} navbar>\n",
        "date": "03.04.2018 21:44:31",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "chatgpt_zeroshot": "Fix Navbar color attribute in Navbar.js"
    },
    {
        "msg": "chore: fix build\nThis is why I should run test locally before pushing even the simplist of changes",
        "diff": "diff --git a/src/DropdownMenu.js b/src/DropdownMenu.js @@ -36,7 +36,7 @@ const directionPositionMap = {\n};\nconst DropdownMenu = (props, context) => {\n- const { className, cssModule, right, tag, flip, modifiers, ...attrs } = props;\n+ const { className, cssModule, right, tag, flip, modifiers, persist, ...attrs } = props;\nconst classes = mapToCssModules(classNames(\nclassName,\n'dropdown-menu',\n@@ -48,7 +48,7 @@ const DropdownMenu = (props, context) => {\nlet Tag = tag;\n- if (persist || (context.isOpen && !context.inNavbar) {\n+ if (persist || (context.isOpen && !context.inNavbar)) {\nTag = Popper;\nconst position1 = directionPositionMap[context.direction] || 'bottom';\n",
        "date": "19.04.2018 10:45:50",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "chatgpt_zeroshot": "Add persist prop to DropdownMenu component"
    },
    {
        "msg": "chore(readme): add Data Grid to \"in the wild\"",
        "diff": "diff --git a/README.md b/README.md @@ -250,6 +250,7 @@ Organizations and projects using `reactstrap`\n- [video-react](https://video-react.github.io/)\n- [CoreUI-Free-Bootstrap-Admin-Template](https://github.com/mrholek/CoreUI-Free-Bootstrap-Admin-Template) - [demo](http://coreui.io/demo/React_Demo/#/)\n- [Admin dashboard example app built with reactstrap](https://github.com/reduction-admin/react-reduction) - [demo](https://reduction-admin.firebaseapp.com/)\n+- [DevExtreme React Grid](https://devexpress.github.io/devextreme-reactive/react/grid/) - It's a stateless data grid built on top of `reactstrap` with paging, sorting, filtering, grouping, selection, editing and virtual scrolling features.\nSubmit a PR to add to this list!\n",
        "date": "23.04.2018 23:39:21",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "chatgpt_zeroshot": "Add DevExtreme React Grid to list of projects using `reactstrap`"
    },
    {
        "msg": "chore(docs): Remove reference to `onExit` for CollapsePage\nShould have been written as `onExited` as `onExit` is not an event.",
        "diff": "diff --git a/docs/lib/Components/CollapsePage.js b/docs/lib/Components/CollapsePage.js @@ -44,7 +44,7 @@ export default class CollapsePage extends React.Component {\n<SectionTitle>Events</SectionTitle>\n<p>\n- Use the <code>onEnter</code>, onEntering, onEntered, onExit, onExiting and onExited props for callbacks when the\n+ Use the <code>onEnter</code>, onEntering, onEntered, onExiting and onExited props for callbacks when the\nCollapse has finished opening (entering) or closing (exiting).\n</p>\n<div className=\"docs-example\">\n",
        "date": "23.04.2018 17:03:19",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "chatgpt_zeroshot": "Update event callbacks in CollapsePage component"
    },
    {
        "msg": "chore(docs): update install instruction",
        "diff": "diff --git a/docs/lib/Home/index.js b/docs/lib/Home/index.js @@ -36,7 +36,7 @@ export default () => {\n<h3 className=\"mt-5\">NPM</h3>\n<p>Install reactstrap and peer dependencies via NPM</p>\n<pre>\n- <PrismCode className=\"language-bash\">npm install --save reactstrap@next react react-dom</PrismCode>\n+ <PrismCode className=\"language-bash\">npm install --save reactstrap react react-dom</PrismCode>\n</pre>\n<p>Import the components you need</p>\n<div className=\"docs-example\">\n@@ -67,7 +67,7 @@ npm start`}\n<pre>\n<PrismCode className=\"language-bash\">\n{`npm install bootstrap --save\n-npm install --save reactstrap@next react react-dom`}\n+npm install --save reactstrap react react-dom`}\n</PrismCode>\n</pre>\n<p>Import Bootstrap CSS in the <code>src/index.js</code> file:</p>\n",
        "date": "26.04.2018 22:59:42",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "chatgpt_zeroshot": "Remove reactstrap@next from npm install commands"
    },
    {
        "msg": "chore(docs): update button verbiage on homepage",
        "diff": "diff --git a/docs/lib/Home/index.js b/docs/lib/Home/index.js @@ -21,8 +21,8 @@ export default () => {\nEasy to use React Bootstrap 4 components\n</p>\n<p>\n- <Button outline color=\"danger\" href=\"https://github.com/reactstrap/reactstrap\">View on Github</Button>\n- <Button color=\"danger\" tag={Link} to=\"/components/\">View Components</Button>\n+ <Button outline color=\"danger\" href=\"https://github.com/reactstrap/reactstrap\">GitHub</Button>\n+ <Button color=\"danger\" tag={Link} to=\"/components/\">Components</Button>\n</p>\n</Col>\n</Row>\n",
        "date": "27.04.2018 20:39:24",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "chatgpt_zeroshot": "Refactor button labels in Home component"
    },
    {
        "msg": "chore(docs): uppercase H in GitHub",
        "diff": "diff --git a/docs/lib/UI/Nav.js b/docs/lib/UI/Nav.js @@ -36,7 +36,7 @@ export default class UINav extends React.Component {\n<NavLink tag={Link} to=\"/utilities/\" activeClassName=\"active\">Utilities</NavLink>\n</NavItem>\n<NavItem>\n- <NavLink href=\"https://github.com/reactstrap/reactstrap\">Github</NavLink>\n+ <NavLink href=\"https://github.com/reactstrap/reactstrap\">GitHub</NavLink>\n</NavItem>\n</Nav>\n</Collapse>\n",
        "date": "30.04.2018 18:22:01",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "chatgpt_zeroshot": "Fix typo in GitHub link in Nav component"
    },
    {
        "msg": "chore(docs): updated App.js example",
        "diff": "diff --git a/docs/lib/Home/index.js b/docs/lib/Home/index.js @@ -80,7 +80,7 @@ npm install --save reactstrap react react-dom`}\n{`import { Button } from 'reactstrap';`}\n</PrismCode>\n</pre>\n- <p>Now you are ready to use the imported reactstrap components within your component hierarchy defined in the render method. Here is an example <a href=\"https://gist.github.com/eddywashere/e13033c0e655ab7cda995f8bc77ce40d\" target=\"_blank\"><code>App.js</code></a> redone using reactstrap.</p>\n+ <p>Now you are ready to use the imported reactstrap components within your component hierarchy defined in the render method. Here is an example <a href=\"https://gist.github.com/Thomas-Smyth/006fd507a7295f17a8473451938f9935\" target=\"_blank\"><code>App.js</code></a> redone using reactstrap.</p>\n<h2 className=\"mt-5\">CDN</h2>\n<p>Reactstrap can be included directly in your application's bundle or excluded during compilation and linked directly to a CDN.</p>\n<pre>\n",
        "date": "01.05.2018 21:53:14",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "chatgpt_zeroshot": "Update link to example App.js in reactstrap documentation"
    },
    {
        "msg": "chore(dist): ship untranspiled source",
        "diff": "diff --git a/package.json b/package.json \"jsdelivr\": \"dist/reactstrap.min.js\",\n\"unpkg\": \"dist/reactstrap.min.js\",\n\"cdn\": \"dist/reactstrap.min.js\",\n+ \"esnext\": \"src\",\n\"scripts\": {\n\"report-coverage\": \"coveralls < ./coverage/lcov.info\",\n\"test\": \"cross-env BABEL_ENV=test react-scripts test --env=jsdom\",\n\"README.md\",\n\"CHANGELOG.md\",\n\"lib\",\n- \"dist\"\n+ \"dist\",\n+ \"src\"\n],\n\"keywords\": [\n\"reactstrap\",\n",
        "date": "02.05.2018 03:12:19",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "chatgpt_zeroshot": "Add esnext directory for source files in package.json"
    },
    {
        "msg": "chore(issueTemplate): update demo link",
        "diff": "diff --git a/ISSUE_TEMPLATE.md b/ISSUE_TEMPLATE.md - components: `name`\n- reactstrap version `#x.x.x`\n-- import method `umd/csj/es` (if umd, are you using the \"full\" version (only for v5+)?)\n+- import method `umd/csj/es` <!-- (if umd, are you using the \"full\" version (only for v5+)?) -->\n- react version `#x.x.x`\n- bootstrap version `#x.x.x`\n@@ -29,9 +29,8 @@ paste error message with stacktrack here\n### Code\n<!--\n-Fork a link (for the corresponding version) and update it to demonstrate your issue.\n- - v4 (with react 15): issue http://codepen.io/eddywashere/pen/ZOjmkm\n- - v5 (with react 16): issue https://codepen.io/TheSharpieOne/pen/GMMPEZ\n+Fork the link and update it to demonstrate your issue.\n+https://stackblitz.com/edit/reactstrap?file=Example.js\nand/or add the code which causes the issue directly here\n-->\n",
        "date": "04.05.2018 12:07:08",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "chatgpt_zeroshot": "Update import method in ISSUE_TEMPLATE.md"
    },
    {
        "msg": "chore(Tooltip): clean up",
        "diff": "diff --git a/src/Tooltip.js b/src/Tooltip.js @@ -66,8 +66,6 @@ class Tooltip extends React.Component {\nthis.show = this.show.bind(this);\nthis.hide = this.hide.bind(this);\nthis.onEscKeyDown = this.onEscKeyDown.bind(this);\n- this.handleFocusIn = this.handleFocusIn.bind(this);\n- this.handleFocusOut = this.handleFocusOut.bind(this);\n}\ncomponentDidMount() {\n@@ -126,14 +124,6 @@ class Tooltip extends React.Component {\nreturn delay;\n}\n- handleFocusIn() {\n- this.show();\n- }\n-\n- handleFocusOut() {\n- this.hide();\n- }\n-\nshow() {\nif (!this.props.isOpen) {\nthis.clearShowTimeout();\n@@ -174,8 +164,8 @@ class Tooltip extends React.Component {\nthis._target.addEventListener('mouseover', this.onMouseOverTooltip, true);\nthis._target.addEventListener('mouseout', this.onMouseLeaveTooltip, true);\nthis._target.addEventListener('keydown', this.onEscKeyDown, true);\n- this._target.addEventListener('focusin', this.handleFocusIn, true);\n- this._target.addEventListener('focusout', this.handleFocusOut, true);\n+ this._target.addEventListener('focusin', this.show, true);\n+ this._target.addEventListener('focusout', this.hide, true);\n['click', 'touchstart'].forEach(event =>\n@@ -187,8 +177,8 @@ class Tooltip extends React.Component {\nthis._target.removeEventListener('mouseover', this.onMouseOverTooltip, true);\nthis._target.removeEventListener('mouseout', this.onMouseLeaveTooltip, true);\nthis._target.addEventListener('keydown', this.onEscKeyDown, true);\n- this._target.addEventListener('focusin', this.handleFocusIn, true);\n- this._target.addEventListener('focusout', this.handleFocusOut, true);\n+ this._target.addEventListener('focusin', this.show, true);\n+ this._target.addEventListener('focusout', this.hide, true);\n['click', 'touchstart'].forEach(event =>\ndocument.removeEventListener(event, this.handleDocumentClick, true)\n",
        "date": "22.05.2018 12:36:18",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "chatgpt_zeroshot": "Refactor event listeners in Tooltip component"
    },
    {
        "msg": "chore(docs): change Modal transition time for better understanding\nincreased the transition timings for better understanding of difference between modalTransition and backdropTransition\nCloses",
        "diff": "diff --git a/docs/lib/examples/ModalCustomTimeout.js b/docs/lib/examples/ModalCustomTimeout.js @@ -23,7 +23,7 @@ class ModalExample extends React.Component {\nreturn (\n<div>\n<Button color=\"danger\" onClick={this.toggle}>{this.props.buttonLabel}</Button>\n- <Modal isOpen={this.state.modal} modalTransition={{ timeout: 20 }} backdropTransition={{ timeout: 10 }}\n+ <Modal isOpen={this.state.modal} modalTransition={{ timeout: 700 }} backdropTransition={{ timeout: 1300 }}\ntoggle={this.toggle} className={this.props.className}>\n<ModalHeader toggle={this.toggle}>Modal title</ModalHeader>\n<ModalBody>\n",
        "date": "29.05.2018 22:58:44",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "chatgpt_zeroshot": "Increase modal and backdrop transition timeouts"
    },
    {
        "msg": "chore(docs): docs for Checkbox/Radio error states\nCloses",
        "diff": "diff --git a/docs/lib/examples/FormFeedback.js b/docs/lib/examples/FormFeedback.js @@ -23,6 +23,16 @@ export default class Example extends React.Component {\n<FormFeedback>Oh noes! that name is already taken</FormFeedback>\n<FormText>Example help text that remains unchanged.</FormText>\n</FormGroup>\n+ <p>Invalid checkboxes (or radio)</p>\n+ <FormGroup check>\n+ <Input id=\"cityNewyork\" type=\"checkbox\" />\n+ <Label for=\"cityNewyork\" check>New York</Label>\n+ </FormGroup>\n+ <FormGroup check>\n+ <Input id=\"invalidCityCheckbox\" type=\"checkbox\" invalid/>\n+ <Label for=\"invalidCityCheckbox\" check>Gotham</Label>\n+ <FormFeedback>Gotham is not a real city.</FormFeedback>\n+ </FormGroup>\n</Form>\n);\n}\n",
        "date": "16.06.2018 01:41:59",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "chatgpt_zeroshot": "Add invalid checkbox example in FormFeedback.js"
    },
    {
        "msg": "chore(travis): update npm token after eslist-scope incident",
        "diff": "diff --git a/.travis.yml b/.travis.yml @@ -21,15 +21,15 @@ env:\nbranches:\nonly:\n- master\n- - /^\\d+\\.\\d+(\\.\\d+)?(-\\S*)?$/\n+ - \"/^\\\\d+\\\\.\\\\d+(\\\\.\\\\d+)?(-\\\\S*)?$/\"\nbefore_deploy:\n- - \"echo 'Preparing to publish'\"\n+- echo 'Preparing to publish'\n- npm run build\ndeploy:\nprovider: npm\n- email: \"dumbdrum@gmail.com\"\n+ email: dumbdrum@gmail.com\napi_key:\n- secure: P+6SEhs1BQ8sUygZ3L+Mqe2lxrhA9CB35DOds4d8Lp1LneRMm3jDt/DDBhIxF3N1xhd5f9BaHifyXcOfm+EiNIczkTP2G8wJCaxoA7bVKLNx27//kXBUVq7J4vnM3nZltFO7YHd3l46XkTeapQuXVXmbNbT6enQISkwNKMGd/hJk/hNqtS/faJAk84wqjcSGh/wY1YQ7po7FaAUWN2V6y8M8GfW/8s9BEAlY0sY4QYZr90CnSmOsvFtY//0Mx0NevUbo7UcEa+8cO7YOsrgdIMxQBq3UlN9L2XkQyLBobwShk+GeQhFWNVw5aByluWg8DoY5GOkgRSMhTLUyQ3fKnV8B2Mo1SqsqdSD9830TWY+Br47O1Mx20WrbzkpMdGa/Msmvrk0wMFNY0+TuMyn6ItMpGnijbKLoM23deiq69TwgUlVLOHGRcuE7P9iyP+bCNgHxPtI3d3akO2ZWO+8wiVw8sJ29Ywr4x+omFeuyLalfNCGVYF2vg07hT8oWPXNPcNA7Lktqb6PWmaUMGAaLv6Awe8lBu/RT/Tx5rVzdygxKj+xti95vduKaSZp0KfNCkA1txemQCbiuURM5S7KhAhWsDrFJOlYdP5tSf53HhCNrpniAEUXPuNW0aPjgFYYcOVFL/7U4eWLUaXaFL9mBF4wT6K9ekjHaEOSCjZeKDCw=\n+ secure: Fth8EnmhP+/TV7Uj5Czz3nwuek40GOnIlWRppqGs2IA+Q/le7V3R4xvgTlA/p5xN17IH1EhT/UVZBoNd1lOi6wcbgqrkeqPTarqNbkhzaEFJokNBkOJR7FmGC41Y76XbqPl2zeU//p+7dtrCEUacXCDWEfoCjA34GHaD0snd2yuPXYH0FOy1YkydauqGjLg8Y65g3f94xxAnY2Wm2TJzC5rnCjKPMXKEKAX6LpI5UIbq8UDPP8sFv+JpAkgI1/ygY8daBOeIurJEUUoVNazZWtvgdMFcBlL90QbP62HTU1vGTMK7cNT64COTlOrP4BdvIgWh1KaYXiboEwFrooA3fp/1KDNcCC1sXmXa2UoFOAUh9vr4SFBA8vE7tjWEvYtI2zCVD8b5ekLGfPandezKolh8V3sbeJrDFhY0G9lap8ftHWQejohvG/6xjI+/pe+UDpHH1USIqf0DtAnDn5mNWWav/5xCp8HlsIsmh5EKCM3//a8aWY6H+eMfeEFPzU/X3jC4ZUGZ+D5ZGQQ/NX9tvyeoH0pnRnlZil8MAjf/e2/IWu66ruAUde3eMpX4h+w0q8bVGvH4ObR7QKiJdTntwJSsp9iO4uBHTSpoo9yYO9ycepMAc5af0Np7K1xOv7ja5BvMesSVzyZsbDK3Q8iOOWBDk54bqV7PrFtRPn+VIjk=\nskip_cleanup: true\non:\ntags: true\n",
        "date": "12.07.2018 15:17:15",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "chatgpt_zeroshot": "Refactor email field in deploy configuration in .travis.yml"
    },
    {
        "msg": "chore(readme): add improved install information\n* Update README.md\nUpdate installation steps with package runner tool, which can avoid installing create-react-app globally,  that comes with npm 5.2+",
        "diff": "diff --git a/README.md b/README.md @@ -12,6 +12,13 @@ Follow the [create-react-app instructions](https://github.com/facebook/create-re\n### tl;dr\n+ ```\n+npx create-react-app my-app\n+cd my-app/\n+npm start\n+```\n+or, if npx (Node >= 6 and npm >= 5.2 ) not available\n+\n```\nnpm install -g create-react-app\n",
        "date": "14.09.2018 11:43:21",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "chatgpt_zeroshot": "Add instructions for creating a React app using npx or npm install -g"
    },
    {
        "msg": "chore(docs): render spaces around \".clearfix\"",
        "diff": "diff --git a/docs/lib/Utilities/ClearfixPage.js b/docs/lib/Utilities/ClearfixPage.js @@ -12,7 +12,7 @@ export default function ClearfixPage() {\n<PageTitle title=\"Clearfix\" />\n<p>\nEasily clear <code className=\"highlighter-rouge\">float</code>s by adding\n- <code className=\"highlighter-rouge\">.clearfix</code>\n+ {' '}<code className=\"highlighter-rouge\">.clearfix</code>{' '}\n<strong>to the parent element</strong>.\nUtilizes <a href=\"http://nicolasgallagher.com/micro-clearfix-hack/\">\nthe micro clearfix</a> as popularized by Nicolas Gallagher.\n",
        "date": "04.10.2018 05:23:51",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "chatgpt_zeroshot": "Fix formatting issue in ClearfixPage component"
    },
    {
        "msg": "chore(docs): Update Layout.js",
        "diff": "diff --git a/docs/lib/examples/Layout.js b/docs/lib/examples/Layout.js @@ -29,14 +29,14 @@ export default class Example extends React.Component {\n<Col sm=\"4\">.col-sm-4</Col>\n</Row>\n<Row>\n- <Col sm={{ size: 6, order: 2, offset: 1 }}>.col-sm-6 .col-sm-order-2 .col-sm-offset-2</Col>\n+ <Col sm={{ size: 6, order: 2, offset: 1 }}>.col-sm-6 .order-sm-2 .offset-sm-1</Col>\n</Row>\n<Row>\n- <Col sm=\"12\" md={{ size: 8, offset: 2 }}>.col-sm-12 .col-md-6 .col-md-offset-3</Col>\n+ <Col sm=\"12\" md={{ size: 6, offset: 3 }}>.col-sm-12 .col-md-6 .offset-md-3</Col>\n</Row>\n<Row>\n- <Col sm={{ size: 'auto', offset: 1 }}>.col-sm .col-sm-offset-1</Col>\n- <Col sm={{ size: 'auto', offset: 1 }}>.col-sm .col-sm-offset-1</Col>\n+ <Col sm={{ size: 'auto', offset: 1 }}>.col-sm-auto .offset-sm-1</Col>\n+ <Col sm={{ size: 'auto', offset: 1 }}>.col-sm-auto .offset-sm-1</Col>\n</Row>\n</Container>\n);\n",
        "date": "16.10.2018 19:22:00",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "chatgpt_zeroshot": "Refactor layout classes in Layout.js"
    },
    {
        "msg": "chore: add email to docs\nTo prove ownership my email must be added to the docs.",
        "diff": "diff --git a/docs/lib/app.js b/docs/lib/app.js @@ -87,6 +87,7 @@ export default (locals, callback) => {\ndebug: false // Set debug to true if you want to inspect the dropdown\n});\n</script>\n+ <!-- avangate: Evan@lostonia.com -->\n</body>\n</html>`;\ncallback(null, markup);\n",
        "date": "08.11.2018 19:12:26",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "chatgpt_zeroshot": "Add Avangate email address to the footer in app.js"
    },
    {
        "msg": "chore(docs): Fix alphabetic order",
        "diff": "diff --git a/docs/lib/Components/index.js b/docs/lib/Components/index.js @@ -30,14 +30,14 @@ const items = [\nname: 'Card',\nto: '/components/card/'\n},\n- {\n- name: 'Collapse',\n- to: '/components/collapse/',\n- },\n{\nname: 'Carousel',\nto: '/components/carousel/'\n},\n+ {\n+ name: 'Collapse',\n+ to: '/components/collapse/',\n+ },\n{\nname: 'Dropdowns',\nto: '/components/dropdowns/'\n",
        "date": "13.11.2018 03:17:57",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "chatgpt_zeroshot": "Reordered components in index.js and added Collapse component."
    },
    {
        "msg": "chore(deps): bump min react version to support context api",
        "diff": "diff --git a/package.json b/package.json \"react-transition-group\": \"^2.3.1\"\n},\n\"peerDependencies\": {\n- \"react\": \"^16.0.0\",\n- \"react-dom\": \"^16.0.0\"\n+ \"react\": \"^16.3.0\",\n+ \"react-dom\": \"^16.3.0\"\n},\n\"devDependencies\": {\n\"@babel/cli\": \"^7.2.3\",\n",
        "date": "03.04.2019 15:43:20",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "chatgpt_zeroshot": "Update peer dependencies for react and react-dom to version 16.3.0"
    },
    {
        "msg": "chore(release): release 8.0.0",
        "diff": "diff --git a/package.json b/package.json {\n\"name\": \"reactstrap\",\n- \"version\": \"7.1.0\",\n+ \"version\": \"8.0.0\",\n\"description\": \"React Bootstrap 4 components\",\n\"main\": \"lib/index.js\",\n\"jsnext:main\": \"es/index.js\",\n",
        "date": "03.04.2019 15:55:40",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "chatgpt_zeroshot": "Bump version to 8.0.0 in package.json"
    },
    {
        "msg": "chore(release): adding 8.0.1",
        "diff": "diff --git a/package.json b/package.json {\n\"name\": \"reactstrap\",\n- \"version\": \"8.0.0\",\n+ \"version\": \"8.0.1\",\n\"description\": \"React Bootstrap 4 components\",\n\"main\": \"lib/index.js\",\n\"jsnext:main\": \"es/index.js\",\n",
        "date": "10.07.2019 14:51:19",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "chatgpt_zeroshot": "Bump version to 8.0.1 in package.json"
    },
    {
        "msg": "chore(Docs): fix 404 not redirecting properly",
        "diff": "diff --git a/docs/lib/NotFound/index.js b/docs/lib/NotFound/index.js @@ -20,7 +20,7 @@ export default () => {\n</p>\n<p>\n<Button outline color=\"danger\" className=\"mr-1\" tag={Link} to=\"/\">Get Started</Button>\n- <Button color=\"danger\" tag={Link} to=\"/components\">View Components</Button>\n+ <Button color=\"danger\" tag={Link} to=\"/components/\">View Components</Button>\n</p>\n</Col>\n</Row>\n",
        "date": "24.07.2019 22:04:10",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "chatgpt_zeroshot": "Fix link to components page in NotFound component"
    },
    {
        "msg": "chore(release): add 8.1.0",
        "diff": "diff --git a/package.json b/package.json {\n\"name\": \"reactstrap\",\n- \"version\": \"8.0.1\",\n+ \"version\": \"8.1.0\",\n\"description\": \"React Bootstrap 4 components\",\n\"main\": \"lib/index.js\",\n\"jsnext:main\": \"es/index.js\",\n",
        "date": "17.10.2019 23:47:49",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "chatgpt_zeroshot": "Bump version to 8.1.0 in package.json"
    },
    {
        "msg": "chore: try to fix automatic releases",
        "diff": "diff --git a/.travis.yml b/.travis.yml @@ -29,9 +29,10 @@ before_deploy:\n- npm run build\ndeploy:\nprovider: npm\n- email: dumbdrum@gmail.com\n+ email:\n+ secure: AUw8fn5gmJKKXzSvLs+vUZRz/htXtUAApRCy6SD7EZyQMHiFMfXCXdOIcSCyiOsxlvsh+Wv12qmfKySd3Yi3exeGbuZ/rQcK+i582iVBiBVRru2wcQ5iN9E21zgaRYk8c3lHWGDzorrJfr3dMbhmi4atmvrMg/u/jVLmz5h4Y8pHZeJ24WSl26NJo4WH2ibjOADfwKZmTH4jPMICKXpMvmUJ7K49LPE8MRHJRwSefadwtVcLuHHBqNOmDmUfNF9bEgTm0FnOtwEycsS6y1seB6pTOyidz9N5F5fB1eCyVuc/ev27Bvw6HL+i8anchtgGlGJyW/yL6yxycNfkGWaoJ243GhMbt4PTNwtiksolGvbgJ071yoRVqV/8m8tnTJWyShy16Y96hD2vFKV8lj4Fru3Ad8s0VU40ebslOa1IlzrmxxuUYOhX9Ir1ryHgnf7AEnVwie0p0IbJJY/SqPsa3kIyeoG9RePoruzS+v685GMRM+O7ZN34x4H2UogzWIql9IvpGAUdO5FDP9Ww8BkuLEv4myTZh7x4chqYLKQXoPIBzCzdbO8Hl4t7BYgFB2OLaTdcqPvjeANp7EtDzemCYFtNLuS34HKHQCwKcfr+Ar6/ZDlSKdWu0w7XC5jk0rYrDn97BKnbnNmn77d6ZWr6bzo439pCu91jW6DEyI6iAOM=\napi_key:\n- secure: Fth8EnmhP+/TV7Uj5Czz3nwuek40GOnIlWRppqGs2IA+Q/le7V3R4xvgTlA/p5xN17IH1EhT/UVZBoNd1lOi6wcbgqrkeqPTarqNbkhzaEFJokNBkOJR7FmGC41Y76XbqPl2zeU//p+7dtrCEUacXCDWEfoCjA34GHaD0snd2yuPXYH0FOy1YkydauqGjLg8Y65g3f94xxAnY2Wm2TJzC5rnCjKPMXKEKAX6LpI5UIbq8UDPP8sFv+JpAkgI1/ygY8daBOeIurJEUUoVNazZWtvgdMFcBlL90QbP62HTU1vGTMK7cNT64COTlOrP4BdvIgWh1KaYXiboEwFrooA3fp/1KDNcCC1sXmXa2UoFOAUh9vr4SFBA8vE7tjWEvYtI2zCVD8b5ekLGfPandezKolh8V3sbeJrDFhY0G9lap8ftHWQejohvG/6xjI+/pe+UDpHH1USIqf0DtAnDn5mNWWav/5xCp8HlsIsmh5EKCM3//a8aWY6H+eMfeEFPzU/X3jC4ZUGZ+D5ZGQQ/NX9tvyeoH0pnRnlZil8MAjf/e2/IWu66ruAUde3eMpX4h+w0q8bVGvH4ObR7QKiJdTntwJSsp9iO4uBHTSpoo9yYO9ycepMAc5af0Np7K1xOv7ja5BvMesSVzyZsbDK3Q8iOOWBDk54bqV7PrFtRPn+VIjk=\n+ secure: vnNNG+s14Yqnnj/ZjvMnAvsxd+QeLDlfo/iDA0EyHoFIBaSpApYoPzNd2FSZKyI/2kMYdKwUT40DF/qS+NBbhKY2M/HPUqomDny6Lw7XJKI7gTmtA2trlUR/fcHucOjW8PhMqQhB90J8J/RuWK2nS1Y3Mrhwtkbx0ShRl2mnWeysFOfrNywIi3bMDfUVWwQNcnC8c+w09F/S9tZKjjSSzcK9/raEwvZ2iSr2H6HRdlqf7JEl2H6F3k7ltx01FzIzdoTMAYsNENWDZfZUd8vfjmTfbtvVQC6n6uZd28PB1AGdsgy27aeBUe+C28UDlX6p3p6rRsPoLHXYx4hWlGmQvfIyl+vxlSiv8WcOJy2NnXnoJhMeYNmJVEQpBzWlI906z5UCn5+A3E+mPEKXg0jI/uQF5CFguMwwu2vl5N03ZNtD9tdFR0b53N+GCGkOF7jq7SeviR7b3/YmdHi9q5hFEmBXdYFzajxsaqUDYvHtVnjHSW3yT8pnxOvnG7JErg28bTdcYRHc//IVImjktFFsX85ukbGsgAwQAP9oVU0Wz7b0aQ0REnyW2aMroy1JGs8z/voM4aiNfvF6GwrBysWd4AYkalisjkq/LY1G3NDxU9gvPfRIIckgbQcgJ98eSHlG/2i7HqKlSH9Hf2LBAzkhwke3BTaI/hAuq3k0wDIVSY0=\nskip_cleanup: true\non:\ntags: true\n",
        "date": "05.12.2019 10:08:36",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "chatgpt_zeroshot": "Update npm email in Travis CI configuration"
    },
    {
        "msg": "chore(release): adding 8.3.0",
        "diff": "diff --git a/package.json b/package.json {\n\"name\": \"reactstrap\",\n- \"version\": \"8.2.0\",\n+ \"version\": \"8.3.0\",\n\"description\": \"React Bootstrap 4 components\",\n\"main\": \"lib/index.js\",\n\"jsnext:main\": \"es/index.js\",\n",
        "date": "14.01.2020 22:28:00",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "chatgpt_zeroshot": "Bump version to 8.3.0 in package.json"
    },
    {
        "msg": "chore: ci to only deploy after all jobs have finished",
        "diff": "diff --git a/.travis.yml b/.travis.yml @@ -8,15 +8,11 @@ node_js:\ncache:\ndirectories:\n- node_modules\n-before_script:\n-- chmod +x scripts/docs\nscript:\n- npm run lint\n- npm run cover -- --runInBand\nafter_script:\n- npm run report-coverage\n-after_success:\n-- scripts/docs\nenv:\nglobal:\nsecure: Jb9Q9+XnCh+n5uNJuqUmLmPG6mUUv7iTi5bNeK6TpLdrVKk+2mLdobV3iRUy/DEqNLwt2lxwzp1oq4YI/lZ0vlUam7HpFWpSf4PAI8ckGRqFdus7K45o+zxHLJ2zBQwXacsZB204qtO8RDdXaNb9PjRGNFdKm3ZuqZTv6PkO+hS05EFxmcW95HiSHpV/qPxKjEsDdCpoTNEA3MP0dNtSKygeht2nFQVr7WkOhkjDvUtU9EypkGbJeBCd0AckqXM0Qvmdi++csyz5VRQhhUwI/2BKSjbBVUZ6Q3m8sX2p4G/wFEbhXl5eKTzAYLuf+9kT9Jg+gKdT30PoChx2NPKHv0XS8BOrKQScs6KIwOVH2/CNCKqAxh3HkCMSONmqEQRqBK1V/gSCZ4zDX9PgrfyE23FLN/GM4YtBlkVCMLh8Y/hiapXUaDobxh/o2tfOoQkeoZWZeoeIydhwULTDSG2R3PKV7rkGYas0VQ+qtU+i8VG+PzjPT4DRf4xIKzNzJbFIq9oTNYBTasWi6+OKzNw0uH3ydmRzf+GxaTwOIdR3nRQMQN60dH+6qeJkrIvpfrGAB5gqTutXPfe0xf2rMrW6dyipnSgGlk1JOgA+cU4CPyHql1OA+ox/kIQ4I3PIJBu5YYE3amFmKLu3vnDHELSzM1CYeOs0sDasRyiDkKE79l0=\n@@ -24,6 +20,20 @@ branches:\nonly:\n- master\n- \"/^\\\\d+\\\\.\\\\d+(\\\\.\\\\d+)?(-\\\\S*)?$/\"\n+\n+jobs:\n+ include:\n+ - stage: deploy\n+ node_js: 12\n+ before_script:\n+ - chmod +x scripts/docs\n+ script: echo \"Deploying ...\"\n+ after_success:\n+ - scripts/docs\n+ branches:\n+ only:\n+ - master\n+ - \"/^\\\\d+\\\\.\\\\d+(\\\\.\\\\d+)?(-\\\\S*)?$/\"\nbefore_deploy:\n- echo 'Preparing to publish'\n- npm run build\n",
        "date": "15.01.2020 20:20:39",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "chatgpt_zeroshot": "Add deploy job for Travis CI configuration"
    },
    {
        "msg": "chore: use travis CI's new conditional 'if' to check for tag",
        "diff": "diff --git a/.travis.yml b/.travis.yml @@ -24,16 +24,13 @@ branches:\njobs:\ninclude:\n- stage: deploy\n+ if: tag IS present\nnode_js: 12\nbefore_script:\n- chmod +x scripts/docs\nscript: echo \"Deploying ...\"\nafter_success:\n- scripts/docs\n- branches:\n- only:\n- - master\n- - \"/^\\\\d+\\\\.\\\\d+(\\\\.\\\\d+)?(-\\\\S*)?$/\"\nbefore_deploy:\n- echo 'Preparing to publish'\n- npm run build\n",
        "date": "15.01.2020 20:32:33",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "chatgpt_zeroshot": "Add condition to deploy only when tag is present"
    },
    {
        "msg": "chore: improve travis build?",
        "diff": "diff --git a/.travis.yml b/.travis.yml sudo: false\ndist: trusty\nlanguage: node_js\n-node_js:\n-- 10\n-- 11\n-- 12\ncache:\ndirectories:\n- node_modules\n-script:\n-- npm run lint\n-- npm run cover -- --runInBand\n-after_script:\n-- npm run report-coverage\nenv:\nglobal:\nsecure: Jb9Q9+XnCh+n5uNJuqUmLmPG6mUUv7iTi5bNeK6TpLdrVKk+2mLdobV3iRUy/DEqNLwt2lxwzp1oq4YI/lZ0vlUam7HpFWpSf4PAI8ckGRqFdus7K45o+zxHLJ2zBQwXacsZB204qtO8RDdXaNb9PjRGNFdKm3ZuqZTv6PkO+hS05EFxmcW95HiSHpV/qPxKjEsDdCpoTNEA3MP0dNtSKygeht2nFQVr7WkOhkjDvUtU9EypkGbJeBCd0AckqXM0Qvmdi++csyz5VRQhhUwI/2BKSjbBVUZ6Q3m8sX2p4G/wFEbhXl5eKTzAYLuf+9kT9Jg+gKdT30PoChx2NPKHv0XS8BOrKQScs6KIwOVH2/CNCKqAxh3HkCMSONmqEQRqBK1V/gSCZ4zDX9PgrfyE23FLN/GM4YtBlkVCMLh8Y/hiapXUaDobxh/o2tfOoQkeoZWZeoeIydhwULTDSG2R3PKV7rkGYas0VQ+qtU+i8VG+PzjPT4DRf4xIKzNzJbFIq9oTNYBTasWi6+OKzNw0uH3ydmRzf+GxaTwOIdR3nRQMQN60dH+6qeJkrIvpfrGAB5gqTutXPfe0xf2rMrW6dyipnSgGlk1JOgA+cU4CPyHql1OA+ox/kIQ4I3PIJBu5YYE3amFmKLu3vnDHELSzM1CYeOs0sDasRyiDkKE79l0=\n-branches:\n- only:\n- - master\n- - \"/^\\\\d+\\\\.\\\\d+(\\\\.\\\\d+)?(-\\\\S*)?$/\"\n+\n+stages:\n+ - lint\n+ - test\n+ - deploy\njobs:\ninclude:\n+ - stage: lint\n+ node_js: 12\n+ script: npm run lint\n+ - stage: test\n+ node_js:\n+ - 10\n+ - 11\n+ - 12\n+ script: npm run cover -- --runInBand\n+ after_script: npm run report-coverage\n- stage: deploy\nif: tag IS present\nnode_js: 12\n",
        "date": "15.01.2020 20:56:06",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "chatgpt_zeroshot": "Restructure Travis CI configuration for linting, testing, and deployment stages"
    },
    {
        "msg": "chore: improve travis build",
        "diff": "diff --git a/.travis.yml b/.travis.yml sudo: false\ndist: trusty\nlanguage: node_js\n+node_js:\n+ - 10\n+ - 11\n+ - 12\n+script: npm run cover -- --runInBand\n+after_script: npm run report-coverage\ncache:\ndirectories:\n- node_modules\n@@ -18,19 +24,13 @@ jobs:\n- stage: lint\nnode_js: 12\nscript: npm run lint\n- - stage: test\n- node_js:\n- - 10\n- - 11\n- - 12\n- script: npm run cover -- --runInBand\n- after_script: npm run report-coverage\n- stage: deploy\nif: tag IS present\nnode_js: 12\nbefore_script:\n- chmod +x scripts/docs\nscript: echo \"Deploying ...\"\n+ after_script: skip\nafter_success:\n- scripts/docs\nbefore_deploy:\n",
        "date": "15.01.2020 21:07:04",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "chatgpt_zeroshot": "Update Node.js versions, add coverage reporting, and skip after_script for deploy stage"
    },
    {
        "msg": "chore: better doc commit messages",
        "diff": "diff --git a/scripts/docs b/scripts/docs @@ -47,7 +47,7 @@ fi\ngit config user.name \"Travis-CI\"\ngit config user.email \"reactstrap@github.io\"\ngit add --all\n-git commit -m \"docs(travis): publish documentation for $TRAVIS_COMMIT\"\n+git commit -m \"docs(travis): publish documentation for $TRAVIS_TAG ($TRAVIS_COMMIT)\"\ngit push origin $BRANCH > /dev/null 2>&1\n-success \"Successfully published documentation for $TRAVIS_COMMIT!\"\n+success \"Successfully published documentation for $TRAVIS_TAG ($TRAVIS_COMMIT)!\"\n",
        "date": "15.01.2020 21:38:32",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "chatgpt_zeroshot": "docs(travis): publish documentation for $TRAVIS_TAG ($TRAVIS_COMMIT)"
    },
    {
        "msg": "chore(release): adding 8.5.0",
        "diff": "diff --git a/package.json b/package.json {\n\"name\": \"reactstrap\",\n- \"version\": \"8.4.1\",\n+ \"version\": \"8.5.0\",\n\"description\": \"React Bootstrap 4 components\",\n\"main\": \"lib/index.js\",\n\"jsnext:main\": \"es/index.js\",\n",
        "date": "23.06.2020 15:26:40",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "chatgpt_zeroshot": "Bump version to 8.5.0 in package.json"
    },
    {
        "msg": "chore: Allow React 17 in peer deps",
        "diff": "diff --git a/package.json b/package.json \"react-transition-group\": \"^2.3.1\"\n},\n\"peerDependencies\": {\n- \"react\": \"^16.3.0\",\n- \"react-dom\": \"^16.3.0\"\n+ \"react\": \">=16.3.0\",\n+ \"react-dom\": \">=16.3.0\"\n},\n\"devDependencies\": {\n\"@babel/cli\": \"^7.2.3\",\n",
        "date": "28.10.2020 09:49:09",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "chatgpt_zeroshot": "Update peer dependencies for React and React-DOM versions to be greater than or equal to 16.3.0"
    },
    {
        "msg": "chore(PR): fix typos in the pull request template\nFix the typos in the pull request template",
        "diff": "diff --git a/PULL_REQUEST_TEMPLATE.md b/PULL_REQUEST_TEMPLATE.md <!---\nWhat types of changes does your code introduce? Put an `x` in all the boxes that apply:\n-->\n+\n- [ ] Bug fix <!-- (change which fixes an issue) -->\n- [ ] New feature <!-- (change which adds functionality) -->\n-- [ ] Chore <!-- (change which doesn't affect the usage of the package (such as a documentation, build process, or project setup change)) -->\n+- [ ] Chore <!-- (change which doesn't affect the usage of the package (such as documentation, build process, or project setup changes)) -->\n- [ ] Breaking change <!-- (fix or feature that would cause existing functionality to change) -->\n- [ ] There is an open issue which this change addresses\n- [ ] I have read the **[CONTRIBUTING](./CONTRIBUTING.md)** document.\n@@ -16,8 +17,7 @@ What types of changes does your code introduce? Put an `x` in all the boxes that\n<!-- Put any other information you believe would be useful to know when reviewing this PR below -->\n-\n<!---\nIf there is an issue this PR addresses, please make sure it is in the commit message per the Git Commit Guidelines above\n-**AND** put the issue number below, indicating that is closes or fixes the issue.\n+**AND** put the issue number below, indicating that it closes or fixes the issue.\n-->\n",
        "date": "31.10.2020 20:37:00",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "chatgpt_zeroshot": "Refactor PULL_REQUEST_TEMPLATE.md and update Chore checkbox in code changes"
    },
    {
        "msg": "chore(docs): New premium theme Vuexy Admin Template By Pixinvent",
        "diff": "diff --git a/docs/lib/PremiumThemes/premium.js b/docs/lib/PremiumThemes/premium.js @@ -115,4 +115,19 @@ export default [\n},\n],\n},\n+ {\n+ creator: {\n+ name: 'PIXINVENT',\n+ tagLine: 'PIXINVENT provides high quality, creative design and easy to use Premium & Free Bootstrap Admin Template',\n+ link: 'https://1.envato.market/pixinvent_portfolio',\n+ },\n+ products: [\n+ {\n+ title: 'Vuexy - Vuejs, React, HTML & Laravel Admin Dashboard Template',\n+ tagLine: 'Best selling, Production Ready, Carefully Crafted Admin Template',\n+ imgUrl: 'https://www.pixinvent.com/demo/vuexy-html-bootstrap-admin-template/item-page/reactstrap.jpg',\n+ link: 'https://1.envato.market/vuexy_admin',\n+ },\n+ ],\n+ },\n];\n",
        "date": "24.02.2021 01:29:45",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "chatgpt_zeroshot": "Add PIXINVENT creator and Vuexy admin template to PremiumThemes."
    },
    {
        "msg": "chore(release): adding 8.10.0",
        "diff": "diff --git a/CHANGELOG.md b/CHANGELOG.md +# [8.10.0](https://github.com/reactstrap/reactstrap/compare/8.9.0...8.10.0) (2021-09-02)\n+\n+\n+### Features\n+\n+* **Dropdown:** add support for listbox or menu role ([#2077](https://github.com/reactstrap/reactstrap/issues/2077)) ([fd9e988](https://github.com/reactstrap/reactstrap/commit/fd9e9888b7712905a85684f7822fc75fde38c069))\n+\n+\n+\n# [8.9.0](https://github.com/reactstrap/reactstrap/compare/8.8.1...8.9.0) (2021-01-19)\n",
        "date": "02.09.2021 10:03:51",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "chatgpt_zeroshot": "Add support for listbox or menu role in Dropdown"
    },
    {
        "msg": "chore(publish docs): don't silence output when pushing",
        "diff": "diff --git a/scripts/docs b/scripts/docs @@ -44,8 +44,8 @@ git config user.name \"Github Actions\"\ngit config user.email \"reactstrap@github.io\"\ngit add --all\ngit commit -m \"docs(Github Actions): publish documentation for $RELEASE_TAG ($GITHUB_SHA)\"\n-git push origin $BRANCH > /dev/null 2>&1\n+git push origin $BRANCH\ngit tag -a $VERSION -m \"docs $RELEASE_TAG\"\n-git push --tags > /dev/null 2>&1\n+git push --tags\nsuccess \"Successfully published documentation for $RELEASE_TAG ($GITHUB_SHA)!\"\n",
        "date": "02.09.2021 11:44:54",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "chatgpt_zeroshot": "docs(Github Actions): update git push commands in publish documentation script"
    },
    {
        "msg": "chore(publish docs): remove unused tags",
        "diff": "diff --git a/scripts/docs b/scripts/docs @@ -45,7 +45,5 @@ git config user.email \"reactstrap@github.io\"\ngit add --all\ngit commit -m \"docs(Github Actions): publish documentation for $RELEASE_TAG ($GITHUB_SHA)\"\ngit push origin $BRANCH\n-git tag -a $VERSION -m \"docs $RELEASE_TAG\"\n-git push --tags\nsuccess \"Successfully published documentation for $RELEASE_TAG ($GITHUB_SHA)!\"\n",
        "date": "02.09.2021 11:49:33",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "chatgpt_zeroshot": "docs(Github Actions): remove unnecessary tagging and pushing of tags"
    },
    {
        "msg": "chore(publish docs): use GITHUB_TOKEN for auth",
        "diff": "diff --git a/scripts/docs b/scripts/docs @@ -40,10 +40,10 @@ if [ -z \"$(git status --porcelain)\" ]; then\nexit 0\nfi\n-git config user.name \"Github Actions\"\n-git config user.email \"reactstrap@github.io\"\ngit add --all\ngit commit -m \"docs(Github Actions): publish documentation for $RELEASE_TAG ($GITHUB_SHA)\"\n+git remote remove origin\n+git remote add origin https://${GITHUB_TOKEN}@github.com/${GITHUB_REPO}.git\ngit push origin $BRANCH\nsuccess \"Successfully published documentation for $RELEASE_TAG ($GITHUB_SHA)!\"\n",
        "date": "02.09.2021 12:06:12",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "chatgpt_zeroshot": "fix(docs): update remote origin URL for publishing documentation"
    },
    {
        "msg": "chore(publish docs): Add back user config",
        "diff": "diff --git a/scripts/docs b/scripts/docs @@ -40,6 +40,8 @@ if [ -z \"$(git status --porcelain)\" ]; then\nexit 0\nfi\n+git config user.name \"Github Actions\"\n+git config user.email \"reactstrap@github.io\"\ngit add --all\ngit commit -m \"docs(Github Actions): publish documentation for $RELEASE_TAG ($GITHUB_SHA)\"\ngit remote remove origin\n",
        "date": "02.09.2021 12:17:52",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "chatgpt_zeroshot": "docs(Github Actions): Update user name and email for Github Actions deployment"
    },
    {
        "msg": "chore(publish docs): Add REACTSTRAP_DOCS_GITHUB_TOKEN",
        "diff": "diff --git a/.github/workflows/docs.yml b/.github/workflows/docs.yml @@ -14,5 +14,5 @@ jobs:\nrun: rm -rf node_modules && yarn install --frozen-lockfile\n- name: Publish Docs\nenv:\n- GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n+ GITHUB_TOKEN: ${{ secrets.REACTSTRAP_DOCS_GITHUB_TOKEN }}\nrun: ./scripts/docs\n",
        "date": "02.09.2021 12:38:45",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "chatgpt_zeroshot": "Update GITHUB_TOKEN in docs workflow to REACTSTRAP_DOCS_GITHUB_TOKEN"
    },
    {
        "msg": "chore(publish): update docs publishing",
        "diff": "diff --git a/.github/workflows/publish.yml b/.github/workflows/publish.yml @@ -19,7 +19,6 @@ jobs:\nenv:\nNODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}\n- name: Publish Docs\n- run: |\n- echo \"RELEASE_TAG=${GITHUB_REF##*/}\" >> $GITHUB_ENV\n- echo \"GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}\" >> $GITHUB_ENV\n- ./scripts/docs\n+ env:\n+ GITHUB_TOKEN: ${{ secrets.REACTSTRAP_DOCS_GITHUB_TOKEN }}\n+ run: ./scripts/docs\n",
        "date": "02.09.2021 12:50:54",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "chatgpt_zeroshot": "Update GitHub token for publishing docs in workflow"
    },
    {
        "msg": "chore: remove reactstap-form-validation",
        "diff": "diff --git a/README.md b/README.md @@ -253,7 +253,6 @@ Once the release branch is merged, create a release from the tag generated in th\nOrganizations and projects using `reactstrap`\n-- [availity-reactstrap-validation](https://availity.github.io/availity-reactstrap-validation/)\n- [airframe-react](https://github.com/0wczar/airframe-react) - [demo](http://dashboards.webkom.co/react/airframe/) - Airframe provides all the components a developer needs to build data-intensive web apps using React.\n- [component-template](https://reactstrap.github.io/component-template/)\n- [video-react](https://video-react.github.io/)\n",
        "date": "13.10.2021 11:45:27",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "chatgpt_zeroshot": "Remove unused projects from README.md"
    },
    {
        "msg": "chore: workaround release please initial release bug",
        "diff": "diff --git a/.github/workflows/release-please.yml b/.github/workflows/release-please.yml @@ -7,6 +7,8 @@ jobs:\nrelease-pr:\nruns-on: ubuntu-latest\nsteps:\n+ - uses: actions/checkout@v2\n+ - run: git tag -d $(git tag -l | grep -) # workaround for a bug with prerelease tags on the first run of release-please\n- uses: GoogleCloudPlatform/release-please-action@v2\nid: release-please\nwith:\n",
        "date": "26.10.2021 14:39:31",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "chatgpt_zeroshot": "Fix bug with prerelease tags on first run of release-please"
    },
    {
        "msg": "chore: fix release please setup",
        "diff": "diff --git a/.github/workflows/release-please.yml b/.github/workflows/release-please.yml @@ -7,8 +7,6 @@ jobs:\nrelease-pr:\nruns-on: ubuntu-latest\nsteps:\n- - uses: actions/checkout@v2\n- - run: git tag -d $(git tag -l | grep -) # workaround for a bug with prerelease tags on the first run of release-please\n- uses: GoogleCloudPlatform/release-please-action@v2\nid: release-please\nwith:\n@@ -31,14 +29,11 @@ jobs:\n- uses: actions/setup-node@v2\nwith:\nnode-version: '16.x'\n- registry-url: 'https://npm.pkg.github.com/'\n+ registry-url: 'https://registry.npmjs.org'\nif: ${{ steps.release.outputs.release_created }}\n- name: Install dependencies\nrun: rm -rf node_modules && yarn install --frozen-lockfile\nif: ${{ steps.release.outputs.release_created }}\n- - name: Build package\n- run: npm run build\n- if: ${{ steps.release.outputs.release_created }}\n- name: Publish package\nrun: npm publish\nenv:\n",
        "date": "26.10.2021 15:44:17",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "chatgpt_zeroshot": "Fix registry URL in release-please.yml file"
    },
    {
        "msg": "chore: release 8.10.1",
        "diff": "diff --git a/package.json b/package.json {\n\"name\": \"reactstrap\",\n- \"version\": \"8.10.0\",\n+ \"version\": \"8.10.1\",\n\"description\": \"React Bootstrap 4 components\",\n\"main\": \"lib/index.js\",\n\"types\": \"es/index.d.ts\",\n",
        "date": "26.10.2021 15:49:41",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "chatgpt_zeroshot": "Bump version to 8.10.1 in package.json"
    },
    {
        "msg": "chore(docs): fix storysource for UncontrolledPopover\nDue to a storybook bug, we need to add args to the story parameters in order to show the source. (https://github.com/storybookjs/storybook/issues/13362)",
        "diff": "diff --git a/stories/examples/PopoverUncontrolled.js b/stories/examples/PopoverUncontrolled.js import React from 'react';\nimport { Button, UncontrolledPopover, PopoverHeader, PopoverBody } from 'reactstrap';\n-export default function () {\n+const Example = (props) => {\nreturn (\n<div>\n<Button id=\"UncontrolledPopover\" type=\"button\">\n@@ -15,3 +15,5 @@ export default function () {\n</div>\n);\n}\n+\n+export default Example;\n",
        "date": "15.09.2021 15:58:18",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "chatgpt_zeroshot": "Refactor PopoverUncontrolled component to use named function instead of anonymous function"
    },
    {
        "msg": "chore(changelog): update CHANGELOG.md",
        "diff": "diff --git a/CHANGELOG.md b/CHANGELOG.md +# [9.0.0-2](https://github.com/reactstrap/reactstrap/compare/v9.0.0-0...v9.0.0-2) (2021-09-22)\n+\n+\n+### Features\n+\n+* **accordion:** add `flush` support and `stayOpen` support ([272b773](https://github.com/reactstrap/reactstrap/commit/272b773972a16f60d581a13a5807277884a1693f))\n+* **bs5:** add Offcanvas ([df61c93](https://github.com/reactstrap/reactstrap/commit/df61c937f941a166538e9c7012d6b51c56ea6a41))\n+* **carousel:** add Bootstrap5 updates ([1cca298](https://github.com/reactstrap/reactstrap/commit/1cca298f74f85599fa8e5b22fa73e15ebc76315d))\n+* **collapse:** add horizontal collapse ([45d28fe](https://github.com/reactstrap/reactstrap/commit/45d28fec7becf71f0e57fe0612db6b9ff74fdb9a))\n+* **ListGroup:** Add ListGroupNumbered ([ea4621e](https://github.com/reactstrap/reactstrap/commit/ea4621e5d90f717dcc84e295658767eed6fef486))\n+* **Placeholder:** add component ([0b315ab](https://github.com/reactstrap/reactstrap/commit/0b315abc0428f9fa6096115a39e6697b7e61abd8))\n+\n+\n+\n# [9.0.0-0](https://github.com/reactstrap/reactstrap/compare/8.9.0...9.0.0-0) (2021-03-03)\n",
        "date": "22.09.2021 13:31:20",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "chatgpt_zeroshot": "Add new features and components for version 9.0.0-2"
    },
    {
        "msg": "chore: update readme to link v8 docs",
        "diff": "diff --git a/README.md b/README.md # reactstrap\n-Stateless React Components for Bootstrap.\n+Stateless React Components for Bootstrap 5.\n+\n+If you're using Bootstrap 4, you'll need to use [Reactstrap v8](https://reactstrap.github.io/legacy/8.10.1)\n## Getting Started\n",
        "date": "27.10.2021 11:08:44",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "chatgpt_zeroshot": "Update Reactstrap version to support Bootstrap 5"
    },
    {
        "msg": "chore: fix link to legacy docs",
        "diff": "diff --git a/stories/Index.stories.mdx b/stories/Index.stories.mdx @@ -7,7 +7,7 @@ import { Button } from 'reactstrap';\n### Reactstrap is a [React](https://reactjs.org) component library for [Bootstrap](https://getbootstrap.com)\n-Reactstrap is currently compatible with Bootstrap 5.1. If you are using Bootstrap 4, you'll need to use [Reactstrap v8](/legacy/8.10.1)\n+Reactstrap is currently compatible with Bootstrap 5.1. If you are using Bootstrap 4, you'll need to use [Reactstrap v8](./legacy/8.10.1)\n## Getting Started\n",
        "date": "27.10.2021 11:53:27",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "chatgpt_zeroshot": "Update link to Reactstrap v8 in Index.stories.mdx"
    },
    {
        "msg": "chore: use getToggle method",
        "diff": "diff --git a/src/Dropdown.js b/src/Dropdown.js @@ -116,7 +116,7 @@ class Dropdown extends React.Component {\ngetMenuCtrl() {\nif (this._$menuCtrl) return this._$menuCtrl;\n- this._$menuCtrl = this.toggleRef.current;\n+ this._$menuCtrl = this.getToggle();\nreturn this._$menuCtrl;\n}\n",
        "date": "13.07.2022 06:28:09",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "chatgpt_zeroshot": "Refactor getMenuCtrl method to use getToggle function instead of toggleRef current."
    },
    {
        "msg": "chore: address review comments",
        "diff": "diff --git a/src/Collapse.js b/src/Collapse.js @@ -62,7 +62,7 @@ class Collapse extends Component {\ndimension: null,\n};\n- this.nodeRef = React.createRef();\n+ this.nodeRef = props.innerRef || React.createRef();\n['onEntering', 'onEntered', 'onExit', 'onExiting', 'onExited'].forEach(\n(name) => {\n@@ -72,8 +72,7 @@ class Collapse extends Component {\n}\ngetNode() {\n- const nodeRef = this.props.innerRef || this.nodeRef;\n- return nodeRef.current;\n+ return this.nodeRef.current;\n}\nonEntering(_, isAppearing) {\n@@ -125,8 +124,6 @@ class Collapse extends Component {\n...otherProps\n} = this.props;\n- const nodeRef = innerRef || this.nodeRef;\n-\nconst { dimension } = this.state;\nconst transitionProps = pick(otherProps, TransitionPropTypeKeys);\n@@ -135,7 +132,7 @@ class Collapse extends Component {\n<Transition\n{...transitionProps}\nin={isOpen}\n- nodeRef={nodeRef}\n+ nodeRef={this.nodeRef}\nonEntering={this.onEntering}\nonEntered={this.onEntered}\nonExit={this.onExit}\n@@ -162,7 +159,7 @@ class Collapse extends Component {\n{...childProps}\nstyle={{ ...childProps.style, ...style }}\nclassName={classes}\n- ref={nodeRef}\n+ ref={this.nodeRef}\n>\n{children}\n</Tag>\n",
        "date": "24.07.2022 20:14:18",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "chatgpt_zeroshot": "Refactor Collapse component to use props.innerRef if provided"
    },
    {
        "msg": "chore: downgrade jsdom to v19 to support node 12",
        "diff": "diff --git a/package.json b/package.json \"holderjs\": \"^2.9.3\",\n\"jest\": \"28.1.3\",\n\"jest-environment-jsdom\": \"28.1.3\",\n- \"jsdom\": \"^20.0.2\",\n+ \"jsdom\": \"^19.0.0\",\n\"json-loader\": \"^0.5.7\",\n\"microbundle\": \"^0.13.3\",\n\"prettier\": \"2.7.1\",\n",
        "date": "14.11.2022 11:03:02",
        "repo": "reactstrap/reactstrap",
        "type": "chore",
        "chatgpt_zeroshot": "Update jsdom version to 19.0.0"
    },
    {
        "msg": "chore: update and sort package.json",
        "diff": "diff --git a/package.json b/package.json {\n- \"private\": true,\n- \"workspaces\": [\n- \"packages/*\"\n- ],\n- \"author\": \"Pascal Luther\",\n- \"repository\": \"https://github.com/nuxt-community/firebase-module\",\n- \"homepage\": \"https://firebase.nuxtjs.org/\",\n+ \"name\": \"@nuxtjs/firebase\",\n+ \"version\": \"4.0.0\",\n+ \"description\": \"Intergrate Firebase into your Nuxt project.\",\n\"keywords\": [\n+ \"firebase\",\n+ \"firestore\",\n+ \"google\",\n+ \"googleauthentication\",\n\"nuxt\",\n- \"firebase\"\n+ \"realtimedatabase\"\n+ ],\n+ \"homepage\": \"https://firebase.nuxtjs.org/\",\n+ \"repository\": \"nuxt-community/firebase-module\",\n+ \"license\": \"MIT\",\n+ \"author\": \"Pascal Luther\",\n+ \"files\": [\n+ \"lib\"\n],\n+ \"main\": \"lib/module.js\",\n+ \"types\": \"types/index.d.ts\",\n\"scripts\": {\n- \"docs:dev\": \"vuepress dev docs\",\n\"docs:build\": \"vuepress build docs\",\n- \"npm:publish\": \"cd packages/firebase-module && npm publish\"\n+ \"docs:dev\": \"vuepress dev docs\",\n+ \"lint\": \"eslint --ext .js,.vue lib test\",\n+ \"release\": \"yarn test && standard-version && git push --follow-tags && npm publish\",\n+ \"test\": \"yarn lint && jest\"\n+ },\n+ \"dependencies\": {\n+ \"firebase-admin\": \"^8.9.2\",\n+ \"jwt-decode\": \"^2.2.0\",\n+ \"lodash\": \"^4.17.15\"\n},\n\"devDependencies\": {\n- \"babel-eslint\": \"10.1.0\",\n- \"eslint\": \"6.8.0\",\n- \"eslint-config-prettier\": \"6.10.0\",\n- \"eslint-plugin-prettier\": \"3.1.2\",\n- \"prettier\": \"1.19.1\",\n- \"vuepress\": \"1.3.1\"\n+ \"@commitlint/cli\": \"latest\",\n+ \"@commitlint/config-conventional\": \"latest\",\n+ \"@nuxtjs/eslint-config\": \"latest\",\n+ \"@nuxtjs/module-test-utils\": \"latest\",\n+ \"@vuepress/plugin-google-analytics\": \"latest\",\n+ \"codecov\": \"latest\",\n+ \"eslint\": \"latest\",\n+ \"firebase\": \"latest\",\n+ \"husky\": \"latest\",\n+ \"jest\": \"latest\",\n+ \"nuxt-edge\": \"latest\",\n+ \"standard-version\": \"latest\",\n+ \"vuepress\": \"latest\"\n},\n- \"dependencies\": {\n- \"@vuepress/plugin-google-analytics\": \"1.3.1\"\n+ \"peerDependencies\": {\n+ \"firebase\": \"^7.9.0\",\n+ \"nuxt\": \"^2.0.0\"\n+ },\n+ \"publishConfig\": {\n+ \"access\": \"public\"\n}\n}\n",
        "date": "26.02.2020 21:24:41",
        "repo": "nuxt-community/firebase-module",
        "type": "chore",
        "chatgpt_zeroshot": "Refactor package.json and update dependencies for @nuxtjs/firebase 4.0.0 release."
    },
    {
        "msg": "chore: updated firebaseVersion to 7.11.0 in module.js for service worker",
        "diff": "diff --git a/lib/module.js b/lib/module.js @@ -4,7 +4,7 @@ const createServerMiddleware = require('./helpers/createServerMiddleware')\nmodule.exports = function (moduleOptions) {\nconst options = Object.assign({}, this.options.firebase, moduleOptions)\n- const firebaseVersion = '7.9.3' // TODO: Update with each Firebase update\n+ const firebaseVersion = '7.11.0' // TODO: Update with each Firebase update\nconst currentEnv = getCurrentEnv(options)\nvalidateOptions(options)\n",
        "date": "15.03.2020 22:39:27",
        "repo": "nuxt-community/firebase-module",
        "type": "chore",
        "chatgpt_zeroshot": "Update Firebase version to 7.11.0"
    },
    {
        "msg": "chore(docs): typo in issue template",
        "diff": "diff --git a/.github/ISSUE_TEMPLATE/question.md b/.github/ISSUE_TEMPLATE/question.md @@ -8,7 +8,7 @@ assignees: ''\n---\n<!-- **IMPORTANT!**\n-Please make sure to look for an answer to your question in our documentation and the Firebase documenation before asking a question here.\n+Please make sure to look for an answer to your question in our documentation and the Firebase documentation before asking a question here.\nIf you have a general question regarding Nuxt-Firebase use Discord `modules` channel. Thanks!\n",
        "date": "30.04.2020 12:38:05",
        "repo": "nuxt-community/firebase-module",
        "type": "chore",
        "chatgpt_zeroshot": "Fix typo in ISSUE_TEMPLATE question.md"
    },
    {
        "msg": "chore(release): 6.0.0",
        "diff": "diff --git a/package.json b/package.json {\n\"name\": \"@nuxtjs/firebase\",\n- \"version\": \"5.2.0\",\n+ \"version\": \"6.0.0\",\n\"description\": \"Intergrate Firebase into your Nuxt project.\",\n\"keywords\": [\n\"firebase\",\n",
        "date": "07.06.2020 21:08:34",
        "repo": "nuxt-community/firebase-module",
        "type": "chore",
        "chatgpt_zeroshot": "Bump version to 6.0.0 in package.json"
    },
    {
        "msg": "chore(types): added legacyMode, injectModule and lazy to types",
        "diff": "diff --git a/types/index.d.ts b/types/index.d.ts @@ -101,6 +101,9 @@ export interface RemoteConfigServiceConfig extends ServiceConfig {\n}\nexport interface FirebaseModuleConfiguration {\n+ legacyMode?: boolean,\n+ injectModule?: boolean,\n+ lazy?: boolean,\nconfig:\n| {\n[envKey: string]: FirebaseConfiguration\n",
        "date": "15.07.2020 22:50:14",
        "repo": "nuxt-community/firebase-module",
        "type": "chore",
        "chatgpt_zeroshot": "Add new options to FirebaseModuleConfiguration"
    },
    {
        "msg": "chore(types): added new $fire and $fireObj types",
        "diff": "diff --git a/types/index.d.ts b/types/index.d.ts @@ -126,6 +126,7 @@ export interface FirebaseModuleConfiguration {\ndeclare module 'vue/types/vue' {\ninterface Vue {\n+ // LegacyMode\n$fireStore: firebase.firestore.Firestore\n$fireStoreObj: typeof firebase.firestore\n$fireDb: firebase.database.Database\n@@ -145,6 +146,19 @@ declare module 'vue/types/vue' {\n$firePerfObj: typeof firebase.performance\n$fireConfig: firebase.remoteConfig.RemoteConfig\n$fireConfigObj: typeof firebase.remoteConfig\n+ // From v7+\n+ $fireObj: typeof firebase\n+ $fire: {\n+ auth: firebase.auth.Auth\n+ realtimeDb: firebase.database.Database\n+ firestore: firebase.firestore.Firestore\n+ storage: firebase.storage.Storage\n+ functions: firebase.functions.Functions\n+ messaging: firebase.messaging.Messaging\n+ performance: firebase.performance.Performance\n+ analytics: firebase.analytics.Analytics\n+ remoteConfig: firebase.remoteConfig.RemoteConfig\n+ }\n}\n}\n@@ -154,6 +168,7 @@ declare module '@nuxt/vue-app' {\n}\ninterface NuxtAppOptions {\n+ // LegacyMode\n$fireStore: firebase.firestore.Firestore\n$fireStoreObj: typeof firebase.firestore\n$fireDb: firebase.database.Database\n@@ -173,6 +188,19 @@ declare module '@nuxt/vue-app' {\n$firePerfObj: typeof firebase.performance\n$fireConfig: firebase.remoteConfig.RemoteConfig\n$fireConfigObj: typeof firebase.remoteConfig\n+ // From v7+\n+ $fireObj: typeof firebase\n+ $fire: {\n+ auth: firebase.auth.Auth\n+ realtimeDb: firebase.database.Database\n+ firestore: firebase.firestore.Firestore\n+ storage: firebase.storage.Storage\n+ functions: firebase.functions.Functions\n+ messaging: firebase.messaging.Messaging\n+ performance: firebase.performance.Performance\n+ analytics: firebase.analytics.Analytics\n+ remoteConfig: firebase.remoteConfig.RemoteConfig\n+ }\n}\n}\n@@ -183,6 +211,7 @@ declare module '@nuxt/types' {\n}\ninterface NuxtAppOptions {\n+ // LegacyMode\n$fireStore: firebase.firestore.Firestore\n$fireStoreObj: typeof firebase.firestore\n$fireDb: firebase.database.Database\n@@ -202,11 +231,25 @@ declare module '@nuxt/types' {\n$firePerfObj: typeof firebase.performance\n$fireConfig: firebase.remoteConfig.RemoteConfig\n$fireConfigObj: typeof firebase.remoteConfig\n+ // From v7+\n+ $fireObj: typeof firebase\n+ $fire: {\n+ auth: firebase.auth.Auth\n+ realtimeDb: firebase.database.Database\n+ firestore: firebase.firestore.Firestore\n+ storage: firebase.storage.Storage\n+ functions: firebase.functions.Functions\n+ messaging: firebase.messaging.Messaging\n+ performance: firebase.performance.Performance\n+ analytics: firebase.analytics.Analytics\n+ remoteConfig: firebase.remoteConfig.RemoteConfig\n+ }\n}\n}\ndeclare module 'vuex/types/index' {\ninterface Store<S> {\n+ // LegacyMode\nreadonly $fireStore: firebase.firestore.Firestore\n$fireStoreObj: typeof firebase.firestore\n$fireDb: firebase.database.Database\n@@ -226,6 +269,19 @@ declare module 'vuex/types/index' {\n$firePerfObj: typeof firebase.performance\n$fireConfig: firebase.remoteConfig.RemoteConfig\n$fireConfigObj: typeof firebase.remoteConfig\n+ // From v7+\n+ $fireObj: typeof firebase\n+ $fire: {\n+ auth: firebase.auth.Auth\n+ realtimeDb: firebase.database.Database\n+ firestore: firebase.firestore.Firestore\n+ storage: firebase.storage.Storage\n+ functions: firebase.functions.Functions\n+ messaging: firebase.messaging.Messaging\n+ performance: firebase.performance.Performance\n+ analytics: firebase.analytics.Analytics\n+ remoteConfig: firebase.remoteConfig.RemoteConfig\n+ }\n}\n}\n",
        "date": "15.07.2020 22:58:34",
        "repo": "nuxt-community/firebase-module",
        "type": "chore",
        "chatgpt_zeroshot": "Add Firebase v7+ compatibility and LegacyMode support for Vue, Nuxt, and Vuex interfaces."
    },
    {
        "msg": "chore(types): improved index.d.ts",
        "diff": "diff --git a/types/index.d.ts b/types/index.d.ts @@ -130,14 +130,12 @@ export interface FirebaseModuleConfiguration {\n* Injections\n************************************/\n+\ninterface ReadyFunction {\n(): void;\n}\n-declare module 'vue/types/vue' {\n- interface Vue {\n- $fireModule: typeof firebase\n- $fire: {\n+interface NuxtFireInstance {\nauth: firebase.auth.Auth\nauthReady: ReadyFunction\ndatabase: firebase.database.Database\n@@ -157,93 +155,55 @@ declare module 'vue/types/vue' {\nremoteConfig: firebase.remoteConfig.RemoteConfig\nremoteConfigReady: ReadyFunction\n}\n- }\n-}\ndeclare module '@nuxt/vue-app' {\ninterface NuxtConfiguration {\nfirebase?: FirebaseModuleConfiguration\n}\n-\n- interface NuxtAppOptions {\n+ interface Context {\n$fireModule: typeof firebase\n- $fire: {\n- auth: firebase.auth.Auth\n- authReady: ReadyFunction\n- database: firebase.database.Database\n- databaseReady: ReadyFunction\n- firestore: firebase.firestore.Firestore\n- firestoreReady: ReadyFunction\n- functions: firebase.functions.Functions\n- functionsReady: ReadyFunction\n- storage: firebase.storage.Storage\n- storageReady: ReadyFunction\n- messaging: firebase.messaging.Messaging\n- messagingReady: ReadyFunction\n- performance: firebase.performance.Performance\n- performanceReady: ReadyFunction\n- analytics: firebase.analytics.Analytics\n- analyticsReady: ReadyFunction\n- remoteConfig: firebase.remoteConfig.RemoteConfig\n- remoteConfigReady: ReadyFunction\n+ $fire: NuxtFireInstance\n}\n+ interface NuxtAppOptions {\n+ $fireModule: typeof firebase\n+ $fire: NuxtFireInstance\n}\n}\n-// Nuxt 2.9+\ndeclare module '@nuxt/types' {\n+ interface Context {\n+ $fireModule: typeof firebase\n+ $fire: NuxtFireInstance\n+ }\n+\n+ interface NuxtAppOptions {\n+ $fireModule: typeof firebase\n+ $fire: NuxtFireInstance\n+ }\n+\ninterface Configuration {\nfirebase?: FirebaseModuleConfiguration\n}\n+}\n- interface NuxtAppOptions {\n+declare module 'vue/types/vue' {\n+ interface Vue {\n$fireModule: typeof firebase\n- $fire: {\n- auth: firebase.auth.Auth\n- authReady: ReadyFunction\n- database: firebase.database.Database\n- databaseReady: ReadyFunction\n- firestore: firebase.firestore.Firestore\n- firestoreReady: ReadyFunction\n- functions: firebase.functions.Functions\n- functionsReady: ReadyFunction\n- storage: firebase.storage.Storage\n- storageReady: ReadyFunction\n- messaging: firebase.messaging.Messaging\n- messagingReady: ReadyFunction\n- performance: firebase.performance.Performance\n- performanceReady: ReadyFunction\n- analytics: firebase.analytics.Analytics\n- analyticsReady: ReadyFunction\n- remoteConfig: firebase.remoteConfig.RemoteConfig\n- remoteConfigReady: ReadyFunction\n+ $fire: NuxtFireInstance\n+ }\n}\n+\n+declare module '@nuxt/vue-app' {\n+ interface NuxtAppOptions {\n+ $fireModule: typeof firebase\n+ $fire: NuxtFireInstance\n}\n}\ndeclare module 'vuex/types/index' {\ninterface Store<S> {\n$fireModule: typeof firebase\n- $fire: {\n- auth: firebase.auth.Auth\n- authReady: ReadyFunction\n- database: firebase.database.Database\n- databaseReady: ReadyFunction\n- firestore: firebase.firestore.Firestore\n- firestoreReady: ReadyFunction\n- functions: firebase.functions.Functions\n- functionsReady: ReadyFunction\n- storage: firebase.storage.Storage\n- storageReady: ReadyFunction\n- messaging: firebase.messaging.Messaging\n- messagingReady: ReadyFunction\n- performance: firebase.performance.Performance\n- performanceReady: ReadyFunction\n- analytics: firebase.analytics.Analytics\n- analyticsReady: ReadyFunction\n- remoteConfig: firebase.remoteConfig.RemoteConfig\n- remoteConfigReady: ReadyFunction\n- }\n+ $fire: NuxtFireInstance\n}\n}\n",
        "date": "15.10.2020 21:40:08",
        "repo": "nuxt-community/firebase-module",
        "type": "chore",
        "chatgpt_zeroshot": "Refactor Firebase module configuration in typescript declarations"
    },
    {
        "msg": "chore(types): added missing types (emulatorHost etc.)",
        "diff": "diff --git a/types/index.d.ts b/types/index.d.ts @@ -39,6 +39,7 @@ export interface AuthServiceConfig extends ServiceConfig {\ninitialize?: {\nonAuthStateChangedMutation?: string\nonAuthStateChangedAction?: string\n+ subscribeManually?: boolean\n}\nssr?:\n@@ -53,9 +54,13 @@ export interface AuthServiceConfig extends ServiceConfig {\n}\nignorePaths?: (string | RegExp)[]\n}\n+\n+ emulatorPort?: number\n+ emulatorHost?: string\n}\nexport interface StoreServiceConfig extends ServiceConfig {\n+ memoryOnly?: boolean\nenablePersistence?:\n| boolean\n| {\n@@ -67,6 +72,7 @@ export interface StoreServiceConfig extends ServiceConfig {\nexport interface FunctionsServiceConfig extends ServiceConfig {\nlocation?: string\nemulatorPort?: number\n+ emulatorHost?: string\n}\nexport interface StorageServiceConfig extends ServiceConfig {}\n",
        "date": "05.11.2020 16:14:44",
        "repo": "nuxt-community/firebase-module",
        "type": "chore",
        "chatgpt_zeroshot": "Add new options for AuthServiceConfig and StoreServiceConfig interfaces"
    },
    {
        "msg": "chore(firebase-auth-sw): fixed regression introduced in last commit for firebase-auth-sw",
        "diff": "diff --git a/lib/sw-templates/firebase-auth-sw.js b/lib/sw-templates/firebase-auth-sw.js const ignorePaths = <%= serialize(options.ignorePaths) %>\n-<% if (options.onFirebaseHosting) { %>\n+<% if (options.loadFromFirebaseHosting) { %>\n// Only works on Firebase hosting!\nimportScripts('/__/firebase/<%= options.firebaseVersion %>/firebase-app.js')\nimportScripts('/__/firebase/<%= options.firebaseVersion %>/firebase-auth.js')\n",
        "date": "22.12.2020 23:03:08",
        "repo": "nuxt-community/firebase-module",
        "type": "chore",
        "chatgpt_zeroshot": "Update firebase-auth-sw.js to load Firebase scripts from Firebase Hosting"
    },
    {
        "msg": "chore(cleanup): changed let to const",
        "diff": "diff --git a/lib/module.js b/lib/module.js @@ -288,7 +288,7 @@ function validateConfigKeys (options, currentEnv) {\n// If one of the required keys is missing, throw an error:\nif (requiredKeys.some(k => !configKeys.includes(k))) {\n- let missingKey = requiredKeys[requiredKeys.findIndex(k => !configKeys.includes(k))];\n+ const missingKey = requiredKeys[requiredKeys.findIndex(k => !configKeys.includes(k))]\nreturn logger.error(\n`Missing or incomplete config for current environment '${currentEnv}': key '${missingKey}' is required!`\n)\n",
        "date": "28.12.2020 15:38:03",
        "repo": "nuxt-community/firebase-module",
        "type": "chore",
        "chatgpt_zeroshot": "Fix missing semicolon in validateConfigKeys function"
    },
    {
        "msg": "chore: fix broken link",
        "diff": "diff --git a/lib/module.js b/lib/module.js @@ -231,7 +231,7 @@ function validateOptions (options) {\nif (isEmpty(options.services)) {\nreturn logger.error(\n`The 'services' option is missing or empty, make sure to define it properly.\n- See: https://firebase.nuxtjs.org/getting-started/#configure`\n+ See: https://firebase.nuxtjs.org/guide/getting-started#configure`\n)\n}\n",
        "date": "23.03.2021 11:25:35",
        "repo": "nuxt-community/firebase-module",
        "type": "chore",
        "chatgpt_zeroshot": "Update link in error message in validateOptions function"
    },
    {
        "msg": "chore: Code clean up in View.",
        "diff": "diff --git a/packages/vega-view/src/View.js b/packages/vega-view/src/View.js @@ -74,12 +74,10 @@ export default function View(spec, options) {\nconst ctx = runtime(view, spec, options.functions);\nview._runtime = ctx;\nview._signals = ctx.signals;\n- view._bind = (spec.bindings || []).map(function(_) {\n- return {\n+ view._bind = (spec.bindings || []).map(_ => ({\nstate: null,\nparam: extend({}, _)\n- };\n- });\n+ }));\n// initialize scenegraph\nif (ctx.root) ctx.root.set(root);\n@@ -303,18 +301,15 @@ prototype.removeResizeListener = function(handler) {\n};\nfunction findOperatorHandler(op, handler) {\n- var t = op._targets || [],\n- h = t.filter(function(op) {\n- var u = op._update;\n- return u && u.handler === handler;\n- });\n+ const h = (op._targets || [])\n+ .filter(op => op._update && op._update.handler === handler);\nreturn h.length ? h[0] : null;\n}\nfunction addOperatorListener(view, name, op, handler) {\nvar h = findOperatorHandler(op, handler);\nif (!h) {\n- h = trap(view, function() { handler(name, op.value); });\n+ h = trap(view, () => handler(name, op.value));\nh.handler = handler;\nview.on(op, null, h);\n}\n",
        "date": "16.05.2020 18:33:47",
        "repo": "vega/vega",
        "type": "chore",
        "chatgpt_zeroshot": "Refactor binding and operator handler functions in View.js"
    },
    {
        "msg": "chore: update d3 core excludes for D3 v6",
        "diff": "diff --git a/lib/rollup.config.js b/lib/rollup.config.js @@ -9,7 +9,7 @@ import { terser } from 'rollup-plugin-terser';\nconst pkg = require('./package.json');\nconst d3CoreDeps = [\n- // 'd3-array', // we use d3-array v2, not part of D3 v5\n+ 'd3-array',\n'd3-color',\n'd3-dispatch',\n'd3-dsv',\n@@ -19,12 +19,12 @@ const d3CoreDeps = [\n'd3-hierarchy',\n'd3-interpolate',\n'd3-path',\n- // 'd3-scale', // we use d3-scale v3, not part of D3 v5\n+ 'd3-scale',\n'd3-shape',\n'd3-time',\n'd3-time-format',\n'd3-timer',\n- // 'd3-delaunay', // not part of D3 v5\n+ 'd3-delaunay',\n'topojson-client'\n];\n",
        "date": "01.09.2020 18:20:22",
        "repo": "vega/vega",
        "type": "chore",
        "chatgpt_zeroshot": "Add missing d3-array and d3-scale dependencies"
    },
    {
        "msg": "chore: fix typo in image mark docs",
        "diff": "diff --git a/docs/docs/marks/image.md b/docs/docs/marks/image.md @@ -17,7 +17,7 @@ permalink: /docs/marks/image/index.html\n| url | {% include type t=\"URL\" %} | The URL of the image file. |\n| image | [Canvas](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas) \\| [Image](https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement/Image) | The image instance to show. This property can be used to include dynamically generated images. This property is ignored if _url_ is specified. {% include tag ver=\"5.8\" %} |\n| aspect | {% include type t=\"Boolean\" %} | A boolean flag (default `true`) indicating if the image aspect ratio should be preserved across sizes. If `true` and only one of the dimensional (*width* or *height*) properties are defined, the other dimensional property will be calculated to match the aspect ratio of the loaded image file. |\n-| smooth | {% include type t=\"Boolean\" %} | A boolean flag (default `true`) indicating if the image should be smoothed when resized. If `false`, indvidual pixels should be scaled directly rather than interpolated with smoothing. For SVG rendering, this option may not work in some browsers due to lack of standardization. {% include tag ver=\"5.8\" %} |\n+| smooth | {% include type t=\"Boolean\" %} | A boolean flag (default `true`) indicating if the image should be smoothed when resized. If `false`, individual pixels should be scaled directly rather than interpolated with smoothing. For SVG rendering, this option may not work in some browsers due to lack of standardization. {% include tag ver=\"5.8\" %} |\n| align | {% include type t=\"String\" %} | The horizontal alignment of the image. One of `left`, `center`, or `right`. The default value is `left`. |\n| baseline | {% include type t=\"String\" %} | The vertical alignment of the image. One of `top`, `middle`, or `bottom`. The default value is `top`. |\n",
        "date": "13.09.2020 15:30:54",
        "repo": "vega/vega",
        "type": "chore",
        "chatgpt_zeroshot": "Fix typo in smooth property description"
    },
    {
        "msg": "chore: Update LICENSE years.",
        "diff": "diff --git a/LICENSE b/LICENSE -Copyright (c) 2015-2018, University of Washington Interactive Data Lab\n+Copyright (c) 2015-2021, University of Washington Interactive Data Lab\nAll rights reserved.\nRedistribution and use in source and binary forms, with or without\n",
        "date": "21.09.2021 10:20:35",
        "repo": "vega/vega",
        "type": "chore",
        "chatgpt_zeroshot": "Update copyright year to 2021"
    },
    {
        "msg": "chore: Touch to force github pages re-publish.",
        "diff": "diff --git a/package.json b/package.json \"format\": \"yarn lint --fix\",\n\"postinstall\": \"yarn data\"\n},\n+ \"dependencies\": {},\n\"devDependencies\": {\n\"@babel/cli\": \"^7.17.6\",\n\"@babel/core\": \"^7.17.5\",\n},\n\"workspaces\": [\n\"packages/*\"\n- ],\n- \"dependencies\": {}\n+ ]\n}\n",
        "date": "09.03.2022 10:19:34",
        "repo": "vega/vega",
        "type": "chore",
        "chatgpt_zeroshot": "Add devDependencies and workspaces configuration in package.json"
    },
    {
        "msg": "chore: Refine Vega index file.",
        "diff": "diff --git a/packages/vega/index.js b/packages/vega/index.js // -- Transforms -----\n-import pkg from './package.json';\nimport {extend} from 'vega-util';\nimport {transforms} from 'vega-dataflow';\nimport * as tx from 'vega-transforms';\n@@ -22,7 +21,7 @@ extend(\n// -- Exports -----\n-export const version = pkg.version;\n+export {version} from './package.json';\nexport * from 'vega-statistics';\n",
        "date": "11.03.2022 15:02:07",
        "repo": "vega/vega",
        "type": "chore",
        "chatgpt_zeroshot": "Refactor export of version in vega package"
    },
    {
        "msg": "chore: Update CI workflow.",
        "diff": "diff --git a/.github/workflows/test.yml b/.github/workflows/test.yml @@ -19,6 +19,9 @@ jobs:\nsteps:\n- uses: actions/checkout@v3\n+ - name: Ensure apt-get is updated\n+ run: sudo apt-get update\n+\n- name: Install Canvas and XML dependencies\nrun: sudo apt-get install -y libxml2-utils\n",
        "date": "25.03.2022 09:05:16",
        "repo": "vega/vega",
        "type": "chore",
        "chatgpt_zeroshot": "Add step to update apt-get before installing dependencies"
    },
    {
        "msg": "chore: dont hoist lightning cli dep",
        "diff": "diff --git a/packages/app/package.json b/packages/app/package.json },\n\"workspaces\": {\n\"nohoist\": [\n- \"@lightningjs/sdk\"\n+ \"@lightningjs/sdk\",\n+ \"@lightningjs/cli\"\n]\n}\n}\n\\ No newline at end of file\n",
        "date": "28.06.2021 14:36:29",
        "repo": "pavjacko/renative",
        "type": "chore",
        "chatgpt_zeroshot": "Add @lightningjs/cli to nohoist list in workspaces"
    },
    {
        "msg": "chore(rn-electron): change how electron-builder command is executed",
        "diff": "diff --git a/packages/rnv-engine-rn-electron/src/sdks/sdk-electron/index.js b/packages/rnv-engine-rn-electron/src/sdks/sdk-electron/index.js @@ -222,7 +222,7 @@ const exportElectron = async (c) => {\nawait executeAsync(\nc,\n- `npx electron-builder --config ${path.join(\n+ `npx -p electron-builder electron-builder --config ${path.join(\nplatformBuildDir,\n'electronConfig.json'\n)}`\n",
        "date": "09.11.2021 19:09:15",
        "repo": "pavjacko/renative",
        "type": "chore",
        "chatgpt_zeroshot": "Fix electron-builder command in exportElectron function"
    },
    {
        "msg": "chore: adjusted wdio.conf.js file",
        "diff": "diff --git a/packages/renative-template-hello-world/wdio.conf.js b/packages/renative-template-hello-world/wdio.conf.js @@ -13,18 +13,18 @@ const capabilities = {\n{\nplatformName: 'iOS',\ndeviceName: 'iPhone 8',\n- platformVersion: '14.4',\n+ platformVersion: '15.0',\nautomationName: 'XCUITest',\n- bundleId: 'myapp',\n+ bundleId: 'renative.helloworld.debug',\n},\n],\ntvos: [\n{\nplatformName: 'tvOS',\n- deviceName: 'Apple TV 4K',\n- platformVersion: '14.3',\n+ deviceName: 'Apple TV',\n+ platformVersion: '15.0',\nautomationName: 'XCUITest',\n- bundleId: 'myapp',\n+ bundleId: 'renative.helloworld.debug',\n},\n],\nandroid: [\n@@ -34,7 +34,7 @@ const capabilities = {\nplatformVersion: '10',\nautomationName: 'UiAutomator2',\nappPackage: 'renative.helloworld.debug',\n- appActivity: 'renative.helloworld.MainActivity',\n+ appActivity: 'renative.helloworld.debug.MainActivity',\n},\n],\nandroidtv: [\n@@ -44,14 +44,14 @@ const capabilities = {\nplatformVersion: '10',\nautomationName: 'UiAutomator2',\nappPackage: 'renative.helloworld.debug',\n- appActivity: 'renative.helloworld.MainActivity',\n+ appActivity: 'renative.helloworld.debug.MainActivity',\n},\n],\nmacos: [\n{\nplatformName: 'Mac',\nautomationName: 'Mac2',\n- bundleId: 'myapp',\n+ bundleId: 'renative.helloworld.debug',\n},\n],\nweb: [\n",
        "date": "03.02.2022 14:59:28",
        "repo": "pavjacko/renative",
        "type": "chore",
        "chatgpt_zeroshot": "Update platform versions and bundle IDs for iOS, tvOS, Android, and Android TV configurations."
    },
    {
        "msg": "chore: add reporting scripts",
        "diff": "diff --git a/packages/renative-template-hello-world/package.json b/packages/renative-template-hello-world/package.json \"e2e:ios\": \"PLATFORM=ios npx wdio wdio.conf.js\",\n\"e2e:macos\": \"PLATFORM=macos ENGINE=macos npx wdio wdio.conf.js\",\n\"e2e:tvos\": \"PLATFORM=tvos npx wdio wdio.conf.js\",\n- \"e2e:web\": \"PLATFORM=web npx wdio wdio.conf.js\"\n+ \"e2e:web\": \"PLATFORM=web npx wdio wdio.conf.js\",\n+ \"report\": \"yarn report:generate && yarn report:open\",\n+ \"report:generate\": \"npx allure generate --clean reporting/allure-results -o reporting/allure-report\",\n+ \"report:open\": \"npx allure open reporting/allure-report\"\n},\n\"dependencies\": {},\n\"devDependencies\": {\n",
        "date": "17.02.2022 11:58:50",
        "repo": "pavjacko/renative",
        "type": "chore",
        "chatgpt_zeroshot": "Add report generation and opening scripts for e2e tests"
    },
    {
        "msg": "chore: add default app in the e2e script",
        "diff": "diff --git a/package.json b/package.json \"deploy:alpha:soft\": \"npm run test && npm run deploy-prepare && npm run git-commit-tag && npx lerna publish from-package --dist-tag alpha --yes\",\n\"deploy:feat\": \"npm run test && npm run deploy-prepare && npm run git-commit-tag && npx lerna publish from-package --dist-tag feat --yes && git push origin HEAD\",\n\"deploy:prod\": \"npm run deploy-all && npx lerna publish from-package --yes && git push origin HEAD\",\n- \"e2e-hello-world-ios\": \"cd packages/renative-template-hello-world && npx rnv build -p ios -s test && yarn e2e:ios\",\n- \"e2e-hello-world-android\": \"cd packages/renative-template-hello-world && npx rnv build -p android -s test && yarn e2e:android\",\n- \"e2e-hello-world-tvos\": \"cd packages/renative-template-hello-world && npx rnv build -p tvos -s test && yarn e2e:tvos\",\n- \"e2e-hello-world-androidtv\": \"cd packages/renative-template-hello-world && npx rnv build -p androidtv -s test && yarn e2e:androidtv\",\n- \"e2e-hello-world-macos\": \"cd packages/renative-template-hello-world && npx rnv build -p macos -s test && yarn e2e:macos\",\n- \"e2e-hello-world-web\": \"cd packages/renative-template-hello-world && npx rnv start -p web -s test & sleep 60 && cd packages/renative-template-hello-world && yarn e2e:web && kill $(lsof -t -i:8080)\",\n+ \"e2e-hello-world-ios\": \"cd packages/renative-template-hello-world && npx rnv build -p ios -s test -c template && yarn e2e:ios\",\n+ \"e2e-hello-world-android\": \"cd packages/renative-template-hello-world && npx rnv build -p android -s test -c template && yarn e2e:android\",\n+ \"e2e-hello-world-tvos\": \"cd packages/renative-template-hello-world && npx rnv build -p tvos -s test -c template && yarn e2e:tvos\",\n+ \"e2e-hello-world-androidtv\": \"cd packages/renative-template-hello-world && npx rnv build -p androidtv -s test -c template && yarn e2e:androidtv\",\n+ \"e2e-hello-world-macos\": \"cd packages/renative-template-hello-world && npx rnv build -p macos -s test -c template && yarn e2e:macos\",\n+ \"e2e-hello-world-web\": \"cd packages/renative-template-hello-world && npx rnv start -p web -s test -c template & sleep 60 && cd packages/renative-template-hello-world && yarn e2e:web && kill $(lsof -t -i:8080)\",\n\"git-commit\": \"rnv hooks run -x gitCommit -r\",\n\"git-commit-tag\": \"rnv hooks run -x gitCommitAndTag -r\",\n\"git-tag\": \"rnv hooks run -x gitTag -r\",\n",
        "date": "01.03.2022 18:04:55",
        "repo": "pavjacko/renative",
        "type": "chore",
        "chatgpt_zeroshot": "refactor: updated e2e build commands to include template flag"
    },
    {
        "msg": "chore: update cast import",
        "diff": "diff --git a/packages/renative-template-hello-world/src/navigation/index.js b/packages/renative-template-hello-world/src/navigation/index.js /* eslint-disable react/prop-types */\n+import { createDrawerNavigator } from '@react-navigation/drawer';\n+import { NavigationContainer } from '@react-navigation/native';\n+import { createStackNavigator } from '@react-navigation/stack';\nimport React, { useContext } from 'react';\nimport { StatusBar } from 'react-native';\n-import { createStackNavigator } from '@react-navigation/stack';\n-import { NavigationContainer } from '@react-navigation/native';\n-import { createDrawerNavigator } from '@react-navigation/drawer';\n-import { CastButton } from 'react-native-google-cast';\nimport { isFactorDesktop } from 'renative';\n+import Menu, { DrawerButton } from '../components/menu';\nimport ScreenHome from '../components/screenHome';\n-import ScreenMyPage from '../components/screenMyPage';\nimport ScreenModal from '../components/screenModal';\n-import Menu, { DrawerButton } from '../components/menu';\n+import ScreenMyPage from '../components/screenMyPage';\nimport { ThemeContext } from '../config';\n+import { CastButton } from '../imports/react-native-google-cast';\nconst Stack = createStackNavigator();\nconst ModalStack = createStackNavigator();\n",
        "date": "02.03.2022 13:06:15",
        "repo": "pavjacko/renative",
        "type": "chore",
        "chatgpt_zeroshot": "Refactor navigation setup and import statements in index.js"
    },
    {
        "msg": "chore: clean logs",
        "diff": "diff --git a/packages/engine-rn-electron/src/sdks/sdk-electron/index.js b/packages/engine-rn-electron/src/sdks/sdk-electron/index.js @@ -95,8 +95,6 @@ const configureProject = (c, exitOnFail) => new Promise((resolve, reject) => {\n);\nconst appId = getAppId(c, platform);\n- console.log('AJLKAJLKAJLKA', packagePath);\n-\nif (!fsExistsSync(packagePath)) {\nif (exitOnFail) {\nlogWarning(\n@@ -113,9 +111,7 @@ const configureProject = (c, exitOnFail) => new Promise((resolve, reject) => {\nreject(`${packagePath} does not exist!`);\nreturn;\n}\n- console.log('SKSLKS:LSLKS:', engine);\nconst pkgJson = path.join(engine.originalTemplatePlatformsDir, platform, 'package.json');\n- console.log('AMAMAMAAM', pkgJson);\nconst packageJson = readObjectSync(pkgJson);\npackageJson.name = `${c.runtime.appId}-${platform}`;\n",
        "date": "07.06.2022 19:40:59",
        "repo": "pavjacko/renative",
        "type": "chore",
        "chatgpt_zeroshot": "Remove console.log statements and update packageJson name in configureProject function"
    },
    {
        "msg": "chore: fix longstanding problem with shell.nix file",
        "diff": "diff --git a/shell.nix b/shell.nix @@ -13,7 +13,6 @@ let libs = [\nfontconfig.dev\ngdk_pixbuf\nglib\n- glibc\ngnome3.gconf\ngtk2\nnspr\n@@ -43,7 +42,6 @@ in stdenv.mkDerivation {\nbuildInputs = [\nelectron\n- git\nnodejs-7_x\nphantomjs2\npkgconfig\n",
        "date": "15.06.2017 17:22:21",
        "repo": "kitware/candela",
        "type": "chore",
        "chatgpt_zeroshot": "Remove glibc and git from buildInputs in shell.nix"
    },
    {
        "msg": "chore: remove `tag` field from glo loader",
        "diff": "diff --git a/webpack.js b/webpack.js @@ -69,7 +69,6 @@ module.exports = function (config, basePath, options) {\n},\n{\ntest: /\\.js$/,\n- tag: 'glo',\nloaders: [\n'exports-loader?GLO',\n'imports-loader?_=underscore&cola=webcola'\n",
        "date": "22.06.2017 08:12:28",
        "repo": "kitware/candela",
        "type": "chore",
        "chatgpt_zeroshot": "Remove 'tag: 'glo' from webpack.js configuration"
    },
    {
        "msg": "chore: set `basePath` properly when it's not passed in",
        "diff": "diff --git a/webpack.js b/webpack.js +var path = require('path');\n+\nfunction _includePaths (basePath) {\nif (basePath) {\nreturn [\n@@ -57,7 +59,10 @@ module.exports = function (config, basePath, options) {\n}\n// Prepend the Candela loaders.\n- var gloPath = basePath + '/node_modules/glo/glo.js';\n+ if (basePath === undefined) {\n+ basePath = '.';\n+ }\n+ var gloPath = path.resolve(basePath, 'node_modules/glo/glo.js');\nconfig.module.loaders = [\n{\ntest: /\\.js$/,\n",
        "date": "22.06.2017 08:19:26",
        "repo": "kitware/candela",
        "type": "chore",
        "chatgpt_zeroshot": "Refactor webpack.js to use path module for resolving file paths"
    },
    {
        "msg": "chore: support webpack2 syntax",
        "diff": "diff --git a/webpack.js b/webpack.js var path = require('path');\n+var process = require('process');\nfunction _includePaths (basePath) {\nif (basePath) {\n@@ -41,11 +42,16 @@ module.exports = function (config, basePath, options) {\nif (exclude) {\n// Install empty module and module.loaders entries if missing.\nconfig.module = config.module || {};\n+\n+ if (process.env.WEBPACK2) {\n+ config.module.rules = config.module.rules || [];\n+ } else {\nconfig.module.loaders = config.module.loaders || [];\n+ }\n// For each loader, append the Candela include paths to its `exclude`\n// property.\n- config.module.loaders.forEach(function (loader) {\n+ var excluder = function (loader) {\n// Install an empty list if there is no `exclude` property.\nloader.exclude = loader.exclude || [];\n@@ -55,7 +61,13 @@ module.exports = function (config, basePath, options) {\n}\nloader.exclude = loader.exclude.concat(includePaths);\n- });\n+ };\n+\n+ if (process.env.WEBPACK2) {\n+ config.module.rules.forEach(excluder);\n+ } else {\n+ config.module.loaders.forEach(excluder);\n+ }\n}\n// Prepend the Candela loaders.\n@@ -63,6 +75,69 @@ module.exports = function (config, basePath, options) {\nbasePath = '.';\n}\nvar gloPath = path.resolve(basePath, 'node_modules/glo/glo.js');\n+ if (process.env.WEBPACK2) {\n+ config.module.rules = [\n+ {\n+ test: /\\.js$/,\n+ use: {\n+ loader: 'babel-loader',\n+ options: {\n+ presets: ['es2015']\n+ }\n+ },\n+ include: includePaths.concat(gloPath)\n+ },\n+ {\n+ test: /\\.js$/,\n+ use: [\n+ 'exports-loader?GLO',\n+ 'imports-loader?_=underscore&cola=webcola'\n+ ],\n+ include: gloPath\n+ },\n+ {\n+ test: /\\.jpe?g$|\\.gif$|\\.png$|\\.woff$|\\.wav$|\\.mp3$|\\.woff(2)?(\\?v=[0-9]\\.[0-9]\\.[0-9])?$|\\.(ttf|eot|svg)(\\?v=[0-9]\\.[0-9]\\.[0-9])?$/,\n+ use: 'url-loader',\n+ include: addNMPath(['font-awesome', 'bootstrap'], includePaths)\n+ },\n+ {\n+ test: /\\.csv$/,\n+ use: 'raw-loader',\n+ include: includePaths\n+ },\n+ {\n+ test: /\\.html$/,\n+ use: 'html-loader?attrs=img:src',\n+ include: includePaths\n+ },\n+ {\n+ test: /\\.styl$/,\n+ use: ['style-loader', 'css-loader', 'stylus-loader'],\n+ include: includePaths\n+ },\n+ {\n+ test: /\\.css$/,\n+ use: ['style-loader', 'css-loader'],\n+ include: addNMPath(['lineupjs', 'nvd3'], includePaths)\n+ },\n+ {\n+ test: /\\.scss$/,\n+ use: ['style-loader', 'css-loader', 'sass-loader'],\n+ include: addNMPath('UpSet', includePaths)\n+ },\n+ {\n+ test: /\\.jade$/,\n+ use: 'jade-loader',\n+ include: includePaths\n+ },\n+ {\n+ test: /\\.json$/,\n+ use: ['json-loader', 'strip-json-comments-loader'],\n+ include: addNMPath('datalib', includePaths)\n+ }\n+\n+ ].concat(config.module.rules);\n+ } else {\nconfig.module.loaders = [\n{\ntest: /\\.js$/,\n@@ -121,6 +196,7 @@ module.exports = function (config, basePath, options) {\ninclude: addNMPath('datalib', includePaths)\n}\n].concat(config.module.loaders);\n+ }\nreturn config;\n};\n",
        "date": "22.06.2017 09:02:31",
        "repo": "kitware/candela",
        "type": "chore",
        "chatgpt_zeroshot": "Add support for Webpack 2 and update module rules in webpack.js"
    },
    {
        "msg": "chore: disable broken examples",
        "diff": "diff --git a/packages/examples/index.json b/packages/examples/index.json \"title\": \"Resize Full\",\n\"template\": \"resize-full\"\n},\n- {\n- \"title\": \"Resize Table\",\n- \"link\": \"resize-table\",\n- \"template\": \"resize-table\"\n- },\n- {\n- \"title\": \"Resize Matrix\",\n- \"link\": \"resize-matrix\",\n- \"template\": \"resize-matrix\"\n- },\n{\n\"title\": \"LineUp\",\n\"link\": \"lineup\"\n",
        "date": "24.04.2018 16:34:48",
        "repo": "kitware/candela",
        "type": "chore",
        "chatgpt_zeroshot": "Remove resize table and resize matrix templates, add LineUp template."
    },
    {
        "msg": "chore(pycandela): version 0.4.0",
        "diff": "diff --git a/python/pycandela/setup.py b/python/pycandela/setup.py @@ -2,7 +2,7 @@ from distutils.core import setup\nsetup(\nname='pycandela',\n- version='0.3.0',\n+ version='0.4.0',\ndescription='Jupyter interface for Candela visualization components',\nauthor='Kitware, Inc.',\nauthor_email='kitware@kitware.com',\n",
        "date": "16.05.2018 15:29:38",
        "repo": "kitware/candela",
        "type": "chore",
        "chatgpt_zeroshot": "Bump version to 0.4.0 in setup.py"
    },
    {
        "msg": "chore: update sw-precache-webpack-plugin to 0.11.2",
        "diff": "diff --git a/package.json b/package.json \"rimraf\": \"^2.6.1\",\n\"script-ext-html-webpack-plugin\": \"^1.8.0\",\n\"simplehttp2server\": \"^1.0.0\",\n- \"sw-precache-webpack-plugin\": \"^0.11.0\",\n+ \"sw-precache-webpack-plugin\": \"^0.11.2\",\n\"tmp\": \"0.0.31\",\n\"unfetch\": \"^2.1.2\",\n\"url-loader\": \"^0.5.8\",\n",
        "date": "01.06.2017 08:53:43",
        "repo": "preactjs/preact-cli",
        "type": "chore",
        "chatgpt_zeroshot": "Update sw-precache-webpack-plugin to version 0.11.2"
    },
    {
        "msg": "chore: Travis setup chrome path [WIP]",
        "diff": "diff --git a/.travis.yml b/.travis.yml @@ -10,6 +10,12 @@ node_js:\ncache:\nnpm: true\n+before_script:\n+ - echo \"which google-chrome\"\n+ - echo `which google-chrome`\n+ - echo \"which google-chrome-stable\"\n+ - echo `which google-chrome-stable`\n+ - export LIGHTHOUSE_CHROMIUM_PATH=`which google-chrome-stable`\nscript:\n- npm run lint\n- npm run test\n",
        "date": "11.06.2017 22:35:50",
        "repo": "preactjs/preact-cli",
        "type": "chore",
        "chatgpt_zeroshot": "Add before_script to check for Google Chrome and set LIGHTHOUSE_CHROMIUM_PATH"
    },
    {
        "msg": "chore: Debug Chrome errors on Travis",
        "diff": "diff --git a/tests/lib/chrome.js b/tests/lib/chrome.js import { Launcher } from 'lighthouse/chrome-launcher';\nimport chrome from 'chrome-remote-interface';\n+import fs from 'fs.promised';\nexport default async () => {\nlet launcher = new Launcher({\n@@ -12,7 +13,18 @@ export default async () => {\n]\n});\nawait launcher.launch();\n- let protocol = await setup();\n+ // Wait for chrome to launch\n+ await delay(1000);\n+\n+ let protocol;\n+ try {\n+ protocol = await setup();\n+ } catch (err) {\n+ console.log('chrome errors');\n+ let chromeErrors = fs.readFile(launcher.errFile, 'utf-8');\n+ console.error(chromeErrors);\n+ throw err;\n+ }\nreturn { launcher, protocol };\n};\n",
        "date": "11.06.2017 22:55:50",
        "repo": "preactjs/preact-cli",
        "type": "chore",
        "chatgpt_zeroshot": "Add error handling for chrome launch and log chrome errors"
    },
    {
        "msg": "chore: try streaming output",
        "diff": "diff --git a/package.json b/package.json ],\n\"scripts\": {\n\"pretest\": \"yarn lint\",\n- \"test\": \"lerna run test\",\n+ \"test\": \"lerna run test --stream\",\n\"prettier\": \"prettier --write **/*.{js,ts,tsx,json,css,scss,md,yml}\",\n\"lint\": \"eslint .\"\n},\n",
        "date": "28.05.2019 23:46:14",
        "repo": "preactjs/preact-cli",
        "type": "chore",
        "chatgpt_zeroshot": "Update test script in package.json to run tests in stream mode"
    },
    {
        "msg": "chore: Removes duplicated dev deps in CLI",
        "diff": "diff --git a/packages/cli/package.json b/packages/cli/package.json \"bugs\": \"https://github.com/preactjs/preact-cli/issues\",\n\"homepage\": \"https://github.com/preactjs/preact-cli\",\n\"devDependencies\": {\n- \"eslint\": \"^7.12.1\",\n\"html-looks-like\": \"^1.0.2\",\n\"jest\": \"^26.0.1\",\n- \"lerna\": \"^3.16.4\",\n- \"lint-staged\": \"^10.5.0\",\n\"mkdirp\": \"^1.0.3\",\n\"ncp\": \"^2.0.0\",\n\"node-sass\": \"^4.12.0\",\n",
        "date": "03.02.2021 04:33:16",
        "repo": "preactjs/preact-cli",
        "type": "chore",
        "chatgpt_zeroshot": "Remove eslint, lerna, and lint-staged from devDependencies"
    },
    {
        "msg": "chore: auto publish",
        "diff": "diff --git a/.github/workflows/release.yml b/.github/workflows/release.yml @@ -24,7 +24,11 @@ jobs:\n- name: Install Dependencies\nrun: yarn\n- - name: Create Release Pull Request\n+ - name: Create Release Pull Request or Publish to npm\nuses: changesets/action@master\n+ with:\n+ # This expects you to have a script called release which does a build for your packages and calls changeset publish\n+ publish: yarn release\nenv:\nGITHUB_TOKEN: ${{ secrets.REPO_SCOPED_TOKEN }}\n+ NPM_TOKEN: ${{ secrets.PREACT_NPM_TOKEN }}\n",
        "date": "26.05.2021 03:35:33",
        "repo": "preactjs/preact-cli",
        "type": "chore",
        "chatgpt_zeroshot": "Add option to publish to npm in release workflow"
    },
    {
        "msg": "chore: Removes PNP CI as it only gets in the way",
        "diff": "diff --git a/.github/workflows/ci.yml b/.github/workflows/ci.yml @@ -44,36 +44,11 @@ jobs:\nLIGHTHOUSE_CHROMIUM_PATH: 'which google-chrome-stable'\nrun: npm run test\n- pnpTest:\n- name: PnPTest\n- runs-on: ubuntu-latest\n- steps:\n- - uses: actions/checkout@v2\n- with:\n- fetch-depth: 1\n-\n- - uses: actions/setup-node@v1\n- with:\n- node-version: 12.x\n-\n- - name: Run PnP test\n- run: |\n- git clone https://github.com/preactjs-templates/default.git default\n- cd default/template\n- touch yarn.lock\n- echo $(cat package.json | jq '.name = \"pnp-test\"') > package.json\n- yarn set version 2\n- yarn config set pnpFallbackMode none\n- yarn config set compressionLevel 0\n- yarn link -A -p ../..\n- yarn build\n-\nci-success:\nname: ci\nif: ${{ success() }}\nneeds:\n- test\n- - pnpTest\nruns-on: ubuntu-latest\nsteps:\n- name: CI succeeded\n",
        "date": "05.06.2022 21:59:53",
        "repo": "preactjs/preact-cli",
        "type": "chore",
        "chatgpt_zeroshot": "Refactor CI workflow and remove PnPTest job"
    },
    {
        "msg": "chore: add alias",
        "diff": "diff --git a/html/package.json b/html/package.json \"scripts\": {\n\"dev\": \"webpack --config webpack.config.js --mode development\",\n\"watch\": \"webpack --config webpack.config.js --mode development --watch\",\n- \"prod\": \"webpack --config webpack.config.js --mode production\"\n+ \"prod\": \"webpack --config webpack.config.js --mode production\",\n+ \"development\": \"npm run dev\",\n+ \"production\": \"npm run prod\"\n},\n\"repository\": {\n\"type\": \"git\",\n",
        "date": "20.04.2021 13:44:05",
        "repo": "pypy-vrc/vrcx",
        "type": "chore",
        "chatgpt_zeroshot": "Add development and production scripts to package.json"
    },
    {
        "msg": "chore(webpack): update config",
        "diff": "diff --git a/html/webpack.config.js b/html/webpack.config.js @@ -42,12 +42,9 @@ module.exports = {\n},\n{\ntest: /\\.(eot|png|svg|ttf|woff)/,\n- use: {\n- loader: 'url-loader',\n- options: {\n- limit: false,\n- name: 'assets/[name].[ext]'\n- }\n+ type: 'asset',\n+ generator: {\n+ filename: 'assets/[name][ext]'\n}\n}\n]\n",
        "date": "19.07.2021 18:09:57",
        "repo": "pypy-vrc/vrcx",
        "type": "chore",
        "chatgpt_zeroshot": "Refactor webpack config to use asset module for file loading."
    },
    {
        "msg": "chore(github): add lint",
        "diff": "diff --git a/.github/workflows/github_actions.yml b/.github/workflows/github_actions.yml @@ -37,5 +37,7 @@ jobs:\nnode-version: ${{ matrix.node-version }}\n- name: Restore dependencies\nrun: npm ci\n+ - name: Lint\n+ run: npm run lint\n- name: Build\nrun: npm run production\n",
        "date": "13.08.2021 03:00:52",
        "repo": "pypy-vrc/vrcx",
        "type": "chore",
        "chatgpt_zeroshot": "Add linting step to GitHub Actions workflow"
    },
    {
        "msg": "chore(.net): update cef",
        "diff": "diff --git a/VRCX.csproj b/VRCX.csproj </ItemGroup>\n<ItemGroup>\n<PackageReference Include=\"CefSharp.Common\">\n- <Version>91.1.230</Version>\n+ <Version>92.0.260</Version>\n</PackageReference>\n<PackageReference Include=\"CefSharp.OffScreen\">\n- <Version>91.1.230</Version>\n+ <Version>92.0.260</Version>\n</PackageReference>\n<PackageReference Include=\"CefSharp.WinForms\">\n- <Version>91.1.230</Version>\n+ <Version>92.0.260</Version>\n</PackageReference>\n<PackageReference Include=\"DiscordRichPresence\">\n<Version>1.0.175</Version>\n",
        "date": "25.08.2021 06:04:11",
        "repo": "pypy-vrc/vrcx",
        "type": "chore",
        "chatgpt_zeroshot": "Update CefSharp packages to version 92.0.260"
    },
    {
        "msg": "chore(npm): update",
        "diff": "diff --git a/html/package-lock.json b/html/package-lock.json \"requires\": true,\n\"packages\": {\n\"\": {\n+ \"name\": \"html\",\n\"license\": \"MIT\",\n\"devDependencies\": {\n\"@babel/eslint-parser\": \"^7.19.1\",\n\"dev\": true\n},\n\"node_modules/json5\": {\n- \"version\": \"1.0.1\",\n- \"resolved\": \"https://registry.npmjs.org/json5/-/json5-1.0.1.tgz\",\n- \"integrity\": \"sha512-aKS4WQjPenRxiQsC93MNfjx+nbF4PAdYzmd/1JIj8HYzqfbu86beTuNgXDzPknWk0n0uARlyewZo4s++ES36Ow==\",\n+ \"version\": \"1.0.2\",\n+ \"resolved\": \"https://registry.npmjs.org/json5/-/json5-1.0.2.tgz\",\n+ \"integrity\": \"sha512-g1MWMLBiz8FKi1e4w0UyVL3w+iJceWAFBAaBnnGKOpNa5f8TLktkbre1+s6oICydWAm+HRUGTmI+//xv2hvXYA==\",\n\"dev\": true,\n\"dependencies\": {\n\"minimist\": \"^1.2.0\"\n\"dev\": true\n},\n\"json5\": {\n- \"version\": \"1.0.1\",\n- \"resolved\": \"https://registry.npmjs.org/json5/-/json5-1.0.1.tgz\",\n- \"integrity\": \"sha512-aKS4WQjPenRxiQsC93MNfjx+nbF4PAdYzmd/1JIj8HYzqfbu86beTuNgXDzPknWk0n0uARlyewZo4s++ES36Ow==\",\n+ \"version\": \"1.0.2\",\n+ \"resolved\": \"https://registry.npmjs.org/json5/-/json5-1.0.2.tgz\",\n+ \"integrity\": \"sha512-g1MWMLBiz8FKi1e4w0UyVL3w+iJceWAFBAaBnnGKOpNa5f8TLktkbre1+s6oICydWAm+HRUGTmI+//xv2hvXYA==\",\n\"dev\": true,\n\"requires\": {\n\"minimist\": \"^1.2.0\"\n",
        "date": "05.01.2023 04:08:53",
        "repo": "pypy-vrc/vrcx",
        "type": "chore",
        "chatgpt_zeroshot": "Update json5 package to version 1.0.2"
    },
    {
        "msg": "chore(.NET): update Cef 110",
        "diff": "diff --git a/VRCX.csproj b/VRCX.csproj </ItemGroup>\n<ItemGroup>\n<PackageReference Include=\"CefSharp.Common\">\n- <Version>109.1.110</Version>\n+ <Version>110.0.250</Version>\n</PackageReference>\n<PackageReference Include=\"CefSharp.OffScreen\">\n- <Version>109.1.110</Version>\n+ <Version>110.0.250</Version>\n</PackageReference>\n<PackageReference Include=\"CefSharp.WinForms\">\n- <Version>109.1.110</Version>\n+ <Version>110.0.250</Version>\n</PackageReference>\n<PackageReference Include=\"DiscordRichPresence\">\n<Version>1.1.3.18</Version>\n",
        "date": "12.02.2023 00:18:25",
        "repo": "pypy-vrc/vrcx",
        "type": "chore",
        "chatgpt_zeroshot": "Update CefSharp package versions to 110.0.250"
    },
    {
        "msg": "chore(README): correct spelling",
        "diff": "diff --git a/README.md b/README.md @@ -71,7 +71,7 @@ Validator | Description\n**isBoolean(str)** | check if a string is a boolean.\n**isByteLength(str [, options])** | check if the string's length (in UTF-8 bytes) falls in a range.<br/><br/>`options` is an object which defaults to `{min:0, max: undefined}`.\n**isCreditCard(str)** | check if the string is a credit card.\n-**isCurrency(str [, options])** | check if the string is a valid currency amount.<br/><br/>`options` is an object which defaults to `{symbol: '$', require_symbol: false, allow_space_after_symbol: false, symbol_after_digits: false, allow_negatives: true, parens_for_negatives: false, negative_sign_before_digits: false, negative_sign_after_digits: false, allow_negative_sign_placeholder: false, thousands_separator: ',', decimal_separator: '.', allow_decimal: true, require_decimal: false, digits_after_decimal: [2], allow_space_after_digits: false}`.<br/>**Note:** The array `digits_after_decimal` is filled with the exact number of digits allowd not a range, for example a range 1 to 3 will be given as [1, 2, 3].\n+**isCurrency(str [, options])** | check if the string is a valid currency amount.<br/><br/>`options` is an object which defaults to `{symbol: '$', require_symbol: false, allow_space_after_symbol: false, symbol_after_digits: false, allow_negatives: true, parens_for_negatives: false, negative_sign_before_digits: false, negative_sign_after_digits: false, allow_negative_sign_placeholder: false, thousands_separator: ',', decimal_separator: '.', allow_decimal: true, require_decimal: false, digits_after_decimal: [2], allow_space_after_digits: false}`.<br/>**Note:** The array `digits_after_decimal` is filled with the exact number of digits allowed not a range, for example a range 1 to 3 will be given as [1, 2, 3].\n**isDataURI(str)** | check if the string is a [data uri format](https://developer.mozilla.org/en-US/docs/Web/HTTP/data_URIs).\n**isDecimal(str [, options])** | check if the string represents a decimal number, such as 0.1, .3, 1.1, 1.00003, 4.0, etc.<br/><br/>`options` is an object which defaults to `{force_decimal: false, decimal_digits: '1,', locale: 'en-US'}`<br/><br/>`locale` determine the decimal separator and is one of `['ar', 'ar-AE', 'ar-BH', 'ar-DZ', 'ar-EG', 'ar-IQ', 'ar-JO', 'ar-KW', 'ar-LB', 'ar-LY', 'ar-MA', 'ar-QA', 'ar-QM', 'ar-SA', 'ar-SD', 'ar-SY', 'ar-TN', 'ar-YE', 'bg-BG', 'cs-CZ', 'da-DK', 'de-DE', 'en-AU', 'en-GB', 'en-HK', 'en-IN', 'en-NZ', 'en-US', 'en-ZA', 'en-ZM', 'es-ES', 'fr-FR', 'hu-HU', 'it-IT', 'ku-IQ', nb-NO', 'nl-NL', 'nn-NO', 'pl-PL', 'pt-BR', 'pt-PT', 'ru-RU', 'sr-RS', 'sr-RS@latin', 'sv-SE', 'tr-TR', 'uk-UA']`.<br/>**Note:** `decimal_digits` is given as a range like '1,3', a specific value like '3' or min like '1,'.\n**isDivisibleBy(str, number)** | check if the string is a number that's divisible by another.\n",
        "date": "16.08.2018 14:55:34",
        "repo": "validatorjs/validator.js",
        "type": "chore",
        "chatgpt_zeroshot": "Fix typo in isCurrency function documentation"
    },
    {
        "msg": "chore(isPostalCode): add test cases for BR",
        "diff": "diff --git a/test/validators.js b/test/validators.js @@ -6734,6 +6734,14 @@ describe('Validators', () => {\n'22040-020',\n'39400-152',\n],\n+ invalid: [\n+ '79800A12',\n+ '13165-00',\n+ '38175-abc',\n+ '81470-2763',\n+ '78908',\n+ '13010|111',\n+ ],\n},\n{\nlocale: 'NZ',\n",
        "date": "12.08.2019 15:50:00",
        "repo": "validatorjs/validator.js",
        "type": "chore",
        "chatgpt_zeroshot": "Add new invalid postal codes to NZ validator in validators.js"
    },
    {
        "msg": "chore: update changelog with locale details",
        "diff": "diff --git a/CHANGELOG.md b/CHANGELOG.md - [#1357](https://github.com/validatorjs/validator.js/pull/1357) add Node v6 on build pipeline @profnandaa\n- **New and Improved locales**:\n- - [#1439](https://github.com/validatorjs/validator.js/pull/1439) @saidfagan\n- - [#1420](https://github.com/validatorjs/validator.js/pull/1420) @icyice0217\n- - [#1411](https://github.com/validatorjs/validator.js/pull/1411) @stinkymonkeyph\n- - [#1394](https://github.com/validatorjs/validator.js/pull/1394) @heanzyzabala\n- - [#1391](https://github.com/validatorjs/validator.js/pull/1391) @heanzyzabala\n- - [#1388](https://github.com/validatorjs/validator.js/pull/1388) @stinkymonkeyph\n- - [#1384](https://github.com/validatorjs/validator.js/pull/1384) @lorenzodb1\n- - [#1371](https://github.com/validatorjs/validator.js/pull/1371) @rubiin\n- - [#1370](https://github.com/validatorjs/validator.js/pull/1370) @rubiin\n- - [#1367](https://github.com/validatorjs/validator.js/pull/1367) @rubiin\n- - [#1356](https://github.com/validatorjs/validator.js/pull/1356) @MladenZeljic\n- - [#1303](https://github.com/validatorjs/validator.js/pull/1301) @heathcliff-hu\n+ - `isMobilePhone`:\n+ - [#1439](https://github.com/validatorjs/validator.js/pull/1439) `az-AZ` @saidfagan\n+ - [#1420](https://github.com/validatorjs/validator.js/pull/1420) `uz-Uz` @icyice0217\n+ - [#1391](https://github.com/validatorjs/validator.js/pull/1391) `de-DE` @heanzyzabala\n+ - [#1388](https://github.com/validatorjs/validator.js/pull/1388) `en-PH` @stinkymonkeyph\n+ - [#1370](https://github.com/validatorjs/validator.js/pull/1370) `es-ES` @rubiin\n+ - [#1356](https://github.com/validatorjs/validator.js/pull/1356) `bs-BA` @MladenZeljic\n+ - [#1303](https://github.com/validatorjs/validator.js/pull/1301) `zh-CN` @heathcliff-hu\n+ - `isPostalCode`:\n+ - [#1439](https://github.com/validatorjs/validator.js/pull/1439) `AZ` @saidfagan\n+ - [#1370](https://github.com/validatorjs/validator.js/pull/1370) `ES` @rubiin\n+ - [#1367](https://github.com/validatorjs/validator.js/pull/1367) `IL` @rubiin\n+ - `isAlpha`, `isAlphanumeric`:\n+ - [#1411](https://github.com/validatorjs/validator.js/pull/1411) `fa-AF`, `fa-IR` @stinkymonkeyph\n+ - [#1371](https://github.com/validatorjs/validator.js/pull/1371) `vi-VN` @rubiin\n+ - `isBAN`:\n+ - [#1394](https://github.com/validatorjs/validator.js/pull/1394) `EG`, `SV` @heanzyzabala\n+ - `isIdentityCard`:\n+ - [#1384](https://github.com/validatorjs/validator.js/pull/1384) `IT` @lorenzodb1\n#### 13.1.1\n",
        "date": "19.09.2020 16:04:20",
        "repo": "validatorjs/validator.js",
        "type": "chore",
        "chatgpt_zeroshot": "Add new locales and update validation methods for `isMobilePhone`, `isPostalCode`, `isAlpha`, `isAlphanumeric`, `isBAN`, and `isIdentityCard` with contributors' names and locales."
    },
    {
        "msg": "chore: add a more explanatory description to CI jobs",
        "diff": "diff --git a/.github/workflows/ci.yml b/.github/workflows/ci.yml @@ -10,17 +10,18 @@ jobs:\nstrategy:\nmatrix:\nnode-version: [14, 12, 10, 8, 6]\n+ name: Run tests on Node.js ${{ matrix.node-version }}\nsteps:\n- name: Setup Node.js ${{ matrix.node-version }}\nuses: actions/setup-node@v2-beta\nwith:\nnode-version: ${{ matrix.node-version }}\ncheck-latest: true\n- - name: Checkout Repository\n+ - name: Checkout repository\nuses: actions/checkout@v2\n- - name: Install Dependencies\n+ - name: Install dependencies\nrun: npm install\n- - name: Run Tests\n+ - name: Run tests\nrun: npm test\n- if: matrix.node-version == 14\nname: Generate coverage file\n",
        "date": "26.02.2021 17:07:51",
        "repo": "validatorjs/validator.js",
        "type": "chore",
        "chatgpt_zeroshot": "Refactor workflow file to update job names and improve consistency"
    },
    {
        "msg": "chore(docs): rephrase sentence for grammatical correctness\nChange Text from \"Passing anything other than a string is an error.\" to \"Passing anything other than a string will result in an error.\"",
        "diff": "diff --git a/README.md b/README.md @@ -14,7 +14,7 @@ A library of string validators and sanitizers.\n**This library validates and sanitizes strings only.**\nIf you're not sure if your input is a string, coerce it using `input + ''`.\n-Passing anything other than a string is an error.\n+Passing anything other than a string will result in an error.\n## Installation and Usage\n",
        "date": "03.03.2021 16:11:59",
        "repo": "validatorjs/validator.js",
        "type": "chore",
        "chatgpt_zeroshot": "Refactor error message for non-string inputs in README.md"
    },
    {
        "msg": "chore: add gitter chatroom badge",
        "diff": "diff --git a/README.md b/README.md [![Downloads][downloads-image]][npm-url]\n[![Backers on Open Collective](https://opencollective.com/validatorjs/backers/badge.svg)](#backers)\n[![Sponsors on Open Collective](https://opencollective.com/validatorjs/sponsors/badge.svg)](#sponsors)\n+[![Gitter](https://badges.gitter.im/validatorjs/community.svg)](https://gitter.im/validatorjs/community)\nA library of string validators and sanitizers.\n",
        "date": "14.03.2021 15:33:52",
        "repo": "validatorjs/validator.js",
        "type": "chore",
        "chatgpt_zeroshot": "Add Gitter badge to README.md"
    },
    {
        "msg": "chore: update pull_request_template.md",
        "diff": "diff --git a/.github/pull_request_template.md b/.github/pull_request_template.md @@ -3,7 +3,7 @@ Add a descriptive title textbox above, e.g.\nfeat(validatorName): brief title of what has been done\n-->\n-{{ briefly describe what you have done in this PR }}\n+<!--- briefly describe what you have done in this PR --->\n## Checklist\n",
        "date": "19.07.2021 08:55:37",
        "repo": "validatorjs/validator.js",
        "type": "chore",
        "chatgpt_zeroshot": "Refactor pull request template to include descriptive comment."
    },
    {
        "msg": "chore(maintainers): update list of maintainers",
        "diff": "diff --git a/README.md b/README.md @@ -227,6 +227,8 @@ $ npm test\n- [chriso](https://github.com/chriso) - **Chris O'Hara** (author)\n- [profnandaa](https://github.com/profnandaa) - **Anthony Nandaa**\n+- [ezkemboi](https://github.com/ezkemboi) - **Ezrqn Kemboi**\n+- [tux-tn](https://github.com/tux-tn) - **Sarhan Aissi**\n## Reading\n",
        "date": "17.02.2022 09:02:32",
        "repo": "validatorjs/validator.js",
        "type": "chore",
        "chatgpt_zeroshot": "Add new contributors Ezrqn Kemboi and Sarhan Aissi"
    },
    {
        "msg": "chore: add note about providing a reference in PR template\ncloses",
        "diff": "diff --git a/.github/pull_request_template.md b/.github/pull_request_template.md @@ -5,8 +5,11 @@ feat(validatorName): brief title of what has been done\n<!--- briefly describe what you have done in this PR --->\n+<!--- provide some (credible) references showing the structure of the data to be validated, if applicable --->\n+\n## Checklist\n- [ ] PR contains only changes related; no stray files, etc.\n- [ ] README updated (where applicable)\n- [ ] Tests written (where applicable)\n+- [ ] References provided in PR (where applicable)\n",
        "date": "08.02.2023 06:57:58",
        "repo": "validatorjs/validator.js",
        "type": "chore",
        "chatgpt_zeroshot": "Add references to data structure in pull request template"
    },
    {
        "msg": "chore: Add wait type def",
        "diff": "diff --git a/index.d.ts b/index.d.ts @@ -18,6 +18,7 @@ declare class Rollbar {\npublic warning(...args: Rollbar.LogArgument[]): Rollbar.LogResult;\npublic error(...args: Rollbar.LogArgument[]): Rollbar.LogResult;\npublic critical(...args: Rollbar.LogArgument[]): Rollbar.LogResult;\n+ public wait(callback: () => void): void;\npublic captureEvent(metadata: object, level: Rollbar.Level): Rollbar.TelemetryEvent;\n",
        "date": "08.03.2019 08:48:32",
        "repo": "rollbar/rollbar.js",
        "type": "chore",
        "chatgpt_zeroshot": "Add wait method to Rollbar class"
    },
    {
        "msg": "chore: don't show perf warnings for test scripts",
        "diff": "diff --git a/karma.conf.js b/karma.conf.js @@ -70,6 +70,7 @@ module.exports = function (config) {\nwebpack: {\nplugins: [defaultsPlugin],\ndevtool: 'inline-source-map',\n+ performance: { hints: false },\nmodule: {\nrules: [\n{\n",
        "date": "09.08.2019 15:57:59",
        "repo": "rollbar/rollbar.js",
        "type": "chore",
        "chatgpt_zeroshot": "Disable performance hints in webpack configuration"
    },
    {
        "msg": "chore(webpack_config): add some comments to webpack.isomorphic.js\nadd some comments to webpack.isomorphic.js",
        "diff": "diff --git a/webpack_config/webpack.isomorphic.js b/webpack_config/webpack.isomorphic.js +/**\n+ * @file\n+ */\nimport path from 'path'\nimport config from './config'\nimport webpack from 'webpack'\n-import I18nPlugin from 'i18n-webpack-plugin'\nimport CircularDependencyPlugin from 'circular-dependency-plugin'\n-const {\n- srcPath,\n- rootPath,\n- srcCommonPath,\n- APP_LANGUAGE,\n- BASE_API,\n- NODE_ENV,\n- i18n\n-} = config\n+const {srcPath, rootPath, srcCommonPath, BASE_API, NODE_ENV} = config\nconst definePluginArgs = {\n- 'process.env.APP_LANGUAGE': JSON.stringify(APP_LANGUAGE),\n'process.env.NODE_ENV': JSON.stringify(NODE_ENV),\n'process.env.BASE_API': JSON.stringify(BASE_API)\n}\n-const languageTranslation = (function () {\n- const isTranslationExists = i18n.hasOwnProperty(APP_LANGUAGE)\n- if (isTranslationExists) {\n- return i18n[APP_LANGUAGE]\n- } else {\n- throw new Error(\n- `Something went wrong with your i18n. Check that \"${APP_LANGUAGE}\" property exists in i18n object.`\n- )\n- }\n-})()\n-\nexport default {\nresolve: {\n// Aliases that both server and client use\n@@ -77,12 +59,8 @@ export default {\nbanner: config.banner\n}),\nnew CircularDependencyPlugin({\n- // exclude detection of files based on a RegExp\nexclude: /node_modules/\n- // add errors to webpack instead of warnings\n- // failOnError: true\n}),\n- new I18nPlugin(languageTranslation, {functionName: 'i18n'}),\nnew webpack.DefinePlugin(definePluginArgs)\n]\n}\n",
        "date": "23.08.2017 18:26:59",
        "repo": "metnew/suicrux",
        "type": "chore",
        "chatgpt_zeroshot": "Refactor webpack configuration and remove i18n plugin usage"
    },
    {
        "msg": "chore: add codesponsor badge\nchore: add codesponsor badge",
        "diff": "diff --git a/README.md b/README.md ### Demo: [reatty.now.sh](https://reatty.now.sh/auth)\n<div>\n+<a href=\"https://app.codesponsor.io/link/cFthevq5iGu9WkCHS316WqmS/Metnew/react-semantic.ui-starter\" rel=\"nofollow\"><img src=\"https://app.codesponsor.io/embed/cFthevq5iGu9WkCHS316WqmS/Metnew/react-semantic.ui-starter.svg\" style=\"width: 888px; height: 68px;\" alt=\"Sponsor\" /></a>\n[![Build Status](https://travis-ci.org/Metnew/react-semantic.ui-starter.svg?branch=master)](https://travis-ci.org/Metnew/react-semantic.ui-starter)\n[![Join the chat at https://gitter.im/react-semantic-ui-starter/Lobby](https://badges.gitter.im/react-semantic-ui-starter/Lobby.svg)](https://gitter.im/react-semantic-ui-starter/Lobby?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n",
        "date": "03.09.2017 00:36:08",
        "repo": "metnew/suicrux",
        "type": "chore",
        "chatgpt_zeroshot": "Add sponsor link to README.md"
    },
    {
        "msg": "chore(UserItem): remove console.log's\nchore(UserItem): remove console.log's",
        "diff": "diff --git a/src/common/containers/UserItem/index.jsx b/src/common/containers/UserItem/index.jsx @@ -36,7 +36,6 @@ class UserItem extends Component {\nrender () {\nconst {user, isLoaded} = this.props\n- console.log(user, isLoaded)\nreturn (\n<div>\n<Helmet>\n@@ -54,11 +53,9 @@ class UserItem extends Component {\nfunction mapStateToProps (state: GlobalState, props) {\nconst users = getEntitiesUsersState(state)\n- console.log(state)\nconst userId: string = props.match.params.id\nconst {entities, isLoaded, isLoading} = users\nconst user = entities ? entities[userId] : {}\n- console.log(entities, userId)\nreturn {\nuser,\nuserId,\n",
        "date": "04.09.2017 18:42:18",
        "repo": "metnew/suicrux",
        "type": "chore",
        "chatgpt_zeroshot": "Remove console.log statements from UserItem component"
    },
    {
        "msg": "chore(manifest.json): fix project's name\nchore(manifest.json): fix project's name",
        "diff": "diff --git a/webpack_config/assets/manifest.json b/webpack_config/assets/manifest.json {\n- \"name\": \"React-Semantic.UI-Starter\",\n- \"short_name\": \"RSUIS\",\n- \"description\": \"https://github.com/Metnew/react-semantic.ui-starter\",\n+ \"name\": \"Noir\",\n+ \"short_name\": \"Noir\",\n+ \"description\": \"https://github.com/Metnew/noir\",\n\"icons\": [\n{\n\"src\": \"favicons/android-chrome-36x36.png\",\n",
        "date": "06.09.2017 12:17:26",
        "repo": "metnew/suicrux",
        "type": "chore",
        "chatgpt_zeroshot": "Update project name and description in manifest.json"
    },
    {
        "msg": "chore(reducers/users): remove console.log\nchore(reducers/users): remove console.log",
        "diff": "diff --git a/src/common/reducers/users/index.js b/src/common/reducers/users/index.js @@ -55,7 +55,6 @@ export function users (state: State = initialState, action: Action): State {\n// result may be an object, if it was request with params\n// `normalizeArrayOfItems` works only with arrays!\nconst {count, entities} = normalizeArrayOfItems([action.payload])\n- console.log(entities)\nreturn {\n...state,\nisLoaded: true,\n",
        "date": "06.09.2017 12:19:28",
        "repo": "metnew/suicrux",
        "type": "chore",
        "chatgpt_zeroshot": "Remove console.log statement from users reducer"
    },
    {
        "msg": "chore(xhr_wrapper): add comment\nchore(xhr_wrapper): add comment",
        "diff": "diff --git a/src/common/api/utils/xhr_wrapper.js b/src/common/api/utils/xhr_wrapper.js @@ -53,6 +53,7 @@ const requestWrapper = (\n*/\nasync function parseJSON (res: Response): Object {\nlet json: Object\n+ // status response field in return object\ntry {\njson = await res.json()\n} catch (e) {\n",
        "date": "06.09.2017 12:19:47",
        "repo": "metnew/suicrux",
        "type": "chore",
        "chatgpt_zeroshot": "Add status response field in return object in parseJSON function"
    },
    {
        "msg": "chore(configure_app): eslint fixes\nchore(configure_app): eslint fixes",
        "diff": "diff --git a/src/common/app/configure_app.js b/src/common/app/configure_app.js @@ -4,10 +4,10 @@ import thunk from 'redux-thunk'\nimport {autoRehydrate} from 'redux-persist'\nimport {createStore, applyMiddleware, compose} from 'redux'\nimport {routerMiddleware} from 'react-router-redux'\n-// Application\n+// // Application\nimport rootReducer from 'reducers'\n-import {routes, history} from 'routing'\n-\n+import {history, routes} from 'routing'\n+//\n/**\n* Configure application store with middlewares.\n* @param {Object} initialState - preloadedState\n@@ -18,7 +18,7 @@ const configureStore = (initialState: Object) => {\nconst middlewares = [thunk, routerMiddleware(history)]\nconst appliedMiddlewares = middlewares.map(a => applyMiddleware(a))\nconst enhancers = [rehydrate].concat(appliedMiddlewares)\n- //\n+\nconst getComposeFunc = () => {\nif (process.env.NODE_ENV === 'development') {\nconst {composeWithDevTools} = require('redux-devtools-extension')\n",
        "date": "09.09.2017 18:02:53",
        "repo": "metnew/suicrux",
        "type": "chore",
        "chatgpt_zeroshot": "Fix import order in configure_app.js"
    },
    {
        "msg": "chore(middlewares/auth): use absolute import\nchore(middlewares/auth): use absolute import",
        "diff": "diff --git a/src/server/middlewares/auth.js b/src/server/middlewares/auth.js */\nimport chalk from 'chalk'\nimport jwt from 'jsonwebtoken'\n-import {JWT_TOKEN} from 'api/LocalStorageCookiesSvc'\n+import {JWT_TOKEN} from 'common/api/LocalStorageCookiesSvc'\n/**\n* Auth-related middleware.\n* Checks that user is logged in and token is valid\n@@ -12,18 +12,18 @@ import {JWT_TOKEN} from 'api/LocalStorageCookiesSvc'\n* @param {Function} next\n*/\nexport default (req: Object, res: Object, next: () => void) => {\n- const {JWT_SECRET} = process.env\nreq.user = {\ntoken: null,\nisLoggedIn: false\n}\n+\nconst token: string = req.cookies[JWT_TOKEN]\nif (!token) {\nreturn next()\n}\nconsole.log(chalk.blue('USER HAS TOKEN'))\n- jwt.verify(token, JWT_SECRET, (err, decoded) => {\n+ jwt.verify(token, process.env.JWT_SECRET, (err, decoded) => {\nif (err) {\nconsole.log(chalk.red('CANT DECODE JWT TOKEN!', err))\n} else {\n",
        "date": "09.09.2017 23:58:22",
        "repo": "metnew/suicrux",
        "type": "chore",
        "chatgpt_zeroshot": "Refactor auth middleware to use JWT_SECRET from process.env"
    },
    {
        "msg": "chore(webpack_config/config): remove i18n from webpack config\nchore(webpack_config/config): remove i18n from webpack config",
        "diff": "diff --git a/webpack_config/config.js b/webpack_config/config.js */\nimport path from 'path'\n-import i18n from '../locals'\nimport manifest from '../static/manifest'\nlet {\n@@ -38,7 +37,6 @@ export default {\ntitle: 'Noir',\npublicPath: '/',\n// i18n object\n- i18n,\nisProduction,\n// Env vars\nBASE_API,\n",
        "date": "10.09.2017 17:25:23",
        "repo": "metnew/suicrux",
        "type": "chore",
        "chatgpt_zeroshot": "Remove i18n and manifest imports from webpack config"
    },
    {
        "msg": "chore(RouteAuth): comment tests\nchore(RouteAuth): comment tests",
        "diff": "diff --git a/src/common/components/addons/RouteAuth/index.test.jsx b/src/common/components/addons/RouteAuth/index.test.jsx @@ -13,25 +13,25 @@ const accessExceptInbox = path => {\nconst sampleRouteItem = routing.filter(a => a.component && a.tag)[0]\n-describe('RouteAuth component', () => {\n- // it('creates <Redirect /> if user dont have access', done => {\n- // const gotRedirect = {\n- // ...sampleRouteItem,\n- // canAccess: accessExceptInbox,\n- // path: '/inbox'\n- // }\n- // const component = shallow(<RouteAuth {...gotRedirect} />)\n- // done()\n- // })\n- //\n- // it('creates component if user have access', done => {\n- // const gotComponent = {\n- // ...sampleRouteItem,\n- // canAccess: accessToInboxOnly,\n- // path: '/inbox'\n- // }\n- // const component = shallow(<RouteAuth {...gotComponent} />)\n- // console.log(component)\n- // done()\n- // })\n+xdescribe('RouteAuth component', () => {\n+ it('creates <Redirect /> if user dont have access', done => {\n+ const gotRedirect = {\n+ ...sampleRouteItem,\n+ canAccess: accessExceptInbox,\n+ path: '/inbox'\n+ }\n+ const component = shallow(<RouteAuth {...gotRedirect} />)\n+ done()\n+ })\n+\n+ it('creates component if user have access', done => {\n+ const gotComponent = {\n+ ...sampleRouteItem,\n+ canAccess: accessToInboxOnly,\n+ path: '/inbox'\n+ }\n+ const component = shallow(<RouteAuth {...gotComponent} />)\n+ console.log(component)\n+ done()\n+ })\n})\n",
        "date": "10.09.2017 21:18:00",
        "repo": "metnew/suicrux",
        "type": "chore",
        "chatgpt_zeroshot": "Refactor RouteAuth component tests to include access control scenarios"
    },
    {
        "msg": "chore(xhr_wrapper): comment console.logs",
        "diff": "diff --git a/src/common/api/utils/xhr_wrapper.js b/src/common/api/utils/xhr_wrapper.js @@ -130,9 +130,9 @@ function decorateRequest ({method, url, data, options, cb}): Object {\n)\nif (!isRequestToExternalResource) {\n- console.log(`Request ${url} was sent to our domain`, request)\n+ // console.log(`Request ${url} was sent to our domain`, request)\n} else {\n- console.log(`Request ${url} was sent to external domain`, request)\n+ // console.log(`Request ${url} was sent to external domain`, request)\n}\nreturn {\n",
        "date": "10.09.2017 21:18:13",
        "repo": "metnew/suicrux",
        "type": "chore",
        "chatgpt_zeroshot": "Comment out console logs in xhr_wrapper.js"
    },
    {
        "msg": "chore(api/AuthSvc): add language as optional field\nchore(api/AuthSvc): add language as optional field",
        "diff": "diff --git a/src/common/api/AuthSvc/index.js b/src/common/api/AuthSvc/index.js @@ -3,7 +3,8 @@ import {post} from 'api/utils'\nexport type LoginDataType = {\nusername: string,\n- password: string\n+ password: string,\n+ language?: string\n}\nexport async function loginAPI (data: LoginDataType) {\n",
        "date": "12.09.2017 00:55:01",
        "repo": "metnew/suicrux",
        "type": "chore",
        "chatgpt_zeroshot": "Add optional language field to LoginDataType in AuthSvc"
    },
    {
        "msg": "chore(server): add useful comment about \"pseudossl\"\nchore(server): add useful comment about \"pseudossl\"",
        "diff": "diff --git a/src/server/config/index.dev.js b/src/server/config/index.dev.js import path from 'path'\nimport {readFileSync} from 'fs'\n+// If you want quick SSL for prototyping:\n+// import pseudossl from 'pseudossl'\nexport const serverOptions = {\nkey: readFileSync(path.join(__dirname, './ssl/server.key')),\n",
        "date": "14.09.2017 01:04:23",
        "repo": "metnew/suicrux",
        "type": "chore",
        "chatgpt_zeroshot": "Add pseudossl import for quick SSL prototyping in development config"
    },
    {
        "msg": "chore(webpack_config): add comment for CLIENT_DIST_PATH\nchore(webpack_config): add comment for CLIENT_DIST_PATH",
        "diff": "diff --git a/webpack_config/config.js b/webpack_config/config.js @@ -26,7 +26,7 @@ const srcPath = path.join(rootPath, './src') // = \"/src\"\nconst srcCommonPath = path.join(srcPath, './common') // = \"/src/common\"\n// Vars for server only\n-const CLIENT_DIST_PATH = path.join(distPath, './client')\n+const CLIENT_DIST_PATH = path.join(distPath, './client') // = \"/dist/client\"\nJWT_SECRET = JWT_SECRET || 'secret'\nPORT = PORT || 3000\n",
        "date": "14.09.2017 01:08:01",
        "repo": "metnew/suicrux",
        "type": "chore",
        "chatgpt_zeroshot": "Update CLIENT_DIST_PATH in webpack config to include full path information"
    },
    {
        "msg": "chore(package.json): remove dev:exp command\nchore(package.json): remove dev:exp command",
        "diff": "diff --git a/package.json b/package.json \"scripts\": {\n\"build\": \"npm run frontend_build && npm run server_build\",\n\"dev\": \"NODE_ENV=development babel-node ./src/server/index.dev\",\n- \"dev:exp\": \"NODE_ENV=development babel-node -- --expose-http2 ./src/server/index.dev\",\n\"server_build\": \"NODE_ENV=production webpack --config webpack_config/server/webpack.prod.babel.js\",\n\"frontend_build\": \"NODE_ENV=production webpack --config webpack_config/client/webpack.prod.babel.js\",\n\"test\": \"NODE_ENV=test jest --config=jest_config/jest.config.json --coverage --forceExit || true\",\n",
        "date": "14.09.2017 01:10:28",
        "repo": "metnew/suicrux",
        "type": "chore",
        "chatgpt_zeroshot": "Remove dev:exp script from package.json"
    },
    {
        "msg": "chore(api/AuthSvc): remove language from loginData flow type\nchore(api/AuthSvc): remove language from loginData flow type",
        "diff": "diff --git a/src/common/api/AuthSvc/index.js b/src/common/api/AuthSvc/index.js @@ -3,8 +3,7 @@ import {post} from 'api/utils'\nexport type LoginDataType = {\nusername: string,\n- password: string,\n- language?: string\n+ password: string\n}\nexport async function loginAPI (data: LoginDataType) {\n",
        "date": "17.09.2017 14:26:55",
        "repo": "metnew/suicrux",
        "type": "chore",
        "chatgpt_zeroshot": "Remove optional language field from LoginDataType in AuthSvc index.js"
    },
    {
        "msg": "chore(RoutingWrapper): remove stage-0 syntax, fix types import path\nchore(RoutingWrapper): remove stage-0 syntax, fix types import path",
        "diff": "diff --git a/src/common/components/addons/RoutingWrapper/index.jsx b/src/common/components/addons/RoutingWrapper/index.jsx @@ -5,7 +5,7 @@ import React, {Component} from 'react'\nimport {Switch, Redirect} from 'react-router-dom'\nimport LazyLoad from 'components/addons/LazyLoad'\nimport {getAuthState} from 'selectors'\n-import type {RouteItem} from 'routing'\n+import type {RouteItem} from 'types'\ntype Props = {\nroutes: RouteItem[],\n@@ -52,7 +52,7 @@ export default class RoutingWrapper extends Component {\nconst {path, exact, strict, component, lazy} = a\n// can visitor access this route?\n// this function determinates is user allowed to visit route\n- const canAccess = ::this.authCheck\n+ const canAccess = this.authCheck.bind(this)\n// select only props that we need\nconst b = {path, exact, strict, canAccess}\n",
        "date": "17.09.2017 14:28:32",
        "repo": "metnew/suicrux",
        "type": "chore",
        "chatgpt_zeroshot": "Refactor import statement and binding in RoutingWrapper component"
    },
    {
        "msg": "chore(styles/global): remove useless comment\nchore(styles/global): remove useless comment",
        "diff": "diff --git a/src/common/styles/global.jsx b/src/common/styles/global.jsx @@ -5,10 +5,6 @@ injectGlobal`\nbox-sizing: border-box;\n}\n- /* After one of the latest releases Semantic styles scrollbars!\n- * It's important to remember this info, when you work on custom scrollbar\n- */\n-\n${'' /* body ::-webkit-scrollbar {\nwidth: 0;\n}\n",
        "date": "17.09.2017 14:31:08",
        "repo": "metnew/suicrux",
        "type": "chore",
        "chatgpt_zeroshot": "Remove unnecessary comments about Semantic styles scrollbars"
    },
    {
        "msg": "chore(types): use React$Node instead of Node\nchore(types): use React$Node instead of Node",
        "diff": "diff --git a/src/common/types/index.js b/src/common/types/index.js // @flow\n-import type {Node} from 'react'\nexport type PostItem = {\ntitle: string,\nbody: string,\n@@ -40,6 +39,6 @@ export type RouteItem = {\nicon?: string,\nname?: string,\nsidebarVisible?: boolean,\n- tag?: Node | Function,\n- component?: Node | Function\n+ tag?: React$Node | Function,\n+ component?: React$Node | Function\n}\n",
        "date": "17.09.2017 14:31:33",
        "repo": "metnew/suicrux",
        "type": "chore",
        "chatgpt_zeroshot": "Update type definitions in index.js to use React$Node instead of Node."
    },
    {
        "msg": "chore(styles/theme): random color theme\nchore(styles/theme): random color theme",
        "diff": "diff --git a/src/common/styles/theme.jsx b/src/common/styles/theme.jsx * {@link https://www.materialpalette.com/}\n*/\nexport default {\n- primaryColorDark: '#00796B',\n- primaryColor: '#009688',\n- primaryColorLight: '#B2DFDB',\n+ primaryColorDark: '#0e1319',\n+ primaryColor: '#1b1e2f',\n+ primaryColorLight: '#303747',\nprimaryColorText: '#F7F7F7',\n- accentColor: '#00BCD4',\n+ accentColor: '#e2c7c0',\nprimaryTextColor: '#212121',\nsecondaryTextColor: '#757575',\ndividerColor: '#BDBDBD'\n",
        "date": "17.09.2017 14:50:28",
        "repo": "metnew/suicrux",
        "type": "chore",
        "chatgpt_zeroshot": "Update primary and accent colors in theme styling"
    },
    {
        "msg": "chore(Footer): use light color for footer\nchore(Footer): use light color for footer",
        "diff": "diff --git a/src/common/components/parts/Footer/style.jsx b/src/common/components/parts/Footer/style.jsx @@ -5,7 +5,7 @@ export const StyledFooter = styled.footer`\nwidth: 100%;\ndisplay: flex;\nalign-items: center;\n- background-color: ${props => props.theme.primaryColor};\n+ background-color: ${props => props.theme.primaryColorLight};\ncolor: ${props => props.theme.primaryTextColor};\nheight: 90px;\nbox-shadow: inset 0 0 0 0 ${props => props.theme.primaryColorDark},\n",
        "date": "17.09.2017 15:07:40",
        "repo": "metnew/suicrux",
        "type": "chore",
        "chatgpt_zeroshot": "Change background color in Footer component to primaryColorLight"
    },
    {
        "msg": "chore(package.json): remove unused optional deps\nchore(package.json): remove unused optional deps",
        "diff": "diff --git a/package.json b/package.json \"optionalDependencies\": {\n\"babili-webpack-plugin\": \"^0.1.2\",\n\"git-rev-sync\": \"^1.9.1\",\n- \"locale\": \"^0.1.0\",\n\"prepack-webpack-plugin\": \"^1.1.0\",\n- \"purify-css\": \"^1.2.5\",\n- \"purifycss-webpack\": \"^0.7.0\",\n- \"webpack-shell-plugin\": \"^0.5.0\",\n- \"preact\": \"^8.2.5\",\n- \"preact-compat\": \"^3.17.0\"\n+ \"webpack-shell-plugin\": \"^0.5.0\"\n},\n\"scripts\": {\n\"build\": \"npm run frontend_build && npm run server_build\",\n",
        "date": "17.09.2017 21:43:27",
        "repo": "metnew/suicrux",
        "type": "chore",
        "chatgpt_zeroshot": "Remove unused dependencies and update webpack-shell-plugin version in package.json"
    },
    {
        "msg": "chore(webpack_config): add comment about Preact\nchore(webpack_config): add comment about Preact",
        "diff": "diff --git a/webpack_config/client/webpack.base.js b/webpack_config/client/webpack.base.js @@ -51,10 +51,11 @@ const baseBuild = {\nresolve: {\nalias: {\n...isomorphicWebpackConfig.resolve.alias\n+ // NOTE: Preact + preact-compat can save you 148Kb parsed or 14kb gzipped\n+ // Preact may breaks your React app, starter by default doesn't aim to support Preact\n// react: 'preact-compat',\n// 'react-dom': 'preact-compat',\n- // 'preact-compat': 'preact-compat/dist/preact-compat',\n- // 'react-redux': 'preact-redux'\n+ // 'preact-compat': 'preact-compat/dist/preact-compat'\n},\nmodules: isomorphicWebpackConfig.resolve.modules,\nextensions: isomorphicWebpackConfig.resolve.extensions.concat([\n",
        "date": "17.09.2017 21:44:12",
        "repo": "metnew/suicrux",
        "type": "chore",
        "chatgpt_zeroshot": "Add Preact and preact-compat alias to resolve in webpack config"
    },
    {
        "msg": "chore(.eslintrc): formatting\nchore(.eslintrc): formatting",
        "diff": "diff --git a/.eslintrc.json b/.eslintrc.json \"modules\": true\n}\n},\n+ \"globals\": {\n+ \"i18n\": true,\n+ \"Raven\": true,\n+ \"ga\": true\n+ },\n\"env\": {\n\"browser\": true,\n\"amd\": true,\n\"no-tabs\": 0,\n\"no-unused-vars\": 1,\n\"indent\": [2, \"tab\"]\n- },\n- \"globals\": {\n- \"i18n\": true,\n- \"Raven\": true,\n- \"ga\": true\n}\n}\n",
        "date": "19.09.2017 17:40:42",
        "repo": "metnew/suicrux",
        "type": "chore",
        "chatgpt_zeroshot": "Add global variables i18n, Raven, and ga to .eslintrc.json"
    },
    {
        "msg": "chore(Sidebar): some comments\nchore(Sidebar): some comments",
        "diff": "diff --git a/src/common/components/parts/Sidebar/index.jsx b/src/common/components/parts/Sidebar/index.jsx @@ -19,7 +19,7 @@ type Props = {\nisMobile: boolean\n}\n-export default class SidebarComponent extends Component {\n+class SidebarComponent extends Component {\nprops: Props\nrender () {\n@@ -36,14 +36,14 @@ export default class SidebarComponent extends Component {\nconst routes = routing.map((route, i) => {\nconst {external, path, icon, name, strict, exact} = route\n- // Props that are applicable for both \"plain link, i.e. <a>\" and \"RR Link\"\n+ // Props that are common for both \"<a>\" and \"RR Link\"\nconst basicProps = {\nas: external ? 'a' : NavLink,\nlink: true,\n[external ? 'href' : 'to']: path\n}\n- // Is it's RR Link, then it has more props\n+ // Is it's RR Link, then it needs additional props\nconst externalProps = external\n? {}\n: {\n@@ -85,3 +85,5 @@ export default class SidebarComponent extends Component {\n)\n}\n}\n+\n+export default SidebarComponent\n",
        "date": "28.09.2017 19:27:33",
        "repo": "metnew/suicrux",
        "type": "chore",
        "chatgpt_zeroshot": "Refactor SidebarComponent to remove duplicate export statement"
    },
    {
        "msg": "chore(App): add flow types\nchore(App): add flow types",
        "diff": "diff --git a/src/common/containers/App/index.jsx b/src/common/containers/App/index.jsx @@ -67,7 +67,7 @@ class App extends Component {\n* Checks that user is still allowed to visit path after props changed\n* @param {Object} nextProps\n*/\n- componentWillReceiveProps (nextProps) {\n+ componentWillReceiveProps (nextProps: Props) {\nthis.checkAppAuthLogic(nextProps.isLoggedIn)\n}\n@@ -84,8 +84,7 @@ class App extends Component {\n// script.src = 'https://cdn.ravenjs.com/3.16.1/raven.min.js'\n// document.body.appendChild(script)\n// }\n- //\n- // NOTE: uncomment if you use Google Analytics\n+\nif (process.env.GA_ID) {\nReactGA.initialize(process.env.GA_ID)\n}\n",
        "date": "28.09.2017 19:28:03",
        "repo": "metnew/suicrux",
        "type": "chore",
        "chatgpt_zeroshot": "Refactor componentWillReceiveProps method and remove unnecessary comments"
    },
    {
        "msg": "chore(UserItemComponent): fix text\nchore(UserItemComponent): fix text",
        "diff": "diff --git a/src/common/containers/Users/components/UsersItemComponent.jsx b/src/common/containers/Users/components/UsersItemComponent.jsx @@ -13,7 +13,7 @@ const UsersItemComponent = ({user}: Props) => {\nconst {name, username, address, email, website, phone, id} = user\nreturn (\n<StyledUserItem as={Link} to={`/users/${id}`}>\n- <Statistic floated=\"left\" value={id} label={'User ID'} />\n+ <Statistic floated=\"left\" value={id} label={'User'} />\n<Item.Content>\n<Item.Header>\n{`${name} \"${username}\"`}\n",
        "date": "28.09.2017 19:29:04",
        "repo": "metnew/suicrux",
        "type": "chore",
        "chatgpt_zeroshot": "Update label for User ID in UsersItemComponent"
    },
    {
        "msg": "chore(package.json): update deps, install react 16\nchore(package.json): update deps, install react 16",
        "diff": "diff --git a/package.json b/package.json \"description\": \"Advanced universal React starter built with a scale in mind.\",\n\"dependencies\": {\n\"awral\": \"^1.1.2\",\n- \"body-parser\": \"^1.18.1\",\n+ \"body-parser\": \"^1.18.2\",\n\"chalk\": \"^2.1.0\",\n- \"compression\": \"^1.7.0\",\n+ \"compression\": \"^1.7.1\",\n\"cookie-parser\": \"^1.4.3\",\n- \"express\": \"^4.15.4\",\n+ \"express\": \"^4.15.5\",\n\"express-useragent\": \"^1.0.8\",\n\"glob\": \"^7.1.2\",\n- \"helmet\": \"^3.8.1\",\n+ \"helmet\": \"^3.8.2\",\n\"history\": \"^4.7.2\",\n+ \"immutable\": \"^3.8.1\",\n\"isomorphic-fetch\": \"^2.2.1\",\n\"js-cookie\": \"^2.1.4\",\n\"jsonwebtoken\": \"^8.0.1\",\n\"jwt-decode\": \"^2.2.0\",\n\"lodash\": \"^4.17.4\",\n- \"morgan\": \"^1.8.2\",\n+ \"morgan\": \"^1.9.0\",\n\"node-noop\": \"^1.0.0\",\n\"normalizr\": \"^3.2.3\",\n- \"offline-plugin\": \"^4.8.3\",\n+ \"offline-plugin\": \"^4.8.4\",\n\"promise-polyfill\": \"6.0.2\",\n- \"prop-types\": \"^15.5.10\",\n+ \"prop-types\": \"^15.6.0\",\n\"query-string\": \"^5.0.0\",\n\"rapscallion\": \"^2.1.13\",\n\"raven\": \"^2.1.2\",\n- \"react\": \"^15.6.1\",\n- \"react-dom\": \"^15.6.1\",\n- \"react-ga\": \"^2.2.0\",\n- \"react-headroom\": \"^2.1.6\",\n+ \"react\": \"^16.0.0\",\n+ \"react-dom\": \"^16.0.0\",\n+ \"react-ga\": \"2.2.0\",\n+ \"react-headroom\": \"^2.2.1\",\n\"react-helmet\": \"^5.2.0\",\n\"react-intl\": \"^2.4.0\",\n\"react-redux\": \"^5.0.6\",\n\"react-router-dom\": \"^4.2.2\",\n\"react-router-redux\": \"^5.0.0-alpha.6\",\n\"redux\": \"^3.7.2\",\n- \"redux-persist\": \"^4.9.1\",\n+ \"redux-persist\": \"^4.10.1\",\n\"redux-thunk\": \"^2.2.0\",\n\"reselect\": \"^3.0.1\",\n\"semantic-ui-css\": \"^2.2.12\",\n- \"semantic-ui-react\": \"^0.73.1\",\n+ \"semantic-ui-react\": \"^0.74.2\",\n\"serialize-javascript\": \"^1.4.0\",\n\"spdy\": \"^3.4.7\",\n- \"store2\": \"^2.5.5\",\n- \"styled-components\": \"^2.1.2\"\n+ \"store2\": \"^2.5.6\",\n+ \"styled-components\": \"^2.2.0\"\n},\n\"devDependencies\": {\n\"assets-webpack-plugin\": \"^3.5.1\",\n\"autoprefixer\": \"^7.1.4\",\n\"babel-cli\": \"^6.26.0\",\n\"babel-core\": \"^6.26.0\",\n- \"babel-eslint\": \"^8.0.0\",\n+ \"babel-eslint\": \"^8.0.1\",\n\"babel-loader\": \"^7.1.2\",\n\"babel-plugin-dynamic-import-node\": \"^1.1.0\",\n\"babel-plugin-lodash\": \"^3.2.11\",\n\"babel-preset-stage-1\": \"^6.24.1\",\n\"babel-register\": \"6.26.0\",\n\"babel-runtime\": \"^6.26.0\",\n- \"caniuse-lite\": \"^1.0.30000733\",\n+ \"caniuse-lite\": \"^1.0.30000739\",\n\"circular-dependency-plugin\": \"^4.2.1\",\n\"commitizen\": \"^2.9.6\",\n\"compression-webpack-plugin\": \"^1.0.0\",\n\"css-loader\": \"^0.28.7\",\n- \"enzyme\": \"^2.9.1\",\n- \"enzyme-to-json\": \"^2.0.0\",\n- \"eslint\": \"^4.7.1\",\n+ \"enzyme\": \"^3.0.0\",\n+ \"enzyme-to-json\": \"^3.0.1\",\n+ \"eslint\": \"^4.7.2\",\n\"eslint-config-standard\": \"^10.2.1\",\n\"eslint-loader\": \"^1.9.0\",\n\"eslint-plugin-babel\": \"^4.1.2\",\n- \"eslint-plugin-flowtype\": \"^2.35.1\",\n+ \"eslint-plugin-flowtype\": \"^2.36.0\",\n\"eslint-plugin-import\": \"^2.7.0\",\n\"eslint-plugin-jsx-a11y\": \"^6.0.2\",\n- \"eslint-plugin-node\": \"^5.1.1\",\n+ \"eslint-plugin-node\": \"^5.2.0\",\n\"eslint-plugin-promise\": \"^3.5.0\",\n- \"eslint-plugin-react\": \"^7.3.0\",\n+ \"eslint-plugin-react\": \"^7.4.0\",\n\"eslint-plugin-standard\": \"^3.0.1\",\n\"extract-text-webpack-plugin\": \"^3.0.0\",\n\"favicons-webpack-plugin\": \"0.0.7\",\n\"husky\": \"^0.14.3\",\n\"i18n-webpack-plugin\": \"^1.0.0\",\n\"img-loader\": \"^2.0.0\",\n- \"jest\": \"^21.1.0\",\n+ \"jest\": \"^21.2.1\",\n\"jest-styled-components\": \"^4.6.0\",\n- \"nock\": \"^9.0.18\",\n+ \"nock\": \"^9.0.22\",\n\"node-sass\": \"^4.5.3\",\n\"open\": \"0.0.5\",\n\"optimize-css-assets-webpack-plugin\": \"^3.2.0\",\n\"optimize-js-plugin\": \"0.0.4\",\n- \"postcss\": \"^6.0.11\",\n+ \"postcss\": \"^6.0.12\",\n\"postcss-browser-reporter\": \"^0.5.0\",\n\"postcss-cssnext\": \"^3.0.2\",\n\"postcss-import\": \"^11.0.0\",\n\"postcss-loader\": \"^2.0.6\",\n\"postcss-reporter\": \"^5.0.0\",\n+ \"pseudossl\": \"^1.0.1\",\n\"react-a11y\": \"^0.3.4\",\n\"react-addons-perf\": \"^15.4.2\",\n- \"react-addons-test-utils\": \"^15.6.0\",\n+ \"react-addons-test-utils\": \"^15.6.2\",\n\"react-hot-loader\": \"^3.0.0-beta.6\",\n\"redux-devtools-extension\": \"^2.13.2\",\n\"redux-mock-store\": \"^1.3.0\",\n\"webpack-hot-middleware\": \"^2.19.1\",\n\"webpack-manifest-plugin\": \"^1.3.2\",\n\"why-did-you-update\": \"^0.0.8\",\n- \"write-file-webpack-plugin\": \"^4.1.0\"\n+ \"write-file-webpack-plugin\": \"^4.2.0\"\n},\n\"optionalDependencies\": {\n\"babili-webpack-plugin\": \"^0.1.2\",\n",
        "date": "29.09.2017 20:52:27",
        "repo": "metnew/suicrux",
        "type": "chore",
        "chatgpt_zeroshot": "Update package dependencies versions."
    },
    {
        "msg": "chore(actions/utils): add comment about Awral\nchore(actions/utils): add comment about Awral",
        "diff": "diff --git a/src/common/actions/utils/index.js b/src/common/actions/utils/index.js @@ -12,5 +12,10 @@ import Awral from 'awral'\nconst check = (result: Object = {ok: false}): boolean => result.ok\nconst beforeCheck = a => a\nconst afterCheck = a => a.data\n-// Create default Awral\n+/**\n+ Create default Awral\n+ Awral is my own tool.\n+ It's not well known, but it can make your work with actions even more simpler.\n+ {@link https://github.com/Metnew/awral}\n+*/\nexport const awral = Awral.of({check, beforeCheck, afterCheck})\n",
        "date": "13.10.2017 16:52:31",
        "repo": "metnew/suicrux",
        "type": "chore",
        "chatgpt_zeroshot": "Add documentation for Awral in index.js"
    },
    {
        "msg": "chore(locals): fix locals\nchore(locals): fix locals",
        "diff": "diff --git a/locals/en.json b/locals/en.json \"Dashboard.h1\": \"Noir.\",\n\"Dashboard.h2-1\": \"Intro\",\n\"Dashboard.h2-2\": \"How it works?\",\n- \"Dashboard.h3-1\": \"Hello, this is Noir.\",\n- \"Dashboard.h3-2\": \"Hello, this is Noir.\",\n- \"Dashboard.p-1\": \"How it works?\",\n- \"Dashboard.p-2\": \"Hello, this is Noir.\"\n+ \"Dashboard.h3-1\": \"Noir.\",\n+ \"Dashboard.h3-2\": \"Noir.\",\n+ \"Dashboard.p-1\": \"In progress.\",\n+ \"Dashboard.p-2\": \"In progress.\"\n}\n",
        "date": "16.10.2017 17:15:32",
        "repo": "metnew/suicrux",
        "type": "chore",
        "chatgpt_zeroshot": "Update dashboard content in English localization."
    },
    {
        "msg": "chore(src/server): reset token if token is invalid\nchore(src/server): reset token if token is invalid",
        "diff": "diff --git a/src/server/middlewares/auth.js b/src/server/middlewares/auth.js @@ -24,7 +24,7 @@ export default (\nisLoggedIn: false\n}\n- const token: string = req.cookies[JWT_TOKEN]\n+ let token: string = req.cookies[JWT_TOKEN]\nif (!token) {\nreturn next()\n}\n@@ -33,16 +33,18 @@ export default (\njwt.verify(token, process.env.JWT_SECRET, (err, decoded) => {\nif (err) {\nconsole.log(chalk.red('CANT DECODE JWT TOKEN!', err))\n+ token = null\n} else {\n- console.log(chalk.magenta('TOKEN SUCCESSFULLY DECODED'))\n- // NOTE: set user language in jwt token that may helps handling i18n efficiently\nconst {username} = decoded\nreq.user = {\ntoken,\nusername,\nisLoggedIn: true\n}\n+ console.log(chalk.magenta('TOKEN SUCCESSFULLY DECODED'))\n+ // FIXME: set user language in jwt token\n}\n+\nconsole.log(\nchalk.yellow(`USER IS LOGGED IN: ${req.user.isLoggedIn ? 'YES' : 'NO'}`)\n)\n",
        "date": "16.10.2017 17:17:05",
        "repo": "metnew/suicrux",
        "type": "chore",
        "chatgpt_zeroshot": "Fix token decoding issue and update user language in jwt token"
    },
    {
        "msg": "chore(src/server/api): fix links.json file\nchore(src/server/api): fix links.json file",
        "diff": "diff --git a/src/server/api/links.json b/src/server/api/links.json \"Step by step guide with working example of server and client with hot-reloading and SSR with Webpack (in development).\"\n},\n{\n- \"link\": \"https://github.com/Metnew/noir\",\n+ \"link\": \"https://github.com/Metnew/react-semantic.ui-starter/tree/master/docs\",\n\"icon\": \"bug\",\n\"header\": \"Testing\",\n\"desc\": \"How to test actions, reducers, components?\"\n},\n{\n- \"link\": \"https://github.com/Metnew/noir\",\n+ \"link\": \"https://github.com/Metnew/react-semantic.ui-starter/tree/master/docs\",\n\"icon\": \"paint brush\",\n\"header\": \"Why semantic-ui-react?\",\n\"desc\": \"Notes about SUI. Why SUIR is a good (or bad) choise.\"\n},\n{\n- \"link\": \"\",\n+ \"link\": \"https://github.com/Metnew/react-semantic.ui-starter/tree/master/docs\",\n\"icon\": \"globe\",\n\"header\": \"How i18n works?\",\n\"desc\": \"How i18n is implemented and how to customize it.\"\n},\n{\n+ \"link\": \"https://github.com/Metnew/react-semantic.ui-starter/tree/master/docs\",\n\"header\": \"How Webpack is configured?\",\n\"icon\": \"code\",\n- \"link\": \"\",\n\"desc\":\n\"Webpack configuration for server/client in production and development.\"\n},\n{\n- \"link\": \"\",\n+ \"link\": \"https://github.com/Metnew/react-semantic.ui-starter/tree/master/docs\",\n\"icon\": \"terminal\",\n\"header\": \"npm scripts and ENV vars\",\n\"desc\": \"Docs about every npm script and ENV variable.\"\n},\n{\n- \"link\": \"\",\n+ \"link\": \"https://github.com/Metnew/react-semantic.ui-starter/tree/master/docs\",\n\"icon\": \"folder\",\n\"header\": \"Folder structure\",\n\"desc\": \"Why this folder structure and how to adapt it in own project.\"\n",
        "date": "16.10.2017 17:17:36",
        "repo": "metnew/suicrux",
        "type": "chore",
        "chatgpt_zeroshot": "Update links in API documentation and add new sections for testing, semantic-ui-react, i18n, Webpack configuration, npm scripts, and folder structure."
    },
    {
        "msg": "chore(src/common/routing): remove lazy-loading\nchore(src/common/routing): remove lazy-loading [REGRESSION]",
        "diff": "diff --git a/src/common/routing/routes.js b/src/common/routing/routes.js @@ -32,10 +32,11 @@ const routes: Array<RouteItem> = [\npath: '/links',\nname: 'Links',\nexact: true,\n+ // lazy: true,\nicon: 'bookmark',\nsidebarVisible: true,\ntag: RouteAuth,\n- component: Links\n+ component: Links// loadLazyComponentFnConstructor('Links')\n},\n{\nexternal: true,\n",
        "date": "16.10.2017 17:25:26",
        "repo": "metnew/suicrux",
        "type": "chore",
        "chatgpt_zeroshot": "Add lazy loading for Links component in routes configuration"
    },
    {
        "msg": "chore(package.json): update vresions\nchore(package.json): update vresions",
        "diff": "diff --git a/package.json b/package.json \"raven\": \"^2.1.2\",\n\"react\": \"^16.0.0\",\n\"react-dom\": \"^16.0.0\",\n- \"react-ga\": \"2.2.0\",\n+ \"react-ga\": \"2.3.5\",\n\"react-headroom\": \"^2.2.1\",\n\"react-helmet\": \"^5.2.0\",\n\"react-intl\": \"^2.4.0\",\n},\n\"devDependencies\": {\n\"assets-webpack-plugin\": \"^3.5.1\",\n- \"autodll-webpack-plugin\": \"^0.2.1\",\n+ \"autodll-webpack-plugin\": \"^0.3.2\",\n\"autoprefixer\": \"^7.1.4\",\n\"babel-cli\": \"^6.26.0\",\n\"babel-core\": \"^6.26.0\",\n\"eslint-plugin-standard\": \"^3.0.1\",\n\"extract-text-webpack-plugin\": \"^3.0.0\",\n\"favicons-webpack-plugin\": \"0.0.7\",\n- \"file-loader\": \"^0.11.2\",\n- \"flow-bin\": \"^0.55.0\",\n+ \"file-loader\": \"^1.1.5\",\n+ \"flow-bin\": \"^0.57.2\",\n\"friendly-errors-webpack-plugin\": \"^1.6.1\",\n\"html-webpack-plugin\": \"^2.30.1\",\n\"husky\": \"^0.14.3\",\n\"sass-loader\": \"^6.0.6\",\n\"serve\": \"^6.1.0\",\n\"standard-version\": \"^4.2.0\",\n- \"style-loader\": \"^0.18.2\",\n+ \"style-loader\": \"^0.19.0\",\n\"stylelint\": \"^8.1.1\",\n\"stylelint-config-standard\": \"^17.0.0\",\n\"uglify-js\": \"git://github.com/mishoo/UglifyJS2.git#harmony-v2.8.22\",\n- \"uglifyjs-webpack-plugin\": \"^0.4.6\",\n- \"url-loader\": \"^0.5.9\",\n+ \"uglifyjs-webpack-plugin\": \"^1.0.0-beta.3\",\n+ \"url-loader\": \"^0.6.2\",\n\"validate-commit-msg\": \"^2.14.0\",\n\"webpack\": \"^3.6.0\",\n\"webpack-assets-manifest\": \"^1.0.0\",\n",
        "date": "16.10.2017 17:26:46",
        "repo": "metnew/suicrux",
        "type": "chore",
        "chatgpt_zeroshot": "Update dependencies in package.json"
    },
    {
        "msg": "chore(actions/layout): add commented ADD_STYLES_TO_ELEMENT action\nchore(actions/layout): add commented ADD_STYLES_TO_ELEMENT action",
        "diff": "diff --git a/src/common/actions/layout/index.js b/src/common/actions/layout/index.js @@ -18,6 +18,13 @@ export const WINDOW_RESIZE = (innerWidth: number) => ({\n}\n})\n+// See reducers/layout for an additional info:\n+// export const ADD_STYLES_TO_ELEMENT = (element\n+// ) => (styles) => ({\n+// element,\n+// styles\n+// })\n+\nexport type UI_OPEN_SIDEBAR_TYPE = {type: 'UI_OPEN_SIDEBAR'}\nexport type UI_CLOSE_SIDEBAR_TYPE = {type: 'UI_CLOSE_SIDEBAR'}\nexport type UI_WINDOW_RESIZE_TYPE = {\n",
        "date": "16.10.2017 17:31:22",
        "repo": "metnew/suicrux",
        "type": "chore",
        "chatgpt_zeroshot": "Add ADD_STYLES_TO_ELEMENT action to layout actions"
    },
    {
        "msg": "chore(reducers/layout): add APPLY_STYLES handler\nchore(reducers/layout): add APPLY_STYLES handler",
        "diff": "diff --git a/src/common/reducers/layout/index.js b/src/common/reducers/layout/index.js @@ -60,6 +60,16 @@ export function layout (state: State = initialState, action: Action): State {\n...state,\nsidebarOpened: false\n}\n+ // See actions/layout for more info\n+ // case APPLY_STYLES:{\n+ // const {element, styles} = payload\n+ // return {\n+ // ...state,\n+ // styles: {\n+ // [element]: styles\n+ // }\n+ // }\n+ // }\ndefault:\nreturn state\n}\n",
        "date": "16.10.2017 17:32:10",
        "repo": "metnew/suicrux",
        "type": "chore",
        "chatgpt_zeroshot": "Add commented out code for applying styles in layout reducer"
    },
    {
        "msg": "chore(CHANGELOG): remove 0.1.1 version\nchore(CHANGELOG): remove 0.1.1 version",
        "diff": "diff --git a/CHANGELOG.md b/CHANGELOG.md All notable changes to this project will be documented in this file. See [standard-version](https://github.com/conventional-changelog/standard-version) for commit guidelines.\n-<a name=\"0.1.1\"></a>\n-## [0.1.1](https://github.com/Metnew/react-semantic.ui-starter/compare/v0.1.0...v0.1.1) (2017-10-16)\n-\n-\n-\n<a name=\"0.1.0\"></a>\n# [0.1.0](https://github.com/Metnew/react-semantic.ui-starter/compare/v0.1.0-alpha.0...v0.1.0) (2017-10-16)\n",
        "date": "16.10.2017 17:34:45",
        "repo": "metnew/suicrux",
        "type": "chore",
        "chatgpt_zeroshot": "Remove version 0.1.1 from CHANGELOG.md"
    },
    {
        "msg": "chore(actions/utils): update comment on Awral\nchore(actions/utils): update comment on Awral",
        "diff": "diff --git a/src/common/actions/utils/index.js b/src/common/actions/utils/index.js @@ -14,8 +14,10 @@ const beforeCheck = a => a\nconst afterCheck = a => a.data\n/**\nCreate default Awral\n- Awral is my own tool.\n- It's not well known, but it can make your work with actions even more simpler.\n+ Awral is not recommended for production usage now\n+ But it can make your work with actions even simpler.\n+ NOTE:I strongly recommend you check Awral sources!\n+ Awral is 880B gzipped!\n{@link https://github.com/Metnew/awral}\n*/\nexport const awral = Awral.of({check, beforeCheck, afterCheck})\n",
        "date": "16.10.2017 18:26:41",
        "repo": "metnew/suicrux",
        "type": "chore",
        "chatgpt_zeroshot": "Update Awral usage recommendation and add note to check Awral sources"
    },
    {
        "msg": "chore(components/RoutingWrapper): add more comments\nchore(components/RoutingWrapper): add more comments",
        "diff": "diff --git a/src/common/components/addons/RoutingWrapper/index.jsx b/src/common/components/addons/RoutingWrapper/index.jsx @@ -23,7 +23,9 @@ export default class RoutingWrapper extends Component {\n* Checks Auth logic. Is user allowed to visit certain path?\n* @param {String} path next path to visit\n* @return {Bool} is user allowed to visit next location?\n- * check RouteAuth component.\n+ * @desc Think about this method as static.\n+ * Maybe, It'd be even better to store this logic in a plain function rather than in a method.\n+ * {@link - src/common/components/addons/RouteAuth/index.jsx}\n*/\nauthCheck (path: string): boolean {\nconst {store} = this.props\n",
        "date": "18.10.2017 23:43:34",
        "repo": "metnew/suicrux",
        "type": "chore",
        "chatgpt_zeroshot": "Refactor authCheck method to be static and consider moving logic to a plain function. See src/common/components/addons/RouteAuth/index.jsx for more details."
    },
    {
        "msg": "chore: make Links route lazy\nchore: make Links route lazy",
        "diff": "diff --git a/src/common/routing/routes.js b/src/common/routing/routes.js import {Route} from 'react-router-dom'\nimport RouteAuth from 'components/addons/RouteAuth'\nimport Dashboard from 'containers/Dashboard'\n-import Links from 'containers/Links'\nimport Login from 'containers/Login'\nimport type {RouteItem} from 'types'\n@@ -32,11 +31,11 @@ const routes: Array<RouteItem> = [\npath: '/links',\nname: 'Links',\nexact: true,\n- // lazy: true,\n+ lazy: true,\nicon: 'bookmark',\nsidebarVisible: true,\ntag: RouteAuth,\n- component: Links// loadLazyComponentFnConstructor('Links')\n+ component: loadLazyComponentFnConstructor('Links')\n},\n{\nexternal: true,\n",
        "date": "19.10.2017 04:31:26",
        "repo": "metnew/suicrux",
        "type": "chore",
        "chatgpt_zeroshot": "\"Enable lazy loading for Links component in routes.js\""
    },
    {
        "msg": "chore(client): add comment\nchore(client): add comment",
        "diff": "diff --git a/src/client/index.jsx b/src/client/index.jsx @@ -22,7 +22,8 @@ import 'semantic-ui-css/components/reset.css'\nimport 'semantic-ui-css/components/sidebar.css'\nimport 'semantic-ui-css/components/site.css'\nimport 'semantic-ui-css/components/statistic.css'\n-// promise polyfill\n+// Polyfill for IE 11\n+// P.S: i don't know does starter works in IE 11\nimport 'promise-polyfill'\n// Application\nimport {hydrate} from 'react-dom'\n",
        "date": "19.10.2017 05:06:43",
        "repo": "metnew/suicrux",
        "type": "chore",
        "chatgpt_zeroshot": "Add polyfill for IE 11 and note about compatibility with starter in IE 11"
    }
]