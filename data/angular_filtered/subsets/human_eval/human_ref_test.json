[
    {
        "diff": "diff --git a/docs/lib/examples/ModalNested.js b/docs/lib/examples/ModalNested.js @@ -47,7 +47,7 @@ class ModalExample extends React.Component {\nLorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n<br />\n<Button color=\"success\" onClick={this.toggleNested}>Show Nested Model</Button>\n- <Modal isOpen={this.state.nestedModal} toggle={this.toggleNested} onClosed={this.state.closeAll && this.toggle}>\n+ <Modal isOpen={this.state.nestedModal} toggle={this.toggleNested} onClosed={this.state.closeAll ? this.toggle : undefined}>\n<ModalHeader>Nested Modal title</ModalHeader>\n<ModalBody>Stuff and things</ModalBody>\n<ModalFooter>\n",
        "human": "chore(Docs): fix nested modal onClose",
        "race": "Fix nested modal closeAll prop",
        "classified_rag": "docs(lib): update ModalNested.js with nested modal functionality",
        "type": "chore"
    },
    {
        "diff": "diff --git a/packages/veui-loader/src/index.js b/packages/veui-loader/src/index.js @@ -240,7 +240,7 @@ function getExtname (file) {\nreturn path.extname(file).replace(/\\./g, '').toLowerCase()\n}\n-const RE_SCRIPT = /<script(?:\\s[^>]*)?>/i\n+const RE_SCRIPT = /<script(?:\\s[^<>]*)?>/i\n/**\n* Patch file content according to a given type.\n",
        "human": "perf: improve regex perf",
        "race": "fix: script tag regex",
        "classified_rag": "fix: update regular expression pattern for script tag in file content parsing",
        "type": "perf"
    },
    {
        "diff": "diff --git a/src/common/actions/layout/index.js b/src/common/actions/layout/index.js @@ -18,6 +18,13 @@ export const WINDOW_RESIZE = (innerWidth: number) => ({\n}\n})\n+// See reducers/layout for an additional info:\n+// export const ADD_STYLES_TO_ELEMENT = (element\n+// ) => (styles) => ({\n+// element,\n+// styles\n+// })\n+\nexport type UI_OPEN_SIDEBAR_TYPE = {type: 'UI_OPEN_SIDEBAR'}\nexport type UI_CLOSE_SIDEBAR_TYPE = {type: 'UI_CLOSE_SIDEBAR'}\nexport type UI_WINDOW_RESIZE_TYPE = {\n",
        "human": "chore(actions/layout): add commented ADD_STYLES_TO_ELEMENT action\nchore(actions/layout): add commented ADD_STYLES_TO_ELEMENT action",
        "race": "Add a comment about adding styles to element reducers",
        "classified_rag": "feat(layout): add ADD_STYLES_TO_ELEMENT action creator",
        "type": "chore"
    },
    {
        "diff": "diff --git a/website/plugins/chakra-ui.js b/website/plugins/chakra-ui.js @@ -8,6 +8,7 @@ import {\nfePlay,\nfeExternalLink,\nfeGlobe,\n+ feGithub,\nfeMenu,\nfeLinkedin,\nfeSearch,\n@@ -49,7 +50,8 @@ Vue.use(Chakra.default, {\nfeEdit,\nfeSettings,\nfeTwitter,\n- feCoffee\n+ feCoffee,\n+ feGithub\n},\nextend: {\nstorybook: {\n",
        "human": "docs(home): use github icon on landing page",
        "race": "docs(chakra): add github to diff",
        "classified_rag": "feat(plugins): add feGithub icon to Chakra UI plugin",
        "type": "docs"
    },
    {
        "diff": "diff --git a/website/pages/docs/customization.md b/website/pages/docs/customization.md @@ -129,7 +129,7 @@ module.exports = {\noptions: {\npluginOptions, // the options passed to the plugin ({ name:'pluginname', options: { key: 'value'}})\nrazzleOptions, // the modified options passed to Razzle in the `options` key in `razzle.config.js` (options: { key: 'value'})\n- webpackOptions // the modified options that will be used to configure webpack/ webpack loaders and plugins\n+ webpackOptions // the modified options that was used to configure webpack/ webpack loaders and plugins\n},\npaths // the modified paths that will be used by Razzle.\n}) {\n",
        "human": "docs: was used",
        "race": "Fix typo in customization docs",
        "classified_rag": "docs: update webpackOptions description in customization.md",
        "type": "docs"
    },
    {
        "diff": "diff --git a/packages/chakra-ui-core/src/CControlBox/tests/CControlBox.test.js b/packages/chakra-ui-core/src/CControlBox/tests/CControlBox.test.js import { CVisuallyHidden, CControlBox, CBox } from '../..'\n-import { render, userEvent } from '@/tests/test-utils'\n+import { render, userEvent, screen } from '@/tests/test-utils'\nconst renderComponent = (props) => {\nconst inlineAttrs = (props && props.inlineAttrs) || ''\n@@ -43,9 +43,9 @@ it('should render correctly', () => {\n})\ntest('Uncontrolled radio - should be checked always', async () => {\n- const { getByTestId } = renderComponent({ type: 'radio' })\n- const control = getByTestId('control')\n- const hiddenControl = getByTestId('hiddenControl')\n+ renderComponent({ type: 'radio' })\n+ const control = screen.getByTestId('control')\n+ const hiddenControl = screen.getByTestId('hiddenControl')\n// click the first time, it's checked\nawait userEvent.click(control)\n@@ -57,9 +57,9 @@ test('Uncontrolled radio - should be checked always', async () => {\n})\ntest('Uncontrolled checkbox - should toggle', async () => {\n- const { getByTestId } = renderComponent({ type: 'checkbox' })\n- const control = getByTestId('control')\n- const hiddenControl = getByTestId('hiddenControl')\n+ renderComponent({ type: 'checkbox' })\n+ const control = screen.getByTestId('control')\n+ const hiddenControl = screen.getByTestId('hiddenControl')\n// click the first time, it's checked\nawait userEvent.click(control)\n@@ -72,9 +72,9 @@ test('Uncontrolled checkbox - should toggle', async () => {\ntest('controlled checkbox - v-model works', async () => {\nconst inlineAttrs = ':checked=\"checked\"'\n- const { getByTestId } = renderComponent({ inlineAttrs, type: 'checkbox', data: () => ({ checked: true }) })\n- const control = getByTestId('control')\n- const hiddenControl = getByTestId('hiddenControl')\n+ renderComponent({ inlineAttrs, type: 'checkbox', data: () => ({ checked: true }) })\n+ const control = screen.getByTestId('control')\n+ const hiddenControl = screen.getByTestId('hiddenControl')\n// click the first time, it's checked\nexpect(hiddenControl).toBeChecked()\n@@ -86,9 +86,9 @@ test('controlled checkbox - v-model works', async () => {\ntest('controlled radio - v-model works', async () => {\nconst inlineAttrs = ':checked=\"checked\"'\n- const { getByTestId } = renderComponent({ inlineAttrs, type: 'radio', data: () => ({ checked: true }) })\n- const control = getByTestId('control')\n- const hiddenControl = getByTestId('hiddenControl')\n+ renderComponent({ inlineAttrs, type: 'radio', data: () => ({ checked: true }) })\n+ const control = screen.getByTestId('control')\n+ const hiddenControl = screen.getByTestId('hiddenControl')\n// click the first time, it's checked\nexpect(hiddenControl).toBeChecked()\n",
        "human": "test(controlbox): refactor use screen",
        "race": "fix: use screen.getByTestId",
        "classified_rag": "test(chakra-ui-core/CControlBox): update test file with screen utility from test-utils",
        "type": "test"
    },
    {
        "diff": "diff --git a/packages/razzle/config/createConfigAsync.js b/packages/razzle/config/createConfigAsync.js @@ -655,23 +655,19 @@ module.exports = (\n// Check if plugin is a function.\n// If it is, call it on the configs we created.\nif (typeof plugin === 'function') {\n- config = await Promise.resolve(\n- runPlugin(\n+ config = await runPlugin(\nplugin,\nconfig,\n{ target, dev: IS_DEV },\nwebpackObject,\noptions\n- )\n);\n}\n}\n// Check if razzle.config.js has a modify function.\n// If it does, call it on the configs we created.\nif (modify) {\n- config = await Promise.resolve(\n- modify(config, { target, dev: IS_DEV }, webpackObject)\n- );\n+ config = await modify(config, { target, dev: IS_DEV }, webpackObject);\n}\nresolve(config);\n",
        "human": "fix(razzle): no need for Promise.resolve here",
        "race": "fix: remove unnecessary Promise.resolve",
        "classified_rag": "refactor(plugin handling): simplify plugin and modify function calls in createConfigAsync file",
        "type": "fix"
    },
    {
        "diff": "diff --git a/packages/chakra-ui-docs/layouts/default.vue b/packages/chakra-ui-docs/layouts/default.vue <Nuxt id=\"page-content\" />\n</keep-alive>\n<Footer v-if=\"$route.path === '/'\" />\n- <!-- <FileContributors /> -->\n+ <FileContributors />\n</CBox>\n</CFlex>\n</CBox>\n@@ -52,14 +52,14 @@ import MDXComponents from '../components/MDXComponents'\nimport Navbar from '../components/Navbar'\nimport Sidebar from '../components/Sidebar'\nimport Footer from '../components/Footer'\n-// import FileContributors from '../components/FileContributors'\n+import FileContributors from '../components/FileContributors'\n// import { stringToUrl } from '../utils'\nexport default {\nname: 'DefaultLayout',\ncomponents: {\n- // FileContributors,\n+ FileContributors,\nMDXProvider,\nCThemeProvider,\nCColorModeProvider,\n",
        "human": "chore: defer file-contributions tasks",
        "race": "add FileContributors",
        "classified_rag": "refactor: enable FileContributors component in DefaultLayout",
        "type": "chore"
    },
    {
        "diff": "diff --git a/packages/chakra-ui-docs/docs/tooltip.mdx b/packages/chakra-ui-docs/docs/tooltip.mdx +import Vue from 'vue'\n+import LiveEditor from '../components/LiveEditor'\n+import Code from '../components/CodeBlock'\n+import SEO from '../components/SEO'\n+\n+import { CTooltip, CIcon, CButton, CStack } from '@chakra-ui/vue'\n+Vue.component('CTooltip', CTooltip)\n+Vue.component('CIcon', CIcon)\n+Vue.component('CButton', CButton)\n+Vue.component('CStack', CStack)\n+\n+<SEO\n+ title=\"Tooltip\"\n+ description=\"A tooltip is a brief, informative message that appears when a user interacts with an element. Tooltips are usually initiated in one of two ways: through a mouse-hover gesture or through a keyboard-hover gesture.\"\n+/>\n+\n# Tooltip\n+\n+A tooltip is a brief, informative message that appears when a user interacts with an element. Tooltips are usually initiated in one of two ways: through a mouse-hover gesture or through a keyboard-hover gesture.\n+\n+The Tooltip component follows the [WAI-ARIA](https://www.w3.org/TR/wai-aria-practices/#tooltip) Tooltip Pattern.\n+\n+## Import\n+\n+<br />\n+<Code\n+lang=\"js\"\n+code={`import { CTooltip } from \"@chakra-ui/vue\";\n+`}\n+/>\n+\n+## Usage\n+\n+If the children of `CTooltip` is a string, we wrap with in a `span` with `tab-index` set to 0, to ensure it meets the accessibility requirements.\n+\n+<LiveEditor>\n+ {`\n+ <c-tooltip label=\"Chakra UI rocks\">Psst! Hover Me</c-tooltip>\n+`}\n+</LiveEditor>\n+\n+### With an icon\n+\n+<LiveEditor>\n+ {`\n+<c-tooltip label=\"Welcome home\" placement=\"bottom\">\n+ <c-icon name=\"phone\" />\n+</c-tooltip>\n+`}\n+</LiveEditor>\n+\n+### With arrow\n+\n+<LiveEditor>\n+ {`\n+<c-tooltip has-arrow label=\"Add new component\" placement=\"right\">\n+ <c-icon name=\"add\" />\n+</c-tooltip>\n+`}\n+</LiveEditor>\n+\n+### Tooltip with focusable content\n+\n+If the children of CTooltip is a focusable element, the tooltip will show when you focus or hover on the element, and will hide when you blur or moves cursor out of the element.\n+\n+<LiveEditor>\n+ {`\n+<c-tooltip has-arrow label=\"Sends your order to Delivery hero\" placement=\"top\" bg=\"blue.600\">\n+ <c-button>Place Order</c-button>\n+</c-tooltip>\n+`}\n+</LiveEditor>\n+\n+### Placement\n+\n+Using the `placement` prop you can adjust where your tooltip will be displayed.\n+\n+<LiveEditor>\n+ {`\n+<c-stack should-wrap-children>\n+ <c-tooltip has-arrow label=\"left\" placement=\"left\">\n+ <c-button variant=\"outline\">Left</c-button>\n+ </c-tooltip>\n+ <c-tooltip has-arrow label=\"top\" placement=\"top\">\n+ <c-button variant=\"outline\">Top</c-button>\n+ </c-tooltip>\n+ <c-tooltip has-arrow label=\"right\" placement=\"right\">\n+ <c-button variant=\"outline\">Right</c-button>\n+ </c-tooltip>\n+ <c-tooltip has-arrow label=\"bottom\" placement=\"bottom\">\n+ <c-button variant=\"outline\">Bottom</c-button>\n+ </c-tooltip>\n+</c-stack>\n+`}\n+</LiveEditor>\n+\n+### Props\n+\n+| Name | Type | Default | Description |\n+| -------------------- | -------------------- | -------- | ------------------------------------------------------------------------------------- |\n+| `isOpen` | `boolean` | | If `true`, the tooltip is shown. |\n+| `defaultIsOpen` | `boolean` | | If `true`, the tooltip is initially shown. |\n+| `label` | `string` | | The label of the tooltip. |\n+| `aria-label` | `string` | | An alternate label for screen readers. |\n+| `placement` | `PopperJS.Placement` | `bottom` | Position the tooltip relative to the trigger element as well as surrounding elements. |\n+| `children` | `Vue.VNode` | | The `VNode` to be used as the trigger of the tooltip. |\n+| `hasArrow` | `boolean` | | If `true` display an arrow tip on the tooltip. |\n+| `showDelay` | `number` | | The delay in `ms` for the tooltip to show |\n+| `hideDelay` | `number` | | The delay in `ms` for the tooltip to hide |\n+| `closeOnClick` | `boolean` | | If `true` hide the tooltip, when the trigger is clicked. |\n+| `shouldWrapChildren` | `boolean` | | If `true`, the tooltip will wrap the children in a `span` with `tabIndex=0` |\n+\n+### Events\n+\n+| Name | Type | Default | Description |\n+| -------- | ---------- | ------- | --------------------------------------- |\n+| `@open` | `function` | | Function called when the tooltip shows. |\n+| `@close` | `function` | | Function called when the tooltip hides. |\n",
        "human": "docs: added documentation for CTooltip component",
        "race": "Add tooltip docs",
        "classified_rag": "feat(tooltip): add tooltip component with Chakra UI Vue integration",
        "type": "docs"
    },
    {
        "diff": "diff --git a/test/validators.js b/test/validators.js @@ -4931,6 +4931,34 @@ describe('Validators', () => {\n});\n});\n+ it('should validate luhn numbers', () => {\n+ test({\n+ validator: 'isLuhnValid',\n+ valid: [\n+ '0',\n+ '5421',\n+ '01234567897',\n+ '0123456789012345678906',\n+ '0123456789012345678901234567891',\n+ '123456789012345678906',\n+ '375556917985515',\n+ '36050234196908',\n+ '4716461583322103',\n+ '4716-2210-5188-5662',\n+ '4929 7226 5379 7141',\n+ ],\n+ invalid: [\n+ '',\n+ '1',\n+ '5422',\n+ 'foo',\n+ 'prefix6234917882863855',\n+ '623491788middle2863855',\n+ '6234917882863855suffix',\n+ ],\n+ });\n+ });\n+\nit('should validate credit cards', () => {\ntest({\nvalidator: 'isCreditCard',\n",
        "human": "test: add tests specifically for isLuhnValid",
        "race": "Add luhn number validator",
        "classified_rag": "test(validators): added luhn number validation test",
        "type": "test"
    },
    {
        "diff": "diff --git a/packages/create-razzle-app/lib/index.js b/packages/create-razzle-app/lib/index.js @@ -135,7 +135,7 @@ module.exports = async function createRazzleApp(opts) {\nprojectPath: projectPath,\nprojectName: projectName,\n})\n- .then(installWithMessageFactory(opts))\n+ .then(installWithMessageFactory(opts, true))\n.catch(function(err) {\nconsole.error(`Failed loading official default example`);\nif (opts.verbose) {\n",
        "human": "fix: respect pinning in default cra template",
        "race": "fix: installWithMessageFactory should be optional",
        "classified_rag": "refactor(create-razzle-app): improve error handling in createRazzleApp function",
        "type": "fix"
    },
    {
        "diff": "diff --git a/test/examples/webpack.test.js b/test/examples/webpack.test.js @@ -68,8 +68,9 @@ describe('webpack app', function() {\n// This has become necessary because Travis switched their Chrome stable\n// version _down_ from 76 to 62, which handles this test case differently.\n+ // 2020-05-06: Travis Chrome 62 is now returning the original message.\nvar version = parseInt(window.navigator.userAgent.match(new RegExp('^.*HeadlessChrome/([0-9]*).*$'))[1]);\n- var message = version > 62 ? 'webpack test error' : 'Script error.';\n+ var message = version >= 62 ? 'webpack test error' : 'Script error.';\nexpect(body.data.body.trace.exception.message).to.eql(message);\n",
        "human": "test: update error message for travis chrome",
        "race": "Fix Travis Chrome 62 test case",
        "classified_rag": "test: update webpack test for Travis Chrome version 62 handling",
        "type": "test"
    },
    {
        "diff": "diff --git a/docs/app/Examples/views/Advertisement/Types/AdvertisementExampleBannerTop.js b/docs/app/Examples/views/Advertisement/Types/AdvertisementExampleBannerTop.js @@ -2,7 +2,7 @@ import React from 'react'\nimport { Advertisement } from 'semantic-ui-react'\nconst AdvertisementExampleBannerTop = () => (\n- <Advertisement unit='top banner' test='Vertical Banner' />\n+ <Advertisement unit='top banner' test='Top Banner' />\n)\nexport default AdvertisementExampleBannerTop\n",
        "human": "docs(Advertisement): fix AdvertisementExampleBannerTop example\nmodified the Ad's `test` prop",
        "race": "docs(advertisement): fix typo",
        "classified_rag": "style(advertisement): Update test attribute value in AdvertisementExampleBannerTop component",
        "type": "docs"
    },
    {
        "diff": "diff --git a/docs/app/Examples/elements/Step/Variations/StepExampleEvenlyDivided.js b/docs/app/Examples/elements/Step/Variations/StepExampleEvenlyDivided.js @@ -4,7 +4,7 @@ import { Icon, Step } from 'semantic-ui-react'\nconst StepExampleEvenlyDivided = () => (\n<Step.Group widths={3}>\n<Step>\n- <Icon icon='truck' />\n+ <Icon name='truck' />\n<Step.Content>\n<Step.Title>Shipping</Step.Title>\n</Step.Content>\n",
        "human": "docs(Step): fix display of an icon in StepExampleEvenlyDivided",
        "race": "fix(Step): Fix icon name",
        "classified_rag": "fix: corrected icon prop name in StepExampleEvenlyDivided",
        "type": "docs"
    },
    {
        "diff": "diff --git a/scss/sidebar/_sidebar.scss b/scss/sidebar/_sidebar.scss }\n}\n- @include media-breakpoint-up($mobile-breakpoint) {\n- &.hide {\n- &:not(.sidebar-end){\n- @include ltr-rtl(\"margin-left\", calc(-1 * var(--#{$variable-prefix}sidebar-width)));\n- ~ * {\n- --#{$variable-prefix}sidebar-occupy-start: 0;\n- }\n- }\n- &.sidebar-end {\n- @include ltr-rtl(\"margin-right\", calc(-1 * var(--#{$variable-prefix}sidebar-width)));\n- ~ * {\n- --#{$variable-prefix}sidebar-occupy-end: 0;\n- }\n- }\n- }\n- }\n-\n&[class*=\"bg-\"] {\nborder-color: rgba($black, .1);\n}\n}\n}\n+ @include media-breakpoint-up($mobile-breakpoint) {\n+ &.hide {\n+ &:not(.sidebar-end){\n+ @include ltr-rtl(\"margin-left\", calc(-1 * var(--#{$variable-prefix}sidebar-width)));\n+ ~ * {\n+ --#{$variable-prefix}sidebar-occupy-start: 0;\n+ }\n+ }\n+ &.sidebar-end {\n+ @include ltr-rtl(\"margin-right\", calc(-1 * var(--#{$variable-prefix}sidebar-width)));\n+ ~ * {\n+ --#{$variable-prefix}sidebar-occupy-end: 0;\n+ }\n+ }\n+ }\n+ }\n+\n&.sidebar-fixed {\n@include media-breakpoint-up($mobile-breakpoint) {\nposition: fixed;\n",
        "human": "refactor(Sidebar): update responsive clasess",
        "race": "fix: sidebar margin",
        "classified_rag": "refactor: adjust sidebar layout for mobile breakpoints",
        "type": "refactor"
    },
    {
        "diff": "diff --git a/packages/chakra-ui-core/src/utils/icons.js b/packages/chakra-ui-core/src/utils/icons.js import { merge } from 'lodash-es'\n/**\n- * @param {String} pack\n- * @param {Array} icon\n+ * @param {String} prefix - prefix for the icon pack\n+ * @param {Array} icon - icon definition\n* @returns {{path: string, viewBox: string, attrs: *}}\n*/\n-const createIcon = (pack, icon) => {\n+const createIcon = (prefix, icon) => {\nconst [w, h, content, svg, data, , attrs] = icon\nlet path\n@@ -21,12 +21,12 @@ const createIcon = (pack, icon) => {\nreturn `<g fill=\"currentColor\" class=\"${prefix}-group\">${paths.join('')}</g>`\n}\n- if (pack === 'fa') {\n+ if (prefix.startsWith('fa')) {\npath = Array.isArray(data)\n- ? createGroupedPath(data, pack)\n+ ? createGroupedPath(data, prefix.substr(0, 2))\n: createPath(data)\n} else {\n- path = pack.startsWith('fe') ? content : svg\n+ path = prefix.startsWith('fe') ? content : svg\n}\nreturn {\n@@ -38,17 +38,16 @@ const createIcon = (pack, icon) => {\n/**\n* @description Custom parse all Icons provided by user\n- * @param {String} pack - the name of the icon pack being used (fe, fa, mdi, etc)\n* @param {Object} iconSet - Registered Icons object\n* @returns {Object}\n*/\n-const parseIcons = (pack, iconSet = {}) => {\n+const parseIcons = (iconSet = {}) => {\nconst parseIcon = (iconObject) => {\n- const { icon, iconName } = iconObject\n+ const { icon, prefix, iconName } = iconObject\n// Is library icon\nif (icon) {\nreturn {\n- [`${iconName}`]: createIcon(pack, icon)\n+ [`${iconName}`]: createIcon(prefix, icon)\n}\n} else {\nreturn {}\n@@ -62,13 +61,12 @@ const parseIcons = (pack, iconSet = {}) => {\n/**\n* @description Parse Icon packs\n- * @param {String} pack - the name of the icon pack being used (fe, fa, mdi, etc)\n* @param {Object} iconSet Registered Icon set\n* @returns {Object} Parsed pack icons object\n*/\n-export const parsePackIcons = (pack, iconSet) => {\n+export const parsePackIcons = (iconSet) => {\n// TODO: Add support for other icon libraries\n// - Material Icons: these are string constants, and need lots of work\n// - Tailwind Icons (Hero icons)\n- return parseIcons(pack, iconSet)\n+ return parseIcons(iconSet)\n}\n",
        "human": "fix: don't use `options.iconPack`, yet",
        "race": "Add prefix to icon pack",
        "classified_rag": "refactor(icons): update icon creation function to use prefix instead of pack name",
        "type": "fix"
    },
    {
        "diff": "diff --git a/src/lib/htmlInputPropsUtils.js b/src/lib/htmlInputPropsUtils.js @@ -6,7 +6,7 @@ export const htmlInputAttrs = [\n// LIMITED HTML PROPS\n'autoCapitalize', 'autoComplete', 'autoCorrect', 'autoFocus', 'checked', 'disabled', 'form', 'id', 'max', 'maxLength',\n- 'min', 'multiple', 'name', 'pattern', 'placeholder', 'readOnly', 'required', 'step', 'type', 'value',\n+ 'min', 'minLength', 'multiple', 'name', 'pattern', 'placeholder', 'readOnly', 'required', 'step', 'type', 'value',\n]\nexport const htmlInputEvents = [\n",
        "human": "fix(Input): add missing minLength prop",
        "race": "Add minLength to htmlInputProps",
        "classified_rag": "fix(htmlInputPropsUtils): corrected min attribute handling\nFixes:\nCloses:",
        "type": "fix"
    },
    {
        "diff": "diff --git a/packages/react-scripts/template/README.md b/packages/react-scripts/template/README.md @@ -218,7 +218,7 @@ In addition to [ES6](https://github.com/lukehoban/es6features) syntax features,\n* [Object Rest/Spread Properties](https://github.com/tc39/proposal-object-rest-spread) (ES2018).\n* [Dynamic import()](https://github.com/tc39/proposal-dynamic-import) (stage 3 proposal)\n* [Class Fields and Static Properties](https://github.com/tc39/proposal-class-public-fields) (part of stage 3 proposal).\n-* [JSX](https://facebook.github.io/react/docs/introducing-jsx.html) and [Flow](https://flowtype.org/) syntax.\n+* [JSX](https://facebook.github.io/react/docs/introducing-jsx.html) and [Flow](https://flow.org/) syntax.\nLearn more about [different proposal stages](https://babeljs.io/docs/plugins/#presets-stage-x-experimental-presets-).\n@@ -886,20 +886,20 @@ Here is an example of adding a [customized Bootstrap](https://medium.com/@tacoma\nFlow is a static type checker that helps you write code with fewer bugs. Check out this [introduction to using static types in JavaScript](https://medium.com/@preethikasireddy/why-use-static-types-in-javascript-part-1-8382da1e0adb) if you are new to this concept.\n-Recent versions of [Flow](http://flowtype.org/) work with Create React App projects out of the box.\n+Recent versions of [Flow](https://flow.org/) work with Create React App projects out of the box.\nTo add Flow to a Create React App project, follow these steps:\n1. Run `npm install --save flow-bin` (or `yarn add flow-bin`).\n2. Add `\"flow\": \"flow\"` to the `scripts` section of your `package.json`.\n-3. Run `npm run flow init` (or `yarn flow init`) to create a [`.flowconfig` file](https://flowtype.org/docs/advanced-configuration.html) in the root directory.\n+3. Run `npm run flow init` (or `yarn flow init`) to create a [`.flowconfig` file](https://flow.org/en/docs/config/) in the root directory.\n4. Add `// @flow` to any files you want to type check (for example, to `src/App.js`).\nNow you can run `npm run flow` (or `yarn flow`) to check the files for type errors.\nYou can optionally use an IDE like [Nuclide](https://nuclide.io/docs/languages/flow/) for a better integrated experience.\nIn the future we plan to integrate it into Create React App even more closely.\n-To learn more about Flow, check out [its documentation](https://flowtype.org/).\n+To learn more about Flow, check out [its documentation](https://flow.org/).\n## Adding a Router\n",
        "human": "docs: flowtype.org -> flow.org",
        "race": "docs: update flow.org links",
        "classified_rag": "docs(react-scripts): update Flow documentation link in README\nCode diff type: docs",
        "type": "docs"
    },
    {
        "diff": "diff --git a/src/tab/tab.js b/src/tab/tab.js @@ -10,6 +10,13 @@ angular.module('mgcrea.ngStrap.tab', [])\nnavClass: 'nav-tabs',\nactiveClass: 'active'\n};\n+ var _tabsHash = {};\n+\n+ var _addTabControl = function(key, control)\n+ {\n+ if (!_tabsHash[key])\n+ _tabsHash[key] = control;\n+ }\nvar controller = this.controller = function ($scope, $element, $attrs) {\nvar self = this;\n@@ -91,6 +98,8 @@ angular.module('mgcrea.ngStrap.tab', [])\nvar $tab = {};\n$tab.defaults = defaults;\n$tab.controller = controller;\n+ $tab.addTabControl = _addTabControl;\n+ $tab.tabsHash = _tabsHash;\nreturn $tab;\n};\n@@ -113,6 +122,12 @@ angular.module('mgcrea.ngStrap.tab', [])\nvar ngModelCtrl = controllers[0];\nvar bsTabsCtrl = controllers[1];\n+ //Add a way for developers to access tab scope if needed. This allows for more fine grained control over what\n+ //tabs are available in the tab component\n+ if (attrs.tabKey != '' && attrs.tabKey != undefined){\n+ $tab.addTabControl(attrs.tabKey, bsTabsCtrl);\n+ }\n+\n// 'ngModel' does interfere with form validation\n// and status, use `bsActivePane` instead to avoid it\nif (ngModelCtrl) {\n",
        "human": "feat(tabs): access controller scope\nUpdating tabs to allow for access to the controller scope if needed.",
        "race": "Add tab scope to tab component",
        "classified_rag": "feat: add ability to access tab scope by key",
        "type": "feat"
    },
    {
        "diff": "diff --git a/packages/razzle/config/createConfigAsync.js b/packages/razzle/config/createConfigAsync.js @@ -166,6 +166,8 @@ module.exports = (\nwebpackOptions.definePluginOptions = dotenv.stringified;\n+ webpackOptions.appAssetsManifestPath = paths.appAssetsManifest;\n+\nif (IS_NODE) {\nwebpackOptions.jsOutputFilename = `[name].js`;\n@@ -735,7 +737,7 @@ module.exports = (\n// Output all files in a manifest file called assets-manifest.json\n// in the build directory.\nnew ManifestPlugin({\n- fileName: path.join(paths.appBuild, 'assets.json'),\n+ fileName: webpackOptions.appAssetsManifestPath,\nwriteToFileEmit: true,\ngenerate: (seed, files) => {\nconst entrypoints = new Set();\n",
        "human": "fix(razzle): use paths.appAssetsManifest in ManifestPlugin",
        "race": "Fix asset manifest path",
        "classified_rag": "feat(Razzle): add app assets manifest path configuration",
        "type": "fix"
    },
    {
        "diff": "diff --git a/packages/engine-processor/package.json b/packages/engine-processor/package.json {\n\"name\": \"@putout/engine-processor\",\n- \"version\": \"6.4.1\",\n+ \"version\": \"6.4.2\",\n\"type\": \"commonjs\",\n\"author\": \"coderaiser <mnemonic.enemy@gmail.com> (https://github.com/coderaiser)\",\n\"description\": \"run processors\",\n",
        "human": "chore: package: v6.4.2",
        "race": "chore: release engine-processor 6.4.2",
        "classified_rag": "chore(release): bump @putout/engine-processor to version 6.4.2",
        "type": "chore"
    },
    {
        "diff": "diff --git a/components/SentenTree/index.js b/components/SentenTree/index.js @@ -26,6 +26,7 @@ export default class SentenTree extends VisComponent {\n{\nname: 'text',\ndescription: 'The field containing the text sample.',\n+ type: 'string',\ndomain: {\nmode: 'field',\nfrom: 'data',\n",
        "human": "refactor(SentenTree): add missing type field",
        "race": "add type string to text field",
        "classified_rag": "fix: add type string to text field in SentenTree component",
        "type": "refactor"
    },
    {
        "diff": "diff --git a/test/production.test.js b/test/production.test.js @@ -187,7 +187,7 @@ describe('production', () => {\ndescribe('config.publicPath', () => {\nit('should respect `config.publicPath` value', async () => {\n- await loadFixture('publicPath', env);\n+ await loadFixture('publicpath', env);\ninstance = await runWmr(env.tmp.path, 'build');\nconst code = await instance.done;\nconsole.info(instance.output.join('\\n'));\n",
        "human": "fix: fixture name for case sensitive filesystems",
        "race": "fix: loadFixture name",
        "classified_rag": "test(production): fix typo in publicPath test",
        "type": "fix"
    },
    {
        "diff": "diff --git a/.gitignore b/.gitignore *.swp\n*.swo\n-node_modules/\n-build/\n-.DS_Store/\n-/coverage\n-coverage.json\n+\n+# Logs\n+logs\n+*.log\n+\n+# Runtime data\n+pids\n+*.pid\n+*.seed\nallFiredEvents\nscTopics\n+\n+# Coverage directory used by tools like istanbul\n+coverage\n+coverage.json\n+\n+# node-waf configuration\n+.lock-wscript\n+\n+# Dependency directory\n+node_modules\n+\n+# Debug log from npm\n+npm-debug.log\n+\n+# local env variables\n+.env\n+\n+# truffle build directory\n+build/\n+\n+# lol macs\n+.DS_Store/\n",
        "human": "feat: more comprehensive gitignore",
        "race": "Add comments to the diff task",
        "classified_rag": "chore(git): update `.gitignore` to include new patterns and remove unnecessary ones",
        "type": "feat"
    },
    {
        "diff": "diff --git a/.github/pull_request_template.md b/.github/pull_request_template.md @@ -3,7 +3,7 @@ Add a descriptive title textbox above, e.g.\nfeat(validatorName): brief title of what has been done\n-->\n-{{ briefly describe what you have done in this PR }}\n+<!--- briefly describe what you have done in this PR --->\n## Checklist\n",
        "human": "chore: update pull_request_template.md",
        "race": "Fixing the PR template",
        "classified_rag": "chore(github): update pull_request_template.md with descriptive title textbox and checklist items",
        "type": "chore"
    },
    {
        "diff": "diff --git a/src/modules/Dropdown/index.d.ts b/src/modules/Dropdown/index.d.ts @@ -65,6 +65,9 @@ export interface DropdownProps extends ReactMouseEvents<HTMLElement>, ReactFocus\n/** Shorthand for Icon. */\nicon?: any;\n+ /** A dropdown can be formatted as a Menu item. */\n+ item?: boolean;\n+\n/** A dropdown can be formatted to appear inline in other content. */\ninline?: boolean;\n",
        "human": "fix(typings): add item prop to the DropdownProps\nfixes",
        "race": "Add item prop to Dropdown",
        "classified_rag": "feat(dropdown): Add option to format dropdown as a Menu item",
        "type": "fix"
    },
    {
        "diff": "diff --git a/plugins/lineup/LineUp/test/lineup.js b/plugins/lineup/LineUp/test/lineup.js @@ -3,15 +3,15 @@ import test from 'tape-catch';\n// needed to handle Babel's conversion of for `(x of array)`\nimport 'babel-polyfill';\n-import $ from 'jquery';\n-\nimport LineUp from '..';\ntest('LineUp component', t => {\n- $('body').append($('<div/>').attr({id: 'elem'}).css({width: 800, height: 600}));\n+ const div = document.createElement('div');\n+ div.setAttribute('style', 'width: 800px; height: 600px');\n+\nt.ok(LineUp, 'LineUp exists');\nt.ok(LineUp.options, 'LineUp options exists');\n- let lu = new LineUp(document.getElementById('elem'), {\n+ let lu = new LineUp(div, {\ndata: [\n{a: 1, b: 2, c: 'a', d: true},\n{a: 3, b: 4, c: 'b', d: false},\n",
        "human": "test: fix test corruption from use of jquery in lineup test",
        "race": "fix lineup test",
        "classified_rag": "test: update LineUp component initialization to use createElement and setAttribute",
        "type": "test"
    },
    {
        "diff": "diff --git a/packages/chakra-ui-core/src/CCheckboxGroup/tests/CCheckboxGroup.test.js b/packages/chakra-ui-core/src/CCheckboxGroup/tests/CCheckboxGroup.test.js import { CBox, CCheckbox, CCheckboxGroup } from '../..'\n-import { render } from '@/tests/test-utils'\n+import { render, screen, wait } from '@/tests/test-utils'\n// mocks\nimport { useId } from '@/packages/chakra-ui-core/src/utils'\n@@ -33,20 +33,18 @@ it('should render correctly', () => {\n})\nit('should display children', () => {\n- const { getByText } = renderComponent()\n- expect(getByText('One')).toBeInTheDocument()\n- expect(getByText('Two')).toBeInTheDocument()\n- expect(getByText('Three')).toBeInTheDocument()\n+ renderComponent()\n+ expect(screen.getByText('One')).toBeInTheDocument()\n+ expect(screen.getByText('Two')).toBeInTheDocument()\n+ expect(screen.getByText('Three')).toBeInTheDocument()\n})\ntest('selectedValues prop works', () => {\n- const { getByTestId } = renderComponent()\n+ renderComponent()\n- const one = getByTestId('one').querySelector('input')\n- const two = getByTestId('two').querySelector('input')\n- const three = getByTestId('three').querySelector('input')\n-\n- expect(one).not.toBeChecked()\n- expect(two).toBeChecked()\n- expect(three).not.toBeChecked()\n+ wait(() => {\n+ expect(screen.getByLabelText('One')).not.toBeChecked()\n+ expect(screen.getByLabelText('Two')).toBeChecked()\n+ expect(screen.getByLabelText('Three')).not.toBeChecked()\n+ })\n})\n",
        "human": "test(checkbox-group): refactor CheckboxGroup tests",
        "race": "fix: fix checkbox group tests",
        "classified_rag": "test(chakra-ui-core): update CCheckboxGroup tests",
        "type": "test"
    },
    {
        "diff": "diff --git a/packages/cli/src/generateOutputData.js b/packages/cli/src/generateOutputData.js @@ -48,7 +48,7 @@ const generateOutputData = (source, params, options) => {\n// convert any inputs\nconst prevsource = source\nconst deserializerOptions = Object.assign({}, params, options)\n- source = conversionTable[inputFormat]({ source, params, options: deserializerOptions })\n+ source = conversionTable[inputFormat]({ source, options: deserializerOptions })\nconst useFakeFs = (source !== prevsource) // conversion, so use a fake file system when rebuilding\nif (outputFormat === 'jscad' || outputFormat === 'js') {\n",
        "human": "refactor(cli): removed unnecessary params option to serializer invocation",
        "race": "fix: remove unused params",
        "classified_rag": "fix: Remove unnecessary params from conversionTable function call",
        "type": "refactor"
    },
    {
        "diff": "diff --git a/stories/Index.stories.mdx b/stories/Index.stories.mdx @@ -102,3 +102,28 @@ import { Modal, ModalBody, ModalHeader } from 'reactstrap';\n</Modal>\n```\n+\n+#### CSSModule\n+\n+You can use `cssModule` to change the underlying component's default CSS className. This is an escape hatch\n+if you do not want to use the default bootstrap class.\n+\n+For example Button renders with a default class `.btn`. You can use\n+\n+```jsx\n+<Button color=\"primary\" cssModule={{ btn: 'hyperspeed-btn' }}>\n+ primary\n+</Button>\n+```\n+\n+so that Button renders with `.hyperspeed-btn` instead of `.btn`.\n+\n+You can use `setGlobalCssModule` function to set custom classes globally.\n+\n+```jsx\n+import { Util } from 'reactstrap';\n+\n+Util.setGlobalCssModule({\n+ btn: 'hyperspeed-btn',\n+});\n+```\n",
        "human": "docs(#2607): add docs on css module",
        "race": "Add CSSModule docs",
        "classified_rag": "docs(cssmodule): explain how to use cssModule to change default CSS className",
        "type": "docs"
    },
    {
        "diff": "diff --git a/test/basic.js b/test/basic.js @@ -30,6 +30,16 @@ test('create peer without options', function (t) {\n}\n})\n+test('can detect error when RTCPeerConstructor throws', function (t) {\n+ t.plan(1)\n+\n+ var peer = new Peer({ wrtc: { RTCPeerConnection: null } })\n+ peer.once('error', function () {\n+ t.pass('got error event')\n+ peer.destroy()\n+ })\n+})\n+\ntest('signal event gets emitted', function (t) {\nt.plan(2)\n",
        "human": "test: can detect error when RTCPeerConstructor throws",
        "race": "add test for RTCPeerConstructor error",
        "classified_rag": "test(peer): add error detection for RTCPeerConstructor throw case",
        "type": "test"
    },
    {
        "diff": "diff --git a/src/common/components/addons/RouteAuth/index.jsx b/src/common/components/addons/RouteAuth/index.jsx -import React, {Component} from 'react'\n-import PropTypes from 'prop-types'\n+/**\n+ * @flow\n+ */\n+import * as React from 'react'\nimport {Route, Redirect} from 'react-router-dom'\n/**\n* Component that protects route from unauthorized users.\n*/\n-class RouteAuth extends Component {\n- static propTypes = {\n- canAccess: PropTypes.func,\n- path: PropTypes.string\n- }\n- render () {\n- const {canAccess, path} = this.props\n-\n- console.log(\n- `User has access to \"${path}\" path: ${canAccess(path) ? 'YES' : 'NO'}`\n- )\n-\n- return canAccess(path) ? <Route {...this.props} /> : <Redirect to=\"/auth\" />\n+type Props = {\n+ canAccess: (string) => boolean,\n+ path: string\n}\n+\n+const RouteAuth = (props: Props) => {\n+ const {canAccess, path} = props\n+ return canAccess(path) ? <Route {...props} /> : <Redirect to=\"/auth\" />\n}\nexport default RouteAuth\n",
        "human": "feat(components/RouteAuth): use functional component, add flow types\nfeat(components/RouteAuth): use functional component, add flow types",
        "race": "flowify RouteAuth",
        "classified_rag": "feat: refactor RouteAuth component to use flow types and functional component",
        "type": "feat"
    },
    {
        "diff": "diff --git a/lib/config/exec.js b/lib/config/exec.js @@ -155,7 +155,9 @@ function exec(nodemonOptions, execMap) {\n// BIG NOTE: user can't do this: nodemon -e *.js\n// because the terminal will automatically expand the glob against\n// the file system :(\n- extension = (extension.match(/[^,.\\s]+/g) || []).join(',');\n+ extension = (extension.match(/[^,*\\s]+/g) || [])\n+ .map(ext => ext.replace(/^\\./, ''))\n+ .join(',');\noptions.ext = extension;\n",
        "human": "fix: Add support for multi-level filenames",
        "race": "fix: remove dot from file extensions",
        "classified_rag": "refactor: update extension handling in exec function",
        "type": "fix"
    },
    {
        "diff": "diff --git a/packages/veui/src/components/Table/_TableBody.js b/packages/veui/src/components/Table/_TableBody.js @@ -20,7 +20,7 @@ export default {\nlet key = table.keyField\n? item[table.keyField]\n: table.realKeys[index]\n- let expanded = table.localExpanded.indexOf(key) !== -1\n+ let expanded = table.realExpanded.indexOf(key) !== -1\nlet rows = [<Row index={index} expanded={expanded} />]\nif (table.expandable && expanded) {\n",
        "human": "refactor: table uses controllable",
        "race": "fix table expandable",
        "classified_rag": "fix(Table): fix incorrect check for expanded rows causing display issues",
        "type": "refactor"
    },
    {
        "diff": "diff --git a/scss/_buttons.scss b/scss/_buttons.scss // scss-docs-start button-modifiers\n@each $state, $map in $button-variants {\n- $background: var(--#{$variable-prefix}btn-#{$state}-background, map-get($map, \"background\"));\n- $border: var(--#{$variable-prefix}btn-#{$state}-border-color, map-get($map, \"border\"));\n- $color: var(--#{$variable-prefix}btn-#{$state}-color, map-get($map, \"color\"));\n- $hover-background: var(--#{$variable-prefix}btn-#{$state}-hover-background, map-get($map, \"hover-background\"));\n- $hover-border: var(--#{$variable-prefix}btn-#{$state}-hover-border, map-get($map, \"hover-border\"));\n- $hover-color: var(--#{$variable-prefix}btn-#{$state}-hover-color, map-get($map, \"hover-color\"));\n- $active-background: var(--#{$variable-prefix}btn-#{$state}-active-background, map-get($map, \"active-background\"));\n- $active-border: var(--#{$variable-prefix}btn-#{$state}-active-border, map-get($map, \"active-border\"));\n- $active-color: var(--#{$variable-prefix}btn-#{$state}-active-color, map-get($map, \"active-color\"));\n- $disabled-background: var(--#{$variable-prefix}btn-#{$state}-disabled-background, map-get($map, \"disabled-background\"));\n- $disabled-border: var(--#{$variable-prefix}btn-#{$state}-disabled-border, map-get($map, \"disabled-border\"));\n- $disabled-color: var(--#{$variable-prefix}btn-#{$state}-disabled-color, map-get($map, \"disabled-color\"));\n- $shadow: var(--#{$variable-prefix}btn-#{$state}-shadow, map-get($map, \"shadow\"));\n-\n.btn-#{$state} {\n@include button-variant(\n- $background,\n- $border,\n- $color,\n- $hover-background,\n- $hover-border,\n- $hover-color,\n- $active-background,\n- $active-border,\n- $active-color,\n- $disabled-background,\n- $disabled-border,\n- $disabled-color,\n- $shadow\n+ $background: var(--#{$variable-prefix}btn-#{$state}-background, map-get($map, \"background\")),\n+ $border: var(--#{$variable-prefix}btn-#{$state}-border-color, map-get($map, \"border\")),\n+ $color: var(--#{$variable-prefix}btn-#{$state}-color, map-get($map, \"color\")),\n+ $hover-background: var(--#{$variable-prefix}btn-#{$state}-hover-background, map-get($map, \"hover-background\")),\n+ $hover-border: var(--#{$variable-prefix}btn-#{$state}-hover-border, map-get($map, \"hover-border\")),\n+ $hover-color: var(--#{$variable-prefix}btn-#{$state}-hover-color, map-get($map, \"hover-color\")),\n+ $active-background: var(--#{$variable-prefix}btn-#{$state}-active-background, map-get($map, \"active-background\")),\n+ $active-border: var(--#{$variable-prefix}btn-#{$state}-active-border, map-get($map, \"active-border\")),\n+ $active-color: var(--#{$variable-prefix}btn-#{$state}-active-color, map-get($map, \"active-color\")),\n+ $disabled-background: var(--#{$variable-prefix}btn-#{$state}-disabled-background, map-get($map, \"disabled-background\")),\n+ $disabled-border: var(--#{$variable-prefix}btn-#{$state}-disabled-border, map-get($map, \"disabled-border\")),\n+ $disabled-color: var(--#{$variable-prefix}btn-#{$state}-disabled-color, map-get($map, \"disabled-color\")),\n+ $shadow: var(--#{$variable-prefix}btn-#{$state}-shadow, map-get($map, \"shadow\"))\n);\n}\n}\n// scss-docs-start button-outline-modifiers\n@each $state, $map in $button-variants {\n- $color: var(--#{$variable-prefix}btn-outline-#{$state}-color, map-get($map, \"background\"));\n- $color-hover: var(--#{$variable-prefix}btn-outline-#{$state}-hover-color, map-get($map, \"color\"));\n- $active-background: var(--#{$variable-prefix}btn-outline-#{$state}-active-background, map-get($map, \"background\"));\n- $active-border: var(--#{$variable-prefix}btn-outline-#{$state}-active-border, map-get($map, \"background\"));\n- $active-color: var(--#{$variable-prefix}btn-outline-#{$state}-active-color, map-get($map, \"active-color\"));\n- $shadow: var(--#{$variable-prefix}btn-outline-#{$state}-shadow, map-get($map, \"shadow\"));\n-\n.btn-outline-#{$state} {\n@include button-outline-variant(\n- $color,\n- $color-hover,\n- $active-background,\n- $active-border,\n- $active-color,\n- $shadow\n+ $color: var(--#{$variable-prefix}btn-outline-#{$state}-color, map-get($map, \"background\")),\n+ $color-hover: var(--#{$variable-prefix}btn-outline-#{$state}-hover-color, map-get($map, \"color\")),\n+ $active-background: var(--#{$variable-prefix}btn-outline-#{$state}-active-background, map-get($map, \"background\")),\n+ $active-border: var(--#{$variable-prefix}btn-outline-#{$state}-active-border, map-get($map, \"background\")),\n+ $active-color: var(--#{$variable-prefix}btn-outline-#{$state}-active-color, map-get($map, \"active-color\")),\n+ $shadow: var(--#{$variable-prefix}btn-outline-#{$state}-shadow, map-get($map, \"shadow\"))\n);\n}\n}\n",
        "human": "refactor: consolidated variables in variants",
        "race": "Fix button variant order",
        "classified_rag": "refactor(scss): improve variable naming for button modifiers",
        "type": "refactor"
    },
    {
        "diff": "diff --git a/src/entry.js b/src/entry.js @@ -174,16 +174,22 @@ const components = [\n]\nconst install = (app, opts = {}) => {\n- app.config.globalProperties.$ELEMENT = {\n- size: opts.size || '',\n- zIndex: opts.zIndex || 2000\n- }\n+ app.use(setupGlobalOptions(opts))\ncomponents.forEach((component) => {\napp.use(component)\n})\n}\n+const setupGlobalOptions = (opts = {}) => {\n+ return (app) => {\n+ app.config.globalProperties.$ELEMENT = {\n+ size: opts.size || '',\n+ zIndex: opts.zIndex || 2000\n+ }\n+ }\n+}\n+\nconst elementUI = {\nversion,\ninstall\n@@ -271,7 +277,8 @@ export {\nusePrompt,\nuseConfirm,\nuseNotify,\n- install\n+ install,\n+ setupGlobalOptions\n}\nexport default elementUI\n",
        "human": "feat: add setupGlobalOptions api for set global options",
        "race": "feat: add global options setup",
        "classified_rag": "refactor(global): extract setupGlobalOptions function for setting global properties",
        "type": "feat"
    },
    {
        "diff": "diff --git a/src/features/visualization/Visualization.module.css b/src/features/visualization/Visualization.module.css -webkit-animation-name: delta;\n-webkit-animation-duration: 2s;\n-webkit-animation-iteration-count: infinite;\n- animation: delta 5s infinite;\n+ animation: delta 2s infinite;\n}\n@keyframes delta {\n- 0% {\n+ 50% {\n-webkit-clip-path: polygon(50% 0%, 0% 100%, 100% 100%);\nclip-path: polygon(50% 0%, 0% 100%, 100% 100%);\n},\n- 100% {\n+ 0%, 100% {\n}\n}\n-webkit-animation-name: plus;\n-webkit-animation-duration: 2s;\n-webkit-animation-iteration-count: infinite;\n- animation: plus 5s infinite;\n+ animation: plus 2s infinite;\n}\n@keyframes plus {\n- 0% {\n+ 50% {\n-webkit-clip-path: polygon(0% 33%, 33% 33%, 33% 0%, 66% 0%, 66% 33%, 100% 33%, 100% 66%, 66% 66%, 66% 100%, 33% 100%, 33% 66%, 0% 66%, 0% 33%);\nclip-path: polygon(0% 33%, 33% 33%, 33% 0%, 66% 0%, 66% 33%, 100% 33%, 100% 66%, 66% 66%, 66% 100%, 33% 100%, 33% 66%, 0% 66%, 0% 33%);\n},\n- 100% {\n+ 0%, 100% {\n}\n}\n-webkit-animation-name: minus;\n-webkit-animation-duration: 2s;\n-webkit-animation-iteration-count: infinite;\n- animation: minus 5s infinite;\n+ animation: minus 2s infinite;\n}\n@keyframes minus {\n- 0% {\n+ 50% {\n-webkit-clip-path: polygon(0% 33%, 100% 33%, 100% 66%, 0% 66%);\nclip-path: polygon(0% 33%, 100% 33%, 100% 66%, 0% 66%);\n},\n- 100% {\n+ 0%, 100% {\n}\n}\n",
        "human": "fix: improved blink timing",
        "race": "Update visualization diff",
        "classified_rag": "chore(visualization): Improved animation duration for delta, plus, and minus animations",
        "type": "fix"
    },
    {
        "diff": "diff --git a/.github/workflows/publish.yml b/.github/workflows/publish.yml @@ -19,7 +19,6 @@ jobs:\nenv:\nNODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}\n- name: Publish Docs\n- run: |\n- echo \"RELEASE_TAG=${GITHUB_REF##*/}\" >> $GITHUB_ENV\n- echo \"GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}\" >> $GITHUB_ENV\n- ./scripts/docs\n+ env:\n+ GITHUB_TOKEN: ${{ secrets.REACTSTRAP_DOCS_GITHUB_TOKEN }}\n+ run: ./scripts/docs\n",
        "human": "chore(publish): update docs publishing",
        "race": "Fix docs publish",
        "classified_rag": "ci(docs): update environment variables for docs publishing task",
        "type": "chore"
    },
    {
        "diff": "diff --git a/packages/razzle/config/babel-loader/razzle-babel-loader.js b/packages/razzle/config/babel-loader/razzle-babel-loader.js @@ -64,7 +64,6 @@ module.exports = babelLoader.custom(function(babel) {\nisServer: opts.isServer,\nisModern: opts.isModern,\nhasModern: opts.hasModern,\n- supportsStaticESM: opts.supportsStaticESM,\ndevelopment: opts.development,\nshouldUseReactRefresh: opts.shouldUseReactRefresh,\n};\n@@ -102,7 +101,6 @@ module.exports = babelLoader.custom(function(babel) {\ndelete loader.distDir;\ndelete loader.isModern;\ndelete loader.hasModern;\n- delete loader.supportsStaticESM;\ndelete loader.development;\ndelete loader.shouldUseReactRefresh;\nreturn { loader, custom };\n@@ -114,7 +112,6 @@ module.exports = babelLoader.custom(function(babel) {\nconst isServer = customOptions.isServer;\nconst isModern = customOptions.isModern;\nconst hasModern = customOptions.hasModern;\n- const supportsStaticESM = customOptions.supportsStaticESM;\nconst development = customOptions.development;\nconst shouldUseReactRefresh = customOptions.shouldUseReactRefresh;\n@@ -137,7 +134,6 @@ module.exports = babelLoader.custom(function(babel) {\npresetOptions.caller.isServer = isServer;\npresetOptions.caller.isModern = isModern;\npresetOptions.caller.isDev = development;\n- presetOptions.caller.supportsStaticESM = supportsStaticESM;\nconst emitWarning = this.emitWarning.bind(this);\nObject.defineProperty(presetOptions.caller, 'onWarning', {\n",
        "human": "fix(babel-loader): supportsStaticESM should come from bundler",
        "race": "Remove supportsStaticESM from diff",
        "classified_rag": "refactor(razzle): remove supportsStaticESM option from babel loader config",
        "type": "fix"
    },
    {
        "diff": "diff --git a/.storybook/config.js b/.storybook/config.js @@ -77,7 +77,7 @@ addDecorator(() => ({\nfunction loadStories() {\n- const req = require.context('../packages/kiwi-core/src', true, /\\.stories\\.(js|mdx)$/);\n+ const req = require.context('../packages/chakra-ui-core/src', true, /\\.stories\\.(js|mdx)$/);\nreq.keys().forEach(filename => req(filename));\n}\n",
        "human": "fix: update storybook url",
        "race": "Fix storybook path",
        "classified_rag": "chore(storybook): update package path in storybook config",
        "type": "fix"
    },
    {
        "diff": "diff --git a/README.md b/README.md @@ -78,7 +78,7 @@ These great products are built on Semantic UI React. Add yours [here][22].\n- https://edabit.com\n- https://blackship.com\n- http://www.brewhousesolutions.com\n-- https://www.lifebot.fr\n+- https://www.seeuletter.com\n- https://www.stackforge.co\n- https://sublimefund.org\n- https://thefaithcircle.com\n",
        "human": "docs(readme): url update in built with",
        "race": "Update license in diff",
        "classified_rag": "docs: Update link for seeuletter website",
        "type": "docs"
    },
    {
        "diff": "diff --git a/frontend/leaderboard/src/Postgres.re b/frontend/leaderboard/src/Postgres.re @@ -15,7 +15,9 @@ LEFT JOIN user_commands AS uc ON uc.id = buc.user_command_id\nLEFT JOIN public_keys AS pk2 ON ic.receiver_id = pk2.id\nLEFT JOIN public_keys AS pk3 ON uc.fee_payer_id = pk3.id\nLEFT JOIN public_keys AS pk4 ON uc.source_id = pk4.id\n-LEFT JOIN public_keys AS pk5 ON uc.receiver_id = pk5.id\";\n+LEFT JOIN public_keys AS pk5 ON uc.receiver_id = pk5.id\n+\n+WHERE height >= 335\";\nlet createPool = pgConn => {\nmakePool({connectionString: pgConn, connectionTimeoutMillis: 5000});\n",
        "human": "feat: query blocks with a height greater than 335",
        "race": "Add height constraint to pool creation",
        "classified_rag": "fix: add missing WHERE clause in Postgres query",
        "type": "feat"
    },
    {
        "diff": "diff --git a/packages/chakra-ui-core/src/CBreadcrumb/CBreadcrumb.js b/packages/chakra-ui-core/src/CBreadcrumb/CBreadcrumb.js +/**\n+ * Hey! Welcome to @chakra-ui/vue Breadcrumb\n+ *\n+ * Breadcrumbs, or a breadcrumb navigation, can help to enhance\n+ * how users navigate to previous page levels of a website,\n+ * especially if that website has many pages or products.\n+ *\n+ * A breadcrumb trail consists of a list of links to the parent pages\n+ * of the current page in hierarchical order. It helps users find their\n+ * place within a website or web application. Breadcrumbs are often\n+ * placed horizontally before a page's main content.\n+ *\n+ * @see Docs https://vue.chakra-ui.com/breadcrumb\n+ * @see Source https://github.com/chakra-ui/chakra-ui-vue/blob/master/packages/chakra-ui-core/src/CBreadcrumb/CBreadcrumb.js\n+ */\n+\n+\nimport { baseProps } from '../config/props'\nimport { forwardProps, cloneVNodeElement, cleanChildren } from '../utils'\nimport CBox from '../CBox'\nimport CLink from '../CLink'\n+/**\n+* CBreadcrumbSeparator component\n+*\n+* The visual separator between each breadcrumb link\n+*\n+* @see Docs https://vue.chakra-ui.com/breadcrumb\n+*/\nconst CBreadcrumbSeparator = {\nname: 'CBreadcrumbSeparator',\nprops: {\n@@ -25,6 +49,13 @@ const CBreadcrumbSeparator = {\n}\n}\n+/**\n+* Span component\n+*\n+* Wrapper for text breadcrumbs\n+*\n+* @see Docs https://vue.chakra-ui.com/breadcrumb\n+*/\nconst Span = {\nname: 'Span',\nprops: {\n@@ -40,6 +71,13 @@ const Span = {\n}\n}\n+/**\n+* CBreadcrumbLink component\n+*\n+* The breadcrumb link\n+*\n+* @see Docs https://vue.chakra-ui.com/breadcrumb\n+*/\nconst CBreadcrumbLink = {\nname: 'CBreadcrumbLink',\nprops: {\n@@ -58,6 +96,13 @@ const CBreadcrumbLink = {\n}\n}\n+/**\n+* CBreadcrumbItem component\n+*\n+* Individual breadcrumb element containing a link and a divider.\n+*\n+* @see Docs https://vue.chakra-ui.com/breadcrumb\n+*/\nconst CBreadcrumbItem = {\nname: 'BreadcrumbItem',\nprops: {\n@@ -109,6 +154,13 @@ const CBreadcrumbItem = {\n}\n}\n+/**\n+* CBreadcrumb component\n+*\n+* The wrapper container for all breadcrumbs\n+*\n+* @see Docs https://vue.chakra-ui.com/breadcrumb\n+*/\nconst CBreadcrumb = {\nname: 'Breadcrumb',\nprops: {\n",
        "human": "feat(breadcrumb): add jsdocs",
        "race": "Add documentation to CBreadcrumb components",
        "classified_rag": "docs(chakra-ui-core): add documentation for CBreadcrumb component",
        "type": "feat"
    },
    {
        "diff": "diff --git a/README.md b/README.md @@ -145,7 +145,7 @@ export default {\nYou can also view all developed components in **[Storybook](https://chakra-ui-vue.netlify.com)!**\n### Development for Contributing:\n-Interested in contributing? See our open issues! Remember to take a look at our [CONTRIBUTORS](../../.github/CONTRIBUTING.md) guide.\n+Interested in contributing? See our [open issues](/issues)! Remember to take a look at our [CONTRIBUTORS](../../.github/CONTRIBUTING.md) guide.\n```bash\nyarn install\n",
        "human": "docs: add link to open issues",
        "race": "docs: fix link to open issues",
        "classified_rag": "docs: update link to open issues in contribution section",
        "type": "docs"
    },
    {
        "diff": "diff --git a/src/server/ssr/index.js b/src/server/ssr/index.js import React from 'react'\nimport chalk from 'chalk'\n// import _ from 'lodash'\n-import {renderToString} from 'react-dom/server'\n+import {render as renderToString} from 'rapscallion'\nimport {ServerStyleSheet, StyleSheetManager} from 'styled-components'\nimport {configureRootComponent, configureApp} from 'common/app'\n// import {addLocaleData} from 'react-intl'\n@@ -16,16 +16,16 @@ import assets from 'webpack-assets'\nimport faviconsAssets from 'favicons-assets'\nimport getI18nData from 'server/i18n'\n-export default (req: express$Request, res: express$Response) => {\n- const {isLoggedIn, lang} = req.user\n+export default async (req: express$Request, res: express$Response) => {\n+ const {isLoggedIn, language} = req.user\nconst {isMobile} = req.useragent\n- console.log(chalk.cyan(`MOBILE DEVICE: ${isMobile}`, JSON.stringify(req.useragent), lang))\n+ console.log(chalk.cyan(`MOBILE DEVICE: ${isMobile}`))\nconst meState = {auth: {isLoggedIn}}\nconst layoutState = {isMobile}\nconst initialState: Object = isLoggedIn\n? {me: meState, layout: layoutState}\n: {layout: layoutState}\n- const i18n = getI18nData(lang)\n+ const i18n = getI18nData(language)\nconst sheet = new ServerStyleSheet()\nconst location: string = req.url\nconst context = {}\n@@ -37,11 +37,11 @@ export default (req: express$Request, res: express$Response) => {\ni18n,\nSSR: {location, context}\n})\n- const App: string = renderToString(\n+ const App: string = await renderToString(\n<StyleSheetManager sheet={sheet.instance}>\n{RootComponent}\n</StyleSheetManager>\n- )\n+ ).toPromise()\nconst css: string = sheet.getStyleTags()\nconst preloadedState: Object = store.getState()\nconst props = {\n@@ -53,6 +53,9 @@ export default (req: express$Request, res: express$Response) => {\nApp\n}\n- const html: string = HtmlComponent(props)\n- res.send(html)\n+ res.writeHead(200, {\n+ 'Content-Type': 'text/html'\n+ })\n+\n+ HtmlComponent(props).toStream().pipe(res)\n}\n",
        "human": "feat(server/ssr): add rapscallion instead of react-dom/server renderToString\nfeat(server/ssr): add rapscallion instead of react-dom/server\nrenderToString",
        "race": "fix: ssr diff",
        "classified_rag": "fix(server): update renderToString method to async/await syntax",
        "type": "feat"
    },
    {
        "diff": "diff --git a/.changeset/config.json b/.changeset/config.json {\n- \"$schema\": \"https://unpkg.com/@changesets/config@1.1.0/schema.json\",\n- \"changelog\": \"@changesets/cli/changelog\",\n+ \"$schema\": \"https://unpkg.com/@changesets/config@1.4.0/schema.json\",\n+ \"changelog\": [\n+ \"@changesets/changelog-github\",\n+ { \"repo\": \"chakra-ui/chakra-ui-vue\" }\n+ ],\n\"commit\": false,\n\"linked\": [],\n\"access\": \"restricted\",\n",
        "human": "ci(release): update changest schema",
        "race": "chore: update changeset config",
        "classified_rag": "chore(changeset): Update changeset config schema and changelog provider",
        "type": "ci"
    },
    {
        "diff": "diff --git a/src/system/interpreter.js b/src/system/interpreter.js @@ -85,7 +85,7 @@ BiwaScheme.Interpreter = BiwaScheme.Class.create({\n//s: depth of stack to save\n//n: number of args(for outer lambda) to remove (= 0 unless tail position)\n//ret: closure array\n- continuation: function(s, n){\n+ capture_continuation: function(s, n){\n// note: implementation of this function for final version doesn't exist in 3imp.pdf..\nvar ss = this.push(n, s);\nreturn this.closure([\"refer-local\", 0,\n@@ -240,7 +240,7 @@ BiwaScheme.Interpreter = BiwaScheme.Class.create({\nbreak;\ncase \"conti\":\nvar n=x[1], x=x[2];\n- a = this.continuation(s, n);\n+ a = this.capture_continuation(s, n);\nbreak;\ncase \"nuate\":\nvar stack=x[1], x=x[2];\n",
        "human": "refactor(interpreter): Better name",
        "race": "rename continuation to capture_continuation",
        "classified_rag": "refactor(interpreter): rename continuation to capture_continuation",
        "type": "refactor"
    },
    {
        "diff": "diff --git a/src/views/Statistic/Statistic.d.ts b/src/views/Statistic/Statistic.d.ts @@ -33,7 +33,7 @@ export interface StatisticProps {\nhorizontal?: boolean;\n/** A statistic can be formatted to fit on a dark background. */\n- inverted?: string;\n+ inverted?: boolean;\n/** Label content of the Statistic. */\nlabel?: SemanticShorthandContent;\n",
        "human": "fix(Statistic): fix wrong inverted type",
        "race": "Fix Statistic inverted prop type",
        "classified_rag": "fix: Update type of `inverted` prop in Statistic componentPropTypes",
        "type": "fix"
    },
    {
        "diff": "diff --git a/packages/chakra-ui-core/src/CImage/CImage.js b/packages/chakra-ui-core/src/CImage/CImage.js @@ -72,9 +72,9 @@ const CImage = {\nrender (h) {\nlet imageProps\nif (this.ignoreFallback) {\n- imageProps = { src: this.src }\n+ imageProps = { src: this.src, srcset: this.srcset }\n} else {\n- imageProps = { src: this.hasLoaded ? this.src : this.fallbackSrc }\n+ imageProps = { src: this.hasLoaded ? this.src : this.fallbackSrc, srcset: this.srcset }\n}\nreturn h(CNoSsr, [\nh('img', {\n",
        "human": "feat(image): added srcset to the imageProps",
        "race": "Add srcset to image props",
        "classified_rag": "fix: update imageProps to include srcset in CImage render function",
        "type": "feat"
    },
    {
        "diff": "diff --git a/src/system/compiler.js b/src/system/compiler.js @@ -347,15 +347,15 @@ BiwaScheme.Compiler = BiwaScheme.Class.create({\ncase BiwaScheme.Sym(\"call/cc\"):\nvar x=x.second();\n+ var arity_of_arg = 1; // Always 1. (lambda (cc) ...)\nvar c = [\"conti\",\n(this.is_tail(next) ? (e[0].size() + 1) : 0), //number of args for outer lambda\n[\"argument\",\n- [\"constant\", 1,\n+ [\"constant\", arity_of_arg,\n[\"argument\",\nthis.compile(x, e, s,f,\n- (this.is_tail(next) ? [\"shift\", 1, [\"tco_hinted_apply\"]]\n+ (this.is_tail(next) ? [\"shift\", arity_of_arg, [\"tco_hinted_apply\"]]\n: [\"apply\"]))]]]];\n- //note: proc for call/cc takes 1 argument (= [\"apply\", 1])\n// Do not push stack frame when call/cc is in a tail context\nreturn this.is_tail(next) ? c : [\"frame\", c, next];\n",
        "human": "refactor(compiler): Avoid magic number",
        "race": "Always 1. (lambda (cc) ...)",
        "classified_rag": "refactor: improve arity handling in compiler for call/cc function",
        "type": "refactor"
    }
]