[
    {
        "diff": "diff --git a/webpack_config/client/webpack.prod.babel.js b/webpack_config/client/webpack.prod.babel.js @@ -57,7 +57,7 @@ base.module.rules.push(\n// Do you want to use bundle analyzer?\nif (ANALYZE_BUNDLE) {\n- base.plugins.push(new BundleAnalyzerPlugin())\n+ base.plugins.push(new BundleAnalyzerPlugin({analyzerMode: 'static'}))\n}\n// NOTE: if language was set, then build only this language\n",
        "human": "feat(webpack_config/client): use {analyzerMode: 'static'} for BundleAnalyzerPlugin",
        "race": "Fix bundle analyzer mode",
        "zeroshot": "Add analyzerMode option to BundleAnalyzerPlugin in webpack.prod configuration",
        "rag": "client: Enable static analyzer mode for BundleAnalyzerPlugin",
        "classified_rag": "webpack_config: Update BundleAnalyzerPlugin configuration to use static analyzer mode",
        "nngen": "fix: add missing contenthash to CSS",
        "type": "feat"
    },
    {
        "diff": "diff --git a/index.js b/index.js @@ -295,9 +295,9 @@ Peer.prototype.addTrack = function (track, stream) {\nself._senderMap.set(track, submap)\nself._needsNegotiation()\n} else if (sender.removed) {\n- self.destroy(makeError('Track has been removed. You should enable/disable tracks that you want to re-add.'), 'ERR_SENDER_REMOVED')\n+ self.destroy(makeError('Track has been removed. You should enable/disable tracks that you want to re-add.', 'ERR_SENDER_REMOVED'))\n} else {\n- self.destroy(makeError('Track has already been added to that stream.'), 'ERR_SENDER_ALREADY_ADDED')\n+ self.destroy(makeError('Track has already been added to that stream.', 'ERR_SENDER_ALREADY_ADDED'))\n}\n}\n@@ -315,7 +315,7 @@ Peer.prototype.replaceTrack = function (oldTrack, newTrack, stream) {\nvar submap = self._senderMap.get(oldTrack)\nvar sender = submap ? submap.get(stream) : null\nif (!sender) {\n- self.destroy(makeError('Cannot replace track that was never added.'), 'ERR_TRACK_NOT_ADDED')\n+ self.destroy(makeError('Cannot replace track that was never added.', 'ERR_TRACK_NOT_ADDED'))\n}\nif (newTrack) self._senderMap.set(newTrack, submap)\n",
        "human": "fix: make error the second argument should be error code",
        "race": "Fix lint errors in diff",
        "zeroshot": "Refactor error messages in addTrack and replaceTrack methods",
        "rag": "refactor: update error messages in addTrack and replaceTrack functions to provide more specific information",
        "classified_rag": "fix(peer): update error messages for track operations",
        "nngen": "feat: add \"buy a Yat\" to settings page",
        "type": "fix"
    },
    {
        "diff": "diff --git a/README.md b/README.md @@ -271,7 +271,9 @@ return of the `newman.run` function is a run instance, which emits run events th\n| options | This is a required argument and it contains all information pertaining to running a collection.<br /><br />_Required_<br />Type: `object` |\n| options.collection | The collection is a required property of the `options` argument. It accepts an object representation of a Postman Collection which should resemble the schema mentioned at [https://schema.getpostman.com/](https://schema.getpostman.com/). The value of this property could also be an instance of Collection Object from the [Postman Collection SDK](https://github.com/postmanlabs/postman-collection).<br /><br />As `string`, one can provide a URL where the Collection JSON can be found (e.g. [Postman Cloud API](https://api.getpostman.com/) service) or path to a local JSON file.<br /><br />_Required_<br />Type: `object\\|string` [PostmanCollection](https://github.com/postmanlabs/postman-collection/wiki#Collection) |\n| options.environment | One can optionally pass an environment file path or URL as `string` to this property and that will be used to read Postman Environment Variables from. This property also accepts environment variables as an `object`. Environment files exported from Postman App can be directly used here.<br /><br />_Optional_<br />Type: `object\\|string` |\n+| options.envVar | One can optionally pass environment variables as an array of key-value string object pairs. It will be used to read Postman Environment Variables as well as overwrite environment variables from `options.environments`. <br /><br />_Optional_<br />Type: `array\\|object` |\n| options.globals | Postman Global Variables can be optionally passed on to a collection run in form of path to a file or URL. It also accepts variables as an `object`.<br /><br />_Optional_<br />Type: `object\\|string` |\n+| options.globalVar | One can optionally pass global environment variables as an array of key-value string object pairs. It will be used to read Postman Global Environment Variables as well as overwrite global environment variables from `options.globals`. <br /><br />_Optional_<br />Type: `array\\|object` |\n| options.iterationCount | Specify the number of iterations to run on the collection. This is usually accompanied by providing a data file reference as `options.iterationData`.<br /><br />_Optional_<br />Type: `number`, Default value: `1` |\n| options.iterationData | Path to the JSON or CSV file or URL to be used as data source when running multiple iterations on a collection.<br /><br />_Optional_<br />Type: `string` |\n| options.folder | The name or ID of the folder/folders (ItemGroup) in the collection which would be run instead of the entire collection.<br /><br />_Optional_<br />Type: `string\\|array` |\n@@ -338,6 +340,10 @@ newman.run({\n\"_postman_exported_at\": \"2016-10-17T14:31:26.200Z\",\n\"_postman_exported_using\": \"Postman/4.8.0\"\n},\n+ globalVar: [\n+ { \"key\":\"glboalSecret\", \"value\":\"globalSecretValue\" },\n+ { \"key\":\"globalAnotherSecret\", \"value\":`${process.env.GLOBAL_ANOTHER_SECRET}`}\n+ ],\nenvironment: {\n\"id\": \"4454509f-00c3-fd32-d56c-ac1537f31415\",\n\"name\": \"test-env\",\n@@ -353,7 +359,11 @@ newman.run({\n\"_postman_variable_scope\": \"environment\",\n\"_postman_exported_at\": \"2016-10-17T14:26:34.940Z\",\n\"_postman_exported_using\": \"Postman/4.8.0\"\n- }\n+ },\n+ envVar: [\n+ { \"key\":\"secret\", \"value\":\"secretValue\" },\n+ { \"key\":\"anotherSecret\", \"value\":`${process.env.ANOTHER_SECRET}`}\n+ ],\n}).on('start', function (err, args) { // on start of run, log to console\nconsole.log('running a collection...');\n}).on('done', function (err, summary) {\n",
        "human": "docs: include `envVar`",
        "race": "Add envVar and globalVar options",
        "zeroshot": "Add support for passing environment and global variables as arrays of key-value pairs.",
        "rag": "feat(README): Add options for passing environment and global variables\n\nAdded new options `options.envVar` and `options.globalVar` to allow passing environment and global variables as an array of key-value string object pairs. This will enable reading Postman Environment and Global Variables as well as overwriting existing variables from `options.environment` and `options.globals`.",
        "classified_rag": "docs: add envVar and globalVar options to newman.run configuration",
        "nngen": "docs: document browserWhitelist feature",
        "type": "docs"
    },
    {
        "diff": "diff --git a/packages/chakra-ui-core/src/CCollapse/CCollapse.stories.js b/packages/chakra-ui-core/src/CCollapse/CCollapse.stories.js @@ -20,7 +20,7 @@ storiesOf('UI | Collapse', module)\n}\n}\n}))\n- .add('Changing the startingHeigh', () => ({\n+ .add('Changing the startingHeight', () => ({\ncomponents: { CButton, CCollapse, CBox },\ntemplate: `\n<div>\n",
        "human": "fix(docs-ccolapse): fix typo",
        "race": "Fix typo in storybook",
        "zeroshot": "Fix typo in startingHeight in CCollapse.stories.js",
        "rag": "chore(collapse): fix typo in startingHeight variable name in story definition",
        "classified_rag": "fix: correct typo in CCollapse startingHeight parameter name",
        "nngen": "docs(core): add activeContainer getter description",
        "type": "fix"
    },
    {
        "diff": "diff --git a/package.json b/package.json \"@babel/plugin-transform-modules-commonjs\": \"^7.7.4\",\n\"@babel/plugin-transform-parameters\": \"^7.7.4\",\n\"@babel/preset-env\": \"^7.9.5\",\n- \"@chakra-ui/vue\": \"^0.5.2\",\n+ \"@chakra-ui/vue\": \"^0.5.3\",\n\"@commitlint/cli\": \"^8.2.0\",\n\"@commitlint/config-conventional\": \"^8.2.0\",\n\"@fortawesome/free-brands-svg-icons\": \"^5.12.0\",\n",
        "human": "build: resolve chakra ui dep version",
        "race": "chore: update chakra-ui vue",
        "zeroshot": "Update Chakra UI Vue to version 0.5.3 in package.json",
        "rag": "chore: update the version of @chakra-ui/vue to 0.5.3",
        "classified_rag": "chore: update version of @chakra-ui/vue to 0.5.3",
        "nngen": "chore: update testing lib",
        "type": "build"
    },
    {
        "diff": "diff --git a/test/cli/run-options.test.js b/test/cli/run-options.test.js @@ -33,4 +33,12 @@ describe('CLI run options', function () {\ndone();\n});\n});\n+\n+ it('should correctly work with global variable overrides passed with --global-var', function (done) {\n+ // eslint-disable-next-line max-len\n+ exec('node ./bin/newman.js run test/integration/steph/steph.postman_collection.json --global-var first=James --global-var last=Bond', function (code) {\n+ expect(code).be(0);\n+ done();\n+ });\n+ });\n});\n",
        "human": "test(cli): Added CLI test for --global-var option sanity",
        "race": "Add test for global variable overrides passed with --global-var",
        "zeroshot": "Add test for global variable overrides in CLI run options",
        "rag": "test(cli): add test for global variable overrides with --global-var option",
        "classified_rag": "test(cli): add test for global variable overrides with --global-var option",
        "nngen": "chore: add test to detect cmdOptions functionality\\nRefers to\\nRefers to",
        "type": "test"
    },
    {
        "diff": "diff --git a/.github/workflows/release-please.yml b/.github/workflows/release-please.yml @@ -7,6 +7,8 @@ jobs:\nrelease-pr:\nruns-on: ubuntu-latest\nsteps:\n+ - uses: actions/checkout@v2\n+ - run: git tag -d $(git tag -l | grep -) # workaround for a bug with prerelease tags on the first run of release-please\n- uses: GoogleCloudPlatform/release-please-action@v2\nid: release-please\nwith:\n",
        "human": "chore: workaround release please initial release bug",
        "race": "fix: workaround for prerelease tags on the first run of release-please",
        "zeroshot": "Fix bug with prerelease tags on first run of release-please",
        "rag": "chore: update release-please-action to v2 and add workaround for prerelease tag bug",
        "classified_rag": "chore: update release-please-action to v2 (workaround for prerelease tag bug)",
        "nngen": "build: switch back to v2 of release-please",
        "type": "chore"
    },
    {
        "diff": "diff --git a/test/specs/modules/Checkbox/Checkbox-test.js b/test/specs/modules/Checkbox/Checkbox-test.js @@ -53,7 +53,7 @@ describe('Checkbox', () => {\n})\ndescribe('aria', () => {\n- ['aria-label', 'role'].forEach((propName) => {\n+ ;['aria-label', 'role'].forEach((propName) => {\nit(`passes \"${propName}\" to the <input>`, () => {\nshallow(<Checkbox {...{ [propName]: 'foo' }} />)\n.find('input')\n@@ -377,36 +377,30 @@ describe('Checkbox', () => {\ndescription: 'click on label: fires on mouse click',\nevents: {\nlabel: ['mouseup', 'click'],\n- input: ['click'],\n},\n},\n{\ndescription: 'click on input: fires on mouse click',\nevents: {\n- label: ['mouseup', 'click'],\ninput: ['click'],\n},\n},\n{\ndescription: 'key on input: fires on space key',\nevents: {\n- label: ['mouseup', 'click'],\ninput: ['click'],\n},\n},\n-\n{\ndescription: 'click on label with \"id\": fires on mouse click',\nevents: {\nlabel: ['mouseup', 'click'],\n- input: ['click'],\n},\nid: 'foo',\n},\n{\ndescription: 'click on input with \"id\": fires on mouse click',\nevents: {\n- label: ['mouseup', 'click'],\ninput: ['click'],\n},\nid: 'foo',\n@@ -435,8 +429,10 @@ describe('Checkbox', () => {\n{ attachTo },\n)\n- _.forEach(events, (event, target) => {\n- domEvent.fire(`[data-id=${dataId}] ${target}`, event)\n+ _.forEach(events, (targetEvents, target) => {\n+ _.forEach(targetEvents, (targetEvent) => {\n+ domEvent.fire(`[data-id=${dataId}] ${target}`, targetEvent)\n+ })\n})\nonClick.should.have.been.calledOnce()\n@@ -449,10 +445,10 @@ describe('Checkbox', () => {\n})\ndescribe('Controlled component', () => {\n- const getControlledCheckbox = isOnClick =>\n+ const getControlledCheckbox = (isOnClick) =>\nclass ControlledCheckbox extends React.Component {\nstate = { checked: false }\n- toggle = () => this.setState(prevState => ({ checked: !prevState.checked }))\n+ toggle = () => this.setState((prevState) => ({ checked: !prevState.checked }))\nrender() {\nconst handler = isOnClick ? { onClick: this.toggle } : { onChange: this.toggle }\n",
        "human": "test(Checkbox): remove incorrect event combinations",
        "race": "Fix checkbox tests",
        "zeroshot": "Refactor Checkbox-test.js for better readability and consistency",
        "rag": "test(core-checkbox): update test for controlled component and event handling logic",
        "classified_rag": "test(core-checkbox): refactor event handling logic in Checkbox-test.js",
        "nngen": "fix(Test): Simplify test data",
        "type": "test"
    },
    {
        "diff": "diff --git a/src/PopperContent.js b/src/PopperContent.js @@ -151,8 +151,8 @@ class PopperContent extends React.Component {\nmodifiers={extendedModifiers}\nplacement={placement}\n>\n- {({ ref, style, placement, arrowProps }) => (\n- <div ref={ref} style={style} className={popperClassName} x-placement={placement}>\n+ {({ ref, style, placement, outOfBoundaries, arrowProps }) => (\n+ <div ref={ref} style={style} className={popperClassName} x-placement={placement} x-out-of-boundaries={outOfBoundaries ? 'true' : undefined}>\n{children}\n{!hideArrow && <span ref={arrowProps.ref} className={arrowClassName} style={arrowProps.style} />}\n</div>\n",
        "human": "feat(PopoverContent): add x-out-of-boundaries attribute\nCloses",
        "race": "Add outOfBoundaries prop to PopperContent",
        "zeroshot": "Add outOfBoundaries prop to PopperContent component",
        "rag": "refactor: update PopperContent component to include outOfBoundaries prop in div attributes",
        "classified_rag": "refactor: Update PopperContent component to include outOfBoundaries prop in div attributes",
        "nngen": "docs: fix trigger target example",
        "type": "feat"
    },
    {
        "diff": "diff --git a/packages/razzle-start-server-webpack-plugin/dist/StartServerPlugin.js b/packages/razzle-start-server-webpack-plugin/dist/StartServerPlugin.js @@ -62,6 +62,7 @@ class StartServerPlugin {\nthis._handleChildError = this._handleChildError.bind(this);\nthis._handleChildExit = this._handleChildExit.bind(this);\nthis._handleChildMessage = this._handleChildMessage.bind(this);\n+ this._handleWebpackExit = this._handleWebpackExit.bind(this);\nthis.worker = null;\nif (this.options.restartable && !options.once) {\n@@ -141,9 +142,14 @@ class StartServerPlugin {\n_handleChildExit(code, signal) {\nif (code) this._error('script exited with code', code);\n- if (signal && signal !== 'SIGTERM') this._error('script exited after signal', signal);\nthis.worker = null;\n+ if (signal && signal !== 'SIGTERM') {\n+ this._error('script exited after signal', signal);\n+\n+ return;\n+ }\n+\nif (!this.workerLoaded) {\nthis._error('Script did not load, or HMR failed; not restarting');\n@@ -161,6 +167,12 @@ class StartServerPlugin {\nthis._runWorker();\n}\n+ _handleWebpackExit() {\n+ if (this.worker) {\n+ process.kill(this.worker.pid, 'SIGINT');\n+ }\n+ }\n+\n_handleChildError(err) {\nthis.worker = null;\n}\n@@ -206,11 +218,12 @@ class StartServerPlugin {\n})\n});\n- worker.once('exit', this._handleChildExit);\n- worker.once('error', this._handleChildError);\n+ worker.on('exit', this._handleChildExit);\n+ worker.on('error', this._handleChildError);\nworker.on('message', this._handleChildMessage);\nworker.stdout.on('data', this._worker_info);\nworker.stderr.on('data', this._worker_error);\n+ process.on('SIGINT', this._handleWebpackExit);\nthis.worker = worker;\nif (callback) callback();\n}\n",
        "human": "fix(razzle-start-server-webpack-plugin): handle SIGINT by passing it down to worker",
        "race": "fix: kill worker process after exit",
        "zeroshot": "Add handling for webpack exit signal in StartServerPlugin",
        "rag": "refactor: handle webpack exit signal in StartServerPlugin",
        "classified_rag": "feat: add _handleWebpackExit method to handle SIGINT signal for worker process",
        "nngen": "feat: Further enhancements for QAjaxBar",
        "type": "fix"
    },
    {
        "diff": "diff --git a/website/index.html b/website/index.html <div\nstyle=\"display: flex; flex-wrap: wrap; overflow: hidden; background: white; border-radius: 2px; padding: 20px; margin-top: 40px;\">\n+ <!-- static contributors -->\n+ <a title='padlet' data-id='padlet' href='https://padlet.com/'><img alt='null'\n+ src='https://images.opencollective.com/padlet/320fa3e/logo/256.png' style='float: left; margin:12px'\n+ width='120'></a>\n+\n<!-- https://opencollective.com/nodemon/members/all.json?limit=100&offset=0&TierId=2603 -->\n<!-- generated using https://jqterm.com/e09008bb74afe9fec8c1816252c3b9eb?query=def%20getImage%3A%0A%09.%20as%20%24_%20%7C%0A%09%7B%20%0A%20%20%20%20%20%20%22206432%22%3A%20%22https%3A%2F%2Fuser-images.githubusercontent.com%2F13700%2F127474039-8ba5ac8c-2095-4984-9309-54ff15e95340.png%22%2C%0A%09%20%20%22215800%22%3A%20%22https%3A%2F%2Fuser-images.githubusercontent.com%2F13700%2F151881982-04677f3d-e2e1-44ee-a168-258b242b1ef4.svg%22%20%0A%20%20%20%20%7D%20%7C%20%28.%5B%22%5C%28%24_.MemberId%29%22%5D%20%2F%2F%20%24_.image%29%0A%3B%0A%0Adef%20tohtml%3A%0A%22%20%20%20%20%20%20%20%20%20%20%3Ca%20title%3D%27%5C%28.name%29%27%20data-id%3D%27%5C%28.MemberId%29%27%20href%3D%27%5C%28.website%29%27%3E%3Cimg%20alt%3D%27%5C%28.description%29%27%20src%3D%27%5C%28.%20%7C%20getImage%29%27%20style%3D%27float%3A%20left%3B%20margin%3A12px%27%20width%3D%27120%27%3E%3C%2Fa%3E%22%0A%3B%0A%0Asort_by%28.createdAt%29%20%7C%20map%28select%28.isActive%20%3D%3D%20true%20and%20.image%29%20%7C%20tohtml%29%5B%5D&raw=true -->\n",
        "human": "chore: add supporters\n[skip ci]",
        "race": "Add static contributors",
        "zeroshot": "Add static contributor image for Padlet in index.html",
        "rag": "chore: add padlet as a contributor to the website",
        "classified_rag": "docs: add padlet as a static contributor on homepage",
        "nngen": "feat(chapter_8): added 2 playground code samples",
        "type": "chore"
    },
    {
        "diff": "diff --git a/docs/lib/Components/ProgressPage.js b/docs/lib/Components/ProgressPage.js @@ -48,7 +48,7 @@ export default class ProgressPage extends React.Component {\nPropTypes.number,\n]),\nanimated: PropTypes.bool,\n- stripped: PropTypes.bool,\n+ striped: PropTypes.bool,\ncolor: PropTypes.string,\nclassName: PropTypes.string,\nbarClassName: PropTypes.string // used to add class to the inner progress-bar element\n",
        "human": "docs(Progress): typo stripped -> striped",
        "race": "Fix prop type in ProgressPage",
        "zeroshot": "Fix typo in ProgressPage component PropTypes definition",
        "rag": "fix: update PropTypes in ProgressPage component for striped prop",
        "classified_rag": "docs: fix typo in PropTypes for striped prop in ProgressPage component",
        "nngen": "refactor: AddressForm using address proptype",
        "type": "docs"
    },
    {
        "diff": "diff --git a/packages/razzle/config/loadPlugins.js b/packages/razzle/config/loadPlugins.js @@ -42,9 +42,9 @@ function loadPlugin(plugin, paths) {\nbreak;\n}\n}\n-\nif (!razzlePlugin) {\n- throw new Error(`Unable to find '${completePluginName[0]}' or '${completePluginName[1]}'`);\n+ const last = completePluginNames.pop();\n+ throw new Error(`Unable to find '${completePluginNames.join(\"', '\")}' or ${last}'`);\n}\nreturn [razzlePlugin, plugin.options];\n",
        "human": "fix(razzle): report tested plugin imports",
        "race": "fix: improve error message when plugin not found",
        "zeroshot": "Refactor error message in loadPlugins.js to display all missing plugins",
        "rag": "fix: improve error message in loadPlugins.js",
        "classified_rag": "refactor: improve error message formatting",
        "nngen": "style: identation for webpack config file",
        "type": "fix"
    },
    {
        "diff": "diff --git a/package.json b/package.json \"scripts\": {\n\"build\": \"npm run frontend_build && npm run server_build\",\n\"dev\": \"NODE_ENV=development babel-node ./src/server/index.dev\",\n- \"dev:exp\": \"NODE_ENV=development babel-node -- --expose-http2 ./src/server/index.dev\",\n\"server_build\": \"NODE_ENV=production webpack --config webpack_config/server/webpack.prod.babel.js\",\n\"frontend_build\": \"NODE_ENV=production webpack --config webpack_config/client/webpack.prod.babel.js\",\n\"test\": \"NODE_ENV=test jest --config=jest_config/jest.config.json --coverage --forceExit || true\",\n",
        "human": "chore(package.json): remove dev:exp command\nchore(package.json): remove dev:exp command",
        "race": "Remove dev:exp task",
        "zeroshot": "Remove dev:exp script from package.json",
        "rag": "refactor: update build scripts to separate frontend and server builds",
        "classified_rag": "chore: update build scripts to separate frontend and server builds",
        "nngen": "test: eslint webpack as well",
        "type": "chore"
    },
    {
        "diff": "diff --git a/README.md b/README.md @@ -135,7 +135,6 @@ npm run deploy:docs\nUpdate the changelog (requires [github_changelog_generator][15]):\n```sh\n-npm run deploy:docs\ngithub_changelog_generator\ngit add CHANGELOG.md\ngit commit -m 'docs(changelog): update changelog [ci skip]'\n",
        "human": "docs(README): fix release instructions'",
        "race": "docs: remove deploy:docs from docs",
        "zeroshot": "docs(changelog): remove duplicate command from README",
        "rag": "docs: update the changelog generation process in README.md",
        "classified_rag": "docs: update the changelog generation process",
        "nngen": "chore: added changelog script to contributing",
        "type": "docs"
    },
    {
        "diff": "diff --git a/package.json b/package.json \"react-transition-group\": \"^2.3.1\"\n},\n\"peerDependencies\": {\n- \"react\": \"^16.3.0\",\n- \"react-dom\": \"^16.3.0\"\n+ \"react\": \">=16.3.0\",\n+ \"react-dom\": \">=16.3.0\"\n},\n\"devDependencies\": {\n\"@babel/cli\": \"^7.2.3\",\n",
        "human": "chore: Allow React 17 in peer deps",
        "race": "Update peerDependencies to allow react 16.3.0",
        "zeroshot": "Update peer dependencies for React and React-DOM versions to be greater than or equal to 16.3.0",
        "rag": "chore: update peerDependencies for react and react-dom to use minimum version 16.3.0",
        "classified_rag": "chore: update peerDependencies for react and react-dom",
        "nngen": "chore: add styled-components to peerDependencies",
        "type": "chore"
    },
    {
        "diff": "diff --git a/packages/element3/packages/button/Button.vue b/packages/element3/packages/button/Button.vue <script>\nimport { useGlobalOptions } from '../../src/use/globalConfig'\n-import { toRefs, inject, computed } from 'vue'\n-export default {\n+import { toRefs, inject, computed, defineComponent } from 'vue'\n+export default defineComponent({\nname: 'ElButton',\nprops: {\nsize: {\n@@ -65,7 +65,7 @@ export default {\nclasses\n}\n}\n-}\n+})\nconst useClasses = ({ props, size, disabled }) => {\nreturn computed(() => {\n",
        "human": "refactor(element3): use defineComponent refactor button",
        "race": "fix: add defineComponent to button component",
        "zeroshot": "Refactor Button.vue to use defineComponent from Vue 3",
        "rag": "feat: [button] Add defineComponent to Button component for better composition and type checking",
        "classified_rag": "refactor(button): remove script setup and use defineComponent",
        "nngen": "feat: isMobile removed from SfMegaMenu",
        "type": "refactor"
    },
    {
        "diff": "diff --git a/webpack_config/config.js b/webpack_config/config.js @@ -6,18 +6,24 @@ import path from 'path'\nimport i18n from '../i18n'\nimport manifest from './assets/manifest'\n-function ternary (a, b) {\n- return a ? a : b\n-}\n+let {\n+ BASE_API,\n+ APP_LANGUAGE,\n+ NODE_ENV,\n+ SENTRY_DSN_PUBLIC,\n+ GA_ID,\n+ JWT_SECRET,\n+ DIST_PATH,\n+ SENTRY_DSN,\n+ PORT\n+} = process.env\n// Vars for both server and frontend\n-const BASE_API = ternary(process.env.BASE_API, '/api/v1')\n-const APP_LANGUAGE = ternary(process.env.APP_LANGUAGE, 'en')\n-const NODE_ENV = ternary(process.env.NODE_ENV, 'development')\n+BASE_API = BASE_API || '/api/v1'\n+APP_LANGUAGE = APP_LANGUAGE || 'en'\n+NODE_ENV = NODE_ENV || 'development'\n// Vars for frontend only\n-const SENTRY_DSN_PUBLIC = ternary(process.env.SENTRY_DSN_PUBLIC)\n-const GA_ID = ternary(process.env.GA_ID)\n// Paths\nconst rootPath = path.join(__dirname, '../') // = \"/\"\n@@ -26,11 +32,9 @@ const srcPath = path.join(rootPath, './src') // = \"/src\"\nconst srcCommonPath = path.join(srcPath, './common') // = \"/src/common\"\n// Vars for server only\n-const DIST_PATH = ternary(process.env.DIST_PATH, path.join(distPath, './client', APP_LANGUAGE))\n-const JWT_SECRET = ternary(process.env.JWT_SECRET, 'secret')\n-const SENTRY_DSN = ternary(process.env.SENTRY_DSN)\n-const PORT = ternary(process.env.PORT, 4000)\n-\n+DIST_PATH = DIST_PATH || path.join(distPath, './client', APP_LANGUAGE)\n+JWT_SECRET = JWT_SECRET || 'secret'\n+PORT = PORT || 4000\nexport default {\ntitle: 'React-Semantic.UI-Starter',\n@@ -57,5 +61,24 @@ export default {\nbanner:\n'MIT License. Copyright (c) 2017 Vladimir Metnew All Rights Reserved. Repo: https://github.com/Metnew/react-semantic.ui-starter',\n// your manifest.json\n- manifest\n+ manifest,\n+ vendor: [\n+ 'react',\n+ 'react-dom',\n+ 'redux',\n+ 'history',\n+ 'react-router',\n+ 'react-router-dom',\n+ 'react-router-redux',\n+ 'semantic-ui-react',\n+ 'redux-thunk',\n+ 'react-helmet',\n+ 'lodash',\n+ 'normalizr',\n+ 'js-cookie',\n+ 'prop-types',\n+ 'store2',\n+ 'styled-components'\n+ ],\n+ polyfills: ['promise-polyfill', 'isomorphic-fetch']\n}\n",
        "human": "feat(webpack_config/config): add vendor and polyfills arrays for AutoDLLPlugin, style fixes\nfeat(webpack_config/config): add vendor and polyfills arrays for\nAutoDLLPlugin, style fixes",
        "race": "chore: update webpack config",
        "zeroshot": "Refactor webpack config to use ES6 destructuring and default values for environment variables",
        "rag": "build: set default values for environment variables in config file",
        "classified_rag": "refactor: update variable assignment logic in config file",
        "nngen": "chore: refactor Karma config to eliminate its cognitive complexity",
        "type": "feat"
    },
    {
        "diff": "diff --git a/.nycrc.json b/.nycrc.json \"**/.*.*\",\n\"packages/*/coverage\",\n\"packages/*/bin\",\n- \"packages/*/test\"\n+ \"packages/*/test\",\n+ \"**/eslint.config.js\"\n],\n\"branches\": 100,\n\"lines\": 100,\n",
        "human": "chore: package: v1.3.0",
        "race": "Add eslint.config.js to diff",
        "zeroshot": "Add eslint.config.js to nycrc.json ignore list",
        "rag": "build: update coverage ignore patterns in nycrc.json",
        "classified_rag": "chore(nyc): update nycrc.json to include eslint.config.js files",
        "nngen": "chore: revert updating Lerna packages config",
        "type": "chore"
    },
    {
        "diff": "diff --git a/scss/_variables.scss b/scss/_variables.scss @@ -77,55 +77,55 @@ $colors: (\n// fusv-disable\n$primary-dark: #1f1498 !default;\n-$primary: #321fdb !default;\n+$primary-base: #321fdb !default;\n$primary-50: #988fed !default;\n$primary-25: #ccc7f6 !default;\n$secondary-dark: #212233 !default;\n-$secondary: #9da5b1 !default;\n+$secondary-base: #9da5b1 !default;\n$secondary-50: #9da5b1 !default;\n$secondary-25: #ced2d8 !default;\n$success-dark: #1b9e3e !default;\n-$success: #2eb85c !default;\n+$success-base: #2eb85c !default;\n$success-50: #96dbad !default;\n$success-25: #cbedd6 !default;\n$info-dark: #2982cc !default;\n-$info: #39f !default;\n+$info-base: #39f !default;\n$info-50: #80c6ff !default;\n$info-25: #c0e6ff !default;\n$warning-dark: #f6960b !default;\n-$warning: #f9b115 !default;\n+$warning-base: #f9b115 !default;\n$warning-50: #fcd88a !default;\n$warning-25: #feecc5 !default;\n$danger-dark: #d93737 !default;\n-$danger: #e55353 !default;\n+$danger-base: #e55353 !default;\n$danger-50: #f2a9a9 !default;\n$danger-25: #f9d4d4 !default;\n$light-dark: $gray-100 !default;\n-$light: $gray-100 !default;\n-$light-50: shift-color($light, -70) !default;\n-$light-25: shift-color($light, -80) !default;\n+$light-base: $gray-100 !default;\n+$light-50: shift-color($light-base, -70) !default;\n+$light-25: shift-color($light-base, -80) !default;\n$dark-dark: $gray-900 !default;\n-$dark: $gray-900 !default;\n-$dark-50: shift-color($dark, -70) !default;\n-$dark-25: shift-color($dark, -80) !default;\n+$dark-base: $gray-900 !default;\n+$dark-50: shift-color($dark-base, -70) !default;\n+$dark-25: shift-color($dark-base, -80) !default;\n// fusv-enable\n// scss-docs-start theme-color-variables\n-$primary: $blue !default;\n-$secondary: $gray-600 !default;\n-$success: $green !default;\n-$info: $cyan !default;\n-$warning: $yellow !default;\n-$danger: $red !default;\n-$light: $gray-100 !default;\n-$dark: $gray-900 !default;\n+$primary: $primary-base !default;\n+$secondary: $secondary-base !default;\n+$success: $success-base !default;\n+$info: $info-base !default;\n+$warning: $warning-base !default;\n+$danger: $danger-base !default;\n+$light: $light-base !default;\n+$dark: $dark-base !default;\n// scss-docs-end theme-color-variables\n// scss-docs-start theme-colors-map\n@@ -279,7 +279,7 @@ $enable-negative-margins: false !default;\n$enable-deprecation-messages: true !default;\n$enable-important-utilities: true !default;\n$enable-contrast-ratio-correction: true !default;\n-$enable-contrast-ratio-warnings: true !default;\n+$enable-contrast-ratio-warnings: false !default;\n$enable-ltr: true !default;\n$enable-rtl: false !default;\n",
        "human": "refactor: update color variables",
        "race": "Update diff variables",
        "zeroshot": "Refactor color variables and update primary, secondary, success, info, warning, danger, light, and dark base colors. Disable contrast ratio warnings.",
        "rag": "chore(variables): updated primary, secondary, success, info, warning, danger, light, and dark color variables in _variables.scss",
        "classified_rag": "refactor(variables): updated primary color variable name",
        "nngen": "feat: update display font sizes and line heights\\nfeat: update display font sizes and line heights\\nBREAKING CHANGE changed font-sizes and line-heights of display-1,-2,-3,-4",
        "type": "refactor"
    },
    {
        "diff": "diff --git a/examples/pages/template/index.tpl b/examples/pages/template/index.tpl <img width=\"35px\" src=\"~examples/assets/images/tipe.svg\" alt=\"tipe.io\">\n<div>\n<p>Sponsored by Tipe.io</p>\n- <p>Next Generation Headless CMS</p>\n+ <p>Next Generation API-first CMS</p>\n</div>\n</a>\n<div class=\"cards\">\n",
        "human": "refactor(index): headless cms -> api-first cms",
        "race": "docs: update sponsor",
        "zeroshot": "Update Tipe.io sponsorship message in index.tpl",
        "rag": "style: update text in index.tpl to reflect API-first nature of CMS",
        "classified_rag": "docs: update Tipe.io description in index.tpl",
        "nngen": "docs(demo): remove opt out button from ktichen sink",
        "type": "refactor"
    },
    {
        "diff": "diff --git a/docs/guide/options/README.md b/docs/guide/options/README.md @@ -237,10 +237,18 @@ firestore: {\nstatic: false, // default\npreload: false, // default\nchunkName: process.env.NODE_ENV !== 'production' ? 'firebase-auth' : '[id]', // default\n- enablePersistence: true\n+ enablePersistence: true,\n+ settings: {\n+ // Firestore Settings\n+ }\n}\n```\n+#### settings\n+\n+Adds settings to your Firebase initialization, e.g. `host` or `ssl`.\n+See more [here](https://firebase.google.com/docs/reference/js/firebase.firestore.Settings).\n+\n#### enablePersistence\nEnables persistence in web apps.\n",
        "human": "docs: added firestore.settings config",
        "race": "Add Firestore settings documentation",
        "zeroshot": "Add settings option to Firestore configuration",
        "rag": "docs(guide/options): add settings to Firebase initialization\nThis commit adds settings to the Firebase initialization in the options guide. The settings include options such as `host` or `ssl`. More information can be found [here](https://firebase.google.com/docs/reference/js/firebase.firestore.Settings).",
        "classified_rag": "docs: Add settings section to Firebase initialization in README",
        "nngen": "docs: add deploy guide for firebase",
        "type": "docs"
    },
    {
        "diff": "diff --git a/.github/CONTRIBUTING.md b/.github/CONTRIBUTING.md @@ -29,6 +29,7 @@ CONTRIBUTING\n- [Common Tests](#common-tests)\n- [Usage](#usage)\n- [isConformant (required)](#isconformant-required)\n+ - [Visual testing](#visual-testing)\n- [State](#state)\n- [AutoControlledComponent](#autocontrolledcomponent)\n- [Documentation](#documentation)\n",
        "human": "docs: add visual testing to contributing toc [ci skip]",
        "race": "Add link to visual testing section",
        "zeroshot": "Add section for visual testing in CONTRIBUTING.md",
        "rag": "docs(contributing): add section for visual testing",
        "classified_rag": "docs(contributing): add section for visual testing",
        "nngen": "ci: add paths for build and docs",
        "type": "docs"
    },
    {
        "diff": "diff --git a/scss/mixins/_utilities.scss b/scss/mixins/_utilities.scss // Don't prefix if value key is null (eg. with shadow class)\n$property-class-modifier: if($key, if($property-class == \"\" and $infix == \"\", \"\", \"-\") + $key, \"\");\n+ // Generate also CSS Variable\n+ $generate-vars: if(map-has-key($utility, vars), map-get($utility, vars), \"false\");\n+\n@if map-get($utility, rfs) {\n// Inside the media query\n@if $is-rfs-media-query {\n}\n.#{$property-class + $infix + $property-class-modifier} {\n@each $property in $properties {\n+ @if $generate-vars == true {\n#{$property}: var(--#{$variable-prefix}#{$property-class + $infix + $property-class-modifier}, $value) if($enable-important-utilities, !important, null);\n}\n+ @else {\n+ #{$property}: $value if($enable-important-utilities, !important, null);\n+ }\n+ }\n}\n@each $pseudo in $state {\n",
        "human": "feat: CSS Variables support",
        "race": "Add option to generate CSS variables",
        "zeroshot": "Add generation of CSS variables for utilities with vars property.",
        "rag": "feat: added support for generating CSS variables in utilities.scss and updated property output logic",
        "classified_rag": "feat(scss): generate CSS Variable if specified in utility map\n...to allow for more flexible styling options.",
        "nngen": "feat: multiline properties in rule `key-spacing` with option `align`\\nFixes",
        "type": "feat"
    },
    {
        "diff": "diff --git a/website/index.html b/website/index.html href='https://inkedin.com/free-spins-no-deposit/'><img src='https://logo.clearbit.com/inkedin.com'\nstyle='object-fit: contain; float: left; margin:12px' height='120' width='120'></a><a\nhref='https://www.newcasinosaustralia.com/'><img src='https://logo.clearbit.com/newcasinosaustralia.com'\n+ style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a><a\n+ href='https://casinostranieri.net/'><img\n+ src='https://opencollective-production.s3.us-west-1.amazonaws.com/7aae8900-0c02-11ed-9aa8-2bd811fd6f10.png'\n+ style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a><a\n+ href='https://goread.io/buy-instagram-followers'><img\n+ src='https://opencollective-production.s3.us-west-1.amazonaws.com/7d1302a0-0f33-11ed-a094-3dca78aec7cd.png'\nstyle='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>\n</div>\n</div>\n",
        "human": "chore: add supporters",
        "race": "docs: add more images to diff",
        "zeroshot": "Add new affiliate links to index.html page",
        "rag": "feat: added new images with links to website index",
        "classified_rag": "docs: add new casino link and instagram followers link to homepage",
        "nngen": "chore: add rabathelten as an opencollective sponsor",
        "type": "chore"
    },
    {
        "diff": "diff --git a/packages/react-scripts/template/README.md b/packages/react-scripts/template/README.md @@ -1171,10 +1171,10 @@ Additionally, you might find [jest-enzyme](https://github.com/blainekasten/enzym\nexpect(wrapper).toContainReact(welcome)\n```\n-To setup jest-enzyme with Create React App, follow the instructions for [initializing your test environment](#initializing-test-environment) to import `jest-enzyme`. **Note that currently only version 2.x is compatible with Create React App.**\n+To setup jest-enzyme with Create React App, follow the instructions for [initializing your test environment](#initializing-test-environment) to import `jest-enzyme`.\n```sh\n-npm install --save-dev jest-enzyme@2.x\n+npm install --save-dev jest-enzyme\n```\n```js\n",
        "human": "docs: update `jest-enzyme` section\nsince CRA now use the latest version of Jest under the hood,\n`jest-enzyme` v3.2.0 is now working perfectly fine",
        "race": "Remove version note from docs",
        "zeroshot": "Remove version restriction for jest-enzyme installation in README",
        "rag": "docs: update jest-enzyme setup instructions in README",
        "classified_rag": "docs: update jest-enzyme setup instructions in README",
        "nngen": "chore(docs): Add Jest 28 `jest-environment-jsdom` information",
        "type": "docs"
    },
    {
        "diff": "diff --git a/src/elements/Button/Button.d.ts b/src/elements/Button/Button.d.ts @@ -22,7 +22,7 @@ export interface ButtonProps {\nactive?: boolean;\n/** A button can animate to show hidden content. */\n- animated?: 'fade' | 'vertical';\n+ animated?: boolean | 'fade' | 'vertical';\n/** A button can be attached to the top or bottom of other content. */\nattached?: 'left' | 'right' | 'top' | 'bottom';\n",
        "human": "fix(Button): fix animated prop type definition",
        "race": "fix(button): fix animated prop type",
        "zeroshot": "Refactor ButtonProps interface to allow for boolean value in animated prop",
        "rag": "docs: update ButtonProps interface to allow boolean value for animated prop",
        "classified_rag": "fix: Update animated prop type in Button component to allow boolean values",
        "nngen": "docs(core-button): remove href from A11yContent example",
        "type": "fix"
    },
    {
        "diff": "diff --git a/packages/kiwi-core/src/CloseButton/tests/CloseButton.test.js b/packages/kiwi-core/src/CloseButton/tests/CloseButton.test.js @@ -10,9 +10,7 @@ const renderComponent = (props) => {\nreturn render(base)\n}\nit('should render correctly', () => {\n- const { asFragment } = renderComponent({\n- template: `<CloseButton />`\n- })\n+ const { asFragment } = renderComponent()\nexpect(asFragment()).toMatchSnapshot()\n})\nit('should allow setting a custom aria-label for the button', () => {\n",
        "human": "chore(tests): remove unnecessary template",
        "race": "Fix close button test",
        "zeroshot": "Refactor CloseButton.test.js to remove unnecessary props in renderComponent",
        "rag": "test(CloseButton): Refactor renderComponent function to remove unnecessary template prop usage",
        "classified_rag": "test(CloseButton): Refactor renderComponent function to remove unnecessary template prop usage",
        "nngen": "test: array of schemas with r.is.valid",
        "type": "chore"
    },
    {
        "diff": "diff --git a/src/common/reducers/layout/index.js b/src/common/reducers/layout/index.js @@ -60,6 +60,16 @@ export function layout (state: State = initialState, action: Action): State {\n...state,\nsidebarOpened: false\n}\n+ // See actions/layout for more info\n+ // case APPLY_STYLES:{\n+ // const {element, styles} = payload\n+ // return {\n+ // ...state,\n+ // styles: {\n+ // [element]: styles\n+ // }\n+ // }\n+ // }\ndefault:\nreturn state\n}\n",
        "human": "chore(reducers/layout): add APPLY_STYLES handler\nchore(reducers/layout): add APPLY_STYLES handler",
        "race": "Add comment about styles",
        "zeroshot": "Add commented out code for applying styles in layout reducer",
        "rag": "fix(layout): comment out unused APPLY_STYLES case in reducer",
        "classified_rag": "feat(layout): add commented out code for applying styles",
        "nngen": "chore: Audit fields for state page",
        "type": "chore"
    },
    {
        "diff": "diff --git a/src/views/Card/index.d.ts b/src/views/Card/index.d.ts @@ -37,6 +37,9 @@ interface CardProps {\n/** A card can contain an Image component. */\nimage?: any;\n+ /** A card can be formatted to link to other content. */\n+ link?: boolean;\n+\n/** Shorthand for CardMeta. */\nmeta?: any;\n",
        "human": "fix(Card): add link prop to typings",
        "race": "Add link prop to Card",
        "zeroshot": "Add link prop to Card component.",
        "rag": "feat(card): add link prop to Card component",
        "classified_rag": "fix(types): Added link property to CardProps interface",
        "nngen": "docs(card): commented section removed",
        "type": "fix"
    },
    {
        "diff": "diff --git a/src/common/containers/Users/components/UsersItemComponent.jsx b/src/common/containers/Users/components/UsersItemComponent.jsx @@ -13,7 +13,7 @@ const UsersItemComponent = ({user}: Props) => {\nconst {name, username, address, email, website, phone, id} = user\nreturn (\n<StyledUserItem as={Link} to={`/users/${id}`}>\n- <Statistic floated=\"left\" value={id} label={'User ID'} />\n+ <Statistic floated=\"left\" value={id} label={'User'} />\n<Item.Content>\n<Item.Header>\n{`${name} \"${username}\"`}\n",
        "human": "chore(UserItemComponent): fix text\nchore(UserItemComponent): fix text",
        "race": "Fix user id label",
        "zeroshot": "Update label for User ID in UsersItemComponent",
        "rag": "fix(users): update label in Statistic component",
        "classified_rag": "fix: updated user id label in UsersItemComponent",
        "nngen": "chore: Simpler switch for name",
        "type": "chore"
    },
    {
        "diff": "diff --git a/packages/kiwi-core/rollup.config.js b/packages/kiwi-core/rollup.config.js @@ -66,14 +66,14 @@ const commons = {\n]\n}\n-// const bannerTxt = `/*! Chakra-Vui v${pkg.version} | MIT License | github.com/codebender828/kiwi-ui */`\n+const bannerTxt = `/*! Chakra-Vui v${pkg.version} | MIT License | github.com/codebender828/kiwi-ui */`\nconst baseFolder = './src/'\n-// const capitalize = (s) => {\n-// if (typeof s !== 'string') return ''\n-// return s.charAt(0).toUpperCase() + s.slice(1)\n-// }\n+const capitalize = (s) => {\n+ if (typeof s !== 'string') return ''\n+ return s.charAt(0).toUpperCase() + s.slice(1)\n+}\nconst components = fs.readdirSync(baseFolder)\n.filter((f) => fs.statSync(path.join(baseFolder, f)).isDirectory())\n@@ -90,23 +90,23 @@ const entries = {\n* Configurations\n*/\nexport default () => {\n- // const mapComponent = (name) => {\n- // return [{\n- // input: baseFolder + `${name}/index.js`,\n- // external: externals,\n- // output: {\n- // format: 'umd',\n- // name: capitalize(name),\n- // file: `dist/components/${name}/index.js`,\n- // banner: bannerTxt,\n- // exports: 'named',\n- // globals: {\n- // vue: 'Vue'\n- // }\n- // },\n- // ...commons\n- // }]\n- // }\n+ const mapComponent = (name) => {\n+ return [{\n+ input: baseFolder + `${name}/index.js`,\n+ external: externals,\n+ output: {\n+ format: 'umd',\n+ name: capitalize(name),\n+ file: `dist/components/${name}/index.js`,\n+ banner: bannerTxt,\n+ exports: 'named',\n+ globals: {\n+ vue: 'Vue'\n+ }\n+ },\n+ ...commons\n+ }]\n+ }\nlet config = [{\ninput: entries,\n@@ -115,62 +115,62 @@ export default () => {\nformat: 'esm'\n},\n...commons\n+ },\n+ {\n+ input: entries,\n+ output: {\n+ dir: `dist/es/`,\n+ format: 'es'\n+ },\n+ ...commons\n+ },\n+ {\n+ input: entries,\n+ output: {\n+ dir: `dist/cjs/`,\n+ format: 'cjs',\n+ exports: 'named'\n+ },\n+ ...commons\n+ },\n+ {\n+ input: './src/index.js',\n+ output: {\n+ file: `dist/umd/index.js/`,\n+ name: capitalize('chakra'),\n+ format: 'umd',\n+ exports: 'named',\n+ banner: bannerTxt,\n+ globals: {\n+ vue: 'Vue'\n}\n- // {\n- // input: entries,\n- // output: {\n- // dir: `dist/es/`,\n- // format: 'es'\n- // },\n- // ...commons\n- // },\n- // {\n- // input: entries,\n- // output: {\n- // dir: `dist/cjs/`,\n- // format: 'cjs',\n- // exports: 'named'\n- // },\n- // ...commons\n- // },\n- // {\n- // input: './src/index.js',\n- // output: {\n- // file: `dist/umd/index.js/`,\n- // name: capitalize('chakra'),\n- // format: 'umd',\n- // exports: 'named',\n- // banner: bannerTxt,\n- // globals: {\n- // vue: 'Vue'\n- // }\n- // },\n- // ...commons\n- // },\n- // {\n- // input: './src/index.js',\n- // output: {\n- // file: 'dist/chakra-vui.esm.js',\n- // name: capitalize('chakra'),\n- // format: 'esm',\n- // exports: 'named',\n- // banner: bannerTxt\n- // },\n- // ...commons\n- // }\n+ },\n+ ...commons\n+ },\n+ {\n+ input: './src/index.js',\n+ output: {\n+ file: 'dist/chakra-vui.esm.js',\n+ name: capitalize('chakra'),\n+ format: 'esm',\n+ exports: 'named',\n+ banner: bannerTxt\n+ },\n+ ...commons\n+ },\n// Individual components\n- // ...components.map((f) => mapComponent(f)).reduce((r, a) => r.concat(a), [])\n+ ...components.map((f) => mapComponent(f)).reduce((r, a) => r.concat(a), [])\n]\n- // if (process.env.MINIFY === 'true') {\n- // config = config.filter((c) => !!c.output.file)\n- // config.forEach((c) => {\n- // c.output.file = c.output.file.replace(/\\.js/g, '.min.js')\n- // c.plugins.push(terser({\n- // output: {\n- // comments: '/^!/'\n- // }\n- // }))\n- // })\n- // }\n+ if (process.env.MINIFY === 'true') {\n+ config = config.filter((c) => !!c.output.file)\n+ config.forEach((c) => {\n+ c.output.file = c.output.file.replace(/\\.js/g, '.min.js')\n+ c.plugins.push(terser({\n+ output: {\n+ comments: '/^!/'\n+ }\n+ }))\n+ })\n+ }\nreturn config\n}\n",
        "human": "build: added image to core",
        "race": "chore: re-enable build",
        "zeroshot": "Refactor rollup configuration and add minification support",
        "rag": "refactor: improve code structure and add comments in rollup config file",
        "classified_rag": "chore: Refactor banner text variable assignment and capitalize function in rollup config file",
        "nngen": "refactor(rollup): simplify config file",
        "type": "build"
    },
    {
        "diff": "diff --git a/src/common/components/views/Sidebar/index.jsx b/src/common/components/views/Sidebar/index.jsx @@ -33,19 +33,26 @@ export default class SidebarComponent extends Component {\nconst routes = routing.map((route, i) => {\nconst {external, path, icon, name, strict, exact} = route\n- let propsMenuItem = {\n+ // props that are applicable for both \"plain link, i.e. <a>\" and \"RR Link\"\n+ const basicProps = {\nas: external ? 'a' : NavLink,\nlink: true,\n[external ? 'href' : 'to']: path\n}\n- if (!external) {\n- propsMenuItem = {\n- ...propsMenuItem,\n+ // is it's RR Link, then it has more props\n+ const externalProps = external\n+ ? {}\n+ : {\nstrict,\nexact,\nactiveClassName: 'active'\n}\n+\n+ // summarize\n+ const propsMenuItem = {\n+ ...externalProps,\n+ ...basicProps\n}\nreturn (\n",
        "human": "refactor(src/common/components/Sidebar): some style fixes",
        "race": "add comments and summarize props",
        "zeroshot": "Refactor SidebarComponent to improve readability and maintainability",
        "rag": "refactor(common.sidebar): optimize props assignment in SidebarComponent",
        "classified_rag": "refactor(Sidebar): improve props handling for menu items",
        "nngen": "feat(molecule/autosuggest): add accesibilty props and refactor for render one content component",
        "type": "refactor"
    },
    {
        "diff": "diff --git a/src/common/containers/App/index.jsx b/src/common/containers/App/index.jsx @@ -27,10 +27,9 @@ import {\n} from './style'\nimport type {RouteItem} from 'types'\nimport type {GlobalState} from 'reducers'\n-import type {Node} from 'react'\ntype Props = {\n- children: Node,\n+ children: React$Node,\n// Routes of app passed as props in `Root`\nroutes: Array<RouteItem>,\n// React-router `withRouter` props\n@@ -57,6 +56,7 @@ class App extends Component {\nconst {isLoggedIn} = this.props\nif (process.env.BROWSER) {\nconst {handleWindowResize} = this.props\n+ handleWindowResize()\nwindow.addEventListener('resize', handleWindowResize)\n}\nthis.checkAppAuthLogic(isLoggedIn)\n",
        "human": "feat(App): init handleWindowResize on App willMount\nfeat(App): init handleWindowResize on App willMount",
        "race": "Fix window resize event",
        "zeroshot": "Update children prop type to use React$Node and call handleWindowResize on window resize event in App component",
        "rag": "refactor: updated App component to use React$Node instead of Node and added handleWindowResize call on window resize event",
        "classified_rag": "refactor: updated children prop type to React$Node in App component",
        "nngen": "refactor(flow): add flow type to wrapComponentInAuthStrategy",
        "type": "feat"
    },
    {
        "diff": "diff --git a/examples/basic/src/server.js b/examples/basic/src/server.js @@ -5,6 +5,20 @@ import { renderToString } from 'react-dom/server';\nconst assets = require(process.env.RAZZLE_ASSETS_MANIFEST);\n+const cssLinksFromAssets = (assets, entrypoint) => {\n+ return assets.entrypoints[entrypoint] ? assets.entrypoints[entrypoint].css ?\n+ assets.entrypoints[entrypoint].css.map(asset=>\n+ `<link rel=\"stylesheet\" href=\"${asset}\">`\n+ ).join('') : '' : '';\n+};\n+};\n+const jsScriptTagsFromAssets = (assets, entrypoint, extra = '') => {\n+ return assets.entrypoints[entrypoint] ? assets.entrypoints[entrypoint].js ?\n+ assets.entrypoints[entrypoint].js.map(asset=>\n+ `<script src=\"${asset}\"${extra}></script>`\n+ ).join('') : '' : '';\n+};\n+\nexport const renderApp = (req, res) => {\nconst markup = renderToString(<App />);\n@@ -17,15 +31,11 @@ export const renderApp = (req, res) => {\n<meta charSet='utf-8' />\n<title>Welcome to Razzle</title>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n- ${\n- assets.client.css\n- ? `<link rel=\"stylesheet\" href=\"${assets.client.css}\">`\n- : ''\n- }\n+ ${cssLinksFromAssets(assets, 'client')}\n</head>\n<body>\n<div id=\"root\">${markup}</div>\n- <script src=\"${assets.client.js}\" defer crossorigin></script>\n+ ${jsScriptTagsFromAssets(assets, 'client', ' defer crossorigin')}\n</body>\n</html>`;\n",
        "human": "fix(example): use new assets manifest",
        "race": "Fixes for assets",
        "zeroshot": "Refactor server.js to extract functions for generating CSS links and JS script tags from assets.",
        "rag": "refactor(server): extract cssLinksFromAssets and jsScriptTagsFromAssets functions for better code organization",
        "classified_rag": "refactor(server): extract cssLinksFromAssets and jsScriptTagsFromAssets functions for better code organization",
        "nngen": "chore: remove useless development customization",
        "type": "fix"
    },
    {
        "diff": "diff --git a/.github/workflows/release.yml b/.github/workflows/release.yml @@ -16,8 +16,9 @@ jobs:\n- name: Checkout\nuses: actions/checkout@v1\n- name: Setup Node.js\n- uses: actions/setup-node@v1\n+ uses: actions/setup-node@v2\nwith:\n+ cache: npm\nnode-version: 14\n- name: Install dependencies\nrun: npm ci\n",
        "human": "ci(release): workflow uses 'npm' cache\n[skip ci]",
        "race": "Update setup-node action",
        "zeroshot": "Update Node.js setup to version 2 and add npm caching in release workflow.",
        "rag": "ci: upgrade Node.js setup to v2 and add npm caching",
        "classified_rag": "ci: update Node.js setup to v2 and add npm caching",
        "nngen": "ci: publish dep version",
        "type": "ci"
    },
    {
        "diff": "diff --git a/docs/app/Examples/collections/Table/Variations/TableExampleSortable.js b/docs/app/Examples/collections/Table/Variations/TableExampleSortable.js @@ -42,13 +42,13 @@ export default class TableExampleSortable extends Component {\n<Table sortable celled fixed>\n<Table.Header>\n<Table.Row>\n- <Table.HeaderCell sorted={column === 'name' && direction} onClick={this.handleSort('name')}>\n+ <Table.HeaderCell sorted={column === 'name' ? direction : null} onClick={this.handleSort('name')}>\nName\n</Table.HeaderCell>\n- <Table.HeaderCell sorted={column === 'age' && direction} onClick={this.handleSort('age')}>\n+ <Table.HeaderCell sorted={column === 'age' ? direction : null} onClick={this.handleSort('age')}>\nAge\n</Table.HeaderCell>\n- <Table.HeaderCell sorted={column === 'gender' && direction} onClick={this.handleSort('gender')}>\n+ <Table.HeaderCell sorted={column === 'gender' ? direction : null} onClick={this.handleSort('gender')}>\nGender\n</Table.HeaderCell>\n</Table.Row>\n",
        "human": "docs(TableExampleSortable): pass in null when that column shouldn't be sorted",
        "race": "fix table sortable example",
        "zeroshot": "Refactor sorting logic in TableExampleSortable component",
        "rag": "chore(table): update sorting logic in TableExampleSortable",
        "classified_rag": "fix(ui-kit): update sorting logic in TableExampleSortable to fix sorting functionality",
        "nngen": "docs(Table): add editable table demo",
        "type": "docs"
    },
    {
        "diff": "diff --git a/package.json b/package.json \"test\": \"npm run lint && npm run build:theme && cross-env CI_ENV=/dev/ BABEL_ENV=test karma start test/unit/karma.conf.js --single-run\",\n\"test:watch\": \"npm run build:theme && cross-env BABEL_ENV=test karma start test/unit/karma.conf.js\",\n\"test:unit\": \"jest\",\n- \"build:next\": \"rollup -c\"\n+ \"build:next\": \"rollup -c\",\n+ \"release\": \"node scripts/release.js\"\n},\n\"faas\": [\n{\n\"babel-preset-stage-2\": \"^6.24.1\",\n\"babel-regenerator-runtime\": \"^6.5.0\",\n\"chai\": \"^4.2.0\",\n+ \"chalk\": \"^4.1.0\",\n\"chokidar\": \"^1.7.0\",\n\"copy-webpack-plugin\": \"^5.0.0\",\n\"coveralls\": \"^3.0.3\",\n\"cp-cli\": \"^1.0.2\",\n\"cross-env\": \"^3.1.3\",\n\"css-loader\": \"^2.1.0\",\n+ \"enquirer\": \"^2.3.6\",\n\"es6-promise\": \"^4.0.5\",\n\"eslint\": \"^7.7.0\",\n\"eslint-config-prettier\": \"^6.11.0\",\n\"eslint-plugin-promise\": \"^4.2.1\",\n\"eslint-plugin-standard\": \"^4.0.1\",\n\"eslint-plugin-vue\": \"^6.2.2\",\n+ \"execa\": \"^4.0.3\",\n\"file-loader\": \"^1.1.11\",\n\"file-save\": \"^0.2.0\",\n\"gulp\": \"^4.0.0\",\n\"markdown-it-chain\": \"^1.3.0\",\n\"markdown-it-container\": \"^2.0.0\",\n\"mini-css-extract-plugin\": \"^0.4.1\",\n+ \"minimist\": \"^1.2.5\",\n\"mitt\": \"^2.1.0\",\n\"mocha\": \"^6.0.2\",\n\"node-sass\": \"^4.11.0\",\n",
        "human": "feat: add release script for release",
        "race": "Add release script and release script",
        "zeroshot": "Add new build script and update dependencies",
        "rag": "chore(package): update dependencies and add release script",
        "classified_rag": "chore(package): update build and release scripts in package.json",
        "nngen": "build(npm): :arrow_up: commander, eslint, eslint-plugin-node, lint-staged, regexp-tree, typescript",
        "type": "feat"
    },
    {
        "diff": "diff --git a/src/Dropdown.js b/src/Dropdown.js @@ -116,7 +116,7 @@ class Dropdown extends React.Component {\ngetMenuCtrl() {\nif (this._$menuCtrl) return this._$menuCtrl;\n- this._$menuCtrl = this.toggleRef.current;\n+ this._$menuCtrl = this.getToggle();\nreturn this._$menuCtrl;\n}\n",
        "human": "chore: use getToggle method",
        "race": "Fix dropdown menuCtrl",
        "zeroshot": "Refactor getMenuCtrl method to use getToggle function instead of toggleRef current.",
        "rag": "refactor: update getMenuCtrl method to use getToggle instead of toggleRef current",
        "classified_rag": "fix: updated getMenuCtrl method to use getToggle instead of toggleRef current",
        "nngen": "fix: [Bug] Uploader doesn't obey disabled prop",
        "type": "chore"
    },
    {
        "diff": "diff --git a/package.json b/package.json \"jsnext:main\": \"dist/es/index.js\",\n\"main\": \"dist/commonjs/index.js\",\n\"module\": \"dist/es/index.js\",\n- \"browser\": \"dist/umd/semantic-ui-react.min.js\",\n\"types\": \"index.d.ts\",\n+ \"unpkg\": \"dist/umd/semantic-ui-react.min.js\",\n\"files\": [\n\"src\",\n\"dist\",\n",
        "human": "chore(package): remove `browser` field\n* chore(package): remove `browser` field\nReverts changes introduced in fixes\n* Update package.json",
        "race": "chore: rename browser to unpkg",
        "zeroshot": "Update package.json to include unpkg field for UMD build of semantic-ui-react.",
        "rag": "chore: update package.json with jsnext:main, module, and unpkg configurations",
        "classified_rag": "chore: update unpkg in package.json",
        "nngen": "chore: use main:umd instead of browser\\nbrowser is consumed by webpack as first option, we want it to consume `module` instead.",
        "type": "chore"
    },
    {
        "diff": "diff --git a/packages/chakra-ui-core/src/CThemeProvider/tests/CThemeProvider.test.js b/packages/chakra-ui-core/src/CThemeProvider/tests/CThemeProvider.test.js import { toCSSVar } from '@chakra-ui/styled-system'\nimport { mount, shallowMount } from '@vue/test-utils'\nimport theme from '@chakra-ui/theme-vue'\n-import { getElementStyles } from '@/tests/test-utils'\n-\nimport CThemeProvider from '..'\n+import { getElementStyles } from '@/tests/test-utils'\ndescribe('CThemeProvider', () => {\nconst ChildComponent = {\n",
        "human": "chore: fix imports order",
        "race": "fix: import order",
        "zeroshot": "Fix import statement in CThemeProvider.test.js",
        "rag": "refactor(test): move getElementStyles import to the top of the file",
        "classified_rag": "test: update import in CThemeProvider test file",
        "nngen": "test(solo): decouple CENTRAL_ISSUER_NAME from vats package",
        "type": "chore"
    },
    {
        "diff": "diff --git a/src/common/api/utils/normalize.js b/src/common/api/utils/normalize.js +// @flow\nimport {normalize, schema} from 'normalizr'\nimport _ from 'lodash'\n@@ -11,7 +12,7 @@ import _ from 'lodash'\n// XXX: normalization is recommended, but not a must\n// you styill can write a bunch of custom code in your reducers to normalize every reqests\n-export const normalizeArrayOfItems = array => {\n+export const normalizeArrayOfItems = (array: Array<any>) => {\n// Flat array, if it had 2 levels of depth\nconst flatArray = _.flatten(array)\n// Create schema for field, e.g field is `data`\n@@ -22,6 +23,6 @@ export const normalizeArrayOfItems = array => {\nconst normalizedData = normalize(flatArray, dataListSchema)\n// Get `data` entities\nconst entities = normalizedData.entities.data\n- const count = normalizedData.result.length\n+ const count: number = normalizedData.result.length\nreturn {entities, count}\n}\n",
        "human": "feat(utils/normalize): add flow\nfeat(utils/normalize): add flow",
        "race": "flowify normalizeArrayOfItems",
        "zeroshot": "Add type annotation to count variable in normalizeArrayOfItems function",
        "rag": "style: add flow type annotations to normalizeArrayOfItems function",
        "classified_rag": "style(api): add type annotation for count variable in normalizeArrayOfItems function",
        "nngen": "test: array of schemas with r.is.valid",
        "type": "feat"
    },
    {
        "diff": "diff --git a/src/lib/customPropTypes.js b/src/lib/customPropTypes.js @@ -8,11 +8,11 @@ const typeOf = (...args) => Object.prototype.toString.call(...args)\n* Ensure a component can render as a give prop value.\n*/\nexport const as = (...args) => PropTypes.oneOfType([\n- PropTypes.string,\nPropTypes.func,\n+ PropTypes.string,\n+ PropTypes.symbol,\n])(...args)\n-\n/**\n* Similar to PropTypes.oneOf but shows closest matches.\n* Word order is ignored allowing `left chevron` to match `chevron left`.\n",
        "human": "feat(customPropTypes): allow to pass Symbol to `as`",
        "race": "Add symbol to as prop type",
        "zeroshot": "Add support for PropTypes.symbol in customPropTypes as function.",
        "rag": "refactor(customPropTypes): removed unnecessary PropTypes.string declaration",
        "classified_rag": "fix(customPropTypes): update as prop type validation logic",
        "nngen": "chore(card): update prop types to match new enums for range",
        "type": "feat"
    },
    {
        "diff": "diff --git a/.github/ISSUE_TEMPLATE/bug_report.md b/.github/ISSUE_TEMPLATE/bug_report.md @@ -14,7 +14,7 @@ assignees: ''\ngulp, grunt, webpack, etc. Thank you so much <3\n-->\n-- Versions: <!-- run this: node -e 'console.log(`node@${process.version}, ${process.platform}@${require(\\\"os\\\").release()}`)' -->\n+- Versions: <!-- run this: node -e 'console.log(`node@${process.version}, ${process.platform}@${require(\"os\").release()}`)' -->\n- `nodemon -v`:\n- Operating system/terminal environment (powershell, gitshell, etc):\n- Using Docker? What image:\n",
        "human": "docs: fix bug_report.md\nRemove backslash which throws an error (tested on OSX fish and CentOS bash)",
        "race": "Fix typo in comment in diff template",
        "zeroshot": "Fix typo in bug report template",
        "rag": "docs(github): fix formatting in bug report template",
        "classified_rag": "chore: update bug_report.md template for consistency",
        "nngen": "chore(ci): pin Node.js version",
        "type": "docs"
    },
    {
        "diff": "diff --git a/src/App.vue b/src/App.vue <div class=\"container mb-4 mt-4\">\n<div class=\"mb-4\">\n<h1 class=\"logo\">\n- <img alt=\"Logo\" src=\"./assets/logo.png\" width=\"50\">\n+ <router-link to=\"/\">\n+ <img alt=\"Logo\" src=\"./assets/logo.png\" width=\"50\" />\nOpen Drinks\n+ </router-link>\n</h1>\n</div>\n<footer class=\"container mt-4 text-center\">\n<hr />\n- <div>View the source or contribute a drink recipe on <a href=\"https://github.com/alfg/opendrinks\">GitHub</a>!</div>\n+ <div>\n+ View the source or contribute a drink recipe on\n+ <a\n+ href=\"https://github.com/alfg/opendrinks\"\n+ >GitHub</a>!\n+ </div>\n<a href=\"https://www.netlify.com\">\n<img src=\"https://www.netlify.com/img/global/badges/netlify-light.svg\" alt=\"Netlify\" />\n</a>\n<style>\n#app {\n- font-family: 'Avenir', Helvetica, Arial, sans-serif;\n+ font-family: \"Avenir\", Helvetica, Arial, sans-serif;\n-webkit-font-smoothing: antialiased;\n-moz-osx-font-smoothing: grayscale;\ncolor: #2c3e50;\n}\n.logo {\n- font-family: 'Pacifico', 'cursive';\n+ font-family: \"Pacifico\", \"cursive\";\n+}\n+.logo a {\n+ text-decoration: none;\n+ color: inherit;\n}\n</style>\n",
        "human": "feat: logo and header link to home page",
        "race": "Fix logo and add link to homepage",
        "zeroshot": "Refactor logo and footer styling in App.vue",
        "rag": "style: adjust logo styling in App.vue and add router link to home page",
        "classified_rag": "style: update logo font-family and link styling",
        "nngen": "docs: add who is using SFUI section",
        "type": "feat"
    },
    {
        "diff": "diff --git a/README.md b/README.md # reactstrap\n-Stateless React Components for Bootstrap.\n+Stateless React Components for Bootstrap 5.\n+\n+If you're using Bootstrap 4, you'll need to use [Reactstrap v8](https://reactstrap.github.io/legacy/8.10.1)\n## Getting Started\n",
        "human": "chore: update readme to link v8 docs",
        "race": "Add Reactstrap v8 note",
        "zeroshot": "Update Reactstrap version to support Bootstrap 5",
        "rag": "docs: Update Bootstrap version to 5 in README.md",
        "classified_rag": "docs: Update Bootstrap version to 5 in README",
        "nngen": "chore: [skip ci] add example in README",
        "type": "chore"
    },
    {
        "diff": "diff --git a/packages/chakra-ui-core/src/CInputGroup/CInputGroup.js b/packages/chakra-ui-core/src/CInputGroup/CInputGroup.js @@ -53,9 +53,7 @@ const CInputGroup = {\nconst clone = cloneVNode(vnode, h)\nreturn h(clone.componentOptions.Ctor, {\n...clone.data,\n- on: {\n- ...(clone.componentOptions.listeners || {})\n- },\n+ on: (clone.componentOptions.listeners || {}),\nprops: {\n...(clone.data.props || {}),\n...clone.componentOptions.propsData,\n",
        "human": "refactor: remove unnecessary spread.",
        "race": "Fix CInputGroup listeners",
        "zeroshot": "Refactor event listeners in CInputGroup component",
        "rag": "refactor(CInputGroup): simplify event listener handling in CInputGroup component",
        "classified_rag": "refactor(chakra-ui-core): Simplify event listener assignment in CInputGroup.",
        "nngen": "refactor: switch internal props to ...otherProps",
        "type": "refactor"
    },
    {
        "diff": "diff --git a/website/pages/with-vuepress.mdx b/website/pages/with-vuepress.mdx @@ -74,7 +74,7 @@ export default ({\n}\n}\n})\n-})\n+}\n```\nNow you can wrap your main application inside the Chakra `CThemeProvider` component by creating a layout wrapper in `theme/layouts/Layout.vue`.\n@@ -105,7 +105,11 @@ export default {\n## Using Chakra components\n-_In your `App.vue` file._\n+You can now use Chakra in your custom components for your theme in either your `theme/components` folder (available to other theme components),\n+or your `theme/global-components` folder (available to your markdown pages as well as other components).\n+Learn more about theme inheritance in the [Vuepress documentation](https://vuepress.vuejs.org/theme/inheritance.html#inheritance-strategy)\n+\n+_In your `my-component.vue` file._\n```vue\n<template>\n@@ -120,7 +124,7 @@ _In your `App.vue` file._\nimport { CBox, CButton } from '@chakra-ui/vue'\nexport default {\n- name: 'App',\n+ name: 'MyComponent',\ncomponents: {\nCBox,\nCButton\n@@ -128,3 +132,13 @@ export default {\n}\n</script>\n```\n+\n+### Vuepress Codesandbox Starters\n+\n+Here's a link to sample component starter with Nuxt.js\n+\n+- [Vuepress Starter](https://codesandbox.io/s/chakra-ui-vuepress-starter-qx4up)\n+\n+### Storybook Components\n+\n+You can also view all developed components in [Storybook](https://chakra-ui-vue.netlify.com)!\n",
        "human": "docs: update vuepress docs with codesandbox starter",
        "race": "docs: add components section",
        "zeroshot": "Refactor Chakra UI integration and add component starter links",
        "rag": "docs: add Chakra component usage instructions to README",
        "classified_rag": "docs: update Chakra component usage instructions in README",
        "nngen": "docs(atom/tag): update readme",
        "type": "docs"
    },
    {
        "diff": "diff --git a/website/pages/docs/customization.md b/website/pages/docs/customization.md @@ -238,7 +238,7 @@ Here's an example `.babelrc` file:\n}\n```\n-You can [take a look at this file](https://github.com/jaredpalmer/razzle/blob/next/packages/babel-preset-razzle/index.js) to learn about the presets included by `razzle/babel`.\n+You can [take a look at this file](https://github.com/jaredpalmer/razzle/blob/finch/packages/babel-preset-razzle/index.js) to learn about the presets included by `razzle/babel`.\nTo add presets/plugins **without configuring them**, you can do it this way:\n",
        "human": "docs: fix link to babel preset",
        "race": "Fix broken link to .babelrc file",
        "zeroshot": "Update link to babel-preset-razzle file in customization.md",
        "rag": "docs(babel-preset-razzle): update link to presets file in customization.md\nThe link to the presets file in the customization.md has been updated to point to the correct location.",
        "classified_rag": "docs(babel-preset-razzle): update link to preset file in customization.md\nThe link to the preset file in the customization.md has been updated to point to the correct location.",
        "nngen": "docs: reference babel-standalone commit for registered plugins",
        "type": "docs"
    },
    {
        "diff": "diff --git a/package.json b/package.json \"test:unit:raw\": \"cd tests; karma start\",\n\"test:unit:debug\": \"cd tests; karma start --log-level debug\",\n\"test:image\": \"npm run test:image:raw | tap-spec\",\n- \"test:image:raw\": \"result=true; npm run test:image:server:down; npm run test:image:server:up && find packages/ -name '*.image.js' | xargs -n 1 babel-node || result=false; npm run test:image:server:down; ${result}\",\n+ \"test:image:raw\": \"result=true; npm run test:image:server:down; npm run test:image:server:up && find plugins/ -name '*.image.js' | xargs -n 1 babel-node || result=false; npm run test:image:server:down; ${result}\",\n\"test:image:server:up\": \"sh script/test-server-up.sh >.server.log\",\n\"test:image:server:down\": \"sh script/test-server-down.sh\",\n\"build:test:coverage\": \"cd tests; CANDELA_COVERAGE=1 webpack\",\n",
        "human": "test: make image tests work with plugin bundles",
        "race": "fix: image:raw script",
        "zeroshot": "Update test:image:raw script to search for image files in plugins directory instead of packages directory.",
        "rag": "test: update image test script to search in plugins directory",
        "classified_rag": "refactor: update test image script to search in plugins directory",
        "nngen": "build: fix e2e test failing in windows",
        "type": "test"
    },
    {
        "diff": "diff --git a/packages/razzle/config/createConfigAsync.js b/packages/razzle/config/createConfigAsync.js @@ -520,6 +520,7 @@ module.exports = (\n{\ntest: /\\.(js|jsx|mjs|ts|tsx)$/,\ninclude: [paths.appSrc].concat(additionalIncludes),\n+ use: [{\nloader: require.resolve('./babel-loader/razzle-babel-loader'),\noptions: {\nisServer: IS_NODE,\n@@ -531,6 +532,7 @@ module.exports = (\ndevelopment: IS_DEV,\nhasReactRefresh: shouldUseReactRefresh,\n},\n+ }]\n},\n]\n: [\n",
        "human": "fix(razzle): use \"use\" in newBabel rule",
        "race": "fix: add use block to babel-loader",
        "zeroshot": "Add custom babel loader configuration for razzle.",
        "rag": "refactor: update babel loader configuration in createConfigAsync",
        "classified_rag": "feat: add custom babel loader options for razzle config",
        "nngen": "build(webpack): add loader for bootstrap.native",
        "type": "fix"
    },
    {
        "diff": "diff --git a/src/routes/__layout.svelte b/src/routes/__layout.svelte import '../styles.postcss'\n// https://mattjennings.io/blog/how-to-use-fathom-analytics-with-sveltekit\n- onMount(async () => {\n+ onMount(() => {\nthemeChange(false)\nFathom.load(import.meta.env.VITE_FATHOM_ID, {\nurl: import.meta.env.VITE_FATHOM_URL,\n",
        "human": "chore: :wrench: remove async",
        "race": "Remove async from onMount",
        "zeroshot": "Remove async function from onMount and update Fathom analytics configuration",
        "rag": "refactor(layout): remove async keyword from onMount function",
        "classified_rag": "refactor: remove unnecessary async function from onMount in __layout.svelte",
        "nngen": "chore: Removed unused data from blog page",
        "type": "chore"
    },
    {
        "diff": "diff --git a/packages/chakra-ui-docs/docs/tag.mdx b/packages/chakra-ui-docs/docs/tag.mdx +import SEO from '../components/SEO'\n+\n+<SEO\n+ title=\"Tag\"\n+ description=\"Tag component is used for items that need to be labeled, categorized, or organized using keywords that describe them.\"\n+/>\n+\n# Tag\n+\n+Tag component is used for items that need to be labeled, categorized, or organized using keywords that describe them.\n+\n+## Import\n+\n+Chakra UI Vue exports 4 Tag related components:\n+\n+- **CTag**: The wrapper for all the tag elements\n+- **CTagLabel**: The label for tag's text content.\n+- **CTagIcon**: The icon for the tag\n+- **CTagCloseButton**: The close button for the tag.\n+\n+```js\n+import { CTag, CTagIcon, CTagLabel, CTagCloseButton } from '@chakra-ui/vue'\n+```\n+\n+## usage\n+\n+```vue live=true\n+<c-tag>Awesome Tag</c-tag>\n+```\n+\n+```vue live=true\n+<template>\n+ <c-stack :spacing=\"4\" is-inline>\n+ <c-tag v-for=\"size in sizes\" :size=\"size\" :key=\"size\" variantColor=\"vue\">\n+ Vue {{ size }}\n+ </c-tag>\n+ </c-stack>\n+</template>\n+<script>\n+export default {\n+ data() {\n+ return {\n+ sizes: ['sm', 'md', 'lg']\n+ }\n+ }\n+}\n+</script>\n+```\n+\n+## With left icon\n+\n+```vue live=true\n+<template>\n+ <c-stack :spacing=\"4\" is-inline>\n+ <c-tag v-for=\"size in sizes\" :size=\"size\" :key=\"size\" variant-color=\"cyan\">\n+ <c-tag-icon icon=\"add\" size=\"12px\" />\n+ <c-tag-label>New {{ size }}</c-tag-label>\n+ </c-tag>\n+ </c-stack>\n+</template>\n+<script>\n+export default {\n+ data() {\n+ return {\n+ sizes: ['sm', 'md', 'lg']\n+ }\n+ }\n+}\n+</script>\n+```\n+\n+## With right icon\n+\n+```vue live=true\n+<c-stack :spacing=\"4\" is-inline>\n+ <c-tag variant-color=\"cyan\">\n+ <c-tag-label>Cyan</c-tag-label>\n+ <c-tag-icon icon=\"check\" size=\"12px\" />\n+ </c-tag>\n+</c-stack>\n+```\n+\n+## With close button\n+\n+```vue live=true\n+<template>\n+ <c-stack :spacing=\"4\" is-inline>\n+ <c-tag\n+ v-for=\"size in sizes\"\n+ :size=\"size\"\n+ :key=\"size\"\n+ variant=\"solid\"\n+ variant-color=\"cyan\"\n+ >\n+ <c-tag-label>Close {{ size }}</c-tag-label>\n+ <c-tag-close-button />\n+ </c-tag>\n+ </c-stack>\n+</template>\n+<script>\n+export default {\n+ data() {\n+ return {\n+ sizes: ['sm', 'md', 'lg']\n+ }\n+ }\n+}\n+</script>\n+```\n+\n+## With custom element\n+\n+```vue live=true\n+<c-tag variant-color=\"red\" rounded=\"full\">\n+ <c-avatar\n+ src=\"https://bit.ly/sage-adebayo\"\n+ size=\"xs\"\n+ name=\"Segun Adebayo\"\n+ :ml=\"-1\"\n+ :mr=\"2\"\n+ />\n+ <c-tag-label>Segun</c-tag-label>\n+</c-tag>\n+```\n+\n+## Props\n+\n+| Name | Type | Default | Description |\n+| -------------- | ---------------------------- | -------- | --------------------------------------- |\n+| `variant` | `solid`, `subtle`, `outline` | `subtle` | The variant style of the tag component. |\n+| `size` | `sm`, `md`, `lg` | `lg` | The size of the tag component. |\n+| `variantColor` | `string` | `gray` | The color scheme of the tag variant. |\n",
        "human": "docs: documentation for tag component",
        "race": "add tag component",
        "zeroshot": "Add SEO component and update Tag component documentation",
        "rag": "feat(tag): add SEO component for Tag documentation, provide usage examples and props documentation",
        "classified_rag": "docs(Tag): Add SEO component and usage examples\nAdded SEO component for better search engine optimization and included usage examples for Tag component with left icon, right icon, close button, custom element, and props documentation.",
        "nngen": "docs(atom/tag): update doc",
        "type": "docs"
    },
    {
        "diff": "diff --git a/.github/stale.yml b/.github/stale.yml -# Number of days of inactivity before an issue becomes stale\n-daysUntilStale: 14\n-# Number of days of inactivity before a stale issue is closed\n-daysUntilClose: 7\n-# Issues with these labels will never be considered stale\n-exemptLabels:\n- - pinned\n- - security\n- - not-stale\n-# Label to use when marking an issue as stale\n-staleLabel: stale\n-# Comment to post when marking an issue as stale. Set to `false` to disable\n-markComment: >\n+name: Mark stale issues and pull requests\n+\n+on:\n+ schedule:\n+ - cron: \"0 * * * *\"\n+\n+jobs:\n+ stale:\n+\n+ runs-on: ubuntu-latest\n+ permissions:\n+ issues: write\n+ pull-requests: write\n+\n+ steps:\n+ - uses: actions/stale@v3\n+ with:\n+ repo-token: ${{ secrets.GITHUB_TOKEN }}\n+ days-before-stale: 14\n+ days-before-close: 30\n+ days-before-pr-close: -1\n+ stale-issue-label: 'stale'\n+ stale-pr-label: 'stale'\n+ stale-issue-message: >\nThis issue has been automatically marked as idle and stale because it hasn't\nhad any recent activity. It will be automtically closed if no further activity\noccurs. If you think this is wrong, or the problem still persists, just pop\na reply in the comments and @remy will (try!) to follow up.\nThank you for contributing <3\n-# Comment to post when closing a stale issue. Set to `false` to disable\n-closeComment: false\n+ close-issue-message: 'Automatically closing this issue due to lack of activity'\n+ exempt-issue-labels:\n+ - not-stale\n+ - security\n+ - pinned\n",
        "human": "chore: update stalebot\nThe OG stalebot seemed to crash out.",
        "race": "Update stale.yml to use new action",
        "zeroshot": "Update stale.yml to mark stale issues and pull requests with new configurations.",
        "rag": "feat(stale.yml): update stale issue and pull request handling logic and messages",
        "classified_rag": "ci: Update stale workflow to mark issues and pull requests as stale and close them after inactivity\nThe workflow now runs on a schedule and includes steps to mark issues and pull requests as stale after a certain number of days of inactivity. If no further activity occurs, they will be automatically closed. Thank you for contributing!",
        "nngen": "chore: update to org-wide config",
        "type": "chore"
    },
    {
        "diff": "diff --git a/src/collections/Form/FormField.js b/src/collections/Form/FormField.js @@ -143,11 +143,8 @@ FormField.propTypes = {\nPropTypes.object,\n]),\n- /** A field can show that input is mandatory. Requires a label. */\n- required: customPropTypes.every([\n- customPropTypes.demand(['label']),\n- PropTypes.bool,\n- ]),\n+ /** A field can show that input is mandatory. */\n+ required: PropTypes.bool,\n/** Passed to the control component (i.e. <input type='password' />) */\ntype: customPropTypes.every([\n",
        "human": "fix(formfield): relax label propType validator\nFixes",
        "race": "removes label prop from required prop",
        "zeroshot": "Refactor FormField propTypes for required field to show input is mandatory",
        "rag": "docs(form/FormField): update required prop docs",
        "classified_rag": "refactor: update required prop definition in FormField component",
        "nngen": "feat(atom/input): add pattern prop",
        "type": "fix"
    },
    {
        "diff": "diff --git a/src/plugins/optimize-graph-plugin.js b/src/plugins/optimize-graph-plugin.js @@ -176,7 +176,7 @@ class ChunkGraph {\nlet rep = typeof newUrl === 'function' ? newUrl(url, fn, quote) : newUrl;\nif (rep === false) return 'null';\nif (typeof rep === 'string') {\n- rep = JSON.stringify(publicPath ? toImport(publicPath, rep) : rep);\n+ rep = publicPath ? toImport(publicPath, rep) : JSON.stringify(rep);\n}\nreturn `${fn}(${rep})`;\n}\n@@ -187,9 +187,8 @@ class ChunkGraph {\n/**\n* @param {string} publicPath\n* @param {string} filename\n- * @param {boolean} [toJSON]\n*/\n-function toImport(publicPath, filename, toJSON) {\n+function toImport(publicPath, filename) {\nlet value = posix.join(publicPath, filename);\nif (/^(https?:)?\\/\\//.test(publicPath)) {\n@@ -198,7 +197,7 @@ function toImport(publicPath, filename, toJSON) {\nvalue = new URL(filename, root).href.substring(isFull ? 0 : 6);\n}\n- return toJSON ? JSON.stringify(value) : value;\n+ return JSON.stringify(value);\n}\n/**\n@@ -285,7 +284,7 @@ function hoistEntryCss(graph) {\n} else {\n// @TODO: this branch is actually unreachable\nif (DEBUG) console.log(`Hoisting CSS \"${f}\" imported by ${id} into parent HTML.`);\n- const url = toImport(graph.publicPath, f, true);\n+ const url = toImport(graph.publicPath, f);\nasset.source = getAssetSource(asset).replace(/<\\/head>/, `<link rel=\"stylesheet\" href=${url}></head>`);\n}\n}\n@@ -348,7 +347,7 @@ function hoistCascadedCss(graph, { cssMinSize }) {\nparentChunk.code += '\\n' + DEFAULT_STYLE_LOAD_IMPL;\n}\n- const url = toImport(graph.publicPath, fileName, true);\n+ const url = toImport(graph.publicPath, fileName);\nparentChunk.code += `\\n${meta.styleLoadFn}(${url});`;\n}\nbreak;\n@@ -390,7 +389,7 @@ function hoistTransitiveImports(graph) {\nappendCode += '\\n' + DEFAULT_STYLE_LOAD_IMPL;\n}\nif (DEBUG) console.log(`Preloading CSS for import(${spec}): ${css}`);\n- preloads.push(...css.map(f => `${meta.styleLoadFn}(${toImport(graph.publicPath, f, true)})`));\n+ preloads.push(...css.map(f => `${meta.styleLoadFn}(${toImport(graph.publicPath, f)})`));\n}\nconst js = deps.js.get(spec);\n",
        "human": "chore(optimize): always stringify `toImport` output",
        "race": "Remove toJSON parameter from toImport",
        "zeroshot": "Refactor toImport function and remove unnecessary parameter.",
        "rag": "refactor(graph): update toImport function to always return JSON.stringify value",
        "classified_rag": "refactor: update toImport function signature and usage in optimize-graph-plugin",
        "nngen": "chore: build static resources for IE",
        "type": "chore"
    },
    {
        "diff": "diff --git a/README.md b/README.md @@ -65,6 +65,7 @@ These great products are built on Semantic UI React. Add yours [here][22].\n- https://appfollow.io\n- http://according.to.localsourc.es\n- http://www.aircip.ir\n+- https://www.bailfacile.fr\n- http://platform.nazarbazaar.ir\n- https://build.games\n- https://platform.forecastcycles.com\n",
        "human": "docs(README.md): add bailfacile.fr to list of websites using Semantic UI React\nAdd website using Semantic UI React to list",
        "race": "Add Bailfacile to the list of products",
        "zeroshot": "Add new website to the list in README.md",
        "rag": "docs(readme): add Bailfacile link to list of great products built on Semantic UI React",
        "classified_rag": "docs(readme): add Bailfacile link to list of great products built on Semantic UI React",
        "nngen": "test: remove dead link testing - not working correctly",
        "type": "docs"
    },
    {
        "diff": "diff --git a/docs/app/Examples/collections/Table/Types/TableExamplePagination.js b/docs/app/Examples/collections/Table/Types/TableExamplePagination.js @@ -36,14 +36,14 @@ const TableExamplePagination = () => (\n<Table.HeaderCell colSpan='3'>\n<Menu floated='right' pagination>\n<Menu.Item as='a' icon>\n- <Icon name='left chevron' />\n+ <Icon name='chevron left' />\n</Menu.Item>\n<Menu.Item as='a'>1</Menu.Item>\n<Menu.Item as='a'>2</Menu.Item>\n<Menu.Item as='a'>3</Menu.Item>\n<Menu.Item as='a'>4</Menu.Item>\n<Menu.Item as='a' icon>\n- <Icon name='right chevron' />\n+ <Icon name='chevron right' />\n</Menu.Item>\n</Menu>\n</Table.HeaderCell>\n",
        "human": "docs(TableExamplePagination): order icon names per docs\nAccording to `chevron left` and `chevron right` should be used.",
        "race": "docs(table): fix table example pagination",
        "zeroshot": "Update pagination icons in TableExamplePagination component",
        "rag": "style(table): update pagination chevron icons in TableExamplePagination",
        "classified_rag": "fix(docs): update chevron icon names in TableExamplePagination",
        "nngen": "refactor: change training status location",
        "type": "docs"
    },
    {
        "diff": "diff --git a/src/NativeScript/Marshalling/Reference/ExtVectorTypeInstance.cpp b/src/NativeScript/Marshalling/Reference/ExtVectorTypeInstance.cpp @@ -91,24 +91,30 @@ void ExtVectorTypeInstance::finishCreation(JSC::VM& vm, JSCell* innerType, bool\nsize_t arraySize = this->_size;\n#if defined(__x86_64__)\n- if (this->_size % 2 && isStructMember) {\n- arraySize = this->_size + 1;\n- }\n+ // We need isStructMember because double3 vectors are handled\n+ // differently in x86_64. When a vector is a struct field\n+ // it is passed in memory but when not - the ST0 register is\n+ // used for the third element. In armv8 double3 vector will always\n+ // be passed in memory (as it's size > 16).\n+ if (this->_size == 3 && isStructMember) {\n#else\n- if (this->_size % 2) {\n- arraySize = this->_size + 1;\n- }\n+ // For armv8 we always need to pass the array size\n+ // as the vector would fill a whole register in order\n+ // to calculate the proper flags value.\n+ if (this->_size == 3) {\n#endif\n+ arraySize = 4;\n+ }\nffi_type* type = new ffi_type({ .size = arraySize * innerFFIType->size, .alignment = innerFFIType->alignment, .type = FFI_TYPE_EXT_VECTOR });\n- type->elements = new ffi_type*[arraySize + 1];\n+ type->elements = new ffi_type*[this->_size + 1];\n- for (size_t i = 0; i < arraySize; i++) {\n+ for (size_t i = 0; i < this->_size; i++) {\ntype->elements[i] = innerFFIType;\n}\n- type->elements[arraySize] = nullptr;\n+ type->elements[this->_size] = nullptr;\nthis->_extVectorType = type;\nthis->_ffiTypeMethodTable.ffiType = type;\nthis->_ffiTypeMethodTable.read = &read;\n",
        "human": "refactor: Add comments for arch-dependent code",
        "race": "Fix double3 vector in armv8",
        "zeroshot": "Refactor ExtVectorTypeInstance to handle double3 vectors differently on x86_64 and armv8",
        "rag": "refactor: improve handling of vector size and struct members in ExtVectorTypeInstance",
        "classified_rag": "refactor(NativeScript): improve handling of vector sizes in ExtVectorTypeInstance",
        "nngen": "feat: move more shared props and methods to Layer mixin",
        "type": "refactor"
    },
    {
        "diff": "diff --git a/test/tests/razzle-start-spa.test.js b/test/tests/razzle-start-spa.test.js @@ -33,7 +33,6 @@ describe('razzle start', () => {\n}\n);\nchild.stdout.on('data', data => {\n- console.log(data);\nif (data.includes('> SPA Started on port 3000')) {\nshell.exec('sleep 5');\nconst devServerOutput = shell.exec(\n@@ -43,10 +42,6 @@ describe('razzle start', () => {\nkill(child.pid);\n}\n});\n- child.stderr.on('data', data => {\n- console.log(data);\n- kill(child.pid);\n- });\n});\nreturn run.then((test) => expect(test).toBeTruthy());\n});\n",
        "human": "fix: remove lines that snuk in during testing",
        "race": "Remove debug logging from diff",
        "zeroshot": "Remove unnecessary console.log statements and error handling in razzle-start-spa.test.js",
        "rag": "test: Remove unnecessary console.log statements and error handling in razzle start test",
        "classified_rag": "test(razzle-start): remove unnecessary console.log statements",
        "nngen": "chore: fix lint errors in test/cli",
        "type": "fix"
    },
    {
        "diff": "diff --git a/docs/app/Components/ComponentDoc/ComponentProps/ComponentPropsComponents.js b/docs/app/Components/ComponentDoc/ComponentProps/ComponentPropsComponents.js @@ -7,7 +7,7 @@ import { updateForKeys } from 'docs/app/HOC'\nimport ComponentPropsComponent from './ComponentPropsComponent'\nconst ComponentPropsComponents = ({ activeName, components, onItemClick, parent }) => {\n- if (components.length === 1) return\n+ if (components.length === 1) return null\nreturn (\n<Menu color='green' compact size='small' secondary>\n",
        "human": "fix(docs): fix return agrument in ComponentPropsComponents",
        "race": "Fix component props menu",
        "zeroshot": "Fix return statement in ComponentPropsComponents to return null when components length is 1",
        "rag": "fix(componentpropscomponents): return null when components length is 1 to prevent rendering issues",
        "classified_rag": "fix(ComponentPropsComponents): fix return statement condition in ComponentPropsComponents",
        "nngen": "docs: Fix typo in Form Checkbox page\\nFix typo",
        "type": "fix"
    },
    {
        "diff": "diff --git a/docs/putout-script.md b/docs/putout-script.md @@ -34,7 +34,23 @@ The double low dush template value (`__`) abstracts away `Identifiers`, `Express\n## `__args` template value\n-The `__args` template value abstracts away a sequence of zero or more arguments.\n+The `__args` template value abstracts away a sequence of zero or more arguments, for `(__args) => __a`:\n+\n+```js\n+(a, b, c) => a + b + c\n+```\n+\n+`__args` can be linked. For example, the rule `((__args__a) => __c(__args__a))(__args__b)` will find:\n+\n+```js\n+((a) => fn(a))(value)\n+```\n+\n+But not:\n+\n+```js\n+((a) => fn(42))(value)\n+```\n## Function calls\n",
        "human": "docs: readme: linked __args",
        "race": "Add __args template value example",
        "zeroshot": "Refactor __args template value to handle sequence of arguments",
        "rag": "docs: update putout-script.md with additional examples for __args template value",
        "classified_rag": "docs: update putout-script.md with additional information on __args template value",
        "nngen": "feat: Add `_array.reduce` examples.",
        "type": "docs"
    },
    {
        "diff": "diff --git a/lib/plugins/services/analytics.js b/lib/plugins/services/analytics.js <% const { serviceMapping, serviceOptions, writeImportStatement, writeInjections } = options %>\n-export default async function (session) {\n+export default async function (session, firebase) {\n// Firebase Analytics can only be initiated on client side\nif (!process.client) {\nreturn\n@@ -10,6 +10,13 @@ export default async function (session) {\n<%= writeImportStatement(options) %>\n<% } %>\n+ // Only initialize it if the Browser supports it\n+ const isSupported = await firebase.analytics.isSupported()\n+ if (!isSupported) {\n+ console.info('[@nuxtjs/firebase]: Firebase Analytics was not initialized because it is not supported on this browser.')\n+ return\n+ }\n+\nconst analyticsService = session.<%= serviceMapping.id %>()\n<% if ('collectionEnabled' in serviceOptions) { %>\n",
        "human": "feat(analytics.issupported): added check whether browser supports Firebase Analytics before init",
        "race": "fix(analytics): only initialize Analytics if browser supports it",
        "zeroshot": "Add firebase parameter to analytics service function and check browser support before initializing Firebase Analytics",
        "rag": "feat(analytics): add firebase parameter to analytics service function, check browser support for Firebase Analytics before initialization",
        "classified_rag": "feat(analytics): add support for Firebase Analytics initialization on client side",
        "nngen": "feat(segment): add anonymous id sync",
        "type": "feat"
    },
    {
        "diff": "diff --git a/src/elements/Icon/index.d.ts b/src/elements/Icon/index.d.ts @@ -53,7 +53,7 @@ interface IconProps {\n}\ninterface IconComponent extends React.StatelessComponent<IconProps> {\n- Content: typeof IconGroup;\n+ Group: typeof IconGroup;\n}\nexport const Icon: IconComponent;\n",
        "human": "fix(Icon): Incorrect definition in typings",
        "race": "fix IconGroup typings",
        "zeroshot": "Update Icon component to use Group instead of Content",
        "rag": "chore(Proptypes): Renames Icon Content prop to Icon Group prop",
        "classified_rag": "fix(Icon): rename Content to Group in IconComponent interface",
        "nngen": "fix: fix EntryFields.RichText types",
        "type": "fix"
    },
    {
        "diff": "diff --git a/scripts/docs b/scripts/docs @@ -44,8 +44,8 @@ git config user.name \"Github Actions\"\ngit config user.email \"reactstrap@github.io\"\ngit add --all\ngit commit -m \"docs(Github Actions): publish documentation for $RELEASE_TAG ($GITHUB_SHA)\"\n-git push origin $BRANCH > /dev/null 2>&1\n+git push origin $BRANCH\ngit tag -a $VERSION -m \"docs $RELEASE_TAG\"\n-git push --tags > /dev/null 2>&1\n+git push --tags\nsuccess \"Successfully published documentation for $RELEASE_TAG ($GITHUB_SHA)!\"\n",
        "human": "chore(publish docs): don't silence output when pushing",
        "race": "Remove unnecessary /dev/null output",
        "zeroshot": "docs(Github Actions): update git push commands in publish documentation script",
        "rag": "chore: update documentation publishing process",
        "classified_rag": "docs: Update git push command in documentation script",
        "nngen": "chore(bump): update bump to use git flow",
        "type": "chore"
    },
    {
        "diff": "diff --git a/src/server/middlewares/index.js b/src/server/middlewares/index.js @@ -10,19 +10,19 @@ import chalk from 'chalk'\nimport path from 'path'\nimport authMiddleware from './auth'\n-export default function initGlobalMiddlewares () {\n+export default function initGlobalMiddlewares (app) {\nconst {DIST_PATH} = process.env\n// Add express stuff\n- this.use(helmet())\n- this.use(compression())\n- this.use(morgan('dev'))\n- this.use(cookieParser())\n- this.use(\n+ app.use(helmet())\n+ app.use(compression())\n+ app.use(morgan('dev'))\n+ app.use(cookieParser())\n+ app.use(\nexpress.static(DIST_PATH, {\n// Don't use index.html inside /dist dir\nindex: false\n})\n)\n- this.use(bodyParser.json())\n- this.use(authMiddleware)\n+ app.use(bodyParser.json())\n+ app.use(authMiddleware)\n}\n",
        "human": "refactor(server/middleware): use `app` arg instead of `this`",
        "race": "Fix middleware init",
        "zeroshot": "Refactor initGlobalMiddlewares to accept app parameter",
        "rag": "refactor(middlewares): refactor initGlobalMiddlewares function to accept 'app' parameter and use 'app' instead of 'this' for middleware initialization",
        "classified_rag": "refactor(middlewares): Update global middleware initialization function signature and use app instead of this",
        "nngen": "fix: memoryServer warning",
        "type": "refactor"
    },
    {
        "diff": "diff --git a/Dockerfile.gh b/Dockerfile.gh FROM node:alpine\nLABEL maintainer=\"rashley-iqt <rashley@iqt.org>\"\n-RUN apk update\n-RUN git config --global user.email \"clewis@iqt.org\"\n-RUN git config --global user.name \"Charlie Lewis\"\n+RUN apk update && apk add git\n+RUN git config --global user.email \"rashley@iqt.org\"\n+RUN git config --global user.name \"rashley-iqt\"\nCOPY . /app\nWORKDIR /app\n",
        "human": "fix: git not found error\nFixes by adding git seperately",
        "race": "Update Dockerfile.gh to use rashley-iqt",
        "zeroshot": "Update Dockerfile to install git and set correct user email and name",
        "rag": "refactor: update Dockerfile with improved git configuration and package installation",
        "classified_rag": "chore: update git config in dockerfile",
        "nngen": "ci(github-actions): replace user for `website` action.",
        "type": "fix"
    },
    {
        "diff": "diff --git a/src/plugins/process-global-plugin.js b/src/plugins/process-global-plugin.js * @returns {import('rollup').Plugin}\n*/\nexport default function processGlobalPlugin({ NODE_ENV = 'development', env = {} } = {}) {\n- const processObj = `{env:${JSON.stringify({ ...env, NODE_ENV })}}`;\n+ const processObj = JSON.stringify({ browser: true, env: { ...env, NODE_ENV } });\nreturn {\nname: 'process-global',\n",
        "human": "feat: add `process.browser` for compatibility",
        "race": "fix: process-global-plugin",
        "zeroshot": "Refactor processGlobalPlugin to include browser flag in process object",
        "rag": "chore: update processGlobalPlugin to include browser flag and stringify env object",
        "classified_rag": "fix: update processGlobalPlugin to correctly stringify processObj",
        "nngen": "docs(app): makes sure comments are removed",
        "type": "feat"
    },
    {
        "diff": "diff --git a/lib/monitor/match.js b/lib/monitor/match.js @@ -90,7 +90,9 @@ function rulesToMonitor(watch, ignore, config) {\nrule.slice(-1) === '*' &&\nrule.indexOf('*.') === -1) {\n- if (rule.slice(-2) !== '**') rule += '*/*';\n+ if (rule.slice(-2) !== '**') {\n+ rule += '*/*';\n+ }\n}\n",
        "human": "chore: fix linting issue",
        "race": "fix: linting errors",
        "zeroshot": "Refactor rulesToMonitor function to properly handle wildcard rules.",
        "rag": "style: improve code readability in rulesToMonitor function",
        "classified_rag": "refactor: improve rule handling in monitor module",
        "nngen": "feat: send rule value to pipe server",
        "type": "chore"
    },
    {
        "diff": "diff --git a/app/examples/dynamic-linechart/index.js b/app/examples/dynamic-linechart/index.js @@ -12,18 +12,6 @@ class DynamicLineChart extends LineChart {\nsuper.render();\nthis.emit('render');\n}\n-\n- data (data) {\n- this.options.data = data;\n-\n- this.chart.then(chart => {\n- let data = chart.data('data');\n- data.remove(() => true);\n- data.insert(this.options.data);\n-\n- chart.update();\n- });\n- }\n}\nlet data = [];\n@@ -58,7 +46,7 @@ window.onload = () => {\ncounter++;\n- vis.data(data);\n+ vis.update({data});\nvis.render();\n}, 1000);\n",
        "human": "test(DynamicLinechart): use new update() API",
        "race": "fix: dynamic linechart example",
        "zeroshot": "Refactor data method in DynamicLineChart class and update usage in window.onload event handler",
        "rag": "refactor: Update data method in DynamicLineChart class to use vis.update instead of vis.data",
        "classified_rag": "refactor(chart): update data method to accept data object and trigger chart update",
        "nngen": "chore: Remove chart notes",
        "type": "test"
    },
    {
        "diff": "diff --git a/test/fork/run-mac-only.test.js b/test/fork/run-mac-only.test.js @@ -9,7 +9,7 @@ const filenames = [\n[__dirname + 'some\\ \\\\file', '#!/bin/sh\\necho \"OK\"'],\n];\n-if (!process.env.TRAVIS && process.platform !== 'win32') {\n+if (!process.env.TRAVIS && process.platform === 'darwin') {\ndescribe('nodemon fork (mac only)', () => {\nbefore(() => {\nfilenames.map(file => fs.writeFileSync(file[0], file[1], 'utf8'));\n",
        "human": "test: only run run-mac-only.test.js in darwin platform",
        "race": "Fix mac only fork test",
        "zeroshot": "Fix platform check in run-mac-only test",
        "rag": "test(fork): update platform check for mac only test",
        "classified_rag": "test: run mac-only test on darwin platform only",
        "nngen": "test: bypass ssh-agent test on Windows for now",
        "type": "test"
    },
    {
        "diff": "diff --git a/docs/guide/options/README.md b/docs/guide/options/README.md @@ -316,9 +316,12 @@ auth: {\n}\n```\n-::: warning Session persistence\n+::: warning Programmatic server implementation\n-Make sure to initialize the nuxt build outside of the server request callback for session management to work properly:\n+If you are using an external server implementation to start nuxt programmatically:\n+\n+- The `@nuxtjs/firebase` module has to be included in your server package (`yarn add @nuxtjs/firebase`).\n+- Make sure to initialize the nuxt build outside of the server request callback for session management to work properly:\n```js\nimport express from 'express'\n",
        "human": "docs(auth): mention of package requirement for server implementation",
        "race": "docs(nuxt): add note about firebase",
        "zeroshot": "refactor: Update README.md to include instructions for programmatic server implementation",
        "rag": "docs: Update warning message for programmatic server implementation",
        "classified_rag": "docs: Update warning message for programmatic server implementation",
        "nngen": "docs(appium): add note about appium:options to caps doc",
        "type": "docs"
    },
    {
        "diff": "diff --git a/packages/chakra-ui-core/src/CProgress/tests/CProgress.test.js b/packages/chakra-ui-core/src/CProgress/tests/CProgress.test.js import { CProgress, CProgressLabel } from '../..'\n-import { render } from '@/tests/test-utils'\n+import { render, screen } from '@/tests/test-utils'\nconst renderComponent = (props) => {\nconst base = {\n@@ -19,31 +19,31 @@ it('should render correctly', () => {\n})\nit('should have the correct width', () => {\n- const { queryByRole } = renderComponent()\n+ renderComponent()\n- expect(queryByRole('progressbar')).toHaveStyle('width: 40%')\n+ expect(screen.queryByRole('progressbar')).toHaveStyle('width: 40%')\n})\nit('should display a label', () => {\n- const { queryByText } = renderComponent({\n+ renderComponent({\ntemplate: `\n<CProgress :value=\"40\">\n<CProgressLabel>Label</CProgressLabel>\n</CProgress>`\n})\n- expect(queryByText('Label')).toBeInTheDocument()\n+ expect(screen.queryByText('Label')).toBeInTheDocument()\n})\ntest('a11y - progress has a \"role\" set to \"progressbar\"', () => {\n- const { queryByRole } = renderComponent()\n- expect(queryByRole('progressbar')).toBeInTheDocument()\n+ renderComponent()\n+ expect(screen.queryByRole('progressbar')).toBeInTheDocument()\n})\ntest('a11y - progress has a \"aria-valuenow\" set to the percentage completion value', () => {\n- const { queryByRole } = renderComponent()\n+ renderComponent()\n- expect(queryByRole('progressbar')).toHaveAttribute(\n+ expect(screen.queryByRole('progressbar')).toHaveAttribute(\n'aria-valuenow',\n'40'\n)\n",
        "human": "test(progress): refactor use screen",
        "race": "Fix progress tests",
        "zeroshot": "refactor: Updated CProgress test to use screen instead of query methods",
        "rag": "test(chakra-ui-core): refactor CProgress component tests",
        "classified_rag": "test(CProgress): update test to use screen from test-utils for better readability and consistency",
        "nngen": "test(Root): add MoleculeBreadcrum tests",
        "type": "test"
    },
    {
        "diff": "diff --git a/src/server/ssr/index.js b/src/server/ssr/index.js * @flow\n* @desc\n*/\n-import React, {type Node} from 'react'\n-import fs from 'fs'\n+import React from 'react'\n+import {readFileSync} from 'fs'\n+import path from 'path'\n+import {sync as globSync} from 'glob'\nimport {renderToString} from 'react-dom/server'\nimport Helmet from 'react-helmet'\nimport createHistory from 'history/createMemoryHistory'\nimport {ServerStyleSheet, StyleSheetManager} from 'styled-components'\n-import {configureApp, configureRootComponent} from 'common/app'\n+import {configureRootComponent, configureApp} from 'common/app'\nimport IndexHTMLComponent from './IndexHTMLComponent'\n+import type {Node} from 'react'\nimport assets from 'webpack-assets'\nimport faviconsAssets from 'favicons-assets'\n+const translations = globSync('locals/*.json')\n+ .map(filename => [\n+ path.basename(filename, '.json'),\n+ readFileSync(filename, 'utf8')\n+ ])\n+ .map(([locale, file]) => [locale, JSON.parse(file)])\n+ .reduce((collection, [locale, messages]) => {\n+ collection[locale] = messages\n+ return collection\n+ }, {})\nexport default (req: Object, res: Object, next: () => void) => {\nconst {isLoggedIn, token} = req.user\nconst initialState: Object = isLoggedIn\n@@ -28,12 +41,12 @@ export default (req: Object, res: Object, next: () => void) => {\nroutes,\nSSR: {location, context}\n})\n- const App: Node = (\n+ const App: string = renderToString(\n<StyleSheetManager sheet={sheet.instance}>\n{RootComponent}\n</StyleSheetManager>\n)\n- const css = sheet.getStyleTags()\n+ const css: string = sheet.getStyleTags()\nconst preloadedState: Object = store.getState()\nconst props = {\ncss,\n@@ -42,6 +55,6 @@ export default (req: Object, res: Object, next: () => void) => {\ninitialState: preloadedState,\nApp\n}\n- const html: string = renderToString(<IndexHTMLComponent {...props} />)\n+ const html: string = IndexHTMLComponent(props)\nres.send(html)\n}\n",
        "human": "feat(ssr): add translations for ssr\nfeat(ssr): add translations for ssr",
        "race": "feat: add translations to ssr",
        "zeroshot": "Refactor SSR server code to improve performance and readability",
        "rag": "refactor(server): update SSR server to read translations from files and serve them",
        "classified_rag": "fix(src): update file imports and fix rendering logic in SSR index file",
        "nngen": "feat(DynamicComponent): provide gql & graphl ql as external dependency",
        "type": "feat"
    },
    {
        "diff": "diff --git a/lib/monitor/watch.js b/lib/monitor/watch.js @@ -39,25 +39,29 @@ function watch() {\nvar promises = [];\nvar watchedFiles = [];\n- dirs.forEach(function (dir) {\n- var promise = new Promise(function (resolve) {\n- var dotFilePattern = /[/\\\\]\\./;\n+ const promise = new Promise(function (resolve) {\n+ const dotFilePattern = /[/\\\\]\\./;\nvar ignored = Array.from(rootIgnored);\n+ const addDotFile = dirs.filter(dir => dir.match(dotFilePattern));\n// don't ignore dotfiles if explicitly watched.\n- if (!dir.match(dotFilePattern)) {\n+ if (addDotFile.length === 0) {\nignored.push(dotFilePattern);\n}\n+ dirs = dirs.map(dir => {\n// if the directory is a file, it somehow causes\n// windows to lose the filename upon change\nif (fs.statSync(dir).isFile()) {\ndir = path.dirname(dir);\n}\n+ return dir;\n+ });\n+\nvar watchOptions = {\nignorePermissionErrors: true,\n- cwd: dir,\n+ cwd: process.cwd(), // dir,\nignored: ignored,\npersistent: true,\nusePolling: config.options.legacyWatch || false,\n@@ -73,7 +77,7 @@ function watch() {\n}\nvar watcher = chokidar.watch(\n- dir,\n+ dirs,\nObject.assign({}, watchOptions, config.watchOptions || {})\n);\n@@ -114,10 +118,12 @@ function watch() {\nwatchers.push(watcher);\n});\n- promises.push(promise);\n- });\n- return Promise.all(promises).then(function (res) {\n+ return promise.catch(e => {\n+ setTimeout(() => {\n+ throw e;\n+ });\n+ }).then(function (res) {\nutils.log.detail(`watching ${watchedFiles.length} file${\nwatchedFiles.length === 1 ? '' : 's'}`);\nreturn watchedFiles;\n",
        "human": "fix: watch count regression\n* chore: revert package\n* fix: move to array of watched dirs\nInstead of individually listing them.\nFixes",
        "race": "fix: watch on windows",
        "zeroshot": "Refactor watch function to handle dotfiles and file directories properly",
        "rag": "refactor(monitor): refactor lib/monitor/watch.js to ES2015 syntax and improve error handling",
        "classified_rag": "refactor(monitor): refactor lib/monitor/watch.js to use ES2015 syntax and features",
        "nngen": "fix: usage `npx webpack`",
        "type": "fix"
    },
    {
        "diff": "diff --git a/src/features/visualization/d3-viz/setup-annotations.js b/src/features/visualization/d3-viz/setup-annotations.js @@ -40,7 +40,7 @@ const setupAnnotations = ({packedData, annotationRoot}) =>{\n.classed('svg-icon', true)\n.classed('nag', true)\n.style('font-size', (d) => (3 * d.height * fontScale) + \"%\")\n- .text('\\uf06a');\n+ .text('\\uf06a');//font-awesome\nannotations\n.select(`g.${className(\"change-icon-container\")}`)\n@@ -49,6 +49,7 @@ const setupAnnotations = ({packedData, annotationRoot}) =>{\n.attr('x', (d) => (getEdgePositionX(d.r, baseAngle(d))))\n.attr('y', (d) => (getEdgePositionY(d.r, baseAngle(d))))\n.on(\"click\", (d) => {\n+ //Brings up Ring-menu on click\nconst annotation = selectAll(`g.${className(\"annotation\")}[data-key=\"${datumKey(d)}\"]`);\nannotation\n@@ -119,7 +120,7 @@ const setupAnnotations = ({packedData, annotationRoot}) =>{\n.classed(className(\"node\"), true)\n.append('circle')\n.attr('r', (d) => 2 * d.height * leafRadius)\n- .attr('cx', (d) => (getEdgePositionX(d.r, baseAngle(d))) - 3.5*d.height*leafRadius)\n+ .attr('cx', (d) => (getEdgePositionX(d.r, baseAngle(d))) - 0*d.height*leafRadius)\n.attr('cy', (d) => (getEdgePositionY(d.r, baseAngle(d))) - 10*d.height*leafRadius);\nannotations\n@@ -155,7 +156,7 @@ const setupAnnotations = ({packedData, annotationRoot}) =>{\n.append(\"text\")\n.classed(className(\"annotation-text\"), true)\n.style('font-size', (d) => (2 * d.height * fontScale) + \"%\")\n- .attr('x', (d) => (getEdgePositionX(d.r, baseAngle(d))) + 3.5*d.height*leafRadius)\n+ .attr('x', (d) => (getEdgePositionX(d.r, baseAngle(d))) + 7*d.height*leafRadius)\n.attr('y', (d) => (getEdgePositionY(d.r, baseAngle(d))) - 10*d.height*leafRadius);\nannotations\n@@ -235,7 +236,7 @@ const setupAnnotations = ({packedData, annotationRoot}) =>{\n.classed(className(\"isChanged-fixed\"), true)\n.append('circle')\n.attr('r', (d) => 2 * d.height * leafRadius)\n- .attr('cx', (d) => (getEdgePositionX(d.r, baseAngle(d))) - 3.5 * d.height * leafRadius)\n+ .attr('cx', (d) => (getEdgePositionX(d.r, baseAngle(d))) - 0 * d.height * leafRadius)\n.attr('cy', (d) => (getEdgePositionY(d.r, baseAngle(d))) + 10 * d.height * leafRadius);\nannotations\n@@ -279,7 +280,7 @@ const setupAnnotations = ({packedData, annotationRoot}) =>{\n.append(\"text\")\n.classed(className(\"annotation-text\"), true)\n.style('font-size', (d) => (2 * d.height * fontScale) + \"%\")\n- .attr('x', (d) => (getEdgePositionX(d.r, baseAngle(d))) + d.height * leafRadius)\n+ .attr('x', (d) => (getEdgePositionX(d.r, baseAngle(d))) + 7 * d.height * leafRadius)\n.attr('y', (d) => (getEdgePositionY(d.r, baseAngle(d))) + 10 * d.height * leafRadius);\nannotations\n@@ -297,7 +298,7 @@ const setupAnnotations = ({packedData, annotationRoot}) =>{\n.classed(className(\"isRemoved-fixed\"), true)\n.append('circle')\n.attr('r', (d) => 2 * d.height * leafRadius)\n- .attr('cx', (d) => (getEdgePositionX(d.r, baseAngle(d))) + 6.5*d.height * leafRadius)\n+ .attr('cx', (d) => (getEdgePositionX(d.r, baseAngle(d))) + 7.5*d.height * leafRadius)\n.attr('cy', (d) => (getEdgePositionY(d.r, baseAngle(d))));\nannotations\n@@ -341,7 +342,7 @@ const setupAnnotations = ({packedData, annotationRoot}) =>{\n.append(\"text\")\n.classed(className(\"annotation-text\"), true)\n.style('font-size', (d) => (2 * d.height * fontScale) + \"%\")\n- .attr('x', (d) => (getEdgePositionX(d.r, baseAngle(d))) + 13*d.height * leafRadius)\n+ .attr('x', (d) => (getEdgePositionX(d.r, baseAngle(d))) + 14*d.height * leafRadius)\n.attr('y', (d) => (getEdgePositionY(d.r, baseAngle(d))));\nannotations\n",
        "human": "style(annotations): align icons",
        "race": "Fixing annotation positioning",
        "zeroshot": "Update annotation setup in d3-viz with font-awesome icon and improved positioning.",
        "rag": "style(visualization): update font size and position of annotation text",
        "classified_rag": "style(visualization): adjust text positioning in setupAnnotations\ncode diff type: style",
        "nngen": "perf: changed stupidity of deleting and adding line every hover event",
        "type": "style"
    },
    {
        "diff": "diff --git a/packages/veui/src/components/Form/Fieldset.vue b/packages/veui/src/components/Form/Fieldset.vue }\"\nrole=\"group\"\nv-bind=\"attrs\"\n->\n- <template\n- v-if=\"$slots.label\"\n- slot=\"label\"\n>\n<slot name=\"label\"/>\n- </template>\n<slot/>\n- <template\n- v-if=\"$slots.tip\"\n- slot=\"tip\"\n- >\n<slot name=\"tip\"/>\n- </template>\n</veui-field>\n</template>\n",
        "human": "refactor: remove unnecessary template wrapper",
        "race": "fix: remove v-if from diff",
        "zeroshot": "Refactor Fieldset component to remove unnecessary template elements",
        "rag": "style: remove unnecessary template tags in Fieldset.vue",
        "classified_rag": "refactor: Remove unnecessary template elements in Fieldset component",
        "nngen": "style(text): fix code style",
        "type": "refactor"
    },
    {
        "diff": "diff --git a/scss/_utilities.scss b/scss/_utilities.scss @@ -112,11 +112,51 @@ $utilities: map-merge(\nclass: border,\nvalues: map-merge($theme-colors, (\"white\": $white))\n),\n+ \"border-top-color\": (\n+ property: border-top-color,\n+ class: border-top,\n+ values: map-merge($theme-colors, (\"white\": $white))\n+ ),\n+ \"border-right-color\": (\n+ property: border-right-color,\n+ class: border-right,\n+ values: map-merge($theme-colors, (\"white\": $white))\n+ ),\n+ \"border-bottom-color\": (\n+ property: border-bottom-color,\n+ class: border-bottom,\n+ values: map-merge($theme-colors, (\"white\": $white))\n+ ),\n+ \"border-left-color\": (\n+ property: border-right-color,\n+ class: border-left,\n+ values: map-merge($theme-colors, (\"white\": $white))\n+ ),\n\"border-width\": (\nproperty: border-width,\nclass: border,\nvalues: $border-widths\n),\n+ \"border-top-width\": (\n+ property: border-top-width,\n+ class: border-top,\n+ values: $border-widths\n+ ),\n+ \"border-right-width\": (\n+ property: border-right-width,\n+ class: border-right,\n+ values: $border-widths\n+ ),\n+ \"border-bottom-width\": (\n+ property: border-bottom-width,\n+ class: border-bottom,\n+ values: $border-widths\n+ ),\n+ \"border-left-width\": (\n+ property: border-left-width,\n+ class: border-left,\n+ values: $border-widths\n+ ),\n// Sizing utilities\n\"width\": (\nproperty: width,\n",
        "human": "feat: add `border-{top | right | bottom | left}-color` and `border-{top | right | bottom | left}-width` utilities",
        "race": "Add border utilities",
        "zeroshot": "Add border color and width utility classes for all sides",
        "rag": "feat(scss): add border color and width utilities",
        "classified_rag": "feat(util.scss): Add border color and width utility classes",
        "nngen": "feat(tabs): added vertical tabs",
        "type": "feat"
    },
    {
        "diff": "diff --git a/packages/kiwi-core/src/Breadcrumb/index.js b/packages/kiwi-core/src/Breadcrumb/index.js @@ -86,7 +86,7 @@ const BreadcrumbItem = {\n},\nsetup (props, context) {\nreturn () => {\n- const children = context.slots.default()\n+ const children = context.slots.default().filter(e => e.tag)\nconst clones = cloneVNodes(children, h).map((clone) => {\nif (clone.componentOptions.tag === BreadcrumbLink.name) {\nconst { propsData } = clone.componentOptions\n@@ -142,7 +142,7 @@ const Breadcrumb = {\n},\nsetup (props, context) {\nreturn () => {\n- const children = context.slots.default()\n+ const children = context.slots.default().filter(e => e.tag)\nconst clones = cloneVNodes(children, h)\n.map((node, index, array) => {\nconst { propsData } = node.componentOptions\n",
        "human": "fix(breadcrumb): filter empty slots",
        "race": "Fix breadcrumb tag",
        "zeroshot": "Refactor Breadcrumb component to filter out non-element nodes",
        "rag": "refactor(core-breadcrumb): filter out non-element children in Breadcrumb component",
        "classified_rag": "fix: filter out non-tag elements in default slot children",
        "nngen": "feat(molecule/buttonGroup): iIFE removal",
        "type": "fix"
    },
    {
        "diff": "diff --git a/html/package-lock.json b/html/package-lock.json \"requires\": true,\n\"packages\": {\n\"\": {\n+ \"name\": \"html\",\n\"license\": \"MIT\",\n\"devDependencies\": {\n\"@babel/eslint-parser\": \"^7.19.1\",\n\"dev\": true\n},\n\"node_modules/json5\": {\n- \"version\": \"1.0.1\",\n- \"resolved\": \"https://registry.npmjs.org/json5/-/json5-1.0.1.tgz\",\n- \"integrity\": \"sha512-aKS4WQjPenRxiQsC93MNfjx+nbF4PAdYzmd/1JIj8HYzqfbu86beTuNgXDzPknWk0n0uARlyewZo4s++ES36Ow==\",\n+ \"version\": \"1.0.2\",\n+ \"resolved\": \"https://registry.npmjs.org/json5/-/json5-1.0.2.tgz\",\n+ \"integrity\": \"sha512-g1MWMLBiz8FKi1e4w0UyVL3w+iJceWAFBAaBnnGKOpNa5f8TLktkbre1+s6oICydWAm+HRUGTmI+//xv2hvXYA==\",\n\"dev\": true,\n\"dependencies\": {\n\"minimist\": \"^1.2.0\"\n\"dev\": true\n},\n\"json5\": {\n- \"version\": \"1.0.1\",\n- \"resolved\": \"https://registry.npmjs.org/json5/-/json5-1.0.1.tgz\",\n- \"integrity\": \"sha512-aKS4WQjPenRxiQsC93MNfjx+nbF4PAdYzmd/1JIj8HYzqfbu86beTuNgXDzPknWk0n0uARlyewZo4s++ES36Ow==\",\n+ \"version\": \"1.0.2\",\n+ \"resolved\": \"https://registry.npmjs.org/json5/-/json5-1.0.2.tgz\",\n+ \"integrity\": \"sha512-g1MWMLBiz8FKi1e4w0UyVL3w+iJceWAFBAaBnnGKOpNa5f8TLktkbre1+s6oICydWAm+HRUGTmI+//xv2hvXYA==\",\n\"dev\": true,\n\"requires\": {\n\"minimist\": \"^1.2.0\"\n",
        "human": "chore(npm): update",
        "race": "chore: update diff to use npm audit",
        "zeroshot": "Update json5 package to version 1.0.2",
        "rag": "chore: upgrade dependency json5 in html package",
        "classified_rag": "chore: upgrade dependency json5 in html package",
        "nngen": "chore: clean up root package-lock.json",
        "type": "chore"
    },
    {
        "diff": "diff --git a/examples/with-loadable-components/package.json b/examples/with-loadable-components/package.json },\n\"devDependencies\": {\n\"@babel/core\": \"^7.12.10\",\n- \"@loadable/babel-plugin\": \"^5.15.0\",\n+ \"@loadable/babel-plugin\": \"^5.13.2\",\n\"@loadable/webpack-plugin\": \"^5.15.0\",\n\"babel-preset-razzle\": \"4.0.4\",\n\"mini-css-extract-plugin\": \"^0.9.0\",\n",
        "human": "fix(examples): use a valid version",
        "race": "Update babel-plugin to 5.13.2",
        "zeroshot": "Update @loadable/babel-plugin to version 5.13.2",
        "rag": "chore: update @loadable/babel-plugin version to 5.13.2",
        "classified_rag": "chore: update loadable babel plugin version to fix compatibility issues",
        "nngen": "chore: upgrate dependencies",
        "type": "fix"
    },
    {
        "diff": "diff --git a/packages/chakra-ui-docs/docs/tabs.mdx b/packages/chakra-ui-docs/docs/tabs.mdx @@ -22,10 +22,10 @@ import { CTabs, CTabList, CTabPanels, CTab, CTabPanel } from '@chakra-ui/vue'\n## Usage\n-You can render any element within `Tabs`, but `TabList` should only have `Tab`\n-as children, and `TabPanels` should have `TabPanel` as children.\n+You can render any element within `CTabs`, but `CTabList` should only have `CTab`\n+as children, and `CTabPanels` should have `CTabPanel` as children.\n-Tabs expects `TabList` and `TabPanels` as children. The order doesn't matter,\n+Tabs expects `CTabList` and `CTabPanels` as children. The order doesn't matter,\nyou can have tabs at the top, at the bottom, or both.\n```vue live=true\n@@ -243,10 +243,10 @@ Stretch the tab list to fit the container by passing `isFitted` prop.\n## Manually Activated Tabs\n-By default, `Tabs` are activated automatically. This means when you use the\n+By default, `CTabs` are activated automatically. This means when you use the\narrow keys to change tabs, the tab is activated and focused.\n-> The content of a `TabPanel` should ideally be preloaded. However, if switching\n+> The content of a `CTabPanel` should ideally be preloaded. However, if switching\n> to a tab panel causes a network request and possibly a page refresh, there\n> might be some notable latency and this might affect the experience for\n> keyboard and screen reader users.\n@@ -311,7 +311,6 @@ Tabs composes `Box` so you call pass all `Box` related props.\n| Name | Type | Default | Description |\n| -------------- | --------------------------------------------------------------------------------- | ------------ | ------------------------------------------------------------------------------------------------------------------------------- |\n-| `onChange` | `(index: number) => void` | | The callback to update the active tab index. |\n| `index` | `number` | | The controlled index of the tabs. |\n| `defaultIndex` | `number` | | The index of the initial active tab. |\n| `isManual` | `boolean` | | If `true`, keyboard navigation changes focus between tabs but doens't activate it. User will have to press `Enter` to active it |\n@@ -321,6 +320,12 @@ Tabs composes `Box` so you call pass all `Box` related props.\n| `orientation` | `horizontal`, `vertical` | `horizontal` | The orientation of the tabs |\n| `isFitted` | `boolean` | | If `true`, the tabs will stretch to fill the available space |\n+### Tabs Events\n+\n+| Name | Description |\n+| ---------- | ------------------------ |\n+| `onChange` | Emits the @change event. |\n+\n### Tabs Slot\n| Name | Description |\n",
        "human": "fix(tabs.mdx): prefixed component names with C and moved",
        "race": "docs: update Tabs docs",
        "zeroshot": "Refactor Tabs component to use CTabs, CTabList, and CTabPanels for consistency. Add onChange event to Tabs component.",
        "rag": "docs(tabs): update component names and usage instructions\n\nUpdated the component names from `Tabs`, `TabList`, `TabPanels`, `Tab`, `TabPanel` to `CTabs`, `CTabList`, `CTabPanels`, `CTab`, `CTabPanel` respectively. Also, clarified the usage instructions for rendering elements within `CTabs` and its child components. Added information about the new events emitted by the `Tabs` component.",
        "classified_rag": "docs(chakra-ui-docs): update Tabs component names to match Chakra UI Vue naming conventions",
        "nngen": "feat(docs): document email tool\\nAdd documentation for using the email blast tool to send out the\\nweekly newsletter.",
        "type": "fix"
    },
    {
        "diff": "diff --git a/docs/app/Examples/collections/Form/Shorthand/FormExampleSubcomponentId.js b/docs/app/Examples/collections/Form/Shorthand/FormExampleSubcomponentId.js @@ -5,7 +5,7 @@ const FormExampleSubcomponentId = () => (\n<Form>\n<Form.Group widths='equal'>\n<Form.Input id='form-subcomponent-shorthand-input-first-name' label='First name' placeholder='First name' />\n- <Form.Input id='form-subcomponent-shorthand-input-last-name' label='First name' placeholder='First name' />\n+ <Form.Input id='form-subcomponent-shorthand-input-last-name' label='Last name' placeholder='Last name' />\n</Form.Group>\n</Form>\n)\n",
        "human": "docs(Form): fix typo in label",
        "race": "fixes form subcomponent id example",
        "zeroshot": "Fix typo in FormExampleSubcomponentId.js",
        "rag": "fix(form): correct placeholder text for last name input in FormExampleSubcomponentId",
        "classified_rag": "fix(form): correct placeholder text for last name input in FormExampleSubcomponentId",
        "nngen": "chore: Fix missing form name",
        "type": "docs"
    },
    {
        "diff": "diff --git a/packages/jss-plugin-default-unit/src/defaultUnits.js b/packages/jss-plugin-default-unit/src/defaultUnits.js @@ -121,6 +121,7 @@ export default {\n'font-size': px,\n'font-size-delta': px,\n'letter-spacing': px,\n+ 'text-decoration-thickness': px,\n'text-indent': px,\n'text-stroke': px,\n'text-stroke-width': px,\n",
        "human": "feat: add px as default unit for text-decoration-thickness property",
        "race": "fix(default-unit): add text-decoration-thickness to diff",
        "zeroshot": "Add support for 'text-decoration-thickness' unit in defaultUnits.js",
        "rag": "chore(design): Add text-decoration-thickness property to defaultUnits configuration",
        "classified_rag": "feat: Add `TEXT_DECORATION_THICKNESS` default unit",
        "nngen": "fix(ui5-multi-combobox): prevent setting max-width of dialog header on mobile\\nFIXES:",
        "type": "feat"
    },
    {
        "diff": "diff --git a/package.json b/package.json \"release\": \"lerna version patch && lerna publish from-package\",\n\"push\": \"git add -A && git commit -m \\\"chore(lerna): publishing package \\\" && lerna version --conventional-commits\",\n\"clean\": \"lerna run clean\",\n- \"storybook\": \"STORYBOOK_VUE_DEV_TOOLS=1 start-storybook -p 9000\",\n+ \"storybook\": \"cross-env STORYBOOK_VUE_DEV_TOOLS=1 start-storybook -p 9000\",\n\"storybook:devtools\": \"vue-devtools\",\n\"build-storybook\": \"build-storybook --quiet\",\n\"deploy-storybook\": \"storybook-to-ghpages -- --out=.out\",\n",
        "human": "feat: Add cross-env to accomodate Windows machines",
        "race": "chore: add cross-env to storybook",
        "zeroshot": "chore(package.json): Update start-storybook script to use cross-env",
        "rag": "chore: Updated storybook script to use cross-env for better compatibility",
        "classified_rag": "chore: Updated storybook script to use cross-env",
        "nngen": "chore: remove chromatic command",
        "type": "feat"
    },
    {
        "diff": "diff --git a/packages/chakra-ui-core/src/ThemeProvider/index.js b/packages/chakra-ui-core/src/ThemeProvider/index.js @@ -6,6 +6,11 @@ const ThemeProvider = {\nreturn {\n$theme: () => this.theme,\n$icons: this.icons,\n+ /**\n+ * By default the ThemeProvider exposes a colorMode value of light\n+ * If no `ColorModeProvider` is provided in children/ consumer app, all chakra\n+ * components will consume the $colorMode from here.\n+ */\n$colorMode: () => 'light'\n}\n},\n",
        "human": "docs: added colorMode docs",
        "race": "Add documentation for $colorMode",
        "zeroshot": "Add default colorMode value to ThemeProvider",
        "rag": "feat(themeProvider): add default colorMode value in ThemeProvider\n\nAdded a default colorMode value of 'light' in the ThemeProvider component to ensure consistency in color mode if no ColorModeProvider is provided in the consumer app. This will allow all Chakra components to consume the $colorMode from the ThemeProvider.",
        "classified_rag": "feat(theme-provider): adding default $colorMode value in ThemeProvider",
        "nngen": "feat(ui5-color-palette-popover): implement isOpen method",
        "type": "docs"
    },
    {
        "diff": "diff --git a/src/common/types/index.js b/src/common/types/index.js // @flow\n-export type PostItem = {\n- title: string,\n- body: string,\n- userId: number,\n- id: number\n-}\n-\n-export type UserItem = {\n- id: number,\n- name: string,\n- username: string,\n- email: string,\n- address: {\n- street: string,\n- suite: string,\n- city: string,\n- zipcode: string,\n- geo: {\n- lat: string,\n- lng: string\n- }\n- },\n- phone: string,\n- website: string,\n- company: {\n- name: string,\n- catchPhrase: string,\n- bs: string\n- }\n+export type LinkItem = {\n+ link: string,\n+ header: string,\n+ desc: string,\n+ icon: string\n}\nexport type RouteItem = {\n",
        "human": "feat(types): add LinkItem type, remove old types\nfeat(types): add LinkItem type, remove old types",
        "race": "[diff] Update diff to use LinkItem",
        "zeroshot": "Add LinkItem type and remove PostItem and UserItem types",
        "rag": "feat(types): add LinkItem type definition\nAdded a new type definition for LinkItem including properties for link, header, desc, and icon.",
        "classified_rag": "refactor(types): update PostItem and UserItem to LinkItem\nUpdated the types for PostItem and UserItem to be more descriptive and renamed them to LinkItem.",
        "nngen": "fix(fares): add fare_attributes#agency_id field to match gtfs-lib\\nfixes",
        "type": "feat"
    },
    {
        "diff": "diff --git a/.github/workflows/test.yml b/.github/workflows/test.yml # This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node\n# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions\n-name: Build & Test Components\n+name: PR Workflow\non:\n- # Trigger the workflow on push or pull request,\n- # but only for the master branch\n- push:\n+ pull_request:\nbranches:\n+ - master\n- develop\n- pull_request:\n+ push:\nbranches:\n- develop\n@@ -20,15 +19,24 @@ jobs:\nmatrix:\nnode-version: [12.x]\nsteps:\n- - uses: actions/checkout@v2\n+ - name: Checkout\n+ uses: actions/checkout@v2\n+\n- name: Use Node.js ${{ matrix.node-version }}\nuses: actions/setup-node@v1\nwith:\nnode-version: ${{ matrix.node-version }}\n- - run: yarn\n- - run: yarn bootstrap\n- - run: yarn lint\n- - run: yarn build --if-present\n- - run: yarn test\n+\n+ - name: Install dependencies\n+ run: yarn install --frozen-lockfile && yarn bootstrap\n+\n+ - name: Lint types and code\n+ run: yarn lint\n+\n+ - name: Build packages\n+ run: yarn build\n+\n+ - name: Run tests\n+ run: yarn test\nenv:\nCI: true\n\\ No newline at end of file\n",
        "human": "ci: improve workflow",
        "race": "Update workflow names",
        "zeroshot": "Refactor workflow to include PR trigger and update job steps.",
        "rag": "chore: update workflow steps and names for PR workflow and improved organization",
        "classified_rag": "ci: update PR workflow configuration and commands",
        "nngen": "ci(release): fix release.yml",
        "type": "ci"
    },
    {
        "diff": "diff --git a/components/SimilarityGraph/index.js b/components/SimilarityGraph/index.js import VisComponent from '../../VisComponent';\n-import d3 from 'd3';\n+import * as d3 from 'd3';\nimport cola from 'webcola';\nexport default class SimilarityGraph extends VisComponent {\n@@ -36,7 +36,8 @@ export default class SimilarityGraph extends VisComponent {\nconst h = bbox.height;\n// Initialize the cola object.\n- this.cola = cola.d3adaptor()\n+ console.log(d3);\n+ this.cola = cola.d3adaptor(d3)\n.linkDistance(linkDistance)\n.size([w, h]);\n@@ -73,11 +74,12 @@ export default class SimilarityGraph extends VisComponent {\n.selectAll('line.link')\n.data(this.links);\n- this.linkSelection.enter()\n+ this.linkSelection = this.linkSelection.enter()\n.append('line')\n.classed('link', true)\n.attr('stroke-width', 1)\n- .attr('stroke', 'gray');\n+ .attr('stroke', 'gray')\n+ .merge(this.linkSelection);\n// Create a D3 selection for the nodes, and initialize it with some circle\n// elements.\n@@ -85,14 +87,15 @@ export default class SimilarityGraph extends VisComponent {\n.selectAll('circle.node')\n.data(this.nodes);\n- this.nodeSelection.enter()\n+ this.nodeSelection = this.nodeSelection.enter()\n.append('circle')\n.classed('node', true)\n.attr('r', d => d.size)\n.style('stroke', 'black')\n.style('fill', d => d.color)\n.style('cursor', 'crosshair')\n- .call(this.cola.drag);\n+ .call(this.cola.drag)\n+ .merge(this.nodeSelection);\n// Create a D3 selection for node labels.\nthis.labelSelection = d3.select(this.svg)\n@@ -100,7 +103,7 @@ export default class SimilarityGraph extends VisComponent {\n.data(this.nodes);\nconst that = this;\n- this.labelSelection.enter()\n+ this.labelSelection = this.labelSelection.enter()\n.append('text')\n.classed('label', true)\n.text(d => d.id)\n@@ -109,7 +112,8 @@ export default class SimilarityGraph extends VisComponent {\nthat.nodes[i].height += bbox.height;\n})\n.style('cursor', 'crosshair')\n- .call(this.cola.drag);\n+ .call(this.cola.drag)\n+ .merge(this.labelSelection);\nthis.cola.on('tick', (...args) => {\nthis.nodeSelection\n",
        "human": "refactor(SimilarityGraph): update to use d3 v4",
        "race": "Fixing the problem with the similarity graph",
        "zeroshot": "Refactor code to use d3 library with webcola for graph visualization.",
        "rag": "fix: updated d3 import statement to use ES6 syntax and fixed link and node selection logic in SimilarityGraph component",
        "classified_rag": "fix: call d3 in SimilarityGraph component",
        "nngen": "fix(QKnob): emit immediately on desktop when starting drag",
        "type": "refactor"
    },
    {
        "diff": "diff --git a/src/websocket-plus.js b/src/websocket-plus.js @@ -41,14 +41,14 @@ class WebSocketPlus extends EventEmitter {\n);\n}\nsuper();\n- if (typeof getUrls !== 'function') {\n- this._getUrls = () => Promise.resolve(getUrls);\n- } else {\n- this._getUrls = getUrls;\n- }\n- this._protocol = protocol;\nthis.init();\n- this._createWs(this._getUrls, this._protocol)\n+ this._protocol = protocol;\n+ Promise.resolve(typeof getUrls === 'function' ? getUrls() : getUrls)\n+ .then(ensureArray)\n+ .then(urls => {\n+ this._urls = urls;\n+ return this._open();\n+ })\n.then(() => {\nthis.__postponeTimeoutTimer = this._postponeTimeoutTimer.bind(this);\nif (global.addEventListener) {\n@@ -62,14 +62,19 @@ class WebSocketPlus extends EventEmitter {\n.catch(this.throw.bind(this));\n}\n- _createWs(getUrls, protocol) {\n- return getUrls().then(urls =>\n- tryAll(\n- ensureArray(urls).map(url => (resolve, reject) => {\n+ _open() {\n+ return this._createWs(this._urls, this._protocol).then(ws => {\n+ const [first, ...reset] = this._urls;\n+ this._urls = [...reset, first];\n+ return ws;\n+ });\n+ }\n+\n+ _createWs(urls, protocol) {\n+ return tryAll(\n+ urls.map(url => (resolve, reject) => {\ndebug(`connect [${url}] ${protocol}`);\n- const ws = protocol\n- ? new WebSocket(url, protocol)\n- : new WebSocket(url);\n+ const ws = protocol ? new WebSocket(url, protocol) : new WebSocket(url);\nws.binaryType = this.binaryType || 'arraybuffer';\nws.onopen = () => resolve(ws);\nws.onclose = error => {\n@@ -86,8 +91,7 @@ class WebSocketPlus extends EventEmitter {\nthis._ws.onclose = this._handleClose.bind(this);\nthis._ws.onmessage = this._handleMessage.bind(this);\nreturn ws;\n- })\n- );\n+ });\n}\n_destroyWs() {\nconst ws = this._ws;\n@@ -141,7 +145,7 @@ class WebSocketPlus extends EventEmitter {\n}\nonretry(event, from, to, attempt = 0) {\nthis.emit(RETRY, attempt);\n- this._createWs(this._getUrls, this._protocol).then(\n+ this._open().then(\n() => (this.can('reconnect') ? this.reconnect() : this._destroyWs()),\n() => this.can('fail') && this.fail(attempt + 1)\n);\n",
        "human": "perf(webscoket): switch to another endpoint when reconnecting\nThis makes reconenction faster when a server is privated.",
        "race": "Fix websocket connect",
        "zeroshot": "Refactor WebSocketPlus class to improve URL handling and connection logic",
        "rag": "refactor(WebSocketPlus): simplify URL handling and WebSocket creation logic",
        "classified_rag": "refactor(WebSocketPlus): simplify URL handling and WebSocket creation logic",
        "nngen": "refactor(ui5-tokenizer): simplify invalidation",
        "type": "perf"
    },
    {
        "diff": "diff --git a/packages/razzle-plugin-eslint/index.js b/packages/razzle-plugin-eslint/index.js @@ -9,13 +9,6 @@ module.exports = {\nconst mainEslintOptions = {\nbaseConfig: {\nextends: [require.resolve('eslint-config-react-app')],\n- // This setting can be removed once this commit is released:\n- // https://github.com/facebook/create-react-app/commit/005ee5b9525d476d2eb2dfb5b8afcd15b65dd5d2\n- settings: {\n- react: {\n- version: 'detect',\n- },\n- },\n},\nformatter: eslintFormatter,\neslintPath: require.resolve('eslint'),\n@@ -33,7 +26,6 @@ module.exports = {\n},\n...config.module.rules,\n];\n-\nreturn config;\n},\n};\n",
        "human": "feat: update eslint plugin config",
        "race": "Remove react version detection from eslint config",
        "zeroshot": "Remove unnecessary eslint setting for detecting React version",
        "rag": "chore: remove unnecessary eslint settings in razzle-plugin-eslint configuration",
        "classified_rag": "chore: remove unnecessary eslint settings in razzle-plugin-eslint configuration",
        "nngen": "chore: clean up root package.json file",
        "type": "feat"
    },
    {
        "diff": "diff --git a/util/vega/index.js b/util/vega/index.js -import d3 from 'd3';\n+import { select } from 'd3-selection';\nimport vg from 'vega';\nimport { isArray, isString, read } from 'datalib';\nimport axisTemplate from './axis.json';\n@@ -386,7 +386,7 @@ let merge = function (defaults, options) {\nlet parseChart = function (spec, element, options) {\n// Use element size to set size, unless size explicitly specified or\n// element size is zero.\n- let el = d3.select(element)[0][0];\n+ let el = select(element).node();\nlet sizeOptions = {};\nconst size = getElementSize(el);\n",
        "human": "refactor: bring vega util function up to spec for d3 v4",
        "race": "Replace d3 with d3-selection in diff",
        "zeroshot": "Refactor code to use d3-selection for element selection",
        "rag": "util(vega): replace d3 with d3-selection in index.js\nReplace d3 import with select from d3-selection in vega/index.js to improve compatibility and functionality.",
        "classified_rag": "refactor: replace d3 with d3-selection in vega/index.js",
        "nngen": "refactor(engine): fix def.ts import order",
        "type": "refactor"
    },
    {
        "diff": "diff --git a/packages/chakra-ui-core/src/CBreadcrumb/CBreadcrumb.js b/packages/chakra-ui-core/src/CBreadcrumb/CBreadcrumb.js * @see Source https://github.com/chakra-ui/chakra-ui-vue/blob/master/packages/chakra-ui-core/src/CBreadcrumb/CBreadcrumb.js\n*/\n-\nimport { baseProps } from '../config/props'\nimport { forwardProps, cloneVNodeElement, cleanChildren } from '../utils'\n",
        "human": "feat(breadcrumb): add accessibility.md",
        "race": "fix: remove empty line",
        "zeroshot": "Refactor CBreadcrumb component to use baseProps and clean up imports",
        "rag": "style(CBreadcrumb): add missing comma",
        "classified_rag": "refactor(CBreadcrumb): removed unnecessary imports and comments",
        "nngen": "style(@ciscospark/spark-core): reorder imports",
        "type": "feat"
    },
    {
        "diff": "diff --git a/build/Dockerfile.build b/build/Dockerfile.build @@ -132,6 +132,6 @@ ENV GOPATH /go\nWORKDIR /build\nCOPY ./build/compile.sh .\n-RUN chmod +x ./compile.sh && ./compile.sh\n+RUN chmod +x ./compile.sh && ./compile.sh && rm ./compile.sh\nCOPY --from=notice /code/NOTICE ./\n",
        "human": "build: stop accidentally including compile script in tarball",
        "race": "Remove compile.sh after build",
        "zeroshot": "Add cleanup step in Dockerfile build process",
        "rag": "refactor(docker): improve build process in Dockerfile",
        "classified_rag": "chore: update compile script in Dockerfile",
        "nngen": "ci(test-build): try direct script run",
        "type": "build"
    },
    {
        "diff": "diff --git a/packages/chakra-ui-docs/docs/stack.mdx b/packages/chakra-ui-docs/docs/stack.mdx +import SEO from '../components/SEO'\n+\n+<SEO\n+ title=\"Stack\"\n+ description=\"Stack is a layout utility component that makes it easy to stack elements together and apply a space between them.\"\n+/>\n+\n# Stack\n+\n+Stack is a layout utility component that makes it easy to stack elements together and apply a space between them. It composes the [Flex](/flex) component.\n+\n+## Import\n+\n+```js\n+import { CStack } from '@chakra-ui/vue'\n+```\n+\n+By default, each item is stacked vertically. Stack clones it's children and passes the spacing to them using `margin-bottom` or `margin-right`.\n+\n+## Usage\n+\n+```vue live=true\n+<c-stack :spacing=\"5\">\n+ <c-box :p=\"5\" shadow=\"md\" border-width=\"1px\">\n+ <c-heading>See the Vue</c-heading>\n+ <c-text :mt=\"4\">Vue makes front-end development a breeze.</c-text>\n+ </c-box>\n+ <c-box :p=\"5\" shadow=\"md\" border-width=\"1px\">\n+ <c-heading>Go Nuxt!</c-heading>\n+ <c-text :mt=\"4\">Nuxt makes writing Vue even easier.</c-text>\n+ </c-box>\n+</c-stack>\n+```\n+\n+## Stack items horizontally\n+\n+To stack `CStack` children horizontally, pass the `isInline` prop or `direction` and set it to row.\n+\n+Optionally, you can use align and justify to adjust the alignment and distribution of the items.\n+\n+```vue live=true\n+<c-stack :spacing=\"5\" is-inline>\n+ <c-box :p=\"5\" shadow=\"md\" border-width=\"1px\">\n+ <c-heading>See the Vue</c-heading>\n+ <c-text :mt=\"4\">Vue makes front-end development a breeze.</c-text>\n+ </c-box>\n+ <c-box :p=\"5\" shadow=\"md\" border-width=\"1px\">\n+ <c-heading>Go Nuxt!</c-heading>\n+ <c-text :mt=\"4\">Nuxt makes writing Vue even easier.</c-text>\n+ </c-box>\n+</c-stack>\n+```\n+\n+## Reverse display order of items\n+\n+Pass the `isReversed` prop or set `direction` to `row-reverse` or `column-reverse`.\n+\n+```vue live=true\n+<c-stack :spacing=\"5\" is-reversed>\n+ <c-box :p=\"5\" shadow=\"md\" border-width=\"1px\">\n+ <c-heading>See the Vue</c-heading>\n+ <c-text :mt=\"4\">Vue makes front-end development a breeze.</c-text>\n+ </c-box>\n+ <c-box :p=\"5\" shadow=\"md\" border-width=\"1px\">\n+ <c-heading>Go Nuxt!</c-heading>\n+ <c-text :mt=\"4\">Nuxt makes writing Vue even easier.</c-text>\n+ </c-box>\n+</c-stack>\n+```\n+\n+## Props\n+\n+| Name | Type | Default | Description |\n+| -------------------- | ----------------------------- | ------- | ------------------------------------------------------------------------------------------------------------------------ |\n+| `isInline` | `boolean` | false | If `true` the items will be stacked horizontally. |\n+| `isReversed` | `boolean` | false | If `true` the items will be displayed in reverse order. |\n+| `direction` | `FlexProps[\"flexDirection\"]` | | The direction to stack the items. |\n+| `spacing` | `StyledSystem.MarginProps` | | The space between each stack item |\n+| `align` | `FlexProps[\"alignItems\"]` | | The alignment of the stack item. Similar to `align-items` |\n+| `justify` | `FlexProps[\"justifyContent\"]` | | The distribution of the stack item. Similar to `justify-content` |\n+| `shouldWrapChildren` | `boolean` | | If `true`, the children will be wrapped in a `Box` with `display: inline-block`, and the Box will take the spacing props |\n+\n+## Slots\n+\n+| Name | Description |\n+| ------- | ------------------------ |\n+| default | The content of the stack |\n",
        "human": "docs(stack.mdx): documentation for the Stack component",
        "race": "Add stack component",
        "zeroshot": "Add SEO component to Stack documentation and update usage instructions",
        "rag": "feat(docs): add documentation for the Stack component in Chakra UI Vue\n\nAdded detailed documentation for the Stack component in Chakra UI Vue, including information on importing, usage examples for stacking items vertically and horizontally, reversing display order, available props, and slots. This documentation will help users understand how to effectively use the Stack component in their Vue projects.",
        "classified_rag": "docs(Stack): add documentation for Stack component props and slots",
        "nngen": "docs(getting-started): Initial draft of getting-started guide",
        "type": "docs"
    },
    {
        "diff": "diff --git a/packages/chakra-ui-core/src/CBox/tests/CBox.test.js b/packages/chakra-ui-core/src/CBox/tests/CBox.test.js import CBox from '../'\n-import { render } from '@/tests/test-utils'\n+import { render, screen } from '@/tests/test-utils'\nconst renderComponent = (props) => {\nconst inlineAttrs = (props && props.inlineAttrs) || ''\n@@ -22,9 +22,9 @@ it('should change the style', () => {\nd=\"flex\" :w=\"['auto']\" px=\"5\" py=\"5\" shadow=\"lg\"\nmy=\"5\" mb=\"5\" rounded=\"sm\" font-family=\"body\"\nbackground-color=\"blue.200\" color=\"blue.700\"`\n- const { asFragment, getByTestId } = renderComponent({ inlineAttrs })\n+ const { asFragment } = renderComponent({ inlineAttrs })\n- const box = getByTestId('box')\n+ const box = screen.getByTestId('box')\nexpect(asFragment()).toMatchSnapshot()\nexpect(box).toHaveStyle('display: flex')\n",
        "human": "test(Box): refactor box tests",
        "race": "Fix CBox test",
        "zeroshot": "refactor: update test to use screen instead of getByTestId",
        "rag": "fix(core/CBox): updated test to use screen instead of getByTestId",
        "classified_rag": "test(CBox): update test case to use screen instead of getByTestId",
        "nngen": "refactor: set modal width to 100%",
        "type": "test"
    },
    {
        "diff": "diff --git a/site/layouts/shortcodes/css-vars-docs.html b/site/layouts/shortcodes/css-vars-docs.html {{- /*\n- Usage: `scss-docs name=\"name\" file=\"file/_location.scss\"`\n+ Usage: `css-vars-docs file=\"file/_location.scss\"`\n- Prints everything between `// scss-docs-start \"name\"` and `// scss-docs-end \"name\"`\n- comments in the docs.\n-\n- Optional parameters:\n- strip-default: Remove the ` !default` flag from variable assignments - default: `true`\n+ Find all CSS Variables and print them in the docs.\n*/ -}}\n-{{- $name := .Get \"name\" -}}\n{{- $file := .Get \"file\" -}}\n{{- $strip_default := .Get \"strip-default\" | default \"true\" -}}\n-{{- $start := printf \"// scss-docs-start %s\\n\" $name -}}\n-{{- $end := printf \"\\n// scss-docs-end %s\" $name -}}\n-{{- $regex := printf \"%s(.|\\n)*%s\" $start $end -}}\n-\n-{{- $regex2 := printf \"(--#{\\\\$variable-prefix}[^,]*)\" -}}\n+{{- $regex := printf \"(--#{\\\\$variable-prefix}[^,|)|:]*)\" -}}\n{{- $css := readFile $file -}}\n-{{- $match := (findRE $regex2 $css) | uniq | sort -}}\n+{{- $match := (findRE $regex $css) | uniq | sort -}}\n{{- if (eq (len $match) 0) -}}\n- {{- errorf \"Got no matches for %q in %q! (called in %q)\" $name $file $.Page.Path -}}\n+ {{- errorf \"Got no matches for %q in %q! (called in %q)\" $file $.Page.Path -}}\n{{- end -}}\n-{{- $remove_start := replace (index $match 0) $start \"\" -}}\n{{- $result := delimit $match \"\\n\" -}}\n{{- if (ne $strip_default \"false\") -}}\n",
        "human": "refactor: clean-up",
        "race": "Update CSS Variables Shortcode",
        "zeroshot": "Refactor CSS vars shortcode to find and print all CSS variables in the docs.",
        "rag": "refactor(shortcodes): update CSS vars documentation shortcode logic and regex pattern",
        "classified_rag": "refactor: update CSS Variables documentation shortcode logic",
        "nngen": "docs: added information on syntax highlighting",
        "type": "refactor"
    },
    {
        "diff": "diff --git a/README.md b/README.md @@ -169,7 +169,7 @@ nodemon --watch app --watch libs app/server.js\nNow nodemon will only restart if there are changes in the `./app` or `./libs` directory. By default nodemon will traverse sub-directories, so there's no need in explicitly including sub-directories.\n-Don't use unix globbing to pass multiple directories, e.g `--watch ./lib/*`, it won't work. You need a `--watch` flag per directory watched.\n+Nodemon also supports unix globbing, e.g `--watch './lib/*'`. The globbing pattern must be quoted.\n## Specifying extension watch list\n",
        "human": "docs: Update documentation about support for unix globbing\n[skip ci]",
        "race": "Update docs for unix globbing",
        "zeroshot": "Improve nodemon watch functionality and support unix globbing",
        "rag": "docs: update README with information on using unix globbing with nodemon",
        "classified_rag": "docs: update nodemon documentation to include unix globbing support",
        "nngen": "docs(sdk): update doc with welcome popups",
        "type": "docs"
    },
    {
        "diff": "diff --git a/website/pages/docs/single-page-applications.md b/website/pages/docs/single-page-applications.md -# [Single Page Applications](https://github.com/jaredpalmer/razzle/blob/master/examples/basic-spa/)\n+# Single Page Applications\nIn addition to universal/isomorphic applications, Razzle can build single page (or client-only) applications. To do this, remove `index.js` and `server.js` from the src folder, and create an `index.html` file inside the public folder with the following template:\n-```\n+```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n",
        "human": "feat: update Single Page Applications section",
        "race": "Fix single page applications diff",
        "zeroshot": "Refactor single page applications documentation and update template in index.html",
        "rag": "docs: update single-page-applications.md",
        "classified_rag": "docs: update single-page-applications.md",
        "nngen": "docs: reformat & flesh out webpack quickstart\\nFixes",
        "type": "feat"
    },
    {
        "diff": "diff --git a/packages/chakra-ui-docs/docs/box.mdx b/packages/chakra-ui-docs/docs/box.mdx +import Vue from 'vue'\n+import LiveEditor from '../components/LiveEditor'\n+import Code from '../components/CodeBlock'\n+import SEO from '../components/SEO'\n+import { CBox, CImage, CBadge, CIcon } from '@chakra-ui/vue'\n+Vue.component('CBox', CBox)\n+Vue.component('CImage', CImage)\n+Vue.component('CBadge', CBadge)\n+Vue.component('CIcon', CIcon)\n+\n+<SEO\n+ title=\"Box\"\n+ description=\"Box is the most abstract component on top of which all other @chakra-ui/vue components are built. By default, it renders a `div` element\"\n+/>\n+\n+\n# Box\n+\n+`CBox` is the most abstract component on top of which all other `@chakra-ui/vue` components are built. By default, it renders a `div` element.\n+\n+<br />\n+\n+**The `CBox` component is useful because it helps with 3 common use cases:**\n+- Creation of responsive layouts with ease.\n+- Provides a shorthand way to pass styles via props (`bg` instead of `backgroundColor`).\n+- Composition of new components by providing for overrides by using the `as` prop.\n+\n+## Import\n+\n+<Code lang=\"javascript\" code={`import { CBox } from \"@chakra-ui/vue\";`} />\n+\n+## Usage\n+\n+<LiveEditor>\n+{`\n+<c-box bg=\"tomato\" w=\"100%\" p=\"4\" color=\"white\">\n+ This is the Box\n+</c-box>\n+`}\n+</LiveEditor>\n+\n+## Composition with `CBox`\n+\n+<LiveEditor>\n+{`\n+<template>\n+ <c-box maxW=\"sm\" border-width=\"1px\" rounded=\"lg\" overflow=\"hidden\">\n+ <c-image :src=\"property.imageUrl\" :alt=\"property.imageAlt\" />\n+ <c-box p=\"6\">\n+ <c-box d=\"flex\" align-items=\"baseline\">\n+ <c-badge rounded=\"full\" px=\"2\" variant-color=\"green\">\n+ New\n+ </c-badge>\n+ <c-box\n+ color=\"gray.500\"\n+ font-weight=\"semibold\"\n+ letter-spacing=\"wide\"\n+ font-size=\"xs\"\n+ text-sransform=\"uppercase\"\n+ ml=\"2\"\n+ >\n+ {{ property.beds }} beds &bull; {{ property.baths }} baths\n+ </c-box>\n+ </c-box>\n+ <c-box\n+ mt=\"1\"\n+ font-weight=\"semibold\"\n+ as=\"h4\"\n+ line-height=\"tight\"\n+ is-truncated\n+ >\n+ {{ property.title }}\n+ </c-box>\n+ <c-box>\n+ {{ property.formattedPrice }}\n+ <c-box as=\"span\" color=\"gray.600\" fontSize=\"sm\">\n+ / wk\n+ </c-box>\n+ </c-box>\n+ <c-box d=\"flex\" mt=\"2\" align-items=\"center\">\n+ <c-icon\n+ v-for=\"(_, i) in Array(5).fill('')\"\n+ name=\"star\"\n+ :key=\"i\"\n+ :color=\"i < property.rating ? 'green.500' : 'gray.300'\"\n+ />\n+ <c-box as=\"span\" ml=\"2\" color=\"gray.600\" font-size=\"sm\">\n+ {{ property.reviewCount }} reviews\n+ </c-box>\n+ </c-box>\n+ </c-box>\n+ </c-box>\n+</template>\\n\n+<script>\n+ export default {\n+ name: 'Example',\n+ data () {\n+ return {\n+ property: {\n+ imageUrl: \"https://bit.ly/2Z4KKcF\",\n+ imageAlt: \"Rear view of modern home with pool\",\n+ beds: 3,\n+ baths: 2,\n+ title: \"Modern home in city center in the heart of historic Los Angeles\",\n+ formattedPrice: \"$1,900.00\",\n+ reviewCount: 34,\n+ rating: 4,\n+ }\n+ }\n+ }\n+ }\n+</script>\n+`}\n+</LiveEditor>\n+\n+### `as` prop\n+\n+You can use the `as` prop to change the element render, just like the `tag` prop on Vue's global dynamic component.\n+\n+<LiveEditor>\n+{`\n+<c-box as=\"button\" rounded=\"md\" bg=\"tomato\" color=\"white\" px=\"4\" h=\"8\">\n+ Button\n+</c-box>\n+`}\n+</LiveEditor>\n+\n+## Props\n+See all `CBox` props in the <nuxt-link to=\"style-props\">Style Props page</nuxt-link>\n\\ No newline at end of file\n",
        "human": "docs(box): added box docs",
        "race": "Add box docs",
        "zeroshot": "Add Vue components for Box, Image, Badge, and Icon, and update Box documentation with usage examples and props information.",
        "rag": "feat(ChakraUI): add CBox component documentation in box.mdx\n- Added import statements for Vue, LiveEditor, Code, SEO, CBox, CImage, CBadge, and CIcon\n- Provided a description of the Box component in the SEO component\n- Explained the common use cases of the CBox component\n- Included examples of importing and using the CBox component\n- Demonstrated composition with CBox using a template\n- Showcased the usage of the 'as' prop to change the element render\n- Referenced the Style Props page for all CBox props",
        "classified_rag": "docs: add CBox component documentation",
        "nngen": "refactor(breadcrumbs): implement Chakra's `Breadcrumb` component",
        "type": "docs"
    }
]