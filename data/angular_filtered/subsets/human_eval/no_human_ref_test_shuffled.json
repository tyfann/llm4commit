[
    {
        "diff": "diff --git a/src/common/reducers/layout/index.js b/src/common/reducers/layout/index.js @@ -43,17 +43,10 @@ export function layout (state: State = initialState, action: Action): State {\n}\nswitch (action.type) {\ncase APPLICATION_INIT:\n- case UI_WINDOW_RESIZE: {\n- const {innerWidth} = action.payload\n- const {isMobile, isMobileSM, isMobileXS} = computeMobileStatuses(\n- innerWidth\n- )\n+ case UI_WINDOW_RESIZE:\nreturn {\n...state,\n- isMobile,\n- isMobileSM,\n- isMobileXS\n- }\n+ ...computeMobileStatuses(action.payload.innerWidth)\n}\ncase UI_OPEN_SIDEBAR:\nreturn {\n",
        "1": "fix: mobile status",
        "2": "refactor(layout): simplify UI_WINDOW_RESIZE case in layout reducer"
    },
    {
        "diff": "diff --git a/README.md b/README.md -# :warning: Doc Site Interruptions :warning:\n-Our doc site DNS and CDN providers are having issues at the moment.\n-\n-**Please use https://semantic-org.github.io/Semantic-UI-React as a short-term fix.**\n-Images will not load with this link, however, the majority of the docs will be usable.\n-\n-Thanks for your patience and help while we resolve these issues:\n-- [CDN Issue #1404](https://github.com/Semantic-Org/Semantic-UI-React/issues/1404)\n-- [DNS Issue #1429](https://github.com/Semantic-Org/Semantic-UI-React/issues/1429)\n-\n-***\n<!-- Logo -->\n<p align=\"center\">\n<a href=\"http://react.semantic-ui.com\">\n@@ -18,7 +7,7 @@ Thanks for your patience and help while we resolve these issues:\n<!-- Name -->\n<h1 align=\"center\">\n- <a href=\"https://semantic-org.github.io/Semantic-UI-React\">Semantic UI React</a>\n+ <a href=\"http://react.semantic-ui.com/\">Semantic UI React</a>\n</h1>\n<!-- Badges -->\n@@ -164,7 +153,7 @@ Big thanks to our [contributors][20], especially:\n- @layershifter for bringing momentum and continual support\n[1]: https://github.com/Semantic-Org/Semantic-UI-React/blob/master/.github/CONTRIBUTING.md\n-[2]: https://semantic-org.github.io/Semantic-UI-React\n+[2]: http://react.semantic-ui.com/\n[3]: https://facebook.github.io/react/\n[4]: https://github.com/Semantic-Org/Semantic-UI-React/labels/help%20wanted\n[5]: http://semantic-ui.com/\n",
        "1": "docs: update homepage link to use HTTPS\nUpdate the homepage link in the README.md file to use HTTPS instead of HTTP for Semantic UI React.",
        "2": "docs: update docs site links"
    },
    {
        "diff": "diff --git a/.github/workflows/test.yml b/.github/workflows/test.yml @@ -22,18 +22,6 @@ jobs:\n- name: Install Canvas and XML dependencies\nrun: sudo apt-get install -y libcairo2-dev libpango1.0-dev libxml2-utils\n- - name: Get Yarn cache directory path\n- id: yarn-cache-dir-path\n- run: echo \"::set-output name=dir::$(yarn cache dir)\"\n-\n- - uses: actions/cache@v1\n- id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)\n- with:\n- path: ${{ steps.yarn-cache-dir-path.outputs.dir }}\n- key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}\n- restore-keys: |\n- ${{ runner.os }}-yarn-\n-\n- name: Setup Node ${{ matrix.node }}\nuses: actions/setup-node@v1\nwith:\n",
        "1": "Remove yarn cache",
        "2": "ci(gh-actions): update yarn cache handling in test workflow"
    },
    {
        "diff": "diff --git a/packages/chakra-ui-core/src/CAspectRatioBox/tests/CAspectRatioBox.test.js b/packages/chakra-ui-core/src/CAspectRatioBox/tests/CAspectRatioBox.test.js import { CAspectRatioBox, CBox } from '../..'\n-import { render } from '@/tests/test-utils'\n-\n+import { render, screen } from '@/tests/test-utils'\nconst renderComponent = (props) => {\nconst inlineAttrs = (props && props.inlineAttrs) || ''\nconst base = {\n@@ -15,17 +14,53 @@ const renderComponent = (props) => {\nreturn render(base)\n}\n+/**\n+ * Not sure if we need jest-emotion\n+ *\n+ * Get styles from document.styleSheets\n+ * @param {String} selector\n+ */\n+function getElementStyles (selector) {\n+ selector = new RegExp(selector)\n+ let styles = []\n+ let i; let j; let sel = selector\n+ for (i = 0; i < document.styleSheets.length; ++i) {\n+ for (j = 0; j < document.styleSheets[i].cssRules.length; ++j) {\n+ if (sel.test(document.styleSheets[i].cssRules[j].selectorText)) {\n+ // let selectorText = document.styleSheets[i].cssRules[j].selectorText\n+ let cssText = document.styleSheets[i].cssRules[j].style.cssText\n+ styles += cssText\n+ }\n+ }\n+ }\n+ return styles\n+}\n+\nit('should render correctly', () => {\nconst inlineAttrs = ':ratio=\"1\"'\nconst { asFragment } = renderComponent({ inlineAttrs })\nexpect(asFragment()).toMatchSnapshot()\n+\n+ const [, emotionClassName] = [...screen.getByTestId('aspectRatioBox').classList]\n+ const pseudoStyles = getElementStyles(`.${emotionClassName}:before`)\n+\n+ expect(pseudoStyles).toContain(`\n+ padding-bottom: 100%\n+ `.trim())\n})\n-it('should have correct styles', () => {\n- const inlineAttrs = ':ratio=\"2\"'\n- const { getByTestId } = renderComponent({ inlineAttrs })\n- const image = getByTestId('image')\n- const aspectRatioBox = getByTestId('aspectRatioBox')\n+it('should have correct styles', async () => {\n+ const inlineAttrs = `:ratio=\"2\"`\n+ renderComponent({ inlineAttrs })\n+ const image = screen.getByTestId('image')\n+ const aspectRatioBox = screen.getByTestId('aspectRatioBox')\n+\n+ const [, emotionClassName] = [...aspectRatioBox.classList]\n+ const pseudoStyles = getElementStyles(`.${emotionClassName}:before`)\n+\n+ expect(pseudoStyles).toContain(`\n+ padding-bottom: 50%\n+ `.trim())\nexpect(aspectRatioBox).toHaveStyle(`\nmax-width: 400px;\n@@ -40,7 +75,4 @@ it('should have correct styles', () => {\ntop: 0px;\nleft: 0px;\n`)\n-\n- // TODO: we can't test pseudo elements.. so better test styles?\n- // aspectRatioBox padding-bottom\n})\n",
        "1": "Add tests for pseudo elements",
        "2": "test(CAspectRatioBox): update test cases for correct styles and rendering"
    },
    {
        "diff": "diff --git a/src/Input.js b/src/Input.js @@ -27,6 +27,25 @@ const defaultProps = {\n};\nclass Input extends React.Component {\n+ constructor(props) {\n+ super(props);\n+ this.getRef = this.getRef.bind(this);\n+ this.focus = this.focus.bind(this);\n+ }\n+\n+ getRef(ref) {\n+ if (this.props.innerRef) {\n+ this.props.innerRef(ref);\n+ }\n+ this.ref = ref;\n+ }\n+\n+ focus() {\n+ if (this.ref) {\n+ this.ref.focus();\n+ }\n+ }\n+\nrender() {\nlet {\nclassName,\n",
        "1": "Add ref and focus methods to Input",
        "2": "feat(input): add ref functionality to Input component"
    },
    {
        "diff": "diff --git a/packages/razzle/config/babel-loader/razzle-babel-loader.js b/packages/razzle/config/babel-loader/razzle-babel-loader.js @@ -64,6 +64,7 @@ module.exports = babelLoader.custom(function(babel) {\nisServer: opts.isServer,\nisModern: opts.isModern,\nhasModern: opts.hasModern,\n+ supportsStaticESM: opts.supportsStaticESM,\ndevelopment: opts.development,\nshouldUseReactRefresh: opts.shouldUseReactRefresh,\n};\n@@ -101,6 +102,7 @@ module.exports = babelLoader.custom(function(babel) {\ndelete loader.distDir;\ndelete loader.isModern;\ndelete loader.hasModern;\n+ delete loader.supportsStaticESM;\ndelete loader.development;\ndelete loader.shouldUseReactRefresh;\nreturn { loader, custom };\n@@ -112,6 +114,7 @@ module.exports = babelLoader.custom(function(babel) {\nconst isServer = customOptions.isServer;\nconst isModern = customOptions.isModern;\nconst hasModern = customOptions.hasModern;\n+ const supportsStaticESM = customOptions.supportsStaticESM;\nconst development = customOptions.development;\nconst shouldUseReactRefresh = customOptions.shouldUseReactRefresh;\n@@ -134,6 +137,7 @@ module.exports = babelLoader.custom(function(babel) {\npresetOptions.caller.isServer = isServer;\npresetOptions.caller.isModern = isModern;\npresetOptions.caller.isDev = development;\n+ presetOptions.caller.supportsStaticESM = supportsStaticESM;\nconst emitWarning = this.emitWarning.bind(this);\nObject.defineProperty(presetOptions.caller, 'onWarning', {\n",
        "1": "refactor: remove supportsStaticESM option from babel loader config",
        "2": "Add supportStaticESM to diff"
    },
    {
        "diff": "diff --git a/src/features/tooltip/Tooltip.js b/src/features/tooltip/Tooltip.js @@ -14,11 +14,12 @@ class TooltipControls extends React.Component {\nconstructor(props){\nsuper(props)\nthis.state = {\n- title: \"Title\",\nlabel:\"Labels\",\nheight:\"200px\",\nwidth:\"300px\",\nposition: [200,200],\n+ note: {\n+ id:'',\nnote:{\ntitle: '',\nlabels: [],\n@@ -26,21 +27,32 @@ class TooltipControls extends React.Component {\n}\n}\n}\n+ }\nhandleChangeTitle = (event) => {\nvar note = {...this.state.note}\n- note.title = event.target.value\n+ note.note.title = event.target.value\nthis.setState({note});\n}\nhandleChangeContent = (event) => {\nvar note = {...this.state.note}\n- note.content = event.target.value\n+ note.note.content = event.target.value\nthis.setState({note});\n}\n- saveNote = () => {\n- console.log(this.state.note)\n+ saveNote = async () => {\n+ if(typeof (this.props.data.CRVIZ._SEARCH_KEY) !== 'undefined'){\n+ var note = {...this.state.note}\n+ note.id = await this.props.data.CRVIZ._SEARCH_KEY\n+ this.setState({note});\n+\n+ this.props.addNote(this.state.note);\n+ console.log(this.props.notes)\n+ }\n+ else{\n+ console.log('else')\n+ }\n}\ncomponentDidUpdate(prevProps) {\n@@ -105,10 +117,10 @@ class TooltipControls extends React.Component {\n}\n<div>\n<div>\n- <b><h1><input style={inputStyle} type=\"text\" value={this.state.note.title} onChange={this.handleChangeTitle} placeholder=\"Title\"/></h1></b>\n+ <b><h1><input style={inputStyle} type=\"text\" value={this.state.note.note.title} onChange={this.handleChangeTitle} placeholder=\"Title\"/></h1></b>\n<h6>{this.state.label}</h6>\n</div>\n- <p><input style={inputStyle} type=\"text\" value={this.state.note.content} onChange={this.handleChangeContent} placeholder=\"Take a note...\"/></p>\n+ <p><input style={inputStyle} type=\"text\" value={this.state.note.note.content} onChange={this.handleChangeContent} placeholder=\"Take a note...\"/></p>\n<div >\n<FontAwesomeIcon style={{margin:\"10px\"}} icon={faTags} />\n<FontAwesomeIcon style={{color:\"#47cf38\", margin:\"10px\"}} icon={faSave} onClick={this.saveNote}/>\n",
        "1": "add note to tooltip",
        "2": "feat(tooltip): add note functionality and save feature"
    },
    {
        "diff": "diff --git a/docs/src/routes.js b/docs/src/routes.js @@ -4,8 +4,8 @@ import { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom'\nimport ExternalExampleLayout from './components/ExternalExampleLayout'\nimport DocsLayout from './components/DocsLayout'\nimport DocsRoot from './components/DocsRoot'\n-import LayoutsLayout from './components/layoutsLayout'\n-import LayoutsRoot from './components/layoutsRoot'\n+import LayoutsLayout from './components/LayoutsLayout'\n+import LayoutsRoot from './components/LayoutsRoot'\nimport Introduction from './views/Introduction'\nimport Layouts from './views/layouts'\n",
        "1": "docs: Fix import paths for LayoutsLayout and LayoutsRoot\nUpdated import paths to match correct casing for components",
        "2": "Fix typo in diff"
    },
    {
        "diff": "diff --git a/packages/chakra-ui-core/src/CFormControl/tests/CFormControl.test.js b/packages/chakra-ui-core/src/CFormControl/tests/CFormControl.test.js import { CFormControl, CInput, CFormLabel } from '../..'\nimport { render } from '@/tests/test-utils'\n-// mocks\n-jest.mock('breadstick/dist/components/Alert/styles.css', () => ({})) // jest tries to import styles and fails...\n-\nconst renderComponent = (props) => {\nconst inlineAttrs = (props && props.inlineAttrs) || ''\nconst base = {\n",
        "1": "Remove jest mock",
        "2": "test(CFormControl): remove unnecessary mock in CFormControl test file"
    },
    {
        "diff": "diff --git a/website/pages/docs/customization.md b/website/pages/docs/customization.md @@ -12,7 +12,7 @@ module.exports = {\noptions: {\nverbose: false, // set to true to get more info/error output\ndebug: {}, // debug flags\n- buildType: 'iso', // or 'spa' and 'serverless'\n+ buildType: 'iso', // or 'spa', 'serveronly', 'iso-serverless' and 'serveronly-serverless'\ncssPrefix: 'static/css',\njsPrefix: 'static/js',\nmediaPrefix: 'static/media',\n",
        "1": "docs: update buildType options in customization.md",
        "2": "docs: update buildType docs"
    },
    {
        "diff": "diff --git a/js/src/util/focustrap.js b/js/src/util/focustrap.js @@ -20,7 +20,7 @@ const DefaultType = {\n}\nconst NAME = 'focustrap'\n-const DATA_KEY = 'bs.focustrap'\n+const DATA_KEY = 'coreui.focustrap'\nconst EVENT_KEY = `.${DATA_KEY}`\nconst EVENT_FOCUSIN = `focusin${EVENT_KEY}`\nconst EVENT_KEYDOWN_TAB = `keydown.tab${EVENT_KEY}`\n",
        "1": "Fix focustrap data key",
        "2": "fix: update DATA_KEY to coreui.focustrap"
    },
    {
        "diff": "diff --git a/packages/chakra-ui-core/src/CStat/tests/CStat.test.js b/packages/chakra-ui-core/src/CStat/tests/CStat.test.js import { CStat, CStatLabel, CStatNumber, CStatHelperText, CStatArrow } from '..'\n-import { render, defaultProviders } from '@/tests/test-utils'\n-import icons from '../../lib/internal-icons.js'\n+import { render } from '@/tests/test-utils'\nconst renderComponent = (props) => {\nconst base = {\ncomponents: { CStat, CStatLabel, CStatNumber, CStatHelperText, CStatArrow },\n- provide: () => defaultProviders({ $chakraIcons: { 'triangle-up': icons['triangle-up'], 'triangle-down': icons['triangle-down'] } }),\ntemplate: `\n<CStat>\n<CStatLabel>Collected Fees</CStatLabel>\n",
        "1": "Remove defaultProviders",
        "2": "test(CStat): update test setup in CStat.test.js"
    },
    {
        "diff": "diff --git a/packages/putout/ChangeLog b/packages/putout/ChangeLog +2022.12.02, v28.1.0\n+\n+fix:\n+- @putout/compare: __children -> __jsx_children\n+\n+feature:\n+- package: @putout/cli-match v2.0.0\n+- @putout/cli-match: drop support of node < 16\n+- @putout/cli-match: change \"match()\" return signature: code -> {code, message}\n+- @putout/plugin-remove-useless-spread: add support of sparse arrays (#119)\n+- @putout/compare: __jsx_children: improve support\n+- @putout/compare: improve support of jsx expressions\n+- @putout/compare: improve __jsx_children support\n+- @putout/compare: add support of JSXElement (#116)\n+- @putout/engine-parser: template: add support of jsx\n+- @putout/engine-runner: replacer: add support of jsx (#116)\n+- @putout/compare: add support of JSXText (#116)\n+- @putout/operate: extract: add support of JSXText (#116)\n+- @putout/plugin-github: create-uses-fixer\n+- @putout/plugin-github: add set-add-and-commit (EndBug/add-and-commit#448)\n+- @putout/plugin-github: set-setup-node: set v3\n+- @putout/plugin-nodejs: set-checkout-version: add support of actions/checkout v3\n+\n2022.10.30, v28.0.1\nfeature:\n",
        "1": "fix(compare): update variable name from __children to __jsx_children",
        "2": "add change log for v28.1.0"
    },
    {
        "diff": "diff --git a/examples/with-typescript/src/server.tsx b/examples/with-typescript/src/server.tsx import express from 'express';\nimport React from 'react';\nimport { renderToString } from 'react-dom/server';\n-import { StaticRouter, StaticRouterContext } from 'react-router-dom';\n+import { StaticRouterContext } from \"react-router\";\n+import { StaticRouter } from 'react-router-dom';\nimport App from './App';\n",
        "1": "fix: rearrange import order in server.tsx file",
        "2": "Fix react-router import"
    },
    {
        "diff": "diff --git a/examples/with-now-v2/README.md b/examples/with-now-v2/README.md @@ -44,6 +44,34 @@ Open the link written in the console.\nTake a look at `now.json`. We are uploading the result of the razzle build, and setting up the routes for the app entry point and all static resources.\n+```json\n+{\n+ \"version\": 2,\n+ \"name\": \"example\",\n+ \"builds\": [\n+ {\n+ \"src\": \"build/public/**\",\n+ \"use\": \"@now/static\"\n+ },\n+ {\n+ \"src\": \"build/server.js\",\n+ \"use\": \"@now/node-server\"\n+ }\n+ ],\n+ \"routes\": [\n+ { \"src\": \"/assets.json\", \"dest\": \"build/assets.json\" },\n+ { \"src\": \"/favicon.ico\", \"dest\": \"build/public/favicon.ico\" },\n+ { \"src\": \"/robots.txt\", \"dest\": \"build/public/robots.txt\" },\n+ { \"src\": \"/static/(.*)\", \"dest\": \"build/public/static/$1\" },\n+ { \"src\": \"/(.*)\", \"dest\": \"build/server.js\" }\n+\n+ ],\n+ \"env\": {\n+ \"NODE_ENV\": \"production\"\n+ }\n+}\n+```\n+\nWe are also setting the `NODE_ENV` environment variable. Most likely, your app will use other environment variables, beware you should not commit secrets like api keys and others into your repository. Take a look at now's documentation to understand what you should do in such cases.\n## Documentation\n",
        "1": "docs(readme): update now.json configuration in README for with-now-v2 example",
        "2": "add code block to now.json"
    },
    {
        "diff": "diff --git a/packages/wmr/src/build.js b/packages/wmr/src/build.js @@ -18,7 +18,13 @@ export default async function build(options = {}) {\noptions = await normalizeOptions(options, 'build');\n- await fs.rmdir(options.out, { recursive: true });\n+ // Clears out the output folder without deleting it -- useful\n+ // when mounted with Docker and the like\n+ (await fs.readdir(options.out)).forEach(async item => {\n+ item = path.join(options.out, item);\n+ if ((await fs.stat(item)).isFile()) await fs.unlink(item);\n+ else await fs.rmdir(item, { recursive: true });\n+ });\nconst bundleOutput = await bundleProd(options);\n",
        "1": "refactor: improve output folder clearing logic in build process",
        "2": "fix(wmr): remove output folder when mounted with Docker"
    },
    {
        "diff": "diff --git a/lib/monitor/run.js b/lib/monitor/run.js @@ -195,7 +195,7 @@ function run(options) {\nif (signal === config.signal || code === 0) {\n// this was a clean exit, so emit exit, rather than crash\ndebug('bus.emit(exit) via ' + config.signal);\n- bus.emit('exit');\n+ bus.emit('exit', signal);\n// exit the monitor, but do it gracefully\nif (signal === config.signal) {\n",
        "1": "fix(monitor): emit signal on exit",
        "2": "refactor(monitor): Update exit event emission in run function"
    },
    {
        "diff": "diff --git a/package.json b/package.json \"scripts\": {\n\"install\": \"lerna bootstrap --hoist\",\n\"clean:lerna\": \"lerna clean\",\n- \"clean:dist\": \"sh scripts/clean-all\",\n- \"build\": \"sh scripts/build-all\",\n+ \"clean:dist\": \"bash scripts/clean-all\",\n+ \"build\": \"bash scripts/build-all\",\n\"build:examples\": \"cd packages/examples && npm run build\",\n\"examples\": \"cd packages/examples && npm run serve\",\n- \"build:test\": \"sh scripts/build-test\",\n- \"build:coverage\": \"COVERAGE=1 sh scripts/build-test\",\n- \"test:unit\": \"sh scripts/run-test\",\n+ \"build:test\": \"bash scripts/build-test\",\n+ \"build:coverage\": \"COVERAGE=1 bash scripts/build-test\",\n+ \"test:unit\": \"bash scripts/run-test\",\n\"test:image\": \"cd packages/examples && npm test\",\n- \"test:coverage\": \"COVERAGE=1 sh scripts/run-test\",\n+ \"test:coverage\": \"COVERAGE=1 bash scripts/run-test\",\n\"coverage:report\": \"http-server build/coverage/html -p ${PORT-3000}\",\n\"build:docs\": \"sphinx-build -a -b html docs/ build/docs/\",\n- \"lint\": \"sh scripts/run-lint\",\n+ \"lint\": \"bash scripts/run-lint\",\n\"lint:pycandela\": \"flake8 --config python/pycandela/flake8.cfg python/pycandela\",\n\"docs\": \"http-server build/docs -p ${PORT-3000}\",\n\"commit\": \"git-cz\",\n",
        "1": "chore: update build and test scripts to use bash instead of sh",
        "2": "chore: use bash instead of sh"
    },
    {
        "diff": "diff --git a/circle.yml b/circle.yml @@ -16,10 +16,8 @@ dependencies:\ncompile:\noverride:\n- # Build Candela and \"install\" it as a node module.\n+ # Build Candela.\n- npm run build\n- - rm -rf node_modules/candela\n- - npm install\n# Build the examples.\n- npm run build:examples\n",
        "1": "chore(circle): updating build process in circle.yml",
        "2": "Remove unnecessary node_modules/candela"
    },
    {
        "diff": "diff --git a/website/pages/deployment-options/azure.md b/website/pages/deployment-options/azure.md @@ -98,23 +98,41 @@ Deploy the Razzle project to Azure\nwebappname=myRazzle$RANDOM\n# Create a resource group.\n-az group create --location westeurope --name myResourceGroup\n+az group create \\\n+ --location westeurope \\\n+ --name myResourceGroup\n# Create an App Service plan in `FREE` tier.\n-az appservice plan create --name myAppServicePlan --resource-group myResourceGroup --sku FREE --is-linux\n+az appservice plan create --name myAppServicePlan \\\n+ --resource-group myResourceGroup \\\n+ --sku FREE \\\n+ --is-linux\n# Create a web app.\n-az webapp create --name $webappname --resource-group myResourceGroup --plan myAppServicePlan --runtime \"node|12-lts\"\n+az webapp create \\\n+ --name $webappname \\\n+ --resource-group myResourceGroup \\\n+ --plan myAppServicePlan \\\n+ --runtime \"node|12-lts\"\n# Enable building with zip deploy\n-az webapp config appsettings set --name $webappname --resource-group myResourceGroup --settings SCM_DO_BUILD_DURING_DEPLOYMENT=true\n-\n-# Get FTP publishing profile and query for publish URL and credentials\n-creds=($(az webapp deployment list-publishing-profiles --name $webappname --resource-group myResourceGroup \\\n---query \"[?contains(publishMethod, 'ZipDeploy')].[publishUrl,userName,userPWD]\" --output tsv))\n+az webapp config appsettings set \\\n+ --name $webappname \\\n+ --resource-group myResourceGroup \\\n+ --settings SCM_DO_BUILD_DURING_DEPLOYMENT=true\n+\n+# Get ZipDeploy publishing profile and query for publish URL and credentials\n+creds=($(az webapp deployment list-publishing-profiles \\\n+ --name $webappname \\\n+ --resource-group myResourceGroup \\\n+ --query \"[?contains(publishMethod, 'ZipDeploy')].[publishUrl,userName,userPWD]\" \\\n+ --output tsv))\n# Use cURL to perform http zip upload. You can use any http tool to do this instead.\n-curl -X POST -u ${creds[1]}:${creds[2]} --data-binary @\"site.zip\" https://${creds[0]}/api/zipdeploy\n+curl -X POST \\\n+ -u ${creds[1]}:${creds[2]} \\\n+ --data-binary @\"site.zip\" \\\n+ https://${creds[0]}/api/zipdeploy\n# Copy the result of the following command into a browser to see the static HTML site.\necho https://$webappname.azurewebsites.net\n",
        "1": "website(deployment-options): improve readability and formatting of Azure deployment commands",
        "2": "Fixing formatting issues in Azure deployment options"
    },
    {
        "diff": "diff --git a/app/mixins/parent-name.js b/app/mixins/parent-name.js @@ -9,6 +9,6 @@ export default Mixin.create({\nparentName: computed('routeName', function() {\nconst routeName = this.get('routeName');\nconst routes = routeName.split('.');\n- return routes.slice(0, 2).join('.');\n+ return routes.slice(0, 3).join('.');\n})\n});\n",
        "1": "Fix route name length",
        "2": "refactor(mixins): update parentName logic to include one more level in route hierarchy"
    },
    {
        "diff": "diff --git a/packages/chakra-ui-core/src/CCircularProgress/tests/__snapshots__/CCircularProgress.test.js.snap b/packages/chakra-ui-core/src/CCircularProgress/tests/__snapshots__/CCircularProgress.test.js.snap @@ -6,7 +6,7 @@ exports[`should render correctly 1`] = `\naria-valuemax=\"100\"\naria-valuemin=\"0\"\naria-valuenow=\"40\"\n- class=\"css-xqz7ss\"\n+ class=\"css-12d21aj\"\ndata-chakra-component=\"CBox\"\ndata-testid=\"CircularProgress\"\nrole=\"progressbar\"\n@@ -27,7 +27,7 @@ exports[`should render correctly 1`] = `\nstroke-width=\"11.111111111111112\"\n/>\n<circle\n- class=\"css-1h10kks\"\n+ class=\"css-19r75gt\"\ncx=\"111.11111111111111\"\ncy=\"111.11111111111111\"\ndata-chakra-component=\"CBox\"\n",
        "1": "Update CBox styles",
        "2": "fix: update class names in CCircularProgress test snapshots"
    },
    {
        "diff": "diff --git a/packages/razzle-dev-utils/makeLoaderFinder.js b/packages/razzle-dev-utils/makeLoaderFinder.js @@ -6,7 +6,7 @@ const makeLoaderFinder = loaderName => rule => {\n// Checks if there's a loader string in rule.loader matching loaderRegex.\nconst inLoaderString =\n- typeof rule.loader === 'string' && rule.loader.match(loaderRegex);\n+ typeof rule.loader === 'string' && (rule.loader.match(loaderRegex) || rule.loader === loaderName);\n// Checks if there is an object inside rule.use with loader matching loaderRegex, OR\n// Checks another condition, if rule is not an object, but pure string (ex: \"style-loader\", etc)\n@@ -15,8 +15,8 @@ const makeLoaderFinder = loaderName => rule => {\nrule.use.find(\nloader =>\n(typeof loader.loader === 'string' &&\n- loader.loader.match(loaderRegex)) ||\n- (typeof loader === 'string' && loader.match(loaderRegex))\n+ (loader.loader.match(loaderRegex)) || rule.loader === loaderName) ||\n+ (typeof loader === 'string' && (loader.match(loaderRegex) || loader === loaderName))\n);\nreturn inUseArray || inLoaderString;\n",
        "1": "Fix loader name matching",
        "2": "refactor: improve loader finder logic"
    },
    {
        "diff": "diff --git a/src/system/interpreter.js b/src/system/interpreter.js @@ -103,8 +103,8 @@ BiwaScheme.Interpreter = BiwaScheme.Class.create({\n// m: number of items to shift\n// s: stack pointer (= index of stack top + 1)\nshift_args: function(n, m, s){\n- for(var i = n-1; i >= -1; i--){\n- this.index_set(s, i+m+1, this.index(s, i+1));\n+ for(var i = n; i >= 0; i--){\n+ this.index_set(s, i+m+1, this.index(s, i));\n}\nreturn s-m-1;\n},\n@@ -115,7 +115,7 @@ BiwaScheme.Interpreter = BiwaScheme.Class.create({\n// private\nindex_set: function(s, i, v){\n- this.stack[s-i-2] = v;\n+ this.stack[(s-1)-i] = v;\n},\n// private\n@@ -211,7 +211,7 @@ BiwaScheme.Interpreter = BiwaScheme.Class.create({\nbreak;\ncase \"box\":\nvar n=x[1], x=x[2];\n- this.index_set(s, n, [this.index(s, n+1)]); //boxing\n+ this.index_set(s, n+1, [this.index(s, n+1)]); //boxing\nbreak;\ncase \"test\":\nvar thenc=x[1], elsec=x[2];\n@@ -305,14 +305,14 @@ BiwaScheme.Interpreter = BiwaScheme.Class.create({\n// In such case this VM prepares an empty list as the rest argument.\n// --------------------------------------------------------------\n// => We extend the stack to put the empty list.\n- for(var i = -1; i < n_args; i++){\n- this.index_set(s, i-1, this.index(s, i+1));\n+ for(var i = 0; i < n_args+1; i++){\n+ this.index_set(s, i-1, this.index(s, i));\n}\ns++;\n// => Update the number of arguments\n- this.index_set(s, -1, this.index(s, 0) + 1);\n+ this.index_set(s, 0, this.index(s, 0) + 1);\n}\n- this.index_set(s, dotpos, ls);\n+ this.index_set(s, dotpos+1, ls);\n}\nelse {\n// the dot is not found\n",
        "1": "fix index_set",
        "2": "refactor: fix index_set function in interpreter"
    },
    {
        "diff": "diff --git a/.circleci/config.yml b/.circleci/config.yml @@ -166,6 +166,7 @@ jobs:\nfi\nelse\necho 'export DOCKER_IMAGE_TAGS=($CIRCLE_TAG latest)' >> $BASH_ENV\n+ echo 'export DOCKER_BUILD_DEPRECATED=\"true\"' >> $BASH_ENV\nfi\n- run:\nname: Download and import signing key\n@@ -205,7 +206,9 @@ jobs:\nfor tag in \"${DOCKER_IMAGE_TAGS[@]}\"; do\ndocker tag offen/offen:local offen/offen:$tag\n+ if [ ! -z \"$DOCKER_BUILD_DEPRECATED\" ]; then\ndocker tag offen/offen:root offen/offen:$tag-root\n+ fi\ndone\n- run:\nname: Push offen/offen to Docker Hub\n@@ -213,7 +216,9 @@ jobs:\necho \"$DOCKER_ACCESSTOKEN\" | docker login --username $DOCKER_LOGIN --password-stdin\nfor tag in \"${DOCKER_IMAGE_TAGS[@]}\"; do\ndocker push offen/offen:$tag\n+ if [ ! -z \"$DOCKER_BUILD_DEPRECATED\" ]; then\ndocker push offen/offen:$tag-root\n+ fi\ndone\n- store_artifacts:\npath: /tmp/artifacts\n",
        "1": "chore: add deprecated flag for docker build process",
        "2": "Add DOCKER_BUILD_DEPRECATED env var"
    },
    {
        "diff": "diff --git a/docs/app/Components/ComponentDoc/ComponentExample.js b/docs/app/Components/ComponentDoc/ComponentExample.js @@ -138,7 +138,7 @@ class ComponentExample extends Component {\nresetJSX = () => {\nconst { sourceCode } = this.state\nconst original = this.getOriginalSourceCode()\n- if (sourceCode !== original && confirm('Loose your changes?')) { // eslint-disable-line no-alert\n+ if (sourceCode !== original && confirm('Lose your changes?')) { // eslint-disable-line no-alert\nthis.setState({ sourceCode: original })\nthis.renderSourceCode()\n}\n",
        "1": "Fix eslint error in resetJSX",
        "2": "style(docs): corrected spelling mistake in confirmation message"
    },
    {
        "diff": "diff --git a/docs/lib/Components/ModalsPage.js b/docs/lib/Components/ModalsPage.js @@ -104,7 +104,9 @@ const ModalsPage = () => {\nmodalTransition: PropTypes.shape(Fade.propTypes),\ninnerRef: PropTypes.object,\n// if modal should be destructed/removed from DOM after closing\n- unmountOnClose: PropTypes.bool // defaults to true\n+ unmountOnClose: PropTypes.bool, // defaults to true\n+ // if the element which triggered the modal to open should focused after the modal closes (see example somewhere below)\n+ returnFocusAfterClose: PropTypes.bool // defaults to true\n}`}\n</PrismCode>\n</pre>\n",
        "1": "Add returnFocusAfterClose prop to ModalsPage",
        "2": "docs(ModalsPage): Added `returnFocusAfterClose` prop"
    },
    {
        "diff": "diff --git a/components/SimilarityGraph/index.js b/components/SimilarityGraph/index.js @@ -109,7 +109,7 @@ export default class SimilarityGraph extends VisComponent {\n.attr('x1', d => d.source.x)\n.attr('y1', d => d.source.y)\n.attr('x2', d => d.target.x)\n- .attr('y2', d => d.target.y)\n+ .attr('y2', d => d.target.y);\n});\nthis.cola.avoidOverlaps(true)\n",
        "1": "fix(SimilarityGraph): add missing semicolon to y2 attribute definition",
        "2": "fix: add missing semicolon"
    },
    {
        "diff": "diff --git a/packages/menu/Menu.vue b/packages/menu/Menu.vue @@ -4,7 +4,6 @@ import { addClass, removeClass, hasClass } from 'element-ui/src/utils/dom';\nimport { computed, getCurrentInstance, onMounted, provide, ref, toRefs, watch, h , Transition } from 'vue';\nimport {useEmitter} from 'element-ui/src/use/emitter';\nimport {useItems} from \"./src/menu-use\";\n-import { Submenu } from '../../types';\nexport default {\nname: 'ElMenu',\ncomponentName: 'ElMenu',\n",
        "1": "fix: remove unused import",
        "2": "refactor: Remove unnecessary import in Menu.vue"
    },
    {
        "diff": "diff --git a/src/jscad/includeJscadSync.js b/src/jscad/includeJscadSync.js @@ -25,8 +25,6 @@ export default function includeJscadSync (relpath, fn, memFs) {\nxhr.open('GET', url, false)\nxhr.onload = function () {\nvar src = this.responseText\n- //console.log('src',src)\n- //eval(src) // UGH ???\nresolve(src)\n}\nxhr.onerror = (err) => reject(err)\n",
        "1": "refactor: remove unnecessary console.log and eval statements in includeJscadSync function",
        "2": "remove commented code and remove unused code"
    },
    {
        "diff": "diff --git a/lib/config/load.js b/lib/config/load.js @@ -69,6 +69,9 @@ function load(settings, options, config, callback) {\nif (!options.script && !options.exec) {\nvar found = findAppScript();\nif (found) {\n+ if (!options.args) {\n+ options.args = [];\n+ }\n// if the script is found as a result of not being on the command\n// line, then we move any of the pre double-dash args in execArgs\nconst n = options.scriptPosition || options.args.length;\n",
        "1": "fix(config): add default value for options.args in load function",
        "2": "fix: add default args to options if not set"
    },
    {
        "diff": "diff --git a/lib/monitor/run.js b/lib/monitor/run.js @@ -133,6 +133,12 @@ function run(options) {\nbus.stdout = child.stdout;\nbus.stderr = child.stderr;\n}\n+\n+ if (shouldFork) {\n+ child.on('message', function (message, sendHandle) {\n+ bus.emit('message', message, sendHandle);\n+ });\n+ }\n}\nbus.emit('start');\n",
        "1": "feat: add message event listener for child process communication",
        "2": "Emit message event when forking"
    },
    {
        "diff": "diff --git a/src/features/visualization/Visualization.module.css b/src/features/visualization/Visualization.module.css -webkit-animation-name: delta;\n-webkit-animation-duration: 2s;\n-webkit-animation-iteration-count: infinite;\n- animation: delta 5s infinite;\n+ animation: delta 2s infinite;\n}\n@keyframes delta {\n- 0% {\n+ 50% {\n-webkit-clip-path: polygon(50% 0%, 0% 100%, 100% 100%);\nclip-path: polygon(50% 0%, 0% 100%, 100% 100%);\n},\n- 100% {\n+ 0%, 100% {\n}\n}\n-webkit-animation-name: plus;\n-webkit-animation-duration: 2s;\n-webkit-animation-iteration-count: infinite;\n- animation: plus 5s infinite;\n+ animation: plus 2s infinite;\n}\n@keyframes plus {\n- 0% {\n+ 50% {\n-webkit-clip-path: polygon(0% 33%, 33% 33%, 33% 0%, 66% 0%, 66% 33%, 100% 33%, 100% 66%, 66% 66%, 66% 100%, 33% 100%, 33% 66%, 0% 66%, 0% 33%);\nclip-path: polygon(0% 33%, 33% 33%, 33% 0%, 66% 0%, 66% 33%, 100% 33%, 100% 66%, 66% 66%, 66% 100%, 33% 100%, 33% 66%, 0% 66%, 0% 33%);\n},\n- 100% {\n+ 0%, 100% {\n}\n}\n-webkit-animation-name: minus;\n-webkit-animation-duration: 2s;\n-webkit-animation-iteration-count: infinite;\n- animation: minus 5s infinite;\n+ animation: minus 2s infinite;\n}\n@keyframes minus {\n- 0% {\n+ 50% {\n-webkit-clip-path: polygon(0% 33%, 100% 33%, 100% 66%, 0% 66%);\nclip-path: polygon(0% 33%, 100% 33%, 100% 66%, 0% 66%);\n},\n- 100% {\n+ 0%, 100% {\n}\n}\n",
        "1": "chore(visualization): Improved animation duration for delta, plus, and minus animations",
        "2": "Update visualization diff"
    },
    {
        "diff": "diff --git a/bin/postinstall.js b/bin/postinstall.js @@ -5,6 +5,8 @@ function main() {\nreturn;\n}\n+ const message = '\\u001b[32mLove nodemon? You can now support the project via the open collective:\\u001b[22m\\u001b[39m\\n > \\u001b[96m\\u001b[1mhttps://opencollective.com/nodemon/donate\\u001b[0m\\n';\n+\ntry {\nconst Configstore = require('configstore');\nconst pkg = require(__dirname + '/../package.json');\n@@ -18,11 +20,11 @@ function main() {\nconst last = conf.get('lastCheck');\nif (!last || now - week > last) {\n- console.log('\\u001b[32mLove nodemon? You can now support the project via the open collective:\\u001b[22m\\u001b[39m\\n > \\u001b[96m\\u001b[1mhttps://opencollective.com/nodemon/donate\\u001b[0m\\n');\n+ console.log(message);\nconf.set('lastCheck', now);\n}\n} catch (e) {\n- console.log('\\u001b[32mLove nodemon? You can now support the project via the open collective:\\u001b[22m\\u001b[39m\\n > \\u001b[96m\\u001b[1mhttps://opencollective.com/nodemon/donate\\u001b[0m\\n');\n+ console.log(message);\n}\n}\n",
        "1": "fix: donate message",
        "2": "chore: update support message in postinstall script"
    },
    {
        "diff": "diff --git a/src/PopperContent.js b/src/PopperContent.js @@ -151,8 +151,8 @@ class PopperContent extends React.Component {\nmodifiers={extendedModifiers}\nplacement={placement}\n>\n- {({ ref, style, placement, arrowProps }) => (\n- <div ref={ref} style={style} className={popperClassName} x-placement={placement}>\n+ {({ ref, style, placement, outOfBoundaries, arrowProps }) => (\n+ <div ref={ref} style={style} className={popperClassName} x-placement={placement} x-out-of-boundaries={outOfBoundaries ? 'true' : undefined}>\n{children}\n{!hideArrow && <span ref={arrowProps.ref} className={arrowClassName} style={arrowProps.style} />}\n</div>\n",
        "1": "Add outOfBoundaries prop to PopperContent",
        "2": "refactor: Update PopperContent component to include outOfBoundaries prop in div attributes"
    },
    {
        "diff": "diff --git a/examples/demo/public/index.tsx b/examples/demo/public/index.tsx @@ -7,10 +7,12 @@ import Header from './header.tsx';\nconst sleep = t => new Promise(r => setTimeout(r, t));\n+const IS_CLIENT = typeof window !== 'undefined';\n+\nconst About = lazy(() => import('./pages/about/index.js'));\n-const LazyAndLate = lazy(async () => (await sleep(1500), import('./pages/about/index.js')));\n+const LazyAndLate = lazy(async () => (IS_CLIENT && (await sleep(1500)), import('./pages/about/index.js')));\nconst CompatPage = lazy(() => import('./pages/compat.js'));\n-const ClassFields = lazy(async () => (await sleep(1500), import('./pages/class-fields.js')));\n+const ClassFields = lazy(async () => (IS_CLIENT && (await sleep(1500)), import('./pages/class-fields.js')));\nconst Files = lazy(() => import('./pages/files/index.js'));\nconst Environment = lazy(async () => (await import('./pages/environment/index.js')).Environment);\nconst JSONView = lazy(async () => (await import('./pages/json.js')).JSONView);\n",
        "1": "fix: only sleep when client",
        "2": "refactor: optimize lazy loading logic with client-side check"
    },
    {
        "diff": "diff --git a/package.json b/package.json \"build:docs-toc\": \"doctoc ./.github/CONTRIBUTING.md --github --maxlevel 4\",\n\"build:docs-cname\": \"echo react.semantic-ui.com > docs/build/CNAME\",\n\"build:changelog\": \"github_changelog_generator --no-issues --no-unreleased --release-branch master --since-tag $(git describe --abbrev=0 --tags $(git rev-parse HEAD~400))\",\n+ \"deploy:changelog\": \"git add CHANGELOG.md && git commit -m 'docs(changelog): update changelog [ci skip]' && git push\",\n\"predeploy:docs\": \"cross-env NODE_ENV=production yarn build:docs && yarn build:docs-cname\",\n\"deploy:docs\": \"gh-pages -d docs/build -m 'deploy docs [ci skip]'\",\n+ \"postdeploy:docs\": \"yarn build:changelog && yarn deploy:changelog\",\n\"lint\": \"cross-env NODE_ENV=production eslint .\",\n\"lint:fix\": \"yarn lint --fix\",\n\"prettier\": \"prettier --list-different \\\"**/*.{js,jsx,ts,tsx}\\\"\",\n",
        "1": "feat(deploy): add automated changelog deployment process",
        "2": "docs(changelog): update changelog after docs build"
    },
    {
        "diff": "diff --git a/package.json b/package.json {\n\"name\": \"@nuxtjs/firebase\",\n- \"version\": \"5.0.7\",\n+ \"version\": \"5.1.0\",\n\"description\": \"Intergrate Firebase into your Nuxt project.\",\n\"keywords\": [\n\"firebase\",\n\"cz-conventional-changelog\": \"latest\",\n\"eslint\": \"latest\",\n\"firebase\": \"^7.14.2\",\n- \"husky\": \"latest\",\n+ \"husky\": \"^4.2.5\",\n\"jest\": \"^25.5.3\",\n\"standard-version\": \"latest\",\n\"vuepress\": \"^1.4.1\",\n",
        "1": "chore(release): 5.1.0",
        "2": "chore(deps): update husky version to ^4.2.5"
    },
    {
        "diff": "diff --git a/test/specs/modules/Checkbox/Checkbox-test.js b/test/specs/modules/Checkbox/Checkbox-test.js @@ -53,7 +53,7 @@ describe('Checkbox', () => {\n})\ndescribe('aria', () => {\n- ['aria-label', 'role'].forEach((propName) => {\n+ ;['aria-label', 'role'].forEach((propName) => {\nit(`passes \"${propName}\" to the <input>`, () => {\nshallow(<Checkbox {...{ [propName]: 'foo' }} />)\n.find('input')\n@@ -377,36 +377,30 @@ describe('Checkbox', () => {\ndescription: 'click on label: fires on mouse click',\nevents: {\nlabel: ['mouseup', 'click'],\n- input: ['click'],\n},\n},\n{\ndescription: 'click on input: fires on mouse click',\nevents: {\n- label: ['mouseup', 'click'],\ninput: ['click'],\n},\n},\n{\ndescription: 'key on input: fires on space key',\nevents: {\n- label: ['mouseup', 'click'],\ninput: ['click'],\n},\n},\n-\n{\ndescription: 'click on label with \"id\": fires on mouse click',\nevents: {\nlabel: ['mouseup', 'click'],\n- input: ['click'],\n},\nid: 'foo',\n},\n{\ndescription: 'click on input with \"id\": fires on mouse click',\nevents: {\n- label: ['mouseup', 'click'],\ninput: ['click'],\n},\nid: 'foo',\n@@ -435,8 +429,10 @@ describe('Checkbox', () => {\n{ attachTo },\n)\n- _.forEach(events, (event, target) => {\n- domEvent.fire(`[data-id=${dataId}] ${target}`, event)\n+ _.forEach(events, (targetEvents, target) => {\n+ _.forEach(targetEvents, (targetEvent) => {\n+ domEvent.fire(`[data-id=${dataId}] ${target}`, targetEvent)\n+ })\n})\nonClick.should.have.been.calledOnce()\n@@ -449,10 +445,10 @@ describe('Checkbox', () => {\n})\ndescribe('Controlled component', () => {\n- const getControlledCheckbox = isOnClick =>\n+ const getControlledCheckbox = (isOnClick) =>\nclass ControlledCheckbox extends React.Component {\nstate = { checked: false }\n- toggle = () => this.setState(prevState => ({ checked: !prevState.checked }))\n+ toggle = () => this.setState((prevState) => ({ checked: !prevState.checked }))\nrender() {\nconst handler = isOnClick ? { onClick: this.toggle } : { onChange: this.toggle }\n",
        "1": "test(core-checkbox): refactor event handling logic in Checkbox-test.js",
        "2": "Fix checkbox tests"
    },
    {
        "diff": "diff --git a/README.md b/README.md @@ -123,7 +123,7 @@ export default async function (config) {\n}\nif (config.mode === 'serve') {\n- options.middleware.push(\n+ config.middleware.push(\n// add any Polka middleware:\nfunction myPolkaMiddleware(req, res, next) {\nres.setHeader('X-Foo', 'bar');\n",
        "1": "docs(README): update comment for `middleware` usage",
        "2": "docs: fix typo in config.middleware.push"
    },
    {
        "diff": "diff --git a/docs/src/examples/modules/Search/Types/SearchExampleStandardCustom.js b/docs/src/examples/modules/Search/Types/SearchExampleStandardCustom.js -import PropTypes from 'prop-types'\nimport _ from 'lodash'\nimport faker from 'faker'\n-import React, { Component } from 'react'\n+import React from 'react'\nimport { Search, Grid, Header, Segment, Label } from 'semantic-ui-react'\nconst source = _.times(5, () => ({\n@@ -11,58 +10,80 @@ const source = _.times(5, () => ({\nprice: faker.finance.amount(0, 100, 2, '$'),\n}))\n-const resultRenderer = ({ title }) => <Label content={title} />\n-\n-resultRenderer.propTypes = {\n- title: PropTypes.string,\n- description: PropTypes.string,\n+const initialState = {\n+ loading: false,\n+ results: [],\n+ value: '',\n}\n-const initialState = { isLoading: false, results: [], value: '' }\n+function exampleReducer(state, action) {\n+ switch (action.type) {\n+ case 'CLEAN_QUERY':\n+ return initialState\n+ case 'START_SEARCH':\n+ return { ...state, loading: true, value: action.query }\n+ case 'FINISH_SEARCH':\n+ return { ...state, loading: false, results: action.results }\n+ case 'UPDATE_SELECTION':\n+ return { ...state, value: action.selection }\n-export default class SearchExampleStandard extends Component {\n- state = initialState\n+ default:\n+ throw new Error()\n+ }\n+}\n- handleResultSelect = (e, { result }) => this.setState({ value: result.title })\n+const resultRenderer = ({ title }) => <Label content={title} />\n+\n+function SearchExampleStandardCustom() {\n+ const [state, dispatch] = React.useReducer(exampleReducer, initialState)\n+ const { loading, results, value } = state\n- handleSearchChange = (e, { value }) => {\n- this.setState({ isLoading: true, value })\n+ const timeoutRef = React.useRef()\n+ const handleSearchChange = React.useCallback((e, data) => {\n+ clearTimeout(timeoutRef.current)\n+ dispatch({ type: 'START_SEARCH', query: data.value })\n- setTimeout(() => {\n- if (this.state.value.length < 1) return this.setState(initialState)\n+ timeoutRef.current = setTimeout(() => {\n+ if (data.value.length === 0) {\n+ dispatch({ type: 'CLEAN_QUERY' })\n+ return\n+ }\n- const re = new RegExp(_.escapeRegExp(this.state.value), 'i')\n+ const re = new RegExp(_.escapeRegExp(data.value), 'i')\nconst isMatch = (result) => re.test(result.title)\n- this.setState({\n- isLoading: false,\n+ dispatch({\n+ type: 'FINISH_SEARCH',\nresults: _.filter(source, isMatch),\n})\n}, 300)\n+ }, [])\n+ React.useEffect(() => {\n+ return () => {\n+ clearTimeout(timeoutRef.current)\n}\n-\n- render() {\n- const { isLoading, value, results } = this.state\n+ }, [])\nreturn (\n<Grid>\n<Grid.Column width={6}>\n<Search\n- loading={isLoading}\n- onResultSelect={this.handleResultSelect}\n- onSearchChange={_.debounce(this.handleSearchChange, 500, {\n- leading: true,\n- })}\n+ loading={loading}\n+ onResultSelect={(e, data) =>\n+ dispatch({ type: 'UPDATE_SELECTION', selection: data.result.title })\n+ }\n+ onSearchChange={handleSearchChange}\n+ resultRenderer={resultRenderer}\nresults={results}\nvalue={value}\n- resultRenderer={resultRenderer}\n/>\n</Grid.Column>\n+\n<Grid.Column width={10}>\n<Segment>\n<Header>State</Header>\n<pre style={{ overflowX: 'auto' }}>\n- {JSON.stringify(this.state, null, 2)}\n+ {JSON.stringify({ loading, results, value }, null, 2)}\n</pre>\n<Header>Options</Header>\n<pre style={{ overflowX: 'auto' }}>\n@@ -73,4 +94,5 @@ export default class SearchExampleStandard extends Component {\n</Grid>\n)\n}\n-}\n+\n+export default SearchExampleStandardCustom\n",
        "1": "refactor(search): optimize search functionality and state management",
        "2": "docs(Search): update custom example"
    },
    {
        "diff": "diff --git a/src/connection.js b/src/connection.js import d from 'debug';\n+import values from 'lodash/values';\nimport WebSocketPlus, {\nOPEN,\nDISCONNECT,\n@@ -59,7 +60,7 @@ export default class Connection extends WebSocketPlus {\nif (waitingForRespond) {\nif (isIdempotentCommand(command)) {\nbuffer = command.toArrayBuffer();\n- const duplicatedCommand = Object.values(this._commands).find(\n+ const duplicatedCommand = values(this._commands).find(\n({ buffer: targetBuffer, command: targetCommand }) =>\ntargetCommand.cmd === command.cmd &&\ntargetCommand.op === command.op &&\n",
        "1": "fix: use lodash values instead of Object.values",
        "2": "fix: replace Object.values with lodash values in Connection class"
    },
    {
        "diff": "diff --git a/lib/nodemon.js b/lib/nodemon.js @@ -180,8 +180,16 @@ function nodemon(settings) {\n}).filter(Boolean).join(' ');\nif (ignoring) utils.log.detail('ignoring: ' + ignoring);\n- utils.log.info('watching: ' + config.options.monitor.map(function (rule) {\n- return rule.slice(0, 1) !== '!' ? rule : false;\n+ utils.log.info('watching dir(s): ' + config.options.monitor.map(function (rule) {\n+ if (rule.slice(0, 1) !== '!') {\n+ try {\n+ rule = path.relative(process.cwd(), rule);\n+ } catch (e) {}\n+\n+ return rule;\n+ }\n+\n+ return false;\n}).filter(Boolean).join(' '));\nutils.log.detail('watching extensions: ' + (config.options.execOptions.ext || '(all)'));\n",
        "1": "fix: watch dir(s)",
        "2": "feat: Update log message to include watching directories in nodemon settings"
    },
    {
        "diff": "diff --git a/src/common/api/LocalStorageCookiesSvc/index.js b/src/common/api/LocalStorageCookiesSvc/index.js // @flow\nimport * as store from 'store2'\nimport Cookies from 'js-cookie'\n+import decodeJWT from 'jwt-decode'\nexport const JWT_TOKEN = 'JWT_TOKEN'\n@@ -18,4 +19,9 @@ export function setLocalToken (token: string) {\nCookies.set(JWT_TOKEN, token, {expires: 365})\n}\n+export function getInfoFromJWT () {\n+ const token = getLocalToken()\n+ return decodeJWT(token)\n+}\n+\nexport const isLoggedIn = () => !!getLocalToken()\n",
        "1": "Add getInfoFromJWT",
        "2": "feat: add getInfoFromJWT function to retrieve information from JWT token"
    },
    {
        "diff": "diff --git a/docs/src/examples/collections/Menu/Content/MenuExampleHeaderVertical.js b/docs/src/examples/collections/Menu/Content/MenuExampleHeaderVertical.js @@ -3,7 +3,7 @@ import { Menu } from 'semantic-ui-react'\nexport default class MenuExampleHeaderVertical extends Component {\nstate = {}\n- handleItemClick = (name) => this.setState({ activeItem: name })\n+ handleItemClick = (e, { name }) => this.setState({ activeItem: name });\nrender() {\nconst { activeItem } = this.state\n",
        "1": "docs(menu): update handleItemClick function in MenuExampleHeaderVertical",
        "2": "fix(docs): fix menu example"
    },
    {
        "diff": "diff --git a/docs/content/en/service-options/auth.md b/docs/content/en/service-options/auth.md @@ -118,6 +118,14 @@ The injected user can be used by context aware life cycle hooks on the server si\nA tutorial on how to set this up can be found [here](/tutorials/ssr).\n+<alert type=\"info\">\n+<p><b>Please Note:</b></p>\n+<p>This <u>does not authenticate the Firebase instance on the server</u>. While you will be able to know if a user is logged in or not and have access to its simplified properties, you <u>won't be able to do authenticated calls</u> on server-side.</p><br>\n+<p>This means that all calls on server-side (e.g. fetching data via Firestore in fetch-hooks), which are protected by security rules, will still fail with <i>insufficient privileges.</i></p>\n+<br>\n+<p>Reason for this is that the Firebase JS SDK is a client-side library that is not built for authenticating multiple users. See the <nuxt-link to=\"/service-options/auth#serverlogin\">serverLogin</nuxt-link> option for an <b>experimental</b> approach to solve this issue.</p>\n+</alert>\n+\n### ignorePaths\nThe service worker session automatically ignores external resources, static files and HMR calls.\n",
        "1": "docs: Add note about Firebase authentication limitations on the server side",
        "2": "Add note about server-side authentication"
    },
    {
        "diff": "diff --git a/src/common/app/configure_app.js b/src/common/app/configure_app.js @@ -4,10 +4,10 @@ import thunk from 'redux-thunk'\nimport {autoRehydrate} from 'redux-persist'\nimport {createStore, applyMiddleware, compose} from 'redux'\nimport {routerMiddleware} from 'react-router-redux'\n-// Application\n+// // Application\nimport rootReducer from 'reducers'\n-import {routes, history} from 'routing'\n-\n+import {history, routes} from 'routing'\n+//\n/**\n* Configure application store with middlewares.\n* @param {Object} initialState - preloadedState\n@@ -18,7 +18,7 @@ const configureStore = (initialState: Object) => {\nconst middlewares = [thunk, routerMiddleware(history)]\nconst appliedMiddlewares = middlewares.map(a => applyMiddleware(a))\nconst enhancers = [rehydrate].concat(appliedMiddlewares)\n- //\n+\nconst getComposeFunc = () => {\nif (process.env.NODE_ENV === 'development') {\nconst {composeWithDevTools} = require('redux-devtools-extension')\n",
        "1": "fix: linting errors",
        "2": "refactor: reorganize imports in configure_app.js file"
    },
    {
        "diff": "diff --git a/test/spec.html b/test/spec.html <div id=\"div1\">div tag sample <span class=\"inner\">stuff</span></div>\n<div id=\"bs-console\"></div>\n-<script type=\"text/javascript\">// <![CDATA[\n+<script type=\"text/javascript\">\nvar loader_development = function(){\n- document.write(\"<script type='module' src='../src/main-browser.js'><\\/script>\" +\n+ document.write(\"<script type='text/javascript' src='../src/deps/jquery.js'><\\/script>\" +\n+ \"<script type='module' src='../src/main-browser.js'><\\/script>\" +\n\"<script type='module'>\"+\n\"if(console) console.log('BiwaScheme '+BiwaScheme.VERSION);\" +\n\"RegisterBiwaSchemeTests();\" +\n@@ -47,8 +48,7 @@ switch(location.hash){\nif(console) console.log(\"starting tests for src/*.js\");\nloader_development();\n}\n-\n-// ]]></script>\n+</script>\n</body>\n</html>\n<!-- vim:set ft=javascript: -->\n",
        "1": "test(spec): update script loading logic in spec.html",
        "2": "add jquery.js to dev server"
    },
    {
        "diff": "diff --git a/src/common/app/configure_root.jsx b/src/common/app/configure_root.jsx @@ -10,6 +10,7 @@ import Root from 'components/parts/Root'\nimport 'styles/global'\ntype Props = {\n+ i18n: Object,\nstore: Object, // unconfigured store\nSSR: {\n// SSR options, see `/server` for more info\n@@ -24,9 +25,9 @@ type Props = {\n* Configure Root component.\n*/\n-const configureRootComponent = ({store, SSR, history, routes}: Props) => {\n- const props = {store, SSR, history, routes}\n+const configureRootComponent = (props: Props) => {\nif (module.hot) {\n+ const {store} = props\n// Enable Webpack hot module replacement for reducers\nmodule.hot.accept('reducers', () => {\nconst nextRootReducer = require('reducers').default\n",
        "1": "fix: fix root component",
        "2": "refactor(app): Simplify configureRootComponent function and enable hot module replacement for reducers"
    },
    {
        "diff": "diff --git a/website/pages/deployment-options/azure.md b/website/pages/deployment-options/azure.md [Install the Azure CLI](https://docs.microsoft.com/en-us/cli/azure/install-azure-cli)\n+Add razzle config\n+\n+```js\n+// razzle.config.js\n+'use strict';\n+\n+module.exports = {\n+ options: {\n+ forceRuntimeEnvVars: ['HOST', 'PORT']\n+ }\n+};\n+```\n+\nCreate web.config\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<!--\n+ web.config\nThis configuration file is required if iisnode is used to run node processes behind\nIIS or IIS Express. For more information, visit:\nhttps://github.com/tjanczuk/iisnode/blob/master/src/samples/configuration/web.config\n@@ -66,10 +80,10 @@ Create web.config\n</configuration>\n```\n-Build the Razzle project\n+Zip the Razzle project\n```bash\n-yarn build\n+zip -r site.zip * -x \"build/*\" \"node_modules/*\"\n```\nLogin to Azure\n@@ -87,18 +101,21 @@ webappname=myRazzle$RANDOM\naz group create --location westeurope --name myResourceGroup\n# Create an App Service plan in `FREE` tier.\n-az appservice plan create --name myAppServicePlan --resource-group myResourceGroup --sku FREE\n+az appservice plan create --name myAppServicePlan --resource-group myResourceGroup --sku FREE --is-linux\n# Create a web app.\n-az webapp create --name $webappname --resource-group myResourceGroup --plan myAppServicePlan\n+az webapp create --name $webappname --resource-group myResourceGroup --plan myAppServicePlan --runtime \"node|12-lts\"\n+\n+# Enable building with zip deploy\n+az webapp config appsettings set --name $webappname --resource-group myResourceGroup --settings SCM_DO_BUILD_DURING_DEPLOYMENT=true\n# Get FTP publishing profile and query for publish URL and credentials\ncreds=($(az webapp deployment list-publishing-profiles --name $webappname --resource-group myResourceGroup \\\n---query \"[?contains(publishMethod, 'FTP')].[publishUrl,userName,userPWD]\" --output tsv))\n+--query \"[?contains(publishMethod, 'ZipDeploy')].[publishUrl,userName,userPWD]\" --output tsv))\n# Use cURL to perform FTP upload. You can use any FTP tool to do this instead.\n-curl -T index.html -u ${creds[1]}:${creds[2]} ${creds[0]}/\n+curl -X POST -u ${creds[1]}:${creds[2]} --data-binary @\"site.zip\" https://${creds[0]}/api/zipdeploy\n# Copy the result of the following command into a browser to see the static HTML site.\n-echo http://$webappname.azurewebsites.net\n+echo https://$webappname.azurewebsites.net\n```\n",
        "1": "add razzle config",
        "2": "docs: add razzle config and create web.config for Azure deployment [skip ci]"
    }
]