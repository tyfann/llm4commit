[
    {
        "msg": "Fix page crashed when apply multi chain\nSet currentChainId value in chain page.",
        "diff": "diff --git a/user-dashboard/js/dashboard/src/routes/Chain/index.js b/user-dashboard/js/dashboard/src/routes/Chain/index.js @@ -90,6 +90,7 @@ class Chain extends PureComponent {\nconst {loading} = this.state;\nconst { queryByBlockId:{queryByBlockId } } = this.props.chain;\nconst { queryByTransactionId : {queryByTransactionId}} = this.props.chain\n+ const currentChainId = localStorage.getItem(`${window.apikey}-chainId`);\nconst cb = () => {\nconsole.log('expired callback')\n}\n",
        "lang": "Python",
        "codet5-history": "fix: add currentChainId to diff"
    },
    {
        "msg": "fkie_node_manager: editor: clear search results on activate and search for a node",
        "diff": "diff --git a/fkie_node_manager/src/fkie_node_manager/editor/editor.py b/fkie_node_manager/src/fkie_node_manager/editor/editor.py @@ -401,6 +401,8 @@ class Editor(QMainWindow):\nbreak\nself.tabWidget.setUpdatesEnabled(True)\nif search_text:\n+ if only_launch:\n+ self.find_dialog.found_files_list.clear()\ntry:\nself._search_thread.stop()\nself._search_thread = None\n",
        "lang": "Python",
        "codet5-history": "Clear found_files_list when search is done"
    },
    {
        "msg": "blogpost mentions now link to blogposts",
        "diff": "diff --git a/routes/cube_routes.js b/routes/cube_routes.js @@ -273,7 +273,7 @@ router.post('/blog/post/:id', ensureAuth, async (req, res) => {\nawait util.addMultipleNotifications(\nquery,\nowner,\n- `/cube/blog/${req.params.id}`, // there's no way to link to a specific post, so the blog page is the best we can do\n+ `/cube/blogpost/${blogpost._id}`,\n`${user.username} mentioned you in their blog post.`,\n);\n}\n@@ -2400,7 +2400,7 @@ router.post('/edit/:id', ensureAuth, async (req, res) => {\nawait util.addMultipleNotifications(\nquery,\nowner,\n- `/cube/blog/${req.params.id}`, // there's no way to link to a specific post, so the blog page is the best we can do\n+ `/cube/blogpost/${blogpost._id}`,\n`${cube.owner_name} mentioned you in their blog post.`,\n);\n}\n",
        "lang": "JavaScript",
        "codet5-history": "Fix the link to the blog post"
    },
    {
        "msg": "node_manager_fkie: changed font color in echo dialog",
        "diff": "diff --git a/node_manager_fkie/src/node_manager_fkie/echo_dialog.py b/node_manager_fkie/src/node_manager_fkie/echo_dialog.py @@ -366,7 +366,7 @@ class EchoDialog(QDialog):\ntxt = '<pre style=\"color:red; font-family:Fixedsys,Courier,monospace; padding:10px;\">scrapped %s message because of Hz-settings</pre>' % self._scrapped_msgs_sl\nself.display.append(txt)\nself._scrapped_msgs_sl = 0\n- txt = '<pre style=\"background-color:#FFFCCC; font-family:Fixedsys,Courier; padding:10px;\">---------- %s --------------------\\n%s</pre>' % (datetime.now().strftime(\"%d.%m.%Y %H:%M:%S.%f\"), msg)\n+ txt = '<pre style=\"background-color:#FFFCCC; color:#000000;font-family:Fixedsys,Courier; padding:10px;\">---------- %s --------------------\\n%s</pre>' % (datetime.now().strftime(\"%d.%m.%Y %H:%M:%S.%f\"), msg)\n# set the count of the displayed messages on receiving the first message\nself._update_max_msg_count(txt)\nself.display.append(txt)\n@@ -459,7 +459,7 @@ class EchoDialog(QDialog):\nself._count_messages(current_time)\n# limit the displayed text width\nm = self._trim_width(m)\n- txt = '<pre style=\"background-color:#FFFCCC; font-family:Fixedsys,Courier; padding:10px;\">---------- %s --------------------\\n%s</pre>' % (datetime.now().strftime(\"%d.%m.%Y %H:%M:%S.%f\"), m)\n+ txt = '<pre style=\"background-color:#FFFCCC; color:#000000;font-family:Fixedsys,Courier; padding:10px;\">---------- %s --------------------\\n%s</pre>' % (datetime.now().strftime(\"%d.%m.%Y %H:%M:%S.%f\"), m)\n# set the count of the displayed messages on receiving the first message\nself._update_max_msg_count(txt)\nself.display.append(txt)\n",
        "lang": "Python",
        "codet5-history": "Fixes the color of the echo message in the commit message\nFixes"
    },
    {
        "msg": "Correctly add details.",
        "diff": "diff --git a/routes/cube_routes.js b/routes/cube_routes.js @@ -1387,7 +1387,7 @@ router.post('/bulkreplacefile/:id', ensureAuth, async (req, res) => {\nconst pids = new Set();\nconst cardNames = new Set();\nconst addDetails = (cardList) => {\n- cardList.splice().forEach((card, index) => {\n+ cardList.splice().map((card, index) => {\ncard = { ...card, details: { ...carddb.cardFromId(card.cardID) }, index };\nif (!card.type_line) {\ncard.type_line = card.details.type;\n@@ -1396,6 +1396,7 @@ router.post('/bulkreplacefile/:id', ensureAuth, async (req, res) => {\npids.add(card.details.tcgplayer_id);\n}\ncardNames.add(card.details.name);\n+ return card;\n});\nreturn cardList;\n};\n",
        "lang": "JavaScript",
        "codet5-history": "Fix bulkreplacefile route"
    },
    {
        "msg": "Ansible: testdrive - updating tutorial repo and adp branch",
        "diff": "diff --git a/dev-tools/ansible/inventories/scigap/production/host_vars/testdrive/vars.yml b/dev-tools/ansible/inventories/scigap/production/host_vars/testdrive/vars.yml ---\nairavata_django_extra_dependencies:\n- - git+https://github.com/machristie/custom_ui_tutorial_app.git@main#egg=custom_ui_tutorial_app\n-airavata_django_git_branch: \"staging\"\n+ - git+https://github.com/machristie/custom_ui_tutorial_app_solution.git@main#egg=custom_ui_tutorial_app\n+airavata_django_git_branch: \"master\"\nvhost_servername: \"testdrive.airavata.org\"\nvhost_ssl: True\nssl_certificate_file: \"/etc/letsencrypt/live/testdrive.airavata.org/cert.pem\"\n",
        "lang": "Java",
        "codet5-history": "Update custom_ui_tutorial_app branch to master"
    },
    {
        "msg": "Prioritizing group compute resource preference to be loaded into the context",
        "diff": "diff --git a/modules/airavata-helix/helix-spectator/src/main/java/org/apache/airavata/helix/impl/task/TaskContext.java b/modules/airavata-helix/helix-spectator/src/main/java/org/apache/airavata/helix/impl/task/TaskContext.java @@ -770,6 +770,11 @@ public class TaskContext {\nctx.setGatewayId(gatewayId);\nctx.setProcessId(processId);\n+ ctx.setGroupComputeResourcePreference(registryClient.getGroupComputeResourcePreference(processModel.getComputeResourceId(),\n+ processModel.getGroupResourceProfileId()));\n+\n+ ctx.setGroupResourceProfile(registryClient.getGroupResourceProfile(processModel.getGroupResourceProfileId()));\n+\nctx.setGatewayComputeResourcePreference(\nOptional.ofNullable(registryClient.getGatewayComputeResourcePreference(\ngatewayId,\n@@ -806,11 +811,6 @@ public class TaskContext {\nctx.getStorageResourceId()))\n.orElseThrow(() -> new Exception(\"Invalid Storage Resource Description\")));\n- ctx.setGroupResourceProfile(registryClient.getGroupResourceProfile(processModel.getGroupResourceProfileId()));\n-\n- ctx.setGroupComputeResourcePreference(registryClient.getGroupComputeResourcePreference(processModel.getComputeResourceId(),\n- processModel.getGroupResourceProfileId()));\n-\nif (processModel.isUseUserCRPref()) {\nctx.setUserResourceProfile(registryClient.getUserResourceProfile(processModel.getUserName(), gatewayId));\nctx.setUserComputeResourcePreference(registryClient.getUserComputeResourcePreference(\n",
        "lang": "Java",
        "codet5-history": "Fix group resource preference not being set in task context"
    },
    {
        "msg": "Directing the stdout of curl monitoring commands to /dev/null",
        "diff": "diff --git a/modules/airavata-helix/helix-spectator/src/main/java/org/apache/airavata/helix/impl/task/submission/JobSubmissionTask.java b/modules/airavata-helix/helix-spectator/src/main/java/org/apache/airavata/helix/impl/task/submission/JobSubmissionTask.java @@ -233,7 +233,7 @@ public abstract class JobSubmissionTask extends AiravataTask {\nmapData.getPreJobCommands().add(0, \"curl -X POST -H \\\"Content-Type: application/vnd.kafka.json.v2+json\\\" \" +\n\"-H \\\"Accept: application/vnd.kafka.v2+json\\\" \" +\n\"--data '{\\\"records\\\":[{\\\"value\\\":{\\\"jobName\\\":\\\"\" + mapData.getJobName() + \"\\\", \\\"status\\\":\\\"RUNNING\\\"}}]}' \\\"\" +\n- ServerSettings.getSetting(\"job.status.publish.endpoint\") + \"\\\" || true\");\n+ ServerSettings.getSetting(\"job.status.publish.endpoint\") + \"\\\" > /dev/null || true\");\nif (mapData.getPostJobCommands() == null) {\nmapData.setPostJobCommands(new ArrayList<>());\n@@ -242,6 +242,6 @@ public abstract class JobSubmissionTask extends AiravataTask {\nmapData.getPostJobCommands().add(\"curl -X POST -H \\\"Content-Type: application/vnd.kafka.json.v2+json\\\" \" +\n\"-H \\\"Accept: application/vnd.kafka.v2+json\\\" \" +\n\"--data '{\\\"records\\\":[{\\\"value\\\":{\\\"jobName\\\":\\\"\" + mapData.getJobName() + \"\\\", \\\"status\\\":\\\"COMPLETED\\\"}}]}' \\\"\" +\n- ServerSettings.getSetting(\"job.status.publish.endpoint\") + \"\\\" || true\");\n+ ServerSettings.getSetting(\"job.status.publish.endpoint\") + \"\\\" > /dev/null || true\");\n}\n}\n",
        "lang": "Java",
        "codet5-history": "Add /dev/null to job.status.publish.endpoint"
    },
    {
        "msg": "Use 'become' to open port 22 in firewall",
        "diff": "diff --git a/dev-tools/ansible/roles/env_setup/tasks/main.yml b/dev-tools/ansible/roles/env_setup/tasks/main.yml - name: open firewall port 22 for SSH connections\nfirewalld: port=\"22/tcp\"\nzone=public permanent=true state=enabled immediate=yes\n- become_user: root\n+ become: yes\n...\n",
        "lang": "Java",
        "codet5-history": "Fix the diff command for ssh connection"
    },
    {
        "msg": "Create temp directory for local django portal clone/build",
        "diff": "diff --git a/dev-tools/ansible/roles/django/tasks/main.yml b/dev-tools/ansible/roles/django/tasks/main.yml file: path=\"{{ doc_root_dir }}\" state=directory owner=\"{{user}}\" group=\"{{group}}\"\nbecome: yes\n+- name: Create local temp directory for django portal clone and build\n+ local_action:\n+ module: tempfile\n+ # The temp directory must be in a location that allows it to be mounted\n+ # into the Docker container. On macOS the default behavior creates temp\n+ # directories in /var but /var isn't available to Docker containers.\n+ path: /tmp\n+ state: directory\n+ register: airavata_django_portal_tempdir\n+ run_once: true\n+\n- name: git clone django repo\nlocal_action:\nmodule: git\nrepo: \"{{ airavata_django_repo }}\"\n- # TODO: create new temp directory\n- dest: \"/tmp/airavata-django-portal\"\n+ dest: \"{{ airavata_django_portal_tempdir.path }}\"\n# TODO: change to {{ airavata_django_git_branch }}\nversion: \"local-builds\"\nupdate: yes\n- name: build Docker image for building the JS\nlocal_action:\nmodule: docker_image\n- # TODO: use temp directory\n- path: \"/tmp/airavata-django-portal/scripts/docker-build/\"\n+ path: \"{{ airavata_django_portal_tempdir.path }}/scripts/docker-build/\"\n+ # TODO: rename to airavata-django-build\nname: av-django-build\nforce: true\n# source: build\nimage: av-django-build\ncleanup: true\ndetach: false\n- # TODO: use temp directory\nvolumes:\n- - /tmp/airavata-django-portal:/code\n+ - \"{{ airavata_django_portal_tempdir.path }}:/code\"\nrun_once: true\n- name: rsync build Django code to {{ airavata_django_checkout }}\nsynchronize:\n- src: /tmp/airavata-django-portal/\n+ src: \"{{ airavata_django_portal_tempdir.path }}/\"\ndest: \"{{ airavata_django_checkout }}\"\nrsync_opts:\n- \"--exclude=node_modules\"\n",
        "lang": "Java",
        "codet5-history": "Create local temp directory for django portal clone and build"
    },
    {
        "msg": "Updating SendGrid sample",
        "diff": "diff --git a/sample/SendGrid/function.json b/sample/SendGrid/function.json \"name\": \"$return\",\n\"direction\": \"out\",\n\"apiKey\" : \"MySendGridKey\",\n- \"to\": \"{customerEmail}\"\n+ \"to\": \"{customerEmail}\",\n+ \"from\": \"functions@azure.com\"\n}\n]\n}\n",
        "lang": "C#",
        "codet5-history": "Add from to the diff"
    },
    {
        "msg": "Remove \"cached_property\" from Units class",
        "diff": "diff --git a/sc2/units.py b/sc2/units.py from __future__ import annotations\nimport random\n-from functools import cached_property\nfrom itertools import chain\nfrom typing import TYPE_CHECKING, Any, Callable, Generator, Iterable, List, Optional, Set, Tuple, Union\n@@ -633,15 +632,14 @@ class Units(list):\nunit_alias_types\n)\n- @cached_property\n+ @property\ndef center(self) -> Point2:\n\"\"\" Returns the central position of all units. \"\"\"\nassert self, \"Units object is empty\"\n- amount = self.amount\nreturn Point2(\n(\n- sum(unit._proto.pos.x for unit in self) / amount,\n- sum(unit._proto.pos.y for unit in self) / amount,\n+ sum(unit._proto.pos.x for unit in self) / self.amount,\n+ sum(unit._proto.pos.y for unit in self) / self.amount,\n)\n)\n",
        "lang": "Python",
        "codet5-history": "Use property instead of cached_property"
    },
    {
        "msg": "Change tests to test expansion amount",
        "diff": "diff --git a/test/test_pickled_data.py b/test/test_pickled_data.py @@ -110,7 +110,8 @@ class TestClass:\nbot._game_info.map_ramps, bot._game_info.vision_blockers = bot._game_info._find_ramps_and_vision_blockers()\nassert bot.main_base_ramp # Test if any ramp was found\n# TODO: Cache all expansion positions for a map and check if it is the same\n- assert len(bot.expansion_locations) >= 10\n+ assert len(bot.expansion_locations) >= 10, f\"Too few expansions found: {len(bot.expansion_locations)}\"\n+ assert len(bot.expansion_locations) <= 20, f\"Too many expansions found: {len(bot.expansion_locations)}\"\n# On N player maps, it is expected that there are N*X bases because of symmetry, at least for 1vs1 maps\nassert (\nlen(bot.expansion_locations) % (len(bot.enemy_start_locations) + 1) == 0\n",
        "lang": "Python",
        "codet5-history": "Add more error messages to test_pickled_data.py"
    },
    {
        "msg": "fkie_node_manager: fixed create new file in launch widget",
        "diff": "diff --git a/fkie_node_manager/src/fkie_node_manager/launch_list_model.py b/fkie_node_manager/src/fkie_node_manager/launch_list_model.py @@ -235,21 +235,21 @@ class PathItem(QStandardItem):\nnew_path = os.path.join(os.path.dirname(self.path), value)\ntry:\n# save a new file or rename existing file?\n- content = ''\n+ content = b''\nnew_id = self._identify_path_on_ext(new_path, self.id)\nif self._isnew:\nif new_id in [self.FOLDER]:\nnm.nmd().file.new(new_path, 1)\nelif new_id in [self.LAUNCH_FILE]:\n- content = (\"<launch>\\n\"\n- \" <arg name=\\\"robot_ns\\\" default=\\\"my_robot\\\"/>\\n\"\n- \" <group ns=\\\"$(arg robot_ns)\\\">\\n\"\n- \" <node pkg=\\\"my_pkg\\\" type=\\\"my_node\\\" name=\\\"my_name\\\" >\\n\"\n- \" <param name=\\\"capability_group\\\" value=\\\"MY_GROUP\\\"/>\\n\"\n- \" </node>\\n\"\n- \" </group>\\n\"\n- \"</launch>\\n\")\n- nm.nmd().file.save_file(new_path, bytes(content), 0)\n+ content = (b'<launch>\\n'\n+ b' <arg name=\"robot_ns\" default=\"my_robot\"/>\\n'\n+ b' <group ns=\"$(arg robot_ns)\">\\n'\n+ b' <node pkg=\"my_pkg\" type=\"my_node\" name=\"my_name\" >\\n'\n+ b' <param name=\"capability_group\" value=\"MY_GROUP\"/>\\n'\n+ b' </node>\\n'\n+ b' </group>\\n'\n+ b'</launch>\\n')\n+ nm.nmd().file.save_file(new_path, content, 0)\nelse:\nnm.nmd().file.new(new_path, 0)\nself._isnew = False\n",
        "lang": "Python",
        "codet5-history": "Fix Python 3.6 compatibility\nThis commit fixes Python 3.6 compatibility in the diff"
    },
    {
        "msg": "create private directory in saveAllCards to enable repeated test setup/teardown",
        "diff": "diff --git a/serverjs/updatecards.js b/serverjs/updatecards.js @@ -34,9 +34,6 @@ function updateCardbase(filepath) {\nif (filepath === undefined) {\nfilepath = 'private/cards.json';\n}\n- if (!fs.existsSync('private')) {\n- fs.mkdirSync('private');\n- }\nreturn module.exports.downloadDefaultCards().then(function() {\nconsole.log(\"Running save\");\nvar contents = fs.readFileSync(filepath);\n@@ -93,6 +90,9 @@ function saveAllCards(arr) {\n}\naddCardToCatalog(convertCard(card));\n});\n+ if (!fs.existsSync('private')) {\n+ fs.mkdirSync('private');\n+ }\nvar pendingWrites = [];\npendingWrites.push(writeFile('private/names.json', JSON.stringify(_catalog.names)));\npendingWrites.push(writeFile('private/cardtree.json', JSON.stringify(util.turnToTree(_catalog.names))));\n",
        "lang": "JavaScript",
        "codet5-history": "Move the check to the end of the function"
    },
    {
        "msg": "fix stub and expected values in generate_short_id test",
        "diff": "diff --git a/__tests__/serverjs/cubefn.test.js b/__tests__/serverjs/cubefn.test.js @@ -96,7 +96,7 @@ test(\"legalityToInt returns the expected values\", () => {\ntest(\"generate_short_id returns a valid short ID\", async () => {\nvar dummyModel = {\n- \"shortID\": \"abcdef\",\n+ \"shortID\": \"1x\",\n\"urlAlias\": \"a real alias\"\n};\nvar queryMockPromise = new Promise((resolve, reject) => {\n@@ -109,7 +109,7 @@ test(\"generate_short_id returns a valid short ID\", async () => {\nvar initialCubeFind = Cube.find;\nCube.find = queryMock;\nvar result = await cubefn.generate_short_id();\n- expect(result).toBe(false);\n+ expect(result).toBe(\"1y\");\nCube.find = initialCubeFind;\n});\n",
        "lang": "JavaScript",
        "codet5-history": "Fix shortID test"
    },
    {
        "msg": "client.py changes",
        "diff": "diff --git a/sc2/client.py b/sc2/client.py @@ -336,6 +336,19 @@ class Client(Protocol):\nreturn [[AbilityId(a.ability_id) for a in b.abilities] for b in result.query.abilities][0]\nreturn [[AbilityId(a.ability_id) for a in b.abilities] for b in result.query.abilities]\n+ async def query_available_abilities_with_tag(\n+ self, units: Union[List[Unit], Units], ignore_resource_requirements: bool = False\n+ ) -> Dict[Set[AbilityId]]:\n+ \"\"\" Query abilities of multiple units \"\"\"\n+\n+ result = await self._execute(\n+ query=query_pb.RequestQuery(\n+ abilities=(query_pb.RequestQueryAvailableAbilities(unit_tag=unit.tag) for unit in units),\n+ ignore_resource_requirements=ignore_resource_requirements,\n+ )\n+ )\n+ return {b.unit_tag: {AbilityId(a.ability_id) for a in b.abilities} for b in result.query.abilities}\n+\nasync def chat_send(self, message: str, team_only: bool):\n\"\"\" Writes a message to the chat \"\"\"\nch = ChatChannel.Team if team_only else ChatChannel.Broadcast\n",
        "lang": "Python",
        "codet5-history": "Add query_available_abilities_with_tag"
    },
    {
        "msg": "extensions + functions",
        "diff": "diff --git a/src/Functions.cs b/src/Functions.cs using System.IO;\nusing System.Linq;\nusing System.Runtime.InteropServices;\n+using System.Security.Cryptography;\nusing System.Text;\nusing System.Text.RegularExpressions;\nusing System.Threading;\n@@ -366,6 +367,31 @@ public static long UnixTimestampMilliseconds()\n}\npublic static string Pluralize(FormattableString formattable) => formattable.ToString(new PluralFormatProvider());\n+\n+ // https://stackoverflow.com/questions/311165/how-do-you-convert-a-byte-array-to-a-hexadecimal-string-and-vice-versa/14333437#14333437\n+ /// <summary>\n+ /// Convert a byte array to hex string quickly\n+ /// </summary>\n+ public static string ByteToHexString(byte[] bytes)\n+ {\n+ var c = new char[bytes.Length * 2];\n+ int b;\n+ for (int i = 0; i < bytes.Length; i++)\n+ {\n+ b = bytes[i] >> 4;\n+ c[i * 2] = (char)(55 + b + (((b - 10) >> 31) & -7));\n+ b = bytes[i] & 0xF;\n+ c[i * 2 + 1] = (char)(55 + b + (((b - 10) >> 31) & -7));\n+ }\n+\n+ return new string(c);\n+ }\n+\n+ public static byte[] Sha1(byte[] bytes)\n+ {\n+ using (var sha1 = new SHA1Managed())\n+ return sha1.ComputeHash(bytes);\n+ }\n}\ninternal static class NativeMethods\n@@ -437,6 +463,56 @@ public static async Task<IEnumerable<T>> Where<T>(this IEnumerable<T> source, Fu\nvar results = await Task.WhenAll(source.Select(async x => (x, await predicate(x))));\nreturn results.Where(x => x.Item2).Select(x => x.Item1);\n}\n+\n+ public static TValue GetOrDefault<TKey, TValue>(this Dictionary<TKey, TValue> dic, TKey key)\n+ => dic.TryGetValue(key, out var val) ? val : default;\n+\n+ public static TValue GetOrThrow<TKey, TValue>(this Dictionary<TKey, TValue> dic, TKey key)\n+ {\n+ if (dic.TryGetValue(key, out var val))\n+ return val;\n+\n+ throw new ArgumentException(\"Key not found\", nameof(key));\n+ }\n+\n+ public static void Deconstruct<T1, T2>(this KeyValuePair<T1, T2> tuple, out T1 key, out T2 value)\n+ {\n+ key = tuple.Key;\n+ value = tuple.Value;\n+ }\n+\n+ /// <summary>\n+ /// Read <paramref name=\"count\"/> bytes from <paramref name=\"stream\"/> after seeking to <paramref name=\"offset\"/> from <paramref name=\"origin\"/>\n+ /// </summary>\n+ public static byte[] ReadBytes(this Stream stream, int offset, int count, SeekOrigin origin)\n+ {\n+ stream.Seek(offset, origin);\n+ return stream.ReadBytes(count);\n+ }\n+\n+ public static byte[] ReadBytes(this Stream stream, int count)\n+ {\n+ var buffer = new byte[count];\n+\n+ int offset = 0;\n+ while (offset < count)\n+ {\n+ var read = stream.Read(buffer, offset, count - offset);\n+ if (read == 0)\n+ throw new EndOfStreamException();\n+\n+ offset += read;\n+ }\n+\n+ return buffer;\n+ }\n+\n+ public static byte[] ReadToEnd(this Stream stream)\n+ {\n+ var ms = new MemoryStream();\n+ stream.CopyTo(ms);\n+ return ms.ToArray();\n+ }\n}\npublic class PluralFormatProvider : IFormatProvider, ICustomFormatter\n",
        "lang": "C#",
        "codet5-history": "Add some more functions to the diff script"
    },
    {
        "msg": "fkie_node_manager_daemon: do not cache channels",
        "diff": "diff --git a/fkie_node_manager_daemon/src/fkie_node_manager_daemon/remote.py b/fkie_node_manager_daemon/src/fkie_node_manager_daemon/remote.py @@ -77,20 +77,6 @@ def clear_channels():\nINSECURE_CHANNEL_CACHE.clear()\n-def add_insecure_channel(url):\n- '''\n- Adds a new insecure channel for given url. Ports are ignored!\n- :param str url: the url to parse\n- '''\n- global INSECURE_CHANNEL_CACHE\n-# global CREDENTIALS\n- cn = ChannelName(url)\n- if cn not in INSECURE_CHANNEL_CACHE:\n- rospy.logdebug(\"add insecure channel to %s\" % url)\n-# INSECURE_CHANNEL_CACHE[cn] = grpc.secure_channel(url, CREDENTIALS)\n- INSECURE_CHANNEL_CACHE[cn] = grpc.insecure_channel(url)\n-\n-\ndef remove_insecure_channel(url):\nglobal INSECURE_CHANNEL_CACHE\ntry:\n@@ -115,8 +101,10 @@ def get_insecure_channel(url):\nexcept Exception:\nif host.get_port(url):\nrospy.logdebug(\"create insecure channel to %s\" % url)\n- INSECURE_CHANNEL_CACHE[cn] = grpc.insecure_channel(url)\n+ # does the storeage cause delays on connection problems?\n+ # INSECURE_CHANNEL_CACHE[cn] = grpc.insecure_channel(url)\n+ # return INSECURE_CHANNEL_CACHE[cn]\n# INSECURE_CHANNEL_CACHE[cn] = grpc.secure_channel(url, CREDENTIALS)\n- return INSECURE_CHANNEL_CACHE[cn]\n+ return grpc.insecure_channel(url)\nprint(\"No cached URL for insecure channel: %s\" % url)\nreturn None\n",
        "lang": "Python",
        "codet5-history": "Remove unnecessary add_insecure_channel()"
    },
    {
        "msg": "Add more defaults for CSV upload",
        "diff": "diff --git a/serverjs/cubefn.js b/serverjs/cubefn.js @@ -264,11 +264,11 @@ function CSVtoCards(csvString, carddb) {\ncolors: (color || null) && color.split('').filter((c) => [...'WUBRG'].includes(c)),\naddedTmsp: new Date(),\ncollector_number: collectorNumber && collectorNumber.toUpperCase(),\n- status,\n- finish,\n+ status: status || 'Not Owned',\n+ finish: finish || 'Non-foil',\nimgUrl: (imageUrl || null) && imageUrl !== 'undefined' ? imageUrl : null,\ntags: tags && tags.length > 0 ? tags.split(',') : [],\n- notes,\n+ notes: notes || '',\nrarity: rarity || null,\ncolorCategory: colorCategory || null,\n};\n",
        "lang": "JavaScript",
        "codet5-history": "Add default values for status, finish, notes"
    },
    {
        "msg": "fix(cycle): return empty if not exist cyclePath",
        "diff": "diff --git a/Query/PathQueryHandler.cpp b/Query/PathQueryHandler.cpp @@ -571,6 +571,8 @@ std::vector<int> PathQueryHandler::cycle(int uid, int vid, bool directed,\n// }\nans = shortestPath0(uid, vid, false, pred_set);\nint lens = ans.size();\n+ if (lens == 0)\n+ return ans;\nfor(int i = lens - 2; i > 0; --i)\nans.push_back(ans[i]);\nans.push_back(uid);\n",
        "lang": "C++",
        "codet5-history": "Fix infinite loop in PathQueryHandler::cycle"
    },
    {
        "msg": "fixed capitalization, handled edge cases",
        "diff": "diff --git a/src/filtering/FuncOperations.js b/src/filtering/FuncOperations.js @@ -38,9 +38,30 @@ export const stringOperation = (op, value) => {\n};\nconst NAME_PLACEHOLDER = '~';\n-const NAME_ALIAS = /\\bthis spell\\b/g;\n+const NAME_ALIAS = /\\b[Tt]his spell\\b/g;\n-const mayContainShorthand = (details) => details.type.includes('Legendary') && details.name.includes(',');\n+const SHORTHAND_OVERRIDES = [\n+ 'Crovax the Cursed',\n+ 'Darigaaz Reincarnated',\n+ 'Gorm the Great',\n+ 'Haktos the Unscarred',\n+ 'Hazoret the Fervent',\n+ 'Phage the Untouchable',\n+ 'Rakdos the Defiler',\n+ 'Rashka the Slayer',\n+ 'Rasputin Dreamweaver',\n+ 'Rubinia Soulsinger',\n+];\n+\n+const getShorthand = (details) => {\n+ if (SHORTHAND_OVERRIDES.includes(details.name)) {\n+ return details.name.split(' ')[0];\n+ }\n+ if (details.type.includes('Legendary') && details.name.includes(',')) {\n+ return details.name.split(',')[0];\n+ }\n+ return undefined;\n+};\nexport const nameStringOperation = (op, value) => {\nconst strOp = stringOperation(op, value);\n@@ -48,9 +69,9 @@ export const nameStringOperation = (op, value) => {\nlet expandedValue = fieldValue\n.replace(new RegExp(card.details.name, 'g'), NAME_PLACEHOLDER)\n.replace(NAME_ALIAS, NAME_PLACEHOLDER);\n- if (mayContainShorthand(card.details)) {\n- const [shortName] = card.details.name.split(',');\n- expandedValue = expandedValue.replace(new RegExp(shortName, 'g'), NAME_PLACEHOLDER);\n+ const shorthand = getShorthand(card.details);\n+ if (shorthand) {\n+ expandedValue = expandedValue.replace(new RegExp(shorthand, 'g'), NAME_PLACEHOLDER);\n}\nreturn strOp(expandedValue);\n};\n",
        "lang": "JavaScript",
        "codet5-history": "Fix shorthand in function operations"
    },
    {
        "msg": "remove UPDATE_PASSWORD required action when reset password\nKeycloak automatically adds UPDATE_PASSWORD required action when\nresetting the user's password with a temporary one. However, it doesn't\nautomatically remove the UPDATE_PASSWORD required action when resetting\nthe user's password with a non-temporary password, so this must be done\nalso in our code.",
        "diff": "diff --git a/airavata-services/profile-service/iam-admin-services-core/src/main/java/org/apache/airavata/service/profile/iam/admin/services/core/impl/TenantManagementKeycloakImpl.java b/airavata-services/profile-service/iam-admin-services-core/src/main/java/org/apache/airavata/service/profile/iam/admin/services/core/impl/TenantManagementKeycloakImpl.java @@ -335,6 +335,10 @@ public class TenantManagementKeycloakImpl implements TenantManagementInterface {\ncredential.setValue(newPassword);\ncredential.setTemporary(false);\nretrievedUser.resetPassword(credential);\n+ // Remove the UPDATE_PASSWORD required action\n+ UserRepresentation userRepresentation = retrievedUser.toRepresentation();\n+ userRepresentation.getRequiredActions().remove(\"UPDATE_PASSWORD\");\n+ retrievedUser.update(userRepresentation);\nreturn true;\n}else{\nlogger.error(\"requested User not found\");\n",
        "lang": "Java",
        "codet5-history": "Remove the UPDATE_PASSWORD required action"
    },
    {
        "msg": "Add debug information to DSR CHECK.\nSummary: Often the pointer can be hard to get back because Clang apparently can't produce DWARF symbols.",
        "diff": "diff --git a/quic/api/QuicTransportBase.cpp b/quic/api/QuicTransportBase.cpp @@ -3678,9 +3678,9 @@ QuicSocket::WriteResult QuicTransportBase::setDSRPacketizationRequestSender(\n}\nif (stream->dsrSender != nullptr) {\n// If any of these aren't true then we are abandoning stream data.\n- CHECK_EQ(stream->writeBufMeta.length, 0);\n- CHECK_EQ(stream->lossBufMetas.size(), 0);\n- CHECK_EQ(stream->retransmissionBufMetas.size(), 0);\n+ CHECK_EQ(stream->writeBufMeta.length, 0) << stream;\n+ CHECK_EQ(stream->lossBufMetas.size(), 0) << stream;\n+ CHECK_EQ(stream->retransmissionBufMetas.size(), 0) << stream;\nstream->dsrSender->release();\nstream->dsrSender = nullptr;\nreturn folly::unit;\n",
        "lang": "C++",
        "codet5-history": "Fix a bug in the diff command."
    },
    {
        "msg": "Add date to request logs.",
        "diff": "diff --git a/app.js b/app.js @@ -127,7 +127,7 @@ app.use((req, res, next) => {\nmorgan.token('uuid', (req) => req.uuid);\napp.use(\n- morgan(':remote-addr :uuid :method :url :status :res[content-length] - :response-time ms', {\n+ morgan('[:date[iso]] :remote-addr :uuid :method :url :status :res[content-length] - :response-time ms', {\nstream: {\nwrite: (message) => winston.info(message.trim()),\n},\n",
        "lang": "JavaScript",
        "codet5-history": "Add :date[iso] to morgan output"
    },
    {
        "msg": "Add debug_unit_function",
        "diff": "diff --git a/sc2/client.py b/sc2/client.py @@ -23,6 +23,7 @@ from .data import Race, ActionResult, ChatChannel\nfrom .action import combine_actions\nfrom .position import Point2, Point3\nfrom .unit import Unit\n+from .units import Units\nfrom typing import List, Dict, Set, Tuple, Any, Optional, Union # mypy type checking\nclass Client(Protocol):\n@@ -258,6 +259,17 @@ class Client(Protocol):\n)) for unit_type, amount_of_units, position, owner_id in unit_spawn_commands]\n))\n+ async def debug_kill_unit(self, unit_tags: Union[Units, List[int], Set[int]]):\n+ if isinstance(unit_tags, Units):\n+ unit_tags = unit_tags.tags\n+ assert len(unit_tags) > 0\n+\n+ await self._execute(debug=sc_pb.RequestDebug(\n+ debug=[debug_pb.DebugCommand(kill_unit=debug_pb.DebugKillUnit(\n+ tag=unit_tags\n+ ))]\n+ ))\n+\nasync def move_camera(self, position: Union[Unit, Point2, Point3]):\n\"\"\" Moves camera to the target position \"\"\"\nassert isinstance(position, (Unit, Point2, Point3))\n@@ -363,18 +375,10 @@ class Client(Protocol):\n\"\"\" Helper function for color conversion \"\"\"\nif color is None:\nreturn debug_pb.Color(r=255, g=255, b=255)\n- else:\n- if isinstance(color, (tuple, list)):\n- assert(len(color) == 3)\n-\n- r = color[0]\n- g = color[1]\n- b = color[2]\nelse:\nr = getattr(color, \"r\", getattr(color, \"x\", 255))\ng = getattr(color, \"g\", getattr(color, \"y\", 255))\nb = getattr(color, \"b\", getattr(color, \"z\", 255))\n-\nif max(r, g, b) <= 1:\nr *= 255\ng *= 255\n",
        "lang": "Python",
        "codet5-history": "Add debug kill unit command"
    },
    {
        "msg": "Fix decklist upload.",
        "diff": "diff --git a/routes/cube_routes.js b/routes/cube_routes.js @@ -1124,7 +1124,8 @@ router.post('/uploaddecklist/:id', ensureAuth, async (req, res) => {\ndetails: carddb.cardFromId(inCube.cardID),\n};\n} else {\n- const reasonableId = carddb.getMostReasonable(normalizedName, cube.defaultPrinting)._id;\n+ const reasonableCard = carddb.getMostReasonable(normalizedName, cube.defaultPrinting);\n+ const reasonableId = reasonableCard ? reasonableCard._id : null;\nconst selectedId = reasonableId || potentialIds[0];\nselected = {\ncardID: selectedId,\n",
        "lang": "JavaScript",
        "codet5-history": "Fix for issue\nFixes"
    },
    {
        "msg": "Remove unecessary headers in HandshakeLayer.cpp\nSummary:\nTrivial cleanup.\nPull Request resolved:",
        "diff": "diff --git a/quic/handshake/HandshakeLayer.cpp b/quic/handshake/HandshakeLayer.cpp #include <quic/handshake/HandshakeLayer.h>\n-#include <fizz/crypto/KeyDerivation.h>\n-#include <fizz/crypto/Sha256.h>\n-#include <fizz/protocol/Factory.h>\n-\nnamespace quic {\nEncryptionLevel protectionTypeToEncryptionLevel(ProtectionType type) {\n",
        "lang": "C++",
        "codet5-history": "Remove unnecessary includes from diff command"
    },
    {
        "msg": "Ansible: changing num of Django wsgi procs to 1",
        "diff": "diff --git a/dev-tools/ansible/inventories/scigap/develop/group_vars/django/vars.yml b/dev-tools/ansible/inventories/scigap/develop/group_vars/django/vars.yml @@ -23,7 +23,7 @@ user: \"pga\"\ngroup: \"pga\"\ngateway_data_store_hostname: \"pgadev.scigap.org\"\ngateway_data_store_resource_id: \"pgadev.scigap.org_7ddf28fd-d503-4ff8-bbc5-3279a7c3b99e\"\n-django_wsgi_processes: 2\n+django_wsgi_processes: 1\ndoc_root_dir: \"/var/www/portals/django-{{gateway_id}}\"\nadmin_emails: \"[('SGRC Group', 'sgrc-iu-group@iu.edu')]\"\ndjango_error_emails: \"[('Marcus Christie', 'machrist@iu.edu'), ('Eroma Abeysinghe', 'eabeysin@iu.edu')]\"\n",
        "lang": "Java",
        "codet5-history": "Update django_wsgi_processes to 1"
    },
    {
        "msg": "Set query limit high enough to get all of experiments in statistics",
        "diff": "diff --git a/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/repositories/expcatalog/ExperimentSummaryRepository.java b/modules/registry/registry-core/src/main/java/org/apache/airavata/registry/core/repositories/expcatalog/ExperimentSummaryRepository.java @@ -314,7 +314,7 @@ public class ExperimentSummaryRepository extends ExpCatAbstractRepository<Experi\n}\nquery += \"ORDER BY ES.creationTime DESC\";\n- List<ExperimentSummaryModel> experimentSummaryModelList = select(query, -1, 0, queryParameters);\n+ List<ExperimentSummaryModel> experimentSummaryModelList = select(query, Integer.MAX_VALUE, 0, queryParameters);\nreturn experimentSummaryModelList;\n}\n",
        "lang": "Java",
        "codet5-history": "Fix the diff command to return an empty list of experiment summary models"
    },
    {
        "msg": "node_manager_fkie: fixed reload after copy file",
        "diff": "diff --git a/node_manager_fkie/src/node_manager_fkie/launch_list_model.py b/node_manager_fkie/src/node_manager_fkie/launch_list_model.py @@ -247,6 +247,7 @@ class PathItem(QStandardItem):\nself._isnew = False\nelse:\nnm.nmd().rename(self.path, new_path)\n+ self.reload_current_path(clear_cache=True)\n# check for new file extension\nif new_id != self.id:\nself.id = new_id\n",
        "lang": "Python",
        "codet5-history": "Fix path item rename"
    },
    {
        "msg": "Beautiful tokenId line\nfixes Ran beautifier to clear up build error",
        "diff": "diff --git a/serverjs/updatecards.js b/serverjs/updatecards.js @@ -191,7 +191,7 @@ const specialCaseCardsList = {\n],\n\"Jace, Vryn's Prodigy\": [\n{\n- tokenId: '458e37b1-a849-41ae-b63c-3e09ffd814e4'\n+ tokenId: '458e37b1-a849-41ae-b63c-3e09ffd814e4',\n},\n],\n\"Legion's Landing\": [\n",
        "lang": "JavaScript",
        "codet5-history": "Fix typo in diff command"
    },
    {
        "msg": "show some additional infomation in slowlog",
        "diff": "diff --git a/src/pika_client_conn.cc b/src/pika_client_conn.cc @@ -226,17 +226,25 @@ std::string PikaClientConn::DoCmd(const PikaCmdArgsType& argv,\nif (duration > g_pika_conf->slowlog_slower_than()) {\ng_pika_server->SlowlogPushEntry(argv, start_time, duration);\nif (g_pika_conf->slowlog_write_errorlog()) {\n+ bool trim = false;\nstd::string slow_log;\n+ uint32_t cmd_size = 0;\nfor (unsigned int i = 0; i < argv.size(); i++) {\n+ cmd_size += 1 + argv[i].size(); // blank space and argument length\n+ if (!trim) {\nslow_log.append(\" \");\nslow_log.append(slash::ToRead(argv[i]));\nif (slow_log.size() >= 1000) {\n+ trim = true;\nslow_log.resize(1000);\nslow_log.append(\"...\\\"\");\n- break;\n}\n}\n- LOG(ERROR) << \"ip_port: \"<< ip_port() << \", command:\" << slow_log << \", start_time(s): \" << start_time << \", duration(us): \" << duration;\n+ }\n+ LOG(ERROR) << \"ip_port: \" << ip_port() << \", table: \" << current_table_\n+ << \", command:\" << slow_log << \", command_size: \" << cmd_size - 1\n+ << \", arguments: \" << argv.size() << \", start_time(s): \" << start_time\n+ << \", duration(us): \" << duration;\n}\n}\n}\n",
        "lang": "C++",
        "codet5-history": "Improve slowlog error log"
    },
    {
        "msg": "Minor changes on the channel query endpoint.",
        "diff": "diff --git a/src/api-engine/api/routes/channel/views.py b/src/api-engine/api/routes/channel/views.py @@ -55,7 +55,7 @@ class ChannelViewSet(viewsets.ViewSet):\nchannel_pages = Paginator(channels, per_page)\nchannels_list = channel_pages.page(page)\nresponse = ChannelListResponse(\n- data={\"data\": channels_list, \"total\": channels.count}\n+ data={\"data\": channels_list, \"total\": channels.count()}\n)\nif response.is_valid(raise_exception=True):\nreturn Response(\n",
        "lang": "Python",
        "codet5-history": "Fix typo in diff command"
    },
    {
        "msg": "ThreadNameTests - Changed to isolated LogFactory",
        "diff": "diff --git a/tests/NLog.UnitTests/LayoutRenderers/Threads/ThreadNameTests.cs b/tests/NLog.UnitTests/LayoutRenderers/Threads/ThreadNameTests.cs // THE POSSIBILITY OF SUCH DAMAGE.\n//\n-using NLog.Config;\n-\nnamespace NLog.UnitTests.LayoutRenderers\n{\nusing Xunit;\n@@ -42,19 +40,19 @@ public class ThreadNameTests : NLogTestBase\n[Fact]\npublic void ThreadNameTest()\n{\n- LogManager.Configuration = XmlLoggingConfiguration.CreateFromXmlString(@\"\n+ var logFactory = new LogFactory().Setup().LoadConfigurationFromXml(@\"\n<nlog>\n<targets><target name='debug' type='Debug' layout='${threadname} ${message}' /></targets>\n<rules>\n<logger name='*' minlevel='Debug' writeTo='debug' />\n</rules>\n- </nlog>\");\n+ </nlog>\").LogFactory;\n- if (System.Threading.Thread.CurrentThread.Name is null)\n+ if (string.IsNullOrEmpty(System.Threading.Thread.CurrentThread.Name))\nSystem.Threading.Thread.CurrentThread.Name = \"mythreadname\";\n- LogManager.GetLogger(\"A\").Debug(\"a\");\n- AssertDebugLastMessage(\"debug\", System.Threading.Thread.CurrentThread.Name + \" a\");\n+ logFactory.GetLogger(\"A\").Debug(\"a\");\n+ logFactory.AssertDebugLastMessage(System.Threading.Thread.CurrentThread.Name + \" a\");\n}\n}\n}\n\\ No newline at end of file\n",
        "lang": "C#",
        "codet5-history": "Use LogFactory instead of XmlLoggingConfiguration"
    },
    {
        "msg": "fix temp test",
        "diff": "diff --git a/XRayBuilder.Test/src/Extras/EndActions/EndActionsDataGeneratorTests.cs b/XRayBuilder.Test/src/Extras/EndActions/EndActionsDataGeneratorTests.cs @@ -65,7 +65,7 @@ public async Task Test()\nPromptAsin = false,\nSaveHtml = false,\nUseNewVersion = true\n- }, _logger, _httpClient, _amazonClient, _amazonInfoParser);\n+ }, _logger, _httpClient, _amazonClient, _amazonInfoParser, null);\nvar endActionsResponse = await endActionsDataGenerator.GenerateNewFormatData(authorProfileResponse, null, metadata, null, CancellationToken.None);\nAssert.NotNull(endActionsResponse);\n",
        "lang": "C#",
        "codet5-history": "Fix EndActionsDataGeneratorTests.Test"
    },
    {
        "msg": "Ansible: global floods - django app and geo db config",
        "diff": "diff --git a/dev-tools/ansible/inventories/scigap/production/host_vars/global-flood/vars.yml b/dev-tools/ansible/inventories/scigap/production/host_vars/global-flood/vars.yml #gateway_data_store_resource_id: \"js-168-166.jetstream-cloud.org_e86fd426-201a-461a-a0b4-4368af59ca28\"\n#gateway_data_store_hostname: \"js-168-166.jetstream-cloud.org\"\n-# airavata_django_extra_dependencies:\n-# - \"git+https://github.com/Global-Flood-Assessment/global-floods-django-app.git#egg=global_floods_django_app\"\n+airavata_django_extra_dependencies:\n+ - \"git+https://github.com/Global-Flood-Assessment/global-floods-django-app.git#egg=global_floods_django_app\"\nvhost_servername: \"global-floods-monitoring.scigap.org\"\nvhost_ssl: True\n@@ -53,4 +53,8 @@ admin_emails: \"[('CIRC', 'circ-iu-group@iu.edu'),('Wang Jun','wang208@iu.edu')]\"\nportal_title: \"Global Floods Assessment Gateway\"\n#django_google_analytics_tracking_id: \"UA-66348921-1\"\n+\n+django_extra_settings:\n+ DATABASES['default']['ENGINE']: \"django.contrib.gis.db.backends.mysql\"\n+\n...\n",
        "lang": "Java",
        "codet5-history": "Add django_extra_settings to django_extra_settings"
    },
    {
        "msg": "Fixing zookeeper_connection_url",
        "diff": "diff --git a/dev-tools/ansible/inventories/scigap/group-based-auth/group_vars/all/vars.yml b/dev-tools/ansible/inventories/scigap/group-based-auth/group_vars/all/vars.yml @@ -61,7 +61,7 @@ rabbitmq_broker_url: \"amqp://{{ rabbitmq_user }}:{{ rabbitmq_password }}@{{ rabb\n# Zoookeeper related variables\nzookeeper_client_port: 2181\n-zookeeper_url: \"{{ groups['zookeeper'][0] }}:{{ zookeeper_client_port }}\"\n+zookeeper_connection_url: \"{{ groups['zookeeper'][0] }}:{{ zookeeper_client_port }}\"\n# API Server related variables\napi_server_name: \"apiserver-node0\"\n",
        "lang": "Java",
        "codet5-history": "Fix zookeeper_url variable name"
    },
    {
        "msg": "Factored out isKey(key, event) overload.\nLike in the lambdas branch.",
        "diff": "diff --git a/core/src/playn/core/Keyboard.java b/core/src/playn/core/Keyboard.java @@ -128,6 +128,24 @@ public abstract class Keyboard {\nreturn (event instanceof TypedEvent) ? (TypedEvent)event : null;\n}\n+ /**\n+ * A collector function for key events for {@code key}. Use it to obtain only events for a\n+ * particular key like so:\n+ *\n+ * <pre>{@code\n+ * Input.keyboardEvents.collect(ev -> Keyboard.isKey(Key.X, ev)).connect(event -> {\n+ * // handle the 'x' key being pressed or released\n+ * });\n+ * }</pre>\n+ */\n+ public static KeyEvent isKey (Key key, Event event) {\n+ if (event instanceof KeyEvent && ((KeyEvent)event).key == key) {\n+ return (KeyEvent)event;\n+ } else {\n+ return null;\n+ }\n+ }\n+\n/**\n* Returns a collector function for key events for {@code key}. Use it to obtain only events for\n* a particular key like so:\n@@ -141,11 +159,7 @@ public abstract class Keyboard {\npublic static Function<Event, KeyEvent> isKey (final Key key) {\nreturn new Function<Event, KeyEvent>() {\npublic KeyEvent apply (Event event) {\n- if (event instanceof KeyEvent && ((KeyEvent)event).key == key) {\n- return (KeyEvent)event;\n- } else {\n- return null;\n- }\n+ return isKey(key, event);\n}\n};\n}\n",
        "lang": "Java",
        "codet5-history": "Add isKey method to Keyboard"
    },
    {
        "msg": "Add missing properties of ResponseObservarion to game_state.py",
        "diff": "diff --git a/sc2/game_state.py b/sc2/game_state.py @@ -5,6 +5,7 @@ from .ids.upgrade_id import UpgradeId\nfrom .ids.effect_id import EffectId\nfrom .position import Point2\n+\nclass Common(object):\nATTRIBUTES = [\n\"player_id\",\n@@ -14,6 +15,7 @@ class Common(object):\n\"idle_worker_count\", \"army_count\",\n\"warp_gate_count\", \"larva_count\"\n]\n+\ndef __init__(self, proto):\nself._proto = proto\n@@ -34,13 +36,16 @@ class EffectData(object):\nreturn [Point2.from_proto(p) for p in self._proto.pos]\nclass GameState(object):\n- def __init__(self, observation, game_data):\n- self.common = Common(observation.observation.player_common)\n- self.psionic_matrix = PsionicMatrix.from_proto(observation.observation.raw_data.player.power_sources)\n- self.game_loop = observation.observation.game_loop\n- self.chat = observation.chat\n- self.responseObservation = observation\n- self.actions = observation.actions\n+ def __init__(self, response_observation, game_data):\n+ self.actions = response_observation.actions\n+ self.action_errors = response_observation.action_errors\n+ self.observation = response_observation.observation\n+ self.player_result = response_observation.player_result\n+ self.chat = response_observation.chat\n+ self.common = Common(self.observation.player_common)\n+ self.units = Units.from_proto(self.observation.raw_data.units, game_data)\n+ self.psionic_matrix = PsionicMatrix.from_proto(self.observation.raw_data.player.power_sources)\n+ self.game_loop = self.observation.game_loop\ndestructables = [x for x in observation.observation.raw_data.units if x.alliance == 3 and x.radius > 1.5] # all destructable rocks except the one below the main base ramps\nself.destructables = Units.from_proto(destructables, game_data)\n",
        "lang": "Python",
        "codet5-history": "Update game_state.py\n* Update game_state.py\n* Update game"
    },
    {
        "msg": "expose PythonComponent to blueprints, close",
        "diff": "diff --git a/Source/UnrealEnginePython/Public/PythonComponent.h b/Source/UnrealEnginePython/Public/PythonComponent.h -UCLASS(ClassGroup = (Python), meta = (BlueprintSpawnableComponent))\n+UCLASS(BlueprintType, Blueprintable, ClassGroup = (Python), meta = (BlueprintSpawnableComponent))\nclass UPythonComponent : public UActorComponent\n{\nGENERATED_BODY()\n",
        "lang": "C++",
        "codet5-history": "Add missing UCLASS definition in diff"
    },
    {
        "msg": "getdeps build script\nSummary: for multiplatform builds",
        "diff": "diff --git a/getdeps.sh b/getdeps.sh @@ -13,10 +13,10 @@ if [[ -d \"$TOOLCHAIN_DIR\" ]]; then\nPATH=\"$TOOLCHAIN_DIR:$PATH\"\nfi\n-PROXYGEN_DIR=$(dirname \"$0\")\n+PROJECT_DIR=$(dirname \"$0\")\nGETDEPS_PATHS=(\n- \"$PROXYGEN_DIR/build/fbcode_builder/getdeps.py\"\n- \"$PROXYGEN_DIR/../../opensource/fbcode_builder/getdeps.py\"\n+ \"$PROJECT_DIR/build/fbcode_builder/getdeps.py\"\n+ \"$PROJECT_DIR/../../opensource/fbcode_builder/getdeps.py\"\n)\nROOT_DIR=$(pwd)\n",
        "lang": "C++",
        "codet5-history": "Fix typo in getdeps.sh"
    },
    {
        "msg": "Revised overview and blogsrc",
        "diff": "diff --git a/routes/cube_routes.js b/routes/cube_routes.js @@ -489,27 +489,22 @@ router.get('/overview/:id', async (req, res) => {\nloginCallback: '/cube/overview/' + req.params.id,\n});\n} catch (err) {\n- req.flash('danger', 'Server Error');\n- return res.redirect('/cube/overview/' + req.params.id);\n+ util.handleRouteError(res, err, '/cube/overview/' + req.params.id);\n}\n});\n-router.get('/blogsrc/:id', function(req, res) {\n- Blog.findById(req.params.id, function(err, blog) {\n- if (err || !blog) {\n- res.status(400).send({\n- success: 'false',\n- });\n- } else {\n+router.get(\n+ '/blogsrc/:id',\n+ util.wrapAsyncApi(async (req, res) => {\n+ const blog = await Blog.findById(req.params.id);\nres.status(200).send({\nsuccess: 'true',\nsrc: blog.html,\ntitle: blog.title,\nbody: blog.body,\n});\n- }\n- });\n-});\n+ }),\n+);\nrouter.get('/blog/:id', function(req, res) {\nres.redirect('/cube/blog/' + req.params.id + '/0');\n",
        "lang": "JavaScript",
        "codet5-history": "Fixing the diff command to work with async api"
    },
    {
        "msg": "RetryingTargetWrapper - Changed RetryCount and RetryDelay to typed Layout",
        "diff": "diff --git a/src/NLog/Targets/Wrappers/RetryingTargetWrapper.cs b/src/NLog/Targets/Wrappers/RetryingTargetWrapper.cs @@ -37,6 +37,7 @@ namespace NLog.Targets.Wrappers\nusing System.Collections.Generic;\nusing System.Threading;\nusing NLog.Common;\n+ using NLog.Layouts;\n/// <summary>\n/// Retries in case of write error.\n@@ -99,13 +100,13 @@ public RetryingTargetWrapper(Target wrappedTarget, int retryCount, int retryDela\n/// Gets or sets the number of retries that should be attempted on the wrapped target in case of a failure.\n/// </summary>\n/// <docgen category='Retrying Options' order='10' />\n- public int RetryCount { get; set; }\n+ public Layout<int> RetryCount { get; set; }\n/// <summary>\n/// Gets or sets the time to wait between retries in milliseconds.\n/// </summary>\n/// <docgen category='Retrying Options' order='10' />\n- public int RetryDelayMilliseconds { get; set; }\n+ public Layout<int> RetryDelayMilliseconds { get; set; }\n/// <summary>\n/// Gets or sets whether to enable batching, and only apply single delay when a whole batch fails\n@@ -190,10 +191,12 @@ private AsyncLogEventInfo WrapWithRetry(AsyncLogEventInfo logEvent, Func<int, bo\n}\nint retryNumber = Interlocked.Increment(ref counter);\n- InternalLogger.Warn(ex, \"{0}: Error while writing to '{1}'. Try {2}/{3}\", this, WrappedTarget, retryNumber, RetryCount);\n+ var retryCount = RetryCount.RenderValue(logEvent.LogEvent);\n+ var retryDelayMilliseconds = RetryDelayMilliseconds.RenderValue(logEvent.LogEvent);\n+ InternalLogger.Warn(ex, \"{0}: Error while writing to '{1}'. Try {2}/{3}\", this, WrappedTarget, retryNumber, retryCount);\n// exceeded retry count\n- if (retryNumber >= RetryCount)\n+ if (retryNumber >= retryCount)\n{\nInternalLogger.Warn(\"{0}: Too many retries. Aborting.\", this);\nlogEvent.Continuation(ex);\n@@ -203,9 +206,9 @@ private AsyncLogEventInfo WrapWithRetry(AsyncLogEventInfo logEvent, Func<int, bo\n// sleep and try again (Check every 100 ms if target have been closed)\nif (sleepBeforeRetry(retryNumber))\n{\n- for (int i = 0; i < RetryDelayMilliseconds;)\n+ for (int i = 0; i < retryDelayMilliseconds;)\n{\n- int retryDelay = Math.Min(100, RetryDelayMilliseconds - i);\n+ int retryDelay = Math.Min(100, retryDelayMilliseconds - i);\nAsyncHelpers.WaitForDelay(TimeSpan.FromMilliseconds(retryDelay));\ni += retryDelay;\nif (!IsInitialized)\n",
        "lang": "C#",
        "codet5-history": "Fixes - Fixes - Fixes - Fixes - Fixes - Fixes -"
    },
    {
        "msg": "Fix fabric images tag\nChange IMG_version from 1.0.0.rc1 to v1.0.0.rc1",
        "diff": "diff --git a/scripts/worker_node_setup/download_images.sh b/scripts/worker_node_setup/download_images.sh @@ -17,7 +17,7 @@ BASEIMAGE_RELEASE=0.3.1\nBASE_VERSION=1.0.0\nPROJECT_VERSION=1.0.0-rc1\n-IMG_VERSION=1.0.0-rc1\n+IMG_VERSION=v1.0.0-rc1\n# latest is only For testing latest images\necho_b \"Downloading images from DockerHub... need a while\"\n",
        "lang": "Python",
        "codet5-history": "Fix image version in diff"
    },
    {
        "msg": "Ansible: for Django, install opt. mysql dependencies",
        "diff": "diff --git a/dev-tools/ansible/roles/django/tasks/main.yml b/dev-tools/ansible/roles/django/tasks/main.yml - name: Create virtual environment for Django portal and install dependencies\npip:\n- requirements: \"{{ airavata_django_checkout }}/requirements.txt\"\n+ requirements: \"{{ item }}\"\nvirtualenv: \"{{ django_venv_dir }}\"\nvirtualenv_command: \"{{ python_virtualenv_command }}\"\nchdir: \"{{ airavata_django_checkout }}\"\nbecome: yes\nbecome_user: \"{{user}}\"\n+ with_list:\n+ - \"{{ airavata_django_checkout }}/requirements.txt\"\n+ - \"{{ airavata_django_checkout }}/requirements-mysql.txt\"\n- name: Install additional dependencies\npip:\n",
        "lang": "Java",
        "codet5-history": "Fix requirements.txt and requirements-mysql.txt in pip diff"
    },
    {
        "msg": "fkie_node_manager: add nodes to view with not reachable nodeuri",
        "diff": "diff --git a/fkie_node_manager/src/fkie_node_manager/node_tree_model.py b/fkie_node_manager/src/fkie_node_manager/node_tree_model.py @@ -1775,7 +1775,8 @@ class NodeTreeModel(QStandardItemModel):\naddr = get_hostname(node.uri if node.uri is not None else node.masteruri)\naddresses.append(addr)\nmuris.append(node.masteruri)\n- host = (node.masteruri, addr)\n+ resaddr = nm.nameres().hostname(addr)\n+ host = (node.masteruri, resaddr)\nif host not in hosts:\nhosts[host] = dict()\nhosts[host][name] = node\n",
        "lang": "Python",
        "codet5-history": "Fix host name in diff"
    },
    {
        "msg": "depend on sinon for model stubbing",
        "diff": "diff --git a/package.json b/package.json \"react-dom\": \"^16.9.0\",\n\"react-tag-input\": \"^6.4.1\",\n\"reactstrap\": \"^8.0.1\",\n+ \"sinon\": \"^7.4.2\",\n\"terser-webpack-plugin\": \"^2.0.0\",\n\"webpack\": \"^4.39.3\",\n\"webpack-cli\": \"^3.3.8\",\n",
        "lang": "JavaScript",
        "codet5-history": "Add sinon to diff"
    },
    {
        "msg": "change Maimai logo",
        "diff": "diff --git a/README.md b/README.md @@ -35,7 +35,7 @@ Pika is a persistent huge storage service , compatible with the vast majority o\n<td height = \"100\" width = \"150\"><img src=\"http://imgur.com/0oaVKlk.png\" alt=\"YM\"></td>\n</tr>\n<tr>\n-<td height = \"100\" width = \"150\"><img src=\"https://imgur.com/qN6z25x.png\" alt=\"MM\"></td>\n+<td height = \"100\" width = \"150\"><img src=\"https://i.imgur.com/PI89mec.png\" alt=\"MM\"></td>\n<td height = \"100\" width = \"150\"><img src=\"https://i.imgur.com/G9MOvZe.jpg\" alt=\"VIP\"></td>\n<td height = \"100\" width = \"150\"><img src=\"https://imgur.com/vQW5qr3.png\" alt=\"LK\"></td>\n<td height = \"100\" width = \"150\"><img src=\"https://i.imgur.com/jIMG4mi.jpg\" alt=\"KS\"></td>\n",
        "lang": "C++",
        "codet5-history": "Update README.md\nUpdated the image to match the new one."
    },
    {
        "msg": "Adding google analytics to LSU HPC gateway",
        "diff": "diff --git a/dev-tools/ansible/inventories/scigap/production/host_vars/louisiana-state/vars.yml b/dev-tools/ansible/inventories/scigap/production/host_vars/louisiana-state/vars.yml @@ -50,5 +50,5 @@ gateway_data_store_ssh_public_key: \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCGku09\nadmin_emails: \"[('CIRC', 'circ-iu-group@iu.edu'),('Zach Byerly','zbyerl1@lsu.edu'),('Le Yan','lyan1@lsu.edu'),('Feng Chen','fchen14@lsu.edu')]\"\nportal_title: \"LSU Portal\"\n-#django_google_analytics_tracking_id: \"UA-66348921-1\"\n+django_google_analytics_tracking_id: \"UA-193996599-1\"\n...\n",
        "lang": "Java",
        "codet5-history": "Update django_google_analytics_tracking_id"
    },
    {
        "msg": "Setting the task expiry to 24 hours",
        "diff": "diff --git a/modules/airavata-helix/workflow-impl/src/main/java/org/apache/airavata/helix/workflow/WorkflowOperator.java b/modules/airavata-helix/workflow-impl/src/main/java/org/apache/airavata/helix/workflow/WorkflowOperator.java @@ -46,6 +46,7 @@ public class WorkflowOperator {\nprivate static final String WORKFLOW_PREFIX = \"Workflow_of_process_\";\nprivate static final long WORKFLOW_EXPIRY_TIME = 1 * 1000;\n+ private static final long TASK_EXPIRY_TIME = 24 * 60 * 60 * 1000;\nprivate TaskDriver taskDriver;\nprivate HelixManager helixManager;\n@@ -97,6 +98,7 @@ public class WorkflowOperator {\n.addTaskConfigs(taskBuilds)\n.setFailureThreshold(0)\n.setExpiry(WORKFLOW_EXPIRY_TIME)\n+ .setTimeoutPerTask(TASK_EXPIRY_TIME)\n.setNumConcurrentTasksPerInstance(20)\n.setMaxAttemptsPerTask(data.getRetryCount());\n",
        "lang": "Java",
        "codet5-history": "Add timeout per task to WorkflowOperator"
    },
    {
        "msg": "Fixing function.json schema",
        "diff": "diff --git a/schemas/json/function.json b/schemas/json/function.json \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n\"type\": \"object\",\n\"properties\": {\n+ \"disabled\": {\n+ \"type\": \"boolean\",\n+ \"description\": \"If set to true, marks the function as disabled (it cannot be triggered).\"\n+ },\n+ \"excluded\": {\n+ \"type\": \"boolean\",\n+ \"description\": \"If set to true, the function will not be loaded, compiled, or triggered.\"\n+ },\n+ \"scriptFile\": {\n+ \"type\": \"string\",\n+ \"description\": \"Optional path to function script file.\"\n+ },\n+ \"entryPoint\": {\n+ \"type\": \"string\",\n+ \"description\": \"Optional named entry point.\"\n+ },\n\"bindings\": {\n\"type\": \"array\",\n\"description\": \"A list of function bindings.\",\n\"allOf\": [\n{ \"$ref\": \"#/definitions/bindingBase\" }\n]\n- },\n- \"disabled\": {\n- \"type\": \"boolean\",\n- \"description\": \"If set to true, marks the function as disabled (it cannot be triggered).\"\n- },\n- \"excluded\": {\n- \"type\": \"boolean\",\n- \"description\": \"If set to true, the function will not be loaded, compiled, or triggered.\"\n- },\n- \"scriptFile\": {\n- \"type\": \"string\",\n- \"description\": \"Optional path to function script file.\"\n- },\n- \"entryPoint\": {\n- \"type\": \"string\",\n- \"description\": \"Optional named entry point.\"\n}\n}\n},\n",
        "lang": "C#",
        "codet5-history": "Fix the order of the properties in the schema"
    },
    {
        "msg": "fkie_node_manager: start assosiated nodes first",
        "diff": "diff --git a/fkie_node_manager/src/fkie_node_manager/master_view_proxy.py b/fkie_node_manager/src/fkie_node_manager/master_view_proxy.py @@ -2072,11 +2072,7 @@ class MasterViewProxy(QWidget):\nif node.name in cfg_nodes:\n# remove node from question\nself.message_frame.hide_question([MessageFrame.TYPE_BINARY], MessageData(node))\n- self._progress_queue.add2queue(utf8(uuid.uuid4()),\n- ''.join(['start ', node.node_info.name]),\n- self.start_node,\n- (node.node_info, force, cfg_nodes[node.node_info.name], force_host, logging, cmd_prefix))\n- # add associated nodes to stop\n+ # add associated nodes to start\nassociated2start = self._get_associated_nodes([node.name], ignore=all2start)\nall2start |= associated2start\nfound_nodes = self._get_nodes_by_name(list(associated2start))\n@@ -2085,6 +2081,10 @@ class MasterViewProxy(QWidget):\n'start %s' % anode.name,\nself.start_node,\n(anode.node_info, force, cfg_nodes[node.node_info.name], force_host))\n+ self._progress_queue.add2queue(utf8(uuid.uuid4()),\n+ ''.join(['start ', node.node_info.name]),\n+ self.start_node,\n+ (node.node_info, force, cfg_nodes[node.node_info.name], force_host, logging, cmd_prefix))\nself._start_queue(self._progress_queue)\ndef _check_for_nodelets(self, nodes):\n",
        "lang": "Python",
        "codet5-history": "Fix the progress queue order in master_view_proxy.py"
    },
    {
        "msg": "Updating Ultrascan data store resource id and ssh key",
        "diff": "diff --git a/dev-tools/ansible/inventories/scigap/production/pga_config/ultrascan/vars.yml b/dev-tools/ansible/inventories/scigap/production/pga_config/ultrascan/vars.yml @@ -48,9 +48,8 @@ user_role_name: \"airavata-user\"\ngateway_id: \"Ultrascan_Production\"\n# relative to document root dir\nexperiment_data_dir: \"{{ user_data_dir }}/ultrascan\"\n-gateway_data_store_resource_id: \"gf4.ucs.indiana.edu_61552681-96f0-462a-a36c-a62a010bffc6\"\n-# Not using gateway storage right now\n-#gateway_data_store_ssh_public_key: \"\"\n+gateway_data_store_resource_id: \"gf4.ucs.indiana.edu_5ef8ddd3-2a2a-48ca-9c5f-becce690c6c1\"\n+gateway_data_store_ssh_public_key: \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCHxpxod4TZ9Iy0TyqEK1uyKEeq41QRUlD9sHZmuF3aeXpbnleOW1F8NQrpUuzCrcT+xb8Owam8rCB3xe73ZWzf4BJBjt8MJ481kGgufZzzIAuTHcewEzjoabTrg+3b8eQsq9uWyJc96/SEzKlryOkyZL6MptCE8kbcquD/Jo6ADMpAAS9rDmSaWg5dPbITrF2o2r1cHKeHkri45b6+ih63Mf/pYhbHTPsheaQu3Kyk1YmdP25pgzD65SMZSeZan8St4mPDdGMOwfvjIkhvoyPXoyaCqTwnQ3bfwlL/xmbxtGWPax73pgitlhtKynRRWgse8uc6rIQxzXsKkAHbB/R3\"\ndata_sharing_enabled: \"false\"\n",
        "lang": "Java",
        "codet5-history": "Update gateway data store keys"
    },
    {
        "msg": "Add override marker to TestPacketBatchWriter\nSummary: oops",
        "diff": "diff --git a/quic/common/test/TestUtils.h b/quic/common/test/TestUtils.h @@ -365,11 +365,11 @@ class TestPacketBatchWriter : public IOBufBatchWriter {\nstd::unique_ptr<folly::IOBuf>&& /*unused*/,\nsize_t size,\nconst folly::SocketAddress& /*unused*/,\n- folly::AsyncUDPSocket* /*unused*/);\n+ folly::AsyncUDPSocket* /*unused*/) override;\nssize_t write(\nfolly::AsyncUDPSocket& /*unused*/,\n- const folly::SocketAddress& /*unused*/);\n+ const folly::SocketAddress& /*unused*/) override;\nprivate:\nint maxBufs_{0};\n",
        "lang": "C++",
        "codet5-history": "Fix compilation with clang-7.0\nSummary:\nFix compilation with clang"
    },
    {
        "msg": "node_manager_daemon_fkie: changed request args on load launch file",
        "diff": "diff --git a/node_manager_daemon_fkie/src/node_manager_daemon_fkie/launch_servicer.py b/node_manager_daemon_fkie/src/node_manager_daemon_fkie/launch_servicer.py @@ -293,8 +293,7 @@ class LaunchServicer(lgrpc.LaunchServiceServicer):\nlaunch_config = LaunchConfig(launchfile, masteruri=request.masteruri, host=request.host)\n# get the list with needed launch args\nreq_args = launch_config.get_args()\n- if request.request_args:\n- if req_args:\n+ if request.request_args and req_args:\narg_dict = launch_config.argv2dict(req_args)\nfor arg, value in arg_dict.items():\nif arg not in provided_args:\n",
        "lang": "Python",
        "codet5-history": "Fix a bug in the diff command"
    },
    {
        "msg": "Don't allow revoking admin groups from sharing for certain resource types",
        "diff": "diff --git a/airavata-api/airavata-api-server/src/main/java/org/apache/airavata/api/server/handler/AiravataServerHandler.java b/airavata-api/airavata-api-server/src/main/java/org/apache/airavata/api/server/handler/AiravataServerHandler.java @@ -5106,6 +5106,12 @@ public class AiravataServerHandler implements Airavata.Iface {\nif (!userHasAccessInternal(sharingClient, authzToken, resourceId, ResourcePermissionType.OWNER)) {\nthrow new AuthorizationException(\"User is not allowed to change sharing because the user is not the resource owner.\");\n}\n+ // For certain resource types, restrict them from being unshared with admin groups\n+ ResourceType resourceType = getResourceType(sharingClient, gatewayId, resourceId);\n+ Set<ResourceType> adminRestrictedResourceTypes = new HashSet<>(Arrays.asList(\n+ ResourceType.EXPERIMENT, ResourceType.APPLICATION_DEPLOYMENT, ResourceType.GROUP_RESOURCE_PROFILE\n+ ));\n+ if (adminRestrictedResourceTypes.contains(resourceType)) {\n// Prevent removing Admins WRITE access and Read Only Admins READ access\nGatewayGroups gatewayGroups = retrieveGatewayGroups(regClient, gatewayId);\nif (groupPermissionList.containsKey(gatewayGroups.getAdminsGroupId())\n@@ -5116,6 +5122,7 @@ public class AiravataServerHandler implements Airavata.Iface {\n&& groupPermissionList.get(gatewayGroups.getAdminsGroupId()).equals(ResourcePermissionType.READ)) {\nthrow new Exception(\"Not allowed to remove Read Only Admins group's READ access.\");\n}\n+ }\nfor(Map.Entry<String, ResourcePermissionType> groupPermission : groupPermissionList.entrySet()){\nif(groupPermission.getValue().equals(ResourcePermissionType.WRITE))\nsharingClient.revokeEntitySharingFromUsers(gatewayId, resourceId,\n@@ -5868,6 +5875,16 @@ public class AiravataServerHandler implements Airavata.Iface {\n}\n}\n+ private ResourceType getResourceType(SharingRegistryService.Client sharingClient, String domainId, String entityId) throws TException {\n+ Entity entity = sharingClient.getEntity(domainId, entityId);\n+ for (ResourceType resourceType : ResourceType.values()) {\n+ if (entity.getEntityTypeId().equals(domainId + \":\" + resourceType.name())) {\n+ return resourceType;\n+ }\n+ }\n+ throw new RuntimeException(\"Unrecognized entity type id: \" + entity.getEntityTypeId());\n+ }\n+\nprivate GatewayGroups retrieveGatewayGroups(RegistryService.Client regClient, String gatewayId) throws TException {\nif (regClient.isGatewayGroupsExists(gatewayId)) {\n",
        "lang": "Java",
        "codet5-history": "[API] Restrict unshared entities from admin groups"
    },
    {
        "msg": "dont modify props",
        "diff": "diff --git a/src/analytics/Table.js b/src/analytics/Table.js @@ -7,14 +7,14 @@ import AsfanDropdown from 'components/AsfanDropdown';\nimport ErrorBoundary from 'components/ErrorBoundary';\nimport { sortIntoGroups, getSorts, getLabels, cardCanBeSorted } from 'utils/Sort';\n-const AnalyticTable = ({ cards, cube, defaultFormatId, setAsfans }) => {\n+const AnalyticTable = ({ cards: allCards, cube, defaultFormatId, setAsfans }) => {\nconst sorts = getSorts();\nconst [primary, setPrimary] = useState('Color Identity');\nconst [secondary, setSecondary] = useState('Type');\n// some criteria cannot be applied to some cards\n- cards = cards.filter((card) => cardCanBeSorted(card, primary) && cardCanBeSorted(card, secondary));\n+ const cards = allCards.filter((card) => cardCanBeSorted(card, primary) && cardCanBeSorted(card, secondary));\nconst sortWithTotal = (pool, sort) => {\nconst groups = sortIntoGroups(pool, sort);\n",
        "lang": "JavaScript",
        "codet5-history": "Fix analytic table diff"
    },
    {
        "msg": "added 4.22 to automatic build system",
        "diff": "diff --git a/tools/release_win64.py b/tools/release_win64.py @@ -5,7 +5,7 @@ import time\nimport shutil\nimport zipfile\n-UE_VERSIONS = ['4.15', '4.16', '4.17', '4.18', '4.19', '4.20', '4.21']\n+UE_VERSIONS = ['4.17', '4.18', '4.19', '4.20', '4.21', '4.22']\nPYTHON_VERSIONS = [\"C:/Program Files/Python37\", \"C:/Program Files/Python36\", \"C:/Python27\"]\nMSBUILD = 'C:/Program Files (x86)/Microsoft Visual Studio/2017/Community/MSBuild/15.0/Bin/MSBuild.exe'\nUE_PATH = 'C:/Program Files/Epic Games'\n",
        "lang": "C++",
        "codet5-history": "Update UE_VERSIONS to 4.22"
    },
    {
        "msg": "Fix expand_now for when all expansions are taken or all of them are mined out",
        "diff": "diff --git a/sc2/bot_ai.py b/sc2/bot_ai.py @@ -322,7 +322,10 @@ class BotAI(DistanceCalculation):\nif not location:\nlocation = await self.get_next_expansion()\n-\n+ if not location:\n+ # All expansions are used up or mined out\n+ logger.warning(f\"Trying to expand_now() but bot is out of locations to expand to\")\n+ return\nawait self.build(building, near=location, max_distance=max_distance, random_alternative=False, placement_step=1)\nasync def get_next_expansion(self) -> Optional[Point2]:\n",
        "lang": "Python",
        "codet5-history": "Fix bot_ai.py to not expand if bot is out of locations"
    },
    {
        "msg": "Change defaultdict return value to UnitTypeId instead of None",
        "diff": "diff --git a/sc2/constants.py b/sc2/constants.py @@ -230,9 +230,12 @@ FakeEffectID: Dict[int, str] = {\nUnitTypeId.FORCEFIELD.value: \"FORCEFIELD\",\n}\n+def return_NOTAUNIT():\n+ # NOTAUNIT = 0\n+ return NOTAUNIT\nTERRAN_TECH_REQUIREMENT: Dict[UnitTypeId, UnitTypeId] = defaultdict(\n- list,\n+ return_NOTAUNIT,\n{\nMISSILETURRET: ENGINEERINGBAY,\nSENSORTOWER: ENGINEERINGBAY,\n@@ -252,7 +255,7 @@ TERRAN_TECH_REQUIREMENT: Dict[UnitTypeId, UnitTypeId] = defaultdict(\n},\n)\nPROTOSS_TECH_REQUIREMENT: Dict[UnitTypeId, UnitTypeId] = defaultdict(\n- list,\n+ return_NOTAUNIT,\n{\nPHOTONCANNON: FORGE,\nCYBERNETICSCORE: GATEWAY,\n@@ -276,7 +279,7 @@ PROTOSS_TECH_REQUIREMENT: Dict[UnitTypeId, UnitTypeId] = defaultdict(\n},\n)\nZERG_TECH_REQUIREMENT: Dict[UnitTypeId, UnitTypeId] = defaultdict(\n- list,\n+ return_NOTAUNIT,\n{\nZERGLING: SPAWNINGPOOL,\nQUEEN: SPAWNINGPOOL,\n",
        "lang": "Python",
        "codet5-history": "Fix typo in constants.py\nFixes"
    },
    {
        "msg": "merged fix from master",
        "diff": "diff --git a/routes/comment_routes.js b/routes/comment_routes.js @@ -147,7 +147,7 @@ router.post(\n: 'https://img.scryfall.com/cards/art_crop/front/0/c/0c082aa8-bf7f-47f2-baf8-43ad253fd7d7.jpg?1562826021';\ncomment.artist = newComment.owner ? 'Allan Pollack' : req.user.artist;\ncomment.updated = true;\n- comment.content = newComment.content.substring(0, 500);\n+ comment.content = newComment.content.substring(0, 5000);\n// the -1000 is to prevent weird time display error\ncomment.timePosted = Date.now() - 1000;\n",
        "lang": "JavaScript",
        "codet5-history": "Increase the length of the comment content to 5000 characters"
    },
    {
        "msg": "Add null check to card.colors for pivotable",
        "diff": "diff --git a/src/analytics/PivotTable.js b/src/analytics/PivotTable.js @@ -6,7 +6,7 @@ import 'react-pivottable/pivottable.css';\nconst PivotTable = ({ cards }) => {\nconst data = cards.map((card) => ({\nCMC: card.cmc ?? card.details.cmc,\n- Color: card.colors.join(),\n+ Color: (card.colors || []).join(),\nFinish: card.finish,\n'Type Line': card.type_line,\nStatus: card.status,\n",
        "lang": "JavaScript",
        "codet5-history": "Fix PivotTable diff for undefined colors"
    },
    {
        "msg": "LogManager.LogFactory public",
        "diff": "diff --git a/src/NLog/LogManager.cs b/src/NLog/LogManager.cs @@ -66,9 +66,10 @@ public static class LogManager\npublic delegate CultureInfo GetCultureInfo();\n/// <summary>\n- /// Gets the default <see cref=\"NLog.LogFactory\" /> instance.\n+ /// Gets the <see cref=\"NLog.LogFactory\" /> instance used in the <see cref=\"LogManager\"/>.\n/// </summary>\n- internal static LogFactory LogFactory\n+ /// <remarks>Could be used to pass the to other methods</remarks>\n+ public static LogFactory LogFactory\n{\nget { return factory; }\n}\n",
        "lang": "C#",
        "codet5-history": "Make LogFactory public"
    },
    {
        "msg": "Initial port to react, bug with modal not opening",
        "diff": "diff --git a/src/components/BlogContextMenu.js b/src/components/BlogContextMenu.js import React from 'react';\n-import { Dropdown, DropdownToggle, DropdownMenu, DropdownItem, Collapse } from 'reactstrap';\n+import { Dropdown, DropdownToggle, DropdownMenu, DropdownItem, Collapse, Modal,\n+ ModalBody, ModalFooter, ModalHeader, Card, CardHeader, Row, Col, FormGroup,\n+ Label, Input, CardBody, Button, } from 'reactstrap';\n+\n+class BlogDeleteModal extends React.Component {\n+ constructor(props) {\n+ super(props);\n+ this.state = {\n+ isOpen: false,\n+ };\n+\n+ this.open = this.open.bind(this);\n+ this.close = this.close.bind(this);\n+ this.confirm = this.confirm.bind(this);\n+ this.keyPress = this.keyPress.bind(this);\n+ }\n+\n+ open() {\n+ document.addEventListener(\"keyup\", this.keyPress);\n+ this.setState({\n+ isOpen: true,\n+ });\n+ }\n+\n+ close() {\n+ document.removeEventListener(\"keyup\", this.keyPress);\n+ this.setState({\n+ isOpen: false,\n+ });\n+ }\n+\n+ keyPress(event) {\n+ if (event.keyCode === 13) {\n+ this.confirm();\n+ }\n+ }\n+\n+ confirm() {\n+ csrfFetch(`/cube/blog/remove/${this.props.postID}`, {\n+ method: 'DELETE',\n+ headers: {},\n+ }).then((response) => {\n+ if (!response.ok) {\n+ console.log(response);\n+ } else {\n+ window.location.href = '';\n+ }\n+ });\n+ }\n+\n+ render() {\n+ const {isOpen} = this.state;\n+ return (\n+ <>\n+ <span onClick={this.open}>\n+ Delete\n+ </span>\n+ <Modal isOpen={isOpen} toggle={this.close}>\n+ <ModalHeader toggle={this.close}>Confirm Delete</ModalHeader>\n+ <ModalBody>\n+ <p>Are you sure you wish to delete this post? This action cannot be undone.</p>\n+ </ModalBody>\n+ <ModalFooter>\n+ <Button color=\"danger\" onClick={this.confirm}>\n+ Delete\n+ </Button>{' '}\n+ <Button color=\"secondary\" onClick={this.close}>\n+ Close\n+ </Button>\n+ </ModalFooter>\n+ </Modal>\n+ </>\n+ )\n+ }\n+}\nclass BlogContextMenu extends React.Component {\nconstructor(props) {\n@@ -37,14 +111,14 @@ class BlogContextMenu extends React.Component {\n}\nclickDelete(post) {\n- $('#deleteModal').modal('show');\n-\n- var clickDeleteBlog = function(e) {\n+ const clickDeleteBlog = function(e) {\nif (event.keyCode === 13) {\n$('.delete-blog').click();\n}\n};\n+ $('#deleteModal').modal('show');\n+\n$(window).on('keyup', clickDeleteBlog)\n$('#deleteModal').on('hidden.bs.modal', function() {\n@@ -76,12 +150,8 @@ class BlogContextMenu extends React.Component {\n</DropdownToggle>\n<DropdownMenu right>\n<DropdownItem onClick={() => this.clickEdit(this.props.post)}>Edit</DropdownItem>\n- <DropdownItem\n- onClick={() => {\n- this.clickDelete(this.props.post);\n- }}\n- >\n- Delete\n+ <DropdownItem>\n+ <BlogDeleteModal postID={this.props.post._id}></BlogDeleteModal>\n</DropdownItem>\n</DropdownMenu>\n</Dropdown>\n",
        "lang": "JavaScript",
        "codet5-history": "Add confirmation to delete a blog"
    },
    {
        "msg": "fkie_node_manager_daemon: changed log info on node start",
        "diff": "diff --git a/fkie_node_manager_daemon/src/fkie_node_manager_daemon/launcher.py b/fkie_node_manager_daemon/src/fkie_node_manager_daemon/launcher.py @@ -224,8 +224,8 @@ def run_node(startcfg):\n_load_parameters(masteruri, startcfg.params, startcfg.clear_params)\n# start\ncmd_str = utf8('%s %s %s' % (screen.get_cmd(startcfg.fullname, new_env, startcfg.env.keys()), cmd_type, ' '.join(args)))\n- rospy.loginfo(\"run node '%s' with masteruri: %s, launch_file: '%s'\" % (nodename, masteruri, startcfg.config_path))\n- rospy.logdebug(\"run node: %s (env: %s)\", cmd_str, new_env)\n+ rospy.loginfo(\"%s (launch_file: '%s', masteruri: %s)\" % (cmd_str, startcfg.config_path, masteruri))\n+ rospy.logdebug(\"environment while run node '%s': '%s'\" % (cmd_str, new_env))\nSupervisedPopen(shlex.split(cmd_str), cwd=cwd, env=new_env, object_id=\"run_node_%s\" % startcfg.fullname, description=\"Run [%s]%s\" % (utf8(startcfg.package), utf8(startcfg.binary)))\nelse:\nrospy.loginfo(\"remote run node '%s' at '%s'\" % (nodename, startcfg.nmduri))\n",
        "lang": "Python",
        "codet5-history": "Fix log message for run_node"
    },
    {
        "msg": "ConfigureAwait(false) for all awaits",
        "diff": "diff --git a/src/NLog/Logger.cs b/src/NLog/Logger.cs @@ -570,7 +570,7 @@ public async void Swallow(Task task)\n{\ntry\n{\n- await task;\n+ await task.ConfigureAwait(false);\n}\ncatch (Exception e)\n{\n@@ -587,7 +587,7 @@ public async Task SwallowAsync(Task task)\n{\ntry\n{\n- await task;\n+ await task.ConfigureAwait(false);\n}\ncatch (Exception e)\n{\n@@ -603,7 +603,7 @@ public async Task SwallowAsync(Func<Task> asyncAction)\n{\ntry\n{\n- await asyncAction();\n+ await asyncAction().ConfigureAwait(false);\n}\ncatch (Exception e)\n{\n@@ -620,7 +620,7 @@ public async Task SwallowAsync(Func<Task> asyncAction)\n/// <returns>A task that represents the completion of the supplied task. If the supplied task ends in the <see cref=\"TaskStatus.RanToCompletion\"/> state, the result of the new task will be the result of the supplied task; otherwise, the result of the new task will be the default value of type <typeparamref name=\"TResult\"/>.</returns>\npublic async Task<TResult> SwallowAsync<TResult>(Func<Task<TResult>> asyncFunc)\n{\n- return await SwallowAsync(asyncFunc, default(TResult));\n+ return await SwallowAsync(asyncFunc, default(TResult)).ConfigureAwait(false);\n}\n/// <summary>\n@@ -635,7 +635,7 @@ public async Task<TResult> SwallowAsync<TResult>(Func<Task<TResult>> asyncFunc,\n{\ntry\n{\n- return await asyncFunc();\n+ return await asyncFunc().ConfigureAwait(false);\n}\ncatch (Exception e)\n{\n",
        "lang": "C#",
        "codet5-history": "Fixes a few warnings in the diff command"
    },
    {
        "msg": "Fix validation.",
        "diff": "diff --git a/routes/cube_routes.js b/routes/cube_routes.js @@ -2777,8 +2777,8 @@ router.get(\nrouter.post(\n'/api/getversions',\n- body([], 'Body must be an array').isArray(),\n- body('*', 'Each ID must be 36 characters').isLength({ min: 36, max: 36 }),\n+ body([], 'Body must be an array.').isArray(),\n+ body('*', 'Each ID must be a valid UUID.').isUUID(4),\njsonValidationErrors,\nutil.wrapAsyncApi(async (req, res) => {\nconst allDetails = req.body.map((cardID) => carddb.cardFromId(cardID));\n",
        "lang": "JavaScript",
        "codet5-history": "fix: update getversions validation"
    },
    {
        "msg": "Make Layer#setName return this for chaining",
        "diff": "diff --git a/scene/src/playn/scene/Layer.java b/scene/src/playn/scene/Layer.java @@ -149,9 +149,14 @@ public abstract class Layer implements Closeable {\nreturn name;\n}\n- /** Sets the name of this layer. See {@link #name}. */\n- public void setName (String name) {\n+ /**\n+ * Sets the name of this layer. See {@link #name}.\n+ *\n+ * @return a reference to this layer for call chaining.\n+ */\n+ public Layer setName (String name) {\nthis.name = name;\n+ return this;\n}\n/** Returns the layer that contains this layer, or {@code null}. */\n",
        "lang": "Java",
        "codet5-history": "Fix Layer.setName() to return a reference to the layer"
    },
    {
        "msg": "fix bug in Random Access in Stringindex",
        "diff": "diff --git a/StringIndex/StringIndex.cpp b/StringIndex/StringIndex.cpp @@ -297,7 +297,7 @@ void StringIndexFile::trySequenceAccess(std::vector<StringIndexFile::AccessReque\nelse\n{\ncout << \"random access.\" << endl;\n- for (int i = 0; i < (int)this->request.size(); i++)\n+ for (int i = 0; i < (int)requestVector.size(); i++)\n{\n//this->randomAccess(this->request[i].id, (this->request[i].off_str + base), real);\nthis->randomAccess(requestVector[i].id, (requestVector[i].off_str + base), real);\n",
        "lang": "C++",
        "codet5-history": "Fix the bug in the code that was causing the commit to fail."
    },
    {
        "msg": "Add break_all_links() and get_linked_to()\nfor blueprint pins",
        "diff": "diff --git a/Source/UnrealEnginePython/Private/Blueprint/UEPyEdGraphPin.cpp b/Source/UnrealEnginePython/Private/Blueprint/UEPyEdGraphPin.cpp @@ -80,9 +80,49 @@ static PyObject *py_ue_edgraphpin_break_link_to(ue_PyEdGraphPin *self, PyObject\nPy_RETURN_NONE;\n}\n+static PyObject *py_ue_edgraphpin_break_all_pin_links(ue_PyEdGraphPin *self, PyObject * args)\n+{\n+ PyObject *py_notify_nodes = nullptr;\n+ if (!PyArg_ParseTuple(args, \"O:break_all_pin_links\", &py_notify_nodes))\n+ {\n+ return NULL;\n+ }\n+\n+ bool notify_nodes = true;\n+ if (py_notify_nodes && !PyObject_IsTrue(py_notify_nodes))\n+ notify_nodes = false;\n+\n+ self->pin->BreakAllPinLinks(notify_nodes);\n+\n+ if (UBlueprint *bp = Cast<UBlueprint>(self->pin->GetOwningNode()->GetGraph()->GetOuter()))\n+ {\n+ FBlueprintEditorUtils::MarkBlueprintAsStructurallyModified(bp);\n+ }\n+\n+ Py_RETURN_NONE;\n+}\n+\n+static PyObject *py_ue_edgraphpin_get_linked_to(ue_PyEdGraphPin * self, PyObject * args)\n+{\n+ PyObject *pins = PyList_New(0);\n+\n+ TArray<UEdGraphPin*> Links = self->pin->LinkedTo;\n+\n+ for (int32 i = 0; i < Links.Num(); i++)\n+ {\n+ UEdGraphPin *pin = Links[i];\n+ ue_PyUObject *item = (ue_PyUObject *)py_ue_new_edgraphpin(pin);\n+ if (item)\n+ PyList_Append(pins, (PyObject *)item);\n+ }\n+ return pins;\n+}\n+\nstatic PyMethodDef ue_PyEdGraphPin_methods[] = {\n{ \"make_link_to\", (PyCFunction)py_ue_edgraphpin_make_link_to, METH_VARARGS, \"\" },\n{ \"break_link_to\", (PyCFunction)py_ue_edgraphpin_break_link_to, METH_VARARGS, \"\" },\n+ { \"break_all_pin_links\", (PyCFunction)py_ue_edgraphpin_break_all_pin_links, METH_VARARGS, \"\" },\n+ { \"get_linked_to\", (PyCFunction)py_ue_edgraphpin_get_linked_to, METH_VARARGS, \"\" },\n{ \"connect\", (PyCFunction)py_ue_edgraphpin_connect, METH_VARARGS, \"\" },\n{ NULL } /* Sentinel */\n};\n",
        "lang": "C++",
        "codet5-history": "Add get_linked_to and break_all_pin_links to UEdGraph"
    },
    {
        "msg": "added shutdown method",
        "diff": "diff --git a/Source/UnrealEnginePython/Private/UEPyModule.cpp b/Source/UnrealEnginePython/Private/UEPyModule.cpp @@ -195,11 +195,21 @@ static PyObject *py_ue_get_py_proxy(ue_PyUObject *self, PyObject * args)\nPy_RETURN_NONE;\n}\n+static PyObject *py_unreal_engine_shutdown(PyObject *self, PyObject * args)\n+{\n+\n+ GIsRequestingExit = true;\n+\n+ Py_RETURN_NONE;\n+}\n+\nstatic PyMethodDef unreal_engine_methods[] = {\n{ \"log\", py_unreal_engine_log, METH_VARARGS, \"\" },\n{ \"log_warning\", py_unreal_engine_log_warning, METH_VARARGS, \"\" },\n{ \"log_error\", py_unreal_engine_log_error, METH_VARARGS, \"\" },\n+ { \"shutdown\", py_unreal_engine_shutdown, METH_VARARGS, \"\" },\n+\n{ \"add_on_screen_debug_message\", py_unreal_engine_add_on_screen_debug_message, METH_VARARGS, \"\" },\n{ \"print_string\", py_unreal_engine_print_string, METH_VARARGS, \"\" },\n",
        "lang": "C++",
        "codet5-history": "Add shutdown method to UnrealEnginePython"
    },
    {
        "msg": "Fix recomender styling",
        "diff": "diff --git a/src/analytics/Suggestions.js b/src/analytics/Suggestions.js @@ -79,8 +79,8 @@ const Suggestions = ({ adds, cuts, loading, cube, filter }) => {\n<Card>\n<CardHeader>\n<ListGroupItemHeading>Recommended Additions</ListGroupItemHeading>\n+ <input className=\"mr-2\" type=\"checkbox\" checked={maybeOnly} onClick={toggleMaybeOnly} />\n<Label for=\"toggleMaybeboard\">Show cards from my Maybeboard only.</Label>\n- <input type=\"checkbox\" checked={maybeOnly} onClick={toggleMaybeOnly} />\n</CardHeader>\n<ListGroup>\n{loading && (\n",
        "lang": "JavaScript",
        "codet5-history": "Fix styling of \"Show cards from my Maybeboard only.\""
    },
    {
        "msg": "node_manager_fkie: added a new line before node, group and include on formating XML",
        "diff": "diff --git a/node_manager_fkie/src/node_manager_fkie/editor/xmlformatter.py b/node_manager_fkie/src/node_manager_fkie/editor/xmlformatter.py @@ -55,7 +55,7 @@ class Formatter():\n# Use internal encoding:\nencoding_internal = None\n- def __init__(self, indent = DEFAULT_INDENT, preserve = [], compress = DEFAULT_COMPRESS, indent_char = DEFAULT_INDENT_CHAR, encoding_input = DEFAULT_ENCODING_INPUT, encoding_output = DEFAULT_ENCODING_OUTPUT, inline = DEFAULT_INLINE, correct = DEFAULT_CORRECT, noemptytag = DEFAULT_NOEMPTYTAG, emptyattr = DEFAULT_EMPTYATTR, indent_data = DEFAULT_INDENT_DATA):\n+ def __init__(self, indent = DEFAULT_INDENT, preserve = [], compress = DEFAULT_COMPRESS, indent_char = DEFAULT_INDENT_CHAR, encoding_input = DEFAULT_ENCODING_INPUT, encoding_output = DEFAULT_ENCODING_OUTPUT, inline = DEFAULT_INLINE, correct = DEFAULT_CORRECT, noemptytag = DEFAULT_NOEMPTYTAG, emptyattr = DEFAULT_EMPTYATTR, indent_data = DEFAULT_INDENT_DATA, wraped = ['node', 'group', 'include']):\n# Minify the XML document:\nself.compress = compress\n# Allow self closing tag also it not compress\n@@ -78,6 +78,8 @@ class Formatter():\nself.inline = inline\n# Don't compress this elements and their descendants:\nself.preserve = preserve\n+ # Insert new line before this elements\n+ self.wraped = wraped\n@property\ndef encoding_effective(self, enc = None):\n@@ -673,6 +675,8 @@ class Formatter():\ndef __unicode__(self):\nstr = \"\"\n+ if self.arg[0] in self.formatter.wraped:\n+ str += \"\\n\"\nif (self.preserve in [0, 1] and self.indent):\nstr += self.indent_insert()\nstr += \"<%s\" %self.arg[0]\n",
        "lang": "Python",
        "codet5-history": "Add wraped option to xmlformatter"
    },
    {
        "msg": "[#issue-313] cmdline lib function list and getinfo has no info return\nAdded information processing of function list and function getinfo\nClose #issue-313",
        "diff": "diff --git a/src/api-engine/api/lib/peer/channel.py b/src/api-engine/api/lib/peer/channel.py @@ -30,12 +30,14 @@ class Channel(BasicEnv):\ndef list(self):\ntry:\n- res = os.system(\"{} channel list\".format(self.peer))\n+ res = os.system(\"{} channel list > ./list.txt\".format(self.peer))\n+ with open('./list.txt', 'r', encoding='utf-8') as f:\n+ content = f.read()\nres = res >> 8\nexcept Exception as e:\nerr_msg = \"get channel list failed for {}!\".format(e)\nraise Exception(err_msg)\n- return res\n+ return res, content\ndef update(self, channel, channel_tx, orderer_url):\n\"\"\"\n@@ -115,11 +117,13 @@ class Channel(BasicEnv):\n\"\"\"\ntry:\nres = os.system(\n- \"{} channel getinfo -c {}\".format(self.peer, channel)\n+ \"{} channel getinfo -c {} > ./getinfo.txt\".format(self.peer, channel)\n)\n+ with open('./getinfo.txt', 'r', encoding='utf-8') as f:\n+ content = f.read()\nexcept Exception as e:\nerr_msg = \"get blockchain information of a specified channel failed. {}\".format(\ne)\nraise Exception(err_msg)\nres = res >> 8\n- return res\n+ return res, content\n",
        "lang": "Python",
        "codet5-history": "Fix channel diff command"
    },
    {
        "msg": "asynchronously fetch tcgplayer data when card version changes in CardModal",
        "diff": "diff --git a/src/components/CardModalForm.js b/src/components/CardModalForm.js @@ -85,6 +85,21 @@ class CardModalForm extends Component {\n},\n}\n}));\n+ // asyncronously grab the pricing data and update state\n+ fetch(`/cube/api/getcardfromid/${value}`).then(\n+ response => response.json()\n+ ).then(json => {\n+ this.setState(({ card }) => ({\n+ card: {\n+ ...card,\n+ details: {\n+ ...card.details,\n+ price: json.card.price,\n+ price_foil: json.card.price_foil,\n+ },\n+ }\n+ }))\n+ }).catch(err => console.error(err));\n} else {\nconsole.error('Can\\'t find version');\n}\n",
        "lang": "JavaScript",
        "codet5-history": "Added asyncronous fetch to card modal"
    },
    {
        "msg": "Fix cube_analysis.js.",
        "diff": "diff --git a/src/cube_analysis.js b/src/cube_analysis.js import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\n+import PropTypes from 'prop-types';\nimport { Col, Nav, NavLink, Row } from 'reactstrap';\n@@ -17,14 +18,18 @@ class CubeAnalysis extends Component {\nconstructor(props) {\nsuper(props);\n- this.state = {\n- nav: this.props.defaultNav || 'curve',\n- };\n+ const { defaultNav } = this.props;\n+\n+ this.state = { activeNav: defaultNav };\n+\n+ this.select = this.select.bind(this);\n+ this.handleNav = this.handleNav.bind(this);\n}\ncomponentDidMount() {\n+ const { nav } = this.state;\nthis.setState({\n- nav: Query.get('nav', this.state.nav),\n+ nav: Query.get('nav', nav),\n});\n}\n@@ -34,14 +39,19 @@ class CubeAnalysis extends Component {\n} else {\nQuery.set('nav', nav);\n}\n- this.setState({ nav });\n+ this.setState({ activeNav: nav });\n+ }\n+\n+ handleNav(event) {\n+ event.preventDefault();\n+ this.select(event.target.getAttribute('data-nav'));\n}\nrender() {\nconst { cube, cubeID, curve, typeByColor, multicoloredCounts, tokens } = this.props;\n- const active = this.state.nav;\n+ const { activeNav } = this.state;\nconst navItem = (nav, text) => (\n- <NavLink active={active === nav} onClick={this.select.bind(this, nav)} href=\"#\">\n+ <NavLink active={activeNav === nav} data-nav={nav} onClick={this.handleNav} href=\"#\">\n{text}\n</NavLink>\n);\n@@ -65,7 +75,7 @@ class CubeAnalysis extends Component {\ntype: <TypeAnalysis typeByColor={typeByColor} />,\nmulti: <MulticoloredAnalysis multicoloredCounts={multicoloredCounts} />,\ntokens: <TokenAnalysis tokens={tokens} />,\n- }[active]\n+ }[activeNav]\n}\n</ErrorBoundary>\n</Col>\n@@ -75,8 +85,22 @@ class CubeAnalysis extends Component {\n}\n}\n+CubeAnalysis.propTypes = {\n+ cube: PropTypes.shape({}).isRequired,\n+ cubeID: PropTypes.string.isRequired,\n+ curve: PropTypes.string.isRequired,\n+ typeByColor: PropTypes.shape({}).isRequired,\n+ multicoloredCounts: PropTypes.shape({}).isRequired,\n+ tokens: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.shape({}), PropTypes.arrayOf(PropTypes.shape({}))]))).isRequired,\n+ defaultNav: PropTypes.string,\n+};\n+\n+CubeAnalysis.defaultProps = {\n+ defaultNav: 'curve',\n+};\n+\nconst wrapper = document.getElementById('react-root');\nconst element = <CubeAnalysis {...window.reactProps} />;\nif (wrapper) {\n- ReactDOM.render(element.wrapper);\n+ ReactDOM.render(element, wrapper);\n}\n",
        "lang": "JavaScript",
        "codet5-history": "fix(diff): fix nav selection"
    },
    {
        "msg": "update cube indexes",
        "diff": "diff --git a/models/cube.js b/models/cube.js @@ -52,26 +52,19 @@ const cubeSchema = mongoose.Schema({\nname: {\ntype: String,\nrequired: true,\n- index: true,\n},\nshortID: {\ntype: String,\nrequired: true,\n- index: true,\n- },\n- urlAlias: {\n- type: String,\n- index: true,\n},\n+ urlAlias: String,\nowner: {\ntype: String,\nrequired: true,\n- index: true,\n},\nisListed: {\ntype: Boolean,\ndefault: true,\n- index: true,\n},\nprivatePrices: {\ntype: Boolean,\n@@ -80,22 +73,18 @@ const cubeSchema = mongoose.Schema({\nisFeatured: {\ntype: Boolean,\ndefault: false,\n- index: true,\n},\noverrideCategory: {\ntype: Boolean,\ndefault: false,\n- index: true,\n},\ncategoryOverride: {\ntype: String,\ndefault: 'Vintage',\n- index: true,\n},\ncategoryPrefixes: {\ntype: [String],\ndefault: [],\n- index: true,\n},\ntags: {\ntype: [String],\n@@ -129,10 +118,7 @@ const cubeSchema = mongoose.Schema({\nimage_artist: String,\nimage_name: String,\nowner_name: String,\n- date_updated: {\n- type: Date,\n- index: true,\n- },\n+ date_updated: Date,\nupdated_string: String,\ndefault_sorts: [String],\ncard_count: Number,\n@@ -163,6 +149,14 @@ const cubeSchema = mongoose.Schema({\n},\n});\n+cubeSchema.index({\n+ shortID: 1,\n+});\n+\n+cubeSchema.index({\n+ urlAlias: 1,\n+});\n+\ncubeSchema.index({\nowner: 1,\ndate_updated: -1,\n@@ -173,8 +167,21 @@ cubeSchema.index({\ndate_updated: -1,\n});\n+// these indexes are for explore queries\ncubeSchema.index({\n- name: 1,\n+ isFeatured: 1,\n+});\n+\n+cubeSchema.index({\n+ isListed: 1,\n+ owner: 1,\n+ card_count: 1,\n+ date_updated: -1,\n+});\n+\n+cubeSchema.index({\n+ isListed: 1,\n+ owner: 1,\nnumDecks: -1,\n});\n",
        "lang": "JavaScript",
        "codet5-history": "Remove index on cube.js"
    },
    {
        "msg": "JsonSerializer - Write DateTime directly to StringBuilder instead of allocating string (bonus fix)",
        "diff": "diff --git a/src/NLog/Internal/StringBuilderExt.cs b/src/NLog/Internal/StringBuilderExt.cs @@ -181,7 +181,7 @@ public static void AppendXmlDateTimeRoundTrip(this StringBuilder builder, DateTi\nint digitCount = CalculateDigitCount((uint)fraction);\nif (max_digit_count > digitCount)\nbuilder.Append('0', max_digit_count - digitCount);\n- AppendInvariant(builder, (uint)fraction);\n+ ApppendValueWithDigitCount(builder, (uint)fraction, digitCount);\n}\nbuilder.Append('Z');\n}\n",
        "lang": "C#",
        "codet5-history": "Fix incorrect formatting of XML datetime round trip"
    },
    {
        "msg": "use precalculated number",
        "diff": "diff --git a/examples/protoss/cannon_rush.py b/examples/protoss/cannon_rush.py @@ -20,7 +20,7 @@ class CannonRushBot(sc2.BotAI):\nnexus = self.townhalls.random\n# Make probes until we have 16 total\n- if self.workers.amount < 16 and nexus.is_idle:\n+ if self.supply_workers < 16 and nexus.is_idle:\nif self.can_afford(PROBE):\nself.do(nexus.train(PROBE), subtract_cost=True, subtract_supply=True)\n",
        "lang": "Python",
        "codet5-history": "Fix CannonRushBot.train()\nThe worker amount is not used."
    },
    {
        "msg": "Fix echo of non-ascii values",
        "diff": "diff --git a/node_manager_fkie/src/node_manager_fkie/echo_dialog.py b/node_manager_fkie/src/node_manager_fkie/echo_dialog.py @@ -754,7 +754,7 @@ class EchoDialog(QDialog):\nslot_name = f\nif isinstance(cval, (list, tuple)):\nslot_name = \"%s[%d]\" % (f, len(cval))\n- slots.append(p % (slot_name, self.strify_message(cval, ni, time_offset, current_time, field_filter, fixed_numeric_width)))\n+ slots.append(p % (utf8(slot_name), self.strify_message(utf8(cval), ni, time_offset, current_time, field_filter, fixed_numeric_width)))\nvals = '\\n'.join(slots)\nif indent:\nreturn '\\n' + vals\n",
        "lang": "Python",
        "codet5-history": "Fix unicode issue in diff command"
    },
    {
        "msg": "Fix paging for getUserProjects\nDon't apply limit/offset when getting accessible ids but do apply when\nquerying the registry. This is the same way searchProjects works.",
        "diff": "diff --git a/airavata-api/airavata-api-server/src/main/java/org/apache/airavata/api/server/handler/AiravataServerHandler.java b/airavata-api/airavata-api-server/src/main/java/org/apache/airavata/api/server/handler/AiravataServerHandler.java @@ -949,7 +949,8 @@ public class AiravataServerHandler implements Airavata.Iface {\nsearchCriteria.setValue(gatewayId + \":PROJECT\");\nfilters.add(searchCriteria);\nsharingClient.searchEntities(authzToken.getClaimsMap().get(Constants.GATEWAY_ID),\n- userName + \"@\" + gatewayId, filters, offset, limit).stream().forEach(p -> accessibleProjectIds.add(p.entityId));\n+ userName + \"@\" + gatewayId, filters, 0, -1).stream().forEach(p -> accessibleProjectIds\n+ .add(p.entityId));\nList<Project> result = regClient.searchProjects(gatewayId, userName, accessibleProjectIds, new HashMap<>(), limit, offset);\nregistryClientPool.returnResource(regClient);\nsharingClientPool.returnResource(sharingClient);\n",
        "lang": "Java",
        "codet5-history": "Fix the diff command to search for projects"
    },
    {
        "msg": "implemented FSlateStyleSet set()",
        "diff": "diff --git a/Source/UnrealEnginePython/Private/Slate/UEPyFSlateStyleSet.cpp b/Source/UnrealEnginePython/Private/Slate/UEPyFSlateStyleSet.cpp @@ -13,8 +13,61 @@ static PyObject *py_ue_fslate_style_set_set_content_root(ue_PyFSlateStyleSet *se\nreturn Py_None;\n}\n+static PyObject *py_ue_fslate_style_set_set(ue_PyFSlateStyleSet *self, PyObject * args) {\n+ char *name;\n+ PyObject *py_value;\n+ if (!PyArg_ParseTuple(args, \"sO:set\", &name, &py_value))\n+ return NULL;\n+\n+ FSlateSound *slate_sound = ue_py_check_struct<FSlateSound>(py_value);\n+ if (slate_sound) {\n+ self->style_set->Set(FName(name), *slate_sound);\n+ Py_RETURN_NONE;\n+ }\n+\n+ FSlateBrush *slate_brush = ue_py_check_struct<FSlateBrush>(py_value);\n+ if (slate_brush) {\n+ self->style_set->Set(FName(name), slate_brush);\n+ Py_RETURN_NONE;\n+ }\n+\n+ FSlateColor *slate_color = ue_py_check_struct<FSlateColor>(py_value);\n+ if (slate_brush) {\n+ self->style_set->Set(FName(name), *slate_color);\n+ Py_RETURN_NONE;\n+ }\n+\n+ FSlateFontInfo *slate_font = ue_py_check_struct<FSlateFontInfo>(py_value);\n+ if (slate_font) {\n+ self->style_set->Set(FName(name), *slate_font);\n+ Py_RETURN_NONE;\n+ }\n+\n+ ue_PyFLinearColor *py_linear_color = py_ue_is_flinearcolor(py_value);\n+ if (py_linear_color) {\n+ self->style_set->Set(FName(name), py_linear_color->color);\n+ Py_RETURN_NONE;\n+ }\n+\n+ ue_PyFColor *py_color = py_ue_is_fcolor(py_value);\n+ if (py_color) {\n+ self->style_set->Set(FName(name), py_color->color);\n+ Py_RETURN_NONE;\n+ }\n+\n+ if (PyNumber_Check(py_value)) {\n+ PyObject *py_float = PyNumber_Float(py_value);\n+ self->style_set->Set(FName(name), (float)PyFloat_AsDouble(py_float));\n+ Py_DECREF(py_float);\n+ Py_RETURN_NONE;\n+ }\n+\n+ return PyErr_Format(PyExc_ValueError, \"unsupported value type\");\n+}\n+\nstatic PyMethodDef ue_PyFSlateStyleSet_methods[] = {\n{ \"set_content_root\", (PyCFunction)py_ue_fslate_style_set_set_content_root, METH_VARARGS, \"\" },\n+ { \"set\", (PyCFunction)py_ue_fslate_style_set_set, METH_VARARGS, \"\" },\n{ NULL } /* Sentinel */\n};\n",
        "lang": "C++",
        "codet5-history": "Added a new method to set a style set"
    },
    {
        "msg": "added link renderer",
        "diff": "diff --git a/src/components/Markdown.js b/src/components/Markdown.js @@ -10,11 +10,14 @@ import strikethrough from 'markdown/strikethrough';\nimport symbols from 'markdown/symbols';\nimport cardlink from 'markdown/cardlink';\nimport withAutocard from 'components/WithAutocard';\n+import withModal from 'components/WithModal';\n+import LinkModal from 'components/LinkModal';\nimport FoilCardImage from 'components/FoilCardImage';\nimport { Col, Row, Card, CardBody } from 'reactstrap';\nconst AutocardLink = withAutocard('a');\n+const Link = withModal('a', LinkModal);\nfunction renderBlockQuote(node) {\nreturn (\n@@ -24,6 +27,24 @@ function renderBlockQuote(node) {\n);\n}\n+function renderLink(node) {\n+ const ref = encodeURI(node.node?.url ?? '');\n+\n+ const isInternalURL = (to) => {\n+ try {\n+ const url = new URL(to, window.location.origin);\n+ return url.hostname === window.location.hostname;\n+ } catch {\n+ return false;\n+ }\n+ };\n+\n+ if (isInternalURL(ref)) {\n+ return <a target=\"_blank\" rel=\"noopen noreferrer\" href={ref} children={node.children} />;\n+ }\n+ return <Link href=\"#\" modalProps={{ link: ref }} children={node.children} />;\n+}\n+\nfunction renderMath(node) {\nreturn <Latex trusted={false} displayMode>{`$$ ${node.value} $$`}</Latex>;\n}\n@@ -77,6 +98,7 @@ function renderCardImage(node) {\nconst Markdown = ({ markdown, limited }) => {\nconst renderers = {\n+ link: renderLink,\nblockquote: renderBlockQuote,\nmath: renderMath,\ninlineMath: renderInlineMath,\n",
        "lang": "JavaScript",
        "codet5-history": "Add link modal to markdown"
    },
    {
        "msg": "culture debugging",
        "diff": "diff --git a/src/DataSources/Goodreads.cs b/src/DataSources/Goodreads.cs @@ -71,7 +71,14 @@ private List<BookInfo> ParseSearchResults(HtmlDocument goodreadsHtmlDoc)\nif (matchId.Success)\n{\nnewBook.amazonRating = float.Parse(matchId.Groups[1].Value);\n+ try\n+ {\nnewBook.numReviews = int.Parse(matchId.Groups[2].Value, NumberStyles.AllowThousands, CultureInfo.CurrentCulture);\n+ }\n+ catch (Exception e)\n+ {\n+ Logger.Log($\"Error: {e.Message} - Culture: {CultureInfo.CurrentCulture} - Value: {matchId.Groups[2].Value}\");\n+ }\nnewBook.editions = int.Parse(matchId.Groups[3].Value);\n}\n}\n",
        "lang": "C#",
        "codet5-history": "Fixing bad parsing of number reviews"
    },
    {
        "msg": "node_manager_fkie: fixed icon for transfer question",
        "diff": "diff --git a/node_manager_fkie/src/node_manager_fkie/message_frame.py b/node_manager_fkie/src/node_manager_fkie/message_frame.py @@ -128,8 +128,8 @@ class MessageFrame(QFrame):\n3: QPixmap(':/icons/crystal_clear_launch_file.png').scaled(self.ICON_SIZE, self.ICON_SIZE, Qt.IgnoreAspectRatio, Qt.SmoothTransformation),\n4: QPixmap(\":/icons/default_cfg.png\").scaled(self.ICON_SIZE, self.ICON_SIZE, Qt.IgnoreAspectRatio, Qt.SmoothTransformation),\n5: QPixmap(\":/icons/crystal_clear_nodelet_q.png\").scaled(self.ICON_SIZE, self.ICON_SIZE, Qt.IgnoreAspectRatio, Qt.SmoothTransformation),\n- 6: QPixmap(\":/icons/crystal_clear_question.png\").scaled(self.ICON_SIZE, self.ICON_SIZE, Qt.IgnoreAspectRatio, Qt.SmoothTransformation),\n- 7: QPixmap(\":/icons/crystal_clear_launch_file_transfer.png\").scaled(self.ICON_SIZE, self.ICON_SIZE, Qt.IgnoreAspectRatio, Qt.SmoothTransformation),\n+ 6: QPixmap(\":/icons/crystal_clear_launch_file_transfer.png\").scaled(self.ICON_SIZE, self.ICON_SIZE, Qt.IgnoreAspectRatio, Qt.SmoothTransformation),\n+ 7: QPixmap(\":/icons/crystal_clear_question.png\").scaled(self.ICON_SIZE, self.ICON_SIZE, Qt.IgnoreAspectRatio, Qt.SmoothTransformation),\n8: QPixmap(\":/icons/crystal_clear_no_io.png\").scaled(self.ICON_SIZE, self.ICON_SIZE, Qt.IgnoreAspectRatio, Qt.SmoothTransformation)\n}\nself._new_request = False\n",
        "lang": "Python",
        "codet5-history": "Fix typo in diff command"
    },
    {
        "msg": "add test for Zero-Length datagrams\nSummary: easy",
        "diff": "diff --git a/quic/api/test/QuicTransportBaseTest.cpp b/quic/api/test/QuicTransportBaseTest.cpp @@ -3845,6 +3845,20 @@ TEST_F(QuicTransportImplTest, DatagramCallbackDatagramAvailable) {\ntransport->driveReadCallbacks();\n}\n+TEST_F(QuicTransportImplTest, ZeroLengthDatagram) {\n+ NiceMock<MockDatagramCallback> datagramCb;\n+ transport->enableDatagram();\n+ transport->setDatagramCallback(&datagramCb);\n+ transport->addDatagram(folly::IOBuf::copyBuffer(\"\"));\n+ EXPECT_CALL(datagramCb, onDatagramsAvailable());\n+ transport->driveReadCallbacks();\n+ auto datagrams = transport->readDatagrams();\n+ EXPECT_FALSE(datagrams.hasError());\n+ EXPECT_EQ(datagrams->size(), 1);\n+ EXPECT_TRUE(datagrams->front() != nullptr);\n+ EXPECT_EQ(datagrams->front()->computeChainDataLength(), 0);\n+}\n+\nTEST_F(QuicTransportImplTest, Cmsgs) {\ntransport->setServerConnectionId();\nfolly::SocketOptionMap cmsgs;\n",
        "lang": "C++",
        "codet5-history": "Add a test for zero length datagram"
    },
    {
        "msg": "fix(Parser): fix bug of update",
        "diff": "diff --git a/Parser/QueryParser.cpp b/Parser/QueryParser.cpp @@ -837,6 +837,8 @@ antlrcpp::Any QueryParser::visitInsertData(SPARQLParser::InsertDataContext *ctx)\n{\nquery_tree_ptr->setUpdateType(QueryTree::Insert_Data);\n+ visit(ctx->quadData());\n+\nreturn antlrcpp::Any();\n}\n@@ -844,6 +846,8 @@ antlrcpp::Any QueryParser::visitDeleteData(SPARQLParser::DeleteDataContext *ctx)\n{\nquery_tree_ptr->setUpdateType(QueryTree::Delete_Data);\n+ visit(ctx->quadData());\n+\nreturn antlrcpp::Any();\n}\n@@ -851,6 +855,8 @@ antlrcpp::Any QueryParser::visitDeleteWhere(SPARQLParser::DeleteWhereContext *ct\n{\nquery_tree_ptr->setUpdateType(QueryTree::Delete_Where);\n+ visit(ctx->quadPattern());\n+\nreturn antlrcpp::Any();\n}\n",
        "lang": "C++",
        "codet5-history": "Fix the diff command to include the quads"
    },
    {
        "msg": "Fix bug with build for me.",
        "diff": "diff --git a/src/components/DeckbuilderNavbar.js b/src/components/DeckbuilderNavbar.js @@ -188,8 +188,7 @@ const DeckbuilderNavbar = ({\nconst autoBuildDeck = useCallback(async () => {\nconst main = deck.playerdeck.flat(2).concat(deck.playersideboard.flat());\n- const picked = fromEntries(COLOR_COMBINATIONS.map((comb) => [comb.join(''), 0]));\n- picked.cards = [];\n+ const picked = createSeen();\naddSeen(picked, main);\nconst { sideboard: side, deck: newDeck } = await buildDeck(\nmain,\n",
        "lang": "JavaScript",
        "codet5-history": "Fix autoBuildDeck"
    },
    {
        "msg": "Prevent MariaDB ON UPDATE CURRENT_TIMESTAMP\nNeed `DEFAULT 0` to prevent `ON UPDATE CURRENT_TIMESTAMP` behavior for first\nTIMESTAMP in table.",
        "diff": "diff --git a/modules/registry/release-migration-scripts/next/DeltaScripts/appCatalog_schema_delta.sql b/modules/registry/release-migration-scripts/next/DeltaScripts/appCatalog_schema_delta.sql @@ -22,7 +22,7 @@ use app_catalog;\n-- AIRAVATA-3126\nCREATE TABLE IF NOT EXISTS COMPUTE_RESOURCE_RESERVATION -- ComputeResourceReservationEntity\n- (RESERVATION_ID VARCHAR(255) NOT NULL, END_TIME TIMESTAMP NOT NULL, RESERVATION_NAME VARCHAR(255) NOT NULL, START_TIME TIMESTAMP NOT NULL, RESOURCE_ID VARCHAR(255) NOT NULL, GROUP_RESOURCE_PROFILE_ID VARCHAR(255) NOT NULL, PRIMARY KEY (RESERVATION_ID)\n+ (RESERVATION_ID VARCHAR(255) NOT NULL, END_TIME TIMESTAMP NOT NULL DEFAULT 0, RESERVATION_NAME VARCHAR(255) NOT NULL, START_TIME TIMESTAMP NOT NULL DEFAULT 0, RESOURCE_ID VARCHAR(255) NOT NULL, GROUP_RESOURCE_PROFILE_ID VARCHAR(255) NOT NULL, PRIMARY KEY (RESERVATION_ID)\n)ENGINE=InnoDB DEFAULT CHARSET=latin1;\nCREATE TABLE IF NOT EXISTS COMPUTE_RESOURCE_RESERVATION_QUEUE (RESERVATION_ID VARCHAR(255), QUEUE_NAME VARCHAR(255) NOT NULL\n)ENGINE=InnoDB DEFAULT CHARSET=latin1;\n",
        "lang": "Java",
        "codet5-history": "Add default value to reservation entity table"
    },
    {
        "msg": "Add more docstring info to movement_speed",
        "diff": "diff --git a/sc2/unit.py b/sc2/unit.py @@ -299,11 +299,14 @@ class Unit:\n@property\ndef movement_speed(self) -> float:\n- \"\"\" Returns the movement speed of the unit. Does not include upgrades or buffs. \"\"\"\n+ \"\"\" Returns the movement speed of the unit.\n+ This is the unit movement speed on game speed 'normal'. To convert it to 'faster' movement speed, multiply it by a factor of '1.4'. E.g. reaper movement speed is listed here as 3.75, but should actually be 5.25.\n+ Does not include upgrades or buffs. \"\"\"\nreturn self._type_data._proto.movement_speed\n@property\ndef real_speed(self) -> float:\n+ \"\"\" See 'calculate_speed'. \"\"\"\nreturn self.calculate_speed()\ndef calculate_speed(self, upgrades: Set[UpgradeId] = None) -> float:\n@@ -376,7 +379,7 @@ class Unit:\n@property\ndef health_percentage(self) -> float:\n\"\"\" Returns the percentage of health the unit has. Does not include shields. \"\"\"\n- if self._proto.health_max == 0:\n+ if not self._proto.health_max:\nreturn 0\nreturn self._proto.health / self._proto.health_max\n@@ -393,7 +396,7 @@ class Unit:\n@property\ndef shield_percentage(self) -> float:\n\"\"\" Returns the percentage of shield points the unit has. Returns 0 for non-protoss units. \"\"\"\n- if self._proto.shield_max == 0:\n+ if not self._proto.shield_max:\nreturn 0\nreturn self._proto.shield / self._proto.shield_max\n@@ -402,7 +405,7 @@ class Unit:\n\"\"\" Returns the percentage of combined shield + hp points the unit has.\nAlso takes build progress into account. \"\"\"\nmax_ = (self._proto.shield_max + self._proto.health_max) * self.build_progress\n- if max_ == 0:\n+ if not max_:\nreturn 0\nreturn (self._proto.shield + self._proto.health) / max_\n@@ -419,7 +422,7 @@ class Unit:\n@property\ndef energy_percentage(self) -> float:\n\"\"\" Returns the percentage of amount of energy the unit has. Returns 0 for units without energy. \"\"\"\n- if self._proto.energy_max == 0:\n+ if not self._proto.energy_max:\nreturn 0\nreturn self._proto.energy / self._proto.energy_max\n",
        "lang": "Python",
        "codet5-history": "Fixes for unit.py\n* Fixes for unit.py\n* Fixes"
    },
    {
        "msg": "docs on mysql migration script foreign key/constraint management",
        "diff": "diff --git a/modules/registry/registry-core/README.md b/modules/registry/registry-core/README.md @@ -8,6 +8,12 @@ script_). These instructions show you how to create these scripts.\n1. First, start by adding or updating the Entity class, for example, by adding a\nnew field.\n+\n+ Additional notes:\n+\n+ - To have OpenJPA generate FOREIGN KEY schema statements, you need to\n+ annotate the foreign key reference with `@ForeignKey`.\n+\n2. If you added an Entity class, make sure to add an entry for it in\n`persistence.xml`. You'll need to also add the same entry to\n`../../ide-integration/src/main/resources/META-INF/persistence.xml`.\n@@ -42,8 +48,15 @@ script_). These instructions show you how to create these scripts.\nSome additional notes:\n- - Make sure to add `DEFAULT CHARSET latin1` to all MySQL `CREATE TABLE`\n+ - Make sure to add `DEFAULT CHARSET=latin1` to all MySQL `CREATE TABLE`\nstatements.\n+ - It is recommended that you name all constraints and indexes. This makes it\n+ easier to change or drop them in the future. The naming convention is to\n+ use a prefix of `FK_` or `UNIQ_` or `IDX_` that indicates the type of\n+ constraint, then the table name, then the names of the columns or related\n+ entity or some short description of the constraint. For example, if you\n+ create a FOREIGN KEY on table CHILD of column PARENT_ID you would name it\n+ `FK_CHILD_PARENT_ID`.\n5. Next, you'll create a MariaDB migration script. The migration script should\nhave been created in the previous step, but if necessary you can run\n@@ -55,8 +68,9 @@ script_). These instructions show you how to create these scripts.\nCopy the contents of the migration script that are relevant to the Entity\nclasses changes that you made into the respective migration schema scripts in\n`../release-migration-scripts/next/DeltaScripts/`. All statements should have\n- `IF NOT EXISTS` added so that they can be reapplied and only change the\n- schema when it hasn't already been updated. For example:\n+ `IF NOT EXISTS` (if adding) or `IF EXISTS` (if dropping) added so that they\n+ can be reapplied and only change the schema when it hasn't already been\n+ updated. For example:\n- `CREATE TABLE IF NOT EXISTS ...`\n- `DROP TABLE IF EXISTS ...`\n@@ -67,6 +81,8 @@ script_). These instructions show you how to create these scripts.\n- `ALTER TABLE <table name> ADD KEY IF NOT EXISTS <key definition>`\n- `ALTER TABLE <table name> DROP KEY IF EXISTS <index name>`\n+ See also the **additional notes** under the previous step.\n+\n6. Next, you'll also copy this MariaDB migration script to the corresponding\n`0*-migrations.sql` file in ide-integration. Here it should also have\n`IF NOT EXISTS`/`IF EXISTS` added. Essentially you just need to take the\n",
        "lang": "Java",
        "codet5-history": "Add additional notes to the migration script\n* Add additional notes to the migration script\nAdd"
    },
    {
        "msg": "QuicVersion::MVFST client default.\nSummary: Move the default forward.",
        "diff": "diff --git a/quic/client/state/ClientStateMachine.h b/quic/client/state/ClientStateMachine.h @@ -63,7 +63,7 @@ struct QuicClientConnectionState : public QuicConnectionStateBase {\n// TODO: this is wrong, it should be the handshake finish time. But i need\n// a relatively sane time now to make the timestamps all sane.\nconnectionTime = Clock::now();\n- originalVersion = QuicVersion::MVFST_D24;\n+ originalVersion = QuicVersion::MVFST;\nDCHECK(handshakeFactory);\nauto tmpClientHandshake = handshakeFactory->makeClientHandshake(this);\nclientHandshakeLayer = tmpClientHandshake.get();\n",
        "lang": "C++",
        "codet5-history": "Fix version in diff"
    },
    {
        "msg": "Adding AMP jetstream vm ip address for gateway deployment",
        "diff": "diff --git a/dev-tools/ansible/inventories/scigap/develop/hosts b/dev-tools/ansible/inventories/scigap/develop/hosts @@ -42,5 +42,5 @@ distantr ansible_host=149.165.156.46\n[kafka]\n149.165.157.37\n-[Django Dev AMP Gateway]\n-amp ansible_host=149.165.169.129\n+#Django Dev AMP Gateway\n+amp ansible_host=149.165.169.129 ansible_user=centos\n",
        "lang": "Java",
        "codet5-history": "Update AMP Gateway diff"
    },
    {
        "msg": "Add furthest_distance_to",
        "diff": "diff --git a/sc2/units.py b/sc2/units.py @@ -103,6 +103,13 @@ class Units(list):\nposition = position.position\nreturn min({unit.position.to2.distance_to(position.to2) for unit in self})\n+ def furthest_distance_to(self, position: Union[Unit, Point2, Point3]) -> Union[int, float]:\n+ \"\"\" Returns the distance between the furthest unit from this group to the target unit \"\"\"\n+ assert self.exists\n+ if isinstance(position, Unit):\n+ position = position.position\n+ return max({unit.position.to2.distance_to(position.to2) for unit in self})\n+\ndef closest_to(self, position: Union[Unit, Point2, Point3]) -> Unit:\nassert self.exists\nif isinstance(position, Unit):\n@@ -110,7 +117,6 @@ class Units(list):\nreturn min(self, key=lambda unit: unit.position.to2.distance_to(position.to2))\ndef furthest_to(self, position: Union[Unit, Point2, Point3]) -> Unit:\n- \"\"\" Returns the distance between the furthest unit from this group to the target unit \"\"\"\nassert self.exists\nif isinstance(position, Unit):\nposition = position.position\n",
        "lang": "Python",
        "codet5-history": "Add furthest_distance_to to units"
    },
    {
        "msg": "streaming_level.LoadedLevel returned None\nTested it in a production scene and some times, streaming_level.LoadedLevel was returning None causing a crash erroring",
        "diff": "diff --git a/examples/get_uobjects_in_loaded_levels.py b/examples/get_uobjects_in_loaded_levels.py @@ -11,6 +11,7 @@ for world in ue.all_worlds():\nlevel_packages.append(world.PersistentLevel.get_outermost())\nfor streaming_level in world.StreamingLevels:\n+ if streaming_level.LoadedLevel is not None:\nlevels.append(streaming_level.LoadedLevel)\nlevel_packages.append(streaming_level.LoadedLevel.get_outermost())\n",
        "lang": "C++",
        "codet5-history": "Fix get_uobjects_in_loaded_levels.py example"
    },
    {
        "msg": "Support synchronous handshake writes in ServerHandshakeTest.\nSummary:\nPreviously we would only write the data to the client after an asynchronous\nevent.",
        "diff": "diff --git a/quic/server/handshake/test/ServerHandshakeTest.cpp b/quic/server/handshake/test/ServerHandshakeTest.cpp @@ -124,9 +124,21 @@ class ServerHandshakeTest : public Test {\ninitialize();\nhandshake->accept(params);\n- EXPECT_CALL(serverCallback, onCryptoEventAvailable())\n- .WillRepeatedly(Invoke([&]() {\n+ ON_CALL(serverCallback, onCryptoEventAvailable())\n+ .WillByDefault(Invoke([this]() {\nVLOG(1) << \"onCryptoEventAvailable\";\n+ processCryptoEvents();\n+ }));\n+ auto cachedPsk = clientCtx->getPsk(hostname);\n+ fizzClient->connect(\n+ clientCtx,\n+ verifier,\n+ hostname,\n+ cachedPsk,\n+ std::make_shared<FizzClientExtensions>(clientExtensions));\n+ }\n+\n+ void processCryptoEvents() {\ntry {\nsetHandshakeState();\nwaitForData = false;\n@@ -146,18 +158,10 @@ class ServerHandshakeTest : public Test {\nVLOG(1) << \"server exception \" << e.what();\nex = std::make_exception_ptr(e);\n}\n- if (!inRoundScope_) {\n+ if (!inRoundScope_ && !handshakeCv.ready()) {\nVLOG(1) << \"Posting handshake cv\";\nhandshakeCv.post();\n}\n- }));\n- auto cachedPsk = clientCtx->getPsk(hostname);\n- fizzClient->connect(\n- clientCtx,\n- verifier,\n- hostname,\n- cachedPsk,\n- std::make_shared<FizzClientExtensions>(clientExtensions));\n}\nvoid clientServerRound() {\n@@ -174,7 +178,7 @@ class ServerHandshakeTest : public Test {\nhandshake->doHandshake(std::move(content.data), encryptionLevel);\n}\n}\n- setHandshakeState();\n+ processCryptoEvents();\n} catch (const QuicTransportException&) {\nex = std::current_exception();\n}\n@@ -500,6 +504,7 @@ TEST_F(ServerHandshakeWriteNSTTest, TestWriteNST) {\nreturn std::make_pair(folly::IOBuf::copyBuffer(\"appToken\"), 100s);\n}));\nhandshake->writeNewSessionTicket(appToken);\n+ processCryptoEvents();\nevb.loop();\nEXPECT_TRUE(cache_->getPsk(kTestHostname.str()));\n}\n",
        "lang": "C++",
        "codet5-history": "Fix race condition in ServerHandshakeTest.cpp"
    },
    {
        "msg": "Test if test completes without chat",
        "diff": "diff --git a/test/autotest_bot.py b/test/autotest_bot.py @@ -27,9 +27,9 @@ class TestBot(sc2.BotAI):\nasync def on_step(self, iteration):\nif iteration == 0:\nawait self.chat_send(\"(glhf)\")\n- if iteration == 1:\n+ #if iteration == 1:\n# Test if chat message was sent correctly\n- assert len(self.state.chat) >= 1, self.state.chat\n+ # assert len(self.state.chat) >= 1, self.state.chat\n# Tests at start:\nif iteration == 5:\n",
        "lang": "Python",
        "codet5-history": "Comment out chat message test"
    },
    {
        "msg": "Update rasa_core_sdk/__init__.py",
        "diff": "diff --git a/rasa_core_sdk/__init__.py b/rasa_core_sdk/__init__.py @@ -190,7 +190,7 @@ class ActionExecutionRejection(Exception):\ndef __init__(self, action_name, message=None):\nself.action_name = action_name\nself.message = (message or\n- \"Custom action '{}' rejected to run\"\n+ \"Custom action '{}' rejected execution of\"\n\"\".format(action_name))\ndef __str__(self):\n",
        "lang": "Python",
        "codet5-history": "Fix typo in ActionExecutionRejection message"
    },
    {
        "msg": "temporary test",
        "diff": "diff --git a/makefile b/makefile @@ -44,11 +44,11 @@ CC = g++\n#NOTICE: -O2 is recommended, while -O3(add loop-unroll and inline-function) is dangerous\n#when developing, not use -O because it will disturb the normal\n#routine. use it for test and release.\n-CFLAGS = -c -Wall -O2 -pthread -std=c++11\n-EXEFLAG = -O2 -pthread -std=c++11\n+#CFLAGS = -c -Wall -O2 -pthread -std=c++11\n+#XEFLAG = -O2 -pthread -std=c++11\n#-coverage\n-#CFLAGS = -c -Wall -pthread -g -std=c++11\n-#EXEFLAG = -pthread -g -std=c++11\n+CFLAGS = -c -Wall -pthread -g -std=c++11\n+EXEFLAG = -pthread -g -std=c++11\n#add -lreadline [-ltermcap] if using readline or objs contain readline\nlibrary = -lreadline -L./lib -L/usr/local/lib -lantlr -lgcov -lboost_filesystem -lboost_system -lboost_regex -lpthread -I/usr/local/include/boost -lcurl\n",
        "lang": "C++",
        "codet5-history": "Fix build with -O2"
    }
]