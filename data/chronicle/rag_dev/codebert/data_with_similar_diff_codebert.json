[
    {
        "sim_msg": "Fixes from pymongo: NotImplementedError: Collection objects do not implement truth value testing or bool(). Please compare with None instead: collection is not None",
        "sim_diff": "diff --git a/fedn/fedn/common/tracer/mongotracer.py b/fedn/fedn/common/tracer/mongotracer.py @@ -37,7 +37,7 @@ class MongoTracer(Tracer):\nprint(\"LOG: \\n {} \\n\".format(data), flush=True)\n- if self.status:\n+ if self.status!=None:\nself.status.insert_one(data)\ndef drop_round_time(self):\n",
        "org_diff": "diff --git a/fkie_node_manager/src/fkie_node_manager/editor/editor.py b/fkie_node_manager/src/fkie_node_manager/editor/editor.py @@ -168,6 +168,7 @@ class Editor(QMainWindow):\nfor f in filenames:\nif f:\nself.on_load_request(f, search_text, only_launch=True)\n+ self.log_dock.setVisible(False)\n# def __del__(self):\n# print \"******** destroy\", self.objectName()\n"
    },
    {
        "sim_msg": "Set better zoom level for PCNs\nThese will be smaller than CCGs in practice.",
        "sim_diff": "diff --git a/openprescribing/media/js/src/measures.js b/openprescribing/media/js/src/measures.js @@ -140,15 +140,12 @@ var measures = {\nsetUpMap: function(options) {\nvar _this = this;\nif ($('#' + _this.el.mapPanel).length) {\n+ var maxZoom = _this.zoomLevelForOrgType(options.orgType);\nvar map = L.mapbox.map(\n_this.el.mapPanel,\n'mapbox.streets',\n- {zoomControl: false}).setView([52.905, -1.79], 6);\n+ {zoomControl: false}).setView([52.905, -1.79], maxZoom);\nmap.scrollWheelZoom.disable();\n- var maxZoom = 5;\n- if (options.orgType === 'practice') {\n- maxZoom = 12;\n- }\nvar layer = L.mapbox.featureLayer()\n.loadURL(options['orgLocationUrl'])\n.on('ready', function() {\n@@ -167,6 +164,17 @@ var measures = {\n}\n},\n+ zoomLevelForOrgType: function(orgType) {\n+ switch(orgType) {\n+ case 'practice':\n+ return 12;\n+ case 'pcn':\n+ return 7;\n+ default:\n+ return 5;\n+ }\n+ },\n+\nsetUpSortGraphs: function() {\nvar _this = this;\nvar chartsByPercentile = $(_this.el.chart);\n",
        "org_diff": "diff --git a/src/components/FilterCollapse.js b/src/components/FilterCollapse.js @@ -284,7 +284,7 @@ class FilterCollapse extends Component {\n}\ncomponentDidUpdate(prevProps, prevState) {\n- if (prevProps.filter === this.props.filter) {\n+ if (prevProps.filter !== this.props.filter) {\nQuery.set('f', this.state.filterInput);\n}\n}\n"
    },
    {
        "sim_msg": "Improvements to stuttering and hanging of manual drive mode",
        "sim_diff": "diff --git a/runtime/manual/driver.js b/runtime/manual/driver.js @@ -5,8 +5,9 @@ var util = require('util');\nvar events = require('events')\nvar Q = require('q');\n-var T_RENEW = 250;\n-var SAFETY_FACTOR = 1.75;\n+//var T_RENEW = 300;\n+var T_RENEW = 300;\n+var SAFETY_FACTOR = 4.0;\nvar count;\nvar RENEW_SEGMENTS = 10;\nvar FIXED_MOVES_QUEUE_SIZE = 3;\n@@ -49,7 +50,8 @@ ManualDriver.prototype.enter = function() {\nthis.stream.write('M100.1 ({xjm:'+jerkXY+'})\\n');\nthis.stream.write('M100.1 ({yjm:'+jerkXY+'})\\n');\nthis.stream.write('M100.1 ({zjm:'+jerkZ+'})\\n');\n- this.stream.write('M100.1 ({zl:0})\\nM0\\n G4 P0.1\\n');\n+ //this.stream.write('M100.1 ({zl:0})\\nM0\\n G4 P0.1\\n');\n+ this.stream.write('M100.1 ({zl:0})\\nM0\\n G91\\n G0 X0 Y0 Z0\\n');\nthis.driver.prime();\nthis.deferred = Q.defer();\nreturn this.deferred.promise;\n@@ -122,10 +124,10 @@ ManualDriver.prototype.stopMotion = function() {\n}\nthis.omg_stop = true\nthis.stop_pending = true;\n- this.driver.feedHold();\n- this.driver.queueFlush(function() {\n- this.driver.resume();\n- }.bind(this));\n+ //this.driver.feedHold();\n+ //this.driver.queueFlush(function() {\n+ // this.driver.resume();\n+ //}.bind(this));\n}\nManualDriver.prototype.quitMove = function(){\n@@ -246,17 +248,17 @@ ManualDriver.prototype._renewMoves = function(reason) {\nvar moves = []\nif (this.second_axis){\nfor(var i=0; i<RENEW_SEGMENTS; i++) {\n- var move = 'G1 ' + this.currentAxis + segment.toFixed(5) +' '+ this.second_axis + second_segment.toFixed(5) +'\\n'\n+ var move = 'G1' + this.currentAxis + segment.toFixed(4) + this.second_axis + second_segment.toFixed(4) + '\\n'\nmoves.push(move);\n}\n} else {\nfor(var i=0; i<RENEW_SEGMENTS; i++) {\n- var move = 'G1 ' + this.currentAxis + segment.toFixed(5) + '\\n'\n+ var move = 'G1' + this.currentAxis + segment.toFixed(4)+'\\n'\nmoves.push(move);\n}\n}\n- this.stream.write(moves.join('\\n'));\n+ this.stream.write(moves.join(''));\nthis.driver.prime();\nthis.renew_timer = setTimeout(function() {\nthis._renewMoves(\"timeout\")\n",
        "org_diff": "diff --git a/src/dashboard/src/pages/Operator/Node/index.js b/src/dashboard/src/pages/Operator/Node/index.js @@ -14,7 +14,8 @@ import {\nForm,\nInput,\nSelect,\n- InputNumber\n+ InputNumber,\n+ Badge\n} from 'antd';\nimport { DownOutlined, PlusOutlined } from '@ant-design/icons';\nimport moment from 'moment';\n@@ -546,9 +547,6 @@ class Index extends PureComponent {\ncase 'stopped':\nstatusOfBadge = 'warning';\nbreak;\n- case 'error':\n- statusOfBadge = 'error';\n- break;\ndefault:\nbreak;\n}\n@@ -568,6 +566,8 @@ class Index extends PureComponent {\n</a>\n</Menu.Item>\n)}\n+ {\n+ record.status === 'stopped' &&\n<Menu.Item>\n<a onClick={() => this.operationForNode('start', record)}>\n{intl.formatMessage({\n@@ -576,6 +576,9 @@ class Index extends PureComponent {\n})}\n</a>\n</Menu.Item>\n+ }\n+ {\n+ record.status === 'running' &&\n<Menu.Item>\n<a onClick={() => this.operationForNode('stop', record)}>\n{intl.formatMessage({\n@@ -584,6 +587,9 @@ class Index extends PureComponent {\n})}\n</a>\n</Menu.Item>\n+ }\n+ {\n+ record.status === 'stopped' &&\n<Menu.Item>\n<a onClick={() => this.operationForNode('restart', record)}>\n{intl.formatMessage({\n@@ -592,6 +598,7 @@ class Index extends PureComponent {\n})}\n</a>\n</Menu.Item>\n+ }\n</Menu>\n);\n@@ -630,6 +637,14 @@ class Index extends PureComponent {\ndataIndex: 'created_at',\nrender: text => <span>{moment(text).format('YYYY-MM-DD HH:mm:ss')}</span>,\n},\n+ {\n+ title: intl.formatMessage({\n+ id: 'app.operator.node.table.header.status',\n+ defaultMessage: 'Status',\n+ }),\n+ dataIndex: 'status',\n+ render: text => <Badge status={badgeStatus(text)} text={text} />,\n+ },\n{\ntitle: intl.formatMessage({\nid: 'form.table.header.operation',\n"
    },
    {
        "sim_msg": "typo fixed from tf.logging.into to tf.logging.info",
        "sim_diff": "diff --git a/tensor2tensor/utils/get_rouge.py b/tensor2tensor/utils/get_rouge.py @@ -46,7 +46,7 @@ def prep_data(decode_dir, target_dir):\nwrite_to_file(os.path.join(decode_dir, \"rouge.%06d.txt\" % (i+1)), d)\nwrite_to_file(os.path.join(target_dir, \"rouge.A.%06d.txt\" % (i+1)), t)\nif (i+1 % 1000) == 0:\n- tf.logging.into(\"Written %d examples to file\" % i)\n+ tf.logging.info(\"Written %d examples to file\" % i)\ndef main(_):\n",
        "org_diff": "diff --git a/fkie_node_manager_daemon/src/fkie_node_manager_daemon/launcher.py b/fkie_node_manager_daemon/src/fkie_node_manager_daemon/launcher.py @@ -332,7 +332,7 @@ def _load_parameters(masteruri, params, clear_params):\nfor pkey, pval in params.items():\nvalue = pval\n# resolve path elements\n- if isinstance(value, types.StringTypes) and (value.startswith('$') or value.startswith('pkg://') or value.startswith('package://')):\n+ if isinstance(value, types.StringTypes) and (value.startswith('$') or value.startswith('pkg://')):\nvalue = interpret_path(value)\nrospy.logdebug(\"interpret parameter '%s' to '%s'\" % (value, pval))\n# add parameter to the multicall\n"
    },
    {
        "sim_msg": "siteprofile_update map changed to osm + leaflet.js",
        "sim_diff": "diff --git a/templates/workflow/siteprofile_form.html b/templates/workflow/siteprofile_form.html </div>\n</div>\n-\n-\n{% if form.errors %}\n<div class=\"help-block\">\n{% for field in form %}\n</div>\n</div>\n+<script>\n+ document.getElementById('div_id_map').setAttribute(\"style\",\"height:500px\");\n+\n+ let map = L.map('div_id_map').setView([-1.2921, 36.8219], 13);\n+ let my_divicon = L.divIcon({\n+ className: 'arrow_box'\n+ });\n+ let marker = L.marker([-1.2921, 36.8219], {\n+ draggable:true\n+ });\n+\n+ L.tileLayer(\n+ 'https://cartodb-basemaps-{s}.global.ssl.fastly.net/light_all/{z}/{x}/{y}.png', {\n+ 'attribution': 'Map tiles by Carto, under CC BY 3.0. Data by OpenStreetMap, under ODbL.'\n+ }\n+ ).addTo(map);\n+\n+ function addToTextBox(lt,ln){\n+ document.getElementById('id_latitude').value = (lt).toFixed(7);\n+ document.getElementById('id_longitude').value = (ln).toFixed(7);\n+ }\n+\n+ // adds listener for drag end event\n+ marker.on('dragend', function(event){\n+ let marker = event.target;\n+ let location = marker.getLatLng();\n+ let lat = location.lat;\n+ let lon = location.lng;\n+ addToTextBox(lat,lon);\n+ });\n+\n+ marker.addTo(map);\n+</script>\n+\n{% endblock content %}\n",
        "org_diff": "diff --git a/routes/cube_routes.js b/routes/cube_routes.js @@ -2109,19 +2109,16 @@ router.get(\nrouter.post(\n'/api/saveshowtagcolors',\n+ ensureAuth,\n+ body('show_tag_colors').toBoolean(),\n+ jsonValidationErrors,\nutil.wrapAsyncApi(async (req, res) => {\n- if (req.user) {\nreq.user.hide_tag_colors = !req.body.show_tag_colors;\nawait req.user.save();\nreturn res.status(200).send({\nsuccess: 'true',\n});\n- }\n-\n- return res.status(401).send({\n- success: 'false',\n- });\n}),\n);\n"
    },
    {
        "sim_msg": "simplify patterns",
        "sim_diff": "diff --git a/src/genie/libs/parser/junos/show_ospf3.py b/src/genie/libs/parser/junos/show_ospf3.py @@ -578,7 +578,7 @@ class ShowOspf3InterfaceExtensive(ShowOspf3InterfaceExtensiveSchema):\nret_dict = {}\n# ge-0/0/0.0 PtToPt 0.0.0.8 0.0.0.0 0.0.0.0 1\n- p1 = re.compile(r'^(?P<interface_name>\\S+)( +)(?P<ospf_interface_state>\\S+)( +)(?P<ospf_area>[0-9]{1,3}(\\.[0-9]{1,3}){3})( +)(?P<dr_id>[0-9]{1,3}(\\.[0-9]{1,3}){3})( +)(?P<bdr_id>[0-9]{1,3}(\\.[0-9]{1,3}){3})( +)(?P<neighbor_count>\\d+)$')\n+ p1 = re.compile(r'^(?P<interface_name>\\S+)( +)(?P<ospf_interface_state>\\S+)( +)(?P<ospf_area>[\\d\\.]+)( +)(?P<dr_id>[\\d\\.]+)( +)(?P<bdr_id>[\\d\\.]+)( +)(?P<neighbor_count>\\d+)$')\n# Address fe80::250:56ff:fe8d:c829, Prefix-length 64\np2 = re.compile(r'Address( +)(?P<interface_address>\\S+),( +)Prefix-length( +)(?P<prefix_length>\\d+)')\n",
        "org_diff": "diff --git a/src/components/Comment.js b/src/components/Comment.js @@ -121,7 +121,7 @@ class Comment extends React.Component {\nreturn (\n<div className='mb-1'>\n<div className={'comment border mt-1 px-2' + (this.state.highlighted ? ' comment-highlighted': '')}>\n- <a href={'/user/view/'+comment.owner}><img className=\"profile-thumbnail mt-2 mr-2\" src={comment.image} title={\"Art by \" + comment.artist}/></a>\n+ {true ? '' : <a href={'/user/view/'+comment.owner}><img className=\"profile-thumbnail mt-2 mr-2\" src={comment.image} title={\"Art by \" + comment.artist}/></a>}\n<div className=\"form-group mb-1\">\n{comment.ownerName ? <a href={'/user/view/'+comment.owner}><small>{comment.ownerName}</small></a> : <a><small>Anonymous</small></a>}\n{comment.timePosted && (comment.updated ? <em><small> - Updated <AgeText date={comment.timePosted}/></small></em> : <a><small> - <AgeText date={comment.timePosted}/></small></a>)}\n"
    },
    {
        "sim_msg": "add test for cr lf in input and enhance odd quotes tests",
        "sim_diff": "diff --git a/test/nodes/core/parsers/70-CSV_spec.js b/test/nodes/core/parsers/70-CSV_spec.js @@ -232,7 +232,7 @@ describe('CSV node', function() {\n});\n});\n- it('should recover from an odd number of quotes in the input', function(done) {\n+ it('should handle cr and lf in the input', function(done) {\nvar flow = [ { id:\"n1\", type:\"csv\", temp:\"a,b,c,d,e,f,g\", wires:[[\"n2\"]] },\n{id:\"n2\", type:\"helper\"} ];\nhelper.load(csvNode, flow, function() {\n@@ -240,13 +240,63 @@ describe('CSV node', function() {\nvar n2 = helper.getNode(\"n2\");\nn2.on(\"input\", function(msg) {\n//console.log(msg);\n- msg.should.have.property('payload', { a: \"with,an\", b: \"odd,number\", c: \"ofquotes\" });\n- //msg.should.have.property('payload', { a: 1, b: -2, c: '+3', d: 4, e: -5, f: 'ab\"cd', g: 'with,a,comma' });\n+ msg.should.have.property('payload', { a: \"with a\\nnew line\", b: \"and a\\rcarriage return\", c: \"and why\\r\\nnot both\"});\n+ check_parts(msg, 0, 1);\n+ done();\n+ });\n+ var testString = '\"with a'+String.fromCharCode(10)+'new line\",\"and a'+String.fromCharCode(13)+'carriage return\",\"and why\\r\\nnot both\"'+String.fromCharCode(10);\n+ n1.emit(\"input\", {payload:testString});\n+ });\n+ });\n+\n+ it('should recover from an odd number of quotes in the input', function(done) {\n+ var flow = [ { id:\"n1\", type:\"csv\", temp:\"a,b,c,d,e,f,g\", wires:[[\"n2\"]] },\n+ {id:\"n2\", type:\"helper\"} ];\n+ helper.load(csvNode, flow, function() {\n+ var n1 = helper.getNode(\"n1\");\n+ var n2 = helper.getNode(\"n2\");\n+ var c = 0;\n+ n2.on(\"input\", function(msg) {\n+ if (c == 0) {\n+ c = 1;\n+ msg.should.have.property('payload', { a: \"with,an\", b: \"odd,number\", c: \"ofquotes\\n\" });\n+ check_parts(msg, 0, 1);\n+ }\n+ else {\n+ msg.should.have.property('payload', { a: \"this is\", b: \"a normal\", c: \"line\" });\ncheck_parts(msg, 0, 1);\ndone();\n+ }\n});\nvar testString = '\"with,a\"n,odd\",\"num\"ber\",\"of\"qu\"ot\"es\"'+String.fromCharCode(10);\nn1.emit(\"input\", {payload:testString});\n+ n1.emit(\"input\", {payload:'\"this is\",\"a normal\",\"line\"'});\n+ });\n+ });\n+\n+ it('should recover from an odd number of quotes in the input (2)', function(done) {\n+ var flow = [ { id:\"n1\", type:\"csv\", temp:\"a,b,c,d,e,f,g\", wires:[[\"n2\"]] },\n+ {id:\"n2\", type:\"helper\"} ];\n+ helper.load(csvNode, flow, function() {\n+ var n1 = helper.getNode(\"n1\");\n+ var n2 = helper.getNode(\"n2\");\n+ var c = 0;\n+ n2.on(\"input\", function(msg) {\n+ //console.log(msg)\n+ if (c == 0) {\n+ c = 1;\n+ msg.should.have.property('payload', { a: \"with,an\", b: \"odd,number\", c: \"ofquotes\\nthis is,a normal,line\" });\n+ check_parts(msg, 0, 1);\n+ }\n+ else {\n+ msg.should.have.property('payload', { a: \"this is\", b: \"another\", c: \"line\" });\n+ check_parts(msg, 0, 1);\n+ done();\n+ }\n+ });\n+ var testString = '\"with,a\"n,odd\",\"num\"ber\",\"of\"qu\"ot\"es\"'+String.fromCharCode(10)+'\"this is\",\"a normal\",\"line\"'+String.fromCharCode(10);\n+ n1.emit(\"input\", {payload:testString});\n+ n1.emit(\"input\", {payload:'\"this is\",\"another\",\"line\"'});\n});\n});\n",
        "org_diff": "diff --git a/serverjs/cards.js b/serverjs/cards.js @@ -35,7 +35,7 @@ function getPlaceholderCard(_id) {\nparsed_cost: [],\ncolorcategory: 'c',\nerror: true\n- }\n+ };\n}\nfunction cardFromId(id) {\n@@ -58,7 +58,6 @@ function getCardDetails(card) {\nreturn getPlaceholderCard(id);\n};\n}\n-}\nfunction loadJSONFile(filename, attribute) {\nreturn new Promise((resolve, reject) => {\n@@ -111,5 +110,6 @@ data.normalizedName = card => card.name.toLowerCase().normalize(\"NFD\").replace(/\ndata.allIds = card => data.nameToId[data.normalizedName(card)];\ndata.initializeCardDb = initializeCardDb;\ndata.loadJSONFile = loadJSONFile;\n+data.getPlaceholderCard = getPlaceholderCard;\nmodule.exports = data;\n\\ No newline at end of file\n"
    },
    {
        "sim_msg": "fix(style): heatmap",
        "sim_diff": "diff --git a/frappe/public/less/form.less b/frappe/public/less/form.less .heatmap {\ndisplay: flex;\njustify-content: center;\n+\n+ // excessive whitespace around the chart\n+ .chart-container {\n+ margin: 0px;\n+ }\n+\n+ // don't show the less..more legend\n+ .chart-legend {\n+ display: none;\n+ }\n}\n@media (max-width: @screen-sm) {\n",
        "org_diff": "diff --git a/public/css/stylesheet.css b/public/css/stylesheet.css }\n}\n+/* make autocard text more obvious in comments and descriptions */\n+.card-text .autocard {\n+ font-weight: bolder;\n+ opacity: 0.9; /* hack to lighten the color so bold isn't quite so strong */\n+}\n+\n.form-check {\nborder: none;\n}\n"
    },
    {
        "sim_msg": "Add readVectorUBC model",
        "sim_diff": "diff --git a/SimPEG/EM/Static/SP/Utils.py b/SimPEG/EM/Static/SP/Utils.py @@ -153,3 +153,37 @@ def writeVectorUBC(mesh, fileName, model):\nif ii == 2:\nmodelMatTR[:, ii] *= -1\nnp.savetxt(fileName, modelMatTR)\n+\n+\n+def readVectorUBC(mesh, fileName):\n+ \"\"\"Read UBC 3DVector model and generate 3D Vector mesh model\n+\n+ Input:\n+ :param string fileName: path to the UBC GIF mesh file to read\n+\n+ Output:\n+ :rtype: numpy.ndarray\n+ :return: model with TensorMesh ordered x3 nC\n+ \"\"\"\n+ model = np.loadtxt(fileName)\n+ # Fist line is the size of the model\n+ # model = np.array(model.ravel()[0].split(), dtype=float)\n+\n+ vx = np.reshape(model[:, 0], (mesh.nCz, mesh.nCx, mesh.nCy), order='F')\n+ vx = vx[::-1, :, :]\n+ vx = np.transpose(vx, (1, 2, 0))\n+ vx = mkvc(vx)\n+\n+ vy = np.reshape(model[:, 1], (mesh.nCz, mesh.nCx, mesh.nCy), order='F')\n+ vy = vy[::-1, :, :]\n+ vy = np.transpose(vy, (1, 2, 0))\n+ vy = mkvc(vy)\n+\n+ vz = np.reshape(model[:, 2], (mesh.nCz, mesh.nCx, mesh.nCy), order='F')\n+ vz = vz[::-1, :, :]\n+ vz = np.transpose(vz, (1, 2, 0))\n+ vz = mkvc(vz)\n+\n+ # Flip z to positive up from MeshTools3D to SimPEG\n+ model = np.r_[vx, vy, -vz]\n+ return model\n",
        "org_diff": "diff --git a/test/test_bot.py b/test/test_bot.py @@ -20,7 +20,7 @@ class TestBot(sc2.BotAI):\ndef __init__(self):\n# Tests related\nself.game_time_timeout_limit = 2*60\n- self.tests_target = 7\n+ self.tests_target = 8\nself.tests_done_by_name = set()\n# Variables handled by tests\n@@ -64,6 +64,11 @@ class TestBot(sc2.BotAI):\nawait self.test_botai_actions4()\nawait self.test_botai_actions4_successful()\n+ elif \"test_botai_actions5_successful\" not in self.tests_done_by_name:\n+ if iteration >= 6:\n+ await self.test_botai_actions5()\n+ await self.test_botai_actions5_successful()\n+\n# End when all tests successful\n@@ -123,8 +128,22 @@ class TestBot(sc2.BotAI):\ncombined_actions.append(scv.move(center))\nawait self.do_actions(combined_actions)\n- # Test BotAI action: move all SCVs to mine minerals near townhall\n+ # Test BotAI action: move some scvs to the center, some to minerals\nasync def test_botai_actions3(self):\n+ combined_actions = []\n+ center = self._game_info.map_center\n+ scvs = self.workers\n+ scvs1 = scvs[:6]\n+ scvs2 = scvs[6:]\n+ for scv in scvs1:\n+ combined_actions.append(scv.move(center))\n+ mf = self.state.mineral_field.closest_to(self.townhalls.random)\n+ for scv in scvs2:\n+ combined_actions.append(scv.gather(mf))\n+ await self.do_actions(combined_actions)\n+\n+ # Test BotAI action: move all SCVs to mine minerals near townhall\n+ async def test_botai_actions4(self):\ncombined_actions = []\nmf = self.state.mineral_field.closest_to(self.townhalls.random)\nfor scv in self.units(UnitTypeId.SCV):\n@@ -132,7 +151,7 @@ class TestBot(sc2.BotAI):\nawait self.do_actions(combined_actions)\n# Test BotAI action: self.expand_now()\n- async def test_botai_actions4(self):\n+ async def test_botai_actions5(self):\nif self.can_afford(UnitTypeId.COMMANDCENTER) and not self.already_pending(UnitTypeId.COMMANDCENTER, all_units=True):\nawait self.expand_now()\n@@ -147,13 +166,18 @@ class TestBot(sc2.BotAI):\nself.tests_done_by_name.add(\"test_botai_actions2_successful\")\nasync def test_botai_actions3_successful(self):\n- if self.units.gathering.amount >= 12:\n+ if self.units.filter(lambda x: x.is_moving).amount >= 6:\n+ if self.units.gathering.amount >= 6:\nself.tests_done_by_name.add(\"test_botai_actions3_successful\")\nasync def test_botai_actions4_successful(self):\n- if self.units(UnitTypeId.COMMANDCENTER).amount >= 2:\n+ if self.units.gathering.amount >= 12:\nself.tests_done_by_name.add(\"test_botai_actions4_successful\")\n+ async def test_botai_actions5_successful(self):\n+ if self.units(UnitTypeId.COMMANDCENTER).amount >= 2:\n+ self.tests_done_by_name.add(\"test_botai_actions5_successful\")\n+\n# Test self.state variables\n"
    },
    {
        "sim_msg": "Update README to include environments for benchmarking\nAdds documentation for environments used in benchmarking,\nincluding off-policy/on policy, meta-RL and multitask-RL algorithms\non pixel environments/non-pixel environments.",
        "sim_diff": "diff --git a/tests/benchmarks/README.md b/tests/benchmarks/README.md @@ -5,6 +5,56 @@ We have an automated system that will run any benchmark file named \"test_benchma\nThe results are displayed [here](https://rlworkgroup.github.io/benchmarks/)\n+# Environments\n+| Algorithm | Observation | Action | Environment Set |\n+| --- | --- | --- | --- |\n+| On-policy | Pixel | Discrete | *PIXEL_ENV_SET |\n+| Off-policy | Pixel | Discrete | Atari1M |\n+| Meta-RL | Non-Pixel | Discrete | *ML_ENV_SET |\n+| MultiTask-RL | Non-Pixel | Discrete | *MT_ENV_SET |\n+| ALL | Non-Pixel | Discrete | *NON_PIXEL_ENV_SET |\n+| ALL | Non-Pixel | Continuous | MuJoCo1M |\n+\n+```\n+PIXEL_ENV_SET: [\n+ 'MemorizeDigits-v0',\n+ 'CubeCrash-v0',\n+ ^'Acrobot-v1',\n+ ^'MountainCar-v0',\n+ ^'CartPole-v1',\n+ ^'LunarLander-v2'\n+]\n+```\n+^ Using the wrappers [PixelObservationWrapper](https://github.com/openai/gym/blob/master/gym/wrappers/pixel_observation.py) and [FrameStack](https://github.com/openai/gym/blob/master/gym/wrappers/frame_stack.py) (n=4)\n+```\n+ML_ENV_SET: [\n+ 'ML1-push-v1',\n+ 'ML1-reach-v1',\n+ 'ML1-pick-place-v1',\n+ 'ML10',\n+ 'ML45'\n+]\n+```\n+```\n+MT_ENV_SET: [\n+ 'ML1-push-v1',\n+ 'ML1-reach-v1',\n+ 'ML1-pick-place-v1',\n+ 'MT10',\n+ 'MT50'\n+]\n+```\n+See (Meta-Wrold)[https://github.com/rlworkgroup/metaworld] for ML1/ML10/ML45/MT10/MT50.\n+```\n+STATE_ENV_SET: [\n+ 'LunarLander-v2',\n+ 'CartPole-v1',\n+ 'Assault-ramDeterministic-v4',\n+ 'Breakout-ramDeterministic-v4',\n+ 'ChopperCommand-ramDeterministic-v4',\n+ 'Tutankham-ramDeterministic-v4'\n+]\n+```\n# Directions\nFollow these directions to output your benchmark results as a json compatible with the display.\n```python\n",
        "org_diff": "diff --git a/src/utils/Sort.js b/src/utils/Sort.js @@ -262,22 +262,7 @@ function getLabelsRaw(cube, sort) {\nreturn ['White', 'Blue', 'Black', 'Red', 'Green', 'Colorless'];\n}\nif (sort === 'Type') {\n- return [\n- 'Creature',\n- 'Planeswalker',\n- 'Instant',\n- 'Sorcery',\n- 'Artifact',\n- 'Enchantment',\n- 'Conspiracy',\n- 'Contraption',\n- 'Phenomenon',\n- 'Plane',\n- 'Scheme',\n- 'Vanguard',\n- 'Land',\n- 'Other',\n- ];\n+ return CARD_TYPES.concat(['Other']);\n}\nif (sort === 'Supertype') {\nreturn ['Snow', 'Legendary', 'Tribal', 'Basic', 'Elite', 'Host', 'Ongoing', 'World'];\n@@ -352,48 +337,11 @@ function getLabelsRaw(cube, sort) {\nreturn [...types];\n}\nif (sort === 'Types-Multicolor') {\n- return [\n- 'Creature',\n- 'Planeswalker',\n- 'Instant',\n- 'Sorcery',\n- 'Artifact',\n- 'Enchantment',\n- 'Conspiracy',\n- 'Contraption',\n- 'Phenomenon',\n- 'Plane',\n- 'Scheme',\n- 'Vanguard',\n- 'Azorius',\n- 'Dimir',\n- 'Rakdos',\n- 'Gruul',\n- 'Selesnya',\n- 'Orzhov',\n- 'Golgari',\n- 'Simic',\n- 'Izzet',\n- 'Boros',\n- 'Bant',\n- 'Esper',\n- 'Grixis',\n- 'Jund',\n- 'Naya',\n- 'Abzan',\n- 'Jeskai',\n- 'Sultai',\n- 'Mardu',\n- 'Temur',\n- 'Non-White',\n- 'Non-Blue',\n- 'Non-Black',\n- 'Non-Red',\n- 'Non-Green',\n- 'Five Color',\n- 'Land',\n- 'Other',\n- ];\n+ return CARD_TYPES.slice(0, -1)\n+ .concat(GUILDS)\n+ .concat(SHARDS_AND_WEDGES)\n+ .concat(FOUR_AND_FIVE_COLOR)\n+ .concat(['Land', 'Other']);\n}\nif (sort === 'Legality') {\nreturn ['Standard', 'Modern', 'Legacy', 'Vintage', 'Pioneer', 'Brawl', 'Historic', 'Pauper', 'Penny', 'Commander'];\n"
    },
    {
        "sim_msg": "avoid trying to call scene.clear more than once per mousemove\n... that is move scene.clear() out of trace-type loop",
        "sim_diff": "diff --git a/src/plots/polar/polar.js b/src/plots/polar/polar.js @@ -988,18 +988,17 @@ proto.updateRadialDrag = function(fullLayout, polarLayout) {\n_this.xaxis.setScale();\n_this.yaxis.setScale();\n- for(var k in _this.traceHash) {\n- var moduleCalcData = _this.traceHash[k];\n+ if(_this._scene) _this._scene.clear();\n+\n+ for(var traceType in _this.traceHash) {\n+ var moduleCalcData = _this.traceHash[traceType];\nvar moduleCalcDataVisible = Lib.filterVisible(moduleCalcData);\nvar _module = moduleCalcData[0][0].trace._module;\nvar polarLayoutNow = gd._fullLayout[_this.id];\n- var isGL = Registry.traceIs(k, 'gl');\n-\n- if(isGL && _this._scene) _this._scene.clear();\n_module.plot(gd, _this, moduleCalcDataVisible, polarLayoutNow);\n- if(!isGL) {\n+ if(!Registry.traceIs(traceType, 'gl')) {\nfor(var i = 0; i < moduleCalcDataVisible.length; i++) {\n_module.style(gd, moduleCalcDataVisible[i]);\n}\n@@ -1134,12 +1133,13 @@ proto.updateAngularDrag = function(fullLayout, polarLayout) {\nscatterTraces.call(Drawing.hideOutsideRangePoints, _this);\n}\n- for(var k in _this.traceHash) {\n- if(Registry.traceIs(k, 'gl')) {\n- var moduleCalcData = _this.traceHash[k];\n+ if(_this._scene) _this._scene.clear();\n+\n+ for(var traceType in _this.traceHash) {\n+ if(Registry.traceIs(traceType, 'gl')) {\n+ var moduleCalcData = _this.traceHash[traceType];\nvar moduleCalcDataVisible = Lib.filterVisible(moduleCalcData);\nvar _module = moduleCalcData[0][0].trace._module;\n- if(_this._scene) _this._scene.clear();\n_module.plot(gd, _this, moduleCalcDataVisible, polarLayoutNow);\n}\n}\n",
        "org_diff": "diff --git a/serverjs/updatecards.js b/serverjs/updatecards.js @@ -131,7 +131,7 @@ const specialCaseCards = {\n'Westvale Abbey': ['94ed2eca-1579-411d-af6f-c7359c65de30'],\n};\n-function getTokensForCard(card) {\n+function getScryfallTokensForCard(card) {\nconst allParts = card.all_parts || [];\nreturn allParts\n.filter((element) => element.component === 'token' || element.type_line.startsWith('Emblem'))\n@@ -167,10 +167,9 @@ function arraySetEqual(target, candidate) {\nreturn isValid;\n}\n-function addTokens(card) {\n+function getTokens(card, catalogCard) {\nconst mentionedTokens = [];\n- const catalogCard = catalog.dict[card.id];\n- const recordedTokens = getTokensForCard(card);\n+ const recordedTokens = getScryfallTokensForCard(card);\nconst specialTokens = getTokensForSpecialCaseCard(card);\nif (specialTokens.length > 0) {\nmentionedTokens.push(...recordedTokens);\n@@ -233,7 +232,7 @@ function addTokens(card) {\n// populate\ncontinue; // eslint-disable-line no-continue\n- const cardTokens = getTokensForCard(card);\n+ const cardTokens = getScryfallTokensForCard(card);\nif (cardTokens.length > 0) {\nmentionedTokens.push(...cardTokens);\n@@ -359,9 +358,7 @@ function addTokens(card) {\n}\n}\n- if (mentionedTokens.length > 0) {\n- catalogCard.tokens = mentionedTokens.filter((id) => id !== card.id);\n- }\n+ return mentionedTokens;\n}\nfunction convertCmc(card, isExtra) {\n@@ -583,6 +580,11 @@ function convertCard(card, isExtra) {\nnewcard.colorcategory = newcard.color_identity[0].toLowerCase();\n}\n+ const tokens = getTokens(card, newcard);\n+ if (tokens.length > 0) {\n+ newcard.tokens = tokens;\n+ }\n+\nreturn newcard;\n}\n@@ -637,7 +639,6 @@ function saveEnglishCard(card) {\naddCardToCatalog(convertCard(card, true), true);\n}\naddCardToCatalog(convertCard(card));\n- addTokens(card);\n}\nasync function saveAllCards(basePath = 'private', defaultPath = null, allPath = null) {\n@@ -691,4 +692,5 @@ module.exports = {\nconvertColors,\nconvertParsedCost,\nconvertCmc,\n+ getTokens,\n};\n"
    },
    {
        "sim_msg": "Fix main-js test not working",
        "sim_diff": "diff --git a/cypress/integration/main-js.spec.js b/cypress/integration/main-js.spec.js @@ -31,7 +31,7 @@ describe('index.js (assets/scripts/main.js)', () => {\ncy.get('#dropdown .dropdown-toggle').should('contain', '$');\ncy.get('#dropdown .dropdown-toggle')\n.parent()\n- .get('.dropdown-menu .dropdown-item:nth-child(2)')\n+ .get('.currency-menu .dropdown-item:nth-child(2)')\n.click();\ncy.get('#dropdown .dropdown-toggle')\n.parent()\n",
        "org_diff": "diff --git a/views/cube/cube_playtest.pug b/views/cube/cube_playtest.pug @@ -75,6 +75,6 @@ block cube_content\ninput#customDraftHiddenId(type='hidden', name='id')\ninput.btn.btn-success(type='submit',value='Save')\nbutton.btn.btn-secondary(type='button', data-dismiss='modal') Close\n- script(src='/js/packcraft.js')\ninclude ../react\nscript(src='/js/cube_playtest.bundle.js')\n+ script(src='/js/packcraft.js')\n"
    },
    {
        "sim_msg": "fix(simulator): adds `node` to sim command to comply with Windows",
        "sim_diff": "diff --git a/src/lib/modules/blockchain_process/simulator.js b/src/lib/modules/blockchain_process/simulator.js @@ -75,7 +75,8 @@ class Simulator {\nconst programName = 'ganache-cli';\nconst program = ganache;\nconsole.log(`running: ${programName} ${cmds.join(' ')}`);\n- shelljs.exec(`${program} ${cmds.join(' ')}`, {async : true});\n+\n+ shelljs.exec(`node ${program} ${cmds.join(' ')}`, {async : true});\nif(useProxy){\nlet ipcObject = new Ipc({ipcRole: 'client'});\n",
        "org_diff": "diff --git a/app.js b/app.js @@ -102,11 +102,11 @@ app.get('/', function(req, res)\nif(req.user) user_id = req.user._id;\nCube.find({\n'card_count':{$gt : 200},\n- $or:[ {'isListed':true}, {'owner':user_id} ]\n+ $or:[ {'isListed':true},{'isListed':null}, {'owner':user_id} ]\n}).sort({'date_updated': -1}).limit(12).exec(function(err, recents)\n{\nCube.find({\n- $or:[ {'isListed':true}, {'owner':user_id} ]\n+ $or:[ {'isListed':true},{'isListed':null}, {'owner':user_id} ]\n}).sort({'numDecks': -1}).limit(12).exec(function(err, drafted)\n{\nBlog.find({dev:'true'}).sort({'date': -1}).exec(function(err, blog)\n"
    },
    {
        "sim_msg": "Fix for Python 2\nThis is needed to get pipenv to work on Python 2 hosts (current version on PyPI is broken). Adds the base class of `FileNotFoundError` and adds the default argument of `None` to the `utime` call.",
        "sim_diff": "diff --git a/pipenv/utils.py b/pipenv/utils.py @@ -1060,7 +1060,7 @@ def touch_update_stamp():\nmkdir_p(PIPENV_CACHE_DIR)\np = os.sep.join((PIPENV_CACHE_DIR, '.pipenv_update_check'))\ntry:\n- os.utime(p)\n- except FileNotFoundError:\n+ os.utime(p, None)\n+ except OSError:\nwith open(p, 'w') as fh:\nfh.write('')\n",
        "org_diff": "diff --git a/fkie_node_manager_daemon/src/fkie_node_manager_daemon/screen.py b/fkie_node_manager_daemon/src/fkie_node_manager_daemon/screen.py @@ -197,6 +197,10 @@ def get_ros_logfile(node):\nelse:\n# search in latest subfolder\nlogpath = os.path.join(LOG_PATH, \"latest\")\n+ if not os.path.exists(logpath):\n+ logpath = LOG_PATH\n+ if not os.path.exists(logpath):\n+ return ''\np = re.compile(r\"%s-\\d*.log\" % (node.strip('/').replace('/', '-')))\nfiles = os.listdir(logpath)\nfor fn in files:\n"
    },
    {
        "sim_msg": "Fix incorrect placement of the plot function in plot_ROC",
        "sim_diff": "diff --git a/pysteps/verification/plots.py b/pysteps/verification/plots.py @@ -167,8 +167,9 @@ def plot_ROC(ROC, ax=None, opt_prob_thr=False):\nax.set_ylabel(\"Probability of detection (POD)\")\nax.grid(True, ls=':')\n+ ax.plot(POFD, POD, \"kD-\")\n+\nif opt_prob_thr:\n- l, = ax.plot(POFD, POD, \"kD-\")\nopt_prob_thr_idx = np.argmax(np.array(POD) - np.array(POFD))\nax.scatter([POFD[opt_prob_thr_idx]], [POD[opt_prob_thr_idx]], c='r', s=150,\nfacecolors=None, edgecolors='r')\n",
        "org_diff": "diff --git a/fkie_node_manager/src/fkie_node_manager/main_window.py b/fkie_node_manager/src/fkie_node_manager/main_window.py @@ -2090,7 +2090,11 @@ class MainWindow(QMainWindow):\nnm.nmd().settings.get_config_threaded(nmd_uri)\ndef _nmd_yaml_cfg(self, data, nmdurl):\n+ params = {}\n+ try:\nparams = ruamel.yaml.load(data, Loader=ruamel.yaml.Loader)\n+ except Exception as err:\n+ rospy.logwarn(\"Error while parse daemon configuration: %s\" % utf8(err))\ndia = ParameterDialog(params, store_geometry=\"nmd_cfg_dialog\")\ndia.setWindowTitle('Daemon Configuration')\ndia.setFocusField('load_warn_level')\n"
    },
    {
        "sim_msg": "Added Join Messages",
        "sim_diff": "diff --git a/static/js/chat.js b/static/js/chat.js @@ -222,8 +222,6 @@ function room_pres_handler(a, b, c) {\nvar presenceType = presenceStatement.attributes.type.value;\n} else {\nvar presenceType = 'online';\n- msg = Strophe.getResourceFromJid(from) + \" joined the room.\";\n- serverMessage(msg);\n}\n// Handle Public Presence Notifications\n@@ -238,18 +236,10 @@ function room_pres_handler(a, b, c) {\n} else {\nmsg = Strophe.getResourceFromJid(from) + \" has left the room.\";\n}\n-\n- var tempNode = document.querySelector(\"div[data-type='chatmessagetemplate']\").cloneNode(true);\n- tempNode.querySelector(\"span.chatTimestamp\").textContent = messageTimestamp;\n- tempNode.querySelector(\"span.chatUsername\").innerHTML = '<span class=\"user\">' + msgfrom + '</span>';\n- tempNode.querySelector(\"span.chatMessage\").innerHTML = format_msg(msg);\n- tempNode.style.display = \"block\";\n- chatDiv = document.getElementById(\"chat\");\n- var needsScroll = checkChatScroll()\n- chatDiv.appendChild(tempNode);\n- if (needsScroll) {\n- scrollChatWindow();\n- }\n+ serverMessage(msg);\n+ } else if (presenceType == 'online') {\n+ msg = Strophe.getResourceFromJid(from) + \" joined the room.\";\n+ serverMessage(msg);\n}\n// Check if is own status change (Kicks/Bans/Etc)\n@@ -305,6 +295,7 @@ function room_pres_handler(a, b, c) {\nreturn true;\n}\n+// Function for Showing Messages as Server to Client\nfunction serverMessage(msg) {\nvar msgfrom = \"SERVER\";\nvar messageTimestamp = moment().format('hh:mm A');\n",
        "org_diff": "diff --git a/serverjs/cards.js b/serverjs/cards.js @@ -54,8 +54,8 @@ function getCardDetails(card) {\ndetails.display_image = util.getCardImageURL(card);\nreturn details;\n} else {\n- console.log(\"Could not find: \" + id);\n- return getPlaceholderCard(id);\n+ console.log(\"Could not find: \" + card.cardID);\n+ return getPlaceholderCard(card.cardID);\n};\n}\n"
    },
    {
        "sim_msg": "refactor: IP requests enable sni by default",
        "sim_diff": "diff --git a/lib/tunnel.js b/lib/tunnel.js @@ -48,7 +48,6 @@ function tunnelProxy(server, proxy) {\nrules.resolveRulesFile(req, function() {\nvar filter = req.filter;\nvar disable = req.disable;\n- var useSNI = !disable.sni && (req.enable.sni || filter.sni || SNI_UA_RE.test(req.headers['user-agent']));\nvar isDisabeIntercept = function() {\nreturn isICloundCKDB || useTunnelPolicy || disable.intercept || disable.https || disable.capture;\n};\n@@ -74,6 +73,8 @@ function tunnelProxy(server, proxy) {\nreturn reqSocket.destroy();\n}\nif (isIntercept()) {\n+ var useSNI = !disable.sni && (req.enable.sni || filter.sni\n+ || SNI_UA_RE.test(req.headers['user-agent']) || net.isIP(hostname));\nreqSocket.rulesHeaders = req.rulesHeaders;\ndispatch(reqSocket, useSNI ? null : hostname, function(_resSocket) {\nresSocket = _resSocket;\n",
        "org_diff": "diff --git a/serverjs/cubefn.js b/serverjs/cubefn.js @@ -106,7 +106,7 @@ function setCubeType(cube, carddb) {\nlet peasant = false;\nlet type = FORMATS.length - 1;\nfor (const card of cube.cards) {\n- if (pauper && !['legal', 'banned'].includes(carddb.cardFromId(card.cardID).legalities.Pauper)) {\n+ if (pauper && !cardIsLegal(carddb.cardFromId(card.cardID), 'Pauper')) {\npauper = false;\npeasant = true;\n}\n"
    },
    {
        "sim_msg": "refactor: load plugins from nvm path",
        "sim_diff": "diff --git a/lib/plugins/module-paths.js b/lib/plugins/module-paths.js @@ -54,6 +54,14 @@ if (config.debugMode) {\naddDebugPlugins(paths);\n}\n+var nvmBin = env.NVM_BIN;\n+if (nvmBin && typeof nvmBin === 'string') {\n+ nvmBin = formatPath(path.join(nvmBin, '../lib'));\n+ if (paths.indexOf(nvmBin) == -1) {\n+ paths.push(nvmBin);\n+ }\n+}\n+\nif (appDataDir && paths.indexOf(appDataDir) == -1) {\npaths.push(appDataDir);\n}\n",
        "org_diff": "diff --git a/serverjs/updatecards.js b/serverjs/updatecards.js @@ -466,10 +466,6 @@ function convertParsedCost(card, isExtra = false) {\nreturn [];\n}\n- if (!card.mana_cost) {\n- return [''];\n- }\n-\nlet parsedCost = [];\nif (typeof card.card_faces === 'undefined' || card.layout === 'flip') {\nparsedCost = card.mana_cost\n@@ -484,7 +480,7 @@ function convertParsedCost(card, isExtra = false) {\n.toLowerCase()\n.split('}{')\n.reverse();\n- } else if (card.card_faces[0].colors) {\n+ } else if (Array.isArray(card.card_faces) && card.card_faces[0].colors) {\nparsedCost = card.card_faces[0].mana_cost\n.substr(1, card.card_faces[0].mana_cost.length - 2)\n.toLowerCase()\n"
    },
    {
        "sim_msg": "fix ipfs service check",
        "sim_diff": "diff --git a/lib/modules/ipfs/index.js b/lib/modules/ipfs/index.js @@ -52,7 +52,7 @@ class IPFS {\nthis.addCheck('IPFS', function (cb) {\nself.logger.trace(\"Checking IPFS version...\");\n- utils.httpGetJson('http://' + this.host + ':' + this.port + '/api/v0/version', function (err, body) {\n+ utils.httpGetJson('http://' + self.host + ':' + self.port + '/api/v0/version', function (err, body) {\nif (err) {\nself.logger.trace(\"Check IPFS version error: \" + err);\nreturn cb({name: \"IPFS \", status: 'off'});\n",
        "org_diff": "diff --git a/routes/cube_routes.js b/routes/cube_routes.js @@ -2520,11 +2520,9 @@ router.delete('/remove/:id', ensureAuth, function(req, res) {\nres.redirect('/' + req.params.id);\n}\n- let query = {\n- _id: req.params.id\n- };\n+ let query = build_id_query(req.params.id)\n- Cube.findOne(build_id_query(req.params.id), function(err, cube) {\n+ Cube.findOne(query, function(err, cube) {\nif (err || !cube || (cube.owner != req.user._id)) {\nreq.flash('danger', 'Cube not found');\nres.redirect('/404/');\n"
    },
    {
        "sim_msg": "fix: Allow amending canceled docs even if they have workflow enabled",
        "sim_diff": "diff --git a/frappe/public/js/frappe/form/toolbar.js b/frappe/public/js/frappe/form/toolbar.js @@ -314,14 +314,16 @@ frappe.ui.form.Toolbar = Class.extend({\nvar p = this.frm.perm[0];\nvar has_workflow = this.has_workflow();\n- if(has_workflow) {\n+ if (docstatus === 2 && p[AMEND]) {\n+ this.page.set_secondary_action(__('Amend'), function () {\n+ me.frm.amend_doc();\n+ }, 'fa fa-pencil', true);\n+ } else if (has_workflow) {\nreturn;\n- } else if(docstatus==1 && p[CANCEL]) {\n+ } else if (docstatus === 1 && p[CANCEL]) {\nthis.page.set_secondary_action(__('Cancel'), function () {\n- me.frm.savecancel(this) }, 'fa fa-ban-circle');\n- } else if(docstatus==2 && p[AMEND]) {\n- this.page.set_secondary_action(__('Amend'), function() {\n- me.frm.amend_doc() }, 'fa fa-pencil', true);\n+ me.frm.savecancel(this);\n+ }, 'fa fa-ban-circle');\n}\n},\nadd_update_button_on_dirty: function() {\n",
        "org_diff": "diff --git a/src/components/FilterCollapse.js b/src/components/FilterCollapse.js @@ -259,6 +259,7 @@ class FilterCollapse extends Component {\nsuper(props);\nthis.state = {\n+ loading: false,\nadvancedOpen: false,\nfilterInput: this.props.defaultFilterText || '',\n...fromEntries(allFields.map((n) => [n, ''])),\n@@ -277,7 +278,13 @@ class FilterCollapse extends Component {\n}\ncomponentDidMount() {\n- this.updateFilters();\n+ const defaultFilter = Query.get('f', '');\n+ this.setState({ filterInput: defaultFilter });\n+ this.updateFilters(defaultFilter);\n+ }\n+\n+ componentDidUpdate() {\n+ Query.set('f', this.state.filterInput);\n}\ntoggleAdvanced() {\n@@ -286,7 +293,7 @@ class FilterCollapse extends Component {\n});\n}\n- applyAdvanced() {\n+ async applyAdvanced() {\n// Advanced Filter change. Render to filter input.\nconst tokens = [];\nfor (const name of allFields) {\n@@ -316,10 +323,10 @@ class FilterCollapse extends Component {\nadvancedOpen: false,\nfilterInput,\n});\n- this.updateFilters(filterInput);\n+ await this.updateFilters(filterInput);\n}\n- updateFilters(overrideFilter) {\n+ async updateFilters(overrideFilter) {\nconst filterInput = typeof overrideFilter === 'undefined' ? this.state.filterInput : overrideFilter;\nif (filterInput === '') {\nthis.props.setFilter([], '');\n@@ -333,8 +340,9 @@ class FilterCollapse extends Component {\nif (tokens.length > 0) {\nconst filters = [Filter.parseTokens(tokens)];\n// TODO: Copy to advanced filter boxes.\n- this.props.setFilter(filters, filterInput);\n- Query.set('f', filterInput);\n+ this.setState({ loading: true });\n+ await this.props.setFilter(filters, filterInput);\n+ this.setState({ loading: false });\n}\n}\n@@ -348,15 +356,15 @@ class FilterCollapse extends Component {\n});\n}\n- handleApply(event) {\n+ async handleApply(event) {\nevent.preventDefault();\n- this.updateFilters();\n+ await this.updateFilters();\n}\n- handleKeyDown(event) {\n+ async handleKeyDown(event) {\nif (event.keyCode === 13 /* ENTER */) {\nevent.preventDefault();\n- this.updateFilters();\n+ await this.updateFilters();\n}\n}\n@@ -368,7 +376,7 @@ class FilterCollapse extends Component {\nrender() {\nconst { filter, setFilter, numCards, numShown, useQuery, defaultFilterText, ...props } = this.props;\n- const { filterInput, advancedOpen } = this.state;\n+ const { loading, filterInput, advancedOpen } = this.state;\nconst tokens = [];\nconst valid = Filter.tokenizeInput(filterInput, tokens) && Filter.verifyTokens(tokens);\nconst appliedText =\n@@ -398,7 +406,7 @@ class FilterCollapse extends Component {\nonKeyDown={this.handleKeyDown}\n/>\n<InputGroupAddon addonType=\"append\">\n- <LoadingButton color=\"success\" className=\"square-left\" onClick={this.handleApply}>\n+ <LoadingButton color=\"success\" className=\"square-left\" onClick={this.handleApply} loading={loading}>\nApply\n</LoadingButton>\n</InputGroupAddon>\n"
    },
    {
        "sim_msg": "Finalized regex changes",
        "sim_diff": "diff --git a/arrow/parser.py b/arrow/parser.py @@ -32,9 +32,12 @@ class DateTimeParser(object):\n_TWO_DIGIT_RE = re.compile(r\"\\d{2}\")\n_THREE_DIGIT_RE = re.compile(r\"\\d{3}\")\n_FOUR_DIGIT_RE = re.compile(r\"\\d{4}\")\n- # TODO: +07 is not possible with colon, fix regex\n- _TZ_RE_ZZ = re.compile(r\"[+\\-]\\d{2}:(\\d{2})?|Z\")\n- _TZ_RE_Z = re.compile(r\"[+\\-]\\d{2}(\\d{2})?|Z\")\n+ # https://regex101.com/r/ifOZxu/4\n+ _TZ_RE_Z = re.compile(r\"([\\+\\-])(\\d{2})(?:(\\d{2}))?|Z\")\n+ # https://regex101.com/r/ifOZxu/5\n+ _TZ_RE_ZZ = re.compile(r\"([\\+\\-])(\\d{2})(?:\\:(\\d{2}))?|Z\")\n+ # _TZ_RE_ZZ = re.compile(r\"[\\+\\-]\\d{2}:(\\d{2})?|Z\")\n+ # _TZ_RE_Z = re.compile(r\"[\\+\\-]\\d{2}(\\d{2})?|Z\")\n_TZ_NAME_RE = re.compile(r\"\\w[\\w+\\-/]+\")\n_TIMESTAMP_RE = re.compile(r\"^\\d+\\.?\\d+$\")\n# TODO: test timestamp thoroughly\n@@ -159,7 +162,7 @@ class DateTimeParser(object):\nelse:\ndate_string, time_string = datetime_string.split(\"T\", 1)\n- time_parts = re.split(r\"[+\\-]\", time_string, 1)\n+ time_parts = re.split(r\"[\\+\\-]\", time_string, 1)\ncolon_count = time_parts[0].count(\":\")\nis_basic_time_format = colon_count == 0\n@@ -176,11 +179,12 @@ class DateTimeParser(object):\ntz_format = \"ZZ\"\n+ # TODO: use regex to determine if something is basic format\nhas_tz = len(time_parts) > 1\nhas_hours = len(time_parts[0]) == 2\nhas_minutes = colon_count == 1 or len(time_parts[0]) == 4\nhas_seconds = colon_count == 2 or len(time_parts[0]) == 6\n- has_subseconds = re.search(\"[.,]\", time_parts[0])\n+ has_subseconds = re.search(r\"[\\.,]\", time_parts[0])\nif has_subseconds:\ntime_string = \"HH:mm:ss{}S\".format(has_subseconds.group())\n@@ -255,7 +259,7 @@ class DateTimeParser(object):\n# Any number of S is the same as one.\n# TODO: allow users to specify the number of digits to parse\n- escaped_fmt = re.sub(\"S+\", \"S\", escaped_fmt)\n+ escaped_fmt = re.sub(r\"S+\", \"S\", escaped_fmt)\nescaped_data = re.findall(self._ESCAPE_RE, fmt)\n@@ -458,7 +462,8 @@ class DateTimeParser(object):\nclass TzinfoParser(object):\n# TODO: align this with the TZ_RE_Z and TZ_RE_ZZ above\n# TODO: test this REGEX\n- _TZINFO_RE = re.compile(r\"^([+\\-])?(\\d{2}):?(\\d{2})?$\")\n+ # https://regex101.com/r/ifOZxu/3\n+ _TZINFO_RE = re.compile(r\"^([\\+\\-])?(\\d{2})(?:\\:?(\\d{2}))?$\")\n@classmethod\ndef parse(cls, tzinfo_string):\n",
        "org_diff": "diff --git a/rasa_core_sdk/forms.py b/rasa_core_sdk/forms.py @@ -40,14 +40,26 @@ class FormAction(Action):\n@staticmethod\ndef from_entity(entity, intent=None):\n+ # type: (Text, Optional[Text]) -> Dict[Text: Any]\n+ \"\"\"A dictionary to map required slots to\n+ - an extracted entity\n+ \"\"\"\nreturn {\"type\": \"from_entity\", \"intent\": intent, \"entity\": entity}\n@staticmethod\ndef from_intent(intent, value):\n+ # type: (Optional[Text], Any) -> Dict[Text: Any]\n+ \"\"\"A dictionary to map required slots to\n+ - intent: value pair\n+ \"\"\"\nreturn {\"type\": \"from_intent\", \"intent\": intent, \"value\": value}\n@staticmethod\ndef from_text(intent=None):\n+ # type: (Optional[Text]) -> Dict[Text: Any]\n+ \"\"\"A dictionary to map required slots to\n+ - a whole message\n+ \"\"\"\nreturn {\"type\": \"from_text\", \"intent\": intent}\n# noinspection PyMethodMayBeStatic\n"
    },
    {
        "sim_msg": "working through adding frequency and onset by pair programming with Kent",
        "sim_diff": "diff --git a/ontobio/golr/golr_query.py b/ontobio/golr/golr_query.py @@ -1554,6 +1554,19 @@ class GolrAssociationQuery(GolrAbstractQuery):\nif M.EVIDENCE_OBJECT in d:\nassoc['evidence'] = d[M.EVIDENCE_OBJECT]\nassoc['types'] = [t for t in d[M.EVIDENCE_OBJECT] if t.startswith('ECO:')]\n+ if M.FREQUENCY in d:\n+ assoc[M.FREQUENCY] = {\n+ 'id': d[M.FREQUENCY]\n+ }\n+\n+ if M.FREQUENCY_LABEL in d:\n+ assoc[M.FREQUENCY]['label'] = d[M.FREQUENCY_LABEL]\n+\n+ if M.ONSET in d:\n+ assoc[M.ONSET] = d[M.ONSET]\n+\n+ if M.ONSET_LABEL in d:\n+ assoc[M.ONSET_LABEL] = d[M.ONSET_LABEL]\nif self._use_amigo_schema(self.object_category):\nfor f in M.AMIGO_SPECIFIC_FIELDS:\n",
        "org_diff": "diff --git a/fkie_node_manager/src/fkie_node_manager/master_view_proxy.py b/fkie_node_manager/src/fkie_node_manager/master_view_proxy.py @@ -1523,6 +1523,8 @@ class MasterViewProxy(QWidget):\nadded_diags = []\nfor diag_status in reversed(node.diagnostic_array):\nif node.diagnostic_array:\n+ level_str = 'Unknown'\n+ if diag_status.level in self.DIAGNOSTIC_LEVELS:\nlevel_str = self.DIAGNOSTIC_LEVELS[diag_status.level]\ndiag_color = '#FF6600'\nif diag_status.level == 2:\n"
    },
    {
        "sim_msg": "Plot the results even if the parameter fitting fails",
        "sim_diff": "diff --git a/pysteps/scripts/fit_vel_pert_params.py b/pysteps/scripts/fit_vel_pert_params.py @@ -40,23 +40,29 @@ for lt in leadtimes:\nstd_perp.append(np.sqrt((dp_perp_sq_sum-2*mu*dp_perp_sum+dp_perp_n*mu**2) / dp_perp_n))\n+try:\np_par = curve_fit(f, leadtimes, std_par)[0]\np_perp = curve_fit(f, leadtimes, std_perp)[0]\n-\n+ fit_succeeded = True\nprint(\"p_par = %s\" % str(p_par))\nprint(\"p_perp = %s\" % str(p_perp))\n+except RuntimeError:\n+ fit_succeeded = False\n+ print(\"Parameter fitting failed.\")\nif args.plot is not None:\npyplot.figure()\npyplot.scatter(leadtimes, std_par, c='r')\nt = np.linspace(0.5*leadtimes[0], 1.025*leadtimes[-1], 200)\n- l1, = pyplot.plot(t, f(t, *p_par), \"r-\")\npyplot.scatter(leadtimes, std_perp, c='g')\n+ if fit_succeeded:\n+ l1, = pyplot.plot(t, f(t, *p_par), \"r-\")\nl2, = pyplot.plot(t, f(t, *p_perp), \"g-\")\np_str_1 = lambda p: \"%.2f\\cdot t^{%.2f}+%.2f\" % (p[0], p[1], p[2])\np_str_2 = lambda p: \"%.2f\\cdot t^{%.2f}%.2f\" % (p[0], p[1], p[2])\n+ if fit_succeeded:\nlbl = lambda p: p_str_1(p) if p[2] > 0.0 else p_str_2(p)\npyplot.legend([l1, l2], [\"Parallel: $f(t)=%s$\" % lbl(p_par),\n\"Perpendicular: $f(t)=%s$\" % lbl(p_perp)], fontsize=12)\n",
        "org_diff": "diff --git a/fkie_node_manager/src/fkie_node_manager/parameter_dialog.py b/fkie_node_manager/src/fkie_node_manager/parameter_dialog.py @@ -1400,7 +1400,7 @@ class MasterParameterDialog(ParameterDialog):\ntype_str = 'float'\nelif isinstance(val, list) or isinstance(val, dict):\n# handle representation of `rosparam`\n- type_str = '[]'\n+ type_str = 'list'\nvalue = ''\nfor v in val:\nif len(value) > 0:\n@@ -1417,14 +1417,14 @@ class MasterParameterDialog(ParameterDialog):\nfor n in names_sep:\ngroup_name = n\nif group_name in group:\n- group = group[group_name][1]\n+ group = group[group_name]\nelse:\ntmp_dict = dict()\n- group[group_name] = {':type': 'list', ':value': tmp_dict}\n+ group[group_name] = tmp_dict\ngroup = tmp_dict\n- group[param_name] = {':type': type_str, ':value': [value]}\n+ group[param_name] = {':type': type_str, ':value': value}\nelse:\n- dia_params[param_name] = {':type': type_str, ':value': [value]}\n+ dia_params[param_name] = {':type': type_str, ':value': value}\ntry:\nself.content.createFieldFromValue(dia_params, clear_origin_value=new_param)\nself.setInfoActive(False)\n"
    },
    {
        "sim_msg": "simplify patterns",
        "sim_diff": "diff --git a/src/genie/libs/parser/junos/show_ospf3.py b/src/genie/libs/parser/junos/show_ospf3.py @@ -578,7 +578,7 @@ class ShowOspf3InterfaceExtensive(ShowOspf3InterfaceExtensiveSchema):\nret_dict = {}\n# ge-0/0/0.0 PtToPt 0.0.0.8 0.0.0.0 0.0.0.0 1\n- p1 = re.compile(r'^(?P<interface_name>\\S+)( +)(?P<ospf_interface_state>\\S+)( +)(?P<ospf_area>[0-9]{1,3}(\\.[0-9]{1,3}){3})( +)(?P<dr_id>[0-9]{1,3}(\\.[0-9]{1,3}){3})( +)(?P<bdr_id>[0-9]{1,3}(\\.[0-9]{1,3}){3})( +)(?P<neighbor_count>\\d+)$')\n+ p1 = re.compile(r'^(?P<interface_name>\\S+)( +)(?P<ospf_interface_state>\\S+)( +)(?P<ospf_area>[\\d\\.]+)( +)(?P<dr_id>[\\d\\.]+)( +)(?P<bdr_id>[\\d\\.]+)( +)(?P<neighbor_count>\\d+)$')\n# Address fe80::250:56ff:fe8d:c829, Prefix-length 64\np2 = re.compile(r'Address( +)(?P<interface_address>\\S+),( +)Prefix-length( +)(?P<prefix_length>\\d+)')\n",
        "org_diff": "diff --git a/src/components/TokenAnalysis.js b/src/components/TokenAnalysis.js @@ -7,17 +7,38 @@ import withAutocard from './WithAutocard';\nconst AutocardLink = withAutocard('a');\n+const compareCards = (x, y) => {\n+ if (x.name === y.name) {\n+ return 0;\n+ } else {\n+ return x.name < y.name ? -1 : 1;\n+ }\n+}\n+\n+const compareTokens = (x, y) => compareCards(x[0], y[0]);\n+\n+const sortTokens = tokens => [...tokens].sort(compareTokens);\n+const sortCards = cards => [...cards].sort(compareCards);\n+\n+const dedupeCards = cards => {\n+ const map = new Map();\n+ for (const card of [...cards].reverse()) {\n+ map.set(card.name, card);\n+ }\n+ return [...map.values()];\n+}\n+\nconst TokenAnalysis = ({ tokens }) =>\n<Row>\n- {tokens.map(token =>\n- <Col key={token[0]._id} xs={6} md={4} lg={3}>\n- <Card className=\"mb-2\">\n- <a href={Affiliate.getTCGLink({details:token[0]})}>\n- <img src={token[0].image_normal} className='card-img-top' />\n+ {sortTokens(tokens).map(([token, tokenCards]) =>\n+ <Col key={token._id} xs={6} md={4} lg={3}>\n+ <Card className=\"mb-3\">\n+ <a href={Affiliate.getTCGLink({ details: token })}>\n+ <img src={token.image_normal} className='card-img-top' />\n</a>\n<CardBody>\n<p className=\"card-text\">\n- {token[1].map(card =>\n+ {dedupeCards(sortCards(tokenCards)).map(card =>\n<>\n<AutocardLink\nkey={card.name}\n"
    },
    {
        "sim_msg": "Run prettier on scripts/get-changelog.js",
        "sim_diff": "diff --git a/scripts/get-changelog.js b/scripts/get-changelog.js @@ -28,7 +28,10 @@ const readFilePromise = promisify(readFile);\nconst DOMAIN = 'https://github.com/';\nconst JAEGER_REPO = process.env.JAEGER_REPO || 'jaeger-ui';\n-const URL_PARTS = [`${DOMAIN}jaegertracing/${JAEGER_REPO}/pulls?page=`, '&q=is%3Apr+is%3Amerged&utf8=%E2%9C%93'];\n+const URL_PARTS = [\n+ `${DOMAIN}jaegertracing/${JAEGER_REPO}/pulls?page=`,\n+ '&q=is%3Apr+is%3Amerged&utf8=%E2%9C%93',\n+];\nfunction getData(elm) {\nconst title = elm.querySelector('[data-hovercard-type=\"pull_request\"]').textContent;\n",
        "org_diff": "diff --git a/scripts/worker_node/setup_docker_worker_node.sh b/scripts/worker_node/setup_docker_worker_node.sh @@ -24,12 +24,13 @@ bash ./download_images.sh\necho_b \"Copy required fabric 1.0 artifacts\"\nARTIFACTS_DIR=/opt/cello\nUSER=`whoami`\n+USERGROUP=`id -gn`\necho_b \"Checking local artifacts path ${ARTIFACTS_DIR}...\"\n[ ! -d ${ARTIFACTS_DIR} ] \\\n&& echo_r \"Local artifacts path ${ARTIFACTS_DIR} not existed, creating one\" \\\n&& sudo mkdir -p ${ARTIFACTS_DIR} \\\n&& sudo cp -r ../../src/agent/docker/_compose_files/fabric-1.0 ${ARTIFACTS_DIR} \\\n- && sudo chown -R ${USER}:${USER} ${ARTIFACTS_DIR}\n+ && sudo chown -R ${USER}:${USERGROUP} ${ARTIFACTS_DIR}\necho_b \"Setup ip forward rules\"\nsudo sysctl -w net.ipv4.ip_forward=1\n"
    },
    {
        "sim_msg": "Fixes \"not()\" reported by newer flake8\nNot the one in my system",
        "sim_diff": "diff --git a/kicost/edas/tools.py b/kicost/edas/tools.py @@ -596,10 +596,10 @@ def manf_code_qtypart(subpart):\nnum_format = re.compile(r\"^\\s*[\\-\\+]?\\s*[0-9]*\\s*[\\.\\/]*\\s*?[0-9]*\\s*$\")\nstring0_test = re.match(num_format, strings[0])\nstring1_test = re.match(num_format, strings[1])\n- if string0_test and not(string1_test):\n+ if string0_test and not string1_test:\nqty = strings[0].strip()\npart = strings[1].strip()\n- elif not(string0_test) and string1_test:\n+ elif not string0_test and string1_test:\nqty = strings[1].strip()\npart = strings[0].strip()\nelif string0_test and string1_test:\n",
        "org_diff": "diff --git a/examples/competitive/__init__.py b/examples/competitive/__init__.py @@ -27,7 +27,7 @@ def run_ladder_game(bot):\nparser.add_argument(\"--ComputerRace\", type=str, nargs=\"?\", help=\"Computer race\")\nparser.add_argument(\"--ComputerDifficulty\", type=str, nargs=\"?\", help=\"Computer difficulty\")\nparser.add_argument(\"--OpponentId\", type=str, nargs=\"?\", help=\"Opponent ID\")\n- parser.add_argument(\"--RealTime\", type=bool, nargs=\"?\", const=True, default=False, help=\"Real Time\")\n+ parser.add_argument(\"--RealTime\", action=\"store_true\", help=\"Real time flag\")\nargs, unknown = parser.parse_known_args()\nif args.LadderServer == None:\n"
    },
    {
        "sim_msg": "landing page content update",
        "sim_diff": "diff --git a/components/core/WebsiteFooter.js b/components/core/WebsiteFooter.js @@ -72,7 +72,10 @@ export const WebsiteFooter = (props) => {\n<div css={STYLES_FLEX}>\n<div css={STYLES_CONTENT_BLOCK}>\n<div>Resources</div>\n- <a css={STYLES_LINK} href=\"/slate-for-chrome\">\n+ <a\n+ css={STYLES_LINK}\n+ href=\"https://chrome.google.com/webstore/detail/slate-web-extension/gloembacbehhbfbkcfjmloikeeaebnoc\"\n+ >\nSlate for Chrome\n</a>\n<br />\n@@ -97,7 +100,7 @@ export const WebsiteFooter = (props) => {\n</div>\n<div css={STYLES_HR} />\n<div css={STYLES_FLEX} style={styleFlexFull}>\n- <div>MIT License</div>\n+ <div />\n<div>\n<a css={STYLES_LINK} style={{ marginRight: `32px` }} href=\"/terms\">\nTerms of service\n",
        "org_diff": "diff --git a/src/analytics/Suggestions.js b/src/analytics/Suggestions.js @@ -79,8 +79,8 @@ const Suggestions = ({ adds, cuts, loading, cube, filter }) => {\n<Card>\n<CardHeader>\n<ListGroupItemHeading>Recommended Additions</ListGroupItemHeading>\n+ <input className=\"mr-2\" type=\"checkbox\" checked={maybeOnly} onClick={toggleMaybeOnly} />\n<Label for=\"toggleMaybeboard\">Show cards from my Maybeboard only.</Label>\n- <input type=\"checkbox\" checked={maybeOnly} onClick={toggleMaybeOnly} />\n</CardHeader>\n<ListGroup>\n{loading && (\n"
    },
    {
        "sim_msg": "Ugly hack to fix overflow error in the interpreter.\nThe longlong2float function expected signed long long input. But\njust creating the appropriate input for some floats overflows that.\nInstead, using a copy of the function using ulonglong when not\ntranslated (when translated, we use different code that works).\nFixes",
        "sim_diff": "diff --git a/pycket/prims/numeric.py b/pycket/prims/numeric.py @@ -9,7 +9,7 @@ from pycket.arity import Arity\nfrom pycket.error import SchemeException\nfrom pycket.prims.expose import expose, default, unsafe\n-from rpython.rlib import jit, longlong2float, rarithmetic, unroll\n+from rpython.rlib import jit, longlong2float, rarithmetic, unroll, objectmodel\nfrom rpython.rlib.rarithmetic import r_uint\nfrom rpython.rlib.objectmodel import always_inline, specialize\nfrom rpython.rlib.rbigint import rbigint\n@@ -521,21 +521,45 @@ def real_floating_point_bytes(n, _size, big_endian):\nchars = [chr((intval >> (i * 8)) % 256) for i in range(size)]\nreturn values.W_Bytes.from_charlist(chars)\n+\n+\n+\n+# this duplicates, slightly differently, a definition in longlong2float.py\n+# using unsigned long long fixes an overflow issue\n+# this happens only in the interpreter, so we do it only then\n+def pycket_longlong2float(llval):\n+ \"\"\" NOT_RPYTHON \"\"\"\n+ from rpython.rtyper.lltypesystem import lltype, rffi\n+ DOUBLE_ARRAY_PTR = lltype.Ptr(lltype.Array(rffi.DOUBLE))\n+ ULONGLONG_ARRAY_PTR = lltype.Ptr(lltype.Array(rffi.ULONGLONG))\n+ with lltype.scoped_alloc(DOUBLE_ARRAY_PTR.TO, 1) as d_array:\n+ ll_array = rffi.cast(ULONGLONG_ARRAY_PTR, d_array)\n+ ll_array[0] = llval\n+ floatval = d_array[0]\n+ return floatval\n+\n+\n@expose(\"floating-point-bytes->real\",\n[values.W_Bytes, default(values.W_Object, values.w_false)])\n-def integer_bytes_to_integer(bstr, signed):\n+def float_bytes_to_real(bstr, signed):\n# XXX Currently does not make use of the signed parameter\nbytes = bstr.as_bytes_list()\nif len(bytes) not in (4, 8):\nraise SchemeException(\n\"floating-point-bytes->real: byte string must have length 2, 4, or 8\")\n+ try:\n+ if objectmodel.we_are_translated():\nval = rarithmetic.r_int64(0)\nfor i, v in enumerate(bytes):\nval += rarithmetic.r_int64(ord(v)) << (i * 8)\n-\n- try:\nreturn values.W_Flonum(longlong2float.longlong2float(val))\n+ else:\n+ # use unsigned to avoid rlib bug\n+ val = rarithmetic.r_uint64(0)\n+ for i, v in enumerate(bytes):\n+ val += rarithmetic.r_uint64(ord(v)) << (i * 8)\n+ return values.W_Flonum(pycket_longlong2float(val))\nexcept OverflowError, e:\n# Uncomment the check below to run Pycket on the\n# interpreter with compiled (zo) files\n",
        "org_diff": "diff --git a/examples/threebase_voidray.py b/examples/threebase_voidray.py @@ -26,12 +26,8 @@ class ThreebaseVoidrayBot(sc2.BotAI):\nif not nexus.has_buff(BuffId.CHRONOBOOSTENERGYCOST):\nabilities = await self.get_available_abilities(nexus)\n- if AbilityId.CHRONOBOOSTENERGYCOST in abilities:\n- await self.do(nexus(AbilityId.CHRONOBOOSTENERGYCOST, nexus))\n- else:\n- await self.chat_send(\"Can't cast chrono boost\")\n- else:\n- await self.chat_send(\"Nexus is already boosted\")\n+ if AbilityId.EFFECT_CHRONOBOOSTENERGYCOST in abilities:\n+ await self.do(nexus(AbilityId.EFFECT_CHRONOBOOSTENERGYCOST, nexus))\nfor idle_worker in self.workers.idle:\nmf = self.state.mineral_field.closest_to(idle_worker)\n"
    },
    {
        "sim_msg": "Minor fixes to autoid code.",
        "sim_diff": "diff --git a/pypeit/core/wavecal/autoid.py b/pypeit/core/wavecal/autoid.py @@ -721,7 +721,7 @@ class General:\nfitc = self._all_final_fit[str(slit)]['fitc']\nxfit = xrng/(self._npix - 1)\nfitfunc = self._all_final_fit[str(slit)]['function']\n- fmin, fmax = 0.0, 1.0\n+ fmin, fmax = self._all_final_fit[str(slit)]['fmin'], self._all_final_fit[str(slit)]['fmax']\nwave_soln = utils.func_val(fitc, xfit, fitfunc, minv=fmin, maxv=fmax)\nwvc_gd_jfh[cntr] = wave_soln[self._npix//2]\ndsp_gd_jfh[cntr]= np.median(wave_soln - np.roll(wave_soln,1))\n@@ -822,7 +822,7 @@ class General:\nif bs not in self._ok_mask:\ncontinue\nif detections[str(bs)][0] is None: # No detections at all; slit is hopeless\n- msgs.warn(\"Slit {} has no arc line detections. Likely this slit is junk!\")\n+ msgs.warn('Slit {:d}'.format(bs) + ' has no arc line detections. Likely this slit is junk!')\nself._bad_slits.append(bs)\ncontinue\nbsdet, _ = self.get_use_tcent(sign, detections[str(bs)])\n",
        "org_diff": "diff --git a/node_manager_fkie/src/node_manager_fkie/network_discovery_dialog.py b/node_manager_fkie/src/node_manager_fkie/network_discovery_dialog.py @@ -87,6 +87,7 @@ class NetworkDiscoveryDialog(QDialog, threading.Thread):\nself.status_label = QLabel('0 messages', self)\nself.verticalLayout.addWidget(self.status_label)\nself.status_text_signal.connect(self.status_label.setText)\n+ self._msg_counts = dict()\nself._networks_count = networks_count\nself._running = True\n@@ -118,6 +119,9 @@ class NetworkDiscoveryDialog(QDialog, threading.Thread):\nif index not in self._discovered:\nself._discovered[index] = dict()\nself._discovered[index][address] = (hostname, time.time())\n+ if hostname not in self._msg_counts:\n+ self._msg_counts[hostname] = 0\n+ self._msg_counts[hostname] += 1\nself._received_msgs += 1\nforce_update = True\nexcept:\n@@ -130,12 +134,14 @@ class NetworkDiscoveryDialog(QDialog, threading.Thread):\nwhile (not rospy.is_shutdown()) and self._running:\nwith self.mutex:\nfor msock in self.sockets:\n+ received = True\n+ while received:\ntry:\nrecv_item = msock.receive_queue.get(False)\nself._received_msgs += 1\nself.on_heartbeat_received(recv_item.msg, recv_item.sender_addr, (recv_item.via == QueueReceiveItem.MULTICAST))\nexcept Queue.Empty:\n- pass\n+ received = False\nstatus_text = 'received messages: %d' % (self._received_msgs)\nself.status_text_signal.emit(status_text)\n# self.parent().masterlist_service.refresh(self.parent().getMasteruri(), False)\n@@ -160,7 +166,7 @@ class NetworkDiscoveryDialog(QDialog, threading.Thread):\nfor index, addr_dict in self._discovered.items():\ntext = ''.join([text, 'Network <b>', str(index), '</b>: <a href=\"', str(index), '\">join</a><dl>'])\nfor addr, (hostname, ts) in addr_dict.items():\n- text = ''.join([text, '<dt>', self._getTsStr(ts), ' <b><u>', str(hostname), '</u></b> ', str(addr), '</dt>\\n'])\n+ text = ''.join([text, '<dt>', self._getTsStr(ts), ' <b><u>', str(hostname), '</u></b> ', str(addr), ', received messages: ', str(self._msg_counts[hostname]), '</dt>\\n'])\ntext = ''.join([text, '</dl><br>'])\ntext = ''.join([text, '</div>'])\nself.display_append_signal.emit(text)\n"
    },
    {
        "sim_msg": "Remove utils for PST formulation (deprecated)",
        "sim_diff": "diff --git a/SimPEG/Utils/matutils.py b/SimPEG/Utils/matutils.py @@ -83,82 +83,6 @@ def uniqueRows(M):\nreturn unqM, unqInd, invInd\n-def xyz2local(m, param):\n- \"\"\"\n- Used to rotate from cartesian coordinate system [x, y, z] to\n- local frame along the primary field [A,Inc,Dec]\n-\n- INPUT:\n- m : nC-by-3 array for [x,y,z] components\n- param: List of parameters [A, I, D] as given by survey.SrcList.param\n- \"\"\"\n-\n- Rz = np.vstack((np.r_[np.cos(np.deg2rad(-param[2])),\n- -np.sin(np.deg2rad(-param[2])), 0],\n- np.r_[np.sin(np.deg2rad(-param[2])),\n- np.cos(np.deg2rad(-param[2])), 0],\n- np.r_[0, 0, 1]))\n-\n- Rx = np.vstack((np.r_[1, 0, 0],\n- np.r_[0, np.cos(np.deg2rad(-param[1])),\n- -np.sin(np.deg2rad(-param[1]))],\n- np.r_[0, np.sin(np.deg2rad(-param[1])),\n- np.cos(np.deg2rad(-param[1]))]))\n-\n- yvec = np.c_[0, 1, 0]\n- pvec = np.dot(Rz, np.dot(Rx, yvec.T))\n-\n- xvec = np.c_[1, 0, 0]\n- svec = np.dot(Rz, np.dot(Rx, xvec.T))\n-\n- zvec = np.c_[0, 0, 1]\n- tvec = np.dot(Rz, np.dot(Rx, zvec.T))\n-\n- m_pst = np.r_[np.dot(pvec.T, m.T),\n- np.dot(svec.T, m.T),\n- np.dot(tvec.T, m.T)].T\n-\n- return m_pst\n-\n-\n-def local2xyz(m, param):\n- \"\"\"\n- Used to rotate from local along the primary field [A,Inc,Dec]\n- to cartesian coordinate system [x, y, z].\n-\n- INPUT:\n- m : nC-by-3 array for [x,y,z] components\n- param: List of parameters [A, I, D] as given by survey.SrcList.param\n- \"\"\"\n-\n- Rz = np.vstack((np.r_[np.cos(np.deg2rad(-param[2])),\n- -np.sin(np.deg2rad(-param[2])), 0],\n- np.r_[np.sin(np.deg2rad(-param[2])),\n- np.cos(np.deg2rad(-param[2])), 0],\n- np.r_[0, 0, 1]))\n-\n- Rx = np.vstack((np.r_[1, 0, 0],\n- np.r_[0, np.cos(np.deg2rad(-param[1])),\n- -np.sin(np.deg2rad(-param[1]))],\n- np.r_[0, np.sin(np.deg2rad(-param[1])),\n- np.cos(np.deg2rad(-param[1]))]))\n-\n- yvec = np.c_[0, 1, 0]\n- pvec = np.dot(Rz, np.dot(Rx, yvec.T))\n-\n- xvec = np.c_[1, 0, 0]\n- svec = np.dot(Rz, np.dot(Rx, xvec.T))\n-\n- zvec = np.c_[0, 0, 1]\n- tvec = np.dot(Rz, np.dot(Rx, zvec.T))\n-\n- pst_mat = np.c_[pvec, svec, tvec]\n-\n- m_xyz = np.dot(m, pst_mat.T)\n-\n- return m_xyz\n-\n-\ndef xyz2spherical(m):\n\"\"\" Convert from cartesian to spherical \"\"\"\n",
        "org_diff": "diff --git a/sc2/unit.py b/sc2/unit.py @@ -282,7 +282,8 @@ class Unit(object):\n\"\"\" Does not include upgrades \"\"\"\nif hasattr(self._type_data._proto, \"weapons\"):\nweapons = self._type_data._proto.weapons\n- weapon = next((weapon for weapon in weapons if weapon.type in {TargetType.Ground.value, TargetType.Any.value}), None) if weapon:\n+ weapon = next((weapon for weapon in weapons if weapon.type in {TargetType.Ground.value, TargetType.Any.value}), None)\n+ if weapon:\nreturn (weapon.damage * weapon.attacks) / weapon.speed\nreturn 0\n@@ -291,7 +292,7 @@ class Unit(object):\n\"\"\" Does not include upgrades \"\"\"\nif hasattr(self._type_data._proto, \"weapons\"):\nweapons = self._type_data._proto.weapons\n- weapon = next((weapon for weapon in weapons if weapon.type in [TargetType.Ground.value, TargetType.Any.value]), None)\n+ weapon = next((weapon for weapon in weapons if weapon.type in {TargetType.Ground.value, TargetType.Any.value}), None)\nif weapon:\nreturn weapon.range\nreturn 0\n@@ -301,7 +302,7 @@ class Unit(object):\n\"\"\" Does not include upgrades \"\"\"\nif hasattr(self._type_data._proto, \"weapons\"):\nweapons = self._type_data._proto.weapons\n- weapon = next((weapon for weapon in weapons if weapon.type in [TargetType.Air.value, TargetType.Any.value]), None)\n+ weapon = next((weapon for weapon in weapons if weapon.type in {TargetType.Air.value, TargetType.Any.value}), None)\nreturn weapon is not None\nreturn False\n@@ -310,7 +311,7 @@ class Unit(object):\n\"\"\" Does not include upgrades \"\"\"\nif hasattr(self._type_data._proto, \"weapons\"):\nweapons = self._type_data._proto.weapons\n- weapon = next((weapon for weapon in weapons if weapon.type in [TargetType.Air.value, TargetType.Any.value]), None)\n+ weapon = next((weapon for weapon in weapons if weapon.type in {TargetType.Air.value, TargetType.Any.value}), None)\nif weapon:\nreturn (weapon.damage * weapon.attacks) / weapon.speed\nreturn 0\n@@ -320,7 +321,7 @@ class Unit(object):\n\"\"\" Does not include upgrades \"\"\"\nif hasattr(self._type_data._proto, \"weapons\"):\nweapons = self._type_data._proto.weapons\n- weapon = next((weapon for weapon in weapons if weapon.type in [TargetType.Air.value, TargetType.Any.value]), None)\n+ weapon = next((weapon for weapon in weapons if weapon.type in {TargetType.Air.value, TargetType.Any.value}), None)\nif weapon:\nreturn weapon.range\nreturn 0\n"
    },
    {
        "sim_msg": "Change CSS to display form errors",
        "sim_diff": "diff --git a/workshops/static/css/amy.css b/workshops/static/css/amy.css @@ -103,3 +103,9 @@ table .additional-links-wider {\ndisplay: inline-block;\nmargin: 0 0.5rem;\n}\n+\n+\n+/* enable showing of field errors - crispy forms and bootstrap 4 */\n+.invalid-feedback {\n+ display: block;\n+}\n",
        "org_diff": "diff --git a/public/css/editcube.css b/public/css/editcube.css .invalid-filter:focus {\ncolor: red;\n}\n+\n+#groupContextModalAreaContainer {\n+ overflow: scroll;\n+ height: 41.6em;\n+}\n"
    },
    {
        "sim_msg": "Update src/components/common/view/Avatar.js",
        "sim_diff": "diff --git a/src/components/common/view/Avatar.js b/src/components/common/view/Avatar.js @@ -30,7 +30,7 @@ const CustomAvatar = (props: AvatarProps) => (\n<Avatar.Image\nsize={props.size}\nsource={props.source ? { uri: props.source } : undefined}\n- style={[styles.avatar, { width: `${props.size}`, height: `${props.size}` }]}\n+ style={[styles.avatar, { width: props.size, height: props.size }]}\n{...props}\n/>\n{props.children}\n",
        "org_diff": "diff --git a/src/components/Markdown.js b/src/components/Markdown.js @@ -78,7 +78,7 @@ const renderCode = (node) => {\nreturn (\n<SyntaxHighlighter language={node.language || 'text'} style={style}>\n- {node.value}\n+ {node.value || ''}\n</SyntaxHighlighter>\n);\n};\n"
    },
    {
        "sim_msg": "Use same path for stored screenshots as in koe",
        "sim_diff": "diff --git a/app/index.js b/app/index.js @@ -67,7 +67,7 @@ app.post('/saveImg', (req, res) => {\nconst sessionId = req.session.id\nconst {answerId} = req.query\nconst id = String(new Date().getTime())\n- const url = `/loadImg?answerId=${req.query.answerId}&id=${id}`\n+ const url = `/screenshot?answerId=${req.query.answerId}&id=${id}`\nconst fileWriteStream = createFileWriteStream(sessionId, answerId, id + '.png')\nreq.pipe(fileWriteStream).on('finish', () => res.json({url}))\n})\n@@ -86,7 +86,7 @@ app.get('/load', (req, res) => {\nres.json(null)\n}\n})\n-app.get('/loadImg', (req, res) => {\n+app.get('/screenshot', (req, res) => {\nconst {answerId, id} = req.query\nif (isUnsafe(answerId) || isUnsafe(id)) {\nres.send(404)\n",
        "org_diff": "diff --git a/routes/cube_routes.js b/routes/cube_routes.js @@ -22,7 +22,7 @@ let Draft = require('../models/draft');\nlet CardRating = require('../models/cardrating');\n// Add Submit POST Route\n-router.post('/add',ensureAuth, function(req,res,next)\n+router.post('/add',ensureAuth, function(req,res)\n{\nif(req.body.name.length < 5)\n{\n@@ -592,7 +592,7 @@ router.get('/analysis/:id', function(req, res)\n});\n});\n-router.post('/importcubetutor/:id',ensureAuth, function(req,res,next) {\n+router.post('/importcubetutor/:id',ensureAuth, function(req,res) {\nCube.findById(req.params.id, function(err,cube)\n{\nif(err)\n@@ -733,7 +733,11 @@ router.post('/importcubetutor/:id',ensureAuth, function(req,res,next) {\n{\nmissing:missing,\nadded:JSON.stringify(added),\n- cube:cube\n+ cube:cube,\n+ user:{\n+ id:req.user._id,\n+ username:req.user.username\n+ }\n});\n}\nelse\n@@ -766,8 +770,9 @@ router.post('/importcubetutor/:id',ensureAuth, function(req,res,next) {\n});\n});\n-router.post('/bulkupload/:id',ensureAuth, function(req,res,next)\n+router.post('/bulkupload/:id',ensureAuth, function(req,res)\n{\n+ console.log(res);\nCube.findById(req.params.id, function(err,cube)\n{\nif(err)\n@@ -789,7 +794,7 @@ router.post('/bulkupload/:id',ensureAuth, function(req,res,next)\n});\n});\n-router.post('/bulkuploadfile/:id',ensureAuth, function(req,res,next)\n+router.post('/bulkuploadfile/:id',ensureAuth, function(req,res)\n{\nif(!req.files)\n{\n@@ -912,7 +917,11 @@ function bulkuploadCSV(req, res, cards, cube) {\n{\nmissing:missing,\nadded:JSON.stringify(added),\n- cube:cube\n+ cube:cube,\n+ user:{\n+ id:req.user._id,\n+ username:req.user.username\n+ }\n});\n}\nelse\n@@ -1067,7 +1076,11 @@ function bulkUpload(req, res, list, cube) {\n{\nmissing:missing,\nadded:JSON.stringify(added),\n- cube:cube\n+ cube:cube,\n+ user:{\n+ id:req.user._id,\n+ username:req.user.username\n+ }\n});\n}\nelse\n@@ -1548,7 +1561,7 @@ router.get('/draft/:id', function(req, res)\n});\n// Edit Submit POST Route\n-router.post('/editoverview/:id',ensureAuth, function(req,res,next)\n+router.post('/editoverview/:id',ensureAuth, function(req,res)\n{\nreq.body.html = cubefn.sanitize(req.body.html);\nCube.findById(req.params.id, function(err, cube)\n@@ -1607,7 +1620,7 @@ router.post('/editoverview/:id',ensureAuth, function(req,res,next)\n});\n// Edit Submit POST Route\n-router.post('/edit/:id',ensureAuth, function(req,res,next)\n+router.post('/edit/:id',ensureAuth, function(req,res)\n{\nreq.body.blog = cubefn.sanitize(req.body.blog);\nCube.findById(req.params.id, function(err, cube)\n"
    },
    {
        "sim_msg": "Hook in background dots mesh",
        "sim_diff": "diff --git a/diorama.js b/diorama.js @@ -11,6 +11,7 @@ import {NoiseBgFxMesh} from './background-fx/NoiseBgFx.js';\nimport {PoisonBgFxMesh} from './background-fx/PoisonBgFx.js';\nimport {SmokeBgFxMesh} from './background-fx/SmokeBgFx.js';\nimport {GlyphBgFxMesh} from './background-fx/GlyphBgFx.js';\n+import {DotsBgFxMesh} from './background-fx/DotsBgFx.js';\nimport {LightningBgFxMesh} from './background-fx/LightningBgFx.js';\nimport {RadialBgFxMesh} from './background-fx/RadialBgFx.js';\nimport {GrassBgFxMesh} from './background-fx/GrassBgFx.js';\n@@ -344,6 +345,7 @@ const poisonMesh = new PoisonBgFxMesh();\nconst noiseMesh = new NoiseBgFxMesh();\nconst smokeMesh = new SmokeBgFxMesh();\nconst glyphMesh = new GlyphBgFxMesh();\n+const dotsMesh = new DotsBgFxMesh();\nconst textObject = (() => {\nconst o = new THREE.Object3D();\n@@ -436,6 +438,7 @@ sideScene.add(poisonMesh);\nsideScene.add(noiseMesh);\nsideScene.add(smokeMesh);\nsideScene.add(glyphMesh);\n+sideScene.add(dotsMesh);\nsideScene.add(outlineMesh);\nsideScene.add(labelMesh);\nsideScene.add(textObject);\n@@ -491,6 +494,7 @@ const createPlayerDiorama = ({\nlightningBackground = false,\nradialBackground = false,\nglyphBackground = false,\n+ dotsBackground = false,\nautoCamera = true,\n} = {}) => {\n// _ensureSideSceneCompiled();\n@@ -550,6 +554,7 @@ const createPlayerDiorama = ({\nlightningBackground,\nradialBackground,\nglyphBackground,\n+ dotsBackground,\n};\ngrassBackground = false;\npoisonBackground = false;\n@@ -558,6 +563,7 @@ const createPlayerDiorama = ({\nlightningBackground = false;\nradialBackground = false;\nglyphBackground = false;\n+ dotsBackground = false;\nif (oldValues.grassBackground) {\npoisonBackground = true;\n} else if (oldValues.poisonBackground) {\n@@ -571,6 +577,8 @@ const createPlayerDiorama = ({\n} else if (oldValues.radialBackground) {\nglyphBackground = true;\n} else if (oldValues.glyphBackground) {\n+ dotsBackground = true;\n+ } else if (oldValues.dotsBackground) {\ngrassBackground = true;\n}\n},\n@@ -755,6 +763,15 @@ const createPlayerDiorama = ({\n}\n};\n_renderGlyph();\n+ const _renderDots = () => {\n+ if (glyphBackground) {\n+ glyphMesh.update(timeOffset, timeDiff, this.width, this.height);\n+ glyphMesh.visible = true;\n+ } else {\n+ glyphMesh.visible = false;\n+ }\n+ };\n+ _renderDots();\nconst _renderOutline = () => {\nif (outline) {\noutlineMesh.update(timeOffset, timeDiff, this.width, this.height, outlineRenderTarget.texture);\n",
        "org_diff": "diff --git a/src/components/CardModal.js b/src/components/CardModal.js @@ -15,15 +15,15 @@ import {\nRow,\n} from 'reactstrap';\n-import Affiliate from '../utils/Affiliate';\n-import { getLabels } from '../utils/Sort';\n+import Affiliate from 'utils/Affiliate';\n+import { getLabels } from 'utils/Sort';\n-import ButtonLink from './ButtonLink';\n-import { ColorChecksAddon } from './ColorCheck';\n-import LoadingButton from './LoadingButton';\n-import FoilCardImage from './FoilCardImage';\n-import TagInput from './TagInput';\n-import TextBadge from './TextBadge';\n+import ButtonLink from 'components/ButtonLink';\n+import { ColorChecksAddon } from 'components/ColorCheck';\n+import LoadingButton from 'components/LoadingButton';\n+import FoilCardImage from 'components/FoilCardImage';\n+import TagInput from 'components/TagInput';\n+import TextBadge from 'components/TextBadge';\nconst CardModal = ({\ncard,\n"
    },
    {
        "sim_msg": "listed summary functions",
        "sim_diff": "diff --git a/docs/stats.rst b/docs/stats.rst @@ -408,3 +408,63 @@ For site statistics, summary functions are applied to the total weight or number\nassociated with each allele; but if polarised, then the ancestral allele is left out of this sum.\nFor branch or node statistics, summary functions are applied to the total weight or number of samples\nbelow, and above each branch or node; if polarised, then only the weight below is used.\n+\n+.. _sec_stat_functions:\n+\n+*****************\n+Summary functions\n+*****************\n+\n+For convenience, here are the summary functions used for many of the statistics.\n+Below, :math:`x` denotes the number of samples in a sample set below a node,\n+`n` denotes the total size of a sample set,\n+and boolean expressions (e.g., :math:`(x > 0)`) are interpreted as 0/1.\n+\n+``diversity``\n+ :math:`f(x) = \\frac{x (n - x)}{n (n-1)}`\n+\n+``segregating_sites``\n+ :math:`f(x) = (x > 0) (1 - x / n)`\n+\n+ (Note: this works because if :math:`\\sum_i p_1 = 1` then :math:`\\sum_{i=1}^k (1-p_i) = k-1`.)\n+\n+``Y1``\n+ :math:`f(x) = \\frac{x (n - x) (n - x - 1)}{n (n-1) (n-2)}`\n+\n+``divergence``\n+ :math:`f(x_1, x_2) = \\frac{x_1 (n_2 - x_2)}{n_1 n_2}`,\n+\n+ unless the two indices are the same, when the diversity function is used.\n+\n+``Y2``\n+ :math:`f(x_1, x_2) = \\frac{x_1 (n_2 - x_2) (n_2 - x_2 - 1)}{n_1 n_2 (n_2 - 1)}`\n+\n+``f2``\n+ :math:`f(x_1, x_2) = \\frac{x_1 (x_1 - 1) (n_2 - x_2) (n_2 - x_2 - 1)}{n_1 (n_1 - 1) n_2 (n_2 - 1)}`\n+\n+``Y3``\n+ :math:`f(x_1, x_2, x_3) = \\frac{x_1 (n_2 - x_2) (n_3 - x_3)}{n_1 n_2 n_3}`\n+\n+``f3``\n+ :math:`f(x_1, x_2, x_3) = \\frac{x_1 (x_1 - 1) (n_2 - x_2) (n_3 - x_3)}{n_1 (n_1 - 1) n_2 n_3}`\n+\n+``f4``\n+ :math:`f(x_1, x_2, x_3, x_4) = \\frac{x_1 x_3 (n_2 - x_2) (n_4 - x_4)}{n_1 n_2 n_3 n_4}`\n+\n+``trait_covariance``\n+ :math:`f(w) = \\frac{w^2}{2 (n-1)^2}`,\n+\n+ where :math:`w` is the sum of all trait values of the samples below the node.\n+\n+``trait_correlation``\n+ :math:`f(w, x) = \\frac{w^2}{2 x (1 - x/n) (n - 1)}`,\n+\n+ where as before :math:`x` is the total number of samples below the node,\n+ and :math:`n` is the total number of samples.\n+\n+``trait_regression``\n+ :math:`f(w, z, x) = \\frac{1}{2}\\left( \\frac{w - \\sum_{j=1}^k z_j v_j}{x - \\sum_{j=1}^k z_j^2} \\right)^2`,\n+\n+ where :math:`w` and :math:`x` are as before,\n+ :math:`z_j` is the sum of the j-th normalised covariate values below the node,\n+ and :math:`v_j` is the covariance of the trait with the j-th covariate.\n",
        "org_diff": "diff --git a/__tests__/serverjs/cubefn.test.js b/__tests__/serverjs/cubefn.test.js @@ -141,16 +141,16 @@ test('generateShortId returns a valid short ID with profanity', async () => {\nconst queryMock = jest.fn().mockReturnValue(queryMockPromise);\nconst initialCubeFind = Cube.find;\nCube.find = queryMock;\n- const initialHasProfanity = util.has_profanity;\n+ const initialHasProfanity = util.hasProfanity;\nconst mockHasProfanity = jest\n.fn()\n.mockReturnValue(false)\n.mockReturnValueOnce(true);\n- util.has_profanity = mockHasProfanity;\n+ util.hasProfanity = mockHasProfanity;\nconst result = await cubefn.generateShortId();\nexpect(result).toBe('1z');\nCube.find = initialCubeFind;\n- util.has_profanity = initialHasProfanity;\n+ util.hasProfanity = initialHasProfanity;\n});\ntest('getBasics returns the expected set of basic lands', () => {\n"
    },
    {
        "sim_msg": "Fix for Python 2\nThis is needed to get pipenv to work on Python 2 hosts (current version on PyPI is broken). Adds the base class of `FileNotFoundError` and adds the default argument of `None` to the `utime` call.",
        "sim_diff": "diff --git a/pipenv/utils.py b/pipenv/utils.py @@ -1060,7 +1060,7 @@ def touch_update_stamp():\nmkdir_p(PIPENV_CACHE_DIR)\np = os.sep.join((PIPENV_CACHE_DIR, '.pipenv_update_check'))\ntry:\n- os.utime(p)\n- except FileNotFoundError:\n+ os.utime(p, None)\n+ except OSError:\nwith open(p, 'w') as fh:\nfh.write('')\n",
        "org_diff": "diff --git a/fkie_node_manager/src/fkie_node_manager/editor/text_edit.py b/fkie_node_manager/src/fkie_node_manager/editor/text_edit.py @@ -378,7 +378,8 @@ class TextEdit(QTextEdit):\n# create a new file, if it does not exists\nresult = MessageBox.question(self, \"File not exists\", '\\n\\n'.join([\"Create a new file?\", path]), buttons=MessageBox.Yes | MessageBox.No)\nif result == MessageBox.Yes:\n- nm.nmd().file.save_file(path, '<launch>\\n\\n</launch>', 0)\n+ content = '<launch>\\n\\n</launch>' if path.endswith('.launch') else ''\n+ nm.nmd().file.save_file(path, content.encode(), 0)\nevent.setAccepted(True)\nself.load_request_signal.emit(path)\nexcept Exception as e:\n"
    },
    {
        "sim_msg": "Somehow this change did not make it with PR so I put it back here",
        "sim_diff": "diff --git a/SimPEG/Directives.py b/SimPEG/Directives.py @@ -427,7 +427,13 @@ class SaveOutputEveryIteration(SaveEveryIteration):\ni_target += 1\nself.i_target = i_target\n- def plot_misfit_curves(self, fname=None, plot_small_smooth=False):\n+ def plot_misfit_curves(\n+ self, fname=None, dpi=300,\n+ plot_small_smooth=False,\n+ plot_phi_m=True,\n+ plot_small=False,\n+ plot_smooth=False\n+ ):\nself.target_misfit = self.invProb.dmisfit.prob.survey.nD / 2.\nself.i_target = None\n@@ -441,22 +447,55 @@ class SaveOutputEveryIteration(SaveEveryIteration):\nfig = plt.figure(figsize=(5, 2))\nax = plt.subplot(111)\nax_1 = ax.twinx()\n- ax.semilogy(np.arange(len(self.phi_d)), self.phi_d, 'k-', lw=2)\n- ax_1.semilogy(np.arange(len(self.phi_d)), self.phi_m, 'r', lw=2)\n- if plot_small_smooth:\n- ax_1.semilogy(np.arange(len(self.phi_d)), self.phi_m_small, 'ro')\n- ax_1.semilogy(np.arange(len(self.phi_d)), self.phi_m_smooth, 'rx')\n- ax_1.legend(\n- (\"$\\phi_m$\", \"small\", \"smooth\"), bbox_to_anchor=(1.5, 1.)\n+ ax.semilogy(\n+ np.arange(len(self.phi_d)),\n+ self.phi_d, 'k-', lw=2,\n+ label=\"$\\phi_d$\"\n+ )\n+\n+ if plot_phi_m:\n+ ax_1.semilogy(\n+ np.arange(len(self.phi_d)),\n+ self.phi_m, 'r', lw=2,\n+ label=\"$\\phi_m$\"\n+ )\n+\n+ if plot_small_smooth or plot_small:\n+ ax_1.semilogy(np.arange(\n+ len(self.phi_d)),\n+ self.phi_m_small, 'ro',\n+ label=\"small\"\n+ )\n+ if plot_small_smooth or plot_smooth:\n+ ax_1.semilogy(np.arange(\n+ len(self.phi_d)),\n+ self.phi_m_smooth_x, 'rx',\n+ label=\"smooth_x\"\n)\n+ ax_1.semilogy(np.arange(\n+ len(self.phi_d)),\n+ self.phi_m_smooth_y, 'rx',\n+ label=\"smooth_y\"\n+ )\n+ ax_1.semilogy(np.arange(\n+ len(self.phi_d)),\n+ self.phi_m_smooth_z, 'rx',\n+ label=\"smooth_z\"\n+ )\n+\n+ ax.legend(loc=1)\n+ ax_1.legend(loc=2)\n- ax.plot(np.r_[ax.get_xlim()[0], ax.get_xlim()[1]], np.ones(2)*self.target_misfit, 'k:')\n+ ax.plot(np.r_[ax.get_xlim()[0], ax.get_xlim()[1]],\n+ np.ones(2) * self.target_misfit, 'k:')\nax.set_xlabel(\"Iteration\")\nax.set_ylabel(\"$\\phi_d$\")\nax_1.set_ylabel(\"$\\phi_m$\", color='r')\n- for tl in ax_1.get_yticklabels():\n- tl.set_color('r')\n+ ax_1.tick_params(axis='y', which='both', colors='red')\n+\nplt.show()\n+ if fname is not None:\n+ fig.savefig(fname, dpi=dpi)\ndef plot_tikhonov_curves(self, fname=None, dpi=200):\n",
        "org_diff": "diff --git a/fkie_node_manager/src/fkie_node_manager/logscreen/screen_widget.py b/fkie_node_manager/src/fkie_node_manager/logscreen/screen_widget.py @@ -297,6 +297,8 @@ class ScreenWidget(QWidget):\nchars_count = self._seek_count_lines(lines)\nself._seek_start = self.qfile.pos()\ndata = self.qfile.read(chars_count)\n+ if sys.version_info > (3, 0):\n+ data = data.decode('utf-8')\nself.output.emit(data)\nself._seek_end = self.qfile.pos()\nself._first_fill = False\n@@ -306,6 +308,8 @@ class ScreenWidget(QWidget):\nif (not self._pause_read_end and self.qfile.bytesAvailable()):\nstart = self.qfile.pos()\ndata = self.qfile.readAll().data()\n+ if sys.version_info > (3, 0):\n+ data = data.decode('utf-8')\nself.output.emit(data)\nself._seek_end = self.qfile.pos()\nself._info = \"NEW: %d\" % (self._seek_end - start)\n@@ -322,6 +326,8 @@ class ScreenWidget(QWidget):\nchars_count = self._seek_count_lines(lines)\nself._seek_start = self.qfile.pos()\ndata = self.qfile.read(chars_count)\n+ if sys.version_info > (3, 0):\n+ data = data.decode('utf-8')\nself.output_prefix.emit(data)\ndef _seek_count_lines(self, lines=20):\n"
    },
    {
        "sim_msg": "simplify patterns",
        "sim_diff": "diff --git a/src/genie/libs/parser/junos/show_ospf3.py b/src/genie/libs/parser/junos/show_ospf3.py @@ -578,7 +578,7 @@ class ShowOspf3InterfaceExtensive(ShowOspf3InterfaceExtensiveSchema):\nret_dict = {}\n# ge-0/0/0.0 PtToPt 0.0.0.8 0.0.0.0 0.0.0.0 1\n- p1 = re.compile(r'^(?P<interface_name>\\S+)( +)(?P<ospf_interface_state>\\S+)( +)(?P<ospf_area>[0-9]{1,3}(\\.[0-9]{1,3}){3})( +)(?P<dr_id>[0-9]{1,3}(\\.[0-9]{1,3}){3})( +)(?P<bdr_id>[0-9]{1,3}(\\.[0-9]{1,3}){3})( +)(?P<neighbor_count>\\d+)$')\n+ p1 = re.compile(r'^(?P<interface_name>\\S+)( +)(?P<ospf_interface_state>\\S+)( +)(?P<ospf_area>[\\d\\.]+)( +)(?P<dr_id>[\\d\\.]+)( +)(?P<bdr_id>[\\d\\.]+)( +)(?P<neighbor_count>\\d+)$')\n# Address fe80::250:56ff:fe8d:c829, Prefix-length 64\np2 = re.compile(r'Address( +)(?P<interface_address>\\S+),( +)Prefix-length( +)(?P<prefix_length>\\d+)')\n",
        "org_diff": "diff --git a/__tests__/serverjs/draftutil.test.js b/__tests__/serverjs/draftutil.test.js @@ -34,7 +34,11 @@ test(\"it can get bots with the correct properties\", () => {\n});\ntest(\"it returns the index of the first instance of a tag from a list of cards\", () => {\n- const cards = [{}, {}, { tags: [\"test\"] }, { tags: [\"test\"] }];\n+ const cards = [{}, {}, {\n+ tags: [\"test\"]\n+ }, {\n+ tags: [\"test\"]\n+ }];\nconst tag = \"TEST\";\nconst result = methods.indexOfTag(cards, tag);\n@@ -50,7 +54,11 @@ test(\"it returns -1 if a tag is not found in a list of cards\", () => {\n});\ntest(\"getCardRatings returns a mapping of card names to values\", () => {\n- var dummyModel = {\"value\": 1, \"picks\": 1, \"name\": \"Giant Growth\"};\n+ var dummyModel = {\n+ \"value\": 1,\n+ \"picks\": 1,\n+ \"name\": \"Giant Growth\"\n+ };\nvar expected = {};\nexpected[dummyModel.name] = dummyModel.value;\nCardRating.find.yields(null, [dummyModel]);\n"
    },
    {
        "sim_msg": "fix lshw output parsing",
        "sim_diff": "diff --git a/wca/platforms.py b/wca/platforms.py @@ -198,17 +198,18 @@ def get_platform_static_information():\ntry:\n# nosec: B603. We deliberately use 'subprocess'. There is a permanent input.\n+ log.info('Collecting memory information from lshw...')\nlshw_raw = subprocess.check_output( # nosec\n- shlex.split('lshw -class memory -json -quiet -sanitize -notime'))\n+ shlex.split('lshw -json -quiet -sanitize -notime'))\nlshw_str = lshw_raw.decode(\"utf-8\")\n- lshw_str = lshw_str.rstrip()\n- lshw_str = '[' + lshw_str[0:(len(lshw_str) - 1)] + ']'\nlshw_data = json.loads(lshw_str)\nnvm_dimm_count = 0\nram_dimm_count = 0\nnvm_dimm_size = 0\nram_dimm_size = 0\n- for system in lshw_data:\n+ for child in lshw_data['children']:\n+ if child['id'] == 'core':\n+ for system in child['children']:\nif system['id'] == 'memory' and 'children' in system:\nfor bank in system['children']:\nif '[empty]' in bank['description']:\n@@ -221,6 +222,9 @@ def get_platform_static_information():\nassert bank['units'] == 'bytes'\nnvm_dimm_count += 1\nnvm_dimm_size += bank['size']\n+ break\n+ else:\n+ log.warning('Cannot find \"core\" child in lshw output!')\n_platform_static_information['ram_dimm_count'] = int(ram_dimm_count)\n_platform_static_information['nvm_dimm_count'] = int(nvm_dimm_count)\n@@ -228,10 +232,11 @@ def get_platform_static_information():\n_platform_static_information['nvm_dimm_size'] = int(nvm_dimm_size)\nexcept FileNotFoundError:\nlog.warning('lshw unavailable, cannot read memory topology size!')\n- except JSONDecodeError:\n+ except JSONDecodeError as e:\nlog.warning('lshw unavailable (incorrect version or missing data), '\n- 'cannot parse output, cannot read memory topology size!')\n+ 'cannot parse output, cannot read memory topology size!: %s', str(e))\n+ log.debug('platform_static_information: %s', _platform_static_information)\n_platform_static_information['initialized'] = True\nreturn _platform_static_information\n",
        "org_diff": "diff --git a/node_manager_daemon_fkie/src/node_manager_daemon_fkie/startcfg.py b/node_manager_daemon_fkie/src/node_manager_daemon_fkie/startcfg.py @@ -111,14 +111,8 @@ class StartConfig():\nif value_type == BOOL:\nreturn value.lower() in (\"yes\", \"true\", \"t\", \"1\")\nif value_type == LIST:\n- lstr = value\ntry:\n- lstr = lstr.strip('[]')\n- lstr = lstr.replace('u\"', '')\n- lstr = lstr.replace('\"', '')\n- lstr = lstr.replace(\"'\", '')\n- lstr = lstr.replace(\",\", ' ')\n- return [utf8(i).strip() for i in lstr.split(' ') if i]\n+ return eval(value)\nexcept Exception:\nreturn []\nreturn value\n"
    },
    {
        "sim_msg": "Regexes for magic for the new alphabets",
        "sim_diff": "diff --git a/src/core/operations/FromBase64.mjs b/src/core/operations/FromBase64.mjs @@ -102,6 +102,26 @@ class FromBase64 extends Operation {\nflags: \"i\",\nargs: [\"./0-9A-Za-z\", true]\n},\n+ {\n+ pattern: \"^\\\\s*(?:[A-Z=\\\\d\\\\+/]{4}){5,}(?:[A-Z=\\\\d\\\\+/]{2}CC|[A-Z=\\\\d\\\\+/]{3}C)?\\\\s*$\",\n+ flags: \"i\",\n+ args: [\"/128GhIoPQROSTeUbADfgHijKLM+n0pFWXY456xyzB7=39VaqrstJklmNuZvwcdEC\", true]\n+ },\n+ {\n+ pattern: \"^\\\\s*(?:[A-Z=\\\\d\\\\+/]{4}){5,}(?:[A-Z=\\\\d\\\\+/]{2}55|[A-Z=\\\\d\\\\+/]{3}5)?\\\\s*$\",\n+ flags: \"i\",\n+ args: [\"3GHIJKLMNOPQRSTUb=cdefghijklmnopWXYZ/12+406789VaqrstuvwxyzABCDEF5\", true]\n+ },\n+ {\n+ pattern: \"^\\\\s*(?:[A-Z=\\\\d\\\\+/]{4}){5,}(?:[A-Z=\\\\d\\\\+/]{2}22|[A-Z=\\\\d\\\\+/]{3}2)?\\\\s*$\",\n+ flags: \"i\",\n+ args: [\"ZKj9n+yf0wDVX1s/5YbdxSo=ILaUpPBCHg8uvNO4klm6iJGhQ7eFrWczAMEq3RTt2\", true]\n+ },\n+ {\n+ pattern: \"^\\\\s*(?:[A-Z=\\\\d\\\\+/]{4}){5,}(?:[A-Z=\\\\d\\\\+/]{2}55|[A-Z=\\\\d\\\\+/]{3}5)?\\\\s*$\",\n+ flags: \"i\",\n+ args: [\"HNO4klm6ij9n+J2hyf0gzA8uvwDEq3X1Q7ZKeFrWcVTts/MRGYbdxSo=ILaUpPBC5\", true]\n+ }\n];\n}\n",
        "org_diff": "diff --git a/README.md b/README.md ![Cello](docs/imgs/logo.png)\n+Blockchain as a Service!\n+\n**Note:** This is a **read-only mirror** of the formal [Gerrit](https://gerrit.hyperledger.org/r/#/admin/projects/cello) repository,\n-where active development is ongoing. Issue tracking is handled in [Jira](https://jira.hyperledger.org/secure/RapidBoard.jspa?rapidView=111)\n+where active development is ongoing. Issue tracking is handled in [Jira](https://jira.hyperledger.org/projects/CE/issues/).\n## Incubation Notice\nThis project is a Hyperledger project in _Incubation_. It was proposed to the community and documented [here](https://docs.google.com/document/d/1E2i5GRqWsIag7KTxjQ_jQdDiWcuikv3KqXeuw7NaceM/edit), and was approved by [Hyperledger TSC at 2017-01-07](https://lists.hyperledger.org/pipermail/hyperledger-tsc/2017-January/000535.html). Information on what _Incubation_ entails can be found in the [Hyperledger Project Lifecycle document](https://goo.gl/4edNRc).\n-Platform to provide Blockchain as a Service!\nUsing Cello, we can\n-* Provision customizable Blockchains instantly, e.g., a 6-node chain using PBFT consensus.\n+* Provision customizable Blockchains instantly, e.g., a 6-node fabric chain using PBFT consensus.\n* Maintain a pool of running blockchains healthy with no manual operations.\n* Check the system status, scale the chain numbers, change resources... through a dashboard.\n@@ -28,13 +29,11 @@ You can also find more [scenarios](docs/scenario.md).\n* Support heterogeneous architecture, e.g., Z, Power and X86, from bare-metal servers to virtual machines.\n* Extend with monitor/log/health features by employing additional components.\n-## Docs\n-\n-### User Docs\n-* [Dashboard](docs/dashboard.md)\n+## Documentation\n-### Operator Docs\n+### Operational Docs\n* [Installation & Deployment](docs/deployment.md)\n+* [Dashboard](docs/dashboard.md)\n* [Scenarios](docs/scenario.md)\n* [Production Configuration](docs/production_config.md)\n"
    },
    {
        "sim_msg": "flat 2d arrays before passing to autotypes",
        "sim_diff": "diff --git a/src/plots/cartesian/axis_autotype.js b/src/plots/cartesian/axis_autotype.js @@ -19,8 +19,16 @@ module.exports = function autoType(array, calendar, opts) {\nif(Lib.isArrayOrTypedArray(a) && !a.length) return '-';\nif(!opts.noMultiCategory && multiCategory(a)) return 'multicategory';\n- if(opts.noMultiCategory && Lib.isArrayOrTypedArray(a[0])) {\n- a = a.flat(); // TODO: add support for IE\n+ if(opts.noMultiCategory && Array.isArray(a[0])) {\n+ var b = [];\n+ for(var i = 0; i < a.length; i++) {\n+ if(Array.isArray(a[i])) {\n+ for(var j = 0; j < a[i].length; j++) {\n+ b.push(a[i][j]);\n+ }\n+ }\n+ }\n+ a = b;\n}\nif(moreDates(a, calendar)) return 'date';\n",
        "org_diff": "diff --git a/src/analytics/HyperGeom.js b/src/analytics/HyperGeom.js @@ -56,16 +56,35 @@ const HyperGeom = () => {\nconst [lte, setlte] = useState('');\nconst [et, setet] = useState('');\n- const factorial = (n) => {\n- let total = 1;\n+ const combination = (n, r) => {\n+ const topArray = [];\n+ const botArray = [];\n+ const comboArray = [];\n+\nfor (let i = 1; i <= n; i++) {\n- total *= i;\n+ topArray.push(i);\n+ }\n+ for (let i = 1; i <= r; i++) {\n+ botArray.push(i);\n+ }\n+ for (let i = 1; i <= n - r; i++) {\n+ comboArray.push(i);\n}\n- return total;\n- };\n- const combination = (n, r) => {\n- return factorial(n) / (factorial(r) * factorial(n - r));\n+ let sum = 1;\n+\n+ for (let i = 0; i < Math.max(topArray.length, botArray.length, comboArray.length); i++) {\n+ if (topArray[i]) {\n+ sum *= topArray[i];\n+ }\n+ if (botArray[i]) {\n+ sum /= botArray[i];\n+ }\n+ if (comboArray[i]) {\n+ sum /= comboArray[i];\n+ }\n+ }\n+ return sum;\n};\nconst hyp = (N, S, n, s) => {\n@@ -178,8 +197,6 @@ const HyperGeom = () => {\n});\nconst length = possible.length > 0 ? Math.max(...possible.map((x) => parseInt(x, 10))) + 1 : 0;\n- console.log(length);\n-\nconst plotPopSize = (dataset, size) => {\nconst res = [];\nfor (let i = 0; i < size; i++) {\n@@ -192,7 +209,6 @@ const HyperGeom = () => {\nfor (let i = 0; i < size; i++) {\nres.push(calculate(dataset.populationSize, i, dataset.sampleSize, dataset.sampleSuccesses).greaterThanEqual);\n}\n- console.log(res);\nreturn res;\n};\nconst plotSampleSize = (dataset, size) => {\n@@ -234,7 +250,6 @@ const HyperGeom = () => {\ndata: plotData(dataset, length),\n})),\n};\n- console.log(plotdata);\nreturn (\n<>\n"
    },
    {
        "sim_msg": "clean up scene computeTraceBounds",
        "sim_diff": "diff --git a/src/plots/gl3d/scene.js b/src/plots/gl3d/scene.js @@ -306,39 +306,42 @@ proto.recoverContext = function() {\nvar axisProperties = [ 'xaxis', 'yaxis', 'zaxis' ];\n-function coordinateBound(axis, coord, len, d, bounds, calendar) {\n- var x;\n- if(!Lib.isArrayOrTypedArray(coord)) {\n+function computeTraceBounds(scene, trace, bounds) {\n+ var sceneLayout = scene.fullSceneLayout;\n+\n+ for(var d = 0; d < 3; d++) {\n+ var axisName = axisProperties[d];\n+ var axLetter = axisName.charAt(0);\n+ var ax = sceneLayout[axisName];\n+ var coords = trace[axLetter];\n+ var calendar = trace[axLetter + 'calendar'];\n+ var len = trace['_' + axLetter + 'length'];\n+\n+ if(!Lib.isArrayOrTypedArray(coords)) {\nbounds[0][d] = Math.min(bounds[0][d], 0);\nbounds[1][d] = Math.max(bounds[1][d], len - 1);\n- return;\n- }\n+ } else {\n+ var v;\n- for(var i = 0; i < (len || coord.length); ++i) {\n- if(Lib.isArrayOrTypedArray(coord[i])) {\n- for(var j = 0; j < coord[i].length; ++j) {\n- x = axis.d2l(coord[i][j], 0, calendar);\n- if(!isNaN(x) && isFinite(x)) {\n- bounds[0][d] = Math.min(bounds[0][d], x);\n- bounds[1][d] = Math.max(bounds[1][d], x);\n+ for(var i = 0; i < (len || coords.length); i++) {\n+ if(Lib.isArrayOrTypedArray(coords[i])) {\n+ for(var j = 0; j < coords[i].length; ++j) {\n+ v = ax.d2l(coords[i][j], 0, calendar);\n+ if(!isNaN(v) && isFinite(v)) {\n+ bounds[0][d] = Math.min(bounds[0][d], v);\n+ bounds[1][d] = Math.max(bounds[1][d], v);\n}\n}\n+ } else {\n+ v = ax.d2l(coords[i], 0, calendar);\n+ if(!isNaN(v) && isFinite(v)) {\n+ bounds[0][d] = Math.min(bounds[0][d], v);\n+ bounds[1][d] = Math.max(bounds[1][d], v);\n}\n- else {\n- x = axis.d2l(coord[i], 0, calendar);\n- if(!isNaN(x) && isFinite(x)) {\n- bounds[0][d] = Math.min(bounds[0][d], x);\n- bounds[1][d] = Math.max(bounds[1][d], x);\n}\n}\n}\n}\n-\n-function computeTraceBounds(scene, trace, bounds) {\n- var sceneLayout = scene.fullSceneLayout;\n- coordinateBound(sceneLayout.xaxis, trace.x, trace._xlength, 0, bounds, trace.xcalendar);\n- coordinateBound(sceneLayout.yaxis, trace.y, trace._ylength, 1, bounds, trace.ycalendar);\n- coordinateBound(sceneLayout.zaxis, trace.z, trace._zlength, 2, bounds, trace.zcalendar);\n}\nproto.plot = function(sceneData, fullLayout, layout) {\n",
        "org_diff": "diff --git a/routes/cube_routes.js b/routes/cube_routes.js @@ -1192,6 +1192,7 @@ router.post('/uploaddecklist/:id', ensureAuth, async (req, res) => {\ndeck.comments = [];\ndeck.cubename = cube.name;\ndeck.cube = cube._id;\n+ deck.cubeOWner = cube.owner;\ndeck.seats = [\n{\nuserid: req.user._id,\n@@ -1663,6 +1664,7 @@ router.post('/startsealed/:id', body('packs').toInt({ min: 1, max: 16 }), body('\nconst deck = new Deck();\ndeck.cube = cube._id;\n+ deck.cubeOWner = cube.owner;\ndeck.date = Date.now();\ndeck.comments = [];\ndeck.cubename = cube.name;\n@@ -2792,6 +2794,7 @@ router.post('/submitdeck/:id', body('skipDeckbuilder').toBoolean(), async (req,\nconst deck = new Deck();\ndeck.cube = draft.cube;\n+ deck.cubeOWner = cube.owner;\ndeck.date = Date.now();\ndeck.comments = [];\ndeck.draft = draft._id;\n@@ -2959,6 +2962,7 @@ router.get('/rebuild/:id/:index', ensureAuth, async (req, res) => {\nconst deck = new Deck();\ndeck.cube = base.cube;\n+ deck.cubeOWner = base.owner;\ndeck.date = Date.now();\ndeck.cubename = cube.name;\ndeck.comments = [];\n"
    },
    {
        "sim_msg": "fixed bug in SNLI conversion script for std output.",
        "sim_diff": "diff --git a/jtr/io/SNLI2jtr_v2.py b/jtr/io/SNLI2jtr_v2.py @@ -79,7 +79,7 @@ def main():\nimport sys\nif len(sys.argv) == 2:\ncorpus = convert_snli(sys.argv[1])\n- print(json.dump(corpus, indent=2))\n+ print(json.dumps(corpus, indent=2))\nelse:\nfor corpus_name in [\"dev\",\"train\",\"test\"]:\ncorpus = convert_snli(\"./jtr/data/SNLI/snli_1.0/snli_1.0_%s.jsonl\" % corpus_name, support=False)\n",
        "org_diff": "diff --git a/fkie_node_manager_daemon/src/fkie_node_manager_daemon/common.py b/fkie_node_manager_daemon/src/fkie_node_manager_daemon/common.py @@ -250,6 +250,8 @@ def interpret_path(path, pwd='.'):\nif len(paths) > 0:\n# if more then one launch file is found, take the first one\nreturn paths[0]\n+ else:\n+ return path\nif path_suffix:\nreturn os.path.normpath(os.path.join(pkg, path_suffix))\nelse:\n"
    },
    {
        "sim_msg": "arm canvas updates",
        "sim_diff": "diff --git a/envi/archs/arm/disasm.py b/envi/archs/arm/disasm.py @@ -4151,7 +4151,8 @@ class ArmImmOper(ArmOperand):\ndef render(self, mcanv, op, idx):\nval = self.getOperValue(op)\n- mcanv.addNameText('#0x%.2x' % (val))\n+ mcanv.addText('#')\n+ mcanv.addNameText('0x%.2x' % (val))\ndef repr(self, op):\nval = self.getOperValue(op)\n@@ -4552,7 +4553,8 @@ class ArmImmOffsetOper(ArmOperand):\nif (idxing&0x10) == 0:\nmcanv.addText(']')\n- mcanv.addNameText(', #%s0x%x' % (pom,self.offset))\n+ mcanv.addText(', #%s' % (pom))\n+ mcanv.addNameText('0x%x' % (self.offset))\nif idxing == 0x10:\nmcanv.addText(']')\n",
        "org_diff": "diff --git a/fkie_node_manager/src/fkie_node_manager/editor/editor.py b/fkie_node_manager/src/fkie_node_manager/editor/editor.py @@ -941,7 +941,7 @@ class Editor(QMainWindow):\nname = \"\"\nif len(lines) == 1:\nname = lines[0]\n- self._insert_text('<param name=\"%s\" value=\"value\" />' % name, 13, len(name))\n+ self._insert_text('<param name=\"%s\" value=\"value\" />' % name, 22 + len(name), 5)\ndef _on_add_param_tag(self):\nself._insert_text('<param name=\"name\" value=\"value\" />', 13, 4)\n"
    },
    {
        "sim_msg": "add test case for annotation/shape/image zoom/pan on category axes",
        "sim_diff": "diff --git a/test/jasmine/tests/plot_api_test.js b/test/jasmine/tests/plot_api_test.js @@ -10,6 +10,7 @@ var subroutines = require('@src/plot_api/subroutines');\nvar helpers = require('@src/plot_api/helpers');\nvar d3 = require('d3');\n+var customMatchers = require('../assets/custom_matchers');\nvar createGraphDiv = require('../assets/create_graph_div');\nvar destroyGraphDiv = require('../assets/destroy_graph_div');\nvar fail = require('../assets/fail_test');\n@@ -105,6 +106,10 @@ describe('Test plot api', function() {\ndescribe('Plotly.relayout', function() {\nvar gd;\n+ beforeAll(function() {\n+ jasmine.addMatchers(customMatchers);\n+ });\n+\nbeforeEach(function() {\ngd = createGraphDiv();\n});\n@@ -252,6 +257,79 @@ describe('Test plot api', function() {\n.catch(fail)\n.then(done);\n});\n+\n+ it('annotations, shapes and images linked to category axes should update properly on zoom/pan', function(done) {\n+ var jsLogo = 'https://images.plot.ly/language-icons/api-home/js-logo.png';\n+\n+ function getPos(sel) {\n+ var rect = sel.node().getBoundingClientRect();\n+ return [rect.left, rect.bottom];\n+ }\n+\n+ function getAnnotationPos() {\n+ return getPos(d3.select('.annotation'));\n+ }\n+\n+ function getShapePos() {\n+ return getPos(d3.select('.layer-above').select('.shapelayer').select('path'));\n+ }\n+\n+ function getImagePos() {\n+ return getPos(d3.select('.layer-above').select('.imagelayer').select('image'));\n+ }\n+\n+ Plotly.plot(gd, [{\n+ x: ['a', 'b', 'c'],\n+ y: [1, 2, 1]\n+ }], {\n+ xaxis: {range: [-1, 5]},\n+ annotations: [{\n+ xref: 'x',\n+ yref: 'y',\n+ x: 'b',\n+ y: 2\n+ }],\n+ shapes: [{\n+ xref: 'x',\n+ yref: 'y',\n+ type: 'line',\n+ x0: 'c',\n+ x1: 'c',\n+ y0: -1,\n+ y1: 4\n+ }],\n+ images: [{\n+ xref: 'x',\n+ yref: 'y',\n+ source: jsLogo,\n+ x: 'a',\n+ y: 1,\n+ sizex: 0.2,\n+ sizey: 0.2\n+ }]\n+ })\n+ .then(function() {\n+ expect(getAnnotationPos()).toBeCloseToArray([247.5, 210.1]);\n+ expect(getShapePos()).toBeCloseToArray([350, 369]);\n+ expect(getImagePos()).toBeCloseToArray([170, 272.52]);\n+\n+ return Plotly.relayout(gd, 'xaxis.range', [0, 2]);\n+ })\n+ .then(function() {\n+ expect(getAnnotationPos()).toBeCloseToArray([337.5, 210.1]);\n+ expect(getShapePos()).toBeCloseToArray([620, 369]);\n+ expect(getImagePos()).toBeCloseToArray([80, 272.52]);\n+\n+ return Plotly.relayout(gd, 'xaxis.range', [-1, 5]);\n+ })\n+ .then(function() {\n+ expect(getAnnotationPos()).toBeCloseToArray([247.5, 210.1]);\n+ expect(getShapePos()).toBeCloseToArray([350, 369]);\n+ expect(getImagePos()).toBeCloseToArray([170, 272.52]);\n+ })\n+ .catch(fail)\n+ .then(done);\n+ });\n});\ndescribe('Plotly.restyle subroutines switchboard', function() {\n",
        "org_diff": "diff --git a/__tests__/serverjs/updatecards.test.js b/__tests__/serverjs/updatecards.test.js @@ -5,7 +5,6 @@ const updatecards = require('../../serverjs/updatecards');\nconst carddb = require('../../serverjs/cards');\nconst examplecards = require('../../fixtures/examplecards');\nconst cardutil = require('../../dist/util/Card.js');\n-const fs = require('fs');\nconst cardsFixturePath = 'fixtures/cards_small.json';\n"
    },
    {
        "sim_msg": "Update tests for pedestrian_tracker_demo",
        "sim_diff": "diff --git a/demos/tests/cases.py b/demos/tests/cases.py @@ -393,43 +393,36 @@ NATIVE_DEMOS = [\n],\n)),\n- CppDemo('pedestrian_tracker_demo', model_keys=['-m_det', '-m_reid'], device_keys=['-d_det', '-d_reid'],\n+ CppDemo(name='pedestrian_tracker_demo',\n+ model_keys=['-m_det', '-m_reid'],\n+ device_keys=['-d_det', '-d_reid'],\ntest_cases=combine_cases(\nTestCase(options={'-no_show': None,\n**MONITORS,\n'-i': DataPatternArg('person-detection-retail')}),\n+ [\n*combine_cases(\nTestCase(options={'-at': 'ssd'}),\nsingle_option_cases('-m_det',\nModelArg('person-detection-retail-0002'),\n- ModelArg('person-detection-retail-0013'))),\n- single_option_cases('-m_reid',\n- ModelArg('person-reidentification-retail-0277'),\n- ModelArg('person-reidentification-retail-0286'),\n- ModelArg('person-reidentification-retail-0287'),\n- ModelArg('person-reidentification-retail-0288')),\n+ ModelArg('person-detection-retail-0013')),\n+ ),\n*combine_cases(\nTestCase(options={'-at': 'yolo', '-person_label': '0'}),\nsingle_option_cases('-m_det',\n- ModelArg('yolo-v3-tf'))),\n- single_option_cases('-m_reid',\n- ModelArg('person-reidentification-retail-0277'),\n- ModelArg('person-reidentification-retail-0286'),\n- ModelArg('person-reidentification-retail-0287'),\n- ModelArg('person-reidentification-retail-0288')),\n+ ModelArg('yolo-v3-tf')),\n+ ),\n*combine_cases(\nTestCase(options={'-at': 'ssd', '-person_label': '1'}),\nsingle_option_cases('-m_det',\n- ModelArg('retinanet-tf'))),\n- single_option_cases('-m_reid',\n- ModelArg('person-reidentification-retail-0277'),\n- ModelArg('person-reidentification-retail-0286'),\n- ModelArg('person-reidentification-retail-0287'),\n- ModelArg('person-reidentification-retail-0288')),\n+ ModelArg('retinanet-tf')),\n+ ),\n*combine_cases(\nTestCase(options={'-at': 'centernet', '-person_label': '0'}),\nsingle_option_cases('-m_det',\n- ModelArg('ctdet_coco_dlav0_512'))),\n+ ModelArg('ctdet_coco_dlav0_512')),\n+ ),\n+ ],\nsingle_option_cases('-m_reid',\nModelArg('person-reidentification-retail-0277'),\nModelArg('person-reidentification-retail-0286'),\n",
        "org_diff": "diff --git a/src/components/CubeOverviewModal.js b/src/components/CubeOverviewModal.js @@ -247,7 +247,8 @@ class CubeOverviewModal extends Component {\n<Row>\n<Col>\n<FormGroup tag=\"fieldset\">\n- {['Vintage', 'Legacy+', 'Legacy', 'Modern', 'Pioneer', 'Historic', 'Standard', 'Set'].map((label) => (\n+ {['Vintage', 'Legacy+', 'Legacy', 'Modern', 'Pioneer', 'Historic', 'Standard', 'Set'].map(\n+ (label) => (\n<FormGroup check key={label}>\n<Label check>\n<Input\n@@ -261,7 +262,8 @@ class CubeOverviewModal extends Component {\n{label}\n</Label>\n</FormGroup>\n- ))}\n+ ),\n+ )}\n</FormGroup>\n</Col>\n<Col>\n"
    },
    {
        "sim_msg": "docs(yoga/docs): update PropsTable destructuring",
        "sim_diff": "diff --git a/packages/doc/src/components/PropsTable/PropsTable.jsx b/packages/doc/src/components/PropsTable/PropsTable.jsx @@ -86,7 +86,7 @@ const Table = ({\nname,\ndescription: { text: description },\ntype: { name: type },\n- defaultValue: { value: defaultValue },\n+ defaultValue,\nrequired: isRequired,\n}) => (\n<tr key={name}>\n@@ -94,7 +94,9 @@ const Table = ({\n<td>{description}</td>\n<td>{type}</td>\n<td>\n- <InlineCode>{defaultValue.replace(/'/g, '')}</InlineCode>\n+ <InlineCode>\n+ {defaultValue && defaultValue.value.replace(/'/g, '')}\n+ </InlineCode>\n</td>\n<td>{String(isRequired)}</td>\n</tr>\n",
        "org_diff": "diff --git a/src/analytics/Suggestions.js b/src/analytics/Suggestions.js @@ -74,7 +74,7 @@ const Suggestions = ({ cards, cube }) => {\n</CardHeader>\n<CardBody>\n<ListGroup>\n- {loading ? <em>Loading...</em> : adds.map((add) => <ListGroupItem key={add.name}>{add.name}</ListGroupItem>)}\n+ {loading ? <em>Loading...</em> : adds.map((add) => <ListGroupItem key={add.cardID}>{add.details.name}</ListGroupItem>)}\n</ListGroup>\n</CardBody>\n</Card>\n"
    },
    {
        "sim_msg": "allow for zero weight",
        "sim_diff": "diff --git a/src/include/prox_lib.h b/src/include/prox_lib.h @@ -334,12 +334,14 @@ __DEVICE__ inline T ProxZero(T v, T rho) {\nreturn v;\n}\n+#define SMALL 1E-30 // ok for float or double for this purpose\n+\n// Evaluates the proximal operator of f.\ntemplate <typename T>\n__DEVICE__ inline T ProxEval(const FunctionObj<T> &f_obj, T v, T rho) {\nconst T a = f_obj.a, b = f_obj.b, c = f_obj.c, d = f_obj.d, e = f_obj.e;\n- v = a * (v * rho - d) / (e + rho) - b;\n- rho = (e + rho) / (c * a * a);\n+ v = a * (v * rho - d) / (SMALL + e + rho) - b;\n+ rho = (e + rho) / (SMALL + c * a * a); // Assumes c>=0 , as original paper assumes. This is so weight can be 0.\nswitch (f_obj.h) {\ncase kAbs: v = ProxAbs(v, rho); break;\ncase kNegEntr: v = ProxNegEntr(v, rho); break;\n@@ -358,7 +360,7 @@ __DEVICE__ inline T ProxEval(const FunctionObj<T> &f_obj, T v, T rho) {\ncase kSquare: v = ProxSquare(v, rho); break;\ncase kZero: default: v = ProxZero(v, rho); break;\n}\n- return (v + b) / a;\n+ return (v + b) / (SMALL+a); // TODO: assumes a>=0, which is normal but not required by paper.\n}\n",
        "org_diff": "diff --git a/src/utils/Draft.js b/src/utils/Draft.js @@ -36,17 +36,17 @@ function botCardRating(botColors, card) {\n// of picking it by a factor of (100 * 10**(x/400)) - 100 percent\nif (isLand) {\nif ((subset || contains) && isFetch) {\n- rating += 191; // Increase value of picking by roughly 200%\n+ rating += 280; // Increase value of picking by roughly 400%\n} else if (subset || contains) {\nswitch (colors.length) {\ncase 1:\n- rating += 176; // Increase value of picking by roughly 175%\n+ rating += 191; // Increase value of picking by roughly 200%\nbreak;\ncase 2:\n- rating += 218; // Increase value of picking by roughly 250%\n+ rating += 262; // Increase value of picking by roughly 350%\nbreak;\ndefault:\n- rating += 265; // Increase value of picking by roughly 360%\n+ rating += 311; // Increase value of picking by roughly 500%\nbreak;\n}\n} else if (overlap && isFetch) {\n"
    },
    {
        "sim_msg": "bool reduce test",
        "sim_diff": "diff --git a/python/jittor/test/test_reduce_op.py b/python/jittor/test/test_reduce_op.py @@ -49,6 +49,42 @@ class TestReduceOp(unittest.TestCase):\ncheck(ia[0], iop[0], dims)\nexpect_error(lambda: jt.reduce_add([1,2,3], 2))\n+ def test_bool(self):\n+ def gen_data(shape):\n+ num = np.multiply.reduce(shape)\n+ a = np.random.randint(2, size=[num]).astype(bool)\n+ print(a)\n+ return a.reshape(shape).astype(\"int32\")\n+\n+ def check(a, op, dims):\n+ if (\"logical\" in op) and jt.flags.use_cuda:\n+ # TODO: atomic bool operation for cuda not\n+ # supported yet\n+ return\n+ np_dims = jt_dims = dims\n+ if dims == ():\n+ np_dims = tuple(range(len(a.shape)))\n+ x = eval(f\"np.{op}.reduce(a, {np_dims}, keepdims={self.keepdims})\")\n+ y = eval(f\"jt.reduce_{op}(a, {jt_dims}, keepdims={self.keepdims}).data\")\n+ if len(x.shape) == 0: x = np.array([x]).astype(a.dtype)\n+ x = x.astype(a.dtype)\n+ y = y.astype(a.dtype)\n+ assert x.dtype == y.dtype and x.shape == y.shape and (x==y).all(), \\\n+ f\"\\n{a.shape}\\n{op}\\n{dims}\\n{x}\\n{y}\\n{x.dtype}\\n{y.dtype}\\n{a.dtype}\"\n+\n+ ia = [gen_data([2,3,4,5]), gen_data([5,3])]\n+ idims = [(), (0,), (1,), (2,), (3,), (0, 2), (1,3), (1,2,3), 2, 3]\n+\n+ iop = [ op[7:] for op in dir(jt) if op.startswith(\"reduce_\")]\n+ assert len(iop) >= 10, iop\n+ for a in ia:\n+ check(a, iop[0], idims[0])\n+ for op in iop:\n+ check(ia[0], op, idims[0])\n+ for dims in idims:\n+ check(ia[0], iop[0], dims)\n+ expect_error(lambda: jt.reduce_add([1,2,3], 2))\n+\nclass TestReduceOp2(TestReduceOp):\ndef setUp(self):\n",
        "org_diff": "diff --git a/src/analytics/Chart.js b/src/analytics/Chart.js @@ -21,9 +21,10 @@ const Chart = ({ cards, characteristics }) => {\nColorless: '#ADADAD',\nMulticolored: '#DBC467',\n};\n+ const colors = [...Object.values(colorMap), '#000000'];\n- const getColor = (label) => {\n- return colorMap[label] ?? '#000000';\n+ const getColor = (label, index) => {\n+ return colorMap[label] ?? colors[index % colors.length];\n};\nconst options = {\n@@ -60,11 +61,11 @@ const Chart = ({ cards, characteristics }) => {\nconst labels = getLabels(cards, characteristic);\nconst data = {\nlabels,\n- datasets: Object.keys(groups).map((key) => ({\n+ datasets: Object.keys(groups).map((key, index) => ({\nlabel: key,\ndata: labels.map((label) => groups[key].filter((card) => cardIsLabel(card, label, characteristic)).length),\n- backgroundColor: getColor(key),\n- borderColor: getColor(key),\n+ backgroundColor: getColor(key, index),\n+ borderColor: getColor(key, index),\n})),\n};\n"
    },
    {
        "sim_msg": "eject webpack overrides",
        "sim_diff": "diff --git a/cmd/cmd_controller.js b/cmd/cmd_controller.js @@ -433,6 +433,20 @@ class EmbarkController {\nfs.copySync(embarkConfig, dappConfig);\nconsole.log(__('webpack config ejected to: ').dim.yellow);\nconsole.log(`${dappConfig}`.green);\n+ var dappOverrides = fs.dappPath('webpack-overrides.js');\n+ var embarkOverrides = fs.embarkPath('lib/pipeline', 'webpack-overrides.js');\n+ ext = 1;\n+ let dappOverridesOld = dappOverrides;\n+ while (fs.existsSync(dappOverridesOld)) {\n+ dappOverridesOld = dappOverrides + `.${ext}`;\n+ ext++;\n+ }\n+ if (dappOverridesOld !== dappOverrides) {\n+ fs.copySync(dappOverrides, dappOverridesOld);\n+ }\n+ fs.copySync(embarkOverrides, dappOverrides);\n+ console.log(__('webpack overrides ejected to: ').dim.yellow);\n+ console.log(`${dappOverrides}`.green);\n}\nupload(options) {\n",
        "org_diff": "diff --git a/routes/cube_routes.js b/routes/cube_routes.js @@ -2801,7 +2801,7 @@ router.get(\nreturn res.status(404).send('Cube not found.');\n}\n- res.contentType('text/json');\n+ res.contentType('application/json');\nres.set('Access-Control-Allow-Origin', '*');\nreturn res.status(200).send(JSON.stringify(cube));\n}),\n"
    },
    {
        "sim_msg": "improve prng compile times with loop rolling\ncf.",
        "sim_diff": "diff --git a/jax/random.py b/jax/random.py @@ -123,34 +123,29 @@ def threefry_2x32(keypair, count):\nelse:\nx = list(np.split(count.ravel(), 2))\n- rotations = onp.uint32([13, 15, 26, 6, 17, 29, 16, 24])\n+ rotations = asarray([13, 15, 26, 6, 17, 29, 16, 24], dtype=\"uint32\")\nks = [key1, key2, key1 ^ key2 ^ onp.uint32(0x1BD11BDA)]\nx[0] = x[0] + ks[0]\nx[1] = x[1] + ks[1]\n- for r in rotations[:4]:\n- x = apply_round(x, r)\n+ x = lax.fori_loop(0, 4, lambda i, x: apply_round(x, rotations[i]), x)\nx[0] = x[0] + ks[1]\nx[1] = x[1] + ks[2] + onp.uint32(1)\n- for r in rotations[4:]:\n- x = apply_round(x, r)\n+ x = lax.fori_loop(4, 8, lambda i, x: apply_round(x, rotations[i]), x)\nx[0] = x[0] + ks[2]\nx[1] = x[1] + ks[0] + onp.uint32(2)\n- for r in rotations[:4]:\n- x = apply_round(x, r)\n+ x = lax.fori_loop(0, 4, lambda i, x: apply_round(x, rotations[i]), x)\nx[0] = x[0] + ks[0]\nx[1] = x[1] + ks[1] + onp.uint32(3)\n- for r in rotations[4:]:\n- x = apply_round(x, r)\n+ x = lax.fori_loop(4, 8, lambda i, x: apply_round(x, rotations[i]), x)\nx[0] = x[0] + ks[1]\nx[1] = x[1] + ks[2] + onp.uint32(4)\n- for r in rotations[:4]:\n- x = apply_round(x, r)\n+ x = lax.fori_loop(0, 4, lambda i, x: apply_round(x, rotations[i]), x)\nx[0] = x[0] + ks[2]\nx[1] = x[1] + ks[0] + onp.uint32(5)\n",
        "org_diff": "diff --git a/sc2/client.py b/sc2/client.py @@ -150,11 +150,10 @@ class Client(Protocol):\nres = await self._execute(\naction=sc_pb.RequestAction(actions=(sc_pb.Action(action_raw=a) for a in combine_actions(actions)))\n)\n- result = [ActionResult(r) for r in res.action.result]\nif return_successes:\n- return result\n+ return [ActionResult(r) for r in res.action.result]\nelse:\n- return [r for r in result if r != ActionResult.Success]\n+ return [ActionResult(r) for r in res.action.result if ActionResult(r) != ActionResult.Success]\nasync def query_pathing(\nself, start: Union[Unit, Point2, Point3], end: Union[Point2, Point3]\n"
    },
    {
        "sim_msg": "update dev version to 0111a1",
        "sim_diff": "diff --git a/setup.py b/setup.py @@ -17,12 +17,12 @@ requirements = read(\"requirements.txt\").split()\nsetup(\nname=\"syft\",\n- version=\"0.1.10a1\",\n+ version=\"0.1.11a1\",\nauthor=\"Andrew Trask\",\nauthor_email=\"contact@openmined.org\",\ndescription=(\"A Library for Private, Secure Deep Learning\"),\nlicense=\"Apache-2.0\",\n- keywords=\"deep learning artificial intelligence privacy secure multi-party computation\",\n+ keywords=\"deep learning artificial intelligence privacy secure multi-party computation federated learning differential privacy\",\npackages=find_packages(exclude=[\"docs\", \"examples\", \"dist\"]),\ninclude_package_data=True,\nlong_description=read(\"README.md\"),\n",
        "org_diff": "diff --git a/setup.py b/setup.py @@ -10,7 +10,7 @@ test_requirements = convert_deps_to_pip(pfile[\"dev-packages\"], r=False)\nsetup(\nname=\"burnysc2\",\npackages=find_packages(exclude=[\"examples*\", \"examples\"]),\n- version=\"0.12.9\",\n+ version=\"0.12.10\",\ndescription=\"A StarCraft II API Client for Python 3\",\nlicense=\"MIT\",\nauthor=\"BurnySc2\",\n"
    },
    {
        "sim_msg": "Improvements to stuttering and hanging of manual drive mode",
        "sim_diff": "diff --git a/runtime/manual/driver.js b/runtime/manual/driver.js @@ -5,8 +5,9 @@ var util = require('util');\nvar events = require('events')\nvar Q = require('q');\n-var T_RENEW = 250;\n-var SAFETY_FACTOR = 1.75;\n+//var T_RENEW = 300;\n+var T_RENEW = 300;\n+var SAFETY_FACTOR = 4.0;\nvar count;\nvar RENEW_SEGMENTS = 10;\nvar FIXED_MOVES_QUEUE_SIZE = 3;\n@@ -49,7 +50,8 @@ ManualDriver.prototype.enter = function() {\nthis.stream.write('M100.1 ({xjm:'+jerkXY+'})\\n');\nthis.stream.write('M100.1 ({yjm:'+jerkXY+'})\\n');\nthis.stream.write('M100.1 ({zjm:'+jerkZ+'})\\n');\n- this.stream.write('M100.1 ({zl:0})\\nM0\\n G4 P0.1\\n');\n+ //this.stream.write('M100.1 ({zl:0})\\nM0\\n G4 P0.1\\n');\n+ this.stream.write('M100.1 ({zl:0})\\nM0\\n G91\\n G0 X0 Y0 Z0\\n');\nthis.driver.prime();\nthis.deferred = Q.defer();\nreturn this.deferred.promise;\n@@ -122,10 +124,10 @@ ManualDriver.prototype.stopMotion = function() {\n}\nthis.omg_stop = true\nthis.stop_pending = true;\n- this.driver.feedHold();\n- this.driver.queueFlush(function() {\n- this.driver.resume();\n- }.bind(this));\n+ //this.driver.feedHold();\n+ //this.driver.queueFlush(function() {\n+ // this.driver.resume();\n+ //}.bind(this));\n}\nManualDriver.prototype.quitMove = function(){\n@@ -246,17 +248,17 @@ ManualDriver.prototype._renewMoves = function(reason) {\nvar moves = []\nif (this.second_axis){\nfor(var i=0; i<RENEW_SEGMENTS; i++) {\n- var move = 'G1 ' + this.currentAxis + segment.toFixed(5) +' '+ this.second_axis + second_segment.toFixed(5) +'\\n'\n+ var move = 'G1' + this.currentAxis + segment.toFixed(4) + this.second_axis + second_segment.toFixed(4) + '\\n'\nmoves.push(move);\n}\n} else {\nfor(var i=0; i<RENEW_SEGMENTS; i++) {\n- var move = 'G1 ' + this.currentAxis + segment.toFixed(5) + '\\n'\n+ var move = 'G1' + this.currentAxis + segment.toFixed(4)+'\\n'\nmoves.push(move);\n}\n}\n- this.stream.write(moves.join('\\n'));\n+ this.stream.write(moves.join(''));\nthis.driver.prime();\nthis.renew_timer = setTimeout(function() {\nthis._renewMoves(\"timeout\")\n",
        "org_diff": "diff --git a/src/components/FilterCollapse.js b/src/components/FilterCollapse.js @@ -44,6 +44,7 @@ const numFields = ['cmc', 'price', 'priceFoil', 'power', 'toughness', 'rarity'];\nconst AdvancedFilterModal = ({ isOpen, toggle, apply, values, onChange, ...props }) =>\n<Modal isOpen={isOpen} toggle={toggle} size=\"lg\" {...props}>\n+ <Form onSubmit={e => { e.preventDefault(); apply(); }}>\n<ModalHeader toggle={toggle}>Advanced Filters</ModalHeader>\n<ModalBody>\n<TextField name=\"name\" humanName=\"Card Name\" placeholder={'Any words in the name, e.g. \"Fire\"'} value={values.name} onChange={onChange} />\n@@ -86,8 +87,9 @@ const AdvancedFilterModal = ({ isOpen, toggle, apply, values, onChange, ...props\n</ModalBody>\n<ModalFooter>\n<Button color=\"danger\" aria-label=\"Close\" onClick={toggle}>Cancel</Button>\n- <Button color=\"success\" onClick={apply}>Apply</Button>\n+ <Button color=\"success\" type=\"submit\">Apply</Button>\n</ModalFooter>\n+ </Form>\n</Modal>;\nclass FilterCollapse extends Component {\n"
    },
    {
        "sim_msg": "Add readVectorUBC model",
        "sim_diff": "diff --git a/SimPEG/EM/Static/SP/Utils.py b/SimPEG/EM/Static/SP/Utils.py @@ -153,3 +153,37 @@ def writeVectorUBC(mesh, fileName, model):\nif ii == 2:\nmodelMatTR[:, ii] *= -1\nnp.savetxt(fileName, modelMatTR)\n+\n+\n+def readVectorUBC(mesh, fileName):\n+ \"\"\"Read UBC 3DVector model and generate 3D Vector mesh model\n+\n+ Input:\n+ :param string fileName: path to the UBC GIF mesh file to read\n+\n+ Output:\n+ :rtype: numpy.ndarray\n+ :return: model with TensorMesh ordered x3 nC\n+ \"\"\"\n+ model = np.loadtxt(fileName)\n+ # Fist line is the size of the model\n+ # model = np.array(model.ravel()[0].split(), dtype=float)\n+\n+ vx = np.reshape(model[:, 0], (mesh.nCz, mesh.nCx, mesh.nCy), order='F')\n+ vx = vx[::-1, :, :]\n+ vx = np.transpose(vx, (1, 2, 0))\n+ vx = mkvc(vx)\n+\n+ vy = np.reshape(model[:, 1], (mesh.nCz, mesh.nCx, mesh.nCy), order='F')\n+ vy = vy[::-1, :, :]\n+ vy = np.transpose(vy, (1, 2, 0))\n+ vy = mkvc(vy)\n+\n+ vz = np.reshape(model[:, 2], (mesh.nCz, mesh.nCx, mesh.nCy), order='F')\n+ vz = vz[::-1, :, :]\n+ vz = np.transpose(vz, (1, 2, 0))\n+ vz = mkvc(vz)\n+\n+ # Flip z to positive up from MeshTools3D to SimPEG\n+ model = np.r_[vx, vy, -vz]\n+ return model\n",
        "org_diff": "diff --git a/sc2/paths.py b/sc2/paths.py @@ -25,10 +25,6 @@ CWD = {\nPF = platform.system()\n-if PF not in BASEDIR:\n- logger.critical(f\"Unsupported platform '{PF}'\")\n- exit(1)\n-\ndef get_env():\n# TODO: Linux env conf from: https://github.com/deepmind/pysc2/blob/master/pysc2/run_configs/platforms.py\nreturn None\n@@ -41,14 +37,28 @@ def latest_executeble(versions_dir):\nexit(1)\nreturn path / BINPATH[PF]\n-class Paths(object):\n+\n+class _MetaPaths(type):\n+ \"\"\"\"Lazily loads paths to allow importing the library even if SC2 isn't installed.\"\"\"\n+ def __setup(self):\n+ if PF not in BASEDIR:\n+ logger.critical(f\"Unsupported platform '{PF}'\")\n+ exit(1)\n+\ntry:\n- BASE = Path(os.environ.get(\"SC2PATH\", BASEDIR[PF])).expanduser()\n- EXECUTABLE = latest_executeble(BASE / \"Versions\")\n- CWD = base_dir / CWD[PF] if CWD[PF] else None\n+ self.BASE = Path(os.environ.get(\"SC2PATH\", BASEDIR[PF])).expanduser()\n+ self.EXECUTABLE = latest_executeble(self.BASE / \"Versions\")\n+ self.CWD = base_dir / CWD[PF] if CWD[PF] else None\n- REPLAYS = BASE / \"Replays\"\n- MAPS = BASE / \"Maps\"\n+ self.REPLAYS = self.BASE / \"Replays\"\n+ self.MAPS = self.BASE / \"Maps\"\nexcept FileNotFoundError as e:\nlogger.critical(f\"SC2 installation not found: File '{e.filename}' does not exist.\")\nexit(1)\n+\n+ def __getattr__(self, attr):\n+ self.__setup()\n+ return getattr(self, attr)\n+\n+class Paths(metaclass=_MetaPaths):\n+ \"\"\"Paths for SC2 folders, lazily loaded using the above metaclass.\"\"\"\n"
    },
    {
        "sim_msg": "Successfully move multiple parts with partial quantities",
        "sim_diff": "diff --git a/InvenTree/stock/api.py b/InvenTree/stock/api.py @@ -187,33 +187,18 @@ class StockMove(APIView):\n# Ignore this one\ncontinue\n- print('stock:', stock_id)\n- print('quantity:', quantity)\n-\n- \"\"\"\n+ # Ignore a zero quantity movement\n+ if quantity <= 0:\n+ continue\n- for pid in part_list:\ntry:\n- part = StockItem.objects.get(pk=pid)\n- parts.append(part)\n+ stock = StockItem.objects.get(pk=stock_id)\nexcept StockItem.DoesNotExist:\n- errors.append({'part': 'Part {id} does not exist'.format(id=pid)})\n-\n- if len(errors) > 0:\n- raise ValidationError(errors)\n-\n- n = 0\n-\n- for part in parts:\n- if part.move(location, data.get('notes'), request.user):\n- n += 1\n-\n- \"\"\"\n+ continue\n- n = 0\n+ stock.move(location, data.get('notes'), request.user, quantity=quantity)\n- return Response({'success': 'Moved {n} parts to {loc}'.format(\n- n=n,\n+ return Response({'success': 'Moved parts to {loc}'.format(\nloc=str(location)\n)})\n",
        "org_diff": "diff --git a/sc2/sc2process.py b/sc2/sc2process.py @@ -193,7 +193,8 @@ class SC2Process:\n)\nasync def _connect(self):\n- for i in range(60):\n+ # How long it waits for SC2 to start (in seconds)\n+ for i in range(180):\nif self._process is None:\n# The ._clean() was called, clearing the process\nlogger.debug(\"Process cleanup complete, exit\")\n"
    },
    {
        "sim_msg": "fix re so they begin with ^",
        "sim_diff": "diff --git a/stix2/utils.py b/stix2/utils.py @@ -27,8 +27,8 @@ NOW = object()\nSTIX_UNMOD_PROPERTIES = ['created', 'created_by_ref', 'id', 'type']\nTYPE_REGEX = re.compile(r'^\\-?[a-z0-9]+(-[a-z0-9]+)*\\-?$')\n-TYPE_21_REGEX = re.compile(r'([a-z][a-z0-9]*)+(-[a-z0-9]+)*\\-?$')\n-EXT_21_REGEX = re.compile(r'([a-z][a-z0-9]*)+(-[a-z0-9]+)*\\-ext$')\n+TYPE_21_REGEX = re.compile(r'^([a-z][a-z0-9]*)+(-[a-z0-9]+)*\\-?$')\n+EXT_21_REGEX = re.compile(r'^([a-z][a-z0-9]*)+(-[a-z0-9]+)*\\-ext$')\nPREFIX_21_REGEX = re.compile(r'^[a-z].*')\n",
        "org_diff": "diff --git a/routes/cube_routes.js b/routes/cube_routes.js @@ -3370,7 +3370,7 @@ router.post(\n'/api/adds/:id',\nutil.wrapAsyncApi(async (req, res) => {\nconst response = await fetch(\n- `http://127.0.0.1:8000/?cube_name=${req.params.id}&num_recs=${100}&root=${encodeURIComponent(\n+ `http://127.0.0.1:8000/?cube_name=${req.params.id}&num_recs=${1000}&root=${encodeURIComponent(\n'http://localhost:5000',\n)}`,\n);\n"
    },
    {
        "sim_msg": "Improvements to stuttering and hanging of manual drive mode",
        "sim_diff": "diff --git a/runtime/manual/driver.js b/runtime/manual/driver.js @@ -5,8 +5,9 @@ var util = require('util');\nvar events = require('events')\nvar Q = require('q');\n-var T_RENEW = 250;\n-var SAFETY_FACTOR = 1.75;\n+//var T_RENEW = 300;\n+var T_RENEW = 300;\n+var SAFETY_FACTOR = 4.0;\nvar count;\nvar RENEW_SEGMENTS = 10;\nvar FIXED_MOVES_QUEUE_SIZE = 3;\n@@ -49,7 +50,8 @@ ManualDriver.prototype.enter = function() {\nthis.stream.write('M100.1 ({xjm:'+jerkXY+'})\\n');\nthis.stream.write('M100.1 ({yjm:'+jerkXY+'})\\n');\nthis.stream.write('M100.1 ({zjm:'+jerkZ+'})\\n');\n- this.stream.write('M100.1 ({zl:0})\\nM0\\n G4 P0.1\\n');\n+ //this.stream.write('M100.1 ({zl:0})\\nM0\\n G4 P0.1\\n');\n+ this.stream.write('M100.1 ({zl:0})\\nM0\\n G91\\n G0 X0 Y0 Z0\\n');\nthis.driver.prime();\nthis.deferred = Q.defer();\nreturn this.deferred.promise;\n@@ -122,10 +124,10 @@ ManualDriver.prototype.stopMotion = function() {\n}\nthis.omg_stop = true\nthis.stop_pending = true;\n- this.driver.feedHold();\n- this.driver.queueFlush(function() {\n- this.driver.resume();\n- }.bind(this));\n+ //this.driver.feedHold();\n+ //this.driver.queueFlush(function() {\n+ // this.driver.resume();\n+ //}.bind(this));\n}\nManualDriver.prototype.quitMove = function(){\n@@ -246,17 +248,17 @@ ManualDriver.prototype._renewMoves = function(reason) {\nvar moves = []\nif (this.second_axis){\nfor(var i=0; i<RENEW_SEGMENTS; i++) {\n- var move = 'G1 ' + this.currentAxis + segment.toFixed(5) +' '+ this.second_axis + second_segment.toFixed(5) +'\\n'\n+ var move = 'G1' + this.currentAxis + segment.toFixed(4) + this.second_axis + second_segment.toFixed(4) + '\\n'\nmoves.push(move);\n}\n} else {\nfor(var i=0; i<RENEW_SEGMENTS; i++) {\n- var move = 'G1 ' + this.currentAxis + segment.toFixed(5) + '\\n'\n+ var move = 'G1' + this.currentAxis + segment.toFixed(4)+'\\n'\nmoves.push(move);\n}\n}\n- this.stream.write(moves.join('\\n'));\n+ this.stream.write(moves.join(''));\nthis.driver.prime();\nthis.renew_timer = setTimeout(function() {\nthis._renewMoves(\"timeout\")\n",
        "org_diff": "diff --git a/src/pages/CardPage.js b/src/pages/CardPage.js -import React from 'react';\n+import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport UserPropType from 'proptypes/UserPropType';\nimport CardPricePropType from 'proptypes/CardPricePropType';\n@@ -20,6 +20,7 @@ import {\nTable,\nBadge,\nButton,\n+ Input,\n} from 'reactstrap';\nimport ChartComponent from 'react-chartjs-2';\n@@ -45,6 +46,7 @@ import Tab from 'components/Tab';\nimport { cardPrice, cardFoilPrice, cardPriceEur, cardTix, cardElo } from 'utils/Card';\nimport { getTCGLink, getCardMarketLink, getCardHoarderLink, getCardKingdomLink } from 'utils/Affiliate';\n+import { CheckIcon, ClippyIcon } from '@primer/octicons-react';\nconst AutocardA = withAutocard('a');\nconst AddModal = withModal(Button, AddToCubeModal);\n@@ -177,6 +179,33 @@ LegalityBadge.propTypes = {\nstatus: PropTypes.string.isRequired,\n};\n+const CardIdBadge = ({ id }) => {\n+ const [copied, setCopied] = useState(false);\n+\n+ const onCopyClick = async () => {\n+ await navigator.clipboard.writeText(id);\n+ setCopied(true);\n+ };\n+\n+ return (\n+ <InputGroup className=\"flex-nowrap mb-3\" size=\"sm\">\n+ <InputGroupAddon addonType=\"prepend\">\n+ <InputGroupText>Card ID</InputGroupText>\n+ </InputGroupAddon>\n+ <Input id=\"card-id\" className=\"bg-white\" value={id} disabled />\n+ <InputGroupAddon addonType=\"append\" style={{ width: 'auto' }}>\n+ <Button className=\"btn-sm\" onClick={onCopyClick}>\n+ {copied ? <CheckIcon size={16} /> : <ClippyIcon size={16} />}\n+ </Button>\n+ </InputGroupAddon>\n+ </InputGroup>\n+ );\n+};\n+\n+CardIdBadge.propTypes = {\n+ id: PropTypes.string.isRequired,\n+};\n+\nconst getPriceTypeUnit = {\nprice: 'USD',\nprice_foil: 'USD',\n@@ -231,11 +260,12 @@ const CardPage = ({ user, card, data, versions, related, cubes, loginCallback })\ncolor=\"success\"\nblock\noutline\n- className=\"mb-2 mr-2\"\n+ className=\"mb-1 mr-2\"\nmodalProps={{ card, cubes, hideAnalytics: true }}\n>\nAdd to Cube...\n</AddModal>\n+ <CardIdBadge id={card._id} />\n{card.prices && Number.isFinite(cardPrice({ details: card })) && (\n<TextBadge name=\"Price\" className=\"mt-1\" fill>\n<Tooltip text=\"TCGPlayer Market Price\">${cardPrice({ details: card }).toFixed(2)}</Tooltip>\n"
    },
    {
        "sim_msg": "Tweak group margin to fit node status and look better",
        "sim_diff": "diff --git a/packages/node_modules/@node-red/editor-client/src/js/ui/view.js b/packages/node_modules/@node-red/editor-client/src/js/ui/view.js @@ -4228,17 +4228,18 @@ RED.view = (function() {\nvar minY = Number.POSITIVE_INFINITY;\nvar maxX = 0;\nvar maxY = 0;\n+ var margin = 26;\nd.nodes.forEach(function(n) {\nif (n.type !== \"group\") {\n- minX = Math.min(minX,n.x-n.w/2-35-((n._def.button && n._def.align!==\"right\")?20:0));\n- minY = Math.min(minY,n.y-n.h/2-35);\n- maxX = Math.max(maxX,n.x+n.w/2+35+((n._def.button && n._def.align==\"right\")?20:0));\n- maxY = Math.max(maxY,n.y+n.h/2+35);\n+ minX = Math.min(minX,n.x-n.w/2-margin-((n._def.button && n._def.align!==\"right\")?20:0));\n+ minY = Math.min(minY,n.y-n.h/2-margin);\n+ maxX = Math.max(maxX,n.x+n.w/2+margin+((n._def.button && n._def.align==\"right\")?20:0));\n+ maxY = Math.max(maxY,n.y+n.h/2+margin);\n} else {\n- minX = Math.min(minX,n.x-35)\n- minY = Math.min(minY,n.y-35)\n- maxX = Math.max(maxX,n.x+n.w+35)\n- maxY = Math.max(maxY,n.y+n.h+35)\n+ minX = Math.min(minX,n.x-margin)\n+ minY = Math.min(minY,n.y-margin)\n+ maxX = Math.max(maxX,n.x+n.w+margin)\n+ maxY = Math.max(maxY,n.y+n.h+margin)\n}\n});\n@@ -4261,9 +4262,12 @@ RED.view = (function() {\n}\n}\nd.w = Math.max(d.minWidth,d.w);\n- if (d.style.label && d.labels.length > 1) {\n- var h = (d.labels.length-1) * 16;\n+ if (d.style.label && d.labels.length > 0) {\nvar labelPos = d.style[\"label-position\"] || \"nw\";\n+ var h = (d.labels.length-1) * 16;\n+ if (labelPos[0] === \"s\") {\n+ h += 8;\n+ }\nd.h += h;\nif (labelPos[0] === \"n\") {\nif (d.nodes.length > 0) {\n",
        "org_diff": "diff --git a/serverjs/cubefn.js b/serverjs/cubefn.js @@ -23,22 +23,14 @@ function buildIdQuery(id) {\nasync function generateShortId() {\nconst cubes = await Cube.find({}, ['shortID']);\n-\nconst shortIds = cubes.map((cube) => cube.shortID);\n-\n- const ids = cubes.map((cube) => util.fromBase36(cube.shortID));\n- let max = Math.max(...ids);\n-\n- if (max < 0) {\n- max = 0;\n- }\n+ const space = shortIds.length * 2;\nlet newId = '';\nlet isGoodId = false;\nwhile (!isGoodId) {\n- max += 1;\n- newId = util.toBase36(max);\n-\n+ const rand = Math.floor(Math.random() * space);\n+ newId = util.toBase36(rand);\nisGoodId = !util.hasProfanity(newId) && !shortIds.includes(newId);\n}\n"
    },
    {
        "sim_msg": "Update jro_isr.py\nFilename typo correction for averaged drift data.",
        "sim_diff": "diff --git a/pysat/instruments/jro_isr.py b/pysat/instruments/jro_isr.py @@ -57,7 +57,7 @@ test_dates = {'':{'drifts':pysat.datetime(2010,1,19),\njro_fname1 = 'jro{year:4d}{month:02d}{day:02d}'\njro_fname2 = '.{version:03d}.hdf5'\nsupported_tags = {ss:{'drifts':jro_fname1 + \"drifts\" + jro_fname2,\n- 'drifts_ave':jro_fname1 + \"drifts_ave\" + jro_fname2,\n+ 'drifts_ave':jro_fname1 + \"drifts_avg\" + jro_fname2,\n'oblique_stan':jro_fname1 + jro_fname2,\n'oblique_rand':jro_fname1 + \"?\" + jro_fname2,\n'oblique_long':jro_fname1 + \"?\" + jro_fname2}\n",
        "org_diff": "diff --git a/package.json b/package.json \"scripts\": {\n\"beautify\": \"npm run prettier\",\n\"prettier\": \"prettier --write {__tests__,fixtures,models,one_shot_scripts,public,routes,serverjs,src,views}'/**/*.js' webpack.'*'.js\",\n+ \"prettier-master\": \"prettier --write $(git diff master --name-only | grep -E '.js$')\",\n+ \"prettier-head\": \"prettier --write $(git diff HEAD --name-only | grep -E '.js$')\",\n\"lint\": \"prettier --check {__tests__,fixtures,models,one_shot_scripts,public,routes,serverjs,src,views}'/**/*.js'\",\n\"nodemon\": \"nodemon --ignore src --ignore public\",\n\"webpack-dev-server\": \"webpack-dev-server --config webpack.dev.js\",\n"
    },
    {
        "sim_msg": "docs(readme): document Internet Explorer is no longer supported",
        "sim_diff": "diff --git a/README.md b/README.md @@ -41,6 +41,7 @@ parse('<p>Hello, World!</p>'); // React.createElement('p', {}, 'Hello, World!')\n- [htmlparser2](#htmlparser2)\n- [trim](#trim)\n- [Migration](#migration)\n+ - [v2.0.0](#v200)\n- [v1.0.0](#v100)\n- [FAQ](#faq)\n- [Is this XSS safe?](#is-this-xss-safe)\n@@ -370,6 +371,10 @@ parse('<p> </p>', { trim: true }); // React.createElement('p')\n## Migration\n+### v2.0.0\n+\n+Since [v2.0.0](https://github.com/remarkablemark/html-react-parser/releases/tag/v2.0.0), Internet Explorer (IE) is no longer supported.\n+\n### v1.0.0\nTypeScript projects will need to update the types in [v1.0.0](https://github.com/remarkablemark/html-react-parser/releases/tag/v1.0.0).\n",
        "org_diff": "diff --git a/README.md b/README.md **Note:** This is a **read-only mirror** of the formal [Gerrit](https://gerrit.hyperledger.org/r/#/admin/projects/cello) repository. Find more details at [Cello Wiki](https://wiki.hyperledger.org/projects/cello).\n-![Cello](docs/imgs/logo.png)\n+![Cello](docs/images/logo.png)\nHyperledger Cello is a blockchain provision and operation system, which helps manage blockchain networks in an efficient way.\n@@ -21,7 +21,7 @@ Using Cello, everyone can easily:\nA typical usage scenario is illustrated as:\n-![Typical Scenario](docs/imgs/scenario.png)\n+![Typical Scenario](docs/images/scenario.png)\n## Quick Start\n"
    },
    {
        "sim_msg": "Fixed bug related to purging negative objects for multislit near-IR.",
        "sim_diff": "diff --git a/pypeit/specobjs.py b/pypeit/specobjs.py @@ -212,7 +212,12 @@ class SpecObjs(object):\n\"\"\"\n# Assign the sign and the objids\nif self.nobj > 0:\n- index = (self.OBJID < 0) | (self.ECH_OBJID < 0)\n+ if self[0].PYPELINE == 'Echelle':\n+ index = self.ECH_OBJID < 0\n+ elif self[0].PYPELINE == 'MultiSlit':\n+ index = self.OBJID < 0\n+ else:\n+ msgs.error(\"Should not get here\")\nself.remove_sobj(index)\n",
        "org_diff": "diff --git a/sc2/proxy.py b/sc2/proxy.py @@ -170,7 +170,7 @@ class Proxy:\nwhile self.result is None:\nbot_alive = bot_process and bot_process.poll() is None\n- sc2_alive = self.controller.running and self.controller._process._process.poll() is None\n+ sc2_alive = self.controller.running\nif self.done or not (bot_alive and sc2_alive):\nlogger.info(\nf\"Proxy({self.port}): {self.player.name} died, \"\n"
    },
    {
        "sim_msg": "Remove unnecessary/problematic parameter",
        "sim_diff": "diff --git a/pysteps/optflow/lucaskanade.py b/pysteps/optflow/lucaskanade.py @@ -35,8 +35,6 @@ def dense_lucaskanade(R, **kwargs):\nnr_levels_LK : int\n0-based maximal pyramid level number.\nNot very sensitive parameter\n- max_speed : float\n- the maximum allowed speed [px/timestep]\nnr_IQR_outlier : int\nnr of IQR above median to consider the velocity vector as outlier and discard it\nsize_opening : int\n@@ -92,7 +90,6 @@ def dense_lucaskanade(R, **kwargs):\nblock_size_ST = kwargs.get(\"block_size_ST\", 15)\nwinsize_LK = kwargs.get(\"winsize_LK5\", (50, 50))\nnr_levels_LK = kwargs.get(\"nr_levels_LK\", 2)\n- max_speed = kwargs.get(\"max_speed\", 10)\nnr_IQR_outlier = kwargs.get(\"nr_IQR_outlier\", 3)\nsize_opening = kwargs.get(\"size_opening\", 3)\ndecl_grid = kwargs.get(\"decl_grid\", 20)\n@@ -150,7 +147,7 @@ def dense_lucaskanade(R, **kwargs):\n# exclude outlier vectors\nspeed = np.sqrt(u**2 + v**2) # [px/timesteps]\nq1, q2, q3 = np.percentile(speed, [25,50,75])\n- max_speed_thr = np.min((max_speed, q2 + nr_IQR_outlier*(q3 - q1))) # [px/timesteps]\n+ max_speed_thr = q2 + nr_IQR_outlier*(q3 - q1)) # [px/timesteps]\nmin_speed_thr = np.max((0,q2 - 2*(q3 - q1)))\nkeep = np.logical_and(speed < max_speed_thr, speed > min_speed_thr)\n",
        "org_diff": "diff --git a/sc2/unit.py b/sc2/unit.py @@ -397,6 +397,15 @@ class Unit:\n<= (self.radius + target.radius + unit_attack_range + bonus_distance) ** 2\n)\n+ def target_melee_in_range(self, target: \"Unit\", bonus_distance: Union[int, float] = 0) -> bool:\n+ \"\"\" Checks if the target is in melee range.\n+ Includes the target's radius when calculating distance to target.\n+ This function is ideal for checking if an scv is in range to repair a target. \"\"\"\n+ return (\n+ self._bot_object._distance_squared_unit_to_unit(self, target)\n+ <= (self.radius + target.radius + bonus_distance) ** 2\n+ )\n+\ndef in_ability_cast_range(\nself, ability_id: AbilityId, target: Union[\"Unit\", Point2], bonus_distance: float = 0\n) -> bool:\n"
    },
    {
        "sim_msg": "Test building the sdist\nThis should take care of preventing some packaging issues such as a missing\nsetup.py",
        "sim_diff": "diff --git a/.github/workflows/ci.yml b/.github/workflows/ci.yml @@ -21,6 +21,19 @@ jobs:\n- name: Run tox ${{ matrix.toxenv }}\nrun: tox -e ${{ matrix.toxenv }}\n+ build:\n+ runs-on: ubuntu-latest\n+ steps:\n+ - uses: actions/checkout@v2\n+ - name: Set up Python 3.7\n+ uses: actions/setup-python@v2\n+ with:\n+ python-version: 3.7\n+ - name: Install dependencies\n+ run: python -m pip install build\n+ - name: Build temporary sdist and wheel\n+ run: python -m build\n+\ntest:\ntimeout-minutes: 10\nruns-on: ${{ matrix.os }}\n",
        "org_diff": "diff --git a/.github/workflows/docker-ci.yml b/.github/workflows/docker-ci.yml @@ -29,6 +29,12 @@ jobs:\nsteps:\n- uses: actions/checkout@v1\n+ - name: Enable experimental docker features\n+ run: |\n+ sudo cat /etc/docker/daemon.json\n+ echo $'{\\n \"experimental\": true\\n}' | sudo tee /etc/docker/daemon.json\n+ sudo systemctl restart docker.service\n+\n- name: Run shell script\nrun: |\nexport VERSION_NUMBER=${{ env.VERSION_NUMBER }}\n"
    },
    {
        "sim_msg": "Finalized regex changes",
        "sim_diff": "diff --git a/arrow/parser.py b/arrow/parser.py @@ -32,9 +32,12 @@ class DateTimeParser(object):\n_TWO_DIGIT_RE = re.compile(r\"\\d{2}\")\n_THREE_DIGIT_RE = re.compile(r\"\\d{3}\")\n_FOUR_DIGIT_RE = re.compile(r\"\\d{4}\")\n- # TODO: +07 is not possible with colon, fix regex\n- _TZ_RE_ZZ = re.compile(r\"[+\\-]\\d{2}:(\\d{2})?|Z\")\n- _TZ_RE_Z = re.compile(r\"[+\\-]\\d{2}(\\d{2})?|Z\")\n+ # https://regex101.com/r/ifOZxu/4\n+ _TZ_RE_Z = re.compile(r\"([\\+\\-])(\\d{2})(?:(\\d{2}))?|Z\")\n+ # https://regex101.com/r/ifOZxu/5\n+ _TZ_RE_ZZ = re.compile(r\"([\\+\\-])(\\d{2})(?:\\:(\\d{2}))?|Z\")\n+ # _TZ_RE_ZZ = re.compile(r\"[\\+\\-]\\d{2}:(\\d{2})?|Z\")\n+ # _TZ_RE_Z = re.compile(r\"[\\+\\-]\\d{2}(\\d{2})?|Z\")\n_TZ_NAME_RE = re.compile(r\"\\w[\\w+\\-/]+\")\n_TIMESTAMP_RE = re.compile(r\"^\\d+\\.?\\d+$\")\n# TODO: test timestamp thoroughly\n@@ -159,7 +162,7 @@ class DateTimeParser(object):\nelse:\ndate_string, time_string = datetime_string.split(\"T\", 1)\n- time_parts = re.split(r\"[+\\-]\", time_string, 1)\n+ time_parts = re.split(r\"[\\+\\-]\", time_string, 1)\ncolon_count = time_parts[0].count(\":\")\nis_basic_time_format = colon_count == 0\n@@ -176,11 +179,12 @@ class DateTimeParser(object):\ntz_format = \"ZZ\"\n+ # TODO: use regex to determine if something is basic format\nhas_tz = len(time_parts) > 1\nhas_hours = len(time_parts[0]) == 2\nhas_minutes = colon_count == 1 or len(time_parts[0]) == 4\nhas_seconds = colon_count == 2 or len(time_parts[0]) == 6\n- has_subseconds = re.search(\"[.,]\", time_parts[0])\n+ has_subseconds = re.search(r\"[\\.,]\", time_parts[0])\nif has_subseconds:\ntime_string = \"HH:mm:ss{}S\".format(has_subseconds.group())\n@@ -255,7 +259,7 @@ class DateTimeParser(object):\n# Any number of S is the same as one.\n# TODO: allow users to specify the number of digits to parse\n- escaped_fmt = re.sub(\"S+\", \"S\", escaped_fmt)\n+ escaped_fmt = re.sub(r\"S+\", \"S\", escaped_fmt)\nescaped_data = re.findall(self._ESCAPE_RE, fmt)\n@@ -458,7 +462,8 @@ class DateTimeParser(object):\nclass TzinfoParser(object):\n# TODO: align this with the TZ_RE_Z and TZ_RE_ZZ above\n# TODO: test this REGEX\n- _TZINFO_RE = re.compile(r\"^([+\\-])?(\\d{2}):?(\\d{2})?$\")\n+ # https://regex101.com/r/ifOZxu/3\n+ _TZINFO_RE = re.compile(r\"^([\\+\\-])?(\\d{2})(?:\\:?(\\d{2}))?$\")\n@classmethod\ndef parse(cls, tzinfo_string):\n",
        "org_diff": "diff --git a/node_manager_daemon_fkie/src/node_manager_daemon_fkie/settings.py b/node_manager_daemon_fkie/src/node_manager_daemon_fkie/settings.py @@ -125,9 +125,8 @@ class Settings:\nresult = value\nelse:\nresult = value\n- except Exception as _exc:\n- pass\n- # print exc\n+ except Exception as exc:\n+ rospy.logdebug(\"Cant't get parameter '%s', full parameter path: '%s'\" % (utf8(exc), param_name))\nreturn result\ndef set_param(self, param_name, value, tag=':value'):\n@@ -155,8 +154,8 @@ class Settings:\n# create new parameter entry\ncfg_item[pname] = {val_tag: value}\nself.save()\n- except Exception as _exc:\n- pass\n+ except Exception as exc:\n+ rospy.logdebug(\"Cant't set parameter '%s', full parameter path: '%s'\" % (utf8(exc), param_name))\ndef reload(self):\n'''\n"
    },
    {
        "sim_msg": "resource: fix closing of event after waiting for an event",
        "sim_diff": "diff --git a/pyvisa/resources/resource.py b/pyvisa/resources/resource.py @@ -87,8 +87,8 @@ class WaitResponse:\ndef __del__(self) -> None:\nif self.event._context is not None:\ntry:\n- self.event.close()\nself._visalib.close(self.event._context)\n+ self.event.close()\nexcept errors.VisaIOError:\npass\n",
        "org_diff": "diff --git a/sc2/unit.py b/sc2/unit.py @@ -1191,7 +1191,7 @@ class Unit:\n@property\ndef weapon_ready(self) -> bool:\n\"\"\" Checks if the weapon is ready to be fired. \"\"\"\n- return self.weapon_cooldown < self._bot_object.client.game_step\n+ return self.weapon_cooldown == 0\n@property\ndef engaged_target_tag(self) -> int:\n"
    },
    {
        "sim_msg": "fix test freeze",
        "sim_diff": "diff --git a/tests/test_cli/test_freeze.py b/tests/test_cli/test_freeze.py @@ -29,6 +29,7 @@ import jsonschema\nfrom jsonschema import Draft4Validator\nfrom aea.cli import cli\n+from aea.configurations.loader import make_jsonschema_base_uri\nfrom aea.test_tools.click_testing import CliRunner\nfrom ..conftest import (\n@@ -47,7 +48,7 @@ class TestFreeze:\n\"\"\"Set the test up.\"\"\"\ncls.schema = json.load(open(AGENT_CONFIGURATION_SCHEMA))\ncls.resolver = jsonschema.RefResolver(\n- \"file://{}/\".format(Path(CONFIGURATION_SCHEMA_DIR).absolute()), cls.schema\n+ make_jsonschema_base_uri(Path(CONFIGURATION_SCHEMA_DIR)), cls.schema\n)\ncls.validator = Draft4Validator(cls.schema, resolver=cls.resolver)\n",
        "org_diff": "diff --git a/rasa_core_sdk/endpoint.py b/rasa_core_sdk/endpoint.py @@ -11,7 +11,7 @@ from flask_cors import CORS, cross_origin\nfrom gevent.pywsgi import WSGIServer\nfrom rasa_core_sdk.executor import ActionExecutor\n-from rasa_core.utils import ActionExecutionError\n+from rasa_core.actions.action import ActionExecutionError\nDEFAULT_SERVER_PORT = 5055\n"
    },
    {
        "sim_msg": "simplify patterns",
        "sim_diff": "diff --git a/src/genie/libs/parser/junos/show_ospf3.py b/src/genie/libs/parser/junos/show_ospf3.py @@ -578,7 +578,7 @@ class ShowOspf3InterfaceExtensive(ShowOspf3InterfaceExtensiveSchema):\nret_dict = {}\n# ge-0/0/0.0 PtToPt 0.0.0.8 0.0.0.0 0.0.0.0 1\n- p1 = re.compile(r'^(?P<interface_name>\\S+)( +)(?P<ospf_interface_state>\\S+)( +)(?P<ospf_area>[0-9]{1,3}(\\.[0-9]{1,3}){3})( +)(?P<dr_id>[0-9]{1,3}(\\.[0-9]{1,3}){3})( +)(?P<bdr_id>[0-9]{1,3}(\\.[0-9]{1,3}){3})( +)(?P<neighbor_count>\\d+)$')\n+ p1 = re.compile(r'^(?P<interface_name>\\S+)( +)(?P<ospf_interface_state>\\S+)( +)(?P<ospf_area>[\\d\\.]+)( +)(?P<dr_id>[\\d\\.]+)( +)(?P<bdr_id>[\\d\\.]+)( +)(?P<neighbor_count>\\d+)$')\n# Address fe80::250:56ff:fe8d:c829, Prefix-length 64\np2 = re.compile(r'Address( +)(?P<interface_address>\\S+),( +)Prefix-length( +)(?P<prefix_length>\\d+)')\n",
        "org_diff": "diff --git a/docs/setup_worker_docker.md b/docs/setup_worker_docker.md @@ -79,4 +79,10 @@ $ docker run -d -v /var/run/docker.sock:/var/run/docker.sock -p 127.0.0.1:2375:2\n$ docker -H 127.0.0.1:2375 info\n```\n+And users can use `0.0.0.0` to replace `127.0.0.1` to make sure Master can reach Worker Node through this port, as Ubuntu.\n+\n+```bash\n+$ docker run -d -v /var/run/docker.sock:/var/run/docker.sock -p 0.0.0.0:2375:2375 bobrik/socat TCP-LISTEN:2375,fork UNIX-CONNECT:/var/run/docker.sock\n+```\n+\n<a rel=\"license\" href=\"http://creativecommons.org/licenses/by/4.0/\"><img alt=\"Creative Commons License\" style=\"border-width:0\" src=\"https://i.creativecommons.org/l/by/4.0/88x31.png\" /></a><br />This work is licensed under a <a rel=\"license\" href=\"http://creativecommons.org/licenses/by/4.0/\">Creative Commons Attribution 4.0 International License</a>.\n"
    },
    {
        "sim_msg": "Set workshops, IT seats based on variant\nChange values in \"workshops without admin fee\" and \"public instructor\ntraining seats\" fields based on preconfigured configuration.\nConfiguration depends on membership variant. When user changes selected\nvariant to any of the supported ones, the field values will be changed.",
        "sim_diff": "diff --git a/amy/static/membership_create.js b/amy/static/membership_create.js @@ -10,4 +10,30 @@ jQuery(function() {\nid_name.val(fullname);\n}\n});\n+\n+ $('#id_variant').on('change', (e) => {\n+ const parameters = {\n+ bronze: {\n+ it_seats_public: 0,\n+ workshops: 2\n+ },\n+ silver: {\n+ it_seats_public: 6,\n+ workshops: 4\n+ },\n+ gold: {\n+ it_seats_public: 15,\n+ workshops: 6\n+ }\n+ };\n+\n+ const publicInstructorTrainingSeats = $(\"#id_public_instructor_training_seats\");\n+ const workshopsWithoutAdminFee = $(\"#id_workshops_without_admin_fee_per_agreement\");\n+\n+ if (e.target.value in parameters) {\n+ // set values from parameters\n+ publicInstructorTrainingSeats.val(parameters[e.target.value].it_seats_public);\n+ workshopsWithoutAdminFee.val(parameters[e.target.value].workshops);\n+ }\n+ });\n});\n",
        "org_diff": "diff --git a/routes/cube_routes.js b/routes/cube_routes.js @@ -1603,7 +1603,10 @@ router.post('/startsealed/:id', body('packs').toInt({ min: 1, max: 16 }), body('\nconst numCards = packs * cards;\n- const cube = await Cube.findOne(buildIdQuery(req.params.id), '_id name draft_formats card_count type cards owner');\n+ const cube = await Cube.findOne(\n+ buildIdQuery(req.params.id),\n+ '_id name draft_formats card_count type cards owner numDecks',\n+ );\nif (!cube) {\nreq.flash('danger', 'Cube not found');\n"
    },
    {
        "sim_msg": "adding jasmine tests for camera init",
        "sim_diff": "diff --git a/test/jasmine/tests/gl3d_plot_interact_test.js b/test/jasmine/tests/gl3d_plot_interact_test.js @@ -392,6 +392,122 @@ describe('Test gl3d plots', function() {\n.then(done);\n});\n+ it('@gl should set the camera dragmode to orbit if the camera.up.z vector is set to be tilted', function(done) {\n+ Plotly.plot(gd, {\n+ data: [{\n+ type: 'scatter3d',\n+ x: [1, 2, 3],\n+ y: [2, 3, 1],\n+ z: [3, 1, 2]\n+ }],\n+ layout: {\n+ scene: {\n+ camera: {\n+ up: { x:-0.5777, y:-0.5777, z:0.5777 }\n+ }\n+ }\n+ }\n+ })\n+ .then(delay(20))\n+ .then(function() {\n+ expect(gd._fullLayout.scene.dragmode === 'orbit').toBe(true);\n+ })\n+ .then(done);\n+ });\n+\n+ it('@gl should set the camera dragmode to turntable if the camera.up.z vector is set to be upwards', function(done) {\n+ Plotly.plot(gd, {\n+ data: [{\n+ type: 'scatter3d',\n+ x: [1, 2, 3],\n+ y: [2, 3, 1],\n+ z: [3, 1, 2]\n+ }],\n+ layout: {\n+ scene: {\n+ camera: {\n+ up: { x:0, y:0, z:100 }\n+ }\n+ }\n+ }\n+ })\n+ .then(delay(20))\n+ .then(function() {\n+ expect(gd._fullLayout.scene.dragmode === 'turntable').toBe(true);\n+ })\n+ .then(done);\n+ });\n+\n+ it('@gl should set the camera dragmode to turntable if the camera.up is not set', function(done) {\n+ Plotly.plot(gd, {\n+ data: [{\n+ type: 'scatter3d',\n+ x: [1, 2, 3],\n+ y: [2, 3, 1],\n+ z: [3, 1, 2]\n+ }],\n+ layout: {\n+ scene: {\n+ camera: {\n+ eye: { x:1, y:1, z:1 },\n+ center: { x:0, y:0, z:0 }\n+ }\n+ }\n+ }\n+ })\n+ .then(delay(20))\n+ .then(function() {\n+ expect(gd._fullLayout.scene.dragmode === 'turntable').toBe(true);\n+ })\n+ .then(done);\n+ });\n+\n+ it('@gl should set the camera dragmode to turntable if any of camera.up.[x|y|z] is missing', function(done) {\n+ Plotly.plot(gd, {\n+ data: [{\n+ type: 'scatter3d',\n+ x: [1, 2, 3],\n+ y: [2, 3, 1],\n+ z: [3, 1, 2]\n+ }],\n+ layout: {\n+ scene: {\n+ camera: {\n+ up: { x:null, z:0 }\n+ }\n+ }\n+ }\n+ })\n+ .then(delay(20))\n+ .then(function() {\n+ expect(gd._fullLayout.scene.dragmode === 'turntable').toBe(true);\n+ })\n+ .then(done);\n+ });\n+\n+ it('@gl should set the camera dragmode to turntable if all camera.up.[x|y|z] are zero or missing', function(done) {\n+ Plotly.plot(gd, {\n+ data: [{\n+ type: 'scatter3d',\n+ x: [1, 2, 3],\n+ y: [2, 3, 1],\n+ z: [3, 1, 2]\n+ }],\n+ layout: {\n+ scene: {\n+ camera: {\n+ up: { x:0, y:0, z:0 }\n+ }\n+ }\n+ }\n+ })\n+ .then(delay(20))\n+ .then(function() {\n+ expect(gd._fullLayout.scene.dragmode === 'turntable').toBe(true);\n+ })\n+ .then(done);\n+ });\n+\nit('@gl should be able to reversibly change trace type', function(done) {\nvar _mock = Lib.extendDeep({}, mock2);\nvar sceneLayout = { aspectratio: { x: 1, y: 1, z: 1 }, dragmode: 'turntable' };\n@@ -405,6 +521,7 @@ describe('Test gl3d plots', function() {\nexpect(gd.layout.yaxis === undefined).toBe(true);\nexpect(gd._fullLayout._has('gl3d')).toBe(true);\nexpect(gd._fullLayout.scene._scene).toBeDefined();\n+ expect(gd._fullLayout.scene._scene.camera).toBeDefined(true);\nreturn Plotly.restyle(gd, 'type', 'scatter');\n})\n",
        "org_diff": "diff --git a/models/cube.js b/models/cube.js @@ -17,11 +17,13 @@ let cubeSchema = mongoose.Schema({\n},\nowner: {\ntype: String,\n- required: true\n+ required: true,\n+ index: true\n},\nisListed: {\ntype: Boolean,\n- default: true\n+ default: true,\n+ index: true\n},\nprivatePrices: {\ntype: Boolean,\n@@ -29,7 +31,8 @@ let cubeSchema = mongoose.Schema({\n},\nisFeatured: {\ntype: Boolean,\n- default: false\n+ default: false,\n+ index: true\n},\ncards: [{\ntags: [String],\n@@ -62,14 +65,4 @@ let cubeSchema = mongoose.Schema({\ndraft_formats: {}\n});\n-// Indexes for home page queries\n-cubeSchema.index({\n- isFeatured: 1,\n-});\n-\n-cubeSchema.index({\n- owner: 1,\n- isListed: 1,\n-});\n-\nlet Cube = module.exports = mongoose.model('Cube', cubeSchema)\n"
    },
    {
        "sim_msg": "converting to use switch",
        "sim_diff": "diff --git a/jax/_src/scipy/linalg.py b/jax/_src/scipy/linalg.py @@ -289,28 +289,20 @@ def _calc_P_Q(A):\nA_L1 = np_linalg.norm(A,1)\nn_squarings = 0\nif A.dtype == 'float64' or A.dtype == 'complex128':\n- U3, V3 = _pade3(A)\n- U5, V5 = _pade5(A)\n- U7, V7 = _pade7(A)\n- U9, V9 = _pade9(A)\nmaxnorm = 5.371920351148152\nn_squarings = jnp.maximum(0, jnp.floor(jnp.log2(A_L1 / maxnorm)))\nA = A / 2**n_squarings\n- U13, V13 = _pade13(A)\nconds = jnp.array([1.495585217958292e-002, 2.539398330063230e-001,\n- 9.504178996162932e-001, 2.097847961257068e+000])\n- U = jnp.select((A_L1 < conds), (U3, U5, U7, U9), U13)\n- V = jnp.select((A_L1 < conds), (V3, V5, V7, V9), V13)\n+ 9.504178996162932e-001, 2.097847961257068e+000, jnp.inf])\n+ idx = jnp.argmax(A_L1 < conds)\n+ U, V = lax.switch(idx, [_pade3, _pade5, _pade7, _pade9, _pade13])\nelif A.dtype == 'float32' or A.dtype == 'complex64':\n- U3,V3 = _pade3(A)\n- U5,V5 = _pade5(A)\nmaxnorm = 3.925724783138660\nn_squarings = jnp.maximum(0, jnp.floor(jnp.log2(A_L1 / maxnorm)))\nA = A / 2**n_squarings\n- U7,V7 = _pade7(A)\n- conds = jnp.array([4.258730016922831e-001, 1.880152677804762e+000])\n- U = jnp.select((A_L1 < conds), (U3, U5), U7)\n- V = jnp.select((A_L1 < conds), (V3, V5), V7)\n+ conds = jnp.array([4.258730016922831e-001, 1.880152677804762e+000, jnp.inf])\n+ idx = jnp.argmax(A_L1 < conds)\n+ U, V = lax.switch(idx, [_pade3, _pade5, _pade7])\nelse:\nraise TypeError(\"A.dtype={} is not supported.\".format(A.dtype))\nP = U + V # p_m(A) : numerator\n",
        "org_diff": "diff --git a/sc2/unit.py b/sc2/unit.py @@ -357,6 +357,14 @@ class Unit:\nspeed *= SPEED_ALTERING_BUFFS.get(buff, 1)\nreturn speed\n+ @property\n+ def distance_per_step(self) -> float:\n+ return (self.real_speed/22.4) * self._bot_object.client.game_step\n+\n+ @property\n+ def distance_to_weapon_ready(self) -> float:\n+ return (self.real_speed / 22.4) * self.weapon_cooldown\n+\n@property\ndef is_mineral_field(self) -> bool:\n\"\"\" Checks if the unit is a mineral field. \"\"\"\n@@ -1177,6 +1185,10 @@ class Unit:\nreturn self._proto.weapon_cooldown\nreturn -1\n+ @property\n+ def weapon_ready(self) -> bool:\n+ return self.weapon_cooldown < self._bot_object.client.game_step\n+\n@property\ndef engaged_target_tag(self) -> int:\n# TODO What does this do?\n"
    },
    {
        "sim_msg": "Centos docker fixes\nInstall python-devel for SWIG\nInstall SWIG from sources b/c yum has an ancient version",
        "sim_diff": "diff --git a/Dockerfile-build-centos7.in b/Dockerfile-build-centos7.in @@ -40,8 +40,9 @@ COPY scripts/gcc_wrapper.sh /opt/h2oai/gcc_wrapper/ARCH_SUBST-conda_cos6-linux-g\nENV PATH=/opt/h2oai/gcc_wrapper:$PATH\nRUN ln /usr/bin/ar $LLVM4/bin/ARCH_SUBST-conda_cos6-linux-gnu-ar\n+RUN yum install -y python-devel\n-RUN yum install -y swig atlas-devel blas-devel && \\\n+RUN yum install -y atlas-devel blas-devel && \\\nln /usr/lib64/libgfortran.so.3 /usr/lib64/libgfortran.so && \\\nwget http://github.com/xianyi/OpenBLAS/archive/v0.2.20.tar.gz && \\\ntar xvf v0.2.20.tar.gz && \\\n@@ -72,6 +73,17 @@ RUN \\\ncd $HOME && \\\nrm -rf cmake-3*\n+# Install SWIG b/c yum has old versions\n+RUN \\\n+ wget https://sourceforge.net/projects/swig/files/swig/swig-3.0.12/swig-3.0.12.tar.gz && \\\n+ tar -zxvf swig-3.0.12.tar.gz && \\\n+ cd swig-3.0.12 && \\\n+ ./configure --prefix=/usr && \\\n+ make -j 4 && \\\n+ make install && \\\n+ cd $HOME && \\\n+ rm -rf swig-3*\n+\nRUN bash -c 'if [ `arch` = \"ppc64le\" ]; then \\\ngit clone https://github.com/apache/arrow.git && \\\ncd $HOME/arrow/cpp && \\\n",
        "org_diff": "diff --git a/src/agent/ansible/README.md b/src/agent/ansible/README.md @@ -33,12 +33,13 @@ need to do should be identical.\nsudo apt-get update\nsudo apt-get install python-dev python-pip libssl-dev libffi-dev -y\nsudo pip install --upgrade pip\n- sudo pip install six==1.10.0\n- sudo pip install ansible==2.3.0.0\n+ sudo pip install 'ansible>=2.3.0.0'\ngit clone https://gerrit.hyperledger.org/r/cello\nAll the following work assumed that you are in cello/src/agent/ansible directory\n+Supported ansible versions are 2.3.0.0 or greater.\n+\n## Deploy hyperledger fabric onto different environment\n### On VirtualBox::\n"
    },
    {
        "sim_msg": "Update scibite ingest to use new 1.6 files",
        "sim_diff": "diff --git a/kg_covid_19/transform_utils/scibite_cord/scibite_cord.py b/kg_covid_19/transform_utils/scibite_cord/scibite_cord.py @@ -54,7 +54,8 @@ class ScibiteCordTransform(Transform):\n\"\"\"\ndata_files = list()\nif not data_file:\n- data_files.append(os.path.join(self.input_base_dir, \"pdf_json.zip\"))\n+ data_files.append(os.path.join(self.input_base_dir, \"pdf_json_part1.zip\"))\n+ data_files.append(os.path.join(self.input_base_dir, \"pdf_json_part2.zip\"))\ndata_files.append(os.path.join(self.input_base_dir, \"pmc_json.zip\"))\ndata_files.append(os.path.join(self.input_base_dir, \"cv19_scc_1_2.zip\"))\n@@ -77,20 +78,23 @@ class ScibiteCordTransform(Transform):\ndef parse_annotations(self, node_handle: Any, edge_handle: Any,\ndata_file1: str,\n- data_file2: str) -> None:\n+ data_file2: str,\n+ data_file3: str\n+ ) -> None:\n\"\"\"Parse annotations from CORD-19_1_5.zip.\nArgs:\nnode_handle: File handle for nodes.csv.\nedge_handle: File handle for edges.csv.\n- data_file1: Path to first CORD-19_1_5.zip.\n- data_file2: Path to second CORD-19_1_5.zip.\n+ data_file1: Path to pdf_json_part_1.zip\n+ data_file2: Path to pdf_json_part_2.zip\n+ data_file2: Path to pmc_json.zip\nReturns:\nNone.\n\"\"\"\n- pbar = tqdm(total=2, desc=\"Unzipping files\")\n+ pbar = tqdm(total=3, desc=\"Unzipping files\")\n# unzip to tmpdir, remove after use, to avoid cluttering raw/ with processed\n# data\n@@ -99,9 +103,11 @@ class ScibiteCordTransform(Transform):\npbar.update(1)\nunzip_to_tempdir(data_file2, tmpdir);\npbar.update(1)\n+ unzip_to_tempdir(data_file3, tmpdir);\n+ pbar.update(1)\npbar.close()\n- subsets = ['pmc_json', 'pdf_json']\n+ subsets = ['pmc_json', 'pdf_json_part_1 ', 'pdf_json_part_2']\nfor subset in subsets:\nsubset_dir = os.path.join(tmpdir, subset)\nfor filename in tqdm(os.listdir(subset_dir)):\n",
        "org_diff": "diff --git a/src/pages/CardPage.js b/src/pages/CardPage.js @@ -46,7 +46,7 @@ import Tab from 'components/Tab';\nimport { cardPrice, cardFoilPrice, cardPriceEur, cardTix, cardElo } from 'utils/Card';\nimport { getTCGLink, getCardMarketLink, getCardHoarderLink, getCardKingdomLink } from 'utils/Affiliate';\n-import { CheckIcon, ClippyIcon } from '@primer/octicons-react';\n+import { ArrowSwitchIcon, CheckIcon, ClippyIcon } from '@primer/octicons-react';\nconst AutocardA = withAutocard('a');\nconst AddModal = withModal(Button, AddToCubeModal);\n@@ -250,6 +250,7 @@ const CardPage = ({ user, card, data, versions, related, cubes, loginCallback })\n<ImageFallback className=\"w-100\" src={imageUsed} fallbackSrc=\"/content/default_card.png\" alt={card.name} />\n{card.image_flip && (\n<Button\n+ className=\"mt-1\"\ncolor=\"success\"\noutline\nblock\n@@ -261,7 +262,7 @@ const CardPage = ({ user, card, data, versions, related, cubes, loginCallback })\n}\n}}\n>\n- Flip\n+ <ArrowSwitchIcon size={16} /> Transform\n</Button>\n)}\n<CardBody className=\"breakdown p-1\">\n"
    },
    {
        "sim_msg": "Set workshops, IT seats based on variant\nChange values in \"workshops without admin fee\" and \"public instructor\ntraining seats\" fields based on preconfigured configuration.\nConfiguration depends on membership variant. When user changes selected\nvariant to any of the supported ones, the field values will be changed.",
        "sim_diff": "diff --git a/amy/static/membership_create.js b/amy/static/membership_create.js @@ -10,4 +10,30 @@ jQuery(function() {\nid_name.val(fullname);\n}\n});\n+\n+ $('#id_variant').on('change', (e) => {\n+ const parameters = {\n+ bronze: {\n+ it_seats_public: 0,\n+ workshops: 2\n+ },\n+ silver: {\n+ it_seats_public: 6,\n+ workshops: 4\n+ },\n+ gold: {\n+ it_seats_public: 15,\n+ workshops: 6\n+ }\n+ };\n+\n+ const publicInstructorTrainingSeats = $(\"#id_public_instructor_training_seats\");\n+ const workshopsWithoutAdminFee = $(\"#id_workshops_without_admin_fee_per_agreement\");\n+\n+ if (e.target.value in parameters) {\n+ // set values from parameters\n+ publicInstructorTrainingSeats.val(parameters[e.target.value].it_seats_public);\n+ workshopsWithoutAdminFee.val(parameters[e.target.value].workshops);\n+ }\n+ });\n});\n",
        "org_diff": "diff --git a/routes/cube_routes.js b/routes/cube_routes.js @@ -4289,7 +4289,7 @@ router.get(\n'/api/date_updated/:id',\nutil.wrapAsyncApi(async (req, res) => {\nconst { id } = req.params;\n- const result = await Cube.findOne(buildIdQuery(id), { date_updated: 1, _id: 0 }).lean();\n+ const result = await Cube.findOne(buildIdQuery(id), 'date_updated').lean();\nif (!result) {\nreturn res.status(404).send({\nsuccess: 'false',\n"
    },
    {
        "sim_msg": "update test_knn",
        "sim_diff": "diff --git a/python/jittor/test/test_knn.py b/python/jittor/test/test_knn.py @@ -44,7 +44,8 @@ class TestKnnOp(unittest.TestCase):\na2 *= -1\nnp.testing.assert_allclose(a1.data, a2.data, atol=1e-4)\n- jt.flags.use_cuda = 1\n+ if jt.has_cuda:\n+ with jt.flag_scope(use_cuda=1):\njt_a = jt.randn(32,512,3)\na1, b1 = jt.misc.knn(jt_a, jt_a, 16)\na2, b2 = knn(jt_a.transpose(0,2,1), 16)\n",
        "org_diff": "diff --git a/fkie_node_manager/src/fkie_node_manager/editor/text_search_thread.py b/fkie_node_manager/src/fkie_node_manager/editor/text_search_thread.py @@ -140,7 +140,7 @@ class TextSearchThread(QObject, threading.Thread):\nnew_dict = dict(args)\nnew_dict.update(include_args)\n# test search string for 'name=' and skip search in not launch files\n- if self._only_launch or inc_path.endswith('.launch') or path.find('.launch.') > 0:\n+ if not self._only_launch or inc_path.endswith('.launch') or path.find('.launch.') > 0:\nself.search(search_text, inc_path, recursive, new_dict, count + 1)\nif self._path == path and self._found == 0:\nself.warning_signal.emit(\"not found '%s' in %s (%srecursive)\" % (search_text, path, '' if recursive else 'not '))\n"
    },
    {
        "sim_msg": "simplify patterns",
        "sim_diff": "diff --git a/src/genie/libs/parser/junos/show_ospf3.py b/src/genie/libs/parser/junos/show_ospf3.py @@ -578,7 +578,7 @@ class ShowOspf3InterfaceExtensive(ShowOspf3InterfaceExtensiveSchema):\nret_dict = {}\n# ge-0/0/0.0 PtToPt 0.0.0.8 0.0.0.0 0.0.0.0 1\n- p1 = re.compile(r'^(?P<interface_name>\\S+)( +)(?P<ospf_interface_state>\\S+)( +)(?P<ospf_area>[0-9]{1,3}(\\.[0-9]{1,3}){3})( +)(?P<dr_id>[0-9]{1,3}(\\.[0-9]{1,3}){3})( +)(?P<bdr_id>[0-9]{1,3}(\\.[0-9]{1,3}){3})( +)(?P<neighbor_count>\\d+)$')\n+ p1 = re.compile(r'^(?P<interface_name>\\S+)( +)(?P<ospf_interface_state>\\S+)( +)(?P<ospf_area>[\\d\\.]+)( +)(?P<dr_id>[\\d\\.]+)( +)(?P<bdr_id>[\\d\\.]+)( +)(?P<neighbor_count>\\d+)$')\n# Address fe80::250:56ff:fe8d:c829, Prefix-length 64\np2 = re.compile(r'Address( +)(?P<interface_address>\\S+),( +)Prefix-length( +)(?P<prefix_length>\\d+)')\n",
        "org_diff": "diff --git a/src/pages/LandingPage.js b/src/pages/LandingPage.js @@ -5,8 +5,12 @@ import { Row, Col, Button } from 'reactstrap';\nimport RenderToRoot from 'utils/RenderToRoot';\nimport Footer from 'layouts/Footer';\n+import LoginModal from 'components/LoginModal';\n+import withModal from 'components/WithModal';\nimport CardSearchBar from 'components/CardSearchBar';\n+const LoginModalButton = withModal(Button, LoginModal);\n+\nconst LandingPage = ({ numusers, numcubes, numdrafts }) => {\nreturn (\n<div className=\"flex-container flex-vertical viewport\">\n@@ -29,12 +33,12 @@ const LandingPage = ({ numusers, numcubes, numdrafts }) => {\n<strong>{numdrafts}</strong>\n{' Completed Drafts'}\n</h5>\n- <Button className=\"landing-btn my-3\" color=\"success\">\n+ <Button href=\"/user/register\" className=\"landing-btn my-3\" color=\"success\">\nSign Up\n</Button>\n- <Button className=\"landing-btn mb-3\" color=\"success\" outline>\n+ <LoginModalButton className=\"landing-btn mb-3\" color=\"success\" outline>\nLogin\n- </Button>\n+ </LoginModalButton>\n</div>\n<Footer />\n</Col>\n"
    },
    {
        "sim_msg": "[pgr] fix (galleryItem): remove webp support (is covered by image-client-api)",
        "sim_diff": "diff --git a/pro-gallery-renderer/src/components/item/galleryItem.js b/pro-gallery-renderer/src/components/item/galleryItem.js @@ -553,10 +553,10 @@ class GalleryItem {\nurls.thumb = this.resizeUrlImp(this.url, 'fit', thumbSize, thumbSize, sharpParams, showFaces, true, fp);\n}\n- if (window.isWebpSupported && !utils.isStoreGallery()) {\n- urls.thumb = urls.thumb.replace(/\\.jpg$/i, '.webp');\n- urls.img = urls.img.replace(/\\.jpg$/i, '.webp');\n- }\n+ // if (window.isWebpSupported && !utils.isStoreGallery()) {\n+ // urls.thumb = urls.thumb.replace(/\\.jpg$/i, '.webp');\n+ // urls.img = urls.img.replace(/\\.jpg$/i, '.webp');\n+ // }\nreturn urls;\n}\n",
        "org_diff": "diff --git a/routes/cube_routes.js b/routes/cube_routes.js @@ -1642,10 +1642,14 @@ router.post('/editoverview/:id', ensureAuth, function(req, res) {\nreq.flash('danger', 'Cube name should not use profanity.');\nres.redirect('/cube/overview/' + req.params.id);\n} else {\n+ let urlAliasMaxLength = 100;\nif (req.body.urlAlias && cube.urlAlias !== req.body.urlAlias) {\nif (!req.body.urlAlias.match(/^[0-9a-zA-Z_]*$/)) {\nreq.flash('danger', 'Custom URL must contain only alphanumeric characters or underscores.');\nres.redirect('/cube/overview/' + req.params.id);\n+ } else if (req.body.urlAlias.length > urlAliasMaxLength) {\n+ req.flash('danger', 'Custom URL may not be longer than ' + urlAliasMaxLength + ' characters.');\n+ res.redirect('/cube/overview/' + req.params.id);\n} else {\nif (util.has_profanity(req.body.urlAlias)) {\nreq.flash('danger', 'Custom URL may not contain profanity.');\n"
    },
    {
        "sim_msg": "simplify patterns",
        "sim_diff": "diff --git a/src/genie/libs/parser/junos/show_ospf3.py b/src/genie/libs/parser/junos/show_ospf3.py @@ -578,7 +578,7 @@ class ShowOspf3InterfaceExtensive(ShowOspf3InterfaceExtensiveSchema):\nret_dict = {}\n# ge-0/0/0.0 PtToPt 0.0.0.8 0.0.0.0 0.0.0.0 1\n- p1 = re.compile(r'^(?P<interface_name>\\S+)( +)(?P<ospf_interface_state>\\S+)( +)(?P<ospf_area>[0-9]{1,3}(\\.[0-9]{1,3}){3})( +)(?P<dr_id>[0-9]{1,3}(\\.[0-9]{1,3}){3})( +)(?P<bdr_id>[0-9]{1,3}(\\.[0-9]{1,3}){3})( +)(?P<neighbor_count>\\d+)$')\n+ p1 = re.compile(r'^(?P<interface_name>\\S+)( +)(?P<ospf_interface_state>\\S+)( +)(?P<ospf_area>[\\d\\.]+)( +)(?P<dr_id>[\\d\\.]+)( +)(?P<bdr_id>[\\d\\.]+)( +)(?P<neighbor_count>\\d+)$')\n# Address fe80::250:56ff:fe8d:c829, Prefix-length 64\np2 = re.compile(r'Address( +)(?P<interface_address>\\S+),( +)Prefix-length( +)(?P<prefix_length>\\d+)')\n",
        "org_diff": "diff --git a/src/components/CubeOverviewModal.js b/src/components/CubeOverviewModal.js @@ -26,13 +26,10 @@ class CubeOverviewModal extends Component {\nconstructor(props) {\nsuper(props);\n- props.cube.descriptionhtml= props.cube.descriptionhtml && props.cube.descriptionhtml !== 'undefined' ? props.cube.descriptionhtml : props.cube.description;\n-\nthis.state = {\nisOpen: false,\ntags: props.cube.tags.map((tag) => ({ id: tag, text: tag })),\ncube: JSON.parse(JSON.stringify(props.cube)),\n- description: props.cube.descriptionhtml,\nimage_dict: {},\n};\n@@ -224,7 +221,6 @@ class CubeOverviewModal extends Component {\nrender() {\nconst { cube, cubeID, tags, isOpen } = this.state;\n- console.log(cube);\nreturn (\n<>\n<a className=\"nav-link\" href=\"#\" onClick={this.open}>\n@@ -372,7 +368,7 @@ class CubeOverviewModal extends Component {\n<h6>Description</h6>\n<TextEntry\nname=\"blog\"\n- value={this.state.cube.descriptionhtml}\n+ value={cube.descriptionhtml && cube.descriptionhtml !== 'undefined' ? cube.descriptionhtml :cube.description}\nonChange={this.handleDescriptionChange}\n/>\n<br />\n"
    },
    {
        "sim_msg": "Update regex to support a wider variety of email addresses.",
        "sim_diff": "diff --git a/src/core/operations/ExtractEmailAddresses.mjs b/src/core/operations/ExtractEmailAddresses.mjs @@ -39,8 +39,8 @@ class ExtractEmailAddresses extends Operation {\n*/\nrun(input, args) {\nconst displayTotal = args[0],\n- // email regex from: https://www.regular-expressions.info/email.html\n- regex = /\\b[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}\\b/ig;\n+ // email regex from: https://www.regextester.com/98066\n+ regex = /(?:[\\u00A0-\\uD7FF\\uE000-\\uFFFF-a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[\\u00A0-\\uD7FF\\uE000-\\uFFFF-a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[\\u00A0-\\uD7FF\\uE000-\\uFFFF-a-z0-9](?:[\\u00A0-\\uD7FF\\uE000-\\uFFFF-a-z0-9-]*[\\u00A0-\\uD7FF\\uE000-\\uFFFF-a-z0-9])?\\.)+[\\u00A0-\\uD7FF\\uE000-\\uFFFF-a-z0-9](?:[\\u00A0-\\uD7FF\\uE000-\\uFFFF-a-z0-9-]*[\\u00A0-\\uD7FF\\uE000-\\uFFFF-a-z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/ig;\nreturn search(input, regex, null, displayTotal);\n}\n",
        "org_diff": "diff --git a/serverjs/updatecards.js b/serverjs/updatecards.js @@ -412,7 +412,7 @@ var specialCaseCardsList = {\"Outlaws' Merriment\":[{\n//the cards below are transform cards that are on here due to the way\n//we currently do not populate the oracle text of transform cards.\n\"Arlinn Kord\":[{\n- tokenId: \"94ed2eca-1579-411d-af6f-c7359c65de30\"\n+ tokenId: \"88452ed7-1065-41c3-94a6-dc41108c45c1\"\n}],\n\"Bloodline Keeper\":[{\ntokenId: \"71496671-f7ba-4014-a895-d70a27979db7\"\n@@ -427,7 +427,7 @@ var specialCaseCardsList = {\"Outlaws' Merriment\":[{\ntokenId: \"11d25bde-a303-4b06-a3e1-4ad642deae58\"\n}],\n\"Garruk Relentless\":[{\n- tokenId: \"94ed2eca-1579-411d-af6f-c7359c65de30\"\n+ tokenId: \"88452ed7-1065-41c3-94a6-dc41108c45c1\"\n},{\ntokenId: \"7a49607c-427a-474c-ad77-60cd05844b3c\"\n}],\n@@ -438,7 +438,7 @@ var specialCaseCardsList = {\"Outlaws' Merriment\":[{\ntokenId: \" 94ed2eca-1579-411d-af6f-c7359c65de30\"\n}],\n\"Huntmaster of the Fells\":[{\n- tokenId: \"94ed2eca-1579-411d-af6f-c7359c65de30\"\n+ tokenId: \"88452ed7-1065-41c3-94a6-dc41108c45c1\"\n}],\n\"Legion's Landing\":[{\ntokenId: \"09293ae7-0629-417b-9eda-9bd3f6d8e118\"\n"
    },
    {
        "sim_msg": "chore: send file size to uppy server",
        "sim_diff": "diff --git a/src/plugins/Tus10.js b/src/plugins/Tus10.js @@ -151,7 +151,8 @@ module.exports = class Tus10 extends Plugin {\n},\nbody: JSON.stringify(Object.assign({}, file.remote.body, {\nendpoint: this.opts.endpoint,\n- protocol: 'tus'\n+ protocol: 'tus',\n+ size: file.data.size\n}))\n})\n.then((res) => {\n",
        "org_diff": "diff --git a/routes/cube_routes.js b/routes/cube_routes.js @@ -881,7 +881,7 @@ router.get('/analysis/:id', async (req, res) => {\naddedTmsp: new Date(),\nimgUrl: undefined,\nfinish: 'Non-foil',\n- details: { ...tokenDetails },\n+ details: { ...(element.tokenId === card.cardID ? {} : tokenDetails) },\n};\n}\n}\n"
    },
    {
        "sim_msg": "Plot the results even if the parameter fitting fails",
        "sim_diff": "diff --git a/pysteps/scripts/fit_vel_pert_params.py b/pysteps/scripts/fit_vel_pert_params.py @@ -40,23 +40,29 @@ for lt in leadtimes:\nstd_perp.append(np.sqrt((dp_perp_sq_sum-2*mu*dp_perp_sum+dp_perp_n*mu**2) / dp_perp_n))\n+try:\np_par = curve_fit(f, leadtimes, std_par)[0]\np_perp = curve_fit(f, leadtimes, std_perp)[0]\n-\n+ fit_succeeded = True\nprint(\"p_par = %s\" % str(p_par))\nprint(\"p_perp = %s\" % str(p_perp))\n+except RuntimeError:\n+ fit_succeeded = False\n+ print(\"Parameter fitting failed.\")\nif args.plot is not None:\npyplot.figure()\npyplot.scatter(leadtimes, std_par, c='r')\nt = np.linspace(0.5*leadtimes[0], 1.025*leadtimes[-1], 200)\n- l1, = pyplot.plot(t, f(t, *p_par), \"r-\")\npyplot.scatter(leadtimes, std_perp, c='g')\n+ if fit_succeeded:\n+ l1, = pyplot.plot(t, f(t, *p_par), \"r-\")\nl2, = pyplot.plot(t, f(t, *p_perp), \"g-\")\np_str_1 = lambda p: \"%.2f\\cdot t^{%.2f}+%.2f\" % (p[0], p[1], p[2])\np_str_2 = lambda p: \"%.2f\\cdot t^{%.2f}%.2f\" % (p[0], p[1], p[2])\n+ if fit_succeeded:\nlbl = lambda p: p_str_1(p) if p[2] > 0.0 else p_str_2(p)\npyplot.legend([l1, l2], [\"Parallel: $f(t)=%s$\" % lbl(p_par),\n\"Perpendicular: $f(t)=%s$\" % lbl(p_perp)], fontsize=12)\n",
        "org_diff": "diff --git a/fkie_node_manager_daemon/src/fkie_node_manager_daemon/version.py b/fkie_node_manager_daemon/src/fkie_node_manager_daemon/version.py @@ -61,23 +61,23 @@ def detect_version(package):\ntry:\nwith open(\"%s/VERSION\" % pkg_path) as f:\nversion = f.read()\n- version = version.strip()\n+ version = version.strip().decode('utf-8')\nwith open(\"%s/DATE\" % pkg_path) as f:\ndatetag = f.read().split()\nif datetag:\n- date = datetag[0]\n+ date = datetag[0].decode('utf-8')\nexcept Exception as err:\nsys.stderr.write(\"version detection error: %s\" % utf8(err))\nelif os.path.isdir(\"%s/../.git\" % pkg_path):\ntry:\nos.chdir(pkg_path)\nps = SupervisedPopen(['git', 'describe', '--tags', '--dirty', '--always', '--abbrev=8'], stdout=subprocess.PIPE, object_id='get git version')\n- output = ps.stdout.read()\n+ output = ps.stdout.read().decode('utf-8')\nversion = output.strip()\nps = SupervisedPopen(['git', 'show', '-s', '--format=%ci'], stdout=subprocess.PIPE, object_id='get git date')\noutput = ps.stdout.read().split()\nif output:\n- date = output[0]\n+ date = output[0].decode('utf-8')\nexcept Exception as err:\nsys.stderr.write(\"version detection error: %s\" % utf8(err))\nelse:\n"
    },
    {
        "sim_msg": "[INTERNAL] Theming Base Content: Update version in .repo file via script\nJIRA:",
        "sim_diff": "diff --git a/lib/theming-base-content/update.js b/lib/theming-base-content/update.js @@ -24,6 +24,35 @@ function makeArray(v) {\nreturn Array.isArray(v) ? v : [v];\n}\n+async function readJson(filePath) {\n+ const content = await readFile(filePath, {encoding: \"utf-8\"});\n+ return JSON.parse(content);\n+}\n+\n+const repoVersionPattern = /(name=\"@sap-theming\\/theming-base-content\".*version=\")[^\"]*(\")/;\n+\n+async function updateRepoFile(baseDir) {\n+ console.log(`\\nUpdating version in .repo file ...`);\n+\n+ const {sVersion: baseContentVersion} = await readJson(path.join(baseDir, \"Base\", \".theming\"));\n+\n+ const repoFilePath = path.join(__dirname, \"..\", \"..\", \".repo\");\n+\n+ let repoFileContent = await readFile(repoFilePath, {encoding: \"utf-8\"});\n+\n+ if (!repoVersionPattern.test(repoFileContent)) {\n+ throw new Error(\"Unable to find @sap-theming/theming-base-content version in .repo file\");\n+ }\n+\n+ repoFileContent = repoFileContent.replace(repoVersionPattern, `$1${baseContentVersion}$2`);\n+\n+ await writeFile(repoFilePath, repoFileContent);\n+\n+ console.log(`Updated version in .repo file to ${baseContentVersion}`);\n+ console.log(`Please make sure to re-generate relevant files by executing the thirdparty-metadata-tool`);\n+ console.log(`See <SAPWIKI>/wiki/display/SAPUI5/Maintaining+Third-Party+Software+Metadata`);\n+}\n+\nasync function downloadZip(url) {\nconst download = require(\"download\");\nconst targetDir = path.join(tmpDir, \"zip\");\n@@ -57,7 +86,7 @@ async function main({versionOrUrl}) {\nthrow new Error(\"Missing required argument: version or url\");\n}\n- console.log(`Cleaning tmp folder...\\n`);\n+ console.log(`\\nCleaning tmp folder ...\\n`);\nawait rimraf(tmpDir);\nlet baseDir;\n@@ -73,6 +102,8 @@ async function main({versionOrUrl}) {\nawait processConfigEntry(entry);\n}\n+ await updateRepoFile(baseDir);\n+\nasync function globFiles({patterns, cwd}) {\nconst globResults = await Promise.all(\npatterns.map((pattern) => glob(pattern, {cwd}))\n",
        "org_diff": "diff --git a/src/utils/Util.js b/src/utils/Util.js @@ -192,7 +192,7 @@ export function isInternalURL(to) {\nexport function isSamePageURL(to) {\ntry {\n- const url = new URL(to, window.location.origin);\n+ const url = new URL(to, window.location.href);\nreturn (\nurl.hostname === window.location.hostname &&\nurl.pathname === window.location.pathname &&\n"
    },
    {
        "sim_msg": "Plot the results even if the parameter fitting fails",
        "sim_diff": "diff --git a/pysteps/scripts/fit_vel_pert_params.py b/pysteps/scripts/fit_vel_pert_params.py @@ -40,23 +40,29 @@ for lt in leadtimes:\nstd_perp.append(np.sqrt((dp_perp_sq_sum-2*mu*dp_perp_sum+dp_perp_n*mu**2) / dp_perp_n))\n+try:\np_par = curve_fit(f, leadtimes, std_par)[0]\np_perp = curve_fit(f, leadtimes, std_perp)[0]\n-\n+ fit_succeeded = True\nprint(\"p_par = %s\" % str(p_par))\nprint(\"p_perp = %s\" % str(p_perp))\n+except RuntimeError:\n+ fit_succeeded = False\n+ print(\"Parameter fitting failed.\")\nif args.plot is not None:\npyplot.figure()\npyplot.scatter(leadtimes, std_par, c='r')\nt = np.linspace(0.5*leadtimes[0], 1.025*leadtimes[-1], 200)\n- l1, = pyplot.plot(t, f(t, *p_par), \"r-\")\npyplot.scatter(leadtimes, std_perp, c='g')\n+ if fit_succeeded:\n+ l1, = pyplot.plot(t, f(t, *p_par), \"r-\")\nl2, = pyplot.plot(t, f(t, *p_perp), \"g-\")\np_str_1 = lambda p: \"%.2f\\cdot t^{%.2f}+%.2f\" % (p[0], p[1], p[2])\np_str_2 = lambda p: \"%.2f\\cdot t^{%.2f}%.2f\" % (p[0], p[1], p[2])\n+ if fit_succeeded:\nlbl = lambda p: p_str_1(p) if p[2] > 0.0 else p_str_2(p)\npyplot.legend([l1, l2], [\"Parallel: $f(t)=%s$\" % lbl(p_par),\n\"Perpendicular: $f(t)=%s$\" % lbl(p_perp)], fontsize=12)\n",
        "org_diff": "diff --git a/sc2/bot_ai.py b/sc2/bot_ai.py @@ -78,8 +78,9 @@ class BotAI(DistanceCalculation):\nself.larva_count: int = None\nself.actions: List[UnitCommand] = []\nself.blips: Set[Blip] = set()\n- self._units_previous_map: dict = dict()\n- self._structures_previous_map: dict = dict()\n+ self._unit_tags_seen_this_game: Set[int] = set()\n+ self._units_previous_map: Dict[int, Unit] = dict()\n+ self._structures_previous_map: Dict[int, Unit] = dict()\nself._previous_upgrades: Set[UpgradeId] = set()\n# Internally used to keep track which units received an action in this frame, so that self.train() function does not give the same larva two orders - cleared every frame\nself._unit_tags_received_action: Set[int] = set()\n@@ -1326,7 +1327,8 @@ class BotAI(DistanceCalculation):\nasync def _issue_unit_added_events(self):\nfor unit in self.units:\n- if unit.tag not in self._units_previous_map:\n+ if unit.tag not in self._units_previous_map and unit.tag not in self._unit_tags_seen_this_game:\n+ self._unit_tags_seen_this_game.add(unit.tag)\nawait self.on_unit_created(unit)\nasync def _issue_upgrade_events(self):\n"
    },
    {
        "sim_msg": "residuals plots",
        "sim_diff": "diff --git a/pypeit/core/wavecal/identify.py b/pypeit/core/wavecal/identify.py @@ -183,7 +183,7 @@ class Identify(object):\nymn, ymx = self.ax.get_ylim()\nw = np.where((self._detns > xmn) & (self._detns < xmx))[0]\nfor i in range(w.size):\n- if self._lineids[w[i]] == 0.0:\n+ if self._lineflg[w[i]] != 1:\nif w[i] == self._detns_idx:\nself.annlines.append(self.ax.axvline(self._detns[w[i]], color='r'))\nelse:\n@@ -227,8 +227,9 @@ class Identify(object):\nself.specres[0].set_color(self.residmap.to_rgba(self._lineflg))\n# Pixel residuals\n+ wfl = self._lineflg == 1\nself.specres[2].set_offsets(np.vstack((self._detns[wid], resvals[wid])).T)\n- self.axr[0].set_ylim((np.min(resvals[wid]), np.max(resvals[wid])))\n+ self.axr[0].set_ylim((np.min(resvals[wfl]), np.max(resvals[wfl])))\nself.specres[2].set_color(self.residmap.to_rgba(self._lineflg))\ndef draw_callback(self, event):\n",
        "org_diff": "diff --git a/sc2/unit.py b/sc2/unit.py @@ -178,6 +178,19 @@ class Unit(object):\n\"\"\" Checks if a geyser has gas remaining (cant build extractors on empty geysers), useful for lategame \"\"\"\nreturn self._proto.vespene_contents > 0\n+ @property\n+ def weapon_cooldown(self):\n+ \"\"\" Returns time in game loops (self.state.game_loop) until the unit can fire again\n+ Usage:\n+ if unit.weapon_cooldown == 0:\n+ await self.do(unit.attack(target))\n+ else:\n+ await self.do(unit.move(retreatPosition))\n+ \"\"\"\n+ if self.can_attack_ground or self.can_attack_air:\n+ return self._proto.weapon_cooldown\n+ return 1000\n+\n@property\ndef can_attack_ground(self):\n# See data_pb2.py line 141 for info on weapon data\n"
    },
    {
        "sim_msg": "arm canvas updates",
        "sim_diff": "diff --git a/envi/archs/arm/disasm.py b/envi/archs/arm/disasm.py @@ -4151,7 +4151,8 @@ class ArmImmOper(ArmOperand):\ndef render(self, mcanv, op, idx):\nval = self.getOperValue(op)\n- mcanv.addNameText('#0x%.2x' % (val))\n+ mcanv.addText('#')\n+ mcanv.addNameText('0x%.2x' % (val))\ndef repr(self, op):\nval = self.getOperValue(op)\n@@ -4552,7 +4553,8 @@ class ArmImmOffsetOper(ArmOperand):\nif (idxing&0x10) == 0:\nmcanv.addText(']')\n- mcanv.addNameText(', #%s0x%x' % (pom,self.offset))\n+ mcanv.addText(', #%s' % (pom))\n+ mcanv.addNameText('0x%x' % (self.offset))\nif idxing == 0x10:\nmcanv.addText(']')\n",
        "org_diff": "diff --git a/node_manager_fkie/src/node_manager_fkie/launch_list_model.py b/node_manager_fkie/src/node_manager_fkie/launch_list_model.py @@ -253,7 +253,7 @@ class LaunchListModel(QStandardItemModel):\nitem = self.itemFromIndex(index)\nprev = '%s\\n' % text if text else ''\ntext = '%sfile://%s' % (prev, item.path)\n- mimeData.setData('text/plain', utf8(text))\n+ mimeData.setData('text/plain', text)\nreturn mimeData\n# %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n"
    },
    {
        "sim_msg": "Remove utils for PST formulation (deprecated)",
        "sim_diff": "diff --git a/SimPEG/Utils/matutils.py b/SimPEG/Utils/matutils.py @@ -83,82 +83,6 @@ def uniqueRows(M):\nreturn unqM, unqInd, invInd\n-def xyz2local(m, param):\n- \"\"\"\n- Used to rotate from cartesian coordinate system [x, y, z] to\n- local frame along the primary field [A,Inc,Dec]\n-\n- INPUT:\n- m : nC-by-3 array for [x,y,z] components\n- param: List of parameters [A, I, D] as given by survey.SrcList.param\n- \"\"\"\n-\n- Rz = np.vstack((np.r_[np.cos(np.deg2rad(-param[2])),\n- -np.sin(np.deg2rad(-param[2])), 0],\n- np.r_[np.sin(np.deg2rad(-param[2])),\n- np.cos(np.deg2rad(-param[2])), 0],\n- np.r_[0, 0, 1]))\n-\n- Rx = np.vstack((np.r_[1, 0, 0],\n- np.r_[0, np.cos(np.deg2rad(-param[1])),\n- -np.sin(np.deg2rad(-param[1]))],\n- np.r_[0, np.sin(np.deg2rad(-param[1])),\n- np.cos(np.deg2rad(-param[1]))]))\n-\n- yvec = np.c_[0, 1, 0]\n- pvec = np.dot(Rz, np.dot(Rx, yvec.T))\n-\n- xvec = np.c_[1, 0, 0]\n- svec = np.dot(Rz, np.dot(Rx, xvec.T))\n-\n- zvec = np.c_[0, 0, 1]\n- tvec = np.dot(Rz, np.dot(Rx, zvec.T))\n-\n- m_pst = np.r_[np.dot(pvec.T, m.T),\n- np.dot(svec.T, m.T),\n- np.dot(tvec.T, m.T)].T\n-\n- return m_pst\n-\n-\n-def local2xyz(m, param):\n- \"\"\"\n- Used to rotate from local along the primary field [A,Inc,Dec]\n- to cartesian coordinate system [x, y, z].\n-\n- INPUT:\n- m : nC-by-3 array for [x,y,z] components\n- param: List of parameters [A, I, D] as given by survey.SrcList.param\n- \"\"\"\n-\n- Rz = np.vstack((np.r_[np.cos(np.deg2rad(-param[2])),\n- -np.sin(np.deg2rad(-param[2])), 0],\n- np.r_[np.sin(np.deg2rad(-param[2])),\n- np.cos(np.deg2rad(-param[2])), 0],\n- np.r_[0, 0, 1]))\n-\n- Rx = np.vstack((np.r_[1, 0, 0],\n- np.r_[0, np.cos(np.deg2rad(-param[1])),\n- -np.sin(np.deg2rad(-param[1]))],\n- np.r_[0, np.sin(np.deg2rad(-param[1])),\n- np.cos(np.deg2rad(-param[1]))]))\n-\n- yvec = np.c_[0, 1, 0]\n- pvec = np.dot(Rz, np.dot(Rx, yvec.T))\n-\n- xvec = np.c_[1, 0, 0]\n- svec = np.dot(Rz, np.dot(Rx, xvec.T))\n-\n- zvec = np.c_[0, 0, 1]\n- tvec = np.dot(Rz, np.dot(Rx, zvec.T))\n-\n- pst_mat = np.c_[pvec, svec, tvec]\n-\n- m_xyz = np.dot(m, pst_mat.T)\n-\n- return m_xyz\n-\n-\ndef xyz2spherical(m):\n\"\"\" Convert from cartesian to spherical \"\"\"\n",
        "org_diff": "diff --git a/sc2/units.py b/sc2/units.py @@ -103,6 +103,13 @@ class Units(list):\nposition = position.position\nreturn min({unit.position.to2.distance_to(position.to2) for unit in self})\n+ def furthest_distance_to(self, position: Union[Unit, Point2, Point3]) -> Union[int, float]:\n+ \"\"\" Returns the distance between the furthest unit from this group to the target unit \"\"\"\n+ assert self.exists\n+ if isinstance(position, Unit):\n+ position = position.position\n+ return max({unit.position.to2.distance_to(position.to2) for unit in self})\n+\ndef closest_to(self, position: Union[Unit, Point2, Point3]) -> Unit:\nassert self.exists\nif isinstance(position, Unit):\n@@ -110,7 +117,6 @@ class Units(list):\nreturn min(self, key=lambda unit: unit.position.to2.distance_to(position.to2))\ndef furthest_to(self, position: Union[Unit, Point2, Point3]) -> Unit:\n- \"\"\" Returns the distance between the furthest unit from this group to the target unit \"\"\"\nassert self.exists\nif isinstance(position, Unit):\nposition = position.position\n"
    },
    {
        "sim_msg": "[linalg] Fix type promotion in QDWH.",
        "sim_diff": "diff --git a/jax/_src/lax/qdwh.py b/jax/_src/lax/qdwh.py @@ -36,7 +36,7 @@ def _use_qr(u, params):\n\"\"\"Uses QR decomposition.\"\"\"\na, b, c = params\nm, n = u.shape\n- y = jnp.concatenate([jnp.sqrt(c) * u, jnp.eye(n)])\n+ y = jnp.concatenate([jnp.sqrt(c) * u, jnp.eye(n, dtype=jnp.dtype(u))])\nq, _ = lax_linalg.qr(y, full_matrices=False)\nq1 = q[:m, :]\nq2 = (q[m:, :]).T.conj()\n@@ -49,7 +49,7 @@ def _use_cholesky(u, params):\n\"\"\"Uses Cholesky decomposition.\"\"\"\na, b, c = params\n_, n = u.shape\n- x = c * u.T.conj() @ u + jnp.eye(n)\n+ x = c * (u.T.conj() @ u) + jnp.eye(n, dtype=jnp.dtype(u))\n# `y` is lower triangular.\ny = lax_linalg.cholesky(x, symmetrize_input=False)\n",
        "org_diff": "diff --git a/sc2/game_state.py b/sc2/game_state.py @@ -40,7 +40,7 @@ class GameState(object):\nself.creep = PixelMap(observation.observation.raw_data.map_state.creep)\nself.dead_units = {dead_unit_tag for dead_unit_tag in observation.observation.raw_data.event.dead_units} # set of unit tags that died this step - sometimes has multiple entries\n- self.effects = {EffectId(effect) for effect in observation.observation.raw_data.effects} # effects like ravager bile shot, lurker attack, everything in effect_id.py # usage: if RAVAGERCORROSIVEBILECP in self.state.effects: do stuff\n+ self.effects = {effect for effect in observation.observation.raw_data.effects} # effects like ravager bile shot, lurker attack, everything in effect_id.py # usage: if RAVAGERCORROSIVEBILECP.value in self.state.effects: do stuff\nself.upgrades = {UpgradeId(upgrade) for upgrade in observation.observation.raw_data.player.upgrade_ids} # usage: if TERRANINFANTRYWEAPONSLEVEL1 in self.state.upgrades: do stuff\n@property\n"
    },
    {
        "sim_msg": "Adding some check about json format (valid json + no NaN values)",
        "sim_diff": "diff --git a/addons/io_scene_gltf2/io/imp/gltf2_io_gltf.py b/addons/io_scene_gltf2/io/imp/gltf2_io_gltf.py @@ -38,7 +38,11 @@ class glTFImporter():\n# json\ntype, str_json, offset = glTFImporter.load_chunk(pygltf, offset)\n- pygltf.json = json.loads(str_json.decode('utf-8'))\n+ try:\n+ pygltf.json = json.loads(str_json.decode('utf-8'), parse_constant=glTFImporter.bad_json_value)\n+ except ValueError as e:\n+ return False, e.args[0]\n+\n# binary data\nchunk_cpt = 0\n@@ -50,6 +54,7 @@ class glTFImporter():\nchunk_cpt += 1\npygltf.content = None\n+ return True, None\n@staticmethod\ndef load_chunk(pygltf, offset):\n@@ -60,6 +65,10 @@ class glTFImporter():\nreturn data_type, data, offset + 8 + data_length\n+ @staticmethod\n+ def bad_json_value(val):\n+ raise ValueError('Json contains some unauthorized values')\n+\n@staticmethod\ndef load(pygltf):\nwith open(pygltf.filename, 'rb') as f:\n@@ -72,11 +81,16 @@ class glTFImporter():\npygltf.content = None\nwith open(pygltf.filename, 'r') as f:\ncontent = f.read()\n- pygltf.json = json.loads(content)\n+ try:\n+ pygltf.json = json.loads(content, parse_constant=glTFImporter.bad_json_value)\n+ return True, None\n+ except ValueError as e:\n+ return False, e.args[0]\nelse:\n# Parsing glb file\n- glTFImporter.load_glb(pygltf)\n+ success, txt = glTFImporter.load_glb(pygltf)\n+ return success, txt\n@staticmethod\ndef get_root_scene(pygltf):\n@@ -158,7 +172,8 @@ class glTFImporter():\n@staticmethod\ndef importer(filename, loglevel=logging.ERROR):\npygltf = PyglTF(filename, loglevel=loglevel)\n- glTFImporter.load(pygltf)\n+ success, txt = glTFImporter.load(pygltf)\n+ if success:\nsuccess, txt = glTFImporter.read(pygltf)\nreturn success, pygltf, txt\n",
        "org_diff": "diff --git a/node_manager_daemon_fkie/src/node_manager_daemon_fkie/monitor/hdd_usage.py b/node_manager_daemon_fkie/src/node_manager_daemon_fkie/monitor/hdd_usage.py @@ -53,6 +53,9 @@ class HddUsage(SensorInterface):\nself._path = settings.param('sysmon/Disk/path', self._path)\ndef check_sensor(self):\n+ diag_level = 0\n+ diag_vals = []\n+ diag_msg = ''\ntry:\nhdd = psutil.disk_usage(self._path)\ndiag_level = 0\n"
    },
    {
        "sim_msg": "fixing ShowBgpL2vpnEvpnSummary",
        "sim_diff": "diff --git a/src/genie/libs/parser/nxos/show_bgp.py b/src/genie/libs/parser/nxos/show_bgp.py @@ -9748,7 +9748,7 @@ class ShowBgpL2vpnEvpnSummary(ShowBgpL2vpnEvpnSummarySchema):\np7 = re.compile(\nr'^\\s*(?P<neighborid>[\\d\\.]+) +(?P<neighborversion>[\\d]+) +(?P<neighboras>[\\d]+) +(?P<msgrecvd>[\\d]+)'\n' +(?P<msgsent>[\\d]+) +(?P<neighbortableversion>[\\d]+) +(?P<inq>[\\d]+) +(?P<outq>[\\d]+)'\n- ' +(?P<time>[\\w\\:]+) +(?P<prefixreceived>[\\w\\s]+)$')\n+ ' +(?P<time>[\\w\\:]+) +(?P<prefixreceived>[\\w\\s\\)\\(]+)$')\nfor line in out.splitlines():\nif line:\n",
        "org_diff": "diff --git a/rasa_core_sdk/__init__.py b/rasa_core_sdk/__init__.py @@ -154,16 +154,19 @@ class Action(object):\n\"\"\"\nExecute the side effects of this action.\nArgs:\n- dispatcher (CollectingDispatcher): the dispatcher which is used to send\n- messages back to the user. Use ``dipatcher.utter_message()``\n- or any other :class:`rasa_core_sdk.executor.CollectingDispatcher` method.\n+ dispatcher (CollectingDispatcher): the dispatcher which is used to\n+ send messages back to the user. Use ``dipatcher.utter_message()``\n+ or any other :class:`rasa_core_sdk.executor.CollectingDispatcher`\n+ method.\ntracker (Tracker): the state tracker for the current\nuser. You can access slot values using\n- ``tracker.get_slot(slot_name)``, the most recent user\n- message is ``tracker.latest_message.text`` and any other :class:`rasa_core_sdk.Tracker` property.\n+ ``tracker.get_slot(slot_name)``, the most recent user message\n+ is ``tracker.latest_message.text`` and any other\n+ :class:`rasa_core_sdk.Tracker` property.\ndomain (Dict[Text, Any]): the bot's domain\nReturns:\n- List[Event]: A list of :class:`rasa_core_sdk.events.Event` instances that is returned through the endpoint\n+ Dict[Event]: A list of :class:`rasa_core_sdk.events.Event` instances\n+ that is returned through the endpoint\n\"\"\"\nraise NotImplementedError\n"
    },
    {
        "sim_msg": "Ensure cache hits for gcd, lcm",
        "sim_diff": "diff --git a/jax/numpy/lax_numpy.py b/jax/numpy/lax_numpy.py @@ -2819,23 +2819,24 @@ hanning = _wrap_numpy_nullary_function(onp.hanning)\n# TODO: lower `kaiser` via lax to allow non-constant beta values.\nkaiser = _wrap_numpy_nullary_function(onp.kaiser)\n-\n-@_wraps(getattr(onp, \"gcd\", None))\n-def gcd(x1, x2):\n- if (not issubdtype(_dtype(x1), integer) or\n- not issubdtype(_dtype(x2), integer)):\n- raise ValueError(\"Arguments to gcd must be integers.\")\n- def cond_fn(xs):\n+def _gcd_cond_fn(xs):\nx1, x2 = xs\nreturn any(x2 != 0)\n- def body_fn(xs):\n+\n+def _gcd_body_fn(xs):\nx1, x2 = xs\nx1, x2 = (where(x2 != 0, x2, x1),\nwhere(x2 != 0, lax.rem(x1, x2), lax._const(x2, 0)))\nreturn (where(x1 < x2, x2, x1), where(x1 < x2, x1, x2))\n+\n+@_wraps(getattr(onp, \"gcd\", None))\n+def gcd(x1, x2):\n+ if (not issubdtype(_dtype(x1), integer) or\n+ not issubdtype(_dtype(x2), integer)):\n+ raise ValueError(\"Arguments to gcd must be integers.\")\nx1, x2 = _promote_dtypes(lax.abs(x1), lax.abs(x2))\nx1, x2 = broadcast_arrays(x1, x2)\n- gcd, _ = lax.while_loop(cond_fn, body_fn, (x1, x2))\n+ gcd, _ = lax.while_loop(_gcd_cond_fn, _gcd_body_fn, (x1, x2))\nreturn gcd\n",
        "org_diff": "diff --git a/fkie_node_manager_daemon/tests/test_common.py b/fkie_node_manager_daemon/tests/test_common.py @@ -100,7 +100,7 @@ class TestCommonLib(unittest.TestCase):\ndef test_get_packages(self):\npath = os.path.dirname(self.nm_path.rstrip(os.path.sep))\npkg_res = get_packages(path)\n- self.assertEqual(6, len(pkg_res), \"wrong count of get_packages(%s), expected: %d, got: %d\" % (path, 6, len(pkg_res)))\n+ self.assertEqual(6, len(pkg_res), \"wrong count of get_packages(%s), expected: %d, got: %d -> packages: %s\" % (path, 6, len(pkg_res), pkg_res))\ndef test_get_cwd(self):\ntest_path = '/this/is/path/to'\n"
    },
    {
        "sim_msg": "Map gen dead code cleanup",
        "sim_diff": "diff --git a/src/components/general/map-gen/MapGen.jsx b/src/components/general/map-gen/MapGen.jsx @@ -761,76 +761,10 @@ const generateMap = (x, y) => {\n}).sort((a, b) => {\nreturn a.distanceTo(deepestEntry.block) - b.distanceTo(deepestEntry.block);\n});\n- /* if (unseenPathCandidates.length === 0) {\n- console.warn('no candidate to go to');\n- debugger;\n- } */\n_connectBlocks(deepestEntry.block, unseenPathCandidates[0]);\n}\nreturn blocks;\n};\n-/* const renderChunk = (canvas, blocks) => {\n- const {ctx} = canvas;\n- ctx.fillStyle = '#222';\n- ctx.fillRect(0, 0, canvas.width, canvas.height);\n- ctx.fillStyle = '#111';\n- ctx.fillRect(border, border, canvas.width - 2 * border, canvas.height - 2 * border);\n-\n- for (let y = 0; y < numBlocks; y++) {\n- for (let x = 0; x < numBlocks; x++) {\n- const block = blocks[x + y * numBlocks];\n-\n- let fillStyle = '#000';\n- if (block.exitTarget) {\n- fillStyle = '#00F';\n- } else if (block.centerTarget) {\n- fillStyle = '#F00';\n- } else if (block.splinePoint) {\n- fillStyle = '#080';\n- } else if (block.path) {\n- fillStyle = '#666';\n- }\n- ctx.fillStyle = fillStyle;\n- ctx.fillRect(x * voxelSize + border, y * voxelSize + border, voxelSize - border*2, voxelSize - border*2);\n- }\n- }\n-}; */\n-\n-/* class Chunk {\n- constructor(x, y) {\n- this.x = x;\n- this.y = y;\n-\n- this.imageBitmap = null;\n- this.readyState = 'pending';\n-\n- this.loadPromise = (async () => {\n- const chunkBlocks = generateMap(this.x, this.y);\n-\n- const {ctx} = Chunk.cachedCanvas;\n- ctx.fillStyle = '#111';\n- ctx.fillRect(0, 0, canvas.width, canvas.height);\n-\n- renderChunk(Chunk.cachedCanvas, chunkBlocks);\n-\n- this.imageBitmap = await createImageBitmap(Chunk.cachedCanvas);\n- this.readyState = 'done';\n- })();\n- }\n- static cachedCanvas = (() => {\n- const canvas = document.createElement('canvas');\n- canvas.width = chunkSize;\n- canvas.height = chunkSize;\n-\n- const ctx = canvas.getContext('2d');\n- canvas.ctx = ctx;\n-\n- return canvas;\n- })();\n- waitForLoad() {\n- return this.loadPromise;\n- }\n-} */\nconst planeGeometry = new THREE.PlaneBufferGeometry(numBlocks, numBlocks)\n.applyMatrix4(\n@@ -1105,8 +1039,6 @@ const _makeChunkMesh = (x, y) => {\nmaterial.uniforms.uSelect.value = selected ? 1 : 0;\nmaterial.uniforms.uSelect.needsUpdate = true;\n- // console.log('set hovered', t);\n-\nif (hovered) {\nlastHoveredTime = timestamp;\n} else {\n",
        "org_diff": "diff --git a/src/utils/draftbots.js b/src/utils/draftbots.js @@ -118,7 +118,7 @@ export const getSynergy = (combination, card, picked, synergies) => {\n}\n}\n}\n- return Math.max(0, (synergy + internalSynergy) * 10);\n+ return Math.max(0, (synergy + internalSynergy) * 7);\n};\nexport const getOpenness = (combination, seen) => {\n"
    },
    {
        "sim_msg": "fix: null selector error",
        "sim_diff": "diff --git a/src/common/kyc/index.js b/src/common/kyc/index.js @@ -344,10 +344,12 @@ export const kycSelectors = {\nreturn acc;\n}, {});\n- const identity = identitySelectors.selectIdentity(\n- state,\n- identityId ? { identityId } : null\n- );\n+ let identity = null;\n+ if (identityId) {\n+ identity = identitySelectors.selectIdentity(state, { identityId });\n+ } else {\n+ identity = identitySelectors.selectIdentity(state);\n+ }\nconst walletAttributes = identitySelectors\n.selectFullIdAttributesByIds(state, { identityId: identity ? identity.id : null })\n",
        "org_diff": "diff --git a/src/pages/CardPage.js b/src/pages/CardPage.js @@ -222,7 +222,7 @@ const CardPage = ({ user, card, data, versions, related, cubes, loginCallback })\n});\nconst filteredVersions = sortedVersions.filter((version) => {\n- return version._id != card._id;\n+ return version._id !== card._id;\n});\nreturn (\n"
    },
    {
        "sim_msg": "Hook in new spawner metaverse module",
        "sim_diff": "diff --git a/metaverse-modules.js b/metaverse-modules.js @@ -12,6 +12,7 @@ const moduleUrls = {\nfilter: './metaverse_modules/filter/',\nbarrier: './metaverse_modules/barrier/',\ninfinistreet: './metaverse_modules/infinistreet/',\n+ spawner: './metaverse_modules/spawner/',\ndefaultScene: './metaverse_modules/default-scene/',\n};\nconst modules = {};\n",
        "org_diff": "diff --git a/webpack.common.js b/webpack.common.js @@ -52,6 +52,7 @@ const clientConfig = merge(config, {\nconst serverConfig = merge(config, {\ntarget: 'node',\nentry: {\n+ BulkUploadPage: './src/components/BulkUploadPage.js',\nCubeListPage: './src/components/CubeListPage.js',\nCubePlaytestPage: './src/components/CubePlaytestPage.js',\nDashboardPage: './src/components/DashboardPage.js',\n"
    },
    {
        "sim_msg": "test: remove old tests\nThese tests are obsoleted by newer tests.",
        "sim_diff": "diff --git a/__tests__/base.js b/__tests__/base.js @@ -624,55 +624,6 @@ function runBaseTest(name, useProxies, autoFreeze, useListener) {\n})\n})\n- it(\"should not throw error #78\", () => {\n- const base = {\n- arr: [\n- {\n- id: \"100\",\n- arr: [{id: \"1\", no: 1}, {id: \"2\", no: 2}]\n- },\n- {id: \"3\", no: 3}\n- ]\n- }\n- const result = produce(base, draft => {\n- const base = draft.arr[0]\n- draft.arr = draft.arr.slice(0, 1)\n- const newArr = {\n- id: \"101\",\n- arr: [base, {id: \"3\"}]\n- }\n- draft.arr.splice(0, 1, newArr)\n- draft.arr[0].arr[1].no = 3\n- })\n- expect(result).toEqual({\n- arr: [\n- {\n- id: \"101\",\n- arr: [\n- {\n- id: \"100\",\n- arr: [{id: \"1\", no: 1}, {id: \"2\", no: 2}]\n- },\n- {id: \"3\", no: 3}\n- ]\n- }\n- ]\n- })\n- })\n-\n- it(\"should not throw error #78 - 2\", () => {\n- const base = {\n- arr: [{count: 1}, {count: 2}]\n- }\n- const result = produce(base, draft => {\n- draft.arr = [draft.arr[1]]\n- draft.arr[0].count = 1\n- })\n- expect(result).toEqual({\n- arr: [{count: 1}]\n- })\n- })\n-\nit(\"should handle constructor correctly\", () => {\nconst base = {\narr: new Array(),\n",
        "org_diff": "diff --git a/src/topcards.js b/src/topcards.js @@ -52,7 +52,7 @@ class TopCards extends Component {\n/>\n</div>\n<SortableTable\n- sorts={{ Rating: row => -row[3], 'Total Picks': row => -row[4] }}\n+ sorts={{ Rating: row => row[3], 'Total Picks': row => -row[4] }}\ndefaultSort=\"Rating\"\nheaders={{ Name: {}, Rating: { style: { width: '10rem' } }, 'Total Picks': { style: { width: '10rem' } } }}\ndata={this.state.data}\n"
    },
    {
        "sim_msg": "this bit also needs to change when polyorder is a list",
        "sim_diff": "diff --git a/pypeit/core/telluric.py b/pypeit/core/telluric.py @@ -2207,7 +2207,7 @@ class Telluric(object):\nself.out_table['TELL_SHIFT'][iord] = self.theta_tell_list[iord][5]\nself.out_table['TELL_STRETCH'][iord] = self.theta_tell_list[iord][6]\nntheta_iord = len(self.theta_obj_list[iord])\n- self.out_table['OBJ_THETA'][iord][0:ntheta_iord+1] = self.theta_obj_list[iord]\n+ self.out_table['OBJ_THETA'][iord][0:ntheta_iord] = self.theta_obj_list[iord]\nself.out_table['CHI2'][iord] = self.result_list[iord].fun\nself.out_table['SUCCESS'][iord] = self.result_list[iord].success\nself.out_table['NITER'][iord] = self.result_list[iord].nit\n",
        "org_diff": "diff --git a/sc2/bot_ai.py b/sc2/bot_ai.py @@ -557,6 +557,7 @@ class BotAI:\nself.player_id: int = player_id\nself.race: Race = Race(self._game_info.player_races[self.player_id])\n+ if len(self._game_info.player_races) == 2:\nself.enemy_race = Race(self._game_info.player_races[3 - self.player_id])\nself._units_previous_map: dict = dict()\nself._previous_upgrades: Set[UpgradeId] = set()\n"
    },
    {
        "sim_msg": "Bugfix to use % values for popup",
        "sim_diff": "diff --git a/www/tablet/js/widget_popup.js b/www/tablet/js/widget_popup.js @@ -156,21 +156,32 @@ var Modul_popup = function () {\n//prepare events\n$(window).resize(function () {\n- dialog.options.end_top = (elem.isValidData('top')) ? elem.data('top') : ($(window).height() - parseInt(elem.data('height'))) / 2;\n- dialog.options.end_left = (elem.isValidData('left')) ? elem.data('left') : ($(window).width() - parseInt(elem.data('width'))) / 2;\n- dialog.options.height = parseInt(elem.data('height'));\n- dialog.options.width = parseInt(elem.data('width'));\n+ var width = elem.data('width');\n+ var height = elem.data('height');\n+ if ( width.indexOf('%') > 0 ){\n+ dialog.options.end_left = (elem.isValidData('left')) ? elem.data('left') : ((100 - parseInt(width)) / 2) + '%';\n+ } else {\n+ dialog.options.end_left = (elem.isValidData('left')) ? elem.data('left') : ($(window).width() - parseInt(width)) / 2;\n+ }\n+ if ( height.indexOf('%') > 0 ){\n+ dialog.options.end_top = (elem.isValidData('top')) ? elem.data('top') : ((100 - parseInt(height)) / 2) + '%';\n+ } else {\n+ dialog.options.end_top = (elem.isValidData('top')) ? elem.data('top') : ($(window).height() - parseInt(height)) / 2;\n+ }\n+\n+ dialog.options.height = height;\n+ dialog.options.width = width;\nif (elem.data('mode') === 'animateTop') {\n- dialog.options.start_top = 0 - dialog.options.height;\n+ dialog.options.start_top = 0 - parseInt(dialog.options.height);\ndialog.options.start_left = dialog.options.end_left;\ndialog.css({\ntop: dialog.options.start_top,\nleft: dialog.options.start_left,\n});\n} else {\n- dialog.options.start_top = (ftui.isValid(starter) ) ? starter.offset().top + dialog.options.height/2 : 0;\n- dialog.options.start_left = (ftui.isValid(starter) ) ? starter.offset().left + dialog.options.width/2 : 0;\n+ dialog.options.start_top = (ftui.isValid(starter) ) ? starter.offset().top + parseInt(dialog.options.height)/2 : 0;\n+ dialog.options.start_left = (ftui.isValid(starter) ) ? starter.offset().left + parseInt(dialog.options.width)/2 : 0;\ndialog.css({\nheight: 0,\nwidth: 0,\n",
        "org_diff": "diff --git a/public/js/main.js b/public/js/main.js @@ -6,46 +6,52 @@ $(document).ready(function() {\n$('.delete-cube').on('click', function(e) {\n$target = $(e.target);\nvar id = $target.attr('data-id');\n- $.ajax({\n- type: 'DELETE',\n- url: '/cube/remove/' + id,\n- success: function() {\n- window.location.href = '/';\n- },\n- error: function(err) {\n- console.log(err)\n+ csrfFetch('/cube/remove/' + id, {\n+ method: 'DELETE',\n+ headers: {}\n+ }).then(response => {\n+ if (!response.ok) {\n+ console.log(response);\n+ }\n+ else\n+ {\n+ window.location.href = '';\n}\n});\n})\n$('.delete-blog').on('click', function(e) {\n$target = $(e.target);\nvar id = $target.attr('data-id');\n- $.ajax({\n- type: 'DELETE',\n- url: '/cube/blog/remove/' + id,\n- success: function() {\n+ csrfFetch('/cube/blog/remove/' + id, {\n+ method: 'DELETE',\n+ headers: {}\n+ }).then(response => {\n+ if (!response.ok) {\n+ console.log(response);\n+ }\n+ else\n+ {\nwindow.location.href = '';\n- },\n- error: function(err) {\n- console.log(err)\n}\n});\n- })\n+ });\n$('.delete-format').on('click', function(e) {\n$target = $(e.target);\nvar id = $target.attr('data-id');\nvar cube = $target.attr('data-cube');\n- $.ajax({\n- type: 'DELETE',\n- url: '/cube/format/remove/' + cube + ';' + id,\n- success: function() {\n+ csrfFetch('/cube/format/remove/' + cube + ';' + id, {\n+ method: 'DELETE',\n+ headers: {}\n+ }).then(response => {\n+ if (!response.ok) {\n+ console.log(response);\n+ }\n+ else\n+ {\nwindow.location.href = '';\n- },\n- error: function(err) {\n- console.log(err)\n}\n});\n- })\n+ });\n});\nfunction ISODateToYYYYMMDD(dateString) {\n"
    },
    {
        "sim_msg": "update README to fix debugging link",
        "sim_diff": "diff --git a/README.md b/README.md @@ -293,7 +293,7 @@ It is `DQN` in `CartPole-v0`:\nWhen it ends, refer to `{prepath}_experiment_graph.png` and `{prepath}_experiment_df.csv` to find the best trials.\n->If the demo fails, consult [Debugging](https://kengz.gitbooks.io/slm-lab/content/debugging.html).\n+>If the demo fails, consult [Debugging](https://kengz.gitbooks.io/slm-lab/content/installation/debugging.html).\nNow the lab is ready for usage.\n",
        "org_diff": "diff --git a/CONTRIBUTING.md b/CONTRIBUTING.md @@ -75,6 +75,10 @@ We have a fairly active discord and would love for you to join the discussion.\nPrivate Message 'DEKKARU', the admin on Discord, to gain the contributor role and unlock the contributor-only channels.\n+# Community feedback / product ideas\n+\n+Feedback from the community is collected and synthesized into roadmap ideas in a shared document [here](https://www.notion.so/CubeCobra-community-feedback-142b06cd81994a61bd850fb5bc817cc8). To gain read/write access, PM 'DEKKARU' or 'emmett9001' on Discord.\n+\n### Commit Message Style\nPlease keep commit messages brief and informative.\n"
    },
    {
        "sim_msg": "str.w immoff bugfix (imm8 should be imm12, meaning different decoder)",
        "sim_diff": "diff --git a/envi/archs/thumb16/disasm.py b/envi/archs/thumb16/disasm.py @@ -1947,7 +1947,7 @@ thumb2_extension = [\n#('111110001001', (INS_LDRB, 'ldrb', ldr_32, IF_THUMB32)),\n('111110001010', (INS_STR, 'str', ldr_32, IF_H | IF_THUMB32)),\n('111110001011', (INS_LDR, 'ldr', ldr_32, IF_H | IF_THUMB32)),\n- ('111110001100', (INS_STR, 'str', ldr_puw_32, IF_THUMB32)),\n+ ('111110001100', (INS_STR, 'str', ldr_32, IF_THUMB32)),\n('111110001101', (INS_LDR, 'ldr', ldr_32, IF_THUMB32)), # T3\n('111110001000', (INS_STR, 'str', ldr_32, IF_B | IF_THUMB32)),\n('111110000000', (INS_STR, 'str', ldr_puw_32, IF_B | IF_THUMB32)),\n",
        "org_diff": "diff --git a/fkie_master_sync/src/fkie_master_sync/sync_thread.py b/fkie_master_sync/src/fkie_master_sync/sync_thread.py @@ -116,8 +116,8 @@ class SyncThread(object):\nself._filter = FilterInterface()\nself._filter.load(self.name,\n['/rosout', self.discoverer_name, '/master_discovery', '/master_sync', '/node_manager', '/node_manager_daemon', '/zeroconf', '/param_sync'], [],\n- ['/rosout', '/rosout_agg', '/diagnostics', '/diagnostics_agg'], ['/'] if sync_on_demand else [],\n- ['/*get_loggers', '/*set_logger_level'], [],\n+ ['/rosout', '/rosout_agg', '/master_discovery/*', '/master_sync/*', '/zeroconf/*'], ['/'] if sync_on_demand else [],\n+ ['/*get_loggers', '/*set_logger_level', '/master_discovery/*', '/master_sync/*', '/node_manager_daemon/*', '/zeroconf/*'], [],\n# do not sync the bond message of the nodelets!!\n['bond/Status', 'fkie_multimaster_msgs/SyncTopicInfo', 'fkie_multimaster_msgs/SyncServiceInfo', 'fkie_multimaster_msgs/SyncMasterInfo', 'fkie_multimaster_msgs/MasterState'],\n[], [],\n"
    },
    {
        "sim_msg": "Added command at the top header",
        "sim_diff": "diff --git a/src/genie/libs/parser/junos/show_ted.py b/src/genie/libs/parser/junos/show_ted.py JunOS parsers for the following show commands:\n- 'show ted database extensive'\n- 'show ted database extensive {node_id}'\n+ - 'show ted database {ipaddress}'\n\"\"\"\n# python\n@@ -126,8 +127,7 @@ class ShowTedDatabaseExtensive(ShowTedDatabaseExtensiveSchema):\nret_dict = {}\n# TED database: 0 ISIS nodes 0 INET nodes\n- p1 = re.compile(\n- r'^TED +database: +(?P<isis_nodes>\\d+) +ISIS +nodes +(?P<inet_nodes>\\d+) +INET +nodes$')\n+ p1 = re.compile(r'^TED +database: +(?P<isis_nodes>\\d+) +ISIS +nodes +(?P<inet_nodes>\\d+) +INET +nodes$')\n# NodeID: 172.16.1.1\np2 = re.compile(r'^NodeID: +(?P<node_id>\\S+)$')\n@@ -140,8 +140,7 @@ class ShowTedDatabaseExtensive(ShowTedDatabaseExtensiveSchema):\np4 = re.compile(r'^Protocol: +(?P<protocol>[\\w().]+)$')\n# To: 172.16.1.1, Local: 10.16.0.1, Remote: 10.16.0.2\n- p5 = re.compile(\n- r'^To: +(?P<to>\\S+), +Local: +(?P<local>\\S+), +Remote: +(?P<remote>\\S+)$')\n+ p5 = re.compile(r'^To: +(?P<to>\\S+), +Local: +(?P<local>\\S+), +Remote: +(?P<remote>\\S+)$')\n# Local interface index: 0, Remote interface index: 0\np6 = re.compile(r'^Local +interface +index: +(?P<local_interface_index>\\d+), +'\n",
        "org_diff": "diff --git a/public/js/deckbuilder.js b/public/js/deckbuilder.js @@ -172,33 +172,47 @@ function renderDraft() {\nvar lands = 0;\nvar cards = 0;\n+ var creatures = 0;\n//fill up deck\ndeck.playerdeck.forEach(function(col, index) {\nvar colhtml = \"\";\n+ var i = 0;\ncol.forEach(function(card, index2) {\n+ i= i+1;\ncards++;\nif (card.details.type.toLowerCase().includes('land')) {\nlands++;\n}\n+ if (card.details.type.toLowerCase().includes('creature')){\n+ creatures++;\n+ }\nif (card.details.card_flip) {\ncolhtml += '<a style=\"z-index:' + index2 + '; position: relative; top:-' + 155 * (index2) + 'px;\" class=\"autocard\" card=\"' + card.details.display_image + '\" card_flip=\"' + card.details.image_flip + '\" href=\"#\"><img class=\"deckcard defaultCardImage\" data-id=\"' + index2 + '\" data-col=\"' + index + '\" src=\"' + card.details.display_image + '\" width=\"' + cardWidth + '\" height=\"' + cardHeight + '\"/></a>';\n} else {\ncolhtml += '<a style=\"z-index:' + index2 + '; position: relative; top:-' + 155 * (index2) + 'px;\" class=\"autocard\" card=\"' + card.details.display_image + '\" href=\"#\"><img class=\"deckcard defaultCardImage\" data-id=\"' + index2 + '\" data-col=\"' + index + '\" src=\"' + card.details.display_image + '\" width=\"' + cardWidth + '\" height=\"' + cardHeight + '\"/></a>';\n}\n});\n+ if (i>0){\n+ colhtml = '<p style=\"text-align:center;margin:0\">' + i.toString() + '</p>' + colhtml;\n+ }\n$('#deckColumn' + index).html(colhtml);\n});\n- $('#deckName').text('Deck (' + cards + ' cards, ' + lands + ' lands)')\n+ $('#deckName').text('Deck (' + cards + ' cards, ' + lands + ' lands, '+ creatures + ' creatures)')\n//fill up sideboard\ndeck.playersideboard.forEach(function(col, index) {\n- var colhtml = \"\";\n+ var colhtml ='';\n+ var i = 0;\ncol.forEach(function(card, index2) {\n+ i= i+1;\nif (card.details.card_flip) {\ncolhtml += '<a style=\"z-index:' + index2 + '; position: relative; top:-' + 155 * (index2) + 'px;\" class=\"autocard\" card=\"' + card.details.display_image + '\" card_flip=\"' + card.details.image_flip + '\" href=\"#\"><img class=\"sideboardcard\" data-id=\"' + index2 + '\" data-col=\"' + index + '\" src=\"' + card.details.display_image + '\" width=\"' + cardWidth + '\" height=\"' + cardHeight + '\"/></a>';\n} else {\ncolhtml += '<a style=\"z-index:' + index2 + '; position: relative; top:-' + 155 * (index2) + 'px;\" class=\"autocard\" card=\"' + card.details.display_image + '\" href=\"#\"><img class=\"sideboardcard\" data-id=\"' + index2 + '\" data-col=\"' + index + '\" src=\"' + card.details.display_image + '\" width=\"' + cardWidth + '\" height=\"' + cardHeight + '\"/></a>';\n}\n});\n+ if (i > 0){\n+ colhtml = '<p style=text-align:center>' + i.toString() + '</p>' + colhtml;\n+ }\n$('#sideboardColumn' + index).html(colhtml);\n});\n"
    },
    {
        "sim_msg": "Default value if delete button not found",
        "sim_diff": "diff --git a/NotAnAnswerFlagQueueHelper.user.js b/NotAnAnswerFlagQueueHelper.user.js // @description Inserts several sort options for the NAA / VLQ / Review LQ Disputed queues\n// @homepage https://github.com/samliew/SO-mod-userscripts\n// @author @samliew\n-// @version 2.2.1\n+// @version 2.2.2\n//\n// @include */admin/dashboard?flagtype=postlowquality*\n// @include */admin/dashboard?flagtype=answernotananswer*\ncase 'delete-votes':\nsortFunction = function(a, b) {\n- let aDelv = Number($(a).find('.delete-post').val().replace(/[^\\d]/g, '')),\n- bDelv = Number($(b).find('.delete-post').val().replace(/[^\\d]/g, ''));\n+ let aDelv = Number(($(a).find('.delete-post').val() || \"0\").replace(/[^\\d]/g, '')),\n+ bDelv = Number(($(b).find('.delete-post').val() || \"0\").replace(/[^\\d]/g, ''));\nif(aDelv == bDelv) return 0;\nreturn (aDelv < bDelv) ? 1 : -1;\n",
        "org_diff": "diff --git a/routes/root.js b/routes/root.js @@ -114,7 +114,9 @@ router.get('/explore', async (req, res) => {\nrouter.get('/random', async (req, res) => {\nconst count = await Cube.count();\nconst random = Math.floor(Math.random() * count);\n- const cube = await Cube.findOne().skip(random);\n+ const cube = await Cube.findOne()\n+ .skip(random)\n+ .lean();\nres.redirect(`/cube/overview/${cube.urlAlias ? cube.urlAlias : cube.shortID}`);\n});\n@@ -130,7 +132,9 @@ router.get('/dashboard', async (req, res) => {\nowner: user._id,\n},\nCUBE_PREVIEW_FIELDS,\n- ).sort({\n+ )\n+ .lean()\n+ .sort({\ndate_updated: -1,\n});\nconst postsq = Blog.find({\n@@ -207,6 +211,7 @@ router.get('/dashboard/decks/:page', async (req, res) => {\nconst cubes = await Cube.find({\nowner: user._id,\n})\n+ .lean()\n.sort({\ndate_updated: -1,\n})\n@@ -346,10 +351,10 @@ router.get('/search/:query/:page', async (req, res) => {\nconst count = await Cube.count(query);\nconst cubes = await Cube.find(query, CUBE_PREVIEW_FIELDS)\n+ .lean()\n.sort(sort)\n.skip(perPage * page)\n- .limit(perPage)\n- .lean();\n+ .limit(perPage);\nconst reactProps = {\nquery: req.params.query,\n"
    },
    {
        "sim_msg": "core: split _broker_shutdown() out into its own function.\nMakes _broker_main() logic much clearer.",
        "sim_diff": "diff --git a/mitogen/core.py b/mitogen/core.py @@ -2330,12 +2330,7 @@ class Broker(object):\nfor (side, func) in self.poller.poll(timeout):\nself._call(side.stream, func)\n- def _broker_main(self):\n- try:\n- while self._alive:\n- self._loop_once()\n-\n- fire(self, 'shutdown')\n+ def _broker_shutdown(self):\nfor _, (side, _) in self.poller.readers + self.poller.writers:\nself._call(side.stream, side.stream.on_shutdown)\n@@ -2352,6 +2347,14 @@ class Broker(object):\nfor _, (side, _) in self.poller.readers + self.poller.writers:\nLOG.error('_broker_main() force disconnecting %r', side)\nside.stream.on_disconnect(self)\n+\n+ def _broker_main(self):\n+ try:\n+ while self._alive:\n+ self._loop_once()\n+\n+ fire(self, 'shutdown')\n+ self._broker_shutdown()\nexcept Exception:\nLOG.exception('_broker_main() crashed')\n",
        "org_diff": "diff --git a/test/autotest_bot.py b/test/autotest_bot.py @@ -27,9 +27,9 @@ class TestBot(sc2.BotAI):\nasync def on_step(self, iteration):\nif iteration == 0:\nawait self.chat_send(\"(glhf)\")\n- if iteration == 1:\n+ #if iteration == 1:\n# Test if chat message was sent correctly\n- assert len(self.state.chat) >= 1, self.state.chat\n+ # assert len(self.state.chat) >= 1, self.state.chat\n# Tests at start:\nif iteration == 5:\n"
    }
]