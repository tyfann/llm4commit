[
    {
        "sim_msg": "fix application",
        "sim_diff": "diff --git a/application.py b/application.py @@ -138,10 +138,10 @@ class EditRoot(np.PropertyOwner):\nreturn class_names\n- def tree_remove(self):\n+ def recursive_remove(self):\n# clear all\nfor n in self.children:\n- n.tree_remove()\n+ n.recursive_remove()\n#self.root.children = None\ndef find_widget_from_path(self, path):\n@@ -207,6 +207,7 @@ class Application(EditRoot):\nelif sys.platform==\"darwin\":\n_PROPERTY_HELP[\"output_path\"] = \"Output file or directory; double click label to show in Finder\"\n+ WX_CLASS = \"wxApp\"\nIS_WINDOW = IS_SIZER = IS_TOPLEVEL = IS_SLOT = False\nCHILDREN = None # any number of toplevel windows etc.\n",
        "org_diff": "diff --git a/fkie_node_manager/src/fkie_node_manager/editor/editor.py b/fkie_node_manager/src/fkie_node_manager/editor/editor.py @@ -168,6 +168,7 @@ class Editor(QMainWindow):\nfor f in filenames:\nif f:\nself.on_load_request(f, search_text, only_launch=True)\n+ self.log_dock.setVisible(False)\n# def __del__(self):\n# print \"******** destroy\", self.objectName()\n"
    },
    {
        "sim_msg": "Align FilterEnhancer with other enhancers",
        "sim_diff": "diff --git a/src/components/FilterEnhancer.js b/src/components/FilterEnhancer.js import React from 'react';\nimport PropTypes from 'prop-types';\n-import getContext from 'recompose/getContext';\n-import mapProps from 'recompose/mapProps';\nimport compose from 'recompose/compose';\n-\n+import mapProps from 'recompose/mapProps';\n+import getContext from 'recompose/getContext';\nimport { combineHandlers } from '../utils/compositionUtils';\nconst EnhancedFilter = OriginalComponent => compose(\n",
        "org_diff": "diff --git a/src/components/FilterCollapse.js b/src/components/FilterCollapse.js @@ -284,7 +284,7 @@ class FilterCollapse extends Component {\n}\ncomponentDidUpdate(prevProps, prevState) {\n- if (prevProps.filter === this.props.filter) {\n+ if (prevProps.filter !== this.props.filter) {\nQuery.set('f', this.state.filterInput);\n}\n}\n"
    },
    {
        "sim_msg": "Extract as method tier end time verification",
        "sim_diff": "diff --git a/src/components/manage/index.js b/src/components/manage/index.js @@ -423,14 +423,12 @@ export class Manage extends Component {\nreturn null\n}\n- const tierHasEnded = new Date(tier.endTime).getTime() <= Date.now()\n-\nreturn (\n<div onClick={this.clickedWhiteListInputBlock}>\n<div className=\"section-title\">\n<p className=\"title\">Whitelist</p>\n</div>\n- {tier.updatable && !crowdsaleStore.selected.finalized && !tierHasEnded && this.state.ownerCurrentUser\n+ {tier.updatable && !crowdsaleStore.selected.finalized && !this.tierHasEnded(tier) && this.state.ownerCurrentUser\n? this.whitelistInputBlock(index)\n: this.readOnlyWhitelistedAddresses(tier)\n}\n@@ -455,6 +453,8 @@ export class Manage extends Component {\n}\n}\n+ tierHasEnded = (tier) => new Date(tier.endTime).getTime() <= Date.now()\n+\nrender () {\nconst { formPristine, canFinalize, shouldDistribute, canDistribute, crowdsaleHasEnded, ownerCurrentUser } = this.state\nconst { generalStore, tierStore, tokenStore, crowdsaleStore } = this.props\n@@ -526,8 +526,7 @@ export class Manage extends Component {\n}\nconst tierStartAndEndTime = (tier, index) => {\n- const tierHasEnded = new Date(tier.endTime).getTime() <= Date.now()\n- const disabled = !this.state.ownerCurrentUser || !tier.updatable || tierHasEnded\n+ const disabled = !this.state.ownerCurrentUser || !tier.updatable || this.tierHasEnded(tier)\nreturn <div className='input-block-container'>\n<InputField\n@@ -556,8 +555,7 @@ export class Manage extends Component {\n}\nconst tierRateAndSupply = (tier, index) => {\n- const tierHasEnded = new Date(tier.endTime).getTime() <= Date.now()\n- const disabled = !this.state.ownerCurrentUser || !tier.updatable || tierHasEnded\n+ const disabled = !this.state.ownerCurrentUser || !tier.updatable || this.tierHasEnded(tier)\nreturn <div className='input-block-container'>\n<InputField\n",
        "org_diff": "diff --git a/src/dashboard/src/pages/Operator/Node/index.js b/src/dashboard/src/pages/Operator/Node/index.js @@ -14,7 +14,8 @@ import {\nForm,\nInput,\nSelect,\n- InputNumber\n+ InputNumber,\n+ Badge\n} from 'antd';\nimport { DownOutlined, PlusOutlined } from '@ant-design/icons';\nimport moment from 'moment';\n@@ -546,9 +547,6 @@ class Index extends PureComponent {\ncase 'stopped':\nstatusOfBadge = 'warning';\nbreak;\n- case 'error':\n- statusOfBadge = 'error';\n- break;\ndefault:\nbreak;\n}\n@@ -568,6 +566,8 @@ class Index extends PureComponent {\n</a>\n</Menu.Item>\n)}\n+ {\n+ record.status === 'stopped' &&\n<Menu.Item>\n<a onClick={() => this.operationForNode('start', record)}>\n{intl.formatMessage({\n@@ -576,6 +576,9 @@ class Index extends PureComponent {\n})}\n</a>\n</Menu.Item>\n+ }\n+ {\n+ record.status === 'running' &&\n<Menu.Item>\n<a onClick={() => this.operationForNode('stop', record)}>\n{intl.formatMessage({\n@@ -584,6 +587,9 @@ class Index extends PureComponent {\n})}\n</a>\n</Menu.Item>\n+ }\n+ {\n+ record.status === 'stopped' &&\n<Menu.Item>\n<a onClick={() => this.operationForNode('restart', record)}>\n{intl.formatMessage({\n@@ -592,6 +598,7 @@ class Index extends PureComponent {\n})}\n</a>\n</Menu.Item>\n+ }\n</Menu>\n);\n@@ -630,6 +637,14 @@ class Index extends PureComponent {\ndataIndex: 'created_at',\nrender: text => <span>{moment(text).format('YYYY-MM-DD HH:mm:ss')}</span>,\n},\n+ {\n+ title: intl.formatMessage({\n+ id: 'app.operator.node.table.header.status',\n+ defaultMessage: 'Status',\n+ }),\n+ dataIndex: 'status',\n+ render: text => <Badge status={badgeStatus(text)} text={text} />,\n+ },\n{\ntitle: intl.formatMessage({\nid: 'form.table.header.operation',\n"
    },
    {
        "sim_msg": "dont return a linklet-var, only create one",
        "sim_diff": "diff --git a/pycket/expand.py b/pycket/expand.py @@ -616,6 +616,10 @@ class JsonLoader(object):\nsrcmod, path = parse_path(path_arr)\nelse:\nsrcmod = path = None\n+\n+ modname = mksym(target[\"module\"].value_string()) if \"module\" in target else srcname\n+ var = ModuleVar(modname, srcmod, srcname, path)\n+\nelif \"source-linklet\" in target:\nsource = target[\"source-linklet\"].value_object()[\"quote\"].value_object()\nif \"toplevel\" in source and source[\"toplevel\"].value_string() == \"self\":\n@@ -623,13 +627,15 @@ class JsonLoader(object):\nelse:\ninstance_number = source[\"number\"].value_object()[\"integer\"].value_string()\ninstance_number = string_to_int(instance_number)\n- return LinkletVar(srcname, instance_number)\n+ var = LinkletVar(srcname, instance_number)\nelse:\nsrcmod = \"#%kernel\"\npath = None\nmodname = mksym(target[\"module\"].value_string()) if \"module\" in target else srcname\nvar = ModuleVar(modname, srcmod, srcname, path)\n+\n+\nelif \"lexical\" in target:\nvar = CellRef(values.W_Symbol.make(target[\"lexical\"].value_string()))\nelse:\n",
        "org_diff": "diff --git a/fkie_node_manager_daemon/src/fkie_node_manager_daemon/launcher.py b/fkie_node_manager_daemon/src/fkie_node_manager_daemon/launcher.py @@ -332,7 +332,7 @@ def _load_parameters(masteruri, params, clear_params):\nfor pkey, pval in params.items():\nvalue = pval\n# resolve path elements\n- if isinstance(value, types.StringTypes) and (value.startswith('$') or value.startswith('pkg://') or value.startswith('package://')):\n+ if isinstance(value, types.StringTypes) and (value.startswith('$') or value.startswith('pkg://')):\nvalue = interpret_path(value)\nrospy.logdebug(\"interpret parameter '%s' to '%s'\" % (value, pval))\n# add parameter to the multicall\n"
    },
    {
        "sim_msg": "move finishSwitchToProject to after model like it is for clusters\nif we place the finishSwitchToProject in the setupController then the loading of\nthe routes is not delayed and we can break initializers that are looking for the\nproject id.",
        "sim_diff": "diff --git a/app/authenticated/project/route.js b/app/authenticated/project/route.js @@ -56,6 +56,10 @@ export default Route.extend(Preload, {\n.catch((err) => this.loadingError(err, transition));\n},\n+ afterModel(model) {\n+ return this.scope.finishSwitchToProject(get(model, 'project'));\n+ },\n+\nredirect(model, transition) {\nlet route = this.get(`session.${ C.SESSION.PROJECT_ROUTE }`);\n@@ -65,11 +69,6 @@ export default Route.extend(Preload, {\n}\n},\n- setupController(controller, model) {\n- this._super(...arguments);\n- get(this, 'scope').finishSwitchToProject(get(model, 'project'));\n- },\n-\nactions: {\ntoggleGrouping() {\nlet choices = ['none', 'node', 'workload', 'namespace'];\n",
        "org_diff": "diff --git a/routes/cube_routes.js b/routes/cube_routes.js @@ -2109,19 +2109,16 @@ router.get(\nrouter.post(\n'/api/saveshowtagcolors',\n+ ensureAuth,\n+ body('show_tag_colors').toBoolean(),\n+ jsonValidationErrors,\nutil.wrapAsyncApi(async (req, res) => {\n- if (req.user) {\nreq.user.hide_tag_colors = !req.body.show_tag_colors;\nawait req.user.save();\nreturn res.status(200).send({\nsuccess: 'true',\n});\n- }\n-\n- return res.status(401).send({\n- success: 'false',\n- });\n}),\n);\n"
    },
    {
        "sim_msg": "Use smaller avatar for subcomments",
        "sim_diff": "diff --git a/src/components/Comments/Comment.js b/src/components/Comments/Comment.js @@ -47,7 +47,7 @@ class Comment extends React.Component {\nreturn (\n<div className=\"Comment\">\n- <Avatar username={comment.author} size={40} />\n+ <Avatar username={comment.author} size={(comment.depth === 1) ? 40 : 32} />\n<div className=\"Comment__text\">\n<Link to={`/@${comment.author}`}>\n{comment.author}\n",
        "org_diff": "diff --git a/src/components/Comment.js b/src/components/Comment.js @@ -121,7 +121,7 @@ class Comment extends React.Component {\nreturn (\n<div className='mb-1'>\n<div className={'comment border mt-1 px-2' + (this.state.highlighted ? ' comment-highlighted': '')}>\n- <a href={'/user/view/'+comment.owner}><img className=\"profile-thumbnail mt-2 mr-2\" src={comment.image} title={\"Art by \" + comment.artist}/></a>\n+ {true ? '' : <a href={'/user/view/'+comment.owner}><img className=\"profile-thumbnail mt-2 mr-2\" src={comment.image} title={\"Art by \" + comment.artist}/></a>}\n<div className=\"form-group mb-1\">\n{comment.ownerName ? <a href={'/user/view/'+comment.owner}><small>{comment.ownerName}</small></a> : <a><small>Anonymous</small></a>}\n{comment.timePosted && (comment.updated ? <em><small> - Updated <AgeText date={comment.timePosted}/></small></em> : <a><small> - <AgeText date={comment.timePosted}/></small></a>)}\n"
    },
    {
        "sim_msg": "Update fetchdata to skip over incomplete data",
        "sim_diff": "diff --git a/server/scripts/fetchdata.js b/server/scripts/fetchdata.js @@ -43,12 +43,14 @@ let fetchCards = apiRequest('cards')\ncards.forEach(function(card) {\nvar imagePath = path.join(imageDir, card.id + '.jpg');\n- var imagesrc = card.pack_cards[0].image_url;\n+ if(card.pack_cards.length > 0 && card.pack_cards[0].image_url) {\n+ var imagesrc = card.pack_cards[0].image_url;\nif(imagesrc && !fs.existsSync(imagePath)) {\nfetchImage(imagesrc, card.id, imagePath, i++ * 200);\n}\n+ }\n});\nreturn cards;\n",
        "org_diff": "diff --git a/serverjs/cards.js b/serverjs/cards.js @@ -35,7 +35,7 @@ function getPlaceholderCard(_id) {\nparsed_cost: [],\ncolorcategory: 'c',\nerror: true\n- }\n+ };\n}\nfunction cardFromId(id) {\n@@ -58,7 +58,6 @@ function getCardDetails(card) {\nreturn getPlaceholderCard(id);\n};\n}\n-}\nfunction loadJSONFile(filename, attribute) {\nreturn new Promise((resolve, reject) => {\n@@ -111,5 +110,6 @@ data.normalizedName = card => card.name.toLowerCase().normalize(\"NFD\").replace(/\ndata.allIds = card => data.nameToId[data.normalizedName(card)];\ndata.initializeCardDb = initializeCardDb;\ndata.loadJSONFile = loadJSONFile;\n+data.getPlaceholderCard = getPlaceholderCard;\nmodule.exports = data;\n\\ No newline at end of file\n"
    },
    {
        "sim_msg": "Fix the aspect ratio fix",
        "sim_diff": "diff --git a/src/web/stylesheets/components/_pane.css b/src/web/stylesheets/components/_pane.css line-height: 30px;\nbackground-color: var(--primary-background-colour);\nflex-direction: row;\n+ padding-left: 10px;\n}\n.io-card.card:hover {\nmargin-top: auto;\nmargin-right: auto;\nmargin-bottom: auto;\n- padding: 10px;\n- padding-right: 0px;\n+ padding: 0px;\n}\n",
        "org_diff": "diff --git a/public/css/stylesheet.css b/public/css/stylesheet.css }\n}\n+/* make autocard text more obvious in comments and descriptions */\n+.card-text .autocard {\n+ font-weight: bolder;\n+ opacity: 0.9; /* hack to lighten the color so bold isn't quite so strong */\n+}\n+\n.form-check {\nborder: none;\n}\n"
    },
    {
        "sim_msg": "statistics now allows non-bot output",
        "sim_diff": "diff --git a/trainer/utils/controller_statistics.py b/trainer/utils/controller_statistics.py @@ -10,32 +10,34 @@ class OutputChecks:\ngame_tick_packet = None\naccuracy_over_time = None\nbot_data_over_time = None\n+ requires_output = False\ndef __init__(self, packets, model_output, game_tick_packet, input_array, tf_session, action_handler,\n- tutorial_bot=None):\n+ bot=None):\nself.sess = tf_session\nself.packets = packets\nself.game_tick_packet = game_tick_packet\nself.input_array = input_array\nself.packet_generator = random_packet_creator.TensorflowPacketGenerator(packets)\n- self.tutorial_bot = tutorial_bot\n+ self.tutorial_bot = bot\nself.model_output = model_output\nself.actionHandler = action_handler\nif self.tutorial_bot is None:\n- self.tutorial_bot = tutorial_bot_output.TutorialBotOutput(packets)\n+ self.requires_output = True\ndef create_model(self):\n# clear history\nself.accuracy_over_time = []\nself.bot_data_over_time = []\n- def get_amounts(self):\n+ def get_amounts(self, bot_output=None):\ncontrols = tf.transpose(\nself.actionHandler.create_tensorflow_controller_from_selection(self.model_output, self.packets))\n- expected = self.tutorial_bot.get_output_vector(self.game_tick_packet)\n+ if not self.requires_output:\n+ bot_output = self.tutorial_bot.get_output_vector(self.game_tick_packet)\n- output, bot_output = self.sess.run([controls, expected])\n+ output = self.sess.run(controls)\naccuracy = np.sum(np.isclose(output, bot_output, 0.01), 1) / np.size(output[1])\nself.accuracy_over_time.append(accuracy)\n@@ -63,14 +65,13 @@ class OutputChecks:\nnumber_prints = len(self.accuracy_over_time)\naccuracy = np.transpose(self.accuracy_over_time)\nnp.set_printoptions(formatter={'float': '{: 0.2f}'.format})\n- ten = number_prints * .1\n- twfive = number_prints * .25\n- fifty = number_prints * .5\n+ percentages = [10, 25, 50]\nnames = [\"Throttle\", \"Steer\", \"Pitch\", \"Yaw\", \"Roll\", \"Jump\", \"Boost\", \"Handbrake\"]\n- print(\"Every action is printed four times, once all values and then averages over 10%, 25% and 50%\")\n+ print(\"Every action is printed multiple times, once all values and then averages over percentages\")\nfor n in range(8):\nprint(names[n] + \":\")\nprint(\"All: \", accuracy[n])\n- print(\"Averages every 10%\", np.array([average(accuracy[n][int(i * ten):int(i * ten + ten) if not int(i * ten + ten) is int(i * ten) else int(i * ten) + 1]) for i in range(10)]))\n- print(\" 25%\", np.array([average(accuracy[n][int(i * twfive):int(i * twfive + twfive) if not int(i * twfive + twfive) is int(i * twfive) else int(i * twfive) + 1]) for i in range(4)]))\n- print(\" 50%\", np.array([average(accuracy[n][int(i * fifty):int(i * fifty + fifty) if not int(i * fifty + fifty) is int(i * fifty) else int(i * fifty) + 1]) for i in range(2)]))\n+ for p in percentages:\n+ r = int(100 / p)\n+ step = int(number_prints * p / 100)\n+ print(str(p) + \"%:\", np.array([average(accuracy[n][int(i * step):int(i * step + step) if not int(i * step + step) is int(i * step) else int(i * step) + 1]) for i in range(r)]))\n",
        "org_diff": "diff --git a/test/test_bot.py b/test/test_bot.py @@ -20,7 +20,7 @@ class TestBot(sc2.BotAI):\ndef __init__(self):\n# Tests related\nself.game_time_timeout_limit = 2*60\n- self.tests_target = 7\n+ self.tests_target = 8\nself.tests_done_by_name = set()\n# Variables handled by tests\n@@ -64,6 +64,11 @@ class TestBot(sc2.BotAI):\nawait self.test_botai_actions4()\nawait self.test_botai_actions4_successful()\n+ elif \"test_botai_actions5_successful\" not in self.tests_done_by_name:\n+ if iteration >= 6:\n+ await self.test_botai_actions5()\n+ await self.test_botai_actions5_successful()\n+\n# End when all tests successful\n@@ -123,8 +128,22 @@ class TestBot(sc2.BotAI):\ncombined_actions.append(scv.move(center))\nawait self.do_actions(combined_actions)\n- # Test BotAI action: move all SCVs to mine minerals near townhall\n+ # Test BotAI action: move some scvs to the center, some to minerals\nasync def test_botai_actions3(self):\n+ combined_actions = []\n+ center = self._game_info.map_center\n+ scvs = self.workers\n+ scvs1 = scvs[:6]\n+ scvs2 = scvs[6:]\n+ for scv in scvs1:\n+ combined_actions.append(scv.move(center))\n+ mf = self.state.mineral_field.closest_to(self.townhalls.random)\n+ for scv in scvs2:\n+ combined_actions.append(scv.gather(mf))\n+ await self.do_actions(combined_actions)\n+\n+ # Test BotAI action: move all SCVs to mine minerals near townhall\n+ async def test_botai_actions4(self):\ncombined_actions = []\nmf = self.state.mineral_field.closest_to(self.townhalls.random)\nfor scv in self.units(UnitTypeId.SCV):\n@@ -132,7 +151,7 @@ class TestBot(sc2.BotAI):\nawait self.do_actions(combined_actions)\n# Test BotAI action: self.expand_now()\n- async def test_botai_actions4(self):\n+ async def test_botai_actions5(self):\nif self.can_afford(UnitTypeId.COMMANDCENTER) and not self.already_pending(UnitTypeId.COMMANDCENTER, all_units=True):\nawait self.expand_now()\n@@ -147,13 +166,18 @@ class TestBot(sc2.BotAI):\nself.tests_done_by_name.add(\"test_botai_actions2_successful\")\nasync def test_botai_actions3_successful(self):\n- if self.units.gathering.amount >= 12:\n+ if self.units.filter(lambda x: x.is_moving).amount >= 6:\n+ if self.units.gathering.amount >= 6:\nself.tests_done_by_name.add(\"test_botai_actions3_successful\")\nasync def test_botai_actions4_successful(self):\n- if self.units(UnitTypeId.COMMANDCENTER).amount >= 2:\n+ if self.units.gathering.amount >= 12:\nself.tests_done_by_name.add(\"test_botai_actions4_successful\")\n+ async def test_botai_actions5_successful(self):\n+ if self.units(UnitTypeId.COMMANDCENTER).amount >= 2:\n+ self.tests_done_by_name.add(\"test_botai_actions5_successful\")\n+\n# Test self.state variables\n"
    },
    {
        "sim_msg": "extracted checkbox logic to function",
        "sim_diff": "diff --git a/packages/component-library/src/CardList/CardList.js b/packages/component-library/src/CardList/CardList.js @@ -123,6 +123,21 @@ const CardList = ({ CardRegistry, tagsList, projects }) => {\nsetMobileOpen(!mobileOpen);\n};\n+ const handleCheckboxChange = (category, id) => {\n+ if (showAllStories) setShowAllStories(false);\n+ if (activeFilters[category].includes(id)) {\n+ setActiveFilters({\n+ ...activeFilters,\n+ [category]: activeFilters[category].filter(tag => tag !== id)\n+ });\n+ } else {\n+ setActiveFilters({\n+ ...activeFilters,\n+ [category]: [...activeFilters[category], id]\n+ });\n+ }\n+ };\n+\nconst drawer = (\n<div className={classes.toolbar}>\n<h1 css={filterPadding}>Filters</h1>\n@@ -151,22 +166,7 @@ const CardList = ({ CardRegistry, tagsList, projects }) => {\n<Checkbox\nvalue={activeFilters[category].includes(id)}\nlabel={id}\n- onChange={() => {\n- if (showAllStories) setShowAllStories(false);\n- if (activeFilters[category].includes(id)) {\n- setActiveFilters({\n- ...activeFilters,\n- [category]: activeFilters[category].filter(\n- tag => tag !== id\n- )\n- });\n- } else {\n- setActiveFilters({\n- ...activeFilters,\n- [category]: [...activeFilters[category], id]\n- });\n- }\n- }}\n+ onChange={() => handleCheckboxChange(category, id)}\n/>\n</ListItem>\n))}\n",
        "org_diff": "diff --git a/src/utils/Sort.js b/src/utils/Sort.js @@ -262,22 +262,7 @@ function getLabelsRaw(cube, sort) {\nreturn ['White', 'Blue', 'Black', 'Red', 'Green', 'Colorless'];\n}\nif (sort === 'Type') {\n- return [\n- 'Creature',\n- 'Planeswalker',\n- 'Instant',\n- 'Sorcery',\n- 'Artifact',\n- 'Enchantment',\n- 'Conspiracy',\n- 'Contraption',\n- 'Phenomenon',\n- 'Plane',\n- 'Scheme',\n- 'Vanguard',\n- 'Land',\n- 'Other',\n- ];\n+ return CARD_TYPES.concat(['Other']);\n}\nif (sort === 'Supertype') {\nreturn ['Snow', 'Legendary', 'Tribal', 'Basic', 'Elite', 'Host', 'Ongoing', 'World'];\n@@ -352,48 +337,11 @@ function getLabelsRaw(cube, sort) {\nreturn [...types];\n}\nif (sort === 'Types-Multicolor') {\n- return [\n- 'Creature',\n- 'Planeswalker',\n- 'Instant',\n- 'Sorcery',\n- 'Artifact',\n- 'Enchantment',\n- 'Conspiracy',\n- 'Contraption',\n- 'Phenomenon',\n- 'Plane',\n- 'Scheme',\n- 'Vanguard',\n- 'Azorius',\n- 'Dimir',\n- 'Rakdos',\n- 'Gruul',\n- 'Selesnya',\n- 'Orzhov',\n- 'Golgari',\n- 'Simic',\n- 'Izzet',\n- 'Boros',\n- 'Bant',\n- 'Esper',\n- 'Grixis',\n- 'Jund',\n- 'Naya',\n- 'Abzan',\n- 'Jeskai',\n- 'Sultai',\n- 'Mardu',\n- 'Temur',\n- 'Non-White',\n- 'Non-Blue',\n- 'Non-Black',\n- 'Non-Red',\n- 'Non-Green',\n- 'Five Color',\n- 'Land',\n- 'Other',\n- ];\n+ return CARD_TYPES.slice(0, -1)\n+ .concat(GUILDS)\n+ .concat(SHARDS_AND_WEDGES)\n+ .concat(FOUR_AND_FIVE_COLOR)\n+ .concat(['Land', 'Other']);\n}\nif (sort === 'Legality') {\nreturn ['Standard', 'Modern', 'Legacy', 'Vintage', 'Pioneer', 'Brawl', 'Historic', 'Pauper', 'Penny', 'Commander'];\n"
    },
    {
        "sim_msg": "Fix importdata after merge",
        "sim_diff": "diff --git a/server/scripts/importdata.js b/server/scripts/importdata.js @@ -5,9 +5,9 @@ const _ = require('underscore');\nconst CardService = require('../services/CardService.js');\n-let db = monk('mongodb://127.0.0.1:27017/throneteki');\n+let db = monk('mongodb://127.0.0.1:27017/ringteki');\nlet cardService = new CardService(db);\n-let files = fs.readdirSync('thronesdb-json-data/pack');\n+let files = fs.readdirSync('fiveringdsdb-data/Pack');\nlet totalCards = [];\nlet packs = JSON.parse(fs.readFileSync('fiveringdsdb-data/Pack.json'));\nlet types = JSON.parse(fs.readFileSync('fiveringdsdb-data/Type.json'));\n",
        "org_diff": "diff --git a/serverjs/updatecards.js b/serverjs/updatecards.js @@ -131,7 +131,7 @@ const specialCaseCards = {\n'Westvale Abbey': ['94ed2eca-1579-411d-af6f-c7359c65de30'],\n};\n-function getTokensForCard(card) {\n+function getScryfallTokensForCard(card) {\nconst allParts = card.all_parts || [];\nreturn allParts\n.filter((element) => element.component === 'token' || element.type_line.startsWith('Emblem'))\n@@ -167,10 +167,9 @@ function arraySetEqual(target, candidate) {\nreturn isValid;\n}\n-function addTokens(card) {\n+function getTokens(card, catalogCard) {\nconst mentionedTokens = [];\n- const catalogCard = catalog.dict[card.id];\n- const recordedTokens = getTokensForCard(card);\n+ const recordedTokens = getScryfallTokensForCard(card);\nconst specialTokens = getTokensForSpecialCaseCard(card);\nif (specialTokens.length > 0) {\nmentionedTokens.push(...recordedTokens);\n@@ -233,7 +232,7 @@ function addTokens(card) {\n// populate\ncontinue; // eslint-disable-line no-continue\n- const cardTokens = getTokensForCard(card);\n+ const cardTokens = getScryfallTokensForCard(card);\nif (cardTokens.length > 0) {\nmentionedTokens.push(...cardTokens);\n@@ -359,9 +358,7 @@ function addTokens(card) {\n}\n}\n- if (mentionedTokens.length > 0) {\n- catalogCard.tokens = mentionedTokens.filter((id) => id !== card.id);\n- }\n+ return mentionedTokens;\n}\nfunction convertCmc(card, isExtra) {\n@@ -583,6 +580,11 @@ function convertCard(card, isExtra) {\nnewcard.colorcategory = newcard.color_identity[0].toLowerCase();\n}\n+ const tokens = getTokens(card, newcard);\n+ if (tokens.length > 0) {\n+ newcard.tokens = tokens;\n+ }\n+\nreturn newcard;\n}\n@@ -637,7 +639,6 @@ function saveEnglishCard(card) {\naddCardToCatalog(convertCard(card, true), true);\n}\naddCardToCatalog(convertCard(card));\n- addTokens(card);\n}\nasync function saveAllCards(basePath = 'private', defaultPath = null, allPath = null) {\n@@ -691,4 +692,5 @@ module.exports = {\nconvertColors,\nconvertParsedCost,\nconvertCmc,\n+ getTokens,\n};\n"
    },
    {
        "sim_msg": "Fix incorrectly handled scheduled ticks",
        "sim_diff": "diff --git a/src/main/java/io/github/opencubicchunks/cubicchunks/core/world/cube/Cube.java b/src/main/java/io/github/opencubicchunks/cubicchunks/core/world/cube/Cube.java @@ -353,7 +353,7 @@ public class Cube implements ICube {\nassert storage != null : \"There are blocks to tick in cube but getStorage() is empty!\";\nNextTickListEntry ntle = pti.next();\nif (ntle.scheduledTime > world.getTotalWorldTime())\n- return;\n+ break;\nBlockPos pos = ntle.position;\nIBlockState iblockstate = this.storage.get(blockToLocal(pos.getX()), blockToLocal(pos.getY()), blockToLocal(pos.getZ()));\nif (iblockstate.getMaterial() != Material.AIR && iblockstate.getBlock() == ntle.getBlock()) {\n",
        "org_diff": "diff --git a/views/cube/cube_playtest.pug b/views/cube/cube_playtest.pug @@ -75,6 +75,6 @@ block cube_content\ninput#customDraftHiddenId(type='hidden', name='id')\ninput.btn.btn-success(type='submit',value='Save')\nbutton.btn.btn-secondary(type='button', data-dismiss='modal') Close\n- script(src='/js/packcraft.js')\ninclude ../react\nscript(src='/js/cube_playtest.bundle.js')\n+ script(src='/js/packcraft.js')\n"
    },
    {
        "sim_msg": "Alphabetise import statements and combineStore keys.",
        "sim_diff": "diff --git a/assets/js/googlesitekit/datastore/user/index.js b/assets/js/googlesitekit/datastore/user/index.js import Data from 'googlesitekit-data';\nimport { createErrorStore } from '../../data/create-error-store';\nimport authentication from './authentication';\n+import { CORE_USER } from './constants';\nimport dateRange from './date-range';\nimport disconnect from './disconnect';\nimport dismissedItems from './dismissed-items';\nimport featureTours from './feature-tours';\n+import keyMetrics from './key-metrics';\nimport notifications from './notifications';\n-import permissions from './permissions';\nimport nonces from './nonces';\n+import permissions from './permissions';\nimport surveys from './surveys';\nimport tracking from './tracking';\nimport userInfo from './user-info';\nimport userInputSettings from './user-input-settings';\n-import keyMetrics from './key-metrics';\n-import { CORE_USER } from './constants';\nconst store = Data.combineStores(\nData.commonStore,\n@@ -44,14 +44,14 @@ const store = Data.combineStores(\ndisconnect,\ndismissedItems,\nfeatureTours,\n+ keyMetrics,\nnotifications,\npermissions,\nnonces,\nsurveys,\ntracking,\nuserInfo,\n- userInputSettings,\n- keyMetrics\n+ userInputSettings\n);\nexport const {\n",
        "org_diff": "diff --git a/app.js b/app.js @@ -102,11 +102,11 @@ app.get('/', function(req, res)\nif(req.user) user_id = req.user._id;\nCube.find({\n'card_count':{$gt : 200},\n- $or:[ {'isListed':true}, {'owner':user_id} ]\n+ $or:[ {'isListed':true},{'isListed':null}, {'owner':user_id} ]\n}).sort({'date_updated': -1}).limit(12).exec(function(err, recents)\n{\nCube.find({\n- $or:[ {'isListed':true}, {'owner':user_id} ]\n+ $or:[ {'isListed':true},{'isListed':null}, {'owner':user_id} ]\n}).sort({'numDecks': -1}).limit(12).exec(function(err, drafted)\n{\nBlog.find({dev:'true'}).sort({'date': -1}).exec(function(err, blog)\n"
    },
    {
        "sim_msg": "Fix pull logs script to get most recent logs based on timestamp\nThis makes pull logs work properly with",
        "sim_diff": "diff --git a/scripts/pull_logs.py b/scripts/pull_logs.py @@ -29,9 +29,8 @@ def main():\n# Get directory names of the past n logs\nfile_list_command = [\"ssh\", \"{user}@{address}\".format(user=rio_user, address=rio_address),\n- \"ls\", \"-1\", \"{}\".format(rio_path), \"|\",\n- \"grep\" , \"-E\", \"[0-9]{9}\", \"|\",\n- \"tail\" , \"-n\", \"{}\".format(args.num_logs)]\n+ \"ls\", \"-1t\", \"{}\".format(rio_path), \"|\", # List all logs, sorted by time\n+ \"head\" , \"-n\", \"{}\".format(args.num_logs)]\nproc = subprocess.Popen(file_list_command, stdout=subprocess.PIPE, stderr=subprocess.PIPE)\nstdout, stderr = proc.communicate()\n",
        "org_diff": "diff --git a/fkie_node_manager_daemon/src/fkie_node_manager_daemon/screen.py b/fkie_node_manager_daemon/src/fkie_node_manager_daemon/screen.py @@ -197,6 +197,10 @@ def get_ros_logfile(node):\nelse:\n# search in latest subfolder\nlogpath = os.path.join(LOG_PATH, \"latest\")\n+ if not os.path.exists(logpath):\n+ logpath = LOG_PATH\n+ if not os.path.exists(logpath):\n+ return ''\np = re.compile(r\"%s-\\d*.log\" % (node.strip('/').replace('/', '-')))\nfiles = os.listdir(logpath)\nfor fn in files:\n"
    },
    {
        "sim_msg": "added back in the feature gates extra args",
        "sim_diff": "diff --git a/Lib/Neon.Kube/Proxies/NodeSshProxy.ClusterSetup.cs b/Lib/Neon.Kube/Proxies/NodeSshProxy.ClusterSetup.cs @@ -627,7 +627,7 @@ EOF\n@\"\nset -euo pipefail\n-echo KUBELET_EXTRA_ARGS=--network-plugin=cni --cni-bin-dir=/opt/cni/bin --cni-conf-dir=/etc/cni/net.d --container-runtime=remote --cgroup-driver=systemd --container-runtime-endpoint='unix:///var/run/crio/crio.sock' --runtime-request-timeout=5m --resolv-conf=/run/systemd/resolve/resolv.conf > /etc/default/kubelet\n+echo KUBELET_EXTRA_ARGS=--network-plugin=cni --cni-bin-dir=/opt/cni/bin --feature-gates=\\\"\"AllAlpha=false,RunAsGroup=true\\\"\" --cni-conf-dir=/etc/cni/net.d --container-runtime=remote --cgroup-driver=systemd --container-runtime-endpoint='unix:///var/run/crio/crio.sock' --runtime-request-timeout=5m --resolv-conf=/run/systemd/resolve/resolv.conf > /etc/default/kubelet\nsystemctl daemon-reload\nservice kubelet restart\n\";\n",
        "org_diff": "diff --git a/fkie_node_manager/src/fkie_node_manager/main_window.py b/fkie_node_manager/src/fkie_node_manager/main_window.py @@ -2090,7 +2090,11 @@ class MainWindow(QMainWindow):\nnm.nmd().settings.get_config_threaded(nmd_uri)\ndef _nmd_yaml_cfg(self, data, nmdurl):\n+ params = {}\n+ try:\nparams = ruamel.yaml.load(data, Loader=ruamel.yaml.Loader)\n+ except Exception as err:\n+ rospy.logwarn(\"Error while parse daemon configuration: %s\" % utf8(err))\ndia = ParameterDialog(params, store_geometry=\"nmd_cfg_dialog\")\ndia.setWindowTitle('Daemon Configuration')\ndia.setFocusField('load_warn_level')\n"
    },
    {
        "sim_msg": "Update fetchdata to skip over incomplete data",
        "sim_diff": "diff --git a/server/scripts/fetchdata.js b/server/scripts/fetchdata.js @@ -43,12 +43,14 @@ let fetchCards = apiRequest('cards')\ncards.forEach(function(card) {\nvar imagePath = path.join(imageDir, card.id + '.jpg');\n- var imagesrc = card.pack_cards[0].image_url;\n+ if(card.pack_cards.length > 0 && card.pack_cards[0].image_url) {\n+ var imagesrc = card.pack_cards[0].image_url;\nif(imagesrc && !fs.existsSync(imagePath)) {\nfetchImage(imagesrc, card.id, imagePath, i++ * 200);\n}\n+ }\n});\nreturn cards;\n",
        "org_diff": "diff --git a/serverjs/cards.js b/serverjs/cards.js @@ -54,8 +54,8 @@ function getCardDetails(card) {\ndetails.display_image = util.getCardImageURL(card);\nreturn details;\n} else {\n- console.log(\"Could not find: \" + id);\n- return getPlaceholderCard(id);\n+ console.log(\"Could not find: \" + card.cardID);\n+ return getPlaceholderCard(card.cardID);\n};\n}\n"
    },
    {
        "sim_msg": "set card type bool",
        "sim_diff": "diff --git a/server/game/drawcard.js b/server/game/drawcard.js @@ -24,6 +24,8 @@ class DrawCard extends BaseCard {\nthis.contributesToFavor = true;\nthis.bowed = false;\nthis.inConflict = false;\n+ this.isConflict = false;\n+ this.isDynasty = false;\nthis.readysDuringReadying = true;\nthis.challengeOptions = {\ndoesNotBowAs: {\n@@ -32,6 +34,12 @@ class DrawCard extends BaseCard {\n}\n};\nthis.stealthLimit = 1;\n+\n+ if(cardData.deck === 'conflict') {\n+ this.isConflict = true;\n+ } else if(cardData.deck === 'dynasty') {\n+ this.isDynasty = true;\n+ }\n}\nisLimited() {\n",
        "org_diff": "diff --git a/serverjs/cubefn.js b/serverjs/cubefn.js @@ -106,7 +106,7 @@ function setCubeType(cube, carddb) {\nlet peasant = false;\nlet type = FORMATS.length - 1;\nfor (const card of cube.cards) {\n- if (pauper && !['legal', 'banned'].includes(carddb.cardFromId(card.cardID).legalities.Pauper)) {\n+ if (pauper && !cardIsLegal(carddb.cardFromId(card.cardID), 'Pauper')) {\npauper = false;\npeasant = true;\n}\n"
    },
    {
        "sim_msg": "Fix bug in SpecificCardCost.js",
        "sim_diff": "diff --git a/server/game/costs/SpecificCardCost.js b/server/game/costs/SpecificCardCost.js @@ -7,12 +7,8 @@ class SpecificCardCost {\ncanPay(context) {\nlet card = this.cardFunc(context);\n//handle cases where \"card\" is actually an array of cards\n- if(card.length !== undefined && card.length > 0) {\n- let result = true;\n- card.forEach((subcard) => {\n- result = result && this.action.canAffect(subcard);\n- });\n- return result;\n+ if(Array.isArray(card)) {\n+ return card.every(c => this.action.canAffect(c, context));\n}\nreturn this.action.canAffect(card, context);\n}\n",
        "org_diff": "diff --git a/serverjs/updatecards.js b/serverjs/updatecards.js @@ -466,10 +466,6 @@ function convertParsedCost(card, isExtra = false) {\nreturn [];\n}\n- if (!card.mana_cost) {\n- return [''];\n- }\n-\nlet parsedCost = [];\nif (typeof card.card_faces === 'undefined' || card.layout === 'flip') {\nparsedCost = card.mana_cost\n@@ -484,7 +480,7 @@ function convertParsedCost(card, isExtra = false) {\n.toLowerCase()\n.split('}{')\n.reverse();\n- } else if (card.card_faces[0].colors) {\n+ } else if (Array.isArray(card.card_faces) && card.card_faces[0].colors) {\nparsedCost = card.card_faces[0].mana_cost\n.substr(1, card.card_faces[0].mana_cost.length - 2)\n.toLowerCase()\n"
    },
    {
        "sim_msg": "taking out some logs",
        "sim_diff": "diff --git a/routes/index.js b/routes/index.js @@ -49,15 +49,11 @@ module.exports = function(server) {\nserver.get(/.*/, function(req, res, next) {\nvar current_hash = config.engine.get('version');\nvar url_arr = req.url.split('/');\n- console.log(current_hash);\n- console.log(url_arr[1])\nif(url_arr[1] != current_hash){\n- console.log('but do I go here');\nurl_arr.splice(1,0, current_hash);\nvar newPath = url_arr.join('/');\nres.redirect(newPath , next);\n} else {\n- console.log(next());\nnext();\n}\n},\n",
        "org_diff": "diff --git a/routes/cube_routes.js b/routes/cube_routes.js @@ -2520,11 +2520,9 @@ router.delete('/remove/:id', ensureAuth, function(req, res) {\nres.redirect('/' + req.params.id);\n}\n- let query = {\n- _id: req.params.id\n- };\n+ let query = build_id_query(req.params.id)\n- Cube.findOne(build_id_query(req.params.id), function(err, cube) {\n+ Cube.findOne(query, function(err, cube) {\nif (err || !cube || (cube.owner != req.user._id)) {\nreq.flash('danger', 'Cube not found');\nres.redirect('/404/');\n"
    },
    {
        "sim_msg": "refactor checkbox change handler",
        "sim_diff": "diff --git a/src/screens/FilterModal/component.js b/src/screens/FilterModal/component.js @@ -30,6 +30,17 @@ type Props = {\nonCancel: () => void\n};\n+const toggleTagFilter = (\n+ selectedValues: Set<string> | Set<Area>,\n+ sectionValue: string\n+) => {\n+ const values: Set<string> = new Set([...selectedValues]);\n+ if (!values.delete(sectionValue)) {\n+ values.add(sectionValue);\n+ }\n+ return values;\n+};\n+\nclass FilterModal extends PureComponent<Props> {\ncomponentDidMount() {\nconst { navigation, onCancel } = this.props;\n@@ -44,27 +55,24 @@ class FilterModal extends PureComponent<Props> {\nremove: () => void\n};\n- toggleTagFilter = (\n- selectedValues: Set<string> | Set<Area>,\n- sectionValue: string\n- ) => {\n- const values: Set<string> = new Set([...selectedValues]);\n- if (!values.delete(sectionValue)) {\n- values.add(sectionValue);\n- }\n- return values;\n- };\n-\nclearTagFilters = () =>\nthis.props.onChange(\nObject.keys(tags).reduce((acc, key) => ({ ...acc, [key]: new Set() }), {})\n);\n+ handleCheckboxChange = (sectionName: string, sectionValue: string) => {\n+ this.props.onChange({\n+ [sectionName]: toggleTagFilter(\n+ this.props.eventFilters[sectionName],\n+ sectionValue\n+ )\n+ });\n+ };\n+\nrender() {\nconst {\napplyButtonText,\nonApply,\n- onChange,\neventFilters,\nnavigation,\nnumEventsSelected,\n@@ -99,14 +107,9 @@ class FilterModal extends PureComponent<Props> {\ntags[sectionName].map(sectionValue => (\n<CheckBox\nkey={sectionValue}\n- onChange={() => {\n- onChange({\n- [sectionName]: this.toggleTagFilter(\n- eventFilters[sectionName],\n- sectionValue\n- )\n- });\n- }}\n+ onChange={() =>\n+ this.handleCheckboxChange(sectionName, sectionValue)\n+ }\nchecked={eventFilters[sectionName].has(sectionValue)}\n// $FlowFixMe\nlabel={text.tags[sectionValue] || sectionValue}\n",
        "org_diff": "diff --git a/src/components/FilterCollapse.js b/src/components/FilterCollapse.js @@ -259,6 +259,7 @@ class FilterCollapse extends Component {\nsuper(props);\nthis.state = {\n+ loading: false,\nadvancedOpen: false,\nfilterInput: this.props.defaultFilterText || '',\n...fromEntries(allFields.map((n) => [n, ''])),\n@@ -277,7 +278,13 @@ class FilterCollapse extends Component {\n}\ncomponentDidMount() {\n- this.updateFilters();\n+ const defaultFilter = Query.get('f', '');\n+ this.setState({ filterInput: defaultFilter });\n+ this.updateFilters(defaultFilter);\n+ }\n+\n+ componentDidUpdate() {\n+ Query.set('f', this.state.filterInput);\n}\ntoggleAdvanced() {\n@@ -286,7 +293,7 @@ class FilterCollapse extends Component {\n});\n}\n- applyAdvanced() {\n+ async applyAdvanced() {\n// Advanced Filter change. Render to filter input.\nconst tokens = [];\nfor (const name of allFields) {\n@@ -316,10 +323,10 @@ class FilterCollapse extends Component {\nadvancedOpen: false,\nfilterInput,\n});\n- this.updateFilters(filterInput);\n+ await this.updateFilters(filterInput);\n}\n- updateFilters(overrideFilter) {\n+ async updateFilters(overrideFilter) {\nconst filterInput = typeof overrideFilter === 'undefined' ? this.state.filterInput : overrideFilter;\nif (filterInput === '') {\nthis.props.setFilter([], '');\n@@ -333,8 +340,9 @@ class FilterCollapse extends Component {\nif (tokens.length > 0) {\nconst filters = [Filter.parseTokens(tokens)];\n// TODO: Copy to advanced filter boxes.\n- this.props.setFilter(filters, filterInput);\n- Query.set('f', filterInput);\n+ this.setState({ loading: true });\n+ await this.props.setFilter(filters, filterInput);\n+ this.setState({ loading: false });\n}\n}\n@@ -348,15 +356,15 @@ class FilterCollapse extends Component {\n});\n}\n- handleApply(event) {\n+ async handleApply(event) {\nevent.preventDefault();\n- this.updateFilters();\n+ await this.updateFilters();\n}\n- handleKeyDown(event) {\n+ async handleKeyDown(event) {\nif (event.keyCode === 13 /* ENTER */) {\nevent.preventDefault();\n- this.updateFilters();\n+ await this.updateFilters();\n}\n}\n@@ -368,7 +376,7 @@ class FilterCollapse extends Component {\nrender() {\nconst { filter, setFilter, numCards, numShown, useQuery, defaultFilterText, ...props } = this.props;\n- const { filterInput, advancedOpen } = this.state;\n+ const { loading, filterInput, advancedOpen } = this.state;\nconst tokens = [];\nconst valid = Filter.tokenizeInput(filterInput, tokens) && Filter.verifyTokens(tokens);\nconst appliedText =\n@@ -398,7 +406,7 @@ class FilterCollapse extends Component {\nonKeyDown={this.handleKeyDown}\n/>\n<InputGroupAddon addonType=\"append\">\n- <LoadingButton color=\"success\" className=\"square-left\" onClick={this.handleApply}>\n+ <LoadingButton color=\"success\" className=\"square-left\" onClick={this.handleApply} loading={loading}>\nApply\n</LoadingButton>\n</InputGroupAddon>\n"
    },
    {
        "sim_msg": "Added more Select2 widgets to (mostly) country fields, and 1 airport field",
        "sim_diff": "diff --git a/workshops/forms.py b/workshops/forms.py @@ -450,6 +450,7 @@ class EventForm(forms.ModelForm):\ncountry = CountryField().formfield(\nrequired=False,\nhelp_text=Event._meta.get_field('country').help_text,\n+ widget=ListSelect2(),\n)\nadmin_fee = forms.DecimalField(min_value=0, decimal_places=2,\n@@ -592,6 +593,10 @@ class PersonForm(forms.ModelForm):\n'languages',\n]\n+ widgets = {\n+ 'country': ListSelect2(),\n+ }\n+\nclass PersonCreateForm(PersonForm):\nclass Meta(PersonForm.Meta):\n@@ -822,6 +827,7 @@ class SWCEventRequestNoCaptchaForm(PrivacyConsentMixin, forms.ModelForm):\n'attendee_computing_levels': forms.CheckboxSelectMultiple(),\n'travel_reimbursement': RadioSelectWithOther('travel_reimbursement_other'),\n'admin_fee_payment': forms.RadioSelect(),\n+ 'country': ListSelect2(),\n}\ndef __init__(self, *args, **kwargs):\n@@ -973,6 +979,7 @@ class ProfileUpdateRequestFormNoCaptcha(forms.ModelForm):\n'gender': RadioSelectWithOther('gender_other'),\n'domains': CheckboxSelectMultipleWithOthers('domains_other'),\n'lessons': CheckboxSelectMultipleWithOthers('lessons_other'),\n+ 'country': ListSelect2(),\n}\ndef __init__(self, *args, **kwargs):\n@@ -1259,6 +1266,7 @@ class TrainingRequestForm(forms.ModelForm):\n'programming_language_usage_frequency': forms.RadioSelect(),\n'teaching_frequency_expectation': RadioSelectWithOther('teaching_frequency_expectation_other'),\n'max_travelling_frequency': RadioSelectWithOther('max_travelling_frequency_other'),\n+ 'country': ListSelect2(),\n}\ndef __init__(self, *args, initial_group_name=None, **kwargs):\n@@ -1488,6 +1496,7 @@ class AutoUpdateProfileForm(forms.ModelForm):\ncountry = CountryField().formfield(\nrequired=False,\nhelp_text='Your country of residence.',\n+ widget=ListSelect2(),\n)\nlanguages = forms.ModelMultipleChoiceField(\n@@ -1530,6 +1539,7 @@ class AutoUpdateProfileForm(forms.ModelForm):\n'gender': forms.RadioSelect(),\n'domains': forms.CheckboxSelectMultiple(),\n'lessons': forms.CheckboxSelectMultiple(),\n+ 'airport': ListSelect2(),\n}\n",
        "org_diff": "diff --git a/rasa_core_sdk/forms.py b/rasa_core_sdk/forms.py @@ -40,14 +40,26 @@ class FormAction(Action):\n@staticmethod\ndef from_entity(entity, intent=None):\n+ # type: (Text, Optional[Text]) -> Dict[Text: Any]\n+ \"\"\"A dictionary to map required slots to\n+ - an extracted entity\n+ \"\"\"\nreturn {\"type\": \"from_entity\", \"intent\": intent, \"entity\": entity}\n@staticmethod\ndef from_intent(intent, value):\n+ # type: (Optional[Text], Any) -> Dict[Text: Any]\n+ \"\"\"A dictionary to map required slots to\n+ - intent: value pair\n+ \"\"\"\nreturn {\"type\": \"from_intent\", \"intent\": intent, \"value\": value}\n@staticmethod\ndef from_text(intent=None):\n+ # type: (Optional[Text]) -> Dict[Text: Any]\n+ \"\"\"A dictionary to map required slots to\n+ - a whole message\n+ \"\"\"\nreturn {\"type\": \"from_text\", \"intent\": intent}\n# noinspection PyMethodMayBeStatic\n"
    },
    {
        "sim_msg": "[neon-proxy-manager]: Reduce the varnish backend checks before a backend will be considered healthy.",
        "sim_diff": "diff --git a/Services/neon-proxy-manager/Program.ConfigGenerator.cs b/Services/neon-proxy-manager/Program.ConfigGenerator.cs @@ -1318,6 +1318,12 @@ import directors;\nvar backendVcl = string.Empty;\n+ // Health check parameters (hardcoded for now).\n+\n+ const int window = 3;\n+ const int initial = 2;\n+ const int threshold = 2;\n+\nif (sbCheckHeaders.Length == 0)\n{\nbackendVcl =\n@@ -1330,10 +1336,10 @@ backend rule_{ruleIndex}_backend_{backendIndex} {{\n\"\"Host: {rule.CheckHost ?? backend.Server}\"\"\n\"\"Connection: close\"\";\n.timeout = {RoundUp(rule.Timeouts.CheckSeconds)}s\n- .initial = 7;\n+ .window = {window};\n+ .initial = {initial};\n.interval = {RoundUp(rule.CheckSeconds)}s;\n- .window = 8;\n- .threshold = 3;\n+ .threshold = {threshold};\n.expected_response = {checkStatus}\n}}\n}}\n@@ -1352,10 +1358,10 @@ backend rule_{ruleIndex}_backend_{backendIndex} {{\n{sbCheckHeaders}\n\"\"Connection: close\"\";\n.timeout = {RoundUp(rule.Timeouts.CheckSeconds)}s\n- .initial = 7;\n+ .window = {window};\n+ .initial = {initial};\n.interval = {RoundUp(rule.CheckSeconds)}s;\n- .window = 8;\n- .threshold = 3;\n+ .threshold = {threshold};\n.expected_response = {checkStatus}\n}}\n}}\n",
        "org_diff": "diff --git a/fkie_node_manager/src/fkie_node_manager/master_view_proxy.py b/fkie_node_manager/src/fkie_node_manager/master_view_proxy.py @@ -1523,6 +1523,8 @@ class MasterViewProxy(QWidget):\nadded_diags = []\nfor diag_status in reversed(node.diagnostic_array):\nif node.diagnostic_array:\n+ level_str = 'Unknown'\n+ if diag_status.level in self.DIAGNOSTIC_LEVELS:\nlevel_str = self.DIAGNOSTIC_LEVELS[diag_status.level]\ndiag_color = '#FF6600'\nif diag_status.level == 2:\n"
    },
    {
        "sim_msg": "python: Add missing operators to NumericParamValue\nAdd missing operators to NumericParamValue and ensure that they are\nable to work on the underlying value if the right hand side is a\nparam.",
        "sim_diff": "diff --git a/src/python/m5/params.py b/src/python/m5/params.py @@ -454,6 +454,10 @@ class String(ParamValue,str):\n# operations in a type-safe way. e.g., a Latency times an int returns\n# a new Latency object.\nclass NumericParamValue(ParamValue):\n+ @staticmethod\n+ def unwrap(v):\n+ return v.value if isinstance(v, NumericParamValue) else v\n+\ndef __str__(self):\nreturn str(self.value)\n@@ -472,24 +476,70 @@ class NumericParamValue(ParamValue):\ndef __mul__(self, other):\nnewobj = self.__class__(self)\n- newobj.value *= other\n+ newobj.value *= NumericParamValue.unwrap(other)\nnewobj._check()\nreturn newobj\n__rmul__ = __mul__\n- def __div__(self, other):\n+ def __truediv__(self, other):\n+ newobj = self.__class__(self)\n+ newobj.value /= NumericParamValue.unwrap(other)\n+ newobj._check()\n+ return newobj\n+\n+ def __floordiv__(self, other):\n+ newobj = self.__class__(self)\n+ newobj.value //= NumericParamValue.unwrap(other)\n+ newobj._check()\n+ return newobj\n+\n+\n+ def __add__(self, other):\nnewobj = self.__class__(self)\n- newobj.value /= other\n+ newobj.value += NumericParamValue.unwrap(other)\nnewobj._check()\nreturn newobj\ndef __sub__(self, other):\nnewobj = self.__class__(self)\n- newobj.value -= other\n+ newobj.value -= NumericParamValue.unwrap(other)\nnewobj._check()\nreturn newobj\n+ def __iadd__(self, other):\n+ self.value += NumericParamValue.unwrap(other)\n+ self._check()\n+ return self\n+\n+ def __isub__(self, other):\n+ self.value -= NumericParamValue.unwrap(other)\n+ self._check()\n+ return self\n+\n+ def __imul__(self, other):\n+ self.value *= NumericParamValue.unwrap(other)\n+ self._check()\n+ return self\n+\n+ def __itruediv__(self, other):\n+ self.value /= NumericParamValue.unwrap(other)\n+ self._check()\n+ return self\n+\n+ def __ifloordiv__(self, other):\n+ self.value //= NumericParamValue.unwrap(other)\n+ self._check()\n+ return self\n+\n+ def __lt__(self, other):\n+ return self.value < NumericParamValue.unwrap(other)\n+\n+ # Python 2.7 pre __future__.division operators\n+ # TODO: Remove these when after \"import division from __future__\"\n+ __div__ = __truediv__\n+ __idiv__ = __itruediv__\n+\ndef config_value(self):\nreturn self.value\n",
        "org_diff": "diff --git a/fkie_node_manager/src/fkie_node_manager/parameter_dialog.py b/fkie_node_manager/src/fkie_node_manager/parameter_dialog.py @@ -1400,7 +1400,7 @@ class MasterParameterDialog(ParameterDialog):\ntype_str = 'float'\nelif isinstance(val, list) or isinstance(val, dict):\n# handle representation of `rosparam`\n- type_str = '[]'\n+ type_str = 'list'\nvalue = ''\nfor v in val:\nif len(value) > 0:\n@@ -1417,14 +1417,14 @@ class MasterParameterDialog(ParameterDialog):\nfor n in names_sep:\ngroup_name = n\nif group_name in group:\n- group = group[group_name][1]\n+ group = group[group_name]\nelse:\ntmp_dict = dict()\n- group[group_name] = {':type': 'list', ':value': tmp_dict}\n+ group[group_name] = tmp_dict\ngroup = tmp_dict\n- group[param_name] = {':type': type_str, ':value': [value]}\n+ group[param_name] = {':type': type_str, ':value': value}\nelse:\n- dia_params[param_name] = {':type': type_str, ':value': [value]}\n+ dia_params[param_name] = {':type': type_str, ':value': value}\ntry:\nself.content.createFieldFromValue(dia_params, clear_origin_value=new_param)\nself.setInfoActive(False)\n"
    },
    {
        "sim_msg": "Allow no token in tokenCard",
        "sim_diff": "diff --git a/packages/fether-ui/src/TokenCard/TokenCard.js b/packages/fether-ui/src/TokenCard/TokenCard.js @@ -20,14 +20,18 @@ export const TokenCard = ({\n<Card {...otherProps}>\n<div className='token'>\n<div className='token_icon'>\n- {token.logo ? (\n+ {token && token.logo ? (\n<img alt={token.symbol} src={token.logo} />\n) : (\n<Placeholder height={20} width={20} />\n)}\n</div>\n<div className='token_name'>\n- {token.name ? token.name : <Placeholder height={20} width={100} />}\n+ {token && token.name ? (\n+ token.name\n+ ) : (\n+ <Placeholder height={20} width={100} />\n+ )}\n</div>\n<div className='token_balance'>\n{balance ? (\n@@ -35,7 +39,7 @@ export const TokenCard = ({\n) : showBalance ? (\n<Placeholder height={20} width={50} />\n) : null}\n- <span className='token_symbol'>{token.symbol}</span>\n+ <span className='token_symbol'>{token && token.symbol}</span>\n</div>\n{children}\n</div>\n@@ -53,7 +57,7 @@ TokenCard.propTypes = {\nlogo: PropTypes.string,\nname: PropTypes.string,\nsymbol: PropTypes.string\n- }).isRequired\n+ })\n};\nexport default TokenCard;\n",
        "org_diff": "diff --git a/src/components/TokenAnalysis.js b/src/components/TokenAnalysis.js @@ -7,17 +7,38 @@ import withAutocard from './WithAutocard';\nconst AutocardLink = withAutocard('a');\n+const compareCards = (x, y) => {\n+ if (x.name === y.name) {\n+ return 0;\n+ } else {\n+ return x.name < y.name ? -1 : 1;\n+ }\n+}\n+\n+const compareTokens = (x, y) => compareCards(x[0], y[0]);\n+\n+const sortTokens = tokens => [...tokens].sort(compareTokens);\n+const sortCards = cards => [...cards].sort(compareCards);\n+\n+const dedupeCards = cards => {\n+ const map = new Map();\n+ for (const card of [...cards].reverse()) {\n+ map.set(card.name, card);\n+ }\n+ return [...map.values()];\n+}\n+\nconst TokenAnalysis = ({ tokens }) =>\n<Row>\n- {tokens.map(token =>\n- <Col key={token[0]._id} xs={6} md={4} lg={3}>\n- <Card className=\"mb-2\">\n- <a href={Affiliate.getTCGLink({details:token[0]})}>\n- <img src={token[0].image_normal} className='card-img-top' />\n+ {sortTokens(tokens).map(([token, tokenCards]) =>\n+ <Col key={token._id} xs={6} md={4} lg={3}>\n+ <Card className=\"mb-3\">\n+ <a href={Affiliate.getTCGLink({ details: token })}>\n+ <img src={token.image_normal} className='card-img-top' />\n</a>\n<CardBody>\n<p className=\"card-text\">\n- {token[1].map(card =>\n+ {dedupeCards(sortCards(tokenCards)).map(card =>\n<>\n<AutocardLink\nkey={card.name}\n"
    },
    {
        "sim_msg": "Updating Publish artifacts script to make it work according to github actions",
        "sim_diff": "diff --git a/scripts/publish_artifacts.sh b/scripts/publish_artifacts.sh @@ -5,10 +5,25 @@ artifactory_version=$project_version.$GITHUB_RUN_NUMBER\necho ::set-env name=IMAGE_VERSION::$(echo $artifactory_version)\nsed -i \"s|@@HYSCALE_DOCKER_REPO_PATH@@|$DOCKER_REPO|g\" scripts/hyscale\nsed -i \"s|@@HYSCALE_BUILD_VERSION@@|$artifactory_version|g\" scripts/hyscale\n+\n+docker_build_push()\n+{\ndocker build -t $DOCKER_REPO/hyscale:$artifactory_version .\ndocker login --username=$DOCKER_USERNAME --password=$DOCKER_PASSWORD\ndocker push $DOCKER_REPO/hyscale:$artifactory_version\ndocker logout\n-aws s3 cp scripts/hyscale s3://$AWS_S3_BUCKET/hyscale/release/$artifactory_version/hyscale\n-aws s3api put-object-tagging --bucket $AWS_S3_BUCKET --key hyscale/release/$artifactory_version/hyscale --tagging 'TagSet=[{Key=hyscalepubliccontent,Value=true}]'\n+}\n+\n+aws_cp_upload()\n+{\n+ aws s3 cp scripts/hyscale s3://$AWS_S3_BUCKET/hyscale/release/$1/hyscale\n+ aws s3api put-object-tagging --bucket $AWS_S3_BUCKET --key hyscale/release/$1/hyscale --tagging 'TagSet=[{Key=hyscalepubliccontent,Value=true}]'\n+}\n+\n+docker_build_push\n+aws_cp_upload $artifactory_version\n+if [ $GITHUB_WORKFLOW == \"Release\" ]\n+then\n+ aws_cp_upload latest\n+fi\n",
        "org_diff": "diff --git a/scripts/worker_node/setup_docker_worker_node.sh b/scripts/worker_node/setup_docker_worker_node.sh @@ -24,12 +24,13 @@ bash ./download_images.sh\necho_b \"Copy required fabric 1.0 artifacts\"\nARTIFACTS_DIR=/opt/cello\nUSER=`whoami`\n+USERGROUP=`id -gn`\necho_b \"Checking local artifacts path ${ARTIFACTS_DIR}...\"\n[ ! -d ${ARTIFACTS_DIR} ] \\\n&& echo_r \"Local artifacts path ${ARTIFACTS_DIR} not existed, creating one\" \\\n&& sudo mkdir -p ${ARTIFACTS_DIR} \\\n&& sudo cp -r ../../src/agent/docker/_compose_files/fabric-1.0 ${ARTIFACTS_DIR} \\\n- && sudo chown -R ${USER}:${USER} ${ARTIFACTS_DIR}\n+ && sudo chown -R ${USER}:${USERGROUP} ${ARTIFACTS_DIR}\necho_b \"Setup ip forward rules\"\nsudo sysctl -w net.ipv4.ip_forward=1\n"
    },
    {
        "sim_msg": "fixed another place where paths were not being created correctly",
        "sim_diff": "diff --git a/runner.py b/runner.py @@ -102,21 +102,21 @@ def main():\nname_dict = dict()\nsave_data = True\n- save_path = os.getcwd() + '/bot_code/training/replays'\n+ save_path = os.path.join(os.getcwd(), 'bot_code', 'training', 'replays')\ngame_name = str(int(round(time.time() * 1000))) + '-' + str(random.randint(0, 1000))\nif save_data:\nprint(save_path)\nif not os.path.exists(save_path):\nprint(os.path.dirname(save_path) + ' does not exist creating')\nos.makedirs(save_path)\n- if not os.path.exists(save_path + '\\\\' + game_name):\n- os.makedirs(save_path + '\\\\' + game_name)\n+ joined_path = os.path.join(save_path, game_name)\n+ if not os.path.exists(joined_path):\n+ os.makedirs(joined_path)\nprint('gameName: ' + game_name + 'in ' + save_path)\ngameInputPacket.iNumPlayers = num_participants\nserver_manager.load_config()\n-\nnum_team_0 = 0\n# Set configuration values for bots and store name and team\nfor i in range(num_participants):\n",
        "org_diff": "diff --git a/examples/competitive/__init__.py b/examples/competitive/__init__.py @@ -27,7 +27,7 @@ def run_ladder_game(bot):\nparser.add_argument(\"--ComputerRace\", type=str, nargs=\"?\", help=\"Computer race\")\nparser.add_argument(\"--ComputerDifficulty\", type=str, nargs=\"?\", help=\"Computer difficulty\")\nparser.add_argument(\"--OpponentId\", type=str, nargs=\"?\", help=\"Opponent ID\")\n- parser.add_argument(\"--RealTime\", type=bool, nargs=\"?\", const=True, default=False, help=\"Real Time\")\n+ parser.add_argument(\"--RealTime\", action=\"store_true\", help=\"Real time flag\")\nargs, unknown = parser.parse_known_args()\nif args.LadderServer == None:\n"
    },
    {
        "sim_msg": "extracted checkbox logic to function",
        "sim_diff": "diff --git a/packages/component-library/src/CardList/CardList.js b/packages/component-library/src/CardList/CardList.js @@ -123,6 +123,21 @@ const CardList = ({ CardRegistry, tagsList, projects }) => {\nsetMobileOpen(!mobileOpen);\n};\n+ const handleCheckboxChange = (category, id) => {\n+ if (showAllStories) setShowAllStories(false);\n+ if (activeFilters[category].includes(id)) {\n+ setActiveFilters({\n+ ...activeFilters,\n+ [category]: activeFilters[category].filter(tag => tag !== id)\n+ });\n+ } else {\n+ setActiveFilters({\n+ ...activeFilters,\n+ [category]: [...activeFilters[category], id]\n+ });\n+ }\n+ };\n+\nconst drawer = (\n<div className={classes.toolbar}>\n<h1 css={filterPadding}>Filters</h1>\n@@ -151,22 +166,7 @@ const CardList = ({ CardRegistry, tagsList, projects }) => {\n<Checkbox\nvalue={activeFilters[category].includes(id)}\nlabel={id}\n- onChange={() => {\n- if (showAllStories) setShowAllStories(false);\n- if (activeFilters[category].includes(id)) {\n- setActiveFilters({\n- ...activeFilters,\n- [category]: activeFilters[category].filter(\n- tag => tag !== id\n- )\n- });\n- } else {\n- setActiveFilters({\n- ...activeFilters,\n- [category]: [...activeFilters[category], id]\n- });\n- }\n- }}\n+ onChange={() => handleCheckboxChange(category, id)}\n/>\n</ListItem>\n))}\n",
        "org_diff": "diff --git a/src/analytics/Suggestions.js b/src/analytics/Suggestions.js @@ -79,8 +79,8 @@ const Suggestions = ({ adds, cuts, loading, cube, filter }) => {\n<Card>\n<CardHeader>\n<ListGroupItemHeading>Recommended Additions</ListGroupItemHeading>\n+ <input className=\"mr-2\" type=\"checkbox\" checked={maybeOnly} onClick={toggleMaybeOnly} />\n<Label for=\"toggleMaybeboard\">Show cards from my Maybeboard only.</Label>\n- <input type=\"checkbox\" checked={maybeOnly} onClick={toggleMaybeOnly} />\n</CardHeader>\n<ListGroup>\n{loading && (\n"
    },
    {
        "sim_msg": "Add exception on Apply() while loading",
        "sim_diff": "diff --git a/osu.Game/Rulesets/Objects/Pooling/PoolableDrawableWithLifetime.cs b/osu.Game/Rulesets/Objects/Pooling/PoolableDrawableWithLifetime.cs @@ -28,12 +28,9 @@ public abstract class PoolableDrawableWithLifetime<TEntry> : PoolableDrawable wh\npublic TEntry? Entry\n{\nget => entry;\n-\nset\n{\n- if (LoadState < LoadState.Ready)\n- entry = value;\n- else if (value != null)\n+ if (value != null)\nApply(value);\nelse if (HasEntryApplied)\nfree();\n@@ -86,7 +83,7 @@ protected override void LoadAsyncComplete()\n// Apply the initial entry.\nif (Entry != null && !HasEntryApplied)\n- Apply(Entry);\n+ apply(Entry);\n}\n/// <summary>\n@@ -95,16 +92,10 @@ protected override void LoadAsyncComplete()\n/// </summary>\npublic void Apply(TEntry entry)\n{\n- if (HasEntryApplied)\n- free();\n-\n- this.entry = entry;\n- entry.LifetimeChanged += setLifetimeFromEntry;\n- setLifetimeFromEntry(entry);\n-\n- OnApply(entry);\n+ if (LoadState == LoadState.Loading)\n+ throw new InvalidOperationException($\"Cannot apply a new {nameof(TEntry)} while currently loading.\");\n- HasEntryApplied = true;\n+ apply(entry);\n}\nprotected sealed override void FreeAfterUse()\n@@ -130,6 +121,20 @@ protected virtual void OnFree(TEntry entry)\n{\n}\n+ private void apply(TEntry entry)\n+ {\n+ if (HasEntryApplied)\n+ free();\n+\n+ this.entry = entry;\n+ entry.LifetimeChanged += setLifetimeFromEntry;\n+ setLifetimeFromEntry(entry);\n+\n+ OnApply(entry);\n+\n+ HasEntryApplied = true;\n+ }\n+\nprivate void free()\n{\nDebug.Assert(Entry != null && HasEntryApplied);\n",
        "org_diff": "diff --git a/examples/threebase_voidray.py b/examples/threebase_voidray.py @@ -26,12 +26,8 @@ class ThreebaseVoidrayBot(sc2.BotAI):\nif not nexus.has_buff(BuffId.CHRONOBOOSTENERGYCOST):\nabilities = await self.get_available_abilities(nexus)\n- if AbilityId.CHRONOBOOSTENERGYCOST in abilities:\n- await self.do(nexus(AbilityId.CHRONOBOOSTENERGYCOST, nexus))\n- else:\n- await self.chat_send(\"Can't cast chrono boost\")\n- else:\n- await self.chat_send(\"Nexus is already boosted\")\n+ if AbilityId.EFFECT_CHRONOBOOSTENERGYCOST in abilities:\n+ await self.do(nexus(AbilityId.EFFECT_CHRONOBOOSTENERGYCOST, nexus))\nfor idle_worker in self.workers.idle:\nmf = self.state.mineral_field.closest_to(idle_worker)\n"
    },
    {
        "sim_msg": "Fix for issue 92\nCloses",
        "sim_diff": "diff --git a/services/topology-engine/queue-engine/topologylistener/messageclasses.py b/services/topology-engine/queue-engine/topologylistener/messageclasses.py @@ -230,11 +230,11 @@ class MessageItem(object):\nif src_port:\nquery = (\"MATCH (a:switch)-[r:isl {{\"\n\"src_switch: '{}', \"\n- \"src_port: {}}}]->(b:switch) SET r.status == 'inactive'\")\n+ \"src_port: {}}}]->(b:switch) SET r.status = 'inactive'\")\ngraph.run(query.format(src_switch, src_port)).data()\nelse:\nquery = (\"MATCH (a:switch)-[r:isl {{\"\n- \"src_switch: '{}'}}]->(b:switch) SET r.status == 'inactive'\")\n+ \"src_switch: '{}'}}]->(b:switch) SET r.status = 'inactive'\")\ngraph.run(query.format(src_switch)).data()\nreturn True\n",
        "org_diff": "diff --git a/node_manager_fkie/src/node_manager_fkie/network_discovery_dialog.py b/node_manager_fkie/src/node_manager_fkie/network_discovery_dialog.py @@ -87,6 +87,7 @@ class NetworkDiscoveryDialog(QDialog, threading.Thread):\nself.status_label = QLabel('0 messages', self)\nself.verticalLayout.addWidget(self.status_label)\nself.status_text_signal.connect(self.status_label.setText)\n+ self._msg_counts = dict()\nself._networks_count = networks_count\nself._running = True\n@@ -118,6 +119,9 @@ class NetworkDiscoveryDialog(QDialog, threading.Thread):\nif index not in self._discovered:\nself._discovered[index] = dict()\nself._discovered[index][address] = (hostname, time.time())\n+ if hostname not in self._msg_counts:\n+ self._msg_counts[hostname] = 0\n+ self._msg_counts[hostname] += 1\nself._received_msgs += 1\nforce_update = True\nexcept:\n@@ -130,12 +134,14 @@ class NetworkDiscoveryDialog(QDialog, threading.Thread):\nwhile (not rospy.is_shutdown()) and self._running:\nwith self.mutex:\nfor msock in self.sockets:\n+ received = True\n+ while received:\ntry:\nrecv_item = msock.receive_queue.get(False)\nself._received_msgs += 1\nself.on_heartbeat_received(recv_item.msg, recv_item.sender_addr, (recv_item.via == QueueReceiveItem.MULTICAST))\nexcept Queue.Empty:\n- pass\n+ received = False\nstatus_text = 'received messages: %d' % (self._received_msgs)\nself.status_text_signal.emit(status_text)\n# self.parent().masterlist_service.refresh(self.parent().getMasteruri(), False)\n@@ -160,7 +166,7 @@ class NetworkDiscoveryDialog(QDialog, threading.Thread):\nfor index, addr_dict in self._discovered.items():\ntext = ''.join([text, 'Network <b>', str(index), '</b>: <a href=\"', str(index), '\">join</a><dl>'])\nfor addr, (hostname, ts) in addr_dict.items():\n- text = ''.join([text, '<dt>', self._getTsStr(ts), ' <b><u>', str(hostname), '</u></b> ', str(addr), '</dt>\\n'])\n+ text = ''.join([text, '<dt>', self._getTsStr(ts), ' <b><u>', str(hostname), '</u></b> ', str(addr), ', received messages: ', str(self._msg_counts[hostname]), '</dt>\\n'])\ntext = ''.join([text, '</dl><br>'])\ntext = ''.join([text, '</div>'])\nself.display_append_signal.emit(text)\n"
    },
    {
        "sim_msg": "* Starship initiative is piloting mod not ranks.",
        "sim_diff": "diff --git a/src/module/combat/combat.js b/src/module/combat/combat.js @@ -548,7 +548,7 @@ export class CombatSFRPG extends Combat {\n_getInitiativeFormula(combatant) {\nif (this.getCombatType() === \"starship\") {\n- return \"1d20 + @skills.pil.ranks\"\n+ return \"1d20 + @skills.pil.mod\"\n}\nelse {\nreturn \"1d20 + @attributes.init.total\";\n@@ -565,7 +565,7 @@ export class CombatSFRPG extends Combat {\nconst parts = [];\nif (this.getCombatType() === \"starship\") {\n- parts.push(\"@pilot.skills.pil.ranks\");\n+ parts.push(\"@pilot.skills.pil.mod\");\nrollContext.setMainContext(\"pilot\");\n} else {\nparts.push(\"@combatant.attributes.init.total\");\n",
        "org_diff": "diff --git a/sc2/unit.py b/sc2/unit.py @@ -282,7 +282,8 @@ class Unit(object):\n\"\"\" Does not include upgrades \"\"\"\nif hasattr(self._type_data._proto, \"weapons\"):\nweapons = self._type_data._proto.weapons\n- weapon = next((weapon for weapon in weapons if weapon.type in {TargetType.Ground.value, TargetType.Any.value}), None) if weapon:\n+ weapon = next((weapon for weapon in weapons if weapon.type in {TargetType.Ground.value, TargetType.Any.value}), None)\n+ if weapon:\nreturn (weapon.damage * weapon.attacks) / weapon.speed\nreturn 0\n@@ -291,7 +292,7 @@ class Unit(object):\n\"\"\" Does not include upgrades \"\"\"\nif hasattr(self._type_data._proto, \"weapons\"):\nweapons = self._type_data._proto.weapons\n- weapon = next((weapon for weapon in weapons if weapon.type in [TargetType.Ground.value, TargetType.Any.value]), None)\n+ weapon = next((weapon for weapon in weapons if weapon.type in {TargetType.Ground.value, TargetType.Any.value}), None)\nif weapon:\nreturn weapon.range\nreturn 0\n@@ -301,7 +302,7 @@ class Unit(object):\n\"\"\" Does not include upgrades \"\"\"\nif hasattr(self._type_data._proto, \"weapons\"):\nweapons = self._type_data._proto.weapons\n- weapon = next((weapon for weapon in weapons if weapon.type in [TargetType.Air.value, TargetType.Any.value]), None)\n+ weapon = next((weapon for weapon in weapons if weapon.type in {TargetType.Air.value, TargetType.Any.value}), None)\nreturn weapon is not None\nreturn False\n@@ -310,7 +311,7 @@ class Unit(object):\n\"\"\" Does not include upgrades \"\"\"\nif hasattr(self._type_data._proto, \"weapons\"):\nweapons = self._type_data._proto.weapons\n- weapon = next((weapon for weapon in weapons if weapon.type in [TargetType.Air.value, TargetType.Any.value]), None)\n+ weapon = next((weapon for weapon in weapons if weapon.type in {TargetType.Air.value, TargetType.Any.value}), None)\nif weapon:\nreturn (weapon.damage * weapon.attacks) / weapon.speed\nreturn 0\n@@ -320,7 +321,7 @@ class Unit(object):\n\"\"\" Does not include upgrades \"\"\"\nif hasattr(self._type_data._proto, \"weapons\"):\nweapons = self._type_data._proto.weapons\n- weapon = next((weapon for weapon in weapons if weapon.type in [TargetType.Air.value, TargetType.Any.value]), None)\n+ weapon = next((weapon for weapon in weapons if weapon.type in {TargetType.Air.value, TargetType.Any.value}), None)\nif weapon:\nreturn weapon.range\nreturn 0\n"
    },
    {
        "sim_msg": "Scrollbar min size.",
        "sim_diff": "diff --git a/Content.Client/UserInterface/NanoStyle.cs b/Content.Client/UserInterface/NanoStyle.cs @@ -107,15 +107,17 @@ public NanoStyle()\nvar vScrollBarGrabberNormal = new StyleBoxFlat\n{\n- BackgroundColor = Color.Gray.WithAlpha(0.35f), ContentMarginLeftOverride = 10\n+ BackgroundColor = Color.Gray.WithAlpha(0.35f), ContentMarginLeftOverride = 10, ContentMarginTopOverride = 10\n};\nvar vScrollBarGrabberHover = new StyleBoxFlat\n{\n- BackgroundColor = new Color(140, 140, 140).WithAlpha(0.35f), ContentMarginLeftOverride = 10\n+ BackgroundColor = new Color(140, 140, 140).WithAlpha(0.35f), ContentMarginLeftOverride = 10,\n+ ContentMarginTopOverride = 10\n};\nvar vScrollBarGrabberGrabbed = new StyleBoxFlat\n{\n- BackgroundColor = new Color(160, 160, 160).WithAlpha(0.35f), ContentMarginLeftOverride = 10\n+ BackgroundColor = new Color(160, 160, 160).WithAlpha(0.35f), ContentMarginLeftOverride = 10,\n+ ContentMarginTopOverride = 10\n};\nvar hScrollBarGrabberNormal = new StyleBoxFlat\n",
        "org_diff": "diff --git a/public/css/editcube.css b/public/css/editcube.css .invalid-filter:focus {\ncolor: red;\n}\n+\n+#groupContextModalAreaContainer {\n+ overflow: scroll;\n+ height: 41.6em;\n+}\n"
    },
    {
        "sim_msg": "capture http links",
        "sim_diff": "diff --git a/components/system/components/Markdown.js b/components/system/components/Markdown.js @@ -11,7 +11,8 @@ export const Markdown = ({ md, options }) => {\n{\nunified()\n.use(parse)\n- .use(linkifyRegex(/[@#](\\w*[0-9a-zA-Z-_]+\\w*[0-9a-zA-Z-_])/g))\n+ .use(linkifyRegex(/[@#](\\w*[0-9a-zA-Z-_]+\\w*[0-9a-zA-Z-_])/g)) // @user #tag\n+ .use(linkifyRegex(/^(https?):\\/\\/[^\\s$.?#].[^\\s]*$/gm)) // http(s) links\n.use(remark2react, options)\n.processSync(md).result\n}\n",
        "org_diff": "diff --git a/src/components/Markdown.js b/src/components/Markdown.js @@ -78,7 +78,7 @@ const renderCode = (node) => {\nreturn (\n<SyntaxHighlighter language={node.language || 'text'} style={style}>\n- {node.value}\n+ {node.value || ''}\n</SyntaxHighlighter>\n);\n};\n"
    },
    {
        "sim_msg": "routes/util.js linting complete",
        "sim_diff": "diff --git a/routes/util.js b/routes/util.js +var config = require(\"../config\");\nvar log = require(\"../log\").logger(\"routes\");\nvar fs = require(\"fs\");\nvar uuid = require(\"uuid\");\nvar pako = require(\"pako\");\n-UPLOAD_INDEX = {};\n-UPLOAD_TIMEOUT = 3600000;\n+var UPLOAD_INDEX = {};\n+var UPLOAD_TIMEOUT = 3600000;\n/*\n* Incoming metadata looks like this:\n@@ -162,7 +163,7 @@ function upload(req, res, next, callback) {\n/* Metadata type POST */\ntry {\n- var key = createUpload(req.body, callback);\n+ key = createUpload(req.body, callback);\n} catch (e) {\nlog.error(e);\nreturn res.json({\n@@ -198,9 +199,9 @@ function updaterRedirect(req, res, next) {\nbreak;\ncase \"POST\":\n- var host = req.headers.host.split(\":\")[0].trim(\"/\");\n- var path = req.params[0];\n- var url =\n+ host = req.headers.host.split(\":\")[0].trim(\"/\");\n+ path = req.params[0];\n+ url =\n\"http://\" +\nhost +\n\":\" +\n",
        "org_diff": "diff --git a/routes/cube_routes.js b/routes/cube_routes.js @@ -22,7 +22,7 @@ let Draft = require('../models/draft');\nlet CardRating = require('../models/cardrating');\n// Add Submit POST Route\n-router.post('/add',ensureAuth, function(req,res,next)\n+router.post('/add',ensureAuth, function(req,res)\n{\nif(req.body.name.length < 5)\n{\n@@ -592,7 +592,7 @@ router.get('/analysis/:id', function(req, res)\n});\n});\n-router.post('/importcubetutor/:id',ensureAuth, function(req,res,next) {\n+router.post('/importcubetutor/:id',ensureAuth, function(req,res) {\nCube.findById(req.params.id, function(err,cube)\n{\nif(err)\n@@ -733,7 +733,11 @@ router.post('/importcubetutor/:id',ensureAuth, function(req,res,next) {\n{\nmissing:missing,\nadded:JSON.stringify(added),\n- cube:cube\n+ cube:cube,\n+ user:{\n+ id:req.user._id,\n+ username:req.user.username\n+ }\n});\n}\nelse\n@@ -766,8 +770,9 @@ router.post('/importcubetutor/:id',ensureAuth, function(req,res,next) {\n});\n});\n-router.post('/bulkupload/:id',ensureAuth, function(req,res,next)\n+router.post('/bulkupload/:id',ensureAuth, function(req,res)\n{\n+ console.log(res);\nCube.findById(req.params.id, function(err,cube)\n{\nif(err)\n@@ -789,7 +794,7 @@ router.post('/bulkupload/:id',ensureAuth, function(req,res,next)\n});\n});\n-router.post('/bulkuploadfile/:id',ensureAuth, function(req,res,next)\n+router.post('/bulkuploadfile/:id',ensureAuth, function(req,res)\n{\nif(!req.files)\n{\n@@ -912,7 +917,11 @@ function bulkuploadCSV(req, res, cards, cube) {\n{\nmissing:missing,\nadded:JSON.stringify(added),\n- cube:cube\n+ cube:cube,\n+ user:{\n+ id:req.user._id,\n+ username:req.user.username\n+ }\n});\n}\nelse\n@@ -1067,7 +1076,11 @@ function bulkUpload(req, res, list, cube) {\n{\nmissing:missing,\nadded:JSON.stringify(added),\n- cube:cube\n+ cube:cube,\n+ user:{\n+ id:req.user._id,\n+ username:req.user.username\n+ }\n});\n}\nelse\n@@ -1548,7 +1561,7 @@ router.get('/draft/:id', function(req, res)\n});\n// Edit Submit POST Route\n-router.post('/editoverview/:id',ensureAuth, function(req,res,next)\n+router.post('/editoverview/:id',ensureAuth, function(req,res)\n{\nreq.body.html = cubefn.sanitize(req.body.html);\nCube.findById(req.params.id, function(err, cube)\n@@ -1607,7 +1620,7 @@ router.post('/editoverview/:id',ensureAuth, function(req,res,next)\n});\n// Edit Submit POST Route\n-router.post('/edit/:id',ensureAuth, function(req,res,next)\n+router.post('/edit/:id',ensureAuth, function(req,res)\n{\nreq.body.blog = cubefn.sanitize(req.body.blog);\nCube.findById(req.params.id, function(err, cube)\n"
    },
    {
        "sim_msg": "Fix UserCard propTypes",
        "sim_diff": "diff --git a/src/components/UserCard.js b/src/components/UserCard.js @@ -5,27 +5,22 @@ import FollowButton from '../widgets/FollowButton';\nimport Avatar from '../components/Avatar';\nimport './UserCard.less';\n-const UserCard = ({ username, alt }) =>\n- (<div className=\"UserCard\">\n+const UserCard = ({ username, alt }) => (\n+ <div className=\"UserCard\">\n<div className=\"UserCard__left\">\n<Link to={`/@${username}`}>\n<Avatar username={username} size={40} />\n</Link>\n- <Link to={`/@${username}`}>\n- {username}\n- </Link>\n- {alt &&\n- <span className=\"UserCard__alt\">\n- {alt}\n- </span>\n- }\n+ <Link to={`/@${username}`}>{username}</Link>\n+ {alt && <span className=\"UserCard__alt\">{alt}</span>}\n</div>\n<FollowButton username={username} />\n- </div>);\n+ </div>\n+);\nUserCard.propTypes = {\nusername: PropTypes.string.isRequired,\n- alt: PropTypes.oneOf(PropTypes.string, PropTypes.bool),\n+ alt: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n};\nUserCard.defaultProps = {\n",
        "org_diff": "diff --git a/src/components/CardModal.js b/src/components/CardModal.js @@ -15,15 +15,15 @@ import {\nRow,\n} from 'reactstrap';\n-import Affiliate from '../utils/Affiliate';\n-import { getLabels } from '../utils/Sort';\n+import Affiliate from 'utils/Affiliate';\n+import { getLabels } from 'utils/Sort';\n-import ButtonLink from './ButtonLink';\n-import { ColorChecksAddon } from './ColorCheck';\n-import LoadingButton from './LoadingButton';\n-import FoilCardImage from './FoilCardImage';\n-import TagInput from './TagInput';\n-import TextBadge from './TextBadge';\n+import ButtonLink from 'components/ButtonLink';\n+import { ColorChecksAddon } from 'components/ColorCheck';\n+import LoadingButton from 'components/LoadingButton';\n+import FoilCardImage from 'components/FoilCardImage';\n+import TagInput from 'components/TagInput';\n+import TextBadge from 'components/TextBadge';\nconst CardModal = ({\ncard,\n"
    },
    {
        "sim_msg": "fix(tests): base state type",
        "sim_diff": "diff --git a/__tests__/base.js b/__tests__/base.js @@ -1406,11 +1406,6 @@ function runBaseTest(name, useProxies, freeze, useListener) {\n).toBe(value)\n})\n}\n- expect(\n- produce(value, draft => {\n- expect(draft).toBe(value)\n- })\n- ).toBe(value)\n})\n}\nconst objects = {\n@@ -1418,6 +1413,9 @@ function runBaseTest(name, useProxies, freeze, useListener) {\n\"plain object\": {a: 1, b: {c: 1}},\n\"frozen object\": Object.freeze({}),\n\"null-prototype object\": Object.create(null),\n+ \"frozen null-prototype object\": Object.freeze(\n+ Object.create(null)\n+ ),\n\"empty array\": [],\n\"plain array\": [1, [2, [3, []]]],\n\"frozen array\": Object.freeze([])\n@@ -1425,30 +1423,24 @@ function runBaseTest(name, useProxies, freeze, useListener) {\nfor (const name in objects) {\ndescribe(\"base state type - \" + name, () => {\nconst value = objects[name]\n+ it(\"creates a draft\", () => {\n+ produce(value, draft => {\n+ expect(draft).not.toBe(value)\n+ expect(enumerableOnly(draft)).toEqual(value)\n+ })\n+ })\n+ it(\"returns the same value when the producer does nothing\", () => {\n+ expect(produce(value, () => {})).toBe(value)\n+ })\nit(\"returns a copy when changes are made\", () => {\nconst random = Math.random()\nconst result = produce(value, draft => {\n- if (Array.isArray(value)) {\n- draft.push(random)\n- } else {\n- draft[random] = true\n- }\n+ draft[0] = random\n})\nexpect(result).not.toBe(value)\nexpect(result.constructor).toBe(value.constructor)\n- if (Array.isArray(value)) {\n- expect(result[result.length - 1]).toBe(random)\n- } else {\n- expect(result[random]).toBe(true)\n- }\n+ expect(result[0]).toBe(random)\n})\n- it(\"should \", () => {})\n- expect(\n- produce(value, draft => {\n- expect(draft).not.toBe(value)\n- expect(value).toEqual(draft)\n- })\n- ).toBe(value)\n})\n}\n}\n",
        "org_diff": "diff --git a/__tests__/serverjs/cubefn.test.js b/__tests__/serverjs/cubefn.test.js @@ -141,16 +141,16 @@ test('generateShortId returns a valid short ID with profanity', async () => {\nconst queryMock = jest.fn().mockReturnValue(queryMockPromise);\nconst initialCubeFind = Cube.find;\nCube.find = queryMock;\n- const initialHasProfanity = util.has_profanity;\n+ const initialHasProfanity = util.hasProfanity;\nconst mockHasProfanity = jest\n.fn()\n.mockReturnValue(false)\n.mockReturnValueOnce(true);\n- util.has_profanity = mockHasProfanity;\n+ util.hasProfanity = mockHasProfanity;\nconst result = await cubefn.generateShortId();\nexpect(result).toBe('1z');\nCube.find = initialCubeFind;\n- util.has_profanity = initialHasProfanity;\n+ util.hasProfanity = initialHasProfanity;\n});\ntest('getBasics returns the expected set of basic lands', () => {\n"
    },
    {
        "sim_msg": "fix settings error with create file dialog",
        "sim_diff": "diff --git a/qualcoder/manage_files.py b/qualcoder/manage_files.py @@ -585,7 +585,7 @@ class DialogManageFiles(QtWidgets.QDialog):\n_(\"Filename in use\"), QtWidgets.QMessageBox.Ok)\nreturn\n- ui = DialogMemo(self.app.settings, _(\"Creating a new file: \") + name)\n+ ui = DialogMemo(self.app, _(\"Creating a new file: \") + name)\nui.exec_()\nfiletext = ui.memo\n# update database\n",
        "org_diff": "diff --git a/fkie_node_manager/src/fkie_node_manager/editor/text_edit.py b/fkie_node_manager/src/fkie_node_manager/editor/text_edit.py @@ -378,7 +378,8 @@ class TextEdit(QTextEdit):\n# create a new file, if it does not exists\nresult = MessageBox.question(self, \"File not exists\", '\\n\\n'.join([\"Create a new file?\", path]), buttons=MessageBox.Yes | MessageBox.No)\nif result == MessageBox.Yes:\n- nm.nmd().file.save_file(path, '<launch>\\n\\n</launch>', 0)\n+ content = '<launch>\\n\\n</launch>' if path.endswith('.launch') else ''\n+ nm.nmd().file.save_file(path, content.encode(), 0)\nevent.setAccepted(True)\nself.load_request_signal.emit(path)\nexcept Exception as e:\n"
    },
    {
        "sim_msg": "right click order files by alphabet date, type",
        "sim_diff": "diff --git a/qualcoder/manage_files.py b/qualcoder/manage_files.py @@ -121,9 +121,47 @@ class DialogManageFiles(QtWidgets.QDialog):\nself.ui.pushButton_export.clicked.connect(self.export)\nself.ui.pushButton_add_attribute.clicked.connect(self.add_attribute)\nself.ui.tableWidget.cellClicked.connect(self.cell_selected)\n+ self.ui.tableWidget.setContextMenuPolicy(QtCore.Qt.CustomContextMenu)\n+ self.ui.tableWidget.customContextMenuRequested.connect(self.table_menu)\nself.fill_table()\n- def load_file_data(self):\n+ def table_menu(self, position):\n+ \"\"\" Context menu for displaying table rows in differing order \"\"\"\n+\n+ row = self.ui.tableWidget.currentRow()\n+ col = self.ui.tableWidget.currentColumn()\n+ text = None\n+ try:\n+ text = str(self.ui.tableWidget.item(row, col).text())\n+ except:\n+ pass\n+ #print(self.row, self.col, self.cellValue)\n+ if col < 4:\n+ menu = QtWidgets.QMenu()\n+ action_alphabetic = menu.addAction(_(\"Alphabetic order\"))\n+ action_date = menu.addAction(_(\"Date order\"))\n+ action_type = menu.addAction(_(\"File type order\"))\n+ action = menu.exec_(self.ui.tableWidget.mapToGlobal(position))\n+ if action == action_alphabetic:\n+ self.load_file_data()\n+ if action == action_date:\n+ self.load_file_data(\"date\")\n+ if action == action_type:\n+ self.load_file_data(\"mediapath\")\n+ self.fill_table()\n+ #TODO\n+ '''\n+ # Hide rows that do not match this value\n+ if col > 3:\n+ print(row, col, text)\n+ for r in range(0, self.ui.tableWidget.rowCount()):\n+ try:\n+ if self.ui.tableWidget.item(row, col).text().find(text) == -1:\n+ self.ui.tableWidget.setRowHidden(r, True)\n+ except: # None type\n+ pass'''\n+\n+ def load_file_data(self, order_by=\"\"):\n\"\"\" Documents images and audio contain the filetype suffix.\nNo suffix implies the 'file' was imported from a survey question.\nThis also fills out the table header lables with file attribute names.\n@@ -133,7 +171,12 @@ class DialogManageFiles(QtWidgets.QDialog):\nself.source = []\ncur = self.app.conn.cursor()\n- cur.execute(\"select name, id, fulltext, mediapath, memo, owner, date from source order by upper(name)\")\n+ sql = \"select name, id, fulltext, mediapath, memo, owner, date from source order by upper(name)\"\n+ if order_by == \"date\":\n+ sql = \"select name, id, fulltext, mediapath, memo, owner, date from source order by date, upper(name)\"\n+ if order_by == \"mediapath\":\n+ sql = \"select name, id, fulltext, mediapath, memo, owner, date from source order by mediapath\"\n+ cur.execute(sql)\nresult = cur.fetchall()\nfor row in result:\nself.source.append({'name': row[0], 'id': row[1], 'fulltext': row[2],\n@@ -978,7 +1021,6 @@ class DialogManageFiles(QtWidgets.QDialog):\ndef fill_table(self):\n\"\"\" Reload the file data and Fill the table widget with file data. \"\"\"\n- self.load_file_data()\nself.ui.tableWidget.setColumnCount(len(self.header_labels))\nself.ui.tableWidget.setHorizontalHeaderLabels(self.header_labels)\nself.ui.tableWidget.setSelectionMode(QtWidgets.QAbstractItemView.SingleSelection)\n",
        "org_diff": "diff --git a/fkie_node_manager/src/fkie_node_manager/logscreen/screen_widget.py b/fkie_node_manager/src/fkie_node_manager/logscreen/screen_widget.py @@ -297,6 +297,8 @@ class ScreenWidget(QWidget):\nchars_count = self._seek_count_lines(lines)\nself._seek_start = self.qfile.pos()\ndata = self.qfile.read(chars_count)\n+ if sys.version_info > (3, 0):\n+ data = data.decode('utf-8')\nself.output.emit(data)\nself._seek_end = self.qfile.pos()\nself._first_fill = False\n@@ -306,6 +308,8 @@ class ScreenWidget(QWidget):\nif (not self._pause_read_end and self.qfile.bytesAvailable()):\nstart = self.qfile.pos()\ndata = self.qfile.readAll().data()\n+ if sys.version_info > (3, 0):\n+ data = data.decode('utf-8')\nself.output.emit(data)\nself._seek_end = self.qfile.pos()\nself._info = \"NEW: %d\" % (self._seek_end - start)\n@@ -322,6 +326,8 @@ class ScreenWidget(QWidget):\nchars_count = self._seek_count_lines(lines)\nself._seek_start = self.qfile.pos()\ndata = self.qfile.read(chars_count)\n+ if sys.version_info > (3, 0):\n+ data = data.decode('utf-8')\nself.output_prefix.emit(data)\ndef _seek_count_lines(self, lines=20):\n"
    },
    {
        "sim_msg": "rough changes to deckbuilder tests",
        "sim_diff": "diff --git a/test/helpers/deckbuilder.js b/test/helpers/deckbuilder.js @@ -41,17 +41,10 @@ class DeckBuilder {\n}\n});\n- var agenda;\n- var agendaCount = _.find(cardCounts, cardCount => cardCount.card.type_code === 'agenda');\n- if(agendaCount) {\n- agenda = agendaCount.card;\n- }\n-\nreturn {\nfaction: { value: faction },\n- agenda: agenda,\n- drawCards: _.filter(cardCounts, cardCount => ['character', 'location', 'attachment', 'event'].includes(cardCount.card.type_code)),\n- plotCards: _.filter(cardCounts, cardCount => cardCount.card.type_code === 'plot')\n+ drawCards: _.filter(cardCounts, cardCount => ['character', 'holding', 'attachment', 'event'].includes(cardCount.card.type_code)),\n+ provinceCards: _.filter(cardCounts, cardCount => cardCount.card.type_code === 'province')\n};\n}\n",
        "org_diff": "diff --git a/__tests__/serverjs/draftutil.test.js b/__tests__/serverjs/draftutil.test.js @@ -34,7 +34,11 @@ test(\"it can get bots with the correct properties\", () => {\n});\ntest(\"it returns the index of the first instance of a tag from a list of cards\", () => {\n- const cards = [{}, {}, { tags: [\"test\"] }, { tags: [\"test\"] }];\n+ const cards = [{}, {}, {\n+ tags: [\"test\"]\n+ }, {\n+ tags: [\"test\"]\n+ }];\nconst tag = \"TEST\";\nconst result = methods.indexOfTag(cards, tag);\n@@ -50,7 +54,11 @@ test(\"it returns -1 if a tag is not found in a list of cards\", () => {\n});\ntest(\"getCardRatings returns a mapping of card names to values\", () => {\n- var dummyModel = {\"value\": 1, \"picks\": 1, \"name\": \"Giant Growth\"};\n+ var dummyModel = {\n+ \"value\": 1,\n+ \"picks\": 1,\n+ \"name\": \"Giant Growth\"\n+ };\nvar expected = {};\nexpected[dummyModel.name] = dummyModel.value;\nCardRating.find.yields(null, [dummyModel]);\n"
    },
    {
        "sim_msg": "Keyvalue parser: revert change\nIt was causing to gameinfo parser to fail",
        "sim_diff": "diff --git a/utilities/keyvalues.py b/utilities/keyvalues.py @@ -81,11 +81,11 @@ class KVReader:\nbuf += self._next_char()\nreturn KVToken.STR, buf, lc\n- if ch in '\"\\'':\n+ if ch == '\"':\nbuf = ''\n- while not _is_end(self._peek_char()) and self._peek_char() not in '\"\\'':\n+ while not _is_end(self._peek_char()) and self._peek_char() != '\"':\nbuf += self._next_char()\n- if self._next_char() not in '\"\\'':\n+ if self._next_char() != '\"':\nself._report('String literal is not closed', lc)\nreturn KVToken.STR, buf, lc\n",
        "org_diff": "diff --git a/node_manager_daemon_fkie/src/node_manager_daemon_fkie/startcfg.py b/node_manager_daemon_fkie/src/node_manager_daemon_fkie/startcfg.py @@ -111,14 +111,8 @@ class StartConfig():\nif value_type == BOOL:\nreturn value.lower() in (\"yes\", \"true\", \"t\", \"1\")\nif value_type == LIST:\n- lstr = value\ntry:\n- lstr = lstr.strip('[]')\n- lstr = lstr.replace('u\"', '')\n- lstr = lstr.replace('\"', '')\n- lstr = lstr.replace(\"'\", '')\n- lstr = lstr.replace(\",\", ' ')\n- return [utf8(i).strip() for i in lstr.split(' ') if i]\n+ return eval(value)\nexcept Exception:\nreturn []\nreturn value\n"
    },
    {
        "sim_msg": "Add graph to README.md",
        "sim_diff": "diff --git a/README.md b/README.md [![CircleCI](https://circleci.com/gh/hyperledger/iroha/tree/master.svg?style=svg)](https://circleci.com/gh/hyperledger/iroha/tree/master)\n[![codecov](https://codecov.io/gh/hyperledger/iroha/branch/master/graph/badge.svg)](https://codecov.io/gh/hyperledger/iroha)\n+[![Throughput Graph](https://graphs.waffle.io/hyperledger/iroha/throughput.svg)](https://waffle.io/hyperledger/iroha/metrics/throughput)\n+\nBlockchain platform Hyperledger Iroha is designed for simple creation and management of assets. This is a distributed ledger of transactions.\n<img height=\"300px\" src=\"docs/Iroha_3_sm.png\"\n",
        "org_diff": "diff --git a/README.md b/README.md ![Cello](docs/imgs/logo.png)\n+Blockchain as a Service!\n+\n**Note:** This is a **read-only mirror** of the formal [Gerrit](https://gerrit.hyperledger.org/r/#/admin/projects/cello) repository,\n-where active development is ongoing. Issue tracking is handled in [Jira](https://jira.hyperledger.org/secure/RapidBoard.jspa?rapidView=111)\n+where active development is ongoing. Issue tracking is handled in [Jira](https://jira.hyperledger.org/projects/CE/issues/).\n## Incubation Notice\nThis project is a Hyperledger project in _Incubation_. It was proposed to the community and documented [here](https://docs.google.com/document/d/1E2i5GRqWsIag7KTxjQ_jQdDiWcuikv3KqXeuw7NaceM/edit), and was approved by [Hyperledger TSC at 2017-01-07](https://lists.hyperledger.org/pipermail/hyperledger-tsc/2017-January/000535.html). Information on what _Incubation_ entails can be found in the [Hyperledger Project Lifecycle document](https://goo.gl/4edNRc).\n-Platform to provide Blockchain as a Service!\nUsing Cello, we can\n-* Provision customizable Blockchains instantly, e.g., a 6-node chain using PBFT consensus.\n+* Provision customizable Blockchains instantly, e.g., a 6-node fabric chain using PBFT consensus.\n* Maintain a pool of running blockchains healthy with no manual operations.\n* Check the system status, scale the chain numbers, change resources... through a dashboard.\n@@ -28,13 +29,11 @@ You can also find more [scenarios](docs/scenario.md).\n* Support heterogeneous architecture, e.g., Z, Power and X86, from bare-metal servers to virtual machines.\n* Extend with monitor/log/health features by employing additional components.\n-## Docs\n-\n-### User Docs\n-* [Dashboard](docs/dashboard.md)\n+## Documentation\n-### Operator Docs\n+### Operational Docs\n* [Installation & Deployment](docs/deployment.md)\n+* [Dashboard](docs/dashboard.md)\n* [Scenarios](docs/scenario.md)\n* [Production Configuration](docs/production_config.md)\n"
    },
    {
        "sim_msg": "fix chunkAllocationDataSize value",
        "sim_diff": "diff --git a/instancing.js b/instancing.js @@ -153,7 +153,7 @@ const chunkAllocationDataSize =\nInt32Array.BYTES_PER_ELEMENT +\nInt32Array.BYTES_PER_ELEMENT +\nInt32Array.BYTES_PER_ELEMENT +\n- Uint8Array.BYTES_PER_ELEMENT; // 35\n+ Uint8Array.BYTES_PER_ELEMENT * 15; // 35\nclass ChunkAllocationData {\nconstructor(id, min, enterFace, peeks) {\n@@ -267,6 +267,7 @@ export class GeometryAllocator {\nconst allocator = new Allocator(Module);\nconst chunkAllocationBufferSize = maxNumDraws * chunkAllocationDataSize;\nthis.chunkAllocationBuffer = allocator.alloc(Uint8Array, chunkAllocationBufferSize);\n+ // console.log(this.chunkAllocationBuffer.length);\nthis.chunkAllocationArrayOffset = this.chunkAllocationBuffer.offset;\nthis.chunkAllocationDataView = new DataView(Module.HEAP8.buffer, this.chunkAllocationArrayOffset, chunkAllocationBufferSize);\n}\n@@ -389,10 +390,11 @@ export class GeometryAllocator {\nconst max = localVector3D3.fromArray(this.maxData, i * 4); // max\nif(isVectorInRange(camera.position, min, max)){\n- currentChunkMin.clone(min);\n- currentChunkMax.clone(max);\n+ currentChunkMin.copy(min);\n+ currentChunkMax.copy(max);\nfoundId = i;\n- // console.log(min.x == this.chunkAllocationDataView.getInt32(i * chunkAllocationDataSize + Int32Array.BYTES_PER_ELEMENT));\n+ // console.log(min.x);\n+ // console.log(currentChunkMin.x == this.chunkAllocationDataView.getInt32(i * chunkAllocationDataSize + Int32Array.BYTES_PER_ELEMENT));\n}\n};\n@@ -403,7 +405,9 @@ export class GeometryAllocator {\nif(foundId){\n- // console.log(this.chunkAllocationArrayOffset);\n+ // const dw = new DataView(Module.HEAP8.buffer, this.chunkAllocationArrayOffset, maxNumDraws * chunkAllocationDataSize);\n+ // console.log(chunkAllocationDataSize);\n+ // console.log(dw.getInt32((this.numDraws - 1) * chunkAllocationDataSize));\n// console.log(foundId);\nconst drawListBuffer = Module._cullOcclusionCulling(\nthis.OCInstance,\n",
        "org_diff": "diff --git a/src/analytics/HyperGeom.js b/src/analytics/HyperGeom.js @@ -56,16 +56,35 @@ const HyperGeom = () => {\nconst [lte, setlte] = useState('');\nconst [et, setet] = useState('');\n- const factorial = (n) => {\n- let total = 1;\n+ const combination = (n, r) => {\n+ const topArray = [];\n+ const botArray = [];\n+ const comboArray = [];\n+\nfor (let i = 1; i <= n; i++) {\n- total *= i;\n+ topArray.push(i);\n+ }\n+ for (let i = 1; i <= r; i++) {\n+ botArray.push(i);\n+ }\n+ for (let i = 1; i <= n - r; i++) {\n+ comboArray.push(i);\n}\n- return total;\n- };\n- const combination = (n, r) => {\n- return factorial(n) / (factorial(r) * factorial(n - r));\n+ let sum = 1;\n+\n+ for (let i = 0; i < Math.max(topArray.length, botArray.length, comboArray.length); i++) {\n+ if (topArray[i]) {\n+ sum *= topArray[i];\n+ }\n+ if (botArray[i]) {\n+ sum /= botArray[i];\n+ }\n+ if (comboArray[i]) {\n+ sum /= comboArray[i];\n+ }\n+ }\n+ return sum;\n};\nconst hyp = (N, S, n, s) => {\n@@ -178,8 +197,6 @@ const HyperGeom = () => {\n});\nconst length = possible.length > 0 ? Math.max(...possible.map((x) => parseInt(x, 10))) + 1 : 0;\n- console.log(length);\n-\nconst plotPopSize = (dataset, size) => {\nconst res = [];\nfor (let i = 0; i < size; i++) {\n@@ -192,7 +209,6 @@ const HyperGeom = () => {\nfor (let i = 0; i < size; i++) {\nres.push(calculate(dataset.populationSize, i, dataset.sampleSize, dataset.sampleSuccesses).greaterThanEqual);\n}\n- console.log(res);\nreturn res;\n};\nconst plotSampleSize = (dataset, size) => {\n@@ -234,7 +250,6 @@ const HyperGeom = () => {\ndata: plotData(dataset, length),\n})),\n};\n- console.log(plotdata);\nreturn (\n<>\n"
    },
    {
        "sim_msg": "Fix playground build",
        "sim_diff": "diff --git a/themes/playground/routes/index.js b/themes/playground/routes/index.js @@ -3,47 +3,29 @@ import { HtmlElement, Route, PureContainer } from 'cx/widgets';\nimport createLayout from 'shared/layout';\n-import Default from './default';\n-import Forms from 'shared/routes/forms';\n+import Widgets from 'shared/routes/widgets';\nimport Grids from 'shared/routes/grids';\nimport Charts from 'shared/routes/charts';\n-import Blocks from 'shared/routes/blocks';\n-import Reset from 'shared/routes/reset';\n-import Overlays from 'shared/routes/overlays';\n+import Global from 'shared/routes/global';\n-const layout = createLayout(<cx>\n- <a href=\"..\">Themes</a>\n- <a href=\"#\">Playground</a>\n-</cx>);\n+import GAController from 'shared/GAController';\n+\n+const layout = createLayout(\"Playground\");\nexport default <cx>\n- <PureContainer outerLayout={layout}>\n+ <PureContainer outerLayout={layout} controller={GAController}>\n<Route route=\"#\" url:bind=\"hash\">\n- <Default />\n- </Route>\n- <Route route=\"#reset\" url:bind=\"hash\">\n- <Reset />\n+ <Widgets />\n</Route>\n- <Route route=\"#forms\" url:bind=\"hash\">\n- <Forms />\n+ <Route route=\"#global\" url:bind=\"hash\">\n+ <Global />\n</Route>\n<Route route=\"#grids\" url:bind=\"hash\">\n<Grids />\n</Route>\n-\n<Route route=\"#charts\" url:bind=\"hash\">\n<Charts />\n</Route>\n-\n- <Route route=\"#blocks\" url:bind=\"hash\">\n- <Blocks />\n- </Route>\n-\n- <Route route=\"#overlays\" url:bind=\"hash\">\n- <Overlays />\n- </Route>\n-\n</PureContainer>\n</cx>\n-\n",
        "org_diff": "diff --git a/routes/cube_routes.js b/routes/cube_routes.js @@ -1192,6 +1192,7 @@ router.post('/uploaddecklist/:id', ensureAuth, async (req, res) => {\ndeck.comments = [];\ndeck.cubename = cube.name;\ndeck.cube = cube._id;\n+ deck.cubeOWner = cube.owner;\ndeck.seats = [\n{\nuserid: req.user._id,\n@@ -1663,6 +1664,7 @@ router.post('/startsealed/:id', body('packs').toInt({ min: 1, max: 16 }), body('\nconst deck = new Deck();\ndeck.cube = cube._id;\n+ deck.cubeOWner = cube.owner;\ndeck.date = Date.now();\ndeck.comments = [];\ndeck.cubename = cube.name;\n@@ -2792,6 +2794,7 @@ router.post('/submitdeck/:id', body('skipDeckbuilder').toBoolean(), async (req,\nconst deck = new Deck();\ndeck.cube = draft.cube;\n+ deck.cubeOWner = cube.owner;\ndeck.date = Date.now();\ndeck.comments = [];\ndeck.draft = draft._id;\n@@ -2959,6 +2962,7 @@ router.get('/rebuild/:id/:index', ensureAuth, async (req, res) => {\nconst deck = new Deck();\ndeck.cube = base.cube;\n+ deck.cubeOWner = base.owner;\ndeck.date = Date.now();\ndeck.cubename = cube.name;\ndeck.comments = [];\n"
    },
    {
        "sim_msg": "fix issue with collections module_utils raised in alikins example",
        "sim_diff": "diff --git a/mitogen/master.py b/mitogen/master.py @@ -185,21 +185,27 @@ def _looks_like_script(path):\ndef _py_filename(path):\n+ \"\"\"\n+ Returns a tuple of a Python path (if the file looks Pythonic) and whether or not\n+ the Python path is special. Special file paths/modules might only exist in memory\n+ \"\"\"\nif not path:\n- return None\n+ return None, False\nif path[-4:] in ('.pyc', '.pyo'):\npath = path.rstrip('co')\nif path.endswith('.py'):\n- return path\n+ return path, False\nif os.path.exists(path) and _looks_like_script(path):\n- return path\n+ return path, False\nbasepath = os.path.basename(path)\nif basepath in SPECIAL_FILE_PATHS:\n- return path\n+ return path, True\n+\n+ return None, False\ndef _get_core_source():\n@@ -510,9 +516,13 @@ class PkgutilMethod(FinderMethod):\nreturn\ntry:\n- path = _py_filename(loader.get_filename(fullname))\n+ path, is_special = _py_filename(loader.get_filename(fullname))\nsource = loader.get_source(fullname)\nis_pkg = loader.is_package(fullname)\n+\n+ # workaround for special python modules that might only exist in memory\n+ if is_special and is_pkg and not source:\n+ source = '\\n'\nexcept (AttributeError, ImportError):\n# - Per PEP-302, get_source() and is_package() are optional,\n# calling them may throw AttributeError.\n@@ -561,7 +571,7 @@ class SysModulesMethod(FinderMethod):\nfullname, alleged_name, module)\nreturn\n- path = _py_filename(getattr(module, '__file__', ''))\n+ path, _ = _py_filename(getattr(module, '__file__', ''))\nif not path:\nreturn\n@@ -651,7 +661,7 @@ class ParentEnumerationMethod(FinderMethod):\ndef _found_module(self, fullname, path, fp, is_pkg=False):\ntry:\n- path = _py_filename(path)\n+ path, _ = _py_filename(path)\nif not path:\nreturn\n",
        "org_diff": "diff --git a/fkie_node_manager_daemon/src/fkie_node_manager_daemon/common.py b/fkie_node_manager_daemon/src/fkie_node_manager_daemon/common.py @@ -250,6 +250,8 @@ def interpret_path(path, pwd='.'):\nif len(paths) > 0:\n# if more then one launch file is found, take the first one\nreturn paths[0]\n+ else:\n+ return path\nif path_suffix:\nreturn os.path.normpath(os.path.join(pkg, path_suffix))\nelse:\n"
    },
    {
        "sim_msg": "allow viewing one file at a time",
        "sim_diff": "diff --git a/qualcoder/manage_files.py b/qualcoder/manage_files.py @@ -102,6 +102,7 @@ class DialogManageFiles(QtWidgets.QDialog):\ndefault_import_directory = os.path.expanduser(\"~\")\nattribute_names = [] # list of dictionary name:value for AddAtributewww.git dialog\nparent_textEdit = None\n+ dialog_list = []\ndef __init__(self, app, parent_textEdit):\n@@ -110,6 +111,7 @@ class DialogManageFiles(QtWidgets.QDialog):\nself.default_import_directory = self.app.settings['directory']\nself.parent_textEdit = parent_textEdit\nself.attributes = []\n+ self.dialog_list = []\nQtWidgets.QDialog.__init__(self)\nself.ui = Ui_Dialog_manage_files()\nself.ui.setupUi(self)\n@@ -509,13 +511,14 @@ class DialogManageFiles(QtWidgets.QDialog):\nif restricted:\ntitle += \"RESTRICTED EDIT\"\nself.text_view.setWindowTitle(title)\n- ok = self.text_view.exec_()\n- if not ok:\n- return\n+ if self.dialog_list != []:\n+ self.dialog_list = []\n+ self.dialog_list.append(self.text_view)\n+ self.text_view.show()\n+\ntext = self.text_view.ui.textEdit.toPlainText()\nif text == self.source[x]['fulltext']:\nreturn\n-\nself.source[x]['fulltext'] = text\ncur = self.app.conn.cursor()\ncur.execute(\"update source set fulltext=? where id=?\", (text, self.source[x]['id']))\n@@ -777,7 +780,10 @@ class DialogManageFiles(QtWidgets.QDialog):\ntry:\nui = DialogViewAV(self.app, self.source[x])\n#ui.exec_() # this dialog does not display well on Windows 10 so trying .show()\n- ui.exec_()\n+ if self.dialog_list != []:\n+ self.dialog_list = []\n+ self.dialog_list.append(ui)\n+ ui.show()\n# try and update file data here\nself.load_file_data()\nif self.source[x]['memo'] == \"\":\n@@ -794,7 +800,10 @@ class DialogManageFiles(QtWidgets.QDialog):\n\"\"\" View an image file and edit the image memo. \"\"\"\nui = DialogViewImage(self.app, self.source[x])\n- ui.exec_()\n+ if self.dialog_list != []:\n+ self.dialog_list = []\n+ self.dialog_list.append(ui)\n+ ui.show()\nmemo = ui.ui.textEdit.toPlainText()\nif self.source[x]['memo'] != memo:\nself.source[x]['memo'] = memo\n",
        "org_diff": "diff --git a/fkie_node_manager/src/fkie_node_manager/editor/editor.py b/fkie_node_manager/src/fkie_node_manager/editor/editor.py @@ -941,7 +941,7 @@ class Editor(QMainWindow):\nname = \"\"\nif len(lines) == 1:\nname = lines[0]\n- self._insert_text('<param name=\"%s\" value=\"value\" />' % name, 13, len(name))\n+ self._insert_text('<param name=\"%s\" value=\"value\" />' % name, 22 + len(name), 5)\ndef _on_add_param_tag(self):\nself._insert_text('<param name=\"name\" value=\"value\" />', 13, 4)\n"
    },
    {
        "sim_msg": "move schema value file",
        "sim_diff": "diff --git a/test/definition.schema.test.js b/test/definition.schema.test.js @@ -19,7 +19,7 @@ const assert = require('../bin/assert');\nconst Enforcer = require('../index');\nconst expect = require('chai').expect;\nconst util = require('../bin/util');\n-const Value = require('../bin/value');\n+const Value = require('../bin/schema/value');\ndescribe('enforcer/schema', () => {\nconst schemas = {\n",
        "org_diff": "diff --git a/__tests__/serverjs/updatecards.test.js b/__tests__/serverjs/updatecards.test.js @@ -5,7 +5,6 @@ const updatecards = require('../../serverjs/updatecards');\nconst carddb = require('../../serverjs/cards');\nconst examplecards = require('../../fixtures/examplecards');\nconst cardutil = require('../../dist/util/Card.js');\n-const fs = require('fs');\nconst cardsFixturePath = 'fixtures/cards_small.json';\n"
    },
    {
        "sim_msg": "always set full obj for node group labels and anno",
        "sim_diff": "diff --git a/lib/shared/addon/components/node-group-row/component.js b/lib/shared/addon/components/node-group-row/component.js @@ -20,23 +20,11 @@ export default Component.extend({\nediting: equal('mode', 'edit'),\nactions: {\nsetTags(section) {\n- const { model: { tags = {} } } = this;\n-\n- for (let key in section) {\n- tags[key] = section[key];\n- }\n-\n- set(this, 'model.tags', tags);\n+ set(this, 'model.tags', section);\n},\nsetLabels(section) {\n- const { model: { labels = {} } } = this;\n-\n- for (let key in section) {\n- labels[key] = section[key];\n- }\n-\n- set(this, 'model.labels', labels);\n+ set(this, 'model.labels', section);\n},\n},\n",
        "org_diff": "diff --git a/src/components/CubeOverviewModal.js b/src/components/CubeOverviewModal.js @@ -247,7 +247,8 @@ class CubeOverviewModal extends Component {\n<Row>\n<Col>\n<FormGroup tag=\"fieldset\">\n- {['Vintage', 'Legacy+', 'Legacy', 'Modern', 'Pioneer', 'Historic', 'Standard', 'Set'].map((label) => (\n+ {['Vintage', 'Legacy+', 'Legacy', 'Modern', 'Pioneer', 'Historic', 'Standard', 'Set'].map(\n+ (label) => (\n<FormGroup check key={label}>\n<Label check>\n<Input\n@@ -261,7 +262,8 @@ class CubeOverviewModal extends Component {\n{label}\n</Label>\n</FormGroup>\n- ))}\n+ ),\n+ )}\n</FormGroup>\n</Col>\n<Col>\n"
    },
    {
        "sim_msg": "Refactor widget as per code review notes.",
        "sim_diff": "diff --git a/assets/js/modules/analytics/components/dashboard/DashboardPopularPagesWidget.js b/assets/js/modules/analytics/components/dashboard/DashboardPopularPagesWidget.js @@ -28,48 +28,60 @@ import Data from 'googlesitekit-data';\nimport { STORE_NAME } from '../../datastore/constants';\nimport { STORE_NAME as CORE_USER } from '../../../../googlesitekit/datastore/user/constants';\nimport { STORE_NAME as CORE_MODULES } from '../../../../googlesitekit/modules/datastore/constants';\n-import { getTopPagesReportDataDefaults } from '../../util';\nimport whenActive from '../../../../util/when-active';\n-import ErrorText from '../../../../components/error-text';\nimport PreviewTable from '../../../../components/preview-table';\nimport Layout from '../../../../components/layout/layout';\nimport { getDataTableFromData, TableOverflowContainer } from '../../../../components/data-table';\nimport { numberFormat } from '../../../../util';\n+import getDataErrorComponent from '../../../../components/notifications/data-error';\n+import getNoDataComponent from '../../../../components/notifications/nodata';\n+\nconst { useSelect } = Data;\nfunction DashboardPopularPagesWidget() {\nconst {\n+ analytics,\ndata,\nerror,\n- analytics,\n+ loading,\n} = useSelect( ( select ) => {\nconst store = select( STORE_NAME );\nconst args = {\n- ...getTopPagesReportDataDefaults(),\ndateRange: select( CORE_USER ).getDateRange(),\n+ dimensions: 'ga:pageTitle,ga:pagePath',\n+ metrics: [\n+ {\n+ expression: 'ga:pageviews',\n+ alias: 'Pageviews',\n+ },\n+ ],\n+ orderby: [\n+ {\n+ fieldName: 'ga:pageviews',\n+ sortOrder: 'DESCENDING',\n+ },\n+ ],\n+ limit: 10,\n};\nreturn {\n+ analytics: select( CORE_MODULES ).getModule( 'analytics' ),\ndata: store.getReport( args ),\nerror: store.getErrorForSelector( 'getReport', [ args ] ),\n- analytics: select( CORE_MODULES ).getModule( 'analytics' ),\n+ loading: store.isResolving( 'getReport', [ args ] ),\n};\n} );\n- if ( error ) {\n- return (\n- <div className=\"mdc-layout-grid__cell mdc-layout-grid__cell--span-12\">\n- <ErrorText message={ error.message } />\n- </div>\n- );\n+ if ( loading ) {\n+ return <PreviewTable padding />;\n}\n- if ( ! data ) {\n- return <PreviewTable padding />;\n+ if ( error ) {\n+ return getDataErrorComponent( __( 'Analytics', 'google-site-kit' ), error.message );\n}\n- if ( ! Array.isArray( data ) || ! data.length || ! Array.isArray( data[ 0 ].data.rows ) ) {\n- return null;\n+ if ( ! Array.isArray( data?.[ 0 ]?.data?.rows ) ) {\n+ return getNoDataComponent( __( 'Analytics', 'google-site-kit' ) );\n}\nconst headers = [\n@@ -107,7 +119,7 @@ function DashboardPopularPagesWidget() {\nclassName=\"googlesitekit-popular-content\"\nfooter\nfooterCtaLabel={ _x( 'Analytics', 'Service name', 'google-site-kit' ) }\n- footerCtaLink={ ( analytics || {} ).homepage }\n+ footerCtaLink={ analytics?.homepage }\nfill\n>\n<TableOverflowContainer>\n",
        "org_diff": "diff --git a/src/analytics/Suggestions.js b/src/analytics/Suggestions.js @@ -74,7 +74,7 @@ const Suggestions = ({ cards, cube }) => {\n</CardHeader>\n<CardBody>\n<ListGroup>\n- {loading ? <em>Loading...</em> : adds.map((add) => <ListGroupItem key={add.name}>{add.name}</ListGroupItem>)}\n+ {loading ? <em>Loading...</em> : adds.map((add) => <ListGroupItem key={add.cardID}>{add.details.name}</ListGroupItem>)}\n</ListGroup>\n</CardBody>\n</Card>\n"
    },
    {
        "sim_msg": "Fix screenshots.js",
        "sim_diff": "diff --git a/ratings.js b/ratings.js @@ -35,21 +35,16 @@ if (program.xvbf) {\nif (program.number) {\ntestRatings.testTopSites(program.number);\n-}\n-\n-else if (program.file) {\n+} else if (program.file) {\nfs.exists(program.file, (exists) => {\nif (exists) {\n- let text = fs.readFileSync(fileName, \"utf8\");\n+ let text = fs.readFileSync(program.file, \"utf8\");\nlet urlArray = text.split(/\\r?\\n/);\n- testRatings.getUrls(urlArray);\n- }\n- else {\n+ testRatings.testUrls(urlArray);\n+ } else {\nconsole.error(`File ${program.file} does not exist.`);\n}\n});\n-}\n-\n-else if (program.url) {\n- testRatings.getUrls(program.url);\n+} else if (program.url) {\n+ testRatings.testUrl(program.url);\n}\n",
        "org_diff": "diff --git a/src/utils/Draft.js b/src/utils/Draft.js @@ -36,17 +36,17 @@ function botCardRating(botColors, card) {\n// of picking it by a factor of (100 * 10**(x/400)) - 100 percent\nif (isLand) {\nif ((subset || contains) && isFetch) {\n- rating += 191; // Increase value of picking by roughly 200%\n+ rating += 280; // Increase value of picking by roughly 400%\n} else if (subset || contains) {\nswitch (colors.length) {\ncase 1:\n- rating += 176; // Increase value of picking by roughly 175%\n+ rating += 191; // Increase value of picking by roughly 200%\nbreak;\ncase 2:\n- rating += 218; // Increase value of picking by roughly 250%\n+ rating += 262; // Increase value of picking by roughly 350%\nbreak;\ndefault:\n- rating += 265; // Increase value of picking by roughly 360%\n+ rating += 311; // Increase value of picking by roughly 500%\nbreak;\n}\n} else if (overlap && isFetch) {\n"
    },
    {
        "sim_msg": "Update Charts.js\nconcepts/charts fiddles connected;",
        "sim_diff": "diff --git a/docs/content/concepts/Charts.js b/docs/content/concepts/Charts.js @@ -48,7 +48,7 @@ export const Charts = <cx>\n</Legend.Scope>\n</div>\n- <CodeSnippet putInto=\"code\">{`\n+ <CodeSnippet putInto=\"code\" fiddle=\"Wase9Aty\">{`\n<Svg style=\"width:300px;height:200px\" margin=\"10 20 30 50\">\n<Chart axes={{\nx: <NumericAxis />,\n@@ -120,7 +120,7 @@ export const Charts = <cx>\n</Legend.Scope>\n</div>\n- <CodeSnippet putInto=\"code\">{`\n+ <CodeSnippet putInto=\"code\" fiddle=\"WEPtT9C5\">{`\n<Svg style=\"width:200px;height:200px;\">\n<ColorMap />\n<PieChart>\n",
        "org_diff": "diff --git a/src/analytics/Chart.js b/src/analytics/Chart.js @@ -21,9 +21,10 @@ const Chart = ({ cards, characteristics }) => {\nColorless: '#ADADAD',\nMulticolored: '#DBC467',\n};\n+ const colors = [...Object.values(colorMap), '#000000'];\n- const getColor = (label) => {\n- return colorMap[label] ?? '#000000';\n+ const getColor = (label, index) => {\n+ return colorMap[label] ?? colors[index % colors.length];\n};\nconst options = {\n@@ -60,11 +61,11 @@ const Chart = ({ cards, characteristics }) => {\nconst labels = getLabels(cards, characteristic);\nconst data = {\nlabels,\n- datasets: Object.keys(groups).map((key) => ({\n+ datasets: Object.keys(groups).map((key, index) => ({\nlabel: key,\ndata: labels.map((label) => groups[key].filter((card) => cardIsLabel(card, label, characteristic)).length),\n- backgroundColor: getColor(key),\n- borderColor: getColor(key),\n+ backgroundColor: getColor(key, index),\n+ borderColor: getColor(key, index),\n})),\n};\n"
    },
    {
        "sim_msg": "taking out some logs",
        "sim_diff": "diff --git a/routes/index.js b/routes/index.js @@ -49,15 +49,11 @@ module.exports = function(server) {\nserver.get(/.*/, function(req, res, next) {\nvar current_hash = config.engine.get('version');\nvar url_arr = req.url.split('/');\n- console.log(current_hash);\n- console.log(url_arr[1])\nif(url_arr[1] != current_hash){\n- console.log('but do I go here');\nurl_arr.splice(1,0, current_hash);\nvar newPath = url_arr.join('/');\nres.redirect(newPath , next);\n} else {\n- console.log(next());\nnext();\n}\n},\n",
        "org_diff": "diff --git a/routes/cube_routes.js b/routes/cube_routes.js @@ -2801,7 +2801,7 @@ router.get(\nreturn res.status(404).send('Cube not found.');\n}\n- res.contentType('text/json');\n+ res.contentType('application/json');\nres.set('Access-Control-Allow-Origin', '*');\nreturn res.status(200).send(JSON.stringify(cube));\n}),\n"
    },
    {
        "sim_msg": "add assets, activate, download to client",
        "sim_diff": "diff --git a/planet/api/client.py b/planet/api/client.py @@ -296,3 +296,15 @@ class ClientV1(_Base):\nreturn self.dispatcher.response(models.Request(\nself._url('data/v1/stats'), self.auth,\nbody_type=models.JSON, data=body, method='POST')).get_body()\n+\n+ def get_assets(self, item):\n+ assets_url = item['_links']['assets']\n+ return self._get(assets_url).get_body()\n+\n+ def activate(self, asset):\n+ activate_url = asset['_links']['activate']\n+ return self._get(activate_url).get_body()\n+\n+ def download(self, asset, callback=None):\n+ download_url = asset['location']\n+ return self._get(download_url, models.Image, callback=callback)\n",
        "org_diff": "diff --git a/sc2/client.py b/sc2/client.py @@ -150,11 +150,10 @@ class Client(Protocol):\nres = await self._execute(\naction=sc_pb.RequestAction(actions=(sc_pb.Action(action_raw=a) for a in combine_actions(actions)))\n)\n- result = [ActionResult(r) for r in res.action.result]\nif return_successes:\n- return result\n+ return [ActionResult(r) for r in res.action.result]\nelse:\n- return [r for r in result if r != ActionResult.Success]\n+ return [ActionResult(r) for r in res.action.result if ActionResult(r) != ActionResult.Success]\nasync def query_pathing(\nself, start: Union[Unit, Point2, Point3], end: Union[Point2, Point3]\n"
    },
    {
        "sim_msg": "Bumping dependency versions in setup.py",
        "sim_diff": "diff --git a/setup.py b/setup.py @@ -24,9 +24,9 @@ setup(\npackages=(find_packages(exclude=['test', 'test.*'])),\ninclude_package_data=True,\ninstall_requires=[\n- \"apispec==0.25.4\",\n+ \"apispec==0.38.0\",\n\"bg-utils>=2.3.4\",\n- \"tornado==4.5.2\",\n+ \"tornado==5.0.2\",\n],\nextras_require={\n':python_version==\"2.7\"': [\n",
        "org_diff": "diff --git a/setup.py b/setup.py @@ -10,7 +10,7 @@ test_requirements = convert_deps_to_pip(pfile[\"dev-packages\"], r=False)\nsetup(\nname=\"burnysc2\",\npackages=find_packages(exclude=[\"examples*\", \"examples\"]),\n- version=\"0.12.9\",\n+ version=\"0.12.10\",\ndescription=\"A StarCraft II API Client for Python 3\",\nlicense=\"MIT\",\nauthor=\"BurnySc2\",\n"
    },
    {
        "sim_msg": "refactor checkbox change handler",
        "sim_diff": "diff --git a/src/screens/FilterModal/component.js b/src/screens/FilterModal/component.js @@ -30,6 +30,17 @@ type Props = {\nonCancel: () => void\n};\n+const toggleTagFilter = (\n+ selectedValues: Set<string> | Set<Area>,\n+ sectionValue: string\n+) => {\n+ const values: Set<string> = new Set([...selectedValues]);\n+ if (!values.delete(sectionValue)) {\n+ values.add(sectionValue);\n+ }\n+ return values;\n+};\n+\nclass FilterModal extends PureComponent<Props> {\ncomponentDidMount() {\nconst { navigation, onCancel } = this.props;\n@@ -44,27 +55,24 @@ class FilterModal extends PureComponent<Props> {\nremove: () => void\n};\n- toggleTagFilter = (\n- selectedValues: Set<string> | Set<Area>,\n- sectionValue: string\n- ) => {\n- const values: Set<string> = new Set([...selectedValues]);\n- if (!values.delete(sectionValue)) {\n- values.add(sectionValue);\n- }\n- return values;\n- };\n-\nclearTagFilters = () =>\nthis.props.onChange(\nObject.keys(tags).reduce((acc, key) => ({ ...acc, [key]: new Set() }), {})\n);\n+ handleCheckboxChange = (sectionName: string, sectionValue: string) => {\n+ this.props.onChange({\n+ [sectionName]: toggleTagFilter(\n+ this.props.eventFilters[sectionName],\n+ sectionValue\n+ )\n+ });\n+ };\n+\nrender() {\nconst {\napplyButtonText,\nonApply,\n- onChange,\neventFilters,\nnavigation,\nnumEventsSelected,\n@@ -99,14 +107,9 @@ class FilterModal extends PureComponent<Props> {\ntags[sectionName].map(sectionValue => (\n<CheckBox\nkey={sectionValue}\n- onChange={() => {\n- onChange({\n- [sectionName]: this.toggleTagFilter(\n- eventFilters[sectionName],\n- sectionValue\n- )\n- });\n- }}\n+ onChange={() =>\n+ this.handleCheckboxChange(sectionName, sectionValue)\n+ }\nchecked={eventFilters[sectionName].has(sectionValue)}\n// $FlowFixMe\nlabel={text.tags[sectionValue] || sectionValue}\n",
        "org_diff": "diff --git a/src/components/FilterCollapse.js b/src/components/FilterCollapse.js @@ -44,6 +44,7 @@ const numFields = ['cmc', 'price', 'priceFoil', 'power', 'toughness', 'rarity'];\nconst AdvancedFilterModal = ({ isOpen, toggle, apply, values, onChange, ...props }) =>\n<Modal isOpen={isOpen} toggle={toggle} size=\"lg\" {...props}>\n+ <Form onSubmit={e => { e.preventDefault(); apply(); }}>\n<ModalHeader toggle={toggle}>Advanced Filters</ModalHeader>\n<ModalBody>\n<TextField name=\"name\" humanName=\"Card Name\" placeholder={'Any words in the name, e.g. \"Fire\"'} value={values.name} onChange={onChange} />\n@@ -86,8 +87,9 @@ const AdvancedFilterModal = ({ isOpen, toggle, apply, values, onChange, ...props\n</ModalBody>\n<ModalFooter>\n<Button color=\"danger\" aria-label=\"Close\" onClick={toggle}>Cancel</Button>\n- <Button color=\"success\" onClick={apply}>Apply</Button>\n+ <Button color=\"success\" type=\"submit\">Apply</Button>\n</ModalFooter>\n+ </Form>\n</Modal>;\nclass FilterCollapse extends Component {\n"
    },
    {
        "sim_msg": "Add platform dependent type hints",
        "sim_diff": "diff --git a/path/__init__.pyi b/path/__init__.pyi @@ -3,6 +3,8 @@ from __future__ import annotations\nimport builtins\nimport contextlib\nimport os\n+import shutil\n+import sys\nfrom io import (\nBufferedRandom,\nBufferedReader,\n@@ -324,6 +326,7 @@ class Path(str):\ndef get_owner(self) -> str: ...\n@property\ndef owner(self) -> str: ...\n+ if sys.platform != 'win32':\ndef statvfs(self) -> os.statvfs_result: ...\ndef pathconf(self, name: Union[str, int]) -> int: ...\ndef utime(\n@@ -335,7 +338,10 @@ class Path(str):\nfollow_symlinks: bool = ...,\n) -> Path: ...\ndef chmod(self: Self, mode: Union[str, int]) -> Self: ...\n- def chown(self: Self, uid: Union[int, str] = ..., gid: Union[int, str] = ...) -> Self: ...\n+ if sys.platform != 'win32':\n+ def chown(\n+ self: Self, uid: Union[int, str] = ..., gid: Union[int, str] = ...\n+ ) -> Self: ...\ndef rename(self: Self, new: str) -> Self: ...\ndef renames(self: Self, new: str) -> Self: ...\ndef mkdir(self: Self, mode: int = ...) -> Self: ...\n@@ -388,7 +394,9 @@ class Path(str):\ncopy_function: Callable[[str, str], None] = ...,\nignore: Callable[[Any, List[str]], Union[List[str], Set[str]]] = ...,\n) -> None: ...\n+ if sys.platform != 'win32':\ndef chroot(self) -> None: ...\n+ if sys.platform == 'win32':\ndef startfile(self: Self, operation: Optional[str] = ...) -> Self: ...\n@contextlib.contextmanager\ndef in_place(\n@@ -432,7 +440,6 @@ class SpecialResolver:\ndef __getattr__(self, scope: str) -> ResolverScope: ...\ndef get_dir(self, scope: str, class_: str) -> MultiPathType: ...\n-\nclass Multi:\n@classmethod\ndef for_class(cls, path_cls: type) -> Type[MultiPathType]: ...\n@@ -443,7 +450,6 @@ class Multi:\n@classmethod\ndef _next_class(cls) -> Type[Path]: ...\n-\nclass MultiPathType(Multi, Path):\npass\n@@ -468,4 +474,6 @@ class TempDir(Path):\nclass Handlers:\n@classmethod\n- def _resolve(cls, param: Union[str, Callable[[str], None]]) -> Callable[[str], None]: ...\n\\ No newline at end of file\n+ def _resolve(\n+ cls, param: Union[str, Callable[[str], None]]\n+ ) -> Callable[[str], None]: ...\n",
        "org_diff": "diff --git a/sc2/paths.py b/sc2/paths.py @@ -25,10 +25,6 @@ CWD = {\nPF = platform.system()\n-if PF not in BASEDIR:\n- logger.critical(f\"Unsupported platform '{PF}'\")\n- exit(1)\n-\ndef get_env():\n# TODO: Linux env conf from: https://github.com/deepmind/pysc2/blob/master/pysc2/run_configs/platforms.py\nreturn None\n@@ -41,14 +37,28 @@ def latest_executeble(versions_dir):\nexit(1)\nreturn path / BINPATH[PF]\n-class Paths(object):\n+\n+class _MetaPaths(type):\n+ \"\"\"\"Lazily loads paths to allow importing the library even if SC2 isn't installed.\"\"\"\n+ def __setup(self):\n+ if PF not in BASEDIR:\n+ logger.critical(f\"Unsupported platform '{PF}'\")\n+ exit(1)\n+\ntry:\n- BASE = Path(os.environ.get(\"SC2PATH\", BASEDIR[PF])).expanduser()\n- EXECUTABLE = latest_executeble(BASE / \"Versions\")\n- CWD = base_dir / CWD[PF] if CWD[PF] else None\n+ self.BASE = Path(os.environ.get(\"SC2PATH\", BASEDIR[PF])).expanduser()\n+ self.EXECUTABLE = latest_executeble(self.BASE / \"Versions\")\n+ self.CWD = base_dir / CWD[PF] if CWD[PF] else None\n- REPLAYS = BASE / \"Replays\"\n- MAPS = BASE / \"Maps\"\n+ self.REPLAYS = self.BASE / \"Replays\"\n+ self.MAPS = self.BASE / \"Maps\"\nexcept FileNotFoundError as e:\nlogger.critical(f\"SC2 installation not found: File '{e.filename}' does not exist.\")\nexit(1)\n+\n+ def __getattr__(self, attr):\n+ self.__setup()\n+ return getattr(self, attr)\n+\n+class Paths(metaclass=_MetaPaths):\n+ \"\"\"Paths for SC2 folders, lazily loaded using the above metaclass.\"\"\"\n"
    },
    {
        "sim_msg": "remove unused methods in util",
        "sim_diff": "diff --git a/slm_lab/lib/util.py b/slm_lab/lib/util.py @@ -404,24 +404,6 @@ def read_as_plain(data_path, **kwargs):\nreturn data\n-def run_cmd(cmd):\n- '''Run shell command'''\n- print(f'+ {cmd}')\n- proc = subprocess.Popen(cmd, cwd=ROOT_DIR, shell=True, stdout=subprocess.PIPE, stderr=subprocess.STDOUT, close_fds=True)\n- return proc\n-\n-\n-def run_cmd_wait(proc):\n- '''Wait on a running process created by util.run_cmd and print its stdout'''\n- for line in proc.stdout:\n- print(line.decode(), end='')\n- output = proc.communicate()[0]\n- if proc.returncode != 0:\n- raise subprocess.CalledProcessError(proc.args, proc.returncode, output)\n- else:\n- return output\n-\n-\ndef self_desc(cls, omit=None):\n'''Method to get self description, used at init.'''\ndesc_list = [f'{get_class_name(cls)}:']\n",
        "org_diff": "diff --git a/sc2/sc2process.py b/sc2/sc2process.py @@ -193,7 +193,8 @@ class SC2Process:\n)\nasync def _connect(self):\n- for i in range(60):\n+ # How long it waits for SC2 to start (in seconds)\n+ for i in range(180):\nif self._process is None:\n# The ._clean() was called, clearing the process\nlogger.debug(\"Process cleanup complete, exit\")\n"
    },
    {
        "sim_msg": "Fix script injection in 'unknown' parameter",
        "sim_diff": "diff --git a/service/routes/api.js b/service/routes/api.js @@ -64,7 +64,7 @@ router.get(/^\\/v2\\/polyfill(\\.\\w+)(\\.\\w+)?/, (req, res) => {\nstream: true\n};\nif (req.query.unknown) {\n- params.unknown = req.query.unknown;\n+ params.unknown = (req.query.unknown === 'polyfill') ? 'polyfill' : 'ignore';\n}\nif (uaString) {\nparams.uaString = uaString;\n",
        "org_diff": "diff --git a/routes/cube_routes.js b/routes/cube_routes.js @@ -3370,7 +3370,7 @@ router.post(\n'/api/adds/:id',\nutil.wrapAsyncApi(async (req, res) => {\nconst response = await fetch(\n- `http://127.0.0.1:8000/?cube_name=${req.params.id}&num_recs=${100}&root=${encodeURIComponent(\n+ `http://127.0.0.1:8000/?cube_name=${req.params.id}&num_recs=${1000}&root=${encodeURIComponent(\n'http://localhost:5000',\n)}`,\n);\n"
    },
    {
        "sim_msg": "website(showcase): shuffle apps order.",
        "sim_diff": "diff --git a/website/src/components/Showcase/Showcase.js b/website/src/components/Showcase/Showcase.js -import React from 'react';\n+import React, { useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport Card from './Card';\nimport cardList from '@site/showcase.json';\nimport styles from './Showcase.module.css';\n+import _ from 'lodash';\nfunction Showcase() {\n- const cards = cardList.map((props) => <Card key={props.title} {...props} />);\n+ const [cards, setCards] = useState([]);\n- return (\n+ useEffect(() => {\n+ setCards(_makeShuffledCardList(cardList).map(_makeCard));\n+ }, []);\n+\n+ return _makeCardsContainer(cards);\n+}\n+\n+const _makeShuffledCardList = (cardList) => {\n+ const partition = _.partition(cardList, 'shouldStayOnTop');\n+ return partition[0].concat(_.shuffle(partition[1]));\n+}\n+\n+const _makeCard = (props) => <Card key={props.title} {...props} />;\n+\n+const _makeCardsContainer = (cards) =>\n+ (\n<section className={clsx('container', styles.container)}>\n<ul className={clsx('col', 'col--12', styles.list)}>{cards}</ul>\n</section>\n);\n-}\nexport default Showcase;\n",
        "org_diff": "diff --git a/src/pages/CardPage.js b/src/pages/CardPage.js -import React from 'react';\n+import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport UserPropType from 'proptypes/UserPropType';\nimport CardPricePropType from 'proptypes/CardPricePropType';\n@@ -20,6 +20,7 @@ import {\nTable,\nBadge,\nButton,\n+ Input,\n} from 'reactstrap';\nimport ChartComponent from 'react-chartjs-2';\n@@ -45,6 +46,7 @@ import Tab from 'components/Tab';\nimport { cardPrice, cardFoilPrice, cardPriceEur, cardTix, cardElo } from 'utils/Card';\nimport { getTCGLink, getCardMarketLink, getCardHoarderLink, getCardKingdomLink } from 'utils/Affiliate';\n+import { CheckIcon, ClippyIcon } from '@primer/octicons-react';\nconst AutocardA = withAutocard('a');\nconst AddModal = withModal(Button, AddToCubeModal);\n@@ -177,6 +179,33 @@ LegalityBadge.propTypes = {\nstatus: PropTypes.string.isRequired,\n};\n+const CardIdBadge = ({ id }) => {\n+ const [copied, setCopied] = useState(false);\n+\n+ const onCopyClick = async () => {\n+ await navigator.clipboard.writeText(id);\n+ setCopied(true);\n+ };\n+\n+ return (\n+ <InputGroup className=\"flex-nowrap mb-3\" size=\"sm\">\n+ <InputGroupAddon addonType=\"prepend\">\n+ <InputGroupText>Card ID</InputGroupText>\n+ </InputGroupAddon>\n+ <Input id=\"card-id\" className=\"bg-white\" value={id} disabled />\n+ <InputGroupAddon addonType=\"append\" style={{ width: 'auto' }}>\n+ <Button className=\"btn-sm\" onClick={onCopyClick}>\n+ {copied ? <CheckIcon size={16} /> : <ClippyIcon size={16} />}\n+ </Button>\n+ </InputGroupAddon>\n+ </InputGroup>\n+ );\n+};\n+\n+CardIdBadge.propTypes = {\n+ id: PropTypes.string.isRequired,\n+};\n+\nconst getPriceTypeUnit = {\nprice: 'USD',\nprice_foil: 'USD',\n@@ -231,11 +260,12 @@ const CardPage = ({ user, card, data, versions, related, cubes, loginCallback })\ncolor=\"success\"\nblock\noutline\n- className=\"mb-2 mr-2\"\n+ className=\"mb-1 mr-2\"\nmodalProps={{ card, cubes, hideAnalytics: true }}\n>\nAdd to Cube...\n</AddModal>\n+ <CardIdBadge id={card._id} />\n{card.prices && Number.isFinite(cardPrice({ details: card })) && (\n<TextBadge name=\"Price\" className=\"mt-1\" fill>\n<Tooltip text=\"TCGPlayer Market Price\">${cardPrice({ details: card }).toFixed(2)}</Tooltip>\n"
    },
    {
        "sim_msg": "perf: resolve body",
        "sim_diff": "diff --git a/lib/util/data-server.js b/lib/util/data-server.js @@ -110,22 +110,7 @@ function getList(ids) {\nreturn [];\n}\nreturn ids.map(function(id, i) {\n- var curData = reqData[id];\n- if (curData) {\n- var req = curData.req;\n- var res = curData.res;\n- if (Buffer.isBuffer(req.body)) {\n- req.body = util.decodeBuffer(req.body);\n- }\n- if (Buffer.isBuffer(res.body)) {\n- if (res.isImage) {\n- res.body = getBase64Data(res) + res.body.toString('base64');\n- } else {\n- res.body = util.decodeBuffer(res.body);\n- }\n- }\n- }\n- return curData;\n+ return reqData[id];\n});\n}\n@@ -295,6 +280,18 @@ module.exports = function init(_proxy) {\nvar newIds = (clearNetwork || startTime == -1) ? [] : getIds(startTime, count, options.lastRowId);\nvar setData = function(item) {\nif (item) {\n+ var req = item.req;\n+ var res = item.res;\n+ if (Buffer.isBuffer(req.body)) {\n+ req.body = util.decodeBuffer(req.body);\n+ }\n+ if (Buffer.isBuffer(res.body)) {\n+ if (res.isImage) {\n+ res.body = getBase64Data(res) + res.body.toString('base64');\n+ } else {\n+ res.body = util.decodeBuffer(res.body);\n+ }\n+ }\nif (config.secureFilter) {\ntry {\nitem = config.secureFilter(item, clientIp, filter) || item;\n",
        "org_diff": "diff --git a/serverjs/cubefn.js b/serverjs/cubefn.js @@ -23,22 +23,14 @@ function buildIdQuery(id) {\nasync function generateShortId() {\nconst cubes = await Cube.find({}, ['shortID']);\n-\nconst shortIds = cubes.map((cube) => cube.shortID);\n-\n- const ids = cubes.map((cube) => util.fromBase36(cube.shortID));\n- let max = Math.max(...ids);\n-\n- if (max < 0) {\n- max = 0;\n- }\n+ const space = shortIds.length * 2;\nlet newId = '';\nlet isGoodId = false;\nwhile (!isGoodId) {\n- max += 1;\n- newId = util.toBase36(max);\n-\n+ const rand = Math.floor(Math.random() * space);\n+ newId = util.toBase36(rand);\nisGoodId = !util.hasProfanity(newId) && !shortIds.includes(newId);\n}\n"
    },
    {
        "sim_msg": "chore: remove unused npm test scripts",
        "sim_diff": "diff --git a/package.json b/package.json \"prettify\": \"prettier --write --ignore-path .gitignore \\\"**/*.{css,html,js,json,md,yaml,yml}\\\"\",\n\"prettify:updated\": \"pipe-git-updated --ext=css --ext=html --ext=js --ext=json --ext=md --ext=yaml --ext=yml -- prettier --write\",\n\"test\": \"mocha --require ./tests/mochaHooks.cjs\",\n- \"test:cov\": \"NODE_OPTIONS='--experimental-loader @istanbuljs/esm-loader-hook' nyc --reporter=html npm test\",\n- \"old-test:jest\": \"npm run build && jest --verbose --silent --runInBand\",\n- \"old-test:cov\": \"npm run build && jest --coverage --silent --runInBand --collectCoverageFrom=src/**/*.js\",\n- \"old-test:log\": \"npm run build && jest --verbose\",\n- \"old-test:noBuild\": \"jest --verbose --runInBand --bail\",\n- \"old-test:unit\": \"jest --verbose --silent --runInBand --config jest.config.units.js\",\n- \"old-test:watch\": \"SKIP_SETUP=true jest --verbose --watch\"\n+ \"test:cov\": \"NODE_OPTIONS='--experimental-loader @istanbuljs/esm-loader-hook' nyc --reporter=html npm test\"\n},\n\"repository\": {\n\"type\": \"git\",\n",
        "org_diff": "diff --git a/package.json b/package.json \"scripts\": {\n\"beautify\": \"npm run prettier\",\n\"prettier\": \"prettier --write {__tests__,fixtures,models,one_shot_scripts,public,routes,serverjs,src,views}'/**/*.js' webpack.'*'.js\",\n+ \"prettier-master\": \"prettier --write $(git diff master --name-only | grep -E '.js$')\",\n+ \"prettier-head\": \"prettier --write $(git diff HEAD --name-only | grep -E '.js$')\",\n\"lint\": \"prettier --check {__tests__,fixtures,models,one_shot_scripts,public,routes,serverjs,src,views}'/**/*.js'\",\n\"nodemon\": \"nodemon --ignore src --ignore public\",\n\"webpack-dev-server\": \"webpack-dev-server --config webpack.dev.js\",\n"
    },
    {
        "sim_msg": "Add graph to README.md",
        "sim_diff": "diff --git a/README.md b/README.md [![CircleCI](https://circleci.com/gh/hyperledger/iroha/tree/master.svg?style=svg)](https://circleci.com/gh/hyperledger/iroha/tree/master)\n[![codecov](https://codecov.io/gh/hyperledger/iroha/branch/master/graph/badge.svg)](https://codecov.io/gh/hyperledger/iroha)\n+[![Throughput Graph](https://graphs.waffle.io/hyperledger/iroha/throughput.svg)](https://waffle.io/hyperledger/iroha/metrics/throughput)\n+\nBlockchain platform Hyperledger Iroha is designed for simple creation and management of assets. This is a distributed ledger of transactions.\n<img height=\"300px\" src=\"docs/Iroha_3_sm.png\"\n",
        "org_diff": "diff --git a/README.md b/README.md **Note:** This is a **read-only mirror** of the formal [Gerrit](https://gerrit.hyperledger.org/r/#/admin/projects/cello) repository. Find more details at [Cello Wiki](https://wiki.hyperledger.org/projects/cello).\n-![Cello](docs/imgs/logo.png)\n+![Cello](docs/images/logo.png)\nHyperledger Cello is a blockchain provision and operation system, which helps manage blockchain networks in an efficient way.\n@@ -21,7 +21,7 @@ Using Cello, everyone can easily:\nA typical usage scenario is illustrated as:\n-![Typical Scenario](docs/imgs/scenario.png)\n+![Typical Scenario](docs/images/scenario.png)\n## Quick Start\n"
    },
    {
        "sim_msg": "apparently didnt save everything from the previous commit",
        "sim_diff": "diff --git a/pacu.py b/pacu.py @@ -1163,12 +1163,12 @@ class Main:\nreturn session, global_data_in_all_frames, local_data_in_all_frames\n- def get_boto3_client(self, service, region=None, user_agent=None):\n+ def get_boto3_client(self, service, region=None, user_agent=None, socks_port=8001):\nsession = self.get_active_session()\nproxy_settings = self.get_proxy_settings()\nboto_config = botocore.config.Config(\n- proxies={'https': 'socks5://127.0.0.1:8001', 'http': 'socks5://127.0.0.1:8001'} if not proxy_settings.target_agent == [] else None,\n+ proxies={'https': f'socks5://127.0.0.1:{socks_port}', 'http': f'socks5://127.0.0.1:{socks_port}'} if not proxy_settings.target_agent == [] else None,\nuser_agent=user_agent\n)\n@@ -1181,12 +1181,12 @@ class Main:\nconfig=boto_config\n)\n- def get_boto3_resource(self, service, region=None, user_agent=None):\n+ def get_boto3_resource(self, service, region=None, user_agent=None, socks_port=8001):\nsession = self.get_active_session()\nproxy_settings = self.get_proxy_settings()\nboto_config = botocore.config.Config(\n- proxies={'https': 'socks5://127.0.0.1:8001', 'http': 'socks5://127.0.0.1:8001'} if not proxy_settings.target_agent == [] else None,\n+ proxies={'https': f'socks5://127.0.0.1:{socks_port}', 'http': f'socks5://127.0.0.1:{socks_port}'} if not proxy_settings.target_agent == [] else None,\nuser_agent=user_agent\n)\n",
        "org_diff": "diff --git a/sc2/proxy.py b/sc2/proxy.py @@ -170,7 +170,7 @@ class Proxy:\nwhile self.result is None:\nbot_alive = bot_process and bot_process.poll() is None\n- sc2_alive = self.controller.running and self.controller._process._process.poll() is None\n+ sc2_alive = self.controller.running\nif self.done or not (bot_alive and sc2_alive):\nlogger.info(\nf\"Proxy({self.port}): {self.player.name} died, \"\n"
    },
    {
        "sim_msg": "Fix hitscan lasers\nEntityCoordinates moment",
        "sim_diff": "diff --git a/Content.Server/GameObjects/Components/Weapon/Ranged/Barrels/ServerRangedBarrelComponent.cs b/Content.Server/GameObjects/Components/Weapon/Ranged/Barrels/ServerRangedBarrelComponent.cs @@ -426,20 +426,18 @@ private List<Angle> Linspace(double start, double end, int intervals)\n/// </summary>\nprivate void FireHitscan(IEntity shooter, HitscanComponent hitscan, Angle angle)\n{\n- var ray = new CollisionRay(Owner.Transform.Coordinates.Position, angle.ToVec(), (int) hitscan.CollisionMask);\n+ var ray = new CollisionRay(Owner.Transform.Coordinates.ToMapPos(Owner.EntityManager), angle.ToVec(), (int) hitscan.CollisionMask);\nvar physicsManager = IoCManager.Resolve<IPhysicsManager>();\nvar rayCastResults = physicsManager.IntersectRay(Owner.Transform.MapID, ray, hitscan.MaxLength, shooter, false).ToList();\nif (rayCastResults.Count >= 1)\n{\nvar result = rayCastResults[0];\n- var distance = result.HitEntity != null ? result.Distance : hitscan.MaxLength;\n+ var distance = result.Distance;\nhitscan.FireEffects(shooter, distance, angle, result.HitEntity);\n- if (result.HitEntity == null || !result.HitEntity.TryGetComponent(out IDamageableComponent damageable))\n- {\n+ if (!result.HitEntity.TryGetComponent(out IDamageableComponent damageable))\nreturn;\n- }\ndamageable.ChangeDamage(hitscan.DamageType, (int)Math.Round(hitscan.Damage, MidpointRounding.AwayFromZero), false, Owner);\n//I used Math.Round over Convert.toInt32, as toInt32 always rounds to\n",
        "org_diff": "diff --git a/sc2/unit.py b/sc2/unit.py @@ -397,6 +397,15 @@ class Unit:\n<= (self.radius + target.radius + unit_attack_range + bonus_distance) ** 2\n)\n+ def target_melee_in_range(self, target: \"Unit\", bonus_distance: Union[int, float] = 0) -> bool:\n+ \"\"\" Checks if the target is in melee range.\n+ Includes the target's radius when calculating distance to target.\n+ This function is ideal for checking if an scv is in range to repair a target. \"\"\"\n+ return (\n+ self._bot_object._distance_squared_unit_to_unit(self, target)\n+ <= (self.radius + target.radius + bonus_distance) ** 2\n+ )\n+\ndef in_ability_cast_range(\nself, ability_id: AbilityId, target: Union[\"Unit\", Point2], bonus_distance: float = 0\n) -> bool:\n"
    },
    {
        "sim_msg": "Fix github actions issue with missing /etc/docker/daemon.json file.",
        "sim_diff": "diff --git a/.github/workflows/tests.yml b/.github/workflows/tests.yml @@ -76,8 +76,13 @@ jobs:\n# Allow us to use the \"--squash\" option below\n- name: Turn on Docker Experimental Features\nrun: |\n+ if [[ -f /etc/docker/daemon.json ]]; then\nsudo sed -ri 's/\\s*}\\s*$/, \"experimental\": true }/' /etc/docker/daemon.json\n+ else\n+ echo $'{\\n \"experimental\": true\\n}' | sudo tee /etc/docker/daemon.json\n+ fi\nsudo systemctl restart docker\n+ echo Docker Experimental Features: $(docker version -f '{{.Server.Experimental}}')\n- uses: actions/cache@v1\nwith:\npath: ~/.m2/repository\n",
        "org_diff": "diff --git a/.github/workflows/docker-ci.yml b/.github/workflows/docker-ci.yml @@ -29,6 +29,12 @@ jobs:\nsteps:\n- uses: actions/checkout@v1\n+ - name: Enable experimental docker features\n+ run: |\n+ sudo cat /etc/docker/daemon.json\n+ echo $'{\\n \"experimental\": true\\n}' | sudo tee /etc/docker/daemon.json\n+ sudo systemctl restart docker.service\n+\n- name: Run shell script\nrun: |\nexport VERSION_NUMBER=${{ env.VERSION_NUMBER }}\n"
    },
    {
        "sim_msg": "most read params are already defined in the expander",
        "sim_diff": "diff --git a/pycket/prims/parameter.py b/pycket/prims/parameter.py @@ -31,7 +31,7 @@ def scheme_extend_parameterization(args):\nconfig = args[0]\nargc = len(args)\n- if argc < 2 or not isinstance(config, values_parameter.W_Parameterization) or argc % 2 != 1:\n+ if argc < 2 or argc % 2 != 1: # or not isinstance(config, values_parameter.W_Parameterization):\nreturn config\nparser = ArgParser(\"extend-parameterization\", args, start_at=1)\n@@ -59,7 +59,6 @@ def call_with_extended_paramz(f, args, keys, vals, env, cont):\nparamz_new = paramz.extend(keys, vals)\nreturn call_with_parameterization(f, args, paramz_new, env, cont)\n-expose_val(\"paramz\", values_parameter.W_Parameter(values.w_false))\nexpose_val(\"exnh\", values_parameter.W_Parameter(values.w_false))\nexpose_val(\"load-on-demand-enabled\", values_parameter.W_Parameter(values.w_true))\nexpose_val(\"read-on-demand-source\", values_parameter.W_Parameter(values.w_true))\n@@ -68,6 +67,8 @@ expose_val(\"print-mpair-curly-braces\", values_parameter.W_Parameter(values.w_fal\nexpose_val(\"print-pair-curly-braces\", values_parameter.W_Parameter(values.w_false))\nexpose_val(\"error-print-source-location\", values_parameter.W_Parameter(values.w_true))\nexpose_val(\"current-read-interaction\", values_parameter.W_Parameter(values.w_false))\n+expose_val(\"read-accept-bar-quote\", values_parameter.W_Parameter(values.w_false))\n+expose_val(\"read-accept-compiled\", values_parameter.W_Parameter(values.w_true))\nREAD_PARAMS = \"\"\"\nread-square-bracket-as-paren\n@@ -75,7 +76,6 @@ read-curly-brace-as-paren\nread-square-bracket-with-tag\nread-curly-brace-with-tag\nread-accept-box\n-read-accept-compiled\nread-accept-bar-quote\nread-accept-graph\nread-decimal-as-inexact\n@@ -87,6 +87,6 @@ read-accept-reader\nread-accept-lang\n\"\"\"\n-for name in READ_PARAMS.split():\n- expose_val(name, values_parameter.W_Parameter(values.w_false))\n+# for name in READ_PARAMS.split():\n+# expose_val(name, values_parameter.W_Parameter(values.w_false))\n",
        "org_diff": "diff --git a/node_manager_daemon_fkie/src/node_manager_daemon_fkie/settings.py b/node_manager_daemon_fkie/src/node_manager_daemon_fkie/settings.py @@ -125,9 +125,8 @@ class Settings:\nresult = value\nelse:\nresult = value\n- except Exception as _exc:\n- pass\n- # print exc\n+ except Exception as exc:\n+ rospy.logdebug(\"Cant't get parameter '%s', full parameter path: '%s'\" % (utf8(exc), param_name))\nreturn result\ndef set_param(self, param_name, value, tag=':value'):\n@@ -155,8 +154,8 @@ class Settings:\n# create new parameter entry\ncfg_item[pname] = {val_tag: value}\nself.save()\n- except Exception as _exc:\n- pass\n+ except Exception as exc:\n+ rospy.logdebug(\"Cant't set parameter '%s', full parameter path: '%s'\" % (utf8(exc), param_name))\ndef reload(self):\n'''\n"
    },
    {
        "sim_msg": "Remove file delay system.\nIt didn't work and was replaced by just spamming mouse updates.\nIt caused guns to fire twice on accident.",
        "sim_diff": "diff --git a/Content.Server/GameObjects/Components/Weapon/Ranged/RangedWeapon.cs b/Content.Server/GameObjects/Components/Weapon/Ranged/RangedWeapon.cs using Content.Server.GameObjects.Components.Mobs;\nusing Content.Server.GameObjects.EntitySystems;\nusing Content.Shared.GameObjects.Components.Weapons.Ranged;\n-using Robust.Server.Interfaces.Player;\nusing Robust.Shared.GameObjects;\nusing Robust.Shared.Interfaces.GameObjects;\nusing Robust.Shared.Interfaces.Network;\nusing Robust.Shared.IoC;\nusing Robust.Shared.Map;\nusing Robust.Shared.Players;\n-using Robust.Shared.Timers;\nnamespace Content.Server.GameObjects.Components.Weapon.Ranged\n{\n@@ -23,8 +21,6 @@ public sealed class RangedWeaponComponent : SharedRangedWeaponComponent\npublic Func<IEntity, bool> UserCanFireHandler;\npublic Action<IEntity, GridCoordinates> FireHandler;\n- private const int MaxFireDelayAttempts = 2;\n-\nprivate bool WeaponCanFire()\n{\nreturn WeaponCanFireHandler == null || WeaponCanFireHandler();\n@@ -59,12 +55,12 @@ public override void HandleNetworkMessage(ComponentMessage message, INetChannel\nreturn;\n}\n- _tryFire(user, msg.Target, 0);\n+ _tryFire(user, msg.Target);\nbreak;\n}\n}\n- private void _tryFire(IEntity user, GridCoordinates coordinates, int attemptCount)\n+ private void _tryFire(IEntity user, GridCoordinates coordinates)\n{\nif (!user.TryGetComponent(out HandsComponent hands) || hands.GetActiveHand?.Owner != Owner)\n{\n@@ -88,13 +84,6 @@ private void _tryFire(IEntity user, GridCoordinates coordinates, int attemptCoun\nvar span = curTime - _lastFireTime;\nif (span.TotalSeconds < 1 / FireRate)\n{\n- if (attemptCount >= MaxFireDelayAttempts)\n- {\n- return;\n- }\n-\n- Timer.Spawn(TimeSpan.FromSeconds(1 / FireRate) - span,\n- () => _tryFire(user, coordinates, attemptCount + 1));\nreturn;\n}\n",
        "org_diff": "diff --git a/sc2/unit.py b/sc2/unit.py @@ -1191,7 +1191,7 @@ class Unit:\n@property\ndef weapon_ready(self) -> bool:\n\"\"\" Checks if the weapon is ready to be fired. \"\"\"\n- return self.weapon_cooldown < self._bot_object.client.game_step\n+ return self.weapon_cooldown == 0\n@property\ndef engaged_target_tag(self) -> int:\n"
    },
    {
        "sim_msg": "Print BE_VERSION and APP_VERSION_STRING",
        "sim_diff": "diff --git a/ml/src/endpoints.py b/ml/src/endpoints.py +import os\nfrom http import HTTPStatus\nfrom flask import Response\n@@ -27,7 +28,9 @@ def endpoints(app):\ndef status_get():\nreturn jsonify(status='OK',\n_v='1.0.1',\n- _FORCE_FAIL_E2E_TESTS=ENV.FORCE_FAIL_E2E_TESTS)\n+ _FORCE_FAIL_E2E_TESTS=ENV.FORCE_FAIL_E2E_TESTS,\n+ _APP_VERSION_STRING=os.getenv('APP_VERSION_STRING', ''),\n+ _BE_VERSION=os.getenv('BE_VERSION', ''))\n@app.route('/scan_faces', methods=['POST'])\n@needs_attached_file\n",
        "org_diff": "diff --git a/rasa_core_sdk/endpoint.py b/rasa_core_sdk/endpoint.py @@ -11,7 +11,7 @@ from flask_cors import CORS, cross_origin\nfrom gevent.pywsgi import WSGIServer\nfrom rasa_core_sdk.executor import ActionExecutor\n-from rasa_core.utils import ActionExecutionError\n+from rasa_core.actions.action import ActionExecutionError\nDEFAULT_SERVER_PORT = 5055\n"
    },
    {
        "sim_msg": "Add a default value for INVENTREE_WEB_ADDR",
        "sim_diff": "diff --git a/docker/Dockerfile b/docker/Dockerfile @@ -35,7 +35,8 @@ ENV INVENTREE_SECRET_KEY_FILE=\"${INVENTREE_DATA_DIR}/secret_key.txt\"\nENV INVENTREE_GUNICORN_WORKERS=\"4\"\nENV INVENTREE_BACKGROUND_WORKERS=\"4\"\n-# Default web server port is 8000\n+# Default web server address:port\n+ENV INVENTREE_WEB_ADDR=\"0.0.0.0\"\nENV INVENTREE_WEB_PORT=\"8000\"\nLABEL org.label-schema.schema-version=\"1.0\" \\\n",
        "org_diff": "diff --git a/docs/setup_worker_docker.md b/docs/setup_worker_docker.md @@ -79,4 +79,10 @@ $ docker run -d -v /var/run/docker.sock:/var/run/docker.sock -p 127.0.0.1:2375:2\n$ docker -H 127.0.0.1:2375 info\n```\n+And users can use `0.0.0.0` to replace `127.0.0.1` to make sure Master can reach Worker Node through this port, as Ubuntu.\n+\n+```bash\n+$ docker run -d -v /var/run/docker.sock:/var/run/docker.sock -p 0.0.0.0:2375:2375 bobrik/socat TCP-LISTEN:2375,fork UNIX-CONNECT:/var/run/docker.sock\n+```\n+\n<a rel=\"license\" href=\"http://creativecommons.org/licenses/by/4.0/\"><img alt=\"Creative Commons License\" style=\"border-width:0\" src=\"https://i.creativecommons.org/l/by/4.0/88x31.png\" /></a><br />This work is licensed under a <a rel=\"license\" href=\"http://creativecommons.org/licenses/by/4.0/\">Creative Commons Attribution 4.0 International License</a>.\n"
    },
    {
        "sim_msg": "taking out some logs",
        "sim_diff": "diff --git a/routes/index.js b/routes/index.js @@ -49,15 +49,11 @@ module.exports = function(server) {\nserver.get(/.*/, function(req, res, next) {\nvar current_hash = config.engine.get('version');\nvar url_arr = req.url.split('/');\n- console.log(current_hash);\n- console.log(url_arr[1])\nif(url_arr[1] != current_hash){\n- console.log('but do I go here');\nurl_arr.splice(1,0, current_hash);\nvar newPath = url_arr.join('/');\nres.redirect(newPath , next);\n} else {\n- console.log(next());\nnext();\n}\n},\n",
        "org_diff": "diff --git a/routes/cube_routes.js b/routes/cube_routes.js @@ -1603,7 +1603,10 @@ router.post('/startsealed/:id', body('packs').toInt({ min: 1, max: 16 }), body('\nconst numCards = packs * cards;\n- const cube = await Cube.findOne(buildIdQuery(req.params.id), '_id name draft_formats card_count type cards owner');\n+ const cube = await Cube.findOne(\n+ buildIdQuery(req.params.id),\n+ '_id name draft_formats card_count type cards owner numDecks',\n+ );\nif (!cube) {\nreq.flash('danger', 'Cube not found');\n"
    },
    {
        "sim_msg": "additionalProperties supports multiple possible types",
        "sim_diff": "diff --git a/bin/definition/schema.js b/bin/definition/schema.js @@ -195,10 +195,9 @@ Object.assign(Schema.properties, {\n}\n}\n},\n- items: {\n- allowed: ({parent}) => parent.value.type === 'array',\n- additionalProperties: Schema\n- },\n+ items: Object.assign({}, Schema, {\n+ allowed: ({parent}) => parent.value.type === 'array'\n+ }),\nallOf: {\nallowed: ({parent}) => parent.value.type === 'object',\nitems: Schema\n@@ -209,6 +208,8 @@ Object.assign(Schema.properties, {\n},\nadditionalProperties: {\nallowed: ({parent}) => parent.value.type === 'object',\n+ type: ['boolean', 'object'],\n+ default: false,\nproperties: Schema\n},\ndiscriminator: {\n",
        "org_diff": "diff --git a/models/cube.js b/models/cube.js @@ -17,11 +17,13 @@ let cubeSchema = mongoose.Schema({\n},\nowner: {\ntype: String,\n- required: true\n+ required: true,\n+ index: true\n},\nisListed: {\ntype: Boolean,\n- default: true\n+ default: true,\n+ index: true\n},\nprivatePrices: {\ntype: Boolean,\n@@ -29,7 +31,8 @@ let cubeSchema = mongoose.Schema({\n},\nisFeatured: {\ntype: Boolean,\n- default: false\n+ default: false,\n+ index: true\n},\ncards: [{\ntags: [String],\n@@ -62,14 +65,4 @@ let cubeSchema = mongoose.Schema({\ndraft_formats: {}\n});\n-// Indexes for home page queries\n-cubeSchema.index({\n- isFeatured: 1,\n-});\n-\n-cubeSchema.index({\n- owner: 1,\n- isListed: 1,\n-});\n-\nlet Cube = module.exports = mongoose.model('Cube', cubeSchema)\n"
    },
    {
        "sim_msg": "Make the speed adjustment containers ordered decreasingly by their control point start time.",
        "sim_diff": "diff --git a/osu.Game/Rulesets/UI/ScrollingPlayfield.cs b/osu.Game/Rulesets/UI/ScrollingPlayfield.cs @@ -151,7 +151,7 @@ public class ScrollingHitObjectContainer : HitObjectContainer\n/// </summary>\npublic readonly BindableBool Reversed = new BindableBool();\n- private readonly Container<SpeedAdjustmentContainer> speedAdjustments;\n+ private readonly SortedContainer speedAdjustments;\npublic IReadOnlyList<SpeedAdjustmentContainer> SpeedAdjustments => speedAdjustments;\nprivate readonly SpeedAdjustmentContainer defaultSpeedAdjustment;\n@@ -166,7 +166,7 @@ public ScrollingHitObjectContainer(Axes scrollingAxes)\n{\nthis.scrollingAxes = scrollingAxes;\n- AddInternal(speedAdjustments = new Container<SpeedAdjustmentContainer> { RelativeSizeAxes = Axes.Both });\n+ AddInternal(speedAdjustments = new SortedContainer { RelativeSizeAxes = Axes.Both });\n// Default speed adjustment\nAddSpeedAdjustment(defaultSpeedAdjustment = new SpeedAdjustmentContainer(new MultiplierControlPoint(0)));\n@@ -257,7 +257,21 @@ public override void Add(DrawableHitObject hitObject)\n/// </summary>\n/// <param name=\"time\">The time to find the active <see cref=\"SpeedAdjustmentContainer\"/> at.</param>\n/// <returns>The <see cref=\"SpeedAdjustmentContainer\"/> active at <paramref name=\"time\"/>. Null if there are no speed adjustments.</returns>\n- private SpeedAdjustmentContainer adjustmentContainerAt(double time) => speedAdjustments.LastOrDefault(c => c.CanContain(time)) ?? defaultSpeedAdjustment;\n+ private SpeedAdjustmentContainer adjustmentContainerAt(double time) => speedAdjustments.First(c => c.CanContain(time)) ?? defaultSpeedAdjustment;\n+\n+ private class SortedContainer : Container<SpeedAdjustmentContainer>\n+ {\n+ protected override int Compare(Drawable x, Drawable y)\n+ {\n+ var sX = (SpeedAdjustmentContainer)x;\n+ var sY = (SpeedAdjustmentContainer)y;\n+\n+ int result = sY.ControlPoint.StartTime.CompareTo(sX.ControlPoint.StartTime);\n+ if (result != 0)\n+ return result;\n+ return base.Compare(x, y);\n+ }\n+ }\n}\n}\n}\n",
        "org_diff": "diff --git a/sc2/unit.py b/sc2/unit.py @@ -357,6 +357,14 @@ class Unit:\nspeed *= SPEED_ALTERING_BUFFS.get(buff, 1)\nreturn speed\n+ @property\n+ def distance_per_step(self) -> float:\n+ return (self.real_speed/22.4) * self._bot_object.client.game_step\n+\n+ @property\n+ def distance_to_weapon_ready(self) -> float:\n+ return (self.real_speed / 22.4) * self.weapon_cooldown\n+\n@property\ndef is_mineral_field(self) -> bool:\n\"\"\" Checks if the unit is a mineral field. \"\"\"\n@@ -1177,6 +1185,10 @@ class Unit:\nreturn self._proto.weapon_cooldown\nreturn -1\n+ @property\n+ def weapon_ready(self) -> bool:\n+ return self.weapon_cooldown < self._bot_object.client.game_step\n+\n@property\ndef engaged_target_tag(self) -> int:\n# TODO What does this do?\n"
    },
    {
        "sim_msg": "Added note about ansible",
        "sim_diff": "diff --git a/README.md b/README.md @@ -217,6 +217,16 @@ Below are instructions for building, testing and developing.\nThe local development process is a bit rough around the edges at the moment but can be improved in future.\n+## Ansible\n+\n+[Ansible](https://www.ansible.com/) is required to deploy and set up the project. The easiest way to install is to use the Python package manager, `pip`:\n+\n+```\n+sudo pip install -U ansible\n+```\n+\n+Make sure you have version >2.6\n+\n## Networking\n### Set-up\n",
        "org_diff": "diff --git a/src/agent/ansible/README.md b/src/agent/ansible/README.md @@ -33,12 +33,13 @@ need to do should be identical.\nsudo apt-get update\nsudo apt-get install python-dev python-pip libssl-dev libffi-dev -y\nsudo pip install --upgrade pip\n- sudo pip install six==1.10.0\n- sudo pip install ansible==2.3.0.0\n+ sudo pip install 'ansible>=2.3.0.0'\ngit clone https://gerrit.hyperledger.org/r/cello\nAll the following work assumed that you are in cello/src/agent/ansible directory\n+Supported ansible versions are 2.3.0.0 or greater.\n+\n## Deploy hyperledger fabric onto different environment\n### On VirtualBox::\n"
    },
    {
        "sim_msg": "Fix UserCard propTypes",
        "sim_diff": "diff --git a/src/components/UserCard.js b/src/components/UserCard.js @@ -5,27 +5,22 @@ import FollowButton from '../widgets/FollowButton';\nimport Avatar from '../components/Avatar';\nimport './UserCard.less';\n-const UserCard = ({ username, alt }) =>\n- (<div className=\"UserCard\">\n+const UserCard = ({ username, alt }) => (\n+ <div className=\"UserCard\">\n<div className=\"UserCard__left\">\n<Link to={`/@${username}`}>\n<Avatar username={username} size={40} />\n</Link>\n- <Link to={`/@${username}`}>\n- {username}\n- </Link>\n- {alt &&\n- <span className=\"UserCard__alt\">\n- {alt}\n- </span>\n- }\n+ <Link to={`/@${username}`}>{username}</Link>\n+ {alt && <span className=\"UserCard__alt\">{alt}</span>}\n</div>\n<FollowButton username={username} />\n- </div>);\n+ </div>\n+);\nUserCard.propTypes = {\nusername: PropTypes.string.isRequired,\n- alt: PropTypes.oneOf(PropTypes.string, PropTypes.bool),\n+ alt: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n};\nUserCard.defaultProps = {\n",
        "org_diff": "diff --git a/src/pages/CardPage.js b/src/pages/CardPage.js @@ -46,7 +46,7 @@ import Tab from 'components/Tab';\nimport { cardPrice, cardFoilPrice, cardPriceEur, cardTix, cardElo } from 'utils/Card';\nimport { getTCGLink, getCardMarketLink, getCardHoarderLink, getCardKingdomLink } from 'utils/Affiliate';\n-import { CheckIcon, ClippyIcon } from '@primer/octicons-react';\n+import { ArrowSwitchIcon, CheckIcon, ClippyIcon } from '@primer/octicons-react';\nconst AutocardA = withAutocard('a');\nconst AddModal = withModal(Button, AddToCubeModal);\n@@ -250,6 +250,7 @@ const CardPage = ({ user, card, data, versions, related, cubes, loginCallback })\n<ImageFallback className=\"w-100\" src={imageUsed} fallbackSrc=\"/content/default_card.png\" alt={card.name} />\n{card.image_flip && (\n<Button\n+ className=\"mt-1\"\ncolor=\"success\"\noutline\nblock\n@@ -261,7 +262,7 @@ const CardPage = ({ user, card, data, versions, related, cubes, loginCallback })\n}\n}}\n>\n- Flip\n+ <ArrowSwitchIcon size={16} /> Transform\n</Button>\n)}\n<CardBody className=\"breakdown p-1\">\n"
    },
    {
        "sim_msg": "Fix script injection in 'unknown' parameter",
        "sim_diff": "diff --git a/service/routes/api.js b/service/routes/api.js @@ -64,7 +64,7 @@ router.get(/^\\/v2\\/polyfill(\\.\\w+)(\\.\\w+)?/, (req, res) => {\nstream: true\n};\nif (req.query.unknown) {\n- params.unknown = req.query.unknown;\n+ params.unknown = (req.query.unknown === 'polyfill') ? 'polyfill' : 'ignore';\n}\nif (uaString) {\nparams.uaString = uaString;\n",
        "org_diff": "diff --git a/routes/cube_routes.js b/routes/cube_routes.js @@ -4289,7 +4289,7 @@ router.get(\n'/api/date_updated/:id',\nutil.wrapAsyncApi(async (req, res) => {\nconst { id } = req.params;\n- const result = await Cube.findOne(buildIdQuery(id), { date_updated: 1, _id: 0 }).lean();\n+ const result = await Cube.findOne(buildIdQuery(id), 'date_updated').lean();\nif (!result) {\nreturn res.status(404).send({\nsuccess: 'false',\n"
    },
    {
        "sim_msg": "Add CopyText in Explorer Result",
        "sim_diff": "diff --git a/Plugins/Flow.Launcher.Plugin.Explorer/Search/ResultManager.cs b/Plugins/Flow.Launcher.Plugin.Explorer/Search/ResultManager.cs @@ -58,6 +58,7 @@ namespace Flow.Launcher.Plugin.Explorer.Search\nSubTitle = Path.GetDirectoryName(path),\nAutoCompleteText = GetPathWithActionKeyword(path, ResultType.Folder),\nTitleHighlightData = StringMatcher.FuzzySearch(query.Search, title).MatchData,\n+ CopyText = path,\nAction = c =>\n{\nif (c.SpecialKeyState.CtrlPressed || (!Settings.PathSearchKeywordEnabled && !Settings.SearchActionKeywordEnabled))\n@@ -189,6 +190,7 @@ namespace Flow.Launcher.Plugin.Explorer.Search\nAutoCompleteText = GetPathWithActionKeyword(path, ResultType.Folder),\nIcoPath = path,\nScore = 500,\n+ CopyText = path,\nAction = _ =>\n{\nContext.API.OpenDirectory(path);\n@@ -213,6 +215,7 @@ namespace Flow.Launcher.Plugin.Explorer.Search\nAutoCompleteText = GetPathWithActionKeyword(filePath, ResultType.File),\nTitleHighlightData = StringMatcher.FuzzySearch(query.Search, Path.GetFileName(filePath)).MatchData,\nScore = score,\n+ CopyText = filePath,\nAction = c =>\n{\ntry\n",
        "org_diff": "diff --git a/fkie_node_manager/src/fkie_node_manager/editor/text_search_thread.py b/fkie_node_manager/src/fkie_node_manager/editor/text_search_thread.py @@ -140,7 +140,7 @@ class TextSearchThread(QObject, threading.Thread):\nnew_dict = dict(args)\nnew_dict.update(include_args)\n# test search string for 'name=' and skip search in not launch files\n- if self._only_launch or inc_path.endswith('.launch') or path.find('.launch.') > 0:\n+ if not self._only_launch or inc_path.endswith('.launch') or path.find('.launch.') > 0:\nself.search(search_text, inc_path, recursive, new_dict, count + 1)\nif self._path == path and self._found == 0:\nself.warning_signal.emit(\"not found '%s' in %s (%srecursive)\" % (search_text, path, '' if recursive else 'not '))\n"
    },
    {
        "sim_msg": "Updated metatitle, added line between icons",
        "sim_diff": "diff --git a/packages/component-library/src/LandingPage/LandingPage.js b/packages/component-library/src/LandingPage/LandingPage.js @@ -24,6 +24,15 @@ const card = css`\nmargin: 6px 0px;\ntransition: all .3s ease-in-out;\n+ :not(:last-child):before {\n+ content: '';\n+ height: 40px;\n+ border-right: 1px solid #ec485b;\n+ top: 82%;\n+ left: 50px;\n+ position: absolute;\n+ }\n+\n:hover {\ntransform: translateY(-3px);\ncursor: pointer;\n",
        "org_diff": "diff --git a/src/pages/LandingPage.js b/src/pages/LandingPage.js @@ -5,8 +5,12 @@ import { Row, Col, Button } from 'reactstrap';\nimport RenderToRoot from 'utils/RenderToRoot';\nimport Footer from 'layouts/Footer';\n+import LoginModal from 'components/LoginModal';\n+import withModal from 'components/WithModal';\nimport CardSearchBar from 'components/CardSearchBar';\n+const LoginModalButton = withModal(Button, LoginModal);\n+\nconst LandingPage = ({ numusers, numcubes, numdrafts }) => {\nreturn (\n<div className=\"flex-container flex-vertical viewport\">\n@@ -29,12 +33,12 @@ const LandingPage = ({ numusers, numcubes, numdrafts }) => {\n<strong>{numdrafts}</strong>\n{' Completed Drafts'}\n</h5>\n- <Button className=\"landing-btn my-3\" color=\"success\">\n+ <Button href=\"/user/register\" className=\"landing-btn my-3\" color=\"success\">\nSign Up\n</Button>\n- <Button className=\"landing-btn mb-3\" color=\"success\" outline>\n+ <LoginModalButton className=\"landing-btn mb-3\" color=\"success\" outline>\nLogin\n- </Button>\n+ </LoginModalButton>\n</div>\n<Footer />\n</Col>\n"
    },
    {
        "sim_msg": "taking out some logs",
        "sim_diff": "diff --git a/routes/index.js b/routes/index.js @@ -49,15 +49,11 @@ module.exports = function(server) {\nserver.get(/.*/, function(req, res, next) {\nvar current_hash = config.engine.get('version');\nvar url_arr = req.url.split('/');\n- console.log(current_hash);\n- console.log(url_arr[1])\nif(url_arr[1] != current_hash){\n- console.log('but do I go here');\nurl_arr.splice(1,0, current_hash);\nvar newPath = url_arr.join('/');\nres.redirect(newPath , next);\n} else {\n- console.log(next());\nnext();\n}\n},\n",
        "org_diff": "diff --git a/routes/cube_routes.js b/routes/cube_routes.js @@ -1642,10 +1642,14 @@ router.post('/editoverview/:id', ensureAuth, function(req, res) {\nreq.flash('danger', 'Cube name should not use profanity.');\nres.redirect('/cube/overview/' + req.params.id);\n} else {\n+ let urlAliasMaxLength = 100;\nif (req.body.urlAlias && cube.urlAlias !== req.body.urlAlias) {\nif (!req.body.urlAlias.match(/^[0-9a-zA-Z_]*$/)) {\nreq.flash('danger', 'Custom URL must contain only alphanumeric characters or underscores.');\nres.redirect('/cube/overview/' + req.params.id);\n+ } else if (req.body.urlAlias.length > urlAliasMaxLength) {\n+ req.flash('danger', 'Custom URL may not be longer than ' + urlAliasMaxLength + ' characters.');\n+ res.redirect('/cube/overview/' + req.params.id);\n} else {\nif (util.has_profanity(req.body.urlAlias)) {\nreq.flash('danger', 'Custom URL may not contain profanity.');\n"
    },
    {
        "sim_msg": "refactor checkbox change handler",
        "sim_diff": "diff --git a/src/screens/FilterModal/component.js b/src/screens/FilterModal/component.js @@ -30,6 +30,17 @@ type Props = {\nonCancel: () => void\n};\n+const toggleTagFilter = (\n+ selectedValues: Set<string> | Set<Area>,\n+ sectionValue: string\n+) => {\n+ const values: Set<string> = new Set([...selectedValues]);\n+ if (!values.delete(sectionValue)) {\n+ values.add(sectionValue);\n+ }\n+ return values;\n+};\n+\nclass FilterModal extends PureComponent<Props> {\ncomponentDidMount() {\nconst { navigation, onCancel } = this.props;\n@@ -44,27 +55,24 @@ class FilterModal extends PureComponent<Props> {\nremove: () => void\n};\n- toggleTagFilter = (\n- selectedValues: Set<string> | Set<Area>,\n- sectionValue: string\n- ) => {\n- const values: Set<string> = new Set([...selectedValues]);\n- if (!values.delete(sectionValue)) {\n- values.add(sectionValue);\n- }\n- return values;\n- };\n-\nclearTagFilters = () =>\nthis.props.onChange(\nObject.keys(tags).reduce((acc, key) => ({ ...acc, [key]: new Set() }), {})\n);\n+ handleCheckboxChange = (sectionName: string, sectionValue: string) => {\n+ this.props.onChange({\n+ [sectionName]: toggleTagFilter(\n+ this.props.eventFilters[sectionName],\n+ sectionValue\n+ )\n+ });\n+ };\n+\nrender() {\nconst {\napplyButtonText,\nonApply,\n- onChange,\neventFilters,\nnavigation,\nnumEventsSelected,\n@@ -99,14 +107,9 @@ class FilterModal extends PureComponent<Props> {\ntags[sectionName].map(sectionValue => (\n<CheckBox\nkey={sectionValue}\n- onChange={() => {\n- onChange({\n- [sectionName]: this.toggleTagFilter(\n- eventFilters[sectionName],\n- sectionValue\n- )\n- });\n- }}\n+ onChange={() =>\n+ this.handleCheckboxChange(sectionName, sectionValue)\n+ }\nchecked={eventFilters[sectionName].has(sectionValue)}\n// $FlowFixMe\nlabel={text.tags[sectionValue] || sectionValue}\n",
        "org_diff": "diff --git a/src/components/CubeOverviewModal.js b/src/components/CubeOverviewModal.js @@ -26,13 +26,10 @@ class CubeOverviewModal extends Component {\nconstructor(props) {\nsuper(props);\n- props.cube.descriptionhtml= props.cube.descriptionhtml && props.cube.descriptionhtml !== 'undefined' ? props.cube.descriptionhtml : props.cube.description;\n-\nthis.state = {\nisOpen: false,\ntags: props.cube.tags.map((tag) => ({ id: tag, text: tag })),\ncube: JSON.parse(JSON.stringify(props.cube)),\n- description: props.cube.descriptionhtml,\nimage_dict: {},\n};\n@@ -224,7 +221,6 @@ class CubeOverviewModal extends Component {\nrender() {\nconst { cube, cubeID, tags, isOpen } = this.state;\n- console.log(cube);\nreturn (\n<>\n<a className=\"nav-link\" href=\"#\" onClick={this.open}>\n@@ -372,7 +368,7 @@ class CubeOverviewModal extends Component {\n<h6>Description</h6>\n<TextEntry\nname=\"blog\"\n- value={this.state.cube.descriptionhtml}\n+ value={cube.descriptionhtml && cube.descriptionhtml !== 'undefined' ? cube.descriptionhtml :cube.description}\nonChange={this.handleDescriptionChange}\n/>\n<br />\n"
    },
    {
        "sim_msg": "Changes to deck for stronghold",
        "sim_diff": "diff --git a/server/game/deck.js b/server/game/deck.js @@ -13,11 +13,12 @@ class Deck {\nvar result = {\nconflictDrawCards: [],\ndynastyDrawCards: [],\n- provinceCards: []\n+ provinceCards: [],\n+ stronghold: []\n};\n//conflict\n- this.eachRepeatedCard(this.data.drawCards, cardData => {\n+ this.eachRepeatedCard(this.data.conflictDrawCards, cardData => {\nif(['conflict'].includes(cardData.deck)) {\nvar drawCard = this.createCard(DrawCard, player, cardData);\ndrawCard.location = 'conflict draw deck';\n@@ -26,7 +27,7 @@ class Deck {\n});\n//dynasty\n- this.eachRepeatedCard(this.data.drawCards, cardData => {\n+ this.eachRepeatedCard(this.data.dynastyDrawCards, cardData => {\nif(['dynsaty'].includes(cardData.deck)) {\nvar drawCard = this.createCard(DrawCard, player, cardData);\ndrawCard.location = 'dynasty draw deck';\n@@ -42,18 +43,15 @@ class Deck {\n}\n});\n- if(this.data.stronghold) {\n- result.stronghold = new DrawCard(player, _.extend({\n- code: this.data.stronghold.value,\n- type_code: 'stronghold',\n- stronghold_code: this.data.stronghold.value\n- }, this.data.stronghold));\n- } else {\n- result.stronghold = new DrawCard(player, { type_code: 'stronghold' });\n+ this.eachRepeatedCard(this.data.stronghold, cardData => {\n+ if(cardData.type_code === 'stronghold') {\n+ var strongholdCard = this.createCard(StrongholdCard, player, cardData);\n+ strongholdCard.location = 'stronghold deck';\n+ result.stronghold.push(strongholdCard);\n}\n- result.stronghold.moveTo('stronghold');\n+ });\n- result.allCards = [result.stronghold].concat(result.drawCards).concat(result.provinceCards).concat(result.conflictDrawCards).concat(result.dynastyDrawCards);\n+ result.allCards = [result.stronghold].concat(result.provinceCards).concat(result.conflictDrawCards).concat(result.dynastyDrawCards);\nreturn result;\n}\n",
        "org_diff": "diff --git a/serverjs/updatecards.js b/serverjs/updatecards.js @@ -412,7 +412,7 @@ var specialCaseCardsList = {\"Outlaws' Merriment\":[{\n//the cards below are transform cards that are on here due to the way\n//we currently do not populate the oracle text of transform cards.\n\"Arlinn Kord\":[{\n- tokenId: \"94ed2eca-1579-411d-af6f-c7359c65de30\"\n+ tokenId: \"88452ed7-1065-41c3-94a6-dc41108c45c1\"\n}],\n\"Bloodline Keeper\":[{\ntokenId: \"71496671-f7ba-4014-a895-d70a27979db7\"\n@@ -427,7 +427,7 @@ var specialCaseCardsList = {\"Outlaws' Merriment\":[{\ntokenId: \"11d25bde-a303-4b06-a3e1-4ad642deae58\"\n}],\n\"Garruk Relentless\":[{\n- tokenId: \"94ed2eca-1579-411d-af6f-c7359c65de30\"\n+ tokenId: \"88452ed7-1065-41c3-94a6-dc41108c45c1\"\n},{\ntokenId: \"7a49607c-427a-474c-ad77-60cd05844b3c\"\n}],\n@@ -438,7 +438,7 @@ var specialCaseCardsList = {\"Outlaws' Merriment\":[{\ntokenId: \" 94ed2eca-1579-411d-af6f-c7359c65de30\"\n}],\n\"Huntmaster of the Fells\":[{\n- tokenId: \"94ed2eca-1579-411d-af6f-c7359c65de30\"\n+ tokenId: \"88452ed7-1065-41c3-94a6-dc41108c45c1\"\n}],\n\"Legion's Landing\":[{\ntokenId: \"09293ae7-0629-417b-9eda-9bd3f6d8e118\"\n"
    },
    {
        "sim_msg": "Make variant route param optional",
        "sim_diff": "diff --git a/src/routes.js b/src/routes.js @@ -2,7 +2,7 @@ const routes = require(\"next-routes\")();\nroutes\n.add(\"shopProduct\", \"/shop/:shopSlug/product/:productSlug\", \"product\")\n- .add(\"product\", \"/product/:productSlug/:variantId\", \"product\")\n+ .add(\"product\", \"/product/:productSlug/:variantId?\", \"product\")\n.add(\"shop\", \"/shop/:shopId/:tag\", \"index\")\n.add(\"tag\", \"/tag/:slug\", \"index\");\n",
        "org_diff": "diff --git a/routes/cube_routes.js b/routes/cube_routes.js @@ -881,7 +881,7 @@ router.get('/analysis/:id', async (req, res) => {\naddedTmsp: new Date(),\nimgUrl: undefined,\nfinish: 'Non-foil',\n- details: { ...tokenDetails },\n+ details: { ...(element.tokenId === card.cardID ? {} : tokenDetails) },\n};\n}\n}\n"
    },
    {
        "sim_msg": "don't rely on setup.py being present",
        "sim_diff": "diff --git a/doc/conf.py b/doc/conf.py @@ -879,12 +879,16 @@ for icon, cls in icons.items():\n# -- Dependency info ----------------------------------------------------------\n-strip_chars = '=<>,\"\\''\n-with open(os.path.join('..', 'setup.py'), 'r') as fid:\n- for line in fid:\n- if line.strip().startswith('python_requires='):\n- min_py = line.strip().split('=', maxsplit=1)[1].strip(strip_chars)\n-\n+try:\n+ from importlib.metadata import metadata # new in Python 3.8\n+ min_py = metadata('mne')['Requires-Python']\n+except ModuleNotFoundError:\n+ from pkg_resources import get_distribution\n+ info = get_distribution('mne').get_metadata_lines('PKG-INFO')\n+ for line in info:\n+ if line.strip().startswith('Requires-Python'):\n+ min_py = line.split(':')[1]\n+min_py = min_py.lstrip(' =<>')\nprolog += f'\\n.. |min_python_version| replace:: {min_py}\\n'\n# -- website redirects --------------------------------------------------------\n",
        "org_diff": "diff --git a/fkie_node_manager_daemon/src/fkie_node_manager_daemon/version.py b/fkie_node_manager_daemon/src/fkie_node_manager_daemon/version.py @@ -61,23 +61,23 @@ def detect_version(package):\ntry:\nwith open(\"%s/VERSION\" % pkg_path) as f:\nversion = f.read()\n- version = version.strip()\n+ version = version.strip().decode('utf-8')\nwith open(\"%s/DATE\" % pkg_path) as f:\ndatetag = f.read().split()\nif datetag:\n- date = datetag[0]\n+ date = datetag[0].decode('utf-8')\nexcept Exception as err:\nsys.stderr.write(\"version detection error: %s\" % utf8(err))\nelif os.path.isdir(\"%s/../.git\" % pkg_path):\ntry:\nos.chdir(pkg_path)\nps = SupervisedPopen(['git', 'describe', '--tags', '--dirty', '--always', '--abbrev=8'], stdout=subprocess.PIPE, object_id='get git version')\n- output = ps.stdout.read()\n+ output = ps.stdout.read().decode('utf-8')\nversion = output.strip()\nps = SupervisedPopen(['git', 'show', '-s', '--format=%ci'], stdout=subprocess.PIPE, object_id='get git date')\noutput = ps.stdout.read().split()\nif output:\n- date = output[0]\n+ date = output[0].decode('utf-8')\nexcept Exception as err:\nsys.stderr.write(\"version detection error: %s\" % utf8(err))\nelse:\n"
    },
    {
        "sim_msg": "Add createRelativeUrl method to util.js",
        "sim_diff": "diff --git a/util.js b/util.js @@ -819,6 +819,16 @@ export const proxifyUrl = u => {\nreturn u;\n}\n};\n+export const createRelativeUrl = (u, baseUrl) => {\n+ if (/^(?:[\\.\\/]|([a-z0-9]+):\\/\\/)/i.test(u)) {\n+ return u;\n+ } else {\n+ if (!/([a-z0-9]+):\\/\\//i.test(baseUrl)) {\n+ baseUrl = new URL(baseUrl, window.location.href).href;\n+ }\n+ return new URL(u, baseUrl).href;\n+ }\n+};\nexport const getDropUrl = o => {\nlet u = null;\nif (typeof o?.start_url === 'string') {\n",
        "org_diff": "diff --git a/src/utils/Util.js b/src/utils/Util.js @@ -192,7 +192,7 @@ export function isInternalURL(to) {\nexport function isSamePageURL(to) {\ntry {\n- const url = new URL(to, window.location.origin);\n+ const url = new URL(to, window.location.href);\nreturn (\nurl.hostname === window.location.hostname &&\nurl.pathname === window.location.pathname &&\n"
    },
    {
        "sim_msg": "Adds the ability to save to input data to file\nThis saves real same input as the skeleton tf model to a file.",
        "sim_diff": "diff --git a/bot_manager.py b/bot_manager.py @@ -90,6 +90,10 @@ class BotManager:\nplayer_input.bBoost = controller_input[6]\nplayer_input.bHandbrake = controller_input[7]\n+ if self.save_data and game_tick_packet.gameInfo.bRoundActive and old_time is not 0 and not old_time == current_time:\n+ self.game_file.writelines(str(self.create_input_array(game_tick_packet)) + '\\n')\n+ self.game_file.writelines(str(controller_input) + '\\n')\n+\n# Ratelimit here\nafter = datetime.now()\n# print('Latency of ' + self.name + ': ' + str(after - before))\n@@ -99,5 +103,16 @@ class BotManager:\n# If terminated, send callback\nself.callbackEvent.set()\n-\n-\n+ def create_input_array(self, gameTickPacket):\n+ return [\n+ gameTickPacket.gameball.Location.X,\n+ gameTickPacket.gameball.Location.Y,\n+ gameTickPacket.gamecars[self.index].Location.X,\n+ gameTickPacket.gamecars[self.index].Location.Y,\n+ float(gameTickPacket.gamecars[self.index].Rotation.Pitch),\n+ float(gameTickPacket.gamecars[self.index].Rotation.Yaw),\n+ gameTickPacket.gamecars[enemy_index].Location.X,\n+ gameTickPacket.gamecars[enemy_index].Location.Y,\n+ float(gameTickPacket.gamecars[enemy_index].Rotation.Pitch),\n+ float(gameTickPacket.gamecars[enemy_index].Rotation.Yaw),\n+ ]\n",
        "org_diff": "diff --git a/sc2/bot_ai.py b/sc2/bot_ai.py @@ -78,8 +78,9 @@ class BotAI(DistanceCalculation):\nself.larva_count: int = None\nself.actions: List[UnitCommand] = []\nself.blips: Set[Blip] = set()\n- self._units_previous_map: dict = dict()\n- self._structures_previous_map: dict = dict()\n+ self._unit_tags_seen_this_game: Set[int] = set()\n+ self._units_previous_map: Dict[int, Unit] = dict()\n+ self._structures_previous_map: Dict[int, Unit] = dict()\nself._previous_upgrades: Set[UpgradeId] = set()\n# Internally used to keep track which units received an action in this frame, so that self.train() function does not give the same larva two orders - cleared every frame\nself._unit_tags_received_action: Set[int] = set()\n@@ -1326,7 +1327,8 @@ class BotAI(DistanceCalculation):\nasync def _issue_unit_added_events(self):\nfor unit in self.units:\n- if unit.tag not in self._units_previous_map:\n+ if unit.tag not in self._units_previous_map and unit.tag not in self._unit_tags_seen_this_game:\n+ self._unit_tags_seen_this_game.add(unit.tag)\nawait self.on_unit_created(unit)\nasync def _issue_upgrade_events(self):\n"
    },
    {
        "sim_msg": "Fix animations not playing correctly in test scene due to too many calls to OnPressed",
        "sim_diff": "diff --git a/osu.Game.Rulesets.Osu.Tests/TestSceneGameplayCursor.cs b/osu.Game.Rulesets.Osu.Tests/TestSceneGameplayCursor.cs @@ -69,19 +69,30 @@ private void loadContent()\nprivate class ClickingCursorContainer : OsuCursorContainer\n{\n- protected override void Update()\n- {\n- base.Update();\n+ private bool pressed;\n- double currentTime = Time.Current;\n+ public bool Pressed\n+ {\n+ set\n+ {\n+ if (value == pressed)\n+ return;\n- if (((int)(currentTime / 1000)) % 2 == 0)\n+ pressed = value;\n+ if (value)\nOnPressed(OsuAction.LeftButton);\nelse\nOnReleased(OsuAction.LeftButton);\n}\n}\n+ protected override void Update()\n+ {\n+ base.Update();\n+ Pressed = ((int)(Time.Current / 1000)) % 2 == 0;\n+ }\n+ }\n+\nprivate class MovingCursorInputManager : ManualInputManager\n{\npublic MovingCursorInputManager()\n",
        "org_diff": "diff --git a/sc2/unit.py b/sc2/unit.py @@ -178,6 +178,19 @@ class Unit(object):\n\"\"\" Checks if a geyser has gas remaining (cant build extractors on empty geysers), useful for lategame \"\"\"\nreturn self._proto.vespene_contents > 0\n+ @property\n+ def weapon_cooldown(self):\n+ \"\"\" Returns time in game loops (self.state.game_loop) until the unit can fire again\n+ Usage:\n+ if unit.weapon_cooldown == 0:\n+ await self.do(unit.attack(target))\n+ else:\n+ await self.do(unit.move(retreatPosition))\n+ \"\"\"\n+ if self.can_attack_ground or self.can_attack_air:\n+ return self._proto.weapon_cooldown\n+ return 1000\n+\n@property\ndef can_attack_ground(self):\n# See data_pb2.py line 141 for info on weapon data\n"
    },
    {
        "sim_msg": "add file type icons to each row in table",
        "sim_diff": "diff --git a/qualcoder/manage_files.py b/qualcoder/manage_files.py @@ -90,11 +90,10 @@ class DialogManageFiles(QtWidgets.QDialog):\napp = None\ntext_dialog = None\nheader_labels = []\n- ICON_COLUMN = 0\n- NAME_COLUMN = 1\n- MEMO_COLUMN = 2\n- DATE_COLUMN = 3\n- ID_COLUMN = 4\n+ NAME_COLUMN = 0\n+ MEMO_COLUMN = 1\n+ DATE_COLUMN = 2\n+ ID_COLUMN = 3\ndefault_import_directory = os.path.expanduser(\"~\")\nattribute_names = [] # list of dictionary name:value for additem dialog\nparent_textEdit = None\n@@ -140,7 +139,7 @@ class DialogManageFiles(QtWidgets.QDialog):\nself.source.append({'name': row[0], 'id': row[1], 'fulltext': row[2],\n'mediapath': row[3], 'memo': row[4], 'owner': row[5], 'date': row[6]})\n# attributes\n- self.header_labels = [\" \", _(\"Name\"), _(\"Memo\"), _(\"Date\"), _(\"Id\")]\n+ self.header_labels = [_(\"Name\"), _(\"Memo\"), _(\"Date\"), _(\"Id\")]\nsql = \"select name from attribute_type where caseOrFile='file'\"\ncur.execute(sql)\nresult = cur.fetchall()\n@@ -933,6 +932,25 @@ class DialogManageFiles(QtWidgets.QDialog):\nself.source.remove(item)\nself.fill_table()\n+ def get_icon(self, name):\n+ ''' Get icon to put in table. Helper method for fill_table\n+\n+ parameter: filename\n+\n+ return: QIcon '''\n+\n+ icon_text = QtGui.QIcon(\"GUI/text.png\")\n+ icon_play = QtGui.QIcon(\"GUI/play.png\")\n+ icon_picture = QtGui.QIcon(\"GUI/picture.png\")\n+\n+ suffix = name[-4:].lower()\n+ print(name, \" \", suffix)\n+ if suffix in (\".png\", \".jpg\", \"jpeg\"):\n+ return icon_picture\n+ if suffix in (\".mp4\", \".mov\", \".avi\", \".mkv\", \".mp3\", \".wav\", \".ogg\"):\n+ return icon_play\n+ return icon_text\n+\ndef fill_table(self):\n\"\"\" Reload the file data and Fill the table widget with file data. \"\"\"\n@@ -946,7 +964,9 @@ class DialogManageFiles(QtWidgets.QDialog):\nfor row, data in enumerate(self.source):\nself.ui.tableWidget.insertRow(row)\n+ icon = self.get_icon(data['name'])\nname_item = QtWidgets.QTableWidgetItem(data['name'])\n+ name_item.setIcon(icon)\n#name_item.setFlags(name_item.flags() ^ QtCore.Qt.ItemIsEditable)\nself.ui.tableWidget.setItem(row, self.NAME_COLUMN, name_item)\ndate_item = QtWidgets.QTableWidgetItem(data['date'])\n",
        "org_diff": "diff --git a/node_manager_fkie/src/node_manager_fkie/launch_list_model.py b/node_manager_fkie/src/node_manager_fkie/launch_list_model.py @@ -253,7 +253,7 @@ class LaunchListModel(QStandardItemModel):\nitem = self.itemFromIndex(index)\nprev = '%s\\n' % text if text else ''\ntext = '%sfile://%s' % (prev, item.path)\n- mimeData.setData('text/plain', utf8(text))\n+ mimeData.setData('text/plain', text)\nreturn mimeData\n# %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n"
    },
    {
        "sim_msg": "Eliminate unnecessary copies",
        "sim_diff": "diff --git a/src/scipp/core/operations.py b/src/scipp/core/operations.py @@ -220,6 +220,6 @@ def to(var: Union[_cpp.Variable, _cpp.DataArray], *, unit=None, dtype=None, copy\nconvert_dtype_first = True\nif convert_dtype_first:\n- return to_unit(var.astype(dtype, copy=copy), unit=unit, copy=copy)\n+ return to_unit(var.astype(dtype, copy=copy), unit=unit, copy=False)\nelse:\n- return to_unit(var, unit=unit, copy=copy).astype(dtype, copy=copy)\n+ return to_unit(var, unit=unit, copy=copy).astype(dtype, copy=False)\n",
        "org_diff": "diff --git a/sc2/units.py b/sc2/units.py @@ -103,6 +103,13 @@ class Units(list):\nposition = position.position\nreturn min({unit.position.to2.distance_to(position.to2) for unit in self})\n+ def furthest_distance_to(self, position: Union[Unit, Point2, Point3]) -> Union[int, float]:\n+ \"\"\" Returns the distance between the furthest unit from this group to the target unit \"\"\"\n+ assert self.exists\n+ if isinstance(position, Unit):\n+ position = position.position\n+ return max({unit.position.to2.distance_to(position.to2) for unit in self})\n+\ndef closest_to(self, position: Union[Unit, Point2, Point3]) -> Unit:\nassert self.exists\nif isinstance(position, Unit):\n@@ -110,7 +117,6 @@ class Units(list):\nreturn min(self, key=lambda unit: unit.position.to2.distance_to(position.to2))\ndef furthest_to(self, position: Union[Unit, Point2, Point3]) -> Unit:\n- \"\"\" Returns the distance between the furthest unit from this group to the target unit \"\"\"\nassert self.exists\nif isinstance(position, Unit):\nposition = position.position\n"
    },
    {
        "sim_msg": "Remove 3D model selection",
        "sim_diff": "diff --git a/OpenKh.Game/States/MapState.cs b/OpenKh.Game/States/MapState.cs @@ -436,11 +436,9 @@ namespace OpenKh.Game.States\n_debugType %= 3;\nif (_debugType == 0)\n- DebugUpdatePlaceList();\n+ { }\nelse if (_debugType == 1)\n- {\n-\n- }\n+ DebugUpdatePlaceList();\nelse if (_debugType == 2)\nif (_input.IsCross)\ndebug.State = 0;\n@@ -452,9 +450,9 @@ namespace OpenKh.Game.States\nif (IsDebugMode())\n{\nif (_debugType == 0)\n- DebugDrawPlaceList(debug);\n+ DebugDrawEntities(debug);\nelse if (_debugType == 1)\n- debug.Println(\"PLACEHOLDER\");\n+ DebugDrawPlaceList(debug);\nelse if (_debugType == 2)\ndebug.Println(\"Press X to return to title screen\");\n}\n@@ -491,6 +489,14 @@ namespace OpenKh.Game.States\n}\n}\n+ public void DebugDrawEntities(IDebug debug)\n+ {\n+ foreach (var entity in _objectEntities)\n+ {\n+\n+ }\n+ }\n+\nprivate void DebugDrawPlaceList(IDebug debug)\n{\ndebug.Println(\"MAP SELECTION\");\n",
        "org_diff": "diff --git a/sc2/game_state.py b/sc2/game_state.py @@ -40,7 +40,7 @@ class GameState(object):\nself.creep = PixelMap(observation.observation.raw_data.map_state.creep)\nself.dead_units = {dead_unit_tag for dead_unit_tag in observation.observation.raw_data.event.dead_units} # set of unit tags that died this step - sometimes has multiple entries\n- self.effects = {EffectId(effect) for effect in observation.observation.raw_data.effects} # effects like ravager bile shot, lurker attack, everything in effect_id.py # usage: if RAVAGERCORROSIVEBILECP in self.state.effects: do stuff\n+ self.effects = {effect for effect in observation.observation.raw_data.effects} # effects like ravager bile shot, lurker attack, everything in effect_id.py # usage: if RAVAGERCORROSIVEBILECP.value in self.state.effects: do stuff\nself.upgrades = {UpgradeId(upgrade) for upgrade in observation.observation.raw_data.player.upgrade_ids} # usage: if TERRANINFANTRYWEAPONSLEVEL1 in self.state.upgrades: do stuff\n@property\n"
    },
    {
        "sim_msg": "added to fix of",
        "sim_diff": "diff --git a/src/server/node_services/nodes_monitor.js b/src/server/node_services/nodes_monitor.js @@ -1405,15 +1405,16 @@ class NodesMonitor extends EventEmitter {\n_should_include_drives(mount, os_info, exclude_drives) {\nif (os_info.ostype === 'Windows_NT') {\nlet win_drives = exclude_drives.map(drv => {\n+ let ret = drv;\nif (drv.length === 1) {\n- return drv + ':';\n+ ret = drv + ':';\n} else if (drv[drv.length - 1] === '\\\\') {\n- return drv.slice(0, drv.length - 1);\n+ ret = drv.slice(0, drv.length - 1);\n}\n// win drives are case insensitive;\n- return drv.toLowerCase();\n+ return ret.toLowerCase();\n});\n- return win_drives.indexOf(mount.toLowerCase()) === -1;\n+ return !win_drives.includes(mount.toLowerCase());\n}\nreturn exclude_drives.indexOf(mount) === -1;\n}\n",
        "org_diff": "diff --git a/node_manager_daemon_fkie/src/node_manager_daemon_fkie/monitor/hdd_usage.py b/node_manager_daemon_fkie/src/node_manager_daemon_fkie/monitor/hdd_usage.py @@ -53,6 +53,9 @@ class HddUsage(SensorInterface):\nself._path = settings.param('sysmon/Disk/path', self._path)\ndef check_sensor(self):\n+ diag_level = 0\n+ diag_vals = []\n+ diag_msg = ''\ntry:\nhdd = psutil.disk_usage(self._path)\ndiag_level = 0\n"
    },
    {
        "sim_msg": "more cool options for WolframAlpha",
        "sim_diff": "diff --git a/pajbot/dispatch.py b/pajbot/dispatch.py @@ -93,7 +93,9 @@ class Dispatch:\n'appid': appid,\n'input': message,\n'output': 'json',\n- 'format': 'plaintext'\n+ 'format': 'plaintext',\n+ 'reinterpret': 'true',\n+ 'units': 'metric'\n}\n# location-specific results, such as \"current time\", etc.\n",
        "org_diff": "diff --git a/rasa_core_sdk/__init__.py b/rasa_core_sdk/__init__.py @@ -154,16 +154,19 @@ class Action(object):\n\"\"\"\nExecute the side effects of this action.\nArgs:\n- dispatcher (CollectingDispatcher): the dispatcher which is used to send\n- messages back to the user. Use ``dipatcher.utter_message()``\n- or any other :class:`rasa_core_sdk.executor.CollectingDispatcher` method.\n+ dispatcher (CollectingDispatcher): the dispatcher which is used to\n+ send messages back to the user. Use ``dipatcher.utter_message()``\n+ or any other :class:`rasa_core_sdk.executor.CollectingDispatcher`\n+ method.\ntracker (Tracker): the state tracker for the current\nuser. You can access slot values using\n- ``tracker.get_slot(slot_name)``, the most recent user\n- message is ``tracker.latest_message.text`` and any other :class:`rasa_core_sdk.Tracker` property.\n+ ``tracker.get_slot(slot_name)``, the most recent user message\n+ is ``tracker.latest_message.text`` and any other\n+ :class:`rasa_core_sdk.Tracker` property.\ndomain (Dict[Text, Any]): the bot's domain\nReturns:\n- List[Event]: A list of :class:`rasa_core_sdk.events.Event` instances that is returned through the endpoint\n+ Dict[Event]: A list of :class:`rasa_core_sdk.events.Event` instances\n+ that is returned through the endpoint\n\"\"\"\nraise NotImplementedError\n"
    },
    {
        "sim_msg": "CLI common 100% covered",
        "sim_diff": "diff --git a/tests/test_cli/test_common.py b/tests/test_cli/test_common.py @@ -24,12 +24,16 @@ from unittest import TestCase, mock\nfrom click import ClickException\nfrom aea.cli.common import (\n+ PublicIdParameter,\n+ _try_to_load_protocols,\nformat_items,\nformat_skills,\ntry_get_item_source_path,\ntry_get_vendorized_item_target_path,\n)\n+from tests.test_cli.tools_for_testing import ContextMock\n+\nclass FormatItemsTestCase(TestCase):\n\"\"\"Test case for format_items method.\"\"\"\n@@ -129,3 +133,23 @@ class TryGetItemTargetPathTestCase(TestCase):\ntry_get_vendorized_item_target_path(\n\"skills\", \"author\", \"skill-name\", \"packages_path\"\n)\n+\n+\n+@mock.patch(\"aea.cli.common.Path.exists\", return_value=False)\n+class TryToLoadProtocolsTestCase(TestCase):\n+ \"\"\"Test case for _try_to_load_protocols method.\"\"\"\n+\n+ def _try_to_load_protocols_protocol_dir_not_exists(self, *mocks):\n+ \"\"\"Test for _try_to_load_protocols protocols dir not exists.\"\"\"\n+ ctx_mock = ContextMock(protocols=[\"author/protocol-1:0.1.0\"])\n+ _try_to_load_protocols(ctx_mock)\n+\n+\n+class PublicIdParameterTestCase(TestCase):\n+ \"\"\"Test case for PublicIdParameter method.\"\"\"\n+\n+ def test_get_metavar_positive(self):\n+ \"\"\"Test for get_metavar positive result.\"\"\"\n+ result = PublicIdParameter.get_metavar(\"obj\", \"param\")\n+ expected_result = \"PUBLIC_ID\"\n+ self.assertEqual(result, expected_result)\n",
        "org_diff": "diff --git a/fkie_node_manager_daemon/tests/test_common.py b/fkie_node_manager_daemon/tests/test_common.py @@ -100,7 +100,7 @@ class TestCommonLib(unittest.TestCase):\ndef test_get_packages(self):\npath = os.path.dirname(self.nm_path.rstrip(os.path.sep))\npkg_res = get_packages(path)\n- self.assertEqual(6, len(pkg_res), \"wrong count of get_packages(%s), expected: %d, got: %d\" % (path, 6, len(pkg_res)))\n+ self.assertEqual(6, len(pkg_res), \"wrong count of get_packages(%s), expected: %d, got: %d -> packages: %s\" % (path, 6, len(pkg_res), pkg_res))\ndef test_get_cwd(self):\ntest_path = '/this/is/path/to'\n"
    },
    {
        "sim_msg": "Add test helper for reducing deck to specified size",
        "sim_diff": "diff --git a/test/helpers/playerinteractionwrapper.js b/test/helpers/playerinteractionwrapper.js @@ -766,6 +766,18 @@ class PlayerInteractionWrapper {\nthrow new Error('Unable to serialize game state back to client:\\n' + JSON.stringify(results));\n}\n}\n+\n+ reduceDeckToNumber(deck, number) {\n+ if(deck === 'conflict deck') {\n+ for(let i = this.conflictDeck.length - 1; i >= number; i--) {\n+ this.moveCard(this.conflictDeck[i], 'conflict discard pile');\n+ }\n+ } else if(deck === 'dynasty deck') {\n+ for(let i = this.dynastyDeck.length - 1; i >= number; i--) {\n+ this.moveCard(this.dynastyDeck[i], 'dynasty discard pile');\n+ }\n+ }\n+ }\n}\nmodule.exports = PlayerInteractionWrapper;\n",
        "org_diff": "diff --git a/src/utils/draftbots.js b/src/utils/draftbots.js @@ -118,7 +118,7 @@ export const getSynergy = (combination, card, picked, synergies) => {\n}\n}\n}\n- return Math.max(0, (synergy + internalSynergy) * 10);\n+ return Math.max(0, (synergy + internalSynergy) * 7);\n};\nexport const getOpenness = (combination, seen) => {\n"
    },
    {
        "sim_msg": "extracted checkbox logic to function",
        "sim_diff": "diff --git a/packages/component-library/src/CardList/CardList.js b/packages/component-library/src/CardList/CardList.js @@ -123,6 +123,21 @@ const CardList = ({ CardRegistry, tagsList, projects }) => {\nsetMobileOpen(!mobileOpen);\n};\n+ const handleCheckboxChange = (category, id) => {\n+ if (showAllStories) setShowAllStories(false);\n+ if (activeFilters[category].includes(id)) {\n+ setActiveFilters({\n+ ...activeFilters,\n+ [category]: activeFilters[category].filter(tag => tag !== id)\n+ });\n+ } else {\n+ setActiveFilters({\n+ ...activeFilters,\n+ [category]: [...activeFilters[category], id]\n+ });\n+ }\n+ };\n+\nconst drawer = (\n<div className={classes.toolbar}>\n<h1 css={filterPadding}>Filters</h1>\n@@ -151,22 +166,7 @@ const CardList = ({ CardRegistry, tagsList, projects }) => {\n<Checkbox\nvalue={activeFilters[category].includes(id)}\nlabel={id}\n- onChange={() => {\n- if (showAllStories) setShowAllStories(false);\n- if (activeFilters[category].includes(id)) {\n- setActiveFilters({\n- ...activeFilters,\n- [category]: activeFilters[category].filter(\n- tag => tag !== id\n- )\n- });\n- } else {\n- setActiveFilters({\n- ...activeFilters,\n- [category]: [...activeFilters[category], id]\n- });\n- }\n- }}\n+ onChange={() => handleCheckboxChange(category, id)}\n/>\n</ListItem>\n))}\n",
        "org_diff": "diff --git a/src/pages/CardPage.js b/src/pages/CardPage.js @@ -222,7 +222,7 @@ const CardPage = ({ user, card, data, versions, related, cubes, loginCallback })\n});\nconst filteredVersions = sortedVersions.filter((version) => {\n- return version._id != card._id;\n+ return version._id !== card._id;\n});\nreturn (\n"
    },
    {
        "sim_msg": "Make webpack dev server more like pre-webpack update",
        "sim_diff": "diff --git a/webpack.config.js b/webpack.config.js @@ -21,9 +21,9 @@ const common = {\n},\ndevServer: {\n- contentBase: path.join(__dirname, 'examples', 'local_files'),\n+ contentBase: path.join( __dirname ),\ncompress: true,\n- port: 9001,\n+ port: 8080,\ndisableHostCheck: true,\nhost: '0.0.0.0',\npublicPath: '/dist/'\n",
        "org_diff": "diff --git a/webpack.common.js b/webpack.common.js @@ -52,6 +52,7 @@ const clientConfig = merge(config, {\nconst serverConfig = merge(config, {\ntarget: 'node',\nentry: {\n+ BulkUploadPage: './src/components/BulkUploadPage.js',\nCubeListPage: './src/components/CubeListPage.js',\nCubePlaytestPage: './src/components/CubePlaytestPage.js',\nDashboardPage: './src/components/DashboardPage.js',\n"
    },
    {
        "sim_msg": "website(showcase): shuffle apps order.\nUntil we'll decide on a better order (for example by downloads\nor rating), this will shuffle up the list of applications on every load\ninstead of having a fixed arbitrary order.",
        "sim_diff": "diff --git a/website/src/components/Showcase/Showcase.js b/website/src/components/Showcase/Showcase.js @@ -5,8 +5,19 @@ import cardList from '@site/showcase.json';\nimport styles from './Showcase.module.css';\nfunction Showcase() {\n- const cards = cardList.map((props) => <Card key={props.title} {...props} />);\n+ const cards = _makeShuffledCardList().map(_makeCard)\n+ return _makeCardsContainer(cards);\n+}\n+\n+const _makeShuffledCardList = () => {\n+ return cardList.sort(() => 0.5 - Math.random());\n+}\n+\n+const _makeCard = (props) => {\n+ return <Card key={props.title} {...props} />;\n+}\n+const _makeCardsContainer = (cards) => {\nreturn (\n<section className={clsx('container', styles.container)}>\n<ul className={clsx('col', 'col--12', styles.list)}>{cards}</ul>\n",
        "org_diff": "diff --git a/src/topcards.js b/src/topcards.js @@ -52,7 +52,7 @@ class TopCards extends Component {\n/>\n</div>\n<SortableTable\n- sorts={{ Rating: row => -row[3], 'Total Picks': row => -row[4] }}\n+ sorts={{ Rating: row => row[3], 'Total Picks': row => -row[4] }}\ndefaultSort=\"Rating\"\nheaders={{ Name: {}, Rating: { style: { width: '10rem' } }, 'Total Picks': { style: { width: '10rem' } } }}\ndata={this.state.data}\n"
    },
    {
        "sim_msg": "fixed another place where paths were not being created correctly",
        "sim_diff": "diff --git a/runner.py b/runner.py @@ -102,21 +102,21 @@ def main():\nname_dict = dict()\nsave_data = True\n- save_path = os.getcwd() + '/bot_code/training/replays'\n+ save_path = os.path.join(os.getcwd(), 'bot_code', 'training', 'replays')\ngame_name = str(int(round(time.time() * 1000))) + '-' + str(random.randint(0, 1000))\nif save_data:\nprint(save_path)\nif not os.path.exists(save_path):\nprint(os.path.dirname(save_path) + ' does not exist creating')\nos.makedirs(save_path)\n- if not os.path.exists(save_path + '\\\\' + game_name):\n- os.makedirs(save_path + '\\\\' + game_name)\n+ joined_path = os.path.join(save_path, game_name)\n+ if not os.path.exists(joined_path):\n+ os.makedirs(joined_path)\nprint('gameName: ' + game_name + 'in ' + save_path)\ngameInputPacket.iNumPlayers = num_participants\nserver_manager.load_config()\n-\nnum_team_0 = 0\n# Set configuration values for bots and store name and team\nfor i in range(num_participants):\n",
        "org_diff": "diff --git a/sc2/bot_ai.py b/sc2/bot_ai.py @@ -557,6 +557,7 @@ class BotAI:\nself.player_id: int = player_id\nself.race: Race = Race(self._game_info.player_races[self.player_id])\n+ if len(self._game_info.player_races) == 2:\nself.enemy_race = Race(self._game_info.player_races[3 - self.player_id])\nself._units_previous_map: dict = dict()\nself._previous_upgrades: Set[UpgradeId] = set()\n"
    },
    {
        "sim_msg": "Properly returning to markdown view after clicking \"source\" again",
        "sim_diff": "diff --git a/app/static/js/Post.js b/app/static/js/Post.js @@ -58,11 +58,12 @@ $(document).on('click', '.delete-post', function(){\n// post source\n$('.post-source').click(function(e){\nvar elem = document.getElementById('postcontent');\n- var oc = document.innerHTML;\n+ var oc = elem.innerHTML;\nvar back = document.createElement( \"a\" );\nback.innerHTML = \"<s>source</s>\";\nback.onclick = function(){\nelem.innerHTML = oc;\n+ $(this).parent().html('<a class=\"post-source\">source</a>');\n};\nelem.innerHTML = '<textarea>' + document.getElementById('post-source').innerHTML + '</textarea>';\n$(this).parent().html(back);\n",
        "org_diff": "diff --git a/public/js/main.js b/public/js/main.js @@ -6,46 +6,52 @@ $(document).ready(function() {\n$('.delete-cube').on('click', function(e) {\n$target = $(e.target);\nvar id = $target.attr('data-id');\n- $.ajax({\n- type: 'DELETE',\n- url: '/cube/remove/' + id,\n- success: function() {\n- window.location.href = '/';\n- },\n- error: function(err) {\n- console.log(err)\n+ csrfFetch('/cube/remove/' + id, {\n+ method: 'DELETE',\n+ headers: {}\n+ }).then(response => {\n+ if (!response.ok) {\n+ console.log(response);\n+ }\n+ else\n+ {\n+ window.location.href = '';\n}\n});\n})\n$('.delete-blog').on('click', function(e) {\n$target = $(e.target);\nvar id = $target.attr('data-id');\n- $.ajax({\n- type: 'DELETE',\n- url: '/cube/blog/remove/' + id,\n- success: function() {\n+ csrfFetch('/cube/blog/remove/' + id, {\n+ method: 'DELETE',\n+ headers: {}\n+ }).then(response => {\n+ if (!response.ok) {\n+ console.log(response);\n+ }\n+ else\n+ {\nwindow.location.href = '';\n- },\n- error: function(err) {\n- console.log(err)\n}\n});\n- })\n+ });\n$('.delete-format').on('click', function(e) {\n$target = $(e.target);\nvar id = $target.attr('data-id');\nvar cube = $target.attr('data-cube');\n- $.ajax({\n- type: 'DELETE',\n- url: '/cube/format/remove/' + cube + ';' + id,\n- success: function() {\n+ csrfFetch('/cube/format/remove/' + cube + ';' + id, {\n+ method: 'DELETE',\n+ headers: {}\n+ }).then(response => {\n+ if (!response.ok) {\n+ console.log(response);\n+ }\n+ else\n+ {\nwindow.location.href = '';\n- },\n- error: function(err) {\n- console.log(err)\n}\n});\n- })\n+ });\n});\nfunction ISODateToYYYYMMDD(dateString) {\n"
    },
    {
        "sim_msg": "Keep focusOnActivate disabled for tabs.",
        "sim_diff": "diff --git a/assets/js/modules/idea-hub/components/dashboard/DashboardIdeasWidget/index.js b/assets/js/modules/idea-hub/components/dashboard/DashboardIdeasWidget/index.js @@ -256,10 +256,20 @@ function DashboardIdeasWidget( props ) {\nhandleActiveIndexUpdate={ handleTabUpdate }\nclassName=\"googlesitekit-idea-hub__tabs\"\n>\n- <Tab replace tag={ Link } to=\"/new-ideas\">\n+ <Tab\n+ replace\n+ tag={ Link }\n+ to=\"/new-ideas\"\n+ focusOnActivate={ false }\n+ >\n{ __( 'New', 'google-site-kit' ) }\n</Tab>\n- <Tab replace tag={ Link } to=\"/saved-ideas\">\n+ <Tab\n+ replace\n+ tag={ Link }\n+ to=\"/saved-ideas\"\n+ focusOnActivate={ false }\n+ >\n{ savedIdeas?.length > 0 &&\ncreateInterpolateElement(\nsprintf(\n@@ -278,7 +288,12 @@ function DashboardIdeasWidget( props ) {\nsavedIdeas?.length === undefined ) &&\n__( 'Saved', 'google-site-kit' ) }\n</Tab>\n- <Tab replace tag={ Link } to=\"/draft-ideas\">\n+ <Tab\n+ replace\n+ tag={ Link }\n+ to=\"/draft-ideas\"\n+ focusOnActivate={ false }\n+ >\n{ draftIdeas?.length > 0 &&\ncreateInterpolateElement(\nsprintf(\n",
        "org_diff": "diff --git a/CONTRIBUTING.md b/CONTRIBUTING.md @@ -75,6 +75,10 @@ We have a fairly active discord and would love for you to join the discussion.\nPrivate Message 'DEKKARU', the admin on Discord, to gain the contributor role and unlock the contributor-only channels.\n+# Community feedback / product ideas\n+\n+Feedback from the community is collected and synthesized into roadmap ideas in a shared document [here](https://www.notion.so/CubeCobra-community-feedback-142b06cd81994a61bd850fb5bc817cc8). To gain read/write access, PM 'DEKKARU' or 'emmett9001' on Discord.\n+\n### Commit Message Style\nPlease keep commit messages brief and informative.\n"
    },
    {
        "sim_msg": "actually write txid to journal",
        "sim_diff": "diff --git a/core/server/master/src/main/java/alluxio/master/file/activesync/ActiveSyncer.java b/core/server/master/src/main/java/alluxio/master/file/activesync/ActiveSyncer.java @@ -78,7 +78,6 @@ public class ActiveSyncer implements HeartbeatExecutor {\nreturn;\n}\n- boolean syncResult = false;\ntry {\nUfsManager.UfsClient ufsclient = mMountTable.getUfsClient(mMountId);\ntry (CloseableResource<UnderFileSystem> ufsResource = ufsclient.acquireUfsResource()) {\n@@ -108,13 +107,11 @@ public class ActiveSyncer implements HeartbeatExecutor {\n}, RetryUtils.defaultActiveSyncClientRetry());\n}\n// Journal the latest processed txId\n- if (syncResult) {\nmFileSystemMaster.recordActiveSyncTxid(syncInfo.getTxId(), mMountId);\n}\n}\n}\n}\n- }\n} catch (IOException e) {\nLOG.warn(\"IOException \" + Throwables.getStackTraceAsString(e));\n}\n",
        "org_diff": "diff --git a/fkie_master_sync/src/fkie_master_sync/sync_thread.py b/fkie_master_sync/src/fkie_master_sync/sync_thread.py @@ -116,8 +116,8 @@ class SyncThread(object):\nself._filter = FilterInterface()\nself._filter.load(self.name,\n['/rosout', self.discoverer_name, '/master_discovery', '/master_sync', '/node_manager', '/node_manager_daemon', '/zeroconf', '/param_sync'], [],\n- ['/rosout', '/rosout_agg', '/diagnostics', '/diagnostics_agg'], ['/'] if sync_on_demand else [],\n- ['/*get_loggers', '/*set_logger_level'], [],\n+ ['/rosout', '/rosout_agg', '/master_discovery/*', '/master_sync/*', '/zeroconf/*'], ['/'] if sync_on_demand else [],\n+ ['/*get_loggers', '/*set_logger_level', '/master_discovery/*', '/master_sync/*', '/node_manager_daemon/*', '/zeroconf/*'], [],\n# do not sync the bond message of the nodelets!!\n['bond/Status', 'fkie_multimaster_msgs/SyncTopicInfo', 'fkie_multimaster_msgs/SyncServiceInfo', 'fkie_multimaster_msgs/SyncMasterInfo', 'fkie_multimaster_msgs/MasterState'],\n[], [],\n"
    },
    {
        "sim_msg": "Add category classes to the map components since I am always looking for that for CSS",
        "sim_diff": "diff --git a/graphic_templates/state_grid_map/js/graphic.js b/graphic_templates/state_grid_map/js/graphic.js @@ -140,9 +140,10 @@ var renderStateGridMap = function(config) {\n_.each(config['data'], function(state) {\nif (state[valueColumn] !== null) {\nvar stateClass = 'state-' + classify(state['state_name']);\n+ var categoryClass = 'category-' + classify(state[valueColumn]);\nchartElement.select('.' + stateClass)\n- .attr('class', stateClass + ' state-active')\n+ .attr('class', stateClass + ' state-active ' + categoryClass)\n.attr('fill', colorScale(state[valueColumn]));\n}\n});\n@@ -159,7 +160,7 @@ var renderStateGridMap = function(config) {\nreturn isMobile ? state['usps'] : state['ap'];\n})\n.attr('class', function(d) {\n- return d[valueColumn] !== null ? 'label label-active' : 'label';\n+ return d[valueColumn] !== null ? 'category-' + classify(d[valueColumn]) + ' label label-active' : 'label';\n})\n.attr('x', function(d) {\nvar className = '.state-' + classify(d['state_name']);\n",
        "org_diff": "diff --git a/public/js/deckbuilder.js b/public/js/deckbuilder.js @@ -172,33 +172,47 @@ function renderDraft() {\nvar lands = 0;\nvar cards = 0;\n+ var creatures = 0;\n//fill up deck\ndeck.playerdeck.forEach(function(col, index) {\nvar colhtml = \"\";\n+ var i = 0;\ncol.forEach(function(card, index2) {\n+ i= i+1;\ncards++;\nif (card.details.type.toLowerCase().includes('land')) {\nlands++;\n}\n+ if (card.details.type.toLowerCase().includes('creature')){\n+ creatures++;\n+ }\nif (card.details.card_flip) {\ncolhtml += '<a style=\"z-index:' + index2 + '; position: relative; top:-' + 155 * (index2) + 'px;\" class=\"autocard\" card=\"' + card.details.display_image + '\" card_flip=\"' + card.details.image_flip + '\" href=\"#\"><img class=\"deckcard defaultCardImage\" data-id=\"' + index2 + '\" data-col=\"' + index + '\" src=\"' + card.details.display_image + '\" width=\"' + cardWidth + '\" height=\"' + cardHeight + '\"/></a>';\n} else {\ncolhtml += '<a style=\"z-index:' + index2 + '; position: relative; top:-' + 155 * (index2) + 'px;\" class=\"autocard\" card=\"' + card.details.display_image + '\" href=\"#\"><img class=\"deckcard defaultCardImage\" data-id=\"' + index2 + '\" data-col=\"' + index + '\" src=\"' + card.details.display_image + '\" width=\"' + cardWidth + '\" height=\"' + cardHeight + '\"/></a>';\n}\n});\n+ if (i>0){\n+ colhtml = '<p style=\"text-align:center;margin:0\">' + i.toString() + '</p>' + colhtml;\n+ }\n$('#deckColumn' + index).html(colhtml);\n});\n- $('#deckName').text('Deck (' + cards + ' cards, ' + lands + ' lands)')\n+ $('#deckName').text('Deck (' + cards + ' cards, ' + lands + ' lands, '+ creatures + ' creatures)')\n//fill up sideboard\ndeck.playersideboard.forEach(function(col, index) {\n- var colhtml = \"\";\n+ var colhtml ='';\n+ var i = 0;\ncol.forEach(function(card, index2) {\n+ i= i+1;\nif (card.details.card_flip) {\ncolhtml += '<a style=\"z-index:' + index2 + '; position: relative; top:-' + 155 * (index2) + 'px;\" class=\"autocard\" card=\"' + card.details.display_image + '\" card_flip=\"' + card.details.image_flip + '\" href=\"#\"><img class=\"sideboardcard\" data-id=\"' + index2 + '\" data-col=\"' + index + '\" src=\"' + card.details.display_image + '\" width=\"' + cardWidth + '\" height=\"' + cardHeight + '\"/></a>';\n} else {\ncolhtml += '<a style=\"z-index:' + index2 + '; position: relative; top:-' + 155 * (index2) + 'px;\" class=\"autocard\" card=\"' + card.details.display_image + '\" href=\"#\"><img class=\"sideboardcard\" data-id=\"' + index2 + '\" data-col=\"' + index + '\" src=\"' + card.details.display_image + '\" width=\"' + cardWidth + '\" height=\"' + cardHeight + '\"/></a>';\n}\n});\n+ if (i > 0){\n+ colhtml = '<p style=text-align:center>' + i.toString() + '</p>' + colhtml;\n+ }\n$('#sideboardColumn' + index).html(colhtml);\n});\n"
    },
    {
        "sim_msg": "taking out some logs",
        "sim_diff": "diff --git a/routes/index.js b/routes/index.js @@ -49,15 +49,11 @@ module.exports = function(server) {\nserver.get(/.*/, function(req, res, next) {\nvar current_hash = config.engine.get('version');\nvar url_arr = req.url.split('/');\n- console.log(current_hash);\n- console.log(url_arr[1])\nif(url_arr[1] != current_hash){\n- console.log('but do I go here');\nurl_arr.splice(1,0, current_hash);\nvar newPath = url_arr.join('/');\nres.redirect(newPath , next);\n} else {\n- console.log(next());\nnext();\n}\n},\n",
        "org_diff": "diff --git a/routes/root.js b/routes/root.js @@ -114,7 +114,9 @@ router.get('/explore', async (req, res) => {\nrouter.get('/random', async (req, res) => {\nconst count = await Cube.count();\nconst random = Math.floor(Math.random() * count);\n- const cube = await Cube.findOne().skip(random);\n+ const cube = await Cube.findOne()\n+ .skip(random)\n+ .lean();\nres.redirect(`/cube/overview/${cube.urlAlias ? cube.urlAlias : cube.shortID}`);\n});\n@@ -130,7 +132,9 @@ router.get('/dashboard', async (req, res) => {\nowner: user._id,\n},\nCUBE_PREVIEW_FIELDS,\n- ).sort({\n+ )\n+ .lean()\n+ .sort({\ndate_updated: -1,\n});\nconst postsq = Blog.find({\n@@ -207,6 +211,7 @@ router.get('/dashboard/decks/:page', async (req, res) => {\nconst cubes = await Cube.find({\nowner: user._id,\n})\n+ .lean()\n.sort({\ndate_updated: -1,\n})\n@@ -346,10 +351,10 @@ router.get('/search/:query/:page', async (req, res) => {\nconst count = await Cube.count(query);\nconst cubes = await Cube.find(query, CUBE_PREVIEW_FIELDS)\n+ .lean()\n.sort(sort)\n.skip(perPage * page)\n- .limit(perPage)\n- .lean();\n+ .limit(perPage);\nconst reactProps = {\nquery: req.params.query,\n"
    },
    {
        "sim_msg": "Enter token on login & stop bot",
        "sim_diff": "diff --git a/PythonBot.py b/PythonBot.py @@ -23,5 +23,9 @@ async def on_message(message):\nelif message.content.startswith('!sleep'):\nawait asyncio.sleep(5)\nawait client.send_message(message.channel, 'Done sleeping')\n+ elif message.content.startswith('!stop'):\n+ print(\"Test\")\n+ await client.close()\n-client.run('MzQ4MDMzMjY4OTk1NTg4MDk2.DIMTew.DJpmVS1j5kboblvziWa4HGZYKiI')\n+token = input(\"Please enter your Discord token: \")\n+client.run(token)\n",
        "org_diff": "diff --git a/test/autotest_bot.py b/test/autotest_bot.py @@ -27,9 +27,9 @@ class TestBot(sc2.BotAI):\nasync def on_step(self, iteration):\nif iteration == 0:\nawait self.chat_send(\"(glhf)\")\n- if iteration == 1:\n+ #if iteration == 1:\n# Test if chat message was sent correctly\n- assert len(self.state.chat) >= 1, self.state.chat\n+ # assert len(self.state.chat) >= 1, self.state.chat\n# Tests at start:\nif iteration == 5:\n"
    }
]