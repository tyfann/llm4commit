[
    {
        "diff": "diff --git a/packages/react-devtools-shared/src/utils.js b/a/packages/react-devtools-shared/src/utils.js @@ -23,9 +23,23 @@ import {\n   Suspense,\n } from 'react-is';\n import {\n+  REACT_CONSUMER_TYPE,\n+  REACT_CONTEXT_TYPE,\n+  REACT_FORWARD_REF_TYPE,\n+  REACT_FRAGMENT_TYPE,\n+  REACT_LAZY_TYPE,\n+  REACT_LEGACY_ELEMENT_TYPE,\n+  REACT_MEMO_TYPE,\n+  REACT_PORTAL_TYPE,\n+  REACT_PROFILER_TYPE,\n+  REACT_PROVIDER_TYPE,\n+  REACT_STRICT_MODE_TYPE,\n+  REACT_SUSPENSE_LIST_TYPE,\n   REACT_SUSPENSE_LIST_TYPE as SuspenseList,\n+  REACT_SUSPENSE_TYPE,\n   REACT_TRACING_MARKER_TYPE as TracingMarker,\n } from 'shared/ReactSymbols';\n+import {enableRenderableContext} from 'shared/ReactFeatureFlags';\n import {\n   TREE_OPERATION_ADD,\n   TREE_OPERATION_REMOVE,\n@@ -695,10 +709,57 @@ export function getDataType(data: Object): DataType {\n   }\n }\n \n+// Fork of packages/react-is/src/ReactIs.js:30, but with legacy element type\n+// Which has been changed in https://github.com/facebook/react/pull/28813\n+function typeOfWithLegacyElementSymbol(object: any): mixed {\n+  if (typeof object === 'object' && object !== null) {\n+    const $$typeof = object.$$typeof;\n+    switch ($$typeof) {\n+      case REACT_LEGACY_ELEMENT_TYPE:\n+        const type = object.type;\n+\n+        switch (type) {\n+          case REACT_FRAGMENT_TYPE:\n+          case REACT_PROFILER_TYPE:\n+          case REACT_STRICT_MODE_TYPE:\n+          case REACT_SUSPENSE_TYPE:\n+          case REACT_SUSPENSE_LIST_TYPE:\n+            return type;\n+          default:\n+            const $$typeofType = type && type.$$typeof;\n+\n+            switch ($$typeofType) {\n+              case REACT_CONTEXT_TYPE:\n+              case REACT_FORWARD_REF_TYPE:\n+              case REACT_LAZY_TYPE:\n+              case REACT_MEMO_TYPE:\n+                return $$typeofType;\n+              case REACT_CONSUMER_TYPE:\n+                if (enableRenderableContext) {\n+                  return $$typeofType;\n+                }\n+              // Fall through\n+              case REACT_PROVIDER_TYPE:\n+                if (!enableRenderableContext) {\n+                  return $$typeofType;\n+                }\n+              // Fall through\n+              default:\n+                return $$typeof;\n+            }\n+        }\n+      case REACT_PORTAL_TYPE:\n+        return $$typeof;\n+    }\n+  }\n+\n+  return undefined;\n+}\n+\n export function getDisplayNameForReactElement(\n   element: React$Element<any>,\n ): string | null {\n-  const elementType = typeOf(element);\n+  const elementType = typeOf(element) || typeOfWithLegacyElementSymbol(element);\n   switch (elementType) {\n     case ContextConsumer:\n       return 'ContextConsumer';",
        "date": "2024-05-07T15:38:43Z",
        "msg": "fix[react-devtools]: add backwards compat with legacy element type symbol (#28982)\n\nFollow-up to https://github.com/facebook/react/pull/28813.\r\n\r\nRDT is using `typeOf` from `react-is` to determine the element display\r\nname, I've forked an implementation of this method, but will be using\r\nlegacy element symbol."
    },
    {
        "diff": "diff --git a/scripts/jest/setupTests.js b/a/scripts/jest/setupTests.js @@ -206,44 +206,55 @@ if (process.env.REACT_CLASS_EQUIVALENCE_TEST) {\n   };\n \n   const gatedErrorMessage = 'Gated test was expected to fail, but it passed.';\n-  global._test_gate = (gateFn, testName, callback) => {\n+  global._test_gate = (gateFn, testName, callback, timeoutMS) => {\n     let shouldPass;\n     try {\n       const flags = getTestFlags();\n       shouldPass = gateFn(flags);\n     } catch (e) {\n-      test(testName, () => {\n-        throw e;\n-      });\n+      test(\n+        testName,\n+        () => {\n+          throw e;\n+        },\n+        timeoutMS\n+      );\n       return;\n     }\n     if (shouldPass) {\n-      test(testName, callback);\n+      test(testName, callback, timeoutMS);\n     } else {\n       const error = new Error(gatedErrorMessage);\n       Error.captureStackTrace(error, global._test_gate);\n       test(`[GATED, SHOULD FAIL] ${testName}`, () =>\n-        expectTestToFail(callback, error));\n+        expectTestToFail(callback, error, timeoutMS));\n     }\n   };\n-  global._test_gate_focus = (gateFn, testName, callback) => {\n+  global._test_gate_focus = (gateFn, testName, callback, timeoutMS) => {\n     let shouldPass;\n     try {\n       const flags = getTestFlags();\n       shouldPass = gateFn(flags);\n     } catch (e) {\n-      test.only(testName, () => {\n-        throw e;\n-      });\n+      test.only(\n+        testName,\n+        () => {\n+          throw e;\n+        },\n+        timeoutMS\n+      );\n       return;\n     }\n     if (shouldPass) {\n-      test.only(testName, callback);\n+      test.only(testName, callback, timeoutMS);\n     } else {\n       const error = new Error(gatedErrorMessage);\n       Error.captureStackTrace(error, global._test_gate_focus);\n-      test.only(`[GATED, SHOULD FAIL] ${testName}`, () =>\n-        expectTestToFail(callback, error));\n+      test.only(\n+        `[GATED, SHOULD FAIL] ${testName}`,\n+        () => expectTestToFail(callback, error),\n+        timeoutMS\n+      );\n     }\n   };\n ",
        "date": "2024-05-07T15:15:39Z",
        "msg": "Allow specifying timeout in tests via third argument (#29006)"
    },
    {
        "diff": "diff --git a/scripts/rollup/bundles.js b/a/scripts/rollup/bundles.js @@ -884,7 +884,7 @@ const bundles = [\n   /******* Reconciler Constants *******/\n   {\n     moduleType: RENDERER_UTILS,\n-    bundleTypes: [NODE_DEV, NODE_PROD],\n+    bundleTypes: [NODE_DEV, NODE_PROD, FB_WWW_DEV, FB_WWW_PROD],\n     entry: 'react-reconciler/constants',\n     global: 'ReactReconcilerConstants',\n     minifyWithProdErrorCodes: true,",
        "date": "2024-05-06T15:32:43Z",
        "msg": "Add FB build for ReactReconcilerConstants (#29003)\n\nIn order to integrate the `react-reconciler` build created in #28880\r\nwith third party libraries, we need to have matching\r\n`react-reconciler/constants` to go with it."
    },
    {
        "diff": "diff --git a/.github/workflows/commit_artifacts.yml b/a/.github/workflows/commit_artifacts.yml @@ -145,15 +145,15 @@ jobs:\n         run: |\n           BASE_FOLDER='compiled-rn/facebook-fbsource/xplat/js'\n           mkdir -p ${BASE_FOLDER}/react-native-github/Libraries/Renderer/\n-          mkdir -p ${BASE_FOLDER}/RKJSModules/vendor/{scheduler,react,react-is,react-test-renderer}/\n+          mkdir -p ${BASE_FOLDER}/RKJSModules/vendor/react/{scheduler,react,react-is,react-test-renderer}/\n \n           # Move React Native renderer \n           mv build/react-native/implementations/ $BASE_FOLDER/react-native-github/Libraries/Renderer/\n           mv build/react-native/shims/ $BASE_FOLDER/react-native-github/Libraries/Renderer/\n-          mv build/facebook-react-native/scheduler/cjs/ $BASE_FOLDER/RKJSModules/vendor/scheduler/\n-          mv build/facebook-react-native/react/cjs/ $BASE_FOLDER/RKJSModules/vendor/react/\n-          mv build/facebook-react-native/react-is/cjs/ $BASE_FOLDER/RKJSModules/vendor/react-is/\n-          mv build/facebook-react-native/react-test-renderer/cjs/ $BASE_FOLDER/RKJSModules/vendor/react-test-renderer/\n+          mv build/facebook-react-native/scheduler/cjs/ $BASE_FOLDER/RKJSModules/vendor/react/scheduler/\n+          mv build/facebook-react-native/react/cjs/ $BASE_FOLDER/RKJSModules/vendor/react/react/\n+          mv build/facebook-react-native/react-is/cjs/ $BASE_FOLDER/RKJSModules/vendor/react/react-is/\n+          mv build/facebook-react-native/react-test-renderer/cjs/ $BASE_FOLDER/RKJSModules/vendor/react/react-test-renderer/\n \n           # Delete OSS renderer. OSS renderer is synced through internal script.\n           RENDERER_FOLDER=$BASE_FOLDER/react-native-github/Libraries/Renderer/implementations/",
        "date": "2024-05-03T22:46:43Z",
        "msg": "Update `compiled-rn` destination paths to `vendor/react` (#28989)\n\nI'm changing the destination paths in fbsource from `vendor/*` to\r\n`vendor/react/*`."
    },
    {
        "diff": "diff --git a/scripts/rollup/wrappers.js b/a/scripts/rollup/wrappers.js @@ -1,7 +1,5 @@\n 'use strict';\n \n-const {resolve} = require('path');\n-const {readFileSync} = require('fs');\n const {signFile, getSigningToken} = require('signedsource');\n const {bundleTypes, moduleTypes} = require('./bundles');\n \n@@ -30,19 +28,25 @@ const {RECONCILER} = moduleTypes;\n \n const USE_STRICT_HEADER_REGEX = /'use strict';\\n+/;\n \n-function registerInternalModuleStart(globalName) {\n-  const path = resolve(__dirname, 'wrappers', 'registerInternalModuleBegin.js');\n-  const file = readFileSync(path);\n-  return String(file).trim();\n+function wrapWithRegisterInternalModule(source) {\n+  return `\\\n+'use strict';\n+if (\n+  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n+  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart ===\n+    'function'\n+) {\n+  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\n }\n-\n-function registerInternalModuleStop(globalName) {\n-  const path = resolve(__dirname, 'wrappers', 'registerInternalModuleEnd.js');\n-  const file = readFileSync(path);\n-\n-  // Remove the 'use strict' directive from the footer.\n-  // This directive is only meaningful when it is the first statement in a file or function.\n-  return String(file).replace(USE_STRICT_HEADER_REGEX, '').trim();\n+${source}\n+if (\n+  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n+  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop ===\n+    'function'\n+) {\n+  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\n+}\n+`;\n }\n \n const license = ` * Copyright (c) Meta Platforms, Inc. and affiliates.\n@@ -496,11 +500,7 @@ function wrapWithTopLevelDefinitions(\n \n         // Certain DEV and Profiling bundles should self-register their own module boundaries with DevTools.\n         // This allows the Timeline to de-emphasize (dim) internal stack frames.\n-        source = `\n-          ${registerInternalModuleStart(globalName)}\n-          ${source}\n-          ${registerInternalModuleStop(globalName)}\n-        `;\n+        source = wrapWithRegisterInternalModule(source);\n         break;\n     }\n   }",
        "date": "2024-05-03T18:08:10Z",
        "msg": "Bundle config: inline internal hook wrapper (#28978)\n\nBundle config: inline internal hook wrapper\r\n\r\nInstead of reading this wrapper from 2 files for \"start\" and \"end\" and\r\nthen string modifying the templates, just inline them like the other\r\nwrappers in this file."
    },
    {
        "diff": "diff --git a/.github/workflows/commit_artifacts.yml b/a/.github/workflows/commit_artifacts.yml @@ -210,42 +210,6 @@ jobs:\n           commit_user_email: ${{ github.actor }}@users.noreply.github.com\n           create_branch: true\n \n-  commit_fbsource_artifacts_external_repo:\n-    needs: download_artifacts\n-    runs-on: ubuntu-latest\n-    if: ${{ (github.ref == 'refs/heads/main' && needs.download_artifacts.outputs.fbsource_branch_count == '0') || github.ref == 'refs/heads/meta-fbsource' }}\n-    steps:\n-      - uses: actions/checkout@v4\n-        with:\n-          ref: main\n-          repository: facebook/react-fbsource-import\n-          token: ${{secrets.FBSOURCE_SYNC_PUSH_TOKEN}}\n-      - name: Ensure clean directory\n-        run: rm -rf compiled-rn\n-      - uses: actions/download-artifact@v3\n-        with:\n-          name: compiled-rn\n-          path: compiled-rn/\n-      - run: git status -u\n-      - name: Check if only the REVISION file has changed\n-        id: check_should_commit\n-        run: |\n-          if git status --porcelain | grep -qv '/REVISION$'; then\n-            echo \"should_commit=true\" >> \"$GITHUB_OUTPUT\"\n-          else\n-            echo \"should_commit=false\" >> \"$GITHUB_OUTPUT\"\n-          fi\n-      - name: Commit changes to branch\n-        if: steps.check_should_commit.outputs.should_commit == 'true'\n-        uses: stefanzweifel/git-auto-commit-action@v4\n-        with:\n-          commit_message: |\n-            ${{ github.event.head_commit.message }}\n-\n-            DiffTrain build for commit https://github.com/facebook/react/commit/${{ github.sha }}.\n-          commit_user_name: ${{ github.actor }}\n-          commit_user_email: ${{ github.actor }}@users.noreply.github.com\n-\n   commit_fbsource_artifacts:\n     needs: download_artifacts\n     if: ${{ (github.ref == 'refs/heads/main' && needs.download_artifacts.outputs.fbsource_branch_count == '0') || github.ref == 'refs/heads/meta-fbsource' }}",
        "date": "2024-05-03T18:01:53Z",
        "msg": "Stop committing resources to an external repo (#28963)\n\nThis has been integrated into this repo (`builds/facebook-fbsource`) so\r\nwe no longer need the extra repo"
    },
    {
        "diff": "diff --git a/packages/react-devtools-fusebox/src/frontend.js b/a/packages/react-devtools-fusebox/src/frontend.js @@ -62,6 +62,7 @@ export function initialize(\n       store={store}\n       showTabBar={true}\n       warnIfLegacyBackendDetected={true}\n+      enabledInspectedElementContextMenu={true}\n     />,\n   );\n }",
        "date": "2024-05-03T16:33:21Z",
        "msg": "[DevTools] Enable inspected element context menu in Fusebox (#28972)\n\n## Summary\r\n\r\nEnables the inspected element context menu in React Native DevTools\r\n(Fusebox).\r\n\r\n## How did you test this change?\r\n\r\n1. `yarn build` in `react-devtools-fusebox`\r\n2. Copy artifacts to rn-chrome-devtools-frontend\r\n3. Manually test the context menu\r\n\r\n\r\nhttps://github.com/facebook/react/assets/2246565/b35cc20f-8d67-43b0-b863-7731e10fffac\r\n\r\nNOTE: The serialised values sometimes expose React internals (e.g. Hook\r\ndata structures instead of just the values), but that seems to be a\r\nproblem equally on web, so I'm going for native<->web parity here."
    },
    {
        "diff": "diff --git a/.circleci/config.yml b/a/.circleci/config.yml @@ -228,6 +228,13 @@ jobs:\n           command: ./scripts/circleci/pack_and_store_devtools_artifacts.sh\n       - store_artifacts:\n           path: ./build/devtools.tgz\n+      # Simplifies getting the extension for local testing\n+      - store_artifacts:\n+          path: ./build/devtools/chrome-extension.zip\n+          destination: react-devtools-chrome-extension.zip\n+      - store_artifacts:\n+          path: ./build/devtools/firefox-extension.zip\n+          destination: react-devtools-firefox-extension.zip\n \n   run_devtools_e2e_tests:\n     docker: *docker",
        "date": "2024-05-02T19:47:18Z",
        "msg": "Devtools: Streamline getting extension from branch (#28975)"
    },
    {
        "diff": "diff --git a/dangerfile.js b/a/dangerfile.js @@ -44,7 +44,9 @@ const CRITICAL_ARTIFACT_PATHS = new Set([\n   // We always report changes to these bundles, even if the change is\n   // insignificant or non-existent.\n   'oss-stable/react-dom/cjs/react-dom.production.js',\n+  'oss-stable/react-dom/cjs/react-dom-client.production.js',\n   'oss-experimental/react-dom/cjs/react-dom.production.js',\n+  'oss-experimental/react-dom/cjs/react-dom-client.production.js',\n   'facebook-www/ReactDOM-prod.classic.js',\n   'facebook-www/ReactDOM-prod.modern.js',\n ]);",
        "date": "2024-05-02T14:39:10Z",
        "msg": "[Tooling] Update critical artifact list (#28966)\n\nWhen a React PR is opened CI will report large size changes. But for\r\ncritical packages like react-dom it reports always. In React 19 we moved\r\nthe build for react-dom the client reconciler from react-dom to\r\nreact-dom/client\r\n\r\nThis change adds react-dom-client artifacts for stable and oss channels\r\nsince that is originally what was being tracked. But since\r\nreact-dom/client always imports react-dom I left the original react-dom\r\npackages as critical as well. They are small but it would be good to\r\nkeep an eye on them"
    },
    {
        "diff": "diff --git a/packages/react-native-renderer/src/__tests__/ReactNativeAttributePayload-test.internal.js b/a/packages/react-native-renderer/src/__tests__/ReactNativeAttributePayload-test.internal.js @@ -204,6 +204,19 @@ describe('ReactNativeAttributePayload', () => {\n     ).toEqual({foo: null}); // this should ideally be null. heuristic.\n   });\n \n+  it('handles attributes defined multiple times', () => {\n+    const validAttributes = {foo: true, style: {foo: true}};\n+    expect(diff({}, {foo: 4, style: {foo: 2}}, validAttributes)).toEqual({\n+      foo: 2,\n+    });\n+    expect(diff({foo: 4}, {style: {foo: 2}}, validAttributes)).toEqual({\n+      foo: 2,\n+    });\n+    expect(diff({style: {foo: 2}}, {foo: 4}, validAttributes)).toEqual({\n+      foo: 4,\n+    });\n+  });\n+\n   // Function properties are just markers to native that events should be sent.\n   it('should convert functions to booleans', () => {\n     // Note that if the property changes from one function to another, we don't",
        "date": "2024-04-30T02:57:32Z",
        "msg": "[react-native] Add unit test to ReactNativeAttributePayload (#28955)\n\n## Summary\r\n\r\nI'm looking at cleaning up some unnecessary manual property flattening\r\nin React Native and wanted to verify this behaviour is working as\r\nexpected, where properties from nested objects will always overwrite\r\nproperties from the base object.\r\n\r\n## How did you test this change?\r\n\r\nUnit tests"
    },
    {
        "diff": "diff --git a/packages/react/npm/jsx-dev-runtime.react-server.js b/a/packages/react/npm/jsx-dev-runtime.react-server.js @@ -1,7 +1,7 @@\n 'use strict';\n \n if (process.env.NODE_ENV === 'production') {\n-  module.exports = require('./cjs/react-jsx-dev-runtime.react-server.production.min.js');\n+  module.exports = require('./cjs/react-jsx-dev-runtime.react-server.production.js');\n } else {\n   module.exports = require('./cjs/react-jsx-dev-runtime.react-server.development.js');\n }",
        "date": "2024-04-27T20:25:25Z",
        "msg": "Import correct prod version of jsx-dev-runtime for react-server (#28939)"
    },
    {
        "diff": "diff --git a/CHANGELOG.md b/a/CHANGELOG.md @@ -1,3 +1,7 @@\n+## 18.3.1 (April 26, 2024)\n+\n+- Export `act` from `react` [f1338f](https://github.com/facebook/react/commit/f1338f8080abd1386454a10bbf93d67bfe37ce85)\n+\n ## 18.3.0 (April 25, 2024)\n \n This release is identical to 18.2 but adds warnings for deprecated APIs and other changes that are needed for React 19.",
        "date": "2024-04-26T20:03:03Z",
        "msg": "Add changelog for 18.3.1 (#28932)"
    },
    {
        "diff": "diff --git a/CHANGELOG.md b/a/CHANGELOG.md @@ -1,3 +1,24 @@\n+## 18.3.0 (April 25, 2024)\n+\n+This release is identical to 18.2 but adds warnings for deprecated APIs and other changes that are needed for React 19.\n+\n+Read the [React 19 Upgrade Guide](https://react.dev/blog/2024/04/25/react-19-upgrade-guide) for more info.\n+\n+### React\n+\n+- Allow writing to `this.refs` to support string ref codemod [909071](https://github.com/facebook/react/commit/9090712fd3ca4e1099e1f92e67933c2cb4f32552)\n+- Warn for deprecated `findDOMNode` outside StrictMode [c3b283](https://github.com/facebook/react/commit/c3b283964108b0e8dbcf1f9eb2e7e67815e39dfb)\n+- Warn for deprecated `test-utils` methods [d4ea75](https://github.com/facebook/react/commit/d4ea75dc4258095593b6ac764289f42bddeb835c)\n+- Warn for deprecated Legacy Context outside StrictMode [415ee0](https://github.com/facebook/react/commit/415ee0e6ea0fe3e288e65868df2e3241143d5f7f)\n+- Warn for deprecated string refs outside StrictMode [#25383](https://github.com/facebook/react/pull/25383)\n+- Warn for deprecated `defaultProps` for function components [#25699](https://github.com/facebook/react/pull/25699)\n+- Warn when spreading `key` [#25697](https://github.com/facebook/react/pull/25697)\n+- Warn when using `act` from `test-utils` [d4ea75](https://github.com/facebook/react/commit/d4ea75dc4258095593b6ac764289f42bddeb835c)\n+\n+### React DOM\n+- Warn for deprecated `unmountComponentAtNode` [8a015b](https://github.com/facebook/react/commit/8a015b68cc060079878e426610e64e86fb328f8d)\n+- Warn for deprecated `renderToStaticNodeStream` [#28874](https://github.com/facebook/react/pull/28874)\n+\n ## 18.2.0 (June 14, 2022)\n \n ### React DOM",
        "date": "2024-04-26T16:45:08Z",
        "msg": "Add changelog for 18.3 (#28929)\n\nFixes https://github.com/facebook/react/issues/28924"
    },
    {
        "diff": "diff --git a/packages/react-reconciler/README.md b/a/packages/react-reconciler/README.md @@ -318,6 +318,30 @@ Same as `unhideInstance`, but for nodes created by `createTextInstance`.\n \n This method should mutate the `container` root node and remove all children from it.\n \n+#### `maySuspendCommit(type, props)`\n+\n+This method is called during render to determine if the Host Component type and props require some kind of loading process to complete before committing an update.\n+\n+#### `preloadInstance(type, props)`\n+\n+This method may be called during render if the Host Component type and props might suspend a commit. It can be used to initiate any work that might shorten the duration of a suspended commit.\n+\n+#### `startSuspendingCommit()`\n+\n+This method is called just before the commit phase. Use it to set up any necessary state while any Host Components that might suspend this commit are evaluated to determine if the commit must be suspended.\n+\n+#### `suspendInstance(type, props)`\n+\n+This method is called after `startSuspendingCommit` for each Host Component that indicated it might suspend a commit.\n+\n+#### `waitForCommitToBeReady()`\n+\n+This method is called after all `suspendInstance` calls are complete.\n+\n+Return `null` if the commit can happen immediately.\n+\n+Return `(initiateCommit: Function) => Function` if the commit must be suspended. The argument to this callback will initiate the commit when called. The return value is a cancellation function that the Reconciler can use to abort the commit.\n+\n ### Persistence Methods\n \n If you use the persistent mode instead of the mutation mode, you would still need the \"Core Methods\". However, instead of the Mutation Methods above you will implement a different set of methods that performs cloning nodes and replacing them at the root level. You can find a list of them in the \"Persistence\" section [listed in this file](https://github.com/facebook/react/blob/main/packages/react-reconciler/src/forks/ReactFiberConfig.custom.js). File an issue if you need help.",
        "date": "2024-04-25T13:37:55Z",
        "msg": "Add descriptions of new methods to the react-reconciler readme (#28750)\n\nAdd new reconciler methods since last breaking change to the README\r\nbased on usage and comments.\r\n\r\n---------\r\n\r\nCo-authored-by: Josh Story <josh.c.story@gmail.com>"
    },
    {
        "diff": "diff --git a/packages/react/src/jsx/ReactJSXElement.js b/a/packages/react/src/jsx/ReactJSXElement.js @@ -738,9 +738,7 @@ export function createElement(type, config, children) {\n         console.warn(\n           'Your app (or one of its dependencies) is using an outdated JSX ' +\n             'transform. Update to the modern JSX transform for ' +\n-            'faster performance: ' +\n-            // TODO: Create a short link for this\n-            'https://reactjs.org/blog/2020/09/22/introducing-the-new-jsx-transform.html',\n+            'faster performance: https://react.dev/link/new-jsx-transform',\n         );\n       }\n     }",
        "date": "2024-04-24T13:32:11Z",
        "msg": "Create short link for jsx warning (#28899)\n\nShort link created in https://github.com/reactjs/react.dev/pull/6772"
    },
    {
        "diff": "diff --git a/packages/react/src/__tests__/ReactProfilerComponent-test.internal.js b/a/packages/react/src/__tests__/ReactProfilerComponent-test.internal.js @@ -19,19 +19,13 @@ function loadModules({\n   enableProfilerTimer = true,\n   enableProfilerCommitHooks = true,\n   enableProfilerNestedUpdatePhase = true,\n-  enableProfilerNestedUpdateScheduledHook = false,\n-  replayFailedUnitOfWorkWithInvokeGuardedCallback = false,\n } = {}) {\n   ReactFeatureFlags = require('shared/ReactFeatureFlags');\n \n   ReactFeatureFlags.enableProfilerTimer = enableProfilerTimer;\n   ReactFeatureFlags.enableProfilerCommitHooks = enableProfilerCommitHooks;\n   ReactFeatureFlags.enableProfilerNestedUpdatePhase =\n     enableProfilerNestedUpdatePhase;\n-  ReactFeatureFlags.enableProfilerNestedUpdateScheduledHook =\n-    enableProfilerNestedUpdateScheduledHook;\n-  ReactFeatureFlags.replayFailedUnitOfWorkWithInvokeGuardedCallback =\n-    replayFailedUnitOfWorkWithInvokeGuardedCallback;\n \n   React = require('react');\n   ReactDOMClient = require('react-dom/client');",
        "date": "2024-04-22T19:35:11Z",
        "msg": "Cleanup `replayFailedUnitOfWorkWithInvokeGuardedCallback`and `enableProfilerNestedUpdateScheduledHook` (#28891)"
    },
    {
        "diff": "diff --git a/scripts/rollup/bundles.js b/a/scripts/rollup/bundles.js @@ -879,9 +879,7 @@ const bundles = [\n \n   /******* React Cache (experimental, old) *******/\n   {\n-    // This is only used by our own tests.\n-    // We can delete it later.\n-    bundleTypes: [NODE_DEV, NODE_PROD],\n+    bundleTypes: [NODE_DEV, NODE_PROD, FB_WWW_DEV, FB_WWW_PROD],\n     moduleType: ISOMORPHIC,\n     entry: 'react-cache',\n     global: 'ReactCacheOld',",
        "date": "2024-04-18T21:26:03Z",
        "msg": "Add missing bundle types for ReactCacheOld (#28860)\n\nAdd missing bundle types for ReactCacheOld\r\n\r\nThese are used at FB and we need to update them for the SecretInternals\r\nupdate."
    },
    {
        "diff": "diff --git a/.github/workflows/commit_artifacts.yml b/a/.github/workflows/commit_artifacts.yml @@ -210,7 +210,7 @@ jobs:\n           commit_user_email: ${{ github.actor }}@users.noreply.github.com\n           create_branch: true\n \n-  commit_fbsource_artifacts:\n+  commit_fbsource_artifacts_external_repo:\n     needs: download_artifacts\n     runs-on: ubuntu-latest\n     if: ${{ (github.ref == 'refs/heads/main' && needs.download_artifacts.outputs.fbsource_branch_count == '0') || github.ref == 'refs/heads/meta-fbsource' }}\n@@ -245,3 +245,39 @@ jobs:\n             DiffTrain build for commit https://github.com/facebook/react/commit/${{ github.sha }}.\n           commit_user_name: ${{ github.actor }}\n           commit_user_email: ${{ github.actor }}@users.noreply.github.com\n+\n+  commit_fbsource_artifacts:\n+    needs: download_artifacts\n+    if: ${{ (github.ref == 'refs/heads/main' && needs.download_artifacts.outputs.fbsource_branch_count == '0') || github.ref == 'refs/heads/meta-fbsource' }}\n+    runs-on: ubuntu-latest\n+    steps:\n+      - uses: actions/checkout@v4\n+        with:\n+          ref: builds/facebook-fbsource\n+      - name: Ensure clean directory\n+        run: rm -rf compiled\n+      - uses: actions/download-artifact@v3\n+        with:\n+          name: compiled-rn\n+          path: compiled-rn/\n+      - run: git status -u\n+      - name: Check if only the REVISION file has changed\n+        id: check_should_commit\n+        run: |\n+          if git status --porcelain | grep -qv '/REVISION$'; then\n+            echo \"should_commit=true\" >> \"$GITHUB_OUTPUT\"\n+          else\n+            echo \"should_commit=false\" >> \"$GITHUB_OUTPUT\"\n+          fi\n+      - name: Commit changes to branch\n+        if: steps.check_should_commit.outputs.should_commit == 'true'\n+        uses: stefanzweifel/git-auto-commit-action@v4\n+        with:\n+          commit_message: |\n+            ${{ github.event.head_commit.message }}\n+\n+            DiffTrain build for commit https://github.com/facebook/react/commit/${{ github.sha }}.\n+          branch: builds/facebook-fbsource\n+          commit_user_name: ${{ github.actor }}\n+          commit_user_email: ${{ github.actor }}@users.noreply.github.com\n+          create_branch: true",
        "date": "2024-04-18T19:08:52Z",
        "msg": "Write Diff Train import branch to this repo (#28869)\n\nFor fbsource we've historically used a separate repo for imports due to\r\ninternal limitations in Diff Train. Those have been lifted so we can now\r\ncommit this branch here and then we can import from this repo (and get\r\nrid of the other repo)"
    },
    {
        "diff": "diff --git a/packages/react-reconciler/src/ReactFiberCompleteWork.js b/a/packages/react-reconciler/src/ReactFiberCompleteWork.js @@ -329,7 +329,6 @@ function appendAllChildrenToContainer(\n     // children to find all the terminal nodes.\n     let node = workInProgress.child;\n     while (node !== null) {\n-      // eslint-disable-next-line no-labels\n       if (node.tag === HostComponent) {\n         let instance = node.stateNode;\n         if (needsVisibilityToggle && isHidden) {",
        "date": "2024-04-18T15:49:55Z",
        "msg": "delete useless eslint-disable-next-line (#28859)\n\n<!--\r\n  Thanks for submitting a pull request!\r\nWe appreciate you spending the time to work on these changes. Please\r\nprovide enough information so that others can review your pull request.\r\nThe three fields below are mandatory.\r\n\r\nBefore submitting a pull request, please make sure the following is\r\ndone:\r\n\r\n1. Fork [the repository](https://github.com/facebook/react) and create\r\nyour branch from `main`.\r\n  2. Run `yarn` in the repository root.\r\n3. If you've fixed a bug or added code that should be tested, add tests!\r\n4. Ensure the test suite passes (`yarn test`). Tip: `yarn test --watch\r\nTestName` is helpful in development.\r\n5. Run `yarn test --prod` to test in the production environment. It\r\nsupports the same options as `yarn test`.\r\n6. If you need a debugger, run `yarn test --debug --watch TestName`,\r\nopen `chrome://inspect`, and press \"Inspect\".\r\n7. Format your code with\r\n[prettier](https://github.com/prettier/prettier) (`yarn prettier`).\r\n8. Make sure your code lints (`yarn lint`). Tip: `yarn linc` to only\r\ncheck changed files.\r\n  9. Run the [Flow](https://flowtype.org/) type checks (`yarn flow`).\r\n  10. If you haven't already, complete the CLA.\r\n\r\nLearn more about contributing:\r\nhttps://reactjs.org/docs/how-to-contribute.html\r\n-->\r\n\r\n## Summary\r\n\r\n<!--\r\nExplain the **motivation** for making this change. What existing problem\r\ndoes the pull request solve?\r\n-->\r\n\r\n## How did you test this change?\r\n\r\n<!--\r\nDemonstrate the code is solid. Example: The exact commands you ran and\r\ntheir output, screenshots / videos if the pull request changes the user\r\ninterface.\r\nHow exactly did you verify that your PR solves the issue you wanted to\r\nsolve?\r\n  If you leave this empty, your PR will very likely be closed.\r\n-->"
    },
    {
        "diff": "diff --git a/packages/react-native-renderer/src/ReactNativeTypes.js b/a/packages/react-native-renderer/src/ReactNativeTypes.js @@ -174,6 +174,25 @@ export type TouchedViewDataAtPoint = $ReadOnly<{\n   ...InspectorData,\n }>;\n \n+export type RenderRootOptions = {\n+  onUncaughtError?: (\n+    error: mixed,\n+    errorInfo: {+componentStack?: ?string},\n+  ) => void,\n+  onCaughtError?: (\n+    error: mixed,\n+    errorInfo: {\n+      +componentStack?: ?string,\n+      // $FlowFixMe[unclear-type] unknown props and state.\n+      +errorBoundary?: ?React$Component<any, any>,\n+    },\n+  ) => void,\n+  onRecoverableError?: (\n+    error: mixed,\n+    errorInfo: {+componentStack?: ?string},\n+  ) => void,\n+};\n+\n /**\n  * Flat ReactNative renderer bundles are too big for Flow to parse efficiently.\n  * Provide minimal Flow typing for the high-level RN API and call it a day.\n@@ -202,6 +221,7 @@ export type ReactNativeType = {\n     element: Element<ElementType>,\n     containerTag: number,\n     callback: ?() => void,\n+    options: ?RenderRootOptions,\n   ): ?ElementRef<ElementType>,\n   unmountComponentAtNode(containerTag: number): void,\n   unmountComponentAtNodeAndRemoveContainer(containerTag: number): void,\n@@ -215,24 +235,6 @@ export opaque type InternalInstanceHandle = mixed;\n type PublicInstance = mixed;\n type PublicTextInstance = mixed;\n \n-export type RenderRootOptions = {\n-  onUncaughtError?: (\n-    error: mixed,\n-    errorInfo: {+componentStack?: ?string},\n-  ) => void,\n-  onCaughtError?: (\n-    error: mixed,\n-    errorInfo: {\n-      +componentStack?: ?string,\n-      +errorBoundary?: ?React$Component<any, any>,\n-    },\n-  ) => void,\n-  onRecoverableError?: (\n-    error: mixed,\n-    errorInfo: {+componentStack?: ?string},\n-  ) => void,\n-};\n-\n export type ReactFabricType = {\n   findHostInstance_DEPRECATED<TElementType: ElementType>(\n     componentOrHandle: ?(ElementRef<TElementType> | number),",
        "date": "2024-04-17T18:56:43Z",
        "msg": "Update ReactNativeTypes for root options (part 2) (#28857)\n\nForgot to push a change before mergin\r\nhttps://github.com/facebook/react/pull/28850"
    },
    {
        "diff": "diff --git a/packages/internal-test-utils/__tests__/ReactInternalTestUtils-test.js b/a/packages/internal-test-utils/__tests__/ReactInternalTestUtils-test.js @@ -2146,7 +2146,7 @@ describe('ReactInternalTestUtils console assertions', () => {\n         - Expected errors\n         + Received errors\n \n-        - This is a complete different message that happens to start with \"T\"\n+        - This is a completely different message that happens to start with \"T\"\n         + Message that happens to contain a \"T\" <component stack>\"\n       `);\n     });",
        "date": "2024-04-17T18:04:22Z",
        "msg": "Complete the typo fix (#28856)"
    },
    {
        "diff": "diff --git a/packages/shared/ReactFeatureFlags.js b/a/packages/shared/ReactFeatureFlags.js @@ -116,8 +116,6 @@ export const alwaysThrottleRetries = true;\n \n export const passChildrenWhenCloningPersistedNodes = false;\n \n-export const enableUseDeferredValueInitialArg = __EXPERIMENTAL__;\n-\n export const enableServerComponentLogs = __EXPERIMENTAL__;\n \n /**\n@@ -191,6 +189,9 @@ export const disableDOMTestUtils = true;\n // Make <Context> equivalent to <Context.Provider> instead of <Context.Consumer>\n export const enableRenderableContext = true;\n \n+// Enables the `initialValue` option for `useDeferredValue`\n+export const enableUseDeferredValueInitialArg = true;\n+\n // -----------------------------------------------------------------------------\n // Chopping Block\n //",
        "date": "2024-04-16T16:12:32Z",
        "msg": "Move enableUseDeferredValueInitialArg to canary (#28818)\n\nPer team discussion, this upgrades the `initialValue` argument for\r\n`useDeferredValue` from experimental to canary.\r\n\r\n- Original implementation PR:\r\nhttps://github.com/facebook/react/pull/27500\r\n- API documentation PR: https://github.com/reactjs/react.dev/pull/6747\r\n\r\nI left it disabled at Meta for now in case there's old code somewhere\r\nthat is still passing an `options` object as the second argument."
    },
    {
        "diff": "diff --git a/packages/react-server/src/ReactServerStreamConfigBun.js b/a/packages/react-server/src/ReactServerStreamConfigBun.js @@ -13,6 +13,7 @@ type BunReadableStreamController = ReadableStreamController & {\n   end(): mixed,\n   write(data: Chunk | BinaryChunk): void,\n   error(error: Error): void,\n+  flush?: () => void,\n };\n export type Destination = BunReadableStreamController;\n \n@@ -25,8 +26,12 @@ export function scheduleWork(callback: () => void) {\n }\n \n export function flushBuffered(destination: Destination) {\n-  // WHATWG Streams do not yet have a way to flush the underlying\n-  // transform streams. https://github.com/whatwg/streams/issues/960\n+  // Bun direct streams provide a flush function.\n+  // If we don't have any more data to send right now.\n+  // Flush whatever is in the buffer to the wire.\n+  if (typeof destination.flush === 'function') {\n+    destination.flush();\n+  }\n }\n \n export function beginWriting(destination: Destination) {}",
        "date": "2024-04-15T15:25:08Z",
        "msg": "Flush direct streams in Bun (#28837)\n\n<!--\r\n  Thanks for submitting a pull request!\r\nWe appreciate you spending the time to work on these changes. Please\r\nprovide enough information so that others can review your pull request.\r\nThe three fields below are mandatory.\r\n\r\nBefore submitting a pull request, please make sure the following is\r\ndone:\r\n\r\n1. Fork [the repository](https://github.com/facebook/react) and create\r\nyour branch from `main`.\r\n  2. Run `yarn` in the repository root.\r\n3. If you've fixed a bug or added code that should be tested, add tests!\r\n4. Ensure the test suite passes (`yarn test`). Tip: `yarn test --watch\r\nTestName` is helpful in development.\r\n5. Run `yarn test --prod` to test in the production environment. It\r\nsupports the same options as `yarn test`.\r\n6. If you need a debugger, run `yarn test --debug --watch TestName`,\r\nopen `chrome://inspect`, and press \"Inspect\".\r\n7. Format your code with\r\n[prettier](https://github.com/prettier/prettier) (`yarn prettier`).\r\n8. Make sure your code lints (`yarn lint`). Tip: `yarn linc` to only\r\ncheck changed files.\r\n  9. Run the [Flow](https://flowtype.org/) type checks (`yarn flow`).\r\n  10. If you haven't already, complete the CLA.\r\n\r\nLearn more about contributing:\r\nhttps://reactjs.org/docs/how-to-contribute.html\r\n-->\r\n\r\n## Summary\r\n\r\n<!--\r\nExplain the **motivation** for making this change. What existing problem\r\ndoes the pull request solve?\r\n-->\r\n\r\nThe ReadableStreamController for [direct\r\nstreams](https://bun.sh/docs/api/streams#direct-readablestream) in Bun\r\nsupports a flush() method to flush all buffered items to its underlying\r\nsink.\r\n\r\nWithout manually calling flush(), all buffered items are only flushed to\r\nthe underlying sink when the stream is closed. This behavior causes the\r\nshell rendered against Suspense boundaries never to be flushed to the\r\nunderlying sink.\r\n\r\n## How did you test this change?\r\n\r\n<!--\r\nDemonstrate the code is solid. Example: The exact commands you ran and\r\ntheir output, screenshots / videos if the pull request changes the user\r\ninterface.\r\nHow exactly did you verify that your PR solves the issue you wanted to\r\nsolve?\r\n  If you leave this empty, your PR will very likely be closed.\r\n-->\r\n\r\nA lot of changes to the test runner will need to be made in order to\r\nsupport the Bun runtime. A separate test was manually run in order to\r\nensure that the changes made are correct.\r\n\r\nThe test works by sanity-checking that the shell rendered against\r\nSuspense boundaries are emitted first in the stream.\r\n\r\nThis test was written and run on Bun v1.1.3.\r\n\r\n```ts\r\nimport { Suspense } from \"react\";\r\nimport { renderToReadableStream } from \"react-dom/server\";\r\n\r\nif (!import.meta.resolveSync(\"react-dom/server\").endsWith(\"server.bun.js\")) {\r\n  throw new Error(\"react-dom/server is not the correct version:\\n  \" + import.meta.resolveSync(\"react-dom/server\"));\r\n}\r\n\r\nconst A = async () => {\r\n  await new Promise(resolve => setImmediate(resolve));\r\n  return <div>hi</div>;\r\n};\r\n\r\nconst B = async () => {\r\n  return (\r\n    <Suspense fallback={<div>loading</div>}>\r\n      <A />\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nconst stream = await renderToReadableStream(<B />);\r\n\r\nlet text = \"\";\r\nlet count = 0;\r\nfor await (const chunk of stream) {\r\n  text += new TextDecoder().decode(chunk);\r\n  count++;\r\n}\r\n\r\nif (\r\n  text !==\r\n  `<!--$?--><template id=\"B:0\"></template><div>loading</div><!--/$--><div hidden id=\"S:0\"><div>hi</div></div><script>$RC=function(b,c,e){c=document.getElementById(c);c.parentNode.removeChild(c);var a=document.getElementById(b);if(a){b=a.previousSibling;if(e)b.data=\"$!\",a.setAttribute(\"data-dgst\",e);else{e=b.parentNode;a=b.nextSibling;var f=0;do{if(a&&8===a.nodeType){var d=a.data;if(\"/$\"===d)if(0===f)break;else f--;else\"$\"!==d&&\"$?\"!==d&&\"$!\"!==d||f++}d=a.nextSibling;e.removeChild(a);a=d}while(a);for(;c.firstChild;)e.insertBefore(c.firstChild,a);b.data=\"$\"}b._reactRetry&&b._reactRetry()}};$RC(\"B:0\",\"S:0\")</script>`\r\n) {\r\n  throw new Error(\"unexpected output\");\r\n}\r\nif (count !== 2) {\r\n  throw new Error(\"expected 2 chunks from react ssr stream\");\r\n}\r\n```"
    },
    {
        "diff": "diff --git a/packages/react-devtools-shared/src/devtools/cache.js b/a/packages/react-devtools-shared/src/devtools/cache.js @@ -59,19 +59,30 @@ const Pending = 0;\n const Resolved = 1;\n const Rejected = 2;\n \n-const ReactSharedInternals = (React: any)\n-  .__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE;\n-\n-function readContext(Context: ReactContext<null>) {\n-  const dispatcher = ReactSharedInternals.H;\n-  if (dispatcher === null) {\n-    throw new Error(\n-      'react-cache: read and preload may only be called from within a ' +\n-        \"component's render. They are not supported in event handlers or \" +\n-        'lifecycle methods.',\n-    );\n-  }\n-  return dispatcher.readContext(Context);\n+let readContext;\n+if (typeof React.use === 'function') {\n+  readContext = function (Context: ReactContext<null>) {\n+    return React.use(Context);\n+  };\n+} else if (\n+  typeof (React: any).__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED ===\n+  'object'\n+) {\n+  const ReactCurrentDispatcher = (React: any)\n+    .__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentDispatcher;\n+  readContext = function (Context: ReactContext<null>) {\n+    const dispatcher = ReactCurrentDispatcher.current;\n+    if (dispatcher === null) {\n+      throw new Error(\n+        'react-cache: read and preload may only be called from within a ' +\n+          \"component's render. They are not supported in event handlers or \" +\n+          'lifecycle methods.',\n+      );\n+    }\n+    return dispatcher.readContext(Context);\n+  };\n+} else {\n+  throw new Error('react-cache: Unsupported React version');\n }\n \n const CacheContext = createContext(null);",
        "date": "2024-04-15T12:03:29Z",
        "msg": "Use use() in the Cache if available (#28793)\n\nThis is a follow up to\r\nhttps://github.com/facebook/react/pull/28789#discussion_r1557232202\r\n\r\nRevert to use the old readContext detection if not to support older\r\nReact.\r\n\r\nI haven't actually tested this. Just opening as a suggestion."
    },
    {
        "diff": "diff --git a/packages/react-reconciler/src/ReactFiberClassComponent.js b/a/packages/react-reconciler/src/ReactFiberClassComponent.js @@ -1274,7 +1274,7 @@ export function resolveClassComponentProps(\n     // We may have already copied the props object above to remove ref. If so,\n     // we can modify that. Otherwise, copy the props object with Object.assign.\n     if (newProps === baseProps) {\n-      newProps = assign({}, newProps, baseProps);\n+      newProps = assign({}, newProps);\n     }\n     // Taken from old JSX runtime, where this used to live.\n     for (const propName in defaultProps) {",
        "date": "2024-04-12T19:55:51Z",
        "msg": "Remove redundant props assign (#28829)"
    },
    {
        "diff": "diff --git a/scripts/rollup/bundles.js b/a/scripts/rollup/bundles.js @@ -293,7 +293,6 @@ const bundles = [\n     bundleTypes: __EXPERIMENTAL__ ? [FB_WWW_DEV, FB_WWW_PROD] : [],\n     moduleType: RENDERER,\n     entry: 'react-server-dom-fb/src/ReactDOMServerFB.js',\n-    condition: 'react-server',\n     global: 'ReactDOMServerStreaming',\n     minifyWithProdErrorCodes: false,\n     wrapWithModuleBoundaries: false,",
        "date": "2024-04-12T19:53:41Z",
        "msg": "Fix mistaken \"react-server\" condition (#28835)\n\nThis is a Fizz server."
    },
    {
        "diff": "diff --git a/packages/react-devtools-fusebox/src/frontend.js b/a/packages/react-devtools-fusebox/src/frontend.js @@ -13,7 +13,10 @@ import Bridge from 'react-devtools-shared/src/bridge';\n import Store from 'react-devtools-shared/src/devtools/store';\n import DevTools from 'react-devtools-shared/src/devtools/views/DevTools';\n \n-import type {Wall} from 'react-devtools-shared/src/frontend/types';\n+import type {\n+  BrowserTheme,\n+  Wall,\n+} from 'react-devtools-shared/src/frontend/types';\n import type {FrontendBridge} from 'react-devtools-shared/src/bridge';\n \n type Config = {\n@@ -42,18 +45,20 @@ export function createStore(bridge: FrontendBridge, config?: Config): Store {\n type InitializationOptions = {\n   bridge: FrontendBridge,\n   store: Store,\n+  theme?: BrowserTheme,\n };\n \n export function initialize(\n   contentWindow: Element | Document,\n   options: InitializationOptions,\n ): void {\n-  const {bridge, store} = options;\n+  const {bridge, store, theme = 'light'} = options;\n   const root = createRoot(contentWindow);\n \n   root.render(\n     <DevTools\n       bridge={bridge}\n+      browserTheme={theme}\n       store={store}\n       showTabBar={true}\n       warnIfLegacyBackendDetected={true}",
        "date": "2024-04-12T16:26:37Z",
        "msg": "feat[devtools-fusebox]: support theme option (#28832)\n\nSupport propagating theme from Chrome DevTools frontend, the field is\r\noptional.\r\n\r\nNext step, which is out of scope of this project and general improvement\r\nfor React DevTools: teach RDT to listen to theme changes and if the\r\ntheme preference is set to `auto` in settings, update the theme\r\naccordingly with the browser devtools."
    },
    {
        "diff": "diff --git a/scripts/release/publish-commands/publish-to-npm.js b/a/scripts/release/publish-commands/publish-to-npm.js @@ -19,7 +19,7 @@ const run = async ({cwd, dry, tags, ci}, packageName, otp) => {\n   // But for now the easiest way is just to ask if this is expected.\n   const {status} = spawnSync('npm', ['view', `${packageName}@${version}`]);\n   const packageExists = status === 0;\n-  if (!packageExists) {\n+  if (packageExists) {\n     console.log(\n       theme`{package ${packageName}} {version ${version}} has already been published.`\n     );",
        "date": "2024-04-11T16:28:10Z",
        "msg": "Fix nightly release job for real (#28825)"
    },
    {
        "diff": "diff --git a/scripts/release/publish-commands/publish-to-npm.js b/a/scripts/release/publish-commands/publish-to-npm.js @@ -2,10 +2,11 @@\n \n 'use strict';\n \n+const {spawnSync} = require('child_process');\n const {exec} = require('child-process-promise');\n const {readJsonSync} = require('fs-extra');\n const {join} = require('path');\n-const {confirm, execRead} = require('../utils');\n+const {confirm} = require('../utils');\n const theme = require('../theme');\n \n const run = async ({cwd, dry, tags, ci}, packageName, otp) => {\n@@ -16,8 +17,9 @@ const run = async ({cwd, dry, tags, ci}, packageName, otp) => {\n   // If so we might be resuming from a previous run.\n   // We could infer this by comparing the build-info.json,\n   // But for now the easiest way is just to ask if this is expected.\n-  const info = await execRead(`npm view ${packageName}@${version}`);\n-  if (info) {\n+  const {status} = spawnSync('npm', ['view', `${packageName}@${version}`]);\n+  const packageExists = status === 0;\n+  if (!packageExists) {\n     console.log(\n       theme`{package ${packageName}} {version ${version}} has already been published.`\n     );",
        "date": "2024-04-11T16:08:13Z",
        "msg": "Fix nightly release job (#28824)"
    },
    {
        "diff": "diff --git a/packages/react-reconciler/src/__tests__/ReactSuspenseFuzz-test.internal.js b/a/packages/react-reconciler/src/__tests__/ReactSuspenseFuzz-test.internal.js @@ -115,24 +115,19 @@ describe('ReactSuspenseFuzz', () => {\n               setTimeout(() => {\n                 cache.set(fullText, fullText);\n                 pendingTasks.delete(task);\n-                Scheduler.log(task.label);\n                 resolve();\n               }, delay);\n             },\n           };\n           cache.set(fullText, thenable);\n-          Scheduler.log(`Suspended! [${fullText}]`);\n           throw thenable;\n         } else if (typeof resolvedText.then === 'function') {\n-          const thenable = resolvedText;\n-          Scheduler.log(`Suspended! [${fullText}]`);\n-          throw thenable;\n+          throw resolvedText;\n         }\n       } else {\n         resolvedText = fullText;\n       }\n \n-      Scheduler.log(resolvedText);\n       return resolvedText;\n     }\n ",
        "date": "2024-04-10T15:40:22Z",
        "msg": "Remove Scheduler.log from ReactSuspenseFuzz-test (#28812)\n\nThese test don't `assertLog` or `waitFor` so we don't need to\r\n`Scheduler.log`. Ideally we would, but since they're fuzzers it's a bit\r\ndifficult to know what the expected log is from the helper.\r\n\r\nSince this doesn't regress current test behavior, we can improve them\r\nafter this to unblock https://github.com/facebook/react/pull/28737"
    },
    {
        "diff": "diff --git a/packages/react-reconciler/src/__tests__/useEffectEvent-test.js b/a/packages/react-reconciler/src/__tests__/useEffectEvent-test.js @@ -742,7 +742,7 @@ describe('useEffectEvent', () => {\n     await act(() =>\n       ReactNoop.render(<ChatRoom roomId=\"general\" theme=\"light\" />),\n     );\n-    await act(() => jest.runAllTimers());\n+\n     assertLog(['Welcome to the general room!', 'Connected! theme: light']);\n     expect(ReactNoop).toMatchRenderedOutput(\n       <span prop=\"Welcome to the general room!\" />,\n@@ -752,20 +752,17 @@ describe('useEffectEvent', () => {\n     await act(() =>\n       ReactNoop.render(<ChatRoom roomId=\"music\" theme=\"light\" />),\n     );\n-    await act(() => jest.runAllTimers());\n     assertLog([\n       'Welcome to the music room!',\n       // should trigger a reconnect\n       'Connected! theme: light',\n     ]);\n-\n     expect(ReactNoop).toMatchRenderedOutput(\n       <span prop=\"Welcome to the music room!\" />,\n     );\n \n     // change theme only\n     await act(() => ReactNoop.render(<ChatRoom roomId=\"music\" theme=\"dark\" />));\n-    await act(() => jest.runAllTimers());\n     // should not trigger a reconnect\n     assertLog(['Welcome to the music room!']);\n     expect(ReactNoop).toMatchRenderedOutput(\n@@ -776,7 +773,6 @@ describe('useEffectEvent', () => {\n     await act(() =>\n       ReactNoop.render(<ChatRoom roomId=\"travel\" theme=\"dark\" />),\n     );\n-    await act(() => jest.runAllTimers());\n     assertLog([\n       'Welcome to the travel room!',\n       // should trigger a reconnect",
        "date": "2024-04-10T14:34:34Z",
        "msg": "[tests] assertLog before act in useEffectEvent (#28763)\n\nFixes tests blocking https://github.com/facebook/react/pull/28737"
    },
    {
        "diff": "diff --git a/packages/react-reconciler/src/__tests__/ReactUse-test.js b/a/packages/react-reconciler/src/__tests__/ReactUse-test.js @@ -663,6 +663,8 @@ describe('ReactUse', () => {\n     }\n \n     const root1 = ReactNoop.createRoot();\n+    assertLog(['Async text requested [Hi]']);\n+\n     await act(() => {\n       root1.render(<Suspense fallback={<Text text=\"Loading...\" />} />);\n     });\n@@ -677,7 +679,7 @@ describe('ReactUse', () => {\n         );\n       });\n     });\n-    assertLog(['Async text requested [Hi]']);\n+    assertLog([]);\n \n     // While we're waiting for the first root's data to resolve, a second\n     // root renders.",
        "date": "2024-04-10T14:34:27Z",
        "msg": "[tests] assertLog before act in ReactUse (#28762)\n\nFixes tests blocking https://github.com/facebook/react/pull/28737"
    },
    {
        "diff": "diff --git a/packages/react-dom/src/__tests__/ReactUpdates-test.js b/a/packages/react-dom/src/__tests__/ReactUpdates-test.js @@ -1900,6 +1900,8 @@ describe('ReactUpdates', () => {\n       await act(() => {\n         root.render(<Terminating />);\n       });\n+\n+      assertLog(Array.from({length: LIMIT + 1}, (_, k) => k));\n       expect(container.textContent).toBe('50');\n       await act(() => {\n         _setStep(0);",
        "date": "2024-04-10T14:34:11Z",
        "msg": "[tests] assertLog before act in ReactUpdates (#28760)\n\nFixes tests blocking https://github.com/facebook/react/pull/28737"
    },
    {
        "diff": "diff --git a/packages/react-dom/src/__tests__/ReactDOMServerSelectiveHydration-test.internal.js b/a/packages/react-dom/src/__tests__/ReactDOMServerSelectiveHydration-test.internal.js @@ -1114,14 +1114,16 @@ describe('ReactDOMServerSelectiveHydration', () => {\n       // Outer was hydrated earlier\n       OuterTestUtils.assertLog([]);\n \n+      // First Inner Mouse Enter fires then Outer Mouse Enter\n+      assertLog(['Inner Mouse Enter', 'Outer Mouse Enter']);\n+\n       await act(() => {\n         Scheduler.unstable_flushAllWithoutAsserting();\n         OuterScheduler.unstable_flushAllWithoutAsserting();\n         InnerScheduler.unstable_flushAllWithoutAsserting();\n       });\n \n-      // First Inner Mouse Enter fires then Outer Mouse Enter\n-      assertLog(['Inner Mouse Enter', 'Outer Mouse Enter']);\n+      assertLog([]);\n     });\n   });\n ",
        "date": "2024-04-10T14:34:02Z",
        "msg": "[tests] assertLog before act in ReactDOMServerSelectiveHydration (#28759)\n\nFixes tests blocking https://github.com/facebook/react/pull/28737"
    },
    {
        "diff": "diff --git a/packages/react-dom/src/__tests__/ReactCompositeComponentState-test.js b/a/packages/react-dom/src/__tests__/ReactCompositeComponentState-test.js @@ -152,21 +152,6 @@ describe('ReactCompositeComponent-state', () => {\n       root.render(<TestComponent />);\n     });\n \n-    await act(() => {\n-      root.render(<TestComponent nextColor=\"green\" />);\n-    });\n-\n-    await act(() => {\n-      testComponentInstance.setFavoriteColor('blue');\n-    });\n-    await act(() => {\n-      testComponentInstance.forceUpdate(\n-        testComponentInstance.peekAtCallback('forceUpdate'),\n-      );\n-    });\n-\n-    root.unmount();\n-\n     assertLog([\n       // there is no state when getInitialState() is called\n       'getInitialState undefined',\n@@ -198,6 +183,13 @@ describe('ReactCompositeComponent-state', () => {\n       'componentDidUpdate-prevState orange',\n       'setState-yellow yellow',\n       'commit yellow',\n+    ]);\n+\n+    await act(() => {\n+      root.render(<TestComponent nextColor=\"green\" />);\n+    });\n+\n+    assertLog([\n       'componentWillReceiveProps-start yellow',\n       // setState({color:'green'}) only enqueues a pending state.\n       'componentWillReceiveProps-end yellow',\n@@ -216,6 +208,13 @@ describe('ReactCompositeComponent-state', () => {\n       'componentDidUpdate-prevState yellow',\n       'setState-receiveProps green',\n       'commit green',\n+    ]);\n+\n+    await act(() => {\n+      testComponentInstance.setFavoriteColor('blue');\n+    });\n+\n+    assertLog([\n       // setFavoriteColor('blue')\n       'shouldComponentUpdate-currentState green',\n       'shouldComponentUpdate-nextState blue',\n@@ -226,6 +225,13 @@ describe('ReactCompositeComponent-state', () => {\n       'componentDidUpdate-prevState green',\n       'setFavoriteColor blue',\n       'commit blue',\n+    ]);\n+    await act(() => {\n+      testComponentInstance.forceUpdate(\n+        testComponentInstance.peekAtCallback('forceUpdate'),\n+      );\n+    });\n+    assertLog([\n       // forceUpdate()\n       'componentWillUpdate-currentState blue',\n       'componentWillUpdate-nextState blue',\n@@ -234,7 +240,12 @@ describe('ReactCompositeComponent-state', () => {\n       'componentDidUpdate-prevState blue',\n       'forceUpdate blue',\n       'commit blue',\n-      // unmountComponent()\n+    ]);\n+\n+    root.unmount();\n+\n+    assertLog([\n+      // unmount()\n       // state is available within `componentWillUnmount()`\n       'componentWillUnmount blue',\n     ]);\n@@ -375,13 +386,13 @@ describe('ReactCompositeComponent-state', () => {\n     await act(() => {\n       root.render(<Parent />);\n     });\n+\n+    assertLog(['parent render one', 'child render one']);\n     await act(() => {\n       root.render(<Parent />);\n     });\n \n     assertLog([\n-      'parent render one',\n-      'child render one',\n       'parent render one',\n       'child componentWillReceiveProps one',\n       'child componentWillReceiveProps done one',",
        "date": "2024-04-10T14:33:51Z",
        "msg": "[tests] assertLog before act in ReactCompositeComponentState (#28758)\n\nFixes tests blocking https://github.com/facebook/react/pull/28737"
    },
    {
        "diff": "diff --git a/.github/workflows/commit_artifacts.yml b/a/.github/workflows/commit_artifacts.yml @@ -132,7 +132,7 @@ jobs:\n             ./compiled/facebook-www/eslint-plugin-react-hooks.js\n \n           # Move unstable_server-external-runtime.js into facebook-www\n-          mv build/oss-stable/react-dom/unstable_server-external-runtime.js \\\n+          mv build/oss-experimental/react-dom/unstable_server-external-runtime.js \\\n             ./compiled/facebook-www/unstable_server-external-runtime.js\n \n           # Move react-refresh-babel.development.js into babel-plugin-react-refresh",
        "date": "2024-04-09T21:05:18Z",
        "msg": "Attempt to fix diff syncing for Meta (#28801)\n\n#28796 broke Meta's PR syncing tool, hoping this fixes it"
    },
    {
        "diff": "diff --git a/.circleci/config.yml b/a/.circleci/config.yml @@ -2,7 +2,7 @@ version: 2.1\n \n aliases:\n   - &docker\n-    - image: cimg/openjdk:18.0-node\n+    - image: cimg/node:18.20.1-browsers\n \n   - &environment\n     TZ: /usr/share/zoneinfo/America/Los_Angeles\n@@ -246,8 +246,7 @@ jobs:\n           command: ./scripts/circleci/run_devtools_e2e_tests.js\n \n   run_fixtures_flight_tests:\n-    docker:\n-      - image: cimg/openjdk:20.0-node\n+    docker: *docker\n     environment: *environment\n     steps:\n       - checkout",
        "date": "2024-04-09T14:02:22Z",
        "msg": "CI: Run with Node.js 18.20 (#28774)"
    },
    {
        "diff": "diff --git a/.github/workflows/stale.yml b/a/.github/workflows/stale.yml @@ -2,8 +2,8 @@\n name: 'Manage stale issues and PRs'\n on:\n   schedule:\n-    # Run daily at 2AM\n-    - cron: '0 2 * * *'\n+    # Run hourly\n+    - cron: '0 * * * *'\n \n jobs:\n   stale:\n@@ -16,7 +16,7 @@ jobs:\n           days-before-stale: 90\n           # Number of days of inactivity before a stale issue or PR is closed\n           days-before-close: 7\n-          # Number of issues or PRs to process per day\n+          # API calls per run\n           operations-per-run: 100\n \n           # --- Issues ---\n@@ -43,4 +43,4 @@ jobs:\n           close-pr-message: >\n             Closing this pull request after a prolonged period of inactivity. If this issue is still present in the latest release, please ask for this pull request to be reopened. Thank you!\n           # PRs with these labels will never be considered stale\n-          exempt-pr-labels: \"Partner,React Core Team,Resolution: Backlog,Type: Bug,Type: Discussion,Type: Needs Investigation,Type: Regression,Type: Feature Request,Type: Enhancement\"\n\\ No newline at end of file\n+          exempt-pr-labels: \"Partner,React Core Team,Resolution: Backlog,Type: Bug,Type: Discussion,Type: Needs Investigation,Type: Regression,Type: Feature Request,Type: Enhancement\"",
        "date": "2024-04-09T13:21:20Z",
        "msg": "Run stale job hourly (#28769)"
    },
    {
        "diff": "diff --git a/packages/react-dom/package.json b/a/packages/react-dom/package.json @@ -25,23 +25,28 @@\n   \"files\": [\n     \"LICENSE\",\n     \"README.md\",\n-    \"index.js\",\n     \"client.js\",\n+    \"client.react-server.js\",\n+    \"index.js\",\n     \"profiling.js\",\n-    \"server.js\",\n+    \"profiling.react-server.js\",\n+    \"react-dom.react-server.js\",\n+    \"server-rendering-stub.js\",\n     \"server.browser.js\",\n+    \"server.bun.js\",\n     \"server.edge.js\",\n+    \"server.js\",\n     \"server.node.js\",\n-    \"server.bun.js\",\n-    \"static.js\",\n+    \"server.react-server.js\",\n     \"static.browser.js\",\n     \"static.edge.js\",\n+    \"static.js\",\n     \"static.node.js\",\n-    \"server-rendering-stub.js\",\n+    \"static.react-server.js\",\n     \"test-utils.js\",\n     \"unstable_testing.js\",\n+    \"unstable_testing.react-server.js\",\n     \"unstable_server-external-runtime.js\",\n-    \"react-dom.react-server.js\",\n     \"cjs/\",\n     \"umd/\"\n   ],",
        "date": "2024-04-08T22:49:18Z",
        "msg": "[DOM] Fix package.json files for #28784 (#28785)\n\nMissed some files for the react-server disallow client change in #28784"
    },
    {
        "diff": "diff --git a/packages/react-dom/package.json b/a/packages/react-dom/package.json @@ -50,8 +50,12 @@\n       \"react-server\": \"./react-dom.react-server.js\",\n       \"default\": \"./index.js\"\n     },\n-    \"./client\": \"./client.js\",\n+    \"./client\": {\n+      \"react-server\": \"./client.react-server.js\",\n+      \"default\": \"./client.js\"\n+    },\n     \"./server\": {\n+      \"react-server\": \"./server.react-server.js\",\n       \"workerd\": \"./server.edge.js\",\n       \"bun\": \"./server.bun.js\",\n       \"deno\": \"./server.browser.js\",\n@@ -61,11 +65,24 @@\n       \"edge-light\": \"./server.edge.js\",\n       \"default\": \"./server.node.js\"\n     },\n-    \"./server.browser\": \"./server.browser.js\",\n-    \"./server.bun\": \"./server.bun.js\",\n-    \"./server.edge\": \"./server.edge.js\",\n-    \"./server.node\": \"./server.node.js\",\n+    \"./server.browser\": {\n+      \"react-server\": \"./server.react-server.js\",\n+      \"default\": \"./server.browser.js\"\n+    },\n+    \"./server.bun\": {\n+      \"react-server\": \"./server.react-server.js\",\n+      \"default\": \"./server.bun.js\"\n+    },\n+    \"./server.edge\": {\n+      \"react-server\": \"./server.react-server.js\",\n+      \"default\": \"./server.edge.js\"\n+    },\n+    \"./server.node\": {\n+      \"react-server\": \"./server.react-server.js\",\n+      \"default\": \"./server.node.js\"\n+    },\n     \"./static\": {\n+      \"react-server\": \"./static.react-server.js\",\n       \"workerd\": \"./static.edge.js\",\n       \"deno\": \"./static.browser.js\",\n       \"worker\": \"./static.browser.js\",\n@@ -74,13 +91,28 @@\n       \"edge-light\": \"./static.edge.js\",\n       \"default\": \"./static.node.js\"\n     },\n-    \"./static.browser\": \"./static.browser.js\",\n-    \"./static.edge\": \"./static.edge.js\",\n-    \"./static.node\": \"./static.node.js\",\n+    \"./static.browser\": {\n+      \"react-server\": \"./static.react-server.js\",\n+      \"default\": \"./static.browser.js\"\n+    },\n+    \"./static.edge\": {\n+      \"react-server\": \"./static.react-server.js\",\n+      \"default\": \"./static.edge.js\"\n+    },\n+    \"./static.node\": {\n+      \"react-server\": \"./static.react-server.js\",\n+      \"default\": \"./static.node.js\"\n+    },\n     \"./server-rendering-stub\": \"./server-rendering-stub.js\",\n-    \"./profiling\": \"./profiling.js\",\n+    \"./profiling\": {\n+      \"react-server\": \"./profiling.react-server.js\",\n+      \"default\": \"./profiling.js\"\n+    },\n     \"./test-utils\": \"./test-utils.js\",\n-    \"./unstable_testing\": \"./unstable_testing.js\",\n+    \"./unstable_testing\": {\n+      \"react-server\": \"./unstable_testing.react-server.js\",\n+      \"default\": \"./unstable_testing.js\"\n+    },\n     \"./unstable_server-external-runtime\": \"./unstable_server-external-runtime.js\",\n     \"./src/*\": \"./src/*\",\n     \"./package.json\": \"./package.json\"",
        "date": "2024-04-08T22:37:06Z",
        "msg": "[DOM] disallow client entrypoints with react-server condition (#28784)\n\n`react-server` precludes loading code that expects to be run in a client\r\ncontext. This includes react-dom/client react-dom/server\r\nreact-dom/unstable_testing react-dom/profiling and react-dom/static\r\n\r\nThis update makes importing any of these client only entrypoints an\r\nerror"
    },
    {
        "diff": "diff --git a/packages/react-dom-bindings/src/client/ReactFiberConfigDOM.js b/a/packages/react-dom-bindings/src/client/ReactFiberConfigDOM.js @@ -2417,9 +2417,15 @@ export function getResource(\n       return null;\n     }\n     case 'script': {\n-      if (typeof pendingProps.src === 'string' && pendingProps.async === true) {\n-        const scriptProps: ScriptProps = pendingProps;\n-        const key = getScriptKey(scriptProps.src);\n+      const async = pendingProps.async;\n+      const src = pendingProps.src;\n+      if (\n+        typeof src === 'string' &&\n+        async &&\n+        typeof async !== 'function' &&\n+        typeof async !== 'symbol'\n+      ) {\n+        const key = getScriptKey(src);\n         const scripts = getResourcesFromRoot(resourceRoot).hoistableScripts;\n \n         let resource = scripts.get(key);\n@@ -3065,16 +3071,20 @@ export function isHostHoistableType(\n       }\n     }\n     case 'script': {\n+      const isAsync =\n+        props.async &&\n+        typeof props.async !== 'function' &&\n+        typeof props.async !== 'symbol';\n       if (\n-        props.async !== true ||\n+        !isAsync ||\n         props.onLoad ||\n         props.onError ||\n-        typeof props.src !== 'string' ||\n-        !props.src\n+        !props.src ||\n+        typeof props.src !== 'string'\n       ) {\n         if (__DEV__) {\n           if (outsideHostContainerContext) {\n-            if (props.async !== true) {\n+            if (!isAsync) {\n               console.error(\n                 'Cannot render a sync or defer <script> outside the main document without knowing its order.' +\n                   ' Try adding async=\"\" or moving it into the root <head> tag.',",
        "date": "2024-04-08T21:26:58Z",
        "msg": "[Float] treat `props.async` in Float consistent with the rest of react-dom (#26760)\n\nTreat async (boolean prop) consistently with Float. Previously float\r\nchecked if `props.async === true` (or not true) but the rest of\r\nreact-dom considers anything truthy that isn't a function or symbol as\r\n`true`. This PR normalizes the Float behavior."
    },
    {
        "diff": "diff --git a/packages/react-dom-bindings/src/events/ReactDOMEventReplaying.js b/a/packages/react-dom-bindings/src/events/ReactDOMEventReplaying.js @@ -38,7 +38,7 @@ import {isHigherEventPriority} from 'react-reconciler/src/ReactEventPriorities';\n import {isRootDehydrated} from 'react-reconciler/src/ReactFiberShellHydration';\n import {dispatchReplayedFormAction} from './plugins/FormActionEventPlugin';\n import {\n-  getCurrentUpdatePriority,\n+  resolveUpdatePriority,\n   runWithPriority as attemptHydrationAtPriority,\n } from '../client/ReactDOMUpdatePriority';\n \n@@ -333,10 +333,7 @@ function attemptExplicitHydrationTarget(\n }\n \n export function queueExplicitHydrationTarget(target: Node): void {\n-  // TODO: This will read the priority if it's dispatched by the React\n-  // event system but not native events. Should read window.event.type, like\n-  // we do for updates (getCurrentEventPriority).\n-  const updatePriority = getCurrentUpdatePriority();\n+  const updatePriority = resolveUpdatePriority();\n   const queuedTarget: QueuedHydrationTarget = {\n     blockedOn: null,\n     target: target,",
        "date": "2024-04-08T21:05:17Z",
        "msg": "[Fiber] Use real event priority for hydration scheduling (#28765)\n\nStacked on #28751 \r\n\r\nHistorically explicit hydration scheduling used the reconciler's update\r\npriority to schedule the hydration. There was a lingering todo to switch\r\nto using event priority in the absence of an explicit update priority.\r\nThis change updates the hydration priority by referring to the event\r\npriority if no update priority is set"
    },
    {
        "diff": "diff --git a/packages/react/src/jsx/ReactJSXElement.js b/a/packages/react/src/jsx/ReactJSXElement.js @@ -364,12 +364,8 @@ export function jsxProd(type, config, maybeKey) {\n     // because in V8 it will deopt the object to dictionary mode.\n     props = {};\n     for (const propName in config) {\n-      if (\n-        hasOwnProperty.call(config, propName) &&\n-        // Skip over reserved prop names\n-        propName !== 'key' &&\n-        (enableRefAsProp || propName !== 'ref')\n-      ) {\n+      // Skip over reserved prop names\n+      if (propName !== 'key' && (enableRefAsProp || propName !== 'ref')) {\n         if (enableRefAsProp && !disableStringRefs && propName === 'ref') {\n           props.ref = coerceStringRef(\n             config[propName],\n@@ -603,12 +599,8 @@ export function jsxDEV(type, config, maybeKey, isStaticChildren, source, self) {\n       // because in V8 it will deopt the object to dictionary mode.\n       props = {};\n       for (const propName in config) {\n-        if (\n-          hasOwnProperty.call(config, propName) &&\n-          // Skip over reserved prop names\n-          propName !== 'key' &&\n-          (enableRefAsProp || propName !== 'ref')\n-        ) {\n+        // Skip over reserved prop names\n+        if (propName !== 'key' && (enableRefAsProp || propName !== 'ref')) {\n           if (enableRefAsProp && !disableStringRefs && propName === 'ref') {\n             props.ref = coerceStringRef(\n               config[propName],",
        "date": "2024-04-08T15:12:40Z",
        "msg": "jsx: Remove unnecessary hasOwnProperty check (#28775)\n\nFollow up to #28768.\r\n\r\nThe modern JSX runtime (`jsx`) does not need to check if each prop is a\r\ndirect property with `hasOwnProperty` because the compiler always passes\r\na plain object.\r\n\r\nI'll leave the check in the old JSX runtime (`createElement`) since that\r\none can be called manually with any kind of object, and if there were\r\nold user code that relied on this for some reason, it would be using\r\nthat runtime."
    },
    {
        "diff": "diff --git a/fixtures/nesting/README.md b/a/fixtures/nesting/README.md @@ -68,7 +68,7 @@ We will use three different `package.json`s: one for non-React code at the root,\n - **`src/legacy/package.json`**: This is where we declare the `react` and `react-dom`  dependencies for the \"legacy\" trees. In this demo, we're using React 16.8 (although, as noted above, we could downgrade it further below). This is **also** where we specify any third-party libraries that use React. For example, we include `react-router` and `react-redux` in this example. \n - **`src/modern/package.json`**: This is where we declare the `react` and `react-dom`  dependencies for the \"modern\" trees. In this demo, we're using React 17. Here, we also specify third-party dependencies that use React and are used from the modern part of our app. This is why we *also* have `react-router` and `react-redux` in this file. (Their versions don't strictly have to match their `legacy` counterparts, but features that rely on context may require workarounds if they differ.)\n \n-The `scripts` in the root `package.json` are set up so that when you run `npm install` in it, it also runs `npm intall` in both `src/legacy` and `src/modern` folders.\n+The `scripts` in the root `package.json` are set up so that when you run `npm install` in it, it also runs `npm install` in both `src/legacy` and `src/modern` folders.\n \n **Note:** This demo is set up to use a few third-party dependencies (React Router and Redux). These are not essential, and you can remove them from the demo. They are included so we can show how to make them work with this approach.\n ",
        "date": "2024-04-06T17:11:19Z",
        "msg": "docs: fix typo in fixtures/nesting/README.md (#27507)"
    },
    {
        "diff": "diff --git a/.github/workflows/stale.yml b/a/.github/workflows/stale.yml @@ -16,8 +16,8 @@ jobs:\n           days-before-stale: 90\n           # Number of days of inactivity before a stale issue or PR is closed\n           days-before-close: 7\n-          # Tmp dry run setup to test new config\n-          debug-only: 'true'\n+          # Number of issues or PRs to process per day\n+          operations-per-run: 100\n \n           # --- Issues ---\n           stale-issue-label: \"Resolution: Stale\"\n@@ -30,7 +30,7 @@ jobs:\n           close-issue-message: >\n             Closing this issue after a prolonged period of inactivity. If this issue is still present in the latest release, please create a new issue with up-to-date information. Thank you!\n           # Issues with these labels will never be considered stale\n-          exempt-issue-labels: \"Partner,React Core Team,Resolution: Backlog,Type: Bug,Type: Discussion,Type: Needs Investigation,Type: Regression,Type: Feature Request\"\n+          exempt-issue-labels: \"Partner,React Core Team,Resolution: Backlog,Type: Bug,Type: Discussion,Type: Needs Investigation,Type: Regression,Type: Feature Request,Type: Enhancement\"\n \n           # --- PRs ---\n           stale-pr-label: \"Resolution: Stale\"\n@@ -43,4 +43,4 @@ jobs:\n           close-pr-message: >\n             Closing this pull request after a prolonged period of inactivity. If this issue is still present in the latest release, please ask for this pull request to be reopened. Thank you!\n           # PRs with these labels will never be considered stale\n-          exempt-pr-labels: \"Partner,React Core Team,Resolution: Backlog,Type: Bug,Type: Discussion,Type: Needs Investigation,Type: Regression,Type: Feature Request\"\n\\ No newline at end of file\n+          exempt-pr-labels: \"Partner,React Core Team,Resolution: Backlog,Type: Bug,Type: Discussion,Type: Needs Investigation,Type: Regression,Type: Feature Request,Type: Enhancement\"\n\\ No newline at end of file",
        "date": "2024-04-04T14:27:29Z",
        "msg": "Enable stale action (#28729)\n\nFollows #28695\r\n\r\nNow that the action has run successfully in debug mode\r\n([logs](https://github.com/facebook/react/actions/runs/8532177618/job/23372921455#step:2:35)),\r\nlet's enable it to persist changes.\r\n\r\nAlso changes the number of operations per run from the default of 30 to\r\n100 since we have a large backlog of issues and PRs to work through.\r\n\r\nFinally adds enhancement label as exempt from stale."
    },
    {
        "diff": "diff --git a/packages/react-server/src/ReactFizzServer.js b/a/packages/react-server/src/ReactFizzServer.js @@ -842,7 +842,7 @@ function encodeErrorForBoundary(\n       ? 'Switched to client rendering because the server rendering aborted due to:\\n\\n'\n       : 'Switched to client rendering because the server rendering errored:\\n\\n';\n     boundary.errorMessage = prefix + message;\n-    boundary.errorStack = stack;\n+    boundary.errorStack = stack !== null ? prefix + stack : null;\n     boundary.errorComponentStack = thrownInfo.componentStack;\n   }\n }",
        "date": "2024-04-04T01:52:54Z",
        "msg": "Emit Server Error Prefix in the .stack Property Too (#28738)\n\nFollow up to #28684.\r\n\r\nV8 includes the message in the stack and printed errors include just the\r\nstack property which is assumed to contain the message. Without this,\r\nthe prefix doesn't get printed in the console.\r\n\r\n<img width=\"578\" alt=\"Screenshot 2024-04-03 at 6 32 04\u202fPM\"\r\nsrc=\"https://github.com/facebook/react/assets/63648/d98a2db4-6ebc-4805-b669-59f449dfd21f\">\r\n\r\nA possible alternative would be to use a nested error with a `cause`\r\nlike #28736 but that would need some more involved serializing since\r\nthis prefix is coming from the server. Perhaps as a separate attribute."
    },
    {
        "diff": "diff --git a/packages/react-server/src/ReactFizzServer.js b/a/packages/react-server/src/ReactFizzServer.js @@ -1390,21 +1390,52 @@ function finishClassComponent(\n   task.keyPath = prevKeyPath;\n }\n \n+export function resolveClassComponentProps(\n+  Component: any,\n+  baseProps: Object,\n+): Object {\n+  let newProps = baseProps;\n+\n+  // TODO: This is where defaultProps should be resolved, too.\n+\n+  if (enableRefAsProp) {\n+    // Remove ref from the props object, if it exists.\n+    if ('ref' in newProps) {\n+      newProps = assign({}, newProps);\n+      delete newProps.ref;\n+    }\n+  }\n+\n+  return newProps;\n+}\n+\n function renderClassComponent(\n   request: Request,\n   task: Task,\n   keyPath: KeyNode,\n   Component: any,\n   props: any,\n ): void {\n+  const resolvedProps = resolveClassComponentProps(Component, props);\n   const previousComponentStack = task.componentStack;\n   task.componentStack = createClassComponentStack(task, Component);\n   const maskedContext = !disableLegacyContext\n     ? getMaskedContext(Component, task.legacyContext)\n     : undefined;\n-  const instance = constructClassInstance(Component, props, maskedContext);\n-  mountClassInstance(instance, Component, props, maskedContext);\n-  finishClassComponent(request, task, keyPath, instance, Component, props);\n+  const instance = constructClassInstance(\n+    Component,\n+    resolvedProps,\n+    maskedContext,\n+  );\n+  mountClassInstance(instance, Component, resolvedProps, maskedContext);\n+  finishClassComponent(\n+    request,\n+    task,\n+    keyPath,\n+    instance,\n+    Component,\n+    resolvedProps,\n+  );\n   task.componentStack = previousComponentStack;\n }\n ",
        "date": "2024-04-03T16:55:57Z",
        "msg": "Classes consume ref prop during SSR, too (#28731)\n\nSame as #28719 but for SSR."
    },
    {
        "diff": "diff --git a/packages/react-test-renderer/README.md b/a/packages/react-test-renderer/README.md @@ -1,12 +1,26 @@\n-# `react-test-renderer`\n+# `react-test-renderer` (DEPRECATED)\n+\n+## Deprecation notice\n+\n+`react-test-renderer` is deprecated and no longer maintained. It will be removed in a future version. As of React 19, you will see a console warning when invoking `ReactTestRenderer.create()`.\n+\n+### React Testing\n+\n+This library creates a contrived environment and its APIs encourage introspection on React's internals, which may change without notice causing broken tests. It is instead recommended to use browser-based environments such as jsdom and standard DOM APIs for your assertions.\n+\n+The React team recommends [`@testing-library/react`](https://testing-library.com/docs/react-testing-library/intro) as a modern alternative that uses standard APIs, avoids internals, and [promotes best practices](https://testing-library.com/docs/guiding-principles).\n+\n+### React Native Testing\n+\n+The React team recommends @testing-library/react-native as a replacement for `react-test-renderer` for native integration tests. This React Native testing-library variant follows the same API design as described above and promotes better testing patterns.\n+\n+## Documentation\n \n This package provides an experimental React renderer that can be used to render React components to pure JavaScript objects, without depending on the DOM or a native mobile environment.\n \n Essentially, this package makes it easy to grab a snapshot of the \"DOM tree\" rendered by a React DOM or React Native component without using a browser or jsdom.\n \n-Documentation:\n-\n-[https://reactjs.org/docs/test-renderer.html](https://reactjs.org/docs/test-renderer.html)\n+Documentation: [https://reactjs.org/docs/test-renderer.html](https://reactjs.org/docs/test-renderer.html)\n \n Usage:\n ",
        "date": "2024-04-02T15:41:31Z",
        "msg": "Update RTR readme (#28705)"
    },
    {
        "diff": "diff --git a/packages/react-devtools-shell/src/app/ElementTypes/index.js b/a/packages/react-devtools-shell/src/app/ElementTypes/index.js @@ -60,17 +60,15 @@ export default function ElementTypes(): React.Node {\n           <Context.Consumer>{(value: $FlowFixMe) => null}</Context.Consumer>\n         </Context.Provider>\n         <StrictMode>\n-          <Cache>\n-            <Suspense fallback={<div>Loading...</div>}>\n-              <ClassComponent />\n-              <FunctionComponent />\n-              <MemoFunctionComponent />\n-              <ForwardRefComponent />\n-              <ForwardRefComponentWithAnonymousFunction />\n-              <ForwardRefComponentWithCustomDisplayName />\n-              <LazyComponent />\n-            </Suspense>\n-          </Cache>\n+          <Suspense fallback={<div>Loading...</div>}>\n+            <ClassComponent />\n+            <FunctionComponent />\n+            <MemoFunctionComponent />\n+            <ForwardRefComponent />\n+            <ForwardRefComponentWithAnonymousFunction />\n+            <ForwardRefComponentWithCustomDisplayName />\n+            <LazyComponent />\n+          </Suspense>\n         </StrictMode>\n       </Fragment>\n     </Profiler>",
        "date": "2024-04-02T15:13:15Z",
        "msg": "Remove reference to deleted <Cache> in un-linted file (#28715)\n\nI missed this in #28698 bc the file isn't linted"
    },
    {
        "diff": "diff --git a/.nvmrc b/a/.nvmrc @@ -1 +1 @@\n-v16.19.1\n+v18.20.0",
        "date": "2024-04-02T14:04:19Z",
        "msg": "Bump nvmrc to Node.js v18 (#28707)\n\nBump nvmrc to Node.js v18\r\n\r\nNode.js v16 is long deprecated, seems like for v20 there's some more\r\nstuff to fix."
    },
    {
        "diff": "diff --git a/scripts/rollup/forks.js b/a/scripts/rollup/forks.js @@ -153,10 +153,7 @@ const forks = Object.freeze({\n           case RN_FB_DEV:\n           case RN_FB_PROD:\n           case RN_FB_PROFILING:\n-          case RN_OSS_DEV:\n-          case RN_OSS_PROD:\n-          case RN_OSS_PROFILING:\n-            return './packages/shared/forks/ReactFeatureFlags.test-renderer.native.js';\n+            return './packages/shared/forks/ReactFeatureFlags.test-renderer.native-fb.js';\n           case FB_WWW_DEV:\n           case FB_WWW_PROD:\n           case FB_WWW_PROFILING:",
        "date": "2024-04-01T14:56:28Z",
        "msg": "Clarify RTR native feature flags are fb specific (#28679)\n\nMake it more clear that these flags aren't used in RN OSS.\r\n- Rename\r\n`packages/shared/forks/ReactFeatureFlags.test-renderer.native.js` to\r\n`packages/shared/forks/ReactFeatureFlags.test-renderer.native-fb.js`\r\n- Remove RN OSS build cases consuming the feature flags since there is\r\nno RN OSS RTR build."
    },
    {
        "diff": "diff --git a/packages/eslint-plugin-react-hooks/README.md b/a/packages/eslint-plugin-react-hooks/README.md @@ -1,8 +1,8 @@\n # `eslint-plugin-react-hooks`\n \n-This ESLint plugin enforces the [Rules of Hooks](https://reactjs.org/docs/hooks-rules.html).\n+This ESLint plugin enforces the [Rules of Hooks](https://react.dev/reference/rules/rules-of-hooks).\n \n-It is a part of the [Hooks API](https://reactjs.org/docs/hooks-intro.html) for React.\n+It is a part of the [Hooks API](https://react.dev/reference/react/hooks) for React.\n \n ## Installation\n \n@@ -68,7 +68,7 @@ We suggest to use this option **very sparingly, if at all**. Generally saying, w\n \n ## Valid and Invalid Examples\n \n-Please refer to the [Rules of Hooks](https://reactjs.org/docs/hooks-rules.html) documentation and the [Hooks FAQ](https://reactjs.org/docs/hooks-faq.html#what-exactly-do-the-lint-rules-enforce) to learn more about this rule.\n+Please refer to the [Rules of Hooks](https://react.dev/reference/rules/rules-of-hooks) documentation to learn more about this rule.\n \n ## License\n ",
        "date": "2024-04-01T14:52:34Z",
        "msg": "[ESLint] Update README links to react.dev (#28692)\n\nUpdate ESLint plugin README to redirect to https://react.dev for more\r\ndetails (instead of legacy docs)"
    },
    {
        "diff": "diff --git a/packages/react-test-renderer/src/__tests__/ReactTestRenderer-test.js b/a/packages/react-test-renderer/src/__tests__/ReactTestRenderer-test.js @@ -50,6 +50,35 @@ describe('ReactTestRenderer', () => {\n     expect(errors[1].message.includes('indexOf is not a function')).toBe(true);\n   });\n \n+  test('find element by prop with suspended content', async () => {\n+    const neverResolve = new Promise(() => {});\n+\n+    function TestComp({foo}) {\n+      if (foo === 'one') {\n+        throw neverResolve;\n+      } else {\n+        return null;\n+      }\n+    }\n+\n+    const tree = await act(() =>\n+      ReactTestRenderer.create(\n+        <div>\n+          <React.Suspense fallback={null}>\n+            <TestComp foo=\"one\" />\n+          </React.Suspense>\n+          <TestComp foo=\"two\" />\n+        </div>,\n+      ),\n+    );\n+\n+    expect(\n+      tree.root.find(item => {\n+        return item.props.foo === 'two';\n+      }),\n+    ).toBeDefined();\n+  });\n+\n   describe('timed out Suspense hidden subtrees should not be observable via toJSON', () => {\n     let AsyncText;\n     let PendingResources;",
        "date": "2024-03-29T18:01:45Z",
        "msg": "Test for ReactTestRenderer (#28674)\n\nThis is a repro for a breakage that #28672 would introduce for legacy\r\nsync rendering."
    },
    {
        "diff": "diff --git a/packages/react-dom-bindings/src/shared/isUnitlessNumber.js b/a/packages/react-dom-bindings/src/shared/isUnitlessNumber.js @@ -46,6 +46,7 @@ const unitlessNumbers = new Set([\n   'tabSize',\n   'widows',\n   'zIndex',\n+  'zoom',\n   'fillOpacity', // SVG-related properties\n   'floodOpacity',\n   'stopOpacity',\n@@ -60,6 +61,7 @@ const unitlessNumbers = new Set([\n   'MozLineClamp',\n   'msAnimationIterationCount',\n   'msFlex',\n+  'msZoom',\n   'msFlexGrow',\n   'msFlexNegative',\n   'msFlexOrder',",
        "date": "2024-03-29T17:39:12Z",
        "msg": "Revert \"Remove zoom from special cases list\" (#28673)\n\nReverts facebook/react#26631\r\n\r\nThis got specced: https://github.com/w3c/csswg-drafts/pull/9699\r\n\r\nI left msZoom because it seems plausible someone will still be using it\r\nfor backwards compat."
    },
    {
        "diff": "diff --git a/packages/shared/forks/ReactFeatureFlags.native-oss.js b/a/packages/shared/forks/ReactFeatureFlags.native-oss.js @@ -52,7 +52,6 @@ export const enableCacheElement = __NEXT_RN_MAJOR__;\n export const enableTaint = __NEXT_RN_MAJOR__;\n export const enableUnifiedSyncLane = __NEXT_RN_MAJOR__;\n export const enableFizzExternalRuntime = __NEXT_RN_MAJOR__; // DOM-only\n-export const disableJavaScriptURLs = __NEXT_RN_MAJOR__; // DOM-only\n export const enableBinaryFlight = __NEXT_RN_MAJOR__; // DOM-only\n export const enableCustomElementPropertySupport = __NEXT_RN_MAJOR__; // DOM-only\n export const enableServerComponentKeys = __NEXT_RN_MAJOR__;",
        "date": "2024-03-27T13:53:42Z",
        "msg": "Remove orphaned disableJavaScriptURLs reference (#28660)"
    },
    {
        "diff": "diff --git a/packages/react-dom-bindings/src/shared/isUnitlessNumber.js b/a/packages/react-dom-bindings/src/shared/isUnitlessNumber.js @@ -46,7 +46,6 @@ const unitlessNumbers = new Set([\n   'tabSize',\n   'widows',\n   'zIndex',\n-  'zoom',\n   'fillOpacity', // SVG-related properties\n   'floodOpacity',\n   'stopOpacity',\n@@ -61,7 +60,6 @@ const unitlessNumbers = new Set([\n   'MozLineClamp',\n   'msAnimationIterationCount',\n   'msFlex',\n-  'msZoom',\n   'msFlexGrow',\n   'msFlexNegative',\n   'msFlexOrder',",
        "date": "2024-03-26T21:19:02Z",
        "msg": "Remove zoom from special cases list (#26631)\n\nLooks like [it's getting removed\r\nanyway](https://groups.google.com/a/chromium.org/g/blink-dev/c/V7q43bgutbo/m/-7jneTl8CQAJ?pli=1).\r\n\r\nMaybe should wait for a major though."
    },
    {
        "diff": "diff --git a/packages/react-dom/src/client/ReactDOMLegacy.js b/a/packages/react-dom/src/client/ReactDOMLegacy.js @@ -396,6 +396,14 @@ export function unstable_renderSubtreeIntoContainer(\n }\n \n export function unmountComponentAtNode(container: Container): boolean {\n+  if (disableLegacyMode) {\n+    if (__DEV__) {\n+      console.error(\n+        'unmountComponentAtNode is no longer supported in React 18. Use root.unmount() instead.',\n+      );\n+    }\n+    throw new Error('ReactDOM: Unsupported Legacy Mode API.');\n+  }\n   if (!isValidContainerLegacy(container)) {\n     throw new Error('Target container is not a DOM element.');\n   }",
        "date": "2024-03-26T20:32:43Z",
        "msg": "Remove unmountComponentAtNode outside of legacy mode (#28650)"
    },
    {
        "diff": "diff --git a/CHANGELOG-canary.md b/a/CHANGELOG-canary.md @@ -1,3 +1,8 @@\n+## March 22, 2024 (18.3.0-canary-670811593-20240322)\n+\n+## React\n+- Added `useActionState` to replace `useFormState` and added `pending` value ([#28491](https://github.com/facebook/react/pull/28491)).\n+\n ## October 5, 2023 (18.3.0-canary-546178f91-20231005)\n \n ### React",
        "date": "2024-03-26T17:15:08Z",
        "msg": "Add useActionState to CHANGELOG-canary.md (#28632)\n\nCo-authored-by: S\u00e9bastien Lorber <slorber@users.noreply.github.com>"
    },
    {
        "diff": "diff --git a/scripts/rollup/build-all-release-channels.js b/a/scripts/rollup/build-all-release-channels.js @@ -158,18 +158,16 @@ function processStable(buildDir) {\n   }\n \n   if (fs.existsSync(buildDir + '/facebook-www')) {\n-    const hash = crypto.createHash('sha1');\n     for (const fileName of fs.readdirSync(buildDir + '/facebook-www').sort()) {\n       const filePath = buildDir + '/facebook-www/' + fileName;\n       const stats = fs.statSync(filePath);\n       if (!stats.isDirectory()) {\n-        hash.update(fs.readFileSync(filePath));\n         fs.renameSync(filePath, filePath.replace('.js', '.classic.js'));\n       }\n     }\n     updatePlaceholderReactVersionInCompiledArtifacts(\n       buildDir + '/facebook-www',\n-      ReactVersion + '-www-classic-' + hash.digest('hex').slice(0, 8)\n+      ReactVersion + '-www-classic-%FILEHASH%'\n     );\n   }\n \n@@ -224,18 +222,16 @@ function processExperimental(buildDir, version) {\n   }\n \n   if (fs.existsSync(buildDir + '/facebook-www')) {\n-    const hash = crypto.createHash('sha1');\n     for (const fileName of fs.readdirSync(buildDir + '/facebook-www').sort()) {\n       const filePath = buildDir + '/facebook-www/' + fileName;\n       const stats = fs.statSync(filePath);\n       if (!stats.isDirectory()) {\n-        hash.update(fs.readFileSync(filePath));\n         fs.renameSync(filePath, filePath.replace('.js', '.modern.js'));\n       }\n     }\n     updatePlaceholderReactVersionInCompiledArtifacts(\n       buildDir + '/facebook-www',\n-      ReactVersion + '-www-modern-' + hash.digest('hex').slice(0, 8)\n+      ReactVersion + '-www-modern-%FILEHASH%'\n     );\n   }\n ",
        "date": "2024-03-26T16:13:46Z",
        "msg": "Switch facebook-www build version to file content hash (#28633)\n\nUnifies the React version string pattern with RN just to simplify the\r\nbuild script a tiny bit and not have 2 mechanisms for the Meta-internal\r\nbuild."
    },
    {
        "diff": "diff --git a/packages/react-reconciler/src/__tests__/ReactSuspense-test.internal.js b/a/packages/react-reconciler/src/__tests__/ReactSuspense-test.internal.js @@ -289,6 +289,59 @@ describe('ReactSuspense', () => {\n     expect(container.textContent).toEqual('AB');\n   });\n \n+  it('pushes out siblings that render faster than throttle', async () => {\n+    function Foo() {\n+      Scheduler.log('Foo');\n+      return (\n+        <Suspense fallback={<Text text=\"Loading...\" />}>\n+          <AsyncText text=\"A\" ms={290} />\n+          <Suspense fallback={<Text text=\"Loading more...\" />}>\n+            <AsyncText text=\"B\" ms={30} />\n+          </Suspense>\n+        </Suspense>\n+      );\n+    }\n+\n+    setTimeout(async () => {\n+      // TODO: this is dumb, but AsyncText isn't timer based after the act changes.\n+      // Pretend that this is the start of the sibling suspending.\n+      // In a real test, the timer would start when we render B.\n+      setTimeout(async () => {\n+        resolveText('B');\n+      }, 30);\n+\n+      resolveText('A');\n+    }, 290);\n+\n+    // Render an empty shell\n+    const root = ReactTestRenderer.create(<Foo />, {\n+      isConcurrent: true,\n+    });\n+\n+    await waitForAll(['Foo', 'Suspend! [A]', 'Loading...']);\n+    expect(root).toMatchRenderedOutput('Loading...');\n+\n+    // Now resolve A\n+    jest.advanceTimersByTime(290);\n+    await waitFor(['A']);\n+    expect(root).toMatchRenderedOutput('Loading...');\n+\n+    // B starts loading. Parent boundary is in throttle.\n+    // Still shows parent loading under throttle\n+    jest.advanceTimersByTime(10);\n+    await waitForAll(['Suspend! [B]', 'Loading more...']);\n+    expect(root).toMatchRenderedOutput('Loading...');\n+\n+    // !! B could have finished before the throttle, but we show a fallback.\n+    // !! Pushing out the 30ms fetch for B to 300ms.\n+    jest.advanceTimersByTime(300);\n+    await waitFor(['B']);\n+    expect(root).toMatchRenderedOutput('ALoading more...');\n+\n+    await act(() => {});\n+    expect(root).toMatchRenderedOutput('AB');\n+  });\n+\n   it('does not throttle fallback committing for too long', async () => {\n     function Foo() {\n       Scheduler.log('Foo');",
        "date": "2024-03-26T04:02:46Z",
        "msg": "Add test for throttling suspended siblings (#28361)\n\n# Overview\r\n\r\nAdds a test to show the combination of the new throttling behavior and\r\nnot pre-rendering siblings results in pushing out content that could\r\nhave rendered much faster.\r\n\r\n- Without the new throttling, the sibling content would render in 30ms.\r\n- Without removing pre-rendering, the sibling content would render in\r\n0ms.\r\n- With both, the sibling content takes 600ms.\r\n\r\n## Example\r\n\r\n\r\nhttps://github.com/facebook/react/assets/2440089/abd62dc4-93f9-4b7b-a5aa-b795827c1a3a"
    },
    {
        "diff": "diff --git a/yarn.lock b/a/yarn.lock @@ -15791,9 +15791,9 @@ webpack-cli@^5.1.1:\n     webpack-merge \"^5.7.3\"\n \n webpack-dev-middleware@^5.3.1:\n-  version \"5.3.3\"\n-  resolved \"https://registry.yarnpkg.com/webpack-dev-middleware/-/webpack-dev-middleware-5.3.3.tgz#efae67c2793908e7311f1d9b06f2a08dcc97e51f\"\n-  integrity sha512-hj5CYrY0bZLB+eTO+x/j67Pkrquiy7kWepMHmUMoPsmcUaeEnQJqFzHJOyxgWlq746/wUuA64p9ta34Kyb01pA==\n+  version \"5.3.4\"\n+  resolved \"https://registry.yarnpkg.com/webpack-dev-middleware/-/webpack-dev-middleware-5.3.4.tgz#eb7b39281cbce10e104eb2b8bf2b63fce49a3517\"\n+  integrity sha512-BVdTqhhs+0IfoeAf7EoH5WE+exCmqGerHfDM0IL096Px60Tq2Mn9MAbnaGUe6HiMa41KMCYF19gyzZmBcq/o4Q==\n   dependencies:\n     colorette \"^2.0.10\"\n     memfs \"^3.4.3\"",
        "date": "2024-03-25T17:36:03Z",
        "msg": "Bump webpack-dev-middleware from 5.3.3 to 5.3.4 (#28621)\n\nBumps\r\n[webpack-dev-middleware](https://github.com/webpack/webpack-dev-middleware)\r\nfrom 5.3.3 to 5.3.4.\r\n<details>\r\n<summary>Release notes</summary>\r\n<p><em>Sourced from <a\r\nhref=\"https://github.com/webpack/webpack-dev-middleware/releases\">webpack-dev-middleware's\r\nreleases</a>.</em></p>\r\n<blockquote>\r\n<h2>v5.3.4</h2>\r\n<h3><a\r\nhref=\"https://github.com/webpack/webpack-dev-middleware/compare/v5.3.3...v5.3.4\">5.3.4</a>\r\n(2024-03-20)</h3>\r\n<h3>Bug Fixes</h3>\r\n<ul>\r\n<li><strong>security:</strong> do not allow to read files above (<a\r\nhref=\"https://redirect.github.com/webpack/webpack-dev-middleware/issues/1779\">#1779</a>)\r\n(<a\r\nhref=\"https://github.com/webpack/webpack-dev-middleware/commit/189c4ac7d2344ec132a4689e74dc837ec5be0132\">189c4ac</a>)</li>\r\n</ul>\r\n</blockquote>\r\n</details>\r\n<details>\r\n<summary>Changelog</summary>\r\n<p><em>Sourced from <a\r\nhref=\"https://github.com/webpack/webpack-dev-middleware/blob/v5.3.4/CHANGELOG.md\">webpack-dev-middleware's\r\nchangelog</a>.</em></p>\r\n<blockquote>\r\n<h3><a\r\nhref=\"https://github.com/webpack/webpack-dev-middleware/compare/v5.3.3...v5.3.4\">5.3.4</a>\r\n(2024-03-20)</h3>\r\n<h3>Bug Fixes</h3>\r\n<ul>\r\n<li><strong>security:</strong> do not allow to read files above (<a\r\nhref=\"https://redirect.github.com/webpack/webpack-dev-middleware/issues/1779\">#1779</a>)\r\n(<a\r\nhref=\"https://github.com/webpack/webpack-dev-middleware/commit/189c4ac7d2344ec132a4689e74dc837ec5be0132\">189c4ac</a>)</li>\r\n</ul>\r\n</blockquote>\r\n</details>\r\n<details>\r\n<summary>Commits</summary>\r\n<ul>\r\n<li><a\r\nhref=\"https://github.com/webpack/webpack-dev-middleware/commit/86071ead69e946ada25497d3e281923e885229a4\"><code>86071ea</code></a>\r\nchore(release): 5.3.4</li>\r\n<li><a\r\nhref=\"https://github.com/webpack/webpack-dev-middleware/commit/189c4ac7d2344ec132a4689e74dc837ec5be0132\"><code>189c4ac</code></a>\r\nfix(security): do not allow to read files above (<a\r\nhref=\"https://redirect.github.com/webpack/webpack-dev-middleware/issues/1779\">#1779</a>)</li>\r\n<li>See full diff in <a\r\nhref=\"https://github.com/webpack/webpack-dev-middleware/compare/v5.3.3...v5.3.4\">compare\r\nview</a></li>\r\n</ul>\r\n</details>\r\n<br />\r\n\r\n\r\n[![Dependabot compatibility\r\nscore](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=webpack-dev-middleware&package-manager=npm_and_yarn&previous-version=5.3.3&new-version=5.3.4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\r\n\r\nDependabot will resolve any conflicts with this PR as long as you don't\r\nalter it yourself. You can also trigger a rebase manually by commenting\r\n`@dependabot rebase`.\r\n\r\n[//]: # (dependabot-automerge-start)\r\n[//]: # (dependabot-automerge-end)\r\n\r\n---\r\n\r\n<details>\r\n<summary>Dependabot commands and options</summary>\r\n<br />\r\n\r\nYou can trigger Dependabot actions by commenting on this PR:\r\n- `@dependabot rebase` will rebase this PR\r\n- `@dependabot recreate` will recreate this PR, overwriting any edits\r\nthat have been made to it\r\n- `@dependabot merge` will merge this PR after your CI passes on it\r\n- `@dependabot squash and merge` will squash and merge this PR after\r\nyour CI passes on it\r\n- `@dependabot cancel merge` will cancel a previously requested merge\r\nand block automerging\r\n- `@dependabot reopen` will reopen this PR if it is closed\r\n- `@dependabot close` will close this PR and stop Dependabot recreating\r\nit. You can achieve the same result by closing it manually\r\n- `@dependabot show <dependency name> ignore conditions` will show all\r\nof the ignore conditions of the specified dependency\r\n- `@dependabot ignore this major version` will close this PR and stop\r\nDependabot creating any more for this major version (unless you reopen\r\nthe PR or upgrade to it yourself)\r\n- `@dependabot ignore this minor version` will close this PR and stop\r\nDependabot creating any more for this minor version (unless you reopen\r\nthe PR or upgrade to it yourself)\r\n- `@dependabot ignore this dependency` will close this PR and stop\r\nDependabot creating any more for this dependency (unless you reopen the\r\nPR or upgrade to it yourself)\r\nYou can disable automated security fix PRs for this repo from the\r\n[Security Alerts\r\npage](https://github.com/facebook/react/network/alerts).\r\n\r\n</details>\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
    },
    {
        "diff": "diff --git a/packages/react-devtools-shell/src/app/InspectableElements/Contexts.js b/a/packages/react-devtools-shell/src/app/InspectableElements/Contexts.js @@ -273,15 +273,46 @@ class ModernClassContextConsumerWithUpdates extends Component<any> {\n   }\n }\n \n+type LegacyContextState = {\n+  supportsLegacyContext: boolean,\n+};\n+class LegacyContext extends React.Component {\n+  state: LegacyContextState = {supportsLegacyContext: true};\n+\n+  static getDerivedStateFromError(error: any): LegacyContextState {\n+    return {supportsLegacyContext: false};\n+  }\n+\n+  componentDidCatch(error: any, info: any) {\n+    console.info(\n+      'Assuming legacy context is not supported in this React version due to: ',\n+      error,\n+      info,\n+    );\n+  }\n+\n+  render(): React.Node {\n+    if (!this.state.supportsLegacyContext) {\n+      return <p>This version of React does not support legacy context.</p>;\n+    }\n+\n+    return (\n+      <React.Fragment>\n+        <LegacyContextProvider>\n+          <LegacyContextConsumer />\n+        </LegacyContextProvider>\n+        <LegacyContextProviderWithUpdates />\n+      </React.Fragment>\n+    );\n+  }\n+}\n+\n export default function Contexts(): React.Node {\n   return (\n     <div>\n       <h1>Contexts</h1>\n       <ul>\n-        <LegacyContextProvider>\n-          <LegacyContextConsumer />\n-        </LegacyContextProvider>\n-        <LegacyContextProviderWithUpdates />\n+        <LegacyContext />\n         <ModernContext.Provider value={contextData}>\n           <ModernContext.Consumer>\n             {(value: $FlowFixMe) =>",
        "date": "2024-03-25T13:30:08Z",
        "msg": "Guard against legacy context not being supported in DevTools fixture (#28596)"
    },
    {
        "diff": "diff --git a/.github/stale.yml b/a/.github/stale.yml @@ -12,6 +12,7 @@ exemptLabels:\n   - \"Type: Discussion\"\n   - \"Type: Needs Investigation\"\n   - \"Type: Regression\"\n+  - \"Type: Feature Request\"\n # Label to use when marking an issue as stale\n staleLabel: \"Resolution: Stale\"\n issues:",
        "date": "2024-03-24T16:48:12Z",
        "msg": "Add Type: Feature Request to stalebot ignore (#28625)\n\nPrevent issues like https://github.com/facebook/react/issues/12525 from\r\nclosing due to inactivity."
    },
    {
        "diff": "diff --git a/scripts/rollup/build-all-release-channels.js b/a/scripts/rollup/build-all-release-channels.js @@ -239,6 +239,18 @@ function processExperimental(buildDir, version) {\n     );\n   }\n \n+  [\n+    buildDir + '/react-native/implementations/',\n+    buildDir + '/facebook-react-native/',\n+  ].forEach(reactNativeBuildDir => {\n+    if (fs.existsSync(reactNativeBuildDir)) {\n+      updatePlaceholderReactVersionInCompiledArtifacts(\n+        reactNativeBuildDir,\n+        ReactVersion + '-' + canaryChannelLabel + '-%FILEHASH%'\n+      );\n+    }\n+  });\n+\n   // Update remaining placeholders with canary channel version\n   updatePlaceholderReactVersionInCompiledArtifacts(\n     buildDir,",
        "date": "2024-03-19T21:50:24Z",
        "msg": "Also apply content hash for experimental files (#28590)\n\nAlso apply content hash for experimental files\r\n\r\nIn #28582 I missed that experimental files have a copy of this build\r\nfunction setting the version strings."
    },
    {
        "diff": "diff --git a/scripts/rollup/build-all-release-channels.js b/a/scripts/rollup/build-all-release-channels.js @@ -173,25 +173,17 @@ function processStable(buildDir) {\n     );\n   }\n \n-  const reactNativeBuildDir = buildDir + '/react-native/implementations/';\n-  if (fs.existsSync(reactNativeBuildDir)) {\n-    const hash = crypto.createHash('sha1');\n-    for (const fileName of fs.readdirSync(reactNativeBuildDir).sort()) {\n-      const filePath = reactNativeBuildDir + fileName;\n-      const stats = fs.statSync(filePath);\n-      if (!stats.isDirectory()) {\n-        hash.update(fs.readFileSync(filePath));\n-      }\n+  [\n+    buildDir + '/react-native/implementations/',\n+    buildDir + '/facebook-react-native/',\n+  ].forEach(reactNativeBuildDir => {\n+    if (fs.existsSync(reactNativeBuildDir)) {\n+      updatePlaceholderReactVersionInCompiledArtifacts(\n+        reactNativeBuildDir,\n+        ReactVersion + '-' + canaryChannelLabel + '-%FILEHASH%'\n+      );\n     }\n-    updatePlaceholderReactVersionInCompiledArtifacts(\n-      reactNativeBuildDir,\n-      ReactVersion +\n-        '-' +\n-        canaryChannelLabel +\n-        '-' +\n-        hash.digest('hex').slice(0, 8)\n-    );\n-  }\n+  });\n \n   // Update remaining placeholders with canary channel version\n   updatePlaceholderReactVersionInCompiledArtifacts(\n@@ -362,9 +354,11 @@ function updatePlaceholderReactVersionInCompiledArtifacts(\n \n   for (const artifactFilename of artifactFilenames) {\n     const originalText = fs.readFileSync(artifactFilename, 'utf8');\n+    const fileHash = crypto.createHash('sha1');\n+    fileHash.update(originalText);\n     const replacedText = originalText.replaceAll(\n       PLACEHOLDER_REACT_VERSION,\n-      newVersion\n+      newVersion.replace(/%FILEHASH%/g, fileHash.digest('hex').slice(0, 8))\n     );\n     fs.writeFileSync(artifactFilename, replacedText);\n   }",
        "date": "2024-03-19T20:16:34Z",
        "msg": "Change to content hash for RN canary VERSION strings (#28582)\n\nWith this change, the different files in RN will have *different*\r\nhashes. This replaces the git hash and means that the file content\r\n(including version) is only updated when the rest of the file content\r\nactually changes. This should remove \"noop\" changes that need to be\r\nsynced that only update the version string.\r\n\r\nA difference to the www implementation here is (and I'd be looking at\r\nupdating www as well if this lands well) that each file has an\r\nindividual hash instead of a combined content hash. This further reduces\r\nthe number of updated files and I couldn't find a reason we need to have\r\nthese in sync. The best I can gather is that this hash is used so folks\r\ndon't directly compare version string and make future updates harder."
    },
    {
        "diff": "diff --git a/packages/react-debug-tools/src/__tests__/ReactHooksInspectionIntegration-test.js b/a/packages/react-debug-tools/src/__tests__/ReactHooksInspectionIntegration-test.js @@ -1244,7 +1244,7 @@ describe('ReactHooksInspectionIntegration', () => {\n         <Context.Provider value=\"provided\">\n           <Foo />\n         </Context.Provider>,\n-        {isConcurrent: true},\n+        {unstable_isConcurrent: true},\n       );\n     });\n     let childFiber = renderer.root.findByType(Foo)._currentFiber();",
        "date": "2024-03-18T17:15:23Z",
        "msg": "Fix ReactHooksInspectionIntegration-test (#28577)\n\nResolve conflict between #28508 and #28546"
    },
    {
        "diff": "diff --git a/fixtures/ssr/yarn.lock b/a/fixtures/ssr/yarn.lock @@ -2771,9 +2771,9 @@ flatten@^1.0.2:\n   integrity sha512-dVsPA/UwQ8+2uoFe5GHtiBMu48dWLTdsuEd7CKGlZlD78r1TTWBvDuFaFGKCo/ZfEr95Uk56vZoX86OsHkUeIg==\n \n follow-redirects@^1.0.0:\n-  version \"1.15.4\"\n-  resolved \"https://registry.yarnpkg.com/follow-redirects/-/follow-redirects-1.15.4.tgz#cdc7d308bf6493126b17ea2191ea0ccf3e535adf\"\n-  integrity sha512-Cr4D/5wlrb0z9dgERpUL3LrmPKVDsETIJhaCMeDfuFYcqa5bldGV6wBsAN6X/vxlXQtFBMrXdXxdL8CbDTGniw==\n+  version \"1.15.6\"\n+  resolved \"https://registry.yarnpkg.com/follow-redirects/-/follow-redirects-1.15.6.tgz#7f815c0cda4249c74ff09e95ef97c23b5fd0399b\"\n+  integrity sha512-wWN62YITEaOpSK584EZXJafH1AGpO8RVgElfkuXbTOrPX4fIfOyEpW/CsiNd8JdYrAoOvafRTOEnvsO++qCqFA==\n \n for-in@^1.0.1, for-in@^1.0.2:\n   version \"1.0.2\"",
        "date": "2024-03-18T15:59:57Z",
        "msg": "Bump follow-redirects from 1.15.4 to 1.15.6 in /fixtures/ssr (#28571)\n\nBumps\r\n[follow-redirects](https://github.com/follow-redirects/follow-redirects)\r\nfrom 1.15.4 to 1.15.6.\r\n<details>\r\n<summary>Commits</summary>\r\n<ul>\r\n<li><a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/commit/35a517c5861d79dc8bff7db8626013d20b711b06\"><code>35a517c</code></a>\r\nRelease version 1.15.6 of the npm package.</li>\r\n<li><a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/commit/c4f847f85176991f95ab9c88af63b1294de8649b\"><code>c4f847f</code></a>\r\nDrop Proxy-Authorization across hosts.</li>\r\n<li><a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/commit/8526b4a1b2ab3a2e4044299377df623a661caa76\"><code>8526b4a</code></a>\r\nUse GitHub for disclosure.</li>\r\n<li><a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/commit/b1677ce00110ee50dc5da576751d39b281fc4944\"><code>b1677ce</code></a>\r\nRelease version 1.15.5 of the npm package.</li>\r\n<li><a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/commit/d8914f7982403ea096b39bd594a00ee9d3b7e224\"><code>d8914f7</code></a>\r\nPreserve fragment in responseUrl.</li>\r\n<li>See full diff in <a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/compare/v1.15.4...v1.15.6\">compare\r\nview</a></li>\r\n</ul>\r\n</details>\r\n<br />\r\n\r\n\r\n[![Dependabot compatibility\r\nscore](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=follow-redirects&package-manager=npm_and_yarn&previous-version=1.15.4&new-version=1.15.6)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\r\n\r\nDependabot will resolve any conflicts with this PR as long as you don't\r\nalter it yourself. You can also trigger a rebase manually by commenting\r\n`@dependabot rebase`.\r\n\r\n[//]: # (dependabot-automerge-start)\r\n[//]: # (dependabot-automerge-end)\r\n\r\n---\r\n\r\n<details>\r\n<summary>Dependabot commands and options</summary>\r\n<br />\r\n\r\nYou can trigger Dependabot actions by commenting on this PR:\r\n- `@dependabot rebase` will rebase this PR\r\n- `@dependabot recreate` will recreate this PR, overwriting any edits\r\nthat have been made to it\r\n- `@dependabot merge` will merge this PR after your CI passes on it\r\n- `@dependabot squash and merge` will squash and merge this PR after\r\nyour CI passes on it\r\n- `@dependabot cancel merge` will cancel a previously requested merge\r\nand block automerging\r\n- `@dependabot reopen` will reopen this PR if it is closed\r\n- `@dependabot close` will close this PR and stop Dependabot recreating\r\nit. You can achieve the same result by closing it manually\r\n- `@dependabot show <dependency name> ignore conditions` will show all\r\nof the ignore conditions of the specified dependency\r\n- `@dependabot ignore this major version` will close this PR and stop\r\nDependabot creating any more for this major version (unless you reopen\r\nthe PR or upgrade to it yourself)\r\n- `@dependabot ignore this minor version` will close this PR and stop\r\nDependabot creating any more for this minor version (unless you reopen\r\nthe PR or upgrade to it yourself)\r\n- `@dependabot ignore this dependency` will close this PR and stop\r\nDependabot creating any more for this dependency (unless you reopen the\r\nPR or upgrade to it yourself)\r\nYou can disable automated security fix PRs for this repo from the\r\n[Security Alerts\r\npage](https://github.com/facebook/react/network/alerts).\r\n\r\n</details>\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
    },
    {
        "diff": "diff --git a/fixtures/concurrent/time-slicing/yarn.lock b/a/fixtures/concurrent/time-slicing/yarn.lock @@ -3372,9 +3372,9 @@ flatten@^1.0.2:\n   integrity sha512-dVsPA/UwQ8+2uoFe5GHtiBMu48dWLTdsuEd7CKGlZlD78r1TTWBvDuFaFGKCo/ZfEr95Uk56vZoX86OsHkUeIg==\n \n follow-redirects@^1.0.0:\n-  version \"1.15.4\"\n-  resolved \"https://registry.yarnpkg.com/follow-redirects/-/follow-redirects-1.15.4.tgz#cdc7d308bf6493126b17ea2191ea0ccf3e535adf\"\n-  integrity sha512-Cr4D/5wlrb0z9dgERpUL3LrmPKVDsETIJhaCMeDfuFYcqa5bldGV6wBsAN6X/vxlXQtFBMrXdXxdL8CbDTGniw==\n+  version \"1.15.6\"\n+  resolved \"https://registry.yarnpkg.com/follow-redirects/-/follow-redirects-1.15.6.tgz#7f815c0cda4249c74ff09e95ef97c23b5fd0399b\"\n+  integrity sha512-wWN62YITEaOpSK584EZXJafH1AGpO8RVgElfkuXbTOrPX4fIfOyEpW/CsiNd8JdYrAoOvafRTOEnvsO++qCqFA==\n \n for-in@^1.0.1, for-in@^1.0.2:\n   version \"1.0.2\"",
        "date": "2024-03-18T15:56:04Z",
        "msg": "Bump follow-redirects from 1.15.4 to 1.15.6 in /fixtures/concurrent/time-slicing (#28572)\n\nBumps\r\n[follow-redirects](https://github.com/follow-redirects/follow-redirects)\r\nfrom 1.15.4 to 1.15.6.\r\n<details>\r\n<summary>Commits</summary>\r\n<ul>\r\n<li><a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/commit/35a517c5861d79dc8bff7db8626013d20b711b06\"><code>35a517c</code></a>\r\nRelease version 1.15.6 of the npm package.</li>\r\n<li><a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/commit/c4f847f85176991f95ab9c88af63b1294de8649b\"><code>c4f847f</code></a>\r\nDrop Proxy-Authorization across hosts.</li>\r\n<li><a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/commit/8526b4a1b2ab3a2e4044299377df623a661caa76\"><code>8526b4a</code></a>\r\nUse GitHub for disclosure.</li>\r\n<li><a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/commit/b1677ce00110ee50dc5da576751d39b281fc4944\"><code>b1677ce</code></a>\r\nRelease version 1.15.5 of the npm package.</li>\r\n<li><a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/commit/d8914f7982403ea096b39bd594a00ee9d3b7e224\"><code>d8914f7</code></a>\r\nPreserve fragment in responseUrl.</li>\r\n<li>See full diff in <a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/compare/v1.15.4...v1.15.6\">compare\r\nview</a></li>\r\n</ul>\r\n</details>\r\n<br />\r\n\r\n\r\n[![Dependabot compatibility\r\nscore](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=follow-redirects&package-manager=npm_and_yarn&previous-version=1.15.4&new-version=1.15.6)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\r\n\r\nDependabot will resolve any conflicts with this PR as long as you don't\r\nalter it yourself. You can also trigger a rebase manually by commenting\r\n`@dependabot rebase`.\r\n\r\n[//]: # (dependabot-automerge-start)\r\n[//]: # (dependabot-automerge-end)\r\n\r\n---\r\n\r\n<details>\r\n<summary>Dependabot commands and options</summary>\r\n<br />\r\n\r\nYou can trigger Dependabot actions by commenting on this PR:\r\n- `@dependabot rebase` will rebase this PR\r\n- `@dependabot recreate` will recreate this PR, overwriting any edits\r\nthat have been made to it\r\n- `@dependabot merge` will merge this PR after your CI passes on it\r\n- `@dependabot squash and merge` will squash and merge this PR after\r\nyour CI passes on it\r\n- `@dependabot cancel merge` will cancel a previously requested merge\r\nand block automerging\r\n- `@dependabot reopen` will reopen this PR if it is closed\r\n- `@dependabot close` will close this PR and stop Dependabot recreating\r\nit. You can achieve the same result by closing it manually\r\n- `@dependabot show <dependency name> ignore conditions` will show all\r\nof the ignore conditions of the specified dependency\r\n- `@dependabot ignore this major version` will close this PR and stop\r\nDependabot creating any more for this major version (unless you reopen\r\nthe PR or upgrade to it yourself)\r\n- `@dependabot ignore this minor version` will close this PR and stop\r\nDependabot creating any more for this minor version (unless you reopen\r\nthe PR or upgrade to it yourself)\r\n- `@dependabot ignore this dependency` will close this PR and stop\r\nDependabot creating any more for this dependency (unless you reopen the\r\nPR or upgrade to it yourself)\r\nYou can disable automated security fix PRs for this repo from the\r\n[Security Alerts\r\npage](https://github.com/facebook/react/network/alerts).\r\n\r\n</details>\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
    },
    {
        "diff": "diff --git a/fixtures/dom/yarn.lock b/a/fixtures/dom/yarn.lock @@ -3366,9 +3366,9 @@ flatten@^1.0.2:\n   integrity sha512-dVsPA/UwQ8+2uoFe5GHtiBMu48dWLTdsuEd7CKGlZlD78r1TTWBvDuFaFGKCo/ZfEr95Uk56vZoX86OsHkUeIg==\n \n follow-redirects@^1.0.0:\n-  version \"1.13.0\"\n-  resolved \"https://registry.yarnpkg.com/follow-redirects/-/follow-redirects-1.13.0.tgz#b42e8d93a2a7eea5ed88633676d6597bc8e384db\"\n-  integrity sha512-aq6gF1BEKje4a9i9+5jimNFIpq4Q1WiwBToeRK5NvZBd/TRsmW8BsJfOEGkr76TbOyPVD3OVDN910EcUNtRYEA==\n+  version \"1.15.6\"\n+  resolved \"https://registry.yarnpkg.com/follow-redirects/-/follow-redirects-1.15.6.tgz#7f815c0cda4249c74ff09e95ef97c23b5fd0399b\"\n+  integrity sha512-wWN62YITEaOpSK584EZXJafH1AGpO8RVgElfkuXbTOrPX4fIfOyEpW/CsiNd8JdYrAoOvafRTOEnvsO++qCqFA==\n \n for-in@^1.0.1, for-in@^1.0.2:\n   version \"1.0.2\"",
        "date": "2024-03-18T15:55:56Z",
        "msg": "Bump follow-redirects from 1.13.0 to 1.15.6 in /fixtures/dom (#28560)\n\nBumps\r\n[follow-redirects](https://github.com/follow-redirects/follow-redirects)\r\nfrom 1.13.0 to 1.15.6.\r\n<details>\r\n<summary>Commits</summary>\r\n<ul>\r\n<li><a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/commit/35a517c5861d79dc8bff7db8626013d20b711b06\"><code>35a517c</code></a>\r\nRelease version 1.15.6 of the npm package.</li>\r\n<li><a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/commit/c4f847f85176991f95ab9c88af63b1294de8649b\"><code>c4f847f</code></a>\r\nDrop Proxy-Authorization across hosts.</li>\r\n<li><a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/commit/8526b4a1b2ab3a2e4044299377df623a661caa76\"><code>8526b4a</code></a>\r\nUse GitHub for disclosure.</li>\r\n<li><a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/commit/b1677ce00110ee50dc5da576751d39b281fc4944\"><code>b1677ce</code></a>\r\nRelease version 1.15.5 of the npm package.</li>\r\n<li><a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/commit/d8914f7982403ea096b39bd594a00ee9d3b7e224\"><code>d8914f7</code></a>\r\nPreserve fragment in responseUrl.</li>\r\n<li><a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/commit/65858205e59f1e23c9bf173348a7a7cbb8ac47f5\"><code>6585820</code></a>\r\nRelease version 1.15.4 of the npm package.</li>\r\n<li><a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/commit/7a6567e16dfa9ad18a70bfe91784c28653fbf19d\"><code>7a6567e</code></a>\r\nDisallow bracketed hostnames.</li>\r\n<li><a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/commit/05629af696588b90d64e738bc2e809a97a5f92fc\"><code>05629af</code></a>\r\nPrefer native URL instead of deprecated url.parse.</li>\r\n<li><a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/commit/1cba8e85fa73f563a439fe460cf028688e4358df\"><code>1cba8e8</code></a>\r\nPrefer native URL instead of legacy url.resolve.</li>\r\n<li><a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/commit/72bc2a4229bc18dc9fbd57c60579713e6264cb92\"><code>72bc2a4</code></a>\r\nSimplify _processResponse error handling.</li>\r\n<li>Additional commits viewable in <a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/compare/v1.13.0...v1.15.6\">compare\r\nview</a></li>\r\n</ul>\r\n</details>\r\n<br />\r\n\r\n\r\n[![Dependabot compatibility\r\nscore](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=follow-redirects&package-manager=npm_and_yarn&previous-version=1.13.0&new-version=1.15.6)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\r\n\r\nDependabot will resolve any conflicts with this PR as long as you don't\r\nalter it yourself. You can also trigger a rebase manually by commenting\r\n`@dependabot rebase`.\r\n\r\n[//]: # (dependabot-automerge-start)\r\n[//]: # (dependabot-automerge-end)\r\n\r\n---\r\n\r\n<details>\r\n<summary>Dependabot commands and options</summary>\r\n<br />\r\n\r\nYou can trigger Dependabot actions by commenting on this PR:\r\n- `@dependabot rebase` will rebase this PR\r\n- `@dependabot recreate` will recreate this PR, overwriting any edits\r\nthat have been made to it\r\n- `@dependabot merge` will merge this PR after your CI passes on it\r\n- `@dependabot squash and merge` will squash and merge this PR after\r\nyour CI passes on it\r\n- `@dependabot cancel merge` will cancel a previously requested merge\r\nand block automerging\r\n- `@dependabot reopen` will reopen this PR if it is closed\r\n- `@dependabot close` will close this PR and stop Dependabot recreating\r\nit. You can achieve the same result by closing it manually\r\n- `@dependabot show <dependency name> ignore conditions` will show all\r\nof the ignore conditions of the specified dependency\r\n- `@dependabot ignore this major version` will close this PR and stop\r\nDependabot creating any more for this major version (unless you reopen\r\nthe PR or upgrade to it yourself)\r\n- `@dependabot ignore this minor version` will close this PR and stop\r\nDependabot creating any more for this minor version (unless you reopen\r\nthe PR or upgrade to it yourself)\r\n- `@dependabot ignore this dependency` will close this PR and stop\r\nDependabot creating any more for this dependency (unless you reopen the\r\nPR or upgrade to it yourself)\r\nYou can disable automated security fix PRs for this repo from the\r\n[Security Alerts\r\npage](https://github.com/facebook/react/network/alerts).\r\n\r\n</details>\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
    },
    {
        "diff": "diff --git a/yarn.lock b/a/yarn.lock @@ -6997,7 +6997,6 @@ eslint-plugin-no-unsanitized@3.1.2:\n \n \"eslint-plugin-react-internal@link:./scripts/eslint-rules\":\n   version \"0.0.0\"\n-  uid \"\"\n \n eslint-plugin-react@^6.7.1:\n   version \"6.10.3\"\n@@ -7977,9 +7976,9 @@ fluent-syntax@0.13.0:\n   integrity sha512-0Bk1AsliuYB550zr4JV9AYhsETsD3ELXUQzdXGJfIc1Ni/ukAfBdQInDhVMYJUaT2QxoamNslwkYF7MlOrPUwg==\n \n follow-redirects@^1.0.0:\n-  version \"1.15.4\"\n-  resolved \"https://registry.yarnpkg.com/follow-redirects/-/follow-redirects-1.15.4.tgz#cdc7d308bf6493126b17ea2191ea0ccf3e535adf\"\n-  integrity sha512-Cr4D/5wlrb0z9dgERpUL3LrmPKVDsETIJhaCMeDfuFYcqa5bldGV6wBsAN6X/vxlXQtFBMrXdXxdL8CbDTGniw==\n+  version \"1.15.6\"\n+  resolved \"https://registry.yarnpkg.com/follow-redirects/-/follow-redirects-1.15.6.tgz#7f815c0cda4249c74ff09e95ef97c23b5fd0399b\"\n+  integrity sha512-wWN62YITEaOpSK584EZXJafH1AGpO8RVgElfkuXbTOrPX4fIfOyEpW/CsiNd8JdYrAoOvafRTOEnvsO++qCqFA==\n \n for-in@^1.0.2:\n   version \"1.0.2\"",
        "date": "2024-03-18T15:49:53Z",
        "msg": "Bump follow-redirects from 1.15.4 to 1.15.6 (#28573)\n\nBumps\r\n[follow-redirects](https://github.com/follow-redirects/follow-redirects)\r\nfrom 1.15.4 to 1.15.6.\r\n<details>\r\n<summary>Commits</summary>\r\n<ul>\r\n<li><a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/commit/35a517c5861d79dc8bff7db8626013d20b711b06\"><code>35a517c</code></a>\r\nRelease version 1.15.6 of the npm package.</li>\r\n<li><a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/commit/c4f847f85176991f95ab9c88af63b1294de8649b\"><code>c4f847f</code></a>\r\nDrop Proxy-Authorization across hosts.</li>\r\n<li><a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/commit/8526b4a1b2ab3a2e4044299377df623a661caa76\"><code>8526b4a</code></a>\r\nUse GitHub for disclosure.</li>\r\n<li><a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/commit/b1677ce00110ee50dc5da576751d39b281fc4944\"><code>b1677ce</code></a>\r\nRelease version 1.15.5 of the npm package.</li>\r\n<li><a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/commit/d8914f7982403ea096b39bd594a00ee9d3b7e224\"><code>d8914f7</code></a>\r\nPreserve fragment in responseUrl.</li>\r\n<li>See full diff in <a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/compare/v1.15.4...v1.15.6\">compare\r\nview</a></li>\r\n</ul>\r\n</details>\r\n<br />\r\n\r\n\r\n[![Dependabot compatibility\r\nscore](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=follow-redirects&package-manager=npm_and_yarn&previous-version=1.15.4&new-version=1.15.6)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\r\n\r\nDependabot will resolve any conflicts with this PR as long as you don't\r\nalter it yourself. You can also trigger a rebase manually by commenting\r\n`@dependabot rebase`.\r\n\r\n[//]: # (dependabot-automerge-start)\r\n[//]: # (dependabot-automerge-end)\r\n\r\n---\r\n\r\n<details>\r\n<summary>Dependabot commands and options</summary>\r\n<br />\r\n\r\nYou can trigger Dependabot actions by commenting on this PR:\r\n- `@dependabot rebase` will rebase this PR\r\n- `@dependabot recreate` will recreate this PR, overwriting any edits\r\nthat have been made to it\r\n- `@dependabot merge` will merge this PR after your CI passes on it\r\n- `@dependabot squash and merge` will squash and merge this PR after\r\nyour CI passes on it\r\n- `@dependabot cancel merge` will cancel a previously requested merge\r\nand block automerging\r\n- `@dependabot reopen` will reopen this PR if it is closed\r\n- `@dependabot close` will close this PR and stop Dependabot recreating\r\nit. You can achieve the same result by closing it manually\r\n- `@dependabot show <dependency name> ignore conditions` will show all\r\nof the ignore conditions of the specified dependency\r\n- `@dependabot ignore this major version` will close this PR and stop\r\nDependabot creating any more for this major version (unless you reopen\r\nthe PR or upgrade to it yourself)\r\n- `@dependabot ignore this minor version` will close this PR and stop\r\nDependabot creating any more for this minor version (unless you reopen\r\nthe PR or upgrade to it yourself)\r\n- `@dependabot ignore this dependency` will close this PR and stop\r\nDependabot creating any more for this dependency (unless you reopen the\r\nPR or upgrade to it yourself)\r\nYou can disable automated security fix PRs for this repo from the\r\n[Security Alerts\r\npage](https://github.com/facebook/react/network/alerts).\r\n\r\n</details>\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
    },
    {
        "diff": "diff --git a/packages/scheduler/src/__tests__/Scheduler-test.js b/a/packages/scheduler/src/__tests__/Scheduler-test.js @@ -247,7 +247,8 @@ describe('SchedulerBrowser', () => {\n     });\n     runtime.assertLog(['Post Message']);\n     cancelCallback(task);\n-    runtime.assertLog([]);\n+    runtime.fireMessageEvent();\n+    runtime.assertLog(['Message Event']);\n   });\n \n   it('throws when a task errors then continues in a new event', () => {",
        "date": "2024-03-15T20:21:46Z",
        "msg": "Fix log assertion in cancels tasks in Scheduler-test (#28562)"
    },
    {
        "diff": "diff --git a/packages/shared/forks/ReactFeatureFlags.native-oss.js b/a/packages/shared/forks/ReactFeatureFlags.native-oss.js @@ -10,6 +10,13 @@\n import typeof * as FeatureFlagsType from 'shared/ReactFeatureFlags';\n import typeof * as ExportsType from './ReactFeatureFlags.native-oss';\n \n+// -----------------------------------------------------------------------------\n+// Ready for next major.\n+//\n+// Alias __NEXT_MAJOR__ to false for easier skimming.\n+// -----------------------------------------------------------------------------\n+const __NEXT_MAJOR__ = false;\n+\n export const debugRenderPhaseSideEffectsForStrictMode = __DEV__;\n export const enableDebugTracing = false;\n export const enableAsyncDebugInfo = false;\n@@ -18,7 +25,7 @@ export const enableProfilerTimer = __PROFILE__;\n export const enableProfilerCommitHooks = __PROFILE__;\n export const enableProfilerNestedUpdatePhase = __PROFILE__;\n export const enableUpdaterTracking = __PROFILE__;\n-export const enableCache = true;\n+export const enableCache = __NEXT_MAJOR__;\n export const enableLegacyCache = false;\n export const enableCacheElement = true;\n export const enableFetchInstrumentation = false;",
        "date": "2024-03-15T18:02:46Z",
        "msg": "Revert rollout state of enableCache in React Native to next major only (#28565)\n\n## Summary\r\n\r\nWe're working on enabling the use of microtasks in React Native by\r\ndefault when using the new architecture. To enable this we need to\r\nsynchronize the RN renderers from React, but doing this causes an error\r\nbecause the renderers now rely on an object defined in\r\n`React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED`\r\n(`ReactCurrentCache`) that's hasn't been released as a stable version\r\nyet (cache).\r\n\r\nThis reverts the change done in #28519 to avoid enabling the cache API\r\nin RN until we release a new version of React in npm.\r\n\r\n## How did you test this change?\r\n\r\nManually built the RN renderer, copied it to the RN repository and\r\ntested e2e in RNTester."
    },
    {
        "diff": "diff --git a/packages/eslint-plugin-react-hooks/__tests__/ESLintRuleExhaustiveDeps-test.js b/a/packages/eslint-plugin-react-hooks/__tests__/ESLintRuleExhaustiveDeps-test.js @@ -7774,6 +7774,16 @@ const testsTypescript = {\n         }\n       `,\n     },\n+    {\n+      code: normalizeIndent`\n+        function useMyThing<T>(): void {\n+          useEffect(() => {\n+            let foo: T;\n+            console.log(foo);\n+          }, []);\n+        }\n+      `,\n+    },\n   ],\n   invalid: [\n     {",
        "date": "2024-03-14T14:41:37Z",
        "msg": "Add passing exhaustive-deps test for type parameters in TypeScript (#20432)"
    },
    {
        "diff": "diff --git a/packages/react-dom/src/__tests__/refs-destruction-test.js b/a/packages/react-dom/src/__tests__/refs-destruction-test.js @@ -12,7 +12,6 @@\n let React;\n let ReactDOM;\n let ReactDOMClient;\n-let ReactTestUtils;\n let TestComponent;\n let act;\n let theInnerDivRef;\n@@ -25,7 +24,6 @@ describe('refs-destruction', () => {\n     React = require('react');\n     ReactDOM = require('react-dom');\n     ReactDOMClient = require('react-dom/client');\n-    ReactTestUtils = require('react-dom/test-utils');\n     act = require('internal-test-utils').act;\n \n     class ClassComponent extends React.Component {\n@@ -75,7 +73,7 @@ describe('refs-destruction', () => {\n       root.render(<TestComponent />);\n     });\n \n-    expect(ReactTestUtils.isDOMComponent(theInnerDivRef.current)).toBe(true);\n+    expect(theInnerDivRef.current).toBeInstanceOf(Element);\n     expect(theInnerClassComponentRef.current).toBeTruthy();\n \n     root.unmount();\n@@ -91,7 +89,7 @@ describe('refs-destruction', () => {\n       root.render(<TestComponent />);\n     });\n \n-    expect(ReactTestUtils.isDOMComponent(theInnerDivRef.current)).toBe(true);\n+    expect(theInnerDivRef.current).toBeInstanceOf(Element);\n     expect(theInnerClassComponentRef.current).toBeTruthy();\n \n     await act(async () => {\n@@ -109,7 +107,7 @@ describe('refs-destruction', () => {\n       root.render(<TestComponent />);\n     });\n \n-    expect(ReactTestUtils.isDOMComponent(theInnerDivRef.current)).toBe(true);\n+    expect(theInnerDivRef.current).toBeInstanceOf(Element);\n     expect(theInnerClassComponentRef.current).toBeTruthy();\n \n     await act(async () => {",
        "date": "2024-03-11T21:11:40Z",
        "msg": "Remove ReactTestUtils from refs-destruction-test (#28532)\n\n```diff\r\n-expect(ReactTestUtils.isDOMComponent(maybeElement)).toBe(true);\r\n+expect(maybeElement).toBeInstanceOf(Element);\r\n```\r\n\r\nIt's not equivalent since `isDOMComponent` checks `maybeElement.nodeType\r\n=== Element.ELEMENT_NODE && !!maybeElement.tagName` but `instanceof`\r\ncheck seems sufficient here. Checking `nodeType` is mostly for\r\ncross-realm checks and checking falsy `tagName` seems like a check\r\nspecifically for incomplete DOM implementations because tagName can't be\r\nempty by spec I believe."
    },
    {
        "diff": "diff --git a/packages/react-debug-tools/src/__tests__/ReactDevToolsHooksIntegration-test.js b/a/packages/react-debug-tools/src/__tests__/ReactDevToolsHooksIntegration-test.js @@ -43,7 +43,7 @@ describe('React hooks DevTools integration', () => {\n     const InternalTestUtils = require('internal-test-utils');\n     waitForAll = InternalTestUtils.waitForAll;\n \n-    act = ReactTestRenderer.act;\n+    act = require('internal-test-utils').act;\n   });\n \n   it('should support editing useState hooks', async () => {\n@@ -55,7 +55,12 @@ describe('React hooks DevTools integration', () => {\n       return <div>count:{count}</div>;\n     }\n \n-    const renderer = ReactTestRenderer.create(<MyComponent />);\n+    let renderer;\n+    await act(() => {\n+      renderer = ReactTestRenderer.create(<MyComponent />, {\n+        unstable_isConcurrent: true,\n+      });\n+    });\n     expect(renderer.toJSON()).toEqual({\n       type: 'div',\n       props: {},\n@@ -107,7 +112,12 @@ describe('React hooks DevTools integration', () => {\n       );\n     }\n \n-    const renderer = ReactTestRenderer.create(<MyComponent />);\n+    let renderer;\n+    await act(() => {\n+      renderer = ReactTestRenderer.create(<MyComponent />, {\n+        unstable_isConcurrent: true,\n+      });\n+    });\n     expect(renderer.toJSON()).toEqual({\n       type: 'div',\n       props: {},\n@@ -155,7 +165,12 @@ describe('React hooks DevTools integration', () => {\n       return <div>count:{count}</div>;\n     }\n \n-    const renderer = ReactTestRenderer.create(<MyComponent />);\n+    let renderer;\n+    await act(() => {\n+      renderer = ReactTestRenderer.create(<MyComponent />, {\n+        unstable_isConcurrent: true,\n+      });\n+    });\n     expect(renderer.toJSON()).toEqual({\n       type: 'div',\n       props: {},\n@@ -192,14 +207,17 @@ describe('React hooks DevTools integration', () => {\n     function MyComponent() {\n       return 'Done';\n     }\n-\n-    const renderer = ReactTestRenderer.create(\n-      <div>\n-        <React.Suspense fallback={'Loading'}>\n-          <MyComponent />\n-        </React.Suspense>\n-      </div>,\n-    );\n+    let renderer;\n+    await act(() => {\n+      renderer = ReactTestRenderer.create(\n+        <div>\n+          <React.Suspense fallback={'Loading'}>\n+            <MyComponent />\n+          </React.Suspense>\n+        </div>,\n+        {unstable_isConcurrent: true},\n+      );\n+    });\n     const fiber = renderer.root._currentFiber().child;\n     if (__DEV__) {\n       // First render was locked\n@@ -236,7 +254,6 @@ describe('React hooks DevTools integration', () => {\n     }\n   });\n \n-  // @gate __DEV__\n   it('should support overriding suspense in concurrent mode', async () => {\n     if (__DEV__) {\n       // Lock the first render\n@@ -254,7 +271,7 @@ describe('React hooks DevTools integration', () => {\n             <MyComponent />\n           </React.Suspense>\n         </div>,\n-        {isConcurrent: true},\n+        {unstable_isConcurrent: true},\n       ),\n     );\n ",
        "date": "2024-03-11T19:06:35Z",
        "msg": "Concurrent rendering in ReactDevToolsHooksIntegration-test (#28522)\n\n## Summary\r\n\r\nWe need to unblock flipping the default for RTR to be concurrent\r\nrendering. Update ReactDevToolsHooksIntegration-test to use\r\n`unstable_isConcurrent` in place.\r\n\r\n## How did you test this change?\r\n\r\n`yarn test\r\npackages/react-debug-tools/src/__tests__/ReactDevToolsHooksIntegration-test.js`"
    },
    {
        "diff": "diff --git a/packages/react-debug-tools/src/__tests__/ReactHooksInspection-test.js b/a/packages/react-debug-tools/src/__tests__/ReactHooksInspection-test.js @@ -584,24 +584,29 @@ describe('ReactHooksInspection', () => {\n       return <div>{value}</div>;\n     }\n     const tree = ReactDebugTools.inspectHooks(Foo, {});\n-    expect(normalizeSourceLoc(tree)).toMatchInlineSnapshot(`\n-      [\n-        {\n-          \"debugInfo\": null,\n-          \"hookSource\": {\n-            \"columnNumber\": 0,\n-            \"fileName\": \"**\",\n-            \"functionName\": \"Foo\",\n-            \"lineNumber\": 0,\n-          },\n-          \"id\": null,\n-          \"isStateEditable\": false,\n-          \"name\": \"Unresolved\",\n-          \"subHooks\": [],\n-          \"value\": Promise {},\n+    const results = normalizeSourceLoc(tree);\n+    expect(results).toHaveLength(1);\n+    expect(results[0]).toMatchInlineSnapshot(\n+      {\n+        value: expect.any(Promise),\n+      },\n+      `\n+      {\n+        \"debugInfo\": null,\n+        \"hookSource\": {\n+          \"columnNumber\": 0,\n+          \"fileName\": \"**\",\n+          \"functionName\": \"Foo\",\n+          \"lineNumber\": 0,\n         },\n-      ]\n-    `);\n+        \"id\": null,\n+        \"isStateEditable\": false,\n+        \"name\": \"Unresolved\",\n+        \"subHooks\": [],\n+        \"value\": Any<Promise>,\n+      }\n+    `,\n+    );\n   });\n \n   describe('useDebugValue', () => {",
        "date": "2024-03-07T19:22:42Z",
        "msg": "Fix ReactHooksInspection-test.js (#28520)\n\n## Summary\r\n\r\nCurrently, `ReactHooksInspection-test.js` fails because something is\r\npolluting the resulting `Promise` with symbol properties. This changes\r\nthe unit test to be more resilient to such symbol properties.\r\n\r\n## How did you test this change?\r\n\r\nRan the following successfully:\r\n\r\n```\r\n$ yarn test\r\n```"
    },
    {
        "diff": "diff --git a/packages/react-devtools-inline/__tests__/__e2e__/components.test.js b/a/packages/react-devtools-inline/__tests__/__e2e__/components.test.js @@ -59,7 +59,7 @@ test.describe('Components', () => {\n     const isEditableValue = semver.gte(config.use.react_version, '16.8.0');\n \n     // Then read the inspected values.\n-    const [propName, propValue, sourceText] = await page.evaluate(\n+    const [propName, propValue] = await page.evaluate(\n       isEditable => {\n         const {createTestNameSelector, findAllNodes} =\n           window.REACT_DOM_DEVTOOLS;\n@@ -85,21 +85,41 @@ test.describe('Components', () => {\n           createTestNameSelector('InspectedElementPropsTree'),\n           createTestNameSelector(selectorValue),\n         ])[0];\n-        const source = findAllNodes(container, [\n-          createTestNameSelector('InspectedElementView-Source'),\n-        ])[0];\n         const value = isEditable.value\n           ? valueElement.value\n           : valueElement.innerText;\n \n-        return [name, value, source.innerText];\n+        return [name, value];\n       },\n       {name: isEditableName, value: isEditableValue}\n     );\n \n     expect(propName).toBe('label');\n     expect(propValue).toBe('\"one\"');\n-    expect(sourceText).toMatch(/e2e-app[a-zA-Z]*\\.js/);\n+  });\n+\n+  test('Should allow inspecting source of the element', async () => {\n+    // Source inspection is available only in modern renderer.\n+    runOnlyForReactRange('>=16.8');\n+\n+    // Select the first list item in DevTools.\n+    await devToolsUtils.selectElement(page, 'ListItem', 'List\\nApp');\n+\n+    // Then read the inspected values.\n+    const sourceText = await page.evaluate(() => {\n+      const {createTestNameSelector, findAllNodes} = window.REACT_DOM_DEVTOOLS;\n+      const container = document.getElementById('devtools');\n+\n+      const source = findAllNodes(container, [\n+        createTestNameSelector('InspectedElementView-Source'),\n+      ])[0];\n+\n+      return source.innerText;\n+    });\n+\n+    // If React version is specified, the e2e-regression.html page will be used\n+    // If not, then e2e.html, see playwright.config.js, how url is constructed\n+    expect(sourceText).toMatch(/e2e-app[\\-a-zA-Z]*\\.js/);\n   });\n \n   test('should allow props to be edited', async () => {",
        "date": "2024-03-07T17:59:37Z",
        "msg": "fix[devtools/e2e]: fixed source inspection in e2e tests (#28518)\n\nDevTools e2e tests started to fail after landing\r\nhttps://github.com/facebook/react/pull/28471:\r\n-\r\nhttps://app.circleci.com/pipelines/github/facebook/react/50984/workflows/a7be25ed-9547-40e9-87bd-b14d9d2e87da/jobs/798270\r\n-\r\nhttps://app.circleci.com/pipelines/github/facebook/react/50984/workflows/a7be25ed-9547-40e9-87bd-b14d9d2e87da/jobs/798275\r\n-\r\nhttps://app.circleci.com/pipelines/github/facebook/react/50984/workflows/a7be25ed-9547-40e9-87bd-b14d9d2e87da/jobs/798271\r\n-\r\nhttps://app.circleci.com/pipelines/github/facebook/react/50984/workflows/a7be25ed-9547-40e9-87bd-b14d9d2e87da/jobs/798274\r\n-\r\nhttps://app.circleci.com/pipelines/github/facebook/react/50984/workflows/a7be25ed-9547-40e9-87bd-b14d9d2e87da/jobs/798269\r\n\r\nThere are 2 reasons for that:\r\n1. Versions 16.0 and 16.5 use legacy renderer, which doesn't support\r\nsource inspection by design:\r\n\r\nhttps://github.com/facebook/react/blob/850fac4915864a487e7cb9ecae8a75dbac144174/packages/react-devtools-shared/src/backend/legacy/renderer.js#L831\r\n\r\nThe corresponding e2e test is now gated for versions >=16.8\r\n2. For other versions (>=16.8), the source is actually\r\n`e2e-app-regression.js`, because these regression tests open a different\r\npage (not the one we open for tests against React from source)\r\n\r\nhttps://github.com/facebook/react/blob/850fac4915864a487e7cb9ecae8a75dbac144174/packages/react-devtools-inline/playwright.config.js#L15-L17"
    },
    {
        "diff": "diff --git a/README.md b/a/README.md @@ -36,7 +36,7 @@ The documentation is divided into several sections:\n * [Where to Get Support](https://react.dev/community)\n * [Contributing Guide](https://legacy.reactjs.org/docs/how-to-contribute.html)\n \n-You can improve it by sending pull requests to [this repository](https://github.com/reactjs/reactjs.org).\n+You can improve it by sending pull requests to [this repository](https://github.com/reactjs/react.dev).\n \n ## Examples\n ",
        "date": "2024-03-06T23:20:57Z",
        "msg": "Link to reactjs/react.dev repo instead of reactjs/reactjs.org  (#28493)"
    },
    {
        "diff": "diff --git a/packages/react-reconciler/src/ReactChildFiber.js b/a/packages/react-reconciler/src/ReactChildFiber.js @@ -438,7 +438,6 @@ function createChildReconciler(\n   }\n \n   function mapRemainingChildren(\n-    returnFiber: Fiber,\n     currentFirstChild: Fiber,\n   ): Map<string | number, Fiber> {\n     // Add the remaining children to a temporary map so that we can find them by\n@@ -1194,7 +1193,7 @@ function createChildReconciler(\n     }\n \n     // Add all children to a key map for quick lookups.\n-    const existingChildren = mapRemainingChildren(returnFiber, oldFiber);\n+    const existingChildren = mapRemainingChildren(oldFiber);\n \n     // Keep scanning and use the map to restore deleted items as moves.\n     for (; newIdx < newChildren.length; newIdx++) {\n@@ -1404,7 +1403,7 @@ function createChildReconciler(\n     }\n \n     // Add all children to a key map for quick lookups.\n-    const existingChildren = mapRemainingChildren(returnFiber, oldFiber);\n+    const existingChildren = mapRemainingChildren(oldFiber);\n \n     // Keep scanning and use the map to restore deleted items as moves.\n     for (; !step.done; newIdx++, step = newChildren.next()) {",
        "date": "2024-03-06T19:02:51Z",
        "msg": "Remove unused returnFiber (#28504)\n\nThere is no use of `returnFiber` here, it can be removed."
    },
    {
        "diff": "diff --git a/.circleci/config.yml b/a/.circleci/config.yml @@ -97,6 +97,16 @@ jobs:\n       - setup_node_modules\n       - run: node ./scripts/tasks/flow-ci\n \n+\n+  yarn_flags:\n+    docker: *docker\n+    environment: *environment\n+\n+    steps:\n+      - checkout\n+      - setup_node_modules\n+      - run: yarn flags\n+\n   scrape_warning_messages:\n     docker: *docker\n     environment: *environment\n@@ -447,6 +457,11 @@ workflows:\n   build_and_test:\n     unless: << pipeline.parameters.prerelease_commit_sha >>\n     jobs:\n+      - yarn_flags:\n+          filters:\n+            branches:\n+              ignore:\n+                - builds/facebook-www\n       - yarn_flow:\n           filters:\n             branches:",
        "date": "2024-02-27T23:12:53Z",
        "msg": "Run `yarn flags` in CI (#28345)"
    },
    {
        "diff": "diff --git a/packages/react-dom/src/__tests__/ReactDOMServerIntegrationLegacyContextDisabled-test.internal.js b/a/packages/react-dom/src/__tests__/ReactDOMServerIntegrationLegacyContextDisabled-test.internal.js @@ -13,28 +13,29 @@\n const ReactDOMServerIntegrationUtils = require('./utils/ReactDOMServerIntegrationTestUtils');\n \n let React;\n-let ReactDOM;\n+let ReactDOMClient;\n let ReactFeatureFlags;\n let ReactDOMServer;\n \n function initModules() {\n   // Reset warning cache.\n   jest.resetModules();\n   React = require('react');\n-  ReactDOM = require('react-dom');\n+  ReactDOMClient = require('react-dom/client');\n   ReactDOMServer = require('react-dom/server');\n \n   ReactFeatureFlags = require('shared/ReactFeatureFlags');\n   ReactFeatureFlags.disableLegacyContext = true;\n \n   // Make them available to the helpers.\n   return {\n-    ReactDOM,\n+    ReactDOMClient,\n     ReactDOMServer,\n   };\n }\n \n-const {resetModules, itRenders} = ReactDOMServerIntegrationUtils(initModules);\n+const {resetModules, itRenders, clientRenderOnBadMarkup} =\n+  ReactDOMServerIntegrationUtils(initModules);\n \n function formatValue(val) {\n   if (val === null) {\n@@ -104,7 +105,7 @@ describe('ReactDOMServerIntegrationLegacyContextDisabled', () => {\n           <RegularFn />\n         </span>\n       </LegacyProvider>,\n-      3,\n+      render === clientRenderOnBadMarkup ? 6 : 3,\n     );\n     expect(e.textContent).toBe('{}undefinedundefined');\n     expect(lifecycleContextLog).toEqual([]);",
        "date": "2024-02-26T20:55:23Z",
        "msg": "Convert ReactDOMServerIntegrationLegacyContextDisabled to createRoot (#28448)"
    },
    {
        "diff": "diff --git a/packages/react-dom/src/__tests__/ReactDOMServerIntegrationLegacyContext-test.js b/a/packages/react-dom/src/__tests__/ReactDOMServerIntegrationLegacyContext-test.js @@ -14,26 +14,30 @@ const ReactDOMServerIntegrationUtils = require('./utils/ReactDOMServerIntegratio\n \n let PropTypes;\n let React;\n-let ReactDOM;\n+let ReactDOMClient;\n let ReactDOMServer;\n \n function initModules() {\n   // Reset warning cache.\n   jest.resetModules();\n   PropTypes = require('prop-types');\n   React = require('react');\n-  ReactDOM = require('react-dom');\n+  ReactDOMClient = require('react-dom/client');\n   ReactDOMServer = require('react-dom/server');\n \n   // Make them available to the helpers.\n   return {\n-    ReactDOM,\n+    ReactDOMClient,\n     ReactDOMServer,\n   };\n }\n \n-const {resetModules, itRenders, itThrowsWhenRendering} =\n-  ReactDOMServerIntegrationUtils(initModules);\n+const {\n+  resetModules,\n+  itRenders,\n+  itThrowsWhenRendering,\n+  clientRenderOnBadMarkup,\n+} = ReactDOMServerIntegrationUtils(initModules);\n \n describe('ReactDOMServerIntegration', () => {\n   beforeEach(() => {\n@@ -272,7 +276,10 @@ describe('ReactDOMServerIntegration', () => {\n             return {foo: 'bar'};\n           }\n         }\n-        const e = await render(<ForgetfulParent />, 1);\n+        const e = await render(\n+          <ForgetfulParent />,\n+          render === clientRenderOnBadMarkup ? 4 : 1,\n+        );\n         expect(e.textContent).toBe('nope');\n       },\n     );",
        "date": "2024-02-26T20:55:03Z",
        "msg": "Convert ReactDOMServerIntegrationLegacyContext to createRoot (#28449)"
    },
    {
        "diff": "diff --git a/scripts/flow/xplat.js b/a/scripts/flow/xplat.js @@ -9,6 +9,7 @@\n \n declare module 'ReactNativeInternalFeatureFlags' {\n   declare export var alwaysThrottleRetries: boolean;\n+  declare export var enableComponentStackLocations: boolean;\n   declare export var enableDeferRootSchedulingToMicrotask: boolean;\n   declare export var enableUseRefAccessWarning: boolean;\n   declare export var passChildrenWhenCloningPersistedNodes: boolean;",
        "date": "2024-02-22T23:58:12Z",
        "msg": "Add `enableComponentStackLocations` to `ReactNativeInternalFeatureFlags` libdef (#28424)\n\n## Summary\r\n\r\nFixing something I accidentally broke this in\r\nhttps://github.com/facebook/react/commit/25dbb3556ee9802c18f45c278abf3c33711237eb.\r\n\r\n## How did you test this change?\r\n\r\nRan the following successfully:\r\n\r\n```\r\n$ yarn flow dom-node\r\n```"
    },
    {
        "diff": "diff --git a/packages/react-devtools-shared/src/devtools/views/Components/Tree.js b/a/packages/react-devtools-shared/src/devtools/views/Components/Tree.js @@ -538,7 +538,7 @@ function updateIndentationSizeVar(\n }\n \n // $FlowFixMe[missing-local-annot]\n-function InnerElementType({children, style, ...rest}) {\n+function InnerElementType({children, style}) {\n   const {ownerID} = useContext(TreeStateContext);\n \n   const cachedChildWidths = useMemo<WeakMap<HTMLElement, number>>(\n@@ -586,11 +586,7 @@ function InnerElementType({children, style, ...rest}) {\n   // A lot of options were considered; this seemed the one that requires the least code.\n   // See https://github.com/bvaughn/react-devtools-experimental/issues/9\n   return (\n-    <div\n-      className={styles.InnerElementType}\n-      ref={divRef}\n-      style={style}\n-      {...rest}>\n+    <div className={styles.InnerElementType} ref={divRef} style={style}>\n       <SelectedTreeHighlight />\n       {children}\n     </div>",
        "date": "2024-02-22T19:18:30Z",
        "msg": "fix[devtools]: fixed Tree indentation logic after updating react-windows (#28421)\n\nForward-fixing the indentation after landing\r\nhttps://github.com/facebook/react/pull/28408. Could potentially be\r\nrelated to `ref` changes in `react`, but haven't validated yet.\r\n\r\nHaven't occured while testing the previous PR, but reproduced while\r\ntesting the https://github.com/facebook/react/pull/28418, for which I've\r\nrebuilt all dependencies, including `react`.\r\n\r\nThis change basically removes the props passing from original parent,\r\n`rest` should include only `ref`:\r\nhttps://github.com/bvaughn/react-window/blob/efad3d8909753fd74aad7c47dc902b26f0919651/src/createListComponent.js#L382"
    },
    {
        "diff": "diff --git a/packages/react-reconciler/src/ReactInternalTypes.js b/a/packages/react-reconciler/src/ReactInternalTypes.js @@ -157,12 +157,6 @@ export type Fiber = {\n   subtreeFlags: Flags,\n   deletions: Array<Fiber> | null,\n \n-  // The first and last fiber with side-effect within this subtree. This allows\n-  // us to reuse a slice of the linked list when we reuse the work done within\n-  // this fiber.\n-  firstEffect: Fiber | null,\n-  lastEffect: Fiber | null,\n-\n   lanes: Lanes,\n   childLanes: Lanes,\n ",
        "date": "2024-02-21T11:17:21Z",
        "msg": "refactor: remove dead types of fiber (#28405)\n\nThe properties `firstEffect` and `lastEffect` of the Fiber are currently\r\nnot being used and are considered to be dead code, and can be removed."
    },
    {
        "diff": "diff --git a/packages/react/src/__tests__/ReactCreateRef-test.js b/a/packages/react/src/__tests__/ReactCreateRef-test.js @@ -10,14 +10,16 @@\n 'use strict';\n \n let React;\n-let ReactTestRenderer;\n+let ReactDOM;\n+let ReactDOMClient;\n \n describe('ReactCreateRef', () => {\n   beforeEach(() => {\n     jest.resetModules();\n \n     React = require('react');\n-    ReactTestRenderer = require('react-test-renderer');\n+    ReactDOM = require('react-dom');\n+    ReactDOMClient = require('react-dom/client');\n   });\n \n   it('should warn in dev if an invalid ref object is provided', () => {\n@@ -31,12 +33,15 @@ describe('ReactCreateRef', () => {\n       }\n     }\n \n+    const root = ReactDOMClient.createRoot(document.createElement('div'));\n     expect(() =>\n-      ReactTestRenderer.create(\n-        <Wrapper>\n-          <div ref={{}} />\n-        </Wrapper>,\n-      ),\n+      ReactDOM.flushSync(() => {\n+        root.render(\n+          <Wrapper>\n+            <div ref={{}} />\n+          </Wrapper>,\n+        );\n+      }),\n     ).toErrorDev(\n       'Unexpected ref object provided for div. ' +\n         'Use either a ref-setter function or React.createRef().\\n' +\n@@ -45,11 +50,13 @@ describe('ReactCreateRef', () => {\n     );\n \n     expect(() =>\n-      ReactTestRenderer.create(\n-        <Wrapper>\n-          <ExampleComponent ref={{}} />\n-        </Wrapper>,\n-      ),\n+      ReactDOM.flushSync(() => {\n+        root.render(\n+          <Wrapper>\n+            <ExampleComponent ref={{}} />\n+          </Wrapper>,\n+        );\n+      }),\n     ).toErrorDev(\n       'Unexpected ref object provided for ExampleComponent. ' +\n         'Use either a ref-setter function or React.createRef().\\n' +",
        "date": "2024-02-20T22:49:51Z",
        "msg": "Remove RTR from ReactCreateRef-test (#28386)\n\n## Summary\r\n\r\nCleaning up internal usage of ReactTestRenderer\r\n\r\n## How did you test this change?\r\n\r\n`yarn test packages/react/src/__tests__/ReactCreateRef-test.js`"
    },
    {
        "diff": "diff --git a/.github/workflows/commit_artifacts.yml b/a/.github/workflows/commit_artifacts.yml @@ -11,7 +11,7 @@ jobs:\n       www_branch_count: ${{ steps.check_branches.outputs.www_branch_count }}\n       fbsource_branch_count: ${{ steps.check_branches.outputs.fbsource_branch_count }}\n     steps:\n-      - uses: actions/checkout@v3\n+      - uses: actions/checkout@v4\n       - name: \"Check branches\"\n         id: check_branches\n         run: |\n@@ -179,7 +179,7 @@ jobs:\n     if: ${{ (github.ref == 'refs/heads/main' && needs.download_artifacts.outputs.www_branch_count == '0') || github.ref == 'refs/heads/meta-www' }}\n     runs-on: ubuntu-latest\n     steps:\n-      - uses: actions/checkout@v3\n+      - uses: actions/checkout@v4\n         with:\n           ref: builds/facebook-www\n       - name: Ensure clean directory\n@@ -215,7 +215,7 @@ jobs:\n     runs-on: ubuntu-latest\n     if: ${{ (github.ref == 'refs/heads/main' && needs.download_artifacts.outputs.fbsource_branch_count == '0') || github.ref == 'refs/heads/meta-fbsource' }}\n     steps:\n-      - uses: actions/checkout@v3\n+      - uses: actions/checkout@v4\n         with:\n           ref: main\n           repository: facebook/react-fbsource-import",
        "date": "2024-02-20T21:46:43Z",
        "msg": "Bump actions/checkout (#28383)"
    },
    {
        "diff": "diff --git a/packages/react-reconciler/src/ReactInternalTypes.js b/a/packages/react-reconciler/src/ReactInternalTypes.js @@ -157,9 +157,6 @@ export type Fiber = {\n   subtreeFlags: Flags,\n   deletions: Array<Fiber> | null,\n \n-  // Singly linked list fast path to the next fiber with side-effects.\n-  nextEffect: Fiber | null,\n-\n   // The first and last fiber with side-effect within this subtree. This allows\n   // us to reuse a slice of the linked list when we reuse the work done within\n   // this fiber.",
        "date": "2024-02-20T19:31:15Z",
        "msg": "refactor: remove dead code of fiber (#28389)\n\nThe `nextEffect` property of the `fiber` is currently not being used and\r\nhas become dead code. It can be safely removed."
    },
    {
        "diff": "diff --git a/packages/react-dom/src/__tests__/ReactDOMInput-test.js b/a/packages/react-dom/src/__tests__/ReactDOMInput-test.js @@ -1707,7 +1707,7 @@ describe('ReactDOMInput', () => {\n     assertInputTrackingIsCurrent(container);\n   });\n \n-  it('should control radio buttons if the tree updates during render', () => {\n+  it('should control radio buttons if the tree updates during render in legacy mode', async () => {\n     container.remove();\n     container = document.createElement('div');\n     document.body.appendChild(container);",
        "date": "2024-02-20T15:52:49Z",
        "msg": "Annotate legacy mode tests in ReactDOMInput (#28333)"
    },
    {
        "diff": "diff --git a/packages/react/src/__tests__/ReactJSXTransformIntegration-test.js b/a/packages/react/src/__tests__/ReactJSXTransformIntegration-test.js @@ -11,7 +11,6 @@\n \n let React;\n let ReactDOMClient;\n-let ReactTestUtils;\n let act;\n \n // TODO: Historically this module was used to confirm that the JSX transform\n@@ -30,7 +29,6 @@ describe('ReactJSXTransformIntegration', () => {\n \n     React = require('react');\n     ReactDOMClient = require('react-dom/client');\n-    ReactTestUtils = require('react-dom/test-utils');\n     act = require('internal-test-utils').act;\n \n     Component = class extends React.Component {\n@@ -213,22 +211,34 @@ describe('ReactJSXTransformIntegration', () => {\n     expect(instance.props.fruit).toBe('persimmon');\n   });\n \n-  it('should normalize props with default values', () => {\n+  it('should normalize props with default values', async () => {\n     class NormalizingComponent extends React.Component {\n       render() {\n         return <span>{this.props.prop}</span>;\n       }\n     }\n     NormalizingComponent.defaultProps = {prop: 'testKey'};\n \n-    const instance = ReactTestUtils.renderIntoDocument(\n-      <NormalizingComponent />,\n-    );\n+    let container = document.createElement('div');\n+    let root = ReactDOMClient.createRoot(container);\n+    let instance;\n+    await act(() => {\n+      root.render(\n+        <NormalizingComponent ref={current => (instance = current)} />,\n+      );\n+    });\n+\n     expect(instance.props.prop).toBe('testKey');\n \n-    const inst2 = ReactTestUtils.renderIntoDocument(\n-      <NormalizingComponent prop={null} />,\n-    );\n+    container = document.createElement('div');\n+    root = ReactDOMClient.createRoot(container);\n+    let inst2;\n+    await act(() => {\n+      root.render(\n+        <NormalizingComponent prop={null} ref={current => (inst2 = current)} />,\n+      );\n+    });\n+\n     expect(inst2.props.prop).toBe(null);\n   });\n });",
        "date": "2024-02-20T15:50:52Z",
        "msg": "Remove ReactTestUtils from ReactJSXTransformIntegration (#28338)"
    },
    {
        "diff": "diff --git a/scripts/jest/setupTests.js b/a/scripts/jest/setupTests.js @@ -241,7 +241,7 @@ if (process.env.REACT_CLASS_EQUIVALENCE_TEST) {\n     global.Error = ErrorProxy;\n   }\n \n-  const expectTestToFail = async (callback, errorMsg) => {\n+  const expectTestToFail = async (callback, error) => {\n     if (callback.length > 0) {\n       throw Error(\n         'Gated test helpers do not support the `done` callback. Return a ' +\n@@ -261,12 +261,12 @@ if (process.env.REACT_CLASS_EQUIVALENCE_TEST) {\n       // `afterEach` like we normally do. `afterEach` is too late because if it\n       // throws, we won't have captured it.\n       flushAllUnexpectedConsoleCalls();\n-    } catch (error) {\n+    } catch (testError) {\n       // Failed as expected\n       resetAllUnexpectedConsoleCalls();\n       return;\n     }\n-    throw Error(errorMsg);\n+    throw error;\n   };\n \n   const gatedErrorMessage = 'Gated test was expected to fail, but it passed.';\n@@ -284,8 +284,10 @@ if (process.env.REACT_CLASS_EQUIVALENCE_TEST) {\n     if (shouldPass) {\n       test(testName, callback);\n     } else {\n+      const error = new Error(gatedErrorMessage);\n+      Error.captureStackTrace(error, global._test_gate);\n       test(`[GATED, SHOULD FAIL] ${testName}`, () =>\n-        expectTestToFail(callback, gatedErrorMessage));\n+        expectTestToFail(callback, error));\n     }\n   };\n   global._test_gate_focus = (gateFn, testName, callback) => {\n@@ -302,8 +304,10 @@ if (process.env.REACT_CLASS_EQUIVALENCE_TEST) {\n     if (shouldPass) {\n       test.only(testName, callback);\n     } else {\n+      const error = new Error(gatedErrorMessage);\n+      Error.captureStackTrace(error, global._test_gate_focus);\n       test.only(`[GATED, SHOULD FAIL] ${testName}`, () =>\n-        expectTestToFail(callback, gatedErrorMessage));\n+        expectTestToFail(callback, error));\n     }\n   };\n ",
        "date": "2024-02-18T17:17:02Z",
        "msg": "Improve stack trace when gated test fails (#28374)"
    },
    {
        "diff": "diff --git a/scripts/flags/flags.js b/a/scripts/flags/flags.js @@ -318,11 +318,15 @@ for (const flag of allFlagsUniqueFlags) {\n let sorted = table;\n if (isDiff || argv.sort) {\n   const sortChannel = argToHeader(isDiff ? argv.diff[0] : argv.sort);\n-  sorted = Object.fromEntries(\n-    Object.entries(table).sort(([, rowA], [, rowB]) =>\n-      rowB[sortChannel].toString().localeCompare(rowA[sortChannel])\n-    )\n-  );\n+  const sortBy =\n+    sortChannel === 'flag'\n+      ? ([flagA], [flagB]) => {\n+          return flagA.localeCompare(flagB);\n+        }\n+      : ([, rowA], [, rowB]) => {\n+          return rowB[sortChannel].toString().localeCompare(rowA[sortChannel]);\n+        };\n+  sorted = Object.fromEntries(Object.entries(table).sort(sortBy));\n }\n \n if (argv.csv) {",
        "date": "2024-02-17T14:28:35Z",
        "msg": "Fix crash running `yarn flags --sort flag` (#28344)"
    },
    {
        "diff": "diff --git a/packages/react-dom/src/__tests__/ReactDOMSingletonComponents-test.js b/a/packages/react-dom/src/__tests__/ReactDOMSingletonComponents-test.js @@ -996,17 +996,17 @@ describe('ReactDOM HostSingleton', () => {\n   });\n \n   // https://github.com/facebook/react/issues/26128\n-  it('(#26128) does not throw when rendering at body', async () => {\n+  it('(#26128) does not throw when rendering at body in legacy mode', async () => {\n     ReactDOM.render(<div />, document.body);\n   });\n \n   // https://github.com/facebook/react/issues/26128\n-  it('(#26128) does not throw when rendering at <html>', async () => {\n+  it('(#26128) does not throw when rendering at <html> in legacy mode', async () => {\n     ReactDOM.render(<body />, document.documentElement);\n   });\n \n   // https://github.com/facebook/react/issues/26128\n-  it('(#26128) does not throw when rendering at document', async () => {\n+  it('(#26128) does not throw when rendering at document in legacy mode', async () => {\n     ReactDOM.render(<html />, document);\n   });\n });",
        "date": "2024-02-17T14:28:18Z",
        "msg": "Annotate legacy mode test in ReactDOMSingletonComponents (#28339)\n\nThese are mainly regression tests for legacy root."
    },
    {
        "diff": "diff --git a/fixtures/flight/server/global.js b/a/fixtures/flight/server/global.js @@ -37,6 +37,7 @@ const React = require('react');\n \n const {renderToPipeableStream} = require('react-dom/server');\n const {createFromNodeStream} = require('react-server-dom-webpack/client');\n+const {PassThrough} = require('stream');\n \n const app = express();\n \n@@ -146,34 +147,33 @@ app.all('/', async function (req, res, next) {\n       // so we start by consuming the RSC payload. This needs a module\n       // map that reverse engineers the client-side path to the SSR path.\n \n-      // This is a bad hack to set the form state after SSR has started. It works\n-      // because we block the root component until we have the form state and\n-      // any form that reads it necessarily will come later. It also only works\n-      // because the formstate type is an object which may change in the future\n-      const lazyFormState = [];\n-\n-      let cachedResult = null;\n-      async function getRootAndFormState() {\n-        const {root, formState} = await createFromNodeStream(\n-          rscResponse,\n-          ssrManifest\n-        );\n-        // We shouldn't be assuming formState is an object type but at the moment\n-        // we have no way of setting the form state from within the render\n-        Object.assign(lazyFormState, formState);\n-        return root;\n-      }\n+      // We need to get the formState before we start rendering but we also\n+      // need to run the Flight client inside the render to get all the preloads.\n+      // The API is ambivalent about what's the right one so we need two for now.\n+\n+      // Tee the response into two streams so that we can do both.\n+      const rscResponse1 = new PassThrough();\n+      const rscResponse2 = new PassThrough();\n+\n+      rscResponse.pipe(rscResponse1);\n+      rscResponse.pipe(rscResponse2);\n+\n+      const {formState} = await createFromNodeStream(rscResponse1, ssrManifest);\n+      rscResponse1.end();\n+\n+      let cachedResult;\n       let Root = () => {\n         if (!cachedResult) {\n-          cachedResult = getRootAndFormState();\n+          // Read this stream inside the render.\n+          cachedResult = createFromNodeStream(rscResponse2, ssrManifest);\n         }\n-        return React.use(cachedResult);\n+        return React.use(cachedResult).root;\n       };\n       // Render it into HTML by resolving the client components\n       res.set('Content-type', 'text/html');\n       const {pipe} = renderToPipeableStream(React.createElement(Root), {\n         bootstrapScripts: mainJSChunks,\n-        formState: lazyFormState,\n+        formState: formState,\n       });\n       pipe(res);\n     } catch (e) {",
        "date": "2024-02-16T23:25:09Z",
        "msg": "Consume the RSC stream twice in the Flight fixture (#28353)\n\nWe have an unresolved conflict where the Flight client wants to execute\r\ninside Fizz to emit side-effects like preloads (which can be early) into\r\nthat stream. However, the FormState API requires the state to be passed\r\nat the root, so if you're getting that through the RSC payload it's a\r\nCatch 22.\r\n\r\n#27314 used a hack to mutate the form state array to fill it in later,\r\nbut that doesn't actually work because it's not always an array. It's\r\nsometimes null like if there wasn't a POST. This lead to a bunch of\r\nhydration errors - which doesn't have the best error message for this\r\ncase neither. It probably should error with something that specifies\r\nthat it's form state.\r\n\r\nThis fixes it by teeing the stream into two streams and consuming it\r\nwith two Flight clients. One to read the form state and one to emit\r\nside-effects and read the root."
    },
    {
        "diff": "diff --git a/scripts/rollup/build.js b/a/scripts/rollup/build.js @@ -575,6 +575,9 @@ function getPlugins(\n           sourcemapAfterClosure.sources = [preMinifiedFilename];\n           sourcemapAfterClosure.file = filename;\n \n+          // All our code is considered \"third-party\" and should be ignored by default.\n+          sourcemapAfterClosure.ignoreList = [0];\n+\n           // We'll write the pre-minified source to disk as a separate file.\n           // Because it sits on disk, there's no need to have it in the `sourcesContent` array.\n           // That also makes the file easier to read, and available for use by scripts.",
        "date": "2024-02-13T17:54:06Z",
        "msg": "Add ignoreList to our source maps (#28310)\n\nAll our sources are considered third party and should be hidden in stack\r\ntraces unless expanded. Our internals aren't actionable anyway.\r\n\r\nThis doesn't really do much without tooling that actually forwards this\r\nto new generated source maps, in which case they probably just add them\r\nto ignorelist anyway."
    },
    {
        "diff": "diff --git a/packages/react-devtools-shared/src/devtools/views/hooks.js b/a/packages/react-devtools-shared/src/devtools/views/hooks.js @@ -219,15 +219,18 @@ export function useModalDismissSignal(\n       return () => {};\n     }\n \n-    const handleDocumentKeyDown = (event: any) => {\n+    const handleRootNodeKeyDown = (event: KeyboardEvent) => {\n       if (event.key === 'Escape') {\n         dismissCallback();\n       }\n     };\n \n-    const handleDocumentClick = (event: any) => {\n+    const handleRootNodeClick: MouseEventHandler = event => {\n       if (\n         modalRef.current !== null &&\n+        /* $FlowExpectedError[incompatible-call] Instead of dealing with possibly multiple realms\n+         and multiple Node references to comply with Flow (e.g. checking with `event.target instanceof Node`)\n+         just delegate it to contains call */\n         !modalRef.current.contains(event.target)\n       ) {\n         event.stopPropagation();\n@@ -237,7 +240,7 @@ export function useModalDismissSignal(\n       }\n     };\n \n-    let ownerDocument = null;\n+    let modalRootNode = null;\n \n     // Delay until after the current call stack is empty,\n     // in case this effect is being run while an event is currently bubbling.\n@@ -248,12 +251,12 @@ export function useModalDismissSignal(\n       // It's important to listen to the ownerDocument to support the browser extension.\n       // Here we use portals to render individual tabs (e.g. Profiler),\n       // and the root document might belong to a different window.\n-      const div = modalRef.current;\n-      if (div != null) {\n-        ownerDocument = div.ownerDocument;\n-        ownerDocument.addEventListener('keydown', handleDocumentKeyDown);\n+      const modalDOMElement = modalRef.current;\n+      if (modalDOMElement != null) {\n+        modalRootNode = modalDOMElement.getRootNode();\n+        modalRootNode.addEventListener('keydown', handleRootNodeKeyDown);\n         if (dismissOnClickOutside) {\n-          ownerDocument.addEventListener('click', handleDocumentClick, true);\n+          modalRootNode.addEventListener('click', handleRootNodeClick, true);\n         }\n       }\n     }, 0);\n@@ -263,9 +266,9 @@ export function useModalDismissSignal(\n         clearTimeout(timeoutID);\n       }\n \n-      if (ownerDocument !== null) {\n-        ownerDocument.removeEventListener('keydown', handleDocumentKeyDown);\n-        ownerDocument.removeEventListener('click', handleDocumentClick, true);\n+      if (modalRootNode !== null) {\n+        modalRootNode.removeEventListener('keydown', handleRootNodeKeyDown);\n+        modalRootNode.removeEventListener('click', handleRootNodeClick, true);\n       }\n     };\n   }, [modalRef, dismissCallback, dismissOnClickOutside]);",
        "date": "2024-02-12T16:56:28Z",
        "msg": "fix[devtools/useModalDismissSignal]: use getRootNode for shadow root case support (#28145)\n\nIn our custom implementation for handling modals dismiss signal, we use\r\nelement's `ownerDocument` field, which expectedly doesn't work well with\r\nshadow root. Now using\r\n[`getRootNode`](https://developer.mozilla.org/en-US/docs/Web/API/Node/getRootNode)\r\ninstead of `ownerDocument` to support shadow root case.\r\n\r\nWithout this, if RDT Frontend is hosted inside the shadow root, the\r\nmodal gets closed after any click, including on the buttons hosted by\r\nmodal:\r\n\r\nhttps://github.com/facebook/react/blob/00d42ac3542179c55f936f395ede7abaeb5900a3/packages/react-devtools-shared/src/devtools/views/hooks.js#L228-L238\r\n\r\nTest plan:\r\n- Modals work as expected for Chrome DevTools integration\r\n- Modals work as expected at every other surfaces: browser extension,\r\nelectron wrapper for RN, inline version for web"
    },
    {
        "diff": "diff --git a/packages/react/package.json b/a/packages/react/package.json @@ -15,6 +15,7 @@\n     \"cjs/\",\n     \"umd/\",\n     \"jsx-runtime.js\",\n+    \"jsx-runtime.react-server.js\",\n     \"jsx-dev-runtime.js\",\n     \"react.react-server.js\"\n   ],",
        "date": "2024-02-11T03:19:30Z",
        "msg": "Add jsx-runtime.react-server.js to file allowlist (#28301)\n\nhttps://github.com/facebook/react/pull/28217 doesn't work without this\r\nsince it's not included in the files list.\r\n\r\nSee https://github.com/dai-shi/waku/pull/467#issuecomment-1936965080.\r\n\r\nThis should fix that."
    },
    {
        "diff": "diff --git a/packages/react-server/src/ReactFlightServer.js b/a/packages/react-server/src/ReactFlightServer.js @@ -1192,12 +1192,16 @@ function renderModelDestructive(\n             // but that is able to reuse the same task if we're already in one but then that\n             // will be a lazy future value rather than guaranteed to exist but maybe that's good.\n             const newId = outlineModel(request, (value: any));\n-            return serializeLazyID(newId);\n+            return serializeByValueID(newId);\n           } else {\n             // We've already emitted this as an outlined object, so we can refer to that by its\n-            // existing ID. We use a lazy reference since, unlike plain objects, elements might\n-            // suspend so it might not have emitted yet even if we have the ID for it.\n-            return serializeLazyID(existingId);\n+            // existing ID. TODO: We should use a lazy reference since, unlike plain objects,\n+            // elements might suspend so it might not have emitted yet even if we have the ID for\n+            // it. However, this creates an extra wrapper when it's not needed. We should really\n+            // detect whether this already was emitted and synchronously available. In that\n+            // case we can refer to it synchronously and only make it lazy otherwise.\n+            // We currently don't have a data structure that lets us see that though.\n+            return serializeByValueID(existingId);\n           }\n         } else {\n           // This is the first time we've seen this object. We may never see it again",
        "date": "2024-02-08T23:45:40Z",
        "msg": "[Flight] Serialize deduped elements by direct reference even if they suspend (#28283)\n\nIn #28123 I switched these to be lazy references. However that creates a\r\nlazy wrapper even if they're synchronously available. We try to as much\r\nas possible preserve the original data structure in these cases.\r\n\r\nE.g. here in the dev outlining I only use a lazy wrapper if it didn't\r\ncomplete synchronously:\r\nhttps://github.com/facebook/react/pull/28272/files#diff-d4c9c509922b3671d3ecce4e051df66dd5c3d38ff913c7a7fe94abc3ba2ed72eR638\r\n\r\nUnfortunately we don't have a data structure that tracks the status of\r\neach emitted row. We could store the task in the map but then they\r\ncouldn't be GC:ed as they complete. We could maybe store the status of\r\neach element but seems so heavy.\r\n\r\nFor now I just went back to direct reference which might be an issue\r\nsince it can suspend something higher up when deduped."
    },
    {
        "diff": "diff --git a/packages/shared/ReactFeatureFlags.js b/a/packages/shared/ReactFeatureFlags.js @@ -15,8 +15,6 @@\n \n export const enableComponentStackLocations = true;\n \n-export const enableServerComponentKeys = __EXPERIMENTAL__;\n-\n // -----------------------------------------------------------------------------\n // Killswitch\n //\n@@ -169,6 +167,9 @@ export const enableFilterEmptyStringAttributesDOM = __NEXT_MAJOR__;\n // Disabled caching behavior of `react/cache` in client runtimes.\n export const disableClientCache = false;\n \n+// Changes Server Components Reconciliation when they have keys\n+export const enableServerComponentKeys = __NEXT_MAJOR__;\n+\n // -----------------------------------------------------------------------------\n // Chopping Block\n //",
        "date": "2024-02-07T20:21:59Z",
        "msg": "Add enableServerComponentKeys to NEXT_MAJOR (#28259)"
    },
    {
        "diff": "diff --git a/packages/react/src/ReactCacheClient.js b/a/packages/react/src/ReactCacheClient.js @@ -10,25 +10,25 @@\n import {disableClientCache} from 'shared/ReactFeatureFlags';\n import {cache as cacheImpl} from './ReactCacheImpl';\n \n-export function cache<A: Iterable<mixed>, T>(fn: (...A) => T): (...A) => T {\n-  if (disableClientCache) {\n-    // On the client (i.e. not a Server Components environment) `cache` has\n-    // no caching behavior. We just return the function as-is.\n-    //\n-    // We intend to implement client caching in a future major release. In the\n-    // meantime, it's only exposed as an API so that Shared Components can use\n-    // per-request caching on the server without breaking on the client. But it\n-    // does mean they need to be aware of the behavioral difference.\n-    //\n-    // The rest of the behavior is the same as the server implementation \u2014 it\n-    // returns a new reference, extra properties like `displayName` are not\n-    // preserved, the length of the new function is 0, etc. That way apps can't\n-    // accidentally depend on those details.\n-    return function () {\n-      // $FlowFixMe[incompatible-call]: We don't want to use rest arguments since we transpile the code.\n-      return fn.apply(null, arguments);\n-    };\n-  } else {\n-    return cacheImpl(fn);\n-  }\n+export function noopCache<A: Iterable<mixed>, T>(fn: (...A) => T): (...A) => T {\n+  // On the client (i.e. not a Server Components environment) `cache` has\n+  // no caching behavior. We just return the function as-is.\n+  //\n+  // We intend to implement client caching in a future major release. In the\n+  // meantime, it's only exposed as an API so that Shared Components can use\n+  // per-request caching on the server without breaking on the client. But it\n+  // does mean they need to be aware of the behavioral difference.\n+  //\n+  // The rest of the behavior is the same as the server implementation \u2014 it\n+  // returns a new reference, extra properties like `displayName` are not\n+  // preserved, the length of the new function is 0, etc. That way apps can't\n+  // accidentally depend on those details.\n+  return function () {\n+    // $FlowFixMe[incompatible-call]: We don't want to use rest arguments since we transpile the code.\n+    return fn.apply(null, arguments);\n+  };\n }\n+\n+export const cache: typeof noopCache = disableClientCache\n+  ? noopCache\n+  : cacheImpl;",
        "date": "2024-02-07T01:40:06Z",
        "msg": "Improve flagging of `React.cache` to remove indirection in bundled code (#28263)\n\nUses a better technique for conditionally disabling cache on the client"
    },
    {
        "diff": "diff --git a/packages/react-server/src/ReactFlightServer.js b/a/packages/react-server/src/ReactFlightServer.js @@ -296,7 +296,6 @@ export function createRequest(\n     onError: onError === undefined ? defaultErrorHandler : onError,\n     onPostpone: onPostpone === undefined ? defaultPostponeHandler : onPostpone,\n   };\n-  request.pendingChunks++;\n   const rootTask = createTask(request, model, null, false, abortSet);\n   pingedTasks.push(rootTask);\n   return request;\n@@ -318,7 +317,6 @@ function serializeThenable(\n   task: Task,\n   thenable: Thenable<any>,\n ): number {\n-  request.pendingChunks++;\n   const newTask = createTask(\n     request,\n     null,\n@@ -722,6 +720,7 @@ function createTask(\n   implicitSlot: boolean,\n   abortSet: Set<Task>,\n ): Task {\n+  request.pendingChunks++;\n   const id = request.nextChunkId++;\n   if (typeof model === 'object' && model !== null) {\n     // If we're about to write this into a new task we can assign it an ID early so that\n@@ -906,7 +905,6 @@ function serializeClientReference(\n }\n \n function outlineModel(request: Request, value: ReactClientValue): number {\n-  request.pendingChunks++;\n   const newTask = createTask(\n     request,\n     value,\n@@ -1068,7 +1066,6 @@ function renderModel(\n       // $FlowFixMe[method-unbinding]\n       if (typeof x.then === 'function') {\n         // Something suspended, we'll need to create a new task and resolve it later.\n-        request.pendingChunks++;\n         const newTask = createTask(\n           request,\n           task.model,",
        "date": "2024-02-06T21:17:59Z",
        "msg": "[Flight] Move pendingChunks ref count increment into createTask (#28260)\n\nEvery time we create a task we need to wait for it so we increase a ref\r\ncount. We can do this in `createTask`. This is in line with what Fizz\r\ndoes too.\r\n\r\nThey differ in that Flight counts when they're actually flushed where as\r\nFizz decrements them when they complete.\r\n\r\nFlight should probably count them when they complete so it's possible to\r\nwait for the end before flushing for buffering purposes."
    },
    {
        "diff": "diff --git a/packages/react-refresh/src/ReactFreshBabelPlugin.js b/a/packages/react-refresh/src/ReactFreshBabelPlugin.js @@ -230,6 +230,22 @@ export default function (babel, opts = {}) {\n       case 'React.useImperativeHandle':\n       case 'useDebugValue':\n       case 'React.useDebugValue':\n+      case 'useId':\n+      case 'React.useId':\n+      case 'useDeferredValue':\n+      case 'React.useDeferredValue':\n+      case 'useTransition':\n+      case 'React.useTransition':\n+      case 'useInsertionEffect':\n+      case 'React.useInsertionEffect':\n+      case 'useSyncExternalStore':\n+      case 'React.useSyncExternalStore':\n+      case 'useFormStatus':\n+      case 'React.useFormStatus':\n+      case 'useFormState':\n+      case 'React.useFormState':\n+      case 'useOptimistic':\n+      case 'React.useOptimistic':\n         return true;\n       default:\n         return false;",
        "date": "2024-02-06T18:57:46Z",
        "msg": "[Fresh] Update the list of built-in hooks (#27864)"
    },
    {
        "diff": "diff --git a/packages/react-devtools-shared/src/__tests__/profilingHostRoot-test.js b/a/packages/react-devtools-shared/src/__tests__/profilingHostRoot-test.js @@ -7,11 +7,14 @@\n  * @flow\n  */\n \n+import {\n+  getLegacyRenderImplementation,\n+  getModernRenderImplementation,\n+} from './utils';\n+\n describe('profiling HostRoot', () => {\n   let React;\n-  let ReactDOMClient;\n   let Scheduler;\n-  let legacyRender;\n   let store;\n   let utils;\n   let getEffectDurations;\n@@ -22,14 +25,11 @@ describe('profiling HostRoot', () => {\n     utils = require('./utils');\n     utils.beforeEachProfiling();\n \n-    legacyRender = utils.legacyRender;\n-\n     getEffectDurations = require('../backend/utils').getEffectDurations;\n \n     store = global.store;\n \n     React = require('react');\n-    ReactDOMClient = require('react-dom/client');\n     Scheduler = require('scheduler');\n \n     effectDurations = [];\n@@ -49,7 +49,11 @@ describe('profiling HostRoot', () => {\n     };\n   });\n \n-  // @reactVersion >=18.0\n+  const {render: legacyRender} = getLegacyRenderImplementation();\n+  const {render: modernRender} = getModernRenderImplementation();\n+\n+  // @reactVersion >= 18.0\n+  // @reactVersion <= 18.2\n   it('should expose passive and layout effect durations for render()', () => {\n     function App() {\n       React.useEffect(() => {\n@@ -63,8 +67,7 @@ describe('profiling HostRoot', () => {\n \n     utils.act(() => store.profilerStore.startProfiling());\n     utils.act(() => {\n-      const container = document.createElement('div');\n-      legacyRender(<App />, container);\n+      legacyRender(<App />);\n     });\n     utils.act(() => store.profilerStore.stopProfiling());\n \n@@ -92,9 +95,7 @@ describe('profiling HostRoot', () => {\n \n     utils.act(() => store.profilerStore.startProfiling());\n     utils.act(() => {\n-      const container = document.createElement('div');\n-      const root = ReactDOMClient.createRoot(container);\n-      root.render(<App />);\n+      modernRender(<App />);\n     });\n     utils.act(() => store.profilerStore.stopProfiling());\n \n@@ -126,12 +127,9 @@ describe('profiling HostRoot', () => {\n       return null;\n     }\n \n-    const container = document.createElement('div');\n-    const root = ReactDOMClient.createRoot(container);\n-\n     utils.act(() => store.profilerStore.startProfiling());\n-    utils.act(() => root.render(<App />));\n-    utils.act(() => root.render(<App shouldCascade={true} />));\n+    utils.act(() => modernRender(<App />));\n+    utils.act(() => modernRender(<App shouldCascade={true} />));\n     utils.act(() => store.profilerStore.stopProfiling());\n \n     expect(effectDurations).toHaveLength(3);",
        "date": "2024-02-06T11:40:50Z",
        "msg": "chore: use versioned render in profilingHostRoot test and gate some for legacy rendering (#28237)"
    },
    {
        "diff": "diff --git a/packages/react-devtools-shared/src/__tests__/ownersListContext-test.js b/a/packages/react-devtools-shared/src/__tests__/ownersListContext-test.js @@ -12,11 +12,12 @@ import type {Element} from 'react-devtools-shared/src/frontend/types';\n import type {FrontendBridge} from 'react-devtools-shared/src/bridge';\n import type Store from 'react-devtools-shared/src/devtools/store';\n \n+import {getVersionedRenderImplementation} from './utils';\n+\n describe('OwnersListContext', () => {\n   let React;\n   let TestRenderer: ReactTestRenderer;\n   let bridge: FrontendBridge;\n-  let legacyRender;\n   let store: Store;\n   let utils;\n \n@@ -30,8 +31,6 @@ describe('OwnersListContext', () => {\n     utils = require('./utils');\n     utils.beforeEachProfiling();\n \n-    legacyRender = utils.legacyRender;\n-\n     bridge = global.bridge;\n     store = global.store;\n     store.collapseNodesByDefault = false;\n@@ -51,6 +50,8 @@ describe('OwnersListContext', () => {\n       require('react-devtools-shared/src/devtools/views/Components/TreeContext').TreeContextController;\n   });\n \n+  const {render} = getVersionedRenderImplementation();\n+\n   const Contexts = ({children, defaultOwnerID = null}) => (\n     <BridgeContext.Provider value={bridge}>\n       <StoreContext.Provider value={store}>\n@@ -98,9 +99,7 @@ describe('OwnersListContext', () => {\n     };\n     const Child = () => null;\n \n-    utils.act(() =>\n-      legacyRender(<Grandparent />, document.createElement('div')),\n-    );\n+    utils.act(() => render(<Grandparent />));\n \n     expect(store).toMatchInlineSnapshot(`\n       [root]\n@@ -143,9 +142,7 @@ describe('OwnersListContext', () => {\n     };\n     const Child = () => null;\n \n-    utils.act(() =>\n-      legacyRender(<Grandparent />, document.createElement('div')),\n-    );\n+    utils.act(() => render(<Grandparent />));\n \n     expect(store).toMatchInlineSnapshot(`\n       [root]\n@@ -171,9 +168,7 @@ describe('OwnersListContext', () => {\n     const Grandparent = () => <Parent />;\n     const Parent = () => null;\n \n-    utils.act(() =>\n-      legacyRender(<Grandparent />, document.createElement('div')),\n-    );\n+    utils.act(() => render(<Grandparent />));\n \n     expect(store).toMatchInlineSnapshot(`\n       [root]\n@@ -198,9 +193,7 @@ describe('OwnersListContext', () => {\n       return <Memo ref={ref} />;\n     };\n \n-    utils.act(() =>\n-      legacyRender(<Grandparent />, document.createElement('div')),\n-    );\n+    utils.act(() => render(<Grandparent />));\n \n     expect(store).toMatchInlineSnapshot(`\n       [root]",
        "date": "2024-02-05T17:32:31Z",
        "msg": "chore: use versioned render in ownersListContext test (#28240)"
    },
    {
        "diff": "diff --git a/packages/react-devtools-shared/src/__tests__/editing-test.js b/a/packages/react-devtools-shared/src/__tests__/editing-test.js @@ -10,11 +10,12 @@\n import type {FrontendBridge} from 'react-devtools-shared/src/bridge';\n import type Store from 'react-devtools-shared/src/devtools/store';\n \n+import {getVersionedRenderImplementation} from './utils';\n+\n describe('editing interface', () => {\n   let PropTypes;\n   let React;\n   let bridge: FrontendBridge;\n-  let legacyRender;\n   let store: Store;\n   let utils;\n \n@@ -25,8 +26,6 @@ describe('editing interface', () => {\n   beforeEach(() => {\n     utils = require('./utils');\n \n-    legacyRender = utils.legacyRender;\n-\n     bridge = global.bridge;\n     store = global.store;\n     store.collapseNodesByDefault = false;\n@@ -36,6 +35,8 @@ describe('editing interface', () => {\n     React = require('react');\n   });\n \n+  const {render} = getVersionedRenderImplementation();\n+\n   describe('props', () => {\n     let committedClassProps;\n     let committedFunctionProps;\n@@ -66,9 +67,8 @@ describe('editing interface', () => {\n \n       inputRef = React.createRef(null);\n \n-      const container = document.createElement('div');\n       await utils.actAsync(() =>\n-        legacyRender(\n+        render(\n           <>\n             <ClassComponent\n               array={[1, 2, 3]}\n@@ -84,7 +84,6 @@ describe('editing interface', () => {\n             ,\n             <input ref={inputRef} onChange={jest.fn()} value=\"initial\" />\n           </>,\n-          container,\n         ),\n       );\n \n@@ -440,11 +439,9 @@ describe('editing interface', () => {\n         }\n       }\n \n-      const container = document.createElement('div');\n       await utils.actAsync(() =>\n-        legacyRender(\n+        render(\n           <ClassComponent object={{nested: 'initial'}} shallow=\"initial\" />,\n-          container,\n         ),\n       );\n \n@@ -662,10 +659,7 @@ describe('editing interface', () => {\n         return null;\n       }\n \n-      const container = document.createElement('div');\n-      await utils.actAsync(() =>\n-        legacyRender(<FunctionComponent />, container),\n-      );\n+      await utils.actAsync(() => render(<FunctionComponent />));\n \n       hookID = 0; // index\n       id = ((store.getElementIDAtIndex(0): any): number);\n@@ -917,13 +911,11 @@ describe('editing interface', () => {\n         }\n       }\n \n-      const container = document.createElement('div');\n       await utils.actAsync(() =>\n-        legacyRender(\n+        render(\n           <LegacyContextProvider>\n             <ClassComponent />\n           </LegacyContextProvider>,\n-          container,\n         ),\n       );\n ",
        "date": "2024-02-05T17:30:46Z",
        "msg": "chore: use versioned render in editing test (#28239)"
    },
    {
        "diff": "diff --git a/packages/react-devtools-shared/src/__tests__/profilingCharts-test.js b/a/packages/react-devtools-shared/src/__tests__/profilingCharts-test.js @@ -9,19 +9,18 @@\n \n import type Store from 'react-devtools-shared/src/devtools/store';\n \n+import {getVersionedRenderImplementation} from './utils';\n+\n describe('profiling charts', () => {\n   let React;\n   let Scheduler;\n-  let legacyRender;\n   let store: Store;\n   let utils;\n \n   beforeEach(() => {\n     utils = require('./utils');\n     utils.beforeEachProfiling();\n \n-    legacyRender = utils.legacyRender;\n-\n     store = global.store;\n     store.collapseNodesByDefault = false;\n     store.recordChangeDescriptions = true;\n@@ -30,6 +29,8 @@ describe('profiling charts', () => {\n     Scheduler = require('scheduler');\n   });\n \n+  const {render} = getVersionedRenderImplementation();\n+\n   function getFlamegraphChartData(rootID, commitIndex) {\n     const commitTree = store.profilerStore.profilingCache.getCommitTree({\n       commitIndex,\n@@ -78,11 +79,9 @@ describe('profiling charts', () => {\n         return null;\n       });\n \n-      const container = document.createElement('div');\n-\n       utils.act(() => store.profilerStore.startProfiling());\n \n-      utils.act(() => legacyRender(<Parent />, container));\n+      utils.act(() => render(<Parent />));\n       expect(store).toMatchInlineSnapshot(`\n         [root]\n           \u25be <Parent>\n@@ -91,7 +90,7 @@ describe('profiling charts', () => {\n               <Child key=\"third\"> [Memo]\n       `);\n \n-      utils.act(() => legacyRender(<Parent />, container));\n+      utils.act(() => render(<Parent />));\n       expect(store).toMatchInlineSnapshot(`\n         [root]\n           \u25be <Parent>\n@@ -228,11 +227,9 @@ describe('profiling charts', () => {\n         return null;\n       });\n \n-      const container = document.createElement('div');\n-\n       utils.act(() => store.profilerStore.startProfiling());\n \n-      utils.act(() => legacyRender(<Parent />, container));\n+      utils.act(() => render(<Parent />));\n       expect(store).toMatchInlineSnapshot(`\n         [root]\n           \u25be <Parent>\n@@ -241,7 +238,7 @@ describe('profiling charts', () => {\n               <Child key=\"third\"> [Memo]\n       `);\n \n-      utils.act(() => legacyRender(<Parent />, container));\n+      utils.act(() => render(<Parent />));\n       expect(store).toMatchInlineSnapshot(`\n         [root]\n           \u25be <Parent>",
        "date": "2024-02-05T17:18:32Z",
        "msg": "chore: use versioned render in profilingCharts test (#28235)"
    },
    {
        "diff": "diff --git a/packages/react-devtools-shared/src/__tests__/profilerChangeDescriptions-test.js b/a/packages/react-devtools-shared/src/__tests__/profilerChangeDescriptions-test.js @@ -7,25 +7,26 @@\n  * @flow\n  */\n \n+import {getVersionedRenderImplementation} from './utils';\n+\n describe('Profiler change descriptions', () => {\n   let React;\n-  let legacyRender;\n   let store;\n   let utils;\n \n   beforeEach(() => {\n     utils = require('./utils');\n     utils.beforeEachProfiling();\n \n-    legacyRender = utils.legacyRender;\n-\n     store = global.store;\n     store.collapseNodesByDefault = false;\n     store.recordChangeDescriptions = true;\n \n     React = require('react');\n   });\n \n+  const {render} = getVersionedRenderImplementation();\n+\n   // @reactVersion >=18.0\n   it('should identify useContext as the cause for a re-render', () => {\n     const Context = React.createContext(0);\n@@ -62,10 +63,8 @@ describe('Profiler change descriptions', () => {\n       );\n     };\n \n-    const container = document.createElement('div');\n-\n     utils.act(() => store.profilerStore.startProfiling());\n-    utils.act(() => legacyRender(<App />, container));\n+    utils.act(() => render(<App />));\n     utils.act(() => forceUpdate());\n     utils.act(() => store.profilerStore.stopProfiling());\n ",
        "date": "2024-02-05T17:17:07Z",
        "msg": "chore: use versioned render in profilerChangeDescriptions test (#28221)"
    },
    {
        "diff": "diff --git a/packages/react-devtools-shared/src/__tests__/componentStacks-test.js b/a/packages/react-devtools-shared/src/__tests__/componentStacks-test.js @@ -7,12 +7,11 @@\n  * @flow\n  */\n \n-import {normalizeCodeLocInfo} from './utils';\n+import {getVersionedRenderImplementation, normalizeCodeLocInfo} from './utils';\n \n describe('component stack', () => {\n   let React;\n   let act;\n-  let legacyRender;\n   let mockError;\n   let mockWarn;\n \n@@ -30,11 +29,12 @@ describe('component stack', () => {\n \n     const utils = require('./utils');\n     act = utils.act;\n-    legacyRender = utils.legacyRender;\n \n     React = require('react');\n   });\n \n+  const {render} = getVersionedRenderImplementation();\n+\n   // @reactVersion >=16.9\n   it('should log the current component stack along with an error or warning', () => {\n     const Grandparent = () => <Parent />;\n@@ -45,9 +45,7 @@ describe('component stack', () => {\n       return null;\n     };\n \n-    const container = document.createElement('div');\n-\n-    act(() => legacyRender(<Grandparent />, container));\n+    act(() => render(<Grandparent />));\n \n     expect(mockError).toHaveBeenCalledWith(\n       'Test error.',\n@@ -79,8 +77,7 @@ describe('component stack', () => {\n       return null;\n     };\n \n-    const container = document.createElement('div');\n-    act(() => legacyRender(<Example test=\"abc\" />, container));\n+    act(() => render(<Example test=\"abc\" />));\n \n     expect(useEffectCount).toBe(1);\n ",
        "date": "2024-02-05T17:14:00Z",
        "msg": "chore: use versioned render in componentStacks test (#28214)"
    },
    {
        "diff": "diff --git a/packages/react-devtools-shared/src/__tests__/FastRefreshDevToolsIntegration-test.js b/a/packages/react-devtools-shared/src/__tests__/FastRefreshDevToolsIntegration-test.js @@ -7,25 +7,20 @@\n  * @flow\n  */\n \n+import {getVersionedRenderImplementation} from './utils';\n+\n describe('Fast Refresh', () => {\n   let React;\n   let ReactFreshRuntime;\n   let act;\n   let babel;\n-  let container;\n   let exportsObj;\n   let freshPlugin;\n-  let legacyRender;\n   let store;\n   let withErrorsOrWarningsIgnored;\n \n-  afterEach(() => {\n-    jest.resetModules();\n-  });\n-\n   beforeEach(() => {\n     exportsObj = undefined;\n-    container = document.createElement('div');\n \n     babel = require('@babel/core');\n     freshPlugin = require('react-refresh/babel');\n@@ -39,10 +34,12 @@ describe('Fast Refresh', () => {\n \n     const utils = require('./utils');\n     act = utils.act;\n-    legacyRender = utils.legacyRender;\n     withErrorsOrWarningsIgnored = utils.withErrorsOrWarningsIgnored;\n   });\n \n+  const {render: renderImplementation, getContainer} =\n+    getVersionedRenderImplementation();\n+\n   function execute(source) {\n     const compiled = babel.transform(source, {\n       babelrc: false,\n@@ -73,7 +70,7 @@ describe('Fast Refresh', () => {\n   function render(source) {\n     const Component = execute(source);\n     act(() => {\n-      legacyRender(<Component />, container);\n+      renderImplementation(<Component />);\n     });\n     // Module initialization shouldn't be counted as a hot update.\n     expect(ReactFreshRuntime.performReactRefresh()).toBe(null);\n@@ -98,7 +95,7 @@ describe('Fast Refresh', () => {\n       // Here, we'll just force a re-render using the newer type to emulate this.\n       const NextComponent = nextExports.default;\n       act(() => {\n-        legacyRender(<NextComponent />, container);\n+        renderImplementation(<NextComponent />);\n       });\n     }\n     act(() => {\n@@ -142,8 +139,8 @@ describe('Fast Refresh', () => {\n             <Child key=\"A\">\n     `);\n \n-    let element = container.firstChild;\n-    expect(container.firstChild).not.toBe(null);\n+    let element = getContainer().firstChild;\n+    expect(getContainer().firstChild).not.toBe(null);\n \n     patch(`\n       function Parent() {\n@@ -163,8 +160,8 @@ describe('Fast Refresh', () => {\n     `);\n \n     // State is preserved; this verifies that Fast Refresh is wired up.\n-    expect(container.firstChild).toBe(element);\n-    element = container.firstChild;\n+    expect(getContainer().firstChild).toBe(element);\n+    element = getContainer().firstChild;\n \n     patch(`\n       function Parent() {\n@@ -184,7 +181,7 @@ describe('Fast Refresh', () => {\n     `);\n \n     // State is reset because hooks changed.\n-    expect(container.firstChild).not.toBe(element);\n+    expect(getContainer().firstChild).not.toBe(element);\n   });\n \n   // @reactVersion >= 16.9",
        "date": "2024-02-05T17:09:26Z",
        "msg": "chore: use versioned render in FastRefreshDevToolsIntegration test (#28211)"
    },
    {
        "diff": "diff --git a/scripts/jest/devtools/config.build-devtools-regression.js b/a/scripts/jest/devtools/config.build-devtools-regression.js @@ -31,6 +31,8 @@ if (REACT_VERSION) {\n       '^react-dom/client$'\n     ] = `<rootDir>/build/${NODE_MODULES_DIR}/react-dom`;\n   }\n+\n+  setupFiles.push(require.resolve('./setupTests.build-devtools-regression'));\n }\n \n module.exports = {",
        "date": "2024-02-05T17:07:41Z",
        "msg": "fix: partially revert jest setup config removal to fix regression tests (#28247)\n\nPartially reverting what has been removed in\r\nhttps://github.com/facebook/react/pull/28186.\r\n\r\nWe need `'scheduler/tracing'` mock for React >= 16.8.\r\nThe error:\r\n```\r\nInvariant Violation: It is not supported to run the profiling version of a renderer (for example, `react-dom/profiling`) without also replacing the `scheduler/tracing` module with `scheduler/tracing-profiling`. Your bundler might have a setting for aliasing both modules. Learn more at http://fb.me/react-profiling\r\n```\r\n\r\nValidated by running regression tests for the whole version matrix:\r\n```\r\n./scripts/circleci/download_devtools_regression_build.js 16.0 --replaceBuild && node ./scripts/jest/jest-cli.js --build --project devtools --release-channel=experimental --reactVersion 16.0 --ci && ./scripts/circleci/download_devtools_regression_build.js 16.5 --replaceBuild && node ./scripts/jest/jest-cli.js --build --project devtools --release-channel=experimental --reactVersion 16.5 --ci && ./scripts/circleci/download_devtools_regression_build.js 16.8 --replaceBuild && node ./scripts/jest/jest-cli.js --build --project devtools --release-channel=experimental --reactVersion 16.8 --ci && ./scripts/circleci/download_devtools_regression_build.js 17.0 --replaceBuild && node ./scripts/jest/jest-cli.js --build --project devtools --release-channel=experimental --reactVersion 17.0 --ci && ./scripts/circleci/download_devtools_regression_build.js 18.0 --replaceBuild && node ./scripts/jest/jest-cli.js --build --project devtools --release-channel=experimental --reactVersion 18.0 --ci\r\n```"
    },
    {
        "diff": "diff --git a/packages/react-dom/src/__tests__/ReactDOMSuspensePlaceholder-test.js b/a/packages/react-dom/src/__tests__/ReactDOMSuspensePlaceholder-test.js @@ -11,6 +11,7 @@\n \n let React;\n let ReactDOM;\n+let ReactDOMClient;\n let Suspense;\n let Scheduler;\n let act;\n@@ -23,6 +24,7 @@ describe('ReactDOMSuspensePlaceholder', () => {\n     jest.resetModules();\n     React = require('react');\n     ReactDOM = require('react-dom');\n+    ReactDOMClient = require('react-dom/client');\n     Scheduler = require('scheduler');\n     act = require('internal-test-utils').act;\n     Suspense = React.Suspense;\n@@ -98,7 +100,7 @@ describe('ReactDOMSuspensePlaceholder', () => {\n     return text;\n   }\n \n-  it('hides and unhides timed out DOM elements', async () => {\n+  it('hides and unhides timed out DOM elements in legacy roots', async () => {\n     const divs = [\n       React.createRef(null),\n       React.createRef(null),\n@@ -144,18 +146,22 @@ describe('ReactDOMSuspensePlaceholder', () => {\n         </Suspense>\n       );\n     }\n-    ReactDOM.render(<App />, container);\n+    const root = ReactDOMClient.createRoot(container);\n+    await act(() => {\n+      root.render(<App />);\n+    });\n+\n     expect(container.textContent).toEqual('Loading...');\n \n-    await act(async () => {\n-      await resolveText('B');\n+    await act(() => {\n+      resolveText('B');\n     });\n \n     expect(container.textContent).toEqual('ABC');\n   });\n \n   it(\n-    'outside concurrent mode, re-hides children if their display is updated ' +\n+    'in legacy roots, re-hides children if their display is updated ' +\n       'but the boundary is still showing the fallback',\n     async () => {\n       const {useState} = React;\n@@ -207,7 +213,7 @@ describe('ReactDOMSuspensePlaceholder', () => {\n   );\n \n   // Regression test for https://github.com/facebook/react/issues/14188\n-  it('can call findDOMNode() in a suspended component commit phase', async () => {\n+  it('can call findDOMNode() in a suspended component commit phase in legacy roots', async () => {\n     const log = [];\n     const Lazy = React.lazy(\n       () =>\n@@ -267,7 +273,7 @@ describe('ReactDOMSuspensePlaceholder', () => {\n   });\n \n   // Regression test for https://github.com/facebook/react/issues/14188\n-  it('can call findDOMNode() in a suspended component commit phase (#2)', () => {\n+  it('can call legacy findDOMNode() in a suspended component commit phase (#2)', async () => {\n     let suspendOnce = Promise.resolve();\n     function Suspend() {\n       if (suspendOnce) {\n@@ -304,9 +310,16 @@ describe('ReactDOMSuspensePlaceholder', () => {\n       );\n     }\n \n-    ReactDOM.render(<App />, container);\n+    const root = ReactDOMClient.createRoot(container);\n+    await act(() => {\n+      root.render(<App />);\n+    });\n+\n     expect(log).toEqual(['cDM']);\n-    ReactDOM.render(<App />, container);\n+    await act(() => {\n+      root.render(<App />);\n+    });\n+\n     expect(log).toEqual(['cDM', 'cDU']);\n   });\n });",
        "date": "2024-02-04T10:02:22Z",
        "msg": "Convert ReactDOMSuspensePlaceholder to createRoot (#28168)"
    },
    {
        "diff": "diff --git a/packages/react/src/__tests__/ReactJSXElement-test.js b/a/packages/react/src/__tests__/ReactJSXElement-test.js @@ -10,8 +10,9 @@\n 'use strict';\n \n let React;\n-let ReactDOM;\n+let ReactDOMClient;\n let ReactTestUtils;\n+let act;\n \n describe('ReactJSXElement', () => {\n   let Component;\n@@ -20,8 +21,10 @@ describe('ReactJSXElement', () => {\n     jest.resetModules();\n \n     React = require('react');\n-    ReactDOM = require('react-dom');\n+    ReactDOMClient = require('react-dom/client');\n     ReactTestUtils = require('react-dom/test-utils');\n+    act = require('internal-test-utils').act;\n+\n     Component = class extends React.Component {\n       render() {\n         return <div />;\n@@ -172,14 +175,20 @@ describe('ReactJSXElement', () => {\n     expect(element.constructor).toBe(object.constructor);\n   });\n \n-  it('should use default prop value when removing a prop', () => {\n+  it('should use default prop value when removing a prop', async () => {\n     Component.defaultProps = {fruit: 'persimmon'};\n \n     const container = document.createElement('div');\n-    const instance = ReactDOM.render(<Component fruit=\"mango\" />, container);\n+    const root = ReactDOMClient.createRoot(container);\n+    let instance;\n+    await act(() => {\n+      root.render(<Component fruit=\"mango\" ref={ref => (instance = ref)} />);\n+    });\n     expect(instance.props.fruit).toBe('mango');\n \n-    ReactDOM.render(<Component />, container);\n+    await act(() => {\n+      root.render(<Component ref={ref => (instance = ref)} />);\n+    });\n     expect(instance.props.fruit).toBe('persimmon');\n   });\n ",
        "date": "2024-02-02T17:56:30Z",
        "msg": "Convert ReactJSXElement to createRoot (#28208)"
    },
    {
        "diff": "diff --git a/packages/react/src/__tests__/ReactJSXElementValidator-test.js b/a/packages/react/src/__tests__/ReactJSXElementValidator-test.js @@ -13,8 +13,10 @@\n // of dynamic errors when using JSX with Flow.\n let React;\n let ReactDOM;\n+let ReactDOMClient;\n let ReactTestUtils;\n let PropTypes;\n+let act;\n \n describe('ReactJSXElementValidator', () => {\n   let Component;\n@@ -26,7 +28,9 @@ describe('ReactJSXElementValidator', () => {\n     PropTypes = require('prop-types');\n     React = require('react');\n     ReactDOM = require('react-dom');\n+    ReactDOMClient = require('react-dom/client');\n     ReactTestUtils = require('react-dom/test-utils');\n+    act = require('internal-test-utils').act;\n \n     Component = class extends React.Component {\n       render() {\n@@ -172,7 +176,7 @@ describe('ReactJSXElementValidator', () => {\n     );\n   });\n \n-  it('should update component stack after receiving next element', () => {\n+  it('should update component stack after receiving next element', async () => {\n     function MyComp() {\n       return null;\n     }\n@@ -192,9 +196,14 @@ describe('ReactJSXElementValidator', () => {\n     }\n \n     const container = document.createElement('div');\n-    ReactDOM.render(<ParentComp warn={false} />, container);\n+    const root = ReactDOMClient.createRoot(container);\n+    await act(() => {\n+      root.render(<ParentComp warn={false} />);\n+    });\n     expect(() =>\n-      ReactDOM.render(<ParentComp warn={true} />, container),\n+      ReactDOM.flushSync(() => {\n+        root.render(<ParentComp warn={true} />);\n+      }),\n     ).toErrorDev(\n       'Warning: Failed prop type: ' +\n         'Invalid prop `color` of type `number` supplied to `MyComp`, ' +",
        "date": "2024-02-02T17:56:18Z",
        "msg": "Convert ReactJSXElementValidator to createRoot (#28209)"
    },
    {
        "diff": "diff --git a/packages/react-dom/src/__tests__/multiple-copies-of-react-test.js b/a/packages/react-dom/src/__tests__/multiple-copies-of-react-test.js @@ -10,7 +10,8 @@\n 'use strict';\n \n let React = require('react');\n-const ReactTestUtils = require('react-dom/test-utils');\n+const ReactDOMClient = require('react-dom/client');\n+const act = require('internal-test-utils').act;\n \n class TextWithStringRef extends React.Component {\n   render() {\n@@ -21,10 +22,14 @@ class TextWithStringRef extends React.Component {\n }\n \n describe('when different React version is used with string ref', () => {\n-  it('throws the \"Refs must have owner\" warning', () => {\n-    expect(() => {\n-      ReactTestUtils.renderIntoDocument(<TextWithStringRef />);\n-    }).toThrow(\n+  it('throws the \"Refs must have owner\" warning', async () => {\n+    const container = document.createElement('div');\n+    const root = ReactDOMClient.createRoot(container);\n+    await expect(\n+      act(() => {\n+        root.render(<TextWithStringRef />);\n+      }),\n+    ).rejects.toThrow(\n       'Element ref was specified as a string (foo) but no owner was set. This could happen for one of' +\n         ' the following reasons:\\n' +\n         '1. You may be adding a ref to a function component\\n' +",
        "date": "2024-02-02T08:15:53Z",
        "msg": "Convert multiple-copies-of-react to createRoot (#28198)"
    },
    {
        "diff": "diff --git a/packages/react-dom/src/__tests__/ReactDOMIframe-test.js b/a/packages/react-dom/src/__tests__/ReactDOMIframe-test.js @@ -11,22 +11,30 @@\n \n describe('ReactDOMIframe', () => {\n   let React;\n-  let ReactTestUtils;\n+  let ReactDOMClient;\n+  let act;\n \n   beforeEach(() => {\n     React = require('react');\n-    ReactTestUtils = require('react-dom/test-utils');\n+    ReactDOMClient = require('react-dom/client');\n+    act = require('internal-test-utils').act;\n   });\n \n-  it('should trigger load events', () => {\n+  it('should trigger load events', async () => {\n     const onLoadSpy = jest.fn();\n-    let iframe = React.createElement('iframe', {onLoad: onLoadSpy});\n-    iframe = ReactTestUtils.renderIntoDocument(iframe);\n+    const container = document.createElement('div');\n+    const root = ReactDOMClient.createRoot(container);\n+    await act(() => {\n+      root.render(React.createElement('iframe', {onLoad: onLoadSpy}));\n+    });\n+    const iframe = container.firstChild;\n \n     const loadEvent = document.createEvent('Event');\n     loadEvent.initEvent('load', false, false);\n \n-    iframe.dispatchEvent(loadEvent);\n+    await act(() => {\n+      iframe.dispatchEvent(loadEvent);\n+    });\n \n     expect(onLoadSpy).toHaveBeenCalled();\n   });",
        "date": "2024-02-02T08:15:43Z",
        "msg": "Convert ReactDOMIframe to createRoot (#28197)"
    },
    {
        "diff": "diff --git a/packages/react/src/__tests__/ReactChildren-test.js b/a/packages/react/src/__tests__/ReactChildren-test.js @@ -11,12 +11,14 @@\n \n describe('ReactChildren', () => {\n   let React;\n-  let ReactTestUtils;\n+  let ReactDOMClient;\n+  let act;\n \n   beforeEach(() => {\n     jest.resetModules();\n     React = require('react');\n-    ReactTestUtils = require('react-dom/test-utils');\n+    ReactDOMClient = require('react-dom/client');\n+    act = require('internal-test-utils').act;\n   });\n \n   it('should support identity for simple', () => {\n@@ -962,37 +964,49 @@ describe('ReactChildren', () => {\n   });\n \n   describe('with fragments enabled', () => {\n-    it('warns for keys for arrays of elements in a fragment', () => {\n+    it('warns for keys for arrays of elements in a fragment', async () => {\n       class ComponentReturningArray extends React.Component {\n         render() {\n           return [<div />, <div />];\n         }\n       }\n \n-      expect(() =>\n-        ReactTestUtils.renderIntoDocument(<ComponentReturningArray />),\n-      ).toErrorDev(\n+      const container = document.createElement('div');\n+      const root = ReactDOMClient.createRoot(container);\n+      await expect(async () => {\n+        await act(() => {\n+          root.render(<ComponentReturningArray />);\n+        });\n+      }).toErrorDev(\n         'Warning: ' +\n           'Each child in a list should have a unique \"key\" prop.' +\n           ' See https://reactjs.org/link/warning-keys for more information.' +\n           '\\n    in ComponentReturningArray (at **)',\n       );\n     });\n \n-    it('does not warn when there are keys on elements in a fragment', () => {\n+    it('does not warn when there are keys on elements in a fragment', async () => {\n       class ComponentReturningArray extends React.Component {\n         render() {\n           return [<div key=\"foo\" />, <div key=\"bar\" />];\n         }\n       }\n \n-      ReactTestUtils.renderIntoDocument(<ComponentReturningArray />);\n+      const container = document.createElement('div');\n+      const root = ReactDOMClient.createRoot(container);\n+      await act(() => {\n+        root.render(<ComponentReturningArray />);\n+      });\n     });\n \n-    it('warns for keys for arrays at the top level', () => {\n-      expect(() =>\n-        ReactTestUtils.renderIntoDocument([<div />, <div />]),\n-      ).toErrorDev(\n+    it('warns for keys for arrays at the top level', async () => {\n+      const container = document.createElement('div');\n+      const root = ReactDOMClient.createRoot(container);\n+      await expect(async () => {\n+        await act(() => {\n+          root.render([<div />, <div />]);\n+        });\n+      }).toErrorDev(\n         'Warning: ' +\n           'Each child in a list should have a unique \"key\" prop.' +\n           ' See https://reactjs.org/link/warning-keys for more information.',",
        "date": "2024-02-02T08:15:01Z",
        "msg": "Convert ReactChildren to createRoot (#28191)"
    },
    {
        "diff": "diff --git a/packages/react-dom/src/__tests__/InvalidEventListeners-test.js b/a/packages/react-dom/src/__tests__/InvalidEventListeners-test.js @@ -13,13 +13,15 @@ jest.mock('react-dom-bindings/src/events/isEventSupported');\n \n describe('InvalidEventListeners', () => {\n   let React;\n-  let ReactDOM;\n+  let ReactDOMClient;\n+  let act;\n   let container;\n \n   beforeEach(() => {\n     jest.resetModules();\n     React = require('react');\n-    ReactDOM = require('react-dom');\n+    ReactDOMClient = require('react-dom/client');\n+    act = require('internal-test-utils').act;\n \n     container = document.createElement('div');\n     document.body.appendChild(container);\n@@ -30,13 +32,16 @@ describe('InvalidEventListeners', () => {\n     container = null;\n   });\n \n-  it('should prevent non-function listeners, at dispatch', () => {\n-    let node;\n-    expect(() => {\n-      node = ReactDOM.render(<div onClick=\"not a function\" />, container);\n+  it('should prevent non-function listeners, at dispatch', async () => {\n+    const root = ReactDOMClient.createRoot(container);\n+    await expect(async () => {\n+      await act(() => {\n+        root.render(<div onClick=\"not a function\" />);\n+      });\n     }).toErrorDev(\n       'Expected `onClick` listener to be a function, instead got a value of `string` type.',\n     );\n+    const node = container.firstChild;\n \n     spyOnProd(console, 'error');\n \n@@ -46,11 +51,13 @@ describe('InvalidEventListeners', () => {\n     }\n     window.addEventListener('error', handleWindowError);\n     try {\n-      node.dispatchEvent(\n-        new MouseEvent('click', {\n-          bubbles: true,\n-        }),\n-      );\n+      await act(() => {\n+        node.dispatchEvent(\n+          new MouseEvent('click', {\n+            bubbles: true,\n+          }),\n+        );\n+      });\n     } finally {\n       window.removeEventListener('error', handleWindowError);\n     }\n@@ -77,12 +84,19 @@ describe('InvalidEventListeners', () => {\n     }\n   });\n \n-  it('should not prevent null listeners, at dispatch', () => {\n-    const node = ReactDOM.render(<div onClick={null} />, container);\n-    node.dispatchEvent(\n-      new MouseEvent('click', {\n-        bubbles: true,\n-      }),\n-    );\n+  it('should not prevent null listeners, at dispatch', async () => {\n+    const root = ReactDOMClient.createRoot(container);\n+    await act(() => {\n+      root.render(<div onClick={null} />);\n+    });\n+\n+    const node = container.firstChild;\n+    await act(() => {\n+      node.dispatchEvent(\n+        new MouseEvent('click', {\n+          bubbles: true,\n+        }),\n+      );\n+    });\n   });\n });",
        "date": "2024-02-02T08:14:34Z",
        "msg": "Convert InvalidEventListeners to createRoot (#28180)"
    },
    {
        "diff": "diff --git a/packages/react-native-renderer/src/__tests__/ResponderEventPlugin-test.internal.js b/a/packages/react-native-renderer/src/__tests__/ResponderEventPlugin-test.internal.js @@ -1377,11 +1377,12 @@ describe('ResponderEventPlugin', () => {\n     expect(ResponderEventPlugin._getResponder()).toBe(null);\n   });\n \n-  it('should determine the first common ancestor correctly', () => {\n+  it('should determine the first common ancestor correctly', async () => {\n     // This test was moved here from the ReactTreeTraversal test since only the\n     // ResponderEventPlugin uses `getLowestCommonAncestor`\n     const React = require('react');\n-    const ReactTestUtils = require('react-dom/test-utils');\n+    const ReactDOMClient = require('react-dom/client');\n+    const act = require('internal-test-utils').act;\n     const getLowestCommonAncestor =\n       require('react-native-renderer/src/legacy-events/ResponderEventPlugin').getLowestCommonAncestor;\n     // This works by accident and will likely break in the future.\n@@ -1422,7 +1423,12 @@ describe('ResponderEventPlugin', () => {\n       }\n     }\n \n-    const parent = ReactTestUtils.renderIntoDocument(<ParentComponent />);\n+    const container = document.createElement('div');\n+    const root = ReactDOMClient.createRoot(container);\n+    let parent;\n+    await act(() => {\n+      root.render(<ParentComponent ref={current => (parent = current)} />);\n+    });\n \n     const ancestors = [\n       // Common ancestor with self is self.",
        "date": "2024-02-01T23:53:25Z",
        "msg": "Convert ResponderEventPlugin to createRoot (#28190)"
    },
    {
        "diff": "diff --git a/packages/react-dom/src/events/__tests__/SyntheticFocusEvent-test.js b/a/packages/react-dom/src/events/__tests__/SyntheticFocusEvent-test.js @@ -9,13 +9,15 @@\n \n describe('SyntheticFocusEvent', () => {\n   let React;\n-  let ReactDOM;\n+  let ReactDOMClient;\n+  let act;\n   let container;\n \n   beforeEach(() => {\n     jest.resetModules();\n     React = require('react');\n-    ReactDOM = require('react-dom');\n+    ReactDOMClient = require('react-dom/client');\n+    act = require('internal-test-utils').act;\n \n     container = document.createElement('div');\n     document.body.appendChild(container);\n@@ -26,44 +28,54 @@ describe('SyntheticFocusEvent', () => {\n     container = null;\n   });\n \n-  test('onFocus events have the focus type', () => {\n+  test('onFocus events have the focus type', async () => {\n     const log = [];\n-    ReactDOM.render(\n-      <button\n-        onFocus={event => log.push(`onFocus: ${event.type}`)}\n-        onFocusCapture={event => log.push(`onFocusCapture: ${event.type}`)}\n-      />,\n-      container,\n-    );\n+    const root = ReactDOMClient.createRoot(container);\n+    await act(() => {\n+      root.render(\n+        <button\n+          onFocus={event => log.push(`onFocus: ${event.type}`)}\n+          onFocusCapture={event => log.push(`onFocusCapture: ${event.type}`)}\n+        />,\n+      );\n+    });\n+\n     const button = container.querySelector('button');\n \n-    button.dispatchEvent(\n-      new FocusEvent('focusin', {\n-        bubbles: true,\n-        cancelable: false,\n-      }),\n-    );\n+    await act(() => {\n+      button.dispatchEvent(\n+        new FocusEvent('focusin', {\n+          bubbles: true,\n+          cancelable: false,\n+        }),\n+      );\n+    });\n \n     expect(log).toEqual(['onFocusCapture: focus', 'onFocus: focus']);\n   });\n \n-  test('onBlur events have the blur type', () => {\n+  test('onBlur events have the blur type', async () => {\n     const log = [];\n-    ReactDOM.render(\n-      <button\n-        onBlur={event => log.push(`onBlur: ${event.type}`)}\n-        onBlurCapture={event => log.push(`onBlurCapture: ${event.type}`)}\n-      />,\n-      container,\n-    );\n+    const root = ReactDOMClient.createRoot(container);\n+    await act(() => {\n+      root.render(\n+        <button\n+          onBlur={event => log.push(`onBlur: ${event.type}`)}\n+          onBlurCapture={event => log.push(`onBlurCapture: ${event.type}`)}\n+        />,\n+      );\n+    });\n+\n     const button = container.querySelector('button');\n \n-    button.dispatchEvent(\n-      new FocusEvent('focusout', {\n-        bubbles: true,\n-        cancelable: false,\n-      }),\n-    );\n+    await act(() => {\n+      button.dispatchEvent(\n+        new FocusEvent('focusout', {\n+          bubbles: true,\n+          cancelable: false,\n+        }),\n+      );\n+    });\n \n     expect(log).toEqual(['onBlurCapture: blur', 'onBlur: blur']);\n   });",
        "date": "2024-02-01T23:49:40Z",
        "msg": "Convert SyntheticFocusEvent to createRoot (#28173)"
    },
    {
        "diff": "diff --git a/packages/react-dom/src/__tests__/ReactErrorBoundariesHooks-test.internal.js b/a/packages/react-dom/src/__tests__/ReactErrorBoundariesHooks-test.internal.js @@ -10,16 +10,18 @@\n 'use strict';\n \n let React;\n-let ReactDOM;\n+let ReactDOMClient;\n+let act;\n \n describe('ReactErrorBoundariesHooks', () => {\n   beforeEach(() => {\n     jest.resetModules();\n-    ReactDOM = require('react-dom');\n     React = require('react');\n+    ReactDOMClient = require('react-dom/client');\n+    act = require('internal-test-utils').act;\n   });\n \n-  it('should preserve hook order if errors are caught', () => {\n+  it('should preserve hook order if errors are caught', async () => {\n     function ErrorThrower() {\n       React.useMemo(() => undefined, []);\n       throw new Error('expected');\n@@ -57,10 +59,15 @@ describe('ReactErrorBoundariesHooks', () => {\n     }\n \n     const container = document.createElement('div');\n-    ReactDOM.render(<App />, container);\n+    const root = ReactDOMClient.createRoot(container);\n+    await act(() => {\n+      root.render(<App />);\n+    });\n \n-    expect(() => {\n-      ReactDOM.render(<App />, container);\n-    }).not.toThrow();\n+    await expect(\n+      act(() => {\n+        root.render(<App />);\n+      }),\n+    ).resolves.not.toThrow();\n   });\n });",
        "date": "2024-02-01T23:48:58Z",
        "msg": "Convert ReactErrorBoundariesHooks to createRoot (#28175)"
    },
    {
        "diff": "diff --git a/packages/react-dom/src/__tests__/ReactDOMServerIntegrationBasic-test.js b/a/packages/react-dom/src/__tests__/ReactDOMServerIntegrationBasic-test.js @@ -15,21 +15,21 @@ const ReactDOMServerIntegrationUtils = require('./utils/ReactDOMServerIntegratio\n const TEXT_NODE_TYPE = 3;\n \n let React;\n-let ReactDOM;\n+let ReactDOMClient;\n let ReactDOMServer;\n let ReactTestUtils;\n \n function initModules() {\n   // Reset warning cache.\n   jest.resetModules();\n   React = require('react');\n-  ReactDOM = require('react-dom');\n+  ReactDOMClient = require('react-dom/client');\n   ReactDOMServer = require('react-dom/server');\n   ReactTestUtils = require('react-dom/test-utils');\n \n   // Make them available to the helpers.\n   return {\n-    ReactDOM,\n+    ReactDOMClient,\n     ReactDOMServer,\n     ReactTestUtils,\n   };\n@@ -149,8 +149,10 @@ describe('ReactDOMServerIntegration', () => {\n       expect(await render([])).toBe(null);\n       expect(await render(false)).toBe(null);\n       expect(await render(true)).toBe(null);\n-      expect(await render(undefined)).toBe(null);\n       expect(await render([[[false]], undefined])).toBe(null);\n+\n+      // hydrateRoot errors for undefined children.\n+      expect(await render(undefined, 1)).toBe(null);\n     });\n   });\n });",
        "date": "2024-02-01T23:32:04Z",
        "msg": "Add ReactDOMClient to ServerIntegrationBasic (#28133)\n\n## Overview\r\n\r\nBranched off https://github.com/facebook/react/pull/28130\r\n\r\nIn `hydrateRoot`, we now error if you pass `undefined`:\r\n\r\n```\r\nWarning: Must provide initial children as second argument to hydrateRoot. \r\n```\r\n\r\nSo we expect 1 error for this now."
    },
    {
        "diff": "diff --git a/packages/react-dom/src/__tests__/ReactDOMServerIntegrationSelect-test.js b/a/packages/react-dom/src/__tests__/ReactDOMServerIntegrationSelect-test.js @@ -13,21 +13,21 @@\n const ReactDOMServerIntegrationUtils = require('./utils/ReactDOMServerIntegrationTestUtils');\n \n let React;\n-let ReactDOM;\n+let ReactDOMClient;\n let ReactDOMServer;\n let ReactTestUtils;\n \n function initModules() {\n   // Reset warning cache.\n   jest.resetModules();\n   React = require('react');\n-  ReactDOM = require('react-dom');\n+  ReactDOMClient = require('react-dom/client');\n   ReactDOMServer = require('react-dom/server');\n   ReactTestUtils = require('react-dom/test-utils');\n \n   // Make them available to the helpers.\n   return {\n-    ReactDOM,\n+    ReactDOMClient,\n     ReactDOMServer,\n     ReactTestUtils,\n   };\n@@ -253,7 +253,7 @@ describe('ReactDOMServerIntegrationSelect', () => {\n           <option value=\"first\">First</option>\n           <option value=\"true\">True</option>\n         </select>,\n-        1,\n+        2,\n       );\n       expect(e.firstChild.selected).toBe(false);\n       expect(e.lastChild.selected).toBe(true);\n@@ -268,7 +268,7 @@ describe('ReactDOMServerIntegrationSelect', () => {\n           <option value=\"first\">First</option>\n           <option value=\"undefined\">Undefined</option>\n         </select>,\n-        1,\n+        2,\n       );\n       expect(e.firstChild.selected).toBe(true);\n       expect(e.lastChild.selected).toBe(false);",
        "date": "2024-02-01T23:31:52Z",
        "msg": "Add ReactDOMClient to ServerIntegrationSelect (#28132)\n\n## Overview\r\n\r\nBranched off https://github.com/facebook/react/pull/28130\r\n\r\n## React for count changing\r\n### Before\r\nThese tests are weird because on main they pass, but log to the console:\r\n\r\n```\r\nWe expected 2 warning(s), but saw 1 warning(s).\r\nWe saw these warnings:\r\n    Warning: Expected server HTML to contain a matching <select> in <div>.\r\n        at select\r\n```\r\n\r\nThe other one is ignored. The `expect(console.errors).toBeCalledWith(2)`\r\ndoesn't account for ignored calls, so the test passes with the two\r\nexpected (the +1 is in the test utiles). The ignored warning is\r\n\r\n```\r\nWarning: ReactDOM.hydrate is no longer supported in React 18. Use hydrateRoot instead. \r\n```\r\n\r\nSo the mismatch is in the ignored warnings. \r\n\r\n### After\r\n\r\nAfter switching to `createRoot`, it still logs:\r\n\r\n```\r\nWe expected 2 warning(s), but saw 1 warning(s).\r\nWe saw these warnings:\r\n    Warning: Expected server HTML to contain a matching <select> in <div>.\r\n        at select\r\n```\r\n\r\nBut the test fails due to an unexpected error count. The new ignored\r\nerrors are:\r\n\r\n```\r\nError: Uncaught [Error: Hydration failed because the initial UI does not match what was rendered on the server.]\r\nWarning: An error occurred during hydration. The server HTML was replaced with client content in <div>.\r\nError: Hydration failed because the initial UI does not match what was rendered on the server.\r\nError: There was an error while hydrating. Because the error happened outside of a Suspense boundary, the entire root will switch to client rendering.\r\n```\r\n\r\nThese seem to be the correct warnings to fire in `createRoot`, so the\r\nfix is to update the number of warnings we expect."
    },
    {
        "diff": "diff --git a/.github/ISSUE_TEMPLATE/config.yml b/a/.github/ISSUE_TEMPLATE/config.yml @@ -1,6 +1,6 @@\n contact_links:\n     - name: \ud83d\udcc3 Documentation Issue\n-      url: https://github.com/reactjs/reactjs.org/issues/new\n+      url: https://github.com/reactjs/react.dev/issues/new/choose\n       about: This issue tracker is not for documentation issues. Please file documentation issues here.\n     - name: \ud83e\udd14 Questions and Help\n       url: https://reactjs.org/community/support.html",
        "date": "2024-02-01T19:44:26Z",
        "msg": "Update react docs link in issue template (#28195)"
    },
    {
        "diff": "diff --git a/scripts/flow/config/flowconfig b/a/scripts/flow/config/flowconfig @@ -2,7 +2,8 @@\n .*/scripts/bench/.*\n .*/build/.*\n .*/fixtures/.*\n-.*/.tempUserDataDir/.*\n+# Any hidden directory\n+.*/\\..*\n \n # These shims are copied into external projects:\n .*/rollup/shims/facebook-www/.*",
        "date": "2024-02-01T16:24:04Z",
        "msg": "[flow] ignore hidden directories (#28096)\n\n[flow] ignore hidden directories"
    },
    {
        "diff": "diff --git a/package.json b/a/package.json @@ -130,7 +130,8 @@\n     \"download-build-for-head\": \"node ./scripts/release/download-experimental-build.js --commit=$(git rev-parse HEAD)\",\n     \"download-build-in-codesandbox-ci\": \"cd scripts/release && yarn install && cd ../../ && yarn download-build-for-head || yarn build --type=node react/index react-dom/index react-dom/src/server react-dom/test-utils scheduler/index react/jsx-runtime react/jsx-dev-runtime\",\n     \"check-release-dependencies\": \"node ./scripts/release/check-release-dependencies\",\n-    \"generate-inline-fizz-runtime\": \"node ./scripts/rollup/generate-inline-fizz-runtime.js\"\n+    \"generate-inline-fizz-runtime\": \"node ./scripts/rollup/generate-inline-fizz-runtime.js\",\n+    \"flags\": \"node ./scripts/flags/flags.js\"\n   },\n   \"resolutions\": {\n     \"react-is\": \"npm:react-is\"",
        "date": "2024-01-31T04:15:50Z",
        "msg": "Add script to output flag values (#28115)\n\n## Overview\r\n\r\nDepends on: https://github.com/facebook/react/pull/28116\r\n\r\nAdd `yarn flags` to output at table of all feature flags. \r\n\r\nProvides options to output a csv file, diff two or more builds, and\r\nsort.\r\n\r\n### Options\r\n<img width=\"1154\" alt=\"Screenshot 2024-01-26 at 4 06 53\u202fPM\"\r\nsrc=\"https://github.com/facebook/react/assets/2440089/c3dbd632-adb9-4416-9488-1c603ee4e789\">\r\n\r\n### `yarn flags --diff next canary`\r\n<img width=\"637\" alt=\"Screenshot 2024-01-26 at 4 15 03\u202fPM\"\r\nsrc=\"https://github.com/facebook/react/assets/2440089/1a681ae8-ce33-42d0-9d1f-3f415a8e1c3d\">\r\n\r\n\r\n### `yarn flags --diff canary experimental`\r\n<img width=\"637\" alt=\"Screenshot 2024-01-26 at 4 14 51\u202fPM\"\r\nsrc=\"https://github.com/facebook/react/assets/2440089/c66f66cb-3cee-4df6-a1d1-b24600ebd4b3\">\r\n\r\n\r\n### `yarn flags` (all flags)\r\n\r\n<img width=\"1054\" alt=\"Screenshot 2024-01-26 at 4 16 30\u202fPM\"\r\nsrc=\"https://github.com/facebook/react/assets/2440089/4ce99c7c-825e-4bca-9b83-ca5d6e2bc1a9\">"
    },
    {
        "diff": "diff --git a/packages/react-dom-bindings/src/client/ReactFiberConfigDOM.js b/a/packages/react-dom-bindings/src/client/ReactFiberConfigDOM.js @@ -3481,10 +3481,20 @@ function onUnsuspend(this: SuspendedState) {\n   }\n }\n \n+// We use a value that is type distinct from precedence to track which one is last.\n+// This ensures there is no collision with user defined precedences. Normally we would\n+// just track this in module scope but since the precedences are tracked per HoistableRoot\n+// we need to associate it to something other than a global scope hence why we try to\n+// colocate it with the map of precedences in the first place\n+const LAST_PRECEDENCE = null;\n+\n // This is typecast to non-null because it will always be set before read.\n // it is important that this not be used except when the stack guarantees it exists.\n // Currentlyt his is only during insertSuspendedStylesheet.\n-let precedencesByRoot: Map<HoistableRoot, Map<string, Instance>> = (null: any);\n+let precedencesByRoot: Map<\n+  HoistableRoot,\n+  Map<string | typeof LAST_PRECEDENCE, Instance>,\n+> = (null: any);\n \n function insertSuspendedStylesheets(\n   state: SuspendedState,\n@@ -3539,27 +3549,27 @@ function insertStylesheetIntoRoot(\n         // and will be hoisted by the Fizz runtime imminently.\n         node.getAttribute('media') !== 'not all'\n       ) {\n-        precedences.set('p' + node.dataset.precedence, node);\n+        precedences.set(node.dataset.precedence, node);\n         last = node;\n       }\n     }\n     if (last) {\n-      precedences.set('last', last);\n+      precedences.set(LAST_PRECEDENCE, last);\n     }\n   } else {\n-    last = precedences.get('last');\n+    last = precedences.get(LAST_PRECEDENCE);\n   }\n \n   // We only call this after we have constructed an instance so we assume it here\n   const instance: HTMLLinkElement = (resource.instance: any);\n   // We will always have a precedence for stylesheet instances\n   const precedence: string = (instance.getAttribute('data-precedence'): any);\n \n-  const prior = precedences.get('p' + precedence) || last;\n+  const prior = precedences.get(precedence) || last;\n   if (prior === last) {\n-    precedences.set('last', instance);\n+    precedences.set(LAST_PRECEDENCE, instance);\n   }\n-  precedences.set('p' + precedence, instance);\n+  precedences.set(precedence, instance);\n \n   this.count++;\n   const onComplete = onUnsuspend.bind(this);",
        "date": "2024-01-30T18:10:19Z",
        "msg": "[Fiber] Use a safer strategy to track the last precedence (#28110)\n\nUses a safer strategy to track the last precedence to avoid the need to\r\nconsistently remember to preprend `'p'` to the precedence value"
    },
    {
        "diff": "diff --git a/scripts/jest/setupTests.www.js b/a/scripts/jest/setupTests.www.js @@ -30,9 +30,6 @@ jest.mock('scheduler/src/SchedulerFeatureFlags', () => {\n \n   // These flags are not a dynamic on www, but we still want to run\n   // tests in both versions.\n-  actual.enableIsInputPending = __VARIANT__;\n-  actual.enableIsInputPendingContinuous = __VARIANT__;\n-  actual.enableProfiling = __VARIANT__;\n   actual.enableSchedulerDebugging = __VARIANT__;\n \n   return actual;",
        "date": "2024-01-29T18:39:39Z",
        "msg": "Remove duplicate dynamic scheduler flags (#28100)\n\nThese were made dynamic again in\r\nhttps://github.com/facebook/react/pull/27919, and already have the\r\ndynamic flags set. It's a bummer to push this around, we should come up\r\nwith a better way."
    },
    {
        "diff": "diff --git a/packages/eslint-plugin-react-hooks/__tests__/ESLintRulesOfHooks-test.js b/a/packages/eslint-plugin-react-hooks/__tests__/ESLintRulesOfHooks-test.js @@ -521,6 +521,39 @@ const tests = {\n         }\n       `,\n     },\n+    {\n+      code: normalizeIndent`\n+        export const notAComponent = () => {\n+           return () => {\n+            useState();\n+          }\n+        }\n+      `,\n+      // TODO: this should error but doesn't.\n+      // errors: [functionError('use', 'notAComponent')],\n+    },\n+    {\n+      code: normalizeIndent`\n+        export default () => {\n+          if (isVal) {\n+            useState(0);\n+          }\n+        }\n+      `,\n+      // TODO: this should error but doesn't.\n+      // errors: [genericError('useState')],\n+    },\n+    {\n+      code: normalizeIndent`\n+        function notAComponent() {\n+          return new Promise.then(() => {\n+            useState();\n+          });\n+        }\n+      `,\n+      // TODO: this should error but doesn't.\n+      // errors: [genericError('useState')],\n+    },\n   ],\n   invalid: [\n     {",
        "date": "2024-01-29T17:54:32Z",
        "msg": "Add lint tests that should fail (#28147)\n\nThese though fail.\r\n\r\nAnon default export: https://github.com/facebook/react/issues/21181\r\nPromise callbacks: https://github.com/facebook/react/issues/26186\r\nReturning anon functions: https://github.com/facebook/react/issues/22520"
    },
    {
        "diff": "diff --git a/packages/react-dom/src/__tests__/ReactMultiChildText-test.js b/a/packages/react-dom/src/__tests__/ReactMultiChildText-test.js @@ -11,7 +11,6 @@\n \n const React = require('react');\n const ReactDOMClient = require('react-dom/client');\n-const ReactTestUtils = require('react-dom/test-utils');\n const act = require('internal-test-utils').act;\n \n // Helpers\n@@ -174,46 +173,67 @@ describe('ReactMultiChildText', () => {\n     ]);\n   });\n \n-  it('should throw if rendering both HTML and children', () => {\n-    expect(function () {\n-      ReactTestUtils.renderIntoDocument(\n-        <div dangerouslySetInnerHTML={{__html: 'abcdef'}}>ghjkl</div>,\n-      );\n-    }).toThrow();\n+  it('should throw if rendering both HTML and children', async () => {\n+    const container = document.createElement('div');\n+    const root = ReactDOMClient.createRoot(container);\n+    await expect(\n+      act(() => {\n+        root.render(\n+          <div dangerouslySetInnerHTML={{__html: 'abcdef'}}>ghjkl</div>,\n+        );\n+      }),\n+    ).rejects.toThrow();\n   });\n \n-  it('should render between nested components and inline children', () => {\n-    ReactTestUtils.renderIntoDocument(\n-      <div>\n-        <h1>\n-          <span />\n-          <span />\n-        </h1>\n-      </div>,\n-    );\n-\n-    expect(function () {\n-      ReactTestUtils.renderIntoDocument(\n-        <div>\n-          <h1>A</h1>\n-        </div>,\n-      );\n-    }).not.toThrow();\n-\n-    expect(function () {\n-      ReactTestUtils.renderIntoDocument(\n-        <div>\n-          <h1>{['A']}</h1>\n-        </div>,\n-      );\n-    }).not.toThrow();\n+  it('should render between nested components and inline children', async () => {\n+    let container = document.createElement('div');\n+    let root = ReactDOMClient.createRoot(container);\n \n-    expect(function () {\n-      ReactTestUtils.renderIntoDocument(\n+    await act(() => {\n+      root.render(\n         <div>\n-          <h1>{['A', 'B']}</h1>\n+          <h1>\n+            <span />\n+            <span />\n+          </h1>\n         </div>,\n       );\n-    }).not.toThrow();\n+    });\n+\n+    container = document.createElement('div');\n+    root = ReactDOMClient.createRoot(container);\n+    await expect(\n+      act(() => {\n+        root.render(\n+          <div>\n+            <h1>A</h1>\n+          </div>,\n+        );\n+      }),\n+    ).resolves.not.toThrow();\n+\n+    container = document.createElement('div');\n+    root = ReactDOMClient.createRoot(container);\n+    await expect(\n+      act(() => {\n+        root.render(\n+          <div>\n+            <h1>{['A']}</h1>\n+          </div>,\n+        );\n+      }),\n+    ).resolves.not.toThrow();\n+\n+    container = document.createElement('div');\n+    root = ReactDOMClient.createRoot(container);\n+    await expect(\n+      act(() => {\n+        root.render(\n+          <div>\n+            <h1>{['A', 'B']}</h1>\n+          </div>,\n+        );\n+      }),\n+    ).resolves.not.toThrow();\n   });\n });",
        "date": "2024-01-29T08:11:24Z",
        "msg": "Convert ReactMultiChildText to createRoot (#28140)"
    },
    {
        "diff": "diff --git a/packages/react-dom/src/__tests__/ReactMockedComponent-test.js b/a/packages/react-dom/src/__tests__/ReactMockedComponent-test.js @@ -10,16 +10,18 @@\n 'use strict';\n \n let React;\n-let ReactDOM;\n+let ReactDOMClient;\n+let act;\n \n let MockedComponent;\n let ReactDOMServer;\n \n describe('ReactMockedComponent', () => {\n   beforeEach(() => {\n     React = require('react');\n-    ReactDOM = require('react-dom');\n+    ReactDOMClient = require('react-dom/client');\n     ReactDOMServer = require('react-dom/server');\n+    act = require('internal-test-utils').act;\n \n     MockedComponent = class extends React.Component {\n       render() {\n@@ -30,15 +32,23 @@ describe('ReactMockedComponent', () => {\n     MockedComponent.prototype.render = jest.fn();\n   });\n \n-  it('should allow a mocked component to be rendered', () => {\n+  it('should allow a mocked component to be rendered', async () => {\n     const container = document.createElement('container');\n-    ReactDOM.render(<MockedComponent />, container);\n+    const root = ReactDOMClient.createRoot(container);\n+    await act(() => {\n+      root.render(<MockedComponent />);\n+    });\n   });\n \n-  it('should allow a mocked component to be updated in dev', () => {\n+  it('should allow a mocked component to be updated in dev', async () => {\n     const container = document.createElement('container');\n-    ReactDOM.render(<MockedComponent />, container);\n-    ReactDOM.render(<MockedComponent />, container);\n+    const root = ReactDOMClient.createRoot(container);\n+    await act(() => {\n+      root.render(<MockedComponent />);\n+    });\n+    await act(() => {\n+      root.render(<MockedComponent />);\n+    });\n   });\n \n   it('should allow a mocked component to be rendered in dev (SSR)', () => {",
        "date": "2024-01-26T22:28:58Z",
        "msg": "Use createRoot in ReactMockedComponent-test (#28087)\n\nCo-authored-by: Jack Pope <jackpope@meta.com>"
    },
    {
        "diff": "diff --git a/packages/react-dom/src/events/__tests__/SyntheticEvent-test.js b/a/packages/react-dom/src/events/__tests__/SyntheticEvent-test.js @@ -10,16 +10,20 @@\n 'use strict';\n \n let React;\n-let ReactDOM;\n+let ReactDOMClient;\n+let act;\n \n describe('SyntheticEvent', () => {\n   let container;\n+  let root;\n \n   beforeEach(() => {\n     React = require('react');\n-    ReactDOM = require('react-dom');\n+    ReactDOMClient = require('react-dom/client');\n+    act = require('internal-test-utils').act;\n \n     container = document.createElement('div');\n+    root = ReactDOMClient.createRoot(container);\n     document.body.appendChild(container);\n   });\n \n@@ -28,7 +32,7 @@ describe('SyntheticEvent', () => {\n     container = null;\n   });\n \n-  it('should be able to `preventDefault`', () => {\n+  it('should be able to `preventDefault`', async () => {\n     let expectedCount = 0;\n \n     const eventHandler = syntheticEvent => {\n@@ -39,7 +43,11 @@ describe('SyntheticEvent', () => {\n \n       expectedCount++;\n     };\n-    const node = ReactDOM.render(<div onClick={eventHandler} />, container);\n+    const nodeRef = React.createRef();\n+    await act(async () => {\n+      root.render(<div onClick={eventHandler} ref={nodeRef} />);\n+    });\n+    const node = nodeRef.current;\n \n     const event = document.createEvent('Event');\n     event.initEvent('click', true, true);\n@@ -48,15 +56,19 @@ describe('SyntheticEvent', () => {\n     expect(expectedCount).toBe(1);\n   });\n \n-  it('should be prevented if nativeEvent is prevented', () => {\n+  it('should be prevented if nativeEvent is prevented', async () => {\n     let expectedCount = 0;\n \n     const eventHandler = syntheticEvent => {\n       expect(syntheticEvent.isDefaultPrevented()).toBe(true);\n \n       expectedCount++;\n     };\n-    const node = ReactDOM.render(<div onClick={eventHandler} />, container);\n+    const nodeRef = React.createRef();\n+    await act(async () => {\n+      root.render(<div onClick={eventHandler} ref={nodeRef} />);\n+    });\n+    const node = nodeRef.current;\n \n     let event;\n     event = document.createEvent('Event');\n@@ -80,7 +92,7 @@ describe('SyntheticEvent', () => {\n     expect(expectedCount).toBe(2);\n   });\n \n-  it('should be able to `stopPropagation`', () => {\n+  it('should be able to `stopPropagation`', async () => {\n     let expectedCount = 0;\n \n     const eventHandler = syntheticEvent => {\n@@ -90,7 +102,11 @@ describe('SyntheticEvent', () => {\n \n       expectedCount++;\n     };\n-    const node = ReactDOM.render(<div onClick={eventHandler} />, container);\n+    const nodeRef = React.createRef();\n+    await act(async () => {\n+      root.render(<div onClick={eventHandler} ref={nodeRef} />);\n+    });\n+    const node = nodeRef.current;\n \n     const event = document.createEvent('Event');\n     event.initEvent('click', true, true);",
        "date": "2024-01-26T21:17:44Z",
        "msg": "Convert SyntheticEvent-test.js to createRoot (#28118)"
    },
    {
        "diff": "diff --git a/packages/react-dom-bindings/src/client/ReactFiberConfigDOM.js b/a/packages/react-dom-bindings/src/client/ReactFiberConfigDOM.js @@ -3559,7 +3559,7 @@ function insertStylesheetIntoRoot(\n   if (prior === last) {\n     precedences.set('last', instance);\n   }\n-  precedences.set(precedence, instance);\n+  precedences.set('p' + precedence, instance);\n \n   this.count++;\n   const onComplete = onUnsuspend.bind(this);",
        "date": "2024-01-26T15:54:58Z",
        "msg": "fix incorrect insertion order of stylesheets (#28108)\n\n## Summary\r\n\r\nIn the precendences Map every key is prefixed with `p`. This fixes one\r\ncase where this is missing.\r\n\r\n## How did you test this change?\r\n\r\n<!--\r\nDemonstrate the code is solid. Example: The exact commands you ran and\r\ntheir output, screenshots / videos if the pull request changes the user\r\ninterface.\r\nHow exactly did you verify that your PR solves the issue you wanted to\r\nsolve?\r\n  If you leave this empty, your PR will very likely be closed.\r\n-->"
    },
    {
        "diff": "diff --git a/packages/react-dom/src/events/__tests__/SyntheticWheelEvent-test.js b/a/packages/react-dom/src/events/__tests__/SyntheticWheelEvent-test.js @@ -10,32 +10,38 @@\n 'use strict';\n \n let React;\n-let ReactDOM;\n+let ReactDOMClient;\n+let act;\n \n describe('SyntheticWheelEvent', () => {\n   let container;\n+  let root;\n \n   beforeEach(() => {\n     React = require('react');\n-    ReactDOM = require('react-dom');\n+    ReactDOMClient = require('react-dom/client');\n+    act = require('internal-test-utils').act;\n \n     // The container has to be attached for events to fire.\n     container = document.createElement('div');\n     document.body.appendChild(container);\n+    root = ReactDOMClient.createRoot(container);\n   });\n \n   afterEach(() => {\n     document.body.removeChild(container);\n     container = null;\n   });\n \n-  it('should normalize properties from the MouseEvent interface', () => {\n+  it('should normalize properties from the MouseEvent interface', async () => {\n     const events = [];\n     const onWheel = event => {\n       event.persist();\n       events.push(event);\n     };\n-    ReactDOM.render(<div onWheel={onWheel} />, container);\n+    await act(async () => {\n+      root.render(<div onWheel={onWheel} />);\n+    });\n \n     container.firstChild.dispatchEvent(\n       new MouseEvent('wheel', {\n@@ -48,13 +54,16 @@ describe('SyntheticWheelEvent', () => {\n     expect(events[0].button).toBe(1);\n   });\n \n-  it('should normalize properties from the WheelEvent interface', () => {\n+  it('should normalize properties from the WheelEvent interface', async () => {\n     const events = [];\n     const onWheel = event => {\n       event.persist();\n       events.push(event);\n     };\n-    ReactDOM.render(<div onWheel={onWheel} />, container);\n+\n+    await act(async () => {\n+      root.render(<div onWheel={onWheel} />);\n+    });\n \n     let event = new MouseEvent('wheel', {\n       bubbles: true,\n@@ -83,7 +92,7 @@ describe('SyntheticWheelEvent', () => {\n     expect(events[1].deltaY).toBe(-50);\n   });\n \n-  it('should be able to `preventDefault` and `stopPropagation`', () => {\n+  it('should be able to `preventDefault` and `stopPropagation`', async () => {\n     const events = [];\n     const onWheel = event => {\n       expect(event.isDefaultPrevented()).toBe(false);\n@@ -92,7 +101,9 @@ describe('SyntheticWheelEvent', () => {\n       event.persist();\n       events.push(event);\n     };\n-    ReactDOM.render(<div onWheel={onWheel} />, container);\n+    await act(async () => {\n+      root.render(<div onWheel={onWheel} />);\n+    });\n \n     container.firstChild.dispatchEvent(\n       new MouseEvent('wheel', {\n@@ -111,5 +122,6 @@ describe('SyntheticWheelEvent', () => {\n     );\n \n     expect(events.length).toBe(2);\n+    expect.assertions(5);\n   });\n });",
        "date": "2024-01-26T08:05:08Z",
        "msg": "Convert SyntheticWheelEvent-test.js to createRoot (#28103)"
    },
    {
        "diff": "diff --git a/packages/react-dom/src/__tests__/validateDOMNesting-test.js b/a/packages/react-dom/src/__tests__/validateDOMNesting-test.js @@ -11,6 +11,7 @@\n \n const React = require('react');\n const ReactDOM = require('react-dom');\n+const ReactDOMClient = require('react-dom/client');\n \n function expectWarnings(tags, warnings = [], withoutStack = 0) {\n   tags = [...tags];\n@@ -28,8 +29,13 @@ function expectWarnings(tags, warnings = [], withoutStack = 0) {\n     element = <Tag>{element}</Tag>;\n   }\n \n+  const root = ReactDOMClient.createRoot(container);\n   if (warnings.length) {\n-    expect(() => ReactDOM.render(element, container)).toErrorDev(warnings, {\n+    expect(() => {\n+      ReactDOM.flushSync(() => {\n+        root.render(element);\n+      });\n+    }).toErrorDev(warnings, {\n       withoutStack,\n     });\n   }",
        "date": "2024-01-26T03:30:56Z",
        "msg": "Convert validateDOMNesting to createRoot (#28098)\n\nezpz"
    },
    {
        "diff": "diff --git a/packages/react-dom/src/__tests__/ReactCompositeComponentNestedState-test.js b/a/packages/react-dom/src/__tests__/ReactCompositeComponentNestedState-test.js @@ -10,15 +10,17 @@\n 'use strict';\n \n let React;\n-let ReactDOM;\n+let ReactDOMClient;\n+let act;\n \n describe('ReactCompositeComponentNestedState-state', () => {\n   beforeEach(() => {\n     React = require('react');\n-    ReactDOM = require('react-dom');\n+    ReactDOMClient = require('react-dom/client');\n+    act = require('internal-test-utils').act;\n   });\n \n-  it('should provide up to date values for props', () => {\n+  it('should provide up to date values for props', async () => {\n     class ParentComponent extends React.Component {\n       state = {color: 'blue'};\n \n@@ -96,11 +98,16 @@ describe('ReactCompositeComponentNestedState-state', () => {\n     document.body.appendChild(container);\n \n     const logger = jest.fn();\n+    const root = ReactDOMClient.createRoot(container);\n \n-    void ReactDOM.render(<ParentComponent logger={logger} />, container);\n+    await act(async () => {\n+      root.render(<ParentComponent logger={logger} />);\n+    });\n \n-    // click \"light green\"\n-    container.childNodes[0].childNodes[3].click();\n+    await act(async () => {\n+      // click \"light green\"\n+      container.childNodes[0].childNodes[3].click();\n+    });\n \n     expect(logger.mock.calls).toEqual([\n       ['parent-render', 'blue'],",
        "date": "2024-01-24T15:58:07Z",
        "msg": "Convert ReactCompositeComponentNestedState to createRoot (#28066)"
    },
    {
        "diff": "diff --git a/packages/react-dom/src/__tests__/ReactServerRenderingHydration-test.js b/a/packages/react-dom/src/__tests__/ReactServerRenderingHydration-test.js @@ -122,7 +122,7 @@ describe('ReactDOMServerHydration', () => {\n   // We have a polyfill for autoFocus on the client, but we intentionally don't\n   // want it to call focus() when hydrating because this can mess up existing\n   // focus before the JS has loaded.\n-  it('should emit autofocus on the server but not focus() when hydrating', () => {\n+  it('should emit autofocus on the server but not focus() when hydrating', async () => {\n     const element = document.createElement('div');\n     element.innerHTML = ReactDOMServer.renderToString(\n       <input autoFocus={true} />,\n@@ -131,26 +131,35 @@ describe('ReactDOMServerHydration', () => {\n \n     // It should not be called on mount.\n     element.firstChild.focus = jest.fn();\n-    ReactDOM.hydrate(<input autoFocus={true} />, element);\n+    const root = await act(() =>\n+      ReactDOMClient.hydrateRoot(element, <input autoFocus={true} />),\n+    );\n     expect(element.firstChild.focus).not.toHaveBeenCalled();\n \n     // Or during an update.\n-    ReactDOM.render(<input autoFocus={true} />, element);\n+    await act(() => {\n+      root.render(<input autoFocus={true} />);\n+    });\n     expect(element.firstChild.focus).not.toHaveBeenCalled();\n   });\n \n-  it('should not focus on either server or client with autofocus={false}', () => {\n+  it('should not focus on either server or client with autofocus={false}', async () => {\n     const element = document.createElement('div');\n     element.innerHTML = ReactDOMServer.renderToString(\n       <input autoFocus={false} />,\n     );\n     expect(element.firstChild.autofocus).toBe(false);\n \n     element.firstChild.focus = jest.fn();\n-    ReactDOM.hydrate(<input autoFocus={false} />, element);\n+    const root = await act(() =>\n+      ReactDOMClient.hydrateRoot(element, <input autoFocus={false} />),\n+    );\n+\n     expect(element.firstChild.focus).not.toHaveBeenCalled();\n \n-    ReactDOM.render(<input autoFocus={false} />, element);\n+    await act(() => {\n+      root.render(<input autoFocus={false} />);\n+    });\n     expect(element.firstChild.focus).not.toHaveBeenCalled();\n   });\n ",
        "date": "2024-01-24T15:38:28Z",
        "msg": "Convert ReactServerRenderingHydration-test to createRoot (partially) (#28010)\n\nConvert ReactServerRenderingHydration-test to createRoot (partially)\r\n\r\nSome tests seem to be specifically testing the legacy APIs, maybe we\r\nneed to keep those around. Keeping this PR to the simple updates."
    },
    {
        "diff": "diff --git a/packages/react-dom/src/__tests__/ReactTreeTraversal-test.js b/a/packages/react-dom/src/__tests__/ReactTreeTraversal-test.js @@ -10,7 +10,9 @@\n 'use strict';\n \n let React;\n-let ReactDOM;\n+let ReactDOMClient;\n+let act;\n+let root;\n \n const ChildComponent = ({id, eventHandler}) => (\n   <div\n@@ -68,9 +70,10 @@ describe('ReactTreeTraversal', () => {\n   let outerNode1;\n   let outerNode2;\n \n-  beforeEach(() => {\n+  beforeEach(async () => {\n     React = require('react');\n-    ReactDOM = require('react-dom');\n+    ReactDOMClient = require('react-dom/client');\n+    act = require('internal-test-utils').act;\n \n     mockFn.mockReset();\n \n@@ -81,7 +84,10 @@ describe('ReactTreeTraversal', () => {\n     document.body.appendChild(outerNode1);\n     document.body.appendChild(outerNode2);\n \n-    ReactDOM.render(<ParentComponent eventHandler={mockFn} />, container);\n+    root = ReactDOMClient.createRoot(container);\n+    await act(() => {\n+      root.render(<ParentComponent eventHandler={mockFn} />);\n+    });\n   });\n \n   afterEach(() => {",
        "date": "2024-01-22T22:13:10Z",
        "msg": "Use createRoot for ReactTreeTraversal-test (#28051)"
    },
    {
        "diff": "diff --git a/packages/shared/__tests__/describeComponentFrame-test.js b/a/packages/shared/__tests__/describeComponentFrame-test.js @@ -10,16 +10,18 @@\n 'use strict';\n \n let React;\n-let ReactDOM;\n+let ReactDOMClient;\n+let act;\n \n describe('Component stack trace displaying', () => {\n   beforeEach(() => {\n     React = require('react');\n-    ReactDOM = require('react-dom');\n+    ReactDOMClient = require('react-dom');\n+    act = require('internal-test-utils').act;\n   });\n \n   // @gate !enableComponentStackLocations || !__DEV__\n-  it('should provide filenames in stack traces', () => {\n+  it('should provide filenames in stack traces', async () => {\n     class Component extends React.Component {\n       render() {\n         return [<span>a</span>, <span>b</span>];\n@@ -88,15 +90,21 @@ describe('Component stack trace displaying', () => {\n       'C:\\\\funny long (path)/index.js': 'funny long (path)/index.js',\n       'C:\\\\funny long (path)/index.jsx': 'funny long (path)/index.jsx',\n     };\n-    Object.keys(fileNames).forEach((fileName, i) => {\n+\n+    const root = ReactDOMClient.createRoot(container);\n+\n+    let i = 0;\n+    for (const fileName in fileNames) {\n       Component.displayName = 'Component ' + i;\n-      ReactDOM.render(\n-        <Component __source={{fileName, lineNumber: i}} />,\n-        container,\n-      );\n-    });\n+\n+      await act(() => {\n+        root.render(<Component __source={{fileName, lineNumber: i}} />);\n+      });\n+\n+      i++;\n+    }\n     if (__DEV__) {\n-      let i = 0;\n+      i = 0;\n       expect(console.error).toHaveBeenCalledTimes(\n         Object.keys(fileNames).length,\n       );",
        "date": "2024-01-22T14:08:39Z",
        "msg": "Convert describeComponentFrame to createRoot (#28001)"
    },
    {
        "diff": "diff --git a/packages/shared/__tests__/ReactError-test.internal.js b/a/packages/shared/__tests__/ReactError-test.internal.js @@ -9,7 +9,8 @@\n 'use strict';\n \n let React;\n-let ReactDOM;\n+let ReactDOMClient;\n+let act;\n \n describe('ReactError', () => {\n   let globalErrorMock;\n@@ -27,7 +28,8 @@ describe('ReactError', () => {\n     }\n     jest.resetModules();\n     React = require('react');\n-    ReactDOM = require('react-dom');\n+    ReactDOMClient = require('react-dom/client');\n+    act = require('internal-test-utils').act;\n   });\n \n   afterEach(() => {\n@@ -39,20 +41,35 @@ describe('ReactError', () => {\n   // @gate build === \"production\"\n   // @gate !source\n   it('should error with minified error code', () => {\n-    expect(() => ReactDOM.render('Hi', null)).toThrowError(\n+    expect(() => {\n+      ReactDOMClient.createRoot(null);\n+    }).toThrowError(\n       'Minified React error #200; visit ' +\n         'https://react.dev/errors/200' +\n         ' for the full message or use the non-minified dev environment' +\n         ' for full errors and additional helpful warnings.',\n     );\n   });\n \n-  it('should serialize arguments', () => {\n+  // @gate build === \"production\"\n+  // @gate !source\n+  it('should serialize arguments', async () => {\n     function Oops() {\n-      return;\n+      return {};\n     }\n     Oops.displayName = '#wtf';\n+\n     const container = document.createElement('div');\n-    expect(() => ReactDOM.render(<Oops />, container)).not.toThrowError();\n+    const root = ReactDOMClient.createRoot(container);\n+    await expect(async () => {\n+      await act(async () => {\n+        root.render(<Oops />);\n+      });\n+    }).rejects.toThrow(\n+      'Minified React error #152; visit ' +\n+        'https://reactjs.org/docs/error-decoder.html?invariant=152&args[]=%23wtf' +\n+        ' for the full message or use the non-minified dev environment' +\n+        ' for full errors and additional helpful warnings.',\n+    );\n   });\n });",
        "date": "2024-01-19T19:35:56Z",
        "msg": "Convert ReactError-test to createRoot (#27995)"
    },
    {
        "diff": "diff --git a/packages/react-reconciler/src/__tests__/ReactUpdaters-test.internal.js b/a/packages/react-reconciler/src/__tests__/ReactUpdaters-test.internal.js @@ -106,15 +106,15 @@ describe('updaters', () => {\n \n     const Parent = () => <Child />;\n     const Child = () => null;\n-    const container = document.createElement('div');\n+    const root = ReactDOMClient.createRoot(document.createElement('div'));\n \n     await act(() => {\n-      ReactDOM.render(<Parent />, container);\n+      root.render(<Parent />);\n     });\n     expect(allSchedulerTags).toEqual([[HostRoot]]);\n \n     await act(() => {\n-      ReactDOM.render(<Parent />, container);\n+      root.render(<Parent />);\n     });\n     expect(allSchedulerTags).toEqual([[HostRoot], [HostRoot]]);\n   });\n@@ -141,8 +141,9 @@ describe('updaters', () => {\n     };\n     const Child = () => null;\n \n+    const root = ReactDOMClient.createRoot(document.createElement('div'));\n     await act(() => {\n-      ReactDOM.render(<Parent />, document.createElement('div'));\n+      root.render(<Parent />);\n     });\n     expect(scheduleForA).not.toBeNull();\n     expect(scheduleForB).not.toBeNull();\n@@ -174,8 +175,9 @@ describe('updaters', () => {\n     }\n     const Child = () => null;\n     let instance;\n+    const root = ReactDOMClient.createRoot(document.createElement('div'));\n     await act(() => {\n-      ReactDOM.render(<Parent />, document.createElement('div'));\n+      root.render(<Parent />);\n     });\n     expect(allSchedulerTypes).toEqual([[null]]);\n ",
        "date": "2024-01-19T18:37:10Z",
        "msg": "Convert ReactUpdaters-test.internal to createRoot (#28005)\n\nConvert ReactUpdaters-test.internal to createRoot"
    },
    {
        "diff": "diff --git a/packages/react-dom/src/client/__tests__/dangerouslySetInnerHTML-test.js b/a/packages/react-dom/src/client/__tests__/dangerouslySetInnerHTML-test.js @@ -10,17 +10,21 @@\n 'use strict';\n \n const React = require('react');\n-const ReactDOM = require('react-dom');\n+const ReactDOMClient = require('react-dom/client');\n+\n+const act = require('internal-test-utils').act;\n \n describe('dangerouslySetInnerHTML', () => {\n   describe('when the node has innerHTML property', () => {\n-    it('sets innerHTML on it', () => {\n+    it('sets innerHTML on it', async () => {\n       const container = document.createElement('div');\n-      const node = ReactDOM.render(\n-        <div dangerouslySetInnerHTML={{__html: '<h1>Hello</h1>'}} />,\n-        container,\n-      );\n-      expect(node.innerHTML).toBe('<h1>Hello</h1>');\n+      const root = ReactDOMClient.createRoot(container);\n+      await act(() => {\n+        root.render(\n+          <div dangerouslySetInnerHTML={{__html: '<h1>Hello</h1>'}} />,\n+        );\n+      });\n+      expect(container.firstChild.innerHTML).toBe('<h1>Hello</h1>');\n     });\n   });\n \n@@ -56,39 +60,38 @@ describe('dangerouslySetInnerHTML', () => {\n     });\n \n     // @gate !disableIEWorkarounds\n-    it('sets innerHTML on it', () => {\n+    it('sets innerHTML on it', async () => {\n       const html = '<circle></circle>';\n       const container = document.createElementNS(\n         'http://www.w3.org/2000/svg',\n         'svg',\n       );\n-      ReactDOM.render(\n-        <g dangerouslySetInnerHTML={{__html: html}} />,\n-        container,\n-      );\n+      const root = ReactDOMClient.createRoot(container);\n+      await act(() => {\n+        root.render(<g dangerouslySetInnerHTML={{__html: html}} />);\n+      });\n       const circle = container.firstChild.firstChild;\n       expect(circle.tagName).toBe('circle');\n     });\n \n     // @gate !disableIEWorkarounds\n-    it('clears previous children', () => {\n+    it('clears previous children', async () => {\n       const firstHtml = '<rect></rect>';\n       const secondHtml = '<circle></circle>';\n \n       const container = document.createElementNS(\n         'http://www.w3.org/2000/svg',\n         'svg',\n       );\n-      ReactDOM.render(\n-        <g dangerouslySetInnerHTML={{__html: firstHtml}} />,\n-        container,\n-      );\n+      const root = ReactDOMClient.createRoot(container);\n+      await act(() => {\n+        root.render(<g dangerouslySetInnerHTML={{__html: firstHtml}} />);\n+      });\n       const rect = container.firstChild.firstChild;\n       expect(rect.tagName).toBe('rect');\n-      ReactDOM.render(\n-        <g dangerouslySetInnerHTML={{__html: secondHtml}} />,\n-        container,\n-      );\n+      await act(() => {\n+        root.render(<g dangerouslySetInnerHTML={{__html: secondHtml}} />);\n+      });\n       const circle = container.firstChild.firstChild;\n       expect(circle.tagName).toBe('circle');\n     });",
        "date": "2024-01-19T18:35:43Z",
        "msg": "Convert dangerouslySetInnerHTML-test to createRoot (#28008)\n\nConvert dangerouslySetInnerHTML-test to createRoot"
    },
    {
        "diff": "diff --git a/packages/react-refresh/src/__tests__/ReactFreshMultipleRenderer-test.internal.js b/a/packages/react-refresh/src/__tests__/ReactFreshMultipleRenderer-test.internal.js @@ -16,7 +16,8 @@ if (__DEV__) {\n   ReactFreshRuntime = require('react-refresh/runtime');\n   ReactFreshRuntime.injectIntoGlobalHook(global);\n }\n-const ReactDOM = require('react-dom');\n+const ReactDOMClient = require('react-dom/client');\n+const act = require('internal-test-utils').act;\n \n jest.resetModules();\n const ReactART = require('react-art');\n@@ -41,7 +42,7 @@ describe('ReactFresh', () => {\n     }\n   });\n \n-  it('can update components managed by different renderers independently', () => {\n+  it('can update components managed by different renderers independently', async () => {\n     if (__DEV__) {\n       const InnerV1 = function () {\n         return <ReactART.Shape fill=\"blue\" />;\n@@ -59,7 +60,10 @@ describe('ReactFresh', () => {\n       };\n       ReactFreshRuntime.register(OuterV1, 'Outer');\n \n-      ReactDOM.render(<OuterV1 />, container);\n+      const root = ReactDOMClient.createRoot(container);\n+      await act(() => {\n+        root.render(<OuterV1 />);\n+      });\n       const el = container.firstChild;\n       const pathEl = el.querySelector('path');\n       expect(el.style.color).toBe('blue');",
        "date": "2024-01-19T17:21:15Z",
        "msg": "Convert ReactFreshMultipleRenderer to createRoot (#28000)"
    },
    {
        "diff": "diff --git a/packages/react-dom/src/__tests__/ReactErrorLoggingRecovery-test.js b/a/packages/react-dom/src/__tests__/ReactErrorLoggingRecovery-test.js @@ -17,7 +17,8 @@ if (global.window) {\n \n // The issue only reproduced when React was loaded before JSDOM.\n const React = require('react');\n-const ReactDOM = require('react-dom');\n+const ReactDOMClient = require('react-dom/client');\n+const act = require('internal-test-utils').act;\n \n // Initialize JSDOM separately.\n // We don't use our normal JSDOM setup because we want to load React first.\n@@ -43,13 +44,6 @@ describe('ReactErrorLoggingRecovery', () => {\n \n   beforeEach(() => {\n     console.error = error => {\n-      if (\n-        typeof error === 'string' &&\n-        error.includes('ReactDOM.render is no longer supported in React 18')\n-      ) {\n-        // Ignore legacy root deprecation warning\n-        return;\n-      }\n       throw new Error('Buggy console.error');\n     };\n   });\n@@ -58,23 +52,23 @@ describe('ReactErrorLoggingRecovery', () => {\n     console.error = originalConsoleError;\n   });\n \n-  it('should recover from errors in console.error', function () {\n+  it('should recover from errors in console.error', async function () {\n     const div = document.createElement('div');\n-    let didCatch = false;\n-    try {\n-      ReactDOM.render(<Bad />, div);\n-      ReactDOM.render(<Bad />, div);\n-    } catch (e) {\n-      expect(e.message).toBe('no');\n-      didCatch = true;\n-    }\n-    expect(didCatch).toBe(true);\n-    ReactDOM.render(<span>Hello</span>, div);\n-    expect(div.firstChild.textContent).toBe('Hello');\n+    const root = ReactDOMClient.createRoot(div);\n+    await expect(async () => {\n+      await act(() => {\n+        root.render(<Bad />);\n+      });\n+      await act(() => {\n+        root.render(<Bad />);\n+      });\n+    }).rejects.toThrow('no');\n \n-    // Verify the console.error bug is surfaced\n-    expect(() => {\n-      jest.runAllTimers();\n-    }).toThrow('Buggy console.error');\n+    await expect(async () => {\n+      await act(() => {\n+        root.render(<span>Hello</span>);\n+      });\n+    }).rejects.toThrow('Buggy console.error');\n+    expect(div.firstChild.textContent).toBe('Hello');\n   });\n });",
        "date": "2024-01-19T17:07:08Z",
        "msg": "Convert ReactErrorLoggingRecovery to createRoot (#28003)"
    },
    {
        "diff": "diff --git a/packages/react-native-renderer/src/ReactNativePublicCompat.js b/a/packages/react-native-renderer/src/ReactNativePublicCompat.js @@ -27,8 +27,6 @@ import {doesFiberContain} from 'react-reconciler/src/ReactFiberTreeReflection';\n import ReactSharedInternals from 'shared/ReactSharedInternals';\n import getComponentNameFromType from 'shared/getComponentNameFromType';\n \n-import ReactNativeFiberHostComponent from './ReactNativeFiberHostComponent';\n-\n const ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\n \n export function findHostInstance_DEPRECATED<TElementType: ElementType>(\n@@ -236,21 +234,19 @@ export function isChildPublicInstance(\n   if (__DEV__) {\n     // Paper\n     if (\n-      parentInstance instanceof ReactNativeFiberHostComponent ||\n-      childInstance instanceof ReactNativeFiberHostComponent\n+      // $FlowExpectedError[incompatible-type]\n+      // $FlowExpectedError[prop-missing] Don't check via `instanceof ReactNativeFiberHostComponent`, so it won't be leaked to Fabric.\n+      parentInstance._internalFiberInstanceHandleDEV &&\n+      // $FlowExpectedError[incompatible-type]\n+      // $FlowExpectedError[prop-missing] Don't check via `instanceof ReactNativeFiberHostComponent`, so it won't be leaked to Fabric.\n+      childInstance._internalFiberInstanceHandleDEV\n     ) {\n-      if (\n-        parentInstance instanceof ReactNativeFiberHostComponent &&\n-        childInstance instanceof ReactNativeFiberHostComponent\n-      ) {\n-        return doesFiberContain(\n-          parentInstance._internalFiberInstanceHandleDEV,\n-          childInstance._internalFiberInstanceHandleDEV,\n-        );\n-      }\n-\n-      // Means that one instance is from Fabric and other is from Paper.\n-      return false;\n+      return doesFiberContain(\n+        // $FlowExpectedError[incompatible-call]\n+        parentInstance._internalFiberInstanceHandleDEV,\n+        // $FlowExpectedError[incompatible-call]\n+        childInstance._internalFiberInstanceHandleDEV,\n+      );\n     }\n \n     const parentInternalInstanceHandle =\n@@ -271,6 +267,7 @@ export function isChildPublicInstance(\n       );\n     }\n \n+    // Means that one instance is from Fabric and other is from Paper.\n     return false;\n   } else {\n     throw new Error('isChildPublicInstance() is not available in production.');",
        "date": "2024-01-11T14:26:39Z",
        "msg": "refactor[isChildPublicInstance]: don't leak ReactNativeFiberHostComponent to Fabric implementation (#27923)\n\nWhile inspecting the build artifacts for Fabric in\r\nhttps://www.internalfb.com/diff/D51816108, I've noticed it has some\r\nleaking implementation details from Paper, such as\r\n`ReactNativeFiberHostComponent`.\r\n\r\nThe reason for it is the single implementation of\r\n`isChildPublicInstance` in `ReactNativePublicCompat`, in which we were\r\nusing `instanceof ReactNativeFiberHostComponent`.\r\n\r\nThis new implementation removes the `ReactNativeFiberHostComponent`\r\nleak, but decreases the Flow coverage."
    },
    {
        "diff": "diff --git a/yarn.lock b/a/yarn.lock @@ -6082,13 +6082,6 @@ debug@4, debug@^4.0.1, debug@^4.1.0, debug@^4.1.1:\n   dependencies:\n     ms \"^2.1.1\"\n \n-debug@^3.2.6:\n-  version \"3.2.6\"\n-  resolved \"https://registry.yarnpkg.com/debug/-/debug-3.2.6.tgz#e83d17de16d8a7efb7717edbe5fb10135eee629b\"\n-  integrity sha512-mel+jf7nrtEl5Pn1Qx46zARXKDpBbvzezse7p7LqINmdoIk8PYP5SySaxEmYv6TZ0JyEKA1hsCId6DIhgITtWQ==\n-  dependencies:\n-    ms \"^2.1.1\"\n-\n debug@^4.3.1:\n   version \"4.3.2\"\n   resolved \"https://registry.yarnpkg.com/debug/-/debug-4.3.2.tgz#f0a49c18ac8779e31d4a0c6029dfb76873c7428b\"\n@@ -6902,7 +6895,6 @@ eslint-plugin-no-unsanitized@3.1.2:\n \n \"eslint-plugin-react-internal@link:./scripts/eslint-rules\":\n   version \"0.0.0\"\n-  uid \"\"\n \n eslint-plugin-react@^6.7.1:\n   version \"6.10.3\"\n@@ -7882,11 +7874,9 @@ fluent-syntax@0.13.0:\n   integrity sha512-0Bk1AsliuYB550zr4JV9AYhsETsD3ELXUQzdXGJfIc1Ni/ukAfBdQInDhVMYJUaT2QxoamNslwkYF7MlOrPUwg==\n \n follow-redirects@^1.0.0:\n-  version \"1.7.0\"\n-  resolved \"https://registry.yarnpkg.com/follow-redirects/-/follow-redirects-1.7.0.tgz#489ebc198dc0e7f64167bd23b03c4c19b5784c76\"\n-  integrity sha512-m/pZQy4Gj287eNy94nivy5wchN3Kp+Q5WgUPNy5lJSZ3sgkVKSYV/ZChMAQVIgx1SqfZ2zBZtPA2YlXIWxxJOQ==\n-  dependencies:\n-    debug \"^3.2.6\"\n+  version \"1.15.4\"\n+  resolved \"https://registry.yarnpkg.com/follow-redirects/-/follow-redirects-1.15.4.tgz#cdc7d308bf6493126b17ea2191ea0ccf3e535adf\"\n+  integrity sha512-Cr4D/5wlrb0z9dgERpUL3LrmPKVDsETIJhaCMeDfuFYcqa5bldGV6wBsAN6X/vxlXQtFBMrXdXxdL8CbDTGniw==\n \n for-in@^1.0.2:\n   version \"1.0.2\"",
        "date": "2024-01-09T17:05:06Z",
        "msg": "Bump follow-redirects from 1.7.0 to 1.15.4 (#27909)\n\nBumps\r\n[follow-redirects](https://github.com/follow-redirects/follow-redirects)\r\nfrom 1.7.0 to 1.15.4.\r\n<details>\r\n<summary>Commits</summary>\r\n<ul>\r\n<li><a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/commit/65858205e59f1e23c9bf173348a7a7cbb8ac47f5\"><code>6585820</code></a>\r\nRelease version 1.15.4 of the npm package.</li>\r\n<li><a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/commit/7a6567e16dfa9ad18a70bfe91784c28653fbf19d\"><code>7a6567e</code></a>\r\nDisallow bracketed hostnames.</li>\r\n<li><a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/commit/05629af696588b90d64e738bc2e809a97a5f92fc\"><code>05629af</code></a>\r\nPrefer native URL instead of deprecated url.parse.</li>\r\n<li><a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/commit/1cba8e85fa73f563a439fe460cf028688e4358df\"><code>1cba8e8</code></a>\r\nPrefer native URL instead of legacy url.resolve.</li>\r\n<li><a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/commit/72bc2a4229bc18dc9fbd57c60579713e6264cb92\"><code>72bc2a4</code></a>\r\nSimplify _processResponse error handling.</li>\r\n<li><a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/commit/3d42aecdca39b144a0a2f27ea134b4cf67dd796a\"><code>3d42aec</code></a>\r\nAdd bracket tests.</li>\r\n<li><a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/commit/bcbb096b32686ecad6cd34235358ed6f2217d4f0\"><code>bcbb096</code></a>\r\nDo not directly set Error properties.</li>\r\n<li><a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/commit/192dbe7ce671ecad813c074bffe3b3f5d3680fee\"><code>192dbe7</code></a>\r\nRelease version 1.15.3 of the npm package.</li>\r\n<li><a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/commit/bd8c81e4f32d12f28a35d265f88b1716703687c6\"><code>bd8c81e</code></a>\r\nFix resource leak on destroy.</li>\r\n<li><a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/commit/9c728c314b06f9595dcd7f245d40731e8a27d79f\"><code>9c728c3</code></a>\r\nSplit linting and testing.</li>\r\n<li>Additional commits viewable in <a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/compare/v1.7.0...v1.15.4\">compare\r\nview</a></li>\r\n</ul>\r\n</details>\r\n<br />\r\n\r\n\r\n[![Dependabot compatibility\r\nscore](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=follow-redirects&package-manager=npm_and_yarn&previous-version=1.7.0&new-version=1.15.4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\r\n\r\nDependabot will resolve any conflicts with this PR as long as you don't\r\nalter it yourself. You can also trigger a rebase manually by commenting\r\n`@dependabot rebase`.\r\n\r\n[//]: # (dependabot-automerge-start)\r\n[//]: # (dependabot-automerge-end)\r\n\r\n---\r\n\r\n<details>\r\n<summary>Dependabot commands and options</summary>\r\n<br />\r\n\r\nYou can trigger Dependabot actions by commenting on this PR:\r\n- `@dependabot rebase` will rebase this PR\r\n- `@dependabot recreate` will recreate this PR, overwriting any edits\r\nthat have been made to it\r\n- `@dependabot merge` will merge this PR after your CI passes on it\r\n- `@dependabot squash and merge` will squash and merge this PR after\r\nyour CI passes on it\r\n- `@dependabot cancel merge` will cancel a previously requested merge\r\nand block automerging\r\n- `@dependabot reopen` will reopen this PR if it is closed\r\n- `@dependabot close` will close this PR and stop Dependabot recreating\r\nit. You can achieve the same result by closing it manually\r\n- `@dependabot show <dependency name> ignore conditions` will show all\r\nof the ignore conditions of the specified dependency\r\n- `@dependabot ignore this major version` will close this PR and stop\r\nDependabot creating any more for this major version (unless you reopen\r\nthe PR or upgrade to it yourself)\r\n- `@dependabot ignore this minor version` will close this PR and stop\r\nDependabot creating any more for this minor version (unless you reopen\r\nthe PR or upgrade to it yourself)\r\n- `@dependabot ignore this dependency` will close this PR and stop\r\nDependabot creating any more for this dependency (unless you reopen the\r\nPR or upgrade to it yourself)\r\nYou can disable automated security fix PRs for this repo from the\r\n[Security Alerts\r\npage](https://github.com/facebook/react/network/alerts).\r\n\r\n</details>\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
    },
    {
        "diff": "diff --git a/fixtures/concurrent/time-slicing/yarn.lock b/a/fixtures/concurrent/time-slicing/yarn.lock @@ -3372,9 +3372,9 @@ flatten@^1.0.2:\n   integrity sha512-dVsPA/UwQ8+2uoFe5GHtiBMu48dWLTdsuEd7CKGlZlD78r1TTWBvDuFaFGKCo/ZfEr95Uk56vZoX86OsHkUeIg==\n \n follow-redirects@^1.0.0:\n-  version \"1.14.0\"\n-  resolved \"https://registry.yarnpkg.com/follow-redirects/-/follow-redirects-1.14.0.tgz#f5d260f95c5f8c105894491feee5dc8993b402fe\"\n-  integrity sha512-0vRwd7RKQBTt+mgu87mtYeofLFZpTas2S9zY+jIeuLJMNvudIgF52nr19q40HOwH5RrhWIPuj9puybzSJiRrVg==\n+  version \"1.15.4\"\n+  resolved \"https://registry.yarnpkg.com/follow-redirects/-/follow-redirects-1.15.4.tgz#cdc7d308bf6493126b17ea2191ea0ccf3e535adf\"\n+  integrity sha512-Cr4D/5wlrb0z9dgERpUL3LrmPKVDsETIJhaCMeDfuFYcqa5bldGV6wBsAN6X/vxlXQtFBMrXdXxdL8CbDTGniw==\n \n for-in@^1.0.1, for-in@^1.0.2:\n   version \"1.0.2\"",
        "date": "2024-01-09T16:05:08Z",
        "msg": "Bump follow-redirects from 1.14.0 to 1.15.4 in /fixtures/concurrent/time-slicing (#27907)\n\nBumps\r\n[follow-redirects](https://github.com/follow-redirects/follow-redirects)\r\nfrom 1.14.0 to 1.15.4.\r\n<details>\r\n<summary>Commits</summary>\r\n<ul>\r\n<li><a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/commit/65858205e59f1e23c9bf173348a7a7cbb8ac47f5\"><code>6585820</code></a>\r\nRelease version 1.15.4 of the npm package.</li>\r\n<li><a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/commit/7a6567e16dfa9ad18a70bfe91784c28653fbf19d\"><code>7a6567e</code></a>\r\nDisallow bracketed hostnames.</li>\r\n<li><a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/commit/05629af696588b90d64e738bc2e809a97a5f92fc\"><code>05629af</code></a>\r\nPrefer native URL instead of deprecated url.parse.</li>\r\n<li><a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/commit/1cba8e85fa73f563a439fe460cf028688e4358df\"><code>1cba8e8</code></a>\r\nPrefer native URL instead of legacy url.resolve.</li>\r\n<li><a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/commit/72bc2a4229bc18dc9fbd57c60579713e6264cb92\"><code>72bc2a4</code></a>\r\nSimplify _processResponse error handling.</li>\r\n<li><a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/commit/3d42aecdca39b144a0a2f27ea134b4cf67dd796a\"><code>3d42aec</code></a>\r\nAdd bracket tests.</li>\r\n<li><a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/commit/bcbb096b32686ecad6cd34235358ed6f2217d4f0\"><code>bcbb096</code></a>\r\nDo not directly set Error properties.</li>\r\n<li><a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/commit/192dbe7ce671ecad813c074bffe3b3f5d3680fee\"><code>192dbe7</code></a>\r\nRelease version 1.15.3 of the npm package.</li>\r\n<li><a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/commit/bd8c81e4f32d12f28a35d265f88b1716703687c6\"><code>bd8c81e</code></a>\r\nFix resource leak on destroy.</li>\r\n<li><a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/commit/9c728c314b06f9595dcd7f245d40731e8a27d79f\"><code>9c728c3</code></a>\r\nSplit linting and testing.</li>\r\n<li>Additional commits viewable in <a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/compare/v1.14.0...v1.15.4\">compare\r\nview</a></li>\r\n</ul>\r\n</details>\r\n<br />\r\n\r\n\r\n[![Dependabot compatibility\r\nscore](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=follow-redirects&package-manager=npm_and_yarn&previous-version=1.14.0&new-version=1.15.4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\r\n\r\nDependabot will resolve any conflicts with this PR as long as you don't\r\nalter it yourself. You can also trigger a rebase manually by commenting\r\n`@dependabot rebase`.\r\n\r\n[//]: # (dependabot-automerge-start)\r\n[//]: # (dependabot-automerge-end)\r\n\r\n---\r\n\r\n<details>\r\n<summary>Dependabot commands and options</summary>\r\n<br />\r\n\r\nYou can trigger Dependabot actions by commenting on this PR:\r\n- `@dependabot rebase` will rebase this PR\r\n- `@dependabot recreate` will recreate this PR, overwriting any edits\r\nthat have been made to it\r\n- `@dependabot merge` will merge this PR after your CI passes on it\r\n- `@dependabot squash and merge` will squash and merge this PR after\r\nyour CI passes on it\r\n- `@dependabot cancel merge` will cancel a previously requested merge\r\nand block automerging\r\n- `@dependabot reopen` will reopen this PR if it is closed\r\n- `@dependabot close` will close this PR and stop Dependabot recreating\r\nit. You can achieve the same result by closing it manually\r\n- `@dependabot show <dependency name> ignore conditions` will show all\r\nof the ignore conditions of the specified dependency\r\n- `@dependabot ignore this major version` will close this PR and stop\r\nDependabot creating any more for this major version (unless you reopen\r\nthe PR or upgrade to it yourself)\r\n- `@dependabot ignore this minor version` will close this PR and stop\r\nDependabot creating any more for this minor version (unless you reopen\r\nthe PR or upgrade to it yourself)\r\n- `@dependabot ignore this dependency` will close this PR and stop\r\nDependabot creating any more for this dependency (unless you reopen the\r\nPR or upgrade to it yourself)\r\nYou can disable automated security fix PRs for this repo from the\r\n[Security Alerts\r\npage](https://github.com/facebook/react/network/alerts).\r\n\r\n</details>\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
    },
    {
        "diff": "diff --git a/fixtures/ssr/yarn.lock b/a/fixtures/ssr/yarn.lock @@ -2771,9 +2771,9 @@ flatten@^1.0.2:\n   integrity sha512-dVsPA/UwQ8+2uoFe5GHtiBMu48dWLTdsuEd7CKGlZlD78r1TTWBvDuFaFGKCo/ZfEr95Uk56vZoX86OsHkUeIg==\n \n follow-redirects@^1.0.0:\n-  version \"1.13.3\"\n-  resolved \"https://registry.yarnpkg.com/follow-redirects/-/follow-redirects-1.13.3.tgz#e5598ad50174c1bc4e872301e82ac2cd97f90267\"\n-  integrity sha512-DUgl6+HDzB0iEptNQEXLx/KhTmDb8tZUHSeLqpnjpknR70H0nC2t9N73BK6fN4hOvJ84pKlIQVQ4k5FFlBedKA==\n+  version \"1.15.4\"\n+  resolved \"https://registry.yarnpkg.com/follow-redirects/-/follow-redirects-1.15.4.tgz#cdc7d308bf6493126b17ea2191ea0ccf3e535adf\"\n+  integrity sha512-Cr4D/5wlrb0z9dgERpUL3LrmPKVDsETIJhaCMeDfuFYcqa5bldGV6wBsAN6X/vxlXQtFBMrXdXxdL8CbDTGniw==\n \n for-in@^1.0.1, for-in@^1.0.2:\n   version \"1.0.2\"",
        "date": "2024-01-09T16:04:58Z",
        "msg": "Bump follow-redirects from 1.13.3 to 1.15.4 in /fixtures/ssr (#27906)\n\nBumps\r\n[follow-redirects](https://github.com/follow-redirects/follow-redirects)\r\nfrom 1.13.3 to 1.15.4.\r\n<details>\r\n<summary>Commits</summary>\r\n<ul>\r\n<li><a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/commit/65858205e59f1e23c9bf173348a7a7cbb8ac47f5\"><code>6585820</code></a>\r\nRelease version 1.15.4 of the npm package.</li>\r\n<li><a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/commit/7a6567e16dfa9ad18a70bfe91784c28653fbf19d\"><code>7a6567e</code></a>\r\nDisallow bracketed hostnames.</li>\r\n<li><a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/commit/05629af696588b90d64e738bc2e809a97a5f92fc\"><code>05629af</code></a>\r\nPrefer native URL instead of deprecated url.parse.</li>\r\n<li><a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/commit/1cba8e85fa73f563a439fe460cf028688e4358df\"><code>1cba8e8</code></a>\r\nPrefer native URL instead of legacy url.resolve.</li>\r\n<li><a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/commit/72bc2a4229bc18dc9fbd57c60579713e6264cb92\"><code>72bc2a4</code></a>\r\nSimplify _processResponse error handling.</li>\r\n<li><a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/commit/3d42aecdca39b144a0a2f27ea134b4cf67dd796a\"><code>3d42aec</code></a>\r\nAdd bracket tests.</li>\r\n<li><a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/commit/bcbb096b32686ecad6cd34235358ed6f2217d4f0\"><code>bcbb096</code></a>\r\nDo not directly set Error properties.</li>\r\n<li><a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/commit/192dbe7ce671ecad813c074bffe3b3f5d3680fee\"><code>192dbe7</code></a>\r\nRelease version 1.15.3 of the npm package.</li>\r\n<li><a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/commit/bd8c81e4f32d12f28a35d265f88b1716703687c6\"><code>bd8c81e</code></a>\r\nFix resource leak on destroy.</li>\r\n<li><a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/commit/9c728c314b06f9595dcd7f245d40731e8a27d79f\"><code>9c728c3</code></a>\r\nSplit linting and testing.</li>\r\n<li>Additional commits viewable in <a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/compare/v1.13.3...v1.15.4\">compare\r\nview</a></li>\r\n</ul>\r\n</details>\r\n<br />\r\n\r\n\r\n[![Dependabot compatibility\r\nscore](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=follow-redirects&package-manager=npm_and_yarn&previous-version=1.13.3&new-version=1.15.4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\r\n\r\nDependabot will resolve any conflicts with this PR as long as you don't\r\nalter it yourself. You can also trigger a rebase manually by commenting\r\n`@dependabot rebase`.\r\n\r\n[//]: # (dependabot-automerge-start)\r\n[//]: # (dependabot-automerge-end)\r\n\r\n---\r\n\r\n<details>\r\n<summary>Dependabot commands and options</summary>\r\n<br />\r\n\r\nYou can trigger Dependabot actions by commenting on this PR:\r\n- `@dependabot rebase` will rebase this PR\r\n- `@dependabot recreate` will recreate this PR, overwriting any edits\r\nthat have been made to it\r\n- `@dependabot merge` will merge this PR after your CI passes on it\r\n- `@dependabot squash and merge` will squash and merge this PR after\r\nyour CI passes on it\r\n- `@dependabot cancel merge` will cancel a previously requested merge\r\nand block automerging\r\n- `@dependabot reopen` will reopen this PR if it is closed\r\n- `@dependabot close` will close this PR and stop Dependabot recreating\r\nit. You can achieve the same result by closing it manually\r\n- `@dependabot show <dependency name> ignore conditions` will show all\r\nof the ignore conditions of the specified dependency\r\n- `@dependabot ignore this major version` will close this PR and stop\r\nDependabot creating any more for this major version (unless you reopen\r\nthe PR or upgrade to it yourself)\r\n- `@dependabot ignore this minor version` will close this PR and stop\r\nDependabot creating any more for this minor version (unless you reopen\r\nthe PR or upgrade to it yourself)\r\n- `@dependabot ignore this dependency` will close this PR and stop\r\nDependabot creating any more for this dependency (unless you reopen the\r\nPR or upgrade to it yourself)\r\nYou can disable automated security fix PRs for this repo from the\r\n[Security Alerts\r\npage](https://github.com/facebook/react/network/alerts).\r\n\r\n</details>\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
    },
    {
        "diff": "diff --git a/package.json b/a/package.json @@ -99,7 +99,7 @@\n     \"yargs\": \"^15.3.1\"\n   },\n   \"devEngines\": {\n-    \"node\": \"16.x || 18.x || 19.x || 20.x\"\n+    \"node\": \"16.x || 18.x || 20.x || 21.x\"\n   },\n   \"jest\": {\n     \"testRegex\": \"/scripts/jest/dont-run-jest-directly\\\\.js$\"",
        "date": "2024-01-02T19:39:25Z",
        "msg": "[churn] remove Node 19 from dev engines, add 21 (#27870)\n\nThis allows running `yarn` with Node 21 installed, also removes Node 19\r\nwhich is no longer supported according to\r\nhttps://nodejs.org/en/about/previous-releases"
    },
    {
        "diff": "diff --git a/packages/react-devtools-shared/src/__tests__/utils.js b/a/packages/react-devtools-shared/src/__tests__/utils.js @@ -19,7 +19,9 @@ export function act(\n   recursivelyFlush: boolean = true,\n ): void {\n   const {act: actTestRenderer} = require('react-test-renderer');\n-  const actDOM = require('react').unstable_act;\n+  // Use `require('react-dom/test-utils').act` as a fallback for React 17, which can be used in integration tests for React DevTools.\n+  const actDOM =\n+    require('react').unstable_act || require('react-dom/test-utils').act;\n \n   actDOM(() => {\n     actTestRenderer(() => {\n@@ -44,7 +46,9 @@ export async function actAsync(\n   recursivelyFlush: boolean = true,\n ): Promise<void> {\n   const {act: actTestRenderer} = require('react-test-renderer');\n-  const actDOM = require('react').unstable_act;\n+  // Use `require('react-dom/test-utils').act` as a fallback for React 17, which can be used in integration tests for React DevTools.\n+  const actDOM =\n+    require('react').unstable_act || require('react-dom/test-utils').act;\n \n   await actDOM(async () => {\n     await actTestRenderer(async () => {",
        "date": "2023-12-17T13:17:45Z",
        "msg": "fix[devtools/e2e]: add fallback for act in integration tests (#27842)\n\nhttps://github.com/facebook/react/pull/27805 broke integration tests for\r\nReact DevTools with React 17, these changes introduce a fallback for\r\nsuch case when `act` is not available in `react`, but available in\r\n`react-dom`, like before."
    },
    {
        "diff": "diff --git a/README.md b/a/README.md @@ -30,7 +30,7 @@ The documentation is divided into several sections:\n * [Installation](https://react.dev/learn/installation)\n * [Describing the UI](https://react.dev/learn/describing-the-ui)\n * [Adding Interactivity](https://react.dev/learn/adding-interactivity)\n-* [Manging State](https://react.dev/learn/managing-state)\n+* [Managing State](https://react.dev/learn/managing-state)\n * [Advanced Guides](https://react.dev/learn/escape-hatches)\n * [API Reference](https://react.dev/reference/react)\n * [Where to Get Support](https://react.dev/community)",
        "date": "2023-12-16T23:37:42Z",
        "msg": "docs: fix typo in README.md (#27841)"
    },
    {
        "diff": "diff --git a/.circleci/config.yml b/a/.circleci/config.yml @@ -373,18 +373,6 @@ jobs:\n             yarn predev\n             yarn test --maxWorkers=2\n \n-  test_fuzz:\n-    docker: *docker\n-    environment: *environment\n-    steps:\n-      - checkout\n-      - setup_node_modules\n-      - run:\n-          name: Run fuzz tests\n-          command: |\n-            FUZZ_TEST_SEED=$RANDOM yarn test fuzz --ci\n-            FUZZ_TEST_SEED=$RANDOM yarn test --prod fuzz --ci\n-\n   publish_prerelease:\n     parameters:\n       commit_sha:\n@@ -529,19 +517,6 @@ workflows:\n           requires:\n             - build_devtools_and_process_artifacts\n \n-  fuzz_tests:\n-    unless: << pipeline.parameters.prerelease_commit_sha >>\n-    triggers:\n-      - schedule:\n-          # Fuzz tests run hourly\n-          cron: \"0 * * * *\"\n-          filters:\n-            branches:\n-              only:\n-                - main\n-    jobs:\n-      - test_fuzz\n-\n   devtools_regression_tests:\n     unless: << pipeline.parameters.prerelease_commit_sha >>\n     triggers:",
        "date": "2023-12-12T20:38:26Z",
        "msg": "[ci] remove fuzz tests from CircleCI (#27831)\n\nThese have been migrated to GitHub Actions with\r\nc01ac689e9628c952761ba0583d6c00ba5521c6a."
    },
    {
        "diff": "diff --git a/scripts/print-warnings/print-warnings.js b/a/scripts/print-warnings/print-warnings.js @@ -79,7 +79,19 @@ gs([\n       const warningsArray = Array.from(warnings);\n       warningsArray.sort();\n       process.stdout.write(\n-        `export default ${JSON.stringify(warningsArray, null, 2)};\\n`\n+        `/**\n+ * Copyright (c) Meta Platforms, Inc. and affiliates.\n+ *\n+ * This source code is licensed under the MIT license found in the\n+ * LICENSE file in the root directory of this source tree.\n+ *\n+ * @flow strict\n+ * @noformat\n+ * @oncall react_core\n+ */\n+\n+export default ${JSON.stringify(warningsArray, null, 2)};\n+`\n       );\n     } else {\n       process.stdout.write(",
        "date": "2023-12-08T18:44:20Z",
        "msg": "Add header to ReactAllWarnings Meta-only file (#27819)\n\nAdds missing headers to the generated file."
    },
    {
        "diff": "diff --git a/.github/workflows/commit_artifacts.yml b/a/.github/workflows/commit_artifacts.yml @@ -119,26 +119,25 @@ jobs:\n             build/oss-experimental/react-refresh/cjs/react-refresh-babel.development.js\n       - name: Move relevant files for React in www into compiled\n         run: |\n-          mkdir -p ./compiled\n-          mkdir -p ./compiled/facebook-www/__test_utils__\n-          mkdir -p ./compiled/babel-plugin-react-refresh\n-\n-          # Copy the facebook-www folder into compiled\n+          # Move the facebook-www folder into compiled\n+          mkdir ./compiled\n           mv build/facebook-www ./compiled\n \n-          # Copy WARNINGS to facebook-www\n+          # Move WARNINGS to facebook-www\n+          mkdir ./compiled/facebook-www/__test_utils__\n           mv build/WARNINGS ./compiled/facebook-www/WARNINGS\n           mv build/__test_utils__/ReactAllWarnings.js ./compiled/facebook-www/__test_utils__/ReactAllWarnings.js\n \n-          # Copy eslint-plugin-react-hooks into facebook-www\n+          # Move eslint-plugin-react-hooks into facebook-www\n           mv build/oss-experimental/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.development.js \\\n             ./compiled/facebook-www/eslint-plugin-react-hooks.js\n \n-          # Copy unstable_server-external-runtime.js into facebook-www\n+          # Move unstable_server-external-runtime.js into facebook-www\n           mv build/oss-stable/react-dom/unstable_server-external-runtime.js \\\n             ./compiled/facebook-www/unstable_server-external-runtime.js\n \n-          # Copy react-refresh-babel.development.js into babel-plugin-react-refresh\n+          # Move react-refresh-babel.development.js into babel-plugin-react-refresh\n+          mkdir ./compiled/babel-plugin-react-refresh\n           mv build/oss-experimental/react-refresh/cjs/react-refresh-babel.development.js \\\n             ./compiled/babel-plugin-react-refresh/index.js\n ",
        "date": "2023-12-08T17:38:35Z",
        "msg": "[ci] try to fix commit_artifacts step (#27817)\n\nTries to fix the failure from\r\nhttps://github.com/facebook/react/actions/runs/7142005723/job/19450371514\r\n\r\nI think it failed because we cannot `mv` into a folder with existing\r\nfiles or folders."
    },
    {
        "diff": "diff --git a/.github/workflows/commit_artifacts.yml b/a/.github/workflows/commit_artifacts.yml @@ -120,14 +120,15 @@ jobs:\n       - name: Move relevant files for React in www into compiled\n         run: |\n           mkdir -p ./compiled\n-          mkdir -p ./compiled/facebook-www\n+          mkdir -p ./compiled/facebook-www/__test_utils__\n           mkdir -p ./compiled/babel-plugin-react-refresh\n \n           # Copy the facebook-www folder into compiled\n           mv build/facebook-www ./compiled\n \n           # Copy WARNINGS to facebook-www\n           mv build/WARNINGS ./compiled/facebook-www/WARNINGS\n+          mv build/__test_utils__/ReactAllWarnings.js ./compiled/facebook-www/__test_utils__/ReactAllWarnings.js\n \n           # Copy eslint-plugin-react-hooks into facebook-www\n           mv build/oss-experimental/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.development.js \\",
        "date": "2023-12-07T22:08:52Z",
        "msg": "[meta] copy ReactAllWarnings.js file (#27811)\n\nI recently added generation of this file in #27786, which builds the\r\nfile in CircleCI, but missed actually copying it to the facebook build\r\non GitHub Actions.\r\n\r\nThis adds the later."
    },
    {
        "diff": "diff --git a/fixtures/flight/yarn.lock b/a/fixtures/flight/yarn.lock @@ -3,9 +3,9 @@\n \n \n \"@adobe/css-tools@^4.0.1\":\n-  version \"4.0.1\"\n-  resolved \"https://registry.yarnpkg.com/@adobe/css-tools/-/css-tools-4.0.1.tgz#b38b444ad3aa5fedbb15f2f746dcd934226a12dd\"\n-  integrity sha512-+u76oB43nOHrF4DDWRLWDCtci7f3QJoEBigemIdIeTi1ODqjx6Tad9NCVnPRwewWlKkVab5PlK8DCtPTyX7S8g==\n+  version \"4.3.2\"\n+  resolved \"https://registry.yarnpkg.com/@adobe/css-tools/-/css-tools-4.3.2.tgz#a6abc715fb6884851fca9dad37fc34739a04fd11\"\n+  integrity sha512-DA5a1C0gD/pLOvhv33YMrbf2FK3oUzwNl9oOJqE4XVjuEtt6XIakRcsd7eLiOSPkp1kTRQGICTA8cKra/vFbjw==\n \n \"@ampproject/remapping@^2.1.0\":\n   version \"2.2.0\"",
        "date": "2023-12-01T19:56:14Z",
        "msg": "Bump @adobe/css-tools from 4.0.1 to 4.3.2 in /fixtures/flight (#27766)\n\nBumps [@adobe/css-tools](https://github.com/adobe/css-tools) from 4.0.1\r\nto 4.3.2.\r\n<details>\r\n<summary>Changelog</summary>\r\n<p><em>Sourced from <a\r\nhref=\"https://github.com/adobe/css-tools/blob/main/History.md\"><code>@\u200badobe/css-tools</code>'s\r\nchangelog</a>.</em></p>\r\n<blockquote>\r\n<h1>4.3.2 / 2023-11-28</h1>\r\n<ul>\r\n<li>Fix redos vulnerability with specific crafted css string -\r\nCVE-2023-48631</li>\r\n<li>Fix Problem parsing with :is() and nested :nth-child() <a\r\nhref=\"https://redirect.github.com/adobe/css-tools/issues/211\">#211</a></li>\r\n</ul>\r\n<h1>4.3.1 / 2023-03-14</h1>\r\n<ul>\r\n<li>Fix redos vulnerability with specific crafted css string -\r\nCVE-2023-26364</li>\r\n</ul>\r\n<h1>4.3.0 / 2023-03-07</h1>\r\n<ul>\r\n<li>Update build tools</li>\r\n<li>Update exports path and files</li>\r\n</ul>\r\n<h1>4.2.0 / 2023-02-21</h1>\r\n<ul>\r\n<li>Add <a\r\nhref=\"https://github.com/container\"><code>@\u200bcontainer</code></a>\r\nsupport</li>\r\n<li>Add <a href=\"https://github.com/layer\"><code>@\u200blayer</code></a>\r\nsupport</li>\r\n</ul>\r\n<h1>4.1.0 / 2023-01-25</h1>\r\n<ul>\r\n<li>Support ESM Modules</li>\r\n</ul>\r\n<h1>4.0.2 / 2023-01-12</h1>\r\n<ul>\r\n<li><a\r\nhref=\"https://redirect.github.com/adobe/css-tools/issues/71\">#71</a> :\r\n<a href=\"https://github.com/import\"><code>@\u200bimport</code></a> does not\r\nwork if url contains ';'</li>\r\n<li><a\r\nhref=\"https://redirect.github.com/adobe/css-tools/issues/77\">#77</a> :\r\nRegression in selector parsing: Attribute selectors not parsed\r\ncorrectly</li>\r\n</ul>\r\n</blockquote>\r\n</details>\r\n<details>\r\n<summary>Commits</summary>\r\n<ul>\r\n<li>See full diff in <a\r\nhref=\"https://github.com/adobe/css-tools/commits\">compare view</a></li>\r\n</ul>\r\n</details>\r\n<br />\r\n\r\n\r\n[![Dependabot compatibility\r\nscore](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=@adobe/css-tools&package-manager=npm_and_yarn&previous-version=4.0.1&new-version=4.3.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\r\n\r\nDependabot will resolve any conflicts with this PR as long as you don't\r\nalter it yourself. You can also trigger a rebase manually by commenting\r\n`@dependabot rebase`.\r\n\r\n[//]: # (dependabot-automerge-start)\r\n[//]: # (dependabot-automerge-end)\r\n\r\n---\r\n\r\n<details>\r\n<summary>Dependabot commands and options</summary>\r\n<br />\r\n\r\nYou can trigger Dependabot actions by commenting on this PR:\r\n- `@dependabot rebase` will rebase this PR\r\n- `@dependabot recreate` will recreate this PR, overwriting any edits\r\nthat have been made to it\r\n- `@dependabot merge` will merge this PR after your CI passes on it\r\n- `@dependabot squash and merge` will squash and merge this PR after\r\nyour CI passes on it\r\n- `@dependabot cancel merge` will cancel a previously requested merge\r\nand block automerging\r\n- `@dependabot reopen` will reopen this PR if it is closed\r\n- `@dependabot close` will close this PR and stop Dependabot recreating\r\nit. You can achieve the same result by closing it manually\r\n- `@dependabot show <dependency name> ignore conditions` will show all\r\nof the ignore conditions of the specified dependency\r\n- `@dependabot ignore this major version` will close this PR and stop\r\nDependabot creating any more for this major version (unless you reopen\r\nthe PR or upgrade to it yourself)\r\n- `@dependabot ignore this minor version` will close this PR and stop\r\nDependabot creating any more for this minor version (unless you reopen\r\nthe PR or upgrade to it yourself)\r\n- `@dependabot ignore this dependency` will close this PR and stop\r\nDependabot creating any more for this dependency (unless you reopen the\r\nPR or upgrade to it yourself)\r\nYou can disable automated security fix PRs for this repo from the\r\n[Security Alerts\r\npage](https://github.com/facebook/react/network/alerts).\r\n\r\n</details>\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
    },
    {
        "diff": "diff --git a/packages/react-is/package.json b/a/packages/react-is/package.json @@ -3,6 +3,7 @@\n   \"version\": \"18.2.0\",\n   \"description\": \"Brand checking of React Elements.\",\n   \"main\": \"index.js\",\n+  \"sideEffects\": false,\n   \"repository\": {\n     \"type\": \"git\",\n     \"url\": \"https://github.com/facebook/react.git\",",
        "date": "2023-12-01T19:38:15Z",
        "msg": "Add sideEffects flag to react-is for tree shaking (#27701)\n\n## Summary\r\n\r\nThis PR:\r\n\r\n- Adds the `\"sideEffects\": false` flag to the `react-is` package, to\r\nenable proper tree-shaking\r\n\r\n## How did you test this change?\r\n\r\nReact-Redux v9 beta switches its artifacts from separate JS files to\r\npre-bundled artifacts. While testing builds locally, I noticed that our\r\nuse of `react-is` was no longer getting tree-shaken from Vite builds,\r\ndespite `react-is` only being used by our `connect` API and `connect`\r\nitself getting shaken out of the final bundle.\r\n\r\nHand-adding `\"sideEffects\": false` to the `react-is` package locally\r\nconvinced Vite (+Rollup) to properly tree-shake `react-is` out of the\r\nbundle when it wasn't being used.\r\n\r\nI'd love to see this published as v18.2.1 as soon as this PR is merged -\r\nwe're hoping to release React-Redux v9 in the next few weeks!"
    },
    {
        "diff": "diff --git a/.prettierrc.js b/a/.prettierrc.js @@ -5,7 +5,7 @@ const {esNextPaths} = require('./scripts/shared/pathsByLanguageVersion');\n module.exports = {\n   bracketSpacing: false,\n   singleQuote: true,\n-  jsxBracketSameLine: true,\n+  bracketSameLine: true,\n   trailingComma: 'es5',\n   printWidth: 80,\n   parser: 'flow',",
        "date": "2023-12-01T19:30:42Z",
        "msg": "Update .prettierrc.js (#27732)\n\njsxBracketSameLine deprecated in v2.4.0 of Prettier, replaced by\r\nbracketSameLine.\r\n\r\nhttps://prettier.io/docs/en/options.html#deprecated-jsx-brackets\r\n\r\n<!--\r\n  Thanks for submitting a pull request!\r\nWe appreciate you spending the time to work on these changes. Please\r\nprovide enough information so that others can review your pull request.\r\nThe three fields below are mandatory.\r\n\r\nBefore submitting a pull request, please make sure the following is\r\ndone:\r\n\r\n1. Fork [the repository](https://github.com/facebook/react) and create\r\nyour branch from `main`.\r\n  2. Run `yarn` in the repository root.\r\n3. If you've fixed a bug or added code that should be tested, add tests!\r\n4. Ensure the test suite passes (`yarn test`). Tip: `yarn test --watch\r\nTestName` is helpful in development.\r\n5. Run `yarn test --prod` to test in the production environment. It\r\nsupports the same options as `yarn test`.\r\n6. If you need a debugger, run `yarn test --debug --watch TestName`,\r\nopen `chrome://inspect`, and press \"Inspect\".\r\n7. Format your code with\r\n[prettier](https://github.com/prettier/prettier) (`yarn prettier`).\r\n8. Make sure your code lints (`yarn lint`). Tip: `yarn linc` to only\r\ncheck changed files.\r\n  9. Run the [Flow](https://flowtype.org/) type checks (`yarn flow`).\r\n  10. If you haven't already, complete the CLA.\r\n\r\nLearn more about contributing:\r\nhttps://reactjs.org/docs/how-to-contribute.html\r\n-->\r\n\r\n## Summary\r\n\r\n<!--\r\nExplain the **motivation** for making this change. What existing problem\r\ndoes the pull request solve?\r\n-->\r\n\r\nI've always wanted to contribute to open source, even if it's in the\r\nsmallest way possible. Resolves deprecated feature with currently used\r\nversion of Prettier (2.4+). Those doing things like using React as a\r\nreference for their \".prettierrc\" files will be using the non-deprecated\r\nversions.\r\n\r\n## How did you test this change?\r\n\r\nModified line 969 of App.js to push </h1> to line 971, saved the file,\r\nthen ran \"yarn prettier\" and formatting returned it to original position\r\nconfirming that jsxBracketSameLine acts in the same fashion to\r\nbracketSameLine, but also is no longer deprecated that has additional\r\nfeatures which may be useful in the future to the project.\r\n\r\n\r\n<!--\r\nDemonstrate the code is solid. Example: The exact commands you ran and\r\ntheir output, screenshots / videos if the pull request changes the user\r\ninterface.\r\nHow exactly did you verify that your PR solves the issue you wanted to\r\nsolve?\r\n  If you leave this empty, your PR will very likely be closed.\r\n-->\r\n\r\n\u03bb yarn prettier\r\nyarn run v1.22.19\r\n$ node ./scripts/prettier/index.js write-changed\r\n> git merge-base HEAD main\r\n> git diff --name-only --diff-filter=ACMRTUB\r\nbbb9cb116dbf7b6247721aa0c4bcb6ec249aa8af\r\n> git ls-files --others --exclude-standard\r\nDone in 1.52s."
    },
    {
        "diff": "diff --git a/scripts/rollup/forks.js b/a/scripts/rollup/forks.js @@ -217,7 +217,7 @@ const forks = Object.freeze({\n     }\n   },\n \n-  './packages/react/src/ReactSharedInternals.js': (bundleType, entry) => {\n+  './packages/react/src/ReactSharedInternalsClient.js': (bundleType, entry) => {\n     switch (bundleType) {\n       case UMD_DEV:\n       case UMD_PROD:",
        "date": "2023-11-17T14:00:56Z",
        "msg": "Update fork for ReactSharedInternalsClient export (#27717)\n\n## Summary\r\n\r\nAfter changes in https://github.com/facebook/react/pull/27436, UMD\r\nbuilds no longer expose Scheduler from ReactSharedInternals. This module\r\nis forked in rollup for UMD builds and the path no longer matches. This\r\nPR updates the path name to match the new module:\r\nReactSharedInternalsClient.\r\n\r\n## How did you test this change?\r\n\r\n- `yarn build`\r\n- Inspect `react.development.js` UMD build, observe `Scheduler:\r\nScheduler` is set in `ReactSharedInternals`, matching\r\n[18.2.0](https://unpkg.com/react@18.2.0/umd/react.development.js)\r\n- ran attribute-behavior fixture app\r\n- Observe no more error `Uncaught (in promise) TypeError: Cannot read\r\nproperties of undefined (reading 'unstable_cancelCallback')`\r\n\r\nCo-authored-by: Jack Pope <jackpope@meta.com>"
    },
    {
        "diff": "diff --git a/scripts/rollup/build.js b/a/scripts/rollup/build.js @@ -406,6 +406,10 @@ function getPlugins(\n     // UMD builds are rarely used and not worth having sourcemaps.\n     const needsSourcemaps =\n       needsMinifiedByClosure &&\n+      // This will only exclude `unstable_server-external-runtime.js` artifact\n+      // To start generating sourcemaps for it, we should stop manually copying it to `facebook-www`\n+      // and force `react-dom` to include .map files in npm-package at the root level\n+      bundleType !== BROWSER_SCRIPT &&\n       !isUMDBundle &&\n       !sourcemapPackageExcludes.includes(entry) &&\n       !shouldStayReadable;",
        "date": "2023-11-09T16:11:17Z",
        "msg": "refactor[ci/build]: dont generate sourcemaps for BROWSER_SCRIPT bundles (#27665)\n\nInstead of https://github.com/facebook/react/pull/27664, we can just\r\nexclude `unstable_server-external-runtime.js` from having sourcemaps for\r\nnow.\r\n\r\nWe should consider removing manual copying of this artifact in\r\nhttps://github.com/facebook/react/blob/52d542ad6d410008c495084f511247f43387055f/.github/workflows/commit_artifacts.yml#L136-L138\r\n\r\n\r\nAs described in https://github.com/facebook/react/pull/27664, this\r\nartifact doesn't have any effect on the `hash`, which is used for\r\ngenerating React version identifier."
    },
    {
        "diff": "diff --git a/packages/scheduler/src/forks/SchedulerPostTask.js b/a/packages/scheduler/src/forks/SchedulerPostTask.js @@ -129,15 +129,9 @@ function runTask<T>(\n     if (typeof result === 'function') {\n       // Assume this is a continuation\n       const continuation: SchedulerCallback<T> = (result: any);\n-      const continuationController = new TaskController({\n-        priority: postTaskPriority,\n-      });\n       const continuationOptions = {\n-        signal: continuationController.signal,\n+        signal: node._controller.signal,\n       };\n-      // Update the original callback node's controller, since even though we're\n-      // posting a new task, conceptually it's the same one.\n-      node._controller = continuationController;\n \n       const nextTask = runTask.bind(\n         null,",
        "date": "2023-11-02T15:03:30Z",
        "msg": "SchedulerPostTask: Reuse original TaskController (#27595)\n\n## Summary\r\n\r\nIt's not clear to me why we currently create a new TaskController in\r\n`runTask` \u2013 ultimately, we use the same signal and priority from the\r\noriginal created in `unstable_scheduleCallback`\r\n\r\n## How did you test this change?\r\n```\r\nyarn test SchedulerPostTask\r\n```"
    },
    {
        "diff": "diff --git a/packages/react-dom-bindings/src/client/validateDOMNesting.js b/a/packages/react-dom-bindings/src/client/validateDOMNesting.js @@ -244,7 +244,12 @@ function isTagValidWithParent(tag: string, parentTag: ?string): boolean {\n   switch (parentTag) {\n     // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect\n     case 'select':\n-      return tag === 'option' || tag === 'optgroup' || tag === '#text';\n+      return (\n+        tag === 'hr' ||\n+        tag === 'option' ||\n+        tag === 'optgroup' ||\n+        tag === '#text'\n+      );\n     case 'optgroup':\n       return tag === 'option' || tag === '#text';\n     // Strictly speaking, seeing an <option> doesn't mean we're in a <select>",
        "date": "2023-10-31T21:43:16Z",
        "msg": "validateDOMNesting: Allow hr as child of select (#27632)\n\nfix #27572\r\n\r\n---------\r\n\r\nCo-authored-by: Sophie Alpert <git@sophiebits.com>"
    },
    {
        "diff": "diff --git a/packages/react-devtools-shared/src/__tests__/utils-test.js b/a/packages/react-devtools-shared/src/__tests__/utils-test.js @@ -283,12 +283,12 @@ describe('utils', () => {\n       expect(isPlainObject(new (class C {})())).toBe(false);\n     });\n \n-    it('should retun false for objects, which have not only Object in its prototype chain', () => {\n+    it('should return false for objects, which have not only Object in its prototype chain', () => {\n       expect(isPlainObject([])).toBe(false);\n       expect(isPlainObject(Symbol())).toBe(false);\n     });\n \n-    it('should retun false for primitives', () => {\n+    it('should return false for primitives', () => {\n       expect(isPlainObject(5)).toBe(false);\n       expect(isPlainObject(true)).toBe(false);\n     });",
        "date": "2023-10-30T11:40:18Z",
        "msg": "Update utils-test.js desciption (#27624)\n\n<!--\r\n  Thanks for submitting a pull request!\r\nWe appreciate you spending the time to work on these changes. Please\r\nprovide enough information so that others can review your pull request.\r\nThe three fields below are mandatory.\r\n\r\nBefore submitting a pull request, please make sure the following is\r\ndone:\r\n\r\n1. Fork [the repository](https://github.com/facebook/react) and create\r\nyour branch from `main`.\r\n  2. Run `yarn` in the repository root.\r\n3. If you've fixed a bug or added code that should be tested, add tests!\r\n4. Ensure the test suite passes (`yarn test`). Tip: `yarn test --watch\r\nTestName` is helpful in development.\r\n5. Run `yarn test --prod` to test in the production environment. It\r\nsupports the same options as `yarn test`.\r\n6. If you need a debugger, run `yarn test --debug --watch TestName`,\r\nopen `chrome://inspect`, and press \"Inspect\".\r\n7. Format your code with\r\n[prettier](https://github.com/prettier/prettier) (`yarn prettier`).\r\n8. Make sure your code lints (`yarn lint`). Tip: `yarn linc` to only\r\ncheck changed files.\r\n  9. Run the [Flow](https://flowtype.org/) type checks (`yarn flow`).\r\n  10. If you haven't already, complete the CLA.\r\n\r\nLearn more about contributing:\r\nhttps://reactjs.org/docs/how-to-contribute.html\r\n-->\r\n\r\n## Summary\r\n   Updated the typo in test description\r\n<!--\r\nExplain the **motivation** for making this change. What existing problem\r\ndoes the pull request solve?\r\n-->\r\n\r\n## How did you test this change?\r\nNA, correct test description improves readability of the code and\r\nconfusion for anyone who is new to the codebase.\r\n<!--\r\nDemonstrate the code is solid. Example: The exact commands you ran and\r\ntheir output, screenshots / videos if the pull request changes the user\r\ninterface.\r\nHow exactly did you verify that your PR solves the issue you wanted to\r\nsolve?\r\n  If you leave this empty, your PR will very likely be closed.\r\n  \r\n-->"
    },
    {
        "diff": "diff --git a/packages/react-dom-bindings/src/client/ReactFiberConfigDOM.js b/a/packages/react-dom-bindings/src/client/ReactFiberConfigDOM.js @@ -2337,7 +2337,7 @@ function preinitStyle(\n       getStylesheetSelectorFromKey(key),\n     );\n     if (instance) {\n-      state.loading = Loaded & Inserted;\n+      state.loading = Loaded | Inserted;\n     } else {\n       // Construct a new instance and insert it\n       const stylesheetProps = Object.assign(",
        "date": "2023-10-27T15:50:40Z",
        "msg": "[Float][Fiber] Fixes incorrect boolean logic around loading states for stylesheets (#27610)\n\nthe loading states of stylesheets found in the DOM during preinit should\r\nbe assumed to be loaded"
    },
    {
        "diff": "diff --git a/fixtures/attribute-behavior/yarn.lock b/a/fixtures/attribute-behavior/yarn.lock @@ -3948,8 +3948,8 @@ lodash.uniq@^4.5.0:\n   resolved \"https://registry.yarnpkg.com/lodash.uniq/-/lodash.uniq-4.5.0.tgz#d0225373aeb652adc1bc82e4945339a842754773\"\n \n \"lodash@>=3.5 <5\", lodash@^4.0.0, lodash@^4.14.0, lodash@^4.15.0, lodash@^4.17.2, lodash@^4.17.3, lodash@^4.17.4, lodash@^4.2.0, lodash@^4.3.0:\n-  version \"4.17.4\"\n-  resolved \"https://registry.yarnpkg.com/lodash/-/lodash-4.17.4.tgz#78203a4d1c328ae1d86dca6460e369b57f4055ae\"\n+  version \"4.17.21\"\n+  resolved \"https://registry.yarnpkg.com/lodash/-/lodash-4.17.21.tgz#679591c564c3bffaae8454cf0b3df370c3d6911c\"\n \n loglevel@^1.4.1:\n   version \"1.4.1\"",
        "date": "2023-10-26T13:48:28Z",
        "msg": "Bump lodash from 4.17.4 to 4.17.21 in /fixtures/attribute-behavior (#27592)\n\n[//]: # (dependabot-start)\r\n\u26a0\ufe0f  **Dependabot is rebasing this PR** \u26a0\ufe0f \r\n\r\nRebasing might not happen immediately, so don't worry if this takes some\r\ntime.\r\n\r\nNote: if you make any changes to this PR yourself, they will take\r\nprecedence over the rebase.\r\n\r\n---\r\n\r\n[//]: # (dependabot-end)\r\n\r\nBumps [lodash](https://github.com/lodash/lodash) from 4.17.4 to 4.17.21.\r\n<details>\r\n<summary>Commits</summary>\r\n<ul>\r\n<li><a\r\nhref=\"https://github.com/lodash/lodash/commit/f299b52f39486275a9e6483b60a410e06520c538\"><code>f299b52</code></a>\r\nBump to v4.17.21</li>\r\n<li><a\r\nhref=\"https://github.com/lodash/lodash/commit/c4847ebe7d14540bb28a8b932a9ce1b9ecbfee1a\"><code>c4847eb</code></a>\r\nImprove performance of <code>toNumber</code>, <code>trim</code> and\r\n<code>trimEnd</code> on large input strings</li>\r\n<li><a\r\nhref=\"https://github.com/lodash/lodash/commit/3469357cff396a26c363f8c1b5a91dde28ba4b1c\"><code>3469357</code></a>\r\nPrevent command injection through <code>_.template</code>'s\r\n<code>variable</code> option</li>\r\n<li><a\r\nhref=\"https://github.com/lodash/lodash/commit/ded9bc66583ed0b4e3b7dc906206d40757b4a90a\"><code>ded9bc6</code></a>\r\nBump to v4.17.20.</li>\r\n<li><a\r\nhref=\"https://github.com/lodash/lodash/commit/63150ef7645ac07961b63a86490f419f356429aa\"><code>63150ef</code></a>\r\nDocumentation fixes.</li>\r\n<li><a\r\nhref=\"https://github.com/lodash/lodash/commit/00f0f62a979d2f5fa0287c06eae70cf9a62d8794\"><code>00f0f62</code></a>\r\ntest.js: Remove trailing comma.</li>\r\n<li><a\r\nhref=\"https://github.com/lodash/lodash/commit/846e434c7a5b5692c55ebf5715ed677b70a32389\"><code>846e434</code></a>\r\nTemporarily use a custom fork of <code>lodash-cli</code>.</li>\r\n<li><a\r\nhref=\"https://github.com/lodash/lodash/commit/5d046f39cbd27f573914768e3b36eeefcc4f1229\"><code>5d046f3</code></a>\r\nRe-enable Travis tests on <code>4.17</code> branch.</li>\r\n<li><a\r\nhref=\"https://github.com/lodash/lodash/commit/aa816b36d402a1ad9385142ce7188f17dae514fd\"><code>aa816b3</code></a>\r\nRemove <code>/npm-package</code>.</li>\r\n<li><a\r\nhref=\"https://github.com/lodash/lodash/commit/d7fbc52ee0466a6d248f047b5d5c3e6d1e099056\"><code>d7fbc52</code></a>\r\nBump to v4.17.19</li>\r\n<li>Additional commits viewable in <a\r\nhref=\"https://github.com/lodash/lodash/compare/4.17.4...4.17.21\">compare\r\nview</a></li>\r\n</ul>\r\n</details>\r\n<details>\r\n<summary>Maintainer changes</summary>\r\n<p>This version was pushed to npm by <a\r\nhref=\"https://www.npmjs.com/~bnjmnt4n\">bnjmnt4n</a>, a new releaser for\r\nlodash since your current version.</p>\r\n</details>\r\n<br />\r\n\r\n\r\n[![Dependabot compatibility\r\nscore](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=lodash&package-manager=npm_and_yarn&previous-version=4.17.4&new-version=4.17.21)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\r\n\r\nDependabot will resolve any conflicts with this PR as long as you don't\r\nalter it yourself. You can also trigger a rebase manually by commenting\r\n`@dependabot rebase`.\r\n\r\n[//]: # (dependabot-automerge-start)\r\n[//]: # (dependabot-automerge-end)\r\n\r\n---\r\n\r\n<details>\r\n<summary>Dependabot commands and options</summary>\r\n<br />\r\n\r\nYou can trigger Dependabot actions by commenting on this PR:\r\n- `@dependabot rebase` will rebase this PR\r\n- `@dependabot recreate` will recreate this PR, overwriting any edits\r\nthat have been made to it\r\n- `@dependabot merge` will merge this PR after your CI passes on it\r\n- `@dependabot squash and merge` will squash and merge this PR after\r\nyour CI passes on it\r\n- `@dependabot cancel merge` will cancel a previously requested merge\r\nand block automerging\r\n- `@dependabot reopen` will reopen this PR if it is closed\r\n- `@dependabot close` will close this PR and stop Dependabot recreating\r\nit. You can achieve the same result by closing it manually\r\n- `@dependabot show <dependency name> ignore conditions` will show all\r\nof the ignore conditions of the specified dependency\r\n- `@dependabot ignore this major version` will close this PR and stop\r\nDependabot creating any more for this major version (unless you reopen\r\nthe PR or upgrade to it yourself)\r\n- `@dependabot ignore this minor version` will close this PR and stop\r\nDependabot creating any more for this minor version (unless you reopen\r\nthe PR or upgrade to it yourself)\r\n- `@dependabot ignore this dependency` will close this PR and stop\r\nDependabot creating any more for this dependency (unless you reopen the\r\nPR or upgrade to it yourself)\r\nYou can disable automated security fix PRs for this repo from the\r\n[Security Alerts\r\npage](https://github.com/facebook/react/network/alerts).\r\n\r\n</details>\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
    },
    {
        "diff": "diff --git a/fixtures/packaging/systemjs-builder/prod/yarn.lock b/a/fixtures/packaging/systemjs-builder/prod/yarn.lock @@ -399,8 +399,8 @@ lazy-cache@^1.0.3:\n   resolved \"https://registry.yarnpkg.com/lazy-cache/-/lazy-cache-1.0.4.tgz#a1d78fc3a50474cb80845d3b3b6e1da49a446e8e\"\n \n lodash@^4.17.4:\n-  version \"4.17.4\"\n-  resolved \"https://registry.yarnpkg.com/lodash/-/lodash-4.17.4.tgz#78203a4d1c328ae1d86dca6460e369b57f4055ae\"\n+  version \"4.17.21\"\n+  resolved \"https://registry.yarnpkg.com/lodash/-/lodash-4.17.21.tgz#679591c564c3bffaae8454cf0b3df370c3d6911c\"\n \n longest@^1.0.1:\n   version \"1.0.1\"",
        "date": "2023-10-26T13:48:05Z",
        "msg": "Bump lodash from 4.17.4 to 4.17.21 in /fixtures/packaging/systemjs-builder/prod (#27593)\n\nBumps [lodash](https://github.com/lodash/lodash) from 4.17.4 to 4.17.21.\r\n<details>\r\n<summary>Commits</summary>\r\n<ul>\r\n<li><a\r\nhref=\"https://github.com/lodash/lodash/commit/f299b52f39486275a9e6483b60a410e06520c538\"><code>f299b52</code></a>\r\nBump to v4.17.21</li>\r\n<li><a\r\nhref=\"https://github.com/lodash/lodash/commit/c4847ebe7d14540bb28a8b932a9ce1b9ecbfee1a\"><code>c4847eb</code></a>\r\nImprove performance of <code>toNumber</code>, <code>trim</code> and\r\n<code>trimEnd</code> on large input strings</li>\r\n<li><a\r\nhref=\"https://github.com/lodash/lodash/commit/3469357cff396a26c363f8c1b5a91dde28ba4b1c\"><code>3469357</code></a>\r\nPrevent command injection through <code>_.template</code>'s\r\n<code>variable</code> option</li>\r\n<li><a\r\nhref=\"https://github.com/lodash/lodash/commit/ded9bc66583ed0b4e3b7dc906206d40757b4a90a\"><code>ded9bc6</code></a>\r\nBump to v4.17.20.</li>\r\n<li><a\r\nhref=\"https://github.com/lodash/lodash/commit/63150ef7645ac07961b63a86490f419f356429aa\"><code>63150ef</code></a>\r\nDocumentation fixes.</li>\r\n<li><a\r\nhref=\"https://github.com/lodash/lodash/commit/00f0f62a979d2f5fa0287c06eae70cf9a62d8794\"><code>00f0f62</code></a>\r\ntest.js: Remove trailing comma.</li>\r\n<li><a\r\nhref=\"https://github.com/lodash/lodash/commit/846e434c7a5b5692c55ebf5715ed677b70a32389\"><code>846e434</code></a>\r\nTemporarily use a custom fork of <code>lodash-cli</code>.</li>\r\n<li><a\r\nhref=\"https://github.com/lodash/lodash/commit/5d046f39cbd27f573914768e3b36eeefcc4f1229\"><code>5d046f3</code></a>\r\nRe-enable Travis tests on <code>4.17</code> branch.</li>\r\n<li><a\r\nhref=\"https://github.com/lodash/lodash/commit/aa816b36d402a1ad9385142ce7188f17dae514fd\"><code>aa816b3</code></a>\r\nRemove <code>/npm-package</code>.</li>\r\n<li><a\r\nhref=\"https://github.com/lodash/lodash/commit/d7fbc52ee0466a6d248f047b5d5c3e6d1e099056\"><code>d7fbc52</code></a>\r\nBump to v4.17.19</li>\r\n<li>Additional commits viewable in <a\r\nhref=\"https://github.com/lodash/lodash/compare/4.17.4...4.17.21\">compare\r\nview</a></li>\r\n</ul>\r\n</details>\r\n<details>\r\n<summary>Maintainer changes</summary>\r\n<p>This version was pushed to npm by <a\r\nhref=\"https://www.npmjs.com/~bnjmnt4n\">bnjmnt4n</a>, a new releaser for\r\nlodash since your current version.</p>\r\n</details>\r\n<br />\r\n\r\n\r\n[![Dependabot compatibility\r\nscore](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=lodash&package-manager=npm_and_yarn&previous-version=4.17.4&new-version=4.17.21)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\r\n\r\nDependabot will resolve any conflicts with this PR as long as you don't\r\nalter it yourself. You can also trigger a rebase manually by commenting\r\n`@dependabot rebase`.\r\n\r\n[//]: # (dependabot-automerge-start)\r\n[//]: # (dependabot-automerge-end)\r\n\r\n---\r\n\r\n<details>\r\n<summary>Dependabot commands and options</summary>\r\n<br />\r\n\r\nYou can trigger Dependabot actions by commenting on this PR:\r\n- `@dependabot rebase` will rebase this PR\r\n- `@dependabot recreate` will recreate this PR, overwriting any edits\r\nthat have been made to it\r\n- `@dependabot merge` will merge this PR after your CI passes on it\r\n- `@dependabot squash and merge` will squash and merge this PR after\r\nyour CI passes on it\r\n- `@dependabot cancel merge` will cancel a previously requested merge\r\nand block automerging\r\n- `@dependabot reopen` will reopen this PR if it is closed\r\n- `@dependabot close` will close this PR and stop Dependabot recreating\r\nit. You can achieve the same result by closing it manually\r\n- `@dependabot show <dependency name> ignore conditions` will show all\r\nof the ignore conditions of the specified dependency\r\n- `@dependabot ignore this major version` will close this PR and stop\r\nDependabot creating any more for this major version (unless you reopen\r\nthe PR or upgrade to it yourself)\r\n- `@dependabot ignore this minor version` will close this PR and stop\r\nDependabot creating any more for this minor version (unless you reopen\r\nthe PR or upgrade to it yourself)\r\n- `@dependabot ignore this dependency` will close this PR and stop\r\nDependabot creating any more for this dependency (unless you reopen the\r\nPR or upgrade to it yourself)\r\nYou can disable automated security fix PRs for this repo from the\r\n[Security Alerts\r\npage](https://github.com/facebook/react/network/alerts).\r\n\r\n</details>\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
    },
    {
        "diff": "diff --git a/fixtures/art/yarn.lock b/a/fixtures/art/yarn.lock @@ -1890,15 +1890,10 @@ locate-path@^3.0.0:\n     p-locate \"^3.0.0\"\n     path-exists \"^3.0.0\"\n \n-lodash@^4.17.13:\n-  version \"4.17.15\"\n-  resolved \"https://registry.yarnpkg.com/lodash/-/lodash-4.17.15.tgz#b447f6670a0455bbfeedd11392eff330ea097548\"\n-  integrity sha512-8xOcRHvCjnocdS5cpwXQXVzmmh5e5+saE2QGoeQmbKmRS6J3VQppPOIt0MnmE+4xlZoumy0GPG0D0MVIQbNA1A==\n-\n-lodash@^4.17.19:\n-  version \"4.17.19\"\n-  resolved \"https://registry.yarnpkg.com/lodash/-/lodash-4.17.19.tgz#e48ddedbe30b3321783c5b4301fbd353bc1e4a4b\"\n-  integrity sha512-JNvd8XER9GQX0v2qJgsaN/mzFCNA5BRe/j8JN9d+tWyGLSodKQHKFicdwNYzWwI3wjRnaKPsGj1XkBjx/F96DQ==\n+lodash@^4.17.13, lodash@^4.17.19:\n+  version \"4.17.21\"\n+  resolved \"https://registry.yarnpkg.com/lodash/-/lodash-4.17.21.tgz#679591c564c3bffaae8454cf0b3df370c3d6911c\"\n+  integrity sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg==\n \n longest@^1.0.1:\n   version \"1.0.1\"",
        "date": "2023-10-26T13:47:51Z",
        "msg": "Bump lodash from 4.17.15 to 4.17.21 in /fixtures/art (#27588)\n\nBumps [lodash](https://github.com/lodash/lodash) from 4.17.15 to\r\n4.17.21.\r\n<details>\r\n<summary>Commits</summary>\r\n<ul>\r\n<li><a\r\nhref=\"https://github.com/lodash/lodash/commit/f299b52f39486275a9e6483b60a410e06520c538\"><code>f299b52</code></a>\r\nBump to v4.17.21</li>\r\n<li><a\r\nhref=\"https://github.com/lodash/lodash/commit/c4847ebe7d14540bb28a8b932a9ce1b9ecbfee1a\"><code>c4847eb</code></a>\r\nImprove performance of <code>toNumber</code>, <code>trim</code> and\r\n<code>trimEnd</code> on large input strings</li>\r\n<li><a\r\nhref=\"https://github.com/lodash/lodash/commit/3469357cff396a26c363f8c1b5a91dde28ba4b1c\"><code>3469357</code></a>\r\nPrevent command injection through <code>_.template</code>'s\r\n<code>variable</code> option</li>\r\n<li><a\r\nhref=\"https://github.com/lodash/lodash/commit/ded9bc66583ed0b4e3b7dc906206d40757b4a90a\"><code>ded9bc6</code></a>\r\nBump to v4.17.20.</li>\r\n<li><a\r\nhref=\"https://github.com/lodash/lodash/commit/63150ef7645ac07961b63a86490f419f356429aa\"><code>63150ef</code></a>\r\nDocumentation fixes.</li>\r\n<li><a\r\nhref=\"https://github.com/lodash/lodash/commit/00f0f62a979d2f5fa0287c06eae70cf9a62d8794\"><code>00f0f62</code></a>\r\ntest.js: Remove trailing comma.</li>\r\n<li><a\r\nhref=\"https://github.com/lodash/lodash/commit/846e434c7a5b5692c55ebf5715ed677b70a32389\"><code>846e434</code></a>\r\nTemporarily use a custom fork of <code>lodash-cli</code>.</li>\r\n<li><a\r\nhref=\"https://github.com/lodash/lodash/commit/5d046f39cbd27f573914768e3b36eeefcc4f1229\"><code>5d046f3</code></a>\r\nRe-enable Travis tests on <code>4.17</code> branch.</li>\r\n<li><a\r\nhref=\"https://github.com/lodash/lodash/commit/aa816b36d402a1ad9385142ce7188f17dae514fd\"><code>aa816b3</code></a>\r\nRemove <code>/npm-package</code>.</li>\r\n<li><a\r\nhref=\"https://github.com/lodash/lodash/commit/d7fbc52ee0466a6d248f047b5d5c3e6d1e099056\"><code>d7fbc52</code></a>\r\nBump to v4.17.19</li>\r\n<li>Additional commits viewable in <a\r\nhref=\"https://github.com/lodash/lodash/compare/4.17.15...4.17.21\">compare\r\nview</a></li>\r\n</ul>\r\n</details>\r\n<details>\r\n<summary>Maintainer changes</summary>\r\n<p>This version was pushed to npm by <a\r\nhref=\"https://www.npmjs.com/~bnjmnt4n\">bnjmnt4n</a>, a new releaser for\r\nlodash since your current version.</p>\r\n</details>\r\n<br />\r\n\r\n\r\n[![Dependabot compatibility\r\nscore](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=lodash&package-manager=npm_and_yarn&previous-version=4.17.15&new-version=4.17.21)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\r\n\r\nDependabot will resolve any conflicts with this PR as long as you don't\r\nalter it yourself. You can also trigger a rebase manually by commenting\r\n`@dependabot rebase`.\r\n\r\n[//]: # (dependabot-automerge-start)\r\n[//]: # (dependabot-automerge-end)\r\n\r\n---\r\n\r\n<details>\r\n<summary>Dependabot commands and options</summary>\r\n<br />\r\n\r\nYou can trigger Dependabot actions by commenting on this PR:\r\n- `@dependabot rebase` will rebase this PR\r\n- `@dependabot recreate` will recreate this PR, overwriting any edits\r\nthat have been made to it\r\n- `@dependabot merge` will merge this PR after your CI passes on it\r\n- `@dependabot squash and merge` will squash and merge this PR after\r\nyour CI passes on it\r\n- `@dependabot cancel merge` will cancel a previously requested merge\r\nand block automerging\r\n- `@dependabot reopen` will reopen this PR if it is closed\r\n- `@dependabot close` will close this PR and stop Dependabot recreating\r\nit. You can achieve the same result by closing it manually\r\n- `@dependabot show <dependency name> ignore conditions` will show all\r\nof the ignore conditions of the specified dependency\r\n- `@dependabot ignore this major version` will close this PR and stop\r\nDependabot creating any more for this major version (unless you reopen\r\nthe PR or upgrade to it yourself)\r\n- `@dependabot ignore this minor version` will close this PR and stop\r\nDependabot creating any more for this minor version (unless you reopen\r\nthe PR or upgrade to it yourself)\r\n- `@dependabot ignore this dependency` will close this PR and stop\r\nDependabot creating any more for this dependency (unless you reopen the\r\nPR or upgrade to it yourself)\r\nYou can disable automated security fix PRs for this repo from the\r\n[Security Alerts\r\npage](https://github.com/facebook/react/network/alerts).\r\n\r\n</details>\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
    },
    {
        "diff": "diff --git a/fixtures/expiration/yarn.lock b/a/fixtures/expiration/yarn.lock @@ -3943,8 +3943,8 @@ lodash.uniq@^4.5.0:\n   resolved \"https://registry.yarnpkg.com/lodash.uniq/-/lodash.uniq-4.5.0.tgz#d0225373aeb652adc1bc82e4945339a842754773\"\n \n \"lodash@>=3.5 <5\", lodash@^4.14.0, lodash@^4.15.0, lodash@^4.17.2, lodash@^4.17.3, lodash@^4.17.4, lodash@^4.3.0:\n-  version \"4.17.4\"\n-  resolved \"https://registry.yarnpkg.com/lodash/-/lodash-4.17.4.tgz#78203a4d1c328ae1d86dca6460e369b57f4055ae\"\n+  version \"4.17.21\"\n+  resolved \"https://registry.yarnpkg.com/lodash/-/lodash-4.17.21.tgz#679591c564c3bffaae8454cf0b3df370c3d6911c\"\n \n loglevel@^1.4.1:\n   version \"1.6.0\"",
        "date": "2023-10-26T13:43:55Z",
        "msg": "Bump lodash from 4.17.4 to 4.17.21 in /fixtures/expiration (#27591)\n\nBumps [lodash](https://github.com/lodash/lodash) from 4.17.4 to 4.17.21.\r\n<details>\r\n<summary>Commits</summary>\r\n<ul>\r\n<li><a\r\nhref=\"https://github.com/lodash/lodash/commit/f299b52f39486275a9e6483b60a410e06520c538\"><code>f299b52</code></a>\r\nBump to v4.17.21</li>\r\n<li><a\r\nhref=\"https://github.com/lodash/lodash/commit/c4847ebe7d14540bb28a8b932a9ce1b9ecbfee1a\"><code>c4847eb</code></a>\r\nImprove performance of <code>toNumber</code>, <code>trim</code> and\r\n<code>trimEnd</code> on large input strings</li>\r\n<li><a\r\nhref=\"https://github.com/lodash/lodash/commit/3469357cff396a26c363f8c1b5a91dde28ba4b1c\"><code>3469357</code></a>\r\nPrevent command injection through <code>_.template</code>'s\r\n<code>variable</code> option</li>\r\n<li><a\r\nhref=\"https://github.com/lodash/lodash/commit/ded9bc66583ed0b4e3b7dc906206d40757b4a90a\"><code>ded9bc6</code></a>\r\nBump to v4.17.20.</li>\r\n<li><a\r\nhref=\"https://github.com/lodash/lodash/commit/63150ef7645ac07961b63a86490f419f356429aa\"><code>63150ef</code></a>\r\nDocumentation fixes.</li>\r\n<li><a\r\nhref=\"https://github.com/lodash/lodash/commit/00f0f62a979d2f5fa0287c06eae70cf9a62d8794\"><code>00f0f62</code></a>\r\ntest.js: Remove trailing comma.</li>\r\n<li><a\r\nhref=\"https://github.com/lodash/lodash/commit/846e434c7a5b5692c55ebf5715ed677b70a32389\"><code>846e434</code></a>\r\nTemporarily use a custom fork of <code>lodash-cli</code>.</li>\r\n<li><a\r\nhref=\"https://github.com/lodash/lodash/commit/5d046f39cbd27f573914768e3b36eeefcc4f1229\"><code>5d046f3</code></a>\r\nRe-enable Travis tests on <code>4.17</code> branch.</li>\r\n<li><a\r\nhref=\"https://github.com/lodash/lodash/commit/aa816b36d402a1ad9385142ce7188f17dae514fd\"><code>aa816b3</code></a>\r\nRemove <code>/npm-package</code>.</li>\r\n<li><a\r\nhref=\"https://github.com/lodash/lodash/commit/d7fbc52ee0466a6d248f047b5d5c3e6d1e099056\"><code>d7fbc52</code></a>\r\nBump to v4.17.19</li>\r\n<li>Additional commits viewable in <a\r\nhref=\"https://github.com/lodash/lodash/compare/4.17.4...4.17.21\">compare\r\nview</a></li>\r\n</ul>\r\n</details>\r\n<details>\r\n<summary>Maintainer changes</summary>\r\n<p>This version was pushed to npm by <a\r\nhref=\"https://www.npmjs.com/~bnjmnt4n\">bnjmnt4n</a>, a new releaser for\r\nlodash since your current version.</p>\r\n</details>\r\n<br />\r\n\r\n\r\n[![Dependabot compatibility\r\nscore](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=lodash&package-manager=npm_and_yarn&previous-version=4.17.4&new-version=4.17.21)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\r\n\r\nDependabot will resolve any conflicts with this PR as long as you don't\r\nalter it yourself. You can also trigger a rebase manually by commenting\r\n`@dependabot rebase`.\r\n\r\n[//]: # (dependabot-automerge-start)\r\n[//]: # (dependabot-automerge-end)\r\n\r\n---\r\n\r\n<details>\r\n<summary>Dependabot commands and options</summary>\r\n<br />\r\n\r\nYou can trigger Dependabot actions by commenting on this PR:\r\n- `@dependabot rebase` will rebase this PR\r\n- `@dependabot recreate` will recreate this PR, overwriting any edits\r\nthat have been made to it\r\n- `@dependabot merge` will merge this PR after your CI passes on it\r\n- `@dependabot squash and merge` will squash and merge this PR after\r\nyour CI passes on it\r\n- `@dependabot cancel merge` will cancel a previously requested merge\r\nand block automerging\r\n- `@dependabot reopen` will reopen this PR if it is closed\r\n- `@dependabot close` will close this PR and stop Dependabot recreating\r\nit. You can achieve the same result by closing it manually\r\n- `@dependabot show <dependency name> ignore conditions` will show all\r\nof the ignore conditions of the specified dependency\r\n- `@dependabot ignore this major version` will close this PR and stop\r\nDependabot creating any more for this major version (unless you reopen\r\nthe PR or upgrade to it yourself)\r\n- `@dependabot ignore this minor version` will close this PR and stop\r\nDependabot creating any more for this minor version (unless you reopen\r\nthe PR or upgrade to it yourself)\r\n- `@dependabot ignore this dependency` will close this PR and stop\r\nDependabot creating any more for this dependency (unless you reopen the\r\nPR or upgrade to it yourself)\r\nYou can disable automated security fix PRs for this repo from the\r\n[Security Alerts\r\npage](https://github.com/facebook/react/network/alerts).\r\n\r\n</details>\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
    },
    {
        "diff": "diff --git a/yarn.lock b/a/yarn.lock @@ -6906,7 +6906,6 @@ eslint-plugin-no-unsanitized@3.1.2:\n \n \"eslint-plugin-react-internal@link:./scripts/eslint-rules\":\n   version \"0.0.0\"\n-  uid \"\"\n \n eslint-plugin-react@^6.7.1:\n   version \"6.10.3\"\n@@ -10768,17 +10767,7 @@ lodash.union@^4.6.0:\n   resolved \"https://registry.yarnpkg.com/lodash.union/-/lodash.union-4.6.0.tgz#48bb5088409f16f1821666641c44dd1aaae3cd88\"\n   integrity sha1-SLtQiECfFvGCFmZkHETdGqrjzYg=\n \n-lodash@^4.14.0, lodash@^4.15.0, lodash@^4.17.10, lodash@^4.17.11, lodash@^4.17.13, lodash@^4.8.0, lodash@~4.17.2:\n-  version \"4.17.15\"\n-  resolved \"https://registry.yarnpkg.com/lodash/-/lodash-4.17.15.tgz#b447f6670a0455bbfeedd11392eff330ea097548\"\n-  integrity sha512-8xOcRHvCjnocdS5cpwXQXVzmmh5e5+saE2QGoeQmbKmRS6J3VQppPOIt0MnmE+4xlZoumy0GPG0D0MVIQbNA1A==\n-\n-lodash@^4.17.14, lodash@^4.17.15, lodash@^4.17.19:\n-  version \"4.17.20\"\n-  resolved \"https://registry.yarnpkg.com/lodash/-/lodash-4.17.20.tgz#b44a9b6297bcb698f1c51a3545a2b3b368d59c52\"\n-  integrity sha512-PlhdFcillOINfeV7Ni6oF1TAEayyZBoZ8bcshTHqOYJYlrqzRK5hagpagky5o4HfCzzd1TRkXPMFq6cKk9rGmA==\n-\n-lodash@^4.17.21:\n+lodash@^4.14.0, lodash@^4.15.0, lodash@^4.17.10, lodash@^4.17.11, lodash@^4.17.13, lodash@^4.17.14, lodash@^4.17.15, lodash@^4.17.19, lodash@^4.17.21, lodash@^4.8.0, lodash@~4.17.2:\n   version \"4.17.21\"\n   resolved \"https://registry.yarnpkg.com/lodash/-/lodash-4.17.21.tgz#679591c564c3bffaae8454cf0b3df370c3d6911c\"\n   integrity sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg==",
        "date": "2023-10-26T13:43:31Z",
        "msg": "Bump lodash from 4.17.15 to 4.17.21 (#27587)\n\nBumps [lodash](https://github.com/lodash/lodash) from 4.17.15 to\r\n4.17.21.\r\n<details>\r\n<summary>Commits</summary>\r\n<ul>\r\n<li><a\r\nhref=\"https://github.com/lodash/lodash/commit/f299b52f39486275a9e6483b60a410e06520c538\"><code>f299b52</code></a>\r\nBump to v4.17.21</li>\r\n<li><a\r\nhref=\"https://github.com/lodash/lodash/commit/c4847ebe7d14540bb28a8b932a9ce1b9ecbfee1a\"><code>c4847eb</code></a>\r\nImprove performance of <code>toNumber</code>, <code>trim</code> and\r\n<code>trimEnd</code> on large input strings</li>\r\n<li><a\r\nhref=\"https://github.com/lodash/lodash/commit/3469357cff396a26c363f8c1b5a91dde28ba4b1c\"><code>3469357</code></a>\r\nPrevent command injection through <code>_.template</code>'s\r\n<code>variable</code> option</li>\r\n<li><a\r\nhref=\"https://github.com/lodash/lodash/commit/ded9bc66583ed0b4e3b7dc906206d40757b4a90a\"><code>ded9bc6</code></a>\r\nBump to v4.17.20.</li>\r\n<li><a\r\nhref=\"https://github.com/lodash/lodash/commit/63150ef7645ac07961b63a86490f419f356429aa\"><code>63150ef</code></a>\r\nDocumentation fixes.</li>\r\n<li><a\r\nhref=\"https://github.com/lodash/lodash/commit/00f0f62a979d2f5fa0287c06eae70cf9a62d8794\"><code>00f0f62</code></a>\r\ntest.js: Remove trailing comma.</li>\r\n<li><a\r\nhref=\"https://github.com/lodash/lodash/commit/846e434c7a5b5692c55ebf5715ed677b70a32389\"><code>846e434</code></a>\r\nTemporarily use a custom fork of <code>lodash-cli</code>.</li>\r\n<li><a\r\nhref=\"https://github.com/lodash/lodash/commit/5d046f39cbd27f573914768e3b36eeefcc4f1229\"><code>5d046f3</code></a>\r\nRe-enable Travis tests on <code>4.17</code> branch.</li>\r\n<li><a\r\nhref=\"https://github.com/lodash/lodash/commit/aa816b36d402a1ad9385142ce7188f17dae514fd\"><code>aa816b3</code></a>\r\nRemove <code>/npm-package</code>.</li>\r\n<li><a\r\nhref=\"https://github.com/lodash/lodash/commit/d7fbc52ee0466a6d248f047b5d5c3e6d1e099056\"><code>d7fbc52</code></a>\r\nBump to v4.17.19</li>\r\n<li>Additional commits viewable in <a\r\nhref=\"https://github.com/lodash/lodash/compare/4.17.15...4.17.21\">compare\r\nview</a></li>\r\n</ul>\r\n</details>\r\n<details>\r\n<summary>Maintainer changes</summary>\r\n<p>This version was pushed to npm by <a\r\nhref=\"https://www.npmjs.com/~bnjmnt4n\">bnjmnt4n</a>, a new releaser for\r\nlodash since your current version.</p>\r\n</details>\r\n<br />\r\n\r\n\r\n[![Dependabot compatibility\r\nscore](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=lodash&package-manager=npm_and_yarn&previous-version=4.17.15&new-version=4.17.21)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\r\n\r\nDependabot will resolve any conflicts with this PR as long as you don't\r\nalter it yourself. You can also trigger a rebase manually by commenting\r\n`@dependabot rebase`.\r\n\r\n[//]: # (dependabot-automerge-start)\r\n[//]: # (dependabot-automerge-end)\r\n\r\n---\r\n\r\n<details>\r\n<summary>Dependabot commands and options</summary>\r\n<br />\r\n\r\nYou can trigger Dependabot actions by commenting on this PR:\r\n- `@dependabot rebase` will rebase this PR\r\n- `@dependabot recreate` will recreate this PR, overwriting any edits\r\nthat have been made to it\r\n- `@dependabot merge` will merge this PR after your CI passes on it\r\n- `@dependabot squash and merge` will squash and merge this PR after\r\nyour CI passes on it\r\n- `@dependabot cancel merge` will cancel a previously requested merge\r\nand block automerging\r\n- `@dependabot reopen` will reopen this PR if it is closed\r\n- `@dependabot close` will close this PR and stop Dependabot recreating\r\nit. You can achieve the same result by closing it manually\r\n- `@dependabot show <dependency name> ignore conditions` will show all\r\nof the ignore conditions of the specified dependency\r\n- `@dependabot ignore this major version` will close this PR and stop\r\nDependabot creating any more for this major version (unless you reopen\r\nthe PR or upgrade to it yourself)\r\n- `@dependabot ignore this minor version` will close this PR and stop\r\nDependabot creating any more for this minor version (unless you reopen\r\nthe PR or upgrade to it yourself)\r\n- `@dependabot ignore this dependency` will close this PR and stop\r\nDependabot creating any more for this dependency (unless you reopen the\r\nPR or upgrade to it yourself)\r\nYou can disable automated security fix PRs for this repo from the\r\n[Security Alerts\r\npage](https://github.com/facebook/react/network/alerts).\r\n\r\n</details>\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
    },
    {
        "diff": "diff --git a/packages/react-server/src/ReactFizzServer.js b/a/packages/react-server/src/ReactFizzServer.js @@ -3476,7 +3476,13 @@ function retryReplayTask(request: Request, task: ReplayTask): void {\n     const prevThenableState = task.thenableState;\n     task.thenableState = null;\n \n-    renderNodeDestructive(request, task, prevThenableState, task.node, -1);\n+    renderNodeDestructive(\n+      request,\n+      task,\n+      prevThenableState,\n+      task.node,\n+      task.childIndex,\n+    );\n \n     if (task.replay.pendingTasks === 1 && task.replay.nodes.length > 0) {\n       throw new Error(",
        "date": "2023-10-26T06:20:24Z",
        "msg": "[Fizz] Pass task.childIndex in retryReplayTask (#27594)\n\nThis was missed that we track the child index on the task. The\r\nequivalent in retryRenderTask already has this.\r\n\r\nThe effect is that a lazy node that suspends gets its child index reset\r\nto -1 even though it should resume in the index it left off."
    },
    {
        "diff": "diff --git a/scripts/rollup/build-all-release-channels.js b/a/scripts/rollup/build-all-release-channels.js @@ -8,7 +8,6 @@ const fse = require('fs-extra');\n const {spawnSync} = require('child_process');\n const path = require('path');\n const tmp = require('tmp');\n-const glob = require('glob');\n \n const {\n   ReactVersion,\n@@ -236,28 +235,19 @@ function processExperimental(buildDir, version) {\n     );\n   }\n \n-  const facebookWwwDir = path.join(buildDir, 'facebook-www');\n-  if (fs.existsSync(facebookWwwDir)) {\n-    for (const fileName of fs.readdirSync(facebookWwwDir).sort()) {\n-      const filePath = path.join(facebookWwwDir, fileName);\n+  if (fs.existsSync(buildDir + '/facebook-www')) {\n+    const hash = crypto.createHash('sha1');\n+    for (const fileName of fs.readdirSync(buildDir + '/facebook-www').sort()) {\n+      const filePath = buildDir + '/facebook-www/' + fileName;\n       const stats = fs.statSync(filePath);\n       if (!stats.isDirectory()) {\n+        hash.update(fs.readFileSync(filePath));\n         fs.renameSync(filePath, filePath.replace('.js', '.modern.js'));\n       }\n     }\n-    const contentHash = hashJSFilesInDirectory(facebookWwwDir);\n     updatePlaceholderReactVersionInCompiledArtifacts(\n-      facebookWwwDir,\n-      ReactVersion + '-www-modern-' + contentHash\n-    );\n-  }\n-\n-  const facebookReactNativeDir = path.join(buildDir, 'facebook-react-native');\n-  if (fs.existsSync(facebookReactNativeDir)) {\n-    const contentHash = hashJSFilesInDirectory(facebookReactNativeDir);\n-    updatePlaceholderReactVersionInCompiledArtifacts(\n-      facebookReactNativeDir,\n-      ReactVersion + '-react-native-' + contentHash\n+      buildDir + '/facebook-www',\n+      ReactVersion + '-www-modern-' + hash.digest('hex').slice(0, 8)\n     );\n   }\n \n@@ -356,14 +346,6 @@ function updatePackageVersions(\n   }\n }\n \n-function hashJSFilesInDirectory(directory) {\n-  const hash = crypto.createHash('sha1');\n-  for (const filePath of glob.sync(directory + '/**/*.js').sort()) {\n-    hash.update(fs.readFileSync(filePath));\n-  }\n-  return hash.digest('hex').slice(0, 8);\n-}\n-\n function updatePlaceholderReactVersionInCompiledArtifacts(\n   artifactsDirectory,\n   newVersion",
        "date": "2023-10-25T19:07:17Z",
        "msg": "Revert \"Build: use content hash for facebook-react-native build\" (#27584)\n\nReverts facebook/react#27577.\r\n\r\nWe also sync React Native OSS bundles which means this didn't work as\r\nhoped unless we abandon the commit hash in OSS which seems useful."
    },
    {
        "diff": "diff --git a/scripts/rollup/build-all-release-channels.js b/a/scripts/rollup/build-all-release-channels.js @@ -8,6 +8,7 @@ const fse = require('fs-extra');\n const {spawnSync} = require('child_process');\n const path = require('path');\n const tmp = require('tmp');\n+const glob = require('glob');\n \n const {\n   ReactVersion,\n@@ -235,19 +236,28 @@ function processExperimental(buildDir, version) {\n     );\n   }\n \n-  if (fs.existsSync(buildDir + '/facebook-www')) {\n-    const hash = crypto.createHash('sha1');\n-    for (const fileName of fs.readdirSync(buildDir + '/facebook-www').sort()) {\n-      const filePath = buildDir + '/facebook-www/' + fileName;\n+  const facebookWwwDir = path.join(buildDir, 'facebook-www');\n+  if (fs.existsSync(facebookWwwDir)) {\n+    for (const fileName of fs.readdirSync(facebookWwwDir).sort()) {\n+      const filePath = path.join(facebookWwwDir, fileName);\n       const stats = fs.statSync(filePath);\n       if (!stats.isDirectory()) {\n-        hash.update(fs.readFileSync(filePath));\n         fs.renameSync(filePath, filePath.replace('.js', '.modern.js'));\n       }\n     }\n+    const contentHash = hashJSFilesInDirectory(facebookWwwDir);\n     updatePlaceholderReactVersionInCompiledArtifacts(\n-      buildDir + '/facebook-www',\n-      ReactVersion + '-www-modern-' + hash.digest('hex').slice(0, 8)\n+      facebookWwwDir,\n+      ReactVersion + '-www-modern-' + contentHash\n+    );\n+  }\n+\n+  const facebookReactNativeDir = path.join(buildDir, 'facebook-react-native');\n+  if (fs.existsSync(facebookReactNativeDir)) {\n+    const contentHash = hashJSFilesInDirectory(facebookReactNativeDir);\n+    updatePlaceholderReactVersionInCompiledArtifacts(\n+      facebookReactNativeDir,\n+      ReactVersion + '-react-native-' + contentHash\n     );\n   }\n \n@@ -346,6 +356,14 @@ function updatePackageVersions(\n   }\n }\n \n+function hashJSFilesInDirectory(directory) {\n+  const hash = crypto.createHash('sha1');\n+  for (const filePath of glob.sync(directory + '/**/*.js').sort()) {\n+    hash.update(fs.readFileSync(filePath));\n+  }\n+  return hash.digest('hex').slice(0, 8);\n+}\n+\n function updatePlaceholderReactVersionInCompiledArtifacts(\n   artifactsDirectory,\n   newVersion",
        "date": "2023-10-25T13:50:15Z",
        "msg": "Build: use content hash for facebook-react-native build (#27577)\n\nSimilar to #26734, this switches the RN builds for Meta to a content\r\nhash instead of git commit number to make the builds reproducible and\r\navoid creating sync commits if the bundled content didn't change."
    },
    {
        "diff": "diff --git a/packages/react-dom-bindings/src/server/ReactFizzConfigDOM.js b/a/packages/react-dom-bindings/src/server/ReactFizzConfigDOM.js @@ -2509,7 +2509,7 @@ function pushStyleImpl(\n     target.push(stringToChunk(escapeTextForBrowser('' + child)));\n   }\n   pushInnerHTML(target, innerHTML, children);\n-  target.push(endTag1, stringToChunk('style'), endTag2);\n+  target.push(endChunkForTag('style'));\n   return null;\n }\n \n@@ -2824,7 +2824,7 @@ function pushTitleImpl(\n     target.push(stringToChunk(escapeTextForBrowser('' + child)));\n   }\n   pushInnerHTML(target, innerHTML, children);\n-  target.push(endTag1, stringToChunk('title'), endTag2);\n+  target.push(endChunkForTag('title'));\n   return null;\n }\n \n@@ -3081,7 +3081,7 @@ function pushScriptImpl(\n   if (typeof children === 'string') {\n     target.push(stringToChunk(encodeHTMLTextNode(children)));\n   }\n-  target.push(endTag1, stringToChunk('script'), endTag2);\n+  target.push(endChunkForTag('script'));\n   return null;\n }\n \n@@ -3484,8 +3484,15 @@ export function pushStartInstance(\n   return pushStartGenericElement(target, props, type);\n }\n \n-const endTag1 = stringToPrecomputedChunk('</');\n-const endTag2 = stringToPrecomputedChunk('>');\n+const endTagCache = new Map<string, PrecomputedChunk>();\n+function endChunkForTag(tag: string): PrecomputedChunk {\n+  let chunk = endTagCache.get(tag);\n+  if (chunk === undefined) {\n+    chunk = stringToPrecomputedChunk('</' + tag + '>');\n+    endTagCache.set(tag, chunk);\n+  }\n+  return chunk;\n+}\n \n export function pushEndInstance(\n   target: Array<Chunk | PrecomputedChunk>,\n@@ -3547,7 +3554,7 @@ export function pushEndInstance(\n       }\n       break;\n   }\n-  target.push(endTag1, stringToChunk(type), endTag2);\n+  target.push(endChunkForTag(type));\n }\n \n function writeBootstrap(\n@@ -4502,9 +4509,7 @@ export function writePreamble(\n     // if the main content contained the </head> it would also have provided a\n     // <head>. This means that all the content inside <html> is either <body> or\n     // invalid HTML\n-    writeChunk(destination, endTag1);\n-    writeChunk(destination, stringToChunk('head'));\n-    writeChunk(destination, endTag2);\n+    writeChunk(destination, endChunkForTag('head'));\n   }\n }\n \n@@ -4577,14 +4582,10 @@ export function writePostamble(\n   resumableState: ResumableState,\n ): void {\n   if (resumableState.hasBody) {\n-    writeChunk(destination, endTag1);\n-    writeChunk(destination, stringToChunk('body'));\n-    writeChunk(destination, endTag2);\n+    writeChunk(destination, endChunkForTag('body'));\n   }\n   if (resumableState.hasHtml) {\n-    writeChunk(destination, endTag1);\n-    writeChunk(destination, stringToChunk('html'));\n-    writeChunk(destination, endTag2);\n+    writeChunk(destination, endChunkForTag('html'));\n   }\n }\n ",
        "date": "2023-10-20T22:34:21Z",
        "msg": "[Fizz] Optimize end tags chunks (#27522)\n\nImplements `endChunkForTag` to make writing end tags faster"
    },
    {
        "diff": "diff --git a/packages/react-client/src/ReactFlightReplyClient.js b/a/packages/react-client/src/ReactFlightReplyClient.js @@ -304,22 +304,22 @@ export function processReply(\n           );\n         } else if (objectName(value) !== 'Object') {\n           console.error(\n-            'Only plain objects can be passed to Client Components from Server Components. ' +\n+            'Only plain objects can be passed to Server Functions from the Client. ' +\n               '%s objects are not supported.%s',\n             objectName(value),\n             describeObjectForErrorMessage(parent, key),\n           );\n         } else if (!isSimpleObject(value)) {\n           console.error(\n-            'Only plain objects can be passed to Client Components from Server Components. ' +\n+            'Only plain objects can be passed to Server Functions from the Client. ' +\n               'Classes or other objects with methods are not supported.%s',\n             describeObjectForErrorMessage(parent, key),\n           );\n         } else if (Object.getOwnPropertySymbols) {\n           const symbols = Object.getOwnPropertySymbols(value);\n           if (symbols.length > 0) {\n             console.error(\n-              'Only plain objects can be passed to Client Components from Server Components. ' +\n+              'Only plain objects can be passed to Server Functions from the Client. ' +\n                 'Objects with symbol properties like %s are not supported.%s',\n               symbols[0].description,\n               describeObjectForErrorMessage(parent, key),",
        "date": "2023-10-19T17:40:24Z",
        "msg": "[Flight Reply] Update error message (#27549)\n\nThis is in the reverse direction."
    },
    {
        "diff": "diff --git a/packages/react-server/src/forks/ReactServerStreamConfig.dom-fb.js b/a/packages/react-server/src/forks/ReactServerStreamConfig.dom-fb.js @@ -7,4 +7,4 @@\n  * @flow\n  */\n \n-export * from '../../../react-server-dom-fb/src/ReactServerStreamConfigFB';\n+export * from '../ReactServerStreamConfigFB';",
        "date": "2023-10-19T16:35:41Z",
        "msg": "[meta-only] Move ReactServerStreamConfigFB to `react-server` from `react-server-dom-fb` (#27544)\n\nCode organization PR.\r\n\r\nIt looks like the `ReactServerStreamConfigFB` is only used in the\r\n`relay-server` package. This PR moves it to `react-server` from\r\n`react-server-dom-fb` (similar to how we have config for bun, for\r\nexample). This avoids cross-package imports from `react-server` to\r\n`react-server-dom-fb.`"
    },
    {
        "diff": "diff --git a/packages/react-dom/src/__tests__/ReactDOMFizzServerBrowser-test.js b/a/packages/react-dom/src/__tests__/ReactDOMFizzServerBrowser-test.js @@ -15,15 +15,13 @@ global.ReadableStream =\n global.TextEncoder = require('util').TextEncoder;\n \n let React;\n-let ReactDOM;\n let ReactDOMFizzServer;\n let Suspense;\n \n describe('ReactDOMFizzServerBrowser', () => {\n   beforeEach(() => {\n     jest.resetModules();\n     React = require('react');\n-    ReactDOM = require('react-dom');\n     ReactDOMFizzServer = require('react-dom/server.browser');\n     Suspense = React.Suspense;\n   });\n@@ -549,37 +547,4 @@ describe('ReactDOMFizzServerBrowser', () => {\n     // However, it does error the shell.\n     expect(caughtError.message).toEqual('testing postpone');\n   });\n-\n-  // https://github.com/facebook/react/issues/27540\n-  // This test is not actually asserting much because in our test environment the Float method cannot find the request after\n-  // an await and thus is a noop. If we fix our test environment to support AsyncLocalStorage we can assert that the\n-  // stream does not write after closing.\n-  it('does not try to write to the stream after it has been closed', async () => {\n-    async function preloadLate() {\n-      await 1;\n-      ReactDOM.preconnect('foo');\n-    }\n-\n-    function Preload() {\n-      preloadLate();\n-      return null;\n-    }\n-\n-    function App() {\n-      return (\n-        <html>\n-          <body>\n-            <main>hello</main>\n-            <Preload />\n-          </body>\n-        </html>\n-      );\n-    }\n-    const stream = await ReactDOMFizzServer.renderToReadableStream(<App />);\n-    const result = await readResult(stream);\n-\n-    expect(result).toMatchInlineSnapshot(\n-      `\"<!DOCTYPE html><html><head></head><body><main>hello</main></body></html>\"`,\n-    );\n-  });\n });",
        "date": "2023-10-18T19:01:09Z",
        "msg": "[Fizz] Add proper assertion for stream fix (#27543)\n\nIn https://github.com/facebook/react/pull/27541 I added tests to assert\r\nthat the write after close bug was fixed. However the Node\r\nimplementation has an abort behavior preventing reproduction of the\r\noriginal issue and the Browser build does not use AsyncLocalStorage\r\nwhich also prevents reproduction. This change moves the Browser test to\r\na Edge runtime where AsyncLocalStorage is polyfilled. In this\r\nimplementation the test does correctly fail when the patch is removed."
    },
    {
        "diff": "diff --git a/scripts/flow/react-native-host-hooks.js b/a/scripts/flow/react-native-host-hooks.js @@ -134,7 +134,6 @@ declare module 'react-native/Libraries/ReactPrivate/ReactNativePrivateInterface'\n   declare export var ReactNativeViewConfigRegistry: {\n     customBubblingEventTypes: Object,\n     customDirectEventTypes: Object,\n-    eventTypes: Object,\n \n     register: (name: string, callback: __ViewConfigGetter) => string,\n     get: (name: string) => __ReactNativeBaseComponentViewConfig,",
        "date": "2023-10-13T09:33:55Z",
        "msg": "refactor: align ReactNativeViewConfigRegistry flow typing (#27514)\n\n<!--\r\n  Thanks for submitting a pull request!\r\nWe appreciate you spending the time to work on these changes. Please\r\nprovide enough information so that others can review your pull request.\r\nThe three fields below are mandatory.\r\n\r\nBefore submitting a pull request, please make sure the following is\r\ndone:\r\n\r\n1. Fork [the repository](https://github.com/facebook/react) and create\r\nyour branch from `main`.\r\n  2. Run `yarn` in the repository root.\r\n3. If you've fixed a bug or added code that should be tested, add tests!\r\n4. Ensure the test suite passes (`yarn test`). Tip: `yarn test --watch\r\nTestName` is helpful in development.\r\n5. Run `yarn test --prod` to test in the production environment. It\r\nsupports the same options as `yarn test`.\r\n6. If you need a debugger, run `yarn test --debug --watch TestName`,\r\nopen `chrome://inspect`, and press \"Inspect\".\r\n7. Format your code with\r\n[prettier](https://github.com/prettier/prettier) (`yarn prettier`).\r\n8. Make sure your code lints (`yarn lint`). Tip: `yarn linc` to only\r\ncheck changed files.\r\n  9. Run the [Flow](https://flowtype.org/) type checks (`yarn flow`).\r\n  10. If you haven't already, complete the CLA.\r\n\r\nLearn more about contributing:\r\nhttps://reactjs.org/docs/how-to-contribute.html\r\n-->\r\n\r\n## Summary\r\n\r\n<!--\r\nExplain the **motivation** for making this change. What existing problem\r\ndoes the pull request solve?\r\n-->\r\naligned the typing for `ReactNativeViewConfigRegistry` in\r\n`react-native-host-hooks.js`\r\ncontinuation of https://github.com/facebook/react/pull/27508\r\n\r\n## How did you test this change?\r\n\r\n<!--\r\nDemonstrate the code is solid. Example: The exact commands you ran and\r\ntheir output, screenshots / videos if the pull request changes the user\r\ninterface.\r\nHow exactly did you verify that your PR solves the issue you wanted to\r\nsolve?\r\n  If you leave this empty, your PR will very likely be closed.\r\n-->"
    },
    {
        "diff": "diff --git a/packages/react-dom/server-rendering-stub.js b/a/packages/react-dom/server-rendering-stub.js @@ -30,7 +30,10 @@ export {\n } from './src/server/ReactDOMServerRenderingStub';\n \n import type {FormStatus} from 'react-dom-bindings/src/shared/ReactDOMFormActions';\n-import {useFormStatus, useFormState} from './src/client/ReactDOM';\n+import {\n+  useFormStatus,\n+  useFormState,\n+} from './src/server/ReactDOMServerRenderingStub';\n \n export function experimental_useFormStatus(): FormStatus {\n   if (__DEV__) {",
        "date": "2023-10-05T16:14:57Z",
        "msg": "pull implementations from the right react-dom (#27471)\n\nshould have imported from the stub implementation. this blew up the\r\nserver rendering stub size (effectively pulling in the entire client\r\nbundle)"
    },
    {
        "diff": "diff --git a/packages/react-dom/server-rendering-stub.js b/a/packages/react-dom/server-rendering-stub.js @@ -28,3 +28,30 @@ export {\n   useFormState,\n   unstable_batchedUpdates,\n } from './src/server/ReactDOMServerRenderingStub';\n+\n+import type {FormStatus} from 'react-dom-bindings/src/shared/ReactDOMFormActions';\n+import {useFormStatus, useFormState} from './src/client/ReactDOM';\n+\n+export function experimental_useFormStatus(): FormStatus {\n+  if (__DEV__) {\n+    console.error(\n+      'useFormStatus is now in canary. Remove the experimental_ prefix. ' +\n+        'The prefixed alias will be removed in an upcoming release.',\n+    );\n+  }\n+  return useFormStatus();\n+}\n+\n+export function experimental_useFormState<S, P>(\n+  action: (S, P) => Promise<S>,\n+  initialState: S,\n+  permalink?: string,\n+): [S, (P) => void] {\n+  if (__DEV__) {\n+    console.error(\n+      'useFormState is now in canary. Remove the experimental_ prefix. ' +\n+        'The prefixed alias will be removed in an upcoming release.',\n+    );\n+  }\n+  return useFormState(action, initialState, permalink);\n+}",
        "date": "2023-10-05T15:53:14Z",
        "msg": "`react-dom/server-rendering-stub`: restore experimental prefix for `useFormState` and `useFormStatus` (#27470)\n\nin #27461 the experimental prefix was added back for `useFormState` and\r\n`useFormStatus` in react-dom. However these functions are also exported\r\nfrom the server rendering stub too and when using the stub with\r\nexperimental prefixes their absence causes unexpected errors.\r\n\r\nThis change adds back the experimental prefix for these two hooks to\r\nmatch the experimental build of react-dom."
    },
    {
        "diff": "diff --git a/.circleci/config.yml b/a/.circleci/config.yml @@ -53,6 +53,9 @@ commands:\n             if [ $? -ne 0 ]; then\n               yarn install --frozen-lockfile --cache-folder ~/.cache/yarn\n             fi\n+          environment:\n+          # If we start needing the Electron binary, please ensure the binary is cached in CI following https://www.electronjs.org/docs/latest/tutorial/installation\n+            ELECTRON_SKIP_BINARY_DOWNLOAD: 1\n       - save_cache:\n           name: Save yarn cache\n           key: v2-yarn_cache-{{ arch }}-{{ checksum \"yarn.lock\" }}",
        "date": "2023-10-05T09:37:08Z",
        "msg": "Reduce install network flake (#27464)\n\n## Summary\r\n\r\nAvoids potentially flaky network calls leading to failures such as\r\nhttps://app.circleci.com/pipelines/github/facebook/react/47096/workflows/b7966c1d-199c-4185-8d17-ac6485235c3a/jobs/727782.\r\nAlso makes install faster since we don't need the binary in CI\r\nseemingly.\r\n\r\nElectron itself is used to start the standalone binary.\r\n\r\n## How did you test this change?\r\n\r\n- [x] CI still passes without the binary downloaded. I'm just trusting\r\n[their\r\ndocs](https://www.electronjs.org/docs/latest/tutorial/installation) here\r\nthat setting this actually ensures the binary isn't downloaded."
    },
    {
        "diff": "diff --git a/scripts/flow/react-native-host-hooks.js b/a/scripts/flow/react-native-host-hooks.js @@ -230,33 +230,3 @@ declare var nativeFabricUIManager: {\n   unstable_getCurrentEventPriority: () => number,\n   ...\n };\n-\n-declare module 'View' {\n-  declare module.exports: typeof React$Component;\n-}\n-\n-declare module 'RTManager' {\n-  declare function createNode(\n-    tag: number,\n-    classType: string,\n-    props: ?Object,\n-  ): void;\n-\n-  declare function beginUpdates(): void;\n-\n-  declare function appendChildToContext(\n-    contextTag: number,\n-    childTag: number,\n-  ): void;\n-  declare function appendChild(parentTag: number, childTag: number): void;\n-  declare function prependChild(childTag: number, beforeTag: number): void;\n-  declare function deleteChild(childTag: number): void;\n-  declare function updateNode(tag: number, props: ?Object): void;\n-\n-  declare function completeUpdates(): void;\n-}\n-\n-// shims/ReactFeatureFlags is generated by the packaging script\n-declare module '../shims/ReactFeatureFlags' {\n-  declare export var debugRenderPhaseSideEffects: boolean;\n-}",
        "date": "2023-10-04T14:57:43Z",
        "msg": "Remove unreferenced react-native-host-hooks from flow (#27457)\n\n## Summary\r\n\r\nThese modules are no longer referenced in the React codebase. We should\r\nremove them to limit the API surface area between React and React\r\nNative.\r\n\r\n## How did you test this change?\r\n\r\n`yarn flow native && yarn flow fabric`"
    },
    {
        "diff": "diff --git a/packages/react-server-dom-turbopack/src/__tests__/ReactFlightDOMBrowser-test.js b/a/packages/react-server-dom-turbopack/src/__tests__/ReactFlightDOMBrowser-test.js @@ -612,8 +612,22 @@ describe('ReactFlightDOMBrowser', () => {\n   });\n \n   it('basic use(context)', async () => {\n-    const ContextA = React.createServerContext('ContextA', '');\n-    const ContextB = React.createServerContext('ContextB', 'B');\n+    let ContextA;\n+    let ContextB;\n+    expect(() => {\n+      ContextA = React.createServerContext('ContextA', '');\n+      ContextB = React.createServerContext('ContextB', 'B');\n+    }).toErrorDev(\n+      [\n+        'Server Context is deprecated and will soon be removed. ' +\n+          'It was never documented and we have found it not to be useful ' +\n+          'enough to warrant the downside it imposes on all apps.',\n+        'Server Context is deprecated and will soon be removed. ' +\n+          'It was never documented and we have found it not to be useful ' +\n+          'enough to warrant the downside it imposes on all apps.',\n+      ],\n+      {withoutStack: true},\n+    );\n \n     function ServerComponent() {\n       return use(ContextA) + use(ContextB);",
        "date": "2023-09-28T16:21:11Z",
        "msg": "Test fix: Add missing warning assertion (#27434)\n\nAdds a missing test assertion for Server Context deprecation.\r\n\r\nThe PR that added this warning was based on an older revision than the\r\nPR that added the test."
    },
    {
        "diff": "diff --git a/ReactVersions.js b/a/ReactVersions.js @@ -35,6 +35,7 @@ const stablePackages = {\n   'react-art': ReactVersion,\n   'react-dom': ReactVersion,\n   'react-server-dom-webpack': ReactVersion,\n+  'react-server-dom-turbopack': ReactVersion,\n   'react-is': ReactVersion,\n   'react-reconciler': '0.30.0',\n   'react-refresh': '0.15.0',",
        "date": "2023-09-28T16:13:49Z",
        "msg": "Restore \"publish `react-server-dom-turbopack` to canary channels (#27427)\" (#27433)\n\nReverts facebook/react#27428 which restores facebook/react#27427\r\n\r\nthis will allow the publish script to publish\r\n`react-server-dom-turbopack`"
    },
    {
        "diff": "diff --git a/ReactVersions.js b/a/ReactVersions.js @@ -35,7 +35,6 @@ const stablePackages = {\n   'react-art': ReactVersion,\n   'react-dom': ReactVersion,\n   'react-server-dom-webpack': ReactVersion,\n-  'react-server-dom-turbopack': ReactVersion,\n   'react-is': ReactVersion,\n   'react-reconciler': '0.30.0',\n   'react-refresh': '0.15.0',",
        "date": "2023-09-27T23:17:45Z",
        "msg": "Revert \"publish `react-server-dom-turbopack` to canary channels (#27427) (#27428)\n\nBuild fails because the package does not exist. I've added the package\r\nto npm but we need the publishing account to be a collaborator. I'm\r\nreverting until we get that sorted so we don't block canaries"
    },
    {
        "diff": "diff --git a/ReactVersions.js b/a/ReactVersions.js @@ -35,6 +35,7 @@ const stablePackages = {\n   'react-art': ReactVersion,\n   'react-dom': ReactVersion,\n   'react-server-dom-webpack': ReactVersion,\n+  'react-server-dom-turbopack': ReactVersion,\n   'react-is': ReactVersion,\n   'react-reconciler': '0.30.0',\n   'react-refresh': '0.15.0',",
        "date": "2023-09-27T17:39:04Z",
        "msg": "publish `react-server-dom-turbopack` to canary channels (#27427)\n\nWhen I added react-server-dom-turbopack I failed to mark the package as\r\nstable so it did not get published with the canary release. This adds\r\nthe package to the stable set so it will be published correctly"
    },
    {
        "diff": "diff --git a/packages/react-devtools-shared/src/backend/renderer.js b/a/packages/react-devtools-shared/src/backend/renderer.js @@ -1419,22 +1419,20 @@ export function attach(\n \n     const boundHasOwnProperty = hasOwnProperty.bind(queue);\n \n-    // Detect the shape of useState() or useReducer()\n+    // Detect the shape of useState() / useReducer() / useTransition()\n     // using the attributes that are unique to these hooks\n     // but also stable (e.g. not tied to current Lanes implementation)\n-    const isStateOrReducer =\n-      boundHasOwnProperty('pending') &&\n-      boundHasOwnProperty('dispatch') &&\n-      typeof queue.dispatch === 'function';\n+    // We don't check for dispatch property, because useTransition doesn't have it\n+    if (boundHasOwnProperty('pending')) {\n+      return true;\n+    }\n \n     // Detect useSyncExternalStore()\n-    const isSyncExternalStore =\n+    return (\n       boundHasOwnProperty('value') &&\n       boundHasOwnProperty('getSnapshot') &&\n-      typeof queue.getSnapshot === 'function';\n-\n-    // These are the only types of hooks that can schedule an update.\n-    return isStateOrReducer || isSyncExternalStore;\n+      typeof queue.getSnapshot === 'function'\n+    );\n   }\n \n   function didStatefulHookChange(prev: any, next: any): boolean {",
        "date": "2023-09-21T20:26:20Z",
        "msg": "fix[devtools/useTransition]: don't check for dispatch property when determining if hook is stateful (#27365)\n\nhttps://github.com/facebook/react/pull/26740 introduced regression:\r\nReact DevTools doesn't record updates for `useTransition` hook. I can\r\nadd more details about things on DevTools side, if needed.\r\n\r\nThe root cause is\r\nhttps://github.com/facebook/react/blob/491aec5d6113ce5bae7c10966bc38a4a8fc091a8/packages/react-reconciler/src/ReactFiberHooks.js#L2728-L2730\r\n\r\nReact DevTools expects dispatch to be present for stateful hooks that\r\ncan schedule an update -\r\nhttps://github.com/facebook/react/blob/2eed1328478e8c923fcb4e6abf5efbd9e1233402/packages/react-devtools-shared/src/backend/renderer.js#L1422-L1428\r\n\r\nWith these changes, we still call dispatch in `startTransition`, but\r\nalso patch `queue` object with it, so that React DevTools can recognise\r\n`useTransition` as stateful hook that can schedule update.\r\n\r\nI am not sure if this is the right approach to fix this, can we\r\ndistinguish if `startTransition` was called from `useTransition` hook or\r\nas a standalone function?"
    },
    {
        "diff": "diff --git a/packages/react-devtools-shared/src/devtools/views/Settings/ComponentsSettings.js b/a/packages/react-devtools-shared/src/devtools/views/Settings/ComponentsSettings.js @@ -218,6 +218,10 @@ export default function ComponentsSettings(_: {}): React.Node {\n     });\n   }, []);\n \n+  const removeAllFilter = () => {\n+    setComponentFilters([]);\n+  };\n+\n   const toggleFilterIsEnabled = useCallback(\n     (componentFilter: ComponentFilter, isEnabled: boolean) => {\n       setComponentFilters(prevComponentFilters => {\n@@ -434,11 +438,16 @@ export default function ComponentsSettings(_: {}): React.Node {\n           ))}\n         </tbody>\n       </table>\n-\n-      <Button onClick={addFilter}>\n+      <Button onClick={addFilter} title=\"Add filter\">\n         <ButtonIcon className={styles.ButtonIcon} type=\"add\" />\n         Add filter\n       </Button>\n+      {componentFilters.length > 0 && (\n+        <Button onClick={removeAllFilter} title=\"Delete all filters\">\n+          <ButtonIcon className={styles.ButtonIcon} type=\"delete\" />\n+          Delete all filters\n+        </Button>\n+      )}\n     </div>\n   );\n }",
        "date": "2023-09-20T09:26:44Z",
        "msg": "feat:-Added a delete all filters action and added title to the add filter a\u2026 (#27332)\n\n### changes\r\n\r\n1. A small action added to delete all filters, it can be useful to\r\ndelete when someone has a bunch of them rather than clicking on them\r\nselectively.\r\n\r\n2.There was no title on the `add filter` button so added the same\r\n\r\n\r\nhttps://github.com/facebook/react/assets/72331432/af6c0725-05b6-4f46-b8c9-8079bd933a8e\r\n\r\n\r\n\r\nreview @hoxyq\r\n\r\n---------\r\n\r\nCo-authored-by: BIKI DAS <bikidas@BIKIs-MacBook-Pro.local>\r\nCo-authored-by: Ruslan Lesiutin <rdlesyutin@gmail.com>"
    },
    {
        "diff": "diff --git a/packages/react-server/src/ReactFizzServer.js b/a/packages/react-server/src/ReactFizzServer.js @@ -3778,9 +3778,6 @@ function flushCompletedQueues(\n         // We haven't flushed the root yet so we don't need to check any other branches further down\n         return;\n       }\n-    } else if (request.pendingRootTasks > 0) {\n-      // We have not yet flushed the root segment so we early return\n-      return;\n     }\n \n     if (enableFloat) {",
        "date": "2023-09-18T15:25:21Z",
        "msg": "[Fizz] Don't bail out of flushing if we still have pending root tasks (#27385)\n\nThe idea for this check is that we shouldn't flush anything before we\r\nflush the shell. That may or may not hold true in future formats like\r\nRN.\r\n\r\nIt is a problem for resuming because with resuming it's possible to have\r\nroot tasks that are used for resuming but the shell was already flushed\r\nso we can have completed boundaries before the shell has fully resumed.\r\nWhat matters is whether the parent has already flushed or not.\r\n\r\nIt's not technically necessary to bail early because there won't be\r\nanything in partialBoundaries or completedBoundaries because nothing\r\ngets added there unless the parent has already flushed.\r\n\r\nIt's not exactly slow to have to check the length of three arrays so\r\nit's probably not a big deal.\r\n\r\nFlush partials in an early preamble needs further consideration\r\nregardless."
    },
    {
        "diff": "diff --git a/packages/react-devtools-extensions/src/background/dynamicallyInjectContentScripts.js b/a/packages/react-devtools-extensions/src/background/dynamicallyInjectContentScripts.js @@ -11,7 +11,7 @@ const contentScriptsToInject = IS_FIREFOX\n         js: ['build/proxy.js'],\n         matches: ['<all_urls>'],\n         persistAcrossSessions: true,\n-        runAt: 'document_idle',\n+        runAt: 'document_end',\n       },\n     ]\n   : [\n@@ -43,26 +43,19 @@ const contentScriptsToInject = IS_FIREFOX\n \n async function dynamicallyInjectContentScripts() {\n   try {\n-    const alreadyRegisteredContentScripts =\n-      await chrome.scripting.getRegisteredContentScripts();\n-\n-    const scriptsToInjectNow = contentScriptsToInject.filter(\n-      scriptToInject =>\n-        !alreadyRegisteredContentScripts.some(\n-          registeredScript => registeredScript.id === scriptToInject.id,\n-        ),\n-    );\n+    // Using this, instead of filtering registered scrips with `chrome.scripting.getRegisteredScripts`\n+    // because of https://bugs.chromium.org/p/chromium/issues/detail?id=1393762\n+    // This fixes registering proxy content script in incognito mode\n+    await chrome.scripting.unregisterContentScripts();\n \n-    if (scriptsToInjectNow.length) {\n-      // equivalent logic for Firefox is in prepareInjection.js\n-      // Manifest V3 method of injecting content script\n-      // TODO(hoxyq): migrate Firefox to V3 manifests\n-      // Note: the \"world\" option in registerContentScripts is only available in Chrome v102+\n-      // It's critical since it allows us to directly run scripts on the \"main\" world on the page\n-      // \"document_start\" allows it to run before the page's scripts\n-      // so the hook can be detected by react reconciler\n-      await chrome.scripting.registerContentScripts(scriptsToInjectNow);\n-    }\n+    // equivalent logic for Firefox is in prepareInjection.js\n+    // Manifest V3 method of injecting content script\n+    // TODO(hoxyq): migrate Firefox to V3 manifests\n+    // Note: the \"world\" option in registerContentScripts is only available in Chrome v102+\n+    // It's critical since it allows us to directly run scripts on the \"main\" world on the page\n+    // \"document_start\" allows it to run before the page's scripts\n+    // so the hook can be detected by react reconciler\n+    await chrome.scripting.registerContentScripts(contentScriptsToInject);\n   } catch (error) {\n     console.error(error);\n   }",
        "date": "2023-09-14T14:21:28Z",
        "msg": "fix[devtools/extension]: unregister dynamically injected content scripts instead of filtering (#27369)\n\nSame as https://github.com/facebook/react/pull/26765.\r\nRelated bug report -\r\nhttps://bugs.chromium.org/p/chromium/issues/detail?id=1393762.\r\n\r\nThis was changed in https://github.com/facebook/react/pull/27215, when I\r\nhave refactored background logic in the extension. I've missed this\r\ncase, because the extension was working in incognito mode.\r\n\r\nTurns out, it stops working after the first reload, and it stops only in\r\nincognito mode, so I am rolling out back the previous workaround.\r\n\r\nTested on Chrome that it fixes the extension in incognito mode and that\r\nit doesn't affect default mode."
    },
    {
        "diff": "diff --git a/packages/react-server/src/ReactFizzServer.js b/a/packages/react-server/src/ReactFizzServer.js @@ -578,6 +578,7 @@ function createTask(\n     context,\n     treeContext,\n     thenableState,\n+    childIndex: -1,\n   }: any);\n   if (__DEV__) {\n     task.componentStack = null;",
        "date": "2023-09-13T02:17:03Z",
        "msg": "Fix: Initialize childIndex in Task constructor (#27367)\n\nThis field was not being initialized. Although the property is part of\r\nthe Flow type, the type error wasn't caught because the constructor\r\nitself is not covered by Flow, which is unfortunate. (I assume this is\r\nrelated to the dev-only componentStack property.)"
    },
    {
        "diff": "diff --git a/packages/react-devtools-extensions/popups/shared.css b/a/packages/react-devtools-extensions/popups/shared.css @@ -4,4 +4,10 @@ html, body {\n \n body {\n   margin: 8px;\n-}\n\\ No newline at end of file\n+}\n+\n+@media (prefers-color-scheme: dark) {\n+  html {\n+    color-scheme: dark;\n+  }\n+}",
        "date": "2023-09-11T13:02:54Z",
        "msg": "feat[devtools/extension]: add dark theme for popup (#27330)\n\n## Summary\r\n\r\nIf the system/browser uses a dark theme, then the extension popup still\r\nremains with a light background. And so that the eyes do not hurt in a\r\ndark room, you need a dark theme.\r\n\r\n## How did you test this change?\r\n\r\nMake sure the dark theme is enabled on your system/browser.\r\n\r\n**Before:**\r\n\r\n![Screenshot 2023-09-02 at 22 20\r\n56](https://github.com/facebook/react/assets/19418601/f7166ea7-f562-4d11-8851-be08fa9629a7)\r\n\r\n**After:**\r\n\r\n![Screenshot 2023-09-02 at 22 21\r\n30](https://github.com/facebook/react/assets/19418601/e51ecd5f-3e71-4193-83ff-a548bce76bd4)"
    },
    {
        "diff": "diff --git a/packages/react-devtools-extensions/src/main/index.js b/a/packages/react-devtools-extensions/src/main/index.js @@ -340,16 +340,24 @@ function ensureInitialHTMLIsCleared(container) {\n \n function createComponentsPanel() {\n   if (componentsPortalContainer) {\n+    // Panel is created and user opened it at least once\n     render('components');\n \n     return;\n   }\n \n+  if (componentsPanel) {\n+    // Panel is created, but wasn't opened yet, so no document is present for it\n+    return;\n+  }\n+\n   chrome.devtools.panels.create(\n     IS_CHROME || IS_EDGE ? '\u269b\ufe0f Components' : 'Components',\n     IS_EDGE ? 'icons/production.svg' : '',\n     'panel.html',\n     createdPanel => {\n+      componentsPanel = createdPanel;\n+\n       createdPanel.onShown.addListener(portal => {\n         componentsPortalContainer = portal.container;\n         if (componentsPortalContainer != null) {\n@@ -370,16 +378,24 @@ function createComponentsPanel() {\n \n function createProfilerPanel() {\n   if (profilerPortalContainer) {\n+    // Panel is created and user opened it at least once\n     render('profiler');\n \n     return;\n   }\n \n+  if (profilerPanel) {\n+    // Panel is created, but wasn't opened yet, so no document is present for it\n+    return;\n+  }\n+\n   chrome.devtools.panels.create(\n     IS_CHROME || IS_EDGE ? '\u269b\ufe0f Profiler' : 'Profiler',\n     IS_EDGE ? 'icons/production.svg' : '',\n     'panel.html',\n     createdPanel => {\n+      profilerPanel = createdPanel;\n+\n       createdPanel.onShown.addListener(portal => {\n         profilerPortalContainer = portal.container;\n         if (profilerPortalContainer != null) {\n@@ -510,6 +526,8 @@ let store = null;\n \n let profilingData = null;\n \n+let componentsPanel = null;\n+let profilerPanel = null;\n let componentsPortalContainer = null;\n let profilerPortalContainer = null;\n ",
        "date": "2023-08-31T17:24:26Z",
        "msg": "fix[devtools/extension]: fixed duplicating panels in firefox (#27320)\n\nMultiple `chrome.panels.create` calls result into having duplicate\r\npanels created in Firefox, these changes fix that.\r\n\r\nNow calling `chrome.panels.create` only if there are no panels created\r\nyet."
    },
    {
        "diff": "diff --git a/packages/react-devtools-extensions/webpack.config.js b/a/packages/react-devtools-extensions/webpack.config.js @@ -2,6 +2,7 @@\n \n const {resolve} = require('path');\n const Webpack = require('webpack');\n+const TerserPlugin = require('terser-webpack-plugin');\n const {\n   DARK_MODE_DIMMED_WARNING_COLOR,\n   DARK_MODE_DIMMED_ERROR_COLOR,\n@@ -84,7 +85,21 @@ module.exports = {\n     },\n   },\n   optimization: {\n-    minimize: false,\n+    minimize: !__DEV__,\n+    minimizer: [\n+      new TerserPlugin({\n+        terserOptions: {\n+          compress: false,\n+          mangle: {\n+            keep_fnames: true,\n+          },\n+          format: {\n+            comments: false,\n+          },\n+        },\n+        extractComments: false,\n+      }),\n+    ],\n   },\n   plugins: [\n     new Webpack.ProvidePlugin({",
        "date": "2023-08-29T11:09:13Z",
        "msg": "refactor[devtools/extension]: minify production builds to strip comments (#27304)\n\nCurrently, we are unable to publish a release to Firefox extensions\r\nstore, due to `parseHookNames` chunk size, which is ~5mb.\r\n\r\nWe were not minifying production builds on purpose, to have more\r\ndescriptive error messages. Now, Terser plugin will only:\r\n- remove comments\r\n- mangle, but keeping function names (for understandable bug reports)"
    },
    {
        "diff": "diff --git a/scripts/jest/config.base.js b/a/scripts/jest/config.base.js @@ -2,9 +2,6 @@\n \n module.exports = {\n   globalSetup: require.resolve('./setupGlobal.js'),\n-  haste: {\n-    hasteImplModulePath: require.resolve('./noHaste.js'),\n-  },\n   modulePathIgnorePatterns: [\n     '<rootDir>/scripts/rollup/shims/',\n     '<rootDir>/scripts/bench/',",
        "date": "2023-08-22T14:12:28Z",
        "msg": "Jest: remove haste config (#27257)\n\nSince we're not using haste at all, we can just remove the config to\r\ndisable haste instead of enabling, just to inject an implementation that\r\nblocks any haste modules from being recognized.\r\n\r\nTest Plan:\r\nCreating a module and required it to get the expected error that the\r\nmodule doesn't exist."
    },
    {
        "diff": "diff --git a/packages/react-dom/src/__tests__/ReactDOMFloat-test.js b/a/packages/react-dom/src/__tests__/ReactDOMFloat-test.js @@ -3385,6 +3385,93 @@ body {\n     );\n   });\n \n+  // @gate FIXME\n+  it('loading a stylesheet as part of an error boundary UI, during initial render', async () => {\n+    class ErrorBoundary extends React.Component {\n+      state = {error: null};\n+      static getDerivedStateFromError(error) {\n+        return {error};\n+      }\n+      render() {\n+        const error = this.state.error;\n+        if (error !== null) {\n+          return (\n+            <>\n+              <link rel=\"stylesheet\" href=\"A\" precedence=\"default\" />\n+              {error.message}\n+            </>\n+          );\n+        }\n+        return this.props.children;\n+      }\n+    }\n+\n+    function Throws() {\n+      throw new Error('Oops!');\n+    }\n+\n+    function App() {\n+      return (\n+        <html>\n+          <body>\n+            <ErrorBoundary>\n+              <Suspense fallback=\"Loading...\">\n+                <Throws />\n+              </Suspense>\n+            </ErrorBoundary>\n+          </body>\n+        </html>\n+      );\n+    }\n+\n+    // Initial server render. Because something threw, a Suspense fallback\n+    // is shown.\n+    await act(() => {\n+      renderToPipeableStream(<App />, {\n+        onError(x) {\n+          Scheduler.log('Caught server error: ' + x.message);\n+        },\n+      }).pipe(writable);\n+    });\n+    expect(getMeaningfulChildren(document)).toEqual(\n+      <html>\n+        <head />\n+        <body>Loading...</body>\n+      </html>,\n+    );\n+    assertLog(['Caught server error: Oops!']);\n+\n+    // Hydrate the tree. The error boundary will capture the error and attempt\n+    // to show an error screen. However, the error screen includes a stylesheet,\n+    // so the commit should suspend until the stylesheet loads.\n+    ReactDOMClient.hydrateRoot(document, <App />);\n+    await waitForAll([]);\n+\n+    // A preload for the stylesheet is inserted, but we still haven't committed\n+    // the error screen.\n+    expect(getMeaningfulChildren(document)).toEqual(\n+      <html>\n+        <head>\n+          <link as=\"style\" href=\"A\" rel=\"preload\" />\n+        </head>\n+        <body>Loading...</body>\n+      </html>,\n+    );\n+\n+    // Finish loading the stylesheets. The commit should be unblocked, and the\n+    // error screen should appear.\n+    await clientAct(() => loadStylesheets());\n+    expect(getMeaningfulChildren(document)).toEqual(\n+      <html>\n+        <head>\n+          <link data-precedence=\"default\" href=\"A\" rel=\"stylesheet\" />\n+          <link as=\"style\" href=\"A\" rel=\"preload\" />\n+        </head>\n+        <body>Oops!</body>\n+      </html>,\n+    );\n+  });\n+\n   it('will not flush a preload for a new rendered Stylesheet Resource if one was already flushed', async () => {\n     function Component() {\n       ReactDOM.preload('foo', {as: 'style'});",
        "date": "2023-08-21T23:14:56Z",
        "msg": "Regression test: Stylesheet suspends indefinitely when part of error boundary UI during initial hydration (#27258)\n\nAdds a failing test for a case discovered by Next.js. An error boundary\r\nis triggered during initial hydration, and the error fallback includes a\r\nstylesheet. If the stylesheet has not yet been loaded, the commit\r\nsuspends, but never resolves even after the stylesheet finishes loading.\r\n\r\nTriggering this bug depends on several very specific code paths being\r\ntriggered simultaneously. There are a few ways we could fix the bug;\r\nI'll submit as one or more separate PRs to show that each one is\r\nsufficient."
    },
    {
        "diff": "diff --git a/packages/react-dom-bindings/src/client/ReactFiberConfigDOM.js b/a/packages/react-dom-bindings/src/client/ReactFiberConfigDOM.js @@ -2872,7 +2872,7 @@ function adoptPreloadPropsForScript(\n   if (scriptProps.referrerPolicy == null)\n     scriptProps.referrerPolicy = preloadProps.referrerPolicy;\n   if (scriptProps.integrity == null)\n-    scriptProps.referrerPolicy = preloadProps.integrity;\n+    scriptProps.integrity = preloadProps.integrity;\n }\n \n type KeyedTagCache = Map<string, Array<Element>>;",
        "date": "2023-08-14T17:10:24Z",
        "msg": "Float integrity bugfix (#27224)\n\nStacked on #27223\r\n\r\nWhen a script resource adopts certain props from a preload for that\r\nresource the integrity prop was incorrectly getting assinged to the\r\nreferrerPolicy prop instead. This is now fixed."
    },
    {
        "diff": "diff --git a/packages/react-dom-bindings/src/server/ReactFizzConfigDOM.js b/a/packages/react-dom-bindings/src/server/ReactFizzConfigDOM.js @@ -5014,7 +5014,7 @@ function getResourceKey(as: string, href: string): string {\n   return `[${as}]${href}`;\n }\n \n-export function prefetchDNS(href: string, options?: ?PrefetchDNSOptions) {\n+function prefetchDNS(href: string, options?: ?PrefetchDNSOptions) {\n   if (!enableFloat) {\n     return;\n   }\n@@ -5073,7 +5073,7 @@ export function prefetchDNS(href: string, options?: ?PrefetchDNSOptions) {\n   }\n }\n \n-export function preconnect(href: string, options?: ?PreconnectOptions) {\n+function preconnect(href: string, options?: ?PreconnectOptions) {\n   if (!enableFloat) {\n     return;\n   }\n@@ -5136,7 +5136,7 @@ export function preconnect(href: string, options?: ?PreconnectOptions) {\n   }\n }\n \n-export function preload(href: string, options: PreloadOptions) {\n+function preload(href: string, options: PreloadOptions) {\n   if (!enableFloat) {\n     return;\n   }",
        "date": "2023-08-14T17:06:46Z",
        "msg": "Should not export functions that are not imported (#27222)\n\nThese functions are not imported anywhere and should have not been\r\nexported to begin with"
    },
    {
        "diff": "diff --git a/packages/react-dom-bindings/src/server/ReactFizzConfigDOM.js b/a/packages/react-dom-bindings/src/server/ReactFizzConfigDOM.js @@ -3245,7 +3245,9 @@ export function pushStartInstance(\n       return pushStartPreformattedElement(target, props, type);\n     }\n     case 'img': {\n-      return pushImg(target, props, resources);\n+      return enableFloat\n+        ? pushImg(target, props, resources)\n+        : pushSelfClosing(target, props, type);\n     }\n     // Omitted close tags\n     case 'base':",
        "date": "2023-08-10T23:42:40Z",
        "msg": "Forgot to gate pushImg (#27212)\n\n`pushImg` should have been gated by enableFloat\r\n\r\nAdded in #27191"
    },
    {
        "diff": "diff --git a/README.md b/a/README.md @@ -6,7 +6,7 @@ React is a JavaScript library for building user interfaces.\n * **Component-Based:** Build encapsulated components that manage their own state, then compose them to make complex UIs. Since component logic is written in JavaScript instead of templates, you can easily pass rich data through your app and keep the state out of the DOM.\n * **Learn Once, Write Anywhere:** We don't make assumptions about the rest of your technology stack, so you can develop new features in React without rewriting existing code. React can also render on the server using Node and power mobile apps using [React Native](https://reactnative.dev/).\n \n-[Learn how to use React in your project](https://reactjs.org/docs/getting-started.html).\n+[Learn how to use React in your project](https://react.dev/learn).\n \n ## Installation\n \n@@ -20,9 +20,9 @@ You can use React as a `<script>` tag from a [CDN](https://reactjs.org/docs/cdn-\n \n ## Documentation\n \n-You can find the React documentation [on the website](https://reactjs.org/).  \n+You can find the React documentation [on the website](https://react.dev/).  \n \n-Check out the [Getting Started](https://reactjs.org/docs/getting-started.html) page for a quick overview.\n+Check out the [Getting Started](https://react.dev/learn) page for a quick overview.\n \n The documentation is divided into several sections:\n ",
        "date": "2023-08-09T17:21:43Z",
        "msg": "Update README.md (#27209)\n\nUpdate links from the old documentation to the new version\r\n\r\n<!--\r\n  Thanks for submitting a pull request!\r\nWe appreciate you spending the time to work on these changes. Please\r\nprovide enough information so that others can review your pull request.\r\nThe three fields below are mandatory.\r\n\r\nBefore submitting a pull request, please make sure the following is\r\ndone:\r\n\r\n1. Fork [the repository](https://github.com/facebook/react) and create\r\nyour branch from `main`.\r\n  2. Run `yarn` in the repository root.\r\n3. If you've fixed a bug or added code that should be tested, add tests!\r\n4. Ensure the test suite passes (`yarn test`). Tip: `yarn test --watch\r\nTestName` is helpful in development.\r\n5. Run `yarn test --prod` to test in the production environment. It\r\nsupports the same options as `yarn test`.\r\n6. If you need a debugger, run `yarn test --debug --watch TestName`,\r\nopen `chrome://inspect`, and press \"Inspect\".\r\n7. Format your code with\r\n[prettier](https://github.com/prettier/prettier) (`yarn prettier`).\r\n8. Make sure your code lints (`yarn lint`). Tip: `yarn linc` to only\r\ncheck changed files.\r\n  9. Run the [Flow](https://flowtype.org/) type checks (`yarn flow`).\r\n  10. If you haven't already, complete the CLA.\r\n\r\nLearn more about contributing:\r\nhttps://reactjs.org/docs/how-to-contribute.html\r\n-->\r\n\r\n## Summary\r\nI changed the links to get started with react from the old documentation\r\nthat is no longer being updated to the new one\r\n<!--\r\nExplain the **motivation** for making this change. What existing problem\r\ndoes the pull request solve?\r\n-->\r\n\r\n## How did you test this change?\r\n\r\n<!--\r\nDemonstrate the code is solid. Example: The exact commands you ran and\r\ntheir output, screenshots / videos if the pull request changes the user\r\ninterface.\r\nHow exactly did you verify that your PR solves the issue you wanted to\r\nsolve?\r\n  If you leave this empty, your PR will very likely be closed.\r\n-->"
    },
    {
        "diff": "diff --git a/packages/react-dom-bindings/src/server/ReactFizzConfigDOM.js b/a/packages/react-dom-bindings/src/server/ReactFizzConfigDOM.js @@ -1920,6 +1920,9 @@ function pushMeta(\n \n       if (typeof props.charSet === 'string') {\n         return pushSelfClosing(responseState.charsetChunks, props, 'meta');\n+      } else if (props.name === 'viewport') {\n+        // \"viewport\" isn't related to preconnect but it has the right priority\n+        return pushSelfClosing(responseState.preconnectChunks, props, 'meta');\n       } else {\n         return pushSelfClosing(responseState.hoistableChunks, props, 'meta');\n       }",
        "date": "2023-08-07T22:22:48Z",
        "msg": "[Fizz][Float] emit viewport meta before preloads (#27201)\n\nFixes: #27200 \r\n\r\npreloads for images that appear before the viewport meta may be loaded\r\ntwice because the proper device image information is not used with the\r\npreload but is with the image itself. The viewport meta should be\r\nemitted earlier than all preloads to avoid this.\r\n\r\nthis change moves the queue for the viewport meta to preconnects which\r\nalready has the right priority for this tag"
    },
    {
        "diff": "diff --git a/packages/scheduler/src/forks/Scheduler.js b/a/packages/scheduler/src/forks/Scheduler.js @@ -152,7 +152,7 @@ function handleTimeout(currentTime: number) {\n   if (!isHostCallbackScheduled) {\n     if (peek(taskQueue) !== null) {\n       isHostCallbackScheduled = true;\n-      requestHostCallback(flushWork);\n+      requestHostCallback();\n     } else {\n       const firstTimer = peek(timerQueue);\n       if (firstTimer !== null) {\n@@ -419,7 +419,7 @@ function unstable_scheduleCallback(\n     // wait until the next time we yield.\n     if (!isHostCallbackScheduled && !isPerformingWork) {\n       isHostCallbackScheduled = true;\n-      requestHostCallback(flushWork);\n+      requestHostCallback();\n     }\n   }\n \n@@ -434,7 +434,7 @@ function unstable_continueExecution() {\n   isSchedulerPaused = false;\n   if (!isHostCallbackScheduled && !isPerformingWork) {\n     isHostCallbackScheduled = true;\n-    requestHostCallback(flushWork);\n+    requestHostCallback();\n   }\n }\n \n@@ -616,7 +616,7 @@ if (typeof localSetImmediate === 'function') {\n   };\n }\n \n-function requestHostCallback(callback: (initialTime: number) => boolean) {\n+function requestHostCallback() {\n   if (!isMessageLoopRunning) {\n     isMessageLoopRunning = true;\n     schedulePerformWorkUntilDeadline();",
        "date": "2023-07-20T14:30:30Z",
        "msg": "chore: remove unused argument from schedule requestHostCallback (#27133)\n\nNoticed this argument was left in the cleanup from\r\nhttps://github.com/facebook/react/pull/27130\r\nIt seems to me like it would benefit from being cleaned up too."
    },
    {
        "diff": "diff --git a/packages/react-reconciler/src/ReactFiberWorkLoop.js b/a/packages/react-reconciler/src/ReactFiberWorkLoop.js @@ -90,6 +90,7 @@ import {\n   ConcurrentMode,\n   StrictLegacyMode,\n   StrictEffectsMode,\n+  NoStrictPassiveEffectsMode,\n } from './ReactTypeOfMode';\n import {\n   HostRoot,\n@@ -3538,11 +3539,19 @@ function recursivelyTraverseAndDoubleInvokeEffectsInDEV(\n }\n \n // Unconditionally disconnects and connects passive and layout effects.\n-function doubleInvokeEffectsOnFiber(root: FiberRoot, fiber: Fiber) {\n+function doubleInvokeEffectsOnFiber(\n+  root: FiberRoot,\n+  fiber: Fiber,\n+  shouldDoubleInvokePassiveEffects: boolean = true,\n+) {\n   disappearLayoutEffects(fiber);\n-  disconnectPassiveEffect(fiber);\n+  if (shouldDoubleInvokePassiveEffects) {\n+    disconnectPassiveEffect(fiber);\n+  }\n   reappearLayoutEffects(root, fiber.alternate, fiber, false);\n-  reconnectPassiveEffects(root, fiber, NoLanes, null, false);\n+  if (shouldDoubleInvokePassiveEffects) {\n+    reconnectPassiveEffects(root, fiber, NoLanes, null, false);\n+  }\n }\n \n function doubleInvokeEffectsInDEVIfNecessary(\n@@ -3559,7 +3568,11 @@ function doubleInvokeEffectsInDEVIfNecessary(\n     if (fiber.flags & PlacementDEV) {\n       setCurrentDebugFiberInDEV(fiber);\n       if (isInStrictMode) {\n-        doubleInvokeEffectsOnFiber(root, fiber);\n+        doubleInvokeEffectsOnFiber(\n+          root,\n+          fiber,\n+          (fiber.mode & NoStrictPassiveEffectsMode) === NoMode,\n+        );\n       }\n       resetCurrentDebugFiberInDEV();\n     } else {",
        "date": "2023-07-18T18:58:01Z",
        "msg": "Make temporary `NoStrictPassiveEffects` option work with `useModernStrictMode` (#27105)\n\n## Summary\r\nSince we are enabling `useModernStrictMode` flag internally, to make\r\nsure the internal testing of half StrictMode doesn't suddenly break,\r\nthis PR makes sure it also works with `useModernStrictMode` true.\r\n\r\n\r\n## Test plan:\r\nManually set `useModernStrictMode` to true.\r\n`yarn test ReactOffscreenStrictMode-test -r=www-modern --env=development\r\n--variant=true`\r\n`yarn test ReactStrictMode-test.internal -r=www-modern --env=development\r\n--variant=true`"
    },
    {
        "diff": "diff --git a/packages/shared/forks/ReactFeatureFlags.www.js b/a/packages/shared/forks/ReactFeatureFlags.www.js @@ -31,6 +31,7 @@ export const {\n   enableAsyncActions,\n   alwaysThrottleRetries,\n   enableDO_NOT_USE_disableStrictPassiveEffect,\n+  disableSchedulerTimeoutInWorkLoop,\n } = dynamicFeatureFlags;\n \n // On WWW, __EXPERIMENTAL__ is used for a new modern build.\n@@ -48,7 +49,6 @@ export const createRootStrictEffectsByDefault = false;\n export const enableSuspenseAvoidThisFallback = true;\n export const enableSuspenseAvoidThisFallbackFizz = false;\n \n-export const disableSchedulerTimeoutInWorkLoop = false;\n export const enableCPUSuspense = true;\n export const enableFloat = true;\n export const enableUseMemoCacheHook = true;",
        "date": "2023-07-17T19:44:45Z",
        "msg": "export dynamic disableSchedulerTimeoutInWorkLoop flag in www (#27117)\n\n## Summary\r\n\r\nThis was not exposed as a dynamic flag in the build for facebook www. By\r\nadding it, we'll be able to roll this out incrementally before cleaning\r\nup this code altogether.\r\n\r\n## How did you test this change?\r\n\r\n`yarn build`\r\n\r\nBefore changes, `disableSchedulerTimeoutInWorkLoop` flag is not included\r\nin ReactDOM-* build output for facebook www. Afterwards, it is included."
    },
    {
        "diff": "diff --git a/packages/react-devtools-shared/src/backend/renderer.js b/a/packages/react-devtools-shared/src/backend/renderer.js @@ -3280,7 +3280,7 @@ export function attach(\n     };\n \n     if (enableStyleXFeatures) {\n-      if (memoizedProps.hasOwnProperty('xstyle')) {\n+      if (memoizedProps != null && memoizedProps.hasOwnProperty('xstyle')) {\n         plugins.stylex = getStyleXData(memoizedProps.xstyle);\n       }\n     }",
        "date": "2023-07-13T13:13:19Z",
        "msg": "fix[devtools/inspect]: null check memoized props before trying to call hasOwnProperty (#27057)\n\nSimple check to avoid `TypeError`, quite rare case, but still."
    },
    {
        "diff": "diff --git a/packages/react-devtools-shared/src/__tests__/profilingCache-test.js b/a/packages/react-devtools-shared/src/__tests__/profilingCache-test.js @@ -938,11 +938,51 @@ describe('ProfilingCache', () => {\n     }\n   });\n \n-  // @reactVersion >= 17\n-  // @reactVersion < 18\n+  // @reactVersion >= 18.0.0\n+  // @reactVersion <= 18.2.0\n+  it('should handle unexpectedly shallow suspense trees for react v[18.0.0 - 18.2.0]', () => {\n+    const container = document.createElement('div');\n+\n+    utils.act(() => store.profilerStore.startProfiling());\n+    utils.act(() => legacyRender(<React.Suspense />, container));\n+    utils.act(() => store.profilerStore.stopProfiling());\n+\n+    const rootID = store.roots[0];\n+    const commitData = store.profilerStore.getDataForRoot(rootID).commitData;\n+    expect(commitData).toMatchInlineSnapshot(`\n+      [\n+        {\n+          \"changeDescriptions\": Map {},\n+          \"duration\": 0,\n+          \"effectDuration\": null,\n+          \"fiberActualDurations\": Map {\n+            1 => 0,\n+            2 => 0,\n+          },\n+          \"fiberSelfDurations\": Map {\n+            1 => 0,\n+            2 => 0,\n+          },\n+          \"passiveEffectDuration\": null,\n+          \"priorityLevel\": \"Immediate\",\n+          \"timestamp\": 0,\n+          \"updaters\": [\n+            {\n+              \"displayName\": \"render()\",\n+              \"hocDisplayNames\": null,\n+              \"id\": 1,\n+              \"key\": null,\n+              \"type\": 11,\n+            },\n+          ],\n+        },\n+      ]\n+    `);\n+  });\n+\n+  // This test is not gated.\n+  // For this test we use the current version of react, built from source.\n   it('should handle unexpectedly shallow suspense trees', () => {\n-    // This test only runs in v17 because it's a regression test for legacy\n-    // Suspense behavior, and the implementation details changed in v18.\n     const container = document.createElement('div');\n \n     utils.act(() => store.profilerStore.startProfiling());",
        "date": "2023-06-26T16:37:53Z",
        "msg": "fix[devtools/profilingCache-test]: specify correct version gate for test (#27008)\n\n- Correctly gate the test to `[18.0.0, 18.2.0]` versions of react, as it\r\nwas initially defined before\r\nhttps://github.com/facebook/react/pull/26742\r\n- I have recently fixed the gating logic in\r\nhttps://github.com/facebook/react/pull/26955 and\r\nhttps://github.com/facebook/react/pull/26997, should be stable now\r\n- I have added a non-gated version of this test, which should run only\r\nfor the current version of react, the one we build from sources\r\n- The test version for react `v[18.0.0, 18.2.0]` should expect\r\n`\"priorityLevel\": \"Immediate\"`, the other `\"priorityLevel\": \"Normal\"`,\r\nas it was changed in https://github.com/facebook/react/pull/26512"
    },
    {
        "diff": "diff --git a/packages/react-devtools-shared/src/devtools/views/Components/KeyValue.js b/a/packages/react-devtools-shared/src/devtools/views/Components/KeyValue.js @@ -255,6 +255,8 @@ export default function KeyValue({\n       displayValue = 'null';\n     } else if (value === undefined) {\n       displayValue = 'undefined';\n+    } else if (isNaN(value)) {\n+      displayValue = 'NaN';\n     }\n \n     let shouldDisplayValueAsLink = false;",
        "date": "2023-06-14T10:45:30Z",
        "msg": "fix[devtools]: display NaN as string in values (#26947)\n\n## Summary\r\n\r\n>Warning: Received NaN for the `children` attribute. If this is\r\nexpected, cast the value to a string.\r\n\r\nFixes this warning, when we try to display NaN as NaN in key-value list."
    },
    {
        "diff": "diff --git a/packages/react-devtools-shared/src/backend/views/Highlighter/index.js b/a/packages/react-devtools-shared/src/backend/views/Highlighter/index.js @@ -46,7 +46,7 @@ export default function setupHighlighter(\n       window.addEventListener('mouseover', onMouseEvent, true);\n       window.addEventListener('mouseup', onMouseEvent, true);\n       window.addEventListener('pointerdown', onPointerDown, true);\n-      window.addEventListener('pointerover', onPointerOver, true);\n+      window.addEventListener('pointermove', onPointerMove, true);\n       window.addEventListener('pointerup', onPointerUp, true);\n     } else {\n       agent.emit('startInspectingNative');\n@@ -74,7 +74,7 @@ export default function setupHighlighter(\n       window.removeEventListener('mouseover', onMouseEvent, true);\n       window.removeEventListener('mouseup', onMouseEvent, true);\n       window.removeEventListener('pointerdown', onPointerDown, true);\n-      window.removeEventListener('pointerover', onPointerOver, true);\n+      window.removeEventListener('pointermove', onPointerMove, true);\n       window.removeEventListener('pointerup', onPointerUp, true);\n     } else {\n       agent.emit('stopInspectingNative');\n@@ -151,14 +151,17 @@ export default function setupHighlighter(\n     event.preventDefault();\n     event.stopPropagation();\n \n-    selectFiberForNode(((event.target: any): HTMLElement));\n+    selectFiberForNode(getEventTarget(event));\n   }\n \n-  function onPointerOver(event: MouseEvent) {\n+  let lastHoveredNode: HTMLElement | null = null;\n+  function onPointerMove(event: MouseEvent) {\n     event.preventDefault();\n     event.stopPropagation();\n \n-    const target = ((event.target: any): HTMLElement);\n+    const target: HTMLElement = getEventTarget(event);\n+    if (lastHoveredNode === target) return;\n+    lastHoveredNode = target;\n \n     if (target.tagName === 'IFRAME') {\n       const iframe: HTMLIFrameElement = (target: any);\n@@ -197,4 +200,12 @@ export default function setupHighlighter(\n     // because those are usually unintentional as you lift the cursor.\n     {leading: false},\n   );\n+\n+  function getEventTarget(event: MouseEvent): HTMLElement {\n+    if (event.composed) {\n+      return (event.composedPath()[0]: any);\n+    }\n+\n+    return (event.target: any);\n+  }\n }",
        "date": "2023-06-07T15:38:38Z",
        "msg": "Fix:- Fixed dev tools inspect mode on Shadow dom (#26888)\n\nFixes #26200 \r\n\r\n### PR explanation\r\n\r\nI tried to induce the change by the `event.composed` to check whether\r\nthe event was created in a ShadowRoot, And replaced `pointerOver` with\r\n`pointerMove`, pointerOver event did not fired correctly\r\n\r\nBefore PR:-\r\n\r\n\r\nhttps://github.com/facebook/react/assets/72331432/67a33dcd-447f-4c68-9c3c-ad954baddeb8\r\n\r\nAfter PR:-\r\n\r\n\r\nhttps://github.com/facebook/react/assets/72331432/9f986ff2-785f-4cba-a504-44f82ea9fc5a\r\n\r\n---------\r\n\r\nCo-authored-by: Biki das <bikidas@Bikis-MacBook-Pro.local>"
    },
    {
        "diff": "diff --git a/packages/shared/forks/ReactFeatureFlags.www.js b/a/packages/shared/forks/ReactFeatureFlags.www.js @@ -105,8 +105,7 @@ export const enableUseMutableSource = true;\n export const useModernStrictMode = false;\n export const enableFizzExternalRuntime = true;\n \n-// This is only used in VARIANT tests, setting it to true does nothing.\n-export const enableSyncDefaultUpdates = false;\n+export const enableSyncDefaultUpdates = true;\n \n // Flow magic to verify the exports of this file match the original version.\n ((((null: any): ExportsType): FeatureFlagsType): ExportsType);",
        "date": "2023-05-26T01:33:07Z",
        "msg": "Update enableSyncDefaultUpdates for www (#26857)\n\nIf this is false, it dead code eliminates the path to use the root flag.\r\nWill follow up to clean this up."
    },
    {
        "diff": "diff --git a/.circleci/config.yml b/a/.circleci/config.yml @@ -151,32 +151,11 @@ jobs:\n       - setup_node_modules\n       - run:\n           name: Download artifacts for base revision\n-          # TODO: The download-experimental-build.js script works by fetching\n-          # artifacts from CI. CircleCI recently updated this endpoint to\n-          # require an auth token. This is a problem for PR branches, where\n-          # sizebot needs to run, because we don't want to leak the token to\n-          # arbitrary code written by an outside contributor.\n-          #\n-          # This only affects PR branches. CI workflows that run on the main\n-          # branch are allowed to access environment variables, because only those\n-          # with push access can land code in main.\n-          #\n-          # As a temporary workaround, we'll fetch the assets from a mirror.\n-          # Need to figure out a longer term solution for this.\n-          #\n-          # Original code\n-          #\n-          # command: |\n-          #     git fetch origin main\n-          #     cd ./scripts/release && yarn && cd ../../\n-          #     scripts/release/download-experimental-build.js --commit=$(git merge-base HEAD origin/main) --allowBrokenCI\n-          #     mv ./build ./base-build\n-          #\n-          # Workaround. Fetch the artifacts from react-builds.vercel.app. This\n-          # is the same app that hosts the sizebot diff previews.\n           command: |\n-            curl -L --retry 60 --retry-delay 10 --retry-max-time 600 https://react-builds.vercel.app/api/commits/$(git merge-base HEAD origin/main)/artifacts/build.tgz | tar -xz\n-              mv ./build ./base-build\n+            git fetch origin main\n+            cd ./scripts/release && yarn && cd ../../\n+            scripts/release/download-experimental-build.js --commit=$(git merge-base HEAD origin/main) --allowBrokenCI\n+            mv ./build ./base-build\n \n       - run:\n           # TODO: The `download-experimental-build` script copies the npm",
        "date": "2023-05-25T17:38:39Z",
        "msg": "Remove temporary CircleCI workaround (#26855)\n\nThere was a CircleCI bug that prevented the sizebot job from accessing\r\nthe artifacts API. I had added a temporary workaround to pull from a\r\nmirror instead. This seems to have been fixed, so I can remove the\r\nworkaround."
    },
    {
        "diff": "diff --git a/scripts/jest/setupTests.www.js b/a/scripts/jest/setupTests.www.js @@ -24,9 +24,18 @@ jest.mock('scheduler/src/SchedulerFeatureFlags', () => {\n       ),\n     {virtual: true}\n   );\n-  return jest.requireActual(\n+  const actual = jest.requireActual(\n     schedulerSrcPath + '/src/forks/SchedulerFeatureFlags.www'\n   );\n+\n+  // These flags are not a dynamic on www, but we still want to run\n+  // tests in both versions.\n+  actual.enableIsInputPending = __VARIANT__;\n+  actual.enableIsInputPendingContinuous = __VARIANT__;\n+  actual.enableProfiling = __VARIANT__;\n+  actual.enableSchedulerDebugging = __VARIANT__;\n+\n+  return actual;\n });\n \n global.__WWW__ = true;",
        "date": "2023-05-25T14:38:33Z",
        "msg": "run SchedulerFeatureFlags with variant flags again (#26851)\n\nWith df12d7eac40c87bd5fdde0aa5a739bce9e7dce27 I accidentally made it so\r\nthat tests aren't run with the 2 variant modes for most\r\nSchedulerFeatureFlags anymore. This fixes it with the same approach as\r\nee4233bdbc71a7e09395a613c7dde01194d2a830.\r\n\r\nTest Plan:\r\nRun and notice the boolean flags follow the variant:\r\n```\r\nyarn test-www --variant=true\r\nyarn test-www --variant=false\r\n```"
    },
    {
        "diff": "diff --git a/scripts/rollup/shims/react-native/ReactNativeViewConfigRegistry.js b/a/scripts/rollup/shims/react-native/ReactNativeViewConfigRegistry.js @@ -106,6 +106,7 @@ exports.get = function (name: string): ViewConfig {\n         'View config getter callback for component `%s` must be a function (received `%s`).%s',\n         name,\n         callback === null ? 'null' : typeof callback,\n+        // $FlowFixMe[recursive-definition]\n         typeof name[0] === 'string' && /[a-z]/.test(name[0])\n           ? ' Make sure to start component names with a capital letter.'\n           : '',",
        "date": "2023-05-24T16:42:16Z",
        "msg": "Add $FlowFixMe to fix React Native DiffTrain (#26841)"
    },
    {
        "diff": "diff --git a/packages/react/react.shared-subset.js b/a/packages/react/react.shared-subset.js @@ -1,5 +1,5 @@\n /**\n- * Copyright (c) Facebook, Inc. and its affiliates.\n+ * Copyright (c) Meta Platforms, Inc. and its affiliates.\n  *\n  * This source code is licensed under the MIT license found in the\n  * LICENSE file in the root directory of this source tree.",
        "date": "2023-05-20T00:51:44Z",
        "msg": "Updated Copyright comment from Facebook to Meta (#26833)\n\n## Summary\r\nChanged the comment in react/packages/react\r\n/react.shared-subset.js saying \r\n```\r\nCopyright (c) Facebook, Inc. and affiliates ..\r\n```\r\nTo \r\n```\r\nCopyright (c) Meta Platforms, Inc. and affiliates ..\r\n```\r\nas raised in the following issues:\r\nhttps://github.com/facebook/react/issues/26829\r\n\r\nFiles Changed: \r\nreact/packages/react/react.shared-subset.js\r\n\r\n## How did you test this change?\r\n\r\nTests Required: No"
    },
    {
        "diff": "diff --git a/packages/react-devtools-shared/src/devtools/views/Components/InspectedElement.js b/a/packages/react-devtools-shared/src/devtools/views/Components/InspectedElement.js @@ -237,7 +237,7 @@ export default function InspectedElementWrapper(_: Props): React.Node {\n     strictModeBadge = (\n       <a\n         className={styles.StrictModeNonCompliant}\n-        href=\"https://fb.me/devtools-strict-mode\"\n+        href=\"https://react.dev/reference/react/StrictMode\"\n         rel=\"noopener noreferrer\"\n         target=\"_blank\"\n         title=\"This component is not running in StrictMode. Click to learn more.\">",
        "date": "2023-05-17T12:34:34Z",
        "msg": "Fix strict mode badge URL (#26825)\n\n## Summary\r\nCloses https://github.com/facebook/react/issues/26821\r\n\r\n[[Fix #26821]](https://github.com/facebook/react/issues/26821) Update\r\nstrict mode badge URL\r\n\r\n\r\nUpdated the URL in the strict mode badge to point to the correct React\r\ndocumentation for StrictMode. The previous URL was outdated. Now, when a\r\ncomponent is not running in StrictMode, the badge links to\r\nhttps://react.dev/reference/react/StrictMode for more information.\r\n\r\n\r\n## How did you test this change?\r\n\r\nI verified that the strict mode badge now correctly links to the updated\r\nURL. Previously, it pointed to the outdated URL\r\n(https://fb.me/devtools-strict-mode). After the update, it correctly\r\npoints to the React Dev documentation for StrictMode\r\n(https://react.dev/reference/react/StrictMode).\r\n\r\n\r\n_Since its my first contribution here, i have completed the CLA_"
    },
    {
        "diff": "diff --git a/scripts/rollup/shims/react-native/ReactFabric.js b/a/scripts/rollup/shims/react-native/ReactFabric.js @@ -22,9 +22,9 @@ if (__DEV__) {\n   ReactFabric = require('../implementations/ReactFabric-prod');\n }\n \n-if (global.RN$Bridgeless) {\n-  global.RN$stopSurface = ReactFabric.stopSurface;\n-} else {\n+global.RN$stopSurface = ReactFabric.stopSurface;\n+\n+if (global.RN$Bridgeless !== true) {\n   BatchedBridge.registerCallableModule('ReactFabric', ReactFabric);\n }\n ",
        "date": "2023-05-12T15:14:45Z",
        "msg": "[react-native] Always set RN$stopSurface (#26808)\n\n## Summary\r\nTo support incremental adoption of bridgeless logic we want to default\r\nto using these globals whenever they're available.\r\n\r\n## How did you test this change?\r\nhttps://github.com/facebook/react-native/pull/37410"
    },
    {
        "diff": "diff --git a/.circleci/config.yml b/a/.circleci/config.yml @@ -646,7 +646,7 @@ workflows:\n           name: Publish to Canary channel\n           commit_sha: << pipeline.git.revision >>\n           release_channel: stable\n-          dist_tag: \"next\"\n+          dist_tag: \"canary,next\"\n       - publish_prerelease:\n           name: Publish to Experimental channel\n           requires:",
        "date": "2023-05-10T02:27:35Z",
        "msg": "Fix nightly job to publish to \"canary\" channel (#26799)\n\nWhen I was renaming the next channel to canary, I updated the\r\n`publish_preleases` workflow correctly, but I skipped over\r\n`publish_preleases_nightly`. Oops."
    },
    {
        "diff": "diff --git a/scripts/jest/jest-cli.js b/a/scripts/jest/jest-cli.js @@ -47,7 +47,7 @@ const argv = yargs\n       describe: 'Run with the given release channel.',\n       requiresArg: true,\n       type: 'string',\n-      default: 'www-modern',\n+      default: 'experimental',\n       choices: ['experimental', 'stable', 'www-classic', 'www-modern'],\n     },\n     env: {",
        "date": "2023-05-10T01:50:14Z",
        "msg": "Change `yarn test` to default to experimental (#26741)\n\nThe idea is that the default `yarn test` command should be the one that\r\nincludes the most bleeding edge features, because during development you\r\nprobably want as many features enabled as possible.\r\n\r\nThat used to be `www-modern` but nowadays it's `experimental` because\r\nwe've landed a bunch of async actions stuff in experimental but it isn't\r\nyet being tested at Meta.\r\n\r\nSo this switches the default to `experimental`."
    },
    {
        "diff": "diff --git a/scripts/release/publish-using-ci-workflow.js b/a/scripts/release/publish-using-ci-workflow.js @@ -9,7 +9,10 @@ const CIRCLE_TOKEN = process.env.CIRCLE_CI_API_TOKEN;\n \n if (!CIRCLE_TOKEN) {\n   console.error(\n-    theme.error('Missing required environment variable: CIRCLE_CI_API_TOKEN')\n+    theme.error(\n+      'Missing required environment variable: CIRCLE_CI_API_TOKEN\\n' +\n+        'Grab it here: https://app.circleci.com/settings/user/tokens'\n+    )\n   );\n   process.exit(1);\n }",
        "date": "2023-05-05T19:08:14Z",
        "msg": "[Release Script] Print a hint where to get the token (#26783)\n\nI always forget where to get it."
    },
    {
        "diff": "diff --git a/packages/react-server/src/ReactFizzServer.js b/a/packages/react-server/src/ReactFizzServer.js @@ -1603,8 +1603,11 @@ function spawnNewSuspendedTask(\n // This is a non-destructive form of rendering a node. If it suspends it spawns\n // a new task and restores the context of this task to what it was before.\n function renderNode(request: Request, task: Task, node: ReactNodeList): void {\n-  // TODO: Store segment.children.length here and reset it in case something\n+  // Store how much we've pushed at this point so we can reset it in case something\n   // suspended partially through writing something.\n+  const segment = task.blockedSegment;\n+  const childrenLength = segment.children.length;\n+  const chunkLength = segment.chunks.length;\n \n   // Snapshot the current context in case something throws to interrupt the\n   // process.\n@@ -1620,6 +1623,10 @@ function renderNode(request: Request, task: Task, node: ReactNodeList): void {\n   } catch (thrownValue) {\n     resetHooksState();\n \n+    // Reset the write pointers to where we started.\n+    segment.children.length = childrenLength;\n+    segment.chunks.length = chunkLength;\n+\n     const x =\n       thrownValue === SuspenseException\n         ? // This is a special type of exception used for Suspense. For historical\n@@ -1895,6 +1902,9 @@ function retryTask(request: Request, task: Task): void {\n     prevTaskInDEV = currentTaskInDEV;\n     currentTaskInDEV = task;\n   }\n+\n+  const childrenLength = segment.children.length;\n+  const chunkLength = segment.chunks.length;\n   try {\n     // We call the destructive form that mutates this task. That way if something\n     // suspends again, we can reuse the same task instead of spawning a new one.\n@@ -1919,6 +1929,10 @@ function retryTask(request: Request, task: Task): void {\n   } catch (thrownValue) {\n     resetHooksState();\n \n+    // Reset the write pointers to where we started.\n+    segment.children.length = childrenLength;\n+    segment.chunks.length = chunkLength;\n+\n     const x =\n       thrownValue === SuspenseException\n         ? // This is a special type of exception used for Suspense. For historical",
        "date": "2023-05-03T22:13:47Z",
        "msg": "[Fizz] Gracefully handle suspending in DOM configs (#26768)\n\nE.g. if we suspend (throw a promise) in pushStartInstance today we might\r\nhave already pushed some chunks (or even child segments potentially). We\r\nshould revert back to where we were.\r\n\r\nThis doesn't usually happen because when we suspend in a component it\r\ndoesn't write anything itself, it'll always defer to som host instance\r\nto do the writing.\r\n\r\nThere was a todo about this already but I'm not 100% sure it's always\r\nsafe when suspending. It should be safe when suspending just regularly\r\nbecause it's just a noop. We might not even want \"throwing a promise\" in\r\nthis mechanism to be supported longer term but for now that's how a\r\nsuspend in internals."
    },
    {
        "diff": "diff --git a/scripts/release/publish-commands/parse-params.js b/a/scripts/release/publish-commands/parse-params.js @@ -41,6 +41,7 @@ module.exports = () => {\n   params.tags.forEach(tag => {\n     switch (tag) {\n       case 'latest':\n+      case 'canary':\n       case 'next':\n       case 'experimental':\n       case 'alpha':",
        "date": "2023-05-03T16:36:34Z",
        "msg": "Add \"canary\" to list of allowed npm dist tags (#26767)\n\nForgot this allowlist existed. It's an extra safeguard, in case we mess\r\nup the configuration somehow."
    },
    {
        "diff": "diff --git a/packages/react-devtools-extensions/src/background.js b/a/packages/react-devtools-extensions/src/background.js @@ -6,38 +6,47 @@ import {IS_FIREFOX, EXTENSION_CONTAINED_VERSIONS} from './utils';\n \n const ports = {};\n \n-if (!IS_FIREFOX) {\n-  // equivalent logic for Firefox is in prepareInjection.js\n-  // Manifest V3 method of injecting content scripts (not yet supported in Firefox)\n-  // Note: the \"world\" option in registerContentScripts is only available in Chrome v102+\n-  // It's critical since it allows us to directly run scripts on the \"main\" world on the page\n-  // \"document_start\" allows it to run before the page's scripts\n-  // so the hook can be detected by react reconciler\n-  chrome.scripting.registerContentScripts(\n-    [\n-      {\n-        id: 'hook',\n-        matches: ['<all_urls>'],\n-        js: ['build/installHook.js'],\n-        runAt: 'document_start',\n-        world: chrome.scripting.ExecutionWorld.MAIN,\n-      },\n-      {\n-        id: 'renderer',\n-        matches: ['<all_urls>'],\n-        js: ['build/renderer.js'],\n-        runAt: 'document_start',\n-        world: chrome.scripting.ExecutionWorld.MAIN,\n-      },\n-    ],\n-    function () {\n-      // When the content scripts are already registered, an error will be thrown.\n-      // It happens when the service worker process is incorrectly duplicated.\n-      if (chrome.runtime.lastError) {\n-        console.error(chrome.runtime.lastError);\n-      }\n+async function dynamicallyInjectContentScripts() {\n+  const contentScriptsToInject = [\n+    {\n+      id: 'hook',\n+      matches: ['<all_urls>'],\n+      js: ['build/installHook.js'],\n+      runAt: 'document_start',\n+      world: chrome.scripting.ExecutionWorld.MAIN,\n     },\n-  );\n+    {\n+      id: 'renderer',\n+      matches: ['<all_urls>'],\n+      js: ['build/renderer.js'],\n+      runAt: 'document_start',\n+      world: chrome.scripting.ExecutionWorld.MAIN,\n+    },\n+  ];\n+\n+  try {\n+    // For some reason dynamically injected scripts might be already registered\n+    // Registering them again will fail, which will result into\n+    // __REACT_DEVTOOLS_GLOBAL_HOOK__ hook not being injected\n+    await chrome.scripting.unregisterContentScripts({\n+      ids: contentScriptsToInject.map(s => s.id),\n+    });\n+\n+    // equivalent logic for Firefox is in prepareInjection.js\n+    // Manifest V3 method of injecting content script\n+    // TODO(hoxyq): migrate Firefox to V3 manifests\n+    // Note: the \"world\" option in registerContentScripts is only available in Chrome v102+\n+    // It's critical since it allows us to directly run scripts on the \"main\" world on the page\n+    // \"document_start\" allows it to run before the page's scripts\n+    // so the hook can be detected by react reconciler\n+    await chrome.scripting.registerContentScripts(contentScriptsToInject);\n+  } catch (error) {\n+    console.error(error);\n+  }\n+}\n+\n+if (!IS_FIREFOX) {\n+  dynamicallyInjectContentScripts();\n }\n \n chrome.runtime.onConnect.addListener(function (port) {",
        "date": "2023-05-03T16:27:39Z",
        "msg": "fix[dynamic-scripts-injection]: unregister content scripts before registration (#26765)\n\n## Summary\r\nFixes #26756.\r\n\r\nDevTools is failing to inject `__REACT_DEVTOOLS_GLOBAL_HOOK__` hook in\r\nincognito mode. This is not happening straight-forward, but if extension\r\nis toggled on and off, the next time I try to open it I am receiving an\r\nerror that content script was already registered.\r\n\r\n<img width=\"676\" alt=\"Screenshot 2023-05-02 at 14 36 53\"\r\nsrc=\"https://user-images.githubusercontent.com/28902667/235877692-51c5d284-79d9-4b00-b62e-d25d5bb5e056.png\">\r\n\r\n- Unregistering content scripts before attempting to register them\r\nagain. We need to inject `__REACT_DEVTOOLS_GLOBAL_HOOK__` on each page,\r\nso this should be expected behaviour.\r\n- Fixed error logging\r\n \r\n## How did you test this change?\r\nLocal build of extension for Chrome, trying the same steps, which\r\nresulted in an error.\r\nNo regression in performance, tested on react.dev, still the same."
    },
    {
        "diff": "diff --git a/.circleci/config.yml b/a/.circleci/config.yml @@ -426,7 +426,6 @@ jobs:\n             scripts/release/publish.js --ci --tags << parameters.dist_tag >>\n \n workflows:\n-  version: 2\n \n   build_and_test:\n     unless: << pipeline.parameters.prerelease_commit_sha >>",
        "date": "2023-05-02T18:59:36Z",
        "msg": "Remove deprecated workflow key from Circle config (#26762)\n\nThis key was only valid during the 2.0 beta period so we can remove it."
    },
    {
        "diff": "diff --git a/scripts/rollup/packaging.js b/a/scripts/rollup/packaging.js @@ -148,9 +148,9 @@ function processGenerated(directory) {\n     const originalContents = readFileSync(file, 'utf8');\n     const contents = originalContents\n       // Replace {@}format with {@}noformat\n-      .replace(/(\\n\\s*\\*\\s*)@format\\b.*(\\n)/, '$1@noformat$2')\n+      .replace(/(\\r?\\n\\s*\\*\\s*)@format\\b.*(\\n)/, '$1@noformat$2')\n       // Add {@}nolint and {@}generated\n-      .replace(' */\\n', ` * @nolint\\n * ${getSigningToken()}\\n */\\n`);\n+      .replace(/(\\r?\\n\\s*\\*)\\//, `$1 @nolint$1 ${getSigningToken()}$1/`);\n     const signedContents = signFile(contents);\n     writeFileSync(file, signedContents, 'utf8');\n   });",
        "date": "2023-04-25T16:26:34Z",
        "msg": "Handle line endings correctly on Windows in build script for RN (#26727)\n\n## Summary\r\n\r\nWe added some post-processing in the build for RN in #26616 that broke\r\nfor users on Windows due to how line endings were handled to the regular\r\nexpression to insert some directives in the docblock. This fixes that\r\nproblem, reported in #26697 as well.\r\n\r\n## How did you test this change?\r\n\r\nVerified files are still built correctly on Mac/Linux. Will ask for help\r\nto test on Windows."
    },
    {
        "diff": "diff --git a/packages/shared/forks/ReactFeatureFlags.www.js b/a/packages/shared/forks/ReactFeatureFlags.www.js @@ -73,7 +73,7 @@ export const enableLegacyCache = true;\n export const enableCacheElement = true;\n export const enableFetchInstrumentation = false;\n \n-export const enableFormActions = true;\n+export const enableFormActions = false;\n \n export const disableJavaScriptURLs = true;\n ",
        "date": "2023-04-25T16:01:34Z",
        "msg": "Turn off enableFormActions in Meta build (#26721)\n\nThis is enabled in the canary channels, but because it's relatively\r\nuntested, we'll disable it at Meta until they're ready to start trying\r\nit out. It can change some behavior even if you don't intentionally\r\nstart using the API.\r\n\r\nThe reason it's not a dynamic flag is that it affects the external Fizz\r\nruntime, which currently can't read flags at runtime."
    },
    {
        "diff": "diff --git a/fixtures/flight/src/index.js b/a/fixtures/flight/src/index.js @@ -1,5 +1,5 @@\n import * as React from 'react';\n-import {Suspense} from 'react';\n+import {use, Suspense} from 'react';\n import ReactDOM from 'react-dom/client';\n import {createFromFetch, encodeReply} from 'react-server-dom-webpack/client';\n \n@@ -27,7 +27,8 @@ let data = createFromFetch(\n   }\n );\n \n-// TODO: This transition shouldn't really be necessary but it is for now.\n-React.startTransition(() => {\n-  ReactDOM.hydrateRoot(document, data);\n-});\n+function Shell({data}) {\n+  return use(data);\n+}\n+\n+ReactDOM.hydrateRoot(document, <Shell data={data} />);",
        "date": "2023-04-24T18:00:25Z",
        "msg": "Update Flight fixture to use use() instead of Promise as a child (#26715)\n\nThe Promise as a child case seems buggy. It ends up throwing the Promise\r\nas fatal when used in Sync rendering."
    },
    {
        "diff": "diff --git a/package.json b/a/package.json @@ -102,7 +102,7 @@\n     \"yargs\": \"^15.3.1\"\n   },\n   \"devEngines\": {\n-    \"node\": \"16.x || 18.x || 19.x\"\n+    \"node\": \"16.x || 18.x || 19.x || 20.x\"\n   },\n   \"jest\": {\n     \"testRegex\": \"/scripts/jest/dont-run-jest-directly\\\\.js$\"",
        "date": "2023-04-21T18:23:27Z",
        "msg": "Allow Node.js 20 to build (#26693)\n\nThis is stable and appears to build w/o problem. I don't see why we\r\nshould disallow it."
    },
    {
        "diff": "diff --git a/README.md b/a/README.md @@ -1,4 +1,4 @@\n-# [React](https://reactjs.org/) &middot; [![GitHub license](https://img.shields.io/badge/license-MIT-blue.svg)](https://github.com/facebook/react/blob/main/LICENSE) [![npm version](https://img.shields.io/npm/v/react.svg?style=flat)](https://www.npmjs.com/package/react) [![CircleCI Status](https://circleci.com/gh/facebook/react.svg?style=shield&circle-token=:circle-token)](https://circleci.com/gh/facebook/react) [![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg)](https://reactjs.org/docs/how-to-contribute.html#your-first-pull-request)\n+# [React](https://reactjs.org/) &middot; [![GitHub license](https://img.shields.io/badge/license-MIT-blue.svg)](https://github.com/facebook/react/blob/main/LICENSE) [![npm version](https://img.shields.io/npm/v/react.svg?style=flat)](https://www.npmjs.com/package/react) [![CircleCI Status](https://circleci.com/gh/facebook/react.svg?style=shield)](https://circleci.com/gh/facebook/react) [![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg)](https://reactjs.org/docs/how-to-contribute.html#your-first-pull-request)\n \n React is a JavaScript library for building user interfaces.\n ",
        "date": "2023-04-21T01:28:45Z",
        "msg": "update broken icon link (circleCi status) (#26688)\n\nlooks better now \ud83d\ude80\u200a"
    },
    {
        "diff": "diff --git a/packages/react-dom-bindings/src/events/plugins/SimpleEventPlugin.js b/a/packages/react-dom-bindings/src/events/plugins/SimpleEventPlugin.js @@ -72,6 +72,8 @@ function extractEvents(\n       // Firefox creates a keypress event for function keys too. This removes\n       // the unwanted keypress events. Enter is however both printable and\n       // non-printable. One would expect Tab to be as well (but it isn't).\n+      // TODO: Fixed in https://bugzilla.mozilla.org/show_bug.cgi?id=968056. Can\n+      // probably remove.\n       if (getEventCharCode(((nativeEvent: any): KeyboardEvent)) === 0) {\n         return;\n       }\n@@ -95,6 +97,8 @@ function extractEvents(\n     case 'click':\n       // Firefox creates a click event on right mouse clicks. This removes the\n       // unwanted click events.\n+      // TODO: Fixed in https://phabricator.services.mozilla.com/D26793. Can\n+      // probably remove.\n       if (nativeEvent.button === 2) {\n         return;\n       }",
        "date": "2023-04-20T01:41:46Z",
        "msg": "Add two event system cleanup TODOs (#26678)\n\nThere is so much old stuff in these files. I am weeping."
    },
    {
        "diff": "diff --git a/.github/workflows/commit_artifacts.yml b/a/.github/workflows/commit_artifacts.yml @@ -1,13 +1,22 @@\n-name: Commit Artifacts for Facebook WWW and fbsource\n+name: Commit Artifacts for Meta WWW and fbsource\n \n on:\n   push:\n-    branches: [main]\n+    branches: [main, meta-www, meta-fbsource]\n \n jobs:\n   download_artifacts:\n     runs-on: ubuntu-latest\n+    outputs:\n+      www_branch_count: ${{ steps.check_branches.outputs.www_branch_count }}\n+      fbsource_branch_count: ${{ steps.check_branches.outputs.fbsource_branch_count }}\n     steps:\n+      - uses: actions/checkout@v3\n+      - name: \"Check branches\"\n+        id: check_branches\n+        run: |\n+          echo \"www_branch_count=$(git ls-remote --heads origin \"refs/heads/meta-www\" | wc -l)\" >> \"$GITHUB_OUTPUT\"\n+          echo \"fbsource_branch_count=$(git ls-remote --heads origin \"refs/heads/meta-fbsource\" | wc -l)\" >> \"$GITHUB_OUTPUT\"\n       - name: Download and unzip artifacts\n         uses: actions/github-script@v6\n         env:\n@@ -168,6 +177,7 @@ jobs:\n \n   commit_www_artifacts:\n     needs: download_artifacts\n+    if: ${{ (github.ref == 'refs/heads/main' && needs.download_artifacts.outputs.www_branch_count == '0') || github.ref == 'refs/heads/meta-www' }}\n     runs-on: ubuntu-latest\n     steps:\n       - uses: actions/checkout@v3\n@@ -204,6 +214,7 @@ jobs:\n   commit_fbsource_artifacts:\n     needs: download_artifacts\n     runs-on: ubuntu-latest\n+    if: ${{ (github.ref == 'refs/heads/main' && needs.download_artifacts.outputs.fbsource_branch_count == '0') || github.ref == 'refs/heads/meta-fbsource' }}\n     steps:\n       - uses: actions/checkout@v3\n         with:",
        "date": "2023-04-19T16:11:40Z",
        "msg": "[actions] commit from special branches iff they exist (#26673)\n\nThis creates 2 special branches. If these special branches exist, we'll\r\ncommit build artifacts from these branches, main otherwise."
    },
    {
        "diff": "diff --git a/packages/react-devtools-extensions/src/background.js b/a/packages/react-devtools-extensions/src/background.js @@ -172,6 +172,7 @@ chrome.tabs.onUpdated.addListener((tabId, changeInfo, tab) => {\n \n chrome.runtime.onMessage.addListener((request, sender) => {\n   const tab = sender.tab;\n+  // sender.tab.id from content script points to the tab that injected the content script\n   if (tab) {\n     const id = tab.id;\n     // This is sent from the hook content script.\n@@ -214,7 +215,10 @@ chrome.runtime.onMessage.addListener((request, sender) => {\n           break;\n       }\n     }\n-  } else if (request.payload?.tabId) {\n+  }\n+  // sender.tab.id from devtools page may not exist, or point to the undocked devtools window\n+  // so we use the payload to get the tab id\n+  if (request.payload?.tabId) {\n     const tabId = request.payload?.tabId;\n     // This is sent from the devtools page when it is ready for injecting the backend\n     if (request.payload.type === 'react-devtools-inject-backend-manager') {",
        "date": "2023-04-19T00:39:22Z",
        "msg": "(patch)[DevTools] bug fix: backend injection logic not working for undocked devtools window (#26665)\n\nbugfix for #26492\r\n\r\nThis bug would cause users unable to use the devtools (component tree\r\nempty).\r\n\r\nThe else-if logic is broken when user switch to undocked devtools mode\r\n(separate window) because `sender.tab` would exist in that case.\r\n<img width=\"314\" alt=\"image\"\r\nsrc=\"https://user-images.githubusercontent.com/1001890/232930094-05a74445-9189-4d50-baf1-a0360b29ef7e.png\">\r\n\r\nTested on Chrome with a local build"
    },
    {
        "diff": "diff --git a/packages/react-devtools-extensions/src/main.js b/a/packages/react-devtools-extensions/src/main.js @@ -475,7 +475,7 @@ function createPanelIfReactLoaded() {\n \n       chrome.devtools.panels.create(\n         IS_CHROME || IS_EDGE ? '\u269b\ufe0f Components' : 'Components',\n-        '',\n+        IS_EDGE ? 'icons/production.svg' : '',\n         'panel.html',\n         extensionPanel => {\n           extensionPanel.onShown.addListener(panel => {\n@@ -506,7 +506,7 @@ function createPanelIfReactLoaded() {\n \n       chrome.devtools.panels.create(\n         IS_CHROME || IS_EDGE ? '\u269b\ufe0f Profiler' : 'Profiler',\n-        '',\n+        IS_EDGE ? 'icons/production.svg' : '',\n         'panel.html',\n         extensionPanel => {\n           extensionPanel.onShown.addListener(panel => {",
        "date": "2023-04-11T18:42:13Z",
        "msg": "Provide icon to edge devtools. (#26543)\n\n<!--\r\n  Thanks for submitting a pull request!\r\nWe appreciate you spending the time to work on these changes. Please\r\nprovide enough information so that others can review your pull request.\r\nThe three fields below are mandatory.\r\n\r\nBefore submitting a pull request, please make sure the following is\r\ndone:\r\n\r\n1. Fork [the repository](https://github.com/facebook/react) and create\r\nyour branch from `main`.\r\n  2. Run `yarn` in the repository root.\r\n3. If you've fixed a bug or added code that should be tested, add tests!\r\n4. Ensure the test suite passes (`yarn test`). Tip: `yarn test --watch\r\nTestName` is helpful in development.\r\n5. Run `yarn test --prod` to test in the production environment. It\r\nsupports the same options as `yarn test`.\r\n6. If you need a debugger, run `yarn test --debug --watch TestName`,\r\nopen `chrome://inspect`, and press \"Inspect\".\r\n7. Format your code with\r\n[prettier](https://github.com/prettier/prettier) (`yarn prettier`).\r\n8. Make sure your code lints (`yarn lint`). Tip: `yarn linc` to only\r\ncheck changed files.\r\n  9. Run the [Flow](https://flowtype.org/) type checks (`yarn flow`).\r\n  10. If you haven't already, complete the CLA.\r\n\r\nLearn more about contributing:\r\nhttps://reactjs.org/docs/how-to-contribute.html\r\n-->\r\n\r\n## Summary\r\nAddresses #26352.\r\n\r\nThis PR explicitly passes an icon to `chrome.devtools.panels.create()`,\r\nso that edge devtools will display the icon when in [Focus\r\nMode](https://learn.microsoft.com/en-us/microsoft-edge/devtools-guide-chromium/experimental-features/focus-mode).\r\n\r\n<!--\r\nExplain the **motivation** for making this change. What existing problem\r\ndoes the pull request solve?\r\n-->\r\n\r\n## How did you test this change?\r\nPassing test suite (`yarn test` & `yarn test --prod`) \u2705 \r\nPassing lint (`yarn linc`) \u2705 \r\nPassing type checks (`yarn flow`) \u2705 \r\n\r\n**Visual Testing**\r\n\r\nBefore Changes             | After Changes\r\n:-------------------------:|:-------------------------:\r\n\r\n![](https://user-images.githubusercontent.com/15645169/229591145-fe99df06-e2e3-4f21-ae31-f770d584ca6c.png)\r\n|\r\n![](https://user-images.githubusercontent.com/15645169/229591594-26c6cbaf-f345-4367-b234-8f3c8ab3ccb1.png)\r\n<!--\r\nDemonstrate the code is solid. Example: The exact commands you ran and\r\ntheir output, screenshots / videos if the pull request changes the user\r\ninterface.\r\nHow exactly did you verify that your PR solves the issue you wanted to\r\nsolve?\r\n  If you leave this empty, your PR will very likely be closed.\r\n-->"
    },
    {
        "diff": "diff --git a/packages/internal-test-utils/ReactInternalTestUtils.js b/a/packages/internal-test-utils/ReactInternalTestUtils.js @@ -141,10 +141,18 @@ export async function waitForThrow(expectedError: mixed): mixed {\n         typeof expectedError === 'string' &&\n         typeof x === 'object' &&\n         x !== null &&\n-        typeof x.message === 'string' &&\n-        x.message.includes(expectedError)\n+        typeof x.message === 'string'\n       ) {\n-        return x;\n+        if (x.message.includes(expectedError)) {\n+          return x;\n+        } else {\n+          error.message = `\n+Expected error was not thrown.\n+\n+${diff(expectedError, x.message)}\n+`;\n+          throw error;\n+        }\n       }\n       error.message = `\n Expected error was not thrown.",
        "date": "2023-04-07T21:14:08Z",
        "msg": "[Tests] `waitForThrow` should diff strings (#26568)\n\nCurrently, `waitForThrow` tries to diff the expected value against the\r\nthrown value if it doesn't match. However if the expectation is a\r\nstring, we are not diffing against the thrown message. This commit makes\r\nit so if we are matching against message we also diff against message."
    },
    {
        "diff": "diff --git a/packages/react-devtools/app.js b/a/packages/react-devtools/app.js @@ -5,7 +5,7 @@\n  * LICENSE file in the root directory of this source tree.\n  */\n \n-const {app, BrowserWindow} = require('electron'); // Module to create native browser window.\n+const {app, BrowserWindow, shell} = require('electron'); // Module to create native browser window.\n const {join} = require('path');\n const os = require('os');\n \n@@ -40,9 +40,9 @@ app.on('ready', function () {\n   }\n \n   // https://stackoverflow.com/questions/32402327/\n-  mainWindow.webContents.on('new-window', function (event, url) {\n-    event.preventDefault();\n-    require('electron').shell.openExternal(url);\n+  mainWindow.webContents.setWindowOpenHandler(({url}) => {\n+    shell.openExternal(url);\n+    return {action: 'deny'};\n   });\n \n   // and load the index.html of the app.",
        "date": "2023-04-06T14:02:23Z",
        "msg": "[DevTools] Replace deprecated `new-window` with `webContents.setWindowOpenHandler()` (#26559)\n\n## Summary\r\n\r\nThe electron package was recently upgraded from ^11.1.0 to ^23.1.2\r\n(#26337). However, the WebContents `new-window` event \u2013 that is used in\r\nthe react-devtools project \u2013 was deprecated in\r\n[v12.0.0](https://releases.electronjs.org/release/v12.0.0) and removed\r\nin [v22.2.0](https://releases.electronjs.org/release/v22.2.0). The event\r\nwas replaced by `webContents.setWindowOpenHandler()`. This PR replaces\r\nthe `new-window` event with `webContents.setWindowOpenHandler()`.\r\n\r\n## How did you test this change?\r\n\r\nI created a simple electron application with similar functionality:\r\n\r\n```\r\nconst { app, BrowserWindow, shell } = require('electron')\r\n\r\nconst createWindow = () => {\r\n  const mainWindow = new BrowserWindow({\r\n    width: 800,\r\n    height: 600\r\n  })\r\n\r\n  mainWindow.webContents.setWindowOpenHandler(({ url }) => {\r\n    shell.openExternal(url)\r\n    return { action: 'deny' }\r\n  })\r\n\r\n  mainWindow.loadFile('index.html')\r\n}\r\n\r\napp.whenReady().then(() => {\r\n  createWindow()\r\n})\r\n```\r\n\r\n---------\r\n\r\nCo-authored-by: root <root@DESKTOP-KCGHLB8.localdomain>"
    },
    {
        "diff": "diff --git a/packages/react-dom-bindings/src/shared/ReactDOMInvalidARIAHook.js b/a/packages/react-dom-bindings/src/shared/ReactDOMInvalidARIAHook.js @@ -6,7 +6,6 @@\n  */\n \n import {ATTRIBUTE_NAME_CHAR} from './isAttributeNameSafe';\n-import isCustomComponent from './isCustomComponent';\n import validAriaProperties from './validAriaProperties';\n import hasOwnProperty from 'shared/hasOwnProperty';\n \n@@ -76,7 +75,7 @@ function validateProperty(tagName, name) {\n   return true;\n }\n \n-function warnInvalidARIAProps(type, props) {\n+export function validateProperties(type, props) {\n   if (__DEV__) {\n     const invalidProps = [];\n \n@@ -108,10 +107,3 @@ function warnInvalidARIAProps(type, props) {\n     }\n   }\n }\n-\n-export function validateProperties(type, props) {\n-  if (isCustomComponent(type, props)) {\n-    return;\n-  }\n-  warnInvalidARIAProps(type, props);\n-}",
        "date": "2023-03-30T20:31:15Z",
        "msg": "Warn for ARIA typos on custom elements (#26523)\n\nNormally we allow any attribute/property on custom elements. However\r\nit's a shared namespace. The `aria-` namespace applies to all generic\r\nelements which are shared with custom elements. So arguably adding\r\ncustom extensions there is a really bad idea since it can conflict with\r\nfuture additions.\r\n\r\nIt's possible there is a new standard one that's polyfilled by a custom\r\nelement but the same issue applies to React in general that we might\r\nwarn for very new additions so we just have to be quick on that.\r\n\r\ncc @josepharhar"
    },
    {
        "diff": "diff --git a/packages/react-client/src/__tests__/ReactFlight-test.js b/a/packages/react-client/src/__tests__/ReactFlight-test.js @@ -213,6 +213,40 @@ describe('ReactFlight', () => {\n     expect(ReactNoop).toMatchRenderedOutput(null);\n   });\n \n+  // @gate FIXME\n+  it('should transport undefined object values', async () => {\n+    function ServerComponent(props) {\n+      return 'prop' in props\n+        ? `\\`prop\\` in props as '${props.prop}'`\n+        : '`prop` not in props';\n+    }\n+    const ClientComponent = clientReference(ServerComponent);\n+\n+    const model = (\n+      <>\n+        <div>\n+          Server: <ServerComponent prop={undefined} />\n+        </div>\n+        <div>\n+          Client: <ClientComponent prop={undefined} />\n+        </div>\n+      </>\n+    );\n+\n+    const transport = ReactNoopFlightServer.render(model);\n+\n+    await act(async () => {\n+      ReactNoop.render(await ReactNoopFlightClient.read(transport));\n+    });\n+\n+    expect(ReactNoop).toMatchRenderedOutput(\n+      <>\n+        <div>Server: `prop` in props as 'undefined'</div>\n+        <div>Client: `prop` in props as 'undefined'</div>\n+      </>,\n+    );\n+  });\n+\n   it('can render an empty fragment', async () => {\n     function Empty() {\n       return <React.Fragment />;",
        "date": "2023-03-29T16:27:55Z",
        "msg": "[Flight] Gated test for dropped transport of undefined object values (#26478)\n\n## Summary\r\n\r\nWith https://github.com/facebook/react/pull/26349 we now serialize\r\n`undefined`. However, deserializing it on the client is currently\r\nindistinguishable from the value missing entirely due to how\r\n`JSON.parse` treats `undefined` return value of reviver functions.\r\n\r\nThis leads to inconsistent behavior of the `Object.hasOwn` or `in`\r\noperator (used for narrowing in TypeScript). In TypeScript-speak, `{\r\nprop: T | undefined}` will arrive as `{ prop?: T }`.\r\n\r\n## How did you test this change?\r\n\r\n- Added test that is expected to fail. Though ideally the implementation\r\nof the component would not care whether it's used on the client or\r\nserver."
    },
    {
        "diff": "diff --git a/packages/shared/forks/ReactFeatureFlags.www.js b/a/packages/shared/forks/ReactFeatureFlags.www.js @@ -25,7 +25,6 @@ export const {\n   enableDebugTracing,\n   skipUnmountedBoundaries,\n   enableUseRefAccessWarning,\n-  disableSchedulerTimeoutInWorkLoop,\n   enableLazyContextPropagation,\n   enableUnifiedSyncLane,\n   enableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay,\n@@ -47,6 +46,8 @@ export const enableUpdaterTracking = __PROFILE__;\n export const createRootStrictEffectsByDefault = false;\n export const enableSuspenseAvoidThisFallback = true;\n export const enableSuspenseAvoidThisFallbackFizz = false;\n+\n+export const disableSchedulerTimeoutInWorkLoop = false;\n export const enableCPUSuspense = true;\n export const enableFloat = true;\n export const enableUseHook = true;",
        "date": "2023-03-28T18:11:52Z",
        "msg": "Make disableSchedulerTimeoutInWorkLoop a static ff (#26497)\n\n## Overview\r\n\r\nThere's a known infinite loop with this but we're not running an\r\nexperiment any time soon."
    },
    {
        "diff": "diff --git a/scripts/rollup/build.js b/a/scripts/rollup/build.js @@ -182,12 +182,16 @@ let getRollupInteropValue = id => {\n   // Specifying `interop: 'default'` instead will have Rollup use the imported variable as-is,\n   // without adding a `.default` to the reference.\n   const modulesWithCommonJsExports = [\n-    'JSResourceReferenceImpl',\n-    'error-stack-parser',\n     'art/core/transform',\n     'art/modes/current',\n     'art/modes/fast-noSideEffects',\n     'art/modes/svg',\n+    'JSResourceReferenceImpl',\n+    'error-stack-parser',\n+    'neo-async',\n+    'webpack/lib/dependencies/ModuleDependency',\n+    'webpack/lib/dependencies/NullDependency',\n+    'webpack/lib/Template',\n   ];\n \n   if (modulesWithCommonJsExports.includes(id)) {",
        "date": "2023-03-25T00:05:23Z",
        "msg": "Fix remaining CommonJS imports after Rollup upgrade (#26473)\n\nFollow-up to https://github.com/facebook/react/pull/26442.\r\n\r\nIt looks like we missed a few cases where we default import a CommonJS\r\nmodule, which leads to Rollup adding `.default` access, e.g.\r\n`require('webpack/lib/Template').default` in the output.\r\n\r\nTo fix, add the remaining cases to the list of exceptions. Verified by\r\ngoing through all `externals` in the bundle list, and manually checking\r\nthe webpack plugin."
    },
    {
        "diff": "diff --git a/packages/react-devtools/package.json b/a/packages/react-devtools/package.json @@ -16,7 +16,8 @@\n     \"app.html\",\n     \"app.js\",\n     \"index.js\",\n-    \"icons\"\n+    \"icons\",\n+    \"preload.js\"\n   ],\n   \"scripts\": {\n     \"start\": \"node bin.js\"",
        "date": "2023-03-24T18:45:27Z",
        "msg": "[DevTools] missing file name in package.json (#26469)\n\nresolves\r\nhttps://github.com/facebook/react/pull/26337#issuecomment-1483004732"
    },
    {
        "diff": "diff --git a/packages/react-native-renderer/src/ReactNativeTypes.js b/a/packages/react-native-renderer/src/ReactNativeTypes.js @@ -213,7 +213,7 @@ export type ReactNativeType = {\n };\n \n export opaque type Node = mixed;\n-type InternalInstanceHandle = mixed;\n+export opaque type InternalInstanceHandle = mixed;\n type PublicInstance = mixed;\n \n export type ReactFabricType = {",
        "date": "2023-03-22T15:39:52Z",
        "msg": "Make InternalInstanceHandle type opaque in ReactNativeTypes (#26461)\n\n## Summary\r\n\r\nThis type was defined as `mixed` to avoid bringing the whole definition\r\nfrom React to React Native, but its definition is visible to RN. This\r\ntype should be opaque to RN, so this makes it explicit.\r\n\r\n## How did you test this change?\r\n\r\nApplied the same changes in the React Native repository and could use\r\nthe type without issues."
    },
    {
        "diff": "diff --git a/packages/react-dom-bindings/src/client/ReactDOMComponent.js b/a/packages/react-dom-bindings/src/client/ReactDOMComponent.js @@ -595,8 +595,6 @@ export function setInitialProperties(\n       listenToNonDelegatedEvent('close', domElement);\n       props = rawProps;\n       break;\n-    case 'iframe':\n-    case 'object':\n     case 'embed':\n       if (\n         rawProps.children != null ||\n@@ -608,6 +606,9 @@ export function setInitialProperties(\n             'use `dangerouslySetInnerHTML`.',\n         );\n       }\n+    // eslint-disable-next-line no-fallthrough\n+    case 'iframe':\n+    case 'object':\n       // We listen to this event in case to ensure emulated bubble\n       // listeners still fire for the load event.\n       listenToNonDelegatedEvent('load', domElement);",
        "date": "2023-03-22T12:56:20Z",
        "msg": "Should not throw for children of iframe or object (#26458)\n\nStill needs a regression test to test this for the future."
    },
    {
        "diff": "diff --git a/packages/react/README.md b/a/packages/react/README.md @@ -30,8 +30,8 @@ root.render(<Counter />);\n \n ## Documentation\n \n-See https://reactjs.org/\n+See https://react.dev/\n \n ## API\n \n-See https://reactjs.org/docs/react-api.html\n+See https://react.dev/reference/react",
        "date": "2023-03-22T11:56:18Z",
        "msg": "chore: update links of docs and api (#26455)\n\nUpdate new links of docs and api  for react package.\r\n> [Documentation](https://react.dev/)\r\n> [API](https://react.dev/reference/react)"
    },
    {
        "diff": "diff --git a/packages/react-dom/README.md b/a/packages/react-dom/README.md @@ -49,12 +49,12 @@ function handleRequest(res) {\n \n ### `react-dom`\n \n-See https://reactjs.org/docs/react-dom.html\n+See https://react.dev/reference/react-dom\n \n ### `react-dom/client`\n \n-See https://reactjs.org/docs/react-dom-client.html\n+See https://react.dev/reference/react-dom/client\n \n ### `react-dom/server`\n \n-See https://reactjs.org/docs/react-dom-server.html\n+See https://react.dev/reference/react-dom/server",
        "date": "2023-03-22T11:55:06Z",
        "msg": "chore: update new docs links for react-dom (#26456)\n\nUpdate new documentation links in react-dom's readme.\r\n> [react-dom](https://react.dev/reference/react-dom)\r\n> [react-dom/client](https://react.dev/reference/react-dom/client)\r\n> [react-dom/server](https://react.dev/reference/react-dom/server)"
    },
    {
        "diff": "diff --git a/packages/use-subscription/README.md b/a/packages/use-subscription/README.md @@ -2,7 +2,7 @@\n \n React Hook for subscribing to external data sources.\n \n-**You may now migrate to [`use-sync-external-store`](https://www.npmjs.com/package/use-sync-external-store) directly instead, which has the same API as [`React.useSyncExternalStore`](https://reactjs.org/docs/hooks-reference.html#usesyncexternalstore). The `use-subscription` package is now a thin wrapper over `use-sync-external-store` and will not be updated further.**\n+**You may now migrate to [`use-sync-external-store`](https://www.npmjs.com/package/use-sync-external-store) directly instead, which has the same API as [`React.useSyncExternalStore`](https://react.dev/reference/react/useSyncExternalStore). The `use-subscription` package is now a thin wrapper over `use-sync-external-store` and will not be updated further.**\n \n # Installation\n ",
        "date": "2023-03-22T01:39:05Z",
        "msg": "fix docs link for useSyncExternalStore (#26452)\n\n## Summary\r\n\r\nUpdate readme to new documentation links to\r\n[`React.useSyncExternalStore`](https://react.dev/reference/react/useSyncExternalStore\r\n\r\n## How did you test this change?\r\n\r\nThis is just a documentation change, so we don't need to test it\r\n\r\nCo-authored-by: \u7530\u6e90 <tianyuan@eol.cn>"
    },
    {
        "diff": "diff --git a/.github/workflows/commit_artifacts.yml b/a/.github/workflows/commit_artifacts.yml @@ -156,6 +156,7 @@ jobs:\n       - name: Add REVISION file\n         run: |\n           echo ${{ github.sha }} >> ./compiled/facebook-www/REVISION\n+          echo ${{ github.sha }} >> ./compiled-rn/facebook-fbsource/xplat/js/react-native-github/Libraries/Renderer/REVISION\n       - uses: actions/upload-artifact@v3\n         with:\n           name: compiled",
        "date": "2023-03-21T16:18:20Z",
        "msg": "Add REVISION file to react-fbsource-import (#26448)\n\nFor DiffTrain to fbsource, we need REVISION file in compiled-rn folder"
    },
    {
        "diff": "diff --git a/.circleci/config.yml b/a/.circleci/config.yml @@ -151,11 +151,33 @@ jobs:\n       - setup_node_modules\n       - run:\n           name: Download artifacts for base revision\n+          # TODO: The download-experimental-build.js script works by fetching\n+          # artifacts from CI. CircleCI recently updated this endpoint to\n+          # require an auth token. This is a problem for PR branches, where\n+          # sizebot needs to run, because we don't want to leak the token to\n+          # arbitrary code written by an outside contributor.\n+          #\n+          # This only affects PR branches. CI workflows that run on the main\n+          # branch are allowed to access environment variables, because only those\n+          # with push access can land code in main.\n+          #\n+          # As a temporary workaround, we'll fetch the assets from a mirror.\n+          # Need to figure out a longer term solution for this.\n+          #\n+          # Original code\n+          #\n+          # command: |\n+          #     git fetch origin main\n+          #     cd ./scripts/release && yarn && cd ../../\n+          #     scripts/release/download-experimental-build.js --commit=$(git merge-base HEAD origin/main) --allowBrokenCI\n+          #     mv ./build ./base-build\n+          #\n+          # Workaround. Fetch the artifacts from react-builds.vercel.app. This\n+          # is the same app that hosts the sizebot diff previews.\n           command: |\n-              git fetch origin main\n-              cd ./scripts/release && yarn && cd ../../\n-              scripts/release/download-experimental-build.js --commit=$(git merge-base HEAD origin/main) --allowBrokenCI\n+            curl -L --retry 60 --retry-delay 10 --retry-max-time 600 https://react-builds.vercel.app/api/commits/$(git merge-base HEAD origin/main)/artifacts/build.tgz | tar -xz\n               mv ./build ./base-build\n+\n       - run:\n           # TODO: The `download-experimental-build` script copies the npm\n           # packages into the `node_modules` directory. This is a historical",
        "date": "2023-03-18T20:22:20Z",
        "msg": "Fix sizebot not working due to missing auth token (#26423)\n\nSizebot works by fetching the base artifacts from CI. CircleCI recently\r\nupdated this endpoint to require an auth token. This is a problem for PR\r\nbranches, where sizebot runs, because we don't want to leak the token to\r\narbitrary code written by an outside contributor.\r\n\r\nThis only affects PR branches. CI workflows that run on the main branch\r\nare allowed to access environment variables, because only those with\r\npush access can land code in main.\r\n\r\nAs a temporary workaround, we'll fetch the assets from a mirror,\r\nreact-builds.vercel.app. This is the same app that hosts the sizebot\r\ndiff previews.\r\n\r\nNeed to figure out a longer term solution. Perhaps by converting sizebot\r\ninto a proper GitHub app."
    },
    {
        "diff": "diff --git a/.github/workflows/commit_artifacts.yml b/a/.github/workflows/commit_artifacts.yml @@ -10,6 +10,8 @@ jobs:\n     steps:\n       - name: Download and unzip artifacts\n         uses: actions/github-script@v6\n+        env:\n+          CIRCLECI_TOKEN: ${{secrets.CIRCLECI_TOKEN_DIFFTRAIN}}\n         with:\n           script: |\n             const cp = require('child_process');\n@@ -58,10 +60,10 @@ jobs:\n                       const ciBuildId = /\\/facebook\\/react\\/([0-9]+)/.exec(\n                         status.target_url,\n                       )[1];\n-                      console.log(`CircleCI build id found: ${ciBuildId}`);\n                       if (Number.parseInt(ciBuildId, 10) + '' === ciBuildId) {\n                         artifactsUrl =\n                           `https://circleci.com/api/v1.1/project/github/facebook/react/${ciBuildId}/artifacts`;\n+                        console.log(`Found artifactsUrl: ${artifactsUrl}`);\n                         break spinloop;\n                       } else {\n                         throw new Error(`${ciBuildId} isn't a number`);\n@@ -80,13 +82,21 @@ jobs:\n               await sleep(60_000);\n             }\n             if (artifactsUrl != null) {\n-              const res = await fetch(artifactsUrl);\n+              const {CIRCLECI_TOKEN} = process.env;\n+              const res = await fetch(artifactsUrl, {\n+                headers: {\n+                  'Circle-Token': CIRCLECI_TOKEN\n+                }\n+              });\n               const data = await res.json();\n+              if (!Array.isArray(data) && data.message != null) {\n+                throw `CircleCI returned: ${data.message}`;\n+              }\n               for (const artifact of data) {\n                 if (artifact.path === 'build.tgz') {\n                   console.log(`Downloading and unzipping ${artifact.url}`);\n                   await execHelper(\n-                    `curl -L ${artifact.url} | tar -xvz`\n+                    `curl -L ${artifact.url} -H \"Circle-Token: ${CIRCLECI_TOKEN}\" | tar -xvz`\n                   );\n                 }\n               }",
        "date": "2023-03-17T19:16:55Z",
        "msg": "[difftrain] Fix broken workflow (#26421)\n\nSeems like CircleCI now enforces passing a token when fetching\r\nartifacts. I provisioned a new read-only CircleCI token just for\r\ndifftrain.\r\n\r\ntest plan: see https://github.com/facebook/react/actions/runs/4450679268"
    },
    {
        "diff": "diff --git a/packages/react/src/ReactElementValidator.js b/a/packages/react/src/ReactElementValidator.js @@ -6,7 +6,7 @@\n  */\n \n /**\n- * ReactElementValidator provides a wrapper around a element factory\n+ * ReactElementValidator provides a wrapper around an element factory\n  * which validates the props passed to the element. This is intended to be\n  * used only in DEV and could be replaced by a static type checker for languages\n  * that support it.",
        "date": "2023-03-17T14:48:44Z",
        "msg": "Updated comment message (#26158)\n\na simple grammar fix."
    },
    {
        "diff": "diff --git a/packages/react-dom/src/__tests__/ReactUpdates-test.js b/a/packages/react-dom/src/__tests__/ReactUpdates-test.js @@ -1646,12 +1646,12 @@ describe('ReactUpdates', () => {\n       try {\n         const container = document.createElement('div');\n         expect(() => {\n-          ReactDOM.render(<App />, container);\n+          const root = ReactDOMClient.createRoot(container);\n+          root.render(<App />);\n           while (error === null) {\n             Scheduler.unstable_flushNumberOfYields(1);\n             Scheduler.unstable_clearLog();\n           }\n-          expect(error).toContain('Warning: Maximum update depth exceeded.');\n           expect(stack).toContain(' NonTerminating');\n           // rethrow error to prevent going into an infinite loop when act() exits\n           throw error;",
        "date": "2023-03-16T19:27:15Z",
        "msg": "Fix a test case in ReactUpdates-test (#26399)\n\nJust noticed the test isn't testing what it is meant to test properly.\r\nThe error `Warning: ReactDOM.render is no longer supported in React 18.\r\nUse createRoot instead. Until you switch to the new API, your app will\r\nbehave as if it's running React 17. Learn more:\r\nhttps://reactjs.org/link/switch-to-createroot` is thrown, the inner\r\n`expect(error).toContain('Warning: Maximum update depth exceeded.');`\r\nfailed and threw jest error, and the outer `.toThrow('Maximum update\r\ndepth exceeded.')` happens to catch it and makes the test pass."
    },
    {
        "diff": "diff --git a/packages/react-dom/index.classic.fb.js b/a/packages/react-dom/index.classic.fb.js @@ -24,6 +24,7 @@ export {\n   hydrateRoot,\n   findDOMNode,\n   flushSync,\n+  hydrate,\n   render,\n   unmountComponentAtNode,\n   unstable_batchedUpdates,",
        "date": "2023-03-16T18:01:20Z",
        "msg": "Revert \"Remove hydrate entry point from www builds\" (#26413)\n\nReverts facebook/react#26400.\r\n\r\nWill take a look at the test failures before re-merging."
    },
    {
        "diff": "diff --git a/packages/react-dom/index.classic.fb.js b/a/packages/react-dom/index.classic.fb.js @@ -24,7 +24,6 @@ export {\n   hydrateRoot,\n   findDOMNode,\n   flushSync,\n-  hydrate,\n   render,\n   unmountComponentAtNode,\n   unstable_batchedUpdates,",
        "date": "2023-03-16T15:39:34Z",
        "msg": "Remove hydrate entry point from www builds (#26400)\n\nAs I understand it this isn't used at Meta and it would let us get rid\r\nof at least legacy mode hydration code when we remove legacy mode from\r\nOSS builds."
    },
    {
        "diff": "diff --git a/packages/react-dom/package.json b/a/packages/react-dom/package.json @@ -58,6 +58,7 @@\n       \"default\": \"./server.node.js\"\n     },\n     \"./server.browser\": \"./server.browser.js\",\n+    \"./server.bun\": \"./server.bun.js\",\n     \"./server.edge\": \"./server.edge.js\",\n     \"./server.node\": \"./server.node.js\",\n     \"./static\": {",
        "date": "2023-03-16T02:09:49Z",
        "msg": "Add missing `\"react-dom/server.bun\"` entry in package.json `\"exports\"` (#26402)\n\n<!--\r\n  Thanks for submitting a pull request!\r\nWe appreciate you spending the time to work on these changes. Please\r\nprovide enough information so that others can review your pull request.\r\nThe three fields below are mandatory.\r\n\r\nBefore submitting a pull request, please make sure the following is\r\ndone:\r\n\r\n1. Fork [the repository](https://github.com/facebook/react) and create\r\nyour branch from `main`.\r\n  2. Run `yarn` in the repository root.\r\n3. If you've fixed a bug or added code that should be tested, add tests!\r\n4. Ensure the test suite passes (`yarn test`). Tip: `yarn test --watch\r\nTestName` is helpful in development.\r\n5. Run `yarn test --prod` to test in the production environment. It\r\nsupports the same options as `yarn test`.\r\n6. If you need a debugger, run `yarn test --debug --watch TestName`,\r\nopen `chrome://inspect`, and press \"Inspect\".\r\n7. Format your code with\r\n[prettier](https://github.com/prettier/prettier) (`yarn prettier`).\r\n8. Make sure your code lints (`yarn lint`). Tip: `yarn linc` to only\r\ncheck changed files.\r\n  9. Run the [Flow](https://flowtype.org/) type checks (`yarn flow`).\r\n  10. If you haven't already, complete the CLA.\r\n\r\nLearn more about contributing:\r\nhttps://reactjs.org/docs/how-to-contribute.html\r\n-->\r\n\r\n## Summary\r\n\r\n<!--\r\nExplain the **motivation** for making this change. What existing problem\r\ndoes the pull request solve?\r\n-->\r\n\r\n`react-dom/server` in Bun (correctly) chooses `react-dom/server.bun`,\r\nbut `react-dom/server.bun` currently can't be imported because it is not\r\nincluded in package.json `\"exports\"` (`react-dom/server` works,\r\n`react-dom/server.bun` doesn't). Previously, I didn't think it was\r\nnecessary to do that, but it is too easy to accidentally run the browser\r\nbuild in unit tests when importing `react-dom/server`\r\n\r\nThis also aligns behavior of package.json `\"exports\"` of\r\n`react-dom/server.bun` with `react-dom/server.browser`,\r\n`react-dom/server.node`, and the rest.\r\n\r\n## How did you test this change?\r\n\r\nManually edited package.json in node_modules in a separate folder and\r\nran tests in Bun with `react-dom/server.bun` as the import specifier\r\n\r\n<!--\r\nDemonstrate the code is solid. Example: The exact commands you ran and\r\ntheir output, screenshots / videos if the pull request changes the user\r\ninterface.\r\nHow exactly did you verify that your PR solves the issue you wanted to\r\nsolve?\r\n  If you leave this empty, your PR will very likely be closed.\r\n-->"
    },
    {
        "diff": "diff --git a/.github/workflows/commit_artifacts.yml b/a/.github/workflows/commit_artifacts.yml @@ -96,8 +96,8 @@ jobs:\n       - name: Strip @license from eslint plugin and react-refresh\n         run: |\n           sed -i -e 's/ @license React*//' \\\n-            build/oss-stable/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.development.js \\\n-            build/oss-stable/react-refresh/cjs/react-refresh-babel.development.js\n+            build/oss-experimental/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.development.js \\\n+            build/oss-experimental/react-refresh/cjs/react-refresh-babel.development.js\n       - name: Move relevant files into compiled\n         run: |\n           mkdir -p ./compiled\n@@ -111,15 +111,15 @@ jobs:\n           mv build/WARNINGS ./compiled/facebook-www/WARNINGS\n \n           # Copy eslint-plugin-react-hooks into facebook-www\n-          mv build/oss-stable/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.development.js \\\n+          mv build/oss-experimental/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.development.js \\\n             ./compiled/facebook-www/eslint-plugin-react-hooks.js\n \n           # Copy unstable_server-external-runtime.js into facebook-www\n           mv build/oss-stable/react-dom/unstable_server-external-runtime.js \\\n             ./compiled/facebook-www/unstable_server-external-runtime.js\n \n           # Copy react-refresh-babel.development.js into babel-plugin-react-refresh\n-          mv build/oss-stable/react-refresh/cjs/react-refresh-babel.development.js \\\n+          mv build/oss-experimental/react-refresh/cjs/react-refresh-babel.development.js \\\n             ./compiled/babel-plugin-react-refresh/index.js\n \n           ls -R ./compiled",
        "date": "2023-03-16T01:01:07Z",
        "msg": "Sync from oss-experimental, not oss-stable (#26401)\n\n## Overview\r\n\r\nTo test useEffectEvent, we need the experimental build of the lint\r\nplugin."
    },
    {
        "diff": "diff --git a/packages/react-native-renderer/src/ReactFabricGlobalResponderHandler.js b/a/packages/react-native-renderer/src/ReactFabricGlobalResponderHandler.js @@ -9,7 +9,7 @@\n \n const ReactFabricGlobalResponderHandler = {\n   onChange: function (from: any, to: any, blockNativeResponder: boolean) {\n-    if (from) {\n+    if (from && from.stateNode) {\n       // equivalent to clearJSResponder\n       nativeFabricUIManager.setIsJSResponder(\n         from.stateNode.node,\n@@ -18,7 +18,7 @@ const ReactFabricGlobalResponderHandler = {\n       );\n     }\n \n-    if (to) {\n+    if (to && to.stateNode) {\n       // equivalent to setJSResponder\n       nativeFabricUIManager.setIsJSResponder(\n         to.stateNode.node,",
        "date": "2023-03-15T10:30:40Z",
        "msg": "Restore some guards in ReactFabricGlobalResponderHandler after refactor (#26394)\n\n## Summary\r\n\r\nI refactored this code in #26290 but forgot to add guards when the fiber\r\nor the state node where null, and this is typed as `any` so Flow didn't\r\ncatch it.\r\n\r\nThis restores the same logic to guard against null.\r\n\r\n## How did you test this change?\r\n\r\nExisting tests."
    },
    {
        "diff": "diff --git a/fixtures/flight/src/index.js b/a/fixtures/flight/src/index.js @@ -27,12 +27,7 @@ let data = createFromFetch(\n   }\n );\n \n-// TODO: Once not needed once children can be promises.\n-function Content() {\n-  return React.use(data);\n-}\n-\n // TODO: This transition shouldn't really be necessary but it is for now.\n React.startTransition(() => {\n-  ReactDOM.hydrateRoot(document, <Content />);\n+  ReactDOM.hydrateRoot(document, data);\n });",
        "date": "2023-03-14T15:14:53Z",
        "msg": "[Flight fixture] Remove redundant `use` (#26373)\n\nNow that promises are renderable nodes, we can remove the `use` call\r\nfrom the root of the Flight fixture.\r\n\r\nUncached promises will likely be accompanied by a warning when they are\r\nrendered outside a transition. But this promise is the result of a\r\nFlight response, so it's cached. And it's also a rendered as part of a\r\ntransition. So it's fine. Indeed, this is the canonical way to use this\r\nfeature."
    },
    {
        "diff": "diff --git a/scripts/rollup/forks.js b/a/scripts/rollup/forks.js @@ -135,14 +135,6 @@ const forks = Object.freeze({\n             return './packages/shared/forks/ReactFeatureFlags.test-renderer.www.js';\n         }\n         return './packages/shared/forks/ReactFeatureFlags.test-renderer.js';\n-      case 'react-dom/unstable_testing':\n-        switch (bundleType) {\n-          case FB_WWW_DEV:\n-          case FB_WWW_PROD:\n-          case FB_WWW_PROFILING:\n-            return './packages/shared/forks/ReactFeatureFlags.testing.www.js';\n-        }\n-        return './packages/shared/forks/ReactFeatureFlags.testing.js';\n       default:\n         switch (bundleType) {\n           case FB_WWW_DEV:",
        "date": "2023-03-13T22:43:37Z",
        "msg": "Remove FeatureFlags fork for `react-dom/unstable_testing` (#26383)\n\nThis doesn't need its own set of flags. We use things like `__PROFILE__`\r\nin the regular feature flags file to fork for the `react-dom/profiling`\r\nbuild so we can do the same here if needed but I don't think we actually\r\nneed to fork this anywhere as far as I can tell."
    },
    {
        "diff": "diff --git a/packages/react-devtools-shared/src/__tests__/storeComponentFilters-test.js b/a/packages/react-devtools-shared/src/__tests__/storeComponentFilters-test.js @@ -17,10 +17,9 @@ describe('Store component filters', () => {\n   let legacyRender;\n   let store: Store;\n   let utils;\n-  let internalAct;\n \n   const act = async (callback: Function) => {\n-    await internalAct(callback);\n+    await React.unstable_act(callback);\n     jest.runAllTimers(); // Flush Bridge operations\n   };\n \n@@ -34,7 +33,6 @@ describe('Store component filters', () => {\n     React = require('react');\n     Types = require('react-devtools-shared/src/types');\n     utils = require('./utils');\n-    internalAct = require('internal-test-utils').act;\n \n     legacyRender = utils.legacyRender;\n   });",
        "date": "2023-03-12T16:58:58Z",
        "msg": "Remove internal `act` from DevTools e2e test (#26376)\n\nFor various reasons some of the DevTools e2e tests uses our repo's\r\nprivate internal version of `act`. It should really just be using the\r\npublic one.\r\n\r\nThis converts one of the usages, because it was causing CI to fail."
    },
    {
        "diff": "diff --git a/scripts/jest/setupTests.www.js b/a/scripts/jest/setupTests.www.js @@ -6,16 +6,7 @@ jest.mock('shared/ReactFeatureFlags', () => {\n     () => jest.requireActual('shared/forks/ReactFeatureFlags.www-dynamic'),\n     {virtual: true}\n   );\n-\n-  const wwwFlags = jest.requireActual('shared/forks/ReactFeatureFlags.www');\n-  const defaultFlags = jest.requireActual('shared/ReactFeatureFlags');\n-\n-  // TODO: Many tests were written before we started running them against the\n-  // www configuration. Update those tests so that they work against the www\n-  // configuration, too. Then remove these overrides.\n-  wwwFlags.disableJavaScriptURLs = defaultFlags.disableJavaScriptURLs;\n-\n-  return wwwFlags;\n+  return jest.requireActual('shared/forks/ReactFeatureFlags.www');\n });\n \n jest.mock('scheduler/src/SchedulerFeatureFlags', () => {",
        "date": "2023-03-11T20:46:16Z",
        "msg": "Remote `.internal` override from untrusted URL tests (#26372)\n\nAdding `.internal` to a test file prevents it from being tested in build\r\nmode. The best practice is to instead gate the test based on whether the\r\nfeature is enabled.\r\n\r\nIdeally we'd use the `@gate` pragma in these tests, but the `itRenders`\r\ntest helpers don't support that."
    },
    {
        "diff": "diff --git a/fixtures/flight/server/global.js b/a/fixtures/flight/server/global.js @@ -157,7 +157,13 @@ app.all('/', async function (req, res, next) {\n       const rscResponse = await promiseForData;\n       // For other request, we pass-through the RSC payload.\n       res.set('Content-type', 'text/x-component');\n-      rscResponse.pipe(res);\n+      rscResponse.on('data', data => {\n+        res.write(data);\n+        res.flush();\n+      });\n+      rscResponse.on('end', data => {\n+        res.end();\n+      });\n     } catch (e) {\n       console.error(`Failed to proxy request: ${e.stack}`);\n       res.statusCode = 500;",
        "date": "2023-03-11T00:48:46Z",
        "msg": "[Flight Fixture] Fix proxying with compression (#26368)\n\nWe're decompressing and then writing and recompressing in the proxy.\r\nThis causes it to stall if buffered because `.pipe()` doesn't force\r\nflush automatically."
    },
    {
        "diff": "diff --git a/packages/react-devtools-shared/src/backend/StyleX/utils.js b/a/packages/react-devtools-shared/src/backend/StyleX/utils.js @@ -67,7 +67,10 @@ function crawlObjectProperties(\n         // Special case; this key is the name of the style's source/file/module.\n         sources.add(key);\n       } else {\n-        resolvedStyles[key] = getPropertyValueForStyleName(value);\n+        const propertyValue = getPropertyValueForStyleName(value);\n+        if (propertyValue != null) {\n+          resolvedStyles[key] = propertyValue;\n+        }\n       }\n     } else {\n       const nestedStyle = {};\n@@ -90,13 +93,19 @@ function getPropertyValueForStyleName(styleName: string): string | null {\n     const styleSheet = ((document.styleSheets[\n       styleSheetIndex\n     ]: any): CSSStyleSheet);\n-    // $FlowFixMe Flow doesn't konw about these properties\n-    const rules = styleSheet.rules || styleSheet.cssRules;\n-    // $FlowFixMe `rules` is mixed\n+    let rules: CSSRuleList | null = null;\n+    // this might throw if CORS rules are enforced https://www.w3.org/TR/cssom-1/#the-cssstylesheet-interface\n+    try {\n+      rules = styleSheet.cssRules;\n+    } catch (_e) {\n+      continue;\n+    }\n+\n     for (let ruleIndex = 0; ruleIndex < rules.length; ruleIndex++) {\n-      // $FlowFixMe `rules` is mixed\n-      const rule = rules[ruleIndex];\n-      // $FlowFixMe Flow doesn't konw about these properties\n+      if (!(rules[ruleIndex] instanceof CSSStyleRule)) {\n+        continue;\n+      }\n+      const rule = ((rules[ruleIndex]: any): CSSStyleRule);\n       const {cssText, selectorText, style} = rule;\n \n       if (selectorText != null) {",
        "date": "2023-03-10T20:43:05Z",
        "msg": "[DevTools] prevent StyleX plugin from throwing when inspecting CSS (#26364)\n\n## Summary\r\n\r\nAn error might happen when we try to read the CSS rules, but the\r\nstylesheet does not allow so (often happens on production).\r\n\r\nBefore:\r\n<img width=\"713\" alt=\"image\"\r\nsrc=\"https://user-images.githubusercontent.com/1001890/224376546-024f7a32-d314-4dd1-9333-7e47d96a2b7c.png\">\r\n\r\nAfter:\r\n\r\n<img width=\"504\" alt=\"image\"\r\nsrc=\"https://user-images.githubusercontent.com/1001890/224376426-964a33c4-0677-4a51-91c2-74074e4dde63.png\">\r\n\r\n\r\n## How did you test this change?\r\n\r\nBuilt a fb version and tested locally (see above screenshot)\r\n\r\n---------\r\n\r\nCo-authored-by: Hendrik Liebau <mail@hendrik-liebau.de>"
    },
    {
        "diff": "diff --git a/packages/internal-test-utils/enqueueTask.js b/a/packages/internal-test-utils/enqueueTask.js @@ -11,6 +11,9 @@ const {MessageChannel} = require('node:worker_threads');\n \n export default function enqueueTask(task: () => void): void {\n   const channel = new MessageChannel();\n-  channel.port1.onmessage = task;\n+  channel.port1.onmessage = () => {\n+    channel.port1.close();\n+    task();\n+  };\n   channel.port2.postMessage(undefined);\n }",
        "date": "2023-03-09T16:20:07Z",
        "msg": "[Internal tests] Close MessageChannel port to prevent leak (#26357)\n\nNode's MessageChannel implementation will leak if you don't explicitly\r\nclose the port. This updates the enqueueTask function we use in our\r\ninternal testing helpers to close the port once it's no longer needed."
    },
    {
        "diff": "diff --git a/scripts/rollup/build-all-release-channels.js b/a/scripts/rollup/build-all-release-channels.js @@ -332,7 +332,7 @@ function updatePlaceholderReactVersionInCompiledArtifacts(\n \n   for (const artifactFilename of artifactFilenames) {\n     const originalText = fs.readFileSync(artifactFilename, 'utf8');\n-    const replacedText = originalText.replace(\n+    const replacedText = originalText.replaceAll(\n       PLACEHOLDER_REACT_VERSION,\n       newVersion\n     );",
        "date": "2023-03-06T20:38:43Z",
        "msg": "Build: make version in build artifacts match (#26329)\n\nSome build artifacts contain multiple version strings. It seems like an\r\noversight to me that this `.replace` call just replaces the one that\r\nhappens to be first."
    },
    {
        "diff": "diff --git a/.codesandbox/ci.json b/a/.codesandbox/ci.json @@ -1,7 +1,7 @@\n {\n   \"packages\": [\"packages/react\", \"packages/react-dom\", \"packages/scheduler\"],\n   \"buildCommand\": \"download-build-in-codesandbox-ci\",\n-  \"node\": \"14\",\n+  \"node\": \"18\",\n   \"publishDirectory\": {\n     \"react\": \"build/oss-experimental/react\",\n     \"react-dom\": \"build/oss-experimental/react-dom\",",
        "date": "2023-03-06T20:38:03Z",
        "msg": "Codesandbox: upgrade to Node.js 18 (#26330)\n\nTurns out Codesandbox didn't support `String.prototype.replaceAll` in\r\n#26329.\r\n\r\nThis updates the config to use Node.js 18 for Codesandbox builds."
    },
    {
        "diff": "diff --git a/packages/react-dom-bindings/src/server/ReactDOMServerExternalRuntime.js b/a/packages/react-dom-bindings/src/server/ReactDOMServerExternalRuntime.js @@ -21,35 +21,37 @@ if (!window.$RC) {\n   window.$RM = new Map();\n }\n \n-if (document.readyState === 'loading') {\n-  if (document.body != null) {\n+if (document.body != null) {\n+  if (document.readyState === 'loading') {\n     installFizzInstrObserver(document.body);\n-  } else {\n-    // body may not exist yet if the fizz runtime is sent in <head>\n-    // (e.g. as a preinit resource)\n-    // $FlowFixMe[recursive-definition]\n-    const domBodyObserver = new MutationObserver(() => {\n-      // We expect the body node to be stable once parsed / created\n-      if (document.body) {\n-        if (document.readyState === 'loading') {\n-          installFizzInstrObserver(document.body);\n-        }\n-        handleExistingNodes();\n-        // We can call disconnect without takeRecord here,\n-        // since we only expect a single document.body\n-        domBodyObserver.disconnect();\n-      }\n-    });\n-    // documentElement must already exist at this point\n-    // $FlowFixMe[incompatible-call]\n-    domBodyObserver.observe(document.documentElement, {childList: true});\n   }\n-}\n+  // $FlowFixMe[incompatible-cast]\n+  handleExistingNodes((document.body /*: HTMLElement */));\n+} else {\n+  // Document must be loading -- body may not exist yet if the fizz external\n+  // runtime is sent in <head> (e.g. as a preinit resource)\n+  // $FlowFixMe[recursive-definition]\n+  const domBodyObserver = new MutationObserver(() => {\n+    // We expect the body node to be stable once parsed / created\n+    if (document.body != null) {\n+      if (document.readyState === 'loading') {\n+        installFizzInstrObserver(document.body);\n+      }\n+      // $FlowFixMe[incompatible-cast]\n+      handleExistingNodes((document.body /*: HTMLElement */));\n \n-handleExistingNodes();\n+      // We can call disconnect without takeRecord here,\n+      // since we only expect a single document.body\n+      domBodyObserver.disconnect();\n+    }\n+  });\n+  // documentElement must already exist at this point\n+  // $FlowFixMe[incompatible-call]\n+  domBodyObserver.observe(document.documentElement, {childList: true});\n+}\n \n-function handleExistingNodes() {\n-  const existingNodes = document.getElementsByTagName('template');\n+function handleExistingNodes(target /*: HTMLElement */) {\n+  const existingNodes = target.querySelectorAll('template');\n   for (let i = 0; i < existingNodes.length; i++) {\n     handleNode(existingNodes[i]);\n   }\n@@ -60,8 +62,8 @@ function installFizzInstrObserver(target /*: Node */) {\n     for (let i = 0; i < mutations.length; i++) {\n       const addedNodes = mutations[i].addedNodes;\n       for (let j = 0; j < addedNodes.length; j++) {\n-        if (addedNodes.item(j).parentNode) {\n-          handleNode(addedNodes.item(j));\n+        if (addedNodes[j].parentNode) {\n+          handleNode(addedNodes[j]);\n         }\n       }\n     }",
        "date": "2023-03-04T16:26:59Z",
        "msg": "[Fizz] External runtime: fix bug in processing existing elements (#26303)\n\n## Summary\r\nFix bug in how the Fizz external runtime processes existing template\r\nelements.\r\n\r\nBug:\r\n- getElementsByTagName returns a HTMLCollection, which is live.\r\n- while iterating over an HTMLCollection, we call handleNode which\r\nremoves nodes\r\n\r\nFix:\r\n- Call Array.from to copy children of `document.body` before processing.\r\n- We could use `querySelectorAll` instead, but that is likely slower due\r\nto reading more nodes.\r\n\r\n## How did you test this change?\r\n\r\nDid ad-hoc testing on Facebook home page by commenting out the mutation\r\nobserver and adding the following.\r\n```javascript\r\n  window.addEventListener('DOMContentLoaded', function () {\r\n    handleExistingNodes(document.body);\r\n  });\r\n```"
    },
    {
        "diff": "diff --git a/packages/react-native-renderer/src/ReactFabricGlobalResponderHandler.js b/a/packages/react-native-renderer/src/ReactFabricGlobalResponderHandler.js @@ -7,42 +7,24 @@\n  * @flow\n  */\n \n-// Module provided by RN:\n-import {UIManager} from 'react-native/Libraries/ReactPrivate/ReactNativePrivateInterface';\n-\n const ReactFabricGlobalResponderHandler = {\n   onChange: function (from: any, to: any, blockNativeResponder: boolean) {\n-    const fromOrTo = from || to;\n-    const fromOrToStateNode = fromOrTo && fromOrTo.stateNode;\n-    const isFabric = !!(\n-      fromOrToStateNode && fromOrToStateNode.canonical._internalInstanceHandle\n-    );\n-\n-    if (isFabric) {\n-      if (from) {\n-        // equivalent to clearJSResponder\n-        nativeFabricUIManager.setIsJSResponder(\n-          from.stateNode.node,\n-          false,\n-          blockNativeResponder || false,\n-        );\n-      }\n+    if (from) {\n+      // equivalent to clearJSResponder\n+      nativeFabricUIManager.setIsJSResponder(\n+        from.stateNode.node,\n+        false,\n+        blockNativeResponder || false,\n+      );\n+    }\n \n-      if (to) {\n-        // equivalent to setJSResponder\n-        nativeFabricUIManager.setIsJSResponder(\n-          to.stateNode.node,\n-          true,\n-          blockNativeResponder || false,\n-        );\n-      }\n-    } else {\n-      if (to !== null) {\n-        const tag = to.stateNode.canonical._nativeTag;\n-        UIManager.setJSResponder(tag, blockNativeResponder);\n-      } else {\n-        UIManager.clearJSResponder();\n-      }\n+    if (to) {\n+      // equivalent to setJSResponder\n+      nativeFabricUIManager.setIsJSResponder(\n+        to.stateNode.node,\n+        true,\n+        blockNativeResponder || false,\n+      );\n     }\n   },\n };",
        "date": "2023-03-03T23:39:04Z",
        "msg": "Remove unnecessary (and incorrect) code for compatibility with Paper in the Fabric version of GlobalResponderHandler (#26290)\n\n## Summary\r\n\r\nI'm working on a refactor of the definition of `Instance` in Fabric and\r\nI came across this code that seemed to be for compatibility with Paper,\r\nbut that it would actually throw an error in that case.\r\n\r\nIn Paper, `stateNode` is an instance of `ReactNativeFiberHostComponent`,\r\nwhich doesn't have a `canonical` field. We try to access nested\r\nproperties in that field in a couple of places here, which would throw a\r\ntype error (cannot read property `_nativeTag` of `undefined`) if we\r\nactually happened to pass a reference to a Paper state node.\r\n\r\nIn this line:\r\n\r\n```javascript\r\nconst isFabric = !!(\r\n      fromOrToStateNode && fromOrToStateNode.canonical._internalInstanceHandle\r\n    );\r\n```\r\n\r\nIf it wasn't Fabric, `fromOrToStateNode.canonical` would be undefined,\r\nand we don't check for that before accessing\r\n`fromOrToStateNode.canonical._internalInstanceHandle`. This means that\r\nwe actually never use this logic in Paper or we would've seen the error.\r\n\r\n## How did you test this change?\r\n\r\nExisting tests."
    },
    {
        "diff": "diff --git a/packages/react-reconciler/src/ReactFiberWorkLoop.js b/a/packages/react-reconciler/src/ReactFiberWorkLoop.js @@ -1846,19 +1846,34 @@ function handleThrow(root: FiberRoot, thrownValue: any): void {\n \n   if (enableSchedulingProfiler) {\n     markComponentRenderStopped();\n-    if (workInProgressSuspendedReason !== SuspendedOnError) {\n-      const wakeable: Wakeable = (thrownValue: any);\n-      markComponentSuspended(\n-        erroredWork,\n-        wakeable,\n-        workInProgressRootRenderLanes,\n-      );\n-    } else {\n-      markComponentErrored(\n-        erroredWork,\n-        thrownValue,\n-        workInProgressRootRenderLanes,\n-      );\n+    switch (workInProgressSuspendedReason) {\n+      case SuspendedOnError: {\n+        markComponentErrored(\n+          erroredWork,\n+          thrownValue,\n+          workInProgressRootRenderLanes,\n+        );\n+        break;\n+      }\n+      case SuspendedOnData:\n+      case SuspendedOnImmediate:\n+      case SuspendedOnDeprecatedThrowPromise:\n+      case SuspendedAndReadyToUnwind: {\n+        const wakeable: Wakeable = (thrownValue: any);\n+        markComponentSuspended(\n+          erroredWork,\n+          wakeable,\n+          workInProgressRootRenderLanes,\n+        );\n+        break;\n+      }\n+      case SuspendedOnHydration: {\n+        // This is conceptually like a suspend, but it's not associated with\n+        // a particular wakeable. DevTools doesn't seem to care about this case,\n+        // currently. It's similar to if the component were interrupted, which\n+        // we don't mark with a special function.\n+        break;\n+      }\n     }\n   }\n }",
        "date": "2023-03-01T16:38:48Z",
        "msg": "Fix: Selective hydration causing incorrect thenable type passed to DevTools (#26275)\n\nSelective hydration is implemented by suspending the current render\r\nusing a special internal opaque object. This is conceptually similar to\r\nsuspending with a thenable in userspace, but the opaque object should\r\nnot leak outside of the reconciler.\r\n\r\nWe were accidentally passing this object to DevTool's\r\nmarkComponentSuspended function, which expects an actual thenable. This\r\nhappens in the error handling path (handleThrow).\r\n\r\nThe fix is to check for the exception reason before calling\r\nmarkComponentSuspended. There was already a naive check in place, but it\r\ndidn't account for all possible enum values of the exception reason."
    },
    {
        "diff": "diff --git a/packages/react-devtools-extensions/src/contentScripts/prepareInjection.js b/a/packages/react-devtools-extensions/src/contentScripts/prepareInjection.js @@ -26,10 +26,8 @@ function injectScriptSync(src) {\n function injectScriptAsync(src) {\n   const script = document.createElement('script');\n   script.src = src;\n-  script.onload = function () {\n-    script.remove();\n-  };\n   nullthrows(document.documentElement).appendChild(script);\n+  nullthrows(script.parentNode).removeChild(script);\n }\n \n let lastDetectionResult;",
        "date": "2023-02-24T20:13:05Z",
        "msg": "[DevTools] remove script tag immediately (#26233)\n\nFixes https://github.com/facebook/react/issues/25924 for React DevTools\r\nspecifically.\r\n\r\n## Summary\r\n\r\nIf we remove the script after it's loaded, it creates a race condition\r\nwith other code. If some other code is searching for the first script\r\ntag or first element of the document, this might broke it.\r\n\r\n## How did you test this change?\r\n\r\nI've tested in my local build that even if we remove the script tag\r\nimmediately, the code is still correctly executed."
    },
    {
        "diff": "diff --git a/packages/react-devtools-extensions/src/main.js b/a/packages/react-devtools-extensions/src/main.js @@ -30,29 +30,20 @@ const LOCAL_STORAGE_SUPPORTS_PROFILING_KEY =\n const isChrome = getBrowserName() === 'Chrome';\n const isEdge = getBrowserName() === 'Edge';\n \n-// since Chromium v102, requestAnimationFrame no longer fires in devtools_page (i.e. this file)\n-// mock requestAnimationFrame with setTimeout as a temporary workaround\n-// https://github.com/facebook/react/issues/24626\n-if (isChrome || isEdge) {\n-  const timeoutID = setTimeout(() => {\n-    // if requestAnimationFrame is not working, polyfill it\n-    // The polyfill is based on https://gist.github.com/jalbam/5fe05443270fa6d8136238ec72accbc0\n-    const FRAME_TIME = 16;\n-    let lastTime = 0;\n-    window.requestAnimationFrame = function (callback, element) {\n-      const now = window.performance.now();\n-      const nextTime = Math.max(lastTime + FRAME_TIME, now);\n-      return setTimeout(function () {\n-        callback((lastTime = nextTime));\n-      }, nextTime - now);\n-    };\n-    window.cancelAnimationFrame = clearTimeout;\n-  }, 400);\n-\n-  requestAnimationFrame(() => {\n-    clearTimeout(timeoutID);\n-  });\n-}\n+// rAF never fires on devtools_page (because it's in the background)\n+// https://bugs.chromium.org/p/chromium/issues/detail?id=1241986#c31\n+// Since we render React elements here, we need to polyfill it with setTimeout\n+// The polyfill is based on https://gist.github.com/jalbam/5fe05443270fa6d8136238ec72accbc0\n+const FRAME_TIME = 16;\n+let lastTime = 0;\n+window.requestAnimationFrame = function (callback, element) {\n+  const now = window.performance.now();\n+  const nextTime = Math.max(lastTime + FRAME_TIME, now);\n+  return setTimeout(function () {\n+    callback((lastTime = nextTime));\n+  }, nextTime - now);\n+};\n+window.cancelAnimationFrame = clearTimeout;\n \n let panelCreated = false;\n ",
        "date": "2023-02-23T21:53:11Z",
        "msg": "[DevTools] permanently polyfill for rAF in devtools_page (#26193)\n\n## Summary\r\n\r\nWe had this as a temporary fix for #24626. Now that Chrome team decides\r\nto turn the flag on again (with good reasons explained in\r\nhttps://bugs.chromium.org/p/chromium/issues/detail?id=1241986#c31), we\r\nwill turn it into a long term solution.\r\nIn the future, we want to explore whether we can render React elements\r\non panel.html instead, as `requestAnimationFrame` produces higher\r\nquality animation.\r\n\r\n## How did you test this change?\r\n\r\nTested on local build with \"Throttle non-visible cross-origin iframes\"\r\nflag enabled."
    },
    {
        "diff": "diff --git a/.github/workflows/commit_artifacts.yml b/a/.github/workflows/commit_artifacts.yml @@ -152,7 +152,7 @@ jobs:\n           commit_message: |\n             ${{ github.event.head_commit.message }}\n \n-            DiffTrain build for commit ${{ github.sha }}.\n+            DiffTrain build for [${{ github.sha }}](https://github.com/facebook/react/commit/${{ github.sha }})\n           branch: builds/facebook-www\n           commit_user_name: ${{ github.actor }}\n           commit_user_email: ${{ github.actor }}@users.noreply.github.com",
        "date": "2023-02-23T15:59:22Z",
        "msg": "[difftrain] Make github sha clickable for easier debugging (#26225)"
    },
    {
        "diff": "diff --git a/scripts/tasks/flow.js b/a/scripts/tasks/flow.js @@ -34,7 +34,9 @@ if (!primaryRenderer) {\n     }\n   });\n   console.log();\n-  console.log('If you are not sure, run ' + chalk.green('yarn flow dom') + '.');\n+  console.log(\n+    'If you are not sure, run ' + chalk.green('yarn flow dom-node') + '.'\n+  );\n   console.log(\n     'This will still typecheck non-DOM packages, although less precisely.'\n   );",
        "date": "2023-02-21T20:30:34Z",
        "msg": "Bug: yarn flow dom does not exist, so console should suggest yarn flow dom-node (#26213)\n\n<!--\r\n  Thanks for submitting a pull request!\r\nWe appreciate you spending the time to work on these changes. Please\r\nprovide enough information so that others can review your pull request.\r\nThe three fields below are mandatory.\r\n\r\nBefore submitting a pull request, please make sure the following is\r\ndone:\r\n\r\n1. Fork [the repository](https://github.com/facebook/react) and create\r\nyour branch from `main`.\r\n  2. Run `yarn` in the repository root.\r\n3. If you've fixed a bug or added code that should be tested, add tests!\r\n4. Ensure the test suite passes (`yarn test`). Tip: `yarn test --watch\r\nTestName` is helpful in development.\r\n5. Run `yarn test --prod` to test in the production environment. It\r\nsupports the same options as `yarn test`.\r\n6. If you need a debugger, run `yarn test --debug --watch TestName`,\r\nopen `chrome://inspect`, and press \"Inspect\".\r\n7. Format your code with\r\n[prettier](https://github.com/prettier/prettier) (`yarn prettier`).\r\n8. Make sure your code lints (`yarn lint`). Tip: `yarn linc` to only\r\ncheck changed files.\r\n  9. Run the [Flow](https://flowtype.org/) type checks (`yarn flow`).\r\n  10. If you haven't already, complete the CLA.\r\n\r\nLearn more about contributing:\r\nhttps://reactjs.org/docs/how-to-contribute.html\r\n-->\r\n\r\n## Summary\r\nThe `yarn flow` command, as suggested for every PR Submission (Task No.\r\n9), tells us `The yarn flow command now requires you to pick a primary\r\nrenderer` and provides a list for the same. However, in at the bottom of\r\nthe prompt, it suggests `If you are not sure, run yarn flow dom`. This\r\ncommand `yarn flow dom` does not exist in the list and thus the command\r\ndoes nothing and exits with `status code 1` without any flow test.\r\n\r\n<!--\r\nExplain the **motivation** for making this change. What existing problem\r\ndoes the pull request solve?\r\n-->\r\nWhile trying to submit a different PR for code cleaning, just during\r\nsubmission I read the PR Guidelines, and while doing `yarn test`, `yarn\r\nlint`, and `yarn flow`, I came across this issue and thought of\r\nsubmitting a PR for the same.\r\n\r\n## How did you test this change?\r\nSince this code change does not change any logic, just the text\r\ninformation, I only ran `yarn linc` and `yarn test` for the same.\r\n\r\n<!--\r\nDemonstrate the code is solid. Example: The exact commands you ran and\r\ntheir output, screenshots / videos if the pull request changes the user\r\ninterface.\r\nHow exactly did you verify that your PR solves the issue you wanted to\r\nsolve?\r\n  If you leave this empty, your PR will very likely be closed.\r\n-->\r\nHere is how the issue currently looks like:\r\n\r\n![facebook yarn flow\r\ndom](https://user-images.githubusercontent.com/20269286/220337686-b8a9b786-92e0-4c66-88a9-e94bfbed6edf.JPG)\r\n\r\nSigned-off-by: abhiram11 <abhiramsatpute@gmail.com>\r\nCo-authored-by: abhiram11 <abhiramsatpute@gmail.com>"
    },
    {
        "diff": "diff --git a/packages/react-dom-bindings/src/server/ReactDOMServerExternalRuntime.js b/a/packages/react-dom-bindings/src/server/ReactDOMServerExternalRuntime.js @@ -35,6 +35,8 @@ if (document.readyState === 'loading') {\n           installFizzInstrObserver(document.body);\n         }\n         handleExistingNodes();\n+        // We can call disconnect without takeRecord here,\n+        // since we only expect a single document.body\n         domBodyObserver.disconnect();\n       }\n     });\n@@ -54,7 +56,7 @@ function handleExistingNodes() {\n }\n \n function installFizzInstrObserver(target /*: Node */) {\n-  const fizzInstrObserver = new MutationObserver(mutations => {\n+  const handleMutations = (mutations /*: Array<MutationRecord> */) => {\n     for (let i = 0; i < mutations.length; i++) {\n       const addedNodes = mutations[i].addedNodes;\n       for (let j = 0; j < addedNodes.length; j++) {\n@@ -63,13 +65,16 @@ function installFizzInstrObserver(target /*: Node */) {\n         }\n       }\n     }\n-  });\n+  };\n+\n+  const fizzInstrObserver = new MutationObserver(handleMutations);\n   // We assume that instruction data nodes are eventually appended to the\n   // body, even if Fizz is streaming to a shell / subtree.\n   fizzInstrObserver.observe(target, {\n     childList: true,\n   });\n   window.addEventListener('DOMContentLoaded', () => {\n+    handleMutations(fizzInstrObserver.takeRecords());\n     fizzInstrObserver.disconnect();\n   });\n }",
        "date": "2023-02-21T17:10:23Z",
        "msg": "[fizz][external-runtime] Fix: process mutation records before disconnecting (#26169)\n\n> All notifications of mutations that have already been detected, but\r\nnot yet reported to the observer, are discarded. To hold on to and\r\nhandle the detected but unreported mutations, use the takeRecords()\r\nmethod.\r\n>    -- ([Mozilla docs for disconnect](\r\n\r\nhttps://developer.mozilla.org/en-US/docs/Web/API/MutationObserver/disconnect))\r\n\r\nFizz external runtime needs to process mutation records (representing\r\npotential Fizz instructions) before calling `disconnect()`. We currently\r\ndo not do this (and might drop some instructions)."
    },
    {
        "diff": "diff --git a/scripts/rollup/build.js b/a/scripts/rollup/build.js @@ -527,10 +527,6 @@ function resolveEntryFork(resolvedEntry, isFBBundle) {\n }\n \n async function createBundle(bundle, bundleType) {\n-  if (shouldSkipBundle(bundle, bundleType)) {\n-    return;\n-  }\n-\n   const filename = getFilename(bundle, bundleType);\n   const logKey =\n     chalk.white.bold(filename) + chalk.dim(` (${bundleType.toLowerCase()})`);\n@@ -766,6 +762,10 @@ async function buildEverything() {\n     );\n   }\n \n+  bundles = bundles.filter(([bundle, bundleType]) => {\n+    return !shouldSkipBundle(bundle, bundleType);\n+  });\n+\n   if (process.env.CIRCLE_NODE_TOTAL) {\n     // In CI, parallelize bundles across multiple tasks.\n     const nodeTotal = parseInt(process.env.CIRCLE_NODE_TOTAL, 10);",
        "date": "2023-02-20T21:16:23Z",
        "msg": "Distribute bundles more evenly into CI shards (#26208)\n\n## Summary\r\n\r\nPreviously, we distributed bundles into shards and then checked if we\r\nneed to actually build that bundle. This can under-utilize shards\r\nheavily (e.g.\r\nhttps://app.circleci.com/pipelines/github/facebook/react/38611/workflows/df9e56e7-d476-49ee-9392-d8b37c81aa66/jobs/630545/parallel-runs/28?filterBy=ALL\r\nonly building a single bundle).\r\n\r\nThis won't result in an optimal distribution but, if we're lucky, we\r\nmight end up with shard #26 not taking 7mins anymore. The slowest shard\r\nultimately decicdes when we can start with testing builds.\r\n\r\n## How did you test this change?\r\n\r\n- [x] `CIRCLE_NODE_INDEX=28 CIRCLE_NODE_TOTAL=40 yarn build` building\r\nmore than 1 bundle\r\n- [x] Check timings of `yarn_build` so that we don't up with an\r\nover-stuffed shard (e.g. a shard having to build all the expensive\r\nbundles). Casually dropping 60min idle time \ud83c\udf89:\r\n- Before:\r\nhttps://app.circleci.com/pipelines/github/facebook/react/38683/workflows/a41533d7-811c-439d-9751-214ba06035c5/jobs/632230/timing\r\n- After:\r\nhttps://app.circleci.com/pipelines/github/facebook/react/38686/workflows/8a770df6-5b3e-41ea-b3b5-10abeae703e7/jobs/632247/timing"
    },
    {
        "diff": "diff --git a/scripts/rollup/build-all-release-channels.js b/a/scripts/rollup/build-all-release-channels.js @@ -93,15 +93,24 @@ if (process.env.CIRCLE_NODE_TOTAL) {\n }\n \n function buildForChannel(channel, nodeTotal, nodeIndex) {\n-  spawnSync('node', ['./scripts/rollup/build.js', ...process.argv.slice(2)], {\n-    stdio: ['pipe', process.stdout, process.stderr],\n-    env: {\n-      ...process.env,\n-      RELEASE_CHANNEL: channel,\n-      CIRCLE_NODE_TOTAL: nodeTotal,\n-      CIRCLE_NODE_INDEX: nodeIndex,\n-    },\n-  });\n+  const {status} = spawnSync(\n+    'node',\n+    ['./scripts/rollup/build.js', ...process.argv.slice(2)],\n+    {\n+      stdio: ['pipe', process.stdout, process.stderr],\n+      env: {\n+        ...process.env,\n+        RELEASE_CHANNEL: channel,\n+        CIRCLE_NODE_TOTAL: nodeTotal,\n+        CIRCLE_NODE_INDEX: nodeIndex,\n+      },\n+    }\n+  );\n+\n+  if (status !== 0) {\n+    // Error of spawned process is already piped to this stderr\n+    process.exit(status);\n+  }\n }\n \n function processStable(buildDir) {",
        "date": "2023-02-20T20:59:21Z",
        "msg": "Fail yarn build if any bundle fails to build (#26207)\n\n## Summary\r\n\r\n`yarn build` would previously still exit with zero exit code hiding\r\nbuild errors such as\r\nhttps://app.circleci.com/pipelines/github/facebook/react/38609/workflows/62a73635-3bf3-4264-8c48-a61844a27764/jobs/630503/parallel-runs/11?filterBy=ALL&invite=true#step-105-17.\r\nThese issues are still surfaced due to missing size bot artifacts but\r\nthe overall PR status would still be green which we don't want.\r\n\r\nNow we just exit with the same exit has a the process of a single build\r\nif it's non-zero.\r\n\r\n## How did you test this change?\r\n\r\n- [x] fails based on the parent of\r\n62e6c4612ec704cf07c99b318bc8f26d3ec3f588:\r\nhttps://app.circleci.com/pipelines/github/facebook/react/38681/workflows/654c68ed-cebc-48d4-a156-bac719772f6f/jobs/632166\r\n- [x] passes based on `main`"
    },
    {
        "diff": "diff --git a/.github/workflows/commit_artifacts.yml b/a/.github/workflows/commit_artifacts.yml @@ -152,8 +152,7 @@ jobs:\n           commit_message: |\n             ${{ github.event.head_commit.message }}\n \n-            DiffTrain build for [${{ github.sha }}](https://github.com/facebook/react/commit/${{ github.sha }})\n-            [View git log for this commit](https://github.com/facebook/react/commits/${{ github.sha }})\n+            DiffTrain build for commit ${{ github.sha }}.\n           branch: builds/facebook-www\n           commit_user_name: ${{ github.actor }}\n           commit_user_email: ${{ github.actor }}@users.noreply.github.com",
        "date": "2023-02-20T15:17:44Z",
        "msg": "Change commit message for DiffTrain commigs (#26203)\n\nPreviously, the commit message looked something like this in Github: \r\n<img width=\"921\" alt=\"Screenshot 2023-02-20 at 13 52 35\"\r\nsrc=\"https://user-images.githubusercontent.com/1733610/220126265-d77931e0-18ac-46a0-bf23-d868f8af17a9.png\">\r\n\r\nWith this change, it will look like:\r\n\r\nDiffTrain build for commit db5e6250d4bbb70c5085c58694a2e9c78c3f6371."
    },
    {
        "diff": "diff --git a/packages/react-devtools-shared/src/__tests__/utils-test.js b/a/packages/react-devtools-shared/src/__tests__/utils-test.js @@ -260,12 +260,14 @@ describe('utils', () => {\n       expect(gte('1.2.3', '1.2.1')).toBe(true);\n       expect(gte('1.2.1', '1.2.1')).toBe(true);\n       expect(gte('1.2.1', '1.2.2')).toBe(false);\n+      expect(gte('10.0.0', '9.0.0')).toBe(true);\n     });\n \n     it('gt should compare versions correctly', () => {\n       expect(gt('1.2.3', '1.2.1')).toBe(true);\n       expect(gt('1.2.1', '1.2.1')).toBe(false);\n       expect(gt('1.2.1', '1.2.2')).toBe(false);\n+      expect(gte('10.0.0', '9.0.0')).toBe(true);\n     });\n   });\n });",
        "date": "2023-02-20T14:36:48Z",
        "msg": "add test case for semver major comparisons"
    },
    {
        "diff": "diff --git a/scripts/rollup/build.js b/a/scripts/rollup/build.js @@ -564,7 +564,8 @@ async function createBundle(bundle, bundleType) {\n   const rollupConfig = {\n     input: resolvedEntry,\n     treeshake: {\n-      pureExternalModules,\n+      moduleSideEffects: (id, external) =>\n+        !(external && pureExternalModules.includes(id)),\n     },\n     external(id) {\n       const containsThisModule = pkg => id === pkg || id.startsWith(pkg + '/');",
        "date": "2023-02-20T05:04:26Z",
        "msg": "Update rollup config to use moduleSideEffects (#26199)\n\n## Summary\r\n\r\nIn rollup v1.19.4, The \"treeshake.pureExternalModules\" option is\r\ndeprecated. The \"treeshake.moduleSideEffects\" option should be used\r\ninstead, see\r\nhttps://github.com/rollup/rollup/blob/v1.19.4/src/Graph.ts#L130.\r\n\r\n## How did you test this change?\r\n\r\nci green"
    },
    {
        "diff": "diff --git a/packages/react-devtools/app.js b/a/packages/react-devtools/app.js @@ -3,8 +3,6 @@\n  *\n  * This source code is licensed under the MIT license found in the\n  * LICENSE file in the root directory of this source tree.\n- *\n- * @flow\n  */\n \n const {app, BrowserWindow} = require('electron'); // Module to create native browser window.\n@@ -40,17 +38,12 @@ app.on('ready', function () {\n   }\n \n   // https://stackoverflow.com/questions/32402327/\n-  // $FlowFixMe[incompatible-use] found when upgrading Flow\n-  mainWindow.webContents.on(\n-    'new-window',\n-    function (event: $FlowFixMe, url: $FlowFixMe) {\n-      event.preventDefault();\n-      require('electron').shell.openExternal(url);\n-    },\n-  );\n+  mainWindow.webContents.on('new-window', function (event, url) {\n+    event.preventDefault();\n+    require('electron').shell.openExternal(url);\n+  });\n \n   // and load the index.html of the app.\n-  // $FlowFixMe[incompatible-use] found when upgrading Flow\n   mainWindow.loadURL('file://' + __dirname + '/app.html'); // eslint-disable-line no-path-concat\n   // $FlowFixMe[incompatible-use] found when upgrading Flow\n   mainWindow.webContents.executeJavaScript(\n@@ -61,7 +54,6 @@ app.on('ready', function () {\n   );\n \n   // Emitted when the window is closed.\n-  // $FlowFixMe[incompatible-use] found when upgrading Flow\n   mainWindow.on('closed', function () {\n     mainWindow = null;\n   });",
        "date": "2023-02-17T16:54:43Z",
        "msg": "remove flow check in electron app.js (#26184)\n\nWhen we were upgrading flow in\r\nhttps://github.com/facebook/react/commit/6ddcbd4f96cb103de3978617a53c200baf5b546c\r\nwe added `$FlowFixMe` for some parameters in this file. However, this\r\nfile is not compiled at all, and the `:` syntax breaks the code.\r\n\r\nThis PR removes the flow check in this file"
    },
    {
        "diff": "diff --git a/packages/react-dom/src/__tests__/ReactTestUtils-test.js b/a/packages/react-dom/src/__tests__/ReactTestUtils-test.js @@ -463,4 +463,19 @@ describe('ReactTestUtils', () => {\n     ReactTestUtils.renderIntoDocument(<Component />);\n     expect(mockArgs.length).toEqual(0);\n   });\n+  it('should find rendered component with type in document', () => {\n+    class MyComponent extends React.Component {\n+      render() {\n+        return true;\n+      }\n+    }\n+\n+    const instance = ReactTestUtils.renderIntoDocument(<MyComponent />);\n+    const renderedComponentType = ReactTestUtils.findRenderedComponentWithType(\n+      instance,\n+      MyComponent,\n+    );\n+\n+    expect(renderedComponentType).toBe(instance);\n+  });\n });",
        "date": "2023-02-17T11:23:10Z",
        "msg": "Test :Add a small test for ReactTestUtils to find rendered component with type in document (#24368)\n\nI tried to write test for the ReactTestUtils to find rendered component\r\nwith type in document\r\n\r\nTests before this PR\r\n\r\n![Windows PowerShell 4_13_2022 11_35_24\r\nPM](https://user-images.githubusercontent.com/72331432/163243620-40eb753c-4136-4793-a628-efcf9e004562.png)\r\n\r\n\r\nTests after this PR \r\n\r\n![Windows PowerShell 4_13_2022 11_35_30\r\nPM](https://user-images.githubusercontent.com/72331432/163244704-cd17f0e3-7289-4794-895a-be03753e46de.png)"
    },
    {
        "diff": "diff --git a/.github/workflows/commit_artifacts.yml b/a/.github/workflows/commit_artifacts.yml @@ -8,17 +8,11 @@ jobs:\n   download_artifacts:\n     runs-on: ubuntu-latest\n     steps:\n-      - uses: actions/setup-node@v3\n-        with:\n-          node-version: 18.x\n-      - run: npm init -y\n-      - run: npm install node-fetch@2\n       - name: Download and unzip artifacts\n         uses: actions/github-script@v6\n         with:\n           script: |\n             const cp = require('child_process');\n-            const fetch = require('node-fetch');\n \n             function sleep(ms) {\n               return new Promise(resolve => setTimeout(resolve, ms));",
        "date": "2023-02-16T20:47:12Z",
        "msg": "[difftrain] Remove dependency on node-fetch (#26182)\n\n`fetch` is now provided by github-scripts implicitly in\r\nhttps://github.com/actions/github-script/releases/tag/v6.4.0, so this\r\nwas causing a duplicate declaration error."
    },
    {
        "diff": "diff --git a/packages/react-dom-bindings/src/shared/CSSProperty.js b/a/packages/react-dom-bindings/src/shared/CSSProperty.js @@ -40,6 +40,7 @@ export const isUnitlessNumber = {\n   opacity: true,\n   order: true,\n   orphans: true,\n+  scale: true,\n   tabSize: true,\n   widows: true,\n   zIndex: true,",
        "date": "2023-02-16T10:12:32Z",
        "msg": "Add `scale` as a unitless property (#25601)\n\n## Summary\r\n\r\nCSS has a new property called `scale` (`scale: 2` is a shorthand for\r\n`transform: scale(2)`).\r\n\r\nIn vanilla JavaScript, we can do the following:\r\n\r\n```js\r\ndocument.querySelector('div').scale = 2;\r\n```\r\n\r\nwhich will make the `<div>` twice as big. So in JavaScript, it is\r\npossible to pass a plain number.\r\nHowever, in React, the following does not work currently:\r\n\r\n\r\n```js\r\n<div style={{scale: 2}}>\r\n```\r\n\r\nbecause `scale` is not in the list of unitless properties. This PR adds\r\n`scale` to the list.\r\n\r\n\r\n## How did you test this change?\r\n\r\nI built `react` and `react-dom` from source and copied it into the\r\nnode_modules of my project and verified that now `<div style={{scale:\r\n2}}>` does indeed work whereas before it did not."
    },
    {
        "diff": "diff --git a/.github/PULL_REQUEST_TEMPLATE.md b/a/.github/PULL_REQUEST_TEMPLATE.md @@ -9,7 +9,7 @@\n   3. If you've fixed a bug or added code that should be tested, add tests!\n   4. Ensure the test suite passes (`yarn test`). Tip: `yarn test --watch TestName` is helpful in development.\n   5. Run `yarn test --prod` to test in the production environment. It supports the same options as `yarn test`.\n-  6. If you need a debugger, run `yarn debug-test --watch TestName`, open `chrome://inspect`, and press \"Inspect\".\n+  6. If you need a debugger, run `yarn test --debug --watch TestName`, open `chrome://inspect`, and press \"Inspect\".\n   7. Format your code with [prettier](https://github.com/prettier/prettier) (`yarn prettier`).\n   8. Make sure your code lints (`yarn lint`). Tip: `yarn linc` to only check changed files.\n   9. Run the [Flow](https://flowtype.org/) type checks (`yarn flow`).",
        "date": "2023-02-16T10:11:12Z",
        "msg": "Don't recommend deprecated debugger script (#26171)\n\nyarn debug-test is now deprecated in React package.json. It has been\r\nreplaced by yarn test --debug.\r\n\r\n\r\n\r\nhttps://user-images.githubusercontent.com/72331432/219268188-8ff5dd42-da2b-434c-83be-72a9d258ee98.mp4"
    },
    {
        "diff": "diff --git a/packages/react-dom/src/__tests__/ReactDOMInput-test.js b/a/packages/react-dom/src/__tests__/ReactDOMInput-test.js @@ -1880,13 +1880,7 @@ describe('ReactDOMInput', () => {\n       node.focus();\n       setUntrackedValue.call(node, '2');\n       dispatchEventOnNode(node, 'input');\n-      // TODO: it is unclear why blur must be triggered twice,\n-      // manual testing in the fixtures shows that the active element\n-      // is no longer the input, however blur() + a blur event seem to\n-      // be the only way to remove focus in JSDOM\n       node.blur();\n-      dispatchEventOnNode(node, 'blur');\n-      dispatchEventOnNode(node, 'focusout');\n \n       if (disableInputAttributeSyncing) {\n         expect(node.value).toBe('2');\n@@ -1906,13 +1900,7 @@ describe('ReactDOMInput', () => {\n       node.focus();\n       setUntrackedValue.call(node, 4);\n       dispatchEventOnNode(node, 'input');\n-      // TODO: it is unclear why blur must be triggered twice,\n-      // manual testing in the fixtures shows that the active element\n-      // is no longer the input, however blur() + a blur event seem to\n-      // be the only way to remove focus in JSDOM\n       node.blur();\n-      dispatchEventOnNode(node, 'blur');\n-      dispatchEventOnNode(node, 'focusout');\n \n       expect(node.getAttribute('value')).toBe('1');\n     });\n@@ -1926,13 +1914,7 @@ describe('ReactDOMInput', () => {\n       node.focus();\n       setUntrackedValue.call(node, 4);\n       dispatchEventOnNode(node, 'input');\n-      // TODO: it is unclear why blur must be triggered twice,\n-      // manual testing in the fixtures shows that the active element\n-      // is no longer the input, however blur() + a blur event seem to\n-      // be the only way to remove focus in JSDOM\n       node.blur();\n-      dispatchEventOnNode(node, 'blur');\n-      dispatchEventOnNode(node, 'focusout');\n \n       expect(node.getAttribute('value')).toBe('1');\n     });",
        "date": "2023-02-13T20:47:42Z",
        "msg": "Remove redundant test steps (#26161)\n\n<!--\r\n  Thanks for submitting a pull request!\r\nWe appreciate you spending the time to work on these changes. Please\r\nprovide enough information so that others can review your pull request.\r\nThe three fields below are mandatory.\r\n\r\nBefore submitting a pull request, please make sure the following is\r\ndone:\r\n\r\n1. Fork [the repository](https://github.com/facebook/react) and create\r\nyour branch from `main`.\r\n  2. Run `yarn` in the repository root.\r\n3. If you've fixed a bug or added code that should be tested, add tests!\r\n4. Ensure the test suite passes (`yarn test`). Tip: `yarn test --watch\r\nTestName` is helpful in development.\r\n5. Run `yarn test --prod` to test in the production environment. It\r\nsupports the same options as `yarn test`.\r\n6. If you need a debugger, run `yarn debug-test --watch TestName`, open\r\n`chrome://inspect`, and press \"Inspect\".\r\n7. Format your code with\r\n[prettier](https://github.com/prettier/prettier) (`yarn prettier`).\r\n8. Make sure your code lints (`yarn lint`). Tip: `yarn linc` to only\r\ncheck changed files.\r\n  9. Run the [Flow](https://flowtype.org/) type checks (`yarn flow`).\r\n  10. If you haven't already, complete the CLA.\r\n\r\nLearn more about contributing:\r\nhttps://reactjs.org/docs/how-to-contribute.html\r\n-->\r\n\r\n## Summary\r\n\r\nThis TODO mentions an issue with JSDOM that [seems to have been\r\nresolved](https://github.com/jsdom/jsdom/pull/2996).\r\n\r\n<!--\r\nExplain the **motivation** for making this change. What existing problem\r\ndoes the pull request solve?\r\n-->\r\n\r\n## How did you test this change?\r\n\r\n- Ensured that the `document.activeElement` is no longer `node` after\r\n`node.blur` is called.\r\n- Verified that the tests still pass.\r\n- Looked for [a merged PR that fixes the\r\nissue](https://github.com/jsdom/jsdom/pull/2996).\r\n\r\n<!--\r\nDemonstrate the code is solid. Example: The exact commands you ran and\r\ntheir output, screenshots / videos if the pull request changes the user\r\ninterface.\r\nHow exactly did you verify that your PR solves the issue you wanted to\r\nsolve?\r\n  If you leave this empty, your PR will very likely be closed.\r\n-->"
    },
    {
        "diff": "diff --git a/packages/jest-react/src/internalAct.js b/a/packages/jest-react/src/internalAct.js @@ -128,6 +128,7 @@ function flushActWork(resolve: () => void, reject: (error: any) => void) {\n       Scheduler.unstable_flushUntilNextPaint();\n     } catch (error) {\n       reject(error);\n+      return;\n     }\n \n     // If Scheduler yields while there's still work, it's so that we can",
        "date": "2023-02-13T20:45:59Z",
        "msg": "test: Don't retry flushActWork if flushUntilNextPaint threw (#26121)\n\n## Summary\r\n\r\nFixes \"ReferenceError: You are trying to access a property or method of\r\nthe Jest environment after it has been torn down.\" in\r\n`ReactIncrementalErrorHandling-test.internal.js`\r\n\r\nAlternatives:\r\n\r\n1. Additional `await act(cb)` call where `cb` makes sure we can flush\r\nuntil next paint without throwing\r\n    ```js\r\n    // Ensure test isn't exited with pending work\r\n    await act(async () => {\r\n      root.render(<App shouldThrow={false} />);\r\n    });\r\n    ```\r\n1. Use `toFlushAndThrow`\r\n    ```diff\r\n    -    let error;\r\n    -    try {\r\n    -      await act(async () => {\r\n    -        root.render(<App shouldThrow={true} />);\r\n    -      });\r\n    -    } catch (e) {\r\n    -      error = e;\r\n    -    }\r\n    +    root.render(<App shouldThrow={true} />);\r\n     \r\n    -    expect(error.message).toBe('Oops!');\r\n    +    expect(Scheduler).toFlushAndThrow('Oops!');\r\n         expect(numberOfThrows < 100).toBe(true);\r\n    ```\r\n\r\nBut then it still wouldn't make sense to pass `resolve` and `reject` to\r\nthe next `flushActWork`. Even if the next `flushActWork` would flush\r\nuntil next paint without throwing, we couldn't resolve or reject because\r\nwe already did reject.\r\n \r\n\r\n## How did you test this change?\r\n\r\n- `yarn test --watch\r\npackages/react-reconciler/src/__tests__/ReactIncrementalErrorHandling-test.internal.js`\r\nproduces no more errors after the test finishes."
    },
    {
        "diff": "diff --git a/scripts/flow/config/flowconfig b/a/scripts/flow/config/flowconfig @@ -8,12 +8,6 @@\n .*/rollup/shims/facebook-www/.*\n .*/rollup/shims/react-native/.*\n \n-.*/node_modules/@snyk/.*\n-.*/node_modules/y18n/.*\n-.*/node_modules/chrome-devtools-frontend/.*\n-.*/node_modules/devtools-timeline-model/.*\n-.*/node_modules/create-react-class/.*\n-.*/node_modules/react-native-web/.*\n .*/node_modules/fbjs/lib/keyMirrorRecursive.js.flow\n .*/node_modules/resolve/test/.*\n .*/__mocks__/.*",
        "date": "2023-02-12T21:03:32Z",
        "msg": "Remove unnecessary flowconfig ignore paths (#26159)\n\n## Summary\r\n\r\nBy removing them, the flowconfig file will be cleaner and easier to\r\nmaintain.\r\n\r\n## How did you test this change?\r\n\r\nci green"
    },
    {
        "diff": "diff --git a/packages/react-dom-bindings/src/client/ReactDOMFloatClient.js b/a/packages/react-dom-bindings/src/client/ReactDOMFloatClient.js @@ -88,7 +88,7 @@ let lastCurrentDocument: ?Document = null;\n \n let previousDispatcher = null;\n export function prepareToRenderResources(rootContainer: Container) {\n-  const rootNode = getRootNode(rootContainer);\n+  const rootNode = getHoistableRoot(rootContainer);\n   lastCurrentDocument = getDocumentFromRoot(rootNode);\n \n   previousDispatcher = Dispatcher.current;\n@@ -111,7 +111,7 @@ export type HoistableRoot = Document | ShadowRoot;\n const preloadPropsMap: Map<string, PreloadProps> = new Map();\n \n // getRootNode is missing from IE and old jsdom versions\n-function getRootNode(container: Container): HoistableRoot {\n+export function getHoistableRoot(container: Container): HoistableRoot {\n   // $FlowFixMe[method-unbinding]\n   return typeof container.getRootNode === 'function'\n     ? /* $FlowFixMe[incompatible-return] Flow types this as returning a `Node`,\n@@ -122,7 +122,7 @@ function getRootNode(container: Container): HoistableRoot {\n \n function getCurrentResourceRoot(): null | HoistableRoot {\n   const currentContainer = getCurrentRootHostContainer();\n-  return currentContainer ? getRootNode(currentContainer) : null;\n+  return currentContainer ? getHoistableRoot(currentContainer) : null;\n }\n \n // Preloads are somewhat special. Even if we don't have the Document\n@@ -148,11 +148,6 @@ function getDocumentFromRoot(root: HoistableRoot): Document {\n   return root.ownerDocument || root;\n }\n \n-export function getHoistableRoot(container: Container): HoistableRoot {\n-  // Flow thinks getRootNode returns Node but we know it is actualy either a Document or ShadowRoot\n-  return ((container.getRootNode(): any): Document | ShadowRoot);\n-}\n-\n // --------------------------------------\n //      ReactDOM.Preload\n // --------------------------------------",
        "date": "2023-02-10T21:35:50Z",
        "msg": "remove unguarded getRootNode call (#26152)\n\nI forgot to guard the `getRootNode` call in #26106 and it fails in IE8\r\nand old jsdom. I consolidated the implementation a bit and removed the\r\nunguarded call"
    },
    {
        "diff": "diff --git a/scripts/devtools/publish-release.js b/a/scripts/devtools/publish-release.js @@ -91,7 +91,8 @@ async function publishToNPM() {\n         )} has already been published.`\n       );\n \n-      await confirm('Is this expected?');\n+      await confirm(`Is this expected (will skip ${npmPackage}@${version})?`);\n+      continue;\n     }\n \n     if (DRY_RUN) {",
        "date": "2023-02-10T16:28:31Z",
        "msg": "Bypass packages that are already published when confirmed by users (#26141)\n\n## Summary\r\n\r\nI ran into some two factor certification issue and had to resume the\r\npublish script. However, this time if I confirmed the published package,\r\nit will still try to publish the same version and fail. This is not\r\nexpected, and it blocks me from publishing the rest of the packages.\r\n\r\n## How did you test this change?\r\n\r\nI re-run the publish script after the change and successfully publish\r\nthe rest of the packages.\r\n\r\n```\r\n? Have you run the build-and-test script? Yes\r\n\r\n\u2713 Checking NPM permissions for ryancat. 881 ms\r\n\r\n? Please provide an NPM two-factor auth token: 278924\r\n\r\n\r\nreact-devtools version 4.27.2 has already been published.\r\n\r\n? Is this expected (will skip react-devtools@4.27.2)? Yes\r\n\r\n\r\nreact-devtools-core version 4.27.2 has already been published.\r\n\r\n? Is this expected (will skip react-devtools-core@4.27.2)? Yes\r\n\r\n\u2713 Publishing package react-devtools-inline 23.1 secs\r\n\r\nYou are now ready to publish the extension to Chrome, Edge, and Firefox:\r\n  https://fburl.com/publish-react-devtools-extensions\r\n\r\nWhen publishing to Firefox, remember the following:\r\n  Build id: 625690\r\n  Git archive: ******\r\n```"
    },
    {
        "diff": "diff --git a/.circleci/config.yml b/a/.circleci/config.yml @@ -11,10 +11,7 @@ aliases:\n     restore_cache:\n       name: Restore yarn cache for fixtures/dom\n       keys:\n-        - v1-yarn_cache-{{ arch }}-{{ checksum \"yarn.lock\" }}-fixtures/dom\n-        - v1-yarn_cache-{{ arch }}-{{ checksum \"yarn.lock\" }}\n-        - v1-yarn_cache-{{ arch }}-\n-        - v1-yarn_cache-\n+        - v2-yarn_cache-{{ arch }}-{{ checksum \"yarn.lock\" }}-fixtures/dom\n \n   - &yarn_install_fixtures_dom\n     run:\n@@ -32,7 +29,7 @@ aliases:\n   - &save_yarn_cache_fixtures_dom\n     save_cache:\n       name: Save yarn cache for fixtures/dom\n-      key: v1-yarn_cache-{{ arch }}-{{ checksum \"yarn.lock\" }}-fixtures/dom\n+      key: v2-yarn_cache-{{ arch }}-{{ checksum \"yarn.lock\" }}-fixtures/dom\n       paths:\n         - ~/.cache/yarn\n \n@@ -48,9 +45,7 @@ commands:\n       - restore_cache:\n           name: Restore yarn cache\n           keys:\n-            - v1-yarn_cache-{{ arch }}-{{ checksum \"yarn.lock\" }}\n-            - v1-yarn_cache-{{ arch }}-\n-            - v1-yarn_cache-\n+            - v2-yarn_cache-{{ arch }}-{{ checksum \"yarn.lock\" }}\n       - run:\n           name: Install dependencies\n           command: |\n@@ -60,7 +55,7 @@ commands:\n             fi\n       - save_cache:\n           name: Save yarn cache\n-          key: v1-yarn_cache-{{ arch }}-{{ checksum \"yarn.lock\" }}\n+          key: v2-yarn_cache-{{ arch }}-{{ checksum \"yarn.lock\" }}\n           paths:\n             - ~/.cache/yarn\n ",
        "date": "2023-02-09T17:00:11Z",
        "msg": "Only restore Yarn caches on exact key hits (#26133)\n\n## Summary\r\n\r\n[Current Yarn cache size:\r\n555MB](https://app.circleci.com/pipelines/github/facebook/react/38163/workflows/70d0149e-b0bc-44e8-b8c9-e5c744cab89b/jobs/625334?invite=true#step-102-2)\r\n[Used Yarn cache size:\r\n344MB](https://app.circleci.com/pipelines/github/facebook/react/38166/workflows/4825d444-1426-4321-b95b-c540e6cdc6d7/jobs/625354?invite=true#step-104-5)\r\n\r\nWhen we restore a global Yarn cache that's not specific to a lockfile\r\nentry (i.e. a fallback cache), we might restore packages that are no\r\nlonger used. When we then run yarn install, we potentially add new\r\npackages to the cache.\r\nFor example: \r\n1. we bump a package version\r\n2. lockfile changes\r\n3. cache restore misses for exact key\r\n4. cache restore hits a prefix (fallback) containing the older version, \r\n5. yarn install adds the new version to the cache\r\n\r\nYarn is not clearing the unused packages from the global cache. So when\r\nwe then save the cache we now retain the old and new version of a\r\npackage in the global cache even though the old version is no longer\r\nused.\r\nThis means that the global cache grows indefinitely. Restoring the cache\r\nisn't free so CI install times will degrade over time.\r\n\r\nEither we\r\n1. periodically prune the cache\r\n2. just not restore anything unless we have an exact hit. \r\n\r\n\r\nThe chosen tradeoff depends on the\r\nrelation of commits changing deps to commits not changing deps. \r\nFrom my experience, we change deps rarely so I opted to only restore the\r\ncache on exact hits.\r\n\r\n## How did you test this change?\r\n\r\n- run on `main` has 555MB of Yarn cache:\r\nhttps://app.circleci.com/pipelines/github/facebook/react/38163/workflows/70d0149e-b0bc-44e8-b8c9-e5c744cab89b/jobs/625334?invite=true#step-102-2\r\n- run on this branch only has 334MB of Yarn cache:\r\nhttps://app.circleci.com/pipelines/github/facebook/react/38166/workflows/4825d444-1426-4321-b95b-c540e6cdc6d7/jobs/625354?invite=true#step-104-5"
    },
    {
        "diff": "diff --git a/packages/react-devtools-extensions/src/background.js b/a/packages/react-devtools-extensions/src/background.js @@ -29,7 +29,7 @@ if (!IS_FIREFOX) {\n         world: chrome.scripting.ExecutionWorld.MAIN,\n       },\n     ],\n-    function() {\n+    function () {\n       // When the content scripts are already registered, an error will be thrown.\n       // It happens when the service worker process is incorrectly duplicated.\n       if (chrome.runtime.lastError) {",
        "date": "2023-02-07T16:57:43Z",
        "msg": "Fix main (#26120)\n\n## Summary\r\n\r\nPrettier was bumped recently. So any branch not including that bump,\r\nmight bring in outdated formatting (e.g.\r\nhttps://github.com/facebook/react/pull/26068)\r\n\r\n## How did you test this change?\r\n\r\n- [x] `yarn prettier-all`"
    },
    {
        "diff": "diff --git a/packages/react-devtools-extensions/src/background.js b/a/packages/react-devtools-extensions/src/background.js @@ -12,22 +12,31 @@ if (!IS_FIREFOX) {\n   // It's critical since it allows us to directly run scripts on the \"main\" world on the page\n   // \"document_start\" allows it to run before the page's scripts\n   // so the hook can be detected by react reconciler\n-  chrome.scripting.registerContentScripts([\n-    {\n-      id: 'hook',\n-      matches: ['<all_urls>'],\n-      js: ['build/installHook.js'],\n-      runAt: 'document_start',\n-      world: chrome.scripting.ExecutionWorld.MAIN,\n-    },\n-    {\n-      id: 'renderer',\n-      matches: ['<all_urls>'],\n-      js: ['build/renderer.js'],\n-      runAt: 'document_start',\n-      world: chrome.scripting.ExecutionWorld.MAIN,\n+  chrome.scripting.registerContentScripts(\n+    [\n+      {\n+        id: 'hook',\n+        matches: ['<all_urls>'],\n+        js: ['build/installHook.js'],\n+        runAt: 'document_start',\n+        world: chrome.scripting.ExecutionWorld.MAIN,\n+      },\n+      {\n+        id: 'renderer',\n+        matches: ['<all_urls>'],\n+        js: ['build/renderer.js'],\n+        runAt: 'document_start',\n+        world: chrome.scripting.ExecutionWorld.MAIN,\n+      },\n+    ],\n+    function() {\n+      // When the content scripts are already registered, an error will be thrown.\n+      // It happens when the service worker process is incorrectly duplicated.\n+      if (chrome.runtime.lastError) {\n+        console.error(chrome.runtime.lastError);\n+      }\n     },\n-  ]);\n+  );\n }\n \n chrome.runtime.onConnect.addListener(function (port) {\n@@ -51,7 +60,7 @@ chrome.runtime.onConnect.addListener(function (port) {\n   ports[tab][name] = port;\n \n   if (ports[tab].devtools && ports[tab]['content-script']) {\n-    doublePipe(ports[tab].devtools, ports[tab]['content-script']);\n+    doublePipe(ports[tab].devtools, ports[tab]['content-script'], tab);\n   }\n });\n \n@@ -70,20 +79,36 @@ function installProxy(tabId: number) {\n   }\n }\n \n-function doublePipe(one, two) {\n+function doublePipe(one, two, tabId) {\n   one.onMessage.addListener(lOne);\n   function lOne(message) {\n-    two.postMessage(message);\n+    try {\n+      two.postMessage(message);\n+    } catch (e) {\n+      if (__DEV__) {\n+        console.log(`Broken pipe ${tabId}: `, e);\n+      }\n+      shutdown();\n+    }\n   }\n   two.onMessage.addListener(lTwo);\n   function lTwo(message) {\n-    one.postMessage(message);\n+    try {\n+      one.postMessage(message);\n+    } catch (e) {\n+      if (__DEV__) {\n+        console.log(`Broken pipe ${tabId}: `, e);\n+      }\n+      shutdown();\n+    }\n   }\n   function shutdown() {\n     one.onMessage.removeListener(lOne);\n     two.onMessage.removeListener(lTwo);\n     one.disconnect();\n     two.disconnect();\n+    // clean up so that we can rebuild the double pipe if the page is reloaded\n+    ports[tabId] = null;\n   }\n   one.onDisconnect.addListener(shutdown);\n   two.onDisconnect.addListener(shutdown);",
        "date": "2023-02-07T12:59:44Z",
        "msg": "[DevTools] improve error handling in extension (#26068)\n\n## Summary\r\n\r\nThis is to fix some edge cases I recently observed when developing and\r\nusing the extension:\r\n- When you reload the page, there's a chance that a port (most likely\r\nthe devtools one) is not properly unloaded. In this case, the React\r\nDevTools will stop working unless you create a new tab.\r\n- For unknown reasons, Chrome sometimes spins up two service worker\r\nprocesses. In this case, an error will be thrown \"duplicate ID when\r\nregistering content script\" and sometimes interrupt the execution of the\r\nrest of service worker.\r\n\r\nThis is an attempt to make the logic more robust \r\n- Automatically shutting down the double pipe if the message fails, and\r\nallowing the runtime to rebuild the double pipe.\r\n- Log the error message so Chrome believes we've handled it and will not\r\ninterrupt the execution.\r\n\r\nThis also seems to be helpful in fixing #25806."
    },
    {
        "diff": "diff --git a/scripts/shared/inlinedHostConfigs.js b/a/scripts/shared/inlinedHostConfigs.js @@ -8,7 +8,7 @@\n \n module.exports = [\n   {\n-    shortName: 'dom',\n+    shortName: 'dom-node',\n     entryPoints: [\n       'react-dom',\n       'react-dom/unstable_testing',\n@@ -46,7 +46,7 @@ module.exports = [\n     isServerSupported: true,\n   },\n   {\n-    shortName: 'bun',\n+    shortName: 'dom-bun',\n     entryPoints: ['react-dom', 'react-dom/src/server/ReactDOMFizzServerBun.js'],\n     paths: [\n       'react-dom',",
        "date": "2023-02-06T20:54:14Z",
        "msg": "Rename \"dom\" fork to \"dom-node\" and \"bun\" fork to \"dom-bun\" (#26117)\n\nThe \"dom\" configuration is actually the node specific configuration. It\r\njust happened to be that this was the mainline variant before so it was\r\nimplied but with so many variants, this is less obvious now.\r\n\r\nThe \"bun\" configuration is specifically for \"bun\". There's no \"native\"\r\nrenderer for \"bun\" yet."
    },
    {
        "diff": "diff --git a/scripts/release/publish-using-ci-workflow.js b/a/scripts/release/publish-using-ci-workflow.js @@ -99,6 +99,15 @@ async function main() {\n     }\n   );\n \n+  if (!pipelineResponse.ok) {\n+    console.error(\n+      theme.error(\n+        `Failed to access CircleCI. Responded with status: ${pipelineResponse.status}`\n+      )\n+    );\n+    process.exit(1);\n+  }\n+\n   const pipelineJSON = await pipelineResponse.json();\n   const pipelineID = pipelineJSON.id;\n ",
        "date": "2023-02-03T00:20:34Z",
        "msg": "publish-prereleases: Exit if CircleCI request fails (#26100)\n\nIf the publish-prereleases command fails to access CircleCI, it will now\r\nexit with a message instead of hanging indefinitely."
    },
    {
        "diff": "diff --git a/packages/react-reconciler/src/__tests__/ReactUpdaters-test.internal.js b/a/packages/react-reconciler/src/__tests__/ReactUpdaters-test.internal.js @@ -255,7 +255,7 @@ describe('updaters', () => {\n     Scheduler.unstable_flushAll();\n   });\n \n-  it('should cover suspense pings', async done => {\n+  it('should cover suspense pings', async () => {\n     let data = null;\n     let resolver = null;\n     let promise = null;\n@@ -312,8 +312,6 @@ describe('updaters', () => {\n \n     // Verify no outstanding flushes\n     Scheduler.unstable_flushAll();\n-\n-    done();\n   });\n \n   it('should cover error handling', async () => {",
        "date": "2023-02-01T08:59:41Z",
        "msg": "Fix async test in React reconciler (#26087)"
    },
    {
        "diff": "diff --git a/CHANGELOG.md b/a/CHANGELOG.md @@ -102,6 +102,10 @@ The existing `renderToString` method keeps working but is discouraged.\n * **Layout Effects with Suspense**: When a tree re-suspends and reverts to a fallback, React will now clean up layout effects, and then re-create them when the content inside the boundary is shown again. This fixes an issue which prevented component libraries from correctly measuring layout when used with Suspense.\n * **New JS Environment Requirements**: React now depends on modern browsers features including `Promise`, `Symbol`, and `Object.assign`. If you support older browsers and devices such as Internet Explorer which do not provide modern browser features natively or have non-compliant implementations, consider including a global polyfill in your bundled application.\n \n+### Scheduler (Experimental)\n+\n+* Remove unstable `scheduler/tracing` API\n+\n ## Notable Changes\n \n ### React\n@@ -193,6 +197,10 @@ The existing `renderToString` method keeps working but is discouraged.\n * Fix a mistake in the Node loader. ([#22537](https://github.com/facebook/react/pull/22537) by [@btea](https://github.com/btea))\n * Use `globalThis` instead of `window` for edge environments. ([#22777](https://github.com/facebook/react/pull/22777) by [@huozhi](https://github.com/huozhi))\n \n+### Scheduler (Experimental)\n+\n+* Remove unstable `scheduler/tracing` API ([#20037](https://github.com/facebook/react/pull/20037) by [@bvaughn](https://github.com/bvaughn))\n+\n ## 17.0.2 (March 22, 2021)\n \n ### React DOM",
        "date": "2023-01-30T07:12:48Z",
        "msg": "Include removal of scheduler/tracing in changelog (#26063)"
    },
    {
        "diff": "diff --git a/scripts/rollup/shims/react-native/ReactNativeViewConfigRegistry.js b/a/scripts/rollup/shims/react-native/ReactNativeViewConfigRegistry.js @@ -34,8 +34,8 @@ const customDirectEventTypes: {\n exports.customBubblingEventTypes = customBubblingEventTypes;\n exports.customDirectEventTypes = customDirectEventTypes;\n \n-const viewConfigCallbacks = new Map();\n-const viewConfigs = new Map();\n+const viewConfigCallbacks = new Map<string, ?() => ViewConfig>();\n+const viewConfigs = new Map<string, ViewConfig>();\n \n function processEventTypes(viewConfig: ViewConfig): void {\n   const {bubblingEventTypes, directEventTypes} = viewConfig;",
        "date": "2023-01-27T16:55:38Z",
        "msg": "Add flow types to Maps in ReactNativeViewConfigRegistry.js (#26064)\n\nNeed to add types to these two maps to unblock React Native sync."
    },
    {
        "diff": "diff --git a/scripts/jest/matchers/toWarnDev.js b/a/scripts/jest/matchers/toWarnDev.js @@ -270,15 +270,20 @@ const createMatcherFor = (consoleMethod, matcherName) =>\n           // Once `act(async () => {}).then(() => {}).then(() => {})` works\n           // we can just return `result.then(onFinally, error => ...)`\n           returnPromise = new Promise((resolve, reject) => {\n-            result.then(\n-              () => {\n-                resolve(onFinally());\n-              },\n-              error => {\n-                caughtError = error;\n-                return resolve(onFinally());\n-              }\n-            );\n+            result\n+              .then(\n+                () => {\n+                  resolve(onFinally());\n+                },\n+                error => {\n+                  caughtError = error;\n+                  return resolve(onFinally());\n+                }\n+              )\n+              // In case onFinally throws we need to reject from this matcher\n+              .catch(error => {\n+                reject(error);\n+              });\n           });\n         }\n       } catch (error) {",
        "date": "2023-01-15T17:57:59Z",
        "msg": "Rejct toWarnDev if given callback throws (#26003)\n\n## Summary\r\n\r\nShould unblock https://github.com/facebook/react/pull/25970\r\nIf the callback for `toWarnDev` was `async` and threw, we didn't\r\nultimately reject the await Promise from the matcher. This resulted in\r\ntests failing even though the failure was expected due to a test gate.\r\n\r\n## How did you test this change?\r\n\r\n- [x] tested in https://github.com/facebook/react/pull/25970 with `yarn\r\ntest --r=stable --env=development\r\npackages/react-dom/src/__tests__/ReactDOMFizzServer-test.js --watch`\r\n- [x] `yarn test`\r\n- [x] CI"
    },
    {
        "diff": "diff --git a/packages/react-dom/src/__tests__/ReactDOMFizzShellHydration-test.js b/a/packages/react-dom/src/__tests__/ReactDOMFizzShellHydration-test.js @@ -283,4 +283,26 @@ describe('ReactDOMFizzShellHydration', () => {\n     ]);\n     expect(container.textContent).toBe('New screen');\n   });\n+\n+  test('TODO: A large component stack causes SSR to stack overflow', async () => {\n+    spyOnDevAndProd(console, 'error');\n+\n+    function NestedComponent({depth}: {depth: number}) {\n+      if (depth <= 0) {\n+        return <AsyncText text=\"Shell\" />;\n+      }\n+      return <NestedComponent depth={depth - 1} />;\n+    }\n+\n+    // Server render\n+    await serverAct(async () => {\n+      ReactDOMFizzServer.renderToPipeableStream(\n+        <NestedComponent depth={3000} />,\n+      );\n+    });\n+    expect(console.error).toHaveBeenCalledTimes(1);\n+    expect(console.error.calls.argsFor(0)[0].toString()).toBe(\n+      'RangeError: Maximum call stack size exceeded',\n+    );\n+  });\n });",
        "date": "2023-01-11T00:53:16Z",
        "msg": "Test case for stack overflow in ReactFizzServer (#25971)\n\nSSR currently stack overflows when the component tree is extremely large"
    },
    {
        "diff": "diff --git a/scripts/bench/build.js b/a/scripts/bench/build.js @@ -74,7 +74,7 @@ async function buildBenchmarkBundlesFromGitRepo(\n       await cleanDir(remoteRepoDir);\n     }\n     // check if remote-repo directory already exists\n-    if (existsSync(join(__dirname, 'remote-repo'))) {\n+    if (existsSync(remoteRepoDir)) {\n       repo = await Git.Repository.open(remoteRepoDir);\n       // fetch all the latest remote changes\n       await repo.fetchAll();",
        "date": "2023-01-10T03:59:38Z",
        "msg": "Refactor: Reuse variable \"remoteRepoDir\" (#25740)\n\nReuse variable `remoteRepoDir` , same with `join(__dirname, 'remote-repo')`."
    },
    {
        "diff": "diff --git a/scripts/rollup/build.js b/a/scripts/rollup/build.js @@ -21,7 +21,7 @@ const useForks = require('./plugins/use-forks-plugin');\n const stripUnusedImports = require('./plugins/strip-unused-imports');\n const Packaging = require('./packaging');\n const {asyncRimRaf} = require('./utils');\n-const codeFrame = require('babel-code-frame');\n+const codeFrame = require('@babel/code-frame');\n const Wrappers = require('./wrappers');\n \n const RELEASE_CHANNEL = process.env.RELEASE_CHANNEL;",
        "date": "2023-01-05T20:56:31Z",
        "msg": "Update import for babel-code-frame in build script (#25963)\n\n## Summary\r\n\r\nUpdating import for babel-code-frame to use the official @babel package,\r\nas babel-code-frame is a ghost dependency. This change is necessary to\r\navoid potential issues and stay up-to-date with the latest version of\r\n@babel/code-frame, which is already declared in our project's\r\npackage.json.\r\n\r\n## How did you test this change?\r\nyarn test"
    },
    {
        "diff": "diff --git a/packages/react-reconciler/src/ReactFiberWorkLoop.js b/a/packages/react-reconciler/src/ReactFiberWorkLoop.js @@ -1300,16 +1300,6 @@ function finishConcurrentRender(root, exitStatus, lanes) {\n             // There's additional work on this root.\n             break;\n           }\n-          const suspendedLanes = root.suspendedLanes;\n-          if (!isSubsetOfLanes(suspendedLanes, lanes)) {\n-            // We should prefer to render the fallback of at the last\n-            // suspended level. Ping the last suspended level to try\n-            // rendering it again.\n-            // FIXME: What if the suspended lanes are Idle? Should not restart.\n-            const eventTime = requestEventTime();\n-            markRootPinged(root, suspendedLanes, eventTime);\n-            break;\n-          }\n \n           // The render is suspended, it hasn't timed out, and there's no\n           // lower priority work to do. Instead of committing the fallback",
        "date": "2023-01-04T19:50:00Z",
        "msg": "Remove vestigial Suspense batching logic (#25861)\n\nThis code was originally added in the old ExpirationTime implementation\r\nof Suspense. The idea is that if multiple updates suspend inside the\r\nsame Suspense boundary, and both of them resolve, we should render both\r\nresults in the same batch, to reduce jank.\r\n\r\nThis was an incomplete idea, though. We later discovered a stronger\r\nrequirement \u2014 once we show a fallback, we cannot fill in that fallback\r\nwithout completing _all_ the updates that were previously skipped over.\r\nOtherwise you get tearing. This was fixed by #18411, then we discovered\r\nadditional related flaws that were addressed in #24685. See those PR\r\ndescriptions for additional context.\r\n\r\nSo I believe this older code is no longer necessary."
    }
]