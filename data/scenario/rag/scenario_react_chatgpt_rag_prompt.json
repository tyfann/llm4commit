[
    {
        "org_diff": "diff --git a/packages/react-devtools-shared/src/utils.js b/a/packages/react-devtools-shared/src/utils.js @@ -23,9 +23,23 @@ import {\n   Suspense,\n } from 'react-is';\n import {\n+  REACT_CONSUMER_TYPE,\n+  REACT_CONTEXT_TYPE,\n+  REACT_FORWARD_REF_TYPE,\n+  REACT_FRAGMENT_TYPE,\n+  REACT_LAZY_TYPE,\n+  REACT_LEGACY_ELEMENT_TYPE,\n+  REACT_MEMO_TYPE,\n+  REACT_PORTAL_TYPE,\n+  REACT_PROFILER_TYPE,\n+  REACT_PROVIDER_TYPE,\n+  REACT_STRICT_MODE_TYPE,\n+  REACT_SUSPENSE_LIST_TYPE,\n   REACT_SUSPENSE_LIST_TYPE as SuspenseList,\n+  REACT_SUSPENSE_TYPE,\n   REACT_TRACING_MARKER_TYPE as TracingMarker,\n } from 'shared/ReactSymbols';\n+import {enableRenderableContext} from 'shared/ReactFeatureFlags';\n import {\n   TREE_OPERATION_ADD,\n   TREE_OPERATION_REMOVE,\n@@ -695,10 +709,57 @@ export function getDataType(data: Object): DataType {\n   }\n }\n \n+// Fork of packages/react-is/src/ReactIs.js:30, but with legacy element type\n+// Which has been changed in https://github.com/facebook/react/pull/28813\n+function typeOfWithLegacyElementSymbol(object: any): mixed {\n+  if (typeof object === 'object' && object !== null) {\n+    const $$typeof = object.$$typeof;\n+    switch ($$typeof) {\n+      case REACT_LEGACY_ELEMENT_TYPE:\n+        const type = object.type;\n+\n+        switch (type) {\n+          case REACT_FRAGMENT_TYPE:\n+          case REACT_PROFILER_TYPE:\n+          case REACT_STRICT_MODE_TYPE:\n+          case REACT_SUSPENSE_TYPE:\n+          case REACT_SUSPENSE_LIST_TYPE:\n+            return type;\n+          default:\n+            const $$typeofType = type && type.$$typeof;\n+\n+            switch ($$typeofType) {\n+              case REACT_CONTEXT_TYPE:\n+              case REACT_FORWARD_REF_TYPE:\n+              case REACT_LAZY_TYPE:\n+              case REACT_MEMO_TYPE:\n+                return $$typeofType;\n+              case REACT_CONSUMER_TYPE:\n+                if (enableRenderableContext) {\n+                  return $$typeofType;\n+                }\n+              // Fall through\n+              case REACT_PROVIDER_TYPE:\n+                if (!enableRenderableContext) {\n+                  return $$typeofType;\n+                }\n+              // Fall through\n+              default:\n+                return $$typeof;\n+            }\n+        }\n+      case REACT_PORTAL_TYPE:\n+        return $$typeof;\n+    }\n+  }\n+\n+  return undefined;\n+}\n+\n export function getDisplayNameForReactElement(\n   element: React$Element<any>,\n ): string | null {\n-  const elementType = typeOf(element);\n+  const elementType = typeOf(element) || typeOfWithLegacyElementSymbol(element);\n   switch (elementType) {\n     case ContextConsumer:\n       return 'ContextConsumer';",
        "org_msg": "fix[react-devtools]: add backwards compat with legacy element type symbol (#28982)\n\nFollow-up to https://github.com/facebook/react/pull/28813.\r\n\r\nRDT is using `typeOf` from `react-is` to determine the element display\r\nname, I've forked an implementation of this method, but will be using\r\nlegacy element symbol.",
        "sim_msg": "[docs] Add color preview to default theme tree",
        "sim_diff": "diff --git a/docs/src/pages/customization/default-theme/DefaultTheme.js b/docs/src/pages/customization/default-theme/DefaultTheme.js @@ -14,10 +14,15 @@ import Switch from '@material-ui/core/Switch';\n/**\n* @param {unknown} value\n*/\n-function useType(value) {\n+function getType(value) {\nif (Array.isArray(value)) {\nreturn 'array';\n}\n+\n+ if (/^(#|rgb|rgba|hsl|hsla)/.test(value)) {\n+ return 'color';\n+ }\n+\nif (value === null) {\nreturn 'null';\n}\n@@ -28,9 +33,9 @@ function useType(value) {\n/**\n*\n* @param {unknown} value\n- * @param {ReturnType<typeof useType>} type\n+ * @param {ReturnType<typeof getType>} type\n*/\n-function useLabel(value, type) {\n+function getLabel(value, type) {\nswitch (type) {\ncase 'array':\nreturn `Array(${value.length})`;\n@@ -54,8 +59,10 @@ function useLabel(value, type) {\n}\n}\n-function useTokenType(type) {\n+function getTokenType(type) {\nswitch (type) {\n+ case 'color':\n+ return 'string';\ncase 'object':\ncase 'array':\nreturn 'comment';\n@@ -64,18 +71,47 @@ function useTokenType(type) {\n}\n}\n-function ObjectEntryLabel({ objectKey, objectValue }) {\n- const type = useType(objectValue);\n- const label = useLabel(objectValue, type);\n- const tokenType = useTokenType(type);\n+const useObjectEntryLabelStyles = makeStyles((theme) => ({\n+ color: {\n+ backgroundColor: '#fff',\n+ display: 'inline-block',\n+ marginBottom: -1,\n+ marginRight: theme.spacing(0.5),\n+ border: '1px solid',\n+ backgroundImage:\n+ 'url(\"data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%202%202%22%3E%3Cpath%20d%3D%22M1%202V0h1v1H0v1z%22%20fill-opacity%3D%22.2%22%2F%3E%3C%2Fsvg%3E\")',\n+ },\n+ colorInner: {\n+ display: 'block',\n+ width: 11,\n+ height: 11,\n+ },\n+}));\n+\n+function ObjectEntryLabel(props) {\n+ const { objectKey, objectValue } = props;\n+ const type = getType(objectValue);\n+ const label = getLabel(objectValue, type);\n+ const tokenType = getTokenType(type);\n+ const classes = useObjectEntryLabelStyles();\nreturn (\n<React.Fragment>\n- {objectKey}: <span className={clsx('token', tokenType)}>{label}</span>\n+ {`${objectKey}: `}\n+ {type === 'color' ? (\n+ <span className={classes.color} style={{ borderColor: lighten(label, 0.7) }}>\n+ <span className={classes.colorInner} style={{ backgroundColor: label }} />\n+ </span>\n+ ) : null}\n+ <span className={clsx('token', tokenType)}>{label}</span>\n</React.Fragment>\n);\n}\n-ObjectEntryLabel.propTypes = { objectKey: PropTypes.any, objectValue: PropTypes.any };\n+\n+ObjectEntryLabel.propTypes = {\n+ objectKey: PropTypes.any,\n+ objectValue: PropTypes.any,\n+};\nconst useObjectEntryStyles = makeStyles({\ntreeItem: {\n@@ -93,10 +129,9 @@ const useObjectEntryStyles = makeStyles({\nfunction ObjectEntry(props) {\nconst { nodeId, objectKey, objectValue } = props;\n-\nconst keyPrefix = nodeId;\n-\nlet children = null;\n+\nif (\n(objectValue !== null && typeof objectValue === 'object') ||\ntypeof objectValue === 'function'\n"
    },
    {
        "org_diff": "diff --git a/scripts/jest/setupTests.js b/a/scripts/jest/setupTests.js @@ -206,44 +206,55 @@ if (process.env.REACT_CLASS_EQUIVALENCE_TEST) {\n   };\n \n   const gatedErrorMessage = 'Gated test was expected to fail, but it passed.';\n-  global._test_gate = (gateFn, testName, callback) => {\n+  global._test_gate = (gateFn, testName, callback, timeoutMS) => {\n     let shouldPass;\n     try {\n       const flags = getTestFlags();\n       shouldPass = gateFn(flags);\n     } catch (e) {\n-      test(testName, () => {\n-        throw e;\n-      });\n+      test(\n+        testName,\n+        () => {\n+          throw e;\n+        },\n+        timeoutMS\n+      );\n       return;\n     }\n     if (shouldPass) {\n-      test(testName, callback);\n+      test(testName, callback, timeoutMS);\n     } else {\n       const error = new Error(gatedErrorMessage);\n       Error.captureStackTrace(error, global._test_gate);\n       test(`[GATED, SHOULD FAIL] ${testName}`, () =>\n-        expectTestToFail(callback, error));\n+        expectTestToFail(callback, error, timeoutMS));\n     }\n   };\n-  global._test_gate_focus = (gateFn, testName, callback) => {\n+  global._test_gate_focus = (gateFn, testName, callback, timeoutMS) => {\n     let shouldPass;\n     try {\n       const flags = getTestFlags();\n       shouldPass = gateFn(flags);\n     } catch (e) {\n-      test.only(testName, () => {\n-        throw e;\n-      });\n+      test.only(\n+        testName,\n+        () => {\n+          throw e;\n+        },\n+        timeoutMS\n+      );\n       return;\n     }\n     if (shouldPass) {\n-      test.only(testName, callback);\n+      test.only(testName, callback, timeoutMS);\n     } else {\n       const error = new Error(gatedErrorMessage);\n       Error.captureStackTrace(error, global._test_gate_focus);\n-      test.only(`[GATED, SHOULD FAIL] ${testName}`, () =>\n-        expectTestToFail(callback, error));\n+      test.only(\n+        `[GATED, SHOULD FAIL] ${testName}`,\n+        () => expectTestToFail(callback, error),\n+        timeoutMS\n+      );\n     }\n   };\n ",
        "org_msg": "Allow specifying timeout in tests via third argument (#29006)",
        "sim_msg": "add gl text chart select test",
        "sim_diff": "diff --git a/test/jasmine/tests/gl2d_click_test.js b/test/jasmine/tests/gl2d_click_test.js @@ -738,4 +738,61 @@ describe('@noCI @gl Test gl2d lasso/select:', function() {\n.catch(failTest)\n.then(done);\n});\n+\n+ it('should work on gl text charts', function(done) {\n+ var fig = Lib.extendDeep({}, require('@mocks/gl2d_text_chart_basic.json'));\n+ fig.layout.dragmode = 'select';\n+ fig.layout.margin = {t: 0, b: 0, l: 0, r: 0};\n+ fig.layout.height = 500;\n+ fig.layout.width = 500;\n+ gd = createGraphDiv();\n+\n+ function _assertGlTextOpts(msg, exp) {\n+ var scene = gd.calcdata[0][0].t._scene;\n+ scene.glText.forEach(function(opts, i) {\n+ expect(Array.from(opts.color))\n+ .toBeCloseToArray(exp.rgba[i], 2, 'item ' + i + ' - ' + msg);\n+ });\n+ }\n+\n+ Plotly.plot(gd, fig)\n+ .then(delay(100))\n+ .then(function() {\n+ _assertGlTextOpts('base', {\n+ rgba: [\n+ [68, 68, 68, 255],\n+ [68, 68, 68, 255],\n+ [68, 68, 68, 255]\n+ ]\n+ });\n+ })\n+ .then(function() { return select([[100, 100], [250, 250]]); })\n+ .then(function(eventData) {\n+ assertEventData(eventData, {\n+ points: [{x: 1, y: 2}]\n+ });\n+ _assertGlTextOpts('after selection', {\n+ rgba: [\n+ [\n+ 68, 68, 68, 51,\n+ 68, 68, 68, 51,\n+ 68, 68, 68, 51,\n+ ],\n+ [\n+ 68, 68, 68, 51,\n+ // this is the selected pt!\n+ 68, 68, 68, 255,\n+ 68, 68, 68, 51\n+ ],\n+ [\n+ 68, 68, 68, 51,\n+ 68, 68, 68, 51,\n+ 68, 68, 68, 51\n+ ]\n+ ]\n+ });\n+ })\n+ .catch(failTest)\n+ .then(done);\n+ });\n});\n"
    },
    {
        "org_diff": "diff --git a/scripts/rollup/bundles.js b/a/scripts/rollup/bundles.js @@ -884,7 +884,7 @@ const bundles = [\n   /******* Reconciler Constants *******/\n   {\n     moduleType: RENDERER_UTILS,\n-    bundleTypes: [NODE_DEV, NODE_PROD],\n+    bundleTypes: [NODE_DEV, NODE_PROD, FB_WWW_DEV, FB_WWW_PROD],\n     entry: 'react-reconciler/constants',\n     global: 'ReactReconcilerConstants',\n     minifyWithProdErrorCodes: true,",
        "org_msg": "Add FB build for ReactReconcilerConstants (#29003)\n\nIn order to integrate the `react-reconciler` build created in #28880\r\nwith third party libraries, we need to have matching\r\n`react-reconciler/constants` to go with it.",
        "sim_msg": "fix sass on macOS",
        "sim_diff": "diff --git a/app_web/package.json b/app_web/package.json \"@rollup/plugin-replace\": \"^2.4.1\",\n\"concurrently\": \"^5.3.0\",\n\"eslint\": \"^6.8.0\",\n+ \"node-sass\": \"^6.0.0\",\n\"rollup\": \"^1.31.1\",\n\"rollup-plugin-commonjs\": \"^10.1.0\",\n\"rollup-plugin-copy\": \"^3.3.0\",\n\"rollup-plugin-node-builtins\": \"^2.1.2\",\n\"rollup-plugin-node-resolve\": \"^5.2.0\",\n\"rollup-plugin-scss\": \"^2.6.1\",\n- \"sass\": \"^1.32.8\",\n\"serve\": \"^11.3.0\"\n},\n\"bugs\": {\n"
    },
    {
        "org_diff": "diff --git a/.github/workflows/commit_artifacts.yml b/a/.github/workflows/commit_artifacts.yml @@ -145,15 +145,15 @@ jobs:\n         run: |\n           BASE_FOLDER='compiled-rn/facebook-fbsource/xplat/js'\n           mkdir -p ${BASE_FOLDER}/react-native-github/Libraries/Renderer/\n-          mkdir -p ${BASE_FOLDER}/RKJSModules/vendor/{scheduler,react,react-is,react-test-renderer}/\n+          mkdir -p ${BASE_FOLDER}/RKJSModules/vendor/react/{scheduler,react,react-is,react-test-renderer}/\n \n           # Move React Native renderer \n           mv build/react-native/implementations/ $BASE_FOLDER/react-native-github/Libraries/Renderer/\n           mv build/react-native/shims/ $BASE_FOLDER/react-native-github/Libraries/Renderer/\n-          mv build/facebook-react-native/scheduler/cjs/ $BASE_FOLDER/RKJSModules/vendor/scheduler/\n-          mv build/facebook-react-native/react/cjs/ $BASE_FOLDER/RKJSModules/vendor/react/\n-          mv build/facebook-react-native/react-is/cjs/ $BASE_FOLDER/RKJSModules/vendor/react-is/\n-          mv build/facebook-react-native/react-test-renderer/cjs/ $BASE_FOLDER/RKJSModules/vendor/react-test-renderer/\n+          mv build/facebook-react-native/scheduler/cjs/ $BASE_FOLDER/RKJSModules/vendor/react/scheduler/\n+          mv build/facebook-react-native/react/cjs/ $BASE_FOLDER/RKJSModules/vendor/react/react/\n+          mv build/facebook-react-native/react-is/cjs/ $BASE_FOLDER/RKJSModules/vendor/react/react-is/\n+          mv build/facebook-react-native/react-test-renderer/cjs/ $BASE_FOLDER/RKJSModules/vendor/react/react-test-renderer/\n \n           # Delete OSS renderer. OSS renderer is synced through internal script.\n           RENDERER_FOLDER=$BASE_FOLDER/react-native-github/Libraries/Renderer/implementations/",
        "org_msg": "Update `compiled-rn` destination paths to `vendor/react` (#28989)\n\nI'm changing the destination paths in fbsource from `vendor/*` to\r\n`vendor/react/*`.",
        "sim_msg": "Update flow config settings",
        "sim_diff": "diff --git a/.flowconfig b/.flowconfig .*/android/.*\n.*/ios/.*\n.*/assets/.*\n-.*/config/.*\n+./config/.*\n.*/public/.*\n.*/scripts/.*\n.*/node_modules/.*\n+\n[libs]\n-./flow-typed/\n+./flow-typed/.*\n[options]\n-module.file_ext=.js\n-module.file_ext=.native.js\n-module.file_ext=.android.js\n-module.file_ext=.ios.js\n\\ No newline at end of file\n+# https://github.com/facebook/react-native/issues/19766#issuecomment-398099206\n+module.system=haste\n+module.system.haste.use_name_reducers=true\n+# keep the following in sync with server/haste/hasteImpl.js\n+# get basename\n+module.system.haste.name_reducers='^.*/\\([a-zA-Z0-9$_.-]+\\.js\\(\\.flow\\)?\\)$' -> '\\1'\n+# strip .js or .js.flow suffix\n+module.system.haste.name_reducers='^\\(.*\\)\\.js\\(\\.flow\\)?$' -> '\\1'\n+# strip .ios suffix\n+module.system.haste.name_reducers='^\\(.*\\)\\.ios$' -> '\\1'\n+module.system.haste.name_reducers='^\\(.*\\)\\.android$' -> '\\1'\n+module.system.haste.name_reducers='^\\(.*\\)\\.native$' -> '\\1'\n+module.system.haste.paths.blacklist=.*/__tests__/.*\n+module.system.haste.paths.blacklist=.*/__mocks__/.*\n+module.system.haste.paths.blacklist=<PROJECT_ROOT>/node_modules/react-native/Libraries/Animated/src/polyfills/.*\n+module.system.haste.paths.whitelist=<PROJECT_ROOT>/node_modules/react-native/Libraries/.*\n+module.name_mapper='^react-native$' -> 'react-native-web'\n+\n"
    },
    {
        "org_diff": "diff --git a/scripts/rollup/wrappers.js b/a/scripts/rollup/wrappers.js @@ -1,7 +1,5 @@\n 'use strict';\n \n-const {resolve} = require('path');\n-const {readFileSync} = require('fs');\n const {signFile, getSigningToken} = require('signedsource');\n const {bundleTypes, moduleTypes} = require('./bundles');\n \n@@ -30,19 +28,25 @@ const {RECONCILER} = moduleTypes;\n \n const USE_STRICT_HEADER_REGEX = /'use strict';\\n+/;\n \n-function registerInternalModuleStart(globalName) {\n-  const path = resolve(__dirname, 'wrappers', 'registerInternalModuleBegin.js');\n-  const file = readFileSync(path);\n-  return String(file).trim();\n+function wrapWithRegisterInternalModule(source) {\n+  return `\\\n+'use strict';\n+if (\n+  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n+  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart ===\n+    'function'\n+) {\n+  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\n }\n-\n-function registerInternalModuleStop(globalName) {\n-  const path = resolve(__dirname, 'wrappers', 'registerInternalModuleEnd.js');\n-  const file = readFileSync(path);\n-\n-  // Remove the 'use strict' directive from the footer.\n-  // This directive is only meaningful when it is the first statement in a file or function.\n-  return String(file).replace(USE_STRICT_HEADER_REGEX, '').trim();\n+${source}\n+if (\n+  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n+  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop ===\n+    'function'\n+) {\n+  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\n+}\n+`;\n }\n \n const license = ` * Copyright (c) Meta Platforms, Inc. and affiliates.\n@@ -496,11 +500,7 @@ function wrapWithTopLevelDefinitions(\n \n         // Certain DEV and Profiling bundles should self-register their own module boundaries with DevTools.\n         // This allows the Timeline to de-emphasize (dim) internal stack frames.\n-        source = `\n-          ${registerInternalModuleStart(globalName)}\n-          ${source}\n-          ${registerInternalModuleStop(globalName)}\n-        `;\n+        source = wrapWithRegisterInternalModule(source);\n         break;\n     }\n   }",
        "org_msg": "Bundle config: inline internal hook wrapper (#28978)\n\nBundle config: inline internal hook wrapper\r\n\r\nInstead of reading this wrapper from 2 files for \"start\" and \"end\" and\r\nthen string modifying the templates, just inline them like the other\r\nwrappers in this file.",
        "sim_msg": "Update checkRequirements to check isAdBlockerActive async.",
        "sim_diff": "diff --git a/assets/js/modules/adsense/index.js b/assets/js/modules/adsense/index.js @@ -54,7 +54,7 @@ let isAdBlockerActive = () => {};\nexport const registerStore = ( registry ) => {\nregisterDataStore( registry );\n// TODO: fix hack\n- isAdBlockerActive = () => registry.select( STORE_NAME ).isAdBlockerActive();\n+ isAdBlockerActive = () => registry.__experimentalResolveSelect( STORE_NAME ).isAdBlockerActive();\n};\nexport const registerModule = ( modules ) => {\n@@ -67,8 +67,8 @@ export const registerModule = ( modules ) => {\nSettingsSetupIncompleteComponent: SettingsSetupIncomplete,\nSetupComponent: SetupMain,\nIcon: AdSenseIcon,\n- checkRequirements: () => {\n- if ( ! isAdBlockerActive() ) {\n+ checkRequirements: async () => {\n+ if ( ! await isAdBlockerActive() ) {\nreturn;\n}\n"
    },
    {
        "org_diff": "diff --git a/.github/workflows/commit_artifacts.yml b/a/.github/workflows/commit_artifacts.yml @@ -210,42 +210,6 @@ jobs:\n           commit_user_email: ${{ github.actor }}@users.noreply.github.com\n           create_branch: true\n \n-  commit_fbsource_artifacts_external_repo:\n-    needs: download_artifacts\n-    runs-on: ubuntu-latest\n-    if: ${{ (github.ref == 'refs/heads/main' && needs.download_artifacts.outputs.fbsource_branch_count == '0') || github.ref == 'refs/heads/meta-fbsource' }}\n-    steps:\n-      - uses: actions/checkout@v4\n-        with:\n-          ref: main\n-          repository: facebook/react-fbsource-import\n-          token: ${{secrets.FBSOURCE_SYNC_PUSH_TOKEN}}\n-      - name: Ensure clean directory\n-        run: rm -rf compiled-rn\n-      - uses: actions/download-artifact@v3\n-        with:\n-          name: compiled-rn\n-          path: compiled-rn/\n-      - run: git status -u\n-      - name: Check if only the REVISION file has changed\n-        id: check_should_commit\n-        run: |\n-          if git status --porcelain | grep -qv '/REVISION$'; then\n-            echo \"should_commit=true\" >> \"$GITHUB_OUTPUT\"\n-          else\n-            echo \"should_commit=false\" >> \"$GITHUB_OUTPUT\"\n-          fi\n-      - name: Commit changes to branch\n-        if: steps.check_should_commit.outputs.should_commit == 'true'\n-        uses: stefanzweifel/git-auto-commit-action@v4\n-        with:\n-          commit_message: |\n-            ${{ github.event.head_commit.message }}\n-\n-            DiffTrain build for commit https://github.com/facebook/react/commit/${{ github.sha }}.\n-          commit_user_name: ${{ github.actor }}\n-          commit_user_email: ${{ github.actor }}@users.noreply.github.com\n-\n   commit_fbsource_artifacts:\n     needs: download_artifacts\n     if: ${{ (github.ref == 'refs/heads/main' && needs.download_artifacts.outputs.fbsource_branch_count == '0') || github.ref == 'refs/heads/meta-fbsource' }}",
        "org_msg": "Stop committing resources to an external repo (#28963)\n\nThis has been integrated into this repo (`builds/facebook-fbsource`) so\r\nwe no longer need the extra repo",
        "sim_msg": "ci: optimize statuses in the deploy workflow",
        "sim_diff": "diff --git a/.github/workflows/deploy-to-artifacts.yml b/.github/workflows/deploy-to-artifacts.yml @@ -15,9 +15,12 @@ on:\ndescription: 'The base commit ref'\njobs:\n- pre:\n+ build:\nruns-on: ubuntu-latest\nenvironment: CI\n+ needs: pre\n+ outputs:\n+ sha: ${{steps.prep.outputs.sha}}\nsteps:\n- uses: actions/github-script@v3\nwith:\n@@ -31,13 +34,6 @@ jobs:\nstate: 'pending',\ntarget_url: `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`\n});\n- build:\n- runs-on: ubuntu-latest\n- environment: CI\n- needs: pre\n- outputs:\n- sha: ${{steps.prep.outputs.sha}}\n- steps:\n- id: prep\nuses: actions/github-script@v3\nwith:\n@@ -77,6 +73,18 @@ jobs:\nruns-on: ubuntu-latest\nneeds: pre\nsteps:\n+ - uses: actions/github-script@v3\n+ with:\n+ github-token: ${{secrets.ACTIVE_TOKEN}}\n+ script: |\n+ await github.repos.createCommitStatus({\n+ owner: context.repo.owner,\n+ repo: context.repo.repo,\n+ sha: context.payload.inputs.sha,\n+ context: context.workflow,\n+ state: 'pending',\n+ target_url: `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`\n+ });\n- uses: actions/checkout@v2\nwith:\nref: ${{ github.event.inputs.sha }}\n@@ -132,12 +140,6 @@ jobs:\ntasks.push('test-server-stable.yml');\nawait Promise.all(tasks.map(task => dispatchWorkflow(task)));\n-\n- post:\n- runs-on: ubuntu-latest\n- environment: CI\n- needs: test\n- steps:\n- uses: actions/github-script@v3\nwith:\ngithub-token: ${{secrets.ACTIVE_TOKEN}}\n@@ -150,13 +152,8 @@ jobs:\nstate: 'success',\ntarget_url: `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}#artifacts`\n});\n- failure:\n- runs-on: ubuntu-latest\n- environment: CI\n- needs: test\n- if: failure() || cancelled()\n- steps:\n- uses: actions/github-script@v3\n+ if: failure() || cancelled()\nwith:\ngithub-token: ${{secrets.ACTIVE_TOKEN}}\nscript: |\n@@ -169,4 +166,3 @@ jobs:\ntarget_url: `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`\n});\n\\ No newline at end of file\n-\n"
    },
    {
        "org_diff": "diff --git a/packages/react-devtools-fusebox/src/frontend.js b/a/packages/react-devtools-fusebox/src/frontend.js @@ -62,6 +62,7 @@ export function initialize(\n       store={store}\n       showTabBar={true}\n       warnIfLegacyBackendDetected={true}\n+      enabledInspectedElementContextMenu={true}\n     />,\n   );\n }",
        "org_msg": "[DevTools] Enable inspected element context menu in Fusebox (#28972)\n\n## Summary\r\n\r\nEnables the inspected element context menu in React Native DevTools\r\n(Fusebox).\r\n\r\n## How did you test this change?\r\n\r\n1. `yarn build` in `react-devtools-fusebox`\r\n2. Copy artifacts to rn-chrome-devtools-frontend\r\n3. Manually test the context menu\r\n\r\n\r\nhttps://github.com/facebook/react/assets/2246565/b35cc20f-8d67-43b0-b863-7731e10fffac\r\n\r\nNOTE: The serialised values sometimes expose React internals (e.g. Hook\r\ndata structures instead of just the values), but that seems to be a\r\nproblem equally on web, so I'm going for native<->web parity here.",
        "sim_msg": "Allow dashboard to show description",
        "sim_diff": "diff --git a/packages/civic-sandbox/src/components/Packages/index.js b/packages/civic-sandbox/src/components/Packages/index.js @@ -112,14 +112,9 @@ export class Packages extends React.Component {\n<a onClick={this.closeMap}>&lt; Back to Packages</a>\n</p>\n<SandboxComponent />\n- {selectedFoundationDatum && <div\n- style={{\n- top: '175px',\n- position: 'absolute',\n- width: '100%',\n- }}\n- >\n- <CivicSandboxDashboard data={selectedFoundationDatum} />\n+ {selectedFoundationDatum && <div>\n+ <CivicSandboxDashboard data={selectedFoundationDatum}>\n+ </CivicSandboxDashboard>\n</div>}\n</section>)}\n</div>\n"
    },
    {
        "org_diff": "diff --git a/.circleci/config.yml b/a/.circleci/config.yml @@ -228,6 +228,13 @@ jobs:\n           command: ./scripts/circleci/pack_and_store_devtools_artifacts.sh\n       - store_artifacts:\n           path: ./build/devtools.tgz\n+      # Simplifies getting the extension for local testing\n+      - store_artifacts:\n+          path: ./build/devtools/chrome-extension.zip\n+          destination: react-devtools-chrome-extension.zip\n+      - store_artifacts:\n+          path: ./build/devtools/firefox-extension.zip\n+          destination: react-devtools-firefox-extension.zip\n \n   run_devtools_e2e_tests:\n     docker: *docker",
        "org_msg": "Devtools: Streamline getting extension from branch (#28975)",
        "sim_msg": "run `npm pack` on publish Ci container",
        "sim_diff": "diff --git a/.circleci/config.yml b/.circleci/config.yml @@ -136,10 +136,20 @@ jobs:\n- store_artifacts:\npath: dist\ndestination: dist\n+ - run:\n+ name: Pack tarball\n+ command: |\n+ npm pack\n+ version=$(node -e \"console.log(require('./package.json').version)\")\n+ mv plotly.js-$version.tgz plotly.js.tgz\n+ - store_artifacts:\n+ path: plotly.js.tgz\n+ destination: /plotly.js.tgz\n- run:\nname: Show URLs to build files\ncommand: |\nPROJECT_NUM=45646037\n+ echo https://$CIRCLE_BUILD_NUM-$PROJECT_NUM-gh.circle-artifacts.com/0/plotly.js.tgz\necho https://$CIRCLE_BUILD_NUM-$PROJECT_NUM-gh.circle-artifacts.com/0/dist/plotly.js\necho https://$CIRCLE_BUILD_NUM-$PROJECT_NUM-gh.circle-artifacts.com/0/dist/plotly.min.js\necho https://$CIRCLE_BUILD_NUM-$PROJECT_NUM-gh.circle-artifacts.com/0/dist/plot-schema.json\n"
    },
    {
        "org_diff": "diff --git a/dangerfile.js b/a/dangerfile.js @@ -44,7 +44,9 @@ const CRITICAL_ARTIFACT_PATHS = new Set([\n   // We always report changes to these bundles, even if the change is\n   // insignificant or non-existent.\n   'oss-stable/react-dom/cjs/react-dom.production.js',\n+  'oss-stable/react-dom/cjs/react-dom-client.production.js',\n   'oss-experimental/react-dom/cjs/react-dom.production.js',\n+  'oss-experimental/react-dom/cjs/react-dom-client.production.js',\n   'facebook-www/ReactDOM-prod.classic.js',\n   'facebook-www/ReactDOM-prod.modern.js',\n ]);",
        "org_msg": "[Tooling] Update critical artifact list (#28966)\n\nWhen a React PR is opened CI will report large size changes. But for\r\ncritical packages like react-dom it reports always. In React 19 we moved\r\nthe build for react-dom the client reconciler from react-dom to\r\nreact-dom/client\r\n\r\nThis change adds react-dom-client artifacts for stable and oss channels\r\nsince that is originally what was being tracked. But since\r\nreact-dom/client always imports react-dom I left the original react-dom\r\npackages as critical as well. They are small but it would be good to\r\nkeep an eye on them",
        "sim_msg": "add a test suit for activate's reducer",
        "sim_diff": "diff --git a/generators/client/files-react.js b/generators/client/files-react.js @@ -386,6 +386,7 @@ const files = {\n'spec/app/utils.ts',\n'spec/app/config/notification-middleware.spec.ts',\n'spec/app/shared/layout/header.spec.tsx',\n+ 'spec/app/reducers/activate.spec.tsx',\n// 'spec/app/account/activate/_activate.component.spec.js',\n// 'spec/app/account/password/_password.component.spec.js',\n// 'spec/app/account/password/_password-strength-bar.component.spec.js',\n"
    },
    {
        "org_diff": "diff --git a/packages/react-native-renderer/src/__tests__/ReactNativeAttributePayload-test.internal.js b/a/packages/react-native-renderer/src/__tests__/ReactNativeAttributePayload-test.internal.js @@ -204,6 +204,19 @@ describe('ReactNativeAttributePayload', () => {\n     ).toEqual({foo: null}); // this should ideally be null. heuristic.\n   });\n \n+  it('handles attributes defined multiple times', () => {\n+    const validAttributes = {foo: true, style: {foo: true}};\n+    expect(diff({}, {foo: 4, style: {foo: 2}}, validAttributes)).toEqual({\n+      foo: 2,\n+    });\n+    expect(diff({foo: 4}, {style: {foo: 2}}, validAttributes)).toEqual({\n+      foo: 2,\n+    });\n+    expect(diff({style: {foo: 2}}, {foo: 4}, validAttributes)).toEqual({\n+      foo: 4,\n+    });\n+  });\n+\n   // Function properties are just markers to native that events should be sent.\n   it('should convert functions to booleans', () => {\n     // Note that if the property changes from one function to another, we don't",
        "org_msg": "[react-native] Add unit test to ReactNativeAttributePayload (#28955)\n\n## Summary\r\n\r\nI'm looking at cleaning up some unnecessary manual property flattening\r\nin React Native and wanted to verify this behaviour is working as\r\nexpected, where properties from nested objects will always overwrite\r\nproperties from the base object.\r\n\r\n## How did you test this change?\r\n\r\nUnit tests",
        "sim_msg": "test toPlainObject",
        "sim_diff": "diff --git a/test/index.test.js b/test/index.test.js @@ -20,6 +20,83 @@ const DefinitionBuilder = require('../src/definition-builder');\nconst Enforcer = require('../index');\nconst expect = require('chai').expect;\n+describe('index/toPlainObject', () => {\n+\n+ it('returns primitive as is', () => {\n+ const result = Enforcer.toPlainObject('hello');\n+ expect(result).to.equal('hello');\n+ });\n+\n+ it('can handle plain object', () => {\n+ const o = { a: 1, b: 2, c: [1, 2] };\n+ const result = Enforcer.toPlainObject(o);\n+ expect(result).to.deep.equal(o);\n+ });\n+\n+ it('can handle array', () => {\n+ const o = [1, 2, { a: 1, b: 2 }];\n+ const result = Enforcer.toPlainObject(o);\n+ expect(result).to.deep.equal(o);\n+ });\n+\n+ describe('non plain object', () => {\n+ const d = new Date();\n+\n+ function A () {\n+ this.a = 1;\n+ this.d = d;\n+\n+ Object.defineProperty(this, 'c', {\n+ enumerable: true,\n+ value: 'c'\n+ })\n+ }\n+ A.prototype.f = function () { return 'function' };\n+ A.prototype.s = 'string';\n+ Object.defineProperty(A.prototype, 'b', { enumerable: true, value: true });\n+\n+ it('leaves Date alone', () => {\n+ const o = { d: d };\n+ const result = Enforcer.toPlainObject(o);\n+ expect(result).to.deep.equal(o);\n+ expect(result.d.constructor).to.equal(Date);\n+ });\n+\n+ it('can convert non-plain object', () => {\n+ const result = Enforcer.toPlainObject(new A());\n+ expect(result).to.deep.equal({\n+ a: 1,\n+ d: d,\n+ c: 'c'\n+ });\n+ expect(result.constructor).to.equal(Object);\n+ });\n+\n+ it('can convert non-plain object including inherited', () => {\n+ const result = Enforcer.toPlainObject(new A(), { allowInheritedProperties: true });\n+ expect(result).to.deep.equal({\n+ a: 1,\n+ d: d,\n+ c: 'c',\n+ s: 'string',\n+ b: true\n+ });\n+ expect(result.constructor).to.equal(Object);\n+ });\n+\n+ it('can preserve non-plain object', () => {\n+ const a = new A();\n+ const o = { a: a };\n+ const result = Enforcer.toPlainObject(o, { preserve: [ A ] });\n+ expect(result).to.deep.equal({ a: a });\n+ expect(result).not.to.equal(o);\n+ expect(result.a.constructor).to.equal(A);\n+ });\n+\n+ });\n+\n+});\n+\ndescribe('index/request', () => {\ndescribe('path parameters', () => {\n"
    },
    {
        "org_diff": "diff --git a/packages/react/npm/jsx-dev-runtime.react-server.js b/a/packages/react/npm/jsx-dev-runtime.react-server.js @@ -1,7 +1,7 @@\n 'use strict';\n \n if (process.env.NODE_ENV === 'production') {\n-  module.exports = require('./cjs/react-jsx-dev-runtime.react-server.production.min.js');\n+  module.exports = require('./cjs/react-jsx-dev-runtime.react-server.production.js');\n } else {\n   module.exports = require('./cjs/react-jsx-dev-runtime.react-server.development.js');\n }",
        "org_msg": "Import correct prod version of jsx-dev-runtime for react-server (#28939)",
        "sim_msg": "Pass httpServer to runtime even when httpAdmin disabled\nFixes",
        "sim_diff": "diff --git a/packages/node_modules/node-red/lib/red.js b/packages/node_modules/node-red/lib/red.js @@ -76,7 +76,7 @@ module.exports = {\napiEnabled = true;\nserver = httpServer;\n} else {\n- runtime.init(userSettings);\n+ runtime.init(userSettings, httpServer);\napiEnabled = false;\nif (httpServer) {\nserver = httpServer;\n"
    },
    {
        "org_diff": "diff --git a/CHANGELOG.md b/a/CHANGELOG.md @@ -1,3 +1,7 @@\n+## 18.3.1 (April 26, 2024)\n+\n+- Export `act` from `react` [f1338f](https://github.com/facebook/react/commit/f1338f8080abd1386454a10bbf93d67bfe37ce85)\n+\n ## 18.3.0 (April 25, 2024)\n \n This release is identical to 18.2 but adds warnings for deprecated APIs and other changes that are needed for React 19.",
        "org_msg": "Add changelog for 18.3.1 (#28932)",
        "sim_msg": "Update CHANGELOG with v0.3.0",
        "sim_diff": "diff --git a/CHANGELOG.md b/CHANGELOG.md @@ -3,6 +3,10 @@ All notable changes to this project will be documented in this file.\nThe format is based on [Keep a Changelog](http://keepachangelog.com) and this project adheres to [Semantic Versioning](http://semver.org).\n+## [0.3.0](https://github.com/remarkablemark/html-react-parser/compare/v0.2.0...v0.3.0) - 2016-11-18\n+### Changed\n+- Upgrade `react` and `react-dom` to >15.4\n+\n## [0.2.0](https://github.com/remarkablemark/html-react-parser/compare/v0.1.1...v0.2.0) - 2016-11-18\n### Added\n- Create npm script `clean` that removes `dist/` directory\n"
    },
    {
        "org_diff": "diff --git a/CHANGELOG.md b/a/CHANGELOG.md @@ -1,3 +1,24 @@\n+## 18.3.0 (April 25, 2024)\n+\n+This release is identical to 18.2 but adds warnings for deprecated APIs and other changes that are needed for React 19.\n+\n+Read the [React 19 Upgrade Guide](https://react.dev/blog/2024/04/25/react-19-upgrade-guide) for more info.\n+\n+### React\n+\n+- Allow writing to `this.refs` to support string ref codemod [909071](https://github.com/facebook/react/commit/9090712fd3ca4e1099e1f92e67933c2cb4f32552)\n+- Warn for deprecated `findDOMNode` outside StrictMode [c3b283](https://github.com/facebook/react/commit/c3b283964108b0e8dbcf1f9eb2e7e67815e39dfb)\n+- Warn for deprecated `test-utils` methods [d4ea75](https://github.com/facebook/react/commit/d4ea75dc4258095593b6ac764289f42bddeb835c)\n+- Warn for deprecated Legacy Context outside StrictMode [415ee0](https://github.com/facebook/react/commit/415ee0e6ea0fe3e288e65868df2e3241143d5f7f)\n+- Warn for deprecated string refs outside StrictMode [#25383](https://github.com/facebook/react/pull/25383)\n+- Warn for deprecated `defaultProps` for function components [#25699](https://github.com/facebook/react/pull/25699)\n+- Warn when spreading `key` [#25697](https://github.com/facebook/react/pull/25697)\n+- Warn when using `act` from `test-utils` [d4ea75](https://github.com/facebook/react/commit/d4ea75dc4258095593b6ac764289f42bddeb835c)\n+\n+### React DOM\n+- Warn for deprecated `unmountComponentAtNode` [8a015b](https://github.com/facebook/react/commit/8a015b68cc060079878e426610e64e86fb328f8d)\n+- Warn for deprecated `renderToStaticNodeStream` [#28874](https://github.com/facebook/react/pull/28874)\n+\n ## 18.2.0 (June 14, 2022)\n \n ### React DOM",
        "org_msg": "Add changelog for 18.3 (#28929)\n\nFixes https://github.com/facebook/react/issues/28924",
        "sim_msg": "Update CHANGELOG with v0.3.0",
        "sim_diff": "diff --git a/CHANGELOG.md b/CHANGELOG.md @@ -3,6 +3,10 @@ All notable changes to this project will be documented in this file.\nThe format is based on [Keep a Changelog](http://keepachangelog.com) and this project adheres to [Semantic Versioning](http://semver.org).\n+## [0.3.0](https://github.com/remarkablemark/html-react-parser/compare/v0.2.0...v0.3.0) - 2016-11-18\n+### Changed\n+- Upgrade `react` and `react-dom` to >15.4\n+\n## [0.2.0](https://github.com/remarkablemark/html-react-parser/compare/v0.1.1...v0.2.0) - 2016-11-18\n### Added\n- Create npm script `clean` that removes `dist/` directory\n"
    },
    {
        "org_diff": "diff --git a/packages/react-reconciler/README.md b/a/packages/react-reconciler/README.md @@ -318,6 +318,30 @@ Same as `unhideInstance`, but for nodes created by `createTextInstance`.\n \n This method should mutate the `container` root node and remove all children from it.\n \n+#### `maySuspendCommit(type, props)`\n+\n+This method is called during render to determine if the Host Component type and props require some kind of loading process to complete before committing an update.\n+\n+#### `preloadInstance(type, props)`\n+\n+This method may be called during render if the Host Component type and props might suspend a commit. It can be used to initiate any work that might shorten the duration of a suspended commit.\n+\n+#### `startSuspendingCommit()`\n+\n+This method is called just before the commit phase. Use it to set up any necessary state while any Host Components that might suspend this commit are evaluated to determine if the commit must be suspended.\n+\n+#### `suspendInstance(type, props)`\n+\n+This method is called after `startSuspendingCommit` for each Host Component that indicated it might suspend a commit.\n+\n+#### `waitForCommitToBeReady()`\n+\n+This method is called after all `suspendInstance` calls are complete.\n+\n+Return `null` if the commit can happen immediately.\n+\n+Return `(initiateCommit: Function) => Function` if the commit must be suspended. The argument to this callback will initiate the commit when called. The return value is a cancellation function that the Reconciler can use to abort the commit.\n+\n ### Persistence Methods\n \n If you use the persistent mode instead of the mutation mode, you would still need the \"Core Methods\". However, instead of the Mutation Methods above you will implement a different set of methods that performs cloning nodes and replacing them at the root level. You can find a list of them in the \"Persistence\" section [listed in this file](https://github.com/facebook/react/blob/main/packages/react-reconciler/src/forks/ReactFiberConfig.custom.js). File an issue if you need help.",
        "org_msg": "Add descriptions of new methods to the react-reconciler readme (#28750)\n\nAdd new reconciler methods since last breaking change to the README\r\nbased on usage and comments.\r\n\r\n---------\r\n\r\nCo-authored-by: Josh Story <josh.c.story@gmail.com>",
        "sim_msg": "be more selective with the props we pass to components",
        "sim_diff": "diff --git a/packages/idyll-document/src/index.js b/packages/idyll-document/src/index.js @@ -142,8 +142,9 @@ class Wrapper extends React.PureComponent {\n);\n}\n+ const { __expr__, __vars__, hasError, ...state } = this.state;\nreturn React.Children.map(this.props.children, (c, i) => {\n- return React.cloneElement(c, {key: `${this.key}-${i}`, ...this.state});\n+ return React.cloneElement(c, {key: `${this.key}-${i}`, ...state});\n});\n}\n}\n"
    },
    {
        "org_diff": "diff --git a/packages/react/src/jsx/ReactJSXElement.js b/a/packages/react/src/jsx/ReactJSXElement.js @@ -738,9 +738,7 @@ export function createElement(type, config, children) {\n         console.warn(\n           'Your app (or one of its dependencies) is using an outdated JSX ' +\n             'transform. Update to the modern JSX transform for ' +\n-            'faster performance: ' +\n-            // TODO: Create a short link for this\n-            'https://reactjs.org/blog/2020/09/22/introducing-the-new-jsx-transform.html',\n+            'faster performance: https://react.dev/link/new-jsx-transform',\n         );\n       }\n     }",
        "org_msg": "Create short link for jsx warning (#28899)\n\nShort link created in https://github.com/reactjs/react.dev/pull/6772",
        "sim_msg": "pass down a ref callback to custom component instead of relying the return value of React.render",
        "sim_diff": "diff --git a/src/components/ReactComponent.jsx b/src/components/ReactComponent.jsx @@ -10,6 +10,7 @@ export default class ReactComponent extends Field {\n*/\nconstructor(component, options, data) {\nsuper(component, options, data);\n+ this.reactInstance = null;\n}\n/**\n@@ -40,6 +41,15 @@ export default class ReactComponent extends Field {\nreturn super.render(`<div ref=\"react-${this.id}\"></div>`);\n}\n+ /**\n+ * Callback ref to store a reference to the node.\n+ *\n+ * @param element - the node\n+ */\n+ setReactInstance(element) {\n+ this.reactInstance = element;\n+ }\n+\n/**\n* The third phase of component building where the component has been attached to the DOM as 'element' and is ready\n* to have its javascript events attached.\n@@ -57,7 +67,7 @@ export default class ReactComponent extends Field {\n});\nif (this.refs[`react-${this.id}`]) {\n- this.reactInstance = this.attachReact(this.refs[`react-${this.id}`]);\n+ this.attachReact(this.refs[`react-${this.id}`], this.setReactInstance.bind(this));\nif (this.shouldSetValue) {\nthis.setValue(this.dataForSetting);\nthis.updateValue(this.dataForSetting);\n@@ -81,8 +91,9 @@ export default class ReactComponent extends Field {\n* Override this function to insert your custom component.\n*\n* @param element\n+ * @param ref - callback ref\n*/\n- attachReact(element) {\n+ attachReact(element, ref) {\nreturn;\n}\n"
    },
    {
        "org_diff": "diff --git a/packages/react/src/__tests__/ReactProfilerComponent-test.internal.js b/a/packages/react/src/__tests__/ReactProfilerComponent-test.internal.js @@ -19,19 +19,13 @@ function loadModules({\n   enableProfilerTimer = true,\n   enableProfilerCommitHooks = true,\n   enableProfilerNestedUpdatePhase = true,\n-  enableProfilerNestedUpdateScheduledHook = false,\n-  replayFailedUnitOfWorkWithInvokeGuardedCallback = false,\n } = {}) {\n   ReactFeatureFlags = require('shared/ReactFeatureFlags');\n \n   ReactFeatureFlags.enableProfilerTimer = enableProfilerTimer;\n   ReactFeatureFlags.enableProfilerCommitHooks = enableProfilerCommitHooks;\n   ReactFeatureFlags.enableProfilerNestedUpdatePhase =\n     enableProfilerNestedUpdatePhase;\n-  ReactFeatureFlags.enableProfilerNestedUpdateScheduledHook =\n-    enableProfilerNestedUpdateScheduledHook;\n-  ReactFeatureFlags.replayFailedUnitOfWorkWithInvokeGuardedCallback =\n-    replayFailedUnitOfWorkWithInvokeGuardedCallback;\n \n   React = require('react');\n   ReactDOMClient = require('react-dom/client');",
        "org_msg": "Cleanup `replayFailedUnitOfWorkWithInvokeGuardedCallback`and `enableProfilerNestedUpdateScheduledHook` (#28891)",
        "sim_msg": "test(html-to-react): tidy and organize tests in html-to-react.js",
        "sim_diff": "diff --git a/test/html-to-react.js b/test/html-to-react.js const assert = require('assert');\nconst React = require('react');\n-const parse = require('../');\n+const parse = require('..');\nconst { data, render } = require('./helpers/');\ndescribe('html-to-react', () => {\n+ describe('exports', () => {\n+ it('has default ES Module', () => {\n+ assert.strictEqual(parse.default, parse);\n+ });\n+\n+ it('has domToReact', () => {\n+ assert.strictEqual(parse.domToReact, require('../lib/dom-to-react'));\n+ });\n+\n+ it('contains htmlToDOM', () => {\n+ assert.strictEqual(parse.htmlToDOM, require('html-dom-parser'));\n+ });\n+ });\n+\ndescribe('parser', () => {\n[undefined, null, {}, [], 42].forEach(value => {\nit(`throws an error if first argument is ${value}`, () => {\n@@ -13,10 +27,6 @@ describe('html-to-react', () => {\n});\n});\n- it('has default ES Module defined', () => {\n- assert.strictEqual(parse.default, parse);\n- });\n-\nit('returns string if it cannot be parsed as HTML', () => {\nassert.strictEqual(parse('foo'), 'foo');\n});\n@@ -77,7 +87,7 @@ describe('html-to-react', () => {\ndescribe('options', () => {\ndescribe('replace', () => {\n- it('overrides the element if replace is valid', () => {\n+ it('overrides the element if a valid React element is returned', () => {\nconst html = data.html.complex;\nconst reactElement = parse(html, {\nreplace: node => {\n@@ -92,7 +102,7 @@ describe('html-to-react', () => {\n);\n});\n- it('does not override the element if replace is invalid', () => {\n+ it('does not override the element if an invalid React element is returned', () => {\nconst html = data.html.complex;\nconst reactElement = parse(html, {\nreplace: node => {\n@@ -115,9 +125,3 @@ describe('html-to-react', () => {\n});\n});\n});\n-\n-describe('dom-to-react', () => {\n- it('exports domToReact', () => {\n- assert.strictEqual(parse.domToReact, require('../lib/dom-to-react'));\n- });\n-});\n"
    },
    {
        "org_diff": "diff --git a/scripts/rollup/bundles.js b/a/scripts/rollup/bundles.js @@ -879,9 +879,7 @@ const bundles = [\n \n   /******* React Cache (experimental, old) *******/\n   {\n-    // This is only used by our own tests.\n-    // We can delete it later.\n-    bundleTypes: [NODE_DEV, NODE_PROD],\n+    bundleTypes: [NODE_DEV, NODE_PROD, FB_WWW_DEV, FB_WWW_PROD],\n     moduleType: ISOMORPHIC,\n     entry: 'react-cache',\n     global: 'ReactCacheOld',",
        "org_msg": "Add missing bundle types for ReactCacheOld (#28860)\n\nAdd missing bundle types for ReactCacheOld\r\n\r\nThese are used at FB and we need to update them for the SecretInternals\r\nupdate.",
        "sim_msg": "fix sass on macOS",
        "sim_diff": "diff --git a/app_web/package.json b/app_web/package.json \"@rollup/plugin-replace\": \"^2.4.1\",\n\"concurrently\": \"^5.3.0\",\n\"eslint\": \"^6.8.0\",\n+ \"node-sass\": \"^6.0.0\",\n\"rollup\": \"^1.31.1\",\n\"rollup-plugin-commonjs\": \"^10.1.0\",\n\"rollup-plugin-copy\": \"^3.3.0\",\n\"rollup-plugin-node-builtins\": \"^2.1.2\",\n\"rollup-plugin-node-resolve\": \"^5.2.0\",\n\"rollup-plugin-scss\": \"^2.6.1\",\n- \"sass\": \"^1.32.8\",\n\"serve\": \"^11.3.0\"\n},\n\"bugs\": {\n"
    },
    {
        "org_diff": "diff --git a/.github/workflows/commit_artifacts.yml b/a/.github/workflows/commit_artifacts.yml @@ -210,7 +210,7 @@ jobs:\n           commit_user_email: ${{ github.actor }}@users.noreply.github.com\n           create_branch: true\n \n-  commit_fbsource_artifacts:\n+  commit_fbsource_artifacts_external_repo:\n     needs: download_artifacts\n     runs-on: ubuntu-latest\n     if: ${{ (github.ref == 'refs/heads/main' && needs.download_artifacts.outputs.fbsource_branch_count == '0') || github.ref == 'refs/heads/meta-fbsource' }}\n@@ -245,3 +245,39 @@ jobs:\n             DiffTrain build for commit https://github.com/facebook/react/commit/${{ github.sha }}.\n           commit_user_name: ${{ github.actor }}\n           commit_user_email: ${{ github.actor }}@users.noreply.github.com\n+\n+  commit_fbsource_artifacts:\n+    needs: download_artifacts\n+    if: ${{ (github.ref == 'refs/heads/main' && needs.download_artifacts.outputs.fbsource_branch_count == '0') || github.ref == 'refs/heads/meta-fbsource' }}\n+    runs-on: ubuntu-latest\n+    steps:\n+      - uses: actions/checkout@v4\n+        with:\n+          ref: builds/facebook-fbsource\n+      - name: Ensure clean directory\n+        run: rm -rf compiled\n+      - uses: actions/download-artifact@v3\n+        with:\n+          name: compiled-rn\n+          path: compiled-rn/\n+      - run: git status -u\n+      - name: Check if only the REVISION file has changed\n+        id: check_should_commit\n+        run: |\n+          if git status --porcelain | grep -qv '/REVISION$'; then\n+            echo \"should_commit=true\" >> \"$GITHUB_OUTPUT\"\n+          else\n+            echo \"should_commit=false\" >> \"$GITHUB_OUTPUT\"\n+          fi\n+      - name: Commit changes to branch\n+        if: steps.check_should_commit.outputs.should_commit == 'true'\n+        uses: stefanzweifel/git-auto-commit-action@v4\n+        with:\n+          commit_message: |\n+            ${{ github.event.head_commit.message }}\n+\n+            DiffTrain build for commit https://github.com/facebook/react/commit/${{ github.sha }}.\n+          branch: builds/facebook-fbsource\n+          commit_user_name: ${{ github.actor }}\n+          commit_user_email: ${{ github.actor }}@users.noreply.github.com\n+          create_branch: true",
        "org_msg": "Write Diff Train import branch to this repo (#28869)\n\nFor fbsource we've historically used a separate repo for imports due to\r\ninternal limitations in Diff Train. Those have been lifted so we can now\r\ncommit this branch here and then we can import from this repo (and get\r\nrid of the other repo)",
        "sim_msg": "ci: optimize statuses in the deploy workflow",
        "sim_diff": "diff --git a/.github/workflows/deploy-to-artifacts.yml b/.github/workflows/deploy-to-artifacts.yml @@ -15,9 +15,12 @@ on:\ndescription: 'The base commit ref'\njobs:\n- pre:\n+ build:\nruns-on: ubuntu-latest\nenvironment: CI\n+ needs: pre\n+ outputs:\n+ sha: ${{steps.prep.outputs.sha}}\nsteps:\n- uses: actions/github-script@v3\nwith:\n@@ -31,13 +34,6 @@ jobs:\nstate: 'pending',\ntarget_url: `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`\n});\n- build:\n- runs-on: ubuntu-latest\n- environment: CI\n- needs: pre\n- outputs:\n- sha: ${{steps.prep.outputs.sha}}\n- steps:\n- id: prep\nuses: actions/github-script@v3\nwith:\n@@ -77,6 +73,18 @@ jobs:\nruns-on: ubuntu-latest\nneeds: pre\nsteps:\n+ - uses: actions/github-script@v3\n+ with:\n+ github-token: ${{secrets.ACTIVE_TOKEN}}\n+ script: |\n+ await github.repos.createCommitStatus({\n+ owner: context.repo.owner,\n+ repo: context.repo.repo,\n+ sha: context.payload.inputs.sha,\n+ context: context.workflow,\n+ state: 'pending',\n+ target_url: `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`\n+ });\n- uses: actions/checkout@v2\nwith:\nref: ${{ github.event.inputs.sha }}\n@@ -132,12 +140,6 @@ jobs:\ntasks.push('test-server-stable.yml');\nawait Promise.all(tasks.map(task => dispatchWorkflow(task)));\n-\n- post:\n- runs-on: ubuntu-latest\n- environment: CI\n- needs: test\n- steps:\n- uses: actions/github-script@v3\nwith:\ngithub-token: ${{secrets.ACTIVE_TOKEN}}\n@@ -150,13 +152,8 @@ jobs:\nstate: 'success',\ntarget_url: `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}#artifacts`\n});\n- failure:\n- runs-on: ubuntu-latest\n- environment: CI\n- needs: test\n- if: failure() || cancelled()\n- steps:\n- uses: actions/github-script@v3\n+ if: failure() || cancelled()\nwith:\ngithub-token: ${{secrets.ACTIVE_TOKEN}}\nscript: |\n@@ -169,4 +166,3 @@ jobs:\ntarget_url: `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`\n});\n\\ No newline at end of file\n-\n"
    },
    {
        "org_diff": "diff --git a/packages/react-reconciler/src/ReactFiberCompleteWork.js b/a/packages/react-reconciler/src/ReactFiberCompleteWork.js @@ -329,7 +329,6 @@ function appendAllChildrenToContainer(\n     // children to find all the terminal nodes.\n     let node = workInProgress.child;\n     while (node !== null) {\n-      // eslint-disable-next-line no-labels\n       if (node.tag === HostComponent) {\n         let instance = node.stateNode;\n         if (needsVisibilityToggle && isHidden) {",
        "org_msg": "delete useless eslint-disable-next-line (#28859)\n\n<!--\r\n  Thanks for submitting a pull request!\r\nWe appreciate you spending the time to work on these changes. Please\r\nprovide enough information so that others can review your pull request.\r\nThe three fields below are mandatory.\r\n\r\nBefore submitting a pull request, please make sure the following is\r\ndone:\r\n\r\n1. Fork [the repository](https://github.com/facebook/react) and create\r\nyour branch from `main`.\r\n  2. Run `yarn` in the repository root.\r\n3. If you've fixed a bug or added code that should be tested, add tests!\r\n4. Ensure the test suite passes (`yarn test`). Tip: `yarn test --watch\r\nTestName` is helpful in development.\r\n5. Run `yarn test --prod` to test in the production environment. It\r\nsupports the same options as `yarn test`.\r\n6. If you need a debugger, run `yarn test --debug --watch TestName`,\r\nopen `chrome://inspect`, and press \"Inspect\".\r\n7. Format your code with\r\n[prettier](https://github.com/prettier/prettier) (`yarn prettier`).\r\n8. Make sure your code lints (`yarn lint`). Tip: `yarn linc` to only\r\ncheck changed files.\r\n  9. Run the [Flow](https://flowtype.org/) type checks (`yarn flow`).\r\n  10. If you haven't already, complete the CLA.\r\n\r\nLearn more about contributing:\r\nhttps://reactjs.org/docs/how-to-contribute.html\r\n-->\r\n\r\n## Summary\r\n\r\n<!--\r\nExplain the **motivation** for making this change. What existing problem\r\ndoes the pull request solve?\r\n-->\r\n\r\n## How did you test this change?\r\n\r\n<!--\r\nDemonstrate the code is solid. Example: The exact commands you ran and\r\ntheir output, screenshots / videos if the pull request changes the user\r\ninterface.\r\nHow exactly did you verify that your PR solves the issue you wanted to\r\nsolve?\r\n  If you leave this empty, your PR will very likely be closed.\r\n-->",
        "sim_msg": "docs(yoga/doc): undo route object type",
        "sim_diff": "diff --git a/packages/doc/src/components/Navigation/tree.js b/packages/doc/src/components/Navigation/tree.js @@ -20,7 +20,7 @@ const createObjectNesting = (routes, { title, url, linkable, order }) => {\nconst createTree = items => {\nconst filteredItems = items.filter(item => item);\n- let allRoutes = [];\n+ let allRoutes = {};\nfilteredItems.forEach(({ title, url, linkable, order }) => {\nconst explodedUrl = url.split('/').filter(item => item);\n"
    },
    {
        "org_diff": "diff --git a/packages/react-native-renderer/src/ReactNativeTypes.js b/a/packages/react-native-renderer/src/ReactNativeTypes.js @@ -174,6 +174,25 @@ export type TouchedViewDataAtPoint = $ReadOnly<{\n   ...InspectorData,\n }>;\n \n+export type RenderRootOptions = {\n+  onUncaughtError?: (\n+    error: mixed,\n+    errorInfo: {+componentStack?: ?string},\n+  ) => void,\n+  onCaughtError?: (\n+    error: mixed,\n+    errorInfo: {\n+      +componentStack?: ?string,\n+      // $FlowFixMe[unclear-type] unknown props and state.\n+      +errorBoundary?: ?React$Component<any, any>,\n+    },\n+  ) => void,\n+  onRecoverableError?: (\n+    error: mixed,\n+    errorInfo: {+componentStack?: ?string},\n+  ) => void,\n+};\n+\n /**\n  * Flat ReactNative renderer bundles are too big for Flow to parse efficiently.\n  * Provide minimal Flow typing for the high-level RN API and call it a day.\n@@ -202,6 +221,7 @@ export type ReactNativeType = {\n     element: Element<ElementType>,\n     containerTag: number,\n     callback: ?() => void,\n+    options: ?RenderRootOptions,\n   ): ?ElementRef<ElementType>,\n   unmountComponentAtNode(containerTag: number): void,\n   unmountComponentAtNodeAndRemoveContainer(containerTag: number): void,\n@@ -215,24 +235,6 @@ export opaque type InternalInstanceHandle = mixed;\n type PublicInstance = mixed;\n type PublicTextInstance = mixed;\n \n-export type RenderRootOptions = {\n-  onUncaughtError?: (\n-    error: mixed,\n-    errorInfo: {+componentStack?: ?string},\n-  ) => void,\n-  onCaughtError?: (\n-    error: mixed,\n-    errorInfo: {\n-      +componentStack?: ?string,\n-      +errorBoundary?: ?React$Component<any, any>,\n-    },\n-  ) => void,\n-  onRecoverableError?: (\n-    error: mixed,\n-    errorInfo: {+componentStack?: ?string},\n-  ) => void,\n-};\n-\n export type ReactFabricType = {\n   findHostInstance_DEPRECATED<TElementType: ElementType>(\n     componentOrHandle: ?(ElementRef<TElementType> | number),",
        "org_msg": "Update ReactNativeTypes for root options (part 2) (#28857)\n\nForgot to push a change before mergin\r\nhttps://github.com/facebook/react/pull/28850",
        "sim_msg": "Convert ErrorLoading to function component",
        "sim_diff": "diff --git a/generators/client/templates/react/src/main/webapp/app/shared/error/error-loading.tsx.ejs b/generators/client/templates/react/src/main/webapp/app/shared/error/error-loading.tsx.ejs @@ -2,14 +2,12 @@ import React from 'react';\nimport { Translate } from 'react-jhipster';\nimport { Alert } from 'reactstrap';\n-class ErrorLoading extends React.Component {\n- render() {\n+const ErrorLoading = () => {\nreturn (\n<div>\n<Alert color=\"danger\">Error loading component</Alert>\n</div>\n);\n- }\n-}\n+};\nexport default ErrorLoading as React.ComponentType<any>;\n"
    },
    {
        "org_diff": "diff --git a/packages/internal-test-utils/__tests__/ReactInternalTestUtils-test.js b/a/packages/internal-test-utils/__tests__/ReactInternalTestUtils-test.js @@ -2146,7 +2146,7 @@ describe('ReactInternalTestUtils console assertions', () => {\n         - Expected errors\n         + Received errors\n \n-        - This is a complete different message that happens to start with \"T\"\n+        - This is a completely different message that happens to start with \"T\"\n         + Message that happens to contain a \"T\" <component stack>\"\n       `);\n     });",
        "org_msg": "Complete the typo fix (#28856)",
        "sim_msg": "made some changes.. should.fail added to the end after try..catch suggested by \"If the function doesn't throw, then the test will be green\"",
        "sim_diff": "diff --git a/test/Utils/UtilsParser.test.js b/test/Utils/UtilsParser.test.js @@ -102,7 +102,9 @@ describe('#utilsParser', () => {\nparseFunction({});\n} catch (e) {\nassert(e instanceof UtilsError.UtilsParsingError, 'Incorrect error thrown');\n+ return;\n}\n+ should.fail(\"No error was thrown\");\n});\nit('should test error handling', () => {\n"
    },
    {
        "org_diff": "diff --git a/packages/shared/ReactFeatureFlags.js b/a/packages/shared/ReactFeatureFlags.js @@ -116,8 +116,6 @@ export const alwaysThrottleRetries = true;\n \n export const passChildrenWhenCloningPersistedNodes = false;\n \n-export const enableUseDeferredValueInitialArg = __EXPERIMENTAL__;\n-\n export const enableServerComponentLogs = __EXPERIMENTAL__;\n \n /**\n@@ -191,6 +189,9 @@ export const disableDOMTestUtils = true;\n // Make <Context> equivalent to <Context.Provider> instead of <Context.Consumer>\n export const enableRenderableContext = true;\n \n+// Enables the `initialValue` option for `useDeferredValue`\n+export const enableUseDeferredValueInitialArg = true;\n+\n // -----------------------------------------------------------------------------\n // Chopping Block\n //",
        "org_msg": "Move enableUseDeferredValueInitialArg to canary (#28818)\n\nPer team discussion, this upgrades the `initialValue` argument for\r\n`useDeferredValue` from experimental to canary.\r\n\r\n- Original implementation PR:\r\nhttps://github.com/facebook/react/pull/27500\r\n- API documentation PR: https://github.com/reactjs/react.dev/pull/6747\r\n\r\nI left it disabled at Meta for now in case there's old code somewhere\r\nthat is still passing an `options` object as the second argument.",
        "sim_msg": "Remove cb from App.js",
        "sim_diff": "diff --git a/components/App.js b/components/App.js @@ -326,7 +326,7 @@ export const App = (props) => {\n`;\n}\n-export const updateProps = (newProps, cb) => {\n+export const updateProps = newProps => {\nconst appContainer = document.getElementById('appContainer');\nfor (let k in newProps) {\nappState[k] = newProps[k];\n@@ -343,18 +343,14 @@ export const updateProps = (newProps, cb) => {\nappContainer.innerHTML = App(appState);\nsetBindings(appContainer, onclickBindings);\n}\n- if (cb) {\n- cb();\n- }\n}\nwindow.addEventListener('stateChanged', (e) => {\nconst changedState = getSpecificState(e.detail.changedKeys);\n- const cb = e.detail.cb ? e.detail.cb : null;\nfor (let k in changedState) {\nappState[k] = changedState[k];\n}\n- updateProps(changedState, cb);\n+ updateProps(changedState);\n})\nwindow.addEventListener('load', () => {\n"
    },
    {
        "org_diff": "diff --git a/packages/react-server/src/ReactServerStreamConfigBun.js b/a/packages/react-server/src/ReactServerStreamConfigBun.js @@ -13,6 +13,7 @@ type BunReadableStreamController = ReadableStreamController & {\n   end(): mixed,\n   write(data: Chunk | BinaryChunk): void,\n   error(error: Error): void,\n+  flush?: () => void,\n };\n export type Destination = BunReadableStreamController;\n \n@@ -25,8 +26,12 @@ export function scheduleWork(callback: () => void) {\n }\n \n export function flushBuffered(destination: Destination) {\n-  // WHATWG Streams do not yet have a way to flush the underlying\n-  // transform streams. https://github.com/whatwg/streams/issues/960\n+  // Bun direct streams provide a flush function.\n+  // If we don't have any more data to send right now.\n+  // Flush whatever is in the buffer to the wire.\n+  if (typeof destination.flush === 'function') {\n+    destination.flush();\n+  }\n }\n \n export function beginWriting(destination: Destination) {}",
        "org_msg": "Flush direct streams in Bun (#28837)\n\n<!--\r\n  Thanks for submitting a pull request!\r\nWe appreciate you spending the time to work on these changes. Please\r\nprovide enough information so that others can review your pull request.\r\nThe three fields below are mandatory.\r\n\r\nBefore submitting a pull request, please make sure the following is\r\ndone:\r\n\r\n1. Fork [the repository](https://github.com/facebook/react) and create\r\nyour branch from `main`.\r\n  2. Run `yarn` in the repository root.\r\n3. If you've fixed a bug or added code that should be tested, add tests!\r\n4. Ensure the test suite passes (`yarn test`). Tip: `yarn test --watch\r\nTestName` is helpful in development.\r\n5. Run `yarn test --prod` to test in the production environment. It\r\nsupports the same options as `yarn test`.\r\n6. If you need a debugger, run `yarn test --debug --watch TestName`,\r\nopen `chrome://inspect`, and press \"Inspect\".\r\n7. Format your code with\r\n[prettier](https://github.com/prettier/prettier) (`yarn prettier`).\r\n8. Make sure your code lints (`yarn lint`). Tip: `yarn linc` to only\r\ncheck changed files.\r\n  9. Run the [Flow](https://flowtype.org/) type checks (`yarn flow`).\r\n  10. If you haven't already, complete the CLA.\r\n\r\nLearn more about contributing:\r\nhttps://reactjs.org/docs/how-to-contribute.html\r\n-->\r\n\r\n## Summary\r\n\r\n<!--\r\nExplain the **motivation** for making this change. What existing problem\r\ndoes the pull request solve?\r\n-->\r\n\r\nThe ReadableStreamController for [direct\r\nstreams](https://bun.sh/docs/api/streams#direct-readablestream) in Bun\r\nsupports a flush() method to flush all buffered items to its underlying\r\nsink.\r\n\r\nWithout manually calling flush(), all buffered items are only flushed to\r\nthe underlying sink when the stream is closed. This behavior causes the\r\nshell rendered against Suspense boundaries never to be flushed to the\r\nunderlying sink.\r\n\r\n## How did you test this change?\r\n\r\n<!--\r\nDemonstrate the code is solid. Example: The exact commands you ran and\r\ntheir output, screenshots / videos if the pull request changes the user\r\ninterface.\r\nHow exactly did you verify that your PR solves the issue you wanted to\r\nsolve?\r\n  If you leave this empty, your PR will very likely be closed.\r\n-->\r\n\r\nA lot of changes to the test runner will need to be made in order to\r\nsupport the Bun runtime. A separate test was manually run in order to\r\nensure that the changes made are correct.\r\n\r\nThe test works by sanity-checking that the shell rendered against\r\nSuspense boundaries are emitted first in the stream.\r\n\r\nThis test was written and run on Bun v1.1.3.\r\n\r\n```ts\r\nimport { Suspense } from \"react\";\r\nimport { renderToReadableStream } from \"react-dom/server\";\r\n\r\nif (!import.meta.resolveSync(\"react-dom/server\").endsWith(\"server.bun.js\")) {\r\n  throw new Error(\"react-dom/server is not the correct version:\\n  \" + import.meta.resolveSync(\"react-dom/server\"));\r\n}\r\n\r\nconst A = async () => {\r\n  await new Promise(resolve => setImmediate(resolve));\r\n  return <div>hi</div>;\r\n};\r\n\r\nconst B = async () => {\r\n  return (\r\n    <Suspense fallback={<div>loading</div>}>\r\n      <A />\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nconst stream = await renderToReadableStream(<B />);\r\n\r\nlet text = \"\";\r\nlet count = 0;\r\nfor await (const chunk of stream) {\r\n  text += new TextDecoder().decode(chunk);\r\n  count++;\r\n}\r\n\r\nif (\r\n  text !==\r\n  `<!--$?--><template id=\"B:0\"></template><div>loading</div><!--/$--><div hidden id=\"S:0\"><div>hi</div></div><script>$RC=function(b,c,e){c=document.getElementById(c);c.parentNode.removeChild(c);var a=document.getElementById(b);if(a){b=a.previousSibling;if(e)b.data=\"$!\",a.setAttribute(\"data-dgst\",e);else{e=b.parentNode;a=b.nextSibling;var f=0;do{if(a&&8===a.nodeType){var d=a.data;if(\"/$\"===d)if(0===f)break;else f--;else\"$\"!==d&&\"$?\"!==d&&\"$!\"!==d||f++}d=a.nextSibling;e.removeChild(a);a=d}while(a);for(;c.firstChild;)e.insertBefore(c.firstChild,a);b.data=\"$\"}b._reactRetry&&b._reactRetry()}};$RC(\"B:0\",\"S:0\")</script>`\r\n) {\r\n  throw new Error(\"unexpected output\");\r\n}\r\nif (count !== 2) {\r\n  throw new Error(\"expected 2 chunks from react ssr stream\");\r\n}\r\n```",
        "sim_msg": "Fix delay to not pass through .reset and .flush props consistently\nto close\n(it used to not pass them through but did on initial message... now it doesn't)",
        "sim_diff": "diff --git a/packages/node_modules/@node-red/nodes/core/function/89-delay.js b/packages/node_modules/@node-red/nodes/core/function/89-delay.js @@ -153,15 +153,26 @@ module.exports = function(RED) {\n}\nelse if (node.pauseType === \"rate\") {\nnode.on(\"input\", function(msg) {\n+ if (msg.hasOwnProperty(\"reset\")) {\n+ if (node.intervalID !== -1 ) {\n+ clearInterval(node.intervalID);\n+ node.intervalID = -1;\n+ }\n+ node.buffer = [];\n+ node.status({text:\"reset\"});\n+ return;\n+ }\nif (!node.drop) {\n+ var m = RED.util.cloneMessage(msg);\n+ delete m.flush;\nif (node.intervalID !== -1) {\n- if (!msg.hasOwnProperty(\"flush\")) {\n- node.buffer.push(msg);\n+ //if (!msg.hasOwnProperty(\"flush\")) {\n+ node.buffer.push(m);\nnode.reportDepth();\n- }\n+ //}\n}\nelse {\n- node.send(msg);\n+ node.send(m);\nnode.reportDepth();\nnode.intervalID = setInterval(function() {\nif (node.buffer.length === 0) {\n@@ -174,6 +185,12 @@ module.exports = function(RED) {\nnode.reportDepth();\n}, node.rate);\n}\n+ if (msg.hasOwnProperty(\"flush\")) {\n+ while (node.buffer.length > 0) {\n+ node.send(node.buffer.shift());\n+ }\n+ node.status({});\n+ }\n}\nelse {\nvar timeSinceLast;\n@@ -189,18 +206,6 @@ module.exports = function(RED) {\nnode.send(msg);\n}\n}\n- if (msg.hasOwnProperty(\"reset\")) {\n- clearInterval(node.intervalID);\n- node.intervalID = -1;\n- node.buffer = [];\n- node.status({text:\"reset\"});\n- }\n- if (msg.hasOwnProperty(\"flush\")) {\n- while (node.buffer.length > 0) {\n- node.send(node.buffer.shift());\n- }\n- node.status({});\n- }\n});\nnode.on(\"close\", function() {\nclearInterval(node.intervalID);\n"
    },
    {
        "org_diff": "diff --git a/packages/react-devtools-shared/src/devtools/cache.js b/a/packages/react-devtools-shared/src/devtools/cache.js @@ -59,19 +59,30 @@ const Pending = 0;\n const Resolved = 1;\n const Rejected = 2;\n \n-const ReactSharedInternals = (React: any)\n-  .__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE;\n-\n-function readContext(Context: ReactContext<null>) {\n-  const dispatcher = ReactSharedInternals.H;\n-  if (dispatcher === null) {\n-    throw new Error(\n-      'react-cache: read and preload may only be called from within a ' +\n-        \"component's render. They are not supported in event handlers or \" +\n-        'lifecycle methods.',\n-    );\n-  }\n-  return dispatcher.readContext(Context);\n+let readContext;\n+if (typeof React.use === 'function') {\n+  readContext = function (Context: ReactContext<null>) {\n+    return React.use(Context);\n+  };\n+} else if (\n+  typeof (React: any).__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED ===\n+  'object'\n+) {\n+  const ReactCurrentDispatcher = (React: any)\n+    .__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentDispatcher;\n+  readContext = function (Context: ReactContext<null>) {\n+    const dispatcher = ReactCurrentDispatcher.current;\n+    if (dispatcher === null) {\n+      throw new Error(\n+        'react-cache: read and preload may only be called from within a ' +\n+          \"component's render. They are not supported in event handlers or \" +\n+          'lifecycle methods.',\n+      );\n+    }\n+    return dispatcher.readContext(Context);\n+  };\n+} else {\n+  throw new Error('react-cache: Unsupported React version');\n }\n \n const CacheContext = createContext(null);",
        "org_msg": "Use use() in the Cache if available (#28793)\n\nThis is a follow up to\r\nhttps://github.com/facebook/react/pull/28789#discussion_r1557232202\r\n\r\nRevert to use the old readContext detection if not to support older\r\nReact.\r\n\r\nI haven't actually tested this. Just opening as a suggestion.",
        "sim_msg": "chore(expo): adding to expo dependencies",
        "sim_diff": "diff --git a/packages/doc/src/components/CodeBlock/CodeBlock.jsx b/packages/doc/src/components/CodeBlock/CodeBlock.jsx @@ -59,6 +59,7 @@ const packages = [\n];\nconst peerDependencies = [\n+ { path: '@react-native-picker/picker' },\n{ path: 'styled-components' },\n{ path: 'react-native-svg' },\n{ path: 'react-is' },\n"
    },
    {
        "org_diff": "diff --git a/packages/react-reconciler/src/ReactFiberClassComponent.js b/a/packages/react-reconciler/src/ReactFiberClassComponent.js @@ -1274,7 +1274,7 @@ export function resolveClassComponentProps(\n     // We may have already copied the props object above to remove ref. If so,\n     // we can modify that. Otherwise, copy the props object with Object.assign.\n     if (newProps === baseProps) {\n-      newProps = assign({}, newProps, baseProps);\n+      newProps = assign({}, newProps);\n     }\n     // Taken from old JSX runtime, where this used to live.\n     for (const propName in defaultProps) {",
        "org_msg": "Remove redundant props assign (#28829)",
        "sim_msg": "Fix react calling attach/detach when there is no dom element.",
        "sim_diff": "diff --git a/src/components/ReactComponent.jsx b/src/components/ReactComponent.jsx @@ -56,7 +56,9 @@ export default class ReactComponent extends Field {\n[`react-${this.id}`]: 'single',\n});\n+ if (this.refs[`react-${this.id}`]) {\nthis.reactInstance = this.attachReact(this.refs[`react-${this.id}`]);\n+ }\nreturn Promise.resolve();\n}\n@@ -65,7 +67,9 @@ export default class ReactComponent extends Field {\n* or it is being removed from the form.\n*/\ndetach() {\n+ if (this.refs[`react-${this.id}`]) {\nthis.detachReact(this.refs[`react-${this.id}`]);\n+ }\nsuper.detach();\n}\n"
    },
    {
        "org_diff": "diff --git a/scripts/rollup/bundles.js b/a/scripts/rollup/bundles.js @@ -293,7 +293,6 @@ const bundles = [\n     bundleTypes: __EXPERIMENTAL__ ? [FB_WWW_DEV, FB_WWW_PROD] : [],\n     moduleType: RENDERER,\n     entry: 'react-server-dom-fb/src/ReactDOMServerFB.js',\n-    condition: 'react-server',\n     global: 'ReactDOMServerStreaming',\n     minifyWithProdErrorCodes: false,\n     wrapWithModuleBoundaries: false,",
        "org_msg": "Fix mistaken \"react-server\" condition (#28835)\n\nThis is a Fizz server.",
        "sim_msg": "Ensure UMD bundles are ES5",
        "sim_diff": "diff --git a/scripts/bundle.config.js b/scripts/bundle.config.js @@ -68,7 +68,12 @@ const config = {\n// Compile ES2015 using babel\ntest: /\\.js$/,\nloader: 'babel-loader',\n- include: /src/\n+ include: /src/,\n+ options: {\n+ presets: [\n+ ['@babel/preset-env', {forceAllTransforms: true}]\n+ ]\n+ }\n}\n]\n},\n"
    },
    {
        "org_diff": "diff --git a/packages/react-devtools-fusebox/src/frontend.js b/a/packages/react-devtools-fusebox/src/frontend.js @@ -13,7 +13,10 @@ import Bridge from 'react-devtools-shared/src/bridge';\n import Store from 'react-devtools-shared/src/devtools/store';\n import DevTools from 'react-devtools-shared/src/devtools/views/DevTools';\n \n-import type {Wall} from 'react-devtools-shared/src/frontend/types';\n+import type {\n+  BrowserTheme,\n+  Wall,\n+} from 'react-devtools-shared/src/frontend/types';\n import type {FrontendBridge} from 'react-devtools-shared/src/bridge';\n \n type Config = {\n@@ -42,18 +45,20 @@ export function createStore(bridge: FrontendBridge, config?: Config): Store {\n type InitializationOptions = {\n   bridge: FrontendBridge,\n   store: Store,\n+  theme?: BrowserTheme,\n };\n \n export function initialize(\n   contentWindow: Element | Document,\n   options: InitializationOptions,\n ): void {\n-  const {bridge, store} = options;\n+  const {bridge, store, theme = 'light'} = options;\n   const root = createRoot(contentWindow);\n \n   root.render(\n     <DevTools\n       bridge={bridge}\n+      browserTheme={theme}\n       store={store}\n       showTabBar={true}\n       warnIfLegacyBackendDetected={true}",
        "org_msg": "feat[devtools-fusebox]: support theme option (#28832)\n\nSupport propagating theme from Chrome DevTools frontend, the field is\r\noptional.\r\n\r\nNext step, which is out of scope of this project and general improvement\r\nfor React DevTools: teach RDT to listen to theme changes and if the\r\ntheme preference is set to `auto` in settings, update the theme\r\naccordingly with the browser devtools.",
        "sim_msg": "Add new loading indicator to Sandbox",
        "sim_diff": "diff --git a/packages/civic-sandbox/src/components/Sandbox/index.js b/packages/civic-sandbox/src/components/Sandbox/index.js @@ -5,7 +5,7 @@ import { connect } from \"react-redux\";\n/* eslint-disable import/no-extraneous-dependencies */\nimport \"react-select/dist/react-select.css\";\nimport { isArray } from \"lodash\";\n-import { Sandbox } from \"@hackoregon/component-library\";\n+import { Sandbox, Logo } from \"@hackoregon/component-library\";\nimport { equals } from \"ramda\";\nimport {\n@@ -94,16 +94,27 @@ class SandboxComponent extends React.Component {\nfont-family: \"Roboto Condensed\", \"Helvetica Neue\", Helvetica, sans-serif;\n`);\n+ const loadingContainer = css`\n+ display: flex;\n+ height: 300px;\n+ `;\nconst loading = css`\nfont-size: 1.5rem;\n- width: 100%;\n+ margin: auto;\ntext-align: center;\nfont-family: \"Roboto Condensed\", \"Helvetica Neue\", Helvetica, sans-serif;\n`;\n+ const loader = (\n+ <div className={loadingContainer}>\n+ <div className={loading}>\n+ <Logo type=\"squareLogoAnimated\" alt=\"Loading...\" />\n+ </div>\n+ </div>\n+ );\nconst layerData = [this.props.layerFoundation, ...this.props.layerSlides];\nreturn this.props.isLoading ? (\n- <div className={loading}>Loading...</div>\n+ loader\n) : (\n<Sandbox\nlayerData={layerData}\n"
    },
    {
        "org_diff": "diff --git a/scripts/release/publish-commands/publish-to-npm.js b/a/scripts/release/publish-commands/publish-to-npm.js @@ -19,7 +19,7 @@ const run = async ({cwd, dry, tags, ci}, packageName, otp) => {\n   // But for now the easiest way is just to ask if this is expected.\n   const {status} = spawnSync('npm', ['view', `${packageName}@${version}`]);\n   const packageExists = status === 0;\n-  if (!packageExists) {\n+  if (packageExists) {\n     console.log(\n       theme`{package ${packageName}} {version ${version}} has already been published.`\n     );",
        "org_msg": "Fix nightly release job for real (#28825)",
        "sim_msg": "Ensure synths that replace old ones keep their total supply",
        "sim_diff": "diff --git a/publish/src/commands/deploy.js b/publish/src/commands/deploy.js @@ -130,17 +130,21 @@ const deploy = async ({\nconst { account } = deployer;\n- // get the current supply as it changes as we mint after each period\n- const getExistingContract = ({ contract }) =>\n- deployer.getContract({\n- abi: deployment.sources[contract].abi,\n- address: deployment.targets[contract].address,\n+ const getExistingContract = ({ contract }) => {\n+ const { address, source } = deployment.targets[contract];\n+ const { abi } = deployment.sources[source];\n+\n+ return deployer.getContract({\n+ address,\n+ abi,\n});\n+ };\nlet currentSynthetixSupply;\nlet currentExchangeFee;\nlet currentSynthetixPrice;\nif (network === 'local') {\n+ // get the current supply as it changes as we mint after each period\ncurrentSynthetixSupply = w3utils.toWei((100e6).toString());\ncurrentExchangeFee = w3utils.toWei('0.003'.toString());\noracleExrates = account;\n@@ -698,9 +702,6 @@ const deploy = async ({\nforce: addNewSynths,\n});\n- // As sETH is used for Uniswap liquidity, we cannot switch out its proxy,\n- // thus we have these values we switch on to ensure sETH remains fixed to the\n- // v2.9.x version of Synth.sol and Proxy.sol - JJ\nconst currencyKeyInBytes = w3utils.asciiToHex(currencyKey);\nconst additionalConstructorArgsMap = {\n@@ -708,6 +709,14 @@ const deploy = async ({\n// future subclasses...\n};\n+ // track the original supply if we're deploying a new synth contract for an existing synth\n+ let originalTotalSupply = 0;\n+ // cannot check local network as deploy is true for everything\n+ if (config[`Synth${currencyKey}`].deploy && network !== 'local') {\n+ const oldSynth = getExistingContract({ contract: `Synth${currencyKey}` });\n+ originalTotalSupply = await oldSynth.methods.totalSupply().call();\n+ }\n+\nconst synth = await deployContract({\nname: `Synth${currencyKey}`,\nsource: subclass || 'Synth',\n@@ -725,6 +734,17 @@ const deploy = async ({\nforce: addNewSynths,\n});\n+ if (synth && originalTotalSupply > 0) {\n+ await runStep({\n+ contract: `Synth${currencyKey}`,\n+ target: synth,\n+ read: 'totalSupply',\n+ expected: input => input === originalTotalSupply,\n+ write: 'setTotalSupply',\n+ writeArg: originalTotalSupply,\n+ });\n+ }\n+\nconst synthAddress = synth ? synth.options.address : '';\nif (tokenStateForSynth && synth) {\n@@ -762,7 +782,6 @@ const deploy = async ({\nwriteArg: synthAddress,\n});\n- // For latest synths (v2.10.x) we need to use Synth.setSynthetixProxy\nawait runStep({\ncontract: `Synth${currencyKey}`,\ntarget: synth,\n@@ -773,7 +792,6 @@ const deploy = async ({\n});\n}\n- // For latest synths (v2.10.x) we need to use Synth.setFeePoolProxy\nif (proxyFeePool) {\nawait runStep({\ncontract: `Synth${currencyKey}`,\n"
    },
    {
        "org_diff": "diff --git a/scripts/release/publish-commands/publish-to-npm.js b/a/scripts/release/publish-commands/publish-to-npm.js @@ -2,10 +2,11 @@\n \n 'use strict';\n \n+const {spawnSync} = require('child_process');\n const {exec} = require('child-process-promise');\n const {readJsonSync} = require('fs-extra');\n const {join} = require('path');\n-const {confirm, execRead} = require('../utils');\n+const {confirm} = require('../utils');\n const theme = require('../theme');\n \n const run = async ({cwd, dry, tags, ci}, packageName, otp) => {\n@@ -16,8 +17,9 @@ const run = async ({cwd, dry, tags, ci}, packageName, otp) => {\n   // If so we might be resuming from a previous run.\n   // We could infer this by comparing the build-info.json,\n   // But for now the easiest way is just to ask if this is expected.\n-  const info = await execRead(`npm view ${packageName}@${version}`);\n-  if (info) {\n+  const {status} = spawnSync('npm', ['view', `${packageName}@${version}`]);\n+  const packageExists = status === 0;\n+  if (!packageExists) {\n     console.log(\n       theme`{package ${packageName}} {version ${version}} has already been published.`\n     );",
        "org_msg": "Fix nightly release job (#28824)",
        "sim_msg": "Deploy.js - getExistingContracts to use versions.json for existing addresses",
        "sim_diff": "diff --git a/publish/src/commands/deploy.js b/publish/src/commands/deploy.js @@ -7,6 +7,7 @@ const Deployer = require('../Deployer');\nconst NonceManager = require('../NonceManager');\nconst { loadCompiledFiles, getLatestSolTimestamp } = require('../solidity');\nconst checkAggregatorPrices = require('../check-aggregator-prices');\n+const { getVersions } = require('../../..');\nconst {\nensureNetwork,\n@@ -190,6 +191,25 @@ const deploy = async ({\nconst { account } = deployer;\n+ const getExistingContract = ({ contract, network }) => {\n+ let address;\n+ if (network === 'local') {\n+ address = deployment.targets[contract].address;\n+ } else {\n+ const contractVersion = getVersions({ network, byContract: true })[contract];\n+ const lastEntry = contractVersion.slice(-1)[0];\n+ address = lastEntry.address;\n+ }\n+\n+ const { source } = deployment.targets[contract];\n+ const { abi } = deployment.sources[source];\n+\n+ return deployer.getContract({\n+ address,\n+ abi,\n+ });\n+ };\n+\nnonceManager.web3 = deployer.web3;\nnonceManager.account = account;\n@@ -202,7 +222,7 @@ const deploy = async ({\nlet systemSuspendedReason;\ntry {\n- const oldSynthetix = deployer.getContractByName({ contract: 'Synthetix' });\n+ const oldSynthetix = getExistingContract({ contract: 'Synthetix', network });\ncurrentSynthetixSupply = await oldSynthetix.methods.totalSupply().call();\n// inflationSupplyToDate = total supply - 100m\n@@ -242,7 +262,7 @@ const deploy = async ({\n}\ntry {\n- oldExrates = deployer.getContractByName({ contract: 'ExchangeRates' });\n+ oldExrates = getExistingContract({ contract: 'ExchangeRates', network });\ncurrentSynthetixPrice = await oldExrates.methods.rateForCurrency(toBytes32('SNX')).call();\nif (!oracleExrates) {\noracleExrates = await oldExrates.methods.oracle().call();\n@@ -264,7 +284,7 @@ const deploy = async ({\n}\ntry {\n- const oldSystemStatus = deployer.getContractByName({ contract: 'SystemStatus' });\n+ const oldSystemStatus = getExistingContract({ contract: 'SystemStatus', network });\nconst systemSuspensionStatus = await oldSystemStatus.methods.systemSuspension().call();\n@@ -917,7 +937,7 @@ const deploy = async ({\nlet originalTotalSupply = 0;\nif (synthConfig.deploy) {\ntry {\n- const oldSynth = deployer.getContractByName({ contract: `Synth${currencyKey}` });\n+ const oldSynth = getExistingContract({ contract: `Synth${currencyKey}`, network });\noriginalTotalSupply = await oldSynth.methods.totalSupply().call();\n} catch (err) {\nif (!freshDeploy) {\n"
    },
    {
        "org_diff": "diff --git a/packages/react-reconciler/src/__tests__/ReactSuspenseFuzz-test.internal.js b/a/packages/react-reconciler/src/__tests__/ReactSuspenseFuzz-test.internal.js @@ -115,24 +115,19 @@ describe('ReactSuspenseFuzz', () => {\n               setTimeout(() => {\n                 cache.set(fullText, fullText);\n                 pendingTasks.delete(task);\n-                Scheduler.log(task.label);\n                 resolve();\n               }, delay);\n             },\n           };\n           cache.set(fullText, thenable);\n-          Scheduler.log(`Suspended! [${fullText}]`);\n           throw thenable;\n         } else if (typeof resolvedText.then === 'function') {\n-          const thenable = resolvedText;\n-          Scheduler.log(`Suspended! [${fullText}]`);\n-          throw thenable;\n+          throw resolvedText;\n         }\n       } else {\n         resolvedText = fullText;\n       }\n \n-      Scheduler.log(resolvedText);\n       return resolvedText;\n     }\n ",
        "org_msg": "Remove Scheduler.log from ReactSuspenseFuzz-test (#28812)\n\nThese test don't `assertLog` or `waitFor` so we don't need to\r\n`Scheduler.log`. Ideally we would, but since they're fuzzers it's a bit\r\ndifficult to know what the expected log is from the helper.\r\n\r\nSince this doesn't regress current test behavior, we can improve them\r\nafter this to unblock https://github.com/facebook/react/pull/28737",
        "sim_msg": "[INTERNAL] Calendar Card: stabilized tests\nAs the shown appoimtnets for today are very dynamic,\nthe test for them is unstable, so it is best to be deleted.",
        "sim_diff": "diff --git a/src/sap.ui.integration/test/sap/ui/integration/qunit/cards/CalendarCard.qunit.js b/src/sap.ui.integration/test/sap/ui/integration/qunit/cards/CalendarCard.qunit.js @@ -907,56 +907,5 @@ sap.ui.define([\ndone();\n}.bind(this));\n});\n-\n- // creates 3 appointments before, one at the current hour, and 3 more after\n- function createAppointmentsForToday(oFormatter) {\n- var oStart = new Date(),\n- oEnd = new Date(),\n- aResult = [];\n-\n- oStart.setHours(oStart.getHours() - 3, 0, 0, 0);\n- oEnd.setHours(oEnd.getHours() - 2, 0, 0, 0);\n-\n- for (var i = 0; i < 7; i++) {\n- aResult.push({\n- \"start\": oFormatter.format(oStart),\n- \"end\": oFormatter.format(oEnd),\n- \"title\": \"App\" + i\n- });\n-\n- oStart.setHours(oStart.getHours() + 1);\n- oEnd.setHours(oEnd.getHours() + 1);\n- }\n-\n- return aResult;\n- }\n-\n- QUnit.test(\"The correct appointments are rendered for today\", function(assert) {\n- // Arrange\n- var done = assert.async();\n- var oManifest_3OutOf5Apps_New = JSON.parse(JSON.stringify(oManifest_3OutOf5Apps)),\n- oFormatter = DateFormat.getDateTimeInstance({ pattern: \"yyyy-MM-ddTHH:mm\" });\n-\n- oManifest_3OutOf5Apps_New[\"sap.card\"].data.json.item = createAppointmentsForToday(oFormatter);\n- oManifest_3OutOf5Apps_New[\"sap.card\"].data.json.date = oFormatter.format(new Date());\n-\n- this.oCard.setManifest(oManifest_3OutOf5Apps_New);\n-\n- this.oCard.attachEvent(\"_ready\", function() {\n- Core.applyChanges();\n-\n- assert.equal(this.oCard.getModel(\"parameters\").getData().visibleItems, 3, \"Should have 3 visible appointments.\");\n- assert.equal(this.oCard.getModel(\"parameters\").getData().allItems, 7, \"Should have total of 7 appointments.\");\n-\n- var aAppointmentsRefs = this.oCard.$().find(\".sapUiCalendarAppContainer\");\n-\n- // Assert\n- assert.equal(aAppointmentsRefs.length, 3, \"Should have 3 rendered appointments\");\n- assert.equal(aAppointmentsRefs.eq(0).find(\".sapUiCalendarAppTitle\").text(), \"App3\", \"The first appointment is correct\");\n- assert.equal(aAppointmentsRefs.eq(2).find(\".sapUiCalendarAppTitle\").text(), \"App5\", \"The last appointment is correct\");\n-\n- done();\n- }.bind(this));\n- });\n}\n);\n"
    },
    {
        "org_diff": "diff --git a/packages/react-reconciler/src/__tests__/useEffectEvent-test.js b/a/packages/react-reconciler/src/__tests__/useEffectEvent-test.js @@ -742,7 +742,7 @@ describe('useEffectEvent', () => {\n     await act(() =>\n       ReactNoop.render(<ChatRoom roomId=\"general\" theme=\"light\" />),\n     );\n-    await act(() => jest.runAllTimers());\n+\n     assertLog(['Welcome to the general room!', 'Connected! theme: light']);\n     expect(ReactNoop).toMatchRenderedOutput(\n       <span prop=\"Welcome to the general room!\" />,\n@@ -752,20 +752,17 @@ describe('useEffectEvent', () => {\n     await act(() =>\n       ReactNoop.render(<ChatRoom roomId=\"music\" theme=\"light\" />),\n     );\n-    await act(() => jest.runAllTimers());\n     assertLog([\n       'Welcome to the music room!',\n       // should trigger a reconnect\n       'Connected! theme: light',\n     ]);\n-\n     expect(ReactNoop).toMatchRenderedOutput(\n       <span prop=\"Welcome to the music room!\" />,\n     );\n \n     // change theme only\n     await act(() => ReactNoop.render(<ChatRoom roomId=\"music\" theme=\"dark\" />));\n-    await act(() => jest.runAllTimers());\n     // should not trigger a reconnect\n     assertLog(['Welcome to the music room!']);\n     expect(ReactNoop).toMatchRenderedOutput(\n@@ -776,7 +773,6 @@ describe('useEffectEvent', () => {\n     await act(() =>\n       ReactNoop.render(<ChatRoom roomId=\"travel\" theme=\"dark\" />),\n     );\n-    await act(() => jest.runAllTimers());\n     assertLog([\n       'Welcome to the travel room!',\n       // should trigger a reconnect",
        "org_msg": "[tests] assertLog before act in useEffectEvent (#28763)\n\nFixes tests blocking https://github.com/facebook/react/pull/28737",
        "sim_msg": "Add test to ensure that scroll to top method is called when reset all filters button is pressed",
        "sim_diff": "diff --git a/src/screens/EventsScreen/FilterHeader.test.js b/src/screens/EventsScreen/FilterHeader.test.js @@ -5,6 +5,7 @@ import FilterHeader from \"./FilterHeader\";\nimport type { Props as ComponentProps } from \"./FilterHeader\";\nimport FilterHeaderButton from \"./FilterHeaderButton\";\nimport FilterHeaderCategories from \"./FilterHeaderCategories\";\n+import ResetAllFiltersButton from \"./ResetAllFiltersButton\";\nconst render = (\nprops: ComponentProps = {\n@@ -147,4 +148,24 @@ describe(\"filter buttons\", () => {\nexpect(mock).toBeCalledWith();\n});\n+\n+ it(\"calls scrollEventListToTop when users presses 'Reset all filters' button\", () => {\n+ const mock = jest.fn();\n+ const output = render({\n+ dateFilter: null,\n+ selectedCategories: new Set([\"Music\"]),\n+ onFilterCategoriesPress: () => {},\n+ onFilterButtonPress: () => {},\n+ onDateFilterButtonPress: () => {},\n+ resetAllFiltersPress: () => {},\n+ numTagFiltersSelected: 0,\n+ scrollEventListToTop: mock\n+ });\n+ output\n+ .find(ResetAllFiltersButton)\n+ .props()\n+ .onPress();\n+\n+ expect(mock).toBeCalledWith();\n+ });\n});\n"
    },
    {
        "org_diff": "diff --git a/packages/react-reconciler/src/__tests__/ReactUse-test.js b/a/packages/react-reconciler/src/__tests__/ReactUse-test.js @@ -663,6 +663,8 @@ describe('ReactUse', () => {\n     }\n \n     const root1 = ReactNoop.createRoot();\n+    assertLog(['Async text requested [Hi]']);\n+\n     await act(() => {\n       root1.render(<Suspense fallback={<Text text=\"Loading...\" />} />);\n     });\n@@ -677,7 +679,7 @@ describe('ReactUse', () => {\n         );\n       });\n     });\n-    assertLog(['Async text requested [Hi]']);\n+    assertLog([]);\n \n     // While we're waiting for the first root's data to resolve, a second\n     // root renders.",
        "org_msg": "[tests] assertLog before act in ReactUse (#28762)\n\nFixes tests blocking https://github.com/facebook/react/pull/28737",
        "sim_msg": "rm non functioning tests",
        "sim_diff": "diff --git a/packages/transportation/src/components/App/index.test.js b/packages/transportation/src/components/App/index.test.js -import React from 'react';\n-import { shallow } from 'enzyme';\n-import App from './index';\n-\ndescribe('<App />', () => {\n- it('should render its children', () => {\n- const children = (<h1>Test</h1>);\n- const wrapper = shallow(\n- <App>\n- {children}\n- </App>,\n- );\n- expect(wrapper.contains(children)).to.eql(true);\n+ it('does not have have functioning tests...', () => {\n+ expect(true).to.eql(true);\n});\n});\n"
    },
    {
        "org_diff": "diff --git a/packages/react-dom/src/__tests__/ReactUpdates-test.js b/a/packages/react-dom/src/__tests__/ReactUpdates-test.js @@ -1900,6 +1900,8 @@ describe('ReactUpdates', () => {\n       await act(() => {\n         root.render(<Terminating />);\n       });\n+\n+      assertLog(Array.from({length: LIMIT + 1}, (_, k) => k));\n       expect(container.textContent).toBe('50');\n       await act(() => {\n         _setStep(0);",
        "org_msg": "[tests] assertLog before act in ReactUpdates (#28760)\n\nFixes tests blocking https://github.com/facebook/react/pull/28737",
        "sim_msg": "Removed unnecessary tests from Sidebar.test.js",
        "sim_diff": "diff --git a/renderer/components/__tests__/Sidebar.test.js b/renderer/components/__tests__/Sidebar.test.js @@ -33,46 +33,28 @@ const renderComponent = (component, locale = 'en', messages = English) => {\n}\ndescribe('Tests for Sidebar component', () => {\n- afterEach(() => {\n- cleanup()\n- })\n- test('Displays the correct version', async () => {\n+ beforeEach(() => {\nrenderComponent(\n<Sidebar>\n<></>\n</Sidebar>\n)\n- const versionNumber = screen.getByTestId('sidebar-version-number')\n- expect(versionNumber.innerHTML).toMatch(version)\n- })\n-\n- test('Displays child elements', async () => {\n- renderComponent(\n- <Sidebar>\n- <p data-testid=\"test-paragraph\">Test paragraph</p>\n- </Sidebar>\n- )\n- expect(screen.getByTestId('test-paragraph').innerHTML).toBe(\n- 'Test paragraph'\n- )\n})\n+ afterEach(() => {\n+ cleanup()\n+ jest.clearAllMocks()\n})\n-\n-describe('Sidebar NavItems push the router to correct path', () => {\n- beforeEach(() => {\n+ test('Displays the correct version', async () => {\nrenderComponent(\n<Sidebar>\n<></>\n</Sidebar>\n)\n- })\n-\n- afterEach(() => {\n- cleanup()\n- jest.clearAllMocks()\n+ const versionNumber = screen.getByTestId('sidebar-version-number')\n+ expect(versionNumber.innerHTML).toMatch(version)\n})\ntest('Clicking on Dashboard NavItem calls pushes router to /dashboard', async () => {\n"
    },
    {
        "org_diff": "diff --git a/packages/react-dom/src/__tests__/ReactDOMServerSelectiveHydration-test.internal.js b/a/packages/react-dom/src/__tests__/ReactDOMServerSelectiveHydration-test.internal.js @@ -1114,14 +1114,16 @@ describe('ReactDOMServerSelectiveHydration', () => {\n       // Outer was hydrated earlier\n       OuterTestUtils.assertLog([]);\n \n+      // First Inner Mouse Enter fires then Outer Mouse Enter\n+      assertLog(['Inner Mouse Enter', 'Outer Mouse Enter']);\n+\n       await act(() => {\n         Scheduler.unstable_flushAllWithoutAsserting();\n         OuterScheduler.unstable_flushAllWithoutAsserting();\n         InnerScheduler.unstable_flushAllWithoutAsserting();\n       });\n \n-      // First Inner Mouse Enter fires then Outer Mouse Enter\n-      assertLog(['Inner Mouse Enter', 'Outer Mouse Enter']);\n+      assertLog([]);\n     });\n   });\n ",
        "org_msg": "[tests] assertLog before act in ReactDOMServerSelectiveHydration (#28759)\n\nFixes tests blocking https://github.com/facebook/react/pull/28737",
        "sim_msg": "Test written covering all four possible user inputs in QuizSteps.js",
        "sim_diff": "diff --git a/renderer/components/onboard/__tests__/QuizSteps.test.js b/renderer/components/onboard/__tests__/QuizSteps.test.js @@ -107,4 +107,50 @@ describe('Tests for QuizSteps', () => {\nfireEvent.click(continueButton2)\nexpect(onQuizComplete).toHaveBeenCalledTimes(1)\n})\n+ test('User Story with first input incorrect and second input correct', async () => {\n+ const falseButton1 = screen.getByText(English['Onboarding.PopQuiz.False'])\n+ fireEvent.click(falseButton1)\n+ const lottiePlayer1 = screen.getByTestId('quiz-steps-cross')\n+ await waitForElementToBeRemoved(lottiePlayer1, { timeout: 2000 })\n+ const warningParagraph1 = screen.getByText(\n+ English['Onboarding.PopQuiz.1.Wrong.Paragraph']\n+ )\n+ const continueButton1 = screen.getByText(\n+ English['Onboarding.PopQuiz.Wrong.Button.Continue']\n+ )\n+ expect(warningParagraph1).toBeInTheDocument()\n+ fireEvent.click(continueButton1)\n+ const quizHeading2 = await screen.findByText(\n+ English['Onboarding.PopQuiz.2.Title']\n+ )\n+ expect(quizHeading2).toBeInTheDocument()\n+ const yesButton2 = screen.getByText(English['Onboarding.PopQuiz.True'])\n+ fireEvent.click(yesButton2)\n+ const lottiePlayerSecond = screen.getByTestId('quiz-steps-tick')\n+ await waitForElementToBeRemoved(lottiePlayerSecond, { timeout: 2000 })\n+ expect(onQuizComplete).toHaveBeenCalledTimes(1)\n+ })\n+ test('User Story with first input correct and second input incorrect', async () => {\n+ const yesButton1 = screen.getByText(English['Onboarding.PopQuiz.True'])\n+ fireEvent.click(yesButton1)\n+ const lottiePlayerFirst = screen.getByTestId('quiz-steps-tick')\n+ await waitForElementToBeRemoved(lottiePlayerFirst, { timeout: 2000 })\n+ const quizHeading2 = await screen.findByText(\n+ English['Onboarding.PopQuiz.2.Title']\n+ )\n+ expect(quizHeading2).toBeInTheDocument()\n+ const falseButton2 = screen.getByText(English['Onboarding.PopQuiz.False'])\n+ fireEvent.click(falseButton2)\n+ const lottiePlayer2 = screen.getByTestId('quiz-steps-cross')\n+ await waitForElementToBeRemoved(lottiePlayer2, { timeout: 2000 })\n+ const warningParagraph2 = screen.getByText(\n+ English['Onboarding.PopQuiz.2.Wrong.Paragraph']\n+ )\n+ const continueButton2 = screen.getByText(\n+ English['Onboarding.PopQuiz.Wrong.Button.Continue']\n+ )\n+ expect(warningParagraph2).toBeInTheDocument()\n+ fireEvent.click(continueButton2)\n+ expect(onQuizComplete).toHaveBeenCalledTimes(1)\n+ })\n})\n"
    },
    {
        "org_diff": "diff --git a/packages/react-dom/src/__tests__/ReactCompositeComponentState-test.js b/a/packages/react-dom/src/__tests__/ReactCompositeComponentState-test.js @@ -152,21 +152,6 @@ describe('ReactCompositeComponent-state', () => {\n       root.render(<TestComponent />);\n     });\n \n-    await act(() => {\n-      root.render(<TestComponent nextColor=\"green\" />);\n-    });\n-\n-    await act(() => {\n-      testComponentInstance.setFavoriteColor('blue');\n-    });\n-    await act(() => {\n-      testComponentInstance.forceUpdate(\n-        testComponentInstance.peekAtCallback('forceUpdate'),\n-      );\n-    });\n-\n-    root.unmount();\n-\n     assertLog([\n       // there is no state when getInitialState() is called\n       'getInitialState undefined',\n@@ -198,6 +183,13 @@ describe('ReactCompositeComponent-state', () => {\n       'componentDidUpdate-prevState orange',\n       'setState-yellow yellow',\n       'commit yellow',\n+    ]);\n+\n+    await act(() => {\n+      root.render(<TestComponent nextColor=\"green\" />);\n+    });\n+\n+    assertLog([\n       'componentWillReceiveProps-start yellow',\n       // setState({color:'green'}) only enqueues a pending state.\n       'componentWillReceiveProps-end yellow',\n@@ -216,6 +208,13 @@ describe('ReactCompositeComponent-state', () => {\n       'componentDidUpdate-prevState yellow',\n       'setState-receiveProps green',\n       'commit green',\n+    ]);\n+\n+    await act(() => {\n+      testComponentInstance.setFavoriteColor('blue');\n+    });\n+\n+    assertLog([\n       // setFavoriteColor('blue')\n       'shouldComponentUpdate-currentState green',\n       'shouldComponentUpdate-nextState blue',\n@@ -226,6 +225,13 @@ describe('ReactCompositeComponent-state', () => {\n       'componentDidUpdate-prevState green',\n       'setFavoriteColor blue',\n       'commit blue',\n+    ]);\n+    await act(() => {\n+      testComponentInstance.forceUpdate(\n+        testComponentInstance.peekAtCallback('forceUpdate'),\n+      );\n+    });\n+    assertLog([\n       // forceUpdate()\n       'componentWillUpdate-currentState blue',\n       'componentWillUpdate-nextState blue',\n@@ -234,7 +240,12 @@ describe('ReactCompositeComponent-state', () => {\n       'componentDidUpdate-prevState blue',\n       'forceUpdate blue',\n       'commit blue',\n-      // unmountComponent()\n+    ]);\n+\n+    root.unmount();\n+\n+    assertLog([\n+      // unmount()\n       // state is available within `componentWillUnmount()`\n       'componentWillUnmount blue',\n     ]);\n@@ -375,13 +386,13 @@ describe('ReactCompositeComponent-state', () => {\n     await act(() => {\n       root.render(<Parent />);\n     });\n+\n+    assertLog(['parent render one', 'child render one']);\n     await act(() => {\n       root.render(<Parent />);\n     });\n \n     assertLog([\n-      'parent render one',\n-      'child render one',\n       'parent render one',\n       'child componentWillReceiveProps one',\n       'child componentWillReceiveProps done one',",
        "org_msg": "[tests] assertLog before act in ReactCompositeComponentState (#28758)\n\nFixes tests blocking https://github.com/facebook/react/pull/28737",
        "sim_msg": "use `prop` instead of `attribute`\nuse `prop` instead of `attribute` in route component",
        "sim_diff": "diff --git a/packages/react-router/docs/api/Route.md b/packages/react-router/docs/api/Route.md @@ -69,7 +69,7 @@ const User = ({ match }) => {\n}\n```\n-When you use `component` (instead of `render` or `children`, below) the router uses [`React.createElement`](https://facebook.github.io/react/docs/react-api.html#createelement) to create a new [React element](https://facebook.github.io/react/docs/rendering-elements.html) from the given component. That means if you provide an inline function to the `component` attribute, you would create a new component every render. This results in the existing component unmounting and the new component mounting instead of just updating the existing component. When using an inline function for inline rendering, use the `render` or the `children` prop (below).\n+When you use `component` (instead of `render` or `children`, below) the router uses [`React.createElement`](https://facebook.github.io/react/docs/react-api.html#createelement) to create a new [React element](https://facebook.github.io/react/docs/rendering-elements.html) from the given component. That means if you provide an inline function to the `component` prop, you would create a new component every render. This results in the existing component unmounting and the new component mounting instead of just updating the existing component. When using an inline function for inline rendering, use the `render` or the `children` prop (below).\n## render: func\n"
    },
    {
        "org_diff": "diff --git a/.github/workflows/commit_artifacts.yml b/a/.github/workflows/commit_artifacts.yml @@ -132,7 +132,7 @@ jobs:\n             ./compiled/facebook-www/eslint-plugin-react-hooks.js\n \n           # Move unstable_server-external-runtime.js into facebook-www\n-          mv build/oss-stable/react-dom/unstable_server-external-runtime.js \\\n+          mv build/oss-experimental/react-dom/unstable_server-external-runtime.js \\\n             ./compiled/facebook-www/unstable_server-external-runtime.js\n \n           # Move react-refresh-babel.development.js into babel-plugin-react-refresh",
        "org_msg": "Attempt to fix diff syncing for Meta (#28801)\n\n#28796 broke Meta's PR syncing tool, hoping this fixes it",
        "sim_msg": "add reducer to setup",
        "sim_diff": "diff --git a/src/store.js b/src/store.js @@ -21,6 +21,7 @@ import editorReducer from './post/Write/EditorReducers';\nimport { responsiveReducer, mountResponsive } from './helpers/responsive';\nimport reblogReducers from './app/Reblog/reblogReducers';\nimport walletReducer from './wallet/walletReducer';\n+import currentTooltip from './tooltip/tooltipReducer.js';\nexport const messagesWorker = new MessagesWorker();\n@@ -44,6 +45,7 @@ const reducers = combineReducers({\nreblog: reblogReducers,\nwallet: walletReducer,\ntooltip,\n+ currentTooltip\n});\nconst middleware = [\n"
    },
    {
        "org_diff": "diff --git a/.circleci/config.yml b/a/.circleci/config.yml @@ -2,7 +2,7 @@ version: 2.1\n \n aliases:\n   - &docker\n-    - image: cimg/openjdk:18.0-node\n+    - image: cimg/node:18.20.1-browsers\n \n   - &environment\n     TZ: /usr/share/zoneinfo/America/Los_Angeles\n@@ -246,8 +246,7 @@ jobs:\n           command: ./scripts/circleci/run_devtools_e2e_tests.js\n \n   run_fixtures_flight_tests:\n-    docker:\n-      - image: cimg/openjdk:20.0-node\n+    docker: *docker\n     environment: *environment\n     steps:\n       - checkout",
        "org_msg": "CI: Run with Node.js 18.20 (#28774)",
        "sim_msg": "chore: update ci to node 10.16; use local chrome for speed",
        "sim_diff": "diff --git a/.circleci/config.yml b/.circleci/config.yml @@ -7,7 +7,7 @@ version: 2\ndefaults: &defaults\nworking_directory: ~/repo\ndocker:\n- - image: circleci/node:10.12.0-browsers\n+ - image: circleci/node:10.16.0-browsers\njobs:\ntest:\n@@ -29,8 +29,12 @@ jobs:\n# run lint\n- run: npm run lint\n- # run tests\n- - run: npm run test:bs\n+ # run test locally first\n+ - run: npm run test\n+\n+ # run compatibility tests for multiple browser via browserstack\n+ # disabled until we can safely test multiple browsers\n+ # - run: npm run test:bs\n- persist_to_workspace:\nroot: ~/repo\n@@ -44,7 +48,7 @@ jobs:\nat: ~/repo\n- add_ssh_keys:\nfingerprints:\n- - \"df:41:a0:89:d0:a1:30:7d:08:38:d6:65:73:61:a4:ec\"\n+ - 'df:41:a0:89:d0:a1:30:7d:08:38:d6:65:73:61:a4:ec'\n- run:\nname: Authenticate with registry\ncommand: echo \"//registry.npmjs.org/:_authToken=$NPM_TOKEN\" >> ~/.npmrc\n"
    },
    {
        "org_diff": "diff --git a/.github/workflows/stale.yml b/a/.github/workflows/stale.yml @@ -2,8 +2,8 @@\n name: 'Manage stale issues and PRs'\n on:\n   schedule:\n-    # Run daily at 2AM\n-    - cron: '0 2 * * *'\n+    # Run hourly\n+    - cron: '0 * * * *'\n \n jobs:\n   stale:\n@@ -16,7 +16,7 @@ jobs:\n           days-before-stale: 90\n           # Number of days of inactivity before a stale issue or PR is closed\n           days-before-close: 7\n-          # Number of issues or PRs to process per day\n+          # API calls per run\n           operations-per-run: 100\n \n           # --- Issues ---\n@@ -43,4 +43,4 @@ jobs:\n           close-pr-message: >\n             Closing this pull request after a prolonged period of inactivity. If this issue is still present in the latest release, please ask for this pull request to be reopened. Thank you!\n           # PRs with these labels will never be considered stale\n-          exempt-pr-labels: \"Partner,React Core Team,Resolution: Backlog,Type: Bug,Type: Discussion,Type: Needs Investigation,Type: Regression,Type: Feature Request,Type: Enhancement\"\n\\ No newline at end of file\n+          exempt-pr-labels: \"Partner,React Core Team,Resolution: Backlog,Type: Bug,Type: Discussion,Type: Needs Investigation,Type: Regression,Type: Feature Request,Type: Enhancement\"",
        "org_msg": "Run stale job hourly (#28769)",
        "sim_msg": "Set the days-before-stale option to 500",
        "sim_diff": "diff --git a/.github/workflows/stale.yml b/.github/workflows/stale.yml @@ -15,7 +15,7 @@ jobs:\nclose-pr-message: \"We're closing this pull request after a prolonged period of inactivity. If it is still relevant, please ask for this pull request to be reopened. Thank you.\"\nstale-issue-label: \"STATE: Stale\"\nstale-pr-label: \"STATE: Stale\"\n- days-before-stale: 700\n+ days-before-stale: 500\ndays-before-close: 10\nexempt-issue-labels: \"AREA: docs,FREQUENCY: critical,FREQUENCY: level 2,HELP WANTED,!IMPORTANT!,STATE: Need clarification,STATE: Need response,STATE: won't fix,support center,TYPE: bug\"\nexempt-pr-labels: \"AREA: docs,FREQUENCY: critical,FREQUENCY: level 2,HELP WANTED,!IMPORTANT!,STATE: Need clarification,STATE: Need response,STATE: won't fix,support center,TYPE: bug\"\n"
    },
    {
        "org_diff": "diff --git a/packages/react-dom/package.json b/a/packages/react-dom/package.json @@ -25,23 +25,28 @@\n   \"files\": [\n     \"LICENSE\",\n     \"README.md\",\n-    \"index.js\",\n     \"client.js\",\n+    \"client.react-server.js\",\n+    \"index.js\",\n     \"profiling.js\",\n-    \"server.js\",\n+    \"profiling.react-server.js\",\n+    \"react-dom.react-server.js\",\n+    \"server-rendering-stub.js\",\n     \"server.browser.js\",\n+    \"server.bun.js\",\n     \"server.edge.js\",\n+    \"server.js\",\n     \"server.node.js\",\n-    \"server.bun.js\",\n-    \"static.js\",\n+    \"server.react-server.js\",\n     \"static.browser.js\",\n     \"static.edge.js\",\n+    \"static.js\",\n     \"static.node.js\",\n-    \"server-rendering-stub.js\",\n+    \"static.react-server.js\",\n     \"test-utils.js\",\n     \"unstable_testing.js\",\n+    \"unstable_testing.react-server.js\",\n     \"unstable_server-external-runtime.js\",\n-    \"react-dom.react-server.js\",\n     \"cjs/\",\n     \"umd/\"\n   ],",
        "org_msg": "[DOM] Fix package.json files for #28784 (#28785)\n\nMissed some files for the react-server disallow client change in #28784",
        "sim_msg": "[server] Include nav-selectors in server",
        "sim_diff": "diff --git a/server/package.json b/server/package.json \"description\": \"\",\n\"main\": \"dist/server\",\n\"scripts\": {\n- \"babel\": \"babel src/ --out-dir dist/ --ignore 'lib/flow-typed','lib/node_modules','lib/package.json','web/flow-typed','web/node_modules','web/package.json','web/dist/hot','web/dist/dev.build.js','web/dist/prod.build.js','web/dist/prod.build.css','web/webpack.config.js','web/account-bar.react.js','web/app.react.js','web/calendar','web/chat','web/flow','web/loading-indicator.react.js','web/modals','web/router-history.js','web/script.js','web/selectors','web/server-rendering.js','web/splash','web/style.css','web/vector-utils.js','web/vectors.react.js' --copy-files\",\n+ \"babel\": \"babel src/ --out-dir dist/ --ignore 'lib/flow-typed','lib/node_modules','lib/package.json','web/flow-typed','web/node_modules','web/package.json','web/dist/hot','web/dist/dev.build.js','web/dist/prod.build.js','web/dist/prod.build.css','web/webpack.config.js','web/account-bar.react.js','web/app.react.js','web/calendar','web/chat','web/flow','web/loading-indicator.react.js','web/modals','web/router-history.js','web/script.js','web/selectors/chat-selectors.js','web/selectors/entry-selectors.js','web/server-rendering.js','web/splash','web/style.css','web/vector-utils.js','web/vectors.react.js' --copy-files\",\n\"prod\": \"node --experimental-modules --loader ./loader.mjs dist/server\",\n\"dev\": \"NODE_ENV=dev concurrently \\\"npm run babel -- --watch\\\" \\\"nodemon -e js,json --watch dist --experimental-modules --loader ./loader.mjs dist/server\\\"\"\n},\n"
    },
    {
        "org_diff": "diff --git a/packages/react-dom/package.json b/a/packages/react-dom/package.json @@ -50,8 +50,12 @@\n       \"react-server\": \"./react-dom.react-server.js\",\n       \"default\": \"./index.js\"\n     },\n-    \"./client\": \"./client.js\",\n+    \"./client\": {\n+      \"react-server\": \"./client.react-server.js\",\n+      \"default\": \"./client.js\"\n+    },\n     \"./server\": {\n+      \"react-server\": \"./server.react-server.js\",\n       \"workerd\": \"./server.edge.js\",\n       \"bun\": \"./server.bun.js\",\n       \"deno\": \"./server.browser.js\",\n@@ -61,11 +65,24 @@\n       \"edge-light\": \"./server.edge.js\",\n       \"default\": \"./server.node.js\"\n     },\n-    \"./server.browser\": \"./server.browser.js\",\n-    \"./server.bun\": \"./server.bun.js\",\n-    \"./server.edge\": \"./server.edge.js\",\n-    \"./server.node\": \"./server.node.js\",\n+    \"./server.browser\": {\n+      \"react-server\": \"./server.react-server.js\",\n+      \"default\": \"./server.browser.js\"\n+    },\n+    \"./server.bun\": {\n+      \"react-server\": \"./server.react-server.js\",\n+      \"default\": \"./server.bun.js\"\n+    },\n+    \"./server.edge\": {\n+      \"react-server\": \"./server.react-server.js\",\n+      \"default\": \"./server.edge.js\"\n+    },\n+    \"./server.node\": {\n+      \"react-server\": \"./server.react-server.js\",\n+      \"default\": \"./server.node.js\"\n+    },\n     \"./static\": {\n+      \"react-server\": \"./static.react-server.js\",\n       \"workerd\": \"./static.edge.js\",\n       \"deno\": \"./static.browser.js\",\n       \"worker\": \"./static.browser.js\",\n@@ -74,13 +91,28 @@\n       \"edge-light\": \"./static.edge.js\",\n       \"default\": \"./static.node.js\"\n     },\n-    \"./static.browser\": \"./static.browser.js\",\n-    \"./static.edge\": \"./static.edge.js\",\n-    \"./static.node\": \"./static.node.js\",\n+    \"./static.browser\": {\n+      \"react-server\": \"./static.react-server.js\",\n+      \"default\": \"./static.browser.js\"\n+    },\n+    \"./static.edge\": {\n+      \"react-server\": \"./static.react-server.js\",\n+      \"default\": \"./static.edge.js\"\n+    },\n+    \"./static.node\": {\n+      \"react-server\": \"./static.react-server.js\",\n+      \"default\": \"./static.node.js\"\n+    },\n     \"./server-rendering-stub\": \"./server-rendering-stub.js\",\n-    \"./profiling\": \"./profiling.js\",\n+    \"./profiling\": {\n+      \"react-server\": \"./profiling.react-server.js\",\n+      \"default\": \"./profiling.js\"\n+    },\n     \"./test-utils\": \"./test-utils.js\",\n-    \"./unstable_testing\": \"./unstable_testing.js\",\n+    \"./unstable_testing\": {\n+      \"react-server\": \"./unstable_testing.react-server.js\",\n+      \"default\": \"./unstable_testing.js\"\n+    },\n     \"./unstable_server-external-runtime\": \"./unstable_server-external-runtime.js\",\n     \"./src/*\": \"./src/*\",\n     \"./package.json\": \"./package.json\"",
        "org_msg": "[DOM] disallow client entrypoints with react-server condition (#28784)\n\n`react-server` precludes loading code that expects to be run in a client\r\ncontext. This includes react-dom/client react-dom/server\r\nreact-dom/unstable_testing react-dom/profiling and react-dom/static\r\n\r\nThis update makes importing any of these client only entrypoints an\r\nerror",
        "sim_msg": "[server] Fix up asset fetching on prod",
        "sim_diff": "diff --git a/server/src/responders/website-responders.js b/server/src/responders/website-responders.js @@ -50,20 +50,32 @@ const { renderToString } = ReactDOMServer;\nconst { Provider } = ReactRedux;\nconst { reducer } = ReduxSetup;\n-let jsURL, fontsURL, cssInclude;\n+type AssetInfo = {| jsURL: string, fontsURL: string, cssInclude: string |};\n+let assetInfo: ?AssetInfo = null;\n+async function getAssetInfo() {\n+ if (assetInfo) {\n+ return assetInfo;\n+ }\nif (process.env.NODE_ENV === \"dev\") {\n- jsURL = \"http://localhost:8080/dev.build.js\";\n- fontsURL = \"fonts/local-fonts.css\";\n- cssInclude = \"\";\n-} else {\n- const assets = import('../../compiled/assets');\n- jsURL = `compiled/${assets.browser.js}`;\n- fontsURL = \"https://fonts.googleapis.com/css?family=Open+Sans:300,600%7CAnaheim\";\n- cssInclude = html`<link\n+ assetInfo = {\n+ jsURL: \"http://localhost:8080/dev.build.js\",\n+ fontsURL: \"fonts/local-fonts.css\",\n+ cssInclude: \"\",\n+ };\n+ return assetInfo;\n+ }\n+ // $FlowFixMe compiled/assets.json doesn't always exist\n+ const { default: assets } = await import('../../compiled/assets');\n+ assetInfo = {\n+ jsURL: `compiled/${assets.browser.js}`,\n+ fontsURL: \"https://fonts.googleapis.com/css?family=Open+Sans:300,600%7CAnaheim\",\n+ cssInclude: html`<link\nrel=\"stylesheet\"\ntype=\"text/css\"\nhref=\"compiled/${assets.browser.css}\"\n- />`;\n+ />`,\n+ };\n+ return assetInfo;\n}\nasync function websiteResponder(viewer: Viewer, url: string): Promise<string> {\n@@ -91,6 +103,7 @@ async function websiteResponder(viewer: Viewer, url: string): Promise<string> {\n{ rawEntryInfos, userInfos: entryUserInfos },\n{ rawMessageInfos, truncationStatuses, userInfos: messageUserInfos },\nverificationResult,\n+ { jsURL, fontsURL, cssInclude },\n] = await Promise.all([\nfetchThreadInfos(viewer),\nfetchCurrentUserInfo(viewer),\n@@ -101,6 +114,7 @@ async function websiteResponder(viewer: Viewer, url: string): Promise<string> {\ndefaultNumberPerThread,\n),\nhandleVerificationRequest(viewer, navInfo.verify),\n+ getAssetInfo(),\nviewer.loggedIn ? setNewSession(viewer, calendarQuery, initialTime) : null,\n]);\n"
    },
    {
        "org_diff": "diff --git a/packages/react-dom-bindings/src/client/ReactFiberConfigDOM.js b/a/packages/react-dom-bindings/src/client/ReactFiberConfigDOM.js @@ -2417,9 +2417,15 @@ export function getResource(\n       return null;\n     }\n     case 'script': {\n-      if (typeof pendingProps.src === 'string' && pendingProps.async === true) {\n-        const scriptProps: ScriptProps = pendingProps;\n-        const key = getScriptKey(scriptProps.src);\n+      const async = pendingProps.async;\n+      const src = pendingProps.src;\n+      if (\n+        typeof src === 'string' &&\n+        async &&\n+        typeof async !== 'function' &&\n+        typeof async !== 'symbol'\n+      ) {\n+        const key = getScriptKey(src);\n         const scripts = getResourcesFromRoot(resourceRoot).hoistableScripts;\n \n         let resource = scripts.get(key);\n@@ -3065,16 +3071,20 @@ export function isHostHoistableType(\n       }\n     }\n     case 'script': {\n+      const isAsync =\n+        props.async &&\n+        typeof props.async !== 'function' &&\n+        typeof props.async !== 'symbol';\n       if (\n-        props.async !== true ||\n+        !isAsync ||\n         props.onLoad ||\n         props.onError ||\n-        typeof props.src !== 'string' ||\n-        !props.src\n+        !props.src ||\n+        typeof props.src !== 'string'\n       ) {\n         if (__DEV__) {\n           if (outsideHostContainerContext) {\n-            if (props.async !== true) {\n+            if (!isAsync) {\n               console.error(\n                 'Cannot render a sync or defer <script> outside the main document without knowing its order.' +\n                   ' Try adding async=\"\" or moving it into the root <head> tag.',",
        "org_msg": "[Float] treat `props.async` in Float consistent with the rest of react-dom (#26760)\n\nTreat async (boolean prop) consistently with Float. Previously float\r\nchecked if `props.async === true` (or not true) but the rest of\r\nreact-dom considers anything truthy that isn't a function or symbol as\r\n`true`. This PR normalizes the Float behavior.",
        "sim_msg": "[gallery] tests (allowTitle e2e) removed 2e2 tests",
        "sim_diff": "diff --git a/packages/gallery/tests/e2e/styleParams/allowTitle.e2e.spec.js b/packages/gallery/tests/e2e/styleParams/allowTitle.e2e.spec.js @@ -16,27 +16,30 @@ describe('allowTitle - e2e', () => {\nafterEach(() => {\ndriver.closeBrowser();\n});\n- it('should render when \"allowTitle\" is \"true\"', async () => {\n- await driver.openPage({\n- galleryLayout: 2,\n- allowTitle: true\n- });\n- await driver.waitFor.hookToBeVisible('item-container');\n- await driver.actions.hover('item-container')[0]\n- await driver.waitFor.timer(2000);\n- const page = await driver.grab.screenshot();\n- expect(page).toMatchImageSnapshot();\n- });\n- it('should not render when \"allowTitle\" is \"false\"', async () => {\n- await driver.openPage({\n- galleryLayout: 2,\n- allowTitle: false\n- });\n- await driver.waitFor.hookToBeVisible('item-container');\n- await driver.actions.hover('item-container')[0]\n- await driver.waitFor.timer(2000);\n- const page = await driver.grab.screenshot();\n- expect(page).toMatchImageSnapshot();\n- });\n+ it('Should render title', () => {\n+\n+ })\n+ // it('should render when \"allowTitle\" is \"true\"', async () => {\n+ // await driver.openPage({\n+ // galleryLayout: 2,\n+ // allowTitle: true\n+ // });\n+ // await driver.waitFor.hookToBeVisible('item-container');\n+ // await driver.actions.hover('item-container')[0]\n+ // await driver.waitFor.timer(2000);\n+ // const page = await driver.grab.screenshot();\n+ // expect(page).toMatchImageSnapshot();\n+ // });\n+ // it('should not render when \"allowTitle\" is \"false\"', async () => {\n+ // await driver.openPage({\n+ // galleryLayout: 2,\n+ // allowTitle: false\n+ // });\n+ // await driver.waitFor.hookToBeVisible('item-container');\n+ // await driver.actions.hover('item-container')[0]\n+ // await driver.waitFor.timer(2000);\n+ // const page = await driver.grab.screenshot();\n+ // expect(page).toMatchImageSnapshot();\n+ // });\n})\n\\ No newline at end of file\n"
    },
    {
        "org_diff": "diff --git a/packages/react-dom-bindings/src/events/ReactDOMEventReplaying.js b/a/packages/react-dom-bindings/src/events/ReactDOMEventReplaying.js @@ -38,7 +38,7 @@ import {isHigherEventPriority} from 'react-reconciler/src/ReactEventPriorities';\n import {isRootDehydrated} from 'react-reconciler/src/ReactFiberShellHydration';\n import {dispatchReplayedFormAction} from './plugins/FormActionEventPlugin';\n import {\n-  getCurrentUpdatePriority,\n+  resolveUpdatePriority,\n   runWithPriority as attemptHydrationAtPriority,\n } from '../client/ReactDOMUpdatePriority';\n \n@@ -333,10 +333,7 @@ function attemptExplicitHydrationTarget(\n }\n \n export function queueExplicitHydrationTarget(target: Node): void {\n-  // TODO: This will read the priority if it's dispatched by the React\n-  // event system but not native events. Should read window.event.type, like\n-  // we do for updates (getCurrentEventPriority).\n-  const updatePriority = getCurrentUpdatePriority();\n+  const updatePriority = resolveUpdatePriority();\n   const queuedTarget: QueuedHydrationTarget = {\n     blockedOn: null,\n     target: target,",
        "org_msg": "[Fiber] Use real event priority for hydration scheduling (#28765)\n\nStacked on #28751 \r\n\r\nHistorically explicit hydration scheduling used the reconciler's update\r\npriority to schedule the hydration. There was a lingering todo to switch\r\nto using event priority in the absence of an explicit update priority.\r\nThis change updates the hydration priority by referring to the event\r\npriority if no update priority is set",
        "sim_msg": "changing delayPressIn to 50",
        "sim_diff": "diff --git a/src/components/EventList.js b/src/components/EventList.js @@ -26,7 +26,7 @@ const EventList = ({\nrenderItem={({ item: event }) => (\n<View style={styles.eventListItem}>\n<TouchableOpacity\n- delayPressIn={10}\n+ delayPressIn={50}\nonPress={() => onPress(event.fields.name[locale])}\n>\n<EventCard name={event.fields.name[locale]} />\n"
    },
    {
        "org_diff": "diff --git a/packages/react/src/jsx/ReactJSXElement.js b/a/packages/react/src/jsx/ReactJSXElement.js @@ -364,12 +364,8 @@ export function jsxProd(type, config, maybeKey) {\n     // because in V8 it will deopt the object to dictionary mode.\n     props = {};\n     for (const propName in config) {\n-      if (\n-        hasOwnProperty.call(config, propName) &&\n-        // Skip over reserved prop names\n-        propName !== 'key' &&\n-        (enableRefAsProp || propName !== 'ref')\n-      ) {\n+      // Skip over reserved prop names\n+      if (propName !== 'key' && (enableRefAsProp || propName !== 'ref')) {\n         if (enableRefAsProp && !disableStringRefs && propName === 'ref') {\n           props.ref = coerceStringRef(\n             config[propName],\n@@ -603,12 +599,8 @@ export function jsxDEV(type, config, maybeKey, isStaticChildren, source, self) {\n       // because in V8 it will deopt the object to dictionary mode.\n       props = {};\n       for (const propName in config) {\n-        if (\n-          hasOwnProperty.call(config, propName) &&\n-          // Skip over reserved prop names\n-          propName !== 'key' &&\n-          (enableRefAsProp || propName !== 'ref')\n-        ) {\n+        // Skip over reserved prop names\n+        if (propName !== 'key' && (enableRefAsProp || propName !== 'ref')) {\n           if (enableRefAsProp && !disableStringRefs && propName === 'ref') {\n             props.ref = coerceStringRef(\n               config[propName],",
        "org_msg": "jsx: Remove unnecessary hasOwnProperty check (#28775)\n\nFollow up to #28768.\r\n\r\nThe modern JSX runtime (`jsx`) does not need to check if each prop is a\r\ndirect property with `hasOwnProperty` because the compiler always passes\r\na plain object.\r\n\r\nI'll leave the check in the old JSX runtime (`createElement`) since that\r\none can be called manually with any kind of object, and if there were\r\nold user code that relied on this for some reason, it would be using\r\nthat runtime.",
        "sim_msg": "fix(attributes-to-props): undo default function parameter\nReverting the default parameter set in `attributesToProps` will\nenable ES5 compatibility since this code is not transpiled.",
        "sim_diff": "diff --git a/lib/attributes-to-props.js b/lib/attributes-to-props.js @@ -12,10 +12,11 @@ DOMProperty.injection.injectDOMPropertyConfig(\n/**\n* Makes attributes compatible with React props.\n*\n- * @param {Object} attributes - The attributes.\n+ * @param {Object} [attributes={}] - The attributes.\n* @return {Object} - The props.\n*/\n-function attributesToProps(attributes = {}) {\n+function attributesToProps(attributes) {\n+ attributes = attributes || {};\nvar props = {};\nvar propertyName;\nvar propertyValue;\n"
    },
    {
        "org_diff": "diff --git a/fixtures/nesting/README.md b/a/fixtures/nesting/README.md @@ -68,7 +68,7 @@ We will use three different `package.json`s: one for non-React code at the root,\n - **`src/legacy/package.json`**: This is where we declare the `react` and `react-dom`  dependencies for the \"legacy\" trees. In this demo, we're using React 16.8 (although, as noted above, we could downgrade it further below). This is **also** where we specify any third-party libraries that use React. For example, we include `react-router` and `react-redux` in this example. \n - **`src/modern/package.json`**: This is where we declare the `react` and `react-dom`  dependencies for the \"modern\" trees. In this demo, we're using React 17. Here, we also specify third-party dependencies that use React and are used from the modern part of our app. This is why we *also* have `react-router` and `react-redux` in this file. (Their versions don't strictly have to match their `legacy` counterparts, but features that rely on context may require workarounds if they differ.)\n \n-The `scripts` in the root `package.json` are set up so that when you run `npm install` in it, it also runs `npm intall` in both `src/legacy` and `src/modern` folders.\n+The `scripts` in the root `package.json` are set up so that when you run `npm install` in it, it also runs `npm install` in both `src/legacy` and `src/modern` folders.\n \n **Note:** This demo is set up to use a few third-party dependencies (React Router and Redux). These are not essential, and you can remove them from the demo. They are included so we can show how to make them work with this approach.\n ",
        "org_msg": "docs: fix typo in fixtures/nesting/README.md (#27507)",
        "sim_msg": "[playground] fix: remove unused param",
        "sim_diff": "diff --git a/packages/playground/src/components/App/App.js b/packages/playground/src/components/App/App.js -import React, {useEffect, useState} from 'react';\n+import React, {useEffect} from 'react';\nimport {SideBar} from '../SideBar';\nimport {Button} from 'antd';\nimport {useGalleryContext} from '../../hooks/useGalleryContext';\n"
    },
    {
        "org_diff": "diff --git a/.github/workflows/stale.yml b/a/.github/workflows/stale.yml @@ -16,8 +16,8 @@ jobs:\n           days-before-stale: 90\n           # Number of days of inactivity before a stale issue or PR is closed\n           days-before-close: 7\n-          # Tmp dry run setup to test new config\n-          debug-only: 'true'\n+          # Number of issues or PRs to process per day\n+          operations-per-run: 100\n \n           # --- Issues ---\n           stale-issue-label: \"Resolution: Stale\"\n@@ -30,7 +30,7 @@ jobs:\n           close-issue-message: >\n             Closing this issue after a prolonged period of inactivity. If this issue is still present in the latest release, please create a new issue with up-to-date information. Thank you!\n           # Issues with these labels will never be considered stale\n-          exempt-issue-labels: \"Partner,React Core Team,Resolution: Backlog,Type: Bug,Type: Discussion,Type: Needs Investigation,Type: Regression,Type: Feature Request\"\n+          exempt-issue-labels: \"Partner,React Core Team,Resolution: Backlog,Type: Bug,Type: Discussion,Type: Needs Investigation,Type: Regression,Type: Feature Request,Type: Enhancement\"\n \n           # --- PRs ---\n           stale-pr-label: \"Resolution: Stale\"\n@@ -43,4 +43,4 @@ jobs:\n           close-pr-message: >\n             Closing this pull request after a prolonged period of inactivity. If this issue is still present in the latest release, please ask for this pull request to be reopened. Thank you!\n           # PRs with these labels will never be considered stale\n-          exempt-pr-labels: \"Partner,React Core Team,Resolution: Backlog,Type: Bug,Type: Discussion,Type: Needs Investigation,Type: Regression,Type: Feature Request\"\n\\ No newline at end of file\n+          exempt-pr-labels: \"Partner,React Core Team,Resolution: Backlog,Type: Bug,Type: Discussion,Type: Needs Investigation,Type: Regression,Type: Feature Request,Type: Enhancement\"\n\\ No newline at end of file",
        "org_msg": "Enable stale action (#28729)\n\nFollows #28695\r\n\r\nNow that the action has run successfully in debug mode\r\n([logs](https://github.com/facebook/react/actions/runs/8532177618/job/23372921455#step:2:35)),\r\nlet's enable it to persist changes.\r\n\r\nAlso changes the number of operations per run from the default of 30 to\r\n100 since we have a large backlog of issues and PRs to work through.\r\n\r\nFinally adds enhancement label as exempt from stale.",
        "sim_msg": "Set the days-before-stale option to 450",
        "sim_diff": "diff --git a/.github/workflows/stale.yml b/.github/workflows/stale.yml @@ -15,7 +15,7 @@ jobs:\nclose-pr-message: \"We're closing this pull request after a prolonged period of inactivity. If it is still relevant, please ask for this pull request to be reopened. Thank you.\"\nstale-issue-label: \"STATE: Stale\"\nstale-pr-label: \"STATE: Stale\"\n- days-before-stale: 500\n+ days-before-stale: 450\ndays-before-close: 10\nexempt-issue-labels: \"AREA: docs,FREQUENCY: critical,FREQUENCY: level 2,HELP WANTED,!IMPORTANT!,STATE: Need clarification,STATE: Need response,STATE: won't fix,support center,TYPE: bug\"\nexempt-pr-labels: \"AREA: docs,FREQUENCY: critical,FREQUENCY: level 2,HELP WANTED,!IMPORTANT!,STATE: Need clarification,STATE: Need response,STATE: won't fix,support center,TYPE: bug\"\n"
    },
    {
        "org_diff": "diff --git a/packages/react-server/src/ReactFizzServer.js b/a/packages/react-server/src/ReactFizzServer.js @@ -842,7 +842,7 @@ function encodeErrorForBoundary(\n       ? 'Switched to client rendering because the server rendering aborted due to:\\n\\n'\n       : 'Switched to client rendering because the server rendering errored:\\n\\n';\n     boundary.errorMessage = prefix + message;\n-    boundary.errorStack = stack;\n+    boundary.errorStack = stack !== null ? prefix + stack : null;\n     boundary.errorComponentStack = thrownInfo.componentStack;\n   }\n }",
        "org_msg": "Emit Server Error Prefix in the .stack Property Too (#28738)\n\nFollow up to #28684.\r\n\r\nV8 includes the message in the stack and printed errors include just the\r\nstack property which is assumed to contain the message. Without this,\r\nthe prefix doesn't get printed in the console.\r\n\r\n<img width=\"578\" alt=\"Screenshot 2024-04-03 at 6 32 04 PM\"\r\nsrc=\"https://github.com/facebook/react/assets/63648/d98a2db4-6ebc-4805-b669-59f449dfd21f\">\r\n\r\nA possible alternative would be to use a nested error with a `cause`\r\nlike #28736 but that would need some more involved serializing since\r\nthis prefix is coming from the server. Perhaps as a separate attribute.",
        "sim_msg": "[server] Fix up asset fetching on prod",
        "sim_diff": "diff --git a/server/src/responders/website-responders.js b/server/src/responders/website-responders.js @@ -50,20 +50,32 @@ const { renderToString } = ReactDOMServer;\nconst { Provider } = ReactRedux;\nconst { reducer } = ReduxSetup;\n-let jsURL, fontsURL, cssInclude;\n+type AssetInfo = {| jsURL: string, fontsURL: string, cssInclude: string |};\n+let assetInfo: ?AssetInfo = null;\n+async function getAssetInfo() {\n+ if (assetInfo) {\n+ return assetInfo;\n+ }\nif (process.env.NODE_ENV === \"dev\") {\n- jsURL = \"http://localhost:8080/dev.build.js\";\n- fontsURL = \"fonts/local-fonts.css\";\n- cssInclude = \"\";\n-} else {\n- const assets = import('../../compiled/assets');\n- jsURL = `compiled/${assets.browser.js}`;\n- fontsURL = \"https://fonts.googleapis.com/css?family=Open+Sans:300,600%7CAnaheim\";\n- cssInclude = html`<link\n+ assetInfo = {\n+ jsURL: \"http://localhost:8080/dev.build.js\",\n+ fontsURL: \"fonts/local-fonts.css\",\n+ cssInclude: \"\",\n+ };\n+ return assetInfo;\n+ }\n+ // $FlowFixMe compiled/assets.json doesn't always exist\n+ const { default: assets } = await import('../../compiled/assets');\n+ assetInfo = {\n+ jsURL: `compiled/${assets.browser.js}`,\n+ fontsURL: \"https://fonts.googleapis.com/css?family=Open+Sans:300,600%7CAnaheim\",\n+ cssInclude: html`<link\nrel=\"stylesheet\"\ntype=\"text/css\"\nhref=\"compiled/${assets.browser.css}\"\n- />`;\n+ />`,\n+ };\n+ return assetInfo;\n}\nasync function websiteResponder(viewer: Viewer, url: string): Promise<string> {\n@@ -91,6 +103,7 @@ async function websiteResponder(viewer: Viewer, url: string): Promise<string> {\n{ rawEntryInfos, userInfos: entryUserInfos },\n{ rawMessageInfos, truncationStatuses, userInfos: messageUserInfos },\nverificationResult,\n+ { jsURL, fontsURL, cssInclude },\n] = await Promise.all([\nfetchThreadInfos(viewer),\nfetchCurrentUserInfo(viewer),\n@@ -101,6 +114,7 @@ async function websiteResponder(viewer: Viewer, url: string): Promise<string> {\ndefaultNumberPerThread,\n),\nhandleVerificationRequest(viewer, navInfo.verify),\n+ getAssetInfo(),\nviewer.loggedIn ? setNewSession(viewer, calendarQuery, initialTime) : null,\n]);\n"
    },
    {
        "org_diff": "diff --git a/packages/react-server/src/ReactFizzServer.js b/a/packages/react-server/src/ReactFizzServer.js @@ -1390,21 +1390,52 @@ function finishClassComponent(\n   task.keyPath = prevKeyPath;\n }\n \n+export function resolveClassComponentProps(\n+  Component: any,\n+  baseProps: Object,\n+): Object {\n+  let newProps = baseProps;\n+\n+  // TODO: This is where defaultProps should be resolved, too.\n+\n+  if (enableRefAsProp) {\n+    // Remove ref from the props object, if it exists.\n+    if ('ref' in newProps) {\n+      newProps = assign({}, newProps);\n+      delete newProps.ref;\n+    }\n+  }\n+\n+  return newProps;\n+}\n+\n function renderClassComponent(\n   request: Request,\n   task: Task,\n   keyPath: KeyNode,\n   Component: any,\n   props: any,\n ): void {\n+  const resolvedProps = resolveClassComponentProps(Component, props);\n   const previousComponentStack = task.componentStack;\n   task.componentStack = createClassComponentStack(task, Component);\n   const maskedContext = !disableLegacyContext\n     ? getMaskedContext(Component, task.legacyContext)\n     : undefined;\n-  const instance = constructClassInstance(Component, props, maskedContext);\n-  mountClassInstance(instance, Component, props, maskedContext);\n-  finishClassComponent(request, task, keyPath, instance, Component, props);\n+  const instance = constructClassInstance(\n+    Component,\n+    resolvedProps,\n+    maskedContext,\n+  );\n+  mountClassInstance(instance, Component, resolvedProps, maskedContext);\n+  finishClassComponent(\n+    request,\n+    task,\n+    keyPath,\n+    instance,\n+    Component,\n+    resolvedProps,\n+  );\n   task.componentStack = previousComponentStack;\n }\n ",
        "org_msg": "Classes consume ref prop during SSR, too (#28731)\n\nSame as #28719 but for SSR.",
        "sim_msg": "Add Help menu HOC to setupwithGCP component.",
        "sim_diff": "diff --git a/assets/js/components/legacy-setup/SetupUsingGCP.js b/assets/js/components/legacy-setup/SetupUsingGCP.js @@ -37,6 +37,8 @@ import data, { TYPE_CORE } from '../data';\nimport { trackEvent, clearWebStorage, getSiteKitAdminURL } from '../../util';\nimport STEPS from './wizard-steps';\nimport WizardProgressStep from './wizard-progress-step';\n+import HelpMenu from '../help/HelpMenu';\n+import { useFeature } from '../../hooks/useFeature';\nclass SetupUsingGCP extends Component {\nconstructor( props ) {\n@@ -185,6 +187,8 @@ class SetupUsingGCP extends Component {\nisSiteKitConnected,\n} = this.state;\n+ const { helpVisibilityEnabled } = this.props;\n+\nif ( this.isSetupFinished() ) {\nconst redirectURL = getSiteKitAdminURL(\n'googlesitekit-dashboard',\n@@ -222,11 +226,9 @@ class SetupUsingGCP extends Component {\nreturn (\n<Fragment>\n- <Header />\n- { /*\n- Note: this component doesn't use hooks and thus can't access the\n- feature flags, so we don't render the HelpMenu here.\n- */ }\n+ <Header>\n+ { helpVisibilityEnabled && <HelpMenu /> }\n+ </Header>\n<div className=\"googlesitekit-wizard\">\n<div className=\"mdc-layout-grid\">\n<div className=\"mdc-layout-grid__inner\">\n@@ -301,4 +303,17 @@ class SetupUsingGCP extends Component {\n}\n}\n-export default SetupUsingGCP;\n+const withHelpVisibilityFeatureFlag = ( WrappedComponent ) => {\n+ return ( props ) => {\n+ const helpVisibilityEnabled = useFeature( 'helpVisibility' );\n+\n+ return (\n+ <WrappedComponent\n+ { ...props }\n+ helpVisibilityEnabled={ helpVisibilityEnabled }\n+ />\n+ );\n+ };\n+};\n+\n+export default withHelpVisibilityFeatureFlag( SetupUsingGCP );\n"
    },
    {
        "org_diff": "diff --git a/packages/react-test-renderer/README.md b/a/packages/react-test-renderer/README.md @@ -1,12 +1,26 @@\n-# `react-test-renderer`\n+# `react-test-renderer` (DEPRECATED)\n+\n+## Deprecation notice\n+\n+`react-test-renderer` is deprecated and no longer maintained. It will be removed in a future version. As of React 19, you will see a console warning when invoking `ReactTestRenderer.create()`.\n+\n+### React Testing\n+\n+This library creates a contrived environment and its APIs encourage introspection on React's internals, which may change without notice causing broken tests. It is instead recommended to use browser-based environments such as jsdom and standard DOM APIs for your assertions.\n+\n+The React team recommends [`@testing-library/react`](https://testing-library.com/docs/react-testing-library/intro) as a modern alternative that uses standard APIs, avoids internals, and [promotes best practices](https://testing-library.com/docs/guiding-principles).\n+\n+### React Native Testing\n+\n+The React team recommends @testing-library/react-native as a replacement for `react-test-renderer` for native integration tests. This React Native testing-library variant follows the same API design as described above and promotes better testing patterns.\n+\n+## Documentation\n \n This package provides an experimental React renderer that can be used to render React components to pure JavaScript objects, without depending on the DOM or a native mobile environment.\n \n Essentially, this package makes it easy to grab a snapshot of the \"DOM tree\" rendered by a React DOM or React Native component without using a browser or jsdom.\n \n-Documentation:\n-\n-[https://reactjs.org/docs/test-renderer.html](https://reactjs.org/docs/test-renderer.html)\n+Documentation: [https://reactjs.org/docs/test-renderer.html](https://reactjs.org/docs/test-renderer.html)\n \n Usage:\n ",
        "org_msg": "Update RTR readme (#28705)",
        "sim_msg": "Incorporated rerender comments",
        "sim_diff": "diff --git a/npm/react/docs/recipes.md b/npm/react/docs/recipes.md @@ -169,9 +169,9 @@ See [examples/rollup](examples/rollup) folder for full example.\n### Changing props\n-Many components have some statefulness, whether explicitly through `useState`, or implicitly through `useEffect`. Therefore during testing it is useful to keep the component mounted, but change the props being passed to it in order to preserve its state.\n+Many components have some statefulness, whether explicitly through `useState`, or implicitly through `useEffect`. Therefore during testing it is useful to keep the component mounted, but change the props being passed to it in order to preserve its state. This is referred to in some testing frameworks as `rerender()`.\n-We recommend building a \"wrapper\" component with the necessary DOM controls to push new props to your component under test.\n+We recommend building a \"wrapper\" component that acts similarly to how your users will interact with the component under test. In isolation, you can add DOM controls to push new props to your component.\n```js\nconst Accumulator = ({ value }) => {\n@@ -200,7 +200,7 @@ const Accumulator = ({ value }) => {\nThis component is an accumulator that stores each `value` prop passed to it. We create a wrapper component that has an `input` and a `button` to push new values to the `value` prop.\n```js\n-const Wrapper = () => {\n+const TestAcc = () => {\nconst ref = React.useRef()\nconst [value, setValue] = React.useState()\n@@ -224,7 +224,7 @@ With this, we can begin writing component tests to check the functionality of ou\n```js\nit('should store value', () => {\n- mount(<Wrapper />)\n+ mount(<TestAcc />)\ncy.get('input').type('Component testing is awesome!')\ncy.get('button').click()\n"
    },
    {
        "org_diff": "diff --git a/packages/react-devtools-shell/src/app/ElementTypes/index.js b/a/packages/react-devtools-shell/src/app/ElementTypes/index.js @@ -60,17 +60,15 @@ export default function ElementTypes(): React.Node {\n           <Context.Consumer>{(value: $FlowFixMe) => null}</Context.Consumer>\n         </Context.Provider>\n         <StrictMode>\n-          <Cache>\n-            <Suspense fallback={<div>Loading...</div>}>\n-              <ClassComponent />\n-              <FunctionComponent />\n-              <MemoFunctionComponent />\n-              <ForwardRefComponent />\n-              <ForwardRefComponentWithAnonymousFunction />\n-              <ForwardRefComponentWithCustomDisplayName />\n-              <LazyComponent />\n-            </Suspense>\n-          </Cache>\n+          <Suspense fallback={<div>Loading...</div>}>\n+            <ClassComponent />\n+            <FunctionComponent />\n+            <MemoFunctionComponent />\n+            <ForwardRefComponent />\n+            <ForwardRefComponentWithAnonymousFunction />\n+            <ForwardRefComponentWithCustomDisplayName />\n+            <LazyComponent />\n+          </Suspense>\n         </StrictMode>\n       </Fragment>\n     </Profiler>",
        "org_msg": "Remove reference to deleted <Cache> in un-linted file (#28715)\n\nI missed this in #28698 bc the file isn't linted",
        "sim_msg": "Pass props through to wrapped components",
        "sim_diff": "diff --git a/packages/idyll-document/src/index.js b/packages/idyll-document/src/index.js @@ -142,10 +142,15 @@ class Wrapper extends React.PureComponent {\n);\n}\n- const { __expr__, __vars__, hasError, ...state } = this.state;\n- return React.Children.map(this.props.children, (c, i) => {\n- return React.cloneElement(c, {key: `${this.key}-${i}`, ...state});\n- });\n+ const { __expr__, __vars__, hasError, ...state } = this.state\n+ const { children, ...passThruProps } = this.props\n+ return React.Children.map(children, (c, i) => {\n+ return React.cloneElement(c, {\n+ key: `${this.key}-${i}`,\n+ ...state,\n+ ...passThruProps,\n+ })\n+ })\n}\n}\n"
    },
    {
        "org_diff": "diff --git a/.nvmrc b/a/.nvmrc @@ -1 +1 @@\n-v16.19.1\n+v18.20.0",
        "org_msg": "Bump nvmrc to Node.js v18 (#28707)\n\nBump nvmrc to Node.js v18\r\n\r\nNode.js v16 is long deprecated, seems like for v20 there's some more\r\nstuff to fix.",
        "sim_msg": "add dependency fix to the graph, does not write yet",
        "sim_diff": "diff --git a/.gitignore b/.gitignore @@ -12,3 +12,4 @@ flatten/\nvenv\nbuild\n.vscode/\n+.idea/\n"
    },
    {
        "org_diff": "diff --git a/scripts/rollup/forks.js b/a/scripts/rollup/forks.js @@ -153,10 +153,7 @@ const forks = Object.freeze({\n           case RN_FB_DEV:\n           case RN_FB_PROD:\n           case RN_FB_PROFILING:\n-          case RN_OSS_DEV:\n-          case RN_OSS_PROD:\n-          case RN_OSS_PROFILING:\n-            return './packages/shared/forks/ReactFeatureFlags.test-renderer.native.js';\n+            return './packages/shared/forks/ReactFeatureFlags.test-renderer.native-fb.js';\n           case FB_WWW_DEV:\n           case FB_WWW_PROD:\n           case FB_WWW_PROFILING:",
        "org_msg": "Clarify RTR native feature flags are fb specific (#28679)\n\nMake it more clear that these flags aren't used in RN OSS.\r\n- Rename\r\n`packages/shared/forks/ReactFeatureFlags.test-renderer.native.js` to\r\n`packages/shared/forks/ReactFeatureFlags.test-renderer.native-fb.js`\r\n- Remove RN OSS build cases consuming the feature flags since there is\r\nno RN OSS RTR build.",
        "sim_msg": "feat(ui): Modern mode assets",
        "sim_diff": "diff --git a/ui/build/script.build.javascript.js b/ui/build/script.build.javascript.js @@ -19,9 +19,13 @@ const bubleConfig = {\nobjectAssign: 'Object.assign'\n}\n-const rollupPlugins = [\n+const rollupPluginsModern = [\nnodeResolve(),\n- json(),\n+ json()\n+]\n+\n+const rollupPluginsLegacy = [\n+ ...rollupPluginsModern,\nbuble(bubleConfig)\n]\n@@ -36,7 +40,11 @@ const builds = [\nformat: 'es'\n}\n},\n- build: { minified: true, minExt: false }\n+ build: {\n+ minified: true,\n+ minExt: false,\n+ modern: true\n+ }\n},\n{\nrollup: {\n@@ -50,7 +58,8 @@ const builds = [\n},\nbuild: {\nminified: true,\n- minExt: false\n+ minExt: false,\n+ modern: true\n}\n},\n{\n@@ -63,7 +72,10 @@ const builds = [\nformat: 'es'\n}\n},\n- build: { minified: true, minExt: false }\n+ build: {\n+ minified: true,\n+ minExt: false\n+ }\n},\n{\nrollup: {\n@@ -75,7 +87,9 @@ const builds = [\nformat: 'umd'\n}\n},\n- build: { minified: true }\n+ build: {\n+ minified: true\n+ }\n},\n{\nrollup: {\n@@ -91,6 +105,22 @@ const builds = [\nunminified: true,\nminified: true\n}\n+ },\n+ {\n+ rollup: {\n+ input: {\n+ input: resolve(`src/index.umd.js`)\n+ },\n+ output: {\n+ file: resolve(`dist/quasar.umd.modern.js`),\n+ format: 'umd'\n+ }\n+ },\n+ build: {\n+ unminified: true,\n+ minified: true,\n+ modern: true\n+ }\n}\n]\n@@ -126,7 +156,9 @@ function build (builds) {\n}\nfunction genConfig (opts) {\n- opts.rollup.input.plugins = rollupPlugins\n+ opts.rollup.input.plugins = opts.build.modern === true\n+ ? rollupPluginsModern\n+ : rollupPluginsLegacy\nopts.rollup.input.external = opts.rollup.input.external || []\nopts.rollup.input.external.push('vue')\n"
    },
    {
        "org_diff": "diff --git a/packages/eslint-plugin-react-hooks/README.md b/a/packages/eslint-plugin-react-hooks/README.md @@ -1,8 +1,8 @@\n # `eslint-plugin-react-hooks`\n \n-This ESLint plugin enforces the [Rules of Hooks](https://reactjs.org/docs/hooks-rules.html).\n+This ESLint plugin enforces the [Rules of Hooks](https://react.dev/reference/rules/rules-of-hooks).\n \n-It is a part of the [Hooks API](https://reactjs.org/docs/hooks-intro.html) for React.\n+It is a part of the [Hooks API](https://react.dev/reference/react/hooks) for React.\n \n ## Installation\n \n@@ -68,7 +68,7 @@ We suggest to use this option **very sparingly, if at all**. Generally saying, w\n \n ## Valid and Invalid Examples\n \n-Please refer to the [Rules of Hooks](https://reactjs.org/docs/hooks-rules.html) documentation and the [Hooks FAQ](https://reactjs.org/docs/hooks-faq.html#what-exactly-do-the-lint-rules-enforce) to learn more about this rule.\n+Please refer to the [Rules of Hooks](https://react.dev/reference/rules/rules-of-hooks) documentation to learn more about this rule.\n \n ## License\n ",
        "org_msg": "[ESLint] Update README links to react.dev (#28692)\n\nUpdate ESLint plugin README to redirect to https://react.dev for more\r\ndetails (instead of legacy docs)",
        "sim_msg": "Update lock file post-merge conflict.",
        "sim_diff": "diff --git a/package-lock.json b/package-lock.json }\n}\n},\n+ \"@react-hook/debounce\": {\n+ \"version\": \"3.0.0\",\n+ \"resolved\": \"https://registry.npmjs.org/@react-hook/debounce/-/debounce-3.0.0.tgz\",\n+ \"integrity\": \"sha512-ir/kPrSfAzY12Gre0sOHkZ2rkEmM4fS5M5zFxCi4BnCeXh2nvx9Ujd+U4IGpKCuPA+EQD0pg1eK2NGLvfWejag==\",\n+ \"requires\": {\n+ \"@react-hook/latest\": \"^1.0.2\"\n+ }\n+ },\n+ \"@react-hook/event\": {\n+ \"version\": \"1.2.3\",\n+ \"resolved\": \"https://registry.npmjs.org/@react-hook/event/-/event-1.2.3.tgz\",\n+ \"integrity\": \"sha512-WMBwLnYY2rubLeecsi4skl1imfx0oiXTgazV/1ByPT6WkmLvxUao3hC+mxps5D/+JK4Fq3uG9OWU/dn5jMtXyg==\",\n+ \"requires\": {\n+ \"@react-hook/passive-layout-effect\": \"^1.2.0\"\n+ }\n+ },\n+ \"@react-hook/latest\": {\n+ \"version\": \"1.0.3\",\n+ \"resolved\": \"https://registry.npmjs.org/@react-hook/latest/-/latest-1.0.3.tgz\",\n+ \"integrity\": \"sha512-dy6duzl+JnAZcDbNTfmaP3xHiKtbXYOaz3G51MGVljh548Y8MWzTr+PHLOfvpypEVW9zwvl+VyKjbWKEVbV1Rg==\"\n+ },\n\"@react-hook/merged-ref\": {\n\"version\": \"1.3.0\",\n\"resolved\": \"https://registry.npmjs.org/@react-hook/merged-ref/-/merged-ref-1.3.0.tgz\",\n\"integrity\": \"sha512-9p7fbPZ37n1Cbw37f3EtrcR9TwVjMkoTKwYbG7URO2HDlnOzuNTjsd/VK0/4i52SwKmOa6lBwz6Pr9g0pIyaCg==\"\n},\n+ \"@react-hook/passive-layout-effect\": {\n+ \"version\": \"1.2.1\",\n+ \"resolved\": \"https://registry.npmjs.org/@react-hook/passive-layout-effect/-/passive-layout-effect-1.2.1.tgz\",\n+ \"integrity\": \"sha512-IwEphTD75liO8g+6taS+4oqz+nnroocNfWVHWz7j+N+ZO2vYrc6PV1q7GQhuahL0IOR7JccFTsFKQ/mb6iZWAg==\"\n+ },\n+ \"@react-hook/throttle\": {\n+ \"version\": \"2.2.0\",\n+ \"resolved\": \"https://registry.npmjs.org/@react-hook/throttle/-/throttle-2.2.0.tgz\",\n+ \"integrity\": \"sha512-LJ5eg+yMV8lXtqK3lR+OtOZ2WH/EfWvuiEEu0M3bhR7dZRfTyEJKxH1oK9uyBxiXPtWXiQggWbZirMCXam51tg==\",\n+ \"requires\": {\n+ \"@react-hook/latest\": \"^1.0.2\"\n+ }\n+ },\n+ \"@react-hook/window-size\": {\n+ \"version\": \"3.0.7\",\n+ \"resolved\": \"https://registry.npmjs.org/@react-hook/window-size/-/window-size-3.0.7.tgz\",\n+ \"integrity\": \"sha512-bK5ed/jN+cxy0s1jt2CelCnUt7jZRseUvPQ22ZJkUl/QDOsD+7CA/6wcqC3c0QweM/fPBRP6uI56TJ48SnlVww==\",\n+ \"requires\": {\n+ \"@react-hook/debounce\": \"^3.0.0\",\n+ \"@react-hook/event\": \"^1.2.1\",\n+ \"@react-hook/throttle\": \"^2.2.0\"\n+ }\n+ },\n\"@sinonjs/commons\": {\n\"version\": \"1.8.1\",\n\"resolved\": \"https://registry.npmjs.org/@sinonjs/commons/-/commons-1.8.1.tgz\",\n"
    },
    {
        "org_diff": "diff --git a/packages/react-test-renderer/src/__tests__/ReactTestRenderer-test.js b/a/packages/react-test-renderer/src/__tests__/ReactTestRenderer-test.js @@ -50,6 +50,35 @@ describe('ReactTestRenderer', () => {\n     expect(errors[1].message.includes('indexOf is not a function')).toBe(true);\n   });\n \n+  test('find element by prop with suspended content', async () => {\n+    const neverResolve = new Promise(() => {});\n+\n+    function TestComp({foo}) {\n+      if (foo === 'one') {\n+        throw neverResolve;\n+      } else {\n+        return null;\n+      }\n+    }\n+\n+    const tree = await act(() =>\n+      ReactTestRenderer.create(\n+        <div>\n+          <React.Suspense fallback={null}>\n+            <TestComp foo=\"one\" />\n+          </React.Suspense>\n+          <TestComp foo=\"two\" />\n+        </div>,\n+      ),\n+    );\n+\n+    expect(\n+      tree.root.find(item => {\n+        return item.props.foo === 'two';\n+      }),\n+    ).toBeDefined();\n+  });\n+\n   describe('timed out Suspense hidden subtrees should not be observable via toJSON', () => {\n     let AsyncText;\n     let PendingResources;",
        "org_msg": "Test for ReactTestRenderer (#28674)\n\nThis is a repro for a breakage that #28672 would introduce for legacy\r\nsync rendering.",
        "sim_msg": "Removed unnecessary tests from Sidebar.test.js",
        "sim_diff": "diff --git a/renderer/components/__tests__/Sidebar.test.js b/renderer/components/__tests__/Sidebar.test.js @@ -33,46 +33,28 @@ const renderComponent = (component, locale = 'en', messages = English) => {\n}\ndescribe('Tests for Sidebar component', () => {\n- afterEach(() => {\n- cleanup()\n- })\n- test('Displays the correct version', async () => {\n+ beforeEach(() => {\nrenderComponent(\n<Sidebar>\n<></>\n</Sidebar>\n)\n- const versionNumber = screen.getByTestId('sidebar-version-number')\n- expect(versionNumber.innerHTML).toMatch(version)\n- })\n-\n- test('Displays child elements', async () => {\n- renderComponent(\n- <Sidebar>\n- <p data-testid=\"test-paragraph\">Test paragraph</p>\n- </Sidebar>\n- )\n- expect(screen.getByTestId('test-paragraph').innerHTML).toBe(\n- 'Test paragraph'\n- )\n})\n+ afterEach(() => {\n+ cleanup()\n+ jest.clearAllMocks()\n})\n-\n-describe('Sidebar NavItems push the router to correct path', () => {\n- beforeEach(() => {\n+ test('Displays the correct version', async () => {\nrenderComponent(\n<Sidebar>\n<></>\n</Sidebar>\n)\n- })\n-\n- afterEach(() => {\n- cleanup()\n- jest.clearAllMocks()\n+ const versionNumber = screen.getByTestId('sidebar-version-number')\n+ expect(versionNumber.innerHTML).toMatch(version)\n})\ntest('Clicking on Dashboard NavItem calls pushes router to /dashboard', async () => {\n"
    },
    {
        "org_diff": "diff --git a/packages/react-dom-bindings/src/shared/isUnitlessNumber.js b/a/packages/react-dom-bindings/src/shared/isUnitlessNumber.js @@ -46,6 +46,7 @@ const unitlessNumbers = new Set([\n   'tabSize',\n   'widows',\n   'zIndex',\n+  'zoom',\n   'fillOpacity', // SVG-related properties\n   'floodOpacity',\n   'stopOpacity',\n@@ -60,6 +61,7 @@ const unitlessNumbers = new Set([\n   'MozLineClamp',\n   'msAnimationIterationCount',\n   'msFlex',\n+  'msZoom',\n   'msFlexGrow',\n   'msFlexNegative',\n   'msFlexOrder',",
        "org_msg": "Revert \"Remove zoom from special cases list\" (#28673)\n\nReverts facebook/react#26631\r\n\r\nThis got specced: https://github.com/w3c/csswg-drafts/pull/9699\r\n\r\nI left msZoom because it seems plausible someone will still be using it\r\nfor backwards compat.",
        "sim_msg": "Move left/right map titles to move along side of the divider & add left/right title color options",
        "sim_diff": "diff --git a/packages/component-library/src/ComparisonMap/ComparisonMap.js b/packages/component-library/src/ComparisonMap/ComparisonMap.js @@ -10,8 +10,10 @@ const ComparisonMap = props => {\ninitialViewport,\nleftMap,\nleftMapTitle,\n+ leftTitleColor,\nrightMap,\nrightMapTitle,\n+ rightTitleColor,\nshowDivider,\nsliderStartPosition\n} = props;\n@@ -73,17 +75,32 @@ const ComparisonMap = props => {\nbox-shadow: -3px 0px 4px gray;\n`;\n- const mapTitleWrapper = css`\n- padding: 5px 10px 0 10px;\n- display: flex;\n- justify-content: space-between;\n+ const leftTitleStyle = css`\n+ z-index: 1;\n+ position: absolute;\n+ font-family: \"Roboto Condensed\", \"Helvetica Neue\", Helvetica, sans-serif;\n+ font-size: 18px;\n+ font-weight: bold;\n+ margin: 0;\n+\n+ // Left Specific Formatting\n+ right: calc(100% - ${sliderPosition}% + 20px);\n+ color: ${leftTitleColor};\n+ text-align: right;\n`;\n- const titleStyle = css`\n+ const rightTitleStyle = css`\n+ z-index: 1;\n+ position: absolute;\nfont-family: \"Roboto Condensed\", \"Helvetica Neue\", Helvetica, sans-serif;\nfont-size: 18px;\nfont-weight: bold;\nmargin: 0;\n+\n+ // Right Specific Formatting\n+ left: calc(${sliderPosition}% + 20px);\n+ color: ${rightTitleColor};\n+ text-align: left;\n`;\nconst sliderMin = 5;\n@@ -100,10 +117,8 @@ const ComparisonMap = props => {\nreturn (\n<div css={container}>\n<div css={mapsWrapper}>\n- <div css={mapTitleWrapper}>\n- {leftMapTitle && <h2 css={titleStyle}>{leftMapTitle}</h2>}\n- {rightMapTitle && <h2 css={titleStyle}>{rightMapTitle}</h2>}\n- </div>\n+ {leftMapTitle && <h2 css={leftTitleStyle}>{leftMapTitle}</h2>}\n+ {rightMapTitle && <h2 css={rightTitleStyle}>{rightMapTitle}</h2>}\n{showDivider && <div css={divider} />}\n<div css={sliderWrapper}>\n<CompareSlider\n@@ -127,8 +142,10 @@ ComparisonMap.propTypes = {\ninitialViewport: shape({}),\nleftMap: node.isRequired,\nleftMapTitle: string,\n+ leftTitleColor: string,\nrightMap: node.isRequired,\nrightMapTitle: string,\n+ rightTitleColor: string,\nshowDivider: bool,\nsliderStartPosition: number\n};\n@@ -136,7 +153,9 @@ ComparisonMap.propTypes = {\nComparisonMap.defaultProps = {\nheight: 550,\nleftMapTitle: \"\",\n+ leftTitleColor: \"black\",\nrightMapTitle: \"\",\n+ rightTitleColor: \"black\",\nshowDivider: true,\nsliderStartPosition: 50\n};\n"
    },
    {
        "org_diff": "diff --git a/packages/shared/forks/ReactFeatureFlags.native-oss.js b/a/packages/shared/forks/ReactFeatureFlags.native-oss.js @@ -52,7 +52,6 @@ export const enableCacheElement = __NEXT_RN_MAJOR__;\n export const enableTaint = __NEXT_RN_MAJOR__;\n export const enableUnifiedSyncLane = __NEXT_RN_MAJOR__;\n export const enableFizzExternalRuntime = __NEXT_RN_MAJOR__; // DOM-only\n-export const disableJavaScriptURLs = __NEXT_RN_MAJOR__; // DOM-only\n export const enableBinaryFlight = __NEXT_RN_MAJOR__; // DOM-only\n export const enableCustomElementPropertySupport = __NEXT_RN_MAJOR__; // DOM-only\n export const enableServerComponentKeys = __NEXT_RN_MAJOR__;",
        "org_msg": "Remove orphaned disableJavaScriptURLs reference (#28660)",
        "sim_msg": "change dialog to update in test",
        "sim_diff": "diff --git a/test/generator-base-private.spec.js b/test/generator-base-private.spec.js @@ -12,13 +12,13 @@ describe('Generator Base Private', () => {\nconst entityFolderName = 'entityFolderName';\nconst entityFileName = 'entityFileName';\nconst content =\n- `|export * from './${entityFolderName}/${entityFileName}-dialog.component';\n+ `|export * from './${entityFolderName}/${entityFileName}-update.component';\n|export * from './${entityFolderName}/${entityFileName}-delete-dialog.component';\n|export * from './${entityFolderName}/${entityFileName}-detail.component';\n|export * from './${entityFolderName}/${entityFileName}.component';\n|export * from './${entityFolderName}/${entityFileName}.state';`;\nconst out =\n-`export * from './entityFolderName/entityFileName-dialog.component';\n+`export * from './entityFolderName/entityFileName-update.component';\nexport * from './entityFolderName/entityFileName-delete-dialog.component';\nexport * from './entityFolderName/entityFileName-detail.component';\nexport * from './entityFolderName/entityFileName.component';\n"
    },
    {
        "org_diff": "diff --git a/packages/react-dom-bindings/src/shared/isUnitlessNumber.js b/a/packages/react-dom-bindings/src/shared/isUnitlessNumber.js @@ -46,7 +46,6 @@ const unitlessNumbers = new Set([\n   'tabSize',\n   'widows',\n   'zIndex',\n-  'zoom',\n   'fillOpacity', // SVG-related properties\n   'floodOpacity',\n   'stopOpacity',\n@@ -61,7 +60,6 @@ const unitlessNumbers = new Set([\n   'MozLineClamp',\n   'msAnimationIterationCount',\n   'msFlex',\n-  'msZoom',\n   'msFlexGrow',\n   'msFlexNegative',\n   'msFlexOrder',",
        "org_msg": "Remove zoom from special cases list (#26631)\n\nLooks like [it's getting removed\r\nanyway](https://groups.google.com/a/chromium.org/g/blink-dev/c/V7q43bgutbo/m/-7jneTl8CQAJ?pli=1).\r\n\r\nMaybe should wait for a major though.",
        "sim_msg": "fix: token KEY number formatting",
        "sim_diff": "diff --git a/src/renderer/marketplace/incorporation/common/program-price.jsx b/src/renderer/marketplace/incorporation/common/program-price.jsx import React from 'react';\n-const formatNumber = (number) => {\n- let splitNum = number.toString().split('.');\n+const formatNumber = number => {\n+ // 4 decimal places for KEY values ?\n+ const numeric = Math.abs(number).toFixed(4);\n+ let splitNum = numeric.split('.');\n// Format number with thousands separator\nsplitNum[0] = splitNum[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\nreturn splitNum.join('.');\n-}\n+};\nconst ProgramPrice = props => {\nconst { price, rate, label } = props;\n"
    },
    {
        "org_diff": "diff --git a/packages/react-dom/src/client/ReactDOMLegacy.js b/a/packages/react-dom/src/client/ReactDOMLegacy.js @@ -396,6 +396,14 @@ export function unstable_renderSubtreeIntoContainer(\n }\n \n export function unmountComponentAtNode(container: Container): boolean {\n+  if (disableLegacyMode) {\n+    if (__DEV__) {\n+      console.error(\n+        'unmountComponentAtNode is no longer supported in React 18. Use root.unmount() instead.',\n+      );\n+    }\n+    throw new Error('ReactDOM: Unsupported Legacy Mode API.');\n+  }\n   if (!isValidContainerLegacy(container)) {\n     throw new Error('Target container is not a DOM element.');\n   }",
        "org_msg": "Remove unmountComponentAtNode outside of legacy mode (#28650)",
        "sim_msg": "[pgce] fix (layoutFixer): use react class instead of function",
        "sim_diff": "diff --git a/packages/gallery/src/components/layoutFixer/layoutFixer.js b/packages/gallery/src/components/layoutFixer/layoutFixer.js import React from 'react';\n-export const LayoutFixer = (props) => {\n- // console.log('[LAYOUT FIXER] rendering', isPrerenderMode(), props);\n- return props.layoutFixerBundleUrl ? (\n+export class LayoutFixer extends React.Component {\n+ render() {\n+ return this.props.layoutFixerBundleUrl ? (\n<div\n- id={'layout-fixer-' + props.domId}\n- key={'layout-fixer-' + props.domId}\n+ id={'layout-fixer-' + this.props.domId}\n+ key={'layout-fixer-' + this.props.domId}\nstyle={{ display: 'none' }}\n>\n- <style id={'layout-fixer-style-' + props.domId}></style>\n- {props.isPrerenderMode ? (\n+ <style id={'layout-fixer-style-' + this.props.domId}></style>\n+ {this.props.isPrerenderMode ? (\n<>\n- {props.layoutFixerScriptType === 'preload' && (\n- <link rel=\"preload\" href={props.layoutFixerBundleUrl} as=\"script\" />\n+ {this.props.layoutFixerScriptType === 'preload' && (\n+ <link\n+ rel=\"preload\"\n+ href={this.props.layoutFixerBundleUrl}\n+ as=\"script\"\n+ />\n)}\n<script\ndangerouslySetInnerHTML={{\n__html: `console.log(\"[LAYOUT FIXER] Start (first script loaded)\")`,\n}}\n></script>\n- {props.layoutFixerScriptType === 'async' ||\n- (props.layoutFixerScriptType === 'preload' && (\n+ {this.props.layoutFixerScriptType === 'async' ||\n+ (this.props.layoutFixerScriptType === 'preload' && (\n<script\nasync\ntype=\"module\"\n- src={props.layoutFixerBundleUrl}\n+ src={this.props.layoutFixerBundleUrl}\n></script>\n))}\n- {props.layoutFixerScriptType === 'defer' && (\n- <script defer src={props.layoutFixerBundleUrl}></script>\n+ {this.props.layoutFixerScriptType === 'defer' && (\n+ <script defer src={this.props.layoutFixerBundleUrl}></script>\n)}\n- {props.layoutFixerScriptType !== 'async' &&\n- props.layoutFixerScriptType !== 'defer' &&\n- props.layoutFixerScriptType !== 'preload' && (\n- <script src={props.layoutFixerBundleUrl}></script>\n+ {this.props.layoutFixerScriptType !== 'async' &&\n+ this.props.layoutFixerScriptType !== 'defer' &&\n+ this.props.layoutFixerScriptType !== 'preload' && (\n+ <script src={this.props.layoutFixerBundleUrl}></script>\n)}\n<layout-fixer\n- domId={props.domId}\n- items={JSON.stringify(props.items)}\n- styles={JSON.stringify(props.styles)}\n+ domId={this.props.domId}\n+ items={JSON.stringify(this.props.items)}\n+ styles={JSON.stringify(this.props.styles)}\n></layout-fixer>\n</>\n) : null}\n</div>\n) : null;\n-};\n+ }\n+}\n"
    },
    {
        "org_diff": "diff --git a/CHANGELOG-canary.md b/a/CHANGELOG-canary.md @@ -1,3 +1,8 @@\n+## March 22, 2024 (18.3.0-canary-670811593-20240322)\n+\n+## React\n+- Added `useActionState` to replace `useFormState` and added `pending` value ([#28491](https://github.com/facebook/react/pull/28491)).\n+\n ## October 5, 2023 (18.3.0-canary-546178f91-20231005)\n \n ### React",
        "org_msg": "Add useActionState to CHANGELOG-canary.md (#28632)\n\nCo-authored-by: Sébastien Lorber <slorber@users.noreply.github.com>",
        "sim_msg": "Fix weird merge conflict issue.",
        "sim_diff": "diff --git a/assets/js/components/Header.stories.js b/assets/js/components/Header.stories.js @@ -29,7 +29,7 @@ import Header from './Header';\nimport DateRangeSelector from './DateRangeSelector';\nimport HelpMenu from './help/HelpMenu';\nimport HelpMenuLink from './help/HelpMenuLink';\n-import UserInputSuccessNotification from './notifications/UserInputSuccessNotification';\n+import UserInputSuccessBannerNotification from './notifications/UserInputSuccessBannerNotification';\nimport Null from './Null';\nimport {\ncreateTestRegistry,\n@@ -95,7 +95,7 @@ HeaderWithCustomHelpMenuLinks.args = {\nexport const HeaderWithSubHeader = Template.bind( {} );\nHeaderWithSubHeader.storyName = 'Plugin Header with Sub Header';\nHeaderWithSubHeader.args = {\n- subHeader: <UserInputSuccessNotification />,\n+ subHeader: <UserInputSuccessBannerNotification />,\n};\nexport const HeaderWithNullSubHeader = Template.bind( {} );\n"
    },
    {
        "org_diff": "diff --git a/scripts/rollup/build-all-release-channels.js b/a/scripts/rollup/build-all-release-channels.js @@ -158,18 +158,16 @@ function processStable(buildDir) {\n   }\n \n   if (fs.existsSync(buildDir + '/facebook-www')) {\n-    const hash = crypto.createHash('sha1');\n     for (const fileName of fs.readdirSync(buildDir + '/facebook-www').sort()) {\n       const filePath = buildDir + '/facebook-www/' + fileName;\n       const stats = fs.statSync(filePath);\n       if (!stats.isDirectory()) {\n-        hash.update(fs.readFileSync(filePath));\n         fs.renameSync(filePath, filePath.replace('.js', '.classic.js'));\n       }\n     }\n     updatePlaceholderReactVersionInCompiledArtifacts(\n       buildDir + '/facebook-www',\n-      ReactVersion + '-www-classic-' + hash.digest('hex').slice(0, 8)\n+      ReactVersion + '-www-classic-%FILEHASH%'\n     );\n   }\n \n@@ -224,18 +222,16 @@ function processExperimental(buildDir, version) {\n   }\n \n   if (fs.existsSync(buildDir + '/facebook-www')) {\n-    const hash = crypto.createHash('sha1');\n     for (const fileName of fs.readdirSync(buildDir + '/facebook-www').sort()) {\n       const filePath = buildDir + '/facebook-www/' + fileName;\n       const stats = fs.statSync(filePath);\n       if (!stats.isDirectory()) {\n-        hash.update(fs.readFileSync(filePath));\n         fs.renameSync(filePath, filePath.replace('.js', '.modern.js'));\n       }\n     }\n     updatePlaceholderReactVersionInCompiledArtifacts(\n       buildDir + '/facebook-www',\n-      ReactVersion + '-www-modern-' + hash.digest('hex').slice(0, 8)\n+      ReactVersion + '-www-modern-%FILEHASH%'\n     );\n   }\n ",
        "org_msg": "Switch facebook-www build version to file content hash (#28633)\n\nUnifies the React version string pattern with RN just to simplify the\r\nbuild script a tiny bit and not have 2 mechanisms for the Meta-internal\r\nbuild.",
        "sim_msg": "feat(ui): Modern mode assets",
        "sim_diff": "diff --git a/ui/build/script.build.javascript.js b/ui/build/script.build.javascript.js @@ -19,9 +19,13 @@ const bubleConfig = {\nobjectAssign: 'Object.assign'\n}\n-const rollupPlugins = [\n+const rollupPluginsModern = [\nnodeResolve(),\n- json(),\n+ json()\n+]\n+\n+const rollupPluginsLegacy = [\n+ ...rollupPluginsModern,\nbuble(bubleConfig)\n]\n@@ -36,7 +40,11 @@ const builds = [\nformat: 'es'\n}\n},\n- build: { minified: true, minExt: false }\n+ build: {\n+ minified: true,\n+ minExt: false,\n+ modern: true\n+ }\n},\n{\nrollup: {\n@@ -50,7 +58,8 @@ const builds = [\n},\nbuild: {\nminified: true,\n- minExt: false\n+ minExt: false,\n+ modern: true\n}\n},\n{\n@@ -63,7 +72,10 @@ const builds = [\nformat: 'es'\n}\n},\n- build: { minified: true, minExt: false }\n+ build: {\n+ minified: true,\n+ minExt: false\n+ }\n},\n{\nrollup: {\n@@ -75,7 +87,9 @@ const builds = [\nformat: 'umd'\n}\n},\n- build: { minified: true }\n+ build: {\n+ minified: true\n+ }\n},\n{\nrollup: {\n@@ -91,6 +105,22 @@ const builds = [\nunminified: true,\nminified: true\n}\n+ },\n+ {\n+ rollup: {\n+ input: {\n+ input: resolve(`src/index.umd.js`)\n+ },\n+ output: {\n+ file: resolve(`dist/quasar.umd.modern.js`),\n+ format: 'umd'\n+ }\n+ },\n+ build: {\n+ unminified: true,\n+ minified: true,\n+ modern: true\n+ }\n}\n]\n@@ -126,7 +156,9 @@ function build (builds) {\n}\nfunction genConfig (opts) {\n- opts.rollup.input.plugins = rollupPlugins\n+ opts.rollup.input.plugins = opts.build.modern === true\n+ ? rollupPluginsModern\n+ : rollupPluginsLegacy\nopts.rollup.input.external = opts.rollup.input.external || []\nopts.rollup.input.external.push('vue')\n"
    },
    {
        "org_diff": "diff --git a/packages/react-reconciler/src/__tests__/ReactSuspense-test.internal.js b/a/packages/react-reconciler/src/__tests__/ReactSuspense-test.internal.js @@ -289,6 +289,59 @@ describe('ReactSuspense', () => {\n     expect(container.textContent).toEqual('AB');\n   });\n \n+  it('pushes out siblings that render faster than throttle', async () => {\n+    function Foo() {\n+      Scheduler.log('Foo');\n+      return (\n+        <Suspense fallback={<Text text=\"Loading...\" />}>\n+          <AsyncText text=\"A\" ms={290} />\n+          <Suspense fallback={<Text text=\"Loading more...\" />}>\n+            <AsyncText text=\"B\" ms={30} />\n+          </Suspense>\n+        </Suspense>\n+      );\n+    }\n+\n+    setTimeout(async () => {\n+      // TODO: this is dumb, but AsyncText isn't timer based after the act changes.\n+      // Pretend that this is the start of the sibling suspending.\n+      // In a real test, the timer would start when we render B.\n+      setTimeout(async () => {\n+        resolveText('B');\n+      }, 30);\n+\n+      resolveText('A');\n+    }, 290);\n+\n+    // Render an empty shell\n+    const root = ReactTestRenderer.create(<Foo />, {\n+      isConcurrent: true,\n+    });\n+\n+    await waitForAll(['Foo', 'Suspend! [A]', 'Loading...']);\n+    expect(root).toMatchRenderedOutput('Loading...');\n+\n+    // Now resolve A\n+    jest.advanceTimersByTime(290);\n+    await waitFor(['A']);\n+    expect(root).toMatchRenderedOutput('Loading...');\n+\n+    // B starts loading. Parent boundary is in throttle.\n+    // Still shows parent loading under throttle\n+    jest.advanceTimersByTime(10);\n+    await waitForAll(['Suspend! [B]', 'Loading more...']);\n+    expect(root).toMatchRenderedOutput('Loading...');\n+\n+    // !! B could have finished before the throttle, but we show a fallback.\n+    // !! Pushing out the 30ms fetch for B to 300ms.\n+    jest.advanceTimersByTime(300);\n+    await waitFor(['B']);\n+    expect(root).toMatchRenderedOutput('ALoading more...');\n+\n+    await act(() => {});\n+    expect(root).toMatchRenderedOutput('AB');\n+  });\n+\n   it('does not throttle fallback committing for too long', async () => {\n     function Foo() {\n       Scheduler.log('Foo');",
        "org_msg": "Add test for throttling suspended siblings (#28361)\n\n# Overview\r\n\r\nAdds a test to show the combination of the new throttling behavior and\r\nnot pre-rendering siblings results in pushing out content that could\r\nhave rendered much faster.\r\n\r\n- Without the new throttling, the sibling content would render in 30ms.\r\n- Without removing pre-rendering, the sibling content would render in\r\n0ms.\r\n- With both, the sibling content takes 600ms.\r\n\r\n## Example\r\n\r\n\r\nhttps://github.com/facebook/react/assets/2440089/abd62dc4-93f9-4b7b-a5aa-b795827c1a3a",
        "sim_msg": "rm non functioning tests",
        "sim_diff": "diff --git a/packages/transportation/src/components/App/index.test.js b/packages/transportation/src/components/App/index.test.js -import React from 'react';\n-import { shallow } from 'enzyme';\n-import App from './index';\n-\ndescribe('<App />', () => {\n- it('should render its children', () => {\n- const children = (<h1>Test</h1>);\n- const wrapper = shallow(\n- <App>\n- {children}\n- </App>,\n- );\n- expect(wrapper.contains(children)).to.eql(true);\n+ it('does not have have functioning tests...', () => {\n+ expect(true).to.eql(true);\n});\n});\n"
    },
    {
        "org_diff": "diff --git a/yarn.lock b/a/yarn.lock @@ -15791,9 +15791,9 @@ webpack-cli@^5.1.1:\n     webpack-merge \"^5.7.3\"\n \n webpack-dev-middleware@^5.3.1:\n-  version \"5.3.3\"\n-  resolved \"https://registry.yarnpkg.com/webpack-dev-middleware/-/webpack-dev-middleware-5.3.3.tgz#efae67c2793908e7311f1d9b06f2a08dcc97e51f\"\n-  integrity sha512-hj5CYrY0bZLB+eTO+x/j67Pkrquiy7kWepMHmUMoPsmcUaeEnQJqFzHJOyxgWlq746/wUuA64p9ta34Kyb01pA==\n+  version \"5.3.4\"\n+  resolved \"https://registry.yarnpkg.com/webpack-dev-middleware/-/webpack-dev-middleware-5.3.4.tgz#eb7b39281cbce10e104eb2b8bf2b63fce49a3517\"\n+  integrity sha512-BVdTqhhs+0IfoeAf7EoH5WE+exCmqGerHfDM0IL096Px60Tq2Mn9MAbnaGUe6HiMa41KMCYF19gyzZmBcq/o4Q==\n   dependencies:\n     colorette \"^2.0.10\"\n     memfs \"^3.4.3\"",
        "org_msg": "Bump webpack-dev-middleware from 5.3.3 to 5.3.4 (#28621)\n\nBumps\r\n[webpack-dev-middleware](https://github.com/webpack/webpack-dev-middleware)\r\nfrom 5.3.3 to 5.3.4.\r\n<details>\r\n<summary>Release notes</summary>\r\n<p><em>Sourced from <a\r\nhref=\"https://github.com/webpack/webpack-dev-middleware/releases\">webpack-dev-middleware's\r\nreleases</a>.</em></p>\r\n<blockquote>\r\n<h2>v5.3.4</h2>\r\n<h3><a\r\nhref=\"https://github.com/webpack/webpack-dev-middleware/compare/v5.3.3...v5.3.4\">5.3.4</a>\r\n(2024-03-20)</h3>\r\n<h3>Bug Fixes</h3>\r\n<ul>\r\n<li><strong>security:</strong> do not allow to read files above (<a\r\nhref=\"https://redirect.github.com/webpack/webpack-dev-middleware/issues/1779\">#1779</a>)\r\n(<a\r\nhref=\"https://github.com/webpack/webpack-dev-middleware/commit/189c4ac7d2344ec132a4689e74dc837ec5be0132\">189c4ac</a>)</li>\r\n</ul>\r\n</blockquote>\r\n</details>\r\n<details>\r\n<summary>Changelog</summary>\r\n<p><em>Sourced from <a\r\nhref=\"https://github.com/webpack/webpack-dev-middleware/blob/v5.3.4/CHANGELOG.md\">webpack-dev-middleware's\r\nchangelog</a>.</em></p>\r\n<blockquote>\r\n<h3><a\r\nhref=\"https://github.com/webpack/webpack-dev-middleware/compare/v5.3.3...v5.3.4\">5.3.4</a>\r\n(2024-03-20)</h3>\r\n<h3>Bug Fixes</h3>\r\n<ul>\r\n<li><strong>security:</strong> do not allow to read files above (<a\r\nhref=\"https://redirect.github.com/webpack/webpack-dev-middleware/issues/1779\">#1779</a>)\r\n(<a\r\nhref=\"https://github.com/webpack/webpack-dev-middleware/commit/189c4ac7d2344ec132a4689e74dc837ec5be0132\">189c4ac</a>)</li>\r\n</ul>\r\n</blockquote>\r\n</details>\r\n<details>\r\n<summary>Commits</summary>\r\n<ul>\r\n<li><a\r\nhref=\"https://github.com/webpack/webpack-dev-middleware/commit/86071ead69e946ada25497d3e281923e885229a4\"><code>86071ea</code></a>\r\nchore(release): 5.3.4</li>\r\n<li><a\r\nhref=\"https://github.com/webpack/webpack-dev-middleware/commit/189c4ac7d2344ec132a4689e74dc837ec5be0132\"><code>189c4ac</code></a>\r\nfix(security): do not allow to read files above (<a\r\nhref=\"https://redirect.github.com/webpack/webpack-dev-middleware/issues/1779\">#1779</a>)</li>\r\n<li>See full diff in <a\r\nhref=\"https://github.com/webpack/webpack-dev-middleware/compare/v5.3.3...v5.3.4\">compare\r\nview</a></li>\r\n</ul>\r\n</details>\r\n<br />\r\n\r\n\r\n[![Dependabot compatibility\r\nscore](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=webpack-dev-middleware&package-manager=npm_and_yarn&previous-version=5.3.3&new-version=5.3.4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\r\n\r\nDependabot will resolve any conflicts with this PR as long as you don't\r\nalter it yourself. You can also trigger a rebase manually by commenting\r\n`@dependabot rebase`.\r\n\r\n[//]: # (dependabot-automerge-start)\r\n[//]: # (dependabot-automerge-end)\r\n\r\n---\r\n\r\n<details>\r\n<summary>Dependabot commands and options</summary>\r\n<br />\r\n\r\nYou can trigger Dependabot actions by commenting on this PR:\r\n- `@dependabot rebase` will rebase this PR\r\n- `@dependabot recreate` will recreate this PR, overwriting any edits\r\nthat have been made to it\r\n- `@dependabot merge` will merge this PR after your CI passes on it\r\n- `@dependabot squash and merge` will squash and merge this PR after\r\nyour CI passes on it\r\n- `@dependabot cancel merge` will cancel a previously requested merge\r\nand block automerging\r\n- `@dependabot reopen` will reopen this PR if it is closed\r\n- `@dependabot close` will close this PR and stop Dependabot recreating\r\nit. You can achieve the same result by closing it manually\r\n- `@dependabot show <dependency name> ignore conditions` will show all\r\nof the ignore conditions of the specified dependency\r\n- `@dependabot ignore this major version` will close this PR and stop\r\nDependabot creating any more for this major version (unless you reopen\r\nthe PR or upgrade to it yourself)\r\n- `@dependabot ignore this minor version` will close this PR and stop\r\nDependabot creating any more for this minor version (unless you reopen\r\nthe PR or upgrade to it yourself)\r\n- `@dependabot ignore this dependency` will close this PR and stop\r\nDependabot creating any more for this dependency (unless you reopen the\r\nPR or upgrade to it yourself)\r\nYou can disable automated security fix PRs for this repo from the\r\n[Security Alerts\r\npage](https://github.com/facebook/react/network/alerts).\r\n\r\n</details>\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>",
        "sim_msg": "docs(release): 3.4.0",
        "sim_diff": "diff --git a/CHANGELOG.md b/CHANGELOG.md All notable changes to this project will be documented in this file. See [standard-version](https://github.com/conventional-changelog/standard-version) for commit guidelines.\n+# [3.4.0](https://github.com/webpack/webpack-dev-middleware/compare/v3.3.0...v3.4.0) (2018-09-24)\n+\n+\n+### Bug Fixes\n+\n+* **index:** don't modify the default behavior for `unhandledRejection` ([#340](https://github.com/webpack/webpack-dev-middleware/issues/340)) ([f0a8e3e](https://github.com/webpack/webpack-dev-middleware/commit/f0a8e3e))\n+* **middleware:** replace `url-join` with `path.posix.join` ([#334](https://github.com/webpack/webpack-dev-middleware/issues/334)) ([d75802b](https://github.com/webpack/webpack-dev-middleware/commit/d75802b))\n+\n+\n+\n<a name=\"3.3.0\"></a>\n# [3.3.0](https://github.com/webpack/webpack-dev-middleware/compare/v3.2.0...v3.3.0) (2018-09-10)\n"
    },
    {
        "org_diff": "diff --git a/packages/react-devtools-shell/src/app/InspectableElements/Contexts.js b/a/packages/react-devtools-shell/src/app/InspectableElements/Contexts.js @@ -273,15 +273,46 @@ class ModernClassContextConsumerWithUpdates extends Component<any> {\n   }\n }\n \n+type LegacyContextState = {\n+  supportsLegacyContext: boolean,\n+};\n+class LegacyContext extends React.Component {\n+  state: LegacyContextState = {supportsLegacyContext: true};\n+\n+  static getDerivedStateFromError(error: any): LegacyContextState {\n+    return {supportsLegacyContext: false};\n+  }\n+\n+  componentDidCatch(error: any, info: any) {\n+    console.info(\n+      'Assuming legacy context is not supported in this React version due to: ',\n+      error,\n+      info,\n+    );\n+  }\n+\n+  render(): React.Node {\n+    if (!this.state.supportsLegacyContext) {\n+      return <p>This version of React does not support legacy context.</p>;\n+    }\n+\n+    return (\n+      <React.Fragment>\n+        <LegacyContextProvider>\n+          <LegacyContextConsumer />\n+        </LegacyContextProvider>\n+        <LegacyContextProviderWithUpdates />\n+      </React.Fragment>\n+    );\n+  }\n+}\n+\n export default function Contexts(): React.Node {\n   return (\n     <div>\n       <h1>Contexts</h1>\n       <ul>\n-        <LegacyContextProvider>\n-          <LegacyContextConsumer />\n-        </LegacyContextProvider>\n-        <LegacyContextProviderWithUpdates />\n+        <LegacyContext />\n         <ModernContext.Provider value={contextData}>\n           <ModernContext.Consumer>\n             {(value: $FlowFixMe) =>",
        "org_msg": "Guard against legacy context not being supported in DevTools fixture (#28596)",
        "sim_msg": "move `fileModifiedMap` to context (fixes",
        "sim_diff": "diff --git a/src/jit/lib/setupContextUtils.js b/src/jit/lib/setupContextUtils.js @@ -301,9 +301,7 @@ function buildPluginApi(tailwindConfig, context, { variantList, variantMap, offs\n}\n}\n-let fileModifiedMap = new Map()\n-\n-function trackModified(files) {\n+function trackModified(files, context) {\nlet changed = false\nfor (let file of files) {\n@@ -313,11 +311,11 @@ function trackModified(files) {\nlet pathname = parsed.href.replace(parsed.hash, '').replace(parsed.search, '')\nlet newModified = fs.statSync(decodeURIComponent(pathname)).mtimeMs\n- if (!fileModifiedMap.has(file) || newModified > fileModifiedMap.get(file)) {\n+ if (!context.fileModifiedMap.has(file) || newModified > context.fileModifiedMap.get(file)) {\nchanged = true\n}\n- fileModifiedMap.set(file, newModified)\n+ context.fileModifiedMap.set(file, newModified)\n}\nreturn changed\n@@ -507,24 +505,26 @@ export function getContext(\nregisterDependency(file)\n}\n- let contextDependenciesChanged = trackModified([...contextDependencies])\n-\nenv.DEBUG && console.log('Source path:', sourcePath)\n- if (!contextDependenciesChanged) {\n- // If this file already has a context in the cache and we don't need to\n- // reset the context, return the cached context.\n- if (isConfigFile && contextMap.has(sourcePath)) {\n- return [contextMap.get(sourcePath), false]\n- }\n+ let existingContext\n- // If the config used already exists in the cache, return that.\n- if (configContextMap.has(tailwindConfigHash)) {\n+ if (isConfigFile && contextMap.has(sourcePath)) {\n+ existingContext = contextMap.get(sourcePath)\n+ } else if (configContextMap.has(tailwindConfigHash)) {\nlet context = configContextMap.get(tailwindConfigHash)\ncontextSourcesMap.get(context).add(sourcePath)\ncontextMap.set(sourcePath, context)\n- return [context, false]\n+ existingContext = context\n+ }\n+\n+ // If there's already a context in the cache and we don't need to\n+ // reset the context, return the cached context.\n+ if (existingContext) {\n+ let contextDependenciesChanged = trackModified([...contextDependencies], existingContext)\n+ if (!contextDependenciesChanged) {\n+ return [existingContext, false]\n}\n}\n@@ -565,7 +565,8 @@ export function getContext(\n)\n)\n),\n- fileModifiedMap: new Map(),\n+ // Carry over the existing modified map if we have one.\n+ fileModifiedMap: new Map(existingContext ? existingContext.fileModifiedMap : undefined),\n// ---\nruleCache: new Set(), // Hit\nclassCache: new Map(), // Hit\n@@ -581,6 +582,11 @@ export function getContext(\nstylesheetCache: null, // Hit\n}\n+ if (!existingContext) {\n+ // If we didn't have an existing modified map then populate it now.\n+ trackModified([...contextDependencies], context)\n+ }\n+\n// ---\n// Update all context tracking state\n"
    },
    {
        "org_diff": "diff --git a/.github/stale.yml b/a/.github/stale.yml @@ -12,6 +12,7 @@ exemptLabels:\n   - \"Type: Discussion\"\n   - \"Type: Needs Investigation\"\n   - \"Type: Regression\"\n+  - \"Type: Feature Request\"\n # Label to use when marking an issue as stale\n staleLabel: \"Resolution: Stale\"\n issues:",
        "org_msg": "Add Type: Feature Request to stalebot ignore (#28625)\n\nPrevent issues like https://github.com/facebook/react/issues/12525 from\r\nclosing due to inactivity.",
        "sim_msg": "chore: change stale bot label",
        "sim_diff": "diff --git a/.github/stale.yml b/.github/stale.yml @@ -7,7 +7,7 @@ exemptLabels:\n- pinned\n- security\n# Label to use when marking an issue as stale\n-staleLabel: wontfix\n+staleLabel: 'status: stale'\n# Comment to post when marking an issue as stale. Set to `false` to disable\nmarkComment: >\nThis issue has been automatically marked as stale because it has not had\n"
    },
    {
        "org_diff": "diff --git a/scripts/rollup/build-all-release-channels.js b/a/scripts/rollup/build-all-release-channels.js @@ -239,6 +239,18 @@ function processExperimental(buildDir, version) {\n     );\n   }\n \n+  [\n+    buildDir + '/react-native/implementations/',\n+    buildDir + '/facebook-react-native/',\n+  ].forEach(reactNativeBuildDir => {\n+    if (fs.existsSync(reactNativeBuildDir)) {\n+      updatePlaceholderReactVersionInCompiledArtifacts(\n+        reactNativeBuildDir,\n+        ReactVersion + '-' + canaryChannelLabel + '-%FILEHASH%'\n+      );\n+    }\n+  });\n+\n   // Update remaining placeholders with canary channel version\n   updatePlaceholderReactVersionInCompiledArtifacts(\n     buildDir,",
        "org_msg": "Also apply content hash for experimental files (#28590)\n\nAlso apply content hash for experimental files\r\n\r\nIn #28582 I missed that experimental files have a copy of this build\r\nfunction setting the version strings.",
        "sim_msg": "feat(ui): Modern mode assets",
        "sim_diff": "diff --git a/ui/build/script.build.javascript.js b/ui/build/script.build.javascript.js @@ -19,9 +19,13 @@ const bubleConfig = {\nobjectAssign: 'Object.assign'\n}\n-const rollupPlugins = [\n+const rollupPluginsModern = [\nnodeResolve(),\n- json(),\n+ json()\n+]\n+\n+const rollupPluginsLegacy = [\n+ ...rollupPluginsModern,\nbuble(bubleConfig)\n]\n@@ -36,7 +40,11 @@ const builds = [\nformat: 'es'\n}\n},\n- build: { minified: true, minExt: false }\n+ build: {\n+ minified: true,\n+ minExt: false,\n+ modern: true\n+ }\n},\n{\nrollup: {\n@@ -50,7 +58,8 @@ const builds = [\n},\nbuild: {\nminified: true,\n- minExt: false\n+ minExt: false,\n+ modern: true\n}\n},\n{\n@@ -63,7 +72,10 @@ const builds = [\nformat: 'es'\n}\n},\n- build: { minified: true, minExt: false }\n+ build: {\n+ minified: true,\n+ minExt: false\n+ }\n},\n{\nrollup: {\n@@ -75,7 +87,9 @@ const builds = [\nformat: 'umd'\n}\n},\n- build: { minified: true }\n+ build: {\n+ minified: true\n+ }\n},\n{\nrollup: {\n@@ -91,6 +105,22 @@ const builds = [\nunminified: true,\nminified: true\n}\n+ },\n+ {\n+ rollup: {\n+ input: {\n+ input: resolve(`src/index.umd.js`)\n+ },\n+ output: {\n+ file: resolve(`dist/quasar.umd.modern.js`),\n+ format: 'umd'\n+ }\n+ },\n+ build: {\n+ unminified: true,\n+ minified: true,\n+ modern: true\n+ }\n}\n]\n@@ -126,7 +156,9 @@ function build (builds) {\n}\nfunction genConfig (opts) {\n- opts.rollup.input.plugins = rollupPlugins\n+ opts.rollup.input.plugins = opts.build.modern === true\n+ ? rollupPluginsModern\n+ : rollupPluginsLegacy\nopts.rollup.input.external = opts.rollup.input.external || []\nopts.rollup.input.external.push('vue')\n"
    },
    {
        "org_diff": "diff --git a/scripts/rollup/build-all-release-channels.js b/a/scripts/rollup/build-all-release-channels.js @@ -173,25 +173,17 @@ function processStable(buildDir) {\n     );\n   }\n \n-  const reactNativeBuildDir = buildDir + '/react-native/implementations/';\n-  if (fs.existsSync(reactNativeBuildDir)) {\n-    const hash = crypto.createHash('sha1');\n-    for (const fileName of fs.readdirSync(reactNativeBuildDir).sort()) {\n-      const filePath = reactNativeBuildDir + fileName;\n-      const stats = fs.statSync(filePath);\n-      if (!stats.isDirectory()) {\n-        hash.update(fs.readFileSync(filePath));\n-      }\n+  [\n+    buildDir + '/react-native/implementations/',\n+    buildDir + '/facebook-react-native/',\n+  ].forEach(reactNativeBuildDir => {\n+    if (fs.existsSync(reactNativeBuildDir)) {\n+      updatePlaceholderReactVersionInCompiledArtifacts(\n+        reactNativeBuildDir,\n+        ReactVersion + '-' + canaryChannelLabel + '-%FILEHASH%'\n+      );\n     }\n-    updatePlaceholderReactVersionInCompiledArtifacts(\n-      reactNativeBuildDir,\n-      ReactVersion +\n-        '-' +\n-        canaryChannelLabel +\n-        '-' +\n-        hash.digest('hex').slice(0, 8)\n-    );\n-  }\n+  });\n \n   // Update remaining placeholders with canary channel version\n   updatePlaceholderReactVersionInCompiledArtifacts(\n@@ -362,9 +354,11 @@ function updatePlaceholderReactVersionInCompiledArtifacts(\n \n   for (const artifactFilename of artifactFilenames) {\n     const originalText = fs.readFileSync(artifactFilename, 'utf8');\n+    const fileHash = crypto.createHash('sha1');\n+    fileHash.update(originalText);\n     const replacedText = originalText.replaceAll(\n       PLACEHOLDER_REACT_VERSION,\n-      newVersion\n+      newVersion.replace(/%FILEHASH%/g, fileHash.digest('hex').slice(0, 8))\n     );\n     fs.writeFileSync(artifactFilename, replacedText);\n   }",
        "org_msg": "Change to content hash for RN canary VERSION strings (#28582)\n\nWith this change, the different files in RN will have *different*\r\nhashes. This replaces the git hash and means that the file content\r\n(including version) is only updated when the rest of the file content\r\nactually changes. This should remove \"noop\" changes that need to be\r\nsynced that only update the version string.\r\n\r\nA difference to the www implementation here is (and I'd be looking at\r\nupdating www as well if this lands well) that each file has an\r\nindividual hash instead of a combined content hash. This further reduces\r\nthe number of updated files and I couldn't find a reason we need to have\r\nthese in sync. The best I can gather is that this hash is used so folks\r\ndon't directly compare version string and make future updates harder.",
        "sim_msg": "Fix copy paste error of zip-archive",
        "sim_diff": "diff --git a/scripts/buildAndroidSnapshots.js b/scripts/buildAndroidSnapshots.js @@ -129,7 +129,9 @@ const deployLibrary = (packageName, version) => {\ndeployDependency(\n'react-native-zip-archive',\nSKYPICKER_URL,\n- `${rnModulesVersion}.react-native.${reactNativeVersion}`,\n+ `${getDependencyVersion(\n+ 'react-native-zip-archive',\n+ )}.react-native.${reactNativeVersion}`,\n'-SNAPSHOT',\n),\n])\n"
    },
    {
        "org_diff": "diff --git a/packages/react-debug-tools/src/__tests__/ReactHooksInspectionIntegration-test.js b/a/packages/react-debug-tools/src/__tests__/ReactHooksInspectionIntegration-test.js @@ -1244,7 +1244,7 @@ describe('ReactHooksInspectionIntegration', () => {\n         <Context.Provider value=\"provided\">\n           <Foo />\n         </Context.Provider>,\n-        {isConcurrent: true},\n+        {unstable_isConcurrent: true},\n       );\n     });\n     let childFiber = renderer.root.findByType(Foo)._currentFiber();",
        "org_msg": "Fix ReactHooksInspectionIntegration-test (#28577)\n\nResolve conflict between #28508 and #28546",
        "sim_msg": "Add waitForRegistry as return from custom render.",
        "sim_diff": "diff --git a/tests/js/test-utils.js b/tests/js/test-utils.js /**\n* External dependencies\n*/\n-import { render } from '@testing-library/react';\n+import { render, act } from '@testing-library/react';\nimport { renderHook, act as actHook } from '@testing-library/react-hooks';\nimport { Router } from 'react-router-dom';\nimport invariant from 'invariant';\n@@ -16,7 +16,7 @@ import { RegistryProvider } from '@wordpress/data';\n* Internal dependencies\n*/\nimport FeaturesProvider from '../../assets/js/components/FeaturesProvider';\n-import { createTestRegistry } from './utils';\n+import { createTestRegistry, createWaitForRegistry } from './utils';\n// Override `@testing-library/react`'s render method with one that includes\n// our data store.\n@@ -67,6 +67,8 @@ const customRender = ( ui, options = {} ) => {\n);\n}\n+ const waitForRegistry = createWaitForRegistry( registry );\n+\nconst result = render( ui, { wrapper: Wrapper, ...renderOptions } );\nconst {\ngetByTestId: getByTestID, // eslint-disable-line sitekit/acronym-case\n@@ -87,6 +89,7 @@ const customRender = ( ui, options = {} ) => {\nqueryByTestID,\nregistry,\nhistory,\n+ waitForRegistry: () => act( waitForRegistry ),\n};\n};\n"
    },
    {
        "org_diff": "diff --git a/fixtures/ssr/yarn.lock b/a/fixtures/ssr/yarn.lock @@ -2771,9 +2771,9 @@ flatten@^1.0.2:\n   integrity sha512-dVsPA/UwQ8+2uoFe5GHtiBMu48dWLTdsuEd7CKGlZlD78r1TTWBvDuFaFGKCo/ZfEr95Uk56vZoX86OsHkUeIg==\n \n follow-redirects@^1.0.0:\n-  version \"1.15.4\"\n-  resolved \"https://registry.yarnpkg.com/follow-redirects/-/follow-redirects-1.15.4.tgz#cdc7d308bf6493126b17ea2191ea0ccf3e535adf\"\n-  integrity sha512-Cr4D/5wlrb0z9dgERpUL3LrmPKVDsETIJhaCMeDfuFYcqa5bldGV6wBsAN6X/vxlXQtFBMrXdXxdL8CbDTGniw==\n+  version \"1.15.6\"\n+  resolved \"https://registry.yarnpkg.com/follow-redirects/-/follow-redirects-1.15.6.tgz#7f815c0cda4249c74ff09e95ef97c23b5fd0399b\"\n+  integrity sha512-wWN62YITEaOpSK584EZXJafH1AGpO8RVgElfkuXbTOrPX4fIfOyEpW/CsiNd8JdYrAoOvafRTOEnvsO++qCqFA==\n \n for-in@^1.0.1, for-in@^1.0.2:\n   version \"1.0.2\"",
        "org_msg": "Bump follow-redirects from 1.15.4 to 1.15.6 in /fixtures/ssr (#28571)\n\nBumps\r\n[follow-redirects](https://github.com/follow-redirects/follow-redirects)\r\nfrom 1.15.4 to 1.15.6.\r\n<details>\r\n<summary>Commits</summary>\r\n<ul>\r\n<li><a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/commit/35a517c5861d79dc8bff7db8626013d20b711b06\"><code>35a517c</code></a>\r\nRelease version 1.15.6 of the npm package.</li>\r\n<li><a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/commit/c4f847f85176991f95ab9c88af63b1294de8649b\"><code>c4f847f</code></a>\r\nDrop Proxy-Authorization across hosts.</li>\r\n<li><a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/commit/8526b4a1b2ab3a2e4044299377df623a661caa76\"><code>8526b4a</code></a>\r\nUse GitHub for disclosure.</li>\r\n<li><a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/commit/b1677ce00110ee50dc5da576751d39b281fc4944\"><code>b1677ce</code></a>\r\nRelease version 1.15.5 of the npm package.</li>\r\n<li><a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/commit/d8914f7982403ea096b39bd594a00ee9d3b7e224\"><code>d8914f7</code></a>\r\nPreserve fragment in responseUrl.</li>\r\n<li>See full diff in <a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/compare/v1.15.4...v1.15.6\">compare\r\nview</a></li>\r\n</ul>\r\n</details>\r\n<br />\r\n\r\n\r\n[![Dependabot compatibility\r\nscore](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=follow-redirects&package-manager=npm_and_yarn&previous-version=1.15.4&new-version=1.15.6)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\r\n\r\nDependabot will resolve any conflicts with this PR as long as you don't\r\nalter it yourself. You can also trigger a rebase manually by commenting\r\n`@dependabot rebase`.\r\n\r\n[//]: # (dependabot-automerge-start)\r\n[//]: # (dependabot-automerge-end)\r\n\r\n---\r\n\r\n<details>\r\n<summary>Dependabot commands and options</summary>\r\n<br />\r\n\r\nYou can trigger Dependabot actions by commenting on this PR:\r\n- `@dependabot rebase` will rebase this PR\r\n- `@dependabot recreate` will recreate this PR, overwriting any edits\r\nthat have been made to it\r\n- `@dependabot merge` will merge this PR after your CI passes on it\r\n- `@dependabot squash and merge` will squash and merge this PR after\r\nyour CI passes on it\r\n- `@dependabot cancel merge` will cancel a previously requested merge\r\nand block automerging\r\n- `@dependabot reopen` will reopen this PR if it is closed\r\n- `@dependabot close` will close this PR and stop Dependabot recreating\r\nit. You can achieve the same result by closing it manually\r\n- `@dependabot show <dependency name> ignore conditions` will show all\r\nof the ignore conditions of the specified dependency\r\n- `@dependabot ignore this major version` will close this PR and stop\r\nDependabot creating any more for this major version (unless you reopen\r\nthe PR or upgrade to it yourself)\r\n- `@dependabot ignore this minor version` will close this PR and stop\r\nDependabot creating any more for this minor version (unless you reopen\r\nthe PR or upgrade to it yourself)\r\n- `@dependabot ignore this dependency` will close this PR and stop\r\nDependabot creating any more for this dependency (unless you reopen the\r\nPR or upgrade to it yourself)\r\nYou can disable automated security fix PRs for this repo from the\r\n[Security Alerts\r\npage](https://github.com/facebook/react/network/alerts).\r\n\r\n</details>\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>",
        "sim_msg": "fix: upgrade yarn lock",
        "sim_diff": "diff --git a/yarn.lock b/yarn.lock @@ -7248,9 +7248,9 @@ flux-standard-action@^2.0.3:\nlodash \"^4.0.0\"\nfollow-redirects@^1.0.0:\n- version \"1.5.8\"\n- resolved \"https://registry.yarnpkg.com/follow-redirects/-/follow-redirects-1.5.8.tgz#1dbfe13e45ad969f813e86c00e5296f525c885a1\"\n- integrity sha512-sy1mXPmv7kLAMKW/8XofG7o9T+6gAjzdZK4AJF6ryqQYUa/hnzgiypoeUecZ53x7XiqKNEpNqLtS97MshW2nxg==\n+ version \"1.5.9\"\n+ resolved \"https://registry.yarnpkg.com/follow-redirects/-/follow-redirects-1.5.9.tgz#c9ed9d748b814a39535716e531b9196a845d89c6\"\n+ integrity sha512-Bh65EZI/RU8nx0wbYF9shkFZlqLP+6WT/5FnA3cE/djNSuKNHJEinGGZgu/cQEkeeb2GdFOgenAmn8qaqYke2w==\ndependencies:\ndebug \"=3.1.0\"\n@@ -14741,7 +14741,7 @@ select-hose@^2.0.0:\n\"selfkey-ui@https://github.com/SelfKeyFoundation/selfkey-ui.git\":\nversion \"1.0.0\"\n- resolved \"https://github.com/SelfKeyFoundation/selfkey-ui.git#5c2fc6523e97602e786471b5b659a5adaac1a103\"\n+ resolved \"https://github.com/SelfKeyFoundation/selfkey-ui.git#17264585a62a10087fcf31da8bbc1204cb095d63\"\ndependencies:\n\"@material-ui/core\" \"^1.3.1\"\n\"@material-ui/icons\" \"^1.1.0\"\n"
    },
    {
        "org_diff": "diff --git a/fixtures/concurrent/time-slicing/yarn.lock b/a/fixtures/concurrent/time-slicing/yarn.lock @@ -3372,9 +3372,9 @@ flatten@^1.0.2:\n   integrity sha512-dVsPA/UwQ8+2uoFe5GHtiBMu48dWLTdsuEd7CKGlZlD78r1TTWBvDuFaFGKCo/ZfEr95Uk56vZoX86OsHkUeIg==\n \n follow-redirects@^1.0.0:\n-  version \"1.15.4\"\n-  resolved \"https://registry.yarnpkg.com/follow-redirects/-/follow-redirects-1.15.4.tgz#cdc7d308bf6493126b17ea2191ea0ccf3e535adf\"\n-  integrity sha512-Cr4D/5wlrb0z9dgERpUL3LrmPKVDsETIJhaCMeDfuFYcqa5bldGV6wBsAN6X/vxlXQtFBMrXdXxdL8CbDTGniw==\n+  version \"1.15.6\"\n+  resolved \"https://registry.yarnpkg.com/follow-redirects/-/follow-redirects-1.15.6.tgz#7f815c0cda4249c74ff09e95ef97c23b5fd0399b\"\n+  integrity sha512-wWN62YITEaOpSK584EZXJafH1AGpO8RVgElfkuXbTOrPX4fIfOyEpW/CsiNd8JdYrAoOvafRTOEnvsO++qCqFA==\n \n for-in@^1.0.1, for-in@^1.0.2:\n   version \"1.0.2\"",
        "org_msg": "Bump follow-redirects from 1.15.4 to 1.15.6 in /fixtures/concurrent/time-slicing (#28572)\n\nBumps\r\n[follow-redirects](https://github.com/follow-redirects/follow-redirects)\r\nfrom 1.15.4 to 1.15.6.\r\n<details>\r\n<summary>Commits</summary>\r\n<ul>\r\n<li><a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/commit/35a517c5861d79dc8bff7db8626013d20b711b06\"><code>35a517c</code></a>\r\nRelease version 1.15.6 of the npm package.</li>\r\n<li><a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/commit/c4f847f85176991f95ab9c88af63b1294de8649b\"><code>c4f847f</code></a>\r\nDrop Proxy-Authorization across hosts.</li>\r\n<li><a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/commit/8526b4a1b2ab3a2e4044299377df623a661caa76\"><code>8526b4a</code></a>\r\nUse GitHub for disclosure.</li>\r\n<li><a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/commit/b1677ce00110ee50dc5da576751d39b281fc4944\"><code>b1677ce</code></a>\r\nRelease version 1.15.5 of the npm package.</li>\r\n<li><a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/commit/d8914f7982403ea096b39bd594a00ee9d3b7e224\"><code>d8914f7</code></a>\r\nPreserve fragment in responseUrl.</li>\r\n<li>See full diff in <a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/compare/v1.15.4...v1.15.6\">compare\r\nview</a></li>\r\n</ul>\r\n</details>\r\n<br />\r\n\r\n\r\n[![Dependabot compatibility\r\nscore](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=follow-redirects&package-manager=npm_and_yarn&previous-version=1.15.4&new-version=1.15.6)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\r\n\r\nDependabot will resolve any conflicts with this PR as long as you don't\r\nalter it yourself. You can also trigger a rebase manually by commenting\r\n`@dependabot rebase`.\r\n\r\n[//]: # (dependabot-automerge-start)\r\n[//]: # (dependabot-automerge-end)\r\n\r\n---\r\n\r\n<details>\r\n<summary>Dependabot commands and options</summary>\r\n<br />\r\n\r\nYou can trigger Dependabot actions by commenting on this PR:\r\n- `@dependabot rebase` will rebase this PR\r\n- `@dependabot recreate` will recreate this PR, overwriting any edits\r\nthat have been made to it\r\n- `@dependabot merge` will merge this PR after your CI passes on it\r\n- `@dependabot squash and merge` will squash and merge this PR after\r\nyour CI passes on it\r\n- `@dependabot cancel merge` will cancel a previously requested merge\r\nand block automerging\r\n- `@dependabot reopen` will reopen this PR if it is closed\r\n- `@dependabot close` will close this PR and stop Dependabot recreating\r\nit. You can achieve the same result by closing it manually\r\n- `@dependabot show <dependency name> ignore conditions` will show all\r\nof the ignore conditions of the specified dependency\r\n- `@dependabot ignore this major version` will close this PR and stop\r\nDependabot creating any more for this major version (unless you reopen\r\nthe PR or upgrade to it yourself)\r\n- `@dependabot ignore this minor version` will close this PR and stop\r\nDependabot creating any more for this minor version (unless you reopen\r\nthe PR or upgrade to it yourself)\r\n- `@dependabot ignore this dependency` will close this PR and stop\r\nDependabot creating any more for this dependency (unless you reopen the\r\nPR or upgrade to it yourself)\r\nYou can disable automated security fix PRs for this repo from the\r\n[Security Alerts\r\npage](https://github.com/facebook/react/network/alerts).\r\n\r\n</details>\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>",
        "sim_msg": "build: update `yarn.lock` file\nDiff automatically generated after running `yarn` on `0643627d97f1`",
        "sim_diff": "diff --git a/yarn.lock b/yarn.lock @@ -23928,11 +23928,6 @@ whatwg-fetch@^3.0.0, whatwg-fetch@^3.5.0:\nresolved \"https://registry.yarnpkg.com/whatwg-fetch/-/whatwg-fetch-3.5.0.tgz#605a2cd0a7146e5db141e29d1c62ab84c0c4c868\"\nintegrity sha512-jXkLtsR42xhXg7akoDKvKWE40eJeI+2KZqcp2h3NsOrRnDvtWX36KcKl30dy+hxECivdk2BVUHVNrPtoMBUx6A==\n-whatwg-fetch@^3.4.1:\n- version \"3.4.1\"\n- resolved \"https://registry.yarnpkg.com/whatwg-fetch/-/whatwg-fetch-3.4.1.tgz#e5f871572d6879663fa5674c8f833f15a8425ab3\"\n- integrity sha512-sofZVzE1wKwO+EYPbWfiwzaKovWiZXf4coEzjGP9b2GBVgQRLQUZ2QcuPpQExGDAW5GItpEm6Tl4OU5mywnAoQ==\n-\nwhatwg-fetch@^3.6.2:\nversion \"3.6.2\"\nresolved \"https://registry.yarnpkg.com/whatwg-fetch/-/whatwg-fetch-3.6.2.tgz#dced24f37f2624ed0281725d51d0e2e3fe677f8c\"\n@@ -24439,8 +24434,3 @@ zepto@^1.2.0:\nversion \"1.2.0\"\nresolved \"https://registry.yarnpkg.com/zepto/-/zepto-1.2.0.tgz#e127bd9e66fd846be5eab48c1394882f7c0e4f98\"\nintegrity sha1-4Se9nmb9hGvl6rSME5SIL3wOT5g=\n-\n-zxcvbn@^4.4.2:\n- version \"4.4.2\"\n- resolved \"https://registry.yarnpkg.com/zxcvbn/-/zxcvbn-4.4.2.tgz#28ec17cf09743edcab056ddd8b1b06262cc73c30\"\n- integrity sha1-KOwXzwl0PtyrBW3dixsGJizHPDA=\n"
    },
    {
        "org_diff": "diff --git a/fixtures/dom/yarn.lock b/a/fixtures/dom/yarn.lock @@ -3366,9 +3366,9 @@ flatten@^1.0.2:\n   integrity sha512-dVsPA/UwQ8+2uoFe5GHtiBMu48dWLTdsuEd7CKGlZlD78r1TTWBvDuFaFGKCo/ZfEr95Uk56vZoX86OsHkUeIg==\n \n follow-redirects@^1.0.0:\n-  version \"1.13.0\"\n-  resolved \"https://registry.yarnpkg.com/follow-redirects/-/follow-redirects-1.13.0.tgz#b42e8d93a2a7eea5ed88633676d6597bc8e384db\"\n-  integrity sha512-aq6gF1BEKje4a9i9+5jimNFIpq4Q1WiwBToeRK5NvZBd/TRsmW8BsJfOEGkr76TbOyPVD3OVDN910EcUNtRYEA==\n+  version \"1.15.6\"\n+  resolved \"https://registry.yarnpkg.com/follow-redirects/-/follow-redirects-1.15.6.tgz#7f815c0cda4249c74ff09e95ef97c23b5fd0399b\"\n+  integrity sha512-wWN62YITEaOpSK584EZXJafH1AGpO8RVgElfkuXbTOrPX4fIfOyEpW/CsiNd8JdYrAoOvafRTOEnvsO++qCqFA==\n \n for-in@^1.0.1, for-in@^1.0.2:\n   version \"1.0.2\"",
        "org_msg": "Bump follow-redirects from 1.13.0 to 1.15.6 in /fixtures/dom (#28560)\n\nBumps\r\n[follow-redirects](https://github.com/follow-redirects/follow-redirects)\r\nfrom 1.13.0 to 1.15.6.\r\n<details>\r\n<summary>Commits</summary>\r\n<ul>\r\n<li><a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/commit/35a517c5861d79dc8bff7db8626013d20b711b06\"><code>35a517c</code></a>\r\nRelease version 1.15.6 of the npm package.</li>\r\n<li><a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/commit/c4f847f85176991f95ab9c88af63b1294de8649b\"><code>c4f847f</code></a>\r\nDrop Proxy-Authorization across hosts.</li>\r\n<li><a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/commit/8526b4a1b2ab3a2e4044299377df623a661caa76\"><code>8526b4a</code></a>\r\nUse GitHub for disclosure.</li>\r\n<li><a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/commit/b1677ce00110ee50dc5da576751d39b281fc4944\"><code>b1677ce</code></a>\r\nRelease version 1.15.5 of the npm package.</li>\r\n<li><a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/commit/d8914f7982403ea096b39bd594a00ee9d3b7e224\"><code>d8914f7</code></a>\r\nPreserve fragment in responseUrl.</li>\r\n<li><a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/commit/65858205e59f1e23c9bf173348a7a7cbb8ac47f5\"><code>6585820</code></a>\r\nRelease version 1.15.4 of the npm package.</li>\r\n<li><a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/commit/7a6567e16dfa9ad18a70bfe91784c28653fbf19d\"><code>7a6567e</code></a>\r\nDisallow bracketed hostnames.</li>\r\n<li><a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/commit/05629af696588b90d64e738bc2e809a97a5f92fc\"><code>05629af</code></a>\r\nPrefer native URL instead of deprecated url.parse.</li>\r\n<li><a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/commit/1cba8e85fa73f563a439fe460cf028688e4358df\"><code>1cba8e8</code></a>\r\nPrefer native URL instead of legacy url.resolve.</li>\r\n<li><a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/commit/72bc2a4229bc18dc9fbd57c60579713e6264cb92\"><code>72bc2a4</code></a>\r\nSimplify _processResponse error handling.</li>\r\n<li>Additional commits viewable in <a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/compare/v1.13.0...v1.15.6\">compare\r\nview</a></li>\r\n</ul>\r\n</details>\r\n<br />\r\n\r\n\r\n[![Dependabot compatibility\r\nscore](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=follow-redirects&package-manager=npm_and_yarn&previous-version=1.13.0&new-version=1.15.6)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\r\n\r\nDependabot will resolve any conflicts with this PR as long as you don't\r\nalter it yourself. You can also trigger a rebase manually by commenting\r\n`@dependabot rebase`.\r\n\r\n[//]: # (dependabot-automerge-start)\r\n[//]: # (dependabot-automerge-end)\r\n\r\n---\r\n\r\n<details>\r\n<summary>Dependabot commands and options</summary>\r\n<br />\r\n\r\nYou can trigger Dependabot actions by commenting on this PR:\r\n- `@dependabot rebase` will rebase this PR\r\n- `@dependabot recreate` will recreate this PR, overwriting any edits\r\nthat have been made to it\r\n- `@dependabot merge` will merge this PR after your CI passes on it\r\n- `@dependabot squash and merge` will squash and merge this PR after\r\nyour CI passes on it\r\n- `@dependabot cancel merge` will cancel a previously requested merge\r\nand block automerging\r\n- `@dependabot reopen` will reopen this PR if it is closed\r\n- `@dependabot close` will close this PR and stop Dependabot recreating\r\nit. You can achieve the same result by closing it manually\r\n- `@dependabot show <dependency name> ignore conditions` will show all\r\nof the ignore conditions of the specified dependency\r\n- `@dependabot ignore this major version` will close this PR and stop\r\nDependabot creating any more for this major version (unless you reopen\r\nthe PR or upgrade to it yourself)\r\n- `@dependabot ignore this minor version` will close this PR and stop\r\nDependabot creating any more for this minor version (unless you reopen\r\nthe PR or upgrade to it yourself)\r\n- `@dependabot ignore this dependency` will close this PR and stop\r\nDependabot creating any more for this dependency (unless you reopen the\r\nPR or upgrade to it yourself)\r\nYou can disable automated security fix PRs for this repo from the\r\n[Security Alerts\r\npage](https://github.com/facebook/react/network/alerts).\r\n\r\n</details>\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>",
        "sim_msg": "fix: upgrade yarn lock",
        "sim_diff": "diff --git a/yarn.lock b/yarn.lock @@ -7248,9 +7248,9 @@ flux-standard-action@^2.0.3:\nlodash \"^4.0.0\"\nfollow-redirects@^1.0.0:\n- version \"1.5.8\"\n- resolved \"https://registry.yarnpkg.com/follow-redirects/-/follow-redirects-1.5.8.tgz#1dbfe13e45ad969f813e86c00e5296f525c885a1\"\n- integrity sha512-sy1mXPmv7kLAMKW/8XofG7o9T+6gAjzdZK4AJF6ryqQYUa/hnzgiypoeUecZ53x7XiqKNEpNqLtS97MshW2nxg==\n+ version \"1.5.9\"\n+ resolved \"https://registry.yarnpkg.com/follow-redirects/-/follow-redirects-1.5.9.tgz#c9ed9d748b814a39535716e531b9196a845d89c6\"\n+ integrity sha512-Bh65EZI/RU8nx0wbYF9shkFZlqLP+6WT/5FnA3cE/djNSuKNHJEinGGZgu/cQEkeeb2GdFOgenAmn8qaqYke2w==\ndependencies:\ndebug \"=3.1.0\"\n@@ -14741,7 +14741,7 @@ select-hose@^2.0.0:\n\"selfkey-ui@https://github.com/SelfKeyFoundation/selfkey-ui.git\":\nversion \"1.0.0\"\n- resolved \"https://github.com/SelfKeyFoundation/selfkey-ui.git#5c2fc6523e97602e786471b5b659a5adaac1a103\"\n+ resolved \"https://github.com/SelfKeyFoundation/selfkey-ui.git#17264585a62a10087fcf31da8bbc1204cb095d63\"\ndependencies:\n\"@material-ui/core\" \"^1.3.1\"\n\"@material-ui/icons\" \"^1.1.0\"\n"
    },
    {
        "org_diff": "diff --git a/yarn.lock b/a/yarn.lock @@ -6997,7 +6997,6 @@ eslint-plugin-no-unsanitized@3.1.2:\n \n \"eslint-plugin-react-internal@link:./scripts/eslint-rules\":\n   version \"0.0.0\"\n-  uid \"\"\n \n eslint-plugin-react@^6.7.1:\n   version \"6.10.3\"\n@@ -7977,9 +7976,9 @@ fluent-syntax@0.13.0:\n   integrity sha512-0Bk1AsliuYB550zr4JV9AYhsETsD3ELXUQzdXGJfIc1Ni/ukAfBdQInDhVMYJUaT2QxoamNslwkYF7MlOrPUwg==\n \n follow-redirects@^1.0.0:\n-  version \"1.15.4\"\n-  resolved \"https://registry.yarnpkg.com/follow-redirects/-/follow-redirects-1.15.4.tgz#cdc7d308bf6493126b17ea2191ea0ccf3e535adf\"\n-  integrity sha512-Cr4D/5wlrb0z9dgERpUL3LrmPKVDsETIJhaCMeDfuFYcqa5bldGV6wBsAN6X/vxlXQtFBMrXdXxdL8CbDTGniw==\n+  version \"1.15.6\"\n+  resolved \"https://registry.yarnpkg.com/follow-redirects/-/follow-redirects-1.15.6.tgz#7f815c0cda4249c74ff09e95ef97c23b5fd0399b\"\n+  integrity sha512-wWN62YITEaOpSK584EZXJafH1AGpO8RVgElfkuXbTOrPX4fIfOyEpW/CsiNd8JdYrAoOvafRTOEnvsO++qCqFA==\n \n for-in@^1.0.2:\n   version \"1.0.2\"",
        "org_msg": "Bump follow-redirects from 1.15.4 to 1.15.6 (#28573)\n\nBumps\r\n[follow-redirects](https://github.com/follow-redirects/follow-redirects)\r\nfrom 1.15.4 to 1.15.6.\r\n<details>\r\n<summary>Commits</summary>\r\n<ul>\r\n<li><a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/commit/35a517c5861d79dc8bff7db8626013d20b711b06\"><code>35a517c</code></a>\r\nRelease version 1.15.6 of the npm package.</li>\r\n<li><a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/commit/c4f847f85176991f95ab9c88af63b1294de8649b\"><code>c4f847f</code></a>\r\nDrop Proxy-Authorization across hosts.</li>\r\n<li><a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/commit/8526b4a1b2ab3a2e4044299377df623a661caa76\"><code>8526b4a</code></a>\r\nUse GitHub for disclosure.</li>\r\n<li><a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/commit/b1677ce00110ee50dc5da576751d39b281fc4944\"><code>b1677ce</code></a>\r\nRelease version 1.15.5 of the npm package.</li>\r\n<li><a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/commit/d8914f7982403ea096b39bd594a00ee9d3b7e224\"><code>d8914f7</code></a>\r\nPreserve fragment in responseUrl.</li>\r\n<li>See full diff in <a\r\nhref=\"https://github.com/follow-redirects/follow-redirects/compare/v1.15.4...v1.15.6\">compare\r\nview</a></li>\r\n</ul>\r\n</details>\r\n<br />\r\n\r\n\r\n[![Dependabot compatibility\r\nscore](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=follow-redirects&package-manager=npm_and_yarn&previous-version=1.15.4&new-version=1.15.6)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\r\n\r\nDependabot will resolve any conflicts with this PR as long as you don't\r\nalter it yourself. You can also trigger a rebase manually by commenting\r\n`@dependabot rebase`.\r\n\r\n[//]: # (dependabot-automerge-start)\r\n[//]: # (dependabot-automerge-end)\r\n\r\n---\r\n\r\n<details>\r\n<summary>Dependabot commands and options</summary>\r\n<br />\r\n\r\nYou can trigger Dependabot actions by commenting on this PR:\r\n- `@dependabot rebase` will rebase this PR\r\n- `@dependabot recreate` will recreate this PR, overwriting any edits\r\nthat have been made to it\r\n- `@dependabot merge` will merge this PR after your CI passes on it\r\n- `@dependabot squash and merge` will squash and merge this PR after\r\nyour CI passes on it\r\n- `@dependabot cancel merge` will cancel a previously requested merge\r\nand block automerging\r\n- `@dependabot reopen` will reopen this PR if it is closed\r\n- `@dependabot close` will close this PR and stop Dependabot recreating\r\nit. You can achieve the same result by closing it manually\r\n- `@dependabot show <dependency name> ignore conditions` will show all\r\nof the ignore conditions of the specified dependency\r\n- `@dependabot ignore this major version` will close this PR and stop\r\nDependabot creating any more for this major version (unless you reopen\r\nthe PR or upgrade to it yourself)\r\n- `@dependabot ignore this minor version` will close this PR and stop\r\nDependabot creating any more for this minor version (unless you reopen\r\nthe PR or upgrade to it yourself)\r\n- `@dependabot ignore this dependency` will close this PR and stop\r\nDependabot creating any more for this dependency (unless you reopen the\r\nPR or upgrade to it yourself)\r\nYou can disable automated security fix PRs for this repo from the\r\n[Security Alerts\r\npage](https://github.com/facebook/react/network/alerts).\r\n\r\n</details>\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>",
        "sim_msg": "pass current provider to api",
        "sim_diff": "diff --git a/yarn.lock b/yarn.lock @@ -16114,10 +16114,15 @@ lottie-react-web@^2.2.2:\nlottie-api \"^1.0.2\"\nlottie-web \"^5.6.1\"\n-lottie-web@^5.6.1, lottie-web@^5.7.1:\n- version \"5.9.4\"\n- resolved \"https://registry.yarnpkg.com/lottie-web/-/lottie-web-5.9.4.tgz#c01478ee5dd47f916cb4bb79040c11d427872d57\"\n- integrity sha512-bSs1ZTPifnBVejO1MnQHdfrKfcn02YTCmgOh2wcAEICqRA0V7GzDh8FnwXY6+EzT+i8XOunaIloo/5xC5YNbsA==\n+lottie-web@^5.6.1:\n+ version \"5.8.1\"\n+ resolved \"https://registry.yarnpkg.com/lottie-web/-/lottie-web-5.8.1.tgz#807e0af0ad22b59bf867d964eb684cb3368da0ef\"\n+ integrity sha512-9gIizWADlaHC2GCt+D+yNpk5l2clZQFqnVWWIVdY0LnxC/uLa39dYltAe3fcmC/hrZ2IUQ8dLlY0O934Npjs7Q==\n+\n+lottie-web@^5.7.1:\n+ version \"5.7.14\"\n+ resolved \"https://registry.yarnpkg.com/lottie-web/-/lottie-web-5.7.14.tgz#cdabd256181c3ea64cf0c174a61dfa137228981f\"\n+ integrity sha512-J+QEPse7Rws0XvTqRJNtcE8cszb5FWYFHubEK6bgDJtw64/AQJ40aazbWXsWGBM4sm/PgLBLgmmhDU4QpLiieg==\nlower-case@^2.0.2:\nversion \"2.0.2\"\n"
    },
    {
        "org_diff": "diff --git a/packages/scheduler/src/__tests__/Scheduler-test.js b/a/packages/scheduler/src/__tests__/Scheduler-test.js @@ -247,7 +247,8 @@ describe('SchedulerBrowser', () => {\n     });\n     runtime.assertLog(['Post Message']);\n     cancelCallback(task);\n-    runtime.assertLog([]);\n+    runtime.fireMessageEvent();\n+    runtime.assertLog(['Message Event']);\n   });\n \n   it('throws when a task errors then continues in a new event', () => {",
        "org_msg": "Fix log assertion in cancels tasks in Scheduler-test (#28562)",
        "sim_msg": "feat(scheduler): main reducer",
        "sim_diff": "diff --git a/src/common/scheduler/index.js b/src/common/scheduler/index.js @@ -150,3 +150,25 @@ export const schedulerSelectors = {\n},\nselectJob: (state, id) => schedulerSelectors.selectScheduler(state).jobsById[id]\n};\n+\n+export const schedulerReducer = (state = schedulerInitialState, action) => {\n+ switch (action.type) {\n+ case schedulerTypes.SCHEDULER_JOB_QUEUE:\n+ return reducers.queueJobReducer(state, action);\n+ case schedulerTypes.SCHEDULER_JOB_PROCESS:\n+ return reducers.processJobReducer(state, action);\n+ case schedulerTypes.SCHEDULER_JOB_FINISH:\n+ return reducers.finishJobReducer(state, action);\n+ case schedulerTypes.SCHEDULER_JOB_PROGRESS:\n+ return reducers.progressJobReducer(state, action);\n+ case schedulerTypes.SCHEDULER_JOB_DELETE:\n+ return reducers.deleteJobReducer(state, action);\n+ case schedulerTypes.SCHEDULER_QUEUE_SET_PROCESSING:\n+ return reducers.setProcessingQueueReducer(state, action);\n+ case schedulerTypes.SCHEDULER_QUEUE_SET_CONFIG:\n+ return reducers.setConfigQueueReducer(state, action);\n+ }\n+ return state;\n+};\n+\n+export default schedulerReducer;\n"
    },
    {
        "org_diff": "diff --git a/packages/shared/forks/ReactFeatureFlags.native-oss.js b/a/packages/shared/forks/ReactFeatureFlags.native-oss.js @@ -10,6 +10,13 @@\n import typeof * as FeatureFlagsType from 'shared/ReactFeatureFlags';\n import typeof * as ExportsType from './ReactFeatureFlags.native-oss';\n \n+// -----------------------------------------------------------------------------\n+// Ready for next major.\n+//\n+// Alias __NEXT_MAJOR__ to false for easier skimming.\n+// -----------------------------------------------------------------------------\n+const __NEXT_MAJOR__ = false;\n+\n export const debugRenderPhaseSideEffectsForStrictMode = __DEV__;\n export const enableDebugTracing = false;\n export const enableAsyncDebugInfo = false;\n@@ -18,7 +25,7 @@ export const enableProfilerTimer = __PROFILE__;\n export const enableProfilerCommitHooks = __PROFILE__;\n export const enableProfilerNestedUpdatePhase = __PROFILE__;\n export const enableUpdaterTracking = __PROFILE__;\n-export const enableCache = true;\n+export const enableCache = __NEXT_MAJOR__;\n export const enableLegacyCache = false;\n export const enableCacheElement = true;\n export const enableFetchInstrumentation = false;",
        "org_msg": "Revert rollout state of enableCache in React Native to next major only (#28565)\n\n## Summary\r\n\r\nWe're working on enabling the use of microtasks in React Native by\r\ndefault when using the new architecture. To enable this we need to\r\nsynchronize the RN renderers from React, but doing this causes an error\r\nbecause the renderers now rely on an object defined in\r\n`React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED`\r\n(`ReactCurrentCache`) that's hasn't been released as a stable version\r\nyet (cache).\r\n\r\nThis reverts the change done in #28519 to avoid enabling the cache API\r\nin RN until we release a new version of React in npm.\r\n\r\n## How did you test this change?\r\n\r\nManually built the RN renderer, copied it to the RN repository and\r\ntested e2e in RNTester.",
        "sim_msg": "update rn-elements",
        "sim_diff": "diff --git a/example/package.json b/example/package.json \"prop-types\": \"^15.7.2\",\n\"react\": \"16.11.0\",\n\"react-native\": \"0.62.1\",\n- \"react-native-elements\": \"^1.1.0\",\n+ \"react-native-elements\": \"^2.2.1\",\n\"react-native-gesture-handler\": \"^1.6.1\",\n\"react-native-safe-area-context\": \"^0.7.3\",\n\"react-native-safe-area-view\": \"^0.13.1\",\n"
    },
    {
        "org_diff": "diff --git a/packages/eslint-plugin-react-hooks/__tests__/ESLintRuleExhaustiveDeps-test.js b/a/packages/eslint-plugin-react-hooks/__tests__/ESLintRuleExhaustiveDeps-test.js @@ -7774,6 +7774,16 @@ const testsTypescript = {\n         }\n       `,\n     },\n+    {\n+      code: normalizeIndent`\n+        function useMyThing<T>(): void {\n+          useEffect(() => {\n+            let foo: T;\n+            console.log(foo);\n+          }, []);\n+        }\n+      `,\n+    },\n   ],\n   invalid: [\n     {",
        "org_msg": "Add passing exhaustive-deps test for type parameters in TypeScript (#20432)",
        "sim_msg": "Combine eslint rule groups for e2e tests.",
        "sim_diff": "diff --git a/.eslintrc.json b/.eslintrc.json \"rules\": {\n\"no-restricted-globals\": [\n\"off\"\n- ]\n+ ],\n+ \"react-hooks/rules-of-hooks\": \"off\"\n}\n},\n{\n\"off\"\n]\n}\n- },\n- {\n- \"files\": [\n- \"tests/e2e/**/*.js\"\n- ],\n- \"rules\": {\n- \"react-hooks/rules-of-hooks\": \"off\"\n- }\n}\n],\n\"plugins\": [\n"
    },
    {
        "org_diff": "diff --git a/packages/react-dom/src/__tests__/refs-destruction-test.js b/a/packages/react-dom/src/__tests__/refs-destruction-test.js @@ -12,7 +12,6 @@\n let React;\n let ReactDOM;\n let ReactDOMClient;\n-let ReactTestUtils;\n let TestComponent;\n let act;\n let theInnerDivRef;\n@@ -25,7 +24,6 @@ describe('refs-destruction', () => {\n     React = require('react');\n     ReactDOM = require('react-dom');\n     ReactDOMClient = require('react-dom/client');\n-    ReactTestUtils = require('react-dom/test-utils');\n     act = require('internal-test-utils').act;\n \n     class ClassComponent extends React.Component {\n@@ -75,7 +73,7 @@ describe('refs-destruction', () => {\n       root.render(<TestComponent />);\n     });\n \n-    expect(ReactTestUtils.isDOMComponent(theInnerDivRef.current)).toBe(true);\n+    expect(theInnerDivRef.current).toBeInstanceOf(Element);\n     expect(theInnerClassComponentRef.current).toBeTruthy();\n \n     root.unmount();\n@@ -91,7 +89,7 @@ describe('refs-destruction', () => {\n       root.render(<TestComponent />);\n     });\n \n-    expect(ReactTestUtils.isDOMComponent(theInnerDivRef.current)).toBe(true);\n+    expect(theInnerDivRef.current).toBeInstanceOf(Element);\n     expect(theInnerClassComponentRef.current).toBeTruthy();\n \n     await act(async () => {\n@@ -109,7 +107,7 @@ describe('refs-destruction', () => {\n       root.render(<TestComponent />);\n     });\n \n-    expect(ReactTestUtils.isDOMComponent(theInnerDivRef.current)).toBe(true);\n+    expect(theInnerDivRef.current).toBeInstanceOf(Element);\n     expect(theInnerClassComponentRef.current).toBeTruthy();\n \n     await act(async () => {",
        "org_msg": "Remove ReactTestUtils from refs-destruction-test (#28532)\n\n```diff\r\n-expect(ReactTestUtils.isDOMComponent(maybeElement)).toBe(true);\r\n+expect(maybeElement).toBeInstanceOf(Element);\r\n```\r\n\r\nIt's not equivalent since `isDOMComponent` checks `maybeElement.nodeType\r\n=== Element.ELEMENT_NODE && !!maybeElement.tagName` but `instanceof`\r\ncheck seems sufficient here. Checking `nodeType` is mostly for\r\ncross-realm checks and checking falsy `tagName` seems like a check\r\nspecifically for incomplete DOM implementations because tagName can't be\r\nempty by spec I believe.",
        "sim_msg": "changes MyBooks test to use mount",
        "sim_diff": "diff --git a/assets/src/components/mybooks/MyBooks.test.jsx b/assets/src/components/mybooks/MyBooks.test.jsx import React from 'react';\n-import { shallow } from 'enzyme';\n+import { mount } from 'enzyme';\nimport MyBooks from './MyBooks';\nimport { getMyBooks } from '../../services/BookService';\nimport BookList from '../books/BookList';\n@@ -7,10 +7,16 @@ import { someBookWithACopyFromMe } from '../../../test/booksHelper';\njest.mock('../../services/BookService');\n+const createComponent = (props = {}) => mount(<MyBooks {...props} />);\ndescribe('My books', () => {\n- const createComponent = (props = {}) => shallow(<MyBooks {...props} />);\n+ beforeEach(() => {\ngetMyBooks.mockReturnValue({ results: [] });\n+ });\n+\n+ afterEach(() => {\n+ getMyBooks.mockClear();\n+ });\nit('renders without crashing', () => {\nconst myBooks = createComponent();\n@@ -33,6 +39,7 @@ describe('My books', () => {\ngetMyBooks.mockReturnValue({ results: books });\nconst component = await createComponent();\n+ await component.update();\nexpect(component.find(BookList).props().books).toEqual(books);\n});\n"
    },
    {
        "org_diff": "diff --git a/packages/react-debug-tools/src/__tests__/ReactDevToolsHooksIntegration-test.js b/a/packages/react-debug-tools/src/__tests__/ReactDevToolsHooksIntegration-test.js @@ -43,7 +43,7 @@ describe('React hooks DevTools integration', () => {\n     const InternalTestUtils = require('internal-test-utils');\n     waitForAll = InternalTestUtils.waitForAll;\n \n-    act = ReactTestRenderer.act;\n+    act = require('internal-test-utils').act;\n   });\n \n   it('should support editing useState hooks', async () => {\n@@ -55,7 +55,12 @@ describe('React hooks DevTools integration', () => {\n       return <div>count:{count}</div>;\n     }\n \n-    const renderer = ReactTestRenderer.create(<MyComponent />);\n+    let renderer;\n+    await act(() => {\n+      renderer = ReactTestRenderer.create(<MyComponent />, {\n+        unstable_isConcurrent: true,\n+      });\n+    });\n     expect(renderer.toJSON()).toEqual({\n       type: 'div',\n       props: {},\n@@ -107,7 +112,12 @@ describe('React hooks DevTools integration', () => {\n       );\n     }\n \n-    const renderer = ReactTestRenderer.create(<MyComponent />);\n+    let renderer;\n+    await act(() => {\n+      renderer = ReactTestRenderer.create(<MyComponent />, {\n+        unstable_isConcurrent: true,\n+      });\n+    });\n     expect(renderer.toJSON()).toEqual({\n       type: 'div',\n       props: {},\n@@ -155,7 +165,12 @@ describe('React hooks DevTools integration', () => {\n       return <div>count:{count}</div>;\n     }\n \n-    const renderer = ReactTestRenderer.create(<MyComponent />);\n+    let renderer;\n+    await act(() => {\n+      renderer = ReactTestRenderer.create(<MyComponent />, {\n+        unstable_isConcurrent: true,\n+      });\n+    });\n     expect(renderer.toJSON()).toEqual({\n       type: 'div',\n       props: {},\n@@ -192,14 +207,17 @@ describe('React hooks DevTools integration', () => {\n     function MyComponent() {\n       return 'Done';\n     }\n-\n-    const renderer = ReactTestRenderer.create(\n-      <div>\n-        <React.Suspense fallback={'Loading'}>\n-          <MyComponent />\n-        </React.Suspense>\n-      </div>,\n-    );\n+    let renderer;\n+    await act(() => {\n+      renderer = ReactTestRenderer.create(\n+        <div>\n+          <React.Suspense fallback={'Loading'}>\n+            <MyComponent />\n+          </React.Suspense>\n+        </div>,\n+        {unstable_isConcurrent: true},\n+      );\n+    });\n     const fiber = renderer.root._currentFiber().child;\n     if (__DEV__) {\n       // First render was locked\n@@ -236,7 +254,6 @@ describe('React hooks DevTools integration', () => {\n     }\n   });\n \n-  // @gate __DEV__\n   it('should support overriding suspense in concurrent mode', async () => {\n     if (__DEV__) {\n       // Lock the first render\n@@ -254,7 +271,7 @@ describe('React hooks DevTools integration', () => {\n             <MyComponent />\n           </React.Suspense>\n         </div>,\n-        {isConcurrent: true},\n+        {unstable_isConcurrent: true},\n       ),\n     );\n ",
        "org_msg": "Concurrent rendering in ReactDevToolsHooksIntegration-test (#28522)\n\n## Summary\r\n\r\nWe need to unblock flipping the default for RTR to be concurrent\r\nrendering. Update ReactDevToolsHooksIntegration-test to use\r\n`unstable_isConcurrent` in place.\r\n\r\n## How did you test this change?\r\n\r\n`yarn test\r\npackages/react-debug-tools/src/__tests__/ReactDevToolsHooksIntegration-test.js`",
        "sim_msg": "Extend renderHook in test-utils.",
        "sim_diff": "diff --git a/tests/js/test-utils.js b/tests/js/test-utils.js * External dependencies\n*/\nimport { render } from '@testing-library/react';\n+import { renderHook } from '@testing-library/react-hooks';\nimport invariant from 'invariant';\n/**\n@@ -53,6 +54,37 @@ const customRender = ( ui, options = {} ) => {\n};\n};\n+/**\n+ * Renders a test component that will call the provided callback, including any hooks it calls, every time it renders.\n+ *\n+ * @since n.e.x.t\n+ *\n+ * @param {Function} callback The function that is called each render of the test component. This function should call one or more hooks for testing.\n+ * The props passed into the callback will be the initialProps provided in the options to renderHook,\n+ * unless new props are provided by a subsequent rerender call.\n+ * @param {Object} [options] Optional. An options object to modify the execution of the callback function.\n+ * See the [renderHook Options](@link https://react-hooks-testing-library.com/reference/api#renderhook-options) section for more details.\n+ * @return {Object} Object with `result`, `rerender`, `unmount`, and async utilities. @link https://react-hooks-testing-library.com/reference/api#renderhook-result\n+ */\n+const customRenderHook = (\n+ callback,\n+ {\n+ registry = createTestRegistry(),\n+ ...renderHookOptions\n+ } = {}\n+) => {\n+ const Wrapper = ( { children } ) => (\n+ <RegistryProvider value={ registry }>\n+ { children }\n+ </RegistryProvider>\n+ );\n+\n+ return {\n+ ...renderHook( callback, { wrapper: Wrapper, ...renderHookOptions } ),\n+ registry,\n+ };\n+};\n+\n// Export our own test utils from this file.\nexport * from 'tests/js/utils';\n@@ -61,3 +93,5 @@ export * from '@testing-library/react';\n// Override @testing-library/react's render method with our own.\nexport { customRender as render };\n+// Override @testing-library/react-hooks's renderHook method with our own.\n+export { customRenderHook as renderHook };\n"
    },
    {
        "org_diff": "diff --git a/packages/react-debug-tools/src/__tests__/ReactHooksInspection-test.js b/a/packages/react-debug-tools/src/__tests__/ReactHooksInspection-test.js @@ -584,24 +584,29 @@ describe('ReactHooksInspection', () => {\n       return <div>{value}</div>;\n     }\n     const tree = ReactDebugTools.inspectHooks(Foo, {});\n-    expect(normalizeSourceLoc(tree)).toMatchInlineSnapshot(`\n-      [\n-        {\n-          \"debugInfo\": null,\n-          \"hookSource\": {\n-            \"columnNumber\": 0,\n-            \"fileName\": \"**\",\n-            \"functionName\": \"Foo\",\n-            \"lineNumber\": 0,\n-          },\n-          \"id\": null,\n-          \"isStateEditable\": false,\n-          \"name\": \"Unresolved\",\n-          \"subHooks\": [],\n-          \"value\": Promise {},\n+    const results = normalizeSourceLoc(tree);\n+    expect(results).toHaveLength(1);\n+    expect(results[0]).toMatchInlineSnapshot(\n+      {\n+        value: expect.any(Promise),\n+      },\n+      `\n+      {\n+        \"debugInfo\": null,\n+        \"hookSource\": {\n+          \"columnNumber\": 0,\n+          \"fileName\": \"**\",\n+          \"functionName\": \"Foo\",\n+          \"lineNumber\": 0,\n         },\n-      ]\n-    `);\n+        \"id\": null,\n+        \"isStateEditable\": false,\n+        \"name\": \"Unresolved\",\n+        \"subHooks\": [],\n+        \"value\": Any<Promise>,\n+      }\n+    `,\n+    );\n   });\n \n   describe('useDebugValue', () => {",
        "org_msg": "Fix ReactHooksInspection-test.js (#28520)\n\n## Summary\r\n\r\nCurrently, `ReactHooksInspection-test.js` fails because something is\r\npolluting the resulting `Promise` with symbol properties. This changes\r\nthe unit test to be more resilient to such symbol properties.\r\n\r\n## How did you test this change?\r\n\r\nRan the following successfully:\r\n\r\n```\r\n$ yarn test\r\n```",
        "sim_msg": "test: update test to use sample data",
        "sim_diff": "diff --git a/src/components/ProductDetail/ProductDetail.test.js b/src/components/ProductDetail/ProductDetail.test.js @@ -2,9 +2,10 @@ import React from \"react\";\nimport renderer from \"react-test-renderer\";\nimport { shallow } from \"enzyme\";\nimport ProductDetail from \"./ProductDetail\";\n+import sampleData from \"./sampleData\";\ntest(\"basic snapshot\", () => {\n- const component = renderer.create(shallow(<ProductDetail />).get(0));\n+ const component = renderer.create(shallow(<ProductDetail catalogProduct={sampleData} />).get(0));\nconst tree = component.toJSON();\nexpect(tree).toMatchSnapshot();\n});\n"
    },
    {
        "org_diff": "diff --git a/packages/react-devtools-inline/__tests__/__e2e__/components.test.js b/a/packages/react-devtools-inline/__tests__/__e2e__/components.test.js @@ -59,7 +59,7 @@ test.describe('Components', () => {\n     const isEditableValue = semver.gte(config.use.react_version, '16.8.0');\n \n     // Then read the inspected values.\n-    const [propName, propValue, sourceText] = await page.evaluate(\n+    const [propName, propValue] = await page.evaluate(\n       isEditable => {\n         const {createTestNameSelector, findAllNodes} =\n           window.REACT_DOM_DEVTOOLS;\n@@ -85,21 +85,41 @@ test.describe('Components', () => {\n           createTestNameSelector('InspectedElementPropsTree'),\n           createTestNameSelector(selectorValue),\n         ])[0];\n-        const source = findAllNodes(container, [\n-          createTestNameSelector('InspectedElementView-Source'),\n-        ])[0];\n         const value = isEditable.value\n           ? valueElement.value\n           : valueElement.innerText;\n \n-        return [name, value, source.innerText];\n+        return [name, value];\n       },\n       {name: isEditableName, value: isEditableValue}\n     );\n \n     expect(propName).toBe('label');\n     expect(propValue).toBe('\"one\"');\n-    expect(sourceText).toMatch(/e2e-app[a-zA-Z]*\\.js/);\n+  });\n+\n+  test('Should allow inspecting source of the element', async () => {\n+    // Source inspection is available only in modern renderer.\n+    runOnlyForReactRange('>=16.8');\n+\n+    // Select the first list item in DevTools.\n+    await devToolsUtils.selectElement(page, 'ListItem', 'List\\nApp');\n+\n+    // Then read the inspected values.\n+    const sourceText = await page.evaluate(() => {\n+      const {createTestNameSelector, findAllNodes} = window.REACT_DOM_DEVTOOLS;\n+      const container = document.getElementById('devtools');\n+\n+      const source = findAllNodes(container, [\n+        createTestNameSelector('InspectedElementView-Source'),\n+      ])[0];\n+\n+      return source.innerText;\n+    });\n+\n+    // If React version is specified, the e2e-regression.html page will be used\n+    // If not, then e2e.html, see playwright.config.js, how url is constructed\n+    expect(sourceText).toMatch(/e2e-app[\\-a-zA-Z]*\\.js/);\n   });\n \n   test('should allow props to be edited', async () => {",
        "org_msg": "fix[devtools/e2e]: fixed source inspection in e2e tests (#28518)\n\nDevTools e2e tests started to fail after landing\r\nhttps://github.com/facebook/react/pull/28471:\r\n-\r\nhttps://app.circleci.com/pipelines/github/facebook/react/50984/workflows/a7be25ed-9547-40e9-87bd-b14d9d2e87da/jobs/798270\r\n-\r\nhttps://app.circleci.com/pipelines/github/facebook/react/50984/workflows/a7be25ed-9547-40e9-87bd-b14d9d2e87da/jobs/798275\r\n-\r\nhttps://app.circleci.com/pipelines/github/facebook/react/50984/workflows/a7be25ed-9547-40e9-87bd-b14d9d2e87da/jobs/798271\r\n-\r\nhttps://app.circleci.com/pipelines/github/facebook/react/50984/workflows/a7be25ed-9547-40e9-87bd-b14d9d2e87da/jobs/798274\r\n-\r\nhttps://app.circleci.com/pipelines/github/facebook/react/50984/workflows/a7be25ed-9547-40e9-87bd-b14d9d2e87da/jobs/798269\r\n\r\nThere are 2 reasons for that:\r\n1. Versions 16.0 and 16.5 use legacy renderer, which doesn't support\r\nsource inspection by design:\r\n\r\nhttps://github.com/facebook/react/blob/850fac4915864a487e7cb9ecae8a75dbac144174/packages/react-devtools-shared/src/backend/legacy/renderer.js#L831\r\n\r\nThe corresponding e2e test is now gated for versions >=16.8\r\n2. For other versions (>=16.8), the source is actually\r\n`e2e-app-regression.js`, because these regression tests open a different\r\npage (not the one we open for tests against React from source)\r\n\r\nhttps://github.com/facebook/react/blob/850fac4915864a487e7cb9ecae8a75dbac144174/packages/react-devtools-inline/playwright.config.js#L15-L17",
        "sim_msg": "[utils] Added test for Ref utils",
        "sim_diff": "diff --git a/semcore/utils/__tests__/index.test.tsx b/semcore/utils/__tests__/index.test.tsx import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { testing, snapshot } from '@semcore/jest-preset-ui';\n-\n-const { cleanup } = testing;\n-\nimport isNode from '../src/isNode';\nimport compose from '../src/compose';\nimport useCss from '../src/use/useCss';\n@@ -11,6 +8,9 @@ import resolveColor, { shade, opacity } from '../src/color';\nimport { interpolate } from '../src/enhances/i18nEnhance';\nimport assignProps, { assignHandlers } from '../src/assignProps';\nimport reactToText from '../src/reactToText';\n+import { getRef, setRef, getNodeByRef } from '../src/ref';\n+\n+const { cleanup } = testing;\ndescribe('Utils CSS in JS', () => {\nafterEach(cleanup);\n@@ -421,3 +421,53 @@ describe('Utils reactToText', () => {\n).toBe('multi component');\n});\n});\n+\n+describe('Utils ref', () => {\n+ afterEach(cleanup);\n+\n+ test('[getRef] support element', () => {\n+ const div = document.createElement('div');\n+ expect(getRef(div)).toBe(div);\n+ });\n+\n+ test('[getRef] support ref function', () => {\n+ const div = document.createElement('div');\n+ const ref = React.createRef<HTMLDivElement>();\n+ // @ts-ignore\n+ ref.current = div;\n+ expect(getRef(ref)).toBe(div);\n+ });\n+\n+ test('[getRef] support unknown', () => {\n+ expect(getRef(undefined)).toBe(null);\n+ });\n+\n+ test('[setRef] support ref', () => {\n+ const ref = React.createRef<HTMLDivElement>();\n+ const div = document.createElement('div');\n+ setRef(ref, div);\n+ expect(ref.current).toBe(div);\n+ });\n+\n+ test('[setRef] support function', () => {\n+ const fn = jest.fn();\n+ const div = document.createElement('div');\n+ setRef(fn, div);\n+ expect(fn).toHaveBeenCalledWith(div);\n+ });\n+\n+ test('[getNodeByRef] support function', () => {\n+ const div = document.createElement('div');\n+ const fn = jest.fn(() => div);\n+ // setRef(fn, div)\n+ expect(getNodeByRef(fn)).toBe(div);\n+ });\n+\n+ test('[getNodeByRef] support ref', () => {\n+ const div = document.createElement('div');\n+ const ref = React.createRef<HTMLDivElement>();\n+ // @ts-ignore\n+ ref.current = div;\n+ expect(getNodeByRef(ref)).toBe(div);\n+ });\n+});\n"
    },
    {
        "org_diff": "diff --git a/README.md b/a/README.md @@ -36,7 +36,7 @@ The documentation is divided into several sections:\n * [Where to Get Support](https://react.dev/community)\n * [Contributing Guide](https://legacy.reactjs.org/docs/how-to-contribute.html)\n \n-You can improve it by sending pull requests to [this repository](https://github.com/reactjs/reactjs.org).\n+You can improve it by sending pull requests to [this repository](https://github.com/reactjs/react.dev).\n \n ## Examples\n ",
        "org_msg": "Link to reactjs/react.dev repo instead of reactjs/reactjs.org  (#28493)",
        "sim_msg": "close unclosed anchor tags",
        "sim_diff": "diff --git a/CONTRIBUTING.md b/CONTRIBUTING.md @@ -11,22 +11,22 @@ Please read https://reactjs.org/ and the Code of Conduct before opening an issue\n- [Development](#development)\n- [Hacking](#hacking)\n-<a name=\"bug\"/>\n+<a name=\"bug\"/></a>\n## Think You Found a Bug?\nPlease provide a test case of some sort. Best is a pull request with a failing test. Next is a link to CodePen/JS Bin or repository that illustrates the bug. Finally, some copy/pastable code is acceptable.\n-<a name=\"api\"/>\n+<a name=\"api\"/></a>\n## Proposing New or Changed API?\nPlease provide thoughtful comments and some sample code. Proposals without substance will be closed.\n-<a name=\"attention\"/>\n+<a name=\"attention\"/></a>\n## Issue Not Getting Attention?\nIf you need a bug fixed and nobody is fixing it, it is your responsibility to fix it. Issues with no activity for 30 days may be closed.\n-<a name=\"pr\"/>\n+<a name=\"pr\"/></a>\n## Making a Pull Request?\nPull requests need only the :+1: of two or more collaborators to be merged; when the PR author is a collaborator, that counts as one.\n"
    },
    {
        "org_diff": "diff --git a/packages/react-reconciler/src/ReactChildFiber.js b/a/packages/react-reconciler/src/ReactChildFiber.js @@ -438,7 +438,6 @@ function createChildReconciler(\n   }\n \n   function mapRemainingChildren(\n-    returnFiber: Fiber,\n     currentFirstChild: Fiber,\n   ): Map<string | number, Fiber> {\n     // Add the remaining children to a temporary map so that we can find them by\n@@ -1194,7 +1193,7 @@ function createChildReconciler(\n     }\n \n     // Add all children to a key map for quick lookups.\n-    const existingChildren = mapRemainingChildren(returnFiber, oldFiber);\n+    const existingChildren = mapRemainingChildren(oldFiber);\n \n     // Keep scanning and use the map to restore deleted items as moves.\n     for (; newIdx < newChildren.length; newIdx++) {\n@@ -1404,7 +1403,7 @@ function createChildReconciler(\n     }\n \n     // Add all children to a key map for quick lookups.\n-    const existingChildren = mapRemainingChildren(returnFiber, oldFiber);\n+    const existingChildren = mapRemainingChildren(oldFiber);\n \n     // Keep scanning and use the map to restore deleted items as moves.\n     for (; !step.done; newIdx++, step = newChildren.next()) {",
        "org_msg": "Remove unused returnFiber (#28504)\n\nThere is no use of `returnFiber` here, it can be removed.",
        "sim_msg": "* Removed recursive iteration.",
        "sim_diff": "diff --git a/src/module/actor/actor-inventory.js b/src/module/actor/actor-inventory.js @@ -84,12 +84,7 @@ export async function addItemToActorAsync(targetActor, item, quantity) {\n}\nexport function getChildItems(containerId, actor) {\n- let childItems = [];\n- for (let item of actor.items) {\n- if (item.data.data.containerId === containerId) {\n- childItems.push(item);\n- }\n- }\n+ let childItems = actor.items.filter(x => x.data.data.containerId === containerId);\nreturn childItems;\n}\n@@ -107,33 +102,38 @@ export async function moveItemBetweenActorsAsync(sourceActor, item, targetActor,\nawait tryAddItemToContainerAsync(targetItem, targetActor, () => { return item; });\nreturn item;\n} else {\n- const sourceItemQuantity = item.data.data.quantity;\n- await removeItemFromActorAsync(sourceActor, item, sourceItemQuantity);\n- let itemInTargetActor = await addItemToActorAsync(targetActor, item, sourceItemQuantity);\n- await tryAddItemToContainerAsync(targetItem, targetActor, () => { return itemInTargetActor; });\n-\n- let children = getChildItems(item._id, sourceActor);\n+ let itemsToMove = [{container: targetItem, items: [item]}];\n+ let firstMovedItem = null;\n+ do {\n+ let pair = itemsToMove.shift();\n+ let bulkAdd = [];\n+ for (let itemToMove of pair.items) {\n+ let children = getChildItems(itemToMove._id, sourceActor);\nif (children) {\n- for (let child of children) {\n- await recursiveChildMoveAsync(sourceActor, targetActor, child, itemInTargetActor);\n+ const sourceItemQuantity = itemToMove.data.data.quantity;\n+ let itemInTargetActor = await addItemToActorAsync(targetActor, itemToMove, sourceItemQuantity);\n+ await tryAddItemToContainerAsync(pair.container, targetActor, () => { return itemInTargetActor; });\n+\n+ await removeItemFromActorAsync(sourceActor, itemToMove, sourceItemQuantity);\n+\n+ itemsToMove.push({container: itemInTargetActor, items: children});\n+\n+ firstMovedItem = firstMovedItem || itemInTargetActor;\n+ } else {\n+ bulkAdd.push(itemToMove);\n}\n}\n- return itemInTargetActor;\n+ if (bulkAdd.length > 0) {\n+ let result = await targetActor.createOwnedItem(bulkAdd);\n+ if (result && result.length > 0) {\n+ firstMovedItem = firstMovedItem || result[0];\n}\n+ await sourceActor.deleteOwnedItem(bulkAdd);\n}\n+ } while (itemsToMove.length > 0);\n-async function recursiveChildMoveAsync(sourceActor, targetActor, sourceItem, targetContainer) {\n- const itemQuantity = sourceItem.data.data.quantity;\n- await removeItemFromActorAsync(sourceActor, sourceItem, itemQuantity);\n- let itemInTargetActor = await addItemToActorAsync(targetActor, sourceItem, itemQuantity);\n- await tryAddItemToContainerAsync(targetContainer, targetActor, () => { return itemInTargetActor; });\n-\n- let children = getChildItems(sourceItem._id, sourceActor);\n- if (children) {\n- for (let child of children) {\n- await recursiveChildMoveAsync(sourceActor, targetActor, child, itemInTargetActor);\n- }\n+ return firstMovedItem;\n}\n}\n"
    },
    {
        "org_diff": "diff --git a/.circleci/config.yml b/a/.circleci/config.yml @@ -97,6 +97,16 @@ jobs:\n       - setup_node_modules\n       - run: node ./scripts/tasks/flow-ci\n \n+\n+  yarn_flags:\n+    docker: *docker\n+    environment: *environment\n+\n+    steps:\n+      - checkout\n+      - setup_node_modules\n+      - run: yarn flags\n+\n   scrape_warning_messages:\n     docker: *docker\n     environment: *environment\n@@ -447,6 +457,11 @@ workflows:\n   build_and_test:\n     unless: << pipeline.parameters.prerelease_commit_sha >>\n     jobs:\n+      - yarn_flags:\n+          filters:\n+            branches:\n+              ignore:\n+                - builds/facebook-www\n       - yarn_flow:\n           filters:\n             branches:",
        "org_msg": "Run `yarn flags` in CI (#28345)",
        "sim_msg": "chore: disables release as a part of CI",
        "sim_diff": "diff --git a/.circleci/config.yml b/.circleci/config.yml @@ -100,8 +100,8 @@ jobs:\ndocker: [<<: *node12]\nsteps:\n- checkout\n- - <<: *install\n- - run: yarn ci:release\n+ # - <<: *install\n+ # - run: yarn ci:release\nworkflows:\nversion: 2\n"
    },
    {
        "org_diff": "diff --git a/packages/react-dom/src/__tests__/ReactDOMServerIntegrationLegacyContextDisabled-test.internal.js b/a/packages/react-dom/src/__tests__/ReactDOMServerIntegrationLegacyContextDisabled-test.internal.js @@ -13,28 +13,29 @@\n const ReactDOMServerIntegrationUtils = require('./utils/ReactDOMServerIntegrationTestUtils');\n \n let React;\n-let ReactDOM;\n+let ReactDOMClient;\n let ReactFeatureFlags;\n let ReactDOMServer;\n \n function initModules() {\n   // Reset warning cache.\n   jest.resetModules();\n   React = require('react');\n-  ReactDOM = require('react-dom');\n+  ReactDOMClient = require('react-dom/client');\n   ReactDOMServer = require('react-dom/server');\n \n   ReactFeatureFlags = require('shared/ReactFeatureFlags');\n   ReactFeatureFlags.disableLegacyContext = true;\n \n   // Make them available to the helpers.\n   return {\n-    ReactDOM,\n+    ReactDOMClient,\n     ReactDOMServer,\n   };\n }\n \n-const {resetModules, itRenders} = ReactDOMServerIntegrationUtils(initModules);\n+const {resetModules, itRenders, clientRenderOnBadMarkup} =\n+  ReactDOMServerIntegrationUtils(initModules);\n \n function formatValue(val) {\n   if (val === null) {\n@@ -104,7 +105,7 @@ describe('ReactDOMServerIntegrationLegacyContextDisabled', () => {\n           <RegularFn />\n         </span>\n       </LegacyProvider>,\n-      3,\n+      render === clientRenderOnBadMarkup ? 6 : 3,\n     );\n     expect(e.textContent).toBe('{}undefinedundefined');\n     expect(lifecycleContextLog).toEqual([]);",
        "org_msg": "Convert ReactDOMServerIntegrationLegacyContextDisabled to createRoot (#28448)",
        "sim_msg": "rm non functioning tests",
        "sim_diff": "diff --git a/packages/transportation/src/components/App/index.test.js b/packages/transportation/src/components/App/index.test.js -import React from 'react';\n-import { shallow } from 'enzyme';\n-import App from './index';\n-\ndescribe('<App />', () => {\n- it('should render its children', () => {\n- const children = (<h1>Test</h1>);\n- const wrapper = shallow(\n- <App>\n- {children}\n- </App>,\n- );\n- expect(wrapper.contains(children)).to.eql(true);\n+ it('does not have have functioning tests...', () => {\n+ expect(true).to.eql(true);\n});\n});\n"
    },
    {
        "org_diff": "diff --git a/packages/react-dom/src/__tests__/ReactDOMServerIntegrationLegacyContext-test.js b/a/packages/react-dom/src/__tests__/ReactDOMServerIntegrationLegacyContext-test.js @@ -14,26 +14,30 @@ const ReactDOMServerIntegrationUtils = require('./utils/ReactDOMServerIntegratio\n \n let PropTypes;\n let React;\n-let ReactDOM;\n+let ReactDOMClient;\n let ReactDOMServer;\n \n function initModules() {\n   // Reset warning cache.\n   jest.resetModules();\n   PropTypes = require('prop-types');\n   React = require('react');\n-  ReactDOM = require('react-dom');\n+  ReactDOMClient = require('react-dom/client');\n   ReactDOMServer = require('react-dom/server');\n \n   // Make them available to the helpers.\n   return {\n-    ReactDOM,\n+    ReactDOMClient,\n     ReactDOMServer,\n   };\n }\n \n-const {resetModules, itRenders, itThrowsWhenRendering} =\n-  ReactDOMServerIntegrationUtils(initModules);\n+const {\n+  resetModules,\n+  itRenders,\n+  itThrowsWhenRendering,\n+  clientRenderOnBadMarkup,\n+} = ReactDOMServerIntegrationUtils(initModules);\n \n describe('ReactDOMServerIntegration', () => {\n   beforeEach(() => {\n@@ -272,7 +276,10 @@ describe('ReactDOMServerIntegration', () => {\n             return {foo: 'bar'};\n           }\n         }\n-        const e = await render(<ForgetfulParent />, 1);\n+        const e = await render(\n+          <ForgetfulParent />,\n+          render === clientRenderOnBadMarkup ? 4 : 1,\n+        );\n         expect(e.textContent).toBe('nope');\n       },\n     );",
        "org_msg": "Convert ReactDOMServerIntegrationLegacyContext to createRoot (#28449)",
        "sim_msg": "DomRenderer track fov",
        "sim_diff": "diff --git a/src/DomRenderer.jsx b/src/DomRenderer.jsx @@ -2,8 +2,8 @@ import * as THREE from 'three';\nimport React, {useState, useEffect, useRef} from 'react';\nimport gameManager from '../game.js';\nimport {camera} from '../renderer.js';\n+import cameraManager from '../camera-manager.js';\nimport {localPlayer} from '../players.js';\n-// import metaversefile from 'metaversefile';\n// import {CharacterBanner} from './CharacterBanner.jsx';\nimport domRenderEngine, {DomRenderEngine} from '../dom-renderer.jsx';\n@@ -246,7 +246,7 @@ const DomRendererChildren = ({\nconst DomRenderer = props => {\nconst [innerWidth, setInnerWidth] = useState(window.innerWidth);\nconst [innerHeight, setInnerHeight] = useState(window.innerHeight);\n- const [fov, setFov] = useState(_getFov());\n+ const [fov, setFov] = useState(_getFov);\nconst iframeContainerRef = useRef();\nuseEffect(() => {\n@@ -256,8 +256,14 @@ const DomRenderer = props => {\nsetFov(_getFov());\n};\nwindow.addEventListener('resize', resize);\n+ const fovchange = (/*e*/) => {\n+ // const {fov} = e.data;\n+ setFov(_getFov());\n+ };\n+ cameraManager.addEventListener('fovchange', fovchange);\nreturn () => {\nwindow.removeEventListener('resize', resize);\n+ cameraManager.removeEventListener('fovchange', fovchange);\n};\n}, []);\n"
    },
    {
        "org_diff": "diff --git a/scripts/flow/xplat.js b/a/scripts/flow/xplat.js @@ -9,6 +9,7 @@\n \n declare module 'ReactNativeInternalFeatureFlags' {\n   declare export var alwaysThrottleRetries: boolean;\n+  declare export var enableComponentStackLocations: boolean;\n   declare export var enableDeferRootSchedulingToMicrotask: boolean;\n   declare export var enableUseRefAccessWarning: boolean;\n   declare export var passChildrenWhenCloningPersistedNodes: boolean;",
        "org_msg": "Add `enableComponentStackLocations` to `ReactNativeInternalFeatureFlags` libdef (#28424)\n\n## Summary\r\n\r\nFixing something I accidentally broke this in\r\nhttps://github.com/facebook/react/commit/25dbb3556ee9802c18f45c278abf3c33711237eb.\r\n\r\n## How did you test this change?\r\n\r\nRan the following successfully:\r\n\r\n```\r\n$ yarn flow dom-node\r\n```",
        "sim_msg": "Fix for issue Add flow types to flow declaration file for feature opt-in functions",
        "sim_diff": "diff --git a/src/types/index.js.flow b/src/types/index.js.flow @@ -105,3 +105,8 @@ declare export function createDraft<T>(base: T): T\n* Optionally a patch-listener can be provided to gather the patches that are needed to construct the object.\n*/\ndeclare export function finishDraft<T>(base: T, listener?: PatchListener): T\n+\n+declare export function enableES5(): void\n+declare export function enableMapSet(): void\n+declare export function enablePatches(): void\n+declare export function enableAllPlugins(): void\n"
    },
    {
        "org_diff": "diff --git a/packages/react-devtools-shared/src/devtools/views/Components/Tree.js b/a/packages/react-devtools-shared/src/devtools/views/Components/Tree.js @@ -538,7 +538,7 @@ function updateIndentationSizeVar(\n }\n \n // $FlowFixMe[missing-local-annot]\n-function InnerElementType({children, style, ...rest}) {\n+function InnerElementType({children, style}) {\n   const {ownerID} = useContext(TreeStateContext);\n \n   const cachedChildWidths = useMemo<WeakMap<HTMLElement, number>>(\n@@ -586,11 +586,7 @@ function InnerElementType({children, style, ...rest}) {\n   // A lot of options were considered; this seemed the one that requires the least code.\n   // See https://github.com/bvaughn/react-devtools-experimental/issues/9\n   return (\n-    <div\n-      className={styles.InnerElementType}\n-      ref={divRef}\n-      style={style}\n-      {...rest}>\n+    <div className={styles.InnerElementType} ref={divRef} style={style}>\n       <SelectedTreeHighlight />\n       {children}\n     </div>",
        "org_msg": "fix[devtools]: fixed Tree indentation logic after updating react-windows (#28421)\n\nForward-fixing the indentation after landing\r\nhttps://github.com/facebook/react/pull/28408. Could potentially be\r\nrelated to `ref` changes in `react`, but haven't validated yet.\r\n\r\nHaven't occured while testing the previous PR, but reproduced while\r\ntesting the https://github.com/facebook/react/pull/28418, for which I've\r\nrebuilt all dependencies, including `react`.\r\n\r\nThis change basically removes the props passing from original parent,\r\n`rest` should include only `ref`:\r\nhttps://github.com/bvaughn/react-window/blob/efad3d8909753fd74aad7c47dc902b26f0919651/src/createListComponent.js#L382",
        "sim_msg": "Added docs to stack navigation",
        "sim_diff": "diff --git a/src/components/appNavigation/stackNavigation.js b/src/components/appNavigation/stackNavigation.js @@ -9,24 +9,34 @@ import { Button } from 'react-native-paper'\n/**\n* Component wrapping the stack navigator.\n- * It holds the pop push gotToRoot logic and inserts on top the NavBar component.\n+ * It holds the pop push gotToRoot goToParent logic and inserts on top the NavBar component.\n+ * This navigation actions are being passed via navigationConfig to children components\n*/\nclass AppView extends Component<{ descriptors: any, navigation: any, navigationConfig: any }> {\nstack = []\n+ /**\n+ * Pops from stack\n+ * If there is no screen on the stack navigates to initial screen on stack (goToRoot)\n+ * If we are currently in the first screen go to ths screen that created the stack (toToParent)\n+ */\npop = () => {\n- const { navigation, navigationConfig } = this.props\n+ const { navigation } = this.props\nconst nextRoute = this.stack.pop()\nif (nextRoute) {\nnavigation.navigate(nextRoute)\n} else if (navigation.state.index !== 0) {\n- navigation.navigate(navigation.state.routes[0])\n- } else {\nthis.goToRoot()\n+ } else {\n+ this.goToParent()\n}\n}\n+ /**\n+ * Push a route to the stack\n+ * The stack is maintained in stack property to be able to navigate back and forward\n+ */\npush = (nextRoute, params) => {\nconst { navigation } = this.props\nconst activeKey = navigation.state.routes[navigation.state.index].key\n@@ -34,7 +44,18 @@ class AppView extends Component<{ descriptors: any, navigation: any, navigationC\nnavigation.navigate(nextRoute, params)\n}\n+ /**\n+ * Navigates to root screen. First on stack\n+ */\ngoToRoot = () => {\n+ const { navigation } = this.props\n+ navigation.navigate(navigation.state.routes[0])\n+ }\n+\n+ /**\n+ * Navigates to the screen that created the stack (backRouteName)\n+ */\n+ goToParent = () => {\nconst { navigation, navigationConfig } = this.props\nif (navigationConfig.backRouteName) {\n@@ -53,7 +74,7 @@ class AppView extends Component<{ descriptors: any, navigation: any, navigationC\n<SceneView\nnavigation={descriptor.navigation}\ncomponent={descriptor.getComponent()}\n- screenProps={{ ...navigationConfig, push: this.push, goToRoot: this.goToRoot }}\n+ screenProps={{ ...navigationConfig, push: this.push, goToRoot: this.goToRoot, goToParent: this.goToParent }}\n/>\n</View>\n)\n@@ -107,9 +128,9 @@ export const PushButton = (props: ButtonProps) => {\n* @param {ButtonProps} props\n*/\nexport const BackButton = (props: ButtonProps) => {\n- const { disabled, navigationConfig, routeName, children, mode, color } = props\n+ const { disabled, navigationConfig, children, mode, color } = props\nreturn (\n- <Button mode={mode || 'text'} color={color || '#575757'} disabled={disabled} onPress={navigationConfig.goToRoot}>\n+ <Button mode={mode || 'text'} color={color || '#575757'} disabled={disabled} onPress={navigationConfig.goToParent}>\n{children}\n</Button>\n)\n"
    },
    {
        "org_diff": "diff --git a/packages/react-reconciler/src/ReactInternalTypes.js b/a/packages/react-reconciler/src/ReactInternalTypes.js @@ -157,12 +157,6 @@ export type Fiber = {\n   subtreeFlags: Flags,\n   deletions: Array<Fiber> | null,\n \n-  // The first and last fiber with side-effect within this subtree. This allows\n-  // us to reuse a slice of the linked list when we reuse the work done within\n-  // this fiber.\n-  firstEffect: Fiber | null,\n-  lastEffect: Fiber | null,\n-\n   lanes: Lanes,\n   childLanes: Lanes,\n ",
        "org_msg": "refactor: remove dead types of fiber (#28405)\n\nThe properties `firstEffect` and `lastEffect` of the Fiber are currently\r\nnot being used and are considered to be dead code, and can be removed.",
        "sim_msg": "Pass props through to wrapped components",
        "sim_diff": "diff --git a/packages/idyll-document/src/index.js b/packages/idyll-document/src/index.js @@ -142,10 +142,15 @@ class Wrapper extends React.PureComponent {\n);\n}\n- const { __expr__, __vars__, hasError, ...state } = this.state;\n- return React.Children.map(this.props.children, (c, i) => {\n- return React.cloneElement(c, {key: `${this.key}-${i}`, ...state});\n- });\n+ const { __expr__, __vars__, hasError, ...state } = this.state\n+ const { children, ...passThruProps } = this.props\n+ return React.Children.map(children, (c, i) => {\n+ return React.cloneElement(c, {\n+ key: `${this.key}-${i}`,\n+ ...state,\n+ ...passThruProps,\n+ })\n+ })\n}\n}\n"
    },
    {
        "org_diff": "diff --git a/packages/react/src/__tests__/ReactCreateRef-test.js b/a/packages/react/src/__tests__/ReactCreateRef-test.js @@ -10,14 +10,16 @@\n 'use strict';\n \n let React;\n-let ReactTestRenderer;\n+let ReactDOM;\n+let ReactDOMClient;\n \n describe('ReactCreateRef', () => {\n   beforeEach(() => {\n     jest.resetModules();\n \n     React = require('react');\n-    ReactTestRenderer = require('react-test-renderer');\n+    ReactDOM = require('react-dom');\n+    ReactDOMClient = require('react-dom/client');\n   });\n \n   it('should warn in dev if an invalid ref object is provided', () => {\n@@ -31,12 +33,15 @@ describe('ReactCreateRef', () => {\n       }\n     }\n \n+    const root = ReactDOMClient.createRoot(document.createElement('div'));\n     expect(() =>\n-      ReactTestRenderer.create(\n-        <Wrapper>\n-          <div ref={{}} />\n-        </Wrapper>,\n-      ),\n+      ReactDOM.flushSync(() => {\n+        root.render(\n+          <Wrapper>\n+            <div ref={{}} />\n+          </Wrapper>,\n+        );\n+      }),\n     ).toErrorDev(\n       'Unexpected ref object provided for div. ' +\n         'Use either a ref-setter function or React.createRef().\\n' +\n@@ -45,11 +50,13 @@ describe('ReactCreateRef', () => {\n     );\n \n     expect(() =>\n-      ReactTestRenderer.create(\n-        <Wrapper>\n-          <ExampleComponent ref={{}} />\n-        </Wrapper>,\n-      ),\n+      ReactDOM.flushSync(() => {\n+        root.render(\n+          <Wrapper>\n+            <ExampleComponent ref={{}} />\n+          </Wrapper>,\n+        );\n+      }),\n     ).toErrorDev(\n       'Unexpected ref object provided for ExampleComponent. ' +\n         'Use either a ref-setter function or React.createRef().\\n' +",
        "org_msg": "Remove RTR from ReactCreateRef-test (#28386)\n\n## Summary\r\n\r\nCleaning up internal usage of ReactTestRenderer\r\n\r\n## How did you test this change?\r\n\r\n`yarn test packages/react/src/__tests__/ReactCreateRef-test.js`",
        "sim_msg": "[utils] Added test for Ref utils",
        "sim_diff": "diff --git a/semcore/utils/__tests__/index.test.tsx b/semcore/utils/__tests__/index.test.tsx import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { testing, snapshot } from '@semcore/jest-preset-ui';\n-\n-const { cleanup } = testing;\n-\nimport isNode from '../src/isNode';\nimport compose from '../src/compose';\nimport useCss from '../src/use/useCss';\n@@ -11,6 +8,9 @@ import resolveColor, { shade, opacity } from '../src/color';\nimport { interpolate } from '../src/enhances/i18nEnhance';\nimport assignProps, { assignHandlers } from '../src/assignProps';\nimport reactToText from '../src/reactToText';\n+import { getRef, setRef, getNodeByRef } from '../src/ref';\n+\n+const { cleanup } = testing;\ndescribe('Utils CSS in JS', () => {\nafterEach(cleanup);\n@@ -421,3 +421,53 @@ describe('Utils reactToText', () => {\n).toBe('multi component');\n});\n});\n+\n+describe('Utils ref', () => {\n+ afterEach(cleanup);\n+\n+ test('[getRef] support element', () => {\n+ const div = document.createElement('div');\n+ expect(getRef(div)).toBe(div);\n+ });\n+\n+ test('[getRef] support ref function', () => {\n+ const div = document.createElement('div');\n+ const ref = React.createRef<HTMLDivElement>();\n+ // @ts-ignore\n+ ref.current = div;\n+ expect(getRef(ref)).toBe(div);\n+ });\n+\n+ test('[getRef] support unknown', () => {\n+ expect(getRef(undefined)).toBe(null);\n+ });\n+\n+ test('[setRef] support ref', () => {\n+ const ref = React.createRef<HTMLDivElement>();\n+ const div = document.createElement('div');\n+ setRef(ref, div);\n+ expect(ref.current).toBe(div);\n+ });\n+\n+ test('[setRef] support function', () => {\n+ const fn = jest.fn();\n+ const div = document.createElement('div');\n+ setRef(fn, div);\n+ expect(fn).toHaveBeenCalledWith(div);\n+ });\n+\n+ test('[getNodeByRef] support function', () => {\n+ const div = document.createElement('div');\n+ const fn = jest.fn(() => div);\n+ // setRef(fn, div)\n+ expect(getNodeByRef(fn)).toBe(div);\n+ });\n+\n+ test('[getNodeByRef] support ref', () => {\n+ const div = document.createElement('div');\n+ const ref = React.createRef<HTMLDivElement>();\n+ // @ts-ignore\n+ ref.current = div;\n+ expect(getNodeByRef(ref)).toBe(div);\n+ });\n+});\n"
    },
    {
        "org_diff": "diff --git a/.github/workflows/commit_artifacts.yml b/a/.github/workflows/commit_artifacts.yml @@ -11,7 +11,7 @@ jobs:\n       www_branch_count: ${{ steps.check_branches.outputs.www_branch_count }}\n       fbsource_branch_count: ${{ steps.check_branches.outputs.fbsource_branch_count }}\n     steps:\n-      - uses: actions/checkout@v3\n+      - uses: actions/checkout@v4\n       - name: \"Check branches\"\n         id: check_branches\n         run: |\n@@ -179,7 +179,7 @@ jobs:\n     if: ${{ (github.ref == 'refs/heads/main' && needs.download_artifacts.outputs.www_branch_count == '0') || github.ref == 'refs/heads/meta-www' }}\n     runs-on: ubuntu-latest\n     steps:\n-      - uses: actions/checkout@v3\n+      - uses: actions/checkout@v4\n         with:\n           ref: builds/facebook-www\n       - name: Ensure clean directory\n@@ -215,7 +215,7 @@ jobs:\n     runs-on: ubuntu-latest\n     if: ${{ (github.ref == 'refs/heads/main' && needs.download_artifacts.outputs.fbsource_branch_count == '0') || github.ref == 'refs/heads/meta-fbsource' }}\n     steps:\n-      - uses: actions/checkout@v3\n+      - uses: actions/checkout@v4\n         with:\n           ref: main\n           repository: facebook/react-fbsource-import",
        "org_msg": "Bump actions/checkout (#28383)",
        "sim_msg": "ci: optimize statuses in the deploy workflow",
        "sim_diff": "diff --git a/.github/workflows/deploy-to-artifacts.yml b/.github/workflows/deploy-to-artifacts.yml @@ -15,9 +15,12 @@ on:\ndescription: 'The base commit ref'\njobs:\n- pre:\n+ build:\nruns-on: ubuntu-latest\nenvironment: CI\n+ needs: pre\n+ outputs:\n+ sha: ${{steps.prep.outputs.sha}}\nsteps:\n- uses: actions/github-script@v3\nwith:\n@@ -31,13 +34,6 @@ jobs:\nstate: 'pending',\ntarget_url: `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`\n});\n- build:\n- runs-on: ubuntu-latest\n- environment: CI\n- needs: pre\n- outputs:\n- sha: ${{steps.prep.outputs.sha}}\n- steps:\n- id: prep\nuses: actions/github-script@v3\nwith:\n@@ -77,6 +73,18 @@ jobs:\nruns-on: ubuntu-latest\nneeds: pre\nsteps:\n+ - uses: actions/github-script@v3\n+ with:\n+ github-token: ${{secrets.ACTIVE_TOKEN}}\n+ script: |\n+ await github.repos.createCommitStatus({\n+ owner: context.repo.owner,\n+ repo: context.repo.repo,\n+ sha: context.payload.inputs.sha,\n+ context: context.workflow,\n+ state: 'pending',\n+ target_url: `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`\n+ });\n- uses: actions/checkout@v2\nwith:\nref: ${{ github.event.inputs.sha }}\n@@ -132,12 +140,6 @@ jobs:\ntasks.push('test-server-stable.yml');\nawait Promise.all(tasks.map(task => dispatchWorkflow(task)));\n-\n- post:\n- runs-on: ubuntu-latest\n- environment: CI\n- needs: test\n- steps:\n- uses: actions/github-script@v3\nwith:\ngithub-token: ${{secrets.ACTIVE_TOKEN}}\n@@ -150,13 +152,8 @@ jobs:\nstate: 'success',\ntarget_url: `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}#artifacts`\n});\n- failure:\n- runs-on: ubuntu-latest\n- environment: CI\n- needs: test\n- if: failure() || cancelled()\n- steps:\n- uses: actions/github-script@v3\n+ if: failure() || cancelled()\nwith:\ngithub-token: ${{secrets.ACTIVE_TOKEN}}\nscript: |\n@@ -169,4 +166,3 @@ jobs:\ntarget_url: `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`\n});\n\\ No newline at end of file\n-\n"
    },
    {
        "org_diff": "diff --git a/packages/react-reconciler/src/ReactInternalTypes.js b/a/packages/react-reconciler/src/ReactInternalTypes.js @@ -157,9 +157,6 @@ export type Fiber = {\n   subtreeFlags: Flags,\n   deletions: Array<Fiber> | null,\n \n-  // Singly linked list fast path to the next fiber with side-effects.\n-  nextEffect: Fiber | null,\n-\n   // The first and last fiber with side-effect within this subtree. This allows\n   // us to reuse a slice of the linked list when we reuse the work done within\n   // this fiber.",
        "org_msg": "refactor: remove dead code of fiber (#28389)\n\nThe `nextEffect` property of the `fiber` is currently not being used and\r\nhas become dead code. It can be safely removed.",
        "sim_msg": "docs(yoga/doc): remove unused return",
        "sim_diff": "diff --git a/packages/doc/src/components/Navigation/Navigation.jsx b/packages/doc/src/components/Navigation/Navigation.jsx @@ -196,8 +196,7 @@ ListItem.propTypes = {\nprefix: bool.isRequired,\n};\n-const List = ({ tree, level, toggleMenu, prefix }) => {\n- return (\n+const List = ({ tree, level, toggleMenu, prefix }) => (\n<StyledList>\n{Object.values(tree)\n.sort((t1, t2) => (t1.order > t2.order ? 1 : -1))\n@@ -215,7 +214,6 @@ const List = ({ tree, level, toggleMenu, prefix }) => {\n))}\n</StyledList>\n);\n-};\nList.propTypes = {\ntree: shape({}).isRequired,\n"
    },
    {
        "org_diff": "diff --git a/packages/react-dom/src/__tests__/ReactDOMInput-test.js b/a/packages/react-dom/src/__tests__/ReactDOMInput-test.js @@ -1707,7 +1707,7 @@ describe('ReactDOMInput', () => {\n     assertInputTrackingIsCurrent(container);\n   });\n \n-  it('should control radio buttons if the tree updates during render', () => {\n+  it('should control radio buttons if the tree updates during render in legacy mode', async () => {\n     container.remove();\n     container = document.createElement('div');\n     document.body.appendChild(container);",
        "org_msg": "Annotate legacy mode tests in ReactDOMInput (#28333)",
        "sim_msg": "chore(document.elementsFromPoint): update unit tests",
        "sim_diff": "diff --git a/polyfills/document/elementsFromPoint/tests.js b/polyfills/document/elementsFromPoint/tests.js /* globals proclaim */\ndescribe('document.elementsFromPoint', function () {\n+ function getElementCenter(el) {\n+ var elBounds = el.getBoundingClientRect()\n+\n+ var x = elBounds.x + elBounds.width / 2;\n+ var y = elBounds.x + elBounds.height / 2;\n+\n+ return [x, y];\n+ }\n+\nit('returns all the elements at the specified coordinates', function() {\nvar container = document.body.appendChild(document.createElement('div'));\nvar p = container.appendChild(document.createElement('p'));\np.innerText = 'Some text';\n- var elements = document.elementsFromPoint(30, 20);\n+ var center = getElementCenter(p);\n+\n+ var elements = document.elementsFromPoint(center[0], center[1]);\nelements = [].map.call(elements, function(e) {\nreturn e.tagName.toLowerCase();\n});\n@@ -25,7 +36,9 @@ describe('document.elementsFromPoint', function () {\np.innerText = 'Some text';\np.style.setProperty('pointer-events', expectedValue, expectedPriority);\n- document.elementsFromPoint(30, 20);\n+ var center = getElementCenter(p);\n+\n+ document.elementsFromPoint(center[0], center[1]);\nvar propertyValue = p.style.getPropertyValue('pointer-events');\nvar propertyPriority = p.style.getPropertyPriority('pointer-events');\n"
    },
    {
        "org_diff": "diff --git a/packages/react/src/__tests__/ReactJSXTransformIntegration-test.js b/a/packages/react/src/__tests__/ReactJSXTransformIntegration-test.js @@ -11,7 +11,6 @@\n \n let React;\n let ReactDOMClient;\n-let ReactTestUtils;\n let act;\n \n // TODO: Historically this module was used to confirm that the JSX transform\n@@ -30,7 +29,6 @@ describe('ReactJSXTransformIntegration', () => {\n \n     React = require('react');\n     ReactDOMClient = require('react-dom/client');\n-    ReactTestUtils = require('react-dom/test-utils');\n     act = require('internal-test-utils').act;\n \n     Component = class extends React.Component {\n@@ -213,22 +211,34 @@ describe('ReactJSXTransformIntegration', () => {\n     expect(instance.props.fruit).toBe('persimmon');\n   });\n \n-  it('should normalize props with default values', () => {\n+  it('should normalize props with default values', async () => {\n     class NormalizingComponent extends React.Component {\n       render() {\n         return <span>{this.props.prop}</span>;\n       }\n     }\n     NormalizingComponent.defaultProps = {prop: 'testKey'};\n \n-    const instance = ReactTestUtils.renderIntoDocument(\n-      <NormalizingComponent />,\n-    );\n+    let container = document.createElement('div');\n+    let root = ReactDOMClient.createRoot(container);\n+    let instance;\n+    await act(() => {\n+      root.render(\n+        <NormalizingComponent ref={current => (instance = current)} />,\n+      );\n+    });\n+\n     expect(instance.props.prop).toBe('testKey');\n \n-    const inst2 = ReactTestUtils.renderIntoDocument(\n-      <NormalizingComponent prop={null} />,\n-    );\n+    container = document.createElement('div');\n+    root = ReactDOMClient.createRoot(container);\n+    let inst2;\n+    await act(() => {\n+      root.render(\n+        <NormalizingComponent prop={null} ref={current => (inst2 = current)} />,\n+      );\n+    });\n+\n     expect(inst2.props.prop).toBe(null);\n   });\n });",
        "org_msg": "Remove ReactTestUtils from ReactJSXTransformIntegration (#28338)",
        "sim_msg": "[test] Conformance to handle wrapped elements",
        "sim_diff": "diff --git a/test/utils/describeConformanceV5.js b/test/utils/describeConformanceV5.js @@ -43,7 +43,7 @@ function testThemeDefaultProps(element, getOptions) {\ndescribe('theme: default components', () => {\nit(\"respect theme's defaultProps\", () => {\nconst testProp = 'data-id';\n- const { muiName } = getOptions();\n+ const { muiName, render: testRender = render } = getOptions();\nconst theme = createMuiTheme({\ncomponents: {\n[muiName]: {\n@@ -54,7 +54,7 @@ function testThemeDefaultProps(element, getOptions) {\n},\n});\n- const { container } = render(<ThemeProvider theme={theme}>{element}</ThemeProvider>);\n+ const { container } = testRender(<ThemeProvider theme={theme}>{element}</ThemeProvider>);\nexpect(container.firstChild).to.have.attribute(testProp, 'testProp');\n});\n@@ -75,8 +75,7 @@ function testThemeStyleOverrides(element, getOptions) {\nif (/jsdom/.test(window.navigator.userAgent)) {\nthis.skip();\n}\n-\n- const { muiName, testStateOverrides } = getOptions();\n+ const { muiName, testStateOverrides, render: testRender = render } = getOptions();\nif (!testStateOverrides) {\nreturn;\n@@ -96,13 +95,14 @@ function testThemeStyleOverrides(element, getOptions) {\n},\n});\n- const { container } = render(\n+ const { container } = testRender(\n<ThemeProvider theme={theme}>\n{React.cloneElement(element, {\n[testStateOverrides.prop]: testStateOverrides.value,\n})}\n</ThemeProvider>,\n);\n+\nexpect(container.firstChild).to.toHaveComputedStyle(testStyle);\n});\n@@ -111,7 +111,7 @@ function testThemeStyleOverrides(element, getOptions) {\nthis.skip();\n}\n- const { muiName, testDeepOverrides } = getOptions();\n+ const { muiName, testDeepOverrides, render: testRender = render } = getOptions();\nconst testStyle = {\nmarginTop: '13px',\n@@ -139,7 +139,7 @@ function testThemeStyleOverrides(element, getOptions) {\n},\n});\n- const { container } = render(<ThemeProvider theme={theme}>{element}</ThemeProvider>);\n+ const { container } = testRender(<ThemeProvider theme={theme}>{element}</ThemeProvider>);\nexpect(container.firstChild).to.toHaveComputedStyle(testStyle);\n@@ -166,7 +166,7 @@ function testThemeStyleOverrides(element, getOptions) {\n},\n});\n- const { container: containerWithoutRootOverrides } = render(\n+ const { container: containerWithoutRootOverrides } = testRender(\n<ThemeProvider theme={themeWithoutRootOverrides}>{element}</ThemeProvider>,\n);\n@@ -198,7 +198,7 @@ function testThemeVariants(element, getOptions) {\nthis.skip();\n}\n- const { muiName, testVariantProps = {} } = getOptions();\n+ const { muiName, testVariantProps = {}, render: testRender = render } = getOptions();\nconst testStyle = {\nmarginTop: '13px',\n@@ -217,7 +217,7 @@ function testThemeVariants(element, getOptions) {\n},\n});\n- const { getByTestId } = render(\n+ const { getByTestId } = testRender(\n<ThemeProvider theme={theme}>\n{React.cloneElement(element, { ...testVariantProps, 'data-testid': 'with-props' })}\n{React.cloneElement(element, { 'data-testid': 'without-props' })}\n"
    },
    {
        "org_diff": "diff --git a/scripts/jest/setupTests.js b/a/scripts/jest/setupTests.js @@ -241,7 +241,7 @@ if (process.env.REACT_CLASS_EQUIVALENCE_TEST) {\n     global.Error = ErrorProxy;\n   }\n \n-  const expectTestToFail = async (callback, errorMsg) => {\n+  const expectTestToFail = async (callback, error) => {\n     if (callback.length > 0) {\n       throw Error(\n         'Gated test helpers do not support the `done` callback. Return a ' +\n@@ -261,12 +261,12 @@ if (process.env.REACT_CLASS_EQUIVALENCE_TEST) {\n       // `afterEach` like we normally do. `afterEach` is too late because if it\n       // throws, we won't have captured it.\n       flushAllUnexpectedConsoleCalls();\n-    } catch (error) {\n+    } catch (testError) {\n       // Failed as expected\n       resetAllUnexpectedConsoleCalls();\n       return;\n     }\n-    throw Error(errorMsg);\n+    throw error;\n   };\n \n   const gatedErrorMessage = 'Gated test was expected to fail, but it passed.';\n@@ -284,8 +284,10 @@ if (process.env.REACT_CLASS_EQUIVALENCE_TEST) {\n     if (shouldPass) {\n       test(testName, callback);\n     } else {\n+      const error = new Error(gatedErrorMessage);\n+      Error.captureStackTrace(error, global._test_gate);\n       test(`[GATED, SHOULD FAIL] ${testName}`, () =>\n-        expectTestToFail(callback, gatedErrorMessage));\n+        expectTestToFail(callback, error));\n     }\n   };\n   global._test_gate_focus = (gateFn, testName, callback) => {\n@@ -302,8 +304,10 @@ if (process.env.REACT_CLASS_EQUIVALENCE_TEST) {\n     if (shouldPass) {\n       test.only(testName, callback);\n     } else {\n+      const error = new Error(gatedErrorMessage);\n+      Error.captureStackTrace(error, global._test_gate_focus);\n       test.only(`[GATED, SHOULD FAIL] ${testName}`, () =>\n-        expectTestToFail(callback, gatedErrorMessage));\n+        expectTestToFail(callback, error));\n     }\n   };\n ",
        "org_msg": "Improve stack trace when gated test fails (#28374)",
        "sim_msg": "End code block in test/README.md",
        "sim_diff": "diff --git a/test/README.md b/test/README.md @@ -26,14 +26,15 @@ For all unit tests, please use the return value from `test/utils/createRenderer`\nIt prepares the test suite and returns a function with the same interface as\n[`render` from `@testing-library/react`](https://testing-library.com/docs/react-testing-library/api#render).\n-````js\n+```js\ndescribe('test suite', () => {\n- const { render } = createRenderer()\n+ const { render } = createRenderer();\ntest('first', () => {\nrender(<input />);\n});\n-})\n+});\n+```\nFor new tests please use `expect` from the BDD testing approach. Prefer to use as expressive [matchers](https://www.chaijs.com/api/bdd/) as possible. This keeps\nthe tests readable, and, more importantly, the message if they fail as descriptive as possible.\n@@ -85,7 +86,7 @@ function SomeComponent({ variant }) {\nexpect(() => {\nrender(<SomeComponent variant=\"unexpected\" />);\n}).toErrorDev([\"That variant doesn't make sense.\", '`variant` is deprecated.']);\n-````\n+```\n```js\nfunction SomeComponent({ variant }) {\n"
    },
    {
        "org_diff": "diff --git a/scripts/flags/flags.js b/a/scripts/flags/flags.js @@ -318,11 +318,15 @@ for (const flag of allFlagsUniqueFlags) {\n let sorted = table;\n if (isDiff || argv.sort) {\n   const sortChannel = argToHeader(isDiff ? argv.diff[0] : argv.sort);\n-  sorted = Object.fromEntries(\n-    Object.entries(table).sort(([, rowA], [, rowB]) =>\n-      rowB[sortChannel].toString().localeCompare(rowA[sortChannel])\n-    )\n-  );\n+  const sortBy =\n+    sortChannel === 'flag'\n+      ? ([flagA], [flagB]) => {\n+          return flagA.localeCompare(flagB);\n+        }\n+      : ([, rowA], [, rowB]) => {\n+          return rowB[sortChannel].toString().localeCompare(rowA[sortChannel]);\n+        };\n+  sorted = Object.fromEntries(Object.entries(table).sort(sortBy));\n }\n \n if (argv.csv) {",
        "org_msg": "Fix crash running `yarn flags --sort flag` (#28344)",
        "sim_msg": "Fixes issue (Sorting on Bool col fails)\nCorrects typos in commit",
        "sim_diff": "diff --git a/ui/src/components/table/table-sort.js b/ui/src/components/table/table-sort.js @@ -38,7 +38,7 @@ export default {\nreturn sortDate(A, B) * dir\n}\nif (typeof A === 'boolean' && typeof B === 'boolean') {\n- return (a - b) * dir\n+ return (A - B) * dir\n}\n[A, B] = [A, B].map(s => (s + '').toLocaleString().toLowerCase())\n"
    },
    {
        "org_diff": "diff --git a/packages/react-dom/src/__tests__/ReactDOMSingletonComponents-test.js b/a/packages/react-dom/src/__tests__/ReactDOMSingletonComponents-test.js @@ -996,17 +996,17 @@ describe('ReactDOM HostSingleton', () => {\n   });\n \n   // https://github.com/facebook/react/issues/26128\n-  it('(#26128) does not throw when rendering at body', async () => {\n+  it('(#26128) does not throw when rendering at body in legacy mode', async () => {\n     ReactDOM.render(<div />, document.body);\n   });\n \n   // https://github.com/facebook/react/issues/26128\n-  it('(#26128) does not throw when rendering at <html>', async () => {\n+  it('(#26128) does not throw when rendering at <html> in legacy mode', async () => {\n     ReactDOM.render(<body />, document.documentElement);\n   });\n \n   // https://github.com/facebook/react/issues/26128\n-  it('(#26128) does not throw when rendering at document', async () => {\n+  it('(#26128) does not throw when rendering at document in legacy mode', async () => {\n     ReactDOM.render(<html />, document);\n   });\n });",
        "org_msg": "Annotate legacy mode test in ReactDOMSingletonComponents (#28339)\n\nThese are mainly regression tests for legacy root.",
        "sim_msg": "test(html-to-react): add test for option htmlparser2",
        "sim_diff": "diff --git a/test/html-to-react.js b/test/html-to-react.js @@ -137,5 +137,20 @@ describe('HTML to React', () => {\nassert.deepEqual(preactElement, Preact.createElement('p', {}, 'foo'));\n});\n});\n+\n+ describe('htmlparser2', () => {\n+ it('parses XHTML with xmlMode enabled', () => {\n+ // using self-closing syntax (`/>`) for non-void elements is invalid\n+ // which causes elements to nest instead of being rendered correctly\n+ // enabling htmlparser2 option xmlMode resolves this issue\n+ const html = '<ul><li/><li/></ul>';\n+ const options = { htmlparser2: { xmlMode: true } };\n+ const reactElements = parse(html, options);\n+ assert.strictEqual(\n+ render(reactElements),\n+ '<ul><li></li><li></li></ul>'\n+ );\n+ });\n+ });\n});\n});\n"
    },
    {
        "org_diff": "diff --git a/fixtures/flight/server/global.js b/a/fixtures/flight/server/global.js @@ -37,6 +37,7 @@ const React = require('react');\n \n const {renderToPipeableStream} = require('react-dom/server');\n const {createFromNodeStream} = require('react-server-dom-webpack/client');\n+const {PassThrough} = require('stream');\n \n const app = express();\n \n@@ -146,34 +147,33 @@ app.all('/', async function (req, res, next) {\n       // so we start by consuming the RSC payload. This needs a module\n       // map that reverse engineers the client-side path to the SSR path.\n \n-      // This is a bad hack to set the form state after SSR has started. It works\n-      // because we block the root component until we have the form state and\n-      // any form that reads it necessarily will come later. It also only works\n-      // because the formstate type is an object which may change in the future\n-      const lazyFormState = [];\n-\n-      let cachedResult = null;\n-      async function getRootAndFormState() {\n-        const {root, formState} = await createFromNodeStream(\n-          rscResponse,\n-          ssrManifest\n-        );\n-        // We shouldn't be assuming formState is an object type but at the moment\n-        // we have no way of setting the form state from within the render\n-        Object.assign(lazyFormState, formState);\n-        return root;\n-      }\n+      // We need to get the formState before we start rendering but we also\n+      // need to run the Flight client inside the render to get all the preloads.\n+      // The API is ambivalent about what's the right one so we need two for now.\n+\n+      // Tee the response into two streams so that we can do both.\n+      const rscResponse1 = new PassThrough();\n+      const rscResponse2 = new PassThrough();\n+\n+      rscResponse.pipe(rscResponse1);\n+      rscResponse.pipe(rscResponse2);\n+\n+      const {formState} = await createFromNodeStream(rscResponse1, ssrManifest);\n+      rscResponse1.end();\n+\n+      let cachedResult;\n       let Root = () => {\n         if (!cachedResult) {\n-          cachedResult = getRootAndFormState();\n+          // Read this stream inside the render.\n+          cachedResult = createFromNodeStream(rscResponse2, ssrManifest);\n         }\n-        return React.use(cachedResult);\n+        return React.use(cachedResult).root;\n       };\n       // Render it into HTML by resolving the client components\n       res.set('Content-type', 'text/html');\n       const {pipe} = renderToPipeableStream(React.createElement(Root), {\n         bootstrapScripts: mainJSChunks,\n-        formState: lazyFormState,\n+        formState: formState,\n       });\n       pipe(res);\n     } catch (e) {",
        "org_msg": "Consume the RSC stream twice in the Flight fixture (#28353)\n\nWe have an unresolved conflict where the Flight client wants to execute\r\ninside Fizz to emit side-effects like preloads (which can be early) into\r\nthat stream. However, the FormState API requires the state to be passed\r\nat the root, so if you're getting that through the RSC payload it's a\r\nCatch 22.\r\n\r\n#27314 used a hack to mutate the form state array to fill it in later,\r\nbut that doesn't actually work because it's not always an array. It's\r\nsometimes null like if there wasn't a POST. This lead to a bunch of\r\nhydration errors - which doesn't have the best error message for this\r\ncase neither. It probably should error with something that specifies\r\nthat it's form state.\r\n\r\nThis fixes it by teeing the stream into two streams and consuming it\r\nwith two Flight clients. One to read the form state and one to emit\r\nside-effects and read the root.",
        "sim_msg": "New app physics loop",
        "sim_diff": "diff --git a/runtime.js b/runtime.js @@ -21,6 +21,7 @@ import {portalMaterial} from './shaders.js';\nimport fx from './fx.js';\nimport hpManager from './hp-manager.js';\nimport npcManager from './npc-manager.js';\n+import {makeAppContextObject} from './api.js';\nimport {baseUnit, rarityColors} from './constants.js';\nconst localVector = new THREE.Vector3();\n@@ -309,6 +310,39 @@ const _loadRtfjs = async (file, {contentId = null, instanceId = null, parentUrl\nconst fn = m.default;\n// console.log('got fn', fn);\n+ const o = new THREE.Object3D();\n+ o.contentId = contentId;\n+ o.isRtfjs = true;\n+ o.getPhysicsIds = () => app.physicsIds;\n+ o.destroy = () => {\n+ appManager.destroyApp(appId);\n+\n+ (async () => {\n+ const roots = ReactThreeFiber._roots;\n+ const root = roots.get(rootDiv);\n+ const fiber = root?.fiber\n+ if (fiber) {\n+ const state = root?.store.getState()\n+ if (state) state.internal.active = false\n+ await new Promise((accept, reject) => {\n+ ReactThreeFiber.reconciler.updateContainer(null, fiber, null, () => {\n+ if (state) {\n+ // setTimeout(() => {\n+ state.events.disconnect?.()\n+ // state.gl?.renderLists?.dispose?.()\n+ // state.gl?.forceContextLoss?.()\n+ ReactThreeFiber.dispose(state)\n+ roots.delete(canvas)\n+ // if (callback) callback(canvas)\n+ // }, 500)\n+ }\n+ accept();\n+ });\n+ });\n+ }\n+ })();\n+ };\n+\nconst renderer = getRenderer();\nconst sizeVector = renderer.getSize(new THREE.Vector2());\nconst rootDiv = document.createElement('div');\n@@ -327,7 +361,9 @@ const _loadRtfjs = async (file, {contentId = null, instanceId = null, parentUrl\n};\nReactThreeFiber.render(\n- React.createElement(fn),\n+ React.createElement(fn, {\n+ app: appContextObject,\n+ }),\nrootDiv,\n{\ngl: renderer2,\n@@ -361,38 +397,9 @@ const _loadRtfjs = async (file, {contentId = null, instanceId = null, parentUrl\napp.addEventListener('frame', e => {\n_render();\n});\n+ app.rootObject = o;\n+ const appContextObject = makeAppContextObject(app);\n- const o = new THREE.Object3D();\n- o.contentId = contentId;\n- o.isRtfjs = true;\n- o.destroy = () => {\n- appManager.destroyApp(appId);\n-\n- (async () => {\n- const roots = ReactThreeFiber._roots;\n- const root = roots.get(rootDiv);\n- const fiber = root?.fiber\n- if (fiber) {\n- const state = root?.store.getState()\n- if (state) state.internal.active = false\n- await new Promise((accept, reject) => {\n- ReactThreeFiber.reconciler.updateContainer(null, fiber, null, () => {\n- if (state) {\n- // setTimeout(() => {\n- state.events.disconnect?.()\n- // state.gl?.renderLists?.dispose?.()\n- // state.gl?.forceContextLoss?.()\n- ReactThreeFiber.dispose(state)\n- roots.delete(canvas)\n- // if (callback) callback(canvas)\n- // }, 500)\n- }\n- accept();\n- });\n- });\n- }\n- })();\n- };\nreturn o;\n};\n"
    },
    {
        "org_diff": "diff --git a/scripts/rollup/build.js b/a/scripts/rollup/build.js @@ -575,6 +575,9 @@ function getPlugins(\n           sourcemapAfterClosure.sources = [preMinifiedFilename];\n           sourcemapAfterClosure.file = filename;\n \n+          // All our code is considered \"third-party\" and should be ignored by default.\n+          sourcemapAfterClosure.ignoreList = [0];\n+\n           // We'll write the pre-minified source to disk as a separate file.\n           // Because it sits on disk, there's no need to have it in the `sourcesContent` array.\n           // That also makes the file easier to read, and available for use by scripts.",
        "org_msg": "Add ignoreList to our source maps (#28310)\n\nAll our sources are considered third party and should be hidden in stack\r\ntraces unless expanded. Our internals aren't actionable anyway.\r\n\r\nThis doesn't really do much without tooling that actually forwards this\r\nto new generated source maps, in which case they probably just add them\r\nto ignorelist anyway.",
        "sim_msg": "fix(ui/build): Minify options",
        "sim_diff": "diff --git a/ui/build/script.build.javascript.js b/ui/build/script.build.javascript.js @@ -31,6 +31,42 @@ const rollupPluginsModern = [\nnodeResolve()\n]\n+const uglifyJsOptions = {\n+ compress: {\n+ // turn off flags with small gains to speed up minification\n+ arrows: false,\n+ collapse_vars: false,\n+ comparisons: false,\n+ computed_props: false,\n+ hoist_funs: false,\n+ hoist_props: false,\n+ hoist_vars: false,\n+ inline: false,\n+ loops: false,\n+ negate_iife: false,\n+ properties: false,\n+ reduce_funcs: false,\n+ reduce_vars: false,\n+ switches: false,\n+ toplevel: false,\n+ typeofs: false,\n+\n+ // a few flags with noticable gains/speed ratio\n+ booleans: true,\n+ if_return: true,\n+ sequences: true,\n+ unused: true,\n+\n+ // required features to drop conditional branches\n+ conditionals: true,\n+ dead_code: true,\n+ evaluate: true\n+ },\n+ mangle: {\n+ safari10: true\n+ }\n+}\n+\nconst builds = [\n{ // Generic prod entry (client-side only; NOT used by Quasar CLI)\nrollup: {\n@@ -239,11 +275,7 @@ function buildEntry (config) {\nreturn code\n}\n- const minified = uglify.minify(code, {\n- compress: {\n- ecma: 6\n- }\n- })\n+ const minified = uglify.minify(code, uglifyJsOptions)\nif (minified.error) {\nreturn Promise.reject(minified.error)\n"
    },
    {
        "org_diff": "diff --git a/packages/react-devtools-shared/src/devtools/views/hooks.js b/a/packages/react-devtools-shared/src/devtools/views/hooks.js @@ -219,15 +219,18 @@ export function useModalDismissSignal(\n       return () => {};\n     }\n \n-    const handleDocumentKeyDown = (event: any) => {\n+    const handleRootNodeKeyDown = (event: KeyboardEvent) => {\n       if (event.key === 'Escape') {\n         dismissCallback();\n       }\n     };\n \n-    const handleDocumentClick = (event: any) => {\n+    const handleRootNodeClick: MouseEventHandler = event => {\n       if (\n         modalRef.current !== null &&\n+        /* $FlowExpectedError[incompatible-call] Instead of dealing with possibly multiple realms\n+         and multiple Node references to comply with Flow (e.g. checking with `event.target instanceof Node`)\n+         just delegate it to contains call */\n         !modalRef.current.contains(event.target)\n       ) {\n         event.stopPropagation();\n@@ -237,7 +240,7 @@ export function useModalDismissSignal(\n       }\n     };\n \n-    let ownerDocument = null;\n+    let modalRootNode = null;\n \n     // Delay until after the current call stack is empty,\n     // in case this effect is being run while an event is currently bubbling.\n@@ -248,12 +251,12 @@ export function useModalDismissSignal(\n       // It's important to listen to the ownerDocument to support the browser extension.\n       // Here we use portals to render individual tabs (e.g. Profiler),\n       // and the root document might belong to a different window.\n-      const div = modalRef.current;\n-      if (div != null) {\n-        ownerDocument = div.ownerDocument;\n-        ownerDocument.addEventListener('keydown', handleDocumentKeyDown);\n+      const modalDOMElement = modalRef.current;\n+      if (modalDOMElement != null) {\n+        modalRootNode = modalDOMElement.getRootNode();\n+        modalRootNode.addEventListener('keydown', handleRootNodeKeyDown);\n         if (dismissOnClickOutside) {\n-          ownerDocument.addEventListener('click', handleDocumentClick, true);\n+          modalRootNode.addEventListener('click', handleRootNodeClick, true);\n         }\n       }\n     }, 0);\n@@ -263,9 +266,9 @@ export function useModalDismissSignal(\n         clearTimeout(timeoutID);\n       }\n \n-      if (ownerDocument !== null) {\n-        ownerDocument.removeEventListener('keydown', handleDocumentKeyDown);\n-        ownerDocument.removeEventListener('click', handleDocumentClick, true);\n+      if (modalRootNode !== null) {\n+        modalRootNode.removeEventListener('keydown', handleRootNodeKeyDown);\n+        modalRootNode.removeEventListener('click', handleRootNodeClick, true);\n       }\n     };\n   }, [modalRef, dismissCallback, dismissOnClickOutside]);",
        "org_msg": "fix[devtools/useModalDismissSignal]: use getRootNode for shadow root case support (#28145)\n\nIn our custom implementation for handling modals dismiss signal, we use\r\nelement's `ownerDocument` field, which expectedly doesn't work well with\r\nshadow root. Now using\r\n[`getRootNode`](https://developer.mozilla.org/en-US/docs/Web/API/Node/getRootNode)\r\ninstead of `ownerDocument` to support shadow root case.\r\n\r\nWithout this, if RDT Frontend is hosted inside the shadow root, the\r\nmodal gets closed after any click, including on the buttons hosted by\r\nmodal:\r\n\r\nhttps://github.com/facebook/react/blob/00d42ac3542179c55f936f395ede7abaeb5900a3/packages/react-devtools-shared/src/devtools/views/hooks.js#L228-L238\r\n\r\nTest plan:\r\n- Modals work as expected for Chrome DevTools integration\r\n- Modals work as expected at every other surfaces: browser extension,\r\nelectron wrapper for RN, inline version for web",
        "sim_msg": "Allow scrolling of ScrollView containing modal",
        "sim_diff": "diff --git a/source/views/panels/ModalEventHandler.js b/source/views/panels/ModalEventHandler.js import { Class } from '../../core/Core';\nimport Obj from '../../foundation/Object';\nimport '../../foundation/EventTarget'; // For Function#on\n+import ScrollView from '../containers/ScrollView';\n+\n+const inView = function ( view, event ) {\n+ let targetView = event.targetView;\n+ while ( targetView && targetView !== view ) {\n+ targetView = targetView.get( 'parentView' );\n+ }\n+ return !!targetView;\n+};\nconst ModalEventHandler = Class({\n@@ -11,15 +20,6 @@ const ModalEventHandler = Class({\nthis._seenMouseDown = false;\n},\n- inView ( event ) {\n- let targetView = event.targetView;\n- const view = this.get( 'view' );\n- while ( targetView && targetView !== view ) {\n- targetView = targetView.get( 'parentView' );\n- }\n- return !!targetView;\n- },\n-\n// If a user clicks outside the menu we want to close it. But we don't want\n// the mousedown/mouseup/click events to propagate to what's below. The\n// events fire in that order, and not all are guaranteed to fire (the user\n@@ -37,24 +37,26 @@ const ModalEventHandler = Class({\n// before hiding on click. On Android/iOS, we will not see a mousedown\n// event, so we also count a touchstart event.\nhandleMouse: function ( event ) {\n+ const view = this.get( 'view' );\nconst type = event.type;\n- let view;\n- if ( !event.seenByModal && !this.inView( event ) ) {\n+ if ( !event.seenByModal && !inView( view, event ) ) {\nevent.stopPropagation();\nif ( type === 'mousedown' ) {\nthis._seenMouseDown = true;\n} else if ( type === 'click' ) {\nevent.preventDefault();\nif ( this._seenMouseDown ) {\n- view = this.get( 'view' );\nif ( view.clickedOutside ) {\nview.clickedOutside( event );\n}\n}\n} else if ( type === 'wheel' ) {\n+ const scrollView = this.get( 'view' ).getParent( ScrollView );\n+ if ( !scrollView || !inView( scrollView, event ) ) {\nevent.preventDefault();\n}\n}\n+ }\nevent.seenByModal = true;\n}.on( 'click', 'mousedown', 'mouseup', 'tap', 'wheel' ),\n@@ -66,10 +68,10 @@ const ModalEventHandler = Class({\n}.on( 'scroll' ),\nhandleKeys: function ( event ) {\n- if ( !event.seenByModal && !this.inView( event ) ) {\n+ const view = this.get( 'view' );\n+ if ( !event.seenByModal && !inView( view, event ) ) {\nevent.stopPropagation();\n// View may be interested in key events:\n- const view = this.get( 'view' );\nif ( view.keyOutside ) {\nview.keyOutside( event );\n}\n@@ -78,7 +80,8 @@ const ModalEventHandler = Class({\n}.on( 'keypress', 'keydown', 'keyup' ),\nhandleTouch: function ( event ) {\n- if ( !event.seenByModal && !this.inView( event ) ) {\n+ const view = this.get( 'view' );\n+ if ( !event.seenByModal && !inView( view, event ) ) {\nevent.preventDefault();\nevent.stopPropagation();\n// Clicks outside should now close the modal.\n"
    },
    {
        "org_diff": "diff --git a/packages/react/package.json b/a/packages/react/package.json @@ -15,6 +15,7 @@\n     \"cjs/\",\n     \"umd/\",\n     \"jsx-runtime.js\",\n+    \"jsx-runtime.react-server.js\",\n     \"jsx-dev-runtime.js\",\n     \"react.react-server.js\"\n   ],",
        "org_msg": "Add jsx-runtime.react-server.js to file allowlist (#28301)\n\nhttps://github.com/facebook/react/pull/28217 doesn't work without this\r\nsince it's not included in the files list.\r\n\r\nSee https://github.com/dai-shi/waku/pull/467#issuecomment-1936965080.\r\n\r\nThis should fix that.",
        "sim_msg": "rollback to webpack1",
        "sim_diff": "diff --git a/package.json b/package.json \"react\": \"^15.3.2\",\n\"react-addons-test-utils\": \"^15.3.2\",\n\"react-dom\": \"^15.3.2\",\n+ \"react-test-renderer\": \"^15.5.4\",\n\"run-sequence\": \"^1.2.2\",\n\"sass-loader\": \"^6.0.3\",\n\"sinon\": \"^2.1.0\",\n\"style-loader\": \"^0.16.1\",\n- \"webpack\": \"^2.4.1\",\n- \"webpack-dev-server\": \"^2.4.2\"\n+ \"webpack\": \"^1.13.2\",\n+ \"webpack-dev-server\": \"^1.16.1\"\n},\n\"dependencies\": {\n\"classnames\": \"^2.2.5\",\n"
    },
    {
        "org_diff": "diff --git a/packages/react-server/src/ReactFlightServer.js b/a/packages/react-server/src/ReactFlightServer.js @@ -1192,12 +1192,16 @@ function renderModelDestructive(\n             // but that is able to reuse the same task if we're already in one but then that\n             // will be a lazy future value rather than guaranteed to exist but maybe that's good.\n             const newId = outlineModel(request, (value: any));\n-            return serializeLazyID(newId);\n+            return serializeByValueID(newId);\n           } else {\n             // We've already emitted this as an outlined object, so we can refer to that by its\n-            // existing ID. We use a lazy reference since, unlike plain objects, elements might\n-            // suspend so it might not have emitted yet even if we have the ID for it.\n-            return serializeLazyID(existingId);\n+            // existing ID. TODO: We should use a lazy reference since, unlike plain objects,\n+            // elements might suspend so it might not have emitted yet even if we have the ID for\n+            // it. However, this creates an extra wrapper when it's not needed. We should really\n+            // detect whether this already was emitted and synchronously available. In that\n+            // case we can refer to it synchronously and only make it lazy otherwise.\n+            // We currently don't have a data structure that lets us see that though.\n+            return serializeByValueID(existingId);\n           }\n         } else {\n           // This is the first time we've seen this object. We may never see it again",
        "org_msg": "[Flight] Serialize deduped elements by direct reference even if they suspend (#28283)\n\nIn #28123 I switched these to be lazy references. However that creates a\r\nlazy wrapper even if they're synchronously available. We try to as much\r\nas possible preserve the original data structure in these cases.\r\n\r\nE.g. here in the dev outlining I only use a lazy wrapper if it didn't\r\ncomplete synchronously:\r\nhttps://github.com/facebook/react/pull/28272/files#diff-d4c9c509922b3671d3ecce4e051df66dd5c3d38ff913c7a7fe94abc3ba2ed72eR638\r\n\r\nUnfortunately we don't have a data structure that tracks the status of\r\neach emitted row. We could store the task in the map but then they\r\ncouldn't be GC:ed as they complete. We could maybe store the status of\r\neach element but seems so heavy.\r\n\r\nFor now I just went back to direct reference which might be an issue\r\nsince it can suspend something higher up when deduped.",
        "sim_msg": "when using oauth and mapsid with User entity, then use string datatype",
        "sim_diff": "diff --git a/generators/entity-server/templates/src/main/java/package/common/save_template.ejs b/generators/entity-server/templates/src/main/java/package/common/save_template.ejs @@ -26,6 +26,7 @@ let resultEntity;\nlet mapsIdEntityInstance;\nlet mapsIdRepoInstance;\nlet otherEntityName;\n+let dataTypeName = (isUsingMapsId === true && mapsIdAssoc.otherEntityName === 'user' && authenticationType === 'oauth2') ? 'String' : 'long';\nif (isUsingMapsId === true) {\nmapsIdEntityInstance = mapsIdAssoc.otherEntityNameCapitalized.charAt(0).toLowerCase() + mapsIdAssoc.otherEntityNameCapitalized.slice(1);\n@@ -42,14 +43,14 @@ if (!viaService) {\nresultEntity = asEntity(entityInstance); _%>\n<%= asEntity(entityClass) %> <%= asEntity(entityInstance) %> = <%= dtoToEntity %>(<%= instanceName %>);\n<%_ if (isUsingMapsId === true) { _%>\n- long <%= otherEntityName %>Id = <%= instanceName %>.get<%= mapsIdAssoc.relationshipNameCapitalized %>Id();\n+ <%= dataTypeName %> <%= otherEntityName %>Id = <%= instanceName %>.get<%= mapsIdAssoc.relationshipNameCapitalized %>Id();\n<%= mapsIdRepoInstance %>.findById(<%= otherEntityName %>Id).ifPresent(<%= entityInstance%>::<%= otherEntityName %>);\n<%_ } _%>\n<%= asEntity(entityInstance) %> = <%= entityInstance %>Repository.save(<%= asEntity(entityInstance) %>);\n<%= returnPrefix %> <%= entityToDto %>(<%= asEntity(entityInstance) %>);\n<%_ } else { resultEntity = 'result'; _%>\n<%_ if (isUsingMapsId === true) { _%>\n- long <%= otherEntityName %>Id = <%= instanceName %>.get<%= mapsIdAssoc.relationshipNameCapitalized %>().getId();\n+ <%= dataTypeName %> <%= otherEntityName %>Id = <%= instanceName %>.get<%= mapsIdAssoc.relationshipNameCapitalized %>().getId();\n<%= mapsIdRepoInstance %>.findById(<%= otherEntityName %>Id).ifPresent(<%= instanceName%>::<%= otherEntityName %>);\n<%_ } _%>\n<%= returnPrefix %> <%= entityInstance %>Repository.save(<%= asEntity(entityInstance) %>);\n@@ -59,7 +60,7 @@ if (!viaService) {\nreturn result;\n<%_ }}} else { _%>\n<%_ if (isUsingMapsId === true && isController === false) { _%>\n- long <%= otherEntityName %>Id = <%= entityInstance %>.get<%= mapsIdAssoc.relationshipNameCapitalized %>().getId();\n+ <%= dataTypeName %> <%= otherEntityName %>Id = <%= entityInstance %>.get<%= mapsIdAssoc.relationshipNameCapitalized %>().getId();\n<%= mapsIdRepoInstance %>.findById(<%= otherEntityName %>Id).ifPresent(<%= entityInstance%>::<%= otherEntityName %>);\n<%_ } _%>\n<%= returnPrefix %> <%= entityInstance %>Service.save(<%= instanceName %>);\n"
    },
    {
        "org_diff": "diff --git a/packages/shared/ReactFeatureFlags.js b/a/packages/shared/ReactFeatureFlags.js @@ -15,8 +15,6 @@\n \n export const enableComponentStackLocations = true;\n \n-export const enableServerComponentKeys = __EXPERIMENTAL__;\n-\n // -----------------------------------------------------------------------------\n // Killswitch\n //\n@@ -169,6 +167,9 @@ export const enableFilterEmptyStringAttributesDOM = __NEXT_MAJOR__;\n // Disabled caching behavior of `react/cache` in client runtimes.\n export const disableClientCache = false;\n \n+// Changes Server Components Reconciliation when they have keys\n+export const enableServerComponentKeys = __NEXT_MAJOR__;\n+\n // -----------------------------------------------------------------------------\n // Chopping Block\n //",
        "org_msg": "Add enableServerComponentKeys to NEXT_MAJOR (#28259)",
        "sim_msg": "Remove cb from App.js",
        "sim_diff": "diff --git a/components/App.js b/components/App.js @@ -326,7 +326,7 @@ export const App = (props) => {\n`;\n}\n-export const updateProps = (newProps, cb) => {\n+export const updateProps = newProps => {\nconst appContainer = document.getElementById('appContainer');\nfor (let k in newProps) {\nappState[k] = newProps[k];\n@@ -343,18 +343,14 @@ export const updateProps = (newProps, cb) => {\nappContainer.innerHTML = App(appState);\nsetBindings(appContainer, onclickBindings);\n}\n- if (cb) {\n- cb();\n- }\n}\nwindow.addEventListener('stateChanged', (e) => {\nconst changedState = getSpecificState(e.detail.changedKeys);\n- const cb = e.detail.cb ? e.detail.cb : null;\nfor (let k in changedState) {\nappState[k] = changedState[k];\n}\n- updateProps(changedState, cb);\n+ updateProps(changedState);\n})\nwindow.addEventListener('load', () => {\n"
    },
    {
        "org_diff": "diff --git a/packages/react/src/ReactCacheClient.js b/a/packages/react/src/ReactCacheClient.js @@ -10,25 +10,25 @@\n import {disableClientCache} from 'shared/ReactFeatureFlags';\n import {cache as cacheImpl} from './ReactCacheImpl';\n \n-export function cache<A: Iterable<mixed>, T>(fn: (...A) => T): (...A) => T {\n-  if (disableClientCache) {\n-    // On the client (i.e. not a Server Components environment) `cache` has\n-    // no caching behavior. We just return the function as-is.\n-    //\n-    // We intend to implement client caching in a future major release. In the\n-    // meantime, it's only exposed as an API so that Shared Components can use\n-    // per-request caching on the server without breaking on the client. But it\n-    // does mean they need to be aware of the behavioral difference.\n-    //\n-    // The rest of the behavior is the same as the server implementation — it\n-    // returns a new reference, extra properties like `displayName` are not\n-    // preserved, the length of the new function is 0, etc. That way apps can't\n-    // accidentally depend on those details.\n-    return function () {\n-      // $FlowFixMe[incompatible-call]: We don't want to use rest arguments since we transpile the code.\n-      return fn.apply(null, arguments);\n-    };\n-  } else {\n-    return cacheImpl(fn);\n-  }\n+export function noopCache<A: Iterable<mixed>, T>(fn: (...A) => T): (...A) => T {\n+  // On the client (i.e. not a Server Components environment) `cache` has\n+  // no caching behavior. We just return the function as-is.\n+  //\n+  // We intend to implement client caching in a future major release. In the\n+  // meantime, it's only exposed as an API so that Shared Components can use\n+  // per-request caching on the server without breaking on the client. But it\n+  // does mean they need to be aware of the behavioral difference.\n+  //\n+  // The rest of the behavior is the same as the server implementation — it\n+  // returns a new reference, extra properties like `displayName` are not\n+  // preserved, the length of the new function is 0, etc. That way apps can't\n+  // accidentally depend on those details.\n+  return function () {\n+    // $FlowFixMe[incompatible-call]: We don't want to use rest arguments since we transpile the code.\n+    return fn.apply(null, arguments);\n+  };\n }\n+\n+export const cache: typeof noopCache = disableClientCache\n+  ? noopCache\n+  : cacheImpl;",
        "org_msg": "Improve flagging of `React.cache` to remove indirection in bundled code (#28263)\n\nUses a better technique for conditionally disabling cache on the client",
        "sim_msg": "refactor requestWithDateRange with given dateRange",
        "sim_diff": "diff --git a/assets/js/components/data.js b/assets/js/components/data.js @@ -24,7 +24,7 @@ import md5 from 'md5';\nimport {\ngetStorage,\n- stringToSlug,\n+ getCurrentDateRange,\nfillFilterWithComponent,\ngetQueryParameter,\nsortObjectProperties,\n@@ -39,7 +39,6 @@ const {\naddFilter,\nremoveFilter,\n} = wp.hooks;\n-const { __ } = wp.i18n;\nexport const TYPE_CORE = 'core';\nexport const TYPE_MODULES = 'modules';\n@@ -64,19 +63,14 @@ const lazilySetupLocalCache = () => {\n* Respects the current dateRange value, if set.\n*\n* @param {Object} originalRequest Data request object.\n+ * @param {string} dateRange Date range slug.\n* @return {Object} New data request object.\n*/\n-const requestWithDateRange = ( originalRequest ) => {\n- /**\n- * Filter the date range used for queries.\n- *\n- * @param String The selected date range. Default 'Last 28 days'.\n- */\n- const dateRangeSlug = stringToSlug( applyFilters( 'googlesitekit.dateRange', __( 'Last 28 days', 'google-site-kit' ) ) );\n+const requestWithDateRange = ( originalRequest, dateRange ) => {\n// Make copies for reference safety, ensuring data exists.\nconst request = { data: {}, ...originalRequest };\n// Use the dateRange in request.data if passed, fallback to filter-provided value.\n- request.data = { dateRange: dateRangeSlug, ...request.data };\n+ request.data = { dateRange, ...request.data };\nreturn request;\n};\n@@ -115,9 +109,9 @@ const dataAPI = {\nreturn new Promise( ( resolve, reject ) => {\ntry {\nconst responseData = [];\n-\n+ const dateRange = getCurrentDateRange();\neach( combinedRequest, ( originalRequest ) => {\n- const request = requestWithDateRange( originalRequest );\n+ const request = requestWithDateRange( originalRequest, dateRange );\nrequest.key = this.getCacheKey( request.type, request.identifier, request.datapoint, request.data );\nconst cache = this.getCache( request.key, request.maxAge );\n@@ -145,8 +139,9 @@ const dataAPI = {\n// First, resolve any cache matches immediately, queue resolution of the rest.\nlet dataRequest = [];\nlet cacheDelay = 25;\n+ const dateRange = getCurrentDateRange();\neach( combinedRequest, ( originalRequest ) => {\n- const request = requestWithDateRange( originalRequest );\n+ const request = requestWithDateRange( originalRequest, dateRange );\nrequest.key = this.getCacheKey( request.type, request.identifier, request.datapoint, request.data );\nconst cache = this.getCache( request.key, request.maxAge );\n"
    }
]