[
    {
        "org_diff": "diff --git a/packages/react-devtools-shared/src/utils.js b/a/packages/react-devtools-shared/src/utils.js @@ -23,9 +23,23 @@ import {\n   Suspense,\n } from 'react-is';\n import {\n+  REACT_CONSUMER_TYPE,\n+  REACT_CONTEXT_TYPE,\n+  REACT_FORWARD_REF_TYPE,\n+  REACT_FRAGMENT_TYPE,\n+  REACT_LAZY_TYPE,\n+  REACT_LEGACY_ELEMENT_TYPE,\n+  REACT_MEMO_TYPE,\n+  REACT_PORTAL_TYPE,\n+  REACT_PROFILER_TYPE,\n+  REACT_PROVIDER_TYPE,\n+  REACT_STRICT_MODE_TYPE,\n+  REACT_SUSPENSE_LIST_TYPE,\n   REACT_SUSPENSE_LIST_TYPE as SuspenseList,\n+  REACT_SUSPENSE_TYPE,\n   REACT_TRACING_MARKER_TYPE as TracingMarker,\n } from 'shared/ReactSymbols';\n+import {enableRenderableContext} from 'shared/ReactFeatureFlags';\n import {\n   TREE_OPERATION_ADD,\n   TREE_OPERATION_REMOVE,\n@@ -695,10 +709,57 @@ export function getDataType(data: Object): DataType {\n   }\n }\n \n+// Fork of packages/react-is/src/ReactIs.js:30, but with legacy element type\n+// Which has been changed in https://github.com/facebook/react/pull/28813\n+function typeOfWithLegacyElementSymbol(object: any): mixed {\n+  if (typeof object === 'object' && object !== null) {\n+    const $$typeof = object.$$typeof;\n+    switch ($$typeof) {\n+      case REACT_LEGACY_ELEMENT_TYPE:\n+        const type = object.type;\n+\n+        switch (type) {\n+          case REACT_FRAGMENT_TYPE:\n+          case REACT_PROFILER_TYPE:\n+          case REACT_STRICT_MODE_TYPE:\n+          case REACT_SUSPENSE_TYPE:\n+          case REACT_SUSPENSE_LIST_TYPE:\n+            return type;\n+          default:\n+            const $$typeofType = type && type.$$typeof;\n+\n+            switch ($$typeofType) {\n+              case REACT_CONTEXT_TYPE:\n+              case REACT_FORWARD_REF_TYPE:\n+              case REACT_LAZY_TYPE:\n+              case REACT_MEMO_TYPE:\n+                return $$typeofType;\n+              case REACT_CONSUMER_TYPE:\n+                if (enableRenderableContext) {\n+                  return $$typeofType;\n+                }\n+              // Fall through\n+              case REACT_PROVIDER_TYPE:\n+                if (!enableRenderableContext) {\n+                  return $$typeofType;\n+                }\n+              // Fall through\n+              default:\n+                return $$typeof;\n+            }\n+        }\n+      case REACT_PORTAL_TYPE:\n+        return $$typeof;\n+    }\n+  }\n+\n+  return undefined;\n+}\n+\n export function getDisplayNameForReactElement(\n   element: React$Element<any>,\n ): string | null {\n-  const elementType = typeOf(element);\n+  const elementType = typeOf(element) || typeOfWithLegacyElementSymbol(element);\n   switch (elementType) {\n     case ContextConsumer:\n       return 'ContextConsumer';",
        "org_msg": "Add support for legacy element type in getDisplayNameForReactElement function",
        "sim_msg": "add classname to display component",
        "sim_diff": "diff --git a/packages/idyll-components/src/display.js b/packages/idyll-components/src/display.js @@ -23,7 +23,15 @@ class Display extends React.PureComponent {\nrender() {\nconst { value } = this.props;\nconst v = value !== undefined ? value : this.props.var;\n- return <span>{this.formatValue(v)}</span>;\n+ return (\n+ <span\n+ className={`idyll-display ${\n+ this.props.className ? this.props.className : ''\n+ }`.trim()}\n+ >\n+ {this.formatValue(v)}\n+ </span>\n+ );\n}\n}\n"
    },
    {
        "org_diff": "diff --git a/scripts/jest/setupTests.js b/a/scripts/jest/setupTests.js @@ -206,44 +206,55 @@ if (process.env.REACT_CLASS_EQUIVALENCE_TEST) {\n   };\n \n   const gatedErrorMessage = 'Gated test was expected to fail, but it passed.';\n-  global._test_gate = (gateFn, testName, callback) => {\n+  global._test_gate = (gateFn, testName, callback, timeoutMS) => {\n     let shouldPass;\n     try {\n       const flags = getTestFlags();\n       shouldPass = gateFn(flags);\n     } catch (e) {\n-      test(testName, () => {\n-        throw e;\n-      });\n+      test(\n+        testName,\n+        () => {\n+          throw e;\n+        },\n+        timeoutMS\n+      );\n       return;\n     }\n     if (shouldPass) {\n-      test(testName, callback);\n+      test(testName, callback, timeoutMS);\n     } else {\n       const error = new Error(gatedErrorMessage);\n       Error.captureStackTrace(error, global._test_gate);\n       test(`[GATED, SHOULD FAIL] ${testName}`, () =>\n-        expectTestToFail(callback, error));\n+        expectTestToFail(callback, error, timeoutMS));\n     }\n   };\n-  global._test_gate_focus = (gateFn, testName, callback) => {\n+  global._test_gate_focus = (gateFn, testName, callback, timeoutMS) => {\n     let shouldPass;\n     try {\n       const flags = getTestFlags();\n       shouldPass = gateFn(flags);\n     } catch (e) {\n-      test.only(testName, () => {\n-        throw e;\n-      });\n+      test.only(\n+        testName,\n+        () => {\n+          throw e;\n+        },\n+        timeoutMS\n+      );\n       return;\n     }\n     if (shouldPass) {\n-      test.only(testName, callback);\n+      test.only(testName, callback, timeoutMS);\n     } else {\n       const error = new Error(gatedErrorMessage);\n       Error.captureStackTrace(error, global._test_gate_focus);\n-      test.only(`[GATED, SHOULD FAIL] ${testName}`, () =>\n-        expectTestToFail(callback, error));\n+      test.only(\n+        `[GATED, SHOULD FAIL] ${testName}`,\n+        () => expectTestToFail(callback, error),\n+        timeoutMS\n+      );\n     }\n   };\n ",
        "org_msg": "Refactor global _test_gate and _test_gate_focus to accept timeoutMS parameter",
        "sim_msg": "Extending test timeout a bit",
        "sim_diff": "diff --git a/test/contracts/EtherCollateral.js b/test/contracts/EtherCollateral.js @@ -27,6 +27,8 @@ contract('EtherCollateral', async accounts => {\nconst MONTH = 2629743;\nconst YEAR = 31536000;\n+ const TEST_TIMEOUT = 160e3;\n+\nconst [sETH, ETH, SNX] = ['sETH', 'ETH', 'SNX'].map(toBytes32);\nconst ISSUACE_RATIO = toUnit('0.8');\n@@ -992,7 +994,7 @@ contract('EtherCollateral', async accounts => {\n// Bob closes a loan\nawait etherCollateral.closeLoan(2, { from: address2 });\nassert.equal(await etherCollateral.totalOpenLoanCount(), 0);\n- }).timeout(120e3);\n+ }).timeout(TEST_TIMEOUT);\nit('then opening & closing from 10 different accounts', async () => {\nconst first10Accounts = accounts.slice(0, 10);\n@@ -1007,7 +1009,7 @@ contract('EtherCollateral', async accounts => {\nawait etherCollateral.closeLoan(i + 1, { from: first10Accounts[i] });\n}\nassert.equal(await etherCollateral.totalOpenLoanCount(), 0);\n- }).timeout(120e3);\n+ }).timeout(TEST_TIMEOUT);\nit('then creat accountLoanLimit x 1 eth loans and close them', async () => {\nconst minLoanSize = await etherCollateral.minLoanSize();\n@@ -1030,7 +1032,7 @@ contract('EtherCollateral', async accounts => {\nassert.bnEqual(await etherCollateral.totalOpenLoanCount(), 0);\nassert.bnEqual(await etherCollateral.totalLoansCreated(), accountLoanLimit);\n- }).timeout(120e3);\n+ }).timeout(TEST_TIMEOUT);\nit('then creating 3 accounts create 500 1 eth loans', async () => {\nconst minLoanSize = await etherCollateral.minLoanSize();\n@@ -1051,7 +1053,7 @@ contract('EtherCollateral', async accounts => {\nassert.bnEqual(await etherCollateral.totalOpenLoanCount(), 0);\nassert.bnEqual(await etherCollateral.totalLoansCreated(), accountLoanLimit * 3);\n- }).timeout(120e3);\n+ }).timeout(TEST_TIMEOUT);\n});\ndescribe('when closing a Loan', async () => {\n"
    },
    {
        "org_diff": "diff --git a/scripts/rollup/bundles.js b/a/scripts/rollup/bundles.js @@ -884,7 +884,7 @@ const bundles = [\n   /******* Reconciler Constants *******/\n   {\n     moduleType: RENDERER_UTILS,\n-    bundleTypes: [NODE_DEV, NODE_PROD],\n+    bundleTypes: [NODE_DEV, NODE_PROD, FB_WWW_DEV, FB_WWW_PROD],\n     entry: 'react-reconciler/constants',\n     global: 'ReactReconcilerConstants',\n     minifyWithProdErrorCodes: true,",
        "org_msg": "Add FB_WWW_DEV and FB_WWW_PROD bundle types to renderer utils module",
        "sim_msg": "Render bundle on production webapp",
        "sim_diff": "diff --git a/src/web/index.pug b/src/web/index.pug @@ -32,8 +32,13 @@ html\nscript(src='//cdnjs.cloudflare.com/ajax/libs/yamljs/0.3.0/yaml.min.js')\nscript(src='//ace.c9.io/build/src/ace.js')\nscript(src='//unpkg.com/chance')\n+\n+ if env.NODE_ENV === 'production'\n+ script(src='bundle.js')\n+ else\nscript(src='vendor.js')\nscript(src='main.umd.js')\n+\nscript(src='js/app.js')\nif env.NODE_ENV === 'production'\n"
    },
    {
        "org_diff": "diff --git a/.github/workflows/commit_artifacts.yml b/a/.github/workflows/commit_artifacts.yml @@ -145,15 +145,15 @@ jobs:\n         run: |\n           BASE_FOLDER='compiled-rn/facebook-fbsource/xplat/js'\n           mkdir -p ${BASE_FOLDER}/react-native-github/Libraries/Renderer/\n-          mkdir -p ${BASE_FOLDER}/RKJSModules/vendor/{scheduler,react,react-is,react-test-renderer}/\n+          mkdir -p ${BASE_FOLDER}/RKJSModules/vendor/react/{scheduler,react,react-is,react-test-renderer}/\n \n           # Move React Native renderer \n           mv build/react-native/implementations/ $BASE_FOLDER/react-native-github/Libraries/Renderer/\n           mv build/react-native/shims/ $BASE_FOLDER/react-native-github/Libraries/Renderer/\n-          mv build/facebook-react-native/scheduler/cjs/ $BASE_FOLDER/RKJSModules/vendor/scheduler/\n-          mv build/facebook-react-native/react/cjs/ $BASE_FOLDER/RKJSModules/vendor/react/\n-          mv build/facebook-react-native/react-is/cjs/ $BASE_FOLDER/RKJSModules/vendor/react-is/\n-          mv build/facebook-react-native/react-test-renderer/cjs/ $BASE_FOLDER/RKJSModules/vendor/react-test-renderer/\n+          mv build/facebook-react-native/scheduler/cjs/ $BASE_FOLDER/RKJSModules/vendor/react/scheduler/\n+          mv build/facebook-react-native/react/cjs/ $BASE_FOLDER/RKJSModules/vendor/react/react/\n+          mv build/facebook-react-native/react-is/cjs/ $BASE_FOLDER/RKJSModules/vendor/react/react-is/\n+          mv build/facebook-react-native/react-test-renderer/cjs/ $BASE_FOLDER/RKJSModules/vendor/react/react-test-renderer/\n \n           # Delete OSS renderer. OSS renderer is synced through internal script.\n           RENDERER_FOLDER=$BASE_FOLDER/react-native-github/Libraries/Renderer/implementations/",
        "org_msg": "Refactor folder structure for React Native renderer and scheduler modules.",
        "sim_msg": "Refactor components to be mulitline.",
        "sim_diff": "diff --git a/assets/js/components/user-input/UserInputApp.js b/assets/js/components/user-input/UserInputApp.js * limitations under the License.\n*/\n+/**\n+ * WordPress dependencies\n+ */\n+import { __ } from '@wordpress/i18n';\n+\nexport default function UserInputApp() {\n- return featureFlags.widgets.userInput.enabled ? ( <div>TODO: Implement logic and UI.</div> ) : ( <div>You need a higher level of permission.</div> );\n+ if ( ! featureFlags.widgets.userInput.enabled ) {\n+ return <div>{ __( 'Something went wrong.', 'google-site-kit' ) }</div>;\n+ }\n+\n+ return <div>TODO: Implement logic and UI.</div>;\n}\n"
    },
    {
        "org_diff": "diff --git a/scripts/rollup/wrappers.js b/a/scripts/rollup/wrappers.js @@ -1,7 +1,5 @@\n 'use strict';\n \n-const {resolve} = require('path');\n-const {readFileSync} = require('fs');\n const {signFile, getSigningToken} = require('signedsource');\n const {bundleTypes, moduleTypes} = require('./bundles');\n \n@@ -30,19 +28,25 @@ const {RECONCILER} = moduleTypes;\n \n const USE_STRICT_HEADER_REGEX = /'use strict';\\n+/;\n \n-function registerInternalModuleStart(globalName) {\n-  const path = resolve(__dirname, 'wrappers', 'registerInternalModuleBegin.js');\n-  const file = readFileSync(path);\n-  return String(file).trim();\n+function wrapWithRegisterInternalModule(source) {\n+  return `\\\n+'use strict';\n+if (\n+  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n+  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart ===\n+    'function'\n+) {\n+  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\n }\n-\n-function registerInternalModuleStop(globalName) {\n-  const path = resolve(__dirname, 'wrappers', 'registerInternalModuleEnd.js');\n-  const file = readFileSync(path);\n-\n-  // Remove the 'use strict' directive from the footer.\n-  // This directive is only meaningful when it is the first statement in a file or function.\n-  return String(file).replace(USE_STRICT_HEADER_REGEX, '').trim();\n+${source}\n+if (\n+  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n+  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop ===\n+    'function'\n+) {\n+  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\n+}\n+`;\n }\n \n const license = ` * Copyright (c) Meta Platforms, Inc. and affiliates.\n@@ -496,11 +500,7 @@ function wrapWithTopLevelDefinitions(\n \n         // Certain DEV and Profiling bundles should self-register their own module boundaries with DevTools.\n         // This allows the Timeline to de-emphasize (dim) internal stack frames.\n-        source = `\n-          ${registerInternalModuleStart(globalName)}\n-          ${source}\n-          ${registerInternalModuleStop(globalName)}\n-        `;\n+        source = wrapWithRegisterInternalModule(source);\n         break;\n     }\n   }",
        "org_msg": "Refactor wrappers.js to use a new function for registering internal modules with DevTools",
        "sim_msg": "Refactor available modules with module registry.",
        "sim_diff": "diff --git a/includes/Core/Modules/Modules.php b/includes/Core/Modules/Modules.php namespace Google\\Site_Kit\\Core\\Modules;\nuse Google\\Site_Kit\\Context;\n-use Google\\Site_Kit\\Core\\Modules\\Module_With_Owner;\nuse Google\\Site_Kit\\Core\\Permissions\\Permissions;\nuse Google\\Site_Kit\\Core\\REST_API\\REST_Route;\nuse Google\\Site_Kit\\Core\\REST_API\\REST_Routes;\n@@ -19,6 +18,13 @@ use Google\\Site_Kit\\Core\\Storage\\Options;\nuse Google\\Site_Kit\\Core\\Storage\\User_Options;\nuse Google\\Site_Kit\\Core\\Authentication\\Authentication;\nuse Google\\Site_Kit\\Core\\REST_API\\Exception\\Invalid_Datapoint_Exception;\n+use Google\\Site_Kit\\Modules\\AdSense;\n+use Google\\Site_Kit\\Modules\\Analytics;\n+use Google\\Site_Kit\\Modules\\Optimize;\n+use Google\\Site_Kit\\Modules\\PageSpeed_Insights;\n+use Google\\Site_Kit\\Modules\\Search_Console;\n+use Google\\Site_Kit\\Modules\\Site_Verification;\n+use Google\\Site_Kit\\Modules\\Tag_Manager;\nuse WP_REST_Server;\nuse WP_REST_Request;\nuse WP_REST_Response;\n@@ -92,6 +98,30 @@ final class Modules {\n*/\nprivate $dependants = array();\n+ /**\n+ * Module_Registry instance.\n+ *\n+ * @since n.e.x.t\n+ * @var Module_Registry\n+ */\n+ private $registry;\n+\n+ /**\n+ * Core module class names.\n+ *\n+ * @since n.e.x.t\n+ * @var string[] Core module class names.\n+ */\n+ private $core_modules = array(\n+ Site_Verification::class,\n+ Search_Console::class,\n+ Analytics::class,\n+ Optimize::class,\n+ Tag_Manager::class,\n+ AdSense::class,\n+ PageSpeed_Insights::class,\n+ );\n+\n/**\n* Constructor.\n*\n@@ -221,15 +251,7 @@ final class Modules {\n*/\npublic function get_available_modules() {\nif ( empty( $this->modules ) ) {\n- $module_classes = array(\n- 'Google\\Site_Kit\\Modules\\Site_Verification',\n- 'Google\\Site_Kit\\Modules\\Search_Console',\n- 'Google\\Site_Kit\\Modules\\Analytics',\n- 'Google\\Site_Kit\\Modules\\Optimize',\n- 'Google\\Site_Kit\\Modules\\Tag_Manager',\n- 'Google\\Site_Kit\\Modules\\AdSense',\n- 'Google\\Site_Kit\\Modules\\PageSpeed_Insights',\n- );\n+ $module_classes = $this->registry->get_all();\nforeach ( $module_classes as $module_class ) {\n$instance = new $module_class( $this->context, $this->options, $this->user_options, $this->authentication );\n@@ -470,6 +492,38 @@ final class Modules {\n);\n}\n+ /**\n+ * Gets the configured module registry instance.\n+ *\n+ * @since n.e.x.t\n+ *\n+ * @return Module_Registry\n+ */\n+ protected function get_registry() {\n+ if ( ! $this->registry instanceof Module_Registry ) {\n+ $this->registry = $this->setup_registry();\n+ }\n+\n+ return $this->registry;\n+ }\n+\n+ /**\n+ * Sets up a fresh module registry instance.\n+ *\n+ * @since n.e.x.t\n+ *\n+ * @return Module_Registry\n+ */\n+ protected function setup_registry() {\n+ $registry = new Module_Registry();\n+\n+ foreach ( $this->core_modules as $core_module ) {\n+ $registry->register( $core_module );\n+ }\n+\n+ return $registry;\n+ }\n+\n/**\n* Gets related REST routes.\n*\n"
    },
    {
        "org_diff": "diff --git a/.github/workflows/commit_artifacts.yml b/a/.github/workflows/commit_artifacts.yml @@ -210,42 +210,6 @@ jobs:\n           commit_user_email: ${{ github.actor }}@users.noreply.github.com\n           create_branch: true\n \n-  commit_fbsource_artifacts_external_repo:\n-    needs: download_artifacts\n-    runs-on: ubuntu-latest\n-    if: ${{ (github.ref == 'refs/heads/main' && needs.download_artifacts.outputs.fbsource_branch_count == '0') || github.ref == 'refs/heads/meta-fbsource' }}\n-    steps:\n-      - uses: actions/checkout@v4\n-        with:\n-          ref: main\n-          repository: facebook/react-fbsource-import\n-          token: ${{secrets.FBSOURCE_SYNC_PUSH_TOKEN}}\n-      - name: Ensure clean directory\n-        run: rm -rf compiled-rn\n-      - uses: actions/download-artifact@v3\n-        with:\n-          name: compiled-rn\n-          path: compiled-rn/\n-      - run: git status -u\n-      - name: Check if only the REVISION file has changed\n-        id: check_should_commit\n-        run: |\n-          if git status --porcelain | grep -qv '/REVISION$'; then\n-            echo \"should_commit=true\" >> \"$GITHUB_OUTPUT\"\n-          else\n-            echo \"should_commit=false\" >> \"$GITHUB_OUTPUT\"\n-          fi\n-      - name: Commit changes to branch\n-        if: steps.check_should_commit.outputs.should_commit == 'true'\n-        uses: stefanzweifel/git-auto-commit-action@v4\n-        with:\n-          commit_message: |\n-            ${{ github.event.head_commit.message }}\n-\n-            DiffTrain build for commit https://github.com/facebook/react/commit/${{ github.sha }}.\n-          commit_user_name: ${{ github.actor }}\n-          commit_user_email: ${{ github.actor }}@users.noreply.github.com\n-\n   commit_fbsource_artifacts:\n     needs: download_artifacts\n     if: ${{ (github.ref == 'refs/heads/main' && needs.download_artifacts.outputs.fbsource_branch_count == '0') || github.ref == 'refs/heads/meta-fbsource' }}",
        "org_msg": "Refactor commit_fbsource_artifacts_external_repo job. Remove unnecessary steps and update commit message.",
        "sim_msg": "Refactor commit-msg script.",
        "sim_diff": "diff --git a/bin/check-commit-msg b/bin/check-commit-msg #!/usr/bin/env php\n<?php\n-function echo_error_and_die( $message, $code ) {\n- $red = \"\\033[31m\";\n- $reset = \"\\033[0m\";\n+function echo_error_and_die_if( $condition, $message ) {\n+ static $code = 0;\n- fwrite( STDERR, $red . $message . $reset . PHP_EOL );\n+ $code++;\n+\n+ if ( $condition ) {\n+ fwrite( STDERR, \"\\033[31m\" . $message . \"\\033[0m\" . PHP_EOL );\nexit( $code );\n}\n-\n-if ( empty( $argv[1] ) || ! file_exists( $argv[1] ) ) {\n- echo_error_and_die( 'The commit message hasn\\'t been found.', 1 );\n}\n+echo_error_and_die_if(\n+ empty( $argv[1] ) || ! file_exists( $argv[1] ),\n+ 'The commit message hasn\\'t been found.'\n+);\n+\n$message = explode( PHP_EOL, file_get_contents( $argv[1] ) );\n$message = array_filter( $message, function( $line ) { return preg_match( '/^[^#]+/', $line ); } );\n$message = trim( implode( ' ', $message ) );\n+$first_word = current( explode( ' ', $message ) );\n// message ends in a dot\n-if ( preg_match( '/[^\\.]$/', $message ) ) {\n- echo_error_and_die( 'The commit message must end with a full stop.', 2 );\n-}\n-\n-$first_word = current( explode( ' ', $message ) );\n+echo_error_and_die_if(\n+ preg_match( '/[^\\.]$/', $message ),\n+ 'The commit message must end with a full stop.'\n+);\n// message starts with a capital letter.\n-if ( ! preg_match( '/^[A-Z][a-z-]*$/', $first_word ) ) {\n- echo_error_and_die( 'The commit message must start with a capital letter.', 3 );\n-}\n+echo_error_and_die_if(\n+ ! preg_match( '/^[A-Z][a-z-]*$/', $first_word ),\n+ 'The commit message must start with a capital letter.'\n+);\n// first word of the message does not end in \"ed\" or \"es\"\n-if ( preg_match( '/(ed|es)$/', $first_word ) ) {\n- echo_error_and_die( 'The commit message must start with a verb in present tense.', 4 );\n-}\n+echo_error_and_die_if(\n+ preg_match( '/(ed|es)$/', $first_word ),\n+ 'The commit message must start with a verb in present tense.'\n+);\n"
    },
    {
        "org_diff": "diff --git a/packages/react-devtools-fusebox/src/frontend.js b/a/packages/react-devtools-fusebox/src/frontend.js @@ -62,6 +62,7 @@ export function initialize(\n       store={store}\n       showTabBar={true}\n       warnIfLegacyBackendDetected={true}\n+      enabledInspectedElementContextMenu={true}\n     />,\n   );\n }",
        "org_msg": "Add enabledInspectedElementContextMenu prop to initialize function",
        "sim_msg": "Add init function to Props",
        "sim_diff": "diff --git a/README.md b/README.md @@ -115,6 +115,7 @@ Props | Type | Default Value | Descripti\n`variableWidth` | `bool` | `false` | |\n`useCSS` | `bool` | `true` | Enable/Disable CSS Transitions | Yes\n`vertical` | `bool` | `false` | | Yes\n+`init` | `func` | `null` | componentWillMount callback. `() => void` | Yes\n`afterChange` | `func` | `Default` | Index change callback. `index => ...` | Yes\n`beforeChange` | `func` | `null` | Index change callback. `(oldIndex, newIndex) => ...` | Yes\n`slickGoTo` | `int` | `Default` | Go to the specified slide number |\n"
    },
    {
        "org_diff": "diff --git a/.circleci/config.yml b/a/.circleci/config.yml @@ -228,6 +228,13 @@ jobs:\n           command: ./scripts/circleci/pack_and_store_devtools_artifacts.sh\n       - store_artifacts:\n           path: ./build/devtools.tgz\n+      # Simplifies getting the extension for local testing\n+      - store_artifacts:\n+          path: ./build/devtools/chrome-extension.zip\n+          destination: react-devtools-chrome-extension.zip\n+      - store_artifacts:\n+          path: ./build/devtools/firefox-extension.zip\n+          destination: react-devtools-firefox-extension.zip\n \n   run_devtools_e2e_tests:\n     docker: *docker",
        "org_msg": "\"Add storing of Chrome and Firefox extension artifacts for local testing\"",
        "sim_msg": "add frontend test artifacts",
        "sim_diff": "diff --git a/generators/ci-cd/templates/_.gitlab-ci.yml b/generators/ci-cd/templates/_.gitlab-ci.yml @@ -62,8 +62,10 @@ gradle-front-test:\n- ./gradlew npm_test -PnodeInstall --no-daemon\n<%_ } _%>\n<%_ } _%>\n+ artifacts:\n+ paths:\n+ - build/test-results/karma/*\n<%_ } _%>\n-\n<%_ if (testFrameworks.includes('gatling')) { _%>\ngatling-test:\nstage: test\n@@ -137,8 +139,10 @@ maven-front-test:\n- ./mvnw com.github.eirslett:frontend-maven-plugin:npm -Dfrontend.yarn.arguments=test\n<%_ } _%>\n<%_ } _%>\n+ artifacts:\n+ paths:\n+ - target/test-results/karma/*\n<%_ } _%>\n-\n<%_ if (testFrameworks.includes('gatling')) { _%>\ngatling-test:\nstage: test\n"
    },
    {
        "org_diff": "diff --git a/dangerfile.js b/a/dangerfile.js @@ -44,7 +44,9 @@ const CRITICAL_ARTIFACT_PATHS = new Set([\n   // We always report changes to these bundles, even if the change is\n   // insignificant or non-existent.\n   'oss-stable/react-dom/cjs/react-dom.production.js',\n+  'oss-stable/react-dom/cjs/react-dom-client.production.js',\n   'oss-experimental/react-dom/cjs/react-dom.production.js',\n+  'oss-experimental/react-dom/cjs/react-dom-client.production.js',\n   'facebook-www/ReactDOM-prod.classic.js',\n   'facebook-www/ReactDOM-prod.modern.js',\n ]);",
        "org_msg": "Add critical artifact paths for react-dom-client.production.js",
        "sim_msg": "fix paths in package.json for server and react client",
        "sim_diff": "diff --git a/fixed-price-subscriptions/package.json b/fixed-price-subscriptions/package.json \"description\": \"A Stripe sample implementing cards for subscriptions with fixed prices.\",\n\"main\": \"server.js\",\n\"scripts\": {\n- \"server\": \"node server.js\",\n- \"reactClient\": \"cd ../../client/react && npm start\",\n+ \"server\": \"node server/node/server.js\",\n+ \"reactClient\": \"cd client/react && npm start\",\n\"startReact\": \"concurrently \\\"yarn reactClient\\\" \\\"yarn server\\\"\",\n\"startVanillajs\": \"yarn server\",\n\"start\": \"yarn server\",\n"
    },
    {
        "org_diff": "diff --git a/packages/react-native-renderer/src/__tests__/ReactNativeAttributePayload-test.internal.js b/a/packages/react-native-renderer/src/__tests__/ReactNativeAttributePayload-test.internal.js @@ -204,6 +204,19 @@ describe('ReactNativeAttributePayload', () => {\n     ).toEqual({foo: null}); // this should ideally be null. heuristic.\n   });\n \n+  it('handles attributes defined multiple times', () => {\n+    const validAttributes = {foo: true, style: {foo: true}};\n+    expect(diff({}, {foo: 4, style: {foo: 2}}, validAttributes)).toEqual({\n+      foo: 2,\n+    });\n+    expect(diff({foo: 4}, {style: {foo: 2}}, validAttributes)).toEqual({\n+      foo: 2,\n+    });\n+    expect(diff({style: {foo: 2}}, {foo: 4}, validAttributes)).toEqual({\n+      foo: 4,\n+    });\n+  });\n+\n   // Function properties are just markers to native that events should be sent.\n   it('should convert functions to booleans', () => {\n     // Note that if the property changes from one function to another, we don't",
        "org_msg": "\"Handle attributes defined multiple times\"",
        "sim_msg": "Better handling of getAttributes",
        "sim_diff": "diff --git a/detox/ios/Detox/Next/Actions/UIView+DetoxActions.m b/detox/ios/Detox/Next/Actions/UIView+DetoxActions.m @@ -455,13 +455,30 @@ static NSDictionary* DTXPointToDictionary(CGPoint point)\n{\nNSMutableDictionary* rv = [NSMutableDictionary new];\n- [rv addEntriesFromDictionary:[self dictionaryWithValuesForKeys:@[@\"text\", @\"accessibilityLabel\", @\"accessibilityIdentifier\", @\"accessibilityValue\", @\"placeholder\"]]];\n-\n- rv[@\"label\"] = rv[@\"accessibilityLabel\"];\n- [rv removeObjectForKey:@\"accessibilityLabel\"];\n+ NSDictionary* results = [self dictionaryWithValuesForKeys:@[@\"text\", @\"accessibilityLabel\", @\"accessibilityIdentifier\", @\"accessibilityValue\", @\"placeholder\"]];\n+ [results enumerateKeysAndObjectsUsingBlock:^(id _Nonnull key, id _Nonnull obj, BOOL * _Nonnull stop) {\n+ if([obj isKindOfClass:NSNull.class])\n+ {\n+ return;\n+ }\n- rv[@\"value\"] = rv[@\"accessibilityValue\"];\n- [rv removeObjectForKey:@\"accessibilityValue\"];\n+ if([key isEqualToString:@\"accessibilityLabel\"])\n+ {\n+ rv[@\"label\"] = obj;\n+ }\n+ else if([key isEqualToString:@\"accessibilityValue\"])\n+ {\n+ rv[@\"value\"] = obj;\n+ }\n+ else if([key isEqualToString:@\"accessibilityIdentifier\"])\n+ {\n+ rv[@\"identifier\"] = obj;\n+ }\n+ else\n+ {\n+ rv[key] = obj;\n+ }\n+ }];\nrv[@\"frame\"] = DTXRectToDictionary(self.frame);\nrv[@\"bounds\"] = DTXRectToDictionary(self.bounds);\n"
    },
    {
        "org_diff": "diff --git a/packages/react/npm/jsx-dev-runtime.react-server.js b/a/packages/react/npm/jsx-dev-runtime.react-server.js @@ -1,7 +1,7 @@\n 'use strict';\n \n if (process.env.NODE_ENV === 'production') {\n-  module.exports = require('./cjs/react-jsx-dev-runtime.react-server.production.min.js');\n+  module.exports = require('./cjs/react-jsx-dev-runtime.react-server.production.js');\n } else {\n   module.exports = require('./cjs/react-jsx-dev-runtime.react-server.development.js');\n }",
        "org_msg": "Update jsx-dev-runtime.react-server.js to use non-minified production version",
        "sim_msg": "Update Jest config to resolve react with singular version.",
        "sim_diff": "diff --git a/tests/js/jest.config.js b/tests/js/jest.config.js @@ -36,6 +36,8 @@ module.exports = {\n],\n// Matches aliases in webpack.config.js.\nmoduleNameMapper: {\n+ '^react$': '<rootDir>/node_modules/react',\n+ '^react-dom$': '<rootDir>/node_modules/react-dom',\n// New (JSR) modules.\n// In the future when the \"components\" entry point uses GM3 and\n// the filename is `'googlesitekit-components'`, we can revert to\n"
    },
    {
        "org_diff": "diff --git a/CHANGELOG.md b/a/CHANGELOG.md @@ -1,3 +1,7 @@\n+## 18.3.1 (April 26, 2024)\n+\n+- Export `act` from `react` [f1338f](https://github.com/facebook/react/commit/f1338f8080abd1386454a10bbf93d67bfe37ce85)\n+\n ## 18.3.0 (April 25, 2024)\n \n This release is identical to 18.2 but adds warnings for deprecated APIs and other changes that are needed for React 19.",
        "org_msg": "Add export of `act` from `react` in version 18.3.1",
        "sim_msg": "Add tag and information about react compatibility for preact library",
        "sim_diff": "diff --git a/data.js b/data.js @@ -5116,8 +5116,8 @@ module.exports = [\n{\nname: \"preact\",\ngithub: \"developit/preact\",\n- tags: [\"dom\", \"templating\"],\n- description: \"Tiny & fast Component-based Virtual DOM framework.\",\n+ tags: [\"dom\", \"diff\", \"templating\", \"react\", \"components\"],\n+ description: \"Preact is a fast, 3kB alternative to React, with the same ES2015 API\",\nurl: \"https://github.com/developit/preact\",\nsource: \"https://raw.githubusercontent.com/developit/preact/master/src/preact.js\"\n},\n"
    },
    {
        "org_diff": "diff --git a/CHANGELOG.md b/a/CHANGELOG.md @@ -1,3 +1,24 @@\n+## 18.3.0 (April 25, 2024)\n+\n+This release is identical to 18.2 but adds warnings for deprecated APIs and other changes that are needed for React 19.\n+\n+Read the [React 19 Upgrade Guide](https://react.dev/blog/2024/04/25/react-19-upgrade-guide) for more info.\n+\n+### React\n+\n+- Allow writing to `this.refs` to support string ref codemod [909071](https://github.com/facebook/react/commit/9090712fd3ca4e1099e1f92e67933c2cb4f32552)\n+- Warn for deprecated `findDOMNode` outside StrictMode [c3b283](https://github.com/facebook/react/commit/c3b283964108b0e8dbcf1f9eb2e7e67815e39dfb)\n+- Warn for deprecated `test-utils` methods [d4ea75](https://github.com/facebook/react/commit/d4ea75dc4258095593b6ac764289f42bddeb835c)\n+- Warn for deprecated Legacy Context outside StrictMode [415ee0](https://github.com/facebook/react/commit/415ee0e6ea0fe3e288e65868df2e3241143d5f7f)\n+- Warn for deprecated string refs outside StrictMode [#25383](https://github.com/facebook/react/pull/25383)\n+- Warn for deprecated `defaultProps` for function components [#25699](https://github.com/facebook/react/pull/25699)\n+- Warn when spreading `key` [#25697](https://github.com/facebook/react/pull/25697)\n+- Warn when using `act` from `test-utils` [d4ea75](https://github.com/facebook/react/commit/d4ea75dc4258095593b6ac764289f42bddeb835c)\n+\n+### React DOM\n+- Warn for deprecated `unmountComponentAtNode` [8a015b](https://github.com/facebook/react/commit/8a015b68cc060079878e426610e64e86fb328f8d)\n+- Warn for deprecated `renderToStaticNodeStream` [#28874](https://github.com/facebook/react/pull/28874)\n+\n ## 18.2.0 (June 14, 2022)\n \n ### React DOM",
        "org_msg": "Add warnings for deprecated APIs and other changes needed for React 19 upgrade. Read the React 19 Upgrade Guide for more info.",
        "sim_msg": "[react] Upgrade v17.0",
        "sim_diff": "diff --git a/generators/client/templates/react/package.json.ejs b/generators/client/templates/react/package.json.ejs @@ -38,8 +38,8 @@ limitations under the License.\n\"dayjs\": \"VERSION_MANAGED_BY_CLIENT_COMMON\",\n\"loaders.css\": \"0.1.2\",\n\"lodash\": \"4.17.15\",\n- \"react\": \"16.13.1\",\n- \"react-dom\": \"16.13.1\",\n+ \"react\": \"17.0.0\",\n+ \"react-dom\": \"17.0.0\",\n\"react-hot-loader\": \"4.12.20\",\n\"react-jhipster\": \"0.11.0\",\n\"react-loadable\": \"5.5.0\",\n"
    },
    {
        "org_diff": "diff --git a/packages/react-reconciler/README.md b/a/packages/react-reconciler/README.md @@ -318,6 +318,30 @@ Same as `unhideInstance`, but for nodes created by `createTextInstance`.\n \n This method should mutate the `container` root node and remove all children from it.\n \n+#### `maySuspendCommit(type, props)`\n+\n+This method is called during render to determine if the Host Component type and props require some kind of loading process to complete before committing an update.\n+\n+#### `preloadInstance(type, props)`\n+\n+This method may be called during render if the Host Component type and props might suspend a commit. It can be used to initiate any work that might shorten the duration of a suspended commit.\n+\n+#### `startSuspendingCommit()`\n+\n+This method is called just before the commit phase. Use it to set up any necessary state while any Host Components that might suspend this commit are evaluated to determine if the commit must be suspended.\n+\n+#### `suspendInstance(type, props)`\n+\n+This method is called after `startSuspendingCommit` for each Host Component that indicated it might suspend a commit.\n+\n+#### `waitForCommitToBeReady()`\n+\n+This method is called after all `suspendInstance` calls are complete.\n+\n+Return `null` if the commit can happen immediately.\n+\n+Return `(initiateCommit: Function) => Function` if the commit must be suspended. The argument to this callback will initiate the commit when called. The return value is a cancellation function that the Reconciler can use to abort the commit.\n+\n ### Persistence Methods\n \n If you use the persistent mode instead of the mutation mode, you would still need the \"Core Methods\". However, instead of the Mutation Methods above you will implement a different set of methods that performs cloning nodes and replacing them at the root level. You can find a list of them in the \"Persistence\" section [listed in this file](https://github.com/facebook/react/blob/main/packages/react-reconciler/src/forks/ReactFiberConfig.custom.js). File an issue if you need help.",
        "org_msg": "Add new methods for handling commit suspension and readiness in the React reconciler. Also, update information about persistence methods.",
        "sim_msg": "refactor: Addition to previous commit containing debounce work",
        "sim_diff": "diff --git a/src/utils/debounce.js b/src/utils/debounce.js export function debounce (fn, wait = 250, immediate) {\nlet timeout\n- // Prevents execution of debounced function, or noop if\n- // never invoked/already executed\n- function cancel () {\n- if (timeout) {\n- clearTimeout(timeout)\n- }\n- }\n-\nfunction debounced (...args) {\nconst later = () => {\ntimeout = null\n@@ -25,7 +17,10 @@ export function debounce (fn, wait = 250, immediate) {\ntimeout = setTimeout(later, wait)\n}\n- debounced.cancel = cancel\n+ debounced.cancel = () => {\n+ clearTimeout(timeout)\n+ }\n+\nreturn debounced\n}\n"
    },
    {
        "org_diff": "diff --git a/packages/react/src/jsx/ReactJSXElement.js b/a/packages/react/src/jsx/ReactJSXElement.js @@ -738,9 +738,7 @@ export function createElement(type, config, children) {\n         console.warn(\n           'Your app (or one of its dependencies) is using an outdated JSX ' +\n             'transform. Update to the modern JSX transform for ' +\n-            'faster performance: ' +\n-            // TODO: Create a short link for this\n-            'https://reactjs.org/blog/2020/09/22/introducing-the-new-jsx-transform.html',\n+            'faster performance: https://react.dev/link/new-jsx-transform',\n         );\n       }\n     }",
        "org_msg": "Update JSX transform warning message with new link.",
        "sim_msg": "add warning for deprecated transforms",
        "sim_diff": "diff --git a/src/plots/attributes.js b/src/plots/attributes.js @@ -167,7 +167,7 @@ module.exports = {\n_isLinkedToArray: 'transform',\neditType: 'calc',\ndescription: [\n- 'This attribute is deprecated and it may be removed from the API in next major version.',\n+ 'WARNING: All transforms are deprecated and may be removed from the API in next major version.',\n'An array of operations that manipulate the trace data,',\n'for example filtering or sorting the data arrays.'\n].join(' ')\n"
    },
    {
        "org_diff": "diff --git a/packages/react/src/__tests__/ReactProfilerComponent-test.internal.js b/a/packages/react/src/__tests__/ReactProfilerComponent-test.internal.js @@ -19,19 +19,13 @@ function loadModules({\n   enableProfilerTimer = true,\n   enableProfilerCommitHooks = true,\n   enableProfilerNestedUpdatePhase = true,\n-  enableProfilerNestedUpdateScheduledHook = false,\n-  replayFailedUnitOfWorkWithInvokeGuardedCallback = false,\n } = {}) {\n   ReactFeatureFlags = require('shared/ReactFeatureFlags');\n \n   ReactFeatureFlags.enableProfilerTimer = enableProfilerTimer;\n   ReactFeatureFlags.enableProfilerCommitHooks = enableProfilerCommitHooks;\n   ReactFeatureFlags.enableProfilerNestedUpdatePhase =\n     enableProfilerNestedUpdatePhase;\n-  ReactFeatureFlags.enableProfilerNestedUpdateScheduledHook =\n-    enableProfilerNestedUpdateScheduledHook;\n-  ReactFeatureFlags.replayFailedUnitOfWorkWithInvokeGuardedCallback =\n-    replayFailedUnitOfWorkWithInvokeGuardedCallback;\n \n   React = require('react');\n   ReactDOMClient = require('react-dom/client');",
        "org_msg": "Remove unused profiler flags and replayFailedUnitOfWorkWithInvokeGuardedCallback flag from ReactProfilerComponent-test internal test.",
        "sim_msg": "Remove experimental flag from test",
        "sim_diff": "diff --git a/__tests__/applyAtRule.test.js b/__tests__/applyAtRule.test.js @@ -4,9 +4,7 @@ import defaultConfig from '../stubs/defaultConfig.stub.js'\nimport tailwind from '../src/index'\nfunction run(input, config = {}) {\n- return postcss([\n- tailwind({ experimental: { applyComplexClasses: true }, ...config }),\n- ]).process(input, { from: undefined })\n+ return postcss([tailwind(config)]).process(input, { from: undefined })\n}\ntest('it copies class declarations into itself', () => {\n"
    },
    {
        "org_diff": "diff --git a/scripts/rollup/bundles.js b/a/scripts/rollup/bundles.js @@ -879,9 +879,7 @@ const bundles = [\n \n   /******* React Cache (experimental, old) *******/\n   {\n-    // This is only used by our own tests.\n-    // We can delete it later.\n-    bundleTypes: [NODE_DEV, NODE_PROD],\n+    bundleTypes: [NODE_DEV, NODE_PROD, FB_WWW_DEV, FB_WWW_PROD],\n     moduleType: ISOMORPHIC,\n     entry: 'react-cache',\n     global: 'ReactCacheOld',",
        "org_msg": "\"Add support for FB_WWW_DEV and FB_WWW_PROD in React Cache bundle\"",
        "sim_msg": "In README, add ReactDOM to CDN installation and add JSFiddle link",
        "sim_diff": "diff --git a/README.md b/README.md @@ -13,7 +13,7 @@ An HTML to React parser:\nParser(htmlString[, options])\n```\n-The parser converts a string of HTML to [React Element(s)](https://facebook.github.io/react/docs/glossary.html#react-elements).\n+The parser converts an HTML string to [React Element(s)](https://facebook.github.io/react/docs/react-api.html#creating-react-elements).\nThere is also an option to [replace](#replacedomnode) element(s) with your own React Element(s) via the [parser options](#options).\n@@ -25,6 +25,8 @@ Parser('<p>Hello, world!</p>');\n// same output as `React.createElement('p', {}, 'Hello, world!')`\n```\n+[JSFiddle](https://jsfiddle.net/remarkablemark/7v86d800/)\n+\n## Installation\n[NPM](https://www.npmjs.com/package/html-react-parser):\n@@ -42,8 +44,9 @@ $ npm install html-react-parser@0.2\n[CDN](https://unpkg.com/html-react-parser/):\n```html\n-<!-- HTMLReactParser depends on React -->\n+<!-- HTMLReactParser depends on React and ReactDOM -->\n<script src=\"https://unpkg.com/react@latest/dist/react.min.js\"></script>\n+<script src=\"https://unpkg.com/react-dom@latest/dist/react-dom.min.js\"></script>\n<script src=\"https://unpkg.com/html-react-parser@latest/dist/html-react-parser.min.js\"></script>\n```\n"
    },
    {
        "org_diff": "diff --git a/.github/workflows/commit_artifacts.yml b/a/.github/workflows/commit_artifacts.yml @@ -210,7 +210,7 @@ jobs:\n           commit_user_email: ${{ github.actor }}@users.noreply.github.com\n           create_branch: true\n \n-  commit_fbsource_artifacts:\n+  commit_fbsource_artifacts_external_repo:\n     needs: download_artifacts\n     runs-on: ubuntu-latest\n     if: ${{ (github.ref == 'refs/heads/main' && needs.download_artifacts.outputs.fbsource_branch_count == '0') || github.ref == 'refs/heads/meta-fbsource' }}\n@@ -245,3 +245,39 @@ jobs:\n             DiffTrain build for commit https://github.com/facebook/react/commit/${{ github.sha }}.\n           commit_user_name: ${{ github.actor }}\n           commit_user_email: ${{ github.actor }}@users.noreply.github.com\n+\n+  commit_fbsource_artifacts:\n+    needs: download_artifacts\n+    if: ${{ (github.ref == 'refs/heads/main' && needs.download_artifacts.outputs.fbsource_branch_count == '0') || github.ref == 'refs/heads/meta-fbsource' }}\n+    runs-on: ubuntu-latest\n+    steps:\n+      - uses: actions/checkout@v4\n+        with:\n+          ref: builds/facebook-fbsource\n+      - name: Ensure clean directory\n+        run: rm -rf compiled\n+      - uses: actions/download-artifact@v3\n+        with:\n+          name: compiled-rn\n+          path: compiled-rn/\n+      - run: git status -u\n+      - name: Check if only the REVISION file has changed\n+        id: check_should_commit\n+        run: |\n+          if git status --porcelain | grep -qv '/REVISION$'; then\n+            echo \"should_commit=true\" >> \"$GITHUB_OUTPUT\"\n+          else\n+            echo \"should_commit=false\" >> \"$GITHUB_OUTPUT\"\n+          fi\n+      - name: Commit changes to branch\n+        if: steps.check_should_commit.outputs.should_commit == 'true'\n+        uses: stefanzweifel/git-auto-commit-action@v4\n+        with:\n+          commit_message: |\n+            ${{ github.event.head_commit.message }}\n+\n+            DiffTrain build for commit https://github.com/facebook/react/commit/${{ github.sha }}.\n+          branch: builds/facebook-fbsource\n+          commit_user_name: ${{ github.actor }}\n+          commit_user_email: ${{ github.actor }}@users.noreply.github.com\n+          create_branch: true",
        "org_msg": "Add external repository for committing fbsource artifacts and update commit_fbsource_artifacts workflow.",
        "sim_msg": "adding commit",
        "sim_diff": "diff --git a/contributors.json b/contributors.json \"twitter\": \"https://twitter.com/RobsonFormigao\",\n\"website\": \"https://rformigao.github.io/\"\n},\n+ \"rifafatima\": {\n+ \"country\": \"India\",\n+ \"linkedin\": \"https://www.linkedin.com/in/rifa-fatima-70b6681b4\",\n+ \"name\": \"Rifa Fatima\"\n+ },\n\"Riyana6\": {\n\"country\": \"Sri lanka\",\n\"name\": \"Jeema Riyana\"\n"
    },
    {
        "org_diff": "diff --git a/packages/react-reconciler/src/ReactFiberCompleteWork.js b/a/packages/react-reconciler/src/ReactFiberCompleteWork.js @@ -329,7 +329,6 @@ function appendAllChildrenToContainer(\n     // children to find all the terminal nodes.\n     let node = workInProgress.child;\n     while (node !== null) {\n-      // eslint-disable-next-line no-labels\n       if (node.tag === HostComponent) {\n         let instance = node.stateNode;\n         if (needsVisibilityToggle && isHidden) {",
        "org_msg": "Remove eslint-disable-next-line no-labels from appendAllChildrenToContainer function",
        "sim_msg": "refactor: Remove eslint-disable-lines since no longer used",
        "sim_diff": "diff --git a/packages/fether-electron/src/main/app/index.js b/packages/fether-electron/src/main/app/index.js @@ -52,11 +52,11 @@ class FetherApp {\nthis.setupAppListeners();\nthis.createWindow();\n- this.updateProgress(0.4, undefined); // eslint-disable-line\n+ this.updateProgress(0.4, undefined);\nthis.createPositioner();\nthis.setupRequestListeners();\nthis.createTray();\n- this.updateProgress(0.6, undefined); // eslint-disable-line\n+ this.updateProgress(0.6, undefined);\nthis.loadTray();\nthis.setupDebug();\nthis.setupSecurity();\n@@ -64,12 +64,12 @@ class FetherApp {\nthis.setupParityEthereum();\nthis.setupGlobals();\nthis.setupMenu();\n- this.updateProgress(0.8, undefined); // eslint-disable-line\n+ this.updateProgress(0.8, undefined);\nthis.showWindow(undefined);\n- this.updateProgress(1.0, undefined); // eslint-disable-line\n+ this.updateProgress(1.0, undefined);\nthis.setupWindowListeners();\nthis.setupWin32Listeners();\n- this.updateProgress(-1, \"after-create-app\"); // eslint-disable-line\n+ this.updateProgress(-1, 'after-create-app');\n}\ncalculateWindowPosition = () => calculateWindowPosition(this);\n"
    },
    {
        "org_diff": "diff --git a/packages/react-native-renderer/src/ReactNativeTypes.js b/a/packages/react-native-renderer/src/ReactNativeTypes.js @@ -174,6 +174,25 @@ export type TouchedViewDataAtPoint = $ReadOnly<{\n   ...InspectorData,\n }>;\n \n+export type RenderRootOptions = {\n+  onUncaughtError?: (\n+    error: mixed,\n+    errorInfo: {+componentStack?: ?string},\n+  ) => void,\n+  onCaughtError?: (\n+    error: mixed,\n+    errorInfo: {\n+      +componentStack?: ?string,\n+      // $FlowFixMe[unclear-type] unknown props and state.\n+      +errorBoundary?: ?React$Component<any, any>,\n+    },\n+  ) => void,\n+  onRecoverableError?: (\n+    error: mixed,\n+    errorInfo: {+componentStack?: ?string},\n+  ) => void,\n+};\n+\n /**\n  * Flat ReactNative renderer bundles are too big for Flow to parse efficiently.\n  * Provide minimal Flow typing for the high-level RN API and call it a day.\n@@ -202,6 +221,7 @@ export type ReactNativeType = {\n     element: Element<ElementType>,\n     containerTag: number,\n     callback: ?() => void,\n+    options: ?RenderRootOptions,\n   ): ?ElementRef<ElementType>,\n   unmountComponentAtNode(containerTag: number): void,\n   unmountComponentAtNodeAndRemoveContainer(containerTag: number): void,\n@@ -215,24 +235,6 @@ export opaque type InternalInstanceHandle = mixed;\n type PublicInstance = mixed;\n type PublicTextInstance = mixed;\n \n-export type RenderRootOptions = {\n-  onUncaughtError?: (\n-    error: mixed,\n-    errorInfo: {+componentStack?: ?string},\n-  ) => void,\n-  onCaughtError?: (\n-    error: mixed,\n-    errorInfo: {\n-      +componentStack?: ?string,\n-      +errorBoundary?: ?React$Component<any, any>,\n-    },\n-  ) => void,\n-  onRecoverableError?: (\n-    error: mixed,\n-    errorInfo: {+componentStack?: ?string},\n-  ) => void,\n-};\n-\n export type ReactFabricType = {\n   findHostInstance_DEPRECATED<TElementType: ElementType>(\n     componentOrHandle: ?(ElementRef<TElementType> | number),",
        "org_msg": "Add RenderRootOptions type and options property to ReactNativeType.",
        "sim_msg": "chore: add deprecated-react-native-prop-types to avoid RN69 issue about the fact that they delete ViewPropTypes and get a fatal error",
        "sim_diff": "diff --git a/package.json b/package.json \"@turf/length\": \"6.5.0\",\n\"@turf/nearest-point-on-line\": \"6.5.0\",\n\"@types/geojson\": \"^7946.0.7\",\n- \"debounce\": \"^1.2.0\"\n+ \"debounce\": \"^1.2.0\",\n+ \"deprecated-react-native-prop-types\": \"^2.3.0\"\n},\n\"devDependencies\": {\n\"@babel/core\": \"7.17.5\",\n"
    },
    {
        "org_diff": "diff --git a/packages/internal-test-utils/__tests__/ReactInternalTestUtils-test.js b/a/packages/internal-test-utils/__tests__/ReactInternalTestUtils-test.js @@ -2146,7 +2146,7 @@ describe('ReactInternalTestUtils console assertions', () => {\n         - Expected errors\n         + Received errors\n \n-        - This is a complete different message that happens to start with \"T\"\n+        - This is a completely different message that happens to start with \"T\"\n         + Message that happens to contain a \"T\" <component stack>\"\n       `);\n     });",
        "org_msg": "Fix typo in error message in ReactInternalTestUtils-test.js",
        "sim_msg": "Fix typo in react shim test.",
        "sim_diff": "diff --git a/assets/js/react-shim.test.js b/assets/js/react-shim.test.js @@ -24,7 +24,7 @@ import reactDefault, * as react from 'react';\n/**\n* Internal dependencies\n*/\n-import reachShimDefault, * as reactShim from './react-shim';\n+import reactShimDefault, * as reactShim from './react-shim';\ndescribe( 'react shim', () => {\nit( 'mirrors all exports from the react package', () => {\n@@ -35,6 +35,6 @@ describe( 'react shim', () => {\n} );\nit( 'mirrors the default export', () => {\n- expect( reactDefault ).toEqual( reachShimDefault );\n+ expect( reactDefault ).toEqual( reactShimDefault );\n} );\n} );\n"
    },
    {
        "org_diff": "diff --git a/packages/shared/ReactFeatureFlags.js b/a/packages/shared/ReactFeatureFlags.js @@ -116,8 +116,6 @@ export const alwaysThrottleRetries = true;\n \n export const passChildrenWhenCloningPersistedNodes = false;\n \n-export const enableUseDeferredValueInitialArg = __EXPERIMENTAL__;\n-\n export const enableServerComponentLogs = __EXPERIMENTAL__;\n \n /**\n@@ -191,6 +189,9 @@ export const disableDOMTestUtils = true;\n // Make <Context> equivalent to <Context.Provider> instead of <Context.Consumer>\n export const enableRenderableContext = true;\n \n+// Enables the `initialValue` option for `useDeferredValue`\n+export const enableUseDeferredValueInitialArg = true;\n+\n // -----------------------------------------------------------------------------\n // Chopping Block\n //",
        "org_msg": "\"Enable useDeferredValueInitialArg and remove experimental flag\"",
        "sim_msg": "[native] Avoid unnecessary Animated.Value instantiations in useReanimatedValueForBoolean\nTest Plan: na\nReviewers: ashoat\nSubscribers: KatPo, palys-swm, Adrian",
        "sim_diff": "diff --git a/native/utils/animation-utils.js b/native/utils/animation-utils.js @@ -198,9 +198,12 @@ function ratchetAlongWithKeyboardHeight(\n}\nfunction useReanimatedValueForBoolean(booleanValue: boolean): Value {\n- const reanimatedValueRef = React.useRef(new Value(booleanValue ? 1 : 0));\n+ const reanimatedValueRef = React.useRef();\n+ if (!reanimatedValueRef.current) {\n+ reanimatedValueRef.current = new Value(booleanValue ? 1 : 0);\n+ }\nReact.useEffect(() => {\n- reanimatedValueRef.current.setValue(booleanValue ? 1 : 0);\n+ reanimatedValueRef.current?.setValue(booleanValue ? 1 : 0);\n}, [booleanValue]);\nreturn reanimatedValueRef.current;\n}\n"
    },
    {
        "org_diff": "diff --git a/packages/react-server/src/ReactServerStreamConfigBun.js b/a/packages/react-server/src/ReactServerStreamConfigBun.js @@ -13,6 +13,7 @@ type BunReadableStreamController = ReadableStreamController & {\n   end(): mixed,\n   write(data: Chunk | BinaryChunk): void,\n   error(error: Error): void,\n+  flush?: () => void,\n };\n export type Destination = BunReadableStreamController;\n \n@@ -25,8 +26,12 @@ export function scheduleWork(callback: () => void) {\n }\n \n export function flushBuffered(destination: Destination) {\n-  // WHATWG Streams do not yet have a way to flush the underlying\n-  // transform streams. https://github.com/whatwg/streams/issues/960\n+  // Bun direct streams provide a flush function.\n+  // If we don't have any more data to send right now.\n+  // Flush whatever is in the buffer to the wire.\n+  if (typeof destination.flush === 'function') {\n+    destination.flush();\n+  }\n }\n \n export function beginWriting(destination: Destination) {}",
        "org_msg": "Add flush function to BunReadableStreamController and use it in flushBuffered function.",
        "sim_msg": "Make `Channel.put` and `Buffer.flush` non-optional",
        "sim_diff": "diff --git a/index.d.ts b/index.d.ts @@ -99,12 +99,12 @@ export interface Buffer<T> {\nisEmpty(): boolean;\nput(message: T): void;\ntake(): T | undefined;\n- flush?(): void;\n+ flush(): void;\n}\nexport interface Channel<T> {\ntake(cb: (message: T | END) => void): void;\n- put?(message: T | END): void;\n+ put(message: T | END): void;\nflush(): void;\nclose(): void;\n}\n"
    },
    {
        "org_diff": "diff --git a/packages/react-devtools-shared/src/devtools/cache.js b/a/packages/react-devtools-shared/src/devtools/cache.js @@ -59,19 +59,30 @@ const Pending = 0;\n const Resolved = 1;\n const Rejected = 2;\n \n-const ReactSharedInternals = (React: any)\n-  .__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE;\n-\n-function readContext(Context: ReactContext<null>) {\n-  const dispatcher = ReactSharedInternals.H;\n-  if (dispatcher === null) {\n-    throw new Error(\n-      'react-cache: read and preload may only be called from within a ' +\n-        \"component's render. They are not supported in event handlers or \" +\n-        'lifecycle methods.',\n-    );\n-  }\n-  return dispatcher.readContext(Context);\n+let readContext;\n+if (typeof React.use === 'function') {\n+  readContext = function (Context: ReactContext<null>) {\n+    return React.use(Context);\n+  };\n+} else if (\n+  typeof (React: any).__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED ===\n+  'object'\n+) {\n+  const ReactCurrentDispatcher = (React: any)\n+    .__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentDispatcher;\n+  readContext = function (Context: ReactContext<null>) {\n+    const dispatcher = ReactCurrentDispatcher.current;\n+    if (dispatcher === null) {\n+      throw new Error(\n+        'react-cache: read and preload may only be called from within a ' +\n+          \"component's render. They are not supported in event handlers or \" +\n+          'lifecycle methods.',\n+      );\n+    }\n+    return dispatcher.readContext(Context);\n+  };\n+} else {\n+  throw new Error('react-cache: Unsupported React version');\n }\n \n const CacheContext = createContext(null);",
        "org_msg": "Refactor readContext function to support different versions of React.",
        "sim_msg": "add listener to filter prop, readd layer when updated, fix removeAndReaddLayer",
        "sim_diff": "diff --git a/ios/RCTMGL-v10/RCTMGLLayer.swift b/ios/RCTMGL-v10/RCTMGLLayer.swift @@ -20,7 +20,15 @@ class RCTMGLLayer : UIView, RCTMGLMapComponent, RCTMGLSourceConsumer {\nvar style: Style? = nil\n- @objc var filter : Array<Any>? = nil\n+ @objc var filter : Array<Any>? = nil {\n+ didSet {\n+ if self.styleLayer != nil {\n+ self.setOptions(&self.styleLayer!)\n+ self.removeAndReaddLayer()\n+ }\n+ }\n+ }\n+\n@objc var id: String! = nil\n@objc var sourceID: String? = nil\n@@ -204,9 +212,13 @@ class RCTMGLLayer : UIView, RCTMGLMapComponent, RCTMGLSourceConsumer {\n}\nif let filter = filter, filter.count > 0 {\n- let data = try! JSONSerialization.data(withJSONObject: filter, options: .prettyPrinted)\n- let decodedExpression = try! JSONDecoder().decode(Expression.self, from: data)\n+ do {\n+ let data = try JSONSerialization.data(withJSONObject: filter, options: .prettyPrinted)\n+ let decodedExpression = try JSONDecoder().decode(Expression.self, from: data)\nlayer.filter = decodedExpression\n+ } catch {\n+ Logger.log(level: .error, message: \"parsing filters failed for layer \\(id)\")\n+ }\n} else {\nlayer.filter = nil\n}\n@@ -228,10 +240,8 @@ class RCTMGLLayer : UIView, RCTMGLMapComponent, RCTMGLSourceConsumer {\nif (self.styleLayer != nil) {\ntry! style.removeLayer(withId: self.id)\n}\n- self.styleLayer = nil\n}\n-\nfunc insert(_ style: Style, layerPosition: LayerPosition, inserted: (() -> Void)? = nil) {\nvar idToWaitFor : String? = nil\nswitch layerPosition {\n"
    },
    {
        "org_diff": "diff --git a/packages/react-reconciler/src/ReactFiberClassComponent.js b/a/packages/react-reconciler/src/ReactFiberClassComponent.js @@ -1274,7 +1274,7 @@ export function resolveClassComponentProps(\n     // We may have already copied the props object above to remove ref. If so,\n     // we can modify that. Otherwise, copy the props object with Object.assign.\n     if (newProps === baseProps) {\n-      newProps = assign({}, newProps, baseProps);\n+      newProps = assign({}, newProps);\n     }\n     // Taken from old JSX runtime, where this used to live.\n     for (const propName in defaultProps) {",
        "org_msg": "\"Refactor resolveClassComponentProps to remove unnecessary assignment of baseProps in ReactFiberClassComponent.js\"",
        "sim_msg": "refactor(lib): don't destructure react-property and utilities",
        "sim_diff": "diff --git a/lib/attributes-to-props.js b/lib/attributes-to-props.js var reactProperty = require('react-property');\nvar utilities = require('./utilities');\n-var setStyleProp = utilities.setStyleProp;\n-\n-var htmlProperties = reactProperty.html;\n-var svgProperties = reactProperty.svg;\n-var isCustomAttribute = reactProperty.isCustomAttribute;\n-\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n@@ -28,15 +22,15 @@ function attributesToProps(attributes) {\nattributeValue = attributes[attributeName];\n// ARIA (aria-*) or custom data (data-*) attribute\n- if (isCustomAttribute(attributeName)) {\n+ if (reactProperty.isCustomAttribute(attributeName)) {\nprops[attributeName] = attributeValue;\ncontinue;\n}\n// convert HTML attribute to React prop\nattributeNameLowerCased = attributeName.toLowerCase();\n- if (hasOwnProperty.call(htmlProperties, attributeNameLowerCased)) {\n- property = htmlProperties[attributeNameLowerCased];\n+ if (hasOwnProperty.call(reactProperty.html, attributeNameLowerCased)) {\n+ property = reactProperty.html[attributeNameLowerCased];\nprops[property.propertyName] =\nproperty.hasBooleanValue ||\n(property.hasOverloadedBooleanValue && !attributeValue)\n@@ -46,8 +40,8 @@ function attributesToProps(attributes) {\n}\n// convert SVG attribute to React prop\n- if (hasOwnProperty.call(svgProperties, attributeName)) {\n- property = svgProperties[attributeName];\n+ if (hasOwnProperty.call(reactProperty.svg, attributeName)) {\n+ property = reactProperty.svg[attributeName];\nprops[property.propertyName] = attributeValue;\ncontinue;\n}\n@@ -59,7 +53,7 @@ function attributesToProps(attributes) {\n}\n// transform inline style to object\n- setStyleProp(attributes.style, props);\n+ utilities.setStyleProp(attributes.style, props);\nreturn props;\n}\n"
    },
    {
        "org_diff": "diff --git a/scripts/rollup/bundles.js b/a/scripts/rollup/bundles.js @@ -293,7 +293,6 @@ const bundles = [\n     bundleTypes: __EXPERIMENTAL__ ? [FB_WWW_DEV, FB_WWW_PROD] : [],\n     moduleType: RENDERER,\n     entry: 'react-server-dom-fb/src/ReactDOMServerFB.js',\n-    condition: 'react-server',\n     global: 'ReactDOMServerStreaming',\n     minifyWithProdErrorCodes: false,\n     wrapWithModuleBoundaries: false,",
        "org_msg": "Remove condition 'react-server' from ReactDOMServerFB bundle configuration",
        "sim_msg": "chore: remove switch to webpack serve",
        "sim_diff": "diff --git a/packages/netlify-cms/package.json b/packages/netlify-cms/package.json \"scripts\": {\n\"webpack\": \"node --max_old_space_size=4096 ../../node_modules/webpack/bin/webpack.js\",\n\"build\": \"cross-env NODE_ENV=production run-s webpack\",\n- \"build-preview\": \"cross-env NODE_ENV=production webpack-dev-server --open\",\n- \"develop\": \"webpack-dev-server --hot\"\n+ \"build-preview\": \"cross-env NODE_ENV=production webpack serve --open\",\n+ \"develop\": \"webpack serve --hot\"\n},\n\"keywords\": [\n\"netlify\",\n"
    },
    {
        "org_diff": "diff --git a/packages/react-devtools-fusebox/src/frontend.js b/a/packages/react-devtools-fusebox/src/frontend.js @@ -13,7 +13,10 @@ import Bridge from 'react-devtools-shared/src/bridge';\n import Store from 'react-devtools-shared/src/devtools/store';\n import DevTools from 'react-devtools-shared/src/devtools/views/DevTools';\n \n-import type {Wall} from 'react-devtools-shared/src/frontend/types';\n+import type {\n+  BrowserTheme,\n+  Wall,\n+} from 'react-devtools-shared/src/frontend/types';\n import type {FrontendBridge} from 'react-devtools-shared/src/bridge';\n \n type Config = {\n@@ -42,18 +45,20 @@ export function createStore(bridge: FrontendBridge, config?: Config): Store {\n type InitializationOptions = {\n   bridge: FrontendBridge,\n   store: Store,\n+  theme?: BrowserTheme,\n };\n \n export function initialize(\n   contentWindow: Element | Document,\n   options: InitializationOptions,\n ): void {\n-  const {bridge, store} = options;\n+  const {bridge, store, theme = 'light'} = options;\n   const root = createRoot(contentWindow);\n \n   root.render(\n     <DevTools\n       bridge={bridge}\n+      browserTheme={theme}\n       store={store}\n       showTabBar={true}\n       warnIfLegacyBackendDetected={true}",
        "org_msg": "Add theme option to initialize function",
        "sim_msg": "Add 'theme' to default settings file",
        "sim_diff": "diff --git a/packages/node_modules/node-red/settings.js b/packages/node_modules/node-red/settings.js @@ -320,6 +320,11 @@ module.exports = {\n* for all available options.\n*/\neditorTheme: {\n+ /** The following property can be used to set a custom theme for the editor.\n+ * See https://github.com/node-red-contrib-themes/theme-collection for\n+ * a collection of themes to chose from.\n+ */\n+ //theme: \"\",\npalette: {\n/** The following property can be used to order the categories in the editor\n* palette. If a node's category is not in the list, the category will get\n"
    },
    {
        "org_diff": "diff --git a/scripts/release/publish-commands/publish-to-npm.js b/a/scripts/release/publish-commands/publish-to-npm.js @@ -19,7 +19,7 @@ const run = async ({cwd, dry, tags, ci}, packageName, otp) => {\n   // But for now the easiest way is just to ask if this is expected.\n   const {status} = spawnSync('npm', ['view', `${packageName}@${version}`]);\n   const packageExists = status === 0;\n-  if (!packageExists) {\n+  if (packageExists) {\n     console.log(\n       theme`{package ${packageName}} {version ${version}} has already been published.`\n     );",
        "org_msg": "Fix condition to check if package exists before publishing",
        "sim_msg": "ci(release): fix publication when package is new",
        "sim_diff": "diff --git a/scripts/publish.js b/scripts/publish.js @@ -7,7 +7,14 @@ execa.shell('lerna ls -pl --json')\nreturn Promise.all(\npackages.map(\npkg => execa.shell(`npm info ${pkg.name}@${pkg.version}`)\n- .then(output => Object.assign(pkg, { publish: output.stdout.length > 0 })),\n+ .then(output => Object.assign(pkg, { publish: output.stdout.length > 0 }))\n+ .catch((err) => {\n+ if (!err.stderr.includes('404')) {\n+ console.error(err);\n+ process.exit(1);\n+ }\n+ return Object.assign(pkg, { publish: false });\n+ }),\n),\n);\n})\n"
    },
    {
        "org_diff": "diff --git a/scripts/release/publish-commands/publish-to-npm.js b/a/scripts/release/publish-commands/publish-to-npm.js @@ -2,10 +2,11 @@\n \n 'use strict';\n \n+const {spawnSync} = require('child_process');\n const {exec} = require('child-process-promise');\n const {readJsonSync} = require('fs-extra');\n const {join} = require('path');\n-const {confirm, execRead} = require('../utils');\n+const {confirm} = require('../utils');\n const theme = require('../theme');\n \n const run = async ({cwd, dry, tags, ci}, packageName, otp) => {\n@@ -16,8 +17,9 @@ const run = async ({cwd, dry, tags, ci}, packageName, otp) => {\n   // If so we might be resuming from a previous run.\n   // We could infer this by comparing the build-info.json,\n   // But for now the easiest way is just to ask if this is expected.\n-  const info = await execRead(`npm view ${packageName}@${version}`);\n-  if (info) {\n+  const {status} = spawnSync('npm', ['view', `${packageName}@${version}`]);\n+  const packageExists = status === 0;\n+  if (!packageExists) {\n     console.log(\n       theme`{package ${packageName}} {version ${version}} has already been published.`\n     );",
        "org_msg": "refactor(publish-to-npm): Change npm view to use spawnSync",
        "sim_msg": "complete npm publish logic",
        "sim_diff": "diff --git a/.circleci/config.yml b/.circleci/config.yml @@ -33,32 +33,7 @@ jobs:\ncommand: yarn lint\n- run:\nname: Solhint\n- command: |\n- cd utils/order-utils\n- NPM_NAME=$(node -p \"require('./package.json').name\")\n- NPM_VERSION=$(npm view $NPM_NAME version || :)\n- NPM_BETA_VERSION=$(npm view $NPM_NAME dist-tags.beta || :)\n- LOCAL_VERSION=$(node -p \"require('./package.json').version\")\n- if [[ $LOCAL_VERSION == *\"beta\"* ]]; then\n- echo \"local version is beta\"\n- if [[ $LOCAL_VERSION != $NPM_BETA_VERSION ]]; then\n- echo \"local beta is different to npm beta\"\n- echo $LOCAL_VERSION\n- echo $NPM_BETA_VERSION\n- else\n- echo \"local beta is the same as npm beta\"\n- echo $LOCAL_VERSION\n- echo $NPM_BETA_VERSION\n- fi\n- else\n- echo \"local version is NOT beta\"\n- if [[ $LOCAL_VERSION != $NPM_VERSION ]]; then\n- echo \"local latest is different to npm latest\"\n- echo $LOCAL_VERSION\n- echo $NPM_VERSION\n- fi\n- fi\n-\n+ command: yarn hint\n- run:\nname: Check Dependencies\ncommand: |\n@@ -181,15 +156,15 @@ jobs:\nif [[ $LOCAL_VERSION != $NPM_BETA_VERSION ]]; then\necho \"Publishing package to NPM with 'beta' tag...\"\nnpm publish --tag beta\n+ npm access public $NPM_NAME\nfi\nelse\nif [[ $LOCAL_VERSION != $NPM_VERSION ]]; then\necho \"Publishing package to NPM with 'latest' tag...\"\nnpm publish\n+ npm access public $NPM_NAME\nfi\nfi\n- ### Both beta and latest have public access\n- npm access public $NPM_NAME\ncd ..\ndone\n- run:\n@@ -204,20 +179,26 @@ jobs:\nNPM_VERSION=$(npm view $NPM_NAME version || :)\nNPM_BETA_VERSION=$(npm view $NPM_NAME dist-tags.beta || :)\nLOCAL_VERSION=$(node -p \"require('./package.json').version\")\n- if [[ $LOCAL_VERSION != $NPM_VERSION ]]; then\n+ ### Check if the local version is beta, otherwise publish normally\n+ if [[ $LOCAL_VERSION == *\"beta\"* ]]; then\n+ if [[ $LOCAL_VERSION != $NPM_BETA_VERSION ]]; then\necho \"Generating build...\"\nyarn compile\n### This is where we deploy the package to NPM\n- if [[ $LOCAL_VERSION == *\"beta\"* ]]; then\necho \"Publishing package to NPM with 'beta' tag...\"\nnpm publish --tag beta\n+ npm access public $NPM_NAME\n+ fi\nelse\n+ if [[ $LOCAL_VERSION != $NPM_VERSION ]]; then\n+ echo \"Generating build...\"\n+ yarn compile\n+ ### This is where we deploy the package to NPM\necho \"Publishing package to NPM with 'latest' tag...\"\nnpm publish\n- fi\n- ### Both beta and latest have public access\nnpm access public $NPM_NAME\nfi\n+ fi\ncd ..\ndone\n# Now we need to iterate over folders and deploy the folders that are listed\n"
    },
    {
        "org_diff": "diff --git a/packages/react-reconciler/src/__tests__/ReactSuspenseFuzz-test.internal.js b/a/packages/react-reconciler/src/__tests__/ReactSuspenseFuzz-test.internal.js @@ -115,24 +115,19 @@ describe('ReactSuspenseFuzz', () => {\n               setTimeout(() => {\n                 cache.set(fullText, fullText);\n                 pendingTasks.delete(task);\n-                Scheduler.log(task.label);\n                 resolve();\n               }, delay);\n             },\n           };\n           cache.set(fullText, thenable);\n-          Scheduler.log(`Suspended! [${fullText}]`);\n           throw thenable;\n         } else if (typeof resolvedText.then === 'function') {\n-          const thenable = resolvedText;\n-          Scheduler.log(`Suspended! [${fullText}]`);\n-          throw thenable;\n+          throw resolvedText;\n         }\n       } else {\n         resolvedText = fullText;\n       }\n \n-      Scheduler.log(resolvedText);\n       return resolvedText;\n     }\n ",
        "org_msg": "Remove unnecessary Scheduler.log calls and simplify error handling in ReactSuspenseFuzz-test.internal.js",
        "sim_msg": "Improve demo-app JS-logging to allow for better investigation of future flakiness",
        "sim_diff": "diff --git a/detox/test/src/app.js b/detox/test/src/app.js @@ -53,6 +53,7 @@ class example extends Component {\nasync componentDidMount() {\nconst url = await Linking.getInitialURL();\nif (url) {\n+ console.log('App@didMount: Found pending URL', url);\nthis.setState({url: url});\n}\n}\n@@ -63,7 +64,7 @@ class example extends Component {\nrender() {\nif (this.state.notification) {\n- console.log(\"notification:\", this.state.notification);\n+ console.log(\"App@render: rendering a notification\", this.state.notification);\nif (this.state.notification.title) {\nreturn this.renderText(this.state.notification.title);\n} else {\n@@ -73,12 +74,12 @@ class example extends Component {\n}\nelse if (this.state.url) {\n- console.log(\"url:\", this.state.url);\n+ console.log(\"App@render: rendering a URL:\", this.state.url);\nreturn this.renderText(this.state.url);\n}\nif (!this.state.screen) {\n- console.log(\"JS rendering\");\n+ console.log(\"App@render: JS rendering main screen\");\nreturn (\n<View style={{flex: 1, paddingTop: 10, justifyContent: 'center', alignItems: 'center'}}>\n<Text style={{fontSize: 20, marginBottom: 10}}>\n@@ -115,12 +116,12 @@ class example extends Component {\n}\n_onNotification(notification) {\n- console.log(\"onNotification:\", notification);\n+ console.log('App@onNotification:', notification);\nthis.setState({notification: notification.getAlert()});\n}\n_handleOpenURL(params) {\n- console.log(\"handleOpenURL:\", params);\n+ console.log('App@handleOpenURL:', params);\nthis.setState({url: params.url});\n}\n}\n"
    },
    {
        "org_diff": "diff --git a/packages/react-reconciler/src/__tests__/useEffectEvent-test.js b/a/packages/react-reconciler/src/__tests__/useEffectEvent-test.js @@ -742,7 +742,7 @@ describe('useEffectEvent', () => {\n     await act(() =>\n       ReactNoop.render(<ChatRoom roomId=\"general\" theme=\"light\" />),\n     );\n-    await act(() => jest.runAllTimers());\n+\n     assertLog(['Welcome to the general room!', 'Connected! theme: light']);\n     expect(ReactNoop).toMatchRenderedOutput(\n       <span prop=\"Welcome to the general room!\" />,\n@@ -752,20 +752,17 @@ describe('useEffectEvent', () => {\n     await act(() =>\n       ReactNoop.render(<ChatRoom roomId=\"music\" theme=\"light\" />),\n     );\n-    await act(() => jest.runAllTimers());\n     assertLog([\n       'Welcome to the music room!',\n       // should trigger a reconnect\n       'Connected! theme: light',\n     ]);\n-\n     expect(ReactNoop).toMatchRenderedOutput(\n       <span prop=\"Welcome to the music room!\" />,\n     );\n \n     // change theme only\n     await act(() => ReactNoop.render(<ChatRoom roomId=\"music\" theme=\"dark\" />));\n-    await act(() => jest.runAllTimers());\n     // should not trigger a reconnect\n     assertLog(['Welcome to the music room!']);\n     expect(ReactNoop).toMatchRenderedOutput(\n@@ -776,7 +773,6 @@ describe('useEffectEvent', () => {\n     await act(() =>\n       ReactNoop.render(<ChatRoom roomId=\"travel\" theme=\"dark\" />),\n     );\n-    await act(() => jest.runAllTimers());\n     assertLog([\n       'Welcome to the travel room!',\n       // should trigger a reconnect",
        "org_msg": "Remove unnecessary calls to jest.runAllTimers() in useEffectEvent-test.js",
        "sim_msg": "Call jest.useRealTimers in global beforeAll.",
        "sim_diff": "diff --git a/tests/js/setup-before-after.js b/tests/js/setup-before-after.js @@ -32,6 +32,10 @@ import { enabledFeatures } from '../../assets/js/features';\n// It is re-set here since fetch-mock-jest must be imported during Jest's `setupFilesAfterEnv` or later.\nglobal.fetchMock = fetchMockJest;\n+beforeAll( () => {\n+ jest.useRealTimers();\n+} );\n+\nbeforeEach( () => {\nlocalStorage.clear();\nsessionStorage.clear();\n"
    },
    {
        "org_diff": "diff --git a/packages/react-reconciler/src/__tests__/ReactUse-test.js b/a/packages/react-reconciler/src/__tests__/ReactUse-test.js @@ -663,6 +663,8 @@ describe('ReactUse', () => {\n     }\n \n     const root1 = ReactNoop.createRoot();\n+    assertLog(['Async text requested [Hi]']);\n+\n     await act(() => {\n       root1.render(<Suspense fallback={<Text text=\"Loading...\" />} />);\n     });\n@@ -677,7 +679,7 @@ describe('ReactUse', () => {\n         );\n       });\n     });\n-    assertLog(['Async text requested [Hi]']);\n+    assertLog([]);\n \n     // While we're waiting for the first root's data to resolve, a second\n     // root renders.",
        "org_msg": "\"Add assertion for async text request and update assertLog in ReactUse-test.js\"",
        "sim_msg": "update async usage in tests",
        "sim_diff": "diff --git a/tests/service/data-util.service.spec.ts b/tests/service/data-util.service.spec.ts @@ -65,7 +65,7 @@ describe('Data Utils Service Test', () => {\nexpect(tempLink.click).toHaveBeenCalledWith();\n}));\n- it('should return a promise that rejects with an error message when image is passed but file type is not image', async(() => inject([JhiDataUtils], (service: JhiDataUtils) => {\n+ it('should return a promise that rejects with an error message when image is passed but file type is not image', async(inject([JhiDataUtils], (service: JhiDataUtils) => {\nconst eventSake = {\ntarget: {\n@@ -79,9 +79,9 @@ describe('Data Utils Service Test', () => {\n(error) => expect(error).toMatch(/^File was expected to be an image but was found to be /)\n);\n- })()));\n+ })));\n- it('should return a promise that resolves to the modified entity', async(() => inject([JhiDataUtils], (service: JhiDataUtils) => {\n+ it('should return a promise that resolves to the modified entity', async(inject([JhiDataUtils], (service: JhiDataUtils) => {\nconst eventSake = {\ntarget: {\n@@ -92,9 +92,9 @@ describe('Data Utils Service Test', () => {\nservice.setFileData(eventSake, {}, 'document', false)\n.then((modifiedEntity) => expect(modifiedEntity).toEqual({ document: 'ZmlsZSBjb250ZW50', documentContentType: '' }));\n- })()));\n+ })));\n- it('should return a promise that rejects with an error message when passed event does not contain a file', async(() => inject([JhiDataUtils], (service: JhiDataUtils) => {\n+ it('should return a promise that rejects with an error message when passed event does not contain a file', async(inject([JhiDataUtils], (service: JhiDataUtils) => {\nservice.setFileData(null, null, null, false)\n.then(\n@@ -102,6 +102,6 @@ describe('Data Utils Service Test', () => {\n(error) => expect(error).toMatch(/^Base64 data was not set as file could not be extracted from passed parameter: /)\n);\n- })()));\n+ })));\n});\n"
    },
    {
        "org_diff": "diff --git a/packages/react-dom/src/__tests__/ReactUpdates-test.js b/a/packages/react-dom/src/__tests__/ReactUpdates-test.js @@ -1900,6 +1900,8 @@ describe('ReactUpdates', () => {\n       await act(() => {\n         root.render(<Terminating />);\n       });\n+\n+      assertLog(Array.from({length: LIMIT + 1}, (_, k) => k));\n       expect(container.textContent).toBe('50');\n       await act(() => {\n         _setStep(0);",
        "org_msg": "Add assertLog to ReactUpdates-test.js",
        "sim_msg": "update assert messages",
        "sim_diff": "diff --git a/contracts/common/test/Transfers-unit.js b/contracts/common/test/Transfers-unit.js @@ -53,7 +53,7 @@ contract('Transfers Unit Tests', async accounts => {\n})\n)\nlet newReceiverBalance = await web3.eth.getBalance(receiver)\n- equal(newReceiverBalance, BigNumber(receiverBalance).plus(etherAmount))\n+ equal(newReceiverBalance, BigNumber(receiverBalance).plus(etherAmount), 'Ether in the transfer is missing.')\n})\n})\n@@ -80,7 +80,7 @@ contract('Transfers Unit Tests', async accounts => {\nlet invocationCount = await mockFungibleToken.invocationCountForMethod.call(\nfungibleToken_transferFrom\n)\n- equal(invocationCount, 1, 'FungibleToken.transferFrom was called once')\n+ equal(invocationCount, 1, 'FungibleToken.transferFrom was not called.')\n})\nit('Test transferAny ERC721', async () => {\n@@ -116,7 +116,7 @@ contract('Transfers Unit Tests', async accounts => {\nequal(\ninvocationCount,\n1,\n- 'NonFungibleToken.safetransferFrom was called once'\n+ 'NonFungibleToken.safetransferFrom was not called.'\n)\n})\n})\n@@ -209,7 +209,7 @@ contract('Transfers Unit Tests', async accounts => {\nequal(\ninvocationCount,\n1,\n- 'NonFungibleToken.safetransferFrom was called once'\n+ 'NonFungibleToken.safetransferFrom was not called.'\n)\n})\n})\n"
    },
    {
        "org_diff": "diff --git a/packages/react-dom/src/__tests__/ReactDOMServerSelectiveHydration-test.internal.js b/a/packages/react-dom/src/__tests__/ReactDOMServerSelectiveHydration-test.internal.js @@ -1114,14 +1114,16 @@ describe('ReactDOMServerSelectiveHydration', () => {\n       // Outer was hydrated earlier\n       OuterTestUtils.assertLog([]);\n \n+      // First Inner Mouse Enter fires then Outer Mouse Enter\n+      assertLog(['Inner Mouse Enter', 'Outer Mouse Enter']);\n+\n       await act(() => {\n         Scheduler.unstable_flushAllWithoutAsserting();\n         OuterScheduler.unstable_flushAllWithoutAsserting();\n         InnerScheduler.unstable_flushAllWithoutAsserting();\n       });\n \n-      // First Inner Mouse Enter fires then Outer Mouse Enter\n-      assertLog(['Inner Mouse Enter', 'Outer Mouse Enter']);\n+      assertLog([]);\n     });\n   });\n ",
        "org_msg": "\"Add test for Inner and Outer Mouse Enter events firing sequentially\"",
        "sim_msg": "check for mouse start on mouse end",
        "sim_diff": "diff --git a/src/moto/space.js b/src/moto/space.js x: (event.clientX / width()) * 2 - 1,\ny: -(event.clientY / height()) * 2 + 1};\n// only fire on mouse move between mouseStart (down) and up\n- if (mouseEnd.x - mouseStart.x + mouseEnd.y - mouseStart.y === 0) {\n+ if (mouseStart && mouseEnd.x - mouseStart.x + mouseEnd.y - mouseStart.y === 0) {\nevent.preventDefault();\nlet refresh = false,\nselection = null;\nplatformClick(platformClickAt);\n}\nif (refresh) requestRefresh();\n+ mouseStart = null;\n} else if (mouseDrag && mouseDragStart) {\nmouseDrag(null,null,true);\n}\n"
    },
    {
        "org_diff": "diff --git a/packages/react-dom/src/__tests__/ReactCompositeComponentState-test.js b/a/packages/react-dom/src/__tests__/ReactCompositeComponentState-test.js @@ -152,21 +152,6 @@ describe('ReactCompositeComponent-state', () => {\n       root.render(<TestComponent />);\n     });\n \n-    await act(() => {\n-      root.render(<TestComponent nextColor=\"green\" />);\n-    });\n-\n-    await act(() => {\n-      testComponentInstance.setFavoriteColor('blue');\n-    });\n-    await act(() => {\n-      testComponentInstance.forceUpdate(\n-        testComponentInstance.peekAtCallback('forceUpdate'),\n-      );\n-    });\n-\n-    root.unmount();\n-\n     assertLog([\n       // there is no state when getInitialState() is called\n       'getInitialState undefined',\n@@ -198,6 +183,13 @@ describe('ReactCompositeComponent-state', () => {\n       'componentDidUpdate-prevState orange',\n       'setState-yellow yellow',\n       'commit yellow',\n+    ]);\n+\n+    await act(() => {\n+      root.render(<TestComponent nextColor=\"green\" />);\n+    });\n+\n+    assertLog([\n       'componentWillReceiveProps-start yellow',\n       // setState({color:'green'}) only enqueues a pending state.\n       'componentWillReceiveProps-end yellow',\n@@ -216,6 +208,13 @@ describe('ReactCompositeComponent-state', () => {\n       'componentDidUpdate-prevState yellow',\n       'setState-receiveProps green',\n       'commit green',\n+    ]);\n+\n+    await act(() => {\n+      testComponentInstance.setFavoriteColor('blue');\n+    });\n+\n+    assertLog([\n       // setFavoriteColor('blue')\n       'shouldComponentUpdate-currentState green',\n       'shouldComponentUpdate-nextState blue',\n@@ -226,6 +225,13 @@ describe('ReactCompositeComponent-state', () => {\n       'componentDidUpdate-prevState green',\n       'setFavoriteColor blue',\n       'commit blue',\n+    ]);\n+    await act(() => {\n+      testComponentInstance.forceUpdate(\n+        testComponentInstance.peekAtCallback('forceUpdate'),\n+      );\n+    });\n+    assertLog([\n       // forceUpdate()\n       'componentWillUpdate-currentState blue',\n       'componentWillUpdate-nextState blue',\n@@ -234,7 +240,12 @@ describe('ReactCompositeComponent-state', () => {\n       'componentDidUpdate-prevState blue',\n       'forceUpdate blue',\n       'commit blue',\n-      // unmountComponent()\n+    ]);\n+\n+    root.unmount();\n+\n+    assertLog([\n+      // unmount()\n       // state is available within `componentWillUnmount()`\n       'componentWillUnmount blue',\n     ]);\n@@ -375,13 +386,13 @@ describe('ReactCompositeComponent-state', () => {\n     await act(() => {\n       root.render(<Parent />);\n     });\n+\n+    assertLog(['parent render one', 'child render one']);\n     await act(() => {\n       root.render(<Parent />);\n     });\n \n     assertLog([\n-      'parent render one',\n-      'child render one',\n       'parent render one',\n       'child componentWillReceiveProps one',\n       'child componentWillReceiveProps done one',",
        "org_msg": "Refactored state management in ReactCompositeComponentState-test.js",
        "sim_msg": "refactor used state statements",
        "sim_diff": "diff --git a/assets/js/modules/analytics/setup.js b/assets/js/modules/analytics/setup.js @@ -245,13 +245,15 @@ class AnalyticsSetup extends Component {\n}\nasync getAccounts() {\n+ let {\n+ selectedAccount,\n+ selectedProperty,\n+ selectedProfile,\n+ } = this.state;\nconst { isEditing } = this.props;\ntry {\nlet responseData = await data.get( 'modules', 'analytics', 'get-accounts', {}, false );\n- let selectedAccount = this.state.selectedAccount;\n- let selectedProperty = this.state.selectedProperty;\n- let selectedProfile = this.state.selectedProfile;\nif ( 0 === responseData.accounts.length ) {\n"
    },
    {
        "org_diff": "diff --git a/.github/workflows/commit_artifacts.yml b/a/.github/workflows/commit_artifacts.yml @@ -132,7 +132,7 @@ jobs:\n             ./compiled/facebook-www/eslint-plugin-react-hooks.js\n \n           # Move unstable_server-external-runtime.js into facebook-www\n-          mv build/oss-stable/react-dom/unstable_server-external-runtime.js \\\n+          mv build/oss-experimental/react-dom/unstable_server-external-runtime.js \\\n             ./compiled/facebook-www/unstable_server-external-runtime.js\n \n           # Move react-refresh-babel.development.js into babel-plugin-react-refresh",
        "org_msg": "Move unstable_server-external-runtime.js to experimental build directory",
        "sim_msg": "[server] Fix server dev environment for new app.build.cjs file",
        "sim_diff": "diff --git a/server/package.json b/server/package.json \"prod-build\": \"npm run babel && npm run rsync && npm run update-geoip\",\n\"update-geoip\": \"cd ../node_modules/geoip-lite && npm run updatedb\",\n\"prod\": \"node --experimental-modules --loader ./loader.mjs --es-module-specifier-resolution node dist/server\",\n- \"dev-rsync\": \"chokidar --initial -s 'src/**/*.json' 'src/**/*.build.js' -c 'npm run rsync' > /dev/null 2>&1\",\n- \"dev\": \"NODE_ENV=dev concurrently --names=\\\"BABEL,RSYNC,NODEM\\\" -c \\\"bgBlue.bold,bgMagenta.bold,bgGreen.bold\\\" \\\"npm run babel -- --watch\\\" \\\"npm run dev-rsync\\\" \\\"nodemon -e js,json --watch dist --experimental-modules --loader ./loader.mjs --es-module-specifier-resolution node dist/server\\\"\",\n+ \"dev-rsync\": \"chokidar --initial --silent -s 'src/**/*.json' 'src/**/*.cjs' -c 'npm run rsync > /dev/null 2>&1'\",\n+ \"dev\": \"NODE_ENV=dev concurrently --names=\\\"BABEL,RSYNC,NODEM\\\" -c \\\"bgBlue.bold,bgMagenta.bold,bgGreen.bold\\\" \\\"npm run babel -- --watch\\\" \\\"npm run dev-rsync\\\" \\\"nodemon -e js,json,cjs --watch dist --experimental-modules --loader ./loader.mjs --es-module-specifier-resolution node dist/server\\\"\",\n\"script\": \"node --experimental-modules --loader ./loader.mjs\"\n},\n\"author\": \"\",\n"
    },
    {
        "org_diff": "diff --git a/.circleci/config.yml b/a/.circleci/config.yml @@ -2,7 +2,7 @@ version: 2.1\n \n aliases:\n   - &docker\n-    - image: cimg/openjdk:18.0-node\n+    - image: cimg/node:18.20.1-browsers\n \n   - &environment\n     TZ: /usr/share/zoneinfo/America/Los_Angeles\n@@ -246,8 +246,7 @@ jobs:\n           command: ./scripts/circleci/run_devtools_e2e_tests.js\n \n   run_fixtures_flight_tests:\n-    docker:\n-      - image: cimg/openjdk:20.0-node\n+    docker: *docker\n     environment: *environment\n     steps:\n       - checkout",
        "org_msg": "Update Docker image in CircleCI config to use cimg/node:18.20.1-browsers for better compatibility and performance. Also, refactor run_fixtures_flight_tests job to use the &docker and &environment aliases for consistency.",
        "sim_msg": "bump to node8/npm5 -> update circleci config\nuse official '8.9.4' docker images\nchecksum package-lock.json to check cache\nreplace (now unnecessary) install/dedupe/prune/install with\na simple install (now with package-lock.json this does the right\nthing everytime ;)",
        "sim_diff": "diff --git a/.circleci/config.yml b/.circleci/config.yml @@ -3,25 +3,25 @@ version: 2.0\n# Inspired by:\n# https://github.com/CircleCI-Public/circleci-demo-workflows/blob/workspace-forwarding/.circleci/config.yml\n# https://circleci.com/docs/2.0/workflows/#using-workspaces-to-share-data-among-jobs\n+#\n+# For list of official CircleCI node.js images, go to:\n+# https://hub.docker.com/r/circleci/node/tags/\njobs:\nbuild:\ndocker:\n- - image: circleci/node:6.10.3\n+ - image: circleci/node:8.9.4\nworking_directory: ~/plotly.js\nsteps:\n- checkout\n- restore_cache:\nkeys:\n- - v{{ .Environment.CIRCLE_CACHE_VERSION }}-deps-{{ .Branch }}-{{ checksum \"package.json\" }}\n- - v{{ .Environment.CIRCLE_CACHE_VERSION }}-deps-master-{{ checksum \"package.json\" }}\n+ - v{{ .Environment.CIRCLE_CACHE_VERSION }}-deps-{{ .Branch }}-{{ checksum \"package-lock.json\" }}\n+ - v{{ .Environment.CIRCLE_CACHE_VERSION }}-deps-master-{{ checksum \"package-lock.json\" }}\n- run:\nname: Install dependencies\ncommand: |\nnpm install\n- npm dedupe\n- npm prune\n- npm install\n- run:\nname: List dependency versions\ncommand: |\n@@ -47,7 +47,7 @@ jobs:\ntest-jasmine:\ndocker:\n# need '-browsers' version to test in real (xvfb-wrapped) browsers\n- - image: circleci/node:6.10.3-browsers\n+ - image: circleci/node:8.9.4-browsers\nworking_directory: ~/plotly.js\nsteps:\n- checkout\n@@ -82,7 +82,7 @@ jobs:\ntest-syntax:\ndocker:\n- - image: circleci/node:6.10.3\n+ - image: circleci/node:8.9.4\nworking_directory: ~/plotly.js\nsteps:\n- checkout\n"
    },
    {
        "org_diff": "diff --git a/.github/workflows/stale.yml b/a/.github/workflows/stale.yml @@ -2,8 +2,8 @@\n name: 'Manage stale issues and PRs'\n on:\n   schedule:\n-    # Run daily at 2AM\n-    - cron: '0 2 * * *'\n+    # Run hourly\n+    - cron: '0 * * * *'\n \n jobs:\n   stale:\n@@ -16,7 +16,7 @@ jobs:\n           days-before-stale: 90\n           # Number of days of inactivity before a stale issue or PR is closed\n           days-before-close: 7\n-          # Number of issues or PRs to process per day\n+          # API calls per run\n           operations-per-run: 100\n \n           # --- Issues ---\n@@ -43,4 +43,4 @@ jobs:\n           close-pr-message: >\n             Closing this pull request after a prolonged period of inactivity. If this issue is still present in the latest release, please ask for this pull request to be reopened. Thank you!\n           # PRs with these labels will never be considered stale\n-          exempt-pr-labels: \"Partner,React Core Team,Resolution: Backlog,Type: Bug,Type: Discussion,Type: Needs Investigation,Type: Regression,Type: Feature Request,Type: Enhancement\"\n\\ No newline at end of file\n+          exempt-pr-labels: \"Partner,React Core Team,Resolution: Backlog,Type: Bug,Type: Discussion,Type: Needs Investigation,Type: Regression,Type: Feature Request,Type: Enhancement\"",
        "org_msg": "Update schedule in stale workflow to run hourly and adjust operations-per-run to be API calls per run.",
        "sim_msg": "chore: update timer",
        "sim_diff": "diff --git a/src/index.js b/src/index.js @@ -204,7 +204,7 @@ if (verbose) dir({isZapHosting, forceInterface, forceFXServerPort, txAdminPort,\n//NOTE: Only valid if its being very actively maintained.\n// Use 30d for patch 0, or 45~60d otherwise\n// Objective is to update every 2~3 weeks, always on monday ~15:00\n-const txVerBBLastUpdate = 1639500000;\n+const txVerBBLastUpdate = 1640025000;\nconst txVerBBDelta = 21 + ((isZapHosting) ? 10 : 0);\nconst txAdminVersionBestBy = txVerBBLastUpdate + (txVerBBDelta * 86400);\n// dir({\n"
    },
    {
        "org_diff": "diff --git a/packages/react-dom/package.json b/a/packages/react-dom/package.json @@ -25,23 +25,28 @@\n   \"files\": [\n     \"LICENSE\",\n     \"README.md\",\n-    \"index.js\",\n     \"client.js\",\n+    \"client.react-server.js\",\n+    \"index.js\",\n     \"profiling.js\",\n-    \"server.js\",\n+    \"profiling.react-server.js\",\n+    \"react-dom.react-server.js\",\n+    \"server-rendering-stub.js\",\n     \"server.browser.js\",\n+    \"server.bun.js\",\n     \"server.edge.js\",\n+    \"server.js\",\n     \"server.node.js\",\n-    \"server.bun.js\",\n-    \"static.js\",\n+    \"server.react-server.js\",\n     \"static.browser.js\",\n     \"static.edge.js\",\n+    \"static.js\",\n     \"static.node.js\",\n-    \"server-rendering-stub.js\",\n+    \"static.react-server.js\",\n     \"test-utils.js\",\n     \"unstable_testing.js\",\n+    \"unstable_testing.react-server.js\",\n     \"unstable_server-external-runtime.js\",\n-    \"react-dom.react-server.js\",\n     \"cjs/\",\n     \"umd/\"\n   ],",
        "org_msg": "Update package.json to include new server and static files for react-server integration.",
        "sim_msg": "[Chore] Update package.json for new release",
        "sim_diff": "diff --git a/package.json b/package.json {\n\"name\": \"@react-native-mapbox-gl/maps\",\n\"description\": \"A Mapbox GL react native module for creating custom maps\",\n- \"version\": \"7.0.9\",\n+ \"version\": \"7.0.10\",\n\"publishConfig\": {\n\"access\": \"public\"\n},\n"
    },
    {
        "org_diff": "diff --git a/packages/react-dom/package.json b/a/packages/react-dom/package.json @@ -50,8 +50,12 @@\n       \"react-server\": \"./react-dom.react-server.js\",\n       \"default\": \"./index.js\"\n     },\n-    \"./client\": \"./client.js\",\n+    \"./client\": {\n+      \"react-server\": \"./client.react-server.js\",\n+      \"default\": \"./client.js\"\n+    },\n     \"./server\": {\n+      \"react-server\": \"./server.react-server.js\",\n       \"workerd\": \"./server.edge.js\",\n       \"bun\": \"./server.bun.js\",\n       \"deno\": \"./server.browser.js\",\n@@ -61,11 +65,24 @@\n       \"edge-light\": \"./server.edge.js\",\n       \"default\": \"./server.node.js\"\n     },\n-    \"./server.browser\": \"./server.browser.js\",\n-    \"./server.bun\": \"./server.bun.js\",\n-    \"./server.edge\": \"./server.edge.js\",\n-    \"./server.node\": \"./server.node.js\",\n+    \"./server.browser\": {\n+      \"react-server\": \"./server.react-server.js\",\n+      \"default\": \"./server.browser.js\"\n+    },\n+    \"./server.bun\": {\n+      \"react-server\": \"./server.react-server.js\",\n+      \"default\": \"./server.bun.js\"\n+    },\n+    \"./server.edge\": {\n+      \"react-server\": \"./server.react-server.js\",\n+      \"default\": \"./server.edge.js\"\n+    },\n+    \"./server.node\": {\n+      \"react-server\": \"./server.react-server.js\",\n+      \"default\": \"./server.node.js\"\n+    },\n     \"./static\": {\n+      \"react-server\": \"./static.react-server.js\",\n       \"workerd\": \"./static.edge.js\",\n       \"deno\": \"./static.browser.js\",\n       \"worker\": \"./static.browser.js\",\n@@ -74,13 +91,28 @@\n       \"edge-light\": \"./static.edge.js\",\n       \"default\": \"./static.node.js\"\n     },\n-    \"./static.browser\": \"./static.browser.js\",\n-    \"./static.edge\": \"./static.edge.js\",\n-    \"./static.node\": \"./static.node.js\",\n+    \"./static.browser\": {\n+      \"react-server\": \"./static.react-server.js\",\n+      \"default\": \"./static.browser.js\"\n+    },\n+    \"./static.edge\": {\n+      \"react-server\": \"./static.react-server.js\",\n+      \"default\": \"./static.edge.js\"\n+    },\n+    \"./static.node\": {\n+      \"react-server\": \"./static.react-server.js\",\n+      \"default\": \"./static.node.js\"\n+    },\n     \"./server-rendering-stub\": \"./server-rendering-stub.js\",\n-    \"./profiling\": \"./profiling.js\",\n+    \"./profiling\": {\n+      \"react-server\": \"./profiling.react-server.js\",\n+      \"default\": \"./profiling.js\"\n+    },\n     \"./test-utils\": \"./test-utils.js\",\n-    \"./unstable_testing\": \"./unstable_testing.js\",\n+    \"./unstable_testing\": {\n+      \"react-server\": \"./unstable_testing.react-server.js\",\n+      \"default\": \"./unstable_testing.js\"\n+    },\n     \"./unstable_server-external-runtime\": \"./unstable_server-external-runtime.js\",\n     \"./src/*\": \"./src/*\",\n     \"./package.json\": \"./package.json\"",
        "org_msg": "Refactor package.json to include react-server configuration for client, server, static, profiling, and unstable_testing directories.",
        "sim_msg": "fix paths in package.json for server and react client",
        "sim_diff": "diff --git a/fixed-price-subscriptions/package.json b/fixed-price-subscriptions/package.json \"description\": \"A Stripe sample implementing cards for subscriptions with fixed prices.\",\n\"main\": \"server.js\",\n\"scripts\": {\n- \"server\": \"node server.js\",\n- \"reactClient\": \"cd ../../client/react && npm start\",\n+ \"server\": \"node server/node/server.js\",\n+ \"reactClient\": \"cd client/react && npm start\",\n\"startReact\": \"concurrently \\\"yarn reactClient\\\" \\\"yarn server\\\"\",\n\"startVanillajs\": \"yarn server\",\n\"start\": \"yarn server\",\n"
    },
    {
        "org_diff": "diff --git a/packages/react-dom-bindings/src/client/ReactFiberConfigDOM.js b/a/packages/react-dom-bindings/src/client/ReactFiberConfigDOM.js @@ -2417,9 +2417,15 @@ export function getResource(\n       return null;\n     }\n     case 'script': {\n-      if (typeof pendingProps.src === 'string' && pendingProps.async === true) {\n-        const scriptProps: ScriptProps = pendingProps;\n-        const key = getScriptKey(scriptProps.src);\n+      const async = pendingProps.async;\n+      const src = pendingProps.src;\n+      if (\n+        typeof src === 'string' &&\n+        async &&\n+        typeof async !== 'function' &&\n+        typeof async !== 'symbol'\n+      ) {\n+        const key = getScriptKey(src);\n         const scripts = getResourcesFromRoot(resourceRoot).hoistableScripts;\n \n         let resource = scripts.get(key);\n@@ -3065,16 +3071,20 @@ export function isHostHoistableType(\n       }\n     }\n     case 'script': {\n+      const isAsync =\n+        props.async &&\n+        typeof props.async !== 'function' &&\n+        typeof props.async !== 'symbol';\n       if (\n-        props.async !== true ||\n+        !isAsync ||\n         props.onLoad ||\n         props.onError ||\n-        typeof props.src !== 'string' ||\n-        !props.src\n+        !props.src ||\n+        typeof props.src !== 'string'\n       ) {\n         if (__DEV__) {\n           if (outsideHostContainerContext) {\n-            if (props.async !== true) {\n+            if (!isAsync) {\n               console.error(\n                 'Cannot render a sync or defer <script> outside the main document without knowing its order.' +\n                   ' Try adding async=\"\" or moving it into the root <head> tag.',",
        "org_msg": "Refactor script async attribute handling",
        "sim_msg": "Better async handling",
        "sim_diff": "diff --git a/tools/metadata/src/helpers.ts b/tools/metadata/src/helpers.ts @@ -20,15 +20,14 @@ export async function getTokenName(\nif (!tokenAddress || !tokenAddress.startsWith('0x')) {\nthrow Error(`Invalid 'tokenAddress' parameter`)\n}\n-\n- return getContract(tokenAddress, ERC20_ABI, provider)\n- .name()\n- .catch(() =>\n- getContract(tokenAddress, ERC20_BYTES32_ABI, provider)\n- .name()\n- .then((bytes32: Arrayish) => ethers.utils.parseBytes32String(bytes32))\n+ try {\n+ return await getContract(tokenAddress, ERC20_ABI, provider).name()\n+ } catch {\n+ return ethers.utils.parseBytes32String(\n+ await getContract(tokenAddress, ERC20_BYTES32_ABI, provider).name()\n)\n}\n+}\nexport async function getTokenSymbol(\ntokenAddress: string,\n@@ -38,14 +37,14 @@ export async function getTokenSymbol(\nthrow Error(`Invalid 'tokenAddress' parameter`)\n}\n- return getContract(tokenAddress, ERC20_ABI, provider)\n- .symbol()\n- .catch(() =>\n- getContract(tokenAddress, ERC20_BYTES32_ABI, provider)\n- .symbol()\n- .then((bytes32: Arrayish) => ethers.utils.parseBytes32String(bytes32))\n+ try {\n+ return await getContract(tokenAddress, ERC20_ABI, provider).symbol()\n+ } catch {\n+ return ethers.utils.parseBytes32String(\n+ await getContract(tokenAddress, ERC20_BYTES32_ABI, provider).symbol()\n)\n}\n+}\nexport async function getTokenDecimals(\ntokenAddress: string,\n@@ -55,5 +54,5 @@ export async function getTokenDecimals(\nthrow Error(`Invalid 'tokenAddress' parameter`)\n}\n- return getContract(tokenAddress, ERC20_ABI, provider).decimals()\n+ return await getContract(tokenAddress, ERC20_ABI, provider).decimals()\n}\n"
    },
    {
        "org_diff": "diff --git a/packages/react-dom-bindings/src/events/ReactDOMEventReplaying.js b/a/packages/react-dom-bindings/src/events/ReactDOMEventReplaying.js @@ -38,7 +38,7 @@ import {isHigherEventPriority} from 'react-reconciler/src/ReactEventPriorities';\n import {isRootDehydrated} from 'react-reconciler/src/ReactFiberShellHydration';\n import {dispatchReplayedFormAction} from './plugins/FormActionEventPlugin';\n import {\n-  getCurrentUpdatePriority,\n+  resolveUpdatePriority,\n   runWithPriority as attemptHydrationAtPriority,\n } from '../client/ReactDOMUpdatePriority';\n \n@@ -333,10 +333,7 @@ function attemptExplicitHydrationTarget(\n }\n \n export function queueExplicitHydrationTarget(target: Node): void {\n-  // TODO: This will read the priority if it's dispatched by the React\n-  // event system but not native events. Should read window.event.type, like\n-  // we do for updates (getCurrentEventPriority).\n-  const updatePriority = getCurrentUpdatePriority();\n+  const updatePriority = resolveUpdatePriority();\n   const queuedTarget: QueuedHydrationTarget = {\n     blockedOn: null,\n     target: target,",
        "org_msg": "Refactor getCurrentUpdatePriority to resolveUpdatePriority in ReactDOMEventReplaying",
        "sim_msg": "Use forceUpdate instead of this.setState(this.state) in PostRecommendation",
        "sim_diff": "diff --git a/src/components/Sidebar/PostRecommendation.js b/src/components/Sidebar/PostRecommendation.js @@ -71,13 +71,13 @@ class PostRecommendation extends Component {\nif (author !== this.state.currentAuthor) {\nthis.getPostsByAuthor(author);\n} else {\n- this.setState(this.state);\n+ this.forceUpdate();\n}\n};\nnavigateToPostComments = () => {\ndocument.getElementById('comments').scrollIntoView();\n- this.setState(this.state);\n+ this.forceUpdate();\n};\nrenderPosts = () => {\n"
    },
    {
        "org_diff": "diff --git a/packages/react/src/jsx/ReactJSXElement.js b/a/packages/react/src/jsx/ReactJSXElement.js @@ -364,12 +364,8 @@ export function jsxProd(type, config, maybeKey) {\n     // because in V8 it will deopt the object to dictionary mode.\n     props = {};\n     for (const propName in config) {\n-      if (\n-        hasOwnProperty.call(config, propName) &&\n-        // Skip over reserved prop names\n-        propName !== 'key' &&\n-        (enableRefAsProp || propName !== 'ref')\n-      ) {\n+      // Skip over reserved prop names\n+      if (propName !== 'key' && (enableRefAsProp || propName !== 'ref')) {\n         if (enableRefAsProp && !disableStringRefs && propName === 'ref') {\n           props.ref = coerceStringRef(\n             config[propName],\n@@ -603,12 +599,8 @@ export function jsxDEV(type, config, maybeKey, isStaticChildren, source, self) {\n       // because in V8 it will deopt the object to dictionary mode.\n       props = {};\n       for (const propName in config) {\n-        if (\n-          hasOwnProperty.call(config, propName) &&\n-          // Skip over reserved prop names\n-          propName !== 'key' &&\n-          (enableRefAsProp || propName !== 'ref')\n-        ) {\n+        // Skip over reserved prop names\n+        if (propName !== 'key' && (enableRefAsProp || propName !== 'ref')) {\n           if (enableRefAsProp && !disableStringRefs && propName === 'ref') {\n             props.ref = coerceStringRef(\n               config[propName],",
        "org_msg": "Refactor jsxProd and jsxDEV to skip over reserved prop names.",
        "sim_msg": "refactor: remove unnecessary prop types",
        "sim_diff": "diff --git a/src/pages/checkout.js b/src/pages/checkout.js @@ -10,9 +10,8 @@ class Checkout extends Component {\nstatic propTypes = {\nclasses: PropTypes.object,\nshop: PropTypes.shape({\n- currency: PropTypes.shape({\n- code: PropTypes.string.isRequired\n- })\n+ name: PropTypes.string.isRequired,\n+ description: PropTypes.string\n})\n};\n"
    },
    {
        "org_diff": "diff --git a/fixtures/nesting/README.md b/a/fixtures/nesting/README.md @@ -68,7 +68,7 @@ We will use three different `package.json`s: one for non-React code at the root,\n - **`src/legacy/package.json`**: This is where we declare the `react` and `react-dom`  dependencies for the \"legacy\" trees. In this demo, we're using React 16.8 (although, as noted above, we could downgrade it further below). This is **also** where we specify any third-party libraries that use React. For example, we include `react-router` and `react-redux` in this example. \n - **`src/modern/package.json`**: This is where we declare the `react` and `react-dom`  dependencies for the \"modern\" trees. In this demo, we're using React 17. Here, we also specify third-party dependencies that use React and are used from the modern part of our app. This is why we *also* have `react-router` and `react-redux` in this file. (Their versions don't strictly have to match their `legacy` counterparts, but features that rely on context may require workarounds if they differ.)\n \n-The `scripts` in the root `package.json` are set up so that when you run `npm install` in it, it also runs `npm intall` in both `src/legacy` and `src/modern` folders.\n+The `scripts` in the root `package.json` are set up so that when you run `npm install` in it, it also runs `npm install` in both `src/legacy` and `src/modern` folders.\n \n **Note:** This demo is set up to use a few third-party dependencies (React Router and Redux). These are not essential, and you can remove them from the demo. They are included so we can show how to make them work with this approach.\n ",
        "org_msg": "Update root package.json to run npm install in legacy and modern folders",
        "sim_msg": "[core] Update root package.json version",
        "sim_diff": "diff --git a/package.json b/package.json {\n\"name\": \"@mui/monorepo\",\n- \"version\": \"5.10.7\",\n+ \"version\": \"5.10.8\",\n\"private\": true,\n\"scripts\": {\n\"proptypes\": \"cross-env BABEL_ENV=development babel-node --extensions \\\".tsx,.ts,.js\\\" ./scripts/generateProptypes.ts\",\n"
    },
    {
        "org_diff": "diff --git a/.github/workflows/stale.yml b/a/.github/workflows/stale.yml @@ -16,8 +16,8 @@ jobs:\n           days-before-stale: 90\n           # Number of days of inactivity before a stale issue or PR is closed\n           days-before-close: 7\n-          # Tmp dry run setup to test new config\n-          debug-only: 'true'\n+          # Number of issues or PRs to process per day\n+          operations-per-run: 100\n \n           # --- Issues ---\n           stale-issue-label: \"Resolution: Stale\"\n@@ -30,7 +30,7 @@ jobs:\n           close-issue-message: >\n             Closing this issue after a prolonged period of inactivity. If this issue is still present in the latest release, please create a new issue with up-to-date information. Thank you!\n           # Issues with these labels will never be considered stale\n-          exempt-issue-labels: \"Partner,React Core Team,Resolution: Backlog,Type: Bug,Type: Discussion,Type: Needs Investigation,Type: Regression,Type: Feature Request\"\n+          exempt-issue-labels: \"Partner,React Core Team,Resolution: Backlog,Type: Bug,Type: Discussion,Type: Needs Investigation,Type: Regression,Type: Feature Request,Type: Enhancement\"\n \n           # --- PRs ---\n           stale-pr-label: \"Resolution: Stale\"\n@@ -43,4 +43,4 @@ jobs:\n           close-pr-message: >\n             Closing this pull request after a prolonged period of inactivity. If this issue is still present in the latest release, please ask for this pull request to be reopened. Thank you!\n           # PRs with these labels will never be considered stale\n-          exempt-pr-labels: \"Partner,React Core Team,Resolution: Backlog,Type: Bug,Type: Discussion,Type: Needs Investigation,Type: Regression,Type: Feature Request\"\n\\ No newline at end of file\n+          exempt-pr-labels: \"Partner,React Core Team,Resolution: Backlog,Type: Bug,Type: Discussion,Type: Needs Investigation,Type: Regression,Type: Feature Request,Type: Enhancement\"\n\\ No newline at end of file",
        "org_msg": "Update operations-per-run value and add Type: Enhancement to exempt labels.",
        "sim_msg": "Update label for consistency with CR change.",
        "sim_diff": "diff --git a/assets/js/modules/adsense/setup/setup-account-approved.js b/assets/js/modules/adsense/setup/setup-account-approved.js @@ -62,7 +62,7 @@ export default function SetupAccountApproved() {\nif ( isApprovedFromVeryBeginning ) {\nlabel = __( 'Let Site Kit place AdSense code on your site to get your site approved', 'google-site-kit' );\n} else {\n- label = __( 'Keep the code placed by Site Kit', 'google-site-kit' );\n+ label = __( 'Keep AdSense code placed by Site Kit', 'google-site-kit' );\n}\nlet showProfile, checkedMessage, uncheckedMessage;\n"
    },
    {
        "org_diff": "diff --git a/packages/react-server/src/ReactFizzServer.js b/a/packages/react-server/src/ReactFizzServer.js @@ -842,7 +842,7 @@ function encodeErrorForBoundary(\n       ? 'Switched to client rendering because the server rendering aborted due to:\\n\\n'\n       : 'Switched to client rendering because the server rendering errored:\\n\\n';\n     boundary.errorMessage = prefix + message;\n-    boundary.errorStack = stack;\n+    boundary.errorStack = stack !== null ? prefix + stack : null;\n     boundary.errorComponentStack = thrownInfo.componentStack;\n   }\n }",
        "org_msg": "Refactor errorStack assignment in encodeErrorForBoundary function",
        "sim_msg": "refactor: getErrorStack",
        "sim_diff": "diff --git a/lib/util/index.js b/lib/util/index.js @@ -234,22 +234,14 @@ function getErrorStack(err) {\nstack = err.stack;\n} catch(e) {}\n- return 'Date: ' + formatDate() + '\\r\\n' + (stack || err.message || err);\n+ return 'Date: ' + formatDate() + '\\r\\nFrom: ' + config.name + '\\r\\n' + (stack || err.message || err);\n}\nexports.getErrorStack = getErrorStack;\nfunction formatDate(now) {\nnow = now || new Date();\n- var date = [now.getFullYear(), paddingLeft(now.getMonth() + 1),\n-paddingLeft(now.getDate())].join('-');\n- var time = [paddingLeft(now.getHours()), paddingLeft(now.getMinutes()),\n-paddingLeft(now.getSeconds())].join(':');\n- return date + ' ' + time + '.' + (now % 1000);\n-}\n-\n-function paddingLeft(num) {\n- return num < 10 ? '0' + num : num;\n+ return now.toLocaleString();\n}\nexports.formatDate = formatDate;\n"
    },
    {
        "org_diff": "diff --git a/packages/react-server/src/ReactFizzServer.js b/a/packages/react-server/src/ReactFizzServer.js @@ -1390,21 +1390,52 @@ function finishClassComponent(\n   task.keyPath = prevKeyPath;\n }\n \n+export function resolveClassComponentProps(\n+  Component: any,\n+  baseProps: Object,\n+): Object {\n+  let newProps = baseProps;\n+\n+  // TODO: This is where defaultProps should be resolved, too.\n+\n+  if (enableRefAsProp) {\n+    // Remove ref from the props object, if it exists.\n+    if ('ref' in newProps) {\n+      newProps = assign({}, newProps);\n+      delete newProps.ref;\n+    }\n+  }\n+\n+  return newProps;\n+}\n+\n function renderClassComponent(\n   request: Request,\n   task: Task,\n   keyPath: KeyNode,\n   Component: any,\n   props: any,\n ): void {\n+  const resolvedProps = resolveClassComponentProps(Component, props);\n   const previousComponentStack = task.componentStack;\n   task.componentStack = createClassComponentStack(task, Component);\n   const maskedContext = !disableLegacyContext\n     ? getMaskedContext(Component, task.legacyContext)\n     : undefined;\n-  const instance = constructClassInstance(Component, props, maskedContext);\n-  mountClassInstance(instance, Component, props, maskedContext);\n-  finishClassComponent(request, task, keyPath, instance, Component, props);\n+  const instance = constructClassInstance(\n+    Component,\n+    resolvedProps,\n+    maskedContext,\n+  );\n+  mountClassInstance(instance, Component, resolvedProps, maskedContext);\n+  finishClassComponent(\n+    request,\n+    task,\n+    keyPath,\n+    instance,\n+    Component,\n+    resolvedProps,\n+  );\n   task.componentStack = previousComponentStack;\n }\n ",
        "org_msg": "\"Add resolveClassComponentProps function and update renderClassComponent to use resolved props\"",
        "sim_msg": "fix: missing props in types, closes",
        "sim_diff": "diff --git a/index.d.ts b/index.d.ts @@ -29,6 +29,8 @@ export interface JSONSchemaFakerOptions {\nrenderTitle?: boolean;\nrenderDescription?: boolean;\nrenderComment?: boolean;\n+ refDepthMax?: number;\n+ refDepthMin?: number;\n}\nexport type JSONSchemaFakerRefs = Schema[] | { [k: string]: Schema };\n"
    },
    {
        "org_diff": "diff --git a/packages/react-test-renderer/README.md b/a/packages/react-test-renderer/README.md @@ -1,12 +1,26 @@\n-# `react-test-renderer`\n+# `react-test-renderer` (DEPRECATED)\n+\n+## Deprecation notice\n+\n+`react-test-renderer` is deprecated and no longer maintained. It will be removed in a future version. As of React 19, you will see a console warning when invoking `ReactTestRenderer.create()`.\n+\n+### React Testing\n+\n+This library creates a contrived environment and its APIs encourage introspection on React's internals, which may change without notice causing broken tests. It is instead recommended to use browser-based environments such as jsdom and standard DOM APIs for your assertions.\n+\n+The React team recommends [`@testing-library/react`](https://testing-library.com/docs/react-testing-library/intro) as a modern alternative that uses standard APIs, avoids internals, and [promotes best practices](https://testing-library.com/docs/guiding-principles).\n+\n+### React Native Testing\n+\n+The React team recommends @testing-library/react-native as a replacement for `react-test-renderer` for native integration tests. This React Native testing-library variant follows the same API design as described above and promotes better testing patterns.\n+\n+## Documentation\n \n This package provides an experimental React renderer that can be used to render React components to pure JavaScript objects, without depending on the DOM or a native mobile environment.\n \n Essentially, this package makes it easy to grab a snapshot of the \"DOM tree\" rendered by a React DOM or React Native component without using a browser or jsdom.\n \n-Documentation:\n-\n-[https://reactjs.org/docs/test-renderer.html](https://reactjs.org/docs/test-renderer.html)\n+Documentation: [https://reactjs.org/docs/test-renderer.html](https://reactjs.org/docs/test-renderer.html)\n \n Usage:\n ",
        "org_msg": "Deprecate react-test-renderer and recommend @testing-library/react as a modern alternative for testing.",
        "sim_msg": "[DialogTitle] Use react-testing-library",
        "sim_diff": "diff --git a/packages/material-ui/src/DialogTitle/DialogTitle.test.js b/packages/material-ui/src/DialogTitle/DialogTitle.test.js import * as React from 'react';\n-import { expect } from 'chai';\n-import { createShallow, getClasses, createMount, describeConformance } from 'test/utils';\n+import { getClasses, createMount, describeConformance, createClientRender } from 'test/utils';\nimport DialogTitle from './DialogTitle';\ndescribe('<DialogTitle />', () => {\nconst mount = createMount();\n- let shallow;\n+ const render = createClientRender();\nlet classes;\nbefore(() => {\n- shallow = createShallow({ dive: true });\nclasses = getClasses(<DialogTitle>foo</DialogTitle>);\n});\n@@ -22,14 +20,16 @@ describe('<DialogTitle />', () => {\n}));\nit('should render JSX children', () => {\n- const children = <p className=\"test\">Hello</p>;\n- const wrapper = shallow(<DialogTitle disableTypography>{children}</DialogTitle>);\n- expect(wrapper.childAt(0).equals(children)).to.equal(true);\n+ const children = <span data-testid=\"test-children\" />;\n+ const { getByTestId } = render(<DialogTitle disableTypography>{children}</DialogTitle>);\n+\n+ getByTestId('test-children');\n});\nit('should render string children as given string', () => {\nconst children = 'Hello';\n- const wrapper = shallow(<DialogTitle>{children}</DialogTitle>);\n- expect(wrapper.childAt(0).props().children).to.equal(children);\n+ const { getByText } = render(<DialogTitle>{children}</DialogTitle>);\n+\n+ getByText('Hello');\n});\n});\n"
    },
    {
        "org_diff": "diff --git a/packages/react-devtools-shell/src/app/ElementTypes/index.js b/a/packages/react-devtools-shell/src/app/ElementTypes/index.js @@ -60,17 +60,15 @@ export default function ElementTypes(): React.Node {\n           <Context.Consumer>{(value: $FlowFixMe) => null}</Context.Consumer>\n         </Context.Provider>\n         <StrictMode>\n-          <Cache>\n-            <Suspense fallback={<div>Loading...</div>}>\n-              <ClassComponent />\n-              <FunctionComponent />\n-              <MemoFunctionComponent />\n-              <ForwardRefComponent />\n-              <ForwardRefComponentWithAnonymousFunction />\n-              <ForwardRefComponentWithCustomDisplayName />\n-              <LazyComponent />\n-            </Suspense>\n-          </Cache>\n+          <Suspense fallback={<div>Loading...</div>}>\n+            <ClassComponent />\n+            <FunctionComponent />\n+            <MemoFunctionComponent />\n+            <ForwardRefComponent />\n+            <ForwardRefComponentWithAnonymousFunction />\n+            <ForwardRefComponentWithCustomDisplayName />\n+            <LazyComponent />\n+          </Suspense>\n         </StrictMode>\n       </Fragment>\n     </Profiler>",
        "org_msg": "Refactor ElementTypes to use Suspense directly instead of wrapping with Cache component.",
        "sim_msg": "refactor: update propTypes",
        "sim_diff": "diff --git a/src/components/Navigation/MobileNavigation.js b/src/components/Navigation/MobileNavigation.js @@ -20,7 +20,7 @@ const styles = () => ({\nclass MobileNavigation extends Component {\nstatic propTypes = {\nclasses: PropTypes.object,\n- navItems: PropTypes.arrayOf(PropTypes.object),\n+ navItems: PropTypes.object,\nuiStore: PropTypes.object\n};\n"
    },
    {
        "org_diff": "diff --git a/.nvmrc b/a/.nvmrc @@ -1 +1 @@\n-v16.19.1\n+v18.20.0",
        "org_msg": "Update Node.js version to v18.20.0",
        "sim_msg": "update version requirement for node.js",
        "sim_diff": "diff --git a/config/bisweb_pathconfig.js b/config/bisweb_pathconfig.js @@ -29,12 +29,10 @@ let ok=false;\nif (major === 10 && minor >= 11) {\nok=true;\n-} else if (major === 12 && minor >= 2 ) {\n- ok=true;\n-} else if (major === 14 && minor >= 2 ) {\n+} else if (major > 12) {\nok=true;\n} else {\n- console.log(`----\\n---- You are using an incompatible version of node (either 8.9 or newer, or 10.13 or newer) (actual version=${v})\\n`);\n+ console.log(`----\\n---- You are using an incompatible version of node (either 10.11 or newer) (actual version=${v})\\n`);\nprocess.exit(1);\n}\n"
    },
    {
        "org_diff": "diff --git a/scripts/rollup/forks.js b/a/scripts/rollup/forks.js @@ -153,10 +153,7 @@ const forks = Object.freeze({\n           case RN_FB_DEV:\n           case RN_FB_PROD:\n           case RN_FB_PROFILING:\n-          case RN_OSS_DEV:\n-          case RN_OSS_PROD:\n-          case RN_OSS_PROFILING:\n-            return './packages/shared/forks/ReactFeatureFlags.test-renderer.native.js';\n+            return './packages/shared/forks/ReactFeatureFlags.test-renderer.native-fb.js';\n           case FB_WWW_DEV:\n           case FB_WWW_PROD:\n           case FB_WWW_PROFILING:",
        "org_msg": "Refactor ReactFeatureFlags.test-renderer.native.js to ReactFeatureFlags.test-renderer.native-fb.js for FB forks.",
        "sim_msg": "[test] Migrate Fab to react-testing-library",
        "sim_diff": "diff --git a/packages/material-ui/src/Fab/Fab.test.js b/packages/material-ui/src/Fab/Fab.test.js @@ -6,10 +6,13 @@ import {\ncreateClientRender,\ncreateMount,\ncreateServerRender,\n+ act,\n+ fireEvent,\n} from 'test/utils';\nimport Fab from './Fab';\nimport ButtonBase from '../ButtonBase';\nimport Icon from '../Icon';\n+import TouchRipple from '../ButtonBase/TouchRipple';\ndescribe('<Fab />', () => {\nconst mount = createMount();\n@@ -39,7 +42,6 @@ describe('<Fab />', () => {\nexpect(button).not.to.have.class(classes.focusVisible);\nexpect(button).not.to.have.class(classes.disabled);\nexpect(button).not.to.have.class(classes.colorInherit);\n- expect(button).not.to.have.class(classes.mini);\nexpect(button).not.to.have.class(classes.fullWidth);\nexpect(button).not.to.have.class(classes.sizeSmall);\nexpect(button).not.to.have.class(classes.sizeMedium);\n@@ -90,27 +92,58 @@ describe('<Fab />', () => {\n});\nit('should have a ripple by default', () => {\n- const wrapper = mount(<Fab>Fab</Fab>);\n+ const touchRippleClasses = getClasses(<TouchRipple />);\n+ const { container } = render(<Fab>Fab</Fab>);\n- expect(wrapper.find(ButtonBase).props()).not.to.have.property('disableRipple');\n+ expect(container.querySelector(`.${touchRippleClasses.root}`)).not.to.equal(null);\n});\nit('should pass disableRipple to ButtonBase', () => {\n- const wrapper = mount(<Fab disableRipple>Fab</Fab>);\n+ const touchRippleClasses = getClasses(<TouchRipple />);\n+ const { container } = render(<Fab disableRipple>Fab</Fab>);\n- expect(wrapper.find(ButtonBase).props()).to.have.property('disableRipple', true);\n+ expect(container.querySelector(`.${touchRippleClasses.root}`)).to.equal(null);\n});\n- it('should have a focusRipple by default', () => {\n- const wrapper = mount(<Fab>Fab</Fab>);\n+ it('should have a focusRipple by default', async () => {\n+ const { getByRole } = render(\n+ <Fab\n+ TouchRippleProps={{\n+ classes: { ripplePulsate: 'pulsate-focus-visible' },\n+ }}\n+ >\n+ Fab\n+ </Fab>,\n+ );\n+ const button = getByRole('button');\n+\n+ act(() => {\n+ fireEvent.keyDown(document.body, { key: 'TAB' });\n+ button.focus();\n+ });\n- expect(wrapper.find(ButtonBase).props()).to.have.property('focusRipple', true);\n+ expect(button.querySelector('.pulsate-focus-visible')).not.to.equal(null);\n});\n- it('should pass disableFocusRipple to ButtonBase', () => {\n- const wrapper = mount(<Fab disableFocusRipple>Fab</Fab>);\n+ it('should pass disableFocusRipple to ButtonBase', async () => {\n+ const { getByRole } = render(\n+ <Fab\n+ TouchRippleProps={{\n+ classes: { ripplePulsate: 'pulsate-focus-visible' },\n+ }}\n+ disableFocusRipple\n+ >\n+ Fab\n+ </Fab>,\n+ );\n+ const button = getByRole('button');\n+\n+ act(() => {\n+ fireEvent.keyDown(document.body, { key: 'TAB' });\n+ button.focus();\n+ });\n- expect(wrapper.find(ButtonBase).props()).to.have.property('focusRipple', false);\n+ expect(button.querySelector('.pulsate-focus-visible')).to.equal(null);\n});\nit('should render Icon children with right classes', () => {\n"
    },
    {
        "org_diff": "diff --git a/packages/eslint-plugin-react-hooks/README.md b/a/packages/eslint-plugin-react-hooks/README.md @@ -1,8 +1,8 @@\n # `eslint-plugin-react-hooks`\n \n-This ESLint plugin enforces the [Rules of Hooks](https://reactjs.org/docs/hooks-rules.html).\n+This ESLint plugin enforces the [Rules of Hooks](https://react.dev/reference/rules/rules-of-hooks).\n \n-It is a part of the [Hooks API](https://reactjs.org/docs/hooks-intro.html) for React.\n+It is a part of the [Hooks API](https://react.dev/reference/react/hooks) for React.\n \n ## Installation\n \n@@ -68,7 +68,7 @@ We suggest to use this option **very sparingly, if at all**. Generally saying, w\n \n ## Valid and Invalid Examples\n \n-Please refer to the [Rules of Hooks](https://reactjs.org/docs/hooks-rules.html) documentation and the [Hooks FAQ](https://reactjs.org/docs/hooks-faq.html#what-exactly-do-the-lint-rules-enforce) to learn more about this rule.\n+Please refer to the [Rules of Hooks](https://react.dev/reference/rules/rules-of-hooks) documentation to learn more about this rule.\n \n ## License\n ",
        "org_msg": "Update links in README.md to use react.dev domain.",
        "sim_msg": "In README, add ReactDOM to CDN installation and add JSFiddle link",
        "sim_diff": "diff --git a/README.md b/README.md @@ -13,7 +13,7 @@ An HTML to React parser:\nParser(htmlString[, options])\n```\n-The parser converts a string of HTML to [React Element(s)](https://facebook.github.io/react/docs/glossary.html#react-elements).\n+The parser converts an HTML string to [React Element(s)](https://facebook.github.io/react/docs/react-api.html#creating-react-elements).\nThere is also an option to [replace](#replacedomnode) element(s) with your own React Element(s) via the [parser options](#options).\n@@ -25,6 +25,8 @@ Parser('<p>Hello, world!</p>');\n// same output as `React.createElement('p', {}, 'Hello, world!')`\n```\n+[JSFiddle](https://jsfiddle.net/remarkablemark/7v86d800/)\n+\n## Installation\n[NPM](https://www.npmjs.com/package/html-react-parser):\n@@ -42,8 +44,9 @@ $ npm install html-react-parser@0.2\n[CDN](https://unpkg.com/html-react-parser/):\n```html\n-<!-- HTMLReactParser depends on React -->\n+<!-- HTMLReactParser depends on React and ReactDOM -->\n<script src=\"https://unpkg.com/react@latest/dist/react.min.js\"></script>\n+<script src=\"https://unpkg.com/react-dom@latest/dist/react-dom.min.js\"></script>\n<script src=\"https://unpkg.com/html-react-parser@latest/dist/html-react-parser.min.js\"></script>\n```\n"
    },
    {
        "org_diff": "diff --git a/packages/react-test-renderer/src/__tests__/ReactTestRenderer-test.js b/a/packages/react-test-renderer/src/__tests__/ReactTestRenderer-test.js @@ -50,6 +50,35 @@ describe('ReactTestRenderer', () => {\n     expect(errors[1].message.includes('indexOf is not a function')).toBe(true);\n   });\n \n+  test('find element by prop with suspended content', async () => {\n+    const neverResolve = new Promise(() => {});\n+\n+    function TestComp({foo}) {\n+      if (foo === 'one') {\n+        throw neverResolve;\n+      } else {\n+        return null;\n+      }\n+    }\n+\n+    const tree = await act(() =>\n+      ReactTestRenderer.create(\n+        <div>\n+          <React.Suspense fallback={null}>\n+            <TestComp foo=\"one\" />\n+          </React.Suspense>\n+          <TestComp foo=\"two\" />\n+        </div>,\n+      ),\n+    );\n+\n+    expect(\n+      tree.root.find(item => {\n+        return item.props.foo === 'two';\n+      }),\n+    ).toBeDefined();\n+  });\n+\n   describe('timed out Suspense hidden subtrees should not be observable via toJSON', () => {\n     let AsyncText;\n     let PendingResources;",
        "org_msg": "Add test to find element by prop with suspended content",
        "sim_msg": "tests: add test for watching prop",
        "sim_diff": "diff --git a/test/Compiler.test.js b/test/Compiler.test.js @@ -517,6 +517,23 @@ describe(\"Compiler\", () => {\n});\n});\n});\n+ it(\"should set compiler.watching correctly\", function (done) {\n+ const compiler = webpack({\n+ context: __dirname,\n+ mode: \"production\",\n+ entry: \"./c\",\n+ output: {\n+ path: \"/directory\",\n+ filename: \"bundle.js\"\n+ }\n+ });\n+ compiler.outputFileSystem = createFsFromVolume(new Volume());\n+ const watching = compiler.watch({}, (err, stats) => {\n+ if (err) return done(err);\n+ done();\n+ });\n+ expect(compiler.watching).toBe(watching);\n+ });\nit(\"should watch again correctly after first closed watch\", function (done) {\nconst compiler = webpack({\ncontext: __dirname,\n"
    },
    {
        "org_diff": "diff --git a/packages/react-dom-bindings/src/shared/isUnitlessNumber.js b/a/packages/react-dom-bindings/src/shared/isUnitlessNumber.js @@ -46,6 +46,7 @@ const unitlessNumbers = new Set([\n   'tabSize',\n   'widows',\n   'zIndex',\n+  'zoom',\n   'fillOpacity', // SVG-related properties\n   'floodOpacity',\n   'stopOpacity',\n@@ -60,6 +61,7 @@ const unitlessNumbers = new Set([\n   'MozLineClamp',\n   'msAnimationIterationCount',\n   'msFlex',\n+  'msZoom',\n   'msFlexGrow',\n   'msFlexNegative',\n   'msFlexOrder',",
        "org_msg": "Add 'zoom' and 'msZoom' to unitlessNumbers list",
        "sim_msg": "Add basic zoom functionality",
        "sim_diff": "diff --git a/src/components/Modeler.vue b/src/components/Modeler.vue :class=\"cursor\"\n:style=\"{ width: parentWidth, height: parentHeight }\"\n>\n- <div class=\"history-buttons\">\n+ <div class=\"top-buttons history-buttons\">\n<button @click=\"undo\" :disabled=\"!canUndo\" data-test=\"undo\">Undo</button>\n<button @click=\"redo\" :disabled=\"!canRedo\" data-test=\"redo\">Redo</button>\n</div>\n+ <div class=\"top-buttons zoom-buttons\">\n+ <span class=\"scale-value\">{{ Math.round(scale*100) }}%</span>\n+ <button @click=\"scale = Math.max(0.2, scale -= 0.1)\" data-test=\"zoom-out\">-</button>\n+ <button @click=\"scale += 0.1\" data-test=\"zoom-in\">+</button>\n+ <button @click=\"scale = 1\" :disabled=\"scale === 1\" data-test=\"zoom-reset\">Reset</button>\n+ </div>\n+\n<button class=\"validate-button\" @click=\"validateBpmnDiagram\">Validate Diagram</button>\n<drop @drop=\"handleDrop\" @dragover=\"validateDropTarget\">\n@@ -127,8 +134,14 @@ export default {\nparentWidth: null,\nlinter: null,\nvalidationErrors: {},\n+ scale: 1,\n};\n},\n+ watch: {\n+ scale(scale) {\n+ this.paper.scale(scale);\n+ },\n+ },\ncomputed: {\nnodes: () => store.getters.nodes,\ncanUndo() {\n@@ -713,10 +726,9 @@ $cursors: default, not-allowed;\noverflow: hidden;\nposition: relative;\n- .history-buttons {\n+ .top-buttons {\nposition: absolute;\nz-index: 1;\n- left: 1rem;\ntop: 1rem;\n> button {\n@@ -724,6 +736,18 @@ $cursors: default, not-allowed;\n}\n}\n+ .history-buttons {\n+ left: 1rem;\n+ }\n+\n+ .zoom-buttons {\n+ right: 1rem;\n+\n+ .scale-value {\n+ margin-right: 1rem;\n+ }\n+ }\n+\n.validate-button {\nposition: absolute;\ntop: 1rem;\n"
    },
    {
        "org_diff": "diff --git a/packages/shared/forks/ReactFeatureFlags.native-oss.js b/a/packages/shared/forks/ReactFeatureFlags.native-oss.js @@ -52,7 +52,6 @@ export const enableCacheElement = __NEXT_RN_MAJOR__;\n export const enableTaint = __NEXT_RN_MAJOR__;\n export const enableUnifiedSyncLane = __NEXT_RN_MAJOR__;\n export const enableFizzExternalRuntime = __NEXT_RN_MAJOR__; // DOM-only\n-export const disableJavaScriptURLs = __NEXT_RN_MAJOR__; // DOM-only\n export const enableBinaryFlight = __NEXT_RN_MAJOR__; // DOM-only\n export const enableCustomElementPropertySupport = __NEXT_RN_MAJOR__; // DOM-only\n export const enableServerComponentKeys = __NEXT_RN_MAJOR__;",
        "org_msg": "Remove disableJavaScriptURLs feature flag",
        "sim_msg": "fix removing \"allowJs\"",
        "sim_diff": "diff --git a/generators/client/templates/vue/tsconfig.json.ejs b/generators/client/templates/vue/tsconfig.json.ejs \"paths\": {\n\"@/*\": [\"src/main/webapp/app/*\"]\n},\n- \"importHelpers\": true\n+ \"importHelpers\": true,\n+ \"allowJs\": true\n},\n\"include\": [\n\"src/main/webapp/app\",\n"
    },
    {
        "org_diff": "diff --git a/packages/react-dom-bindings/src/shared/isUnitlessNumber.js b/a/packages/react-dom-bindings/src/shared/isUnitlessNumber.js @@ -46,7 +46,6 @@ const unitlessNumbers = new Set([\n   'tabSize',\n   'widows',\n   'zIndex',\n-  'zoom',\n   'fillOpacity', // SVG-related properties\n   'floodOpacity',\n   'stopOpacity',\n@@ -61,7 +60,6 @@ const unitlessNumbers = new Set([\n   'MozLineClamp',\n   'msAnimationIterationCount',\n   'msFlex',\n-  'msZoom',\n   'msFlexGrow',\n   'msFlexNegative',\n   'msFlexOrder',",
        "org_msg": "Remove unitless number 'zoom' and 'msZoom' from the set",
        "sim_msg": "Remove zoomable property",
        "sim_diff": "diff --git a/articles/cross-origin-authentication/index.md b/articles/cross-origin-authentication/index.md @@ -31,9 +31,9 @@ Configuring your client for cross-origin authentication is a process that requir\n1. In the [client settings](${manage_url}/#/applications/${account.clientId}/settings) for your application, click **Show Advanced Settings** > **OAuth** and find the **Cross Origin Authentication Mode** switch. Ensure that the switch is in the on position.\n1. Also ensure that the **OIDC Conformant** switch is toggled on in the same settings panel.\n- ::: zoomable\n+\n![Cross-Origin Authentication switch](/media/articles/cross-origin-authentication/cross-origin-settings.png)\n- :::\n+\n1. Ensure that your application is using [Lock](/libraries/lock) version 10.22 or higher, or [Auth0.js](/libraries/auth0js) version 8.7 or higher.\n1. If you are using Lock, make sure that you are using the [oidcconformant](/libraries/lock/v10/customization#oidcconformant-boolean-) option.\n1. Third-party cookies do not work in some browsers. To handle these cases, you will need to author a page which uses **auth0.js** to act as a fallback for the cross-origin transaction. More information on setting up this page is provided below.\n"
    },
    {
        "org_diff": "diff --git a/packages/react-dom/src/client/ReactDOMLegacy.js b/a/packages/react-dom/src/client/ReactDOMLegacy.js @@ -396,6 +396,14 @@ export function unstable_renderSubtreeIntoContainer(\n }\n \n export function unmountComponentAtNode(container: Container): boolean {\n+  if (disableLegacyMode) {\n+    if (__DEV__) {\n+      console.error(\n+        'unmountComponentAtNode is no longer supported in React 18. Use root.unmount() instead.',\n+      );\n+    }\n+    throw new Error('ReactDOM: Unsupported Legacy Mode API.');\n+  }\n   if (!isValidContainerLegacy(container)) {\n     throw new Error('Target container is not a DOM element.');\n   }",
        "org_msg": "Refactor unmountComponentAtNode to throw error in case of unsupported legacy mode API usage",
        "sim_msg": "fix(app): Using onMounted() for the root component but not importing it in certain scenarios",
        "sim_diff": "diff --git a/app/templates/entry/app.js b/app/templates/entry/app.js @@ -40,7 +40,7 @@ import createRouter from 'app/<%= sourceFiles.router %>'\n<% } %>\n<% if (__needsAppMountHook === true) { %>\n-import { defineComponent<%= ctx.mode.ssr && ssr.manualPostHydrationTrigger !== true ? ', h, onMounted, getCurrentInstance' : '' %> } from 'vue'\n+import { defineComponent, h, onMounted<%= ctx.mode.ssr && ssr.manualPostHydrationTrigger !== true ? ', getCurrentInstance' : '' %> } from 'vue'\nconst RootComponent = defineComponent({\nname: 'AppWrapper',\nsetup (props) {\n"
    },
    {
        "org_diff": "diff --git a/CHANGELOG-canary.md b/a/CHANGELOG-canary.md @@ -1,3 +1,8 @@\n+## March 22, 2024 (18.3.0-canary-670811593-20240322)\n+\n+## React\n+- Added `useActionState` to replace `useFormState` and added `pending` value ([#28491](https://github.com/facebook/react/pull/28491)).\n+\n ## October 5, 2023 (18.3.0-canary-546178f91-20231005)\n \n ### React",
        "org_msg": "Add useActionState to replace useFormState and add pending value (#28491)",
        "sim_msg": "fix: remove unnecessary state var",
        "sim_diff": "diff --git a/src/renderer/marketplace/bank-accounts/list/index.jsx b/src/renderer/marketplace/bank-accounts/list/index.jsx @@ -13,8 +13,7 @@ const MARKETPLACE_JURISDICTION_DETAIL_PATH = '/main/marketplace-bank-accounts/de\nclass BankAccountsTableContainer extends Component {\nstate = {\n- accountType: 'personal',\n- loading: false\n+ accountType: 'personal'\n};\ncomponentDidMount() {\n"
    },
    {
        "org_diff": "diff --git a/scripts/rollup/build-all-release-channels.js b/a/scripts/rollup/build-all-release-channels.js @@ -158,18 +158,16 @@ function processStable(buildDir) {\n   }\n \n   if (fs.existsSync(buildDir + '/facebook-www')) {\n-    const hash = crypto.createHash('sha1');\n     for (const fileName of fs.readdirSync(buildDir + '/facebook-www').sort()) {\n       const filePath = buildDir + '/facebook-www/' + fileName;\n       const stats = fs.statSync(filePath);\n       if (!stats.isDirectory()) {\n-        hash.update(fs.readFileSync(filePath));\n         fs.renameSync(filePath, filePath.replace('.js', '.classic.js'));\n       }\n     }\n     updatePlaceholderReactVersionInCompiledArtifacts(\n       buildDir + '/facebook-www',\n-      ReactVersion + '-www-classic-' + hash.digest('hex').slice(0, 8)\n+      ReactVersion + '-www-classic-%FILEHASH%'\n     );\n   }\n \n@@ -224,18 +222,16 @@ function processExperimental(buildDir, version) {\n   }\n \n   if (fs.existsSync(buildDir + '/facebook-www')) {\n-    const hash = crypto.createHash('sha1');\n     for (const fileName of fs.readdirSync(buildDir + '/facebook-www').sort()) {\n       const filePath = buildDir + '/facebook-www/' + fileName;\n       const stats = fs.statSync(filePath);\n       if (!stats.isDirectory()) {\n-        hash.update(fs.readFileSync(filePath));\n         fs.renameSync(filePath, filePath.replace('.js', '.modern.js'));\n       }\n     }\n     updatePlaceholderReactVersionInCompiledArtifacts(\n       buildDir + '/facebook-www',\n-      ReactVersion + '-www-modern-' + hash.digest('hex').slice(0, 8)\n+      ReactVersion + '-www-modern-%FILEHASH%'\n     );\n   }\n ",
        "org_msg": "Refactor build-all-release-channels.js to update file naming and placeholder React version in compiled artifacts.",
        "sim_msg": "Update react-router-redux readme to reflect versioning situation.",
        "sim_diff": "diff --git a/packages/react-router-redux/README.md b/packages/react-router-redux/README.md # react-router-redux\n-[![npm version](https://img.shields.io/npm/v/react-router-redux.svg?style=flat-square)](https://www.npmjs.com/package/react-router-redux) [![npm downloads](https://img.shields.io/npm/dm/react-router-redux.svg?style=flat-square)](https://www.npmjs.com/package/react-router-redux) [![build status](https://img.shields.io/travis/reactjs/react-router-redux/master.svg?style=flat-square)](https://travis-ci.org/reactjs/react-router-redux)\n+[![npm version](https://img.shields.io/npm/v/react-router-redux/next.svg?style=flat-square)](https://www.npmjs.com/package/react-router-redux) [![npm downloads](https://img.shields.io/npm/dm/react-router-redux.svg?style=flat-square)](https://www.npmjs.com/package/react-router-redux) [![build status](https://img.shields.io/travis/reactjs/react-router-redux/master.svg?style=flat-square)](https://travis-ci.org/reactjs/react-router-redux)\n> **Keep your state in sync with your router** :sparkles:\n@@ -11,6 +11,11 @@ This is beta software, it needs:\n3. A strategy for working with the devtools\n- (issue describing a different approach to what we've seen previously coming soon)\n+## Versions\n+\n+This (react-router-redux 5.x) is the version of react-router-redux for use with react-router 4.x.\n+Users of react-router 2.x and 3.x want to use react-router-redux found at [the legacy repository](https://github.com/reactjs/react-router-redux).\n+\n## Installation\n```\n"
    },
    {
        "org_diff": "diff --git a/packages/react-reconciler/src/__tests__/ReactSuspense-test.internal.js b/a/packages/react-reconciler/src/__tests__/ReactSuspense-test.internal.js @@ -289,6 +289,59 @@ describe('ReactSuspense', () => {\n     expect(container.textContent).toEqual('AB');\n   });\n \n+  it('pushes out siblings that render faster than throttle', async () => {\n+    function Foo() {\n+      Scheduler.log('Foo');\n+      return (\n+        <Suspense fallback={<Text text=\"Loading...\" />}>\n+          <AsyncText text=\"A\" ms={290} />\n+          <Suspense fallback={<Text text=\"Loading more...\" />}>\n+            <AsyncText text=\"B\" ms={30} />\n+          </Suspense>\n+        </Suspense>\n+      );\n+    }\n+\n+    setTimeout(async () => {\n+      // TODO: this is dumb, but AsyncText isn't timer based after the act changes.\n+      // Pretend that this is the start of the sibling suspending.\n+      // In a real test, the timer would start when we render B.\n+      setTimeout(async () => {\n+        resolveText('B');\n+      }, 30);\n+\n+      resolveText('A');\n+    }, 290);\n+\n+    // Render an empty shell\n+    const root = ReactTestRenderer.create(<Foo />, {\n+      isConcurrent: true,\n+    });\n+\n+    await waitForAll(['Foo', 'Suspend! [A]', 'Loading...']);\n+    expect(root).toMatchRenderedOutput('Loading...');\n+\n+    // Now resolve A\n+    jest.advanceTimersByTime(290);\n+    await waitFor(['A']);\n+    expect(root).toMatchRenderedOutput('Loading...');\n+\n+    // B starts loading. Parent boundary is in throttle.\n+    // Still shows parent loading under throttle\n+    jest.advanceTimersByTime(10);\n+    await waitForAll(['Suspend! [B]', 'Loading more...']);\n+    expect(root).toMatchRenderedOutput('Loading...');\n+\n+    // !! B could have finished before the throttle, but we show a fallback.\n+    // !! Pushing out the 30ms fetch for B to 300ms.\n+    jest.advanceTimersByTime(300);\n+    await waitFor(['B']);\n+    expect(root).toMatchRenderedOutput('ALoading more...');\n+\n+    await act(() => {});\n+    expect(root).toMatchRenderedOutput('AB');\n+  });\n+\n   it('does not throttle fallback committing for too long', async () => {\n     function Foo() {\n       Scheduler.log('Foo');",
        "org_msg": "Add test for pushing out siblings that render faster than throttle",
        "sim_msg": "Increase test render wait time",
        "sim_diff": "diff --git a/tests/e2e/support/utils.js b/tests/e2e/support/utils.js import { saveDebounce } from '../../../src/components/inspectors/inspectorConstants';\n-const renderTime = 100;\n+const renderTime = 300;\nexport function getGraphElements() {\nreturn cy.window()\n"
    },
    {
        "org_diff": "diff --git a/yarn.lock b/a/yarn.lock @@ -15791,9 +15791,9 @@ webpack-cli@^5.1.1:\n     webpack-merge \"^5.7.3\"\n \n webpack-dev-middleware@^5.3.1:\n-  version \"5.3.3\"\n-  resolved \"https://registry.yarnpkg.com/webpack-dev-middleware/-/webpack-dev-middleware-5.3.3.tgz#efae67c2793908e7311f1d9b06f2a08dcc97e51f\"\n-  integrity sha512-hj5CYrY0bZLB+eTO+x/j67Pkrquiy7kWepMHmUMoPsmcUaeEnQJqFzHJOyxgWlq746/wUuA64p9ta34Kyb01pA==\n+  version \"5.3.4\"\n+  resolved \"https://registry.yarnpkg.com/webpack-dev-middleware/-/webpack-dev-middleware-5.3.4.tgz#eb7b39281cbce10e104eb2b8bf2b63fce49a3517\"\n+  integrity sha512-BVdTqhhs+0IfoeAf7EoH5WE+exCmqGerHfDM0IL096Px60Tq2Mn9MAbnaGUe6HiMa41KMCYF19gyzZmBcq/o4Q==\n   dependencies:\n     colorette \"^2.0.10\"\n     memfs \"^3.4.3\"",
        "org_msg": "Update webpack-dev-middleware to version 5.3.4",
        "sim_msg": "update(ui): webpack => 5.58.1; webpack-dev-server => 4.3.1",
        "sim_diff": "diff --git a/app/package.json b/app/package.json \"vue-loader\": \"16.5.0\",\n\"vue-router\": \"4.0.11\",\n\"vue-style-loader\": \"4.1.3\",\n- \"webpack\": \"^5.35.0\",\n+ \"webpack\": \"^5.58.1\",\n\"webpack-bundle-analyzer\": \"4.4.2\",\n\"webpack-chain\": \"6.5.1\",\n- \"webpack-dev-server\": \"4.3.0\",\n+ \"webpack-dev-server\": \"4.3.1\",\n\"webpack-merge\": \"5.8.0\",\n\"webpack-node-externals\": \"3.0.0\"\n},\n"
    },
    {
        "org_diff": "diff --git a/packages/react-devtools-shell/src/app/InspectableElements/Contexts.js b/a/packages/react-devtools-shell/src/app/InspectableElements/Contexts.js @@ -273,15 +273,46 @@ class ModernClassContextConsumerWithUpdates extends Component<any> {\n   }\n }\n \n+type LegacyContextState = {\n+  supportsLegacyContext: boolean,\n+};\n+class LegacyContext extends React.Component {\n+  state: LegacyContextState = {supportsLegacyContext: true};\n+\n+  static getDerivedStateFromError(error: any): LegacyContextState {\n+    return {supportsLegacyContext: false};\n+  }\n+\n+  componentDidCatch(error: any, info: any) {\n+    console.info(\n+      'Assuming legacy context is not supported in this React version due to: ',\n+      error,\n+      info,\n+    );\n+  }\n+\n+  render(): React.Node {\n+    if (!this.state.supportsLegacyContext) {\n+      return <p>This version of React does not support legacy context.</p>;\n+    }\n+\n+    return (\n+      <React.Fragment>\n+        <LegacyContextProvider>\n+          <LegacyContextConsumer />\n+        </LegacyContextProvider>\n+        <LegacyContextProviderWithUpdates />\n+      </React.Fragment>\n+    );\n+  }\n+}\n+\n export default function Contexts(): React.Node {\n   return (\n     <div>\n       <h1>Contexts</h1>\n       <ul>\n-        <LegacyContextProvider>\n-          <LegacyContextConsumer />\n-        </LegacyContextProvider>\n-        <LegacyContextProviderWithUpdates />\n+        <LegacyContext />\n         <ModernContext.Provider value={contextData}>\n           <ModernContext.Consumer>\n             {(value: $FlowFixMe) =>",
        "org_msg": "Add legacy context component to inspectable elements.",
        "sim_msg": "add new component to components context",
        "sim_diff": "diff --git a/src/custom/componentsContext.js b/src/custom/componentsContext.js @@ -39,6 +39,7 @@ import CheckoutActionIncomplete from \"@reactioncommerce/components/CheckoutActio\nimport ErrorsBlock from \"@reactioncommerce/components/ErrorsBlock/v1\";\nimport Field from \"@reactioncommerce/components/Field/v1\";\nimport InlineAlert from \"@reactioncommerce/components/InlineAlert/v1\";\n+import InventoryStatus from \"@reactioncommerce/components/InventoryStatus/v1\";\nimport Link from \"components/Link\";\nimport MiniCartSummary from \"@reactioncommerce/components/MiniCartSummary/v1\";\nimport PhoneNumberInput from \"@reactioncommerce/components/PhoneNumberInput/v1\";\n@@ -78,6 +79,7 @@ export default {\nErrorsBlock,\nField,\nInlineAlert,\n+ InventoryStatus,\nLink,\niconAmericanExpress,\niconClear,\n"
    },
    {
        "org_diff": "diff --git a/.github/stale.yml b/a/.github/stale.yml @@ -12,6 +12,7 @@ exemptLabels:\n   - \"Type: Discussion\"\n   - \"Type: Needs Investigation\"\n   - \"Type: Regression\"\n+  - \"Type: Feature Request\"\n # Label to use when marking an issue as stale\n staleLabel: \"Resolution: Stale\"\n issues:",
        "org_msg": "Add \"Type: Feature Request\" to exemptLabels in stale.yml",
        "sim_msg": "Add feature request",
        "sim_diff": "diff --git a/README.md b/README.md @@ -140,3 +140,6 @@ On non Okta based deployments, you should run either `dokku run kamu /bin/bash`\n```shell\npython manage.py createsuperuser\n```\n+See #74\n+\n+![Thanks!](http://gifgifmagazine.com/wp-content/uploads/2018/11/macka-daj-pet-jea.gif)\n"
    },
    {
        "org_diff": "diff --git a/scripts/rollup/build-all-release-channels.js b/a/scripts/rollup/build-all-release-channels.js @@ -239,6 +239,18 @@ function processExperimental(buildDir, version) {\n     );\n   }\n \n+  [\n+    buildDir + '/react-native/implementations/',\n+    buildDir + '/facebook-react-native/',\n+  ].forEach(reactNativeBuildDir => {\n+    if (fs.existsSync(reactNativeBuildDir)) {\n+      updatePlaceholderReactVersionInCompiledArtifacts(\n+        reactNativeBuildDir,\n+        ReactVersion + '-' + canaryChannelLabel + '-%FILEHASH%'\n+      );\n+    }\n+  });\n+\n   // Update remaining placeholders with canary channel version\n   updatePlaceholderReactVersionInCompiledArtifacts(\n     buildDir,",
        "org_msg": "\"Update React version placeholders in compiled artifacts for canary channel\"",
        "sim_msg": "client: react: update dependencies - common tools & libs",
        "sim_diff": "diff --git a/generators/client/templates/react/package.json.ejs b/generators/client/templates/react/package.json.ejs @@ -41,7 +41,7 @@ limitations under the License.\n\"moment\": \"2.24.0\",\n\"react\": \"16.12.0\",\n\"react-dom\": \"16.12.0\",\n- \"react-hot-loader\": \"4.8.0\",\n+ \"react-hot-loader\": \"4.12.18\",\n\"react-jhipster\": \"0.9.0\",\n\"react-loadable\": \"5.5.0\",\n\"react-redux\": \"7.1.3\",\n@@ -61,7 +61,7 @@ limitations under the License.\n\"sockjs-client\": \"1.3.0\",\n<%_ } _%>\n\"tslib\": \"1.10.0\",\n- \"uuid\": \"3.3.2\"<% if (websocket === 'spring-websocket') { %>,\n+ \"uuid\": \"3.3.3\"<% if (websocket === 'spring-websocket') { %>,\n\"webstomp-client\": \"1.2.6\"\n<%_ } _%>\n},\n@@ -75,7 +75,7 @@ limitations under the License.\n<%_ if (protractorTests) { _%>\n\"@types/mocha\": \"5.2.7\",\n<%_ } _%>\n- \"@types/node\": \"10.14.3\",\n+ \"@types/node\": \"12.12.17\",\n\"@types/react\": \"16.9.16\",\n\"@types/react-dom\": \"16.9.4\",\n\"@types/react-redux\": \"6.0.6\",\n@@ -87,9 +87,9 @@ limitations under the License.\n\"@types/webpack-env\": \"1.14.1\",\n\"@typescript-eslint/eslint-plugin\": \"2.11.0\",\n\"@typescript-eslint/parser\": \"2.11.0\",\n- \"autoprefixer\": \"9.5.0\",\n+ \"autoprefixer\": \"9.7.3\",\n\"base-href-webpack-plugin\": \"2.0.0\",\n- \"browser-sync\": \"2.26.5\",\n+ \"browser-sync\": \"2.26.7\",\n\"browser-sync-webpack-plugin\": \"2.2.2\",\n\"cache-loader\": \"2.0.1\",\n<%_ if (protractorTests) { _%>\n@@ -97,7 +97,7 @@ limitations under the License.\n\"chai-as-promised\": \"7.1.1\",\n<%_ } _%>\n\"copy-webpack-plugin\": \"5.1.0\",\n- \"core-js\": \"3.0.0\",\n+ \"core-js\": \"3.4.8\",\n\"cross-env\": \"5.2.0\",\n\"css-loader\": \"3.3.0\",\n\"enzyme\": \"3.10.0\",\n@@ -115,7 +115,7 @@ limitations under the License.\n\"generator-jhipster\": \"<%= packagejs.version %>\",\n\"html-webpack-plugin\": \"3.2.0\",\n<%_ if (!skipCommitHook) { _%>\n- \"husky\": \"3.0.4\",\n+ \"husky\": \"3.1.0\",\n<%_ } _%>\n\"identity-obj-proxy\": \"3.0.0\",\n\"jest\": \"24.9.0\",\n@@ -135,13 +135,13 @@ limitations under the License.\n\"moment-locales-webpack-plugin\": \"1.1.2\",\n\"optimize-css-assets-webpack-plugin\": \"5.0.3\",\n\"postcss-loader\": \"3.0.0\",\n- \"prettier\": \"1.18.2\",\n+ \"prettier\": \"1.19.1\",\n<%_ if (protractorTests) { _%>\n\"protractor\": \"5.4.2\",\n<%_ } _%>\n\"react-infinite-scroller\": \"1.2.4\",\n- \"redux-mock-store\": \"1.5.3\",\n- \"rimraf\": \"2.6.3\",\n+ \"redux-mock-store\": \"1.5.4\",\n+ \"rimraf\": \"3.0.0\",\n\"sass\": \"1.23.7\",\n\"sass-loader\": \"8.0.0\",\n\"simple-progress-webpack-plugin\": \"1.1.2\",\n"
    },
    {
        "org_diff": "diff --git a/scripts/rollup/build-all-release-channels.js b/a/scripts/rollup/build-all-release-channels.js @@ -173,25 +173,17 @@ function processStable(buildDir) {\n     );\n   }\n \n-  const reactNativeBuildDir = buildDir + '/react-native/implementations/';\n-  if (fs.existsSync(reactNativeBuildDir)) {\n-    const hash = crypto.createHash('sha1');\n-    for (const fileName of fs.readdirSync(reactNativeBuildDir).sort()) {\n-      const filePath = reactNativeBuildDir + fileName;\n-      const stats = fs.statSync(filePath);\n-      if (!stats.isDirectory()) {\n-        hash.update(fs.readFileSync(filePath));\n-      }\n+  [\n+    buildDir + '/react-native/implementations/',\n+    buildDir + '/facebook-react-native/',\n+  ].forEach(reactNativeBuildDir => {\n+    if (fs.existsSync(reactNativeBuildDir)) {\n+      updatePlaceholderReactVersionInCompiledArtifacts(\n+        reactNativeBuildDir,\n+        ReactVersion + '-' + canaryChannelLabel + '-%FILEHASH%'\n+      );\n     }\n-    updatePlaceholderReactVersionInCompiledArtifacts(\n-      reactNativeBuildDir,\n-      ReactVersion +\n-        '-' +\n-        canaryChannelLabel +\n-        '-' +\n-        hash.digest('hex').slice(0, 8)\n-    );\n-  }\n+  });\n \n   // Update remaining placeholders with canary channel version\n   updatePlaceholderReactVersionInCompiledArtifacts(\n@@ -362,9 +354,11 @@ function updatePlaceholderReactVersionInCompiledArtifacts(\n \n   for (const artifactFilename of artifactFilenames) {\n     const originalText = fs.readFileSync(artifactFilename, 'utf8');\n+    const fileHash = crypto.createHash('sha1');\n+    fileHash.update(originalText);\n     const replacedText = originalText.replaceAll(\n       PLACEHOLDER_REACT_VERSION,\n-      newVersion\n+      newVersion.replace(/%FILEHASH%/g, fileHash.digest('hex').slice(0, 8))\n     );\n     fs.writeFileSync(artifactFilename, replacedText);\n   }",
        "org_msg": "Refactor build-all-release-channels.js to update React version placeholders with canary channel label and file hash.",
        "sim_msg": "docs(examples): update create-react-app README.md",
        "sim_diff": "diff --git a/examples/create-react-app/README.md b/examples/create-react-app/README.md -# html-react-parser app\n+# create-react-app\nExample of `html-react-parser` used in [Create React App](https://github.com/facebook/create-react-app).\n## Install\n```sh\n-$ cd examples/app/\n-$ npm install\n+git clone https://github.com/remarkablemark/html-react-parser.git\n+cd html-react-parser/examples/create-react-app/\n+npm install\n```\n-## Scripts\n+## Available Scripts\n-Start:\n+In the project directory, you can run:\n-```sh\n-$ npm start\n-```\n+### `npm start`\n-Build:\n+Runs the app in the development mode.\n-```sh\n-$ npm run build\n-```\n+Open [http://localhost:3000](http://localhost:3000) to view it in the browser.\n+\n+The page will reload if you make edits.\n+\n+You will also see any lint errors in the console.\n+\n+### `npm run build`\n+\n+Builds the app for production to the `build` folder.\n+\n+It correctly bundles in production mode and optimizes the build for the best performance.\n+\n+The build is minified and the filenames include the hashes.\n+\n+Your app is ready to be deployed!\n+\n+See the section about [deployment](https://create-react-app.dev/docs/deployment/) for more information.\n"
    },
    {
        "org_diff": "diff --git a/packages/react-debug-tools/src/__tests__/ReactHooksInspectionIntegration-test.js b/a/packages/react-debug-tools/src/__tests__/ReactHooksInspectionIntegration-test.js @@ -1244,7 +1244,7 @@ describe('ReactHooksInspectionIntegration', () => {\n         <Context.Provider value=\"provided\">\n           <Foo />\n         </Context.Provider>,\n-        {isConcurrent: true},\n+        {unstable_isConcurrent: true},\n       );\n     });\n     let childFiber = renderer.root.findByType(Foo)._currentFiber();",
        "org_msg": "Fix unstable_isConcurrent prop in ReactHooksInspectionIntegration-test",
        "sim_msg": "fix(component-testing): Increased timeout to allow  useEffect to trigger",
        "sim_diff": "diff --git a/npm/react/cypress/component/advanced/timers/card-spec.js b/npm/react/cypress/component/advanced/timers/card-spec.js @@ -8,7 +8,7 @@ it('should select null after timing out', () => {\nconst onSelect = cy.stub().as('selected')\nmount(<Card onSelect={onSelect} />)\n- cy.get('@selected', { timeout: 5100 }).should('have.been.calledWith', null)\n+ cy.get('@selected', { timeout: 5500 }).should('have.been.calledWith', null)\n})\nit('should accept selections', () => {\n"
    },
    {
        "org_diff": "diff --git a/fixtures/ssr/yarn.lock b/a/fixtures/ssr/yarn.lock @@ -2771,9 +2771,9 @@ flatten@^1.0.2:\n   integrity sha512-dVsPA/UwQ8+2uoFe5GHtiBMu48dWLTdsuEd7CKGlZlD78r1TTWBvDuFaFGKCo/ZfEr95Uk56vZoX86OsHkUeIg==\n \n follow-redirects@^1.0.0:\n-  version \"1.15.4\"\n-  resolved \"https://registry.yarnpkg.com/follow-redirects/-/follow-redirects-1.15.4.tgz#cdc7d308bf6493126b17ea2191ea0ccf3e535adf\"\n-  integrity sha512-Cr4D/5wlrb0z9dgERpUL3LrmPKVDsETIJhaCMeDfuFYcqa5bldGV6wBsAN6X/vxlXQtFBMrXdXxdL8CbDTGniw==\n+  version \"1.15.6\"\n+  resolved \"https://registry.yarnpkg.com/follow-redirects/-/follow-redirects-1.15.6.tgz#7f815c0cda4249c74ff09e95ef97c23b5fd0399b\"\n+  integrity sha512-wWN62YITEaOpSK584EZXJafH1AGpO8RVgElfkuXbTOrPX4fIfOyEpW/CsiNd8JdYrAoOvafRTOEnvsO++qCqFA==\n \n for-in@^1.0.1, for-in@^1.0.2:\n   version \"1.0.2\"",
        "org_msg": "Update follow-redirects package to version 1.15.6",
        "sim_msg": "bump follow-redirects to 1.14.8",
        "sim_diff": "diff --git a/package-lock.json b/package-lock.json \"integrity\": \"sha512-oXbJGbjDnfJRWPC7Va38EFhd+A8JWE5/hCiKcK8qjCdbLj9DTpsq6MEudwpRTH+V4qq+Jw7d3pUgQdSr3x3mTA==\"\n},\n\"node_modules/follow-redirects\": {\n- \"version\": \"1.14.7\",\n- \"resolved\": \"https://registry.npmjs.org/follow-redirects/-/follow-redirects-1.14.7.tgz\",\n- \"integrity\": \"sha512-+hbxoLbFMbRKDwohX8GkTataGqO6Jb7jGwpAlwgy2bIz25XtRm7KEzJM76R1WiNT5SwZkX4Y75SwBolkpmE7iQ==\",\n+ \"version\": \"1.14.8\",\n+ \"resolved\": \"https://registry.npmjs.org/follow-redirects/-/follow-redirects-1.14.8.tgz\",\n+ \"integrity\": \"sha512-1x0S9UVJHsQprFcEC/qnNzBLcIxsjAV905f/UkQxbclCsoTWlacCNOpQa/anodLl2uaEKFhfWOvM2Qg77+15zA==\",\n\"dev\": true,\n\"funding\": [\n{\n\"integrity\": \"sha512-oXbJGbjDnfJRWPC7Va38EFhd+A8JWE5/hCiKcK8qjCdbLj9DTpsq6MEudwpRTH+V4qq+Jw7d3pUgQdSr3x3mTA==\"\n},\n\"follow-redirects\": {\n- \"version\": \"1.14.7\",\n- \"resolved\": \"https://registry.npmjs.org/follow-redirects/-/follow-redirects-1.14.7.tgz\",\n- \"integrity\": \"sha512-+hbxoLbFMbRKDwohX8GkTataGqO6Jb7jGwpAlwgy2bIz25XtRm7KEzJM76R1WiNT5SwZkX4Y75SwBolkpmE7iQ==\",\n+ \"version\": \"1.14.8\",\n+ \"resolved\": \"https://registry.npmjs.org/follow-redirects/-/follow-redirects-1.14.8.tgz\",\n+ \"integrity\": \"sha512-1x0S9UVJHsQprFcEC/qnNzBLcIxsjAV905f/UkQxbclCsoTWlacCNOpQa/anodLl2uaEKFhfWOvM2Qg77+15zA==\",\n\"dev\": true\n},\n\"font-atlas\": {\n"
    },
    {
        "org_diff": "diff --git a/fixtures/concurrent/time-slicing/yarn.lock b/a/fixtures/concurrent/time-slicing/yarn.lock @@ -3372,9 +3372,9 @@ flatten@^1.0.2:\n   integrity sha512-dVsPA/UwQ8+2uoFe5GHtiBMu48dWLTdsuEd7CKGlZlD78r1TTWBvDuFaFGKCo/ZfEr95Uk56vZoX86OsHkUeIg==\n \n follow-redirects@^1.0.0:\n-  version \"1.15.4\"\n-  resolved \"https://registry.yarnpkg.com/follow-redirects/-/follow-redirects-1.15.4.tgz#cdc7d308bf6493126b17ea2191ea0ccf3e535adf\"\n-  integrity sha512-Cr4D/5wlrb0z9dgERpUL3LrmPKVDsETIJhaCMeDfuFYcqa5bldGV6wBsAN6X/vxlXQtFBMrXdXxdL8CbDTGniw==\n+  version \"1.15.6\"\n+  resolved \"https://registry.yarnpkg.com/follow-redirects/-/follow-redirects-1.15.6.tgz#7f815c0cda4249c74ff09e95ef97c23b5fd0399b\"\n+  integrity sha512-wWN62YITEaOpSK584EZXJafH1AGpO8RVgElfkuXbTOrPX4fIfOyEpW/CsiNd8JdYrAoOvafRTOEnvsO++qCqFA==\n \n for-in@^1.0.1, for-in@^1.0.2:\n   version \"1.0.2\"",
        "org_msg": "Update follow-redirects package to version 1.15.6",
        "sim_msg": "bump follow-redirects to 1.14.8",
        "sim_diff": "diff --git a/package-lock.json b/package-lock.json \"integrity\": \"sha512-oXbJGbjDnfJRWPC7Va38EFhd+A8JWE5/hCiKcK8qjCdbLj9DTpsq6MEudwpRTH+V4qq+Jw7d3pUgQdSr3x3mTA==\"\n},\n\"node_modules/follow-redirects\": {\n- \"version\": \"1.14.7\",\n- \"resolved\": \"https://registry.npmjs.org/follow-redirects/-/follow-redirects-1.14.7.tgz\",\n- \"integrity\": \"sha512-+hbxoLbFMbRKDwohX8GkTataGqO6Jb7jGwpAlwgy2bIz25XtRm7KEzJM76R1WiNT5SwZkX4Y75SwBolkpmE7iQ==\",\n+ \"version\": \"1.14.8\",\n+ \"resolved\": \"https://registry.npmjs.org/follow-redirects/-/follow-redirects-1.14.8.tgz\",\n+ \"integrity\": \"sha512-1x0S9UVJHsQprFcEC/qnNzBLcIxsjAV905f/UkQxbclCsoTWlacCNOpQa/anodLl2uaEKFhfWOvM2Qg77+15zA==\",\n\"dev\": true,\n\"funding\": [\n{\n\"integrity\": \"sha512-oXbJGbjDnfJRWPC7Va38EFhd+A8JWE5/hCiKcK8qjCdbLj9DTpsq6MEudwpRTH+V4qq+Jw7d3pUgQdSr3x3mTA==\"\n},\n\"follow-redirects\": {\n- \"version\": \"1.14.7\",\n- \"resolved\": \"https://registry.npmjs.org/follow-redirects/-/follow-redirects-1.14.7.tgz\",\n- \"integrity\": \"sha512-+hbxoLbFMbRKDwohX8GkTataGqO6Jb7jGwpAlwgy2bIz25XtRm7KEzJM76R1WiNT5SwZkX4Y75SwBolkpmE7iQ==\",\n+ \"version\": \"1.14.8\",\n+ \"resolved\": \"https://registry.npmjs.org/follow-redirects/-/follow-redirects-1.14.8.tgz\",\n+ \"integrity\": \"sha512-1x0S9UVJHsQprFcEC/qnNzBLcIxsjAV905f/UkQxbclCsoTWlacCNOpQa/anodLl2uaEKFhfWOvM2Qg77+15zA==\",\n\"dev\": true\n},\n\"font-atlas\": {\n"
    },
    {
        "org_diff": "diff --git a/fixtures/dom/yarn.lock b/a/fixtures/dom/yarn.lock @@ -3366,9 +3366,9 @@ flatten@^1.0.2:\n   integrity sha512-dVsPA/UwQ8+2uoFe5GHtiBMu48dWLTdsuEd7CKGlZlD78r1TTWBvDuFaFGKCo/ZfEr95Uk56vZoX86OsHkUeIg==\n \n follow-redirects@^1.0.0:\n-  version \"1.13.0\"\n-  resolved \"https://registry.yarnpkg.com/follow-redirects/-/follow-redirects-1.13.0.tgz#b42e8d93a2a7eea5ed88633676d6597bc8e384db\"\n-  integrity sha512-aq6gF1BEKje4a9i9+5jimNFIpq4Q1WiwBToeRK5NvZBd/TRsmW8BsJfOEGkr76TbOyPVD3OVDN910EcUNtRYEA==\n+  version \"1.15.6\"\n+  resolved \"https://registry.yarnpkg.com/follow-redirects/-/follow-redirects-1.15.6.tgz#7f815c0cda4249c74ff09e95ef97c23b5fd0399b\"\n+  integrity sha512-wWN62YITEaOpSK584EZXJafH1AGpO8RVgElfkuXbTOrPX4fIfOyEpW/CsiNd8JdYrAoOvafRTOEnvsO++qCqFA==\n \n for-in@^1.0.1, for-in@^1.0.2:\n   version \"1.0.2\"",
        "org_msg": "Update follow-redirects package to version 1.15.6",
        "sim_msg": "bump follow-redirects to 1.14.8",
        "sim_diff": "diff --git a/package-lock.json b/package-lock.json \"integrity\": \"sha512-oXbJGbjDnfJRWPC7Va38EFhd+A8JWE5/hCiKcK8qjCdbLj9DTpsq6MEudwpRTH+V4qq+Jw7d3pUgQdSr3x3mTA==\"\n},\n\"node_modules/follow-redirects\": {\n- \"version\": \"1.14.7\",\n- \"resolved\": \"https://registry.npmjs.org/follow-redirects/-/follow-redirects-1.14.7.tgz\",\n- \"integrity\": \"sha512-+hbxoLbFMbRKDwohX8GkTataGqO6Jb7jGwpAlwgy2bIz25XtRm7KEzJM76R1WiNT5SwZkX4Y75SwBolkpmE7iQ==\",\n+ \"version\": \"1.14.8\",\n+ \"resolved\": \"https://registry.npmjs.org/follow-redirects/-/follow-redirects-1.14.8.tgz\",\n+ \"integrity\": \"sha512-1x0S9UVJHsQprFcEC/qnNzBLcIxsjAV905f/UkQxbclCsoTWlacCNOpQa/anodLl2uaEKFhfWOvM2Qg77+15zA==\",\n\"dev\": true,\n\"funding\": [\n{\n\"integrity\": \"sha512-oXbJGbjDnfJRWPC7Va38EFhd+A8JWE5/hCiKcK8qjCdbLj9DTpsq6MEudwpRTH+V4qq+Jw7d3pUgQdSr3x3mTA==\"\n},\n\"follow-redirects\": {\n- \"version\": \"1.14.7\",\n- \"resolved\": \"https://registry.npmjs.org/follow-redirects/-/follow-redirects-1.14.7.tgz\",\n- \"integrity\": \"sha512-+hbxoLbFMbRKDwohX8GkTataGqO6Jb7jGwpAlwgy2bIz25XtRm7KEzJM76R1WiNT5SwZkX4Y75SwBolkpmE7iQ==\",\n+ \"version\": \"1.14.8\",\n+ \"resolved\": \"https://registry.npmjs.org/follow-redirects/-/follow-redirects-1.14.8.tgz\",\n+ \"integrity\": \"sha512-1x0S9UVJHsQprFcEC/qnNzBLcIxsjAV905f/UkQxbclCsoTWlacCNOpQa/anodLl2uaEKFhfWOvM2Qg77+15zA==\",\n\"dev\": true\n},\n\"font-atlas\": {\n"
    },
    {
        "org_diff": "diff --git a/yarn.lock b/a/yarn.lock @@ -6997,7 +6997,6 @@ eslint-plugin-no-unsanitized@3.1.2:\n \n \"eslint-plugin-react-internal@link:./scripts/eslint-rules\":\n   version \"0.0.0\"\n-  uid \"\"\n \n eslint-plugin-react@^6.7.1:\n   version \"6.10.3\"\n@@ -7977,9 +7976,9 @@ fluent-syntax@0.13.0:\n   integrity sha512-0Bk1AsliuYB550zr4JV9AYhsETsD3ELXUQzdXGJfIc1Ni/ukAfBdQInDhVMYJUaT2QxoamNslwkYF7MlOrPUwg==\n \n follow-redirects@^1.0.0:\n-  version \"1.15.4\"\n-  resolved \"https://registry.yarnpkg.com/follow-redirects/-/follow-redirects-1.15.4.tgz#cdc7d308bf6493126b17ea2191ea0ccf3e535adf\"\n-  integrity sha512-Cr4D/5wlrb0z9dgERpUL3LrmPKVDsETIJhaCMeDfuFYcqa5bldGV6wBsAN6X/vxlXQtFBMrXdXxdL8CbDTGniw==\n+  version \"1.15.6\"\n+  resolved \"https://registry.yarnpkg.com/follow-redirects/-/follow-redirects-1.15.6.tgz#7f815c0cda4249c74ff09e95ef97c23b5fd0399b\"\n+  integrity sha512-wWN62YITEaOpSK584EZXJafH1AGpO8RVgElfkuXbTOrPX4fIfOyEpW/CsiNd8JdYrAoOvafRTOEnvsO++qCqFA==\n \n for-in@^1.0.2:\n   version \"1.0.2\"",
        "org_msg": "Update follow-redirects package to version 1.15.6",
        "sim_msg": "bump follow-redirects to 1.14.8",
        "sim_diff": "diff --git a/package-lock.json b/package-lock.json \"integrity\": \"sha512-oXbJGbjDnfJRWPC7Va38EFhd+A8JWE5/hCiKcK8qjCdbLj9DTpsq6MEudwpRTH+V4qq+Jw7d3pUgQdSr3x3mTA==\"\n},\n\"node_modules/follow-redirects\": {\n- \"version\": \"1.14.7\",\n- \"resolved\": \"https://registry.npmjs.org/follow-redirects/-/follow-redirects-1.14.7.tgz\",\n- \"integrity\": \"sha512-+hbxoLbFMbRKDwohX8GkTataGqO6Jb7jGwpAlwgy2bIz25XtRm7KEzJM76R1WiNT5SwZkX4Y75SwBolkpmE7iQ==\",\n+ \"version\": \"1.14.8\",\n+ \"resolved\": \"https://registry.npmjs.org/follow-redirects/-/follow-redirects-1.14.8.tgz\",\n+ \"integrity\": \"sha512-1x0S9UVJHsQprFcEC/qnNzBLcIxsjAV905f/UkQxbclCsoTWlacCNOpQa/anodLl2uaEKFhfWOvM2Qg77+15zA==\",\n\"dev\": true,\n\"funding\": [\n{\n\"integrity\": \"sha512-oXbJGbjDnfJRWPC7Va38EFhd+A8JWE5/hCiKcK8qjCdbLj9DTpsq6MEudwpRTH+V4qq+Jw7d3pUgQdSr3x3mTA==\"\n},\n\"follow-redirects\": {\n- \"version\": \"1.14.7\",\n- \"resolved\": \"https://registry.npmjs.org/follow-redirects/-/follow-redirects-1.14.7.tgz\",\n- \"integrity\": \"sha512-+hbxoLbFMbRKDwohX8GkTataGqO6Jb7jGwpAlwgy2bIz25XtRm7KEzJM76R1WiNT5SwZkX4Y75SwBolkpmE7iQ==\",\n+ \"version\": \"1.14.8\",\n+ \"resolved\": \"https://registry.npmjs.org/follow-redirects/-/follow-redirects-1.14.8.tgz\",\n+ \"integrity\": \"sha512-1x0S9UVJHsQprFcEC/qnNzBLcIxsjAV905f/UkQxbclCsoTWlacCNOpQa/anodLl2uaEKFhfWOvM2Qg77+15zA==\",\n\"dev\": true\n},\n\"font-atlas\": {\n"
    },
    {
        "org_diff": "diff --git a/packages/scheduler/src/__tests__/Scheduler-test.js b/a/packages/scheduler/src/__tests__/Scheduler-test.js @@ -247,7 +247,8 @@ describe('SchedulerBrowser', () => {\n     });\n     runtime.assertLog(['Post Message']);\n     cancelCallback(task);\n-    runtime.assertLog([]);\n+    runtime.fireMessageEvent();\n+    runtime.assertLog(['Message Event']);\n   });\n \n   it('throws when a task errors then continues in a new event', () => {",
        "org_msg": "Add message event handling in Scheduler-test.js",
        "sim_msg": "Update message event test",
        "sim_diff": "diff --git a/tests/e2e/specs/StartMessageEvent.spec.js b/tests/e2e/specs/StartMessageEvent.spec.js @@ -20,7 +20,7 @@ describe('Start Message Event', () => {\ncy.get('[data-test=switch-to-message-end-event]').click();\ngetElementAtPosition(startMessageEventPosition).click();\n- cy.get('[name=messageRef]').select('node_5_message');\n+ cy.get('[data-test=\"messageRef:select\"]').selectOption('node_5_message');\nconst messageRef = '<bpmn:messageEventDefinition messageRef=\"node_5_message\" />';\n"
    },
    {
        "org_diff": "diff --git a/packages/shared/forks/ReactFeatureFlags.native-oss.js b/a/packages/shared/forks/ReactFeatureFlags.native-oss.js @@ -10,6 +10,13 @@\n import typeof * as FeatureFlagsType from 'shared/ReactFeatureFlags';\n import typeof * as ExportsType from './ReactFeatureFlags.native-oss';\n \n+// -----------------------------------------------------------------------------\n+// Ready for next major.\n+//\n+// Alias __NEXT_MAJOR__ to false for easier skimming.\n+// -----------------------------------------------------------------------------\n+const __NEXT_MAJOR__ = false;\n+\n export const debugRenderPhaseSideEffectsForStrictMode = __DEV__;\n export const enableDebugTracing = false;\n export const enableAsyncDebugInfo = false;\n@@ -18,7 +25,7 @@ export const enableProfilerTimer = __PROFILE__;\n export const enableProfilerCommitHooks = __PROFILE__;\n export const enableProfilerNestedUpdatePhase = __PROFILE__;\n export const enableUpdaterTracking = __PROFILE__;\n-export const enableCache = true;\n+export const enableCache = __NEXT_MAJOR__;\n export const enableLegacyCache = false;\n export const enableCacheElement = true;\n export const enableFetchInstrumentation = false;",
        "org_msg": "\"Update ReactFeatureFlags.native-oss.js for next major release\"",
        "sim_msg": "Update React Native Quickstart dependencies",
        "sim_diff": "diff --git a/articles/quickstart/native/react-native/index.yml b/articles/quickstart/native/react-native/index.yml @@ -30,8 +30,8 @@ github:\norg: auth0-samples\nrepo: auth0-react-native-sample\nrequirements:\n- - React Native 0.59.4\n- - NodeJS 4.3\n+ - React Native 0.59.10\n+ - NodeJS 10.16\nnext_steps:\n- path: 00-login\nlist:\n"
    },
    {
        "org_diff": "diff --git a/packages/eslint-plugin-react-hooks/__tests__/ESLintRuleExhaustiveDeps-test.js b/a/packages/eslint-plugin-react-hooks/__tests__/ESLintRuleExhaustiveDeps-test.js @@ -7774,6 +7774,16 @@ const testsTypescript = {\n         }\n       `,\n     },\n+    {\n+      code: normalizeIndent`\n+        function useMyThing<T>(): void {\n+          useEffect(() => {\n+            let foo: T;\n+            console.log(foo);\n+          }, []);\n+        }\n+      `,\n+    },\n   ],\n   invalid: [\n     {",
        "org_msg": "Add useMyThing function with generic type and useEffect with empty dependency array.",
        "sim_msg": "Add dependendencies for useEffect.",
        "sim_diff": "diff --git a/assets/js/components/legacy-notifications/DashboardCoreSiteAlerts.js b/assets/js/components/legacy-notifications/DashboardCoreSiteAlerts.js @@ -57,7 +57,7 @@ const DashboardCoreSiteAlerts = () => {\nclearTimeout( timer );\n};\n},\n- []\n+ [ hasSurveys ]\n);\nuseEffect(\n@@ -67,7 +67,8 @@ const DashboardCoreSiteAlerts = () => {\nif ( secondsElapsed < MAX_SECONDS_FOR_SURVEY && surveys ) {\nsetHasSurveys( true );\n}\n- }\n+ },\n+ [ startTime, surveys, setHasSurveys ]\n);\nif ( ! Array.isArray( notifications ) || ! ready || hasSurveys ) {\n"
    },
    {
        "org_diff": "diff --git a/packages/react-dom/src/__tests__/refs-destruction-test.js b/a/packages/react-dom/src/__tests__/refs-destruction-test.js @@ -12,7 +12,6 @@\n let React;\n let ReactDOM;\n let ReactDOMClient;\n-let ReactTestUtils;\n let TestComponent;\n let act;\n let theInnerDivRef;\n@@ -25,7 +24,6 @@ describe('refs-destruction', () => {\n     React = require('react');\n     ReactDOM = require('react-dom');\n     ReactDOMClient = require('react-dom/client');\n-    ReactTestUtils = require('react-dom/test-utils');\n     act = require('internal-test-utils').act;\n \n     class ClassComponent extends React.Component {\n@@ -75,7 +73,7 @@ describe('refs-destruction', () => {\n       root.render(<TestComponent />);\n     });\n \n-    expect(ReactTestUtils.isDOMComponent(theInnerDivRef.current)).toBe(true);\n+    expect(theInnerDivRef.current).toBeInstanceOf(Element);\n     expect(theInnerClassComponentRef.current).toBeTruthy();\n \n     root.unmount();\n@@ -91,7 +89,7 @@ describe('refs-destruction', () => {\n       root.render(<TestComponent />);\n     });\n \n-    expect(ReactTestUtils.isDOMComponent(theInnerDivRef.current)).toBe(true);\n+    expect(theInnerDivRef.current).toBeInstanceOf(Element);\n     expect(theInnerClassComponentRef.current).toBeTruthy();\n \n     await act(async () => {\n@@ -109,7 +107,7 @@ describe('refs-destruction', () => {\n       root.render(<TestComponent />);\n     });\n \n-    expect(ReactTestUtils.isDOMComponent(theInnerDivRef.current)).toBe(true);\n+    expect(theInnerDivRef.current).toBeInstanceOf(Element);\n     expect(theInnerClassComponentRef.current).toBeTruthy();\n \n     await act(async () => {",
        "org_msg": "Refactor refs-destruction test to use Element instanceof check",
        "sim_msg": "fix test refactor",
        "sim_diff": "diff --git a/test/definition.schema.test.js b/test/definition.schema.test.js @@ -976,14 +976,13 @@ describe('enforcer/schema', () => {\ntype: 'object',\nproperties: {\ny: {\n- type: 'boolean',\n- format: 'date'\n+ type: 'taco'\n}\n}\n}\n}\n});\n- expect(err).to.match(/Property not allowed: format/);\n+ expect(err).to.match(/at: properties > x > properties > y > type\\s+Value must be one of/);\n});\n});\n"
    },
    {
        "org_diff": "diff --git a/packages/react-debug-tools/src/__tests__/ReactDevToolsHooksIntegration-test.js b/a/packages/react-debug-tools/src/__tests__/ReactDevToolsHooksIntegration-test.js @@ -43,7 +43,7 @@ describe('React hooks DevTools integration', () => {\n     const InternalTestUtils = require('internal-test-utils');\n     waitForAll = InternalTestUtils.waitForAll;\n \n-    act = ReactTestRenderer.act;\n+    act = require('internal-test-utils').act;\n   });\n \n   it('should support editing useState hooks', async () => {\n@@ -55,7 +55,12 @@ describe('React hooks DevTools integration', () => {\n       return <div>count:{count}</div>;\n     }\n \n-    const renderer = ReactTestRenderer.create(<MyComponent />);\n+    let renderer;\n+    await act(() => {\n+      renderer = ReactTestRenderer.create(<MyComponent />, {\n+        unstable_isConcurrent: true,\n+      });\n+    });\n     expect(renderer.toJSON()).toEqual({\n       type: 'div',\n       props: {},\n@@ -107,7 +112,12 @@ describe('React hooks DevTools integration', () => {\n       );\n     }\n \n-    const renderer = ReactTestRenderer.create(<MyComponent />);\n+    let renderer;\n+    await act(() => {\n+      renderer = ReactTestRenderer.create(<MyComponent />, {\n+        unstable_isConcurrent: true,\n+      });\n+    });\n     expect(renderer.toJSON()).toEqual({\n       type: 'div',\n       props: {},\n@@ -155,7 +165,12 @@ describe('React hooks DevTools integration', () => {\n       return <div>count:{count}</div>;\n     }\n \n-    const renderer = ReactTestRenderer.create(<MyComponent />);\n+    let renderer;\n+    await act(() => {\n+      renderer = ReactTestRenderer.create(<MyComponent />, {\n+        unstable_isConcurrent: true,\n+      });\n+    });\n     expect(renderer.toJSON()).toEqual({\n       type: 'div',\n       props: {},\n@@ -192,14 +207,17 @@ describe('React hooks DevTools integration', () => {\n     function MyComponent() {\n       return 'Done';\n     }\n-\n-    const renderer = ReactTestRenderer.create(\n-      <div>\n-        <React.Suspense fallback={'Loading'}>\n-          <MyComponent />\n-        </React.Suspense>\n-      </div>,\n-    );\n+    let renderer;\n+    await act(() => {\n+      renderer = ReactTestRenderer.create(\n+        <div>\n+          <React.Suspense fallback={'Loading'}>\n+            <MyComponent />\n+          </React.Suspense>\n+        </div>,\n+        {unstable_isConcurrent: true},\n+      );\n+    });\n     const fiber = renderer.root._currentFiber().child;\n     if (__DEV__) {\n       // First render was locked\n@@ -236,7 +254,6 @@ describe('React hooks DevTools integration', () => {\n     }\n   });\n \n-  // @gate __DEV__\n   it('should support overriding suspense in concurrent mode', async () => {\n     if (__DEV__) {\n       // Lock the first render\n@@ -254,7 +271,7 @@ describe('React hooks DevTools integration', () => {\n             <MyComponent />\n           </React.Suspense>\n         </div>,\n-        {isConcurrent: true},\n+        {unstable_isConcurrent: true},\n       ),\n     );\n ",
        "org_msg": "Refactor ReactDevToolsHooksIntegration-test.js to use internal-test-utils for act function",
        "sim_msg": "doc(readme): refactor controlled components to hooks",
        "sim_diff": "diff --git a/README.md b/README.md @@ -274,14 +274,11 @@ In this mode react-tabs does not handle any tab selection state internally and l\nThis mode also enforces you to set a handler for `onSelect`. `defaultIndex` does not have any effect and will therefore throw an error.\n```js\n-class App extends Component {\n- constructor() {\n- super();\n- this.state = { tabIndex: 0 };\n- }\n- render() {\n+const App = () => {\n+ const [tabIndex, setTabIndex] = useState(0);\n+\nreturn (\n- <Tabs selectedIndex={this.state.tabIndex} onSelect={tabIndex => this.setState({ tabIndex })}>\n+ <Tabs selectedIndex={tabIndex} onSelect={index => setTabIndex(index)}>\n<TabList>\n<Tab>Title 1</Tab>\n<Tab>Title 2</Tab>\n@@ -290,8 +287,7 @@ class App extends Component {\n<TabPanel></TabPanel>\n</Tabs>\n);\n- }\n-}\n+};\n```\n## Styling\n"
    },
    {
        "org_diff": "diff --git a/packages/react-debug-tools/src/__tests__/ReactHooksInspection-test.js b/a/packages/react-debug-tools/src/__tests__/ReactHooksInspection-test.js @@ -584,24 +584,29 @@ describe('ReactHooksInspection', () => {\n       return <div>{value}</div>;\n     }\n     const tree = ReactDebugTools.inspectHooks(Foo, {});\n-    expect(normalizeSourceLoc(tree)).toMatchInlineSnapshot(`\n-      [\n-        {\n-          \"debugInfo\": null,\n-          \"hookSource\": {\n-            \"columnNumber\": 0,\n-            \"fileName\": \"**\",\n-            \"functionName\": \"Foo\",\n-            \"lineNumber\": 0,\n-          },\n-          \"id\": null,\n-          \"isStateEditable\": false,\n-          \"name\": \"Unresolved\",\n-          \"subHooks\": [],\n-          \"value\": Promise {},\n+    const results = normalizeSourceLoc(tree);\n+    expect(results).toHaveLength(1);\n+    expect(results[0]).toMatchInlineSnapshot(\n+      {\n+        value: expect.any(Promise),\n+      },\n+      `\n+      {\n+        \"debugInfo\": null,\n+        \"hookSource\": {\n+          \"columnNumber\": 0,\n+          \"fileName\": \"**\",\n+          \"functionName\": \"Foo\",\n+          \"lineNumber\": 0,\n         },\n-      ]\n-    `);\n+        \"id\": null,\n+        \"isStateEditable\": false,\n+        \"name\": \"Unresolved\",\n+        \"subHooks\": [],\n+        \"value\": Any<Promise>,\n+      }\n+    `,\n+    );\n   });\n \n   describe('useDebugValue', () => {",
        "org_msg": "\"Refactor ReactHooksInspection-test.js to improve readability and add test coverage for normalizeSourceLoc function\"",
        "sim_msg": "doc(readme): refactor controlled components to hooks",
        "sim_diff": "diff --git a/README.md b/README.md @@ -274,14 +274,11 @@ In this mode react-tabs does not handle any tab selection state internally and l\nThis mode also enforces you to set a handler for `onSelect`. `defaultIndex` does not have any effect and will therefore throw an error.\n```js\n-class App extends Component {\n- constructor() {\n- super();\n- this.state = { tabIndex: 0 };\n- }\n- render() {\n+const App = () => {\n+ const [tabIndex, setTabIndex] = useState(0);\n+\nreturn (\n- <Tabs selectedIndex={this.state.tabIndex} onSelect={tabIndex => this.setState({ tabIndex })}>\n+ <Tabs selectedIndex={tabIndex} onSelect={index => setTabIndex(index)}>\n<TabList>\n<Tab>Title 1</Tab>\n<Tab>Title 2</Tab>\n@@ -290,8 +287,7 @@ class App extends Component {\n<TabPanel></TabPanel>\n</Tabs>\n);\n- }\n-}\n+};\n```\n## Styling\n"
    },
    {
        "org_diff": "diff --git a/packages/react-devtools-inline/__tests__/__e2e__/components.test.js b/a/packages/react-devtools-inline/__tests__/__e2e__/components.test.js @@ -59,7 +59,7 @@ test.describe('Components', () => {\n     const isEditableValue = semver.gte(config.use.react_version, '16.8.0');\n \n     // Then read the inspected values.\n-    const [propName, propValue, sourceText] = await page.evaluate(\n+    const [propName, propValue] = await page.evaluate(\n       isEditable => {\n         const {createTestNameSelector, findAllNodes} =\n           window.REACT_DOM_DEVTOOLS;\n@@ -85,21 +85,41 @@ test.describe('Components', () => {\n           createTestNameSelector('InspectedElementPropsTree'),\n           createTestNameSelector(selectorValue),\n         ])[0];\n-        const source = findAllNodes(container, [\n-          createTestNameSelector('InspectedElementView-Source'),\n-        ])[0];\n         const value = isEditable.value\n           ? valueElement.value\n           : valueElement.innerText;\n \n-        return [name, value, source.innerText];\n+        return [name, value];\n       },\n       {name: isEditableName, value: isEditableValue}\n     );\n \n     expect(propName).toBe('label');\n     expect(propValue).toBe('\"one\"');\n-    expect(sourceText).toMatch(/e2e-app[a-zA-Z]*\\.js/);\n+  });\n+\n+  test('Should allow inspecting source of the element', async () => {\n+    // Source inspection is available only in modern renderer.\n+    runOnlyForReactRange('>=16.8');\n+\n+    // Select the first list item in DevTools.\n+    await devToolsUtils.selectElement(page, 'ListItem', 'List\\nApp');\n+\n+    // Then read the inspected values.\n+    const sourceText = await page.evaluate(() => {\n+      const {createTestNameSelector, findAllNodes} = window.REACT_DOM_DEVTOOLS;\n+      const container = document.getElementById('devtools');\n+\n+      const source = findAllNodes(container, [\n+        createTestNameSelector('InspectedElementView-Source'),\n+      ])[0];\n+\n+      return source.innerText;\n+    });\n+\n+    // If React version is specified, the e2e-regression.html page will be used\n+    // If not, then e2e.html, see playwright.config.js, how url is constructed\n+    expect(sourceText).toMatch(/e2e-app[\\-a-zA-Z]*\\.js/);\n   });\n \n   test('should allow props to be edited', async () => {",
        "org_msg": "Refactor source inspection in components.test.js and add test for inspecting source of the element",
        "sim_msg": "test(html-to-react): refactor tests",
        "sim_diff": "diff --git a/test/html-to-react.test.js b/test/html-to-react.test.js @@ -2,7 +2,6 @@ const React = require('react');\nconst parse = require('..');\nconst { data, render } = require('./helpers/');\n-describe('HTML to React', () => {\ndescribe('exports', () => {\nit('has default ES Module', () => {\nexpect(parse.default).toBe(parse);\n@@ -17,28 +16,27 @@ describe('HTML to React', () => {\n});\nit('has attributesToProps', () => {\n- expect(parse.attributesToProps).toBe(\n- require('../lib/attributes-to-props')\n- );\n+ expect(parse.attributesToProps).toBe(require('../lib/attributes-to-props'));\n});\n});\ndescribe('parser', () => {\n- it.each([undefined, null, {}, [], 0, 1, () => {}, new Date()])(\n- 'throws an error if first argument is %p',\n- input => {\n+ it.each([undefined, null, {}, [], true, false, 0, 1, () => {}, new Date()])(\n+ 'throws error for value: %p',\n+ value => {\nexpect(() => {\n- parse(input);\n+ parse(value);\n}).toThrow(TypeError);\n}\n);\n- it('converts empty string to empty array', () => {\n+ it('converts \"\" to []', () => {\nexpect(parse('')).toEqual([]);\n});\nit('returns string if it cannot be parsed as HTML', () => {\n- expect(parse('foo')).toBe('foo');\n+ const string = 'foo';\n+ expect(parse(string)).toBe(string);\n});\nit('converts single HTML element to React', () => {\n@@ -60,9 +58,9 @@ describe('HTML to React', () => {\nconst html = data.html.multiple;\nconst reactElements = parse(html);\n- expect(\n- render(React.createElement(React.Fragment, {}, reactElements))\n- ).toBe(html);\n+ expect(render(React.createElement(React.Fragment, {}, reactElements))).toBe(\n+ html\n+ );\n});\nit('converts complex HTML to React', () => {\n@@ -220,4 +218,3 @@ describe('HTML to React', () => {\n});\n});\n});\n-});\n"
    },
    {
        "org_diff": "diff --git a/README.md b/a/README.md @@ -36,7 +36,7 @@ The documentation is divided into several sections:\n * [Where to Get Support](https://react.dev/community)\n * [Contributing Guide](https://legacy.reactjs.org/docs/how-to-contribute.html)\n \n-You can improve it by sending pull requests to [this repository](https://github.com/reactjs/reactjs.org).\n+You can improve it by sending pull requests to [this repository](https://github.com/reactjs/react.dev).\n \n ## Examples\n ",
        "org_msg": "Update repository link in README.md",
        "sim_msg": "Update README.md\nUpdate link to documentation",
        "sim_diff": "diff --git a/README.md b/README.md @@ -6,4 +6,4 @@ Lightning is a (TV) app development framework that offers great portability and\n[SDK](https://github.com/rdkcentral/Lightning-SDK)\n## Documentation\n-[Documentation](https://rdkcentral.github.io/Lightning)\n+[Documentation](https://lightningjs.io/docs/)\n"
    },
    {
        "org_diff": "diff --git a/packages/react-reconciler/src/ReactChildFiber.js b/a/packages/react-reconciler/src/ReactChildFiber.js @@ -438,7 +438,6 @@ function createChildReconciler(\n   }\n \n   function mapRemainingChildren(\n-    returnFiber: Fiber,\n     currentFirstChild: Fiber,\n   ): Map<string | number, Fiber> {\n     // Add the remaining children to a temporary map so that we can find them by\n@@ -1194,7 +1193,7 @@ function createChildReconciler(\n     }\n \n     // Add all children to a key map for quick lookups.\n-    const existingChildren = mapRemainingChildren(returnFiber, oldFiber);\n+    const existingChildren = mapRemainingChildren(oldFiber);\n \n     // Keep scanning and use the map to restore deleted items as moves.\n     for (; newIdx < newChildren.length; newIdx++) {\n@@ -1404,7 +1403,7 @@ function createChildReconciler(\n     }\n \n     // Add all children to a key map for quick lookups.\n-    const existingChildren = mapRemainingChildren(returnFiber, oldFiber);\n+    const existingChildren = mapRemainingChildren(oldFiber);\n \n     // Keep scanning and use the map to restore deleted items as moves.\n     for (; !step.done; newIdx++, step = newChildren.next()) {",
        "org_msg": "Refactor mapRemainingChildren function to remove unnecessary parameter.",
        "sim_msg": "refactor the getChildren and processChildren functions to account for descendents that don't have SwiperSlide components",
        "sim_diff": "diff --git a/src/react/get-children.js b/src/react/get-children.js import React from 'react';\n-function getChildren(children) {\n+function processChildren(c) {\n+ const slides = [];\n+ React.Children.toArray(c).forEach((child) => {\n+ if (child.type && child.type.displayName === 'SwiperSlide') {\n+ slides.push(child);\n+ } else if (child.props.children) {\n+ processChildren(child.props.children).forEach((slide) => slides.push(slide));\n+ }\n+ });\n+ return slides;\n+}\n+\n+function getChildren(c) {\nconst slides = [];\nconst slots = {\n@@ -9,20 +21,24 @@ function getChildren(children) {\n'wrapper-start': [],\n'wrapper-end': [],\n};\n- function processChildren(c) {\n+\nReact.Children.toArray(c).forEach((child) => {\nif (child.type && child.type.displayName === 'SwiperSlide') {\nslides.push(child);\n} else if (child.props && child.props.slot && slots[child.props.slot]) {\nslots[child.props.slot].push(child);\n} else if (child.props.children) {\n- processChildren(child.props.children);\n+ const foundSlides = processChildren(child.props.children);\n+ if (foundSlides.length > 0) {\n+ foundSlides.forEach((slide) => slides.push(slide));\n} else {\nslots['container-end'].push(child);\n}\n- });\n+ } else {\n+ slots['container-end'].push(child);\n}\n- processChildren(children);\n+ });\n+\nreturn { slides, slots };\n}\n"
    },
    {
        "org_diff": "diff --git a/.circleci/config.yml b/a/.circleci/config.yml @@ -97,6 +97,16 @@ jobs:\n       - setup_node_modules\n       - run: node ./scripts/tasks/flow-ci\n \n+\n+  yarn_flags:\n+    docker: *docker\n+    environment: *environment\n+\n+    steps:\n+      - checkout\n+      - setup_node_modules\n+      - run: yarn flags\n+\n   scrape_warning_messages:\n     docker: *docker\n     environment: *environment\n@@ -447,6 +457,11 @@ workflows:\n   build_and_test:\n     unless: << pipeline.parameters.prerelease_commit_sha >>\n     jobs:\n+      - yarn_flags:\n+          filters:\n+            branches:\n+              ignore:\n+                - builds/facebook-www\n       - yarn_flow:\n           filters:\n             branches:",
        "org_msg": "Add yarn_flags job to CircleCI config.",
        "sim_msg": "Use yarn 0.27.4 on circleci",
        "sim_diff": "diff --git a/.circleci/config.yml b/.circleci/config.yml @@ -8,7 +8,7 @@ jobs:\n- checkout\n- run:\nname: install yarn\n- command: 'sudo npm install -g yarn'\n+ command: 'sudo npm install -g yarn@0.27.4'\n- restore_cache:\nkey: dependency-cache-{{ checksum \"yarn.lock\" }}\n- run:\n"
    },
    {
        "org_diff": "diff --git a/packages/react-dom/src/__tests__/ReactDOMServerIntegrationLegacyContextDisabled-test.internal.js b/a/packages/react-dom/src/__tests__/ReactDOMServerIntegrationLegacyContextDisabled-test.internal.js @@ -13,28 +13,29 @@\n const ReactDOMServerIntegrationUtils = require('./utils/ReactDOMServerIntegrationTestUtils');\n \n let React;\n-let ReactDOM;\n+let ReactDOMClient;\n let ReactFeatureFlags;\n let ReactDOMServer;\n \n function initModules() {\n   // Reset warning cache.\n   jest.resetModules();\n   React = require('react');\n-  ReactDOM = require('react-dom');\n+  ReactDOMClient = require('react-dom/client');\n   ReactDOMServer = require('react-dom/server');\n \n   ReactFeatureFlags = require('shared/ReactFeatureFlags');\n   ReactFeatureFlags.disableLegacyContext = true;\n \n   // Make them available to the helpers.\n   return {\n-    ReactDOM,\n+    ReactDOMClient,\n     ReactDOMServer,\n   };\n }\n \n-const {resetModules, itRenders} = ReactDOMServerIntegrationUtils(initModules);\n+const {resetModules, itRenders, clientRenderOnBadMarkup} =\n+  ReactDOMServerIntegrationUtils(initModules);\n \n function formatValue(val) {\n   if (val === null) {\n@@ -104,7 +105,7 @@ describe('ReactDOMServerIntegrationLegacyContextDisabled', () => {\n           <RegularFn />\n         </span>\n       </LegacyProvider>,\n-      3,\n+      render === clientRenderOnBadMarkup ? 6 : 3,\n     );\n     expect(e.textContent).toBe('{}undefinedundefined');\n     expect(lifecycleContextLog).toEqual([]);",
        "org_msg": "Refactor ReactDOM import to ReactDOMClient in ReactDOMServerIntegrationLegacyContextDisabled-test.internal.js",
        "sim_msg": "chore: Use React and ReactDOM externals",
        "sim_diff": "diff --git a/webpack.config.js b/webpack.config.js @@ -60,8 +60,8 @@ const externalPackages = [\n];\nconst externals = {\n- // react: 'React',\n- // 'react-dom': 'ReactDOM',\n+ react: 'React',\n+ 'react-dom': 'ReactDOM',\ntinymce: 'tinymce',\nmoment: 'moment',\njquery: 'jQuery',\n"
    },
    {
        "org_diff": "diff --git a/packages/react-dom/src/__tests__/ReactDOMServerIntegrationLegacyContext-test.js b/a/packages/react-dom/src/__tests__/ReactDOMServerIntegrationLegacyContext-test.js @@ -14,26 +14,30 @@ const ReactDOMServerIntegrationUtils = require('./utils/ReactDOMServerIntegratio\n \n let PropTypes;\n let React;\n-let ReactDOM;\n+let ReactDOMClient;\n let ReactDOMServer;\n \n function initModules() {\n   // Reset warning cache.\n   jest.resetModules();\n   PropTypes = require('prop-types');\n   React = require('react');\n-  ReactDOM = require('react-dom');\n+  ReactDOMClient = require('react-dom/client');\n   ReactDOMServer = require('react-dom/server');\n \n   // Make them available to the helpers.\n   return {\n-    ReactDOM,\n+    ReactDOMClient,\n     ReactDOMServer,\n   };\n }\n \n-const {resetModules, itRenders, itThrowsWhenRendering} =\n-  ReactDOMServerIntegrationUtils(initModules);\n+const {\n+  resetModules,\n+  itRenders,\n+  itThrowsWhenRendering,\n+  clientRenderOnBadMarkup,\n+} = ReactDOMServerIntegrationUtils(initModules);\n \n describe('ReactDOMServerIntegration', () => {\n   beforeEach(() => {\n@@ -272,7 +276,10 @@ describe('ReactDOMServerIntegration', () => {\n             return {foo: 'bar'};\n           }\n         }\n-        const e = await render(<ForgetfulParent />, 1);\n+        const e = await render(\n+          <ForgetfulParent />,\n+          render === clientRenderOnBadMarkup ? 4 : 1,\n+        );\n         expect(e.textContent).toBe('nope');\n       },\n     );",
        "org_msg": "\"Update ReactDOMClient in ReactDOMServerIntegrationLegacyContext-test.js\"",
        "sim_msg": "client: react: update dependencies - jest",
        "sim_diff": "diff --git a/generators/client/templates/react/package.json.ejs b/generators/client/templates/react/package.json.ejs @@ -70,7 +70,7 @@ limitations under the License.\n\"@types/chai\": \"4.1.7\",\n<%_ } _%>\n\"@types/enzyme\": \"3.9.1\",\n- \"@types/jest\": \"24.0.11\",\n+ \"@types/jest\": \"24.0.23\",\n\"@types/lodash\": \"4.14.149\",\n<%_ if (protractorTests) { _%>\n\"@types/mocha\": \"5.2.7\",\n@@ -118,8 +118,8 @@ limitations under the License.\n\"husky\": \"3.0.4\",\n<%_ } _%>\n\"identity-obj-proxy\": \"3.0.0\",\n- \"jest\": \"24.5.0\",\n- \"jest-junit\": \"8.0.0\",\n+ \"jest\": \"24.9.0\",\n+ \"jest-junit\": \"10.0.0\",\n\"jest-sonar-reporter\": \"2.0.0\",\n\"json-loader\": \"0.5.7\",\n<%_ if (!skipCommitHook) { _%>\n@@ -157,7 +157,7 @@ limitations under the License.\n\"terser-webpack-plugin\": \"1.2.3\",\n\"thread-loader\": \"2.1.2\",\n\"to-string-loader\": \"1.1.5\",\n- \"ts-jest\": \"24.0.0\",\n+ \"ts-jest\": \"24.2.0\",\n\"ts-loader\": \"5.3.3\",\n<%_ if (protractorTests) { _%>\n\"ts-node\": \"8.0.3\",\n"
    },
    {
        "org_diff": "diff --git a/scripts/flow/xplat.js b/a/scripts/flow/xplat.js @@ -9,6 +9,7 @@\n \n declare module 'ReactNativeInternalFeatureFlags' {\n   declare export var alwaysThrottleRetries: boolean;\n+  declare export var enableComponentStackLocations: boolean;\n   declare export var enableDeferRootSchedulingToMicrotask: boolean;\n   declare export var enableUseRefAccessWarning: boolean;\n   declare export var passChildrenWhenCloningPersistedNodes: boolean;",
        "org_msg": "Add enableComponentStackLocations flag to ReactNativeInternalFeatureFlags module",
        "sim_msg": "Add additional props and defaults to PostSearcherAutoSuggest component.",
        "sim_diff": "diff --git a/assets/js/components/PostSearcherAutoSuggest.js b/assets/js/components/PostSearcherAutoSuggest.js @@ -43,11 +43,12 @@ import { useFeature } from '../hooks/useFeature';\nexport default function PostSearcherAutoSuggest( {\nid,\n- setCanSubmit,\n+ setCanSubmit = () => {},\nsetMatch,\nplaceholder = '',\nsetIsLoading,\nonKeyDown,\n+ autoFocus,\n} ) {\nconst [ searchTerm, setSearchTerm ] = useState( '' );\nconst debouncedValue = useDebouncedState( searchTerm, 200 );\n@@ -93,7 +94,7 @@ export default function PostSearcherAutoSuggest( {\n)\n.then( ( res ) => {\nsetResults( res );\n- setIsLoading?.( true );\n+ setIsLoading?.( false );\n} )\n.catch( () => {\nsetResults( [] );\n@@ -120,25 +121,33 @@ export default function PostSearcherAutoSuggest( {\nonChange={ onInputChange }\nplaceholder={ placeholder }\nonKeyDown={ onKeyDown }\n+ /* eslint-disable-next-line jsx-a11y/no-autofocus */\n+ autoFocus={ autoFocus }\n/>\n- { debouncedValue !== '' && (\n+ { debouncedValue !== '' &&\n+ ! unifiedDashboardEnabled &&\n+ results.length === 0 && (\n<ComboboxPopover portal={ false }>\n<ComboboxList className=\"autocomplete__menu autocomplete__menu--inline\">\n- { ! unifiedDashboardEnabled && results.length === 0 ? (\n<ComboboxOption\nvalue={ noResultsMessage }\nclassName=\"autocomplete__option\"\n/>\n- ) : (\n- results.map( ( { ID, post_title: title } ) => (\n+ </ComboboxList>\n+ </ComboboxPopover>\n+ ) }\n+\n+ { debouncedValue !== '' && results.length > 0 && (\n+ <ComboboxPopover portal={ false }>\n+ <ComboboxList className=\"autocomplete__menu autocomplete__menu--inline\">\n+ { results.map( ( { ID, post_title: title } ) => (\n<ComboboxOption\nkey={ ID }\nvalue={ title }\nclassName=\"autocomplete__option\"\n/>\n- ) )\n- ) }\n+ ) ) }\n</ComboboxList>\n</ComboboxPopover>\n) }\n@@ -150,4 +159,8 @@ PostSearcherAutoSuggest.propTypes = {\nid: PropTypes.string,\nsetCanSubmit: PropTypes.func,\nsetMatch: PropTypes.func,\n+ setIsLoading: PropTypes.func,\n+ onKeyDown: PropTypes.func,\n+ autoFocus: PropTypes.bool,\n+ placeholder: PropTypes.string,\n};\n"
    },
    {
        "org_diff": "diff --git a/packages/react-devtools-shared/src/devtools/views/Components/Tree.js b/a/packages/react-devtools-shared/src/devtools/views/Components/Tree.js @@ -538,7 +538,7 @@ function updateIndentationSizeVar(\n }\n \n // $FlowFixMe[missing-local-annot]\n-function InnerElementType({children, style, ...rest}) {\n+function InnerElementType({children, style}) {\n   const {ownerID} = useContext(TreeStateContext);\n \n   const cachedChildWidths = useMemo<WeakMap<HTMLElement, number>>(\n@@ -586,11 +586,7 @@ function InnerElementType({children, style, ...rest}) {\n   // A lot of options were considered; this seemed the one that requires the least code.\n   // See https://github.com/bvaughn/react-devtools-experimental/issues/9\n   return (\n-    <div\n-      className={styles.InnerElementType}\n-      ref={divRef}\n-      style={style}\n-      {...rest}>\n+    <div className={styles.InnerElementType} ref={divRef} style={style}>\n       <SelectedTreeHighlight />\n       {children}\n     </div>",
        "org_msg": "Refactor InnerElementType component to remove unnecessary props.",
        "sim_msg": "refactor: remove unnecessary prop types",
        "sim_diff": "diff --git a/src/pages/checkout.js b/src/pages/checkout.js @@ -10,9 +10,8 @@ class Checkout extends Component {\nstatic propTypes = {\nclasses: PropTypes.object,\nshop: PropTypes.shape({\n- currency: PropTypes.shape({\n- code: PropTypes.string.isRequired\n- })\n+ name: PropTypes.string.isRequired,\n+ description: PropTypes.string\n})\n};\n"
    },
    {
        "org_diff": "diff --git a/packages/react-reconciler/src/ReactInternalTypes.js b/a/packages/react-reconciler/src/ReactInternalTypes.js @@ -157,12 +157,6 @@ export type Fiber = {\n   subtreeFlags: Flags,\n   deletions: Array<Fiber> | null,\n \n-  // The first and last fiber with side-effect within this subtree. This allows\n-  // us to reuse a slice of the linked list when we reuse the work done within\n-  // this fiber.\n-  firstEffect: Fiber | null,\n-  lastEffect: Fiber | null,\n-\n   lanes: Lanes,\n   childLanes: Lanes,\n ",
        "org_msg": "Remove firstEffect and lastEffect from Fiber type",
        "sim_msg": "Remove effect cleanup",
        "sim_diff": "diff --git a/packages/component-library/src/VectorTilesMap/VectorTilesMap.js b/packages/component-library/src/VectorTilesMap/VectorTilesMap.js @@ -24,6 +24,14 @@ const VectorTilesMap = props => {\n});\nReact.useEffect(() => {\n+ if (mapboxMap.getLayer(layerID)) {\n+ mapboxMap.removeLayer(layerID);\n+ }\n+\n+ if (mapboxMap.getSource(vectorTilesID)) {\n+ mapboxMap.removeSource(vectorTilesID);\n+ }\n+\nif (!mapboxMap.getSource(vectorTilesID)) {\nmapboxMap.addSource(vectorTilesID, {\ntype: \"vector\",\n@@ -43,15 +51,6 @@ const VectorTilesMap = props => {\nlayerPosition\n);\n}\n-\n- return () => {\n- if (mapboxMap.getLayer(layerID)) {\n- mapboxMap.removeLayer(layerID);\n- }\n- if (mapboxMap.getSource(vectorTilesID)) {\n- mapboxMap.removeSource(vectorTilesID);\n- }\n- };\n}, [\nlayerID,\nlayerType,\n"
    },
    {
        "org_diff": "diff --git a/packages/react/src/__tests__/ReactCreateRef-test.js b/a/packages/react/src/__tests__/ReactCreateRef-test.js @@ -10,14 +10,16 @@\n 'use strict';\n \n let React;\n-let ReactTestRenderer;\n+let ReactDOM;\n+let ReactDOMClient;\n \n describe('ReactCreateRef', () => {\n   beforeEach(() => {\n     jest.resetModules();\n \n     React = require('react');\n-    ReactTestRenderer = require('react-test-renderer');\n+    ReactDOM = require('react-dom');\n+    ReactDOMClient = require('react-dom/client');\n   });\n \n   it('should warn in dev if an invalid ref object is provided', () => {\n@@ -31,12 +33,15 @@ describe('ReactCreateRef', () => {\n       }\n     }\n \n+    const root = ReactDOMClient.createRoot(document.createElement('div'));\n     expect(() =>\n-      ReactTestRenderer.create(\n-        <Wrapper>\n-          <div ref={{}} />\n-        </Wrapper>,\n-      ),\n+      ReactDOM.flushSync(() => {\n+        root.render(\n+          <Wrapper>\n+            <div ref={{}} />\n+          </Wrapper>,\n+        );\n+      }),\n     ).toErrorDev(\n       'Unexpected ref object provided for div. ' +\n         'Use either a ref-setter function or React.createRef().\\n' +\n@@ -45,11 +50,13 @@ describe('ReactCreateRef', () => {\n     );\n \n     expect(() =>\n-      ReactTestRenderer.create(\n-        <Wrapper>\n-          <ExampleComponent ref={{}} />\n-        </Wrapper>,\n-      ),\n+      ReactDOM.flushSync(() => {\n+        root.render(\n+          <Wrapper>\n+            <ExampleComponent ref={{}} />\n+          </Wrapper>,\n+        );\n+      }),\n     ).toErrorDev(\n       'Unexpected ref object provided for ExampleComponent. ' +\n         'Use either a ref-setter function or React.createRef().\\n' +",
        "org_msg": "Refactor ReactCreateRef-test.js to use ReactDOM and ReactDOMClient instead of ReactTestRenderer.",
        "sim_msg": "test(html-to-react): refactor tests",
        "sim_diff": "diff --git a/test/html-to-react.test.js b/test/html-to-react.test.js @@ -2,7 +2,6 @@ const React = require('react');\nconst parse = require('..');\nconst { data, render } = require('./helpers/');\n-describe('HTML to React', () => {\ndescribe('exports', () => {\nit('has default ES Module', () => {\nexpect(parse.default).toBe(parse);\n@@ -17,28 +16,27 @@ describe('HTML to React', () => {\n});\nit('has attributesToProps', () => {\n- expect(parse.attributesToProps).toBe(\n- require('../lib/attributes-to-props')\n- );\n+ expect(parse.attributesToProps).toBe(require('../lib/attributes-to-props'));\n});\n});\ndescribe('parser', () => {\n- it.each([undefined, null, {}, [], 0, 1, () => {}, new Date()])(\n- 'throws an error if first argument is %p',\n- input => {\n+ it.each([undefined, null, {}, [], true, false, 0, 1, () => {}, new Date()])(\n+ 'throws error for value: %p',\n+ value => {\nexpect(() => {\n- parse(input);\n+ parse(value);\n}).toThrow(TypeError);\n}\n);\n- it('converts empty string to empty array', () => {\n+ it('converts \"\" to []', () => {\nexpect(parse('')).toEqual([]);\n});\nit('returns string if it cannot be parsed as HTML', () => {\n- expect(parse('foo')).toBe('foo');\n+ const string = 'foo';\n+ expect(parse(string)).toBe(string);\n});\nit('converts single HTML element to React', () => {\n@@ -60,9 +58,9 @@ describe('HTML to React', () => {\nconst html = data.html.multiple;\nconst reactElements = parse(html);\n- expect(\n- render(React.createElement(React.Fragment, {}, reactElements))\n- ).toBe(html);\n+ expect(render(React.createElement(React.Fragment, {}, reactElements))).toBe(\n+ html\n+ );\n});\nit('converts complex HTML to React', () => {\n@@ -220,4 +218,3 @@ describe('HTML to React', () => {\n});\n});\n});\n-});\n"
    },
    {
        "org_diff": "diff --git a/.github/workflows/commit_artifacts.yml b/a/.github/workflows/commit_artifacts.yml @@ -11,7 +11,7 @@ jobs:\n       www_branch_count: ${{ steps.check_branches.outputs.www_branch_count }}\n       fbsource_branch_count: ${{ steps.check_branches.outputs.fbsource_branch_count }}\n     steps:\n-      - uses: actions/checkout@v3\n+      - uses: actions/checkout@v4\n       - name: \"Check branches\"\n         id: check_branches\n         run: |\n@@ -179,7 +179,7 @@ jobs:\n     if: ${{ (github.ref == 'refs/heads/main' && needs.download_artifacts.outputs.www_branch_count == '0') || github.ref == 'refs/heads/meta-www' }}\n     runs-on: ubuntu-latest\n     steps:\n-      - uses: actions/checkout@v3\n+      - uses: actions/checkout@v4\n         with:\n           ref: builds/facebook-www\n       - name: Ensure clean directory\n@@ -215,7 +215,7 @@ jobs:\n     runs-on: ubuntu-latest\n     if: ${{ (github.ref == 'refs/heads/main' && needs.download_artifacts.outputs.fbsource_branch_count == '0') || github.ref == 'refs/heads/meta-fbsource' }}\n     steps:\n-      - uses: actions/checkout@v3\n+      - uses: actions/checkout@v4\n         with:\n           ref: main\n           repository: facebook/react-fbsource-import",
        "org_msg": "Update actions/checkout to v4 in commit_artifacts.yml workflow",
        "sim_msg": "Update deploy-to-artifacts.yml",
        "sim_diff": "diff --git a/.github/workflows/deploy-to-artifacts.yml b/.github/workflows/deploy-to-artifacts.yml @@ -180,7 +180,9 @@ jobs:\ntasks.push('test-server-docker.yml');\ntasks.push('test-server-lts.yml');\ntasks.push('test-server-stable.yml');\n- tasks.push('test-cdp.yml');\n+\n+ // Temporary disable\n+ // tasks.push('test-cdp.yml');\nawait Promise.all(tasks.map(task => dispatchWorkflow(task)));\n- uses: actions/github-script@v3\n"
    },
    {
        "org_diff": "diff --git a/packages/react-reconciler/src/ReactInternalTypes.js b/a/packages/react-reconciler/src/ReactInternalTypes.js @@ -157,9 +157,6 @@ export type Fiber = {\n   subtreeFlags: Flags,\n   deletions: Array<Fiber> | null,\n \n-  // Singly linked list fast path to the next fiber with side-effects.\n-  nextEffect: Fiber | null,\n-\n   // The first and last fiber with side-effect within this subtree. This allows\n   // us to reuse a slice of the linked list when we reuse the work done within\n   // this fiber.",
        "org_msg": "Remove nextEffect property from Fiber type",
        "sim_msg": "Removes type property (should be added by the actual plugin)",
        "sim_diff": "diff --git a/src/plugins/Plugin.js b/src/plugins/Plugin.js @@ -17,7 +17,6 @@ module.exports = class Plugin {\nconstructor (core, opts) {\nthis.core = core\nthis.opts = opts || {}\n- this.type = 'none'\n// clear everything inside the target selector\nthis.opts.replaceTargetContent === this.opts.replaceTargetContent || true\n"
    },
    {
        "org_diff": "diff --git a/packages/react-dom/src/__tests__/ReactDOMInput-test.js b/a/packages/react-dom/src/__tests__/ReactDOMInput-test.js @@ -1707,7 +1707,7 @@ describe('ReactDOMInput', () => {\n     assertInputTrackingIsCurrent(container);\n   });\n \n-  it('should control radio buttons if the tree updates during render', () => {\n+  it('should control radio buttons if the tree updates during render in legacy mode', async () => {\n     container.remove();\n     container = document.createElement('div');\n     document.body.appendChild(container);",
        "org_msg": "Update control of radio buttons during render in legacy mode",
        "sim_msg": "feat(radiogroup.radio): add a new theme for radiogroup.radio component and revisit the old button",
        "sim_diff": "diff --git a/packages/yoga/src/Theme/themes/components/radiogroup.js b/packages/yoga/src/Theme/themes/components/radiogroup.js @@ -6,27 +6,15 @@ const radiogroup = ({\nborders,\nfontSizes,\n}) => ({\n- radio: {\n+ button: {\nborder: {\nradius: radii.circle,\n- },\n- hover: {\n- backgroundColor: colors.gray[1],\n+ width: borders.small,\n+ color: colors.gray[3],\n},\nbackgroundColor: {\nenabled: 'transparent',\n},\n- checked: {\n- backgroundColor: {\n- enabled: colors.primary[3],\n- },\n- textColor: {\n- enabled: colors.white,\n- },\n- font: {\n- weight: fontWeights.bold,\n- },\n- },\npadding: {\nright: spacing.xlarge,\nleft: spacing.xlarge,\n@@ -35,14 +23,32 @@ const radiogroup = ({\nnormal: 40,\nsmall: 32,\n},\n+ },\n+ radio: {\n+ size: 20,\n+ backgroundColor: colors.gray[6],\n+ border: {\n+ radius: radii.circle,\n+ },\n+ },\nfont: {\nsize: fontSizes.small,\n},\n+ hover: {\n+ backgroundColor: colors.gray[2],\n+ },\n+ disabled: {\n+ backgroundColor: colors.gray[5],\n+ },\n+ checked: {\n+ backgroundColor: colors.primary[3],\n+ textColor: colors.white,\n+ font: {\n+ weight: fontWeights.bold,\n+ },\n+ hover: {\n+ backgroundColor: colors.primary[1],\n},\n- radii: radii.circle,\n- border: {\n- width: borders.small,\n- color: colors.gray[3],\n},\n});\n"
    },
    {
        "org_diff": "diff --git a/packages/react/src/__tests__/ReactJSXTransformIntegration-test.js b/a/packages/react/src/__tests__/ReactJSXTransformIntegration-test.js @@ -11,7 +11,6 @@\n \n let React;\n let ReactDOMClient;\n-let ReactTestUtils;\n let act;\n \n // TODO: Historically this module was used to confirm that the JSX transform\n@@ -30,7 +29,6 @@ describe('ReactJSXTransformIntegration', () => {\n \n     React = require('react');\n     ReactDOMClient = require('react-dom/client');\n-    ReactTestUtils = require('react-dom/test-utils');\n     act = require('internal-test-utils').act;\n \n     Component = class extends React.Component {\n@@ -213,22 +211,34 @@ describe('ReactJSXTransformIntegration', () => {\n     expect(instance.props.fruit).toBe('persimmon');\n   });\n \n-  it('should normalize props with default values', () => {\n+  it('should normalize props with default values', async () => {\n     class NormalizingComponent extends React.Component {\n       render() {\n         return <span>{this.props.prop}</span>;\n       }\n     }\n     NormalizingComponent.defaultProps = {prop: 'testKey'};\n \n-    const instance = ReactTestUtils.renderIntoDocument(\n-      <NormalizingComponent />,\n-    );\n+    let container = document.createElement('div');\n+    let root = ReactDOMClient.createRoot(container);\n+    let instance;\n+    await act(() => {\n+      root.render(\n+        <NormalizingComponent ref={current => (instance = current)} />,\n+      );\n+    });\n+\n     expect(instance.props.prop).toBe('testKey');\n \n-    const inst2 = ReactTestUtils.renderIntoDocument(\n-      <NormalizingComponent prop={null} />,\n-    );\n+    container = document.createElement('div');\n+    root = ReactDOMClient.createRoot(container);\n+    let inst2;\n+    await act(() => {\n+      root.render(\n+        <NormalizingComponent prop={null} ref={current => (inst2 = current)} />,\n+      );\n+    });\n+\n     expect(inst2.props.prop).toBe(null);\n   });\n });",
        "org_msg": "Refactor ReactJSXTransformIntegration-test.js to use async/await and ReactDOMClient instead of ReactTestUtils",
        "sim_msg": "test(html-to-react): refactor tests",
        "sim_diff": "diff --git a/test/html-to-react.test.js b/test/html-to-react.test.js @@ -2,7 +2,6 @@ const React = require('react');\nconst parse = require('..');\nconst { data, render } = require('./helpers/');\n-describe('HTML to React', () => {\ndescribe('exports', () => {\nit('has default ES Module', () => {\nexpect(parse.default).toBe(parse);\n@@ -17,28 +16,27 @@ describe('HTML to React', () => {\n});\nit('has attributesToProps', () => {\n- expect(parse.attributesToProps).toBe(\n- require('../lib/attributes-to-props')\n- );\n+ expect(parse.attributesToProps).toBe(require('../lib/attributes-to-props'));\n});\n});\ndescribe('parser', () => {\n- it.each([undefined, null, {}, [], 0, 1, () => {}, new Date()])(\n- 'throws an error if first argument is %p',\n- input => {\n+ it.each([undefined, null, {}, [], true, false, 0, 1, () => {}, new Date()])(\n+ 'throws error for value: %p',\n+ value => {\nexpect(() => {\n- parse(input);\n+ parse(value);\n}).toThrow(TypeError);\n}\n);\n- it('converts empty string to empty array', () => {\n+ it('converts \"\" to []', () => {\nexpect(parse('')).toEqual([]);\n});\nit('returns string if it cannot be parsed as HTML', () => {\n- expect(parse('foo')).toBe('foo');\n+ const string = 'foo';\n+ expect(parse(string)).toBe(string);\n});\nit('converts single HTML element to React', () => {\n@@ -60,9 +58,9 @@ describe('HTML to React', () => {\nconst html = data.html.multiple;\nconst reactElements = parse(html);\n- expect(\n- render(React.createElement(React.Fragment, {}, reactElements))\n- ).toBe(html);\n+ expect(render(React.createElement(React.Fragment, {}, reactElements))).toBe(\n+ html\n+ );\n});\nit('converts complex HTML to React', () => {\n@@ -220,4 +218,3 @@ describe('HTML to React', () => {\n});\n});\n});\n-});\n"
    },
    {
        "org_diff": "diff --git a/scripts/jest/setupTests.js b/a/scripts/jest/setupTests.js @@ -241,7 +241,7 @@ if (process.env.REACT_CLASS_EQUIVALENCE_TEST) {\n     global.Error = ErrorProxy;\n   }\n \n-  const expectTestToFail = async (callback, errorMsg) => {\n+  const expectTestToFail = async (callback, error) => {\n     if (callback.length > 0) {\n       throw Error(\n         'Gated test helpers do not support the `done` callback. Return a ' +\n@@ -261,12 +261,12 @@ if (process.env.REACT_CLASS_EQUIVALENCE_TEST) {\n       // `afterEach` like we normally do. `afterEach` is too late because if it\n       // throws, we won't have captured it.\n       flushAllUnexpectedConsoleCalls();\n-    } catch (error) {\n+    } catch (testError) {\n       // Failed as expected\n       resetAllUnexpectedConsoleCalls();\n       return;\n     }\n-    throw Error(errorMsg);\n+    throw error;\n   };\n \n   const gatedErrorMessage = 'Gated test was expected to fail, but it passed.';\n@@ -284,8 +284,10 @@ if (process.env.REACT_CLASS_EQUIVALENCE_TEST) {\n     if (shouldPass) {\n       test(testName, callback);\n     } else {\n+      const error = new Error(gatedErrorMessage);\n+      Error.captureStackTrace(error, global._test_gate);\n       test(`[GATED, SHOULD FAIL] ${testName}`, () =>\n-        expectTestToFail(callback, gatedErrorMessage));\n+        expectTestToFail(callback, error));\n     }\n   };\n   global._test_gate_focus = (gateFn, testName, callback) => {\n@@ -302,8 +304,10 @@ if (process.env.REACT_CLASS_EQUIVALENCE_TEST) {\n     if (shouldPass) {\n       test.only(testName, callback);\n     } else {\n+      const error = new Error(gatedErrorMessage);\n+      Error.captureStackTrace(error, global._test_gate_focus);\n       test.only(`[GATED, SHOULD FAIL] ${testName}`, () =>\n-        expectTestToFail(callback, gatedErrorMessage));\n+        expectTestToFail(callback, error));\n     }\n   };\n ",
        "org_msg": "Refactor error handling in test helper function",
        "sim_msg": "refactor error handler",
        "sim_diff": "diff --git a/bin/util.js b/bin/util.js @@ -105,7 +105,7 @@ exports.Error = function(meta, message) {\n};\nexports.errorHandler = function(useThrow, exception, value) {\n- const hasErrors = exception.hasException;\n+ const hasErrors = exception && exception.hasException;\nif (hasErrors && useThrow) {\nconst err = Error(exception);\nerr.code = 'OPEN_API_EXCEPTION';\n"
    },
    {
        "org_diff": "diff --git a/scripts/flags/flags.js b/a/scripts/flags/flags.js @@ -318,11 +318,15 @@ for (const flag of allFlagsUniqueFlags) {\n let sorted = table;\n if (isDiff || argv.sort) {\n   const sortChannel = argToHeader(isDiff ? argv.diff[0] : argv.sort);\n-  sorted = Object.fromEntries(\n-    Object.entries(table).sort(([, rowA], [, rowB]) =>\n-      rowB[sortChannel].toString().localeCompare(rowA[sortChannel])\n-    )\n-  );\n+  const sortBy =\n+    sortChannel === 'flag'\n+      ? ([flagA], [flagB]) => {\n+          return flagA.localeCompare(flagB);\n+        }\n+      : ([, rowA], [, rowB]) => {\n+          return rowB[sortChannel].toString().localeCompare(rowA[sortChannel]);\n+        };\n+  sorted = Object.fromEntries(Object.entries(table).sort(sortBy));\n }\n \n if (argv.csv) {",
        "org_msg": "Refactored sorting logic in flags.js for better readability and maintainability.",
        "sim_msg": "Made sort function more readable",
        "sim_diff": "diff --git a/components/bases-locales/charte/search.js b/components/bases-locales/charte/search.js @@ -28,17 +28,19 @@ function PartnersSearchbar() {\n})\n}\n+ const sortedPartners = partners.sort((a, b) => {\n+ return a.isPerimeterFrance - b.isPerimeterFrance\n+ })\n+\nuseEffect(() => {\nif (commune) {\n- setFilteredPartners(partners.filter(({codeDepartement, isPerimeterFrance}) => (\n+ setFilteredPartners(sortedPartners.filter(({codeDepartement, isPerimeterFrance}) => (\ncodeDepartement.includes(commune.codeDepartement) || isPerimeterFrance)\n- ).filter(({services}) => intersection(selectedTags, services).length === selectedTags.length).sort((a, b) => {\n- return a.isPerimeterFrance - b.isPerimeterFrance\n- }))\n+ ).filter(({services}) => intersection(selectedTags, services).length === selectedTags.length))\n} else {\nsetFilteredPartners([])\n}\n- }, [selectedTags, commune])\n+ }, [selectedTags, sortedPartners, commune])\nuseEffect(() => {\nsetInput(commune ? commune.nom : '')\n"
    },
    {
        "org_diff": "diff --git a/packages/react-dom/src/__tests__/ReactDOMSingletonComponents-test.js b/a/packages/react-dom/src/__tests__/ReactDOMSingletonComponents-test.js @@ -996,17 +996,17 @@ describe('ReactDOM HostSingleton', () => {\n   });\n \n   // https://github.com/facebook/react/issues/26128\n-  it('(#26128) does not throw when rendering at body', async () => {\n+  it('(#26128) does not throw when rendering at body in legacy mode', async () => {\n     ReactDOM.render(<div />, document.body);\n   });\n \n   // https://github.com/facebook/react/issues/26128\n-  it('(#26128) does not throw when rendering at <html>', async () => {\n+  it('(#26128) does not throw when rendering at <html> in legacy mode', async () => {\n     ReactDOM.render(<body />, document.documentElement);\n   });\n \n   // https://github.com/facebook/react/issues/26128\n-  it('(#26128) does not throw when rendering at document', async () => {\n+  it('(#26128) does not throw when rendering at document in legacy mode', async () => {\n     ReactDOM.render(<html />, document);\n   });\n });",
        "org_msg": "Fix rendering at body, <html>, and document in legacy mode (#26128)",
        "sim_msg": "fix text rendering in FF and Safari",
        "sim_diff": "diff --git a/modules/layers/src/text-layer/font-atlas.js b/modules/layers/src/text-layer/font-atlas.js @@ -8,15 +8,18 @@ const MAX_CANVAS_WIDTH = 1024;\nconst DEFAULT_FONT_SIZE = 64;\nconst DEFAULT_PADDING = 4;\n+const BASELINE_SCALE = 0.9;\n+const HEIGHT_SCALE = 1.2;\n+\nexport const DEFAULT_CHAR_SET = [];\nfor (let i = 32; i < 128; i++) {\nDEFAULT_CHAR_SET.push(String.fromCharCode(i));\n}\n-function setTextStyle(ctx, fontFamily, fontSize, useAdvancedMetrics) {\n+function setTextStyle(ctx, fontFamily, fontSize) {\nctx.font = `${fontSize}px ${fontFamily}`;\nctx.fillStyle = '#000';\n- ctx.textBaseline = useAdvancedMetrics ? 'top' : 'hanging';\n+ ctx.textBaseline = 'baseline';\nctx.textAlign = 'left';\n}\n@@ -31,18 +34,14 @@ export function makeFontAtlas(\n) {\nconst canvas = document.createElement('canvas');\nconst ctx = canvas.getContext('2d');\n- setTextStyle(ctx, fontFamily, fontSize, true);\n// measure texts\nlet row = 0;\nlet x = 0;\n- // Get a sample of text metrics\n- // Advanced text metrics are only implemented in Chrome:\n+ // TODO - use Advanced text metrics when they are adopted:\n// https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics\n- const {fontBoundingBoxDescent} = ctx.measureText(characterSet[0]);\n- // Fallback to height=fontSize\n- const fontHeight = fontBoundingBoxDescent || fontSize;\n- const useAdvancedMetrics = Boolean(fontBoundingBoxDescent);\n+ const fontHeight = fontSize * HEIGHT_SCALE;\n+ setTextStyle(ctx, fontFamily, fontSize);\nconst mapping = {};\nArray.from(characterSet).forEach(char => {\n@@ -65,13 +64,13 @@ export function makeFontAtlas(\ncanvas.width = MAX_CANVAS_WIDTH;\ncanvas.height = (row + 1) * (fontHeight + padding);\n- setTextStyle(ctx, fontFamily, fontSize, useAdvancedMetrics);\n+ setTextStyle(ctx, fontFamily, fontSize);\nfor (const char in mapping) {\n- ctx.fillText(char, mapping[char].x, mapping[char].y);\n+ ctx.fillText(char, mapping[char].x, mapping[char].y + fontSize * BASELINE_SCALE);\n}\nreturn {\n- scale: fontHeight / fontSize,\n+ scale: HEIGHT_SCALE,\nmapping,\ntexture: new Texture2D(gl, {\npixels: canvas,\n"
    },
    {
        "org_diff": "diff --git a/fixtures/flight/server/global.js b/a/fixtures/flight/server/global.js @@ -37,6 +37,7 @@ const React = require('react');\n \n const {renderToPipeableStream} = require('react-dom/server');\n const {createFromNodeStream} = require('react-server-dom-webpack/client');\n+const {PassThrough} = require('stream');\n \n const app = express();\n \n@@ -146,34 +147,33 @@ app.all('/', async function (req, res, next) {\n       // so we start by consuming the RSC payload. This needs a module\n       // map that reverse engineers the client-side path to the SSR path.\n \n-      // This is a bad hack to set the form state after SSR has started. It works\n-      // because we block the root component until we have the form state and\n-      // any form that reads it necessarily will come later. It also only works\n-      // because the formstate type is an object which may change in the future\n-      const lazyFormState = [];\n-\n-      let cachedResult = null;\n-      async function getRootAndFormState() {\n-        const {root, formState} = await createFromNodeStream(\n-          rscResponse,\n-          ssrManifest\n-        );\n-        // We shouldn't be assuming formState is an object type but at the moment\n-        // we have no way of setting the form state from within the render\n-        Object.assign(lazyFormState, formState);\n-        return root;\n-      }\n+      // We need to get the formState before we start rendering but we also\n+      // need to run the Flight client inside the render to get all the preloads.\n+      // The API is ambivalent about what's the right one so we need two for now.\n+\n+      // Tee the response into two streams so that we can do both.\n+      const rscResponse1 = new PassThrough();\n+      const rscResponse2 = new PassThrough();\n+\n+      rscResponse.pipe(rscResponse1);\n+      rscResponse.pipe(rscResponse2);\n+\n+      const {formState} = await createFromNodeStream(rscResponse1, ssrManifest);\n+      rscResponse1.end();\n+\n+      let cachedResult;\n       let Root = () => {\n         if (!cachedResult) {\n-          cachedResult = getRootAndFormState();\n+          // Read this stream inside the render.\n+          cachedResult = createFromNodeStream(rscResponse2, ssrManifest);\n         }\n-        return React.use(cachedResult);\n+        return React.use(cachedResult).root;\n       };\n       // Render it into HTML by resolving the client components\n       res.set('Content-type', 'text/html');\n       const {pipe} = renderToPipeableStream(React.createElement(Root), {\n         bootstrapScripts: mainJSChunks,\n-        formState: lazyFormState,\n+        formState: formState,\n       });\n       pipe(res);\n     } catch (e) {",
        "org_msg": "Refactor code to handle formState and Flight client rendering in SSR process",
        "sim_msg": "fixed issue with form redrawing when passing form object as props",
        "sim_diff": "diff --git a/src/components/Form.jsx b/src/components/Form.jsx @@ -14,6 +14,7 @@ const FormioForm = Formio.Form;\nlet createPromise;\nlet element;\nconst [formio, setFormio] = useState(undefined);\n+ const [jsonForm, setJsonForm] = useState(undefined);\nuseEffect(() => () => formio ? formio.destroy(true) : null, [formio]);\n@@ -66,7 +67,8 @@ const FormioForm = Formio.Form;\nuseEffect(() => {\nconst {form, url} = props;\n- if (form) {\n+ if (form && !_isEqual(form, jsonForm)) {\n+ setJsonForm(form);\ncreateWebformInstance(form).then(() => {\nif (formio) {\nformio.form = form;\n@@ -78,7 +80,7 @@ const FormioForm = Formio.Form;\n});\ninitializeFormio();\n}\n- }, [props.form]);\n+ }, [props.form, jsonForm]);\nuseEffect(() => {\nconst {options = {}} = props;\n"
    },
    {
        "org_diff": "diff --git a/scripts/rollup/build.js b/a/scripts/rollup/build.js @@ -575,6 +575,9 @@ function getPlugins(\n           sourcemapAfterClosure.sources = [preMinifiedFilename];\n           sourcemapAfterClosure.file = filename;\n \n+          // All our code is considered \"third-party\" and should be ignored by default.\n+          sourcemapAfterClosure.ignoreList = [0];\n+\n           // We'll write the pre-minified source to disk as a separate file.\n           // Because it sits on disk, there's no need to have it in the `sourcesContent` array.\n           // That also makes the file easier to read, and available for use by scripts.",
        "org_msg": "Add sourcemap ignore list for third-party code.",
        "sim_msg": "Removing imported sources from source list as they're unnecessary.",
        "sim_diff": "diff --git a/tests/test_IssuanceController.py b/tests/test_IssuanceController.py @@ -31,10 +31,6 @@ class TestIssuanceController(HavvenTestCase):\n@classmethod\ndef deployContracts(cls):\nsources = [\n- \"contracts/Owned.sol\",\n- \"contracts/SelfDestructible.sol\",\n- \"contracts/Pausable.sol\",\n- \"contracts/SafeDecimalMath.sol\",\n\"contracts/Havven.sol\",\n\"contracts/Nomin.sol\",\n\"contracts/IssuanceController.sol\",\n"
    },
    {
        "org_diff": "diff --git a/packages/react-devtools-shared/src/devtools/views/hooks.js b/a/packages/react-devtools-shared/src/devtools/views/hooks.js @@ -219,15 +219,18 @@ export function useModalDismissSignal(\n       return () => {};\n     }\n \n-    const handleDocumentKeyDown = (event: any) => {\n+    const handleRootNodeKeyDown = (event: KeyboardEvent) => {\n       if (event.key === 'Escape') {\n         dismissCallback();\n       }\n     };\n \n-    const handleDocumentClick = (event: any) => {\n+    const handleRootNodeClick: MouseEventHandler = event => {\n       if (\n         modalRef.current !== null &&\n+        /* $FlowExpectedError[incompatible-call] Instead of dealing with possibly multiple realms\n+         and multiple Node references to comply with Flow (e.g. checking with `event.target instanceof Node`)\n+         just delegate it to contains call */\n         !modalRef.current.contains(event.target)\n       ) {\n         event.stopPropagation();\n@@ -237,7 +240,7 @@ export function useModalDismissSignal(\n       }\n     };\n \n-    let ownerDocument = null;\n+    let modalRootNode = null;\n \n     // Delay until after the current call stack is empty,\n     // in case this effect is being run while an event is currently bubbling.\n@@ -248,12 +251,12 @@ export function useModalDismissSignal(\n       // It's important to listen to the ownerDocument to support the browser extension.\n       // Here we use portals to render individual tabs (e.g. Profiler),\n       // and the root document might belong to a different window.\n-      const div = modalRef.current;\n-      if (div != null) {\n-        ownerDocument = div.ownerDocument;\n-        ownerDocument.addEventListener('keydown', handleDocumentKeyDown);\n+      const modalDOMElement = modalRef.current;\n+      if (modalDOMElement != null) {\n+        modalRootNode = modalDOMElement.getRootNode();\n+        modalRootNode.addEventListener('keydown', handleRootNodeKeyDown);\n         if (dismissOnClickOutside) {\n-          ownerDocument.addEventListener('click', handleDocumentClick, true);\n+          modalRootNode.addEventListener('click', handleRootNodeClick, true);\n         }\n       }\n     }, 0);\n@@ -263,9 +266,9 @@ export function useModalDismissSignal(\n         clearTimeout(timeoutID);\n       }\n \n-      if (ownerDocument !== null) {\n-        ownerDocument.removeEventListener('keydown', handleDocumentKeyDown);\n-        ownerDocument.removeEventListener('click', handleDocumentClick, true);\n+      if (modalRootNode !== null) {\n+        modalRootNode.removeEventListener('keydown', handleRootNodeKeyDown);\n+        modalRootNode.removeEventListener('click', handleRootNodeClick, true);\n       }\n     };\n   }, [modalRef, dismissCallback, dismissOnClickOutside]);",
        "org_msg": "Refactor useModalDismissSignal to handle root node events instead of document events.",
        "sim_msg": "Refactor showModal to modal and define methods to change its state",
        "sim_diff": "diff --git a/src/components/stepFour/index.js b/src/components/stepFour/index.js @@ -41,7 +41,7 @@ export class stepFour extends React.Component {\nsuper(props)\nthis.state = {\ncontractDownloaded: false,\n- showModal: false\n+ modal: false\n}\n}\n@@ -53,7 +53,7 @@ export class stepFour extends React.Component {\ncomponentDidMount () {\nscrollToBottom()\ncopy('copy')\n- this.setState({ showModal: true })\n+ this.showModal()\nif (process.env.NODE_ENV !== 'development') this.deployCrowdsale()\n}\n@@ -100,8 +100,12 @@ export class stepFour extends React.Component {\nconsole.error([failedAt, err])\n}\n- hideModal() {\n- this.setState({ showModal: false })\n+ hideModal = () => {\n+ this.setState({ modal: false })\n+ }\n+\n+ showModal = () => {\n+ this.setState({ modal: true })\n}\nhandleContentByParent(content, index = 0) {\n@@ -448,7 +452,7 @@ export class stepFour extends React.Component {\n</div>\n<ModalContainer\ntitle={'Tx Status'}\n- showModal={this.state.showModal}\n+ showModal={this.state.modal}\n>\n<TxProgressStatus txMap={deploymentStore.txMap} deployCrowdsale={this.deployCrowdsale} />\n</ModalContainer>\n"
    },
    {
        "org_diff": "diff --git a/packages/react/package.json b/a/packages/react/package.json @@ -15,6 +15,7 @@\n     \"cjs/\",\n     \"umd/\",\n     \"jsx-runtime.js\",\n+    \"jsx-runtime.react-server.js\",\n     \"jsx-dev-runtime.js\",\n     \"react.react-server.js\"\n   ],",
        "org_msg": "Add jsx-runtime.react-server.js to package.json",
        "sim_msg": "fix paths in package.json for server and react client",
        "sim_diff": "diff --git a/fixed-price-subscriptions/package.json b/fixed-price-subscriptions/package.json \"description\": \"A Stripe sample implementing cards for subscriptions with fixed prices.\",\n\"main\": \"server.js\",\n\"scripts\": {\n- \"server\": \"node server.js\",\n- \"reactClient\": \"cd ../../client/react && npm start\",\n+ \"server\": \"node server/node/server.js\",\n+ \"reactClient\": \"cd client/react && npm start\",\n\"startReact\": \"concurrently \\\"yarn reactClient\\\" \\\"yarn server\\\"\",\n\"startVanillajs\": \"yarn server\",\n\"start\": \"yarn server\",\n"
    },
    {
        "org_diff": "diff --git a/packages/react-server/src/ReactFlightServer.js b/a/packages/react-server/src/ReactFlightServer.js @@ -1192,12 +1192,16 @@ function renderModelDestructive(\n             // but that is able to reuse the same task if we're already in one but then that\n             // will be a lazy future value rather than guaranteed to exist but maybe that's good.\n             const newId = outlineModel(request, (value: any));\n-            return serializeLazyID(newId);\n+            return serializeByValueID(newId);\n           } else {\n             // We've already emitted this as an outlined object, so we can refer to that by its\n-            // existing ID. We use a lazy reference since, unlike plain objects, elements might\n-            // suspend so it might not have emitted yet even if we have the ID for it.\n-            return serializeLazyID(existingId);\n+            // existing ID. TODO: We should use a lazy reference since, unlike plain objects,\n+            // elements might suspend so it might not have emitted yet even if we have the ID for\n+            // it. However, this creates an extra wrapper when it's not needed. We should really\n+            // detect whether this already was emitted and synchronously available. In that\n+            // case we can refer to it synchronously and only make it lazy otherwise.\n+            // We currently don't have a data structure that lets us see that though.\n+            return serializeByValueID(existingId);\n           }\n         } else {\n           // This is the first time we've seen this object. We may never see it again",
        "org_msg": "Refactor serialization to use serializeByValueID for outlined objects and add TODO for optimizing lazy reference.",
        "sim_msg": "add serialize defaults and refactoring",
        "sim_diff": "diff --git a/bin/openapi.js b/bin/openapi.js @@ -40,6 +40,9 @@ const defaults = {\ntemplates: true,\nthrow: true,\nvariables: true\n+ },\n+ serialize: {\n+ throw: true\n}\n};\n@@ -402,8 +405,7 @@ OpenApiEnforcer.prototype.serialize = function(schema, value, options) {\nconst version = store.get(this).version;\n// normalize options\n- if (!options) options = {};\n- if (!options.hasOwnProperty('throw')) options.throw = true;\n+ options = Object.assign({}, defaults.serialize, OpenApiEnforcer.defaults && OpenApiEnforcer.defaults.serialize, options);\n// run version specific deserialization\nconst result = version.serial.serialize(errors, '', schema, value);\n@@ -526,7 +528,7 @@ function responsePopulate(context, responses, data, options) {\noptions: config.options\n};\nif (config.hasOwnProperty('body')) options.value = config.body;\n- result.body = context.populate(options);\n+ result.body = context.populate(data.schema, config.params, config.options);\n}\n// populate headers\n@@ -544,13 +546,8 @@ function responsePopulate(context, responses, data, options) {\nObject.keys(headersSchemas).forEach(header => {\nconst schema = headersSchemas[header].schema;\nif (schema) {\n- const options = {\n- schema: schema,\n- params: config.params,\n- options: config.options\n- };\nif (headers.hasOwnProperty(header)) options.value = headers[header];\n- const value = context.populate(options);\n+ const value = context.populate(schema, config.params, config.options);\nif (value !== undefined) headers[header] = value;\n}\n});\n@@ -571,7 +568,7 @@ function responseSerialize(context, responses, data, config) {\n}\nif (config.hasOwnProperty('body')) {\n- result.body = context.serialize(data.schema, config.body);\n+ result.body = context.serialize(data.schema, config.body, config.options);\n}\nif (config.headers && responses && responses[data.code]) {\n@@ -582,7 +579,7 @@ function responseSerialize(context, responses, data, config) {\nconst schema = schemas && schemas[name];\nif (schema) {\nlet value = schema && schema.schema\n- ? serialize('', schema.schema, headers[name])\n+ ? context.serialize(schema.schema, headers[name], config.options)\n: String(headers[name]);\nvalue = version.serializeResponseHeader(schema, value);\nresult.headers[name] = value;\n"
    },
    {
        "org_diff": "diff --git a/packages/shared/ReactFeatureFlags.js b/a/packages/shared/ReactFeatureFlags.js @@ -15,8 +15,6 @@\n \n export const enableComponentStackLocations = true;\n \n-export const enableServerComponentKeys = __EXPERIMENTAL__;\n-\n // -----------------------------------------------------------------------------\n // Killswitch\n //\n@@ -169,6 +167,9 @@ export const enableFilterEmptyStringAttributesDOM = __NEXT_MAJOR__;\n // Disabled caching behavior of `react/cache` in client runtimes.\n export const disableClientCache = false;\n \n+// Changes Server Components Reconciliation when they have keys\n+export const enableServerComponentKeys = __NEXT_MAJOR__;\n+\n // -----------------------------------------------------------------------------\n // Chopping Block\n //",
        "org_msg": "\"Enable Server Component Keys and Disable Client Cache\"",
        "sim_msg": "Turn off strict host key checking as this will always be the first time hitting this host",
        "sim_diff": "diff --git a/scripts/deploy.sh b/scripts/deploy.sh @@ -40,9 +40,9 @@ git push gh-origin HEAD:${GITHUB_REF} --follow-tags\nnpm run build\n# upload alloy.js and alloy.min.js to CDN\n-printf \"$CDN_PRIVATE_KEY\" > id_rsa\n+echo \"$CDN_PRIVATE_KEY\" > id_rsa\n./scripts/sftpCommands.sh ${VERSION} | \\\n- sftp -i ./id_rsa -oHostKeyAlgorithms=+ssh-dss -b - sshacs@dxresources.ssh.upload.akamai.com:/prod/alloy\n+ sftp -i ./id_rsa -oHostKeyAlgorithms=+ssh-dss -oStrictHostKeyChecking=no -b - sshacs@dxresources.ssh.upload.akamai.com:/prod/alloy\n# verify the files are available on the cdn\nALLOY_MIN_JS=\"https://cdn1.adoberesources.net/alloy/${VERSION}/alloy.min.js\"\n"
    },
    {
        "org_diff": "diff --git a/packages/react/src/ReactCacheClient.js b/a/packages/react/src/ReactCacheClient.js @@ -10,25 +10,25 @@\n import {disableClientCache} from 'shared/ReactFeatureFlags';\n import {cache as cacheImpl} from './ReactCacheImpl';\n \n-export function cache<A: Iterable<mixed>, T>(fn: (...A) => T): (...A) => T {\n-  if (disableClientCache) {\n-    // On the client (i.e. not a Server Components environment) `cache` has\n-    // no caching behavior. We just return the function as-is.\n-    //\n-    // We intend to implement client caching in a future major release. In the\n-    // meantime, it's only exposed as an API so that Shared Components can use\n-    // per-request caching on the server without breaking on the client. But it\n-    // does mean they need to be aware of the behavioral difference.\n-    //\n-    // The rest of the behavior is the same as the server implementation — it\n-    // returns a new reference, extra properties like `displayName` are not\n-    // preserved, the length of the new function is 0, etc. That way apps can't\n-    // accidentally depend on those details.\n-    return function () {\n-      // $FlowFixMe[incompatible-call]: We don't want to use rest arguments since we transpile the code.\n-      return fn.apply(null, arguments);\n-    };\n-  } else {\n-    return cacheImpl(fn);\n-  }\n+export function noopCache<A: Iterable<mixed>, T>(fn: (...A) => T): (...A) => T {\n+  // On the client (i.e. not a Server Components environment) `cache` has\n+  // no caching behavior. We just return the function as-is.\n+  //\n+  // We intend to implement client caching in a future major release. In the\n+  // meantime, it's only exposed as an API so that Shared Components can use\n+  // per-request caching on the server without breaking on the client. But it\n+  // does mean they need to be aware of the behavioral difference.\n+  //\n+  // The rest of the behavior is the same as the server implementation — it\n+  // returns a new reference, extra properties like `displayName` are not\n+  // preserved, the length of the new function is 0, etc. That way apps can't\n+  // accidentally depend on those details.\n+  return function () {\n+    // $FlowFixMe[incompatible-call]: We don't want to use rest arguments since we transpile the code.\n+    return fn.apply(null, arguments);\n+  };\n }\n+\n+export const cache: typeof noopCache = disableClientCache\n+  ? noopCache\n+  : cacheImpl;",
        "org_msg": "Refactor cache function to use noopCache on the client side. Updated the cache function to return the function as-is without caching behavior on the client side, to be consistent with future major release plans. Added a conditional assignment for cache function based on disableClientCache.",
        "sim_msg": "refactor: cache options",
        "sim_diff": "diff --git a/lib/util/data-server.js b/lib/util/data-server.js @@ -15,12 +15,12 @@ if (!(config.frameCacheSize > 0) || config.frameCacheSize < 600) {\nvar TIMEOUT = 36000;\nvar BINDING_TIMEOUT = 6000;\nvar CLEAR_INTERVAL = 5000;\n-var CACHE_TIME = 1000 * 60 * 3;\n-var CACHE_TIMEOUT = 1000 * 60 * 6;\n+var CACHE_TIME = 1000 * 60;\n+var CACHE_TIMEOUT = 1000 * 60 * 3;\nvar MAX_LENGTH = config.reqCacheSize;\nvar OVERFLOW_LENGTH = MAX_LENGTH * 3;\nvar MAX_CACHE_SIZE = MAX_LENGTH * 2;\n-var PRESERVE_LEN = 120;\n+var PRESERVE_LEN = 360;\nvar MAX_FRAMES_LENGTH = config.frameCacheSize;\nvar COUNT = 100;\nvar count = 0;\n"
    }
]