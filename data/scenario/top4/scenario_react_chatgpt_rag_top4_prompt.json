[
    {
        "org_diff": "diff --git a/packages/react-devtools-shared/src/utils.js b/a/packages/react-devtools-shared/src/utils.js @@ -23,9 +23,23 @@ import {\n   Suspense,\n } from 'react-is';\n import {\n+  REACT_CONSUMER_TYPE,\n+  REACT_CONTEXT_TYPE,\n+  REACT_FORWARD_REF_TYPE,\n+  REACT_FRAGMENT_TYPE,\n+  REACT_LAZY_TYPE,\n+  REACT_LEGACY_ELEMENT_TYPE,\n+  REACT_MEMO_TYPE,\n+  REACT_PORTAL_TYPE,\n+  REACT_PROFILER_TYPE,\n+  REACT_PROVIDER_TYPE,\n+  REACT_STRICT_MODE_TYPE,\n+  REACT_SUSPENSE_LIST_TYPE,\n   REACT_SUSPENSE_LIST_TYPE as SuspenseList,\n+  REACT_SUSPENSE_TYPE,\n   REACT_TRACING_MARKER_TYPE as TracingMarker,\n } from 'shared/ReactSymbols';\n+import {enableRenderableContext} from 'shared/ReactFeatureFlags';\n import {\n   TREE_OPERATION_ADD,\n   TREE_OPERATION_REMOVE,\n@@ -695,10 +709,57 @@ export function getDataType(data: Object): DataType {\n   }\n }\n \n+// Fork of packages/react-is/src/ReactIs.js:30, but with legacy element type\n+// Which has been changed in https://github.com/facebook/react/pull/28813\n+function typeOfWithLegacyElementSymbol(object: any): mixed {\n+  if (typeof object === 'object' && object !== null) {\n+    const $$typeof = object.$$typeof;\n+    switch ($$typeof) {\n+      case REACT_LEGACY_ELEMENT_TYPE:\n+        const type = object.type;\n+\n+        switch (type) {\n+          case REACT_FRAGMENT_TYPE:\n+          case REACT_PROFILER_TYPE:\n+          case REACT_STRICT_MODE_TYPE:\n+          case REACT_SUSPENSE_TYPE:\n+          case REACT_SUSPENSE_LIST_TYPE:\n+            return type;\n+          default:\n+            const $$typeofType = type && type.$$typeof;\n+\n+            switch ($$typeofType) {\n+              case REACT_CONTEXT_TYPE:\n+              case REACT_FORWARD_REF_TYPE:\n+              case REACT_LAZY_TYPE:\n+              case REACT_MEMO_TYPE:\n+                return $$typeofType;\n+              case REACT_CONSUMER_TYPE:\n+                if (enableRenderableContext) {\n+                  return $$typeofType;\n+                }\n+              // Fall through\n+              case REACT_PROVIDER_TYPE:\n+                if (!enableRenderableContext) {\n+                  return $$typeofType;\n+                }\n+              // Fall through\n+              default:\n+                return $$typeof;\n+            }\n+        }\n+      case REACT_PORTAL_TYPE:\n+        return $$typeof;\n+    }\n+  }\n+\n+  return undefined;\n+}\n+\n export function getDisplayNameForReactElement(\n   element: React$Element<any>,\n ): string | null {\n-  const elementType = typeOf(element);\n+  const elementType = typeOf(element) || typeOfWithLegacyElementSymbol(element);\n   switch (elementType) {\n     case ContextConsumer:\n       return 'ContextConsumer';",
        "sim_diff_0": "diff --git a/docs/src/pages/customization/default-theme/DefaultTheme.js b/docs/src/pages/customization/default-theme/DefaultTheme.js @@ -14,10 +14,15 @@ import Switch from '@material-ui/core/Switch';\n/**\n* @param {unknown} value\n*/\n-function useType(value) {\n+function getType(value) {\nif (Array.isArray(value)) {\nreturn 'array';\n}\n+\n+ if (/^(#|rgb|rgba|hsl|hsla)/.test(value)) {\n+ return 'color';\n+ }\n+\nif (value === null) {\nreturn 'null';\n}\n@@ -28,9 +33,9 @@ function useType(value) {\n/**\n*\n* @param {unknown} value\n- * @param {ReturnType<typeof useType>} type\n+ * @param {ReturnType<typeof getType>} type\n*/\n-function useLabel(value, type) {\n+function getLabel(value, type) {\nswitch (type) {\ncase 'array':\nreturn `Array(${value.length})`;\n@@ -54,8 +59,10 @@ function useLabel(value, type) {\n}\n}\n-function useTokenType(type) {\n+function getTokenType(type) {\nswitch (type) {\n+ case 'color':\n+ return 'string';\ncase 'object':\ncase 'array':\nreturn 'comment';\n@@ -64,18 +71,47 @@ function useTokenType(type) {\n}\n}\n-function ObjectEntryLabel({ objectKey, objectValue }) {\n- const type = useType(objectValue);\n- const label = useLabel(objectValue, type);\n- const tokenType = useTokenType(type);\n+const useObjectEntryLabelStyles = makeStyles((theme) => ({\n+ color: {\n+ backgroundColor: '#fff',\n+ display: 'inline-block',\n+ marginBottom: -1,\n+ marginRight: theme.spacing(0.5),\n+ border: '1px solid',\n+ backgroundImage:\n+ 'url(\"data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%202%202%22%3E%3Cpath%20d%3D%22M1%202V0h1v1H0v1z%22%20fill-opacity%3D%22.2%22%2F%3E%3C%2Fsvg%3E\")',\n+ },\n+ colorInner: {\n+ display: 'block',\n+ width: 11,\n+ height: 11,\n+ },\n+}));\n+\n+function ObjectEntryLabel(props) {\n+ const { objectKey, objectValue } = props;\n+ const type = getType(objectValue);\n+ const label = getLabel(objectValue, type);\n+ const tokenType = getTokenType(type);\n+ const classes = useObjectEntryLabelStyles();\nreturn (\n<React.Fragment>\n- {objectKey}: <span className={clsx('token', tokenType)}>{label}</span>\n+ {`${objectKey}: `}\n+ {type === 'color' ? (\n+ <span className={classes.color} style={{ borderColor: lighten(label, 0.7) }}>\n+ <span className={classes.colorInner} style={{ backgroundColor: label }} />\n+ </span>\n+ ) : null}\n+ <span className={clsx('token', tokenType)}>{label}</span>\n</React.Fragment>\n);\n}\n-ObjectEntryLabel.propTypes = { objectKey: PropTypes.any, objectValue: PropTypes.any };\n+\n+ObjectEntryLabel.propTypes = {\n+ objectKey: PropTypes.any,\n+ objectValue: PropTypes.any,\n+};\nconst useObjectEntryStyles = makeStyles({\ntreeItem: {\n@@ -93,10 +129,9 @@ const useObjectEntryStyles = makeStyles({\nfunction ObjectEntry(props) {\nconst { nodeId, objectKey, objectValue } = props;\n-\nconst keyPrefix = nodeId;\n-\nlet children = null;\n+\nif (\n(objectValue !== null && typeof objectValue === 'object') ||\ntypeof objectValue === 'function'\n",
        "sim_msg_0": "[docs] Add color preview to default theme tree",
        "sim_diff_1": "diff --git a/src/lib/apollo/withData.js b/src/lib/apollo/withData.js @@ -2,8 +2,15 @@ import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { ApolloProvider, getDataFromTree } from \"react-apollo\";\nimport Head from \"next/head\";\n-import initApollo from \"./initApollo\";\n+import initApolloServer from \"./initApolloServer\";\n+import initApolloBrowser from \"./initApolloBrowser\";\n+/**\n+ * Get the display name of a component\n+ * @name getComponentDisplayName\n+ * @param {React.Component} Component Reactio component\n+ * @returns {String} Component display name\n+ */\nfunction getComponentDisplayName(Component) {\nreturn Component.displayName || Component.name || \"Unknown\";\n}\n@@ -30,7 +37,7 @@ export default (ComposedComponent) =>\n// Run all GraphQL queries in the component tree\n// and extract the resulting data\nif (!process.browser) {\n- const apollo = initApollo();\n+ const apollo = initApolloServer();\n// Provide the `url` prop data in case a GraphQL query uses it\nconst url = { query: ctx.query, pathname: ctx.pathname };\ntry {\n@@ -61,7 +68,7 @@ export default (ComposedComponent) =>\nconstructor(props) {\nsuper(props);\n- this.apollo = initApollo(this.props.serverState.apollo.data);\n+ this.apollo = initApolloBrowser(this.props.serverState.apollo.data);\n}\nrender() {\n",
        "sim_msg_1": "refactor: init apollo server and browser separately",
        "sim_diff_2": "diff --git a/components/core/SlateMediaObject.js b/components/core/SlateMediaObject.js @@ -51,7 +51,9 @@ const STYLES_IMAGE = css`\nexport default class SlateMediaObject extends React.Component {\nrender() {\nconst name = `${this.props.data.name}`;\n- const url = this.props.data.url;\n+ // NOTE(jim):\n+ // This is a hack to catch this undefined case I don't want to track down yet.\n+ const url = this.props.data.url.replace(\"https://undefined\", \"https://\");\nconst type = this.props.data.type ? this.props.data.type : \"LEGACY_NO_TYPE\";\nlet element = <div css={STYLES_FAILURE}>No Preview</div>;\n",
        "sim_msg_2": "slate-media-object: leaving a note to investigate some of this URL restructuring that is causing this undefined CID bug",
        "sim_diff_3": "diff --git a/packages/doc/src/components/CodeBlock/CodeBlock.jsx b/packages/doc/src/components/CodeBlock/CodeBlock.jsx import React from 'react';\nimport { node, bool, oneOf } from 'prop-types';\n+import yogaPkg from '@gympass/yoga/package.json';\n+import iconsPkg from '@gympass/yoga-icons/package.json';\n+import systemPkg from '@gympass/yoga-system/package.json';\n+\nimport CodeBlockContext from './CodeBlockContext';\nimport { ReactLive, PrismHighlight, SnackEmbed } from '.';\nimport { importStatement } from './shared/templates';\n@@ -58,12 +62,12 @@ const packages = [\n{ name: NativeComponents, path: 'react-native' },\n];\n-const peerDependencies = [\n- { path: '@react-native-picker/picker' },\n- { path: 'styled-components' },\n- { path: 'react-native-svg' },\n- { path: 'react-is' },\n-];\n+const peerDependencies = Object.keys({\n+ ...yogaPkg.peerDependencies,\n+ ...iconsPkg.peerDependencies,\n+ ...systemPkg.peerDependencies,\n+ 'react-is': '*',\n+}).map(pkg => ({ path: pkg }));\nconst CodeBlock = ({ children: sampleCode, center, state, type }) => {\nconst code = sampleCode.trim();\n",
        "sim_msg_3": "refactor(expo): adding peerDependencies to expo snack dynamically"
    },
    {
        "org_diff": "diff --git a/scripts/jest/setupTests.js b/a/scripts/jest/setupTests.js @@ -206,44 +206,55 @@ if (process.env.REACT_CLASS_EQUIVALENCE_TEST) {\n   };\n \n   const gatedErrorMessage = 'Gated test was expected to fail, but it passed.';\n-  global._test_gate = (gateFn, testName, callback) => {\n+  global._test_gate = (gateFn, testName, callback, timeoutMS) => {\n     let shouldPass;\n     try {\n       const flags = getTestFlags();\n       shouldPass = gateFn(flags);\n     } catch (e) {\n-      test(testName, () => {\n-        throw e;\n-      });\n+      test(\n+        testName,\n+        () => {\n+          throw e;\n+        },\n+        timeoutMS\n+      );\n       return;\n     }\n     if (shouldPass) {\n-      test(testName, callback);\n+      test(testName, callback, timeoutMS);\n     } else {\n       const error = new Error(gatedErrorMessage);\n       Error.captureStackTrace(error, global._test_gate);\n       test(`[GATED, SHOULD FAIL] ${testName}`, () =>\n-        expectTestToFail(callback, error));\n+        expectTestToFail(callback, error, timeoutMS));\n     }\n   };\n-  global._test_gate_focus = (gateFn, testName, callback) => {\n+  global._test_gate_focus = (gateFn, testName, callback, timeoutMS) => {\n     let shouldPass;\n     try {\n       const flags = getTestFlags();\n       shouldPass = gateFn(flags);\n     } catch (e) {\n-      test.only(testName, () => {\n-        throw e;\n-      });\n+      test.only(\n+        testName,\n+        () => {\n+          throw e;\n+        },\n+        timeoutMS\n+      );\n       return;\n     }\n     if (shouldPass) {\n-      test.only(testName, callback);\n+      test.only(testName, callback, timeoutMS);\n     } else {\n       const error = new Error(gatedErrorMessage);\n       Error.captureStackTrace(error, global._test_gate_focus);\n-      test.only(`[GATED, SHOULD FAIL] ${testName}`, () =>\n-        expectTestToFail(callback, error));\n+      test.only(\n+        `[GATED, SHOULD FAIL] ${testName}`,\n+        () => expectTestToFail(callback, error),\n+        timeoutMS\n+      );\n     }\n   };\n ",
        "sim_diff_0": "diff --git a/test/jasmine/tests/gl2d_click_test.js b/test/jasmine/tests/gl2d_click_test.js @@ -738,4 +738,61 @@ describe('@noCI @gl Test gl2d lasso/select:', function() {\n.catch(failTest)\n.then(done);\n});\n+\n+ it('should work on gl text charts', function(done) {\n+ var fig = Lib.extendDeep({}, require('@mocks/gl2d_text_chart_basic.json'));\n+ fig.layout.dragmode = 'select';\n+ fig.layout.margin = {t: 0, b: 0, l: 0, r: 0};\n+ fig.layout.height = 500;\n+ fig.layout.width = 500;\n+ gd = createGraphDiv();\n+\n+ function _assertGlTextOpts(msg, exp) {\n+ var scene = gd.calcdata[0][0].t._scene;\n+ scene.glText.forEach(function(opts, i) {\n+ expect(Array.from(opts.color))\n+ .toBeCloseToArray(exp.rgba[i], 2, 'item ' + i + ' - ' + msg);\n+ });\n+ }\n+\n+ Plotly.plot(gd, fig)\n+ .then(delay(100))\n+ .then(function() {\n+ _assertGlTextOpts('base', {\n+ rgba: [\n+ [68, 68, 68, 255],\n+ [68, 68, 68, 255],\n+ [68, 68, 68, 255]\n+ ]\n+ });\n+ })\n+ .then(function() { return select([[100, 100], [250, 250]]); })\n+ .then(function(eventData) {\n+ assertEventData(eventData, {\n+ points: [{x: 1, y: 2}]\n+ });\n+ _assertGlTextOpts('after selection', {\n+ rgba: [\n+ [\n+ 68, 68, 68, 51,\n+ 68, 68, 68, 51,\n+ 68, 68, 68, 51,\n+ ],\n+ [\n+ 68, 68, 68, 51,\n+ // this is the selected pt!\n+ 68, 68, 68, 255,\n+ 68, 68, 68, 51\n+ ],\n+ [\n+ 68, 68, 68, 51,\n+ 68, 68, 68, 51,\n+ 68, 68, 68, 51\n+ ]\n+ ]\n+ });\n+ })\n+ .catch(failTest)\n+ .then(done);\n+ });\n});\n",
        "sim_msg_0": "add gl text chart select test",
        "sim_diff_1": "diff --git a/test/jasmine/tests/cone_test.js b/test/jasmine/tests/cone_test.js @@ -5,6 +5,11 @@ var supplyAllDefaults = require('../assets/supply_defaults');\nvar createGraphDiv = require('../assets/create_graph_div');\nvar destroyGraphDiv = require('../assets/destroy_graph_div');\nvar failTest = require('../assets/fail_test');\n+var delay = require('../assets/delay');\n+var mouseEvent = require('../assets/mouse_event');\n+\n+var customAssertions = require('../assets/custom_assertions');\n+var assertHoverLabelContent = customAssertions.assertHoverLabelContent;\ndescribe('Test cone defaults', function() {\nvar gd;\n@@ -90,4 +95,40 @@ describe('@gl Test cone interactions', function() {\n.catch(failTest)\n.then(done);\n});\n+\n+ it('should display hover labels', function(done) {\n+ var fig = Lib.extendDeep({}, require('@mocks/gl3d_cone-simple.json'));\n+ // only one trace on one scene\n+ fig.data = [fig.data[0]];\n+ fig.data[0].showscale = false;\n+ delete fig.layout.scene.domain;\n+ fig.layout.margin = {l: 0, t: 0, r: 0, b: 0};\n+ fig.layout.width = 400;\n+ fig.layout.height = 400;\n+\n+ function _hover() {\n+ mouseEvent('mouseover', 200, 200);\n+ return delay(20)();\n+ }\n+\n+ Plotly.plot(gd, fig)\n+ .then(delay(20))\n+ .then(_hover)\n+ .then(function() {\n+ assertHoverLabelContent({\n+ nums: ['x: 3', 'y: 3', 'z: 3', 'norm: 2.00'].join('\\n')\n+ });\n+\n+ return Plotly.restyle(gd, 'hoverinfo', 'u+v+w');\n+ })\n+ .then(delay(20))\n+ .then(_hover)\n+ .then(function() {\n+ assertHoverLabelContent({\n+ nums: ['u: 0', 'v: 0', 'w: 2'].join('\\n')\n+ });\n+ })\n+ .catch(failTest)\n+ .then(done);\n+ });\n});\n",
        "sim_msg_1": "add hover label test for cones",
        "sim_diff_2": "diff --git a/test/jasmine/tests/snapshot_test.js b/test/jasmine/tests/snapshot_test.js @@ -3,7 +3,7 @@ var Plotly = require('@lib/index');\nvar d3 = require('d3');\nvar createGraphDiv = require('../assets/create_graph_div');\nvar destroyGraphDiv = require('../assets/destroy_graph_div');\n-var fail = require('../assets/fail_test');\n+var failTest = require('../assets/fail_test');\nvar subplotMock = require('../../image/mocks/multiple_subplots.json');\nvar annotationMock = require('../../image/mocks/annotations.json');\n@@ -297,7 +297,7 @@ describe('Plotly.Snapshot', function() {\nexpect(legendPointElements.length).toEqual(1);\nexpect(legendPointElements[0].style.fill.substr(0, 6)).toEqual('url(\\\"#');\n})\n- .catch(fail)\n+ .catch(failTest)\n.then(done);\n});\n@@ -317,7 +317,7 @@ describe('Plotly.Snapshot', function() {\nexpect(el.getAttribute('height')).toBe('1000', 'height');\nexpect(el.getAttribute('viewBox')).toBe('0 0 300 400', 'viewbox');\n})\n- .catch(fail)\n+ .catch(failTest)\n.then(done);\n});\n});\n",
        "sim_msg_2": "replace fail -> failTest",
        "sim_diff_3": "diff --git a/src/test/framework/runner.js b/src/test/framework/runner.js @@ -206,12 +206,13 @@ class TestRunner {\nprint_conclusion() {\nfor (const res of this.tests_results) {\nif (res.success) {\n- console.log(`${res.name} Passed`);\n+ console.log(`============ ${res.name} Passed`);\n+ } else if (res.ignored) {\n+ console.warn(`=========== ${res.name} Failed - Result ignored`);\n} else {\n- console.log(`${res.name} Failed${res.ignored ? '. Result ignored' : ''}`);\n+ console.error(`========== ${res.name} Failed!`);\n}\n}\n- console.log(fs.readFileSync(REPORT_PATH).toString());\n}\n_print_curent_step(current_step) {\n@@ -298,10 +299,10 @@ class TestRunner {\nreturn step_res;\n})\n.catch(err => {\n- const result = { name: current_step.name, success: false };\n+ const result = { name: current_step.name, success: false, ignored: true };\nif (!current_step.ignore_failure) {\nthis._error = true;\n- result.ignored = true;\n+ result.ignored = false;\n}\nthis.tests_results.push(result);\nif (current_step.blocking) {\n@@ -333,10 +334,10 @@ class TestRunner {\nreturn step_res;\n})\n.catch(res => {\n- const result = { name: current_step.name, success: false };\n+ const result = { name: current_step.name, success: false, ignored: true };\nif (!current_step.ignore_failure) {\nthis._error = true;\n- result.ignored = true;\n+ result.ignored = false;\n}\nthis.tests_results.push(result);\nif (current_step.blocking) {\n",
        "sim_msg_3": "fixed runner reporting"
    },
    {
        "org_diff": "diff --git a/scripts/rollup/bundles.js b/a/scripts/rollup/bundles.js @@ -884,7 +884,7 @@ const bundles = [\n   /******* Reconciler Constants *******/\n   {\n     moduleType: RENDERER_UTILS,\n-    bundleTypes: [NODE_DEV, NODE_PROD],\n+    bundleTypes: [NODE_DEV, NODE_PROD, FB_WWW_DEV, FB_WWW_PROD],\n     entry: 'react-reconciler/constants',\n     global: 'ReactReconcilerConstants',\n     minifyWithProdErrorCodes: true,",
        "sim_diff_0": "diff --git a/app_web/package.json b/app_web/package.json \"@rollup/plugin-replace\": \"^2.4.1\",\n\"concurrently\": \"^5.3.0\",\n\"eslint\": \"^6.8.0\",\n+ \"node-sass\": \"^6.0.0\",\n\"rollup\": \"^1.31.1\",\n\"rollup-plugin-commonjs\": \"^10.1.0\",\n\"rollup-plugin-copy\": \"^3.3.0\",\n\"rollup-plugin-node-builtins\": \"^2.1.2\",\n\"rollup-plugin-node-resolve\": \"^5.2.0\",\n\"rollup-plugin-scss\": \"^2.6.1\",\n- \"sass\": \"^1.32.8\",\n\"serve\": \"^11.3.0\"\n},\n\"bugs\": {\n",
        "sim_msg_0": "fix sass on macOS",
        "sim_diff_1": "diff --git a/package.json b/package.json \"rollup-plugin-commonjs\": \"^10.1.0\",\n\"rollup-plugin-node-resolve\": \"^5.2.0\",\n\"rollup-plugin-uglify\": \"^6.0.4\",\n- \"standard-version\": \"^6\"\n+ \"standard-version\": \"^6\",\n+ \"typescript\": \"^3.9.3\"\n},\n\"peerDependencies\": {\n\"react\": \"^0.14 || ^15 || ^16\"\n",
        "sim_msg_1": "build(package): add missing peerDependency `typescript`\nRequired by `tslint` and `tsutils`",
        "sim_diff_2": "diff --git a/packages/material-ui/scripts/rollup.config.js b/packages/material-ui/scripts/rollup.config.js -import { promises as fs } from 'fs';\n+import { promises as fs, existsSync } from 'fs';\nimport path from 'path';\nimport zlib from 'zlib';\nimport { promisify } from 'util';\n@@ -74,44 +74,40 @@ function sizeSnapshot(options) {\n};\n}\n+function resolveNestedImport(packageFolder, importee) {\n+ const folder = importee.split('/')[2];\n+ const resolvedFilename = path.resolve(\n+ __dirname,\n+ `../../../packages/${packageFolder}/src/${folder}/index`,\n+ );\n+\n+ const resolvedTs = `${resolvedFilename}.ts`;\n+\n+ if (existsSync(resolvedTs)) {\n+ return resolvedTs;\n+ }\n+\n+ return `${resolvedFilename}.js`;\n+}\n+\n// Resolve imports like:\n// import Portal from '@mui/core/Portal';\nconst nestedFolder = {\nresolveId: (importee) => {\nif (importee.indexOf('@mui/core/') === 0) {\n- const folder = importee.split('/')[2];\n- const resolved = path.resolve(\n- __dirname,\n- `../../../packages/material-ui-unstyled/src/${folder}/index.js`,\n- );\n- return resolved;\n+ return resolveNestedImport('material-ui-unstyled', importee);\n}\nif (importee.indexOf('@mui/private-theming/') === 0) {\n- const folder = importee.split('/')[2];\n- const resolved = path.resolve(\n- __dirname,\n- `../../../packages/material-ui-private-theming/src/${folder}/index.js`,\n- );\n- return resolved;\n+ return resolveNestedImport('material-ui-private-theming', importee);\n}\nif (importee.indexOf('@mui/styled-engine/') === 0) {\n- const folder = importee.split('/')[2];\n- const resolved = path.resolve(\n- __dirname,\n- `../../../packages/material-ui-styled-engine/src/${folder}/index.js`,\n- );\n- return resolved;\n+ return resolveNestedImport('material-ui-styled-engine', importee);\n}\nif (importee.indexOf('@mui/system/') === 0) {\n- const folder = importee.split('/')[2];\n- const resolved = path.resolve(\n- __dirname,\n- `../../../packages/material-ui-system/src/${folder}/index.js`,\n- );\n- return resolved;\n+ return resolveNestedImport('material-ui-system', importee);\n}\nreturn undefined;\n",
        "sim_msg_2": "[core] Include TS modules in rollup import resolution",
        "sim_diff_3": "diff --git a/scripts/build-js.js b/scripts/build-js.js @@ -5,7 +5,7 @@ const fs = require('fs');\nconst rollup = require('rollup');\nconst buble = require('@rollup/plugin-buble');\nconst replace = require('@rollup/plugin-replace');\n-const resolve = require('@rollup/plugin-node-resolve');\n+const resolve = require('@rollup/plugin-node-resolve').default;\nconst Terser = require('terser');\nconst config = require('./build-config.js');\n",
        "sim_msg_3": "Update build-js.js"
    },
    {
        "org_diff": "diff --git a/.github/workflows/commit_artifacts.yml b/a/.github/workflows/commit_artifacts.yml @@ -145,15 +145,15 @@ jobs:\n         run: |\n           BASE_FOLDER='compiled-rn/facebook-fbsource/xplat/js'\n           mkdir -p ${BASE_FOLDER}/react-native-github/Libraries/Renderer/\n-          mkdir -p ${BASE_FOLDER}/RKJSModules/vendor/{scheduler,react,react-is,react-test-renderer}/\n+          mkdir -p ${BASE_FOLDER}/RKJSModules/vendor/react/{scheduler,react,react-is,react-test-renderer}/\n \n           # Move React Native renderer \n           mv build/react-native/implementations/ $BASE_FOLDER/react-native-github/Libraries/Renderer/\n           mv build/react-native/shims/ $BASE_FOLDER/react-native-github/Libraries/Renderer/\n-          mv build/facebook-react-native/scheduler/cjs/ $BASE_FOLDER/RKJSModules/vendor/scheduler/\n-          mv build/facebook-react-native/react/cjs/ $BASE_FOLDER/RKJSModules/vendor/react/\n-          mv build/facebook-react-native/react-is/cjs/ $BASE_FOLDER/RKJSModules/vendor/react-is/\n-          mv build/facebook-react-native/react-test-renderer/cjs/ $BASE_FOLDER/RKJSModules/vendor/react-test-renderer/\n+          mv build/facebook-react-native/scheduler/cjs/ $BASE_FOLDER/RKJSModules/vendor/react/scheduler/\n+          mv build/facebook-react-native/react/cjs/ $BASE_FOLDER/RKJSModules/vendor/react/react/\n+          mv build/facebook-react-native/react-is/cjs/ $BASE_FOLDER/RKJSModules/vendor/react/react-is/\n+          mv build/facebook-react-native/react-test-renderer/cjs/ $BASE_FOLDER/RKJSModules/vendor/react/react-test-renderer/\n \n           # Delete OSS renderer. OSS renderer is synced through internal script.\n           RENDERER_FOLDER=$BASE_FOLDER/react-native-github/Libraries/Renderer/implementations/",
        "sim_diff_0": "diff --git a/.flowconfig b/.flowconfig .*/android/.*\n.*/ios/.*\n.*/assets/.*\n-.*/config/.*\n+./config/.*\n.*/public/.*\n.*/scripts/.*\n.*/node_modules/.*\n+\n[libs]\n-./flow-typed/\n+./flow-typed/.*\n[options]\n-module.file_ext=.js\n-module.file_ext=.native.js\n-module.file_ext=.android.js\n-module.file_ext=.ios.js\n\\ No newline at end of file\n+# https://github.com/facebook/react-native/issues/19766#issuecomment-398099206\n+module.system=haste\n+module.system.haste.use_name_reducers=true\n+# keep the following in sync with server/haste/hasteImpl.js\n+# get basename\n+module.system.haste.name_reducers='^.*/\\([a-zA-Z0-9$_.-]+\\.js\\(\\.flow\\)?\\)$' -> '\\1'\n+# strip .js or .js.flow suffix\n+module.system.haste.name_reducers='^\\(.*\\)\\.js\\(\\.flow\\)?$' -> '\\1'\n+# strip .ios suffix\n+module.system.haste.name_reducers='^\\(.*\\)\\.ios$' -> '\\1'\n+module.system.haste.name_reducers='^\\(.*\\)\\.android$' -> '\\1'\n+module.system.haste.name_reducers='^\\(.*\\)\\.native$' -> '\\1'\n+module.system.haste.paths.blacklist=.*/__tests__/.*\n+module.system.haste.paths.blacklist=.*/__mocks__/.*\n+module.system.haste.paths.blacklist=<PROJECT_ROOT>/node_modules/react-native/Libraries/Animated/src/polyfills/.*\n+module.system.haste.paths.whitelist=<PROJECT_ROOT>/node_modules/react-native/Libraries/.*\n+module.name_mapper='^react-native$' -> 'react-native-web'\n+\n",
        "sim_msg_0": "Update flow config settings",
        "sim_diff_1": "diff --git a/native/apps/apps-directory.react.js b/native/apps/apps-directory.react.js @@ -17,27 +17,6 @@ const APP_DIRECTORY_DATA = [\nappIcon: 'calendar',\nappCopy: 'Shared calendar for your community',\n},\n- {\n- id: 'wiki',\n- available: false,\n- appName: 'Wiki',\n- appIcon: 'document-filled',\n- appCopy: 'Shared wiki for your community',\n- },\n- {\n- id: 'tasks',\n- available: false,\n- appName: 'Tasks',\n- appIcon: 'check-round',\n- appCopy: 'Shared tasks for your community',\n- },\n- {\n- id: 'files',\n- available: false,\n- appName: 'Files',\n- appIcon: 'package',\n- appCopy: 'Shared files for your community',\n- },\n];\n// eslint-disable-next-line no-unused-vars\n",
        "sim_msg_1": "[native] Remove \"coming soon\" apps from `APP_DIRECTORY_DATA`\nSummary: Remove apps that aren't yet available from `APP_DIRECTORY_DATA`\nTest Plan: The apps no longer appear in the apps directory\nReviewers: ashoat\nSubscribers: palys-swm, Adrian, karol-bisztyga",
        "sim_diff_2": "diff --git a/src/App.js b/src/App.js // @flow\nimport React from 'react'\n-import { Platform, SafeAreaView, StyleSheet, View } from 'react-native'\n+import { Platform, SafeAreaView, StyleSheet } from 'react-native'\nimport PaperProvider from 'react-native-paper/src/core/Provider'\n-import DefaultTheme from 'react-native-paper/src/styles/DefaultTheme'\n+import { theme } from './components/theme/styles'\nimport SimpleStore from './lib/undux/SimpleStore'\nimport RouterSelector from './RouterSelector'\nimport { SimpleStoreDialog } from './components/common/dialogs/CustomDialog'\nimport LoadingIndicator from './components/common/view/LoadingIndicator'\n-const theme = {\n- ...DefaultTheme,\n- colors: {\n- ...DefaultTheme.colors,\n- primary: '#00AFFF'\n- }\n-}\nconst App = () => {\n// onRecaptcha = (token: string) => {\n// userStorage.setProfileField('recaptcha', token, 'private')\n// }\n+\nreturn (\n<SimpleStore.Container>\n<PaperProvider theme={theme}>\n- <SafeAreaView>\n- <View style={styles.container}>\n+ <SafeAreaView style={styles.safeAreaView}>\n+ <React.Fragment>\n<SimpleStoreDialog />\n<LoadingIndicator />\n{/* <ReCaptcha sitekey={Config.recaptcha} action=\"auth\" verifyCallback={this.onRecaptcha} /> */}\n<RouterSelector />\n- </View>\n+ </React.Fragment>\n</SafeAreaView>\n</PaperProvider>\n</SimpleStore.Container>\n@@ -36,16 +30,8 @@ const App = () => {\n}\nconst styles = StyleSheet.create({\n- container: {\n- flex: 1,\n- width: '100%',\n- height: '100%',\n- margin: 0,\n- padding: 0,\n- position: 'fixed',\n- maxWidth: '475px',\n- alignSelf: 'center',\n- backgroundColor: '#fff'\n+ safeAreaView: {\n+ flexGrow: '1'\n}\n})\n",
        "sim_msg_2": "(remove) theme from component",
        "sim_diff_3": "diff --git a/src/App.js b/src/App.js // @flow\n-import { isMobile } from 'mobile-device-detect'\nimport React, { memo, useCallback, useEffect, useState } from 'react'\nimport { AsyncStorage, Platform, SafeAreaView, StyleSheet } from 'react-native'\n-import PaperProvider from 'react-native-paper/src/core/Provider'\n+import { Provider as PaperProvider } from 'react-native-paper'\nimport { ActionSheetProvider } from '@expo/react-native-action-sheet'\nimport InternetConnection from './components/common/connectionDialog/internetConnection'\n+import { isMobile } from './lib/utils/platform'\nimport './lib/gundb/gundb'\nimport { theme } from './components/theme/styles'\nimport SimpleStore, { initStore, setInitFunctions } from './lib/undux/SimpleStore'\n",
        "sim_msg_3": "fix: paperclip import"
    },
    {
        "org_diff": "diff --git a/scripts/rollup/wrappers.js b/a/scripts/rollup/wrappers.js @@ -1,7 +1,5 @@\n 'use strict';\n \n-const {resolve} = require('path');\n-const {readFileSync} = require('fs');\n const {signFile, getSigningToken} = require('signedsource');\n const {bundleTypes, moduleTypes} = require('./bundles');\n \n@@ -30,19 +28,25 @@ const {RECONCILER} = moduleTypes;\n \n const USE_STRICT_HEADER_REGEX = /'use strict';\\n+/;\n \n-function registerInternalModuleStart(globalName) {\n-  const path = resolve(__dirname, 'wrappers', 'registerInternalModuleBegin.js');\n-  const file = readFileSync(path);\n-  return String(file).trim();\n+function wrapWithRegisterInternalModule(source) {\n+  return `\\\n+'use strict';\n+if (\n+  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n+  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart ===\n+    'function'\n+) {\n+  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\n }\n-\n-function registerInternalModuleStop(globalName) {\n-  const path = resolve(__dirname, 'wrappers', 'registerInternalModuleEnd.js');\n-  const file = readFileSync(path);\n-\n-  // Remove the 'use strict' directive from the footer.\n-  // This directive is only meaningful when it is the first statement in a file or function.\n-  return String(file).replace(USE_STRICT_HEADER_REGEX, '').trim();\n+${source}\n+if (\n+  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n+  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop ===\n+    'function'\n+) {\n+  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\n+}\n+`;\n }\n \n const license = ` * Copyright (c) Meta Platforms, Inc. and affiliates.\n@@ -496,11 +500,7 @@ function wrapWithTopLevelDefinitions(\n \n         // Certain DEV and Profiling bundles should self-register their own module boundaries with DevTools.\n         // This allows the Timeline to de-emphasize (dim) internal stack frames.\n-        source = `\n-          ${registerInternalModuleStart(globalName)}\n-          ${source}\n-          ${registerInternalModuleStop(globalName)}\n-        `;\n+        source = wrapWithRegisterInternalModule(source);\n         break;\n     }\n   }",
        "sim_diff_0": "diff --git a/assets/js/modules/adsense/index.js b/assets/js/modules/adsense/index.js @@ -54,7 +54,7 @@ let isAdBlockerActive = () => {};\nexport const registerStore = ( registry ) => {\nregisterDataStore( registry );\n// TODO: fix hack\n- isAdBlockerActive = () => registry.select( STORE_NAME ).isAdBlockerActive();\n+ isAdBlockerActive = () => registry.__experimentalResolveSelect( STORE_NAME ).isAdBlockerActive();\n};\nexport const registerModule = ( modules ) => {\n@@ -67,8 +67,8 @@ export const registerModule = ( modules ) => {\nSettingsSetupIncompleteComponent: SettingsSetupIncomplete,\nSetupComponent: SetupMain,\nIcon: AdSenseIcon,\n- checkRequirements: () => {\n- if ( ! isAdBlockerActive() ) {\n+ checkRequirements: async () => {\n+ if ( ! await isAdBlockerActive() ) {\nreturn;\n}\n",
        "sim_msg_0": "Update checkRequirements to check isAdBlockerActive async.",
        "sim_diff_1": "diff --git a/assets/js/modules/adsense/index.js b/assets/js/modules/adsense/index.js @@ -52,12 +52,8 @@ addFilter(\nfillFilterWithComponent( DashboardZeroData )\n);\n-let isAdBlockerActive = () => {};\n-\nexport const registerStore = ( registry ) => {\nregisterDatastore( registry );\n- // TODO: fix hack\n- isAdBlockerActive = () => registry.__experimentalResolveSelect( STORE_NAME ).isAdBlockerActive();\n};\nexport const registerModule = ( modules ) => {\n@@ -74,8 +70,8 @@ export const registerModule = ( modules ) => {\n__( 'Monetize your website', 'google-site-kit' ),\n__( 'Intelligent, automatic ad placement', 'google-site-kit' ),\n],\n- checkRequirements: async () => {\n- if ( ! await isAdBlockerActive() ) {\n+ checkRequirements: async ( registry ) => {\n+ if ( ! registry.select( STORE_NAME ).isAdBlockerActive() ) {\nreturn;\n}\n",
        "sim_msg_1": "Remove hack and use selector instead.",
        "sim_diff_2": "diff --git a/assets/js/modules/idea-hub/index.js b/assets/js/modules/idea-hub/index.js * Internal dependencies\n*/\nimport { STORE_NAME } from './datastore/constants';\n+import { registerStore as registerDataStore } from './datastore';\nimport IdeaHubIcon from '../../../svg/idea-hub.svg';\n+import { isFeatureEnabled } from '../../features';\n-export { registerStore } from './datastore';\n+const ifEnabled = ( func ) => ( ...args ) => {\n+ if ( isFeatureEnabled( 'ideaHubModule' ) ) {\n+ func( ...args );\n+ }\n+};\n-export const registerModule = ( modules ) => {\n+export const registerStore = ifEnabled( registerDataStore );\n+\n+export const registerModule = ifEnabled( ( modules ) => {\nmodules.registerModule(\n'idea-hub',\n{\n@@ -32,4 +40,4 @@ export const registerModule = ( modules ) => {\nIcon: IdeaHubIcon,\n}\n);\n-};\n+} );\n",
        "sim_msg_2": "Add ifEnabled function for idea-hub and wrap main exports.",
        "sim_diff_3": "diff --git a/assets/js/modules/thank-with-google/index.js b/assets/js/modules/thank-with-google/index.js @@ -27,13 +27,13 @@ import { isFeatureEnabled } from '../../features';\nexport { registerStore } from './datastore';\n-const ifSwgIsEnabled = ( func ) => ( ...args ) => {\n- if ( isFeatureEnabled( 'swgModule' ) ) {\n+const ifTwgIsEnabled = ( func ) => ( ...args ) => {\n+ if ( isFeatureEnabled( 'twgModule' ) ) {\nfunc( ...args );\n}\n};\n-export const registerModule = ifSwgIsEnabled( ( modules ) => {\n+export const registerModule = ifTwgIsEnabled( ( modules ) => {\nmodules.registerModule( 'thank-with-google', {\nstoreName: MODULES_THANK_WITH_GOOGLE,\nSettingsEditComponent: SettingsEdit,\n",
        "sim_msg_3": "Rename feature flag to twgModule."
    },
    {
        "org_diff": "diff --git a/.github/workflows/commit_artifacts.yml b/a/.github/workflows/commit_artifacts.yml @@ -210,42 +210,6 @@ jobs:\n           commit_user_email: ${{ github.actor }}@users.noreply.github.com\n           create_branch: true\n \n-  commit_fbsource_artifacts_external_repo:\n-    needs: download_artifacts\n-    runs-on: ubuntu-latest\n-    if: ${{ (github.ref == 'refs/heads/main' && needs.download_artifacts.outputs.fbsource_branch_count == '0') || github.ref == 'refs/heads/meta-fbsource' }}\n-    steps:\n-      - uses: actions/checkout@v4\n-        with:\n-          ref: main\n-          repository: facebook/react-fbsource-import\n-          token: ${{secrets.FBSOURCE_SYNC_PUSH_TOKEN}}\n-      - name: Ensure clean directory\n-        run: rm -rf compiled-rn\n-      - uses: actions/download-artifact@v3\n-        with:\n-          name: compiled-rn\n-          path: compiled-rn/\n-      - run: git status -u\n-      - name: Check if only the REVISION file has changed\n-        id: check_should_commit\n-        run: |\n-          if git status --porcelain | grep -qv '/REVISION$'; then\n-            echo \"should_commit=true\" >> \"$GITHUB_OUTPUT\"\n-          else\n-            echo \"should_commit=false\" >> \"$GITHUB_OUTPUT\"\n-          fi\n-      - name: Commit changes to branch\n-        if: steps.check_should_commit.outputs.should_commit == 'true'\n-        uses: stefanzweifel/git-auto-commit-action@v4\n-        with:\n-          commit_message: |\n-            ${{ github.event.head_commit.message }}\n-\n-            DiffTrain build for commit https://github.com/facebook/react/commit/${{ github.sha }}.\n-          commit_user_name: ${{ github.actor }}\n-          commit_user_email: ${{ github.actor }}@users.noreply.github.com\n-\n   commit_fbsource_artifacts:\n     needs: download_artifacts\n     if: ${{ (github.ref == 'refs/heads/main' && needs.download_artifacts.outputs.fbsource_branch_count == '0') || github.ref == 'refs/heads/meta-fbsource' }}",
        "sim_diff_0": "diff --git a/.github/workflows/deploy-to-artifacts.yml b/.github/workflows/deploy-to-artifacts.yml @@ -15,9 +15,12 @@ on:\ndescription: 'The base commit ref'\njobs:\n- pre:\n+ build:\nruns-on: ubuntu-latest\nenvironment: CI\n+ needs: pre\n+ outputs:\n+ sha: ${{steps.prep.outputs.sha}}\nsteps:\n- uses: actions/github-script@v3\nwith:\n@@ -31,13 +34,6 @@ jobs:\nstate: 'pending',\ntarget_url: `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`\n});\n- build:\n- runs-on: ubuntu-latest\n- environment: CI\n- needs: pre\n- outputs:\n- sha: ${{steps.prep.outputs.sha}}\n- steps:\n- id: prep\nuses: actions/github-script@v3\nwith:\n@@ -77,6 +73,18 @@ jobs:\nruns-on: ubuntu-latest\nneeds: pre\nsteps:\n+ - uses: actions/github-script@v3\n+ with:\n+ github-token: ${{secrets.ACTIVE_TOKEN}}\n+ script: |\n+ await github.repos.createCommitStatus({\n+ owner: context.repo.owner,\n+ repo: context.repo.repo,\n+ sha: context.payload.inputs.sha,\n+ context: context.workflow,\n+ state: 'pending',\n+ target_url: `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`\n+ });\n- uses: actions/checkout@v2\nwith:\nref: ${{ github.event.inputs.sha }}\n@@ -132,12 +140,6 @@ jobs:\ntasks.push('test-server-stable.yml');\nawait Promise.all(tasks.map(task => dispatchWorkflow(task)));\n-\n- post:\n- runs-on: ubuntu-latest\n- environment: CI\n- needs: test\n- steps:\n- uses: actions/github-script@v3\nwith:\ngithub-token: ${{secrets.ACTIVE_TOKEN}}\n@@ -150,13 +152,8 @@ jobs:\nstate: 'success',\ntarget_url: `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}#artifacts`\n});\n- failure:\n- runs-on: ubuntu-latest\n- environment: CI\n- needs: test\n- if: failure() || cancelled()\n- steps:\n- uses: actions/github-script@v3\n+ if: failure() || cancelled()\nwith:\ngithub-token: ${{secrets.ACTIVE_TOKEN}}\nscript: |\n@@ -169,4 +166,3 @@ jobs:\ntarget_url: `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`\n});\n\\ No newline at end of file\n-\n",
        "sim_msg_0": "ci: optimize statuses in the deploy workflow",
        "sim_diff_1": "diff --git a/.github/workflows/build-zips.yml b/.github/workflows/build-zips.yml @@ -5,6 +5,7 @@ on:\nbranches:\n- develop\n- master\n+ tags: ['**']\npull_request:\njobs:\n@@ -85,3 +86,10 @@ jobs:\nGIT_AUTHOR_NAME: ${{ github.actor }}\nGIT_COMMITTER_EMAIL: ${{ github.actor }}@users.noreply.github.com\nGIT_COMMITTER_NAME: ${{ github.actor }}\n+\n+ deploy-to-release:\n+ runs-on: ubuntu-latest\n+ needs: build-zips\n+ steps:\n+ if: {{ startsWith( github.ref, 'refs/tags' ) }\n+\n",
        "sim_msg_1": "Add on tags and start of new job.",
        "sim_diff_2": "diff --git a/.github/workflows/zips.yml b/.github/workflows/zips.yml @@ -79,7 +79,9 @@ jobs:\n- uses: actions/checkout@v2\nwith:\nrepository: ${{ github.repository }}.wiki\n- ref: main\n+ # GitHub Wikis use this term as their main branch; this cannot be\n+ # changed so we need to continue using it for now.\n+ ref: master\ntoken: ${{ secrets.GITHUB_PERSONAL_ACCESS_TOKEN }}\n- name: Download artifacts\nuses: actions/download-artifact@v1\n@@ -93,7 +95,7 @@ jobs:\ngit diff --staged --quiet && echo 'No changes to commit; exiting!' && exit 0\ngit pull --no-edit --quiet\ngit commit -m \"Build and publish ${{ github.ref }}\"\n- git push origin main\n+ git push origin master\nenv:\nGIT_AUTHOR_EMAIL: ${{ github.actor }}@users.noreply.github.com\nGIT_AUTHOR_NAME: ${{ github.actor }}\n@@ -108,7 +110,9 @@ jobs:\n- uses: actions/checkout@v2\nwith:\nrepository: ${{ github.repository }}.wiki\n- ref: main\n+ # GitHub Wikis use this term as their main branch; this cannot be\n+ # changed so we need to continue using it for now.\n+ ref: master\ntoken: ${{ secrets.GITHUB_PERSONAL_ACCESS_TOKEN }}\n- name: Prune PR files\nrun: |\n@@ -118,7 +122,7 @@ jobs:\ngit diff --staged --quiet && echo 'No changes to commit; exiting!' && exit 0\ngit pull --no-edit --quiet\ngit commit -m \"Prune refs/pull/${{ github.event.pull_request.number }}\"\n- git push origin main\n+ git push origin master\nenv:\nGIT_AUTHOR_EMAIL: ${{ github.actor }}@users.noreply.github.com\nGIT_AUTHOR_NAME: ${{ github.actor }}\n",
        "sim_msg_2": "Make note about Wikis using `master` branch name.",
        "sim_diff_3": "diff --git a/.github/workflows/zips.yml b/.github/workflows/zips.yml @@ -122,7 +122,6 @@ jobs:\n# GitHub Wikis use this term as their main branch; this cannot be\n# changed so we need to continue using it for now.\nref: master\n- token: ${{ secrets.GITHUB_PERSONAL_ACCESS_TOKEN }}\n- name: Download artifacts\nuses: actions/download-artifact@v1\nwith:\n@@ -154,7 +153,6 @@ jobs:\n# GitHub Wikis use this term as their main branch; this cannot be\n# changed so we need to continue using it for now.\nref: master\n- token: ${{ secrets.GITHUB_PERSONAL_ACCESS_TOKEN }}\n- name: Prune PR files\nrun: |\nrm -rf \"refs/pull/${{ github.event.pull_request.number }}\"\n",
        "sim_msg_3": "Remove GitHub Personal Access Tokens from zip builds."
    },
    {
        "org_diff": "diff --git a/packages/react-devtools-fusebox/src/frontend.js b/a/packages/react-devtools-fusebox/src/frontend.js @@ -62,6 +62,7 @@ export function initialize(\n       store={store}\n       showTabBar={true}\n       warnIfLegacyBackendDetected={true}\n+      enabledInspectedElementContextMenu={true}\n     />,\n   );\n }",
        "sim_diff_0": "diff --git a/packages/civic-sandbox/src/components/Packages/index.js b/packages/civic-sandbox/src/components/Packages/index.js @@ -112,14 +112,9 @@ export class Packages extends React.Component {\n<a onClick={this.closeMap}>&lt; Back to Packages</a>\n</p>\n<SandboxComponent />\n- {selectedFoundationDatum && <div\n- style={{\n- top: '175px',\n- position: 'absolute',\n- width: '100%',\n- }}\n- >\n- <CivicSandboxDashboard data={selectedFoundationDatum} />\n+ {selectedFoundationDatum && <div>\n+ <CivicSandboxDashboard data={selectedFoundationDatum}>\n+ </CivicSandboxDashboard>\n</div>}\n</section>)}\n</div>\n",
        "sim_msg_0": "Allow dashboard to show description",
        "sim_diff_1": "diff --git a/packages/component-library/src/Sandbox/Sandbox.js b/packages/component-library/src/Sandbox/Sandbox.js @@ -47,7 +47,9 @@ const Sandbox = ({\nstyles,\nonFoundationClick,\nonSlideHover,\n+ onBaseMapClick,\ntooltipInfo,\n+ tooltipInfoVector,\nallSlides,\nselectedFoundationDatum,\nareSlidesLoading,\n@@ -66,6 +68,36 @@ const Sandbox = ({\nconst featuresArr = layerData.length ? layerData[0].data : [];\nconst boundBox = layerData.length ? layerData[0].boundBox : [];\n+ const onHoverVectorLayer = info => {\n+ const [selectedFeature] = info.features;\n+ const selectedProps = selectedFeature.properties;\n+ const selectedIndex =\n+ selectedFeature.layer &&\n+ selectedFeature.layer.metadata &&\n+ selectedFeature.layer.metadata[\"sandbox:index\"];\n+\n+ if (selectedProps && selectedIndex !== undefined) {\n+ const selectedDatum = {\n+ object: {\n+ properties: selectedProps\n+ },\n+ x: info.point[0],\n+ y: info.point[1]\n+ };\n+ onBaseMapClick(selectedDatum, selectedIndex);\n+ } else {\n+ const selectedDatum = {};\n+ onBaseMapClick(selectedDatum, selectedIndex);\n+ }\n+ };\n+\n+ const mouseOutVectorLayer = () => {\n+ const selectedDatum = {\n+ object: {}\n+ };\n+ onBaseMapClick(selectedDatum);\n+ };\n+\nreturn (\n<div css={styles}>\n<div\n@@ -127,7 +159,8 @@ const Sandbox = ({\nbboxData={featuresArr}\nbboxPadding={50}\nuseScrollZoom\n- onBaseMapClick={info => console.log(info)}\n+ onBaseMapHover={onHoverVectorLayer}\n+ onBaseMapMouseOut={mouseOutVectorLayer}\n>\n<CivicSandboxMap\nmapLayers={layerData}\n@@ -136,6 +169,9 @@ const Sandbox = ({\nselectedFoundationDatum={selectedFoundationDatum}\n>\n{tooltipInfo && <CivicSandboxTooltip tooltipData={tooltipInfo} />}\n+ {tooltipInfoVector && (\n+ <CivicSandboxTooltip tooltipData={tooltipInfoVector} />\n+ )}\n</CivicSandboxMap>\n</BaseMap>\n</div>\n@@ -174,11 +210,17 @@ Sandbox.propTypes = {\nstyles: string,\nonFoundationClick: func,\nonSlideHover: func,\n+ onBaseMapClick: func,\ntooltipInfo: shape({\ncontent: arrayOf(shape({})),\nx: number,\ny: number\n}),\n+ tooltipInfoVector: shape({\n+ content: arrayOf(shape({})),\n+ x: number,\n+ y: number\n+ }),\nallSlides: arrayOf(\nshape({\nchecked: bool,\n",
        "sim_msg_1": "Add second tooltip",
        "sim_diff_2": "diff --git a/packages/component-library/src/Sandbox/Sandbox.js b/packages/component-library/src/Sandbox/Sandbox.js @@ -47,7 +47,7 @@ const Sandbox = ({\nstyles,\nonFoundationClick,\nonSlideHover,\n- onBaseMapClick,\n+ onBaseMapHover,\ntooltipInfo,\ntooltipInfoVector,\nallSlides,\n@@ -84,10 +84,10 @@ const Sandbox = ({\nx: info.point[0],\ny: info.point[1]\n};\n- onBaseMapClick(selectedDatum, selectedIndex);\n+ onBaseMapHover(selectedDatum, selectedIndex);\n} else {\nconst selectedDatum = {};\n- onBaseMapClick(selectedDatum, selectedIndex);\n+ onBaseMapHover(selectedDatum, selectedIndex);\n}\n};\n@@ -95,7 +95,7 @@ const Sandbox = ({\nconst selectedDatum = {\nobject: {}\n};\n- onBaseMapClick(selectedDatum);\n+ onBaseMapHover(selectedDatum);\n};\nreturn (\n@@ -210,7 +210,7 @@ Sandbox.propTypes = {\nstyles: string,\nonFoundationClick: func,\nonSlideHover: func,\n- onBaseMapClick: func,\n+ onBaseMapHover: func,\ntooltipInfo: shape({\ncontent: arrayOf(shape({})),\nx: number,\n",
        "sim_msg_2": "Rename click to hover",
        "sim_diff_3": "diff --git a/packages/fether-react/src/BackupAccount/BackupAccount.js b/packages/fether-react/src/BackupAccount/BackupAccount.js @@ -49,6 +49,12 @@ class BackupAccount extends Component {\n.then(res => {\nif (res) {\ncreateAccountStore.clear();\n+ /*\n+ FIXME: this timeout is a placeholder for after the backup file is saved.\n+ AFAICT there is no callback from FileSaver.saveAs() so I'm not sure how to handle this yet.\n+ If it just goes straight to the accounts page it's not clear anything happened at all, and\n+ a little loading time however arbitrary at least gives the sense that something's happened.\n+ */\nsetTimeout(() => history.push(`/accounts`), 3000);\n}\n})\n",
        "sim_msg_3": "add comment about timeout after backup file"
    },
    {
        "org_diff": "diff --git a/.circleci/config.yml b/a/.circleci/config.yml @@ -228,6 +228,13 @@ jobs:\n           command: ./scripts/circleci/pack_and_store_devtools_artifacts.sh\n       - store_artifacts:\n           path: ./build/devtools.tgz\n+      # Simplifies getting the extension for local testing\n+      - store_artifacts:\n+          path: ./build/devtools/chrome-extension.zip\n+          destination: react-devtools-chrome-extension.zip\n+      - store_artifacts:\n+          path: ./build/devtools/firefox-extension.zip\n+          destination: react-devtools-firefox-extension.zip\n \n   run_devtools_e2e_tests:\n     docker: *docker",
        "sim_diff_0": "diff --git a/.circleci/config.yml b/.circleci/config.yml @@ -136,10 +136,20 @@ jobs:\n- store_artifacts:\npath: dist\ndestination: dist\n+ - run:\n+ name: Pack tarball\n+ command: |\n+ npm pack\n+ version=$(node -e \"console.log(require('./package.json').version)\")\n+ mv plotly.js-$version.tgz plotly.js.tgz\n+ - store_artifacts:\n+ path: plotly.js.tgz\n+ destination: /plotly.js.tgz\n- run:\nname: Show URLs to build files\ncommand: |\nPROJECT_NUM=45646037\n+ echo https://$CIRCLE_BUILD_NUM-$PROJECT_NUM-gh.circle-artifacts.com/0/plotly.js.tgz\necho https://$CIRCLE_BUILD_NUM-$PROJECT_NUM-gh.circle-artifacts.com/0/dist/plotly.js\necho https://$CIRCLE_BUILD_NUM-$PROJECT_NUM-gh.circle-artifacts.com/0/dist/plotly.min.js\necho https://$CIRCLE_BUILD_NUM-$PROJECT_NUM-gh.circle-artifacts.com/0/dist/plot-schema.json\n",
        "sim_msg_0": "run `npm pack` on publish Ci container",
        "sim_diff_1": "diff --git a/.circleci/config.yml b/.circleci/config.yml @@ -115,7 +115,7 @@ jobs:\npaths:\n- dist\n- store_artifacts:\n- path: dist\n+ path: dist/{latest,SelfKey Identity}*\n- *step_save_cache_mac\n'build-linux':\n@@ -148,7 +148,7 @@ jobs:\npaths:\n- dist\n- store_artifacts:\n- path: dist\n+ path: dist/{latest,SelfKey Identity}*\n- *step_save_cache\n'e2e-mac':\nmacos:\n",
        "sim_msg_1": "feat(circle-ci): filter artifacts",
        "sim_diff_2": "diff --git a/.circleci/config.yml b/.circleci/config.yml @@ -490,7 +490,7 @@ jobs:\n- run: npx detox clean-framework-cache && npx detox build-framework-cache\n- run: yarn test:e2e:release\n- store_artifacts:\n- path: /tmp/screenshots\n+ path: /artifacts\ntest-nightly:\n<<: *job-defaults-macos\n",
        "sim_msg_2": "store artifacts in CI",
        "sim_diff_3": "diff --git a/.circleci/config.yml b/.circleci/config.yml @@ -15,14 +15,16 @@ jobs:\nsteps:\n- checkout\n- run:\n- name: set up build environment\n+ name: Set up build environment\ncommand: .circleci/env_build.sh\n- run:\nname: Pretest\n- command: |\n- npm run pretest\n- npm run cibuild\n+ command: npm run pretest\n+ - run:\n+ name: CI-Build\n+ command: npm run cibuild\n- run:\n+ name: Delete git\ncommand: rm -rf .git\n- persist_to_workspace:\nroot: /home/circleci\n@@ -76,10 +78,10 @@ jobs:\n- attach_workspace:\nat: ~/\n- run:\n- name: install kaleido, plotly.io and required fonts\n+ name: Install kaleido, plotly.io and required fonts\ncommand: .circleci/env_image.sh\n- run:\n- name: create all png files\n+ name: Create all png files\ncommand: .circleci/test.sh make-baselines\n- persist_to_workspace:\nroot: ~/\n@@ -94,7 +96,7 @@ jobs:\n- attach_workspace:\nat: ~/\n- run:\n- name: compare pixels\n+ name: Compare pixels\ncommand: .circleci/test.sh test-image ; find build -maxdepth 1 -type f -delete\n- store_artifacts:\npath: build\n@@ -108,13 +110,13 @@ jobs:\n- attach_workspace:\nat: ~/\n- run:\n- name: install kaleido, plotly.io and required fonts\n+ name: Install kaleido, plotly.io and required fonts\ncommand: .circleci/env_image.sh\n- run:\n- name: install poppler-utils to have pdftops for exporting eps\n+ name: Install poppler-utils to have pdftops for exporting eps\ncommand: sudo apt-get install poppler-utils\n- run:\n- name: create svg, jpg, jpeg, webp, pdf and eps files\n+ name: Create svg, jpg, jpeg, webp, pdf and eps files\ncommand: python3 test/image/make_exports.py\n- persist_to_workspace:\nroot: ~/\n@@ -129,7 +131,7 @@ jobs:\n- attach_workspace:\nat: ~/\n- run:\n- name: test export sizes\n+ name: Test export sizes\ncommand: node test/image/export_test.js ; find build -maxdepth 1 -type f -delete\n- store_artifacts:\npath: build\n@@ -179,8 +181,11 @@ jobs:\nsteps:\n- checkout\n- run:\n- name: set up build environment\n+ name: Set up build environment\ncommand: .circleci/env_build.sh\n+ - run:\n+ name: Preview CHANGELOG for next release (only on master)\n+ command: if [ $CIRCLE_BRANCH == \"master\" ]; then npm run use-draftlogs && git --no-pager diff --color-words CHANGELOG.md || true; fi\n- run:\nname: Build dist/\ncommand: npm run build\n",
        "sim_msg_3": "preview CHANGELOG when building dist on master"
    },
    {
        "org_diff": "diff --git a/dangerfile.js b/a/dangerfile.js @@ -44,7 +44,9 @@ const CRITICAL_ARTIFACT_PATHS = new Set([\n   // We always report changes to these bundles, even if the change is\n   // insignificant or non-existent.\n   'oss-stable/react-dom/cjs/react-dom.production.js',\n+  'oss-stable/react-dom/cjs/react-dom-client.production.js',\n   'oss-experimental/react-dom/cjs/react-dom.production.js',\n+  'oss-experimental/react-dom/cjs/react-dom-client.production.js',\n   'facebook-www/ReactDOM-prod.classic.js',\n   'facebook-www/ReactDOM-prod.modern.js',\n ]);",
        "sim_diff_0": "diff --git a/generators/client/files-react.js b/generators/client/files-react.js @@ -386,6 +386,7 @@ const files = {\n'spec/app/utils.ts',\n'spec/app/config/notification-middleware.spec.ts',\n'spec/app/shared/layout/header.spec.tsx',\n+ 'spec/app/reducers/activate.spec.tsx',\n// 'spec/app/account/activate/_activate.component.spec.js',\n// 'spec/app/account/password/_password.component.spec.js',\n// 'spec/app/account/password/_password-strength-bar.component.spec.js',\n",
        "sim_msg_0": "add a test suit for activate's reducer",
        "sim_diff_1": "diff --git a/src/config/config.js b/src/config/config.js @@ -13,7 +13,7 @@ const Config = {\npublicUrl,\ninfuraKey: process.env.REACT_APP_INFURA_KEY,\nnetwork: process.env.REACT_APP_NETWORK || 'fuse',\n- market: process.env.REACT_APP_MARKET || process.env.REACT_APP_NETWORK === 'etoro',\n+ market: process.env.REACT_APP_MARKET || process.env.REACT_APP_ETORO || process.env.REACT_APP_NETWORK === 'etoro',\nmarketUrl: process.env.REACT_APP_MARKET_URL || 'https://etoro.paperclip.co',\nisEToro: process.env.REACT_APP_ETORO || process.env.REACT_APP_NETWORK === 'etoro',\nzoomLicenseKey: process.env.REACT_APP_ZOOM_LICENSE_KEY,\n",
        "sim_msg_1": "add: market env depends on etoro",
        "sim_diff_2": "diff --git a/src/encoded/static/components/file.js b/src/encoded/static/components/file.js @@ -276,6 +276,13 @@ const File = React.createClass({\n</div>\n: null}\n+ {context.content_error_detail ?\n+ <div data-test=\"contenterrordetail\">\n+ <dt>Content error detail</dt>\n+ <dd>{context.content_error_detail}</dd>\n+ </div>\n+ : null}\n+\n{aliasList ?\n<div data-test=\"aliases\">\n<dt>Aliases</dt>\n",
        "sim_msg_2": "Add content_error_detail display to file pages",
        "sim_diff_3": "diff --git a/package.json b/package.json \"next\": \"^10.0.1\",\n\"pg\": \"^8.3.3\",\n\"prismjs\": \"^1.20.0\",\n- \"react\": \"^16.13.1\",\n+ \"react\": \"^16.12.0\",\n\"react-blurhash\": \"github:zeroxme/react-blurhash#master\",\n- \"react-dom\": \"^16.13.1\",\n+ \"react-dom\": \"^16.12.0\",\n\"react-draggable\": \"^4.4.3\",\n\"regenerator-runtime\": \"^0.13.7\",\n\"three\": \"^0.108.0\",\n",
        "sim_msg_3": "slate: updates React versions to 16.12.0 to match NextJS 10.0.1"
    },
    {
        "org_diff": "diff --git a/packages/react-native-renderer/src/__tests__/ReactNativeAttributePayload-test.internal.js b/a/packages/react-native-renderer/src/__tests__/ReactNativeAttributePayload-test.internal.js @@ -204,6 +204,19 @@ describe('ReactNativeAttributePayload', () => {\n     ).toEqual({foo: null}); // this should ideally be null. heuristic.\n   });\n \n+  it('handles attributes defined multiple times', () => {\n+    const validAttributes = {foo: true, style: {foo: true}};\n+    expect(diff({}, {foo: 4, style: {foo: 2}}, validAttributes)).toEqual({\n+      foo: 2,\n+    });\n+    expect(diff({foo: 4}, {style: {foo: 2}}, validAttributes)).toEqual({\n+      foo: 2,\n+    });\n+    expect(diff({style: {foo: 2}}, {foo: 4}, validAttributes)).toEqual({\n+      foo: 4,\n+    });\n+  });\n+\n   // Function properties are just markers to native that events should be sent.\n   it('should convert functions to booleans', () => {\n     // Note that if the property changes from one function to another, we don't",
        "sim_diff_0": "diff --git a/test/index.test.js b/test/index.test.js @@ -20,6 +20,83 @@ const DefinitionBuilder = require('../src/definition-builder');\nconst Enforcer = require('../index');\nconst expect = require('chai').expect;\n+describe('index/toPlainObject', () => {\n+\n+ it('returns primitive as is', () => {\n+ const result = Enforcer.toPlainObject('hello');\n+ expect(result).to.equal('hello');\n+ });\n+\n+ it('can handle plain object', () => {\n+ const o = { a: 1, b: 2, c: [1, 2] };\n+ const result = Enforcer.toPlainObject(o);\n+ expect(result).to.deep.equal(o);\n+ });\n+\n+ it('can handle array', () => {\n+ const o = [1, 2, { a: 1, b: 2 }];\n+ const result = Enforcer.toPlainObject(o);\n+ expect(result).to.deep.equal(o);\n+ });\n+\n+ describe('non plain object', () => {\n+ const d = new Date();\n+\n+ function A () {\n+ this.a = 1;\n+ this.d = d;\n+\n+ Object.defineProperty(this, 'c', {\n+ enumerable: true,\n+ value: 'c'\n+ })\n+ }\n+ A.prototype.f = function () { return 'function' };\n+ A.prototype.s = 'string';\n+ Object.defineProperty(A.prototype, 'b', { enumerable: true, value: true });\n+\n+ it('leaves Date alone', () => {\n+ const o = { d: d };\n+ const result = Enforcer.toPlainObject(o);\n+ expect(result).to.deep.equal(o);\n+ expect(result.d.constructor).to.equal(Date);\n+ });\n+\n+ it('can convert non-plain object', () => {\n+ const result = Enforcer.toPlainObject(new A());\n+ expect(result).to.deep.equal({\n+ a: 1,\n+ d: d,\n+ c: 'c'\n+ });\n+ expect(result.constructor).to.equal(Object);\n+ });\n+\n+ it('can convert non-plain object including inherited', () => {\n+ const result = Enforcer.toPlainObject(new A(), { allowInheritedProperties: true });\n+ expect(result).to.deep.equal({\n+ a: 1,\n+ d: d,\n+ c: 'c',\n+ s: 'string',\n+ b: true\n+ });\n+ expect(result.constructor).to.equal(Object);\n+ });\n+\n+ it('can preserve non-plain object', () => {\n+ const a = new A();\n+ const o = { a: a };\n+ const result = Enforcer.toPlainObject(o, { preserve: [ A ] });\n+ expect(result).to.deep.equal({ a: a });\n+ expect(result).not.to.equal(o);\n+ expect(result.a.constructor).to.equal(A);\n+ });\n+\n+ });\n+\n+});\n+\ndescribe('index/request', () => {\ndescribe('path parameters', () => {\n",
        "sim_msg_0": "test toPlainObject",
        "sim_diff_1": "diff --git a/src/components/Text.test.js b/src/components/Text.test.js // @flow\nimport React from \"react\";\n+import { PixelRatio } from \"react-native\";\nimport { shallow } from \"enzyme\";\nimport Markdown from \"react-native-easy-markdown\";\n-import Text from \"./Text\";\n+import Text, { cap } from \"./Text\";\nimport { lightNavyBlueColor } from \"../constants/colors\";\n+let getFontScaleSpy;\n+beforeEach(() => {\n+ getFontScaleSpy = jest.spyOn(PixelRatio, \"getFontScale\");\n+});\n+\nit(\"renders correctly\", () => {\nconst output = shallow(<Text>Some text</Text>);\nexpect(output).toMatchSnapshot();\n@@ -29,7 +35,6 @@ it(\"does not render markdown images\", () => {\n<Text markdown>![Test](https://placehold.it/320x320.png)</Text>\n);\nconst markdown = output.find(Markdown).shallow();\n- console.log(markdown);\nexpect(markdown).toMatchSnapshot();\n});\n@@ -46,3 +51,29 @@ it(\"renders text in blue when color is set\", () => {\nexpect(output.props().style).toContainEqual(style);\n});\n+\n+describe(\"cap\", () => {\n+ it(`creates rendered font size of 6 for input (12, 14) and font scale 0.5`, () => {\n+ getFontScaleSpy.mockReturnValue(0.5);\n+ expect(cap(12, 14) * 0.5).toBe(6);\n+ });\n+\n+ it(`creates rendered font size of 12 for input (12, 14) and font scale 1`, () => {\n+ getFontScaleSpy.mockReturnValue(1);\n+ expect(cap(12, 14) * 1).toBe(12);\n+ });\n+\n+ it(`creates rendered font size of 13.2 for input (12, 14) and font scale 1.1`, () => {\n+ getFontScaleSpy.mockReturnValue(1.1);\n+ expect(cap(12, 14) * 1.1).toBeCloseTo(13.2, 5);\n+ });\n+\n+ it(`creates rendered font size of 14 for input (12, 14) and font scale 1.5`, () => {\n+ getFontScaleSpy.mockReturnValue(1.5);\n+ expect(cap(12, 14) * 1.5).toBe(14);\n+ });\n+});\n+\n+afterEach(() => {\n+ getFontScaleSpy.mockRestore();\n+});\n",
        "sim_msg_1": "Add tests for cap function",
        "sim_diff_2": "diff --git a/packages/material-ui/src/NativeSelect/NativeSelectInput.test.js b/packages/material-ui/src/NativeSelect/NativeSelectInput.test.js import * as React from 'react';\nimport { expect } from 'chai';\nimport { spy } from 'sinon';\n-import { createShallow, createMount, describeConformance } from 'test/utils';\n+import { createMount, describeConformance, createClientRender } from 'test/utils';\nimport NativeSelectInput from './NativeSelectInput';\ndescribe('<NativeSelectInput />', () => {\n- let shallow;\nconst mount = createMount();\n+ const render = createClientRender();\nconst defaultProps = {\nclasses: { select: 'select' },\n+ onChange: () => {},\nvalue: 10,\nIconComponent: 'div',\nchildren: [\n@@ -24,10 +25,6 @@ describe('<NativeSelectInput />', () => {\n],\n};\n- before(() => {\n- shallow = createShallow();\n- });\n-\ndescribeConformance(<NativeSelectInput {...defaultProps} onChange={() => {}} />, () => ({\nmount,\nonly: ['refForwarding'],\n@@ -35,14 +32,15 @@ describe('<NativeSelectInput />', () => {\n}));\nit('should render a native select', () => {\n- const wrapper = shallow(\n+ const { container } = render(\n<NativeSelectInput {...defaultProps}>\n<option value={10}>Ten</option>\n<option value={20}>Twenty</option>\n<option value={30}>Thirty</option>\n</NativeSelectInput>,\n);\n- expect(wrapper.find('select').props().value).to.equal(10);\n+\n+ expect(container.firstChild.value).to.equal('10');\n});\nit('should respond to update event', () => {\n@@ -61,8 +59,8 @@ describe('<NativeSelectInput />', () => {\n});\nit('should apply outlined class', () => {\n- const outlined = 'class for outlined variant';\n- const wrapper = shallow(\n+ const outlined = 'outlined';\n+ const { container } = render(\n<NativeSelectInput\n{...defaultProps}\nvariant=\"outlined\"\n@@ -70,12 +68,12 @@ describe('<NativeSelectInput />', () => {\n/>,\n);\n- expect(wrapper.find(`.${defaultProps.classes.select}`).hasClass(outlined)).to.equal(true);\n+ expect(container.firstChild).to.have.class(outlined);\n});\nit('should apply filled class', () => {\n- const filled = 'class for filled variant';\n- const wrapper = shallow(\n+ const filled = 'filled';\n+ const { container } = render(\n<NativeSelectInput\n{...defaultProps}\nvariant=\"filled\"\n@@ -83,6 +81,6 @@ describe('<NativeSelectInput />', () => {\n/>,\n);\n- expect(wrapper.find(`.${defaultProps.classes.select}`).hasClass(filled)).to.equal(true);\n+ expect(container.firstChild).to.have.class(filled);\n});\n});\n",
        "sim_msg_2": "[test] Migrate NativeSelectInput to react-testing-library",
        "sim_diff_3": "diff --git a/packages/yoga/src/Result/native/Result.test.jsx b/packages/yoga/src/Result/native/Result.test.jsx @@ -2,7 +2,8 @@ import React from 'react';\nimport { render } from '@testing-library/react-native';\nimport { BuildingFilled } from '@gympass/yoga-icons';\n-import { ThemeProvider, Result } from '../../index.native';\n+import { ThemeProvider } from '../..';\n+import Result from './Result';\nimport Avatar from '../../Avatar';\nimport Text from '../../Text';\n",
        "sim_msg_3": "test: fix path of component"
    },
    {
        "org_diff": "diff --git a/packages/react/npm/jsx-dev-runtime.react-server.js b/a/packages/react/npm/jsx-dev-runtime.react-server.js @@ -1,7 +1,7 @@\n 'use strict';\n \n if (process.env.NODE_ENV === 'production') {\n-  module.exports = require('./cjs/react-jsx-dev-runtime.react-server.production.min.js');\n+  module.exports = require('./cjs/react-jsx-dev-runtime.react-server.production.js');\n } else {\n   module.exports = require('./cjs/react-jsx-dev-runtime.react-server.development.js');\n }",
        "sim_diff_0": "diff --git a/packages/node_modules/node-red/lib/red.js b/packages/node_modules/node-red/lib/red.js @@ -76,7 +76,7 @@ module.exports = {\napiEnabled = true;\nserver = httpServer;\n} else {\n- runtime.init(userSettings);\n+ runtime.init(userSettings, httpServer);\napiEnabled = false;\nif (httpServer) {\nserver = httpServer;\n",
        "sim_msg_0": "Pass httpServer to runtime even when httpAdmin disabled\nFixes",
        "sim_diff_1": "diff --git a/packages/node_modules/node-red/lib/red.js b/packages/node_modules/node-red/lib/red.js @@ -59,7 +59,7 @@ module.exports = {\napiEnabled = true;\nserver = runtime._.adminApi.server;\n- runtime.server = runtime._.adminApi.server;\n+ runtime._.server = runtime._.adminApi.server;\n} else {\nruntime.init(userSettings,redUtil);\napiEnabled = false;\n",
        "sim_msg_1": "Attach server object to the right part of runtime api",
        "sim_diff_2": "diff --git a/packages/node_modules/@node-red/nodes/core/network/21-httprequest.js b/packages/node_modules/@node-red/nodes/core/network/21-httprequest.js @@ -206,10 +206,11 @@ module.exports = function(RED) {\n}\n}\nvar parsedURL = new URL(url)\n- if (parsedURL.username) {\n+ this.credentials = this.credentials || {}\n+ if (parsedURL.username && !this.credentials.user) {\nthis.credentials.user = parsedURL.username\n}\n- if (parsedURL.password) {\n+ if (parsedURL.password && !this.credentials.password) {\nthis.credentials.password = parsedURL.password\n}\nif (Object.keys(this.credentials).length != 0) {\n",
        "sim_msg_2": "Prevent Overwite of configured creds",
        "sim_diff_3": "diff --git a/packages/node_modules/node-red/lib/red.js b/packages/node_modules/node-red/lib/red.js @@ -236,5 +236,5 @@ module.exports = {\n* @see @node-red/editor-api_auth\n* @memberof node-red\n*/\n- get diagnostics() { debugger; return api.diagnostics }\n+ get diagnostics() { return api.diagnostics }\n};\n",
        "sim_msg_3": "Update packages/node_modules/node-red/lib/red.js"
    },
    {
        "org_diff": "diff --git a/CHANGELOG.md b/a/CHANGELOG.md @@ -1,3 +1,7 @@\n+## 18.3.1 (April 26, 2024)\n+\n+- Export `act` from `react` [f1338f](https://github.com/facebook/react/commit/f1338f8080abd1386454a10bbf93d67bfe37ce85)\n+\n ## 18.3.0 (April 25, 2024)\n \n This release is identical to 18.2 but adds warnings for deprecated APIs and other changes that are needed for React 19.",
        "sim_diff_0": "diff --git a/CHANGELOG.md b/CHANGELOG.md @@ -3,6 +3,10 @@ All notable changes to this project will be documented in this file.\nThe format is based on [Keep a Changelog](http://keepachangelog.com) and this project adheres to [Semantic Versioning](http://semver.org).\n+## [0.3.0](https://github.com/remarkablemark/html-react-parser/compare/v0.2.0...v0.3.0) - 2016-11-18\n+### Changed\n+- Upgrade `react` and `react-dom` to >15.4\n+\n## [0.2.0](https://github.com/remarkablemark/html-react-parser/compare/v0.1.1...v0.2.0) - 2016-11-18\n### Added\n- Create npm script `clean` that removes `dist/` directory\n",
        "sim_msg_0": "Update CHANGELOG with v0.3.0",
        "sim_diff_1": "diff --git a/CHANGELOG b/CHANGELOG @@ -16,6 +16,8 @@ entered\n- Updated third-party libs to get rid of deprecation warnings for React v16\n- Fixed small bug in placing rules\n- Display error when failing to retrieve tilesetInfo\n+* Added support for cross-section tracks\n+\n=======\nv0.10.20 (2018-02-\n",
        "sim_msg_1": "Updated the CHANGELOG and merged section-tiles",
        "sim_diff_2": "diff --git a/CHANGELOG.md b/CHANGELOG.md @@ -28,6 +28,22 @@ In the current stage we aim to release a new version at least every month.\n- [ ] react: Feature/html attributes as react props (#2427 / @ajkachnic)\n- [ ] add chunkSize companion option (#2881 / @mifi)\n+## 1.28.1\n+\n+Released: 2021-05-11\n+\n+In this release the individual file progress in Dashboard was fixed.\n+\n+| Package | Version | Package | Version |\n+|-|-|-|-|\n+| @uppy/companion | 2.9.0 | @uppy/robodog | 1.10.9 |\n+| @uppy/core | 1.18.1 | @uppy/svelte | 0.1.9 |\n+| @uppy/dashboard | 1.19.1 | @uppy/vue | 0.2.2 |\n+| @uppy/react | 1.11.8 | uppy | 1.28.1 |\n+\n+- @uppy/companion: add chunkSize companion option (#2881 / @mifi)\n+- @uppy/dashboard: fix individual progress by renaming camelCased svg properties (#2882 / @arturi)\n+\n## 1.28.0\nReleased: 2021-05-05\n",
        "sim_msg_2": "1.28.1 changelog",
        "sim_diff_3": "diff --git a/CHANGELOG.md b/CHANGELOG.md @@ -4,6 +4,13 @@ All notable changes to this project will be documented in this file.\nThe format is based on [Keep a Changelog](http://keepachangelog.com)\nand this project adheres to [Semantic Versioning](http://semver.org).\n+## [Unreleased](https://github.com/remarkablemark/html-react-parser/compare/v0.3.6...HEAD)\n+### Added\n+- [react-dom-core](https://github.com/remarkablemark/react-dom-core) to dependencies (closes #43)\n+ - `react-dom` 16 no longer exposes `lib`, which includes the DOM property configs\n+ - Upgrade devDependencies of `react` and `react-dom` to 16\n+ - Update README and examples\n+\n## [0.3.6](https://github.com/remarkablemark/html-react-parser/compare/v0.3.5...v0.3.6) - 2017-09-30\n### Changed\n- Dependencies\n",
        "sim_msg_3": "chore(changelog): update changelog with `react-dom-core` addition"
    },
    {
        "org_diff": "diff --git a/CHANGELOG.md b/a/CHANGELOG.md @@ -1,3 +1,24 @@\n+## 18.3.0 (April 25, 2024)\n+\n+This release is identical to 18.2 but adds warnings for deprecated APIs and other changes that are needed for React 19.\n+\n+Read the [React 19 Upgrade Guide](https://react.dev/blog/2024/04/25/react-19-upgrade-guide) for more info.\n+\n+### React\n+\n+- Allow writing to `this.refs` to support string ref codemod [909071](https://github.com/facebook/react/commit/9090712fd3ca4e1099e1f92e67933c2cb4f32552)\n+- Warn for deprecated `findDOMNode` outside StrictMode [c3b283](https://github.com/facebook/react/commit/c3b283964108b0e8dbcf1f9eb2e7e67815e39dfb)\n+- Warn for deprecated `test-utils` methods [d4ea75](https://github.com/facebook/react/commit/d4ea75dc4258095593b6ac764289f42bddeb835c)\n+- Warn for deprecated Legacy Context outside StrictMode [415ee0](https://github.com/facebook/react/commit/415ee0e6ea0fe3e288e65868df2e3241143d5f7f)\n+- Warn for deprecated string refs outside StrictMode [#25383](https://github.com/facebook/react/pull/25383)\n+- Warn for deprecated `defaultProps` for function components [#25699](https://github.com/facebook/react/pull/25699)\n+- Warn when spreading `key` [#25697](https://github.com/facebook/react/pull/25697)\n+- Warn when using `act` from `test-utils` [d4ea75](https://github.com/facebook/react/commit/d4ea75dc4258095593b6ac764289f42bddeb835c)\n+\n+### React DOM\n+- Warn for deprecated `unmountComponentAtNode` [8a015b](https://github.com/facebook/react/commit/8a015b68cc060079878e426610e64e86fb328f8d)\n+- Warn for deprecated `renderToStaticNodeStream` [#28874](https://github.com/facebook/react/pull/28874)\n+\n ## 18.2.0 (June 14, 2022)\n \n ### React DOM",
        "sim_diff_0": "diff --git a/CHANGELOG.md b/CHANGELOG.md @@ -3,6 +3,10 @@ All notable changes to this project will be documented in this file.\nThe format is based on [Keep a Changelog](http://keepachangelog.com) and this project adheres to [Semantic Versioning](http://semver.org).\n+## [0.3.0](https://github.com/remarkablemark/html-react-parser/compare/v0.2.0...v0.3.0) - 2016-11-18\n+### Changed\n+- Upgrade `react` and `react-dom` to >15.4\n+\n## [0.2.0](https://github.com/remarkablemark/html-react-parser/compare/v0.1.1...v0.2.0) - 2016-11-18\n### Added\n- Create npm script `clean` that removes `dist/` directory\n",
        "sim_msg_0": "Update CHANGELOG with v0.3.0",
        "sim_diff_1": "diff --git a/CHANGELOG b/CHANGELOG @@ -16,6 +16,8 @@ entered\n- Updated third-party libs to get rid of deprecation warnings for React v16\n- Fixed small bug in placing rules\n- Display error when failing to retrieve tilesetInfo\n+* Added support for cross-section tracks\n+\n=======\nv0.10.20 (2018-02-\n",
        "sim_msg_1": "Updated the CHANGELOG and merged section-tiles",
        "sim_diff_2": "diff --git a/CHANGELOG.md b/CHANGELOG.md @@ -4,6 +4,13 @@ All notable changes to this project will be documented in this file.\nThe format is based on [Keep a Changelog](http://keepachangelog.com)\nand this project adheres to [Semantic Versioning](http://semver.org).\n+## [Unreleased](https://github.com/remarkablemark/html-react-parser/compare/v0.3.6...HEAD)\n+### Added\n+- [react-dom-core](https://github.com/remarkablemark/react-dom-core) to dependencies (closes #43)\n+ - `react-dom` 16 no longer exposes `lib`, which includes the DOM property configs\n+ - Upgrade devDependencies of `react` and `react-dom` to 16\n+ - Update README and examples\n+\n## [0.3.6](https://github.com/remarkablemark/html-react-parser/compare/v0.3.5...v0.3.6) - 2017-09-30\n### Changed\n- Dependencies\n",
        "sim_msg_2": "chore(changelog): update changelog with `react-dom-core` addition",
        "sim_diff_3": "diff --git a/CHANGELOG.md b/CHANGELOG.md @@ -3,6 +3,13 @@ All notable changes to this project will be documented in this file.\nThe format is based on [Keep a Changelog](http://keepachangelog.com) and this project adheres to [Semantic Versioning](http://semver.org).\n+## [0.0.5](https://github.com/remarkablemark/html-react-parser/compare/v0.0.4...v0.0.5) - 2016-08-30\n+### Changed\n+- Remove `key` parameter from `replace` and use `React.cloneElement` (#18)\n+\n+### Fixed\n+- Parsing of `<script>` and `<style>` tags (#20)\n+\n## [0.0.4](https://github.com/remarkablemark/html-react-parser/compare/v0.0.3...v0.0.4) - 2016-08-29\n### Added\n- Send coverage report generated by [istanbul](http://gotwarlost.github.io/istanbul/) to [coveralls](https://coveralls.io) (#12)\n",
        "sim_msg_3": "Update CHANGELOG with v0.0.5"
    },
    {
        "org_diff": "diff --git a/packages/react-reconciler/README.md b/a/packages/react-reconciler/README.md @@ -318,6 +318,30 @@ Same as `unhideInstance`, but for nodes created by `createTextInstance`.\n \n This method should mutate the `container` root node and remove all children from it.\n \n+#### `maySuspendCommit(type, props)`\n+\n+This method is called during render to determine if the Host Component type and props require some kind of loading process to complete before committing an update.\n+\n+#### `preloadInstance(type, props)`\n+\n+This method may be called during render if the Host Component type and props might suspend a commit. It can be used to initiate any work that might shorten the duration of a suspended commit.\n+\n+#### `startSuspendingCommit()`\n+\n+This method is called just before the commit phase. Use it to set up any necessary state while any Host Components that might suspend this commit are evaluated to determine if the commit must be suspended.\n+\n+#### `suspendInstance(type, props)`\n+\n+This method is called after `startSuspendingCommit` for each Host Component that indicated it might suspend a commit.\n+\n+#### `waitForCommitToBeReady()`\n+\n+This method is called after all `suspendInstance` calls are complete.\n+\n+Return `null` if the commit can happen immediately.\n+\n+Return `(initiateCommit: Function) => Function` if the commit must be suspended. The argument to this callback will initiate the commit when called. The return value is a cancellation function that the Reconciler can use to abort the commit.\n+\n ### Persistence Methods\n \n If you use the persistent mode instead of the mutation mode, you would still need the \"Core Methods\". However, instead of the Mutation Methods above you will implement a different set of methods that performs cloning nodes and replacing them at the root level. You can find a list of them in the \"Persistence\" section [listed in this file](https://github.com/facebook/react/blob/main/packages/react-reconciler/src/forks/ReactFiberConfig.custom.js). File an issue if you need help.",
        "sim_diff_0": "diff --git a/client/DeckEditor.jsx b/client/DeckEditor.jsx @@ -178,7 +178,12 @@ class InnerDeckEditor extends React.Component {\nlet card = _.find(this.props.cards, function(card) {\nif(pack && card.pack_cards.length) {\n- return card.name.toLowerCase() === cardName.toLowerCase() && card.pack_cards[0].pack.id === pack.id;\n+ if(card.name.toLowerCase() === cardName.toLowerCase()) {\n+ return _.find(card.pack_cards, function(packCard) {\n+ return packCard.pack.id === pack.id;\n+ });\n+ }\n+ return false;\n}\nreturn card.name.toLowerCase() === cardName.toLowerCase();\n});\n",
        "sim_msg_0": "some cards appear in multiple packs, check all for match",
        "sim_diff_1": "diff --git a/src/renderer/crypto-manager/add-token-container.jsx b/src/renderer/crypto-manager/add-token-container.jsx @@ -96,6 +96,14 @@ class AddTokenContainerComponent extends Component {\nthis.props.dispatch(addressBookOperations.resetAdd());\n}\n+ componentDidUpdate(prevProps) {\n+ if (prevProps.tokens.length !== this.props.tokens.length) {\n+ if (this.state.address !== '') {\n+ this.findToken(this.state.address);\n+ }\n+ }\n+ }\n+\nhandleBackClick = evt => {\nevt && evt.preventDefault();\nthis.props.dispatch(push('/main/crypto-manager'));\n@@ -118,26 +126,27 @@ class AddTokenContainerComponent extends Component {\nlet duplicate = (this.props.existingTokens || []).find(\nt => (t['address'] || '').toUpperCase() === (contractAddress || '').toUpperCase()\n);\n+ if (found && duplicate && duplicate['recordState'] === 0) {\n+ duplicate = null;\n+ }\nif (!found) {\ntry {\n// Search token info on blockchain and add it to tokens list\nawait this.props.dispatch(\ntokensOperations.addTokenOperation(contractAddress.toLowerCase())\n);\n- // Now try to find it again\n- found = (this.props.tokens || []).find(\n- t =>\n- (t['address'] || '').toUpperCase() ===\n- (contractAddress || '').toUpperCase()\n- );\n+\n+ this.setState({\n+ address: contractAddress,\n+ symbol: '',\n+ decimal: '',\n+ found: found,\n+ duplicate: duplicate\n+ });\n} catch (e) {\nconsole.log(e);\n}\n- }\n- // Check if the duplicate was removed\n- if (found && duplicate && duplicate['recordState'] === 0) {\n- duplicate = null;\n- }\n+ } else {\nthis.setState({\naddress: contractAddress,\nsymbol: found ? found.symbol : '',\n@@ -145,6 +154,7 @@ class AddTokenContainerComponent extends Component {\nfound: found,\nduplicate: duplicate\n});\n+ }\n} else {\nthis.setState({\naddress: contractAddress,\n",
        "sim_msg_1": "fix(check): add didUpdate so it check right aftef",
        "sim_diff_2": "diff --git a/src/renderer/address-book/main/index.jsx b/src/renderer/address-book/main/index.jsx @@ -44,6 +44,7 @@ class AddressBookContainer extends PureComponent {\n};\ncomponentDidMount() {\n+ console.log(this.props);\nthis.props.dispatch(addressBookOperations.loadAddressBook());\n}\n@@ -57,11 +58,11 @@ class AddressBookContainer extends PureComponent {\n}\nhandleAdd = () => {\n- this.props.dispatch(push('addressBookAdd'));\n+ this.props.dispatch(push('/main/addressBookAdd'));\n};\nhandleEdit = id => {\n- this.props.dispatch(push(`addressBookEdit/${id}`));\n+ this.props.dispatch(push(`/main/addressBookEdit/${id}`));\n};\nhandleDelete = id => {\n",
        "sim_msg_2": "fix: change addressbook from relative to absolute routing",
        "sim_diff_3": "diff --git a/src/renderer/kyc/application/current-application-container.jsx b/src/renderer/kyc/application/current-application-container.jsx @@ -71,7 +71,10 @@ class CurrentApplicationComponent extends Component {\n};\nhandleEdit = item => {\nif (item.options && item.options.length) {\n- this.setState({ showEditAttribute: true, editAttribute: this.state.selected[item.id] });\n+ this.setState({\n+ showEditAttribute: true,\n+ editAttribute: this.state.selected[item.id] || item.options[0]\n+ });\n} else {\nthis.setState({\nshowCreateAttribute: true,\n",
        "sim_msg_3": "fix(black-screen): add a fall back to get the selected attribute"
    },
    {
        "org_diff": "diff --git a/packages/react/src/jsx/ReactJSXElement.js b/a/packages/react/src/jsx/ReactJSXElement.js @@ -738,9 +738,7 @@ export function createElement(type, config, children) {\n         console.warn(\n           'Your app (or one of its dependencies) is using an outdated JSX ' +\n             'transform. Update to the modern JSX transform for ' +\n-            'faster performance: ' +\n-            // TODO: Create a short link for this\n-            'https://reactjs.org/blog/2020/09/22/introducing-the-new-jsx-transform.html',\n+            'faster performance: https://react.dev/link/new-jsx-transform',\n         );\n       }\n     }",
        "sim_diff_0": "diff --git a/src/components/ReactComponent.jsx b/src/components/ReactComponent.jsx @@ -10,6 +10,7 @@ export default class ReactComponent extends Field {\n*/\nconstructor(component, options, data) {\nsuper(component, options, data);\n+ this.reactInstance = null;\n}\n/**\n@@ -40,6 +41,15 @@ export default class ReactComponent extends Field {\nreturn super.render(`<div ref=\"react-${this.id}\"></div>`);\n}\n+ /**\n+ * Callback ref to store a reference to the node.\n+ *\n+ * @param element - the node\n+ */\n+ setReactInstance(element) {\n+ this.reactInstance = element;\n+ }\n+\n/**\n* The third phase of component building where the component has been attached to the DOM as 'element' and is ready\n* to have its javascript events attached.\n@@ -57,7 +67,7 @@ export default class ReactComponent extends Field {\n});\nif (this.refs[`react-${this.id}`]) {\n- this.reactInstance = this.attachReact(this.refs[`react-${this.id}`]);\n+ this.attachReact(this.refs[`react-${this.id}`], this.setReactInstance.bind(this));\nif (this.shouldSetValue) {\nthis.setValue(this.dataForSetting);\nthis.updateValue(this.dataForSetting);\n@@ -81,8 +91,9 @@ export default class ReactComponent extends Field {\n* Override this function to insert your custom component.\n*\n* @param element\n+ * @param ref - callback ref\n*/\n- attachReact(element) {\n+ attachReact(element, ref) {\nreturn;\n}\n",
        "sim_msg_0": "pass down a ref callback to custom component instead of relying the return value of React.render",
        "sim_diff_1": "diff --git a/src/components/app/App.jsx b/src/components/app/App.jsx @@ -147,7 +147,7 @@ export const App = () => {\n<div className={ styles.App } id=\"app\" >\n<AppContext.Provider value={{ state, setState, app }}>\n<Header setSelectedApp={ setSelectedApp } selectedApp={ selectedApp } />\n- <canvas className={ styles.canvas } ref={ canvasRef } id=\"canvas\" />\n+ <canvas className={ styles.canvas } ref={ canvasRef } />\n<Crosshair />\n<ActionMenu />\n<Settings />\n",
        "sim_msg_1": "Remove dead canvas id in React",
        "sim_diff_2": "diff --git a/src/new-components/app/App.jsx b/src/new-components/app/App.jsx +import * as THREE from 'three';\nimport React, { useState, useEffect, useRef } from 'react';\n+import classnames from 'classnames';\n+import logo from '../../logo.svg';\n+import MagicMenu from '../../MagicMenu.jsx';\n+import {defaultAvatarUrl} from '../../../constants';\n+import Header from '../../Header.jsx';\n+import Footer from '../../Footer.jsx';\nimport Webaverse from '../../../webaverse.js';\nimport * as universe from '../../../universe.js';\n-import metaversefileApi from '../../../metaversefile-api.js';\n-import { defaultAvatarUrl } from '../../../constants';\n+import metaversefileApi from '../../../metaversefile-api';\n+const { useLocalPlayer } = metaversefileApi;\n-import Header from '../../Header.jsx';\n-import Footer from '../../Footer.jsx';\nimport { Crosshair } from '../general/crosshair';\n-\nimport styles from './App.module.css';\nimport { PlayMode } from '../play-mode/index.jsx';\n+import dropManager from '../../../drop-manager.js';\n//\n@@ -53,7 +58,7 @@ export const App = () => {\n<div className={ styles.App } id=\"app\">\n<Header app={ app } />\n<Crosshair />\n- <canvas className={ styles.canvas } ref={ canvasRef } />\n+ <canvas id=\"canvas\" className={ styles.canvas } ref={ canvasRef } />\n<PlayMode />\n</div>\n);\n",
        "sim_msg_2": "Fix for initing avatar cause of imports missing.",
        "sim_diff_3": "diff --git a/packages/cx/src/ui/createFunctionalComponent.js b/packages/cx/src/ui/createFunctionalComponent.js @@ -5,7 +5,7 @@ export function createFunctionalComponent(factory) {\nlet props = args[0];\n//test if the component is invoked through JSX\n- if (args.length == 1 && props && Array.isArray(props.jsxAttributes)) {\n+ if (props && Array.isArray(props.jsxAttributes)) {\nlet result = factory(props);\nlet isArray = Array.isArray(result);\nif (isArray && result.length < 2) {\n",
        "sim_msg_3": "Fix one more edge case with functional components"
    },
    {
        "org_diff": "diff --git a/packages/react/src/__tests__/ReactProfilerComponent-test.internal.js b/a/packages/react/src/__tests__/ReactProfilerComponent-test.internal.js @@ -19,19 +19,13 @@ function loadModules({\n   enableProfilerTimer = true,\n   enableProfilerCommitHooks = true,\n   enableProfilerNestedUpdatePhase = true,\n-  enableProfilerNestedUpdateScheduledHook = false,\n-  replayFailedUnitOfWorkWithInvokeGuardedCallback = false,\n } = {}) {\n   ReactFeatureFlags = require('shared/ReactFeatureFlags');\n \n   ReactFeatureFlags.enableProfilerTimer = enableProfilerTimer;\n   ReactFeatureFlags.enableProfilerCommitHooks = enableProfilerCommitHooks;\n   ReactFeatureFlags.enableProfilerNestedUpdatePhase =\n     enableProfilerNestedUpdatePhase;\n-  ReactFeatureFlags.enableProfilerNestedUpdateScheduledHook =\n-    enableProfilerNestedUpdateScheduledHook;\n-  ReactFeatureFlags.replayFailedUnitOfWorkWithInvokeGuardedCallback =\n-    replayFailedUnitOfWorkWithInvokeGuardedCallback;\n \n   React = require('react');\n   ReactDOMClient = require('react-dom/client');",
        "sim_diff_0": "diff --git a/test/html-to-react.js b/test/html-to-react.js const assert = require('assert');\nconst React = require('react');\n-const parse = require('../');\n+const parse = require('..');\nconst { data, render } = require('./helpers/');\ndescribe('html-to-react', () => {\n+ describe('exports', () => {\n+ it('has default ES Module', () => {\n+ assert.strictEqual(parse.default, parse);\n+ });\n+\n+ it('has domToReact', () => {\n+ assert.strictEqual(parse.domToReact, require('../lib/dom-to-react'));\n+ });\n+\n+ it('contains htmlToDOM', () => {\n+ assert.strictEqual(parse.htmlToDOM, require('html-dom-parser'));\n+ });\n+ });\n+\ndescribe('parser', () => {\n[undefined, null, {}, [], 42].forEach(value => {\nit(`throws an error if first argument is ${value}`, () => {\n@@ -13,10 +27,6 @@ describe('html-to-react', () => {\n});\n});\n- it('has default ES Module defined', () => {\n- assert.strictEqual(parse.default, parse);\n- });\n-\nit('returns string if it cannot be parsed as HTML', () => {\nassert.strictEqual(parse('foo'), 'foo');\n});\n@@ -77,7 +87,7 @@ describe('html-to-react', () => {\ndescribe('options', () => {\ndescribe('replace', () => {\n- it('overrides the element if replace is valid', () => {\n+ it('overrides the element if a valid React element is returned', () => {\nconst html = data.html.complex;\nconst reactElement = parse(html, {\nreplace: node => {\n@@ -92,7 +102,7 @@ describe('html-to-react', () => {\n);\n});\n- it('does not override the element if replace is invalid', () => {\n+ it('does not override the element if an invalid React element is returned', () => {\nconst html = data.html.complex;\nconst reactElement = parse(html, {\nreplace: node => {\n@@ -115,9 +125,3 @@ describe('html-to-react', () => {\n});\n});\n});\n-\n-describe('dom-to-react', () => {\n- it('exports domToReact', () => {\n- assert.strictEqual(parse.domToReact, require('../lib/dom-to-react'));\n- });\n-});\n",
        "sim_msg_0": "test(html-to-react): tidy and organize tests in html-to-react.js",
        "sim_diff_1": "diff --git a/spec/fixtures/componentloader/node_modules/example/loader.js b/spec/fixtures/componentloader/node_modules/example/loader.js -noflo = require '../../../../../src/lib/NoFlo'\n+const noflo = require('../../../../../src/lib/NoFlo');\n-module.exports = (loader, callback) ->\n- loader.registerComponent 'example', 'Hello', ->\n- c = new noflo.Component\n- c.description = \"Hello stuff\"\n- c.icon = 'bicycle'\n- c.inPorts.add 'in',\n- datatype: 'all'\n- c.inPorts.add 'out',\n- datatype: 'all'\n- c.process = (input, output) ->\n- data = input.getData 'in'\n- output.sendDone\n- out: data\n- return\n- return c\n- callback null\n- return\n+module.exports = function(loader, callback) {\n+ loader.registerComponent('example', 'Hello', function() {\n+ const c = new noflo.Component;\n+ c.description = \"Hello stuff\";\n+ c.icon = 'bicycle';\n+ c.inPorts.add('in',\n+ {datatype: 'all'});\n+ c.inPorts.add('out',\n+ {datatype: 'all'});\n+ c.process = function(input, output) {\n+ const data = input.getData('in');\n+ output.sendDone({\n+ out: data});\n+ };\n+ return c;\n+ });\n+ callback(null);\n+};\n",
        "sim_msg_1": "decaffeinate: Convert loader.coffee to JS",
        "sim_diff_2": "diff --git a/packages/component-library/src/DemoJSONLoader/DemoJSONLoader.js b/packages/component-library/src/DemoJSONLoader/DemoJSONLoader.js -import React from \"react\";\n-import { string, arrayOf, node } from \"prop-types\";\n+import React, { useState, useEffect } from \"react\";\n+import { string, arrayOf, func } from \"prop-types\";\n/* global fetch */\n-class StorybookJSONLoader extends React.Component {\n- constructor(props) {\n- super(props);\n- this.state = {\n- data: null\n- };\n- }\n+const DemoJSONLoader = props => {\n+ const [data, setData] = useState(null);\n- componentDidMount() {\n- const { urls } = this.props;\n- const promisesArr = urls.map(url => {\n+ useEffect(() => {\n+ const promisesArr = props.urls.map(url => {\nreturn fetch(url)\n.then(response => response)\n.then(response =>\n@@ -25,26 +19,22 @@ class StorybookJSONLoader extends React.Component {\n}\n);\n});\n-\nPromise.all(promisesArr)\n- .then(data => this.setState({ data }))\n- // eslint-disable-next-line no-console\n- .catch(error => console.log(error));\n- }\n+ .then(data => setData(data))\n+ .catch(error => {\n+ throw new Error(error);\n+ });\n+ }, [props.urls[0]]);\n- render() {\n- const { data } = this.state;\n- const { children } = this.props;\nif (data === null) {\nreturn null;\n}\n- return data.length === 1 ? children(data[0]) : children(data);\n- }\n-}\n+ return data.length === 1 ? props.children(data[0]) : props.children(data);\n+};\n-StorybookJSONLoader.propTypes = {\n+DemoJSONLoader.propTypes = {\nurls: arrayOf(string).isRequired,\n- children: node\n+ children: func\n};\n-export default StorybookJSONLoader;\n+export default DemoJSONLoader;\n",
        "sim_msg_2": "Refactor DemoJSONLoader component to use React hooks",
        "sim_diff_3": "diff --git a/packages/fether-react/src/App/App.js b/packages/fether-react/src/App/App.js @@ -18,7 +18,6 @@ import ReactResizeDetector from 'react-resize-detector';\nimport Accounts from '../Accounts';\nimport BackupAccount from '../BackupAccount';\nimport Onboarding from '../Onboarding';\n-import RequireHealthOverlay from '../RequireHealthOverlay';\nimport Send from '../Send';\nimport Tokens from '../Tokens';\nimport Whitelist from '../Whitelist';\n@@ -61,7 +60,6 @@ class App extends Component {\n<div className='content'>\n<div className='window'>\n{/* Don't display child components requiring RPCs if API is not yet set */}\n- <RequireHealthOverlay require='connected' fullscreen>\n<Router>\n<Switch>\n{/* The next line is the homepage */}\n@@ -84,7 +82,6 @@ class App extends Component {\n<Redirect from='*' to='/' />\n</Switch>\n</Router>\n- </RequireHealthOverlay>\n</div>\n</div>\n</ReactResizeDetector>\n",
        "sim_msg_3": "fix: Remove RequireHealthOverlay from App component. Use on individual components instead"
    },
    {
        "org_diff": "diff --git a/scripts/rollup/bundles.js b/a/scripts/rollup/bundles.js @@ -879,9 +879,7 @@ const bundles = [\n \n   /******* React Cache (experimental, old) *******/\n   {\n-    // This is only used by our own tests.\n-    // We can delete it later.\n-    bundleTypes: [NODE_DEV, NODE_PROD],\n+    bundleTypes: [NODE_DEV, NODE_PROD, FB_WWW_DEV, FB_WWW_PROD],\n     moduleType: ISOMORPHIC,\n     entry: 'react-cache',\n     global: 'ReactCacheOld',",
        "sim_diff_0": "diff --git a/app_web/package.json b/app_web/package.json \"@rollup/plugin-replace\": \"^2.4.1\",\n\"concurrently\": \"^5.3.0\",\n\"eslint\": \"^6.8.0\",\n+ \"node-sass\": \"^6.0.0\",\n\"rollup\": \"^1.31.1\",\n\"rollup-plugin-commonjs\": \"^10.1.0\",\n\"rollup-plugin-copy\": \"^3.3.0\",\n\"rollup-plugin-node-builtins\": \"^2.1.2\",\n\"rollup-plugin-node-resolve\": \"^5.2.0\",\n\"rollup-plugin-scss\": \"^2.6.1\",\n- \"sass\": \"^1.32.8\",\n\"serve\": \"^11.3.0\"\n},\n\"bugs\": {\n",
        "sim_msg_0": "fix sass on macOS",
        "sim_diff_1": "diff --git a/scripts/build-js.js b/scripts/build-js.js @@ -5,7 +5,7 @@ const fs = require('fs');\nconst rollup = require('rollup');\nconst buble = require('@rollup/plugin-buble');\nconst replace = require('@rollup/plugin-replace');\n-const resolve = require('@rollup/plugin-node-resolve');\n+const resolve = require('@rollup/plugin-node-resolve').default;\nconst Terser = require('terser');\nconst config = require('./build-config.js');\n",
        "sim_msg_1": "Update build-js.js",
        "sim_diff_2": "diff --git a/ui/package.json b/ui/package.json \"@rollup/plugin-buble\": \"^0.21.1\",\n\"@rollup/plugin-json\": \"^4.0.2\",\n\"@rollup/plugin-node-resolve\": \"^7.1.0\",\n- \"@types/cordova\": \"^0.0.34\",\n- \"@types/electron-packager\": \"^14.0.0\",\n- \"@types/express\": \"^4.17.2\",\n- \"@types/lru-cache\": \"^5.1.0\",\n- \"@types/terser-webpack-plugin\": \"^2.2.0\",\n- \"@types/webpack\": \"^4.41.0\",\n- \"@types/webpack-bundle-analyzer\": \"^2.13.3\",\n- \"@types/webpack-dev-server\": \"^3.9.0\",\n\"babel-eslint\": \"^10.0.2\",\n\"babel-preset-es2015-rollup\": \"^3.0.0\",\n\"eslint\": \"^5.15.3\",\n",
        "sim_msg_2": "chore(ui): remove obsolete dev deps",
        "sim_diff_3": "diff --git a/rollup.config.browser.js b/rollup.config.browser.js @@ -20,7 +20,8 @@ let plugins = [\n'radium': [ 'Style', 'StyleRoot' ],\n'react': [ 'PureComponent', 'Component', 'PropTypes', 'Children', 'createElement' ],\n'react-dom': [ 'unstable_renderSubtreeIntoContainer', 'unmountComponentAtNode' ],\n- 'js-yaml': [ 'safeLoad', 'CORE_SCHEMA', 'Type', 'Schema' ]\n+ 'js-yaml': [ 'safeLoad', 'CORE_SCHEMA', 'Type', 'Schema' ],\n+ 'prop-types': [ 'bool', 'array', 'func', 'object', 'arrayOf', 'oneOfType', 'element', 'shape', 'string' ]\n}\n}),\nbabel({\n",
        "sim_msg_3": "Fix rollup errors"
    },
    {
        "org_diff": "diff --git a/.github/workflows/commit_artifacts.yml b/a/.github/workflows/commit_artifacts.yml @@ -210,7 +210,7 @@ jobs:\n           commit_user_email: ${{ github.actor }}@users.noreply.github.com\n           create_branch: true\n \n-  commit_fbsource_artifacts:\n+  commit_fbsource_artifacts_external_repo:\n     needs: download_artifacts\n     runs-on: ubuntu-latest\n     if: ${{ (github.ref == 'refs/heads/main' && needs.download_artifacts.outputs.fbsource_branch_count == '0') || github.ref == 'refs/heads/meta-fbsource' }}\n@@ -245,3 +245,39 @@ jobs:\n             DiffTrain build for commit https://github.com/facebook/react/commit/${{ github.sha }}.\n           commit_user_name: ${{ github.actor }}\n           commit_user_email: ${{ github.actor }}@users.noreply.github.com\n+\n+  commit_fbsource_artifacts:\n+    needs: download_artifacts\n+    if: ${{ (github.ref == 'refs/heads/main' && needs.download_artifacts.outputs.fbsource_branch_count == '0') || github.ref == 'refs/heads/meta-fbsource' }}\n+    runs-on: ubuntu-latest\n+    steps:\n+      - uses: actions/checkout@v4\n+        with:\n+          ref: builds/facebook-fbsource\n+      - name: Ensure clean directory\n+        run: rm -rf compiled\n+      - uses: actions/download-artifact@v3\n+        with:\n+          name: compiled-rn\n+          path: compiled-rn/\n+      - run: git status -u\n+      - name: Check if only the REVISION file has changed\n+        id: check_should_commit\n+        run: |\n+          if git status --porcelain | grep -qv '/REVISION$'; then\n+            echo \"should_commit=true\" >> \"$GITHUB_OUTPUT\"\n+          else\n+            echo \"should_commit=false\" >> \"$GITHUB_OUTPUT\"\n+          fi\n+      - name: Commit changes to branch\n+        if: steps.check_should_commit.outputs.should_commit == 'true'\n+        uses: stefanzweifel/git-auto-commit-action@v4\n+        with:\n+          commit_message: |\n+            ${{ github.event.head_commit.message }}\n+\n+            DiffTrain build for commit https://github.com/facebook/react/commit/${{ github.sha }}.\n+          branch: builds/facebook-fbsource\n+          commit_user_name: ${{ github.actor }}\n+          commit_user_email: ${{ github.actor }}@users.noreply.github.com\n+          create_branch: true",
        "sim_diff_0": "diff --git a/.github/workflows/deploy-to-artifacts.yml b/.github/workflows/deploy-to-artifacts.yml @@ -15,9 +15,12 @@ on:\ndescription: 'The base commit ref'\njobs:\n- pre:\n+ build:\nruns-on: ubuntu-latest\nenvironment: CI\n+ needs: pre\n+ outputs:\n+ sha: ${{steps.prep.outputs.sha}}\nsteps:\n- uses: actions/github-script@v3\nwith:\n@@ -31,13 +34,6 @@ jobs:\nstate: 'pending',\ntarget_url: `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`\n});\n- build:\n- runs-on: ubuntu-latest\n- environment: CI\n- needs: pre\n- outputs:\n- sha: ${{steps.prep.outputs.sha}}\n- steps:\n- id: prep\nuses: actions/github-script@v3\nwith:\n@@ -77,6 +73,18 @@ jobs:\nruns-on: ubuntu-latest\nneeds: pre\nsteps:\n+ - uses: actions/github-script@v3\n+ with:\n+ github-token: ${{secrets.ACTIVE_TOKEN}}\n+ script: |\n+ await github.repos.createCommitStatus({\n+ owner: context.repo.owner,\n+ repo: context.repo.repo,\n+ sha: context.payload.inputs.sha,\n+ context: context.workflow,\n+ state: 'pending',\n+ target_url: `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`\n+ });\n- uses: actions/checkout@v2\nwith:\nref: ${{ github.event.inputs.sha }}\n@@ -132,12 +140,6 @@ jobs:\ntasks.push('test-server-stable.yml');\nawait Promise.all(tasks.map(task => dispatchWorkflow(task)));\n-\n- post:\n- runs-on: ubuntu-latest\n- environment: CI\n- needs: test\n- steps:\n- uses: actions/github-script@v3\nwith:\ngithub-token: ${{secrets.ACTIVE_TOKEN}}\n@@ -150,13 +152,8 @@ jobs:\nstate: 'success',\ntarget_url: `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}#artifacts`\n});\n- failure:\n- runs-on: ubuntu-latest\n- environment: CI\n- needs: test\n- if: failure() || cancelled()\n- steps:\n- uses: actions/github-script@v3\n+ if: failure() || cancelled()\nwith:\ngithub-token: ${{secrets.ACTIVE_TOKEN}}\nscript: |\n@@ -169,4 +166,3 @@ jobs:\ntarget_url: `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`\n});\n\\ No newline at end of file\n-\n",
        "sim_msg_0": "ci: optimize statuses in the deploy workflow",
        "sim_diff_1": "diff --git a/.github/workflows/zips.yml b/.github/workflows/zips.yml @@ -79,7 +79,9 @@ jobs:\n- uses: actions/checkout@v2\nwith:\nrepository: ${{ github.repository }}.wiki\n- ref: main\n+ # GitHub Wikis use this term as their main branch; this cannot be\n+ # changed so we need to continue using it for now.\n+ ref: master\ntoken: ${{ secrets.GITHUB_PERSONAL_ACCESS_TOKEN }}\n- name: Download artifacts\nuses: actions/download-artifact@v1\n@@ -93,7 +95,7 @@ jobs:\ngit diff --staged --quiet && echo 'No changes to commit; exiting!' && exit 0\ngit pull --no-edit --quiet\ngit commit -m \"Build and publish ${{ github.ref }}\"\n- git push origin main\n+ git push origin master\nenv:\nGIT_AUTHOR_EMAIL: ${{ github.actor }}@users.noreply.github.com\nGIT_AUTHOR_NAME: ${{ github.actor }}\n@@ -108,7 +110,9 @@ jobs:\n- uses: actions/checkout@v2\nwith:\nrepository: ${{ github.repository }}.wiki\n- ref: main\n+ # GitHub Wikis use this term as their main branch; this cannot be\n+ # changed so we need to continue using it for now.\n+ ref: master\ntoken: ${{ secrets.GITHUB_PERSONAL_ACCESS_TOKEN }}\n- name: Prune PR files\nrun: |\n@@ -118,7 +122,7 @@ jobs:\ngit diff --staged --quiet && echo 'No changes to commit; exiting!' && exit 0\ngit pull --no-edit --quiet\ngit commit -m \"Prune refs/pull/${{ github.event.pull_request.number }}\"\n- git push origin main\n+ git push origin master\nenv:\nGIT_AUTHOR_EMAIL: ${{ github.actor }}@users.noreply.github.com\nGIT_AUTHOR_NAME: ${{ github.actor }}\n",
        "sim_msg_1": "Make note about Wikis using `master` branch name.",
        "sim_diff_2": "diff --git a/.github/workflows/build-pr.yml b/.github/workflows/build-pr.yml @@ -78,7 +78,7 @@ jobs:\ngit log --name-status HEAD^..HEAD\ngit push origin master --dry-run\nenv:\n- GIT_AUTHOR_EMAIL=${{ github.actor }}@users.noreply.github.com\n- GIT_AUTHOR_NAME=${{ github.actor }}\n- GIT_COMMITTER_EMAIL=${{ github.actor }}@users.noreply.github.com\n- GIT_COMMITTER_NAME=${{ github.actor }}\n+ GIT_AUTHOR_EMAIL: ${{ github.actor }}@users.noreply.github.com\n+ GIT_AUTHOR_NAME: ${{ github.actor }}\n+ GIT_COMMITTER_EMAIL: ${{ github.actor }}@users.noreply.github.com\n+ GIT_COMMITTER_NAME: ${{ github.actor }}\n",
        "sim_msg_2": "Fix env syntax.",
        "sim_diff_3": "diff --git a/.github/workflows/storybook.yml b/.github/workflows/storybook.yml @@ -59,15 +59,17 @@ jobs:\nname: storybook-files\npath: dist\n- name: Set branch environment variables\n+ id: branch-target\nif: github.event_name != 'pull_request'\nrun: |\n- echo \"::set-env name=TARGET_DIR::${GITHUB_REF##*/}\"\n+ echo \"::set-output name=dir::${GITHUB_REF##*/}\"\n- name: Set PR environment variables\n+ id: pr-target\nif: github.event_name == 'pull_request'\nenv:\nPULL_REQUEST_NUMBER: ${{ github.event.number }}\nrun: |\n- echo \"::set-env name=TARGET_DIR::pull/${PULL_REQUEST_NUMBER}\"\n+ echo \"::set-output name=dir::pull/${PULL_REQUEST_NUMBER}\"\n- name: Commit updates\nrun: |\nmkdir -p storybook/${TARGET_DIR}\n@@ -80,6 +82,7 @@ jobs:\ngit commit -m \"Deploy storybook for ${TARGET_DIR}.\"\ngit push origin gh-pages\nenv:\n+ TARGET_DIR: ${{ steps.branch-target.outputs.dir }}${{ steps.pr-target.outputs.dir }}\nGIT_AUTHOR_EMAIL: ${{ github.actor }}@users.noreply.github.com\nGIT_AUTHOR_NAME: ${{ github.actor }}\nGIT_COMMITTER_EMAIL: ${{ github.actor }}@users.noreply.github.com\n",
        "sim_msg_3": "Update the storybook workflow to use set-output instead of set-env."
    },
    {
        "org_diff": "diff --git a/packages/react-reconciler/src/ReactFiberCompleteWork.js b/a/packages/react-reconciler/src/ReactFiberCompleteWork.js @@ -329,7 +329,6 @@ function appendAllChildrenToContainer(\n     // children to find all the terminal nodes.\n     let node = workInProgress.child;\n     while (node !== null) {\n-      // eslint-disable-next-line no-labels\n       if (node.tag === HostComponent) {\n         let instance = node.stateNode;\n         if (needsVisibilityToggle && isHidden) {",
        "sim_diff_0": "diff --git a/packages/doc/src/components/Navigation/tree.js b/packages/doc/src/components/Navigation/tree.js @@ -20,7 +20,7 @@ const createObjectNesting = (routes, { title, url, linkable, order }) => {\nconst createTree = items => {\nconst filteredItems = items.filter(item => item);\n- let allRoutes = [];\n+ let allRoutes = {};\nfilteredItems.forEach(({ title, url, linkable, order }) => {\nconst explodedUrl = url.split('/').filter(item => item);\n",
        "sim_msg_0": "docs(yoga/doc): undo route object type",
        "sim_diff_1": "diff --git a/src/react/get-children.js b/src/react/get-children.js @@ -5,7 +5,7 @@ function processChildren(c) {\nReact.Children.toArray(c).forEach((child) => {\nif (child.type && child.type.displayName === 'SwiperSlide') {\nslides.push(child);\n- } else if (child.props.children) {\n+ } else if (child.props && child.props.children) {\nprocessChildren(child.props.children).forEach((slide) => slides.push(slide));\n}\n});\n@@ -27,7 +27,7 @@ function getChildren(c) {\nslides.push(child);\n} else if (child.props && child.props.slot && slots[child.props.slot]) {\nslots[child.props.slot].push(child);\n- } else if (child.props.children) {\n+ } else if (child.props && child.props.children) {\nconst foundSlides = processChildren(child.props.children);\nif (foundSlides.length > 0) {\nfoundSlides.forEach((slide) => slides.push(slide));\n",
        "sim_msg_1": "double check for child.props",
        "sim_diff_2": "diff --git a/packages/fether-react/src/BackupAccount/BackupAccount.js b/packages/fether-react/src/BackupAccount/BackupAccount.js @@ -49,6 +49,12 @@ class BackupAccount extends Component {\n.then(res => {\nif (res) {\ncreateAccountStore.clear();\n+ /*\n+ FIXME: this timeout is a placeholder for after the backup file is saved.\n+ AFAICT there is no callback from FileSaver.saveAs() so I'm not sure how to handle this yet.\n+ If it just goes straight to the accounts page it's not clear anything happened at all, and\n+ a little loading time however arbitrary at least gives the sense that something's happened.\n+ */\nsetTimeout(() => history.push(`/accounts`), 3000);\n}\n})\n",
        "sim_msg_2": "add comment about timeout after backup file",
        "sim_diff_3": "diff --git a/packages/idyll-document/src/runtime.js b/packages/idyll-document/src/runtime.js @@ -154,7 +154,7 @@ const createWrapper = ({ theme, layout }) => {\nhandleFormatComponent(info) {\nconst allProps = Object.keys(info.props);\n// TODO -- should we display children prop? Probly not\n- const valuesInParagraphs = allProps.map((prop) => {\n+ const valuesOfProps = allProps.map((prop) => {\nconst val = info.props[prop];\nif (val) {\nlet propertyValue = null;\n@@ -175,7 +175,7 @@ const createWrapper = ({ theme, layout }) => {\nreturn (\n<p>\nThis component's type is {info.type.name ? info.type.name : info.type}\n- <ul>{valuesInParagraphs}</ul>\n+ <ul>{valuesOfProps}</ul>\n</p>\n);\n}\n",
        "sim_msg_3": "rename props value variable"
    },
    {
        "org_diff": "diff --git a/packages/react-native-renderer/src/ReactNativeTypes.js b/a/packages/react-native-renderer/src/ReactNativeTypes.js @@ -174,6 +174,25 @@ export type TouchedViewDataAtPoint = $ReadOnly<{\n   ...InspectorData,\n }>;\n \n+export type RenderRootOptions = {\n+  onUncaughtError?: (\n+    error: mixed,\n+    errorInfo: {+componentStack?: ?string},\n+  ) => void,\n+  onCaughtError?: (\n+    error: mixed,\n+    errorInfo: {\n+      +componentStack?: ?string,\n+      // $FlowFixMe[unclear-type] unknown props and state.\n+      +errorBoundary?: ?React$Component<any, any>,\n+    },\n+  ) => void,\n+  onRecoverableError?: (\n+    error: mixed,\n+    errorInfo: {+componentStack?: ?string},\n+  ) => void,\n+};\n+\n /**\n  * Flat ReactNative renderer bundles are too big for Flow to parse efficiently.\n  * Provide minimal Flow typing for the high-level RN API and call it a day.\n@@ -202,6 +221,7 @@ export type ReactNativeType = {\n     element: Element<ElementType>,\n     containerTag: number,\n     callback: ?() => void,\n+    options: ?RenderRootOptions,\n   ): ?ElementRef<ElementType>,\n   unmountComponentAtNode(containerTag: number): void,\n   unmountComponentAtNodeAndRemoveContainer(containerTag: number): void,\n@@ -215,24 +235,6 @@ export opaque type InternalInstanceHandle = mixed;\n type PublicInstance = mixed;\n type PublicTextInstance = mixed;\n \n-export type RenderRootOptions = {\n-  onUncaughtError?: (\n-    error: mixed,\n-    errorInfo: {+componentStack?: ?string},\n-  ) => void,\n-  onCaughtError?: (\n-    error: mixed,\n-    errorInfo: {\n-      +componentStack?: ?string,\n-      +errorBoundary?: ?React$Component<any, any>,\n-    },\n-  ) => void,\n-  onRecoverableError?: (\n-    error: mixed,\n-    errorInfo: {+componentStack?: ?string},\n-  ) => void,\n-};\n-\n export type ReactFabricType = {\n   findHostInstance_DEPRECATED<TElementType: ElementType>(\n     componentOrHandle: ?(ElementRef<TElementType> | number),",
        "sim_diff_0": "diff --git a/generators/client/templates/react/src/main/webapp/app/shared/error/error-loading.tsx.ejs b/generators/client/templates/react/src/main/webapp/app/shared/error/error-loading.tsx.ejs @@ -2,14 +2,12 @@ import React from 'react';\nimport { Translate } from 'react-jhipster';\nimport { Alert } from 'reactstrap';\n-class ErrorLoading extends React.Component {\n- render() {\n+const ErrorLoading = () => {\nreturn (\n<div>\n<Alert color=\"danger\">Error loading component</Alert>\n</div>\n);\n- }\n-}\n+};\nexport default ErrorLoading as React.ComponentType<any>;\n",
        "sim_msg_0": "Convert ErrorLoading to function component",
        "sim_diff_1": "diff --git a/packages/component-library/src/HexOverlay/HexOverlay.test.js b/packages/component-library/src/HexOverlay/HexOverlay.test.js @@ -3,29 +3,29 @@ import { shallow } from 'enzyme';\nimport HexOverlay from './HexOverlay';\ndescribe('HexOverlay', () => {\n- // const mapboxStyle = 'mapbox://styles/themendozaline/cjg6296ub04ot2sqv9izku3qq';\n- // const mapboxToken = 'pk.eyJ1IjoidGhlbWVuZG96YWxpbmUiLCJhIjoiY2o1aXdoem1vMWtpNDJ3bnpqaGF1bnlhNSJ9.sjTrNKLW9daDBIGvP3_W0w';\n- //\n- // const defaultProps = {\n- // mapboxStyle,\n- // mapboxToken,\n- // };\n-\n- // it('should render a container div', () => {\n- // const wrapper = shallow( <HexOverlay {...defaultProps} />);\n- //\n- // expect(wrapper.find('div')).to.have.length(1);\n- // });\n- //\n- // it('should render a MapGL component', () => {\n- // const wrapper = shallow(<HexOverlay {...defaultProps} />);\n- //\n- // expect(wrapper.find('.MapGL')).to.have.length(1);\n- // });\n- //\n- // it('should have required prop mapboxApiAccessToken', () => {\n- // const wrapper = shallow(<HexOverlay {...defaultProps} />);\n- //\n- // expect(wrapper.find('.MapGL').prop('mapboxApiAccessToken')).to.eql(defaultProps.mapboxToken);\n- // });\n+ const mapboxStyle = 'mapbox://styles/themendozaline/cjg6296ub04ot2sqv9izku3qq';\n+ const mapboxToken = 'pk.eyJ1IjoidGhlbWVuZG96YWxpbmUiLCJhIjoiY2o1aXdoem1vMWtpNDJ3bnpqaGF1bnlhNSJ9.sjTrNKLW9daDBIGvP3_W0w';\n+\n+ const defaultProps = {\n+ mapboxStyle,\n+ mapboxToken,\n+ };\n+\n+ it('should render a container div', () => {\n+ const wrapper = shallow( <HexOverlay {...defaultProps} />);\n+\n+ expect(wrapper.find('div')).to.have.length(1);\n+ });\n+\n+ it('should render a MapGL component', () => {\n+ const wrapper = shallow(<HexOverlay {...defaultProps} />);\n+\n+ expect(wrapper.find('.MapGL')).to.have.length(1);\n+ });\n+\n+ it('should have required prop mapboxApiAccessToken', () => {\n+ const wrapper = shallow(<HexOverlay {...defaultProps} />);\n+\n+ expect(wrapper.find('.MapGL').prop('mapboxApiAccessToken')).to.eql(defaultProps.mapboxToken);\n+ });\n});\n",
        "sim_msg_1": "add tests to HexOverlay",
        "sim_diff_2": "diff --git a/packages/manager/modules/sms/src/sms/compose/telecom-sms-sms-compose.controller.js b/packages/manager/modules/sms/src/sms/compose/telecom-sms-sms-compose.controller.js @@ -126,10 +126,10 @@ export default class {\n}).then(senders => each(senders, (sender) => {\nif (sender.type === 'virtual') {\nthis.senders.virtual.push(sender);\n- } else if (/\\d+/.test(sender.sender)) {\n- this.senders.other.push(sender);\n- } else {\n+ } else if (sender.type === 'alpha') {\nthis.senders.alphanumeric.push(sender);\n+ } else {\n+ this.senders.other.push(sender);\n}\n})).then(() => {\nthis.service = this.TucSmsMediator.getCurrentSmsService();\n@@ -235,7 +235,7 @@ export default class {\n* @return {Object}\n*/\nshowAdvice() {\n- const isRealNumber = /[0-9+]/.test(this.sms.sender)\n+ const isRealNumber = /^[0-9+]*$/.test(this.sms.sender)\n&& !this.isVirtualNumber();\nthis.displaySenderCustomizationAdvice = isRealNumber\n",
        "sim_msg_2": "fix(sms.compose.sender): fix regex to detect alphanum number\nref:",
        "sim_diff_3": "diff --git a/pro-gallery-renderer/src/components/gallery/galleryContainer.js b/pro-gallery-renderer/src/components/gallery/galleryContainer.js @@ -56,6 +56,7 @@ export class GalleryContainer extends React.Component {\nthis.reRenderForResize = this.reRenderForResize.bind(this);\nthis.reRenderForOrientation = this.reRenderForOrientation.bind(this);\nthis.reRenderForEditMode = this.reRenderForEditMode.bind(this);\n+ this.reRenderForDevice = this.reRenderForDevice.bind(this);\nthis.onResizeEvent = this.onResizeEvent.bind(this);\nlet debouncer = _.throttle;\n@@ -309,7 +310,7 @@ export class GalleryContainer extends React.Component {\nif (utils.isInWix() || utils.isWixIframe()) {\nthis.wixEventsFunctions.push([Wix.Events.STYLE_PARAMS_CHANGE, this.reRenderForStyles]);\nthis.wixEventsFunctions.push([Wix.Events.SETTINGS_UPDATED, this.reRenderForSettings]);\n- this.wixEventsFunctions.push([Wix.Events.DEVICE_TYPE_CHANGED, this.reRenderForOrientation]);\n+ this.wixEventsFunctions.push([Wix.Events.DEVICE_TYPE_CHANGED, this.reRenderForDevice]);\nthis.wixEventsFunctions.push([Wix.Events.EDIT_MODE_CHANGE, this.reRenderForEditMode]);\nthis.wixEventsFunctions.push([Wix.Events.SCROLL, this.reRenderForScroll]);\n// this.pubsubFunctions.push(['multishare2gallery', this.updateMultishareItems]);\n@@ -2654,6 +2655,14 @@ export class GalleryContainer extends React.Component {\nthis.reRender(this.renderTriggers.STYLES);\n}\n+ reRenderForDevice() {\n+ if (utils.isDev()) {\n+ console.count('galleryContainer reRenderForDevice');\n+ }\n+\n+ this.reRender(this.renderTriggers.LAYOUT);\n+ }\n+\nreRenderForStyles() {\nif (utils.isDev()) {\n",
        "sim_msg_3": "[pgr] fix (galleryContainer): add reRenderForDevice"
    },
    {
        "org_diff": "diff --git a/packages/internal-test-utils/__tests__/ReactInternalTestUtils-test.js b/a/packages/internal-test-utils/__tests__/ReactInternalTestUtils-test.js @@ -2146,7 +2146,7 @@ describe('ReactInternalTestUtils console assertions', () => {\n         - Expected errors\n         + Received errors\n \n-        - This is a complete different message that happens to start with \"T\"\n+        - This is a completely different message that happens to start with \"T\"\n         + Message that happens to contain a \"T\" <component stack>\"\n       `);\n     });",
        "sim_diff_0": "diff --git a/test/Utils/UtilsParser.test.js b/test/Utils/UtilsParser.test.js @@ -102,7 +102,9 @@ describe('#utilsParser', () => {\nparseFunction({});\n} catch (e) {\nassert(e instanceof UtilsError.UtilsParsingError, 'Incorrect error thrown');\n+ return;\n}\n+ should.fail(\"No error was thrown\");\n});\nit('should test error handling', () => {\n",
        "sim_msg_0": "made some changes.. should.fail added to the end after try..catch suggested by \"If the function doesn't throw, then the test will be green\"",
        "sim_diff_1": "diff --git a/test/utils.test.js b/test/utils.test.js @@ -280,6 +280,10 @@ describe('#Utils', () => {\nexpect(utils.getErrorPcc(null)).to.be.a('null');\n});\n+ it('should not break on any other string', () => {\n+ expect(utils.getErrorPcc('123')).to.equal(null);\n+ });\n+\nit('should work with correct data', () => {\nexpect(utils.getErrorPcc('NO AGREEMENT EXISTS FOR AGENCY - 38KP')).to.equal('38KP');\n});\n",
        "sim_msg_1": "Added one more test with random string.",
        "sim_diff_2": "diff --git a/test/test-project/test.js b/test/test-project/test.js @@ -81,7 +81,9 @@ test('creates the expected output', () => {\n})\ntest('creates the expected build artifacts', () => {\n- expect(projectIdyllResults).toEqual(EXPECTED_IDYLL_RESULTS);\n+ Object.keys(projectIdyllResults).forEach((key) => {\n+ expect(projectIdyllResults[key]).toEqual(EXPECTED_IDYLL_RESULTS[key]);\n+ })\n})\ntest('should include npm components', () => {\n",
        "sim_msg_2": "Test each artifact separately for easier debugging",
        "sim_diff_3": "diff --git a/renderer/components/onboard/__tests__/QuizSteps.test.js b/renderer/components/onboard/__tests__/QuizSteps.test.js @@ -107,4 +107,50 @@ describe('Tests for QuizSteps', () => {\nfireEvent.click(continueButton2)\nexpect(onQuizComplete).toHaveBeenCalledTimes(1)\n})\n+ test('User Story with first input incorrect and second input correct', async () => {\n+ const falseButton1 = screen.getByText(English['Onboarding.PopQuiz.False'])\n+ fireEvent.click(falseButton1)\n+ const lottiePlayer1 = screen.getByTestId('quiz-steps-cross')\n+ await waitForElementToBeRemoved(lottiePlayer1, { timeout: 2000 })\n+ const warningParagraph1 = screen.getByText(\n+ English['Onboarding.PopQuiz.1.Wrong.Paragraph']\n+ )\n+ const continueButton1 = screen.getByText(\n+ English['Onboarding.PopQuiz.Wrong.Button.Continue']\n+ )\n+ expect(warningParagraph1).toBeInTheDocument()\n+ fireEvent.click(continueButton1)\n+ const quizHeading2 = await screen.findByText(\n+ English['Onboarding.PopQuiz.2.Title']\n+ )\n+ expect(quizHeading2).toBeInTheDocument()\n+ const yesButton2 = screen.getByText(English['Onboarding.PopQuiz.True'])\n+ fireEvent.click(yesButton2)\n+ const lottiePlayerSecond = screen.getByTestId('quiz-steps-tick')\n+ await waitForElementToBeRemoved(lottiePlayerSecond, { timeout: 2000 })\n+ expect(onQuizComplete).toHaveBeenCalledTimes(1)\n+ })\n+ test('User Story with first input correct and second input incorrect', async () => {\n+ const yesButton1 = screen.getByText(English['Onboarding.PopQuiz.True'])\n+ fireEvent.click(yesButton1)\n+ const lottiePlayerFirst = screen.getByTestId('quiz-steps-tick')\n+ await waitForElementToBeRemoved(lottiePlayerFirst, { timeout: 2000 })\n+ const quizHeading2 = await screen.findByText(\n+ English['Onboarding.PopQuiz.2.Title']\n+ )\n+ expect(quizHeading2).toBeInTheDocument()\n+ const falseButton2 = screen.getByText(English['Onboarding.PopQuiz.False'])\n+ fireEvent.click(falseButton2)\n+ const lottiePlayer2 = screen.getByTestId('quiz-steps-cross')\n+ await waitForElementToBeRemoved(lottiePlayer2, { timeout: 2000 })\n+ const warningParagraph2 = screen.getByText(\n+ English['Onboarding.PopQuiz.2.Wrong.Paragraph']\n+ )\n+ const continueButton2 = screen.getByText(\n+ English['Onboarding.PopQuiz.Wrong.Button.Continue']\n+ )\n+ expect(warningParagraph2).toBeInTheDocument()\n+ fireEvent.click(continueButton2)\n+ expect(onQuizComplete).toHaveBeenCalledTimes(1)\n+ })\n})\n",
        "sim_msg_3": "Test written covering all four possible user inputs in QuizSteps.js"
    },
    {
        "org_diff": "diff --git a/packages/shared/ReactFeatureFlags.js b/a/packages/shared/ReactFeatureFlags.js @@ -116,8 +116,6 @@ export const alwaysThrottleRetries = true;\n \n export const passChildrenWhenCloningPersistedNodes = false;\n \n-export const enableUseDeferredValueInitialArg = __EXPERIMENTAL__;\n-\n export const enableServerComponentLogs = __EXPERIMENTAL__;\n \n /**\n@@ -191,6 +189,9 @@ export const disableDOMTestUtils = true;\n // Make <Context> equivalent to <Context.Provider> instead of <Context.Consumer>\n export const enableRenderableContext = true;\n \n+// Enables the `initialValue` option for `useDeferredValue`\n+export const enableUseDeferredValueInitialArg = true;\n+\n // -----------------------------------------------------------------------------\n // Chopping Block\n //",
        "sim_diff_0": "diff --git a/components/App.js b/components/App.js @@ -326,7 +326,7 @@ export const App = (props) => {\n`;\n}\n-export const updateProps = (newProps, cb) => {\n+export const updateProps = newProps => {\nconst appContainer = document.getElementById('appContainer');\nfor (let k in newProps) {\nappState[k] = newProps[k];\n@@ -343,18 +343,14 @@ export const updateProps = (newProps, cb) => {\nappContainer.innerHTML = App(appState);\nsetBindings(appContainer, onclickBindings);\n}\n- if (cb) {\n- cb();\n- }\n}\nwindow.addEventListener('stateChanged', (e) => {\nconst changedState = getSpecificState(e.detail.changedKeys);\n- const cb = e.detail.cb ? e.detail.cb : null;\nfor (let k in changedState) {\nappState[k] = changedState[k];\n}\n- updateProps(changedState, cb);\n+ updateProps(changedState);\n})\nwindow.addEventListener('load', () => {\n",
        "sim_msg_0": "Remove cb from App.js",
        "sim_diff_1": "diff --git a/components/App.js b/components/App.js @@ -54,7 +54,7 @@ export const updateProps = (newProps) => {\nappState[k] = newProps[k];\n}\n}\n- if (appState.pointerLock || appState.isXR) {\n+ if (appState.pointerLock || appState.isXR || !appState.selectedWeapon) {\nappContainer.style.display = 'none';\nappContainer.innerHTML = '';\nsetBindings(null, onclickBindings);\n",
        "sim_msg_1": "fix camera locked",
        "sim_diff_2": "diff --git a/components/core/NewWebsitePrototypeHeader.js b/components/core/NewWebsitePrototypeHeader.js @@ -176,14 +176,13 @@ const openNavLink = {\nexport const NewWebsitePrototypeHeader = (props) => {\nconst [open, setOpen] = useState(false);\n-\nconst communityURL = \"/community\";\nconst signInURL = \"/_\";\nconst styleMenu = open ? openMenu : null;\n- const styleNavLink = open ? openNavLink : null;\nconst styleBurgerBun = open ? openBurgerBun : null;\nconst styleBurgerMeat = open ? openBurgerMeat : null;\nconst styleBurgerBun2 = open ? openBurgerBun2 : null;\n+ const styleNavLink = open ? openNavLink : null;\nreturn (\n<div css={STYLES_CONTAINER} style={props.style}>\n@@ -200,18 +199,15 @@ export const NewWebsitePrototypeHeader = (props) => {\nSign in\n</a>\n</div>\n- <div css={STYLES_MOBILENAV} open={open}>\n+ <div css={STYLES_MOBILENAV}>\n<div onClick={() => setOpen(!open)} css={STYLES_BURGER}>\n<div css={STYLES_BURGER_BUN} style={styleBurgerBun} />\n<div css={STYLES_BURGER_MEAT} style={styleBurgerMeat} />\n<div css={STYLES_BURGER_BUN2} style={styleBurgerBun2} />\n</div>\n<div css={STYLES_MENU} style={styleMenu}>\n- <a css={STYLES_NAVLINK} style={styleNavLink} href={designSystemURL}>\n- Design system\n- </a>\n- <a css={STYLES_NAVLINK} style={styleNavLink} href={viewSourceURL}>\n- View source\n+ <a css={STYLES_NAVLINK} style={styleNavLink} href={communityURL}>\n+ Get involved\n</a>\n<a css={STYLES_NAVLINK} style={styleNavLink} href={signInURL}>\nSign in\n",
        "sim_msg_2": "header bug fixes",
        "sim_diff_3": "diff --git a/package.json b/package.json \"react-input-mask\": \"^0.7.0\",\n\"react-pagify\": \"^2.1.1\",\n\"react-redux\": \"^4.4.5\",\n- \"react-router\": \"^4.0.0-alpha.4\",\n+ \"react-router\": \"^4.0.0-beta.3\",\n\"react-signature-canvas\": \"^0.1.3\",\n\"react-widgets\": \"^3.4.4\",\n\"reactabular\": \"^3.0.5\",\n",
        "sim_msg_3": "Bump dependency number."
    },
    {
        "org_diff": "diff --git a/packages/react-server/src/ReactServerStreamConfigBun.js b/a/packages/react-server/src/ReactServerStreamConfigBun.js @@ -13,6 +13,7 @@ type BunReadableStreamController = ReadableStreamController & {\n   end(): mixed,\n   write(data: Chunk | BinaryChunk): void,\n   error(error: Error): void,\n+  flush?: () => void,\n };\n export type Destination = BunReadableStreamController;\n \n@@ -25,8 +26,12 @@ export function scheduleWork(callback: () => void) {\n }\n \n export function flushBuffered(destination: Destination) {\n-  // WHATWG Streams do not yet have a way to flush the underlying\n-  // transform streams. https://github.com/whatwg/streams/issues/960\n+  // Bun direct streams provide a flush function.\n+  // If we don't have any more data to send right now.\n+  // Flush whatever is in the buffer to the wire.\n+  if (typeof destination.flush === 'function') {\n+    destination.flush();\n+  }\n }\n \n export function beginWriting(destination: Destination) {}",
        "sim_diff_0": "diff --git a/packages/node_modules/@node-red/nodes/core/function/89-delay.js b/packages/node_modules/@node-red/nodes/core/function/89-delay.js @@ -153,15 +153,26 @@ module.exports = function(RED) {\n}\nelse if (node.pauseType === \"rate\") {\nnode.on(\"input\", function(msg) {\n+ if (msg.hasOwnProperty(\"reset\")) {\n+ if (node.intervalID !== -1 ) {\n+ clearInterval(node.intervalID);\n+ node.intervalID = -1;\n+ }\n+ node.buffer = [];\n+ node.status({text:\"reset\"});\n+ return;\n+ }\nif (!node.drop) {\n+ var m = RED.util.cloneMessage(msg);\n+ delete m.flush;\nif (node.intervalID !== -1) {\n- if (!msg.hasOwnProperty(\"flush\")) {\n- node.buffer.push(msg);\n+ //if (!msg.hasOwnProperty(\"flush\")) {\n+ node.buffer.push(m);\nnode.reportDepth();\n- }\n+ //}\n}\nelse {\n- node.send(msg);\n+ node.send(m);\nnode.reportDepth();\nnode.intervalID = setInterval(function() {\nif (node.buffer.length === 0) {\n@@ -174,6 +185,12 @@ module.exports = function(RED) {\nnode.reportDepth();\n}, node.rate);\n}\n+ if (msg.hasOwnProperty(\"flush\")) {\n+ while (node.buffer.length > 0) {\n+ node.send(node.buffer.shift());\n+ }\n+ node.status({});\n+ }\n}\nelse {\nvar timeSinceLast;\n@@ -189,18 +206,6 @@ module.exports = function(RED) {\nnode.send(msg);\n}\n}\n- if (msg.hasOwnProperty(\"reset\")) {\n- clearInterval(node.intervalID);\n- node.intervalID = -1;\n- node.buffer = [];\n- node.status({text:\"reset\"});\n- }\n- if (msg.hasOwnProperty(\"flush\")) {\n- while (node.buffer.length > 0) {\n- node.send(node.buffer.shift());\n- }\n- node.status({});\n- }\n});\nnode.on(\"close\", function() {\nclearInterval(node.intervalID);\n",
        "sim_msg_0": "Fix delay to not pass through .reset and .flush props consistently\nto close\n(it used to not pass them through but did on initial message... now it doesn't)",
        "sim_diff_1": "diff --git a/src/parser.js b/src/parser.js @@ -12,6 +12,7 @@ export default class Parser {\nthis.annotations = new AnnotationsApi(env)\nthis.annotations.addAnnotations(additionalAnnotations)\nthis.scssParser = new ScssCommentParser(this.annotations.list, env)\n+ this.includeUnknownContexts = env.theme && env.theme.includeUnknownContexts\nthis.scssParser.commentParser.on('warning', warning => {\nenv.emit('warning', new errors.Warning(warning.message))\n@@ -24,7 +25,7 @@ export default class Parser {\n/**\n* Invoke the `resolve` function of an annotation if present.\n- * Called with all found annotations except with type \"unkown\".\n+ * Called with all found annotations except with type \"unknown\".\n*/\npostProcess (data) {\ndata = sorter(data)\n@@ -91,7 +92,9 @@ export default class Parser {\n}\nlet flush = cb => {\n+ if (!this.includeUnknownContexts) {\ndata = data.filter(item => item.context.type !== 'unknown')\n+ }\ndata = this.postProcess(data)\ndeferred.resolve(data)\n",
        "sim_msg_1": "Add option to avoid filtering empty comments, refs",
        "sim_diff_2": "diff --git a/lib/socket/report-handler.react.js b/lib/socket/report-handler.react.js // @flow\n-import PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { sendReportsActionTypes, sendReports } from '../actions/report-actions';\n-import { queuedReports } from '../selectors/socket-selectors';\n-import type { AppState } from '../types/redux-types';\n+import { queuedReports as queuedReportsSelector } from '../selectors/socket-selectors';\nimport {\ntype ClientReportCreationRequest,\ntype ClearDeliveredReportsPayload,\n- queuedClientReportCreationRequestPropType,\n} from '../types/report-types';\n-import type { DispatchActionPromise } from '../utils/action-utils';\n-import { connect } from '../utils/redux-utils';\n+import {\n+ type DispatchActionPromise,\n+ useDispatchActionPromise,\n+ useServerCall,\n+} from '../utils/action-utils';\n+import { useSelector } from '../utils/redux-utils';\n+type BaseProps = {|\n+ +canSendReports: boolean,\n+|};\ntype Props = {|\n- canSendReports: boolean,\n- // Redux state\n- queuedReports: $ReadOnlyArray<ClientReportCreationRequest>,\n- // Redux dispatch functions\n- dispatchActionPromise: DispatchActionPromise,\n- // async functions that hit server APIs\n- sendReports: (\n+ ...BaseProps,\n+ +queuedReports: $ReadOnlyArray<ClientReportCreationRequest>,\n+ +dispatchActionPromise: DispatchActionPromise,\n+ +sendReports: (\nreports: $ReadOnlyArray<ClientReportCreationRequest>,\n) => Promise<void>,\n|};\nclass ReportHandler extends React.PureComponent<Props> {\n- static propTypes = {\n- canSendReports: PropTypes.bool.isRequired,\n- queuedReports: PropTypes.arrayOf(queuedClientReportCreationRequestPropType)\n- .isRequired,\n- dispatchActionPromise: PropTypes.func.isRequired,\n- sendReports: PropTypes.func.isRequired,\n- };\n-\ncomponentDidMount() {\nif (this.props.canSendReports) {\nthis.dispatchSendReports(this.props.queuedReports);\n@@ -82,9 +75,19 @@ class ReportHandler extends React.PureComponent<Props> {\n}\n}\n-export default connect(\n- (state: AppState) => ({\n- queuedReports: queuedReports(state),\n- }),\n- { sendReports },\n-)(ReportHandler);\n+export default React.memo<BaseProps>(function ConnectedReportHandler(\n+ props: BaseProps,\n+) {\n+ const queuedReports = useSelector(queuedReportsSelector);\n+ const callSendReports = useServerCall(sendReports);\n+ const dispatchActionPromise = useDispatchActionPromise();\n+\n+ return (\n+ <ReportHandler\n+ {...props}\n+ queuedReports={queuedReports}\n+ sendReports={callSendReports}\n+ dispatchActionPromise={dispatchActionPromise}\n+ />\n+ );\n+});\n",
        "sim_msg_2": "[lib] Use hook instead of connect function in ReportHandler\nTest Plan: Flow and also check if it still mounted correctly in web and native\nReviewers: palys-swm, ashoat, atul\nSubscribers: ashoat, KatPo, zrebcu411, Adrian, atul",
        "sim_diff_3": "diff --git a/lib/socket/calendar-query-handler.react.js b/lib/socket/calendar-query-handler.react.js @@ -14,7 +14,6 @@ import type {\nCalendarQueryUpdateResult,\nCalendarQueryUpdateStartingPayload,\n} from '../types/entry-types';\n-import { type LifecycleState } from '../types/lifecycle-state-types';\nimport { type ConnectionInfo } from '../types/socket-types';\nimport {\ntype DispatchActionPromise,\n",
        "sim_msg_3": "[lib] Fix eslint unused import in `calendar-query-handler`\nTest Plan: NA\nReviewers: ashoat\nSubscribers: KatPo, palys-swm, Adrian"
    },
    {
        "org_diff": "diff --git a/packages/react-devtools-shared/src/devtools/cache.js b/a/packages/react-devtools-shared/src/devtools/cache.js @@ -59,19 +59,30 @@ const Pending = 0;\n const Resolved = 1;\n const Rejected = 2;\n \n-const ReactSharedInternals = (React: any)\n-  .__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE;\n-\n-function readContext(Context: ReactContext<null>) {\n-  const dispatcher = ReactSharedInternals.H;\n-  if (dispatcher === null) {\n-    throw new Error(\n-      'react-cache: read and preload may only be called from within a ' +\n-        \"component's render. They are not supported in event handlers or \" +\n-        'lifecycle methods.',\n-    );\n-  }\n-  return dispatcher.readContext(Context);\n+let readContext;\n+if (typeof React.use === 'function') {\n+  readContext = function (Context: ReactContext<null>) {\n+    return React.use(Context);\n+  };\n+} else if (\n+  typeof (React: any).__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED ===\n+  'object'\n+) {\n+  const ReactCurrentDispatcher = (React: any)\n+    .__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentDispatcher;\n+  readContext = function (Context: ReactContext<null>) {\n+    const dispatcher = ReactCurrentDispatcher.current;\n+    if (dispatcher === null) {\n+      throw new Error(\n+        'react-cache: read and preload may only be called from within a ' +\n+          \"component's render. They are not supported in event handlers or \" +\n+          'lifecycle methods.',\n+      );\n+    }\n+    return dispatcher.readContext(Context);\n+  };\n+} else {\n+  throw new Error('react-cache: Unsupported React version');\n }\n \n const CacheContext = createContext(null);",
        "sim_diff_0": "diff --git a/packages/doc/src/components/CodeBlock/CodeBlock.jsx b/packages/doc/src/components/CodeBlock/CodeBlock.jsx @@ -59,6 +59,7 @@ const packages = [\n];\nconst peerDependencies = [\n+ { path: '@react-native-picker/picker' },\n{ path: 'styled-components' },\n{ path: 'react-native-svg' },\n{ path: 'react-is' },\n",
        "sim_msg_0": "chore(expo): adding to expo dependencies",
        "sim_diff_1": "diff --git a/packages/doc/src/components/CodeBlock/ReactLive/sandboxConfig.js b/packages/doc/src/components/CodeBlock/ReactLive/sandboxConfig.js @@ -11,6 +11,7 @@ const getPackage = ([imports, component]) =>\ndependencies: {\nreact: 'latest',\n'react-dom': 'latest',\n+ 'react-scripts': 'latest',\n'@gympass/yoga': 'latest',\n'styled-components': 'latest',\n},\n",
        "sim_msg_1": "fix(codeblock): add 'react-scripts' as dependency",
        "sim_diff_2": "diff --git a/packages/fether-react/src/Send/Sent/Sent.js b/packages/fether-react/src/Send/Sent/Sent.js @@ -145,7 +145,7 @@ class Sent extends Component {\ntoken\n} = this.props;\n- if (txStatus.confirmed) {\n+ if (txStatus && txStatus.confirmed) {\nreturn (\n<a\nhref={blockscoutTxUrl(\n",
        "sim_msg_2": "Sent: Add check if txStatus is defined (fix\nfor good measure",
        "sim_diff_3": "diff --git a/packages/doc/src/components/CodeBlock/CodeBlock.jsx b/packages/doc/src/components/CodeBlock/CodeBlock.jsx @@ -11,9 +11,12 @@ const CodeBlock = ({ reactLive, children, ...props }) => {\nconst buildImports = modules => {\nconst findComponents = /(?<=<)(\\w*)(?=\\s*?\\/?>)/gm;\n+ const sortModules = /(@gympass\\/yoga*)/gm;\nconst imports = [];\n- modules.forEach(({ name, path }) => {\n+ modules\n+ .sort(a => (a.path.match(sortModules) ? -1 : 0))\n+ .forEach(({ name, path }) => {\nconst componentsInCode = [...new Set(code.match(findComponents))]\n.filter(importedComponent =>\nObject.keys(name).includes(importedComponent.replace(/</g, '')),\n@@ -28,8 +31,8 @@ const CodeBlock = ({ reactLive, children, ...props }) => {\n};\nconst imports = buildImports([\n- { name: YogaComponents, path: '@gympass/yoga' },\n{ name: YogaIcons, path: '@gympass/yoga-icons' },\n+ { name: YogaComponents, path: '@gympass/yoga' },\n]);\nreturn reactLive ? (\n",
        "sim_msg_3": "improvement(doc): adding sort to buildImports function"
    },
    {
        "org_diff": "diff --git a/packages/react-reconciler/src/ReactFiberClassComponent.js b/a/packages/react-reconciler/src/ReactFiberClassComponent.js @@ -1274,7 +1274,7 @@ export function resolveClassComponentProps(\n     // We may have already copied the props object above to remove ref. If so,\n     // we can modify that. Otherwise, copy the props object with Object.assign.\n     if (newProps === baseProps) {\n-      newProps = assign({}, newProps, baseProps);\n+      newProps = assign({}, newProps);\n     }\n     // Taken from old JSX runtime, where this used to live.\n     for (const propName in defaultProps) {",
        "sim_diff_0": "diff --git a/src/components/ReactComponent.jsx b/src/components/ReactComponent.jsx @@ -56,7 +56,9 @@ export default class ReactComponent extends Field {\n[`react-${this.id}`]: 'single',\n});\n+ if (this.refs[`react-${this.id}`]) {\nthis.reactInstance = this.attachReact(this.refs[`react-${this.id}`]);\n+ }\nreturn Promise.resolve();\n}\n@@ -65,7 +67,9 @@ export default class ReactComponent extends Field {\n* or it is being removed from the form.\n*/\ndetach() {\n+ if (this.refs[`react-${this.id}`]) {\nthis.detachReact(this.refs[`react-${this.id}`]);\n+ }\nsuper.detach();\n}\n",
        "sim_msg_0": "Fix react calling attach/detach when there is no dom element.",
        "sim_diff_1": "diff --git a/src/encoded/static/components/file.js b/src/encoded/static/components/file.js @@ -156,7 +156,7 @@ const File = React.createClass({\n};\n},\n- componentWillMount: function () {\n+ componentDidMount: function () {\nconst { context } = this.props;\nconst derivedFromFileIds = context.derived_from && context.derived_from.length ? context.derived_from : [];\nif (derivedFromFileIds.length) {\n",
        "sim_msg_1": "Change point of requesting derived files\nWas requesting derived_from files on File page at componentWillMount, but this caused an error because it was called on the server where \"fetch\" doesn't exist. Changed to componentDidMount so only called on the client. Redmine",
        "sim_diff_2": "diff --git a/packages/fether-react/src/Send/TxForm/TxForm.js b/packages/fether-react/src/Send/TxForm/TxForm.js @@ -160,14 +160,20 @@ class Send extends Component {\npreValidate = values => {\nconst { balance, token } = this.props;\n- const amount = +values.amount;\n- const amountBn = new BigNumber(amount.toString());\n- if (!amount || amountBn.isNaN()) {\n+ if (!values.amount) {\nreturn { amount: 'Please enter a valid amount' };\n- } else if (amountBn.lt(0)) {\n+ }\n+\n+ const amountBn = new BigNumber(values.amount.toString());\n+\n+ if (amountBn.isNaN()) {\n+ return { amount: 'Please enter a valid amount' };\n+ } else if (amountBn.isZero()) {\n+ return { amount: 'Please enter a non-zero amount' };\n+ } else if (amountBn.isNegative()) {\nreturn { amount: 'Please enter a positive amount' };\n- } else if (token.symbol === 'ETH' && toWei(amount).lt(1)) {\n+ } else if (token.symbol === 'ETH' && toWei(values.amount).lt(1)) {\nreturn { amount: 'Please enter at least 1 Wei' };\n} else if (token.symbol !== 'ETH' && amountBn.dp() > token.decimals) {\nreturn {\n",
        "sim_msg_2": "fix: Remove +values.amount and cover 0 case with .isZero()",
        "sim_diff_3": "diff --git a/packages/fether-react/src/Send/TxForm/TxForm.js b/packages/fether-react/src/Send/TxForm/TxForm.js @@ -51,7 +51,6 @@ class Send extends Component {\nif (this.preValidate(allValues) === true) {\nreturn estimateGas(allValues, token, parityStore.api);\n} else {\n- // this means amount has errors\nreturn null;\n}\n}\n@@ -168,9 +167,8 @@ class Send extends Component {\nreturn { amount: 'Please enter a positive amount ' };\n} else if (balance && balance.lt(amount)) {\nreturn { amount: `You don't have enough ${token.symbol} balance` };\n- } else if (!values.to || isNaN(values.to)) {\n- // for gas estimation, the receiving address must be set\n- return false;\n+ } else if (!values.to || !isAddress(values.to)) {\n+ return { to: 'Please enter a valid Ethereum address' };\n}\nreturn true;\n};\n@@ -179,7 +177,7 @@ class Send extends Component {\n* Estimate gas amount, and validate that the user has enough balance to make\n* the tx.\n*/\n- validateAmount = debounce(values => {\n+ validateForm = debounce(values => {\ntry {\nconst { ethBalance, token } = this.props;\n@@ -209,16 +207,6 @@ class Send extends Component {\n};\n}\n}, 1000);\n-\n- validateForm = values => {\n- const errors = {};\n-\n- if (!isAddress(values.to)) {\n- errors.to = 'Please enter a valid Ethereum address';\n- }\n-\n- return Object.keys(errors).length ? errors : this.validateAmount(values);\n- };\n}\nexport default Send;\n",
        "sim_msg_3": "simplify validateForm"
    },
    {
        "org_diff": "diff --git a/scripts/rollup/bundles.js b/a/scripts/rollup/bundles.js @@ -293,7 +293,6 @@ const bundles = [\n     bundleTypes: __EXPERIMENTAL__ ? [FB_WWW_DEV, FB_WWW_PROD] : [],\n     moduleType: RENDERER,\n     entry: 'react-server-dom-fb/src/ReactDOMServerFB.js',\n-    condition: 'react-server',\n     global: 'ReactDOMServerStreaming',\n     minifyWithProdErrorCodes: false,\n     wrapWithModuleBoundaries: false,",
        "sim_diff_0": "diff --git a/scripts/bundle.config.js b/scripts/bundle.config.js @@ -68,7 +68,12 @@ const config = {\n// Compile ES2015 using babel\ntest: /\\.js$/,\nloader: 'babel-loader',\n- include: /src/\n+ include: /src/,\n+ options: {\n+ presets: [\n+ ['@babel/preset-env', {forceAllTransforms: true}]\n+ ]\n+ }\n}\n]\n},\n",
        "sim_msg_0": "Ensure UMD bundles are ES5",
        "sim_diff_1": "diff --git a/app_web/package.json b/app_web/package.json \"@rollup/plugin-replace\": \"^2.4.1\",\n\"concurrently\": \"^5.3.0\",\n\"eslint\": \"^6.8.0\",\n+ \"node-sass\": \"^6.0.0\",\n\"rollup\": \"^1.31.1\",\n\"rollup-plugin-commonjs\": \"^10.1.0\",\n\"rollup-plugin-copy\": \"^3.3.0\",\n\"rollup-plugin-node-builtins\": \"^2.1.2\",\n\"rollup-plugin-node-resolve\": \"^5.2.0\",\n\"rollup-plugin-scss\": \"^2.6.1\",\n- \"sass\": \"^1.32.8\",\n\"serve\": \"^11.3.0\"\n},\n\"bugs\": {\n",
        "sim_msg_1": "fix sass on macOS",
        "sim_diff_2": "diff --git a/scripts/build-js-bundle.js b/scripts/build-js-bundle.js @@ -35,7 +35,8 @@ function buildBundle(components, format, browser, cb) {\n'//INSTALL_COMPONENTS': components\n.map((component) => `${component.capitalized}`)\n.join(',\\n '),\n- '//EXPORT': 'export default Swiper; export { Swiper }',\n+ '//EXPORT':\n+ format === 'umd' ? 'export default Swiper;' : 'export default Swiper; export { Swiper }',\n}),\nresolve({ mainFields: ['module', 'main', 'jsnext'] }),\nbabel({ babelHelpers: 'bundled' }),\n",
        "sim_msg_2": "Fix umd export",
        "sim_diff_3": "diff --git a/rollup.config.browser.js b/rollup.config.browser.js @@ -20,7 +20,8 @@ let plugins = [\n'radium': [ 'Style', 'StyleRoot' ],\n'react': [ 'PureComponent', 'Component', 'PropTypes', 'Children', 'createElement' ],\n'react-dom': [ 'unstable_renderSubtreeIntoContainer', 'unmountComponentAtNode' ],\n- 'js-yaml': [ 'safeLoad', 'CORE_SCHEMA', 'Type', 'Schema' ]\n+ 'js-yaml': [ 'safeLoad', 'CORE_SCHEMA', 'Type', 'Schema' ],\n+ 'prop-types': [ 'bool', 'array', 'func', 'object', 'arrayOf', 'oneOfType', 'element', 'shape', 'string' ]\n}\n}),\nbabel({\n",
        "sim_msg_3": "Fix rollup errors"
    },
    {
        "org_diff": "diff --git a/packages/react-devtools-fusebox/src/frontend.js b/a/packages/react-devtools-fusebox/src/frontend.js @@ -13,7 +13,10 @@ import Bridge from 'react-devtools-shared/src/bridge';\n import Store from 'react-devtools-shared/src/devtools/store';\n import DevTools from 'react-devtools-shared/src/devtools/views/DevTools';\n \n-import type {Wall} from 'react-devtools-shared/src/frontend/types';\n+import type {\n+  BrowserTheme,\n+  Wall,\n+} from 'react-devtools-shared/src/frontend/types';\n import type {FrontendBridge} from 'react-devtools-shared/src/bridge';\n \n type Config = {\n@@ -42,18 +45,20 @@ export function createStore(bridge: FrontendBridge, config?: Config): Store {\n type InitializationOptions = {\n   bridge: FrontendBridge,\n   store: Store,\n+  theme?: BrowserTheme,\n };\n \n export function initialize(\n   contentWindow: Element | Document,\n   options: InitializationOptions,\n ): void {\n-  const {bridge, store} = options;\n+  const {bridge, store, theme = 'light'} = options;\n   const root = createRoot(contentWindow);\n \n   root.render(\n     <DevTools\n       bridge={bridge}\n+      browserTheme={theme}\n       store={store}\n       showTabBar={true}\n       warnIfLegacyBackendDetected={true}",
        "sim_diff_0": "diff --git a/packages/civic-sandbox/src/components/Sandbox/index.js b/packages/civic-sandbox/src/components/Sandbox/index.js @@ -5,7 +5,7 @@ import { connect } from \"react-redux\";\n/* eslint-disable import/no-extraneous-dependencies */\nimport \"react-select/dist/react-select.css\";\nimport { isArray } from \"lodash\";\n-import { Sandbox } from \"@hackoregon/component-library\";\n+import { Sandbox, Logo } from \"@hackoregon/component-library\";\nimport { equals } from \"ramda\";\nimport {\n@@ -94,16 +94,27 @@ class SandboxComponent extends React.Component {\nfont-family: \"Roboto Condensed\", \"Helvetica Neue\", Helvetica, sans-serif;\n`);\n+ const loadingContainer = css`\n+ display: flex;\n+ height: 300px;\n+ `;\nconst loading = css`\nfont-size: 1.5rem;\n- width: 100%;\n+ margin: auto;\ntext-align: center;\nfont-family: \"Roboto Condensed\", \"Helvetica Neue\", Helvetica, sans-serif;\n`;\n+ const loader = (\n+ <div className={loadingContainer}>\n+ <div className={loading}>\n+ <Logo type=\"squareLogoAnimated\" alt=\"Loading...\" />\n+ </div>\n+ </div>\n+ );\nconst layerData = [this.props.layerFoundation, ...this.props.layerSlides];\nreturn this.props.isLoading ? (\n- <div className={loading}>Loading...</div>\n+ loader\n) : (\n<Sandbox\nlayerData={layerData}\n",
        "sim_msg_0": "Add new loading indicator to Sandbox",
        "sim_diff_1": "diff --git a/packages/doc/src/components/CodeBlock/shared/templates/web.js b/packages/doc/src/components/CodeBlock/shared/templates/web.js @@ -2,7 +2,7 @@ import injectImport from '..';\nconst web = (imports, code) => `import React from 'react';\nimport ReactDOM from 'react-dom';\n-${injectImport(imports, 'ThemeProvider')}\n+${injectImport(imports, ['ThemeProvider'], ['@gympass/yoga'])}\nconst App = () => <ThemeProvider>\n${code}\n",
        "sim_msg_1": "fix(doc): fixing imports for web template",
        "sim_diff_2": "diff --git a/packages/doc/src/components/CodeBlock/CodeBlock.jsx b/packages/doc/src/components/CodeBlock/CodeBlock.jsx import React from 'react';\nimport { node, bool, oneOf } from 'prop-types';\n+import yogaPkg from '@gympass/yoga/package.json';\n+import iconsPkg from '@gympass/yoga-icons/package.json';\n+import systemPkg from '@gympass/yoga-system/package.json';\n+\nimport CodeBlockContext from './CodeBlockContext';\nimport { ReactLive, PrismHighlight, SnackEmbed } from '.';\nimport { importStatement } from './shared/templates';\n@@ -58,12 +62,12 @@ const packages = [\n{ name: NativeComponents, path: 'react-native' },\n];\n-const peerDependencies = [\n- { path: '@react-native-picker/picker' },\n- { path: 'styled-components' },\n- { path: 'react-native-svg' },\n- { path: 'react-is' },\n-];\n+const peerDependencies = Object.keys({\n+ ...yogaPkg.peerDependencies,\n+ ...iconsPkg.peerDependencies,\n+ ...systemPkg.peerDependencies,\n+ 'react-is': '*',\n+}).map(pkg => ({ path: pkg }));\nconst CodeBlock = ({ children: sampleCode, center, state, type }) => {\nconst code = sampleCode.trim();\n",
        "sim_msg_2": "refactor(expo): adding peerDependencies to expo snack dynamically",
        "sim_diff_3": "diff --git a/package.json b/package.json \"react-advanced-img\": \"^1.0.0\",\n\"react-dom\": \"^15.3.2\",\n\"react-intl\": \"^2.1.5\",\n- \"react-portal-tooltip\": \"^1.1.5\",\n\"react-redux\": \"^4.4.5\",\n\"react-responsive-utils\": \"^1.0.2\",\n\"react-router\": \"^3.0.0\",\n",
        "sim_msg_3": "remove react-portal-tooltip"
    },
    {
        "org_diff": "diff --git a/scripts/release/publish-commands/publish-to-npm.js b/a/scripts/release/publish-commands/publish-to-npm.js @@ -19,7 +19,7 @@ const run = async ({cwd, dry, tags, ci}, packageName, otp) => {\n   // But for now the easiest way is just to ask if this is expected.\n   const {status} = spawnSync('npm', ['view', `${packageName}@${version}`]);\n   const packageExists = status === 0;\n-  if (!packageExists) {\n+  if (packageExists) {\n     console.log(\n       theme`{package ${packageName}} {version ${version}} has already been published.`\n     );",
        "sim_diff_0": "diff --git a/publish/src/commands/deploy.js b/publish/src/commands/deploy.js @@ -130,17 +130,21 @@ const deploy = async ({\nconst { account } = deployer;\n- // get the current supply as it changes as we mint after each period\n- const getExistingContract = ({ contract }) =>\n- deployer.getContract({\n- abi: deployment.sources[contract].abi,\n- address: deployment.targets[contract].address,\n+ const getExistingContract = ({ contract }) => {\n+ const { address, source } = deployment.targets[contract];\n+ const { abi } = deployment.sources[source];\n+\n+ return deployer.getContract({\n+ address,\n+ abi,\n});\n+ };\nlet currentSynthetixSupply;\nlet currentExchangeFee;\nlet currentSynthetixPrice;\nif (network === 'local') {\n+ // get the current supply as it changes as we mint after each period\ncurrentSynthetixSupply = w3utils.toWei((100e6).toString());\ncurrentExchangeFee = w3utils.toWei('0.003'.toString());\noracleExrates = account;\n@@ -698,9 +702,6 @@ const deploy = async ({\nforce: addNewSynths,\n});\n- // As sETH is used for Uniswap liquidity, we cannot switch out its proxy,\n- // thus we have these values we switch on to ensure sETH remains fixed to the\n- // v2.9.x version of Synth.sol and Proxy.sol - JJ\nconst currencyKeyInBytes = w3utils.asciiToHex(currencyKey);\nconst additionalConstructorArgsMap = {\n@@ -708,6 +709,14 @@ const deploy = async ({\n// future subclasses...\n};\n+ // track the original supply if we're deploying a new synth contract for an existing synth\n+ let originalTotalSupply = 0;\n+ // cannot check local network as deploy is true for everything\n+ if (config[`Synth${currencyKey}`].deploy && network !== 'local') {\n+ const oldSynth = getExistingContract({ contract: `Synth${currencyKey}` });\n+ originalTotalSupply = await oldSynth.methods.totalSupply().call();\n+ }\n+\nconst synth = await deployContract({\nname: `Synth${currencyKey}`,\nsource: subclass || 'Synth',\n@@ -725,6 +734,17 @@ const deploy = async ({\nforce: addNewSynths,\n});\n+ if (synth && originalTotalSupply > 0) {\n+ await runStep({\n+ contract: `Synth${currencyKey}`,\n+ target: synth,\n+ read: 'totalSupply',\n+ expected: input => input === originalTotalSupply,\n+ write: 'setTotalSupply',\n+ writeArg: originalTotalSupply,\n+ });\n+ }\n+\nconst synthAddress = synth ? synth.options.address : '';\nif (tokenStateForSynth && synth) {\n@@ -762,7 +782,6 @@ const deploy = async ({\nwriteArg: synthAddress,\n});\n- // For latest synths (v2.10.x) we need to use Synth.setSynthetixProxy\nawait runStep({\ncontract: `Synth${currencyKey}`,\ntarget: synth,\n@@ -773,7 +792,6 @@ const deploy = async ({\n});\n}\n- // For latest synths (v2.10.x) we need to use Synth.setFeePoolProxy\nif (proxyFeePool) {\nawait runStep({\ncontract: `Synth${currencyKey}`,\n",
        "sim_msg_0": "Ensure synths that replace old ones keep their total supply",
        "sim_diff_1": "diff --git a/publish/src/commands/deploy.js b/publish/src/commands/deploy.js @@ -1353,6 +1353,7 @@ const deploy = async ({\n};\nconst synthsRatesToUpdate = synths\n+ .filter(synth => synth.name !== 'sUSD')\n.map((synth, i) =>\nObject.assign(\n{\n@@ -1376,7 +1377,7 @@ const deploy = async ({\nsynthsRatesToUpdate\n.map(\n({ name, targetRate, currentRate }) =>\n- `\\t${name} from ${currentRate * 100}% to ${w3utils.fromWei(`${targetRate}`) * 100}%`\n+ `\\t${name} from ${currentRate * 100}% to ${w3utils.fromWei(targetRate) * 100}%`\n)\n.join('\\n')\n)\n",
        "sim_msg_1": "First fork deploy on goerli",
        "sim_diff_2": "diff --git a/publish/src/commands/deploy.js b/publish/src/commands/deploy.js @@ -1115,7 +1115,7 @@ const deploy = async ({\nconst depot = await deployContract({\nname: 'Depot',\n- deps: ['Synthetix', 'SynthsUSD', 'FeePool'],\n+ deps: ['ProxySynthetix', 'SynthsUSD', 'FeePool'],\nargs: [\naccount,\naccount,\n@@ -1132,10 +1132,10 @@ const deploy = async ({\nawait runStep({\ncontract: 'Depot',\ntarget: depot,\n- read: 'synthetix',\n- expected: input => input === synthetixAddress,\n+ read: 'snxProxy',\n+ expected: input => input === proxyERC20SynthetixAddress,\nwrite: 'setSynthetix',\n- writeArg: synthetixAddress,\n+ writeArg: proxyERC20SynthetixAddress,\n});\n}\n",
        "sim_msg_2": "Depot Deploy script",
        "sim_diff_3": "diff --git a/scripts/publish.ts b/scripts/publish.ts @@ -460,15 +460,18 @@ async function run() {\nexecSync(`${cmd} --token ${process.env.NPM_TOKEN}`)\n})\n+ // TODO: currently, the package registry isn't fast enough for us to do\n+ // this immediately after publishing. So not sure what to do here...\n+\n// Update example lock files to use new dependencies\n- for (const example of examples) {\n- let stat = await fsp.stat(path.join(examplesDir, example))\n- if (!stat.isDirectory()) continue\n+ // for (const example of examples) {\n+ // let stat = await fsp.stat(path.join(examplesDir, example))\n+ // if (!stat.isDirectory()) continue\n- console.log(` Updating example ${example} dependencies/lockfile...`)\n+ // console.log(` Updating example ${example} dependencies/lockfile...`)\n- updateExampleLockfile(example)\n- }\n+ // updateExampleLockfile(example)\n+ // }\nconsole.log()\n",
        "sim_msg_3": "fix: publish"
    },
    {
        "org_diff": "diff --git a/scripts/release/publish-commands/publish-to-npm.js b/a/scripts/release/publish-commands/publish-to-npm.js @@ -2,10 +2,11 @@\n \n 'use strict';\n \n+const {spawnSync} = require('child_process');\n const {exec} = require('child-process-promise');\n const {readJsonSync} = require('fs-extra');\n const {join} = require('path');\n-const {confirm, execRead} = require('../utils');\n+const {confirm} = require('../utils');\n const theme = require('../theme');\n \n const run = async ({cwd, dry, tags, ci}, packageName, otp) => {\n@@ -16,8 +17,9 @@ const run = async ({cwd, dry, tags, ci}, packageName, otp) => {\n   // If so we might be resuming from a previous run.\n   // We could infer this by comparing the build-info.json,\n   // But for now the easiest way is just to ask if this is expected.\n-  const info = await execRead(`npm view ${packageName}@${version}`);\n-  if (info) {\n+  const {status} = spawnSync('npm', ['view', `${packageName}@${version}`]);\n+  const packageExists = status === 0;\n+  if (!packageExists) {\n     console.log(\n       theme`{package ${packageName}} {version ${version}} has already been published.`\n     );",
        "sim_diff_0": "diff --git a/publish/src/commands/deploy.js b/publish/src/commands/deploy.js @@ -7,6 +7,7 @@ const Deployer = require('../Deployer');\nconst NonceManager = require('../NonceManager');\nconst { loadCompiledFiles, getLatestSolTimestamp } = require('../solidity');\nconst checkAggregatorPrices = require('../check-aggregator-prices');\n+const { getVersions } = require('../../..');\nconst {\nensureNetwork,\n@@ -190,6 +191,25 @@ const deploy = async ({\nconst { account } = deployer;\n+ const getExistingContract = ({ contract, network }) => {\n+ let address;\n+ if (network === 'local') {\n+ address = deployment.targets[contract].address;\n+ } else {\n+ const contractVersion = getVersions({ network, byContract: true })[contract];\n+ const lastEntry = contractVersion.slice(-1)[0];\n+ address = lastEntry.address;\n+ }\n+\n+ const { source } = deployment.targets[contract];\n+ const { abi } = deployment.sources[source];\n+\n+ return deployer.getContract({\n+ address,\n+ abi,\n+ });\n+ };\n+\nnonceManager.web3 = deployer.web3;\nnonceManager.account = account;\n@@ -202,7 +222,7 @@ const deploy = async ({\nlet systemSuspendedReason;\ntry {\n- const oldSynthetix = deployer.getContractByName({ contract: 'Synthetix' });\n+ const oldSynthetix = getExistingContract({ contract: 'Synthetix', network });\ncurrentSynthetixSupply = await oldSynthetix.methods.totalSupply().call();\n// inflationSupplyToDate = total supply - 100m\n@@ -242,7 +262,7 @@ const deploy = async ({\n}\ntry {\n- oldExrates = deployer.getContractByName({ contract: 'ExchangeRates' });\n+ oldExrates = getExistingContract({ contract: 'ExchangeRates', network });\ncurrentSynthetixPrice = await oldExrates.methods.rateForCurrency(toBytes32('SNX')).call();\nif (!oracleExrates) {\noracleExrates = await oldExrates.methods.oracle().call();\n@@ -264,7 +284,7 @@ const deploy = async ({\n}\ntry {\n- const oldSystemStatus = deployer.getContractByName({ contract: 'SystemStatus' });\n+ const oldSystemStatus = getExistingContract({ contract: 'SystemStatus', network });\nconst systemSuspensionStatus = await oldSystemStatus.methods.systemSuspension().call();\n@@ -917,7 +937,7 @@ const deploy = async ({\nlet originalTotalSupply = 0;\nif (synthConfig.deploy) {\ntry {\n- const oldSynth = deployer.getContractByName({ contract: `Synth${currencyKey}` });\n+ const oldSynth = getExistingContract({ contract: `Synth${currencyKey}`, network });\noriginalTotalSupply = await oldSynth.methods.totalSupply().call();\n} catch (err) {\nif (!freshDeploy) {\n",
        "sim_msg_0": "Deploy.js - getExistingContracts to use versions.json for existing addresses",
        "sim_diff_1": "diff --git a/scripts/generate-publish-script.js b/scripts/generate-publish-script.js @@ -4,7 +4,7 @@ const path = require(\"path\");\nconst fs = require(\"fs-extra\");\nconst should = require(\"should\");\n-const LATEST = \"2\";\n+const LATEST = \"3\";\nfunction generateScript() {\nreturn new Promise((resolve, reject) => {\n",
        "sim_msg_1": "Update gen publish script for 3.x",
        "sim_diff_2": "diff --git a/scripts/generate-publish-script.js b/scripts/generate-publish-script.js @@ -4,6 +4,8 @@ const path = require(\"path\");\nconst fs = require(\"fs-extra\");\nconst should = require(\"should\");\n+const LATEST = \"2\";\n+\nfunction generateScript() {\nreturn new Promise((resolve, reject) => {\nconst packages = [\n@@ -18,7 +20,13 @@ function generateScript() {\nconst rootPackage = require(path.join(__dirname,\"..\",\"package.json\"));\nconst version = rootPackage.version;\n- const tagArg = /-/.test(version) ? \"--tag next\" : \"\"\n+ const versionParts = version.split(\".\");\n+ let tagArg = \"\";\n+ if (versionParts[0] !== LATEST) {\n+ tagArg = `--tag v${versionParts[0]}-maintenance`\n+ } else if (/-/.test(version)) {\n+ tagArg = \"--tag next\"\n+ }\nconst lines = [];\n",
        "sim_msg_2": "Add support for maintenance streams in generate-publish-script",
        "sim_diff_3": "diff --git a/scripts/publishPackages.js b/scripts/publishPackages.js @@ -84,7 +84,7 @@ function release(pkg) {\n}\nfunction createNpmRc() {\n- execSync(`rm -f package-lock.json`);\n+ execSync(`rm -f **/package-lock.json`);\nconst { NPM_EMAIL, NPM_TOKEN } = process.env;\nconst EOL = require('os').EOL;\nconst content = `email=${NPM_EMAIL}${EOL}//registry.npmjs.org/:_authToken=${NPM_TOKEN}${EOL}`;\n",
        "sim_msg_3": "[main] edited publishPackage.js to delete all package-lock.json files."
    },
    {
        "org_diff": "diff --git a/packages/react-reconciler/src/__tests__/ReactSuspenseFuzz-test.internal.js b/a/packages/react-reconciler/src/__tests__/ReactSuspenseFuzz-test.internal.js @@ -115,24 +115,19 @@ describe('ReactSuspenseFuzz', () => {\n               setTimeout(() => {\n                 cache.set(fullText, fullText);\n                 pendingTasks.delete(task);\n-                Scheduler.log(task.label);\n                 resolve();\n               }, delay);\n             },\n           };\n           cache.set(fullText, thenable);\n-          Scheduler.log(`Suspended! [${fullText}]`);\n           throw thenable;\n         } else if (typeof resolvedText.then === 'function') {\n-          const thenable = resolvedText;\n-          Scheduler.log(`Suspended! [${fullText}]`);\n-          throw thenable;\n+          throw resolvedText;\n         }\n       } else {\n         resolvedText = fullText;\n       }\n \n-      Scheduler.log(resolvedText);\n       return resolvedText;\n     }\n ",
        "sim_diff_0": "diff --git a/src/sap.ui.integration/test/sap/ui/integration/qunit/cards/CalendarCard.qunit.js b/src/sap.ui.integration/test/sap/ui/integration/qunit/cards/CalendarCard.qunit.js @@ -907,56 +907,5 @@ sap.ui.define([\ndone();\n}.bind(this));\n});\n-\n- // creates 3 appointments before, one at the current hour, and 3 more after\n- function createAppointmentsForToday(oFormatter) {\n- var oStart = new Date(),\n- oEnd = new Date(),\n- aResult = [];\n-\n- oStart.setHours(oStart.getHours() - 3, 0, 0, 0);\n- oEnd.setHours(oEnd.getHours() - 2, 0, 0, 0);\n-\n- for (var i = 0; i < 7; i++) {\n- aResult.push({\n- \"start\": oFormatter.format(oStart),\n- \"end\": oFormatter.format(oEnd),\n- \"title\": \"App\" + i\n- });\n-\n- oStart.setHours(oStart.getHours() + 1);\n- oEnd.setHours(oEnd.getHours() + 1);\n- }\n-\n- return aResult;\n- }\n-\n- QUnit.test(\"The correct appointments are rendered for today\", function(assert) {\n- // Arrange\n- var done = assert.async();\n- var oManifest_3OutOf5Apps_New = JSON.parse(JSON.stringify(oManifest_3OutOf5Apps)),\n- oFormatter = DateFormat.getDateTimeInstance({ pattern: \"yyyy-MM-ddTHH:mm\" });\n-\n- oManifest_3OutOf5Apps_New[\"sap.card\"].data.json.item = createAppointmentsForToday(oFormatter);\n- oManifest_3OutOf5Apps_New[\"sap.card\"].data.json.date = oFormatter.format(new Date());\n-\n- this.oCard.setManifest(oManifest_3OutOf5Apps_New);\n-\n- this.oCard.attachEvent(\"_ready\", function() {\n- Core.applyChanges();\n-\n- assert.equal(this.oCard.getModel(\"parameters\").getData().visibleItems, 3, \"Should have 3 visible appointments.\");\n- assert.equal(this.oCard.getModel(\"parameters\").getData().allItems, 7, \"Should have total of 7 appointments.\");\n-\n- var aAppointmentsRefs = this.oCard.$().find(\".sapUiCalendarAppContainer\");\n-\n- // Assert\n- assert.equal(aAppointmentsRefs.length, 3, \"Should have 3 rendered appointments\");\n- assert.equal(aAppointmentsRefs.eq(0).find(\".sapUiCalendarAppTitle\").text(), \"App3\", \"The first appointment is correct\");\n- assert.equal(aAppointmentsRefs.eq(2).find(\".sapUiCalendarAppTitle\").text(), \"App5\", \"The last appointment is correct\");\n-\n- done();\n- }.bind(this));\n- });\n}\n);\n",
        "sim_msg_0": "[INTERNAL] Calendar Card: stabilized tests\nAs the shown appoimtnets for today are very dynamic,\nthe test for them is unstable, so it is best to be deleted.",
        "sim_diff_1": "diff --git a/tests/js/test-utils.js b/tests/js/test-utils.js /**\n* External dependencies\n*/\n-import { render } from '@testing-library/react';\n+import { render, act } from '@testing-library/react';\nimport { renderHook, act as actHook } from '@testing-library/react-hooks';\nimport { Router } from 'react-router-dom';\nimport invariant from 'invariant';\n@@ -16,7 +16,7 @@ import { RegistryProvider } from '@wordpress/data';\n* Internal dependencies\n*/\nimport FeaturesProvider from '../../assets/js/components/FeaturesProvider';\n-import { createTestRegistry } from './utils';\n+import { createTestRegistry, createWaitForRegistry } from './utils';\n// Override `@testing-library/react`'s render method with one that includes\n// our data store.\n@@ -67,6 +67,8 @@ const customRender = ( ui, options = {} ) => {\n);\n}\n+ const waitForRegistry = createWaitForRegistry( registry );\n+\nconst result = render( ui, { wrapper: Wrapper, ...renderOptions } );\nconst {\ngetByTestId: getByTestID, // eslint-disable-line sitekit/acronym-case\n@@ -87,6 +89,7 @@ const customRender = ( ui, options = {} ) => {\nqueryByTestID,\nregistry,\nhistory,\n+ waitForRegistry: () => act( waitForRegistry ),\n};\n};\n",
        "sim_msg_1": "Add waitForRegistry as return from custom render.",
        "sim_diff_2": "diff --git a/renderer/components/__tests__/Sidebar.test.js b/renderer/components/__tests__/Sidebar.test.js @@ -33,46 +33,28 @@ const renderComponent = (component, locale = 'en', messages = English) => {\n}\ndescribe('Tests for Sidebar component', () => {\n- afterEach(() => {\n- cleanup()\n- })\n- test('Displays the correct version', async () => {\n+ beforeEach(() => {\nrenderComponent(\n<Sidebar>\n<></>\n</Sidebar>\n)\n- const versionNumber = screen.getByTestId('sidebar-version-number')\n- expect(versionNumber.innerHTML).toMatch(version)\n- })\n-\n- test('Displays child elements', async () => {\n- renderComponent(\n- <Sidebar>\n- <p data-testid=\"test-paragraph\">Test paragraph</p>\n- </Sidebar>\n- )\n- expect(screen.getByTestId('test-paragraph').innerHTML).toBe(\n- 'Test paragraph'\n- )\n})\n+ afterEach(() => {\n+ cleanup()\n+ jest.clearAllMocks()\n})\n-\n-describe('Sidebar NavItems push the router to correct path', () => {\n- beforeEach(() => {\n+ test('Displays the correct version', async () => {\nrenderComponent(\n<Sidebar>\n<></>\n</Sidebar>\n)\n- })\n-\n- afterEach(() => {\n- cleanup()\n- jest.clearAllMocks()\n+ const versionNumber = screen.getByTestId('sidebar-version-number')\n+ expect(versionNumber.innerHTML).toMatch(version)\n})\ntest('Clicking on Dashboard NavItem calls pushes router to /dashboard', async () => {\n",
        "sim_msg_2": "Removed unnecessary tests from Sidebar.test.js",
        "sim_diff_3": "diff --git a/src/components/OrderSummary/OrderSummary.test.js b/src/components/OrderSummary/OrderSummary.test.js import React from \"react\";\nimport renderer from \"react-test-renderer\";\n+import { MuiThemeProvider } from \"@material-ui/core/styles\";\n+import theme from \"lib/theme/reactionTheme\";\nimport { ComponentsProvider } from \"@reactioncommerce/components-context\";\nimport componentsContext from \"componentsContext\";\nimport OrderSummary from \"./OrderSummary\";\n-const testOrder = {\n- checkout: {\n+const testFulfillmentGroup = {\nsummary: {\nitemTotal: {\ndisplayAmount: \"$118\"\n@@ -13,11 +14,9 @@ const testOrder = {\ntotal: {\ndisplayAmount: \"$118\"\n}\n- }\n},\n- totalItemQuantity: 3,\n- items: [\n- {\n+ items: {\n+ nodes: [{\n_id: \"123\",\nattributes: [\n{ label: \"Color\", value: \"Red\" },\n@@ -59,16 +58,27 @@ const testOrder = {\nproductSlug: \"/product-slug\",\ntitle: \"Another Great Product\",\nquantity: 1\n+ }]\n+ },\n+ payment: {\n+ displayName: \"Example Payment\"\n+ },\n+ selectedFulfillmentOption: {\n+ fulfillmentMethod: {\n+ displayName: \"Free Shipping\",\n+ group: \"Ground\"\n+ }\n}\n- ]\n};\ntest(\"basic snapshot\", () => {\nconst component = renderer.create((\n<ComponentsProvider value={componentsContext}>\n+ <MuiThemeProvider theme={theme}>\n<OrderSummary\n- order={testOrder}\n+ fulfillmentGroup={testFulfillmentGroup}\n/>\n+ </MuiThemeProvider>\n</ComponentsProvider>\n));\n",
        "sim_msg_3": "test: update OrderSummary test"
    },
    {
        "org_diff": "diff --git a/packages/react-reconciler/src/__tests__/useEffectEvent-test.js b/a/packages/react-reconciler/src/__tests__/useEffectEvent-test.js @@ -742,7 +742,7 @@ describe('useEffectEvent', () => {\n     await act(() =>\n       ReactNoop.render(<ChatRoom roomId=\"general\" theme=\"light\" />),\n     );\n-    await act(() => jest.runAllTimers());\n+\n     assertLog(['Welcome to the general room!', 'Connected! theme: light']);\n     expect(ReactNoop).toMatchRenderedOutput(\n       <span prop=\"Welcome to the general room!\" />,\n@@ -752,20 +752,17 @@ describe('useEffectEvent', () => {\n     await act(() =>\n       ReactNoop.render(<ChatRoom roomId=\"music\" theme=\"light\" />),\n     );\n-    await act(() => jest.runAllTimers());\n     assertLog([\n       'Welcome to the music room!',\n       // should trigger a reconnect\n       'Connected! theme: light',\n     ]);\n-\n     expect(ReactNoop).toMatchRenderedOutput(\n       <span prop=\"Welcome to the music room!\" />,\n     );\n \n     // change theme only\n     await act(() => ReactNoop.render(<ChatRoom roomId=\"music\" theme=\"dark\" />));\n-    await act(() => jest.runAllTimers());\n     // should not trigger a reconnect\n     assertLog(['Welcome to the music room!']);\n     expect(ReactNoop).toMatchRenderedOutput(\n@@ -776,7 +773,6 @@ describe('useEffectEvent', () => {\n     await act(() =>\n       ReactNoop.render(<ChatRoom roomId=\"travel\" theme=\"dark\" />),\n     );\n-    await act(() => jest.runAllTimers());\n     assertLog([\n       'Welcome to the travel room!',\n       // should trigger a reconnect",
        "sim_diff_0": "diff --git a/src/screens/EventsScreen/FilterHeader.test.js b/src/screens/EventsScreen/FilterHeader.test.js @@ -5,6 +5,7 @@ import FilterHeader from \"./FilterHeader\";\nimport type { Props as ComponentProps } from \"./FilterHeader\";\nimport FilterHeaderButton from \"./FilterHeaderButton\";\nimport FilterHeaderCategories from \"./FilterHeaderCategories\";\n+import ResetAllFiltersButton from \"./ResetAllFiltersButton\";\nconst render = (\nprops: ComponentProps = {\n@@ -147,4 +148,24 @@ describe(\"filter buttons\", () => {\nexpect(mock).toBeCalledWith();\n});\n+\n+ it(\"calls scrollEventListToTop when users presses 'Reset all filters' button\", () => {\n+ const mock = jest.fn();\n+ const output = render({\n+ dateFilter: null,\n+ selectedCategories: new Set([\"Music\"]),\n+ onFilterCategoriesPress: () => {},\n+ onFilterButtonPress: () => {},\n+ onDateFilterButtonPress: () => {},\n+ resetAllFiltersPress: () => {},\n+ numTagFiltersSelected: 0,\n+ scrollEventListToTop: mock\n+ });\n+ output\n+ .find(ResetAllFiltersButton)\n+ .props()\n+ .onPress();\n+\n+ expect(mock).toBeCalledWith();\n+ });\n});\n",
        "sim_msg_0": "Add test to ensure that scroll to top method is called when reset all filters button is pressed",
        "sim_diff_1": "diff --git a/packages/yoga/src/Banner/web/Banner.test.jsx b/packages/yoga/src/Banner/web/Banner.test.jsx @@ -45,7 +45,7 @@ describe('<Banner />', () => {\nit('should call button action function when the banner button is clicked', () => {\nconst onButtonClickMock = jest.fn();\n- const { getByText } = render(\n+ const { getByRole } = render(\n<ThemeProvider>\n<Banner\nmessage=\"Banner with button\"\n@@ -55,7 +55,7 @@ describe('<Banner />', () => {\n</ThemeProvider>,\n);\n- fireEvent.click(getByText('Action'));\n+ fireEvent.click(getByRole('button', { name: 'Action' }));\nexpect(onButtonClickMock).toHaveBeenCalled();\n});\n",
        "sim_msg_1": "test(banner): refactor to use get by role instead of by text at call action button test",
        "sim_diff_2": "diff --git a/packages/yoga/src/AutoComplete/web/AutoComplete.test.jsx b/packages/yoga/src/AutoComplete/web/AutoComplete.test.jsx @@ -83,6 +83,8 @@ describe('<AutoComplete />', () => {\ndescribe('Event listeners', () => {\nit('should call onChangeMock', () => {\nconst onChangeMock = jest.fn();\n+ const onCleanMock = jest.fn();\n+ const onSelectMock = jest.fn();\nconst { getByDisplayValue } = render(\n<ThemeProvider>\n@@ -97,10 +99,14 @@ describe('<AutoComplete />', () => {\nfireEvent.change(getByDisplayValue('New'), { target: { value: 'a' } });\nexpect(onChangeMock).toHaveBeenCalled();\n+ expect(onSelectMock).not.toHaveBeenCalled();\n+ expect(onCleanMock).not.toHaveBeenCalled();\n});\nit('should call onCleanMock', () => {\nconst onCleanMock = jest.fn();\n+ const onSelectMock = jest.fn();\n+ const onChangeMock = jest.fn();\nconst { getByDisplayValue, getByRole } = render(\n<ThemeProvider>\n@@ -108,6 +114,8 @@ describe('<AutoComplete />', () => {\nvalue=\"New\"\noptions={['New York']}\nonClean={onCleanMock}\n+ onSelect={onSelectMock}\n+ onChange={onChangeMock}\n/>\n</ThemeProvider>,\n);\n@@ -116,6 +124,33 @@ describe('<AutoComplete />', () => {\nfireEvent.click(getByRole('button'));\nexpect(onCleanMock).toHaveBeenCalledWith('');\n+ expect(onSelectMock).not.toHaveBeenCalled();\n+ expect(onChangeMock).toHaveBeenCalled();\n+ });\n+\n+ it('should call onSelectMock', () => {\n+ const onSelectMock = jest.fn();\n+ const onCleanMock = jest.fn();\n+ const onChangeMock = jest.fn();\n+\n+ const { getByDisplayValue, getByRole } = render(\n+ <ThemeProvider>\n+ <AutoComplete\n+ value=\"New\"\n+ options={['New York']}\n+ onSelect={onSelectMock}\n+ onClean={onCleanMock}\n+ onChange={onChangeMock}\n+ />\n+ </ThemeProvider>,\n+ );\n+\n+ fireEvent.focus(getByDisplayValue('New'));\n+ fireEvent.click(getByRole('option'));\n+\n+ expect(onSelectMock).toHaveBeenCalledWith('New York');\n+ expect(onCleanMock).not.toHaveBeenCalled();\n+ expect(onChangeMock).toHaveBeenCalled();\n});\n});\n});\n",
        "sim_msg_2": "test(autocomplete): add unit test for onSelect event",
        "sim_diff_3": "diff --git a/src/components/dashboard/__tests__/Receive.js b/src/components/dashboard/__tests__/Receive.js @@ -11,10 +11,10 @@ describe('Receive', () => {\nexpect(tree.toJSON()).toBeTruthy()\n})\n- it('matches snapshot', () => {\n- const Receive = getWebRouterComponentWithMocks('../Receive')\n- const component = renderer.create(<Receive />)\n- const tree = component.toJSON()\n- expect(tree).toMatchSnapshot()\n- })\n+ // it('matches snapshot', () => {\n+ // const Receive = getWebRouterComponentWithMocks('../Receive')\n+ // const component = renderer.create(<Receive />)\n+ // const tree = component.toJSON()\n+ // expect(tree).toMatchSnapshot()\n+ // })\n})\n",
        "sim_msg_3": "Simplify tests as wasn't able to force mnemonics"
    },
    {
        "org_diff": "diff --git a/packages/react-reconciler/src/__tests__/ReactUse-test.js b/a/packages/react-reconciler/src/__tests__/ReactUse-test.js @@ -663,6 +663,8 @@ describe('ReactUse', () => {\n     }\n \n     const root1 = ReactNoop.createRoot();\n+    assertLog(['Async text requested [Hi]']);\n+\n     await act(() => {\n       root1.render(<Suspense fallback={<Text text=\"Loading...\" />} />);\n     });\n@@ -677,7 +679,7 @@ describe('ReactUse', () => {\n         );\n       });\n     });\n-    assertLog(['Async text requested [Hi]']);\n+    assertLog([]);\n \n     // While we're waiting for the first root's data to resolve, a second\n     // root renders.",
        "sim_diff_0": "diff --git a/packages/transportation/src/components/App/index.test.js b/packages/transportation/src/components/App/index.test.js -import React from 'react';\n-import { shallow } from 'enzyme';\n-import App from './index';\n-\ndescribe('<App />', () => {\n- it('should render its children', () => {\n- const children = (<h1>Test</h1>);\n- const wrapper = shallow(\n- <App>\n- {children}\n- </App>,\n- );\n- expect(wrapper.contains(children)).to.eql(true);\n+ it('does not have have functioning tests...', () => {\n+ expect(true).to.eql(true);\n});\n});\n",
        "sim_msg_0": "rm non functioning tests",
        "sim_diff_1": "diff --git a/assets/src/components/Header.test.jsx b/assets/src/components/Header.test.jsx import React from 'react';\nimport { shallow, mount } from 'enzyme';\nimport Badge from '@material-ui/core/Badge';\n-import { render } from '@testing-library/react';\nimport { Header } from './Header';\nimport { getRegion, clearRegion } from '../services/UserPreferences';\n@@ -25,10 +24,11 @@ describe('Header', () => {\nwindow.location.assign = jest.fn();\njest.resetAllMocks();\n});\n+\nit('clears the region and redirects to home when clicking change region', () => {\n- const header = render(<Header {...defaultProps} />);\n+ const header = createComponent();\n- header.getByText('Change region').click();\n+ header.find('#change-region-button').simulate('click');\nexpect(clearRegion).toHaveBeenCalled();\nexpect(history.push).toHaveBeenCalledWith('/');\n",
        "sim_msg_1": "header goes back to enzyme usage",
        "sim_diff_2": "diff --git a/src/components/ProductDetail/ProductDetail.test.js b/src/components/ProductDetail/ProductDetail.test.js @@ -2,9 +2,10 @@ import React from \"react\";\nimport renderer from \"react-test-renderer\";\nimport { shallow } from \"enzyme\";\nimport ProductDetail from \"./ProductDetail\";\n+import sampleData from \"./sampleData\";\ntest(\"basic snapshot\", () => {\n- const component = renderer.create(shallow(<ProductDetail />).get(0));\n+ const component = renderer.create(shallow(<ProductDetail catalogProduct={sampleData} />).get(0));\nconst tree = component.toJSON();\nexpect(tree).toMatchSnapshot();\n});\n",
        "sim_msg_2": "test: update test to use sample data",
        "sim_diff_3": "diff --git a/renderer/components/__tests__/Sidebar.test.js b/renderer/components/__tests__/Sidebar.test.js @@ -33,46 +33,28 @@ const renderComponent = (component, locale = 'en', messages = English) => {\n}\ndescribe('Tests for Sidebar component', () => {\n- afterEach(() => {\n- cleanup()\n- })\n- test('Displays the correct version', async () => {\n+ beforeEach(() => {\nrenderComponent(\n<Sidebar>\n<></>\n</Sidebar>\n)\n- const versionNumber = screen.getByTestId('sidebar-version-number')\n- expect(versionNumber.innerHTML).toMatch(version)\n- })\n-\n- test('Displays child elements', async () => {\n- renderComponent(\n- <Sidebar>\n- <p data-testid=\"test-paragraph\">Test paragraph</p>\n- </Sidebar>\n- )\n- expect(screen.getByTestId('test-paragraph').innerHTML).toBe(\n- 'Test paragraph'\n- )\n})\n+ afterEach(() => {\n+ cleanup()\n+ jest.clearAllMocks()\n})\n-\n-describe('Sidebar NavItems push the router to correct path', () => {\n- beforeEach(() => {\n+ test('Displays the correct version', async () => {\nrenderComponent(\n<Sidebar>\n<></>\n</Sidebar>\n)\n- })\n-\n- afterEach(() => {\n- cleanup()\n- jest.clearAllMocks()\n+ const versionNumber = screen.getByTestId('sidebar-version-number')\n+ expect(versionNumber.innerHTML).toMatch(version)\n})\ntest('Clicking on Dashboard NavItem calls pushes router to /dashboard', async () => {\n",
        "sim_msg_3": "Removed unnecessary tests from Sidebar.test.js"
    },
    {
        "org_diff": "diff --git a/packages/react-dom/src/__tests__/ReactUpdates-test.js b/a/packages/react-dom/src/__tests__/ReactUpdates-test.js @@ -1900,6 +1900,8 @@ describe('ReactUpdates', () => {\n       await act(() => {\n         root.render(<Terminating />);\n       });\n+\n+      assertLog(Array.from({length: LIMIT + 1}, (_, k) => k));\n       expect(container.textContent).toBe('50');\n       await act(() => {\n         _setStep(0);",
        "sim_diff_0": "diff --git a/renderer/components/__tests__/Sidebar.test.js b/renderer/components/__tests__/Sidebar.test.js @@ -33,46 +33,28 @@ const renderComponent = (component, locale = 'en', messages = English) => {\n}\ndescribe('Tests for Sidebar component', () => {\n- afterEach(() => {\n- cleanup()\n- })\n- test('Displays the correct version', async () => {\n+ beforeEach(() => {\nrenderComponent(\n<Sidebar>\n<></>\n</Sidebar>\n)\n- const versionNumber = screen.getByTestId('sidebar-version-number')\n- expect(versionNumber.innerHTML).toMatch(version)\n- })\n-\n- test('Displays child elements', async () => {\n- renderComponent(\n- <Sidebar>\n- <p data-testid=\"test-paragraph\">Test paragraph</p>\n- </Sidebar>\n- )\n- expect(screen.getByTestId('test-paragraph').innerHTML).toBe(\n- 'Test paragraph'\n- )\n})\n+ afterEach(() => {\n+ cleanup()\n+ jest.clearAllMocks()\n})\n-\n-describe('Sidebar NavItems push the router to correct path', () => {\n- beforeEach(() => {\n+ test('Displays the correct version', async () => {\nrenderComponent(\n<Sidebar>\n<></>\n</Sidebar>\n)\n- })\n-\n- afterEach(() => {\n- cleanup()\n- jest.clearAllMocks()\n+ const versionNumber = screen.getByTestId('sidebar-version-number')\n+ expect(versionNumber.innerHTML).toMatch(version)\n})\ntest('Clicking on Dashboard NavItem calls pushes router to /dashboard', async () => {\n",
        "sim_msg_0": "Removed unnecessary tests from Sidebar.test.js",
        "sim_diff_1": "diff --git a/src/components/dashboard/__tests__/Receive.js b/src/components/dashboard/__tests__/Receive.js @@ -11,10 +11,10 @@ describe('Receive', () => {\nexpect(tree.toJSON()).toBeTruthy()\n})\n- it('matches snapshot', () => {\n- const Receive = getWebRouterComponentWithMocks('../Receive')\n- const component = renderer.create(<Receive />)\n- const tree = component.toJSON()\n- expect(tree).toMatchSnapshot()\n- })\n+ // it('matches snapshot', () => {\n+ // const Receive = getWebRouterComponentWithMocks('../Receive')\n+ // const component = renderer.create(<Receive />)\n+ // const tree = component.toJSON()\n+ // expect(tree).toMatchSnapshot()\n+ // })\n})\n",
        "sim_msg_1": "Simplify tests as wasn't able to force mnemonics",
        "sim_diff_2": "diff --git a/src/components/ProductDetail/ProductDetail.test.js b/src/components/ProductDetail/ProductDetail.test.js @@ -2,9 +2,10 @@ import React from \"react\";\nimport renderer from \"react-test-renderer\";\nimport { shallow } from \"enzyme\";\nimport ProductDetail from \"./ProductDetail\";\n+import sampleData from \"./sampleData\";\ntest(\"basic snapshot\", () => {\n- const component = renderer.create(shallow(<ProductDetail />).get(0));\n+ const component = renderer.create(shallow(<ProductDetail catalogProduct={sampleData} />).get(0));\nconst tree = component.toJSON();\nexpect(tree).toMatchSnapshot();\n});\n",
        "sim_msg_2": "test: update test to use sample data",
        "sim_diff_3": "diff --git a/packages/transportation/src/components/App/index.test.js b/packages/transportation/src/components/App/index.test.js -import React from 'react';\n-import { shallow } from 'enzyme';\n-import App from './index';\n-\ndescribe('<App />', () => {\n- it('should render its children', () => {\n- const children = (<h1>Test</h1>);\n- const wrapper = shallow(\n- <App>\n- {children}\n- </App>,\n- );\n- expect(wrapper.contains(children)).to.eql(true);\n+ it('does not have have functioning tests...', () => {\n+ expect(true).to.eql(true);\n});\n});\n",
        "sim_msg_3": "rm non functioning tests"
    },
    {
        "org_diff": "diff --git a/packages/react-dom/src/__tests__/ReactDOMServerSelectiveHydration-test.internal.js b/a/packages/react-dom/src/__tests__/ReactDOMServerSelectiveHydration-test.internal.js @@ -1114,14 +1114,16 @@ describe('ReactDOMServerSelectiveHydration', () => {\n       // Outer was hydrated earlier\n       OuterTestUtils.assertLog([]);\n \n+      // First Inner Mouse Enter fires then Outer Mouse Enter\n+      assertLog(['Inner Mouse Enter', 'Outer Mouse Enter']);\n+\n       await act(() => {\n         Scheduler.unstable_flushAllWithoutAsserting();\n         OuterScheduler.unstable_flushAllWithoutAsserting();\n         InnerScheduler.unstable_flushAllWithoutAsserting();\n       });\n \n-      // First Inner Mouse Enter fires then Outer Mouse Enter\n-      assertLog(['Inner Mouse Enter', 'Outer Mouse Enter']);\n+      assertLog([]);\n     });\n   });\n ",
        "sim_diff_0": "diff --git a/renderer/components/onboard/__tests__/QuizSteps.test.js b/renderer/components/onboard/__tests__/QuizSteps.test.js @@ -107,4 +107,50 @@ describe('Tests for QuizSteps', () => {\nfireEvent.click(continueButton2)\nexpect(onQuizComplete).toHaveBeenCalledTimes(1)\n})\n+ test('User Story with first input incorrect and second input correct', async () => {\n+ const falseButton1 = screen.getByText(English['Onboarding.PopQuiz.False'])\n+ fireEvent.click(falseButton1)\n+ const lottiePlayer1 = screen.getByTestId('quiz-steps-cross')\n+ await waitForElementToBeRemoved(lottiePlayer1, { timeout: 2000 })\n+ const warningParagraph1 = screen.getByText(\n+ English['Onboarding.PopQuiz.1.Wrong.Paragraph']\n+ )\n+ const continueButton1 = screen.getByText(\n+ English['Onboarding.PopQuiz.Wrong.Button.Continue']\n+ )\n+ expect(warningParagraph1).toBeInTheDocument()\n+ fireEvent.click(continueButton1)\n+ const quizHeading2 = await screen.findByText(\n+ English['Onboarding.PopQuiz.2.Title']\n+ )\n+ expect(quizHeading2).toBeInTheDocument()\n+ const yesButton2 = screen.getByText(English['Onboarding.PopQuiz.True'])\n+ fireEvent.click(yesButton2)\n+ const lottiePlayerSecond = screen.getByTestId('quiz-steps-tick')\n+ await waitForElementToBeRemoved(lottiePlayerSecond, { timeout: 2000 })\n+ expect(onQuizComplete).toHaveBeenCalledTimes(1)\n+ })\n+ test('User Story with first input correct and second input incorrect', async () => {\n+ const yesButton1 = screen.getByText(English['Onboarding.PopQuiz.True'])\n+ fireEvent.click(yesButton1)\n+ const lottiePlayerFirst = screen.getByTestId('quiz-steps-tick')\n+ await waitForElementToBeRemoved(lottiePlayerFirst, { timeout: 2000 })\n+ const quizHeading2 = await screen.findByText(\n+ English['Onboarding.PopQuiz.2.Title']\n+ )\n+ expect(quizHeading2).toBeInTheDocument()\n+ const falseButton2 = screen.getByText(English['Onboarding.PopQuiz.False'])\n+ fireEvent.click(falseButton2)\n+ const lottiePlayer2 = screen.getByTestId('quiz-steps-cross')\n+ await waitForElementToBeRemoved(lottiePlayer2, { timeout: 2000 })\n+ const warningParagraph2 = screen.getByText(\n+ English['Onboarding.PopQuiz.2.Wrong.Paragraph']\n+ )\n+ const continueButton2 = screen.getByText(\n+ English['Onboarding.PopQuiz.Wrong.Button.Continue']\n+ )\n+ expect(warningParagraph2).toBeInTheDocument()\n+ fireEvent.click(continueButton2)\n+ expect(onQuizComplete).toHaveBeenCalledTimes(1)\n+ })\n})\n",
        "sim_msg_0": "Test written covering all four possible user inputs in QuizSteps.js",
        "sim_diff_1": "diff --git a/detox/test/e2e/34.visibility.test.js b/detox/test/e2e/34.visibility.test.js describe('visibility expectation', () => {\n+ let halfVisibleElement;\n+\nbeforeEach(async () => {\nawait device.reloadReactNative();\nawait element(by.text('Visibility Expectation')).tap();\n- });\n-\n- let halfVisibleElement;\n-\n- beforeEach(() => {\n- halfVisibleElement = element(by.id('halfVisible'));\n+ halfVisibleElement = await element(by.id('halfVisible'));\n});\nit(`should be truthy when at least 50% visibility is required`, async () => {\n",
        "sim_msg_1": "fix(34.visibility.test.js): await for element matching.",
        "sim_diff_2": "diff --git a/detox/test/e2e/l-animations.js b/detox/test/e2e/l-animations.js let _ = require('lodash');\n-describe.only('Animations', () => {\n+describe('Animations', () => {\nbeforeEach(async () => {\nawait device.reloadReactNative();\nawait element(by.label('Animations')).tap();\n@@ -45,7 +45,7 @@ describe.only('Animations', () => {\n});\nit(`should not wait during delays longer than 1.5s (driver: ${driver})`, async () => {\n- await _startTest(driver, {delay: 1501});\n+ await _startTest(driver, {delay: 1600});\nawait expect(element(by.id('UniqueId_AnimationsScreen_afterAnimationText'))).toNotExist();\n});\n",
        "sim_msg_2": "animations issue - fix",
        "sim_diff_3": "diff --git a/detox/test/e2e/03.actions.test.js b/detox/test/e2e/03.actions.test.js @@ -8,7 +8,7 @@ const driver = {\nreturn { x, y: 160 };\n},\nmultiTap: () => element(by.id(driver.tapsElement.testId)).multiTap(3),\n- tapAtPoint: () => element(by.id('View7990')).tapAtPoint(driver.tapsElement.coordinates),\n+ tapAtPoint: () => element(by.id('View7990')).tap(driver.tapsElement.coordinates),\nassertTapsCount: (count) => expect(element(by.id(driver.tapsElement.testId))).toHaveText(`Taps: ${count}`),\nassertTappedOnce: () => driver.tapsElement.assertTapsCount(1),\nassertMultiTapped: () => driver.tapsElement.assertTapsCount(3),\n@@ -23,7 +23,7 @@ const driver = {\n},\nmultiTapOnce: () => element(by.id(driver.doubleTapsElement.testId)).multiTap(1),\ndoubleTap: () => element(by.id(driver.doubleTapsElement.testId)).multiTap(2),\n- tapAtPointOnce: () => element(by.id('View7990')).tapAtPoint(driver.doubleTapsElement.coordinates),\n+ tapAtPointOnce: () => element(by.id('View7990')).tap(driver.doubleTapsElement.coordinates),\ntapAtPointTwice: async () => {\nawait driver.doubleTapsElement.tapAtPointOnce();\nawait driver.doubleTapsElement.tapAtPointOnce();\n@@ -54,8 +54,8 @@ describe('Actions', () => {\nawait expect(element(by.text('Long Press With Duration Working!!!'))).toBeVisible();\n});\n- it('should tap on an element at point', async () => {\n- await driver.tapsElement.tapAtPoint();\n+ it(':android: should tap on an element at point', async () => {\n+ await driver.tapsElement.tapsElement();\nawait driver.tapsElement.assertTappedOnce();\n});\n",
        "sim_msg_3": "Use modern tap(point) API\ndisable tap(point) test on iOS"
    },
    {
        "org_diff": "diff --git a/packages/react-dom/src/__tests__/ReactCompositeComponentState-test.js b/a/packages/react-dom/src/__tests__/ReactCompositeComponentState-test.js @@ -152,21 +152,6 @@ describe('ReactCompositeComponent-state', () => {\n       root.render(<TestComponent />);\n     });\n \n-    await act(() => {\n-      root.render(<TestComponent nextColor=\"green\" />);\n-    });\n-\n-    await act(() => {\n-      testComponentInstance.setFavoriteColor('blue');\n-    });\n-    await act(() => {\n-      testComponentInstance.forceUpdate(\n-        testComponentInstance.peekAtCallback('forceUpdate'),\n-      );\n-    });\n-\n-    root.unmount();\n-\n     assertLog([\n       // there is no state when getInitialState() is called\n       'getInitialState undefined',\n@@ -198,6 +183,13 @@ describe('ReactCompositeComponent-state', () => {\n       'componentDidUpdate-prevState orange',\n       'setState-yellow yellow',\n       'commit yellow',\n+    ]);\n+\n+    await act(() => {\n+      root.render(<TestComponent nextColor=\"green\" />);\n+    });\n+\n+    assertLog([\n       'componentWillReceiveProps-start yellow',\n       // setState({color:'green'}) only enqueues a pending state.\n       'componentWillReceiveProps-end yellow',\n@@ -216,6 +208,13 @@ describe('ReactCompositeComponent-state', () => {\n       'componentDidUpdate-prevState yellow',\n       'setState-receiveProps green',\n       'commit green',\n+    ]);\n+\n+    await act(() => {\n+      testComponentInstance.setFavoriteColor('blue');\n+    });\n+\n+    assertLog([\n       // setFavoriteColor('blue')\n       'shouldComponentUpdate-currentState green',\n       'shouldComponentUpdate-nextState blue',\n@@ -226,6 +225,13 @@ describe('ReactCompositeComponent-state', () => {\n       'componentDidUpdate-prevState green',\n       'setFavoriteColor blue',\n       'commit blue',\n+    ]);\n+    await act(() => {\n+      testComponentInstance.forceUpdate(\n+        testComponentInstance.peekAtCallback('forceUpdate'),\n+      );\n+    });\n+    assertLog([\n       // forceUpdate()\n       'componentWillUpdate-currentState blue',\n       'componentWillUpdate-nextState blue',\n@@ -234,7 +240,12 @@ describe('ReactCompositeComponent-state', () => {\n       'componentDidUpdate-prevState blue',\n       'forceUpdate blue',\n       'commit blue',\n-      // unmountComponent()\n+    ]);\n+\n+    root.unmount();\n+\n+    assertLog([\n+      // unmount()\n       // state is available within `componentWillUnmount()`\n       'componentWillUnmount blue',\n     ]);\n@@ -375,13 +386,13 @@ describe('ReactCompositeComponent-state', () => {\n     await act(() => {\n       root.render(<Parent />);\n     });\n+\n+    assertLog(['parent render one', 'child render one']);\n     await act(() => {\n       root.render(<Parent />);\n     });\n \n     assertLog([\n-      'parent render one',\n-      'child render one',\n       'parent render one',\n       'child componentWillReceiveProps one',\n       'child componentWillReceiveProps done one',",
        "sim_diff_0": "diff --git a/packages/react-router/docs/api/Route.md b/packages/react-router/docs/api/Route.md @@ -69,7 +69,7 @@ const User = ({ match }) => {\n}\n```\n-When you use `component` (instead of `render` or `children`, below) the router uses [`React.createElement`](https://facebook.github.io/react/docs/react-api.html#createelement) to create a new [React element](https://facebook.github.io/react/docs/rendering-elements.html) from the given component. That means if you provide an inline function to the `component` attribute, you would create a new component every render. This results in the existing component unmounting and the new component mounting instead of just updating the existing component. When using an inline function for inline rendering, use the `render` or the `children` prop (below).\n+When you use `component` (instead of `render` or `children`, below) the router uses [`React.createElement`](https://facebook.github.io/react/docs/react-api.html#createelement) to create a new [React element](https://facebook.github.io/react/docs/rendering-elements.html) from the given component. That means if you provide an inline function to the `component` prop, you would create a new component every render. This results in the existing component unmounting and the new component mounting instead of just updating the existing component. When using an inline function for inline rendering, use the `render` or the `children` prop (below).\n## render: func\n",
        "sim_msg_0": "use `prop` instead of `attribute`\nuse `prop` instead of `attribute` in route component",
        "sim_diff_1": "diff --git a/assets/js/googlesitekit/widgets/components/WidgetNull.test.js b/assets/js/googlesitekit/widgets/components/WidgetNull.test.js * Internal dependencies\n*/\nimport WidgetNull from './WidgetNull';\n-import { render } from '../../../../../tests/js/test-utils';\n+import {\n+ createTestRegistry,\n+ provideModules,\n+ provideUserCapabilities,\n+ render,\n+} from '../../../../../tests/js/test-utils';\n+import { STORE_NAME } from '../datastore/constants';\n+import Null from '../../../components/Null';\ndescribe( 'WidgetNull', () => {\n+ let registry;\n+\n+ beforeAll( () => {\n+ registry = createTestRegistry();\n+ provideModules( registry );\n+ provideUserCapabilities( registry );\n+ } );\n+\nit( 'should return an empty element', async () => {\n- const { container } = render( <WidgetNull widgetSlug=\"TestWidget\" /> );\n- expect( container ).toBeEmptyDOMElement();\n+ const widgetSlug = 'TestWidget';\n+\n+ // Initial state should be null.\n+ expect( registry.select( STORE_NAME ).getWidgetState( widgetSlug ) ).toBe( null );\n+\n+ const widget = render( <WidgetNull widgetSlug={ widgetSlug } />, { registry } );\n+\n+ expect( widget.container ).toBeEmptyDOMElement();\n+\n+ expect( registry.select( STORE_NAME ).getWidgetState( widgetSlug ) ).toMatchObject( {\n+ Component: Null,\n+ metadata: {},\n+ } );\n+\n+ // Special state should be unset again upon unmount.\n+ widget.unmount();\n+ expect( registry.select( STORE_NAME ).getWidgetState( widgetSlug ) ).toBe( null );\n} );\n} );\n",
        "sim_msg_1": "Add tests for state for WidgetNull.",
        "sim_diff_2": "diff --git a/example/src/components/CreateOfflineRegion.js b/example/src/components/CreateOfflineRegion.js import React from 'react';\n-import { Text, View, TouchableOpacity, Dimensions, StyleSheet } from 'react-native';\n+\n+import {\n+ Alert,\n+ Text,\n+ View,\n+ TouchableOpacity,\n+ Dimensions,\n+ StyleSheet,\n+} from 'react-native';\n+\nimport MapboxGL from '@mapbox/react-native-mapbox-gl';\nimport geoViewport from '@mapbox/geo-viewport';\n@@ -44,6 +53,7 @@ class CreateOfflineRegion extends React.Component {\nthis.state = {\nname: `test-${Date.now()}`,\n+ offlineRegion: null,\nofflineRegionStatus: null,\n};\n@@ -52,6 +62,7 @@ class CreateOfflineRegion extends React.Component {\nthis.onResume = this.onResume.bind(this);\nthis.onPause = this.onPause.bind(this);\n+ this.onStatusRequest = this.onStatusRequest.bind(this);\n}\ncomponentWillUnmount () {\n@@ -82,6 +93,7 @@ class CreateOfflineRegion extends React.Component {\nonDownloadProgress (offlineRegion, offlineRegionStatus) {\nthis.setState({\nname: offlineRegion.name,\n+ offlineRegion: offlineRegion,\nofflineRegionStatus: offlineRegionStatus,\n});\n}\n@@ -98,6 +110,13 @@ class CreateOfflineRegion extends React.Component {\n}\n}\n+ async onStatusRequest () {\n+ if (this.state.offlineRegion) {\n+ const offlineRegionStatus = await this.state.offlineRegion.status();\n+ Alert.alert('Get Status', JSON.stringify(offlineRegionStatus, null, 2));\n+ }\n+ }\n+\n_formatPercent () {\nif (!this.state.offlineRegionStatus) {\nreturn '0%';\n@@ -147,6 +166,12 @@ class CreateOfflineRegion extends React.Component {\n</View>\n</TouchableOpacity>\n+ <TouchableOpacity onPress={this.onStatusRequest}>\n+ <View style={styles.button}>\n+ <Text style={styles.buttonTxt}>Status</Text>\n+ </View>\n+ </TouchableOpacity>\n+\n<TouchableOpacity onPress={this.onPause}>\n<View style={styles.button}>\n<Text style={styles.buttonTxt}>Pause</Text>\n",
        "sim_msg_2": "Update offline region example to show off pack status method",
        "sim_diff_3": "diff --git a/src/components/NavigationMobile/NavigationItemMobile.test.js b/src/components/NavigationMobile/NavigationItemMobile.test.js @@ -117,20 +117,25 @@ const mockRoutingStore = {\nqueryString: \"\"\n};\n+const uiStore = {\n+ toggleMenuDrawerOpen() { },\n+ closeMenuDrawer() { }\n+};\n+\ntest(\"renders with 1 level of tags\", () => {\n- const component = renderer.create(shallow(<NavigationItemMobile navItem={mockTag} routingStore={mockRoutingStore} />).get(3));\n+ const component = renderer.create(shallow(<NavigationItemMobile navItem={mockTag} routingStore={mockRoutingStore} uiStore={uiStore} />).get(3));\nconst tree = component.toJSON();\nexpect(tree).toMatchSnapshot();\n});\ntest(\"renders with 2 levels of tags\", () => {\n- const component = renderer.create(<NavigationItemMobile navItem={mockTagWithSubTags} routingStore={mockRoutingStore} />);\n+ const component = renderer.create(<NavigationItemMobile navItem={mockTagWithSubTags} routingStore={mockRoutingStore} uiStore={uiStore} />);\nconst tree = component.toJSON();\nexpect(tree).toMatchSnapshot();\n});\ntest(\"renders with 3 levels of tags\", () => {\n- const component = renderer.create(<NavigationItemMobile navItem={mockTagsWithMoreSubTags} routingStore={mockRoutingStore} />);\n+ const component = renderer.create(<NavigationItemMobile navItem={mockTagsWithMoreSubTags} routingStore={mockRoutingStore} uiStore={uiStore} />);\nconst tree = component.toJSON();\nexpect(tree).toMatchSnapshot();\n});\n",
        "sim_msg_3": "test: pass mock uiStore to test components"
    },
    {
        "org_diff": "diff --git a/.github/workflows/commit_artifacts.yml b/a/.github/workflows/commit_artifacts.yml @@ -132,7 +132,7 @@ jobs:\n             ./compiled/facebook-www/eslint-plugin-react-hooks.js\n \n           # Move unstable_server-external-runtime.js into facebook-www\n-          mv build/oss-stable/react-dom/unstable_server-external-runtime.js \\\n+          mv build/oss-experimental/react-dom/unstable_server-external-runtime.js \\\n             ./compiled/facebook-www/unstable_server-external-runtime.js\n \n           # Move react-refresh-babel.development.js into babel-plugin-react-refresh",
        "sim_diff_0": "diff --git a/src/store.js b/src/store.js @@ -21,6 +21,7 @@ import editorReducer from './post/Write/EditorReducers';\nimport { responsiveReducer, mountResponsive } from './helpers/responsive';\nimport reblogReducers from './app/Reblog/reblogReducers';\nimport walletReducer from './wallet/walletReducer';\n+import currentTooltip from './tooltip/tooltipReducer.js';\nexport const messagesWorker = new MessagesWorker();\n@@ -44,6 +45,7 @@ const reducers = combineReducers({\nreblog: reblogReducers,\nwallet: walletReducer,\ntooltip,\n+ currentTooltip\n});\nconst middleware = [\n",
        "sim_msg_0": "add reducer to setup",
        "sim_diff_1": "diff --git a/src/components/nodes/index.js b/src/components/nodes/index.js @@ -14,4 +14,5 @@ export { default as serviceTask } from './serviceTask';\nexport { default as textAnnotation } from './textAnnotation';\nexport { default as pool } from './pool';\nexport { default as poolLane } from './poolLane';\n+export { default as Statusbar } from '../Statusbar';\nexport { default as Modeler } from '../Modeler';\n",
        "sim_msg_1": "Add Statusbar export and fix file name casing",
        "sim_diff_2": "diff --git a/source/background/library/browserEvents.js b/source/background/library/browserEvents.js import log from \"../../shared/library/log.js\";\nimport { dispatch } from \"../redux/index.js\";\nimport { setAuthToken } from \"../../shared/actions/dropbox.js\";\n+import { setUserActivity } from \"../../shared/actions/app.js\";\nconst BUTTERCUP_DOMAIN_REXP = /^https:\\/\\/buttercup.pw\\//;\nconst DROPBOX_ACCESS_TOKEN_REXP = /access_token=([^&]+)/;\nexport function attachBrowserStateListeners() {\nchrome.tabs.onUpdated.addListener(handleTabUpdatedEvent);\n+ chrome.tabs.onRemoved.addListener(handleTabRemovedEvent);\n}\nfunction handleTabUpdatedEvent(tabID, changeInfo) {\n@@ -21,4 +23,12 @@ function handleTabUpdatedEvent(tabID, changeInfo) {\nchrome.tabs.remove(tabID);\n}\n}\n+\n+ if (changeInfo.status === \"loading\") {\n+ dispatch(setUserActivity());\n+ }\n+}\n+\n+function handleTabRemovedEvent(tabID, removeInfo) {\n+ dispatch(setUserActivity());\n}\n",
        "sim_msg_2": "Set user's activity tracking on tab events\nUpdate user's activity tracking on any tab opening or closing.",
        "sim_diff_3": "diff --git a/src/feed/Page.js b/src/feed/Page.js import React from 'react';\n-import { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport Header from '../app/Header';\nimport MenuFeed from '../app/Menu/MenuFeed';\n@@ -17,10 +16,8 @@ import {\ngetUserFeedContentFromState,\ngetUserFeedLoadingFromState,\n} from '../helpers/stateHelpers';\n-import * as commentsActions from '../comments/commentsActions';\n-import { toggleBookmark } from '../bookmarks/bookmarksActions';\nimport Loading from '../widgets/Loading';\n-import FavoriteCategoryButton from '../favorites/FavoriteCategoryButton';\n+import FavoriteButton from '../favorites/FavoriteButton';\nimport * as favoriteActions from '../favorites/favoritesActions';\nimport EmptyFeed from '../statics/EmptyFeed';\n@@ -88,21 +85,19 @@ export default class Page extends React.Component {\n<div className=\"main-panel\">\n<Header />\n<MenuFeed category={category} />\n-\n{ category &&\n<h2 className=\"mt-3 text-center\">\n- <FavoriteCategoryButton\n+ <span className=\"text-info\">#</span>\n+ {' '}{category}{' '}\n+ <FavoriteButton\nisFavorited={this.isFavorited()}\nonClick={this.isFavorited()\n? this.props.removeCategoryFavorite\n: this.props.addCategoryFavorite\n}\n- >\n- # { category }\n- </FavoriteCategoryButton>\n+ />\n</h2>\n}\n-\n{ auth.isFetching && <Loading /> }\n{ !auth.isFetching &&\n<Feed\n",
        "sim_msg_3": "Dont use category label as favorite link"
    },
    {
        "org_diff": "diff --git a/.circleci/config.yml b/a/.circleci/config.yml @@ -2,7 +2,7 @@ version: 2.1\n \n aliases:\n   - &docker\n-    - image: cimg/openjdk:18.0-node\n+    - image: cimg/node:18.20.1-browsers\n \n   - &environment\n     TZ: /usr/share/zoneinfo/America/Los_Angeles\n@@ -246,8 +246,7 @@ jobs:\n           command: ./scripts/circleci/run_devtools_e2e_tests.js\n \n   run_fixtures_flight_tests:\n-    docker:\n-      - image: cimg/openjdk:20.0-node\n+    docker: *docker\n     environment: *environment\n     steps:\n       - checkout",
        "sim_diff_0": "diff --git a/.circleci/config.yml b/.circleci/config.yml @@ -7,7 +7,7 @@ version: 2\ndefaults: &defaults\nworking_directory: ~/repo\ndocker:\n- - image: circleci/node:10.12.0-browsers\n+ - image: circleci/node:10.16.0-browsers\njobs:\ntest:\n@@ -29,8 +29,12 @@ jobs:\n# run lint\n- run: npm run lint\n- # run tests\n- - run: npm run test:bs\n+ # run test locally first\n+ - run: npm run test\n+\n+ # run compatibility tests for multiple browser via browserstack\n+ # disabled until we can safely test multiple browsers\n+ # - run: npm run test:bs\n- persist_to_workspace:\nroot: ~/repo\n@@ -44,7 +48,7 @@ jobs:\nat: ~/repo\n- add_ssh_keys:\nfingerprints:\n- - \"df:41:a0:89:d0:a1:30:7d:08:38:d6:65:73:61:a4:ec\"\n+ - 'df:41:a0:89:d0:a1:30:7d:08:38:d6:65:73:61:a4:ec'\n- run:\nname: Authenticate with registry\ncommand: echo \"//registry.npmjs.org/:_authToken=$NPM_TOKEN\" >> ~/.npmrc\n",
        "sim_msg_0": "chore: update ci to node 10.16; use local chrome for speed",
        "sim_diff_1": "diff --git a/.circleci/config.yml b/.circleci/config.yml @@ -38,29 +38,28 @@ commands:\n- ./venv\n-jobs:\n- test-node12:\n- executor: node-latest-stable\n+aliases:\n+ - &test-steps\nsteps:\n- checkout\n- npm-install\n- run: npm run ci:test\n+\n+jobs:\n+ test-node12:\n+ executor: node-latest-stable\n+ <<: *test-steps\n+\ntest-node8:\ndocker:\n- image: circleci/node:8\n- steps:\n- - checkout\n- - npm-install\n- - run: npm run ci:test\n+ <<: *test-steps\ntest-node10:\ndocker:\n- image: circleci/node:10\n- steps:\n- - checkout\n- - npm-install\n- - run: npm run ci:test\n+ <<: *test-steps\ntest-e2e-apib:\nexecutor: node-latest-stable\n",
        "sim_msg_1": "chore: dry out test builds using aliases",
        "sim_diff_2": "diff --git a/.circleci/config.yml b/.circleci/config.yml @@ -165,6 +165,22 @@ jobs:\nname: E2E Tests\ncommand: OSENV=circle-mac yarn test:e2e\n+ 'e2e-linux':\n+ docker: *DOCKERIMAGE\n+ environment:\n+ CACHE_VERSION: *cache_version\n+ steps:\n+ - checkout\n+ - attach_workspace:\n+ at: /tmp/linux\n+ - *step_prepare_cache_buster\n+ - *step_restore_cache\n+ - *step_setup_nvm\n+ - *step_yarn_upgrade\n+ - run:\n+ name: E2E Tests\n+ command: OSENV=circle-linux yarn test:e2e\n+\n'stage-mac':\ndocker: &GGLOUDIMAGE\n- image: google/cloud-sdk:latest\n@@ -247,9 +263,12 @@ workflows:\n- 'build-linux':\nrequires:\n- unit-test\n- - 'stage-linux':\n+ - 'e2e-linux':\nrequires:\n- build-linux\n+ - 'stage-linux':\n+ requires:\n+ - e2e-linux\nfilters:\nbranches:\nonly:\n@@ -265,7 +284,7 @@ workflows:\n- build-mac\n- 'stage-mac':\nrequires:\n- - build-mac\n+ - e2e-mac\nfilters:\nbranches:\nonly:\n@@ -275,14 +294,14 @@ workflows:\n- /staging.*/\n- 'publish-mac':\nrequires:\n- - build-mac\n+ - e2e-mac\nfilters:\nbranches:\nonly:\n- master\n- 'publish-linux':\nrequires:\n- - build-linux\n+ - e2e-linux\nfilters:\nbranches:\nonly:\n",
        "sim_msg_2": "fix(e2e): tweaks on circleci settings",
        "sim_diff_3": "diff --git a/.circleci/config.yml b/.circleci/config.yml @@ -2,7 +2,7 @@ version: 2\njobs:\ntest:\ndocker:\n- - image: circleci/node:8\n+ - image: circleci/node:8.12.0\nworking_directory: ~/cli\nsteps:\n- checkout\n@@ -18,7 +18,7 @@ jobs:\n- run: npm test\ndeploy:\ndocker:\n- - image: circleci/node:8\n+ - image: circleci/node:8.12.0\nworking_directory: ~/cli\nsteps:\n- checkout\n",
        "sim_msg_3": "Fix Node.js versions on CircleCI"
    },
    {
        "org_diff": "diff --git a/.github/workflows/stale.yml b/a/.github/workflows/stale.yml @@ -2,8 +2,8 @@\n name: 'Manage stale issues and PRs'\n on:\n   schedule:\n-    # Run daily at 2AM\n-    - cron: '0 2 * * *'\n+    # Run hourly\n+    - cron: '0 * * * *'\n \n jobs:\n   stale:\n@@ -16,7 +16,7 @@ jobs:\n           days-before-stale: 90\n           # Number of days of inactivity before a stale issue or PR is closed\n           days-before-close: 7\n-          # Number of issues or PRs to process per day\n+          # API calls per run\n           operations-per-run: 100\n \n           # --- Issues ---\n@@ -43,4 +43,4 @@ jobs:\n           close-pr-message: >\n             Closing this pull request after a prolonged period of inactivity. If this issue is still present in the latest release, please ask for this pull request to be reopened. Thank you!\n           # PRs with these labels will never be considered stale\n-          exempt-pr-labels: \"Partner,React Core Team,Resolution: Backlog,Type: Bug,Type: Discussion,Type: Needs Investigation,Type: Regression,Type: Feature Request,Type: Enhancement\"\n\\ No newline at end of file\n+          exempt-pr-labels: \"Partner,React Core Team,Resolution: Backlog,Type: Bug,Type: Discussion,Type: Needs Investigation,Type: Regression,Type: Feature Request,Type: Enhancement\"",
        "sim_diff_0": "diff --git a/.github/workflows/stale.yml b/.github/workflows/stale.yml @@ -15,7 +15,7 @@ jobs:\nclose-pr-message: \"We're closing this pull request after a prolonged period of inactivity. If it is still relevant, please ask for this pull request to be reopened. Thank you.\"\nstale-issue-label: \"STATE: Stale\"\nstale-pr-label: \"STATE: Stale\"\n- days-before-stale: 700\n+ days-before-stale: 500\ndays-before-close: 10\nexempt-issue-labels: \"AREA: docs,FREQUENCY: critical,FREQUENCY: level 2,HELP WANTED,!IMPORTANT!,STATE: Need clarification,STATE: Need response,STATE: won't fix,support center,TYPE: bug\"\nexempt-pr-labels: \"AREA: docs,FREQUENCY: critical,FREQUENCY: level 2,HELP WANTED,!IMPORTANT!,STATE: Need clarification,STATE: Need response,STATE: won't fix,support center,TYPE: bug\"\n",
        "sim_msg_0": "Set the days-before-stale option to 500",
        "sim_diff_1": "diff --git a/.github/workflows/stale.yml b/.github/workflows/stale.yml @@ -15,7 +15,7 @@ jobs:\nclose-pr-message: \"We're closing this pull request after a prolonged period of inactivity. If it is still relevant, please ask for this pull request to be reopened. Thank you.\"\nstale-issue-label: \"STATE: Stale\"\nstale-pr-label: \"STATE: Stale\"\n- days-before-stale: 450\n+ days-before-stale: 400\ndays-before-close: 10\nexempt-issue-labels: \"AREA: docs,FREQUENCY: critical,FREQUENCY: level 2,HELP WANTED,!IMPORTANT!,STATE: Need clarification,STATE: Need response,STATE: won't fix,support center,TYPE: bug\"\nexempt-pr-labels: \"AREA: docs,FREQUENCY: critical,FREQUENCY: level 2,HELP WANTED,!IMPORTANT!,STATE: Need clarification,STATE: Need response,STATE: won't fix,support center,TYPE: bug\"\n",
        "sim_msg_1": "Set days-before-stale to 400",
        "sim_diff_2": "diff --git a/.github/workflows/stale.yml b/.github/workflows/stale.yml @@ -15,7 +15,7 @@ jobs:\nclose-pr-message: \"We're closing this pull request after a prolonged period of inactivity. If it is still relevant, please ask for this pull request to be reopened. Thank you.\"\nstale-issue-label: \"STATE: Stale\"\nstale-pr-label: \"STATE: Stale\"\n- days-before-stale: 500\n+ days-before-stale: 450\ndays-before-close: 10\nexempt-issue-labels: \"AREA: docs,FREQUENCY: critical,FREQUENCY: level 2,HELP WANTED,!IMPORTANT!,STATE: Need clarification,STATE: Need response,STATE: won't fix,support center,TYPE: bug\"\nexempt-pr-labels: \"AREA: docs,FREQUENCY: critical,FREQUENCY: level 2,HELP WANTED,!IMPORTANT!,STATE: Need clarification,STATE: Need response,STATE: won't fix,support center,TYPE: bug\"\n",
        "sim_msg_2": "Set the days-before-stale option to 450",
        "sim_diff_3": "diff --git a/.github/stale.yml b/.github/stale.yml # Configuration for probot-stale - https://github.com/probot/stale\n# Number of days of inactivity before an Issue or Pull Request becomes stale\n-daysUntilStale: 60\n+daysUntilStale: 45\n# Number of days of inactivity before a stale Issue or Pull Request is closed.\n# Set to false to disable. If disabled, issues still need to be closed manually, but will remain marked as stale.\n-daysUntilClose: 14\n+daysUntilClose: 7\n# Issues or Pull Requests with these labels will never be considered stale. Set to `[]` to disable\nexemptLabels:\n@@ -47,7 +47,7 @@ limitPerRun: 30\n# Optionally, specify configuration settings that are specific to just 'issues' or 'pulls':\npulls:\n- daysUntilStale: 60\n+ daysUntilStale: 45\nmarkComment: >\nThis pull request has been automatically marked as stale because it has not had\nrecent activity. It will be closed if no further activity occurs. Thank you\n",
        "sim_msg_3": "Update stale config [skip ci]"
    },
    {
        "org_diff": "diff --git a/packages/react-dom/package.json b/a/packages/react-dom/package.json @@ -25,23 +25,28 @@\n   \"files\": [\n     \"LICENSE\",\n     \"README.md\",\n-    \"index.js\",\n     \"client.js\",\n+    \"client.react-server.js\",\n+    \"index.js\",\n     \"profiling.js\",\n-    \"server.js\",\n+    \"profiling.react-server.js\",\n+    \"react-dom.react-server.js\",\n+    \"server-rendering-stub.js\",\n     \"server.browser.js\",\n+    \"server.bun.js\",\n     \"server.edge.js\",\n+    \"server.js\",\n     \"server.node.js\",\n-    \"server.bun.js\",\n-    \"static.js\",\n+    \"server.react-server.js\",\n     \"static.browser.js\",\n     \"static.edge.js\",\n+    \"static.js\",\n     \"static.node.js\",\n-    \"server-rendering-stub.js\",\n+    \"static.react-server.js\",\n     \"test-utils.js\",\n     \"unstable_testing.js\",\n+    \"unstable_testing.react-server.js\",\n     \"unstable_server-external-runtime.js\",\n-    \"react-dom.react-server.js\",\n     \"cjs/\",\n     \"umd/\"\n   ],",
        "sim_diff_0": "diff --git a/server/package.json b/server/package.json \"description\": \"\",\n\"main\": \"dist/server\",\n\"scripts\": {\n- \"babel\": \"babel src/ --out-dir dist/ --ignore 'lib/flow-typed','lib/node_modules','lib/package.json','web/flow-typed','web/node_modules','web/package.json','web/dist/hot','web/dist/dev.build.js','web/dist/prod.build.js','web/dist/prod.build.css','web/webpack.config.js','web/account-bar.react.js','web/app.react.js','web/calendar','web/chat','web/flow','web/loading-indicator.react.js','web/modals','web/router-history.js','web/script.js','web/selectors','web/server-rendering.js','web/splash','web/style.css','web/vector-utils.js','web/vectors.react.js' --copy-files\",\n+ \"babel\": \"babel src/ --out-dir dist/ --ignore 'lib/flow-typed','lib/node_modules','lib/package.json','web/flow-typed','web/node_modules','web/package.json','web/dist/hot','web/dist/dev.build.js','web/dist/prod.build.js','web/dist/prod.build.css','web/webpack.config.js','web/account-bar.react.js','web/app.react.js','web/calendar','web/chat','web/flow','web/loading-indicator.react.js','web/modals','web/router-history.js','web/script.js','web/selectors/chat-selectors.js','web/selectors/entry-selectors.js','web/server-rendering.js','web/splash','web/style.css','web/vector-utils.js','web/vectors.react.js' --copy-files\",\n\"prod\": \"node --experimental-modules --loader ./loader.mjs dist/server\",\n\"dev\": \"NODE_ENV=dev concurrently \\\"npm run babel -- --watch\\\" \\\"nodemon -e js,json --watch dist --experimental-modules --loader ./loader.mjs dist/server\\\"\"\n},\n",
        "sim_msg_0": "[server] Include nav-selectors in server",
        "sim_diff_1": "diff --git a/package.json b/package.json \"react-dom\": \"^15.3.2\",\n\"react-ga\": \"^2.1.2\",\n\"react-gateway\": \"^2.6.0\",\n+ \"react-hot-loader\": \"next\",\n\"react-intl\": \"^2.1.5\",\n\"react-is-scrolling\": \"^1.0.1\",\n\"react-modal2\": \"^3.1.0\",\n\"mocha\": \"^3.0.2\",\n\"mocha-make-stub\": \"^2.3.2\",\n\"react-addons-test-utils\": \"^15.3.2\",\n- \"react-hot-loader\": \"next\",\n\"redux-mock-store\": \"^1.2.0\",\n\"webpack-dev-server\": \"^1.15.1\",\n\"webpack-hot-middleware\": \"^2.10.0\"\n",
        "sim_msg_1": "move react-hot-loader to dependencies",
        "sim_diff_2": "diff --git a/package.json b/package.json \"react\": \"^15.3.2\",\n\"react-addons-test-utils\": \"^15.3.2\",\n\"react-dom\": \"^15.3.2\",\n+ \"react-test-renderer\": \"^15.5.4\",\n\"run-sequence\": \"^1.2.2\",\n\"sass-loader\": \"^6.0.3\",\n\"sinon\": \"^2.1.0\",\n\"style-loader\": \"^0.16.1\",\n- \"webpack\": \"^2.4.1\",\n- \"webpack-dev-server\": \"^2.4.2\"\n+ \"webpack\": \"^1.13.2\",\n+ \"webpack-dev-server\": \"^1.16.1\"\n},\n\"dependencies\": {\n\"classnames\": \"^2.2.5\",\n",
        "sim_msg_2": "rollback to webpack1",
        "sim_diff_3": "diff --git a/package.json b/package.json \"react-advanced-img\": \"^1.0.0\",\n\"react-dom\": \"^15.3.2\",\n\"react-intl\": \"^2.1.5\",\n- \"react-portal-tooltip\": \"^1.1.5\",\n\"react-redux\": \"^4.4.5\",\n\"react-responsive-utils\": \"^1.0.2\",\n\"react-router\": \"^3.0.0\",\n",
        "sim_msg_3": "remove react-portal-tooltip"
    },
    {
        "org_diff": "diff --git a/packages/react-dom/package.json b/a/packages/react-dom/package.json @@ -50,8 +50,12 @@\n       \"react-server\": \"./react-dom.react-server.js\",\n       \"default\": \"./index.js\"\n     },\n-    \"./client\": \"./client.js\",\n+    \"./client\": {\n+      \"react-server\": \"./client.react-server.js\",\n+      \"default\": \"./client.js\"\n+    },\n     \"./server\": {\n+      \"react-server\": \"./server.react-server.js\",\n       \"workerd\": \"./server.edge.js\",\n       \"bun\": \"./server.bun.js\",\n       \"deno\": \"./server.browser.js\",\n@@ -61,11 +65,24 @@\n       \"edge-light\": \"./server.edge.js\",\n       \"default\": \"./server.node.js\"\n     },\n-    \"./server.browser\": \"./server.browser.js\",\n-    \"./server.bun\": \"./server.bun.js\",\n-    \"./server.edge\": \"./server.edge.js\",\n-    \"./server.node\": \"./server.node.js\",\n+    \"./server.browser\": {\n+      \"react-server\": \"./server.react-server.js\",\n+      \"default\": \"./server.browser.js\"\n+    },\n+    \"./server.bun\": {\n+      \"react-server\": \"./server.react-server.js\",\n+      \"default\": \"./server.bun.js\"\n+    },\n+    \"./server.edge\": {\n+      \"react-server\": \"./server.react-server.js\",\n+      \"default\": \"./server.edge.js\"\n+    },\n+    \"./server.node\": {\n+      \"react-server\": \"./server.react-server.js\",\n+      \"default\": \"./server.node.js\"\n+    },\n     \"./static\": {\n+      \"react-server\": \"./static.react-server.js\",\n       \"workerd\": \"./static.edge.js\",\n       \"deno\": \"./static.browser.js\",\n       \"worker\": \"./static.browser.js\",\n@@ -74,13 +91,28 @@\n       \"edge-light\": \"./static.edge.js\",\n       \"default\": \"./static.node.js\"\n     },\n-    \"./static.browser\": \"./static.browser.js\",\n-    \"./static.edge\": \"./static.edge.js\",\n-    \"./static.node\": \"./static.node.js\",\n+    \"./static.browser\": {\n+      \"react-server\": \"./static.react-server.js\",\n+      \"default\": \"./static.browser.js\"\n+    },\n+    \"./static.edge\": {\n+      \"react-server\": \"./static.react-server.js\",\n+      \"default\": \"./static.edge.js\"\n+    },\n+    \"./static.node\": {\n+      \"react-server\": \"./static.react-server.js\",\n+      \"default\": \"./static.node.js\"\n+    },\n     \"./server-rendering-stub\": \"./server-rendering-stub.js\",\n-    \"./profiling\": \"./profiling.js\",\n+    \"./profiling\": {\n+      \"react-server\": \"./profiling.react-server.js\",\n+      \"default\": \"./profiling.js\"\n+    },\n     \"./test-utils\": \"./test-utils.js\",\n-    \"./unstable_testing\": \"./unstable_testing.js\",\n+    \"./unstable_testing\": {\n+      \"react-server\": \"./unstable_testing.react-server.js\",\n+      \"default\": \"./unstable_testing.js\"\n+    },\n     \"./unstable_server-external-runtime\": \"./unstable_server-external-runtime.js\",\n     \"./src/*\": \"./src/*\",\n     \"./package.json\": \"./package.json\"",
        "sim_diff_0": "diff --git a/server/src/responders/website-responders.js b/server/src/responders/website-responders.js @@ -50,20 +50,32 @@ const { renderToString } = ReactDOMServer;\nconst { Provider } = ReactRedux;\nconst { reducer } = ReduxSetup;\n-let jsURL, fontsURL, cssInclude;\n+type AssetInfo = {| jsURL: string, fontsURL: string, cssInclude: string |};\n+let assetInfo: ?AssetInfo = null;\n+async function getAssetInfo() {\n+ if (assetInfo) {\n+ return assetInfo;\n+ }\nif (process.env.NODE_ENV === \"dev\") {\n- jsURL = \"http://localhost:8080/dev.build.js\";\n- fontsURL = \"fonts/local-fonts.css\";\n- cssInclude = \"\";\n-} else {\n- const assets = import('../../compiled/assets');\n- jsURL = `compiled/${assets.browser.js}`;\n- fontsURL = \"https://fonts.googleapis.com/css?family=Open+Sans:300,600%7CAnaheim\";\n- cssInclude = html`<link\n+ assetInfo = {\n+ jsURL: \"http://localhost:8080/dev.build.js\",\n+ fontsURL: \"fonts/local-fonts.css\",\n+ cssInclude: \"\",\n+ };\n+ return assetInfo;\n+ }\n+ // $FlowFixMe compiled/assets.json doesn't always exist\n+ const { default: assets } = await import('../../compiled/assets');\n+ assetInfo = {\n+ jsURL: `compiled/${assets.browser.js}`,\n+ fontsURL: \"https://fonts.googleapis.com/css?family=Open+Sans:300,600%7CAnaheim\",\n+ cssInclude: html`<link\nrel=\"stylesheet\"\ntype=\"text/css\"\nhref=\"compiled/${assets.browser.css}\"\n- />`;\n+ />`,\n+ };\n+ return assetInfo;\n}\nasync function websiteResponder(viewer: Viewer, url: string): Promise<string> {\n@@ -91,6 +103,7 @@ async function websiteResponder(viewer: Viewer, url: string): Promise<string> {\n{ rawEntryInfos, userInfos: entryUserInfos },\n{ rawMessageInfos, truncationStatuses, userInfos: messageUserInfos },\nverificationResult,\n+ { jsURL, fontsURL, cssInclude },\n] = await Promise.all([\nfetchThreadInfos(viewer),\nfetchCurrentUserInfo(viewer),\n@@ -101,6 +114,7 @@ async function websiteResponder(viewer: Viewer, url: string): Promise<string> {\ndefaultNumberPerThread,\n),\nhandleVerificationRequest(viewer, navInfo.verify),\n+ getAssetInfo(),\nviewer.loggedIn ? setNewSession(viewer, calendarQuery, initialTime) : null,\n]);\n",
        "sim_msg_0": "[server] Fix up asset fetching on prod",
        "sim_diff_1": "diff --git a/src/pipeline/parse.js b/src/pipeline/parse.js @@ -111,7 +111,7 @@ exports.getDataJS = (ast, DATA_DIR, o) => {\n}\n-exports.getHighlightJS = (ast, paths) => {\n+exports.getHighlightJS = (ast, paths, server) => {\n// load react-syntax-highlighter from idyll's node_modules directory\nconst languageMap = {\njs: 'javascript',\n@@ -140,6 +140,18 @@ exports.getHighlightJS = (ast, paths) => {\n{}\n);\n+ if (server) {\n+ const rshPath = slash(path.dirname(resolve.sync('react-syntax-highlighter', { basedir: paths.DEFAULT_COMPONENTS_DIR })));\n+ const rsh = require(slash(path.join(rshPath, 'light')));\n+ Object.keys(languages).forEach((language) => {\n+ let cleanedLanguage = language;\n+ if (languageMap[language]) {\n+ cleanedLanguage = languageMap[language];\n+ }\n+ rsh.registerLanguage(language, require(slash(path.join(rshPath, 'languages', cleanedLanguage))).default);\n+ });\n+ return;\n+ }\nconst rshPath = slash(path.dirname(resolve.sync('react-syntax-highlighter', { basedir: paths.DEFAULT_COMPONENTS_DIR })));\nlet js = `var rsh = require('${slash(path.join(rshPath, 'light'))}')`\n@@ -154,6 +166,10 @@ exports.getHighlightJS = (ast, paths) => {\nreturn js;\n}\n+const requireHighlightJS = (ast, paths) => {\n+ exports.getHighlightJS(ast, paths, true);\n+}\n+\nexports.getHTML = (paths, ast, components, datasets, template) => {\n// there should only be one meta node\nconst metaNodes = getNodesByName('meta', ast);\n@@ -172,7 +188,7 @@ exports.getHTML = (paths, ast, components, datasets, template) => {\ncomponentClasses[key] = require(components[key])\n})\n- require(resolve.sync('react-syntax-highlighter', { basedir: paths.DEFAULT_COMPONENTS_DIR }));\n+ requireHighlightJS(ast, paths);\nconst ReactDOMServer = require('react-dom/server');\nconst React = require('react');\nconst InteractiveDocument = require('../client/component');\n",
        "sim_msg_1": "fix subtle difference between server and client syntax highlighting",
        "sim_diff_2": "diff --git a/package.json b/package.json \"react-dom\": \"^15.3.2\",\n\"react-ga\": \"^2.1.2\",\n\"react-gateway\": \"^2.6.0\",\n+ \"react-hot-loader\": \"next\",\n\"react-intl\": \"^2.1.5\",\n\"react-is-scrolling\": \"^1.0.1\",\n\"react-modal2\": \"^3.1.0\",\n\"mocha\": \"^3.0.2\",\n\"mocha-make-stub\": \"^2.3.2\",\n\"react-addons-test-utils\": \"^15.3.2\",\n- \"react-hot-loader\": \"next\",\n\"redux-mock-store\": \"^1.2.0\",\n\"webpack-dev-server\": \"^1.15.1\",\n\"webpack-hot-middleware\": \"^2.10.0\"\n",
        "sim_msg_2": "move react-hot-loader to dependencies",
        "sim_diff_3": "diff --git a/package.json b/package.json \"react\": \"^15.3.2\",\n\"react-addons-test-utils\": \"^15.3.2\",\n\"react-dom\": \"^15.3.2\",\n+ \"react-test-renderer\": \"^15.5.4\",\n\"run-sequence\": \"^1.2.2\",\n\"sass-loader\": \"^6.0.3\",\n\"sinon\": \"^2.1.0\",\n\"style-loader\": \"^0.16.1\",\n- \"webpack\": \"^2.4.1\",\n- \"webpack-dev-server\": \"^2.4.2\"\n+ \"webpack\": \"^1.13.2\",\n+ \"webpack-dev-server\": \"^1.16.1\"\n},\n\"dependencies\": {\n\"classnames\": \"^2.2.5\",\n",
        "sim_msg_3": "rollback to webpack1"
    },
    {
        "org_diff": "diff --git a/packages/react-dom-bindings/src/client/ReactFiberConfigDOM.js b/a/packages/react-dom-bindings/src/client/ReactFiberConfigDOM.js @@ -2417,9 +2417,15 @@ export function getResource(\n       return null;\n     }\n     case 'script': {\n-      if (typeof pendingProps.src === 'string' && pendingProps.async === true) {\n-        const scriptProps: ScriptProps = pendingProps;\n-        const key = getScriptKey(scriptProps.src);\n+      const async = pendingProps.async;\n+      const src = pendingProps.src;\n+      if (\n+        typeof src === 'string' &&\n+        async &&\n+        typeof async !== 'function' &&\n+        typeof async !== 'symbol'\n+      ) {\n+        const key = getScriptKey(src);\n         const scripts = getResourcesFromRoot(resourceRoot).hoistableScripts;\n \n         let resource = scripts.get(key);\n@@ -3065,16 +3071,20 @@ export function isHostHoistableType(\n       }\n     }\n     case 'script': {\n+      const isAsync =\n+        props.async &&\n+        typeof props.async !== 'function' &&\n+        typeof props.async !== 'symbol';\n       if (\n-        props.async !== true ||\n+        !isAsync ||\n         props.onLoad ||\n         props.onError ||\n-        typeof props.src !== 'string' ||\n-        !props.src\n+        !props.src ||\n+        typeof props.src !== 'string'\n       ) {\n         if (__DEV__) {\n           if (outsideHostContainerContext) {\n-            if (props.async !== true) {\n+            if (!isAsync) {\n               console.error(\n                 'Cannot render a sync or defer <script> outside the main document without knowing its order.' +\n                   ' Try adding async=\"\" or moving it into the root <head> tag.',",
        "sim_diff_0": "diff --git a/packages/gallery/tests/e2e/styleParams/allowTitle.e2e.spec.js b/packages/gallery/tests/e2e/styleParams/allowTitle.e2e.spec.js @@ -16,27 +16,30 @@ describe('allowTitle - e2e', () => {\nafterEach(() => {\ndriver.closeBrowser();\n});\n- it('should render when \"allowTitle\" is \"true\"', async () => {\n- await driver.openPage({\n- galleryLayout: 2,\n- allowTitle: true\n- });\n- await driver.waitFor.hookToBeVisible('item-container');\n- await driver.actions.hover('item-container')[0]\n- await driver.waitFor.timer(2000);\n- const page = await driver.grab.screenshot();\n- expect(page).toMatchImageSnapshot();\n- });\n- it('should not render when \"allowTitle\" is \"false\"', async () => {\n- await driver.openPage({\n- galleryLayout: 2,\n- allowTitle: false\n- });\n- await driver.waitFor.hookToBeVisible('item-container');\n- await driver.actions.hover('item-container')[0]\n- await driver.waitFor.timer(2000);\n- const page = await driver.grab.screenshot();\n- expect(page).toMatchImageSnapshot();\n- });\n+ it('Should render title', () => {\n+\n+ })\n+ // it('should render when \"allowTitle\" is \"true\"', async () => {\n+ // await driver.openPage({\n+ // galleryLayout: 2,\n+ // allowTitle: true\n+ // });\n+ // await driver.waitFor.hookToBeVisible('item-container');\n+ // await driver.actions.hover('item-container')[0]\n+ // await driver.waitFor.timer(2000);\n+ // const page = await driver.grab.screenshot();\n+ // expect(page).toMatchImageSnapshot();\n+ // });\n+ // it('should not render when \"allowTitle\" is \"false\"', async () => {\n+ // await driver.openPage({\n+ // galleryLayout: 2,\n+ // allowTitle: false\n+ // });\n+ // await driver.waitFor.hookToBeVisible('item-container');\n+ // await driver.actions.hover('item-container')[0]\n+ // await driver.waitFor.timer(2000);\n+ // const page = await driver.grab.screenshot();\n+ // expect(page).toMatchImageSnapshot();\n+ // });\n})\n\\ No newline at end of file\n",
        "sim_msg_0": "[gallery] tests (allowTitle e2e) removed 2e2 tests",
        "sim_diff_1": "diff --git a/components/bindings.js b/components/bindings.js @@ -3,12 +3,9 @@ import { App, updateProps } from './App.js';\nexport const setBindings = (appState, appProps, appHelpers) => {\nwindow.addEventListener('load', () => {\n- // APP\n- const appContainer = document.getElementById('appContainer');\n- appContainer.innerHTML = App(appProps);\n- console.log(appProps);\n-\n// INVENTORY\n+ console.log('lolrofl', appHelpers.inventory.getItems());\n+\nappContainer.querySelector('#twoD-inventoryUploadBtn').addEventListener('change', (e) => {\nconst file = e.target.files[0];\nappHelpers.inventory.uploadFile(file);\n",
        "sim_msg_1": "remove unneeded double re-render",
        "sim_diff_2": "diff --git a/src/lib/utils/dom.web.js b/src/lib/utils/dom.web.js @@ -12,19 +12,15 @@ export const scriptLoaded = async src => {\n}\nlet onScriptErrorHandler\n- const cancellationManager = CancelToken.source()\n- const options = { cancelToken: cancellationManager.token }\n+ const { token, cancel } = CancelToken.source()\nreturn Promise.race([\nnew Promise((_, reject) =>\n- scriptTag.addEventListener(\n- 'error',\n- (onScriptErrorHandler = exception => over(reject, cancellationManager.cancel)(exception)),\n- ),\n+ scriptTag.addEventListener('error', (onScriptErrorHandler = exception => over([reject, cancel])(exception))),\n),\naxios\n- .get(scriptSrc, options)\n+ .get(scriptSrc, { cancelToken: token })\n.then(noop)\n.finally(() => scriptTag.removeEventListener('error', onScriptErrorHandler)),\n])\n",
        "sim_msg_2": "fix scriptLoaded",
        "sim_diff_3": "diff --git a/src/lib/utils/dom.web.js b/src/lib/utils/dom.web.js @@ -12,16 +12,18 @@ export const scriptLoaded = async src => {\n}\nlet onScriptErrorHandler\n+ let onScriptLoadedHandler\nconst { token, cancel } = CancelToken.source()\nreturn Promise.race([\n- new Promise((_, reject) =>\n- scriptTag.addEventListener('error', (onScriptErrorHandler = exception => over([reject, cancel])(exception))),\n- ),\n+ new Promise((resolve, reject) => {\n+ scriptTag.addEventListener('load', (onScriptLoadedHandler = () => over([resolve, cancel])(scriptTag)))\n+ scriptTag.addEventListener('error', (onScriptErrorHandler = exception => over([reject, cancel])(exception)))\n+ }),\n- axios\n- .get(scriptSrc, { cancelToken: token })\n- .then(noop)\n- .finally(() => scriptTag.removeEventListener('error', onScriptErrorHandler)),\n- ])\n+ axios.get(scriptSrc, { cancelToken: token }).finally(() => {\n+ scriptTag.removeEventListener('load', onScriptLoadedHandler)\n+ scriptTag.removeEventListener('error', onScriptErrorHandler)\n+ }),\n+ ]).then(noop)\n}\n",
        "sim_msg_3": "optimize scriptLoaded"
    },
    {
        "org_diff": "diff --git a/packages/react-dom-bindings/src/events/ReactDOMEventReplaying.js b/a/packages/react-dom-bindings/src/events/ReactDOMEventReplaying.js @@ -38,7 +38,7 @@ import {isHigherEventPriority} from 'react-reconciler/src/ReactEventPriorities';\n import {isRootDehydrated} from 'react-reconciler/src/ReactFiberShellHydration';\n import {dispatchReplayedFormAction} from './plugins/FormActionEventPlugin';\n import {\n-  getCurrentUpdatePriority,\n+  resolveUpdatePriority,\n   runWithPriority as attemptHydrationAtPriority,\n } from '../client/ReactDOMUpdatePriority';\n \n@@ -333,10 +333,7 @@ function attemptExplicitHydrationTarget(\n }\n \n export function queueExplicitHydrationTarget(target: Node): void {\n-  // TODO: This will read the priority if it's dispatched by the React\n-  // event system but not native events. Should read window.event.type, like\n-  // we do for updates (getCurrentEventPriority).\n-  const updatePriority = getCurrentUpdatePriority();\n+  const updatePriority = resolveUpdatePriority();\n   const queuedTarget: QueuedHydrationTarget = {\n     blockedOn: null,\n     target: target,",
        "sim_diff_0": "diff --git a/src/components/EventList.js b/src/components/EventList.js @@ -26,7 +26,7 @@ const EventList = ({\nrenderItem={({ item: event }) => (\n<View style={styles.eventListItem}>\n<TouchableOpacity\n- delayPressIn={10}\n+ delayPressIn={50}\nonPress={() => onPress(event.fields.name[locale])}\n>\n<EventCard name={event.fields.name[locale]} />\n",
        "sim_msg_0": "changing delayPressIn to 50",
        "sim_diff_1": "diff --git a/src/screens/SavedEventListScreen/component.js b/src/screens/SavedEventListScreen/component.js @@ -53,9 +53,7 @@ class SavedEventListScreen extends PureComponent<Props> {\naddSavedEvent={addSavedEvent}\nremoveSavedEvent={removeSavedEvent}\nrefreshing={refreshing}\n- onRefresh={() => {\n- updateEvents();\n- }}\n+ onRefresh={updateEvents}\nonPress={(eventId: string) => {\nnavigation.navigate(EVENT_DETAILS, { eventId });\n}}\n",
        "sim_msg_1": "code comments on PR",
        "sim_diff_2": "diff --git a/web/src/util/events.js b/web/src/util/events.js @@ -18,6 +18,7 @@ export const getKittyItemsEventByType = (events, type) => {\nexport const getStorefrontEventByType = (events, type) => {\nreturn events.find(\nevent =>\n- event.type === `A.${fcl.sansPrefix(publicConfig.flowAddress)}.${type}`\n+ event.type ===\n+ `A.${fcl.sansPrefix(publicConfig.contractNftStorefront)}.${type}`\n)\n}\n",
        "sim_msg_2": "Update storefront event address",
        "sim_diff_3": "diff --git a/src/screens/EventDetailsScreen/component.js b/src/screens/EventDetailsScreen/component.js @@ -25,15 +25,9 @@ type Props = {\nevent: Event\n};\n-class EventDetailsScreen extends React.Component<Props> {\n- static navigationOptions = {\n- header: null\n- };\n-\n- render() {\n- const { event } = this.props;\n- const startTime = new Date(this.props.event.fields.startTime[locale]);\n- const endTime = new Date(this.props.event.fields.endTime[locale]);\n+const renderEventOverview = event => {\n+ const startTime = new Date(event.fields.startTime[locale]);\n+ const endTime = new Date(event.fields.endTime[locale]);\nconst dateFormat = \"DD MMMM YYYY\";\nconst timeFormat = \"HH:mm\";\nconst dateDisplay = isSameDay(startTime, endTime)\n@@ -48,12 +42,6 @@ class EventDetailsScreen extends React.Component<Props> {\n)}`;\nreturn (\n- <ScrollView style={styles.container}>\n- <Header\n- onBackButtonPress={() => {\n- this.props.navigation.goBack(null);\n- }}\n- />\n<View style={styles.content}>\n<Text type=\"h1\">{event.fields.name[locale]}</Text>\n<View style={styles.categoryLabelContainer}>\n@@ -104,7 +92,10 @@ class EventDetailsScreen extends React.Component<Props> {\n</View>\n)}\n</View>\n- <View style={styles.sectionDivider} />\n+ );\n+};\n+\n+const renderEventDescription = event => (\n<View style={styles.content}>\n<Text markdown>{event.fields.eventDescription[locale]}</Text>\n<View style={styles.mapWrapper}>\n@@ -115,7 +106,10 @@ class EventDetailsScreen extends React.Component<Props> {\n/>\n</View>\n</View>\n- {(event.fields.accessibilityDetails ||\n+);\n+\n+const renderEventDetails = event =>\n+ (event.fields.accessibilityDetails ||\nevent.fields.email ||\nevent.fields.phone ||\nevent.fields.ticketingUrl) && (\n@@ -161,7 +155,26 @@ class EventDetailsScreen extends React.Component<Props> {\n)}\n</View>\n</View>\n- )}\n+ );\n+\n+class EventDetailsScreen extends React.Component<Props> {\n+ static navigationOptions = {\n+ header: null\n+ };\n+\n+ render() {\n+ const { event } = this.props;\n+ return (\n+ <ScrollView style={styles.container}>\n+ <Header\n+ onBackButtonPress={() => {\n+ this.props.navigation.goBack(null);\n+ }}\n+ />\n+ {renderEventOverview(event)}\n+ <View style={styles.sectionDivider} />\n+ {renderEventDescription(event)}\n+ {renderEventDetails(event)}\n</ScrollView>\n);\n}\n",
        "sim_msg_3": "split event screen component into separate functions"
    },
    {
        "org_diff": "diff --git a/packages/react/src/jsx/ReactJSXElement.js b/a/packages/react/src/jsx/ReactJSXElement.js @@ -364,12 +364,8 @@ export function jsxProd(type, config, maybeKey) {\n     // because in V8 it will deopt the object to dictionary mode.\n     props = {};\n     for (const propName in config) {\n-      if (\n-        hasOwnProperty.call(config, propName) &&\n-        // Skip over reserved prop names\n-        propName !== 'key' &&\n-        (enableRefAsProp || propName !== 'ref')\n-      ) {\n+      // Skip over reserved prop names\n+      if (propName !== 'key' && (enableRefAsProp || propName !== 'ref')) {\n         if (enableRefAsProp && !disableStringRefs && propName === 'ref') {\n           props.ref = coerceStringRef(\n             config[propName],\n@@ -603,12 +599,8 @@ export function jsxDEV(type, config, maybeKey, isStaticChildren, source, self) {\n       // because in V8 it will deopt the object to dictionary mode.\n       props = {};\n       for (const propName in config) {\n-        if (\n-          hasOwnProperty.call(config, propName) &&\n-          // Skip over reserved prop names\n-          propName !== 'key' &&\n-          (enableRefAsProp || propName !== 'ref')\n-        ) {\n+        // Skip over reserved prop names\n+        if (propName !== 'key' && (enableRefAsProp || propName !== 'ref')) {\n           if (enableRefAsProp && !disableStringRefs && propName === 'ref') {\n             props.ref = coerceStringRef(\n               config[propName],",
        "sim_diff_0": "diff --git a/lib/attributes-to-props.js b/lib/attributes-to-props.js @@ -12,10 +12,11 @@ DOMProperty.injection.injectDOMPropertyConfig(\n/**\n* Makes attributes compatible with React props.\n*\n- * @param {Object} attributes - The attributes.\n+ * @param {Object} [attributes={}] - The attributes.\n* @return {Object} - The props.\n*/\n-function attributesToProps(attributes = {}) {\n+function attributesToProps(attributes) {\n+ attributes = attributes || {};\nvar props = {};\nvar propertyName;\nvar propertyValue;\n",
        "sim_msg_0": "fix(attributes-to-props): undo default function parameter\nReverting the default parameter set in `attributesToProps` will\nenable ES5 compatibility since this code is not transpiled.",
        "sim_diff_1": "diff --git a/lib/attributes-to-props.js b/lib/attributes-to-props.js @@ -11,50 +11,55 @@ DOMProperty.injection.injectDOMPropertyConfig(\n);\n/**\n- * Makes attributes compatible with React props.\n+ * Converts HTML/SVG DOM attributes to React props.\n*\n- * @param {Object} [attributes={}] - The attributes.\n- * @return {Object} - The props.\n+ * @param {Object} [attributes={}] - The HTML/SVG DOM attributes.\n+ * @return {Object} - The React props.\n*/\nfunction attributesToProps(attributes) {\nattributes = attributes || {};\n+\n+ var attributeName;\n+ var attributeValue;\n+ var property;\nvar props = {};\n- var propertyName;\n- var propertyValue;\n- var reactProperty;\n- for (propertyName in attributes) {\n- propertyValue = attributes[propertyName];\n+ for (attributeName in attributes) {\n+ attributeValue = attributes[attributeName];\n- // custom attributes (`data-` and `aria-`)\n- if (isCustomAttribute(propertyName)) {\n- props[propertyName] = propertyValue;\n+ // ARIA (aria-*) or custom data (data-*) attribute\n+ if (isCustomAttribute(attributeName)) {\n+ props[attributeName] = attributeValue;\ncontinue;\n}\n- // make HTML DOM attribute/property consistent with React attribute/property\n- reactProperty = config.html[propertyName.toLowerCase()];\n- if (reactProperty) {\n+ // convert HTML attribute to React prop\n+ property = config.html[attributeName.toLowerCase()];\n+ if (property) {\nif (\nObject.prototype.hasOwnProperty.call(\nDOMProperty.properties,\n- reactProperty\n+ property\n) &&\n- DOMProperty.properties[reactProperty].hasBooleanValue\n+ DOMProperty.properties[property].hasBooleanValue\n) {\n- props[reactProperty] = true;\n+ props[property] = true;\n} else {\n- props[reactProperty] = propertyValue;\n+ props[property] = attributeValue;\n+ }\n+ continue;\n}\n+\n+ // convert SVG attribute to React prop\n+ property = config.svg[attributeName];\n+ if (property) {\n+ props[property] = attributeValue;\ncontinue;\n}\n- // make SVG DOM attribute/property consistent with React attribute/property\n- reactProperty = config.svg[propertyName];\n- if (reactProperty) {\n- props[reactProperty] = propertyValue;\n- } else if (utilities.PRESERVE_CUSTOM_ATTRIBUTES) {\n- props[propertyName] = propertyValue;\n+ // custom attribute\n+ if (utilities.PRESERVE_CUSTOM_ATTRIBUTES) {\n+ props[attributeName] = attributeValue;\n}\n}\n@@ -62,6 +67,7 @@ function attributesToProps(attributes) {\nif (attributes.style != null) {\nprops.style = cssToJs(attributes.style);\n}\n+\nreturn props;\n}\n@@ -75,14 +81,16 @@ function cssToJs(style) {\nif (typeof style !== 'string') {\nthrow new TypeError('First argument must be a string.');\n}\n+\nvar styleObj = {};\n- styleToObject(style, function(propName, propValue) {\n- // Check if it's not a comment node\n- if (propName && propValue) {\n- styleObj[camelCase(propName)] = propValue;\n+ styleToObject(style, function(property, value) {\n+ // skip if it's a comment node\n+ if (property && value) {\n+ styleObj[camelCase(property)] = value;\n}\n});\n+\nreturn styleObj;\n}\n",
        "sim_msg_1": "refactor(attributes-to-props): rename variables so they're semantic",
        "sim_diff_2": "diff --git a/packages/idyll-document/src/runtime.js b/packages/idyll-document/src/runtime.js @@ -152,14 +152,14 @@ const createWrapper = ({ theme, layout }) => {\n}\n// Returns a single <ul> containing each prop value of info as a <li> item\n- handleFormatComponent(runtimeValues, metaValues) { // TODO probly need two params -- the props along with storing the actual data\n- // if (!info || !info.props) {\n- // return null;\n- // }\n- // const allProps = info.props;\n- // const propValues = allProps.map((propSet) => {\n- // const value = info // I think I'm gonna need the previous c in order to get the *actual* values\n- // });\n+ handleFormatComponent(runtimeValues, metaValues) {\n+ const componentName = metaValues.name;\n+\n+ // Docs use lowercase component name for link\n+ const componentLowerCase = componentName.charAt(0).toLowerCase()\n+ + componentName.slice(1);\n+ const componentDocsLink = \"https://idyll-lang.org/docs/components/default/\" + componentLowerCase;\n+\nconst allProps = Object.keys(runtimeValues.props);\nconst propValues = allProps.map((prop) => {\nconst propValue = runtimeValues.props[prop];\n@@ -181,8 +181,8 @@ const createWrapper = ({ theme, layout }) => {\n});\nreturn (\n<p>\n- This component's type is {runtimeValues.type.name ? runtimeValues.type.name : runtimeValues.type}\n- { /* TODO use metaValues.name if possible */}\n+ {componentName} component\n+ <a href={componentDocsLink}>Docs</a>\n<ul>{propValues}</ul>\n</p>\n);\n@@ -202,7 +202,6 @@ const createWrapper = ({ theme, layout }) => {\nlet childComponent = null;\nconst returnComponent = React.Children.map(children, (c, i) => {\nchildComponent = c;\n- debugger;\nreturn React.cloneElement(c, {\nkey: `${this.key}-${i}`,\nidyll: {\n",
        "sim_msg_2": "use _idyll for name and docs link",
        "sim_diff_3": "diff --git a/packages/manager/apps/container/src/container/legacy/account-sidebar/PaymentMethod/Details.tsx b/packages/manager/apps/container/src/container/legacy/account-sidebar/PaymentMethod/Details.tsx @@ -14,7 +14,7 @@ type Props = {\nconst Details = ({\ncssBaseClassName = '',\n- defaultPaymentMethod = {},\n+ defaultPaymentMethod = null,\ntranslationBase = '',\n}: Props): JSX.Element => {\nconst { t } = useTranslation(TRANSLATE_NAMESPACE);\n",
        "sim_msg_3": "fix(container.account-sidebar): fix payment method default\nref:"
    },
    {
        "org_diff": "diff --git a/fixtures/nesting/README.md b/a/fixtures/nesting/README.md @@ -68,7 +68,7 @@ We will use three different `package.json`s: one for non-React code at the root,\n - **`src/legacy/package.json`**: This is where we declare the `react` and `react-dom`  dependencies for the \"legacy\" trees. In this demo, we're using React 16.8 (although, as noted above, we could downgrade it further below). This is **also** where we specify any third-party libraries that use React. For example, we include `react-router` and `react-redux` in this example. \n - **`src/modern/package.json`**: This is where we declare the `react` and `react-dom`  dependencies for the \"modern\" trees. In this demo, we're using React 17. Here, we also specify third-party dependencies that use React and are used from the modern part of our app. This is why we *also* have `react-router` and `react-redux` in this file. (Their versions don't strictly have to match their `legacy` counterparts, but features that rely on context may require workarounds if they differ.)\n \n-The `scripts` in the root `package.json` are set up so that when you run `npm install` in it, it also runs `npm intall` in both `src/legacy` and `src/modern` folders.\n+The `scripts` in the root `package.json` are set up so that when you run `npm install` in it, it also runs `npm install` in both `src/legacy` and `src/modern` folders.\n \n **Note:** This demo is set up to use a few third-party dependencies (React Router and Redux). These are not essential, and you can remove them from the demo. They are included so we can show how to make them work with this approach.\n ",
        "sim_diff_0": "diff --git a/packages/playground/src/components/App/App.js b/packages/playground/src/components/App/App.js -import React, {useEffect, useState} from 'react';\n+import React, {useEffect} from 'react';\nimport {SideBar} from '../SideBar';\nimport {Button} from 'antd';\nimport {useGalleryContext} from '../../hooks/useGalleryContext';\n",
        "sim_msg_0": "[playground] fix: remove unused param",
        "sim_diff_1": "diff --git a/package.json b/package.json \"formidable\": \"^1.2.2\",\n\"fs-extra\": \"^9.0.1\",\n\"isomorphic-fetch\": \"^2.2.1\",\n- \"next\": \"^9.4.0\",\n+ \"next\": \"^9.4.4\",\n\"react\": \"^16.12.0\",\n\"react-dom\": \"^16.12.0\",\n\"react-tippy\": \"^1.3.4\",\n",
        "sim_msg_1": "versions: next 9.4.4",
        "sim_diff_2": "diff --git a/package.json b/package.json \"resize-observer-polyfill\": \"^1.5.0\"\n},\n\"peerDependencies\": {\n- \"react\": \"^0.14.0 || ^15.0.1 || ^16.0.0 || ^17.0.0\",\n- \"react-dom\": \"^0.14.0 || ^15.0.1 || ^16.0.0 || ^17.0.0\"\n+ \"react\": \"^0.14.0 || ^15.0.1 || ^16.0.0 || ^17.0.0 || ^18.0.0\",\n+ \"react-dom\": \"^0.14.0 || ^15.0.1 || ^16.0.0 || ^17.0.0 || ^18.0.0\"\n},\n\"jest\": {\n\"setupFiles\": [\n",
        "sim_msg_2": "add support for React18",
        "sim_diff_3": "diff --git a/package.json b/package.json \"prop-types\": \"^15.5.10\",\n\"react\": \"^15.1.0\",\n\"react-autosuggest\": \"^7.0.1\",\n+ \"react-addons-css-transition-group\": \"~15.4.0\",\n\"react-datetime\": \"^2.6.0\",\n\"react-dom\": \"^15.1.0\",\n\"react-frame-component\": \"^1.0.3\",\n",
        "sim_msg_3": "Re-add `react-addons-css-transition-group` for `react-toolbox`.\n`react-transition-group` is the replacment, but the current version of\n`react-toolbox` still requires the old one as a peer-dependency."
    },
    {
        "org_diff": "diff --git a/.github/workflows/stale.yml b/a/.github/workflows/stale.yml @@ -16,8 +16,8 @@ jobs:\n           days-before-stale: 90\n           # Number of days of inactivity before a stale issue or PR is closed\n           days-before-close: 7\n-          # Tmp dry run setup to test new config\n-          debug-only: 'true'\n+          # Number of issues or PRs to process per day\n+          operations-per-run: 100\n \n           # --- Issues ---\n           stale-issue-label: \"Resolution: Stale\"\n@@ -30,7 +30,7 @@ jobs:\n           close-issue-message: >\n             Closing this issue after a prolonged period of inactivity. If this issue is still present in the latest release, please create a new issue with up-to-date information. Thank you!\n           # Issues with these labels will never be considered stale\n-          exempt-issue-labels: \"Partner,React Core Team,Resolution: Backlog,Type: Bug,Type: Discussion,Type: Needs Investigation,Type: Regression,Type: Feature Request\"\n+          exempt-issue-labels: \"Partner,React Core Team,Resolution: Backlog,Type: Bug,Type: Discussion,Type: Needs Investigation,Type: Regression,Type: Feature Request,Type: Enhancement\"\n \n           # --- PRs ---\n           stale-pr-label: \"Resolution: Stale\"\n@@ -43,4 +43,4 @@ jobs:\n           close-pr-message: >\n             Closing this pull request after a prolonged period of inactivity. If this issue is still present in the latest release, please ask for this pull request to be reopened. Thank you!\n           # PRs with these labels will never be considered stale\n-          exempt-pr-labels: \"Partner,React Core Team,Resolution: Backlog,Type: Bug,Type: Discussion,Type: Needs Investigation,Type: Regression,Type: Feature Request\"\n\\ No newline at end of file\n+          exempt-pr-labels: \"Partner,React Core Team,Resolution: Backlog,Type: Bug,Type: Discussion,Type: Needs Investigation,Type: Regression,Type: Feature Request,Type: Enhancement\"\n\\ No newline at end of file",
        "sim_diff_0": "diff --git a/.github/workflows/stale.yml b/.github/workflows/stale.yml @@ -15,7 +15,7 @@ jobs:\nclose-pr-message: \"We're closing this pull request after a prolonged period of inactivity. If it is still relevant, please ask for this pull request to be reopened. Thank you.\"\nstale-issue-label: \"STATE: Stale\"\nstale-pr-label: \"STATE: Stale\"\n- days-before-stale: 500\n+ days-before-stale: 450\ndays-before-close: 10\nexempt-issue-labels: \"AREA: docs,FREQUENCY: critical,FREQUENCY: level 2,HELP WANTED,!IMPORTANT!,STATE: Need clarification,STATE: Need response,STATE: won't fix,support center,TYPE: bug\"\nexempt-pr-labels: \"AREA: docs,FREQUENCY: critical,FREQUENCY: level 2,HELP WANTED,!IMPORTANT!,STATE: Need clarification,STATE: Need response,STATE: won't fix,support center,TYPE: bug\"\n",
        "sim_msg_0": "Set the days-before-stale option to 450",
        "sim_diff_1": "diff --git a/.github/workflows/stale.yml b/.github/workflows/stale.yml @@ -15,7 +15,7 @@ jobs:\nclose-pr-message: \"We're closing this pull request after a prolonged period of inactivity. If it is still relevant, please ask for this pull request to be reopened. Thank you.\"\nstale-issue-label: \"STATE: Stale\"\nstale-pr-label: \"STATE: Stale\"\n- days-before-stale: 450\n+ days-before-stale: 400\ndays-before-close: 10\nexempt-issue-labels: \"AREA: docs,FREQUENCY: critical,FREQUENCY: level 2,HELP WANTED,!IMPORTANT!,STATE: Need clarification,STATE: Need response,STATE: won't fix,support center,TYPE: bug\"\nexempt-pr-labels: \"AREA: docs,FREQUENCY: critical,FREQUENCY: level 2,HELP WANTED,!IMPORTANT!,STATE: Need clarification,STATE: Need response,STATE: won't fix,support center,TYPE: bug\"\n",
        "sim_msg_1": "Set days-before-stale to 400",
        "sim_diff_2": "diff --git a/.github/workflows/stale.yml b/.github/workflows/stale.yml @@ -15,7 +15,7 @@ jobs:\nclose-pr-message: \"We're closing this pull request after a prolonged period of inactivity. If it is still relevant, please ask for this pull request to be reopened. Thank you.\"\nstale-issue-label: \"STATE: Stale\"\nstale-pr-label: \"STATE: Stale\"\n- days-before-stale: 700\n+ days-before-stale: 500\ndays-before-close: 10\nexempt-issue-labels: \"AREA: docs,FREQUENCY: critical,FREQUENCY: level 2,HELP WANTED,!IMPORTANT!,STATE: Need clarification,STATE: Need response,STATE: won't fix,support center,TYPE: bug\"\nexempt-pr-labels: \"AREA: docs,FREQUENCY: critical,FREQUENCY: level 2,HELP WANTED,!IMPORTANT!,STATE: Need clarification,STATE: Need response,STATE: won't fix,support center,TYPE: bug\"\n",
        "sim_msg_2": "Set the days-before-stale option to 500",
        "sim_diff_3": "diff --git a/.github/stale.yml b/.github/stale.yml # Number of days of inactivity before an issue becomes stale\n-daysUntilStale: 1095\n+daysUntilStale: 730\n# Number of days of inactivity before a stale issue is closed\ndaysUntilClose: 10\n# Issues with these labels will never be considered stale\n@@ -11,7 +11,6 @@ exemptLabels:\n- \"!IMPORTANT!\"\n- \"STATE: Need clarification\"\n- \"STATE: Need response\"\n- - \"STATE: Stale\"\n- \"STATE: won't fix\"\n- \"support center\"\n- \"TYPE: bug\"\n",
        "sim_msg_3": "Start Phase (2yo issues)\nAlso, Remove the \"TYPE: Stale\" label from exempt labels."
    },
    {
        "org_diff": "diff --git a/packages/react-server/src/ReactFizzServer.js b/a/packages/react-server/src/ReactFizzServer.js @@ -842,7 +842,7 @@ function encodeErrorForBoundary(\n       ? 'Switched to client rendering because the server rendering aborted due to:\\n\\n'\n       : 'Switched to client rendering because the server rendering errored:\\n\\n';\n     boundary.errorMessage = prefix + message;\n-    boundary.errorStack = stack;\n+    boundary.errorStack = stack !== null ? prefix + stack : null;\n     boundary.errorComponentStack = thrownInfo.componentStack;\n   }\n }",
        "sim_diff_0": "diff --git a/server/src/responders/website-responders.js b/server/src/responders/website-responders.js @@ -50,20 +50,32 @@ const { renderToString } = ReactDOMServer;\nconst { Provider } = ReactRedux;\nconst { reducer } = ReduxSetup;\n-let jsURL, fontsURL, cssInclude;\n+type AssetInfo = {| jsURL: string, fontsURL: string, cssInclude: string |};\n+let assetInfo: ?AssetInfo = null;\n+async function getAssetInfo() {\n+ if (assetInfo) {\n+ return assetInfo;\n+ }\nif (process.env.NODE_ENV === \"dev\") {\n- jsURL = \"http://localhost:8080/dev.build.js\";\n- fontsURL = \"fonts/local-fonts.css\";\n- cssInclude = \"\";\n-} else {\n- const assets = import('../../compiled/assets');\n- jsURL = `compiled/${assets.browser.js}`;\n- fontsURL = \"https://fonts.googleapis.com/css?family=Open+Sans:300,600%7CAnaheim\";\n- cssInclude = html`<link\n+ assetInfo = {\n+ jsURL: \"http://localhost:8080/dev.build.js\",\n+ fontsURL: \"fonts/local-fonts.css\",\n+ cssInclude: \"\",\n+ };\n+ return assetInfo;\n+ }\n+ // $FlowFixMe compiled/assets.json doesn't always exist\n+ const { default: assets } = await import('../../compiled/assets');\n+ assetInfo = {\n+ jsURL: `compiled/${assets.browser.js}`,\n+ fontsURL: \"https://fonts.googleapis.com/css?family=Open+Sans:300,600%7CAnaheim\",\n+ cssInclude: html`<link\nrel=\"stylesheet\"\ntype=\"text/css\"\nhref=\"compiled/${assets.browser.css}\"\n- />`;\n+ />`,\n+ };\n+ return assetInfo;\n}\nasync function websiteResponder(viewer: Viewer, url: string): Promise<string> {\n@@ -91,6 +103,7 @@ async function websiteResponder(viewer: Viewer, url: string): Promise<string> {\n{ rawEntryInfos, userInfos: entryUserInfos },\n{ rawMessageInfos, truncationStatuses, userInfos: messageUserInfos },\nverificationResult,\n+ { jsURL, fontsURL, cssInclude },\n] = await Promise.all([\nfetchThreadInfos(viewer),\nfetchCurrentUserInfo(viewer),\n@@ -101,6 +114,7 @@ async function websiteResponder(viewer: Viewer, url: string): Promise<string> {\ndefaultNumberPerThread,\n),\nhandleVerificationRequest(viewer, navInfo.verify),\n+ getAssetInfo(),\nviewer.loggedIn ? setNewSession(viewer, calendarQuery, initialTime) : null,\n]);\n",
        "sim_msg_0": "[server] Fix up asset fetching on prod",
        "sim_diff_1": "diff --git a/server/src/responders/website-responders.js b/server/src/responders/website-responders.js @@ -14,6 +14,8 @@ import ReactRedux from 'react-redux';\nimport ReactRouter from 'react-router';\nimport React from 'react';\nimport _keyBy from 'lodash/fp/keyBy';\n+import fs from 'fs';\n+import { promisify } from 'util';\nimport { ServerError } from 'lib/utils/errors';\nimport { currentDateInTimeZone } from 'lib/utils/date-utils';\n@@ -52,6 +54,19 @@ const { Route, StaticRouter } = ReactRouter;\nconst baseURL = basePath.replace(/\\/$/, '');\nconst baseHref = baseDomain + baseURL;\n+const access = promisify(fs.access);\n+const googleFontsURL =\n+ 'https://fonts.googleapis.com/css?family=Open+Sans:300,600%7CAnaheim';\n+const localFontsURL = 'fonts/local-fonts.css';\n+async function getFontsURL() {\n+ try {\n+ await access(localFontsURL);\n+ return localFontsURL;\n+ } catch {\n+ return googleFontsURL;\n+ }\n+}\n+\ntype AssetInfo = {| jsURL: string, fontsURL: string, cssInclude: string |};\nlet assetInfo: ?AssetInfo = null;\nasync function getAssetInfo() {\n@@ -59,9 +74,10 @@ async function getAssetInfo() {\nreturn assetInfo;\n}\nif (process.env.NODE_ENV === 'dev') {\n+ const fontsURL = await getFontsURL();\nassetInfo = {\njsURL: 'http://localhost:8080/dev.build.js',\n- fontsURL: 'fonts/local-fonts.css',\n+ fontsURL,\ncssInclude: '',\n};\nreturn assetInfo;\n@@ -70,8 +86,7 @@ async function getAssetInfo() {\nconst { default: assets } = await import('../../compiled/assets');\nassetInfo = {\njsURL: `compiled/${assets.browser.js}`,\n- fontsURL:\n- 'https://fonts.googleapis.com/css?family=Open+Sans:300,600%7CAnaheim',\n+ fontsURL: googleFontsURL,\ncssInclude: html`\n<link\nrel=\"stylesheet\"\n",
        "sim_msg_1": "[server] Only use local fonts if they are available",
        "sim_diff_2": "diff --git a/app/lib/dev-server-ssr.js b/app/lib/dev-server-ssr.js @@ -24,6 +24,8 @@ const renderError = ({ err, req, res }) => {\nconst doubleSlashRE = /\\/\\//g\n+let openedBrowser = false\n+\nmodule.exports = class DevServer {\nconstructor (quasarConfFile) {\nthis.quasarConfFile = quasarConfFile\n@@ -53,20 +55,24 @@ module.exports = class DevServer {\nconst serverCompiler = webpack(webpackConf.server)\nconst clientCompiler = webpack(webpackConf.client)\n+ let serverManifest, clientManifest, pwa, renderTemplate, renderWithVue, webpackServerListening = false\n+\nlet tryToFinalize = () => {\n- if (serverManifest && clientManifest && this.webpackServer) {\n+ if (serverManifest && clientManifest && webpackServerListening === true) {\ntryToFinalize = () => {}\ncallback()\nlog(`The devserver is ready to be used`)\n+ if (openedBrowser === false) {\n+ openedBrowser = true\n+\nif (cfg.__devServer.open) {\nopenBrowser({ url: cfg.build.APP_URL, opts: cfg.__devServer.openOptions })\n}\n}\n}\n-\n- let serverManifest, clientManifest, pwa, renderTemplate, renderWithVue\n+ }\nconst publicPath = cfg.build.publicPath\nconst resolveUrlPath = publicPath === '/'\n@@ -159,7 +165,10 @@ module.exports = class DevServer {\n}\n})\n- this.webpackServer.listen(cfg.devServer.port, cfg.devServer.host, tryToFinalize)\n+ this.webpackServer.listen(cfg.devServer.port, cfg.devServer.host, () => {\n+ webpackServerListening = true\n+ tryToFinalize()\n+ })\n})\n}\n@@ -216,6 +225,7 @@ module.exports = class DevServer {\nif (this.webpackServer !== null) {\nconst server = this.webpackServer\nthis.webpackServer = null\n+ webpackServerListening = false\nserver.close(() => {\nthis.destroyed !== true && startWebpackServer(cb)\n",
        "sim_msg_2": "fix(app): devserver might open the browser more than one time",
        "sim_diff_3": "diff --git a/menu/src/components/PlayersPage/PlayerPageHeader.tsx b/menu/src/components/PlayersPage/PlayerPageHeader.tsx @@ -66,7 +66,7 @@ export const PlayerPageHeader: React.FC = () => {\n{t(\"nui_menu.page_players.misc.online_players\")}\n</Typography>\n<Typography className={classes.playerCount}>\n- {`${allPlayers.length}/${serverCtx.maxClients} ${t('nui_menu.page_players.misc.players')} - OneSync (${serverCtx.oneSync.type})`}\n+ {`${allPlayers.length}/${serverCtx.maxClients} ${t('nui_menu.page_players.misc.players')} - OneSync (${serverCtx.oneSync.type || 'unknown'})`}\n</Typography>\n</Box>\n<Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\n",
        "sim_msg_3": "fix(menu/players): If OneSync mode isn't defined default to 'unknown'"
    },
    {
        "org_diff": "diff --git a/packages/react-server/src/ReactFizzServer.js b/a/packages/react-server/src/ReactFizzServer.js @@ -1390,21 +1390,52 @@ function finishClassComponent(\n   task.keyPath = prevKeyPath;\n }\n \n+export function resolveClassComponentProps(\n+  Component: any,\n+  baseProps: Object,\n+): Object {\n+  let newProps = baseProps;\n+\n+  // TODO: This is where defaultProps should be resolved, too.\n+\n+  if (enableRefAsProp) {\n+    // Remove ref from the props object, if it exists.\n+    if ('ref' in newProps) {\n+      newProps = assign({}, newProps);\n+      delete newProps.ref;\n+    }\n+  }\n+\n+  return newProps;\n+}\n+\n function renderClassComponent(\n   request: Request,\n   task: Task,\n   keyPath: KeyNode,\n   Component: any,\n   props: any,\n ): void {\n+  const resolvedProps = resolveClassComponentProps(Component, props);\n   const previousComponentStack = task.componentStack;\n   task.componentStack = createClassComponentStack(task, Component);\n   const maskedContext = !disableLegacyContext\n     ? getMaskedContext(Component, task.legacyContext)\n     : undefined;\n-  const instance = constructClassInstance(Component, props, maskedContext);\n-  mountClassInstance(instance, Component, props, maskedContext);\n-  finishClassComponent(request, task, keyPath, instance, Component, props);\n+  const instance = constructClassInstance(\n+    Component,\n+    resolvedProps,\n+    maskedContext,\n+  );\n+  mountClassInstance(instance, Component, resolvedProps, maskedContext);\n+  finishClassComponent(\n+    request,\n+    task,\n+    keyPath,\n+    instance,\n+    Component,\n+    resolvedProps,\n+  );\n   task.componentStack = previousComponentStack;\n }\n ",
        "sim_diff_0": "diff --git a/assets/js/components/legacy-setup/SetupUsingGCP.js b/assets/js/components/legacy-setup/SetupUsingGCP.js @@ -37,6 +37,8 @@ import data, { TYPE_CORE } from '../data';\nimport { trackEvent, clearWebStorage, getSiteKitAdminURL } from '../../util';\nimport STEPS from './wizard-steps';\nimport WizardProgressStep from './wizard-progress-step';\n+import HelpMenu from '../help/HelpMenu';\n+import { useFeature } from '../../hooks/useFeature';\nclass SetupUsingGCP extends Component {\nconstructor( props ) {\n@@ -185,6 +187,8 @@ class SetupUsingGCP extends Component {\nisSiteKitConnected,\n} = this.state;\n+ const { helpVisibilityEnabled } = this.props;\n+\nif ( this.isSetupFinished() ) {\nconst redirectURL = getSiteKitAdminURL(\n'googlesitekit-dashboard',\n@@ -222,11 +226,9 @@ class SetupUsingGCP extends Component {\nreturn (\n<Fragment>\n- <Header />\n- { /*\n- Note: this component doesn't use hooks and thus can't access the\n- feature flags, so we don't render the HelpMenu here.\n- */ }\n+ <Header>\n+ { helpVisibilityEnabled && <HelpMenu /> }\n+ </Header>\n<div className=\"googlesitekit-wizard\">\n<div className=\"mdc-layout-grid\">\n<div className=\"mdc-layout-grid__inner\">\n@@ -301,4 +303,17 @@ class SetupUsingGCP extends Component {\n}\n}\n-export default SetupUsingGCP;\n+const withHelpVisibilityFeatureFlag = ( WrappedComponent ) => {\n+ return ( props ) => {\n+ const helpVisibilityEnabled = useFeature( 'helpVisibility' );\n+\n+ return (\n+ <WrappedComponent\n+ { ...props }\n+ helpVisibilityEnabled={ helpVisibilityEnabled }\n+ />\n+ );\n+ };\n+};\n+\n+export default withHelpVisibilityFeatureFlag( SetupUsingGCP );\n",
        "sim_msg_0": "Add Help menu HOC to setupwithGCP component.",
        "sim_diff_1": "diff --git a/app/playground/src/Playground.js b/app/playground/src/Playground.js @@ -42,7 +42,15 @@ export default class Playground extends React.Component<Props> {\nthis.props.onGoBack();\n};\n- render = () => (\n+ render = () => {\n+ if (!PlaygroundRenderer.components.hasOwnProperty(this.props.name)) {\n+ return (\n+ <Translation\n+ passThrough={`Component ${this.props.name} no longer exists`}\n+ />\n+ );\n+ }\n+ return (\n<ScrollView>\n{PlaygroundRenderer.components[this.props.name].components.map(\n(component, index) => {\n@@ -55,6 +63,7 @@ export default class Playground extends React.Component<Props> {\n)}\n</ScrollView>\n);\n+ };\n}\nconst styles = StyleSheet.create({\n",
        "sim_msg_1": "Check if playground component still exists",
        "sim_diff_2": "diff --git a/src/components/AppHeader/AppHeader.js b/src/components/AppHeader/AppHeader.js @@ -45,12 +45,6 @@ export default class AppHeader extends React.Component {\n});\n};\n- handleRightIconClick = () => {\n- this.setState({\n- userMenuActive: !this.state.userMenuActive,\n- });\n- };\n-\nrender() {\nconst {\nuser,\n@@ -60,8 +54,6 @@ export default class AppHeader extends React.Component {\nonLogoutClick,\n} = this.props;\n- const { userMenuActive } = this.state;\n-\nconst avatarStyle = {\nbackgroundColor: `#${ stringToRGB(user.get(\"name\")) }`,\n};\n@@ -71,22 +63,6 @@ export default class AppHeader extends React.Component {\nfixed\ntheme={styles}\nleftIcon=\"menu\"\n- rightIcon={\n- <div>\n- <Avatar\n- style={avatarStyle}\n- title={user.get(\"name\")}\n- image={user.get(\"avatar_url\")}\n- />\n- <Menu\n- active={userMenuActive}\n- position=\"topRight\"\n- onHide={this.handleRightIconClick}\n- >\n- <MenuItem onClick={onLogoutClick}>Log out</MenuItem>\n- </Menu>\n- </div>\n- }\nonLeftIconClick={toggleDrawer}\nonRightIconClick={this.handleRightIconClick}\n>\n@@ -111,6 +87,10 @@ export default class AppHeader extends React.Component {\n}\n</IconMenu>\n<FindBar runCommand={runCommand} />\n+ <Avatar style={avatarStyle} title={user.get(\"name\")} image={user.get(\"avatar_url\")} />\n+ <IconMenu icon=\"settings\" position=\"topRight\" theme={styles}>\n+ <MenuItem onClick={onLogoutClick} value=\"log out\" caption=\"Log Out\" />\n+ </IconMenu>\n</AppBar>\n);\n}\n",
        "sim_msg_2": "Fix logout for Firefox\nThe log out menu was nested within a button, which caused\nbubbling issues for the log out button event handler. This\nwas due to a misuse of the React Toolbox AppBar component.\nAdded a proper IconMenu to trigger the logout dropdown.",
        "sim_diff_3": "diff --git a/src/Wrapper.js b/src/Wrapper.js @@ -36,6 +36,7 @@ export default class Wrapper extends React.PureComponent {\nuser: PropTypes.shape().isRequired,\nlocale: PropTypes.string.isRequired,\nchildren: PropTypes.element.isRequired,\n+ history: PropTypes.shape().isRequired,\nlogin: PropTypes.func,\nlogout: PropTypes.func,\ngetConfig: PropTypes.func,\n@@ -76,8 +77,15 @@ export default class Wrapper extends React.PureComponent {\n};\nhandleMenuItemClick = (key) => {\n- if (key === 'logout') {\n+ switch (key) {\n+ case 'logout':\nthis.props.logout();\n+ break;\n+ case 'settings':\n+ this.props.history.push('/settings');\n+ break;\n+ default:\n+ break;\n}\n};\n",
        "sim_msg_3": "Activate settings link"
    },
    {
        "org_diff": "diff --git a/packages/react-test-renderer/README.md b/a/packages/react-test-renderer/README.md @@ -1,12 +1,26 @@\n-# `react-test-renderer`\n+# `react-test-renderer` (DEPRECATED)\n+\n+## Deprecation notice\n+\n+`react-test-renderer` is deprecated and no longer maintained. It will be removed in a future version. As of React 19, you will see a console warning when invoking `ReactTestRenderer.create()`.\n+\n+### React Testing\n+\n+This library creates a contrived environment and its APIs encourage introspection on React's internals, which may change without notice causing broken tests. It is instead recommended to use browser-based environments such as jsdom and standard DOM APIs for your assertions.\n+\n+The React team recommends [`@testing-library/react`](https://testing-library.com/docs/react-testing-library/intro) as a modern alternative that uses standard APIs, avoids internals, and [promotes best practices](https://testing-library.com/docs/guiding-principles).\n+\n+### React Native Testing\n+\n+The React team recommends @testing-library/react-native as a replacement for `react-test-renderer` for native integration tests. This React Native testing-library variant follows the same API design as described above and promotes better testing patterns.\n+\n+## Documentation\n \n This package provides an experimental React renderer that can be used to render React components to pure JavaScript objects, without depending on the DOM or a native mobile environment.\n \n Essentially, this package makes it easy to grab a snapshot of the \"DOM tree\" rendered by a React DOM or React Native component without using a browser or jsdom.\n \n-Documentation:\n-\n-[https://reactjs.org/docs/test-renderer.html](https://reactjs.org/docs/test-renderer.html)\n+Documentation: [https://reactjs.org/docs/test-renderer.html](https://reactjs.org/docs/test-renderer.html)\n \n Usage:\n ",
        "sim_diff_0": "diff --git a/npm/react/docs/recipes.md b/npm/react/docs/recipes.md @@ -169,9 +169,9 @@ See [examples/rollup](examples/rollup) folder for full example.\n### Changing props\n-Many components have some statefulness, whether explicitly through `useState`, or implicitly through `useEffect`. Therefore during testing it is useful to keep the component mounted, but change the props being passed to it in order to preserve its state.\n+Many components have some statefulness, whether explicitly through `useState`, or implicitly through `useEffect`. Therefore during testing it is useful to keep the component mounted, but change the props being passed to it in order to preserve its state. This is referred to in some testing frameworks as `rerender()`.\n-We recommend building a \"wrapper\" component with the necessary DOM controls to push new props to your component under test.\n+We recommend building a \"wrapper\" component that acts similarly to how your users will interact with the component under test. In isolation, you can add DOM controls to push new props to your component.\n```js\nconst Accumulator = ({ value }) => {\n@@ -200,7 +200,7 @@ const Accumulator = ({ value }) => {\nThis component is an accumulator that stores each `value` prop passed to it. We create a wrapper component that has an `input` and a `button` to push new values to the `value` prop.\n```js\n-const Wrapper = () => {\n+const TestAcc = () => {\nconst ref = React.useRef()\nconst [value, setValue] = React.useState()\n@@ -224,7 +224,7 @@ With this, we can begin writing component tests to check the functionality of ou\n```js\nit('should store value', () => {\n- mount(<Wrapper />)\n+ mount(<TestAcc />)\ncy.get('input').type('Component testing is awesome!')\ncy.get('button').click()\n",
        "sim_msg_0": "Incorporated rerender comments",
        "sim_diff_1": "diff --git a/docs/Introduction.GettingStarted.md b/docs/Introduction.GettingStarted.md @@ -12,7 +12,7 @@ Running Detox (on iOS) requires the following:\n* Mac with macOS (at least macOS High Sierra 10.13.6)\n-* Xcode 10.1+ with Xcode command line tools\n+* Xcode 10.2+ with Xcode command line tools\n> TIP: Verify Xcode command line tools is installed by typing `gcc -v` in terminal (shows a popup if not installed)\n* A working [React Native](https://facebook.github.io/react-native/docs/getting-started.html) app you want to test\n",
        "sim_msg_1": "docs: update required Xcode version",
        "sim_diff_2": "diff --git a/docs/Introduction.GettingStarted.md b/docs/Introduction.GettingStarted.md @@ -12,7 +12,7 @@ Running Detox (on iOS) requires the following:\n* Mac with macOS (at least macOS El Capitan 10.11)\n-* Xcode 8.2+ with Xcode command line tools\n+* Xcode 8.3+ with Xcode command line tools\n> TIP: Verify Xcode command line tools is installed by typing `gcc -v` in terminal (shows a popup if not installed)\n* A working [React Native](https://facebook.github.io/react-native/docs/getting-started.html) app you want to test\n",
        "sim_msg_2": "Update README for required Xcode version\nLatest applesimutils require Xcode 8.3+ and is required by detox, so I think we should update this version here :)",
        "sim_diff_3": "diff --git a/README.md b/README.md @@ -62,11 +62,14 @@ Detox is built from the ground up to support React Native projects as well as pu\nThe following React Native versions have been tested:\n| iOS | Android |\n-| ------ | ------- |\n-| <=0.59 | <=0.56 |\n+| ------ | ------------------------------------------------------------ |\n+| <=0.59 | <=0.56 - Full support |\n+| | >=0.57 <=0.59 - Visibility edge-case: see this [RN issue](https://github.com/facebook/react-native/issues/23870)* |\nFuture versions are most likely supported, but have not been tested yet. Please open issues if you find specific issues with newer React Native versions.\n+> (*) We are planning on introducing a better `Matcher` that would work around this issue. In the meantime, it doesn't seem to hold any projects back from upgrading - not that we know of, at least. Contributions would be more than welcomed.\n+\n## Getting Started\nRead the [Getting Started Guide](/docs/Introduction.GettingStarted.md) to get Detox running on your app in less than 10 minutes.\n",
        "sim_msg_3": "Update RN ver support in the docs"
    },
    {
        "org_diff": "diff --git a/packages/react-devtools-shell/src/app/ElementTypes/index.js b/a/packages/react-devtools-shell/src/app/ElementTypes/index.js @@ -60,17 +60,15 @@ export default function ElementTypes(): React.Node {\n           <Context.Consumer>{(value: $FlowFixMe) => null}</Context.Consumer>\n         </Context.Provider>\n         <StrictMode>\n-          <Cache>\n-            <Suspense fallback={<div>Loading...</div>}>\n-              <ClassComponent />\n-              <FunctionComponent />\n-              <MemoFunctionComponent />\n-              <ForwardRefComponent />\n-              <ForwardRefComponentWithAnonymousFunction />\n-              <ForwardRefComponentWithCustomDisplayName />\n-              <LazyComponent />\n-            </Suspense>\n-          </Cache>\n+          <Suspense fallback={<div>Loading...</div>}>\n+            <ClassComponent />\n+            <FunctionComponent />\n+            <MemoFunctionComponent />\n+            <ForwardRefComponent />\n+            <ForwardRefComponentWithAnonymousFunction />\n+            <ForwardRefComponentWithCustomDisplayName />\n+            <LazyComponent />\n+          </Suspense>\n         </StrictMode>\n       </Fragment>\n     </Profiler>",
        "sim_diff_0": "diff --git a/packages/idyll-document/src/index.js b/packages/idyll-document/src/index.js @@ -142,10 +142,15 @@ class Wrapper extends React.PureComponent {\n);\n}\n- const { __expr__, __vars__, hasError, ...state } = this.state;\n- return React.Children.map(this.props.children, (c, i) => {\n- return React.cloneElement(c, {key: `${this.key}-${i}`, ...state});\n- });\n+ const { __expr__, __vars__, hasError, ...state } = this.state\n+ const { children, ...passThruProps } = this.props\n+ return React.Children.map(children, (c, i) => {\n+ return React.cloneElement(c, {\n+ key: `${this.key}-${i}`,\n+ ...state,\n+ ...passThruProps,\n+ })\n+ })\n}\n}\n",
        "sim_msg_0": "Pass props through to wrapped components",
        "sim_diff_1": "diff --git a/src/index.js b/src/index.js @@ -3,6 +3,7 @@ import createReactClass from 'create-react-class';\nimport { render } from 'react-dom';\nimport { AppContainer } from 'react-hot-loader';\nimport 'normalize.css';\n+import ErrorBoundary from './components/UI/ErrorBoundary/ErrorBoundary';\nimport Root from './root';\nimport registry from './lib/registry';\nimport './index.css';\n@@ -21,7 +22,9 @@ document.body.appendChild(el);\nrender((\n<AppContainer>\n+ <ErrorBoundary>\n<Root />\n+ </ErrorBoundary>\n</AppContainer>\n), el);\n",
        "sim_msg_1": "Add global error boundary.\nThis adds an error boundary around the entire app, so that a crash does\nnot just show up as an empty white screen.",
        "sim_diff_2": "diff --git a/packages/idyll-document/src/index.js b/packages/idyll-document/src/index.js @@ -143,7 +143,7 @@ class Wrapper extends React.PureComponent {\n}\nconst { __expr__, __vars__, hasError, ...state } = this.state\n- const { children, ...passThruProps } = this.props\n+ const { children, __expr__: _e, __vars__: _v, ...passThruProps } = this.props\nreturn React.Children.map(children, (c, i) => {\nreturn React.cloneElement(c, {\nkey: `${this.key}-${i}`,\n",
        "sim_msg_2": "remove extraneous props; fix tests",
        "sim_diff_3": "diff --git a/packages/civic-sandbox/src/components/Packages/index.js b/packages/civic-sandbox/src/components/Packages/index.js @@ -112,14 +112,9 @@ export class Packages extends React.Component {\n<a onClick={this.closeMap}>&lt; Back to Packages</a>\n</p>\n<SandboxComponent />\n- {selectedFoundationDatum && <div\n- style={{\n- top: '175px',\n- position: 'absolute',\n- width: '100%',\n- }}\n- >\n- <CivicSandboxDashboard data={selectedFoundationDatum} />\n+ {selectedFoundationDatum && <div>\n+ <CivicSandboxDashboard data={selectedFoundationDatum}>\n+ </CivicSandboxDashboard>\n</div>}\n</section>)}\n</div>\n",
        "sim_msg_3": "Allow dashboard to show description"
    },
    {
        "org_diff": "diff --git a/.nvmrc b/a/.nvmrc @@ -1 +1 @@\n-v16.19.1\n+v18.20.0",
        "sim_diff_0": "diff --git a/.gitignore b/.gitignore @@ -12,3 +12,4 @@ flatten/\nvenv\nbuild\n.vscode/\n+.idea/\n",
        "sim_msg_0": "add dependency fix to the graph, does not write yet",
        "sim_diff_1": "diff --git a/README.md b/README.md </p>\n<h1></h1>\n-<img src=\"https://user-images.githubusercontent.com/1962469/89655670-1c235c80-d8d3-11ea-9320-0f865767ef5d.png\" alt=\"\" height=24 width=1> [![NPM Version](https://img.shields.io/npm/v/detox.svg?style=flat)](https://www.npmjs.com/package/detox) [![NPM Downloads](https://img.shields.io/npm/dm/detox.svg?style=flat)](https://www.npmjs.com/package/detox) [![Build Status](https://img.shields.io/jenkins/s/http/jenkins-oss.wixpress.com:8080/job/multi-detox-master.svg)](https://jenkins-oss.wixpress.com/job/multi-detox-master/) [![Coverage Status](https://coveralls.io/repos/github/wix/Detox/badge.svg?branch=master)](https://coveralls.io/github/wix/Detox?branch=master) [![Detox is released under the MIT license](https://img.shields.io/badge/license-MIT-blue.svg)](LICENSE) [![PR's welcome!](https://img.shields.io/badge/PRs-welcome-brightgreen.svg)](https://wix.github.io/docs/contributing) [![Twitter Follow](https://img.shields.io/twitter/follow/detoxe2e?label=Follow\\&style=social)](https://twitter.com/detoxe2e)\n+<img src=\"https://user-images.githubusercontent.com/1962469/89655670-1c235c80-d8d3-11ea-9320-0f865767ef5d.png\" alt=\"\" height=24 width=1> [![NPM Version](https://img.shields.io/npm/v/detox.svg?style=flat)](https://www.npmjs.com/package/detox) [![NPM Downloads](https://img.shields.io/npm/dm/detox.svg?style=flat)](https://www.npmjs.com/package/detox) [![Build Status](https://img.shields.io/jenkins/s/http/jenkins-oss.wixpress.com:8080/job/multi-detox-master.svg)](https://jenkins-oss.wixpress.com/job/multi-detox-master/) [![Coverage Status](https://coveralls.io/repos/github/wix/Detox/badge.svg?branch=master)](https://coveralls.io/github/wix/Detox?branch=master) [![Detox is released under the MIT license](https://img.shields.io/badge/license-MIT-blue.svg)](LICENSE) [![PR's welcome!](https://img.shields.io/badge/PRs-welcome-brightgreen.svg)](https://wix.github.io/Detox/docs/contributing) [![Twitter Follow](https://img.shields.io/twitter/follow/detoxe2e?label=Follow\\&style=social)](https://twitter.com/detoxe2e)\n## What Does a Detox Test Look Like?\n",
        "sim_msg_1": "fix(README): fix broken link to contribution guide.",
        "sim_diff_2": "diff --git a/README.md b/README.md </p>\n<h1></h1>\n-<img src=\"https://user-images.githubusercontent.com/1962469/89655670-1c235c80-d8d3-11ea-9320-0f865767ef5d.png\" alt=\"\" height=24 width=1> [![NPM Version](https://img.shields.io/npm/v/detox.svg?style=flat)](https://www.npmjs.com/package/detox) [![NPM Downloads](https://img.shields.io/npm/dm/detox.svg?style=flat)](https://www.npmjs.com/package/detox) [![Build status](https://badge.buildkite.com/39afde30a964a6763de9753762bc80264ba141e1c1f41fc878.svg)](https://buildkite.com/wix-mobile-oss/detox) [![Coverage Status](https://coveralls.io/repos/github/wix/Detox/badge.svg?branch=master)](https://coveralls.io/github/wix/Detox?branch=master) [![Detox is released under the MIT license](https://img.shields.io/badge/license-MIT-blue.svg)](LICENSE) [![PR's welcome!](https://img.shields.io/badge/PRs-welcome-brightgreen.svg)](https://wix.github.io/Detox/docs/contributing) [![Twitter Follow](https://img.shields.io/twitter/follow/detoxe2e?label=Follow&style=social)](https://twitter.com/detoxe2e)\n+<img src=\"https://user-images.githubusercontent.com/1962469/89655670-1c235c80-d8d3-11ea-9320-0f865767ef5d.png\" alt=\"\" height=24 width=1> [![NPM Version](https://img.shields.io/npm/v/detox.svg?style=flat)](https://www.npmjs.com/package/detox) [![NPM Downloads](https://img.shields.io/npm/dm/detox.svg?style=flat)](https://www.npmjs.com/package/detox) [![Build status](https://badge.buildkite.com/39afde30a964a6763de9753762bc80264ba141e1c1f41fc878.svg)](https://buildkite.com/wix-mobile-oss/detox) [![Coverage Status](https://coveralls.io/repos/github/wix/Detox/badge.svg?branch=master)](https://coveralls.io/github/wix/Detox?branch=master) [![Detox is released under the MIT license](https://img.shields.io/badge/license-MIT-blue.svg)](LICENSE) [![PR's welcome!](https://img.shields.io/badge/PRs-welcome-brightgreen.svg)](https://wix.github.io/Detox/docs/contributing) [![Discord](https://img.shields.io/discord/957617863550697482?color=%235865F2&label=discord)](https://discord.gg/kENf4NbV) [![Twitter Follow](https://img.shields.io/twitter/follow/detoxe2e?label=Follow&style=social)](https://twitter.com/detoxe2e)\n## What Does a Detox Test Look Like?\n",
        "sim_msg_2": "README: add discord server badge with invite link.",
        "sim_diff_3": "diff --git a/.travis.yml b/.travis.yml @@ -62,7 +62,7 @@ script:\nfi\nif [ \"$TRAVIS_OS_NAME\" == \"linux\" ]; then\ndocker run --rm \\\n- --env-file <(env | grep -vE '\\r|\\n' | grep -iE 'DEBUG|NODE_|ELECTRON_|YARN_|NPM_|CI|CIRCLE|TRAVIS_TAG|TRAVIS|TRAVIS_REPO_|TRAVIS_BUILD_|TRAVIS_BRANCH|TRAVIS_PULL_REQUEST_|APPVEYOR_|CSC_|GH_|GITHUB_|BT_|AWS_|STRIP|BUILD_') \\\n+ --env-file <(env | grep -vE '\\r|\\n' | grep -iE 'NAME|DEBUG|NODE_|ELECTRON_|YARN_|NPM_|CI|CSC_|_TOKEN|_KEY|STRIP|BUILD_') \\\n--env ELECTRON_CACHE=\"/root/.cache/electron\" \\\n--env ELECTRON_BUILDER_CACHE=\"/root/.cache/electron-builder\" \\\n-v ${PWD}:/project \\\n",
        "sim_msg_3": "build(travis): fix docker env vars"
    },
    {
        "org_diff": "diff --git a/scripts/rollup/forks.js b/a/scripts/rollup/forks.js @@ -153,10 +153,7 @@ const forks = Object.freeze({\n           case RN_FB_DEV:\n           case RN_FB_PROD:\n           case RN_FB_PROFILING:\n-          case RN_OSS_DEV:\n-          case RN_OSS_PROD:\n-          case RN_OSS_PROFILING:\n-            return './packages/shared/forks/ReactFeatureFlags.test-renderer.native.js';\n+            return './packages/shared/forks/ReactFeatureFlags.test-renderer.native-fb.js';\n           case FB_WWW_DEV:\n           case FB_WWW_PROD:\n           case FB_WWW_PROFILING:",
        "sim_diff_0": "diff --git a/ui/build/script.build.javascript.js b/ui/build/script.build.javascript.js @@ -19,9 +19,13 @@ const bubleConfig = {\nobjectAssign: 'Object.assign'\n}\n-const rollupPlugins = [\n+const rollupPluginsModern = [\nnodeResolve(),\n- json(),\n+ json()\n+]\n+\n+const rollupPluginsLegacy = [\n+ ...rollupPluginsModern,\nbuble(bubleConfig)\n]\n@@ -36,7 +40,11 @@ const builds = [\nformat: 'es'\n}\n},\n- build: { minified: true, minExt: false }\n+ build: {\n+ minified: true,\n+ minExt: false,\n+ modern: true\n+ }\n},\n{\nrollup: {\n@@ -50,7 +58,8 @@ const builds = [\n},\nbuild: {\nminified: true,\n- minExt: false\n+ minExt: false,\n+ modern: true\n}\n},\n{\n@@ -63,7 +72,10 @@ const builds = [\nformat: 'es'\n}\n},\n- build: { minified: true, minExt: false }\n+ build: {\n+ minified: true,\n+ minExt: false\n+ }\n},\n{\nrollup: {\n@@ -75,7 +87,9 @@ const builds = [\nformat: 'umd'\n}\n},\n- build: { minified: true }\n+ build: {\n+ minified: true\n+ }\n},\n{\nrollup: {\n@@ -91,6 +105,22 @@ const builds = [\nunminified: true,\nminified: true\n}\n+ },\n+ {\n+ rollup: {\n+ input: {\n+ input: resolve(`src/index.umd.js`)\n+ },\n+ output: {\n+ file: resolve(`dist/quasar.umd.modern.js`),\n+ format: 'umd'\n+ }\n+ },\n+ build: {\n+ unminified: true,\n+ minified: true,\n+ modern: true\n+ }\n}\n]\n@@ -126,7 +156,9 @@ function build (builds) {\n}\nfunction genConfig (opts) {\n- opts.rollup.input.plugins = rollupPlugins\n+ opts.rollup.input.plugins = opts.build.modern === true\n+ ? rollupPluginsModern\n+ : rollupPluginsLegacy\nopts.rollup.input.external = opts.rollup.input.external || []\nopts.rollup.input.external.push('vue')\n",
        "sim_msg_0": "feat(ui): Modern mode assets",
        "sim_diff_1": "diff --git a/scripts/build-js.js b/scripts/build-js.js @@ -5,7 +5,7 @@ const fs = require('fs');\nconst rollup = require('rollup');\nconst buble = require('@rollup/plugin-buble');\nconst replace = require('@rollup/plugin-replace');\n-const resolve = require('@rollup/plugin-node-resolve');\n+const resolve = require('@rollup/plugin-node-resolve').default;\nconst Terser = require('terser');\nconst config = require('./build-config.js');\n",
        "sim_msg_1": "Update build-js.js",
        "sim_diff_2": "diff --git a/rollup.config.js b/rollup.config.js @@ -20,11 +20,11 @@ export default {\n],\nplugins: [\nglslify(),\n+ commonjs(),\nresolve({\nbrowser: true,\npreferBuiltins: false\n}),\n- commonjs(),\ncopy({\ntargets: [\n{\n",
        "sim_msg_2": "Swap order of commonjs and resolve",
        "sim_diff_3": "diff --git a/ui/build/script.build.javascript.js b/ui/build/script.build.javascript.js @@ -31,6 +31,42 @@ const rollupPluginsModern = [\nnodeResolve()\n]\n+const uglifyJsOptions = {\n+ compress: {\n+ // turn off flags with small gains to speed up minification\n+ arrows: false,\n+ collapse_vars: false,\n+ comparisons: false,\n+ computed_props: false,\n+ hoist_funs: false,\n+ hoist_props: false,\n+ hoist_vars: false,\n+ inline: false,\n+ loops: false,\n+ negate_iife: false,\n+ properties: false,\n+ reduce_funcs: false,\n+ reduce_vars: false,\n+ switches: false,\n+ toplevel: false,\n+ typeofs: false,\n+\n+ // a few flags with noticable gains/speed ratio\n+ booleans: true,\n+ if_return: true,\n+ sequences: true,\n+ unused: true,\n+\n+ // required features to drop conditional branches\n+ conditionals: true,\n+ dead_code: true,\n+ evaluate: true\n+ },\n+ mangle: {\n+ safari10: true\n+ }\n+}\n+\nconst builds = [\n{ // Generic prod entry (client-side only; NOT used by Quasar CLI)\nrollup: {\n@@ -239,11 +275,7 @@ function buildEntry (config) {\nreturn code\n}\n- const minified = uglify.minify(code, {\n- compress: {\n- ecma: 6\n- }\n- })\n+ const minified = uglify.minify(code, uglifyJsOptions)\nif (minified.error) {\nreturn Promise.reject(minified.error)\n",
        "sim_msg_3": "fix(ui/build): Minify options"
    },
    {
        "org_diff": "diff --git a/packages/eslint-plugin-react-hooks/README.md b/a/packages/eslint-plugin-react-hooks/README.md @@ -1,8 +1,8 @@\n # `eslint-plugin-react-hooks`\n \n-This ESLint plugin enforces the [Rules of Hooks](https://reactjs.org/docs/hooks-rules.html).\n+This ESLint plugin enforces the [Rules of Hooks](https://react.dev/reference/rules/rules-of-hooks).\n \n-It is a part of the [Hooks API](https://reactjs.org/docs/hooks-intro.html) for React.\n+It is a part of the [Hooks API](https://react.dev/reference/react/hooks) for React.\n \n ## Installation\n \n@@ -68,7 +68,7 @@ We suggest to use this option **very sparingly, if at all**. Generally saying, w\n \n ## Valid and Invalid Examples\n \n-Please refer to the [Rules of Hooks](https://reactjs.org/docs/hooks-rules.html) documentation and the [Hooks FAQ](https://reactjs.org/docs/hooks-faq.html#what-exactly-do-the-lint-rules-enforce) to learn more about this rule.\n+Please refer to the [Rules of Hooks](https://react.dev/reference/rules/rules-of-hooks) documentation to learn more about this rule.\n \n ## License\n ",
        "sim_diff_0": "diff --git a/package-lock.json b/package-lock.json }\n}\n},\n+ \"@react-hook/debounce\": {\n+ \"version\": \"3.0.0\",\n+ \"resolved\": \"https://registry.npmjs.org/@react-hook/debounce/-/debounce-3.0.0.tgz\",\n+ \"integrity\": \"sha512-ir/kPrSfAzY12Gre0sOHkZ2rkEmM4fS5M5zFxCi4BnCeXh2nvx9Ujd+U4IGpKCuPA+EQD0pg1eK2NGLvfWejag==\",\n+ \"requires\": {\n+ \"@react-hook/latest\": \"^1.0.2\"\n+ }\n+ },\n+ \"@react-hook/event\": {\n+ \"version\": \"1.2.3\",\n+ \"resolved\": \"https://registry.npmjs.org/@react-hook/event/-/event-1.2.3.tgz\",\n+ \"integrity\": \"sha512-WMBwLnYY2rubLeecsi4skl1imfx0oiXTgazV/1ByPT6WkmLvxUao3hC+mxps5D/+JK4Fq3uG9OWU/dn5jMtXyg==\",\n+ \"requires\": {\n+ \"@react-hook/passive-layout-effect\": \"^1.2.0\"\n+ }\n+ },\n+ \"@react-hook/latest\": {\n+ \"version\": \"1.0.3\",\n+ \"resolved\": \"https://registry.npmjs.org/@react-hook/latest/-/latest-1.0.3.tgz\",\n+ \"integrity\": \"sha512-dy6duzl+JnAZcDbNTfmaP3xHiKtbXYOaz3G51MGVljh548Y8MWzTr+PHLOfvpypEVW9zwvl+VyKjbWKEVbV1Rg==\"\n+ },\n\"@react-hook/merged-ref\": {\n\"version\": \"1.3.0\",\n\"resolved\": \"https://registry.npmjs.org/@react-hook/merged-ref/-/merged-ref-1.3.0.tgz\",\n\"integrity\": \"sha512-9p7fbPZ37n1Cbw37f3EtrcR9TwVjMkoTKwYbG7URO2HDlnOzuNTjsd/VK0/4i52SwKmOa6lBwz6Pr9g0pIyaCg==\"\n},\n+ \"@react-hook/passive-layout-effect\": {\n+ \"version\": \"1.2.1\",\n+ \"resolved\": \"https://registry.npmjs.org/@react-hook/passive-layout-effect/-/passive-layout-effect-1.2.1.tgz\",\n+ \"integrity\": \"sha512-IwEphTD75liO8g+6taS+4oqz+nnroocNfWVHWz7j+N+ZO2vYrc6PV1q7GQhuahL0IOR7JccFTsFKQ/mb6iZWAg==\"\n+ },\n+ \"@react-hook/throttle\": {\n+ \"version\": \"2.2.0\",\n+ \"resolved\": \"https://registry.npmjs.org/@react-hook/throttle/-/throttle-2.2.0.tgz\",\n+ \"integrity\": \"sha512-LJ5eg+yMV8lXtqK3lR+OtOZ2WH/EfWvuiEEu0M3bhR7dZRfTyEJKxH1oK9uyBxiXPtWXiQggWbZirMCXam51tg==\",\n+ \"requires\": {\n+ \"@react-hook/latest\": \"^1.0.2\"\n+ }\n+ },\n+ \"@react-hook/window-size\": {\n+ \"version\": \"3.0.7\",\n+ \"resolved\": \"https://registry.npmjs.org/@react-hook/window-size/-/window-size-3.0.7.tgz\",\n+ \"integrity\": \"sha512-bK5ed/jN+cxy0s1jt2CelCnUt7jZRseUvPQ22ZJkUl/QDOsD+7CA/6wcqC3c0QweM/fPBRP6uI56TJ48SnlVww==\",\n+ \"requires\": {\n+ \"@react-hook/debounce\": \"^3.0.0\",\n+ \"@react-hook/event\": \"^1.2.1\",\n+ \"@react-hook/throttle\": \"^2.2.0\"\n+ }\n+ },\n\"@sinonjs/commons\": {\n\"version\": \"1.8.1\",\n\"resolved\": \"https://registry.npmjs.org/@sinonjs/commons/-/commons-1.8.1.tgz\",\n",
        "sim_msg_0": "Update lock file post-merge conflict.",
        "sim_diff_1": "diff --git a/.eslintrc.json b/.eslintrc.json \"rules\": {\n\"no-restricted-globals\": [\n\"off\"\n- ]\n+ ],\n+ \"react-hooks/rules-of-hooks\": \"off\"\n}\n},\n{\n\"off\"\n]\n}\n- },\n- {\n- \"files\": [\n- \"tests/e2e/**/*.js\"\n- ],\n- \"rules\": {\n- \"react-hooks/rules-of-hooks\": \"off\"\n- }\n}\n],\n\"plugins\": [\n",
        "sim_msg_1": "Combine eslint rule groups for e2e tests.",
        "sim_diff_2": "diff --git a/.eslintrc b/.eslintrc }\n},\n\"rules\": {\n- \"prettier/prettier\": \"warn\",\n+ \"prettier/prettier\": \"error\",\n\"react/prop-types\": \"off\",\n\"react/display-name\": \"off\",\n- \"react-hooks/rules-of-hooks\": \"warn\",\n- \"dependencies/no-cycles\": \"warn\",\n- \"import/no-unresolved\": \"warn\",\n- \"import/first\": \"warn\",\n- \"import/no-duplicates\": \"warn\",\n+ \"react-hooks/rules-of-hooks\": \"error\",\n+ \"dependencies/no-cycles\": \"error\",\n+ \"import/no-unresolved\": \"error\",\n+ \"import/first\": \"error\",\n+ \"import/no-duplicates\": \"error\",\n\"import/order\": [\n\"warn\",\n{\n}\n],\n\"no-console\": [\n- \"warn\",\n+ \"error\",\n{\n\"allow\": [\n\"info\"\n]\n}\n],\n- \"no-await-in-loop\": \"warn\",\n- \"curly\": \"warn\",\n- \"dot-notation\": \"warn\",\n- \"no-else-return\": \"warn\",\n+ \"no-await-in-loop\": \"error\",\n+ \"curly\": \"error\",\n+ \"dot-notation\": \"error\",\n+ \"no-else-return\": \"error\",\n\"no-implicit-coercion\": [\n- \"warn\",\n+ \"error\",\n{\n\"boolean\": false\n}\n],\n- \"no-return-await\": \"warn\",\n- \"no-useless-catch\": \"warn\",\n- \"require-await\": \"warn\",\n+ \"no-return-await\": \"error\",\n+ \"no-useless-catch\": \"error\",\n+ \"require-await\": \"error\",\n\"array-bracket-newline\": [\n- \"warn\",\n+ \"error\",\n{\n\"multiline\": true\n}\n],\n- \"block-spacing\": \"warn\",\n+ \"block-spacing\": \"error\",\n\"brace-style\": [\n- \"warn\",\n+ \"error\",\n\"1tbs\",\n{\n\"allowSingleLine\": true\n}\n],\n\"camelcase\": [\n- \"warn\",\n+ \"error\",\n{\n\"ignoreDestructuring\": true,\n\"properties\": \"never\"\n}\n],\n- \"comma-dangle\": \"warn\",\n- \"comma-spacing\": \"warn\",\n- \"computed-property-spacing\": \"warn\",\n- \"lines-between-class-members\": \"warn\",\n+ \"comma-dangle\": \"error\",\n+ \"comma-spacing\": \"error\",\n+ \"computed-property-spacing\": \"error\",\n+ \"lines-between-class-members\": \"error\",\n\"lines-around-comment\": [\n- \"warn\",\n+ \"error\",\n{\n\"beforeBlockComment\": true,\n\"beforeLineComment\": true,\n\"allowClassEnd\": false\n}\n],\n- \"no-negated-condition\": \"warn\"\n+ \"no-negated-condition\": \"error\"\n}\n}\n",
        "sim_msg_2": "Force linter errors for rules not automatically fixable",
        "sim_diff_3": "diff --git a/.eslintrc.json b/.eslintrc.json \"parser\": \"babel-eslint\",\n\"plugins\": [\"react\", \"react-hooks\", \"flowtype\", \"monorepo\", \"import\"],\n\"rules\": {\n+ \"curly\": \"error\",\n\"linebreak-style\": \"error\",\n\"semi\": \"error\",\n\"react-hooks/rules-of-hooks\": \"error\",\n",
        "sim_msg_3": "Require curly braces for conditional blocks\nSummary: Simple ESLint rule to require curly braces. More details [here](https://eslint.org/docs/rules/curly).\nTest Plan: I misformatted a file and checked to make sure the formatting was fixed\nReviewers: atul, palys-swm\nSubscribers: KatPo, zrebcu411, Adrian, subnub"
    },
    {
        "org_diff": "diff --git a/packages/react-test-renderer/src/__tests__/ReactTestRenderer-test.js b/a/packages/react-test-renderer/src/__tests__/ReactTestRenderer-test.js @@ -50,6 +50,35 @@ describe('ReactTestRenderer', () => {\n     expect(errors[1].message.includes('indexOf is not a function')).toBe(true);\n   });\n \n+  test('find element by prop with suspended content', async () => {\n+    const neverResolve = new Promise(() => {});\n+\n+    function TestComp({foo}) {\n+      if (foo === 'one') {\n+        throw neverResolve;\n+      } else {\n+        return null;\n+      }\n+    }\n+\n+    const tree = await act(() =>\n+      ReactTestRenderer.create(\n+        <div>\n+          <React.Suspense fallback={null}>\n+            <TestComp foo=\"one\" />\n+          </React.Suspense>\n+          <TestComp foo=\"two\" />\n+        </div>,\n+      ),\n+    );\n+\n+    expect(\n+      tree.root.find(item => {\n+        return item.props.foo === 'two';\n+      }),\n+    ).toBeDefined();\n+  });\n+\n   describe('timed out Suspense hidden subtrees should not be observable via toJSON', () => {\n     let AsyncText;\n     let PendingResources;",
        "sim_diff_0": "diff --git a/renderer/components/__tests__/Sidebar.test.js b/renderer/components/__tests__/Sidebar.test.js @@ -33,46 +33,28 @@ const renderComponent = (component, locale = 'en', messages = English) => {\n}\ndescribe('Tests for Sidebar component', () => {\n- afterEach(() => {\n- cleanup()\n- })\n- test('Displays the correct version', async () => {\n+ beforeEach(() => {\nrenderComponent(\n<Sidebar>\n<></>\n</Sidebar>\n)\n- const versionNumber = screen.getByTestId('sidebar-version-number')\n- expect(versionNumber.innerHTML).toMatch(version)\n- })\n-\n- test('Displays child elements', async () => {\n- renderComponent(\n- <Sidebar>\n- <p data-testid=\"test-paragraph\">Test paragraph</p>\n- </Sidebar>\n- )\n- expect(screen.getByTestId('test-paragraph').innerHTML).toBe(\n- 'Test paragraph'\n- )\n})\n+ afterEach(() => {\n+ cleanup()\n+ jest.clearAllMocks()\n})\n-\n-describe('Sidebar NavItems push the router to correct path', () => {\n- beforeEach(() => {\n+ test('Displays the correct version', async () => {\nrenderComponent(\n<Sidebar>\n<></>\n</Sidebar>\n)\n- })\n-\n- afterEach(() => {\n- cleanup()\n- jest.clearAllMocks()\n+ const versionNumber = screen.getByTestId('sidebar-version-number')\n+ expect(versionNumber.innerHTML).toMatch(version)\n})\ntest('Clicking on Dashboard NavItem calls pushes router to /dashboard', async () => {\n",
        "sim_msg_0": "Removed unnecessary tests from Sidebar.test.js",
        "sim_diff_1": "diff --git a/packages/transportation/src/components/App/index.test.js b/packages/transportation/src/components/App/index.test.js -import React from 'react';\n-import { shallow } from 'enzyme';\n-import App from './index';\n-\ndescribe('<App />', () => {\n- it('should render its children', () => {\n- const children = (<h1>Test</h1>);\n- const wrapper = shallow(\n- <App>\n- {children}\n- </App>,\n- );\n- expect(wrapper.contains(children)).to.eql(true);\n+ it('does not have have functioning tests...', () => {\n+ expect(true).to.eql(true);\n});\n});\n",
        "sim_msg_1": "rm non functioning tests",
        "sim_diff_2": "diff --git a/renderer/components/onboard/__tests__/QuizSteps.test.js b/renderer/components/onboard/__tests__/QuizSteps.test.js @@ -6,7 +6,6 @@ import { screen, render, fireEvent, cleanup } from \"@testing-library/react\";\nimport { theme } from \"ooni-components\";\nimport { ThemeProvider } from \"styled-components\";\nimport { IntlProvider, FormattedMessage } from \"react-intl\";\n-import renderer from \"react-test-renderer\";\nimport English from \"../../../../lang/en.json\";\nimport QuizSteps from \"../QuizSteps\";\n@@ -41,6 +40,10 @@ describe(\"Tests for QuizSteps\", () => {\n)\n})\n+ afterEach(() => {\n+ onQuizComplete.mockClear()\n+ })\n+\ntest(\"User Story with correct answers\", async () => {\nconst yesButton1 = screen.getByText(English['Onboarding.PopQuiz.True'])\nfireEvent.click(yesButton1)\n@@ -50,10 +53,34 @@ describe(\"Tests for QuizSteps\", () => {\nexpect(heading).toBeInTheDocument()\nfireEvent.click(yesButton2)\nresolve()\n- }, 1500))\n+ }, 1650))\n+ await new Promise(resolve => setTimeout(() => {\n+ expect(onQuizComplete).toHaveBeenCalledTimes(1)\n+ resolve()\n+ }, 1650))\n+ });\n+\n+ test(\"User Story with incorrect answers\", async () => {\n+ const falseButton1 = screen.getByText(English['Onboarding.PopQuiz.False'])\n+ fireEvent.click(falseButton1)\n+ await new Promise(resolve => setTimeout(() => {\n+ const warningParagraph = screen.getByText(English['Onboarding.PopQuiz.1.Wrong.Paragraph'])\n+ const continueButton = screen.getByText(English['Onboarding.PopQuiz.Wrong.Button.Continue'])\n+ expect(warningParagraph).toBeInTheDocument()\n+ fireEvent.click(continueButton)\n+ resolve()\n+ }, 1650))\n+ const quizHeading2 = await screen.findByText(English['Onboarding.PopQuiz.2.Title'])\n+ expect(quizHeading2).toBeInTheDocument()\n+ const falseButton2 = screen.getByText(English['Onboarding.PopQuiz.False'])\n+ fireEvent.click(falseButton2)\nawait new Promise(resolve => setTimeout(() => {\n+ const warningParagraph = screen.getByText(English['Onboarding.PopQuiz.2.Wrong.Paragraph'])\n+ const continueButton = screen.getByText(English['Onboarding.PopQuiz.Wrong.Button.Continue'])\n+ expect(warningParagraph).toBeInTheDocument()\n+ fireEvent.click(continueButton)\nexpect(onQuizComplete).toHaveBeenCalledTimes(1)\nresolve()\n- }, 1500))\n+ }, 1650))\n});\n});\n",
        "sim_msg_2": "Test for incorrect answers done",
        "sim_diff_3": "diff --git a/test/dom-to-react.test.js b/test/dom-to-react.test.js @@ -8,6 +8,18 @@ const { render } = require('./helpers');\nconst { html, svg } = require('./data');\ndescribe('domToReact', () => {\n+ it.each([\n+ ['comment', html.comment],\n+ ['doctype', html.doctype]\n+ ])('skips %s', (type, value) => {\n+ expect(domToReact(htmlToDOM(value))).toEqual([]);\n+ });\n+\n+ it('converts \"text\" to \"text\"', () => {\n+ const text = 'text';\n+ expect(domToReact(htmlToDOM(text))).toBe(text);\n+ });\n+\nit('converts single DOM node to React', () => {\nconst reactElement = domToReact(htmlToDOM(html.single));\nexpect(reactElement).toMatchSnapshot();\n",
        "sim_msg_3": "test(dom-to-react): add test cases for text, comment, and doctype"
    },
    {
        "org_diff": "diff --git a/packages/react-dom-bindings/src/shared/isUnitlessNumber.js b/a/packages/react-dom-bindings/src/shared/isUnitlessNumber.js @@ -46,6 +46,7 @@ const unitlessNumbers = new Set([\n   'tabSize',\n   'widows',\n   'zIndex',\n+  'zoom',\n   'fillOpacity', // SVG-related properties\n   'floodOpacity',\n   'stopOpacity',\n@@ -60,6 +61,7 @@ const unitlessNumbers = new Set([\n   'MozLineClamp',\n   'msAnimationIterationCount',\n   'msFlex',\n+  'msZoom',\n   'msFlexGrow',\n   'msFlexNegative',\n   'msFlexOrder',",
        "sim_diff_0": "diff --git a/packages/component-library/src/ComparisonMap/ComparisonMap.js b/packages/component-library/src/ComparisonMap/ComparisonMap.js @@ -10,8 +10,10 @@ const ComparisonMap = props => {\ninitialViewport,\nleftMap,\nleftMapTitle,\n+ leftTitleColor,\nrightMap,\nrightMapTitle,\n+ rightTitleColor,\nshowDivider,\nsliderStartPosition\n} = props;\n@@ -73,17 +75,32 @@ const ComparisonMap = props => {\nbox-shadow: -3px 0px 4px gray;\n`;\n- const mapTitleWrapper = css`\n- padding: 5px 10px 0 10px;\n- display: flex;\n- justify-content: space-between;\n+ const leftTitleStyle = css`\n+ z-index: 1;\n+ position: absolute;\n+ font-family: \"Roboto Condensed\", \"Helvetica Neue\", Helvetica, sans-serif;\n+ font-size: 18px;\n+ font-weight: bold;\n+ margin: 0;\n+\n+ // Left Specific Formatting\n+ right: calc(100% - ${sliderPosition}% + 20px);\n+ color: ${leftTitleColor};\n+ text-align: right;\n`;\n- const titleStyle = css`\n+ const rightTitleStyle = css`\n+ z-index: 1;\n+ position: absolute;\nfont-family: \"Roboto Condensed\", \"Helvetica Neue\", Helvetica, sans-serif;\nfont-size: 18px;\nfont-weight: bold;\nmargin: 0;\n+\n+ // Right Specific Formatting\n+ left: calc(${sliderPosition}% + 20px);\n+ color: ${rightTitleColor};\n+ text-align: left;\n`;\nconst sliderMin = 5;\n@@ -100,10 +117,8 @@ const ComparisonMap = props => {\nreturn (\n<div css={container}>\n<div css={mapsWrapper}>\n- <div css={mapTitleWrapper}>\n- {leftMapTitle && <h2 css={titleStyle}>{leftMapTitle}</h2>}\n- {rightMapTitle && <h2 css={titleStyle}>{rightMapTitle}</h2>}\n- </div>\n+ {leftMapTitle && <h2 css={leftTitleStyle}>{leftMapTitle}</h2>}\n+ {rightMapTitle && <h2 css={rightTitleStyle}>{rightMapTitle}</h2>}\n{showDivider && <div css={divider} />}\n<div css={sliderWrapper}>\n<CompareSlider\n@@ -127,8 +142,10 @@ ComparisonMap.propTypes = {\ninitialViewport: shape({}),\nleftMap: node.isRequired,\nleftMapTitle: string,\n+ leftTitleColor: string,\nrightMap: node.isRequired,\nrightMapTitle: string,\n+ rightTitleColor: string,\nshowDivider: bool,\nsliderStartPosition: number\n};\n@@ -136,7 +153,9 @@ ComparisonMap.propTypes = {\nComparisonMap.defaultProps = {\nheight: 550,\nleftMapTitle: \"\",\n+ leftTitleColor: \"black\",\nrightMapTitle: \"\",\n+ rightTitleColor: \"black\",\nshowDivider: true,\nsliderStartPosition: 50\n};\n",
        "sim_msg_0": "Move left/right map titles to move along side of the divider & add left/right title color options",
        "sim_diff_1": "diff --git a/packages/doc/src/components/ComponentTitle/ComponentTitle.jsx b/packages/doc/src/components/ComponentTitle/ComponentTitle.jsx @@ -9,7 +9,7 @@ const Heading = styled.h1`\njustify-content: space-between;\n`;\n-const getMetaData = (isComponent, component) => {\n+const getMetaData = isComponent => {\nif (!isComponent) {\nreturn {};\n}\n@@ -21,24 +21,22 @@ const getMetaData = (isComponent, component) => {\nnode: {\ndescription: { text: description },\n},\n- } = edges.filter(\n- ({ node: parentNode }) =>\n- parentNode.displayName.toLowerCase() === component.toLowerCase(),\n- )[0];\n+ } = edges.filter(({ node: parentNode }) => {\n+ const path = window.location.pathname.split('/');\n+ const { length: len, [len - 2]: comp } = path;\n+\n+ return parentNode.displayName.toLowerCase() === comp.toLowerCase();\n+ })[0];\nreturn { description };\n};\nconst ComponentTitle = ({ children = '' }) => {\n- const childrenString = typeof children === 'string' ? children : '';\nconst isComponent =\ntypeof window !== 'undefined' &&\nwindow.location.href.search(/components\\/.+/) > -1;\n- const { description = '' } = getMetaData(\n- isComponent,\n- childrenString.replace('.', ''),\n- );\n+ const { description = '' } = getMetaData(isComponent);\nreturn (\n<>\n<Heading>{`<${children} />`}</Heading>\n",
        "sim_msg_1": "fix(doc/componenttitle): make component description work with compound components",
        "sim_diff_2": "diff --git a/packages/component-library/src/BoundaryMap/BoundaryMap.js b/packages/component-library/src/BoundaryMap/BoundaryMap.js @@ -36,6 +36,7 @@ const BoundaryMap = (props) => {\nstroked={true}\ngetFillColor={getFillColor}\nfilled={filled}\n+ updateTriggers={{getLineColor: getLineColor}}\n/>\n</DeckGL>\n</div>\n",
        "sim_msg_2": "Fix Boundary Map story color selector",
        "sim_diff_3": "diff --git a/src/components/ProductDetailTitle/ProductDetailTitle.js b/src/components/ProductDetailTitle/ProductDetailTitle.js @@ -22,7 +22,7 @@ class ProductDetailTitle extends Component {\nrender() {\nconst { title, pageTitle } = this.props;\nreturn (\n- <Grid xs={12}>\n+ <Grid item sm={12}>\n{title && <Typography gutterBottom={true} variant=\"display2\">{title}</Typography>}\n{pageTitle && <Typography color=\"primary\" component=\"h2\" variant=\"title\">{pageTitle}</Typography>}\n</Grid>\n",
        "sim_msg_3": "refactor: update grid component breakpoint"
    },
    {
        "org_diff": "diff --git a/packages/shared/forks/ReactFeatureFlags.native-oss.js b/a/packages/shared/forks/ReactFeatureFlags.native-oss.js @@ -52,7 +52,6 @@ export const enableCacheElement = __NEXT_RN_MAJOR__;\n export const enableTaint = __NEXT_RN_MAJOR__;\n export const enableUnifiedSyncLane = __NEXT_RN_MAJOR__;\n export const enableFizzExternalRuntime = __NEXT_RN_MAJOR__; // DOM-only\n-export const disableJavaScriptURLs = __NEXT_RN_MAJOR__; // DOM-only\n export const enableBinaryFlight = __NEXT_RN_MAJOR__; // DOM-only\n export const enableCustomElementPropertySupport = __NEXT_RN_MAJOR__; // DOM-only\n export const enableServerComponentKeys = __NEXT_RN_MAJOR__;",
        "sim_diff_0": "diff --git a/test/generator-base-private.spec.js b/test/generator-base-private.spec.js @@ -12,13 +12,13 @@ describe('Generator Base Private', () => {\nconst entityFolderName = 'entityFolderName';\nconst entityFileName = 'entityFileName';\nconst content =\n- `|export * from './${entityFolderName}/${entityFileName}-dialog.component';\n+ `|export * from './${entityFolderName}/${entityFileName}-update.component';\n|export * from './${entityFolderName}/${entityFileName}-delete-dialog.component';\n|export * from './${entityFolderName}/${entityFileName}-detail.component';\n|export * from './${entityFolderName}/${entityFileName}.component';\n|export * from './${entityFolderName}/${entityFileName}.state';`;\nconst out =\n-`export * from './entityFolderName/entityFileName-dialog.component';\n+`export * from './entityFolderName/entityFileName-update.component';\nexport * from './entityFolderName/entityFileName-delete-dialog.component';\nexport * from './entityFolderName/entityFileName-detail.component';\nexport * from './entityFolderName/entityFileName.component';\n",
        "sim_msg_0": "change dialog to update in test",
        "sim_diff_1": "diff --git a/components/core/NewWebsitePrototypeHeader.js b/components/core/NewWebsitePrototypeHeader.js @@ -176,14 +176,13 @@ const openNavLink = {\nexport const NewWebsitePrototypeHeader = (props) => {\nconst [open, setOpen] = useState(false);\n-\nconst communityURL = \"/community\";\nconst signInURL = \"/_\";\nconst styleMenu = open ? openMenu : null;\n- const styleNavLink = open ? openNavLink : null;\nconst styleBurgerBun = open ? openBurgerBun : null;\nconst styleBurgerMeat = open ? openBurgerMeat : null;\nconst styleBurgerBun2 = open ? openBurgerBun2 : null;\n+ const styleNavLink = open ? openNavLink : null;\nreturn (\n<div css={STYLES_CONTAINER} style={props.style}>\n@@ -200,18 +199,15 @@ export const NewWebsitePrototypeHeader = (props) => {\nSign in\n</a>\n</div>\n- <div css={STYLES_MOBILENAV} open={open}>\n+ <div css={STYLES_MOBILENAV}>\n<div onClick={() => setOpen(!open)} css={STYLES_BURGER}>\n<div css={STYLES_BURGER_BUN} style={styleBurgerBun} />\n<div css={STYLES_BURGER_MEAT} style={styleBurgerMeat} />\n<div css={STYLES_BURGER_BUN2} style={styleBurgerBun2} />\n</div>\n<div css={STYLES_MENU} style={styleMenu}>\n- <a css={STYLES_NAVLINK} style={styleNavLink} href={designSystemURL}>\n- Design system\n- </a>\n- <a css={STYLES_NAVLINK} style={styleNavLink} href={viewSourceURL}>\n- View source\n+ <a css={STYLES_NAVLINK} style={styleNavLink} href={communityURL}>\n+ Get involved\n</a>\n<a css={STYLES_NAVLINK} style={styleNavLink} href={signInURL}>\nSign in\n",
        "sim_msg_1": "header bug fixes",
        "sim_diff_2": "diff --git a/packages/doc/src/components/CodeBlock/shared/templates/web.js b/packages/doc/src/components/CodeBlock/shared/templates/web.js @@ -25,7 +25,7 @@ ReactDOM.render(\nreturn buildCode(`${styledComponents || ''}\nconst App = () => {\n- ${codeBetweenRenderAndReturn}\n+ ${codeBetweenRenderAndReturn.trim()}\nreturn (\n<ThemeProvider${theme ? `theme='${theme}'` : ''}>\n",
        "sim_msg_2": "chore(doc): trim variable on web template",
        "sim_diff_3": "diff --git a/packages/doc/src/components/CodeBlock/shared/templates/native.js b/packages/doc/src/components/CodeBlock/shared/templates/native.js @@ -21,7 +21,7 @@ const styles = StyleSheet.create({\nflex: 1,\njustifyContent: 'center',\nalignItems: 'center',\n- backgroundColor: '#ecf0f1',\n+ backgroundColor: '#fff',\n},\n});\n",
        "sim_msg_3": "docs(expo): change expo background-color"
    },
    {
        "org_diff": "diff --git a/packages/react-dom-bindings/src/shared/isUnitlessNumber.js b/a/packages/react-dom-bindings/src/shared/isUnitlessNumber.js @@ -46,7 +46,6 @@ const unitlessNumbers = new Set([\n   'tabSize',\n   'widows',\n   'zIndex',\n-  'zoom',\n   'fillOpacity', // SVG-related properties\n   'floodOpacity',\n   'stopOpacity',\n@@ -61,7 +60,6 @@ const unitlessNumbers = new Set([\n   'MozLineClamp',\n   'msAnimationIterationCount',\n   'msFlex',\n-  'msZoom',\n   'msFlexGrow',\n   'msFlexNegative',\n   'msFlexOrder',",
        "sim_diff_0": "diff --git a/src/renderer/marketplace/incorporation/common/program-price.jsx b/src/renderer/marketplace/incorporation/common/program-price.jsx import React from 'react';\n-const formatNumber = (number) => {\n- let splitNum = number.toString().split('.');\n+const formatNumber = number => {\n+ // 4 decimal places for KEY values ?\n+ const numeric = Math.abs(number).toFixed(4);\n+ let splitNum = numeric.split('.');\n// Format number with thousands separator\nsplitNum[0] = splitNum[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\nreturn splitNum.join('.');\n-}\n+};\nconst ProgramPrice = props => {\nconst { price, rate, label } = props;\n",
        "sim_msg_0": "fix: token KEY number formatting",
        "sim_diff_1": "diff --git a/lib/shared/addon/components/input-integer/component.js b/lib/shared/addon/components/input-integer/component.js @@ -31,11 +31,16 @@ export default TextField.extend({\nlet num = parseInt(val, 10);\nlet max = parseInt(this.get('max'), 10);\n+ let min = parseInt(this.get('min'), 10);\nif ( !isNaN(num) && !isNaN(max) && num > max ) {\nval = `${ max }`;\n}\n+ if ( !isNaN(min) && (isNaN(num) || num < min ) ) {\n+ val = `${ min }`;\n+ }\n+\nif ( cur !== val ) {\nthis.element.value = val;\n}\n",
        "sim_msg_1": "add missing min num + replace check to input-integer",
        "sim_diff_2": "diff --git a/assets/js/util/test/readableLargeNumber.js b/assets/js/util/test/readableLargeNumber.js @@ -30,7 +30,7 @@ const valuesToTest = [\n],\n[\n12345,\n- '12.3K',\n+ '12K',\n],\n[\n123456,\n@@ -58,8 +58,120 @@ const valuesToTest = [\n],\n];\n+const numbersBelowOneThousand = [\n+ [\n+ 1,\n+ '1',\n+ ],\n+ [\n+ 450,\n+ '450',\n+ ],\n+ [\n+ 550,\n+ '550',\n+ ],\n+ [\n+ 999,\n+ '999',\n+ ],\n+];\n+\n+const numbersBetweet1000And10000 = [\n+ [\n+ 1000,\n+ '1K',\n+ ],\n+ [\n+ 3828,\n+ '3.8K',\n+ ],\n+ [\n+ 4656,\n+ '4.7K',\n+ ],\n+ [\n+ 9000,\n+ '9K',\n+ ],\n+];\n+\n+const numbersBetween10000And1000000 = [\n+ [\n+ 10000,\n+ '10K',\n+ ],\n+ [\n+ 10970,\n+ '11K',\n+ ],\n+ [\n+ 18487,\n+ '18K',\n+ ],\n+ [\n+ 20922,\n+ '21K',\n+ ],\n+ [\n+ 114859,\n+ '115K',\n+ ],\n+ [\n+ 141309,\n+ '141K',\n+ ],\n+ [\n+ 611898,\n+ '612K',\n+ ],\n+];\n+\n+const numbersOver1000000 = [\n+ [\n+ 1000000,\n+ '1M',\n+ ],\n+ [\n+ 1100000,\n+ '1.1M',\n+ ],\n+ [\n+ 2500623,\n+ '2.5M',\n+ ],\n+ [\n+ 100100000,\n+ '100.1M',\n+ ],\n+];\n+\ndescribe( 'readableLargeNumber', () => {\nit.each( valuesToTest )( 'for %d should return %s', ( value, expected ) => {\nexpect( readableLargeNumber( value ) ).toStrictEqual( expected );\n} );\n+\n+ describe( 'Numbers below 1000 outout the same value that was passed.', () => {\n+ it.each( numbersBelowOneThousand )( 'for %d should return %s', ( value, expected ) => {\n+ expect( readableLargeNumber( value ) ).toStrictEqual( expected );\n+ } );\n+ } );\n+\n+ describe( 'Numbers between 1000 and 10,000 round normally with a single decimal unless the decimal is 0.', () => {\n+ it.each( numbersBetweet1000And10000 )( 'for %d should return %s', ( value, expected ) => {\n+ expect( readableLargeNumber( value ) ).toStrictEqual( expected );\n+ } );\n+ } );\n+\n+ describe( 'Numbers between 10,000 and 1,000,000 round normally with no decimals', () => {\n+ it.each( numbersBetween10000And1000000 )( 'for %d should return %s', ( value, expected ) => {\n+ expect( readableLargeNumber( value ) ).toStrictEqual( expected );\n+ } );\n+ } );\n+\n+ describe( 'Numbers over 1,000,000 round normally and display a single decimal unless the decimal is 0.', () => {\n+ it.each( numbersOver1000000 )( 'for %d should return %s', ( value, expected ) => {\n+ expect( readableLargeNumber( value ) ).toStrictEqual( expected );\n+ } );\n+ } );\n} );\n",
        "sim_msg_2": "Adds new tests for each tier of numbers.",
        "sim_diff_3": "diff --git a/src/renderer/marketplace/incorporation/common/program-price.jsx b/src/renderer/marketplace/incorporation/common/program-price.jsx import React from 'react';\n+const formatNumber = (number) => {\n+ let splitNum = number.toString().split('.');\n+ // Format number with thousands separator\n+ splitNum[0] = splitNum[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n+ return splitNum.join('.');\n+}\n+\nconst ProgramPrice = props => {\nconst { price, rate, label } = props;\n@@ -8,7 +15,7 @@ const ProgramPrice = props => {\n}\nconst numeric = parseInt(price.replace(/\\$/, '').replace(/,/, ''));\n- const key = Math.round(numeric / rate);\n+ const key = formatNumber(numeric / rate);\nreturn (\n<div className=\"price\">\n",
        "sim_msg_3": "feat: format KEY price values"
    },
    {
        "org_diff": "diff --git a/packages/react-dom/src/client/ReactDOMLegacy.js b/a/packages/react-dom/src/client/ReactDOMLegacy.js @@ -396,6 +396,14 @@ export function unstable_renderSubtreeIntoContainer(\n }\n \n export function unmountComponentAtNode(container: Container): boolean {\n+  if (disableLegacyMode) {\n+    if (__DEV__) {\n+      console.error(\n+        'unmountComponentAtNode is no longer supported in React 18. Use root.unmount() instead.',\n+      );\n+    }\n+    throw new Error('ReactDOM: Unsupported Legacy Mode API.');\n+  }\n   if (!isValidContainerLegacy(container)) {\n     throw new Error('Target container is not a DOM element.');\n   }",
        "sim_diff_0": "diff --git a/packages/gallery/src/components/layoutFixer/layoutFixer.js b/packages/gallery/src/components/layoutFixer/layoutFixer.js import React from 'react';\n-export const LayoutFixer = (props) => {\n- // console.log('[LAYOUT FIXER] rendering', isPrerenderMode(), props);\n- return props.layoutFixerBundleUrl ? (\n+export class LayoutFixer extends React.Component {\n+ render() {\n+ return this.props.layoutFixerBundleUrl ? (\n<div\n- id={'layout-fixer-' + props.domId}\n- key={'layout-fixer-' + props.domId}\n+ id={'layout-fixer-' + this.props.domId}\n+ key={'layout-fixer-' + this.props.domId}\nstyle={{ display: 'none' }}\n>\n- <style id={'layout-fixer-style-' + props.domId}></style>\n- {props.isPrerenderMode ? (\n+ <style id={'layout-fixer-style-' + this.props.domId}></style>\n+ {this.props.isPrerenderMode ? (\n<>\n- {props.layoutFixerScriptType === 'preload' && (\n- <link rel=\"preload\" href={props.layoutFixerBundleUrl} as=\"script\" />\n+ {this.props.layoutFixerScriptType === 'preload' && (\n+ <link\n+ rel=\"preload\"\n+ href={this.props.layoutFixerBundleUrl}\n+ as=\"script\"\n+ />\n)}\n<script\ndangerouslySetInnerHTML={{\n__html: `console.log(\"[LAYOUT FIXER] Start (first script loaded)\")`,\n}}\n></script>\n- {props.layoutFixerScriptType === 'async' ||\n- (props.layoutFixerScriptType === 'preload' && (\n+ {this.props.layoutFixerScriptType === 'async' ||\n+ (this.props.layoutFixerScriptType === 'preload' && (\n<script\nasync\ntype=\"module\"\n- src={props.layoutFixerBundleUrl}\n+ src={this.props.layoutFixerBundleUrl}\n></script>\n))}\n- {props.layoutFixerScriptType === 'defer' && (\n- <script defer src={props.layoutFixerBundleUrl}></script>\n+ {this.props.layoutFixerScriptType === 'defer' && (\n+ <script defer src={this.props.layoutFixerBundleUrl}></script>\n)}\n- {props.layoutFixerScriptType !== 'async' &&\n- props.layoutFixerScriptType !== 'defer' &&\n- props.layoutFixerScriptType !== 'preload' && (\n- <script src={props.layoutFixerBundleUrl}></script>\n+ {this.props.layoutFixerScriptType !== 'async' &&\n+ this.props.layoutFixerScriptType !== 'defer' &&\n+ this.props.layoutFixerScriptType !== 'preload' && (\n+ <script src={this.props.layoutFixerBundleUrl}></script>\n)}\n<layout-fixer\n- domId={props.domId}\n- items={JSON.stringify(props.items)}\n- styles={JSON.stringify(props.styles)}\n+ domId={this.props.domId}\n+ items={JSON.stringify(this.props.items)}\n+ styles={JSON.stringify(this.props.styles)}\n></layout-fixer>\n</>\n) : null}\n</div>\n) : null;\n-};\n+ }\n+}\n",
        "sim_msg_0": "[pgce] fix (layoutFixer): use react class instead of function",
        "sim_diff_1": "diff --git a/packages/doc/src/components/CodeBlock/shared/templates/web.js b/packages/doc/src/components/CodeBlock/shared/templates/web.js @@ -25,7 +25,7 @@ ReactDOM.render(\nreturn buildCode(`${styledComponents || ''}\nconst App = () => {\n- ${codeBetweenRenderAndReturn}\n+ ${codeBetweenRenderAndReturn.trim()}\nreturn (\n<ThemeProvider${theme ? `theme='${theme}'` : ''}>\n",
        "sim_msg_1": "chore(doc): trim variable on web template",
        "sim_diff_2": "diff --git a/packages/@uppy/react/src/DashboardModal.js b/packages/@uppy/react/src/DashboardModal.js @@ -20,6 +20,11 @@ class DashboardModal extends React.Component {\nthis.uninstallPlugin(prevProps)\nthis.installPlugin()\n}\n+ if (prevProps.open && !this.props.open) {\n+ this.plugin.closeModal()\n+ } else if (!prevProps.open && this.props.open) {\n+ this.plugin.openModal()\n+ }\n}\ncomponentWillUnmount () {\n@@ -55,14 +60,6 @@ class DashboardModal extends React.Component {\nuppy.removePlugin(this.plugin)\n}\n- componentWillReceiveProps (nextProps) {\n- if (this.props.open && !nextProps.open) {\n- this.plugin.closeModal()\n- } else if (!this.props.open && nextProps.open) {\n- this.plugin.openModal()\n- }\n- }\n-\nrender () {\nreturn h('div', {\nref: (container) => {\n",
        "sim_msg_2": "componentWillReceiveProps logic moved to componentDidUpdate",
        "sim_diff_3": "diff --git a/packages/material-ui/src/index.d.ts b/packages/material-ui/src/index.d.ts @@ -4,7 +4,7 @@ export { StyledComponentProps };\nexport type AnyComponent<P = any> =\n| (new (props: P) => React.Component)\n- | ((props: P & { children?: React.ReactNode }) => React.ReactElement<P> | null);\n+ | ((props: P & { children?: React.ReactNode }) => React.ReactElement<any> | null);\nexport type PropsOf<C extends AnyComponent> = C extends new (props: infer P) => React.Component\n? P\n",
        "sim_msg_3": "[typescript] Fix AnyComponent for functional components.\nA functional component does not return a ReactElement with the same props as its input, but a ReactElement with props of its child component.\nThe props of its child component can not be determined and are irrelevant for typing purposes."
    },
    {
        "org_diff": "diff --git a/CHANGELOG-canary.md b/a/CHANGELOG-canary.md @@ -1,3 +1,8 @@\n+## March 22, 2024 (18.3.0-canary-670811593-20240322)\n+\n+## React\n+- Added `useActionState` to replace `useFormState` and added `pending` value ([#28491](https://github.com/facebook/react/pull/28491)).\n+\n ## October 5, 2023 (18.3.0-canary-546178f91-20231005)\n \n ### React",
        "sim_diff_0": "diff --git a/assets/js/components/Header.stories.js b/assets/js/components/Header.stories.js @@ -29,7 +29,7 @@ import Header from './Header';\nimport DateRangeSelector from './DateRangeSelector';\nimport HelpMenu from './help/HelpMenu';\nimport HelpMenuLink from './help/HelpMenuLink';\n-import UserInputSuccessNotification from './notifications/UserInputSuccessNotification';\n+import UserInputSuccessBannerNotification from './notifications/UserInputSuccessBannerNotification';\nimport Null from './Null';\nimport {\ncreateTestRegistry,\n@@ -95,7 +95,7 @@ HeaderWithCustomHelpMenuLinks.args = {\nexport const HeaderWithSubHeader = Template.bind( {} );\nHeaderWithSubHeader.storyName = 'Plugin Header with Sub Header';\nHeaderWithSubHeader.args = {\n- subHeader: <UserInputSuccessNotification />,\n+ subHeader: <UserInputSuccessBannerNotification />,\n};\nexport const HeaderWithNullSubHeader = Template.bind( {} );\n",
        "sim_msg_0": "Fix weird merge conflict issue.",
        "sim_diff_1": "diff --git a/assets/js/modules/analytics/components/dashboard/DashboardAllTrafficWidget/TotalUserCount.js b/assets/js/modules/analytics/components/dashboard/DashboardAllTrafficWidget/TotalUserCount.js @@ -39,11 +39,20 @@ import { getAvailableDateRanges } from '../../../../../util/date-range';\nimport ChangeArrow from '../../../../../components/ChangeArrow';\nimport PreviewBlock from '../../../../../components/PreviewBlock';\nimport ReportError from '../../../../../components/ReportError';\n-const { useSelect } = Data;\n+import { CORE_FORMS } from '../../../../../googlesitekit/datastore/forms/constants';\n+import { FORM_ALL_TRAFFIC_WIDGET } from '../../../datastore/constants';\n+const { useSelect, useDispatch } = Data;\nexport default function TotalUserCount( { loaded, error, report, dimensionValue } ) {\nconst dateRange = useSelect( ( select ) => select( CORE_USER ).getDateRange() );\n+ const { setValues } = useDispatch( CORE_FORMS );\n+ const showAllUsers = ( e ) => {\n+ e.preventDefault();\n+\n+ setValues( FORM_ALL_TRAFFIC_WIDGET, { dimensionValue: '', dimensionColor: '' } );\n+ };\n+\nif ( ! loaded ) {\nreturn (\n// Height is based on real count desktop height (100px), minus 10px for the extra margin.\n@@ -83,7 +92,8 @@ export default function TotalUserCount( { loaded, error, report, dimensionValue\n{ ! dimensionValue && __( 'All Users', 'google-site-kit' ) }\n{ dimensionValue && (\n<Fragment>\n- { __( 'All Users', 'google-site-kit' ) }\n+ { dimensionValue && <button onClick={ showAllUsers }>{ __( 'All Users', 'google-site-kit' ) }</button> }\n+ { ! dimensionValue && __( 'All Users', 'google-site-kit' ) }\n<Icon icon={ chevronRight } size=\"18\" fill=\"currentColor\" />\n{ dimensionValue }\n</Fragment>\n",
        "sim_msg_1": "\"All Users\" in All Traffic widget breadcrumb should link to overall view.",
        "sim_diff_2": "diff --git a/assets/js/components/settings/SettingsActiveModule/Header.js b/assets/js/components/settings/SettingsActiveModule/Header.js @@ -50,11 +50,7 @@ import Badge from '../../Badge';\nimport { trackEvent } from '../../../util';\nimport useViewContext from '../../../hooks/useViewContext';\nimport { CORE_FORMS } from '../../../googlesitekit/datastore/forms/constants';\n-import {\n- FORM_SETUP,\n- MODULES_ANALYTICS,\n-} from '../../../modules/analytics/datastore/constants';\n-import { CORE_USER } from '../../../googlesitekit/datastore/user/constants';\n+import { FORM_SETUP } from '../../../modules/analytics/datastore/constants';\nconst { useSelect, useDispatch } = Data;\nexport default function Header( { slug } ) {\n@@ -80,21 +76,6 @@ export default function Header( { slug } ) {\nconst isGA4Connected = useSelect( ( select ) =>\nselect( CORE_MODULES ).isModuleConnected( 'analytics-4' )\n);\n- const loggedInUserID = useSelect( ( select ) =>\n- select( CORE_USER ).getID()\n- );\n- const hasAnalyticsAccess = useSelect( ( select ) => {\n- if ( ! ( slug === 'analytics' && module?.connected ) ) {\n- return false;\n- }\n-\n- const moduleOwnerID = select( MODULES_ANALYTICS ).getOwnerID();\n-\n- if ( moduleOwnerID === loggedInUserID ) {\n- return true;\n- }\n- return select( CORE_MODULES ).hasModuleAccess( 'analytics' );\n- } );\nconst { setValues } = useDispatch( CORE_FORMS );\n@@ -256,7 +237,6 @@ export default function Header( { slug } ) {\n{ connected &&\nslug === 'analytics' &&\n- hasAnalyticsAccess &&\n! isGA4Connected && (\n<Fragment>\n<Button\n",
        "sim_msg_2": "Show CTA if user doesnot have access.\nRevert previous code.",
        "sim_diff_3": "diff --git a/assets/js/modules/analytics/components/dashboard/DashboardAllTrafficWidget/TotalUserCount.js b/assets/js/modules/analytics/components/dashboard/DashboardAllTrafficWidget/TotalUserCount.js @@ -51,11 +51,14 @@ import Link from '../../../../../components/Link';\nimport GatheringDataNotice, {\nNOTICE_STYLE,\n} from '../../../../../components/GatheringDataNotice';\n+import { useFeature } from '../../../../../hooks/useFeature';\nconst { useSelect, useDispatch } = Data;\nexport default function TotalUserCount( props ) {\nconst { loaded, error, report, dimensionValue, gatheringData } = props;\n+ const zeroDataStatesEnabled = useFeature( 'zeroDataStates' );\n+\nconst dateRange = useSelect( ( select ) =>\nselect( CORE_USER ).getDateRange()\n);\n@@ -132,11 +135,11 @@ export default function TotalUserCount( props ) {\n) }\n</h3>\n- { gatheringData && (\n+ { gatheringData && zeroDataStatesEnabled && (\n<GatheringDataNotice style={ NOTICE_STYLE.LARGE } />\n) }\n- { ! gatheringData && (\n+ { ( ! gatheringData || ! zeroDataStatesEnabled ) && (\n<Fragment>\n{ !! current?.values?.[ 0 ] && (\n<div className=\"googlesitekit-data-block__datapoint\">\n",
        "sim_msg_3": "Add check for zero data states feature flag."
    },
    {
        "org_diff": "diff --git a/scripts/rollup/build-all-release-channels.js b/a/scripts/rollup/build-all-release-channels.js @@ -158,18 +158,16 @@ function processStable(buildDir) {\n   }\n \n   if (fs.existsSync(buildDir + '/facebook-www')) {\n-    const hash = crypto.createHash('sha1');\n     for (const fileName of fs.readdirSync(buildDir + '/facebook-www').sort()) {\n       const filePath = buildDir + '/facebook-www/' + fileName;\n       const stats = fs.statSync(filePath);\n       if (!stats.isDirectory()) {\n-        hash.update(fs.readFileSync(filePath));\n         fs.renameSync(filePath, filePath.replace('.js', '.classic.js'));\n       }\n     }\n     updatePlaceholderReactVersionInCompiledArtifacts(\n       buildDir + '/facebook-www',\n-      ReactVersion + '-www-classic-' + hash.digest('hex').slice(0, 8)\n+      ReactVersion + '-www-classic-%FILEHASH%'\n     );\n   }\n \n@@ -224,18 +222,16 @@ function processExperimental(buildDir, version) {\n   }\n \n   if (fs.existsSync(buildDir + '/facebook-www')) {\n-    const hash = crypto.createHash('sha1');\n     for (const fileName of fs.readdirSync(buildDir + '/facebook-www').sort()) {\n       const filePath = buildDir + '/facebook-www/' + fileName;\n       const stats = fs.statSync(filePath);\n       if (!stats.isDirectory()) {\n-        hash.update(fs.readFileSync(filePath));\n         fs.renameSync(filePath, filePath.replace('.js', '.modern.js'));\n       }\n     }\n     updatePlaceholderReactVersionInCompiledArtifacts(\n       buildDir + '/facebook-www',\n-      ReactVersion + '-www-modern-' + hash.digest('hex').slice(0, 8)\n+      ReactVersion + '-www-modern-%FILEHASH%'\n     );\n   }\n ",
        "sim_diff_0": "diff --git a/ui/build/script.build.javascript.js b/ui/build/script.build.javascript.js @@ -19,9 +19,13 @@ const bubleConfig = {\nobjectAssign: 'Object.assign'\n}\n-const rollupPlugins = [\n+const rollupPluginsModern = [\nnodeResolve(),\n- json(),\n+ json()\n+]\n+\n+const rollupPluginsLegacy = [\n+ ...rollupPluginsModern,\nbuble(bubleConfig)\n]\n@@ -36,7 +40,11 @@ const builds = [\nformat: 'es'\n}\n},\n- build: { minified: true, minExt: false }\n+ build: {\n+ minified: true,\n+ minExt: false,\n+ modern: true\n+ }\n},\n{\nrollup: {\n@@ -50,7 +58,8 @@ const builds = [\n},\nbuild: {\nminified: true,\n- minExt: false\n+ minExt: false,\n+ modern: true\n}\n},\n{\n@@ -63,7 +72,10 @@ const builds = [\nformat: 'es'\n}\n},\n- build: { minified: true, minExt: false }\n+ build: {\n+ minified: true,\n+ minExt: false\n+ }\n},\n{\nrollup: {\n@@ -75,7 +87,9 @@ const builds = [\nformat: 'umd'\n}\n},\n- build: { minified: true }\n+ build: {\n+ minified: true\n+ }\n},\n{\nrollup: {\n@@ -91,6 +105,22 @@ const builds = [\nunminified: true,\nminified: true\n}\n+ },\n+ {\n+ rollup: {\n+ input: {\n+ input: resolve(`src/index.umd.js`)\n+ },\n+ output: {\n+ file: resolve(`dist/quasar.umd.modern.js`),\n+ format: 'umd'\n+ }\n+ },\n+ build: {\n+ unminified: true,\n+ minified: true,\n+ modern: true\n+ }\n}\n]\n@@ -126,7 +156,9 @@ function build (builds) {\n}\nfunction genConfig (opts) {\n- opts.rollup.input.plugins = rollupPlugins\n+ opts.rollup.input.plugins = opts.build.modern === true\n+ ? rollupPluginsModern\n+ : rollupPluginsLegacy\nopts.rollup.input.external = opts.rollup.input.external || []\nopts.rollup.input.external.push('vue')\n",
        "sim_msg_0": "feat(ui): Modern mode assets",
        "sim_diff_1": "diff --git a/scripts/build-js.js b/scripts/build-js.js @@ -5,7 +5,7 @@ const fs = require('fs');\nconst rollup = require('rollup');\nconst buble = require('@rollup/plugin-buble');\nconst replace = require('@rollup/plugin-replace');\n-const resolve = require('@rollup/plugin-node-resolve');\n+const resolve = require('@rollup/plugin-node-resolve').default;\nconst Terser = require('terser');\nconst config = require('./build-config.js');\n",
        "sim_msg_1": "Update build-js.js",
        "sim_diff_2": "diff --git a/build/script.build.javascript.js b/build/script.build.javascript.js @@ -37,7 +37,7 @@ const builds = [\nformat: 'es'\n}\n},\n- build: { unminified: true, minExt: false }\n+ build: { minified: true, minExt: false }\n},\n{\nrollup: {\n@@ -49,7 +49,7 @@ const builds = [\nformat: 'es'\n}\n},\n- build: { unminified: true }\n+ build: { minified: true, minExt: false }\n},\n{\nrollup: {\n",
        "sim_msg_2": "chore: tweak build",
        "sim_diff_3": "diff --git a/ui/build/script.build.javascript.js b/ui/build/script.build.javascript.js @@ -31,6 +31,42 @@ const rollupPluginsModern = [\nnodeResolve()\n]\n+const uglifyJsOptions = {\n+ compress: {\n+ // turn off flags with small gains to speed up minification\n+ arrows: false,\n+ collapse_vars: false,\n+ comparisons: false,\n+ computed_props: false,\n+ hoist_funs: false,\n+ hoist_props: false,\n+ hoist_vars: false,\n+ inline: false,\n+ loops: false,\n+ negate_iife: false,\n+ properties: false,\n+ reduce_funcs: false,\n+ reduce_vars: false,\n+ switches: false,\n+ toplevel: false,\n+ typeofs: false,\n+\n+ // a few flags with noticable gains/speed ratio\n+ booleans: true,\n+ if_return: true,\n+ sequences: true,\n+ unused: true,\n+\n+ // required features to drop conditional branches\n+ conditionals: true,\n+ dead_code: true,\n+ evaluate: true\n+ },\n+ mangle: {\n+ safari10: true\n+ }\n+}\n+\nconst builds = [\n{ // Generic prod entry (client-side only; NOT used by Quasar CLI)\nrollup: {\n@@ -239,11 +275,7 @@ function buildEntry (config) {\nreturn code\n}\n- const minified = uglify.minify(code, {\n- compress: {\n- ecma: 6\n- }\n- })\n+ const minified = uglify.minify(code, uglifyJsOptions)\nif (minified.error) {\nreturn Promise.reject(minified.error)\n",
        "sim_msg_3": "fix(ui/build): Minify options"
    },
    {
        "org_diff": "diff --git a/packages/react-reconciler/src/__tests__/ReactSuspense-test.internal.js b/a/packages/react-reconciler/src/__tests__/ReactSuspense-test.internal.js @@ -289,6 +289,59 @@ describe('ReactSuspense', () => {\n     expect(container.textContent).toEqual('AB');\n   });\n \n+  it('pushes out siblings that render faster than throttle', async () => {\n+    function Foo() {\n+      Scheduler.log('Foo');\n+      return (\n+        <Suspense fallback={<Text text=\"Loading...\" />}>\n+          <AsyncText text=\"A\" ms={290} />\n+          <Suspense fallback={<Text text=\"Loading more...\" />}>\n+            <AsyncText text=\"B\" ms={30} />\n+          </Suspense>\n+        </Suspense>\n+      );\n+    }\n+\n+    setTimeout(async () => {\n+      // TODO: this is dumb, but AsyncText isn't timer based after the act changes.\n+      // Pretend that this is the start of the sibling suspending.\n+      // In a real test, the timer would start when we render B.\n+      setTimeout(async () => {\n+        resolveText('B');\n+      }, 30);\n+\n+      resolveText('A');\n+    }, 290);\n+\n+    // Render an empty shell\n+    const root = ReactTestRenderer.create(<Foo />, {\n+      isConcurrent: true,\n+    });\n+\n+    await waitForAll(['Foo', 'Suspend! [A]', 'Loading...']);\n+    expect(root).toMatchRenderedOutput('Loading...');\n+\n+    // Now resolve A\n+    jest.advanceTimersByTime(290);\n+    await waitFor(['A']);\n+    expect(root).toMatchRenderedOutput('Loading...');\n+\n+    // B starts loading. Parent boundary is in throttle.\n+    // Still shows parent loading under throttle\n+    jest.advanceTimersByTime(10);\n+    await waitForAll(['Suspend! [B]', 'Loading more...']);\n+    expect(root).toMatchRenderedOutput('Loading...');\n+\n+    // !! B could have finished before the throttle, but we show a fallback.\n+    // !! Pushing out the 30ms fetch for B to 300ms.\n+    jest.advanceTimersByTime(300);\n+    await waitFor(['B']);\n+    expect(root).toMatchRenderedOutput('ALoading more...');\n+\n+    await act(() => {});\n+    expect(root).toMatchRenderedOutput('AB');\n+  });\n+\n   it('does not throttle fallback committing for too long', async () => {\n     function Foo() {\n       Scheduler.log('Foo');",
        "sim_diff_0": "diff --git a/packages/transportation/src/components/App/index.test.js b/packages/transportation/src/components/App/index.test.js -import React from 'react';\n-import { shallow } from 'enzyme';\n-import App from './index';\n-\ndescribe('<App />', () => {\n- it('should render its children', () => {\n- const children = (<h1>Test</h1>);\n- const wrapper = shallow(\n- <App>\n- {children}\n- </App>,\n- );\n- expect(wrapper.contains(children)).to.eql(true);\n+ it('does not have have functioning tests...', () => {\n+ expect(true).to.eql(true);\n});\n});\n",
        "sim_msg_0": "rm non functioning tests",
        "sim_diff_1": "diff --git a/src/components/ProductDetail/ProductDetail.test.js b/src/components/ProductDetail/ProductDetail.test.js @@ -2,9 +2,10 @@ import React from \"react\";\nimport renderer from \"react-test-renderer\";\nimport { shallow } from \"enzyme\";\nimport ProductDetail from \"./ProductDetail\";\n+import sampleData from \"./sampleData\";\ntest(\"basic snapshot\", () => {\n- const component = renderer.create(shallow(<ProductDetail />).get(0));\n+ const component = renderer.create(shallow(<ProductDetail catalogProduct={sampleData} />).get(0));\nconst tree = component.toJSON();\nexpect(tree).toMatchSnapshot();\n});\n",
        "sim_msg_1": "test: update test to use sample data",
        "sim_diff_2": "diff --git a/renderer/components/home/running.js b/renderer/components/home/running.js @@ -15,7 +15,7 @@ import {\nimport { MdClear } from 'react-icons/md'\nimport { Line as LineProgress } from 'rc-progress'\n-import { FormattedMessage } from 'react-intl'\n+import { FormattedMessage, useIntl } from 'react-intl'\nimport { testGroups } from '../nettests'\n@@ -129,6 +129,9 @@ const RunningTest = ({testGroup, logOpen, onToggleLog, progressLine, percent, lo\nTestName = <FormattedMessage id={`Test.${runningTestName.split('.')[1]}.Fullname`} />\n}\n+ // Use the locale used by react-intl to localize the ETA label ('un minuto')\n+ const { locale } = useIntl()\n+\nreturn <StyledRunningTest>\n<Container>\n<CloseButtonContainer>\n@@ -166,7 +169,7 @@ const RunningTest = ({testGroup, logOpen, onToggleLog, progressLine, percent, lo\n<FormattedMessage id='Dashboard.Running.EstimatedTimeLeft' />\n</Box>\n<Box>\n- <FormattedMessage id='Dashboard.Running.Seconds' values={{ seconds: moment.duration(eta*1000).humanize() }}/>\n+ {moment.duration(eta*1000).locale(locale).humanize()}\n</Box>\n</Flex>\n}\n",
        "sim_msg_2": "Fix duplicate ETA label for running tests",
        "sim_diff_3": "diff --git a/assets/js/react-shim.test.js b/assets/js/react-shim.test.js /**\n* External dependencies\n*/\n-import * as react from 'react';\n+import reactDefault, * as react from 'react';\n/**\n* Internal dependencies\n*/\n-import * as reactShim from './react-shim';\n+import reachShimDefault, * as reactShim from './react-shim';\ndescribe( 'react shim', () => {\nit( 'mirrors all exports from the react package', () => {\n@@ -33,4 +33,8 @@ describe( 'react shim', () => {\nexpect( shimExports ).toEqual( realExports );\n} );\n+\n+ it( 'mirrors the default export', () => {\n+ expect( reactDefault ).toEqual( reachShimDefault );\n+ } );\n} );\n",
        "sim_msg_3": "Add default export test."
    },
    {
        "org_diff": "diff --git a/yarn.lock b/a/yarn.lock @@ -15791,9 +15791,9 @@ webpack-cli@^5.1.1:\n     webpack-merge \"^5.7.3\"\n \n webpack-dev-middleware@^5.3.1:\n-  version \"5.3.3\"\n-  resolved \"https://registry.yarnpkg.com/webpack-dev-middleware/-/webpack-dev-middleware-5.3.3.tgz#efae67c2793908e7311f1d9b06f2a08dcc97e51f\"\n-  integrity sha512-hj5CYrY0bZLB+eTO+x/j67Pkrquiy7kWepMHmUMoPsmcUaeEnQJqFzHJOyxgWlq746/wUuA64p9ta34Kyb01pA==\n+  version \"5.3.4\"\n+  resolved \"https://registry.yarnpkg.com/webpack-dev-middleware/-/webpack-dev-middleware-5.3.4.tgz#eb7b39281cbce10e104eb2b8bf2b63fce49a3517\"\n+  integrity sha512-BVdTqhhs+0IfoeAf7EoH5WE+exCmqGerHfDM0IL096Px60Tq2Mn9MAbnaGUe6HiMa41KMCYF19gyzZmBcq/o4Q==\n   dependencies:\n     colorette \"^2.0.10\"\n     memfs \"^3.4.3\"",
        "sim_diff_0": "diff --git a/CHANGELOG.md b/CHANGELOG.md All notable changes to this project will be documented in this file. See [standard-version](https://github.com/conventional-changelog/standard-version) for commit guidelines.\n+# [3.4.0](https://github.com/webpack/webpack-dev-middleware/compare/v3.3.0...v3.4.0) (2018-09-24)\n+\n+\n+### Bug Fixes\n+\n+* **index:** don't modify the default behavior for `unhandledRejection` ([#340](https://github.com/webpack/webpack-dev-middleware/issues/340)) ([f0a8e3e](https://github.com/webpack/webpack-dev-middleware/commit/f0a8e3e))\n+* **middleware:** replace `url-join` with `path.posix.join` ([#334](https://github.com/webpack/webpack-dev-middleware/issues/334)) ([d75802b](https://github.com/webpack/webpack-dev-middleware/commit/d75802b))\n+\n+\n+\n<a name=\"3.3.0\"></a>\n# [3.3.0](https://github.com/webpack/webpack-dev-middleware/compare/v3.2.0...v3.3.0) (2018-09-10)\n",
        "sim_msg_0": "docs(release): 3.4.0",
        "sim_diff_1": "diff --git a/fiddle/webpack.config.js b/fiddle/webpack.config.js @@ -128,7 +128,7 @@ if (production) {\noutput: {\npath: path.join(__dirname, \"dist\"),\n- publicPath: root ? \"/\" : \"/fiddle/\",\n+ publicPath: \"/\",\nfilename: \"[name].ltc.[chunkhash].js\",\nchunkFilename: \"[name].ltc.[chunkhash].js\",\nhashDigestLength: 5\n",
        "sim_msg_1": "Fiddle path fix",
        "sim_diff_2": "diff --git a/webpack.dev.js b/webpack.dev.js @@ -9,14 +9,16 @@ module.exports = (argv) => merge(require('./webpack.common.js')(argv), {\nfilename: 'dev.js',\n},\ndevServer: {\n- contentBase: [\n- path.join(__dirname, '/dev'),\n- path.join(__dirname, '/dist'),\n- ],\n- watchContentBase: true,\n- hot: true,\n- compress: true,\nport: 9000,\n+ static: {\n+ serveIndex: false,\n+ directory: path.join(__dirname, 'dev'),\n+ },\n+ client: {\n+ logging: 'none',\n+ overlay: false,\n+ },\nopen: true,\n+ historyApiFallback: true,\n},\n});\n",
        "sim_msg_2": "Upgrade webpack-dev-server configuration",
        "sim_diff_3": "diff --git a/webpack.dev.js b/webpack.dev.js @@ -14,6 +14,7 @@ module.exports = (argv) => merge(require('./webpack.common.js')(argv), {\npath.join(__dirname, '/dist'),\n],\nwatchContentBase: true,\n+ hot: true,\ncompress: true,\nport: 9000,\nopen: true,\n",
        "sim_msg_3": "Enable Hot Module Replacement"
    },
    {
        "org_diff": "diff --git a/packages/react-devtools-shell/src/app/InspectableElements/Contexts.js b/a/packages/react-devtools-shell/src/app/InspectableElements/Contexts.js @@ -273,15 +273,46 @@ class ModernClassContextConsumerWithUpdates extends Component<any> {\n   }\n }\n \n+type LegacyContextState = {\n+  supportsLegacyContext: boolean,\n+};\n+class LegacyContext extends React.Component {\n+  state: LegacyContextState = {supportsLegacyContext: true};\n+\n+  static getDerivedStateFromError(error: any): LegacyContextState {\n+    return {supportsLegacyContext: false};\n+  }\n+\n+  componentDidCatch(error: any, info: any) {\n+    console.info(\n+      'Assuming legacy context is not supported in this React version due to: ',\n+      error,\n+      info,\n+    );\n+  }\n+\n+  render(): React.Node {\n+    if (!this.state.supportsLegacyContext) {\n+      return <p>This version of React does not support legacy context.</p>;\n+    }\n+\n+    return (\n+      <React.Fragment>\n+        <LegacyContextProvider>\n+          <LegacyContextConsumer />\n+        </LegacyContextProvider>\n+        <LegacyContextProviderWithUpdates />\n+      </React.Fragment>\n+    );\n+  }\n+}\n+\n export default function Contexts(): React.Node {\n   return (\n     <div>\n       <h1>Contexts</h1>\n       <ul>\n-        <LegacyContextProvider>\n-          <LegacyContextConsumer />\n-        </LegacyContextProvider>\n-        <LegacyContextProviderWithUpdates />\n+        <LegacyContext />\n         <ModernContext.Provider value={contextData}>\n           <ModernContext.Consumer>\n             {(value: $FlowFixMe) =>",
        "sim_diff_0": "diff --git a/src/jit/lib/setupContextUtils.js b/src/jit/lib/setupContextUtils.js @@ -301,9 +301,7 @@ function buildPluginApi(tailwindConfig, context, { variantList, variantMap, offs\n}\n}\n-let fileModifiedMap = new Map()\n-\n-function trackModified(files) {\n+function trackModified(files, context) {\nlet changed = false\nfor (let file of files) {\n@@ -313,11 +311,11 @@ function trackModified(files) {\nlet pathname = parsed.href.replace(parsed.hash, '').replace(parsed.search, '')\nlet newModified = fs.statSync(decodeURIComponent(pathname)).mtimeMs\n- if (!fileModifiedMap.has(file) || newModified > fileModifiedMap.get(file)) {\n+ if (!context.fileModifiedMap.has(file) || newModified > context.fileModifiedMap.get(file)) {\nchanged = true\n}\n- fileModifiedMap.set(file, newModified)\n+ context.fileModifiedMap.set(file, newModified)\n}\nreturn changed\n@@ -507,24 +505,26 @@ export function getContext(\nregisterDependency(file)\n}\n- let contextDependenciesChanged = trackModified([...contextDependencies])\n-\nenv.DEBUG && console.log('Source path:', sourcePath)\n- if (!contextDependenciesChanged) {\n- // If this file already has a context in the cache and we don't need to\n- // reset the context, return the cached context.\n- if (isConfigFile && contextMap.has(sourcePath)) {\n- return [contextMap.get(sourcePath), false]\n- }\n+ let existingContext\n- // If the config used already exists in the cache, return that.\n- if (configContextMap.has(tailwindConfigHash)) {\n+ if (isConfigFile && contextMap.has(sourcePath)) {\n+ existingContext = contextMap.get(sourcePath)\n+ } else if (configContextMap.has(tailwindConfigHash)) {\nlet context = configContextMap.get(tailwindConfigHash)\ncontextSourcesMap.get(context).add(sourcePath)\ncontextMap.set(sourcePath, context)\n- return [context, false]\n+ existingContext = context\n+ }\n+\n+ // If there's already a context in the cache and we don't need to\n+ // reset the context, return the cached context.\n+ if (existingContext) {\n+ let contextDependenciesChanged = trackModified([...contextDependencies], existingContext)\n+ if (!contextDependenciesChanged) {\n+ return [existingContext, false]\n}\n}\n@@ -565,7 +565,8 @@ export function getContext(\n)\n)\n),\n- fileModifiedMap: new Map(),\n+ // Carry over the existing modified map if we have one.\n+ fileModifiedMap: new Map(existingContext ? existingContext.fileModifiedMap : undefined),\n// ---\nruleCache: new Set(), // Hit\nclassCache: new Map(), // Hit\n@@ -581,6 +582,11 @@ export function getContext(\nstylesheetCache: null, // Hit\n}\n+ if (!existingContext) {\n+ // If we didn't have an existing modified map then populate it now.\n+ trackModified([...contextDependencies], context)\n+ }\n+\n// ---\n// Update all context tracking state\n",
        "sim_msg_0": "move `fileModifiedMap` to context (fixes",
        "sim_diff_1": "diff --git a/assets/src/components/App.jsx b/assets/src/components/App.jsx @@ -21,7 +21,6 @@ class App extends Component {\nthis.state = {\nuser: null,\n- updateUser: this.updateUser,\n};\n}\n@@ -30,9 +29,9 @@ class App extends Component {\n}\nrender() {\n- const { user, updateUser } = this.state;\n+ const { user } = this.state;\nreturn (\n- <UserContext.Provider value={{ user, updateUser }}>\n+ <UserContext.Provider value={{ user, updateUser: this.updateUser }}>\n<BrowserRouter>\n<React.Fragment>\n<Header />\n",
        "sim_msg_1": "remove updateUser from App state",
        "sim_diff_2": "diff --git a/packages/relay/src/AuthContext.js b/packages/relay/src/AuthContext.js @@ -58,7 +58,7 @@ class Provider extends React.Component<Props, State> {\n}\n}\n-type PropsWithContext = {};\n+type PropsWithContext = { ... };\nexport function withAuthContext(Component: React.ElementType) {\nconst WithAuthContext = (props: PropsWithContext) => (\n",
        "sim_msg_2": "Fix eslint warning in AuthContext",
        "sim_diff_3": "diff --git a/packages/component-library/src/Sandbox/Sandbox.js b/packages/component-library/src/Sandbox/Sandbox.js import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { css } from \"emotion\";\n-\nimport BaseMap from \"../BaseMap/BaseMap\";\nimport CivicSandboxMap from \"../CivicSandboxMap/CivicSandboxMap\";\nimport CivicSandboxTooltip from \"../CivicSandboxMap/CivicSandboxTooltip\";\n@@ -20,8 +19,7 @@ class Sandbox extends React.Component {\nconstructor(props) {\nsuper();\nthis.state = {\n- baseMapStyle: \"light\",\n- baseMapStyleUrl: \"mapbox://styles/hackoregon/cjiazbo185eib2srytwzleplg\"\n+ baseMapStyle: \"light\"\n};\nthis.handleBaseMapStyleChange = this.handleBaseMapStyleChange.bind(this);\n}\n@@ -29,13 +27,10 @@ class Sandbox extends React.Component {\nhandleBaseMapStyleChange = baseMapStyleChangeEvent => {\nbaseMapStyleChangeEvent.target.value === \"light\"\n? this.setState({\n- baseMapStyle: \"light\",\n- baseMapStyleUrl:\n- \"mapbox://styles/hackoregon/cjiazbo185eib2srytwzleplg\"\n+ baseMapStyle: \"light\"\n})\n: this.setState({\n- baseMapStyle: \"dark\",\n- baseMapStyleUrl: \"mapbox://styles/mapbox/dark-v9\"\n+ baseMapStyle: \"dark\"\n});\n};\n@@ -107,7 +102,7 @@ class Sandbox extends React.Component {\n<div className={baseMapWrapper}>\n<BaseMap\n- mapboxStyle={this.state.baseMapStyleUrl}\n+ civicMapStyle={this.state.baseMapStyle}\ninitialZoom={10.5}\ninitialLatitude={45.5431}\ninitialLongitude={-122.5765}\n",
        "sim_msg_3": "Remove URL from state and pass down style to BaseMap component."
    },
    {
        "org_diff": "diff --git a/.github/stale.yml b/a/.github/stale.yml @@ -12,6 +12,7 @@ exemptLabels:\n   - \"Type: Discussion\"\n   - \"Type: Needs Investigation\"\n   - \"Type: Regression\"\n+  - \"Type: Feature Request\"\n # Label to use when marking an issue as stale\n staleLabel: \"Resolution: Stale\"\n issues:",
        "sim_diff_0": "diff --git a/.github/stale.yml b/.github/stale.yml @@ -7,7 +7,7 @@ exemptLabels:\n- pinned\n- security\n# Label to use when marking an issue as stale\n-staleLabel: wontfix\n+staleLabel: 'status: stale'\n# Comment to post when marking an issue as stale. Set to `false` to disable\nmarkComment: >\nThis issue has been automatically marked as stale because it has not had\n",
        "sim_msg_0": "chore: change stale bot label",
        "sim_diff_1": "diff --git a/.github/stale.yml b/.github/stale.yml # Number of days of inactivity before an issue becomes stale\n-daysUntilStale: 1095\n+daysUntilStale: 730\n# Number of days of inactivity before a stale issue is closed\ndaysUntilClose: 10\n# Issues with these labels will never be considered stale\n@@ -11,7 +11,6 @@ exemptLabels:\n- \"!IMPORTANT!\"\n- \"STATE: Need clarification\"\n- \"STATE: Need response\"\n- - \"STATE: Stale\"\n- \"STATE: won't fix\"\n- \"support center\"\n- \"TYPE: bug\"\n",
        "sim_msg_1": "Start Phase (2yo issues)\nAlso, Remove the \"TYPE: Stale\" label from exempt labels.",
        "sim_diff_2": "diff --git a/.github/label-actions.yml b/.github/label-actions.yml unlabel:\n- 'STATE: Outdated issue'\n- 'STATE: Need response'\n+\n+? 'STATE: No workarounds'\n+:\n+ # Post a comment\n+ comment: |\n+ There are no workarounds. Once we get any updates, we will post them in this thread.\n+ unlabel:\n+ - 'STATE: No workarounds'\n+ - 'STATE: Need response'\n",
        "sim_msg_2": "Add the 'no-workarounds' template",
        "sim_diff_3": "diff --git a/.github/lock.yml b/.github/lock.yml @@ -9,8 +9,8 @@ skipCreatedBefore: false\n# Issues and pull requests with these labels will be ignored. Set to `[]` to disable\nexemptLabels:\n- - STATE: Need response\n- - STATE: Need clarification\n+ - \"STATE: Need response\"\n+ - \"STATE: Need clarification\"\n# Label to add before locking, such as `outdated`. Set to `false` to disable\nlockLabel: \"STATE: Auto-locked\"\n",
        "sim_msg_3": "Fix exemptLabels option value (add proper quotes)"
    },
    {
        "org_diff": "diff --git a/scripts/rollup/build-all-release-channels.js b/a/scripts/rollup/build-all-release-channels.js @@ -239,6 +239,18 @@ function processExperimental(buildDir, version) {\n     );\n   }\n \n+  [\n+    buildDir + '/react-native/implementations/',\n+    buildDir + '/facebook-react-native/',\n+  ].forEach(reactNativeBuildDir => {\n+    if (fs.existsSync(reactNativeBuildDir)) {\n+      updatePlaceholderReactVersionInCompiledArtifacts(\n+        reactNativeBuildDir,\n+        ReactVersion + '-' + canaryChannelLabel + '-%FILEHASH%'\n+      );\n+    }\n+  });\n+\n   // Update remaining placeholders with canary channel version\n   updatePlaceholderReactVersionInCompiledArtifacts(\n     buildDir,",
        "sim_diff_0": "diff --git a/ui/build/script.build.javascript.js b/ui/build/script.build.javascript.js @@ -19,9 +19,13 @@ const bubleConfig = {\nobjectAssign: 'Object.assign'\n}\n-const rollupPlugins = [\n+const rollupPluginsModern = [\nnodeResolve(),\n- json(),\n+ json()\n+]\n+\n+const rollupPluginsLegacy = [\n+ ...rollupPluginsModern,\nbuble(bubleConfig)\n]\n@@ -36,7 +40,11 @@ const builds = [\nformat: 'es'\n}\n},\n- build: { minified: true, minExt: false }\n+ build: {\n+ minified: true,\n+ minExt: false,\n+ modern: true\n+ }\n},\n{\nrollup: {\n@@ -50,7 +58,8 @@ const builds = [\n},\nbuild: {\nminified: true,\n- minExt: false\n+ minExt: false,\n+ modern: true\n}\n},\n{\n@@ -63,7 +72,10 @@ const builds = [\nformat: 'es'\n}\n},\n- build: { minified: true, minExt: false }\n+ build: {\n+ minified: true,\n+ minExt: false\n+ }\n},\n{\nrollup: {\n@@ -75,7 +87,9 @@ const builds = [\nformat: 'umd'\n}\n},\n- build: { minified: true }\n+ build: {\n+ minified: true\n+ }\n},\n{\nrollup: {\n@@ -91,6 +105,22 @@ const builds = [\nunminified: true,\nminified: true\n}\n+ },\n+ {\n+ rollup: {\n+ input: {\n+ input: resolve(`src/index.umd.js`)\n+ },\n+ output: {\n+ file: resolve(`dist/quasar.umd.modern.js`),\n+ format: 'umd'\n+ }\n+ },\n+ build: {\n+ unminified: true,\n+ minified: true,\n+ modern: true\n+ }\n}\n]\n@@ -126,7 +156,9 @@ function build (builds) {\n}\nfunction genConfig (opts) {\n- opts.rollup.input.plugins = rollupPlugins\n+ opts.rollup.input.plugins = opts.build.modern === true\n+ ? rollupPluginsModern\n+ : rollupPluginsLegacy\nopts.rollup.input.external = opts.rollup.input.external || []\nopts.rollup.input.external.push('vue')\n",
        "sim_msg_0": "feat(ui): Modern mode assets",
        "sim_diff_1": "diff --git a/ui/build/script.build.javascript.js b/ui/build/script.build.javascript.js @@ -31,6 +31,42 @@ const rollupPluginsModern = [\nnodeResolve()\n]\n+const uglifyJsOptions = {\n+ compress: {\n+ // turn off flags with small gains to speed up minification\n+ arrows: false,\n+ collapse_vars: false,\n+ comparisons: false,\n+ computed_props: false,\n+ hoist_funs: false,\n+ hoist_props: false,\n+ hoist_vars: false,\n+ inline: false,\n+ loops: false,\n+ negate_iife: false,\n+ properties: false,\n+ reduce_funcs: false,\n+ reduce_vars: false,\n+ switches: false,\n+ toplevel: false,\n+ typeofs: false,\n+\n+ // a few flags with noticable gains/speed ratio\n+ booleans: true,\n+ if_return: true,\n+ sequences: true,\n+ unused: true,\n+\n+ // required features to drop conditional branches\n+ conditionals: true,\n+ dead_code: true,\n+ evaluate: true\n+ },\n+ mangle: {\n+ safari10: true\n+ }\n+}\n+\nconst builds = [\n{ // Generic prod entry (client-side only; NOT used by Quasar CLI)\nrollup: {\n@@ -239,11 +275,7 @@ function buildEntry (config) {\nreturn code\n}\n- const minified = uglify.minify(code, {\n- compress: {\n- ecma: 6\n- }\n- })\n+ const minified = uglify.minify(code, uglifyJsOptions)\nif (minified.error) {\nreturn Promise.reject(minified.error)\n",
        "sim_msg_1": "fix(ui/build): Minify options",
        "sim_diff_2": "diff --git a/build/script.build.javascript.js b/build/script.build.javascript.js @@ -37,7 +37,7 @@ const builds = [\nformat: 'es'\n}\n},\n- build: { unminified: true, minExt: false }\n+ build: { minified: true, minExt: false }\n},\n{\nrollup: {\n@@ -49,7 +49,7 @@ const builds = [\nformat: 'es'\n}\n},\n- build: { unminified: true }\n+ build: { minified: true, minExt: false }\n},\n{\nrollup: {\n",
        "sim_msg_2": "chore: tweak build",
        "sim_diff_3": "diff --git a/scripts/build-js.js b/scripts/build-js.js @@ -5,7 +5,7 @@ const fs = require('fs');\nconst rollup = require('rollup');\nconst buble = require('@rollup/plugin-buble');\nconst replace = require('@rollup/plugin-replace');\n-const resolve = require('@rollup/plugin-node-resolve');\n+const resolve = require('@rollup/plugin-node-resolve').default;\nconst Terser = require('terser');\nconst config = require('./build-config.js');\n",
        "sim_msg_3": "Update build-js.js"
    },
    {
        "org_diff": "diff --git a/scripts/rollup/build-all-release-channels.js b/a/scripts/rollup/build-all-release-channels.js @@ -173,25 +173,17 @@ function processStable(buildDir) {\n     );\n   }\n \n-  const reactNativeBuildDir = buildDir + '/react-native/implementations/';\n-  if (fs.existsSync(reactNativeBuildDir)) {\n-    const hash = crypto.createHash('sha1');\n-    for (const fileName of fs.readdirSync(reactNativeBuildDir).sort()) {\n-      const filePath = reactNativeBuildDir + fileName;\n-      const stats = fs.statSync(filePath);\n-      if (!stats.isDirectory()) {\n-        hash.update(fs.readFileSync(filePath));\n-      }\n+  [\n+    buildDir + '/react-native/implementations/',\n+    buildDir + '/facebook-react-native/',\n+  ].forEach(reactNativeBuildDir => {\n+    if (fs.existsSync(reactNativeBuildDir)) {\n+      updatePlaceholderReactVersionInCompiledArtifacts(\n+        reactNativeBuildDir,\n+        ReactVersion + '-' + canaryChannelLabel + '-%FILEHASH%'\n+      );\n     }\n-    updatePlaceholderReactVersionInCompiledArtifacts(\n-      reactNativeBuildDir,\n-      ReactVersion +\n-        '-' +\n-        canaryChannelLabel +\n-        '-' +\n-        hash.digest('hex').slice(0, 8)\n-    );\n-  }\n+  });\n \n   // Update remaining placeholders with canary channel version\n   updatePlaceholderReactVersionInCompiledArtifacts(\n@@ -362,9 +354,11 @@ function updatePlaceholderReactVersionInCompiledArtifacts(\n \n   for (const artifactFilename of artifactFilenames) {\n     const originalText = fs.readFileSync(artifactFilename, 'utf8');\n+    const fileHash = crypto.createHash('sha1');\n+    fileHash.update(originalText);\n     const replacedText = originalText.replaceAll(\n       PLACEHOLDER_REACT_VERSION,\n-      newVersion\n+      newVersion.replace(/%FILEHASH%/g, fileHash.digest('hex').slice(0, 8))\n     );\n     fs.writeFileSync(artifactFilename, replacedText);\n   }",
        "sim_diff_0": "diff --git a/scripts/buildAndroidSnapshots.js b/scripts/buildAndroidSnapshots.js @@ -129,7 +129,9 @@ const deployLibrary = (packageName, version) => {\ndeployDependency(\n'react-native-zip-archive',\nSKYPICKER_URL,\n- `${rnModulesVersion}.react-native.${reactNativeVersion}`,\n+ `${getDependencyVersion(\n+ 'react-native-zip-archive',\n+ )}.react-native.${reactNativeVersion}`,\n'-SNAPSHOT',\n),\n])\n",
        "sim_msg_0": "Fix copy paste error of zip-archive",
        "sim_diff_1": "diff --git a/ui/build/script.build.javascript.js b/ui/build/script.build.javascript.js @@ -19,9 +19,13 @@ const bubleConfig = {\nobjectAssign: 'Object.assign'\n}\n-const rollupPlugins = [\n+const rollupPluginsModern = [\nnodeResolve(),\n- json(),\n+ json()\n+]\n+\n+const rollupPluginsLegacy = [\n+ ...rollupPluginsModern,\nbuble(bubleConfig)\n]\n@@ -36,7 +40,11 @@ const builds = [\nformat: 'es'\n}\n},\n- build: { minified: true, minExt: false }\n+ build: {\n+ minified: true,\n+ minExt: false,\n+ modern: true\n+ }\n},\n{\nrollup: {\n@@ -50,7 +58,8 @@ const builds = [\n},\nbuild: {\nminified: true,\n- minExt: false\n+ minExt: false,\n+ modern: true\n}\n},\n{\n@@ -63,7 +72,10 @@ const builds = [\nformat: 'es'\n}\n},\n- build: { minified: true, minExt: false }\n+ build: {\n+ minified: true,\n+ minExt: false\n+ }\n},\n{\nrollup: {\n@@ -75,7 +87,9 @@ const builds = [\nformat: 'umd'\n}\n},\n- build: { minified: true }\n+ build: {\n+ minified: true\n+ }\n},\n{\nrollup: {\n@@ -91,6 +105,22 @@ const builds = [\nunminified: true,\nminified: true\n}\n+ },\n+ {\n+ rollup: {\n+ input: {\n+ input: resolve(`src/index.umd.js`)\n+ },\n+ output: {\n+ file: resolve(`dist/quasar.umd.modern.js`),\n+ format: 'umd'\n+ }\n+ },\n+ build: {\n+ unminified: true,\n+ minified: true,\n+ modern: true\n+ }\n}\n]\n@@ -126,7 +156,9 @@ function build (builds) {\n}\nfunction genConfig (opts) {\n- opts.rollup.input.plugins = rollupPlugins\n+ opts.rollup.input.plugins = opts.build.modern === true\n+ ? rollupPluginsModern\n+ : rollupPluginsLegacy\nopts.rollup.input.external = opts.rollup.input.external || []\nopts.rollup.input.external.push('vue')\n",
        "sim_msg_1": "feat(ui): Modern mode assets",
        "sim_diff_2": "diff --git a/ui/build/script.build.javascript.js b/ui/build/script.build.javascript.js @@ -31,6 +31,42 @@ const rollupPluginsModern = [\nnodeResolve()\n]\n+const uglifyJsOptions = {\n+ compress: {\n+ // turn off flags with small gains to speed up minification\n+ arrows: false,\n+ collapse_vars: false,\n+ comparisons: false,\n+ computed_props: false,\n+ hoist_funs: false,\n+ hoist_props: false,\n+ hoist_vars: false,\n+ inline: false,\n+ loops: false,\n+ negate_iife: false,\n+ properties: false,\n+ reduce_funcs: false,\n+ reduce_vars: false,\n+ switches: false,\n+ toplevel: false,\n+ typeofs: false,\n+\n+ // a few flags with noticable gains/speed ratio\n+ booleans: true,\n+ if_return: true,\n+ sequences: true,\n+ unused: true,\n+\n+ // required features to drop conditional branches\n+ conditionals: true,\n+ dead_code: true,\n+ evaluate: true\n+ },\n+ mangle: {\n+ safari10: true\n+ }\n+}\n+\nconst builds = [\n{ // Generic prod entry (client-side only; NOT used by Quasar CLI)\nrollup: {\n@@ -239,11 +275,7 @@ function buildEntry (config) {\nreturn code\n}\n- const minified = uglify.minify(code, {\n- compress: {\n- ecma: 6\n- }\n- })\n+ const minified = uglify.minify(code, uglifyJsOptions)\nif (minified.error) {\nreturn Promise.reject(minified.error)\n",
        "sim_msg_2": "fix(ui/build): Minify options",
        "sim_diff_3": "diff --git a/build/script.build.javascript.js b/build/script.build.javascript.js @@ -37,7 +37,7 @@ const builds = [\nformat: 'es'\n}\n},\n- build: { unminified: true, minExt: false }\n+ build: { minified: true, minExt: false }\n},\n{\nrollup: {\n@@ -49,7 +49,7 @@ const builds = [\nformat: 'es'\n}\n},\n- build: { unminified: true }\n+ build: { minified: true, minExt: false }\n},\n{\nrollup: {\n",
        "sim_msg_3": "chore: tweak build"
    },
    {
        "org_diff": "diff --git a/packages/react-debug-tools/src/__tests__/ReactHooksInspectionIntegration-test.js b/a/packages/react-debug-tools/src/__tests__/ReactHooksInspectionIntegration-test.js @@ -1244,7 +1244,7 @@ describe('ReactHooksInspectionIntegration', () => {\n         <Context.Provider value=\"provided\">\n           <Foo />\n         </Context.Provider>,\n-        {isConcurrent: true},\n+        {unstable_isConcurrent: true},\n       );\n     });\n     let childFiber = renderer.root.findByType(Foo)._currentFiber();",
        "sim_diff_0": "diff --git a/tests/js/test-utils.js b/tests/js/test-utils.js /**\n* External dependencies\n*/\n-import { render } from '@testing-library/react';\n+import { render, act } from '@testing-library/react';\nimport { renderHook, act as actHook } from '@testing-library/react-hooks';\nimport { Router } from 'react-router-dom';\nimport invariant from 'invariant';\n@@ -16,7 +16,7 @@ import { RegistryProvider } from '@wordpress/data';\n* Internal dependencies\n*/\nimport FeaturesProvider from '../../assets/js/components/FeaturesProvider';\n-import { createTestRegistry } from './utils';\n+import { createTestRegistry, createWaitForRegistry } from './utils';\n// Override `@testing-library/react`'s render method with one that includes\n// our data store.\n@@ -67,6 +67,8 @@ const customRender = ( ui, options = {} ) => {\n);\n}\n+ const waitForRegistry = createWaitForRegistry( registry );\n+\nconst result = render( ui, { wrapper: Wrapper, ...renderOptions } );\nconst {\ngetByTestId: getByTestID, // eslint-disable-line sitekit/acronym-case\n@@ -87,6 +89,7 @@ const customRender = ( ui, options = {} ) => {\nqueryByTestID,\nregistry,\nhistory,\n+ waitForRegistry: () => act( waitForRegistry ),\n};\n};\n",
        "sim_msg_0": "Add waitForRegistry as return from custom render.",
        "sim_diff_1": "diff --git a/tests/js/test-utils.js b/tests/js/test-utils.js * External dependencies\n*/\nimport { render } from '@testing-library/react';\n-import { renderHook } from '@testing-library/react-hooks';\n+import { renderHook, act as actHook } from '@testing-library/react-hooks';\nimport invariant from 'invariant';\n/**\n@@ -99,3 +99,5 @@ export * from '@testing-library/react';\nexport { customRender as render };\n// Override @testing-library/react-hooks's renderHook method with our own.\nexport { customRenderHook as renderHook };\n+// Hooks need to use the `act` from @testing-library/react-hooks.\n+export { actHook };\n",
        "sim_msg_1": "Export hooks variant of act from test-utils.",
        "sim_diff_2": "diff --git a/packages/transportation/src/components/App/index.test.js b/packages/transportation/src/components/App/index.test.js -import React from 'react';\n-import { shallow } from 'enzyme';\n-import App from './index';\n-\ndescribe('<App />', () => {\n- it('should render its children', () => {\n- const children = (<h1>Test</h1>);\n- const wrapper = shallow(\n- <App>\n- {children}\n- </App>,\n- );\n- expect(wrapper.contains(children)).to.eql(true);\n+ it('does not have have functioning tests...', () => {\n+ expect(true).to.eql(true);\n});\n});\n",
        "sim_msg_2": "rm non functioning tests",
        "sim_diff_3": "diff --git a/tests/js/test-utils.js b/tests/js/test-utils.js * External dependencies\n*/\nimport { render } from '@testing-library/react';\n+import { renderHook } from '@testing-library/react-hooks';\nimport invariant from 'invariant';\n/**\n@@ -53,6 +54,37 @@ const customRender = ( ui, options = {} ) => {\n};\n};\n+/**\n+ * Renders a test component that will call the provided callback, including any hooks it calls, every time it renders.\n+ *\n+ * @since n.e.x.t\n+ *\n+ * @param {Function} callback The function that is called each render of the test component. This function should call one or more hooks for testing.\n+ * The props passed into the callback will be the initialProps provided in the options to renderHook,\n+ * unless new props are provided by a subsequent rerender call.\n+ * @param {Object} [options] Optional. An options object to modify the execution of the callback function.\n+ * See the [renderHook Options](@link https://react-hooks-testing-library.com/reference/api#renderhook-options) section for more details.\n+ * @return {Object} Object with `result`, `rerender`, `unmount`, and async utilities. @link https://react-hooks-testing-library.com/reference/api#renderhook-result\n+ */\n+const customRenderHook = (\n+ callback,\n+ {\n+ registry = createTestRegistry(),\n+ ...renderHookOptions\n+ } = {}\n+) => {\n+ const Wrapper = ( { children } ) => (\n+ <RegistryProvider value={ registry }>\n+ { children }\n+ </RegistryProvider>\n+ );\n+\n+ return {\n+ ...renderHook( callback, { wrapper: Wrapper, ...renderHookOptions } ),\n+ registry,\n+ };\n+};\n+\n// Export our own test utils from this file.\nexport * from 'tests/js/utils';\n@@ -61,3 +93,5 @@ export * from '@testing-library/react';\n// Override @testing-library/react's render method with our own.\nexport { customRender as render };\n+// Override @testing-library/react-hooks's renderHook method with our own.\n+export { customRenderHook as renderHook };\n",
        "sim_msg_3": "Extend renderHook in test-utils."
    },
    {
        "org_diff": "diff --git a/fixtures/ssr/yarn.lock b/a/fixtures/ssr/yarn.lock @@ -2771,9 +2771,9 @@ flatten@^1.0.2:\n   integrity sha512-dVsPA/UwQ8+2uoFe5GHtiBMu48dWLTdsuEd7CKGlZlD78r1TTWBvDuFaFGKCo/ZfEr95Uk56vZoX86OsHkUeIg==\n \n follow-redirects@^1.0.0:\n-  version \"1.15.4\"\n-  resolved \"https://registry.yarnpkg.com/follow-redirects/-/follow-redirects-1.15.4.tgz#cdc7d308bf6493126b17ea2191ea0ccf3e535adf\"\n-  integrity sha512-Cr4D/5wlrb0z9dgERpUL3LrmPKVDsETIJhaCMeDfuFYcqa5bldGV6wBsAN6X/vxlXQtFBMrXdXxdL8CbDTGniw==\n+  version \"1.15.6\"\n+  resolved \"https://registry.yarnpkg.com/follow-redirects/-/follow-redirects-1.15.6.tgz#7f815c0cda4249c74ff09e95ef97c23b5fd0399b\"\n+  integrity sha512-wWN62YITEaOpSK584EZXJafH1AGpO8RVgElfkuXbTOrPX4fIfOyEpW/CsiNd8JdYrAoOvafRTOEnvsO++qCqFA==\n \n for-in@^1.0.1, for-in@^1.0.2:\n   version \"1.0.2\"",
        "sim_diff_0": "diff --git a/yarn.lock b/yarn.lock @@ -7248,9 +7248,9 @@ flux-standard-action@^2.0.3:\nlodash \"^4.0.0\"\nfollow-redirects@^1.0.0:\n- version \"1.5.8\"\n- resolved \"https://registry.yarnpkg.com/follow-redirects/-/follow-redirects-1.5.8.tgz#1dbfe13e45ad969f813e86c00e5296f525c885a1\"\n- integrity sha512-sy1mXPmv7kLAMKW/8XofG7o9T+6gAjzdZK4AJF6ryqQYUa/hnzgiypoeUecZ53x7XiqKNEpNqLtS97MshW2nxg==\n+ version \"1.5.9\"\n+ resolved \"https://registry.yarnpkg.com/follow-redirects/-/follow-redirects-1.5.9.tgz#c9ed9d748b814a39535716e531b9196a845d89c6\"\n+ integrity sha512-Bh65EZI/RU8nx0wbYF9shkFZlqLP+6WT/5FnA3cE/djNSuKNHJEinGGZgu/cQEkeeb2GdFOgenAmn8qaqYke2w==\ndependencies:\ndebug \"=3.1.0\"\n@@ -14741,7 +14741,7 @@ select-hose@^2.0.0:\n\"selfkey-ui@https://github.com/SelfKeyFoundation/selfkey-ui.git\":\nversion \"1.0.0\"\n- resolved \"https://github.com/SelfKeyFoundation/selfkey-ui.git#5c2fc6523e97602e786471b5b659a5adaac1a103\"\n+ resolved \"https://github.com/SelfKeyFoundation/selfkey-ui.git#17264585a62a10087fcf31da8bbc1204cb095d63\"\ndependencies:\n\"@material-ui/core\" \"^1.3.1\"\n\"@material-ui/icons\" \"^1.1.0\"\n",
        "sim_msg_0": "fix: upgrade yarn lock",
        "sim_diff_1": "diff --git a/yarn.lock b/yarn.lock @@ -8826,9 +8826,9 @@ kind-of@^5.0.0:\nintegrity sha512-NGEErnH6F2vUuXDh+OlbcKW7/wOcfdRHaZ7VWtqCztfHri/++YKmP51OdWeGPuqCOba6kk2OTe5d02VmTB80Pw==\nkind-of@^6.0.0, kind-of@^6.0.2:\n- version \"6.0.2\"\n- resolved \"https://registry.yarnpkg.com/kind-of/-/kind-of-6.0.2.tgz#01146b36a6218e64e58f3a8d66de5d7fc6f6d051\"\n- integrity sha512-s5kLOcnH0XqDO+FvuaLX8DDjZ18CGFk7VygH40QoKPUQhW4e2rvM0rwUq0t8IQDOwYSeLK01U90OjzBTme2QqA==\n+ version \"6.0.3\"\n+ resolved \"https://registry.yarnpkg.com/kind-of/-/kind-of-6.0.3.tgz#07c05034a6c349fa06e24fa35aa76db4580ce4dd\"\n+ integrity sha512-dcS1ul+9tmeD95T+x28/ehLgd9mENa3LsvDTtzm3vyBEO7RPptvAD+t44WVXaUjTBRcrpFeFlC8WCruUR456hw==\nklaw-sync@^6.0.0:\nversion \"6.0.0\"\n",
        "sim_msg_1": "Fix security issue with kind-of package\nCVE-2019-20149",
        "sim_diff_2": "diff --git a/yarn.lock b/yarn.lock @@ -3236,6 +3236,11 @@ ansi-regex@^2.0.0:\nresolved \"https://registry.yarnpkg.com/ansi-regex/-/ansi-regex-2.1.1.tgz#c3b33ab5ee360d86e0e628f0468ae7ef27d654df\"\nintegrity sha1-w7M6te42DYbg5ijwRorn7yfWVN8=\n+ansi-regex@^3.0.0:\n+ version \"3.0.0\"\n+ resolved \"https://registry.yarnpkg.com/ansi-regex/-/ansi-regex-3.0.0.tgz#ed0317c322064f79466c02966bddb605ab37d998\"\n+ integrity sha1-7QMXwyIGT3lGbAKWa922Bas32Zg=\n+\nansi-regex@^4.1.0:\nversion \"4.1.0\"\nresolved \"https://registry.yarnpkg.com/ansi-regex/-/ansi-regex-4.1.0.tgz#8b9f8f08cf1acb843756a839ca8c7e3168c51997\"\n@@ -16276,8 +16281,6 @@ strip-ansi@^4.0.0:\nversion \"4.0.0\"\nresolved \"https://registry.yarnpkg.com/strip-ansi/-/strip-ansi-4.0.0.tgz#a8479022eb1ac368a871389b635262c505ee368f\"\nintegrity sha1-qEeQIusaw2iocTibY1JixQXuNo8=\n- dependencies:\n- ansi-regex \"^3.0.0\"\nstrip-ansi@^5.0.0, strip-ansi@^5.1.0, strip-ansi@^5.2.0:\nversion \"5.2.0\"\n",
        "sim_msg_2": "build: upgrade yarn.lock\nuses `yarn install` based on the following commit:",
        "sim_diff_3": "diff --git a/yarn.lock b/yarn.lock @@ -3733,17 +3733,17 @@ ansi-html@0.0.7:\nansi-regex@^2.0.0:\nversion \"2.1.1\"\nresolved \"https://registry.yarnpkg.com/ansi-regex/-/ansi-regex-2.1.1.tgz#c3b33ab5ee360d86e0e628f0468ae7ef27d654df\"\n- integrity sha1-w7M6te42DYbg5ijwRorn7yfWVN8=\n+ integrity sha512-TIGnTpdo+E3+pCyAluZvtED5p5wCqLdezCyhPZzKPcxvFplEt4i+W7OONCKgeZFT3+y5NZZfOOS/Bdcanm1MYA==\nansi-regex@^3.0.0:\n- version \"3.0.0\"\n- resolved \"https://registry.yarnpkg.com/ansi-regex/-/ansi-regex-3.0.0.tgz#ed0317c322064f79466c02966bddb605ab37d998\"\n- integrity sha1-7QMXwyIGT3lGbAKWa922Bas32Zg=\n+ version \"3.0.1\"\n+ resolved \"https://registry.yarnpkg.com/ansi-regex/-/ansi-regex-3.0.1.tgz#123d6479e92ad45ad897d4054e3c7ca7db4944e1\"\n+ integrity sha512-+O9Jct8wf++lXxxFc4hc8LsjaSq0HFzzL7cVsw8pRDIPdjKD2mT4ytDZlLuSBZ4cLKZFXIrMGO7DbQCtMJJMKw==\nansi-regex@^4.1.0:\n- version \"4.1.0\"\n- resolved \"https://registry.yarnpkg.com/ansi-regex/-/ansi-regex-4.1.0.tgz#8b9f8f08cf1acb843756a839ca8c7e3168c51997\"\n- integrity sha512-1apePfXM1UOSqw0o9IiFAovVz9M5S1Dg+4TrDwfMewQ6p/rmMueb7tWZjQ1rx4Loy1ArBggoqGpfqqdI4rondg==\n+ version \"4.1.1\"\n+ resolved \"https://registry.yarnpkg.com/ansi-regex/-/ansi-regex-4.1.1.tgz#164daac87ab2d6f6db3a29875e2d1766582dabed\"\n+ integrity sha512-ILlv4k/3f6vfQ4OoP2AGvirOktlQ98ZEL1k9FaQjxa3L1abBgbuTDAdPOpvbGncC0BTVQrl+OM8xZGK6tWXt7g==\nansi-regex@^5.0.0, ansi-regex@^5.0.1:\nversion \"5.0.1\"\n",
        "sim_msg_3": "[yarn] Bump `ansi-regex`\nSummary: Takes `yarn audit` from 56->47 issues\nTest Plan: CI\nReviewers: ashoat, palys-swm, def-au1t\nSubscribers: Adrian, yayabosh"
    },
    {
        "org_diff": "diff --git a/fixtures/concurrent/time-slicing/yarn.lock b/a/fixtures/concurrent/time-slicing/yarn.lock @@ -3372,9 +3372,9 @@ flatten@^1.0.2:\n   integrity sha512-dVsPA/UwQ8+2uoFe5GHtiBMu48dWLTdsuEd7CKGlZlD78r1TTWBvDuFaFGKCo/ZfEr95Uk56vZoX86OsHkUeIg==\n \n follow-redirects@^1.0.0:\n-  version \"1.15.4\"\n-  resolved \"https://registry.yarnpkg.com/follow-redirects/-/follow-redirects-1.15.4.tgz#cdc7d308bf6493126b17ea2191ea0ccf3e535adf\"\n-  integrity sha512-Cr4D/5wlrb0z9dgERpUL3LrmPKVDsETIJhaCMeDfuFYcqa5bldGV6wBsAN6X/vxlXQtFBMrXdXxdL8CbDTGniw==\n+  version \"1.15.6\"\n+  resolved \"https://registry.yarnpkg.com/follow-redirects/-/follow-redirects-1.15.6.tgz#7f815c0cda4249c74ff09e95ef97c23b5fd0399b\"\n+  integrity sha512-wWN62YITEaOpSK584EZXJafH1AGpO8RVgElfkuXbTOrPX4fIfOyEpW/CsiNd8JdYrAoOvafRTOEnvsO++qCqFA==\n \n for-in@^1.0.1, for-in@^1.0.2:\n   version \"1.0.2\"",
        "sim_diff_0": "diff --git a/yarn.lock b/yarn.lock @@ -23928,11 +23928,6 @@ whatwg-fetch@^3.0.0, whatwg-fetch@^3.5.0:\nresolved \"https://registry.yarnpkg.com/whatwg-fetch/-/whatwg-fetch-3.5.0.tgz#605a2cd0a7146e5db141e29d1c62ab84c0c4c868\"\nintegrity sha512-jXkLtsR42xhXg7akoDKvKWE40eJeI+2KZqcp2h3NsOrRnDvtWX36KcKl30dy+hxECivdk2BVUHVNrPtoMBUx6A==\n-whatwg-fetch@^3.4.1:\n- version \"3.4.1\"\n- resolved \"https://registry.yarnpkg.com/whatwg-fetch/-/whatwg-fetch-3.4.1.tgz#e5f871572d6879663fa5674c8f833f15a8425ab3\"\n- integrity sha512-sofZVzE1wKwO+EYPbWfiwzaKovWiZXf4coEzjGP9b2GBVgQRLQUZ2QcuPpQExGDAW5GItpEm6Tl4OU5mywnAoQ==\n-\nwhatwg-fetch@^3.6.2:\nversion \"3.6.2\"\nresolved \"https://registry.yarnpkg.com/whatwg-fetch/-/whatwg-fetch-3.6.2.tgz#dced24f37f2624ed0281725d51d0e2e3fe677f8c\"\n@@ -24439,8 +24434,3 @@ zepto@^1.2.0:\nversion \"1.2.0\"\nresolved \"https://registry.yarnpkg.com/zepto/-/zepto-1.2.0.tgz#e127bd9e66fd846be5eab48c1394882f7c0e4f98\"\nintegrity sha1-4Se9nmb9hGvl6rSME5SIL3wOT5g=\n-\n-zxcvbn@^4.4.2:\n- version \"4.4.2\"\n- resolved \"https://registry.yarnpkg.com/zxcvbn/-/zxcvbn-4.4.2.tgz#28ec17cf09743edcab056ddd8b1b06262cc73c30\"\n- integrity sha1-KOwXzwl0PtyrBW3dixsGJizHPDA=\n",
        "sim_msg_0": "build: update `yarn.lock` file\nDiff automatically generated after running `yarn` on `0643627d97f1`",
        "sim_diff_1": "diff --git a/yarn.lock b/yarn.lock @@ -7248,9 +7248,9 @@ flux-standard-action@^2.0.3:\nlodash \"^4.0.0\"\nfollow-redirects@^1.0.0:\n- version \"1.5.8\"\n- resolved \"https://registry.yarnpkg.com/follow-redirects/-/follow-redirects-1.5.8.tgz#1dbfe13e45ad969f813e86c00e5296f525c885a1\"\n- integrity sha512-sy1mXPmv7kLAMKW/8XofG7o9T+6gAjzdZK4AJF6ryqQYUa/hnzgiypoeUecZ53x7XiqKNEpNqLtS97MshW2nxg==\n+ version \"1.5.9\"\n+ resolved \"https://registry.yarnpkg.com/follow-redirects/-/follow-redirects-1.5.9.tgz#c9ed9d748b814a39535716e531b9196a845d89c6\"\n+ integrity sha512-Bh65EZI/RU8nx0wbYF9shkFZlqLP+6WT/5FnA3cE/djNSuKNHJEinGGZgu/cQEkeeb2GdFOgenAmn8qaqYke2w==\ndependencies:\ndebug \"=3.1.0\"\n@@ -14741,7 +14741,7 @@ select-hose@^2.0.0:\n\"selfkey-ui@https://github.com/SelfKeyFoundation/selfkey-ui.git\":\nversion \"1.0.0\"\n- resolved \"https://github.com/SelfKeyFoundation/selfkey-ui.git#5c2fc6523e97602e786471b5b659a5adaac1a103\"\n+ resolved \"https://github.com/SelfKeyFoundation/selfkey-ui.git#17264585a62a10087fcf31da8bbc1204cb095d63\"\ndependencies:\n\"@material-ui/core\" \"^1.3.1\"\n\"@material-ui/icons\" \"^1.1.0\"\n",
        "sim_msg_1": "fix: upgrade yarn lock",
        "sim_diff_2": "diff --git a/yarn.lock b/yarn.lock @@ -12789,16 +12789,11 @@ flat-cache@^3.0.4:\nflatted \"^3.1.0\"\nrimraf \"^3.0.2\"\n-flatpickr@^4.6.3:\n+flatpickr@4.6.9, flatpickr@^4.6.3, flatpickr@~4.5.2:\nversion \"4.6.9\"\nresolved \"https://registry.yarnpkg.com/flatpickr/-/flatpickr-4.6.9.tgz#9a13383e8a6814bda5d232eae3fcdccb97dc1499\"\nintegrity sha512-F0azNNi8foVWKSF+8X+ZJzz8r9sE1G4hl06RyceIaLvyltKvDl6vqk9Lm/6AUUCi5HWaIjiUbk7UpeE/fOXOpw==\n-flatpickr@~4.5.2:\n- version \"4.5.7\"\n- resolved \"https://registry.yarnpkg.com/flatpickr/-/flatpickr-4.5.7.tgz#6efc0d93c65547aa77294205c67830ebabe3565c\"\n- integrity sha512-JqPfihUc9A/j9QAsh6otoARmMyUauPE17vRBEG+ThJwbl8zAq4ssGpxlPK3wWM/i8EFxkHg9UuVo0ds7XluKxw==\n-\nflatted@^2.0.0:\nversion \"2.0.1\"\nresolved \"https://registry.yarnpkg.com/flatted/-/flatted-2.0.1.tgz#69e57caa8f0eacbc281d2e2cb458d46fdb449e08\"\n",
        "sim_msg_2": "build: update `yarn.lock` file\nuses `yarn install` command on following `HEAD` commit:\n```sh\n$ git rev-parse HEAD\n```\nref:",
        "sim_diff_3": "diff --git a/yarn.lock b/yarn.lock @@ -8826,9 +8826,9 @@ kind-of@^5.0.0:\nintegrity sha512-NGEErnH6F2vUuXDh+OlbcKW7/wOcfdRHaZ7VWtqCztfHri/++YKmP51OdWeGPuqCOba6kk2OTe5d02VmTB80Pw==\nkind-of@^6.0.0, kind-of@^6.0.2:\n- version \"6.0.2\"\n- resolved \"https://registry.yarnpkg.com/kind-of/-/kind-of-6.0.2.tgz#01146b36a6218e64e58f3a8d66de5d7fc6f6d051\"\n- integrity sha512-s5kLOcnH0XqDO+FvuaLX8DDjZ18CGFk7VygH40QoKPUQhW4e2rvM0rwUq0t8IQDOwYSeLK01U90OjzBTme2QqA==\n+ version \"6.0.3\"\n+ resolved \"https://registry.yarnpkg.com/kind-of/-/kind-of-6.0.3.tgz#07c05034a6c349fa06e24fa35aa76db4580ce4dd\"\n+ integrity sha512-dcS1ul+9tmeD95T+x28/ehLgd9mENa3LsvDTtzm3vyBEO7RPptvAD+t44WVXaUjTBRcrpFeFlC8WCruUR456hw==\nklaw-sync@^6.0.0:\nversion \"6.0.0\"\n",
        "sim_msg_3": "Fix security issue with kind-of package\nCVE-2019-20149"
    },
    {
        "org_diff": "diff --git a/fixtures/dom/yarn.lock b/a/fixtures/dom/yarn.lock @@ -3366,9 +3366,9 @@ flatten@^1.0.2:\n   integrity sha512-dVsPA/UwQ8+2uoFe5GHtiBMu48dWLTdsuEd7CKGlZlD78r1TTWBvDuFaFGKCo/ZfEr95Uk56vZoX86OsHkUeIg==\n \n follow-redirects@^1.0.0:\n-  version \"1.13.0\"\n-  resolved \"https://registry.yarnpkg.com/follow-redirects/-/follow-redirects-1.13.0.tgz#b42e8d93a2a7eea5ed88633676d6597bc8e384db\"\n-  integrity sha512-aq6gF1BEKje4a9i9+5jimNFIpq4Q1WiwBToeRK5NvZBd/TRsmW8BsJfOEGkr76TbOyPVD3OVDN910EcUNtRYEA==\n+  version \"1.15.6\"\n+  resolved \"https://registry.yarnpkg.com/follow-redirects/-/follow-redirects-1.15.6.tgz#7f815c0cda4249c74ff09e95ef97c23b5fd0399b\"\n+  integrity sha512-wWN62YITEaOpSK584EZXJafH1AGpO8RVgElfkuXbTOrPX4fIfOyEpW/CsiNd8JdYrAoOvafRTOEnvsO++qCqFA==\n \n for-in@^1.0.1, for-in@^1.0.2:\n   version \"1.0.2\"",
        "sim_diff_0": "diff --git a/yarn.lock b/yarn.lock @@ -7248,9 +7248,9 @@ flux-standard-action@^2.0.3:\nlodash \"^4.0.0\"\nfollow-redirects@^1.0.0:\n- version \"1.5.8\"\n- resolved \"https://registry.yarnpkg.com/follow-redirects/-/follow-redirects-1.5.8.tgz#1dbfe13e45ad969f813e86c00e5296f525c885a1\"\n- integrity sha512-sy1mXPmv7kLAMKW/8XofG7o9T+6gAjzdZK4AJF6ryqQYUa/hnzgiypoeUecZ53x7XiqKNEpNqLtS97MshW2nxg==\n+ version \"1.5.9\"\n+ resolved \"https://registry.yarnpkg.com/follow-redirects/-/follow-redirects-1.5.9.tgz#c9ed9d748b814a39535716e531b9196a845d89c6\"\n+ integrity sha512-Bh65EZI/RU8nx0wbYF9shkFZlqLP+6WT/5FnA3cE/djNSuKNHJEinGGZgu/cQEkeeb2GdFOgenAmn8qaqYke2w==\ndependencies:\ndebug \"=3.1.0\"\n@@ -14741,7 +14741,7 @@ select-hose@^2.0.0:\n\"selfkey-ui@https://github.com/SelfKeyFoundation/selfkey-ui.git\":\nversion \"1.0.0\"\n- resolved \"https://github.com/SelfKeyFoundation/selfkey-ui.git#5c2fc6523e97602e786471b5b659a5adaac1a103\"\n+ resolved \"https://github.com/SelfKeyFoundation/selfkey-ui.git#17264585a62a10087fcf31da8bbc1204cb095d63\"\ndependencies:\n\"@material-ui/core\" \"^1.3.1\"\n\"@material-ui/icons\" \"^1.1.0\"\n",
        "sim_msg_0": "fix: upgrade yarn lock",
        "sim_diff_1": "diff --git a/yarn.lock b/yarn.lock @@ -8826,9 +8826,9 @@ kind-of@^5.0.0:\nintegrity sha512-NGEErnH6F2vUuXDh+OlbcKW7/wOcfdRHaZ7VWtqCztfHri/++YKmP51OdWeGPuqCOba6kk2OTe5d02VmTB80Pw==\nkind-of@^6.0.0, kind-of@^6.0.2:\n- version \"6.0.2\"\n- resolved \"https://registry.yarnpkg.com/kind-of/-/kind-of-6.0.2.tgz#01146b36a6218e64e58f3a8d66de5d7fc6f6d051\"\n- integrity sha512-s5kLOcnH0XqDO+FvuaLX8DDjZ18CGFk7VygH40QoKPUQhW4e2rvM0rwUq0t8IQDOwYSeLK01U90OjzBTme2QqA==\n+ version \"6.0.3\"\n+ resolved \"https://registry.yarnpkg.com/kind-of/-/kind-of-6.0.3.tgz#07c05034a6c349fa06e24fa35aa76db4580ce4dd\"\n+ integrity sha512-dcS1ul+9tmeD95T+x28/ehLgd9mENa3LsvDTtzm3vyBEO7RPptvAD+t44WVXaUjTBRcrpFeFlC8WCruUR456hw==\nklaw-sync@^6.0.0:\nversion \"6.0.0\"\n",
        "sim_msg_1": "Fix security issue with kind-of package\nCVE-2019-20149",
        "sim_diff_2": "diff --git a/yarn.lock b/yarn.lock @@ -13605,6 +13605,20 @@ web3-utils@^1.3.0:\nunderscore \"1.9.1\"\nutf8 \"3.0.0\"\n+web3-utils@^1.3.1:\n+ version \"1.3.1\"\n+ resolved \"https://registry.yarnpkg.com/web3-utils/-/web3-utils-1.3.1.tgz#9aa880dd8c9463fe5c099107889f86a085370c2e\"\n+ integrity sha512-9gPwFm8SXtIJuzdrZ37PRlalu40fufXxo+H2PiCwaO6RpKGAvlUlWU0qQbyToFNXg7W2H8djEgoAVac8NLMCKQ==\n+ dependencies:\n+ bn.js \"^4.11.9\"\n+ eth-lib \"0.2.8\"\n+ ethereum-bloom-filters \"^1.0.6\"\n+ ethjs-unit \"0.1.6\"\n+ number-to-bn \"1.7.0\"\n+ randombytes \"^2.1.0\"\n+ underscore \"1.9.1\"\n+ utf8 \"3.0.0\"\n+\nweb3@1.0.0-beta.33:\nversion \"1.0.0-beta.33\"\nresolved \"https://registry.yarnpkg.com/web3/-/web3-1.0.0-beta.33.tgz#c6021b5769927726371c184b868445311b139295\"\n",
        "sim_msg_2": "Updating deps for",
        "sim_diff_3": "diff --git a/yarn.lock b/yarn.lock @@ -9053,13 +9053,13 @@ html-tags@^3.1.0:\nintegrity sha512-1qYz89hW3lFDEazhjW0yVAV87lw8lVkrJocr72XmBkMKsoSVJCQx3W8BXsC7hO2qAt8BoVjYjtAcZ9perqGnNg==\nhtml-tokenize@^2.0.0:\n- version \"2.0.0\"\n- resolved \"https://registry.yarnpkg.com/html-tokenize/-/html-tokenize-2.0.0.tgz#8b3a9a5deb475cae6a6f9671600d2c20ab298251\"\n- integrity sha1-izqaXetHXK5qb5ZxYA0sIKspglE=\n+ version \"2.0.1\"\n+ resolved \"https://registry.yarnpkg.com/html-tokenize/-/html-tokenize-2.0.1.tgz#c3b2ea6e2837d4f8c06693393e9d2a12c960be5f\"\n+ integrity sha512-QY6S+hZ0f5m1WT8WffYN+Hg+xm/w5I8XeUcAq/ZYP5wVC8xbKi4Whhru3FtrAebD5EhBW8rmFzkDI6eCAuFe2w==\ndependencies:\nbuffer-from \"~0.1.1\"\ninherits \"~2.0.1\"\n- minimist \"~0.0.8\"\n+ minimist \"~1.2.5\"\nreadable-stream \"~1.0.27-1\"\nthrough2 \"~0.4.1\"\n@@ -11595,15 +11595,10 @@ minimist-options@4.1.0:\nis-plain-obj \"^1.1.0\"\nkind-of \"^6.0.3\"\n-minimist@^1.1.3, minimist@^1.2.0, minimist@^1.2.3, minimist@^1.2.5:\n- version \"1.2.5\"\n- resolved \"https://registry.yarnpkg.com/minimist/-/minimist-1.2.5.tgz#67d66014b66a6a8aaa0c083c5fd58df4e4e97602\"\n- integrity sha512-FM9nNUYrRBAELZQT3xeZQ7fmMOBg6nWNmJKTcgsJeaLstP/UODVpGsr5OhXhhXg6f+qtJ8uiZ+PUxkDWcgIXLw==\n-\n-minimist@~0.0.8:\n- version \"0.0.10\"\n- resolved \"https://registry.yarnpkg.com/minimist/-/minimist-0.0.10.tgz#de3f98543dbf96082be48ad1a0c7cda836301dcf\"\n- integrity sha1-3j+YVD2/lggr5IrRoMfNqDYwHc8=\n+minimist@^1.1.3, minimist@^1.2.0, minimist@^1.2.3, minimist@^1.2.5, minimist@~1.2.5:\n+ version \"1.2.6\"\n+ resolved \"https://registry.yarnpkg.com/minimist/-/minimist-1.2.6.tgz#8637a5b759ea0d6e98702cfb3a9283323c93af44\"\n+ integrity sha512-Jsjnk4bw3YJqYzbdyBiNsPWHPfO++UGG749Cxs6peCu5Xg4nrena6OVxOYxrQTqww0Jmwt+Ref8rggumkTLz9Q==\nminipass-collect@^1.0.2:\nversion \"1.0.2\"\n",
        "sim_msg_3": "[core] Update minimist to fix security vulnerability"
    },
    {
        "org_diff": "diff --git a/yarn.lock b/a/yarn.lock @@ -6997,7 +6997,6 @@ eslint-plugin-no-unsanitized@3.1.2:\n \n \"eslint-plugin-react-internal@link:./scripts/eslint-rules\":\n   version \"0.0.0\"\n-  uid \"\"\n \n eslint-plugin-react@^6.7.1:\n   version \"6.10.3\"\n@@ -7977,9 +7976,9 @@ fluent-syntax@0.13.0:\n   integrity sha512-0Bk1AsliuYB550zr4JV9AYhsETsD3ELXUQzdXGJfIc1Ni/ukAfBdQInDhVMYJUaT2QxoamNslwkYF7MlOrPUwg==\n \n follow-redirects@^1.0.0:\n-  version \"1.15.4\"\n-  resolved \"https://registry.yarnpkg.com/follow-redirects/-/follow-redirects-1.15.4.tgz#cdc7d308bf6493126b17ea2191ea0ccf3e535adf\"\n-  integrity sha512-Cr4D/5wlrb0z9dgERpUL3LrmPKVDsETIJhaCMeDfuFYcqa5bldGV6wBsAN6X/vxlXQtFBMrXdXxdL8CbDTGniw==\n+  version \"1.15.6\"\n+  resolved \"https://registry.yarnpkg.com/follow-redirects/-/follow-redirects-1.15.6.tgz#7f815c0cda4249c74ff09e95ef97c23b5fd0399b\"\n+  integrity sha512-wWN62YITEaOpSK584EZXJafH1AGpO8RVgElfkuXbTOrPX4fIfOyEpW/CsiNd8JdYrAoOvafRTOEnvsO++qCqFA==\n \n for-in@^1.0.2:\n   version \"1.0.2\"",
        "sim_diff_0": "diff --git a/yarn.lock b/yarn.lock @@ -16114,10 +16114,15 @@ lottie-react-web@^2.2.2:\nlottie-api \"^1.0.2\"\nlottie-web \"^5.6.1\"\n-lottie-web@^5.6.1, lottie-web@^5.7.1:\n- version \"5.9.4\"\n- resolved \"https://registry.yarnpkg.com/lottie-web/-/lottie-web-5.9.4.tgz#c01478ee5dd47f916cb4bb79040c11d427872d57\"\n- integrity sha512-bSs1ZTPifnBVejO1MnQHdfrKfcn02YTCmgOh2wcAEICqRA0V7GzDh8FnwXY6+EzT+i8XOunaIloo/5xC5YNbsA==\n+lottie-web@^5.6.1:\n+ version \"5.8.1\"\n+ resolved \"https://registry.yarnpkg.com/lottie-web/-/lottie-web-5.8.1.tgz#807e0af0ad22b59bf867d964eb684cb3368da0ef\"\n+ integrity sha512-9gIizWADlaHC2GCt+D+yNpk5l2clZQFqnVWWIVdY0LnxC/uLa39dYltAe3fcmC/hrZ2IUQ8dLlY0O934Npjs7Q==\n+\n+lottie-web@^5.7.1:\n+ version \"5.7.14\"\n+ resolved \"https://registry.yarnpkg.com/lottie-web/-/lottie-web-5.7.14.tgz#cdabd256181c3ea64cf0c174a61dfa137228981f\"\n+ integrity sha512-J+QEPse7Rws0XvTqRJNtcE8cszb5FWYFHubEK6bgDJtw64/AQJ40aazbWXsWGBM4sm/PgLBLgmmhDU4QpLiieg==\nlower-case@^2.0.2:\nversion \"2.0.2\"\n",
        "sim_msg_0": "pass current provider to api",
        "sim_diff_1": "diff --git a/yarn.lock b/yarn.lock @@ -6454,7 +6454,7 @@ http-errors@~1.6.2:\nsetprototypeof \"1.1.0\"\nstatuses \">= 1.4.0 < 2\"\n-\"http-parser-js@>= 0.4.0, < 0.4.11\":\n+\"http-parser-js@>=0.4.0 <0.4.11\":\nversion \"0.4.10\"\nresolved \"https://registry.yarnpkg.com/http-parser-js/-/http-parser-js-0.4.10.tgz#92c9c1374c35085f75db359ec56cc257cbb93fa4\"\nintegrity sha1-ksnBN0w1CF912zWexWzCV8u5P6Q=\n@@ -11110,7 +11110,7 @@ rxjs@^6.3.3, rxjs@^6.4.0:\ndependencies:\ntslib \"^1.9.0\"\n-safe-buffer@5.1.2, \"safe-buffer@>= 5.1.0\", safe-buffer@^5.0.1, safe-buffer@^5.1.0, safe-buffer@^5.1.1, safe-buffer@^5.1.2, safe-buffer@~5.1.0, safe-buffer@~5.1.1:\n+safe-buffer@5.1.2, safe-buffer@>=5.1.0, safe-buffer@^5.0.1, safe-buffer@^5.1.0, safe-buffer@^5.1.1, safe-buffer@^5.1.2, safe-buffer@~5.1.0, safe-buffer@~5.1.1:\nversion \"5.1.2\"\nresolved \"https://registry.yarnpkg.com/safe-buffer/-/safe-buffer-5.1.2.tgz#991ec69d296e0313747d59bdfd2b745c35f8828d\"\nintegrity sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==\n@@ -13120,7 +13120,7 @@ websocket-driver@>=0.5.1:\nsafe-buffer \">=5.1.0\"\nwebsocket-extensions \">=0.1.1\"\n-\"websocket-extensions@>= 0.1.1\":\n+websocket-extensions@>=0.1.1:\nversion \"0.1.3\"\nresolved \"https://registry.yarnpkg.com/websocket-extensions/-/websocket-extensions-0.1.3.tgz#5d2ff22977003ec687a4b87073dfbbac146ccf29\"\nintegrity sha512-nqHUnMXmBzT0w570r2JpJxfiSD1IzoI+HGVdd3aZ0yNi3ngvQ4jv1dtHt5VGxfI2yj5yqImPhOK4vmIh2xMbGg==\n",
        "sim_msg_1": "build: update yarn.lock file by running yarn install",
        "sim_diff_2": "diff --git a/yarn.lock b/yarn.lock @@ -3593,7 +3593,6 @@ bootstrap@^3.3.6, bootstrap@^3.3.7, bootstrap@^3.4.1, bootstrap@~3:\nintegrity sha512-yN5oZVmRCwe5aKwzRj6736nSmKDX7pLYwsXiCj/EYmo16hODaBiT4En5btW/jhBF/seV+XMx3aYwukYC3A49DA==\nbootstrap@^4.3.1:\n- name bootstrap4\nversion \"4.3.1\"\nresolved \"https://registry.yarnpkg.com/bootstrap/-/bootstrap-4.3.1.tgz#280ca8f610504d99d7b6b4bfc4b68cec601704ac\"\nintegrity sha512-rXqOmH1VilAt2DyPzluTi2blhk17bO7ef+zLLPlWvG494pDxcM234pJ8wTc/6R40UWizAIIMgxjvxZg5kmsbag==\n",
        "sim_msg_2": "build(yarn): fix yarn.lock (conflict on bootstrap4 dependency)",
        "sim_diff_3": "diff --git a/yarn.lock b/yarn.lock @@ -6710,15 +6710,6 @@ cli-width@^2.0.0:\nresolved \"https://registry.yarnpkg.com/cli-width/-/cli-width-2.2.0.tgz#ff19ede8a9a5e579324147b0c11f0fbcbabed639\"\nintegrity sha1-/xnt6Kml5XkyQUewwR8PvLq+1jk=\n-clipboard@^2.0.0:\n- version \"2.0.4\"\n- resolved \"https://registry.yarnpkg.com/clipboard/-/clipboard-2.0.4.tgz#836dafd66cf0fea5d71ce5d5b0bf6e958009112d\"\n- integrity sha512-Vw26VSLRpJfBofiVaFb/I8PVfdI1OxKcYShe6fm0sP/DtmiWQNCjhM/okTvdCo0G+lMMm1rMYbk4IK4x1X+kgQ==\n- dependencies:\n- good-listener \"^1.2.2\"\n- select \"^1.1.2\"\n- tiny-emitter \"^2.0.0\"\n-\nclipboard@^2.0.4:\nversion \"2.0.6\"\nresolved \"https://registry.yarnpkg.com/clipboard/-/clipboard-2.0.6.tgz#52921296eec0fdf77ead1749421b21c968647376\"\n@@ -16012,11 +16003,9 @@ pretty-time@^1.1.0:\nintegrity sha512-28iF6xPQrP8Oa6uxE6a1biz+lWeTOAPKggvjB8HAs6nVMKZwf5bG++632Dx614hIWgUPkgivRfG+a8uAXGTIbA==\nprismjs@^1.13.0:\n- version \"1.17.1\"\n- resolved \"https://registry.yarnpkg.com/prismjs/-/prismjs-1.17.1.tgz#e669fcbd4cdd873c35102881c33b14d0d68519be\"\n- integrity sha512-PrEDJAFdUGbOP6xK/UsfkC5ghJsPJviKgnQOoxaDbBjwc8op68Quupwt1DeAFoG8GImPhiKXAvvsH7wDSLsu1Q==\n- optionalDependencies:\n- clipboard \"^2.0.0\"\n+ version \"1.25.0\"\n+ resolved \"https://registry.yarnpkg.com/prismjs/-/prismjs-1.25.0.tgz#6f822df1bdad965734b310b315a23315cf999756\"\n+ integrity sha512-WCjJHl1KEWbnkQom1+SzftbtXMKQoezOCYs5rECqMN+jP+apI7ftoflyqigqzopSO3hMhTEb0mFClA8lkolgEg==\nprivate@^0.1.6, private@^0.1.8:\nversion \"0.1.8\"\n",
        "sim_msg_3": "build(deps): bump prismjs from 1.17.1 to 1.25.0\nBumps [prismjs](https://github.com/PrismJS/prism) from 1.17.1 to 1.25.0.\n[Release notes](https://github.com/PrismJS/prism/releases)\n[Changelog](https://github.com/PrismJS/prism/blob/master/CHANGELOG.md)\n[Commits](PrismJS/prism@v1.17.1...v1.25.0)\nupdated-dependencies:\ndependency-name: prismjs\ndependency-type: indirect\n..."
    },
    {
        "org_diff": "diff --git a/packages/scheduler/src/__tests__/Scheduler-test.js b/a/packages/scheduler/src/__tests__/Scheduler-test.js @@ -247,7 +247,8 @@ describe('SchedulerBrowser', () => {\n     });\n     runtime.assertLog(['Post Message']);\n     cancelCallback(task);\n-    runtime.assertLog([]);\n+    runtime.fireMessageEvent();\n+    runtime.assertLog(['Message Event']);\n   });\n \n   it('throws when a task errors then continues in a new event', () => {",
        "sim_diff_0": "diff --git a/src/common/scheduler/index.js b/src/common/scheduler/index.js @@ -150,3 +150,25 @@ export const schedulerSelectors = {\n},\nselectJob: (state, id) => schedulerSelectors.selectScheduler(state).jobsById[id]\n};\n+\n+export const schedulerReducer = (state = schedulerInitialState, action) => {\n+ switch (action.type) {\n+ case schedulerTypes.SCHEDULER_JOB_QUEUE:\n+ return reducers.queueJobReducer(state, action);\n+ case schedulerTypes.SCHEDULER_JOB_PROCESS:\n+ return reducers.processJobReducer(state, action);\n+ case schedulerTypes.SCHEDULER_JOB_FINISH:\n+ return reducers.finishJobReducer(state, action);\n+ case schedulerTypes.SCHEDULER_JOB_PROGRESS:\n+ return reducers.progressJobReducer(state, action);\n+ case schedulerTypes.SCHEDULER_JOB_DELETE:\n+ return reducers.deleteJobReducer(state, action);\n+ case schedulerTypes.SCHEDULER_QUEUE_SET_PROCESSING:\n+ return reducers.setProcessingQueueReducer(state, action);\n+ case schedulerTypes.SCHEDULER_QUEUE_SET_CONFIG:\n+ return reducers.setConfigQueueReducer(state, action);\n+ }\n+ return state;\n+};\n+\n+export default schedulerReducer;\n",
        "sim_msg_0": "feat(scheduler): main reducer",
        "sim_diff_1": "diff --git a/src/setup/extensions/testTaskInspectorExtension.js b/src/setup/extensions/testTaskInspectorExtension.js @@ -14,6 +14,7 @@ window.ProcessMaker.EventBus.$on('modeler-init', ({ registerInspectorExtension }\nplaceholder: '72 hours',\nhelper: 'Time when the task will due (hours)',\nname: 'dueIn',\n+ validation: 'numeric|min:1',\n},\n});\nregisterInspectorExtension(task, {\n",
        "sim_msg_1": "Add validation rule for due in",
        "sim_diff_2": "diff --git a/src/events/schedule/Schedule.js b/src/events/schedule/Schedule.js @@ -35,7 +35,7 @@ export default class Schedule {\ntry {\nconst lambdaFunction = this.#lambda.get(functionKey)\n- const event = input || this.getDefaultLambdaScheduleEvent()\n+ const event = input ?? this.getDefaultLambdaScheduleEvent()\nlambdaFunction.setEvent(event)\n/* const result = */ await lambdaFunction.runHandler()\n",
        "sim_msg_2": "Use nullish coalescing",
        "sim_diff_3": "diff --git a/src/internal/scheduler.js b/src/internal/scheduler.js @@ -14,15 +14,12 @@ let semaphore = 0\nand flushed after this task has finished (assuming the scheduler endup in a released\nstate).\n**/\n-function exec() {\n- let task;\n- while (!semaphore && (task = queue.shift()) !== undefined) {\n+function exec(task) {\ntry {\n- suspend();\n- task();\n+ suspend()\n+ task()\n} finally {\n- semaphore--;\n- }\n+ release()\n}\n}\n@@ -31,8 +28,10 @@ function exec() {\n**/\nexport function asap(task) {\nqueue.push(task)\n+\nif (!semaphore) {\n- exec()\n+ suspend()\n+ flush()\n}\n}\n@@ -44,12 +43,21 @@ export function suspend() {\nsemaphore++\n}\n+/**\n+ Puts the scheduler in a `released` state.\n+**/\n+function release() {\n+ semaphore--\n+}\n+\n/**\nReleases the current lock. Executes all queued tasks if the scheduler is in the released state.\n**/\nexport function flush() {\n- semaphore--\n- if(!semaphore && queue.length) {\n- exec()\n+ release()\n+\n+ let task\n+ while (!semaphore && (task = queue.shift()) !== undefined) {\n+ exec(task)\n}\n}\n",
        "sim_msg_3": "Loop through tasks in `flush()` instead of `exec()`\nFor this to work, `asap()` needs to call `flush()` so that the loop\nkicks off and nested tasks work with the queue\nAlso made semaphore decrement into a separate release() function for\nreadability"
    },
    {
        "org_diff": "diff --git a/packages/shared/forks/ReactFeatureFlags.native-oss.js b/a/packages/shared/forks/ReactFeatureFlags.native-oss.js @@ -10,6 +10,13 @@\n import typeof * as FeatureFlagsType from 'shared/ReactFeatureFlags';\n import typeof * as ExportsType from './ReactFeatureFlags.native-oss';\n \n+// -----------------------------------------------------------------------------\n+// Ready for next major.\n+//\n+// Alias __NEXT_MAJOR__ to false for easier skimming.\n+// -----------------------------------------------------------------------------\n+const __NEXT_MAJOR__ = false;\n+\n export const debugRenderPhaseSideEffectsForStrictMode = __DEV__;\n export const enableDebugTracing = false;\n export const enableAsyncDebugInfo = false;\n@@ -18,7 +25,7 @@ export const enableProfilerTimer = __PROFILE__;\n export const enableProfilerCommitHooks = __PROFILE__;\n export const enableProfilerNestedUpdatePhase = __PROFILE__;\n export const enableUpdaterTracking = __PROFILE__;\n-export const enableCache = true;\n+export const enableCache = __NEXT_MAJOR__;\n export const enableLegacyCache = false;\n export const enableCacheElement = true;\n export const enableFetchInstrumentation = false;",
        "sim_diff_0": "diff --git a/example/package.json b/example/package.json \"prop-types\": \"^15.7.2\",\n\"react\": \"16.11.0\",\n\"react-native\": \"0.62.1\",\n- \"react-native-elements\": \"^1.1.0\",\n+ \"react-native-elements\": \"^2.2.1\",\n\"react-native-gesture-handler\": \"^1.6.1\",\n\"react-native-safe-area-context\": \"^0.7.3\",\n\"react-native-safe-area-view\": \"^0.13.1\",\n",
        "sim_msg_0": "update rn-elements",
        "sim_diff_1": "diff --git a/example/package.json b/example/package.json \"react-native-elements\": \"^2.2.1\",\n\"react-native-gesture-handler\": \"^1.6.1\",\n\"react-native-safe-area-context\": \"^3.1.9\",\n- \"react-native-safe-area-view\": \"^0.13.1\",\n\"react-native-screens\": \"^2.4.0\",\n\"react-native-svg\": \"^12.1.0\",\n\"react-native-vector-icons\": \"6.6.0\",\n",
        "sim_msg_1": "remove react-native-safe-area-view, as it is deprecated and we do not need it",
        "sim_diff_2": "diff --git a/package.json b/package.json \"react-native-vector-icons\": \"^6.2.0\",\n\"react-native-web\": \"^0.11.x\",\n\"react-native-web-webview\": \"^0.2.8\",\n- \"react-navigation-stack\": \"^1.0.9\",\n- \"react-navigation-tabs\": \"^1.0.2\",\n\"react-otp-input\": \"^0.2.2\",\n\"react-phone-number-input\": \"^2.3.5\",\n\"react-qr-reader\": \"^2.2.1\",\n",
        "sim_msg_2": "refactor: unused packages",
        "sim_diff_3": "diff --git a/native/package.json b/native/package.json \"dependencies\": {\n\"invariant\": \"^2.2.2\",\n\"react\": \"^16.0.0-alpha.12\",\n- \"react-native\": \"git+https://github.com/facebook/react-native.git\",\n+ \"react-native\": \"^0.45.0-rc.0\",\n\"react-native-cookies\": \"^3.0.0\",\n\"react-native-keychain\": \"^1.2.0\",\n\"react-native-onepassword\": \"^1.0.4\",\n",
        "sim_msg_3": "Upgrade to react-native 0.45.0-rc0"
    },
    {
        "org_diff": "diff --git a/packages/eslint-plugin-react-hooks/__tests__/ESLintRuleExhaustiveDeps-test.js b/a/packages/eslint-plugin-react-hooks/__tests__/ESLintRuleExhaustiveDeps-test.js @@ -7774,6 +7774,16 @@ const testsTypescript = {\n         }\n       `,\n     },\n+    {\n+      code: normalizeIndent`\n+        function useMyThing<T>(): void {\n+          useEffect(() => {\n+            let foo: T;\n+            console.log(foo);\n+          }, []);\n+        }\n+      `,\n+    },\n   ],\n   invalid: [\n     {",
        "sim_diff_0": "diff --git a/.eslintrc.json b/.eslintrc.json \"rules\": {\n\"no-restricted-globals\": [\n\"off\"\n- ]\n+ ],\n+ \"react-hooks/rules-of-hooks\": \"off\"\n}\n},\n{\n\"off\"\n]\n}\n- },\n- {\n- \"files\": [\n- \"tests/e2e/**/*.js\"\n- ],\n- \"rules\": {\n- \"react-hooks/rules-of-hooks\": \"off\"\n- }\n}\n],\n\"plugins\": [\n",
        "sim_msg_0": "Combine eslint rule groups for e2e tests.",
        "sim_diff_1": "diff --git a/packages/yoga/src/Checkbox/web/Checkbox.test.jsx b/packages/yoga/src/Checkbox/web/Checkbox.test.jsx +/* eslint-disable no-console */\nimport React from 'react';\nimport { render, fireEvent } from '@testing-library/react';\n@@ -10,7 +11,6 @@ const data = {\nhelper: 'Helper Text',\n};\n-/* eslint-disable no-console */\nconst originalError = console.error;\nbeforeEach(() => {\n",
        "sim_msg_1": "test(checkbox): adjust eslint in the checkbox test",
        "sim_diff_2": "diff --git a/.eslintrc.json b/.eslintrc.json \"off\"\n]\n}\n+ },\n+ {\n+ \"files\": [\n+ \"tests/e2e/**/*.js\"\n+ ],\n+ \"rules\": {\n+ \"react-hooks/rules-of-hooks\": \"off\"\n+ }\n}\n],\n\"plugins\": [\n",
        "sim_msg_2": "Add react-hooks rules ignore for the e2e test files.",
        "sim_diff_3": "diff --git a/.eslintrc.js b/.eslintrc.js @@ -16,7 +16,8 @@ module.exports = {\n\"react/sort-comp\": 0,\n\"react/prop-types\": 0,\n\"no-underscore-dangle\": 0,\n- \"comma-dangle\": 0\n+ \"comma-dangle\": 0,\n+ \"no-static-element-interactions\": 0,\n},\n\"plugins\": [\n\"react\",\n",
        "sim_msg_3": "ignore no-static-element-interactions eslint rule"
    },
    {
        "org_diff": "diff --git a/packages/react-dom/src/__tests__/refs-destruction-test.js b/a/packages/react-dom/src/__tests__/refs-destruction-test.js @@ -12,7 +12,6 @@\n let React;\n let ReactDOM;\n let ReactDOMClient;\n-let ReactTestUtils;\n let TestComponent;\n let act;\n let theInnerDivRef;\n@@ -25,7 +24,6 @@ describe('refs-destruction', () => {\n     React = require('react');\n     ReactDOM = require('react-dom');\n     ReactDOMClient = require('react-dom/client');\n-    ReactTestUtils = require('react-dom/test-utils');\n     act = require('internal-test-utils').act;\n \n     class ClassComponent extends React.Component {\n@@ -75,7 +73,7 @@ describe('refs-destruction', () => {\n       root.render(<TestComponent />);\n     });\n \n-    expect(ReactTestUtils.isDOMComponent(theInnerDivRef.current)).toBe(true);\n+    expect(theInnerDivRef.current).toBeInstanceOf(Element);\n     expect(theInnerClassComponentRef.current).toBeTruthy();\n \n     root.unmount();\n@@ -91,7 +89,7 @@ describe('refs-destruction', () => {\n       root.render(<TestComponent />);\n     });\n \n-    expect(ReactTestUtils.isDOMComponent(theInnerDivRef.current)).toBe(true);\n+    expect(theInnerDivRef.current).toBeInstanceOf(Element);\n     expect(theInnerClassComponentRef.current).toBeTruthy();\n \n     await act(async () => {\n@@ -109,7 +107,7 @@ describe('refs-destruction', () => {\n       root.render(<TestComponent />);\n     });\n \n-    expect(ReactTestUtils.isDOMComponent(theInnerDivRef.current)).toBe(true);\n+    expect(theInnerDivRef.current).toBeInstanceOf(Element);\n     expect(theInnerClassComponentRef.current).toBeTruthy();\n \n     await act(async () => {",
        "sim_diff_0": "diff --git a/assets/src/components/mybooks/MyBooks.test.jsx b/assets/src/components/mybooks/MyBooks.test.jsx import React from 'react';\n-import { shallow } from 'enzyme';\n+import { mount } from 'enzyme';\nimport MyBooks from './MyBooks';\nimport { getMyBooks } from '../../services/BookService';\nimport BookList from '../books/BookList';\n@@ -7,10 +7,16 @@ import { someBookWithACopyFromMe } from '../../../test/booksHelper';\njest.mock('../../services/BookService');\n+const createComponent = (props = {}) => mount(<MyBooks {...props} />);\ndescribe('My books', () => {\n- const createComponent = (props = {}) => shallow(<MyBooks {...props} />);\n+ beforeEach(() => {\ngetMyBooks.mockReturnValue({ results: [] });\n+ });\n+\n+ afterEach(() => {\n+ getMyBooks.mockClear();\n+ });\nit('renders without crashing', () => {\nconst myBooks = createComponent();\n@@ -33,6 +39,7 @@ describe('My books', () => {\ngetMyBooks.mockReturnValue({ results: books });\nconst component = await createComponent();\n+ await component.update();\nexpect(component.find(BookList).props().books).toEqual(books);\n});\n",
        "sim_msg_0": "changes MyBooks test to use mount",
        "sim_diff_1": "diff --git a/src/screens/EventsScreen/FilterHeader.test.js b/src/screens/EventsScreen/FilterHeader.test.js @@ -3,6 +3,8 @@ import React from \"react\";\nimport { shallow } from \"enzyme\";\nimport FilterHeader from \"./FilterHeader\";\nimport type { Props as ComponentProps } from \"./FilterHeader\";\n+import FilterHeaderButton from \"./FilterHeaderButton\";\n+import FilterHeaderCategories from \"./FilterHeaderCategories\";\nconst render = (\nprops: ComponentProps = {\n@@ -79,3 +81,52 @@ describe(\"renders correctly\", () => {\nexpect(output).toMatchSnapshot();\n});\n});\n+\n+describe(\"filter buttons\", () => {\n+ it(\"calls onFilterCategoriesPress when users presses categories filter button\", () => {\n+ const mock = jest.fn();\n+ const output = render({\n+ dateFilter: null,\n+ selectedCategories: new Set(),\n+ onFilterCategoriesPress: mock,\n+ onFilterButtonPress: () => {},\n+ onDateFilterButtonPress: () => {},\n+ numTagFiltersSelected: 0\n+ });\n+ output.find(FilterHeaderCategories).prop(\"onFilterPress\")();\n+\n+ expect(mock).toBeCalledWith();\n+ });\n+\n+ it(\"calls onDateFilterButtonPress when users presses date filter button\", () => {\n+ const mock = jest.fn();\n+ const output = render({\n+ dateFilter: null,\n+ selectedCategories: new Set(),\n+ onFilterCategoriesPress: () => {},\n+ onFilterButtonPress: () => {},\n+ onDateFilterButtonPress: mock,\n+ numTagFiltersSelected: 0\n+ });\n+ const button = output.find(FilterHeaderButton).at(0);\n+ button.simulate(\"press\");\n+\n+ expect(mock).toBeCalledWith();\n+ });\n+\n+ it(\"calls onFilterButtonPress when users presses attribute filter button\", () => {\n+ const mock = jest.fn();\n+ const output = render({\n+ dateFilter: null,\n+ selectedCategories: new Set(),\n+ onFilterCategoriesPress: () => {},\n+ onFilterButtonPress: mock,\n+ onDateFilterButtonPress: () => {},\n+ numTagFiltersSelected: 0\n+ });\n+ const button = output.find(FilterHeaderButton).at(1);\n+ button.simulate(\"press\");\n+\n+ expect(mock).toBeCalledWith();\n+ });\n+});\n",
        "sim_msg_1": "add tests for various filter buttons on EventsScreen;",
        "sim_diff_2": "diff --git a/test/dom-to-react.test.js b/test/dom-to-react.test.js @@ -8,6 +8,18 @@ const { render } = require('./helpers');\nconst { html, svg } = require('./data');\ndescribe('domToReact', () => {\n+ it.each([\n+ ['comment', html.comment],\n+ ['doctype', html.doctype]\n+ ])('skips %s', (type, value) => {\n+ expect(domToReact(htmlToDOM(value))).toEqual([]);\n+ });\n+\n+ it('converts \"text\" to \"text\"', () => {\n+ const text = 'text';\n+ expect(domToReact(htmlToDOM(text))).toBe(text);\n+ });\n+\nit('converts single DOM node to React', () => {\nconst reactElement = domToReact(htmlToDOM(html.single));\nexpect(reactElement).toMatchSnapshot();\n",
        "sim_msg_2": "test(dom-to-react): add test cases for text, comment, and doctype",
        "sim_diff_3": "diff --git a/src/components/ProductDetail/ProductDetail.test.js b/src/components/ProductDetail/ProductDetail.test.js import React from \"react\";\nimport renderer from \"react-test-renderer\";\nimport { MuiThemeProvider } from \"material-ui/styles\";\n-\n+import { Provider } from \"mobx-react\";\nimport theme from \"lib/theme/reactionTheme\";\nimport ProductDetail from \"./ProductDetail\";\nimport sampleData from \"./__mocks__/productData.mock\";\n+const uiStore = {\n+ appConfig: {\n+ publicRuntimeConfig: {\n+ externalAssetsUrl: \"\"\n+ }\n+ }\n+};\n+\ntest(\"basic snapshot\", () => {\nconst component = renderer.create((\n<MuiThemeProvider theme={theme}>\n+ <Provider uiStore={uiStore}>\n<ProductDetail catalogProduct={sampleData} />\n+ </Provider>\n</MuiThemeProvider>\n));\nconst tree = component.toJSON();\n",
        "sim_msg_3": "test: add mock uiStore to fix test"
    },
    {
        "org_diff": "diff --git a/packages/react-debug-tools/src/__tests__/ReactDevToolsHooksIntegration-test.js b/a/packages/react-debug-tools/src/__tests__/ReactDevToolsHooksIntegration-test.js @@ -43,7 +43,7 @@ describe('React hooks DevTools integration', () => {\n     const InternalTestUtils = require('internal-test-utils');\n     waitForAll = InternalTestUtils.waitForAll;\n \n-    act = ReactTestRenderer.act;\n+    act = require('internal-test-utils').act;\n   });\n \n   it('should support editing useState hooks', async () => {\n@@ -55,7 +55,12 @@ describe('React hooks DevTools integration', () => {\n       return <div>count:{count}</div>;\n     }\n \n-    const renderer = ReactTestRenderer.create(<MyComponent />);\n+    let renderer;\n+    await act(() => {\n+      renderer = ReactTestRenderer.create(<MyComponent />, {\n+        unstable_isConcurrent: true,\n+      });\n+    });\n     expect(renderer.toJSON()).toEqual({\n       type: 'div',\n       props: {},\n@@ -107,7 +112,12 @@ describe('React hooks DevTools integration', () => {\n       );\n     }\n \n-    const renderer = ReactTestRenderer.create(<MyComponent />);\n+    let renderer;\n+    await act(() => {\n+      renderer = ReactTestRenderer.create(<MyComponent />, {\n+        unstable_isConcurrent: true,\n+      });\n+    });\n     expect(renderer.toJSON()).toEqual({\n       type: 'div',\n       props: {},\n@@ -155,7 +165,12 @@ describe('React hooks DevTools integration', () => {\n       return <div>count:{count}</div>;\n     }\n \n-    const renderer = ReactTestRenderer.create(<MyComponent />);\n+    let renderer;\n+    await act(() => {\n+      renderer = ReactTestRenderer.create(<MyComponent />, {\n+        unstable_isConcurrent: true,\n+      });\n+    });\n     expect(renderer.toJSON()).toEqual({\n       type: 'div',\n       props: {},\n@@ -192,14 +207,17 @@ describe('React hooks DevTools integration', () => {\n     function MyComponent() {\n       return 'Done';\n     }\n-\n-    const renderer = ReactTestRenderer.create(\n-      <div>\n-        <React.Suspense fallback={'Loading'}>\n-          <MyComponent />\n-        </React.Suspense>\n-      </div>,\n-    );\n+    let renderer;\n+    await act(() => {\n+      renderer = ReactTestRenderer.create(\n+        <div>\n+          <React.Suspense fallback={'Loading'}>\n+            <MyComponent />\n+          </React.Suspense>\n+        </div>,\n+        {unstable_isConcurrent: true},\n+      );\n+    });\n     const fiber = renderer.root._currentFiber().child;\n     if (__DEV__) {\n       // First render was locked\n@@ -236,7 +254,6 @@ describe('React hooks DevTools integration', () => {\n     }\n   });\n \n-  // @gate __DEV__\n   it('should support overriding suspense in concurrent mode', async () => {\n     if (__DEV__) {\n       // Lock the first render\n@@ -254,7 +271,7 @@ describe('React hooks DevTools integration', () => {\n             <MyComponent />\n           </React.Suspense>\n         </div>,\n-        {isConcurrent: true},\n+        {unstable_isConcurrent: true},\n       ),\n     );\n ",
        "sim_diff_0": "diff --git a/tests/js/test-utils.js b/tests/js/test-utils.js * External dependencies\n*/\nimport { render } from '@testing-library/react';\n+import { renderHook } from '@testing-library/react-hooks';\nimport invariant from 'invariant';\n/**\n@@ -53,6 +54,37 @@ const customRender = ( ui, options = {} ) => {\n};\n};\n+/**\n+ * Renders a test component that will call the provided callback, including any hooks it calls, every time it renders.\n+ *\n+ * @since n.e.x.t\n+ *\n+ * @param {Function} callback The function that is called each render of the test component. This function should call one or more hooks for testing.\n+ * The props passed into the callback will be the initialProps provided in the options to renderHook,\n+ * unless new props are provided by a subsequent rerender call.\n+ * @param {Object} [options] Optional. An options object to modify the execution of the callback function.\n+ * See the [renderHook Options](@link https://react-hooks-testing-library.com/reference/api#renderhook-options) section for more details.\n+ * @return {Object} Object with `result`, `rerender`, `unmount`, and async utilities. @link https://react-hooks-testing-library.com/reference/api#renderhook-result\n+ */\n+const customRenderHook = (\n+ callback,\n+ {\n+ registry = createTestRegistry(),\n+ ...renderHookOptions\n+ } = {}\n+) => {\n+ const Wrapper = ( { children } ) => (\n+ <RegistryProvider value={ registry }>\n+ { children }\n+ </RegistryProvider>\n+ );\n+\n+ return {\n+ ...renderHook( callback, { wrapper: Wrapper, ...renderHookOptions } ),\n+ registry,\n+ };\n+};\n+\n// Export our own test utils from this file.\nexport * from 'tests/js/utils';\n@@ -61,3 +93,5 @@ export * from '@testing-library/react';\n// Override @testing-library/react's render method with our own.\nexport { customRender as render };\n+// Override @testing-library/react-hooks's renderHook method with our own.\n+export { customRenderHook as renderHook };\n",
        "sim_msg_0": "Extend renderHook in test-utils.",
        "sim_diff_1": "diff --git a/tests/js/test-utils.js b/tests/js/test-utils.js @@ -64,6 +64,7 @@ const customRender = ( ui, options = {} ) => {\n* unless new props are provided by a subsequent rerender call.\n* @param {Object} [options] Optional. An options object to modify the execution of the callback function.\n* See the [renderHook Options](@link https://react-hooks-testing-library.com/reference/api#renderhook-options) section for more details.\n+ * @param {Object} [options.registry] Registry to use with the RegistryProvider. Default is a new test registry.\n* @return {Object} Object with `result`, `rerender`, `unmount`, and async utilities. @link https://react-hooks-testing-library.com/reference/api#renderhook-result\n*/\nconst customRenderHook = (\n",
        "sim_msg_1": "Add missing param documentation.",
        "sim_diff_2": "diff --git a/src/screens/EventsScreen/FilterHeader.test.js b/src/screens/EventsScreen/FilterHeader.test.js @@ -3,6 +3,8 @@ import React from \"react\";\nimport { shallow } from \"enzyme\";\nimport FilterHeader from \"./FilterHeader\";\nimport type { Props as ComponentProps } from \"./FilterHeader\";\n+import FilterHeaderButton from \"./FilterHeaderButton\";\n+import FilterHeaderCategories from \"./FilterHeaderCategories\";\nconst render = (\nprops: ComponentProps = {\n@@ -79,3 +81,52 @@ describe(\"renders correctly\", () => {\nexpect(output).toMatchSnapshot();\n});\n});\n+\n+describe(\"filter buttons\", () => {\n+ it(\"calls onFilterCategoriesPress when users presses categories filter button\", () => {\n+ const mock = jest.fn();\n+ const output = render({\n+ dateFilter: null,\n+ selectedCategories: new Set(),\n+ onFilterCategoriesPress: mock,\n+ onFilterButtonPress: () => {},\n+ onDateFilterButtonPress: () => {},\n+ numTagFiltersSelected: 0\n+ });\n+ output.find(FilterHeaderCategories).prop(\"onFilterPress\")();\n+\n+ expect(mock).toBeCalledWith();\n+ });\n+\n+ it(\"calls onDateFilterButtonPress when users presses date filter button\", () => {\n+ const mock = jest.fn();\n+ const output = render({\n+ dateFilter: null,\n+ selectedCategories: new Set(),\n+ onFilterCategoriesPress: () => {},\n+ onFilterButtonPress: () => {},\n+ onDateFilterButtonPress: mock,\n+ numTagFiltersSelected: 0\n+ });\n+ const button = output.find(FilterHeaderButton).at(0);\n+ button.simulate(\"press\");\n+\n+ expect(mock).toBeCalledWith();\n+ });\n+\n+ it(\"calls onFilterButtonPress when users presses attribute filter button\", () => {\n+ const mock = jest.fn();\n+ const output = render({\n+ dateFilter: null,\n+ selectedCategories: new Set(),\n+ onFilterCategoriesPress: () => {},\n+ onFilterButtonPress: mock,\n+ onDateFilterButtonPress: () => {},\n+ numTagFiltersSelected: 0\n+ });\n+ const button = output.find(FilterHeaderButton).at(1);\n+ button.simulate(\"press\");\n+\n+ expect(mock).toBeCalledWith();\n+ });\n+});\n",
        "sim_msg_2": "add tests for various filter buttons on EventsScreen;",
        "sim_diff_3": "diff --git a/tests/js/test-utils.js b/tests/js/test-utils.js * External dependencies\n*/\nimport { render } from '@testing-library/react';\n-import { renderHook } from '@testing-library/react-hooks';\n+import { renderHook, act as actHook } from '@testing-library/react-hooks';\nimport invariant from 'invariant';\n/**\n@@ -99,3 +99,5 @@ export * from '@testing-library/react';\nexport { customRender as render };\n// Override @testing-library/react-hooks's renderHook method with our own.\nexport { customRenderHook as renderHook };\n+// Hooks need to use the `act` from @testing-library/react-hooks.\n+export { actHook };\n",
        "sim_msg_3": "Export hooks variant of act from test-utils."
    },
    {
        "org_diff": "diff --git a/packages/react-debug-tools/src/__tests__/ReactHooksInspection-test.js b/a/packages/react-debug-tools/src/__tests__/ReactHooksInspection-test.js @@ -584,24 +584,29 @@ describe('ReactHooksInspection', () => {\n       return <div>{value}</div>;\n     }\n     const tree = ReactDebugTools.inspectHooks(Foo, {});\n-    expect(normalizeSourceLoc(tree)).toMatchInlineSnapshot(`\n-      [\n-        {\n-          \"debugInfo\": null,\n-          \"hookSource\": {\n-            \"columnNumber\": 0,\n-            \"fileName\": \"**\",\n-            \"functionName\": \"Foo\",\n-            \"lineNumber\": 0,\n-          },\n-          \"id\": null,\n-          \"isStateEditable\": false,\n-          \"name\": \"Unresolved\",\n-          \"subHooks\": [],\n-          \"value\": Promise {},\n+    const results = normalizeSourceLoc(tree);\n+    expect(results).toHaveLength(1);\n+    expect(results[0]).toMatchInlineSnapshot(\n+      {\n+        value: expect.any(Promise),\n+      },\n+      `\n+      {\n+        \"debugInfo\": null,\n+        \"hookSource\": {\n+          \"columnNumber\": 0,\n+          \"fileName\": \"**\",\n+          \"functionName\": \"Foo\",\n+          \"lineNumber\": 0,\n         },\n-      ]\n-    `);\n+        \"id\": null,\n+        \"isStateEditable\": false,\n+        \"name\": \"Unresolved\",\n+        \"subHooks\": [],\n+        \"value\": Any<Promise>,\n+      }\n+    `,\n+    );\n   });\n \n   describe('useDebugValue', () => {",
        "sim_diff_0": "diff --git a/src/components/ProductDetail/ProductDetail.test.js b/src/components/ProductDetail/ProductDetail.test.js @@ -2,9 +2,10 @@ import React from \"react\";\nimport renderer from \"react-test-renderer\";\nimport { shallow } from \"enzyme\";\nimport ProductDetail from \"./ProductDetail\";\n+import sampleData from \"./sampleData\";\ntest(\"basic snapshot\", () => {\n- const component = renderer.create(shallow(<ProductDetail />).get(0));\n+ const component = renderer.create(shallow(<ProductDetail catalogProduct={sampleData} />).get(0));\nconst tree = component.toJSON();\nexpect(tree).toMatchSnapshot();\n});\n",
        "sim_msg_0": "test: update test to use sample data",
        "sim_diff_1": "diff --git a/tests/js/test-utils.js b/tests/js/test-utils.js * External dependencies\n*/\nimport { render } from '@testing-library/react';\n-import { renderHook } from '@testing-library/react-hooks';\n+import { renderHook, act as actHook } from '@testing-library/react-hooks';\nimport invariant from 'invariant';\n/**\n@@ -99,3 +99,5 @@ export * from '@testing-library/react';\nexport { customRender as render };\n// Override @testing-library/react-hooks's renderHook method with our own.\nexport { customRenderHook as renderHook };\n+// Hooks need to use the `act` from @testing-library/react-hooks.\n+export { actHook };\n",
        "sim_msg_1": "Export hooks variant of act from test-utils.",
        "sim_diff_2": "diff --git a/tests/js/test-utils.js b/tests/js/test-utils.js /**\n* External dependencies\n*/\n-import { render } from '@testing-library/react';\n+import { render, act } from '@testing-library/react';\nimport { renderHook, act as actHook } from '@testing-library/react-hooks';\nimport { Router } from 'react-router-dom';\nimport invariant from 'invariant';\n@@ -16,7 +16,7 @@ import { RegistryProvider } from '@wordpress/data';\n* Internal dependencies\n*/\nimport FeaturesProvider from '../../assets/js/components/FeaturesProvider';\n-import { createTestRegistry } from './utils';\n+import { createTestRegistry, createWaitForRegistry } from './utils';\n// Override `@testing-library/react`'s render method with one that includes\n// our data store.\n@@ -67,6 +67,8 @@ const customRender = ( ui, options = {} ) => {\n);\n}\n+ const waitForRegistry = createWaitForRegistry( registry );\n+\nconst result = render( ui, { wrapper: Wrapper, ...renderOptions } );\nconst {\ngetByTestId: getByTestID, // eslint-disable-line sitekit/acronym-case\n@@ -87,6 +89,7 @@ const customRender = ( ui, options = {} ) => {\nqueryByTestID,\nregistry,\nhistory,\n+ waitForRegistry: () => act( waitForRegistry ),\n};\n};\n",
        "sim_msg_2": "Add waitForRegistry as return from custom render.",
        "sim_diff_3": "diff --git a/src/Input/Input.spec.js b/src/Input/Input.spec.js import React from 'react';\nimport { assert } from 'chai';\nimport { spy } from 'sinon';\n-import { createShallow } from 'src/test-utils';\n+import { createShallow, createMount } from 'src/test-utils';\nimport Input, { styleSheet } from './Input';\ndescribe('<Input />', () => {\n@@ -218,4 +218,55 @@ describe('<Input />', () => {\n});\n});\n});\n+\n+ describe('componentDidMount', () => {\n+ let mount;\n+ let wrapper;\n+ let instance;\n+\n+ before(() => {\n+ mount = createMount();\n+ wrapper = mount(<Input />);\n+ instance = wrapper.instance();\n+ });\n+\n+ after(() => {\n+ mount.cleanUp();\n+ });\n+\n+ beforeEach(() => {\n+ instance.checkDirty = spy();\n+ });\n+\n+ it('should not call checkDirty if controlled', () => {\n+ instance.isControlled = () => true;\n+ instance.componentDidMount();\n+ assert.strictEqual(instance.checkDirty.callCount, 0);\n+ });\n+\n+ it('should call checkDirty if controlled', () => {\n+ instance.isControlled = () => false;\n+ instance.componentDidMount();\n+ assert.strictEqual(instance.checkDirty.callCount, 1);\n+ });\n+\n+ it('should call checkDirty with input value', () => {\n+ instance.isControlled = () => false;\n+ instance.input = 'woof';\n+ instance.componentDidMount();\n+ assert.strictEqual(instance.checkDirty.calledWith(instance.input), true);\n+ });\n+\n+ it('should call or not call checkDirty consistently', () => {\n+ instance.isControlled = () => true;\n+ instance.componentDidMount();\n+ assert.strictEqual(instance.checkDirty.callCount, 0);\n+ instance.isControlled = () => false;\n+ instance.componentDidMount();\n+ assert.strictEqual(instance.checkDirty.callCount, 1);\n+ instance.isControlled = () => true;\n+ instance.componentDidMount();\n+ assert.strictEqual(instance.checkDirty.callCount, 1);\n+ });\n+ });\n});\n",
        "sim_msg_3": "Add tests for componentDidMount() for <Input />"
    },
    {
        "org_diff": "diff --git a/packages/react-devtools-inline/__tests__/__e2e__/components.test.js b/a/packages/react-devtools-inline/__tests__/__e2e__/components.test.js @@ -59,7 +59,7 @@ test.describe('Components', () => {\n     const isEditableValue = semver.gte(config.use.react_version, '16.8.0');\n \n     // Then read the inspected values.\n-    const [propName, propValue, sourceText] = await page.evaluate(\n+    const [propName, propValue] = await page.evaluate(\n       isEditable => {\n         const {createTestNameSelector, findAllNodes} =\n           window.REACT_DOM_DEVTOOLS;\n@@ -85,21 +85,41 @@ test.describe('Components', () => {\n           createTestNameSelector('InspectedElementPropsTree'),\n           createTestNameSelector(selectorValue),\n         ])[0];\n-        const source = findAllNodes(container, [\n-          createTestNameSelector('InspectedElementView-Source'),\n-        ])[0];\n         const value = isEditable.value\n           ? valueElement.value\n           : valueElement.innerText;\n \n-        return [name, value, source.innerText];\n+        return [name, value];\n       },\n       {name: isEditableName, value: isEditableValue}\n     );\n \n     expect(propName).toBe('label');\n     expect(propValue).toBe('\"one\"');\n-    expect(sourceText).toMatch(/e2e-app[a-zA-Z]*\\.js/);\n+  });\n+\n+  test('Should allow inspecting source of the element', async () => {\n+    // Source inspection is available only in modern renderer.\n+    runOnlyForReactRange('>=16.8');\n+\n+    // Select the first list item in DevTools.\n+    await devToolsUtils.selectElement(page, 'ListItem', 'List\\nApp');\n+\n+    // Then read the inspected values.\n+    const sourceText = await page.evaluate(() => {\n+      const {createTestNameSelector, findAllNodes} = window.REACT_DOM_DEVTOOLS;\n+      const container = document.getElementById('devtools');\n+\n+      const source = findAllNodes(container, [\n+        createTestNameSelector('InspectedElementView-Source'),\n+      ])[0];\n+\n+      return source.innerText;\n+    });\n+\n+    // If React version is specified, the e2e-regression.html page will be used\n+    // If not, then e2e.html, see playwright.config.js, how url is constructed\n+    expect(sourceText).toMatch(/e2e-app[\\-a-zA-Z]*\\.js/);\n   });\n \n   test('should allow props to be edited', async () => {",
        "sim_diff_0": "diff --git a/semcore/utils/__tests__/index.test.tsx b/semcore/utils/__tests__/index.test.tsx import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { testing, snapshot } from '@semcore/jest-preset-ui';\n-\n-const { cleanup } = testing;\n-\nimport isNode from '../src/isNode';\nimport compose from '../src/compose';\nimport useCss from '../src/use/useCss';\n@@ -11,6 +8,9 @@ import resolveColor, { shade, opacity } from '../src/color';\nimport { interpolate } from '../src/enhances/i18nEnhance';\nimport assignProps, { assignHandlers } from '../src/assignProps';\nimport reactToText from '../src/reactToText';\n+import { getRef, setRef, getNodeByRef } from '../src/ref';\n+\n+const { cleanup } = testing;\ndescribe('Utils CSS in JS', () => {\nafterEach(cleanup);\n@@ -421,3 +421,53 @@ describe('Utils reactToText', () => {\n).toBe('multi component');\n});\n});\n+\n+describe('Utils ref', () => {\n+ afterEach(cleanup);\n+\n+ test('[getRef] support element', () => {\n+ const div = document.createElement('div');\n+ expect(getRef(div)).toBe(div);\n+ });\n+\n+ test('[getRef] support ref function', () => {\n+ const div = document.createElement('div');\n+ const ref = React.createRef<HTMLDivElement>();\n+ // @ts-ignore\n+ ref.current = div;\n+ expect(getRef(ref)).toBe(div);\n+ });\n+\n+ test('[getRef] support unknown', () => {\n+ expect(getRef(undefined)).toBe(null);\n+ });\n+\n+ test('[setRef] support ref', () => {\n+ const ref = React.createRef<HTMLDivElement>();\n+ const div = document.createElement('div');\n+ setRef(ref, div);\n+ expect(ref.current).toBe(div);\n+ });\n+\n+ test('[setRef] support function', () => {\n+ const fn = jest.fn();\n+ const div = document.createElement('div');\n+ setRef(fn, div);\n+ expect(fn).toHaveBeenCalledWith(div);\n+ });\n+\n+ test('[getNodeByRef] support function', () => {\n+ const div = document.createElement('div');\n+ const fn = jest.fn(() => div);\n+ // setRef(fn, div)\n+ expect(getNodeByRef(fn)).toBe(div);\n+ });\n+\n+ test('[getNodeByRef] support ref', () => {\n+ const div = document.createElement('div');\n+ const ref = React.createRef<HTMLDivElement>();\n+ // @ts-ignore\n+ ref.current = div;\n+ expect(getNodeByRef(ref)).toBe(div);\n+ });\n+});\n",
        "sim_msg_0": "[utils] Added test for Ref utils",
        "sim_diff_1": "diff --git a/renderer/components/__tests__/Sidebar.test.js b/renderer/components/__tests__/Sidebar.test.js @@ -33,46 +33,28 @@ const renderComponent = (component, locale = 'en', messages = English) => {\n}\ndescribe('Tests for Sidebar component', () => {\n- afterEach(() => {\n- cleanup()\n- })\n- test('Displays the correct version', async () => {\n+ beforeEach(() => {\nrenderComponent(\n<Sidebar>\n<></>\n</Sidebar>\n)\n- const versionNumber = screen.getByTestId('sidebar-version-number')\n- expect(versionNumber.innerHTML).toMatch(version)\n- })\n-\n- test('Displays child elements', async () => {\n- renderComponent(\n- <Sidebar>\n- <p data-testid=\"test-paragraph\">Test paragraph</p>\n- </Sidebar>\n- )\n- expect(screen.getByTestId('test-paragraph').innerHTML).toBe(\n- 'Test paragraph'\n- )\n})\n+ afterEach(() => {\n+ cleanup()\n+ jest.clearAllMocks()\n})\n-\n-describe('Sidebar NavItems push the router to correct path', () => {\n- beforeEach(() => {\n+ test('Displays the correct version', async () => {\nrenderComponent(\n<Sidebar>\n<></>\n</Sidebar>\n)\n- })\n-\n- afterEach(() => {\n- cleanup()\n- jest.clearAllMocks()\n+ const versionNumber = screen.getByTestId('sidebar-version-number')\n+ expect(versionNumber.innerHTML).toMatch(version)\n})\ntest('Clicking on Dashboard NavItem calls pushes router to /dashboard', async () => {\n",
        "sim_msg_1": "Removed unnecessary tests from Sidebar.test.js",
        "sim_diff_2": "diff --git a/tests/js/test-utils.js b/tests/js/test-utils.js @@ -26,9 +26,12 @@ TestProviders.propTypes = {\n};\n// custom render with the test provider component\n-export const testRender = ( ui, options ) => {\n+const customRender = ( ui, options ) => {\nreturn render( ui, { wrapper: TestProviders, ...options } );\n};\n// re-export testing library\nexport * from '@testing-library/react';\n+\n+// override render method\n+export { customRender as render };\n",
        "sim_msg_2": "Export customRender as render.",
        "sim_diff_3": "diff --git a/renderer/components/onboard/__tests__/QuizSteps.test.js b/renderer/components/onboard/__tests__/QuizSteps.test.js @@ -6,7 +6,6 @@ import { screen, render, fireEvent, cleanup } from \"@testing-library/react\";\nimport { theme } from \"ooni-components\";\nimport { ThemeProvider } from \"styled-components\";\nimport { IntlProvider, FormattedMessage } from \"react-intl\";\n-import renderer from \"react-test-renderer\";\nimport English from \"../../../../lang/en.json\";\nimport QuizSteps from \"../QuizSteps\";\n@@ -41,6 +40,10 @@ describe(\"Tests for QuizSteps\", () => {\n)\n})\n+ afterEach(() => {\n+ onQuizComplete.mockClear()\n+ })\n+\ntest(\"User Story with correct answers\", async () => {\nconst yesButton1 = screen.getByText(English['Onboarding.PopQuiz.True'])\nfireEvent.click(yesButton1)\n@@ -50,10 +53,34 @@ describe(\"Tests for QuizSteps\", () => {\nexpect(heading).toBeInTheDocument()\nfireEvent.click(yesButton2)\nresolve()\n- }, 1500))\n+ }, 1650))\n+ await new Promise(resolve => setTimeout(() => {\n+ expect(onQuizComplete).toHaveBeenCalledTimes(1)\n+ resolve()\n+ }, 1650))\n+ });\n+\n+ test(\"User Story with incorrect answers\", async () => {\n+ const falseButton1 = screen.getByText(English['Onboarding.PopQuiz.False'])\n+ fireEvent.click(falseButton1)\n+ await new Promise(resolve => setTimeout(() => {\n+ const warningParagraph = screen.getByText(English['Onboarding.PopQuiz.1.Wrong.Paragraph'])\n+ const continueButton = screen.getByText(English['Onboarding.PopQuiz.Wrong.Button.Continue'])\n+ expect(warningParagraph).toBeInTheDocument()\n+ fireEvent.click(continueButton)\n+ resolve()\n+ }, 1650))\n+ const quizHeading2 = await screen.findByText(English['Onboarding.PopQuiz.2.Title'])\n+ expect(quizHeading2).toBeInTheDocument()\n+ const falseButton2 = screen.getByText(English['Onboarding.PopQuiz.False'])\n+ fireEvent.click(falseButton2)\nawait new Promise(resolve => setTimeout(() => {\n+ const warningParagraph = screen.getByText(English['Onboarding.PopQuiz.2.Wrong.Paragraph'])\n+ const continueButton = screen.getByText(English['Onboarding.PopQuiz.Wrong.Button.Continue'])\n+ expect(warningParagraph).toBeInTheDocument()\n+ fireEvent.click(continueButton)\nexpect(onQuizComplete).toHaveBeenCalledTimes(1)\nresolve()\n- }, 1500))\n+ }, 1650))\n});\n});\n",
        "sim_msg_3": "Test for incorrect answers done"
    },
    {
        "org_diff": "diff --git a/README.md b/a/README.md @@ -36,7 +36,7 @@ The documentation is divided into several sections:\n * [Where to Get Support](https://react.dev/community)\n * [Contributing Guide](https://legacy.reactjs.org/docs/how-to-contribute.html)\n \n-You can improve it by sending pull requests to [this repository](https://github.com/reactjs/reactjs.org).\n+You can improve it by sending pull requests to [this repository](https://github.com/reactjs/react.dev).\n \n ## Examples\n ",
        "sim_diff_0": "diff --git a/CONTRIBUTING.md b/CONTRIBUTING.md @@ -11,22 +11,22 @@ Please read https://reactjs.org/ and the Code of Conduct before opening an issue\n- [Development](#development)\n- [Hacking](#hacking)\n-<a name=\"bug\"/>\n+<a name=\"bug\"/></a>\n## Think You Found a Bug?\nPlease provide a test case of some sort. Best is a pull request with a failing test. Next is a link to CodePen/JS Bin or repository that illustrates the bug. Finally, some copy/pastable code is acceptable.\n-<a name=\"api\"/>\n+<a name=\"api\"/></a>\n## Proposing New or Changed API?\nPlease provide thoughtful comments and some sample code. Proposals without substance will be closed.\n-<a name=\"attention\"/>\n+<a name=\"attention\"/></a>\n## Issue Not Getting Attention?\nIf you need a bug fixed and nobody is fixing it, it is your responsibility to fix it. Issues with no activity for 30 days may be closed.\n-<a name=\"pr\"/>\n+<a name=\"pr\"/></a>\n## Making a Pull Request?\nPull requests need only the :+1: of two or more collaborators to be merged; when the PR author is a collaborator, that counts as one.\n",
        "sim_msg_0": "close unclosed anchor tags",
        "sim_diff_1": "diff --git a/README.md b/README.md @@ -271,7 +271,7 @@ $ git push --follow-tags && npm publish\n- [Contributors](https://github.com/remarkablemark/html-react-parser/graphs/contributors)\n- [html-dom-parser](https://github.com/remarkablemark/html-dom-parser)\n-- [react-dom-core](https://github.com/remarkablemark/react-dom-core)\n+- [react-property](https://github.com/remarkablemark/react-dom-core/tree/master/packages/react-property)\n- [style-to-object](https://github.com/remarkablemark/style-to-object)\n## License\n",
        "sim_msg_1": "docs(readme): replace `react-dom-core` link with `react-property`",
        "sim_diff_2": "diff --git a/README.md b/README.md @@ -50,7 +50,39 @@ Enjoy this library? Try them all! [React Query](https://github.com/tannerlinsley\nVisit our new documentation site at https://react-table.js.org\n-## Sponsors\n+## React-Table used in Products\n+\n+The examples below are built by our partners from Creative Tim (https://creative-tim.com/?ref=react-table.js.org) and demonstrate how React Table can be integrated in real world applications. There are many examples that you can play with and each premium product comes with a free & open source version, too!\n+\n+<table>\n+ <tbody>\n+ <tr>\n+ <td>\n+ <a href='https://www.creative-tim.com/product/material-dashboard-pro-react?ref=react-table.js.org'>\n+ <div>Material Dashboard PRO React</div>\n+ <img src=\"https://s3.amazonaws.com/creativetim_bucket/products/80/original/opt_mdp_react_thumbnail.jpg?1522160852\" />\n+ </a>\n+ <div>Price: 59$</div>\n+ </td>\n+ <td>\n+ <a href='https://www.creative-tim.com/product/black-dashboard-pro-react?ref=react-table.js.org'>\n+ <div>Black Dashboard PRO React</div>\n+ <img src=\"https://s3.amazonaws.com/creativetim_bucket/products/138/original/opt_bdp_thumbnail.jpg?1547454513\" />\n+ </a>\n+ <div>Price: 59$</div>\n+ </td>\n+ <td>\n+ <a href='https://www.creative-tim.com/product/now-ui-dashboard-pro-react?ref=react-table.js.org'>\n+ <div>Now UI Dashboard PRO React</div>\n+ <img src=\"https://s3.amazonaws.com/creativetim_bucket/products/73/original/opt_nudp_react_thumbnail.jpg?1518533306\" />\n+ </a>\n+ <div>Price: 59$</div>\n+ </td>\n+ </tr>\n+ </tbody>\n+</table>\n+\n+## Github Sponsors\nThis library is being built and maintained by me, @tannerlinsley and I am always in need of more support to keep this project afloat. If you would like to get additional support, add your logo or name on this README, or simply just contribute to my open source Sponsorship goal, [visit my Github Sponsors page!](https://github.com/sponsors/tannerlinsley/)\n",
        "sim_msg_2": "Add use in products section",
        "sim_diff_3": "diff --git a/README.md b/README.md [![NPM version](https://img.shields.io/npm/v/html-react-parser.svg)](https://www.npmjs.com/package/html-react-parser)\n[![Build Status](https://github.com/remarkablemark/html-react-parser/workflows/build/badge.svg?branch=master)](https://github.com/remarkablemark/html-react-parser/actions?query=workflow%3Abuild)\n-[![Coverage Status](https://coveralls.io/repos/github/remarkablemark/html-react-parser/badge.svg?branch=master)](https://coveralls.io/github/remarkablemark/html-react-parser?branch=master)\n+[![codecov](https://codecov.io/gh/remarkablemark/html-react-parser/branch/master/graph/badge.svg?token=wosFd1DBIR)](https://codecov.io/gh/remarkablemark/html-react-parser)\n[![Dependency status](https://david-dm.org/remarkablemark/html-react-parser.svg)](https://david-dm.org/remarkablemark/html-react-parser)\n[![NPM downloads](https://img.shields.io/npm/dm/html-react-parser.svg?style=flat-square)](https://www.npmjs.com/package/html-react-parser)\n[![Discord](https://img.shields.io/discord/422421589582282752.svg?label=&logo=discord&logoColor=ffffff&color=7389D8&labelColor=6A7EC2)](https://discord.gg/njExwXdrRJ)\n@@ -477,8 +477,8 @@ Then update your Webpack config to:\nmodule.exports = {\n// ...\nresolve: {\n- mainFields: ['browser', 'main', 'module'],\n- },\n+ mainFields: ['browser', 'main', 'module']\n+ }\n};\n```\n",
        "sim_msg_3": "docs(readme): add Codecov badge to README.md"
    },
    {
        "org_diff": "diff --git a/packages/react-reconciler/src/ReactChildFiber.js b/a/packages/react-reconciler/src/ReactChildFiber.js @@ -438,7 +438,6 @@ function createChildReconciler(\n   }\n \n   function mapRemainingChildren(\n-    returnFiber: Fiber,\n     currentFirstChild: Fiber,\n   ): Map<string | number, Fiber> {\n     // Add the remaining children to a temporary map so that we can find them by\n@@ -1194,7 +1193,7 @@ function createChildReconciler(\n     }\n \n     // Add all children to a key map for quick lookups.\n-    const existingChildren = mapRemainingChildren(returnFiber, oldFiber);\n+    const existingChildren = mapRemainingChildren(oldFiber);\n \n     // Keep scanning and use the map to restore deleted items as moves.\n     for (; newIdx < newChildren.length; newIdx++) {\n@@ -1404,7 +1403,7 @@ function createChildReconciler(\n     }\n \n     // Add all children to a key map for quick lookups.\n-    const existingChildren = mapRemainingChildren(returnFiber, oldFiber);\n+    const existingChildren = mapRemainingChildren(oldFiber);\n \n     // Keep scanning and use the map to restore deleted items as moves.\n     for (; !step.done; newIdx++, step = newChildren.next()) {",
        "sim_diff_0": "diff --git a/src/module/actor/actor-inventory.js b/src/module/actor/actor-inventory.js @@ -84,12 +84,7 @@ export async function addItemToActorAsync(targetActor, item, quantity) {\n}\nexport function getChildItems(containerId, actor) {\n- let childItems = [];\n- for (let item of actor.items) {\n- if (item.data.data.containerId === containerId) {\n- childItems.push(item);\n- }\n- }\n+ let childItems = actor.items.filter(x => x.data.data.containerId === containerId);\nreturn childItems;\n}\n@@ -107,33 +102,38 @@ export async function moveItemBetweenActorsAsync(sourceActor, item, targetActor,\nawait tryAddItemToContainerAsync(targetItem, targetActor, () => { return item; });\nreturn item;\n} else {\n- const sourceItemQuantity = item.data.data.quantity;\n- await removeItemFromActorAsync(sourceActor, item, sourceItemQuantity);\n- let itemInTargetActor = await addItemToActorAsync(targetActor, item, sourceItemQuantity);\n- await tryAddItemToContainerAsync(targetItem, targetActor, () => { return itemInTargetActor; });\n-\n- let children = getChildItems(item._id, sourceActor);\n+ let itemsToMove = [{container: targetItem, items: [item]}];\n+ let firstMovedItem = null;\n+ do {\n+ let pair = itemsToMove.shift();\n+ let bulkAdd = [];\n+ for (let itemToMove of pair.items) {\n+ let children = getChildItems(itemToMove._id, sourceActor);\nif (children) {\n- for (let child of children) {\n- await recursiveChildMoveAsync(sourceActor, targetActor, child, itemInTargetActor);\n+ const sourceItemQuantity = itemToMove.data.data.quantity;\n+ let itemInTargetActor = await addItemToActorAsync(targetActor, itemToMove, sourceItemQuantity);\n+ await tryAddItemToContainerAsync(pair.container, targetActor, () => { return itemInTargetActor; });\n+\n+ await removeItemFromActorAsync(sourceActor, itemToMove, sourceItemQuantity);\n+\n+ itemsToMove.push({container: itemInTargetActor, items: children});\n+\n+ firstMovedItem = firstMovedItem || itemInTargetActor;\n+ } else {\n+ bulkAdd.push(itemToMove);\n}\n}\n- return itemInTargetActor;\n+ if (bulkAdd.length > 0) {\n+ let result = await targetActor.createOwnedItem(bulkAdd);\n+ if (result && result.length > 0) {\n+ firstMovedItem = firstMovedItem || result[0];\n}\n+ await sourceActor.deleteOwnedItem(bulkAdd);\n}\n+ } while (itemsToMove.length > 0);\n-async function recursiveChildMoveAsync(sourceActor, targetActor, sourceItem, targetContainer) {\n- const itemQuantity = sourceItem.data.data.quantity;\n- await removeItemFromActorAsync(sourceActor, sourceItem, itemQuantity);\n- let itemInTargetActor = await addItemToActorAsync(targetActor, sourceItem, itemQuantity);\n- await tryAddItemToContainerAsync(targetContainer, targetActor, () => { return itemInTargetActor; });\n-\n- let children = getChildItems(sourceItem._id, sourceActor);\n- if (children) {\n- for (let child of children) {\n- await recursiveChildMoveAsync(sourceActor, targetActor, child, itemInTargetActor);\n- }\n+ return firstMovedItem;\n}\n}\n",
        "sim_msg_0": "* Removed recursive iteration.",
        "sim_diff_1": "diff --git a/src/react/get-children.js b/src/react/get-children.js @@ -5,7 +5,7 @@ function processChildren(c) {\nReact.Children.toArray(c).forEach((child) => {\nif (child.type && child.type.displayName === 'SwiperSlide') {\nslides.push(child);\n- } else if (child.props.children) {\n+ } else if (child.props && child.props.children) {\nprocessChildren(child.props.children).forEach((slide) => slides.push(slide));\n}\n});\n@@ -27,7 +27,7 @@ function getChildren(c) {\nslides.push(child);\n} else if (child.props && child.props.slot && slots[child.props.slot]) {\nslots[child.props.slot].push(child);\n- } else if (child.props.children) {\n+ } else if (child.props && child.props.children) {\nconst foundSlides = processChildren(child.props.children);\nif (foundSlides.length > 0) {\nfoundSlides.forEach((slide) => slides.push(slide));\n",
        "sim_msg_1": "double check for child.props",
        "sim_diff_2": "diff --git a/src/react/get-children.js b/src/react/get-children.js import React from 'react';\n-function getChildren(children) {\n+function processChildren(c) {\n+ const slides = [];\n+ React.Children.toArray(c).forEach((child) => {\n+ if (child.type && child.type.displayName === 'SwiperSlide') {\n+ slides.push(child);\n+ } else if (child.props.children) {\n+ processChildren(child.props.children).forEach((slide) => slides.push(slide));\n+ }\n+ });\n+ return slides;\n+}\n+\n+function getChildren(c) {\nconst slides = [];\nconst slots = {\n@@ -9,20 +21,24 @@ function getChildren(children) {\n'wrapper-start': [],\n'wrapper-end': [],\n};\n- function processChildren(c) {\n+\nReact.Children.toArray(c).forEach((child) => {\nif (child.type && child.type.displayName === 'SwiperSlide') {\nslides.push(child);\n} else if (child.props && child.props.slot && slots[child.props.slot]) {\nslots[child.props.slot].push(child);\n} else if (child.props.children) {\n- processChildren(child.props.children);\n+ const foundSlides = processChildren(child.props.children);\n+ if (foundSlides.length > 0) {\n+ foundSlides.forEach((slide) => slides.push(slide));\n} else {\nslots['container-end'].push(child);\n}\n- });\n+ } else {\n+ slots['container-end'].push(child);\n}\n- processChildren(children);\n+ });\n+\nreturn { slides, slots };\n}\n",
        "sim_msg_2": "refactor the getChildren and processChildren functions to account for descendents that don't have SwiperSlide components",
        "sim_diff_3": "diff --git a/javascript/utils/index.js b/javascript/utils/index.js @@ -58,6 +58,11 @@ export function cloneReactChildrenWithProps (children, propsToAdd = {}) {\nif (!children) {\nreturn null;\n}\n+\n+ if (!Array.isArray(children)) {\n+ children = [children];\n+ }\n+\nconst filteredChildren = children.filter((child) => !!child); // filter out falsy children, since some can be null\nreturn React.Children.map(filteredChildren, (child) => React.cloneElement(child, propsToAdd));\n}\n",
        "sim_msg_3": "Updated cloneReactChildrenWithProps to handle single child"
    },
    {
        "org_diff": "diff --git a/.circleci/config.yml b/a/.circleci/config.yml @@ -97,6 +97,16 @@ jobs:\n       - setup_node_modules\n       - run: node ./scripts/tasks/flow-ci\n \n+\n+  yarn_flags:\n+    docker: *docker\n+    environment: *environment\n+\n+    steps:\n+      - checkout\n+      - setup_node_modules\n+      - run: yarn flags\n+\n   scrape_warning_messages:\n     docker: *docker\n     environment: *environment\n@@ -447,6 +457,11 @@ workflows:\n   build_and_test:\n     unless: << pipeline.parameters.prerelease_commit_sha >>\n     jobs:\n+      - yarn_flags:\n+          filters:\n+            branches:\n+              ignore:\n+                - builds/facebook-www\n       - yarn_flow:\n           filters:\n             branches:",
        "sim_diff_0": "diff --git a/.circleci/config.yml b/.circleci/config.yml @@ -100,8 +100,8 @@ jobs:\ndocker: [<<: *node12]\nsteps:\n- checkout\n- - <<: *install\n- - run: yarn ci:release\n+ # - <<: *install\n+ # - run: yarn ci:release\nworkflows:\nversion: 2\n",
        "sim_msg_0": "chore: disables release as a part of CI",
        "sim_diff_1": "diff --git a/.circleci/config.yml b/.circleci/config.yml @@ -19,6 +19,15 @@ defaults: &defaults\n- image: circleci/node:8-stretch\njobs:\n+ local_lint:\n+ <<: *defaults\n+ steps:\n+ - checkout\n+ - run:\n+ name: Run lint\n+ command: |\n+ yarn run lint\n+\ndocker-build:\n<<: *defaults\nsteps:\n@@ -227,4 +236,4 @@ workflows:\n- docker-push\nfilters:\nbranches:\n- only: /^master$/\n+# only: /^master$/\n",
        "sim_msg_1": "test running lint before the docker build step",
        "sim_diff_2": "diff --git a/.circleci/config.yml b/.circleci/config.yml @@ -35,9 +35,12 @@ step-build: &step-build\nstep-e2e: &step-e2e\nrun: yarn e2e\n-filter-tag-only: &filter-tag-only\n+filter-tag: &filter-tag\ntags:\nonly: /^v.*/\n+\n+filter-tag-only: &filter-tag-only\n+ <<: *filter-tag\nbranches:\nignore: /.*/\n@@ -80,6 +83,7 @@ jobs:\n- checkout\n- *step-restore-cache\n- *step-yarn-install\n+ - *step-build\n- run: yarn release\ndeploy-linux:\ndocker:\n@@ -88,17 +92,24 @@ jobs:\n- checkout\n- *step-restore-cache\n- *step-yarn-install\n+ - *step-build\n- run: yarn release --linux --win\nworkflows:\nversion: 2\nlint-test-build:\njobs:\n- - lint\n+ - lint:\n+ filters:\n+ <<: *filter-tag\n- test-linux:\n+ filters:\n+ <<: *filter-tag\nrequires:\n- lint\n- test-macos:\n+ filters:\n+ <<: *filter-tag\nrequires:\n- lint\n- deploy-linux:\n",
        "sim_msg_2": "ci(circle): build on tags",
        "sim_diff_3": "diff --git a/.circleci/config.yml b/.circleci/config.yml @@ -4,6 +4,7 @@ executors:\ndocker-env:\ndocker:\n- image: circleci/node:10.15.3-jessie-browsers-legacy\n+ - image: cibuilds/snapcraft:stable\nmacos-env:\nmacos:\nxcode: \"10.2.0\"\n@@ -89,11 +90,17 @@ jobs:\n- *step-restore-cache\n- *step-yarn-install\n- *step-build\n- - run: yarn release --linux --win\n+ - run:\n+ name: deploy\n+ command: |\n+ yarn release --linux --win\n+ mkdir .snap\n+ echo $SNAPCRAFT_LOGIN_FILE | base64 --decode --ignore-garbage > .snapcraft/snapcraft.cfg\n+ snapcraft push *.snap --release stable\nworkflows:\nversion: 2\n- lint-test-build:\n+ lint-test-deploy:\njobs:\n- lint:\nfilters:\n",
        "sim_msg_3": "ci(circle): deploy to snap store\nsolves"
    },
    {
        "org_diff": "diff --git a/packages/react-dom/src/__tests__/ReactDOMServerIntegrationLegacyContextDisabled-test.internal.js b/a/packages/react-dom/src/__tests__/ReactDOMServerIntegrationLegacyContextDisabled-test.internal.js @@ -13,28 +13,29 @@\n const ReactDOMServerIntegrationUtils = require('./utils/ReactDOMServerIntegrationTestUtils');\n \n let React;\n-let ReactDOM;\n+let ReactDOMClient;\n let ReactFeatureFlags;\n let ReactDOMServer;\n \n function initModules() {\n   // Reset warning cache.\n   jest.resetModules();\n   React = require('react');\n-  ReactDOM = require('react-dom');\n+  ReactDOMClient = require('react-dom/client');\n   ReactDOMServer = require('react-dom/server');\n \n   ReactFeatureFlags = require('shared/ReactFeatureFlags');\n   ReactFeatureFlags.disableLegacyContext = true;\n \n   // Make them available to the helpers.\n   return {\n-    ReactDOM,\n+    ReactDOMClient,\n     ReactDOMServer,\n   };\n }\n \n-const {resetModules, itRenders} = ReactDOMServerIntegrationUtils(initModules);\n+const {resetModules, itRenders, clientRenderOnBadMarkup} =\n+  ReactDOMServerIntegrationUtils(initModules);\n \n function formatValue(val) {\n   if (val === null) {\n@@ -104,7 +105,7 @@ describe('ReactDOMServerIntegrationLegacyContextDisabled', () => {\n           <RegularFn />\n         </span>\n       </LegacyProvider>,\n-      3,\n+      render === clientRenderOnBadMarkup ? 6 : 3,\n     );\n     expect(e.textContent).toBe('{}undefinedundefined');\n     expect(lifecycleContextLog).toEqual([]);",
        "sim_diff_0": "diff --git a/packages/transportation/src/components/App/index.test.js b/packages/transportation/src/components/App/index.test.js -import React from 'react';\n-import { shallow } from 'enzyme';\n-import App from './index';\n-\ndescribe('<App />', () => {\n- it('should render its children', () => {\n- const children = (<h1>Test</h1>);\n- const wrapper = shallow(\n- <App>\n- {children}\n- </App>,\n- );\n- expect(wrapper.contains(children)).to.eql(true);\n+ it('does not have have functioning tests...', () => {\n+ expect(true).to.eql(true);\n});\n});\n",
        "sim_msg_0": "rm non functioning tests",
        "sim_diff_1": "diff --git a/tests/js/test-utils.js b/tests/js/test-utils.js /**\n* External dependencies\n*/\n-import { render } from '@testing-library/react';\n+import { render, act } from '@testing-library/react';\nimport { renderHook, act as actHook } from '@testing-library/react-hooks';\nimport { Router } from 'react-router-dom';\nimport invariant from 'invariant';\n@@ -16,7 +16,7 @@ import { RegistryProvider } from '@wordpress/data';\n* Internal dependencies\n*/\nimport FeaturesProvider from '../../assets/js/components/FeaturesProvider';\n-import { createTestRegistry } from './utils';\n+import { createTestRegistry, createWaitForRegistry } from './utils';\n// Override `@testing-library/react`'s render method with one that includes\n// our data store.\n@@ -67,6 +67,8 @@ const customRender = ( ui, options = {} ) => {\n);\n}\n+ const waitForRegistry = createWaitForRegistry( registry );\n+\nconst result = render( ui, { wrapper: Wrapper, ...renderOptions } );\nconst {\ngetByTestId: getByTestID, // eslint-disable-line sitekit/acronym-case\n@@ -87,6 +89,7 @@ const customRender = ( ui, options = {} ) => {\nqueryByTestID,\nregistry,\nhistory,\n+ waitForRegistry: () => act( waitForRegistry ),\n};\n};\n",
        "sim_msg_1": "Add waitForRegistry as return from custom render.",
        "sim_diff_2": "diff --git a/assets/js/components/settings/SettingsModules.test.js b/assets/js/components/settings/SettingsModules.test.js @@ -62,8 +62,7 @@ describe( 'SettingsModules', () => {\nregistry.dispatch( CORE_MODULES ).receiveGetModules( [] );\nhistory.push( '/connect' );\n- const { waitForRegistry } = render( <SettingsModules />, { history, registry } );\n- await waitForRegistry();\n+ render( <SettingsModules />, { history, registry } );\nexpect( global.location.hash ).toEqual( '#/connect-more-services' );\n} );\n",
        "sim_msg_2": "Remove waitForRegistry wait for now.",
        "sim_diff_3": "diff --git a/assets/js/components/settings/SettingsModules.test.js b/assets/js/components/settings/SettingsModules.test.js @@ -62,7 +62,8 @@ describe( 'SettingsModules', () => {\nregistry.dispatch( CORE_MODULES ).receiveGetModules( [] );\nhistory.push( '/connect' );\n- render( <SettingsModules />, { history, registry } );\n+ const { waitForRegistry } = render( <SettingsModules />, { history, registry } );\n+ await waitForRegistry();\nexpect( global.location.hash ).toEqual( '#/connect-more-services' );\n} );\n",
        "sim_msg_3": "Fix act error with new waitForRegistry."
    },
    {
        "org_diff": "diff --git a/packages/react-dom/src/__tests__/ReactDOMServerIntegrationLegacyContext-test.js b/a/packages/react-dom/src/__tests__/ReactDOMServerIntegrationLegacyContext-test.js @@ -14,26 +14,30 @@ const ReactDOMServerIntegrationUtils = require('./utils/ReactDOMServerIntegratio\n \n let PropTypes;\n let React;\n-let ReactDOM;\n+let ReactDOMClient;\n let ReactDOMServer;\n \n function initModules() {\n   // Reset warning cache.\n   jest.resetModules();\n   PropTypes = require('prop-types');\n   React = require('react');\n-  ReactDOM = require('react-dom');\n+  ReactDOMClient = require('react-dom/client');\n   ReactDOMServer = require('react-dom/server');\n \n   // Make them available to the helpers.\n   return {\n-    ReactDOM,\n+    ReactDOMClient,\n     ReactDOMServer,\n   };\n }\n \n-const {resetModules, itRenders, itThrowsWhenRendering} =\n-  ReactDOMServerIntegrationUtils(initModules);\n+const {\n+  resetModules,\n+  itRenders,\n+  itThrowsWhenRendering,\n+  clientRenderOnBadMarkup,\n+} = ReactDOMServerIntegrationUtils(initModules);\n \n describe('ReactDOMServerIntegration', () => {\n   beforeEach(() => {\n@@ -272,7 +276,10 @@ describe('ReactDOMServerIntegration', () => {\n             return {foo: 'bar'};\n           }\n         }\n-        const e = await render(<ForgetfulParent />, 1);\n+        const e = await render(\n+          <ForgetfulParent />,\n+          render === clientRenderOnBadMarkup ? 4 : 1,\n+        );\n         expect(e.textContent).toBe('nope');\n       },\n     );",
        "sim_diff_0": "diff --git a/src/DomRenderer.jsx b/src/DomRenderer.jsx @@ -2,8 +2,8 @@ import * as THREE from 'three';\nimport React, {useState, useEffect, useRef} from 'react';\nimport gameManager from '../game.js';\nimport {camera} from '../renderer.js';\n+import cameraManager from '../camera-manager.js';\nimport {localPlayer} from '../players.js';\n-// import metaversefile from 'metaversefile';\n// import {CharacterBanner} from './CharacterBanner.jsx';\nimport domRenderEngine, {DomRenderEngine} from '../dom-renderer.jsx';\n@@ -246,7 +246,7 @@ const DomRendererChildren = ({\nconst DomRenderer = props => {\nconst [innerWidth, setInnerWidth] = useState(window.innerWidth);\nconst [innerHeight, setInnerHeight] = useState(window.innerHeight);\n- const [fov, setFov] = useState(_getFov());\n+ const [fov, setFov] = useState(_getFov);\nconst iframeContainerRef = useRef();\nuseEffect(() => {\n@@ -256,8 +256,14 @@ const DomRenderer = props => {\nsetFov(_getFov());\n};\nwindow.addEventListener('resize', resize);\n+ const fovchange = (/*e*/) => {\n+ // const {fov} = e.data;\n+ setFov(_getFov());\n+ };\n+ cameraManager.addEventListener('fovchange', fovchange);\nreturn () => {\nwindow.removeEventListener('resize', resize);\n+ cameraManager.removeEventListener('fovchange', fovchange);\n};\n}, []);\n",
        "sim_msg_0": "DomRenderer track fov",
        "sim_diff_1": "diff --git a/packages/idyll-cli/src/pipeline/parse.js b/packages/idyll-cli/src/pipeline/parse.js @@ -202,8 +202,9 @@ exports.getBaseHTML = (ast, template) => {\nexports.getHTML = (paths, ast, components, datasets, template) => {\nconst componentClasses = {};\nObject.keys(components).forEach(key => {\n- componentClasses[key] = require(components[key])\n- })\n+ delete require.cache[require.resolve(components[key])];\n+ componentClasses[key] = require(components[key]);\n+ });\nexports.getHighlightJS(ast, paths, true);\nconst ReactDOMServer = require('react-dom/server');\n",
        "sim_msg_1": "clear require cache of components before rendering them",
        "sim_diff_2": "diff --git a/test/html-to-react.js b/test/html-to-react.js const assert = require('assert');\nconst React = require('react');\n-const parse = require('../');\n+const parse = require('..');\nconst { data, render } = require('./helpers/');\ndescribe('html-to-react', () => {\n+ describe('exports', () => {\n+ it('has default ES Module', () => {\n+ assert.strictEqual(parse.default, parse);\n+ });\n+\n+ it('has domToReact', () => {\n+ assert.strictEqual(parse.domToReact, require('../lib/dom-to-react'));\n+ });\n+\n+ it('contains htmlToDOM', () => {\n+ assert.strictEqual(parse.htmlToDOM, require('html-dom-parser'));\n+ });\n+ });\n+\ndescribe('parser', () => {\n[undefined, null, {}, [], 42].forEach(value => {\nit(`throws an error if first argument is ${value}`, () => {\n@@ -13,10 +27,6 @@ describe('html-to-react', () => {\n});\n});\n- it('has default ES Module defined', () => {\n- assert.strictEqual(parse.default, parse);\n- });\n-\nit('returns string if it cannot be parsed as HTML', () => {\nassert.strictEqual(parse('foo'), 'foo');\n});\n@@ -77,7 +87,7 @@ describe('html-to-react', () => {\ndescribe('options', () => {\ndescribe('replace', () => {\n- it('overrides the element if replace is valid', () => {\n+ it('overrides the element if a valid React element is returned', () => {\nconst html = data.html.complex;\nconst reactElement = parse(html, {\nreplace: node => {\n@@ -92,7 +102,7 @@ describe('html-to-react', () => {\n);\n});\n- it('does not override the element if replace is invalid', () => {\n+ it('does not override the element if an invalid React element is returned', () => {\nconst html = data.html.complex;\nconst reactElement = parse(html, {\nreplace: node => {\n@@ -115,9 +125,3 @@ describe('html-to-react', () => {\n});\n});\n});\n-\n-describe('dom-to-react', () => {\n- it('exports domToReact', () => {\n- assert.strictEqual(parse.domToReact, require('../lib/dom-to-react'));\n- });\n-});\n",
        "sim_msg_2": "test(html-to-react): tidy and organize tests in html-to-react.js",
        "sim_diff_3": "diff --git a/packages/transportation/src/components/App/index.test.js b/packages/transportation/src/components/App/index.test.js -import React from 'react';\n-import { shallow } from 'enzyme';\n-import App from './index';\n-\ndescribe('<App />', () => {\n- it('should render its children', () => {\n- const children = (<h1>Test</h1>);\n- const wrapper = shallow(\n- <App>\n- {children}\n- </App>,\n- );\n- expect(wrapper.contains(children)).to.eql(true);\n+ it('does not have have functioning tests...', () => {\n+ expect(true).to.eql(true);\n});\n});\n",
        "sim_msg_3": "rm non functioning tests"
    },
    {
        "org_diff": "diff --git a/scripts/flow/xplat.js b/a/scripts/flow/xplat.js @@ -9,6 +9,7 @@\n \n declare module 'ReactNativeInternalFeatureFlags' {\n   declare export var alwaysThrottleRetries: boolean;\n+  declare export var enableComponentStackLocations: boolean;\n   declare export var enableDeferRootSchedulingToMicrotask: boolean;\n   declare export var enableUseRefAccessWarning: boolean;\n   declare export var passChildrenWhenCloningPersistedNodes: boolean;",
        "sim_diff_0": "diff --git a/src/types/index.js.flow b/src/types/index.js.flow @@ -105,3 +105,8 @@ declare export function createDraft<T>(base: T): T\n* Optionally a patch-listener can be provided to gather the patches that are needed to construct the object.\n*/\ndeclare export function finishDraft<T>(base: T, listener?: PatchListener): T\n+\n+declare export function enableES5(): void\n+declare export function enableMapSet(): void\n+declare export function enablePatches(): void\n+declare export function enableAllPlugins(): void\n",
        "sim_msg_0": "Fix for issue Add flow types to flow declaration file for feature opt-in functions",
        "sim_diff_1": "diff --git a/src/generators/tailwind.js b/src/generators/tailwind.js @@ -17,9 +17,12 @@ module.exports = {\nconst templatesRoot = getPropValue(config, 'build.templates.root')\nconst templateSources = Array.isArray(templatesRoot) ? templatesRoot.map(item => `${item}/**/*.*`) : [`./${templatesRoot}/**/*.*`]\n- const extraPurgeSources = purgeCSSOptions.content || ['src/layouts/**/*.*', 'src/partials/**/*.*', 'src/components/**/*.*']\n+ const extraPurgeSources = purgeCSSOptions.content || []\nconst purgeSources = [\n+ 'src/layouts/**/*.*',\n+ 'src/partials/**/*.*',\n+ 'src/components/**/*.*',\n...templateSources,\n...extraPurgeSources\n]\n",
        "sim_msg_1": "refactor(tailwind): avoid user overwriting common purgecss sources",
        "sim_diff_2": "diff --git a/src/generators/tailwind.js b/src/generators/tailwind.js @@ -17,7 +17,7 @@ module.exports = {\nconst templatesRoot = getPropValue(config, 'build.templates.root')\nconst templateSources = Array.isArray(templatesRoot) ? templatesRoot.map(item => `${item}/**/*.*`) : [`./${templatesRoot}/**/*.*`]\n- const extraPurgeSources = purgeCSSOptions.content || []\n+ const extraPurgeSources = purgeCSSOptions.content || ['src/layouts/**/*.*', 'src/partials/**/*.*', 'src/components/**/*.*']\nconst purgeSources = [\n...templateSources,\n",
        "sim_msg_2": "feat: add default purgecss sources",
        "sim_diff_3": "diff --git a/packages/node_modules/node-red/lib/red.js b/packages/node_modules/node-red/lib/red.js @@ -76,7 +76,7 @@ module.exports = {\napiEnabled = true;\nserver = httpServer;\n} else {\n- runtime.init(userSettings);\n+ runtime.init(userSettings, httpServer);\napiEnabled = false;\nif (httpServer) {\nserver = httpServer;\n",
        "sim_msg_3": "Pass httpServer to runtime even when httpAdmin disabled\nFixes"
    },
    {
        "org_diff": "diff --git a/packages/react-devtools-shared/src/devtools/views/Components/Tree.js b/a/packages/react-devtools-shared/src/devtools/views/Components/Tree.js @@ -538,7 +538,7 @@ function updateIndentationSizeVar(\n }\n \n // $FlowFixMe[missing-local-annot]\n-function InnerElementType({children, style, ...rest}) {\n+function InnerElementType({children, style}) {\n   const {ownerID} = useContext(TreeStateContext);\n \n   const cachedChildWidths = useMemo<WeakMap<HTMLElement, number>>(\n@@ -586,11 +586,7 @@ function InnerElementType({children, style, ...rest}) {\n   // A lot of options were considered; this seemed the one that requires the least code.\n   // See https://github.com/bvaughn/react-devtools-experimental/issues/9\n   return (\n-    <div\n-      className={styles.InnerElementType}\n-      ref={divRef}\n-      style={style}\n-      {...rest}>\n+    <div className={styles.InnerElementType} ref={divRef} style={style}>\n       <SelectedTreeHighlight />\n       {children}\n     </div>",
        "sim_diff_0": "diff --git a/src/components/appNavigation/stackNavigation.js b/src/components/appNavigation/stackNavigation.js @@ -9,24 +9,34 @@ import { Button } from 'react-native-paper'\n/**\n* Component wrapping the stack navigator.\n- * It holds the pop push gotToRoot logic and inserts on top the NavBar component.\n+ * It holds the pop push gotToRoot goToParent logic and inserts on top the NavBar component.\n+ * This navigation actions are being passed via navigationConfig to children components\n*/\nclass AppView extends Component<{ descriptors: any, navigation: any, navigationConfig: any }> {\nstack = []\n+ /**\n+ * Pops from stack\n+ * If there is no screen on the stack navigates to initial screen on stack (goToRoot)\n+ * If we are currently in the first screen go to ths screen that created the stack (toToParent)\n+ */\npop = () => {\n- const { navigation, navigationConfig } = this.props\n+ const { navigation } = this.props\nconst nextRoute = this.stack.pop()\nif (nextRoute) {\nnavigation.navigate(nextRoute)\n} else if (navigation.state.index !== 0) {\n- navigation.navigate(navigation.state.routes[0])\n- } else {\nthis.goToRoot()\n+ } else {\n+ this.goToParent()\n}\n}\n+ /**\n+ * Push a route to the stack\n+ * The stack is maintained in stack property to be able to navigate back and forward\n+ */\npush = (nextRoute, params) => {\nconst { navigation } = this.props\nconst activeKey = navigation.state.routes[navigation.state.index].key\n@@ -34,7 +44,18 @@ class AppView extends Component<{ descriptors: any, navigation: any, navigationC\nnavigation.navigate(nextRoute, params)\n}\n+ /**\n+ * Navigates to root screen. First on stack\n+ */\ngoToRoot = () => {\n+ const { navigation } = this.props\n+ navigation.navigate(navigation.state.routes[0])\n+ }\n+\n+ /**\n+ * Navigates to the screen that created the stack (backRouteName)\n+ */\n+ goToParent = () => {\nconst { navigation, navigationConfig } = this.props\nif (navigationConfig.backRouteName) {\n@@ -53,7 +74,7 @@ class AppView extends Component<{ descriptors: any, navigation: any, navigationC\n<SceneView\nnavigation={descriptor.navigation}\ncomponent={descriptor.getComponent()}\n- screenProps={{ ...navigationConfig, push: this.push, goToRoot: this.goToRoot }}\n+ screenProps={{ ...navigationConfig, push: this.push, goToRoot: this.goToRoot, goToParent: this.goToParent }}\n/>\n</View>\n)\n@@ -107,9 +128,9 @@ export const PushButton = (props: ButtonProps) => {\n* @param {ButtonProps} props\n*/\nexport const BackButton = (props: ButtonProps) => {\n- const { disabled, navigationConfig, routeName, children, mode, color } = props\n+ const { disabled, navigationConfig, children, mode, color } = props\nreturn (\n- <Button mode={mode || 'text'} color={color || '#575757'} disabled={disabled} onPress={navigationConfig.goToRoot}>\n+ <Button mode={mode || 'text'} color={color || '#575757'} disabled={disabled} onPress={navigationConfig.goToParent}>\n{children}\n</Button>\n)\n",
        "sim_msg_0": "Added docs to stack navigation",
        "sim_diff_1": "diff --git a/src/components/App.js b/src/components/App.js @@ -1710,7 +1710,7 @@ class App extends Component {\nlet newTree = tree.mutate(draft => {\nfor (let [key, prop] of [['title', 'N'], ['comment', 'C']]) {\nif (key in data) {\n- if (data[key] && data[key].trim() !== '') {\n+ if (data[key] && data[key] !== '') {\ndraft.updateProperty(treePosition, prop, [data[key]])\n} else {\ndraft.removeProperty(treePosition, prop)\n",
        "sim_msg_1": "Fix setComment()",
        "sim_diff_2": "diff --git a/assets/js/googlesitekit/components-gm2/Menu.js b/assets/js/googlesitekit/components-gm2/Menu.js @@ -28,6 +28,7 @@ import useMergedRef from '@react-hook/merged-ref';\n*/\nimport {\nforwardRef,\n+ isValidElement,\nuseCallback,\nuseEffect,\nuseRef,\n@@ -122,9 +123,13 @@ const Menu = forwardRef(\nclassName=\"mdc-list-item\"\nrole=\"menuitem\"\n>\n+ { isValidElement( item ) && item }\n+\n+ { ! isValidElement( item ) && (\n<span className=\"mdc-list-item__text\">\n{ item }\n</span>\n+ ) }\n</li>\n) ) }\n{ children }\n",
        "sim_msg_2": "Update `<Menu />` to accept non-string menu items.",
        "sim_diff_3": "diff --git a/src/components/App.js b/src/components/App.js @@ -1835,7 +1835,7 @@ class App extends Component {\nif (shiftNode == null) return\nlet newTree = tree.mutate(draft => {\n- draft.shiftNode(shiftNode.id, step >= 0 ? '1' : '-1')\n+ draft.shiftNode(shiftNode.id, step >= 0 ? 'right' : 'left')\n})\nthis.setCurrentTreePosition(newTree, treePosition)\n",
        "sim_msg_3": "Fix shiftVariation()"
    },
    {
        "org_diff": "diff --git a/packages/react-reconciler/src/ReactInternalTypes.js b/a/packages/react-reconciler/src/ReactInternalTypes.js @@ -157,12 +157,6 @@ export type Fiber = {\n   subtreeFlags: Flags,\n   deletions: Array<Fiber> | null,\n \n-  // The first and last fiber with side-effect within this subtree. This allows\n-  // us to reuse a slice of the linked list when we reuse the work done within\n-  // this fiber.\n-  firstEffect: Fiber | null,\n-  lastEffect: Fiber | null,\n-\n   lanes: Lanes,\n   childLanes: Lanes,\n ",
        "sim_diff_0": "diff --git a/packages/idyll-document/src/index.js b/packages/idyll-document/src/index.js @@ -142,10 +142,15 @@ class Wrapper extends React.PureComponent {\n);\n}\n- const { __expr__, __vars__, hasError, ...state } = this.state;\n- return React.Children.map(this.props.children, (c, i) => {\n- return React.cloneElement(c, {key: `${this.key}-${i}`, ...state});\n- });\n+ const { __expr__, __vars__, hasError, ...state } = this.state\n+ const { children, ...passThruProps } = this.props\n+ return React.Children.map(children, (c, i) => {\n+ return React.cloneElement(c, {\n+ key: `${this.key}-${i}`,\n+ ...state,\n+ ...passThruProps,\n+ })\n+ })\n}\n}\n",
        "sim_msg_0": "Pass props through to wrapped components",
        "sim_diff_1": "diff --git a/packages/idyll-document/src/index.js b/packages/idyll-document/src/index.js @@ -142,8 +142,9 @@ class Wrapper extends React.PureComponent {\n);\n}\n+ const { __expr__, __vars__, hasError, ...state } = this.state;\nreturn React.Children.map(this.props.children, (c, i) => {\n- return React.cloneElement(c, {key: `${this.key}-${i}`, ...this.state});\n+ return React.cloneElement(c, {key: `${this.key}-${i}`, ...state});\n});\n}\n}\n",
        "sim_msg_1": "be more selective with the props we pass to components",
        "sim_diff_2": "diff --git a/packages/idyll-document/src/index.js b/packages/idyll-document/src/index.js @@ -143,7 +143,7 @@ class Wrapper extends React.PureComponent {\n}\nconst { __expr__, __vars__, hasError, ...state } = this.state\n- const { children, ...passThruProps } = this.props\n+ const { children, __expr__: _e, __vars__: _v, ...passThruProps } = this.props\nreturn React.Children.map(children, (c, i) => {\nreturn React.cloneElement(c, {\nkey: `${this.key}-${i}`,\n",
        "sim_msg_2": "remove extraneous props; fix tests",
        "sim_diff_3": "diff --git a/packages/material-ui/src/RootRef/RootRef.d.ts b/packages/material-ui/src/RootRef/RootRef.d.ts import * as React from 'react';\n-export interface RootRefProps {\n- rootRef?: () => React.HTMLAttributes<any>;\n+export interface RootRefProps<T = any> {\n+ rootRef?: ((instance: T | null) => void) | React.RefObject<T>;\n}\ndeclare const RootRef: React.ComponentType<RootRefProps>;\n",
        "sim_msg_3": "[RootRef] Update RootRef.d.ts\n* Update RootRef.d.ts\nUpdate RootRef.d.ts to reflect the implementation change.\n* Update RootRef.d.ts"
    },
    {
        "org_diff": "diff --git a/packages/react/src/__tests__/ReactCreateRef-test.js b/a/packages/react/src/__tests__/ReactCreateRef-test.js @@ -10,14 +10,16 @@\n 'use strict';\n \n let React;\n-let ReactTestRenderer;\n+let ReactDOM;\n+let ReactDOMClient;\n \n describe('ReactCreateRef', () => {\n   beforeEach(() => {\n     jest.resetModules();\n \n     React = require('react');\n-    ReactTestRenderer = require('react-test-renderer');\n+    ReactDOM = require('react-dom');\n+    ReactDOMClient = require('react-dom/client');\n   });\n \n   it('should warn in dev if an invalid ref object is provided', () => {\n@@ -31,12 +33,15 @@ describe('ReactCreateRef', () => {\n       }\n     }\n \n+    const root = ReactDOMClient.createRoot(document.createElement('div'));\n     expect(() =>\n-      ReactTestRenderer.create(\n-        <Wrapper>\n-          <div ref={{}} />\n-        </Wrapper>,\n-      ),\n+      ReactDOM.flushSync(() => {\n+        root.render(\n+          <Wrapper>\n+            <div ref={{}} />\n+          </Wrapper>,\n+        );\n+      }),\n     ).toErrorDev(\n       'Unexpected ref object provided for div. ' +\n         'Use either a ref-setter function or React.createRef().\\n' +\n@@ -45,11 +50,13 @@ describe('ReactCreateRef', () => {\n     );\n \n     expect(() =>\n-      ReactTestRenderer.create(\n-        <Wrapper>\n-          <ExampleComponent ref={{}} />\n-        </Wrapper>,\n-      ),\n+      ReactDOM.flushSync(() => {\n+        root.render(\n+          <Wrapper>\n+            <ExampleComponent ref={{}} />\n+          </Wrapper>,\n+        );\n+      }),\n     ).toErrorDev(\n       'Unexpected ref object provided for ExampleComponent. ' +\n         'Use either a ref-setter function or React.createRef().\\n' +",
        "sim_diff_0": "diff --git a/semcore/utils/__tests__/index.test.tsx b/semcore/utils/__tests__/index.test.tsx import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { testing, snapshot } from '@semcore/jest-preset-ui';\n-\n-const { cleanup } = testing;\n-\nimport isNode from '../src/isNode';\nimport compose from '../src/compose';\nimport useCss from '../src/use/useCss';\n@@ -11,6 +8,9 @@ import resolveColor, { shade, opacity } from '../src/color';\nimport { interpolate } from '../src/enhances/i18nEnhance';\nimport assignProps, { assignHandlers } from '../src/assignProps';\nimport reactToText from '../src/reactToText';\n+import { getRef, setRef, getNodeByRef } from '../src/ref';\n+\n+const { cleanup } = testing;\ndescribe('Utils CSS in JS', () => {\nafterEach(cleanup);\n@@ -421,3 +421,53 @@ describe('Utils reactToText', () => {\n).toBe('multi component');\n});\n});\n+\n+describe('Utils ref', () => {\n+ afterEach(cleanup);\n+\n+ test('[getRef] support element', () => {\n+ const div = document.createElement('div');\n+ expect(getRef(div)).toBe(div);\n+ });\n+\n+ test('[getRef] support ref function', () => {\n+ const div = document.createElement('div');\n+ const ref = React.createRef<HTMLDivElement>();\n+ // @ts-ignore\n+ ref.current = div;\n+ expect(getRef(ref)).toBe(div);\n+ });\n+\n+ test('[getRef] support unknown', () => {\n+ expect(getRef(undefined)).toBe(null);\n+ });\n+\n+ test('[setRef] support ref', () => {\n+ const ref = React.createRef<HTMLDivElement>();\n+ const div = document.createElement('div');\n+ setRef(ref, div);\n+ expect(ref.current).toBe(div);\n+ });\n+\n+ test('[setRef] support function', () => {\n+ const fn = jest.fn();\n+ const div = document.createElement('div');\n+ setRef(fn, div);\n+ expect(fn).toHaveBeenCalledWith(div);\n+ });\n+\n+ test('[getNodeByRef] support function', () => {\n+ const div = document.createElement('div');\n+ const fn = jest.fn(() => div);\n+ // setRef(fn, div)\n+ expect(getNodeByRef(fn)).toBe(div);\n+ });\n+\n+ test('[getNodeByRef] support ref', () => {\n+ const div = document.createElement('div');\n+ const ref = React.createRef<HTMLDivElement>();\n+ // @ts-ignore\n+ ref.current = div;\n+ expect(getNodeByRef(ref)).toBe(div);\n+ });\n+});\n",
        "sim_msg_0": "[utils] Added test for Ref utils",
        "sim_diff_1": "diff --git a/pro-gallery-renderer/src/components/gallery/galleryContainerNew.js b/pro-gallery-renderer/src/components/gallery/galleryContainerNew.js @@ -174,10 +174,21 @@ export class GalleryContainer extends React.Component {\nhandleNewGalleryStructure() {\n//should be called AFTER new state is set\nif (typeof this.props.handleNewGalleryStructure === 'function') {\n- const {items, container, styles} = this.state;\n- const {layout} = this;\n+ const {container} = this.state;\n+ const partialStyleParams = _.pick(this.state.styles,\n+ ['isSlideshow',\n+ 'slideshowInfoSize',\n+ 'galleryThumbnailsAlignment',\n+ 'thumbnailSize',\n+ 'isSlider',\n+ 'galleryWidth',\n+ 'isInAdi',\n+ 'oneRow',\n+ 'enableInfiniteScroll']);\n+ const numOfItems = this.state.items.length;\n+ const layoutHeight = this.layout.height;\nconst isInfinite = this.containerGrowthDirection() === 'vertical';\n- this.props.handleNewGalleryStructure({items, container, styles, layout, isInfinite});\n+ this.props.handleNewGalleryStructure({numOfItems, container, partialStyleParams, layoutHeight, isInfinite});\n}\n}\n",
        "sim_msg_1": "[pgr+sw+tw] refactor (handleNewGallStruct): reduce arguments size",
        "sim_diff_2": "diff --git a/src/components/ProductDetail/ProductDetail.test.js b/src/components/ProductDetail/ProductDetail.test.js import React from \"react\";\nimport renderer from \"react-test-renderer\";\nimport { MuiThemeProvider } from \"material-ui/styles\";\n-\n+import { Provider } from \"mobx-react\";\nimport theme from \"lib/theme/reactionTheme\";\nimport ProductDetail from \"./ProductDetail\";\nimport sampleData from \"./__mocks__/productData.mock\";\n+const uiStore = {\n+ appConfig: {\n+ publicRuntimeConfig: {\n+ externalAssetsUrl: \"\"\n+ }\n+ }\n+};\n+\ntest(\"basic snapshot\", () => {\nconst component = renderer.create((\n<MuiThemeProvider theme={theme}>\n+ <Provider uiStore={uiStore}>\n<ProductDetail catalogProduct={sampleData} />\n+ </Provider>\n</MuiThemeProvider>\n));\nconst tree = component.toJSON();\n",
        "sim_msg_2": "test: add mock uiStore to fix test",
        "sim_diff_3": "diff --git a/test/dom-to-react.test.js b/test/dom-to-react.test.js @@ -8,6 +8,18 @@ const { render } = require('./helpers');\nconst { html, svg } = require('./data');\ndescribe('domToReact', () => {\n+ it.each([\n+ ['comment', html.comment],\n+ ['doctype', html.doctype]\n+ ])('skips %s', (type, value) => {\n+ expect(domToReact(htmlToDOM(value))).toEqual([]);\n+ });\n+\n+ it('converts \"text\" to \"text\"', () => {\n+ const text = 'text';\n+ expect(domToReact(htmlToDOM(text))).toBe(text);\n+ });\n+\nit('converts single DOM node to React', () => {\nconst reactElement = domToReact(htmlToDOM(html.single));\nexpect(reactElement).toMatchSnapshot();\n",
        "sim_msg_3": "test(dom-to-react): add test cases for text, comment, and doctype"
    },
    {
        "org_diff": "diff --git a/.github/workflows/commit_artifacts.yml b/a/.github/workflows/commit_artifacts.yml @@ -11,7 +11,7 @@ jobs:\n       www_branch_count: ${{ steps.check_branches.outputs.www_branch_count }}\n       fbsource_branch_count: ${{ steps.check_branches.outputs.fbsource_branch_count }}\n     steps:\n-      - uses: actions/checkout@v3\n+      - uses: actions/checkout@v4\n       - name: \"Check branches\"\n         id: check_branches\n         run: |\n@@ -179,7 +179,7 @@ jobs:\n     if: ${{ (github.ref == 'refs/heads/main' && needs.download_artifacts.outputs.www_branch_count == '0') || github.ref == 'refs/heads/meta-www' }}\n     runs-on: ubuntu-latest\n     steps:\n-      - uses: actions/checkout@v3\n+      - uses: actions/checkout@v4\n         with:\n           ref: builds/facebook-www\n       - name: Ensure clean directory\n@@ -215,7 +215,7 @@ jobs:\n     runs-on: ubuntu-latest\n     if: ${{ (github.ref == 'refs/heads/main' && needs.download_artifacts.outputs.fbsource_branch_count == '0') || github.ref == 'refs/heads/meta-fbsource' }}\n     steps:\n-      - uses: actions/checkout@v3\n+      - uses: actions/checkout@v4\n         with:\n           ref: main\n           repository: facebook/react-fbsource-import",
        "sim_diff_0": "diff --git a/.github/workflows/deploy-to-artifacts.yml b/.github/workflows/deploy-to-artifacts.yml @@ -15,9 +15,12 @@ on:\ndescription: 'The base commit ref'\njobs:\n- pre:\n+ build:\nruns-on: ubuntu-latest\nenvironment: CI\n+ needs: pre\n+ outputs:\n+ sha: ${{steps.prep.outputs.sha}}\nsteps:\n- uses: actions/github-script@v3\nwith:\n@@ -31,13 +34,6 @@ jobs:\nstate: 'pending',\ntarget_url: `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`\n});\n- build:\n- runs-on: ubuntu-latest\n- environment: CI\n- needs: pre\n- outputs:\n- sha: ${{steps.prep.outputs.sha}}\n- steps:\n- id: prep\nuses: actions/github-script@v3\nwith:\n@@ -77,6 +73,18 @@ jobs:\nruns-on: ubuntu-latest\nneeds: pre\nsteps:\n+ - uses: actions/github-script@v3\n+ with:\n+ github-token: ${{secrets.ACTIVE_TOKEN}}\n+ script: |\n+ await github.repos.createCommitStatus({\n+ owner: context.repo.owner,\n+ repo: context.repo.repo,\n+ sha: context.payload.inputs.sha,\n+ context: context.workflow,\n+ state: 'pending',\n+ target_url: `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`\n+ });\n- uses: actions/checkout@v2\nwith:\nref: ${{ github.event.inputs.sha }}\n@@ -132,12 +140,6 @@ jobs:\ntasks.push('test-server-stable.yml');\nawait Promise.all(tasks.map(task => dispatchWorkflow(task)));\n-\n- post:\n- runs-on: ubuntu-latest\n- environment: CI\n- needs: test\n- steps:\n- uses: actions/github-script@v3\nwith:\ngithub-token: ${{secrets.ACTIVE_TOKEN}}\n@@ -150,13 +152,8 @@ jobs:\nstate: 'success',\ntarget_url: `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}#artifacts`\n});\n- failure:\n- runs-on: ubuntu-latest\n- environment: CI\n- needs: test\n- if: failure() || cancelled()\n- steps:\n- uses: actions/github-script@v3\n+ if: failure() || cancelled()\nwith:\ngithub-token: ${{secrets.ACTIVE_TOKEN}}\nscript: |\n@@ -169,4 +166,3 @@ jobs:\ntarget_url: `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`\n});\n\\ No newline at end of file\n-\n",
        "sim_msg_0": "ci: optimize statuses in the deploy workflow",
        "sim_diff_1": "diff --git a/.github/workflows/android.yml b/.github/workflows/android.yml @@ -74,15 +74,6 @@ jobs:\necho \"Code push release target version \"${BUILD_NUMBER}\"\"\nnpx appcenter codepush release-react ${{ env.APPCENTER_NAME }} android --token \"${{ env.APPCENTER_TOKEN }}\"\"\n- set_target_branch:\n- steps:\n- name: Detect and set target branch\n- run: |\n- ${{ github.event.inputs.release != '' && echo \"TARGET_BRANCH= ${{ github.event.inputs.release }}\" >> $GITHUB_ENV ||\n- (endsWith(github.ref, '/master') || endsWith(github.ref, '/3493-code-push')) && echo \"TARGET_BRANCH= '/master'\" >> $GITHUB_ENV ||\n- endsWith(github.ref, '/staging') && echo \"TARGET_BRANCH= '/staging'\" >> $GITHUB_ENV ||\n- endsWith(github.ref, '/next') && echo \"TARGET_BRANCH= '/next'\" >> $GITHUB_ENV }}\n-\nbuild:\n# The type of runner that the job will run on\nruns-on: ubuntu-latest\n",
        "sim_msg_1": "remove set target branch",
        "sim_diff_2": "diff --git a/.github/workflows/deploy-to-artifacts.yml b/.github/workflows/deploy-to-artifacts.yml @@ -17,8 +17,6 @@ on:\njobs:\nbuild:\nruns-on: ubuntu-latest\n- environment: CI\n- needs: pre\noutputs:\nsha: ${{steps.prep.outputs.sha}}\nsteps:\n@@ -70,8 +68,8 @@ jobs:\nname: docker\npath: ${{steps.package-name.outputs.packageName}}.tar\nchanges:\n+ # TODO: currently cannot generate a list of changes after rebase\nruns-on: ubuntu-latest\n- needs: pre\nsteps:\n- uses: actions/github-script@v3\nwith:\n@@ -118,6 +116,7 @@ jobs:\n});\n}\n+ // TODO: Optimize by running only necessary tests for corresponding changes\nconst fileList = require('fs').readFileSync('changes.txt').toString().split('\\n').filter(line => line);\nconst tasks = [];\n@@ -165,4 +164,3 @@ jobs:\nstate: 'failure',\ntarget_url: `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`\n});\n-\n\\ No newline at end of file\n",
        "sim_msg_2": "ci: fix the deployment workflow",
        "sim_diff_3": "diff --git a/.github/workflows/docslint.yml b/.github/workflows/docslint.yml @@ -25,7 +25,7 @@ jobs:\nuses: actions/checkout@v2\n- name: Vale Linter\n- uses: errata-ai/vale-action@v1.3.0\n+ uses: errata-ai/vale-action@0dec3032fa59c4097deece7cf6ee3261b27bb3f1\nwith:\n# Optional\nfiles: website/content/docs\n",
        "sim_msg_3": "chore: fix vale linting"
    },
    {
        "org_diff": "diff --git a/packages/react-reconciler/src/ReactInternalTypes.js b/a/packages/react-reconciler/src/ReactInternalTypes.js @@ -157,9 +157,6 @@ export type Fiber = {\n   subtreeFlags: Flags,\n   deletions: Array<Fiber> | null,\n \n-  // Singly linked list fast path to the next fiber with side-effects.\n-  nextEffect: Fiber | null,\n-\n   // The first and last fiber with side-effect within this subtree. This allows\n   // us to reuse a slice of the linked list when we reuse the work done within\n   // this fiber.",
        "sim_diff_0": "diff --git a/packages/doc/src/components/Navigation/Navigation.jsx b/packages/doc/src/components/Navigation/Navigation.jsx @@ -196,8 +196,7 @@ ListItem.propTypes = {\nprefix: bool.isRequired,\n};\n-const List = ({ tree, level, toggleMenu, prefix }) => {\n- return (\n+const List = ({ tree, level, toggleMenu, prefix }) => (\n<StyledList>\n{Object.values(tree)\n.sort((t1, t2) => (t1.order > t2.order ? 1 : -1))\n@@ -215,7 +214,6 @@ const List = ({ tree, level, toggleMenu, prefix }) => {\n))}\n</StyledList>\n);\n-};\nList.propTypes = {\ntree: shape({}).isRequired,\n",
        "sim_msg_0": "docs(yoga/doc): remove unused return",
        "sim_diff_1": "diff --git a/src/components/Link/Link.js b/src/components/Link/Link.js @@ -3,16 +3,26 @@ import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link as NextLink } from \"routes\";\nimport classNames from \"classnames\";\n+import { withStyles } from \"@material-ui/core/styles\";\nimport track from \"lib/tracking/track\";\n+const styles = () => ({\n+ a: {\n+ color: \"inherit\",\n+ textDecoration: \"none\"\n+ }\n+});\n+\n@track((ownProps) => ({\ncomponent: \"Link\",\nurl: ownProps.route || ownProps.href,\nparams: ownProps.params\n}))\n+@withStyles(styles)\nclass Link extends Component {\nstatic propTypes = {\nchildren: PropTypes.node.isRequired,\n+ classes: PropTypes.object,\nclassName: PropTypes.string,\nonClick: PropTypes.func\n}\n@@ -40,6 +50,7 @@ class Link extends Component {\nrender() {\nconst {\nchildren,\n+ classes,\nclassName,\ntracking, // eslint-disable-line\nonClick,\n@@ -49,7 +60,7 @@ class Link extends Component {\nreturn (\n<NextLink route={props.route || props.href} {...props} passHref>\n<a\n- className={classNames(className)}\n+ className={`${classes.a} ${className || \"\"}`}\nonClick={this.handleClick}\nonKeyDown={this.handleKeyDown}\nrole=\"link\"\n",
        "sim_msg_1": "fix: add styling to Link component",
        "sim_diff_2": "diff --git a/components/core/Link.js b/components/core/Link.js @@ -2,7 +2,7 @@ import * as React from \"react\";\nimport * as Strings from \"~/common/strings\";\nimport * as Logging from \"~/common/logging\";\n-export class Link extends React.Component {\n+class LinkPrimitive extends React.Component {\nstate = {\nhref: this.props.href\n? this.props.href\n@@ -63,6 +63,7 @@ export class Link extends React.Component {\n};\nrender() {\n+ const { style, innerRef, css, target, href, title, children, ...props } = this.props;\nreturn (\n<span onClick={this._handleClick}>\n<a\n@@ -70,17 +71,20 @@ export class Link extends React.Component {\ntextDecoration: \"none\",\ncolor: \"inherit\",\ncursor: \"pointer\",\n- ...this.props.style,\n+ ...style,\n}}\n- css={this.props.css}\n- target={this.props.target}\n- href={this.state.href}\n- aria-label={this.props[\"aria-label\"]}\n- title={this.props.title}\n+ ref={innerRef}\n+ css={css}\n+ target={target}\n+ href={href}\n+ title={title}\n+ {...props}\n>\n- {this.props.children}\n+ {children}\n</a>\n</span>\n);\n}\n}\n+\n+export const Link = React.forwardRef((props, ref) => <LinkPrimitive {...props} innerRef={ref} />);\n",
        "sim_msg_2": "feat(Link): forwardRef",
        "sim_diff_3": "diff --git a/packages/material-ui/src/RootRef/RootRef.d.ts b/packages/material-ui/src/RootRef/RootRef.d.ts import * as React from 'react';\n-export interface RootRefProps {\n- rootRef?: () => React.HTMLAttributes<any>;\n+export interface RootRefProps<T = any> {\n+ rootRef?: ((instance: T | null) => void) | React.RefObject<T>;\n}\ndeclare const RootRef: React.ComponentType<RootRefProps>;\n",
        "sim_msg_3": "[RootRef] Update RootRef.d.ts\n* Update RootRef.d.ts\nUpdate RootRef.d.ts to reflect the implementation change.\n* Update RootRef.d.ts"
    },
    {
        "org_diff": "diff --git a/packages/react-dom/src/__tests__/ReactDOMInput-test.js b/a/packages/react-dom/src/__tests__/ReactDOMInput-test.js @@ -1707,7 +1707,7 @@ describe('ReactDOMInput', () => {\n     assertInputTrackingIsCurrent(container);\n   });\n \n-  it('should control radio buttons if the tree updates during render', () => {\n+  it('should control radio buttons if the tree updates during render in legacy mode', async () => {\n     container.remove();\n     container = document.createElement('div');\n     document.body.appendChild(container);",
        "sim_diff_0": "diff --git a/polyfills/document/elementsFromPoint/tests.js b/polyfills/document/elementsFromPoint/tests.js /* globals proclaim */\ndescribe('document.elementsFromPoint', function () {\n+ function getElementCenter(el) {\n+ var elBounds = el.getBoundingClientRect()\n+\n+ var x = elBounds.x + elBounds.width / 2;\n+ var y = elBounds.x + elBounds.height / 2;\n+\n+ return [x, y];\n+ }\n+\nit('returns all the elements at the specified coordinates', function() {\nvar container = document.body.appendChild(document.createElement('div'));\nvar p = container.appendChild(document.createElement('p'));\np.innerText = 'Some text';\n- var elements = document.elementsFromPoint(30, 20);\n+ var center = getElementCenter(p);\n+\n+ var elements = document.elementsFromPoint(center[0], center[1]);\nelements = [].map.call(elements, function(e) {\nreturn e.tagName.toLowerCase();\n});\n@@ -25,7 +36,9 @@ describe('document.elementsFromPoint', function () {\np.innerText = 'Some text';\np.style.setProperty('pointer-events', expectedValue, expectedPriority);\n- document.elementsFromPoint(30, 20);\n+ var center = getElementCenter(p);\n+\n+ document.elementsFromPoint(center[0], center[1]);\nvar propertyValue = p.style.getPropertyValue('pointer-events');\nvar propertyPriority = p.style.getPropertyPriority('pointer-events');\n",
        "sim_msg_0": "chore(document.elementsFromPoint): update unit tests",
        "sim_diff_1": "diff --git a/vis/test/component/modals.test.js b/vis/test/component/modals.test.js @@ -84,6 +84,8 @@ const setup = (overrideModalsObject = {}, overrideStoreObject = {}) => {\n};\ndescribe(\"Modals component\", () => {\n+ jest.useFakeTimers().setSystemTime(new Date(\"2021-01-01\").getTime());\n+\nlet container = null;\nbeforeEach(() => {\ncontainer = document.createElement(\"div\");\n",
        "sim_msg_1": "added fake time to modals tests",
        "sim_diff_2": "diff --git a/test/dom-to-react.js b/test/dom-to-react.js @@ -159,7 +159,7 @@ describe('dom-to-react parser', () => {\n);\n});\n- it('does not modify keys for replacement if it have one', () => {\n+ it('does not modify keys for replacement if it has one', () => {\nconst html = [data.html.single, data.html.customElement].join('');\nconst reactElements = domToReact(htmlToDOM(html), {\n@@ -171,7 +171,7 @@ describe('dom-to-react parser', () => {\nreturn React.createElement(\n'custom-button',\n{\n- key: 'meyKey',\n+ key: 'myKey',\nclass: 'myClass',\n'custom-attribute': 'replaced value'\n},\n@@ -186,7 +186,7 @@ describe('dom-to-react parser', () => {\nReact.createElement(\n'custom-button',\n{\n- key: 'meyKey',\n+ key: 'myKey',\nclass: 'myClass',\n'custom-attribute': 'replaced value'\n},\n",
        "sim_msg_2": "fix(dom-to-react): fix typos in the test",
        "sim_diff_3": "diff --git a/test/types/lib/dom-to-react.test.tsx b/test/types/lib/dom-to-react.test.tsx +import { DomElement } from 'domhandler';\nimport { HTMLReactParserOptions } from 'html-react-parser';\nimport domToReact from 'html-react-parser/lib/dom-to-react';\nimport * as React from 'react';\nimport htmlToDOM from 'html-dom-parser';\n-/* $ExpectType ReactElement | ReactElement[] */\n-domToReact(htmlToDOM('<div>text</div>'));\n+// $ExpectType DomElement[]\n+htmlToDOM('<div>text</div>');\n-// `options.replace`\n+// $ExpectType Element | Element[]\n+domToReact(htmlToDOM('<div>text</div>'));\n-// Return React.createElement from `replace`\n+// $ExpectType Element | Element[]\ndomToReact(htmlToDOM('<p id=\"replace\">text</p>'), {\nreplace: domNode => {\nif (domNode.attribs && domNode.attribs.id === 'replace') {\n- return React.createElement('span', {}, 'replaced');\n+ return <span>replaced</span>;\n}\n}\n});\n-// Return ReactElement\n-const options: HTMLReactParserOptions = {\n+let options: HTMLReactParserOptions;\n+\n+options = {\nreplace({ attribs }) {\n- return attribs && attribs.id === 'remove' && <React.Fragment />;\n+ return attribs && attribs.id === 'remove' && <></>;\n}\n};\n+// $ExpectType Element | Element[]\ndomToReact(htmlToDOM('<p><br id=\"remove\"></p>'), options);\n-// Return domhandler node\n+// $ExpectType Element | Element[]\ndomToReact(htmlToDOM('<a id=\"header\" href=\"#\">Heading</a>'), {\nreplace: node => {\nif (node.attribs && node.attribs.id === 'header') {\n- return {\n- type: 'h1',\n- props: { children: 'Heading' }\n- };\n+ return;\n}\n}\n});\n",
        "sim_msg_3": "test(types): fix and improve dts tests for dom-to-react.test.tsx"
    },
    {
        "org_diff": "diff --git a/packages/react/src/__tests__/ReactJSXTransformIntegration-test.js b/a/packages/react/src/__tests__/ReactJSXTransformIntegration-test.js @@ -11,7 +11,6 @@\n \n let React;\n let ReactDOMClient;\n-let ReactTestUtils;\n let act;\n \n // TODO: Historically this module was used to confirm that the JSX transform\n@@ -30,7 +29,6 @@ describe('ReactJSXTransformIntegration', () => {\n \n     React = require('react');\n     ReactDOMClient = require('react-dom/client');\n-    ReactTestUtils = require('react-dom/test-utils');\n     act = require('internal-test-utils').act;\n \n     Component = class extends React.Component {\n@@ -213,22 +211,34 @@ describe('ReactJSXTransformIntegration', () => {\n     expect(instance.props.fruit).toBe('persimmon');\n   });\n \n-  it('should normalize props with default values', () => {\n+  it('should normalize props with default values', async () => {\n     class NormalizingComponent extends React.Component {\n       render() {\n         return <span>{this.props.prop}</span>;\n       }\n     }\n     NormalizingComponent.defaultProps = {prop: 'testKey'};\n \n-    const instance = ReactTestUtils.renderIntoDocument(\n-      <NormalizingComponent />,\n-    );\n+    let container = document.createElement('div');\n+    let root = ReactDOMClient.createRoot(container);\n+    let instance;\n+    await act(() => {\n+      root.render(\n+        <NormalizingComponent ref={current => (instance = current)} />,\n+      );\n+    });\n+\n     expect(instance.props.prop).toBe('testKey');\n \n-    const inst2 = ReactTestUtils.renderIntoDocument(\n-      <NormalizingComponent prop={null} />,\n-    );\n+    container = document.createElement('div');\n+    root = ReactDOMClient.createRoot(container);\n+    let inst2;\n+    await act(() => {\n+      root.render(\n+        <NormalizingComponent prop={null} ref={current => (inst2 = current)} />,\n+      );\n+    });\n+\n     expect(inst2.props.prop).toBe(null);\n   });\n });",
        "sim_diff_0": "diff --git a/test/utils/describeConformanceV5.js b/test/utils/describeConformanceV5.js @@ -43,7 +43,7 @@ function testThemeDefaultProps(element, getOptions) {\ndescribe('theme: default components', () => {\nit(\"respect theme's defaultProps\", () => {\nconst testProp = 'data-id';\n- const { muiName } = getOptions();\n+ const { muiName, render: testRender = render } = getOptions();\nconst theme = createMuiTheme({\ncomponents: {\n[muiName]: {\n@@ -54,7 +54,7 @@ function testThemeDefaultProps(element, getOptions) {\n},\n});\n- const { container } = render(<ThemeProvider theme={theme}>{element}</ThemeProvider>);\n+ const { container } = testRender(<ThemeProvider theme={theme}>{element}</ThemeProvider>);\nexpect(container.firstChild).to.have.attribute(testProp, 'testProp');\n});\n@@ -75,8 +75,7 @@ function testThemeStyleOverrides(element, getOptions) {\nif (/jsdom/.test(window.navigator.userAgent)) {\nthis.skip();\n}\n-\n- const { muiName, testStateOverrides } = getOptions();\n+ const { muiName, testStateOverrides, render: testRender = render } = getOptions();\nif (!testStateOverrides) {\nreturn;\n@@ -96,13 +95,14 @@ function testThemeStyleOverrides(element, getOptions) {\n},\n});\n- const { container } = render(\n+ const { container } = testRender(\n<ThemeProvider theme={theme}>\n{React.cloneElement(element, {\n[testStateOverrides.prop]: testStateOverrides.value,\n})}\n</ThemeProvider>,\n);\n+\nexpect(container.firstChild).to.toHaveComputedStyle(testStyle);\n});\n@@ -111,7 +111,7 @@ function testThemeStyleOverrides(element, getOptions) {\nthis.skip();\n}\n- const { muiName, testDeepOverrides } = getOptions();\n+ const { muiName, testDeepOverrides, render: testRender = render } = getOptions();\nconst testStyle = {\nmarginTop: '13px',\n@@ -139,7 +139,7 @@ function testThemeStyleOverrides(element, getOptions) {\n},\n});\n- const { container } = render(<ThemeProvider theme={theme}>{element}</ThemeProvider>);\n+ const { container } = testRender(<ThemeProvider theme={theme}>{element}</ThemeProvider>);\nexpect(container.firstChild).to.toHaveComputedStyle(testStyle);\n@@ -166,7 +166,7 @@ function testThemeStyleOverrides(element, getOptions) {\n},\n});\n- const { container: containerWithoutRootOverrides } = render(\n+ const { container: containerWithoutRootOverrides } = testRender(\n<ThemeProvider theme={themeWithoutRootOverrides}>{element}</ThemeProvider>,\n);\n@@ -198,7 +198,7 @@ function testThemeVariants(element, getOptions) {\nthis.skip();\n}\n- const { muiName, testVariantProps = {} } = getOptions();\n+ const { muiName, testVariantProps = {}, render: testRender = render } = getOptions();\nconst testStyle = {\nmarginTop: '13px',\n@@ -217,7 +217,7 @@ function testThemeVariants(element, getOptions) {\n},\n});\n- const { getByTestId } = render(\n+ const { getByTestId } = testRender(\n<ThemeProvider theme={theme}>\n{React.cloneElement(element, { ...testVariantProps, 'data-testid': 'with-props' })}\n{React.cloneElement(element, { 'data-testid': 'without-props' })}\n",
        "sim_msg_0": "[test] Conformance to handle wrapped elements",
        "sim_diff_1": "diff --git a/src/screens/EventsScreen/FilterHeader.test.js b/src/screens/EventsScreen/FilterHeader.test.js @@ -3,6 +3,8 @@ import React from \"react\";\nimport { shallow } from \"enzyme\";\nimport FilterHeader from \"./FilterHeader\";\nimport type { Props as ComponentProps } from \"./FilterHeader\";\n+import FilterHeaderButton from \"./FilterHeaderButton\";\n+import FilterHeaderCategories from \"./FilterHeaderCategories\";\nconst render = (\nprops: ComponentProps = {\n@@ -79,3 +81,52 @@ describe(\"renders correctly\", () => {\nexpect(output).toMatchSnapshot();\n});\n});\n+\n+describe(\"filter buttons\", () => {\n+ it(\"calls onFilterCategoriesPress when users presses categories filter button\", () => {\n+ const mock = jest.fn();\n+ const output = render({\n+ dateFilter: null,\n+ selectedCategories: new Set(),\n+ onFilterCategoriesPress: mock,\n+ onFilterButtonPress: () => {},\n+ onDateFilterButtonPress: () => {},\n+ numTagFiltersSelected: 0\n+ });\n+ output.find(FilterHeaderCategories).prop(\"onFilterPress\")();\n+\n+ expect(mock).toBeCalledWith();\n+ });\n+\n+ it(\"calls onDateFilterButtonPress when users presses date filter button\", () => {\n+ const mock = jest.fn();\n+ const output = render({\n+ dateFilter: null,\n+ selectedCategories: new Set(),\n+ onFilterCategoriesPress: () => {},\n+ onFilterButtonPress: () => {},\n+ onDateFilterButtonPress: mock,\n+ numTagFiltersSelected: 0\n+ });\n+ const button = output.find(FilterHeaderButton).at(0);\n+ button.simulate(\"press\");\n+\n+ expect(mock).toBeCalledWith();\n+ });\n+\n+ it(\"calls onFilterButtonPress when users presses attribute filter button\", () => {\n+ const mock = jest.fn();\n+ const output = render({\n+ dateFilter: null,\n+ selectedCategories: new Set(),\n+ onFilterCategoriesPress: () => {},\n+ onFilterButtonPress: mock,\n+ onDateFilterButtonPress: () => {},\n+ numTagFiltersSelected: 0\n+ });\n+ const button = output.find(FilterHeaderButton).at(1);\n+ button.simulate(\"press\");\n+\n+ expect(mock).toBeCalledWith();\n+ });\n+});\n",
        "sim_msg_1": "add tests for various filter buttons on EventsScreen;",
        "sim_diff_2": "diff --git a/assets/js/react-shim.test.js b/assets/js/react-shim.test.js @@ -24,7 +24,7 @@ import reactDefault, * as react from 'react';\n/**\n* Internal dependencies\n*/\n-import reachShimDefault, * as reactShim from './react-shim';\n+import reactShimDefault, * as reactShim from './react-shim';\ndescribe( 'react shim', () => {\nit( 'mirrors all exports from the react package', () => {\n@@ -35,6 +35,6 @@ describe( 'react shim', () => {\n} );\nit( 'mirrors the default export', () => {\n- expect( reactDefault ).toEqual( reachShimDefault );\n+ expect( reactDefault ).toEqual( reactShimDefault );\n} );\n} );\n",
        "sim_msg_2": "Fix typo in react shim test.",
        "sim_diff_3": "diff --git a/assets/js/react-shim.test.js b/assets/js/react-shim.test.js /**\n* External dependencies\n*/\n-import * as react from 'react';\n+import reactDefault, * as react from 'react';\n/**\n* Internal dependencies\n*/\n-import * as reactShim from './react-shim';\n+import reachShimDefault, * as reactShim from './react-shim';\ndescribe( 'react shim', () => {\nit( 'mirrors all exports from the react package', () => {\n@@ -33,4 +33,8 @@ describe( 'react shim', () => {\nexpect( shimExports ).toEqual( realExports );\n} );\n+\n+ it( 'mirrors the default export', () => {\n+ expect( reactDefault ).toEqual( reachShimDefault );\n+ } );\n} );\n",
        "sim_msg_3": "Add default export test."
    },
    {
        "org_diff": "diff --git a/scripts/jest/setupTests.js b/a/scripts/jest/setupTests.js @@ -241,7 +241,7 @@ if (process.env.REACT_CLASS_EQUIVALENCE_TEST) {\n     global.Error = ErrorProxy;\n   }\n \n-  const expectTestToFail = async (callback, errorMsg) => {\n+  const expectTestToFail = async (callback, error) => {\n     if (callback.length > 0) {\n       throw Error(\n         'Gated test helpers do not support the `done` callback. Return a ' +\n@@ -261,12 +261,12 @@ if (process.env.REACT_CLASS_EQUIVALENCE_TEST) {\n       // `afterEach` like we normally do. `afterEach` is too late because if it\n       // throws, we won't have captured it.\n       flushAllUnexpectedConsoleCalls();\n-    } catch (error) {\n+    } catch (testError) {\n       // Failed as expected\n       resetAllUnexpectedConsoleCalls();\n       return;\n     }\n-    throw Error(errorMsg);\n+    throw error;\n   };\n \n   const gatedErrorMessage = 'Gated test was expected to fail, but it passed.';\n@@ -284,8 +284,10 @@ if (process.env.REACT_CLASS_EQUIVALENCE_TEST) {\n     if (shouldPass) {\n       test(testName, callback);\n     } else {\n+      const error = new Error(gatedErrorMessage);\n+      Error.captureStackTrace(error, global._test_gate);\n       test(`[GATED, SHOULD FAIL] ${testName}`, () =>\n-        expectTestToFail(callback, gatedErrorMessage));\n+        expectTestToFail(callback, error));\n     }\n   };\n   global._test_gate_focus = (gateFn, testName, callback) => {\n@@ -302,8 +304,10 @@ if (process.env.REACT_CLASS_EQUIVALENCE_TEST) {\n     if (shouldPass) {\n       test.only(testName, callback);\n     } else {\n+      const error = new Error(gatedErrorMessage);\n+      Error.captureStackTrace(error, global._test_gate_focus);\n       test.only(`[GATED, SHOULD FAIL] ${testName}`, () =>\n-        expectTestToFail(callback, gatedErrorMessage));\n+        expectTestToFail(callback, error));\n     }\n   };\n ",
        "sim_diff_0": "diff --git a/test/README.md b/test/README.md @@ -26,14 +26,15 @@ For all unit tests, please use the return value from `test/utils/createRenderer`\nIt prepares the test suite and returns a function with the same interface as\n[`render` from `@testing-library/react`](https://testing-library.com/docs/react-testing-library/api#render).\n-````js\n+```js\ndescribe('test suite', () => {\n- const { render } = createRenderer()\n+ const { render } = createRenderer();\ntest('first', () => {\nrender(<input />);\n});\n-})\n+});\n+```\nFor new tests please use `expect` from the BDD testing approach. Prefer to use as expressive [matchers](https://www.chaijs.com/api/bdd/) as possible. This keeps\nthe tests readable, and, more importantly, the message if they fail as descriptive as possible.\n@@ -85,7 +86,7 @@ function SomeComponent({ variant }) {\nexpect(() => {\nrender(<SomeComponent variant=\"unexpected\" />);\n}).toErrorDev([\"That variant doesn't make sense.\", '`variant` is deprecated.']);\n-````\n+```\n```js\nfunction SomeComponent({ variant }) {\n",
        "sim_msg_0": "End code block in test/README.md",
        "sim_diff_1": "diff --git a/src/utils/__tests__/initilizerTests.js b/src/utils/__tests__/initilizerTests.js @@ -5,14 +5,7 @@ import init from '../initializer';\nimport { getColumnProperties } from '../columnUtils';\nimport { getRowProperties } from '../rowUtils';\n-test('init succeeds given empty defaults and props', (assert) => {\n- const ctx = { props: {} };\n- const defaults = {};\n-\n- const res = init.call(ctx, defaults);\n- assert.truthy(res);\n-\n- assert.deepEqual(res.initialState, {\n+const expectedDefaultInitialState = {\ndata: [],\npageProperties: {},\nrenderProperties: {\n@@ -21,7 +14,16 @@ test('init succeeds given empty defaults and props', (assert) => {\n},\nsortProperties: {},\nstyleConfig: {},\n- });\n+};\n+\n+test('init succeeds given empty defaults and props', (assert) => {\n+ const ctx = { props: {} };\n+ const defaults = {};\n+\n+ const res = init.call(ctx, defaults);\n+ assert.truthy(res);\n+\n+ assert.deepEqual(res.initialState, expectedDefaultInitialState);\nassert.is(typeof res.reducers, 'function');\nassert.deepEqual(res.reducers({}, { type: 'REDUCE' }), {});\n@@ -51,14 +53,11 @@ test('init returns defaults given minimum props', (assert) => {\nassert.truthy(res);\nassert.deepEqual(res.initialState, {\n+ ...expectedDefaultInitialState,\n+\ninit: true,\ndata: ctx.props.data,\npageProperties: defaults.pageProperties,\n- renderProperties: {\n- rowProperties: null,\n- columnProperties: {},\n- },\n- sortProperties: {},\nstyleConfig: defaults.styleConfig,\n});\n@@ -186,3 +185,33 @@ test('init returns merged initialState.styleConfig given props (plugins, user)',\n},\n});\n});\n+\n+test('init returns expected extra initialState given props (plugins, user)', (assert) => {\n+ const ctx = {\n+ props: {\n+ plugins: [\n+ { initialState: { plugin: 0, user: false } },\n+ { initialState: { plugin: 1 } },\n+ ],\n+ user: true,\n+ },\n+ };\n+ const defaults = {\n+ initialState: {\n+ defaults: true,\n+ user: false,\n+ plugin: false,\n+ }\n+ };\n+\n+ const res = init.call(ctx, defaults);\n+ assert.truthy(res);\n+\n+ assert.deepEqual(res.initialState, {\n+ ...expectedDefaultInitialState,\n+\n+ defaults: true,\n+ user: true,\n+ plugin: 1,\n+ });\n+});\n",
        "sim_msg_1": "Test extra initialState props",
        "sim_diff_2": "diff --git a/generators/client/templates/react/src/test/javascript/spec/app/shared/reducers/authentication.spec.ts.ejs b/generators/client/templates/react/src/test/javascript/spec/app/shared/reducers/authentication.spec.ts.ejs @@ -38,9 +38,11 @@ describe('Authentication reducer tests', () => {\nloading: false,\nisAuthenticated: false,\nerrorMessage: null, // Errors returned from server side\n+ <%_ if (authenticationType !== 'oauth2') { _%>\nloginSuccess: false,\nloginError: false, // Errors returned from server side\nshowModalLogin: false,\n+ <%_ } _%>\nredirectMessage: null\n});\nexpect(isAccountEmpty(toTest));\n@@ -66,9 +68,11 @@ describe('Authentication reducer tests', () => {\nconst toTest = authentication(undefined, { type: SUCCESS(ACTION_TYPES.LOGIN) });\nexpect(toTest).to.contain({\nloading: false,\n+ <%_ if (authenticationType !== 'oauth2') { _%>\nloginError: false,\n- showModalLogin: false,\n- loginSuccess: true\n+ loginSuccess: true,\n+ <%_ } _%>\n+ showModalLogin: false\n});\n});\n<%_ } _%>\n@@ -129,9 +133,11 @@ describe('Authentication reducer tests', () => {\nexpect(toTest).to.contain({\nloading: false,\nisAuthenticated: false,\n+ <%_ if (authenticationType !== 'oauth2') { _%>\nloginSuccess: false,\n- errorMessage: null,\nloginError: false,\n+ <%_ } _%>\n+ errorMessage: null,\nredirectMessage: null,\nshowModalLogin: true\n});\n@@ -144,9 +150,11 @@ describe('Authentication reducer tests', () => {\nexpect(toTest).to.contain({\nloading: false,\nisAuthenticated: false,\n+ <%_ if (authenticationType !== 'oauth2') { _%>\nloginSuccess: false,\n- errorMessage: null,\nloginError: false,\n+ <%_ } _%>\n+ errorMessage: null,\nredirectMessage: message,\nshowModalLogin: true\n});\n",
        "sim_msg_2": "fix auth reducer test when using oauth2",
        "sim_diff_3": "diff --git a/test/jest-setup-test-framework.js b/test/jest-setup-test-framework.js let config = require('../src/common/config');\n+let testConfig = require('./config/config.js');\nlet { Model } = require('objection');\nlet Knex = require('knex');\nlet knex;\n@@ -19,3 +20,5 @@ afterAll(async () => {\nawait knex.destroy();\nModel.knex(null);\n});\n+\n+testConfig.consoleNotes();\n",
        "sim_msg_3": "fix(e2e): add console notes on test suite"
    },
    {
        "org_diff": "diff --git a/scripts/flags/flags.js b/a/scripts/flags/flags.js @@ -318,11 +318,15 @@ for (const flag of allFlagsUniqueFlags) {\n let sorted = table;\n if (isDiff || argv.sort) {\n   const sortChannel = argToHeader(isDiff ? argv.diff[0] : argv.sort);\n-  sorted = Object.fromEntries(\n-    Object.entries(table).sort(([, rowA], [, rowB]) =>\n-      rowB[sortChannel].toString().localeCompare(rowA[sortChannel])\n-    )\n-  );\n+  const sortBy =\n+    sortChannel === 'flag'\n+      ? ([flagA], [flagB]) => {\n+          return flagA.localeCompare(flagB);\n+        }\n+      : ([, rowA], [, rowB]) => {\n+          return rowB[sortChannel].toString().localeCompare(rowA[sortChannel]);\n+        };\n+  sorted = Object.fromEntries(Object.entries(table).sort(sortBy));\n }\n \n if (argv.csv) {",
        "sim_diff_0": "diff --git a/ui/src/components/table/table-sort.js b/ui/src/components/table/table-sort.js @@ -38,7 +38,7 @@ export default {\nreturn sortDate(A, B) * dir\n}\nif (typeof A === 'boolean' && typeof B === 'boolean') {\n- return (a - b) * dir\n+ return (A - B) * dir\n}\n[A, B] = [A, B].map(s => (s + '').toLocaleString().toLowerCase())\n",
        "sim_msg_0": "Fixes issue (Sorting on Bool col fails)\nCorrects typos in commit",
        "sim_diff_1": "diff --git a/src/components/table/table-sort.js b/src/components/table/table-sort.js @@ -37,6 +37,9 @@ export default {\nif (isDate(A) && isDate(B)) {\nreturn sortDate(A, B) * dir\n}\n+ if (typeof A === 'boolean' && typeof B === 'boolean') {\n+ return (a - b) * dir\n+ }\n[A, B] = [A, B].map(s => s.toLowerCase())\n",
        "sim_msg_1": "feat: QTable - Sorting on boolean column fails",
        "sim_diff_2": "diff --git a/docs/js/script.js b/docs/js/script.js @@ -150,11 +150,14 @@ function sortByApplication(event) {\nconst targetAttr = target.getAttribute('app');\nconst allLabels = document.querySelectorAll(`.label[for=\"${targetAttr}\"]`);\nconst buttons = [...document.querySelectorAll('.sort-tool-modal__btn-choose')];\n- const targetIsActive = target.classList.contains('-active');\nconst sortedButtons = buttons.filter(button => button.classList.contains('-active'))\nconst activeApps = sortedButtons.map(button => button.getAttribute('app'));\n+ console.log(activeApps);\n+\n+ ga('send', 'event', 'Awesome design Plugins', 'Click', 'State of Platforms', activeApps.join('-'));\n+\nallLabels.forEach((label) => {\nconst toolContainer = label.parentElement.parentElement.parentElement.parentElement;\nconst list = toolContainer.parentElement;\n@@ -165,8 +168,7 @@ function sortByApplication(event) {\n} else {\ntoolContainer.classList.add('-hidden');\n}\n- // const arr = [...toolContainer.parentElement].filter(tool => !tool.classList.contains('hidden'));\n- // console.log(toolContainer.parentElement.childElementCount);\n+\nconst arr = [...list.children].filter((tool) => !tool.classList.contains('-hidden'));\nif (arr.length === 0) {\nsectionContainer.classList.add('-hidden');\n",
        "sim_msg_2": "add analytics for categories",
        "sim_diff_3": "diff --git a/vis/js/list.js b/vis/js/list.js @@ -116,10 +116,14 @@ export const list = StateMachine.create({\n});\nlist.sortBy = function(field) {\n+ let sort_field = field;\n+\n//if field (potentially) includes highlight spans, sort by original text\n- let sort_field = (Array.isArray(config.highlight_query_fields) && config.highlight_query_fields.includes(field))\n- ? (field + config.sort_field_exentsion)\n- : (field);\n+ if(config.highlight_query_terms\n+ && config.highlight_query_fields.includes(field)) {\n+ sort_field = field + config.sort_field_exentsion;\n+ }\n+\nsortBy(sort_field);\n}\n",
        "sim_msg_3": "Fixes an issue when query highlights are not defined"
    },
    {
        "org_diff": "diff --git a/packages/react-dom/src/__tests__/ReactDOMSingletonComponents-test.js b/a/packages/react-dom/src/__tests__/ReactDOMSingletonComponents-test.js @@ -996,17 +996,17 @@ describe('ReactDOM HostSingleton', () => {\n   });\n \n   // https://github.com/facebook/react/issues/26128\n-  it('(#26128) does not throw when rendering at body', async () => {\n+  it('(#26128) does not throw when rendering at body in legacy mode', async () => {\n     ReactDOM.render(<div />, document.body);\n   });\n \n   // https://github.com/facebook/react/issues/26128\n-  it('(#26128) does not throw when rendering at <html>', async () => {\n+  it('(#26128) does not throw when rendering at <html> in legacy mode', async () => {\n     ReactDOM.render(<body />, document.documentElement);\n   });\n \n   // https://github.com/facebook/react/issues/26128\n-  it('(#26128) does not throw when rendering at document', async () => {\n+  it('(#26128) does not throw when rendering at document in legacy mode', async () => {\n     ReactDOM.render(<html />, document);\n   });\n });",
        "sim_diff_0": "diff --git a/test/html-to-react.js b/test/html-to-react.js @@ -137,5 +137,20 @@ describe('HTML to React', () => {\nassert.deepEqual(preactElement, Preact.createElement('p', {}, 'foo'));\n});\n});\n+\n+ describe('htmlparser2', () => {\n+ it('parses XHTML with xmlMode enabled', () => {\n+ // using self-closing syntax (`/>`) for non-void elements is invalid\n+ // which causes elements to nest instead of being rendered correctly\n+ // enabling htmlparser2 option xmlMode resolves this issue\n+ const html = '<ul><li/><li/></ul>';\n+ const options = { htmlparser2: { xmlMode: true } };\n+ const reactElements = parse(html, options);\n+ assert.strictEqual(\n+ render(reactElements),\n+ '<ul><li></li><li></li></ul>'\n+ );\n+ });\n+ });\n});\n});\n",
        "sim_msg_0": "test(html-to-react): add test for option htmlparser2",
        "sim_diff_1": "diff --git a/src/index.test.js b/src/index.test.js -import React from 'react'\n-import ReactDOM from 'react-dom'\n-import App from './App'\n-\nit('renders without crashing', () => {\nconst div = document.createElement('div')\n- ReactDOM.render(<App />, div)\n- ReactDOM.unmountComponentAtNode(div)\n})\n",
        "sim_msg_1": "Removed basic unit tesT",
        "sim_diff_2": "diff --git a/docs/src/modules/utils/getDemoConfig.js b/docs/src/modules/utils/getDemoConfig.js @@ -12,15 +12,14 @@ function jsDemo(demoData, options) {\n'demo.js': demoData.raw,\n'index.js': `\nimport * as React from 'react';\n-import ReactDOM from 'react-dom';\n+import ReactDOM from 'react-dom/client';\nimport { StyledEngineProvider } from '@mui/material/styles';\nimport Demo from './demo';\n-ReactDOM.render(\n+ReactDOM.createRoot(document.querySelector(\"#root\")).render(\n<StyledEngineProvider injectFirst>\n<Demo />\n- </StyledEngineProvider>,\n- document.querySelector(\"#root\")\n+ </StyledEngineProvider>\n);\n`.trim(),\n},\n@@ -38,15 +37,14 @@ function tsDemo(demoData, options) {\n'demo.tsx': demoData.raw,\n'index.tsx': `\nimport * as React from 'react';\n-import ReactDOM from 'react-dom';\n+import ReactDOM from 'react-dom/client';\nimport { StyledEngineProvider } from '@mui/material/styles';\nimport Demo from './demo';\n-ReactDOM.render(\n+ReactDOM.createRoot(document.querySelector(\"#root\")).render(\n<StyledEngineProvider injectFirst>\n<Demo />\n- </StyledEngineProvider>,\n- document.querySelector(\"#root\")\n+ </StyledEngineProvider>\n);\n`.trim(),\n'tsconfig.json': `{\n",
        "sim_msg_2": "[docs] Update demo config for React 18",
        "sim_diff_3": "diff --git a/src/components/ProductDetail/ProductDetail.test.js b/src/components/ProductDetail/ProductDetail.test.js import React from \"react\";\nimport renderer from \"react-test-renderer\";\nimport { MuiThemeProvider } from \"material-ui/styles\";\n-\n+import { Provider } from \"mobx-react\";\nimport theme from \"lib/theme/reactionTheme\";\nimport ProductDetail from \"./ProductDetail\";\nimport sampleData from \"./__mocks__/productData.mock\";\n+const uiStore = {\n+ appConfig: {\n+ publicRuntimeConfig: {\n+ externalAssetsUrl: \"\"\n+ }\n+ }\n+};\n+\ntest(\"basic snapshot\", () => {\nconst component = renderer.create((\n<MuiThemeProvider theme={theme}>\n+ <Provider uiStore={uiStore}>\n<ProductDetail catalogProduct={sampleData} />\n+ </Provider>\n</MuiThemeProvider>\n));\nconst tree = component.toJSON();\n",
        "sim_msg_3": "test: add mock uiStore to fix test"
    },
    {
        "org_diff": "diff --git a/fixtures/flight/server/global.js b/a/fixtures/flight/server/global.js @@ -37,6 +37,7 @@ const React = require('react');\n \n const {renderToPipeableStream} = require('react-dom/server');\n const {createFromNodeStream} = require('react-server-dom-webpack/client');\n+const {PassThrough} = require('stream');\n \n const app = express();\n \n@@ -146,34 +147,33 @@ app.all('/', async function (req, res, next) {\n       // so we start by consuming the RSC payload. This needs a module\n       // map that reverse engineers the client-side path to the SSR path.\n \n-      // This is a bad hack to set the form state after SSR has started. It works\n-      // because we block the root component until we have the form state and\n-      // any form that reads it necessarily will come later. It also only works\n-      // because the formstate type is an object which may change in the future\n-      const lazyFormState = [];\n-\n-      let cachedResult = null;\n-      async function getRootAndFormState() {\n-        const {root, formState} = await createFromNodeStream(\n-          rscResponse,\n-          ssrManifest\n-        );\n-        // We shouldn't be assuming formState is an object type but at the moment\n-        // we have no way of setting the form state from within the render\n-        Object.assign(lazyFormState, formState);\n-        return root;\n-      }\n+      // We need to get the formState before we start rendering but we also\n+      // need to run the Flight client inside the render to get all the preloads.\n+      // The API is ambivalent about what's the right one so we need two for now.\n+\n+      // Tee the response into two streams so that we can do both.\n+      const rscResponse1 = new PassThrough();\n+      const rscResponse2 = new PassThrough();\n+\n+      rscResponse.pipe(rscResponse1);\n+      rscResponse.pipe(rscResponse2);\n+\n+      const {formState} = await createFromNodeStream(rscResponse1, ssrManifest);\n+      rscResponse1.end();\n+\n+      let cachedResult;\n       let Root = () => {\n         if (!cachedResult) {\n-          cachedResult = getRootAndFormState();\n+          // Read this stream inside the render.\n+          cachedResult = createFromNodeStream(rscResponse2, ssrManifest);\n         }\n-        return React.use(cachedResult);\n+        return React.use(cachedResult).root;\n       };\n       // Render it into HTML by resolving the client components\n       res.set('Content-type', 'text/html');\n       const {pipe} = renderToPipeableStream(React.createElement(Root), {\n         bootstrapScripts: mainJSChunks,\n-        formState: lazyFormState,\n+        formState: formState,\n       });\n       pipe(res);\n     } catch (e) {",
        "sim_diff_0": "diff --git a/runtime.js b/runtime.js @@ -21,6 +21,7 @@ import {portalMaterial} from './shaders.js';\nimport fx from './fx.js';\nimport hpManager from './hp-manager.js';\nimport npcManager from './npc-manager.js';\n+import {makeAppContextObject} from './api.js';\nimport {baseUnit, rarityColors} from './constants.js';\nconst localVector = new THREE.Vector3();\n@@ -309,6 +310,39 @@ const _loadRtfjs = async (file, {contentId = null, instanceId = null, parentUrl\nconst fn = m.default;\n// console.log('got fn', fn);\n+ const o = new THREE.Object3D();\n+ o.contentId = contentId;\n+ o.isRtfjs = true;\n+ o.getPhysicsIds = () => app.physicsIds;\n+ o.destroy = () => {\n+ appManager.destroyApp(appId);\n+\n+ (async () => {\n+ const roots = ReactThreeFiber._roots;\n+ const root = roots.get(rootDiv);\n+ const fiber = root?.fiber\n+ if (fiber) {\n+ const state = root?.store.getState()\n+ if (state) state.internal.active = false\n+ await new Promise((accept, reject) => {\n+ ReactThreeFiber.reconciler.updateContainer(null, fiber, null, () => {\n+ if (state) {\n+ // setTimeout(() => {\n+ state.events.disconnect?.()\n+ // state.gl?.renderLists?.dispose?.()\n+ // state.gl?.forceContextLoss?.()\n+ ReactThreeFiber.dispose(state)\n+ roots.delete(canvas)\n+ // if (callback) callback(canvas)\n+ // }, 500)\n+ }\n+ accept();\n+ });\n+ });\n+ }\n+ })();\n+ };\n+\nconst renderer = getRenderer();\nconst sizeVector = renderer.getSize(new THREE.Vector2());\nconst rootDiv = document.createElement('div');\n@@ -327,7 +361,9 @@ const _loadRtfjs = async (file, {contentId = null, instanceId = null, parentUrl\n};\nReactThreeFiber.render(\n- React.createElement(fn),\n+ React.createElement(fn, {\n+ app: appContextObject,\n+ }),\nrootDiv,\n{\ngl: renderer2,\n@@ -361,38 +397,9 @@ const _loadRtfjs = async (file, {contentId = null, instanceId = null, parentUrl\napp.addEventListener('frame', e => {\n_render();\n});\n+ app.rootObject = o;\n+ const appContextObject = makeAppContextObject(app);\n- const o = new THREE.Object3D();\n- o.contentId = contentId;\n- o.isRtfjs = true;\n- o.destroy = () => {\n- appManager.destroyApp(appId);\n-\n- (async () => {\n- const roots = ReactThreeFiber._roots;\n- const root = roots.get(rootDiv);\n- const fiber = root?.fiber\n- if (fiber) {\n- const state = root?.store.getState()\n- if (state) state.internal.active = false\n- await new Promise((accept, reject) => {\n- ReactThreeFiber.reconciler.updateContainer(null, fiber, null, () => {\n- if (state) {\n- // setTimeout(() => {\n- state.events.disconnect?.()\n- // state.gl?.renderLists?.dispose?.()\n- // state.gl?.forceContextLoss?.()\n- ReactThreeFiber.dispose(state)\n- roots.delete(canvas)\n- // if (callback) callback(canvas)\n- // }, 500)\n- }\n- accept();\n- });\n- });\n- }\n- })();\n- };\nreturn o;\n};\n",
        "sim_msg_0": "New app physics loop",
        "sim_diff_1": "diff --git a/src/components/dashboard/__tests__/Dashboard.js b/src/components/dashboard/__tests__/Dashboard.js @@ -6,7 +6,7 @@ import renderer from 'react-test-renderer'\nimport GDStore from '../../../lib/undux/GDStore'\nimport { getComponentWithMocks } from './__util__'\n-\n+import userStorage from '../../../lib/gundb/UserStorage'\nconst { Container } = GDStore\nconst routes = {\n@@ -27,14 +27,16 @@ class AppNavigation extends React.Component<AppNavigationProps, AppNavigationSta\n}\ndescribe('Dashboard', () => {\n- it('renders without errors', () => {\n+ it('renders without errors', async () => {\n+ await userStorage.ready\nconst WebRouter = createBrowserApp(createSwitchNavigator({ AppNavigation }))\nconst tree = renderer.create(<WebRouter />)\nexpect(tree.toJSON()).toBeTruthy()\n})\n- it('matches snapshot', () => {\n+ it('matches snapshot', async () => {\n+ await userStorage.ready\nconst WebRouter = createBrowserApp(createSwitchNavigator({ AppNavigation }))\nconst component = renderer.create(<WebRouter />)\n",
        "sim_msg_1": "fix: dashboard unit test",
        "sim_diff_2": "diff --git a/generators/client/templates/react/src/main/webapp/app/index.tsx.ejs b/generators/client/templates/react/src/main/webapp/app/index.tsx.ejs limitations under the License.\n-%>\nimport React from 'react';\n-import ReactDOM from 'react-dom';\n+import { createRoot } from 'react-dom/client';\nimport { Provider } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n@@ -42,18 +42,17 @@ setupAxiosInterceptors(() => actions.clearAuthentication('login.error.unauthoriz\nloadIcons();\nconst rootEl = document.getElementById('root');\n+const root = createRoot(rootEl);\nconst render = Component =>\n- // eslint-disable-next-line react/no-render-return-value\n- ReactDOM.render(\n+ root.render(\n<ErrorBoundary>\n<Provider store={store}>\n<div>\n<Component />\n</div>\n</Provider>\n- </ErrorBoundary>,\n- rootEl\n+ </ErrorBoundary>\n);\nrender(AppComponent);\n",
        "sim_msg_2": "[React] Switch to createroot",
        "sim_diff_3": "diff --git a/src/components/Form.jsx b/src/components/Form.jsx -import React, {useEffect} from 'react';\n+import React, {useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport EventEmitter from 'eventemitter2';\nimport AllComponents from 'formiojs/components';\n@@ -10,7 +10,7 @@ import FormioForm from 'formiojs/Form';\nlet instance;\nlet createPromise;\nlet element;\n- let formio;\n+ const [formio, setFormio] = useState(undefined);\nuseEffect(() => () => formio ? formio.destroy(true) : null, [formio]);\n@@ -18,7 +18,7 @@ import FormioForm from 'formiojs/Form';\nconst {options = {}, formioform, formReady} = props;\ninstance = new (formioform || FormioForm)(element, srcOrForm, options);\ncreatePromise = instance.ready.then(formioInstance => {\n- formio = formioInstance;\n+ setFormio(formioInstance);\nif (formReady) {\nformReady(formioInstance);\n}\n@@ -42,7 +42,7 @@ import FormioForm from 'formiojs/Form';\nif (createPromise) {\ninstance.onAny(onAnyEvent);\ncreatePromise.then(() => {\n- if (submission) {\n+ if (formio && submission) {\nformio.submission = submission;\n}\n});\n@@ -53,7 +53,9 @@ import FormioForm from 'formiojs/Form';\nconst {src} = props;\nif (src) {\ncreateWebformInstance(src).then(() => {\n+ if (formio) {\nformio.src = src;\n+ }\n});\ninitializeFormio();\n}\n@@ -63,11 +65,13 @@ import FormioForm from 'formiojs/Form';\nconst {form, url} = props;\nif (form) {\ncreateWebformInstance(form).then(() => {\n+ if (formio) {\nformio.form = form;\nif (url) {\nformio.url = url;\n}\nreturn formio;\n+ }\n});\ninitializeFormio();\n}\n",
        "sim_msg_3": "Change the way formio being stored"
    },
    {
        "org_diff": "diff --git a/scripts/rollup/build.js b/a/scripts/rollup/build.js @@ -575,6 +575,9 @@ function getPlugins(\n           sourcemapAfterClosure.sources = [preMinifiedFilename];\n           sourcemapAfterClosure.file = filename;\n \n+          // All our code is considered \"third-party\" and should be ignored by default.\n+          sourcemapAfterClosure.ignoreList = [0];\n+\n           // We'll write the pre-minified source to disk as a separate file.\n           // Because it sits on disk, there's no need to have it in the `sourcesContent` array.\n           // That also makes the file easier to read, and available for use by scripts.",
        "sim_diff_0": "diff --git a/scripts/docs.js b/scripts/docs.js @@ -68,17 +68,17 @@ const markdownFiles = [\n// Generate docs\nmarkdownMagic(markdownFiles, config, () => {\n/* Fix newline MDX TOC issue #https://github.com/mdx-js/mdx/issues/184#issuecomment-416093951 */\n- const processedDocs = globby.sync([\n- 'docs/**/**.md',\n- ])\n-\n- processedDocs.map((f) => {\n- const filePath = path.resolve(f)\n- const fileContents = fs.readFileSync(filePath, 'utf8')\n-\n- const updatedContents = fileContents.replace('<!-- AUTO-GENERATED-CONTENT:END -->', '\\n<!-- AUTO-GENERATED-CONTENT:END -->')\n- fs.writeFileSync(filePath, updatedContents)\n- })\n+ // const processedDocs = globby.sync([\n+ // 'docs/**/**.md',\n+ // ])\n+ //\n+ // processedDocs.map((f) => {\n+ // const filePath = path.resolve(f)\n+ // const fileContents = fs.readFileSync(filePath, 'utf8')\n+ //\n+ // const updatedContents = fileContents.replace('<!-- AUTO-GENERATED-CONTENT:END -->', '\\n<!-- AUTO-GENERATED-CONTENT:END -->')\n+ // fs.writeFileSync(filePath, updatedContents)\n+ // })\nconsole.log('Docs updated!')\n})\n",
        "sim_msg_0": "disable newline",
        "sim_diff_1": "diff --git a/ui/build/script.build.javascript.js b/ui/build/script.build.javascript.js @@ -31,6 +31,42 @@ const rollupPluginsModern = [\nnodeResolve()\n]\n+const uglifyJsOptions = {\n+ compress: {\n+ // turn off flags with small gains to speed up minification\n+ arrows: false,\n+ collapse_vars: false,\n+ comparisons: false,\n+ computed_props: false,\n+ hoist_funs: false,\n+ hoist_props: false,\n+ hoist_vars: false,\n+ inline: false,\n+ loops: false,\n+ negate_iife: false,\n+ properties: false,\n+ reduce_funcs: false,\n+ reduce_vars: false,\n+ switches: false,\n+ toplevel: false,\n+ typeofs: false,\n+\n+ // a few flags with noticable gains/speed ratio\n+ booleans: true,\n+ if_return: true,\n+ sequences: true,\n+ unused: true,\n+\n+ // required features to drop conditional branches\n+ conditionals: true,\n+ dead_code: true,\n+ evaluate: true\n+ },\n+ mangle: {\n+ safari10: true\n+ }\n+}\n+\nconst builds = [\n{ // Generic prod entry (client-side only; NOT used by Quasar CLI)\nrollup: {\n@@ -239,11 +275,7 @@ function buildEntry (config) {\nreturn code\n}\n- const minified = uglify.minify(code, {\n- compress: {\n- ecma: 6\n- }\n- })\n+ const minified = uglify.minify(code, uglifyJsOptions)\nif (minified.error) {\nreturn Promise.reject(minified.error)\n",
        "sim_msg_1": "fix(ui/build): Minify options",
        "sim_diff_2": "diff --git a/ui/build/script.build.javascript.js b/ui/build/script.build.javascript.js @@ -19,9 +19,13 @@ const bubleConfig = {\nobjectAssign: 'Object.assign'\n}\n-const rollupPlugins = [\n+const rollupPluginsModern = [\nnodeResolve(),\n- json(),\n+ json()\n+]\n+\n+const rollupPluginsLegacy = [\n+ ...rollupPluginsModern,\nbuble(bubleConfig)\n]\n@@ -36,7 +40,11 @@ const builds = [\nformat: 'es'\n}\n},\n- build: { minified: true, minExt: false }\n+ build: {\n+ minified: true,\n+ minExt: false,\n+ modern: true\n+ }\n},\n{\nrollup: {\n@@ -50,7 +58,8 @@ const builds = [\n},\nbuild: {\nminified: true,\n- minExt: false\n+ minExt: false,\n+ modern: true\n}\n},\n{\n@@ -63,7 +72,10 @@ const builds = [\nformat: 'es'\n}\n},\n- build: { minified: true, minExt: false }\n+ build: {\n+ minified: true,\n+ minExt: false\n+ }\n},\n{\nrollup: {\n@@ -75,7 +87,9 @@ const builds = [\nformat: 'umd'\n}\n},\n- build: { minified: true }\n+ build: {\n+ minified: true\n+ }\n},\n{\nrollup: {\n@@ -91,6 +105,22 @@ const builds = [\nunminified: true,\nminified: true\n}\n+ },\n+ {\n+ rollup: {\n+ input: {\n+ input: resolve(`src/index.umd.js`)\n+ },\n+ output: {\n+ file: resolve(`dist/quasar.umd.modern.js`),\n+ format: 'umd'\n+ }\n+ },\n+ build: {\n+ unminified: true,\n+ minified: true,\n+ modern: true\n+ }\n}\n]\n@@ -126,7 +156,9 @@ function build (builds) {\n}\nfunction genConfig (opts) {\n- opts.rollup.input.plugins = rollupPlugins\n+ opts.rollup.input.plugins = opts.build.modern === true\n+ ? rollupPluginsModern\n+ : rollupPluginsLegacy\nopts.rollup.input.external = opts.rollup.input.external || []\nopts.rollup.input.external.push('vue')\n",
        "sim_msg_2": "feat(ui): Modern mode assets",
        "sim_diff_3": "diff --git a/rollup.config.js b/rollup.config.js @@ -20,11 +20,11 @@ export default {\n],\nplugins: [\nglslify(),\n+ commonjs(),\nresolve({\nbrowser: true,\npreferBuiltins: false\n}),\n- commonjs(),\ncopy({\ntargets: [\n{\n",
        "sim_msg_3": "Swap order of commonjs and resolve"
    },
    {
        "org_diff": "diff --git a/packages/react-devtools-shared/src/devtools/views/hooks.js b/a/packages/react-devtools-shared/src/devtools/views/hooks.js @@ -219,15 +219,18 @@ export function useModalDismissSignal(\n       return () => {};\n     }\n \n-    const handleDocumentKeyDown = (event: any) => {\n+    const handleRootNodeKeyDown = (event: KeyboardEvent) => {\n       if (event.key === 'Escape') {\n         dismissCallback();\n       }\n     };\n \n-    const handleDocumentClick = (event: any) => {\n+    const handleRootNodeClick: MouseEventHandler = event => {\n       if (\n         modalRef.current !== null &&\n+        /* $FlowExpectedError[incompatible-call] Instead of dealing with possibly multiple realms\n+         and multiple Node references to comply with Flow (e.g. checking with `event.target instanceof Node`)\n+         just delegate it to contains call */\n         !modalRef.current.contains(event.target)\n       ) {\n         event.stopPropagation();\n@@ -237,7 +240,7 @@ export function useModalDismissSignal(\n       }\n     };\n \n-    let ownerDocument = null;\n+    let modalRootNode = null;\n \n     // Delay until after the current call stack is empty,\n     // in case this effect is being run while an event is currently bubbling.\n@@ -248,12 +251,12 @@ export function useModalDismissSignal(\n       // It's important to listen to the ownerDocument to support the browser extension.\n       // Here we use portals to render individual tabs (e.g. Profiler),\n       // and the root document might belong to a different window.\n-      const div = modalRef.current;\n-      if (div != null) {\n-        ownerDocument = div.ownerDocument;\n-        ownerDocument.addEventListener('keydown', handleDocumentKeyDown);\n+      const modalDOMElement = modalRef.current;\n+      if (modalDOMElement != null) {\n+        modalRootNode = modalDOMElement.getRootNode();\n+        modalRootNode.addEventListener('keydown', handleRootNodeKeyDown);\n         if (dismissOnClickOutside) {\n-          ownerDocument.addEventListener('click', handleDocumentClick, true);\n+          modalRootNode.addEventListener('click', handleRootNodeClick, true);\n         }\n       }\n     }, 0);\n@@ -263,9 +266,9 @@ export function useModalDismissSignal(\n         clearTimeout(timeoutID);\n       }\n \n-      if (ownerDocument !== null) {\n-        ownerDocument.removeEventListener('keydown', handleDocumentKeyDown);\n-        ownerDocument.removeEventListener('click', handleDocumentClick, true);\n+      if (modalRootNode !== null) {\n+        modalRootNode.removeEventListener('keydown', handleRootNodeKeyDown);\n+        modalRootNode.removeEventListener('click', handleRootNodeClick, true);\n       }\n     };\n   }, [modalRef, dismissCallback, dismissOnClickOutside]);",
        "sim_diff_0": "diff --git a/source/views/panels/ModalEventHandler.js b/source/views/panels/ModalEventHandler.js import { Class } from '../../core/Core';\nimport Obj from '../../foundation/Object';\nimport '../../foundation/EventTarget'; // For Function#on\n+import ScrollView from '../containers/ScrollView';\n+\n+const inView = function ( view, event ) {\n+ let targetView = event.targetView;\n+ while ( targetView && targetView !== view ) {\n+ targetView = targetView.get( 'parentView' );\n+ }\n+ return !!targetView;\n+};\nconst ModalEventHandler = Class({\n@@ -11,15 +20,6 @@ const ModalEventHandler = Class({\nthis._seenMouseDown = false;\n},\n- inView ( event ) {\n- let targetView = event.targetView;\n- const view = this.get( 'view' );\n- while ( targetView && targetView !== view ) {\n- targetView = targetView.get( 'parentView' );\n- }\n- return !!targetView;\n- },\n-\n// If a user clicks outside the menu we want to close it. But we don't want\n// the mousedown/mouseup/click events to propagate to what's below. The\n// events fire in that order, and not all are guaranteed to fire (the user\n@@ -37,24 +37,26 @@ const ModalEventHandler = Class({\n// before hiding on click. On Android/iOS, we will not see a mousedown\n// event, so we also count a touchstart event.\nhandleMouse: function ( event ) {\n+ const view = this.get( 'view' );\nconst type = event.type;\n- let view;\n- if ( !event.seenByModal && !this.inView( event ) ) {\n+ if ( !event.seenByModal && !inView( view, event ) ) {\nevent.stopPropagation();\nif ( type === 'mousedown' ) {\nthis._seenMouseDown = true;\n} else if ( type === 'click' ) {\nevent.preventDefault();\nif ( this._seenMouseDown ) {\n- view = this.get( 'view' );\nif ( view.clickedOutside ) {\nview.clickedOutside( event );\n}\n}\n} else if ( type === 'wheel' ) {\n+ const scrollView = this.get( 'view' ).getParent( ScrollView );\n+ if ( !scrollView || !inView( scrollView, event ) ) {\nevent.preventDefault();\n}\n}\n+ }\nevent.seenByModal = true;\n}.on( 'click', 'mousedown', 'mouseup', 'tap', 'wheel' ),\n@@ -66,10 +68,10 @@ const ModalEventHandler = Class({\n}.on( 'scroll' ),\nhandleKeys: function ( event ) {\n- if ( !event.seenByModal && !this.inView( event ) ) {\n+ const view = this.get( 'view' );\n+ if ( !event.seenByModal && !inView( view, event ) ) {\nevent.stopPropagation();\n// View may be interested in key events:\n- const view = this.get( 'view' );\nif ( view.keyOutside ) {\nview.keyOutside( event );\n}\n@@ -78,7 +80,8 @@ const ModalEventHandler = Class({\n}.on( 'keypress', 'keydown', 'keyup' ),\nhandleTouch: function ( event ) {\n- if ( !event.seenByModal && !this.inView( event ) ) {\n+ const view = this.get( 'view' );\n+ if ( !event.seenByModal && !inView( view, event ) ) {\nevent.preventDefault();\nevent.stopPropagation();\n// Clicks outside should now close the modal.\n",
        "sim_msg_0": "Allow scrolling of ScrollView containing modal",
        "sim_diff_1": "diff --git a/source/views/panels/ModalEventHandler.js b/source/views/panels/ModalEventHandler.js @@ -3,14 +3,6 @@ import Obj from '../../foundation/Object';\nimport '../../foundation/EventTarget'; // For Function#on\nimport ScrollView from '../containers/ScrollView';\n-const inView = function ( view, event ) {\n- let targetView = event.targetView;\n- while ( targetView && targetView !== view ) {\n- targetView = targetView.get( 'parentView' );\n- }\n- return !!targetView;\n-};\n-\nconst ModalEventHandler = Class({\nExtends: Obj,\n@@ -20,6 +12,14 @@ const ModalEventHandler = Class({\nthis._seenMouseDown = false;\n},\n+ inView ( view, event ) {\n+ let targetView = event.targetView;\n+ while ( targetView && targetView !== view ) {\n+ targetView = targetView.get( 'parentView' );\n+ }\n+ return !!targetView;\n+ },\n+\n// If a user clicks outside the menu we want to close it. But we don't want\n// the mousedown/mouseup/click events to propagate to what's below. The\n// events fire in that order, and not all are guaranteed to fire (the user\n@@ -39,7 +39,7 @@ const ModalEventHandler = Class({\nhandleMouse: function ( event ) {\nconst view = this.get( 'view' );\nconst type = event.type;\n- if ( !event.seenByModal && !inView( view, event ) ) {\n+ if ( !event.seenByModal && !this.inView( view, event ) ) {\nevent.stopPropagation();\nif ( type === 'mousedown' ) {\nthis._seenMouseDown = true;\n@@ -52,7 +52,7 @@ const ModalEventHandler = Class({\n}\n} else if ( type === 'wheel' ) {\nconst scrollView = this.get( 'view' ).getParent( ScrollView );\n- if ( !scrollView || !inView( scrollView, event ) ) {\n+ if ( !scrollView || !this.inView( scrollView, event ) ) {\nevent.preventDefault();\n}\n}\n@@ -69,7 +69,7 @@ const ModalEventHandler = Class({\nhandleKeys: function ( event ) {\nconst view = this.get( 'view' );\n- if ( !event.seenByModal && !inView( view, event ) ) {\n+ if ( !event.seenByModal && !this.inView( view, event ) ) {\nevent.stopPropagation();\n// View may be interested in key events:\nif ( view.keyOutside ) {\n@@ -81,7 +81,7 @@ const ModalEventHandler = Class({\nhandleTouch: function ( event ) {\nconst view = this.get( 'view' );\n- if ( !event.seenByModal && !inView( view, event ) ) {\n+ if ( !event.seenByModal && !this.inView( view, event ) ) {\nevent.preventDefault();\nevent.stopPropagation();\n// Clicks outside should now close the modal.\n",
        "sim_msg_1": "Move inView fn onto ModalEventHandler prototype",
        "sim_diff_2": "diff --git a/components/evenement/event-modal.js b/components/evenement/event-modal.js @@ -25,14 +25,6 @@ function EventModal({event, date, isPassed, onClose}) {\nconst {title, address, description, href, tags, type, startHour, endHour, target, isOnlineOnly, instructions} = event\nconst {nom, numero, voie, codePostal, commune} = address\n- useEffect(() => {\n- document.body.style.overflow = 'hidden'\n-\n- return () => {\n- document.body.style.overflow = 'unset'\n- }\n- }, [])\n-\nuseEffect(() => {\nconst handleClickOutside = event => {\nif (modalRef.current && !modalRef.current.contains(event.target)) {\n",
        "sim_msg_2": "Fix overflow gap modal",
        "sim_diff_3": "diff --git a/common/hooks.js b/common/hooks.js @@ -410,3 +410,20 @@ export const useTimeout = (callback, ms, dependencies) => {\nreturn () => clearTimeout(timeoutId);\n}, dependencies);\n};\n+export const useEscapeKey = (callback) => {\n+ const handleKeyUp = React.useCallback(\n+ (e) => {\n+ if (e.key === \"Escape\") callback();\n+ },\n+ [callback]\n+ );\n+ useEventListener(\"keyup\", handleKeyUp, [handleKeyUp]);\n+};\n+\n+export const useLockScroll = ({ lock = true }) => {\n+ React.useEffect(() => {\n+ if (!lock) return;\n+ document.body.style.overflow = \"hidden\";\n+ return () => (document.body.style.overflow = \"visible\");\n+ }, [lock]);\n+};\n",
        "sim_msg_3": "feat(hooks): add useEscapeKey and useLockScroll hooks"
    },
    {
        "org_diff": "diff --git a/packages/react/package.json b/a/packages/react/package.json @@ -15,6 +15,7 @@\n     \"cjs/\",\n     \"umd/\",\n     \"jsx-runtime.js\",\n+    \"jsx-runtime.react-server.js\",\n     \"jsx-dev-runtime.js\",\n     \"react.react-server.js\"\n   ],",
        "sim_diff_0": "diff --git a/package.json b/package.json \"react\": \"^15.3.2\",\n\"react-addons-test-utils\": \"^15.3.2\",\n\"react-dom\": \"^15.3.2\",\n+ \"react-test-renderer\": \"^15.5.4\",\n\"run-sequence\": \"^1.2.2\",\n\"sass-loader\": \"^6.0.3\",\n\"sinon\": \"^2.1.0\",\n\"style-loader\": \"^0.16.1\",\n- \"webpack\": \"^2.4.1\",\n- \"webpack-dev-server\": \"^2.4.2\"\n+ \"webpack\": \"^1.13.2\",\n+ \"webpack-dev-server\": \"^1.16.1\"\n},\n\"dependencies\": {\n\"classnames\": \"^2.2.5\",\n",
        "sim_msg_0": "rollback to webpack1",
        "sim_diff_1": "diff --git a/package.json b/package.json \"react-ga\": \"^2.1.2\",\n\"react-gateway\": \"^2.6.0\",\n\"react-intl\": \"^2.1.5\",\n+ \"react-modal2\": \"^3.1.0\",\n\"react-onclickoutside\": \"^5.9.0\",\n\"react-redux\": \"^4.4.5\",\n\"react-responsive-utils\": \"^1.0.2\",\n",
        "sim_msg_1": "add react-modal2 package",
        "sim_diff_2": "diff --git a/package.json b/package.json \"react-dom\": \"^15.3.2\",\n\"react-ga\": \"^2.1.2\",\n\"react-gateway\": \"^2.6.0\",\n+ \"react-hot-loader\": \"next\",\n\"react-intl\": \"^2.1.5\",\n\"react-is-scrolling\": \"^1.0.1\",\n\"react-modal2\": \"^3.1.0\",\n\"mocha\": \"^3.0.2\",\n\"mocha-make-stub\": \"^2.3.2\",\n\"react-addons-test-utils\": \"^15.3.2\",\n- \"react-hot-loader\": \"next\",\n\"redux-mock-store\": \"^1.2.0\",\n\"webpack-dev-server\": \"^1.15.1\",\n\"webpack-hot-middleware\": \"^2.10.0\"\n",
        "sim_msg_2": "move react-hot-loader to dependencies",
        "sim_diff_3": "diff --git a/package.json b/package.json \"react-ga\": \"^2.1.2\",\n\"react-gateway\": \"^2.6.0\",\n\"react-intl\": \"^2.1.5\",\n+ \"react-onclickoutside\": \"^5.9.0\",\n\"react-redux\": \"^4.4.5\",\n\"react-responsive-utils\": \"^1.0.2\",\n\"react-router\": \"^3.0.0\",\n",
        "sim_msg_3": "add react-clickoutside package"
    },
    {
        "org_diff": "diff --git a/packages/react-server/src/ReactFlightServer.js b/a/packages/react-server/src/ReactFlightServer.js @@ -1192,12 +1192,16 @@ function renderModelDestructive(\n             // but that is able to reuse the same task if we're already in one but then that\n             // will be a lazy future value rather than guaranteed to exist but maybe that's good.\n             const newId = outlineModel(request, (value: any));\n-            return serializeLazyID(newId);\n+            return serializeByValueID(newId);\n           } else {\n             // We've already emitted this as an outlined object, so we can refer to that by its\n-            // existing ID. We use a lazy reference since, unlike plain objects, elements might\n-            // suspend so it might not have emitted yet even if we have the ID for it.\n-            return serializeLazyID(existingId);\n+            // existing ID. TODO: We should use a lazy reference since, unlike plain objects,\n+            // elements might suspend so it might not have emitted yet even if we have the ID for\n+            // it. However, this creates an extra wrapper when it's not needed. We should really\n+            // detect whether this already was emitted and synchronously available. In that\n+            // case we can refer to it synchronously and only make it lazy otherwise.\n+            // We currently don't have a data structure that lets us see that though.\n+            return serializeByValueID(existingId);\n           }\n         } else {\n           // This is the first time we've seen this object. We may never see it again",
        "sim_diff_0": "diff --git a/generators/entity-server/templates/src/main/java/package/common/save_template.ejs b/generators/entity-server/templates/src/main/java/package/common/save_template.ejs @@ -26,6 +26,7 @@ let resultEntity;\nlet mapsIdEntityInstance;\nlet mapsIdRepoInstance;\nlet otherEntityName;\n+let dataTypeName = (isUsingMapsId === true && mapsIdAssoc.otherEntityName === 'user' && authenticationType === 'oauth2') ? 'String' : 'long';\nif (isUsingMapsId === true) {\nmapsIdEntityInstance = mapsIdAssoc.otherEntityNameCapitalized.charAt(0).toLowerCase() + mapsIdAssoc.otherEntityNameCapitalized.slice(1);\n@@ -42,14 +43,14 @@ if (!viaService) {\nresultEntity = asEntity(entityInstance); _%>\n<%= asEntity(entityClass) %> <%= asEntity(entityInstance) %> = <%= dtoToEntity %>(<%= instanceName %>);\n<%_ if (isUsingMapsId === true) { _%>\n- long <%= otherEntityName %>Id = <%= instanceName %>.get<%= mapsIdAssoc.relationshipNameCapitalized %>Id();\n+ <%= dataTypeName %> <%= otherEntityName %>Id = <%= instanceName %>.get<%= mapsIdAssoc.relationshipNameCapitalized %>Id();\n<%= mapsIdRepoInstance %>.findById(<%= otherEntityName %>Id).ifPresent(<%= entityInstance%>::<%= otherEntityName %>);\n<%_ } _%>\n<%= asEntity(entityInstance) %> = <%= entityInstance %>Repository.save(<%= asEntity(entityInstance) %>);\n<%= returnPrefix %> <%= entityToDto %>(<%= asEntity(entityInstance) %>);\n<%_ } else { resultEntity = 'result'; _%>\n<%_ if (isUsingMapsId === true) { _%>\n- long <%= otherEntityName %>Id = <%= instanceName %>.get<%= mapsIdAssoc.relationshipNameCapitalized %>().getId();\n+ <%= dataTypeName %> <%= otherEntityName %>Id = <%= instanceName %>.get<%= mapsIdAssoc.relationshipNameCapitalized %>().getId();\n<%= mapsIdRepoInstance %>.findById(<%= otherEntityName %>Id).ifPresent(<%= instanceName%>::<%= otherEntityName %>);\n<%_ } _%>\n<%= returnPrefix %> <%= entityInstance %>Repository.save(<%= asEntity(entityInstance) %>);\n@@ -59,7 +60,7 @@ if (!viaService) {\nreturn result;\n<%_ }}} else { _%>\n<%_ if (isUsingMapsId === true && isController === false) { _%>\n- long <%= otherEntityName %>Id = <%= entityInstance %>.get<%= mapsIdAssoc.relationshipNameCapitalized %>().getId();\n+ <%= dataTypeName %> <%= otherEntityName %>Id = <%= entityInstance %>.get<%= mapsIdAssoc.relationshipNameCapitalized %>().getId();\n<%= mapsIdRepoInstance %>.findById(<%= otherEntityName %>Id).ifPresent(<%= entityInstance%>::<%= otherEntityName %>);\n<%_ } _%>\n<%= returnPrefix %> <%= entityInstance %>Service.save(<%= instanceName %>);\n",
        "sim_msg_0": "when using oauth and mapsid with User entity, then use string datatype",
        "sim_diff_1": "diff --git a/generators/entity-server/templates/src/main/java/package/common/save_template.ejs b/generators/entity-server/templates/src/main/java/package/common/save_template.ejs @@ -42,14 +42,14 @@ if (!viaService) {\nresultEntity = asEntity(entityInstance); _%>\n<%= asEntity(entityClass) %> <%= asEntity(entityInstance) %> = <%= dtoToEntity %>(<%= instanceName %>);\n<%_ if (isUsingMapsId === true) { _%>\n- long <%= otherEntityName %>Id = <%= instanceName %>.get<%= mapsIdAssoc.relationshipNameCapitalized %>Id();\n+ <%= pkType %> <%= otherEntityName %>Id = <%= instanceName %>.get<%= mapsIdAssoc.relationshipNameCapitalized %>Id();\n<%= mapsIdRepoInstance %>.findById(<%= otherEntityName %>Id).ifPresent(<%= entityInstance%>::<%= otherEntityName %>);\n<%_ } _%>\n<%= asEntity(entityInstance) %> = <%= entityInstance %>Repository.save(<%= asEntity(entityInstance) %>);\n<%= returnPrefix %> <%= entityToDto %>(<%= asEntity(entityInstance) %>);\n<%_ } else { resultEntity = 'result'; _%>\n<%_ if (isUsingMapsId === true) { _%>\n- long <%= otherEntityName %>Id = <%= instanceName %>.get<%= mapsIdAssoc.relationshipNameCapitalized %>().getId();\n+ <%= pkType %> <%= otherEntityName %>Id = <%= instanceName %>.get<%= mapsIdAssoc.relationshipNameCapitalized %>().getId();\n<%= mapsIdRepoInstance %>.findById(<%= otherEntityName %>Id).ifPresent(<%= instanceName%>::<%= otherEntityName %>);\n<%_ } _%>\n<%= returnPrefix %> <%= entityInstance %>Repository.save(<%= asEntity(entityInstance) %>);\n@@ -59,7 +59,7 @@ if (!viaService) {\nreturn result;\n<%_ }}} else { _%>\n<%_ if (isUsingMapsId === true && isController === false) { _%>\n- long <%= otherEntityName %>Id = <%= entityInstance %>.get<%= mapsIdAssoc.relationshipNameCapitalized %>().getId();\n+ <%= pkType %> <%= otherEntityName %>Id = <%= entityInstance %>.get<%= mapsIdAssoc.relationshipNameCapitalized %>().getId();\n<%= mapsIdRepoInstance %>.findById(<%= otherEntityName %>Id).ifPresent(<%= entityInstance%>::<%= otherEntityName %>);\n<%_ } _%>\n<%= returnPrefix %> <%= entityInstance %>Service.save(<%= instanceName %>);\n",
        "sim_msg_1": "fixes pkType for mondogodb/casandra...",
        "sim_diff_2": "diff --git a/generators/entity-server/templates/src/main/java/package/domain/Entity.java.ejs b/generators/entity-server/templates/src/main/java/package/domain/Entity.java.ejs @@ -416,6 +416,13 @@ public class <%= asEntity(entityClass) %> implements Serializable {\npublic void setId(<% if (databaseType === 'sql') { %><%= primaryKeyType %><% } %><% if (databaseType === 'mongodb' || databaseType === 'neo4j' || databaseType === 'couchbase') { %>String<% } %><% if (databaseType === 'cassandra') { %>UUID<% } %> id) {\nthis.id = id;\n}\n+\n+ <%_ if (fluentMethods) { _%>\n+ public <%= asEntity(entityClass) %> id(<% if (databaseType === 'sql') { %><%= primaryKeyType %><% } %><% if (databaseType === 'mongodb' || databaseType === 'neo4j' || databaseType === 'couchbase') { %>String<% } %><% if (databaseType === 'cassandra') { %>UUID<% } %> id) {\n+ this.id = id;\n+ return this;\n+ }\n+ <%_ } _%>\n<%_ } _%>\n<%_ for (idx in fields) {\nconst fieldType = fields[idx].fieldType;\n",
        "sim_msg_2": "Add id fluent setter",
        "sim_diff_3": "diff --git a/pro-gallery-renderer/src/components/gallery/galleryContainerNew.js b/pro-gallery-renderer/src/components/gallery/galleryContainerNew.js @@ -31,7 +31,7 @@ export class GalleryContainer extends React.Component {\ncurrentHover: -1\n};\n- this.reCreateGalleryExpensively(props, newState => {\n+ this.reCreateGalleryExpensively(props).then(newState => {\nthis.state = {\n...this.state,\n...newState,\n@@ -48,7 +48,7 @@ export class GalleryContainer extends React.Component {\n}\ncomponentDidMount() {\n- this.reCreateGalleryExpensively(this.props, newState => {\n+ this.reCreateGalleryExpensively(this.props).then(newState => {\nthis.setState(newState, () => {\nthis.getMoreItemsIfNeeded(0);\n});\n@@ -56,7 +56,9 @@ export class GalleryContainer extends React.Component {\n}\ncomponentWillReceiveProps(nextProps) {\n- this.reCreateGalleryExpensively(nextProps);\n+ this.reCreateGalleryExpensively(nextProps).then(newState => {\n+ this.setState(newState);\n+ });\nif (!!nextProps.currentIdx && nextProps.currentIdx > 0) {\nthis.scrollToItem(nextProps.currentIdx, false, true, 0);\n}\n@@ -113,7 +115,7 @@ export class GalleryContainer extends React.Component {\nreturn isNew;\n}\n- reCreateGalleryExpensively({items, styles, container, watermarkData}, callback = () => {}) {\n+ reCreateGalleryExpensively({items, styles, container, watermarkData}) {\nif (window.isMock) {\nconsole.log('[OOISSR] reCreateGalleryExpensively', {items, styles, container, watermarkData});\n@@ -122,6 +124,8 @@ export class GalleryContainer extends React.Component {\ndimentionsHelper.updateParams({styles, container});\n+ const isFullwidth = (container && container.width === '100%');\n+\nlet _items, _styles, _container, scroll, _scroll;\nitems = items || this.items;\n@@ -193,14 +197,17 @@ export class GalleryContainer extends React.Component {\nhandleNewGalleryStructure({items: _items, container: _container, styles: _styles, layout, isInfinite});\n}\n- if (isNew.any) {\n- callback(newState);\n- } else {\n- callback(this.state);\n- }\nif (utils.isVerbose()) {\nconsole.log('PROGALLERY [RENDERS] - reCreateGalleryExpensively', {isNew}, {items, styles, container, watermarkData});\n}\n+\n+ return new Promise((resolve, reject) => {\n+ if (isNew.any) {\n+ resolve(newState);\n+ } else {\n+ resolve(this.state);\n+ }\n+ });\n}\ngetScrollBase(container) {\n@@ -258,7 +265,9 @@ export class GalleryContainer extends React.Component {\nscroll: Object.assign(this.state.scroll,\n{isInfinite}\n)}, () => {\n- this.reCreateGalleryExpensively(this.props);\n+ this.reCreateGalleryExpensively(this.props).then(newState => {\n+ this.setState(newState);\n+ });\n});\n}\n@@ -282,8 +291,9 @@ export class GalleryContainer extends React.Component {\nconst newItems = await this.props.onGetItems(this.state.items.length);\nthis.reCreateGalleryExpensively({\nitems: this.items.concat(newItems.map(item => ItemsHelper.convertDtoToLayoutItem(item)) || [])\n- }, () => {\n+ }).then(newState => {\nthis.gettingMoreItems = false;\n+ this.setState(newState);\n});\n}\n}\n",
        "sim_msg_3": "[pgr] fix (galleryContainerNew): change reCreateGalleryExpensivly to promise"
    },
    {
        "org_diff": "diff --git a/packages/shared/ReactFeatureFlags.js b/a/packages/shared/ReactFeatureFlags.js @@ -15,8 +15,6 @@\n \n export const enableComponentStackLocations = true;\n \n-export const enableServerComponentKeys = __EXPERIMENTAL__;\n-\n // -----------------------------------------------------------------------------\n // Killswitch\n //\n@@ -169,6 +167,9 @@ export const enableFilterEmptyStringAttributesDOM = __NEXT_MAJOR__;\n // Disabled caching behavior of `react/cache` in client runtimes.\n export const disableClientCache = false;\n \n+// Changes Server Components Reconciliation when they have keys\n+export const enableServerComponentKeys = __NEXT_MAJOR__;\n+\n // -----------------------------------------------------------------------------\n // Chopping Block\n //",
        "sim_diff_0": "diff --git a/components/App.js b/components/App.js @@ -326,7 +326,7 @@ export const App = (props) => {\n`;\n}\n-export const updateProps = (newProps, cb) => {\n+export const updateProps = newProps => {\nconst appContainer = document.getElementById('appContainer');\nfor (let k in newProps) {\nappState[k] = newProps[k];\n@@ -343,18 +343,14 @@ export const updateProps = (newProps, cb) => {\nappContainer.innerHTML = App(appState);\nsetBindings(appContainer, onclickBindings);\n}\n- if (cb) {\n- cb();\n- }\n}\nwindow.addEventListener('stateChanged', (e) => {\nconst changedState = getSpecificState(e.detail.changedKeys);\n- const cb = e.detail.cb ? e.detail.cb : null;\nfor (let k in changedState) {\nappState[k] = changedState[k];\n}\n- updateProps(changedState, cb);\n+ updateProps(changedState);\n})\nwindow.addEventListener('load', () => {\n",
        "sim_msg_0": "Remove cb from App.js",
        "sim_diff_1": "diff --git a/packages/component-library/src/Sandbox/Sandbox.js b/packages/component-library/src/Sandbox/Sandbox.js @@ -17,7 +17,31 @@ const baseMapWrapper = css(`\n}\n`);\n-const Sandbox = ({\n+class Sandbox extends React.Component {\n+ constructor(props) {\n+ super();\n+ this.state = {\n+ baseMapStyle: \"light\",\n+ baseMapStyleUrl: \"mapbox://styles/hackoregon/cjiazbo185eib2srytwzleplg\"\n+ };\n+ this.handleBaseMapStyleChange = this.handleBaseMapStyleChange.bind(this);\n+ }\n+\n+ handleBaseMapStyleChange = baseMapStyleChangeEvent => {\n+ baseMapStyleChangeEvent.target.value === \"light\"\n+ ? this.setState({\n+ baseMapStyle: \"light\",\n+ baseMapStyleUrl:\n+ \"mapbox://styles/hackoregon/cjiazbo185eib2srytwzleplg\"\n+ })\n+ : this.setState({\n+ baseMapStyle: \"dark\",\n+ baseMapStyleUrl: \"mapbox://styles/mapbox/dark-v9\"\n+ });\n+ };\n+\n+ render() {\n+ const {\ndata,\nlayerData,\ndefaultFoundation,\n@@ -40,7 +64,8 @@ const Sandbox = ({\ntooltipInfo,\nallSlides,\nfoundationMapProps\n-}) => {\n+ } = this.props;\n+\nreturn (\n<div className={styles}>\n<div\n@@ -81,7 +106,7 @@ const Sandbox = ({\n<div className={baseMapWrapper}>\n<BaseMap\n- mapboxStyle={\"mapbox://styles/mapbox/light-v9\"}\n+ mapboxStyle={this.state.baseMapStyleUrl}\ninitialZoom={10.5}\ninitialLatitude={45.5431}\ninitialLongitude={-122.5765}\n@@ -92,14 +117,18 @@ const Sandbox = ({\nonClick={onFoundationClick}\nonHoverSlide={onSlideHover}\n>\n- <SandboxBaseMapSelector />\n+ <SandboxBaseMapSelector\n+ onBaseMapStyleChange={this.handleBaseMapStyleChange}\n+ baseMapStyle={this.state.baseMapStyle}\n+ />\n{tooltipInfo && <CivicSandboxTooltip tooltipData={tooltipInfo} />}\n</CivicSandboxMap>\n</BaseMap>\n</div>\n</div>\n);\n-};\n+ }\n+}\nSandbox.propTypes = {\ndata: PropTypes.object.isRequired,\n",
        "sim_msg_1": "Refactor Sandbox to class based component with UI state of baseMapStyle and baseMapStyleUrl; pass state values to SandboxBaseMapSelector.",
        "sim_diff_2": "diff --git a/components/App.js b/components/App.js @@ -54,7 +54,7 @@ export const updateProps = (newProps) => {\nappState[k] = newProps[k];\n}\n}\n- if (appState.pointerLock || appState.isXR) {\n+ if (appState.pointerLock || appState.isXR || !appState.selectedWeapon) {\nappContainer.style.display = 'none';\nappContainer.innerHTML = '';\nsetBindings(null, onclickBindings);\n",
        "sim_msg_2": "fix camera locked",
        "sim_diff_3": "diff --git a/src/components/appSwitch/AppSwitch.js b/src/components/appSwitch/AppSwitch.js @@ -18,6 +18,7 @@ import useAppState from '../../lib/hooks/useAppState'\nimport Splash from '../splash/Splash'\nimport config from '../../config/config'\nimport { delay } from '../../lib/utils/async'\n+import { assertStore } from '../../lib/undux/SimpleStore'\ntype LoadingProps = {\nnavigation: any,\n@@ -196,6 +197,11 @@ const AppSwitch = (props: LoadingProps) => {\nif (config.enableInvites !== true) {\nreturn\n}\n+\n+ if (!assertStore(gdstore, log, 'checkBonusInterval failed')) {\n+ return\n+ }\n+\nconst lastTimeBonusCheck = await userStorage.userProperties.get('lastBonusCheckDate')\nconst isUserWhitelisted = gdstore.get('isLoggedInCitizen') || (await goodWallet.isCitizen())\n",
        "sim_msg_3": "fix: add storeAssertion verification for checkBonusInterval function in AppSwitch"
    },
    {
        "org_diff": "diff --git a/packages/react/src/ReactCacheClient.js b/a/packages/react/src/ReactCacheClient.js @@ -10,25 +10,25 @@\n import {disableClientCache} from 'shared/ReactFeatureFlags';\n import {cache as cacheImpl} from './ReactCacheImpl';\n \n-export function cache<A: Iterable<mixed>, T>(fn: (...A) => T): (...A) => T {\n-  if (disableClientCache) {\n-    // On the client (i.e. not a Server Components environment) `cache` has\n-    // no caching behavior. We just return the function as-is.\n-    //\n-    // We intend to implement client caching in a future major release. In the\n-    // meantime, it's only exposed as an API so that Shared Components can use\n-    // per-request caching on the server without breaking on the client. But it\n-    // does mean they need to be aware of the behavioral difference.\n-    //\n-    // The rest of the behavior is the same as the server implementation — it\n-    // returns a new reference, extra properties like `displayName` are not\n-    // preserved, the length of the new function is 0, etc. That way apps can't\n-    // accidentally depend on those details.\n-    return function () {\n-      // $FlowFixMe[incompatible-call]: We don't want to use rest arguments since we transpile the code.\n-      return fn.apply(null, arguments);\n-    };\n-  } else {\n-    return cacheImpl(fn);\n-  }\n+export function noopCache<A: Iterable<mixed>, T>(fn: (...A) => T): (...A) => T {\n+  // On the client (i.e. not a Server Components environment) `cache` has\n+  // no caching behavior. We just return the function as-is.\n+  //\n+  // We intend to implement client caching in a future major release. In the\n+  // meantime, it's only exposed as an API so that Shared Components can use\n+  // per-request caching on the server without breaking on the client. But it\n+  // does mean they need to be aware of the behavioral difference.\n+  //\n+  // The rest of the behavior is the same as the server implementation — it\n+  // returns a new reference, extra properties like `displayName` are not\n+  // preserved, the length of the new function is 0, etc. That way apps can't\n+  // accidentally depend on those details.\n+  return function () {\n+    // $FlowFixMe[incompatible-call]: We don't want to use rest arguments since we transpile the code.\n+    return fn.apply(null, arguments);\n+  };\n }\n+\n+export const cache: typeof noopCache = disableClientCache\n+  ? noopCache\n+  : cacheImpl;",
        "sim_diff_0": "diff --git a/assets/js/components/data.js b/assets/js/components/data.js @@ -24,7 +24,7 @@ import md5 from 'md5';\nimport {\ngetStorage,\n- stringToSlug,\n+ getCurrentDateRange,\nfillFilterWithComponent,\ngetQueryParameter,\nsortObjectProperties,\n@@ -39,7 +39,6 @@ const {\naddFilter,\nremoveFilter,\n} = wp.hooks;\n-const { __ } = wp.i18n;\nexport const TYPE_CORE = 'core';\nexport const TYPE_MODULES = 'modules';\n@@ -64,19 +63,14 @@ const lazilySetupLocalCache = () => {\n* Respects the current dateRange value, if set.\n*\n* @param {Object} originalRequest Data request object.\n+ * @param {string} dateRange Date range slug.\n* @return {Object} New data request object.\n*/\n-const requestWithDateRange = ( originalRequest ) => {\n- /**\n- * Filter the date range used for queries.\n- *\n- * @param String The selected date range. Default 'Last 28 days'.\n- */\n- const dateRangeSlug = stringToSlug( applyFilters( 'googlesitekit.dateRange', __( 'Last 28 days', 'google-site-kit' ) ) );\n+const requestWithDateRange = ( originalRequest, dateRange ) => {\n// Make copies for reference safety, ensuring data exists.\nconst request = { data: {}, ...originalRequest };\n// Use the dateRange in request.data if passed, fallback to filter-provided value.\n- request.data = { dateRange: dateRangeSlug, ...request.data };\n+ request.data = { dateRange, ...request.data };\nreturn request;\n};\n@@ -115,9 +109,9 @@ const dataAPI = {\nreturn new Promise( ( resolve, reject ) => {\ntry {\nconst responseData = [];\n-\n+ const dateRange = getCurrentDateRange();\neach( combinedRequest, ( originalRequest ) => {\n- const request = requestWithDateRange( originalRequest );\n+ const request = requestWithDateRange( originalRequest, dateRange );\nrequest.key = this.getCacheKey( request.type, request.identifier, request.datapoint, request.data );\nconst cache = this.getCache( request.key, request.maxAge );\n@@ -145,8 +139,9 @@ const dataAPI = {\n// First, resolve any cache matches immediately, queue resolution of the rest.\nlet dataRequest = [];\nlet cacheDelay = 25;\n+ const dateRange = getCurrentDateRange();\neach( combinedRequest, ( originalRequest ) => {\n- const request = requestWithDateRange( originalRequest );\n+ const request = requestWithDateRange( originalRequest, dateRange );\nrequest.key = this.getCacheKey( request.type, request.identifier, request.datapoint, request.data );\nconst cache = this.getCache( request.key, request.maxAge );\n",
        "sim_msg_0": "refactor requestWithDateRange with given dateRange",
        "sim_diff_1": "diff --git a/lib/WebpackOptionsApply.js b/lib/WebpackOptionsApply.js @@ -201,7 +201,7 @@ class WebpackOptionsApply extends OptionsApply {\n}\nif (options.output.library || options.output.libraryTarget !== \"var\") {\n- let LibraryTemplatePlugin = require(\"./LibraryTemplatePlugin\");\n+ const LibraryTemplatePlugin = require(\"./LibraryTemplatePlugin\");\nnew LibraryTemplatePlugin(\noptions.output.library,\noptions.output.libraryTarget,\n@@ -245,7 +245,7 @@ class WebpackOptionsApply extends OptionsApply {\n: modern\n? \"\\n//# source\" + \"MappingURL=[url]\"\n: null;\n- let Plugin = evalWrapped\n+ const Plugin = evalWrapped\n? EvalSourceMapDevToolPlugin\n: SourceMapDevToolPlugin;\nnew Plugin({\n@@ -381,7 +381,7 @@ class WebpackOptionsApply extends OptionsApply {\nnew WarnCaseSensitiveModulesPlugin().apply(compiler);\nif (options.cache) {\n- let CachePlugin = require(\"./CachePlugin\");\n+ const CachePlugin = require(\"./CachePlugin\");\nnew CachePlugin(\ntypeof options.cache === \"object\" ? options.cache : null\n).apply(compiler);\n",
        "sim_msg_1": "change variable defined identifier let to const",
        "sim_diff_2": "diff --git a/assets/js/components/data.js b/assets/js/components/data.js @@ -59,6 +59,28 @@ const lazilySetupLocalCache = () => {\n}\n};\n+/**\n+ * Gets a copy of the given data request object with the data.dateRange populated via filter, if not set.\n+ * Respects the current dateRange value, if set.\n+ *\n+ * @param {Object} originalRequest Data request object.\n+ * @return {Object} New data request object.\n+ */\n+const requestWithDateRange = ( originalRequest ) => {\n+ /**\n+ * Filter the date range used for queries.\n+ *\n+ * @param String The selected date range. Default 'Last 28 days'.\n+ */\n+ const dateRangeSlug = stringToSlug( applyFilters( 'googlesitekit.dateRange', __( 'Last 28 days', 'google-site-kit' ) ) );\n+ // Make copies for reference safety, ensuring data exists.\n+ const request = { data: {}, ...originalRequest };\n+ // Use the dateRange in request.data if passed, fallback to filter-provided value.\n+ request.data = { dateRange: dateRangeSlug, ...request.data };\n+\n+ return request;\n+};\n+\nconst dataAPI = {\nmaxRequests: 10,\n@@ -94,19 +116,11 @@ const dataAPI = {\ntry {\nconst responseData = [];\n- /**\n- * Filter the date range used for queries.\n- *\n- * @param String The selected date range. Default 'Last 28 days'.\n- */\n- const dateRangeSlug = stringToSlug( applyFilters( 'googlesitekit.dateRange', __( 'Last 28 days', 'google-site-kit' ) ) );\n- each( combinedRequest, ( request ) => {\n- request.data = request.data || {};\n- request.data.dateRange = dateRangeSlug;\n-\n+ each( combinedRequest, ( originalRequest ) => {\n+ const request = requestWithDateRange( originalRequest );\nrequest.key = this.getCacheKey( request.type, request.identifier, request.datapoint, request.data );\n-\nconst cache = this.getCache( request.key, request.maxAge );\n+\nif ( 'undefined' !== typeof cache ) {\nresponseData[ request.key ] = cache;\n@@ -130,21 +144,12 @@ const dataAPI = {\ncombinedGet( combinedRequest, secondaryRequest = false ) {\n// First, resolve any cache matches immediately, queue resolution of the rest.\nlet dataRequest = [];\n-\n- /**\n- * Filter the date range used for queries.\n- *\n- * @param String The selected date range. Default 'Last 28 days'.\n- */\n- const dateRangeSlug = stringToSlug( applyFilters( 'googlesitekit.dateRange', __( 'Last 28 days', 'google-site-kit' ) ) );\nlet cacheDelay = 25;\n- each( combinedRequest, ( request ) => {\n- request.data = request.data || {};\n- request.data.dateRange = dateRangeSlug;\n-\n+ each( combinedRequest, ( originalRequest ) => {\n+ const request = requestWithDateRange( originalRequest );\nrequest.key = this.getCacheKey( request.type, request.identifier, request.datapoint, request.data );\n-\nconst cache = this.getCache( request.key, request.maxAge );\n+\nif ( 'undefined' !== typeof cache ) {\nsetTimeout( () => {\nthis.resolve( request, cache );\n",
        "sim_msg_2": "refactor dateRange default with filter in data.js\nFixes reverted change in",
        "sim_diff_3": "diff --git a/packages/component-library/src/Sandbox/Sandbox.js b/packages/component-library/src/Sandbox/Sandbox.js @@ -17,7 +17,31 @@ const baseMapWrapper = css(`\n}\n`);\n-const Sandbox = ({\n+class Sandbox extends React.Component {\n+ constructor(props) {\n+ super();\n+ this.state = {\n+ baseMapStyle: \"light\",\n+ baseMapStyleUrl: \"mapbox://styles/hackoregon/cjiazbo185eib2srytwzleplg\"\n+ };\n+ this.handleBaseMapStyleChange = this.handleBaseMapStyleChange.bind(this);\n+ }\n+\n+ handleBaseMapStyleChange = baseMapStyleChangeEvent => {\n+ baseMapStyleChangeEvent.target.value === \"light\"\n+ ? this.setState({\n+ baseMapStyle: \"light\",\n+ baseMapStyleUrl:\n+ \"mapbox://styles/hackoregon/cjiazbo185eib2srytwzleplg\"\n+ })\n+ : this.setState({\n+ baseMapStyle: \"dark\",\n+ baseMapStyleUrl: \"mapbox://styles/mapbox/dark-v9\"\n+ });\n+ };\n+\n+ render() {\n+ const {\ndata,\nlayerData,\ndefaultFoundation,\n@@ -40,7 +64,8 @@ const Sandbox = ({\ntooltipInfo,\nallSlides,\nfoundationMapProps\n-}) => {\n+ } = this.props;\n+\nreturn (\n<div className={styles}>\n<div\n@@ -81,7 +106,7 @@ const Sandbox = ({\n<div className={baseMapWrapper}>\n<BaseMap\n- mapboxStyle={\"mapbox://styles/mapbox/light-v9\"}\n+ mapboxStyle={this.state.baseMapStyleUrl}\ninitialZoom={10.5}\ninitialLatitude={45.5431}\ninitialLongitude={-122.5765}\n@@ -92,14 +117,18 @@ const Sandbox = ({\nonClick={onFoundationClick}\nonHoverSlide={onSlideHover}\n>\n- <SandboxBaseMapSelector />\n+ <SandboxBaseMapSelector\n+ onBaseMapStyleChange={this.handleBaseMapStyleChange}\n+ baseMapStyle={this.state.baseMapStyle}\n+ />\n{tooltipInfo && <CivicSandboxTooltip tooltipData={tooltipInfo} />}\n</CivicSandboxMap>\n</BaseMap>\n</div>\n</div>\n);\n-};\n+ }\n+}\nSandbox.propTypes = {\ndata: PropTypes.object.isRequired,\n",
        "sim_msg_3": "Refactor Sandbox to class based component with UI state of baseMapStyle and baseMapStyleUrl; pass state values to SandboxBaseMapSelector."
    }
]